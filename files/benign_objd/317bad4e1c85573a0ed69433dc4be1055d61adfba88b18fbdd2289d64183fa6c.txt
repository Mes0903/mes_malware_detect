
317bad4e1c85573a0ed69433dc4be1055d61adfba88b18fbdd2289d64183fa6c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	mov    DWORD PTR [rsp+0x30],ecx
   140001008:	lea    rdx,[rip+0x11721]        # 0x140012730
   14000100f:	lea    rcx,[rsp+0x30]
   140001014:	call   0x14000c6a0
   140001019:	int3   
   14000101a:	int3   
   14000101b:	int3   
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	mov    QWORD PTR [rsp+0x8],rbx
   140001025:	mov    QWORD PTR [rsp+0x10],rbp
   14000102a:	mov    QWORD PTR [rsp+0x18],rsi
   14000102f:	push   rdi
   140001030:	push   r12
   140001032:	push   r13
   140001034:	sub    rsp,0x20
   140001038:	mov    r12d,ecx
   14000103b:	lea    rcx,[rip+0x1457e]        # 0x1400155c0
   140001042:	xor    r13d,r13d
   140001045:	xor    edx,edx
   140001047:	mov    rbx,r13
   14000104a:	call   0x140001e14
   14000104f:	lea    ebp,[r13+0x1]
   140001053:	test   rax,rax
   140001056:	mov    rsi,rax
   140001059:	je     0x140001126
   14000105f:	nop
   140001060:	test   rbx,rbx
   140001063:	jne    0x140001126
   140001069:	mov    eax,r12d
   14000106c:	lea    edx,[rbx+0x6]
   14000106f:	xor    r9d,r9d
   140001072:	shr    eax,0x4
   140001075:	mov    rcx,rsi
   140001078:	add    ax,0x1
   14000107c:	movzx  r8d,ax
   140001080:	call   QWORD PTR [rip+0xdf9a]        # 0x14000f020
   140001086:	test   rax,rax
   140001089:	mov    rdi,rax
   14000108c:	jne    0x140001093
   14000108e:	mov    rbx,r13
   140001091:	jmp    0x140001109
   140001093:	mov    rdx,rax
   140001096:	mov    rcx,rsi
   140001099:	call   QWORD PTR [rip+0xdf61]        # 0x14000f000
   14000109f:	test   rax,rax
   1400010a2:	jne    0x1400010a9
   1400010a4:	mov    rbx,r13
   1400010a7:	jmp    0x140001104
   1400010a9:	mov    rcx,rax
   1400010ac:	call   QWORD PTR [rip+0xdf56]        # 0x14000f008
   1400010b2:	test   rax,rax
   1400010b5:	mov    rbx,rax
   1400010b8:	jne    0x1400010bf
   1400010ba:	mov    rbx,r13
   1400010bd:	jmp    0x140001104
   1400010bf:	mov    rdx,rdi
   1400010c2:	mov    rcx,rsi
   1400010c5:	call   QWORD PTR [rip+0xdf45]        # 0x14000f010
   1400010cb:	mov    ecx,r12d
   1400010ce:	mov    r11d,eax
   1400010d1:	add    r11,rbx
   1400010d4:	and    ecx,0xf
   1400010d7:	jbe    0x1400010f2
   1400010d9:	data16 xchg ax,ax
   1400010dc:	data16 data16 xchg ax,ax
   1400010e0:	cmp    rbx,r11
   1400010e3:	jae    0x1400010f7
   1400010e5:	add    ecx,0xffffffff
   1400010e8:	movzx  eax,WORD PTR [rbx]
   1400010eb:	lea    rbx,[rbx+rax*2+0x2]
   1400010f0:	jne    0x1400010e0
   1400010f2:	cmp    rbx,r11
   1400010f5:	jb     0x1400010fc
   1400010f7:	mov    rbx,r13
   1400010fa:	jmp    0x140001104
   1400010fc:	cmp    WORD PTR [rbx],r13w
   140001100:	cmove  rbx,r13
   140001104:	test   rbx,rbx
   140001107:	jne    0x140001141
   140001109:	lea    rcx,[rip+0x144b0]        # 0x1400155c0
   140001110:	mov    edx,ebp
   140001112:	call   0x140001e14
   140001117:	add    ebp,0x1
   14000111a:	test   rax,rax
   14000111d:	mov    rsi,rax
   140001120:	jne    0x140001060
   140001126:	xor    eax,eax
   140001128:	mov    rbx,QWORD PTR [rsp+0x40]
   14000112d:	mov    rbp,QWORD PTR [rsp+0x48]
   140001132:	mov    rsi,QWORD PTR [rsp+0x50]
   140001137:	add    rsp,0x20
   14000113b:	pop    r13
   14000113d:	pop    r12
   14000113f:	pop    rdi
   140001140:	ret    
   140001141:	mov    rax,rsi
   140001144:	jmp    0x140001128
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    rax,rsp
   140001153:	mov    QWORD PTR [rax+0x8],rcx
   140001157:	push   rdi
   140001158:	sub    rsp,0x50
   14000115c:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140001165:	mov    QWORD PTR [rax+0x10],rbx
   140001169:	mov    QWORD PTR [rax+0x20],rsi
   14000116d:	mov    rsi,rcx
   140001170:	xor    edi,edi
   140001172:	mov    DWORD PTR [rsp+0x70],edi
   140001176:	mov    QWORD PTR [rax+0x18],rdi
   14000117a:	mov    QWORD PTR [rax-0x28],rdi
   14000117e:	mov    DWORD PTR [rax-0x30],edi
   140001181:	lea    rax,[rax+0x18]
   140001185:	mov    QWORD PTR [rsp+0x20],rax
   14000118a:	mov    r9d,0x400
   140001190:	mov    r8d,edx
   140001193:	xor    edx,edx
   140001195:	mov    ecx,0x1300
   14000119a:	call   QWORD PTR [rip+0xde90]        # 0x14000f030
   1400011a0:	mov    rbx,QWORD PTR [rsp+0x70]
   1400011a5:	lea    rcx,[rip+0x12e54]        # 0x140014000
   1400011ac:	mov    rax,QWORD PTR [rip+0x12e4d]        # 0x140014000
   1400011b3:	call   QWORD PTR [rax+0x18]
   1400011b6:	add    rax,0x18
   1400011ba:	mov    QWORD PTR [rsi],rax
   1400011bd:	test   rbx,rbx
   1400011c0:	je     0x140001201
   1400011c2:	test   rbx,0xffffffffffff0000
   1400011c9:	jne    0x1400011ec
   1400011cb:	movzx  edi,bx
   1400011ce:	xor    edx,edx
   1400011d0:	mov    ecx,edi
   1400011d2:	call   0x140001020
   1400011d7:	test   rax,rax
   1400011da:	je     0x140001212
   1400011dc:	mov    r8d,edi
   1400011df:	mov    rdx,rax
   1400011e2:	mov    rcx,rsi
   1400011e5:	call   0x1400016a0
   1400011ea:	jmp    0x140001212
   1400011ec:	xor    eax,eax
   1400011ee:	or     rcx,0xffffffffffffffff
   1400011f2:	mov    rdi,rbx
   1400011f5:	repnz scas ax,WORD PTR es:[rdi]
   1400011f8:	not    rcx
   1400011fb:	sub    rcx,0x1
   1400011ff:	jmp    0x140001203
   140001201:	mov    ecx,edi
   140001203:	mov    r8d,ecx
   140001206:	mov    rdx,rbx
   140001209:	mov    rcx,rsi
   14000120c:	call   0x140001830
   140001211:	nop
   140001212:	mov    rcx,QWORD PTR [rsp+0x70]
   140001217:	call   QWORD PTR [rip+0xde0b]        # 0x14000f028
   14000121d:	mov    rax,rsi
   140001220:	mov    rbx,QWORD PTR [rsp+0x68]
   140001225:	mov    rsi,QWORD PTR [rsp+0x78]
   14000122a:	add    rsp,0x50
   14000122e:	pop    rdi
   14000122f:	ret    
   140001230:	rex push rbp
   140001232:	sub    rsp,0x20
   140001236:	mov    rbp,rdx
   140001239:	mov    rcx,QWORD PTR [rbp+0x60]
   14000123d:	call   0x140001670
   140001242:	add    rsp,0x20
   140001246:	pop    rbp
   140001247:	ret    
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	rex push rbp
   140001252:	push   rsi
   140001253:	push   rdi
   140001254:	push   r12
   140001256:	push   r13
   140001258:	push   r14
   14000125a:	push   r15
   14000125c:	sub    rsp,0x40
   140001260:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001269:	mov    QWORD PTR [rsp+0x80],rbx
   140001271:	mov    r13,rdx
   140001274:	mov    r14d,ecx
   140001277:	xor    ecx,ecx
   140001279:	call   QWORD PTR [rip+0xe041]        # 0x14000f2c0
   14000127f:	xor    r15b,r15b
   140001282:	lea    rcx,[rip+0x12d77]        # 0x140014000
   140001289:	mov    rax,QWORD PTR [rip+0x12d70]        # 0x140014000
   140001290:	call   QWORD PTR [rax+0x18]
   140001293:	lea    rbx,[rax+0x18]
   140001297:	mov    QWORD PTR [rsp+0x90],rbx
   14000129f:	or     rbp,0xffffffffffffffff
   1400012a3:	cmp    r14d,0x1
   1400012a7:	jle    0x1400013d0
   1400012ad:	mov    rdx,QWORD PTR [r13+0x8]
   1400012b1:	xor    r12d,r12d
   1400012b4:	test   rdx,rdx
   1400012b7:	jne    0x1400012be
   1400012b9:	mov    ecx,r12d
   1400012bc:	jmp    0x1400012d0
   1400012be:	xor    eax,eax
   1400012c0:	mov    rcx,rbp
   1400012c3:	mov    rdi,rdx
   1400012c6:	repnz scas ax,WORD PTR es:[rdi]
   1400012c9:	not    rcx
   1400012cc:	sub    rcx,0x1
   1400012d0:	mov    r8d,ecx
   1400012d3:	lea    rcx,[rsp+0x90]
   1400012db:	call   0x140001830
   1400012e0:	xor    r11d,r11d
   1400012e3:	lea    rdi,[rip+0xfc8e]        # 0x140010f78
   1400012ea:	mov    rbx,QWORD PTR [rsp+0x90]
   1400012f2:	mov    rsi,rbx
   1400012f5:	mov    ecx,0x3
   1400012fa:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   1400012fd:	je     0x140001306
   1400012ff:	sbb    r11d,r11d
   140001302:	sbb    r11d,0xffffffff
   140001306:	test   r11d,r11d
   140001309:	sete   al
   14000130c:	test   al,al
   14000130e:	jne    0x140001338
   140001310:	xor    eax,eax
   140001312:	lea    rdi,[rip+0xfc67]        # 0x140010f80
   140001319:	mov    rsi,rbx
   14000131c:	mov    ecx,0x3
   140001321:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140001324:	je     0x14000132b
   140001326:	sbb    eax,eax
   140001328:	sbb    eax,0xffffffff
   14000132b:	test   eax,eax
   14000132d:	sete   al
   140001330:	test   al,al
   140001332:	je     0x1400013d0
   140001338:	mov    r15b,0x1
   14000133b:	cmp    r14d,0x2
   14000133f:	jle    0x140001376
   140001341:	mov    rdx,QWORD PTR [r13+0x10]
   140001345:	test   rdx,rdx
   140001348:	je     0x14000135c
   14000134a:	xor    eax,eax
   14000134c:	mov    rcx,rbp
   14000134f:	mov    rdi,rdx
   140001352:	repnz scas ax,WORD PTR es:[rdi]
   140001355:	not    rcx
   140001358:	lea    r12,[rcx-0x1]
   14000135c:	mov    r8d,r12d
   14000135f:	lea    rcx,[rsp+0x90]
   140001367:	call   0x140001830
   14000136c:	mov    rbx,QWORD PTR [rsp+0x90]
   140001374:	jmp    0x1400013d0
   140001376:	lea    rdx,[rbx-0x18]
   14000137a:	mov    rdi,QWORD PTR [rdx]
   14000137d:	cmp    DWORD PTR [rdx+0x8],r12d
   140001381:	je     0x1400013d0
   140001383:	cmp    DWORD PTR [rdx+0x10],r12d
   140001387:	jge    0x1400013a4
   140001389:	cmp    DWORD PTR [rbx-0xc],r12d
   14000138d:	jge    0x14000139a
   14000138f:	mov    ecx,0x80070057
   140001394:	call   0x140001000
   140001399:	int3   
   14000139a:	mov    DWORD PTR [rbx-0x10],r12d
   14000139e:	mov    WORD PTR [rbx],r12w
   1400013a2:	jmp    0x1400013d0
   1400013a4:	mov    eax,ebp
   1400013a6:	lock xadd DWORD PTR [rdx+0x10],eax
   1400013ab:	add    eax,0xffffffff
   1400013ae:	test   eax,eax
   1400013b0:	jg     0x1400013bb
   1400013b2:	mov    rcx,QWORD PTR [rdx]
   1400013b5:	mov    rax,QWORD PTR [rcx]
   1400013b8:	call   QWORD PTR [rax+0x8]
   1400013bb:	mov    rax,QWORD PTR [rdi]
   1400013be:	mov    rcx,rdi
   1400013c1:	call   QWORD PTR [rax+0x18]
   1400013c4:	lea    rbx,[rax+0x18]
   1400013c8:	mov    QWORD PTR [rsp+0x90],rbx
   1400013d0:	cmp    DWORD PTR [rbx-0x10],0x0
   1400013d4:	jne    0x1400013ee
   1400013d6:	mov    rdx,QWORD PTR [r13+0x0]
   1400013da:	mov    r8,rdx
   1400013dd:	lea    rcx,[rip+0xfbac]        # 0x140010f90
   1400013e4:	call   0x140001fb0
   1400013e9:	jmp    0x14000160b
   1400013ee:	test   r15b,r15b
   1400013f1:	je     0x140001505
   1400013f7:	mov    rcx,QWORD PTR [rbx-0x18]
   1400013fb:	mov    rax,QWORD PTR [rcx]
   1400013fe:	call   QWORD PTR [rax+0x20]
   140001401:	mov    rcx,rax
   140001404:	cmp    DWORD PTR [rbx-0x8],0x0
   140001408:	jl     0x14000141b
   14000140a:	cmp    rax,QWORD PTR [rbx-0x18]
   14000140e:	jne    0x14000141b
   140001410:	lea    rdi,[rbx-0x18]
   140001414:	lock add DWORD PTR [rbx-0x8],0x1
   140001419:	jmp    0x140001459
   14000141b:	mov    rax,QWORD PTR [rax]
   14000141e:	mov    r8d,0x2
   140001424:	mov    edx,DWORD PTR [rbx-0x10]
   140001427:	call   QWORD PTR [rax]
   140001429:	mov    rdi,rax
   14000142c:	test   rax,rax
   14000142f:	jne    0x140001437
   140001431:	call   0x140001990
   140001436:	int3   
   140001437:	mov    eax,DWORD PTR [rbx-0x10]
   14000143a:	mov    DWORD PTR [rdi+0x8],eax
   14000143d:	mov    eax,DWORD PTR [rbx-0x10]
   140001440:	add    eax,0x1
   140001443:	movsxd rdx,eax
   140001446:	lea    r9,[rdx+rdx*1]
   14000144a:	mov    r8,rbx
   14000144d:	add    rdx,rdx
   140001450:	lea    rcx,[rdi+0x18]
   140001454:	call   0x1400021d0
   140001459:	add    rdi,0x18
   14000145d:	mov    QWORD PTR [rsp+0x30],rdi
   140001462:	mov    rcx,rdi
   140001465:	call   QWORD PTR [rip+0xde35]        # 0x14000f2a0
   14000146b:	mov    esi,eax
   14000146d:	lea    rdx,[rdi-0x18]
   140001471:	mov    ecx,ebp
   140001473:	lock xadd DWORD PTR [rdx+0x10],ecx
   140001478:	add    ecx,0xffffffff
   14000147b:	test   ecx,ecx
   14000147d:	jg     0x140001488
   14000147f:	mov    rcx,QWORD PTR [rdx]
   140001482:	mov    rax,QWORD PTR [rcx]
   140001485:	call   QWORD PTR [rax+0x8]
   140001488:	test   esi,esi
   14000148a:	js     0x1400014a8
   14000148c:	mov    rbx,QWORD PTR [rsp+0x90]
   140001494:	mov    rdx,rbx
   140001497:	lea    rcx,[rip+0xfbd2]        # 0x140011070
   14000149e:	call   0x140001fb0
   1400014a3:	jmp    0x14000160b
   1400014a8:	mov    edx,esi
   1400014aa:	lea    rcx,[rsp+0x98]
   1400014b2:	call   0x140001150
   1400014b7:	mov    r9,QWORD PTR [rax]
   1400014ba:	mov    r8d,esi
   1400014bd:	mov    rdx,QWORD PTR [rsp+0x90]
   1400014c5:	lea    rcx,[rip+0xfc04]        # 0x1400110d0
   1400014cc:	call   0x140001fb0
   1400014d1:	mov    rdx,QWORD PTR [rsp+0x98]
   1400014d9:	add    rdx,0xffffffffffffffe8
   1400014dd:	mov    eax,ebp
   1400014df:	lock xadd DWORD PTR [rdx+0x10],eax
   1400014e4:	add    eax,0xffffffff
   1400014e7:	test   eax,eax
   1400014e9:	jg     0x140001603
   1400014ef:	mov    rcx,QWORD PTR [rdx]
   1400014f2:	mov    rax,QWORD PTR [rcx]
   1400014f5:	call   QWORD PTR [rax+0x8]
   1400014f8:	mov    rbx,QWORD PTR [rsp+0x90]
   140001500:	jmp    0x14000160b
   140001505:	mov    rcx,QWORD PTR [rbx-0x18]
   140001509:	mov    rax,QWORD PTR [rcx]
   14000150c:	call   QWORD PTR [rax+0x20]
   14000150f:	mov    rcx,rax
   140001512:	cmp    DWORD PTR [rbx-0x8],0x0
   140001516:	jl     0x140001529
   140001518:	cmp    rax,QWORD PTR [rbx-0x18]
   14000151c:	jne    0x140001529
   14000151e:	lea    rdi,[rbx-0x18]
   140001522:	lock add DWORD PTR [rbx-0x8],0x1
   140001527:	jmp    0x140001567
   140001529:	mov    rax,QWORD PTR [rax]
   14000152c:	mov    r8d,0x2
   140001532:	mov    edx,DWORD PTR [rbx-0x10]
   140001535:	call   QWORD PTR [rax]
   140001537:	mov    rdi,rax
   14000153a:	test   rax,rax
   14000153d:	jne    0x140001545
   14000153f:	call   0x140001990
   140001544:	int3   
   140001545:	mov    eax,DWORD PTR [rbx-0x10]
   140001548:	mov    DWORD PTR [rdi+0x8],eax
   14000154b:	mov    eax,DWORD PTR [rbx-0x10]
   14000154e:	add    eax,0x1
   140001551:	movsxd rdx,eax
   140001554:	lea    r9,[rdx+rdx*1]
   140001558:	mov    r8,rbx
   14000155b:	add    rdx,rdx
   14000155e:	lea    rcx,[rdi+0x18]
   140001562:	call   0x1400021d0
   140001567:	add    rdi,0x18
   14000156b:	mov    QWORD PTR [rsp+0x38],rdi
   140001570:	mov    rcx,rdi
   140001573:	call   QWORD PTR [rip+0xdd1f]        # 0x14000f298
   140001579:	mov    esi,eax
   14000157b:	lea    rdx,[rdi-0x18]
   14000157f:	mov    ecx,ebp
   140001581:	lock xadd DWORD PTR [rdx+0x10],ecx
   140001586:	add    ecx,0xffffffff
   140001589:	test   ecx,ecx
   14000158b:	jg     0x140001596
   14000158d:	mov    rcx,QWORD PTR [rdx]
   140001590:	mov    rax,QWORD PTR [rcx]
   140001593:	call   QWORD PTR [rax+0x8]
   140001596:	test   esi,esi
   140001598:	js     0x1400015b3
   14000159a:	mov    rbx,QWORD PTR [rsp+0x90]
   1400015a2:	mov    rdx,rbx
   1400015a5:	lea    rcx,[rip+0xfbb4]        # 0x140011160
   1400015ac:	call   0x140001fb0
   1400015b1:	jmp    0x14000160b
   1400015b3:	mov    edx,esi
   1400015b5:	lea    rcx,[rsp+0x20]
   1400015ba:	call   0x140001150
   1400015bf:	mov    r9,QWORD PTR [rax]
   1400015c2:	mov    r8d,esi
   1400015c5:	mov    rdx,QWORD PTR [rsp+0x90]
   1400015cd:	lea    rcx,[rip+0xfbec]        # 0x1400111c0
   1400015d4:	call   0x140001fb0
   1400015d9:	mov    rdx,QWORD PTR [rsp+0x20]
   1400015de:	add    rdx,0xffffffffffffffe8
   1400015e2:	mov    eax,ebp
   1400015e4:	lock xadd DWORD PTR [rdx+0x10],eax
   1400015e9:	add    eax,0xffffffff
   1400015ec:	test   eax,eax
   1400015ee:	jg     0x140001603
   1400015f0:	mov    rcx,QWORD PTR [rdx]
   1400015f3:	mov    rax,QWORD PTR [rcx]
   1400015f6:	call   QWORD PTR [rax+0x8]
   1400015f9:	mov    rbx,QWORD PTR [rsp+0x90]
   140001601:	jmp    0x14000160b
   140001603:	mov    rbx,QWORD PTR [rsp+0x90]
   14000160b:	call   QWORD PTR [rip+0xdcb7]        # 0x14000f2c8
   140001611:	nop
   140001612:	lea    rdx,[rbx-0x18]
   140001616:	lock xadd DWORD PTR [rdx+0x10],ebp
   14000161b:	add    ebp,0xffffffff
   14000161e:	test   ebp,ebp
   140001620:	jg     0x14000162b
   140001622:	mov    rcx,QWORD PTR [rdx]
   140001625:	mov    rax,QWORD PTR [rcx]
   140001628:	call   QWORD PTR [rax+0x8]
   14000162b:	xor    eax,eax
   14000162d:	mov    rbx,QWORD PTR [rsp+0x80]
   140001635:	add    rsp,0x40
   140001639:	pop    r15
   14000163b:	pop    r14
   14000163d:	pop    r13
   14000163f:	pop    r12
   140001641:	pop    rdi
   140001642:	pop    rsi
   140001643:	pop    rbp
   140001644:	ret    
   140001645:	int3   
   140001646:	int3   
   140001647:	int3   
   140001648:	int3   
   140001649:	int3   
   14000164a:	int3   
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	rex push rbp
   140001652:	sub    rsp,0x20
   140001656:	mov    rbp,rdx
   140001659:	lea    rcx,[rbp+0x90]
   140001660:	call   0x140001670
   140001665:	add    rsp,0x20
   140001669:	pop    rbp
   14000166a:	ret    
   14000166b:	int3   
   14000166c:	int3   
   14000166d:	int3   
   14000166e:	int3   
   14000166f:	int3   
   140001670:	sub    rsp,0x28
   140001674:	mov    rdx,QWORD PTR [rcx]
   140001677:	sub    rdx,0x18
   14000167b:	or     eax,0xffffffff
   14000167e:	lock xadd DWORD PTR [rdx+0x10],eax
   140001683:	add    eax,0xffffffff
   140001686:	test   eax,eax
   140001688:	jg     0x140001693
   14000168a:	mov    rcx,QWORD PTR [rdx]
   14000168d:	mov    rax,QWORD PTR [rcx]
   140001690:	call   QWORD PTR [rax+0x8]
   140001693:	add    rsp,0x28
   140001697:	ret    
   140001698:	int3   
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400016aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400016af:	mov    QWORD PTR [rsp+0x20],rdi
   1400016b4:	push   r12
   1400016b6:	sub    rsp,0x20
   1400016ba:	mov    eax,r8d
   1400016bd:	mov    rbp,rdx
   1400016c0:	mov    ebx,r8d
   1400016c3:	shr    eax,0x4
   1400016c6:	mov    rsi,rcx
   1400016c9:	mov    r8d,0x6
   1400016cf:	add    ax,0x1
   1400016d3:	mov    rcx,rbp
   1400016d6:	movzx  edx,ax
   1400016d9:	call   QWORD PTR [rip+0xd939]        # 0x14000f018
   1400016df:	test   rax,rax
   1400016e2:	mov    r12,rax
   1400016e5:	je     0x140001811
   1400016eb:	mov    rdx,rax
   1400016ee:	mov    rcx,rbp
   1400016f1:	call   QWORD PTR [rip+0xd909]        # 0x14000f000
   1400016f7:	test   rax,rax
   1400016fa:	je     0x140001811
   140001700:	mov    rcx,rax
   140001703:	call   QWORD PTR [rip+0xd8ff]        # 0x14000f008
   140001709:	test   rax,rax
   14000170c:	mov    rdi,rax
   14000170f:	je     0x140001811
   140001715:	mov    rdx,r12
   140001718:	mov    rcx,rbp
   14000171b:	call   QWORD PTR [rip+0xd8ef]        # 0x14000f010
   140001721:	mov    r11d,eax
   140001724:	add    r11,rdi
   140001727:	and    ebx,0xf
   14000172a:	jbe    0x140001746
   14000172c:	data16 data16 xchg ax,ax
   140001730:	cmp    rdi,r11
   140001733:	jae    0x140001811
   140001739:	add    ebx,0xffffffff
   14000173c:	movzx  eax,WORD PTR [rdi]
   14000173f:	lea    rdi,[rdi+rax*2+0x2]
   140001744:	jne    0x140001730
   140001746:	cmp    rdi,r11
   140001749:	jae    0x140001811
   14000174f:	movzx  eax,WORD PTR [rdi]
   140001752:	test   ax,ax
   140001755:	je     0x140001811
   14000175b:	movzx  ebx,ax
   14000175e:	mov    rax,QWORD PTR [rsi]
   140001761:	mov    ecx,0x1
   140001766:	sub    ecx,DWORD PTR [rax-0x8]
   140001769:	mov    eax,DWORD PTR [rax-0xc]
   14000176c:	sub    eax,ebx
   14000176e:	or     ecx,eax
   140001770:	jge    0x14000177c
   140001772:	mov    edx,ebx
   140001774:	mov    rcx,rsi
   140001777:	call   0x1400019a0
   14000177c:	movzx  ecx,WORD PTR [rdi]
   14000177f:	lea    r8,[rdi+0x2]
   140001783:	cmp    ecx,0xffffffff
   140001786:	jne    0x140001799
   140001788:	or     rcx,0xffffffffffffffff
   14000178c:	xor    eax,eax
   14000178e:	mov    rdi,r8
   140001791:	repnz scas ax,WORD PTR es:[rdi]
   140001794:	not    rcx
   140001797:	and    ecx,ecx
   140001799:	movsxd r9,ecx
   14000179c:	mov    rcx,QWORD PTR [rsi]
   14000179f:	lea    rdi,[rbx+rbx*1]
   1400017a3:	mov    rdx,rdi
   1400017a6:	add    r9,r9
   1400017a9:	call   0x1400021d0
   1400017ae:	test   eax,eax
   1400017b0:	je     0x1400017e7
   1400017b2:	cmp    eax,0xc
   1400017b5:	je     0x1400017dc
   1400017b7:	cmp    eax,0x16
   1400017ba:	je     0x1400017d1
   1400017bc:	cmp    eax,0x22
   1400017bf:	je     0x1400017d1
   1400017c1:	cmp    eax,0x50
   1400017c4:	je     0x1400017e7
   1400017c6:	mov    ecx,0x80004005
   1400017cb:	call   0x140001000
   1400017d0:	int3   
   1400017d1:	mov    ecx,0x80070057
   1400017d6:	call   0x140001000
   1400017db:	int3   
   1400017dc:	mov    ecx,0x8007000e
   1400017e1:	call   0x140001000
   1400017e6:	int3   
   1400017e7:	test   ebx,ebx
   1400017e9:	js     0x140001806
   1400017eb:	mov    rcx,QWORD PTR [rsi]
   1400017ee:	cmp    ebx,DWORD PTR [rcx-0xc]
   1400017f1:	jg     0x140001806
   1400017f3:	mov    DWORD PTR [rcx-0x10],ebx
   1400017f6:	mov    rcx,QWORD PTR [rsi]
   1400017f9:	mov    eax,0x1
   1400017fe:	mov    WORD PTR [rdi+rcx*1],0x0
   140001804:	jmp    0x140001813
   140001806:	mov    ecx,0x80070057
   14000180b:	call   0x140001000
   140001810:	int3   
   140001811:	xor    eax,eax
   140001813:	mov    rbx,QWORD PTR [rsp+0x30]
   140001818:	mov    rbp,QWORD PTR [rsp+0x38]
   14000181d:	mov    rsi,QWORD PTR [rsp+0x40]
   140001822:	mov    rdi,QWORD PTR [rsp+0x48]
   140001827:	add    rsp,0x20
   14000182b:	pop    r12
   14000182d:	ret    
   14000182e:	int3   
   14000182f:	int3   
   140001830:	mov    QWORD PTR [rsp+0x18],rbx
   140001835:	mov    QWORD PTR [rsp+0x20],rbp
   14000183a:	push   rdi
   14000183b:	sub    rsp,0x20
   14000183f:	test   r8d,r8d
   140001842:	movsxd rdi,r8d
   140001845:	mov    rbp,rdx
   140001848:	mov    rbx,rcx
   14000184b:	jne    0x1400018d4
   140001851:	mov    rax,QWORD PTR [rcx]
   140001854:	cmp    DWORD PTR [rax-0x10],r8d
   140001858:	mov    rdi,QWORD PTR [rax-0x18]
   14000185c:	lea    rdx,[rax-0x18]
   140001860:	je     0x140001969
   140001866:	cmp    DWORD PTR [rdx+0x10],r8d
   14000186a:	jge    0x14000189c
   14000186c:	cmp    DWORD PTR [rax-0xc],r8d
   140001870:	jge    0x14000187d
   140001872:	mov    ecx,0x80070057
   140001877:	call   0x140001000
   14000187c:	int3   
   14000187d:	mov    DWORD PTR [rax-0x10],0x0
   140001884:	mov    rax,QWORD PTR [rcx]
   140001887:	mov    WORD PTR [rax],0x0
   14000188c:	mov    rbx,QWORD PTR [rsp+0x40]
   140001891:	mov    rbp,QWORD PTR [rsp+0x48]
   140001896:	add    rsp,0x20
   14000189a:	pop    rdi
   14000189b:	ret    
   14000189c:	or     eax,0xffffffff
   14000189f:	lock xadd DWORD PTR [rdx+0x10],eax
   1400018a4:	add    eax,0xffffffff
   1400018a7:	test   eax,eax
   1400018a9:	jg     0x1400018b4
   1400018ab:	mov    rcx,QWORD PTR [rdx]
   1400018ae:	mov    rax,QWORD PTR [rcx]
   1400018b1:	call   QWORD PTR [rax+0x8]
   1400018b4:	mov    rax,QWORD PTR [rdi]
   1400018b7:	mov    rcx,rdi
   1400018ba:	call   QWORD PTR [rax+0x18]
   1400018bd:	add    rax,0x18
   1400018c1:	mov    QWORD PTR [rbx],rax
   1400018c4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400018c9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400018ce:	add    rsp,0x20
   1400018d2:	pop    rdi
   1400018d3:	ret    
   1400018d4:	test   rdx,rdx
   1400018d7:	jne    0x1400018e4
   1400018d9:	mov    ecx,0x80070057
   1400018de:	call   0x140001000
   1400018e3:	int3   
   1400018e4:	mov    rax,QWORD PTR [rcx]
   1400018e7:	mov    QWORD PTR [rsp+0x30],rsi
   1400018ec:	mov    QWORD PTR [rsp+0x38],r12
   1400018f1:	mov    esi,DWORD PTR [rax-0x10]
   1400018f4:	mov    r12,rdx
   1400018f7:	mov    ecx,0x1
   1400018fc:	sub    ecx,DWORD PTR [rax-0x8]
   1400018ff:	sub    r12,rax
   140001902:	mov    eax,DWORD PTR [rax-0xc]
   140001905:	sub    eax,edi
   140001907:	sar    r12,1
   14000190a:	or     ecx,eax
   14000190c:	jge    0x140001918
   14000190e:	mov    edx,edi
   140001910:	mov    rcx,rbx
   140001913:	call   0x1400019a0
   140001918:	cmp    r12,rsi
   14000191b:	mov    rcx,QWORD PTR [rbx]
   14000191e:	ja     0x140001935
   140001920:	lea    rsi,[rdi+rdi*1]
   140001924:	lea    r8,[rcx+r12*2]
   140001928:	mov    r9,rsi
   14000192b:	mov    rdx,rsi
   14000192e:	call   0x140002140
   140001933:	jmp    0x140001947
   140001935:	lea    rsi,[rdi+rdi*1]
   140001939:	mov    r8,rbp
   14000193c:	mov    r9,rsi
   14000193f:	mov    rdx,rsi
   140001942:	call   0x1400021d0
   140001947:	test   edi,edi
   140001949:	mov    r12,QWORD PTR [rsp+0x38]
   14000194e:	js     0x140001979
   140001950:	mov    rax,QWORD PTR [rbx]
   140001953:	cmp    edi,DWORD PTR [rax-0xc]
   140001956:	jg     0x140001979
   140001958:	mov    DWORD PTR [rax-0x10],edi
   14000195b:	mov    rax,QWORD PTR [rbx]
   14000195e:	mov    WORD PTR [rsi+rax*1],0x0
   140001964:	mov    rsi,QWORD PTR [rsp+0x30]
   140001969:	mov    rbx,QWORD PTR [rsp+0x40]
   14000196e:	mov    rbp,QWORD PTR [rsp+0x48]
   140001973:	add    rsp,0x20
   140001977:	pop    rdi
   140001978:	ret    
   140001979:	mov    ecx,0x80070057
   14000197e:	call   0x140001000
   140001983:	int3   
   140001984:	int3   
   140001985:	int3   
   140001986:	int3   
   140001987:	int3   
   140001988:	int3   
   140001989:	int3   
   14000198a:	int3   
   14000198b:	int3   
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	sub    rsp,0x28
   140001994:	mov    ecx,0x8007000e
   140001999:	call   0x140001000
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	sub    rsp,0x28
   1400019a4:	mov    r8d,edx
   1400019a7:	mov    rdx,QWORD PTR [rcx]
   1400019aa:	mov    eax,DWORD PTR [rdx-0x10]
   1400019ad:	cmp    eax,r8d
   1400019b0:	cmovg  r8d,eax
   1400019b4:	cmp    DWORD PTR [rdx-0x8],0x1
   1400019b8:	jle    0x1400019c6
   1400019ba:	mov    edx,r8d
   1400019bd:	add    rsp,0x28
   1400019c1:	jmp    0x140001a00
   1400019c6:	mov    edx,DWORD PTR [rdx-0xc]
   1400019c9:	cmp    edx,r8d
   1400019cc:	jge    0x1400019fa
   1400019ce:	cmp    edx,0x400
   1400019d4:	jle    0x1400019ec
   1400019d6:	add    edx,0x400
   1400019dc:	cmp    edx,r8d
   1400019df:	cmovl  edx,r8d
   1400019e3:	add    rsp,0x28
   1400019e7:	jmp    0x140001ab0
   1400019ec:	add    edx,edx
   1400019ee:	cmp    edx,r8d
   1400019f1:	cmovl  edx,r8d
   1400019f5:	call   0x140001ab0
   1400019fa:	add    rsp,0x28
   1400019fe:	ret    
   1400019ff:	int3   
   140001a00:	mov    QWORD PTR [rsp+0x8],rbx
   140001a05:	mov    QWORD PTR [rsp+0x10],rbp
   140001a0a:	mov    QWORD PTR [rsp+0x18],rsi
   140001a0f:	mov    QWORD PTR [rsp+0x20],rdi
   140001a14:	push   r12
   140001a16:	sub    rsp,0x20
   140001a1a:	mov    rbx,QWORD PTR [rcx]
   140001a1d:	mov    rsi,rcx
   140001a20:	mov    edi,edx
   140001a22:	mov    rcx,QWORD PTR [rbx-0x18]
   140001a26:	mov    ebp,DWORD PTR [rbx-0x10]
   140001a29:	mov    rax,QWORD PTR [rcx]
   140001a2c:	call   QWORD PTR [rax+0x20]
   140001a2f:	mov    r8d,0x2
   140001a35:	mov    edx,edi
   140001a37:	mov    r9,QWORD PTR [rax]
   140001a3a:	mov    rcx,rax
   140001a3d:	call   QWORD PTR [r9]
   140001a40:	test   rax,rax
   140001a43:	mov    r12,rax
   140001a46:	jne    0x140001a4e
   140001a48:	call   0x140001990
   140001a4d:	int3   
   140001a4e:	cmp    ebp,edi
   140001a50:	mov    r8,rbx
   140001a53:	cmovl  edi,ebp
   140001a56:	add    edi,0x1
   140001a59:	movsxd rdx,edi
   140001a5c:	lea    rdi,[rax+0x18]
   140001a60:	add    rdx,rdx
   140001a63:	mov    rcx,rdi
   140001a66:	mov    r9,rdx
   140001a69:	call   0x1400021d0
   140001a6e:	mov    DWORD PTR [r12+0x8],ebp
   140001a73:	or     eax,0xffffffff
   140001a76:	lock xadd DWORD PTR [rbx-0x8],eax
   140001a7b:	add    eax,0xffffffff
   140001a7e:	test   eax,eax
   140001a80:	jg     0x140001a90
   140001a82:	mov    rcx,QWORD PTR [rbx-0x18]
   140001a86:	lea    rdx,[rbx-0x18]
   140001a8a:	mov    rax,QWORD PTR [rcx]
   140001a8d:	call   QWORD PTR [rax+0x8]
   140001a90:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a95:	mov    rbp,QWORD PTR [rsp+0x38]
   140001a9a:	mov    QWORD PTR [rsi],rdi
   140001a9d:	mov    rsi,QWORD PTR [rsp+0x40]
   140001aa2:	mov    rdi,QWORD PTR [rsp+0x48]
   140001aa7:	add    rsp,0x20
   140001aab:	pop    r12
   140001aad:	ret    
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	rex push rbx
   140001ab2:	sub    rsp,0x20
   140001ab6:	mov    r8d,edx
   140001ab9:	mov    rdx,QWORD PTR [rcx]
   140001abc:	mov    rbx,rcx
   140001abf:	mov    rcx,QWORD PTR [rdx-0x18]
   140001ac3:	sub    rdx,0x18
   140001ac7:	cmp    DWORD PTR [rdx+0xc],r8d
   140001acb:	jge    0x140001af6
   140001acd:	test   r8d,r8d
   140001ad0:	jle    0x140001af6
   140001ad2:	mov    rax,QWORD PTR [rcx]
   140001ad5:	mov    r9d,0x2
   140001adb:	call   QWORD PTR [rax+0x10]
   140001ade:	test   rax,rax
   140001ae1:	jne    0x140001ae9
   140001ae3:	call   0x140001990
   140001ae8:	int3   
   140001ae9:	add    rax,0x18
   140001aed:	mov    QWORD PTR [rbx],rax
   140001af0:	add    rsp,0x20
   140001af4:	pop    rbx
   140001af5:	ret    
   140001af6:	call   0x140001990
   140001afb:	int3   
   140001afc:	mov    rcx,QWORD PTR [rcx+0x8]
   140001b00:	mov    r8,rdx
   140001b03:	xor    edx,edx
   140001b05:	rex.W jmp QWORD PTR [rip+0xd544]        # 0x14000f050
   140001b0c:	sub    rsp,0x28
   140001b10:	test   rdx,rdx
   140001b13:	je     0x140001b24
   140001b15:	mov    rcx,QWORD PTR [rcx+0x8]
   140001b19:	mov    r8,rdx
   140001b1c:	xor    edx,edx
   140001b1e:	call   QWORD PTR [rip+0xd534]        # 0x14000f058
   140001b24:	add    rsp,0x28
   140001b28:	ret    
   140001b29:	int3   
   140001b2a:	int3   
   140001b2b:	int3   
   140001b2c:	sub    rsp,0x28
   140001b30:	test   rdx,rdx
   140001b33:	jne    0x140001b3f
   140001b35:	mov    rax,QWORD PTR [rcx]
   140001b38:	mov    rdx,r8
   140001b3b:	call   QWORD PTR [rax]
   140001b3d:	jmp    0x140001b60
   140001b3f:	test   r8,r8
   140001b42:	jne    0x140001b4e
   140001b44:	mov    rax,QWORD PTR [rcx]
   140001b47:	call   QWORD PTR [rax+0x8]
   140001b4a:	xor    eax,eax
   140001b4c:	jmp    0x140001b60
   140001b4e:	mov    rcx,QWORD PTR [rcx+0x8]
   140001b52:	mov    r9,r8
   140001b55:	mov    r8,rdx
   140001b58:	xor    edx,edx
   140001b5a:	call   QWORD PTR [rip+0xd500]        # 0x14000f060
   140001b60:	add    rsp,0x28
   140001b64:	ret    
   140001b65:	int3   
   140001b66:	int3   
   140001b67:	int3   
   140001b68:	mov    rcx,QWORD PTR [rcx+0x8]
   140001b6c:	mov    r8,rdx
   140001b6f:	xor    edx,edx
   140001b71:	rex.W jmp QWORD PTR [rip+0xd4f0]        # 0x14000f068
   140001b78:	mov    QWORD PTR [rsp+0x8],rbx
   140001b7d:	push   rdi
   140001b7e:	sub    rsp,0x20
   140001b82:	cmp    BYTE PTR [rcx+0x10],0x0
   140001b86:	lea    rax,[rip+0xd803]        # 0x14000f390
   140001b8d:	mov    edi,edx
   140001b8f:	mov    QWORD PTR [rcx],rax
   140001b92:	mov    rbx,rcx
   140001b95:	je     0x140001ba6
   140001b97:	mov    rcx,QWORD PTR [rcx+0x8]
   140001b9b:	test   rcx,rcx
   140001b9e:	je     0x140001ba6
   140001ba0:	call   QWORD PTR [rip+0xd4a2]        # 0x14000f048
   140001ba6:	test   dil,0x1
   140001baa:	je     0x140001bb4
   140001bac:	mov    rcx,rbx
   140001baf:	call   0x140001fa0
   140001bb4:	mov    rax,rbx
   140001bb7:	mov    rbx,QWORD PTR [rsp+0x30]
   140001bbc:	add    rsp,0x20
   140001bc0:	pop    rdi
   140001bc1:	ret    
   140001bc2:	int3   
   140001bc3:	int3   
   140001bc4:	mov    rcx,QWORD PTR [rcx+0x8]
   140001bc8:	mov    rax,QWORD PTR [rcx]
   140001bcb:	rex.W jmp QWORD PTR [rax+0x8]
   140001bcf:	int3   
   140001bd0:	lock add DWORD PTR [rcx+0x20],0x1
   140001bd5:	lea    rax,[rcx+0x10]
   140001bd9:	ret    
   140001bda:	int3   
   140001bdb:	int3   
   140001bdc:	mov    rax,rcx
   140001bdf:	ret    
   140001be0:	rex push rbx
   140001be2:	sub    rsp,0x20
   140001be6:	test   dl,0x1
   140001be9:	lea    rax,[rip+0xd7c8]        # 0x14000f3b8
   140001bf0:	mov    rbx,rcx
   140001bf3:	mov    QWORD PTR [rcx],rax
   140001bf6:	je     0x140001bfd
   140001bf8:	call   0x140001fa0
   140001bfd:	mov    rax,rbx
   140001c00:	add    rsp,0x20
   140001c04:	pop    rbx
   140001c05:	ret    
   140001c06:	int3   
   140001c07:	int3   
   140001c08:	mov    QWORD PTR [rsp+0x8],rbx
   140001c0d:	push   rdi
   140001c0e:	sub    rsp,0x20
   140001c12:	lea    ebx,[rdx+0x8]
   140001c15:	movsxd r9,r8d
   140001c18:	mov    rdi,rcx
   140001c1b:	and    ebx,0xfffffff8
   140001c1e:	movsxd r8,ebx
   140001c21:	jne    0x140001c28
   140001c23:	xor    r8d,r8d
   140001c26:	jmp    0x140001c40
   140001c28:	xor    edx,edx
   140001c2a:	or     rax,0xffffffffffffffff
   140001c2e:	div    r8
   140001c31:	cmp    rax,r9
   140001c34:	jb     0x140001c70
   140001c36:	imul   r8,r9
   140001c3a:	cmp    r8,0xffffffffffffffe7
   140001c3e:	ja     0x140001c70
   140001c40:	mov    rcx,QWORD PTR [rcx+0x8]
   140001c44:	lea    rdx,[r8+0x18]
   140001c48:	mov    rax,QWORD PTR [rcx]
   140001c4b:	call   QWORD PTR [rax]
   140001c4d:	test   rax,rax
   140001c50:	mov    r11,rax
   140001c53:	je     0x140001c70
   140001c55:	and    DWORD PTR [r11+0x8],0x0
   140001c5a:	mov    QWORD PTR [rax],rdi
   140001c5d:	mov    DWORD PTR [rax+0x10],0x1
   140001c64:	lea    eax,[rbx-0x1]
   140001c67:	mov    DWORD PTR [r11+0xc],eax
   140001c6b:	mov    rax,r11
   140001c6e:	jmp    0x140001c72
   140001c70:	xor    eax,eax
   140001c72:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c77:	add    rsp,0x20
   140001c7b:	pop    rdi
   140001c7c:	ret    
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	rex push rbx
   140001c82:	sub    rsp,0x20
   140001c86:	lea    ebx,[r8+0x8]
   140001c8a:	mov    eax,r9d
   140001c8d:	and    ebx,0xfffffff8
   140001c90:	mov    r8d,ebx
   140001c93:	imul   r8,rax
   140001c97:	mov    eax,0xffffffff
   140001c9c:	cmp    r8,rax
   140001c9f:	ja     0x140001cca
   140001ca1:	cmp    r8d,0xffffffe7
   140001ca5:	ja     0x140001cca
   140001ca7:	mov    rcx,QWORD PTR [rcx+0x8]
   140001cab:	add    r8d,0x18
   140001caf:	mov    r9,QWORD PTR [rcx]
   140001cb2:	call   QWORD PTR [r9+0x10]
   140001cb6:	test   rax,rax
   140001cb9:	mov    r11,rax
   140001cbc:	je     0x140001cca
   140001cbe:	lea    eax,[rbx-0x1]
   140001cc1:	mov    DWORD PTR [r11+0xc],eax
   140001cc5:	mov    rax,r11
   140001cc8:	jmp    0x140001ccc
   140001cca:	xor    eax,eax
   140001ccc:	add    rsp,0x20
   140001cd0:	pop    rbx
   140001cd1:	ret    
   140001cd2:	int3   
   140001cd3:	int3   
   140001cd4:	sub    rsp,0x38
   140001cd8:	call   QWORD PTR [rip+0xd3b2]        # 0x14000f090
   140001cde:	xor    r11d,r11d
   140001ce1:	mov    DWORD PTR [rsp+0x20],r11d
   140001ce6:	jmp    0x140001cf3
   140001ce8:	mov    r11d,0x8007000e
   140001cee:	mov    DWORD PTR [rsp+0x20],r11d
   140001cf3:	mov    eax,r11d
   140001cf6:	add    rsp,0x38
   140001cfa:	ret    
   140001cfb:	int3   
   140001cfc:	int3   
   140001cfd:	int3   
   140001cfe:	int3   
   140001cff:	int3   
   140001d00:	int3   
   140001d01:	int3   
   140001d02:	int3   
   140001d03:	int3   
   140001d04:	rex push rbp
   140001d06:	sub    rsp,0x20
   140001d0a:	mov    rbp,rdx
   140001d0d:	mov    rax,QWORD PTR [rcx]
   140001d10:	xor    r11d,r11d
   140001d13:	cmp    DWORD PTR [rax],0xc0000017
   140001d19:	sete   r11b
   140001d1d:	mov    eax,r11d
   140001d20:	add    rsp,0x20
   140001d24:	pop    rbp
   140001d25:	ret    
   140001d26:	int3   
   140001d27:	int3   
   140001d28:	mov    QWORD PTR [rsp+0x8],rbx
   140001d2d:	mov    QWORD PTR [rsp+0x10],rbp
   140001d32:	mov    QWORD PTR [rsp+0x18],rsi
   140001d37:	push   rdi
   140001d38:	sub    rsp,0x20
   140001d3c:	test   rcx,rcx
   140001d3f:	mov    rbp,rdx
   140001d42:	mov    rbx,rcx
   140001d45:	jne    0x140001d4e
   140001d47:	mov    eax,0x80070057
   140001d4c:	jmp    0x140001db2
   140001d4e:	cmp    DWORD PTR [rcx],0x0
   140001d51:	je     0x140001db0
   140001d53:	cmp    DWORD PTR [rcx],0x48
   140001d56:	jne    0x140001d47
   140001d58:	xor    edi,edi
   140001d5a:	cmp    DWORD PTR [rcx+0x40],edi
   140001d5d:	jle    0x140001d88
   140001d5f:	xor    esi,esi
   140001d61:	test   rsi,rsi
   140001d64:	js     0x140001dc7
   140001d66:	cmp    edi,DWORD PTR [rbx+0x40]
   140001d69:	jge    0x140001dc7
   140001d6b:	mov    rax,QWORD PTR [rbx+0x38]
   140001d6f:	mov    rdx,rbp
   140001d72:	movzx  ecx,WORD PTR [rax+rsi*1]
   140001d76:	call   QWORD PTR [rip+0xd534]        # 0x14000f2b0
   140001d7c:	add    edi,0x1
   140001d7f:	add    rsi,0x2
   140001d83:	cmp    edi,DWORD PTR [rbx+0x40]
   140001d86:	jl     0x140001d61
   140001d88:	mov    rcx,QWORD PTR [rbx+0x38]
   140001d8c:	test   rcx,rcx
   140001d8f:	je     0x140001d9b
   140001d91:	call   0x140002700
   140001d96:	and    QWORD PTR [rbx+0x38],0x0
   140001d9b:	and    DWORD PTR [rbx+0x40],0x0
   140001d9f:	and    DWORD PTR [rbx+0x44],0x0
   140001da3:	lea    rcx,[rbx+0x8]
   140001da7:	call   QWORD PTR [rip+0xd2eb]        # 0x14000f098
   140001dad:	and    DWORD PTR [rbx],0x0
   140001db0:	xor    eax,eax
   140001db2:	mov    rbx,QWORD PTR [rsp+0x30]
   140001db7:	mov    rbp,QWORD PTR [rsp+0x38]
   140001dbc:	mov    rsi,QWORD PTR [rsp+0x40]
   140001dc1:	add    rsp,0x20
   140001dc5:	pop    rdi
   140001dc6:	ret    
   140001dc7:	xor    r9d,r9d
   140001dca:	xor    r8d,r8d
   140001dcd:	mov    ecx,0xc000008c
   140001dd2:	lea    edx,[r9+0x1]
   140001dd6:	call   QWORD PTR [rip+0xd29c]        # 0x14000f078
   140001ddc:	int3   
   140001ddd:	int3   
   140001dde:	int3   
   140001ddf:	int3   
   140001de0:	rex push rbx
   140001de2:	sub    rsp,0x20
   140001de6:	mov    rbx,rcx
   140001de9:	add    rcx,0x28
   140001ded:	call   QWORD PTR [rip+0xd2a5]        # 0x14000f098
   140001df3:	mov    rcx,QWORD PTR [rbx+0x50]
   140001df7:	test   rcx,rcx
   140001dfa:	je     0x140001e06
   140001dfc:	call   0x140002700
   140001e01:	and    QWORD PTR [rbx+0x50],0x0
   140001e06:	and    DWORD PTR [rbx+0x58],0x0
   140001e0a:	and    DWORD PTR [rbx+0x5c],0x0
   140001e0e:	add    rsp,0x20
   140001e12:	pop    rbx
   140001e13:	ret    
   140001e14:	mov    QWORD PTR [rsp+0x8],rbx
   140001e19:	mov    QWORD PTR [rsp+0x10],rsi
   140001e1e:	push   rdi
   140001e1f:	sub    rsp,0x20
   140001e23:	mov    rsi,rcx
   140001e26:	add    rcx,0x28
   140001e2a:	movsxd rbx,edx
   140001e2d:	call   QWORD PTR [rip+0xd24d]        # 0x14000f080
   140001e33:	cmp    ebx,DWORD PTR [rsi+0x58]
   140001e36:	jg     0x140001e76
   140001e38:	test   ebx,ebx
   140001e3a:	js     0x140001e76
   140001e3c:	cmp    ebx,DWORD PTR [rsi+0x58]
   140001e3f:	jne    0x140001e54
   140001e41:	mov    rbx,QWORD PTR [rsi+0x10]
   140001e45:	lea    rcx,[rsi+0x28]
   140001e49:	call   QWORD PTR [rip+0xd239]        # 0x14000f088
   140001e4f:	mov    rax,rbx
   140001e52:	jmp    0x140001e82
   140001e54:	jge    0x140001e60
   140001e56:	mov    rax,QWORD PTR [rsi+0x50]
   140001e5a:	mov    rbx,QWORD PTR [rax+rbx*8]
   140001e5e:	jmp    0x140001e45
   140001e60:	xor    r9d,r9d
   140001e63:	xor    r8d,r8d
   140001e66:	mov    ecx,0xc000008c
   140001e6b:	lea    edx,[r9+0x1]
   140001e6f:	call   QWORD PTR [rip+0xd203]        # 0x14000f078
   140001e75:	int3   
   140001e76:	lea    rcx,[rsi+0x28]
   140001e7a:	call   QWORD PTR [rip+0xd208]        # 0x14000f088
   140001e80:	xor    eax,eax
   140001e82:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e87:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e8c:	add    rsp,0x20
   140001e90:	pop    rdi
   140001e91:	ret    
   140001e92:	int3   
   140001e93:	int3   
   140001e94:	mov    QWORD PTR [rsp+0x10],rbx
   140001e99:	mov    QWORD PTR [rsp+0x18],rsi
   140001e9e:	push   rdi
   140001e9f:	sub    rsp,0xd0
   140001ea6:	mov    rax,QWORD PTR [rip+0x121b3]        # 0x140014060
   140001ead:	xor    rax,rsp
   140001eb0:	mov    QWORD PTR [rsp+0xc0],rax
   140001eb8:	xor    edx,edx
   140001eba:	mov    rbx,rcx
   140001ebd:	lea    r8d,[rdx+0x28]
   140001ec1:	add    rcx,r8
   140001ec4:	call   0x140002760
   140001ec9:	and    QWORD PTR [rbx+0x50],0x0
   140001ece:	and    DWORD PTR [rbx+0x58],0x0
   140001ed2:	and    DWORD PTR [rbx+0x5c],0x0
   140001ed6:	lea    rax,[rip+0xffffffffffffe123]        # 0x140000000
   140001edd:	mov    esi,0x94
   140001ee2:	lea    rcx,[rsp+0x20]
   140001ee7:	mov    r8,rsi
   140001eea:	xor    edx,edx
   140001eec:	mov    QWORD PTR [rbx+0x10],rax
   140001ef0:	mov    QWORD PTR [rbx+0x8],rax
   140001ef4:	mov    DWORD PTR [rbx],0x60
   140001efa:	mov    BYTE PTR [rbx+0x18],0x0
   140001efe:	call   0x140002760
   140001f03:	lea    rcx,[rsp+0x20]
   140001f08:	mov    DWORD PTR [rsp+0x20],esi
   140001f0c:	call   QWORD PTR [rip+0xd18e]        # 0x14000f0a0
   140001f12:	cmp    DWORD PTR [rsp+0x30],0x2
   140001f17:	mov    esi,0x1
   140001f1c:	jne    0x140001f27
   140001f1e:	cmp    DWORD PTR [rsp+0x24],0x5
   140001f23:	jb     0x140001f41
   140001f25:	jmp    0x140001f3d
   140001f27:	cmp    DWORD PTR [rsp+0x30],esi
   140001f2b:	jne    0x140001f41
   140001f2d:	cmp    DWORD PTR [rsp+0x24],0x4
   140001f32:	ja     0x140001f3d
   140001f34:	jne    0x140001f41
   140001f36:	cmp    DWORD PTR [rsp+0x28],0x0
   140001f3b:	jbe    0x140001f41
   140001f3d:	mov    BYTE PTR [rbx+0x18],sil
   140001f41:	lea    rax,[rip+0xd4b0]        # 0x14000f3f8
   140001f48:	lea    rcx,[rbx+0x28]
   140001f4c:	mov    DWORD PTR [rbx+0x1c],0x800
   140001f53:	mov    QWORD PTR [rbx+0x20],rax
   140001f57:	call   0x140001cd4
   140001f5c:	movzx  ecx,BYTE PTR [rip+0x146c9]        # 0x14001662c
   140001f63:	test   eax,eax
   140001f65:	mov    rax,rbx
   140001f68:	cmovs  ecx,esi
   140001f6b:	mov    BYTE PTR [rip+0x146bb],cl        # 0x14001662c
   140001f71:	mov    rcx,QWORD PTR [rsp+0xc0]
   140001f79:	xor    rcx,rsp
   140001f7c:	call   0x1400020b0
   140001f81:	lea    r11,[rsp+0xd0]
   140001f89:	mov    rbx,QWORD PTR [r11+0x18]
   140001f8d:	mov    rsi,QWORD PTR [r11+0x20]
   140001f91:	mov    rsp,r11
   140001f94:	pop    rdi
   140001f95:	ret    
   140001f96:	int3   
   140001f97:	int3   
   140001f98:	int3   
   140001f99:	int3   
   140001f9a:	int3   
   140001f9b:	int3   
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	jmp    0x140002700
   140001fa5:	int3   
   140001fa6:	int3   
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	mov    QWORD PTR [rsp+0x8],rcx
   140001fb5:	mov    QWORD PTR [rsp+0x10],rdx
   140001fba:	mov    QWORD PTR [rsp+0x18],r8
   140001fbf:	mov    QWORD PTR [rsp+0x20],r9
   140001fc4:	push   rbx
   140001fc5:	push   rdi
   140001fc6:	sub    rsp,0x38
   140001fca:	xor    eax,eax
   140001fcc:	test   rcx,rcx
   140001fcf:	setne  al
   140001fd2:	test   eax,eax
   140001fd4:	jne    0x140001ffe
   140001fd6:	call   0x140004100
   140001fdb:	mov    DWORD PTR [rax],0x16
   140001fe1:	mov    QWORD PTR [rsp+0x20],0x0
   140001fea:	xor    r9d,r9d
   140001fed:	xor    r8d,r8d
   140001ff0:	xor    edx,edx
   140001ff2:	xor    ecx,ecx
   140001ff4:	call   0x140003fa0
   140001ff9:	or     eax,0xffffffff
   140001ffc:	jmp    0x140002068
   140001ffe:	lea    rdi,[rsp+0x58]
   140002003:	call   0x140002b70
   140002008:	lea    rdx,[rax+0x30]
   14000200c:	mov    ecx,0x1
   140002011:	call   0x140002d20
   140002016:	nop
   140002017:	call   0x140002b70
   14000201c:	lea    rcx,[rax+0x30]
   140002020:	call   0x140002dd0
   140002025:	mov    ebx,eax
   140002027:	call   0x140002b70
   14000202c:	mov    r9,rdi
   14000202f:	xor    r8d,r8d
   140002032:	mov    rdx,QWORD PTR [rsp+0x50]
   140002037:	lea    rcx,[rax+0x30]
   14000203b:	call   0x140002fb0
   140002040:	mov    edi,eax
   140002042:	call   0x140002b70
   140002047:	lea    rdx,[rax+0x30]
   14000204b:	mov    ecx,ebx
   14000204d:	call   0x140002eb0
   140002052:	nop
   140002053:	call   0x140002b70
   140002058:	lea    rdx,[rax+0x30]
   14000205c:	mov    ecx,0x1
   140002061:	call   0x140002db0
   140002066:	mov    eax,edi
   140002068:	add    rsp,0x38
   14000206c:	pop    rdi
   14000206d:	pop    rbx
   14000206e:	ret    
   14000206f:	int3   
   140002070:	rex push rbp
   140002072:	sub    rsp,0x30
   140002076:	mov    rbp,rdx
   140002079:	call   0x140002b70
   14000207e:	add    rax,0x30
   140002082:	mov    rdx,rax
   140002085:	mov    ecx,0x1
   14000208a:	call   0x140002db0
   14000208f:	add    rsp,0x30
   140002093:	pop    rbp
   140002094:	ret    
   140002095:	int3   
   140002096:	int3   
   140002097:	int3   
   140002098:	int3   
   140002099:	int3   
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	int3   
   1400020a1:	int3   
   1400020a2:	int3   
   1400020a3:	int3   
   1400020a4:	int3   
   1400020a5:	int3   
   1400020a6:	data16 data16 xchg ax,ax
   1400020aa:	data16 data16 xchg ax,ax
   1400020ae:	xchg   ax,ax
   1400020b0:	cmp    rcx,QWORD PTR [rip+0x11fa9]        # 0x140014060
   1400020b7:	jne    0x1400020ca
   1400020b9:	rol    rcx,0x10
   1400020bd:	test   cx,0xffff
   1400020c2:	jne    0x1400020c6
   1400020c4:	repz ret 
   1400020c6:	ror    rcx,0x10
   1400020ca:	jmp    0x1400041f0
   1400020cf:	int3   
   1400020d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400020d5:	push   rdi
   1400020d6:	sub    rsp,0x20
   1400020da:	lea    rax,[rip+0xd33f]        # 0x14000f420
   1400020e1:	mov    ebx,edx
   1400020e3:	mov    rdi,rcx
   1400020e6:	mov    QWORD PTR [rcx],rax
   1400020e9:	call   0x140004340
   1400020ee:	test   bl,0x1
   1400020f1:	je     0x1400020fb
   1400020f3:	mov    rcx,rdi
   1400020f6:	call   0x140001fa0
   1400020fb:	mov    rax,rdi
   1400020fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140002103:	add    rsp,0x20
   140002107:	pop    rdi
   140002108:	ret    
   140002109:	int3   
   14000210a:	int3   
   14000210b:	int3   
   14000210c:	int3   
   14000210d:	int3   
   14000210e:	int3   
   14000210f:	int3   
   140002110:	lea    r8,[rcx+0x11]
   140002114:	add    rdx,0x11
   140002118:	sub    r8,rdx
   14000211b:	xchg   ax,ax
   14000211d:	data16 xchg ax,ax
   140002120:	movzx  ecx,BYTE PTR [rdx]
   140002123:	movzx  eax,BYTE PTR [rdx+r8*1]
   140002128:	sub    ecx,eax
   14000212a:	jne    0x140002134
   14000212c:	add    rdx,0x1
   140002130:	test   eax,eax
   140002132:	jne    0x140002120
   140002134:	test   ecx,ecx
   140002136:	sete   al
   140002139:	ret    
   14000213a:	int3   
   14000213b:	int3   
   14000213c:	int3   
   14000213d:	int3   
   14000213e:	int3   
   14000213f:	int3   
   140002140:	sub    rsp,0x38
   140002144:	test   r9,r9
   140002147:	mov    rax,r8
   14000214a:	je     0x1400021c0
   14000214c:	test   rcx,rcx
   14000214f:	jne    0x14000217e
   140002151:	call   0x140004100
   140002156:	xor    r9d,r9d
   140002159:	xor    r8d,r8d
   14000215c:	xor    edx,edx
   14000215e:	xor    ecx,ecx
   140002160:	mov    QWORD PTR [rsp+0x20],0x0
   140002169:	mov    DWORD PTR [rax],0x16
   14000216f:	call   0x140003fa0
   140002174:	mov    eax,0x16
   140002179:	add    rsp,0x38
   14000217d:	ret    
   14000217e:	test   rax,rax
   140002181:	je     0x140002151
   140002183:	cmp    rdx,r9
   140002186:	jae    0x1400021b5
   140002188:	call   0x140004100
   14000218d:	xor    r9d,r9d
   140002190:	xor    r8d,r8d
   140002193:	xor    edx,edx
   140002195:	xor    ecx,ecx
   140002197:	mov    QWORD PTR [rsp+0x20],0x0
   1400021a0:	mov    DWORD PTR [rax],0x22
   1400021a6:	call   0x140003fa0
   1400021ab:	mov    eax,0x22
   1400021b0:	add    rsp,0x38
   1400021b4:	ret    
   1400021b5:	mov    r8,r9
   1400021b8:	mov    rdx,rax
   1400021bb:	call   0x1400043f0
   1400021c0:	xor    eax,eax
   1400021c2:	add    rsp,0x38
   1400021c6:	ret    
   1400021c7:	int3   
   1400021c8:	int3   
   1400021c9:	int3   
   1400021ca:	int3   
   1400021cb:	int3   
   1400021cc:	int3   
   1400021cd:	int3   
   1400021ce:	int3   
   1400021cf:	int3   
   1400021d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400021d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400021da:	push   rdi
   1400021db:	sub    rsp,0x30
   1400021df:	test   r9,r9
   1400021e2:	mov    rbx,r9
   1400021e5:	mov    rsi,r8
   1400021e8:	mov    rdi,rdx
   1400021eb:	je     0x14000223f
   1400021ed:	test   rcx,rcx
   1400021f0:	jne    0x14000222a
   1400021f2:	call   0x140004100
   1400021f7:	xor    r9d,r9d
   1400021fa:	xor    r8d,r8d
   1400021fd:	xor    edx,edx
   1400021ff:	xor    ecx,ecx
   140002201:	mov    QWORD PTR [rsp+0x20],0x0
   14000220a:	mov    DWORD PTR [rax],0x16
   140002210:	call   0x140003fa0
   140002215:	mov    eax,0x16
   14000221a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000221f:	mov    rsi,QWORD PTR [rsp+0x48]
   140002224:	add    rsp,0x30
   140002228:	pop    rdi
   140002229:	ret    
   14000222a:	test   r8,r8
   14000222d:	je     0x140002251
   14000222f:	cmp    rdx,rbx
   140002232:	jb     0x140002251
   140002234:	mov    r8,rbx
   140002237:	mov    rdx,rsi
   14000223a:	call   0x1400043f0
   14000223f:	xor    eax,eax
   140002241:	mov    rbx,QWORD PTR [rsp+0x40]
   140002246:	mov    rsi,QWORD PTR [rsp+0x48]
   14000224b:	add    rsp,0x30
   14000224f:	pop    rdi
   140002250:	ret    
   140002251:	mov    r8,rdx
   140002254:	xor    edx,edx
   140002256:	call   0x140002760
   14000225b:	test   rsi,rsi
   14000225e:	je     0x1400021f2
   140002260:	cmp    rdi,rbx
   140002263:	jae    0x140002215
   140002265:	call   0x140004100
   14000226a:	xor    r9d,r9d
   14000226d:	xor    r8d,r8d
   140002270:	xor    edx,edx
   140002272:	xor    ecx,ecx
   140002274:	mov    QWORD PTR [rsp+0x20],0x0
   14000227d:	mov    DWORD PTR [rax],0x22
   140002283:	call   0x140003fa0
   140002288:	mov    rbx,QWORD PTR [rsp+0x40]
   14000228d:	mov    rsi,QWORD PTR [rsp+0x48]
   140002292:	mov    eax,0x22
   140002297:	add    rsp,0x30
   14000229b:	pop    rdi
   14000229c:	ret    
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400022a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400022aa:	push   rdi
   1400022ab:	push   r12
   1400022ad:	push   r13
   1400022af:	sub    rsp,0x30
   1400022b3:	call   QWORD PTR [rip+0xcdb7]        # 0x14000f070
   1400022b9:	mov    rcx,rax
   1400022bc:	xor    edx,edx
   1400022be:	mov    r8d,0x94
   1400022c4:	call   QWORD PTR [rip+0xcd86]        # 0x14000f050
   1400022ca:	mov    rbx,rax
   1400022cd:	test   rax,rax
   1400022d0:	jne    0x1400022fe
   1400022d2:	cmp    DWORD PTR [rip+0x1339f],0x2        # 0x140015678
   1400022d9:	je     0x1400022e0
   1400022db:	call   0x140004e10
   1400022e0:	mov    ecx,0x12
   1400022e5:	call   0x140004bd0
   1400022ea:	mov    ecx,0xff
   1400022ef:	call   0x1400047d0
   1400022f4:	mov    eax,0xff
   1400022f9:	jmp    0x140002505
   1400022fe:	mov    DWORD PTR [rax],0x94
   140002304:	mov    rcx,rax
   140002307:	call   QWORD PTR [rip+0xcd93]        # 0x14000f0a0
   14000230d:	test   eax,eax
   14000230f:	jne    0x14000232f
   140002311:	call   QWORD PTR [rip+0xcd59]        # 0x14000f070
   140002317:	mov    rcx,rax
   14000231a:	mov    r8,rbx
   14000231d:	xor    edx,edx
   14000231f:	call   QWORD PTR [rip+0xcd33]        # 0x14000f058
   140002325:	mov    eax,0xff
   14000232a:	jmp    0x140002505
   14000232f:	mov    r13d,DWORD PTR [rbx+0x10]
   140002333:	mov    esi,DWORD PTR [rbx+0x4]
   140002336:	mov    r12d,DWORD PTR [rbx+0x8]
   14000233a:	mov    edi,DWORD PTR [rbx+0xc]
   14000233d:	and    edi,0x7fff
   140002343:	call   QWORD PTR [rip+0xcd27]        # 0x14000f070
   140002349:	mov    rcx,rax
   14000234c:	mov    r8,rbx
   14000234f:	xor    edx,edx
   140002351:	call   QWORD PTR [rip+0xcd01]        # 0x14000f058
   140002357:	cmp    r13d,0x2
   14000235b:	je     0x140002361
   14000235d:	bts    edi,0xf
   140002361:	mov    eax,esi
   140002363:	shl    eax,0x8
   140002366:	add    eax,r12d
   140002369:	mov    DWORD PTR [rip+0x138b4],r13d        # 0x140015c24
   140002370:	mov    DWORD PTR [rip+0x138b6],eax        # 0x140015c2c
   140002376:	mov    DWORD PTR [rip+0x138b4],esi        # 0x140015c30
   14000237c:	mov    DWORD PTR [rip+0x138b1],r12d        # 0x140015c34
   140002383:	mov    DWORD PTR [rip+0x1389f],edi        # 0x140015c28
   140002389:	cmp    WORD PTR [rip+0xffffffffffffdc6e],0x5a4d        # 0x140000000
   140002392:	jne    0x1400023e7
   140002394:	movsxd rax,DWORD PTR [rip+0xffffffffffffdca1]        # 0x14000003c
   14000239b:	lea    rcx,[rip+0xffffffffffffdc5e]        # 0x140000000
   1400023a2:	add    rax,rcx
   1400023a5:	cmp    DWORD PTR [rax],0x4550
   1400023ab:	je     0x1400023b5
   1400023ad:	xor    ebx,ebx
   1400023af:	mov    DWORD PTR [rsp+0x50],ebx
   1400023b3:	jmp    0x1400023ed
   1400023b5:	cmp    WORD PTR [rax+0x18],0x20b
   1400023bb:	je     0x1400023c5
   1400023bd:	xor    ebx,ebx
   1400023bf:	mov    DWORD PTR [rsp+0x50],ebx
   1400023c3:	jmp    0x1400023ed
   1400023c5:	cmp    DWORD PTR [rax+0x84],0xe
   1400023cc:	ja     0x1400023d6
   1400023ce:	xor    ebx,ebx
   1400023d0:	mov    DWORD PTR [rsp+0x50],ebx
   1400023d4:	jmp    0x1400023ed
   1400023d6:	xor    ebx,ebx
   1400023d8:	cmp    DWORD PTR [rax+0xf8],ebx
   1400023de:	setne  bl
   1400023e1:	mov    DWORD PTR [rsp+0x50],ebx
   1400023e5:	jmp    0x1400023ed
   1400023e7:	xor    ebx,ebx
   1400023e9:	mov    DWORD PTR [rsp+0x50],ebx
   1400023ed:	mov    ecx,0x1
   1400023f2:	call   0x140006570
   1400023f7:	test   eax,eax
   1400023f9:	jne    0x14000241d
   1400023fb:	cmp    DWORD PTR [rip+0x13276],0x2        # 0x140015678
   140002402:	je     0x140002409
   140002404:	call   0x140004e10
   140002409:	mov    ecx,0x1c
   14000240e:	call   0x140004bd0
   140002413:	mov    ecx,0xff
   140002418:	call   0x1400047d0
   14000241d:	call   0x140006450
   140002422:	test   eax,eax
   140002424:	jne    0x140002448
   140002426:	cmp    DWORD PTR [rip+0x1324b],0x2        # 0x140015678
   14000242d:	je     0x140002434
   14000242f:	call   0x140004e10
   140002434:	mov    ecx,0x10
   140002439:	call   0x140004bd0
   14000243e:	mov    ecx,0xff
   140002443:	call   0x1400047d0
   140002448:	call   0x140005d10
   14000244d:	nop
   14000244e:	call   0x1400059e0
   140002453:	test   eax,eax
   140002455:	jns    0x140002461
   140002457:	mov    ecx,0x1b
   14000245c:	call   0x1400047a0
   140002461:	call   0x1400058c0
   140002466:	mov    QWORD PTR [rip+0x1541b],rax        # 0x140017888
   14000246d:	call   0x1400056c0
   140002472:	mov    QWORD PTR [rip+0x131f7],rax        # 0x140015670
   140002479:	call   0x140005450
   14000247e:	test   eax,eax
   140002480:	jns    0x14000248c
   140002482:	mov    ecx,0x8
   140002487:	call   0x1400047a0
   14000248c:	call   0x140005120
   140002491:	test   eax,eax
   140002493:	jns    0x14000249f
   140002495:	mov    ecx,0x9
   14000249a:	call   0x1400047a0
   14000249f:	mov    ecx,0x1
   1400024a4:	call   0x140004910
   1400024a9:	test   eax,eax
   1400024ab:	je     0x1400024b4
   1400024ad:	mov    ecx,eax
   1400024af:	call   0x1400047a0
   1400024b4:	mov    r8,QWORD PTR [rip+0x137a5]        # 0x140015c60
   1400024bb:	mov    QWORD PTR [rip+0x137a6],r8        # 0x140015c68
   1400024c2:	mov    rdx,QWORD PTR [rip+0x1377f]        # 0x140015c48
   1400024c9:	mov    ecx,DWORD PTR [rip+0x13769]        # 0x140015c38
   1400024cf:	call   0x140001250
   1400024d4:	mov    edi,eax
   1400024d6:	mov    DWORD PTR [rsp+0x20],eax
   1400024da:	test   ebx,ebx
   1400024dc:	jne    0x1400024e5
   1400024de:	mov    ecx,eax
   1400024e0:	call   0x140004b20
   1400024e5:	call   0x140004b40
   1400024ea:	jmp    0x140002503
   1400024ec:	mov    edi,eax
   1400024ee:	cmp    DWORD PTR [rsp+0x50],0x0
   1400024f3:	jne    0x1400024fd
   1400024f5:	mov    ecx,eax
   1400024f7:	call   0x140004b30
   1400024fc:	int3   
   1400024fd:	call   0x140004b50
   140002502:	nop
   140002503:	mov    eax,edi
   140002505:	mov    rbx,QWORD PTR [rsp+0x58]
   14000250a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000250f:	add    rsp,0x30
   140002513:	pop    r13
   140002515:	pop    r12
   140002517:	pop    rdi
   140002518:	ret    
   140002519:	int3   
   14000251a:	int3   
   14000251b:	int3   
   14000251c:	int3   
   14000251d:	int3   
   14000251e:	int3   
   14000251f:	int3   
   140002520:	rex push rbp
   140002522:	sub    rsp,0x20
   140002526:	mov    rbp,rdx
   140002529:	mov    rax,QWORD PTR [rcx]
   14000252c:	mov    rdx,rcx
   14000252f:	mov    ecx,DWORD PTR [rax]
   140002531:	call   0x140004f10
   140002536:	add    rsp,0x20
   14000253a:	pop    rbp
   14000253b:	ret    
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	sub    rsp,0x28
   140002544:	call   0x1400065d0
   140002549:	add    rsp,0x28
   14000254d:	jmp    0x1400022a0
   140002552:	int3   
   140002553:	int3   
   140002554:	int3   
   140002555:	int3   
   140002556:	int3   
   140002557:	int3   
   140002558:	int3   
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	rex push rbx
   140002562:	sub    rsp,0x20
   140002566:	mov    edx,0x8
   14000256b:	lea    ecx,[rdx+0x18]
   14000256e:	call   0x140006700
   140002573:	mov    rcx,rax
   140002576:	mov    rbx,rax
   140002579:	call   0x140005d90
   14000257e:	test   rbx,rbx
   140002581:	mov    QWORD PTR [rip+0x142c8],rax        # 0x140016850
   140002588:	mov    QWORD PTR [rip+0x142b9],rax        # 0x140016848
   14000258f:	jne    0x14000259a
   140002591:	lea    eax,[rbx+0x18]
   140002594:	add    rsp,0x20
   140002598:	pop    rbx
   140002599:	ret    
   14000259a:	mov    QWORD PTR [rbx],0x0
   1400025a1:	xor    eax,eax
   1400025a3:	add    rsp,0x20
   1400025a7:	pop    rbx
   1400025a8:	ret    
   1400025a9:	int3   
   1400025aa:	int3   
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400025ba:	mov    QWORD PTR [rsp+0x18],rdi
   1400025bf:	push   r12
   1400025c1:	push   r13
   1400025c3:	push   r14
   1400025c5:	sub    rsp,0x20
   1400025c9:	mov    rbx,rcx
   1400025cc:	call   0x140004810
   1400025d1:	nop
   1400025d2:	mov    rcx,QWORD PTR [rip+0x14277]        # 0x140016850
   1400025d9:	call   0x140005f50
   1400025de:	mov    r13,rax
   1400025e1:	mov    rcx,QWORD PTR [rip+0x14260]        # 0x140016848
   1400025e8:	call   0x140005f50
   1400025ed:	mov    rsi,rax
   1400025f0:	cmp    rax,r13
   1400025f3:	jb     0x14000268f
   1400025f9:	mov    rdi,rax
   1400025fc:	sub    rdi,r13
   1400025ff:	lea    r14,[rdi+0x8]
   140002603:	cmp    r14,0x8
   140002607:	jb     0x14000268f
   14000260d:	mov    rcx,r13
   140002610:	call   0x140006820
   140002615:	mov    r12,rax
   140002618:	cmp    rax,r14
   14000261b:	jae    0x140002672
   14000261d:	mov    edx,0x1000
   140002622:	cmp    rax,rdx
   140002625:	cmovb  rdx,rax
   140002629:	add    rdx,rax
   14000262c:	cmp    rdx,rax
   14000262f:	jb     0x14000263e
   140002631:	mov    rcx,r13
   140002634:	call   0x140006790
   140002639:	test   rax,rax
   14000263c:	jne    0x140002655
   14000263e:	lea    rdx,[r12+0x20]
   140002643:	cmp    rdx,r12
   140002646:	jb     0x14000266e
   140002648:	mov    rcx,r13
   14000264b:	call   0x140006790
   140002650:	test   rax,rax
   140002653:	je     0x14000266e
   140002655:	sar    rdi,0x3
   140002659:	lea    rsi,[rax+rdi*8]
   14000265d:	mov    rcx,rax
   140002660:	call   0x140005d90
   140002665:	mov    QWORD PTR [rip+0x141e4],rax        # 0x140016850
   14000266c:	jmp    0x140002672
   14000266e:	xor    ebx,ebx
   140002670:	jmp    0x140002691
   140002672:	mov    rcx,rbx
   140002675:	call   0x140005d90
   14000267a:	mov    QWORD PTR [rsi],rax
   14000267d:	lea    rcx,[rsi+0x8]
   140002681:	call   0x140005d90
   140002686:	mov    QWORD PTR [rip+0x141bb],rax        # 0x140016848
   14000268d:	jmp    0x140002691
   14000268f:	xor    ebx,ebx
   140002691:	call   0x140004820
   140002696:	mov    rax,rbx
   140002699:	mov    rbx,QWORD PTR [rsp+0x40]
   14000269e:	mov    rsi,QWORD PTR [rsp+0x48]
   1400026a3:	mov    rdi,QWORD PTR [rsp+0x50]
   1400026a8:	add    rsp,0x20
   1400026ac:	pop    r14
   1400026ae:	pop    r13
   1400026b0:	pop    r12
   1400026b2:	ret    
   1400026b3:	int3   
   1400026b4:	int3   
   1400026b5:	int3   
   1400026b6:	int3   
   1400026b7:	int3   
   1400026b8:	int3   
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	rex push rbp
   1400026c2:	sub    rsp,0x20
   1400026c6:	mov    rbp,rdx
   1400026c9:	call   0x140004820
   1400026ce:	add    rsp,0x20
   1400026d2:	pop    rbp
   1400026d3:	ret    
   1400026d4:	int3   
   1400026d5:	int3   
   1400026d6:	int3   
   1400026d7:	int3   
   1400026d8:	int3   
   1400026d9:	int3   
   1400026da:	int3   
   1400026db:	int3   
   1400026dc:	int3   
   1400026dd:	int3   
   1400026de:	int3   
   1400026df:	int3   
   1400026e0:	sub    rsp,0x28
   1400026e4:	call   0x1400025b0
   1400026e9:	neg    rax
   1400026ec:	sbb    eax,eax
   1400026ee:	neg    eax
   1400026f0:	sub    eax,0x1
   1400026f3:	add    rsp,0x28
   1400026f7:	ret    
   1400026f8:	int3   
   1400026f9:	int3   
   1400026fa:	int3   
   1400026fb:	int3   
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	sub    rsp,0x28
   140002704:	test   rcx,rcx
   140002707:	je     0x140002740
   140002709:	mov    r8,rcx
   14000270c:	mov    rcx,QWORD PTR [rip+0x13ab5]        # 0x1400161c8
   140002713:	xor    edx,edx
   140002715:	call   QWORD PTR [rip+0xc93d]        # 0x14000f058
   14000271b:	test   eax,eax
   14000271d:	jne    0x140002740
   14000271f:	mov    QWORD PTR [rsp+0x20],rbx
   140002724:	call   0x140004100
   140002729:	mov    rbx,rax
   14000272c:	call   QWORD PTR [rip+0xc976]        # 0x14000f0a8
   140002732:	mov    ecx,eax
   140002734:	call   0x1400040b0
   140002739:	mov    DWORD PTR [rbx],eax
   14000273b:	mov    rbx,QWORD PTR [rsp+0x20]
   140002740:	add    rsp,0x28
   140002744:	ret    
   140002745:	int3   
   140002746:	int3   
   140002747:	int3   
   140002748:	int3   
   140002749:	int3   
   14000274a:	int3   
   14000274b:	int3   
   14000274c:	int3   
   14000274d:	int3   
   14000274e:	int3   
   14000274f:	int3   
   140002750:	int3   
   140002751:	int3   
   140002752:	int3   
   140002753:	int3   
   140002754:	int3   
   140002755:	int3   
   140002756:	data16 data16 xchg ax,ax
   14000275a:	data16 data16 xchg ax,ax
   14000275e:	xchg   ax,ax
   140002760:	mov    rax,rcx
   140002763:	cmp    r8,0x8
   140002767:	jb     0x1400027bc
   140002769:	movzx  edx,dl
   14000276c:	movabs r9,0x101010101010101
   140002776:	imul   rdx,r9
   14000277a:	cmp    r8,0x40
   14000277e:	jb     0x14000279e
   140002780:	neg    rcx
   140002783:	and    ecx,0x7
   140002786:	je     0x14000278e
   140002788:	sub    r8,rcx
   14000278b:	mov    QWORD PTR [rax],rdx
   14000278e:	add    rcx,rax
   140002791:	mov    r9,r8
   140002794:	and    r8,0x3f
   140002798:	shr    r9,0x6
   14000279c:	jne    0x1400027d7
   14000279e:	mov    r9,r8
   1400027a1:	and    r8,0x7
   1400027a5:	shr    r9,0x3
   1400027a9:	je     0x1400027bc
   1400027ab:	data16 data16 xchg ax,ax
   1400027af:	nop
   1400027b0:	mov    QWORD PTR [rcx],rdx
   1400027b3:	add    rcx,0x8
   1400027b7:	dec    r9
   1400027ba:	jne    0x1400027b0
   1400027bc:	test   r8,r8
   1400027bf:	je     0x1400027cb
   1400027c1:	mov    BYTE PTR [rcx],dl
   1400027c3:	inc    rcx
   1400027c6:	dec    r8
   1400027c9:	jne    0x1400027c1
   1400027cb:	ret    
   1400027cc:	data16 data16 xchg ax,ax
   1400027d0:	data16 data16 xchg ax,ax
   1400027d4:	data16 xchg ax,ax
   1400027d7:	cmp    r9,0x1c00
   1400027de:	jae    0x140002810
   1400027e0:	mov    QWORD PTR [rcx],rdx
   1400027e3:	mov    QWORD PTR [rcx+0x8],rdx
   1400027e7:	mov    QWORD PTR [rcx+0x10],rdx
   1400027eb:	add    rcx,0x40
   1400027ef:	mov    QWORD PTR [rcx-0x28],rdx
   1400027f3:	mov    QWORD PTR [rcx-0x20],rdx
   1400027f7:	dec    r9
   1400027fa:	mov    QWORD PTR [rcx-0x18],rdx
   1400027fe:	mov    QWORD PTR [rcx-0x10],rdx
   140002802:	mov    QWORD PTR [rcx-0x8],rdx
   140002806:	jne    0x1400027e0
   140002808:	jmp    0x14000279e
   14000280a:	data16 xchg ax,ax
   14000280d:	data16 xchg ax,ax
   140002810:	movnti QWORD PTR [rcx],rdx
   140002814:	movnti QWORD PTR [rcx+0x8],rdx
   140002819:	movnti QWORD PTR [rcx+0x10],rdx
   14000281e:	add    rcx,0x40
   140002822:	movnti QWORD PTR [rcx-0x28],rdx
   140002827:	movnti QWORD PTR [rcx-0x20],rdx
   14000282c:	dec    r9
   14000282f:	movnti QWORD PTR [rcx-0x18],rdx
   140002834:	movnti QWORD PTR [rcx-0x10],rdx
   140002839:	movnti QWORD PTR [rcx-0x8],rdx
   14000283e:	jne    0x140002810
   140002840:	lock or BYTE PTR [rsp],0x0
   140002845:	jmp    0x14000279e
   14000284a:	int3   
   14000284b:	int3   
   14000284c:	int3   
   14000284d:	int3   
   14000284e:	int3   
   14000284f:	int3   
   140002850:	mov    QWORD PTR [rsp+0x8],rbx
   140002855:	mov    QWORD PTR [rsp+0x18],rbp
   14000285a:	mov    QWORD PTR [rsp+0x20],rsi
   14000285f:	mov    QWORD PTR [rsp+0x10],rdx
   140002864:	push   rdi
   140002865:	push   r12
   140002867:	push   r13
   140002869:	push   r14
   14000286b:	push   r15
   14000286d:	sub    rsp,0x40
   140002871:	mov    r14,QWORD PTR [r9+0x8]
   140002875:	mov    rbp,QWORD PTR [r9]
   140002878:	mov    r13,QWORD PTR [r9+0x38]
   14000287c:	sub    rbp,r14
   14000287f:	xor    edi,edi
   140002881:	test   BYTE PTR [rcx+0x4],0x66
   140002885:	mov    r15,r9
   140002888:	mov    rsi,rdx
   14000288b:	mov    r12,rcx
   14000288e:	jne    0x14000297a
   140002894:	mov    QWORD PTR [rsp+0x30],rcx
   140002899:	mov    QWORD PTR [rsp+0x38],r8
   14000289e:	cmp    DWORD PTR [r13+0x0],edi
   1400028a2:	jbe    0x1400029e3
   1400028a8:	lea    rbx,[r13+0xc]
   1400028ac:	data16 data16 xchg ax,ax
   1400028b0:	mov    eax,DWORD PTR [rbx-0x8]
   1400028b3:	cmp    rbp,rax
   1400028b6:	jb     0x140002963
   1400028bc:	mov    eax,DWORD PTR [rbx-0x4]
   1400028bf:	cmp    rbp,rax
   1400028c2:	jae    0x140002963
   1400028c8:	cmp    DWORD PTR [rbx+0x4],0x0
   1400028cc:	je     0x140002963
   1400028d2:	mov    eax,DWORD PTR [rbx]
   1400028d4:	cmp    eax,0x1
   1400028d7:	je     0x1400028f0
   1400028d9:	lea    rcx,[rsp+0x30]
   1400028de:	add    rax,r14
   1400028e1:	mov    rdx,rsi
   1400028e4:	call   rax
   1400028e6:	test   eax,eax
   1400028e8:	js     0x140002976
   1400028ee:	jle    0x140002963
   1400028f0:	cmp    DWORD PTR [r12],0xe06d7363
   1400028f8:	jne    0x140002922
   1400028fa:	cmp    QWORD PTR [rip+0xea66],0x0        # 0x140011368
   140002902:	je     0x140002922
   140002904:	lea    rcx,[rip+0xea5d]        # 0x140011368
   14000290b:	call   0x140006970
   140002910:	test   eax,eax
   140002912:	je     0x140002922
   140002914:	mov    edx,0x1
   140002919:	mov    rcx,r12
   14000291c:	call   QWORD PTR [rip+0xea46]        # 0x140011368
   140002922:	mov    ecx,DWORD PTR [rbx+0x4]
   140002925:	mov    r8d,0x1
   14000292b:	mov    rdx,rsi
   14000292e:	add    rcx,r14
   140002931:	call   0x1400068b0
   140002936:	mov    rax,QWORD PTR [r15+0x40]
   14000293a:	mov    edx,DWORD PTR [rbx+0x4]
   14000293d:	movsxd r9,DWORD PTR [r12]
   140002941:	mov    QWORD PTR [rsp+0x28],rax
   140002946:	mov    rax,QWORD PTR [r15+0x28]
   14000294a:	add    rdx,r14
   14000294d:	mov    r8,r12
   140002950:	mov    rcx,rsi
   140002953:	mov    QWORD PTR [rsp+0x20],rax
   140002958:	call   QWORD PTR [rip+0xc752]        # 0x14000f0b0
   14000295e:	call   0x1400068e0
   140002963:	add    edi,0x1
   140002966:	add    rbx,0x10
   14000296a:	cmp    edi,DWORD PTR [r13+0x0]
   14000296e:	jb     0x1400028b0
   140002974:	jmp    0x1400029e3
   140002976:	xor    eax,eax
   140002978:	jmp    0x1400029e8
   14000297a:	mov    rsi,QWORD PTR [r9+0x20]
   14000297e:	sub    rsi,r14
   140002981:	cmp    DWORD PTR [r13+0x0],edi
   140002985:	jbe    0x1400029e3
   140002987:	lea    rbx,[r13+0x10]
   14000298b:	xchg   ax,ax
   14000298d:	data16 xchg ax,ax
   140002990:	mov    ecx,DWORD PTR [rbx-0xc]
   140002993:	cmp    rbp,rcx
   140002996:	jb     0x1400029d6
   140002998:	mov    eax,DWORD PTR [rbx-0x8]
   14000299b:	cmp    rbp,rax
   14000299e:	jae    0x1400029d6
   1400029a0:	cmp    rsi,rcx
   1400029a3:	jb     0x1400029b2
   1400029a5:	cmp    rsi,rax
   1400029a8:	ja     0x1400029b2
   1400029aa:	test   BYTE PTR [r12+0x4],0x20
   1400029b0:	jne    0x1400029e3
   1400029b2:	mov    ecx,DWORD PTR [rbx]
   1400029b4:	test   ecx,ecx
   1400029b6:	je     0x1400029bf
   1400029b8:	cmp    rsi,rcx
   1400029bb:	je     0x1400029e3
   1400029bd:	jmp    0x1400029d6
   1400029bf:	mov    rdx,QWORD PTR [rsp+0x78]
   1400029c4:	add    rax,r14
   1400029c7:	mov    cl,0x1
   1400029c9:	mov    QWORD PTR [r15],rax
   1400029cc:	mov    r8d,DWORD PTR [rbx-0x4]
   1400029d0:	add    r8,r14
   1400029d3:	call   r8
   1400029d6:	add    edi,0x1
   1400029d9:	add    rbx,0x10
   1400029dd:	cmp    edi,DWORD PTR [r13+0x0]
   1400029e1:	jb     0x140002990
   1400029e3:	mov    eax,0x1
   1400029e8:	lea    r11,[rsp+0x40]
   1400029ed:	mov    rbx,QWORD PTR [r11+0x30]
   1400029f1:	mov    rbp,QWORD PTR [r11+0x40]
   1400029f5:	mov    rsi,QWORD PTR [r11+0x48]
   1400029f9:	mov    rsp,r11
   1400029fc:	pop    r15
   1400029fe:	pop    r14
   140002a00:	pop    r13
   140002a02:	pop    r12
   140002a04:	pop    rdi
   140002a05:	ret    
   140002a06:	int3   
   140002a07:	int3   
   140002a08:	int3   
   140002a09:	int3   
   140002a0a:	int3   
   140002a0b:	int3   
   140002a0c:	int3   
   140002a0d:	int3   
   140002a0e:	int3   
   140002a0f:	int3   
   140002a10:	mov    QWORD PTR [rsp+0x18],rbx
   140002a15:	push   rdi
   140002a16:	sub    rsp,0x20
   140002a1a:	test   rcx,rcx
   140002a1d:	mov    rbx,rdx
   140002a20:	mov    rdi,rcx
   140002a23:	jne    0x140002a37
   140002a25:	mov    rcx,rdx
   140002a28:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a2d:	add    rsp,0x20
   140002a31:	pop    rdi
   140002a32:	jmp    0x140006a30
   140002a37:	test   rdx,rdx
   140002a3a:	jne    0x140002a4e
   140002a3c:	call   0x140002700
   140002a41:	xor    eax,eax
   140002a43:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a48:	add    rsp,0x20
   140002a4c:	pop    rdi
   140002a4d:	ret    
   140002a4e:	cmp    rdx,0xffffffffffffffe0
   140002a52:	mov    QWORD PTR [rsp+0x30],rbp
   140002a57:	mov    QWORD PTR [rsp+0x38],rsi
   140002a5c:	ja     0x140002aa1
   140002a5e:	mov    ebp,0x1
   140002a63:	mov    rcx,QWORD PTR [rip+0x1375e]        # 0x1400161c8
   140002a6a:	test   rbx,rbx
   140002a6d:	mov    r8,rdi
   140002a70:	cmove  rbx,rbp
   140002a74:	xor    edx,edx
   140002a76:	mov    r9,rbx
   140002a79:	call   QWORD PTR [rip+0xc5e1]        # 0x14000f060
   140002a7f:	test   rax,rax
   140002a82:	mov    rsi,rax
   140002a85:	jne    0x140002afb
   140002a87:	cmp    DWORD PTR [rip+0x13753],eax        # 0x1400161e0
   140002a8d:	je     0x140002ae4
   140002a8f:	mov    rcx,rbx
   140002a92:	call   0x1400069f0
   140002a97:	test   eax,eax
   140002a99:	je     0x140002acb
   140002a9b:	cmp    rbx,0xffffffffffffffe0
   140002a9f:	jbe    0x140002a63
   140002aa1:	mov    rcx,rbx
   140002aa4:	call   0x1400069f0
   140002aa9:	call   0x140004100
   140002aae:	mov    DWORD PTR [rax],0xc
   140002ab4:	xor    eax,eax
   140002ab6:	mov    rbp,QWORD PTR [rsp+0x30]
   140002abb:	mov    rsi,QWORD PTR [rsp+0x38]
   140002ac0:	mov    rbx,QWORD PTR [rsp+0x40]
   140002ac5:	add    rsp,0x20
   140002ac9:	pop    rdi
   140002aca:	ret    
   140002acb:	call   0x140004100
   140002ad0:	mov    rbx,rax
   140002ad3:	call   QWORD PTR [rip+0xc5cf]        # 0x14000f0a8
   140002ad9:	mov    ecx,eax
   140002adb:	call   0x1400040b0
   140002ae0:	mov    DWORD PTR [rbx],eax
   140002ae2:	jmp    0x140002ab4
   140002ae4:	call   0x140004100
   140002ae9:	mov    rbx,rax
   140002aec:	call   QWORD PTR [rip+0xc5b6]        # 0x14000f0a8
   140002af2:	mov    ecx,eax
   140002af4:	call   0x1400040b0
   140002af9:	mov    DWORD PTR [rbx],eax
   140002afb:	mov    rax,rsi
   140002afe:	jmp    0x140002ab6
   140002b00:	sub    rsp,0x28
   140002b04:	mov    rcx,QWORD PTR [r9+0x38]
   140002b08:	mov    r10,r9
   140002b0b:	mov    r8,rdx
   140002b0e:	mov    eax,DWORD PTR [rcx]
   140002b10:	mov    r9d,eax
   140002b13:	and    r9d,0xfffffff8
   140002b17:	test   al,0x4
   140002b19:	je     0x140002b2d
   140002b1b:	mov    eax,DWORD PTR [rcx+0x8]
   140002b1e:	movsxd r8,DWORD PTR [rcx+0x4]
   140002b22:	neg    eax
   140002b24:	add    r8,rdx
   140002b27:	movsxd rcx,eax
   140002b2a:	and    r8,rcx
   140002b2d:	movsxd rax,r9d
   140002b30:	mov    r9,QWORD PTR [rax+r8*1]
   140002b34:	mov    rax,QWORD PTR [r10+0x10]
   140002b38:	mov    ecx,DWORD PTR [rax+0x8]
   140002b3b:	add    rcx,QWORD PTR [r10+0x8]
   140002b3f:	movzx  eax,BYTE PTR [rcx+0x3]
   140002b43:	test   al,0xf
   140002b45:	je     0x140002b52
   140002b47:	movzx  eax,al
   140002b4a:	and    eax,0xfffffff0
   140002b4d:	cdqe   
   140002b4f:	add    rdx,rax
   140002b52:	xor    rdx,r9
   140002b55:	mov    rcx,rdx
   140002b58:	call   0x1400020b0
   140002b5d:	mov    eax,0x1
   140002b62:	add    rsp,0x28
   140002b66:	ret    
   140002b67:	int3   
   140002b68:	int3   
   140002b69:	int3   
   140002b6a:	int3   
   140002b6b:	int3   
   140002b6c:	int3   
   140002b6d:	int3   
   140002b6e:	int3   
   140002b6f:	int3   
   140002b70:	lea    rax,[rip+0x114f9]        # 0x140014070
   140002b77:	ret    
   140002b78:	int3   
   140002b79:	int3   
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	rex push rbx
   140002b82:	sub    rsp,0x20
   140002b86:	mov    eax,DWORD PTR [rip+0x14cf4]        # 0x140017880
   140002b8c:	mov    ebx,0x14
   140002b91:	test   eax,eax
   140002b93:	jne    0x140002b9c
   140002b95:	mov    eax,0x200
   140002b9a:	jmp    0x140002ba1
   140002b9c:	cmp    eax,ebx
   140002b9e:	cmovl  eax,ebx
   140002ba1:	movsxd rcx,eax
   140002ba4:	mov    edx,0x8
   140002ba9:	mov    DWORD PTR [rip+0x14cd1],eax        # 0x140017880
   140002baf:	call   0x140006700
   140002bb4:	test   rax,rax
   140002bb7:	mov    QWORD PTR [rip+0x13cb2],rax        # 0x140016870
   140002bbe:	jne    0x140002be8
   140002bc0:	lea    edx,[rax+0x8]
   140002bc3:	mov    rcx,rbx
   140002bc6:	mov    DWORD PTR [rip+0x14cb4],ebx        # 0x140017880
   140002bcc:	call   0x140006700
   140002bd1:	test   rax,rax
   140002bd4:	mov    QWORD PTR [rip+0x13c95],rax        # 0x140016870
   140002bdb:	jne    0x140002be8
   140002bdd:	mov    eax,0x1a
   140002be2:	add    rsp,0x20
   140002be6:	pop    rbx
   140002be7:	ret    
   140002be8:	xor    r9d,r9d
   140002beb:	lea    rdx,[rip+0x1147e]        # 0x140014070
   140002bf2:	mov    rcx,r9
   140002bf5:	data16 data16 xchg ax,ax
   140002bf9:	data16 xchg ax,ax
   140002bfc:	data16 data16 xchg ax,ax
   140002c00:	mov    QWORD PTR [rcx+rax*1],rdx
   140002c04:	add    rcx,0x8
   140002c08:	add    rdx,0x30
   140002c0c:	sub    rbx,0x1
   140002c10:	je     0x140002c1b
   140002c12:	mov    rax,QWORD PTR [rip+0x13c57]        # 0x140016870
   140002c19:	jmp    0x140002c00
   140002c1b:	lea    r8,[rip+0x1146a]        # 0x14001408c
   140002c22:	mov    r10d,0x3
   140002c28:	lea    r11,[rip+0x13a11]        # 0x140016640
   140002c2f:	nop
   140002c30:	mov    al,r9b
   140002c33:	mov    rdx,r9
   140002c36:	and    eax,0x1f
   140002c39:	sar    rdx,0x5
   140002c3d:	lea    rcx,[rax+rax*4]
   140002c41:	mov    rax,QWORD PTR [r11+rdx*8]
   140002c45:	add    rcx,rcx
   140002c48:	mov    rdx,QWORD PTR [rax+rcx*8]
   140002c4c:	cmp    rdx,0xffffffffffffffff
   140002c50:	je     0x140002c5d
   140002c52:	cmp    rdx,0xfffffffffffffffe
   140002c56:	je     0x140002c5d
   140002c58:	test   rdx,rdx
   140002c5b:	jne    0x140002c64
   140002c5d:	mov    DWORD PTR [r8],0xfffffffe
   140002c64:	add    r9,0x1
   140002c68:	add    r8,0x30
   140002c6c:	sub    r10,0x1
   140002c70:	jne    0x140002c30
   140002c72:	xor    eax,eax
   140002c74:	add    rsp,0x20
   140002c78:	pop    rbx
   140002c79:	ret    
   140002c7a:	int3   
   140002c7b:	int3   
   140002c7c:	int3   
   140002c7d:	int3   
   140002c7e:	int3   
   140002c7f:	int3   
   140002c80:	sub    rsp,0x28
   140002c84:	call   0x140006e80
   140002c89:	cmp    BYTE PTR [rip+0x12fac],0x0        # 0x140015c3c
   140002c90:	je     0x140002c97
   140002c92:	call   0x140006b00
   140002c97:	mov    rcx,QWORD PTR [rip+0x13bd2]        # 0x140016870
   140002c9e:	add    rsp,0x28
   140002ca2:	jmp    0x140002700
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	rex push rbx
   140002cb2:	sub    rsp,0x20
   140002cb6:	mov    rbx,rcx
   140002cb9:	lea    rcx,[rip+0x113b0]        # 0x140014070
   140002cc0:	cmp    rbx,rcx
   140002cc3:	jb     0x140002d05
   140002cc5:	lea    rax,[rip+0x11734]        # 0x140014400
   140002ccc:	cmp    rbx,rax
   140002ccf:	ja     0x140002d05
   140002cd1:	mov    rdx,rbx
   140002cd4:	movabs rax,0x2aaaaaaaaaaaaaab
   140002cde:	sub    rdx,rcx
   140002ce1:	imul   rdx
   140002ce4:	sar    rdx,0x3
   140002ce8:	mov    rcx,rdx
   140002ceb:	shr    rcx,0x3f
   140002cef:	lea    ecx,[rcx+rdx*1+0x10]
   140002cf3:	call   0x140007100
   140002cf8:	or     DWORD PTR [rbx+0x18],0x8000
   140002cff:	add    rsp,0x20
   140002d03:	pop    rbx
   140002d04:	ret    
   140002d05:	lea    rcx,[rbx+0x30]
   140002d09:	add    rsp,0x20
   140002d0d:	pop    rbx
   140002d0e:	rex.W jmp QWORD PTR [rip+0xc36b]        # 0x14000f080
   140002d15:	int3   
   140002d16:	int3   
   140002d17:	int3   
   140002d18:	int3   
   140002d19:	int3   
   140002d1a:	int3   
   140002d1b:	int3   
   140002d1c:	int3   
   140002d1d:	int3   
   140002d1e:	int3   
   140002d1f:	int3   
   140002d20:	rex push rbx
   140002d22:	sub    rsp,0x20
   140002d26:	cmp    ecx,0x14
   140002d29:	mov    rbx,rdx
   140002d2c:	jge    0x140002d43
   140002d2e:	add    ecx,0x10
   140002d31:	call   0x140007100
   140002d36:	or     DWORD PTR [rbx+0x18],0x8000
   140002d3d:	add    rsp,0x20
   140002d41:	pop    rbx
   140002d42:	ret    
   140002d43:	lea    rcx,[rdx+0x30]
   140002d47:	add    rsp,0x20
   140002d4b:	pop    rbx
   140002d4c:	rex.W jmp QWORD PTR [rip+0xc32d]        # 0x14000f080
   140002d53:	int3   
   140002d54:	int3   
   140002d55:	int3   
   140002d56:	int3   
   140002d57:	int3   
   140002d58:	int3   
   140002d59:	int3   
   140002d5a:	int3   
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	lea    rdx,[rip+0x11309]        # 0x140014070
   140002d67:	cmp    rcx,rdx
   140002d6a:	jb     0x140002da3
   140002d6c:	lea    rax,[rip+0x1168d]        # 0x140014400
   140002d73:	cmp    rcx,rax
   140002d76:	ja     0x140002da3
   140002d78:	and    DWORD PTR [rcx+0x18],0xffff7fff
   140002d7f:	sub    rcx,rdx
   140002d82:	movabs rax,0x2aaaaaaaaaaaaaab
   140002d8c:	imul   rcx
   140002d8f:	sar    rdx,0x3
   140002d93:	mov    rcx,rdx
   140002d96:	shr    rcx,0x3f
   140002d9a:	lea    ecx,[rcx+rdx*1+0x10]
   140002d9e:	jmp    0x140006fd0
   140002da3:	add    rcx,0x30
   140002da7:	rex.W jmp QWORD PTR [rip+0xc2da]        # 0x14000f088
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	cmp    ecx,0x14
   140002db3:	jge    0x140002dc4
   140002db5:	and    DWORD PTR [rdx+0x18],0xffff7fff
   140002dbc:	add    ecx,0x10
   140002dbf:	jmp    0x140006fd0
   140002dc4:	lea    rcx,[rdx+0x30]
   140002dc8:	rex.W jmp QWORD PTR [rip+0xc2b9]        # 0x14000f088
   140002dcf:	int3   
   140002dd0:	rex push rbx
   140002dd2:	sub    rsp,0x20
   140002dd6:	mov    rbx,rcx
   140002dd9:	call   0x1400071d0
   140002dde:	mov    ecx,eax
   140002de0:	call   0x140007150
   140002de5:	test   eax,eax
   140002de7:	je     0x140002ea4
   140002ded:	call   0x140002b70
   140002df2:	add    rax,0x30
   140002df6:	cmp    rbx,rax
   140002df9:	jne    0x140002dff
   140002dfb:	xor    eax,eax
   140002dfd:	jmp    0x140002e16
   140002dff:	call   0x140002b70
   140002e04:	add    rax,0x60
   140002e08:	cmp    rbx,rax
   140002e0b:	jne    0x140002ea4
   140002e11:	mov    eax,0x1
   140002e16:	add    DWORD PTR [rip+0x1285f],0x1        # 0x14001567c
   140002e1d:	test   DWORD PTR [rbx+0x18],0x10c
   140002e24:	jne    0x140002ea4
   140002e26:	mov    QWORD PTR [rsp+0x30],rsi
   140002e2b:	lea    rsi,[rip+0x1284e]        # 0x140015680
   140002e32:	mov    QWORD PTR [rsp+0x38],rdi
   140002e37:	movsxd rdi,eax
   140002e3a:	cmp    QWORD PTR [rsi+rdi*8],0x0
   140002e3f:	jne    0x140002e6f
   140002e41:	mov    ecx,0x1000
   140002e46:	call   0x140006690
   140002e4b:	test   rax,rax
   140002e4e:	mov    QWORD PTR [rsi+rdi*8],rax
   140002e52:	jne    0x140002e6f
   140002e54:	lea    rax,[rbx+0x20]
   140002e58:	mov    DWORD PTR [rbx+0x24],0x2
   140002e5f:	mov    DWORD PTR [rbx+0x8],0x2
   140002e66:	mov    QWORD PTR [rbx+0x10],rax
   140002e6a:	mov    QWORD PTR [rbx],rax
   140002e6d:	jmp    0x140002e88
   140002e6f:	mov    rcx,QWORD PTR [rsi+rdi*8]
   140002e73:	mov    DWORD PTR [rbx+0x24],0x1000
   140002e7a:	mov    DWORD PTR [rbx+0x8],0x1000
   140002e81:	mov    QWORD PTR [rbx+0x10],rcx
   140002e85:	mov    QWORD PTR [rbx],rcx
   140002e88:	or     DWORD PTR [rbx+0x18],0x1102
   140002e8f:	mov    rdi,QWORD PTR [rsp+0x38]
   140002e94:	mov    rsi,QWORD PTR [rsp+0x30]
   140002e99:	mov    eax,0x1
   140002e9e:	add    rsp,0x20
   140002ea2:	pop    rbx
   140002ea3:	ret    
   140002ea4:	xor    eax,eax
   140002ea6:	add    rsp,0x20
   140002eaa:	pop    rbx
   140002eab:	ret    
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	test   ecx,ecx
   140002eb2:	je     0x140002ee3
   140002eb4:	push   rbx
   140002eb5:	sub    rsp,0x20
   140002eb9:	bt     DWORD PTR [rdx+0x18],0xc
   140002ebe:	mov    rbx,rdx
   140002ec1:	jae    0x140002ede
   140002ec3:	mov    rcx,rdx
   140002ec6:	call   0x140006bf0
   140002ecb:	and    DWORD PTR [rbx+0x18],0xffffeeff
   140002ed2:	xor    eax,eax
   140002ed4:	mov    DWORD PTR [rbx+0x24],eax
   140002ed7:	mov    QWORD PTR [rbx],rax
   140002eda:	mov    QWORD PTR [rbx+0x10],rax
   140002ede:	add    rsp,0x20
   140002ee2:	pop    rbx
   140002ee3:	ret    0x0
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	int3   
   140002ee9:	int3   
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140002ef5:	mov    QWORD PTR [rsp+0x10],rbp
   140002efa:	mov    QWORD PTR [rsp+0x18],rsi
   140002eff:	push   rdi
   140002f00:	sub    rsp,0x20
   140002f04:	test   BYTE PTR [r8+0x18],0x40
   140002f09:	mov    rbx,r9
   140002f0c:	mov    rdi,r8
   140002f0f:	mov    esi,edx
   140002f11:	mov    rbp,rcx
   140002f14:	je     0x140002f22
   140002f16:	cmp    QWORD PTR [r8+0x10],0x0
   140002f1b:	jne    0x140002f22
   140002f1d:	add    DWORD PTR [r9],edx
   140002f20:	jmp    0x140002f94
   140002f22:	test   edx,edx
   140002f24:	jle    0x140002f94
   140002f26:	sub    esi,0x1
   140002f29:	test   BYTE PTR [rdi+0x18],0x40
   140002f2d:	je     0x140002f36
   140002f2f:	cmp    QWORD PTR [rdi+0x10],0x0
   140002f34:	je     0x140002f50
   140002f36:	movzx  ecx,WORD PTR [rbp+0x0]
   140002f3a:	mov    rdx,rdi
   140002f3d:	call   0x1400080d0
   140002f42:	cmp    ax,0xffff
   140002f46:	jne    0x140002f50
   140002f48:	mov    DWORD PTR [rbx],0xffffffff
   140002f4e:	jmp    0x140002f53
   140002f50:	add    DWORD PTR [rbx],0x1
   140002f53:	add    rbp,0x2
   140002f57:	cmp    DWORD PTR [rbx],0xffffffff
   140002f5a:	jne    0x140002f90
   140002f5c:	call   0x140004100
   140002f61:	cmp    DWORD PTR [rax],0x2a
   140002f64:	jne    0x140002f94
   140002f66:	test   BYTE PTR [rdi+0x18],0x40
   140002f6a:	je     0x140002f73
   140002f6c:	cmp    QWORD PTR [rdi+0x10],0x0
   140002f71:	je     0x140002f8d
   140002f73:	mov    rdx,rdi
   140002f76:	mov    cx,0x3f
   140002f7a:	call   0x1400080d0
   140002f7f:	cmp    ax,0xffff
   140002f83:	jne    0x140002f8d
   140002f85:	mov    DWORD PTR [rbx],0xffffffff
   140002f8b:	jmp    0x140002f90
   140002f8d:	add    DWORD PTR [rbx],0x1
   140002f90:	test   esi,esi
   140002f92:	jg     0x140002f26
   140002f94:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f99:	mov    rbp,QWORD PTR [rsp+0x38]
   140002f9e:	mov    rsi,QWORD PTR [rsp+0x40]
   140002fa3:	add    rsp,0x20
   140002fa7:	pop    rdi
   140002fa8:	ret    
   140002fa9:	int3   
   140002faa:	int3   
   140002fab:	int3   
   140002fac:	int3   
   140002fad:	int3   
   140002fae:	int3   
   140002faf:	int3   
   140002fb0:	rex push rbx
   140002fb2:	push   rsi
   140002fb3:	push   rdi
   140002fb4:	push   r13
   140002fb6:	push   r14
   140002fb8:	sub    rsp,0x4f0
   140002fbf:	mov    rax,QWORD PTR [rip+0x1109a]        # 0x140014060
   140002fc6:	xor    rax,rsp
   140002fc9:	mov    QWORD PTR [rsp+0x4c0],rax
   140002fd1:	xor    ebx,ebx
   140002fd3:	test   r8,r8
   140002fd6:	mov    rdi,r9
   140002fd9:	mov    QWORD PTR [rsp+0x58],r9
   140002fde:	mov    rsi,rdx
   140002fe1:	mov    r13,rcx
   140002fe4:	mov    DWORD PTR [rsp+0x74],ebx
   140002fe8:	mov    r14d,ebx
   140002feb:	mov    DWORD PTR [rsp+0x40],ebx
   140002fef:	mov    r11d,ebx
   140002ff2:	mov    DWORD PTR [rsp+0x50],ebx
   140002ff6:	mov    r9d,ebx
   140002ff9:	mov    DWORD PTR [rsp+0x48],ebx
   140002ffd:	mov    r10d,ebx
   140003000:	mov    DWORD PTR [rsp+0x4c],ebx
   140003004:	mov    DWORD PTR [rsp+0x70],ebx
   140003008:	mov    DWORD PTR [rsp+0x60],ebx
   14000300c:	mov    BYTE PTR [rsp+0x90],bl
   140003013:	jne    0x1400030d7
   140003019:	call   0x140006240
   14000301e:	mov    QWORD PTR [rsp+0x88],rax
   140003026:	mov    rdx,rax
   140003029:	mov    rcx,QWORD PTR [rax+0xc0]
   140003030:	cmp    rcx,QWORD PTR [rip+0x120f9]        # 0x140015130
   140003037:	mov    QWORD PTR [rsp+0x78],rcx
   14000303c:	mov    rax,QWORD PTR [rax+0xb8]
   140003043:	mov    QWORD PTR [rsp+0x80],rax
   14000304b:	je     0x140003075
   14000304d:	mov    ecx,DWORD PTR [rdx+0xc8]
   140003053:	test   DWORD PTR [rip+0x11f5f],ecx        # 0x140014fb8
   140003059:	jne    0x140003075
   14000305b:	call   0x140008030
   140003060:	mov    rdx,QWORD PTR [rsp+0x88]
   140003068:	mov    QWORD PTR [rsp+0x78],rax
   14000306d:	mov    rax,QWORD PTR [rsp+0x80]
   140003075:	cmp    rax,QWORD PTR [rip+0x11e34]        # 0x140014eb0
   14000307c:	je     0x1400030a1
   14000307e:	mov    eax,DWORD PTR [rdx+0xc8]
   140003084:	test   DWORD PTR [rip+0x11f2e],eax        # 0x140014fb8
   14000308a:	jne    0x1400030a1
   14000308c:	call   0x1400074e0
   140003091:	mov    rdx,QWORD PTR [rsp+0x88]
   140003099:	mov    QWORD PTR [rsp+0x80],rax
   1400030a1:	test   BYTE PTR [rdx+0xc8],0x2
   1400030a8:	jne    0x1400030cc
   1400030aa:	or     DWORD PTR [rdx+0xc8],0x2
   1400030b1:	mov    rdx,QWORD PTR [rsp+0x88]
   1400030b9:	mov    r9d,ebx
   1400030bc:	mov    BYTE PTR [rsp+0x90],0x1
   1400030c4:	mov    r10d,ebx
   1400030c7:	mov    r11d,ebx
   1400030ca:	jmp    0x1400030f2
   1400030cc:	mov    r9d,ebx
   1400030cf:	mov    r10d,ebx
   1400030d2:	mov    r11d,ebx
   1400030d5:	jmp    0x1400030f2
   1400030d7:	mov    rax,QWORD PTR [r8]
   1400030da:	lea    rcx,[rsp+0x78]
   1400030df:	mov    QWORD PTR [rcx],rax
   1400030e2:	mov    rax,QWORD PTR [r8+0x8]
   1400030e6:	mov    QWORD PTR [rcx+0x8],rax
   1400030ea:	mov    rdx,QWORD PTR [rsp+0x88]
   1400030f2:	test   r13,r13
   1400030f5:	jne    0x140003136
   1400030f7:	call   0x140004100
   1400030fc:	xor    r9d,r9d
   1400030ff:	xor    r8d,r8d
   140003102:	xor    edx,edx
   140003104:	xor    ecx,ecx
   140003106:	mov    QWORD PTR [rsp+0x20],rbx
   14000310b:	mov    DWORD PTR [rax],0x16
   140003111:	call   0x140003fa0
   140003116:	cmp    BYTE PTR [rsp+0x90],bl
   14000311d:	je     0x14000312e
   14000311f:	mov    rax,QWORD PTR [rsp+0x88]
   140003127:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000312e:	or     eax,0xffffffff
   140003131:	jmp    0x140003e36
   140003136:	test   rsi,rsi
   140003139:	je     0x1400030f7
   14000313b:	mov    QWORD PTR [rsp+0x4e8],rbp
   140003143:	mov    QWORD PTR [rsp+0x4e0],r12
   14000314b:	movzx  r12d,WORD PTR [rsi]
   14000314f:	test   r12w,r12w
   140003153:	mov    QWORD PTR [rsp+0x4d8],r15
   14000315b:	mov    ebp,ebx
   14000315d:	mov    DWORD PTR [rsp+0x44],ebx
   140003161:	mov    r8d,ebx
   140003164:	mov    QWORD PTR [rsp+0xa0],rbx
   14000316c:	mov    r15d,ebx
   14000316f:	je     0x140003e0b
   140003175:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000317d:	lea    rdx,[rip+0xffffffffffffce7c]        # 0x140000000
   140003184:	data16 data16 xchg ax,ax
   140003188:	data16 data16 xchg ax,ax
   14000318c:	data16 data16 xchg ax,ax
   140003190:	add    rsi,0x2
   140003194:	test   ebp,ebp
   140003196:	mov    QWORD PTR [rsp+0xa8],rsi
   14000319e:	js     0x140003e03
   1400031a4:	lea    eax,[r12-0x20]
   1400031a9:	cmp    ax,0x58
   1400031ad:	ja     0x1400031bf
   1400031af:	movzx  eax,r12w
   1400031b3:	mov    cl,BYTE PTR [rax+rdx*1+0xfb00]
   1400031ba:	and    ecx,0xf
   1400031bd:	jmp    0x1400031c3
   1400031bf:	xor    eax,eax
   1400031c1:	mov    ecx,eax
   1400031c3:	movsxd rax,r8d
   1400031c6:	movsxd rcx,ecx
   1400031c9:	lea    rdx,[rax+rcx*8]
   1400031cd:	lea    rax,[rip+0xffffffffffffce2c]        # 0x140000000
   1400031d4:	movsx  eax,BYTE PTR [rdx+rax*1+0xfb20]
   1400031dc:	sar    eax,0x4
   1400031df:	cmp    eax,0x7
   1400031e2:	mov    DWORD PTR [rsp+0x98],eax
   1400031e9:	ja     0x140003da6
   1400031ef:	lea    rdx,[rip+0xffffffffffffce0a]        # 0x140000000
   1400031f6:	cdqe   
   1400031f8:	mov    ecx,DWORD PTR [rdx+rax*4+0x3e58]
   1400031ff:	add    rcx,rdx
   140003202:	jmp    rcx
   140003204:	xor    eax,eax
   140003206:	or     r9d,0xffffffff
   14000320a:	mov    DWORD PTR [rsp+0x48],r9d
   14000320f:	mov    DWORD PTR [rsp+0x9c],eax
   140003216:	mov    DWORD PTR [rsp+0x70],eax
   14000321a:	mov    r11d,eax
   14000321d:	mov    DWORD PTR [rsp+0x50],eax
   140003221:	mov    r10d,eax
   140003224:	mov    DWORD PTR [rsp+0x4c],eax
   140003228:	mov    r14d,eax
   14000322b:	mov    DWORD PTR [rsp+0x40],eax
   14000322f:	mov    DWORD PTR [rsp+0x60],eax
   140003233:	jmp    0x140003dad
   140003238:	movzx  eax,r12w
   14000323c:	cmp    eax,0x20
   14000323f:	je     0x140003292
   140003241:	cmp    eax,0x23
   140003244:	je     0x140003283
   140003246:	cmp    eax,0x2b
   140003249:	je     0x140003275
   14000324b:	cmp    eax,0x2d
   14000324e:	je     0x140003267
   140003250:	cmp    eax,0x30
   140003253:	jne    0x140003dad
   140003259:	or     r14d,0x8
   14000325d:	mov    DWORD PTR [rsp+0x40],r14d
   140003262:	jmp    0x140003dad
   140003267:	or     r14d,0x4
   14000326b:	mov    DWORD PTR [rsp+0x40],r14d
   140003270:	jmp    0x140003dad
   140003275:	or     r14d,0x1
   140003279:	mov    DWORD PTR [rsp+0x40],r14d
   14000327e:	jmp    0x140003dad
   140003283:	bts    r14d,0x7
   140003288:	mov    DWORD PTR [rsp+0x40],r14d
   14000328d:	jmp    0x140003dad
   140003292:	or     r14d,0x2
   140003296:	mov    DWORD PTR [rsp+0x40],r14d
   14000329b:	jmp    0x140003dad
   1400032a0:	cmp    r12w,0x2a
   1400032a5:	jne    0x1400032d7
   1400032a7:	mov    r11d,DWORD PTR [rdi]
   1400032aa:	add    rdi,0x8
   1400032ae:	test   r11d,r11d
   1400032b1:	mov    QWORD PTR [rsp+0x58],rdi
   1400032b6:	mov    DWORD PTR [rsp+0x50],r11d
   1400032bb:	jns    0x140003dad
   1400032c1:	or     r14d,0x4
   1400032c5:	neg    r11d
   1400032c8:	mov    DWORD PTR [rsp+0x50],r11d
   1400032cd:	mov    DWORD PTR [rsp+0x40],r14d
   1400032d2:	jmp    0x140003dad
   1400032d7:	lea    ecx,[r11+r11*4]
   1400032db:	movzx  eax,r12w
   1400032df:	lea    r11d,[rax+rcx*2-0x30]
   1400032e4:	mov    DWORD PTR [rsp+0x50],r11d
   1400032e9:	jmp    0x140003dad
   1400032ee:	xor    eax,eax
   1400032f0:	mov    r9d,eax
   1400032f3:	mov    DWORD PTR [rsp+0x48],eax
   1400032f7:	jmp    0x140003dad
   1400032fc:	cmp    r12w,0x2a
   140003301:	jne    0x14000332b
   140003303:	mov    r9d,DWORD PTR [rdi]
   140003306:	add    rdi,0x8
   14000330a:	test   r9d,r9d
   14000330d:	mov    QWORD PTR [rsp+0x58],rdi
   140003312:	mov    DWORD PTR [rsp+0x48],r9d
   140003317:	jns    0x140003dad
   14000331d:	or     r9d,0xffffffff
   140003321:	mov    DWORD PTR [rsp+0x48],r9d
   140003326:	jmp    0x140003dad
   14000332b:	lea    ecx,[r9+r9*4]
   14000332f:	movzx  eax,r12w
   140003333:	lea    r9d,[rax+rcx*2-0x30]
   140003338:	mov    DWORD PTR [rsp+0x48],r9d
   14000333d:	jmp    0x140003dad
   140003342:	movzx  eax,r12w
   140003346:	cmp    eax,0x49
   140003349:	je     0x1400033a2
   14000334b:	cmp    eax,0x68
   14000334e:	je     0x140003394
   140003350:	cmp    eax,0x6c
   140003353:	je     0x14000336d
   140003355:	cmp    eax,0x77
   140003358:	jne    0x140003dad
   14000335e:	bts    r14d,0xb
   140003363:	mov    DWORD PTR [rsp+0x40],r14d
   140003368:	jmp    0x140003dad
   14000336d:	cmp    WORD PTR [rsi],0x6c
   140003371:	jne    0x140003386
   140003373:	add    rsi,0x2
   140003377:	bts    r14d,0xc
   14000337c:	mov    DWORD PTR [rsp+0x40],r14d
   140003381:	jmp    0x140003dad
   140003386:	or     r14d,0x10
   14000338a:	mov    DWORD PTR [rsp+0x40],r14d
   14000338f:	jmp    0x140003dad
   140003394:	or     r14d,0x20
   140003398:	mov    DWORD PTR [rsp+0x40],r14d
   14000339d:	jmp    0x140003dad
   1400033a2:	movzx  eax,WORD PTR [rsi]
   1400033a5:	bts    r14d,0xf
   1400033aa:	cmp    ax,0x36
   1400033ae:	mov    DWORD PTR [rsp+0x40],r14d
   1400033b3:	jne    0x1400033cf
   1400033b5:	cmp    WORD PTR [rsi+0x2],0x34
   1400033ba:	jne    0x1400033cf
   1400033bc:	add    rsi,0x4
   1400033c0:	bts    r14d,0xf
   1400033c5:	mov    DWORD PTR [rsp+0x40],r14d
   1400033ca:	jmp    0x140003dad
   1400033cf:	cmp    ax,0x33
   1400033d3:	jne    0x1400033ef
   1400033d5:	cmp    WORD PTR [rsi+0x2],0x32
   1400033da:	jne    0x1400033ef
   1400033dc:	add    rsi,0x4
   1400033e0:	btr    r14d,0xf
   1400033e5:	mov    DWORD PTR [rsp+0x40],r14d
   1400033ea:	jmp    0x140003dad
   1400033ef:	cmp    ax,0x64
   1400033f3:	je     0x140003dad
   1400033f9:	cmp    ax,0x69
   1400033fd:	je     0x140003dad
   140003403:	cmp    ax,0x6f
   140003407:	je     0x140003dad
   14000340d:	cmp    ax,0x75
   140003411:	je     0x140003dad
   140003417:	cmp    ax,0x78
   14000341b:	je     0x140003dad
   140003421:	cmp    ax,0x58
   140003425:	je     0x140003dad
   14000342b:	xor    eax,eax
   14000342d:	mov    DWORD PTR [rsp+0x98],eax
   140003434:	test   BYTE PTR [r13+0x18],0x40
   140003439:	mov    DWORD PTR [rsp+0x60],0x1
   140003441:	je     0x140003456
   140003443:	cmp    QWORD PTR [r13+0x10],0x0
   140003448:	jne    0x140003456
   14000344a:	add    ebp,0x1
   14000344d:	mov    DWORD PTR [rsp+0x44],ebp
   140003451:	jmp    0x140003dad
   140003456:	mov    rdx,r13
   140003459:	movzx  ecx,r12w
   14000345d:	call   0x1400080d0
   140003462:	cmp    ax,0xffff
   140003466:	jne    0x14000348a
   140003468:	mov    r9d,DWORD PTR [rsp+0x48]
   14000346d:	mov    r10d,DWORD PTR [rsp+0x4c]
   140003472:	mov    r11d,DWORD PTR [rsp+0x50]
   140003477:	or     ebp,0xffffffff
   14000347a:	lea    rdx,[rip+0xffffffffffffcb7f]        # 0x140000000
   140003481:	mov    DWORD PTR [rsp+0x44],ebp
   140003485:	jmp    0x140003dad
   14000348a:	mov    r9d,DWORD PTR [rsp+0x48]
   14000348f:	mov    r10d,DWORD PTR [rsp+0x4c]
   140003494:	mov    r11d,DWORD PTR [rsp+0x50]
   140003499:	add    ebp,0x1
   14000349c:	lea    rdx,[rip+0xffffffffffffcb5d]        # 0x140000000
   1400034a3:	mov    DWORD PTR [rsp+0x44],ebp
   1400034a7:	jmp    0x140003dad
   1400034ac:	movzx  eax,r12w
   1400034b0:	add    eax,0xffffffbf
   1400034b3:	cmp    eax,0x37
   1400034b6:	ja     0x140003a07
   1400034bc:	cdqe   
   1400034be:	movzx  eax,BYTE PTR [rdx+rax*1+0x3eb4]
   1400034c6:	mov    ecx,DWORD PTR [rdx+rax*4+0x3e78]
   1400034cd:	add    rcx,rdx
   1400034d0:	jmp    rcx
   1400034d2:	test   r14d,0x830
   1400034d9:	jne    0x1400034e4
   1400034db:	or     r14d,0x20
   1400034df:	mov    DWORD PTR [rsp+0x40],r14d
   1400034e4:	movzx  eax,WORD PTR [rdi]
   1400034e7:	add    rdi,0x8
   1400034eb:	test   r14b,0x20
   1400034ef:	mov    WORD PTR [rsp+0x68],ax
   1400034f4:	mov    DWORD PTR [rsp+0x60],0x1
   1400034fc:	mov    QWORD PTR [rsp+0x58],rdi
   140003501:	je     0x14000354e
   140003503:	mov    BYTE PTR [rsp+0x6c],al
   140003507:	mov    rax,QWORD PTR [rsp+0x78]
   14000350c:	mov    BYTE PTR [rsp+0x6d],0x0
   140003511:	movsxd r8,DWORD PTR [rax+0x10c]
   140003518:	lea    r9,[rsp+0x78]
   14000351d:	lea    rdx,[rsp+0x6c]
   140003522:	lea    rcx,[rsp+0xc0]
   14000352a:	call   0x140008570
   14000352f:	test   eax,eax
   140003531:	jns    0x140003556
   140003533:	mov    DWORD PTR [rsp+0x70],0x1
   14000353b:	lea    rbx,[rsp+0xc0]
   140003543:	mov    r15d,0x1
   140003549:	jmp    0x140003a07
   14000354e:	mov    WORD PTR [rsp+0xc0],ax
   140003556:	lea    rbx,[rsp+0xc0]
   14000355e:	mov    r15d,0x1
   140003564:	jmp    0x140003a07
   140003569:	mov    rax,QWORD PTR [rdi]
   14000356c:	add    rdi,0x8
   140003570:	test   rax,rax
   140003573:	mov    QWORD PTR [rsp+0x58],rdi
   140003578:	je     0x1400035b1
   14000357a:	mov    rbx,QWORD PTR [rax+0x8]
   14000357e:	test   rbx,rbx
   140003581:	je     0x1400035b1
   140003583:	bt     r14d,0xb
   140003588:	jae    0x1400035a2
   14000358a:	movsx  eax,WORD PTR [rax]
   14000358d:	mov    DWORD PTR [rsp+0x60],0x1
   140003595:	cdq    
   140003596:	sub    eax,edx
   140003598:	sar    eax,1
   14000359a:	mov    r15d,eax
   14000359d:	jmp    0x140003a07
   1400035a2:	movsx  r15d,WORD PTR [rax]
   1400035a6:	xor    ecx,ecx
   1400035a8:	mov    DWORD PTR [rsp+0x60],ecx
   1400035ac:	jmp    0x140003a07
   1400035b1:	mov    rbx,QWORD PTR [rip+0x11be8]        # 0x1400151a0
   1400035b8:	or     rcx,0xffffffffffffffff
   1400035bc:	xor    eax,eax
   1400035be:	mov    rdi,rbx
   1400035c1:	repnz scas al,BYTE PTR es:[rdi]
   1400035c3:	not    rcx
   1400035c6:	sub    rcx,0x1
   1400035ca:	mov    r15,rcx
   1400035cd:	jmp    0x140003a07
   1400035d2:	test   r14d,0x830
   1400035d9:	jne    0x1400035e4
   1400035db:	or     r14d,0x20
   1400035df:	mov    DWORD PTR [rsp+0x40],r14d
   1400035e4:	mov    rbx,QWORD PTR [rdi]
   1400035e7:	cmp    r9d,0xffffffff
   1400035eb:	mov    esi,r9d
   1400035ee:	mov    eax,0x7fffffff
   1400035f3:	cmove  esi,eax
   1400035f6:	add    rdi,0x8
   1400035fa:	test   r14b,0x20
   1400035fe:	mov    QWORD PTR [rsp+0x58],rdi
   140003603:	je     0x140003652
   140003605:	test   rbx,rbx
   140003608:	cmove  rbx,QWORD PTR [rip+0x11b90]        # 0x1400151a0
   140003610:	xor    eax,eax
   140003612:	test   esi,esi
   140003614:	mov    rdi,rbx
   140003617:	mov    r15d,eax
   14000361a:	jle    0x140003a07
   140003620:	movzx  eax,BYTE PTR [rdi]
   140003623:	test   al,al
   140003625:	je     0x140003a07
   14000362b:	lea    rdx,[rsp+0x78]
   140003630:	movzx  ecx,al
   140003633:	call   0x1400083b0
   140003638:	test   eax,eax
   14000363a:	je     0x140003640
   14000363c:	add    rdi,0x1
   140003640:	add    r15d,0x1
   140003644:	add    rdi,0x1
   140003648:	cmp    r15d,esi
   14000364b:	jl     0x140003620
   14000364d:	jmp    0x140003a07
   140003652:	test   rbx,rbx
   140003655:	mov    DWORD PTR [rsp+0x60],0x1
   14000365d:	cmove  rbx,QWORD PTR [rip+0x11b43]        # 0x1400151a8
   140003665:	test   esi,esi
   140003667:	mov    rax,rbx
   14000366a:	je     0x140003681
   14000366c:	data16 data16 xchg ax,ax
   140003670:	sub    esi,0x1
   140003673:	cmp    WORD PTR [rax],0x0
   140003677:	je     0x140003681
   140003679:	add    rax,0x2
   14000367d:	test   esi,esi
   14000367f:	jne    0x140003670
   140003681:	sub    rax,rbx
   140003684:	sar    rax,1
   140003687:	mov    r15d,eax
   14000368a:	jmp    0x140003a07
   14000368f:	add    rdi,0x8
   140003693:	mov    QWORD PTR [rsp+0x58],rdi
   140003698:	mov    rdi,QWORD PTR [rdi-0x8]
   14000369c:	call   0x140008390
   1400036a1:	test   eax,eax
   1400036a3:	je     0x140003dc4
   1400036a9:	test   r14b,0x20
   1400036ad:	je     0x1400036bf
   1400036af:	mov    WORD PTR [rdi],bp
   1400036b2:	mov    DWORD PTR [rsp+0x70],0x1
   1400036ba:	jmp    0x140003d13
   1400036bf:	mov    DWORD PTR [rdi],ebp
   1400036c1:	mov    DWORD PTR [rsp+0x70],0x1
   1400036c9:	jmp    0x140003d13
   1400036ce:	mov    DWORD PTR [rsp+0x9c],0x1
   1400036d9:	add    r12w,0x20
   1400036de:	or     r14d,0x40
   1400036e2:	test   r9d,r9d
   1400036e5:	mov    eax,0x200
   1400036ea:	mov    DWORD PTR [rsp+0x40],r14d
   1400036ef:	mov    esi,eax
   1400036f1:	lea    rbx,[rsp+0xc0]
   1400036f9:	jns    0x140003708
   1400036fb:	mov    r15d,0x6
   140003701:	mov    DWORD PTR [rsp+0x48],r15d
   140003706:	jmp    0x140003783
   140003708:	test   r9d,r9d
   14000370b:	jne    0x140003721
   14000370d:	cmp    r12w,0x67
   140003712:	jne    0x140003777
   140003714:	mov    r15d,0x1
   14000371a:	mov    DWORD PTR [rsp+0x48],r15d
   14000371f:	jmp    0x140003783
   140003721:	cmp    r9d,eax
   140003724:	jle    0x14000372f
   140003726:	mov    r9d,eax
   140003729:	mov    DWORD PTR [rsp+0x48],eax
   14000372d:	jmp    0x140003738
   14000372f:	cmp    r9d,0xa3
   140003736:	jle    0x14000377e
   140003738:	lea    edi,[r9+0x15d]
   14000373f:	movsxd rcx,edi
   140003742:	call   0x140006690
   140003747:	test   rax,rax
   14000374a:	mov    QWORD PTR [rsp+0xa0],rax
   140003752:	je     0x140003765
   140003754:	mov    r15d,DWORD PTR [rsp+0x48]
   140003759:	mov    esi,edi
   14000375b:	mov    rdi,QWORD PTR [rsp+0x58]
   140003760:	mov    rbx,rax
   140003763:	jmp    0x140003783
   140003765:	mov    rdi,QWORD PTR [rsp+0x58]
   14000376a:	mov    r15d,0xa3
   140003770:	mov    DWORD PTR [rsp+0x48],r15d
   140003775:	jmp    0x140003783
   140003777:	mov    r15d,DWORD PTR [rsp+0x48]
   14000377c:	jmp    0x140003783
   14000377e:	mov    r15d,DWORD PTR [rsp+0x48]
   140003783:	mov    rax,QWORD PTR [rdi]
   140003786:	mov    rcx,QWORD PTR [rip+0x119f3]        # 0x140015180
   14000378d:	add    rdi,0x8
   140003791:	mov    QWORD PTR [rsp+0x58],rdi
   140003796:	movsxd rsi,esi
   140003799:	mov    QWORD PTR [rsp+0xb0],rax
   1400037a1:	movsx  edi,r12b
   1400037a5:	call   0x140005f50
   1400037aa:	lea    rcx,[rsp+0x78]
   1400037af:	mov    QWORD PTR [rsp+0x30],rcx
   1400037b4:	mov    ecx,DWORD PTR [rsp+0x9c]
   1400037bb:	mov    r9d,edi
   1400037be:	mov    DWORD PTR [rsp+0x28],ecx
   1400037c2:	lea    rcx,[rsp+0xb0]
   1400037ca:	mov    r8,rsi
   1400037cd:	mov    rdx,rbx
   1400037d0:	mov    DWORD PTR [rsp+0x20],r15d
   1400037d5:	call   rax
   1400037d7:	mov    edi,r14d
   1400037da:	and    edi,0x80
   1400037e0:	je     0x1400037fd
   1400037e2:	test   r15d,r15d
   1400037e5:	jne    0x1400037fd
   1400037e7:	mov    rcx,QWORD PTR [rip+0x119aa]        # 0x140015198
   1400037ee:	call   0x140005f50
   1400037f3:	lea    rdx,[rsp+0x78]
   1400037f8:	mov    rcx,rbx
   1400037fb:	call   rax
   1400037fd:	cmp    r12w,0x67
   140003802:	jne    0x14000381e
   140003804:	test   edi,edi
   140003806:	jne    0x14000381e
   140003808:	mov    rcx,QWORD PTR [rip+0x11981]        # 0x140015190
   14000380f:	call   0x140005f50
   140003814:	lea    rdx,[rsp+0x78]
   140003819:	mov    rcx,rbx
   14000381c:	call   rax
   14000381e:	cmp    BYTE PTR [rbx],0x2d
   140003821:	jne    0x140003831
   140003823:	bts    r14d,0x8
   140003828:	add    rbx,0x1
   14000382c:	mov    DWORD PTR [rsp+0x40],r14d
   140003831:	or     rcx,0xffffffffffffffff
   140003835:	xor    eax,eax
   140003837:	mov    rdi,rbx
   14000383a:	repnz scas al,BYTE PTR es:[rdi]
   14000383c:	not    rcx
   14000383f:	sub    rcx,0x1
   140003843:	mov    r15d,ecx
   140003846:	jmp    0x140003a07
   14000384b:	or     r14d,0x40
   14000384f:	mov    r8d,0xa
   140003855:	mov    DWORD PTR [rsp+0x40],r14d
   14000385a:	jmp    0x1400038be
   14000385c:	mov    r8d,0xa
   140003862:	jmp    0x1400038be
   140003864:	bts    r14d,0xf
   140003869:	mov    r9d,0x10
   14000386f:	mov    DWORD PTR [rsp+0x40],r14d
   140003874:	mov    eax,0x7
   140003879:	mov    DWORD PTR [rsp+0x74],eax
   14000387d:	jmp    0x140003888
   14000387f:	mov    eax,0x27
   140003884:	mov    DWORD PTR [rsp+0x74],eax
   140003888:	test   r14b,r14b
   14000388b:	mov    r8d,0x10
   140003891:	jns    0x1400038be
   140003893:	add    ax,0x51
   140003897:	mov    WORD PTR [rsp+0x64],0x30
   14000389e:	lea    r10d,[r8-0xe]
   1400038a2:	mov    WORD PTR [rsp+0x66],ax
   1400038a7:	jmp    0x1400038be
   1400038a9:	test   r14b,r14b
   1400038ac:	mov    r8d,0x8
   1400038b2:	jns    0x1400038be
   1400038b4:	bts    r14d,0x9
   1400038b9:	mov    DWORD PTR [rsp+0x40],r14d
   1400038be:	bt     r14d,0xf
   1400038c3:	jae    0x1400038d4
   1400038c5:	add    rdi,0x8
   1400038c9:	mov    QWORD PTR [rsp+0x58],rdi
   1400038ce:	mov    rdi,QWORD PTR [rdi-0x8]
   1400038d2:	jmp    0x140003936
   1400038d4:	bt     r14d,0xc
   1400038d9:	jae    0x1400038ea
   1400038db:	add    rdi,0x8
   1400038df:	mov    QWORD PTR [rsp+0x58],rdi
   1400038e4:	mov    rdi,QWORD PTR [rdi-0x8]
   1400038e8:	jmp    0x140003936
   1400038ea:	test   r14b,0x20
   1400038ee:	je     0x140003915
   1400038f0:	test   r14b,0x40
   1400038f4:	je     0x140003906
   1400038f6:	add    rdi,0x8
   1400038fa:	mov    QWORD PTR [rsp+0x58],rdi
   1400038ff:	movsx  rdi,WORD PTR [rdi-0x8]
   140003904:	jmp    0x140003936
   140003906:	add    rdi,0x8
   14000390a:	mov    QWORD PTR [rsp+0x58],rdi
   14000390f:	movzx  edi,WORD PTR [rdi-0x8]
   140003913:	jmp    0x140003936
   140003915:	test   r14b,0x40
   140003919:	je     0x14000392a
   14000391b:	add    rdi,0x8
   14000391f:	mov    QWORD PTR [rsp+0x58],rdi
   140003924:	movsxd rdi,DWORD PTR [rdi-0x8]
   140003928:	jmp    0x140003936
   14000392a:	add    rdi,0x8
   14000392e:	mov    QWORD PTR [rsp+0x58],rdi
   140003933:	mov    edi,DWORD PTR [rdi-0x8]
   140003936:	test   r14b,0x40
   14000393a:	je     0x14000394e
   14000393c:	test   rdi,rdi
   14000393f:	jns    0x14000394e
   140003941:	neg    rdi
   140003944:	bts    r14d,0x8
   140003949:	mov    DWORD PTR [rsp+0x40],r14d
   14000394e:	bt     r14d,0xf
   140003953:	jb     0x14000395e
   140003955:	bt     r14d,0xc
   14000395a:	jb     0x14000395e
   14000395c:	mov    edi,edi
   14000395e:	test   r9d,r9d
   140003961:	jns    0x14000396b
   140003963:	mov    r9d,0x1
   140003969:	jmp    0x140003980
   14000396b:	mov    eax,0x200
   140003970:	and    r14d,0xfffffff7
   140003974:	cmp    r9d,eax
   140003977:	mov    DWORD PTR [rsp+0x40],r14d
   14000397c:	cmovg  r9d,eax
   140003980:	mov    r14d,DWORD PTR [rsp+0x74]
   140003985:	test   rdi,rdi
   140003988:	mov    eax,0x0
   14000398d:	cmove  r10d,eax
   140003991:	lea    rbx,[rsp+0x2bf]
   140003999:	mov    DWORD PTR [rsp+0x4c],r10d
   14000399e:	xchg   ax,ax
   1400039a0:	mov    ecx,r9d
   1400039a3:	sub    r9d,0x1
   1400039a7:	test   ecx,ecx
   1400039a9:	jg     0x1400039b0
   1400039ab:	test   rdi,rdi
   1400039ae:	je     0x1400039d1
   1400039b0:	xor    edx,edx
   1400039b2:	mov    rax,rdi
   1400039b5:	movsxd rcx,r8d
   1400039b8:	div    rcx
   1400039bb:	mov    rdi,rax
   1400039be:	lea    eax,[rdx+0x30]
   1400039c1:	cmp    eax,0x39
   1400039c4:	jle    0x1400039c9
   1400039c6:	add    eax,r14d
   1400039c9:	mov    BYTE PTR [rbx],al
   1400039cb:	sub    rbx,0x1
   1400039cf:	jmp    0x1400039a0
   1400039d1:	mov    r14d,DWORD PTR [rsp+0x40]
   1400039d6:	lea    rax,[rsp+0x2bf]
   1400039de:	mov    DWORD PTR [rsp+0x48],r9d
   1400039e3:	sub    eax,ebx
   1400039e5:	add    rbx,0x1
   1400039e9:	bt     r14d,0x9
   1400039ee:	mov    r15d,eax
   1400039f1:	jae    0x140003a07
   1400039f3:	test   eax,eax
   1400039f5:	je     0x1400039fc
   1400039f7:	cmp    BYTE PTR [rbx],0x30
   1400039fa:	je     0x140003a07
   1400039fc:	sub    rbx,0x1
   140003a00:	add    r15d,0x1
   140003a04:	mov    BYTE PTR [rbx],0x30
   140003a07:	cmp    DWORD PTR [rsp+0x70],0x0
   140003a0c:	jne    0x140003d13
   140003a12:	test   r14b,0x40
   140003a16:	je     0x140003a61
   140003a18:	bt     r14d,0x8
   140003a1d:	jae    0x140003a31
   140003a1f:	mov    eax,0x1
   140003a24:	mov    WORD PTR [rsp+0x64],0x2d
   140003a2b:	mov    DWORD PTR [rsp+0x4c],eax
   140003a2f:	jmp    0x140003a6b
   140003a31:	test   r14b,0x1
   140003a35:	je     0x140003a49
   140003a37:	mov    eax,0x1
   140003a3c:	mov    WORD PTR [rsp+0x64],0x2b
   140003a43:	mov    DWORD PTR [rsp+0x4c],eax
   140003a47:	jmp    0x140003a6b
   140003a49:	test   r14b,0x2
   140003a4d:	je     0x140003a67
   140003a4f:	mov    eax,0x1
   140003a54:	mov    WORD PTR [rsp+0x64],0x20
   140003a5b:	mov    DWORD PTR [rsp+0x4c],eax
   140003a5f:	jmp    0x140003a6b
   140003a61:	mov    eax,DWORD PTR [rsp+0x4c]
   140003a65:	jmp    0x140003a6b
   140003a67:	mov    eax,DWORD PTR [rsp+0x4c]
   140003a6b:	mov    r14d,DWORD PTR [rsp+0x50]
   140003a70:	mov    r12d,DWORD PTR [rsp+0x40]
   140003a75:	sub    r14d,r15d
   140003a78:	sub    r14d,eax
   140003a7b:	test   r12b,0xc
   140003a7f:	jne    0x140003add
   140003a81:	test   r14d,r14d
   140003a84:	mov    edi,r14d
   140003a87:	jle    0x140003add
   140003a89:	data16 xchg ax,ax
   140003a8c:	data16 data16 xchg ax,ax
   140003a90:	sub    edi,0x1
   140003a93:	test   BYTE PTR [r13+0x18],0x40
   140003a98:	je     0x140003aaa
   140003a9a:	cmp    QWORD PTR [r13+0x10],0x0
   140003a9f:	jne    0x140003aaa
   140003aa1:	add    ebp,0x1
   140003aa4:	mov    DWORD PTR [rsp+0x44],ebp
   140003aa8:	jmp    0x140003ac3
   140003aaa:	mov    rdx,r13
   140003aad:	mov    cx,0x20
   140003ab1:	call   0x1400080d0
   140003ab6:	cmp    ax,0xffff
   140003aba:	je     0x140003ad2
   140003abc:	add    ebp,0x1
   140003abf:	mov    DWORD PTR [rsp+0x44],ebp
   140003ac3:	cmp    ebp,0xffffffff
   140003ac6:	je     0x140003acc
   140003ac8:	test   edi,edi
   140003aca:	jg     0x140003a90
   140003acc:	mov    eax,DWORD PTR [rsp+0x4c]
   140003ad0:	jmp    0x140003add
   140003ad2:	mov    eax,DWORD PTR [rsp+0x4c]
   140003ad6:	or     ebp,0xffffffff
   140003ad9:	mov    DWORD PTR [rsp+0x44],ebp
   140003add:	test   BYTE PTR [r13+0x18],0x40
   140003ae2:	mov    esi,eax
   140003ae4:	lea    rdi,[rsp+0x64]
   140003ae9:	je     0x140003afd
   140003aeb:	cmp    QWORD PTR [r13+0x10],0x0
   140003af0:	jne    0x140003afd
   140003af2:	add    ebp,eax
   140003af4:	mov    DWORD PTR [rsp+0x44],ebp
   140003af8:	jmp    0x140003b9f
   140003afd:	test   eax,eax
   140003aff:	jle    0x140003b9f
   140003b05:	xor    r12d,r12d
   140003b08:	data16 data16 xchg ax,ax
   140003b0c:	data16 data16 xchg ax,ax
   140003b10:	sub    esi,0x1
   140003b13:	test   BYTE PTR [r13+0x18],0x40
   140003b18:	je     0x140003b29
   140003b1a:	cmp    QWORD PTR [r13+0x10],r12
   140003b1e:	jne    0x140003b29
   140003b20:	add    ebp,0x1
   140003b23:	mov    DWORD PTR [rsp+0x44],ebp
   140003b27:	jmp    0x140003b4a
   140003b29:	movzx  ecx,WORD PTR [rdi]
   140003b2c:	mov    rdx,r13
   140003b2f:	call   0x1400080d0
   140003b34:	cmp    ax,0xffff
   140003b38:	jne    0x140003b43
   140003b3a:	or     ebp,0xffffffff
   140003b3d:	mov    DWORD PTR [rsp+0x44],ebp
   140003b41:	jmp    0x140003b4a
   140003b43:	add    ebp,0x1
   140003b46:	mov    DWORD PTR [rsp+0x44],ebp
   140003b4a:	add    rdi,0x2
   140003b4e:	cmp    ebp,0xffffffff
   140003b51:	jne    0x140003b92
   140003b53:	call   0x140004100
   140003b58:	cmp    DWORD PTR [rax],0x2a
   140003b5b:	jne    0x140003b9a
   140003b5d:	test   BYTE PTR [r13+0x18],0x40
   140003b62:	je     0x140003b74
   140003b64:	cmp    QWORD PTR [r13+0x10],r12
   140003b68:	jne    0x140003b74
   140003b6a:	mov    ebp,r12d
   140003b6d:	mov    DWORD PTR [rsp+0x44],r12d
   140003b72:	jmp    0x140003b92
   140003b74:	mov    rdx,r13
   140003b77:	mov    cx,0x3f
   140003b7b:	call   0x1400080d0
   140003b80:	mov    ebp,r12d
   140003b83:	cmp    ax,0xffff
   140003b87:	setne  bpl
   140003b8b:	sub    ebp,0x1
   140003b8e:	mov    DWORD PTR [rsp+0x44],ebp
   140003b92:	test   esi,esi
   140003b94:	jg     0x140003b10
   140003b9a:	mov    r12d,DWORD PTR [rsp+0x40]
   140003b9f:	test   r12b,0x8
   140003ba3:	je     0x140003bf8
   140003ba5:	test   r12b,0x4
   140003ba9:	jne    0x140003bf8
   140003bab:	test   r14d,r14d
   140003bae:	mov    edi,r14d
   140003bb1:	jle    0x140003bf8
   140003bb3:	sub    edi,0x1
   140003bb6:	test   BYTE PTR [r13+0x18],0x40
   140003bbb:	je     0x140003bcd
   140003bbd:	cmp    QWORD PTR [r13+0x10],0x0
   140003bc2:	jne    0x140003bcd
   140003bc4:	add    ebp,0x1
   140003bc7:	mov    DWORD PTR [rsp+0x44],ebp
   140003bcb:	jmp    0x140003be6
   140003bcd:	mov    rdx,r13
   140003bd0:	mov    cx,0x30
   140003bd4:	call   0x1400080d0
   140003bd9:	cmp    ax,0xffff
   140003bdd:	je     0x140003bf1
   140003bdf:	add    ebp,0x1
   140003be2:	mov    DWORD PTR [rsp+0x44],ebp
   140003be6:	cmp    ebp,0xffffffff
   140003be9:	je     0x140003bf8
   140003beb:	test   edi,edi
   140003bed:	jg     0x140003bb3
   140003bef:	jmp    0x140003bf8
   140003bf1:	or     ebp,0xffffffff
   140003bf4:	mov    DWORD PTR [rsp+0x44],ebp
   140003bf8:	cmp    DWORD PTR [rsp+0x60],0x0
   140003bfd:	jne    0x140003c9e
   140003c03:	test   r15d,r15d
   140003c06:	jle    0x140003c9e
   140003c0c:	mov    rdi,rbx
   140003c0f:	mov    esi,r15d
   140003c12:	xchg   ax,ax
   140003c14:	data16 data16 xchg ax,ax
   140003c18:	data16 data16 xchg ax,ax
   140003c1c:	data16 data16 xchg ax,ax
   140003c20:	mov    rax,QWORD PTR [rsp+0x78]
   140003c25:	lea    r9,[rsp+0x78]
   140003c2a:	lea    rcx,[rsp+0x68]
   140003c2f:	movsxd r8,DWORD PTR [rax+0x10c]
   140003c36:	mov    rdx,rdi
   140003c39:	sub    esi,0x1
   140003c3c:	call   0x140008570
   140003c41:	test   eax,eax
   140003c43:	movsxd r12,eax
   140003c46:	jle    0x140003c90
   140003c48:	test   BYTE PTR [r13+0x18],0x40
   140003c4d:	je     0x140003c5f
   140003c4f:	cmp    QWORD PTR [r13+0x10],0x0
   140003c54:	jne    0x140003c5f
   140003c56:	add    ebp,0x1
   140003c59:	mov    DWORD PTR [rsp+0x44],ebp
   140003c5d:	jmp    0x140003c82
   140003c5f:	movzx  ecx,WORD PTR [rsp+0x68]
   140003c64:	mov    rdx,r13
   140003c67:	call   0x1400080d0
   140003c6c:	cmp    ax,0xffff
   140003c70:	jne    0x140003c7b
   140003c72:	or     ebp,0xffffffff
   140003c75:	mov    DWORD PTR [rsp+0x44],ebp
   140003c79:	jmp    0x140003c82
   140003c7b:	add    ebp,0x1
   140003c7e:	mov    DWORD PTR [rsp+0x44],ebp
   140003c82:	add    rdi,r12
   140003c85:	test   esi,esi
   140003c87:	jg     0x140003c20
   140003c89:	mov    r12d,DWORD PTR [rsp+0x40]
   140003c8e:	jmp    0x140003cb5
   140003c90:	mov    r14d,DWORD PTR [rsp+0x40]
   140003c95:	or     ebp,0xffffffff
   140003c98:	mov    DWORD PTR [rsp+0x44],ebp
   140003c9c:	jmp    0x140003d13
   140003c9e:	lea    r9,[rsp+0x44]
   140003ca3:	mov    r8,r13
   140003ca6:	mov    edx,r15d
   140003ca9:	mov    rcx,rbx
   140003cac:	call   0x140002ef0
   140003cb1:	mov    ebp,DWORD PTR [rsp+0x44]
   140003cb5:	test   ebp,ebp
   140003cb7:	js     0x140003d73
   140003cbd:	test   r12b,0x4
   140003cc1:	je     0x140003d7a
   140003cc7:	test   r14d,r14d
   140003cca:	jle    0x140003d6c
   140003cd0:	sub    r14d,0x1
   140003cd4:	test   BYTE PTR [r13+0x18],0x40
   140003cd9:	je     0x140003ceb
   140003cdb:	cmp    QWORD PTR [r13+0x10],0x0
   140003ce0:	jne    0x140003ceb
   140003ce2:	add    ebp,0x1
   140003ce5:	mov    DWORD PTR [rsp+0x44],ebp
   140003ce9:	jmp    0x140003d04
   140003ceb:	mov    rdx,r13
   140003cee:	mov    cx,0x20
   140003cf2:	call   0x1400080d0
   140003cf7:	cmp    ax,0xffff
   140003cfb:	je     0x140003d57
   140003cfd:	add    ebp,0x1
   140003d00:	mov    DWORD PTR [rsp+0x44],ebp
   140003d04:	cmp    ebp,0xffffffff
   140003d07:	je     0x140003d65
   140003d09:	test   r14d,r14d
   140003d0c:	jg     0x140003cd0
   140003d0e:	mov    r14d,DWORD PTR [rsp+0x40]
   140003d13:	mov    rax,QWORD PTR [rsp+0xa0]
   140003d1b:	test   rax,rax
   140003d1e:	je     0x140003d81
   140003d20:	mov    rcx,rax
   140003d23:	call   0x140002700
   140003d28:	mov    r9d,DWORD PTR [rsp+0x48]
   140003d2d:	mov    rdi,QWORD PTR [rsp+0x58]
   140003d32:	mov    rsi,QWORD PTR [rsp+0xa8]
   140003d3a:	mov    r10d,DWORD PTR [rsp+0x4c]
   140003d3f:	mov    r11d,DWORD PTR [rsp+0x50]
   140003d44:	xor    ecx,ecx
   140003d46:	lea    rdx,[rip+0xffffffffffffc2b3]        # 0x140000000
   140003d4d:	mov    QWORD PTR [rsp+0xa0],rcx
   140003d55:	jmp    0x140003dad
   140003d57:	mov    r14d,DWORD PTR [rsp+0x40]
   140003d5c:	or     ebp,0xffffffff
   140003d5f:	mov    DWORD PTR [rsp+0x44],ebp
   140003d63:	jmp    0x140003d13
   140003d65:	mov    r14d,DWORD PTR [rsp+0x40]
   140003d6a:	jmp    0x140003d13
   140003d6c:	mov    r14d,DWORD PTR [rsp+0x40]
   140003d71:	jmp    0x140003d13
   140003d73:	mov    r14d,DWORD PTR [rsp+0x40]
   140003d78:	jmp    0x140003d13
   140003d7a:	mov    r14d,DWORD PTR [rsp+0x40]
   140003d7f:	jmp    0x140003d13
   140003d81:	mov    r9d,DWORD PTR [rsp+0x48]
   140003d86:	mov    rdi,QWORD PTR [rsp+0x58]
   140003d8b:	mov    rsi,QWORD PTR [rsp+0xa8]
   140003d93:	mov    r10d,DWORD PTR [rsp+0x4c]
   140003d98:	mov    r11d,DWORD PTR [rsp+0x50]
   140003d9d:	lea    rdx,[rip+0xffffffffffffc25c]        # 0x140000000
   140003da4:	jmp    0x140003dad
   140003da6:	lea    rdx,[rip+0xffffffffffffc253]        # 0x140000000
   140003dad:	mov    r12w,WORD PTR [rsi]
   140003db1:	test   r12w,r12w
   140003db5:	je     0x140003e03
   140003db7:	mov    r8d,DWORD PTR [rsp+0x98]
   140003dbf:	jmp    0x140003190
   140003dc4:	call   0x140004100
   140003dc9:	xor    r9d,r9d
   140003dcc:	xor    r8d,r8d
   140003dcf:	mov    DWORD PTR [rax],0x16
   140003dd5:	xor    eax,eax
   140003dd7:	xor    edx,edx
   140003dd9:	xor    ecx,ecx
   140003ddb:	mov    QWORD PTR [rsp+0x20],rax
   140003de0:	call   0x140003fa0
   140003de5:	cmp    BYTE PTR [rsp+0x90],0x0
   140003ded:	je     0x140003dfe
   140003def:	mov    rax,QWORD PTR [rsp+0x88]
   140003df7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140003dfe:	or     eax,0xffffffff
   140003e01:	jmp    0x140003e1e
   140003e03:	mov    rdx,QWORD PTR [rsp+0x88]
   140003e0b:	cmp    BYTE PTR [rsp+0x90],0x0
   140003e13:	je     0x140003e1c
   140003e15:	and    DWORD PTR [rdx+0xc8],0xfffffffd
   140003e1c:	mov    eax,ebp
   140003e1e:	mov    r12,QWORD PTR [rsp+0x4e0]
   140003e26:	mov    rbp,QWORD PTR [rsp+0x4e8]
   140003e2e:	mov    r15,QWORD PTR [rsp+0x4d8]
   140003e36:	mov    rcx,QWORD PTR [rsp+0x4c0]
   140003e3e:	xor    rcx,rsp
   140003e41:	call   0x1400020b0
   140003e46:	add    rsp,0x4f0
   140003e4d:	pop    r14
   140003e4f:	pop    r13
   140003e51:	pop    rdi
   140003e52:	pop    rsi
   140003e53:	pop    rbx
   140003e54:	ret    
   140003e55:	data16 xchg ax,ax
   140003e58:	xor    al,0x34
   140003e5a:	add    BYTE PTR [rax],al
   140003e5c:	add    al,0x32
   140003e5e:	add    BYTE PTR [rax],al
   140003e60:	cmp    BYTE PTR [rdx],dh
   140003e62:	add    BYTE PTR [rax],al
   140003e64:	movabs al,ds:0xfc000032ee000032
   140003e6d:	xor    al,BYTE PTR [rax]
   140003e6f:	add    BYTE PTR [rdx+0x33],al
   140003e72:	add    BYTE PTR [rax],al
   140003e74:	lods   al,BYTE PTR ds:[rsi]
   140003e75:	xor    al,0x0
   140003e77:	add    dh,cl
   140003e79:	add    BYTE PTR ss:[rax],al
   140003e7c:	shl    BYTE PTR [rax+rax*1],cl
   140003e7f:	add    dl,dl
   140003e81:	xor    eax,0x38740000
   140003e86:	add    BYTE PTR [rax],al
   140003e88:	imul   esi,DWORD PTR [rip+0x36de0000],0x34e40000        # 0x176de3e92
   140003e92:	add    BYTE PTR [rax],al
   140003e94:	rex.WXB cmp BYTE PTR [r8],al
   140003e97:	add    BYTE PTR [rdi-0x56ffffca],cl
   140003e9d:	cmp    BYTE PTR [rax],al
   140003e9f:	add    BYTE PTR [rax+rdi*1+0x0],ah
   140003ea3:	add    ah,ah
   140003ea5:	xor    eax,0x385c0000
   140003eaa:	add    BYTE PTR [rax],al
   140003eac:	jg     0x140003ee6
   140003eae:	add    BYTE PTR [rax],al
   140003eb0:	(bad)  
   140003eb1:	cmp    al,BYTE PTR [rax]
   140003eb3:	add    BYTE PTR [rax],al
   140003eb5:	(bad)  
   140003eb6:	add    DWORD PTR [rsi],ecx
   140003eb8:	add    BYTE PTR [rsi],cl
   140003eba:	add    BYTE PTR [rsi],cl
   140003ebc:	(bad)  
   140003ebd:	(bad)  
   140003ebe:	(bad)  
   140003ebf:	(bad)  
   140003ec0:	(bad)  
   140003ec1:	(bad)  
   140003ec2:	(bad)  
   140003ec3:	(bad)  
   140003ec4:	(bad)  
   140003ec5:	(bad)  
   140003ec6:	add    cl,BYTE PTR [rsi]
   140003ec8:	(bad)  
   140003ec9:	(bad)  
   140003eca:	(bad)  
   140003ecb:	add    ecx,DWORD PTR [rsi]
   140003ecd:	add    al,0xe
   140003ecf:	(bad)  
   140003ed0:	(bad)  
   140003ed1:	(bad)  
   140003ed2:	(bad)  
   140003ed3:	(bad)  
   140003ed4:	add    eax,0x507060e
   140003ed9:	add    eax,0xe070e05
   140003ede:	(bad)  
   140003edf:	(bad)  
   140003ee0:	(bad)  
   140003ee1:	or     BYTE PTR [rcx],cl
   140003ee3:	or     cl,BYTE PTR [rsi]
   140003ee5:	(bad)  
   140003ee6:	or     ecx,DWORD PTR [rsi]
   140003ee8:	or     al,0xe
   140003eea:	(bad)  
   140003eeb:	or     eax,0xcccccccc
   140003ef0:	mov    QWORD PTR [rip+0x11799],rcx        # 0x140015690
   140003ef7:	ret    
   140003ef8:	int3   
   140003ef9:	int3   
   140003efa:	int3   
   140003efb:	int3   
   140003efc:	int3   
   140003efd:	int3   
   140003efe:	int3   
   140003eff:	int3   
   140003f00:	rex push rbx
   140003f02:	sub    rsp,0x5a0
   140003f09:	lea    rcx,[rsp+0xd0]
   140003f11:	call   QWORD PTR [rip+0xb1c9]        # 0x14000f0e0
   140003f17:	lea    rcx,[rsp+0x30]
   140003f1c:	xor    edx,edx
   140003f1e:	mov    r8d,0x98
   140003f24:	call   0x140002760
   140003f29:	mov    rax,QWORD PTR [rsp+0x5a8]
   140003f31:	mov    DWORD PTR [rsp+0x30],0xc000000d
   140003f39:	mov    QWORD PTR [rsp+0x40],rax
   140003f3e:	lea    rax,[rsp+0x30]
   140003f43:	mov    QWORD PTR [rsp+0x20],rax
   140003f48:	lea    rax,[rsp+0xd0]
   140003f50:	mov    QWORD PTR [rsp+0x28],rax
   140003f55:	call   QWORD PTR [rip+0xb17d]        # 0x14000f0d8
   140003f5b:	xor    ecx,ecx
   140003f5d:	mov    ebx,eax
   140003f5f:	call   QWORD PTR [rip+0xb16b]        # 0x14000f0d0
   140003f65:	lea    rcx,[rsp+0x20]
   140003f6a:	call   QWORD PTR [rip+0xb158]        # 0x14000f0c8
   140003f70:	test   eax,eax
   140003f72:	jne    0x140003f80
   140003f74:	test   ebx,ebx
   140003f76:	jne    0x140003f80
   140003f78:	lea    ecx,[rax+0x2]
   140003f7b:	call   0x1400087e0
   140003f80:	call   QWORD PTR [rip+0xb13a]        # 0x14000f0c0
   140003f86:	mov    edx,0xc000000d
   140003f8b:	mov    rcx,rax
   140003f8e:	call   QWORD PTR [rip+0xb124]        # 0x14000f0b8
   140003f94:	add    rsp,0x5a0
   140003f9b:	pop    rbx
   140003f9c:	ret    
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140003fa5:	mov    QWORD PTR [rsp+0x10],rbp
   140003faa:	mov    QWORD PTR [rsp+0x18],rsi
   140003faf:	push   rdi
   140003fb0:	sub    rsp,0x5b0
   140003fb7:	mov    rbp,rcx
   140003fba:	mov    rcx,QWORD PTR [rip+0x116cf]        # 0x140015690
   140003fc1:	mov    ebx,r9d
   140003fc4:	mov    rdi,r8
   140003fc7:	mov    rsi,rdx
   140003fca:	call   0x140005f50
   140003fcf:	test   rax,rax
   140003fd2:	je     0x140003ff4
   140003fd4:	mov    r10,QWORD PTR [rsp+0x5e0]
   140003fdc:	mov    r9d,ebx
   140003fdf:	mov    r8,rdi
   140003fe2:	mov    rdx,rsi
   140003fe5:	mov    rcx,rbp
   140003fe8:	mov    QWORD PTR [rsp+0x20],r10
   140003fed:	call   rax
   140003fef:	jmp    0x140004089
   140003ff4:	mov    ecx,0x2
   140003ff9:	call   0x1400087e0
   140003ffe:	lea    rcx,[rsp+0xe0]
   140004006:	call   QWORD PTR [rip+0xb0d4]        # 0x14000f0e0
   14000400c:	lea    rcx,[rsp+0x40]
   140004011:	xor    edx,edx
   140004013:	mov    r8d,0x98
   140004019:	call   0x140002760
   14000401e:	mov    rax,QWORD PTR [rsp+0x5b8]
   140004026:	mov    DWORD PTR [rsp+0x40],0xc000000d
   14000402e:	mov    QWORD PTR [rsp+0x50],rax
   140004033:	lea    rax,[rsp+0x40]
   140004038:	mov    QWORD PTR [rsp+0x30],rax
   14000403d:	lea    rax,[rsp+0xe0]
   140004045:	mov    QWORD PTR [rsp+0x38],rax
   14000404a:	call   QWORD PTR [rip+0xb088]        # 0x14000f0d8
   140004050:	xor    ecx,ecx
   140004052:	mov    ebx,eax
   140004054:	call   QWORD PTR [rip+0xb076]        # 0x14000f0d0
   14000405a:	lea    rcx,[rsp+0x30]
   14000405f:	call   QWORD PTR [rip+0xb063]        # 0x14000f0c8
   140004065:	test   eax,eax
   140004067:	jne    0x140004075
   140004069:	test   ebx,ebx
   14000406b:	jne    0x140004075
   14000406d:	lea    ecx,[rax+0x2]
   140004070:	call   0x1400087e0
   140004075:	call   QWORD PTR [rip+0xb045]        # 0x14000f0c0
   14000407b:	mov    edx,0xc000000d
   140004080:	mov    rcx,rax
   140004083:	call   QWORD PTR [rip+0xb02f]        # 0x14000f0b8
   140004089:	lea    r11,[rsp+0x5b0]
   140004091:	mov    rbx,QWORD PTR [r11+0x10]
   140004095:	mov    rbp,QWORD PTR [r11+0x18]
   140004099:	mov    rsi,QWORD PTR [r11+0x20]
   14000409d:	mov    rsp,r11
   1400040a0:	pop    rdi
   1400040a1:	ret    
   1400040a2:	int3   
   1400040a3:	int3   
   1400040a4:	int3   
   1400040a5:	int3   
   1400040a6:	int3   
   1400040a7:	int3   
   1400040a8:	int3   
   1400040a9:	int3   
   1400040aa:	int3   
   1400040ab:	int3   
   1400040ac:	int3   
   1400040ad:	int3   
   1400040ae:	int3   
   1400040af:	int3   
   1400040b0:	lea    r8,[rip+0x10379]        # 0x140014430
   1400040b7:	xor    edx,edx
   1400040b9:	mov    rax,r8
   1400040bc:	data16 data16 xchg ax,ax
   1400040c0:	cmp    ecx,DWORD PTR [rax]
   1400040c2:	je     0x1400040f5
   1400040c4:	add    edx,0x1
   1400040c7:	add    rax,0x8
   1400040cb:	cmp    edx,0x2d
   1400040ce:	jb     0x1400040c0
   1400040d0:	lea    eax,[rcx-0x13]
   1400040d3:	cmp    eax,0x11
   1400040d6:	ja     0x1400040de
   1400040d8:	mov    eax,0xd
   1400040dd:	ret    
   1400040de:	add    ecx,0xffffff44
   1400040e4:	mov    eax,0x16
   1400040e9:	mov    edx,0x8
   1400040ee:	cmp    ecx,0xe
   1400040f1:	cmovbe eax,edx
   1400040f4:	ret    
   1400040f5:	movsxd rax,edx
   1400040f8:	mov    eax,DWORD PTR [r8+rax*8+0x4]
   1400040fd:	ret    
   1400040fe:	int3   
   1400040ff:	int3   
   140004100:	sub    rsp,0x28
   140004104:	call   0x1400061b0
   140004109:	test   rax,rax
   14000410c:	jne    0x14000411a
   14000410e:	lea    rax,[rip+0x10483]        # 0x140014598
   140004115:	add    rsp,0x28
   140004119:	ret    
   14000411a:	add    rax,0x10
   14000411e:	add    rsp,0x28
   140004122:	ret    
   140004123:	int3   
   140004124:	int3   
   140004125:	int3   
   140004126:	int3   
   140004127:	int3   
   140004128:	int3   
   140004129:	int3   
   14000412a:	int3   
   14000412b:	int3   
   14000412c:	int3   
   14000412d:	int3   
   14000412e:	int3   
   14000412f:	int3   
   140004130:	sub    rsp,0x28
   140004134:	call   0x1400061b0
   140004139:	test   rax,rax
   14000413c:	jne    0x14000414a
   14000413e:	lea    rax,[rip+0x10457]        # 0x14001459c
   140004145:	add    rsp,0x28
   140004149:	ret    
   14000414a:	add    rax,0x14
   14000414e:	add    rsp,0x28
   140004152:	ret    
   140004153:	int3   
   140004154:	int3   
   140004155:	int3   
   140004156:	int3   
   140004157:	int3   
   140004158:	int3   
   140004159:	int3   
   14000415a:	int3   
   14000415b:	int3   
   14000415c:	int3   
   14000415d:	int3   
   14000415e:	int3   
   14000415f:	int3   
   140004160:	rex push rbx
   140004162:	sub    rsp,0x20
   140004166:	mov    ebx,ecx
   140004168:	call   0x1400061b0
   14000416d:	test   rax,rax
   140004170:	jne    0x14000417b
   140004172:	lea    rax,[rip+0x10423]        # 0x14001459c
   140004179:	jmp    0x14000417f
   14000417b:	add    rax,0x14
   14000417f:	lea    rdx,[rip+0x102aa]        # 0x140014430
   140004186:	mov    DWORD PTR [rax],ebx
   140004188:	xor    ecx,ecx
   14000418a:	mov    rax,rdx
   14000418d:	data16 xchg ax,ax
   140004190:	cmp    ebx,DWORD PTR [rax]
   140004192:	je     0x1400041c7
   140004194:	add    ecx,0x1
   140004197:	add    rax,0x8
   14000419b:	cmp    ecx,0x2d
   14000419e:	jb     0x140004190
   1400041a0:	lea    eax,[rbx-0x13]
   1400041a3:	cmp    eax,0x11
   1400041a6:	ja     0x1400041af
   1400041a8:	mov    ebx,0xd
   1400041ad:	jmp    0x1400041ce
   1400041af:	lea    eax,[rbx-0xbc]
   1400041b5:	mov    ecx,0x8
   1400041ba:	mov    ebx,0x16
   1400041bf:	cmp    eax,0xe
   1400041c2:	cmovbe ebx,ecx
   1400041c5:	jmp    0x1400041ce
   1400041c7:	movsxd rax,ecx
   1400041ca:	mov    ebx,DWORD PTR [rdx+rax*8+0x4]
   1400041ce:	call   0x1400061b0
   1400041d3:	test   rax,rax
   1400041d6:	jne    0x1400041e4
   1400041d8:	mov    DWORD PTR [rip+0x103ba],ebx        # 0x140014598
   1400041de:	add    rsp,0x20
   1400041e2:	pop    rbx
   1400041e3:	ret    
   1400041e4:	mov    DWORD PTR [rax+0x10],ebx
   1400041e7:	add    rsp,0x20
   1400041eb:	pop    rbx
   1400041ec:	ret    
   1400041ed:	int3   
   1400041ee:	int3   
   1400041ef:	int3   
   1400041f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400041f5:	sub    rsp,0x88
   1400041fc:	lea    rcx,[rip+0x1153d]        # 0x140015740
   140004203:	call   QWORD PTR [rip+0xaed7]        # 0x14000f0e0
   140004209:	mov    rax,QWORD PTR [rip+0x11628]        # 0x140015838
   140004210:	mov    QWORD PTR [rsp+0x58],rax
   140004215:	xor    r8d,r8d
   140004218:	lea    rdx,[rsp+0x60]
   14000421d:	mov    rcx,QWORD PTR [rsp+0x58]
   140004222:	call   0x14000c698
   140004227:	mov    QWORD PTR [rsp+0x50],rax
   14000422c:	cmp    QWORD PTR [rsp+0x50],0x0
   140004232:	je     0x140004275
   140004234:	mov    QWORD PTR [rsp+0x38],0x0
   14000423d:	lea    rax,[rsp+0x48]
   140004242:	mov    QWORD PTR [rsp+0x30],rax
   140004247:	lea    rax,[rsp+0x40]
   14000424c:	mov    QWORD PTR [rsp+0x28],rax
   140004251:	lea    rax,[rip+0x114e8]        # 0x140015740
   140004258:	mov    QWORD PTR [rsp+0x20],rax
   14000425d:	mov    r9,QWORD PTR [rsp+0x50]
   140004262:	mov    r8,QWORD PTR [rsp+0x58]
   140004267:	mov    rdx,QWORD PTR [rsp+0x60]
   14000426c:	xor    ecx,ecx
   14000426e:	call   0x14000c692
   140004273:	jmp    0x140004297
   140004275:	mov    rax,QWORD PTR [rsp+0x88]
   14000427d:	mov    QWORD PTR [rip+0x115b4],rax        # 0x140015838
   140004284:	lea    rax,[rsp+0x88]
   14000428c:	add    rax,0x8
   140004290:	mov    QWORD PTR [rip+0x11541],rax        # 0x1400157d8
   140004297:	mov    rax,QWORD PTR [rip+0x1159a]        # 0x140015838
   14000429e:	mov    QWORD PTR [rip+0x1140b],rax        # 0x1400156b0
   1400042a5:	mov    rax,QWORD PTR [rsp+0x90]
   1400042ad:	mov    QWORD PTR [rip+0x1150c],rax        # 0x1400157c0
   1400042b4:	mov    DWORD PTR [rip+0x113e2],0xc0000409        # 0x1400156a0
   1400042be:	mov    DWORD PTR [rip+0x113dc],0x1        # 0x1400156a4
   1400042c8:	mov    rax,QWORD PTR [rip+0xfd91]        # 0x140014060
   1400042cf:	mov    QWORD PTR [rsp+0x68],rax
   1400042d4:	mov    rax,QWORD PTR [rip+0xfd8d]        # 0x140014068
   1400042db:	mov    QWORD PTR [rsp+0x70],rax
   1400042e0:	call   QWORD PTR [rip+0xadf2]        # 0x14000f0d8
   1400042e6:	mov    DWORD PTR [rip+0x1144c],eax        # 0x140015738
   1400042ec:	mov    ecx,0x1
   1400042f1:	call   0x1400087e0
   1400042f6:	xor    ecx,ecx
   1400042f8:	call   QWORD PTR [rip+0xadd2]        # 0x14000f0d0
   1400042fe:	lea    rcx,[rip+0xb123]        # 0x14000f428
   140004305:	call   QWORD PTR [rip+0xadbd]        # 0x14000f0c8
   14000430b:	cmp    DWORD PTR [rip+0x11426],0x0        # 0x140015738
   140004312:	jne    0x14000431e
   140004314:	mov    ecx,0x1
   140004319:	call   0x1400087e0
   14000431e:	call   QWORD PTR [rip+0xad9c]        # 0x14000f0c0
   140004324:	mov    edx,0xc0000409
   140004329:	mov    rcx,rax
   14000432c:	call   QWORD PTR [rip+0xad86]        # 0x14000f0b8
   140004332:	add    rsp,0x88
   140004339:	ret    
   14000433a:	int3   
   14000433b:	int3   
   14000433c:	int3   
   14000433d:	int3   
   14000433e:	int3   
   14000433f:	int3   
   140004340:	rex push rbx
   140004342:	sub    rsp,0x30
   140004346:	mov    rbx,rcx
   140004349:	mov    ecx,0xe
   14000434e:	call   0x140007100
   140004353:	nop
   140004354:	mov    rax,QWORD PTR [rbx+0x8]
   140004358:	test   rax,rax
   14000435b:	je     0x1400043a4
   14000435d:	mov    rcx,QWORD PTR [rip+0x118b4]        # 0x140015c18
   140004364:	mov    QWORD PTR [rsp+0x20],rcx
   140004369:	lea    rdx,[rip+0x118a0]        # 0x140015c10
   140004370:	test   rcx,rcx
   140004373:	je     0x140004393
   140004375:	cmp    QWORD PTR [rcx],rax
   140004378:	jne    0x140004389
   14000437a:	mov    rax,QWORD PTR [rcx+0x8]
   14000437e:	mov    QWORD PTR [rdx+0x8],rax
   140004382:	call   0x140002700
   140004387:	jmp    0x140004393
   140004389:	mov    rdx,rcx
   14000438c:	mov    QWORD PTR [rsp+0x20],rcx
   140004391:	jmp    0x140004370
   140004393:	mov    rcx,QWORD PTR [rbx+0x8]
   140004397:	call   0x140002700
   14000439c:	mov    QWORD PTR [rbx+0x8],0x0
   1400043a4:	mov    ecx,0xe
   1400043a9:	call   0x140006fd0
   1400043ae:	add    rsp,0x30
   1400043b2:	pop    rbx
   1400043b3:	ret    
   1400043b4:	int3   
   1400043b5:	int3   
   1400043b6:	int3   
   1400043b7:	int3   
   1400043b8:	int3   
   1400043b9:	int3   
   1400043ba:	int3   
   1400043bb:	int3   
   1400043bc:	int3   
   1400043bd:	int3   
   1400043be:	int3   
   1400043bf:	int3   
   1400043c0:	rex push rbp
   1400043c2:	sub    rsp,0x20
   1400043c6:	mov    rbp,rdx
   1400043c9:	mov    ecx,0xe
   1400043ce:	call   0x140006fd0
   1400043d3:	add    rsp,0x20
   1400043d7:	pop    rbp
   1400043d8:	ret    
   1400043d9:	int3   
   1400043da:	int3   
   1400043db:	int3   
   1400043dc:	int3   
   1400043dd:	int3   
   1400043de:	int3   
   1400043df:	int3   
   1400043e0:	int3   
   1400043e1:	int3   
   1400043e2:	int3   
   1400043e3:	int3   
   1400043e4:	int3   
   1400043e5:	int3   
   1400043e6:	data16 data16 xchg ax,ax
   1400043ea:	data16 data16 xchg ax,ax
   1400043ee:	xchg   ax,ax
   1400043f0:	mov    r11,rcx
   1400043f3:	sub    rdx,rcx
   1400043f6:	jb     0x14000459a
   1400043fc:	cmp    r8,0x8
   140004400:	jb     0x140004463
   140004402:	test   cl,0x7
   140004405:	je     0x14000443d
   140004407:	test   cl,0x1
   14000440a:	je     0x140004417
   14000440c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000440f:	dec    r8
   140004412:	mov    BYTE PTR [rcx],al
   140004414:	inc    rcx
   140004417:	test   cl,0x2
   14000441a:	je     0x14000442b
   14000441c:	mov    ax,WORD PTR [rdx+rcx*1]
   140004420:	sub    r8,0x2
   140004424:	mov    WORD PTR [rcx],ax
   140004427:	add    rcx,0x2
   14000442b:	test   cl,0x4
   14000442e:	je     0x14000443d
   140004430:	mov    eax,DWORD PTR [rdx+rcx*1]
   140004433:	sub    r8,0x4
   140004437:	mov    DWORD PTR [rcx],eax
   140004439:	add    rcx,0x4
   14000443d:	mov    r9,r8
   140004440:	shr    r9,0x5
   140004444:	jne    0x140004497
   140004446:	mov    r9,r8
   140004449:	shr    r9,0x3
   14000444d:	je     0x140004463
   14000444f:	mov    rax,QWORD PTR [rdx+rcx*1]
   140004453:	mov    QWORD PTR [rcx],rax
   140004456:	add    rcx,0x8
   14000445a:	dec    r9
   14000445d:	jne    0x14000444f
   14000445f:	and    r8,0x7
   140004463:	test   r8,r8
   140004466:	jne    0x140004470
   140004468:	mov    rax,r11
   14000446b:	ret    
   14000446c:	data16 data16 xchg ax,ax
   140004470:	mov    al,BYTE PTR [rdx+rcx*1]
   140004473:	mov    BYTE PTR [rcx],al
   140004475:	inc    rcx
   140004478:	dec    r8
   14000447b:	jne    0x140004470
   14000447d:	mov    rax,r11
   140004480:	ret    
   140004481:	data16 data16 xchg ax,ax
   140004485:	data16 data16 xchg ax,ax
   140004489:	data16 data16 xchg ax,ax
   14000448d:	data16 xchg ax,ax
   140004490:	data16 data16 xchg ax,ax
   140004494:	data16 xchg ax,ax
   140004497:	cmp    r9,0x2000
   14000449e:	jae    0x1400044e2
   1400044a0:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400044a4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400044a9:	add    rcx,0x20
   1400044ad:	mov    QWORD PTR [rcx-0x20],rax
   1400044b1:	mov    QWORD PTR [rcx-0x18],r10
   1400044b5:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   1400044ba:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   1400044bf:	dec    r9
   1400044c2:	mov    QWORD PTR [rcx-0x10],rax
   1400044c6:	mov    QWORD PTR [rcx-0x8],r10
   1400044ca:	jne    0x1400044a0
   1400044cc:	and    r8,0x1f
   1400044d0:	jmp    0x140004446
   1400044d5:	data16 data16 xchg ax,ax
   1400044d9:	data16 data16 xchg ax,ax
   1400044dd:	data16 xchg ax,ax
   1400044e0:	xchg   ax,ax
   1400044e2:	cmp    rdx,0x1000
   1400044e9:	jb     0x1400044a0
   1400044eb:	mov    eax,0x20
   1400044f0:	prefetchnta BYTE PTR [rdx+rcx*1]
   1400044f4:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   1400044f9:	add    rcx,0x80
   140004500:	dec    eax
   140004502:	jne    0x1400044f0
   140004504:	sub    rcx,0x1000
   14000450b:	mov    eax,0x40
   140004510:	mov    r9,QWORD PTR [rdx+rcx*1]
   140004514:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140004519:	movnti QWORD PTR [rcx],r9
   14000451d:	movnti QWORD PTR [rcx+0x8],r10
   140004522:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   140004527:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14000452c:	movnti QWORD PTR [rcx+0x10],r9
   140004531:	movnti QWORD PTR [rcx+0x18],r10
   140004536:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14000453b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140004540:	add    rcx,0x40
   140004544:	movnti QWORD PTR [rcx-0x20],r9
   140004549:	movnti QWORD PTR [rcx-0x18],r10
   14000454e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   140004553:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140004558:	dec    eax
   14000455a:	movnti QWORD PTR [rcx-0x10],r9
   14000455f:	movnti QWORD PTR [rcx-0x8],r10
   140004564:	jne    0x140004510
   140004566:	sub    r8,0x1000
   14000456d:	cmp    r8,0x1000
   140004574:	jae    0x1400044eb
   14000457a:	lock or BYTE PTR [rsp],0x0
   14000457f:	jmp    0x14000443d
   140004584:	data16 data16 xchg ax,ax
   140004588:	data16 data16 xchg ax,ax
   14000458c:	data16 data16 xchg ax,ax
   140004590:	data16 data16 xchg ax,ax
   140004594:	data16 data16 xchg ax,ax
   140004598:	xchg   ax,ax
   14000459a:	add    rcx,r8
   14000459d:	cmp    r8,0x8
   1400045a1:	jb     0x140004604
   1400045a3:	test   cl,0x7
   1400045a6:	je     0x1400045de
   1400045a8:	test   cl,0x1
   1400045ab:	je     0x1400045b8
   1400045ad:	dec    rcx
   1400045b0:	mov    al,BYTE PTR [rdx+rcx*1]
   1400045b3:	dec    r8
   1400045b6:	mov    BYTE PTR [rcx],al
   1400045b8:	test   cl,0x2
   1400045bb:	je     0x1400045cc
   1400045bd:	sub    rcx,0x2
   1400045c1:	mov    ax,WORD PTR [rdx+rcx*1]
   1400045c5:	sub    r8,0x2
   1400045c9:	mov    WORD PTR [rcx],ax
   1400045cc:	test   cl,0x4
   1400045cf:	je     0x1400045de
   1400045d1:	sub    rcx,0x4
   1400045d5:	mov    eax,DWORD PTR [rdx+rcx*1]
   1400045d8:	sub    r8,0x4
   1400045dc:	mov    DWORD PTR [rcx],eax
   1400045de:	mov    r9,r8
   1400045e1:	shr    r9,0x5
   1400045e5:	jne    0x140004637
   1400045e7:	mov    r9,r8
   1400045ea:	shr    r9,0x3
   1400045ee:	je     0x140004604
   1400045f0:	sub    rcx,0x8
   1400045f4:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400045f8:	dec    r9
   1400045fb:	mov    QWORD PTR [rcx],rax
   1400045fe:	jne    0x1400045f0
   140004600:	and    r8,0x7
   140004604:	test   r8,r8
   140004607:	jne    0x140004610
   140004609:	mov    rax,r11
   14000460c:	ret    
   14000460d:	data16 xchg ax,ax
   140004610:	dec    rcx
   140004613:	mov    al,BYTE PTR [rdx+rcx*1]
   140004616:	dec    r8
   140004619:	mov    BYTE PTR [rcx],al
   14000461b:	jne    0x140004610
   14000461d:	mov    rax,r11
   140004620:	ret    
   140004621:	data16 data16 xchg ax,ax
   140004625:	data16 data16 xchg ax,ax
   140004629:	data16 data16 xchg ax,ax
   14000462d:	data16 xchg ax,ax
   140004630:	data16 data16 xchg ax,ax
   140004634:	data16 xchg ax,ax
   140004637:	cmp    r9,0x2000
   14000463e:	jae    0x140004682
   140004640:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140004645:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000464a:	sub    rcx,0x20
   14000464e:	mov    QWORD PTR [rcx+0x18],rax
   140004652:	mov    QWORD PTR [rcx+0x10],r10
   140004656:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000465b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000465f:	dec    r9
   140004662:	mov    QWORD PTR [rcx+0x8],rax
   140004666:	mov    QWORD PTR [rcx],r10
   140004669:	jne    0x140004640
   14000466b:	and    r8,0x1f
   14000466f:	jmp    0x1400045e7
   140004674:	data16 data16 xchg ax,ax
   140004678:	data16 data16 xchg ax,ax
   14000467c:	data16 data16 xchg ax,ax
   140004680:	xchg   ax,ax
   140004682:	cmp    rdx,0xfffffffffffff000
   140004689:	ja     0x140004640
   14000468b:	mov    eax,0x20
   140004690:	sub    rcx,0x80
   140004697:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000469b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   1400046a0:	dec    eax
   1400046a2:	jne    0x140004690
   1400046a4:	add    rcx,0x1000
   1400046ab:	mov    eax,0x40
   1400046b0:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   1400046b5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   1400046ba:	movnti QWORD PTR [rcx-0x8],r9
   1400046bf:	movnti QWORD PTR [rcx-0x10],r10
   1400046c4:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   1400046c9:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   1400046ce:	movnti QWORD PTR [rcx-0x18],r9
   1400046d3:	movnti QWORD PTR [rcx-0x20],r10
   1400046d8:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   1400046dd:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   1400046e2:	sub    rcx,0x40
   1400046e6:	movnti QWORD PTR [rcx+0x18],r9
   1400046eb:	movnti QWORD PTR [rcx+0x10],r10
   1400046f0:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   1400046f5:	mov    r10,QWORD PTR [rdx+rcx*1]
   1400046f9:	dec    eax
   1400046fb:	movnti QWORD PTR [rcx+0x8],r9
   140004700:	movnti QWORD PTR [rcx],r10
   140004704:	jne    0x1400046b0
   140004706:	sub    r8,0x1000
   14000470d:	cmp    r8,0x1000
   140004714:	jae    0x14000468b
   14000471a:	lock or BYTE PTR [rsp],0x0
   14000471f:	jmp    0x1400045de
   140004724:	int3   
   140004725:	int3   
   140004726:	int3   
   140004727:	int3   
   140004728:	int3   
   140004729:	int3   
   14000472a:	int3   
   14000472b:	int3   
   14000472c:	int3   
   14000472d:	int3   
   14000472e:	int3   
   14000472f:	int3   
   140004730:	sub    rsp,0x28
   140004734:	mov    rax,QWORD PTR [rcx]
   140004737:	cmp    DWORD PTR [rax],0xe06d7363
   14000473d:	jne    0x14000476a
   14000473f:	cmp    DWORD PTR [rax+0x18],0x4
   140004743:	jne    0x14000476a
   140004745:	mov    eax,DWORD PTR [rax+0x20]
   140004748:	cmp    eax,0x19930520
   14000474d:	je     0x140004764
   14000474f:	cmp    eax,0x19930521
   140004754:	je     0x140004764
   140004756:	cmp    eax,0x19930522
   14000475b:	je     0x140004764
   14000475d:	cmp    eax,0x1994000
   140004762:	jne    0x14000476a
   140004764:	call   0x1400088a0
   140004769:	int3   
   14000476a:	xor    eax,eax
   14000476c:	add    rsp,0x28
   140004770:	ret    
   140004771:	int3   
   140004772:	int3   
   140004773:	int3   
   140004774:	int3   
   140004775:	int3   
   140004776:	int3   
   140004777:	int3   
   140004778:	int3   
   140004779:	int3   
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	int3   
   14000477d:	int3   
   14000477e:	int3   
   14000477f:	int3   
   140004780:	sub    rsp,0x28
   140004784:	lea    rcx,[rip+0xffffffffffffffa5]        # 0x140004730
   14000478b:	call   QWORD PTR [rip+0xa93f]        # 0x14000f0d0
   140004791:	xor    eax,eax
   140004793:	add    rsp,0x28
   140004797:	ret    
   140004798:	int3   
   140004799:	int3   
   14000479a:	int3   
   14000479b:	int3   
   14000479c:	int3   
   14000479d:	int3   
   14000479e:	int3   
   14000479f:	int3   
   1400047a0:	rex push rbx
   1400047a2:	sub    rsp,0x20
   1400047a6:	mov    ebx,ecx
   1400047a8:	call   0x140004e10
   1400047ad:	mov    ecx,ebx
   1400047af:	call   0x140004bd0
   1400047b4:	mov    rcx,QWORD PTR [rip+0xfdf5]        # 0x1400145b0
   1400047bb:	call   0x140005f50
   1400047c0:	mov    ecx,0xff
   1400047c5:	add    rsp,0x20
   1400047c9:	pop    rbx
   1400047ca:	rex.W jmp rax
   1400047cd:	int3   
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	rex push rbx
   1400047d2:	sub    rsp,0x20
   1400047d6:	mov    ebx,ecx
   1400047d8:	lea    rcx,[rip+0xac69]        # 0x14000f448
   1400047df:	call   QWORD PTR [rip+0xa91b]        # 0x14000f100
   1400047e5:	test   rax,rax
   1400047e8:	je     0x140004803
   1400047ea:	lea    rdx,[rip+0xac47]        # 0x14000f438
   1400047f1:	mov    rcx,rax
   1400047f4:	call   QWORD PTR [rip+0xa8fe]        # 0x14000f0f8
   1400047fa:	test   rax,rax
   1400047fd:	je     0x140004803
   1400047ff:	mov    ecx,ebx
   140004801:	call   rax
   140004803:	mov    ecx,ebx
   140004805:	call   QWORD PTR [rip+0xa8fd]        # 0x14000f108
   14000480b:	int3   
   14000480c:	int3   
   14000480d:	int3   
   14000480e:	int3   
   14000480f:	int3   
   140004810:	mov    ecx,0x8
   140004815:	jmp    0x140007100
   14000481a:	int3   
   14000481b:	int3   
   14000481c:	int3   
   14000481d:	int3   
   14000481e:	int3   
   14000481f:	int3   
   140004820:	mov    ecx,0x8
   140004825:	jmp    0x140006fd0
   14000482a:	int3   
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	cmp    rcx,rdx
   140004833:	jae    0x140004862
   140004835:	mov    QWORD PTR [rsp+0x8],rbx
   14000483a:	push   rdi
   14000483b:	sub    rsp,0x20
   14000483f:	mov    rdi,rdx
   140004842:	mov    rbx,rcx
   140004845:	mov    rax,QWORD PTR [rbx]
   140004848:	test   rax,rax
   14000484b:	je     0x14000484f
   14000484d:	call   rax
   14000484f:	add    rbx,0x8
   140004853:	cmp    rbx,rdi
   140004856:	jb     0x140004845
   140004858:	mov    rbx,QWORD PTR [rsp+0x30]
   14000485d:	add    rsp,0x20
   140004861:	pop    rdi
   140004862:	ret    0x0
   140004865:	int3   
   140004866:	int3   
   140004867:	int3   
   140004868:	int3   
   140004869:	int3   
   14000486a:	int3   
   14000486b:	int3   
   14000486c:	int3   
   14000486d:	int3   
   14000486e:	int3   
   14000486f:	int3   
   140004870:	sub    rsp,0x38
   140004874:	test   rcx,rcx
   140004877:	jne    0x1400048a6
   140004879:	call   0x140004100
   14000487e:	xor    r9d,r9d
   140004881:	xor    r8d,r8d
   140004884:	xor    edx,edx
   140004886:	xor    ecx,ecx
   140004888:	mov    QWORD PTR [rsp+0x20],0x0
   140004891:	mov    DWORD PTR [rax],0x16
   140004897:	call   0x140003fa0
   14000489c:	mov    eax,0x16
   1400048a1:	add    rsp,0x38
   1400048a5:	ret    
   1400048a6:	mov    eax,DWORD PTR [rip+0x11378]        # 0x140015c24
   1400048ac:	test   eax,eax
   1400048ae:	je     0x140004879
   1400048b0:	mov    DWORD PTR [rcx],eax
   1400048b2:	xor    eax,eax
   1400048b4:	add    rsp,0x38
   1400048b8:	ret    
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	sub    rsp,0x38
   1400048c4:	test   rcx,rcx
   1400048c7:	jne    0x1400048f6
   1400048c9:	call   0x140004100
   1400048ce:	xor    r9d,r9d
   1400048d1:	xor    r8d,r8d
   1400048d4:	xor    edx,edx
   1400048d6:	xor    ecx,ecx
   1400048d8:	mov    QWORD PTR [rsp+0x20],0x0
   1400048e1:	mov    DWORD PTR [rax],0x16
   1400048e7:	call   0x140003fa0
   1400048ec:	mov    eax,0x16
   1400048f1:	add    rsp,0x38
   1400048f5:	ret    
   1400048f6:	cmp    DWORD PTR [rip+0x11327],0x0        # 0x140015c24
   1400048fd:	je     0x1400048c9
   1400048ff:	mov    eax,DWORD PTR [rip+0x1132b]        # 0x140015c30
   140004905:	mov    DWORD PTR [rcx],eax
   140004907:	xor    eax,eax
   140004909:	add    rsp,0x38
   14000490d:	ret    
   14000490e:	int3   
   14000490f:	int3   
   140004910:	mov    QWORD PTR [rsp+0x8],rbx
   140004915:	push   rdi
   140004916:	sub    rsp,0x20
   14000491a:	cmp    QWORD PTR [rip+0x11f3e],0x0        # 0x140016860
   140004922:	mov    ebx,ecx
   140004924:	je     0x14000493e
   140004926:	lea    rcx,[rip+0x11f33]        # 0x140016860
   14000492d:	call   0x140006970
   140004932:	test   eax,eax
   140004934:	je     0x14000493e
   140004936:	mov    ecx,ebx
   140004938:	call   QWORD PTR [rip+0x11f22]        # 0x140016860
   14000493e:	call   0x140008350
   140004943:	lea    rbx,[rip+0xa9be]        # 0x14000f308
   14000494a:	lea    rdi,[rip+0xa9df]        # 0x14000f330
   140004951:	xor    eax,eax
   140004953:	cmp    rbx,rdi
   140004956:	jae    0x140004973
   140004958:	test   eax,eax
   14000495a:	jne    0x1400049d0
   14000495c:	mov    rcx,QWORD PTR [rbx]
   14000495f:	test   rcx,rcx
   140004962:	je     0x140004966
   140004964:	call   rcx
   140004966:	add    rbx,0x8
   14000496a:	cmp    rbx,rdi
   14000496d:	jb     0x140004958
   14000496f:	test   eax,eax
   140004971:	jne    0x1400049d0
   140004973:	lea    rcx,[rip+0x13d6]        # 0x140005d50
   14000497a:	call   0x1400026e0
   14000497f:	lea    rbx,[rip+0xa952]        # 0x14000f2d8
   140004986:	lea    rdi,[rip+0xa973]        # 0x14000f300
   14000498d:	cmp    rbx,rdi
   140004990:	jae    0x1400049a5
   140004992:	mov    rax,QWORD PTR [rbx]
   140004995:	test   rax,rax
   140004998:	je     0x14000499c
   14000499a:	call   rax
   14000499c:	add    rbx,0x8
   1400049a0:	cmp    rbx,rdi
   1400049a3:	jb     0x140004992
   1400049a5:	cmp    QWORD PTR [rip+0x11ebb],0x0        # 0x140016868
   1400049ad:	je     0x1400049ce
   1400049af:	lea    rcx,[rip+0x11eb2]        # 0x140016868
   1400049b6:	call   0x140006970
   1400049bb:	test   eax,eax
   1400049bd:	je     0x1400049ce
   1400049bf:	xor    r8d,r8d
   1400049c2:	xor    ecx,ecx
   1400049c4:	lea    edx,[r8+0x2]
   1400049c8:	call   QWORD PTR [rip+0x11e9a]        # 0x140016868
   1400049ce:	xor    eax,eax
   1400049d0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049d5:	add    rsp,0x20
   1400049d9:	pop    rdi
   1400049da:	ret    
   1400049db:	int3   
   1400049dc:	int3   
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400049ea:	mov    DWORD PTR [rsp+0x18],r8d
   1400049ef:	push   rdi
   1400049f0:	push   r12
   1400049f2:	push   r13
   1400049f4:	sub    rsp,0x30
   1400049f8:	mov    r12d,r8d
   1400049fb:	mov    ebx,edx
   1400049fd:	mov    r13d,ecx
   140004a00:	mov    ecx,0x8
   140004a05:	call   0x140007100
   140004a0a:	nop
   140004a0b:	cmp    DWORD PTR [rip+0x11272],0x1        # 0x140015c84
   140004a12:	je     0x140004ab4
   140004a18:	mov    DWORD PTR [rip+0x1125e],0x1        # 0x140015c80
   140004a22:	mov    BYTE PTR [rip+0x11213],r12b        # 0x140015c3c
   140004a29:	test   ebx,ebx
   140004a2b:	jne    0x140004aa0
   140004a2d:	mov    rcx,QWORD PTR [rip+0x11e1c]        # 0x140016850
   140004a34:	call   0x140005f50
   140004a39:	mov    rsi,rax
   140004a3c:	mov    rcx,QWORD PTR [rip+0x11e05]        # 0x140016848
   140004a43:	call   0x140005f50
   140004a48:	mov    rbx,rax
   140004a4b:	mov    QWORD PTR [rsp+0x20],rax
   140004a50:	test   rsi,rsi
   140004a53:	je     0x140004a8d
   140004a55:	data16 data16 xchg ax,ax
   140004a59:	data16 xchg ax,ax
   140004a5c:	data16 data16 xchg ax,ax
   140004a60:	sub    rbx,0x8
   140004a64:	mov    QWORD PTR [rsp+0x20],rbx
   140004a69:	cmp    rbx,rsi
   140004a6c:	jb     0x140004a8d
   140004a6e:	cmp    QWORD PTR [rbx],0x0
   140004a72:	je     0x140004a8b
   140004a74:	mov    rdi,QWORD PTR [rbx]
   140004a77:	call   0x140005e60
   140004a7c:	cmp    rdi,rax
   140004a7f:	je     0x140004a8b
   140004a81:	mov    rcx,rdi
   140004a84:	call   0x140005f50
   140004a89:	call   rax
   140004a8b:	jmp    0x140004a60
   140004a8d:	lea    rdx,[rip+0xa8bc]        # 0x14000f350
   140004a94:	lea    rcx,[rip+0xa89d]        # 0x14000f338
   140004a9b:	call   0x140004830
   140004aa0:	lea    rdx,[rip+0xa8b9]        # 0x14000f360
   140004aa7:	lea    rcx,[rip+0xa8aa]        # 0x14000f358
   140004aae:	call   0x140004830
   140004ab3:	nop
   140004ab4:	test   r12d,r12d
   140004ab7:	je     0x140004ac3
   140004ab9:	mov    ecx,0x8
   140004abe:	call   0x140006fd0
   140004ac3:	test   r12d,r12d
   140004ac6:	jne    0x140004ae5
   140004ac8:	mov    DWORD PTR [rip+0x111b2],0x1        # 0x140015c84
   140004ad2:	lea    ecx,[r12+0x8]
   140004ad7:	call   0x140006fd0
   140004adc:	mov    ecx,r13d
   140004adf:	call   0x1400047d0
   140004ae4:	int3   
   140004ae5:	mov    rbx,QWORD PTR [rsp+0x50]
   140004aea:	mov    rsi,QWORD PTR [rsp+0x58]
   140004aef:	add    rsp,0x30
   140004af3:	pop    r13
   140004af5:	pop    r12
   140004af7:	pop    rdi
   140004af8:	ret    
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	rex push rbp
   140004b02:	sub    rsp,0x20
   140004b06:	mov    rbp,rdx
   140004b09:	cmp    DWORD PTR [rbp+0x60],0x0
   140004b0d:	je     0x140004b19
   140004b0f:	mov    ecx,0x8
   140004b14:	call   0x140006fd0
   140004b19:	add    rsp,0x20
   140004b1d:	pop    rbp
   140004b1e:	ret    
   140004b1f:	int3   
   140004b20:	xor    r8d,r8d
   140004b23:	xor    edx,edx
   140004b25:	jmp    0x1400049e0
   140004b2a:	int3   
   140004b2b:	int3   
   140004b2c:	int3   
   140004b2d:	int3   
   140004b2e:	int3   
   140004b2f:	int3   
   140004b30:	xor    r8d,r8d
   140004b33:	lea    edx,[r8+0x1]
   140004b37:	jmp    0x1400049e0
   140004b3c:	int3   
   140004b3d:	int3   
   140004b3e:	int3   
   140004b3f:	int3   
   140004b40:	xor    edx,edx
   140004b42:	xor    ecx,ecx
   140004b44:	lea    r8d,[rdx+0x1]
   140004b48:	jmp    0x1400049e0
   140004b4d:	int3   
   140004b4e:	int3   
   140004b4f:	int3   
   140004b50:	mov    edx,0x1
   140004b55:	xor    ecx,ecx
   140004b57:	mov    r8d,edx
   140004b5a:	jmp    0x1400049e0
   140004b5f:	int3   
   140004b60:	rex push rbx
   140004b62:	sub    rsp,0x20
   140004b66:	call   0x140005e60
   140004b6b:	mov    rcx,rax
   140004b6e:	mov    rbx,rax
   140004b71:	call   0x1400069e0
   140004b76:	mov    rcx,rbx
   140004b79:	call   0x140008c20
   140004b7e:	mov    rcx,rbx
   140004b81:	call   0x140003ef0
   140004b86:	mov    rcx,rbx
   140004b89:	call   0x140008c10
   140004b8e:	mov    rcx,rbx
   140004b91:	call   0x140008c00
   140004b96:	mov    rcx,rbx
   140004b99:	call   0x140008920
   140004b9e:	mov    rcx,rbx
   140004ba1:	call   0x140004f00
   140004ba6:	mov    rcx,rbx
   140004ba9:	call   0x140008900
   140004bae:	lea    rcx,[rip+0xffffffffffffff7b]        # 0x140004b30
   140004bb5:	call   0x140005d90
   140004bba:	mov    QWORD PTR [rip+0xf9ef],rax        # 0x1400145b0
   140004bc1:	add    rsp,0x20
   140004bc5:	pop    rbx
   140004bc6:	ret    
   140004bc7:	int3   
   140004bc8:	int3   
   140004bc9:	int3   
   140004bca:	int3   
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	mov    QWORD PTR [rsp+0x18],rbx
   140004bd5:	push   rsi
   140004bd6:	push   rdi
   140004bd7:	push   r12
   140004bd9:	sub    rsp,0x30
   140004bdd:	lea    r12,[rip+0xf9dc]        # 0x1400145c0
   140004be4:	xor    esi,esi
   140004be6:	mov    edi,ecx
   140004be8:	mov    rax,r12
   140004beb:	mov    ebx,esi
   140004bed:	data16 xchg ax,ax
   140004bf0:	cmp    ecx,DWORD PTR [rax]
   140004bf2:	je     0x140004c0e
   140004bf4:	add    ebx,0x1
   140004bf7:	add    rax,0x10
   140004bfb:	cmp    ebx,0x17
   140004bfe:	jb     0x140004bf0
   140004c00:	mov    rbx,QWORD PTR [rsp+0x60]
   140004c05:	add    rsp,0x30
   140004c09:	pop    r12
   140004c0b:	pop    rdi
   140004c0c:	pop    rsi
   140004c0d:	ret    
   140004c0e:	cmp    ebx,0x17
   140004c11:	jae    0x140004df5
   140004c17:	mov    ecx,0x3
   140004c1c:	call   0x1400091b0
   140004c21:	cmp    eax,0x1
   140004c24:	je     0x140004dac
   140004c2a:	mov    ecx,0x3
   140004c2f:	call   0x1400091b0
   140004c34:	test   eax,eax
   140004c36:	jne    0x140004c45
   140004c38:	cmp    DWORD PTR [rip+0xf419],0x1        # 0x140014058
   140004c3f:	je     0x140004dac
   140004c45:	cmp    edi,0xfc
   140004c4b:	je     0x140004df5
   140004c51:	mov    QWORD PTR [rsp+0x50],rbp
   140004c56:	lea    rbp,[rip+0x11033]        # 0x140015c90
   140004c5d:	lea    r8,[rip+0xadbc]        # 0x14000fa20
   140004c64:	mov    rcx,rbp
   140004c67:	mov    edx,0x314
   140004c6c:	call   0x1400087f0
   140004c71:	test   eax,eax
   140004c73:	je     0x140004c89
   140004c75:	xor    r9d,r9d
   140004c78:	xor    r8d,r8d
   140004c7b:	xor    edx,edx
   140004c7d:	xor    ecx,ecx
   140004c7f:	mov    QWORD PTR [rsp+0x20],rsi
   140004c84:	call   0x140003f00
   140004c89:	lea    rdx,[rip+0x11019]        # 0x140015ca9
   140004c90:	mov    r8d,0x104
   140004c96:	xor    ecx,ecx
   140004c98:	mov    BYTE PTR [rip+0x1110e],sil        # 0x140015dad
   140004c9f:	call   QWORD PTR [rip+0xa47b]        # 0x14000f120
   140004ca5:	test   eax,eax
   140004ca7:	jne    0x140004cd9
   140004ca9:	lea    r8,[rip+0xad58]        # 0x14000fa08
   140004cb0:	lea    rcx,[rip+0x10ff2]        # 0x140015ca9
   140004cb7:	mov    edx,0x2fb
   140004cbc:	call   0x1400087f0
   140004cc1:	test   eax,eax
   140004cc3:	je     0x140004cd9
   140004cc5:	xor    r9d,r9d
   140004cc8:	xor    r8d,r8d
   140004ccb:	xor    edx,edx
   140004ccd:	xor    ecx,ecx
   140004ccf:	mov    QWORD PTR [rsp+0x20],rsi
   140004cd4:	call   0x140003f00
   140004cd9:	or     rcx,0xffffffffffffffff
   140004cdd:	xor    eax,eax
   140004cdf:	lea    rdi,[rip+0x10fc3]        # 0x140015ca9
   140004ce6:	repnz scas al,BYTE PTR es:[rdi]
   140004ce8:	not    rcx
   140004ceb:	cmp    rcx,0x3c
   140004cef:	jbe    0x140004d28
   140004cf1:	lea    rcx,[rcx+rbp*1-0x23]
   140004cf6:	lea    rdx,[rip+0x112a7]        # 0x140015fa4
   140004cfd:	lea    r9d,[rax+0x3]
   140004d01:	lea    r8,[rip+0xacfc]        # 0x14000fa04
   140004d08:	sub    rdx,rcx
   140004d0b:	call   0x140009090
   140004d10:	test   eax,eax
   140004d12:	je     0x140004d28
   140004d14:	xor    r9d,r9d
   140004d17:	xor    r8d,r8d
   140004d1a:	xor    edx,edx
   140004d1c:	xor    ecx,ecx
   140004d1e:	mov    QWORD PTR [rsp+0x20],rsi
   140004d23:	call   0x140003f00
   140004d28:	lea    r8,[rip+0xacd1]        # 0x14000fa00
   140004d2f:	mov    edx,0x314
   140004d34:	mov    rcx,rbp
   140004d37:	call   0x140008fd0
   140004d3c:	test   eax,eax
   140004d3e:	je     0x140004d54
   140004d40:	xor    r9d,r9d
   140004d43:	xor    r8d,r8d
   140004d46:	xor    edx,edx
   140004d48:	xor    ecx,ecx
   140004d4a:	mov    QWORD PTR [rsp+0x20],rsi
   140004d4f:	call   0x140003f00
   140004d54:	movsxd r8,ebx
   140004d57:	mov    edx,0x314
   140004d5c:	mov    rcx,rbp
   140004d5f:	add    r8,r8
   140004d62:	mov    r8,QWORD PTR [r12+r8*8+0x8]
   140004d67:	call   0x140008fd0
   140004d6c:	test   eax,eax
   140004d6e:	je     0x140004d84
   140004d70:	xor    r9d,r9d
   140004d73:	xor    r8d,r8d
   140004d76:	xor    edx,edx
   140004d78:	xor    ecx,ecx
   140004d7a:	mov    QWORD PTR [rsp+0x20],rsi
   140004d7f:	call   0x140003f00
   140004d84:	lea    rdx,[rip+0xac4d]        # 0x14000f9d8
   140004d8b:	mov    r8d,0x12010
   140004d91:	mov    rcx,rbp
   140004d94:	call   0x140008d70
   140004d99:	mov    rbp,QWORD PTR [rsp+0x50]
   140004d9e:	mov    rbx,QWORD PTR [rsp+0x60]
   140004da3:	add    rsp,0x30
   140004da7:	pop    r12
   140004da9:	pop    rdi
   140004daa:	pop    rsi
   140004dab:	ret    
   140004dac:	mov    ecx,0xfffffff4
   140004db1:	call   QWORD PTR [rip+0xa361]        # 0x14000f118
   140004db7:	test   rax,rax
   140004dba:	mov    r11,rax
   140004dbd:	je     0x140004df5
   140004dbf:	cmp    rax,0xffffffffffffffff
   140004dc3:	je     0x140004df5
   140004dc5:	xor    eax,eax
   140004dc7:	movsxd rcx,ebx
   140004dca:	lea    r9,[rsp+0x58]
   140004dcf:	add    rcx,rcx
   140004dd2:	mov    QWORD PTR [rsp+0x20],rsi
   140004dd7:	mov    rdx,QWORD PTR [r12+rcx*8+0x8]
   140004ddc:	or     rcx,0xffffffffffffffff
   140004de0:	mov    rdi,rdx
   140004de3:	repnz scas al,BYTE PTR es:[rdi]
   140004de5:	not    rcx
   140004de8:	lea    r8,[rcx-0x1]
   140004dec:	mov    rcx,r11
   140004def:	call   QWORD PTR [rip+0xa31b]        # 0x14000f110
   140004df5:	mov    rbx,QWORD PTR [rsp+0x60]
   140004dfa:	add    rsp,0x30
   140004dfe:	pop    r12
   140004e00:	pop    rdi
   140004e01:	pop    rsi
   140004e02:	ret    
   140004e03:	int3   
   140004e04:	int3   
   140004e05:	int3   
   140004e06:	int3   
   140004e07:	int3   
   140004e08:	int3   
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	sub    rsp,0x38
   140004e14:	mov    ecx,0x3
   140004e19:	call   0x1400091b0
   140004e1e:	cmp    eax,0x1
   140004e21:	je     0x140004e42
   140004e23:	mov    ecx,0x3
   140004e28:	call   0x1400091b0
   140004e2d:	test   eax,eax
   140004e2f:	jne    0x140004ef6
   140004e35:	cmp    DWORD PTR [rip+0xf21c],0x1        # 0x140014058
   140004e3c:	jne    0x140004ef6
   140004e42:	mov    QWORD PTR [rsp+0x48],rbx
   140004e47:	lea    rbx,[rip+0xf772]        # 0x1400145c0
   140004e4e:	mov    QWORD PTR [rsp+0x30],rdi
   140004e53:	mov    rax,rbx
   140004e56:	xor    edi,edi
   140004e58:	cmp    DWORD PTR [rax],0xfc
   140004e5e:	je     0x140004e6e
   140004e60:	add    edi,0x1
   140004e63:	add    rax,0x10
   140004e67:	cmp    edi,0x17
   140004e6a:	jb     0x140004e58
   140004e6c:	jmp    0x140004ee2
   140004e6e:	cmp    edi,0x17
   140004e71:	jae    0x140004ee2
   140004e73:	mov    ecx,0x3
   140004e78:	call   0x1400091b0
   140004e7d:	cmp    eax,0x1
   140004e80:	je     0x140004e99
   140004e82:	mov    ecx,0x3
   140004e87:	call   0x1400091b0
   140004e8c:	test   eax,eax
   140004e8e:	jne    0x140004ee2
   140004e90:	cmp    DWORD PTR [rip+0xf1c1],0x1        # 0x140014058
   140004e97:	jne    0x140004ee2
   140004e99:	mov    ecx,0xfffffff4
   140004e9e:	call   QWORD PTR [rip+0xa274]        # 0x14000f118
   140004ea4:	test   rax,rax
   140004ea7:	mov    r11,rax
   140004eaa:	je     0x140004ee2
   140004eac:	cmp    rax,0xffffffffffffffff
   140004eb0:	je     0x140004ee2
   140004eb2:	movsxd rcx,edi
   140004eb5:	xor    eax,eax
   140004eb7:	lea    r9,[rsp+0x40]
   140004ebc:	add    rcx,rcx
   140004ebf:	mov    QWORD PTR [rsp+0x20],rax
   140004ec4:	mov    rdx,QWORD PTR [rbx+rcx*8+0x8]
   140004ec9:	or     rcx,0xffffffffffffffff
   140004ecd:	mov    rdi,rdx
   140004ed0:	repnz scas al,BYTE PTR es:[rdi]
   140004ed2:	not    rcx
   140004ed5:	lea    r8,[rcx-0x1]
   140004ed9:	mov    rcx,r11
   140004edc:	call   QWORD PTR [rip+0xa22e]        # 0x14000f110
   140004ee2:	mov    ecx,0xff
   140004ee7:	call   0x140004bd0
   140004eec:	mov    rdi,QWORD PTR [rsp+0x30]
   140004ef1:	mov    rbx,QWORD PTR [rsp+0x48]
   140004ef6:	add    rsp,0x38
   140004efa:	ret    
   140004efb:	int3   
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	int3   
   140004eff:	int3   
   140004f00:	ret    0x0
   140004f03:	int3   
   140004f04:	int3   
   140004f05:	int3   
   140004f06:	int3   
   140004f07:	int3   
   140004f08:	int3   
   140004f09:	int3   
   140004f0a:	int3   
   140004f0b:	int3   
   140004f0c:	int3   
   140004f0d:	int3   
   140004f0e:	int3   
   140004f0f:	int3   
   140004f10:	mov    QWORD PTR [rsp+0x10],rbx
   140004f15:	mov    QWORD PTR [rsp+0x18],rsi
   140004f1a:	push   rdi
   140004f1b:	sub    rsp,0x20
   140004f1f:	mov    rsi,rdx
   140004f22:	mov    edi,ecx
   140004f24:	call   0x1400061b0
   140004f29:	test   rax,rax
   140004f2c:	mov    rbx,rax
   140004f2f:	je     0x14000510e
   140004f35:	mov    rcx,QWORD PTR [rax+0xa0]
   140004f3c:	movsxd r8,DWORD PTR [rip+0xf899]        # 0x1400147dc
   140004f43:	mov    rdx,rcx
   140004f46:	cmp    DWORD PTR [rdx],edi
   140004f48:	je     0x140004f5d
   140004f4a:	mov    rax,r8
   140004f4d:	add    rdx,0x10
   140004f51:	shl    rax,0x4
   140004f55:	add    rax,rcx
   140004f58:	cmp    rdx,rax
   140004f5b:	jb     0x140004f46
   140004f5d:	mov    rax,r8
   140004f60:	shl    rax,0x4
   140004f64:	add    rax,rcx
   140004f67:	cmp    rdx,rax
   140004f6a:	jae    0x14000510e
   140004f70:	cmp    DWORD PTR [rdx],edi
   140004f72:	jne    0x14000510e
   140004f78:	mov    r9,QWORD PTR [rdx+0x8]
   140004f7c:	test   r9,r9
   140004f7f:	je     0x14000510e
   140004f85:	cmp    r9,0x5
   140004f89:	jne    0x140004fa6
   140004f8b:	xor    r8d,r8d
   140004f8e:	lea    eax,[r9-0x4]
   140004f92:	mov    QWORD PTR [rdx+0x8],r8
   140004f96:	mov    rbx,QWORD PTR [rsp+0x38]
   140004f9b:	mov    rsi,QWORD PTR [rsp+0x40]
   140004fa0:	add    rsp,0x20
   140004fa4:	pop    rdi
   140004fa5:	ret    
   140004fa6:	cmp    r9,0x1
   140004faa:	jne    0x140004fbf
   140004fac:	or     eax,0xffffffff
   140004faf:	mov    rbx,QWORD PTR [rsp+0x38]
   140004fb4:	mov    rsi,QWORD PTR [rsp+0x40]
   140004fb9:	add    rsp,0x20
   140004fbd:	pop    rdi
   140004fbe:	ret    
   140004fbf:	mov    QWORD PTR [rsp+0x30],rbp
   140004fc4:	mov    rbp,QWORD PTR [rbx+0xa8]
   140004fcb:	mov    QWORD PTR [rbx+0xa8],rsi
   140004fd2:	mov    ecx,DWORD PTR [rdx+0x4]
   140004fd5:	cmp    ecx,0x8
   140004fd8:	jne    0x1400050e5
   140004fde:	movsxd r10,DWORD PTR [rip+0xf7eb]        # 0x1400147d0
   140004fe5:	mov    ecx,DWORD PTR [rip+0xf7e9]        # 0x1400147d4
   140004feb:	add    ecx,r10d
   140004fee:	mov    r11,r10
   140004ff1:	cmp    r10d,ecx
   140004ff4:	jge    0x140005027
   140004ff6:	shl    r11,0x4
   140004ffa:	xor    r8d,r8d
   140004ffd:	data16 xchg ax,ax
   140005000:	mov    rax,QWORD PTR [rbx+0xa0]
   140005007:	add    r10d,0x1
   14000500b:	add    r11,0x10
   14000500f:	mov    QWORD PTR [r11+rax*1-0x8],r8
   140005014:	mov    ecx,DWORD PTR [rip+0xf7ba]        # 0x1400147d4
   14000501a:	mov    eax,DWORD PTR [rip+0xf7b0]        # 0x1400147d0
   140005020:	add    ecx,eax
   140005022:	cmp    r10d,ecx
   140005025:	jl     0x140005000
   140005027:	mov    eax,DWORD PTR [rdx]
   140005029:	mov    edi,DWORD PTR [rbx+0xb0]
   14000502f:	cmp    eax,0xc000008e
   140005034:	jne    0x140005042
   140005036:	mov    DWORD PTR [rbx+0xb0],0x83
   140005040:	jmp    0x1400050b2
   140005042:	cmp    eax,0xc0000090
   140005047:	jne    0x140005055
   140005049:	mov    DWORD PTR [rbx+0xb0],0x81
   140005053:	jmp    0x1400050b2
   140005055:	cmp    eax,0xc0000091
   14000505a:	jne    0x140005068
   14000505c:	mov    DWORD PTR [rbx+0xb0],0x84
   140005066:	jmp    0x1400050b2
   140005068:	cmp    eax,0xc0000093
   14000506d:	jne    0x14000507b
   14000506f:	mov    DWORD PTR [rbx+0xb0],0x85
   140005079:	jmp    0x1400050b2
   14000507b:	cmp    eax,0xc000008d
   140005080:	jne    0x14000508e
   140005082:	mov    DWORD PTR [rbx+0xb0],0x82
   14000508c:	jmp    0x1400050b2
   14000508e:	cmp    eax,0xc000008f
   140005093:	jne    0x1400050a1
   140005095:	mov    DWORD PTR [rbx+0xb0],0x86
   14000509f:	jmp    0x1400050b2
   1400050a1:	cmp    eax,0xc0000092
   1400050a6:	jne    0x1400050b2
   1400050a8:	mov    DWORD PTR [rbx+0xb0],0x8a
   1400050b2:	mov    edx,DWORD PTR [rbx+0xb0]
   1400050b8:	mov    ecx,0x8
   1400050bd:	call   r9
   1400050c0:	mov    QWORD PTR [rbx+0xa8],rbp
   1400050c7:	mov    rbp,QWORD PTR [rsp+0x30]
   1400050cc:	mov    DWORD PTR [rbx+0xb0],edi
   1400050d2:	or     eax,0xffffffff
   1400050d5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400050da:	mov    rsi,QWORD PTR [rsp+0x40]
   1400050df:	add    rsp,0x20
   1400050e3:	pop    rdi
   1400050e4:	ret    
   1400050e5:	xor    r8d,r8d
   1400050e8:	mov    QWORD PTR [rdx+0x8],r8
   1400050ec:	call   r9
   1400050ef:	mov    QWORD PTR [rbx+0xa8],rbp
   1400050f6:	mov    rbp,QWORD PTR [rsp+0x30]
   1400050fb:	or     eax,0xffffffff
   1400050fe:	mov    rbx,QWORD PTR [rsp+0x38]
   140005103:	mov    rsi,QWORD PTR [rsp+0x40]
   140005108:	add    rsp,0x20
   14000510c:	pop    rdi
   14000510d:	ret    
   14000510e:	mov    rbx,QWORD PTR [rsp+0x38]
   140005113:	mov    rsi,QWORD PTR [rsp+0x40]
   140005118:	xor    eax,eax
   14000511a:	add    rsp,0x20
   14000511e:	pop    rdi
   14000511f:	ret    
   140005120:	push   r12
   140005122:	sub    rsp,0x30
   140005126:	mov    rdx,QWORD PTR [rip+0x10543]        # 0x140015670
   14000512d:	xor    r12d,r12d
   140005130:	test   rdx,rdx
   140005133:	mov    r8d,r12d
   140005136:	jne    0x140005142
   140005138:	or     eax,0xffffffff
   14000513b:	add    rsp,0x30
   14000513f:	pop    r12
   140005141:	ret    
   140005142:	movzx  eax,WORD PTR [rdx]
   140005145:	mov    QWORD PTR [rsp+0x50],rsi
   14000514a:	mov    QWORD PTR [rsp+0x58],rdi
   14000514f:	test   ax,ax
   140005152:	je     0x140005179
   140005154:	cmp    ax,0x3d
   140005158:	je     0x14000515e
   14000515a:	add    r8d,0x1
   14000515e:	xor    eax,eax
   140005160:	or     rcx,0xffffffffffffffff
   140005164:	mov    rdi,rdx
   140005167:	repnz scas ax,WORD PTR es:[rdi]
   14000516a:	not    rcx
   14000516d:	lea    rdx,[rdx+rcx*2]
   140005171:	mov    ax,WORD PTR [rdx]
   140005174:	test   ax,ax
   140005177:	jne    0x140005154
   140005179:	lea    eax,[r8+0x1]
   14000517d:	mov    edx,0x8
   140005182:	movsxd rcx,eax
   140005185:	call   0x140006700
   14000518a:	test   rax,rax
   14000518d:	mov    rsi,rax
   140005190:	mov    QWORD PTR [rip+0x10ac9],rax        # 0x140015c60
   140005197:	jne    0x1400051ad
   140005199:	mov    rsi,QWORD PTR [rsp+0x50]
   14000519e:	mov    rdi,QWORD PTR [rsp+0x58]
   1400051a3:	or     eax,0xffffffff
   1400051a6:	add    rsp,0x30
   1400051aa:	pop    r12
   1400051ac:	ret    
   1400051ad:	mov    QWORD PTR [rsp+0x40],rbx
   1400051b2:	mov    rbx,QWORD PTR [rip+0x104b7]        # 0x140015670
   1400051b9:	mov    QWORD PTR [rsp+0x48],rbp
   1400051be:	movzx  edx,WORD PTR [rbx]
   1400051c1:	test   dx,dx
   1400051c4:	je     0x14000523c
   1400051c6:	data16 data16 xchg ax,ax
   1400051ca:	data16 xchg ax,ax
   1400051cd:	data16 xchg ax,ax
   1400051d0:	or     rcx,0xffffffffffffffff
   1400051d4:	xor    eax,eax
   1400051d6:	mov    rdi,rbx
   1400051d9:	repnz scas ax,WORD PTR es:[rdi]
   1400051dc:	cmp    dx,0x3d
   1400051e0:	not    rcx
   1400051e3:	movsxd rdi,ecx
   1400051e6:	je     0x140005228
   1400051e8:	movsxd rbp,ecx
   1400051eb:	lea    edx,[rax+0x2]
   1400051ee:	mov    rcx,rbp
   1400051f1:	call   0x140006700
   1400051f6:	test   rax,rax
   1400051f9:	mov    QWORD PTR [rsi],rax
   1400051fc:	je     0x140005275
   1400051fe:	mov    r8,rbx
   140005201:	mov    rdx,rbp
   140005204:	mov    rcx,rax
   140005207:	call   0x140009210
   14000520c:	test   eax,eax
   14000520e:	je     0x140005224
   140005210:	xor    r9d,r9d
   140005213:	xor    r8d,r8d
   140005216:	xor    edx,edx
   140005218:	xor    ecx,ecx
   14000521a:	mov    QWORD PTR [rsp+0x20],r12
   14000521f:	call   0x140003f00
   140005224:	add    rsi,0x8
   140005228:	mov    dx,WORD PTR [rbx+rdi*2]
   14000522c:	lea    rbx,[rbx+rdi*2]
   140005230:	test   dx,dx
   140005233:	jne    0x1400051d0
   140005235:	mov    rbx,QWORD PTR [rip+0x10434]        # 0x140015670
   14000523c:	mov    rcx,rbx
   14000523f:	call   0x140002700
   140005244:	mov    QWORD PTR [rip+0x10425],r12        # 0x140015670
   14000524b:	mov    QWORD PTR [rsi],r12
   14000524e:	mov    DWORD PTR [rip+0x115e8],0x1        # 0x140016840
   140005258:	xor    eax,eax
   14000525a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000525f:	mov    rbx,QWORD PTR [rsp+0x40]
   140005264:	mov    rsi,QWORD PTR [rsp+0x50]
   140005269:	mov    rdi,QWORD PTR [rsp+0x58]
   14000526e:	add    rsp,0x30
   140005272:	pop    r12
   140005274:	ret    
   140005275:	mov    rcx,QWORD PTR [rip+0x109e4]        # 0x140015c60
   14000527c:	call   0x140002700
   140005281:	mov    QWORD PTR [rip+0x109d8],r12        # 0x140015c60
   140005288:	or     eax,0xffffffff
   14000528b:	jmp    0x14000525a
   14000528d:	int3   
   14000528e:	int3   
   14000528f:	int3   
   140005290:	mov    QWORD PTR [rsp+0x8],rbx
   140005295:	mov    QWORD PTR [rsp+0x10],rdi
   14000529a:	test   rdx,rdx
   14000529d:	mov    r11,QWORD PTR [rsp+0x28]
   1400052a2:	mov    rdi,r9
   1400052a5:	mov    DWORD PTR [r11],0x0
   1400052ac:	mov    rbx,rdx
   1400052af:	mov    r10,rcx
   1400052b2:	mov    DWORD PTR [r9],0x1
   1400052b9:	je     0x1400052c2
   1400052bb:	mov    QWORD PTR [rdx],r8
   1400052be:	add    rbx,0x8
   1400052c2:	xor    ecx,ecx
   1400052c4:	cmp    WORD PTR [r10],0x22
   1400052c9:	jne    0x1400052de
   1400052cb:	xor    eax,eax
   1400052cd:	test   ecx,ecx
   1400052cf:	sete   al
   1400052d2:	add    r10,0x2
   1400052d6:	mov    ecx,eax
   1400052d8:	mov    ax,0x22
   1400052dc:	jmp    0x140005301
   1400052de:	add    DWORD PTR [r11],0x1
   1400052e2:	test   r8,r8
   1400052e5:	je     0x1400052f4
   1400052e7:	movzx  eax,WORD PTR [r10]
   1400052eb:	add    r8,0x2
   1400052ef:	mov    WORD PTR [r8-0x2],ax
   1400052f4:	movzx  eax,WORD PTR [r10]
   1400052f8:	add    r10,0x2
   1400052fc:	test   ax,ax
   1400052ff:	je     0x14000531f
   140005301:	test   ecx,ecx
   140005303:	jne    0x1400052c4
   140005305:	cmp    ax,0x20
   140005309:	je     0x140005311
   14000530b:	cmp    ax,0x9
   14000530f:	jne    0x1400052c4
   140005311:	test   r8,r8
   140005314:	je     0x140005323
   140005316:	mov    WORD PTR [r8-0x2],0x0
   14000531d:	jmp    0x140005323
   14000531f:	sub    r10,0x2
   140005323:	xor    r9d,r9d
   140005326:	data16 data16 xchg ax,ax
   14000532a:	data16 xchg ax,ax
   14000532d:	data16 xchg ax,ax
   140005330:	cmp    WORD PTR [r10],0x0
   140005335:	je     0x14000542b
   14000533b:	xchg   ax,ax
   14000533d:	data16 xchg ax,ax
   140005340:	movzx  eax,WORD PTR [r10]
   140005344:	cmp    ax,0x20
   140005348:	je     0x140005350
   14000534a:	cmp    ax,0x9
   14000534e:	jne    0x140005356
   140005350:	add    r10,0x2
   140005354:	jmp    0x140005340
   140005356:	cmp    WORD PTR [r10],0x0
   14000535b:	je     0x14000542b
   140005361:	test   rbx,rbx
   140005364:	je     0x14000536d
   140005366:	mov    QWORD PTR [rbx],r8
   140005369:	add    rbx,0x8
   14000536d:	add    DWORD PTR [rdi],0x1
   140005370:	xor    ecx,ecx
   140005372:	cmp    WORD PTR [r10],0x5c
   140005377:	mov    edx,0x1
   14000537c:	jne    0x14000538d
   14000537e:	xchg   ax,ax
   140005380:	add    r10,0x2
   140005384:	add    ecx,edx
   140005386:	cmp    WORD PTR [r10],0x5c
   14000538b:	je     0x140005380
   14000538d:	cmp    WORD PTR [r10],0x22
   140005392:	jne    0x1400053bd
   140005394:	test   dl,cl
   140005396:	jne    0x1400053bb
   140005398:	test   r9d,r9d
   14000539b:	je     0x1400053ae
   14000539d:	cmp    WORD PTR [r10+0x2],0x22
   1400053a3:	lea    rax,[r10+0x2]
   1400053a7:	jne    0x1400053ae
   1400053a9:	mov    r10,rax
   1400053ac:	jmp    0x1400053bb
   1400053ae:	xor    eax,eax
   1400053b0:	xor    edx,edx
   1400053b2:	test   r9d,r9d
   1400053b5:	sete   al
   1400053b8:	mov    r9d,eax
   1400053bb:	shr    ecx,1
   1400053bd:	test   ecx,ecx
   1400053bf:	je     0x1400053db
   1400053c1:	add    ecx,0xffffffff
   1400053c4:	test   r8,r8
   1400053c7:	je     0x1400053d3
   1400053c9:	mov    WORD PTR [r8],0x5c
   1400053cf:	add    r8,0x2
   1400053d3:	add    DWORD PTR [r11],0x1
   1400053d7:	test   ecx,ecx
   1400053d9:	jne    0x1400053c1
   1400053db:	movzx  eax,WORD PTR [r10]
   1400053df:	test   ax,ax
   1400053e2:	je     0x140005413
   1400053e4:	test   r9d,r9d
   1400053e7:	jne    0x1400053f5
   1400053e9:	cmp    ax,0x20
   1400053ed:	je     0x140005413
   1400053ef:	cmp    ax,0x9
   1400053f3:	je     0x140005413
   1400053f5:	test   edx,edx
   1400053f7:	je     0x14000540a
   1400053f9:	test   r8,r8
   1400053fc:	je     0x140005406
   1400053fe:	mov    WORD PTR [r8],ax
   140005402:	add    r8,0x2
   140005406:	add    DWORD PTR [r11],0x1
   14000540a:	add    r10,0x2
   14000540e:	jmp    0x140005370
   140005413:	test   r8,r8
   140005416:	je     0x140005422
   140005418:	mov    WORD PTR [r8],0x0
   14000541e:	add    r8,0x2
   140005422:	add    DWORD PTR [r11],0x1
   140005426:	jmp    0x140005330
   14000542b:	test   rbx,rbx
   14000542e:	je     0x140005437
   140005430:	mov    QWORD PTR [rbx],0x0
   140005437:	add    DWORD PTR [rdi],0x1
   14000543a:	mov    rbx,QWORD PTR [rsp+0x8]
   14000543f:	mov    rdi,QWORD PTR [rsp+0x10]
   140005444:	ret    
   140005445:	int3   
   140005446:	int3   
   140005447:	int3   
   140005448:	int3   
   140005449:	int3   
   14000544a:	int3   
   14000544b:	int3   
   14000544c:	int3   
   14000544d:	int3   
   14000544e:	int3   
   14000544f:	int3   
   140005450:	mov    QWORD PTR [rsp+0x18],rbx
   140005455:	mov    QWORD PTR [rsp+0x20],rsi
   14000545a:	push   rdi
   14000545b:	sub    rsp,0x30
   14000545f:	lea    rbx,[rip+0x10b4a]        # 0x140015fb0
   140005466:	mov    r8d,0x104
   14000546c:	xor    ecx,ecx
   14000546e:	mov    rdx,rbx
   140005471:	mov    WORD PTR [rip+0x10d3e],0x0        # 0x1400161b8
   14000547a:	call   QWORD PTR [rip+0x9ca8]        # 0x14000f128
   140005480:	mov    rsi,QWORD PTR [rip+0x12401]        # 0x140017888
   140005487:	mov    QWORD PTR [rip+0x107ea],rbx        # 0x140015c78
   14000548e:	test   rsi,rsi
   140005491:	je     0x140005499
   140005493:	cmp    WORD PTR [rsi],0x0
   140005497:	jne    0x14000549c
   140005499:	mov    rsi,rbx
   14000549c:	xor    ebx,ebx
   14000549e:	xor    r9d,r9d
   1400054a1:	xor    r8d,r8d
   1400054a4:	mov    rdx,rsi
   1400054a7:	xor    ecx,ecx
   1400054a9:	lea    edi,[rbx+0x1]
   1400054ac:	mov    DWORD PTR [rsp+0x40],r9d
   1400054b1:	movzx  eax,WORD PTR [rdx]
   1400054b4:	cmp    ax,0x22
   1400054b8:	jne    0x1400054cd
   1400054ba:	xor    eax,eax
   1400054bc:	test   ecx,ecx
   1400054be:	sete   al
   1400054c1:	add    rdx,0x2
   1400054c5:	mov    ecx,eax
   1400054c7:	mov    ax,0x22
   1400054cb:	jmp    0x1400054ee
   1400054cd:	add    r9d,edi
   1400054d0:	test   r8,r8
   1400054d3:	mov    DWORD PTR [rsp+0x40],r9d
   1400054d8:	je     0x1400054e2
   1400054da:	mov    WORD PTR [r8],ax
   1400054de:	add    r8,0x2
   1400054e2:	movzx  eax,WORD PTR [rdx]
   1400054e5:	add    rdx,0x2
   1400054e9:	test   ax,ax
   1400054ec:	je     0x14000550a
   1400054ee:	test   ecx,ecx
   1400054f0:	jne    0x1400054b1
   1400054f2:	cmp    ax,0x20
   1400054f6:	je     0x1400054fe
   1400054f8:	cmp    ax,0x9
   1400054fc:	jne    0x1400054b1
   1400054fe:	test   r8,r8
   140005501:	je     0x14000550e
   140005503:	mov    WORD PTR [r8-0x2],bx
   140005508:	jmp    0x14000550e
   14000550a:	sub    rdx,0x2
   14000550e:	xor    r11d,r11d
   140005511:	cmp    WORD PTR [rdx],0x0
   140005515:	je     0x14000560f
   14000551b:	xchg   ax,ax
   14000551d:	data16 xchg ax,ax
   140005520:	movzx  eax,WORD PTR [rdx]
   140005523:	cmp    ax,0x20
   140005527:	je     0x14000552f
   140005529:	cmp    ax,0x9
   14000552d:	jne    0x140005535
   14000552f:	add    rdx,0x2
   140005533:	jmp    0x140005520
   140005535:	cmp    WORD PTR [rdx],0x0
   140005539:	je     0x14000560f
   14000553f:	test   rbx,rbx
   140005542:	je     0x14000554b
   140005544:	mov    QWORD PTR [rbx],r8
   140005547:	add    rbx,0x8
   14000554b:	add    edi,0x1
   14000554e:	xchg   ax,ax
   140005550:	xor    ecx,ecx
   140005552:	cmp    WORD PTR [rdx],0x5c
   140005556:	lea    r10d,[rcx+0x1]
   14000555a:	jne    0x14000556d
   14000555c:	data16 data16 xchg ax,ax
   140005560:	add    rdx,0x2
   140005564:	add    ecx,r10d
   140005567:	cmp    WORD PTR [rdx],0x5c
   14000556b:	je     0x140005560
   14000556d:	cmp    WORD PTR [rdx],0x22
   140005571:	jne    0x14000559d
   140005573:	test   r10b,cl
   140005576:	jne    0x14000559b
   140005578:	test   r11d,r11d
   14000557b:	je     0x14000558d
   14000557d:	cmp    WORD PTR [rdx+0x2],0x22
   140005582:	lea    rax,[rdx+0x2]
   140005586:	jne    0x14000558d
   140005588:	mov    rdx,rax
   14000558b:	jmp    0x14000559b
   14000558d:	xor    eax,eax
   14000558f:	xor    r10d,r10d
   140005592:	test   r11d,r11d
   140005595:	sete   al
   140005598:	mov    r11d,eax
   14000559b:	shr    ecx,1
   14000559d:	test   ecx,ecx
   14000559f:	je     0x1400055ba
   1400055a1:	add    r9d,ecx
   1400055a4:	add    ecx,0xffffffff
   1400055a7:	test   r8,r8
   1400055aa:	je     0x1400055b6
   1400055ac:	mov    WORD PTR [r8],0x5c
   1400055b2:	add    r8,0x2
   1400055b6:	test   ecx,ecx
   1400055b8:	jne    0x1400055a4
   1400055ba:	movzx  eax,WORD PTR [rdx]
   1400055bd:	test   ax,ax
   1400055c0:	je     0x1400055f2
   1400055c2:	test   r11d,r11d
   1400055c5:	jne    0x1400055d3
   1400055c7:	cmp    ax,0x20
   1400055cb:	je     0x1400055f2
   1400055cd:	cmp    ax,0x9
   1400055d1:	je     0x1400055f2
   1400055d3:	test   r10d,r10d
   1400055d6:	je     0x1400055e9
   1400055d8:	test   r8,r8
   1400055db:	je     0x1400055e5
   1400055dd:	mov    WORD PTR [r8],ax
   1400055e1:	add    r8,0x2
   1400055e5:	add    r9d,0x1
   1400055e9:	add    rdx,0x2
   1400055ed:	jmp    0x140005550
   1400055f2:	test   r8,r8
   1400055f5:	je     0x140005601
   1400055f7:	mov    WORD PTR [r8],0x0
   1400055fd:	add    r8,0x2
   140005601:	add    r9d,0x1
   140005605:	mov    DWORD PTR [rsp+0x40],r9d
   14000560a:	jmp    0x140005511
   14000560f:	test   rbx,rbx
   140005612:	je     0x14000561b
   140005614:	mov    QWORD PTR [rbx],0x0
   14000561b:	add    edi,0x1
   14000561e:	movabs rax,0x1fffffffffffffff
   140005628:	mov    DWORD PTR [rsp+0x48],edi
   14000562c:	movsxd rdi,edi
   14000562f:	cmp    rdi,rax
   140005632:	jae    0x1400056a9
   140005634:	movsxd rax,r9d
   140005637:	movabs rcx,0x7fffffffffffffff
   140005641:	cmp    rax,rcx
   140005644:	jae    0x1400056a9
   140005646:	lea    rcx,[rax+rdi*4]
   14000564a:	add    rax,rax
   14000564d:	add    rcx,rcx
   140005650:	cmp    rcx,rax
   140005653:	jb     0x1400056a9
   140005655:	call   0x140006690
   14000565a:	test   rax,rax
   14000565d:	mov    rbx,rax
   140005660:	je     0x1400056a9
   140005662:	lea    r8,[rax+rdi*8]
   140005666:	lea    rax,[rsp+0x40]
   14000566b:	lea    r9,[rsp+0x48]
   140005670:	mov    rdx,rbx
   140005673:	mov    rcx,rsi
   140005676:	mov    QWORD PTR [rsp+0x20],rax
   14000567b:	call   0x140005290
   140005680:	mov    r11d,DWORD PTR [rsp+0x48]
   140005685:	mov    QWORD PTR [rip+0x105bc],rbx        # 0x140015c48
   14000568c:	add    r11d,0xffffffff
   140005690:	xor    eax,eax
   140005692:	mov    DWORD PTR [rip+0x1059f],r11d        # 0x140015c38
   140005699:	mov    rbx,QWORD PTR [rsp+0x50]
   14000569e:	mov    rsi,QWORD PTR [rsp+0x58]
   1400056a3:	add    rsp,0x30
   1400056a7:	pop    rdi
   1400056a8:	ret    
   1400056a9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400056ae:	mov    rsi,QWORD PTR [rsp+0x58]
   1400056b3:	or     eax,0xffffffff
   1400056b6:	add    rsp,0x30
   1400056ba:	pop    rdi
   1400056bb:	ret    
   1400056bc:	int3   
   1400056bd:	int3   
   1400056be:	int3   
   1400056bf:	int3   
   1400056c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400056c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400056ca:	push   rsi
   1400056cb:	push   rdi
   1400056cc:	push   r12
   1400056ce:	sub    rsp,0x30
   1400056d2:	mov    eax,DWORD PTR [rip+0x10ae4]        # 0x1400161bc
   1400056d8:	xor    r12d,r12d
   1400056db:	test   eax,eax
   1400056dd:	mov    ebp,r12d
   1400056e0:	jne    0x14000571c
   1400056e2:	call   QWORD PTR [rip+0x9a68]        # 0x14000f150
   1400056e8:	test   rax,rax
   1400056eb:	mov    rdi,rax
   1400056ee:	je     0x1400056fc
   1400056f0:	mov    DWORD PTR [rip+0x10ac2],0x1        # 0x1400161bc
   1400056fa:	jmp    0x14000572f
   1400056fc:	call   QWORD PTR [rip+0x99a6]        # 0x14000f0a8
   140005702:	cmp    eax,0x78
   140005705:	jne    0x140005716
   140005707:	mov    DWORD PTR [rip+0x10aab],0x2        # 0x1400161bc
   140005711:	jmp    0x140005799
   140005716:	mov    eax,DWORD PTR [rip+0x10aa0]        # 0x1400161bc
   14000571c:	cmp    eax,0x1
   14000571f:	jne    0x140005790
   140005721:	call   QWORD PTR [rip+0x9a29]        # 0x14000f150
   140005727:	test   rax,rax
   14000572a:	mov    rdi,rax
   14000572d:	je     0x14000576a
   14000572f:	cmp    WORD PTR [rdi],bp
   140005732:	mov    rax,rdi
   140005735:	je     0x140005749
   140005737:	add    rax,0x2
   14000573b:	cmp    WORD PTR [rax],bp
   14000573e:	jne    0x140005737
   140005740:	add    rax,0x2
   140005744:	cmp    WORD PTR [rax],bp
   140005747:	jne    0x140005737
   140005749:	sub    eax,edi
   14000574b:	add    eax,0x2
   14000574e:	movsxd rsi,eax
   140005751:	mov    rcx,rsi
   140005754:	call   0x140006690
   140005759:	test   rax,rax
   14000575c:	mov    rbx,rax
   14000575f:	jne    0x140005771
   140005761:	mov    rcx,rdi
   140005764:	call   QWORD PTR [rip+0x99de]        # 0x14000f148
   14000576a:	xor    eax,eax
   14000576c:	jmp    0x14000588b
   140005771:	mov    r8,rsi
   140005774:	mov    rdx,rdi
   140005777:	mov    rcx,rax
   14000577a:	call   0x1400043f0
   14000577f:	mov    rcx,rdi
   140005782:	call   QWORD PTR [rip+0x99c0]        # 0x14000f148
   140005788:	mov    rax,rbx
   14000578b:	jmp    0x14000588b
   140005790:	cmp    eax,0x2
   140005793:	je     0x140005799
   140005795:	test   eax,eax
   140005797:	jne    0x14000576a
   140005799:	call   QWORD PTR [rip+0x99a1]        # 0x14000f140
   14000579f:	test   rax,rax
   1400057a2:	mov    rsi,rax
   1400057a5:	je     0x14000576a
   1400057a7:	cmp    BYTE PTR [rax],bpl
   1400057aa:	mov    rbx,rax
   1400057ad:	je     0x1400057e8
   1400057af:	nop
   1400057b0:	or     r9d,0xffffffff
   1400057b4:	mov    r8,rbx
   1400057b7:	xor    ecx,ecx
   1400057b9:	lea    edx,[r9+0x2]
   1400057bd:	mov    DWORD PTR [rsp+0x28],r12d
   1400057c2:	mov    QWORD PTR [rsp+0x20],r12
   1400057c7:	call   QWORD PTR [rip+0x996b]        # 0x14000f138
   1400057cd:	test   eax,eax
   1400057cf:	je     0x14000576a
   1400057d1:	or     rcx,0xffffffffffffffff
   1400057d5:	add    ebp,eax
   1400057d7:	mov    rdi,rbx
   1400057da:	xor    eax,eax
   1400057dc:	repnz scas al,BYTE PTR es:[rdi]
   1400057de:	not    rcx
   1400057e1:	add    rbx,rcx
   1400057e4:	cmp    BYTE PTR [rbx],al
   1400057e6:	jne    0x1400057b0
   1400057e8:	add    ebp,0x1
   1400057eb:	mov    edx,0x2
   1400057f0:	movsxd rcx,ebp
   1400057f3:	call   0x140006700
   1400057f8:	test   rax,rax
   1400057fb:	mov    r12,rax
   1400057fe:	jne    0x14000580d
   140005800:	mov    rcx,rsi
   140005803:	call   QWORD PTR [rip+0x9927]        # 0x14000f130
   140005809:	xor    eax,eax
   14000580b:	jmp    0x14000588b
   14000580d:	cmp    BYTE PTR [rsi],0x0
   140005810:	mov    QWORD PTR [rsp+0x50],r13
   140005815:	mov    rbx,rax
   140005818:	mov    r13,rsi
   14000581b:	je     0x140005875
   14000581d:	data16 xchg ax,ax
   140005820:	or     r9d,0xffffffff
   140005824:	mov    eax,ebp
   140005826:	mov    rcx,rbx
   140005829:	sub    rcx,r12
   14000582c:	lea    edx,[r9+0x2]
   140005830:	mov    r8,r13
   140005833:	sar    rcx,1
   140005836:	sub    eax,ecx
   140005838:	xor    ecx,ecx
   14000583a:	mov    DWORD PTR [rsp+0x28],eax
   14000583e:	mov    QWORD PTR [rsp+0x20],rbx
   140005843:	call   QWORD PTR [rip+0x98ef]        # 0x14000f138
   140005849:	test   eax,eax
   14000584b:	je     0x14000589e
   14000584d:	or     rcx,0xffffffffffffffff
   140005851:	xor    eax,eax
   140005853:	mov    rdi,r13
   140005856:	repnz scas al,BYTE PTR es:[rdi]
   140005858:	mov    rdi,rbx
   14000585b:	not    rcx
   14000585e:	add    r13,rcx
   140005861:	or     rcx,0xffffffffffffffff
   140005865:	repnz scas ax,WORD PTR es:[rdi]
   140005868:	cmp    BYTE PTR [r13+0x0],al
   14000586c:	not    rcx
   14000586f:	lea    rbx,[rbx+rcx*2]
   140005873:	jne    0x140005820
   140005875:	mov    rcx,rsi
   140005878:	mov    WORD PTR [rbx],0x0
   14000587d:	call   QWORD PTR [rip+0x98ad]        # 0x14000f130
   140005883:	mov    rax,r12
   140005886:	mov    r13,QWORD PTR [rsp+0x50]
   14000588b:	mov    rbx,QWORD PTR [rsp+0x58]
   140005890:	mov    rbp,QWORD PTR [rsp+0x60]
   140005895:	add    rsp,0x30
   140005899:	pop    r12
   14000589b:	pop    rdi
   14000589c:	pop    rsi
   14000589d:	ret    
   14000589e:	mov    rcx,r12
   1400058a1:	call   0x140002700
   1400058a6:	mov    rcx,rsi
   1400058a9:	call   QWORD PTR [rip+0x9881]        # 0x14000f130
   1400058af:	xor    eax,eax
   1400058b1:	jmp    0x140005886
   1400058b3:	int3   
   1400058b4:	int3   
   1400058b5:	int3   
   1400058b6:	int3   
   1400058b7:	int3   
   1400058b8:	int3   
   1400058b9:	int3   
   1400058ba:	int3   
   1400058bb:	int3   
   1400058bc:	int3   
   1400058bd:	int3   
   1400058be:	int3   
   1400058bf:	int3   
   1400058c0:	sub    rsp,0x38
   1400058c4:	mov    eax,DWORD PTR [rip+0x108f6]        # 0x1400161c0
   1400058ca:	test   eax,eax
   1400058cc:	jne    0x14000590c
   1400058ce:	call   QWORD PTR [rip+0x988c]        # 0x14000f160
   1400058d4:	test   rax,rax
   1400058d7:	je     0x1400058ee
   1400058d9:	mov    DWORD PTR [rip+0x108dd],0x1        # 0x1400161c0
   1400058e3:	add    rsp,0x38
   1400058e7:	rex.W jmp QWORD PTR [rip+0x9872]        # 0x14000f160
   1400058ee:	call   QWORD PTR [rip+0x97b4]        # 0x14000f0a8
   1400058f4:	cmp    eax,0x78
   1400058f7:	jne    0x140005905
   1400058f9:	mov    DWORD PTR [rip+0x108bd],0x2        # 0x1400161c0
   140005903:	jmp    0x140005921
   140005905:	xor    eax,eax
   140005907:	add    rsp,0x38
   14000590b:	ret    
   14000590c:	cmp    eax,0x1
   14000590f:	jne    0x14000591c
   140005911:	add    rsp,0x38
   140005915:	rex.W jmp QWORD PTR [rip+0x9844]        # 0x14000f160
   14000591c:	cmp    eax,0x2
   14000591f:	jne    0x140005905
   140005921:	mov    QWORD PTR [rsp+0x48],rsi
   140005926:	mov    QWORD PTR [rsp+0x30],rdi
   14000592b:	call   QWORD PTR [rip+0x9827]        # 0x14000f158
   140005931:	mov    rsi,rax
   140005934:	xor    eax,eax
   140005936:	or     r9d,0xffffffff
   14000593a:	mov    DWORD PTR [rsp+0x28],eax
   14000593e:	lea    edx,[rax+0x1]
   140005941:	mov    r8,rsi
   140005944:	xor    ecx,ecx
   140005946:	mov    QWORD PTR [rsp+0x20],rax
   14000594b:	call   QWORD PTR [rip+0x97e7]        # 0x14000f138
   140005951:	test   eax,eax
   140005953:	movsxd rdi,eax
   140005956:	jne    0x140005969
   140005958:	mov    rsi,QWORD PTR [rsp+0x48]
   14000595d:	mov    rdi,QWORD PTR [rsp+0x30]
   140005962:	xor    eax,eax
   140005964:	add    rsp,0x38
   140005968:	ret    
   140005969:	mov    rcx,rdi
   14000596c:	mov    edx,0x2
   140005971:	mov    QWORD PTR [rsp+0x40],rbx
   140005976:	call   0x140006700
   14000597b:	test   rax,rax
   14000597e:	mov    rbx,rax
   140005981:	je     0x1400059c2
   140005983:	or     r9d,0xffffffff
   140005987:	mov    r8,rsi
   14000598a:	xor    ecx,ecx
   14000598c:	lea    edx,[r9+0x2]
   140005990:	mov    DWORD PTR [rsp+0x28],edi
   140005994:	mov    QWORD PTR [rsp+0x20],rax
   140005999:	call   QWORD PTR [rip+0x9799]        # 0x14000f138
   14000599f:	test   eax,eax
   1400059a1:	je     0x1400059ba
   1400059a3:	mov    rsi,QWORD PTR [rsp+0x48]
   1400059a8:	mov    rdi,QWORD PTR [rsp+0x30]
   1400059ad:	mov    rax,rbx
   1400059b0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400059b5:	add    rsp,0x38
   1400059b9:	ret    
   1400059ba:	mov    rcx,rbx
   1400059bd:	call   0x140002700
   1400059c2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400059c7:	mov    rsi,QWORD PTR [rsp+0x48]
   1400059cc:	mov    rdi,QWORD PTR [rsp+0x30]
   1400059d1:	xor    eax,eax
   1400059d3:	add    rsp,0x38
   1400059d7:	ret    
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400059e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400059ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400059ef:	mov    QWORD PTR [rsp+0x20],r12
   1400059f4:	push   r13
   1400059f6:	push   r14
   1400059f8:	push   r15
   1400059fa:	sub    rsp,0x90
   140005a01:	lea    rcx,[rsp+0x20]
   140005a06:	call   QWORD PTR [rip+0x976c]        # 0x14000f178
   140005a0c:	nop
   140005a0d:	mov    edx,0x50
   140005a12:	lea    ecx,[rdx-0x30]
   140005a15:	call   0x140006700
   140005a1a:	mov    r11,rax
   140005a1d:	test   rax,rax
   140005a20:	jne    0x140005a2a
   140005a22:	or     eax,0xffffffff
   140005a25:	jmp    0x140005ccc
   140005a2a:	mov    QWORD PTR [rip+0x10c0f],rax        # 0x140016640
   140005a31:	mov    ecx,0x20
   140005a36:	mov    DWORD PTR [rip+0x10bfc],ecx        # 0x140016638
   140005a3c:	add    rax,0xa00
   140005a42:	cmp    r11,rax
   140005a45:	jae    0x140005a90
   140005a47:	xor    r12d,r12d
   140005a4a:	data16 xchg ax,ax
   140005a4d:	data16 xchg ax,ax
   140005a50:	mov    BYTE PTR [r11+0x8],r12b
   140005a54:	mov    QWORD PTR [r11],0xffffffffffffffff
   140005a5b:	mov    BYTE PTR [r11+0x9],0xa
   140005a60:	mov    DWORD PTR [r11+0xc],r12d
   140005a64:	mov    BYTE PTR [r11+0x38],r12b
   140005a68:	mov    BYTE PTR [r11+0x39],0xa
   140005a6d:	mov    BYTE PTR [r11+0x3a],0xa
   140005a72:	add    r11,0x50
   140005a76:	mov    rax,QWORD PTR [rip+0x10bc3]        # 0x140016640
   140005a7d:	add    rax,0xa00
   140005a83:	cmp    r11,rax
   140005a86:	jb     0x140005a50
   140005a88:	mov    ecx,DWORD PTR [rip+0x10baa]        # 0x140016638
   140005a8e:	jmp    0x140005a93
   140005a90:	xor    r12d,r12d
   140005a93:	cmp    WORD PTR [rsp+0x62],0x0
   140005a99:	je     0x140005bf1
   140005a9f:	mov    r14,QWORD PTR [rsp+0x68]
   140005aa4:	test   r14,r14
   140005aa7:	je     0x140005bf1
   140005aad:	movsxd rax,DWORD PTR [r14]
   140005ab0:	add    r14,0x4
   140005ab4:	lea    r13,[r14+rax*1]
   140005ab8:	mov    r15d,0x800
   140005abe:	cmp    eax,r15d
   140005ac1:	cmovl  r15d,eax
   140005ac5:	mov    ebx,0x1
   140005aca:	cmp    ecx,r15d
   140005acd:	jge    0x140005b65
   140005ad3:	lea    rdi,[rip+0x10b66]        # 0x140016640
   140005ada:	data16 xchg ax,ax
   140005add:	data16 xchg ax,ax
   140005ae0:	mov    edx,0x50
   140005ae5:	lea    ecx,[rdx-0x30]
   140005ae8:	call   0x140006700
   140005aed:	mov    r11,rax
   140005af0:	test   rax,rax
   140005af3:	je     0x140005b5c
   140005af5:	mov    QWORD PTR [rdi+rbx*8],rax
   140005af9:	mov    eax,DWORD PTR [rip+0x10b39]        # 0x140016638
   140005aff:	add    eax,0x20
   140005b02:	mov    DWORD PTR [rip+0x10b30],eax        # 0x140016638
   140005b08:	lea    rcx,[r11+0xa00]
   140005b0f:	cmp    r11,rcx
   140005b12:	jae    0x140005b51
   140005b14:	mov    BYTE PTR [r11+0x8],0x0
   140005b19:	mov    QWORD PTR [r11],0xffffffffffffffff
   140005b20:	mov    BYTE PTR [r11+0x9],0xa
   140005b25:	mov    DWORD PTR [r11+0xc],r12d
   140005b29:	and    BYTE PTR [r11+0x38],0x80
   140005b2e:	mov    BYTE PTR [r11+0x39],0xa
   140005b33:	mov    BYTE PTR [r11+0x3a],0xa
   140005b38:	add    r11,0x50
   140005b3c:	mov    rax,QWORD PTR [rdi+rbx*8]
   140005b40:	add    rax,0xa00
   140005b46:	cmp    r11,rax
   140005b49:	jb     0x140005b14
   140005b4b:	mov    eax,DWORD PTR [rip+0x10ae7]        # 0x140016638
   140005b51:	add    rbx,0x1
   140005b55:	cmp    eax,r15d
   140005b58:	jl     0x140005ae0
   140005b5a:	jmp    0x140005b6c
   140005b5c:	mov    r15d,DWORD PTR [rip+0x10ad5]        # 0x140016638
   140005b63:	jmp    0x140005b6c
   140005b65:	lea    rdi,[rip+0x10ad4]        # 0x140016640
   140005b6c:	mov    ebx,r12d
   140005b6f:	test   r15d,r15d
   140005b72:	jle    0x140005bf1
   140005b74:	mov    rcx,QWORD PTR [r13+0x0]
   140005b78:	cmp    rcx,0xffffffffffffffff
   140005b7c:	je     0x140005be1
   140005b7e:	cmp    rcx,0xfffffffffffffffe
   140005b82:	je     0x140005be1
   140005b84:	movzx  eax,BYTE PTR [r14]
   140005b88:	test   al,0x1
   140005b8a:	je     0x140005be1
   140005b8c:	test   al,0x8
   140005b8e:	jne    0x140005b9a
   140005b90:	call   QWORD PTR [rip+0x95da]        # 0x14000f170
   140005b96:	test   eax,eax
   140005b98:	je     0x140005be1
   140005b9a:	movsxd rax,ebx
   140005b9d:	mov    rcx,rax
   140005ba0:	sar    rcx,0x5
   140005ba4:	and    eax,0x1f
   140005ba7:	lea    rsi,[rax+rax*4]
   140005bab:	shl    rsi,0x4
   140005baf:	add    rsi,QWORD PTR [rdi+rcx*8]
   140005bb3:	mov    rax,QWORD PTR [r13+0x0]
   140005bb7:	mov    QWORD PTR [rsi],rax
   140005bba:	movzx  eax,BYTE PTR [r14]
   140005bbe:	mov    BYTE PTR [rsi+0x8],al
   140005bc1:	lea    rcx,[rsi+0x10]
   140005bc5:	mov    edx,0xfa0
   140005bca:	call   0x140008c50
   140005bcf:	test   eax,eax
   140005bd1:	je     0x140005bd9
   140005bd3:	add    DWORD PTR [rsi+0xc],0x1
   140005bd7:	jmp    0x140005be1
   140005bd9:	or     eax,0xffffffff
   140005bdc:	jmp    0x140005ccc
   140005be1:	add    ebx,0x1
   140005be4:	add    r14,0x1
   140005be8:	add    r13,0x8
   140005bec:	cmp    ebx,r15d
   140005bef:	jl     0x140005b74
   140005bf1:	mov    r13d,r12d
   140005bf4:	mov    rdi,r12
   140005bf7:	data16 xchg ax,ax
   140005bfa:	data16 xchg ax,ax
   140005bfd:	data16 xchg ax,ax
   140005c00:	lea    rbx,[rdi+rdi*4]
   140005c04:	shl    rbx,0x4
   140005c08:	add    rbx,QWORD PTR [rip+0x10a31]        # 0x140016640
   140005c0f:	mov    rax,QWORD PTR [rbx]
   140005c12:	cmp    rax,0xffffffffffffffff
   140005c16:	je     0x140005c27
   140005c18:	cmp    rax,0xfffffffffffffffe
   140005c1c:	je     0x140005c27
   140005c1e:	or     BYTE PTR [rbx+0x8],0x80
   140005c22:	jmp    0x140005ca7
   140005c27:	mov    BYTE PTR [rbx+0x8],0x81
   140005c2b:	test   rdi,rdi
   140005c2e:	jne    0x140005c37
   140005c30:	mov    ecx,0xfffffff6
   140005c35:	jmp    0x140005c44
   140005c37:	mov    ecx,r12d
   140005c3a:	cmp    r13d,0x1
   140005c3e:	sete   cl
   140005c41:	add    ecx,0xfffffff4
   140005c44:	call   QWORD PTR [rip+0x94ce]        # 0x14000f118
   140005c4a:	mov    rsi,rax
   140005c4d:	cmp    rax,0xffffffffffffffff
   140005c51:	je     0x140005c9c
   140005c53:	test   rax,rax
   140005c56:	je     0x140005c9c
   140005c58:	mov    rcx,rax
   140005c5b:	call   QWORD PTR [rip+0x950f]        # 0x14000f170
   140005c61:	test   eax,eax
   140005c63:	je     0x140005c9c
   140005c65:	mov    QWORD PTR [rbx],rsi
   140005c68:	movzx  eax,al
   140005c6b:	cmp    eax,0x2
   140005c6e:	jne    0x140005c76
   140005c70:	or     BYTE PTR [rbx+0x8],0x40
   140005c74:	jmp    0x140005c7f
   140005c76:	cmp    eax,0x3
   140005c79:	jne    0x140005c7f
   140005c7b:	or     BYTE PTR [rbx+0x8],0x8
   140005c7f:	lea    rcx,[rbx+0x10]
   140005c83:	mov    edx,0xfa0
   140005c88:	call   0x140008c50
   140005c8d:	test   eax,eax
   140005c8f:	je     0x140005c97
   140005c91:	add    DWORD PTR [rbx+0xc],0x1
   140005c95:	jmp    0x140005ca7
   140005c97:	or     eax,0xffffffff
   140005c9a:	jmp    0x140005ccc
   140005c9c:	or     BYTE PTR [rbx+0x8],0x40
   140005ca0:	mov    QWORD PTR [rbx],0xfffffffffffffffe
   140005ca7:	add    r13d,0x1
   140005cab:	add    rdi,0x1
   140005caf:	cmp    rdi,0x3
   140005cb3:	jl     0x140005c00
   140005cb9:	mov    ecx,DWORD PTR [rip+0x10979]        # 0x140016638
   140005cbf:	call   QWORD PTR [rip+0x94a3]        # 0x14000f168
   140005cc5:	xor    eax,eax
   140005cc7:	jmp    0x140005ccc
   140005cc9:	or     eax,0xffffffff
   140005ccc:	lea    r11,[rsp+0x90]
   140005cd4:	mov    rbx,QWORD PTR [r11+0x20]
   140005cd8:	mov    rsi,QWORD PTR [r11+0x28]
   140005cdc:	mov    rdi,QWORD PTR [r11+0x30]
   140005ce0:	mov    r12,QWORD PTR [r11+0x38]
   140005ce4:	mov    rsp,r11
   140005ce7:	pop    r15
   140005ce9:	pop    r14
   140005ceb:	pop    r13
   140005ced:	ret    
   140005cee:	int3   
   140005cef:	int3   
   140005cf0:	rex push rbx
   140005cf2:	push   rbp
   140005cf3:	sub    rsp,0x28
   140005cf7:	mov    rbp,rdx
   140005cfa:	mov    ebx,0x1
   140005cff:	mov    eax,ebx
   140005d01:	mov    eax,ebx
   140005d03:	add    rsp,0x28
   140005d07:	pop    rbp
   140005d08:	pop    rbx
   140005d09:	ret    
   140005d0a:	int3   
   140005d0b:	int3   
   140005d0c:	int3   
   140005d0d:	int3   
   140005d0e:	int3   
   140005d0f:	int3   
   140005d10:	mov    QWORD PTR [rsp+0x8],rbx
   140005d15:	push   rdi
   140005d16:	sub    rsp,0x20
   140005d1a:	lea    rbx,[rip+0xb867]        # 0x140011588
   140005d21:	lea    rdi,[rip+0xb860]        # 0x140011588
   140005d28:	cmp    rbx,rdi
   140005d2b:	jae    0x140005d43
   140005d2d:	data16 xchg ax,ax
   140005d30:	mov    rax,QWORD PTR [rbx]
   140005d33:	test   rax,rax
   140005d36:	je     0x140005d3a
   140005d38:	call   rax
   140005d3a:	add    rbx,0x8
   140005d3e:	cmp    rbx,rdi
   140005d41:	jb     0x140005d30
   140005d43:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d48:	add    rsp,0x20
   140005d4c:	pop    rdi
   140005d4d:	ret    
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	mov    QWORD PTR [rsp+0x8],rbx
   140005d55:	push   rdi
   140005d56:	sub    rsp,0x20
   140005d5a:	lea    rbx,[rip+0xb837]        # 0x140011598
   140005d61:	lea    rdi,[rip+0xb830]        # 0x140011598
   140005d68:	cmp    rbx,rdi
   140005d6b:	jae    0x140005d83
   140005d6d:	data16 xchg ax,ax
   140005d70:	mov    rax,QWORD PTR [rbx]
   140005d73:	test   rax,rax
   140005d76:	je     0x140005d7a
   140005d78:	call   rax
   140005d7a:	add    rbx,0x8
   140005d7e:	cmp    rbx,rdi
   140005d81:	jb     0x140005d70
   140005d83:	mov    rbx,QWORD PTR [rsp+0x30]
   140005d88:	add    rsp,0x20
   140005d8c:	pop    rdi
   140005d8d:	ret    
   140005d8e:	int3   
   140005d8f:	int3   
   140005d90:	mov    QWORD PTR [rsp+0x10],rbx
   140005d95:	mov    QWORD PTR [rsp+0x18],rbp
   140005d9a:	push   rsi
   140005d9b:	push   rdi
   140005d9c:	push   r12
   140005d9e:	sub    rsp,0x20
   140005da2:	mov    rbp,rcx
   140005da5:	mov    ecx,DWORD PTR [rip+0xea85]        # 0x140014830
   140005dab:	cmp    ecx,0xffffffff
   140005dae:	je     0x140005dc4
   140005db0:	call   QWORD PTR [rip+0x93ca]        # 0x14000f180
   140005db6:	test   rax,rax
   140005db9:	je     0x140005dc4
   140005dbb:	mov    rax,QWORD PTR [rax+0x2a8]
   140005dc2:	jmp    0x140005e3e
   140005dc4:	lea    rcx,[rip+0x9c8d]        # 0x14000fa58
   140005dcb:	call   QWORD PTR [rip+0x932f]        # 0x14000f100
   140005dd1:	test   rax,rax
   140005dd4:	mov    r12,rax
   140005dd7:	je     0x140005e4a
   140005dd9:	lea    rcx,[rsp+0x40]
   140005dde:	xor    ebx,ebx
   140005de0:	mov    DWORD PTR [rsp+0x40],ebx
   140005de4:	call   0x1400048c0
   140005de9:	cmp    DWORD PTR [rsp+0x40],0x5
   140005dee:	jg     0x140005e2e
   140005df0:	xor    ecx,ecx
   140005df2:	call   QWORD PTR [rip+0x9308]        # 0x14000f100
   140005df8:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005dfc:	add    rcx,rax
   140005dff:	movzx  eax,WORD PTR [rcx+0x14]
   140005e03:	lea    rdx,[rax+rcx*1+0x18]
   140005e08:	movzx  eax,WORD PTR [rcx+0x6]
   140005e0c:	test   eax,eax
   140005e0e:	je     0x140005e2e
   140005e10:	lea    rsi,[rip+0x9c29]        # 0x14000fa40
   140005e17:	mov    rdi,rdx
   140005e1a:	mov    ecx,0x8
   140005e1f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140005e21:	je     0x140005e4a
   140005e23:	add    ebx,0x1
   140005e26:	add    rdx,0x28
   140005e2a:	cmp    ebx,eax
   140005e2c:	jb     0x140005e10
   140005e2e:	lea    rdx,[rip+0x9c13]        # 0x14000fa48
   140005e35:	mov    rcx,r12
   140005e38:	call   QWORD PTR [rip+0x92ba]        # 0x14000f0f8
   140005e3e:	test   rax,rax
   140005e41:	je     0x140005e4a
   140005e43:	mov    rcx,rbp
   140005e46:	call   rax
   140005e48:	jmp    0x140005e4d
   140005e4a:	mov    rax,rbp
   140005e4d:	mov    rbx,QWORD PTR [rsp+0x48]
   140005e52:	mov    rbp,QWORD PTR [rsp+0x50]
   140005e57:	add    rsp,0x20
   140005e5b:	pop    r12
   140005e5d:	pop    rdi
   140005e5e:	pop    rsi
   140005e5f:	ret    
   140005e60:	mov    QWORD PTR [rsp+0x10],rbx
   140005e65:	mov    QWORD PTR [rsp+0x18],rsi
   140005e6a:	push   rdi
   140005e6b:	sub    rsp,0x20
   140005e6f:	mov    ecx,DWORD PTR [rip+0xe9bb]        # 0x140014830
   140005e75:	cmp    ecx,0xffffffff
   140005e78:	je     0x140005e91
   140005e7a:	call   QWORD PTR [rip+0x9300]        # 0x14000f180
   140005e80:	test   rax,rax
   140005e83:	je     0x140005e91
   140005e85:	mov    rax,QWORD PTR [rax+0x2a8]
   140005e8c:	jmp    0x140005f1e
   140005e91:	lea    rcx,[rip+0x9bc0]        # 0x14000fa58
   140005e98:	call   QWORD PTR [rip+0x9262]        # 0x14000f100
   140005e9e:	test   rax,rax
   140005ea1:	mov    rbx,rax
   140005ea4:	je     0x140005f37
   140005eaa:	lea    rcx,[rsp+0x30]
   140005eaf:	mov    DWORD PTR [rsp+0x30],0x0
   140005eb7:	call   0x1400048c0
   140005ebc:	cmp    DWORD PTR [rsp+0x30],0x5
   140005ec1:	jg     0x140005f0e
   140005ec3:	xor    ecx,ecx
   140005ec5:	call   QWORD PTR [rip+0x9235]        # 0x14000f100
   140005ecb:	xor    edx,edx
   140005ecd:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005ed1:	add    rcx,rax
   140005ed4:	movzx  eax,WORD PTR [rcx+0x14]
   140005ed8:	lea    r8,[rax+rcx*1+0x18]
   140005edd:	movzx  eax,WORD PTR [rcx+0x6]
   140005ee1:	test   eax,eax
   140005ee3:	je     0x140005f0e
   140005ee5:	data16 data16 xchg ax,ax
   140005ee9:	data16 xchg ax,ax
   140005eec:	data16 data16 xchg ax,ax
   140005ef0:	lea    rsi,[rip+0x9b49]        # 0x14000fa40
   140005ef7:	mov    rdi,r8
   140005efa:	mov    ecx,0x8
   140005eff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140005f01:	je     0x140005f37
   140005f03:	add    edx,0x1
   140005f06:	add    r8,0x28
   140005f0a:	cmp    edx,eax
   140005f0c:	jb     0x140005ef0
   140005f0e:	lea    rdx,[rip+0x9b33]        # 0x14000fa48
   140005f15:	mov    rcx,rbx
   140005f18:	call   QWORD PTR [rip+0x91da]        # 0x14000f0f8
   140005f1e:	test   rax,rax
   140005f21:	je     0x140005f37
   140005f23:	xor    ecx,ecx
   140005f25:	call   rax
   140005f27:	mov    rbx,QWORD PTR [rsp+0x38]
   140005f2c:	mov    rsi,QWORD PTR [rsp+0x40]
   140005f31:	add    rsp,0x20
   140005f35:	pop    rdi
   140005f36:	ret    
   140005f37:	mov    rbx,QWORD PTR [rsp+0x38]
   140005f3c:	mov    rsi,QWORD PTR [rsp+0x40]
   140005f41:	xor    eax,eax
   140005f43:	add    rsp,0x20
   140005f47:	pop    rdi
   140005f48:	ret    
   140005f49:	int3   
   140005f4a:	int3   
   140005f4b:	int3   
   140005f4c:	int3   
   140005f4d:	int3   
   140005f4e:	int3   
   140005f4f:	int3   
   140005f50:	mov    QWORD PTR [rsp+0x10],rbx
   140005f55:	mov    QWORD PTR [rsp+0x18],rbp
   140005f5a:	push   rsi
   140005f5b:	push   rdi
   140005f5c:	push   r12
   140005f5e:	sub    rsp,0x20
   140005f62:	mov    rbp,rcx
   140005f65:	mov    ecx,DWORD PTR [rip+0xe8c5]        # 0x140014830
   140005f6b:	cmp    ecx,0xffffffff
   140005f6e:	je     0x140005f84
   140005f70:	call   QWORD PTR [rip+0x920a]        # 0x14000f180
   140005f76:	test   rax,rax
   140005f79:	je     0x140005f84
   140005f7b:	mov    rax,QWORD PTR [rax+0x2b0]
   140005f82:	jmp    0x140005ffe
   140005f84:	lea    rcx,[rip+0x9acd]        # 0x14000fa58
   140005f8b:	call   QWORD PTR [rip+0x916f]        # 0x14000f100
   140005f91:	test   rax,rax
   140005f94:	mov    r12,rax
   140005f97:	je     0x14000600a
   140005f99:	lea    rcx,[rsp+0x40]
   140005f9e:	xor    ebx,ebx
   140005fa0:	mov    DWORD PTR [rsp+0x40],ebx
   140005fa4:	call   0x1400048c0
   140005fa9:	cmp    DWORD PTR [rsp+0x40],0x5
   140005fae:	jg     0x140005fee
   140005fb0:	xor    ecx,ecx
   140005fb2:	call   QWORD PTR [rip+0x9148]        # 0x14000f100
   140005fb8:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005fbc:	add    rcx,rax
   140005fbf:	movzx  eax,WORD PTR [rcx+0x14]
   140005fc3:	lea    rdx,[rax+rcx*1+0x18]
   140005fc8:	movzx  eax,WORD PTR [rcx+0x6]
   140005fcc:	test   eax,eax
   140005fce:	je     0x140005fee
   140005fd0:	lea    rsi,[rip+0x9a69]        # 0x14000fa40
   140005fd7:	mov    rdi,rdx
   140005fda:	mov    ecx,0x8
   140005fdf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140005fe1:	je     0x14000600a
   140005fe3:	add    ebx,0x1
   140005fe6:	add    rdx,0x28
   140005fea:	cmp    ebx,eax
   140005fec:	jb     0x140005fd0
   140005fee:	lea    rdx,[rip+0x9a73]        # 0x14000fa68
   140005ff5:	mov    rcx,r12
   140005ff8:	call   QWORD PTR [rip+0x90fa]        # 0x14000f0f8
   140005ffe:	test   rax,rax
   140006001:	je     0x14000600a
   140006003:	mov    rcx,rbp
   140006006:	call   rax
   140006008:	jmp    0x14000600d
   14000600a:	mov    rax,rbp
   14000600d:	mov    rbx,QWORD PTR [rsp+0x48]
   140006012:	mov    rbp,QWORD PTR [rsp+0x50]
   140006017:	add    rsp,0x20
   14000601b:	pop    r12
   14000601d:	pop    rdi
   14000601e:	pop    rsi
   14000601f:	ret    
   140006020:	mov    QWORD PTR [rsp+0x10],rbx
   140006025:	mov    QWORD PTR [rsp+0x18],rsi
   14000602a:	mov    QWORD PTR [rsp+0x20],rdi
   14000602f:	push   r12
   140006031:	push   r13
   140006033:	push   r14
   140006035:	sub    rsp,0x20
   140006039:	mov    r13,rdx
   14000603c:	mov    r12,rcx
   14000603f:	lea    rcx,[rip+0x9a12]        # 0x14000fa58
   140006046:	call   QWORD PTR [rip+0x90b4]        # 0x14000f100
   14000604c:	mov    r14,rax
   14000604f:	lea    rax,[rip+0xe6da]        # 0x140014730
   140006056:	mov    QWORD PTR [r12+0xa0],rax
   14000605e:	mov    DWORD PTR [r12+0x1c],0x1
   140006067:	test   r14,r14
   14000606a:	je     0x1400060fe
   140006070:	xor    ebx,ebx
   140006072:	mov    DWORD PTR [rsp+0x40],ebx
   140006076:	lea    rcx,[rsp+0x40]
   14000607b:	call   0x1400048c0
   140006080:	cmp    DWORD PTR [rsp+0x40],0x5
   140006085:	jg     0x1400060ce
   140006087:	xor    ecx,ecx
   140006089:	call   QWORD PTR [rip+0x9071]        # 0x14000f100
   14000608f:	movsxd rcx,DWORD PTR [rax+0x3c]
   140006093:	add    rcx,rax
   140006096:	movzx  eax,WORD PTR [rcx+0x14]
   14000609a:	lea    rdx,[rax+rcx*1+0x18]
   14000609f:	movzx  eax,WORD PTR [rcx+0x6]
   1400060a3:	test   eax,eax
   1400060a5:	je     0x1400060ce
   1400060a7:	data16 xchg ax,ax
   1400060aa:	data16 xchg ax,ax
   1400060ad:	data16 xchg ax,ax
   1400060b0:	lea    rsi,[rip+0x9989]        # 0x14000fa40
   1400060b7:	mov    rdi,rdx
   1400060ba:	mov    ecx,0x8
   1400060bf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400060c1:	je     0x1400060fe
   1400060c3:	add    ebx,0x1
   1400060c6:	add    rdx,0x28
   1400060ca:	cmp    ebx,eax
   1400060cc:	jb     0x1400060b0
   1400060ce:	lea    rdx,[rip+0x9973]        # 0x14000fa48
   1400060d5:	mov    rcx,r14
   1400060d8:	call   QWORD PTR [rip+0x901a]        # 0x14000f0f8
   1400060de:	mov    QWORD PTR [r12+0x2a8],rax
   1400060e6:	lea    rdx,[rip+0x997b]        # 0x14000fa68
   1400060ed:	mov    rcx,r14
   1400060f0:	call   QWORD PTR [rip+0x9002]        # 0x14000f0f8
   1400060f6:	mov    QWORD PTR [r12+0x2b0],rax
   1400060fe:	mov    DWORD PTR [r12+0xc8],0x1
   14000610a:	mov    BYTE PTR [r12+0x174],0x43
   140006113:	mov    BYTE PTR [r12+0x1f7],0x43
   14000611c:	lea    rax,[rip+0xe95d]        # 0x140014a80
   140006123:	mov    QWORD PTR [r12+0xb8],rax
   14000612b:	lock add DWORD PTR [rip+0xe94d],0x1        # 0x140014a80
   140006133:	mov    ecx,0xc
   140006138:	call   0x140007100
   14000613d:	nop
   14000613e:	mov    QWORD PTR [r12+0xc0],r13
   140006146:	test   r13,r13
   140006149:	jne    0x14000615a
   14000614b:	mov    rax,QWORD PTR [rip+0xefde]        # 0x140015130
   140006152:	mov    QWORD PTR [r12+0xc0],rax
   14000615a:	mov    rcx,QWORD PTR [r12+0xc0]
   140006162:	call   0x140007e80
   140006167:	nop
   140006168:	mov    ecx,0xc
   14000616d:	call   0x140006fd0
   140006172:	mov    rbx,QWORD PTR [rsp+0x48]
   140006177:	mov    rsi,QWORD PTR [rsp+0x50]
   14000617c:	mov    rdi,QWORD PTR [rsp+0x58]
   140006181:	add    rsp,0x20
   140006185:	pop    r14
   140006187:	pop    r13
   140006189:	pop    r12
   14000618b:	ret    
   14000618c:	int3   
   14000618d:	int3   
   14000618e:	int3   
   14000618f:	int3   
   140006190:	rex push rbp
   140006192:	sub    rsp,0x20
   140006196:	mov    rbp,rdx
   140006199:	mov    ecx,0xc
   14000619e:	call   0x140006fd0
   1400061a3:	add    rsp,0x20
   1400061a7:	pop    rbp
   1400061a8:	ret    
   1400061a9:	int3   
   1400061aa:	int3   
   1400061ab:	int3   
   1400061ac:	int3   
   1400061ad:	int3   
   1400061ae:	int3   
   1400061af:	int3   
   1400061b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400061b5:	push   rdi
   1400061b6:	sub    rsp,0x20
   1400061ba:	call   QWORD PTR [rip+0x8ee8]        # 0x14000f0a8
   1400061c0:	mov    ecx,DWORD PTR [rip+0xe66a]        # 0x140014830
   1400061c6:	mov    edi,eax
   1400061c8:	call   QWORD PTR [rip+0x8fb2]        # 0x14000f180
   1400061ce:	test   rax,rax
   1400061d1:	mov    rbx,rax
   1400061d4:	jne    0x140006221
   1400061d6:	lea    ecx,[rax+0x1]
   1400061d9:	mov    edx,0x2d8
   1400061de:	call   0x140006700
   1400061e3:	test   rax,rax
   1400061e6:	mov    rbx,rax
   1400061e9:	je     0x140006221
   1400061eb:	mov    ecx,DWORD PTR [rip+0xe63f]        # 0x140014830
   1400061f1:	mov    rdx,rax
   1400061f4:	call   QWORD PTR [rip+0x8f8e]        # 0x14000f188
   1400061fa:	mov    rcx,rbx
   1400061fd:	test   eax,eax
   1400061ff:	je     0x14000621a
   140006201:	xor    edx,edx
   140006203:	call   0x140006020
   140006208:	call   QWORD PTR [rip+0x8f9a]        # 0x14000f1a8
   14000620e:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   140006216:	mov    DWORD PTR [rbx],eax
   140006218:	jmp    0x140006221
   14000621a:	call   0x140002700
   14000621f:	xor    ebx,ebx
   140006221:	mov    ecx,edi
   140006223:	call   QWORD PTR [rip+0x8f77]        # 0x14000f1a0
   140006229:	mov    rax,rbx
   14000622c:	mov    rbx,QWORD PTR [rsp+0x30]
   140006231:	add    rsp,0x20
   140006235:	pop    rdi
   140006236:	ret    
   140006237:	int3   
   140006238:	int3   
   140006239:	int3   
   14000623a:	int3   
   14000623b:	int3   
   14000623c:	int3   
   14000623d:	int3   
   14000623e:	int3   
   14000623f:	int3   
   140006240:	mov    QWORD PTR [rsp+0x8],rbx
   140006245:	push   rdi
   140006246:	sub    rsp,0x20
   14000624a:	call   QWORD PTR [rip+0x8e58]        # 0x14000f0a8
   140006250:	mov    ecx,DWORD PTR [rip+0xe5da]        # 0x140014830
   140006256:	mov    edi,eax
   140006258:	call   QWORD PTR [rip+0x8f22]        # 0x14000f180
   14000625e:	test   rax,rax
   140006261:	mov    rbx,rax
   140006264:	jne    0x1400062b1
   140006266:	lea    ecx,[rax+0x1]
   140006269:	mov    edx,0x2d8
   14000626e:	call   0x140006700
   140006273:	test   rax,rax
   140006276:	mov    rbx,rax
   140006279:	je     0x1400062b1
   14000627b:	mov    ecx,DWORD PTR [rip+0xe5af]        # 0x140014830
   140006281:	mov    rdx,rax
   140006284:	call   QWORD PTR [rip+0x8efe]        # 0x14000f188
   14000628a:	mov    rcx,rbx
   14000628d:	test   eax,eax
   14000628f:	je     0x1400062aa
   140006291:	xor    edx,edx
   140006293:	call   0x140006020
   140006298:	call   QWORD PTR [rip+0x8f0a]        # 0x14000f1a8
   14000629e:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400062a6:	mov    DWORD PTR [rbx],eax
   1400062a8:	jmp    0x1400062b1
   1400062aa:	call   0x140002700
   1400062af:	xor    ebx,ebx
   1400062b1:	mov    ecx,edi
   1400062b3:	call   QWORD PTR [rip+0x8ee7]        # 0x14000f1a0
   1400062b9:	test   rbx,rbx
   1400062bc:	jne    0x1400062c6
   1400062be:	lea    ecx,[rbx+0x10]
   1400062c1:	call   0x1400047a0
   1400062c6:	mov    rax,rbx
   1400062c9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062ce:	add    rsp,0x20
   1400062d2:	pop    rdi
   1400062d3:	ret    
   1400062d4:	int3   
   1400062d5:	int3   
   1400062d6:	int3   
   1400062d7:	int3   
   1400062d8:	int3   
   1400062d9:	int3   
   1400062da:	int3   
   1400062db:	int3   
   1400062dc:	int3   
   1400062dd:	int3   
   1400062de:	int3   
   1400062df:	int3   
   1400062e0:	test   rcx,rcx
   1400062e3:	je     0x140006406
   1400062e9:	mov    QWORD PTR [rsp+0x10],rbx
   1400062ee:	push   rdi
   1400062ef:	sub    rsp,0x20
   1400062f3:	mov    rbx,rcx
   1400062f6:	mov    rcx,QWORD PTR [rcx+0x38]
   1400062fa:	test   rcx,rcx
   1400062fd:	je     0x140006304
   1400062ff:	call   0x140002700
   140006304:	mov    rcx,QWORD PTR [rbx+0x48]
   140006308:	test   rcx,rcx
   14000630b:	je     0x140006312
   14000630d:	call   0x140002700
   140006312:	mov    rcx,QWORD PTR [rbx+0x58]
   140006316:	test   rcx,rcx
   140006319:	je     0x140006320
   14000631b:	call   0x140002700
   140006320:	mov    rcx,QWORD PTR [rbx+0x68]
   140006324:	test   rcx,rcx
   140006327:	je     0x14000632e
   140006329:	call   0x140002700
   14000632e:	mov    rcx,QWORD PTR [rbx+0x78]
   140006332:	test   rcx,rcx
   140006335:	je     0x14000633c
   140006337:	call   0x140002700
   14000633c:	mov    rcx,QWORD PTR [rbx+0x80]
   140006343:	test   rcx,rcx
   140006346:	je     0x14000634d
   140006348:	call   0x140002700
   14000634d:	mov    rcx,QWORD PTR [rbx+0xa0]
   140006354:	lea    rax,[rip+0xe3d5]        # 0x140014730
   14000635b:	cmp    rcx,rax
   14000635e:	je     0x140006365
   140006360:	call   0x140002700
   140006365:	mov    ecx,0xd
   14000636a:	call   0x140007100
   14000636f:	nop
   140006370:	mov    rcx,QWORD PTR [rbx+0xb8]
   140006377:	mov    QWORD PTR [rsp+0x30],rcx
   14000637c:	test   rcx,rcx
   14000637f:	je     0x14000639e
   140006381:	lock add DWORD PTR [rcx],0xffffffff
   140006385:	jne    0x14000639e
   140006387:	lea    rax,[rip+0xe6f2]        # 0x140014a80
   14000638e:	mov    rcx,QWORD PTR [rsp+0x30]
   140006393:	cmp    rcx,rax
   140006396:	je     0x14000639e
   140006398:	call   0x140002700
   14000639d:	nop
   14000639e:	mov    ecx,0xd
   1400063a3:	call   0x140006fd0
   1400063a8:	mov    ecx,0xc
   1400063ad:	call   0x140007100
   1400063b2:	nop
   1400063b3:	mov    rdi,QWORD PTR [rbx+0xc0]
   1400063ba:	test   rdi,rdi
   1400063bd:	je     0x1400063ea
   1400063bf:	mov    rcx,rdi
   1400063c2:	call   0x140007f20
   1400063c7:	cmp    rdi,QWORD PTR [rip+0xed62]        # 0x140015130
   1400063ce:	je     0x1400063ea
   1400063d0:	lea    rax,[rip+0xebf9]        # 0x140014fd0
   1400063d7:	cmp    rdi,rax
   1400063da:	je     0x1400063ea
   1400063dc:	cmp    DWORD PTR [rdi],0x0
   1400063df:	jne    0x1400063ea
   1400063e1:	mov    rcx,rdi
   1400063e4:	call   0x140007cf0
   1400063e9:	nop
   1400063ea:	mov    ecx,0xc
   1400063ef:	call   0x140006fd0
   1400063f4:	mov    rcx,rbx
   1400063f7:	call   0x140002700
   1400063fc:	mov    rbx,QWORD PTR [rsp+0x38]
   140006401:	add    rsp,0x20
   140006405:	pop    rdi
   140006406:	ret    0x0
   140006409:	int3   
   14000640a:	int3   
   14000640b:	int3   
   14000640c:	int3   
   14000640d:	int3   
   14000640e:	int3   
   14000640f:	int3   
   140006410:	rex push rbp
   140006412:	sub    rsp,0x20
   140006416:	mov    rbp,rdx
   140006419:	mov    ecx,0xd
   14000641e:	call   0x140006fd0
   140006423:	add    rsp,0x20
   140006427:	pop    rbp
   140006428:	ret    
   140006429:	int3   
   14000642a:	int3   
   14000642b:	int3   
   14000642c:	int3   
   14000642d:	int3   
   14000642e:	int3   
   14000642f:	int3   
   140006430:	rex push rbp
   140006432:	sub    rsp,0x20
   140006436:	mov    rbp,rdx
   140006439:	mov    ecx,0xc
   14000643e:	call   0x140006fd0
   140006443:	add    rsp,0x20
   140006447:	pop    rbp
   140006448:	ret    
   140006449:	int3   
   14000644a:	int3   
   14000644b:	int3   
   14000644c:	int3   
   14000644d:	int3   
   14000644e:	int3   
   14000644f:	int3   
   140006450:	sub    rsp,0x28
   140006454:	call   0x140004b60
   140006459:	call   0x140006e90
   14000645e:	test   eax,eax
   140006460:	jne    0x1400064a4
   140006462:	mov    ecx,DWORD PTR [rip+0xe3c8]        # 0x140014830
   140006468:	cmp    ecx,0xffffffff
   14000646b:	je     0x14000647d
   14000646d:	call   QWORD PTR [rip+0x8d25]        # 0x14000f198
   140006473:	mov    DWORD PTR [rip+0xe3b3],0xffffffff        # 0x140014830
   14000647d:	mov    ecx,DWORD PTR [rip+0xe3b1]        # 0x140014834
   140006483:	cmp    ecx,0xffffffff
   140006486:	je     0x140006498
   140006488:	call   QWORD PTR [rip+0x8d02]        # 0x14000f190
   14000648e:	mov    DWORD PTR [rip+0xe39c],0xffffffff        # 0x140014834
   140006498:	call   0x140006f30
   14000649d:	xor    eax,eax
   14000649f:	add    rsp,0x28
   1400064a3:	ret    
   1400064a4:	lea    rcx,[rip+0xfffffffffffffe35]        # 0x1400062e0
   1400064ab:	call   QWORD PTR [rip+0x8cff]        # 0x14000f1b0
   1400064b1:	cmp    eax,0xffffffff
   1400064b4:	mov    DWORD PTR [rip+0xe376],eax        # 0x140014830
   1400064ba:	jne    0x1400064c8
   1400064bc:	mov    ecx,DWORD PTR [rip+0xe372]        # 0x140014834
   1400064c2:	cmp    ecx,eax
   1400064c4:	je     0x140006498
   1400064c6:	jmp    0x140006488
   1400064c8:	mov    edx,0x2d8
   1400064cd:	mov    ecx,0x1
   1400064d2:	mov    QWORD PTR [rsp+0x20],rbx
   1400064d7:	call   0x140006700
   1400064dc:	test   rax,rax
   1400064df:	mov    rbx,rax
   1400064e2:	je     0x140006520
   1400064e4:	mov    ecx,DWORD PTR [rip+0xe346]        # 0x140014830
   1400064ea:	mov    rdx,rax
   1400064ed:	call   QWORD PTR [rip+0x8c95]        # 0x14000f188
   1400064f3:	test   eax,eax
   1400064f5:	je     0x140006520
   1400064f7:	xor    edx,edx
   1400064f9:	mov    rcx,rbx
   1400064fc:	call   0x140006020
   140006501:	call   QWORD PTR [rip+0x8ca1]        # 0x14000f1a8
   140006507:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000650f:	mov    DWORD PTR [rbx],eax
   140006511:	mov    rbx,QWORD PTR [rsp+0x20]
   140006516:	mov    eax,0x1
   14000651b:	add    rsp,0x28
   14000651f:	ret    
   140006520:	mov    ecx,DWORD PTR [rip+0xe30a]        # 0x140014830
   140006526:	cmp    ecx,0xffffffff
   140006529:	je     0x14000653b
   14000652b:	call   QWORD PTR [rip+0x8c67]        # 0x14000f198
   140006531:	mov    DWORD PTR [rip+0xe2f5],0xffffffff        # 0x140014830
   14000653b:	mov    ecx,DWORD PTR [rip+0xe2f3]        # 0x140014834
   140006541:	cmp    ecx,0xffffffff
   140006544:	je     0x140006556
   140006546:	call   QWORD PTR [rip+0x8c44]        # 0x14000f190
   14000654c:	mov    DWORD PTR [rip+0xe2de],0xffffffff        # 0x140014834
   140006556:	call   0x140006f30
   14000655b:	mov    rbx,QWORD PTR [rsp+0x20]
   140006560:	xor    eax,eax
   140006562:	add    rsp,0x28
   140006566:	ret    
   140006567:	int3   
   140006568:	int3   
   140006569:	int3   
   14000656a:	int3   
   14000656b:	int3   
   14000656c:	int3   
   14000656d:	int3   
   14000656e:	int3   
   14000656f:	int3   
   140006570:	mov    DWORD PTR [rsp+0x8],ecx
   140006574:	sub    rsp,0x28
   140006578:	xor    r8d,r8d
   14000657b:	mov    edx,0x1000
   140006580:	xor    ecx,ecx
   140006582:	call   QWORD PTR [rip+0x8c38]        # 0x14000f1c0
   140006588:	test   rax,rax
   14000658b:	mov    QWORD PTR [rip+0xfc36],rax        # 0x1400161c8
   140006592:	jne    0x140006599
   140006594:	add    rsp,0x28
   140006598:	ret    
   140006599:	lea    r8,[rsp+0x30]
   14000659e:	mov    r9d,0x4
   1400065a4:	xor    edx,edx
   1400065a6:	mov    rcx,rax
   1400065a9:	mov    DWORD PTR [rsp+0x30],0x2
   1400065b1:	call   QWORD PTR [rip+0x8c01]        # 0x14000f1b8
   1400065b7:	mov    eax,0x1
   1400065bc:	add    rsp,0x28
   1400065c0:	ret    
   1400065c1:	int3   
   1400065c2:	int3   
   1400065c3:	int3   
   1400065c4:	int3   
   1400065c5:	int3   
   1400065c6:	int3   
   1400065c7:	int3   
   1400065c8:	int3   
   1400065c9:	int3   
   1400065ca:	int3   
   1400065cb:	int3   
   1400065cc:	int3   
   1400065cd:	int3   
   1400065ce:	int3   
   1400065cf:	int3   
   1400065d0:	rex push rdi
   1400065d2:	sub    rsp,0x20
   1400065d6:	mov    rax,QWORD PTR [rip+0xda83]        # 0x140014060
   1400065dd:	movabs rdi,0x2b992ddfa232
   1400065e7:	mov    QWORD PTR [rsp+0x30],0x0
   1400065f0:	cmp    rax,rdi
   1400065f3:	je     0x140006605
   1400065f5:	not    rax
   1400065f8:	mov    QWORD PTR [rip+0xda69],rax        # 0x140014068
   1400065ff:	add    rsp,0x20
   140006603:	pop    rdi
   140006604:	ret    
   140006605:	lea    rcx,[rsp+0x30]
   14000660a:	mov    QWORD PTR [rsp+0x40],rbx
   14000660f:	call   QWORD PTR [rip+0x8bcb]        # 0x14000f1e0
   140006615:	mov    rbx,QWORD PTR [rsp+0x30]
   14000661a:	call   QWORD PTR [rip+0x8bb8]        # 0x14000f1d8
   140006620:	mov    r11d,eax
   140006623:	xor    rbx,r11
   140006626:	call   QWORD PTR [rip+0x8b7c]        # 0x14000f1a8
   14000662c:	mov    r11d,eax
   14000662f:	xor    rbx,r11
   140006632:	call   QWORD PTR [rip+0x8b98]        # 0x14000f1d0
   140006638:	lea    rcx,[rsp+0x38]
   14000663d:	mov    r11d,eax
   140006640:	xor    rbx,r11
   140006643:	call   QWORD PTR [rip+0x8b7f]        # 0x14000f1c8
   140006649:	mov    r11,QWORD PTR [rsp+0x38]
   14000664e:	xor    r11,rbx
   140006651:	mov    rbx,QWORD PTR [rsp+0x40]
   140006656:	movabs rax,0xffffffffffff
   140006660:	and    r11,rax
   140006663:	movabs rax,0x2b992ddfa233
   14000666d:	cmp    r11,rdi
   140006670:	cmove  r11,rax
   140006674:	mov    QWORD PTR [rip+0xd9e5],r11        # 0x140014060
   14000667b:	not    r11
   14000667e:	mov    QWORD PTR [rip+0xd9e3],r11        # 0x140014068
   140006685:	add    rsp,0x20
   140006689:	pop    rdi
   14000668a:	ret    
   14000668b:	int3   
   14000668c:	int3   
   14000668d:	int3   
   14000668e:	int3   
   14000668f:	int3   
   140006690:	mov    QWORD PTR [rsp+0x8],rbx
   140006695:	mov    QWORD PTR [rsp+0x10],rbp
   14000669a:	mov    QWORD PTR [rsp+0x18],rsi
   14000669f:	push   rdi
   1400066a0:	sub    rsp,0x20
   1400066a4:	xor    edi,edi
   1400066a6:	mov    rsi,rcx
   1400066a9:	or     ebp,0xffffffff
   1400066ac:	data16 data16 xchg ax,ax
   1400066b0:	mov    rcx,rsi
   1400066b3:	call   0x140006a30
   1400066b8:	test   rax,rax
   1400066bb:	mov    rbx,rax
   1400066be:	jne    0x1400066eb
   1400066c0:	cmp    DWORD PTR [rip+0xfb0a],eax        # 0x1400161d0
   1400066c6:	jbe    0x1400066eb
   1400066c8:	mov    ecx,edi
   1400066ca:	call   QWORD PTR [rip+0x8b18]        # 0x14000f1e8
   1400066d0:	lea    r11d,[rdi+0x3e8]
   1400066d7:	cmp    r11d,DWORD PTR [rip+0xfaf2]        # 0x1400161d0
   1400066de:	mov    edi,r11d
   1400066e1:	cmova  edi,ebp
   1400066e4:	cmp    edi,ebp
   1400066e6:	jne    0x1400066b0
   1400066e8:	mov    rax,rbx
   1400066eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400066f0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400066f5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400066fa:	add    rsp,0x20
   1400066fe:	pop    rdi
   1400066ff:	ret    
   140006700:	mov    QWORD PTR [rsp+0x8],rbx
   140006705:	mov    QWORD PTR [rsp+0x10],rbp
   14000670a:	mov    QWORD PTR [rsp+0x18],rsi
   14000670f:	mov    QWORD PTR [rsp+0x20],rdi
   140006714:	push   r12
   140006716:	sub    rsp,0x20
   14000671a:	xor    edi,edi
   14000671c:	mov    rsi,rdx
   14000671f:	mov    rbp,rcx
   140006722:	or     r12d,0xffffffff
   140006726:	data16 data16 xchg ax,ax
   14000672a:	data16 xchg ax,ax
   14000672d:	data16 xchg ax,ax
   140006730:	xor    r8d,r8d
   140006733:	mov    rdx,rsi
   140006736:	mov    rcx,rbp
   140006739:	call   0x1400092c0
   14000673e:	test   rax,rax
   140006741:	mov    rbx,rax
   140006744:	jne    0x140006773
   140006746:	cmp    DWORD PTR [rip+0xfa84],eax        # 0x1400161d0
   14000674c:	jbe    0x140006773
   14000674e:	mov    ecx,edi
   140006750:	call   QWORD PTR [rip+0x8a92]        # 0x14000f1e8
   140006756:	lea    r11d,[rdi+0x3e8]
   14000675d:	cmp    r11d,DWORD PTR [rip+0xfa6c]        # 0x1400161d0
   140006764:	mov    edi,r11d
   140006767:	cmova  edi,r12d
   14000676b:	cmp    edi,r12d
   14000676e:	jne    0x140006730
   140006770:	mov    rax,rbx
   140006773:	mov    rbx,QWORD PTR [rsp+0x30]
   140006778:	mov    rbp,QWORD PTR [rsp+0x38]
   14000677d:	mov    rsi,QWORD PTR [rsp+0x40]
   140006782:	mov    rdi,QWORD PTR [rsp+0x48]
   140006787:	add    rsp,0x20
   14000678b:	pop    r12
   14000678d:	ret    
   14000678e:	int3   
   14000678f:	int3   
   140006790:	mov    QWORD PTR [rsp+0x8],rbx
   140006795:	mov    QWORD PTR [rsp+0x10],rbp
   14000679a:	mov    QWORD PTR [rsp+0x18],rsi
   14000679f:	mov    QWORD PTR [rsp+0x20],rdi
   1400067a4:	push   r12
   1400067a6:	sub    rsp,0x20
   1400067aa:	xor    esi,esi
   1400067ac:	mov    rdi,rdx
   1400067af:	mov    rbp,rcx
   1400067b2:	or     r12d,0xffffffff
   1400067b6:	data16 data16 xchg ax,ax
   1400067ba:	data16 xchg ax,ax
   1400067bd:	data16 xchg ax,ax
   1400067c0:	mov    rdx,rdi
   1400067c3:	mov    rcx,rbp
   1400067c6:	call   0x140002a10
   1400067cb:	test   rax,rax
   1400067ce:	mov    rbx,rax
   1400067d1:	jne    0x140006805
   1400067d3:	test   rdi,rdi
   1400067d6:	je     0x140006805
   1400067d8:	cmp    DWORD PTR [rip+0xf9f2],eax        # 0x1400161d0
   1400067de:	jbe    0x140006805
   1400067e0:	mov    ecx,esi
   1400067e2:	call   QWORD PTR [rip+0x8a00]        # 0x14000f1e8
   1400067e8:	lea    r11d,[rsi+0x3e8]
   1400067ef:	cmp    r11d,DWORD PTR [rip+0xf9da]        # 0x1400161d0
   1400067f6:	mov    esi,r11d
   1400067f9:	cmova  esi,r12d
   1400067fd:	cmp    esi,r12d
   140006800:	jne    0x1400067c0
   140006802:	mov    rax,rbx
   140006805:	mov    rbx,QWORD PTR [rsp+0x30]
   14000680a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000680f:	mov    rsi,QWORD PTR [rsp+0x40]
   140006814:	mov    rdi,QWORD PTR [rsp+0x48]
   140006819:	add    rsp,0x20
   14000681d:	pop    r12
   14000681f:	ret    
   140006820:	sub    rsp,0x38
   140006824:	test   rcx,rcx
   140006827:	jne    0x140006855
   140006829:	call   0x140004100
   14000682e:	xor    r9d,r9d
   140006831:	xor    r8d,r8d
   140006834:	xor    edx,edx
   140006836:	xor    ecx,ecx
   140006838:	mov    QWORD PTR [rsp+0x20],0x0
   140006841:	mov    DWORD PTR [rax],0x16
   140006847:	call   0x140003fa0
   14000684c:	or     rax,0xffffffffffffffff
   140006850:	add    rsp,0x38
   140006854:	ret    
   140006855:	mov    r8,rcx
   140006858:	mov    rcx,QWORD PTR [rip+0xf969]        # 0x1400161c8
   14000685f:	xor    edx,edx
   140006861:	add    rsp,0x38
   140006865:	rex.W jmp QWORD PTR [rip+0x87fc]        # 0x14000f068
   14000686c:	int3   
   14000686d:	int3   
   14000686e:	int3   
   14000686f:	int3   
   140006870:	int3   
   140006871:	int3   
   140006872:	int3   
   140006873:	int3   
   140006874:	int3   
   140006875:	int3   
   140006876:	data16 data16 xchg ax,ax
   14000687a:	data16 data16 xchg ax,ax
   14000687e:	xchg   ax,ax
   140006880:	sub    rsp,0x4d8
   140006887:	xor    r8,r8
   14000688a:	xor    r9,r9
   14000688d:	mov    QWORD PTR [rsp+0x20],rsp
   140006892:	mov    QWORD PTR [rsp+0x28],r8
   140006897:	call   0x14000c68c
   14000689c:	add    rsp,0x4d8
   1400068a3:	ret    
   1400068a4:	int3   
   1400068a5:	int3   
   1400068a6:	int3   
   1400068a7:	int3   
   1400068a8:	int3   
   1400068a9:	int3   
   1400068aa:	data16 xchg ax,ax
   1400068ad:	data16 xchg ax,ax
   1400068b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400068b5:	mov    QWORD PTR [rsp+0x18],rdx
   1400068ba:	mov    DWORD PTR [rsp+0x10],r8d
   1400068bf:	mov    r9,0x19930520
   1400068c6:	jmp    0x1400068d0
   1400068c8:	int3   
   1400068c9:	int3   
   1400068ca:	int3   
   1400068cb:	int3   
   1400068cc:	int3   
   1400068cd:	int3   
   1400068ce:	xchg   ax,ax
   1400068d0:	ret    
   1400068d1:	int3   
   1400068d2:	int3   
   1400068d3:	int3   
   1400068d4:	int3   
   1400068d5:	int3   
   1400068d6:	int3   
   1400068d7:	data16 data16 xchg ax,ax
   1400068db:	data16 data16 xchg ax,ax
   1400068df:	nop
   1400068e0:	ret    
   1400068e1:	int3   
   1400068e2:	int3   
   1400068e3:	int3   
   1400068e4:	int3   
   1400068e5:	int3   
   1400068e6:	int3   
   1400068e7:	int3   
   1400068e8:	int3   
   1400068e9:	int3   
   1400068ea:	int3   
   1400068eb:	int3   
   1400068ec:	int3   
   1400068ed:	int3   
   1400068ee:	int3   
   1400068ef:	int3   
   1400068f0:	xor    eax,eax
   1400068f2:	cmp    WORD PTR [rcx],0x5a4d
   1400068f7:	jne    0x140006910
   1400068f9:	movsxd rdx,DWORD PTR [rcx+0x3c]
   1400068fd:	cmp    DWORD PTR [rdx+rcx*1],0x4550
   140006904:	jne    0x140006910
   140006906:	cmp    WORD PTR [rdx+rcx*1+0x18],0x20b
   14000690d:	sete   al
   140006910:	ret    0x0
   140006913:	int3   
   140006914:	int3   
   140006915:	int3   
   140006916:	int3   
   140006917:	int3   
   140006918:	int3   
   140006919:	int3   
   14000691a:	int3   
   14000691b:	int3   
   14000691c:	int3   
   14000691d:	int3   
   14000691e:	int3   
   14000691f:	int3   
   140006920:	movsxd r8,DWORD PTR [rcx+0x3c]
   140006924:	xor    r9d,r9d
   140006927:	mov    r10,rdx
   14000692a:	add    r8,rcx
   14000692d:	movzx  eax,WORD PTR [r8+0x14]
   140006932:	movzx  r11d,WORD PTR [r8+0x6]
   140006937:	test   r11d,r11d
   14000693a:	lea    rcx,[rax+r8*1+0x18]
   14000693f:	je     0x140006960
   140006941:	mov    edx,DWORD PTR [rcx+0xc]
   140006944:	cmp    r10,rdx
   140006947:	jb     0x140006953
   140006949:	mov    eax,DWORD PTR [rcx+0x8]
   14000694c:	add    eax,edx
   14000694e:	cmp    r10,rax
   140006951:	jb     0x140006963
   140006953:	add    r9d,0x1
   140006957:	add    rcx,0x28
   14000695b:	cmp    r9d,r11d
   14000695e:	jb     0x140006941
   140006960:	xor    eax,eax
   140006962:	ret    
   140006963:	mov    rax,rcx
   140006966:	ret    
   140006967:	int3   
   140006968:	int3   
   140006969:	int3   
   14000696a:	int3   
   14000696b:	int3   
   14000696c:	int3   
   14000696d:	int3   
   14000696e:	int3   
   14000696f:	int3   
   140006970:	sub    rsp,0x28
   140006974:	mov    r8,rcx
   140006977:	lea    rcx,[rip+0xffffffffffff9682]        # 0x140000000
   14000697e:	call   0x1400068f0
   140006983:	test   eax,eax
   140006985:	je     0x1400069a6
   140006987:	sub    r8,rcx
   14000698a:	mov    rdx,r8
   14000698d:	call   0x140006920
   140006992:	test   rax,rax
   140006995:	je     0x1400069a6
   140006997:	mov    eax,DWORD PTR [rax+0x24]
   14000699a:	shr    eax,0x1f
   14000699d:	not    eax
   14000699f:	and    eax,0x1
   1400069a2:	jmp    0x1400069a6
   1400069a4:	xor    eax,eax
   1400069a6:	add    rsp,0x28
   1400069aa:	ret    
   1400069ab:	int3   
   1400069ac:	int3   
   1400069ad:	int3   
   1400069ae:	int3   
   1400069af:	int3   
   1400069b0:	rex push rbp
   1400069b2:	sub    rsp,0x20
   1400069b6:	mov    rbp,rdx
   1400069b9:	mov    rax,QWORD PTR [rcx]
   1400069bc:	xor    ecx,ecx
   1400069be:	cmp    DWORD PTR [rax],0xc0000005
   1400069c4:	sete   cl
   1400069c7:	mov    eax,ecx
   1400069c9:	mov    eax,ecx
   1400069cb:	add    rsp,0x20
   1400069cf:	pop    rbp
   1400069d0:	ret    
   1400069d1:	int3   
   1400069d2:	int3   
   1400069d3:	int3   
   1400069d4:	int3   
   1400069d5:	int3   
   1400069d6:	int3   
   1400069d7:	int3   
   1400069d8:	int3   
   1400069d9:	int3   
   1400069da:	int3   
   1400069db:	int3   
   1400069dc:	int3   
   1400069dd:	int3   
   1400069de:	int3   
   1400069df:	int3   
   1400069e0:	mov    QWORD PTR [rip+0xf7f1],rcx        # 0x1400161d8
   1400069e7:	ret    
   1400069e8:	int3   
   1400069e9:	int3   
   1400069ea:	int3   
   1400069eb:	int3   
   1400069ec:	int3   
   1400069ed:	int3   
   1400069ee:	int3   
   1400069ef:	int3   
   1400069f0:	rex push rbx
   1400069f2:	sub    rsp,0x20
   1400069f6:	mov    rbx,rcx
   1400069f9:	mov    rcx,QWORD PTR [rip+0xf7d8]        # 0x1400161d8
   140006a00:	call   0x140005f50
   140006a05:	test   rax,rax
   140006a08:	je     0x140006a1e
   140006a0a:	mov    rcx,rbx
   140006a0d:	call   rax
   140006a0f:	test   eax,eax
   140006a11:	je     0x140006a1e
   140006a13:	mov    eax,0x1
   140006a18:	add    rsp,0x20
   140006a1c:	pop    rbx
   140006a1d:	ret    
   140006a1e:	xor    eax,eax
   140006a20:	add    rsp,0x20
   140006a24:	pop    rbx
   140006a25:	ret    
   140006a26:	int3   
   140006a27:	int3   
   140006a28:	int3   
   140006a29:	int3   
   140006a2a:	int3   
   140006a2b:	int3   
   140006a2c:	int3   
   140006a2d:	int3   
   140006a2e:	int3   
   140006a2f:	int3   
   140006a30:	rex push rbx
   140006a32:	sub    rsp,0x20
   140006a36:	cmp    rcx,0xffffffffffffffe0
   140006a3a:	mov    rbx,rcx
   140006a3d:	ja     0x140006ade
   140006a43:	mov    QWORD PTR [rsp+0x30],rsi
   140006a48:	test   rcx,rcx
   140006a4b:	mov    esi,0x1
   140006a50:	cmovne rsi,rcx
   140006a54:	mov    QWORD PTR [rsp+0x38],rdi
   140006a59:	data16 xchg ax,ax
   140006a5c:	data16 data16 xchg ax,ax
   140006a60:	mov    rcx,QWORD PTR [rip+0xf761]        # 0x1400161c8
   140006a67:	test   rcx,rcx
   140006a6a:	jne    0x140006a8c
   140006a6c:	call   0x140004e10
   140006a71:	mov    ecx,0x1e
   140006a76:	call   0x140004bd0
   140006a7b:	mov    ecx,0xff
   140006a80:	call   0x1400047d0
   140006a85:	mov    rcx,QWORD PTR [rip+0xf73c]        # 0x1400161c8
   140006a8c:	mov    r8,rsi
   140006a8f:	xor    edx,edx
   140006a91:	call   QWORD PTR [rip+0x85b9]        # 0x14000f050
   140006a97:	test   rax,rax
   140006a9a:	mov    rdi,rax
   140006a9d:	jne    0x140006acb
   140006a9f:	cmp    DWORD PTR [rip+0xf73b],eax        # 0x1400161e0
   140006aa5:	je     0x140006ab5
   140006aa7:	mov    rcx,rbx
   140006aaa:	call   0x1400069f0
   140006aaf:	test   eax,eax
   140006ab1:	jne    0x140006a60
   140006ab3:	jmp    0x140006ac0
   140006ab5:	call   0x140004100
   140006aba:	mov    DWORD PTR [rax],0xc
   140006ac0:	call   0x140004100
   140006ac5:	mov    DWORD PTR [rax],0xc
   140006acb:	mov    rsi,QWORD PTR [rsp+0x30]
   140006ad0:	mov    rax,rdi
   140006ad3:	mov    rdi,QWORD PTR [rsp+0x38]
   140006ad8:	add    rsp,0x20
   140006adc:	pop    rbx
   140006add:	ret    
   140006ade:	call   0x1400069f0
   140006ae3:	call   0x140004100
   140006ae8:	mov    DWORD PTR [rax],0xc
   140006aee:	xor    eax,eax
   140006af0:	add    rsp,0x20
   140006af4:	pop    rbx
   140006af5:	ret    
   140006af6:	int3   
   140006af7:	int3   
   140006af8:	int3   
   140006af9:	int3   
   140006afa:	int3   
   140006afb:	int3   
   140006afc:	int3   
   140006afd:	int3   
   140006afe:	int3   
   140006aff:	int3   
   140006b00:	mov    QWORD PTR [rsp+0x8],rbx
   140006b05:	mov    QWORD PTR [rsp+0x10],rsi
   140006b0a:	mov    QWORD PTR [rsp+0x18],rdi
   140006b0f:	push   r12
   140006b11:	sub    rsp,0x30
   140006b15:	xor    r12d,r12d
   140006b18:	mov    edi,r12d
   140006b1b:	lea    ecx,[r12+0x1]
   140006b20:	call   0x140007100
   140006b25:	nop
   140006b26:	mov    ebx,0x3
   140006b2b:	mov    DWORD PTR [rsp+0x20],ebx
   140006b2f:	nop
   140006b30:	cmp    ebx,DWORD PTR [rip+0x10d4a]        # 0x140017880
   140006b36:	jge    0x140006ba2
   140006b38:	movsxd rsi,ebx
   140006b3b:	mov    rax,QWORD PTR [rip+0xfd2e]        # 0x140016870
   140006b42:	cmp    QWORD PTR [rax+rsi*8],0x0
   140006b47:	je     0x140006b99
   140006b49:	mov    rcx,QWORD PTR [rax+rsi*8]
   140006b4d:	test   BYTE PTR [rcx+0x18],0x83
   140006b51:	je     0x140006b64
   140006b53:	call   0x140009430
   140006b58:	cmp    eax,0xffffffff
   140006b5b:	je     0x140006b64
   140006b5d:	add    edi,0x1
   140006b60:	mov    DWORD PTR [rsp+0x24],edi
   140006b64:	cmp    ebx,0x14
   140006b67:	jl     0x140006b99
   140006b69:	mov    rax,QWORD PTR [rip+0xfd00]        # 0x140016870
   140006b70:	mov    rcx,QWORD PTR [rax+rsi*8]
   140006b74:	add    rcx,0x30
   140006b78:	call   QWORD PTR [rip+0x851a]        # 0x14000f098
   140006b7e:	mov    rcx,QWORD PTR [rip+0xfceb]        # 0x140016870
   140006b85:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140006b89:	call   0x140002700
   140006b8e:	mov    r11,QWORD PTR [rip+0xfcdb]        # 0x140016870
   140006b95:	mov    QWORD PTR [r11+rsi*8],r12
   140006b99:	add    ebx,0x1
   140006b9c:	mov    DWORD PTR [rsp+0x20],ebx
   140006ba0:	jmp    0x140006b30
   140006ba2:	mov    ecx,0x1
   140006ba7:	call   0x140006fd0
   140006bac:	mov    eax,edi
   140006bae:	mov    rbx,QWORD PTR [rsp+0x40]
   140006bb3:	mov    rsi,QWORD PTR [rsp+0x48]
   140006bb8:	mov    rdi,QWORD PTR [rsp+0x50]
   140006bbd:	add    rsp,0x30
   140006bc1:	pop    r12
   140006bc3:	ret    
   140006bc4:	int3   
   140006bc5:	int3   
   140006bc6:	int3   
   140006bc7:	int3   
   140006bc8:	int3   
   140006bc9:	int3   
   140006bca:	int3   
   140006bcb:	int3   
   140006bcc:	int3   
   140006bcd:	int3   
   140006bce:	int3   
   140006bcf:	int3   
   140006bd0:	rex push rbp
   140006bd2:	sub    rsp,0x20
   140006bd6:	mov    rbp,rdx
   140006bd9:	mov    ecx,0x1
   140006bde:	call   0x140006fd0
   140006be3:	add    rsp,0x20
   140006be7:	pop    rbp
   140006be8:	ret    
   140006be9:	int3   
   140006bea:	int3   
   140006beb:	int3   
   140006bec:	int3   
   140006bed:	int3   
   140006bee:	int3   
   140006bef:	int3   
   140006bf0:	mov    QWORD PTR [rsp+0x10],rbx
   140006bf5:	push   rsi
   140006bf6:	sub    rsp,0x20
   140006bfa:	mov    rbx,rcx
   140006bfd:	mov    ecx,DWORD PTR [rcx+0x18]
   140006c00:	xor    esi,esi
   140006c02:	mov    eax,ecx
   140006c04:	and    al,0x3
   140006c06:	cmp    al,0x2
   140006c08:	jne    0x140006c55
   140006c0a:	test   ecx,0x108
   140006c10:	je     0x140006c55
   140006c12:	mov    QWORD PTR [rsp+0x30],rdi
   140006c17:	mov    edi,DWORD PTR [rbx]
   140006c19:	sub    edi,DWORD PTR [rbx+0x10]
   140006c1c:	test   edi,edi
   140006c1e:	jle    0x140006c50
   140006c20:	mov    rcx,rbx
   140006c23:	call   0x1400071d0
   140006c28:	mov    rdx,QWORD PTR [rbx+0x10]
   140006c2c:	mov    r8d,edi
   140006c2f:	mov    ecx,eax
   140006c31:	call   0x140009c50
   140006c36:	cmp    eax,edi
   140006c38:	jne    0x140006c49
   140006c3a:	mov    eax,DWORD PTR [rbx+0x18]
   140006c3d:	test   al,al
   140006c3f:	jns    0x140006c50
   140006c41:	and    eax,0xfffffffd
   140006c44:	mov    DWORD PTR [rbx+0x18],eax
   140006c47:	jmp    0x140006c50
   140006c49:	or     DWORD PTR [rbx+0x18],0x20
   140006c4d:	or     esi,0xffffffff
   140006c50:	mov    rdi,QWORD PTR [rsp+0x30]
   140006c55:	mov    rcx,QWORD PTR [rbx+0x10]
   140006c59:	mov    DWORD PTR [rbx+0x8],0x0
   140006c60:	mov    eax,esi
   140006c62:	mov    QWORD PTR [rbx],rcx
   140006c65:	mov    rbx,QWORD PTR [rsp+0x38]
   140006c6a:	add    rsp,0x20
   140006c6e:	pop    rsi
   140006c6f:	ret    
   140006c70:	rex push rbx
   140006c72:	sub    rsp,0x20
   140006c76:	test   rcx,rcx
   140006c79:	mov    rbx,rcx
   140006c7c:	jne    0x140006c88
   140006c7e:	add    rsp,0x20
   140006c82:	pop    rbx
   140006c83:	jmp    0x140006d30
   140006c88:	mov    ecx,DWORD PTR [rcx+0x18]
   140006c8b:	mov    QWORD PTR [rsp+0x30],rsi
   140006c90:	xor    esi,esi
   140006c92:	mov    eax,ecx
   140006c94:	and    al,0x3
   140006c96:	cmp    al,0x2
   140006c98:	jne    0x140006ce5
   140006c9a:	test   ecx,0x108
   140006ca0:	je     0x140006ce5
   140006ca2:	mov    QWORD PTR [rsp+0x38],rdi
   140006ca7:	mov    edi,DWORD PTR [rbx]
   140006ca9:	sub    edi,DWORD PTR [rbx+0x10]
   140006cac:	test   edi,edi
   140006cae:	jle    0x140006ce0
   140006cb0:	mov    rcx,rbx
   140006cb3:	call   0x1400071d0
   140006cb8:	mov    rdx,QWORD PTR [rbx+0x10]
   140006cbc:	mov    r8d,edi
   140006cbf:	mov    ecx,eax
   140006cc1:	call   0x140009c50
   140006cc6:	cmp    eax,edi
   140006cc8:	jne    0x140006cd9
   140006cca:	mov    eax,DWORD PTR [rbx+0x18]
   140006ccd:	test   al,al
   140006ccf:	jns    0x140006ce0
   140006cd1:	and    eax,0xfffffffd
   140006cd4:	mov    DWORD PTR [rbx+0x18],eax
   140006cd7:	jmp    0x140006ce0
   140006cd9:	or     DWORD PTR [rbx+0x18],0x20
   140006cdd:	or     esi,0xffffffff
   140006ce0:	mov    rdi,QWORD PTR [rsp+0x38]
   140006ce5:	mov    rcx,QWORD PTR [rbx+0x10]
   140006ce9:	test   esi,esi
   140006ceb:	mov    rsi,QWORD PTR [rsp+0x30]
   140006cf0:	mov    QWORD PTR [rbx],rcx
   140006cf3:	mov    DWORD PTR [rbx+0x8],0x0
   140006cfa:	je     0x140006d05
   140006cfc:	or     eax,0xffffffff
   140006cff:	add    rsp,0x20
   140006d03:	pop    rbx
   140006d04:	ret    
   140006d05:	bt     DWORD PTR [rbx+0x18],0xe
   140006d0a:	jae    0x140006d25
   140006d0c:	mov    rcx,rbx
   140006d0f:	call   0x1400071d0
   140006d14:	mov    ecx,eax
   140006d16:	call   0x140009da0
   140006d1b:	neg    eax
   140006d1d:	sbb    eax,eax
   140006d1f:	add    rsp,0x20
   140006d23:	pop    rbx
   140006d24:	ret    
   140006d25:	xor    eax,eax
   140006d27:	add    rsp,0x20
   140006d2b:	pop    rbx
   140006d2c:	ret    
   140006d2d:	int3   
   140006d2e:	int3   
   140006d2f:	int3   
   140006d30:	mov    QWORD PTR [rsp+0x8],rbx
   140006d35:	mov    QWORD PTR [rsp+0x10],rsi
   140006d3a:	mov    QWORD PTR [rsp+0x18],rdi
   140006d3f:	push   r12
   140006d41:	push   r13
   140006d43:	push   r14
   140006d45:	sub    rsp,0x30
   140006d49:	mov    r12d,ecx
   140006d4c:	xor    edi,edi
   140006d4e:	mov    r13d,edi
   140006d51:	lea    ecx,[rdi+0x1]
   140006d54:	call   0x140007100
   140006d59:	nop
   140006d5a:	mov    ebx,edi
   140006d5c:	mov    DWORD PTR [rsp+0x20],ebx
   140006d60:	or     r14d,0xffffffff
   140006d64:	cmp    ebx,DWORD PTR [rip+0x10b16]        # 0x140017880
   140006d6a:	jge    0x140006df6
   140006d70:	movsxd rsi,ebx
   140006d73:	mov    rax,QWORD PTR [rip+0xfaf6]        # 0x140016870
   140006d7a:	cmp    QWORD PTR [rax+rsi*8],0x0
   140006d7f:	je     0x140006dea
   140006d81:	mov    rdx,QWORD PTR [rax+rsi*8]
   140006d85:	test   BYTE PTR [rdx+0x18],0x83
   140006d89:	je     0x140006dea
   140006d8b:	mov    ecx,ebx
   140006d8d:	call   0x140002d20
   140006d92:	nop
   140006d93:	mov    rax,QWORD PTR [rip+0xfad6]        # 0x140016870
   140006d9a:	mov    rcx,QWORD PTR [rax+rsi*8]
   140006d9e:	mov    eax,DWORD PTR [rcx+0x18]
   140006da1:	test   al,0x83
   140006da3:	je     0x140006dd8
   140006da5:	cmp    r12d,0x1
   140006da9:	jne    0x140006dbe
   140006dab:	call   0x140006c70
   140006db0:	cmp    eax,0xffffffff
   140006db3:	je     0x140006dd8
   140006db5:	add    edi,r12d
   140006db8:	mov    DWORD PTR [rsp+0x24],edi
   140006dbc:	jmp    0x140006dd8
   140006dbe:	test   r12d,r12d
   140006dc1:	jne    0x140006dd8
   140006dc3:	test   al,0x2
   140006dc5:	je     0x140006dd8
   140006dc7:	call   0x140006c70
   140006dcc:	cmp    eax,0xffffffff
   140006dcf:	cmove  r13d,r14d
   140006dd3:	mov    DWORD PTR [rsp+0x28],r13d
   140006dd8:	mov    rdx,QWORD PTR [rip+0xfa91]        # 0x140016870
   140006ddf:	mov    rdx,QWORD PTR [rdx+rsi*8]
   140006de3:	mov    ecx,ebx
   140006de5:	call   0x140002db0
   140006dea:	add    ebx,0x1
   140006ded:	mov    DWORD PTR [rsp+0x20],ebx
   140006df1:	jmp    0x140006d64
   140006df6:	mov    ecx,0x1
   140006dfb:	call   0x140006fd0
   140006e00:	cmp    r12d,0x1
   140006e04:	cmove  r13d,edi
   140006e08:	mov    eax,r13d
   140006e0b:	mov    rbx,QWORD PTR [rsp+0x50]
   140006e10:	mov    rsi,QWORD PTR [rsp+0x58]
   140006e15:	mov    rdi,QWORD PTR [rsp+0x60]
   140006e1a:	add    rsp,0x30
   140006e1e:	pop    r14
   140006e20:	pop    r13
   140006e22:	pop    r12
   140006e24:	ret    
   140006e25:	int3   
   140006e26:	int3   
   140006e27:	int3   
   140006e28:	int3   
   140006e29:	int3   
   140006e2a:	int3   
   140006e2b:	int3   
   140006e2c:	int3   
   140006e2d:	int3   
   140006e2e:	int3   
   140006e2f:	int3   
   140006e30:	rex push rbp
   140006e32:	sub    rsp,0x20
   140006e36:	mov    rbp,rdx
   140006e39:	movsxd rcx,DWORD PTR [rbp+0x20]
   140006e3d:	mov    rax,rcx
   140006e40:	mov    rdx,QWORD PTR [rip+0xfa29]        # 0x140016870
   140006e47:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140006e4b:	call   0x140002db0
   140006e50:	add    rsp,0x20
   140006e54:	pop    rbp
   140006e55:	ret    
   140006e56:	int3   
   140006e57:	int3   
   140006e58:	int3   
   140006e59:	int3   
   140006e5a:	int3   
   140006e5b:	int3   
   140006e5c:	int3   
   140006e5d:	int3   
   140006e5e:	int3   
   140006e5f:	int3   
   140006e60:	rex push rbp
   140006e62:	sub    rsp,0x20
   140006e66:	mov    rbp,rdx
   140006e69:	mov    ecx,0x1
   140006e6e:	call   0x140006fd0
   140006e73:	add    rsp,0x20
   140006e77:	pop    rbp
   140006e78:	ret    
   140006e79:	int3   
   140006e7a:	int3   
   140006e7b:	int3   
   140006e7c:	int3   
   140006e7d:	int3   
   140006e7e:	int3   
   140006e7f:	int3   
   140006e80:	mov    ecx,0x1
   140006e85:	jmp    0x140006d30
   140006e8a:	int3   
   140006e8b:	int3   
   140006e8c:	int3   
   140006e8d:	int3   
   140006e8e:	int3   
   140006e8f:	int3   
   140006e90:	mov    QWORD PTR [rsp+0x8],rbx
   140006e95:	mov    QWORD PTR [rsp+0x10],rbp
   140006e9a:	mov    QWORD PTR [rsp+0x18],rsi
   140006e9f:	push   rdi
   140006ea0:	push   r12
   140006ea2:	push   r13
   140006ea4:	sub    rsp,0x20
   140006ea8:	lea    r12,[rip+0xd991]        # 0x140014840
   140006eaf:	xor    esi,esi
   140006eb1:	lea    r13,[rip+0xf338]        # 0x1400161f0
   140006eb8:	xor    edi,edi
   140006eba:	lea    rbp,[rip+0xdbbf]        # 0x140014a80
   140006ec1:	mov    rbx,r12
   140006ec4:	cmp    DWORD PTR [rbx+0x8],0x1
   140006ec8:	jne    0x140006eea
   140006eca:	movsxd rax,esi
   140006ecd:	mov    edx,0xfa0
   140006ed2:	add    esi,0x1
   140006ed5:	lea    rcx,[rax+rax*4]
   140006ed9:	lea    rcx,[r13+rcx*8+0x0]
   140006ede:	mov    QWORD PTR [rbx],rcx
   140006ee1:	call   0x140008c50
   140006ee6:	test   eax,eax
   140006ee8:	je     0x140006f14
   140006eea:	add    rbx,0x10
   140006eee:	add    edi,0x1
   140006ef1:	cmp    rbx,rbp
   140006ef4:	jl     0x140006ec4
   140006ef6:	mov    eax,0x1
   140006efb:	mov    rbx,QWORD PTR [rsp+0x40]
   140006f00:	mov    rbp,QWORD PTR [rsp+0x48]
   140006f05:	mov    rsi,QWORD PTR [rsp+0x50]
   140006f0a:	add    rsp,0x20
   140006f0e:	pop    r13
   140006f10:	pop    r12
   140006f12:	pop    rdi
   140006f13:	ret    
   140006f14:	movsxd rax,edi
   140006f17:	add    rax,rax
   140006f1a:	mov    QWORD PTR [r12+rax*8],0x0
   140006f22:	xor    eax,eax
   140006f24:	jmp    0x140006efb
   140006f26:	int3   
   140006f27:	int3   
   140006f28:	int3   
   140006f29:	int3   
   140006f2a:	int3   
   140006f2b:	int3   
   140006f2c:	int3   
   140006f2d:	int3   
   140006f2e:	int3   
   140006f2f:	int3   
   140006f30:	mov    QWORD PTR [rsp+0x8],rbx
   140006f35:	mov    QWORD PTR [rsp+0x10],rbp
   140006f3a:	mov    QWORD PTR [rsp+0x18],rsi
   140006f3f:	mov    QWORD PTR [rsp+0x20],rdi
   140006f44:	push   r12
   140006f46:	sub    rsp,0x20
   140006f4a:	lea    rbx,[rip+0xd8ef]        # 0x140014840
   140006f51:	xor    r12d,r12d
   140006f54:	lea    rbp,[rip+0xdb25]        # 0x140014a80
   140006f5b:	mov    rdi,rbx
   140006f5e:	xchg   ax,ax
   140006f60:	mov    rsi,QWORD PTR [rdi]
   140006f63:	test   rsi,rsi
   140006f66:	je     0x140006f82
   140006f68:	cmp    DWORD PTR [rdi+0x8],0x1
   140006f6c:	je     0x140006f82
   140006f6e:	mov    rcx,rsi
   140006f71:	call   QWORD PTR [rip+0x8121]        # 0x14000f098
   140006f77:	mov    rcx,rsi
   140006f7a:	call   0x140002700
   140006f7f:	mov    QWORD PTR [rdi],r12
   140006f82:	add    rdi,0x10
   140006f86:	cmp    rdi,rbp
   140006f89:	jl     0x140006f60
   140006f8b:	xchg   ax,ax
   140006f8d:	data16 xchg ax,ax
   140006f90:	mov    rcx,QWORD PTR [rbx]
   140006f93:	test   rcx,rcx
   140006f96:	je     0x140006fa4
   140006f98:	cmp    DWORD PTR [rbx+0x8],0x1
   140006f9c:	jne    0x140006fa4
   140006f9e:	call   QWORD PTR [rip+0x80f4]        # 0x14000f098
   140006fa4:	add    rbx,0x10
   140006fa8:	cmp    rbx,rbp
   140006fab:	jl     0x140006f90
   140006fad:	mov    rbx,QWORD PTR [rsp+0x30]
   140006fb2:	mov    rbp,QWORD PTR [rsp+0x38]
   140006fb7:	mov    rsi,QWORD PTR [rsp+0x40]
   140006fbc:	mov    rdi,QWORD PTR [rsp+0x48]
   140006fc1:	add    rsp,0x20
   140006fc5:	pop    r12
   140006fc7:	ret    
   140006fc8:	int3   
   140006fc9:	int3   
   140006fca:	int3   
   140006fcb:	int3   
   140006fcc:	int3   
   140006fcd:	int3   
   140006fce:	int3   
   140006fcf:	int3   
   140006fd0:	movsxd rcx,ecx
   140006fd3:	lea    rax,[rip+0xd866]        # 0x140014840
   140006fda:	add    rcx,rcx
   140006fdd:	mov    rcx,QWORD PTR [rax+rcx*8]
   140006fe1:	rex.W jmp QWORD PTR [rip+0x80a0]        # 0x14000f088
   140006fe8:	int3   
   140006fe9:	int3   
   140006fea:	int3   
   140006feb:	int3   
   140006fec:	int3   
   140006fed:	int3   
   140006fee:	int3   
   140006fef:	int3   
   140006ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140006ff5:	mov    QWORD PTR [rsp+0x10],rsi
   140006ffa:	mov    QWORD PTR [rsp+0x18],rdi
   140006fff:	push   r12
   140007001:	sub    rsp,0x20
   140007005:	movsxd rbx,ecx
   140007008:	mov    esi,0x1
   14000700d:	cmp    QWORD PTR [rip+0xf1b3],0x0        # 0x1400161c8
   140007015:	jne    0x14000702e
   140007017:	call   0x140004e10
   14000701c:	lea    ecx,[rsi+0x1d]
   14000701f:	call   0x140004bd0
   140007024:	mov    ecx,0xff
   140007029:	call   0x1400047d0
   14000702e:	mov    rdi,rbx
   140007031:	add    rdi,rdi
   140007034:	lea    r12,[rip+0xd805]        # 0x140014840
   14000703b:	cmp    QWORD PTR [r12+rdi*8],0x0
   140007040:	je     0x140007046
   140007042:	mov    eax,esi
   140007044:	jmp    0x1400070bf
   140007046:	mov    ecx,0x28
   14000704b:	call   0x140006690
   140007050:	mov    rbx,rax
   140007053:	test   rax,rax
   140007056:	jne    0x140007067
   140007058:	call   0x140004100
   14000705d:	mov    DWORD PTR [rax],0xc
   140007063:	xor    eax,eax
   140007065:	jmp    0x1400070bf
   140007067:	mov    ecx,0xa
   14000706c:	call   0x140007100
   140007071:	nop
   140007072:	cmp    QWORD PTR [r12+rdi*8],0x0
   140007077:	jne    0x1400070a7
   140007079:	mov    edx,0xfa0
   14000707e:	mov    rcx,rbx
   140007081:	call   0x140008c50
   140007086:	test   eax,eax
   140007088:	jne    0x1400070a1
   14000708a:	mov    rcx,rbx
   14000708d:	call   0x140002700
   140007092:	call   0x140004100
   140007097:	mov    DWORD PTR [rax],0xc
   14000709d:	xor    esi,esi
   14000709f:	jmp    0x1400070b0
   1400070a1:	mov    QWORD PTR [r12+rdi*8],rbx
   1400070a5:	jmp    0x1400070b0
   1400070a7:	mov    rcx,rbx
   1400070aa:	call   0x140002700
   1400070af:	nop
   1400070b0:	mov    rcx,QWORD PTR [rip+0xd829]        # 0x1400148e0
   1400070b7:	call   QWORD PTR [rip+0x7fcb]        # 0x14000f088
   1400070bd:	mov    eax,esi
   1400070bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400070c4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400070c9:	mov    rdi,QWORD PTR [rsp+0x40]
   1400070ce:	add    rsp,0x20
   1400070d2:	pop    r12
   1400070d4:	ret    
   1400070d5:	int3   
   1400070d6:	int3   
   1400070d7:	int3   
   1400070d8:	int3   
   1400070d9:	int3   
   1400070da:	int3   
   1400070db:	int3   
   1400070dc:	int3   
   1400070dd:	int3   
   1400070de:	int3   
   1400070df:	int3   
   1400070e0:	rex push rbp
   1400070e2:	sub    rsp,0x20
   1400070e6:	mov    rbp,rdx
   1400070e9:	mov    rcx,QWORD PTR [rip+0xd7f0]        # 0x1400148e0
   1400070f0:	call   QWORD PTR [rip+0x7f92]        # 0x14000f088
   1400070f6:	add    rsp,0x20
   1400070fa:	pop    rbp
   1400070fb:	ret    
   1400070fc:	int3   
   1400070fd:	int3   
   1400070fe:	int3   
   1400070ff:	int3   
   140007100:	mov    QWORD PTR [rsp+0x8],rbx
   140007105:	push   rdi
   140007106:	sub    rsp,0x20
   14000710a:	movsxd rbx,ecx
   14000710d:	lea    rdi,[rip+0xd72c]        # 0x140014840
   140007114:	add    rbx,rbx
   140007117:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000711c:	jne    0x14000712f
   14000711e:	call   0x140006ff0
   140007123:	test   eax,eax
   140007125:	jne    0x14000712f
   140007127:	lea    ecx,[rax+0x11]
   14000712a:	call   0x1400047a0
   14000712f:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140007133:	mov    rbx,QWORD PTR [rsp+0x30]
   140007138:	add    rsp,0x20
   14000713c:	pop    rdi
   14000713d:	rex.W jmp QWORD PTR [rip+0x7f3c]        # 0x14000f080
   140007144:	int3   
   140007145:	int3   
   140007146:	int3   
   140007147:	int3   
   140007148:	int3   
   140007149:	int3   
   14000714a:	int3   
   14000714b:	int3   
   14000714c:	int3   
   14000714d:	int3   
   14000714e:	int3   
   14000714f:	int3   
   140007150:	sub    rsp,0x38
   140007154:	cmp    ecx,0xfffffffe
   140007157:	jne    0x14000716b
   140007159:	call   0x140004100
   14000715e:	mov    DWORD PTR [rax],0x9
   140007164:	xor    eax,eax
   140007166:	add    rsp,0x38
   14000716a:	ret    
   14000716b:	test   ecx,ecx
   14000716d:	js     0x1400071a2
   14000716f:	cmp    ecx,DWORD PTR [rip+0xf4c3]        # 0x140016638
   140007175:	jae    0x1400071a2
   140007177:	movsxd rax,ecx
   14000717a:	lea    r8,[rip+0xf4bf]        # 0x140016640
   140007181:	mov    rdx,rax
   140007184:	and    eax,0x1f
   140007187:	lea    rcx,[rax+rax*4]
   14000718b:	sar    rdx,0x5
   14000718f:	mov    rax,QWORD PTR [r8+rdx*8]
   140007193:	add    rcx,rcx
   140007196:	mov    al,BYTE PTR [rax+rcx*8+0x8]
   14000719a:	and    eax,0x40
   14000719d:	add    rsp,0x38
   1400071a1:	ret    
   1400071a2:	call   0x140004100
   1400071a7:	xor    r9d,r9d
   1400071aa:	xor    r8d,r8d
   1400071ad:	xor    edx,edx
   1400071af:	xor    ecx,ecx
   1400071b1:	mov    QWORD PTR [rsp+0x20],0x0
   1400071ba:	mov    DWORD PTR [rax],0x9
   1400071c0:	call   0x140003fa0
   1400071c5:	xor    eax,eax
   1400071c7:	add    rsp,0x38
   1400071cb:	ret    
   1400071cc:	int3   
   1400071cd:	int3   
   1400071ce:	int3   
   1400071cf:	int3   
   1400071d0:	sub    rsp,0x38
   1400071d4:	test   rcx,rcx
   1400071d7:	jne    0x140007204
   1400071d9:	call   0x140004100
   1400071de:	xor    r9d,r9d
   1400071e1:	xor    r8d,r8d
   1400071e4:	xor    edx,edx
   1400071e6:	xor    ecx,ecx
   1400071e8:	mov    QWORD PTR [rsp+0x20],0x0
   1400071f1:	mov    DWORD PTR [rax],0x16
   1400071f7:	call   0x140003fa0
   1400071fc:	or     eax,0xffffffff
   1400071ff:	add    rsp,0x38
   140007203:	ret    
   140007204:	mov    eax,DWORD PTR [rcx+0x1c]
   140007207:	add    rsp,0x38
   14000720b:	ret    
   14000720c:	int3   
   14000720d:	int3   
   14000720e:	int3   
   14000720f:	int3   
   140007210:	mov    QWORD PTR [rsp+0x8],rbx
   140007215:	mov    QWORD PTR [rsp+0x10],rsi
   14000721a:	push   rdi
   14000721b:	sub    rsp,0x20
   14000721f:	lea    rbx,[rcx+0x1c]
   140007223:	mov    rsi,rcx
   140007226:	mov    edi,0x101
   14000722b:	mov    rcx,rbx
   14000722e:	mov    r8,rdi
   140007231:	xor    edx,edx
   140007233:	call   0x140002760
   140007238:	xor    r11d,r11d
   14000723b:	lea    r8,[rip+0xd83e]        # 0x140014a80
   140007242:	mov    DWORD PTR [rsi+0x4],r11d
   140007246:	mov    DWORD PTR [rsi+0x8],r11d
   14000724a:	mov    DWORD PTR [rsi+0xc],r11d
   14000724e:	mov    QWORD PTR [rsi+0x10],r11
   140007252:	sub    r8,rsi
   140007255:	mov    DWORD PTR [rsi+0x18],r11d
   140007259:	data16 xchg ax,ax
   14000725c:	data16 data16 xchg ax,ax
   140007260:	movzx  eax,BYTE PTR [r8+rbx*1]
   140007265:	add    rbx,0x1
   140007269:	sub    rdi,0x1
   14000726d:	mov    BYTE PTR [rbx-0x1],al
   140007270:	jne    0x140007260
   140007272:	lea    r9,[rip+0xd808]        # 0x140014a81
   140007279:	lea    rcx,[rsi+0x11d]
   140007280:	mov    edx,0x80
   140007285:	sub    r9,rsi
   140007288:	data16 data16 xchg ax,ax
   14000728c:	data16 data16 xchg ax,ax
   140007290:	movzx  eax,BYTE PTR [rcx+r8*1]
   140007295:	add    rcx,0x2
   140007299:	sub    rdx,0x1
   14000729d:	mov    BYTE PTR [rcx-0x2],al
   1400072a0:	movzx  eax,BYTE PTR [r9+rcx*1-0x2]
   1400072a6:	mov    BYTE PTR [rcx-0x1],al
   1400072a9:	jne    0x140007290
   1400072ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072b0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400072b5:	add    rsp,0x20
   1400072b9:	pop    rdi
   1400072ba:	ret    
   1400072bb:	int3   
   1400072bc:	int3   
   1400072bd:	int3   
   1400072be:	int3   
   1400072bf:	int3   
   1400072c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400072c5:	mov    QWORD PTR [rsp+0x20],rbp
   1400072ca:	push   rdi
   1400072cb:	sub    rsp,0x580
   1400072d2:	mov    rax,QWORD PTR [rip+0xcd87]        # 0x140014060
   1400072d9:	xor    rax,rsp
   1400072dc:	mov    QWORD PTR [rsp+0x570],rax
   1400072e4:	mov    rbp,rcx
   1400072e7:	mov    ecx,DWORD PTR [rcx+0x4]
   1400072ea:	lea    rdx,[rsp+0x50]
   1400072ef:	call   QWORD PTR [rip+0x7efb]        # 0x14000f1f0
   1400072f5:	test   eax,eax
   1400072f7:	je     0x14000745d
   1400072fd:	xor    ebx,ebx
   1400072ff:	mov    QWORD PTR [rsp+0x598],rsi
   140007307:	lea    rdx,[rsp+0x70]
   14000730c:	mov    eax,ebx
   14000730e:	mov    edi,0x100
   140007313:	mov    BYTE PTR [rdx],al
   140007315:	add    eax,0x1
   140007318:	add    rdx,0x1
   14000731c:	cmp    eax,edi
   14000731e:	jb     0x140007313
   140007320:	movzx  eax,BYTE PTR [rsp+0x56]
   140007325:	mov    BYTE PTR [rsp+0x70],0x20
   14000732a:	lea    rsi,[rsp+0x56]
   14000732f:	test   al,al
   140007331:	je     0x140007361
   140007333:	movzx  edx,BYTE PTR [rsi+0x1]
   140007337:	movzx  r8d,al
   14000733b:	cmp    r8d,edx
   14000733e:	ja     0x140007356
   140007340:	sub    edx,r8d
   140007343:	mov    rax,r8
   140007346:	lea    rcx,[rsp+r8*1+0x70]
   14000734b:	lea    r8d,[rdx+0x1]
   14000734f:	mov    dl,0x20
   140007351:	call   0x140002760
   140007356:	mov    al,BYTE PTR [rsi+0x2]
   140007359:	add    rsi,0x2
   14000735d:	test   al,al
   14000735f:	jne    0x140007333
   140007361:	mov    eax,DWORD PTR [rbp+0xc]
   140007364:	mov    DWORD PTR [rsp+0x38],ebx
   140007368:	lea    r8,[rsp+0x70]
   14000736d:	mov    DWORD PTR [rsp+0x30],eax
   140007371:	mov    eax,DWORD PTR [rbp+0x4]
   140007374:	mov    r9d,edi
   140007377:	mov    DWORD PTR [rsp+0x28],eax
   14000737b:	lea    rax,[rsp+0x370]
   140007383:	mov    edx,0x1
   140007388:	xor    ecx,ecx
   14000738a:	mov    QWORD PTR [rsp+0x20],rax
   14000738f:	call   0x14000a7e0
   140007394:	mov    eax,DWORD PTR [rbp+0x4]
   140007397:	mov    edx,DWORD PTR [rbp+0xc]
   14000739a:	mov    DWORD PTR [rsp+0x40],ebx
   14000739e:	mov    DWORD PTR [rsp+0x38],eax
   1400073a2:	lea    rax,[rsp+0x170]
   1400073aa:	mov    DWORD PTR [rsp+0x30],edi
   1400073ae:	mov    QWORD PTR [rsp+0x28],rax
   1400073b3:	lea    r9,[rsp+0x70]
   1400073b8:	mov    r8d,edi
   1400073bb:	xor    ecx,ecx
   1400073bd:	mov    DWORD PTR [rsp+0x20],edi
   1400073c1:	call   0x14000a420
   1400073c6:	mov    eax,DWORD PTR [rbp+0x4]
   1400073c9:	mov    edx,DWORD PTR [rbp+0xc]
   1400073cc:	mov    DWORD PTR [rsp+0x40],ebx
   1400073d0:	mov    DWORD PTR [rsp+0x38],eax
   1400073d4:	lea    rax,[rsp+0x270]
   1400073dc:	mov    DWORD PTR [rsp+0x30],edi
   1400073e0:	mov    QWORD PTR [rsp+0x28],rax
   1400073e5:	lea    r9,[rsp+0x70]
   1400073ea:	mov    r8d,0x200
   1400073f0:	xor    ecx,ecx
   1400073f2:	mov    DWORD PTR [rsp+0x20],edi
   1400073f6:	call   0x14000a420
   1400073fb:	mov    rsi,QWORD PTR [rsp+0x598]
   140007403:	lea    r11,[rsp+0x370]
   14000740b:	lea    rcx,[rbp+0x1d]
   14000740f:	nop
   140007410:	movzx  eax,WORD PTR [r11]
   140007414:	test   al,0x1
   140007416:	je     0x14000742b
   140007418:	movzx  eax,BYTE PTR [rsp+rbx*1+0x170]
   140007420:	or     BYTE PTR [rcx],0x10
   140007423:	mov    BYTE PTR [rcx+0x100],al
   140007429:	jmp    0x140007449
   14000742b:	test   al,0x2
   14000742d:	je     0x140007442
   14000742f:	movzx  eax,BYTE PTR [rsp+rbx*1+0x270]
   140007437:	or     BYTE PTR [rcx],0x20
   14000743a:	mov    BYTE PTR [rcx+0x100],al
   140007440:	jmp    0x140007449
   140007442:	mov    BYTE PTR [rcx+0x100],0x0
   140007449:	add    rcx,0x1
   14000744d:	add    rbx,0x1
   140007451:	add    r11,0x2
   140007455:	sub    rdi,0x1
   140007459:	jne    0x140007410
   14000745b:	jmp    0x1400074ae
   14000745d:	xor    ebx,ebx
   14000745f:	lea    rcx,[rbp+0x1d]
   140007463:	mov    edi,0x100
   140007468:	data16 data16 xchg ax,ax
   14000746c:	data16 data16 xchg ax,ax
   140007470:	lea    edx,[rbx-0x61]
   140007473:	lea    eax,[rdx+0x20]
   140007476:	cmp    eax,0x19
   140007479:	ja     0x140007489
   14000747b:	or     BYTE PTR [rcx],0x10
   14000747e:	lea    eax,[rbx+0x20]
   140007481:	mov    BYTE PTR [rcx+0x100],al
   140007487:	jmp    0x1400074a3
   140007489:	cmp    edx,0x19
   14000748c:	ja     0x14000749c
   14000748e:	or     BYTE PTR [rcx],0x20
   140007491:	lea    eax,[rbx-0x20]
   140007494:	mov    BYTE PTR [rcx+0x100],al
   14000749a:	jmp    0x1400074a3
   14000749c:	mov    BYTE PTR [rcx+0x100],0x0
   1400074a3:	add    ebx,0x1
   1400074a6:	add    rcx,0x1
   1400074aa:	cmp    ebx,edi
   1400074ac:	jb     0x140007470
   1400074ae:	mov    rcx,QWORD PTR [rsp+0x570]
   1400074b6:	xor    rcx,rsp
   1400074b9:	call   0x1400020b0
   1400074be:	lea    r11,[rsp+0x580]
   1400074c6:	mov    rbx,QWORD PTR [r11+0x20]
   1400074ca:	mov    rbp,QWORD PTR [r11+0x28]
   1400074ce:	mov    rsp,r11
   1400074d1:	pop    rdi
   1400074d2:	ret    
   1400074d3:	int3   
   1400074d4:	int3   
   1400074d5:	int3   
   1400074d6:	int3   
   1400074d7:	int3   
   1400074d8:	int3   
   1400074d9:	int3   
   1400074da:	int3   
   1400074db:	int3   
   1400074dc:	int3   
   1400074dd:	int3   
   1400074de:	int3   
   1400074df:	int3   
   1400074e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400074e5:	push   rdi
   1400074e6:	sub    rsp,0x20
   1400074ea:	call   0x140006240
   1400074ef:	mov    rdi,rax
   1400074f2:	mov    ecx,DWORD PTR [rax+0xc8]
   1400074f8:	test   DWORD PTR [rip+0xdaba],ecx        # 0x140014fb8
   1400074fe:	je     0x140007513
   140007500:	cmp    QWORD PTR [rax+0xc0],0x0
   140007508:	je     0x140007513
   14000750a:	mov    rbx,QWORD PTR [rax+0xb8]
   140007511:	jmp    0x140007581
   140007513:	mov    ecx,0xd
   140007518:	call   0x140007100
   14000751d:	nop
   14000751e:	mov    rbx,QWORD PTR [rdi+0xb8]
   140007525:	mov    QWORD PTR [rsp+0x30],rbx
   14000752a:	cmp    rbx,QWORD PTR [rip+0xd97f]        # 0x140014eb0
   140007531:	je     0x140007577
   140007533:	test   rbx,rbx
   140007536:	je     0x140007554
   140007538:	lock add DWORD PTR [rbx],0xffffffff
   14000753c:	jne    0x140007554
   14000753e:	lea    rax,[rip+0xd53b]        # 0x140014a80
   140007545:	mov    rcx,QWORD PTR [rsp+0x30]
   14000754a:	cmp    rcx,rax
   14000754d:	je     0x140007554
   14000754f:	call   0x140002700
   140007554:	mov    rax,QWORD PTR [rip+0xd955]        # 0x140014eb0
   14000755b:	mov    QWORD PTR [rdi+0xb8],rax
   140007562:	mov    rax,QWORD PTR [rip+0xd947]        # 0x140014eb0
   140007569:	mov    QWORD PTR [rsp+0x30],rax
   14000756e:	lock add DWORD PTR [rax],0x1
   140007572:	mov    rbx,QWORD PTR [rsp+0x30]
   140007577:	mov    ecx,0xd
   14000757c:	call   0x140006fd0
   140007581:	test   rbx,rbx
   140007584:	jne    0x14000758e
   140007586:	lea    ecx,[rbx+0x20]
   140007589:	call   0x1400047a0
   14000758e:	mov    rax,rbx
   140007591:	mov    rbx,QWORD PTR [rsp+0x38]
   140007596:	add    rsp,0x20
   14000759a:	pop    rdi
   14000759b:	ret    
   14000759c:	int3   
   14000759d:	int3   
   14000759e:	int3   
   14000759f:	int3   
   1400075a0:	rex push rbp
   1400075a2:	sub    rsp,0x20
   1400075a6:	mov    rbp,rdx
   1400075a9:	mov    ecx,0xd
   1400075ae:	call   0x140006fd0
   1400075b3:	add    rsp,0x20
   1400075b7:	pop    rbp
   1400075b8:	ret    
   1400075b9:	int3   
   1400075ba:	int3   
   1400075bb:	int3   
   1400075bc:	int3   
   1400075bd:	int3   
   1400075be:	int3   
   1400075bf:	int3   
   1400075c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400075c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400075ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400075cf:	mov    QWORD PTR [rsp+0x20],rdi
   1400075d4:	push   r12
   1400075d6:	sub    rsp,0x20
   1400075da:	mov    edi,ecx
   1400075dc:	xor    sil,sil
   1400075df:	call   0x140006240
   1400075e4:	mov    r12,QWORD PTR [rax+0xc0]
   1400075eb:	mov    rbp,QWORD PTR [rax+0xb8]
   1400075f2:	mov    rbx,rax
   1400075f5:	cmp    r12,QWORD PTR [rip+0xdb34]        # 0x140015130
   1400075fc:	je     0x140007614
   1400075fe:	mov    edx,DWORD PTR [rax+0xc8]
   140007604:	test   DWORD PTR [rip+0xd9ae],edx        # 0x140014fb8
   14000760a:	jne    0x140007614
   14000760c:	call   0x140008030
   140007611:	mov    r12,rax
   140007614:	cmp    rbp,QWORD PTR [rip+0xd895]        # 0x140014eb0
   14000761b:	je     0x140007630
   14000761d:	mov    ecx,DWORD PTR [rbx+0xc8]
   140007623:	test   DWORD PTR [rip+0xd98f],ecx        # 0x140014fb8
   140007629:	jne    0x140007630
   14000762b:	call   0x1400074e0
   140007630:	mov    ecx,DWORD PTR [rbx+0xc8]
   140007636:	test   cl,0x2
   140007639:	jne    0x140007647
   14000763b:	or     ecx,0x2
   14000763e:	mov    sil,0x1
   140007641:	mov    DWORD PTR [rbx+0xc8],ecx
   140007647:	cmp    edi,0xfffffffe
   14000764a:	mov    DWORD PTR [rip+0xedcc],0x0        # 0x140016420
   140007654:	jne    0x140007674
   140007656:	mov    DWORD PTR [rip+0xedc0],0x1        # 0x140016420
   140007660:	call   QWORD PTR [rip+0x7b9a]        # 0x14000f200
   140007666:	test   sil,sil
   140007669:	je     0x1400076af
   14000766b:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140007672:	jmp    0x1400076af
   140007674:	cmp    edi,0xfffffffd
   140007677:	jne    0x14000768b
   140007679:	mov    DWORD PTR [rip+0xed9d],0x1        # 0x140016420
   140007683:	call   QWORD PTR [rip+0x7b6f]        # 0x14000f1f8
   140007689:	jmp    0x140007666
   14000768b:	cmp    edi,0xfffffffc
   14000768e:	jne    0x1400076a1
   140007690:	mov    eax,DWORD PTR [r12+0x4]
   140007695:	mov    DWORD PTR [rip+0xed81],0x1        # 0x140016420
   14000769f:	jmp    0x140007666
   1400076a1:	test   sil,sil
   1400076a4:	je     0x1400076ad
   1400076a6:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   1400076ad:	mov    eax,edi
   1400076af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400076b4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400076b9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400076be:	mov    rdi,QWORD PTR [rsp+0x48]
   1400076c3:	add    rsp,0x20
   1400076c7:	pop    r12
   1400076c9:	ret    
   1400076ca:	int3   
   1400076cb:	int3   
   1400076cc:	int3   
   1400076cd:	int3   
   1400076ce:	int3   
   1400076cf:	int3   
   1400076d0:	rex push rbx
   1400076d2:	push   rbp
   1400076d3:	push   rsi
   1400076d4:	push   rdi
   1400076d5:	sub    rsp,0x48
   1400076d9:	mov    rax,QWORD PTR [rip+0xc980]        # 0x140014060
   1400076e0:	xor    rax,rsp
   1400076e3:	mov    QWORD PTR [rsp+0x38],rax
   1400076e8:	mov    rbx,rdx
   1400076eb:	call   0x1400075c0
   1400076f0:	test   eax,eax
   1400076f2:	mov    edi,eax
   1400076f4:	jne    0x140007781
   1400076fa:	lea    rdi,[rbx+0x1c]
   1400076fe:	mov    esi,0x101
   140007703:	xor    edx,edx
   140007705:	mov    rcx,rdi
   140007708:	mov    r8,rsi
   14000770b:	call   0x140002760
   140007710:	xor    ebp,ebp
   140007712:	lea    rdx,[rip+0xd367]        # 0x140014a80
   140007719:	mov    DWORD PTR [rbx+0x4],ebp
   14000771c:	mov    DWORD PTR [rbx+0x8],ebp
   14000771f:	mov    DWORD PTR [rbx+0xc],ebp
   140007722:	mov    QWORD PTR [rbx+0x10],rbp
   140007726:	sub    rdx,rbx
   140007729:	mov    DWORD PTR [rbx+0x18],ebp
   14000772c:	data16 data16 xchg ax,ax
   140007730:	movzx  eax,BYTE PTR [rdx+rdi*1]
   140007734:	add    rdi,0x1
   140007738:	sub    rsi,0x1
   14000773c:	mov    BYTE PTR [rdi-0x1],al
   14000773f:	jne    0x140007730
   140007741:	lea    r9,[rip+0xd339]        # 0x140014a81
   140007748:	lea    rcx,[rbx+0x11d]
   14000774f:	mov    r8d,0x80
   140007755:	sub    r9,rbx
   140007758:	data16 data16 xchg ax,ax
   14000775c:	data16 data16 xchg ax,ax
   140007760:	movzx  eax,BYTE PTR [rcx+rdx*1]
   140007764:	add    rcx,0x2
   140007768:	sub    r8,0x1
   14000776c:	mov    BYTE PTR [rcx-0x2],al
   14000776f:	movzx  eax,BYTE PTR [r9+rcx*1-0x2]
   140007775:	mov    BYTE PTR [rcx-0x1],al
   140007778:	jne    0x140007760
   14000777a:	xor    eax,eax
   14000777c:	jmp    0x140007a76
   140007781:	mov    QWORD PTR [rsp+0x80],r12
   140007789:	xor    ebp,ebp
   14000778b:	mov    QWORD PTR [rsp+0x40],r13
   140007790:	lea    r13,[rip+0xd729]        # 0x140014ec0
   140007797:	mov    ecx,ebp
   140007799:	mov    r12,rbp
   14000779c:	mov    rax,r13
   14000779f:	nop
   1400077a0:	cmp    DWORD PTR [rax],edi
   1400077a2:	je     0x14000794b
   1400077a8:	add    ecx,0x1
   1400077ab:	add    r12,0x1
   1400077af:	add    rax,0x30
   1400077b3:	cmp    ecx,0x5
   1400077b6:	jb     0x1400077a0
   1400077b8:	cmp    edi,0xfde8
   1400077be:	je     0x140007943
   1400077c4:	cmp    edi,0xfde9
   1400077ca:	je     0x140007943
   1400077d0:	movzx  ecx,di
   1400077d3:	call   QWORD PTR [rip+0x7a2f]        # 0x14000f208
   1400077d9:	test   eax,eax
   1400077db:	je     0x140007943
   1400077e1:	lea    rdx,[rsp+0x20]
   1400077e6:	mov    ecx,edi
   1400077e8:	call   QWORD PTR [rip+0x7a02]        # 0x14000f1f0
   1400077ee:	test   eax,eax
   1400077f0:	je     0x14000792e
   1400077f6:	lea    rcx,[rbx+0x1c]
   1400077fa:	mov    r8d,0x101
   140007800:	xor    edx,edx
   140007802:	call   0x140002760
   140007807:	cmp    DWORD PTR [rsp+0x20],0x1
   14000780c:	mov    DWORD PTR [rbx+0x4],edi
   14000780f:	mov    DWORD PTR [rbx+0xc],ebp
   140007812:	jbe    0x14000791f
   140007818:	cmp    BYTE PTR [rsp+0x26],bpl
   14000781d:	lea    rdx,[rsp+0x26]
   140007822:	je     0x140007859
   140007824:	movzx  eax,BYTE PTR [rdx+0x1]
   140007828:	test   al,al
   14000782a:	je     0x140007859
   14000782c:	movzx  r8d,BYTE PTR [rdx]
   140007830:	movzx  ecx,al
   140007833:	cmp    r8d,ecx
   140007836:	ja     0x140007850
   140007838:	sub    ecx,r8d
   14000783b:	lea    rax,[r8+rbx*1+0x1d]
   140007840:	add    ecx,0x1
   140007843:	or     BYTE PTR [rax],0x4
   140007846:	add    rax,0x1
   14000784a:	sub    rcx,0x1
   14000784e:	jne    0x140007843
   140007850:	add    rdx,0x2
   140007854:	cmp    BYTE PTR [rdx],bpl
   140007857:	jne    0x140007824
   140007859:	lea    rax,[rbx+0x1f]
   14000785d:	mov    ecx,0x7f
   140007862:	xchg   ax,ax
   140007864:	data16 data16 xchg ax,ax
   140007868:	data16 data16 xchg ax,ax
   14000786c:	data16 data16 xchg ax,ax
   140007870:	or     BYTE PTR [rax-0x1],0x8
   140007874:	or     BYTE PTR [rax],0x8
   140007877:	add    rax,0x2
   14000787b:	sub    rcx,0x1
   14000787f:	jne    0x140007870
   140007881:	mov    ecx,DWORD PTR [rbx+0x4]
   140007884:	sub    ecx,0x3a4
   14000788a:	je     0x140007904
   14000788c:	sub    ecx,0x4
   14000788f:	je     0x1400078e9
   140007891:	sub    ecx,0xd
   140007894:	je     0x1400078ce
   140007896:	cmp    ecx,0x1
   140007899:	je     0x1400078b3
   14000789b:	mov    DWORD PTR [rbx+0x8],0x1
   1400078a2:	mov    eax,ebp
   1400078a4:	mov    DWORD PTR [rbx+0xc],eax
   1400078a7:	mov    QWORD PTR [rbx+0x10],rbp
   1400078ab:	mov    DWORD PTR [rbx+0x18],ebp
   1400078ae:	jmp    0x140007a5f
   1400078b3:	mov    DWORD PTR [rbx+0x8],0x1
   1400078ba:	mov    eax,0x404
   1400078bf:	mov    DWORD PTR [rbx+0xc],eax
   1400078c2:	mov    QWORD PTR [rbx+0x10],rbp
   1400078c6:	mov    DWORD PTR [rbx+0x18],ebp
   1400078c9:	jmp    0x140007a5f
   1400078ce:	mov    DWORD PTR [rbx+0x8],0x1
   1400078d5:	mov    eax,0x412
   1400078da:	mov    DWORD PTR [rbx+0xc],eax
   1400078dd:	mov    QWORD PTR [rbx+0x10],rbp
   1400078e1:	mov    DWORD PTR [rbx+0x18],ebp
   1400078e4:	jmp    0x140007a5f
   1400078e9:	mov    DWORD PTR [rbx+0x8],0x1
   1400078f0:	mov    eax,0x804
   1400078f5:	mov    DWORD PTR [rbx+0xc],eax
   1400078f8:	mov    QWORD PTR [rbx+0x10],rbp
   1400078fc:	mov    DWORD PTR [rbx+0x18],ebp
   1400078ff:	jmp    0x140007a5f
   140007904:	mov    DWORD PTR [rbx+0x8],0x1
   14000790b:	mov    eax,0x411
   140007910:	mov    DWORD PTR [rbx+0xc],eax
   140007913:	mov    QWORD PTR [rbx+0x10],rbp
   140007917:	mov    DWORD PTR [rbx+0x18],ebp
   14000791a:	jmp    0x140007a5f
   14000791f:	mov    DWORD PTR [rbx+0x8],ebp
   140007922:	mov    QWORD PTR [rbx+0x10],rbp
   140007926:	mov    DWORD PTR [rbx+0x18],ebp
   140007929:	jmp    0x140007a5f
   14000792e:	cmp    DWORD PTR [rip+0xeaec],ebp        # 0x140016420
   140007934:	je     0x140007943
   140007936:	mov    rcx,rbx
   140007939:	call   0x140007210
   14000793e:	jmp    0x140007a67
   140007943:	or     eax,0xffffffff
   140007946:	jmp    0x140007a69
   14000794b:	lea    rcx,[rbx+0x1c]
   14000794f:	mov    r8d,0x101
   140007955:	xor    edx,edx
   140007957:	call   0x140002760
   14000795c:	lea    r9,[r12+r12*2]
   140007960:	lea    rax,[rip+0xd569]        # 0x140014ed0
   140007967:	shl    r9,0x4
   14000796b:	lea    r11,[rip+0xd546]        # 0x140014eb8
   140007972:	mov    r10d,0x4
   140007978:	add    r9,rax
   14000797b:	xchg   ax,ax
   14000797d:	data16 xchg ax,ax
   140007980:	cmp    BYTE PTR [r9],bpl
   140007983:	mov    r8,r9
   140007986:	je     0x1400079d0
   140007988:	data16 data16 xchg ax,ax
   14000798c:	data16 data16 xchg ax,ax
   140007990:	movzx  eax,BYTE PTR [r8+0x1]
   140007995:	test   al,al
   140007997:	je     0x1400079d0
   140007999:	movzx  edx,BYTE PTR [r8]
   14000799d:	movzx  eax,al
   1400079a0:	cmp    edx,eax
   1400079a2:	ja     0x1400079c7
   1400079a4:	lea    rcx,[rdx+rbx*1+0x1d]
   1400079a9:	data16 xchg ax,ax
   1400079ac:	data16 data16 xchg ax,ax
   1400079b0:	movzx  eax,BYTE PTR [r11]
   1400079b4:	add    edx,0x1
   1400079b7:	add    rcx,0x1
   1400079bb:	or     BYTE PTR [rcx-0x1],al
   1400079be:	movzx  eax,BYTE PTR [r8+0x1]
   1400079c3:	cmp    edx,eax
   1400079c5:	jbe    0x1400079b0
   1400079c7:	add    r8,0x2
   1400079cb:	cmp    BYTE PTR [r8],bpl
   1400079ce:	jne    0x140007990
   1400079d0:	add    r9,0x8
   1400079d4:	add    r11,0x1
   1400079d8:	sub    r10,0x1
   1400079dc:	jne    0x140007980
   1400079de:	mov    DWORD PTR [rbx+0x4],edi
   1400079e1:	sub    edi,0x3a4
   1400079e7:	mov    DWORD PTR [rbx+0x8],0x1
   1400079ee:	je     0x140007a14
   1400079f0:	sub    edi,0x4
   1400079f3:	je     0x140007a0d
   1400079f5:	sub    edi,0xd
   1400079f8:	je     0x140007a06
   1400079fa:	cmp    edi,0x1
   1400079fd:	jne    0x140007a19
   1400079ff:	mov    ebp,0x404
   140007a04:	jmp    0x140007a19
   140007a06:	mov    ebp,0x412
   140007a0b:	jmp    0x140007a19
   140007a0d:	mov    ebp,0x804
   140007a12:	jmp    0x140007a19
   140007a14:	mov    ebp,0x411
   140007a19:	mov    DWORD PTR [rbx+0xc],ebp
   140007a1c:	lea    rcx,[r12+r12*2]
   140007a20:	add    rcx,rcx
   140007a23:	movzx  eax,WORD PTR [r13+rcx*8+0x4]
   140007a29:	mov    WORD PTR [rbx+0x10],ax
   140007a2d:	movzx  eax,WORD PTR [r13+rcx*8+0x6]
   140007a33:	mov    WORD PTR [rbx+0x12],ax
   140007a37:	movzx  eax,WORD PTR [r13+rcx*8+0x8]
   140007a3d:	mov    WORD PTR [rbx+0x14],ax
   140007a41:	movzx  eax,WORD PTR [r13+rcx*8+0xa]
   140007a47:	mov    WORD PTR [rbx+0x16],ax
   140007a4b:	movzx  eax,WORD PTR [r13+rcx*8+0xc]
   140007a51:	mov    WORD PTR [rbx+0x18],ax
   140007a55:	movzx  eax,WORD PTR [r13+rcx*8+0xe]
   140007a5b:	mov    WORD PTR [rbx+0x1a],ax
   140007a5f:	mov    rcx,rbx
   140007a62:	call   0x1400072c0
   140007a67:	xor    eax,eax
   140007a69:	mov    r12,QWORD PTR [rsp+0x80]
   140007a71:	mov    r13,QWORD PTR [rsp+0x40]
   140007a76:	mov    rcx,QWORD PTR [rsp+0x38]
   140007a7b:	xor    rcx,rsp
   140007a7e:	call   0x1400020b0
   140007a83:	add    rsp,0x48
   140007a87:	pop    rdi
   140007a88:	pop    rsi
   140007a89:	pop    rbp
   140007a8a:	pop    rbx
   140007a8b:	ret    
   140007a8c:	int3   
   140007a8d:	int3   
   140007a8e:	int3   
   140007a8f:	int3   
   140007a90:	mov    QWORD PTR [rsp+0x8],rbx
   140007a95:	mov    QWORD PTR [rsp+0x10],rsi
   140007a9a:	mov    QWORD PTR [rsp+0x18],rdi
   140007a9f:	push   r12
   140007aa1:	push   r13
   140007aa3:	push   r14
   140007aa5:	sub    rsp,0x30
   140007aa9:	mov    edi,ecx
   140007aab:	or     r14d,0xffffffff
   140007aaf:	call   0x140006240
   140007ab4:	mov    rsi,rax
   140007ab7:	call   0x1400074e0
   140007abc:	mov    rbx,QWORD PTR [rsi+0xb8]
   140007ac3:	mov    ecx,edi
   140007ac5:	call   0x1400075c0
   140007aca:	mov    r12d,eax
   140007acd:	cmp    eax,DWORD PTR [rbx+0x4]
   140007ad0:	je     0x140007c6f
   140007ad6:	mov    ecx,0x220
   140007adb:	call   0x140006690
   140007ae0:	mov    rdi,rax
   140007ae3:	test   rax,rax
   140007ae6:	je     0x140007c74
   140007aec:	mov    rdx,QWORD PTR [rsi+0xb8]
   140007af3:	mov    rcx,rax
   140007af6:	mov    r8d,0x220
   140007afc:	call   0x1400043f0
   140007b01:	xor    ebx,ebx
   140007b03:	mov    DWORD PTR [rdi],ebx
   140007b05:	mov    rdx,rdi
   140007b08:	mov    ecx,r12d
   140007b0b:	call   0x1400076d0
   140007b10:	mov    r14d,eax
   140007b13:	test   eax,eax
   140007b15:	jne    0x140007c49
   140007b1b:	mov    rcx,QWORD PTR [rsi+0xb8]
   140007b22:	lock add DWORD PTR [rcx],0xffffffff
   140007b26:	jne    0x140007b42
   140007b28:	mov    rcx,QWORD PTR [rsi+0xb8]
   140007b2f:	lea    r12,[rip+0xcf4a]        # 0x140014a80
   140007b36:	cmp    rcx,r12
   140007b39:	je     0x140007b49
   140007b3b:	call   0x140002700
   140007b40:	jmp    0x140007b49
   140007b42:	lea    r12,[rip+0xcf37]        # 0x140014a80
   140007b49:	mov    QWORD PTR [rsi+0xb8],rdi
   140007b50:	lock add DWORD PTR [rdi],0x1
   140007b54:	test   BYTE PTR [rsi+0xc8],0x2
   140007b5b:	jne    0x140007c74
   140007b61:	test   BYTE PTR [rip+0xd450],0x1        # 0x140014fb8
   140007b68:	jne    0x140007c74
   140007b6e:	mov    ecx,0xd
   140007b73:	call   0x140007100
   140007b78:	nop
   140007b79:	mov    eax,DWORD PTR [rdi+0x4]
   140007b7c:	mov    DWORD PTR [rip+0xe8b2],eax        # 0x140016434
   140007b82:	mov    eax,DWORD PTR [rdi+0x8]
   140007b85:	mov    DWORD PTR [rip+0xe8ad],eax        # 0x140016438
   140007b8b:	mov    eax,DWORD PTR [rdi+0xc]
   140007b8e:	mov    DWORD PTR [rip+0xe8a8],eax        # 0x14001643c
   140007b94:	mov    edx,ebx
   140007b96:	mov    DWORD PTR [rsp+0x20],ebx
   140007b9a:	lea    r8,[rip+0xffffffffffff845f]        # 0x140000000
   140007ba1:	cmp    edx,0x5
   140007ba4:	jge    0x140007bc0
   140007ba6:	movsxd rcx,edx
   140007ba9:	movzx  eax,WORD PTR [rdi+rcx*2+0x10]
   140007bae:	mov    WORD PTR [r8+rcx*2+0x16428],ax
   140007bb7:	add    edx,0x1
   140007bba:	mov    DWORD PTR [rsp+0x20],edx
   140007bbe:	jmp    0x140007ba1
   140007bc0:	mov    edx,ebx
   140007bc2:	mov    DWORD PTR [rsp+0x20],ebx
   140007bc6:	cmp    edx,0x101
   140007bcc:	jge    0x140007be7
   140007bce:	movsxd rcx,edx
   140007bd1:	movzx  eax,BYTE PTR [rcx+rdi*1+0x1c]
   140007bd6:	mov    BYTE PTR [rcx+r8*1+0x14ca0],al
   140007bde:	add    edx,0x1
   140007be1:	mov    DWORD PTR [rsp+0x20],edx
   140007be5:	jmp    0x140007bc6
   140007be7:	mov    DWORD PTR [rsp+0x20],ebx
   140007beb:	xchg   ax,ax
   140007bed:	data16 xchg ax,ax
   140007bf0:	cmp    ebx,0x100
   140007bf6:	jge    0x140007c14
   140007bf8:	movsxd rcx,ebx
   140007bfb:	movzx  eax,BYTE PTR [rcx+rdi*1+0x11d]
   140007c03:	mov    BYTE PTR [rcx+r8*1+0x14db0],al
   140007c0b:	add    ebx,0x1
   140007c0e:	mov    DWORD PTR [rsp+0x20],ebx
   140007c12:	jmp    0x140007bf0
   140007c14:	mov    rax,QWORD PTR [rip+0xd295]        # 0x140014eb0
   140007c1b:	lock add DWORD PTR [rax],0xffffffff
   140007c1f:	jne    0x140007c32
   140007c21:	mov    rcx,QWORD PTR [rip+0xd288]        # 0x140014eb0
   140007c28:	cmp    rcx,r12
   140007c2b:	je     0x140007c32
   140007c2d:	call   0x140002700
   140007c32:	mov    QWORD PTR [rip+0xd277],rdi        # 0x140014eb0
   140007c39:	lock add DWORD PTR [rdi],0x1
   140007c3d:	mov    ecx,0xd
   140007c42:	call   0x140006fd0
   140007c47:	jmp    0x140007c74
   140007c49:	cmp    eax,0xffffffff
   140007c4c:	jne    0x140007c74
   140007c4e:	lea    r12,[rip+0xce2b]        # 0x140014a80
   140007c55:	cmp    rdi,r12
   140007c58:	je     0x140007c62
   140007c5a:	mov    rcx,rdi
   140007c5d:	call   0x140002700
   140007c62:	call   0x140004100
   140007c67:	mov    DWORD PTR [rax],0x16
   140007c6d:	jmp    0x140007c74
   140007c6f:	xor    ebx,ebx
   140007c71:	mov    r14d,ebx
   140007c74:	mov    eax,r14d
   140007c77:	mov    rbx,QWORD PTR [rsp+0x50]
   140007c7c:	mov    rsi,QWORD PTR [rsp+0x58]
   140007c81:	mov    rdi,QWORD PTR [rsp+0x60]
   140007c86:	add    rsp,0x30
   140007c8a:	pop    r14
   140007c8c:	pop    r13
   140007c8e:	pop    r12
   140007c90:	ret    
   140007c91:	int3   
   140007c92:	int3   
   140007c93:	int3   
   140007c94:	int3   
   140007c95:	int3   
   140007c96:	int3   
   140007c97:	int3   
   140007c98:	int3   
   140007c99:	int3   
   140007c9a:	int3   
   140007c9b:	int3   
   140007c9c:	int3   
   140007c9d:	int3   
   140007c9e:	int3   
   140007c9f:	int3   
   140007ca0:	rex push rbp
   140007ca2:	sub    rsp,0x20
   140007ca6:	mov    rbp,rdx
   140007ca9:	mov    ecx,0xd
   140007cae:	call   0x140006fd0
   140007cb3:	add    rsp,0x20
   140007cb7:	pop    rbp
   140007cb8:	ret    
   140007cb9:	int3   
   140007cba:	int3   
   140007cbb:	int3   
   140007cbc:	int3   
   140007cbd:	int3   
   140007cbe:	int3   
   140007cbf:	int3   
   140007cc0:	sub    rsp,0x28
   140007cc4:	cmp    DWORD PTR [rip+0xeb8d],0x0        # 0x140016858
   140007ccb:	jne    0x140007ce1
   140007ccd:	mov    ecx,0xfffffffd
   140007cd2:	call   0x140007a90
   140007cd7:	mov    DWORD PTR [rip+0xeb77],0x1        # 0x140016858
   140007ce1:	xor    eax,eax
   140007ce3:	add    rsp,0x28
   140007ce7:	ret    
   140007ce8:	int3   
   140007ce9:	int3   
   140007cea:	int3   
   140007ceb:	int3   
   140007cec:	int3   
   140007ced:	int3   
   140007cee:	int3   
   140007cef:	int3   
   140007cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140007cf5:	mov    QWORD PTR [rsp+0x10],rbp
   140007cfa:	mov    QWORD PTR [rsp+0x18],rsi
   140007cff:	push   rdi
   140007d00:	sub    rsp,0x20
   140007d04:	mov    rax,QWORD PTR [rcx+0x128]
   140007d0b:	mov    rdi,rcx
   140007d0e:	test   rax,rax
   140007d11:	je     0x140007d8c
   140007d13:	lea    rcx,[rip+0xd626]        # 0x140015340
   140007d1a:	cmp    rax,rcx
   140007d1d:	je     0x140007d8c
   140007d1f:	mov    rax,QWORD PTR [rdi+0x110]
   140007d26:	test   rax,rax
   140007d29:	je     0x140007d8c
   140007d2b:	cmp    DWORD PTR [rax],0x0
   140007d2e:	jne    0x140007d8c
   140007d30:	mov    rcx,QWORD PTR [rdi+0x120]
   140007d37:	test   rcx,rcx
   140007d3a:	je     0x140007d52
   140007d3c:	cmp    DWORD PTR [rcx],0x0
   140007d3f:	jne    0x140007d52
   140007d41:	call   0x140002700
   140007d46:	mov    rcx,QWORD PTR [rdi+0x128]
   140007d4d:	call   0x14000ab70
   140007d52:	mov    rcx,QWORD PTR [rdi+0x118]
   140007d59:	test   rcx,rcx
   140007d5c:	je     0x140007d74
   140007d5e:	cmp    DWORD PTR [rcx],0x0
   140007d61:	jne    0x140007d74
   140007d63:	call   0x140002700
   140007d68:	mov    rcx,QWORD PTR [rdi+0x128]
   140007d6f:	call   0x14000ab20
   140007d74:	mov    rcx,QWORD PTR [rdi+0x110]
   140007d7b:	call   0x140002700
   140007d80:	mov    rcx,QWORD PTR [rdi+0x128]
   140007d87:	call   0x140002700
   140007d8c:	mov    rax,QWORD PTR [rdi+0x130]
   140007d93:	test   rax,rax
   140007d96:	je     0x140007ddc
   140007d98:	cmp    DWORD PTR [rax],0x0
   140007d9b:	jne    0x140007ddc
   140007d9d:	mov    rcx,QWORD PTR [rdi+0x138]
   140007da4:	sub    rcx,0xfe
   140007dab:	call   0x140002700
   140007db0:	mov    rcx,QWORD PTR [rdi+0x148]
   140007db7:	add    rcx,0xffffffffffffff80
   140007dbb:	call   0x140002700
   140007dc0:	mov    rcx,QWORD PTR [rdi+0x150]
   140007dc7:	add    rcx,0xffffffffffffff80
   140007dcb:	call   0x140002700
   140007dd0:	mov    rcx,QWORD PTR [rdi+0x130]
   140007dd7:	call   0x140002700
   140007ddc:	mov    rcx,QWORD PTR [rdi+0x158]
   140007de3:	lea    rax,[rip+0xd3d6]        # 0x1400151c0
   140007dea:	cmp    rcx,rax
   140007ded:	je     0x140007e09
   140007def:	cmp    DWORD PTR [rcx+0x160],0x0
   140007df6:	jne    0x140007e09
   140007df8:	call   0x14000a930
   140007dfd:	mov    rcx,QWORD PTR [rdi+0x158]
   140007e04:	call   0x140002700
   140007e09:	lea    rbx,[rdi+0x58]
   140007e0d:	mov    esi,0x6
   140007e12:	lea    rbp,[rip+0xd1a7]        # 0x140014fc0
   140007e19:	data16 xchg ax,ax
   140007e1c:	data16 data16 xchg ax,ax
   140007e20:	cmp    QWORD PTR [rbx-0x10],rbp
   140007e24:	je     0x140007e38
   140007e26:	mov    rcx,QWORD PTR [rbx]
   140007e29:	test   rcx,rcx
   140007e2c:	je     0x140007e38
   140007e2e:	cmp    DWORD PTR [rcx],0x0
   140007e31:	jne    0x140007e38
   140007e33:	call   0x140002700
   140007e38:	cmp    QWORD PTR [rbx-0x8],0x0
   140007e3d:	je     0x140007e52
   140007e3f:	mov    rcx,QWORD PTR [rbx+0x8]
   140007e43:	test   rcx,rcx
   140007e46:	je     0x140007e52
   140007e48:	cmp    DWORD PTR [rcx],0x0
   140007e4b:	jne    0x140007e52
   140007e4d:	call   0x140002700
   140007e52:	add    rbx,0x20
   140007e56:	sub    rsi,0x1
   140007e5a:	jne    0x140007e20
   140007e5c:	mov    rcx,rdi
   140007e5f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e64:	mov    rbp,QWORD PTR [rsp+0x38]
   140007e69:	mov    rsi,QWORD PTR [rsp+0x40]
   140007e6e:	add    rsp,0x20
   140007e72:	pop    rdi
   140007e73:	jmp    0x140002700
   140007e78:	int3   
   140007e79:	int3   
   140007e7a:	int3   
   140007e7b:	int3   
   140007e7c:	int3   
   140007e7d:	int3   
   140007e7e:	int3   
   140007e7f:	int3   
   140007e80:	mov    rdx,rcx
   140007e83:	lock add DWORD PTR [rcx],0x1
   140007e87:	mov    rax,QWORD PTR [rcx+0x110]
   140007e8e:	test   rax,rax
   140007e91:	je     0x140007e97
   140007e93:	lock add DWORD PTR [rax],0x1
   140007e97:	mov    rax,QWORD PTR [rcx+0x120]
   140007e9e:	test   rax,rax
   140007ea1:	je     0x140007ea7
   140007ea3:	lock add DWORD PTR [rax],0x1
   140007ea7:	mov    rax,QWORD PTR [rcx+0x118]
   140007eae:	test   rax,rax
   140007eb1:	je     0x140007eb7
   140007eb3:	lock add DWORD PTR [rax],0x1
   140007eb7:	mov    rax,QWORD PTR [rcx+0x130]
   140007ebe:	test   rax,rax
   140007ec1:	je     0x140007ec7
   140007ec3:	lock add DWORD PTR [rax],0x1
   140007ec7:	lea    rax,[rcx+0x58]
   140007ecb:	mov    r8d,0x6
   140007ed1:	lea    r9,[rip+0xd0e8]        # 0x140014fc0
   140007ed8:	cmp    QWORD PTR [rax-0x10],r9
   140007edc:	je     0x140007eea
   140007ede:	mov    rcx,QWORD PTR [rax]
   140007ee1:	test   rcx,rcx
   140007ee4:	je     0x140007eea
   140007ee6:	lock add DWORD PTR [rcx],0x1
   140007eea:	cmp    QWORD PTR [rax-0x8],0x0
   140007eef:	je     0x140007efe
   140007ef1:	mov    rcx,QWORD PTR [rax+0x8]
   140007ef5:	test   rcx,rcx
   140007ef8:	je     0x140007efe
   140007efa:	lock add DWORD PTR [rcx],0x1
   140007efe:	add    rax,0x20
   140007f02:	sub    r8,0x1
   140007f06:	jne    0x140007ed8
   140007f08:	mov    rax,QWORD PTR [rdx+0x158]
   140007f0f:	lock add DWORD PTR [rax+0x160],0x1
   140007f17:	ret    
   140007f18:	int3   
   140007f19:	int3   
   140007f1a:	int3   
   140007f1b:	int3   
   140007f1c:	int3   
   140007f1d:	int3   
   140007f1e:	int3   
   140007f1f:	int3   
   140007f20:	test   rcx,rcx
   140007f23:	je     0x140007fbf
   140007f29:	lock add DWORD PTR [rcx],0xffffffff
   140007f2d:	mov    rax,QWORD PTR [rcx+0x110]
   140007f34:	test   rax,rax
   140007f37:	je     0x140007f3d
   140007f39:	lock add DWORD PTR [rax],0xffffffff
   140007f3d:	mov    rax,QWORD PTR [rcx+0x120]
   140007f44:	test   rax,rax
   140007f47:	je     0x140007f4d
   140007f49:	lock add DWORD PTR [rax],0xffffffff
   140007f4d:	mov    rax,QWORD PTR [rcx+0x118]
   140007f54:	test   rax,rax
   140007f57:	je     0x140007f5d
   140007f59:	lock add DWORD PTR [rax],0xffffffff
   140007f5d:	mov    rax,QWORD PTR [rcx+0x130]
   140007f64:	test   rax,rax
   140007f67:	je     0x140007f6d
   140007f69:	lock add DWORD PTR [rax],0xffffffff
   140007f6d:	lea    rax,[rcx+0x58]
   140007f71:	mov    r8d,0x6
   140007f77:	lea    r9,[rip+0xd042]        # 0x140014fc0
   140007f7e:	xchg   ax,ax
   140007f80:	cmp    QWORD PTR [rax-0x10],r9
   140007f84:	je     0x140007f92
   140007f86:	mov    rdx,QWORD PTR [rax]
   140007f89:	test   rdx,rdx
   140007f8c:	je     0x140007f92
   140007f8e:	lock add DWORD PTR [rdx],0xffffffff
   140007f92:	cmp    QWORD PTR [rax-0x8],0x0
   140007f97:	je     0x140007fa6
   140007f99:	mov    rdx,QWORD PTR [rax+0x8]
   140007f9d:	test   rdx,rdx
   140007fa0:	je     0x140007fa6
   140007fa2:	lock add DWORD PTR [rdx],0xffffffff
   140007fa6:	add    rax,0x20
   140007faa:	sub    r8,0x1
   140007fae:	jne    0x140007f80
   140007fb0:	mov    rax,QWORD PTR [rcx+0x158]
   140007fb7:	lock add DWORD PTR [rax+0x160],0xffffffff
   140007fbf:	mov    rax,rcx
   140007fc2:	ret    
   140007fc3:	int3   
   140007fc4:	int3   
   140007fc5:	int3   
   140007fc6:	int3   
   140007fc7:	int3   
   140007fc8:	int3   
   140007fc9:	int3   
   140007fca:	int3   
   140007fcb:	int3   
   140007fcc:	int3   
   140007fcd:	int3   
   140007fce:	int3   
   140007fcf:	int3   
   140007fd0:	rex push rbx
   140007fd2:	sub    rsp,0x20
   140007fd6:	test   rdx,rdx
   140007fd9:	mov    rbx,rdx
   140007fdc:	je     0x140008023
   140007fde:	test   rcx,rcx
   140007fe1:	je     0x140008023
   140007fe3:	mov    r10,QWORD PTR [rcx]
   140007fe6:	cmp    r10,rdx
   140007fe9:	je     0x14000801a
   140007feb:	mov    QWORD PTR [rcx],rdx
   140007fee:	mov    rcx,rdx
   140007ff1:	call   0x140007e80
   140007ff6:	test   r10,r10
   140007ff9:	je     0x14000801a
   140007ffb:	mov    rcx,r10
   140007ffe:	call   0x140007f20
   140008003:	cmp    DWORD PTR [r10],0x0
   140008007:	jne    0x14000801a
   140008009:	lea    rax,[rip+0xcfc0]        # 0x140014fd0
   140008010:	cmp    r10,rax
   140008013:	je     0x14000801a
   140008015:	call   0x140007cf0
   14000801a:	mov    rax,rbx
   14000801d:	add    rsp,0x20
   140008021:	pop    rbx
   140008022:	ret    
   140008023:	xor    eax,eax
   140008025:	add    rsp,0x20
   140008029:	pop    rbx
   14000802a:	ret    
   14000802b:	int3   
   14000802c:	int3   
   14000802d:	int3   
   14000802e:	int3   
   14000802f:	int3   
   140008030:	rex push rbx
   140008032:	sub    rsp,0x20
   140008036:	call   0x140006240
   14000803b:	mov    rbx,rax
   14000803e:	mov    ecx,DWORD PTR [rax+0xc8]
   140008044:	test   DWORD PTR [rip+0xcf6e],ecx        # 0x140014fb8
   14000804a:	je     0x140008064
   14000804c:	cmp    QWORD PTR [rax+0xc0],0x0
   140008054:	je     0x140008064
   140008056:	call   0x140006240
   14000805b:	mov    rbx,QWORD PTR [rax+0xc0]
   140008062:	jmp    0x14000808f
   140008064:	mov    ecx,0xc
   140008069:	call   0x140007100
   14000806e:	nop
   14000806f:	lea    rcx,[rbx+0xc0]
   140008076:	mov    rdx,QWORD PTR [rip+0xd0b3]        # 0x140015130
   14000807d:	call   0x140007fd0
   140008082:	mov    rbx,rax
   140008085:	mov    ecx,0xc
   14000808a:	call   0x140006fd0
   14000808f:	test   rbx,rbx
   140008092:	jne    0x14000809c
   140008094:	lea    ecx,[rbx+0x20]
   140008097:	call   0x1400047a0
   14000809c:	mov    rax,rbx
   14000809f:	add    rsp,0x20
   1400080a3:	pop    rbx
   1400080a4:	ret    
   1400080a5:	int3   
   1400080a6:	int3   
   1400080a7:	int3   
   1400080a8:	int3   
   1400080a9:	int3   
   1400080aa:	int3   
   1400080ab:	int3   
   1400080ac:	int3   
   1400080ad:	int3   
   1400080ae:	int3   
   1400080af:	int3   
   1400080b0:	rex push rbp
   1400080b2:	sub    rsp,0x20
   1400080b6:	mov    rbp,rdx
   1400080b9:	mov    ecx,0xc
   1400080be:	call   0x140006fd0
   1400080c3:	add    rsp,0x20
   1400080c7:	pop    rbp
   1400080c8:	ret    
   1400080c9:	int3   
   1400080ca:	int3   
   1400080cb:	int3   
   1400080cc:	int3   
   1400080cd:	int3   
   1400080ce:	int3   
   1400080cf:	int3   
   1400080d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400080d5:	mov    QWORD PTR [rsp+0x20],rbp
   1400080da:	push   rsi
   1400080db:	push   rdi
   1400080dc:	push   r12
   1400080de:	sub    rsp,0x40
   1400080e2:	mov    rax,QWORD PTR [rip+0xbf77]        # 0x140014060
   1400080e9:	xor    rax,rsp
   1400080ec:	mov    QWORD PTR [rsp+0x30],rax
   1400080f1:	test   BYTE PTR [rdx+0x18],0x40
   1400080f5:	mov    rdi,rdx
   1400080f8:	movzx  ebp,cx
   1400080fb:	mov    WORD PTR [rsp+0x20],cx
   140008100:	jne    0x140008307
   140008106:	mov    rcx,rdx
   140008109:	call   0x1400071d0
   14000810e:	lea    rsi,[rip+0xc6cb]        # 0x1400147e0
   140008115:	lea    r12,[rip+0xe524]        # 0x140016640
   14000811c:	cmp    eax,0xffffffff
   14000811f:	je     0x14000815a
   140008121:	mov    rcx,rdi
   140008124:	call   0x1400071d0
   140008129:	cmp    eax,0xfffffffe
   14000812c:	je     0x14000815a
   14000812e:	mov    rcx,rdi
   140008131:	call   0x1400071d0
   140008136:	mov    rcx,rdi
   140008139:	movsxd rbx,eax
   14000813c:	sar    rbx,0x5
   140008140:	call   0x1400071d0
   140008145:	mov    r11d,eax
   140008148:	and    r11d,0x1f
   14000814c:	lea    rax,[r11+r11*4]
   140008150:	shl    rax,0x4
   140008154:	add    rax,QWORD PTR [r12+rbx*8]
   140008158:	jmp    0x14000815d
   14000815a:	mov    rax,rsi
   14000815d:	movzx  ecx,BYTE PTR [rax+0x38]
   140008161:	and    cl,0x7f
   140008164:	cmp    cl,0x2
   140008167:	jne    0x140008185
   140008169:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14000816d:	js     0x14000831c
   140008173:	mov    rcx,QWORD PTR [rdi]
   140008176:	mov    ax,bp
   140008179:	mov    WORD PTR [rcx],bp
   14000817c:	add    QWORD PTR [rdi],0x2
   140008180:	jmp    0x140008327
   140008185:	mov    rcx,rdi
   140008188:	call   0x1400071d0
   14000818d:	cmp    eax,0xffffffff
   140008190:	je     0x1400081cb
   140008192:	mov    rcx,rdi
   140008195:	call   0x1400071d0
   14000819a:	cmp    eax,0xfffffffe
   14000819d:	je     0x1400081cb
   14000819f:	mov    rcx,rdi
   1400081a2:	call   0x1400071d0
   1400081a7:	mov    rcx,rdi
   1400081aa:	movsxd rbx,eax
   1400081ad:	sar    rbx,0x5
   1400081b1:	call   0x1400071d0
   1400081b6:	mov    r11d,eax
   1400081b9:	and    r11d,0x1f
   1400081bd:	lea    rax,[r11+r11*4]
   1400081c1:	shl    rax,0x4
   1400081c5:	add    rax,QWORD PTR [r12+rbx*8]
   1400081c9:	jmp    0x1400081ce
   1400081cb:	mov    rax,rsi
   1400081ce:	movzx  eax,BYTE PTR [rax+0x38]
   1400081d2:	and    al,0x7f
   1400081d4:	cmp    al,0x1
   1400081d6:	jne    0x14000824a
   1400081d8:	add    DWORD PTR [rdi+0x8],0xffffffff
   1400081dc:	js     0x1400081f3
   1400081de:	mov    rax,QWORD PTR [rdi]
   1400081e1:	mov    BYTE PTR [rax],bpl
   1400081e4:	mov    rax,QWORD PTR [rdi]
   1400081e7:	movzx  ecx,BYTE PTR [rax]
   1400081ea:	add    rax,0x1
   1400081ee:	mov    QWORD PTR [rdi],rax
   1400081f1:	jmp    0x140008201
   1400081f3:	movsx  ecx,bpl
   1400081f7:	mov    rdx,rdi
   1400081fa:	call   0x14000b260
   1400081ff:	mov    ecx,eax
   140008201:	cmp    ecx,0xffffffff
   140008204:	jne    0x14000820f
   140008206:	or     ax,0xffff
   14000820a:	jmp    0x140008327
   14000820f:	add    DWORD PTR [rdi+0x8],0xffffffff
   140008213:	js     0x14000822e
   140008215:	mov    rcx,QWORD PTR [rdi]
   140008218:	movzx  eax,BYTE PTR [rsp+0x21]
   14000821d:	mov    BYTE PTR [rcx],al
   14000821f:	mov    rax,QWORD PTR [rdi]
   140008222:	movzx  ecx,BYTE PTR [rax]
   140008225:	add    rax,0x1
   140008229:	mov    QWORD PTR [rdi],rax
   14000822c:	jmp    0x14000823d
   14000822e:	movsx  ecx,BYTE PTR [rsp+0x21]
   140008233:	mov    rdx,rdi
   140008236:	call   0x14000b260
   14000823b:	mov    ecx,eax
   14000823d:	cmp    ecx,0xffffffff
   140008240:	je     0x140008206
   140008242:	mov    ax,bp
   140008245:	jmp    0x140008327
   14000824a:	mov    rcx,rdi
   14000824d:	call   0x1400071d0
   140008252:	cmp    eax,0xffffffff
   140008255:	je     0x14000828e
   140008257:	mov    rcx,rdi
   14000825a:	call   0x1400071d0
   14000825f:	cmp    eax,0xfffffffe
   140008262:	je     0x14000828e
   140008264:	mov    rcx,rdi
   140008267:	call   0x1400071d0
   14000826c:	mov    rcx,rdi
   14000826f:	movsxd rbx,eax
   140008272:	sar    rbx,0x5
   140008276:	call   0x1400071d0
   14000827b:	mov    r11d,eax
   14000827e:	and    r11d,0x1f
   140008282:	lea    rsi,[r11+r11*4]
   140008286:	shl    rsi,0x4
   14000828a:	add    rsi,QWORD PTR [r12+rbx*8]
   14000828e:	test   BYTE PTR [rsi+0x8],0x80
   140008292:	je     0x140008307
   140008294:	lea    rdx,[rsp+0x24]
   140008299:	lea    rcx,[rsp+0x20]
   14000829e:	movzx  r9d,bp
   1400082a2:	mov    r8d,0x5
   1400082a8:	call   0x14000b240
   1400082ad:	test   eax,eax
   1400082af:	jne    0x140008206
   1400082b5:	xor    esi,esi
   1400082b7:	cmp    DWORD PTR [rsp+0x20],esi
   1400082bb:	jle    0x140008242
   1400082bd:	lea    rbx,[rsp+0x24]
   1400082c2:	add    DWORD PTR [rdi+0x8],0xffffffff
   1400082c6:	js     0x1400082df
   1400082c8:	mov    rcx,QWORD PTR [rdi]
   1400082cb:	movzx  eax,BYTE PTR [rbx]
   1400082ce:	mov    BYTE PTR [rcx],al
   1400082d0:	mov    rax,QWORD PTR [rdi]
   1400082d3:	movzx  ecx,BYTE PTR [rax]
   1400082d6:	add    rax,0x1
   1400082da:	mov    QWORD PTR [rdi],rax
   1400082dd:	jmp    0x1400082ec
   1400082df:	movsx  ecx,BYTE PTR [rbx]
   1400082e2:	mov    rdx,rdi
   1400082e5:	call   0x14000b260
   1400082ea:	mov    ecx,eax
   1400082ec:	cmp    ecx,0xffffffff
   1400082ef:	je     0x140008206
   1400082f5:	add    esi,0x1
   1400082f8:	add    rbx,0x1
   1400082fc:	cmp    esi,DWORD PTR [rsp+0x20]
   140008300:	jl     0x1400082c2
   140008302:	mov    ax,bp
   140008305:	jmp    0x140008327
   140008307:	add    DWORD PTR [rdi+0x8],0xfffffffe
   14000830b:	js     0x14000831c
   14000830d:	mov    rax,QWORD PTR [rdi]
   140008310:	mov    WORD PTR [rax],bp
   140008313:	add    QWORD PTR [rdi],0x2
   140008317:	mov    ax,bp
   14000831a:	jmp    0x140008327
   14000831c:	mov    rdx,rdi
   14000831f:	movzx  ecx,bp
   140008322:	call   0x14000adc0
   140008327:	mov    rcx,QWORD PTR [rsp+0x30]
   14000832c:	xor    rcx,rsp
   14000832f:	call   0x1400020b0
   140008334:	mov    rbx,QWORD PTR [rsp+0x70]
   140008339:	mov    rbp,QWORD PTR [rsp+0x78]
   14000833e:	add    rsp,0x40
   140008342:	pop    r12
   140008344:	pop    rdi
   140008345:	pop    rsi
   140008346:	ret    
   140008347:	int3   
   140008348:	int3   
   140008349:	int3   
   14000834a:	int3   
   14000834b:	int3   
   14000834c:	int3   
   14000834d:	int3   
   14000834e:	int3   
   14000834f:	int3   
   140008350:	mov    QWORD PTR [rsp+0x8],rbx
   140008355:	push   rdi
   140008356:	sub    rsp,0x20
   14000835a:	lea    rbx,[rip+0xcdef]        # 0x140015150
   140008361:	mov    edi,0xa
   140008366:	mov    rcx,QWORD PTR [rbx]
   140008369:	call   0x140005d90
   14000836e:	add    rbx,0x8
   140008372:	sub    rdi,0x1
   140008376:	mov    QWORD PTR [rbx-0x8],rax
   14000837a:	jne    0x140008366
   14000837c:	mov    rbx,QWORD PTR [rsp+0x30]
   140008381:	add    rsp,0x20
   140008385:	pop    rdi
   140008386:	ret    
   140008387:	int3   
   140008388:	int3   
   140008389:	int3   
   14000838a:	int3   
   14000838b:	int3   
   14000838c:	int3   
   14000838d:	int3   
   14000838e:	int3   
   14000838f:	int3   
   140008390:	mov    rcx,QWORD PTR [rip+0xbcc9]        # 0x140014060
   140008397:	xor    eax,eax
   140008399:	or     rcx,0x1
   14000839d:	cmp    QWORD PTR [rip+0xe0c4],rcx        # 0x140016468
   1400083a4:	sete   al
   1400083a7:	ret    
   1400083a8:	int3   
   1400083a9:	int3   
   1400083aa:	int3   
   1400083ab:	int3   
   1400083ac:	int3   
   1400083ad:	int3   
   1400083ae:	int3   
   1400083af:	int3   
   1400083b0:	rex push rbx
   1400083b2:	sub    rsp,0x40
   1400083b6:	mov    QWORD PTR [rsp+0x58],rsi
   1400083bb:	mov    QWORD PTR [rsp+0x60],rdi
   1400083c0:	xor    dil,dil
   1400083c3:	test   rdx,rdx
   1400083c6:	mov    QWORD PTR [rsp+0x68],r12
   1400083cb:	mov    BYTE PTR [rsp+0x38],dil
   1400083d0:	mov    r12d,ecx
   1400083d3:	jne    0x140008449
   1400083d5:	mov    QWORD PTR [rsp+0x50],rbp
   1400083da:	call   0x140006240
   1400083df:	mov    rsi,QWORD PTR [rax+0xc0]
   1400083e6:	mov    rbp,QWORD PTR [rax+0xb8]
   1400083ed:	mov    rbx,rax
   1400083f0:	cmp    rsi,QWORD PTR [rip+0xcd39]        # 0x140015130
   1400083f7:	je     0x14000840f
   1400083f9:	mov    edx,DWORD PTR [rax+0xc8]
   1400083ff:	test   DWORD PTR [rip+0xcbb3],edx        # 0x140014fb8
   140008405:	jne    0x14000840f
   140008407:	call   0x140008030
   14000840c:	mov    rsi,rax
   14000840f:	cmp    rbp,QWORD PTR [rip+0xca9a]        # 0x140014eb0
   140008416:	mov    rbp,QWORD PTR [rsp+0x50]
   14000841b:	je     0x140008430
   14000841d:	mov    ecx,DWORD PTR [rbx+0xc8]
   140008423:	test   DWORD PTR [rip+0xcb8f],ecx        # 0x140014fb8
   140008429:	jne    0x140008430
   14000842b:	call   0x1400074e0
   140008430:	mov    ecx,DWORD PTR [rbx+0xc8]
   140008436:	test   cl,0x2
   140008439:	jne    0x14000846b
   14000843b:	or     ecx,0x2
   14000843e:	mov    dil,0x1
   140008441:	mov    DWORD PTR [rbx+0xc8],ecx
   140008447:	jmp    0x14000846b
   140008449:	mov    rax,QWORD PTR [rdx]
   14000844c:	lea    rcx,[rsp+0x20]
   140008451:	mov    QWORD PTR [rcx],rax
   140008454:	mov    rax,QWORD PTR [rdx+0x8]
   140008458:	mov    QWORD PTR [rcx+0x8],rax
   14000845c:	movzx  edi,BYTE PTR [rsp+0x38]
   140008461:	mov    rbx,QWORD PTR [rsp+0x30]
   140008466:	mov    rsi,QWORD PTR [rsp+0x20]
   14000846b:	mov    rax,QWORD PTR [rsi+0x140]
   140008472:	mov    rsi,QWORD PTR [rsp+0x58]
   140008477:	movzx  ecx,r12b
   14000847b:	mov    ax,WORD PTR [rax+rcx*2]
   14000847f:	mov    r12,QWORD PTR [rsp+0x68]
   140008484:	and    eax,0x8000
   140008489:	test   dil,dil
   14000848c:	mov    rdi,QWORD PTR [rsp+0x60]
   140008491:	je     0x14000849a
   140008493:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14000849a:	add    rsp,0x40
   14000849e:	pop    rbx
   14000849f:	ret    
   1400084a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400084a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400084aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400084af:	mov    QWORD PTR [rsp+0x20],rdi
   1400084b4:	push   r12
   1400084b6:	sub    rsp,0x20
   1400084ba:	mov    r12d,ecx
   1400084bd:	xor    bpl,bpl
   1400084c0:	call   0x140006240
   1400084c5:	mov    rsi,QWORD PTR [rax+0xc0]
   1400084cc:	mov    rdi,QWORD PTR [rax+0xb8]
   1400084d3:	mov    rbx,rax
   1400084d6:	cmp    rsi,QWORD PTR [rip+0xcc53]        # 0x140015130
   1400084dd:	je     0x1400084f5
   1400084df:	mov    edx,DWORD PTR [rax+0xc8]
   1400084e5:	test   DWORD PTR [rip+0xcacd],edx        # 0x140014fb8
   1400084eb:	jne    0x1400084f5
   1400084ed:	call   0x140008030
   1400084f2:	mov    rsi,rax
   1400084f5:	cmp    rdi,QWORD PTR [rip+0xc9b4]        # 0x140014eb0
   1400084fc:	je     0x140008511
   1400084fe:	mov    ecx,DWORD PTR [rbx+0xc8]
   140008504:	test   DWORD PTR [rip+0xcaae],ecx        # 0x140014fb8
   14000850a:	jne    0x140008511
   14000850c:	call   0x1400074e0
   140008511:	mov    ecx,DWORD PTR [rbx+0xc8]
   140008517:	test   cl,0x2
   14000851a:	jne    0x140008528
   14000851c:	or     ecx,0x2
   14000851f:	mov    bpl,0x1
   140008522:	mov    DWORD PTR [rbx+0xc8],ecx
   140008528:	mov    rax,QWORD PTR [rsi+0x140]
   14000852f:	movzx  ecx,r12b
   140008533:	mov    ax,WORD PTR [rax+rcx*2]
   140008537:	and    eax,0x8000
   14000853c:	test   bpl,bpl
   14000853f:	je     0x140008548
   140008541:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   140008548:	mov    rbx,QWORD PTR [rsp+0x30]
   14000854d:	mov    rbp,QWORD PTR [rsp+0x38]
   140008552:	mov    rsi,QWORD PTR [rsp+0x40]
   140008557:	mov    rdi,QWORD PTR [rsp+0x48]
   14000855c:	add    rsp,0x20
   140008560:	pop    r12
   140008562:	ret    
   140008563:	int3   
   140008564:	int3   
   140008565:	int3   
   140008566:	int3   
   140008567:	int3   
   140008568:	int3   
   140008569:	int3   
   14000856a:	int3   
   14000856b:	int3   
   14000856c:	int3   
   14000856d:	int3   
   14000856e:	int3   
   14000856f:	int3   
   140008570:	mov    QWORD PTR [rsp+0x8],rbx
   140008575:	mov    QWORD PTR [rsp+0x10],rsi
   14000857a:	push   rdi
   14000857b:	sub    rsp,0x50
   14000857f:	test   rdx,rdx
   140008582:	mov    rsi,r8
   140008585:	mov    rdi,rdx
   140008588:	mov    rbx,rcx
   14000858b:	je     0x1400085a1
   14000858d:	test   r8,r8
   140008590:	je     0x1400085a1
   140008592:	cmp    BYTE PTR [rdx],0x0
   140008595:	jne    0x1400085b3
   140008597:	test   rcx,rcx
   14000859a:	je     0x1400085a1
   14000859c:	mov    WORD PTR [rcx],0x0
   1400085a1:	xor    eax,eax
   1400085a3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400085a8:	mov    rsi,QWORD PTR [rsp+0x68]
   1400085ad:	add    rsp,0x50
   1400085b1:	pop    rdi
   1400085b2:	ret    
   1400085b3:	test   r9,r9
   1400085b6:	mov    BYTE PTR [rsp+0x48],0x0
   1400085bb:	jne    0x140008652
   1400085c1:	call   0x140006240
   1400085c6:	mov    QWORD PTR [rsp+0x40],rax
   1400085cb:	mov    r11,rax
   1400085ce:	mov    rcx,QWORD PTR [rax+0xc0]
   1400085d5:	cmp    rcx,QWORD PTR [rip+0xcb54]        # 0x140015130
   1400085dc:	mov    QWORD PTR [rsp+0x30],rcx
   1400085e1:	mov    rax,QWORD PTR [rax+0xb8]
   1400085e8:	mov    QWORD PTR [rsp+0x38],rax
   1400085ed:	je     0x140008612
   1400085ef:	mov    ecx,DWORD PTR [r11+0xc8]
   1400085f6:	test   DWORD PTR [rip+0xc9bc],ecx        # 0x140014fb8
   1400085fc:	jne    0x140008612
   1400085fe:	call   0x140008030
   140008603:	mov    r11,QWORD PTR [rsp+0x40]
   140008608:	mov    QWORD PTR [rsp+0x30],rax
   14000860d:	mov    rax,QWORD PTR [rsp+0x38]
   140008612:	cmp    rax,QWORD PTR [rip+0xc897]        # 0x140014eb0
   140008619:	je     0x140008639
   14000861b:	mov    eax,DWORD PTR [r11+0xc8]
   140008622:	test   DWORD PTR [rip+0xc990],eax        # 0x140014fb8
   140008628:	jne    0x140008639
   14000862a:	call   0x1400074e0
   14000862f:	mov    r11,QWORD PTR [rsp+0x40]
   140008634:	mov    QWORD PTR [rsp+0x38],rax
   140008639:	test   BYTE PTR [r11+0xc8],0x2
   140008641:	jne    0x14000866a
   140008643:	or     DWORD PTR [r11+0xc8],0x2
   14000864b:	mov    BYTE PTR [rsp+0x48],0x1
   140008650:	jmp    0x140008665
   140008652:	mov    rax,QWORD PTR [r9]
   140008655:	lea    rcx,[rsp+0x30]
   14000865a:	mov    QWORD PTR [rcx],rax
   14000865d:	mov    rax,QWORD PTR [r9+0x8]
   140008661:	mov    QWORD PTR [rcx+0x8],rax
   140008665:	mov    r11,QWORD PTR [rsp+0x40]
   14000866a:	mov    rax,QWORD PTR [rsp+0x30]
   14000866f:	cmp    DWORD PTR [rax+0x14],0x0
   140008673:	jne    0x1400086a4
   140008675:	test   rbx,rbx
   140008678:	je     0x140008680
   14000867a:	movzx  eax,BYTE PTR [rdi]
   14000867d:	mov    WORD PTR [rbx],ax
   140008680:	cmp    BYTE PTR [rsp+0x48],0x0
   140008685:	je     0x14000868f
   140008687:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14000868f:	mov    eax,0x1
   140008694:	mov    rbx,QWORD PTR [rsp+0x60]
   140008699:	mov    rsi,QWORD PTR [rsp+0x68]
   14000869e:	add    rsp,0x50
   1400086a2:	pop    rdi
   1400086a3:	ret    
   1400086a4:	movzx  ecx,BYTE PTR [rdi]
   1400086a7:	lea    rdx,[rsp+0x30]
   1400086ac:	call   0x1400083b0
   1400086b1:	test   eax,eax
   1400086b3:	je     0x14000876b
   1400086b9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400086be:	mov    r9d,DWORD PTR [rcx+0x10c]
   1400086c5:	cmp    r9d,0x1
   1400086c9:	jle    0x1400086fb
   1400086cb:	cmp    esi,r9d
   1400086ce:	jl     0x1400086fb
   1400086d0:	mov    ecx,DWORD PTR [rcx+0x4]
   1400086d3:	xor    eax,eax
   1400086d5:	test   rbx,rbx
   1400086d8:	setne  al
   1400086db:	mov    r8,rdi
   1400086de:	mov    edx,0x9
   1400086e3:	mov    DWORD PTR [rsp+0x28],eax
   1400086e7:	mov    QWORD PTR [rsp+0x20],rbx
   1400086ec:	call   QWORD PTR [rip+0x6a46]        # 0x14000f138
   1400086f2:	test   eax,eax
   1400086f4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400086f9:	jne    0x14000870d
   1400086fb:	movsxd rax,DWORD PTR [rcx+0x10c]
   140008702:	cmp    rsi,rax
   140008705:	jb     0x14000873a
   140008707:	cmp    BYTE PTR [rdi+0x1],0x0
   14000870b:	je     0x14000873a
   14000870d:	cmp    BYTE PTR [rsp+0x48],0x0
   140008712:	mov    eax,DWORD PTR [rcx+0x10c]
   140008718:	je     0x1400085a3
   14000871e:	mov    rcx,QWORD PTR [rsp+0x40]
   140008723:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000872a:	mov    rbx,QWORD PTR [rsp+0x60]
   14000872f:	mov    rsi,QWORD PTR [rsp+0x68]
   140008734:	add    rsp,0x50
   140008738:	pop    rdi
   140008739:	ret    
   14000873a:	call   0x140004100
   14000873f:	mov    DWORD PTR [rax],0x2a
   140008745:	cmp    BYTE PTR [rsp+0x48],0x0
   14000874a:	je     0x140008758
   14000874c:	mov    rax,QWORD PTR [rsp+0x40]
   140008751:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140008758:	or     eax,0xffffffff
   14000875b:	mov    rbx,QWORD PTR [rsp+0x60]
   140008760:	mov    rsi,QWORD PTR [rsp+0x68]
   140008765:	add    rsp,0x50
   140008769:	pop    rdi
   14000876a:	ret    
   14000876b:	xor    eax,eax
   14000876d:	mov    r9d,0x1
   140008773:	test   rbx,rbx
   140008776:	setne  al
   140008779:	lea    edx,[r9+0x8]
   14000877d:	mov    r8,rdi
   140008780:	mov    DWORD PTR [rsp+0x28],eax
   140008784:	mov    rax,QWORD PTR [rsp+0x30]
   140008789:	mov    QWORD PTR [rsp+0x20],rbx
   14000878e:	mov    ecx,DWORD PTR [rax+0x4]
   140008791:	call   QWORD PTR [rip+0x69a1]        # 0x14000f138
   140008797:	test   eax,eax
   140008799:	je     0x14000873a
   14000879b:	cmp    BYTE PTR [rsp+0x48],0x0
   1400087a0:	je     0x1400087ae
   1400087a2:	mov    rax,QWORD PTR [rsp+0x40]
   1400087a7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400087ae:	mov    rbx,QWORD PTR [rsp+0x60]
   1400087b3:	mov    rsi,QWORD PTR [rsp+0x68]
   1400087b8:	mov    eax,0x1
   1400087bd:	add    rsp,0x50
   1400087c1:	pop    rdi
   1400087c2:	ret    
   1400087c3:	int3   
   1400087c4:	int3   
   1400087c5:	int3   
   1400087c6:	int3   
   1400087c7:	int3   
   1400087c8:	int3   
   1400087c9:	int3   
   1400087ca:	int3   
   1400087cb:	int3   
   1400087cc:	int3   
   1400087cd:	int3   
   1400087ce:	int3   
   1400087cf:	int3   
   1400087d0:	xor    r9d,r9d
   1400087d3:	jmp    0x140008570
   1400087d8:	int3   
   1400087d9:	int3   
   1400087da:	int3   
   1400087db:	int3   
   1400087dc:	int3   
   1400087dd:	int3   
   1400087de:	int3   
   1400087df:	int3   
   1400087e0:	mov    DWORD PTR [rip+0xde4a],0x0        # 0x140016634
   1400087ea:	ret    
   1400087eb:	int3   
   1400087ec:	int3   
   1400087ed:	int3   
   1400087ee:	int3   
   1400087ef:	int3   
   1400087f0:	sub    rsp,0x38
   1400087f4:	test   rcx,rcx
   1400087f7:	mov    r9,rcx
   1400087fa:	je     0x140008809
   1400087fc:	test   rdx,rdx
   1400087ff:	je     0x140008809
   140008801:	test   r8,r8
   140008804:	jne    0x140008840
   140008806:	mov    BYTE PTR [rcx],r8b
   140008809:	call   0x140004100
   14000880e:	xor    r9d,r9d
   140008811:	xor    r8d,r8d
   140008814:	xor    edx,edx
   140008816:	xor    ecx,ecx
   140008818:	mov    QWORD PTR [rsp+0x20],0x0
   140008821:	mov    DWORD PTR [rax],0x16
   140008827:	call   0x140003fa0
   14000882c:	mov    eax,0x16
   140008831:	add    rsp,0x38
   140008835:	ret    
   140008836:	data16 data16 xchg ax,ax
   14000883a:	data16 xchg ax,ax
   14000883d:	data16 xchg ax,ax
   140008840:	movzx  eax,BYTE PTR [r8]
   140008844:	add    rcx,0x1
   140008848:	add    r8,0x1
   14000884c:	test   al,al
   14000884e:	mov    BYTE PTR [rcx-0x1],al
   140008851:	je     0x140008859
   140008853:	sub    rdx,0x1
   140008857:	jne    0x140008840
   140008859:	test   rdx,rdx
   14000885c:	jne    0x14000888e
   14000885e:	mov    BYTE PTR [r9],dl
   140008861:	call   0x140004100
   140008866:	xor    r9d,r9d
   140008869:	xor    r8d,r8d
   14000886c:	xor    edx,edx
   14000886e:	xor    ecx,ecx
   140008870:	mov    DWORD PTR [rax],0x22
   140008876:	mov    QWORD PTR [rsp+0x20],0x0
   14000887f:	call   0x140003fa0
   140008884:	mov    eax,0x22
   140008889:	add    rsp,0x38
   14000888d:	ret    
   14000888e:	xor    eax,eax
   140008890:	add    rsp,0x38
   140008894:	ret    
   140008895:	int3   
   140008896:	int3   
   140008897:	int3   
   140008898:	int3   
   140008899:	int3   
   14000889a:	int3   
   14000889b:	int3   
   14000889c:	int3   
   14000889d:	int3   
   14000889e:	int3   
   14000889f:	int3   
   1400088a0:	sub    rsp,0x28
   1400088a4:	call   0x140006240
   1400088a9:	mov    rcx,QWORD PTR [rax+0xd0]
   1400088b0:	test   rcx,rcx
   1400088b3:	je     0x1400088b9
   1400088b5:	call   rcx
   1400088b7:	jmp    0x1400088b9
   1400088b9:	call   0x14000b450
   1400088be:	add    rsp,0x28
   1400088c2:	ret    
   1400088c3:	int3   
   1400088c4:	int3   
   1400088c5:	int3   
   1400088c6:	int3   
   1400088c7:	int3   
   1400088c8:	int3   
   1400088c9:	int3   
   1400088ca:	int3   
   1400088cb:	int3   
   1400088cc:	int3   
   1400088cd:	int3   
   1400088ce:	int3   
   1400088cf:	int3   
   1400088d0:	sub    rsp,0x28
   1400088d4:	mov    rcx,QWORD PTR [rip+0xdc05]        # 0x1400164e0
   1400088db:	call   0x140005f50
   1400088e0:	test   rax,rax
   1400088e3:	je     0x1400088e9
   1400088e5:	call   rax
   1400088e7:	jmp    0x1400088e9
   1400088e9:	call   0x1400088a0
   1400088ee:	int3   
   1400088ef:	add    rsp,0x28
   1400088f3:	ret    
   1400088f4:	int3   
   1400088f5:	int3   
   1400088f6:	int3   
   1400088f7:	int3   
   1400088f8:	int3   
   1400088f9:	int3   
   1400088fa:	int3   
   1400088fb:	int3   
   1400088fc:	int3   
   1400088fd:	int3   
   1400088fe:	int3   
   1400088ff:	int3   
   140008900:	sub    rsp,0x28
   140008904:	lea    rcx,[rip+0xffffffffffffff95]        # 0x1400088a0
   14000890b:	call   0x140005d90
   140008910:	mov    QWORD PTR [rip+0xdbc9],rax        # 0x1400164e0
   140008917:	add    rsp,0x28
   14000891b:	ret    
   14000891c:	int3   
   14000891d:	int3   
   14000891e:	int3   
   14000891f:	int3   
   140008920:	mov    QWORD PTR [rip+0xdbc1],rcx        # 0x1400164e8
   140008927:	mov    QWORD PTR [rip+0xdbc2],rcx        # 0x1400164f0
   14000892e:	mov    QWORD PTR [rip+0xdbc3],rcx        # 0x1400164f8
   140008935:	mov    QWORD PTR [rip+0xdbc4],rcx        # 0x140016500
   14000893c:	ret    
   14000893d:	int3   
   14000893e:	int3   
   14000893f:	int3   
   140008940:	mov    rcx,QWORD PTR [rip+0xdbb1]        # 0x1400164f8
   140008947:	jmp    0x140005f50
   14000894c:	int3   
   14000894d:	int3   
   14000894e:	int3   
   14000894f:	int3   
   140008950:	mov    QWORD PTR [rsp+0x10],rbx
   140008955:	mov    QWORD PTR [rsp+0x18],rsi
   14000895a:	push   rdi
   14000895b:	push   r12
   14000895d:	push   r13
   14000895f:	push   r14
   140008961:	push   r15
   140008963:	sub    rsp,0x40
   140008967:	mov    ebx,ecx
   140008969:	xor    r14d,r14d
   14000896c:	mov    edi,r14d
   14000896f:	mov    DWORD PTR [rsp+0x70],r14d
   140008974:	mov    rsi,r14
   140008977:	lea    eax,[rcx-0x2]
   14000897a:	cmp    eax,0x14
   14000897d:	ja     0x140008b6e
   140008983:	cdqe   
   140008985:	lea    rcx,[rip+0xffffffffffff7674]        # 0x140000000
   14000898c:	movzx  eax,BYTE PTR [rcx+rax*1+0x8bc4]
   140008994:	mov    edx,DWORD PTR [rcx+rax*4+0x8bac]
   14000899b:	add    rdx,rcx
   14000899e:	jmp    rdx
   1400089a0:	lea    r12,[rip+0xdb41]        # 0x1400164e8
   1400089a7:	mov    rcx,QWORD PTR [rip+0xdb3a]        # 0x1400164e8
   1400089ae:	mov    edi,0x1
   1400089b3:	mov    DWORD PTR [rsp+0x70],edi
   1400089b7:	jmp    0x140008a02
   1400089b9:	lea    r12,[rip+0xdb30]        # 0x1400164f0
   1400089c0:	mov    rcx,QWORD PTR [rip+0xdb29]        # 0x1400164f0
   1400089c7:	mov    edi,0x1
   1400089cc:	mov    DWORD PTR [rsp+0x70],edi
   1400089d0:	jmp    0x140008a02
   1400089d2:	lea    r12,[rip+0xdb1f]        # 0x1400164f8
   1400089d9:	mov    rcx,QWORD PTR [rip+0xdb18]        # 0x1400164f8
   1400089e0:	mov    edi,0x1
   1400089e5:	mov    DWORD PTR [rsp+0x70],edi
   1400089e9:	jmp    0x140008a02
   1400089eb:	lea    r12,[rip+0xdb0e]        # 0x140016500
   1400089f2:	mov    rcx,QWORD PTR [rip+0xdb07]        # 0x140016500
   1400089f9:	mov    edi,0x1
   1400089fe:	mov    DWORD PTR [rsp+0x70],edi
   140008a02:	call   0x140005f50
   140008a07:	mov    r13,rax
   140008a0a:	jmp    0x140008a69
   140008a0c:	call   0x1400061b0
   140008a11:	mov    rsi,rax
   140008a14:	test   rax,rax
   140008a17:	jne    0x140008a21
   140008a19:	or     eax,0xffffffff
   140008a1c:	jmp    0x140008b90
   140008a21:	mov    rdx,QWORD PTR [rax+0xa0]
   140008a28:	mov    rcx,rdx
   140008a2b:	movsxd r8,DWORD PTR [rip+0xbdaa]        # 0x1400147dc
   140008a32:	cmp    DWORD PTR [rcx+0x4],ebx
   140008a35:	je     0x140008a4a
   140008a37:	add    rcx,0x10
   140008a3b:	mov    rax,r8
   140008a3e:	shl    rax,0x4
   140008a42:	add    rax,rdx
   140008a45:	cmp    rcx,rax
   140008a48:	jb     0x140008a32
   140008a4a:	mov    rax,r8
   140008a4d:	shl    rax,0x4
   140008a51:	add    rax,rdx
   140008a54:	cmp    rcx,rax
   140008a57:	jae    0x140008a5e
   140008a59:	cmp    DWORD PTR [rcx+0x4],ebx
   140008a5c:	je     0x140008a61
   140008a5e:	mov    rcx,r14
   140008a61:	lea    r12,[rcx+0x8]
   140008a65:	mov    r13,QWORD PTR [r12]
   140008a69:	cmp    r13,0x1
   140008a6d:	jne    0x140008a76
   140008a6f:	xor    eax,eax
   140008a71:	jmp    0x140008b90
   140008a76:	test   r13,r13
   140008a79:	jne    0x140008a85
   140008a7b:	lea    ecx,[r13+0x3]
   140008a7f:	call   0x140004b30
   140008a84:	int3   
   140008a85:	test   edi,edi
   140008a87:	je     0x140008a91
   140008a89:	xor    ecx,ecx
   140008a8b:	call   0x140007100
   140008a90:	nop
   140008a91:	cmp    ebx,0x8
   140008a94:	je     0x140008aac
   140008a96:	cmp    ebx,0xb
   140008a99:	je     0x140008aac
   140008a9b:	cmp    ebx,0x4
   140008a9e:	je     0x140008aac
   140008aa0:	mov    r15,QWORD PTR [rsp+0x38]
   140008aa5:	mov    r14d,DWORD PTR [rsp+0x70]
   140008aaa:	jmp    0x140008adc
   140008aac:	mov    r15,QWORD PTR [rsi+0xa8]
   140008ab3:	mov    QWORD PTR [rsp+0x38],r15
   140008ab8:	mov    QWORD PTR [rsi+0xa8],r14
   140008abf:	cmp    ebx,0x8
   140008ac2:	jne    0x140008ad7
   140008ac4:	mov    r14d,DWORD PTR [rsi+0xb0]
   140008acb:	mov    DWORD PTR [rsi+0xb0],0x8c
   140008ad5:	jmp    0x140008adc
   140008ad7:	mov    r14d,DWORD PTR [rsp+0x70]
   140008adc:	cmp    ebx,0x8
   140008adf:	jne    0x140008b1d
   140008ae1:	mov    ecx,DWORD PTR [rip+0xbce9]        # 0x1400147d0
   140008ae7:	mov    edx,ecx
   140008ae9:	mov    DWORD PTR [rsp+0x30],ecx
   140008aed:	xor    r8d,r8d
   140008af0:	mov    eax,DWORD PTR [rip+0xbcde]        # 0x1400147d4
   140008af6:	add    ecx,eax
   140008af8:	cmp    edx,ecx
   140008afa:	jge    0x140008b26
   140008afc:	movsxd rcx,edx
   140008aff:	add    rcx,rcx
   140008b02:	mov    rax,QWORD PTR [rsi+0xa0]
   140008b09:	mov    QWORD PTR [rax+rcx*8+0x8],r8
   140008b0e:	add    edx,0x1
   140008b11:	mov    DWORD PTR [rsp+0x30],edx
   140008b15:	mov    ecx,DWORD PTR [rip+0xbcb5]        # 0x1400147d0
   140008b1b:	jmp    0x140008af0
   140008b1d:	call   0x140005e60
   140008b22:	mov    QWORD PTR [r12],rax
   140008b26:	test   edi,edi
   140008b28:	je     0x140008b31
   140008b2a:	xor    ecx,ecx
   140008b2c:	call   0x140006fd0
   140008b31:	cmp    ebx,0x8
   140008b34:	jne    0x140008b43
   140008b36:	mov    edx,DWORD PTR [rsi+0xb0]
   140008b3c:	mov    ecx,ebx
   140008b3e:	call   r13
   140008b41:	jmp    0x140008b48
   140008b43:	mov    ecx,ebx
   140008b45:	call   r13
   140008b48:	cmp    ebx,0x8
   140008b4b:	je     0x140008b57
   140008b4d:	cmp    ebx,0xb
   140008b50:	je     0x140008b57
   140008b52:	cmp    ebx,0x4
   140008b55:	jne    0x140008b6a
   140008b57:	mov    QWORD PTR [rsi+0xa8],r15
   140008b5e:	cmp    ebx,0x8
   140008b61:	jne    0x140008b6a
   140008b63:	mov    DWORD PTR [rsi+0xb0],r14d
   140008b6a:	xor    eax,eax
   140008b6c:	jmp    0x140008b90
   140008b6e:	call   0x140004100
   140008b73:	mov    DWORD PTR [rax],0x16
   140008b79:	mov    QWORD PTR [rsp+0x20],r14
   140008b7e:	xor    r9d,r9d
   140008b81:	xor    r8d,r8d
   140008b84:	xor    edx,edx
   140008b86:	xor    ecx,ecx
   140008b88:	call   0x140003fa0
   140008b8d:	or     eax,0xffffffff
   140008b90:	mov    rbx,QWORD PTR [rsp+0x78]
   140008b95:	mov    rsi,QWORD PTR [rsp+0x80]
   140008b9d:	add    rsp,0x40
   140008ba1:	pop    r15
   140008ba3:	pop    r14
   140008ba5:	pop    r13
   140008ba7:	pop    r12
   140008ba9:	pop    rdi
   140008baa:	ret    
   140008bab:	nop
   140008bac:	movabs al,ds:0xd200008a0c000089
   140008bb5:	mov    DWORD PTR [rax],eax
   140008bb7:	add    bl,ch
   140008bb9:	mov    DWORD PTR [rax],eax
   140008bbb:	add    BYTE PTR [rcx+0x6e000089],bh
   140008bc1:	mov    eax,DWORD PTR [rax]
   140008bc3:	add    BYTE PTR [rax],al
   140008bc5:	add    eax,0x5020501
   140008bca:	add    DWORD PTR [rip+0x5050105],eax        # 0x145058cd5
   140008bd0:	add    eax,0x5050503
   140008bd5:	add    eax,0xcc020405
   140008bda:	int3   
   140008bdb:	int3   
   140008bdc:	int3   
   140008bdd:	int3   
   140008bde:	int3   
   140008bdf:	int3   
   140008be0:	rex push rbp
   140008be2:	sub    rsp,0x30
   140008be6:	mov    rbp,rdx
   140008be9:	cmp    DWORD PTR [rbp+0x70],0x0
   140008bed:	je     0x140008bf6
   140008bef:	xor    ecx,ecx
   140008bf1:	call   0x140006fd0
   140008bf6:	add    rsp,0x30
   140008bfa:	pop    rbp
   140008bfb:	ret    
   140008bfc:	int3   
   140008bfd:	int3   
   140008bfe:	int3   
   140008bff:	int3   
   140008c00:	mov    QWORD PTR [rip+0xd909],rcx        # 0x140016510
   140008c07:	ret    
   140008c08:	int3   
   140008c09:	int3   
   140008c0a:	int3   
   140008c0b:	int3   
   140008c0c:	int3   
   140008c0d:	int3   
   140008c0e:	int3   
   140008c0f:	int3   
   140008c10:	mov    QWORD PTR [rip+0xd909],rcx        # 0x140016520
   140008c17:	ret    
   140008c18:	int3   
   140008c19:	int3   
   140008c1a:	int3   
   140008c1b:	int3   
   140008c1c:	int3   
   140008c1d:	int3   
   140008c1e:	int3   
   140008c1f:	int3   
   140008c20:	mov    QWORD PTR [rip+0xd901],rcx        # 0x140016528
   140008c27:	ret    
   140008c28:	int3   
   140008c29:	int3   
   140008c2a:	int3   
   140008c2b:	int3   
   140008c2c:	int3   
   140008c2d:	int3   
   140008c2e:	int3   
   140008c2f:	int3   
   140008c30:	sub    rsp,0x28
   140008c34:	call   QWORD PTR [rip+0x6456]        # 0x14000f090
   140008c3a:	mov    eax,0x1
   140008c3f:	add    rsp,0x28
   140008c43:	ret    
   140008c44:	int3   
   140008c45:	int3   
   140008c46:	int3   
   140008c47:	int3   
   140008c48:	int3   
   140008c49:	int3   
   140008c4a:	int3   
   140008c4b:	int3   
   140008c4c:	int3   
   140008c4d:	int3   
   140008c4e:	int3   
   140008c4f:	int3   
   140008c50:	mov    QWORD PTR [rsp+0x8],rbx
   140008c55:	mov    QWORD PTR [rsp+0x10],rsi
   140008c5a:	mov    QWORD PTR [rsp+0x20],rdi
   140008c5f:	push   r12
   140008c61:	sub    rsp,0x40
   140008c65:	mov    esi,edx
   140008c67:	mov    r12,rcx
   140008c6a:	xor    edi,edi
   140008c6c:	mov    DWORD PTR [rsp+0x60],edi
   140008c70:	mov    rcx,QWORD PTR [rip+0xd8b1]        # 0x140016528
   140008c77:	call   0x140005f50
   140008c7c:	mov    rbx,rax
   140008c7f:	test   rax,rax
   140008c82:	jne    0x140008cff
   140008c84:	lea    rcx,[rsp+0x60]
   140008c89:	call   0x140004870
   140008c8e:	test   eax,eax
   140008c90:	je     0x140008ca6
   140008c92:	mov    QWORD PTR [rsp+0x20],rdi
   140008c97:	xor    r9d,r9d
   140008c9a:	xor    r8d,r8d
   140008c9d:	xor    edx,edx
   140008c9f:	xor    ecx,ecx
   140008ca1:	call   0x140003f00
   140008ca6:	cmp    DWORD PTR [rsp+0x60],0x1
   140008cab:	jne    0x140008cb6
   140008cad:	lea    rbx,[rip+0xffffffffffffff7c]        # 0x140008c30
   140008cb4:	jmp    0x140008cf0
   140008cb6:	lea    rcx,[rip+0x780b]        # 0x1400104c8
   140008cbd:	call   QWORD PTR [rip+0x643d]        # 0x14000f100
   140008cc3:	test   rax,rax
   140008cc6:	je     0x140008ce9
   140008cc8:	lea    rdx,[rip+0x77d1]        # 0x1400104a0
   140008ccf:	mov    rcx,rax
   140008cd2:	call   QWORD PTR [rip+0x6420]        # 0x14000f0f8
   140008cd8:	mov    rbx,rax
   140008cdb:	test   rax,rax
   140008cde:	jne    0x140008cf0
   140008ce0:	lea    rbx,[rip+0xffffffffffffff49]        # 0x140008c30
   140008ce7:	jmp    0x140008cf0
   140008ce9:	lea    rbx,[rip+0xffffffffffffff40]        # 0x140008c30
   140008cf0:	mov    rcx,rbx
   140008cf3:	call   0x140005d90
   140008cf8:	mov    QWORD PTR [rip+0xd829],rax        # 0x140016528
   140008cff:	mov    edx,esi
   140008d01:	mov    rcx,r12
   140008d04:	call   rbx
   140008d06:	mov    edi,eax
   140008d08:	mov    DWORD PTR [rsp+0x30],eax
   140008d0c:	jmp    0x140008d26
   140008d0e:	cmp    eax,0xc0000017
   140008d13:	jne    0x140008d20
   140008d15:	mov    ecx,0x8
   140008d1a:	call   QWORD PTR [rip+0x6480]        # 0x14000f1a0
   140008d20:	xor    edi,edi
   140008d22:	mov    DWORD PTR [rsp+0x30],edi
   140008d26:	mov    eax,edi
   140008d28:	mov    rbx,QWORD PTR [rsp+0x50]
   140008d2d:	mov    rsi,QWORD PTR [rsp+0x58]
   140008d32:	mov    rdi,QWORD PTR [rsp+0x68]
   140008d37:	add    rsp,0x40
   140008d3b:	pop    r12
   140008d3d:	ret    
   140008d3e:	int3   
   140008d3f:	int3   
   140008d40:	rex push rbp
   140008d42:	push   rdi
   140008d43:	sub    rsp,0x38
   140008d47:	mov    rbp,rdx
   140008d4a:	mov    rax,QWORD PTR [rcx]
   140008d4d:	xor    edi,edi
   140008d4f:	cmp    DWORD PTR [rax],0xc0000017
   140008d55:	sete   dil
   140008d59:	mov    eax,edi
   140008d5b:	add    rsp,0x38
   140008d5f:	pop    rdi
   140008d60:	pop    rbp
   140008d61:	ret    
   140008d62:	int3   
   140008d63:	int3   
   140008d64:	int3   
   140008d65:	int3   
   140008d66:	int3   
   140008d67:	int3   
   140008d68:	int3   
   140008d69:	int3   
   140008d6a:	int3   
   140008d6b:	int3   
   140008d6c:	int3   
   140008d6d:	int3   
   140008d6e:	int3   
   140008d6f:	int3   
   140008d70:	mov    QWORD PTR [rsp+0x10],rbx
   140008d75:	push   rbp
   140008d76:	push   rsi
   140008d77:	push   rdi
   140008d78:	push   r13
   140008d7a:	push   r14
   140008d7c:	sub    rsp,0x50
   140008d80:	mov    edi,r8d
   140008d83:	mov    r13,rdx
   140008d86:	mov    r14,rcx
   140008d89:	call   0x140005e60
   140008d8e:	xor    ebx,ebx
   140008d90:	cmp    QWORD PTR [rip+0xd799],rbx        # 0x140016530
   140008d97:	mov    rbp,rax
   140008d9a:	mov    DWORD PTR [rsp+0x98],ebx
   140008da1:	mov    DWORD PTR [rsp+0x30],ebx
   140008da5:	jne    0x140008e9c
   140008dab:	lea    rcx,[rip+0x7796]        # 0x140010548
   140008db2:	call   QWORD PTR [rip+0x6458]        # 0x14000f210
   140008db8:	test   rax,rax
   140008dbb:	mov    rsi,rax
   140008dbe:	je     0x140008faf
   140008dc4:	lea    rdx,[rip+0x776d]        # 0x140010538
   140008dcb:	mov    rcx,rax
   140008dce:	call   QWORD PTR [rip+0x6324]        # 0x14000f0f8
   140008dd4:	test   rax,rax
   140008dd7:	je     0x140008faf
   140008ddd:	mov    rcx,rax
   140008de0:	call   0x140005d90
   140008de5:	lea    rdx,[rip+0x773c]        # 0x140010528
   140008dec:	mov    rcx,rsi
   140008def:	mov    QWORD PTR [rip+0xd73a],rax        # 0x140016530
   140008df6:	call   QWORD PTR [rip+0x62fc]        # 0x14000f0f8
   140008dfc:	mov    rcx,rax
   140008dff:	call   0x140005d90
   140008e04:	lea    rdx,[rip+0x7705]        # 0x140010510
   140008e0b:	mov    rcx,rsi
   140008e0e:	mov    QWORD PTR [rip+0xd723],rax        # 0x140016538
   140008e15:	call   QWORD PTR [rip+0x62dd]        # 0x14000f0f8
   140008e1b:	mov    rcx,rax
   140008e1e:	call   0x140005d90
   140008e23:	lea    rcx,[rsp+0x98]
   140008e2b:	mov    QWORD PTR [rip+0xd70e],rax        # 0x140016540
   140008e32:	call   0x140004870
   140008e37:	test   eax,eax
   140008e39:	je     0x140008e4f
   140008e3b:	xor    r9d,r9d
   140008e3e:	xor    r8d,r8d
   140008e41:	xor    edx,edx
   140008e43:	xor    ecx,ecx
   140008e45:	mov    QWORD PTR [rsp+0x20],rbx
   140008e4a:	call   0x140003f00
   140008e4f:	cmp    DWORD PTR [rsp+0x98],0x2
   140008e57:	jne    0x140008e9c
   140008e59:	lea    rdx,[rip+0x7690]        # 0x1400104f0
   140008e60:	mov    rcx,rsi
   140008e63:	call   QWORD PTR [rip+0x628f]        # 0x14000f0f8
   140008e69:	mov    rcx,rax
   140008e6c:	call   0x140005d90
   140008e71:	test   rax,rax
   140008e74:	mov    QWORD PTR [rip+0xd6d5],rax        # 0x140016550
   140008e7b:	je     0x140008e9c
   140008e7d:	lea    rdx,[rip+0x7654]        # 0x1400104d8
   140008e84:	mov    rcx,rsi
   140008e87:	call   QWORD PTR [rip+0x626b]        # 0x14000f0f8
   140008e8d:	mov    rcx,rax
   140008e90:	call   0x140005d90
   140008e95:	mov    QWORD PTR [rip+0xd6ac],rax        # 0x140016548
   140008e9c:	mov    rcx,QWORD PTR [rip+0xd6a5]        # 0x140016548
   140008ea3:	mov    QWORD PTR [rsp+0x80],r12
   140008eab:	cmp    rcx,rbp
   140008eae:	je     0x140008f48
   140008eb4:	cmp    QWORD PTR [rip+0xd695],rbp        # 0x140016550
   140008ebb:	je     0x140008f48
   140008ec1:	call   0x140005f50
   140008ec6:	mov    rcx,QWORD PTR [rip+0xd683]        # 0x140016550
   140008ecd:	mov    rsi,rax
   140008ed0:	call   0x140005f50
   140008ed5:	test   rsi,rsi
   140008ed8:	mov    r12,rax
   140008edb:	je     0x140008f48
   140008edd:	test   rax,rax
   140008ee0:	je     0x140008f48
   140008ee2:	call   rsi
   140008ee4:	test   rax,rax
   140008ee7:	je     0x140008f13
   140008ee9:	lea    rcx,[rsp+0x34]
   140008eee:	mov    r9d,0xc
   140008ef4:	lea    r8,[rsp+0x38]
   140008ef9:	mov    QWORD PTR [rsp+0x20],rcx
   140008efe:	lea    edx,[r9-0xb]
   140008f02:	mov    rcx,rax
   140008f05:	call   r12
   140008f08:	test   eax,eax
   140008f0a:	je     0x140008f13
   140008f0c:	test   BYTE PTR [rsp+0x40],0x1
   140008f11:	jne    0x140008f48
   140008f13:	lea    rcx,[rsp+0x30]
   140008f18:	call   0x1400048c0
   140008f1d:	test   eax,eax
   140008f1f:	je     0x140008f35
   140008f21:	xor    r9d,r9d
   140008f24:	xor    r8d,r8d
   140008f27:	xor    edx,edx
   140008f29:	xor    ecx,ecx
   140008f2b:	mov    QWORD PTR [rsp+0x20],rbx
   140008f30:	call   0x140003f00
   140008f35:	cmp    DWORD PTR [rsp+0x30],0x4
   140008f3a:	jb     0x140008f42
   140008f3c:	bts    edi,0x15
   140008f40:	jmp    0x140008f86
   140008f42:	bts    edi,0x12
   140008f46:	jmp    0x140008f86
   140008f48:	mov    rcx,QWORD PTR [rip+0xd5e9]        # 0x140016538
   140008f4f:	cmp    rcx,rbp
   140008f52:	je     0x140008f86
   140008f54:	call   0x140005f50
   140008f59:	test   rax,rax
   140008f5c:	je     0x140008f86
   140008f5e:	call   rax
   140008f60:	test   rax,rax
   140008f63:	mov    rbx,rax
   140008f66:	je     0x140008f86
   140008f68:	mov    rcx,QWORD PTR [rip+0xd5d1]        # 0x140016540
   140008f6f:	cmp    rcx,rbp
   140008f72:	je     0x140008f86
   140008f74:	call   0x140005f50
   140008f79:	test   rax,rax
   140008f7c:	je     0x140008f86
   140008f7e:	mov    rcx,rbx
   140008f81:	call   rax
   140008f83:	mov    rbx,rax
   140008f86:	mov    rcx,QWORD PTR [rip+0xd5a3]        # 0x140016530
   140008f8d:	call   0x140005f50
   140008f92:	mov    r12,QWORD PTR [rsp+0x80]
   140008f9a:	test   rax,rax
   140008f9d:	je     0x140008faf
   140008f9f:	mov    r9d,edi
   140008fa2:	mov    r8,r13
   140008fa5:	mov    rdx,r14
   140008fa8:	mov    rcx,rbx
   140008fab:	call   rax
   140008fad:	jmp    0x140008fb1
   140008faf:	xor    eax,eax
   140008fb1:	mov    rbx,QWORD PTR [rsp+0x88]
   140008fb9:	add    rsp,0x50
   140008fbd:	pop    r14
   140008fbf:	pop    r13
   140008fc1:	pop    rdi
   140008fc2:	pop    rsi
   140008fc3:	pop    rbp
   140008fc4:	ret    
   140008fc5:	int3   
   140008fc6:	int3   
   140008fc7:	int3   
   140008fc8:	int3   
   140008fc9:	int3   
   140008fca:	int3   
   140008fcb:	int3   
   140008fcc:	int3   
   140008fcd:	int3   
   140008fce:	int3   
   140008fcf:	int3   
   140008fd0:	sub    rsp,0x38
   140008fd4:	test   rcx,rcx
   140008fd7:	mov    r9,rcx
   140008fda:	je     0x140008fe9
   140008fdc:	test   rdx,rdx
   140008fdf:	je     0x140008fe9
   140008fe1:	test   r8,r8
   140008fe4:	jne    0x140009016
   140008fe6:	mov    BYTE PTR [rcx],r8b
   140008fe9:	call   0x140004100
   140008fee:	xor    r9d,r9d
   140008ff1:	xor    r8d,r8d
   140008ff4:	xor    edx,edx
   140008ff6:	xor    ecx,ecx
   140008ff8:	mov    QWORD PTR [rsp+0x20],0x0
   140009001:	mov    DWORD PTR [rax],0x16
   140009007:	call   0x140003fa0
   14000900c:	mov    eax,0x16
   140009011:	add    rsp,0x38
   140009015:	ret    
   140009016:	cmp    BYTE PTR [rcx],0x0
   140009019:	je     0x140009025
   14000901b:	add    rcx,0x1
   14000901f:	sub    rdx,0x1
   140009023:	jne    0x140009016
   140009025:	test   rdx,rdx
   140009028:	jne    0x140009030
   14000902a:	mov    BYTE PTR [r9],dl
   14000902d:	jmp    0x140008fe9
   14000902f:	nop
   140009030:	movzx  eax,BYTE PTR [r8]
   140009034:	add    rcx,0x1
   140009038:	add    r8,0x1
   14000903c:	test   al,al
   14000903e:	mov    BYTE PTR [rcx-0x1],al
   140009041:	je     0x140009049
   140009043:	sub    rdx,0x1
   140009047:	jne    0x140009030
   140009049:	test   rdx,rdx
   14000904c:	jne    0x14000907e
   14000904e:	mov    BYTE PTR [r9],dl
   140009051:	call   0x140004100
   140009056:	xor    r9d,r9d
   140009059:	xor    r8d,r8d
   14000905c:	xor    edx,edx
   14000905e:	xor    ecx,ecx
   140009060:	mov    DWORD PTR [rax],0x22
   140009066:	mov    QWORD PTR [rsp+0x20],0x0
   14000906f:	call   0x140003fa0
   140009074:	mov    eax,0x22
   140009079:	add    rsp,0x38
   14000907d:	ret    
   14000907e:	xor    eax,eax
   140009080:	add    rsp,0x38
   140009084:	ret    
   140009085:	int3   
   140009086:	int3   
   140009087:	int3   
   140009088:	int3   
   140009089:	int3   
   14000908a:	int3   
   14000908b:	int3   
   14000908c:	int3   
   14000908d:	int3   
   14000908e:	int3   
   14000908f:	int3   
   140009090:	sub    rsp,0x38
   140009094:	test   r9,r9
   140009097:	mov    r11,rdx
   14000909a:	mov    r10,rcx
   14000909d:	jne    0x1400090b0
   14000909f:	test   rcx,rcx
   1400090a2:	jne    0x1400090b5
   1400090a4:	test   rdx,rdx
   1400090a7:	jne    0x1400090d1
   1400090a9:	xor    eax,eax
   1400090ab:	add    rsp,0x38
   1400090af:	ret    
   1400090b0:	test   rcx,rcx
   1400090b3:	je     0x1400090d1
   1400090b5:	test   rdx,rdx
   1400090b8:	je     0x1400090d1
   1400090ba:	test   r9,r9
   1400090bd:	jne    0x1400090c9
   1400090bf:	mov    BYTE PTR [rcx],r9b
   1400090c2:	xor    eax,eax
   1400090c4:	add    rsp,0x38
   1400090c8:	ret    
   1400090c9:	test   r8,r8
   1400090cc:	jne    0x1400090fe
   1400090ce:	mov    BYTE PTR [rcx],r8b
   1400090d1:	call   0x140004100
   1400090d6:	xor    r9d,r9d
   1400090d9:	xor    r8d,r8d
   1400090dc:	xor    edx,edx
   1400090de:	xor    ecx,ecx
   1400090e0:	mov    QWORD PTR [rsp+0x20],0x0
   1400090e9:	mov    DWORD PTR [rax],0x16
   1400090ef:	call   0x140003fa0
   1400090f4:	mov    eax,0x16
   1400090f9:	add    rsp,0x38
   1400090fd:	ret    
   1400090fe:	cmp    r9,0xffffffffffffffff
   140009102:	mov    rdx,rcx
   140009105:	mov    rcx,r11
   140009108:	jne    0x140009130
   14000910a:	data16 xchg ax,ax
   14000910d:	data16 xchg ax,ax
   140009110:	movzx  eax,BYTE PTR [r8]
   140009114:	add    rdx,0x1
   140009118:	add    r8,0x1
   14000911c:	test   al,al
   14000911e:	mov    BYTE PTR [rdx-0x1],al
   140009121:	je     0x140009157
   140009123:	sub    rcx,0x1
   140009127:	jne    0x140009110
   140009129:	jmp    0x140009157
   14000912b:	xchg   ax,ax
   14000912d:	data16 xchg ax,ax
   140009130:	movzx  eax,BYTE PTR [r8]
   140009134:	add    rdx,0x1
   140009138:	add    r8,0x1
   14000913c:	test   al,al
   14000913e:	mov    BYTE PTR [rdx-0x1],al
   140009141:	je     0x14000914f
   140009143:	sub    rcx,0x1
   140009147:	je     0x14000914f
   140009149:	sub    r9,0x1
   14000914d:	jne    0x140009130
   14000914f:	test   r9,r9
   140009152:	jne    0x140009157
   140009154:	mov    BYTE PTR [rdx],r9b
   140009157:	test   rcx,rcx
   14000915a:	jne    0x1400090a9
   140009160:	cmp    r9,0xffffffffffffffff
   140009164:	jne    0x140009173
   140009166:	mov    BYTE PTR [r10+r11*1-0x1],cl
   14000916b:	lea    eax,[rcx+0x50]
   14000916e:	add    rsp,0x38
   140009172:	ret    
   140009173:	mov    BYTE PTR [r10],0x0
   140009177:	call   0x140004100
   14000917c:	xor    r9d,r9d
   14000917f:	xor    r8d,r8d
   140009182:	xor    edx,edx
   140009184:	xor    ecx,ecx
   140009186:	mov    DWORD PTR [rax],0x22
   14000918c:	mov    QWORD PTR [rsp+0x20],0x0
   140009195:	call   0x140003fa0
   14000919a:	mov    eax,0x22
   14000919f:	add    rsp,0x38
   1400091a3:	ret    
   1400091a4:	int3   
   1400091a5:	int3   
   1400091a6:	int3   
   1400091a7:	int3   
   1400091a8:	int3   
   1400091a9:	int3   
   1400091aa:	int3   
   1400091ab:	int3   
   1400091ac:	int3   
   1400091ad:	int3   
   1400091ae:	int3   
   1400091af:	int3   
   1400091b0:	sub    rsp,0x38
   1400091b4:	test   ecx,ecx
   1400091b6:	js     0x1400091de
   1400091b8:	cmp    ecx,0x2
   1400091bb:	jle    0x1400091cd
   1400091bd:	cmp    ecx,0x3
   1400091c0:	jne    0x1400091de
   1400091c2:	mov    eax,DWORD PTR [rip+0xc4b0]        # 0x140015678
   1400091c8:	add    rsp,0x38
   1400091cc:	ret    
   1400091cd:	mov    eax,DWORD PTR [rip+0xc4a5]        # 0x140015678
   1400091d3:	mov    DWORD PTR [rip+0xc49f],ecx        # 0x140015678
   1400091d9:	add    rsp,0x38
   1400091dd:	ret    
   1400091de:	call   0x140004100
   1400091e3:	xor    r9d,r9d
   1400091e6:	xor    r8d,r8d
   1400091e9:	xor    edx,edx
   1400091eb:	xor    ecx,ecx
   1400091ed:	mov    QWORD PTR [rsp+0x20],0x0
   1400091f6:	mov    DWORD PTR [rax],0x16
   1400091fc:	call   0x140003fa0
   140009201:	or     eax,0xffffffff
   140009204:	add    rsp,0x38
   140009208:	ret    
   140009209:	int3   
   14000920a:	int3   
   14000920b:	int3   
   14000920c:	int3   
   14000920d:	int3   
   14000920e:	int3   
   14000920f:	int3   
   140009210:	sub    rsp,0x38
   140009214:	test   rcx,rcx
   140009217:	mov    r9,rcx
   14000921a:	je     0x14000922a
   14000921c:	test   rdx,rdx
   14000921f:	je     0x14000922a
   140009221:	test   r8,r8
   140009224:	jne    0x140009260
   140009226:	mov    WORD PTR [rcx],r8w
   14000922a:	call   0x140004100
   14000922f:	xor    r9d,r9d
   140009232:	xor    r8d,r8d
   140009235:	xor    edx,edx
   140009237:	xor    ecx,ecx
   140009239:	mov    QWORD PTR [rsp+0x20],0x0
   140009242:	mov    DWORD PTR [rax],0x16
   140009248:	call   0x140003fa0
   14000924d:	mov    eax,0x16
   140009252:	add    rsp,0x38
   140009256:	ret    
   140009257:	data16 xchg ax,ax
   14000925a:	data16 xchg ax,ax
   14000925d:	data16 xchg ax,ax
   140009260:	movzx  eax,WORD PTR [r8]
   140009264:	add    rcx,0x2
   140009268:	add    r8,0x2
   14000926c:	test   ax,ax
   14000926f:	mov    WORD PTR [rcx-0x2],ax
   140009273:	je     0x14000927b
   140009275:	sub    rdx,0x1
   140009279:	jne    0x140009260
   14000927b:	test   rdx,rdx
   14000927e:	jne    0x1400092b1
   140009280:	mov    WORD PTR [r9],dx
   140009284:	call   0x140004100
   140009289:	xor    r9d,r9d
   14000928c:	xor    r8d,r8d
   14000928f:	xor    edx,edx
   140009291:	xor    ecx,ecx
   140009293:	mov    DWORD PTR [rax],0x22
   140009299:	mov    QWORD PTR [rsp+0x20],0x0
   1400092a2:	call   0x140003fa0
   1400092a7:	mov    eax,0x22
   1400092ac:	add    rsp,0x38
   1400092b0:	ret    
   1400092b1:	xor    eax,eax
   1400092b3:	add    rsp,0x38
   1400092b7:	ret    
   1400092b8:	int3   
   1400092b9:	int3   
   1400092ba:	int3   
   1400092bb:	int3   
   1400092bc:	int3   
   1400092bd:	int3   
   1400092be:	int3   
   1400092bf:	int3   
   1400092c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400092c5:	push   rdi
   1400092c6:	sub    rsp,0x30
   1400092ca:	test   rcx,rcx
   1400092cd:	mov    rdi,r8
   1400092d0:	mov    rbx,rdx
   1400092d3:	je     0x140009316
   1400092d5:	xor    edx,edx
   1400092d7:	mov    rax,0xffffffffffffffe0
   1400092de:	div    rcx
   1400092e1:	cmp    rax,rbx
   1400092e4:	jae    0x140009316
   1400092e6:	call   0x140004100
   1400092eb:	xor    r9d,r9d
   1400092ee:	xor    r8d,r8d
   1400092f1:	xor    edx,edx
   1400092f3:	xor    ecx,ecx
   1400092f5:	mov    QWORD PTR [rsp+0x20],0x0
   1400092fe:	mov    DWORD PTR [rax],0xc
   140009304:	call   0x140003fa0
   140009309:	xor    eax,eax
   14000930b:	mov    rbx,QWORD PTR [rsp+0x40]
   140009310:	add    rsp,0x30
   140009314:	pop    rdi
   140009315:	ret    
   140009316:	imul   rbx,rcx
   14000931a:	mov    eax,0x1
   14000931f:	test   rbx,rbx
   140009322:	cmove  rbx,rax
   140009326:	xor    eax,eax
   140009328:	cmp    rbx,0xffffffffffffffe0
   14000932c:	ja     0x140009346
   14000932e:	mov    rcx,QWORD PTR [rip+0xce93]        # 0x1400161c8
   140009335:	lea    edx,[rax+0x8]
   140009338:	mov    r8,rbx
   14000933b:	call   QWORD PTR [rip+0x5d0f]        # 0x14000f050
   140009341:	test   rax,rax
   140009344:	jne    0x14000937e
   140009346:	cmp    DWORD PTR [rip+0xce93],0x0        # 0x1400161e0
   14000934d:	je     0x140009373
   14000934f:	mov    rcx,rbx
   140009352:	call   0x1400069f0
   140009357:	test   eax,eax
   140009359:	jne    0x140009326
   14000935b:	test   rdi,rdi
   14000935e:	je     0x140009366
   140009360:	mov    DWORD PTR [rdi],0xc
   140009366:	xor    eax,eax
   140009368:	mov    rbx,QWORD PTR [rsp+0x40]
   14000936d:	add    rsp,0x30
   140009371:	pop    rdi
   140009372:	ret    
   140009373:	test   rdi,rdi
   140009376:	je     0x14000937e
   140009378:	mov    DWORD PTR [rdi],0xc
   14000937e:	mov    rbx,QWORD PTR [rsp+0x40]
   140009383:	add    rsp,0x30
   140009387:	pop    rdi
   140009388:	ret    
   140009389:	int3   
   14000938a:	int3   
   14000938b:	int3   
   14000938c:	int3   
   14000938d:	int3   
   14000938e:	int3   
   14000938f:	int3   
   140009390:	mov    QWORD PTR [rsp+0x8],rbx
   140009395:	push   rsi
   140009396:	sub    rsp,0x30
   14000939a:	or     esi,0xffffffff
   14000939d:	test   rcx,rcx
   1400093a0:	mov    rbx,rcx
   1400093a3:	jne    0x1400093d1
   1400093a5:	call   0x140004100
   1400093aa:	xor    r9d,r9d
   1400093ad:	xor    r8d,r8d
   1400093b0:	xor    edx,edx
   1400093b2:	xor    ecx,ecx
   1400093b4:	mov    QWORD PTR [rsp+0x20],rbx
   1400093b9:	mov    DWORD PTR [rax],0x16
   1400093bf:	call   0x140003fa0
   1400093c4:	or     eax,esi
   1400093c6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400093cb:	add    rsp,0x30
   1400093cf:	pop    rsi
   1400093d0:	ret    
   1400093d1:	test   BYTE PTR [rcx+0x18],0x83
   1400093d5:	je     0x140009414
   1400093d7:	call   0x140006bf0
   1400093dc:	mov    rcx,rbx
   1400093df:	mov    esi,eax
   1400093e1:	call   0x14000b700
   1400093e6:	mov    rcx,rbx
   1400093e9:	call   0x1400071d0
   1400093ee:	mov    ecx,eax
   1400093f0:	call   0x14000b5d0
   1400093f5:	test   eax,eax
   1400093f7:	jns    0x1400093fe
   1400093f9:	or     esi,0xffffffff
   1400093fc:	jmp    0x140009414
   1400093fe:	mov    rcx,QWORD PTR [rbx+0x28]
   140009402:	test   rcx,rcx
   140009405:	je     0x140009414
   140009407:	call   0x140002700
   14000940c:	mov    QWORD PTR [rbx+0x28],0x0
   140009414:	mov    DWORD PTR [rbx+0x18],0x0
   14000941b:	mov    rbx,QWORD PTR [rsp+0x40]
   140009420:	mov    eax,esi
   140009422:	add    rsp,0x30
   140009426:	pop    rsi
   140009427:	ret    
   140009428:	int3   
   140009429:	int3   
   14000942a:	int3   
   14000942b:	int3   
   14000942c:	int3   
   14000942d:	int3   
   14000942e:	int3   
   14000942f:	int3   
   140009430:	mov    QWORD PTR [rsp+0x10],rbx
   140009435:	mov    QWORD PTR [rsp+0x8],rcx
   14000943a:	push   rdi
   14000943b:	sub    rsp,0x30
   14000943f:	mov    rbx,rcx
   140009442:	or     edi,0xffffffff
   140009445:	xor    eax,eax
   140009447:	test   rcx,rcx
   14000944a:	setne  al
   14000944d:	test   eax,eax
   14000944f:	jne    0x140009478
   140009451:	call   0x140004100
   140009456:	mov    DWORD PTR [rax],0x16
   14000945c:	mov    QWORD PTR [rsp+0x20],0x0
   140009465:	xor    r9d,r9d
   140009468:	xor    r8d,r8d
   14000946b:	xor    edx,edx
   14000946d:	xor    ecx,ecx
   14000946f:	call   0x140003fa0
   140009474:	mov    eax,edi
   140009476:	jmp    0x1400094a1
   140009478:	test   BYTE PTR [rcx+0x18],0x40
   14000947c:	je     0x140009487
   14000947e:	mov    DWORD PTR [rcx+0x18],0x0
   140009485:	jmp    0x14000949f
   140009487:	call   0x140002cb0
   14000948c:	nop
   14000948d:	mov    rcx,rbx
   140009490:	call   0x140009390
   140009495:	mov    edi,eax
   140009497:	mov    rcx,rbx
   14000949a:	call   0x140002d60
   14000949f:	mov    eax,edi
   1400094a1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400094a6:	add    rsp,0x30
   1400094aa:	pop    rdi
   1400094ab:	ret    
   1400094ac:	int3   
   1400094ad:	int3   
   1400094ae:	int3   
   1400094af:	int3   
   1400094b0:	rex push rbp
   1400094b2:	sub    rsp,0x30
   1400094b6:	mov    rbp,rdx
   1400094b9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400094bd:	call   0x140002d60
   1400094c2:	add    rsp,0x30
   1400094c6:	pop    rbp
   1400094c7:	ret    
   1400094c8:	int3   
   1400094c9:	int3   
   1400094ca:	int3   
   1400094cb:	int3   
   1400094cc:	int3   
   1400094cd:	int3   
   1400094ce:	int3   
   1400094cf:	int3   
   1400094d0:	rex push rbx
   1400094d2:	push   rbp
   1400094d3:	push   rsi
   1400094d4:	push   rdi
   1400094d5:	push   r12
   1400094d7:	push   r14
   1400094d9:	sub    rsp,0x5f8
   1400094e0:	mov    rax,QWORD PTR [rip+0xab79]        # 0x140014060
   1400094e7:	xor    rax,rsp
   1400094ea:	mov    QWORD PTR [rsp+0x5e0],rax
   1400094f2:	xor    edi,edi
   1400094f4:	test   r8d,r8d
   1400094f7:	mov    ebp,r8d
   1400094fa:	mov    r12,rdx
   1400094fd:	movsxd rbx,ecx
   140009500:	mov    r14d,edi
   140009503:	mov    esi,edi
   140009505:	jne    0x14000950e
   140009507:	xor    eax,eax
   140009509:	jmp    0x140009c28
   14000950e:	test   rdx,rdx
   140009511:	jne    0x140009541
   140009513:	call   0x140004130
   140009518:	mov    DWORD PTR [rax],edi
   14000951a:	call   0x140004100
   14000951f:	xor    r9d,r9d
   140009522:	xor    r8d,r8d
   140009525:	xor    edx,edx
   140009527:	xor    ecx,ecx
   140009529:	mov    DWORD PTR [rax],0x16
   14000952f:	mov    QWORD PTR [rsp+0x20],rdi
   140009534:	call   0x140003fa0
   140009539:	or     eax,0xffffffff
   14000953c:	jmp    0x140009c28
   140009541:	mov    QWORD PTR [rsp+0x648],r13
   140009549:	mov    rax,rbx
   14000954c:	mov    QWORD PTR [rsp+0x5f0],r15
   140009554:	and    eax,0x1f
   140009557:	mov    r15,rbx
   14000955a:	lea    rcx,[rip+0xd0df]        # 0x140016640
   140009561:	sar    r15,0x5
   140009565:	lea    r13,[rax+rax*4]
   140009569:	mov    rcx,QWORD PTR [rcx+r15*8]
   14000956d:	shl    r13,0x4
   140009571:	mov    QWORD PTR [rsp+0x50],r15
   140009576:	movzx  edi,BYTE PTR [r13+rcx*1+0x38]
   14000957c:	mov    QWORD PTR [rsp+0x58],r13
   140009581:	add    dil,dil
   140009584:	sar    dil,1
   140009587:	cmp    dil,0x2
   14000958b:	je     0x140009593
   14000958d:	cmp    dil,0x1
   140009591:	jne    0x1400095c8
   140009593:	mov    eax,ebp
   140009595:	not    eax
   140009597:	test   al,0x1
   140009599:	jne    0x1400095c8
   14000959b:	call   0x140004130
   1400095a0:	xor    ebx,ebx
   1400095a2:	mov    DWORD PTR [rax],ebx
   1400095a4:	call   0x140004100
   1400095a9:	xor    r9d,r9d
   1400095ac:	xor    r8d,r8d
   1400095af:	xor    edx,edx
   1400095b1:	xor    ecx,ecx
   1400095b3:	mov    DWORD PTR [rax],0x16
   1400095b9:	mov    QWORD PTR [rsp+0x20],rbx
   1400095be:	call   0x140003fa0
   1400095c3:	jmp    0x140009c15
   1400095c8:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   1400095ce:	je     0x1400095dd
   1400095d0:	xor    edx,edx
   1400095d2:	mov    ecx,ebx
   1400095d4:	lea    r8d,[rdx+0x2]
   1400095d8:	call   0x14000b870
   1400095dd:	mov    ecx,ebx
   1400095df:	call   0x140007150
   1400095e4:	test   eax,eax
   1400095e6:	je     0x140009890
   1400095ec:	lea    rdx,[rip+0xd04d]        # 0x140016640
   1400095f3:	mov    rax,QWORD PTR [rdx+r15*8]
   1400095f7:	test   BYTE PTR [r13+rax*1+0x8],0x80
   1400095fd:	je     0x1400098a9
   140009603:	call   0x140006240
   140009608:	xor    ebx,ebx
   14000960a:	lea    rdx,[rsp+0x48]
   14000960f:	mov    rcx,QWORD PTR [rax+0xc0]
   140009616:	lea    rax,[rip+0xd023]        # 0x140016640
   14000961d:	cmp    DWORD PTR [rcx+0x14],ebx
   140009620:	mov    rcx,QWORD PTR [rax+r15*8]
   140009624:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140009629:	sete   bl
   14000962c:	call   QWORD PTR [rip+0x5bf6]        # 0x14000f228
   140009632:	test   eax,eax
   140009634:	je     0x1400098a2
   14000963a:	test   ebx,ebx
   14000963c:	je     0x140009647
   14000963e:	test   dil,dil
   140009641:	je     0x140009899
   140009647:	call   QWORD PTR [rip+0x5bd3]        # 0x14000f220
   14000964d:	test   ebp,ebp
   14000964f:	mov    DWORD PTR [rsp+0x4c],esi
   140009653:	mov    r13d,eax
   140009656:	mov    DWORD PTR [rsp+0x48],eax
   14000965a:	mov    rbx,r12
   14000965d:	je     0x140009886
   140009663:	mov    r15d,DWORD PTR [rsp+0x48]
   140009668:	data16 data16 xchg ax,ax
   14000966c:	data16 data16 xchg ax,ax
   140009670:	test   dil,dil
   140009673:	jne    0x1400097d0
   140009679:	movsx  ecx,BYTE PTR [rbx]
   14000967c:	xor    r15d,r15d
   14000967f:	cmp    cl,0xa
   140009682:	sete   r15b
   140009686:	call   0x1400084a0
   14000968b:	test   eax,eax
   14000968d:	jne    0x1400096af
   14000968f:	lea    r8d,[rax+0x1]
   140009693:	lea    rcx,[rsp+0x40]
   140009698:	mov    rdx,rbx
   14000969b:	call   0x1400087d0
   1400096a0:	cmp    eax,0xffffffff
   1400096a3:	jne    0x1400096da
   1400096a5:	mov    r15d,DWORD PTR [rsp+0x48]
   1400096aa:	jmp    0x140009b97
   1400096af:	mov    rax,rbp
   1400096b2:	sub    rax,rbx
   1400096b5:	add    rax,r12
   1400096b8:	cmp    rax,0x1
   1400096bc:	jle    0x1400096a5
   1400096be:	lea    rcx,[rsp+0x40]
   1400096c3:	mov    r8d,0x2
   1400096c9:	mov    rdx,rbx
   1400096cc:	call   0x1400087d0
   1400096d1:	cmp    eax,0xffffffff
   1400096d4:	je     0x1400096a5
   1400096d6:	add    rbx,0x1
   1400096da:	xor    eax,eax
   1400096dc:	lea    r8,[rsp+0x40]
   1400096e1:	mov    r9d,0x1
   1400096e7:	mov    QWORD PTR [rsp+0x38],rax
   1400096ec:	mov    QWORD PTR [rsp+0x30],rax
   1400096f1:	lea    rax,[rsp+0x60]
   1400096f6:	xor    edx,edx
   1400096f8:	mov    ecx,r13d
   1400096fb:	mov    DWORD PTR [rsp+0x28],0x5
   140009703:	mov    QWORD PTR [rsp+0x20],rax
   140009708:	add    rbx,0x1
   14000970c:	call   QWORD PTR [rip+0x5b06]        # 0x14000f218
   140009712:	test   eax,eax
   140009714:	mov    r13d,eax
   140009717:	je     0x1400096a5
   140009719:	mov    rax,QWORD PTR [rsp+0x50]
   14000971e:	lea    rcx,[rip+0xcf1b]        # 0x140016640
   140009725:	lea    r9,[rsp+0x4c]
   14000972a:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000972e:	mov    rax,QWORD PTR [rsp+0x58]
   140009733:	lea    rdx,[rsp+0x60]
   140009738:	mov    rcx,QWORD PTR [rax+rcx*1]
   14000973c:	mov    r8d,r13d
   14000973f:	mov    QWORD PTR [rsp+0x20],0x0
   140009748:	call   QWORD PTR [rip+0x59c2]        # 0x14000f110
   14000974e:	test   eax,eax
   140009750:	je     0x14000985c
   140009756:	mov    eax,DWORD PTR [rsp+0x4c]
   14000975a:	add    r14d,eax
   14000975d:	cmp    eax,r13d
   140009760:	jl     0x1400096a5
   140009766:	test   r15d,r15d
   140009769:	je     0x1400097c9
   14000976b:	mov    rax,QWORD PTR [rsp+0x50]
   140009770:	mov    BYTE PTR [rsp+0x60],0xd
   140009775:	lea    rcx,[rip+0xcec4]        # 0x140016640
   14000977c:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009780:	mov    rax,QWORD PTR [rsp+0x58]
   140009785:	lea    r9,[rsp+0x4c]
   14000978a:	mov    rcx,QWORD PTR [rax+rcx*1]
   14000978e:	lea    rdx,[rsp+0x60]
   140009793:	mov    r8d,0x1
   140009799:	mov    QWORD PTR [rsp+0x20],0x0
   1400097a2:	call   QWORD PTR [rip+0x5968]        # 0x14000f110
   1400097a8:	test   eax,eax
   1400097aa:	je     0x14000984e
   1400097b0:	cmp    DWORD PTR [rsp+0x4c],0x1
   1400097b5:	jl     0x1400096a5
   1400097bb:	mov    r13d,DWORD PTR [rsp+0x48]
   1400097c0:	add    esi,0x1
   1400097c3:	add    r14d,0x1
   1400097c7:	jmp    0x140009837
   1400097c9:	mov    r13d,DWORD PTR [rsp+0x48]
   1400097ce:	jmp    0x140009837
   1400097d0:	cmp    dil,0x1
   1400097d4:	je     0x1400097dc
   1400097d6:	cmp    dil,0x2
   1400097da:	jne    0x1400097f3
   1400097dc:	movzx  eax,WORD PTR [rbx]
   1400097df:	xor    r15d,r15d
   1400097e2:	cmp    ax,0xa
   1400097e6:	mov    WORD PTR [rsp+0x40],ax
   1400097eb:	sete   r15b
   1400097ef:	add    rbx,0x2
   1400097f3:	cmp    dil,0x1
   1400097f7:	je     0x1400097ff
   1400097f9:	cmp    dil,0x2
   1400097fd:	jne    0x140009837
   1400097ff:	movzx  ecx,WORD PTR [rsp+0x40]
   140009804:	call   0x14000b740
   140009809:	cmp    ax,WORD PTR [rsp+0x40]
   14000980e:	jne    0x140009878
   140009810:	add    r14d,0x1
   140009814:	test   r15d,r15d
   140009817:	je     0x140009837
   140009819:	mov    cx,0xd
   14000981d:	mov    WORD PTR [rsp+0x40],0xd
   140009824:	call   0x14000b740
   140009829:	cmp    ax,WORD PTR [rsp+0x40]
   14000982e:	jne    0x14000986a
   140009830:	add    r14d,0x1
   140009834:	add    esi,0x1
   140009837:	mov    eax,ebx
   140009839:	sub    eax,r12d
   14000983c:	cmp    eax,ebp
   14000983e:	jb     0x140009670
   140009844:	mov    r15d,DWORD PTR [rsp+0x48]
   140009849:	jmp    0x140009b97
   14000984e:	call   QWORD PTR [rip+0x5854]        # 0x14000f0a8
   140009854:	mov    r15d,eax
   140009857:	jmp    0x140009b97
   14000985c:	call   QWORD PTR [rip+0x5846]        # 0x14000f0a8
   140009862:	mov    r15d,eax
   140009865:	jmp    0x140009b97
   14000986a:	call   QWORD PTR [rip+0x5838]        # 0x14000f0a8
   140009870:	mov    r15d,eax
   140009873:	jmp    0x140009b97
   140009878:	call   QWORD PTR [rip+0x582a]        # 0x14000f0a8
   14000987e:	mov    r15d,eax
   140009881:	jmp    0x140009b97
   140009886:	mov    r15d,DWORD PTR [rsp+0x48]
   14000988b:	jmp    0x140009bad
   140009890:	lea    rdx,[rip+0xcda9]        # 0x140016640
   140009897:	jmp    0x1400098a9
   140009899:	lea    rdx,[rip+0xcda0]        # 0x140016640
   1400098a0:	jmp    0x1400098a9
   1400098a2:	lea    rdx,[rip+0xcd97]        # 0x140016640
   1400098a9:	mov    rcx,QWORD PTR [rdx+r15*8]
   1400098ad:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   1400098b3:	je     0x140009b70
   1400098b9:	xor    r15d,r15d
   1400098bc:	test   dil,dil
   1400098bf:	jne    0x14000997e
   1400098c5:	test   ebp,ebp
   1400098c7:	mov    rdi,r12
   1400098ca:	je     0x140009be3
   1400098d0:	lea    rbx,[rsp+0x70]
   1400098d5:	xor    ecx,ecx
   1400098d7:	mov    eax,edi
   1400098d9:	sub    eax,r12d
   1400098dc:	cmp    eax,ebp
   1400098de:	jae    0x14000990c
   1400098e0:	movzx  eax,BYTE PTR [rdi]
   1400098e3:	add    rdi,0x1
   1400098e7:	cmp    al,0xa
   1400098e9:	jne    0x1400098f9
   1400098eb:	mov    BYTE PTR [rbx],0xd
   1400098ee:	add    rbx,0x1
   1400098f2:	add    esi,0x1
   1400098f5:	add    rcx,0x1
   1400098f9:	add    rcx,0x1
   1400098fd:	mov    BYTE PTR [rbx],al
   1400098ff:	add    rbx,0x1
   140009903:	cmp    rcx,0x400
   14000990a:	jb     0x1400098d7
   14000990c:	lea    rax,[rsp+0x70]
   140009911:	mov    r8d,ebx
   140009914:	lea    r9,[rsp+0x44]
   140009919:	sub    r8d,eax
   14000991c:	mov    rax,QWORD PTR [rsp+0x50]
   140009921:	mov    QWORD PTR [rsp+0x20],r15
   140009926:	mov    rcx,QWORD PTR [rdx+rax*8]
   14000992a:	lea    rdx,[rsp+0x70]
   14000992f:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140009934:	call   QWORD PTR [rip+0x57d6]        # 0x14000f110
   14000993a:	test   eax,eax
   14000993c:	je     0x140009970
   14000993e:	movsxd rax,DWORD PTR [rsp+0x44]
   140009943:	lea    rcx,[rsp+0x70]
   140009948:	sub    rbx,rcx
   14000994b:	add    r14d,eax
   14000994e:	cmp    rax,rbx
   140009951:	jl     0x140009b97
   140009957:	mov    eax,edi
   140009959:	lea    rdx,[rip+0xcce0]        # 0x140016640
   140009960:	sub    eax,r12d
   140009963:	cmp    eax,ebp
   140009965:	jb     0x1400098d0
   14000996b:	jmp    0x140009b97
   140009970:	call   QWORD PTR [rip+0x5732]        # 0x14000f0a8
   140009976:	mov    r15d,eax
   140009979:	jmp    0x140009b97
   14000997e:	cmp    dil,0x2
   140009982:	jne    0x140009a53
   140009988:	test   ebp,ebp
   14000998a:	mov    rdi,r12
   14000998d:	je     0x140009be3
   140009993:	nop
   140009994:	data16 data16 xchg ax,ax
   140009998:	data16 data16 xchg ax,ax
   14000999c:	data16 data16 xchg ax,ax
   1400099a0:	lea    rbx,[rsp+0x70]
   1400099a5:	xor    ecx,ecx
   1400099a7:	mov    eax,edi
   1400099a9:	sub    eax,r12d
   1400099ac:	cmp    eax,ebp
   1400099ae:	jae    0x1400099e1
   1400099b0:	movzx  eax,WORD PTR [rdi]
   1400099b3:	add    rdi,0x2
   1400099b7:	cmp    ax,0xa
   1400099bb:	jne    0x1400099cd
   1400099bd:	mov    WORD PTR [rbx],0xd
   1400099c2:	add    rbx,0x2
   1400099c6:	add    esi,0x2
   1400099c9:	add    rcx,0x2
   1400099cd:	add    rcx,0x2
   1400099d1:	mov    WORD PTR [rbx],ax
   1400099d4:	add    rbx,0x2
   1400099d8:	cmp    rcx,0x3ff
   1400099df:	jb     0x1400099a7
   1400099e1:	lea    rax,[rsp+0x70]
   1400099e6:	mov    r8d,ebx
   1400099e9:	lea    r9,[rsp+0x44]
   1400099ee:	sub    r8d,eax
   1400099f1:	mov    rax,QWORD PTR [rsp+0x50]
   1400099f6:	mov    QWORD PTR [rsp+0x20],r15
   1400099fb:	mov    rcx,QWORD PTR [rdx+rax*8]
   1400099ff:	lea    rdx,[rsp+0x70]
   140009a04:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140009a09:	call   QWORD PTR [rip+0x5701]        # 0x14000f110
   140009a0f:	test   eax,eax
   140009a11:	je     0x140009a45
   140009a13:	movsxd rax,DWORD PTR [rsp+0x44]
   140009a18:	lea    rcx,[rsp+0x70]
   140009a1d:	sub    rbx,rcx
   140009a20:	add    r14d,eax
   140009a23:	cmp    rax,rbx
   140009a26:	jl     0x140009b97
   140009a2c:	mov    eax,edi
   140009a2e:	lea    rdx,[rip+0xcc0b]        # 0x140016640
   140009a35:	sub    eax,r12d
   140009a38:	cmp    eax,ebp
   140009a3a:	jb     0x1400099a0
   140009a40:	jmp    0x140009b97
   140009a45:	call   QWORD PTR [rip+0x565d]        # 0x14000f0a8
   140009a4b:	mov    r15d,eax
   140009a4e:	jmp    0x140009b97
   140009a53:	test   ebp,ebp
   140009a55:	mov    rdi,r12
   140009a58:	je     0x140009be3
   140009a5e:	xchg   ax,ax
   140009a60:	lea    rcx,[rsp+0x480]
   140009a68:	xor    edx,edx
   140009a6a:	data16 xchg ax,ax
   140009a6d:	data16 xchg ax,ax
   140009a70:	mov    eax,edi
   140009a72:	sub    eax,r12d
   140009a75:	cmp    eax,ebp
   140009a77:	jae    0x140009aa7
   140009a79:	movzx  eax,WORD PTR [rdi]
   140009a7c:	add    rdi,0x2
   140009a80:	cmp    ax,0xa
   140009a84:	jne    0x140009a93
   140009a86:	mov    WORD PTR [rcx],0xd
   140009a8b:	add    rcx,0x2
   140009a8f:	add    rdx,0x2
   140009a93:	add    rdx,0x2
   140009a97:	mov    WORD PTR [rcx],ax
   140009a9a:	add    rcx,0x2
   140009a9e:	cmp    rdx,0x152
   140009aa5:	jb     0x140009a70
   140009aa7:	lea    rax,[rsp+0x480]
   140009aaf:	mov    QWORD PTR [rsp+0x38],rsi
   140009ab4:	mov    QWORD PTR [rsp+0x30],rsi
   140009ab9:	sub    ecx,eax
   140009abb:	lea    r8,[rsp+0x480]
   140009ac3:	mov    DWORD PTR [rsp+0x28],0x2ab
   140009acb:	mov    eax,ecx
   140009acd:	mov    ecx,0xfde9
   140009ad2:	cdq    
   140009ad3:	sub    eax,edx
   140009ad5:	xor    edx,edx
   140009ad7:	sar    eax,1
   140009ad9:	mov    r9d,eax
   140009adc:	lea    rax,[rsp+0x70]
   140009ae1:	mov    QWORD PTR [rsp+0x20],rax
   140009ae6:	call   QWORD PTR [rip+0x572c]        # 0x14000f218
   140009aec:	test   eax,eax
   140009aee:	mov    r13d,eax
   140009af1:	je     0x140009b65
   140009af3:	xor    ebx,ebx
   140009af5:	data16 data16 xchg ax,ax
   140009af9:	data16 xchg ax,ax
   140009afc:	data16 data16 xchg ax,ax
   140009b00:	mov    rax,QWORD PTR [rsp+0x50]
   140009b05:	movsxd rcx,ebx
   140009b08:	mov    r8d,r13d
   140009b0b:	lea    rdx,[rsp+rcx*1+0x70]
   140009b10:	lea    rcx,[rip+0xcb29]        # 0x140016640
   140009b17:	lea    r9,[rsp+0x44]
   140009b1c:	mov    rcx,QWORD PTR [rcx+rax*8]
   140009b20:	mov    rax,QWORD PTR [rsp+0x58]
   140009b25:	sub    r8d,ebx
   140009b28:	mov    rcx,QWORD PTR [rax+rcx*1]
   140009b2c:	mov    QWORD PTR [rsp+0x20],rsi
   140009b31:	call   QWORD PTR [rip+0x55d9]        # 0x14000f110
   140009b37:	test   eax,eax
   140009b39:	je     0x140009b46
   140009b3b:	add    ebx,DWORD PTR [rsp+0x44]
   140009b3f:	cmp    r13d,ebx
   140009b42:	jg     0x140009b00
   140009b44:	jmp    0x140009b54
   140009b46:	call   QWORD PTR [rip+0x555c]        # 0x14000f0a8
   140009b4c:	cmp    r13d,ebx
   140009b4f:	mov    r15d,eax
   140009b52:	jg     0x140009b97
   140009b54:	mov    r14d,edi
   140009b57:	sub    r14d,r12d
   140009b5a:	cmp    r14d,ebp
   140009b5d:	jb     0x140009a60
   140009b63:	jmp    0x140009b97
   140009b65:	call   QWORD PTR [rip+0x553d]        # 0x14000f0a8
   140009b6b:	mov    r15d,eax
   140009b6e:	jmp    0x140009b97
   140009b70:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   140009b75:	lea    r9,[rsp+0x44]
   140009b7a:	mov    r8d,ebp
   140009b7d:	mov    rdx,r12
   140009b80:	mov    QWORD PTR [rsp+0x20],rsi
   140009b85:	call   QWORD PTR [rip+0x5585]        # 0x14000f110
   140009b8b:	test   eax,eax
   140009b8d:	je     0x140009ba4
   140009b8f:	mov    r14d,DWORD PTR [rsp+0x44]
   140009b94:	xor    r15d,r15d
   140009b97:	test   r14d,r14d
   140009b9a:	je     0x140009bad
   140009b9c:	sub    r14d,esi
   140009b9f:	mov    eax,r14d
   140009ba2:	jmp    0x140009c18
   140009ba4:	call   QWORD PTR [rip+0x54fe]        # 0x14000f0a8
   140009baa:	mov    r15d,eax
   140009bad:	test   r15d,r15d
   140009bb0:	je     0x140009bd7
   140009bb2:	cmp    r15d,0x5
   140009bb6:	jne    0x140009bcd
   140009bb8:	call   0x140004100
   140009bbd:	mov    DWORD PTR [rax],0x9
   140009bc3:	call   0x140004130
   140009bc8:	mov    DWORD PTR [rax],r15d
   140009bcb:	jmp    0x140009c15
   140009bcd:	mov    ecx,r15d
   140009bd0:	call   0x140004160
   140009bd5:	jmp    0x140009c15
   140009bd7:	mov    r13,QWORD PTR [rsp+0x58]
   140009bdc:	lea    rdx,[rip+0xca5d]        # 0x140016640
   140009be3:	mov    rax,QWORD PTR [rsp+0x50]
   140009be8:	mov    rax,QWORD PTR [rdx+rax*8]
   140009bec:	test   BYTE PTR [r13+rax*1+0x8],0x40
   140009bf2:	je     0x140009bff
   140009bf4:	cmp    BYTE PTR [r12],0x1a
   140009bf9:	jne    0x140009bff
   140009bfb:	xor    eax,eax
   140009bfd:	jmp    0x140009c18
   140009bff:	call   0x140004100
   140009c04:	mov    DWORD PTR [rax],0x1c
   140009c0a:	call   0x140004130
   140009c0f:	mov    DWORD PTR [rax],0x0
   140009c15:	or     eax,0xffffffff
   140009c18:	mov    r13,QWORD PTR [rsp+0x648]
   140009c20:	mov    r15,QWORD PTR [rsp+0x5f0]
   140009c28:	mov    rcx,QWORD PTR [rsp+0x5e0]
   140009c30:	xor    rcx,rsp
   140009c33:	call   0x1400020b0
   140009c38:	add    rsp,0x5f8
   140009c3f:	pop    r14
   140009c41:	pop    r12
   140009c43:	pop    rdi
   140009c44:	pop    rsi
   140009c45:	pop    rbp
   140009c46:	pop    rbx
   140009c47:	ret    
   140009c48:	int3   
   140009c49:	int3   
   140009c4a:	int3   
   140009c4b:	int3   
   140009c4c:	int3   
   140009c4d:	int3   
   140009c4e:	int3   
   140009c4f:	int3   
   140009c50:	mov    QWORD PTR [rsp+0x10],rbx
   140009c55:	mov    DWORD PTR [rsp+0x8],ecx
   140009c59:	push   rsi
   140009c5a:	push   rdi
   140009c5b:	push   r12
   140009c5d:	push   r13
   140009c5f:	push   r14
   140009c61:	sub    rsp,0x30
   140009c65:	mov    r12d,r8d
   140009c68:	mov    r13,rdx
   140009c6b:	movsxd rbx,ecx
   140009c6e:	cmp    ebx,0xfffffffe
   140009c71:	jne    0x140009c8f
   140009c73:	call   0x140004130
   140009c78:	xor    edi,edi
   140009c7a:	mov    DWORD PTR [rax],edi
   140009c7c:	call   0x140004100
   140009c81:	mov    DWORD PTR [rax],0x9
   140009c87:	or     eax,0xffffffff
   140009c8a:	jmp    0x140009d69
   140009c8f:	test   ecx,ecx
   140009c91:	js     0x140009d3e
   140009c97:	cmp    ebx,DWORD PTR [rip+0xc99b]        # 0x140016638
   140009c9d:	jae    0x140009d3e
   140009ca3:	mov    rax,rbx
   140009ca6:	mov    rdi,rbx
   140009ca9:	sar    rdi,0x5
   140009cad:	lea    r14,[rip+0xc98c]        # 0x140016640
   140009cb4:	and    eax,0x1f
   140009cb7:	lea    rsi,[rax+rax*4]
   140009cbb:	add    rsi,rsi
   140009cbe:	mov    rax,QWORD PTR [r14+rdi*8]
   140009cc2:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   140009cc6:	and    ecx,0x1
   140009cc9:	jne    0x140009cf8
   140009ccb:	call   0x140004130
   140009cd0:	xor    edi,edi
   140009cd2:	mov    DWORD PTR [rax],edi
   140009cd4:	call   0x140004100
   140009cd9:	mov    DWORD PTR [rax],0x9
   140009cdf:	mov    QWORD PTR [rsp+0x20],rdi
   140009ce4:	xor    r9d,r9d
   140009ce7:	xor    r8d,r8d
   140009cea:	xor    edx,edx
   140009cec:	xor    ecx,ecx
   140009cee:	call   0x140003fa0
   140009cf3:	or     eax,0xffffffff
   140009cf6:	jmp    0x140009d69
   140009cf8:	mov    ecx,ebx
   140009cfa:	call   0x14000bbf0
   140009cff:	nop
   140009d00:	mov    rax,QWORD PTR [r14+rdi*8]
   140009d04:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   140009d09:	je     0x140009d1c
   140009d0b:	mov    r8d,r12d
   140009d0e:	mov    rdx,r13
   140009d11:	mov    ecx,ebx
   140009d13:	call   0x1400094d0
   140009d18:	mov    edi,eax
   140009d1a:	jmp    0x140009d33
   140009d1c:	call   0x140004100
   140009d21:	mov    DWORD PTR [rax],0x9
   140009d27:	call   0x140004130
   140009d2c:	xor    edi,edi
   140009d2e:	mov    DWORD PTR [rax],edi
   140009d30:	or     edi,0xffffffff
   140009d33:	mov    ecx,ebx
   140009d35:	call   0x14000bcc0
   140009d3a:	mov    eax,edi
   140009d3c:	jmp    0x140009d69
   140009d3e:	call   0x140004130
   140009d43:	xor    edi,edi
   140009d45:	mov    DWORD PTR [rax],edi
   140009d47:	call   0x140004100
   140009d4c:	mov    DWORD PTR [rax],0x9
   140009d52:	mov    QWORD PTR [rsp+0x20],rdi
   140009d57:	xor    r9d,r9d
   140009d5a:	xor    r8d,r8d
   140009d5d:	xor    edx,edx
   140009d5f:	xor    ecx,ecx
   140009d61:	call   0x140003fa0
   140009d66:	or     eax,0xffffffff
   140009d69:	mov    rbx,QWORD PTR [rsp+0x68]
   140009d6e:	add    rsp,0x30
   140009d72:	pop    r14
   140009d74:	pop    r13
   140009d76:	pop    r12
   140009d78:	pop    rdi
   140009d79:	pop    rsi
   140009d7a:	ret    
   140009d7b:	int3   
   140009d7c:	int3   
   140009d7d:	int3   
   140009d7e:	int3   
   140009d7f:	int3   
   140009d80:	rex push rbp
   140009d82:	sub    rsp,0x30
   140009d86:	mov    rbp,rdx
   140009d89:	mov    ecx,DWORD PTR [rbp+0x60]
   140009d8c:	call   0x14000bcc0
   140009d91:	add    rsp,0x30
   140009d95:	pop    rbp
   140009d96:	ret    
   140009d97:	int3   
   140009d98:	int3   
   140009d99:	int3   
   140009d9a:	int3   
   140009d9b:	int3   
   140009d9c:	int3   
   140009d9d:	int3   
   140009d9e:	int3   
   140009d9f:	int3   
   140009da0:	mov    QWORD PTR [rsp+0x18],rbx
   140009da5:	mov    DWORD PTR [rsp+0x8],ecx
   140009da9:	push   rsi
   140009daa:	push   rdi
   140009dab:	push   r12
   140009dad:	sub    rsp,0x30
   140009db1:	movsxd rbx,ecx
   140009db4:	cmp    ebx,0xfffffffe
   140009db7:	jne    0x140009dcc
   140009db9:	call   0x140004100
   140009dbe:	mov    DWORD PTR [rax],0x9
   140009dc4:	or     eax,0xffffffff
   140009dc7:	jmp    0x140009eab
   140009dcc:	test   ecx,ecx
   140009dce:	js     0x140009e87
   140009dd4:	cmp    ebx,DWORD PTR [rip+0xc85e]        # 0x140016638
   140009dda:	jae    0x140009e87
   140009de0:	mov    rax,rbx
   140009de3:	mov    rdi,rbx
   140009de6:	sar    rdi,0x5
   140009dea:	lea    r12,[rip+0xc84f]        # 0x140016640
   140009df1:	and    eax,0x1f
   140009df4:	lea    rsi,[rax+rax*4]
   140009df8:	add    rsi,rsi
   140009dfb:	mov    rax,QWORD PTR [r12+rdi*8]
   140009dff:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   140009e03:	and    ecx,0x1
   140009e06:	jne    0x140009e2e
   140009e08:	call   0x140004100
   140009e0d:	mov    DWORD PTR [rax],0x9
   140009e13:	xor    edi,edi
   140009e15:	mov    QWORD PTR [rsp+0x20],rdi
   140009e1a:	xor    r9d,r9d
   140009e1d:	xor    r8d,r8d
   140009e20:	xor    edx,edx
   140009e22:	xor    ecx,ecx
   140009e24:	call   0x140003fa0
   140009e29:	or     eax,0xffffffff
   140009e2c:	jmp    0x140009eab
   140009e2e:	mov    ecx,ebx
   140009e30:	call   0x14000bbf0
   140009e35:	nop
   140009e36:	mov    rax,QWORD PTR [r12+rdi*8]
   140009e3a:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   140009e3f:	je     0x140009e6e
   140009e41:	mov    ecx,ebx
   140009e43:	call   0x14000bb50
   140009e48:	mov    rcx,rax
   140009e4b:	call   QWORD PTR [rip+0x53df]        # 0x14000f230
   140009e51:	test   eax,eax
   140009e53:	jne    0x140009e6a
   140009e55:	call   QWORD PTR [rip+0x524d]        # 0x14000f0a8
   140009e5b:	mov    edi,eax
   140009e5d:	test   eax,eax
   140009e5f:	je     0x140009e7c
   140009e61:	call   0x140004130
   140009e66:	mov    DWORD PTR [rax],edi
   140009e68:	jmp    0x140009e6e
   140009e6a:	xor    edi,edi
   140009e6c:	jmp    0x140009e7c
   140009e6e:	call   0x140004100
   140009e73:	mov    DWORD PTR [rax],0x9
   140009e79:	or     edi,0xffffffff
   140009e7c:	mov    ecx,ebx
   140009e7e:	call   0x14000bcc0
   140009e83:	mov    eax,edi
   140009e85:	jmp    0x140009eab
   140009e87:	call   0x140004100
   140009e8c:	mov    DWORD PTR [rax],0x9
   140009e92:	xor    edi,edi
   140009e94:	mov    QWORD PTR [rsp+0x20],rdi
   140009e99:	xor    r9d,r9d
   140009e9c:	xor    r8d,r8d
   140009e9f:	xor    edx,edx
   140009ea1:	xor    ecx,ecx
   140009ea3:	call   0x140003fa0
   140009ea8:	or     eax,0xffffffff
   140009eab:	mov    rbx,QWORD PTR [rsp+0x60]
   140009eb0:	add    rsp,0x30
   140009eb4:	pop    r12
   140009eb6:	pop    rdi
   140009eb7:	pop    rsi
   140009eb8:	ret    
   140009eb9:	int3   
   140009eba:	int3   
   140009ebb:	int3   
   140009ebc:	int3   
   140009ebd:	int3   
   140009ebe:	int3   
   140009ebf:	int3   
   140009ec0:	rex push rbp
   140009ec2:	sub    rsp,0x30
   140009ec6:	mov    rbp,rdx
   140009ec9:	mov    ecx,DWORD PTR [rbp+0x50]
   140009ecc:	call   0x14000bcc0
   140009ed1:	add    rsp,0x30
   140009ed5:	pop    rbp
   140009ed6:	ret    
   140009ed7:	int3   
   140009ed8:	int3   
   140009ed9:	int3   
   140009eda:	int3   
   140009edb:	int3   
   140009edc:	int3   
   140009edd:	int3   
   140009ede:	int3   
   140009edf:	int3   
   140009ee0:	rex push rbp
   140009ee2:	push   r12
   140009ee4:	push   r13
   140009ee6:	push   r14
   140009ee8:	push   r15
   140009eea:	sub    rsp,0x60
   140009eee:	lea    rbp,[rsp+0x40]
   140009ef3:	mov    QWORD PTR [rbp+0x50],rbx
   140009ef7:	mov    QWORD PTR [rbp+0x58],rsi
   140009efb:	mov    QWORD PTR [rbp+0x60],rdi
   140009eff:	mov    rax,QWORD PTR [rip+0xa15a]        # 0x140014060
   140009f06:	xor    rax,rbp
   140009f09:	mov    QWORD PTR [rbp+0x18],rax
   140009f0d:	mov    r10d,DWORD PTR [rip+0xc644]        # 0x140016558
   140009f14:	xor    ebx,ebx
   140009f16:	mov    r14,r9
   140009f19:	test   r10d,r10d
   140009f1c:	mov    QWORD PTR [rbp+0x8],r9
   140009f20:	mov    DWORD PTR [rbp+0x0],r8d
   140009f24:	mov    r15d,edx
   140009f27:	mov    DWORD PTR [rbp+0x10],edx
   140009f2a:	mov    rdi,rcx
   140009f2d:	jne    0x140009f7a
   140009f2f:	lea    r9d,[rbx+0x1]
   140009f33:	lea    r8,[rip+0x661a]        # 0x140010554
   140009f3a:	mov    edx,0x100
   140009f3f:	xor    ecx,ecx
   140009f41:	mov    DWORD PTR [rsp+0x28],ebx
   140009f45:	mov    QWORD PTR [rsp+0x20],rbx
   140009f4a:	call   QWORD PTR [rip+0x52f0]        # 0x14000f240
   140009f50:	test   eax,eax
   140009f52:	je     0x140009f5a
   140009f54:	lea    r10d,[rbx+0x1]
   140009f58:	jmp    0x140009f73
   140009f5a:	call   QWORD PTR [rip+0x5148]        # 0x14000f0a8
   140009f60:	mov    r10d,DWORD PTR [rip+0xc5f1]        # 0x140016558
   140009f67:	mov    ecx,0x2
   140009f6c:	cmp    eax,0x78
   140009f6f:	cmove  r10d,ecx
   140009f73:	mov    DWORD PTR [rip+0xc5de],r10d        # 0x140016558
   140009f7a:	mov    r9d,DWORD PTR [rbp+0x70]
   140009f7e:	test   r9d,r9d
   140009f81:	jle    0x140009fbf
   140009f83:	mov    eax,r9d
   140009f86:	mov    rcx,r14
   140009f89:	data16 xchg ax,ax
   140009f8c:	data16 data16 xchg ax,ax
   140009f90:	sub    eax,0x1
   140009f93:	cmp    BYTE PTR [rcx],bl
   140009f95:	je     0x140009fa2
   140009f97:	add    rcx,0x1
   140009f9b:	test   eax,eax
   140009f9d:	jne    0x140009f90
   140009f9f:	or     eax,0xffffffff
   140009fa2:	mov    ecx,r9d
   140009fa5:	sub    ecx,eax
   140009fa7:	sub    ecx,0x1
   140009faa:	cmp    ecx,r9d
   140009fad:	jge    0x140009fb9
   140009faf:	lea    r9d,[rcx+0x1]
   140009fb3:	mov    DWORD PTR [rbp+0x70],r9d
   140009fb7:	jmp    0x140009fbf
   140009fb9:	mov    r9d,ecx
   140009fbc:	mov    DWORD PTR [rbp+0x70],ecx
   140009fbf:	cmp    r10d,0x2
   140009fc3:	je     0x14000a23a
   140009fc9:	test   r10d,r10d
   140009fcc:	je     0x14000a23a
   140009fd2:	cmp    r10d,0x1
   140009fd6:	jne    0x14000a26d
   140009fdc:	mov    r13d,DWORD PTR [rbp+0x88]
   140009fe3:	mov    r12d,ebx
   140009fe6:	test   r13d,r13d
   140009fe9:	jne    0x140009ff2
   140009feb:	mov    rax,QWORD PTR [rdi]
   140009fee:	mov    r13d,DWORD PTR [rax+0x4]
   140009ff2:	cmp    DWORD PTR [rbp+0x90],ebx
   140009ff8:	mov    edx,0x1
   140009ffd:	mov    eax,0x9
   14000a002:	mov    r8,r14
   14000a005:	mov    ecx,r13d
   14000a008:	cmovne edx,eax
   14000a00b:	mov    DWORD PTR [rsp+0x28],ebx
   14000a00f:	mov    QWORD PTR [rsp+0x20],rbx
   14000a014:	call   QWORD PTR [rip+0x511e]        # 0x14000f138
   14000a01a:	test   eax,eax
   14000a01c:	movsxd r14,eax
   14000a01f:	je     0x14000a26d
   14000a025:	jle    0x14000a26d
   14000a02b:	xor    edx,edx
   14000a02d:	mov    rax,0xffffffffffffffe0
   14000a034:	div    r14
   14000a037:	cmp    rax,0x2
   14000a03b:	jb     0x14000a26d
   14000a041:	lea    rcx,[r14+r14*1+0x10]
   14000a046:	movabs rdi,0xffffffffffffff0
   14000a050:	cmp    rcx,0x400
   14000a057:	ja     0x14000a087
   14000a059:	lea    rax,[rcx+0xf]
   14000a05d:	cmp    rax,rcx
   14000a060:	ja     0x14000a065
   14000a062:	mov    rax,rdi
   14000a065:	and    rax,0xfffffffffffffff0
   14000a069:	call   0x14000eba0
   14000a06e:	sub    rsp,rax
   14000a071:	lea    rsi,[rsp+0x40]
   14000a076:	test   rsi,rsi
   14000a079:	je     0x14000a26d
   14000a07f:	mov    DWORD PTR [rsi],0xcccc
   14000a085:	jmp    0x14000a09a
   14000a087:	call   0x140006a30
   14000a08c:	test   rax,rax
   14000a08f:	mov    rsi,rax
   14000a092:	je     0x14000a09e
   14000a094:	mov    DWORD PTR [rax],0xdddd
   14000a09a:	add    rsi,0x10
   14000a09e:	test   rsi,rsi
   14000a0a1:	je     0x14000a26d
   14000a0a7:	mov    r9d,DWORD PTR [rbp+0x70]
   14000a0ab:	mov    r8,QWORD PTR [rbp+0x8]
   14000a0af:	mov    edx,0x1
   14000a0b4:	mov    ecx,r13d
   14000a0b7:	mov    DWORD PTR [rsp+0x28],r14d
   14000a0bc:	mov    QWORD PTR [rsp+0x20],rsi
   14000a0c1:	call   QWORD PTR [rip+0x5071]        # 0x14000f138
   14000a0c7:	test   eax,eax
   14000a0c9:	je     0x14000a220
   14000a0cf:	mov    edx,DWORD PTR [rbp+0x0]
   14000a0d2:	mov    r9d,r14d
   14000a0d5:	mov    r8,rsi
   14000a0d8:	mov    ecx,r15d
   14000a0db:	mov    DWORD PTR [rsp+0x28],ebx
   14000a0df:	mov    QWORD PTR [rsp+0x20],rbx
   14000a0e4:	call   QWORD PTR [rip+0x5156]        # 0x14000f240
   14000a0ea:	test   eax,eax
   14000a0ec:	movsxd r12,eax
   14000a0ef:	je     0x14000a220
   14000a0f5:	mov    ecx,DWORD PTR [rbp+0x0]
   14000a0f8:	bt     ecx,0xa
   14000a0fc:	jae    0x14000a138
   14000a0fe:	mov    eax,DWORD PTR [rbp+0x80]
   14000a104:	test   eax,eax
   14000a106:	je     0x14000a220
   14000a10c:	cmp    r12d,eax
   14000a10f:	jg     0x14000a220
   14000a115:	mov    DWORD PTR [rsp+0x28],eax
   14000a119:	mov    rax,QWORD PTR [rbp+0x78]
   14000a11d:	mov    edx,ecx
   14000a11f:	mov    r9d,r14d
   14000a122:	mov    r8,rsi
   14000a125:	mov    ecx,r15d
   14000a128:	mov    QWORD PTR [rsp+0x20],rax
   14000a12d:	call   QWORD PTR [rip+0x510d]        # 0x14000f240
   14000a133:	jmp    0x14000a220
   14000a138:	test   eax,eax
   14000a13a:	jle    0x14000a220
   14000a140:	xor    edx,edx
   14000a142:	mov    rax,0xffffffffffffffe0
   14000a149:	div    r12
   14000a14c:	cmp    rax,0x2
   14000a150:	jb     0x14000a220
   14000a156:	lea    rcx,[r12+r12*1+0x10]
   14000a15b:	cmp    rcx,0x400
   14000a162:	ja     0x14000a192
   14000a164:	lea    rax,[rcx+0xf]
   14000a168:	cmp    rax,rcx
   14000a16b:	ja     0x14000a170
   14000a16d:	mov    rax,rdi
   14000a170:	and    rax,0xfffffffffffffff0
   14000a174:	call   0x14000eba0
   14000a179:	sub    rsp,rax
   14000a17c:	lea    rdi,[rsp+0x40]
   14000a181:	test   rdi,rdi
   14000a184:	je     0x14000a220
   14000a18a:	mov    DWORD PTR [rdi],0xcccc
   14000a190:	jmp    0x14000a1a5
   14000a192:	call   0x140006a30
   14000a197:	test   rax,rax
   14000a19a:	mov    rdi,rax
   14000a19d:	je     0x14000a1a9
   14000a19f:	mov    DWORD PTR [rax],0xdddd
   14000a1a5:	add    rdi,0x10
   14000a1a9:	test   rdi,rdi
   14000a1ac:	je     0x14000a220
   14000a1ae:	mov    edx,DWORD PTR [rbp+0x0]
   14000a1b1:	mov    r9d,r14d
   14000a1b4:	mov    r8,rsi
   14000a1b7:	mov    ecx,r15d
   14000a1ba:	mov    DWORD PTR [rsp+0x28],r12d
   14000a1bf:	mov    QWORD PTR [rsp+0x20],rdi
   14000a1c4:	call   QWORD PTR [rip+0x5076]        # 0x14000f240
   14000a1ca:	test   eax,eax
   14000a1cc:	je     0x14000a20e
   14000a1ce:	mov    eax,DWORD PTR [rbp+0x80]
   14000a1d4:	xor    edx,edx
   14000a1d6:	mov    QWORD PTR [rsp+0x38],rbx
   14000a1db:	test   eax,eax
   14000a1dd:	mov    r9d,r12d
   14000a1e0:	mov    r8,rdi
   14000a1e3:	mov    ecx,r13d
   14000a1e6:	mov    QWORD PTR [rsp+0x30],rbx
   14000a1eb:	jne    0x14000a1f8
   14000a1ed:	mov    DWORD PTR [rsp+0x28],ebx
   14000a1f1:	mov    QWORD PTR [rsp+0x20],rbx
   14000a1f6:	jmp    0x14000a205
   14000a1f8:	mov    DWORD PTR [rsp+0x28],eax
   14000a1fc:	mov    rax,QWORD PTR [rbp+0x78]
   14000a200:	mov    QWORD PTR [rsp+0x20],rax
   14000a205:	call   QWORD PTR [rip+0x500d]        # 0x14000f218
   14000a20b:	mov    r12d,eax
   14000a20e:	cmp    DWORD PTR [rdi-0x10],0xdddd
   14000a215:	lea    rcx,[rdi-0x10]
   14000a219:	jne    0x14000a220
   14000a21b:	call   0x140002700
   14000a220:	cmp    DWORD PTR [rsi-0x10],0xdddd
   14000a227:	lea    rcx,[rsi-0x10]
   14000a22b:	jne    0x14000a232
   14000a22d:	call   0x140002700
   14000a232:	mov    eax,r12d
   14000a235:	jmp    0x14000a3f6
   14000a23a:	test   r15d,r15d
   14000a23d:	mov    r12,rbx
   14000a240:	jne    0x14000a24d
   14000a242:	mov    rax,QWORD PTR [rdi]
   14000a245:	mov    r15d,DWORD PTR [rax+0x14]
   14000a249:	mov    DWORD PTR [rbp+0x10],r15d
   14000a24d:	mov    esi,DWORD PTR [rbp+0x88]
   14000a253:	test   esi,esi
   14000a255:	jne    0x14000a25d
   14000a257:	mov    rax,QWORD PTR [rdi]
   14000a25a:	mov    esi,DWORD PTR [rax+0x4]
   14000a25d:	mov    ecx,r15d
   14000a260:	call   0x14000bcf0
   14000a265:	cmp    eax,0xffffffff
   14000a268:	mov    r13d,eax
   14000a26b:	jne    0x14000a274
   14000a26d:	xor    eax,eax
   14000a26f:	jmp    0x14000a3f6
   14000a274:	cmp    eax,esi
   14000a276:	mov    r8,r14
   14000a279:	je     0x14000a3cf
   14000a27f:	lea    r9,[rbp+0x70]
   14000a283:	mov    edx,eax
   14000a285:	mov    ecx,esi
   14000a287:	mov    DWORD PTR [rsp+0x28],ebx
   14000a28b:	mov    QWORD PTR [rsp+0x20],rbx
   14000a290:	call   0x14000bd60
   14000a295:	test   rax,rax
   14000a298:	mov    r14,rax
   14000a29b:	je     0x14000a26d
   14000a29d:	mov    r9d,DWORD PTR [rbp+0x70]
   14000a2a1:	mov    edx,DWORD PTR [rbp+0x0]
   14000a2a4:	mov    r8,rax
   14000a2a7:	mov    ecx,r15d
   14000a2aa:	mov    DWORD PTR [rsp+0x28],ebx
   14000a2ae:	mov    QWORD PTR [rsp+0x20],rbx
   14000a2b3:	call   QWORD PTR [rip+0x4f7f]        # 0x14000f238
   14000a2b9:	mov    r15,QWORD PTR [rbp+0x78]
   14000a2bd:	test   eax,eax
   14000a2bf:	movsxd r9,eax
   14000a2c2:	mov    DWORD PTR [rbp+0x8],r9d
   14000a2c6:	jle    0x14000a3b3
   14000a2cc:	cmp    r9,0xffffffffffffffe0
   14000a2d0:	mov    rcx,r9
   14000a2d3:	ja     0x14000a3b3
   14000a2d9:	add    rcx,0x10
   14000a2dd:	cmp    rcx,0x400
   14000a2e4:	ja     0x14000a31e
   14000a2e6:	lea    rdi,[rcx+0xf]
   14000a2ea:	cmp    rdi,rcx
   14000a2ed:	ja     0x14000a2f9
   14000a2ef:	movabs rdi,0xffffffffffffff0
   14000a2f9:	and    rdi,0xfffffffffffffff0
   14000a2fd:	mov    rax,rdi
   14000a300:	call   0x14000eba0
   14000a305:	sub    rsp,rdi
   14000a308:	lea    rdi,[rsp+0x40]
   14000a30d:	test   rdi,rdi
   14000a310:	je     0x14000a3b3
   14000a316:	mov    DWORD PTR [rdi],0xcccc
   14000a31c:	jmp    0x14000a331
   14000a31e:	call   0x140006a30
   14000a323:	test   rax,rax
   14000a326:	mov    rdi,rax
   14000a329:	je     0x14000a335
   14000a32b:	mov    DWORD PTR [rax],0xdddd
   14000a331:	add    rdi,0x10
   14000a335:	test   rdi,rdi
   14000a338:	mov    r9d,DWORD PTR [rbp+0x8]
   14000a33c:	je     0x14000a3b3
   14000a33e:	movsxd r8,r9d
   14000a341:	xor    edx,edx
   14000a343:	mov    rcx,rdi
   14000a346:	call   0x140002760
   14000a34b:	mov    r11d,DWORD PTR [rbp+0x8]
   14000a34f:	mov    r9d,DWORD PTR [rbp+0x70]
   14000a353:	mov    edx,DWORD PTR [rbp+0x0]
   14000a356:	mov    ecx,DWORD PTR [rbp+0x10]
   14000a359:	mov    DWORD PTR [rsp+0x28],r11d
   14000a35e:	mov    r8,r14
   14000a361:	mov    QWORD PTR [rsp+0x20],rdi
   14000a366:	call   QWORD PTR [rip+0x4ecc]        # 0x14000f238
   14000a36c:	test   eax,eax
   14000a36e:	mov    DWORD PTR [rbp+0x8],eax
   14000a371:	je     0x14000a3a1
   14000a373:	mov    eax,DWORD PTR [rbp+0x80]
   14000a379:	lea    r9,[rbp+0x8]
   14000a37d:	mov    r8,rdi
   14000a380:	mov    DWORD PTR [rsp+0x28],eax
   14000a384:	mov    edx,esi
   14000a386:	mov    ecx,r13d
   14000a389:	mov    QWORD PTR [rsp+0x20],r15
   14000a38e:	call   0x14000bd60
   14000a393:	mov    ecx,DWORD PTR [rbp+0x8]
   14000a396:	test   rax,rax
   14000a399:	mov    r12,rax
   14000a39c:	cmove  ecx,ebx
   14000a39f:	mov    ebx,ecx
   14000a3a1:	cmp    DWORD PTR [rdi-0x10],0xdddd
   14000a3a8:	lea    rcx,[rdi-0x10]
   14000a3ac:	jne    0x14000a3b3
   14000a3ae:	call   0x140002700
   14000a3b3:	mov    rcx,r14
   14000a3b6:	call   0x140002700
   14000a3bb:	test   r12,r12
   14000a3be:	je     0x14000a3f4
   14000a3c0:	cmp    r15,r12
   14000a3c3:	je     0x14000a3f4
   14000a3c5:	mov    rcx,r12
   14000a3c8:	call   0x140002700
   14000a3cd:	jmp    0x14000a3f4
   14000a3cf:	mov    eax,DWORD PTR [rbp+0x80]
   14000a3d5:	mov    r9d,DWORD PTR [rbp+0x70]
   14000a3d9:	mov    edx,DWORD PTR [rbp+0x0]
   14000a3dc:	mov    DWORD PTR [rsp+0x28],eax
   14000a3e0:	mov    rax,QWORD PTR [rbp+0x78]
   14000a3e4:	mov    ecx,r15d
   14000a3e7:	mov    QWORD PTR [rsp+0x20],rax
   14000a3ec:	call   QWORD PTR [rip+0x4e46]        # 0x14000f238
   14000a3f2:	mov    ebx,eax
   14000a3f4:	mov    eax,ebx
   14000a3f6:	mov    rcx,QWORD PTR [rbp+0x18]
   14000a3fa:	xor    rcx,rbp
   14000a3fd:	call   0x1400020b0
   14000a402:	mov    rbx,QWORD PTR [rbp+0x50]
   14000a406:	mov    rsi,QWORD PTR [rbp+0x58]
   14000a40a:	mov    rdi,QWORD PTR [rbp+0x60]
   14000a40e:	lea    rsp,[rbp+0x20]
   14000a412:	pop    r15
   14000a414:	pop    r14
   14000a416:	pop    r13
   14000a418:	pop    r12
   14000a41a:	pop    rbp
   14000a41b:	ret    
   14000a41c:	int3   
   14000a41d:	int3   
   14000a41e:	int3   
   14000a41f:	int3   
   14000a420:	mov    rax,rsp
   14000a423:	push   rbx
   14000a424:	sub    rsp,0x80
   14000a42b:	mov    QWORD PTR [rax+0x8],rbp
   14000a42f:	mov    QWORD PTR [rax+0x18],rdi
   14000a433:	xor    dil,dil
   14000a436:	test   rcx,rcx
   14000a439:	mov    QWORD PTR [rax-0x10],r12
   14000a43d:	mov    QWORD PTR [rax-0x18],r13
   14000a441:	mov    BYTE PTR [rax-0x20],dil
   14000a445:	mov    rbp,r9
   14000a448:	mov    r12d,r8d
   14000a44b:	mov    r13d,edx
   14000a44e:	jne    0x14000a4e1
   14000a454:	mov    QWORD PTR [rax+0x10],rsi
   14000a458:	call   0x140006240
   14000a45d:	mov    rcx,QWORD PTR [rax+0xc0]
   14000a464:	mov    rsi,QWORD PTR [rax+0xb8]
   14000a46b:	mov    rbx,rax
   14000a46e:	cmp    rcx,QWORD PTR [rip+0xacbb]        # 0x140015130
   14000a475:	mov    QWORD PTR [rsp+0x60],rax
   14000a47a:	mov    QWORD PTR [rsp+0x50],rcx
   14000a47f:	mov    QWORD PTR [rsp+0x58],rsi
   14000a484:	je     0x14000a49e
   14000a486:	mov    ecx,DWORD PTR [rax+0xc8]
   14000a48c:	test   DWORD PTR [rip+0xab26],ecx        # 0x140014fb8
   14000a492:	jne    0x14000a49e
   14000a494:	call   0x140008030
   14000a499:	mov    QWORD PTR [rsp+0x50],rax
   14000a49e:	cmp    rsi,QWORD PTR [rip+0xaa0b]        # 0x140014eb0
   14000a4a5:	mov    rsi,QWORD PTR [rsp+0x98]
   14000a4ad:	je     0x14000a4c7
   14000a4af:	mov    eax,DWORD PTR [rbx+0xc8]
   14000a4b5:	test   DWORD PTR [rip+0xaafd],eax        # 0x140014fb8
   14000a4bb:	jne    0x14000a4c7
   14000a4bd:	call   0x1400074e0
   14000a4c2:	mov    QWORD PTR [rsp+0x58],rax
   14000a4c7:	test   BYTE PTR [rbx+0xc8],0x2
   14000a4ce:	jne    0x14000a4fe
   14000a4d0:	or     DWORD PTR [rbx+0xc8],0x2
   14000a4d7:	mov    dil,0x1
   14000a4da:	mov    BYTE PTR [rsp+0x68],dil
   14000a4df:	jmp    0x14000a4fe
   14000a4e1:	mov    rax,QWORD PTR [rcx]
   14000a4e4:	lea    rdx,[rsp+0x50]
   14000a4e9:	mov    QWORD PTR [rdx],rax
   14000a4ec:	mov    rax,QWORD PTR [rcx+0x8]
   14000a4f0:	mov    QWORD PTR [rdx+0x8],rax
   14000a4f4:	movzx  edi,BYTE PTR [rsp+0x68]
   14000a4f9:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a4fe:	mov    eax,DWORD PTR [rsp+0xd0]
   14000a505:	lea    rcx,[rsp+0x50]
   14000a50a:	mov    r9,rbp
   14000a50d:	mov    DWORD PTR [rsp+0x40],eax
   14000a511:	mov    eax,DWORD PTR [rsp+0xc8]
   14000a518:	mov    r8d,r12d
   14000a51b:	mov    DWORD PTR [rsp+0x38],eax
   14000a51f:	mov    eax,DWORD PTR [rsp+0xc0]
   14000a526:	mov    edx,r13d
   14000a529:	mov    DWORD PTR [rsp+0x30],eax
   14000a52d:	mov    rax,QWORD PTR [rsp+0xb8]
   14000a535:	mov    QWORD PTR [rsp+0x28],rax
   14000a53a:	mov    eax,DWORD PTR [rsp+0xb0]
   14000a541:	mov    DWORD PTR [rsp+0x20],eax
   14000a545:	call   0x140009ee0
   14000a54a:	mov    r13,QWORD PTR [rsp+0x70]
   14000a54f:	mov    r12,QWORD PTR [rsp+0x78]
   14000a554:	mov    rbp,QWORD PTR [rsp+0x90]
   14000a55c:	test   dil,dil
   14000a55f:	mov    rdi,QWORD PTR [rsp+0xa0]
   14000a567:	je     0x14000a570
   14000a569:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14000a570:	add    rsp,0x80
   14000a577:	pop    rbx
   14000a578:	ret    
   14000a579:	int3   
   14000a57a:	int3   
   14000a57b:	int3   
   14000a57c:	int3   
   14000a57d:	int3   
   14000a57e:	int3   
   14000a57f:	int3   
   14000a580:	mov    DWORD PTR [rsp+0x20],r9d
   14000a585:	push   rbp
   14000a586:	push   r12
   14000a588:	push   r13
   14000a58a:	push   r14
   14000a58c:	push   r15
   14000a58e:	sub    rsp,0x40
   14000a592:	lea    rbp,[rsp+0x30]
   14000a597:	mov    QWORD PTR [rbp+0x40],rbx
   14000a59b:	mov    QWORD PTR [rbp+0x48],rsi
   14000a59f:	mov    QWORD PTR [rbp+0x50],rdi
   14000a5a3:	mov    rax,QWORD PTR [rip+0x9ab6]        # 0x140014060
   14000a5aa:	xor    rax,rbp
   14000a5ad:	mov    QWORD PTR [rbp+0x8],rax
   14000a5b1:	mov    eax,DWORD PTR [rip+0xbfa5]        # 0x14001655c
   14000a5b7:	mov    r14,r8
   14000a5ba:	mov    r15d,edx
   14000a5bd:	test   eax,eax
   14000a5bf:	mov    r12,rcx
   14000a5c2:	jne    0x14000a63e
   14000a5c4:	mov    r8d,0x1
   14000a5ca:	lea    r9,[rbp+0x0]
   14000a5ce:	lea    rdx,[rip+0x5f7f]        # 0x140010554
   14000a5d5:	mov    ecx,r8d
   14000a5d8:	call   QWORD PTR [rip+0x4c72]        # 0x14000f250
   14000a5de:	test   eax,eax
   14000a5e0:	je     0x14000a5ee
   14000a5e2:	mov    DWORD PTR [rip+0xbf70],0x1        # 0x14001655c
   14000a5ec:	jmp    0x14000a64c
   14000a5ee:	call   QWORD PTR [rip+0x4ab4]        # 0x14000f0a8
   14000a5f4:	cmp    eax,0x78
   14000a5f7:	jne    0x14000a638
   14000a5f9:	mov    DWORD PTR [rip+0xbf59],0x2        # 0x14001655c
   14000a603:	mov    esi,DWORD PTR [rbp+0x70]
   14000a606:	xor    edi,edi
   14000a608:	test   esi,esi
   14000a60a:	jne    0x14000a613
   14000a60c:	mov    rax,QWORD PTR [r12]
   14000a610:	mov    esi,DWORD PTR [rax+0x14]
   14000a613:	mov    ebx,DWORD PTR [rbp+0x68]
   14000a616:	test   ebx,ebx
   14000a618:	jne    0x14000a621
   14000a61a:	mov    rax,QWORD PTR [r12]
   14000a61e:	mov    ebx,DWORD PTR [rax+0x4]
   14000a621:	mov    ecx,esi
   14000a623:	call   0x14000bcf0
   14000a628:	cmp    eax,0xffffffff
   14000a62b:	jne    0x14000a75a
   14000a631:	xor    eax,eax
   14000a633:	jmp    0x14000a7b2
   14000a638:	mov    eax,DWORD PTR [rip+0xbf1e]        # 0x14001655c
   14000a63e:	cmp    eax,0x2
   14000a641:	je     0x14000a603
   14000a643:	test   eax,eax
   14000a645:	je     0x14000a603
   14000a647:	cmp    eax,0x1
   14000a64a:	jne    0x14000a631
   14000a64c:	mov    esi,DWORD PTR [rbp+0x68]
   14000a64f:	xor    edi,edi
   14000a651:	test   esi,esi
   14000a653:	jne    0x14000a65c
   14000a655:	mov    rax,QWORD PTR [r12]
   14000a659:	mov    esi,DWORD PTR [rax+0x4]
   14000a65c:	cmp    DWORD PTR [rbp+0x78],edi
   14000a65f:	mov    r9d,DWORD PTR [rbp+0x58]
   14000a663:	mov    edx,0x1
   14000a668:	mov    eax,0x9
   14000a66d:	mov    r8,r14
   14000a670:	mov    ecx,esi
   14000a672:	cmovne edx,eax
   14000a675:	mov    DWORD PTR [rsp+0x28],edi
   14000a679:	mov    QWORD PTR [rsp+0x20],rdi
   14000a67e:	call   QWORD PTR [rip+0x4ab4]        # 0x14000f138
   14000a684:	test   eax,eax
   14000a686:	movsxd r12,eax
   14000a689:	je     0x14000a631
   14000a68b:	jle    0x14000a631
   14000a68d:	movabs rax,0x7ffffffffffffff0
   14000a697:	cmp    r12,rax
   14000a69a:	ja     0x14000a631
   14000a69c:	lea    rcx,[r12+r12*1+0x10]
   14000a6a1:	cmp    rcx,0x400
   14000a6a8:	ja     0x14000a6df
   14000a6aa:	lea    rax,[rcx+0xf]
   14000a6ae:	cmp    rax,rcx
   14000a6b1:	ja     0x14000a6bd
   14000a6b3:	movabs rax,0xffffffffffffff0
   14000a6bd:	and    rax,0xfffffffffffffff0
   14000a6c1:	call   0x14000eba0
   14000a6c6:	sub    rsp,rax
   14000a6c9:	lea    rbx,[rsp+0x30]
   14000a6ce:	test   rbx,rbx
   14000a6d1:	je     0x14000a631
   14000a6d7:	mov    DWORD PTR [rbx],0xcccc
   14000a6dd:	jmp    0x14000a6f2
   14000a6df:	call   0x140006a30
   14000a6e4:	test   rax,rax
   14000a6e7:	mov    rbx,rax
   14000a6ea:	je     0x14000a6f6
   14000a6ec:	mov    DWORD PTR [rax],0xdddd
   14000a6f2:	add    rbx,0x10
   14000a6f6:	test   rbx,rbx
   14000a6f9:	je     0x14000a631
   14000a6ff:	lea    r8,[r12+r12*1]
   14000a703:	xor    edx,edx
   14000a705:	mov    rcx,rbx
   14000a708:	call   0x140002760
   14000a70d:	mov    r9d,DWORD PTR [rbp+0x58]
   14000a711:	mov    r8,r14
   14000a714:	mov    edx,0x1
   14000a719:	mov    ecx,esi
   14000a71b:	mov    DWORD PTR [rsp+0x28],r12d
   14000a720:	mov    QWORD PTR [rsp+0x20],rbx
   14000a725:	call   QWORD PTR [rip+0x4a0d]        # 0x14000f138
   14000a72b:	test   eax,eax
   14000a72d:	je     0x14000a744
   14000a72f:	mov    r9,QWORD PTR [rbp+0x60]
   14000a733:	mov    r8d,eax
   14000a736:	mov    rdx,rbx
   14000a739:	mov    ecx,r15d
   14000a73c:	call   QWORD PTR [rip+0x4b0e]        # 0x14000f250
   14000a742:	mov    edi,eax
   14000a744:	cmp    DWORD PTR [rbx-0x10],0xdddd
   14000a74b:	lea    rcx,[rbx-0x10]
   14000a74f:	jne    0x14000a756
   14000a751:	call   0x140002700
   14000a756:	mov    eax,edi
   14000a758:	jmp    0x14000a7b2
   14000a75a:	cmp    eax,ebx
   14000a75c:	je     0x14000a786
   14000a75e:	lea    r9,[rbp+0x58]
   14000a762:	mov    r8,r14
   14000a765:	mov    edx,eax
   14000a767:	mov    ecx,ebx
   14000a769:	mov    DWORD PTR [rsp+0x28],edi
   14000a76d:	mov    QWORD PTR [rsp+0x20],rdi
   14000a772:	call   0x14000bd60
   14000a777:	test   rax,rax
   14000a77a:	mov    rdi,rax
   14000a77d:	je     0x14000a631
   14000a783:	mov    r14,rax
   14000a786:	mov    rax,QWORD PTR [rbp+0x60]
   14000a78a:	mov    r9d,DWORD PTR [rbp+0x58]
   14000a78e:	mov    r8,r14
   14000a791:	mov    edx,r15d
   14000a794:	mov    ecx,esi
   14000a796:	mov    QWORD PTR [rsp+0x20],rax
   14000a79b:	call   QWORD PTR [rip+0x4aa7]        # 0x14000f248
   14000a7a1:	test   rdi,rdi
   14000a7a4:	mov    ebx,eax
   14000a7a6:	je     0x14000a7b0
   14000a7a8:	mov    rcx,rdi
   14000a7ab:	call   0x140002700
   14000a7b0:	mov    eax,ebx
   14000a7b2:	mov    rcx,QWORD PTR [rbp+0x8]
   14000a7b6:	xor    rcx,rbp
   14000a7b9:	call   0x1400020b0
   14000a7be:	mov    rbx,QWORD PTR [rbp+0x40]
   14000a7c2:	mov    rsi,QWORD PTR [rbp+0x48]
   14000a7c6:	mov    rdi,QWORD PTR [rbp+0x50]
   14000a7ca:	lea    rsp,[rbp+0x10]
   14000a7ce:	pop    r15
   14000a7d0:	pop    r14
   14000a7d2:	pop    r13
   14000a7d4:	pop    r12
   14000a7d6:	pop    rbp
   14000a7d7:	ret    
   14000a7d8:	int3   
   14000a7d9:	int3   
   14000a7da:	int3   
   14000a7db:	int3   
   14000a7dc:	int3   
   14000a7dd:	int3   
   14000a7de:	int3   
   14000a7df:	int3   
   14000a7e0:	mov    rax,rsp
   14000a7e3:	push   rbx
   14000a7e4:	sub    rsp,0x70
   14000a7e8:	mov    QWORD PTR [rax+0x8],rbp
   14000a7ec:	mov    QWORD PTR [rax+0x18],rdi
   14000a7f0:	xor    dil,dil
   14000a7f3:	test   rcx,rcx
   14000a7f6:	mov    QWORD PTR [rax-0x10],r12
   14000a7fa:	mov    QWORD PTR [rax-0x18],r13
   14000a7fe:	mov    BYTE PTR [rax-0x20],dil
   14000a802:	mov    ebp,r9d
   14000a805:	mov    r12,r8
   14000a808:	mov    r13d,edx
   14000a80b:	jne    0x14000a89e
   14000a811:	mov    QWORD PTR [rax+0x10],rsi
   14000a815:	call   0x140006240
   14000a81a:	mov    rcx,QWORD PTR [rax+0xc0]
   14000a821:	mov    rsi,QWORD PTR [rax+0xb8]
   14000a828:	mov    rbx,rax
   14000a82b:	cmp    rcx,QWORD PTR [rip+0xa8fe]        # 0x140015130
   14000a832:	mov    QWORD PTR [rsp+0x50],rax
   14000a837:	mov    QWORD PTR [rsp+0x40],rcx
   14000a83c:	mov    QWORD PTR [rsp+0x48],rsi
   14000a841:	je     0x14000a85b
   14000a843:	mov    ecx,DWORD PTR [rax+0xc8]
   14000a849:	test   DWORD PTR [rip+0xa769],ecx        # 0x140014fb8
   14000a84f:	jne    0x14000a85b
   14000a851:	call   0x140008030
   14000a856:	mov    QWORD PTR [rsp+0x40],rax
   14000a85b:	cmp    rsi,QWORD PTR [rip+0xa64e]        # 0x140014eb0
   14000a862:	mov    rsi,QWORD PTR [rsp+0x88]
   14000a86a:	je     0x14000a884
   14000a86c:	mov    eax,DWORD PTR [rbx+0xc8]
   14000a872:	test   DWORD PTR [rip+0xa740],eax        # 0x140014fb8
   14000a878:	jne    0x14000a884
   14000a87a:	call   0x1400074e0
   14000a87f:	mov    QWORD PTR [rsp+0x48],rax
   14000a884:	test   BYTE PTR [rbx+0xc8],0x2
   14000a88b:	jne    0x14000a8bb
   14000a88d:	or     DWORD PTR [rbx+0xc8],0x2
   14000a894:	mov    dil,0x1
   14000a897:	mov    BYTE PTR [rsp+0x58],dil
   14000a89c:	jmp    0x14000a8bb
   14000a89e:	mov    rax,QWORD PTR [rcx]
   14000a8a1:	lea    rdx,[rsp+0x40]
   14000a8a6:	mov    QWORD PTR [rdx],rax
   14000a8a9:	mov    rax,QWORD PTR [rcx+0x8]
   14000a8ad:	mov    QWORD PTR [rdx+0x8],rax
   14000a8b1:	movzx  edi,BYTE PTR [rsp+0x58]
   14000a8b6:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a8bb:	mov    eax,DWORD PTR [rsp+0xb8]
   14000a8c2:	lea    rcx,[rsp+0x40]
   14000a8c7:	mov    r9d,ebp
   14000a8ca:	mov    DWORD PTR [rsp+0x38],eax
   14000a8ce:	mov    eax,DWORD PTR [rsp+0xb0]
   14000a8d5:	mov    r8,r12
   14000a8d8:	mov    DWORD PTR [rsp+0x30],eax
   14000a8dc:	mov    eax,DWORD PTR [rsp+0xa8]
   14000a8e3:	mov    edx,r13d
   14000a8e6:	mov    DWORD PTR [rsp+0x28],eax
   14000a8ea:	mov    rax,QWORD PTR [rsp+0xa0]
   14000a8f2:	mov    QWORD PTR [rsp+0x20],rax
   14000a8f7:	call   0x14000a580
   14000a8fc:	mov    r13,QWORD PTR [rsp+0x60]
   14000a901:	mov    r12,QWORD PTR [rsp+0x68]
   14000a906:	mov    rbp,QWORD PTR [rsp+0x80]
   14000a90e:	test   dil,dil
   14000a911:	mov    rdi,QWORD PTR [rsp+0x90]
   14000a919:	je     0x14000a922
   14000a91b:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14000a922:	add    rsp,0x70
   14000a926:	pop    rbx
   14000a927:	ret    
   14000a928:	int3   
   14000a929:	int3   
   14000a92a:	int3   
   14000a92b:	int3   
   14000a92c:	int3   
   14000a92d:	int3   
   14000a92e:	int3   
   14000a92f:	int3   
   14000a930:	test   rcx,rcx
   14000a933:	je     0x14000ab19
   14000a939:	push   rbx
   14000a93a:	sub    rsp,0x20
   14000a93e:	mov    rbx,rcx
   14000a941:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a945:	call   0x140002700
   14000a94a:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a94e:	call   0x140002700
   14000a953:	mov    rcx,QWORD PTR [rbx+0x18]
   14000a957:	call   0x140002700
   14000a95c:	mov    rcx,QWORD PTR [rbx+0x20]
   14000a960:	call   0x140002700
   14000a965:	mov    rcx,QWORD PTR [rbx+0x28]
   14000a969:	call   0x140002700
   14000a96e:	mov    rcx,QWORD PTR [rbx+0x30]
   14000a972:	call   0x140002700
   14000a977:	mov    rcx,QWORD PTR [rbx]
   14000a97a:	call   0x140002700
   14000a97f:	mov    rcx,QWORD PTR [rbx+0x40]
   14000a983:	call   0x140002700
   14000a988:	mov    rcx,QWORD PTR [rbx+0x48]
   14000a98c:	call   0x140002700
   14000a991:	mov    rcx,QWORD PTR [rbx+0x50]
   14000a995:	call   0x140002700
   14000a99a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000a99e:	call   0x140002700
   14000a9a3:	mov    rcx,QWORD PTR [rbx+0x60]
   14000a9a7:	call   0x140002700
   14000a9ac:	mov    rcx,QWORD PTR [rbx+0x68]
   14000a9b0:	call   0x140002700
   14000a9b5:	mov    rcx,QWORD PTR [rbx+0x38]
   14000a9b9:	call   0x140002700
   14000a9be:	mov    rcx,QWORD PTR [rbx+0x70]
   14000a9c2:	call   0x140002700
   14000a9c7:	mov    rcx,QWORD PTR [rbx+0x78]
   14000a9cb:	call   0x140002700
   14000a9d0:	mov    rcx,QWORD PTR [rbx+0x80]
   14000a9d7:	call   0x140002700
   14000a9dc:	mov    rcx,QWORD PTR [rbx+0x88]
   14000a9e3:	call   0x140002700
   14000a9e8:	mov    rcx,QWORD PTR [rbx+0x90]
   14000a9ef:	call   0x140002700
   14000a9f4:	mov    rcx,QWORD PTR [rbx+0x98]
   14000a9fb:	call   0x140002700
   14000aa00:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000aa07:	call   0x140002700
   14000aa0c:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000aa13:	call   0x140002700
   14000aa18:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000aa1f:	call   0x140002700
   14000aa24:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000aa2b:	call   0x140002700
   14000aa30:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000aa37:	call   0x140002700
   14000aa3c:	mov    rcx,QWORD PTR [rbx+0xc8]
   14000aa43:	call   0x140002700
   14000aa48:	mov    rcx,QWORD PTR [rbx+0xd0]
   14000aa4f:	call   0x140002700
   14000aa54:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000aa5b:	call   0x140002700
   14000aa60:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000aa67:	call   0x140002700
   14000aa6c:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000aa73:	call   0x140002700
   14000aa78:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000aa7f:	call   0x140002700
   14000aa84:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000aa8b:	call   0x140002700
   14000aa90:	mov    rcx,QWORD PTR [rbx+0x100]
   14000aa97:	call   0x140002700
   14000aa9c:	mov    rcx,QWORD PTR [rbx+0x108]
   14000aaa3:	call   0x140002700
   14000aaa8:	mov    rcx,QWORD PTR [rbx+0x110]
   14000aaaf:	call   0x140002700
   14000aab4:	mov    rcx,QWORD PTR [rbx+0x118]
   14000aabb:	call   0x140002700
   14000aac0:	mov    rcx,QWORD PTR [rbx+0x120]
   14000aac7:	call   0x140002700
   14000aacc:	mov    rcx,QWORD PTR [rbx+0x128]
   14000aad3:	call   0x140002700
   14000aad8:	mov    rcx,QWORD PTR [rbx+0x130]
   14000aadf:	call   0x140002700
   14000aae4:	mov    rcx,QWORD PTR [rbx+0x138]
   14000aaeb:	call   0x140002700
   14000aaf0:	mov    rcx,QWORD PTR [rbx+0x140]
   14000aaf7:	call   0x140002700
   14000aafc:	mov    rcx,QWORD PTR [rbx+0x148]
   14000ab03:	call   0x140002700
   14000ab08:	mov    rcx,QWORD PTR [rbx+0x150]
   14000ab0f:	call   0x140002700
   14000ab14:	add    rsp,0x20
   14000ab18:	pop    rbx
   14000ab19:	ret    0x0
   14000ab1c:	int3   
   14000ab1d:	int3   
   14000ab1e:	int3   
   14000ab1f:	int3   
   14000ab20:	test   rcx,rcx
   14000ab23:	je     0x14000ab67
   14000ab25:	push   rbx
   14000ab26:	sub    rsp,0x20
   14000ab2a:	mov    rbx,rcx
   14000ab2d:	mov    rcx,QWORD PTR [rcx]
   14000ab30:	cmp    rcx,QWORD PTR [rip+0xa809]        # 0x140015340
   14000ab37:	je     0x14000ab3e
   14000ab39:	call   0x140002700
   14000ab3e:	mov    rcx,QWORD PTR [rbx+0x8]
   14000ab42:	cmp    rcx,QWORD PTR [rip+0xa7ff]        # 0x140015348
   14000ab49:	je     0x14000ab50
   14000ab4b:	call   0x140002700
   14000ab50:	mov    rcx,QWORD PTR [rbx+0x10]
   14000ab54:	cmp    rcx,QWORD PTR [rip+0xa7f5]        # 0x140015350
   14000ab5b:	je     0x14000ab62
   14000ab5d:	call   0x140002700
   14000ab62:	add    rsp,0x20
   14000ab66:	pop    rbx
   14000ab67:	ret    0x0
   14000ab6a:	int3   
   14000ab6b:	int3   
   14000ab6c:	int3   
   14000ab6d:	int3   
   14000ab6e:	int3   
   14000ab6f:	int3   
   14000ab70:	test   rcx,rcx
   14000ab73:	je     0x14000ac04
   14000ab79:	push   rbx
   14000ab7a:	sub    rsp,0x20
   14000ab7e:	mov    rbx,rcx
   14000ab81:	mov    rcx,QWORD PTR [rcx+0x18]
   14000ab85:	cmp    rcx,QWORD PTR [rip+0xa7cc]        # 0x140015358
   14000ab8c:	je     0x14000ab93
   14000ab8e:	call   0x140002700
   14000ab93:	mov    rcx,QWORD PTR [rbx+0x20]
   14000ab97:	cmp    rcx,QWORD PTR [rip+0xa7c2]        # 0x140015360
   14000ab9e:	je     0x14000aba5
   14000aba0:	call   0x140002700
   14000aba5:	mov    rcx,QWORD PTR [rbx+0x28]
   14000aba9:	cmp    rcx,QWORD PTR [rip+0xa7b8]        # 0x140015368
   14000abb0:	je     0x14000abb7
   14000abb2:	call   0x140002700
   14000abb7:	mov    rcx,QWORD PTR [rbx+0x30]
   14000abbb:	cmp    rcx,QWORD PTR [rip+0xa7ae]        # 0x140015370
   14000abc2:	je     0x14000abc9
   14000abc4:	call   0x140002700
   14000abc9:	mov    rcx,QWORD PTR [rbx+0x38]
   14000abcd:	cmp    rcx,QWORD PTR [rip+0xa7a4]        # 0x140015378
   14000abd4:	je     0x14000abdb
   14000abd6:	call   0x140002700
   14000abdb:	mov    rcx,QWORD PTR [rbx+0x40]
   14000abdf:	cmp    rcx,QWORD PTR [rip+0xa79a]        # 0x140015380
   14000abe6:	je     0x14000abed
   14000abe8:	call   0x140002700
   14000abed:	mov    rcx,QWORD PTR [rbx+0x48]
   14000abf1:	cmp    rcx,QWORD PTR [rip+0xa790]        # 0x140015388
   14000abf8:	je     0x14000abff
   14000abfa:	call   0x140002700
   14000abff:	add    rsp,0x20
   14000ac03:	pop    rbx
   14000ac04:	ret    0x0
   14000ac07:	int3   
   14000ac08:	int3   
   14000ac09:	int3   
   14000ac0a:	int3   
   14000ac0b:	int3   
   14000ac0c:	int3   
   14000ac0d:	int3   
   14000ac0e:	int3   
   14000ac0f:	int3   
   14000ac10:	int3   
   14000ac11:	int3   
   14000ac12:	int3   
   14000ac13:	int3   
   14000ac14:	int3   
   14000ac15:	int3   
   14000ac16:	data16 data16 xchg ax,ax
   14000ac1a:	data16 data16 xchg ax,ax
   14000ac1e:	xchg   ax,ax
   14000ac20:	sub    rdx,rcx
   14000ac23:	cmp    r8,0x8
   14000ac27:	jb     0x14000ac4b
   14000ac29:	test   cl,0x7
   14000ac2c:	je     0x14000ac42
   14000ac2e:	xchg   ax,ax
   14000ac30:	mov    al,BYTE PTR [rcx]
   14000ac32:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000ac35:	jne    0x14000ac63
   14000ac37:	inc    rcx
   14000ac3a:	dec    r8
   14000ac3d:	test   cl,0x7
   14000ac40:	jne    0x14000ac30
   14000ac42:	mov    r9,r8
   14000ac45:	shr    r9,0x3
   14000ac49:	jne    0x14000ac6a
   14000ac4b:	test   r8,r8
   14000ac4e:	je     0x14000ac5f
   14000ac50:	mov    al,BYTE PTR [rcx]
   14000ac52:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000ac55:	jne    0x14000ac63
   14000ac57:	inc    rcx
   14000ac5a:	dec    r8
   14000ac5d:	jne    0x14000ac50
   14000ac5f:	xor    rax,rax
   14000ac62:	ret    
   14000ac63:	sbb    eax,eax
   14000ac65:	sbb    eax,0xffffffff
   14000ac68:	ret    
   14000ac69:	nop
   14000ac6a:	shr    r9,0x2
   14000ac6e:	je     0x14000aca7
   14000ac70:	mov    rax,QWORD PTR [rcx]
   14000ac73:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000ac77:	jne    0x14000acd4
   14000ac79:	mov    rax,QWORD PTR [rcx+0x8]
   14000ac7d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000ac82:	jne    0x14000acd0
   14000ac84:	mov    rax,QWORD PTR [rcx+0x10]
   14000ac88:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000ac8d:	jne    0x14000accc
   14000ac8f:	mov    rax,QWORD PTR [rcx+0x18]
   14000ac93:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000ac98:	jne    0x14000acc8
   14000ac9a:	add    rcx,0x20
   14000ac9e:	dec    r9
   14000aca1:	jne    0x14000ac70
   14000aca3:	and    r8,0x1f
   14000aca7:	mov    r9,r8
   14000acaa:	shr    r9,0x3
   14000acae:	je     0x14000ac4b
   14000acb0:	mov    rax,QWORD PTR [rcx]
   14000acb3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000acb7:	jne    0x14000acd4
   14000acb9:	add    rcx,0x8
   14000acbd:	dec    r9
   14000acc0:	jne    0x14000acb0
   14000acc2:	and    r8,0x7
   14000acc6:	jmp    0x14000ac4b
   14000acc8:	add    rcx,0x8
   14000accc:	add    rcx,0x8
   14000acd0:	add    rcx,0x8
   14000acd4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000acd8:	bswap  rax
   14000acdb:	bswap  rcx
   14000acde:	cmp    rax,rcx
   14000ace1:	sbb    eax,eax
   14000ace3:	sbb    eax,0xffffffff
   14000ace6:	ret    
   14000ace7:	int3   
   14000ace8:	int3   
   14000ace9:	int3   
   14000acea:	int3   
   14000aceb:	int3   
   14000acec:	int3   
   14000aced:	int3   
   14000acee:	int3   
   14000acef:	int3   
   14000acf0:	int3   
   14000acf1:	int3   
   14000acf2:	int3   
   14000acf3:	int3   
   14000acf4:	int3   
   14000acf5:	int3   
   14000acf6:	data16 data16 xchg ax,ax
   14000acfa:	data16 data16 xchg ax,ax
   14000acfe:	xchg   ax,ax
   14000ad00:	test   r8,r8
   14000ad03:	je     0x14000ad7a
   14000ad05:	sub    rdx,rcx
   14000ad08:	mov    r9,rdx
   14000ad0b:	movabs r11,0x8101010101010100
   14000ad15:	test   cl,0x7
   14000ad18:	je     0x14000ad39
   14000ad1a:	mov    al,BYTE PTR [rcx]
   14000ad1c:	mov    dl,BYTE PTR [rcx+r9*1]
   14000ad20:	inc    rcx
   14000ad23:	cmp    al,dl
   14000ad25:	jne    0x14000ad7e
   14000ad27:	dec    r8
   14000ad2a:	je     0x14000ad7a
   14000ad2c:	test   al,al
   14000ad2e:	je     0x14000ad7a
   14000ad30:	test   rcx,0x7
   14000ad37:	jne    0x14000ad1a
   14000ad39:	lea    rdx,[rcx+r9*1]
   14000ad3d:	and    dx,0xfff
   14000ad42:	cmp    dx,0xff8
   14000ad47:	ja     0x14000ad1a
   14000ad49:	mov    rax,QWORD PTR [rcx]
   14000ad4c:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000ad50:	cmp    rax,rdx
   14000ad53:	jne    0x14000ad1a
   14000ad55:	add    rcx,0x8
   14000ad59:	sub    r8,0x8
   14000ad5d:	movabs r10,0x7efefefefefefeff
   14000ad67:	jbe    0x14000ad7a
   14000ad69:	xor    rax,0xffffffffffffffff
   14000ad6d:	add    r10,rdx
   14000ad70:	xor    rax,r10
   14000ad73:	test   r11,rax
   14000ad76:	je     0x14000ad39
   14000ad78:	jmp    0x14000ad86
   14000ad7a:	xor    rax,rax
   14000ad7d:	ret    
   14000ad7e:	sbb    rax,rax
   14000ad81:	sbb    rax,0xffffffffffffffff
   14000ad85:	ret    
   14000ad86:	test   dl,dl
   14000ad88:	je     0x14000adb1
   14000ad8a:	test   dh,dh
   14000ad8c:	je     0x14000adb1
   14000ad8e:	shr    rdx,0x10
   14000ad92:	test   dl,dl
   14000ad94:	je     0x14000adb1
   14000ad96:	test   dh,dh
   14000ad98:	je     0x14000adb1
   14000ad9a:	shr    rdx,0x10
   14000ad9e:	test   dl,dl
   14000ada0:	je     0x14000adb1
   14000ada2:	test   dh,dh
   14000ada4:	je     0x14000adb1
   14000ada6:	shr    edx,0x10
   14000ada9:	test   dl,dl
   14000adab:	je     0x14000adb1
   14000adad:	test   dh,dh
   14000adaf:	jne    0x14000ad39
   14000adb1:	xor    rax,rax
   14000adb4:	ret    
   14000adb5:	int3   
   14000adb6:	int3   
   14000adb7:	int3   
   14000adb8:	int3   
   14000adb9:	int3   
   14000adba:	int3   
   14000adbb:	int3   
   14000adbc:	int3   
   14000adbd:	int3   
   14000adbe:	int3   
   14000adbf:	int3   
   14000adc0:	rex push rbx
   14000adc2:	push   rdi
   14000adc3:	push   r12
   14000adc5:	sub    rsp,0x20
   14000adc9:	mov    r12d,ecx
   14000adcc:	mov    rcx,rdx
   14000adcf:	mov    rbx,rdx
   14000add2:	call   0x1400071d0
   14000add7:	mov    edx,DWORD PTR [rbx+0x18]
   14000adda:	test   dl,0x82
   14000addd:	movsxd rdi,eax
   14000ade0:	jne    0x14000adff
   14000ade2:	call   0x140004100
   14000ade7:	mov    DWORD PTR [rax],0x9
   14000aded:	or     DWORD PTR [rbx+0x18],0x20
   14000adf1:	mov    eax,0xffff
   14000adf6:	add    rsp,0x20
   14000adfa:	pop    r12
   14000adfc:	pop    rdi
   14000adfd:	pop    rbx
   14000adfe:	ret    
   14000adff:	test   dl,0x40
   14000ae02:	je     0x14000ae21
   14000ae04:	call   0x140004100
   14000ae09:	mov    DWORD PTR [rax],0x22
   14000ae0f:	or     DWORD PTR [rbx+0x18],0x20
   14000ae13:	mov    eax,0xffff
   14000ae18:	add    rsp,0x20
   14000ae1c:	pop    r12
   14000ae1e:	pop    rdi
   14000ae1f:	pop    rbx
   14000ae20:	ret    
   14000ae21:	mov    QWORD PTR [rsp+0x50],rsi
   14000ae26:	xor    esi,esi
   14000ae28:	test   dl,0x1
   14000ae2b:	je     0x14000ae46
   14000ae2d:	test   dl,0x10
   14000ae30:	mov    DWORD PTR [rbx+0x8],esi
   14000ae33:	je     0x14000aed3
   14000ae39:	mov    rax,QWORD PTR [rbx+0x10]
   14000ae3d:	and    edx,0xfffffffe
   14000ae40:	mov    QWORD PTR [rbx],rax
   14000ae43:	mov    DWORD PTR [rbx+0x18],edx
   14000ae46:	mov    eax,DWORD PTR [rbx+0x18]
   14000ae49:	mov    DWORD PTR [rbx+0x8],esi
   14000ae4c:	and    eax,0xffffffef
   14000ae4f:	or     eax,0x2
   14000ae52:	test   eax,0x10c
   14000ae57:	mov    DWORD PTR [rbx+0x18],eax
   14000ae5a:	jne    0x14000ae8b
   14000ae5c:	call   0x140002b70
   14000ae61:	add    rax,0x30
   14000ae65:	cmp    rbx,rax
   14000ae68:	je     0x14000ae78
   14000ae6a:	call   0x140002b70
   14000ae6f:	add    rax,0x60
   14000ae73:	cmp    rbx,rax
   14000ae76:	jne    0x14000ae83
   14000ae78:	mov    ecx,edi
   14000ae7a:	call   0x140007150
   14000ae7f:	test   eax,eax
   14000ae81:	jne    0x14000ae8b
   14000ae83:	mov    rcx,rbx
   14000ae86:	call   0x14000bff0
   14000ae8b:	test   DWORD PTR [rbx+0x18],0x108
   14000ae92:	mov    QWORD PTR [rsp+0x40],rbp
   14000ae97:	je     0x14000af42
   14000ae9d:	mov    ebp,DWORD PTR [rbx]
   14000ae9f:	mov    rdx,QWORD PTR [rbx+0x10]
   14000aea3:	sub    ebp,DWORD PTR [rbx+0x10]
   14000aea6:	lea    rax,[rdx+0x2]
   14000aeaa:	mov    QWORD PTR [rbx],rax
   14000aead:	mov    eax,DWORD PTR [rbx+0x24]
   14000aeb0:	sub    eax,0x2
   14000aeb3:	test   ebp,ebp
   14000aeb5:	mov    DWORD PTR [rbx+0x8],eax
   14000aeb8:	jle    0x14000aeec
   14000aeba:	mov    r8d,ebp
   14000aebd:	mov    ecx,edi
   14000aebf:	call   0x140009c50
   14000aec4:	mov    esi,eax
   14000aec6:	mov    rax,QWORD PTR [rbx+0x10]
   14000aeca:	mov    WORD PTR [rax],r12w
   14000aece:	jmp    0x14000af5e
   14000aed3:	mov    rsi,QWORD PTR [rsp+0x50]
   14000aed8:	or     edx,0x20
   14000aedb:	mov    eax,0xffff
   14000aee0:	mov    DWORD PTR [rbx+0x18],edx
   14000aee3:	add    rsp,0x20
   14000aee7:	pop    r12
   14000aee9:	pop    rdi
   14000aeea:	pop    rbx
   14000aeeb:	ret    
   14000aeec:	cmp    edi,0xffffffff
   14000aeef:	je     0x14000af18
   14000aef1:	cmp    edi,0xfffffffe
   14000aef4:	je     0x14000af18
   14000aef6:	mov    rax,rdi
   14000aef9:	mov    rcx,rdi
   14000aefc:	lea    r8,[rip+0xb73d]        # 0x140016640
   14000af03:	and    eax,0x1f
   14000af06:	sar    rcx,0x5
   14000af0a:	lea    rdx,[rax+rax*4]
   14000af0e:	shl    rdx,0x4
   14000af12:	add    rdx,QWORD PTR [r8+rcx*8]
   14000af16:	jmp    0x14000af1f
   14000af18:	lea    rdx,[rip+0x98c1]        # 0x1400147e0
   14000af1f:	test   BYTE PTR [rdx+0x8],0x20
   14000af23:	je     0x14000af38
   14000af25:	xor    edx,edx
   14000af27:	mov    ecx,edi
   14000af29:	lea    r8d,[rdx+0x2]
   14000af2d:	call   0x14000b920
   14000af32:	cmp    rax,0xffffffffffffffff
   14000af36:	je     0x14000af62
   14000af38:	mov    rax,QWORD PTR [rbx+0x10]
   14000af3c:	mov    WORD PTR [rax],r12w
   14000af40:	jmp    0x14000af5e
   14000af42:	mov    ebp,0x2
   14000af47:	lea    rdx,[rsp+0x48]
   14000af4c:	mov    ecx,edi
   14000af4e:	mov    r8d,ebp
   14000af51:	mov    WORD PTR [rsp+0x48],r12w
   14000af57:	call   0x140009c50
   14000af5c:	mov    esi,eax
   14000af5e:	cmp    esi,ebp
   14000af60:	je     0x14000af6d
   14000af62:	or     DWORD PTR [rbx+0x18],0x20
   14000af66:	mov    eax,0xffff
   14000af6b:	jmp    0x14000af71
   14000af6d:	movzx  eax,r12w
   14000af71:	mov    rbp,QWORD PTR [rsp+0x40]
   14000af76:	mov    rsi,QWORD PTR [rsp+0x50]
   14000af7b:	add    rsp,0x20
   14000af7f:	pop    r12
   14000af81:	pop    rdi
   14000af82:	pop    rbx
   14000af83:	ret    
   14000af84:	int3   
   14000af85:	int3   
   14000af86:	int3   
   14000af87:	int3   
   14000af88:	int3   
   14000af89:	int3   
   14000af8a:	int3   
   14000af8b:	int3   
   14000af8c:	int3   
   14000af8d:	int3   
   14000af8e:	int3   
   14000af8f:	int3   
   14000af90:	mov    WORD PTR [rsp+0x20],r9w
   14000af96:	push   rsi
   14000af97:	push   rdi
   14000af98:	push   r12
   14000af9a:	push   r13
   14000af9c:	sub    rsp,0x68
   14000afa0:	test   rdx,rdx
   14000afa3:	mov    rsi,r8
   14000afa6:	mov    r13,rdx
   14000afa9:	mov    rdi,rcx
   14000afac:	jne    0x14000afcb
   14000afae:	test   r8,r8
   14000afb1:	je     0x14000afcb
   14000afb3:	test   rcx,rcx
   14000afb6:	je     0x14000afbe
   14000afb8:	xor    r12d,r12d
   14000afbb:	mov    DWORD PTR [rcx],r12d
   14000afbe:	xor    eax,eax
   14000afc0:	add    rsp,0x68
   14000afc4:	pop    r13
   14000afc6:	pop    r12
   14000afc8:	pop    rdi
   14000afc9:	pop    rsi
   14000afca:	ret    
   14000afcb:	test   rcx,rcx
   14000afce:	je     0x14000afd6
   14000afd0:	mov    DWORD PTR [rcx],0xffffffff
   14000afd6:	cmp    r8,0x7fffffff
   14000afdd:	jbe    0x14000b011
   14000afdf:	call   0x140004100
   14000afe4:	xor    r12d,r12d
   14000afe7:	xor    r9d,r9d
   14000afea:	xor    r8d,r8d
   14000afed:	xor    edx,edx
   14000afef:	xor    ecx,ecx
   14000aff1:	mov    DWORD PTR [rax],0x16
   14000aff7:	mov    QWORD PTR [rsp+0x20],r12
   14000affc:	call   0x140003fa0
   14000b001:	lea    eax,[r12+0x16]
   14000b006:	add    rsp,0x68
   14000b00a:	pop    r13
   14000b00c:	pop    r12
   14000b00e:	pop    rdi
   14000b00f:	pop    rsi
   14000b010:	ret    
   14000b011:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000b019:	mov    QWORD PTR [rsp+0x90],rbx
   14000b021:	mov    QWORD PTR [rsp+0xa0],rbp
   14000b029:	xor    bpl,bpl
   14000b02c:	test   rcx,rcx
   14000b02f:	mov    QWORD PTR [rsp+0x60],r14
   14000b034:	mov    BYTE PTR [rsp+0x58],bpl
   14000b039:	jne    0x14000b0b9
   14000b03b:	call   0x140006240
   14000b040:	mov    rbx,rax
   14000b043:	mov    r14,QWORD PTR [rax+0xc0]
   14000b04a:	mov    r12,QWORD PTR [rax+0xb8]
   14000b051:	cmp    r14,QWORD PTR [rip+0xa0d8]        # 0x140015130
   14000b058:	je     0x14000b070
   14000b05a:	mov    ecx,DWORD PTR [rax+0xc8]
   14000b060:	test   DWORD PTR [rip+0x9f52],ecx        # 0x140014fb8
   14000b066:	jne    0x14000b070
   14000b068:	call   0x140008030
   14000b06d:	mov    r14,rax
   14000b070:	cmp    r12,QWORD PTR [rip+0x9e39]        # 0x140014eb0
   14000b077:	je     0x14000b08c
   14000b079:	mov    ecx,DWORD PTR [rbx+0xc8]
   14000b07f:	test   DWORD PTR [rip+0x9f33],ecx        # 0x140014fb8
   14000b085:	jne    0x14000b08c
   14000b087:	call   0x1400074e0
   14000b08c:	mov    ecx,DWORD PTR [rbx+0xc8]
   14000b092:	test   cl,0x2
   14000b095:	jne    0x14000b0ae
   14000b097:	or     ecx,0x2
   14000b09a:	mov    bpl,0x1
   14000b09d:	mov    DWORD PTR [rbx+0xc8],ecx
   14000b0a3:	movzx  r9d,WORD PTR [rsp+0xa8]
   14000b0ac:	jmp    0x14000b0db
   14000b0ae:	mov    r9w,WORD PTR [rsp+0xa8]
   14000b0b7:	jmp    0x14000b0db
   14000b0b9:	mov    rax,QWORD PTR [rcx]
   14000b0bc:	lea    rdx,[rsp+0x40]
   14000b0c1:	mov    QWORD PTR [rdx],rax
   14000b0c4:	mov    rax,QWORD PTR [rcx+0x8]
   14000b0c8:	mov    QWORD PTR [rdx+0x8],rax
   14000b0cc:	movzx  ebp,BYTE PTR [rsp+0x58]
   14000b0d1:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b0d6:	mov    r14,QWORD PTR [rsp+0x40]
   14000b0db:	cmp    DWORD PTR [r14+0x14],0x0
   14000b0e0:	jne    0x14000b149
   14000b0e2:	cmp    r9w,0xff
   14000b0e8:	jbe    0x14000b11b
   14000b0ea:	test   r13,r13
   14000b0ed:	je     0x14000b101
   14000b0ef:	test   rsi,rsi
   14000b0f2:	je     0x14000b101
   14000b0f4:	mov    r8,rsi
   14000b0f7:	xor    edx,edx
   14000b0f9:	mov    rcx,r13
   14000b0fc:	call   0x140002760
   14000b101:	call   0x140004100
   14000b106:	mov    DWORD PTR [rax],0x2a
   14000b10c:	call   0x140004100
   14000b111:	test   bpl,bpl
   14000b114:	mov    eax,DWORD PTR [rax]
   14000b116:	jmp    0x14000b216
   14000b11b:	test   r13,r13
   14000b11e:	je     0x14000b13c
   14000b120:	test   rsi,rsi
   14000b123:	jne    0x14000b138
   14000b125:	call   0x140004100
   14000b12a:	xor    r12d,r12d
   14000b12d:	mov    DWORD PTR [rax],0x22
   14000b133:	jmp    0x14000b1da
   14000b138:	mov    BYTE PTR [r13+0x0],r9b
   14000b13c:	test   rdi,rdi
   14000b13f:	je     0x14000b19d
   14000b141:	mov    DWORD PTR [rdi],0x1
   14000b147:	jmp    0x14000b19d
   14000b149:	mov    ecx,DWORD PTR [r14+0x4]
   14000b14d:	xor    r12d,r12d
   14000b150:	lea    rax,[rsp+0x98]
   14000b158:	mov    QWORD PTR [rsp+0x38],rax
   14000b15d:	mov    QWORD PTR [rsp+0x30],r12
   14000b162:	lea    r8,[rsp+0xa8]
   14000b16a:	lea    r9d,[r12+0x1]
   14000b16f:	xor    edx,edx
   14000b171:	mov    DWORD PTR [rsp+0x28],esi
   14000b175:	mov    QWORD PTR [rsp+0x20],r13
   14000b17a:	mov    DWORD PTR [rsp+0x98],r12d
   14000b182:	call   QWORD PTR [rip+0x4090]        # 0x14000f218
   14000b188:	test   eax,eax
   14000b18a:	je     0x14000b1ad
   14000b18c:	cmp    DWORD PTR [rsp+0x98],r12d
   14000b194:	jne    0x14000b201
   14000b196:	test   rdi,rdi
   14000b199:	je     0x14000b19d
   14000b19b:	mov    DWORD PTR [rdi],eax
   14000b19d:	test   bpl,bpl
   14000b1a0:	je     0x14000b1a9
   14000b1a2:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14000b1a9:	xor    eax,eax
   14000b1ab:	jmp    0x14000b21f
   14000b1ad:	call   QWORD PTR [rip+0x3ef5]        # 0x14000f0a8
   14000b1b3:	cmp    eax,0x7a
   14000b1b6:	jne    0x14000b201
   14000b1b8:	test   r13,r13
   14000b1bb:	je     0x14000b1cf
   14000b1bd:	test   rsi,rsi
   14000b1c0:	je     0x14000b1cf
   14000b1c2:	mov    r8,rsi
   14000b1c5:	xor    edx,edx
   14000b1c7:	mov    rcx,r13
   14000b1ca:	call   0x140002760
   14000b1cf:	call   0x140004100
   14000b1d4:	mov    DWORD PTR [rax],0x22
   14000b1da:	xor    r9d,r9d
   14000b1dd:	xor    r8d,r8d
   14000b1e0:	xor    edx,edx
   14000b1e2:	xor    ecx,ecx
   14000b1e4:	mov    QWORD PTR [rsp+0x20],r12
   14000b1e9:	call   0x140003fa0
   14000b1ee:	test   bpl,bpl
   14000b1f1:	je     0x14000b1fa
   14000b1f3:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14000b1fa:	mov    eax,0x22
   14000b1ff:	jmp    0x14000b21f
   14000b201:	call   0x140004100
   14000b206:	mov    DWORD PTR [rax],0x2a
   14000b20c:	call   0x140004100
   14000b211:	test   bpl,bpl
   14000b214:	mov    eax,DWORD PTR [rax]
   14000b216:	je     0x14000b21f
   14000b218:	and    DWORD PTR [rbx+0xc8],0xfffffffd
   14000b21f:	mov    rbp,QWORD PTR [rsp+0xa0]
   14000b227:	mov    rbx,QWORD PTR [rsp+0x90]
   14000b22f:	mov    r14,QWORD PTR [rsp+0x60]
   14000b234:	add    rsp,0x68
   14000b238:	pop    r13
   14000b23a:	pop    r12
   14000b23c:	pop    rdi
   14000b23d:	pop    rsi
   14000b23e:	ret    
   14000b23f:	int3   
   14000b240:	sub    rsp,0x38
   14000b244:	mov    QWORD PTR [rsp+0x20],0x0
   14000b24d:	call   0x14000af90
   14000b252:	add    rsp,0x38
   14000b256:	ret    
   14000b257:	int3   
   14000b258:	int3   
   14000b259:	int3   
   14000b25a:	int3   
   14000b25b:	int3   
   14000b25c:	int3   
   14000b25d:	int3   
   14000b25e:	int3   
   14000b25f:	int3   
   14000b260:	mov    QWORD PTR [rsp+0x20],rbx
   14000b265:	mov    DWORD PTR [rsp+0x8],ecx
   14000b269:	push   rdi
   14000b26a:	sub    rsp,0x20
   14000b26e:	mov    rcx,rdx
   14000b271:	mov    rbx,rdx
   14000b274:	call   0x1400071d0
   14000b279:	mov    ecx,DWORD PTR [rbx+0x18]
   14000b27c:	test   cl,0x82
   14000b27f:	movsxd rdi,eax
   14000b282:	jne    0x14000b2a1
   14000b284:	call   0x140004100
   14000b289:	mov    DWORD PTR [rax],0x9
   14000b28f:	or     DWORD PTR [rbx+0x18],0x20
   14000b293:	or     eax,0xffffffff
   14000b296:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b29b:	add    rsp,0x20
   14000b29f:	pop    rdi
   14000b2a0:	ret    
   14000b2a1:	test   cl,0x40
   14000b2a4:	je     0x14000b2c3
   14000b2a6:	call   0x140004100
   14000b2ab:	mov    DWORD PTR [rax],0x22
   14000b2b1:	or     DWORD PTR [rbx+0x18],0x20
   14000b2b5:	or     eax,0xffffffff
   14000b2b8:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b2bd:	add    rsp,0x20
   14000b2c1:	pop    rdi
   14000b2c2:	ret    
   14000b2c3:	mov    QWORD PTR [rsp+0x40],rsi
   14000b2c8:	xor    esi,esi
   14000b2ca:	test   cl,0x1
   14000b2cd:	je     0x14000b2e8
   14000b2cf:	test   cl,0x10
   14000b2d2:	mov    DWORD PTR [rbx+0x8],esi
   14000b2d5:	je     0x14000b378
   14000b2db:	mov    rax,QWORD PTR [rbx+0x10]
   14000b2df:	and    ecx,0xfffffffe
   14000b2e2:	mov    QWORD PTR [rbx],rax
   14000b2e5:	mov    DWORD PTR [rbx+0x18],ecx
   14000b2e8:	mov    eax,DWORD PTR [rbx+0x18]
   14000b2eb:	mov    DWORD PTR [rbx+0x8],esi
   14000b2ee:	and    eax,0xffffffef
   14000b2f1:	or     eax,0x2
   14000b2f4:	test   eax,0x10c
   14000b2f9:	mov    DWORD PTR [rbx+0x18],eax
   14000b2fc:	jne    0x14000b32d
   14000b2fe:	call   0x140002b70
   14000b303:	add    rax,0x30
   14000b307:	cmp    rbx,rax
   14000b30a:	je     0x14000b31a
   14000b30c:	call   0x140002b70
   14000b311:	add    rax,0x60
   14000b315:	cmp    rbx,rax
   14000b318:	jne    0x14000b325
   14000b31a:	mov    ecx,edi
   14000b31c:	call   0x140007150
   14000b321:	test   eax,eax
   14000b323:	jne    0x14000b32d
   14000b325:	mov    rcx,rbx
   14000b328:	call   0x14000bff0
   14000b32d:	test   DWORD PTR [rbx+0x18],0x108
   14000b334:	mov    QWORD PTR [rsp+0x38],rbp
   14000b339:	je     0x14000b3e9
   14000b33f:	mov    ebp,DWORD PTR [rbx]
   14000b341:	mov    rdx,QWORD PTR [rbx+0x10]
   14000b345:	sub    ebp,DWORD PTR [rbx+0x10]
   14000b348:	lea    rax,[rdx+0x1]
   14000b34c:	mov    QWORD PTR [rbx],rax
   14000b34f:	mov    eax,DWORD PTR [rbx+0x24]
   14000b352:	sub    eax,0x1
   14000b355:	test   ebp,ebp
   14000b357:	mov    DWORD PTR [rbx+0x8],eax
   14000b35a:	jle    0x14000b391
   14000b35c:	mov    r8d,ebp
   14000b35f:	mov    ecx,edi
   14000b361:	call   0x140009c50
   14000b366:	mov    rcx,QWORD PTR [rbx+0x10]
   14000b36a:	mov    esi,eax
   14000b36c:	movzx  eax,BYTE PTR [rsp+0x30]
   14000b371:	mov    BYTE PTR [rcx],al
   14000b373:	jmp    0x14000b3ff
   14000b378:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b37d:	or     ecx,0x20
   14000b380:	or     eax,0xffffffff
   14000b383:	mov    DWORD PTR [rbx+0x18],ecx
   14000b386:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b38b:	add    rsp,0x20
   14000b38f:	pop    rdi
   14000b390:	ret    
   14000b391:	cmp    edi,0xffffffff
   14000b394:	je     0x14000b3bd
   14000b396:	cmp    edi,0xfffffffe
   14000b399:	je     0x14000b3bd
   14000b39b:	mov    rax,rdi
   14000b39e:	mov    rcx,rdi
   14000b3a1:	lea    r8,[rip+0xb298]        # 0x140016640
   14000b3a8:	and    eax,0x1f
   14000b3ab:	sar    rcx,0x5
   14000b3af:	lea    rdx,[rax+rax*4]
   14000b3b3:	shl    rdx,0x4
   14000b3b7:	add    rdx,QWORD PTR [r8+rcx*8]
   14000b3bb:	jmp    0x14000b3c4
   14000b3bd:	lea    rdx,[rip+0x941c]        # 0x1400147e0
   14000b3c4:	test   BYTE PTR [rdx+0x8],0x20
   14000b3c8:	je     0x14000b3dd
   14000b3ca:	xor    edx,edx
   14000b3cc:	mov    ecx,edi
   14000b3ce:	lea    r8d,[rdx+0x2]
   14000b3d2:	call   0x14000b920
   14000b3d7:	cmp    rax,0xffffffffffffffff
   14000b3db:	je     0x14000b403
   14000b3dd:	mov    rcx,QWORD PTR [rbx+0x10]
   14000b3e1:	mov    al,BYTE PTR [rsp+0x30]
   14000b3e5:	mov    BYTE PTR [rcx],al
   14000b3e7:	jmp    0x14000b3ff
   14000b3e9:	mov    ebp,0x1
   14000b3ee:	lea    rdx,[rsp+0x30]
   14000b3f3:	mov    ecx,edi
   14000b3f5:	mov    r8d,ebp
   14000b3f8:	call   0x140009c50
   14000b3fd:	mov    esi,eax
   14000b3ff:	cmp    esi,ebp
   14000b401:	je     0x14000b40c
   14000b403:	or     DWORD PTR [rbx+0x18],0x20
   14000b407:	or     eax,0xffffffff
   14000b40a:	jmp    0x14000b411
   14000b40c:	movzx  eax,BYTE PTR [rsp+0x30]
   14000b411:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b416:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b41b:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b420:	add    rsp,0x20
   14000b424:	pop    rdi
   14000b425:	ret    
   14000b426:	int3   
   14000b427:	int3   
   14000b428:	int3   
   14000b429:	int3   
   14000b42a:	int3   
   14000b42b:	int3   
   14000b42c:	int3   
   14000b42d:	int3   
   14000b42e:	int3   
   14000b42f:	int3   
   14000b430:	mov    ecx,0x2
   14000b435:	jmp    0x1400047a0
   14000b43a:	int3   
   14000b43b:	int3   
   14000b43c:	int3   
   14000b43d:	int3   
   14000b43e:	int3   
   14000b43f:	int3   
   14000b440:	xor    edx,edx
   14000b442:	lea    r8d,[rdx+0xa]
   14000b446:	jmp    0x14000c3e0
   14000b44b:	int3   
   14000b44c:	int3   
   14000b44d:	int3   
   14000b44e:	int3   
   14000b44f:	int3   
   14000b450:	sub    rsp,0x5a8
   14000b457:	test   BYTE PTR [rip+0x9f52],0x1        # 0x1400153b0
   14000b45e:	je     0x14000b46a
   14000b460:	mov    ecx,0xa
   14000b465:	call   0x140004bd0
   14000b46a:	call   0x140008940
   14000b46f:	test   rax,rax
   14000b472:	je     0x14000b47e
   14000b474:	mov    ecx,0x16
   14000b479:	call   0x140008950
   14000b47e:	test   BYTE PTR [rip+0x9f2b],0x2        # 0x1400153b0
   14000b485:	je     0x14000b4e6
   14000b487:	lea    rcx,[rsp+0xd0]
   14000b48f:	call   QWORD PTR [rip+0x3c4b]        # 0x14000f0e0
   14000b495:	lea    rcx,[rsp+0x30]
   14000b49a:	xor    edx,edx
   14000b49c:	mov    r8d,0x98
   14000b4a2:	call   0x140002760
   14000b4a7:	mov    rax,QWORD PTR [rsp+0x5a8]
   14000b4af:	xor    ecx,ecx
   14000b4b1:	mov    QWORD PTR [rsp+0x40],rax
   14000b4b6:	lea    rax,[rsp+0x30]
   14000b4bb:	mov    DWORD PTR [rsp+0x30],0x40000015
   14000b4c3:	mov    QWORD PTR [rsp+0x20],rax
   14000b4c8:	lea    rax,[rsp+0xd0]
   14000b4d0:	mov    QWORD PTR [rsp+0x28],rax
   14000b4d5:	call   QWORD PTR [rip+0x3bf5]        # 0x14000f0d0
   14000b4db:	lea    rcx,[rsp+0x20]
   14000b4e0:	call   QWORD PTR [rip+0x3be2]        # 0x14000f0c8
   14000b4e6:	mov    ecx,0x3
   14000b4eb:	call   0x140004b30
   14000b4f0:	int3   
   14000b4f1:	int3   
   14000b4f2:	int3   
   14000b4f3:	int3   
   14000b4f4:	int3   
   14000b4f5:	int3   
   14000b4f6:	int3   
   14000b4f7:	int3   
   14000b4f8:	int3   
   14000b4f9:	int3   
   14000b4fa:	int3   
   14000b4fb:	int3   
   14000b4fc:	int3   
   14000b4fd:	int3   
   14000b4fe:	int3   
   14000b4ff:	int3   
   14000b500:	mov    QWORD PTR [rsp+0x8],rbx
   14000b505:	push   rdi
   14000b506:	sub    rsp,0x20
   14000b50a:	movsxd rdi,ecx
   14000b50d:	mov    ecx,edi
   14000b50f:	call   0x14000bb50
   14000b514:	cmp    rax,0xffffffffffffffff
   14000b518:	je     0x14000b57d
   14000b51a:	cmp    edi,0x1
   14000b51d:	jne    0x14000b531
   14000b51f:	mov    rax,QWORD PTR [rip+0xb11a]        # 0x140016640
   14000b526:	test   BYTE PTR [rax+0xa8],dil
   14000b52d:	jne    0x14000b543
   14000b52f:	jmp    0x14000b55f
   14000b531:	cmp    edi,0x2
   14000b534:	jne    0x14000b55f
   14000b536:	mov    rax,QWORD PTR [rip+0xb103]        # 0x140016640
   14000b53d:	test   BYTE PTR [rax+0x58],0x1
   14000b541:	je     0x14000b55f
   14000b543:	mov    ecx,0x2
   14000b548:	call   0x14000bb50
   14000b54d:	mov    ecx,0x1
   14000b552:	mov    rbx,rax
   14000b555:	call   0x14000bb50
   14000b55a:	cmp    rax,rbx
   14000b55d:	je     0x14000b57d
   14000b55f:	mov    ecx,edi
   14000b561:	call   0x14000bb50
   14000b566:	mov    rcx,rax
   14000b569:	call   QWORD PTR [rip+0x3cf1]        # 0x14000f260
   14000b56f:	test   eax,eax
   14000b571:	jne    0x14000b57d
   14000b573:	call   QWORD PTR [rip+0x3b2f]        # 0x14000f0a8
   14000b579:	mov    ebx,eax
   14000b57b:	jmp    0x14000b57f
   14000b57d:	xor    ebx,ebx
   14000b57f:	mov    ecx,edi
   14000b581:	call   0x14000ba80
   14000b586:	mov    rax,rdi
   14000b589:	mov    rdx,rdi
   14000b58c:	and    eax,0x1f
   14000b58f:	sar    rdx,0x5
   14000b593:	lea    r8,[rip+0xb0a6]        # 0x140016640
   14000b59a:	lea    rcx,[rax+rax*4]
   14000b59e:	mov    rax,QWORD PTR [r8+rdx*8]
   14000b5a2:	add    rcx,rcx
   14000b5a5:	test   ebx,ebx
   14000b5a7:	mov    BYTE PTR [rax+rcx*8+0x8],0x0
   14000b5ac:	je     0x14000b5c3
   14000b5ae:	mov    ecx,ebx
   14000b5b0:	call   0x140004160
   14000b5b5:	or     eax,0xffffffff
   14000b5b8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b5bd:	add    rsp,0x20
   14000b5c1:	pop    rdi
   14000b5c2:	ret    
   14000b5c3:	xor    eax,eax
   14000b5c5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b5ca:	add    rsp,0x20
   14000b5ce:	pop    rdi
   14000b5cf:	ret    
   14000b5d0:	mov    QWORD PTR [rsp+0x18],rbx
   14000b5d5:	mov    DWORD PTR [rsp+0x8],ecx
   14000b5d9:	push   rsi
   14000b5da:	push   rdi
   14000b5db:	push   r12
   14000b5dd:	sub    rsp,0x30
   14000b5e1:	movsxd rbx,ecx
   14000b5e4:	cmp    ebx,0xfffffffe
   14000b5e7:	jne    0x14000b605
   14000b5e9:	call   0x140004130
   14000b5ee:	xor    ebx,ebx
   14000b5f0:	mov    DWORD PTR [rax],ebx
   14000b5f2:	call   0x140004100
   14000b5f7:	mov    DWORD PTR [rax],0x9
   14000b5fd:	or     eax,0xffffffff
   14000b600:	jmp    0x14000b6d0
   14000b605:	test   ecx,ecx
   14000b607:	js     0x14000b6a5
   14000b60d:	cmp    ebx,DWORD PTR [rip+0xb025]        # 0x140016638
   14000b613:	jae    0x14000b6a5
   14000b619:	mov    rax,rbx
   14000b61c:	mov    rdi,rbx
   14000b61f:	sar    rdi,0x5
   14000b623:	lea    r12,[rip+0xb016]        # 0x140016640
   14000b62a:	and    eax,0x1f
   14000b62d:	lea    rsi,[rax+rax*4]
   14000b631:	add    rsi,rsi
   14000b634:	mov    rax,QWORD PTR [r12+rdi*8]
   14000b638:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   14000b63c:	and    ecx,0x1
   14000b63f:	jne    0x14000b66e
   14000b641:	call   0x140004130
   14000b646:	xor    ebx,ebx
   14000b648:	mov    DWORD PTR [rax],ebx
   14000b64a:	call   0x140004100
   14000b64f:	mov    DWORD PTR [rax],0x9
   14000b655:	mov    QWORD PTR [rsp+0x20],rbx
   14000b65a:	xor    r9d,r9d
   14000b65d:	xor    r8d,r8d
   14000b660:	xor    edx,edx
   14000b662:	xor    ecx,ecx
   14000b664:	call   0x140003fa0
   14000b669:	or     eax,0xffffffff
   14000b66c:	jmp    0x14000b6d0
   14000b66e:	mov    ecx,ebx
   14000b670:	call   0x14000bbf0
   14000b675:	nop
   14000b676:	mov    rax,QWORD PTR [r12+rdi*8]
   14000b67a:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   14000b67f:	je     0x14000b68c
   14000b681:	mov    ecx,ebx
   14000b683:	call   0x14000b500
   14000b688:	mov    edi,eax
   14000b68a:	jmp    0x14000b69a
   14000b68c:	call   0x140004100
   14000b691:	mov    DWORD PTR [rax],0x9
   14000b697:	or     edi,0xffffffff
   14000b69a:	mov    ecx,ebx
   14000b69c:	call   0x14000bcc0
   14000b6a1:	mov    eax,edi
   14000b6a3:	jmp    0x14000b6d0
   14000b6a5:	call   0x140004130
   14000b6aa:	xor    ebx,ebx
   14000b6ac:	mov    DWORD PTR [rax],ebx
   14000b6ae:	call   0x140004100
   14000b6b3:	mov    DWORD PTR [rax],0x9
   14000b6b9:	mov    QWORD PTR [rsp+0x20],rbx
   14000b6be:	xor    r9d,r9d
   14000b6c1:	xor    r8d,r8d
   14000b6c4:	xor    edx,edx
   14000b6c6:	xor    ecx,ecx
   14000b6c8:	call   0x140003fa0
   14000b6cd:	or     eax,0xffffffff
   14000b6d0:	mov    rbx,QWORD PTR [rsp+0x60]
   14000b6d5:	add    rsp,0x30
   14000b6d9:	pop    r12
   14000b6db:	pop    rdi
   14000b6dc:	pop    rsi
   14000b6dd:	ret    
   14000b6de:	int3   
   14000b6df:	int3   
   14000b6e0:	rex push rbp
   14000b6e2:	sub    rsp,0x30
   14000b6e6:	mov    rbp,rdx
   14000b6e9:	mov    ecx,DWORD PTR [rbp+0x50]
   14000b6ec:	call   0x14000bcc0
   14000b6f1:	add    rsp,0x30
   14000b6f5:	pop    rbp
   14000b6f6:	ret    
   14000b6f7:	int3   
   14000b6f8:	int3   
   14000b6f9:	int3   
   14000b6fa:	int3   
   14000b6fb:	int3   
   14000b6fc:	int3   
   14000b6fd:	int3   
   14000b6fe:	int3   
   14000b6ff:	int3   
   14000b700:	rex push rbx
   14000b702:	sub    rsp,0x20
   14000b706:	mov    eax,DWORD PTR [rcx+0x18]
   14000b709:	mov    rbx,rcx
   14000b70c:	test   al,0x83
   14000b70e:	je     0x14000b730
   14000b710:	test   al,0x8
   14000b712:	je     0x14000b730
   14000b714:	mov    rcx,QWORD PTR [rcx+0x10]
   14000b718:	call   0x140002700
   14000b71d:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14000b724:	xor    eax,eax
   14000b726:	mov    QWORD PTR [rbx],rax
   14000b729:	mov    QWORD PTR [rbx+0x10],rax
   14000b72d:	mov    DWORD PTR [rbx+0x8],eax
   14000b730:	add    rsp,0x20
   14000b734:	pop    rbx
   14000b735:	ret    
   14000b736:	int3   
   14000b737:	int3   
   14000b738:	int3   
   14000b739:	int3   
   14000b73a:	int3   
   14000b73b:	int3   
   14000b73c:	int3   
   14000b73d:	int3   
   14000b73e:	int3   
   14000b73f:	int3   
   14000b740:	rex push rbx
   14000b742:	sub    rsp,0x60
   14000b746:	mov    rax,QWORD PTR [rip+0x8913]        # 0x140014060
   14000b74d:	xor    rax,rsp
   14000b750:	mov    QWORD PTR [rsp+0x50],rax
   14000b755:	xor    ebx,ebx
   14000b757:	mov    WORD PTR [rsp+0x40],cx
   14000b75c:	cmp    DWORD PTR [rip+0x9c52],ebx        # 0x1400153b4
   14000b762:	je     0x14000b7cc
   14000b764:	mov    rcx,QWORD PTR [rip+0x9d1d]        # 0x140015488
   14000b76b:	cmp    rcx,0xfffffffffffffffe
   14000b76f:	jne    0x14000b77d
   14000b771:	call   0x14000c610
   14000b776:	mov    rcx,QWORD PTR [rip+0x9d0b]        # 0x140015488
   14000b77d:	cmp    rcx,0xffffffffffffffff
   14000b781:	je     0x14000b850
   14000b787:	lea    r9,[rsp+0x44]
   14000b78c:	lea    rdx,[rsp+0x40]
   14000b791:	mov    r8d,0x1
   14000b797:	mov    QWORD PTR [rsp+0x20],rbx
   14000b79c:	call   QWORD PTR [rip+0x3ad6]        # 0x14000f278
   14000b7a2:	test   eax,eax
   14000b7a4:	jne    0x14000b844
   14000b7aa:	cmp    DWORD PTR [rip+0x9c03],0x2        # 0x1400153b4
   14000b7b1:	jne    0x14000b850
   14000b7b7:	call   QWORD PTR [rip+0x38eb]        # 0x14000f0a8
   14000b7bd:	cmp    eax,0x78
   14000b7c0:	jne    0x14000b850
   14000b7c6:	mov    DWORD PTR [rip+0x9be8],ebx        # 0x1400153b4
   14000b7cc:	call   QWORD PTR [rip+0x3a9e]        # 0x14000f270
   14000b7d2:	mov    QWORD PTR [rsp+0x38],rbx
   14000b7d7:	mov    QWORD PTR [rsp+0x30],rbx
   14000b7dc:	mov    ecx,eax
   14000b7de:	lea    rax,[rsp+0x48]
   14000b7e3:	lea    r8,[rsp+0x40]
   14000b7e8:	mov    r9d,0x1
   14000b7ee:	xor    edx,edx
   14000b7f0:	mov    DWORD PTR [rsp+0x28],0x5
   14000b7f8:	mov    QWORD PTR [rsp+0x20],rax
   14000b7fd:	call   QWORD PTR [rip+0x3a15]        # 0x14000f218
   14000b803:	mov    rcx,QWORD PTR [rip+0x9c7e]        # 0x140015488
   14000b80a:	cmp    rcx,0xffffffffffffffff
   14000b80e:	je     0x14000b850
   14000b810:	lea    r9,[rsp+0x44]
   14000b815:	lea    rdx,[rsp+0x48]
   14000b81a:	mov    r8d,eax
   14000b81d:	mov    QWORD PTR [rsp+0x20],rbx
   14000b822:	call   QWORD PTR [rip+0x3a40]        # 0x14000f268
   14000b828:	test   eax,eax
   14000b82a:	je     0x14000b850
   14000b82c:	mov    ax,WORD PTR [rsp+0x40]
   14000b831:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b836:	xor    rcx,rsp
   14000b839:	call   0x1400020b0
   14000b83e:	add    rsp,0x60
   14000b842:	pop    rbx
   14000b843:	ret    
   14000b844:	mov    DWORD PTR [rip+0x9b66],0x1        # 0x1400153b4
   14000b84e:	jmp    0x14000b82c
   14000b850:	or     ax,0xffff
   14000b854:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b859:	xor    rcx,rsp
   14000b85c:	call   0x1400020b0
   14000b861:	add    rsp,0x60
   14000b865:	pop    rbx
   14000b866:	ret    
   14000b867:	int3   
   14000b868:	int3   
   14000b869:	int3   
   14000b86a:	int3   
   14000b86b:	int3   
   14000b86c:	int3   
   14000b86d:	int3   
   14000b86e:	int3   
   14000b86f:	int3   
   14000b870:	mov    QWORD PTR [rsp+0x8],rbx
   14000b875:	push   rdi
   14000b876:	sub    rsp,0x20
   14000b87a:	movsxd rdi,ecx
   14000b87d:	mov    ebx,r8d
   14000b880:	mov    QWORD PTR [rsp+0x38],rdx
   14000b885:	mov    ecx,edi
   14000b887:	call   0x14000bb50
   14000b88c:	cmp    rax,0xffffffffffffffff
   14000b890:	jne    0x14000b8ac
   14000b892:	call   0x140004100
   14000b897:	mov    DWORD PTR [rax],0x9
   14000b89d:	or     rax,0xffffffffffffffff
   14000b8a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b8a6:	add    rsp,0x20
   14000b8aa:	pop    rdi
   14000b8ab:	ret    
   14000b8ac:	mov    edx,DWORD PTR [rsp+0x38]
   14000b8b0:	lea    r8,[rsp+0x3c]
   14000b8b5:	mov    r9d,ebx
   14000b8b8:	mov    rcx,rax
   14000b8bb:	call   QWORD PTR [rip+0x39bf]        # 0x14000f280
   14000b8c1:	cmp    eax,0xffffffff
   14000b8c4:	mov    DWORD PTR [rsp+0x38],eax
   14000b8c8:	jne    0x14000b8ea
   14000b8ca:	call   QWORD PTR [rip+0x37d8]        # 0x14000f0a8
   14000b8d0:	test   eax,eax
   14000b8d2:	je     0x14000b8ea
   14000b8d4:	mov    ecx,eax
   14000b8d6:	call   0x140004160
   14000b8db:	or     rax,0xffffffffffffffff
   14000b8df:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b8e4:	add    rsp,0x20
   14000b8e8:	pop    rdi
   14000b8e9:	ret    
   14000b8ea:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b8ef:	mov    rax,rdi
   14000b8f2:	mov    rdx,rdi
   14000b8f5:	and    eax,0x1f
   14000b8f8:	sar    rdx,0x5
   14000b8fc:	lea    r8,[rip+0xad3d]        # 0x140016640
   14000b903:	lea    rcx,[rax+rax*4]
   14000b907:	mov    rax,QWORD PTR [r8+rdx*8]
   14000b90b:	add    rcx,rcx
   14000b90e:	and    BYTE PTR [rax+rcx*8+0x8],0xfd
   14000b913:	mov    rax,QWORD PTR [rsp+0x38]
   14000b918:	add    rsp,0x20
   14000b91c:	pop    rdi
   14000b91d:	ret    
   14000b91e:	int3   
   14000b91f:	int3   
   14000b920:	mov    QWORD PTR [rsp+0x10],rbx
   14000b925:	mov    DWORD PTR [rsp+0x8],ecx
   14000b929:	push   rsi
   14000b92a:	push   rdi
   14000b92b:	push   r12
   14000b92d:	push   r13
   14000b92f:	push   r14
   14000b931:	sub    rsp,0x30
   14000b935:	mov    r12d,r8d
   14000b938:	mov    r13,rdx
   14000b93b:	movsxd rbx,ecx
   14000b93e:	cmp    ebx,0xfffffffe
   14000b941:	jne    0x14000b960
   14000b943:	call   0x140004130
   14000b948:	xor    edi,edi
   14000b94a:	mov    DWORD PTR [rax],edi
   14000b94c:	call   0x140004100
   14000b951:	mov    DWORD PTR [rax],0x9
   14000b957:	or     rax,0xffffffffffffffff
   14000b95b:	jmp    0x14000ba3f
   14000b960:	test   ecx,ecx
   14000b962:	js     0x14000ba13
   14000b968:	cmp    ebx,DWORD PTR [rip+0xacca]        # 0x140016638
   14000b96e:	jae    0x14000ba13
   14000b974:	mov    rax,rbx
   14000b977:	mov    rdi,rbx
   14000b97a:	sar    rdi,0x5
   14000b97e:	lea    r14,[rip+0xacbb]        # 0x140016640
   14000b985:	and    eax,0x1f
   14000b988:	lea    rsi,[rax+rax*4]
   14000b98c:	add    rsi,rsi
   14000b98f:	mov    rax,QWORD PTR [r14+rdi*8]
   14000b993:	mov    cl,BYTE PTR [rax+rsi*8+0x8]
   14000b997:	and    ecx,0x1
   14000b99a:	jne    0x14000b9ca
   14000b99c:	call   0x140004130
   14000b9a1:	xor    edi,edi
   14000b9a3:	mov    DWORD PTR [rax],edi
   14000b9a5:	call   0x140004100
   14000b9aa:	mov    DWORD PTR [rax],0x9
   14000b9b0:	mov    QWORD PTR [rsp+0x20],rdi
   14000b9b5:	xor    r9d,r9d
   14000b9b8:	xor    r8d,r8d
   14000b9bb:	xor    edx,edx
   14000b9bd:	xor    ecx,ecx
   14000b9bf:	call   0x140003fa0
   14000b9c4:	or     rax,0xffffffffffffffff
   14000b9c8:	jmp    0x14000ba3f
   14000b9ca:	mov    ecx,ebx
   14000b9cc:	call   0x14000bbf0
   14000b9d1:	nop
   14000b9d2:	mov    rax,QWORD PTR [r14+rdi*8]
   14000b9d6:	test   BYTE PTR [rax+rsi*8+0x8],0x1
   14000b9db:	je     0x14000b9ef
   14000b9dd:	mov    r8d,r12d
   14000b9e0:	mov    rdx,r13
   14000b9e3:	mov    ecx,ebx
   14000b9e5:	call   0x14000b870
   14000b9ea:	mov    rdi,rax
   14000b9ed:	jmp    0x14000ba07
   14000b9ef:	call   0x140004100
   14000b9f4:	mov    DWORD PTR [rax],0x9
   14000b9fa:	call   0x140004130
   14000b9ff:	xor    edi,edi
   14000ba01:	mov    DWORD PTR [rax],edi
   14000ba03:	or     rdi,0xffffffffffffffff
   14000ba07:	mov    ecx,ebx
   14000ba09:	call   0x14000bcc0
   14000ba0e:	mov    rax,rdi
   14000ba11:	jmp    0x14000ba3f
   14000ba13:	call   0x140004130
   14000ba18:	xor    edi,edi
   14000ba1a:	mov    DWORD PTR [rax],edi
   14000ba1c:	call   0x140004100
   14000ba21:	mov    DWORD PTR [rax],0x9
   14000ba27:	mov    QWORD PTR [rsp+0x20],rdi
   14000ba2c:	xor    r9d,r9d
   14000ba2f:	xor    r8d,r8d
   14000ba32:	xor    edx,edx
   14000ba34:	xor    ecx,ecx
   14000ba36:	call   0x140003fa0
   14000ba3b:	or     rax,0xffffffffffffffff
   14000ba3f:	mov    rbx,QWORD PTR [rsp+0x68]
   14000ba44:	add    rsp,0x30
   14000ba48:	pop    r14
   14000ba4a:	pop    r13
   14000ba4c:	pop    r12
   14000ba4e:	pop    rdi
   14000ba4f:	pop    rsi
   14000ba50:	ret    
   14000ba51:	int3   
   14000ba52:	int3   
   14000ba53:	int3   
   14000ba54:	int3   
   14000ba55:	int3   
   14000ba56:	int3   
   14000ba57:	int3   
   14000ba58:	int3   
   14000ba59:	int3   
   14000ba5a:	int3   
   14000ba5b:	int3   
   14000ba5c:	int3   
   14000ba5d:	int3   
   14000ba5e:	int3   
   14000ba5f:	int3   
   14000ba60:	rex push rbp
   14000ba62:	sub    rsp,0x30
   14000ba66:	mov    rbp,rdx
   14000ba69:	mov    ecx,DWORD PTR [rbp+0x60]
   14000ba6c:	call   0x14000bcc0
   14000ba71:	add    rsp,0x30
   14000ba75:	pop    rbp
   14000ba76:	ret    
   14000ba77:	int3   
   14000ba78:	int3   
   14000ba79:	int3   
   14000ba7a:	int3   
   14000ba7b:	int3   
   14000ba7c:	int3   
   14000ba7d:	int3   
   14000ba7e:	int3   
   14000ba7f:	int3   
   14000ba80:	mov    QWORD PTR [rsp+0x8],rbx
   14000ba85:	mov    QWORD PTR [rsp+0x10],rsi
   14000ba8a:	push   rdi
   14000ba8b:	sub    rsp,0x20
   14000ba8f:	test   ecx,ecx
   14000ba91:	js     0x14000bb1c
   14000ba97:	cmp    ecx,DWORD PTR [rip+0xab9b]        # 0x140016638
   14000ba9d:	jae    0x14000bb1c
   14000ba9f:	movsxd rax,ecx
   14000baa2:	lea    rsi,[rip+0xab97]        # 0x140016640
   14000baa9:	mov    rdi,rax
   14000baac:	and    eax,0x1f
   14000baaf:	sar    rdi,0x5
   14000bab3:	lea    rbx,[rax+rax*4]
   14000bab7:	mov    rax,QWORD PTR [rsi+rdi*8]
   14000babb:	add    rbx,rbx
   14000babe:	test   BYTE PTR [rax+rbx*8+0x8],0x1
   14000bac3:	je     0x14000bb1c
   14000bac5:	cmp    QWORD PTR [rax+rbx*8],0xffffffffffffffff
   14000baca:	je     0x14000bb1c
   14000bacc:	cmp    DWORD PTR [rip+0x8585],0x1        # 0x140014058
   14000bad3:	jne    0x14000bafe
   14000bad5:	test   ecx,ecx
   14000bad7:	je     0x14000baf1
   14000bad9:	sub    ecx,0x1
   14000badc:	je     0x14000baea
   14000bade:	cmp    ecx,0x1
   14000bae1:	jne    0x14000bafe
   14000bae3:	mov    ecx,0xfffffff4
   14000bae8:	jmp    0x14000baf6
   14000baea:	mov    ecx,0xfffffff5
   14000baef:	jmp    0x14000baf6
   14000baf1:	mov    ecx,0xfffffff6
   14000baf6:	xor    edx,edx
   14000baf8:	call   QWORD PTR [rip+0x3542]        # 0x14000f040
   14000bafe:	mov    rax,QWORD PTR [rsi+rdi*8]
   14000bb02:	mov    QWORD PTR [rax+rbx*8],0xffffffffffffffff
   14000bb0a:	xor    eax,eax
   14000bb0c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bb11:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bb16:	add    rsp,0x20
   14000bb1a:	pop    rdi
   14000bb1b:	ret    
   14000bb1c:	call   0x140004100
   14000bb21:	mov    DWORD PTR [rax],0x9
   14000bb27:	call   0x140004130
   14000bb2c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bb31:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bb36:	mov    DWORD PTR [rax],0x0
   14000bb3c:	or     eax,0xffffffff
   14000bb3f:	add    rsp,0x20
   14000bb43:	pop    rdi
   14000bb44:	ret    
   14000bb45:	int3   
   14000bb46:	int3   
   14000bb47:	int3   
   14000bb48:	int3   
   14000bb49:	int3   
   14000bb4a:	int3   
   14000bb4b:	int3   
   14000bb4c:	int3   
   14000bb4d:	int3   
   14000bb4e:	int3   
   14000bb4f:	int3   
   14000bb50:	sub    rsp,0x38
   14000bb54:	cmp    ecx,0xfffffffe
   14000bb57:	jne    0x14000bb78
   14000bb59:	call   0x140004130
   14000bb5e:	mov    DWORD PTR [rax],0x0
   14000bb64:	call   0x140004100
   14000bb69:	mov    DWORD PTR [rax],0x9
   14000bb6f:	or     rax,0xffffffffffffffff
   14000bb73:	add    rsp,0x38
   14000bb77:	ret    
   14000bb78:	test   ecx,ecx
   14000bb7a:	js     0x14000bbb3
   14000bb7c:	cmp    ecx,DWORD PTR [rip+0xaab6]        # 0x140016638
   14000bb82:	jae    0x14000bbb3
   14000bb84:	movsxd rax,ecx
   14000bb87:	lea    rdx,[rip+0xaab2]        # 0x140016640
   14000bb8e:	mov    rcx,rax
   14000bb91:	and    eax,0x1f
   14000bb94:	sar    rcx,0x5
   14000bb98:	lea    rax,[rax+rax*4]
   14000bb9c:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000bba0:	add    rax,rax
   14000bba3:	test   BYTE PTR [rdx+rax*8+0x8],0x1
   14000bba8:	je     0x14000bbb3
   14000bbaa:	mov    rax,QWORD PTR [rdx+rax*8]
   14000bbae:	add    rsp,0x38
   14000bbb2:	ret    
   14000bbb3:	call   0x140004130
   14000bbb8:	mov    DWORD PTR [rax],0x0
   14000bbbe:	call   0x140004100
   14000bbc3:	xor    r9d,r9d
   14000bbc6:	xor    r8d,r8d
   14000bbc9:	xor    edx,edx
   14000bbcb:	xor    ecx,ecx
   14000bbcd:	mov    DWORD PTR [rax],0x9
   14000bbd3:	mov    QWORD PTR [rsp+0x20],0x0
   14000bbdc:	call   0x140003fa0
   14000bbe1:	or     rax,0xffffffffffffffff
   14000bbe5:	add    rsp,0x38
   14000bbe9:	ret    
   14000bbea:	int3   
   14000bbeb:	int3   
   14000bbec:	int3   
   14000bbed:	int3   
   14000bbee:	int3   
   14000bbef:	int3   
   14000bbf0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bbf5:	mov    QWORD PTR [rsp+0x10],rsi
   14000bbfa:	mov    QWORD PTR [rsp+0x18],rdi
   14000bbff:	mov    QWORD PTR [rsp+0x20],r12
   14000bc04:	push   r13
   14000bc06:	sub    rsp,0x20
   14000bc0a:	movsxd rax,ecx
   14000bc0d:	mov    r12,rax
   14000bc10:	sar    r12,0x5
   14000bc14:	lea    r13,[rip+0xaa25]        # 0x140016640
   14000bc1b:	and    eax,0x1f
   14000bc1e:	lea    rdi,[rax+rax*4]
   14000bc22:	add    rdi,rdi
   14000bc25:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   14000bc2a:	mov    ebx,0x1
   14000bc2f:	cmp    DWORD PTR [rsi+rdi*8+0xc],0x0
   14000bc34:	jne    0x14000bc6b
   14000bc36:	lea    ecx,[rbx+0x9]
   14000bc39:	call   0x140007100
   14000bc3e:	nop
   14000bc3f:	cmp    DWORD PTR [rsi+rdi*8+0xc],0x0
   14000bc44:	jne    0x14000bc61
   14000bc46:	lea    rcx,[rsi+rdi*8+0x10]
   14000bc4b:	mov    edx,0xfa0
   14000bc50:	call   0x140008c50
   14000bc55:	xor    ecx,ecx
   14000bc57:	test   eax,eax
   14000bc59:	cmove  ebx,ecx
   14000bc5c:	add    DWORD PTR [rsi+rdi*8+0xc],0x1
   14000bc61:	mov    ecx,0xa
   14000bc66:	call   0x140006fd0
   14000bc6b:	test   ebx,ebx
   14000bc6d:	je     0x14000bc7f
   14000bc6f:	mov    rcx,QWORD PTR [r13+r12*8+0x0]
   14000bc74:	lea    rcx,[rcx+rdi*8+0x10]
   14000bc79:	call   QWORD PTR [rip+0x3401]        # 0x14000f080
   14000bc7f:	mov    eax,ebx
   14000bc81:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bc86:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bc8b:	mov    rdi,QWORD PTR [rsp+0x40]
   14000bc90:	mov    r12,QWORD PTR [rsp+0x48]
   14000bc95:	add    rsp,0x20
   14000bc99:	pop    r13
   14000bc9b:	ret    
   14000bc9c:	int3   
   14000bc9d:	int3   
   14000bc9e:	int3   
   14000bc9f:	int3   
   14000bca0:	rex push rbp
   14000bca2:	sub    rsp,0x20
   14000bca6:	mov    rbp,rdx
   14000bca9:	mov    ecx,0xa
   14000bcae:	call   0x140006fd0
   14000bcb3:	add    rsp,0x20
   14000bcb7:	pop    rbp
   14000bcb8:	ret    
   14000bcb9:	int3   
   14000bcba:	int3   
   14000bcbb:	int3   
   14000bcbc:	int3   
   14000bcbd:	int3   
   14000bcbe:	int3   
   14000bcbf:	int3   
   14000bcc0:	movsxd rax,ecx
   14000bcc3:	lea    r8,[rip+0xa976]        # 0x140016640
   14000bcca:	mov    rdx,rax
   14000bccd:	and    eax,0x1f
   14000bcd0:	lea    rcx,[rax+rax*4]
   14000bcd4:	sar    rdx,0x5
   14000bcd8:	mov    rax,QWORD PTR [r8+rdx*8]
   14000bcdc:	add    rcx,rcx
   14000bcdf:	lea    rcx,[rax+rcx*8+0x10]
   14000bce4:	rex.W jmp QWORD PTR [rip+0x339d]        # 0x14000f088
   14000bceb:	int3   
   14000bcec:	int3   
   14000bced:	int3   
   14000bcee:	int3   
   14000bcef:	int3   
   14000bcf0:	sub    rsp,0x38
   14000bcf4:	mov    rax,QWORD PTR [rip+0x8365]        # 0x140014060
   14000bcfb:	xor    rax,rsp
   14000bcfe:	mov    QWORD PTR [rsp+0x28],rax
   14000bd03:	lea    r8,[rsp+0x20]
   14000bd08:	mov    r9d,0x6
   14000bd0e:	mov    edx,0x1004
   14000bd13:	mov    BYTE PTR [rsp+0x26],0x0
   14000bd18:	call   QWORD PTR [rip+0x353a]        # 0x14000f258
   14000bd1e:	test   eax,eax
   14000bd20:	jne    0x14000bd37
   14000bd22:	or     eax,0xffffffff
   14000bd25:	mov    rcx,QWORD PTR [rsp+0x28]
   14000bd2a:	xor    rcx,rsp
   14000bd2d:	call   0x1400020b0
   14000bd32:	add    rsp,0x38
   14000bd36:	ret    
   14000bd37:	lea    rcx,[rsp+0x20]
   14000bd3c:	call   0x14000b440
   14000bd41:	mov    rcx,QWORD PTR [rsp+0x28]
   14000bd46:	xor    rcx,rsp
   14000bd49:	call   0x1400020b0
   14000bd4e:	add    rsp,0x38
   14000bd52:	ret    
   14000bd53:	int3   
   14000bd54:	int3   
   14000bd55:	int3   
   14000bd56:	int3   
   14000bd57:	int3   
   14000bd58:	int3   
   14000bd59:	int3   
   14000bd5a:	int3   
   14000bd5b:	int3   
   14000bd5c:	int3   
   14000bd5d:	int3   
   14000bd5e:	int3   
   14000bd5f:	int3   
   14000bd60:	rex push rbp
   14000bd62:	push   rbx
   14000bd63:	push   rsi
   14000bd64:	push   rdi
   14000bd65:	push   r12
   14000bd67:	push   r13
   14000bd69:	push   r14
   14000bd6b:	push   r15
   14000bd6d:	sub    rsp,0x88
   14000bd74:	lea    rbp,[rsp+0x40]
   14000bd79:	mov    rax,QWORD PTR [rip+0x82e0]        # 0x140014060
   14000bd80:	xor    rax,rbp
   14000bd83:	mov    QWORD PTR [rbp+0x30],rax
   14000bd87:	mov    r15,QWORD PTR [rbp+0xb0]
   14000bd8e:	mov    r12d,DWORD PTR [r9]
   14000bd91:	xor    r13d,r13d
   14000bd94:	cmp    ecx,edx
   14000bd96:	mov    rbx,r8
   14000bd99:	mov    rsi,r13
   14000bd9c:	mov    DWORD PTR [rbp+0x0],r13d
   14000bda0:	mov    QWORD PTR [rbp+0x10],r9
   14000bda4:	mov    r14d,edx
   14000bda7:	mov    QWORD PTR [rbp+0x8],rbx
   14000bdab:	mov    edi,ecx
   14000bdad:	mov    DWORD PTR [rbp+0x4],ecx
   14000bdb0:	je     0x14000bfc3
   14000bdb6:	lea    rdx,[rbp+0x18]
   14000bdba:	call   QWORD PTR [rip+0x3430]        # 0x14000f1f0
   14000bdc0:	test   eax,eax
   14000bdc2:	je     0x14000be68
   14000bdc8:	cmp    DWORD PTR [rbp+0x18],0x1
   14000bdcc:	jne    0x14000be68
   14000bdd2:	lea    rdx,[rbp+0x18]
   14000bdd6:	mov    ecx,r14d
   14000bdd9:	call   QWORD PTR [rip+0x3411]        # 0x14000f1f0
   14000bddf:	test   eax,eax
   14000bde1:	je     0x14000be68
   14000bde7:	cmp    DWORD PTR [rbp+0x18],0x1
   14000bdeb:	jne    0x14000be68
   14000bded:	cmp    r12d,0xffffffff
   14000bdf1:	mov    DWORD PTR [rbp+0x0],0x1
   14000bdf8:	je     0x14000be56
   14000bdfa:	mov    ebx,r12d
   14000bdfd:	test   ebx,ebx
   14000bdff:	jle    0x14000be8f
   14000be05:	movsxd r13,ebx
   14000be08:	movabs rax,0x7ffffffffffffff0
   14000be12:	cmp    r13,rax
   14000be15:	ja     0x14000be8f
   14000be17:	lea    rcx,[r13+r13*1+0x10]
   14000be1c:	cmp    rcx,0x400
   14000be23:	ja     0x14000be96
   14000be25:	lea    rax,[rcx+0xf]
   14000be29:	cmp    rax,rcx
   14000be2c:	ja     0x14000be38
   14000be2e:	movabs rax,0xffffffffffffff0
   14000be38:	and    rax,0xfffffffffffffff0
   14000be3c:	call   0x14000eba0
   14000be41:	sub    rsp,rax
   14000be44:	lea    rdi,[rsp+0x40]
   14000be49:	test   rdi,rdi
   14000be4c:	je     0x14000be8f
   14000be4e:	mov    DWORD PTR [rdi],0xcccc
   14000be54:	jmp    0x14000bea9
   14000be56:	or     rcx,0xffffffffffffffff
   14000be5a:	mov    rdi,rbx
   14000be5d:	xor    eax,eax
   14000be5f:	repnz scas al,BYTE PTR es:[rdi]
   14000be61:	not    rcx
   14000be64:	mov    ebx,ecx
   14000be66:	jmp    0x14000bdfd
   14000be68:	mov    r9d,r12d
   14000be6b:	mov    r8,rbx
   14000be6e:	mov    edx,0x1
   14000be73:	mov    ecx,edi
   14000be75:	mov    DWORD PTR [rsp+0x28],r13d
   14000be7a:	mov    QWORD PTR [rsp+0x20],r13
   14000be7f:	call   QWORD PTR [rip+0x32b3]        # 0x14000f138
   14000be85:	test   eax,eax
   14000be87:	mov    ebx,eax
   14000be89:	jne    0x14000bdfd
   14000be8f:	xor    eax,eax
   14000be91:	jmp    0x14000bfc6
   14000be96:	call   0x140006a30
   14000be9b:	test   rax,rax
   14000be9e:	mov    rdi,rax
   14000bea1:	je     0x14000bead
   14000bea3:	mov    DWORD PTR [rax],0xdddd
   14000bea9:	add    rdi,0x10
   14000bead:	test   rdi,rdi
   14000beb0:	je     0x14000be8f
   14000beb2:	lea    r8,[r13+r13*1+0x0]
   14000beb7:	xor    edx,edx
   14000beb9:	mov    rcx,rdi
   14000bebc:	call   0x140002760
   14000bec1:	mov    r8,QWORD PTR [rbp+0x8]
   14000bec5:	mov    ecx,DWORD PTR [rbp+0x4]
   14000bec8:	mov    r9d,r12d
   14000becb:	mov    edx,0x1
   14000bed0:	mov    DWORD PTR [rsp+0x28],ebx
   14000bed4:	mov    QWORD PTR [rsp+0x20],rdi
   14000bed9:	call   QWORD PTR [rip+0x3259]        # 0x14000f138
   14000bedf:	test   eax,eax
   14000bee1:	je     0x14000bfb1
   14000bee7:	test   r15,r15
   14000beea:	je     0x14000bf28
   14000beec:	xor    eax,eax
   14000beee:	mov    r9d,ebx
   14000bef1:	mov    r8,rdi
   14000bef4:	mov    QWORD PTR [rsp+0x38],rax
   14000bef9:	mov    QWORD PTR [rsp+0x30],rax
   14000befe:	mov    eax,DWORD PTR [rbp+0xb8]
   14000bf04:	mov    DWORD PTR [rsp+0x28],eax
   14000bf08:	xor    edx,edx
   14000bf0a:	mov    ecx,r14d
   14000bf0d:	mov    QWORD PTR [rsp+0x20],r15
   14000bf12:	call   QWORD PTR [rip+0x3300]        # 0x14000f218
   14000bf18:	test   eax,eax
   14000bf1a:	je     0x14000bfb1
   14000bf20:	mov    rsi,r15
   14000bf23:	jmp    0x14000bfb1
   14000bf28:	xor    r13d,r13d
   14000bf2b:	cmp    DWORD PTR [rbp+0x0],esi
   14000bf2e:	jne    0x14000bf5b
   14000bf30:	mov    QWORD PTR [rsp+0x38],r13
   14000bf35:	mov    QWORD PTR [rsp+0x30],r13
   14000bf3a:	mov    r9d,ebx
   14000bf3d:	mov    r8,rdi
   14000bf40:	xor    edx,edx
   14000bf42:	mov    ecx,r14d
   14000bf45:	mov    DWORD PTR [rsp+0x28],r13d
   14000bf4a:	mov    QWORD PTR [rsp+0x20],r13
   14000bf4f:	call   QWORD PTR [rip+0x32c3]        # 0x14000f218
   14000bf55:	test   eax,eax
   14000bf57:	mov    ebx,eax
   14000bf59:	je     0x14000bfb1
   14000bf5b:	movsxd rdx,ebx
   14000bf5e:	mov    ecx,0x1
   14000bf63:	call   0x140006700
   14000bf68:	test   rax,rax
   14000bf6b:	mov    rsi,rax
   14000bf6e:	je     0x14000bfb1
   14000bf70:	mov    QWORD PTR [rsp+0x38],r13
   14000bf75:	mov    QWORD PTR [rsp+0x30],r13
   14000bf7a:	mov    r9d,ebx
   14000bf7d:	mov    r8,rdi
   14000bf80:	xor    edx,edx
   14000bf82:	mov    ecx,r14d
   14000bf85:	mov    DWORD PTR [rsp+0x28],ebx
   14000bf89:	mov    QWORD PTR [rsp+0x20],rax
   14000bf8e:	call   QWORD PTR [rip+0x3284]        # 0x14000f218
   14000bf94:	test   eax,eax
   14000bf96:	jne    0x14000bfa5
   14000bf98:	mov    rcx,rsi
   14000bf9b:	call   0x140002700
   14000bfa0:	mov    rsi,r13
   14000bfa3:	jmp    0x14000bfb1
   14000bfa5:	cmp    r12d,0xffffffff
   14000bfa9:	je     0x14000bfb1
   14000bfab:	mov    rcx,QWORD PTR [rbp+0x10]
   14000bfaf:	mov    DWORD PTR [rcx],eax
   14000bfb1:	cmp    DWORD PTR [rdi-0x10],0xdddd
   14000bfb8:	lea    rcx,[rdi-0x10]
   14000bfbc:	jne    0x14000bfc3
   14000bfbe:	call   0x140002700
   14000bfc3:	mov    rax,rsi
   14000bfc6:	mov    rcx,QWORD PTR [rbp+0x30]
   14000bfca:	xor    rcx,rbp
   14000bfcd:	call   0x1400020b0
   14000bfd2:	lea    rsp,[rbp+0x48]
   14000bfd6:	pop    r15
   14000bfd8:	pop    r14
   14000bfda:	pop    r13
   14000bfdc:	pop    r12
   14000bfde:	pop    rdi
   14000bfdf:	pop    rsi
   14000bfe0:	pop    rbx
   14000bfe1:	pop    rbp
   14000bfe2:	ret    
   14000bfe3:	int3   
   14000bfe4:	int3   
   14000bfe5:	int3   
   14000bfe6:	int3   
   14000bfe7:	int3   
   14000bfe8:	int3   
   14000bfe9:	int3   
   14000bfea:	int3   
   14000bfeb:	int3   
   14000bfec:	int3   
   14000bfed:	int3   
   14000bfee:	int3   
   14000bfef:	int3   
   14000bff0:	rex push rbx
   14000bff2:	sub    rsp,0x20
   14000bff6:	add    DWORD PTR [rip+0x967f],0x1        # 0x14001567c
   14000bffd:	mov    rbx,rcx
   14000c000:	mov    ecx,0x1000
   14000c005:	call   0x140006690
   14000c00a:	test   rax,rax
   14000c00d:	mov    QWORD PTR [rbx+0x10],rax
   14000c011:	je     0x14000c020
   14000c013:	or     DWORD PTR [rbx+0x18],0x8
   14000c017:	mov    DWORD PTR [rbx+0x24],0x1000
   14000c01e:	jmp    0x14000c033
   14000c020:	or     DWORD PTR [rbx+0x18],0x4
   14000c024:	lea    rax,[rbx+0x20]
   14000c028:	mov    DWORD PTR [rbx+0x24],0x2
   14000c02f:	mov    QWORD PTR [rbx+0x10],rax
   14000c033:	mov    rax,QWORD PTR [rbx+0x10]
   14000c037:	mov    DWORD PTR [rbx+0x8],0x0
   14000c03e:	mov    QWORD PTR [rbx],rax
   14000c041:	add    rsp,0x20
   14000c045:	pop    rbx
   14000c046:	ret    
   14000c047:	int3   
   14000c048:	int3   
   14000c049:	int3   
   14000c04a:	int3   
   14000c04b:	int3   
   14000c04c:	int3   
   14000c04d:	int3   
   14000c04e:	int3   
   14000c04f:	int3   
   14000c050:	push   r12
   14000c052:	push   r13
   14000c054:	push   r14
   14000c056:	sub    rsp,0x50
   14000c05a:	test   rcx,rcx
   14000c05d:	mov    r12d,r9d
   14000c060:	mov    r13,r8
   14000c063:	mov    r14,rdx
   14000c066:	mov    BYTE PTR [rsp+0x48],0x0
   14000c06b:	jne    0x14000c108
   14000c071:	call   0x140006240
   14000c076:	mov    QWORD PTR [rsp+0x40],rax
   14000c07b:	mov    r10,QWORD PTR [rax+0xc0]
   14000c082:	cmp    r10,QWORD PTR [rip+0x90a7]        # 0x140015130
   14000c089:	mov    QWORD PTR [rsp+0x30],r10
   14000c08e:	mov    r11,QWORD PTR [rax+0xb8]
   14000c095:	mov    QWORD PTR [rsp+0x38],r11
   14000c09a:	je     0x14000c0c1
   14000c09c:	mov    ecx,DWORD PTR [rax+0xc8]
   14000c0a2:	test   DWORD PTR [rip+0x8f10],ecx        # 0x140014fb8
   14000c0a8:	jne    0x14000c0c1
   14000c0aa:	call   0x140008030
   14000c0af:	mov    r11,QWORD PTR [rsp+0x38]
   14000c0b4:	mov    r10,rax
   14000c0b7:	mov    QWORD PTR [rsp+0x30],rax
   14000c0bc:	mov    rax,QWORD PTR [rsp+0x40]
   14000c0c1:	cmp    r11,QWORD PTR [rip+0x8de8]        # 0x140014eb0
   14000c0c8:	je     0x14000c0ec
   14000c0ca:	mov    ecx,DWORD PTR [rax+0xc8]
   14000c0d0:	test   DWORD PTR [rip+0x8ee2],ecx        # 0x140014fb8
   14000c0d6:	jne    0x14000c0ec
   14000c0d8:	call   0x1400074e0
   14000c0dd:	mov    r10,QWORD PTR [rsp+0x30]
   14000c0e2:	mov    QWORD PTR [rsp+0x38],rax
   14000c0e7:	mov    rax,QWORD PTR [rsp+0x40]
   14000c0ec:	test   BYTE PTR [rax+0xc8],0x2
   14000c0f3:	jne    0x14000c120
   14000c0f5:	or     DWORD PTR [rax+0xc8],0x2
   14000c0fc:	mov    r10,QWORD PTR [rsp+0x30]
   14000c101:	mov    BYTE PTR [rsp+0x48],0x1
   14000c106:	jmp    0x14000c120
   14000c108:	mov    rax,QWORD PTR [rcx]
   14000c10b:	lea    rdx,[rsp+0x30]
   14000c110:	mov    QWORD PTR [rdx],rax
   14000c113:	mov    rax,QWORD PTR [rcx+0x8]
   14000c117:	mov    QWORD PTR [rdx+0x8],rax
   14000c11b:	mov    r10,QWORD PTR [rsp+0x30]
   14000c120:	test   r13,r13
   14000c123:	je     0x14000c129
   14000c125:	mov    QWORD PTR [r13+0x0],r14
   14000c129:	test   r14,r14
   14000c12c:	jne    0x14000c171
   14000c12e:	call   0x140004100
   14000c133:	xor    r9d,r9d
   14000c136:	xor    r8d,r8d
   14000c139:	xor    edx,edx
   14000c13b:	xor    ecx,ecx
   14000c13d:	mov    QWORD PTR [rsp+0x20],0x0
   14000c146:	mov    DWORD PTR [rax],0x16
   14000c14c:	call   0x140003fa0
   14000c151:	cmp    BYTE PTR [rsp+0x48],0x0
   14000c156:	je     0x14000c164
   14000c158:	mov    rax,QWORD PTR [rsp+0x40]
   14000c15d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c164:	xor    eax,eax
   14000c166:	add    rsp,0x50
   14000c16a:	pop    r14
   14000c16c:	pop    r13
   14000c16e:	pop    r12
   14000c170:	ret    
   14000c171:	test   r12d,r12d
   14000c174:	je     0x14000c182
   14000c176:	cmp    r12d,0x2
   14000c17a:	jl     0x14000c12e
   14000c17c:	cmp    r12d,0x24
   14000c180:	jg     0x14000c12e
   14000c182:	mov    QWORD PTR [rsp+0x70],rbx
   14000c187:	mov    QWORD PTR [rsp+0x80],rsi
   14000c18f:	mov    QWORD PTR [rsp+0x88],rdi
   14000c197:	movzx  edi,BYTE PTR [r14]
   14000c19b:	xor    esi,esi
   14000c19d:	lea    rbx,[r14+0x1]
   14000c1a1:	cmp    DWORD PTR [r10+0x10c],0x1
   14000c1a9:	jle    0x14000c1c5
   14000c1ab:	lea    r8,[rsp+0x30]
   14000c1b0:	movzx  ecx,dil
   14000c1b4:	mov    edx,0x8
   14000c1b9:	call   0x14000c420
   14000c1be:	mov    r10,QWORD PTR [rsp+0x30]
   14000c1c3:	jmp    0x14000c1d6
   14000c1c5:	mov    rax,QWORD PTR [r10+0x140]
   14000c1cc:	movzx  ecx,dil
   14000c1d0:	mov    al,BYTE PTR [rax+rcx*2]
   14000c1d3:	and    eax,0x8
   14000c1d6:	test   eax,eax
   14000c1d8:	je     0x14000c1e3
   14000c1da:	mov    dil,BYTE PTR [rbx]
   14000c1dd:	add    rbx,0x1
   14000c1e1:	jmp    0x14000c1a1
   14000c1e3:	cmp    dil,0x2d
   14000c1e7:	mov    QWORD PTR [rsp+0x78],rbp
   14000c1ec:	jne    0x14000c201
   14000c1ee:	mov    ebp,DWORD PTR [rsp+0x90]
   14000c1f5:	mov    dil,BYTE PTR [rbx]
   14000c1f8:	or     ebp,0x2
   14000c1fb:	add    rbx,0x1
   14000c1ff:	jmp    0x14000c21e
   14000c201:	cmp    dil,0x2b
   14000c205:	jne    0x14000c217
   14000c207:	mov    dil,BYTE PTR [rbx]
   14000c20a:	mov    ebp,DWORD PTR [rsp+0x90]
   14000c211:	add    rbx,0x1
   14000c215:	jmp    0x14000c21e
   14000c217:	mov    ebp,DWORD PTR [rsp+0x90]
   14000c21e:	test   r12d,r12d
   14000c221:	js     0x14000c392
   14000c227:	cmp    r12d,0x1
   14000c22b:	je     0x14000c392
   14000c231:	cmp    r12d,0x24
   14000c235:	jg     0x14000c392
   14000c23b:	test   r12d,r12d
   14000c23e:	jne    0x14000c269
   14000c240:	cmp    dil,0x30
   14000c244:	je     0x14000c24e
   14000c246:	mov    r12d,0xa
   14000c24c:	jmp    0x14000c288
   14000c24e:	movzx  eax,BYTE PTR [rbx]
   14000c251:	cmp    al,0x78
   14000c253:	je     0x14000c261
   14000c255:	cmp    al,0x58
   14000c257:	je     0x14000c261
   14000c259:	mov    r12d,0x8
   14000c25f:	jmp    0x14000c288
   14000c261:	mov    r12d,0x10
   14000c267:	jmp    0x14000c275
   14000c269:	cmp    r12d,0x10
   14000c26d:	jne    0x14000c288
   14000c26f:	cmp    dil,0x30
   14000c273:	jne    0x14000c288
   14000c275:	movzx  eax,BYTE PTR [rbx]
   14000c278:	cmp    al,0x78
   14000c27a:	je     0x14000c280
   14000c27c:	cmp    al,0x58
   14000c27e:	jne    0x14000c288
   14000c280:	mov    dil,BYTE PTR [rbx+0x1]
   14000c284:	add    rbx,0x2
   14000c288:	mov    r11,QWORD PTR [r10+0x140]
   14000c28f:	xor    edx,edx
   14000c291:	or     eax,0xffffffff
   14000c294:	div    r12d
   14000c297:	mov    r9d,eax
   14000c29a:	data16 xchg ax,ax
   14000c29d:	data16 xchg ax,ax
   14000c2a0:	movzx  ecx,dil
   14000c2a4:	movzx  r8d,WORD PTR [r11+rcx*2]
   14000c2a9:	test   r8b,0x4
   14000c2ad:	je     0x14000c2b8
   14000c2af:	movsx  ecx,dil
   14000c2b3:	sub    ecx,0x30
   14000c2b6:	jmp    0x14000c2d8
   14000c2b8:	test   r8d,0x103
   14000c2bf:	je     0x14000c2f6
   14000c2c1:	lea    eax,[rdi-0x61]
   14000c2c4:	cmp    al,0x19
   14000c2c6:	ja     0x14000c2d1
   14000c2c8:	movsx  ecx,dil
   14000c2cc:	sub    ecx,0x20
   14000c2cf:	jmp    0x14000c2d5
   14000c2d1:	movsx  ecx,dil
   14000c2d5:	add    ecx,0xffffffc9
   14000c2d8:	cmp    ecx,r12d
   14000c2db:	jae    0x14000c2f6
   14000c2dd:	or     ebp,0x8
   14000c2e0:	cmp    esi,r9d
   14000c2e3:	jb     0x14000c30b
   14000c2e5:	cmp    esi,r9d
   14000c2e8:	jne    0x14000c2ee
   14000c2ea:	cmp    ecx,edx
   14000c2ec:	jbe    0x14000c30b
   14000c2ee:	or     ebp,0x4
   14000c2f1:	test   r13,r13
   14000c2f4:	jne    0x14000c311
   14000c2f6:	sub    rbx,0x1
   14000c2fa:	test   bpl,0x8
   14000c2fe:	jne    0x14000c31a
   14000c300:	test   r13,r13
   14000c303:	cmovne rbx,r14
   14000c307:	xor    esi,esi
   14000c309:	jmp    0x14000c36a
   14000c30b:	imul   esi,r12d
   14000c30f:	add    esi,ecx
   14000c311:	mov    dil,BYTE PTR [rbx]
   14000c314:	add    rbx,0x1
   14000c318:	jmp    0x14000c2a0
   14000c31a:	test   bpl,0x4
   14000c31e:	jne    0x14000c341
   14000c320:	test   bpl,0x1
   14000c324:	jne    0x14000c36a
   14000c326:	mov    eax,ebp
   14000c328:	and    eax,0x2
   14000c32b:	je     0x14000c335
   14000c32d:	cmp    esi,0x80000000
   14000c333:	ja     0x14000c341
   14000c335:	test   eax,eax
   14000c337:	jne    0x14000c36a
   14000c339:	cmp    esi,0x7fffffff
   14000c33f:	jbe    0x14000c36a
   14000c341:	call   0x140004100
   14000c346:	test   bpl,0x1
   14000c34a:	mov    DWORD PTR [rax],0x22
   14000c350:	je     0x14000c357
   14000c352:	or     esi,0xffffffff
   14000c355:	jmp    0x14000c36a
   14000c357:	test   bpl,0x2
   14000c35b:	mov    esi,0x0
   14000c360:	setne  sil
   14000c364:	add    esi,0x7fffffff
   14000c36a:	test   r13,r13
   14000c36d:	je     0x14000c373
   14000c36f:	mov    QWORD PTR [r13+0x0],rbx
   14000c373:	test   bpl,0x2
   14000c377:	je     0x14000c37b
   14000c379:	neg    esi
   14000c37b:	cmp    BYTE PTR [rsp+0x48],0x0
   14000c380:	je     0x14000c38e
   14000c382:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c387:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c38e:	mov    eax,esi
   14000c390:	jmp    0x14000c3b0
   14000c392:	test   r13,r13
   14000c395:	je     0x14000c39b
   14000c397:	mov    QWORD PTR [r13+0x0],r14
   14000c39b:	cmp    BYTE PTR [rsp+0x48],sil
   14000c3a0:	je     0x14000c3ae
   14000c3a2:	mov    rax,QWORD PTR [rsp+0x40]
   14000c3a7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c3ae:	xor    eax,eax
   14000c3b0:	mov    rbp,QWORD PTR [rsp+0x78]
   14000c3b5:	mov    rsi,QWORD PTR [rsp+0x80]
   14000c3bd:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c3c2:	mov    rdi,QWORD PTR [rsp+0x88]
   14000c3ca:	add    rsp,0x50
   14000c3ce:	pop    r14
   14000c3d0:	pop    r13
   14000c3d2:	pop    r12
   14000c3d4:	ret    
   14000c3d5:	int3   
   14000c3d6:	int3   
   14000c3d7:	int3   
   14000c3d8:	int3   
   14000c3d9:	int3   
   14000c3da:	int3   
   14000c3db:	int3   
   14000c3dc:	int3   
   14000c3dd:	int3   
   14000c3de:	int3   
   14000c3df:	int3   
   14000c3e0:	sub    rsp,0x38
   14000c3e4:	cmp    DWORD PTR [rip+0xa055],0x0        # 0x140016440
   14000c3eb:	mov    r9d,r8d
   14000c3ee:	mov    r8,rdx
   14000c3f1:	mov    rdx,rcx
   14000c3f4:	mov    DWORD PTR [rsp+0x20],0x0
   14000c3fc:	jne    0x14000c40f
   14000c3fe:	lea    rcx,[rip+0x8d3b]        # 0x140015140
   14000c405:	call   0x14000c050
   14000c40a:	add    rsp,0x38
   14000c40e:	ret    
   14000c40f:	xor    ecx,ecx
   14000c411:	call   0x14000c050
   14000c416:	add    rsp,0x38
   14000c41a:	ret    
   14000c41b:	int3   
   14000c41c:	int3   
   14000c41d:	int3   
   14000c41e:	int3   
   14000c41f:	int3   
   14000c420:	mov    QWORD PTR [rsp+0x20],rbx
   14000c425:	push   rsi
   14000c426:	sub    rsp,0x60
   14000c42a:	test   r8,r8
   14000c42d:	mov    esi,edx
   14000c42f:	movsxd rbx,ecx
   14000c432:	mov    BYTE PTR [rsp+0x58],0x0
   14000c437:	jne    0x14000c4d3
   14000c43d:	call   0x140006240
   14000c442:	mov    QWORD PTR [rsp+0x50],rax
   14000c447:	mov    r11,rax
   14000c44a:	mov    r8,QWORD PTR [rax+0xc0]
   14000c451:	cmp    r8,QWORD PTR [rip+0x8cd8]        # 0x140015130
   14000c458:	mov    QWORD PTR [rsp+0x40],r8
   14000c45d:	mov    rax,QWORD PTR [rax+0xb8]
   14000c464:	mov    QWORD PTR [rsp+0x48],rax
   14000c469:	je     0x14000c48e
   14000c46b:	mov    ecx,DWORD PTR [r11+0xc8]
   14000c472:	test   DWORD PTR [rip+0x8b40],ecx        # 0x140014fb8
   14000c478:	jne    0x14000c48e
   14000c47a:	call   0x140008030
   14000c47f:	mov    r11,QWORD PTR [rsp+0x50]
   14000c484:	mov    QWORD PTR [rsp+0x40],rax
   14000c489:	mov    rax,QWORD PTR [rsp+0x48]
   14000c48e:	cmp    rax,QWORD PTR [rip+0x8a1b]        # 0x140014eb0
   14000c495:	je     0x14000c4b5
   14000c497:	mov    eax,DWORD PTR [r11+0xc8]
   14000c49e:	test   DWORD PTR [rip+0x8b14],eax        # 0x140014fb8
   14000c4a4:	jne    0x14000c4b5
   14000c4a6:	call   0x1400074e0
   14000c4ab:	mov    r11,QWORD PTR [rsp+0x50]
   14000c4b0:	mov    QWORD PTR [rsp+0x48],rax
   14000c4b5:	test   BYTE PTR [r11+0xc8],0x2
   14000c4bd:	jne    0x14000c4eb
   14000c4bf:	or     DWORD PTR [r11+0xc8],0x2
   14000c4c7:	mov    r11,QWORD PTR [rsp+0x50]
   14000c4cc:	mov    BYTE PTR [rsp+0x58],0x1
   14000c4d1:	jmp    0x14000c4eb
   14000c4d3:	mov    rax,QWORD PTR [r8]
   14000c4d6:	lea    rcx,[rsp+0x40]
   14000c4db:	mov    QWORD PTR [rcx],rax
   14000c4de:	mov    rax,QWORD PTR [r8+0x8]
   14000c4e2:	mov    QWORD PTR [rcx+0x8],rax
   14000c4e6:	mov    r11,QWORD PTR [rsp+0x50]
   14000c4eb:	lea    eax,[rbx+0x1]
   14000c4ee:	cmp    eax,0x100
   14000c4f3:	ja     0x14000c528
   14000c4f5:	mov    rax,QWORD PTR [rsp+0x40]
   14000c4fa:	mov    rcx,QWORD PTR [rax+0x140]
   14000c501:	movzx  eax,WORD PTR [rcx+rbx*2]
   14000c505:	and    eax,esi
   14000c507:	cmp    BYTE PTR [rsp+0x58],0x0
   14000c50c:	je     0x14000c5f9
   14000c512:	and    DWORD PTR [r11+0xc8],0xfffffffd
   14000c51a:	mov    rbx,QWORD PTR [rsp+0x88]
   14000c522:	add    rsp,0x60
   14000c526:	pop    rsi
   14000c527:	ret    
   14000c528:	mov    QWORD PTR [rsp+0x78],rdi
   14000c52d:	mov    edi,ebx
   14000c52f:	lea    rdx,[rsp+0x40]
   14000c534:	sar    edi,0x8
   14000c537:	movzx  ecx,dil
   14000c53b:	call   0x1400083b0
   14000c540:	test   eax,eax
   14000c542:	je     0x14000c563
   14000c544:	mov    BYTE PTR [rsp+0x80],dil
   14000c54c:	mov    BYTE PTR [rsp+0x81],bl
   14000c553:	mov    BYTE PTR [rsp+0x82],0x0
   14000c55b:	mov    r9d,0x2
   14000c561:	jmp    0x14000c578
   14000c563:	mov    BYTE PTR [rsp+0x80],bl
   14000c56a:	mov    BYTE PTR [rsp+0x81],0x0
   14000c572:	mov    r9d,0x1
   14000c578:	mov    rcx,QWORD PTR [rsp+0x40]
   14000c57d:	mov    DWORD PTR [rsp+0x38],0x1
   14000c585:	lea    r8,[rsp+0x80]
   14000c58d:	mov    eax,DWORD PTR [rcx+0x14]
   14000c590:	mov    edx,0x1
   14000c595:	mov    DWORD PTR [rsp+0x30],eax
   14000c599:	mov    eax,DWORD PTR [rcx+0x4]
   14000c59c:	lea    rcx,[rsp+0x40]
   14000c5a1:	mov    DWORD PTR [rsp+0x28],eax
   14000c5a5:	lea    rax,[rsp+0x70]
   14000c5aa:	mov    QWORD PTR [rsp+0x20],rax
   14000c5af:	call   0x14000a7e0
   14000c5b4:	mov    rdi,QWORD PTR [rsp+0x78]
   14000c5b9:	test   eax,eax
   14000c5bb:	jne    0x14000c5df
   14000c5bd:	cmp    BYTE PTR [rsp+0x58],al
   14000c5c1:	je     0x14000c5cf
   14000c5c3:	mov    rax,QWORD PTR [rsp+0x50]
   14000c5c8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c5cf:	xor    eax,eax
   14000c5d1:	mov    rbx,QWORD PTR [rsp+0x88]
   14000c5d9:	add    rsp,0x60
   14000c5dd:	pop    rsi
   14000c5de:	ret    
   14000c5df:	movzx  eax,WORD PTR [rsp+0x70]
   14000c5e4:	and    eax,esi
   14000c5e6:	cmp    BYTE PTR [rsp+0x58],0x0
   14000c5eb:	je     0x14000c5f9
   14000c5ed:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c5f2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c5f9:	mov    rbx,QWORD PTR [rsp+0x88]
   14000c601:	add    rsp,0x60
   14000c605:	pop    rsi
   14000c606:	ret    
   14000c607:	int3   
   14000c608:	int3   
   14000c609:	int3   
   14000c60a:	int3   
   14000c60b:	int3   
   14000c60c:	int3   
   14000c60d:	int3   
   14000c60e:	int3   
   14000c60f:	int3   
   14000c610:	sub    rsp,0x48
   14000c614:	xor    eax,eax
   14000c616:	lea    rcx,[rip+0x4953]        # 0x140010f70
   14000c61d:	xor    r9d,r9d
   14000c620:	mov    QWORD PTR [rsp+0x30],rax
   14000c625:	mov    DWORD PTR [rsp+0x28],eax
   14000c629:	lea    r8d,[rax+0x3]
   14000c62d:	mov    edx,0x40000000
   14000c632:	mov    DWORD PTR [rsp+0x20],0x3
   14000c63a:	call   QWORD PTR [rip+0x29f8]        # 0x14000f038
   14000c640:	mov    QWORD PTR [rip+0x8e41],rax        # 0x140015488
   14000c647:	add    rsp,0x48
   14000c64b:	ret    
   14000c64c:	int3   
   14000c64d:	int3   
   14000c64e:	int3   
   14000c64f:	int3   
   14000c650:	sub    rsp,0x28
   14000c654:	mov    rcx,QWORD PTR [rip+0x8e2d]        # 0x140015488
   14000c65b:	cmp    rcx,0xffffffffffffffff
   14000c65f:	je     0x14000c66d
   14000c661:	cmp    rcx,0xfffffffffffffffe
   14000c665:	je     0x14000c66d
   14000c667:	call   QWORD PTR [rip+0x2bf3]        # 0x14000f260
   14000c66d:	mov    rcx,QWORD PTR [rip+0x8e0c]        # 0x140015480
   14000c674:	cmp    rcx,0xffffffffffffffff
   14000c678:	je     0x14000c686
   14000c67a:	cmp    rcx,0xfffffffffffffffe
   14000c67e:	je     0x14000c686
   14000c680:	call   QWORD PTR [rip+0x2bda]        # 0x14000f260
   14000c686:	add    rsp,0x28
   14000c68a:	ret    
   14000c68b:	int3   
   14000c68c:	jmp    QWORD PTR [rip+0x2a1e]        # 0x14000f0b0
   14000c692:	jmp    QWORD PTR [rip+0x2a50]        # 0x14000f0e8
   14000c698:	jmp    QWORD PTR [rip+0x2a52]        # 0x14000f0f0
   14000c69e:	int3   
   14000c69f:	int3   
   14000c6a0:	rex push rbx
   14000c6a2:	sub    rsp,0x60
   14000c6a6:	mov    rax,QWORD PTR [rip+0x4be3]        # 0x140011290
   14000c6ad:	mov    rbx,rdx
   14000c6b0:	lea    rdx,[rsp+0x20]
   14000c6b5:	mov    QWORD PTR [rdx],rax
   14000c6b8:	mov    rax,QWORD PTR [rip+0x4bd9]        # 0x140011298
   14000c6bf:	mov    QWORD PTR [rdx+0x8],rax
   14000c6c3:	mov    rax,QWORD PTR [rip+0x4bd6]        # 0x1400112a0
   14000c6ca:	mov    QWORD PTR [rdx+0x10],rax
   14000c6ce:	mov    rax,QWORD PTR [rip+0x4bd3]        # 0x1400112a8
   14000c6d5:	mov    QWORD PTR [rdx+0x18],rax
   14000c6d9:	mov    rax,QWORD PTR [rip+0x4bd0]        # 0x1400112b0
   14000c6e0:	mov    QWORD PTR [rdx+0x20],rax
   14000c6e4:	mov    rax,QWORD PTR [rip+0x4bcd]        # 0x1400112b8
   14000c6eb:	mov    QWORD PTR [rdx+0x28],rax
   14000c6ef:	mov    rax,QWORD PTR [rip+0x4bca]        # 0x1400112c0
   14000c6f6:	mov    QWORD PTR [rdx+0x30],rax
   14000c6fa:	mov    rax,QWORD PTR [rip+0x4bc7]        # 0x1400112c8
   14000c701:	mov    QWORD PTR [rdx+0x38],rax
   14000c705:	mov    QWORD PTR [rsp+0x48],rcx
   14000c70a:	lea    rdx,[rsp+0x70]
   14000c70f:	mov    rcx,rbx
   14000c712:	mov    QWORD PTR [rsp+0x50],rbx
   14000c717:	call   0x14000eb7e
   14000c71c:	test   rbx,rbx
   14000c71f:	mov    r11,rax
   14000c722:	mov    QWORD PTR [rsp+0x70],rax
   14000c727:	mov    QWORD PTR [rsp+0x58],rax
   14000c72c:	je     0x14000c74c
   14000c72e:	test   BYTE PTR [rbx],0x8
   14000c731:	mov    ecx,0x1994000
   14000c736:	je     0x14000c73e
   14000c738:	mov    DWORD PTR [rsp+0x40],ecx
   14000c73c:	jmp    0x14000c74c
   14000c73e:	mov    eax,DWORD PTR [rsp+0x40]
   14000c742:	test   r11,r11
   14000c745:	cmove  eax,ecx
   14000c748:	mov    DWORD PTR [rsp+0x40],eax
   14000c74c:	mov    r8d,DWORD PTR [rsp+0x38]
   14000c751:	mov    edx,DWORD PTR [rsp+0x24]
   14000c755:	mov    ecx,DWORD PTR [rsp+0x20]
   14000c759:	lea    r9,[rsp+0x40]
   14000c75e:	call   QWORD PTR [rip+0x2914]        # 0x14000f078
   14000c764:	add    rsp,0x60
   14000c768:	pop    rbx
   14000c769:	ret    
   14000c76a:	int3   
   14000c76b:	int3   
   14000c76c:	int3   
   14000c76d:	int3   
   14000c76e:	int3   
   14000c76f:	int3   
   14000c770:	mov    QWORD PTR [rsp+0x20],rbp
   14000c775:	push   rdi
   14000c776:	push   r12
   14000c778:	push   r13
   14000c77a:	push   r14
   14000c77c:	push   r15
   14000c77e:	sub    rsp,0x20
   14000c782:	movsxd rdi,DWORD PTR [r8+0xc]
   14000c786:	mov    r15,rcx
   14000c789:	mov    rcx,r8
   14000c78c:	mov    r12,r9
   14000c78f:	mov    r14,r8
   14000c792:	mov    r13,rdx
   14000c795:	call   0x14000d010
   14000c79a:	test   edi,edi
   14000c79c:	mov    r10,QWORD PTR [r15]
   14000c79f:	mov    QWORD PTR [r12],r10
   14000c7a3:	mov    ebp,eax
   14000c7a5:	je     0x14000c869
   14000c7ab:	lea    rcx,[rdi+rdi*4]
   14000c7af:	mov    QWORD PTR [rsp+0x58],rbx
   14000c7b4:	mov    QWORD PTR [rsp+0x60],rsi
   14000c7b9:	lea    rsi,[rcx*4-0x14]
   14000c7c1:	data16 xchg ax,ax
   14000c7c4:	data16 data16 xchg ax,ax
   14000c7c8:	data16 data16 xchg ax,ax
   14000c7cc:	data16 data16 xchg ax,ax
   14000c7d0:	movsxd rbx,DWORD PTR [r14+0x10]
   14000c7d4:	add    rbx,QWORD PTR [r13+0x8]
   14000c7d8:	add    rbx,rsi
   14000c7db:	cmp    ebp,DWORD PTR [rbx+0x4]
   14000c7de:	jle    0x14000c82a
   14000c7e0:	cmp    ebp,DWORD PTR [rbx+0x8]
   14000c7e3:	jg     0x14000c82a
   14000c7e5:	mov    rcx,QWORD PTR [r13+0x0]
   14000c7e9:	lea    rdx,[rsp+0x50]
   14000c7ee:	xor    r8d,r8d
   14000c7f1:	call   0x14000c698
   14000c7f6:	movsxd r10,DWORD PTR [rbx+0x10]
   14000c7fa:	mov    r8d,DWORD PTR [rbx+0xc]
   14000c7fe:	add    r10,QWORD PTR [rsp+0x50]
   14000c803:	mov    r9d,DWORD PTR [rax]
   14000c806:	xor    edx,edx
   14000c808:	test   r8d,r8d
   14000c80b:	je     0x14000c825
   14000c80d:	lea    rcx,[r10+0xc]
   14000c811:	movsxd rax,DWORD PTR [rcx]
   14000c814:	cmp    rax,r9
   14000c817:	je     0x14000c825
   14000c819:	add    edx,0x1
   14000c81c:	add    rcx,0x14
   14000c820:	cmp    edx,r8d
   14000c823:	jb     0x14000c811
   14000c825:	cmp    edx,r8d
   14000c828:	jb     0x14000c835
   14000c82a:	sub    rsi,0x14
   14000c82e:	add    edi,0xffffffff
   14000c831:	jne    0x14000c7d0
   14000c833:	jmp    0x14000c849
   14000c835:	mov    rax,QWORD PTR [r15]
   14000c838:	lea    rcx,[rdx+rdx*4]
   14000c83c:	movsxd rcx,DWORD PTR [r10+rcx*4+0x10]
   14000c841:	mov    rcx,QWORD PTR [rcx+rax*1]
   14000c845:	mov    QWORD PTR [r12],rcx
   14000c849:	mov    rbx,QWORD PTR [rsp+0x58]
   14000c84e:	mov    rsi,QWORD PTR [rsp+0x60]
   14000c853:	mov    rax,r12
   14000c856:	mov    rbp,QWORD PTR [rsp+0x68]
   14000c85b:	add    rsp,0x20
   14000c85f:	pop    r15
   14000c861:	pop    r14
   14000c863:	pop    r13
   14000c865:	pop    r12
   14000c867:	pop    rdi
   14000c868:	ret    
   14000c869:	mov    rax,r12
   14000c86c:	mov    rbp,QWORD PTR [rsp+0x68]
   14000c871:	add    rsp,0x20
   14000c875:	pop    r15
   14000c877:	pop    r14
   14000c879:	pop    r13
   14000c87b:	pop    r12
   14000c87d:	pop    rdi
   14000c87e:	ret    
   14000c87f:	int3   
   14000c880:	sub    rsp,0x28
   14000c884:	call   0x140006240
   14000c889:	mov    rax,QWORD PTR [rax+0x128]
   14000c890:	add    rsp,0x28
   14000c894:	ret    
   14000c895:	int3   
   14000c896:	int3   
   14000c897:	int3   
   14000c898:	int3   
   14000c899:	int3   
   14000c89a:	int3   
   14000c89b:	int3   
   14000c89c:	int3   
   14000c89d:	int3   
   14000c89e:	int3   
   14000c89f:	int3   
   14000c8a0:	sub    rsp,0x28
   14000c8a4:	call   0x140006240
   14000c8a9:	mov    rax,QWORD PTR [rax+0x130]
   14000c8b0:	add    rsp,0x28
   14000c8b4:	ret    
   14000c8b5:	int3   
   14000c8b6:	int3   
   14000c8b7:	int3   
   14000c8b8:	int3   
   14000c8b9:	int3   
   14000c8ba:	int3   
   14000c8bb:	int3   
   14000c8bc:	int3   
   14000c8bd:	int3   
   14000c8be:	int3   
   14000c8bf:	int3   
   14000c8c0:	rex push rbx
   14000c8c2:	sub    rsp,0x20
   14000c8c6:	mov    rbx,rcx
   14000c8c9:	call   0x140006240
   14000c8ce:	mov    QWORD PTR [rax+0x128],rbx
   14000c8d5:	add    rsp,0x20
   14000c8d9:	pop    rbx
   14000c8da:	ret    
   14000c8db:	int3   
   14000c8dc:	int3   
   14000c8dd:	int3   
   14000c8de:	int3   
   14000c8df:	int3   
   14000c8e0:	rex push rbx
   14000c8e2:	sub    rsp,0x20
   14000c8e6:	mov    rbx,rcx
   14000c8e9:	call   0x140006240
   14000c8ee:	mov    QWORD PTR [rax+0x130],rbx
   14000c8f5:	add    rsp,0x20
   14000c8f9:	pop    rbx
   14000c8fa:	ret    
   14000c8fb:	int3   
   14000c8fc:	int3   
   14000c8fd:	int3   
   14000c8fe:	int3   
   14000c8ff:	int3   
   14000c900:	mov    QWORD PTR [rsp+0x10],rbx
   14000c905:	mov    QWORD PTR [rsp+0x20],rbp
   14000c90a:	push   rsi
   14000c90b:	push   rdi
   14000c90c:	push   r12
   14000c90e:	push   r13
   14000c910:	push   r14
   14000c912:	sub    rsp,0x20
   14000c916:	movsxd rdi,DWORD PTR [r8+0xc]
   14000c91a:	mov    r14,rcx
   14000c91d:	mov    rcx,r8
   14000c920:	mov    rbp,r8
   14000c923:	mov    r13,rdx
   14000c926:	call   0x14000d010
   14000c92b:	test   edi,edi
   14000c92d:	mov    r9,QWORD PTR [r14]
   14000c930:	mov    r12d,eax
   14000c933:	mov    QWORD PTR [rsp+0x50],r9
   14000c938:	je     0x14000c9cc
   14000c93e:	lea    rcx,[rdi+rdi*4]
   14000c942:	lea    rsi,[rcx*4-0x14]
   14000c94a:	data16 xchg ax,ax
   14000c94d:	data16 xchg ax,ax
   14000c950:	movsxd rbx,DWORD PTR [rbp+0x10]
   14000c954:	add    rbx,QWORD PTR [r13+0x8]
   14000c958:	add    rbx,rsi
   14000c95b:	cmp    r12d,DWORD PTR [rbx+0x4]
   14000c95f:	jle    0x14000c9ac
   14000c961:	cmp    r12d,DWORD PTR [rbx+0x8]
   14000c965:	jg     0x14000c9ac
   14000c967:	mov    rcx,QWORD PTR [r13+0x0]
   14000c96b:	lea    rdx,[rsp+0x60]
   14000c970:	xor    r8d,r8d
   14000c973:	call   0x14000c698
   14000c978:	movsxd r10,DWORD PTR [rbx+0x10]
   14000c97c:	mov    r8d,DWORD PTR [rbx+0xc]
   14000c980:	add    r10,QWORD PTR [rsp+0x60]
   14000c985:	mov    r9d,DWORD PTR [rax]
   14000c988:	xor    edx,edx
   14000c98a:	test   r8d,r8d
   14000c98d:	je     0x14000c9a7
   14000c98f:	lea    rcx,[r10+0xc]
   14000c993:	movsxd rax,DWORD PTR [rcx]
   14000c996:	cmp    rax,r9
   14000c999:	je     0x14000c9a7
   14000c99b:	add    edx,0x1
   14000c99e:	add    rcx,0x14
   14000c9a2:	cmp    edx,r8d
   14000c9a5:	jb     0x14000c993
   14000c9a7:	cmp    edx,r8d
   14000c9aa:	jb     0x14000c9b7
   14000c9ac:	sub    rsi,0x14
   14000c9b0:	add    edi,0xffffffff
   14000c9b3:	jne    0x14000c950
   14000c9b5:	jmp    0x14000c9cc
   14000c9b7:	mov    rax,QWORD PTR [r14]
   14000c9ba:	lea    rcx,[rdx+rdx*4]
   14000c9be:	movsxd rcx,DWORD PTR [r10+rcx*4+0x10]
   14000c9c3:	mov    rcx,QWORD PTR [rcx+rax*1]
   14000c9c7:	mov    QWORD PTR [rsp+0x50],rcx
   14000c9cc:	mov    rdx,r13
   14000c9cf:	mov    rcx,rbp
   14000c9d2:	call   0x14000d010
   14000c9d7:	movsxd rbx,DWORD PTR [rbp+0xc]
   14000c9db:	test   ebx,ebx
   14000c9dd:	mov    esi,eax
   14000c9df:	je     0x14000ca18
   14000c9e1:	lea    rcx,[rbx+rbx*4]
   14000c9e5:	lea    rdi,[rcx*4-0x14]
   14000c9ed:	data16 xchg ax,ax
   14000c9f0:	call   0x140006240
   14000c9f5:	movsxd rcx,DWORD PTR [rbp+0x10]
   14000c9f9:	mov    rdx,QWORD PTR [rax+0x128]
   14000ca00:	add    rdx,rcx
   14000ca03:	cmp    esi,DWORD PTR [rdx+rdi*1+0x4]
   14000ca07:	jle    0x14000ca0f
   14000ca09:	cmp    esi,DWORD PTR [rdx+rdi*1+0x8]
   14000ca0d:	jle    0x14000ca43
   14000ca0f:	sub    rdi,0x14
   14000ca13:	add    ebx,0xffffffff
   14000ca16:	jne    0x14000c9f0
   14000ca18:	or     r9d,0xffffffff
   14000ca1c:	lea    rcx,[rsp+0x50]
   14000ca21:	mov    r8,rbp
   14000ca24:	mov    rdx,r13
   14000ca27:	call   0x14000d260
   14000ca2c:	mov    rbx,QWORD PTR [rsp+0x58]
   14000ca31:	mov    rbp,QWORD PTR [rsp+0x68]
   14000ca36:	add    rsp,0x20
   14000ca3a:	pop    r14
   14000ca3c:	pop    r13
   14000ca3e:	pop    r12
   14000ca40:	pop    rdi
   14000ca41:	pop    rsi
   14000ca42:	ret    
   14000ca43:	mov    r9d,DWORD PTR [rdx+rdi*1+0x4]
   14000ca48:	jmp    0x14000ca1c
   14000ca4a:	int3   
   14000ca4b:	int3   
   14000ca4c:	int3   
   14000ca4d:	int3   
   14000ca4e:	int3   
   14000ca4f:	int3   
   14000ca50:	mov    QWORD PTR [rsp+0x10],rbx
   14000ca55:	mov    QWORD PTR [rsp+0x18],rsi
   14000ca5a:	push   rdi
   14000ca5b:	sub    rsp,0x40
   14000ca5f:	mov    rbx,r9
   14000ca62:	mov    rdi,r8
   14000ca65:	mov    rsi,rcx
   14000ca68:	mov    QWORD PTR [rsp+0x50],rdx
   14000ca6d:	call   0x140006240
   14000ca72:	mov    rdx,QWORD PTR [rbx+0x8]
   14000ca76:	mov    QWORD PTR [rax+0x128],rdx
   14000ca7d:	call   0x140006240
   14000ca82:	mov    rdx,QWORD PTR [rsi+0x38]
   14000ca86:	mov    QWORD PTR [rax+0x130],rdx
   14000ca8d:	call   0x140006240
   14000ca92:	mov    rdx,QWORD PTR [rbx+0x38]
   14000ca96:	mov    r8d,DWORD PTR [rdx]
   14000ca99:	lea    rdx,[rsp+0x50]
   14000ca9e:	mov    r9,rbx
   14000caa1:	add    r8,QWORD PTR [rax+0x128]
   14000caa8:	xor    eax,eax
   14000caaa:	mov    rcx,rsi
   14000caad:	mov    DWORD PTR [rsp+0x38],eax
   14000cab1:	mov    QWORD PTR [rsp+0x30],rax
   14000cab6:	mov    DWORD PTR [rsp+0x28],eax
   14000caba:	mov    QWORD PTR [rsp+0x20],r8
   14000cabf:	mov    r8,rdi
   14000cac2:	call   0x14000e760
   14000cac7:	mov    rbx,QWORD PTR [rsp+0x58]
   14000cacc:	mov    rsi,QWORD PTR [rsp+0x60]
   14000cad1:	add    rsp,0x40
   14000cad5:	pop    rdi
   14000cad6:	ret    
   14000cad7:	int3   
   14000cad8:	int3   
   14000cad9:	int3   
   14000cada:	int3   
   14000cadb:	int3   
   14000cadc:	int3   
   14000cadd:	int3   
   14000cade:	int3   
   14000cadf:	int3   
   14000cae0:	mov    QWORD PTR [rsp+0x8],rbx
   14000cae5:	mov    QWORD PTR [rsp+0x10],rbp
   14000caea:	mov    QWORD PTR [rsp+0x18],rsi
   14000caef:	push   rdi
   14000caf0:	sub    rsp,0x40
   14000caf4:	mov    rsi,r9
   14000caf7:	mov    rbp,r8
   14000cafa:	mov    rbx,rdx
   14000cafd:	mov    rdi,rcx
   14000cb00:	call   0x140006240
   14000cb05:	mov    QWORD PTR [rax+0x138],rbx
   14000cb0c:	mov    rbx,QWORD PTR [rdi]
   14000cb0f:	call   0x140006240
   14000cb14:	mov    rdx,QWORD PTR [rbx+0x38]
   14000cb18:	mov    rcx,QWORD PTR [rsp+0x78]
   14000cb1d:	mov    r9,QWORD PTR [rsp+0x70]
   14000cb22:	mov    DWORD PTR [rsp+0x38],0x1
   14000cb2a:	mov    QWORD PTR [rax+0x130],rdx
   14000cb31:	xor    ebx,ebx
   14000cb33:	mov    QWORD PTR [rsp+0x30],rbx
   14000cb38:	mov    DWORD PTR [rsp+0x28],ebx
   14000cb3c:	mov    QWORD PTR [rsp+0x20],rcx
   14000cb41:	mov    rcx,QWORD PTR [rdi]
   14000cb44:	mov    r8,rsi
   14000cb47:	mov    rdx,rbp
   14000cb4a:	call   0x14000e760
   14000cb4f:	call   0x140006240
   14000cb54:	mov    rcx,QWORD PTR [rsp+0x80]
   14000cb5c:	mov    rbp,QWORD PTR [rsp+0x58]
   14000cb61:	mov    rsi,QWORD PTR [rsp+0x60]
   14000cb66:	mov    QWORD PTR [rax+0x138],rbx
   14000cb6d:	lea    eax,[rbx+0x1]
   14000cb70:	mov    rbx,QWORD PTR [rsp+0x50]
   14000cb75:	mov    DWORD PTR [rcx],0x1
   14000cb7b:	add    rsp,0x40
   14000cb7f:	pop    rdi
   14000cb80:	ret    
   14000cb81:	int3   
   14000cb82:	int3   
   14000cb83:	int3   
   14000cb84:	int3   
   14000cb85:	int3   
   14000cb86:	int3   
   14000cb87:	int3   
   14000cb88:	int3   
   14000cb89:	int3   
   14000cb8a:	int3   
   14000cb8b:	int3   
   14000cb8c:	int3   
   14000cb8d:	int3   
   14000cb8e:	int3   
   14000cb8f:	int3   
   14000cb90:	mov    rax,rsp
   14000cb93:	mov    QWORD PTR [rax+0x20],r9
   14000cb97:	mov    QWORD PTR [rax+0x18],r8
   14000cb9b:	mov    QWORD PTR [rax+0x10],rdx
   14000cb9f:	mov    QWORD PTR [rax+0x8],rcx
   14000cba3:	push   rbx
   14000cba4:	sub    rsp,0x60
   14000cba8:	mov    rbx,rcx
   14000cbab:	mov    DWORD PTR [rax-0x28],0x0
   14000cbb2:	mov    QWORD PTR [rax-0x20],rcx
   14000cbb6:	mov    QWORD PTR [rax-0x18],r8
   14000cbba:	call   0x140006240
   14000cbbf:	mov    r8,QWORD PTR [rax+0xe0]
   14000cbc6:	lea    rdx,[rsp+0x48]
   14000cbcb:	mov    ecx,DWORD PTR [rbx]
   14000cbcd:	call   r8
   14000cbd0:	mov    DWORD PTR [rsp+0x40],0x0
   14000cbd8:	jmp    0x14000cbda
   14000cbda:	mov    eax,DWORD PTR [rsp+0x40]
   14000cbde:	add    rsp,0x60
   14000cbe2:	pop    rbx
   14000cbe3:	ret    
   14000cbe4:	int3   
   14000cbe5:	int3   
   14000cbe6:	int3   
   14000cbe7:	int3   
   14000cbe8:	int3   
   14000cbe9:	int3   
   14000cbea:	int3   
   14000cbeb:	int3   
   14000cbec:	int3   
   14000cbed:	int3   
   14000cbee:	int3   
   14000cbef:	int3   
   14000cbf0:	rex push rbp
   14000cbf2:	sub    rsp,0x40
   14000cbf6:	mov    rbp,rdx
   14000cbf9:	lea    rax,[rbp+0x40]
   14000cbfd:	mov    QWORD PTR [rsp+0x30],rax
   14000cc02:	mov    rax,QWORD PTR [rbp+0x90]
   14000cc09:	mov    QWORD PTR [rsp+0x28],rax
   14000cc0e:	mov    rax,QWORD PTR [rbp+0x88]
   14000cc15:	mov    QWORD PTR [rsp+0x20],rax
   14000cc1a:	mov    r9,QWORD PTR [rbp+0x80]
   14000cc21:	mov    r8,QWORD PTR [rbp+0x78]
   14000cc25:	mov    rdx,QWORD PTR [rbp+0x70]
   14000cc29:	call   0x14000cae0
   14000cc2e:	add    rsp,0x40
   14000cc32:	pop    rbp
   14000cc33:	ret    
   14000cc34:	int3   
   14000cc35:	int3   
   14000cc36:	int3   
   14000cc37:	int3   
   14000cc38:	int3   
   14000cc39:	int3   
   14000cc3a:	int3   
   14000cc3b:	int3   
   14000cc3c:	int3   
   14000cc3d:	int3   
   14000cc3e:	int3   
   14000cc3f:	int3   
   14000cc40:	mov    QWORD PTR [rsp+0x8],rbx
   14000cc45:	mov    QWORD PTR [rsp+0x10],rbp
   14000cc4a:	mov    QWORD PTR [rsp+0x18],rsi
   14000cc4f:	push   rdi
   14000cc50:	push   r12
   14000cc52:	push   r13
   14000cc54:	sub    rsp,0x20
   14000cc58:	movsxd rsi,DWORD PTR [rdx+0xc]
   14000cc5c:	mov    r13,QWORD PTR [rsp+0x70]
   14000cc61:	mov    r12,rdx
   14000cc64:	mov    rcx,r12
   14000cc67:	mov    rdx,r13
   14000cc6a:	mov    ebp,r9d
   14000cc6d:	xor    edi,edi
   14000cc6f:	call   0x14000d010
   14000cc74:	test   esi,esi
   14000cc76:	mov    ebx,eax
   14000cc78:	jne    0x14000cc7f
   14000cc7a:	call   0x1400088d0
   14000cc7f:	test   esi,esi
   14000cc81:	mov    r10,QWORD PTR [rsp+0x68]
   14000cc86:	mov    r9,QWORD PTR [rsp+0x60]
   14000cc8b:	mov    DWORD PTR [r10],0xffffffff
   14000cc92:	mov    DWORD PTR [r9],0xffffffff
   14000cc99:	mov    r8d,esi
   14000cc9c:	je     0x14000ccc7
   14000cc9e:	movsxd rcx,DWORD PTR [r12+0x10]
   14000cca3:	lea    rax,[rsi+rsi*4]
   14000cca7:	lea    rcx,[rcx+rax*4]
   14000ccab:	mov    rax,QWORD PTR [r13+0x8]
   14000ccaf:	lea    rdx,[rcx+rax*1-0xc]
   14000ccb4:	cmp    ebx,DWORD PTR [rdx-0x4]
   14000ccb7:	jle    0x14000ccbd
   14000ccb9:	cmp    ebx,DWORD PTR [rdx]
   14000ccbb:	jle    0x14000ccc7
   14000ccbd:	sub    rdx,0x14
   14000ccc1:	add    r8d,0xffffffff
   14000ccc5:	jne    0x14000ccb4
   14000ccc7:	test   r8d,r8d
   14000ccca:	je     0x14000cce1
   14000cccc:	lea    eax,[r8-0x1]
   14000ccd0:	lea    rdx,[rax+rax*4]
   14000ccd4:	movsxd rax,DWORD PTR [r12+0x10]
   14000ccd9:	lea    rdi,[rax+rdx*4]
   14000ccdd:	add    rdi,QWORD PTR [r13+0x8]
   14000cce1:	xor    edx,edx
   14000cce3:	test   esi,esi
   14000cce5:	je     0x14000cd4e
   14000cce7:	xor    r8d,r8d
   14000ccea:	data16 xchg ax,ax
   14000cced:	data16 xchg ax,ax
   14000ccf0:	movsxd rcx,DWORD PTR [r12+0x10]
   14000ccf5:	add    rcx,QWORD PTR [r13+0x8]
   14000ccf9:	add    rcx,r8
   14000ccfc:	test   rdi,rdi
   14000ccff:	je     0x14000cd10
   14000cd01:	mov    eax,DWORD PTR [rdi+0x4]
   14000cd04:	cmp    DWORD PTR [rcx],eax
   14000cd06:	jle    0x14000cd28
   14000cd08:	mov    eax,DWORD PTR [rdi+0x8]
   14000cd0b:	cmp    DWORD PTR [rcx+0x4],eax
   14000cd0e:	jg     0x14000cd28
   14000cd10:	cmp    ebp,DWORD PTR [rcx]
   14000cd12:	jl     0x14000cd28
   14000cd14:	cmp    ebp,DWORD PTR [rcx+0x4]
   14000cd17:	jg     0x14000cd28
   14000cd19:	cmp    DWORD PTR [r9],0xffffffff
   14000cd1d:	jne    0x14000cd22
   14000cd1f:	mov    DWORD PTR [r9],edx
   14000cd22:	lea    eax,[rdx+0x1]
   14000cd25:	mov    DWORD PTR [r10],eax
   14000cd28:	add    edx,0x1
   14000cd2b:	add    r8,0x14
   14000cd2f:	cmp    edx,esi
   14000cd31:	jb     0x14000ccf0
   14000cd33:	mov    eax,DWORD PTR [r9]
   14000cd36:	cmp    eax,0xffffffff
   14000cd39:	je     0x14000cd4e
   14000cd3b:	lea    rcx,[rax+rax*4]
   14000cd3f:	movsxd rax,DWORD PTR [r12+0x10]
   14000cd44:	lea    rax,[rax+rcx*4]
   14000cd48:	add    rax,QWORD PTR [r13+0x8]
   14000cd4c:	jmp    0x14000cd5e
   14000cd4e:	mov    DWORD PTR [r9],0x0
   14000cd55:	xor    eax,eax
   14000cd57:	mov    DWORD PTR [r10],0x0
   14000cd5e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cd63:	mov    rbp,QWORD PTR [rsp+0x48]
   14000cd68:	mov    rsi,QWORD PTR [rsp+0x50]
   14000cd6d:	add    rsp,0x20
   14000cd71:	pop    r13
   14000cd73:	pop    r12
   14000cd75:	pop    rdi
   14000cd76:	ret    
   14000cd77:	int3   
   14000cd78:	int3   
   14000cd79:	int3   
   14000cd7a:	int3   
   14000cd7b:	int3   
   14000cd7c:	int3   
   14000cd7d:	int3   
   14000cd7e:	int3   
   14000cd7f:	int3   
   14000cd80:	rex push rbx
   14000cd82:	sub    rsp,0x20
   14000cd86:	mov    rbx,rcx
   14000cd89:	mov    QWORD PTR [rcx],rdx
   14000cd8c:	call   0x140006240
   14000cd91:	cmp    rbx,QWORD PTR [rax+0x120]
   14000cd98:	jae    0x14000cda8
   14000cd9a:	call   0x140006240
   14000cd9f:	mov    rcx,QWORD PTR [rax+0x120]
   14000cda6:	jmp    0x14000cdaa
   14000cda8:	xor    ecx,ecx
   14000cdaa:	mov    QWORD PTR [rbx+0x8],rcx
   14000cdae:	call   0x140006240
   14000cdb3:	mov    QWORD PTR [rax+0x120],rbx
   14000cdba:	mov    rax,rbx
   14000cdbd:	add    rsp,0x20
   14000cdc1:	pop    rbx
   14000cdc2:	ret    
   14000cdc3:	int3   
   14000cdc4:	int3   
   14000cdc5:	int3   
   14000cdc6:	int3   
   14000cdc7:	int3   
   14000cdc8:	int3   
   14000cdc9:	int3   
   14000cdca:	int3   
   14000cdcb:	int3   
   14000cdcc:	int3   
   14000cdcd:	int3   
   14000cdce:	int3   
   14000cdcf:	int3   
   14000cdd0:	rex push rbx
   14000cdd2:	sub    rsp,0x20
   14000cdd6:	mov    rbx,rcx
   14000cdd9:	call   0x140006240
   14000cdde:	mov    rdx,QWORD PTR [rax+0x120]
   14000cde5:	test   rdx,rdx
   14000cde8:	je     0x14000cdfe
   14000cdea:	data16 xchg ax,ax
   14000cded:	data16 xchg ax,ax
   14000cdf0:	cmp    QWORD PTR [rdx],rbx
   14000cdf3:	je     0x14000ce09
   14000cdf5:	mov    rdx,QWORD PTR [rdx+0x8]
   14000cdf9:	test   rdx,rdx
   14000cdfc:	jne    0x14000cdf0
   14000cdfe:	mov    eax,0x1
   14000ce03:	add    rsp,0x20
   14000ce07:	pop    rbx
   14000ce08:	ret    
   14000ce09:	xor    eax,eax
   14000ce0b:	add    rsp,0x20
   14000ce0f:	pop    rbx
   14000ce10:	ret    
   14000ce11:	int3   
   14000ce12:	int3   
   14000ce13:	int3   
   14000ce14:	int3   
   14000ce15:	int3   
   14000ce16:	int3   
   14000ce17:	int3   
   14000ce18:	int3   
   14000ce19:	int3   
   14000ce1a:	int3   
   14000ce1b:	int3   
   14000ce1c:	int3   
   14000ce1d:	int3   
   14000ce1e:	int3   
   14000ce1f:	int3   
   14000ce20:	mov    QWORD PTR [rsp+0x8],rbx
   14000ce25:	push   rdi
   14000ce26:	sub    rsp,0x20
   14000ce2a:	mov    rdi,rcx
   14000ce2d:	call   0x140006240
   14000ce32:	cmp    rdi,QWORD PTR [rax+0x120]
   14000ce39:	je     0x14000ce40
   14000ce3b:	call   0x1400088d0
   14000ce40:	call   0x140006240
   14000ce45:	mov    rbx,QWORD PTR [rax+0x120]
   14000ce4c:	test   rbx,rbx
   14000ce4f:	je     0x14000ce5f
   14000ce51:	cmp    rdi,rbx
   14000ce54:	je     0x14000ce6e
   14000ce56:	mov    rbx,QWORD PTR [rbx+0x8]
   14000ce5a:	test   rbx,rbx
   14000ce5d:	jne    0x14000ce51
   14000ce5f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ce64:	add    rsp,0x20
   14000ce68:	pop    rdi
   14000ce69:	jmp    0x1400088d0
   14000ce6e:	call   0x140006240
   14000ce73:	mov    rcx,QWORD PTR [rbx+0x8]
   14000ce77:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ce7c:	mov    QWORD PTR [rax+0x120],rcx
   14000ce83:	add    rsp,0x20
   14000ce87:	pop    rdi
   14000ce88:	ret    
   14000ce89:	int3   
   14000ce8a:	int3   
   14000ce8b:	int3   
   14000ce8c:	int3   
   14000ce8d:	int3   
   14000ce8e:	int3   
   14000ce8f:	int3   
   14000ce90:	mov    QWORD PTR [rsp+0x8],rbx
   14000ce95:	mov    QWORD PTR [rsp+0x10],rbp
   14000ce9a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ce9f:	push   rdi
   14000cea0:	sub    rsp,0x5a0
   14000cea7:	mov    rsi,rdx
   14000ceaa:	mov    rbp,rcx
   14000cead:	mov    rdi,r8
   14000ceb0:	lea    rcx,[rsp+0x30]
   14000ceb5:	lea    rdx,[rip+0x4414]        # 0x1400112d0
   14000cebc:	mov    r8d,0x98
   14000cec2:	mov    rbx,r9
   14000cec5:	call   0x1400043f0
   14000ceca:	mov    rax,QWORD PTR [rsp+0x5d0]
   14000ced2:	mov    rdx,QWORD PTR [rsp+0x5e8]
   14000ceda:	mov    rcx,QWORD PTR [rbp+0x0]
   14000cede:	mov    QWORD PTR [rsp+0x60],rax
   14000cee3:	movsxd rax,DWORD PTR [rsp+0x5d8]
   14000ceeb:	lea    r11,[rip+0x98e]        # 0x14000d880
   14000cef2:	lea    r8,[rsp+0x30]
   14000cef7:	mov    QWORD PTR [rsp+0x68],rax
   14000cefc:	mov    rax,QWORD PTR [rsp+0x5e0]
   14000cf04:	xor    r9d,r9d
   14000cf07:	mov    QWORD PTR [rsp+0x78],rax
   14000cf0c:	movzx  eax,BYTE PTR [rsp+0x5f0]
   14000cf14:	mov    QWORD PTR [rsp+0x50],r11
   14000cf19:	mov    QWORD PTR [rsp+0x88],rax
   14000cf21:	mov    rax,QWORD PTR [rdx+0x40]
   14000cf25:	mov    rdx,QWORD PTR [rdx]
   14000cf28:	mov    QWORD PTR [rsp+0x28],rax
   14000cf2d:	lea    rax,[rsp+0xd0]
   14000cf35:	mov    QWORD PTR [rsp+0x58],rbx
   14000cf3a:	mov    QWORD PTR [rsp+0x70],rdi
   14000cf3f:	mov    QWORD PTR [rsp+0x80],rsi
   14000cf47:	mov    QWORD PTR [rsp+0x90],0x19930520
   14000cf53:	mov    QWORD PTR [rsp+0x20],rax
   14000cf58:	call   0x14000c68c
   14000cf5d:	lea    r11,[rsp+0x5a0]
   14000cf65:	mov    rbx,QWORD PTR [r11+0x10]
   14000cf69:	mov    rbp,QWORD PTR [r11+0x18]
   14000cf6d:	mov    rsi,QWORD PTR [r11+0x20]
   14000cf71:	mov    rsp,r11
   14000cf74:	pop    rdi
   14000cf75:	ret    
   14000cf76:	int3   
   14000cf77:	int3   
   14000cf78:	int3   
   14000cf79:	int3   
   14000cf7a:	int3   
   14000cf7b:	int3   
   14000cf7c:	int3   
   14000cf7d:	int3   
   14000cf7e:	int3   
   14000cf7f:	int3   
   14000cf80:	mov    QWORD PTR [rsp+0x8],rbx
   14000cf85:	mov    QWORD PTR [rsp+0x10],rbp
   14000cf8a:	mov    QWORD PTR [rsp+0x18],rsi
   14000cf8f:	push   rdi
   14000cf90:	sub    rsp,0x20
   14000cf94:	test   rcx,rcx
   14000cf97:	mov    rsi,r8
   14000cf9a:	mov    rbp,rdx
   14000cf9d:	mov    rbx,rcx
   14000cfa0:	jne    0x14000cfa7
   14000cfa2:	call   0x1400088d0
   14000cfa7:	movsxd rax,DWORD PTR [rbx+0x18]
   14000cfab:	mov    edi,DWORD PTR [rbx+0x14]
   14000cfae:	add    rax,QWORD PTR [rbp+0x8]
   14000cfb2:	jne    0x14000cfb9
   14000cfb4:	call   0x1400088d0
   14000cfb9:	xor    ecx,ecx
   14000cfbb:	test   edi,edi
   14000cfbd:	je     0x14000cff8
   14000cfbf:	mov    r8,QWORD PTR [rbp+0x8]
   14000cfc3:	movsxd r9,DWORD PTR [rbx+0x18]
   14000cfc7:	lea    rdx,[r8+r9*1]
   14000cfcb:	xchg   ax,ax
   14000cfcd:	data16 xchg ax,ax
   14000cfd0:	movsxd rax,DWORD PTR [rdx]
   14000cfd3:	add    rax,r8
   14000cfd6:	cmp    rsi,rax
   14000cfd9:	jl     0x14000cfe6
   14000cfdb:	add    ecx,0x1
   14000cfde:	add    rdx,0x8
   14000cfe2:	cmp    ecx,edi
   14000cfe4:	jb     0x14000cfd0
   14000cfe6:	test   ecx,ecx
   14000cfe8:	je     0x14000cff8
   14000cfea:	lea    eax,[rcx-0x1]
   14000cfed:	lea    rdx,[r9+rax*8]
   14000cff1:	mov    eax,DWORD PTR [rdx+r8*1+0x4]
   14000cff6:	jmp    0x14000cffb
   14000cff8:	or     eax,0xffffffff
   14000cffb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d000:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d005:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d00a:	add    rsp,0x20
   14000d00e:	pop    rdi
   14000d00f:	ret    
   14000d010:	mov    QWORD PTR [rsp+0x8],rbx
   14000d015:	mov    QWORD PTR [rsp+0x10],rbp
   14000d01a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d01f:	push   rdi
   14000d020:	sub    rsp,0x20
   14000d024:	test   rcx,rcx
   14000d027:	mov    rbp,QWORD PTR [rdx]
   14000d02a:	mov    rsi,rdx
   14000d02d:	mov    rbx,rcx
   14000d030:	jne    0x14000d037
   14000d032:	call   0x1400088d0
   14000d037:	movsxd rax,DWORD PTR [rbx+0x18]
   14000d03b:	mov    edi,DWORD PTR [rbx+0x14]
   14000d03e:	add    rax,QWORD PTR [rsi+0x8]
   14000d042:	jne    0x14000d049
   14000d044:	call   0x1400088d0
   14000d049:	xor    ecx,ecx
   14000d04b:	test   edi,edi
   14000d04d:	je     0x14000d088
   14000d04f:	mov    r8,QWORD PTR [rsi+0x8]
   14000d053:	movsxd r9,DWORD PTR [rbx+0x18]
   14000d057:	lea    rdx,[r8+r9*1]
   14000d05b:	xchg   ax,ax
   14000d05d:	data16 xchg ax,ax
   14000d060:	movsxd rax,DWORD PTR [rdx]
   14000d063:	add    rax,r8
   14000d066:	cmp    rbp,rax
   14000d069:	jl     0x14000d076
   14000d06b:	add    ecx,0x1
   14000d06e:	add    rdx,0x8
   14000d072:	cmp    ecx,edi
   14000d074:	jb     0x14000d060
   14000d076:	test   ecx,ecx
   14000d078:	je     0x14000d088
   14000d07a:	lea    eax,[rcx-0x1]
   14000d07d:	lea    rcx,[r8+rax*8]
   14000d081:	mov    eax,DWORD PTR [rcx+r9*1+0x4]
   14000d086:	jmp    0x14000d08b
   14000d088:	or     eax,0xffffffff
   14000d08b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d090:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d095:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d09a:	add    rsp,0x20
   14000d09e:	pop    rdi
   14000d09f:	ret    
   14000d0a0:	mov    QWORD PTR [rsp+0x18],rbp
   14000d0a5:	push   rdi
   14000d0a6:	sub    rsp,0x20
   14000d0aa:	movsxd r9,DWORD PTR [r8+0x1c]
   14000d0ae:	mov    rax,QWORD PTR [rcx]
   14000d0b1:	mov    rdi,r8
   14000d0b4:	mov    eax,DWORD PTR [r9+rax*1]
   14000d0b8:	mov    rbp,rdx
   14000d0bb:	cmp    eax,0xfffffffe
   14000d0be:	jne    0x14000d127
   14000d0c0:	movsxd rax,DWORD PTR [r8+0x18]
   14000d0c4:	mov    QWORD PTR [rsp+0x30],rbx
   14000d0c9:	mov    ebx,DWORD PTR [r8+0x14]
   14000d0cd:	add    rax,QWORD PTR [rdx+0x8]
   14000d0d1:	mov    QWORD PTR [rsp+0x38],rsi
   14000d0d6:	mov    rsi,QWORD PTR [rdx]
   14000d0d9:	jne    0x14000d0e0
   14000d0db:	call   0x1400088d0
   14000d0e0:	xor    ecx,ecx
   14000d0e2:	test   ebx,ebx
   14000d0e4:	je     0x14000d11a
   14000d0e6:	mov    r8,QWORD PTR [rbp+0x8]
   14000d0ea:	movsxd r9,DWORD PTR [rdi+0x18]
   14000d0ee:	lea    rdx,[r8+r9*1]
   14000d0f2:	movsxd rax,DWORD PTR [rdx]
   14000d0f5:	add    rax,r8
   14000d0f8:	cmp    rsi,rax
   14000d0fb:	jl     0x14000d108
   14000d0fd:	add    ecx,0x1
   14000d100:	add    rdx,0x8
   14000d104:	cmp    ecx,ebx
   14000d106:	jb     0x14000d0f2
   14000d108:	test   ecx,ecx
   14000d10a:	je     0x14000d11a
   14000d10c:	lea    eax,[rcx-0x1]
   14000d10f:	lea    rdx,[r9+rax*8]
   14000d113:	mov    eax,DWORD PTR [rdx+r8*1+0x4]
   14000d118:	jmp    0x14000d11d
   14000d11a:	or     eax,0xffffffff
   14000d11d:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d122:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d127:	mov    rbp,QWORD PTR [rsp+0x40]
   14000d12c:	add    rsp,0x20
   14000d130:	pop    rdi
   14000d131:	ret    
   14000d132:	int3   
   14000d133:	int3   
   14000d134:	int3   
   14000d135:	int3   
   14000d136:	int3   
   14000d137:	int3   
   14000d138:	int3   
   14000d139:	int3   
   14000d13a:	int3   
   14000d13b:	int3   
   14000d13c:	int3   
   14000d13d:	int3   
   14000d13e:	int3   
   14000d13f:	int3   
   14000d140:	movsxd rdx,DWORD PTR [r8+0x1c]
   14000d144:	mov    rax,QWORD PTR [rcx]
   14000d147:	mov    DWORD PTR [rdx+rax*1],r9d
   14000d14b:	ret    
   14000d14c:	int3   
   14000d14d:	int3   
   14000d14e:	int3   
   14000d14f:	int3   
   14000d150:	mov    QWORD PTR [rsp+0x8],rbx
   14000d155:	push   rdi
   14000d156:	sub    rsp,0x20
   14000d15a:	mov    edi,r9d
   14000d15d:	lea    r9,[rsp+0x40]
   14000d162:	mov    rbx,r8
   14000d165:	call   0x14000c770
   14000d16a:	mov    rcx,QWORD PTR [rax]
   14000d16d:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000d171:	mov    QWORD PTR [rsp+0x40],rcx
   14000d176:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14000d17a:	jle    0x14000d180
   14000d17c:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14000d180:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d185:	add    rsp,0x20
   14000d189:	pop    rdi
   14000d18a:	ret    
   14000d18b:	int3   
   14000d18c:	int3   
   14000d18d:	int3   
   14000d18e:	int3   
   14000d18f:	int3   
   14000d190:	rex push rbx
   14000d192:	sub    rsp,0x20
   14000d196:	lea    r9,[rsp+0x40]
   14000d19b:	mov    rbx,r8
   14000d19e:	call   0x14000c770
   14000d1a3:	mov    rcx,QWORD PTR [rax]
   14000d1a6:	movsxd rax,DWORD PTR [rbx+0x1c]
   14000d1aa:	mov    QWORD PTR [rsp+0x40],rcx
   14000d1af:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14000d1b3:	add    rsp,0x20
   14000d1b7:	pop    rbx
   14000d1b8:	ret    
   14000d1b9:	int3   
   14000d1ba:	int3   
   14000d1bb:	int3   
   14000d1bc:	int3   
   14000d1bd:	int3   
   14000d1be:	int3   
   14000d1bf:	int3   
   14000d1c0:	lea    rax,[rip+0x41b1]        # 0x140011378
   14000d1c7:	mov    QWORD PTR [rcx],rax
   14000d1ca:	jmp    0x14000eac0
   14000d1cf:	int3   
   14000d1d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d1d5:	push   rdi
   14000d1d6:	sub    rsp,0x20
   14000d1da:	lea    rax,[rip+0x4197]        # 0x140011378
   14000d1e1:	mov    ebx,edx
   14000d1e3:	mov    rdi,rcx
   14000d1e6:	mov    QWORD PTR [rcx],rax
   14000d1e9:	call   0x14000eac0
   14000d1ee:	test   bl,0x1
   14000d1f1:	je     0x14000d1fb
   14000d1f3:	mov    rcx,rdi
   14000d1f6:	call   0x140001fa0
   14000d1fb:	mov    rax,rdi
   14000d1fe:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d203:	add    rsp,0x20
   14000d207:	pop    rdi
   14000d208:	ret    
   14000d209:	int3   
   14000d20a:	int3   
   14000d20b:	int3   
   14000d20c:	int3   
   14000d20d:	int3   
   14000d20e:	int3   
   14000d20f:	int3   
   14000d210:	sub    rsp,0x28
   14000d214:	mov    rax,QWORD PTR [rcx]
   14000d217:	mov    ecx,DWORD PTR [rax]
   14000d219:	cmp    ecx,0xe0434f4d
   14000d21f:	je     0x14000d23e
   14000d221:	cmp    ecx,0xe06d7363
   14000d227:	jne    0x14000d258
   14000d229:	call   0x140006240
   14000d22e:	mov    DWORD PTR [rax+0x100],0x0
   14000d238:	call   0x1400088a0
   14000d23d:	int3   
   14000d23e:	call   0x140006240
   14000d243:	cmp    DWORD PTR [rax+0x100],0x0
   14000d24a:	jle    0x14000d258
   14000d24c:	call   0x140006240
   14000d251:	add    DWORD PTR [rax+0x100],0xffffffff
   14000d258:	xor    eax,eax
   14000d25a:	add    rsp,0x28
   14000d25e:	ret    
   14000d25f:	int3   
   14000d260:	mov    DWORD PTR [rsp+0x20],r9d
   14000d265:	mov    QWORD PTR [rsp+0x18],r8
   14000d26a:	mov    QWORD PTR [rsp+0x10],rdx
   14000d26f:	mov    QWORD PTR [rsp+0x8],rcx
   14000d274:	push   rbx
   14000d275:	push   rsi
   14000d276:	push   rdi
   14000d277:	push   r12
   14000d279:	push   r13
   14000d27b:	push   r14
   14000d27d:	push   r15
   14000d27f:	sub    rsp,0x30
   14000d283:	mov    r13d,r9d
   14000d286:	mov    rsi,r8
   14000d289:	mov    rbx,rdx
   14000d28c:	mov    r14,rcx
   14000d28f:	call   0x14000d0a0
   14000d294:	mov    edi,eax
   14000d296:	call   0x14000c880
   14000d29b:	mov    r15,rax
   14000d29e:	mov    QWORD PTR [rsp+0x28],rax
   14000d2a3:	call   0x140006240
   14000d2a8:	add    DWORD PTR [rax+0x100],0x1
   14000d2af:	nop
   14000d2b0:	cmp    edi,0xffffffff
   14000d2b3:	je     0x14000d3a8
   14000d2b9:	cmp    edi,r13d
   14000d2bc:	jle    0x14000d3a8
   14000d2c2:	cmp    edi,0xffffffff
   14000d2c5:	jle    0x14000d2cc
   14000d2c7:	cmp    edi,DWORD PTR [rsi+0x4]
   14000d2ca:	jl     0x14000d2d1
   14000d2cc:	call   0x1400088d0
   14000d2d1:	movsxd r12,edi
   14000d2d4:	call   0x14000c880
   14000d2d9:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000d2dd:	lea    rax,[rax+r12*8]
   14000d2e1:	mov    edi,DWORD PTR [rcx+rax*1]
   14000d2e4:	mov    DWORD PTR [rsp+0x20],edi
   14000d2e8:	call   0x14000c880
   14000d2ed:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000d2f1:	lea    rax,[rax+r12*8]
   14000d2f5:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000d2fa:	je     0x14000d37a
   14000d2fc:	call   0x14000c880
   14000d301:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000d305:	lea    rax,[rax+r12*8]
   14000d309:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000d30e:	call   0x14000c880
   14000d313:	lea    rcx,[rax+rbx*1]
   14000d317:	test   rcx,rcx
   14000d31a:	je     0x14000d37a
   14000d31c:	mov    r9d,edi
   14000d31f:	mov    r8,rsi
   14000d322:	mov    rdx,QWORD PTR [rsp+0x78]
   14000d327:	mov    rcx,r14
   14000d32a:	call   0x14000d140
   14000d32f:	call   0x14000c880
   14000d334:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000d338:	lea    rax,[rax+r12*8]
   14000d33c:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000d341:	je     0x14000d35f
   14000d343:	call   0x14000c880
   14000d348:	movsxd rcx,DWORD PTR [rsi+0x8]
   14000d34c:	lea    rax,[rax+r12*8]
   14000d350:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000d355:	call   0x14000c880
   14000d35a:	add    rax,rbx
   14000d35d:	jmp    0x14000d361
   14000d35f:	xor    eax,eax
   14000d361:	mov    r8d,0x103
   14000d367:	mov    rdx,r14
   14000d36a:	mov    rcx,rax
   14000d36d:	call   0x14000ec00
   14000d372:	mov    rcx,r15
   14000d375:	call   0x14000c8c0
   14000d37a:	jmp    0x14000d39a
   14000d37c:	mov    r13d,DWORD PTR [rsp+0x88]
   14000d384:	mov    rsi,QWORD PTR [rsp+0x80]
   14000d38c:	mov    r14,QWORD PTR [rsp+0x70]
   14000d391:	mov    r15,QWORD PTR [rsp+0x28]
   14000d396:	mov    edi,DWORD PTR [rsp+0x20]
   14000d39a:	mov    DWORD PTR [rsp+0x24],edi
   14000d39e:	mov    rbx,QWORD PTR [rsp+0x78]
   14000d3a3:	jmp    0x14000d2b0
   14000d3a8:	call   0x140006240
   14000d3ad:	cmp    DWORD PTR [rax+0x100],0x0
   14000d3b4:	jle    0x14000d3c2
   14000d3b6:	call   0x140006240
   14000d3bb:	add    DWORD PTR [rax+0x100],0xffffffff
   14000d3c2:	cmp    edi,0xffffffff
   14000d3c5:	je     0x14000d3d1
   14000d3c7:	cmp    edi,r13d
   14000d3ca:	jle    0x14000d3d1
   14000d3cc:	call   0x1400088d0
   14000d3d1:	mov    r9d,edi
   14000d3d4:	mov    r8,rsi
   14000d3d7:	mov    rdx,rbx
   14000d3da:	mov    rcx,r14
   14000d3dd:	call   0x14000d140
   14000d3e2:	add    rsp,0x30
   14000d3e6:	pop    r15
   14000d3e8:	pop    r14
   14000d3ea:	pop    r13
   14000d3ec:	pop    r12
   14000d3ee:	pop    rdi
   14000d3ef:	pop    rsi
   14000d3f0:	pop    rbx
   14000d3f1:	ret    
   14000d3f2:	int3   
   14000d3f3:	int3   
   14000d3f4:	int3   
   14000d3f5:	int3   
   14000d3f6:	int3   
   14000d3f7:	int3   
   14000d3f8:	int3   
   14000d3f9:	int3   
   14000d3fa:	int3   
   14000d3fb:	int3   
   14000d3fc:	int3   
   14000d3fd:	int3   
   14000d3fe:	int3   
   14000d3ff:	int3   
   14000d400:	rex push rbp
   14000d402:	sub    rsp,0x20
   14000d406:	mov    rbp,rdx
   14000d409:	call   0x14000d210
   14000d40e:	add    rsp,0x20
   14000d412:	pop    rbp
   14000d413:	ret    
   14000d414:	int3   
   14000d415:	int3   
   14000d416:	int3   
   14000d417:	int3   
   14000d418:	int3   
   14000d419:	int3   
   14000d41a:	int3   
   14000d41b:	int3   
   14000d41c:	int3   
   14000d41d:	int3   
   14000d41e:	int3   
   14000d41f:	int3   
   14000d420:	rex push rbp
   14000d422:	sub    rsp,0x20
   14000d426:	mov    rbp,rdx
   14000d429:	call   0x140006240
   14000d42e:	cmp    DWORD PTR [rax+0x100],0x0
   14000d435:	jle    0x14000d443
   14000d437:	call   0x140006240
   14000d43c:	add    DWORD PTR [rax+0x100],0xffffffff
   14000d443:	add    rsp,0x20
   14000d447:	pop    rbp
   14000d448:	ret    
   14000d449:	int3   
   14000d44a:	int3   
   14000d44b:	int3   
   14000d44c:	int3   
   14000d44d:	int3   
   14000d44e:	int3   
   14000d44f:	int3   
   14000d450:	rex push rbx
   14000d452:	sub    rsp,0x20
   14000d456:	mov    r9,QWORD PTR [rcx]
   14000d459:	mov    DWORD PTR [r8],0x0
   14000d460:	mov    rbx,r8
   14000d463:	cmp    DWORD PTR [r9],0xe06d7363
   14000d46a:	jne    0x14000d4f4
   14000d470:	cmp    DWORD PTR [r9+0x18],0x4
   14000d475:	jne    0x14000d4a1
   14000d477:	mov    eax,DWORD PTR [r9+0x20]
   14000d47b:	cmp    eax,0x19930520
   14000d480:	je     0x14000d490
   14000d482:	cmp    eax,0x19930521
   14000d487:	je     0x14000d490
   14000d489:	cmp    eax,0x19930522
   14000d48e:	jne    0x14000d4a1
   14000d490:	mov    rax,QWORD PTR [rdx+0x28]
   14000d494:	cmp    QWORD PTR [r9+0x28],rax
   14000d498:	jne    0x14000d4a1
   14000d49a:	mov    DWORD PTR [r8],0x1
   14000d4a1:	cmp    DWORD PTR [r9],0xe06d7363
   14000d4a8:	jne    0x14000d4f4
   14000d4aa:	cmp    DWORD PTR [r9+0x18],0x4
   14000d4af:	jne    0x14000d4f4
   14000d4b1:	mov    ecx,DWORD PTR [r9+0x20]
   14000d4b5:	cmp    ecx,0x19930520
   14000d4bb:	je     0x14000d4cd
   14000d4bd:	cmp    ecx,0x19930521
   14000d4c3:	je     0x14000d4cd
   14000d4c5:	cmp    ecx,0x19930522
   14000d4cb:	jne    0x14000d4f4
   14000d4cd:	cmp    QWORD PTR [r9+0x30],0x0
   14000d4d2:	jne    0x14000d4f4
   14000d4d4:	call   0x140006240
   14000d4d9:	mov    DWORD PTR [rax+0x2d0],0x1
   14000d4e3:	mov    DWORD PTR [rbx],0x1
   14000d4e9:	mov    eax,0x1
   14000d4ee:	add    rsp,0x20
   14000d4f2:	pop    rbx
   14000d4f3:	ret    
   14000d4f4:	xor    eax,eax
   14000d4f6:	add    rsp,0x20
   14000d4fa:	pop    rbx
   14000d4fb:	ret    
   14000d4fc:	int3   
   14000d4fd:	int3   
   14000d4fe:	int3   
   14000d4ff:	int3   
   14000d500:	test   rcx,rcx
   14000d503:	je     0x14000d542
   14000d505:	mov    BYTE PTR [rsp+0x10],dl
   14000d509:	sub    rsp,0x28
   14000d50d:	cmp    DWORD PTR [rcx],0xe06d7363
   14000d513:	jne    0x14000d53e
   14000d515:	mov    rax,QWORD PTR [rcx+0x30]
   14000d519:	test   rax,rax
   14000d51c:	je     0x14000d53e
   14000d51e:	movsxd rdx,DWORD PTR [rax+0x4]
   14000d522:	test   edx,edx
   14000d524:	je     0x14000d53e
   14000d526:	mov    rax,rdx
   14000d529:	mov    rdx,QWORD PTR [rcx+0x38]
   14000d52d:	add    rdx,rax
   14000d530:	mov    rcx,QWORD PTR [rcx+0x28]
   14000d534:	call   rdx
   14000d536:	jmp    0x14000d53e
   14000d538:	call   0x1400088a0
   14000d53d:	nop
   14000d53e:	add    rsp,0x28
   14000d542:	ret    0x0
   14000d545:	int3   
   14000d546:	int3   
   14000d547:	int3   
   14000d548:	int3   
   14000d549:	int3   
   14000d54a:	int3   
   14000d54b:	int3   
   14000d54c:	int3   
   14000d54d:	int3   
   14000d54e:	int3   
   14000d54f:	int3   
   14000d550:	rex push rbp
   14000d552:	sub    rsp,0x20
   14000d556:	mov    rbp,rdx
   14000d559:	xor    eax,eax
   14000d55b:	cmp    BYTE PTR [rbp+0x38],al
   14000d55e:	setne  al
   14000d561:	add    rsp,0x20
   14000d565:	pop    rbp
   14000d566:	ret    
   14000d567:	int3   
   14000d568:	int3   
   14000d569:	int3   
   14000d56a:	int3   
   14000d56b:	int3   
   14000d56c:	int3   
   14000d56d:	int3   
   14000d56e:	int3   
   14000d56f:	int3   
   14000d570:	movsxd rax,DWORD PTR [rdx]
   14000d573:	add    rax,rcx
   14000d576:	cmp    DWORD PTR [rdx+0x4],0x0
   14000d57a:	jl     0x14000d592
   14000d57c:	movsxd r9,DWORD PTR [rdx+0x4]
   14000d580:	movsxd rdx,DWORD PTR [rdx+0x8]
   14000d584:	mov    rcx,QWORD PTR [r9+rcx*1]
   14000d588:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14000d58c:	add    r8,r9
   14000d58f:	add    rax,r8
   14000d592:	ret    0x0
   14000d595:	int3   
   14000d596:	int3   
   14000d597:	int3   
   14000d598:	int3   
   14000d599:	int3   
   14000d59a:	int3   
   14000d59b:	int3   
   14000d59c:	int3   
   14000d59d:	int3   
   14000d59e:	int3   
   14000d59f:	int3   
   14000d5a0:	mov    QWORD PTR [rsp+0x10],rdx
   14000d5a5:	mov    QWORD PTR [rsp+0x8],rcx
   14000d5aa:	push   rbx
   14000d5ab:	push   rdi
   14000d5ac:	sub    rsp,0x48
   14000d5b0:	test   rdx,rdx
   14000d5b3:	mov    rbx,rdx
   14000d5b6:	mov    rdi,rcx
   14000d5b9:	jne    0x14000d5c6
   14000d5bb:	call   0x1400088d0
   14000d5c0:	call   0x1400088a0
   14000d5c5:	int3   
   14000d5c6:	mov    QWORD PTR [rsp+0x78],rbp
   14000d5cb:	xor    bpl,bpl
   14000d5ce:	mov    QWORD PTR [rsp+0x28],r14
   14000d5d3:	xor    r14d,r14d
   14000d5d6:	mov    BYTE PTR [rsp+0x70],bpl
   14000d5db:	cmp    DWORD PTR [rdx],r14d
   14000d5de:	jle    0x14000d7d0
   14000d5e4:	mov    QWORD PTR [rsp+0x40],rsi
   14000d5e9:	mov    QWORD PTR [rsp+0x38],r12
   14000d5ee:	mov    QWORD PTR [rsp+0x30],r13
   14000d5f3:	mov    QWORD PTR [rsp+0x20],r15
   14000d5f8:	xor    r15d,r15d
   14000d5fb:	xchg   ax,ax
   14000d5fd:	data16 xchg ax,ax
   14000d600:	call   0x14000c8a0
   14000d605:	mov    r11,rax
   14000d608:	mov    rax,QWORD PTR [rdi+0x30]
   14000d60c:	movsxd rcx,DWORD PTR [rax+0xc]
   14000d610:	lea    r12,[r11+rcx*1+0x4]
   14000d615:	call   0x14000c8a0
   14000d61a:	mov    r11,rax
   14000d61d:	mov    rax,QWORD PTR [rdi+0x30]
   14000d621:	movsxd rcx,DWORD PTR [rax+0xc]
   14000d625:	mov    esi,DWORD PTR [r11+rcx*1]
   14000d629:	test   esi,esi
   14000d62b:	jle    0x14000d7ab
   14000d631:	call   0x14000c8a0
   14000d636:	mov    r13,QWORD PTR [rdi+0x30]
   14000d63a:	mov    rbp,rax
   14000d63d:	movsxd rax,DWORD PTR [r12]
   14000d641:	add    rbp,rax
   14000d644:	call   0x14000c880
   14000d649:	movsxd rdi,DWORD PTR [rbx+0x4]
   14000d64d:	add    rax,r15
   14000d650:	add    rdi,rax
   14000d653:	cmp    DWORD PTR [rdi+0x4],0x0
   14000d657:	je     0x14000d78d
   14000d65d:	movsxd rbx,DWORD PTR [rdi+0x4]
   14000d661:	call   0x14000c880
   14000d666:	mov    r11,rax
   14000d669:	add    r11,rbx
   14000d66c:	je     0x14000d760
   14000d672:	test   ebx,ebx
   14000d674:	je     0x14000d685
   14000d676:	movsxd rbx,DWORD PTR [rdi+0x4]
   14000d67a:	call   0x14000c880
   14000d67f:	lea    r11,[rbx+rax*1]
   14000d683:	jmp    0x14000d688
   14000d685:	xor    r11d,r11d
   14000d688:	cmp    BYTE PTR [r11+0x10],0x0
   14000d68d:	je     0x14000d74c
   14000d693:	test   ebx,ebx
   14000d695:	je     0x14000d6a8
   14000d697:	call   0x14000c880
   14000d69c:	mov    rbx,rax
   14000d69f:	movsxd rax,DWORD PTR [rdi+0x4]
   14000d6a3:	add    rbx,rax
   14000d6a6:	jmp    0x14000d6aa
   14000d6a8:	xor    ebx,ebx
   14000d6aa:	call   0x14000c8a0
   14000d6af:	mov    r11,rax
   14000d6b2:	movsxd rax,DWORD PTR [rbp+0x4]
   14000d6b6:	add    r11,rax
   14000d6b9:	cmp    rbx,r11
   14000d6bc:	je     0x14000d708
   14000d6be:	cmp    DWORD PTR [rdi+0x4],0x0
   14000d6c2:	je     0x14000d6d5
   14000d6c4:	call   0x14000c880
   14000d6c9:	mov    rbx,rax
   14000d6cc:	movsxd rax,DWORD PTR [rdi+0x4]
   14000d6d0:	add    rbx,rax
   14000d6d3:	jmp    0x14000d6d7
   14000d6d5:	xor    ebx,ebx
   14000d6d7:	call   0x14000c8a0
   14000d6dc:	mov    r11,rax
   14000d6df:	movsxd rax,DWORD PTR [rbp+0x4]
   14000d6e3:	lea    r8,[r11+rax*1+0x10]
   14000d6e8:	lea    rax,[rbx+0x10]
   14000d6ec:	sub    r8,rax
   14000d6ef:	nop
   14000d6f0:	movzx  edx,BYTE PTR [rax]
   14000d6f3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000d6f8:	sub    edx,ecx
   14000d6fa:	jne    0x14000d704
   14000d6fc:	add    rax,0x1
   14000d700:	test   ecx,ecx
   14000d702:	jne    0x14000d6f0
   14000d704:	test   edx,edx
   14000d706:	jne    0x14000d732
   14000d708:	test   BYTE PTR [rbp+0x0],0x2
   14000d70c:	je     0x14000d713
   14000d70e:	test   BYTE PTR [rdi],0x8
   14000d711:	je     0x14000d732
   14000d713:	mov    eax,DWORD PTR [r13+0x0]
   14000d717:	test   al,0x1
   14000d719:	je     0x14000d720
   14000d71b:	test   BYTE PTR [rdi],0x1
   14000d71e:	je     0x14000d732
   14000d720:	test   al,0x4
   14000d722:	je     0x14000d729
   14000d724:	test   BYTE PTR [rdi],0x4
   14000d727:	je     0x14000d732
   14000d729:	test   al,0x2
   14000d72b:	je     0x14000d788
   14000d72d:	test   BYTE PTR [rdi],0x2
   14000d730:	jne    0x14000d774
   14000d732:	sub    esi,0x1
   14000d735:	add    r12,0x4
   14000d739:	test   esi,esi
   14000d73b:	jle    0x14000d79c
   14000d73d:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d742:	mov    rdi,QWORD PTR [rsp+0x60]
   14000d747:	jmp    0x14000d631
   14000d74c:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d751:	mov    rdi,QWORD PTR [rsp+0x60]
   14000d756:	mov    bpl,0x1
   14000d759:	mov    BYTE PTR [rsp+0x70],bpl
   14000d75e:	jmp    0x14000d7ab
   14000d760:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d765:	mov    rdi,QWORD PTR [rsp+0x60]
   14000d76a:	mov    bpl,0x1
   14000d76d:	mov    BYTE PTR [rsp+0x70],bpl
   14000d772:	jmp    0x14000d7ab
   14000d774:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d779:	mov    rdi,QWORD PTR [rsp+0x60]
   14000d77e:	mov    bpl,0x1
   14000d781:	mov    BYTE PTR [rsp+0x70],bpl
   14000d786:	jmp    0x14000d7ab
   14000d788:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d78d:	mov    rdi,QWORD PTR [rsp+0x60]
   14000d792:	mov    bpl,0x1
   14000d795:	mov    BYTE PTR [rsp+0x70],bpl
   14000d79a:	jmp    0x14000d7ab
   14000d79c:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d7a1:	mov    rdi,QWORD PTR [rsp+0x60]
   14000d7a6:	movzx  ebp,BYTE PTR [rsp+0x70]
   14000d7ab:	add    r14d,0x1
   14000d7af:	add    r15,0x14
   14000d7b3:	cmp    r14d,DWORD PTR [rbx]
   14000d7b6:	jl     0x14000d600
   14000d7bc:	mov    r15,QWORD PTR [rsp+0x20]
   14000d7c1:	mov    r13,QWORD PTR [rsp+0x30]
   14000d7c6:	mov    r12,QWORD PTR [rsp+0x38]
   14000d7cb:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d7d0:	mov    r14,QWORD PTR [rsp+0x28]
   14000d7d5:	mov    al,bpl
   14000d7d8:	mov    rbp,QWORD PTR [rsp+0x78]
   14000d7dd:	add    rsp,0x48
   14000d7e1:	pop    rdi
   14000d7e2:	pop    rbx
   14000d7e3:	ret    
   14000d7e4:	int3   
   14000d7e5:	int3   
   14000d7e6:	int3   
   14000d7e7:	int3   
   14000d7e8:	int3   
   14000d7e9:	int3   
   14000d7ea:	int3   
   14000d7eb:	int3   
   14000d7ec:	int3   
   14000d7ed:	int3   
   14000d7ee:	int3   
   14000d7ef:	int3   
   14000d7f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d7f5:	mov    QWORD PTR [rsp+0x10],rbp
   14000d7fa:	mov    QWORD PTR [rsp+0x18],rsi
   14000d7ff:	push   rdi
   14000d800:	sub    rsp,0x20
   14000d804:	xor    edi,edi
   14000d806:	mov    rbp,rcx
   14000d809:	cmp    DWORD PTR [rcx],edi
   14000d80b:	jle    0x14000d85f
   14000d80d:	xor    esi,esi
   14000d80f:	nop
   14000d810:	call   0x14000c880
   14000d815:	movsxd rcx,DWORD PTR [rbp+0x4]
   14000d819:	add    rax,rsi
   14000d81c:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14000d821:	je     0x14000d83e
   14000d823:	call   0x14000c880
   14000d828:	movsxd rcx,DWORD PTR [rbp+0x4]
   14000d82c:	add    rax,rsi
   14000d82f:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14000d834:	call   0x14000c880
   14000d839:	add    rax,rbx
   14000d83c:	jmp    0x14000d840
   14000d83e:	xor    eax,eax
   14000d840:	lea    rdx,[rip+0x7ce9]        # 0x140015530
   14000d847:	mov    rcx,rax
   14000d84a:	call   0x140002110
   14000d84f:	test   al,al
   14000d851:	jne    0x14000d876
   14000d853:	add    edi,0x1
   14000d856:	add    rsi,0x14
   14000d85a:	cmp    edi,DWORD PTR [rbp+0x0]
   14000d85d:	jl     0x14000d810
   14000d85f:	xor    al,al
   14000d861:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d866:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d86b:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d870:	add    rsp,0x20
   14000d874:	pop    rdi
   14000d875:	ret    
   14000d876:	mov    al,0x1
   14000d878:	jmp    0x14000d861
   14000d87a:	int3   
   14000d87b:	int3   
   14000d87c:	int3   
   14000d87d:	int3   
   14000d87e:	int3   
   14000d87f:	int3   
   14000d880:	rex push rbx
   14000d882:	push   rsi
   14000d883:	push   rdi
   14000d884:	push   r12
   14000d886:	push   r13
   14000d888:	push   r14
   14000d88a:	push   r15
   14000d88c:	sub    rsp,0x70
   14000d890:	mov    rdi,rcx
   14000d893:	xor    r12d,r12d
   14000d896:	mov    DWORD PTR [rsp+0x20],r12d
   14000d89b:	mov    DWORD PTR [rsp+0xb0],r12d
   14000d8a3:	mov    QWORD PTR [rsp+0x40],r12
   14000d8a8:	mov    QWORD PTR [rsp+0xc8],r12
   14000d8b0:	call   0x140006240
   14000d8b5:	mov    r15,QWORD PTR [rax+0xf8]
   14000d8bc:	mov    QWORD PTR [rsp+0x28],r15
   14000d8c1:	call   0x140006240
   14000d8c6:	mov    rax,QWORD PTR [rax+0xf0]
   14000d8cd:	mov    QWORD PTR [rsp+0xc0],rax
   14000d8d5:	mov    rsi,QWORD PTR [rdi+0x50]
   14000d8d9:	mov    QWORD PTR [rsp+0xb8],rsi
   14000d8e1:	mov    rax,QWORD PTR [rdi+0x48]
   14000d8e5:	mov    QWORD PTR [rsp+0x38],rax
   14000d8ea:	mov    rbx,QWORD PTR [rdi+0x40]
   14000d8ee:	mov    rax,QWORD PTR [rdi+0x30]
   14000d8f2:	mov    QWORD PTR [rsp+0x48],rax
   14000d8f7:	mov    r13,QWORD PTR [rdi+0x28]
   14000d8fb:	mov    QWORD PTR [rsp+0x50],r13
   14000d900:	call   0x140006240
   14000d905:	mov    QWORD PTR [rax+0xf0],rsi
   14000d90c:	call   0x140006240
   14000d911:	mov    QWORD PTR [rax+0xf8],rbx
   14000d918:	call   0x140006240
   14000d91d:	mov    rdx,QWORD PTR [rax+0xf0]
   14000d924:	mov    rdx,QWORD PTR [rdx+0x28]
   14000d928:	lea    rcx,[rsp+0x60]
   14000d92d:	call   0x14000cd80
   14000d932:	mov    r14,rax
   14000d935:	mov    QWORD PTR [rsp+0x30],rax
   14000d93a:	cmp    QWORD PTR [rdi+0x58],r12
   14000d93e:	je     0x14000d96b
   14000d940:	mov    DWORD PTR [rsp+0xb0],0x1
   14000d94b:	call   0x140006240
   14000d950:	mov    rbx,QWORD PTR [rax+0x138]
   14000d957:	mov    QWORD PTR [rsp+0xc8],rbx
   14000d95f:	call   0x140006240
   14000d964:	mov    QWORD PTR [rax+0xf0],rbx
   14000d96b:	mov    r8d,0x100
   14000d971:	mov    rdx,r13
   14000d974:	mov    rcx,QWORD PTR [rsp+0x48]
   14000d979:	call   0x14000ec00
   14000d97e:	mov    rbx,rax
   14000d981:	mov    QWORD PTR [rsp+0x40],rax
   14000d986:	mov    rdi,QWORD PTR [rsp+0xc0]
   14000d98e:	jmp    0x14000da21
   14000d993:	mov    DWORD PTR [rsp+0x20],0x1
   14000d99b:	call   0x140006240
   14000d9a0:	xor    r12d,r12d
   14000d9a3:	mov    DWORD PTR [rax+0x2d0],r12d
   14000d9aa:	cmp    DWORD PTR [rsp+0xb0],r12d
   14000d9b2:	je     0x14000d9e5
   14000d9b4:	mov    dl,0x1
   14000d9b6:	mov    rsi,QWORD PTR [rsp+0xb8]
   14000d9be:	mov    rcx,rsi
   14000d9c1:	call   0x14000d500
   14000d9c6:	mov    r11,QWORD PTR [rsp+0xc8]
   14000d9ce:	lea    r9,[r11+0x20]
   14000d9d2:	mov    r8d,DWORD PTR [r11+0x18]
   14000d9d6:	mov    edx,DWORD PTR [r11+0x4]
   14000d9da:	mov    ecx,DWORD PTR [r11]
   14000d9dd:	call   QWORD PTR [rip+0x1695]        # 0x14000f078
   14000d9e3:	jmp    0x14000da00
   14000d9e5:	mov    rsi,QWORD PTR [rsp+0xb8]
   14000d9ed:	lea    r9,[rsi+0x20]
   14000d9f1:	mov    r8d,DWORD PTR [rsi+0x18]
   14000d9f5:	mov    edx,DWORD PTR [rsi+0x4]
   14000d9f8:	mov    ecx,DWORD PTR [rsi]
   14000d9fa:	call   QWORD PTR [rip+0x1678]        # 0x14000f078
   14000da00:	mov    r12d,DWORD PTR [rsp+0x20]
   14000da05:	mov    rbx,QWORD PTR [rsp+0x40]
   14000da0a:	mov    r15,QWORD PTR [rsp+0x28]
   14000da0f:	mov    rdi,QWORD PTR [rsp+0xc0]
   14000da17:	mov    r13,QWORD PTR [rsp+0x50]
   14000da1c:	mov    r14,QWORD PTR [rsp+0x30]
   14000da21:	mov    rcx,r14
   14000da24:	call   0x14000ce20
   14000da29:	test   r12d,r12d
   14000da2c:	jne    0x14000da6b
   14000da2e:	cmp    DWORD PTR [rsi],0xe06d7363
   14000da34:	jne    0x14000da6b
   14000da36:	cmp    DWORD PTR [rsi+0x18],0x4
   14000da3a:	jne    0x14000da6b
   14000da3c:	mov    eax,DWORD PTR [rsi+0x20]
   14000da3f:	cmp    eax,0x19930520
   14000da44:	je     0x14000da54
   14000da46:	cmp    eax,0x19930521
   14000da4b:	je     0x14000da54
   14000da4d:	cmp    eax,0x19930522
   14000da52:	jne    0x14000da6b
   14000da54:	mov    rcx,QWORD PTR [rsi+0x28]
   14000da58:	call   0x14000cdd0
   14000da5d:	test   eax,eax
   14000da5f:	je     0x14000da6b
   14000da61:	mov    dl,0x1
   14000da63:	mov    rcx,rsi
   14000da66:	call   0x14000d500
   14000da6b:	call   0x140006240
   14000da70:	mov    QWORD PTR [rax+0xf0],rdi
   14000da77:	call   0x140006240
   14000da7c:	mov    QWORD PTR [rax+0xf8],r15
   14000da83:	mov    rax,QWORD PTR [rsp+0x38]
   14000da88:	movsxd rcx,DWORD PTR [rax+0x1c]
   14000da8c:	mov    rax,QWORD PTR [r13+0x0]
   14000da90:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14000da98:	mov    rax,rbx
   14000da9b:	add    rsp,0x70
   14000da9f:	pop    r15
   14000daa1:	pop    r14
   14000daa3:	pop    r13
   14000daa5:	pop    r12
   14000daa7:	pop    rdi
   14000daa8:	pop    rsi
   14000daa9:	pop    rbx
   14000daaa:	ret    
   14000daab:	int3   
   14000daac:	int3   
   14000daad:	int3   
   14000daae:	int3   
   14000daaf:	int3   
   14000dab0:	rex push rbp
   14000dab2:	sub    rsp,0x20
   14000dab6:	mov    rbp,rdx
   14000dab9:	mov    QWORD PTR [rbp+0x58],rcx
   14000dabd:	lea    r8,[rbp+0x20]
   14000dac1:	mov    rdx,QWORD PTR [rbp+0xb8]
   14000dac8:	call   0x14000d450
   14000dacd:	add    rsp,0x20
   14000dad1:	pop    rbp
   14000dad2:	ret    
   14000dad3:	int3   
   14000dad4:	int3   
   14000dad5:	int3   
   14000dad6:	int3   
   14000dad7:	int3   
   14000dad8:	int3   
   14000dad9:	int3   
   14000dada:	int3   
   14000dadb:	int3   
   14000dadc:	int3   
   14000dadd:	int3   
   14000dade:	int3   
   14000dadf:	int3   
   14000dae0:	rex push rbx
   14000dae2:	push   rbp
   14000dae3:	sub    rsp,0x28
   14000dae7:	mov    rbp,rdx
   14000daea:	mov    rcx,QWORD PTR [rbp+0x30]
   14000daee:	call   0x14000ce20
   14000daf3:	cmp    DWORD PTR [rbp+0x20],0x0
   14000daf7:	jne    0x14000db3d
   14000daf9:	mov    rbx,QWORD PTR [rbp+0xb8]
   14000db00:	cmp    DWORD PTR [rbx],0xe06d7363
   14000db06:	jne    0x14000db3d
   14000db08:	cmp    DWORD PTR [rbx+0x18],0x4
   14000db0c:	jne    0x14000db3d
   14000db0e:	mov    eax,DWORD PTR [rbx+0x20]
   14000db11:	cmp    eax,0x19930520
   14000db16:	je     0x14000db26
   14000db18:	cmp    eax,0x19930521
   14000db1d:	je     0x14000db26
   14000db1f:	cmp    eax,0x19930522
   14000db24:	jne    0x14000db3d
   14000db26:	mov    rcx,QWORD PTR [rbx+0x28]
   14000db2a:	call   0x14000cdd0
   14000db2f:	test   eax,eax
   14000db31:	je     0x14000db3d
   14000db33:	mov    dl,0x1
   14000db35:	mov    rcx,rbx
   14000db38:	call   0x14000d500
   14000db3d:	call   0x140006240
   14000db42:	mov    rcx,QWORD PTR [rbp+0xc0]
   14000db49:	mov    QWORD PTR [rax+0xf0],rcx
   14000db50:	call   0x140006240
   14000db55:	mov    rcx,QWORD PTR [rbp+0x28]
   14000db59:	mov    QWORD PTR [rax+0xf8],rcx
   14000db60:	add    rsp,0x28
   14000db64:	pop    rbp
   14000db65:	pop    rbx
   14000db66:	ret    
   14000db67:	int3   
   14000db68:	int3   
   14000db69:	int3   
   14000db6a:	int3   
   14000db6b:	int3   
   14000db6c:	int3   
   14000db6d:	int3   
   14000db6e:	int3   
   14000db6f:	int3   
   14000db70:	mov    QWORD PTR [rsp+0x8],rbx
   14000db75:	mov    QWORD PTR [rsp+0x10],rsi
   14000db7a:	mov    QWORD PTR [rsp+0x18],rdi
   14000db7f:	push   r12
   14000db81:	push   r13
   14000db83:	push   r14
   14000db85:	sub    rsp,0x30
   14000db89:	mov    rdi,r9
   14000db8c:	mov    r12,r8
   14000db8f:	mov    rsi,rdx
   14000db92:	mov    r14,rcx
   14000db95:	xor    ebx,ebx
   14000db97:	cmp    DWORD PTR [r8+0x4],ebx
   14000db9b:	je     0x14000dd7b
   14000dba1:	movsxd r13,DWORD PTR [r8+0x4]
   14000dba5:	call   0x14000c880
   14000dbaa:	lea    rdx,[r13+rax*1+0x0]
   14000dbaf:	test   rdx,rdx
   14000dbb2:	je     0x14000dd7b
   14000dbb8:	test   r13d,r13d
   14000dbbb:	je     0x14000dbcf
   14000dbbd:	call   0x14000c880
   14000dbc2:	mov    r11,rax
   14000dbc5:	movsxd rax,DWORD PTR [r12+0x4]
   14000dbca:	add    r11,rax
   14000dbcd:	jmp    0x14000dbd2
   14000dbcf:	mov    r11,rbx
   14000dbd2:	cmp    BYTE PTR [r11+0x10],bl
   14000dbd6:	je     0x14000dd7b
   14000dbdc:	movsxd rax,DWORD PTR [r12+0x8]
   14000dbe1:	test   eax,eax
   14000dbe3:	jne    0x14000dbf1
   14000dbe5:	bt     DWORD PTR [r12],0x1f
   14000dbeb:	jae    0x14000dd7b
   14000dbf1:	mov    ecx,DWORD PTR [r12]
   14000dbf5:	bt     ecx,0x1f
   14000dbf9:	jb     0x14000dc01
   14000dbfb:	add    rax,QWORD PTR [rsi]
   14000dbfe:	mov    rsi,rax
   14000dc01:	test   cl,0x8
   14000dc04:	je     0x14000dc4b
   14000dc06:	mov    edx,0x1
   14000dc0b:	mov    rcx,QWORD PTR [r14+0x28]
   14000dc0f:	call   0x14000eb70
   14000dc14:	test   eax,eax
   14000dc16:	je     0x14000dc41
   14000dc18:	mov    edx,0x1
   14000dc1d:	mov    rcx,rsi
   14000dc20:	call   0x14000eb70
   14000dc25:	test   eax,eax
   14000dc27:	je     0x14000dc41
   14000dc29:	mov    rcx,QWORD PTR [r14+0x28]
   14000dc2d:	mov    QWORD PTR [rsi],rcx
   14000dc30:	lea    rdx,[rdi+0x8]
   14000dc34:	call   0x14000d570
   14000dc39:	mov    QWORD PTR [rsi],rax
   14000dc3c:	jmp    0x14000dd71
   14000dc41:	call   0x1400088d0
   14000dc46:	jmp    0x14000dd71
   14000dc4b:	test   BYTE PTR [rdi],0x1
   14000dc4e:	je     0x14000dcb4
   14000dc50:	mov    edx,0x1
   14000dc55:	mov    rcx,QWORD PTR [r14+0x28]
   14000dc59:	call   0x14000eb70
   14000dc5e:	test   eax,eax
   14000dc60:	je     0x14000dcaa
   14000dc62:	mov    edx,0x1
   14000dc67:	mov    rcx,rsi
   14000dc6a:	call   0x14000eb70
   14000dc6f:	test   eax,eax
   14000dc71:	je     0x14000dcaa
   14000dc73:	movsxd r8,DWORD PTR [rdi+0x14]
   14000dc77:	mov    rdx,QWORD PTR [r14+0x28]
   14000dc7b:	mov    rcx,rsi
   14000dc7e:	call   0x1400043f0
   14000dc83:	cmp    DWORD PTR [rdi+0x14],0x8
   14000dc87:	jne    0x14000dd71
   14000dc8d:	mov    rcx,QWORD PTR [rsi]
   14000dc90:	test   rcx,rcx
   14000dc93:	je     0x14000dd71
   14000dc99:	lea    rdx,[rdi+0x8]
   14000dc9d:	call   0x14000d570
   14000dca2:	mov    QWORD PTR [rsi],rax
   14000dca5:	jmp    0x14000dd71
   14000dcaa:	call   0x1400088d0
   14000dcaf:	jmp    0x14000dd71
   14000dcb4:	cmp    DWORD PTR [rdi+0x18],0x0
   14000dcb8:	je     0x14000dd27
   14000dcba:	call   0x14000c8a0
   14000dcbf:	mov    rdx,rax
   14000dcc2:	movsxd rax,DWORD PTR [rdi+0x18]
   14000dcc6:	add    rdx,rax
   14000dcc9:	je     0x14000dd27
   14000dccb:	mov    edx,0x1
   14000dcd0:	mov    rcx,QWORD PTR [r14+0x28]
   14000dcd4:	call   0x14000eb70
   14000dcd9:	test   eax,eax
   14000dcdb:	je     0x14000dd20
   14000dcdd:	mov    edx,0x1
   14000dce2:	mov    rcx,rsi
   14000dce5:	call   0x14000eb70
   14000dcea:	test   eax,eax
   14000dcec:	je     0x14000dd20
   14000dcee:	cmp    DWORD PTR [rdi+0x18],0x0
   14000dcf2:	je     0x14000dd05
   14000dcf4:	call   0x14000c8a0
   14000dcf9:	mov    rcx,rax
   14000dcfc:	movsxd rax,DWORD PTR [rdi+0x18]
   14000dd00:	add    rcx,rax
   14000dd03:	jmp    0x14000dd08
   14000dd05:	mov    rcx,rbx
   14000dd08:	call   0x14000eb70
   14000dd0d:	test   eax,eax
   14000dd0f:	je     0x14000dd20
   14000dd11:	test   BYTE PTR [rdi],0x4
   14000dd14:	setne  bl
   14000dd17:	add    ebx,0x1
   14000dd1a:	mov    DWORD PTR [rsp+0x20],ebx
   14000dd1e:	jmp    0x14000dd71
   14000dd20:	call   0x1400088d0
   14000dd25:	jmp    0x14000dd71
   14000dd27:	mov    edx,0x1
   14000dd2c:	mov    rcx,QWORD PTR [r14+0x28]
   14000dd30:	call   0x14000eb70
   14000dd35:	test   eax,eax
   14000dd37:	je     0x14000dd6b
   14000dd39:	mov    edx,0x1
   14000dd3e:	mov    rcx,rsi
   14000dd41:	call   0x14000eb70
   14000dd46:	test   eax,eax
   14000dd48:	je     0x14000dd6b
   14000dd4a:	movsxd r10,DWORD PTR [rdi+0x14]
   14000dd4e:	lea    rdx,[rdi+0x8]
   14000dd52:	mov    rcx,QWORD PTR [r14+0x28]
   14000dd56:	call   0x14000d570
   14000dd5b:	mov    rdx,rax
   14000dd5e:	mov    r8,r10
   14000dd61:	mov    rcx,rsi
   14000dd64:	call   0x1400043f0
   14000dd69:	jmp    0x14000dd71
   14000dd6b:	call   0x1400088d0
   14000dd70:	nop
   14000dd71:	mov    eax,ebx
   14000dd73:	jmp    0x14000dd7d
   14000dd75:	call   0x1400088a0
   14000dd7a:	nop
   14000dd7b:	xor    eax,eax
   14000dd7d:	mov    rbx,QWORD PTR [rsp+0x50]
   14000dd82:	mov    rsi,QWORD PTR [rsp+0x58]
   14000dd87:	mov    rdi,QWORD PTR [rsp+0x60]
   14000dd8c:	add    rsp,0x30
   14000dd90:	pop    r14
   14000dd92:	pop    r13
   14000dd94:	pop    r12
   14000dd96:	ret    
   14000dd97:	int3   
   14000dd98:	int3   
   14000dd99:	int3   
   14000dd9a:	int3   
   14000dd9b:	int3   
   14000dd9c:	int3   
   14000dd9d:	int3   
   14000dd9e:	int3   
   14000dd9f:	int3   
   14000dda0:	mov    QWORD PTR [rsp+0x8],rbx
   14000dda5:	mov    QWORD PTR [rsp+0x10],rsi
   14000ddaa:	push   rdi
   14000ddab:	sub    rsp,0x20
   14000ddaf:	mov    rbx,r9
   14000ddb2:	mov    rsi,rcx
   14000ddb5:	bt     DWORD PTR [r8],0x1f
   14000ddba:	jae    0x14000ddc1
   14000ddbc:	mov    rdi,rdx
   14000ddbf:	jmp    0x14000ddc8
   14000ddc1:	movsxd rdi,DWORD PTR [r8+0x8]
   14000ddc5:	add    rdi,QWORD PTR [rdx]
   14000ddc8:	call   0x14000db70
   14000ddcd:	sub    eax,0x1
   14000ddd0:	je     0x14000de0f
   14000ddd2:	cmp    eax,0x1
   14000ddd5:	jne    0x14000de3c
   14000ddd7:	cmp    DWORD PTR [rbx+0x18],0x0
   14000dddb:	je     0x14000ddee
   14000dddd:	call   0x14000c8a0
   14000dde2:	mov    r11,rax
   14000dde5:	movsxd rax,DWORD PTR [rbx+0x18]
   14000dde9:	add    r11,rax
   14000ddec:	jmp    0x14000ddf1
   14000ddee:	xor    r11d,r11d
   14000ddf1:	lea    rdx,[rbx+0x8]
   14000ddf5:	mov    rcx,QWORD PTR [rsi+0x28]
   14000ddf9:	call   0x14000d570
   14000ddfe:	mov    rdx,rax
   14000de01:	mov    r8d,0x1
   14000de07:	mov    rcx,rdi
   14000de0a:	call   r11
   14000de0d:	jmp    0x14000de3c
   14000de0f:	cmp    DWORD PTR [rbx+0x18],0x0
   14000de13:	je     0x14000de23
   14000de15:	call   0x14000c8a0
   14000de1a:	movsxd r11,DWORD PTR [rbx+0x18]
   14000de1e:	add    r11,rax
   14000de21:	jmp    0x14000de26
   14000de23:	xor    r11d,r11d
   14000de26:	lea    rdx,[rbx+0x8]
   14000de2a:	mov    rcx,QWORD PTR [rsi+0x28]
   14000de2e:	call   0x14000d570
   14000de33:	mov    rdx,rax
   14000de36:	mov    rcx,rdi
   14000de39:	call   r11
   14000de3c:	jmp    0x14000de44
   14000de3e:	call   0x1400088a0
   14000de43:	nop
   14000de44:	mov    rbx,QWORD PTR [rsp+0x30]
   14000de49:	mov    rsi,QWORD PTR [rsp+0x38]
   14000de4e:	add    rsp,0x20
   14000de52:	pop    rdi
   14000de53:	ret    
   14000de54:	int3   
   14000de55:	int3   
   14000de56:	int3   
   14000de57:	int3   
   14000de58:	int3   
   14000de59:	int3   
   14000de5a:	int3   
   14000de5b:	int3   
   14000de5c:	int3   
   14000de5d:	int3   
   14000de5e:	int3   
   14000de5f:	int3   
   14000de60:	mov    rax,rsp
   14000de63:	mov    QWORD PTR [rax+0x18],r8
   14000de67:	push   rsi
   14000de68:	push   r12
   14000de6a:	push   r14
   14000de6c:	push   r15
   14000de6e:	sub    rsp,0x78
   14000de72:	cmp    DWORD PTR [rcx],0x80000003
   14000de78:	mov    r14,r9
   14000de7b:	mov    rsi,r8
   14000de7e:	mov    r15,rdx
   14000de81:	mov    r12,rcx
   14000de84:	je     0x14000e0cb
   14000de8a:	mov    QWORD PTR [rax+0x10],rbx
   14000de8e:	mov    QWORD PTR [rax-0x30],rdi
   14000de92:	mov    QWORD PTR [rax-0x38],r13
   14000de96:	call   0x140006240
   14000de9b:	mov    edi,DWORD PTR [rsp+0xd0]
   14000dea2:	mov    r13,QWORD PTR [rsp+0xc0]
   14000deaa:	cmp    QWORD PTR [rax+0xe0],0x0
   14000deb2:	je     0x14000df03
   14000deb4:	call   0x140006240
   14000deb9:	mov    rbx,rax
   14000debc:	call   0x140005e60
   14000dec1:	cmp    QWORD PTR [rbx+0xe0],rax
   14000dec8:	je     0x14000df03
   14000deca:	cmp    DWORD PTR [r12],0xe0434f4d
   14000ded2:	je     0x14000df03
   14000ded4:	mov    rax,QWORD PTR [rsp+0xd8]
   14000dedc:	mov    r9,r14
   14000dedf:	mov    r8,rsi
   14000dee2:	mov    QWORD PTR [rsp+0x30],rax
   14000dee7:	mov    rdx,r15
   14000deea:	mov    rcx,r12
   14000deed:	mov    DWORD PTR [rsp+0x28],edi
   14000def1:	mov    QWORD PTR [rsp+0x20],r13
   14000def6:	call   0x14000cb90
   14000defb:	test   eax,eax
   14000defd:	jne    0x14000e0b9
   14000df03:	cmp    DWORD PTR [r13+0xc],0x0
   14000df08:	mov    QWORD PTR [rsp+0x70],rbp
   14000df0d:	jne    0x14000df14
   14000df0f:	call   0x1400088d0
   14000df14:	mov    ebp,DWORD PTR [rsp+0xc8]
   14000df1b:	lea    rax,[rsp+0x50]
   14000df20:	mov    QWORD PTR [rsp+0x30],r14
   14000df25:	mov    QWORD PTR [rsp+0x28],rax
   14000df2a:	lea    rax,[rsp+0xa0]
   14000df32:	mov    r8d,edi
   14000df35:	mov    r9d,ebp
   14000df38:	mov    rdx,r13
   14000df3b:	mov    rcx,r15
   14000df3e:	mov    QWORD PTR [rsp+0x20],rax
   14000df43:	call   0x14000cc40
   14000df48:	mov    rsi,rax
   14000df4b:	mov    eax,DWORD PTR [rsp+0xa0]
   14000df52:	cmp    eax,DWORD PTR [rsp+0x50]
   14000df56:	jae    0x14000e0b4
   14000df5c:	data16 data16 xchg ax,ax
   14000df60:	cmp    ebp,DWORD PTR [rsi]
   14000df62:	jl     0x14000e09c
   14000df68:	cmp    ebp,DWORD PTR [rsi+0x4]
   14000df6b:	jg     0x14000e09c
   14000df71:	call   0x14000c880
   14000df76:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000df7a:	lea    rdx,[rcx+rcx*4]
   14000df7e:	movsxd rcx,DWORD PTR [rsi+0x10]
   14000df82:	lea    rdx,[rcx+rdx*4]
   14000df86:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000df8b:	je     0x14000e001
   14000df8d:	call   0x14000c880
   14000df92:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000df96:	lea    rdx,[rcx+rcx*4]
   14000df9a:	movsxd rcx,DWORD PTR [rsi+0x10]
   14000df9e:	lea    rdx,[rcx+rdx*4]
   14000dfa2:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000dfa7:	call   0x14000c880
   14000dfac:	lea    rcx,[rax+rbx*1]
   14000dfb0:	test   rcx,rcx
   14000dfb3:	je     0x14000e001
   14000dfb5:	call   0x14000c880
   14000dfba:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000dfbe:	lea    rdx,[rcx+rcx*4]
   14000dfc2:	movsxd rcx,DWORD PTR [rsi+0x10]
   14000dfc6:	lea    rdx,[rcx+rdx*4]
   14000dfca:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14000dfcf:	je     0x14000dff5
   14000dfd1:	call   0x14000c880
   14000dfd6:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000dfda:	lea    rdx,[rcx+rcx*4]
   14000dfde:	movsxd rcx,DWORD PTR [rsi+0x10]
   14000dfe2:	lea    rdx,[rcx+rdx*4]
   14000dfe6:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14000dfeb:	call   0x14000c880
   14000dff0:	add    rax,rbx
   14000dff3:	jmp    0x14000dff7
   14000dff5:	xor    eax,eax
   14000dff7:	cmp    BYTE PTR [rax+0x10],0x0
   14000dffb:	jne    0x14000e095
   14000e001:	call   0x14000c880
   14000e006:	movsxd rcx,DWORD PTR [rsi+0xc]
   14000e00a:	lea    rdx,[rcx+rcx*4]
   14000e00e:	movsxd rcx,DWORD PTR [rsi+0x10]
   14000e012:	lea    rdx,[rcx+rdx*4]
   14000e016:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14000e01b:	jne    0x14000e095
   14000e01d:	call   0x14000c880
   14000e022:	mov    ecx,DWORD PTR [rsi+0xc]
   14000e025:	lea    r9,[rsp+0x58]
   14000e02a:	sub    ecx,0x1
   14000e02d:	mov    r8,r13
   14000e030:	movsxd rcx,ecx
   14000e033:	lea    rdx,[rcx+rcx*4]
   14000e037:	mov    rcx,r15
   14000e03a:	lea    rdi,[rax+rdx*4]
   14000e03e:	movsxd rax,DWORD PTR [rsi+0x10]
   14000e042:	mov    rdx,r14
   14000e045:	add    rdi,rax
   14000e048:	call   0x14000c770
   14000e04d:	mov    rbx,rax
   14000e050:	call   0x14000c880
   14000e055:	movsxd rcx,DWORD PTR [rdi+0xc]
   14000e059:	mov    r8,QWORD PTR [rsp+0xb0]
   14000e061:	add    rax,rcx
   14000e064:	mov    ecx,DWORD PTR [rsi]
   14000e066:	mov    BYTE PTR [rsp+0x40],0x0
   14000e06b:	mov    QWORD PTR [rsp+0x38],r14
   14000e070:	mov    QWORD PTR [rsp+0x30],r13
   14000e075:	mov    DWORD PTR [rsp+0x28],ecx
   14000e079:	mov    r9,rbx
   14000e07c:	mov    rdx,r12
   14000e07f:	mov    rcx,r15
   14000e082:	mov    QWORD PTR [rsp+0x20],rax
   14000e087:	call   0x14000ce90
   14000e08c:	mov    eax,DWORD PTR [rsp+0xa0]
   14000e093:	jmp    0x14000e09c
   14000e095:	mov    eax,DWORD PTR [rsp+0xa0]
   14000e09c:	add    eax,0x1
   14000e09f:	add    rsi,0x14
   14000e0a3:	cmp    eax,DWORD PTR [rsp+0x50]
   14000e0a7:	mov    DWORD PTR [rsp+0xa0],eax
   14000e0ae:	jb     0x14000df60
   14000e0b4:	mov    rbp,QWORD PTR [rsp+0x70]
   14000e0b9:	mov    rdi,QWORD PTR [rsp+0x68]
   14000e0be:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000e0c6:	mov    r13,QWORD PTR [rsp+0x60]
   14000e0cb:	add    rsp,0x78
   14000e0cf:	pop    r15
   14000e0d1:	pop    r14
   14000e0d3:	pop    r12
   14000e0d5:	pop    rsi
   14000e0d6:	ret    
   14000e0d7:	int3   
   14000e0d8:	int3   
   14000e0d9:	int3   
   14000e0da:	int3   
   14000e0db:	int3   
   14000e0dc:	int3   
   14000e0dd:	int3   
   14000e0de:	int3   
   14000e0df:	int3   
   14000e0e0:	mov    QWORD PTR [rsp+0x20],r9
   14000e0e5:	mov    QWORD PTR [rsp+0x18],r8
   14000e0ea:	mov    QWORD PTR [rsp+0x10],rdx
   14000e0ef:	push   rbx
   14000e0f0:	push   rbp
   14000e0f1:	push   rdi
   14000e0f2:	push   r12
   14000e0f4:	push   r13
   14000e0f6:	push   r14
   14000e0f8:	push   r15
   14000e0fa:	sub    rsp,0x570
   14000e101:	mov    rbp,QWORD PTR [rsp+0x5d0]
   14000e109:	mov    r13,rdx
   14000e10c:	mov    r14,rcx
   14000e10f:	xor    r15b,r15b
   14000e112:	mov    rdx,r9
   14000e115:	mov    rcx,rbp
   14000e118:	mov    r12,r9
   14000e11b:	mov    rbx,r8
   14000e11e:	mov    BYTE PTR [rsp+0x5b0],r15b
   14000e126:	call   0x14000d010
   14000e12b:	lea    r9,[rsp+0x68]
   14000e130:	mov    r8,rbp
   14000e133:	mov    rdx,r12
   14000e136:	mov    rcx,r13
   14000e139:	mov    edi,eax
   14000e13b:	mov    DWORD PTR [rsp+0x58],eax
   14000e13f:	call   0x14000c770
   14000e144:	mov    r8,rbp
   14000e147:	mov    rdx,r12
   14000e14a:	mov    rcx,r13
   14000e14d:	call   0x14000d190
   14000e152:	cmp    edi,eax
   14000e154:	jle    0x14000e17c
   14000e156:	lea    rcx,[rsp+0x68]
   14000e15b:	mov    r9d,edi
   14000e15e:	mov    r8,rbp
   14000e161:	mov    rdx,r12
   14000e164:	call   0x14000d140
   14000e169:	mov    r9d,edi
   14000e16c:	mov    r8,rbp
   14000e16f:	mov    rdx,r12
   14000e172:	mov    rcx,r13
   14000e175:	call   0x14000d150
   14000e17a:	jmp    0x14000e190
   14000e17c:	mov    r8,rbp
   14000e17f:	mov    rdx,r12
   14000e182:	mov    rcx,r13
   14000e185:	call   0x14000d190
   14000e18a:	mov    edi,eax
   14000e18c:	mov    DWORD PTR [rsp+0x58],eax
   14000e190:	cmp    edi,0xffffffff
   14000e193:	jl     0x14000e19a
   14000e195:	cmp    edi,DWORD PTR [rbp+0x4]
   14000e198:	jl     0x14000e19f
   14000e19a:	call   0x1400088d0
   14000e19f:	cmp    DWORD PTR [r14],0xe06d7363
   14000e1a6:	jne    0x14000e307
   14000e1ac:	cmp    DWORD PTR [r14+0x18],0x4
   14000e1b1:	jne    0x14000e307
   14000e1b7:	mov    eax,DWORD PTR [r14+0x20]
   14000e1bb:	cmp    eax,0x19930520
   14000e1c0:	je     0x14000e1d4
   14000e1c2:	cmp    eax,0x19930521
   14000e1c7:	je     0x14000e1d4
   14000e1c9:	cmp    eax,0x19930522
   14000e1ce:	jne    0x14000e307
   14000e1d4:	cmp    QWORD PTR [r14+0x30],0x0
   14000e1d9:	jne    0x14000e307
   14000e1df:	call   0x140006240
   14000e1e4:	cmp    QWORD PTR [rax+0xf0],0x0
   14000e1ec:	je     0x14000e6c6
   14000e1f2:	call   0x140006240
   14000e1f7:	mov    r14,QWORD PTR [rax+0xf0]
   14000e1fe:	call   0x140006240
   14000e203:	mov    rcx,QWORD PTR [r14+0x38]
   14000e207:	mov    rbx,QWORD PTR [rax+0xf8]
   14000e20e:	mov    QWORD PTR [rsp+0x5c0],rbx
   14000e216:	call   0x14000c8e0
   14000e21b:	mov    edx,0x1
   14000e220:	mov    rcx,r14
   14000e223:	call   0x14000eb70
   14000e228:	test   eax,eax
   14000e22a:	jne    0x14000e231
   14000e22c:	call   0x1400088d0
   14000e231:	cmp    DWORD PTR [r14],0xe06d7363
   14000e238:	jne    0x14000e266
   14000e23a:	cmp    DWORD PTR [r14+0x18],0x4
   14000e23f:	jne    0x14000e266
   14000e241:	mov    eax,DWORD PTR [r14+0x20]
   14000e245:	cmp    eax,0x19930520
   14000e24a:	je     0x14000e25a
   14000e24c:	cmp    eax,0x19930521
   14000e251:	je     0x14000e25a
   14000e253:	cmp    eax,0x19930522
   14000e258:	jne    0x14000e266
   14000e25a:	cmp    QWORD PTR [r14+0x30],0x0
   14000e25f:	jne    0x14000e266
   14000e261:	call   0x1400088d0
   14000e266:	call   0x140006240
   14000e26b:	cmp    QWORD PTR [rax+0x108],0x0
   14000e273:	je     0x14000e307
   14000e279:	call   0x140006240
   14000e27e:	mov    rbx,QWORD PTR [rax+0x108]
   14000e285:	call   0x140006240
   14000e28a:	mov    rdx,rbx
   14000e28d:	mov    rcx,r14
   14000e290:	mov    QWORD PTR [rax+0x108],0x0
   14000e29b:	call   0x14000d5a0
   14000e2a0:	test   al,al
   14000e2a2:	jne    0x14000e2ff
   14000e2a4:	mov    rcx,rbx
   14000e2a7:	call   0x14000d7f0
   14000e2ac:	test   al,al
   14000e2ae:	je     0x14000e2f9
   14000e2b0:	mov    dl,0x1
   14000e2b2:	mov    rcx,r14
   14000e2b5:	call   0x14000d500
   14000e2ba:	lea    r11,[rip+0x30c7]        # 0x140011388
   14000e2c1:	lea    rdx,[rsp+0x5b0]
   14000e2c9:	lea    rcx,[rsp+0x78]
   14000e2ce:	mov    QWORD PTR [rsp+0x5b0],r11
   14000e2d6:	call   0x14000e980
   14000e2db:	lea    r11,[rip+0x3096]        # 0x140011378
   14000e2e2:	lea    rdx,[rip+0x4467]        # 0x140012750
   14000e2e9:	lea    rcx,[rsp+0x78]
   14000e2ee:	mov    QWORD PTR [rsp+0x78],r11
   14000e2f3:	call   0x14000c6a0
   14000e2f8:	int3   
   14000e2f9:	call   0x1400088a0
   14000e2fe:	int3   
   14000e2ff:	mov    rbx,QWORD PTR [rsp+0x5c0]
   14000e307:	cmp    DWORD PTR [r14],0xe06d7363
   14000e30e:	jne    0x14000e6d9
   14000e314:	cmp    DWORD PTR [r14+0x18],0x4
   14000e319:	jne    0x14000e6d9
   14000e31f:	mov    eax,DWORD PTR [r14+0x20]
   14000e323:	cmp    eax,0x19930520
   14000e328:	je     0x14000e33c
   14000e32a:	cmp    eax,0x19930521
   14000e32f:	je     0x14000e33c
   14000e331:	cmp    eax,0x19930522
   14000e336:	jne    0x14000e6d9
   14000e33c:	cmp    DWORD PTR [rbp+0xc],0x0
   14000e340:	jbe    0x14000e5f7
   14000e346:	mov    r8d,DWORD PTR [rsp+0x5e0]
   14000e34e:	lea    rax,[rsp+0x54]
   14000e353:	mov    QWORD PTR [rsp+0x30],r12
   14000e358:	mov    QWORD PTR [rsp+0x28],rax
   14000e35d:	lea    rax,[rsp+0x50]
   14000e362:	mov    r9d,edi
   14000e365:	mov    rdx,rbp
   14000e368:	mov    rcx,r13
   14000e36b:	mov    QWORD PTR [rsp+0x20],rax
   14000e370:	call   0x14000cc40
   14000e375:	mov    ecx,DWORD PTR [rsp+0x50]
   14000e379:	mov    edx,DWORD PTR [rsp+0x54]
   14000e37d:	cmp    ecx,edx
   14000e37f:	mov    rbx,rax
   14000e382:	mov    QWORD PTR [rsp+0x60],rax
   14000e387:	jae    0x14000e5f7
   14000e38d:	mov    QWORD PTR [rsp+0x568],rsi
   14000e395:	cmp    DWORD PTR [rbx],edi
   14000e397:	jg     0x14000e5ce
   14000e39d:	cmp    edi,DWORD PTR [rbx+0x4]
   14000e3a0:	jg     0x14000e5ce
   14000e3a6:	call   0x14000c880
   14000e3ab:	movsxd rdi,DWORD PTR [rbx+0x10]
   14000e3af:	mov    r15d,DWORD PTR [rbx+0xc]
   14000e3b3:	add    rdi,rax
   14000e3b6:	test   r15d,r15d
   14000e3b9:	jle    0x14000e5ba
   14000e3bf:	nop
   14000e3c0:	call   0x14000c8a0
   14000e3c5:	mov    rcx,QWORD PTR [r14+0x30]
   14000e3c9:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000e3cd:	lea    r13,[rax+rdx*1+0x4]
   14000e3d2:	call   0x14000c8a0
   14000e3d7:	mov    rcx,QWORD PTR [r14+0x30]
   14000e3db:	movsxd rdx,DWORD PTR [rcx+0xc]
   14000e3df:	mov    ebp,DWORD PTR [rax+rdx*1]
   14000e3e2:	test   ebp,ebp
   14000e3e4:	jle    0x14000e4e0
   14000e3ea:	data16 xchg ax,ax
   14000e3ed:	data16 xchg ax,ax
   14000e3f0:	call   0x14000c8a0
   14000e3f5:	mov    r12,QWORD PTR [r14+0x30]
   14000e3f9:	mov    rsi,rax
   14000e3fc:	movsxd rax,DWORD PTR [r13+0x0]
   14000e400:	add    rsi,rax
   14000e403:	cmp    DWORD PTR [rdi+0x4],0x0
   14000e407:	je     0x14000e51c
   14000e40d:	movsxd rbx,DWORD PTR [rdi+0x4]
   14000e411:	call   0x14000c880
   14000e416:	add    rax,rbx
   14000e419:	je     0x14000e51c
   14000e41f:	test   ebx,ebx
   14000e421:	je     0x14000e431
   14000e423:	movsxd rbx,DWORD PTR [rdi+0x4]
   14000e427:	call   0x14000c880
   14000e42c:	add    rax,rbx
   14000e42f:	jmp    0x14000e433
   14000e431:	xor    eax,eax
   14000e433:	cmp    BYTE PTR [rax+0x10],0x0
   14000e437:	je     0x14000e51c
   14000e43d:	test   ebx,ebx
   14000e43f:	je     0x14000e44f
   14000e441:	call   0x14000c880
   14000e446:	movsxd rbx,DWORD PTR [rdi+0x4]
   14000e44a:	add    rbx,rax
   14000e44d:	jmp    0x14000e451
   14000e44f:	xor    ebx,ebx
   14000e451:	call   0x14000c8a0
   14000e456:	movsxd rcx,DWORD PTR [rsi+0x4]
   14000e45a:	add    rax,rcx
   14000e45d:	cmp    rbx,rax
   14000e460:	je     0x14000e4a8
   14000e462:	cmp    DWORD PTR [rdi+0x4],0x0
   14000e466:	je     0x14000e476
   14000e468:	call   0x14000c880
   14000e46d:	movsxd rbx,DWORD PTR [rdi+0x4]
   14000e471:	add    rbx,rax
   14000e474:	jmp    0x14000e478
   14000e476:	xor    ebx,ebx
   14000e478:	call   0x14000c8a0
   14000e47d:	movsxd rcx,DWORD PTR [rsi+0x4]
   14000e481:	lea    r8,[rax+rcx*1+0x10]
   14000e486:	lea    rcx,[rbx+0x10]
   14000e48a:	sub    r8,rcx
   14000e48d:	data16 xchg ax,ax
   14000e490:	movzx  edx,BYTE PTR [rcx]
   14000e493:	movzx  eax,BYTE PTR [rcx+r8*1]
   14000e498:	sub    edx,eax
   14000e49a:	jne    0x14000e4a4
   14000e49c:	add    rcx,0x1
   14000e4a0:	test   eax,eax
   14000e4a2:	jne    0x14000e490
   14000e4a4:	test   edx,edx
   14000e4a6:	jne    0x14000e4d1
   14000e4a8:	test   BYTE PTR [rsi],0x2
   14000e4ab:	je     0x14000e4b2
   14000e4ad:	test   BYTE PTR [rdi],0x8
   14000e4b0:	je     0x14000e4d1
   14000e4b2:	mov    eax,DWORD PTR [r12]
   14000e4b6:	test   al,0x1
   14000e4b8:	je     0x14000e4bf
   14000e4ba:	test   BYTE PTR [rdi],0x1
   14000e4bd:	je     0x14000e4d1
   14000e4bf:	test   al,0x4
   14000e4c1:	je     0x14000e4c8
   14000e4c3:	test   BYTE PTR [rdi],0x4
   14000e4c6:	je     0x14000e4d1
   14000e4c8:	test   al,0x2
   14000e4ca:	je     0x14000e51c
   14000e4cc:	test   BYTE PTR [rdi],0x2
   14000e4cf:	jne    0x14000e51c
   14000e4d1:	sub    ebp,0x1
   14000e4d4:	add    r13,0x4
   14000e4d8:	test   ebp,ebp
   14000e4da:	jg     0x14000e3f0
   14000e4e0:	sub    r15d,0x1
   14000e4e4:	add    rdi,0x14
   14000e4e8:	test   r15d,r15d
   14000e4eb:	jg     0x14000e3c0
   14000e4f1:	mov    rbx,QWORD PTR [rsp+0x60]
   14000e4f6:	mov    rbp,QWORD PTR [rsp+0x5d0]
   14000e4fe:	mov    r12,QWORD PTR [rsp+0x5c8]
   14000e506:	mov    r13,QWORD PTR [rsp+0x5b8]
   14000e50e:	movzx  r15d,BYTE PTR [rsp+0x5b0]
   14000e517:	jmp    0x14000e5c2
   14000e51c:	mov    rbp,QWORD PTR [rsp+0x5d0]
   14000e524:	mov    r12,QWORD PTR [rsp+0x5c8]
   14000e52c:	mov    r13,QWORD PTR [rsp+0x5b8]
   14000e534:	lea    r9,[rsp+0x70]
   14000e539:	mov    r15b,0x1
   14000e53c:	mov    r8,rbp
   14000e53f:	mov    rdx,r12
   14000e542:	mov    rcx,r13
   14000e545:	mov    BYTE PTR [rsp+0x5b0],r15b
   14000e54d:	call   0x14000c770
   14000e552:	test   rsi,rsi
   14000e555:	mov    rbx,rax
   14000e558:	je     0x14000e56b
   14000e55a:	mov    r9,rsi
   14000e55d:	mov    r8,rdi
   14000e560:	mov    rdx,rax
   14000e563:	mov    rcx,r14
   14000e566:	call   0x14000dda0
   14000e56b:	call   0x14000c880
   14000e570:	movsxd rcx,DWORD PTR [rdi+0xc]
   14000e574:	mov    r8,QWORD PTR [rsp+0x5c0]
   14000e57c:	add    rax,rcx
   14000e57f:	movzx  ecx,BYTE PTR [rsp+0x5d8]
   14000e587:	mov    r9,rbx
   14000e58a:	mov    BYTE PTR [rsp+0x40],cl
   14000e58e:	mov    rcx,QWORD PTR [rsp+0x60]
   14000e593:	mov    QWORD PTR [rsp+0x38],r12
   14000e598:	mov    ecx,DWORD PTR [rcx]
   14000e59a:	mov    QWORD PTR [rsp+0x30],rbp
   14000e59f:	mov    rdx,r14
   14000e5a2:	mov    DWORD PTR [rsp+0x28],ecx
   14000e5a6:	mov    rcx,r13
   14000e5a9:	mov    QWORD PTR [rsp+0x20],rax
   14000e5ae:	call   0x14000ce90
   14000e5b3:	mov    rbx,QWORD PTR [rsp+0x60]
   14000e5b8:	jmp    0x14000e5c2
   14000e5ba:	mov    r15b,BYTE PTR [rsp+0x5b0]
   14000e5c2:	mov    edx,DWORD PTR [rsp+0x54]
   14000e5c6:	mov    ecx,DWORD PTR [rsp+0x50]
   14000e5ca:	mov    edi,DWORD PTR [rsp+0x58]
   14000e5ce:	add    ecx,0x1
   14000e5d1:	add    rbx,0x14
   14000e5d5:	cmp    ecx,edx
   14000e5d7:	mov    DWORD PTR [rsp+0x50],ecx
   14000e5db:	mov    QWORD PTR [rsp+0x60],rbx
   14000e5e0:	jb     0x14000e395
   14000e5e6:	test   r15b,r15b
   14000e5e9:	mov    rsi,QWORD PTR [rsp+0x568]
   14000e5f1:	jne    0x14000e6b2
   14000e5f7:	mov    eax,DWORD PTR [rbp+0x0]
   14000e5fa:	and    eax,0x1fffffff
   14000e5ff:	cmp    eax,0x19930521
   14000e604:	jb     0x14000e6b2
   14000e60a:	cmp    DWORD PTR [rbp+0x20],0x0
   14000e60e:	je     0x14000e6b2
   14000e614:	movsxd rbx,DWORD PTR [rbp+0x20]
   14000e618:	call   0x14000c880
   14000e61d:	add    rax,rbx
   14000e620:	je     0x14000e6b2
   14000e626:	test   ebx,ebx
   14000e628:	je     0x14000e63b
   14000e62a:	call   0x14000c880
   14000e62f:	mov    rdx,rax
   14000e632:	movsxd rax,DWORD PTR [rbp+0x20]
   14000e636:	add    rdx,rax
   14000e639:	jmp    0x14000e63d
   14000e63b:	xor    edx,edx
   14000e63d:	mov    rcx,r14
   14000e640:	call   0x14000d5a0
   14000e645:	test   al,al
   14000e647:	jne    0x14000e6b2
   14000e649:	lea    r9,[rsp+0x5b0]
   14000e651:	mov    r8,rbp
   14000e654:	mov    rdx,r12
   14000e657:	mov    rcx,r13
   14000e65a:	call   0x14000c770
   14000e65f:	mov    rbx,rax
   14000e662:	call   0x140006240
   14000e667:	mov    r8,QWORD PTR [rsp+0x5c0]
   14000e66f:	lea    rcx,[rsp+0x90]
   14000e677:	mov    r9,rbx
   14000e67a:	mov    rdx,r14
   14000e67d:	mov    QWORD PTR [rax+0x110],rcx
   14000e684:	mov    al,BYTE PTR [rsp+0x5d8]
   14000e68b:	mov    rcx,r13
   14000e68e:	mov    BYTE PTR [rsp+0x40],al
   14000e692:	mov    QWORD PTR [rsp+0x38],r12
   14000e697:	mov    QWORD PTR [rsp+0x30],rbp
   14000e69c:	mov    DWORD PTR [rsp+0x28],0xffffffff
   14000e6a4:	mov    QWORD PTR [rsp+0x20],0x0
   14000e6ad:	call   0x14000ce90
   14000e6b2:	call   0x140006240
   14000e6b7:	cmp    QWORD PTR [rax+0x108],0x0
   14000e6bf:	je     0x14000e6c6
   14000e6c1:	call   0x1400088d0
   14000e6c6:	add    rsp,0x570
   14000e6cd:	pop    r15
   14000e6cf:	pop    r14
   14000e6d1:	pop    r13
   14000e6d3:	pop    r12
   14000e6d5:	pop    rdi
   14000e6d6:	pop    rbp
   14000e6d7:	pop    rbx
   14000e6d8:	ret    
   14000e6d9:	cmp    DWORD PTR [rbp+0xc],0x0
   14000e6dd:	jbe    0x14000e6b2
   14000e6df:	cmp    BYTE PTR [rsp+0x5d8],0x0
   14000e6e7:	jne    0x14000e71d
   14000e6e9:	mov    rax,QWORD PTR [rsp+0x5e8]
   14000e6f1:	mov    r9,r12
   14000e6f4:	mov    r8,rbx
   14000e6f7:	mov    QWORD PTR [rsp+0x38],rax
   14000e6fc:	mov    eax,DWORD PTR [rsp+0x5e0]
   14000e703:	mov    rdx,r13
   14000e706:	mov    DWORD PTR [rsp+0x30],eax
   14000e70a:	mov    rcx,r14
   14000e70d:	mov    DWORD PTR [rsp+0x28],edi
   14000e711:	mov    QWORD PTR [rsp+0x20],rbp
   14000e716:	call   0x14000de60
   14000e71b:	jmp    0x14000e6b2
   14000e71d:	call   0x1400088a0
   14000e722:	int3   
   14000e723:	int3   
   14000e724:	int3   
   14000e725:	int3   
   14000e726:	int3   
   14000e727:	int3   
   14000e728:	int3   
   14000e729:	int3   
   14000e72a:	int3   
   14000e72b:	int3   
   14000e72c:	int3   
   14000e72d:	int3   
   14000e72e:	int3   
   14000e72f:	int3   
   14000e730:	rex push rbx
   14000e732:	sub    rsp,0x20
   14000e736:	mov    rbx,rcx
   14000e739:	call   0x14000ea10
   14000e73e:	lea    r11,[rip+0x2c33]        # 0x140011378
   14000e745:	mov    QWORD PTR [rbx],r11
   14000e748:	mov    rax,rbx
   14000e74b:	add    rsp,0x20
   14000e74f:	pop    rbx
   14000e750:	ret    
   14000e751:	int3   
   14000e752:	int3   
   14000e753:	int3   
   14000e754:	int3   
   14000e755:	int3   
   14000e756:	int3   
   14000e757:	int3   
   14000e758:	int3   
   14000e759:	int3   
   14000e75a:	int3   
   14000e75b:	int3   
   14000e75c:	int3   
   14000e75d:	int3   
   14000e75e:	int3   
   14000e75f:	int3   
   14000e760:	mov    QWORD PTR [rsp+0x8],rbx
   14000e765:	mov    QWORD PTR [rsp+0x10],rbp
   14000e76a:	mov    QWORD PTR [rsp+0x18],rsi
   14000e76f:	mov    QWORD PTR [rsp+0x20],rdi
   14000e774:	push   r12
   14000e776:	sub    rsp,0x40
   14000e77a:	mov    rbp,r9
   14000e77d:	mov    r12,r8
   14000e780:	mov    rsi,rdx
   14000e783:	mov    rbx,rcx
   14000e786:	call   0x140006240
   14000e78b:	mov    rdi,QWORD PTR [rsp+0x70]
   14000e790:	cmp    DWORD PTR [rax+0x2d0],0x0
   14000e797:	jne    0x14000e7d8
   14000e799:	mov    eax,DWORD PTR [rbx]
   14000e79b:	cmp    eax,0xe06d7363
   14000e7a0:	je     0x14000e7d8
   14000e7a2:	cmp    eax,0x80000029
   14000e7a7:	jne    0x14000e7b9
   14000e7a9:	cmp    DWORD PTR [rbx+0x18],0xf
   14000e7ad:	jne    0x14000e7b9
   14000e7af:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14000e7b7:	je     0x14000e7d8
   14000e7b9:	cmp    eax,0x80000026
   14000e7be:	je     0x14000e7d8
   14000e7c0:	mov    eax,DWORD PTR [rdi]
   14000e7c2:	and    eax,0x1fffffff
   14000e7c7:	cmp    eax,0x19930522
   14000e7cc:	jb     0x14000e7d8
   14000e7ce:	test   BYTE PTR [rdi+0x24],0x1
   14000e7d2:	jne    0x14000e95b
   14000e7d8:	mov    eax,DWORD PTR [rbx+0x4]
   14000e7db:	test   al,0x66
   14000e7dd:	je     0x14000e887
   14000e7e3:	mov    ecx,DWORD PTR [rdi+0x4]
   14000e7e6:	test   ecx,ecx
   14000e7e8:	je     0x14000e95b
   14000e7ee:	cmp    DWORD PTR [rsp+0x78],0x0
   14000e7f3:	jne    0x14000e95b
   14000e7f9:	and    eax,0x20
   14000e7fc:	je     0x14000e840
   14000e7fe:	cmp    DWORD PTR [rbx],0x80000026
   14000e804:	jne    0x14000e840
   14000e806:	mov    r8,QWORD PTR [r12+0xf8]
   14000e80e:	mov    rdx,rbp
   14000e811:	mov    rcx,rdi
   14000e814:	call   0x14000cf80
   14000e819:	cmp    eax,0xffffffff
   14000e81c:	mov    ebx,eax
   14000e81e:	jl     0x14000e825
   14000e820:	cmp    eax,DWORD PTR [rdi+0x4]
   14000e823:	jl     0x14000e82a
   14000e825:	call   0x1400088d0
   14000e82a:	mov    r9d,ebx
   14000e82d:	mov    r8,rdi
   14000e830:	mov    rdx,rbp
   14000e833:	mov    rcx,rsi
   14000e836:	call   0x14000d260
   14000e83b:	jmp    0x14000e95b
   14000e840:	test   eax,eax
   14000e842:	je     0x14000e874
   14000e844:	cmp    DWORD PTR [rbx],0x80000029
   14000e84a:	jne    0x14000e874
   14000e84c:	mov    esi,DWORD PTR [rbx+0x38]
   14000e84f:	cmp    esi,0xffffffff
   14000e852:	jl     0x14000e858
   14000e854:	cmp    esi,ecx
   14000e856:	jl     0x14000e85d
   14000e858:	call   0x1400088d0
   14000e85d:	mov    rcx,QWORD PTR [rbx+0x28]
   14000e861:	mov    r9d,esi
   14000e864:	mov    r8,rdi
   14000e867:	mov    rdx,rbp
   14000e86a:	call   0x14000d260
   14000e86f:	jmp    0x14000e95b
   14000e874:	mov    r8,rdi
   14000e877:	mov    rdx,rbp
   14000e87a:	mov    rcx,rsi
   14000e87d:	call   0x14000c900
   14000e882:	jmp    0x14000e95b
   14000e887:	cmp    DWORD PTR [rdi+0xc],0x0
   14000e88b:	jne    0x14000e8bb
   14000e88d:	mov    eax,DWORD PTR [rdi]
   14000e88f:	and    eax,0x1fffffff
   14000e894:	cmp    eax,0x19930521
   14000e899:	jb     0x14000e95b
   14000e89f:	cmp    DWORD PTR [rdi+0x20],0x0
   14000e8a3:	je     0x14000e95b
   14000e8a9:	call   0x14000c880
   14000e8ae:	movsxd rcx,DWORD PTR [rdi+0x20]
   14000e8b2:	add    rax,rcx
   14000e8b5:	je     0x14000e95b
   14000e8bb:	cmp    DWORD PTR [rbx],0xe06d7363
   14000e8c1:	jne    0x14000e924
   14000e8c3:	cmp    DWORD PTR [rbx+0x18],0x3
   14000e8c7:	jb     0x14000e924
   14000e8c9:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14000e8d0:	jbe    0x14000e924
   14000e8d2:	mov    rax,QWORD PTR [rbx+0x30]
   14000e8d6:	cmp    DWORD PTR [rax+0x8],0x0
   14000e8da:	je     0x14000e924
   14000e8dc:	call   0x14000c8a0
   14000e8e1:	mov    rcx,QWORD PTR [rbx+0x30]
   14000e8e5:	movsxd rdx,DWORD PTR [rcx+0x8]
   14000e8e9:	add    rax,rdx
   14000e8ec:	je     0x14000e924
   14000e8ee:	movzx  ecx,BYTE PTR [rsp+0x88]
   14000e8f6:	mov    r9,rbp
   14000e8f9:	mov    r8,r12
   14000e8fc:	mov    DWORD PTR [rsp+0x38],ecx
   14000e900:	mov    rcx,QWORD PTR [rsp+0x80]
   14000e908:	mov    rdx,rsi
   14000e90b:	mov    QWORD PTR [rsp+0x30],rcx
   14000e910:	mov    ecx,DWORD PTR [rsp+0x78]
   14000e914:	mov    DWORD PTR [rsp+0x28],ecx
   14000e918:	mov    rcx,rbx
   14000e91b:	mov    QWORD PTR [rsp+0x20],rdi
   14000e920:	call   rax
   14000e922:	jmp    0x14000e960
   14000e924:	mov    rax,QWORD PTR [rsp+0x80]
   14000e92c:	mov    r9,rbp
   14000e92f:	mov    r8,r12
   14000e932:	mov    QWORD PTR [rsp+0x38],rax
   14000e937:	mov    eax,DWORD PTR [rsp+0x78]
   14000e93b:	mov    rdx,rsi
   14000e93e:	mov    DWORD PTR [rsp+0x30],eax
   14000e942:	movzx  eax,BYTE PTR [rsp+0x88]
   14000e94a:	mov    rcx,rbx
   14000e94d:	mov    BYTE PTR [rsp+0x28],al
   14000e951:	mov    QWORD PTR [rsp+0x20],rdi
   14000e956:	call   0x14000e0e0
   14000e95b:	mov    eax,0x1
   14000e960:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e965:	mov    rbp,QWORD PTR [rsp+0x58]
   14000e96a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000e96f:	mov    rdi,QWORD PTR [rsp+0x68]
   14000e974:	add    rsp,0x40
   14000e978:	pop    r12
   14000e97a:	ret    
   14000e97b:	int3   
   14000e97c:	int3   
   14000e97d:	int3   
   14000e97e:	int3   
   14000e97f:	int3   
   14000e980:	mov    QWORD PTR [rsp+0x8],rbx
   14000e985:	mov    QWORD PTR [rsp+0x10],rsi
   14000e98a:	push   rdi
   14000e98b:	sub    rsp,0x20
   14000e98f:	lea    rax,[rip+0x2a0a]        # 0x1400113a0
   14000e996:	mov    rsi,rdx
   14000e999:	mov    rbx,rcx
   14000e99c:	mov    QWORD PTR [rcx],rax
   14000e99f:	mov    rdi,QWORD PTR [rdx]
   14000e9a2:	test   rdi,rdi
   14000e9a5:	je     0x14000e9ed
   14000e9a7:	or     rcx,0xffffffffffffffff
   14000e9ab:	xor    eax,eax
   14000e9ad:	repnz scas al,BYTE PTR es:[rdi]
   14000e9af:	not    rcx
   14000e9b2:	lea    rdi,[rcx-0x1]
   14000e9b6:	call   0x140006a30
   14000e9bb:	test   rax,rax
   14000e9be:	mov    QWORD PTR [rbx+0x8],rax
   14000e9c2:	je     0x14000e9d3
   14000e9c4:	mov    r8,QWORD PTR [rsi]
   14000e9c7:	lea    rdx,[rdi+0x1]
   14000e9cb:	mov    rcx,rax
   14000e9ce:	call   0x1400087f0
   14000e9d3:	mov    DWORD PTR [rbx+0x10],0x1
   14000e9da:	mov    rax,rbx
   14000e9dd:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e9e2:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e9e7:	add    rsp,0x20
   14000e9eb:	pop    rdi
   14000e9ec:	ret    
   14000e9ed:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e9f2:	mov    rax,rbx
   14000e9f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e9fa:	mov    QWORD PTR [rcx+0x8],0x0
   14000ea02:	mov    DWORD PTR [rcx+0x10],0x1
   14000ea09:	add    rsp,0x20
   14000ea0d:	pop    rdi
   14000ea0e:	ret    
   14000ea0f:	int3   
   14000ea10:	mov    QWORD PTR [rsp+0x10],rbx
   14000ea15:	push   rsi
   14000ea16:	sub    rsp,0x20
   14000ea1a:	lea    rax,[rip+0x297f]        # 0x1400113a0
   14000ea21:	mov    rsi,rdx
   14000ea24:	mov    rbx,rcx
   14000ea27:	mov    QWORD PTR [rcx],rax
   14000ea2a:	mov    eax,DWORD PTR [rdx+0x10]
   14000ea2d:	test   eax,eax
   14000ea2f:	mov    DWORD PTR [rcx+0x10],eax
   14000ea32:	je     0x14000ea9d
   14000ea34:	mov    QWORD PTR [rsp+0x30],rdi
   14000ea39:	mov    rdi,QWORD PTR [rdx+0x8]
   14000ea3d:	test   rdi,rdi
   14000ea40:	je     0x14000ea82
   14000ea42:	or     rcx,0xffffffffffffffff
   14000ea46:	xor    eax,eax
   14000ea48:	repnz scas al,BYTE PTR es:[rdi]
   14000ea4a:	not    rcx
   14000ea4d:	lea    rdi,[rcx-0x1]
   14000ea51:	call   0x140006a30
   14000ea56:	test   rax,rax
   14000ea59:	mov    QWORD PTR [rbx+0x8],rax
   14000ea5d:	je     0x14000ea6f
   14000ea5f:	mov    r8,QWORD PTR [rsi+0x8]
   14000ea63:	lea    rdx,[rdi+0x1]
   14000ea67:	mov    rcx,rax
   14000ea6a:	call   0x1400087f0
   14000ea6f:	mov    rax,rbx
   14000ea72:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ea77:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ea7c:	add    rsp,0x20
   14000ea80:	pop    rsi
   14000ea81:	ret    
   14000ea82:	mov    rdi,QWORD PTR [rsp+0x30]
   14000ea87:	mov    QWORD PTR [rcx+0x8],0x0
   14000ea8f:	mov    rax,rbx
   14000ea92:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ea97:	add    rsp,0x20
   14000ea9b:	pop    rsi
   14000ea9c:	ret    
   14000ea9d:	mov    rax,QWORD PTR [rdx+0x8]
   14000eaa1:	mov    rbx,QWORD PTR [rsp+0x38]
   14000eaa6:	mov    QWORD PTR [rcx+0x8],rax
   14000eaaa:	mov    rax,rcx
   14000eaad:	add    rsp,0x20
   14000eab1:	pop    rsi
   14000eab2:	ret    
   14000eab3:	int3   
   14000eab4:	int3   
   14000eab5:	int3   
   14000eab6:	int3   
   14000eab7:	int3   
   14000eab8:	int3   
   14000eab9:	int3   
   14000eaba:	int3   
   14000eabb:	int3   
   14000eabc:	int3   
   14000eabd:	int3   
   14000eabe:	int3   
   14000eabf:	int3   
   14000eac0:	sub    rsp,0x28
   14000eac4:	cmp    DWORD PTR [rcx+0x10],0x0
   14000eac8:	lea    rax,[rip+0x28d1]        # 0x1400113a0
   14000eacf:	mov    QWORD PTR [rcx],rax
   14000ead2:	je     0x14000eadd
   14000ead4:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ead8:	call   0x140002700
   14000eadd:	add    rsp,0x28
   14000eae1:	ret    
   14000eae2:	int3   
   14000eae3:	int3   
   14000eae4:	int3   
   14000eae5:	int3   
   14000eae6:	int3   
   14000eae7:	int3   
   14000eae8:	int3   
   14000eae9:	int3   
   14000eaea:	int3   
   14000eaeb:	int3   
   14000eaec:	int3   
   14000eaed:	int3   
   14000eaee:	int3   
   14000eaef:	int3   
   14000eaf0:	mov    rax,QWORD PTR [rcx+0x8]
   14000eaf4:	test   rax,rax
   14000eaf7:	jne    0x14000eb00
   14000eaf9:	lea    rax,[rip+0x28b0]        # 0x1400113b0
   14000eb00:	ret    0x0
   14000eb03:	int3   
   14000eb04:	int3   
   14000eb05:	int3   
   14000eb06:	int3   
   14000eb07:	int3   
   14000eb08:	int3   
   14000eb09:	int3   
   14000eb0a:	int3   
   14000eb0b:	int3   
   14000eb0c:	int3   
   14000eb0d:	int3   
   14000eb0e:	int3   
   14000eb0f:	int3   
   14000eb10:	mov    QWORD PTR [rsp+0x8],rbx
   14000eb15:	push   rdi
   14000eb16:	sub    rsp,0x20
   14000eb1a:	cmp    DWORD PTR [rcx+0x10],0x0
   14000eb1e:	lea    rax,[rip+0x287b]        # 0x1400113a0
   14000eb25:	mov    edi,edx
   14000eb27:	mov    QWORD PTR [rcx],rax
   14000eb2a:	mov    rbx,rcx
   14000eb2d:	je     0x14000eb38
   14000eb2f:	mov    rcx,QWORD PTR [rcx+0x8]
   14000eb33:	call   0x140002700
   14000eb38:	test   dil,0x1
   14000eb3c:	je     0x14000eb46
   14000eb3e:	mov    rcx,rbx
   14000eb41:	call   0x140001fa0
   14000eb46:	mov    rax,rbx
   14000eb49:	mov    rbx,QWORD PTR [rsp+0x30]
   14000eb4e:	add    rsp,0x20
   14000eb52:	pop    rdi
   14000eb53:	ret    
   14000eb54:	int3   
   14000eb55:	int3   
   14000eb56:	int3   
   14000eb57:	int3   
   14000eb58:	int3   
   14000eb59:	int3   
   14000eb5a:	int3   
   14000eb5b:	int3   
   14000eb5c:	int3   
   14000eb5d:	int3   
   14000eb5e:	int3   
   14000eb5f:	int3   
   14000eb60:	mov    rax,QWORD PTR [rsp]
   14000eb64:	mov    QWORD PTR [rcx],rax
   14000eb67:	ret    
   14000eb68:	int3   
   14000eb69:	int3   
   14000eb6a:	int3   
   14000eb6b:	int3   
   14000eb6c:	int3   
   14000eb6d:	int3   
   14000eb6e:	int3   
   14000eb6f:	int3   
   14000eb70:	xor    edx,edx
   14000eb72:	mov    eax,0x1
   14000eb77:	test   rcx,rcx
   14000eb7a:	cmove  eax,edx
   14000eb7d:	ret    
   14000eb7e:	jmp    QWORD PTR [rip+0x704]        # 0x14000f288
   14000eb84:	int3   
   14000eb85:	int3   
   14000eb86:	int3   
   14000eb87:	int3   
   14000eb88:	int3   
   14000eb89:	int3   
   14000eb8a:	int3   
   14000eb8b:	int3   
   14000eb8c:	int3   
   14000eb8d:	int3   
   14000eb8e:	int3   
   14000eb8f:	int3   
   14000eb90:	int3   
   14000eb91:	int3   
   14000eb92:	int3   
   14000eb93:	int3   
   14000eb94:	int3   
   14000eb95:	int3   
   14000eb96:	data16 data16 xchg ax,ax
   14000eb9a:	data16 data16 xchg ax,ax
   14000eb9e:	xchg   ax,ax
   14000eba0:	sub    rsp,0x10
   14000eba4:	mov    QWORD PTR [rsp],r10
   14000eba8:	mov    QWORD PTR [rsp+0x8],r11
   14000ebad:	xor    r11,r11
   14000ebb0:	lea    r10,[rsp+0x18]
   14000ebb5:	sub    r10,rax
   14000ebb8:	cmovb  r10,r11
   14000ebbc:	mov    r11,QWORD PTR gs:0x10
   14000ebc5:	cmp    r10,r11
   14000ebc8:	jae    0x14000ebe0
   14000ebca:	and    r10w,0xf000
   14000ebd0:	lea    r11,[r11-0x1000]
   14000ebd7:	mov    BYTE PTR [r11],0x0
   14000ebdb:	cmp    r10,r11
   14000ebde:	jne    0x14000ebd0
   14000ebe0:	mov    r10,QWORD PTR [rsp]
   14000ebe4:	mov    r11,QWORD PTR [rsp+0x8]
   14000ebe9:	add    rsp,0x10
   14000ebed:	ret    
   14000ebee:	int3   
   14000ebef:	int3   
   14000ebf0:	int3   
   14000ebf1:	int3   
   14000ebf2:	int3   
   14000ebf3:	int3   
   14000ebf4:	int3   
   14000ebf5:	int3   
   14000ebf6:	data16 data16 xchg ax,ax
   14000ebfa:	data16 data16 xchg ax,ax
   14000ebfe:	xchg   ax,ax
   14000ec00:	sub    rsp,0x18
   14000ec04:	mov    QWORD PTR [rsp+0x20],rcx
   14000ec09:	mov    QWORD PTR [rsp+0x28],rdx
   14000ec0e:	mov    DWORD PTR [rsp+0x30],r8d
   14000ec13:	mov    rdx,QWORD PTR [rdx]
   14000ec16:	mov    rax,rcx
   14000ec19:	call   0x1400068b0
   14000ec1e:	call   rax
   14000ec20:	call   0x1400068e0
   14000ec25:	mov    rcx,rax
   14000ec28:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ec2d:	mov    rdx,QWORD PTR [rdx]
   14000ec30:	mov    r8d,0x2
   14000ec36:	call   0x1400068b0
   14000ec3b:	mov    QWORD PTR [rsp+0x10],rax
   14000ec40:	add    rsp,0x18
   14000ec44:	ret    
   14000ec45:	int3   
   14000ec46:	int3   
   14000ec47:	int3   
   14000ec48:	sub    rsp,0x28
   14000ec4c:	call   QWORD PTR [rip+0x41e]        # 0x14000f070
   14000ec52:	lea    rcx,[rip+0x737]        # 0x14000f390
   14000ec59:	mov    BYTE PTR [rip+0x6950],0x0        # 0x1400155b0
   14000ec60:	mov    QWORD PTR [rip+0x6939],rcx        # 0x1400155a0
   14000ec67:	lea    rcx,[rip+0xaa]        # 0x14000ed18
   14000ec6e:	mov    QWORD PTR [rip+0x6933],rax        # 0x1400155a8
   14000ec75:	add    rsp,0x28
   14000ec79:	jmp    0x1400026e0
   14000ec7e:	int3   
   14000ec7f:	int3   
   14000ec80:	lea    rcx,[rip+0xc5]        # 0x14000ed4c
   14000ec87:	jmp    0x1400026e0
   14000ec8c:	sub    rsp,0x28
   14000ec90:	lea    rcx,[rip+0x6929]        # 0x1400155c0
   14000ec97:	call   0x140001e94
   14000ec9c:	lea    rcx,[rip+0xb9]        # 0x14000ed5c
   14000eca3:	add    rsp,0x28
   14000eca7:	jmp    0x1400026e0
   14000ecac:	sub    rsp,0x28
   14000ecb0:	xor    edx,edx
   14000ecb2:	lea    rcx,[rip+0x696f]        # 0x140015628
   14000ecb9:	lea    r8d,[rdx+0x28]
   14000ecbd:	call   0x140002760
   14000ecc2:	and    QWORD PTR [rip+0x698e],0x0        # 0x140015658
   14000ecca:	and    DWORD PTR [rip+0x698f],0x0        # 0x140015660
   14000ecd1:	and    DWORD PTR [rip+0x698c],0x0        # 0x140015664
   14000ecd8:	and    QWORD PTR [rip+0x6970],0x0        # 0x140015650
   14000ece0:	lea    rcx,[rip+0x6941]        # 0x140015628
   14000ece7:	mov    DWORD PTR [rip+0x692f],0x48        # 0x140015620
   14000ecf1:	call   0x140001cd4
   14000ecf6:	test   eax,eax
   14000ecf8:	jns    0x14000ed08
   14000ecfa:	and    DWORD PTR [rip+0x691f],0x0        # 0x140015620
   14000ed01:	mov    BYTE PTR [rip+0x7924],0x1        # 0x14001662c
   14000ed08:	lea    rcx,[rip+0x59]        # 0x14000ed68
   14000ed0f:	add    rsp,0x28
   14000ed13:	jmp    0x1400026e0
   14000ed18:	sub    rsp,0x28
   14000ed1c:	cmp    BYTE PTR [rip+0x688d],0x0        # 0x1400155b0
   14000ed23:	lea    rax,[rip+0x666]        # 0x14000f390
   14000ed2a:	mov    QWORD PTR [rip+0x686f],rax        # 0x1400155a0
   14000ed31:	je     0x14000ed45
   14000ed33:	mov    rcx,QWORD PTR [rip+0x686e]        # 0x1400155a8
   14000ed3a:	test   rcx,rcx
   14000ed3d:	je     0x14000ed45
   14000ed3f:	call   QWORD PTR [rip+0x303]        # 0x14000f048
   14000ed45:	add    rsp,0x28
   14000ed49:	ret    
   14000ed4a:	int3   
   14000ed4b:	int3   
   14000ed4c:	lea    rax,[rip+0x665]        # 0x14000f3b8
   14000ed53:	mov    QWORD PTR [rip+0x52a6],rax        # 0x140014000
   14000ed5a:	ret    
   14000ed5b:	int3   
   14000ed5c:	lea    rcx,[rip+0x685d]        # 0x1400155c0
   14000ed63:	jmp    0x140001de0
   14000ed68:	sub    rsp,0x28
   14000ed6c:	mov    rdx,QWORD PTR [rip+0x6855]        # 0x1400155c8
   14000ed73:	lea    rcx,[rip+0x68a6]        # 0x140015620
   14000ed7a:	call   0x140001d28
   14000ed7f:	mov    rcx,QWORD PTR [rip+0x68d2]        # 0x140015658
   14000ed86:	test   rcx,rcx
   14000ed89:	je     0x14000ed98
   14000ed8b:	call   0x140002700
   14000ed90:	and    QWORD PTR [rip+0x68c0],0x0        # 0x140015658
   14000ed98:	and    DWORD PTR [rip+0x68c1],0x0        # 0x140015660
   14000ed9f:	and    DWORD PTR [rip+0x68be],0x0        # 0x140015664
   14000eda6:	add    rsp,0x28
   14000edaa:	ret    
