
68d7f06712dc622880acf9c37f9d08e3c72d48c0016ca1f69f1f386df5f234cf.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x20
   14000100a:	xor    edx,edx
   14000100c:	lea    rcx,[rip+0x86a5]        # 0x1400096b8
   140001013:	lea    r8d,[rdx+0x28]
   140001017:	call   0x1400051ee
   14000101c:	and    DWORD PTR [rip+0x8685],0x0        # 0x1400096a8
   140001023:	lea    rax,[rip+0x8676]        # 0x1400096a0
   14000102a:	and    QWORD PTR [rip+0x867e],0x0        # 0x1400096b0
   140001032:	lea    rcx,[rip+0x867f]        # 0x1400096b8
   140001039:	and    DWORD PTR [rip+0x866c],0x0        # 0x1400096ac
   140001040:	and    QWORD PTR [rip+0x8698],0x0        # 0x1400096e0
   140001048:	mov    QWORD PTR [rip+0x85f9],rax        # 0x140009648
   14000104f:	call   0x140001318
   140001054:	test   eax,eax
   140001056:	jns    0x140001061
   140001058:	mov    BYTE PTR [rip+0x85e1],0x1        # 0x140009640
   14000105f:	jmp    0x14000106b
   140001061:	mov    DWORD PTR [rip+0x863d],0x38        # 0x1400096a8
   14000106b:	call   QWORD PTR [rip+0x4ff7]        # 0x140006068
   140001071:	and    QWORD PTR [rip+0x8677],0x0        # 0x1400096f0
   140001079:	xor    ecx,ecx
   14000107b:	mov    DWORD PTR [rip+0x8667],eax        # 0x1400096e8
   140001081:	mov    DWORD PTR [rip+0x866d],0x1388        # 0x1400096f8
   14000108b:	mov    DWORD PTR [rip+0x8667],0x3e8        # 0x1400096fc
   140001095:	mov    BYTE PTR [rip+0x8664],0x1        # 0x140009700
   14000109c:	mov    BYTE PTR [rip+0x865f],0x0        # 0x140009702
   1400010a3:	call   QWORD PTR [rip+0x9f8f]        # 0x14000b038
   1400010a9:	test   eax,eax
   1400010ab:	jns    0x1400010cf
   1400010ad:	cmp    eax,0x80010106
   1400010b2:	jne    0x1400010c6
   1400010b4:	lea    rcx,[rip+0x55a5]        # 0x140006660
   1400010bb:	call   QWORD PTR [rip+0x4f5f]        # 0x140006020
   1400010c1:	test   rax,rax
   1400010c4:	jne    0x1400010d6
   1400010c6:	mov    BYTE PTR [rip+0x8573],0x1        # 0x140009640
   1400010cd:	jmp    0x14000110f
   1400010cf:	mov    BYTE PTR [rip+0x862c],0x1        # 0x140009702
   1400010d6:	mov    rdi,QWORD PTR [rip+0x86f3]        # 0x1400097d0
   1400010dd:	mov    rax,QWORD PTR [rip+0x86f4]        # 0x1400097d8
   1400010e4:	jmp    0x14000110a
   1400010e6:	mov    rbx,QWORD PTR [rdi]
   1400010e9:	test   rbx,rbx
   1400010ec:	je     0x140001106
   1400010ee:	mov    rbx,QWORD PTR [rbx+0x40]
   1400010f2:	mov    rcx,rbx
   1400010f5:	call   QWORD PTR [rip+0x51bd]        # 0x1400062b8
   1400010fb:	mov    cl,0x1
   1400010fd:	call   rbx
   1400010ff:	mov    rax,QWORD PTR [rip+0x86d2]        # 0x1400097d8
   140001106:	add    rdi,0x8
   14000110a:	cmp    rdi,rax
   14000110d:	jb     0x1400010e6
   14000110f:	lea    rax,[rip+0x55ba]        # 0x1400066d0
   140001116:	lea    rcx,[rip+0x4873]        # 0x140005990
   14000111d:	mov    QWORD PTR [rip+0x857c],rax        # 0x1400096a0
   140001124:	mov    rbx,QWORD PTR [rsp+0x30]
   140001129:	add    rsp,0x20
   14000112d:	pop    rdi
   14000112e:	jmp    0x140004ee4
   140001133:	int3   
   140001134:	int3   
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	rex push rbx
   140001142:	sub    rsp,0x20
   140001146:	xor    edx,edx
   140001148:	lea    rcx,[rip+0x85e9]        # 0x140009738
   14000114f:	lea    r8d,[rdx+0x28]
   140001153:	call   0x1400051ee
   140001158:	and    QWORD PTR [rip+0x8600],0x0        # 0x140009760
   140001160:	lea    rax,[rip+0xffffffffffffee99]        # 0x140000000
   140001167:	and    DWORD PTR [rip+0x85fa],0x0        # 0x140009768
   14000116e:	lea    rcx,[rip+0x85c3]        # 0x140009738
   140001175:	and    DWORD PTR [rip+0x85f0],0x0        # 0x14000976c
   14000117c:	mov    ebx,0x1
   140001181:	mov    QWORD PTR [rip+0x8598],rax        # 0x140009720
   140001188:	mov    QWORD PTR [rip+0x8589],rax        # 0x140009718
   14000118f:	lea    rax,[rip+0x585a]        # 0x1400069f0
   140001196:	mov    QWORD PTR [rip+0x8593],rax        # 0x140009730
   14000119d:	mov    DWORD PTR [rip+0x8569],0x60        # 0x140009710
   1400011a7:	mov    BYTE PTR [rip+0x857b],bl        # 0x140009728
   1400011ad:	mov    DWORD PTR [rip+0x8575],0x800        # 0x14000972c
   1400011b7:	call   0x140001318
   1400011bc:	movzx  ecx,BYTE PTR [rip+0x847d]        # 0x140009640
   1400011c3:	test   eax,eax
   1400011c5:	cmovs  ecx,ebx
   1400011c8:	mov    BYTE PTR [rip+0x8472],cl        # 0x140009640
   1400011ce:	lea    rcx,[rip+0x483b]        # 0x140005a10
   1400011d5:	add    rsp,0x20
   1400011d9:	pop    rbx
   1400011da:	jmp    0x140004ee4
   1400011df:	int3   
   1400011e0:	sub    rsp,0x28
   1400011e4:	xor    edx,edx
   1400011e6:	lea    rcx,[rip+0x858b]        # 0x140009778
   1400011ed:	lea    r8d,[rdx+0x28]
   1400011f1:	call   0x1400051ee
   1400011f6:	and    QWORD PTR [rip+0x85aa],0x0        # 0x1400097a8
   1400011fe:	lea    rcx,[rip+0x8573]        # 0x140009778
   140001205:	and    DWORD PTR [rip+0x85a4],0x0        # 0x1400097b0
   14000120c:	and    DWORD PTR [rip+0x85a1],0x0        # 0x1400097b4
   140001213:	and    QWORD PTR [rip+0x8585],0x0        # 0x1400097a0
   14000121b:	mov    DWORD PTR [rip+0x854b],0x48        # 0x140009770
   140001225:	call   0x140001318
   14000122a:	test   eax,eax
   14000122c:	jns    0x14000123c
   14000122e:	and    DWORD PTR [rip+0x853b],0x0        # 0x140009770
   140001235:	mov    BYTE PTR [rip+0x8404],0x1        # 0x140009640
   14000123c:	lea    rcx,[rip+0x481d]        # 0x140005a60
   140001243:	add    rsp,0x28
   140001247:	jmp    0x140004ee4
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	sub    rsp,0x28
   140001254:	xor    edx,edx
   140001256:	lea    rcx,[rip+0x8583]        # 0x1400097e0
   14000125d:	lea    r8d,[rdx+0x28]
   140001261:	call   0x1400051ee
   140001266:	and    DWORD PTR [rip+0x8553],0x0        # 0x1400097c0
   14000126d:	lea    rax,[rip+0xffffffffffffed8c]        # 0x140000000
   140001274:	mov    QWORD PTR [rip+0x854d],rax        # 0x1400097c8
   14000127b:	lea    rcx,[rip+0x855e]        # 0x1400097e0
   140001282:	lea    rax,[rip+0x62b7]        # 0x140007540
   140001289:	mov    QWORD PTR [rip+0x8540],rax        # 0x1400097d0
   140001290:	lea    rax,[rip+0x62b1]        # 0x140007548
   140001297:	mov    QWORD PTR [rip+0x853a],rax        # 0x1400097d8
   14000129e:	call   0x140001318
   1400012a3:	test   eax,eax
   1400012a5:	jns    0x1400012b0
   1400012a7:	mov    BYTE PTR [rip+0x8392],0x1        # 0x140009640
   1400012ae:	jmp    0x1400012ba
   1400012b0:	mov    DWORD PTR [rip+0x8506],0x48        # 0x1400097c0
   1400012ba:	lea    rcx,[rip+0x488f]        # 0x140005b50
   1400012c1:	add    rsp,0x28
   1400012c5:	jmp    0x140004ee4
   1400012ca:	int3   
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	int3   
   1400012d1:	int3   
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	xor    r9d,r9d
   1400012db:	xor    r8d,r8d
   1400012de:	lea    edx,[r9+0x1]
   1400012e2:	rex.W jmp QWORD PTR [rip+0x4d57]        # 0x140006040
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	sub    rsp,0x28
   1400012f4:	cmp    ecx,0x8007000e
   1400012fa:	mov    eax,0xc0000017
   1400012ff:	mov    edx,0xc000001d
   140001304:	cmovne eax,edx
   140001307:	mov    ecx,eax
   140001309:	call   0x1400012d8
   14000130e:	int3   
   14000130f:	int3   
   140001310:	int3   
   140001311:	int3   
   140001312:	int3   
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	sub    rsp,0x38
   14000131c:	call   QWORD PTR [rip+0x4d06]        # 0x140006028
   140001322:	xor    eax,eax
   140001324:	mov    DWORD PTR [rsp+0x20],eax
   140001328:	jmp    0x140001333
   14000132a:	mov    eax,0x8007000e
   14000132f:	mov    DWORD PTR [rsp+0x20],eax
   140001333:	add    rsp,0x38
   140001337:	ret    
   140001338:	int3   
   140001339:	int3   
   14000133a:	int3   
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	sub    rsp,0x28
   140001344:	call   QWORD PTR [rip+0x4cfe]        # 0x140006048
   14000134a:	mov    ecx,eax
   14000134c:	movzx  eax,ax
   14000134f:	or     eax,0x80070000
   140001354:	test   ecx,ecx
   140001356:	cmovle eax,ecx
   140001359:	add    rsp,0x28
   14000135d:	ret    
   14000135e:	int3   
   14000135f:	int3   
   140001360:	int3   
   140001361:	int3   
   140001362:	int3   
   140001363:	int3   
   140001364:	mov    QWORD PTR [rsp+0x8],rbx
   140001369:	mov    QWORD PTR [rsp+0x10],rsi
   14000136e:	mov    QWORD PTR [rsp+0x18],rdi
   140001373:	push   r14
   140001375:	sub    rsp,0x20
   140001379:	cmp    DWORD PTR [rip+0x8440],0x0        # 0x1400097c0
   140001380:	je     0x1400013e1
   140001382:	mov    rdi,QWORD PTR [rip+0x8447]        # 0x1400097d0
   140001389:	mov    rax,QWORD PTR [rip+0x8448]        # 0x1400097d8
   140001390:	jmp    0x1400013c8
   140001392:	mov    rsi,QWORD PTR [rdi]
   140001395:	test   rsi,rsi
   140001398:	je     0x1400013c4
   14000139a:	mov    r14,QWORD PTR [rsi+0x20]
   14000139e:	test   r14,r14
   1400013a1:	je     0x1400013b8
   1400013a3:	mov    rax,QWORD PTR [r14]
   1400013a6:	mov    rbx,QWORD PTR [rax+0x10]
   1400013aa:	mov    rcx,rbx
   1400013ad:	call   QWORD PTR [rip+0x4f05]        # 0x1400062b8
   1400013b3:	mov    rcx,r14
   1400013b6:	call   rbx
   1400013b8:	and    QWORD PTR [rsi+0x20],0x0
   1400013bd:	mov    rax,QWORD PTR [rip+0x8414]        # 0x1400097d8
   1400013c4:	add    rdi,0x8
   1400013c8:	cmp    rdi,rax
   1400013cb:	jb     0x140001392
   1400013cd:	lea    rcx,[rip+0x840c]        # 0x1400097e0
   1400013d4:	call   QWORD PTR [rip+0x4c86]        # 0x140006060
   1400013da:	and    DWORD PTR [rip+0x83df],0x0        # 0x1400097c0
   1400013e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013e6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400013eb:	mov    rdi,QWORD PTR [rsp+0x40]
   1400013f0:	add    rsp,0x20
   1400013f4:	pop    r14
   1400013f6:	ret    
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    QWORD PTR [rsp+0x10],rbx
   140001405:	mov    QWORD PTR [rsp+0x18],r8
   14000140a:	mov    QWORD PTR [rsp+0x8],rcx
   14000140f:	push   rsi
   140001410:	push   rdi
   140001411:	push   r14
   140001413:	sub    rsp,0x30
   140001417:	mov    rdi,QWORD PTR [rip+0x83b2]        # 0x1400097d0
   14000141e:	xor    esi,esi
   140001420:	mov    rax,QWORD PTR [rip+0x83b1]        # 0x1400097d8
   140001427:	cmp    rdi,rax
   14000142a:	jae    0x14000148e
   14000142c:	mov    r14,QWORD PTR [rdi]
   14000142f:	test   r14,r14
   140001432:	je     0x14000147d
   140001434:	mov    rbx,QWORD PTR [r14+0x38]
   140001438:	mov    rcx,rbx
   14000143b:	call   QWORD PTR [rip+0x4e77]        # 0x1400062b8
   140001441:	call   rbx
   140001443:	mov    rcx,QWORD PTR [r14]
   140001446:	mov    rdx,rax
   140001449:	xor    r8d,r8d
   14000144c:	call   0x140001c2c
   140001451:	mov    esi,eax
   140001453:	test   eax,eax
   140001455:	js     0x140001545
   14000145b:	mov    rbx,QWORD PTR [r14+0x8]
   14000145f:	mov    rcx,rbx
   140001462:	call   QWORD PTR [rip+0x4e50]        # 0x1400062b8
   140001468:	xor    ecx,ecx
   14000146a:	call   rbx
   14000146c:	mov    esi,eax
   14000146e:	test   eax,eax
   140001470:	js     0x140001545
   140001476:	mov    rax,QWORD PTR [rip+0x835b]        # 0x1400097d8
   14000147d:	add    rdi,0x8
   140001481:	cmp    rdi,rax
   140001484:	jb     0x14000142c
   140001486:	test   esi,esi
   140001488:	js     0x140001545
   14000148e:	mov    rcx,QWORD PTR [rip+0x8333]        # 0x1400097c8
   140001495:	lea    r9,[rsp+0x60]
   14000149a:	and    QWORD PTR [rsp+0x68],0x0
   1400014a0:	lea    r8,[rsp+0x68]
   1400014a5:	and    QWORD PTR [rsp+0x60],0x0
   1400014ab:	call   0x140001878
   1400014b0:	mov    esi,eax
   1400014b2:	test   eax,eax
   1400014b4:	js     0x14000151b
   1400014b6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400014bb:	mov    rax,QWORD PTR [rbx]
   1400014be:	mov    rdi,QWORD PTR [rax+0x38]
   1400014c2:	mov    rcx,rdi
   1400014c5:	call   QWORD PTR [rip+0x4ded]        # 0x1400062b8
   1400014cb:	lea    rdx,[rsp+0x50]
   1400014d0:	mov    rcx,rbx
   1400014d3:	call   rdi
   1400014d5:	mov    esi,eax
   1400014d7:	test   eax,eax
   1400014d9:	js     0x14000151b
   1400014db:	mov    rcx,QWORD PTR [rsp+0x50]
   1400014e0:	mov    eax,DWORD PTR [rcx+0x14]
   1400014e3:	mov    r9d,DWORD PTR [rcx+0x10]
   1400014e7:	movzx  r8d,WORD PTR [rcx+0x1a]
   1400014ec:	movzx  edx,WORD PTR [rcx+0x18]
   1400014f0:	mov    DWORD PTR [rsp+0x20],eax
   1400014f4:	call   QWORD PTR [rip+0x4c46]        # 0x140006140
   1400014fa:	mov    rbx,QWORD PTR [rsp+0x60]
   1400014ff:	mov    esi,eax
   140001501:	mov    rax,QWORD PTR [rbx]
   140001504:	mov    rdi,QWORD PTR [rax+0x60]
   140001508:	mov    rcx,rdi
   14000150b:	call   QWORD PTR [rip+0x4da7]        # 0x1400062b8
   140001511:	mov    rdx,QWORD PTR [rsp+0x50]
   140001516:	mov    rcx,rbx
   140001519:	call   rdi
   14000151b:	mov    rbx,QWORD PTR [rsp+0x60]
   140001520:	test   rbx,rbx
   140001523:	je     0x14000153a
   140001525:	mov    rax,QWORD PTR [rbx]
   140001528:	mov    rdi,QWORD PTR [rax+0x10]
   14000152c:	mov    rcx,rdi
   14000152f:	call   QWORD PTR [rip+0x4d83]        # 0x1400062b8
   140001535:	mov    rcx,rbx
   140001538:	call   rdi
   14000153a:	mov    rcx,QWORD PTR [rsp+0x68]
   14000153f:	call   QWORD PTR [rip+0x4bdb]        # 0x140006120
   140001545:	mov    eax,esi
   140001547:	mov    rbx,QWORD PTR [rsp+0x58]
   14000154c:	add    rsp,0x30
   140001550:	pop    r14
   140001552:	pop    rdi
   140001553:	pop    rsi
   140001554:	ret    
   140001555:	int3   
   140001556:	int3   
   140001557:	int3   
   140001558:	int3   
   140001559:	int3   
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	mov    QWORD PTR [rsp+0x8],rbx
   140001561:	mov    QWORD PTR [rsp+0x10],rsi
   140001566:	mov    QWORD PTR [rsp+0x18],rdi
   14000156b:	push   r14
   14000156d:	sub    rsp,0x20
   140001571:	lea    rsi,[rcx+0x8]
   140001575:	mov    rdi,rcx
   140001578:	cmp    DWORD PTR [rsi],0x0
   14000157b:	je     0x1400015ed
   14000157d:	cmp    QWORD PTR [rcx+0x10],0x0
   140001582:	je     0x1400015c2
   140001584:	test   rsi,rsi
   140001587:	je     0x140001603
   140001589:	mov    r14,QWORD PTR [rsi+0x8]
   14000158d:	test   r14,r14
   140001590:	je     0x1400015b8
   140001592:	mov    rbx,QWORD PTR [r14]
   140001595:	mov    rcx,rbx
   140001598:	call   QWORD PTR [rip+0x4d1a]        # 0x1400062b8
   14000159e:	mov    rcx,QWORD PTR [r14+0x8]
   1400015a2:	call   rbx
   1400015a4:	mov    rbx,QWORD PTR [r14+0x10]
   1400015a8:	mov    rcx,r14
   1400015ab:	call   0x1400049e4
   1400015b0:	mov    r14,rbx
   1400015b3:	test   rbx,rbx
   1400015b6:	jne    0x140001592
   1400015b8:	and    QWORD PTR [rsi+0x8],0x0
   1400015bd:	and    QWORD PTR [rdi+0x10],0x0
   1400015c2:	mov    r14,QWORD PTR [rdi+0x40]
   1400015c6:	test   r14,r14
   1400015c9:	je     0x1400015e0
   1400015cb:	mov    rax,QWORD PTR [r14]
   1400015ce:	mov    rbx,QWORD PTR [rax+0x10]
   1400015d2:	mov    rcx,rbx
   1400015d5:	call   QWORD PTR [rip+0x4cdd]        # 0x1400062b8
   1400015db:	mov    rcx,r14
   1400015de:	call   rbx
   1400015e0:	lea    rcx,[rdi+0x18]
   1400015e4:	call   QWORD PTR [rip+0x4a76]        # 0x140006060
   1400015ea:	and    DWORD PTR [rsi],0x0
   1400015ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015f2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400015f7:	mov    rdi,QWORD PTR [rsp+0x40]
   1400015fc:	add    rsp,0x20
   140001600:	pop    r14
   140001602:	ret    
   140001603:	mov    ecx,0xc0000005
   140001608:	call   0x1400012d8
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	int3   
   140001611:	int3   
   140001612:	int3   
   140001613:	int3   
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	int3   
   140001619:	int3   
   14000161a:	int3   
   14000161b:	int3   
   14000161c:	int3   
   14000161d:	int3   
   14000161e:	int3   
   14000161f:	int3   
   140001620:	mov    eax,0x1
   140001625:	lock xadd DWORD PTR [rcx+0xc],eax
   14000162a:	inc    eax
   14000162c:	ret    
   14000162d:	int3   
   14000162e:	int3   
   14000162f:	int3   
   140001630:	int3   
   140001631:	int3   
   140001632:	int3   
   140001633:	int3   
   140001634:	int3   
   140001635:	int3   
   140001636:	int3   
   140001637:	int3   
   140001638:	int3   
   140001639:	int3   
   14000163a:	int3   
   14000163b:	int3   
   14000163c:	int3   
   14000163d:	int3   
   14000163e:	int3   
   14000163f:	int3   
   140001640:	mov    eax,DWORD PTR [rcx+0xc]
   140001643:	ret    
   140001644:	int3   
   140001645:	int3   
   140001646:	int3   
   140001647:	int3   
   140001648:	int3   
   140001649:	int3   
   14000164a:	int3   
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	mov    QWORD PTR [rsp+0x8],rbx
   140001655:	mov    QWORD PTR [rsp+0x10],rsi
   14000165a:	push   rdi
   14000165b:	sub    rsp,0x30
   14000165f:	mov    rbx,rdx
   140001662:	test   rdx,rdx
   140001665:	jne    0x14000166e
   140001667:	mov    eax,0x80004003
   14000166c:	jmp    0x1400016be
   14000166e:	xor    esi,esi
   140001670:	lea    rdi,[rcx+0x40]
   140001674:	cmp    QWORD PTR [rdi],rsi
   140001677:	jne    0x14000169e
   140001679:	lea    r9,[rip+0x5140]        # 0x1400067c0
   140001680:	mov    QWORD PTR [rsp+0x20],rdi
   140001685:	xor    edx,edx
   140001687:	lea    r8d,[rsi+0x1]
   14000168b:	lea    rcx,[rip+0x5206]        # 0x140006898
   140001692:	call   QWORD PTR [rip+0x99b8]        # 0x14000b050
   140001698:	mov    esi,eax
   14000169a:	test   eax,eax
   14000169c:	js     0x1400016bc
   14000169e:	mov    rcx,QWORD PTR [rdi]
   1400016a1:	mov    QWORD PTR [rbx],rcx
   1400016a4:	mov    rdi,QWORD PTR [rdi]
   1400016a7:	mov    rdx,QWORD PTR [rdi]
   1400016aa:	mov    rbx,QWORD PTR [rdx+0x8]
   1400016ae:	mov    rcx,rbx
   1400016b1:	call   QWORD PTR [rip+0x4c01]        # 0x1400062b8
   1400016b7:	mov    rcx,rdi
   1400016ba:	call   rbx
   1400016bc:	mov    eax,esi
   1400016be:	mov    rbx,QWORD PTR [rsp+0x40]
   1400016c3:	mov    rsi,QWORD PTR [rsp+0x48]
   1400016c8:	add    rsp,0x30
   1400016cc:	pop    rdi
   1400016cd:	ret    
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	int3   
   1400016d1:	int3   
   1400016d2:	int3   
   1400016d3:	int3   
   1400016d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400016d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400016de:	mov    QWORD PTR [rsp+0x18],rsi
   1400016e3:	push   rdi
   1400016e4:	sub    rsp,0x20
   1400016e8:	mov    rsi,rcx
   1400016eb:	mov    rdi,rdx
   1400016ee:	movzx  ecx,WORD PTR [rcx]
   1400016f1:	call   QWORD PTR [rip+0x4a81]        # 0x140006178
   1400016f7:	movzx  ecx,WORD PTR [rdi]
   1400016fa:	mov    rbx,rax
   1400016fd:	call   QWORD PTR [rip+0x4a75]        # 0x140006178
   140001703:	movabs rbp,0x100000201
   14000170d:	mov    r8,rax
   140001710:	test   bx,bx
   140001713:	je     0x14000176c
   140001715:	cmp    bx,r8w
   140001719:	jne    0x14000175d
   14000171b:	cmp    bx,0x20
   14000171f:	je     0x140001763
   140001721:	cmp    bx,0x9
   140001725:	je     0x14000175d
   140001727:	mov    rcx,rsi
   14000172a:	call   QWORD PTR [rip+0x4a60]        # 0x140006190
   140001730:	mov    rcx,rdi
   140001733:	mov    rsi,rax
   140001736:	call   QWORD PTR [rip+0x4a54]        # 0x140006190
   14000173c:	movzx  ecx,WORD PTR [rsi]
   14000173f:	mov    rdi,rax
   140001742:	call   QWORD PTR [rip+0x4a30]        # 0x140006178
   140001748:	movzx  ecx,WORD PTR [rdi]
   14000174b:	movzx  ebx,ax
   14000174e:	call   QWORD PTR [rip+0x4a24]        # 0x140006178
   140001754:	movzx  r8d,ax
   140001758:	test   bx,bx
   14000175b:	jne    0x140001715
   14000175d:	cmp    bx,0x20
   140001761:	ja     0x140001781
   140001763:	movzx  eax,bx
   140001766:	bt     rbp,rax
   14000176a:	jae    0x140001781
   14000176c:	cmp    r8w,0x20
   140001771:	ja     0x140001781
   140001773:	movzx  eax,r8w
   140001777:	bt     rbp,rax
   14000177b:	jae    0x140001781
   14000177d:	xor    eax,eax
   14000177f:	jmp    0x14000178c
   140001781:	cmp    bx,r8w
   140001785:	sbb    eax,eax
   140001787:	and    eax,0xfffffffe
   14000178a:	inc    eax
   14000178c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001791:	mov    rbp,QWORD PTR [rsp+0x38]
   140001796:	mov    rsi,QWORD PTR [rsp+0x40]
   14000179b:	add    rsp,0x20
   14000179f:	pop    rdi
   1400017a0:	ret    
   1400017a1:	int3   
   1400017a2:	int3   
   1400017a3:	int3   
   1400017a4:	int3   
   1400017a5:	int3   
   1400017a6:	int3   
   1400017a7:	int3   
   1400017a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400017ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400017b2:	push   rdi
   1400017b3:	sub    rsp,0x20
   1400017b7:	cmp    QWORD PTR [rcx+0x8],0x0
   1400017bc:	mov    rsi,rdx
   1400017bf:	mov    rbx,rcx
   1400017c2:	jne    0x14000181e
   1400017c4:	cmp    QWORD PTR [rcx+0x10],0x0
   1400017c9:	jne    0x14000181e
   1400017cb:	lea    rcx,[rip+0x4d5e]        # 0x140006530
   1400017d2:	call   QWORD PTR [rip+0x4848]        # 0x140006020
   1400017d8:	test   rax,rax
   1400017db:	je     0x1400017f3
   1400017dd:	lea    rdx,[rip+0x4da4]        # 0x140006588
   1400017e4:	mov    rcx,rax
   1400017e7:	call   QWORD PTR [rip+0x4863]        # 0x140006050
   1400017ed:	mov    QWORD PTR [rbx+0x8],rax
   1400017f1:	jmp    0x14000181e
   1400017f3:	xor    r8d,r8d
   1400017f6:	lea    rcx,[rip+0x4d9b]        # 0x140006598
   1400017fd:	xor    edx,edx
   1400017ff:	call   QWORD PTR [rip+0x4803]        # 0x140006008
   140001805:	test   rax,rax
   140001808:	je     0x14000181e
   14000180a:	lea    rdx,[rip+0x4da7]        # 0x1400065b8
   140001811:	mov    rcx,rax
   140001814:	call   QWORD PTR [rip+0x4836]        # 0x140006050
   14000181a:	mov    QWORD PTR [rbx+0x10],rax
   14000181e:	mov    rdi,QWORD PTR [rbx+0x8]
   140001822:	test   rdi,rdi
   140001825:	je     0x140001840
   140001827:	mov    rcx,rdi
   14000182a:	call   QWORD PTR [rip+0x4a88]        # 0x1400062b8
   140001830:	mov    rcx,QWORD PTR [rbx]
   140001833:	xor    r9d,r9d
   140001836:	xor    r8d,r8d
   140001839:	mov    rdx,rsi
   14000183c:	call   rdi
   14000183e:	jmp    0x140001862
   140001840:	mov    rdi,QWORD PTR [rbx+0x10]
   140001844:	test   rdi,rdi
   140001847:	je     0x14000185c
   140001849:	mov    rcx,rdi
   14000184c:	call   QWORD PTR [rip+0x4a66]        # 0x1400062b8
   140001852:	mov    rcx,QWORD PTR [rbx]
   140001855:	mov    rdx,rsi
   140001858:	call   rdi
   14000185a:	jmp    0x140001862
   14000185c:	call   QWORD PTR [rip+0x47e6]        # 0x140006048
   140001862:	mov    rbx,QWORD PTR [rsp+0x30]
   140001867:	mov    rsi,QWORD PTR [rsp+0x38]
   14000186c:	add    rsp,0x20
   140001870:	pop    rdi
   140001871:	ret    
   140001872:	int3   
   140001873:	int3   
   140001874:	int3   
   140001875:	int3   
   140001876:	int3   
   140001877:	int3   
   140001878:	rex push rbx
   14000187a:	push   rbp
   14000187b:	push   rsi
   14000187c:	push   rdi
   14000187d:	push   r14
   14000187f:	sub    rsp,0x260
   140001886:	mov    rax,QWORD PTR [rip+0x777b]        # 0x140009008
   14000188d:	xor    rax,rsp
   140001890:	mov    QWORD PTR [rsp+0x250],rax
   140001898:	xor    ebp,ebp
   14000189a:	mov    rsi,r9
   14000189d:	mov    r14,r8
   1400018a0:	test   r8,r8
   1400018a3:	je     0x1400019d4
   1400018a9:	test   r9,r9
   1400018ac:	je     0x1400019d4
   1400018b2:	mov    QWORD PTR [r8],rbp
   1400018b5:	lea    rdx,[rsp+0x30]
   1400018ba:	mov    r8d,0x104
   1400018c0:	mov    QWORD PTR [r9],rbp
   1400018c3:	call   QWORD PTR [rip+0x476f]        # 0x140006038
   1400018c9:	test   eax,eax
   1400018cb:	jne    0x1400018d9
   1400018cd:	call   0x140001340
   1400018d2:	mov    ebx,eax
   1400018d4:	jmp    0x1400019d0
   1400018d9:	cmp    eax,0x104
   1400018de:	jne    0x1400018ea
   1400018e0:	mov    ebx,0x8007007a
   1400018e5:	jmp    0x1400019d0
   1400018ea:	movzx  eax,WORD PTR [rsp+0x30]
   1400018ef:	lea    rcx,[rsp+0x30]
   1400018f4:	mov    rdi,rbp
   1400018f7:	jmp    0x14000191a
   1400018f9:	movzx  edx,ax
   1400018fc:	cmp    edx,0x2e
   1400018ff:	je     0x14000190b
   140001901:	cmp    edx,0x5c
   140001904:	jne    0x14000190e
   140001906:	mov    rdi,rbp
   140001909:	jmp    0x14000190e
   14000190b:	mov    rdi,rcx
   14000190e:	call   QWORD PTR [rip+0x487c]        # 0x140006190
   140001914:	mov    rcx,rax
   140001917:	movzx  eax,WORD PTR [rax]
   14000191a:	test   ax,ax
   14000191d:	jne    0x1400018f9
   14000191f:	test   rdi,rdi
   140001922:	mov    rdx,rsi
   140001925:	cmove  rdi,rcx
   140001929:	lea    rcx,[rsp+0x30]
   14000192e:	call   QWORD PTR [rip+0x47e4]        # 0x140006118
   140001934:	mov    ebx,eax
   140001936:	test   eax,eax
   140001938:	jns    0x1400019b7
   14000193a:	movzx  eax,WORD PTR [rip+0x4c97]        # 0x1400065d8
   140001941:	mov    rcx,rdi
   140001944:	movsd  xmm0,QWORD PTR [rip+0x4c84]        # 0x1400065d0
   14000194c:	mov    WORD PTR [rsp+0x28],ax
   140001951:	lea    rax,[rsp+0x30]
   140001956:	sub    rcx,rax
   140001959:	movsd  QWORD PTR [rsp+0x20],xmm0
   14000195f:	sar    rcx,1
   140001962:	lea    rax,[rcx+0x5]
   140001966:	cmp    rax,0x104
   14000196c:	jbe    0x140001975
   14000196e:	mov    ebx,0x80004005
   140001973:	jmp    0x1400019d0
   140001975:	mov    edx,0x10e
   14000197a:	lea    r8,[rsp+0x20]
   14000197f:	sub    rdx,rcx
   140001982:	mov    rcx,rdi
   140001985:	call   QWORD PTR [rip+0x4835]        # 0x1400061c0
   14000198b:	test   eax,eax
   14000198d:	je     0x1400019a3
   14000198f:	cmp    eax,0xc
   140001992:	je     0x140001a0d
   140001994:	cmp    eax,0x16
   140001997:	je     0x140001a02
   140001999:	cmp    eax,0x22
   14000199c:	je     0x140001a02
   14000199e:	cmp    eax,0x50
   1400019a1:	jne    0x1400019f7
   1400019a3:	mov    rdx,rsi
   1400019a6:	lea    rcx,[rsp+0x30]
   1400019ab:	call   QWORD PTR [rip+0x4767]        # 0x140006118
   1400019b1:	mov    ebx,eax
   1400019b3:	test   eax,eax
   1400019b5:	js     0x1400019d0
   1400019b7:	lea    rcx,[rsp+0x30]
   1400019bc:	call   QWORD PTR [rip+0x476e]        # 0x140006130
   1400019c2:	test   rax,rax
   1400019c5:	mov    QWORD PTR [r14],rax
   1400019c8:	mov    ecx,0x8007000e
   1400019cd:	cmove  ebx,ecx
   1400019d0:	mov    eax,ebx
   1400019d2:	jmp    0x1400019d9
   1400019d4:	mov    eax,0x80004003
   1400019d9:	mov    rcx,QWORD PTR [rsp+0x250]
   1400019e1:	xor    rcx,rsp
   1400019e4:	call   0x140004e10
   1400019e9:	add    rsp,0x260
   1400019f0:	pop    r14
   1400019f2:	pop    rdi
   1400019f3:	pop    rsi
   1400019f4:	pop    rbp
   1400019f5:	pop    rbx
   1400019f6:	ret    
   1400019f7:	mov    ecx,0x80004005
   1400019fc:	call   0x1400012f0
   140001a01:	int3   
   140001a02:	mov    ecx,0x80070057
   140001a07:	call   0x1400012f0
   140001a0c:	int3   
   140001a0d:	mov    ecx,0x8007000e
   140001a12:	call   0x1400012f0
   140001a17:	int3   
   140001a18:	int3   
   140001a19:	int3   
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	int3   
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	mov    QWORD PTR [rsp+0x10],rbx
   140001a25:	mov    QWORD PTR [rsp+0x18],rsi
   140001a2a:	push   rbp
   140001a2b:	push   r14
   140001a2d:	push   r15
   140001a2f:	lea    rbp,[rsp-0x170]
   140001a37:	sub    rsp,0x270
   140001a3e:	mov    rax,QWORD PTR [rip+0x75c3]        # 0x140009008
   140001a45:	xor    rax,rsp
   140001a48:	mov    QWORD PTR [rbp+0x160],rax
   140001a4f:	xor    r15d,r15d
   140001a52:	lea    r9,[rsp+0x38]
   140001a57:	lea    r8,[rsp+0x30]
   140001a5c:	mov    QWORD PTR [rsp+0x30],r15
   140001a61:	mov    QWORD PTR [rsp+0x38],r15
   140001a66:	call   0x140001878
   140001a6b:	mov    r14d,eax
   140001a6e:	test   eax,eax
   140001a70:	js     0x140001baa
   140001a76:	mov    rbx,QWORD PTR [rsp+0x38]
   140001a7b:	mov    QWORD PTR [rsp+0x40],r15
   140001a80:	mov    rax,QWORD PTR [rbx]
   140001a83:	mov    rsi,QWORD PTR [rax+0x48]
   140001a87:	mov    rcx,rsi
   140001a8a:	call   QWORD PTR [rip+0x4828]        # 0x1400062b8
   140001a90:	lea    rax,[rsp+0x40]
   140001a95:	xor    r9d,r9d
   140001a98:	mov    QWORD PTR [rsp+0x28],rax
   140001a9d:	xor    r8d,r8d
   140001aa0:	or     edx,0xffffffff
   140001aa3:	mov    QWORD PTR [rsp+0x20],r15
   140001aa8:	mov    rcx,rbx
   140001aab:	call   rsi
   140001aad:	test   eax,eax
   140001aaf:	js     0x140001b89
   140001ab5:	cmp    QWORD PTR [rsp+0x40],r15
   140001aba:	je     0x140001b89
   140001ac0:	mov    rcx,QWORD PTR [rsp+0x30]
   140001ac5:	call   QWORD PTR [rip+0x466d]        # 0x140006138
   140001acb:	mov    r8,QWORD PTR [rsp+0x30]
   140001ad0:	lea    rcx,[rsp+0x50]
   140001ad5:	mov    r14d,0x104
   140001adb:	mov    r9d,eax
   140001ade:	mov    edx,r14d
   140001ae1:	call   QWORD PTR [rip+0x46f9]        # 0x1400061e0
   140001ae7:	test   eax,eax
   140001ae9:	je     0x140001b0f
   140001aeb:	cmp    eax,0xc
   140001aee:	je     0x140001c15
   140001af4:	cmp    eax,0x16
   140001af7:	je     0x140001c0a
   140001afd:	cmp    eax,0x22
   140001b00:	je     0x140001c0a
   140001b06:	cmp    eax,0x50
   140001b09:	jne    0x140001bff
   140001b0f:	lea    rbx,[rsp+0x50]
   140001b14:	mov    WORD PTR [rbp+0x156],r15w
   140001b1c:	lea    rsi,[rsp+0x50]
   140001b21:	cmp    WORD PTR [rsp+0x50],r15w
   140001b27:	je     0x140001b5b
   140001b29:	mov    rcx,rsi
   140001b2c:	call   QWORD PTR [rip+0x465e]        # 0x140006190
   140001b32:	movzx  ecx,WORD PTR [rsi]
   140001b35:	sub    cx,0x2f
   140001b39:	cmp    cx,0x2d
   140001b3d:	ja     0x140001b52
   140001b3f:	movabs rdx,0x200000000801
   140001b49:	bt     rdx,rcx
   140001b4d:	jae    0x140001b52
   140001b4f:	mov    rbx,rax
   140001b52:	mov    rsi,rax
   140001b55:	cmp    WORD PTR [rax],r15w
   140001b59:	jne    0x140001b29
   140001b5b:	lea    rax,[rsp+0x50]
   140001b60:	sub    rbx,rax
   140001b63:	sar    rbx,1
   140001b66:	cmp    ebx,r14d
   140001b69:	jae    0x140001b82
   140001b6b:	mov    eax,ebx
   140001b6d:	add    rax,rax
   140001b70:	cmp    rax,0x208
   140001b76:	jae    0x140001c20
   140001b7c:	mov    WORD PTR [rsp+rax*1+0x50],r15w
   140001b82:	lea    r8,[rsp+0x50]
   140001b87:	jmp    0x140001b8c
   140001b89:	xor    r8d,r8d
   140001b8c:	mov    rdx,QWORD PTR [rsp+0x30]
   140001b91:	mov    rcx,QWORD PTR [rsp+0x38]
   140001b96:	call   QWORD PTR [rip+0x458c]        # 0x140006128
   140001b9c:	mov    rcx,QWORD PTR [rsp+0x40]
   140001ba1:	mov    r14d,eax
   140001ba4:	call   QWORD PTR [rip+0x4576]        # 0x140006120
   140001baa:	mov    rbx,QWORD PTR [rsp+0x38]
   140001baf:	test   rbx,rbx
   140001bb2:	je     0x140001bc9
   140001bb4:	mov    rax,QWORD PTR [rbx]
   140001bb7:	mov    rsi,QWORD PTR [rax+0x10]
   140001bbb:	mov    rcx,rsi
   140001bbe:	call   QWORD PTR [rip+0x46f4]        # 0x1400062b8
   140001bc4:	mov    rcx,rbx
   140001bc7:	call   rsi
   140001bc9:	mov    rcx,QWORD PTR [rsp+0x30]
   140001bce:	call   QWORD PTR [rip+0x454c]        # 0x140006120
   140001bd4:	mov    eax,r14d
   140001bd7:	mov    rcx,QWORD PTR [rbp+0x160]
   140001bde:	xor    rcx,rsp
   140001be1:	call   0x140004e10
   140001be6:	lea    r11,[rsp+0x270]
   140001bee:	mov    rbx,QWORD PTR [r11+0x28]
   140001bf2:	mov    rsi,QWORD PTR [r11+0x30]
   140001bf6:	mov    rsp,r11
   140001bf9:	pop    r15
   140001bfb:	pop    r14
   140001bfd:	pop    rbp
   140001bfe:	ret    
   140001bff:	mov    ecx,0x80004005
   140001c04:	call   0x1400012f0
   140001c09:	int3   
   140001c0a:	mov    ecx,0x80070057
   140001c0f:	call   0x1400012f0
   140001c14:	int3   
   140001c15:	mov    ecx,0x8007000e
   140001c1a:	call   0x1400012f0
   140001c1f:	int3   
   140001c20:	call   0x1400050d8
   140001c25:	int3   
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	int3   
   140001c29:	int3   
   140001c2a:	int3   
   140001c2b:	int3   
   140001c2c:	mov    QWORD PTR [rsp+0x18],rbx
   140001c31:	push   rbp
   140001c32:	push   rsi
   140001c33:	push   rdi
   140001c34:	push   r12
   140001c36:	push   r13
   140001c38:	push   r14
   140001c3a:	push   r15
   140001c3c:	lea    rbp,[rsp-0x140]
   140001c44:	sub    rsp,0x240
   140001c4b:	mov    rax,QWORD PTR [rip+0x73b6]        # 0x140009008
   140001c52:	xor    rax,rsp
   140001c55:	mov    QWORD PTR [rbp+0x130],rax
   140001c5c:	xor    r13d,r13d
   140001c5f:	mov    r12d,r8d
   140001c62:	mov    ebx,r13d
   140001c65:	mov    rsi,rdx
   140001c68:	mov    QWORD PTR [rsp+0x68],rbx
   140001c6d:	mov    r14,rcx
   140001c70:	test   rdx,rdx
   140001c73:	je     0x140002090
   140001c79:	cmp    DWORD PTR [rcx],r13d
   140001c7c:	jne    0x140001ca3
   140001c7e:	mov    eax,DWORD PTR [rip+0x4da0]        # 0x140006a24
   140001c84:	cmp    DWORD PTR [rcx+0x4],eax
   140001c87:	jne    0x140001ca3
   140001c89:	mov    eax,DWORD PTR [rip+0x4d99]        # 0x140006a28
   140001c8f:	cmp    DWORD PTR [rcx+0x8],eax
   140001c92:	jne    0x140001ca3
   140001c94:	mov    eax,DWORD PTR [rip+0x4d92]        # 0x140006a2c
   140001c9a:	cmp    DWORD PTR [rcx+0xc],eax
   140001c9d:	je     0x140002090
   140001ca3:	lea    rax,[rsp+0x68]
   140001ca8:	mov    r15d,0x1
   140001cae:	mov    r8d,r15d
   140001cb1:	mov    QWORD PTR [rsp+0x20],rax
   140001cb6:	lea    r9,[rip+0x4a53]        # 0x140006710
   140001cbd:	xor    edx,edx
   140001cbf:	lea    rcx,[rip+0x4d3a]        # 0x140006a00
   140001cc6:	call   QWORD PTR [rip+0x9384]        # 0x14000b050
   140001ccc:	test   eax,eax
   140001cce:	js     0x14000208b
   140001cd4:	cmp    DWORD PTR [rsi],r13d
   140001cd7:	je     0x140001d66
   140001cdd:	mov    rax,QWORD PTR [rsi+0x8]
   140001ce1:	mov    rbx,QWORD PTR [rsp+0x68]
   140001ce6:	movups xmm0,XMMWORD PTR [rax]
   140001ce9:	movdqu XMMWORD PTR [rbp-0x68],xmm0
   140001cee:	mov    rax,QWORD PTR [rbx]
   140001cf1:	test   r12d,r12d
   140001cf4:	je     0x140001d2c
   140001cf6:	cmp    DWORD PTR [rsi],r15d
   140001cf9:	jne    0x140001d01
   140001cfb:	mov    rdi,QWORD PTR [rax+0x28]
   140001cff:	jmp    0x140001d05
   140001d01:	mov    rdi,QWORD PTR [rax+0x38]
   140001d05:	mov    rcx,rdi
   140001d08:	call   QWORD PTR [rip+0x45aa]        # 0x1400062b8
   140001d0e:	lea    r9,[rbp-0x68]
   140001d12:	mov    r8d,r15d
   140001d15:	mov    rdx,r14
   140001d18:	mov    rcx,rbx
   140001d1b:	call   rdi
   140001d1d:	mov    r15d,eax
   140001d20:	test   eax,eax
   140001d22:	js     0x140001d5c
   140001d24:	mov    r15d,0x1
   140001d2a:	jmp    0x140001d53
   140001d2c:	cmp    DWORD PTR [rsi],r15d
   140001d2f:	jne    0x140001d37
   140001d31:	mov    rdi,QWORD PTR [rax+0x30]
   140001d35:	jmp    0x140001d3b
   140001d37:	mov    rdi,QWORD PTR [rax+0x40]
   140001d3b:	mov    rcx,rdi
   140001d3e:	call   QWORD PTR [rip+0x4574]        # 0x1400062b8
   140001d44:	lea    r9,[rbp-0x68]
   140001d48:	mov    r8d,r15d
   140001d4b:	mov    rdx,r14
   140001d4e:	mov    rcx,rbx
   140001d51:	call   rdi
   140001d53:	add    rsi,0x10
   140001d57:	jmp    0x140001cd4
   140001d5c:	mov    rbx,QWORD PTR [rsp+0x68]
   140001d61:	jmp    0x140002093
   140001d66:	test   r12d,r12d
   140001d69:	jne    0x14000208b
   140001d6f:	lea    r8d,[r12+0x40]
   140001d74:	mov    rcx,r14
   140001d77:	lea    rdx,[rbp+0xb0]
   140001d7e:	call   QWORD PTR [rip+0x92bc]        # 0x14000b040
   140001d84:	mov    ebx,0x80
   140001d89:	lea    r8,[rip+0x4850]        # 0x1400065e0
   140001d90:	mov    edx,ebx
   140001d92:	lea    rcx,[rbp-0x50]
   140001d96:	call   QWORD PTR [rip+0x4424]        # 0x1400061c0
   140001d9c:	lea    r14d,[r12+0xc]
   140001da1:	lea    r12d,[rbx-0x6a]
   140001da5:	lea    r15d,[rbx-0x30]
   140001da9:	test   eax,eax
   140001dab:	je     0x140001dd1
   140001dad:	cmp    eax,r14d
   140001db0:	je     0x1400020f0
   140001db6:	cmp    eax,r12d
   140001db9:	je     0x1400020e5
   140001dbf:	cmp    eax,0x22
   140001dc2:	je     0x1400020e5
   140001dc8:	cmp    eax,r15d
   140001dcb:	jne    0x1400020da
   140001dd1:	lea    r8,[rbp+0xb0]
   140001dd8:	mov    rdx,rbx
   140001ddb:	lea    rcx,[rbp-0x50]
   140001ddf:	call   QWORD PTR [rip+0x43e3]        # 0x1400061c8
   140001de5:	test   eax,eax
   140001de7:	je     0x140001e0d
   140001de9:	cmp    eax,r14d
   140001dec:	je     0x140002111
   140001df2:	cmp    eax,r12d
   140001df5:	je     0x140002106
   140001dfb:	cmp    eax,0x22
   140001dfe:	je     0x140002106
   140001e04:	cmp    eax,r15d
   140001e07:	jne    0x1400020fb
   140001e0d:	lea    r8,[rip+0x47dc]        # 0x1400065f0
   140001e14:	mov    rdx,rbx
   140001e17:	lea    rcx,[rbp-0x50]
   140001e1b:	call   QWORD PTR [rip+0x43a7]        # 0x1400061c8
   140001e21:	test   eax,eax
   140001e23:	je     0x140001e49
   140001e25:	cmp    eax,r14d
   140001e28:	je     0x140002132
   140001e2e:	cmp    eax,r12d
   140001e31:	je     0x140002127
   140001e37:	cmp    eax,0x22
   140001e3a:	je     0x140002127
   140001e40:	cmp    eax,r15d
   140001e43:	jne    0x14000211c
   140001e49:	mov    rdi,0xffffffff80000000
   140001e50:	mov    QWORD PTR [rbp-0x78],r13
   140001e54:	lea    rax,[rsp+0x78]
   140001e59:	mov    QWORD PTR [rbp-0x80],rdi
   140001e5d:	mov    rcx,rdi
   140001e60:	mov    QWORD PTR [rbp-0x70],r13
   140001e64:	mov    r9d,0x20019
   140001e6a:	mov    DWORD PTR [rsp+0x60],r13d
   140001e6f:	xor    r8d,r8d
   140001e72:	mov    QWORD PTR [rsp+0x78],r13
   140001e77:	lea    rdx,[rbp-0x50]
   140001e7b:	mov    QWORD PTR [rsp+0x20],rax
   140001e80:	mov    rbx,r13
   140001e83:	call   QWORD PTR [rip+0x917f]        # 0x14000b008
   140001e89:	test   eax,eax
   140001e8b:	jne    0x140001f01
   140001e8d:	mov    rbx,QWORD PTR [rsp+0x78]
   140001e92:	lea    rax,[rsp+0x60]
   140001e97:	mov    QWORD PTR [rsp+0x58],r13
   140001e9c:	xor    r9d,r9d
   140001e9f:	mov    QWORD PTR [rsp+0x50],r13
   140001ea4:	xor    r8d,r8d
   140001ea7:	mov    QWORD PTR [rsp+0x48],r13
   140001eac:	xor    edx,edx
   140001eae:	mov    QWORD PTR [rsp+0x40],r13
   140001eb3:	mov    rcx,rbx
   140001eb6:	mov    QWORD PTR [rsp+0x38],r13
   140001ebb:	mov    QWORD PTR [rsp+0x30],r13
   140001ec0:	mov    QWORD PTR [rsp+0x28],r13
   140001ec5:	mov    QWORD PTR [rsp+0x20],rax
   140001eca:	call   QWORD PTR [rip+0x9130]        # 0x14000b000
   140001ed0:	movsxd rsi,eax
   140001ed3:	test   rbx,rbx
   140001ed6:	je     0x140001ee4
   140001ed8:	mov    rcx,rbx
   140001edb:	call   QWORD PTR [rip+0x912f]        # 0x14000b010
   140001ee1:	mov    rbx,r13
   140001ee4:	test   rsi,rsi
   140001ee7:	jne    0x140001f01
   140001ee9:	cmp    DWORD PTR [rsp+0x60],r13d
   140001eee:	jne    0x140001f01
   140001ef0:	lea    rdx,[rbp-0x50]
   140001ef4:	lea    rcx,[rbp-0x80]
   140001ef8:	call   0x1400017a8
   140001efd:	mov    rdi,QWORD PTR [rbp-0x80]
   140001f01:	mov    esi,0x80
   140001f06:	lea    r8,[rip+0x46d3]        # 0x1400065e0
   140001f0d:	mov    edx,esi
   140001f0f:	lea    rcx,[rbp-0x50]
   140001f13:	call   QWORD PTR [rip+0x42a7]        # 0x1400061c0
   140001f19:	test   eax,eax
   140001f1b:	je     0x140001f41
   140001f1d:	cmp    eax,r14d
   140001f20:	je     0x140002153
   140001f26:	cmp    eax,r12d
   140001f29:	je     0x140002148
   140001f2f:	cmp    eax,0x22
   140001f32:	je     0x140002148
   140001f38:	cmp    eax,r15d
   140001f3b:	jne    0x14000213d
   140001f41:	lea    r8,[rbp+0xb0]
   140001f48:	mov    rdx,rsi
   140001f4b:	lea    rcx,[rbp-0x50]
   140001f4f:	call   QWORD PTR [rip+0x4273]        # 0x1400061c8
   140001f55:	test   eax,eax
   140001f57:	je     0x140001f7d
   140001f59:	cmp    eax,r14d
   140001f5c:	je     0x140002174
   140001f62:	cmp    eax,r12d
   140001f65:	je     0x140002169
   140001f6b:	cmp    eax,0x22
   140001f6e:	je     0x140002169
   140001f74:	cmp    eax,r15d
   140001f77:	jne    0x14000215e
   140001f7d:	lea    r8,[rip+0x469c]        # 0x140006620
   140001f84:	mov    rdx,rsi
   140001f87:	lea    rcx,[rbp-0x50]
   140001f8b:	call   QWORD PTR [rip+0x4237]        # 0x1400061c8
   140001f91:	test   eax,eax
   140001f93:	je     0x140001fb9
   140001f95:	cmp    eax,r14d
   140001f98:	je     0x140002195
   140001f9e:	cmp    eax,r12d
   140001fa1:	je     0x14000218a
   140001fa7:	cmp    eax,0x22
   140001faa:	je     0x14000218a
   140001fb0:	cmp    eax,r15d
   140001fb3:	jne    0x14000217f
   140001fb9:	lea    rax,[rsp+0x70]
   140001fbe:	mov    QWORD PTR [rsp+0x70],r13
   140001fc3:	mov    r9d,0x20019
   140001fc9:	mov    QWORD PTR [rsp+0x20],rax
   140001fce:	xor    r8d,r8d
   140001fd1:	lea    rdx,[rbp-0x50]
   140001fd5:	mov    rcx,rdi
   140001fd8:	call   QWORD PTR [rip+0x902a]        # 0x14000b008
   140001fde:	test   eax,eax
   140001fe0:	jne    0x14000206f
   140001fe6:	mov    eax,r13d
   140001fe9:	test   rbx,rbx
   140001fec:	je     0x140001ff7
   140001fee:	mov    rcx,rbx
   140001ff1:	call   QWORD PTR [rip+0x9019]        # 0x14000b010
   140001ff7:	mov    rbx,QWORD PTR [rsp+0x70]
   140001ffc:	test   eax,eax
   140001ffe:	jne    0x14000206f
   140002000:	mov    QWORD PTR [rsp+0x58],r13
   140002005:	lea    rax,[rsp+0x60]
   14000200a:	mov    QWORD PTR [rsp+0x50],r13
   14000200f:	xor    r9d,r9d
   140002012:	mov    QWORD PTR [rsp+0x48],r13
   140002017:	xor    r8d,r8d
   14000201a:	mov    QWORD PTR [rsp+0x40],r13
   14000201f:	xor    edx,edx
   140002021:	mov    QWORD PTR [rsp+0x38],r13
   140002026:	mov    rcx,rbx
   140002029:	mov    QWORD PTR [rsp+0x30],r13
   14000202e:	mov    QWORD PTR [rsp+0x28],r13
   140002033:	mov    QWORD PTR [rsp+0x20],rax
   140002038:	call   QWORD PTR [rip+0x8fc2]        # 0x14000b000
   14000203e:	movsxd rsi,eax
   140002041:	test   rbx,rbx
   140002044:	je     0x140002052
   140002046:	mov    rcx,rbx
   140002049:	call   QWORD PTR [rip+0x8fc1]        # 0x14000b010
   14000204f:	mov    rbx,r13
   140002052:	test   rsi,rsi
   140002055:	jne    0x14000206f
   140002057:	cmp    DWORD PTR [rsp+0x60],r13d
   14000205c:	jne    0x14000206f
   14000205e:	lea    rdx,[rbp-0x50]
   140002062:	lea    rcx,[rbp-0x80]
   140002066:	call   0x1400017a8
   14000206b:	mov    rdi,QWORD PTR [rbp-0x80]
   14000206f:	test   rbx,rbx
   140002072:	je     0x14000207d
   140002074:	mov    rcx,rbx
   140002077:	call   QWORD PTR [rip+0x8f93]        # 0x14000b010
   14000207d:	test   rdi,rdi
   140002080:	je     0x14000208b
   140002082:	mov    rcx,rdi
   140002085:	call   QWORD PTR [rip+0x8f85]        # 0x14000b010
   14000208b:	mov    rbx,QWORD PTR [rsp+0x68]
   140002090:	mov    r15d,r13d
   140002093:	test   rbx,rbx
   140002096:	je     0x1400020ad
   140002098:	mov    rcx,QWORD PTR [rbx]
   14000209b:	mov    rdi,QWORD PTR [rcx+0x10]
   14000209f:	mov    rcx,rdi
   1400020a2:	call   QWORD PTR [rip+0x4210]        # 0x1400062b8
   1400020a8:	mov    rcx,rbx
   1400020ab:	call   rdi
   1400020ad:	mov    eax,r15d
   1400020b0:	mov    rcx,QWORD PTR [rbp+0x130]
   1400020b7:	xor    rcx,rsp
   1400020ba:	call   0x140004e10
   1400020bf:	mov    rbx,QWORD PTR [rsp+0x290]
   1400020c7:	add    rsp,0x240
   1400020ce:	pop    r15
   1400020d0:	pop    r14
   1400020d2:	pop    r13
   1400020d4:	pop    r12
   1400020d6:	pop    rdi
   1400020d7:	pop    rsi
   1400020d8:	pop    rbp
   1400020d9:	ret    
   1400020da:	mov    ecx,0x80004005
   1400020df:	call   0x1400012f0
   1400020e4:	int3   
   1400020e5:	mov    ecx,0x80070057
   1400020ea:	call   0x1400012f0
   1400020ef:	int3   
   1400020f0:	mov    ecx,0x8007000e
   1400020f5:	call   0x1400012f0
   1400020fa:	int3   
   1400020fb:	mov    ecx,0x80004005
   140002100:	call   0x1400012f0
   140002105:	int3   
   140002106:	mov    ecx,0x80070057
   14000210b:	call   0x1400012f0
   140002110:	int3   
   140002111:	mov    ecx,0x8007000e
   140002116:	call   0x1400012f0
   14000211b:	int3   
   14000211c:	mov    ecx,0x80004005
   140002121:	call   0x1400012f0
   140002126:	int3   
   140002127:	mov    ecx,0x80070057
   14000212c:	call   0x1400012f0
   140002131:	int3   
   140002132:	mov    ecx,0x8007000e
   140002137:	call   0x1400012f0
   14000213c:	int3   
   14000213d:	mov    ecx,0x80004005
   140002142:	call   0x1400012f0
   140002147:	int3   
   140002148:	mov    ecx,0x80070057
   14000214d:	call   0x1400012f0
   140002152:	int3   
   140002153:	mov    ecx,0x8007000e
   140002158:	call   0x1400012f0
   14000215d:	int3   
   14000215e:	mov    ecx,0x80004005
   140002163:	call   0x1400012f0
   140002168:	int3   
   140002169:	mov    ecx,0x80070057
   14000216e:	call   0x1400012f0
   140002173:	int3   
   140002174:	mov    ecx,0x8007000e
   140002179:	call   0x1400012f0
   14000217e:	int3   
   14000217f:	mov    ecx,0x80004005
   140002184:	call   0x1400012f0
   140002189:	int3   
   14000218a:	mov    ecx,0x80070057
   14000218f:	call   0x1400012f0
   140002194:	int3   
   140002195:	mov    ecx,0x8007000e
   14000219a:	call   0x1400012f0
   14000219f:	int3   
   1400021a0:	int3   
   1400021a1:	int3   
   1400021a2:	int3   
   1400021a3:	int3   
   1400021a4:	int3   
   1400021a5:	int3   
   1400021a6:	int3   
   1400021a7:	int3   
   1400021a8:	int3   
   1400021a9:	int3   
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	xor    eax,eax
   1400021b2:	ret    
   1400021b3:	int3   
   1400021b4:	int3   
   1400021b5:	int3   
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	mov    rax,rsp
   1400021bf:	mov    QWORD PTR [rax+0x8],rbx
   1400021c3:	mov    QWORD PTR [rax+0x10],rbp
   1400021c7:	mov    QWORD PTR [rax+0x18],rsi
   1400021cb:	mov    QWORD PTR [rax+0x20],rdi
   1400021cf:	push   r12
   1400021d1:	push   r14
   1400021d3:	push   r15
   1400021d5:	sub    rsp,0x20
   1400021d9:	xor    esi,esi
   1400021db:	mov    r14,r9
   1400021de:	mov    rdi,r8
   1400021e1:	mov    rbx,rdx
   1400021e4:	mov    r12,rcx
   1400021e7:	test   rcx,rcx
   1400021ea:	je     0x1400022d2
   1400021f0:	test   rdx,rdx
   1400021f3:	je     0x1400022d2
   1400021f9:	test   r9,r9
   1400021fc:	jne    0x140002208
   1400021fe:	mov    esi,0x80004003
   140002203:	jmp    0x1400022d7
   140002208:	mov    QWORD PTR [r9],rsi
   14000220b:	cmp    DWORD PTR [r8],esi
   14000220e:	jne    0x14000224e
   140002210:	cmp    DWORD PTR [r8+0x4],esi
   140002214:	jne    0x14000224e
   140002216:	cmp    DWORD PTR [r8+0x8],0xc0
   14000221e:	jne    0x14000224e
   140002220:	cmp    DWORD PTR [r8+0xc],0x46000000
   140002228:	jne    0x14000224e
   14000222a:	mov    rdi,QWORD PTR [rdx+0x8]
   14000222e:	add    rdi,rcx
   140002231:	mov    rax,QWORD PTR [rdi]
   140002234:	mov    rbx,QWORD PTR [rax+0x8]
   140002238:	mov    rcx,rbx
   14000223b:	call   QWORD PTR [rip+0x4077]        # 0x1400062b8
   140002241:	mov    rcx,rdi
   140002244:	call   rbx
   140002246:	mov    QWORD PTR [r14],rdi
   140002249:	jmp    0x1400022d7
   14000224e:	cmp    QWORD PTR [rdx+0x10],rsi
   140002252:	je     0x1400022bb
   140002254:	mov    rcx,QWORD PTR [rbx]
   140002257:	mov    ebp,esi
   140002259:	test   rcx,rcx
   14000225c:	sete   bpl
   140002260:	test   ebp,ebp
   140002262:	jne    0x140002282
   140002264:	mov    eax,DWORD PTR [rdi]
   140002266:	cmp    DWORD PTR [rcx],eax
   140002268:	jne    0x1400022b1
   14000226a:	mov    eax,DWORD PTR [rdi+0x4]
   14000226d:	cmp    DWORD PTR [rcx+0x4],eax
   140002270:	jne    0x1400022b1
   140002272:	mov    eax,DWORD PTR [rdi+0x8]
   140002275:	cmp    DWORD PTR [rcx+0x8],eax
   140002278:	jne    0x1400022b1
   14000227a:	mov    eax,DWORD PTR [rdi+0xc]
   14000227d:	cmp    DWORD PTR [rcx+0xc],eax
   140002280:	jne    0x1400022b1
   140002282:	mov    r15,QWORD PTR [rbx+0x10]
   140002286:	cmp    r15,0x1
   14000228a:	je     0x1400022c6
   14000228c:	mov    rcx,r15
   14000228f:	call   QWORD PTR [rip+0x4023]        # 0x1400062b8
   140002295:	mov    r9,QWORD PTR [rbx+0x8]
   140002299:	mov    r8,r14
   14000229c:	mov    rdx,rdi
   14000229f:	mov    rcx,r12
   1400022a2:	call   r15
   1400022a5:	test   eax,eax
   1400022a7:	je     0x1400022c2
   1400022a9:	test   ebp,ebp
   1400022ab:	jne    0x1400022b1
   1400022ad:	test   eax,eax
   1400022af:	js     0x1400022c2
   1400022b1:	add    rbx,0x18
   1400022b5:	cmp    QWORD PTR [rbx+0x10],rsi
   1400022b9:	jne    0x140002254
   1400022bb:	mov    esi,0x80004002
   1400022c0:	jmp    0x1400022d7
   1400022c2:	mov    esi,eax
   1400022c4:	jmp    0x1400022d7
   1400022c6:	mov    rdi,QWORD PTR [rbx+0x8]
   1400022ca:	add    rdi,r12
   1400022cd:	jmp    0x140002231
   1400022d2:	mov    esi,0x80070057
   1400022d7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400022dc:	mov    eax,esi
   1400022de:	mov    rsi,QWORD PTR [rsp+0x50]
   1400022e3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400022e8:	mov    rdi,QWORD PTR [rsp+0x58]
   1400022ed:	add    rsp,0x20
   1400022f1:	pop    r15
   1400022f3:	pop    r14
   1400022f5:	pop    r12
   1400022f7:	ret    
   1400022f8:	int3   
   1400022f9:	int3   
   1400022fa:	int3   
   1400022fb:	int3   
   1400022fc:	int3   
   1400022fd:	int3   
   1400022fe:	int3   
   1400022ff:	int3   
   140002300:	ret    0x0
   140002303:	int3   
   140002304:	int3   
   140002305:	int3   
   140002306:	int3   
   140002307:	int3   
   140002308:	int3   
   140002309:	int3   
   14000230a:	int3   
   14000230b:	int3   
   14000230c:	int3   
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	mov    QWORD PTR [rsp+0x8],rbx
   140002315:	mov    QWORD PTR [rsp+0x10],rbp
   14000231a:	mov    QWORD PTR [rsp+0x18],rsi
   14000231f:	push   rdi
   140002320:	sub    rsp,0x20
   140002324:	mov    rbp,rdx
   140002327:	mov    rsi,r9
   14000232a:	xor    edx,edx
   14000232c:	mov    rdi,r8
   14000232f:	mov    eax,0x80004003
   140002334:	test   r9,r9
   140002337:	je     0x14000237f
   140002339:	mov    QWORD PTR [r9],rdx
   14000233c:	test   rbp,rbp
   14000233f:	je     0x140002367
   140002341:	cmp    DWORD PTR [r8],edx
   140002344:	jne    0x140002360
   140002346:	cmp    DWORD PTR [r8+0x4],edx
   14000234a:	jne    0x140002360
   14000234c:	cmp    DWORD PTR [r8+0x8],0xc0
   140002354:	jne    0x140002360
   140002356:	cmp    DWORD PTR [r8+0xc],0x46000000
   14000235e:	je     0x140002367
   140002360:	mov    eax,0x80040110
   140002365:	jmp    0x14000237f
   140002367:	mov    rbx,QWORD PTR [rcx+0x40]
   14000236b:	mov    rcx,rbx
   14000236e:	call   QWORD PTR [rip+0x3f44]        # 0x1400062b8
   140002374:	mov    r8,rsi
   140002377:	mov    rdx,rdi
   14000237a:	mov    rcx,rbp
   14000237d:	call   rbx
   14000237f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002384:	mov    rbp,QWORD PTR [rsp+0x38]
   140002389:	mov    rsi,QWORD PTR [rsp+0x40]
   14000238e:	add    rsp,0x20
   140002392:	pop    rdi
   140002393:	ret    
   140002394:	int3   
   140002395:	int3   
   140002396:	int3   
   140002397:	int3   
   140002398:	int3   
   140002399:	int3   
   14000239a:	int3   
   14000239b:	int3   
   14000239c:	int3   
   14000239d:	int3   
   14000239e:	int3   
   14000239f:	int3   
   1400023a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400023a5:	push   rdi
   1400023a6:	sub    rsp,0x20
   1400023aa:	mov    rdi,QWORD PTR [rip+0x7297]        # 0x140009648
   1400023b1:	mov    rax,QWORD PTR [rdi]
   1400023b4:	test   edx,edx
   1400023b6:	je     0x1400023be
   1400023b8:	mov    rbx,QWORD PTR [rax+0x8]
   1400023bc:	jmp    0x1400023c2
   1400023be:	mov    rbx,QWORD PTR [rax+0x10]
   1400023c2:	mov    rcx,rbx
   1400023c5:	call   QWORD PTR [rip+0x3eed]        # 0x1400062b8
   1400023cb:	mov    rcx,rdi
   1400023ce:	call   rbx
   1400023d0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023d5:	xor    eax,eax
   1400023d7:	add    rsp,0x20
   1400023db:	pop    rdi
   1400023dc:	ret    
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	int3   
   1400023e1:	int3   
   1400023e2:	int3   
   1400023e3:	int3   
   1400023e4:	int3   
   1400023e5:	int3   
   1400023e6:	int3   
   1400023e7:	int3   
   1400023e8:	int3   
   1400023e9:	int3   
   1400023ea:	int3   
   1400023eb:	int3   
   1400023ec:	int3   
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	mov    r9,r8
   1400023f3:	mov    r8,rdx
   1400023f6:	lea    rdx,[rip+0x447b]        # 0x140006878
   1400023fd:	rex.W jmp QWORD PTR [rip+0x3d54]        # 0x140006158
   140002404:	int3   
   140002405:	int3   
   140002406:	int3   
   140002407:	int3   
   140002408:	int3   
   140002409:	int3   
   14000240a:	int3   
   14000240b:	int3   
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	mov    eax,0x1
   140002415:	lock xadd DWORD PTR [rcx+0x8],eax
   14000241a:	inc    eax
   14000241c:	ret    
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	int3   
   140002421:	int3   
   140002422:	int3   
   140002423:	int3   
   140002424:	int3   
   140002425:	int3   
   140002426:	int3   
   140002427:	int3   
   140002428:	int3   
   140002429:	int3   
   14000242a:	int3   
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	rex push rbx
   140002432:	sub    rsp,0x20
   140002436:	or     ebx,0xffffffff
   140002439:	lock xadd DWORD PTR [rcx+0x8],ebx
   14000243e:	sub    ebx,0x1
   140002441:	jne    0x140002457
   140002443:	test   rcx,rcx
   140002446:	je     0x140002457
   140002448:	lea    rax,[rip+0x4261]        # 0x1400066b0
   14000244f:	mov    QWORD PTR [rcx],rax
   140002452:	call   0x1400049e4
   140002457:	mov    eax,ebx
   140002459:	add    rsp,0x20
   14000245d:	pop    rbx
   14000245e:	ret    
   14000245f:	int3   
   140002460:	int3   
   140002461:	int3   
   140002462:	int3   
   140002463:	int3   
   140002464:	int3   
   140002465:	int3   
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	mov    QWORD PTR [rsp+0x8],rbx
   140002475:	mov    QWORD PTR [rsp+0x10],rbp
   14000247a:	mov    QWORD PTR [rsp+0x18],rsi
   14000247f:	push   rdi
   140002480:	sub    rsp,0x20
   140002484:	mov    rsi,QWORD PTR [rip+0x7345]        # 0x1400097d0
   14000248b:	mov    ebp,edx
   14000248d:	mov    rax,QWORD PTR [rip+0x7344]        # 0x1400097d8
   140002494:	mov    rdi,rcx
   140002497:	jmp    0x1400024bd
   140002499:	mov    rbx,QWORD PTR [rsi]
   14000249c:	test   rbx,rbx
   14000249f:	je     0x1400024b9
   1400024a1:	mov    rbx,QWORD PTR [rbx+0x40]
   1400024a5:	mov    rcx,rbx
   1400024a8:	call   QWORD PTR [rip+0x3e0a]        # 0x1400062b8
   1400024ae:	xor    ecx,ecx
   1400024b0:	call   rbx
   1400024b2:	mov    rax,QWORD PTR [rip+0x731f]        # 0x1400097d8
   1400024b9:	add    rsi,0x8
   1400024bd:	cmp    rsi,rax
   1400024c0:	jb     0x140002499
   1400024c2:	mov    rcx,rdi
   1400024c5:	call   0x14000155c
   1400024ca:	call   0x140001364
   1400024cf:	cmp    BYTE PTR [rdi+0x62],0x0
   1400024d3:	je     0x1400024db
   1400024d5:	call   QWORD PTR [rip+0x8b6d]        # 0x14000b048
   1400024db:	mov    rcx,rdi
   1400024de:	call   0x14000155c
   1400024e3:	test   bpl,0x1
   1400024e7:	je     0x1400024f1
   1400024e9:	mov    rcx,rdi
   1400024ec:	call   0x1400049e4
   1400024f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024f6:	mov    rax,rdi
   1400024f9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400024fe:	mov    rsi,QWORD PTR [rsp+0x40]
   140002503:	add    rsp,0x20
   140002507:	pop    rdi
   140002508:	ret    
   140002509:	int3   
   14000250a:	int3   
   14000250b:	int3   
   14000250c:	int3   
   14000250d:	int3   
   14000250e:	int3   
   14000250f:	int3   
   140002510:	sub    rsp,0x38
   140002514:	cmp    BYTE PTR [rip+0x7125],0x0        # 0x140009640
   14000251b:	je     0x140002522
   14000251d:	or     eax,0xffffffff
   140002520:	jmp    0x14000254b
   140002522:	and    DWORD PTR [rsp+0x20],0x0
   140002527:	call   QWORD PTR [rip+0x3ad3]        # 0x140006000
   14000252d:	mov    rdx,rax
   140002530:	lea    r8,[rsp+0x20]
   140002535:	call   0x140002804
   14000253a:	cmp    al,0x1
   14000253c:	jne    0x140002547
   14000253e:	add    rsp,0x38
   140002542:	jmp    0x140002a04
   140002547:	mov    eax,DWORD PTR [rsp+0x20]
   14000254b:	add    rsp,0x38
   14000254f:	ret    
   140002550:	int3   
   140002551:	int3   
   140002552:	int3   
   140002553:	int3   
   140002554:	int3   
   140002555:	int3   
   140002556:	int3   
   140002557:	int3   
   140002558:	int3   
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	mov    rax,rsp
   140002563:	mov    QWORD PTR [rax+0x8],rbx
   140002567:	mov    QWORD PTR [rax+0x10],rbp
   14000256b:	mov    QWORD PTR [rax+0x18],rsi
   14000256f:	mov    QWORD PTR [rax+0x20],rdi
   140002573:	push   r12
   140002575:	push   r14
   140002577:	push   r15
   140002579:	sub    rsp,0x20
   14000257d:	xor    r12d,r12d
   140002580:	mov    r14,r8
   140002583:	mov    r15,rdx
   140002586:	mov    rbp,rcx
   140002589:	test   r8,r8
   14000258c:	jne    0x140002598
   14000258e:	mov    eax,0x80004003
   140002593:	jmp    0x14000264b
   140002598:	mov    ecx,0x48
   14000259d:	mov    QWORD PTR [r8],r12
   1400025a0:	mov    esi,0x8007000e
   1400025a5:	call   0x1400049f0
   1400025aa:	mov    rdi,rax
   1400025ad:	test   rax,rax
   1400025b0:	je     0x1400025d5
   1400025b2:	xor    edx,edx
   1400025b4:	mov    DWORD PTR [rax+0x8],r12d
   1400025b8:	lea    rcx,[rax+0x10]
   1400025bc:	lea    r8d,[rdx+0x28]
   1400025c0:	call   0x1400051ee
   1400025c5:	lea    rax,[rip+0x41ac]        # 0x140006778
   1400025cc:	mov    BYTE PTR [rdi+0x38],r12b
   1400025d0:	mov    QWORD PTR [rdi],rax
   1400025d3:	jmp    0x1400025d8
   1400025d5:	mov    rdi,r12
   1400025d8:	test   rdi,rdi
   1400025db:	je     0x140002649
   1400025dd:	lea    rcx,[rdi+0x10]
   1400025e1:	mov    QWORD PTR [rdi+0x40],rbp
   1400025e5:	call   0x140001318
   1400025ea:	mov    esi,eax
   1400025ec:	test   eax,eax
   1400025ee:	js     0x1400025f4
   1400025f0:	mov    BYTE PTR [rdi+0x38],0x1
   1400025f4:	cmovns esi,r12d
   1400025f8:	test   esi,esi
   1400025fa:	jne    0x14000261c
   1400025fc:	mov    rax,QWORD PTR [rdi]
   1400025ff:	mov    rbx,QWORD PTR [rax]
   140002602:	mov    rcx,rbx
   140002605:	call   QWORD PTR [rip+0x3cad]        # 0x1400062b8
   14000260b:	mov    r8,r14
   14000260e:	mov    rdx,r15
   140002611:	mov    rcx,rdi
   140002614:	call   rbx
   140002616:	mov    esi,eax
   140002618:	test   eax,eax
   14000261a:	je     0x140002649
   14000261c:	lea    rax,[rip+0x41ad]        # 0x1400067d0
   140002623:	mov    DWORD PTR [rdi+0x8],0xc0000001
   14000262a:	mov    QWORD PTR [rdi],rax
   14000262d:	cmp    BYTE PTR [rdi+0x38],r12b
   140002631:	je     0x140002641
   140002633:	lea    rcx,[rdi+0x10]
   140002637:	mov    BYTE PTR [rdi+0x38],r12b
   14000263b:	call   QWORD PTR [rip+0x3a1f]        # 0x140006060
   140002641:	mov    rcx,rdi
   140002644:	call   0x1400049e4
   140002649:	mov    eax,esi
   14000264b:	mov    rbx,QWORD PTR [rsp+0x40]
   140002650:	mov    rbp,QWORD PTR [rsp+0x48]
   140002655:	mov    rsi,QWORD PTR [rsp+0x50]
   14000265a:	mov    rdi,QWORD PTR [rsp+0x58]
   14000265f:	add    rsp,0x20
   140002663:	pop    r15
   140002665:	pop    r14
   140002667:	pop    r12
   140002669:	ret    
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	mov    QWORD PTR [rsp+0x8],rbx
   140002675:	mov    QWORD PTR [rsp+0x10],rbp
   14000267a:	mov    QWORD PTR [rsp+0x18],rsi
   14000267f:	push   rdi
   140002680:	push   r14
   140002682:	push   r15
   140002684:	sub    rsp,0x20
   140002688:	mov    r14,r8
   14000268b:	mov    r15,rdx
   14000268e:	test   rcx,rcx
   140002691:	jne    0x140002744
   140002697:	test   r8,r8
   14000269a:	jne    0x1400026a6
   14000269c:	mov    ebp,0x80004003
   1400026a1:	jmp    0x14000274b
   1400026a6:	and    QWORD PTR [r8],0x0
   1400026aa:	mov    ecx,0x18
   1400026af:	mov    ebp,0x8007000e
   1400026b4:	call   0x1400049f0
   1400026b9:	mov    rsi,rax
   1400026bc:	test   rax,rax
   1400026bf:	je     0x1400026fb
   1400026c1:	and    DWORD PTR [rax+0x10],0x0
   1400026c5:	mov    rdi,QWORD PTR [rip+0x6f7c]        # 0x140009648
   1400026cc:	mov    DWORD PTR [rax+0x8],0x1
   1400026d3:	lea    rax,[rip+0x4046]        # 0x140006720
   1400026da:	mov    QWORD PTR [rsi],rax
   1400026dd:	mov    BYTE PTR [rip+0x6f80],0x1        # 0x140009664
   1400026e4:	mov    rax,QWORD PTR [rdi]
   1400026e7:	mov    rbx,QWORD PTR [rax+0x8]
   1400026eb:	mov    rcx,rbx
   1400026ee:	call   QWORD PTR [rip+0x3bc4]        # 0x1400062b8
   1400026f4:	mov    rcx,rdi
   1400026f7:	call   rbx
   1400026f9:	jmp    0x1400026fd
   1400026fb:	xor    esi,esi
   1400026fd:	test   rsi,rsi
   140002700:	je     0x14000274b
   140002702:	inc    DWORD PTR [rsi+0x10]
   140002705:	dec    DWORD PTR [rsi+0x10]
   140002708:	mov    rax,QWORD PTR [rsi]
   14000270b:	mov    rbx,QWORD PTR [rax]
   14000270e:	mov    rcx,rbx
   140002711:	call   QWORD PTR [rip+0x3ba1]        # 0x1400062b8
   140002717:	mov    r8,r14
   14000271a:	mov    rdx,r15
   14000271d:	mov    rcx,rsi
   140002720:	call   rbx
   140002722:	mov    ebp,eax
   140002724:	test   eax,eax
   140002726:	je     0x14000274b
   140002728:	mov    r8,QWORD PTR [rsi]
   14000272b:	mov    rbx,QWORD PTR [r8+0x20]
   14000272f:	mov    rcx,rbx
   140002732:	call   QWORD PTR [rip+0x3b80]        # 0x1400062b8
   140002738:	mov    edx,0x1
   14000273d:	mov    rcx,rsi
   140002740:	call   rbx
   140002742:	jmp    0x14000274b
   140002744:	call   0x140002cb8
   140002749:	mov    ebp,eax
   14000274b:	mov    rbx,QWORD PTR [rsp+0x40]
   140002750:	mov    eax,ebp
   140002752:	mov    rbp,QWORD PTR [rsp+0x48]
   140002757:	mov    rsi,QWORD PTR [rsp+0x50]
   14000275c:	add    rsp,0x20
   140002760:	pop    r15
   140002762:	pop    r14
   140002764:	pop    rdi
   140002765:	ret    
   140002766:	int3   
   140002767:	int3   
   140002768:	int3   
   140002769:	int3   
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	rex push rbx
   140002772:	sub    rsp,0x20
   140002776:	or     ebx,0xffffffff
   140002779:	lock xadd DWORD PTR [rcx+0xc],ebx
   14000277e:	sub    ebx,0x1
   140002781:	jne    0x1400027ab
   140002783:	cmp    BYTE PTR [rcx+0x60],bl
   140002786:	je     0x140002798
   140002788:	mov    BYTE PTR [rcx+0x61],0x1
   14000278c:	mov    rcx,QWORD PTR [rcx+0x50]
   140002790:	call   QWORD PTR [rip+0x3882]        # 0x140006018
   140002796:	jmp    0x1400027ab
   140002798:	mov    ecx,DWORD PTR [rcx+0x48]
   14000279b:	xor    r9d,r9d
   14000279e:	xor    r8d,r8d
   1400027a1:	lea    edx,[r9+0x12]
   1400027a5:	call   QWORD PTR [rip+0x39f5]        # 0x1400061a0
   1400027ab:	mov    eax,ebx
   1400027ad:	add    rsp,0x20
   1400027b1:	pop    rbx
   1400027b2:	ret    
   1400027b3:	int3   
   1400027b4:	int3   
   1400027b5:	int3   
   1400027b6:	int3   
   1400027b7:	int3   
   1400027b8:	int3   
   1400027b9:	int3   
   1400027ba:	int3   
   1400027bb:	int3   
   1400027bc:	int3   
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400027c5:	push   rdi
   1400027c6:	sub    rsp,0x20
   1400027ca:	mov    rax,QWORD PTR [rdx]
   1400027cd:	mov    rdi,rdx
   1400027d0:	mov    rbx,QWORD PTR [rax+0x18]
   1400027d4:	mov    rcx,rbx
   1400027d7:	call   QWORD PTR [rip+0x3adb]        # 0x1400062b8
   1400027dd:	lea    r8,[rip+0x3de4]        # 0x1400065c8
   1400027e4:	mov    rcx,rdi
   1400027e7:	lea    rdx,[rip+0x3e62]        # 0x140006650
   1400027ee:	mov    rax,rbx
   1400027f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027f6:	add    rsp,0x20
   1400027fa:	pop    rdi
   1400027fb:	rex.W jmp rax
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	int3   
   140002801:	int3   
   140002802:	int3   
   140002803:	int3   
   140002804:	mov    QWORD PTR [rsp+0x8],rbx
   140002809:	mov    QWORD PTR [rsp+0x20],rbp
   14000280e:	push   rsi
   14000280f:	push   rdi
   140002810:	push   r14
   140002812:	sub    rsp,0x30
   140002816:	mov    rax,QWORD PTR [rip+0x67eb]        # 0x140009008
   14000281d:	xor    rax,rsp
   140002820:	mov    QWORD PTR [rsp+0x28],rax
   140002825:	xor    ebp,ebp
   140002827:	mov    rsi,r8
   14000282a:	mov    DWORD PTR [r8],ebp
   14000282d:	mov    rbx,rdx
   140002830:	mov    eax,DWORD PTR [rip+0x3e42]        # 0x140006678
   140002836:	test   rdx,rdx
   140002839:	mov    DWORD PTR [rsp+0x20],eax
   14000283d:	movzx  eax,WORD PTR [rip+0x3e38]        # 0x14000667c
   140002844:	mov    WORD PTR [rsp+0x24],ax
   140002849:	je     0x140002900
   14000284f:	cmp    WORD PTR [rbx],bp
   140002852:	je     0x140002900
   140002858:	lea    rax,[rsp+0x20]
   14000285d:	movzx  ecx,WORD PTR [rax]
   140002860:	test   cx,cx
   140002863:	je     0x14000287c
   140002865:	cmp    WORD PTR [rbx],cx
   140002868:	je     0x1400028f2
   14000286e:	mov    rcx,rax
   140002871:	call   QWORD PTR [rip+0x3919]        # 0x140006190
   140002877:	test   rax,rax
   14000287a:	jne    0x14000285d
   14000287c:	mov    rcx,rbx
   14000287f:	call   QWORD PTR [rip+0x390b]        # 0x140006190
   140002885:	mov    rbx,rax
   140002888:	test   rax,rax
   14000288b:	jmp    0x140002849
   14000288d:	lea    rdx,[rip+0x3dec]        # 0x140006680
   140002894:	mov    rcx,rbx
   140002897:	call   0x1400016d4
   14000289c:	test   eax,eax
   14000289e:	je     0x1400029cd
   1400028a4:	lea    rdx,[rip+0x3ded]        # 0x140006698
   1400028ab:	mov    rcx,rbx
   1400028ae:	call   0x1400016d4
   1400028b3:	test   eax,eax
   1400028b5:	je     0x14000292a
   1400028b7:	test   rbx,rbx
   1400028ba:	je     0x140002900
   1400028bc:	cmp    WORD PTR [rbx],bp
   1400028bf:	je     0x140002900
   1400028c1:	lea    rax,[rsp+0x20]
   1400028c6:	movzx  ecx,WORD PTR [rax]
   1400028c9:	test   cx,cx
   1400028cc:	je     0x1400028e1
   1400028ce:	cmp    WORD PTR [rbx],cx
   1400028d1:	je     0x1400028f2
   1400028d3:	mov    rcx,rax
   1400028d6:	call   QWORD PTR [rip+0x38b4]        # 0x140006190
   1400028dc:	test   rax,rax
   1400028df:	jne    0x1400028c6
   1400028e1:	mov    rcx,rbx
   1400028e4:	call   QWORD PTR [rip+0x38a6]        # 0x140006190
   1400028ea:	mov    rbx,rax
   1400028ed:	test   rax,rax
   1400028f0:	jmp    0x1400028ba
   1400028f2:	mov    rcx,rbx
   1400028f5:	call   QWORD PTR [rip+0x3895]        # 0x140006190
   1400028fb:	mov    rbx,rax
   1400028fe:	jmp    0x140002903
   140002900:	mov    rbx,rbp
   140002903:	test   rbx,rbx
   140002906:	jne    0x14000288d
   140002908:	mov    al,0x1
   14000290a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000290f:	xor    rcx,rsp
   140002912:	call   0x140004e10
   140002917:	mov    rbx,QWORD PTR [rsp+0x50]
   14000291c:	mov    rbp,QWORD PTR [rsp+0x68]
   140002921:	add    rsp,0x30
   140002925:	pop    r14
   140002927:	pop    rdi
   140002928:	pop    rsi
   140002929:	ret    
   14000292a:	mov    DWORD PTR [rsi],ebp
   14000292c:	mov    eax,ebp
   14000292e:	mov    rdi,QWORD PTR [rip+0x6e9b]        # 0x1400097d0
   140002935:	mov    rcx,QWORD PTR [rip+0x6e9c]        # 0x1400097d8
   14000293c:	cmp    rdi,rcx
   14000293f:	jae    0x14000299d
   140002941:	mov    r14,QWORD PTR [rdi]
   140002944:	test   r14,r14
   140002947:	je     0x140002990
   140002949:	mov    rbx,QWORD PTR [r14+0x8]
   14000294d:	mov    rcx,rbx
   140002950:	call   QWORD PTR [rip+0x3962]        # 0x1400062b8
   140002956:	mov    ecx,0x1
   14000295b:	call   rbx
   14000295d:	test   eax,eax
   14000295f:	js     0x1400029f2
   140002965:	mov    rbx,QWORD PTR [r14+0x38]
   140002969:	mov    rcx,rbx
   14000296c:	call   QWORD PTR [rip+0x3946]        # 0x1400062b8
   140002972:	call   rbx
   140002974:	mov    rcx,QWORD PTR [r14]
   140002977:	mov    rdx,rax
   14000297a:	mov    r8d,0x1
   140002980:	call   0x140001c2c
   140002985:	test   eax,eax
   140002987:	js     0x1400029f2
   140002989:	mov    rcx,QWORD PTR [rip+0x6e48]        # 0x1400097d8
   140002990:	add    rdi,0x8
   140002994:	cmp    rdi,rcx
   140002997:	jb     0x140002941
   140002999:	test   eax,eax
   14000299b:	js     0x1400029f2
   14000299d:	mov    rcx,QWORD PTR [rip+0x6e24]        # 0x1400097c8
   1400029a4:	call   0x140001a20
   1400029a9:	test   eax,eax
   1400029ab:	js     0x1400029f2
   1400029ad:	mov    rbx,QWORD PTR [rip+0x6c9c]        # 0x140009650
   1400029b4:	test   rbx,rbx
   1400029b7:	je     0x1400029f2
   1400029b9:	mov    rcx,rbx
   1400029bc:	call   QWORD PTR [rip+0x38f6]        # 0x1400062b8
   1400029c2:	mov    rcx,QWORD PTR [rip+0x6d4f]        # 0x140009718
   1400029c9:	call   rbx
   1400029cb:	jmp    0x1400029f2
   1400029cd:	mov    rbx,QWORD PTR [rip+0x6c84]        # 0x140009658
   1400029d4:	test   rbx,rbx
   1400029d7:	je     0x1400029e8
   1400029d9:	mov    rcx,rbx
   1400029dc:	call   QWORD PTR [rip+0x38d6]        # 0x1400062b8
   1400029e2:	call   rbx
   1400029e4:	test   eax,eax
   1400029e6:	js     0x1400029ef
   1400029e8:	call   0x140001400
   1400029ed:	test   eax,eax
   1400029ef:	cmovns eax,ebp
   1400029f2:	mov    DWORD PTR [rsi],eax
   1400029f4:	xor    al,al
   1400029f6:	jmp    0x14000290a
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	int3   
   140002a01:	int3   
   140002a02:	int3   
   140002a03:	int3   
   140002a04:	mov    r11,rsp
   140002a07:	mov    QWORD PTR [r11+0x8],rbx
   140002a0b:	mov    QWORD PTR [r11+0x10],rsi
   140002a0f:	mov    QWORD PTR [r11+0x18],rdi
   140002a13:	mov    QWORD PTR [r11+0x20],r14
   140002a17:	push   rbp
   140002a18:	mov    rbp,rsp
   140002a1b:	sub    rsp,0x80
   140002a22:	lea    rax,[rbp-0x48]
   140002a26:	mov    esi,0x1
   140002a2b:	mov    r8d,esi
   140002a2e:	mov    QWORD PTR [r11-0x68],rax
   140002a32:	lea    r9,[rip+0x3e6f]        # 0x1400068a8
   140002a39:	xor    edx,edx
   140002a3b:	lea    rcx,[rip+0x3fce]        # 0x140006a10
   140002a42:	call   QWORD PTR [rip+0x8608]        # 0x14000b050
   140002a48:	test   eax,eax
   140002a4a:	js     0x140002a84
   140002a4c:	mov    rdi,QWORD PTR [rbp-0x48]
   140002a50:	mov    rax,QWORD PTR [rdi]
   140002a53:	mov    rbx,QWORD PTR [rax+0x18]
   140002a57:	mov    rcx,rbx
   140002a5a:	call   QWORD PTR [rip+0x3858]        # 0x1400062b8
   140002a60:	lea    r8d,[rsi+0x1]
   140002a64:	mov    edx,esi
   140002a66:	mov    rcx,rdi
   140002a69:	call   rbx
   140002a6b:	mov    rdi,QWORD PTR [rbp-0x48]
   140002a6f:	mov    rax,QWORD PTR [rdi]
   140002a72:	mov    rbx,QWORD PTR [rax+0x10]
   140002a76:	mov    rcx,rbx
   140002a79:	call   QWORD PTR [rip+0x3839]        # 0x1400062b8
   140002a7f:	mov    rcx,rdi
   140002a82:	call   rbx
   140002a84:	mov    rdi,QWORD PTR [rip+0x6d45]        # 0x1400097d0
   140002a8b:	jmp    0x140002b0c
   140002a8d:	test   esi,esi
   140002a8f:	js     0x140002b1b
   140002a95:	mov    rbx,QWORD PTR [rdi]
   140002a98:	test   rbx,rbx
   140002a9b:	je     0x140002b08
   140002a9d:	and    QWORD PTR [rbp-0x50],0x0
   140002aa2:	mov    rsi,QWORD PTR [rbx+0x10]
   140002aa6:	test   rsi,rsi
   140002aa9:	je     0x140002b08
   140002aab:	mov    rcx,rsi
   140002aae:	call   QWORD PTR [rip+0x3804]        # 0x1400062b8
   140002ab4:	mov    rcx,QWORD PTR [rbx+0x18]
   140002ab8:	lea    r8,[rbp-0x50]
   140002abc:	lea    rdx,[rip+0x3c3d]        # 0x140006700
   140002ac3:	call   rsi
   140002ac5:	mov    esi,eax
   140002ac7:	test   eax,eax
   140002ac9:	js     0x140002aea
   140002acb:	mov    rdx,QWORD PTR [rbp-0x50]
   140002acf:	lea    rax,[rbx+0x28]
   140002ad3:	mov    rcx,QWORD PTR [rbx]
   140002ad6:	xor    r9d,r9d
   140002ad9:	mov    QWORD PTR [rsp+0x20],rax
   140002ade:	lea    r8d,[r9+0x4]
   140002ae2:	call   QWORD PTR [rip+0x8570]        # 0x14000b058
   140002ae8:	mov    esi,eax
   140002aea:	mov    r14,QWORD PTR [rbp-0x50]
   140002aee:	test   r14,r14
   140002af1:	je     0x140002b08
   140002af3:	mov    rax,QWORD PTR [r14]
   140002af6:	mov    rbx,QWORD PTR [rax+0x10]
   140002afa:	mov    rcx,rbx
   140002afd:	call   QWORD PTR [rip+0x37b5]        # 0x1400062b8
   140002b03:	mov    rcx,r14
   140002b06:	call   rbx
   140002b08:	add    rdi,0x8
   140002b0c:	cmp    rdi,QWORD PTR [rip+0x6cc5]        # 0x1400097d8
   140002b13:	jb     0x140002a8d
   140002b19:	test   esi,esi
   140002b1b:	jne    0x140002b81
   140002b1d:	cmp    BYTE PTR [rip+0x6bdc],0x0        # 0x140009700
   140002b24:	je     0x140002b88
   140002b26:	xor    r9d,r9d
   140002b29:	xor    r8d,r8d
   140002b2c:	xor    edx,edx
   140002b2e:	xor    ecx,ecx
   140002b30:	call   QWORD PTR [rip+0x3522]        # 0x140006058
   140002b36:	mov    QWORD PTR [rip+0x6bb3],rax        # 0x1400096f0
   140002b3d:	test   rax,rax
   140002b40:	je     0x140002b7a
   140002b42:	lea    rax,[rbp-0x40]
   140002b46:	xor    edx,edx
   140002b48:	mov    QWORD PTR [rsp+0x28],rax
   140002b4d:	lea    r9,[rip+0x6b4c]        # 0x1400096a0
   140002b54:	and    DWORD PTR [rsp+0x20],0x0
   140002b59:	lea    r8,[rip+0x640]        # 0x1400031a0
   140002b60:	xor    ecx,ecx
   140002b62:	call   QWORD PTR [rip+0x3510]        # 0x140006078
   140002b68:	test   rax,rax
   140002b6b:	jne    0x140002b88
   140002b6d:	mov    rcx,QWORD PTR [rip+0x6b7c]        # 0x1400096f0
   140002b74:	call   QWORD PTR [rip+0x34f6]        # 0x140006070
   140002b7a:	mov    esi,0x80004005
   140002b7f:	jmp    0x140002b88
   140002b81:	mov    BYTE PTR [rip+0x6b78],0x0        # 0x140009700
   140002b88:	test   esi,esi
   140002b8a:	jne    0x140002bce
   140002b8c:	xor    r9d,r9d
   140002b8f:	lea    rcx,[rbp-0x38]
   140002b93:	xor    r8d,r8d
   140002b96:	xor    edx,edx
   140002b98:	call   QWORD PTR [rip+0x35fa]        # 0x140006198
   140002b9e:	test   eax,eax
   140002ba0:	jle    0x140002bd0
   140002ba2:	lea    rcx,[rbp-0x38]
   140002ba6:	call   QWORD PTR [rip+0x35c4]        # 0x140006170
   140002bac:	lea    rcx,[rbp-0x38]
   140002bb0:	call   QWORD PTR [rip+0x35d2]        # 0x140006188
   140002bb6:	xor    r9d,r9d
   140002bb9:	lea    rcx,[rbp-0x38]
   140002bbd:	xor    r8d,r8d
   140002bc0:	xor    edx,edx
   140002bc2:	call   QWORD PTR [rip+0x35d0]        # 0x140006198
   140002bc8:	test   eax,eax
   140002bca:	jg     0x140002ba2
   140002bcc:	test   esi,esi
   140002bce:	js     0x140002c18
   140002bd0:	mov    rbx,QWORD PTR [rip+0x6bf9]        # 0x1400097d0
   140002bd7:	xor    esi,esi
   140002bd9:	jmp    0x140002bfa
   140002bdb:	test   esi,esi
   140002bdd:	jne    0x140002c03
   140002bdf:	mov    rax,QWORD PTR [rbx]
   140002be2:	test   rax,rax
   140002be5:	je     0x140002bf6
   140002be7:	mov    ecx,DWORD PTR [rax+0x28]
   140002bea:	test   ecx,ecx
   140002bec:	je     0x140002bf6
   140002bee:	call   QWORD PTR [rip+0x843c]        # 0x14000b030
   140002bf4:	mov    esi,eax
   140002bf6:	add    rbx,0x8
   140002bfa:	cmp    rbx,QWORD PTR [rip+0x6bd7]        # 0x1400097d8
   140002c01:	jb     0x140002bdb
   140002c03:	cmp    BYTE PTR [rip+0x6af6],0x0        # 0x140009700
   140002c0a:	je     0x140002c18
   140002c0c:	mov    ecx,DWORD PTR [rip+0x6aea]        # 0x1400096fc
   140002c12:	call   QWORD PTR [rip+0x3418]        # 0x140006030
   140002c18:	lea    r11,[rsp+0x80]
   140002c20:	mov    eax,esi
   140002c22:	mov    rbx,QWORD PTR [r11+0x10]
   140002c26:	mov    rsi,QWORD PTR [r11+0x18]
   140002c2a:	mov    rdi,QWORD PTR [r11+0x20]
   140002c2e:	mov    r14,QWORD PTR [r11+0x28]
   140002c32:	mov    rsp,r11
   140002c35:	pop    rbp
   140002c36:	ret    
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	mov    QWORD PTR [rsp+0x8],rbx
   140002c45:	push   rdi
   140002c46:	sub    rsp,0x20
   140002c4a:	mov    rbx,rcx
   140002c4d:	or     edi,0xffffffff
   140002c50:	lock xadd DWORD PTR [rcx+0x8],edi
   140002c55:	sub    edi,0x1
   140002c58:	jne    0x140002c8c
   140002c5a:	test   rcx,rcx
   140002c5d:	je     0x140002c8c
   140002c5f:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140002c66:	lea    rax,[rip+0x3b63]        # 0x1400067d0
   140002c6d:	mov    QWORD PTR [rcx],rax
   140002c70:	add    rcx,0x10
   140002c74:	cmp    BYTE PTR [rcx+0x28],dil
   140002c78:	je     0x140002c84
   140002c7a:	mov    BYTE PTR [rcx+0x28],dil
   140002c7e:	call   QWORD PTR [rip+0x33dc]        # 0x140006060
   140002c84:	mov    rcx,rbx
   140002c87:	call   0x1400049e4
   140002c8c:	mov    eax,edi
   140002c8e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c93:	add    rsp,0x20
   140002c97:	pop    rdi
   140002c98:	ret    
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	mov    r9,r8
   140002ca3:	mov    r8,rdx
   140002ca6:	lea    rdx,[rip+0x3b4b]        # 0x1400067f8
   140002cad:	jmp    0x1400021bc
   140002cb2:	int3   
   140002cb3:	int3   
   140002cb4:	int3   
   140002cb5:	int3   
   140002cb6:	int3   
   140002cb7:	int3   
   140002cb8:	mov    QWORD PTR [rsp+0x8],rbx
   140002cbd:	mov    QWORD PTR [rsp+0x10],rbp
   140002cc2:	mov    QWORD PTR [rsp+0x18],rsi
   140002cc7:	push   rdi
   140002cc8:	push   r14
   140002cca:	push   r15
   140002ccc:	sub    rsp,0x20
   140002cd0:	mov    r14,r8
   140002cd3:	mov    r15,rdx
   140002cd6:	mov    rbx,rcx
   140002cd9:	test   r8,r8
   140002cdc:	jne    0x140002ce8
   140002cde:	mov    eax,0x80004003
   140002ce3:	jmp    0x140002d8f
   140002ce8:	and    QWORD PTR [r8],0x0
   140002cec:	mov    ecx,0x28
   140002cf1:	mov    ebp,0x8007000e
   140002cf6:	call   0x1400049f0
   140002cfb:	mov    rsi,rax
   140002cfe:	test   rax,rax
   140002d01:	je     0x140002d4c
   140002d03:	and    DWORD PTR [rax+0x8],0x0
   140002d07:	lea    rax,[rip+0x3a92]        # 0x1400067a0
   140002d0e:	mov    rdi,QWORD PTR [rip+0x6933]        # 0x140009648
   140002d15:	mov    QWORD PTR [rsi],rax
   140002d18:	lea    rax,[rip+0x3b09]        # 0x140006828
   140002d1f:	mov    QWORD PTR [rsi+0x20],rbx
   140002d23:	mov    QWORD PTR [rsi+0x10],rax
   140002d27:	mov    DWORD PTR [rsi+0x18],0x1
   140002d2e:	mov    rax,QWORD PTR [rdi]
   140002d31:	mov    BYTE PTR [rip+0x692c],0x1        # 0x140009664
   140002d38:	mov    rbx,QWORD PTR [rax+0x8]
   140002d3c:	mov    rcx,rbx
   140002d3f:	call   QWORD PTR [rip+0x3573]        # 0x1400062b8
   140002d45:	mov    rcx,rdi
   140002d48:	call   rbx
   140002d4a:	jmp    0x140002d4e
   140002d4c:	xor    esi,esi
   140002d4e:	test   rsi,rsi
   140002d51:	je     0x140002d8d
   140002d53:	mov    rax,QWORD PTR [rsi]
   140002d56:	mov    rbx,QWORD PTR [rax]
   140002d59:	mov    rcx,rbx
   140002d5c:	call   QWORD PTR [rip+0x3556]        # 0x1400062b8
   140002d62:	mov    r8,r14
   140002d65:	mov    rdx,r15
   140002d68:	mov    rcx,rsi
   140002d6b:	call   rbx
   140002d6d:	mov    ebp,eax
   140002d6f:	test   eax,eax
   140002d71:	je     0x140002d8d
   140002d73:	mov    r8,QWORD PTR [rsi]
   140002d76:	mov    rbx,QWORD PTR [r8+0x18]
   140002d7a:	mov    rcx,rbx
   140002d7d:	call   QWORD PTR [rip+0x3535]        # 0x1400062b8
   140002d83:	mov    edx,0x1
   140002d88:	mov    rcx,rsi
   140002d8b:	call   rbx
   140002d8d:	mov    eax,ebp
   140002d8f:	mov    rbx,QWORD PTR [rsp+0x40]
   140002d94:	mov    rbp,QWORD PTR [rsp+0x48]
   140002d99:	mov    rsi,QWORD PTR [rsp+0x50]
   140002d9e:	add    rsp,0x20
   140002da2:	pop    r15
   140002da4:	pop    r14
   140002da6:	pop    rdi
   140002da7:	ret    
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	inc    DWORD PTR [rcx+0x10]
   140002db3:	mov    eax,DWORD PTR [rcx+0x10]
   140002db6:	ret    
   140002db7:	int3   
   140002db8:	int3   
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	mov    QWORD PTR [rsp+0x8],rbx
   140002dc5:	mov    QWORD PTR [rsp+0x10],rbp
   140002dca:	mov    QWORD PTR [rsp+0x18],rsi
   140002dcf:	push   rdi
   140002dd0:	sub    rsp,0x20
   140002dd4:	sub    DWORD PTR [rcx+0x10],0x1
   140002dd8:	mov    rsi,rcx
   140002ddb:	mov    ebp,DWORD PTR [rcx+0x10]
   140002dde:	jne    0x140002e37
   140002de0:	mov    rdi,QWORD PTR [rip+0x6861]        # 0x140009648
   140002de7:	mov    rax,QWORD PTR [rdi]
   140002dea:	mov    rbx,QWORD PTR [rax+0x8]
   140002dee:	mov    rcx,rbx
   140002df1:	call   QWORD PTR [rip+0x34c1]        # 0x1400062b8
   140002df7:	mov    rcx,rdi
   140002dfa:	call   rbx
   140002dfc:	test   rsi,rsi
   140002dff:	je     0x140002e1b
   140002e01:	mov    rax,QWORD PTR [rsi]
   140002e04:	mov    rbx,QWORD PTR [rax+0x20]
   140002e08:	mov    rcx,rbx
   140002e0b:	call   QWORD PTR [rip+0x34a7]        # 0x1400062b8
   140002e11:	mov    edx,0x1
   140002e16:	mov    rcx,rsi
   140002e19:	call   rbx
   140002e1b:	mov    rdi,QWORD PTR [rip+0x6826]        # 0x140009648
   140002e22:	mov    rdx,QWORD PTR [rdi]
   140002e25:	mov    rbx,QWORD PTR [rdx+0x10]
   140002e29:	mov    rcx,rbx
   140002e2c:	call   QWORD PTR [rip+0x3486]        # 0x1400062b8
   140002e32:	mov    rcx,rdi
   140002e35:	call   rbx
   140002e37:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e3c:	mov    eax,ebp
   140002e3e:	mov    rbp,QWORD PTR [rsp+0x38]
   140002e43:	mov    rsi,QWORD PTR [rsp+0x40]
   140002e48:	add    rsp,0x20
   140002e4c:	pop    rdi
   140002e4d:	ret    
   140002e4e:	int3   
   140002e4f:	int3   
   140002e50:	int3   
   140002e51:	int3   
   140002e52:	int3   
   140002e53:	int3   
   140002e54:	int3   
   140002e55:	int3   
   140002e56:	int3   
   140002e57:	int3   
   140002e58:	int3   
   140002e59:	int3   
   140002e5a:	int3   
   140002e5b:	int3   
   140002e5c:	int3   
   140002e5d:	int3   
   140002e5e:	int3   
   140002e5f:	int3   
   140002e60:	mov    r9,r8
   140002e63:	mov    r8,rdx
   140002e66:	lea    rdx,[rip+0x39db]        # 0x140006848
   140002e6d:	jmp    0x1400021bc
   140002e72:	int3   
   140002e73:	int3   
   140002e74:	int3   
   140002e75:	int3   
   140002e76:	int3   
   140002e77:	int3   
   140002e78:	int3   
   140002e79:	int3   
   140002e7a:	int3   
   140002e7b:	int3   
   140002e7c:	int3   
   140002e7d:	int3   
   140002e7e:	int3   
   140002e7f:	int3   
   140002e80:	inc    DWORD PTR [rcx+0x8]
   140002e83:	mov    eax,DWORD PTR [rcx+0x8]
   140002e86:	ret    
   140002e87:	int3   
   140002e88:	int3   
   140002e89:	int3   
   140002e8a:	int3   
   140002e8b:	int3   
   140002e8c:	int3   
   140002e8d:	int3   
   140002e8e:	int3   
   140002e8f:	int3   
   140002e90:	mov    QWORD PTR [rsp+0x8],rbx
   140002e95:	mov    QWORD PTR [rsp+0x10],rbp
   140002e9a:	mov    QWORD PTR [rsp+0x18],rsi
   140002e9f:	push   rdi
   140002ea0:	sub    rsp,0x20
   140002ea4:	sub    DWORD PTR [rcx+0x8],0x1
   140002ea8:	mov    rsi,rcx
   140002eab:	mov    ebp,DWORD PTR [rcx+0x8]
   140002eae:	jne    0x140002f07
   140002eb0:	mov    rdi,QWORD PTR [rip+0x6791]        # 0x140009648
   140002eb7:	mov    rax,QWORD PTR [rdi]
   140002eba:	mov    rbx,QWORD PTR [rax+0x8]
   140002ebe:	mov    rcx,rbx
   140002ec1:	call   QWORD PTR [rip+0x33f1]        # 0x1400062b8
   140002ec7:	mov    rcx,rdi
   140002eca:	call   rbx
   140002ecc:	test   rsi,rsi
   140002ecf:	je     0x140002eeb
   140002ed1:	mov    rax,QWORD PTR [rsi]
   140002ed4:	mov    rbx,QWORD PTR [rax+0x18]
   140002ed8:	mov    rcx,rbx
   140002edb:	call   QWORD PTR [rip+0x33d7]        # 0x1400062b8
   140002ee1:	mov    edx,0x1
   140002ee6:	mov    rcx,rsi
   140002ee9:	call   rbx
   140002eeb:	mov    rdi,QWORD PTR [rip+0x6756]        # 0x140009648
   140002ef2:	mov    rdx,QWORD PTR [rdi]
   140002ef5:	mov    rbx,QWORD PTR [rdx+0x10]
   140002ef9:	mov    rcx,rbx
   140002efc:	call   QWORD PTR [rip+0x33b6]        # 0x1400062b8
   140002f02:	mov    rcx,rdi
   140002f05:	call   rbx
   140002f07:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f0c:	mov    eax,ebp
   140002f0e:	mov    rbp,QWORD PTR [rsp+0x38]
   140002f13:	mov    rsi,QWORD PTR [rsp+0x40]
   140002f18:	add    rsp,0x20
   140002f1c:	pop    rdi
   140002f1d:	ret    
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	int3   
   140002f21:	int3   
   140002f22:	int3   
   140002f23:	int3   
   140002f24:	int3   
   140002f25:	int3   
   140002f26:	int3   
   140002f27:	int3   
   140002f28:	int3   
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	mov    QWORD PTR [rsp+0x8],rbx
   140002f35:	mov    QWORD PTR [rsp+0x10],rsi
   140002f3a:	push   rdi
   140002f3b:	sub    rsp,0x20
   140002f3f:	xor    edi,edi
   140002f41:	mov    rsi,rcx
   140002f44:	test   r8,r8
   140002f47:	jne    0x140002f50
   140002f49:	mov    eax,0x80004003
   140002f4e:	jmp    0x140002fa2
   140002f50:	mov    QWORD PTR [r8],rdi
   140002f53:	cmp    DWORD PTR [rdx],edi
   140002f55:	jne    0x140002f88
   140002f57:	cmp    DWORD PTR [rdx+0x4],edi
   140002f5a:	jne    0x140002f88
   140002f5c:	cmp    DWORD PTR [rdx+0x8],0xc0
   140002f63:	jne    0x140002f88
   140002f65:	cmp    DWORD PTR [rdx+0xc],0x46000000
   140002f6c:	jne    0x140002f88
   140002f6e:	mov    QWORD PTR [r8],rcx
   140002f71:	mov    rax,QWORD PTR [rcx]
   140002f74:	mov    rbx,QWORD PTR [rax+0x8]
   140002f78:	mov    rcx,rbx
   140002f7b:	call   QWORD PTR [rip+0x3337]        # 0x1400062b8
   140002f81:	mov    rcx,rsi
   140002f84:	call   rbx
   140002f86:	jmp    0x140002fa0
   140002f88:	mov    r9,r8
   140002f8b:	add    rcx,0x10
   140002f8f:	mov    r8,rdx
   140002f92:	lea    rdx,[rip+0x38af]        # 0x140006848
   140002f99:	call   0x1400021bc
   140002f9e:	mov    edi,eax
   140002fa0:	mov    eax,edi
   140002fa2:	mov    rbx,QWORD PTR [rsp+0x30]
   140002fa7:	mov    rsi,QWORD PTR [rsp+0x38]
   140002fac:	add    rsp,0x20
   140002fb0:	pop    rdi
   140002fb1:	ret    
   140002fb2:	int3   
   140002fb3:	int3   
   140002fb4:	int3   
   140002fb5:	int3   
   140002fb6:	int3   
   140002fb7:	int3   
   140002fb8:	int3   
   140002fb9:	int3   
   140002fba:	int3   
   140002fbb:	int3   
   140002fbc:	int3   
   140002fbd:	int3   
   140002fbe:	int3   
   140002fbf:	int3   
   140002fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140002fc5:	push   rdi
   140002fc6:	sub    rsp,0x20
   140002fca:	mov    rdi,QWORD PTR [rcx+0x10]
   140002fce:	mov    rax,QWORD PTR [rdi]
   140002fd1:	mov    rbx,QWORD PTR [rax+0x8]
   140002fd5:	mov    rcx,rbx
   140002fd8:	call   QWORD PTR [rip+0x32da]        # 0x1400062b8
   140002fde:	mov    rcx,rdi
   140002fe1:	mov    rax,rbx
   140002fe4:	mov    rbx,QWORD PTR [rsp+0x30]
   140002fe9:	add    rsp,0x20
   140002fed:	pop    rdi
   140002fee:	rex.W jmp rax
   140002ff1:	int3   
   140002ff2:	int3   
   140002ff3:	int3   
   140002ff4:	int3   
   140002ff5:	int3   
   140002ff6:	int3   
   140002ff7:	int3   
   140002ff8:	int3   
   140002ff9:	int3   
   140002ffa:	int3   
   140002ffb:	int3   
   140002ffc:	int3   
   140002ffd:	int3   
   140002ffe:	int3   
   140002fff:	int3   
   140003000:	mov    QWORD PTR [rsp+0x8],rbx
   140003005:	push   rdi
   140003006:	sub    rsp,0x20
   14000300a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000300e:	mov    rax,QWORD PTR [rdi]
   140003011:	mov    rbx,QWORD PTR [rax+0x10]
   140003015:	mov    rcx,rbx
   140003018:	call   QWORD PTR [rip+0x329a]        # 0x1400062b8
   14000301e:	mov    rcx,rdi
   140003021:	mov    rax,rbx
   140003024:	mov    rbx,QWORD PTR [rsp+0x30]
   140003029:	add    rsp,0x20
   14000302d:	pop    rdi
   14000302e:	rex.W jmp rax
   140003031:	int3   
   140003032:	int3   
   140003033:	int3   
   140003034:	int3   
   140003035:	int3   
   140003036:	int3   
   140003037:	int3   
   140003038:	int3   
   140003039:	int3   
   14000303a:	int3   
   14000303b:	int3   
   14000303c:	int3   
   14000303d:	int3   
   14000303e:	int3   
   14000303f:	int3   
   140003040:	mov    QWORD PTR [rsp+0x8],rbx
   140003045:	mov    QWORD PTR [rsp+0x10],rbp
   14000304a:	mov    QWORD PTR [rsp+0x18],rsi
   14000304f:	push   rdi
   140003050:	sub    rsp,0x20
   140003054:	mov    rdi,QWORD PTR [rcx+0x10]
   140003058:	mov    rsi,r8
   14000305b:	mov    rbp,rdx
   14000305e:	mov    rax,QWORD PTR [rdi]
   140003061:	mov    rbx,QWORD PTR [rax]
   140003064:	mov    rcx,rbx
   140003067:	call   QWORD PTR [rip+0x324b]        # 0x1400062b8
   14000306d:	mov    r8,rsi
   140003070:	mov    rdx,rbp
   140003073:	mov    rcx,rdi
   140003076:	mov    rax,rbx
   140003079:	mov    rbx,QWORD PTR [rsp+0x30]
   14000307e:	mov    rbp,QWORD PTR [rsp+0x38]
   140003083:	mov    rsi,QWORD PTR [rsp+0x40]
   140003088:	add    rsp,0x20
   14000308c:	pop    rdi
   14000308d:	rex.W jmp rax
   140003090:	int3   
   140003091:	int3   
   140003092:	int3   
   140003093:	int3   
   140003094:	int3   
   140003095:	int3   
   140003096:	int3   
   140003097:	int3   
   140003098:	int3   
   140003099:	int3   
   14000309a:	int3   
   14000309b:	int3   
   14000309c:	int3   
   14000309d:	int3   
   14000309e:	int3   
   14000309f:	int3   
   1400030a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400030aa:	mov    QWORD PTR [rsp+0x18],rdi
   1400030af:	push   r14
   1400030b1:	sub    rsp,0x20
   1400030b5:	mov    rdi,QWORD PTR [rip+0x658c]        # 0x140009648
   1400030bc:	lea    rax,[rip+0x365d]        # 0x140006720
   1400030c3:	mov    QWORD PTR [rcx],rax
   1400030c6:	mov    r14,rcx
   1400030c9:	mov    DWORD PTR [rcx+0x10],0xc0000001
   1400030d0:	mov    esi,edx
   1400030d2:	mov    rax,QWORD PTR [rdi]
   1400030d5:	mov    rbx,QWORD PTR [rax+0x10]
   1400030d9:	mov    rcx,rbx
   1400030dc:	call   QWORD PTR [rip+0x31d6]        # 0x1400062b8
   1400030e2:	mov    rcx,rdi
   1400030e5:	call   rbx
   1400030e7:	lea    rax,[rip+0x35c2]        # 0x1400066b0
   1400030ee:	mov    QWORD PTR [r14],rax
   1400030f1:	test   sil,0x1
   1400030f5:	je     0x1400030ff
   1400030f7:	mov    rcx,r14
   1400030fa:	call   0x1400049e4
   1400030ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140003104:	mov    rax,r14
   140003107:	mov    rsi,QWORD PTR [rsp+0x38]
   14000310c:	mov    rdi,QWORD PTR [rsp+0x40]
   140003111:	add    rsp,0x20
   140003115:	pop    r14
   140003117:	ret    
   140003118:	int3   
   140003119:	int3   
   14000311a:	int3   
   14000311b:	int3   
   14000311c:	int3   
   14000311d:	int3   
   14000311e:	int3   
   14000311f:	int3   
   140003120:	mov    QWORD PTR [rsp+0x8],rbx
   140003125:	mov    QWORD PTR [rsp+0x10],rsi
   14000312a:	mov    QWORD PTR [rsp+0x18],rdi
   14000312f:	push   r14
   140003131:	sub    rsp,0x20
   140003135:	mov    rdi,QWORD PTR [rip+0x650c]        # 0x140009648
   14000313c:	lea    rax,[rip+0x365d]        # 0x1400067a0
   140003143:	mov    QWORD PTR [rcx],rax
   140003146:	mov    r14,rcx
   140003149:	mov    DWORD PTR [rcx+0x8],0xc0000001
   140003150:	mov    esi,edx
   140003152:	mov    rax,QWORD PTR [rdi]
   140003155:	mov    rbx,QWORD PTR [rax+0x10]
   140003159:	mov    rcx,rbx
   14000315c:	call   QWORD PTR [rip+0x3156]        # 0x1400062b8
   140003162:	mov    rcx,rdi
   140003165:	call   rbx
   140003167:	lea    rax,[rip+0x3542]        # 0x1400066b0
   14000316e:	mov    QWORD PTR [r14+0x10],rax
   140003172:	test   sil,0x1
   140003176:	je     0x140003180
   140003178:	mov    rcx,r14
   14000317b:	call   0x1400049e4
   140003180:	mov    rbx,QWORD PTR [rsp+0x30]
   140003185:	mov    rax,r14
   140003188:	mov    rsi,QWORD PTR [rsp+0x38]
   14000318d:	mov    rdi,QWORD PTR [rsp+0x40]
   140003192:	add    rsp,0x20
   140003196:	pop    r14
   140003198:	ret    
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	rex push rbx
   1400031a2:	sub    rsp,0x20
   1400031a6:	mov    rbx,rcx
   1400031a9:	mov    rcx,QWORD PTR [rbx+0x50]
   1400031ad:	or     edx,0xffffffff
   1400031b0:	call   QWORD PTR [rip+0x2e5a]        # 0x140006010
   1400031b6:	mov    edx,DWORD PTR [rbx+0x58]
   1400031b9:	mov    rcx,QWORD PTR [rbx+0x50]
   1400031bd:	mov    BYTE PTR [rbx+0x61],0x0
   1400031c1:	call   QWORD PTR [rip+0x2e49]        # 0x140006010
   1400031c7:	test   eax,eax
   1400031c9:	je     0x1400031b6
   1400031cb:	cmp    BYTE PTR [rbx+0x61],0x0
   1400031cf:	jne    0x1400031a9
   1400031d1:	cmp    DWORD PTR [rbx+0xc],0x0
   1400031d5:	jne    0x1400031a9
   1400031d7:	mov    rcx,QWORD PTR [rbx+0x50]
   1400031db:	call   QWORD PTR [rip+0x2e8f]        # 0x140006070
   1400031e1:	mov    ecx,DWORD PTR [rbx+0x48]
   1400031e4:	xor    r9d,r9d
   1400031e7:	xor    r8d,r8d
   1400031ea:	lea    edx,[r9+0x12]
   1400031ee:	call   QWORD PTR [rip+0x2fac]        # 0x1400061a0
   1400031f4:	xor    eax,eax
   1400031f6:	add    rsp,0x20
   1400031fa:	pop    rbx
   1400031fb:	ret    
   1400031fc:	int3   
   1400031fd:	int3   
   1400031fe:	int3   
   1400031ff:	int3   
   140003200:	int3   
   140003201:	int3   
   140003202:	int3   
   140003203:	int3   
   140003204:	xor    r9d,r9d
   140003207:	lea    rdx,[rip+0x3a6a]        # 0x140006c78
   14000320e:	xor    r8d,r8d
   140003211:	xor    ecx,ecx
   140003213:	rex.W jmp QWORD PTR [rip+0x7e06]        # 0x14000b020
   14000321a:	int3   
   14000321b:	int3   
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	mov    rax,rsp
   140003223:	mov    QWORD PTR [rax+0x10],rbx
   140003227:	mov    QWORD PTR [rax+0x18],rsi
   14000322b:	mov    QWORD PTR [rax+0x20],rdi
   14000322f:	push   rbp
   140003230:	lea    rbp,[rax-0x928]
   140003237:	sub    rsp,0xa20
   14000323e:	mov    rax,QWORD PTR [rip+0x5dc3]        # 0x140009008
   140003245:	xor    rax,rsp
   140003248:	mov    QWORD PTR [rbp+0x910],rax
   14000324f:	test   BYTE PTR [rip+0x642a],0x1        # 0x140009680
   140003256:	mov    rbx,rcx
   140003259:	je     0x140003260
   14000325b:	call   0x140003204
   140003260:	xor    edx,edx
   140003262:	mov    DWORD PTR [rsp+0x50],0x8a0
   14000326a:	mov    r8d,0x898
   140003270:	lea    rcx,[rsp+0x58]
   140003275:	call   0x1400051ee
   14000327a:	mov    r8d,0x104
   140003280:	lea    rdx,[rbp+0x1e0]
   140003287:	xor    ecx,ecx
   140003289:	call   QWORD PTR [rip+0x2da9]        # 0x140006038
   14000328f:	lea    r8,[rip+0x379a]        # 0x140006a30
   140003296:	mov    edx,0x80
   14000329b:	lea    rax,[rbp+0xe0]
   1400032a2:	sub    r8,rax
   1400032a5:	lea    rcx,[rbp+0xe0]
   1400032ac:	xor    esi,esi
   1400032ae:	lea    rax,[rdx+0x7fffff7e]
   1400032b5:	test   rax,rax
   1400032b8:	je     0x1400032d1
   1400032ba:	movzx  eax,WORD PTR [r8+rcx*1]
   1400032bf:	test   ax,ax
   1400032c2:	je     0x1400032d1
   1400032c4:	mov    WORD PTR [rcx],ax
   1400032c7:	add    rcx,0x2
   1400032cb:	sub    rdx,0x1
   1400032cf:	jne    0x1400032ae
   1400032d1:	test   rdx,rdx
   1400032d4:	jne    0x1400032da
   1400032d6:	sub    rcx,0x2
   1400032da:	mov    WORD PTR [rcx],si
   1400032dd:	lea    rcx,[rbp+0x1e0]
   1400032e4:	call   QWORD PTR [rip+0x2e66]        # 0x140006150
   1400032ea:	movups xmm0,XMMWORD PTR [rip+0x375f]        # 0x140006a50
   1400032f1:	xor    edx,edx
   1400032f3:	lea    rcx,[rbp+0x850]
   1400032fa:	mov    r8d,0xb8
   140003300:	mov    rdi,rax
   140003303:	movdqu XMMWORD PTR [rbp+0x840],xmm0
   14000330b:	call   0x1400051ee
   140003310:	mov    r8d,0x27
   140003316:	lea    rdx,[rbp+0x7f0]
   14000331d:	lea    rcx,[rip+0x64e4]        # 0x140009808
   140003324:	call   QWORD PTR [rip+0x7d16]        # 0x14000b040
   14000332a:	lea    r9,[rsp+0x40]
   14000332f:	mov    edx,0x1
   140003334:	lea    r8,[rsp+0x50]
   140003339:	lea    rcx,[rip+0x3720]        # 0x140006a60
   140003340:	call   QWORD PTR [rip+0x7d3a]        # 0x14000b080
   140003346:	test   eax,eax
   140003348:	js     0x140003404
   14000334e:	mov    rcx,QWORD PTR [rsp+0x40]
   140003353:	lea    r8,[rip+0x3746]        # 0x140006aa0
   14000335a:	mov    r9,rdi
   14000335d:	xor    edx,edx
   14000335f:	call   QWORD PTR [rip+0x7d13]        # 0x14000b078
   140003365:	test   eax,eax
   140003367:	js     0x1400033f9
   14000336d:	mov    rcx,QWORD PTR [rsp+0x40]
   140003372:	lea    r9,[rbp+0x840]
   140003379:	lea    r8,[rip+0x3730]        # 0x140006ab0
   140003380:	mov    edx,0x1
   140003385:	call   QWORD PTR [rip+0x7ced]        # 0x14000b078
   14000338b:	test   eax,eax
   14000338d:	js     0x1400033f9
   14000338f:	mov    rcx,QWORD PTR [rsp+0x40]
   140003394:	lea    r9,[rbp+0x7f0]
   14000339b:	lea    r8,[rip+0x3726]        # 0x140006ac8
   1400033a2:	mov    edx,0x2
   1400033a7:	call   QWORD PTR [rip+0x7ccb]        # 0x14000b078
   1400033ad:	test   eax,eax
   1400033af:	js     0x1400033f9
   1400033b1:	call   QWORD PTR [rip+0x2d19]        # 0x1400060d0
   1400033b7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400033bc:	mov    r9d,0x2
   1400033c2:	mov    DWORD PTR [rsp+0x30],esi
   1400033c6:	mov    rdx,rax
   1400033c9:	mov    QWORD PTR [rsp+0x28],rsi
   1400033ce:	mov    r8,rbx
   1400033d1:	mov    QWORD PTR [rsp+0x20],rsi
   1400033d6:	call   QWORD PTR [rip+0x7c94]        # 0x14000b070
   1400033dc:	test   eax,eax
   1400033de:	js     0x1400033f9
   1400033e0:	mov    rcx,QWORD PTR [rsp+0x40]
   1400033e5:	lea    r9,[rsp+0x48]
   1400033ea:	mov    edx,0x1
   1400033ef:	lea    r8d,[rdx+0x23]
   1400033f3:	call   QWORD PTR [rip+0x7c6f]        # 0x14000b068
   1400033f9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400033fe:	call   QWORD PTR [rip+0x7c84]        # 0x14000b088
   140003404:	mov    rcx,QWORD PTR [rbp+0x910]
   14000340b:	xor    rcx,rsp
   14000340e:	call   0x140004e10
   140003413:	lea    r11,[rsp+0xa20]
   14000341b:	mov    rbx,QWORD PTR [r11+0x18]
   14000341f:	mov    rsi,QWORD PTR [r11+0x20]
   140003423:	mov    rdi,QWORD PTR [r11+0x28]
   140003427:	mov    rsp,r11
   14000342a:	pop    rbp
   14000342b:	ret    
   14000342c:	int3   
   14000342d:	int3   
   14000342e:	int3   
   14000342f:	int3   
   140003430:	int3   
   140003431:	int3   
   140003432:	int3   
   140003433:	int3   
   140003434:	int3   
   140003435:	int3   
   140003436:	int3   
   140003437:	int3   
   140003438:	int3   
   140003439:	int3   
   14000343a:	int3   
   14000343b:	int3   
   14000343c:	int3   
   14000343d:	int3   
   14000343e:	int3   
   14000343f:	int3   
   140003440:	rex push rbx
   140003442:	push   rbp
   140003443:	push   rsi
   140003444:	push   rdi
   140003445:	push   r14
   140003447:	sub    rsp,0x30
   14000344b:	mov    rax,QWORD PTR [rip+0x5bb6]        # 0x140009008
   140003452:	xor    rax,rsp
   140003455:	mov    QWORD PTR [rsp+0x28],rax
   14000345a:	mov    r14,r8
   14000345d:	mov    r9,r8
   140003460:	mov    r8,rdx
   140003463:	mov    rbp,rdx
   140003466:	lea    rdx,[rip+0x36a3]        # 0x140006b10
   14000346d:	mov    rdi,rcx
   140003470:	call   QWORD PTR [rip+0x2ce2]        # 0x140006158
   140003476:	mov    esi,eax
   140003478:	test   eax,eax
   14000347a:	js     0x1400034cd
   14000347c:	mov    rdi,QWORD PTR [rdi+0x30]
   140003480:	mov    r8,QWORD PTR [rdi]
   140003483:	mov    rbx,QWORD PTR [r8]
   140003486:	mov    rcx,rbx
   140003489:	call   QWORD PTR [rip+0x2e29]        # 0x1400062b8
   14000348f:	lea    r8,[rsp+0x20]
   140003494:	mov    rdx,rbp
   140003497:	mov    rcx,rdi
   14000349a:	call   rbx
   14000349c:	test   eax,eax
   14000349e:	jns    0x1400034ae
   1400034a0:	mov    rbx,QWORD PTR [r14]
   1400034a3:	mov    esi,0x80004002
   1400034a8:	and    QWORD PTR [r14],0x0
   1400034ac:	jmp    0x1400034b3
   1400034ae:	mov    rbx,QWORD PTR [rsp+0x20]
   1400034b3:	test   rbx,rbx
   1400034b6:	je     0x1400034cd
   1400034b8:	mov    rax,QWORD PTR [rbx]
   1400034bb:	mov    rdi,QWORD PTR [rax+0x10]
   1400034bf:	mov    rcx,rdi
   1400034c2:	call   QWORD PTR [rip+0x2df0]        # 0x1400062b8
   1400034c8:	mov    rcx,rbx
   1400034cb:	call   rdi
   1400034cd:	mov    eax,esi
   1400034cf:	mov    rcx,QWORD PTR [rsp+0x28]
   1400034d4:	xor    rcx,rsp
   1400034d7:	call   0x140004e10
   1400034dc:	add    rsp,0x30
   1400034e0:	pop    r14
   1400034e2:	pop    rdi
   1400034e3:	pop    rsi
   1400034e4:	pop    rbp
   1400034e5:	pop    rbx
   1400034e6:	ret    
   1400034e7:	int3   
   1400034e8:	int3   
   1400034e9:	int3   
   1400034ea:	int3   
   1400034eb:	int3   
   1400034ec:	int3   
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	mov    eax,0x1
   1400034f5:	lock xadd DWORD PTR [rcx+0x38],eax
   1400034fa:	inc    eax
   1400034fc:	ret    
   1400034fd:	int3   
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	int3   
   140003501:	int3   
   140003502:	int3   
   140003503:	int3   
   140003504:	int3   
   140003505:	int3   
   140003506:	int3   
   140003507:	int3   
   140003508:	int3   
   140003509:	int3   
   14000350a:	int3   
   14000350b:	int3   
   14000350c:	int3   
   14000350d:	int3   
   14000350e:	int3   
   14000350f:	int3   
   140003510:	mov    QWORD PTR [rsp+0x8],rbx
   140003515:	mov    QWORD PTR [rsp+0x10],rsi
   14000351a:	push   rdi
   14000351b:	sub    rsp,0x20
   14000351f:	mov    rsi,rcx
   140003522:	or     edi,0xffffffff
   140003525:	lock xadd DWORD PTR [rcx+0x38],edi
   14000352a:	sub    edi,0x1
   14000352d:	jne    0x14000354c
   14000352f:	test   rcx,rcx
   140003532:	je     0x14000354c
   140003534:	mov    rdx,QWORD PTR [rcx]
   140003537:	mov    rbx,QWORD PTR [rdx+0x20]
   14000353b:	mov    rcx,rbx
   14000353e:	call   QWORD PTR [rip+0x2d74]        # 0x1400062b8
   140003544:	lea    edx,[rdi+0x1]
   140003547:	mov    rcx,rsi
   14000354a:	call   rbx
   14000354c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003551:	mov    eax,edi
   140003553:	mov    rsi,QWORD PTR [rsp+0x38]
   140003558:	add    rsp,0x20
   14000355c:	pop    rdi
   14000355d:	ret    
   14000355e:	int3   
   14000355f:	int3   
   140003560:	int3   
   140003561:	int3   
   140003562:	int3   
   140003563:	int3   
   140003564:	int3   
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	int3   
   14000356d:	int3   
   14000356e:	int3   
   14000356f:	int3   
   140003570:	mov    QWORD PTR [rsp+0x20],rbx
   140003575:	push   rbp
   140003576:	push   rsi
   140003577:	push   rdi
   140003578:	sub    rsp,0x30
   14000357c:	mov    rax,QWORD PTR [rip+0x5a85]        # 0x140009008
   140003583:	xor    rax,rsp
   140003586:	mov    QWORD PTR [rsp+0x28],rax
   14000358b:	mov    rdi,QWORD PTR [rcx+0x18]
   14000358f:	xor    ebx,ebx
   140003591:	mov    QWORD PTR [rsp+0x20],rbx
   140003596:	mov    ebp,r8d
   140003599:	mov    rsi,rdx
   14000359c:	test   rdi,rdi
   14000359f:	je     0x1400035ef
   1400035a1:	mov    rax,QWORD PTR [rdi]
   1400035a4:	mov    rbx,QWORD PTR [rax]
   1400035a7:	mov    rcx,rbx
   1400035aa:	call   QWORD PTR [rip+0x2d08]        # 0x1400062b8
   1400035b0:	lea    r8,[rsp+0x20]
   1400035b5:	mov    rcx,rdi
   1400035b8:	lea    rdx,[rip+0x3601]        # 0x140006bc0
   1400035bf:	call   rbx
   1400035c1:	mov    rbx,QWORD PTR [rsp+0x20]
   1400035c6:	test   rbx,rbx
   1400035c9:	je     0x1400035ef
   1400035cb:	mov    rax,QWORD PTR [rbx]
   1400035ce:	mov    rdi,QWORD PTR [rax+0x18]
   1400035d2:	mov    rcx,rdi
   1400035d5:	call   QWORD PTR [rip+0x2cdd]        # 0x1400062b8
   1400035db:	mov    r8d,ebp
   1400035de:	mov    rdx,rsi
   1400035e1:	mov    rcx,rbx
   1400035e4:	call   rdi
   1400035e6:	mov    rbx,QWORD PTR [rsp+0x20]
   1400035eb:	mov    esi,eax
   1400035ed:	jmp    0x1400035f4
   1400035ef:	mov    esi,0x80004002
   1400035f4:	test   rbx,rbx
   1400035f7:	je     0x14000360e
   1400035f9:	mov    rax,QWORD PTR [rbx]
   1400035fc:	mov    rdi,QWORD PTR [rax+0x10]
   140003600:	mov    rcx,rdi
   140003603:	call   QWORD PTR [rip+0x2caf]        # 0x1400062b8
   140003609:	mov    rcx,rbx
   14000360c:	call   rdi
   14000360e:	mov    eax,esi
   140003610:	mov    rcx,QWORD PTR [rsp+0x28]
   140003615:	xor    rcx,rsp
   140003618:	call   0x140004e10
   14000361d:	mov    rbx,QWORD PTR [rsp+0x68]
   140003622:	add    rsp,0x30
   140003626:	pop    rdi
   140003627:	pop    rsi
   140003628:	pop    rbp
   140003629:	ret    
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	mov    QWORD PTR [rsp+0x20],rbx
   140003635:	push   rbp
   140003636:	push   rsi
   140003637:	push   rdi
   140003638:	sub    rsp,0x30
   14000363c:	mov    rax,QWORD PTR [rip+0x59c5]        # 0x140009008
   140003643:	xor    rax,rsp
   140003646:	mov    QWORD PTR [rsp+0x28],rax
   14000364b:	mov    rdi,QWORD PTR [rcx+0x20]
   14000364f:	xor    ebx,ebx
   140003651:	mov    QWORD PTR [rsp+0x20],rbx
   140003656:	mov    ebp,r8d
   140003659:	mov    rsi,rdx
   14000365c:	test   rdi,rdi
   14000365f:	je     0x1400036af
   140003661:	mov    rax,QWORD PTR [rdi]
   140003664:	mov    rbx,QWORD PTR [rax]
   140003667:	mov    rcx,rbx
   14000366a:	call   QWORD PTR [rip+0x2c48]        # 0x1400062b8
   140003670:	lea    r8,[rsp+0x20]
   140003675:	mov    rcx,rdi
   140003678:	lea    rdx,[rip+0x3551]        # 0x140006bd0
   14000367f:	call   rbx
   140003681:	mov    rbx,QWORD PTR [rsp+0x20]
   140003686:	test   rbx,rbx
   140003689:	je     0x1400036af
   14000368b:	mov    rax,QWORD PTR [rbx]
   14000368e:	mov    rdi,QWORD PTR [rax+0x18]
   140003692:	mov    rcx,rdi
   140003695:	call   QWORD PTR [rip+0x2c1d]        # 0x1400062b8
   14000369b:	mov    r8d,ebp
   14000369e:	mov    rdx,rsi
   1400036a1:	mov    rcx,rbx
   1400036a4:	call   rdi
   1400036a6:	mov    rbx,QWORD PTR [rsp+0x20]
   1400036ab:	mov    esi,eax
   1400036ad:	jmp    0x1400036b4
   1400036af:	mov    esi,0x80004002
   1400036b4:	test   rbx,rbx
   1400036b7:	je     0x1400036ce
   1400036b9:	mov    rax,QWORD PTR [rbx]
   1400036bc:	mov    rdi,QWORD PTR [rax+0x10]
   1400036c0:	mov    rcx,rdi
   1400036c3:	call   QWORD PTR [rip+0x2bef]        # 0x1400062b8
   1400036c9:	mov    rcx,rbx
   1400036cc:	call   rdi
   1400036ce:	mov    eax,esi
   1400036d0:	mov    rcx,QWORD PTR [rsp+0x28]
   1400036d5:	xor    rcx,rsp
   1400036d8:	call   0x140004e10
   1400036dd:	mov    rbx,QWORD PTR [rsp+0x68]
   1400036e2:	add    rsp,0x30
   1400036e6:	pop    rdi
   1400036e7:	pop    rsi
   1400036e8:	pop    rbp
   1400036e9:	ret    
   1400036ea:	int3   
   1400036eb:	int3   
   1400036ec:	int3   
   1400036ed:	int3   
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400036f5:	mov    QWORD PTR [rsp+0x20],rsi
   1400036fa:	push   rdi
   1400036fb:	sub    rsp,0x30
   1400036ff:	mov    rax,QWORD PTR [rip+0x5902]        # 0x140009008
   140003706:	xor    rax,rsp
   140003709:	mov    QWORD PTR [rsp+0x28],rax
   14000370e:	mov    rdi,QWORD PTR [rcx+0x10]
   140003712:	xor    ebx,ebx
   140003714:	mov    QWORD PTR [rsp+0x20],rbx
   140003719:	mov    rsi,rdx
   14000371c:	test   rdi,rdi
   14000371f:	je     0x14000376c
   140003721:	mov    rax,QWORD PTR [rdi]
   140003724:	mov    rbx,QWORD PTR [rax]
   140003727:	mov    rcx,rbx
   14000372a:	call   QWORD PTR [rip+0x2b88]        # 0x1400062b8
   140003730:	lea    r8,[rsp+0x20]
   140003735:	mov    rcx,rdi
   140003738:	lea    rdx,[rip+0x3451]        # 0x140006b90
   14000373f:	call   rbx
   140003741:	mov    rbx,QWORD PTR [rsp+0x20]
   140003746:	test   rbx,rbx
   140003749:	je     0x14000376c
   14000374b:	mov    rax,QWORD PTR [rbx]
   14000374e:	mov    rdi,QWORD PTR [rax+0x18]
   140003752:	mov    rcx,rdi
   140003755:	call   QWORD PTR [rip+0x2b5d]        # 0x1400062b8
   14000375b:	mov    rdx,rsi
   14000375e:	mov    rcx,rbx
   140003761:	call   rdi
   140003763:	mov    rbx,QWORD PTR [rsp+0x20]
   140003768:	mov    esi,eax
   14000376a:	jmp    0x140003771
   14000376c:	mov    esi,0x80004002
   140003771:	test   rbx,rbx
   140003774:	je     0x14000378b
   140003776:	mov    rax,QWORD PTR [rbx]
   140003779:	mov    rdi,QWORD PTR [rax+0x10]
   14000377d:	mov    rcx,rdi
   140003780:	call   QWORD PTR [rip+0x2b32]        # 0x1400062b8
   140003786:	mov    rcx,rbx
   140003789:	call   rdi
   14000378b:	mov    eax,esi
   14000378d:	mov    rcx,QWORD PTR [rsp+0x28]
   140003792:	xor    rcx,rsp
   140003795:	call   0x140004e10
   14000379a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000379f:	mov    rsi,QWORD PTR [rsp+0x58]
   1400037a4:	add    rsp,0x30
   1400037a8:	pop    rdi
   1400037a9:	ret    
   1400037aa:	int3   
   1400037ab:	int3   
   1400037ac:	int3   
   1400037ad:	int3   
   1400037ae:	int3   
   1400037af:	int3   
   1400037b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400037b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400037ba:	push   rdi
   1400037bb:	sub    rsp,0x30
   1400037bf:	mov    rax,QWORD PTR [rip+0x5842]        # 0x140009008
   1400037c6:	xor    rax,rsp
   1400037c9:	mov    QWORD PTR [rsp+0x28],rax
   1400037ce:	mov    rdi,QWORD PTR [rcx+0x10]
   1400037d2:	xor    ebx,ebx
   1400037d4:	mov    QWORD PTR [rsp+0x20],rbx
   1400037d9:	test   rdi,rdi
   1400037dc:	je     0x140003826
   1400037de:	mov    rax,QWORD PTR [rdi]
   1400037e1:	mov    rbx,QWORD PTR [rax]
   1400037e4:	mov    rcx,rbx
   1400037e7:	call   QWORD PTR [rip+0x2acb]        # 0x1400062b8
   1400037ed:	lea    r8,[rsp+0x20]
   1400037f2:	mov    rcx,rdi
   1400037f5:	lea    rdx,[rip+0x33a4]        # 0x140006ba0
   1400037fc:	call   rbx
   1400037fe:	mov    rbx,QWORD PTR [rsp+0x20]
   140003803:	test   rbx,rbx
   140003806:	je     0x140003826
   140003808:	mov    rax,QWORD PTR [rbx]
   14000380b:	mov    rdi,QWORD PTR [rax+0x20]
   14000380f:	mov    rcx,rdi
   140003812:	call   QWORD PTR [rip+0x2aa0]        # 0x1400062b8
   140003818:	mov    rcx,rbx
   14000381b:	call   rdi
   14000381d:	mov    rbx,QWORD PTR [rsp+0x20]
   140003822:	mov    esi,eax
   140003824:	jmp    0x14000382b
   140003826:	mov    esi,0x80004002
   14000382b:	test   rbx,rbx
   14000382e:	je     0x140003845
   140003830:	mov    rax,QWORD PTR [rbx]
   140003833:	mov    rdi,QWORD PTR [rax+0x10]
   140003837:	mov    rcx,rdi
   14000383a:	call   QWORD PTR [rip+0x2a78]        # 0x1400062b8
   140003840:	mov    rcx,rbx
   140003843:	call   rdi
   140003845:	mov    eax,esi
   140003847:	mov    rcx,QWORD PTR [rsp+0x28]
   14000384c:	xor    rcx,rsp
   14000384f:	call   0x140004e10
   140003854:	mov    rbx,QWORD PTR [rsp+0x48]
   140003859:	mov    rsi,QWORD PTR [rsp+0x50]
   14000385e:	add    rsp,0x30
   140003862:	pop    rdi
   140003863:	ret    
   140003864:	int3   
   140003865:	int3   
   140003866:	int3   
   140003867:	int3   
   140003868:	int3   
   140003869:	int3   
   14000386a:	int3   
   14000386b:	int3   
   14000386c:	int3   
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	mov    QWORD PTR [rsp+0x20],rbx
   140003875:	push   rbp
   140003876:	push   rsi
   140003877:	push   rdi
   140003878:	sub    rsp,0x30
   14000387c:	mov    rax,QWORD PTR [rip+0x5785]        # 0x140009008
   140003883:	xor    rax,rsp
   140003886:	mov    QWORD PTR [rsp+0x28],rax
   14000388b:	mov    rdi,QWORD PTR [rcx+0x8]
   14000388f:	xor    ebx,ebx
   140003891:	mov    QWORD PTR [rsp+0x20],rbx
   140003896:	mov    ebp,r8d
   140003899:	mov    rsi,rdx
   14000389c:	test   rdi,rdi
   14000389f:	je     0x1400038ef
   1400038a1:	mov    rax,QWORD PTR [rdi]
   1400038a4:	mov    rbx,QWORD PTR [rax]
   1400038a7:	mov    rcx,rbx
   1400038aa:	call   QWORD PTR [rip+0x2a08]        # 0x1400062b8
   1400038b0:	lea    r8,[rsp+0x20]
   1400038b5:	mov    rcx,rdi
   1400038b8:	lea    rdx,[rip+0x32e1]        # 0x140006ba0
   1400038bf:	call   rbx
   1400038c1:	mov    rbx,QWORD PTR [rsp+0x20]
   1400038c6:	test   rbx,rbx
   1400038c9:	je     0x1400038ef
   1400038cb:	mov    rax,QWORD PTR [rbx]
   1400038ce:	mov    rdi,QWORD PTR [rax+0x28]
   1400038d2:	mov    rcx,rdi
   1400038d5:	call   QWORD PTR [rip+0x29dd]        # 0x1400062b8
   1400038db:	mov    r8d,ebp
   1400038de:	mov    rdx,rsi
   1400038e1:	mov    rcx,rbx
   1400038e4:	call   rdi
   1400038e6:	mov    rbx,QWORD PTR [rsp+0x20]
   1400038eb:	mov    esi,eax
   1400038ed:	jmp    0x1400038f4
   1400038ef:	mov    esi,0x80004002
   1400038f4:	test   rbx,rbx
   1400038f7:	je     0x14000390e
   1400038f9:	mov    rax,QWORD PTR [rbx]
   1400038fc:	mov    rdi,QWORD PTR [rax+0x10]
   140003900:	mov    rcx,rdi
   140003903:	call   QWORD PTR [rip+0x29af]        # 0x1400062b8
   140003909:	mov    rcx,rbx
   14000390c:	call   rdi
   14000390e:	mov    eax,esi
   140003910:	mov    rcx,QWORD PTR [rsp+0x28]
   140003915:	xor    rcx,rsp
   140003918:	call   0x140004e10
   14000391d:	mov    rbx,QWORD PTR [rsp+0x68]
   140003922:	add    rsp,0x30
   140003926:	pop    rdi
   140003927:	pop    rsi
   140003928:	pop    rbp
   140003929:	ret    
   14000392a:	int3   
   14000392b:	int3   
   14000392c:	int3   
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	mov    QWORD PTR [rsp+0x20],rbx
   140003935:	push   rbp
   140003936:	push   rsi
   140003937:	push   rdi
   140003938:	sub    rsp,0x30
   14000393c:	mov    rax,QWORD PTR [rip+0x56c5]        # 0x140009008
   140003943:	xor    rax,rsp
   140003946:	mov    QWORD PTR [rsp+0x28],rax
   14000394b:	mov    rdi,QWORD PTR [rcx+0x8]
   14000394f:	xor    ebx,ebx
   140003951:	mov    QWORD PTR [rsp+0x20],rbx
   140003956:	mov    ebp,r8d
   140003959:	mov    rsi,rdx
   14000395c:	test   rdi,rdi
   14000395f:	je     0x1400039af
   140003961:	mov    rax,QWORD PTR [rdi]
   140003964:	mov    rbx,QWORD PTR [rax]
   140003967:	mov    rcx,rbx
   14000396a:	call   QWORD PTR [rip+0x2948]        # 0x1400062b8
   140003970:	lea    r8,[rsp+0x20]
   140003975:	mov    rcx,rdi
   140003978:	lea    rdx,[rip+0x3221]        # 0x140006ba0
   14000397f:	call   rbx
   140003981:	mov    rbx,QWORD PTR [rsp+0x20]
   140003986:	test   rbx,rbx
   140003989:	je     0x1400039af
   14000398b:	mov    rax,QWORD PTR [rbx]
   14000398e:	mov    rdi,QWORD PTR [rax+0x30]
   140003992:	mov    rcx,rdi
   140003995:	call   QWORD PTR [rip+0x291d]        # 0x1400062b8
   14000399b:	mov    r8d,ebp
   14000399e:	mov    rdx,rsi
   1400039a1:	mov    rcx,rbx
   1400039a4:	call   rdi
   1400039a6:	mov    rbx,QWORD PTR [rsp+0x20]
   1400039ab:	mov    esi,eax
   1400039ad:	jmp    0x1400039b4
   1400039af:	mov    esi,0x80004002
   1400039b4:	test   rbx,rbx
   1400039b7:	je     0x1400039ce
   1400039b9:	mov    rax,QWORD PTR [rbx]
   1400039bc:	mov    rdi,QWORD PTR [rax+0x10]
   1400039c0:	mov    rcx,rdi
   1400039c3:	call   QWORD PTR [rip+0x28ef]        # 0x1400062b8
   1400039c9:	mov    rcx,rbx
   1400039cc:	call   rdi
   1400039ce:	mov    eax,esi
   1400039d0:	mov    rcx,QWORD PTR [rsp+0x28]
   1400039d5:	xor    rcx,rsp
   1400039d8:	call   0x140004e10
   1400039dd:	mov    rbx,QWORD PTR [rsp+0x68]
   1400039e2:	add    rsp,0x30
   1400039e6:	pop    rdi
   1400039e7:	pop    rsi
   1400039e8:	pop    rbp
   1400039e9:	ret    
   1400039ea:	int3   
   1400039eb:	int3   
   1400039ec:	int3   
   1400039ed:	int3   
   1400039ee:	int3   
   1400039ef:	int3   
   1400039f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400039f5:	mov    QWORD PTR [rsp+0x20],rsi
   1400039fa:	push   rdi
   1400039fb:	sub    rsp,0x30
   1400039ff:	mov    rax,QWORD PTR [rip+0x5602]        # 0x140009008
   140003a06:	xor    rax,rsp
   140003a09:	mov    QWORD PTR [rsp+0x28],rax
   140003a0e:	mov    rdi,QWORD PTR [rcx+0x8]
   140003a12:	xor    ebx,ebx
   140003a14:	mov    QWORD PTR [rsp+0x20],rbx
   140003a19:	mov    rsi,rdx
   140003a1c:	test   rdi,rdi
   140003a1f:	je     0x140003a6c
   140003a21:	mov    rax,QWORD PTR [rdi]
   140003a24:	mov    rbx,QWORD PTR [rax]
   140003a27:	mov    rcx,rbx
   140003a2a:	call   QWORD PTR [rip+0x2888]        # 0x1400062b8
   140003a30:	lea    r8,[rsp+0x20]
   140003a35:	mov    rcx,rdi
   140003a38:	lea    rdx,[rip+0x3161]        # 0x140006ba0
   140003a3f:	call   rbx
   140003a41:	mov    rbx,QWORD PTR [rsp+0x20]
   140003a46:	test   rbx,rbx
   140003a49:	je     0x140003a6c
   140003a4b:	mov    rax,QWORD PTR [rbx]
   140003a4e:	mov    rdi,QWORD PTR [rax+0x38]
   140003a52:	mov    rcx,rdi
   140003a55:	call   QWORD PTR [rip+0x285d]        # 0x1400062b8
   140003a5b:	mov    rdx,rsi
   140003a5e:	mov    rcx,rbx
   140003a61:	call   rdi
   140003a63:	mov    rbx,QWORD PTR [rsp+0x20]
   140003a68:	mov    esi,eax
   140003a6a:	jmp    0x140003a71
   140003a6c:	mov    esi,0x80004002
   140003a71:	test   rbx,rbx
   140003a74:	je     0x140003a8b
   140003a76:	mov    rax,QWORD PTR [rbx]
   140003a79:	mov    rdi,QWORD PTR [rax+0x10]
   140003a7d:	mov    rcx,rdi
   140003a80:	call   QWORD PTR [rip+0x2832]        # 0x1400062b8
   140003a86:	mov    rcx,rbx
   140003a89:	call   rdi
   140003a8b:	mov    eax,esi
   140003a8d:	mov    rcx,QWORD PTR [rsp+0x28]
   140003a92:	xor    rcx,rsp
   140003a95:	call   0x140004e10
   140003a9a:	mov    rbx,QWORD PTR [rsp+0x50]
   140003a9f:	mov    rsi,QWORD PTR [rsp+0x58]
   140003aa4:	add    rsp,0x30
   140003aa8:	pop    rdi
   140003aa9:	ret    
   140003aaa:	int3   
   140003aab:	int3   
   140003aac:	int3   
   140003aad:	int3   
   140003aae:	int3   
   140003aaf:	int3   
   140003ab0:	mov    QWORD PTR [rsp+0x18],rbx
   140003ab5:	mov    QWORD PTR [rsp+0x20],rsi
   140003aba:	push   rdi
   140003abb:	sub    rsp,0x30
   140003abf:	mov    rax,QWORD PTR [rip+0x5542]        # 0x140009008
   140003ac6:	xor    rax,rsp
   140003ac9:	mov    QWORD PTR [rsp+0x28],rax
   140003ace:	mov    rdi,QWORD PTR [rcx+0x8]
   140003ad2:	xor    ebx,ebx
   140003ad4:	mov    QWORD PTR [rsp+0x20],rbx
   140003ad9:	mov    rsi,rdx
   140003adc:	test   rdi,rdi
   140003adf:	je     0x140003b2c
   140003ae1:	mov    rax,QWORD PTR [rdi]
   140003ae4:	mov    rbx,QWORD PTR [rax]
   140003ae7:	mov    rcx,rbx
   140003aea:	call   QWORD PTR [rip+0x27c8]        # 0x1400062b8
   140003af0:	lea    r8,[rsp+0x20]
   140003af5:	mov    rcx,rdi
   140003af8:	lea    rdx,[rip+0x30a1]        # 0x140006ba0
   140003aff:	call   rbx
   140003b01:	mov    rbx,QWORD PTR [rsp+0x20]
   140003b06:	test   rbx,rbx
   140003b09:	je     0x140003b2c
   140003b0b:	mov    rax,QWORD PTR [rbx]
   140003b0e:	mov    rdi,QWORD PTR [rax+0x40]
   140003b12:	mov    rcx,rdi
   140003b15:	call   QWORD PTR [rip+0x279d]        # 0x1400062b8
   140003b1b:	mov    rdx,rsi
   140003b1e:	mov    rcx,rbx
   140003b21:	call   rdi
   140003b23:	mov    rbx,QWORD PTR [rsp+0x20]
   140003b28:	mov    esi,eax
   140003b2a:	jmp    0x140003b31
   140003b2c:	mov    esi,0x80004002
   140003b31:	test   rbx,rbx
   140003b34:	je     0x140003b4b
   140003b36:	mov    rax,QWORD PTR [rbx]
   140003b39:	mov    rdi,QWORD PTR [rax+0x10]
   140003b3d:	mov    rcx,rdi
   140003b40:	call   QWORD PTR [rip+0x2772]        # 0x1400062b8
   140003b46:	mov    rcx,rbx
   140003b49:	call   rdi
   140003b4b:	mov    eax,esi
   140003b4d:	mov    rcx,QWORD PTR [rsp+0x28]
   140003b52:	xor    rcx,rsp
   140003b55:	call   0x140004e10
   140003b5a:	mov    rbx,QWORD PTR [rsp+0x50]
   140003b5f:	mov    rsi,QWORD PTR [rsp+0x58]
   140003b64:	add    rsp,0x30
   140003b68:	pop    rdi
   140003b69:	ret    
   140003b6a:	int3   
   140003b6b:	int3   
   140003b6c:	int3   
   140003b6d:	int3   
   140003b6e:	int3   
   140003b6f:	int3   
   140003b70:	mov    QWORD PTR [rsp+0x18],rbx
   140003b75:	mov    QWORD PTR [rsp+0x20],rsi
   140003b7a:	push   rdi
   140003b7b:	sub    rsp,0x30
   140003b7f:	mov    rax,QWORD PTR [rip+0x5482]        # 0x140009008
   140003b86:	xor    rax,rsp
   140003b89:	mov    QWORD PTR [rsp+0x28],rax
   140003b8e:	mov    rdi,QWORD PTR [rcx+0x10]
   140003b92:	xor    ebx,ebx
   140003b94:	mov    QWORD PTR [rsp+0x20],rbx
   140003b99:	mov    rsi,rdx
   140003b9c:	test   rdi,rdi
   140003b9f:	je     0x140003bec
   140003ba1:	mov    rax,QWORD PTR [rdi]
   140003ba4:	mov    rbx,QWORD PTR [rax]
   140003ba7:	mov    rcx,rbx
   140003baa:	call   QWORD PTR [rip+0x2708]        # 0x1400062b8
   140003bb0:	lea    r8,[rsp+0x20]
   140003bb5:	mov    rcx,rdi
   140003bb8:	lea    rdx,[rip+0x2ff1]        # 0x140006bb0
   140003bbf:	call   rbx
   140003bc1:	mov    rbx,QWORD PTR [rsp+0x20]
   140003bc6:	test   rbx,rbx
   140003bc9:	je     0x140003bec
   140003bcb:	mov    rax,QWORD PTR [rbx]
   140003bce:	mov    rdi,QWORD PTR [rax+0x28]
   140003bd2:	mov    rcx,rdi
   140003bd5:	call   QWORD PTR [rip+0x26dd]        # 0x1400062b8
   140003bdb:	mov    rdx,rsi
   140003bde:	mov    rcx,rbx
   140003be1:	call   rdi
   140003be3:	mov    rbx,QWORD PTR [rsp+0x20]
   140003be8:	mov    esi,eax
   140003bea:	jmp    0x140003bf1
   140003bec:	mov    esi,0x80004002
   140003bf1:	test   rbx,rbx
   140003bf4:	je     0x140003c0b
   140003bf6:	mov    rax,QWORD PTR [rbx]
   140003bf9:	mov    rdi,QWORD PTR [rax+0x10]
   140003bfd:	mov    rcx,rdi
   140003c00:	call   QWORD PTR [rip+0x26b2]        # 0x1400062b8
   140003c06:	mov    rcx,rbx
   140003c09:	call   rdi
   140003c0b:	mov    eax,esi
   140003c0d:	mov    rcx,QWORD PTR [rsp+0x28]
   140003c12:	xor    rcx,rsp
   140003c15:	call   0x140004e10
   140003c1a:	mov    rbx,QWORD PTR [rsp+0x50]
   140003c1f:	mov    rsi,QWORD PTR [rsp+0x58]
   140003c24:	add    rsp,0x30
   140003c28:	pop    rdi
   140003c29:	ret    
   140003c2a:	int3   
   140003c2b:	int3   
   140003c2c:	int3   
   140003c2d:	int3   
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	mov    QWORD PTR [rsp+0x20],rbx
   140003c35:	push   rbp
   140003c36:	push   rsi
   140003c37:	push   rdi
   140003c38:	sub    rsp,0x30
   140003c3c:	mov    rax,QWORD PTR [rip+0x53c5]        # 0x140009008
   140003c43:	xor    rax,rsp
   140003c46:	mov    QWORD PTR [rsp+0x28],rax
   140003c4b:	mov    rdi,QWORD PTR [rcx+0x10]
   140003c4f:	xor    ebx,ebx
   140003c51:	mov    QWORD PTR [rsp+0x20],rbx
   140003c56:	mov    ebp,r8d
   140003c59:	mov    rsi,rdx
   140003c5c:	test   rdi,rdi
   140003c5f:	je     0x140003caf
   140003c61:	mov    rax,QWORD PTR [rdi]
   140003c64:	mov    rbx,QWORD PTR [rax]
   140003c67:	mov    rcx,rbx
   140003c6a:	call   QWORD PTR [rip+0x2648]        # 0x1400062b8
   140003c70:	lea    r8,[rsp+0x20]
   140003c75:	mov    rcx,rdi
   140003c78:	lea    rdx,[rip+0x2f31]        # 0x140006bb0
   140003c7f:	call   rbx
   140003c81:	mov    rbx,QWORD PTR [rsp+0x20]
   140003c86:	test   rbx,rbx
   140003c89:	je     0x140003caf
   140003c8b:	mov    rax,QWORD PTR [rbx]
   140003c8e:	mov    rdi,QWORD PTR [rax+0x30]
   140003c92:	mov    rcx,rdi
   140003c95:	call   QWORD PTR [rip+0x261d]        # 0x1400062b8
   140003c9b:	mov    r8d,ebp
   140003c9e:	mov    rdx,rsi
   140003ca1:	mov    rcx,rbx
   140003ca4:	call   rdi
   140003ca6:	mov    rbx,QWORD PTR [rsp+0x20]
   140003cab:	mov    esi,eax
   140003cad:	jmp    0x140003cb4
   140003caf:	mov    esi,0x80004002
   140003cb4:	test   rbx,rbx
   140003cb7:	je     0x140003cce
   140003cb9:	mov    rax,QWORD PTR [rbx]
   140003cbc:	mov    rdi,QWORD PTR [rax+0x10]
   140003cc0:	mov    rcx,rdi
   140003cc3:	call   QWORD PTR [rip+0x25ef]        # 0x1400062b8
   140003cc9:	mov    rcx,rbx
   140003ccc:	call   rdi
   140003cce:	mov    eax,esi
   140003cd0:	mov    rcx,QWORD PTR [rsp+0x28]
   140003cd5:	xor    rcx,rsp
   140003cd8:	call   0x140004e10
   140003cdd:	mov    rbx,QWORD PTR [rsp+0x68]
   140003ce2:	add    rsp,0x30
   140003ce6:	pop    rdi
   140003ce7:	pop    rsi
   140003ce8:	pop    rbp
   140003ce9:	ret    
   140003cea:	int3   
   140003ceb:	int3   
   140003cec:	int3   
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	mov    QWORD PTR [rsp+0x18],rbx
   140003cf5:	mov    QWORD PTR [rsp+0x20],rsi
   140003cfa:	push   rdi
   140003cfb:	sub    rsp,0x30
   140003cff:	mov    rax,QWORD PTR [rip+0x5302]        # 0x140009008
   140003d06:	xor    rax,rsp
   140003d09:	mov    QWORD PTR [rsp+0x28],rax
   140003d0e:	mov    rdi,QWORD PTR [rcx+0x10]
   140003d12:	xor    ebx,ebx
   140003d14:	mov    QWORD PTR [rsp+0x20],rbx
   140003d19:	mov    rsi,rdx
   140003d1c:	test   rdi,rdi
   140003d1f:	je     0x140003d6c
   140003d21:	mov    rax,QWORD PTR [rdi]
   140003d24:	mov    rbx,QWORD PTR [rax]
   140003d27:	mov    rcx,rbx
   140003d2a:	call   QWORD PTR [rip+0x2588]        # 0x1400062b8
   140003d30:	lea    r8,[rsp+0x20]
   140003d35:	mov    rcx,rdi
   140003d38:	lea    rdx,[rip+0x2e71]        # 0x140006bb0
   140003d3f:	call   rbx
   140003d41:	mov    rbx,QWORD PTR [rsp+0x20]
   140003d46:	test   rbx,rbx
   140003d49:	je     0x140003d6c
   140003d4b:	mov    rax,QWORD PTR [rbx]
   140003d4e:	mov    rdi,QWORD PTR [rax+0x38]
   140003d52:	mov    rcx,rdi
   140003d55:	call   QWORD PTR [rip+0x255d]        # 0x1400062b8
   140003d5b:	mov    rdx,rsi
   140003d5e:	mov    rcx,rbx
   140003d61:	call   rdi
   140003d63:	mov    rbx,QWORD PTR [rsp+0x20]
   140003d68:	mov    esi,eax
   140003d6a:	jmp    0x140003d71
   140003d6c:	mov    esi,0x80004002
   140003d71:	test   rbx,rbx
   140003d74:	je     0x140003d8b
   140003d76:	mov    rax,QWORD PTR [rbx]
   140003d79:	mov    rdi,QWORD PTR [rax+0x10]
   140003d7d:	mov    rcx,rdi
   140003d80:	call   QWORD PTR [rip+0x2532]        # 0x1400062b8
   140003d86:	mov    rcx,rbx
   140003d89:	call   rdi
   140003d8b:	mov    eax,esi
   140003d8d:	mov    rcx,QWORD PTR [rsp+0x28]
   140003d92:	xor    rcx,rsp
   140003d95:	call   0x140004e10
   140003d9a:	mov    rbx,QWORD PTR [rsp+0x50]
   140003d9f:	mov    rsi,QWORD PTR [rsp+0x58]
   140003da4:	add    rsp,0x30
   140003da8:	pop    rdi
   140003da9:	ret    
   140003daa:	int3   
   140003dab:	int3   
   140003dac:	int3   
   140003dad:	int3   
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	mov    QWORD PTR [rsp+0x20],rbx
   140003db5:	push   rbp
   140003db6:	push   rsi
   140003db7:	push   rdi
   140003db8:	sub    rsp,0x30
   140003dbc:	mov    rax,QWORD PTR [rip+0x5245]        # 0x140009008
   140003dc3:	xor    rax,rsp
   140003dc6:	mov    QWORD PTR [rsp+0x28],rax
   140003dcb:	mov    rdi,QWORD PTR [rcx+0x28]
   140003dcf:	xor    ebx,ebx
   140003dd1:	mov    QWORD PTR [rsp+0x20],rbx
   140003dd6:	mov    ebp,r8d
   140003dd9:	mov    rsi,rdx
   140003ddc:	test   rdi,rdi
   140003ddf:	je     0x140003e2f
   140003de1:	mov    rax,QWORD PTR [rdi]
   140003de4:	mov    rbx,QWORD PTR [rax]
   140003de7:	mov    rcx,rbx
   140003dea:	call   QWORD PTR [rip+0x24c8]        # 0x1400062b8
   140003df0:	lea    r8,[rsp+0x20]
   140003df5:	mov    rcx,rdi
   140003df8:	lea    rdx,[rip+0x2de1]        # 0x140006be0
   140003dff:	call   rbx
   140003e01:	mov    rbx,QWORD PTR [rsp+0x20]
   140003e06:	test   rbx,rbx
   140003e09:	je     0x140003e2f
   140003e0b:	mov    rax,QWORD PTR [rbx]
   140003e0e:	mov    rdi,QWORD PTR [rax+0x18]
   140003e12:	mov    rcx,rdi
   140003e15:	call   QWORD PTR [rip+0x249d]        # 0x1400062b8
   140003e1b:	mov    r8d,ebp
   140003e1e:	mov    rdx,rsi
   140003e21:	mov    rcx,rbx
   140003e24:	call   rdi
   140003e26:	mov    rbx,QWORD PTR [rsp+0x20]
   140003e2b:	mov    esi,eax
   140003e2d:	jmp    0x140003e34
   140003e2f:	mov    esi,0x80004002
   140003e34:	test   rbx,rbx
   140003e37:	je     0x140003e4e
   140003e39:	mov    rax,QWORD PTR [rbx]
   140003e3c:	mov    rdi,QWORD PTR [rax+0x10]
   140003e40:	mov    rcx,rdi
   140003e43:	call   QWORD PTR [rip+0x246f]        # 0x1400062b8
   140003e49:	mov    rcx,rbx
   140003e4c:	call   rdi
   140003e4e:	mov    eax,esi
   140003e50:	mov    rcx,QWORD PTR [rsp+0x28]
   140003e55:	xor    rcx,rsp
   140003e58:	call   0x140004e10
   140003e5d:	mov    rbx,QWORD PTR [rsp+0x68]
   140003e62:	add    rsp,0x30
   140003e66:	pop    rdi
   140003e67:	pop    rsi
   140003e68:	pop    rbp
   140003e69:	ret    
   140003e6a:	int3   
   140003e6b:	int3   
   140003e6c:	int3   
   140003e6d:	int3   
   140003e6e:	int3   
   140003e6f:	int3   
   140003e70:	mov    QWORD PTR [rsp+0x8],rbx
   140003e75:	push   rdi
   140003e76:	sub    rsp,0x20
   140003e7a:	lea    rax,[rip+0x2b47]        # 0x1400069c8
   140003e81:	mov    QWORD PTR [rcx],rax
   140003e84:	lea    rax,[rip+0x2b1d]        # 0x1400069a8
   140003e8b:	mov    QWORD PTR [rcx+0x8],rax
   140003e8f:	lea    rax,[rip+0x2a82]        # 0x140006918
   140003e96:	mov    QWORD PTR [rcx+0x10],rax
   140003e9a:	lea    rax,[rip+0x2a57]        # 0x1400068f8
   140003ea1:	mov    QWORD PTR [rcx+0x18],rax
   140003ea5:	lea    rax,[rip+0x2a0c]        # 0x1400068b8
   140003eac:	mov    QWORD PTR [rcx+0x20],rax
   140003eb0:	lea    rax,[rip+0x2aa9]        # 0x140006960
   140003eb7:	mov    QWORD PTR [rcx+0x28],rax
   140003ebb:	mov    rdi,QWORD PTR [rcx+0x30]
   140003ebf:	test   rdi,rdi
   140003ec2:	je     0x140003ed9
   140003ec4:	mov    rax,QWORD PTR [rdi]
   140003ec7:	mov    rbx,QWORD PTR [rax+0x10]
   140003ecb:	mov    rcx,rbx
   140003ece:	call   QWORD PTR [rip+0x23e4]        # 0x1400062b8
   140003ed4:	mov    rcx,rdi
   140003ed7:	call   rbx
   140003ed9:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ede:	add    rsp,0x20
   140003ee2:	pop    rdi
   140003ee3:	ret    
   140003ee4:	int3   
   140003ee5:	int3   
   140003ee6:	int3   
   140003ee7:	int3   
   140003ee8:	int3   
   140003ee9:	int3   
   140003eea:	int3   
   140003eeb:	int3   
   140003eec:	int3   
   140003eed:	int3   
   140003eee:	int3   
   140003eef:	int3   
   140003ef0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ef5:	push   rdi
   140003ef6:	sub    rsp,0x20
   140003efa:	mov    ebx,edx
   140003efc:	mov    rdi,rcx
   140003eff:	call   0x140003e70
   140003f04:	test   bl,0x1
   140003f07:	je     0x140003f11
   140003f09:	mov    rcx,rdi
   140003f0c:	call   0x1400049e4
   140003f11:	mov    rax,rdi
   140003f14:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f19:	add    rsp,0x20
   140003f1d:	pop    rdi
   140003f1e:	ret    
   140003f1f:	int3   
   140003f20:	int3   
   140003f21:	int3   
   140003f22:	int3   
   140003f23:	int3   
   140003f24:	int3   
   140003f25:	int3   
   140003f26:	int3   
   140003f27:	int3   
   140003f28:	mov    QWORD PTR [rsp+0x10],rbx
   140003f2d:	mov    QWORD PTR [rsp+0x18],rsi
   140003f32:	push   rdi
   140003f33:	sub    rsp,0x40
   140003f37:	mov    rax,QWORD PTR [rip+0x50ca]        # 0x140009008
   140003f3e:	xor    rax,rsp
   140003f41:	mov    QWORD PTR [rsp+0x38],rax
   140003f46:	cmp    BYTE PTR [rip+0x5717],0x0        # 0x140009664
   140003f4d:	mov    rdi,rcx
   140003f50:	je     0x140003fa8
   140003f52:	mov    r8d,0x10
   140003f58:	lea    rdx,[rip+0x2ac1]        # 0x140006a20
   140003f5f:	lea    rcx,[rip+0x58a2]        # 0x140009808
   140003f66:	call   0x140005892
   140003f6b:	neg    eax
   140003f6d:	sbb    esi,esi
   140003f6f:	not    esi
   140003f71:	and    esi,0x8004b202
   140003f77:	jl     0x14000401a
   140003f7d:	lea    r9,[rsp+0x30]
   140003f82:	call   0x140004878
   140003f87:	mov    edx,DWORD PTR [rsp+0x30]
   140003f8b:	test   eax,eax
   140003f8d:	mov    ecx,0xea60
   140003f92:	cmovs  edx,ecx
   140003f95:	lea    rcx,[rdi+0x50]
   140003f99:	mov    DWORD PTR [rsp+0x30],edx
   140003f9d:	call   0x140004650
   140003fa2:	mov    esi,eax
   140003fa4:	test   eax,eax
   140003fa6:	js     0x14000401a
   140003fa8:	and    QWORD PTR [rsp+0x30],0x0
   140003fae:	lea    rax,[rsp+0x30]
   140003fb3:	xor    edx,edx
   140003fb5:	mov    QWORD PTR [rsp+0x20],rax
   140003fba:	lea    rcx,[rdi+0x40]
   140003fbe:	lea    r9,[rip+0x2c2b]        # 0x140006bf0
   140003fc5:	lea    r8d,[rdx+0x1]
   140003fc9:	call   QWORD PTR [rip+0x7081]        # 0x14000b050
   140003fcf:	mov    esi,eax
   140003fd1:	test   eax,eax
   140003fd3:	js     0x140003ffb
   140003fd5:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fda:	mov    rax,QWORD PTR [rbx]
   140003fdd:	mov    rsi,QWORD PTR [rax]
   140003fe0:	mov    rcx,rsi
   140003fe3:	call   QWORD PTR [rip+0x22cf]        # 0x1400062b8
   140003fe9:	lea    r8,[rdi+0x30]
   140003fed:	mov    rcx,rbx
   140003ff0:	lea    rdx,[rip+0x2709]        # 0x140006700
   140003ff7:	call   rsi
   140003ff9:	mov    esi,eax
   140003ffb:	mov    rbx,QWORD PTR [rsp+0x30]
   140004000:	test   rbx,rbx
   140004003:	je     0x14000401a
   140004005:	mov    rax,QWORD PTR [rbx]
   140004008:	mov    rdi,QWORD PTR [rax+0x10]
   14000400c:	mov    rcx,rdi
   14000400f:	call   QWORD PTR [rip+0x22a3]        # 0x1400062b8
   140004015:	mov    rcx,rbx
   140004018:	call   rdi
   14000401a:	mov    eax,esi
   14000401c:	mov    rcx,QWORD PTR [rsp+0x38]
   140004021:	xor    rcx,rsp
   140004024:	call   0x140004e10
   140004029:	mov    rbx,QWORD PTR [rsp+0x58]
   14000402e:	mov    rsi,QWORD PTR [rsp+0x60]
   140004033:	add    rsp,0x40
   140004037:	pop    rdi
   140004038:	ret    
   140004039:	int3   
   14000403a:	int3   
   14000403b:	int3   
   14000403c:	int3   
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	rex push rbx
   140004042:	push   rbp
   140004043:	push   rsi
   140004044:	push   rdi
   140004045:	push   r14
   140004047:	push   r15
   140004049:	sub    rsp,0x38
   14000404d:	mov    rax,QWORD PTR [rip+0x4fb4]        # 0x140009008
   140004054:	xor    rax,rsp
   140004057:	mov    QWORD PTR [rsp+0x28],rax
   14000405c:	and    QWORD PTR [r8],0x0
   140004060:	xor    ebx,ebx
   140004062:	and    DWORD PTR [r9],0x0
   140004066:	mov    r14,r9
   140004069:	mov    rdi,QWORD PTR [rcx+0x30]
   14000406d:	mov    rsi,r8
   140004070:	mov    QWORD PTR [rsp+0x20],rbx
   140004075:	mov    r15d,edx
   140004078:	mov    rbp,rcx
   14000407b:	test   rdi,rdi
   14000407e:	je     0x1400040a5
   140004080:	mov    rax,QWORD PTR [rdi]
   140004083:	mov    rbx,QWORD PTR [rax]
   140004086:	mov    rcx,rbx
   140004089:	call   QWORD PTR [rip+0x2229]        # 0x1400062b8
   14000408f:	lea    r8,[rsp+0x20]
   140004094:	mov    rcx,rdi
   140004097:	lea    rdx,[rip+0x2b52]        # 0x140006bf0
   14000409e:	call   rbx
   1400040a0:	mov    rbx,QWORD PTR [rsp+0x20]
   1400040a5:	mov    rax,QWORD PTR [rbx]
   1400040a8:	mov    rdi,QWORD PTR [rax+0x18]
   1400040ac:	mov    rcx,rdi
   1400040af:	call   QWORD PTR [rip+0x2203]        # 0x1400062b8
   1400040b5:	mov    r9,r14
   1400040b8:	mov    r8,rsi
   1400040bb:	mov    edx,r15d
   1400040be:	mov    rcx,rbx
   1400040c1:	call   rdi
   1400040c3:	lea    rcx,[rbp+0x50]
   1400040c7:	mov    esi,eax
   1400040c9:	call   0x140004780
   1400040ce:	mov    rbx,QWORD PTR [rsp+0x20]
   1400040d3:	test   rbx,rbx
   1400040d6:	je     0x1400040ed
   1400040d8:	mov    rcx,QWORD PTR [rbx]
   1400040db:	mov    rdi,QWORD PTR [rcx+0x10]
   1400040df:	mov    rcx,rdi
   1400040e2:	call   QWORD PTR [rip+0x21d0]        # 0x1400062b8
   1400040e8:	mov    rcx,rbx
   1400040eb:	call   rdi
   1400040ed:	mov    eax,esi
   1400040ef:	mov    rcx,QWORD PTR [rsp+0x28]
   1400040f4:	xor    rcx,rsp
   1400040f7:	call   0x140004e10
   1400040fc:	add    rsp,0x38
   140004100:	pop    r15
   140004102:	pop    r14
   140004104:	pop    rdi
   140004105:	pop    rsi
   140004106:	pop    rbp
   140004107:	pop    rbx
   140004108:	ret    
   140004109:	int3   
   14000410a:	int3   
   14000410b:	int3   
   14000410c:	int3   
   14000410d:	int3   
   14000410e:	int3   
   14000410f:	int3   
   140004110:	mov    QWORD PTR [rsp+0x8],rbx
   140004115:	mov    QWORD PTR [rsp+0x10],rsi
   14000411a:	push   rdi
   14000411b:	sub    rsp,0x20
   14000411f:	lea    rax,[rip+0x2812]        # 0x140006938
   140004126:	mov    rdi,rcx
   140004129:	mov    QWORD PTR [rcx],rax
   14000412c:	lea    rbx,[rcx+0x50]
   140004130:	lea    rax,[rip+0x2871]        # 0x1400069a8
   140004137:	mov    esi,edx
   140004139:	mov    QWORD PTR [rcx+0x8],rax
   14000413d:	lea    rax,[rip+0x27d4]        # 0x140006918
   140004144:	mov    QWORD PTR [rcx+0x10],rax
   140004148:	lea    rax,[rip+0x27a9]        # 0x1400068f8
   14000414f:	mov    QWORD PTR [rcx+0x18],rax
   140004153:	lea    rax,[rip+0x275e]        # 0x1400068b8
   14000415a:	mov    QWORD PTR [rcx+0x20],rax
   14000415e:	lea    rax,[rip+0x27fb]        # 0x140006960
   140004165:	mov    QWORD PTR [rcx+0x28],rax
   140004169:	mov    rcx,rbx
   14000416c:	movups xmm0,XMMWORD PTR [rip+0x28ad]        # 0x140006a20
   140004173:	movdqu XMMWORD PTR [rip+0x568d],xmm0        # 0x140009808
   14000417b:	call   0x140004780
   140004180:	mov    rcx,QWORD PTR [rbx]
   140004183:	and    QWORD PTR [rbx],0x0
   140004187:	lea    rax,[rcx-0x1]
   14000418b:	cmp    rax,0xfffffffffffffffd
   14000418f:	ja     0x140004197
   140004191:	call   QWORD PTR [rip+0x1ed9]        # 0x140006070
   140004197:	mov    rcx,rdi
   14000419a:	call   0x140003e70
   14000419f:	test   sil,0x1
   1400041a3:	je     0x1400041ad
   1400041a5:	mov    rcx,rdi
   1400041a8:	call   0x1400049e4
   1400041ad:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041b2:	mov    rax,rdi
   1400041b5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400041ba:	add    rsp,0x20
   1400041be:	pop    rdi
   1400041bf:	ret    
   1400041c0:	int3   
   1400041c1:	int3   
   1400041c2:	int3   
   1400041c3:	int3   
   1400041c4:	int3   
   1400041c5:	int3   
   1400041c6:	int3   
   1400041c7:	int3   
   1400041c8:	int3   
   1400041c9:	int3   
   1400041ca:	int3   
   1400041cb:	int3   
   1400041cc:	int3   
   1400041cd:	int3   
   1400041ce:	int3   
   1400041cf:	int3   
   1400041d0:	mov    r11,rsp
   1400041d3:	mov    QWORD PTR [r11+0x8],rbx
   1400041d7:	mov    QWORD PTR [r11+0x10],rbp
   1400041db:	mov    QWORD PTR [r11+0x18],rsi
   1400041df:	mov    QWORD PTR [r11+0x20],rdi
   1400041e3:	push   r14
   1400041e5:	sub    rsp,0x30
   1400041e9:	mov    r14,QWORD PTR [rsp+0x60]
   1400041ee:	mov    rbp,r9
   1400041f1:	mov    rax,r8
   1400041f4:	mov    rbx,rdx
   1400041f7:	and    QWORD PTR [r14],0x0
   1400041fb:	test   r8,r8
   1400041fe:	je     0x14000421d
   140004200:	mov    r8d,0x1
   140004206:	mov    QWORD PTR [r11-0x18],r14
   14000420a:	mov    rdx,rax
   14000420d:	mov    rcx,rbx
   140004210:	call   QWORD PTR [rip+0x6e3a]        # 0x14000b050
   140004216:	mov    esi,eax
   140004218:	jmp    0x1400042f1
   14000421d:	lea    rdx,[rip+0x2a64]        # 0x140006c88
   140004224:	mov    ecx,0x68
   140004229:	call   0x14000572c
   14000422e:	mov    rdi,rax
   140004231:	test   rax,rax
   140004234:	je     0x1400042a4
   140004236:	movups xmm0,XMMWORD PTR [rbx]
   140004239:	and    QWORD PTR [rax+0x30],0x0
   14000423e:	mov    DWORD PTR [rax+0x38],0x1
   140004245:	lea    rax,[rip+0x26ec]        # 0x140006938
   14000424c:	mov    QWORD PTR [rdi],rax
   14000424f:	lea    rax,[rip+0x2752]        # 0x1400069a8
   140004256:	mov    QWORD PTR [rdi+0x8],rax
   14000425a:	lea    rax,[rip+0x26b7]        # 0x140006918
   140004261:	mov    QWORD PTR [rdi+0x10],rax
   140004265:	lea    rax,[rip+0x268c]        # 0x1400068f8
   14000426c:	mov    QWORD PTR [rdi+0x18],rax
   140004270:	lea    rax,[rip+0x2641]        # 0x1400068b8
   140004277:	mov    QWORD PTR [rdi+0x20],rax
   14000427b:	lea    rax,[rip+0x26de]        # 0x140006960
   140004282:	mov    QWORD PTR [rdi+0x28],rax
   140004286:	movdqu XMMWORD PTR [rdi+0x40],xmm0
   14000428b:	and    QWORD PTR [rdi+0x50],0x0
   140004290:	and    QWORD PTR [rdi+0x58],0x0
   140004295:	and    QWORD PTR [rdi+0x60],0x0
   14000429a:	movdqu XMMWORD PTR [rip+0x5566],xmm0        # 0x140009808
   1400042a2:	jmp    0x1400042a6
   1400042a4:	xor    edi,edi
   1400042a6:	test   rdi,rdi
   1400042a9:	je     0x1400042ec
   1400042ab:	mov    rcx,rdi
   1400042ae:	call   0x140003f28
   1400042b3:	mov    esi,eax
   1400042b5:	test   eax,eax
   1400042b7:	js     0x1400042d5
   1400042b9:	mov    rax,QWORD PTR [rdi]
   1400042bc:	mov    rbx,QWORD PTR [rax]
   1400042bf:	mov    rcx,rbx
   1400042c2:	call   QWORD PTR [rip+0x1ff0]        # 0x1400062b8
   1400042c8:	mov    r8,r14
   1400042cb:	mov    rdx,rbp
   1400042ce:	mov    rcx,rdi
   1400042d1:	call   rbx
   1400042d3:	mov    esi,eax
   1400042d5:	mov    rax,QWORD PTR [rdi]
   1400042d8:	mov    rbx,QWORD PTR [rax+0x10]
   1400042dc:	mov    rcx,rbx
   1400042df:	call   QWORD PTR [rip+0x1fd3]        # 0x1400062b8
   1400042e5:	mov    rcx,rdi
   1400042e8:	call   rbx
   1400042ea:	jmp    0x1400042f1
   1400042ec:	mov    esi,0x8007000e
   1400042f1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400042f6:	mov    eax,esi
   1400042f8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400042fd:	mov    rbp,QWORD PTR [rsp+0x48]
   140004302:	mov    rdi,QWORD PTR [rsp+0x58]
   140004307:	add    rsp,0x30
   14000430b:	pop    r14
   14000430d:	ret    
   14000430e:	int3   
   14000430f:	int3   
   140004310:	int3   
   140004311:	int3   
   140004312:	int3   
   140004313:	int3   
   140004314:	int3   
   140004315:	int3   
   140004316:	int3   
   140004317:	int3   
   140004318:	int3   
   140004319:	int3   
   14000431a:	int3   
   14000431b:	int3   
   14000431c:	int3   
   14000431d:	int3   
   14000431e:	int3   
   14000431f:	int3   
   140004320:	sub    rcx,0x10
   140004324:	jmp    0x140003440
   140004329:	int3   
   14000432a:	int3   
   14000432b:	int3   
   14000432c:	int3   
   14000432d:	int3   
   14000432e:	int3   
   14000432f:	int3   
   140004330:	sub    rcx,0x20
   140004334:	jmp    0x140003510
   140004339:	int3   
   14000433a:	int3   
   14000433b:	int3   
   14000433c:	int3   
   14000433d:	int3   
   14000433e:	int3   
   14000433f:	int3   
   140004340:	sub    rcx,0x18
   140004344:	jmp    0x1400034f0
   140004349:	int3   
   14000434a:	int3   
   14000434b:	int3   
   14000434c:	int3   
   14000434d:	int3   
   14000434e:	int3   
   14000434f:	int3   
   140004350:	sub    rcx,0x18
   140004354:	jmp    0x140003440
   140004359:	int3   
   14000435a:	int3   
   14000435b:	int3   
   14000435c:	int3   
   14000435d:	int3   
   14000435e:	int3   
   14000435f:	int3   
   140004360:	sub    rcx,0x8
   140004364:	jmp    0x140003510
   140004369:	int3   
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	sub    rcx,0x28
   140004374:	jmp    0x140003510
   140004379:	int3   
   14000437a:	int3   
   14000437b:	int3   
   14000437c:	int3   
   14000437d:	int3   
   14000437e:	int3   
   14000437f:	int3   
   140004380:	sub    rcx,0x20
   140004384:	jmp    0x1400034f0
   140004389:	int3   
   14000438a:	int3   
   14000438b:	int3   
   14000438c:	int3   
   14000438d:	int3   
   14000438e:	int3   
   14000438f:	int3   
   140004390:	sub    rcx,0x20
   140004394:	jmp    0x140003440
   140004399:	int3   
   14000439a:	int3   
   14000439b:	int3   
   14000439c:	int3   
   14000439d:	int3   
   14000439e:	int3   
   14000439f:	int3   
   1400043a0:	sub    rcx,0x10
   1400043a4:	jmp    0x140003510
   1400043a9:	int3   
   1400043aa:	int3   
   1400043ab:	int3   
   1400043ac:	int3   
   1400043ad:	int3   
   1400043ae:	int3   
   1400043af:	int3   
   1400043b0:	sub    rcx,0x8
   1400043b4:	jmp    0x1400034f0
   1400043b9:	int3   
   1400043ba:	int3   
   1400043bb:	int3   
   1400043bc:	int3   
   1400043bd:	int3   
   1400043be:	int3   
   1400043bf:	int3   
   1400043c0:	sub    rcx,0x28
   1400043c4:	jmp    0x1400034f0
   1400043c9:	int3   
   1400043ca:	int3   
   1400043cb:	int3   
   1400043cc:	int3   
   1400043cd:	int3   
   1400043ce:	int3   
   1400043cf:	int3   
   1400043d0:	sub    rcx,0x8
   1400043d4:	jmp    0x1400036f0
   1400043d9:	int3   
   1400043da:	int3   
   1400043db:	int3   
   1400043dc:	int3   
   1400043dd:	int3   
   1400043de:	int3   
   1400043df:	int3   
   1400043e0:	sub    rcx,0x8
   1400043e4:	jmp    0x1400037b0
   1400043e9:	int3   
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	int3   
   1400043ed:	int3   
   1400043ee:	int3   
   1400043ef:	int3   
   1400043f0:	sub    rcx,0x8
   1400043f4:	jmp    0x140003440
   1400043f9:	int3   
   1400043fa:	int3   
   1400043fb:	int3   
   1400043fc:	int3   
   1400043fd:	int3   
   1400043fe:	int3   
   1400043ff:	int3   
   140004400:	sub    rcx,0x28
   140004404:	jmp    0x140003440
   140004409:	int3   
   14000440a:	int3   
   14000440b:	int3   
   14000440c:	int3   
   14000440d:	int3   
   14000440e:	int3   
   14000440f:	int3   
   140004410:	sub    rcx,0x18
   140004414:	jmp    0x140003510
   140004419:	int3   
   14000441a:	int3   
   14000441b:	int3   
   14000441c:	int3   
   14000441d:	int3   
   14000441e:	int3   
   14000441f:	int3   
   140004420:	sub    rcx,0x10
   140004424:	jmp    0x1400034f0
   140004429:	int3   
   14000442a:	int3   
   14000442b:	int3   
   14000442c:	int3   
   14000442d:	int3   
   14000442e:	int3   
   14000442f:	int3   
   140004430:	mov    QWORD PTR [rsp+0x10],rbx
   140004435:	mov    QWORD PTR [rsp+0x18],rbp
   14000443a:	mov    QWORD PTR [rsp+0x20],rsi
   14000443f:	push   rdi
   140004440:	push   r12
   140004442:	push   r13
   140004444:	push   r14
   140004446:	push   r15
   140004448:	sub    rsp,0x80
   14000444f:	mov    ebp,DWORD PTR [rcx+0x4]
   140004452:	mov    r15,rcx
   140004455:	lea    rcx,[rip+0xffffffffffffbba4]        # 0x140000000
   14000445c:	mov    r13d,0x1
   140004462:	add    rbp,rcx
   140004465:	mov    r14,rdx
   140004468:	mov    eax,DWORD PTR [r15+0x8]
   14000446c:	mov    r12d,DWORD PTR [r15+0xc]
   140004470:	add    rax,rcx
   140004473:	mov    esi,DWORD PTR [r15+0x10]
   140004477:	add    r12,rcx
   14000447a:	mov    QWORD PTR [rsp+0xb0],rax
   140004482:	add    rsi,rcx
   140004485:	mov    rax,QWORD PTR [rsp+0xb0]
   14000448d:	mov    rdi,QWORD PTR [rax]
   140004490:	mov    rax,QWORD PTR [rip+0x53b1]        # 0x140009848
   140004497:	cmp    rax,r13
   14000449a:	je     0x14000454f
   1400044a0:	test   rax,rax
   1400044a3:	jne    0x140004516
   1400044a5:	lea    rcx,[rip+0x27e4]        # 0x140006c90
   1400044ac:	call   0x1400049b2
   1400044b1:	mov    rbx,rax
   1400044b4:	test   rax,rax
   1400044b7:	jne    0x1400044d2
   1400044b9:	lea    rcx,[rip+0x2820]        # 0x140006ce0
   1400044c0:	call   0x1400049b2
   1400044c5:	mov    rbx,rax
   1400044c8:	test   rax,rax
   1400044cb:	jne    0x1400044d2
   1400044cd:	mov    rbx,r13
   1400044d0:	jmp    0x14000450a
   1400044d2:	lea    rdx,[rip+0x2827]        # 0x140006d00
   1400044d9:	mov    rcx,rbx
   1400044dc:	call   0x1400049d6
   1400044e1:	mov    QWORD PTR [rip+0x5368],rax        # 0x140009850
   1400044e8:	test   rax,rax
   1400044eb:	je     0x1400044cd
   1400044ed:	lea    rdx,[rip+0x2824]        # 0x140006d18
   1400044f4:	mov    rcx,rbx
   1400044f7:	call   0x1400049d6
   1400044fc:	test   rax,rax
   1400044ff:	mov    QWORD PTR [rip+0x533a],rax        # 0x140009840
   140004506:	cmove  rbx,r13
   14000450a:	mov    QWORD PTR [rip+0x5337],rbx        # 0x140009848
   140004511:	cmp    rbx,r13
   140004514:	je     0x14000454f
   140004516:	mov    rbx,QWORD PTR [rip+0x5333]        # 0x140009850
   14000451d:	mov    rcx,rbx
   140004520:	call   QWORD PTR [rip+0x1d92]        # 0x1400062b8
   140004526:	and    DWORD PTR [rsp+0x28],0x0
   14000452b:	lea    rcx,[rip+0xffffffffffffbace]        # 0x140000000
   140004532:	mov    r9,QWORD PTR [rip+0x1b57]        # 0x140006090
   140004539:	mov    rdx,r15
   14000453c:	mov    r8,QWORD PTR [rip+0x27f5]        # 0x140006d38
   140004543:	mov    QWORD PTR [rsp+0x20],r14
   140004548:	call   rbx
   14000454a:	jmp    0x140004628
   14000454f:	mov    rcx,r14
   140004552:	movabs rax,0x8000000000000000
   14000455c:	sub    rcx,r12
   14000455f:	sar    rcx,0x3
   140004563:	mov    ecx,ecx
   140004565:	test   QWORD PTR [rsi+rcx*8],rax
   140004569:	jne    0x14000457a
   14000456b:	mov    ebx,DWORD PTR [rsi+rcx*8]
   14000456e:	lea    rax,[rip+0xffffffffffffba8d]        # 0x140000002
   140004575:	add    rbx,rax
   140004578:	jmp    0x14000457e
   14000457a:	movzx  ebx,WORD PTR [rsi+rcx*8]
   14000457e:	test   rdi,rdi
   140004581:	jne    0x140004607
   140004587:	xor    r8d,r8d
   14000458a:	xor    edx,edx
   14000458c:	mov    rcx,rbp
   14000458f:	call   QWORD PTR [rip+0x1b03]        # 0x140006098
   140004595:	mov    rdi,rax
   140004598:	test   rax,rax
   14000459b:	je     0x14000461c
   14000459d:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400045a5:	xor    eax,eax
   1400045a7:	lock cmpxchg QWORD PTR [rcx],rdi
   1400045ac:	mov    rsi,rax
   1400045af:	jne    0x1400045f6
   1400045b1:	xor    edx,edx
   1400045b3:	lea    rcx,[rsp+0x38]
   1400045b8:	lea    r8d,[rdx+0x40]
   1400045bc:	call   0x1400051ee
   1400045c1:	mov    rsi,QWORD PTR [rip+0x2770]        # 0x140006d38
   1400045c8:	mov    DWORD PTR [rsp+0x30],0x48
   1400045d0:	mov    QWORD PTR [rsp+0x48],rbp
   1400045d5:	mov    QWORD PTR [rsp+0x60],rdi
   1400045da:	test   rsi,rsi
   1400045dd:	je     0x140004602
   1400045df:	mov    rcx,rsi
   1400045e2:	call   QWORD PTR [rip+0x1cd0]        # 0x1400062b8
   1400045e8:	lea    rdx,[rsp+0x30]
   1400045ed:	mov    ecx,0x5
   1400045f2:	call   rsi
   1400045f4:	jmp    0x140004602
   1400045f6:	mov    rcx,rdi
   1400045f9:	call   QWORD PTR [rip+0x1aa1]        # 0x1400060a0
   1400045ff:	mov    rdi,rsi
   140004602:	test   rdi,rdi
   140004605:	je     0x14000461c
   140004607:	mov    rdx,rbx
   14000460a:	mov    rcx,rdi
   14000460d:	call   0x1400049d6
   140004612:	test   rax,rax
   140004615:	je     0x14000461c
   140004617:	mov    QWORD PTR [r14],rax
   14000461a:	jmp    0x140004628
   14000461c:	mov    rdx,rbx
   14000461f:	mov    rcx,rbp
   140004622:	call   QWORD PTR [rip+0x1a68]        # 0x140006090
   140004628:	lea    r11,[rsp+0x80]
   140004630:	mov    rbx,QWORD PTR [r11+0x38]
   140004634:	mov    rbp,QWORD PTR [r11+0x40]
   140004638:	mov    rsi,QWORD PTR [r11+0x48]
   14000463c:	mov    rsp,r11
   14000463f:	pop    r15
   140004641:	pop    r14
   140004643:	pop    r13
   140004645:	pop    r12
   140004647:	pop    rdi
   140004648:	ret    
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	mov    QWORD PTR [rsp+0x8],rbx
   140004655:	mov    QWORD PTR [rsp+0x10],rbp
   14000465a:	mov    QWORD PTR [rsp+0x18],r8
   14000465f:	push   rsi
   140004660:	push   rdi
   140004661:	push   r15
   140004663:	sub    rsp,0x40
   140004667:	cmp    BYTE PTR [rip+0x501f],0x0        # 0x14000968d
   14000466e:	mov    rsi,rcx
   140004671:	mov    ebp,edx
   140004673:	mov    ebx,0x8004b202
   140004678:	jne    0x140004764
   14000467e:	call   0x1400055a6
   140004683:	mov    rdi,rax
   140004686:	call   QWORD PTR [rip+0x1a7c]        # 0x140006108
   14000468c:	mov    rbx,rax
   14000468f:	call   0x1400055a6
   140004694:	and    DWORD PTR [rsp+0x30],0x0
   140004699:	mov    rcx,rax
   14000469c:	mov    DWORD PTR [rsp+0x28],0x1
   1400046a4:	mov    r9,rsi
   1400046a7:	mov    r8,rdi
   1400046aa:	mov    DWORD PTR [rsp+0x20],0x1fffff
   1400046b2:	mov    rdx,rbx
   1400046b5:	call   QWORD PTR [rip+0x19c5]        # 0x140006080
   1400046bb:	mov    edi,0x80070000
   1400046c0:	mov    r15d,0x80004005
   1400046c6:	test   eax,eax
   1400046c8:	jne    0x1400046e3
   1400046ca:	call   0x1400049ca
   1400046cf:	movzx  ecx,ax
   1400046d2:	or     ecx,edi
   1400046d4:	test   eax,eax
   1400046d6:	cmovle ecx,eax
   1400046d9:	test   ecx,ecx
   1400046db:	cmovns ecx,r15d
   1400046df:	test   ecx,ecx
   1400046e1:	js     0x14000474a
   1400046e3:	xor    r8d,r8d
   1400046e6:	lea    rcx,[rip+0x103]        # 0x1400047f0
   1400046ed:	mov    rdx,rsi
   1400046f0:	call   QWORD PTR [rip+0x19fa]        # 0x1400060f0
   1400046f6:	mov    QWORD PTR [rsi+0x8],rax
   1400046fa:	test   rax,rax
   1400046fd:	je     0x140004703
   1400046ff:	xor    ebx,ebx
   140004701:	jmp    0x14000471c
   140004703:	call   0x1400049ca
   140004708:	movzx  ebx,ax
   14000470b:	or     ebx,edi
   14000470d:	test   eax,eax
   14000470f:	cmovle ebx,eax
   140004712:	test   ebx,ebx
   140004714:	cmovns ebx,r15d
   140004718:	test   ebx,ebx
   14000471a:	js     0x14000474a
   14000471c:	imul   rcx,rbp,0xffffffffffffd8f0
   140004723:	lea    rax,[rip+0xffffffffffffeaf6]        # 0x140003220
   14000472a:	xor    r9d,r9d
   14000472d:	mov    QWORD PTR [rsp+0x70],rcx
   140004732:	lea    rdx,[rsp+0x70]
   140004737:	mov    rcx,QWORD PTR [rsi+0x8]
   14000473b:	xor    r8d,r8d
   14000473e:	mov    QWORD PTR [rsi+0x10],rax
   140004742:	call   QWORD PTR [rip+0x1940]        # 0x140006088
   140004748:	jmp    0x140004764
   14000474a:	xor    r9d,r9d
   14000474d:	lea    rcx,[rip+0xbc]        # 0x140004810
   140004754:	xor    r8d,r8d
   140004757:	xor    edx,edx
   140004759:	call   QWORD PTR [rip+0x1a01]        # 0x140006160
   14000475f:	mov    ebx,0x8004b202
   140004764:	mov    rbp,QWORD PTR [rsp+0x68]
   140004769:	mov    eax,ebx
   14000476b:	mov    rbx,QWORD PTR [rsp+0x60]
   140004770:	add    rsp,0x40
   140004774:	pop    r15
   140004776:	pop    rdi
   140004777:	pop    rsi
   140004778:	ret    
   140004779:	int3   
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	int3   
   14000477d:	int3   
   14000477e:	int3   
   14000477f:	int3   
   140004780:	rex push rbx
   140004782:	sub    rsp,0x20
   140004786:	mov    rbx,rcx
   140004789:	mov    rcx,QWORD PTR [rcx+0x8]
   14000478d:	test   rcx,rcx
   140004790:	je     0x1400047be
   140004792:	xor    r9d,r9d
   140004795:	xor    r8d,r8d
   140004798:	xor    edx,edx
   14000479a:	call   QWORD PTR [rip+0x18e8]        # 0x140006088
   1400047a0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400047a4:	mov    edx,0x1
   1400047a9:	call   QWORD PTR [rip+0x1949]        # 0x1400060f8
   1400047af:	mov    rcx,QWORD PTR [rbx+0x8]
   1400047b3:	call   QWORD PTR [rip+0x1947]        # 0x140006100
   1400047b9:	and    QWORD PTR [rbx+0x8],0x0
   1400047be:	mov    rcx,QWORD PTR [rbx]
   1400047c1:	and    QWORD PTR [rbx],0x0
   1400047c5:	lea    rax,[rcx-0x1]
   1400047c9:	cmp    rax,0xfffffffffffffffd
   1400047cd:	ja     0x1400047d5
   1400047cf:	call   QWORD PTR [rip+0x189b]        # 0x140006070
   1400047d5:	add    rsp,0x20
   1400047d9:	pop    rbx
   1400047da:	ret    
   1400047db:	int3   
   1400047dc:	int3   
   1400047dd:	int3   
   1400047de:	int3   
   1400047df:	int3   
   1400047e0:	int3   
   1400047e1:	int3   
   1400047e2:	int3   
   1400047e3:	int3   
   1400047e4:	int3   
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	int3   
   1400047e9:	int3   
   1400047ea:	int3   
   1400047eb:	int3   
   1400047ec:	int3   
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	mov    rcx,rdx
   1400047f3:	mov    BYTE PTR [rip+0x4e93],0x1        # 0x14000968d
   1400047fa:	jmp    0x140004810
   1400047ff:	int3   
   140004800:	int3   
   140004801:	int3   
   140004802:	int3   
   140004803:	int3   
   140004804:	int3   
   140004805:	int3   
   140004806:	int3   
   140004807:	int3   
   140004808:	int3   
   140004809:	int3   
   14000480a:	int3   
   14000480b:	int3   
   14000480c:	int3   
   14000480d:	int3   
   14000480e:	int3   
   14000480f:	int3   
   140004810:	mov    QWORD PTR [rsp+0x8],rbx
   140004815:	push   rdi
   140004816:	sub    rsp,0x20
   14000481a:	cmp    BYTE PTR [rip+0x4e6b],0x0        # 0x14000968c
   140004821:	mov    rbx,rcx
   140004824:	jne    0x140004865
   140004826:	mov    BYTE PTR [rip+0x4e5f],0x1        # 0x14000968c
   14000482d:	test   rcx,rcx
   140004830:	je     0x140004849
   140004832:	mov    rdi,QWORD PTR [rcx+0x10]
   140004836:	test   rdi,rdi
   140004839:	je     0x140004849
   14000483b:	mov    rcx,rdi
   14000483e:	call   QWORD PTR [rip+0x1a74]        # 0x1400062b8
   140004844:	mov    rcx,QWORD PTR [rbx]
   140004847:	call   rdi
   140004849:	mov    ecx,0x3e8
   14000484e:	call   0x1400049be
   140004853:	call   0x1400055a6
   140004858:	mov    rcx,rax
   14000485b:	mov    edx,0x1
   140004860:	call   0x1400055b2
   140004865:	xor    eax,eax
   140004867:	mov    rbx,QWORD PTR [rsp+0x30]
   14000486c:	add    rsp,0x20
   140004870:	pop    rdi
   140004871:	ret    
   140004872:	int3   
   140004873:	int3   
   140004874:	int3   
   140004875:	int3   
   140004876:	int3   
   140004877:	int3   
   140004878:	mov    r11,rsp
   14000487b:	mov    QWORD PTR [r11+0x18],r8
   14000487f:	sub    rsp,0x48
   140004883:	lea    rax,[r11+0x18]
   140004887:	mov    DWORD PTR [rsp+0x60],0x4
   14000488f:	mov    QWORD PTR [r11-0x18],rax
   140004893:	lea    r8,[rip+0x223e]        # 0x140006ad8
   14000489a:	mov    QWORD PTR [r11-0x20],r9
   14000489e:	lea    rdx,[rip+0x235b]        # 0x140006c00
   1400048a5:	and    QWORD PTR [r11-0x28],0x0
   1400048aa:	mov    r9d,0x10
   1400048b0:	mov    rcx,0xffffffff80000001
   1400048b7:	call   QWORD PTR [rip+0x675b]        # 0x14000b018
   1400048bd:	mov    ecx,eax
   1400048bf:	movzx  eax,ax
   1400048c2:	or     eax,0x80070000
   1400048c7:	test   ecx,ecx
   1400048c9:	cmovle eax,ecx
   1400048cc:	add    rsp,0x48
   1400048d0:	ret    
   1400048d1:	int3   
   1400048d2:	int3   
   1400048d3:	int3   
   1400048d4:	int3   
   1400048d5:	int3   
   1400048d6:	int3   
   1400048d7:	int3   
   1400048d8:	int3   
   1400048d9:	int3   
   1400048da:	int3   
   1400048db:	int3   
   1400048dc:	int3   
   1400048dd:	int3   
   1400048de:	int3   
   1400048df:	int3   
   1400048e0:	lea    rax,[rip+0x6719]        # 0x14000b000
   1400048e7:	jmp    0x140004900
   1400048ec:	int3   
   1400048ed:	int3   
   1400048ee:	int3   
   1400048ef:	int3   
   1400048f0:	int3   
   1400048f1:	int3   
   1400048f2:	int3   
   1400048f3:	int3   
   1400048f4:	int3   
   1400048f5:	int3   
   1400048f6:	int3   
   1400048f7:	int3   
   1400048f8:	int3   
   1400048f9:	int3   
   1400048fa:	int3   
   1400048fb:	int3   
   1400048fc:	int3   
   1400048fd:	int3   
   1400048fe:	int3   
   1400048ff:	int3   
   140004900:	mov    QWORD PTR [rsp+0x8],rcx
   140004905:	mov    QWORD PTR [rsp+0x10],rdx
   14000490a:	mov    QWORD PTR [rsp+0x18],r8
   14000490f:	mov    QWORD PTR [rsp+0x20],r9
   140004914:	sub    rsp,0x68
   140004918:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000491e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140004924:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000492a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140004930:	mov    rdx,rax
   140004933:	lea    rcx,[rip+0x2c16]        # 0x140007550
   14000493a:	call   0x140004430
   14000493f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140004945:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000494b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140004951:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140004957:	mov    rcx,QWORD PTR [rsp+0x70]
   14000495c:	mov    rdx,QWORD PTR [rsp+0x78]
   140004961:	mov    r8,QWORD PTR [rsp+0x80]
   140004969:	mov    r9,QWORD PTR [rsp+0x88]
   140004971:	add    rsp,0x68
   140004975:	jmp    0x140004977
   140004977:	jmp    rax
   140004979:	int3   
   14000497a:	int3   
   14000497b:	int3   
   14000497c:	int3   
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	lea    rax,[rip+0x6681]        # 0x14000b008
   140004987:	jmp    0x140004900
   14000498c:	int3   
   14000498d:	int3   
   14000498e:	int3   
   14000498f:	int3   
   140004990:	int3   
   140004991:	int3   
   140004992:	int3   
   140004993:	int3   
   140004994:	int3   
   140004995:	int3   
   140004996:	int3   
   140004997:	int3   
   140004998:	int3   
   140004999:	int3   
   14000499a:	int3   
   14000499b:	int3   
   14000499c:	int3   
   14000499d:	int3   
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	lea    rax,[rip+0x6669]        # 0x14000b010
   1400049a7:	jmp    0x140004900
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	int3   
   1400049b1:	int3   
   1400049b2:	jmp    QWORD PTR [rip+0x1668]        # 0x140006020
   1400049b8:	int3   
   1400049b9:	int3   
   1400049ba:	int3   
   1400049bb:	int3   
   1400049bc:	int3   
   1400049bd:	int3   
   1400049be:	jmp    QWORD PTR [rip+0x166c]        # 0x140006030
   1400049c4:	int3   
   1400049c5:	int3   
   1400049c6:	int3   
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	jmp    QWORD PTR [rip+0x1678]        # 0x140006048
   1400049d0:	int3   
   1400049d1:	int3   
   1400049d2:	int3   
   1400049d3:	int3   
   1400049d4:	int3   
   1400049d5:	int3   
   1400049d6:	jmp    QWORD PTR [rip+0x1674]        # 0x140006050
   1400049dc:	int3   
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	int3   
   1400049e1:	int3   
   1400049e2:	int3   
   1400049e3:	int3   
   1400049e4:	jmp    0x140004e34
   1400049e9:	int3   
   1400049ea:	int3   
   1400049eb:	int3   
   1400049ec:	int3   
   1400049ed:	int3   
   1400049ee:	int3   
   1400049ef:	int3   
   1400049f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049f5:	push   rdi
   1400049f6:	sub    rsp,0x20
   1400049fa:	mov    rdi,rcx
   1400049fd:	jmp    0x140004a0e
   1400049ff:	mov    rcx,rdi
   140004a02:	call   0x1400051e2
   140004a07:	test   eax,eax
   140004a09:	je     0x140004a1b
   140004a0b:	mov    rcx,rdi
   140004a0e:	call   0x1400051d6
   140004a13:	mov    rbx,rax
   140004a16:	test   rax,rax
   140004a19:	je     0x1400049ff
   140004a1b:	mov    rax,rbx
   140004a1e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a23:	add    rsp,0x20
   140004a27:	pop    rdi
   140004a28:	ret    
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	int3   
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	sub    rsp,0x28
   140004a34:	mov    eax,0x5a4d
   140004a39:	cmp    WORD PTR [rip+0xffffffffffffb5c0],ax        # 0x140000000
   140004a40:	je     0x140004a46
   140004a42:	xor    eax,eax
   140004a44:	jmp    0x140004a95
   140004a46:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb5ef]        # 0x14000003c
   140004a4d:	lea    rax,[rip+0xffffffffffffb5ac]        # 0x140000000
   140004a54:	add    rcx,rax
   140004a57:	cmp    DWORD PTR [rcx],0x4550
   140004a5d:	jne    0x140004a42
   140004a5f:	movzx  eax,WORD PTR [rcx+0x18]
   140004a63:	cmp    eax,0x10b
   140004a68:	je     0x140004a84
   140004a6a:	cmp    eax,0x20b
   140004a6f:	jne    0x140004a42
   140004a71:	xor    eax,eax
   140004a73:	cmp    DWORD PTR [rcx+0x84],0xe
   140004a7a:	jbe    0x140004a95
   140004a7c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004a82:	jmp    0x140004a92
   140004a84:	xor    eax,eax
   140004a86:	cmp    DWORD PTR [rcx+0x74],0xe
   140004a8a:	jbe    0x140004a95
   140004a8c:	cmp    DWORD PTR [rcx+0xe8],eax
   140004a92:	setne  al
   140004a95:	mov    ecx,0x2
   140004a9a:	mov    DWORD PTR [rip+0x4608],eax        # 0x1400090a8
   140004aa0:	call   0x1400052c8
   140004aa5:	mov    ecx,eax
   140004aa7:	call   QWORD PTR [rip+0x1753]        # 0x140006200
   140004aad:	mov    rcx,QWORD PTR [rip+0x1794]        # 0x140006248
   140004ab4:	or     rax,0xffffffffffffffff
   140004ab8:	mov    QWORD PTR [rip+0x4d69],rax        # 0x140009828
   140004abf:	mov    QWORD PTR [rip+0x4d6a],rax        # 0x140009830
   140004ac6:	mov    eax,DWORD PTR [rip+0x4b60]        # 0x14000962c
   140004acc:	mov    DWORD PTR [rcx],eax
   140004ace:	mov    rcx,QWORD PTR [rip+0x17a3]        # 0x140006278
   140004ad5:	mov    eax,DWORD PTR [rip+0x4b45]        # 0x140009620
   140004adb:	mov    DWORD PTR [rcx],eax
   140004add:	call   0x1400021b0
   140004ae2:	cmp    DWORD PTR [rip+0x4517],0x0        # 0x140009000
   140004ae9:	jne    0x140004af8
   140004aeb:	lea    rcx,[rip+0xffffffffffffd6be]        # 0x1400021b0
   140004af2:	call   QWORD PTR [rip+0x1728]        # 0x140006220
   140004af8:	xor    eax,eax
   140004afa:	add    rsp,0x28
   140004afe:	ret    
   140004aff:	int3   
   140004b00:	int3   
   140004b01:	int3   
   140004b02:	int3   
   140004b03:	int3   
   140004b04:	int3   
   140004b05:	int3   
   140004b06:	int3   
   140004b07:	int3   
   140004b08:	int3   
   140004b09:	int3   
   140004b0a:	int3   
   140004b0b:	int3   
   140004b0c:	int3   
   140004b0d:	int3   
   140004b0e:	int3   
   140004b0f:	int3   
   140004b10:	sub    rsp,0x38
   140004b14:	mov    eax,DWORD PTR [rip+0x4b0e]        # 0x140009628
   140004b1a:	lea    r8,[rip+0x457f]        # 0x1400090a0
   140004b21:	mov    r9d,DWORD PTR [rip+0x4afc]        # 0x140009624
   140004b28:	lea    rdx,[rip+0x4569]        # 0x140009098
   140004b2f:	mov    DWORD PTR [rip+0x4577],eax        # 0x1400090ac
   140004b35:	lea    rcx,[rip+0x4554]        # 0x140009090
   140004b3c:	lea    rax,[rip+0x4569]        # 0x1400090ac
   140004b43:	mov    QWORD PTR [rsp+0x20],rax
   140004b48:	call   QWORD PTR [rip+0x16aa]        # 0x1400061f8
   140004b4e:	mov    DWORD PTR [rip+0x4540],eax        # 0x140009094
   140004b54:	add    rsp,0x38
   140004b58:	ret    
   140004b59:	int3   
   140004b5a:	int3   
   140004b5b:	int3   
   140004b5c:	int3   
   140004b5d:	int3   
   140004b5e:	int3   
   140004b5f:	int3   
   140004b60:	mov    QWORD PTR [rsp+0x8],rbx
   140004b65:	mov    QWORD PTR [rsp+0x10],rsi
   140004b6a:	mov    QWORD PTR [rsp+0x18],rdi
   140004b6f:	push   r12
   140004b71:	push   r14
   140004b73:	push   r15
   140004b75:	sub    rsp,0xb0
   140004b7c:	xor    r15d,r15d
   140004b7f:	mov    DWORD PTR [rsp+0x20],r15d
   140004b84:	lea    rcx,[rsp+0x40]
   140004b89:	call   QWORD PTR [rip+0x1559]        # 0x1400060e8
   140004b8f:	nop
   140004b90:	mov    rax,QWORD PTR gs:0x30
   140004b99:	mov    rbx,QWORD PTR [rax+0x8]
   140004b9d:	mov    r14d,r15d
   140004ba0:	xor    eax,eax
   140004ba2:	lock cmpxchg QWORD PTR [rip+0x4c6d],rbx        # 0x140009818
   140004bab:	je     0x140004bc9
   140004bad:	cmp    rax,rbx
   140004bb0:	jne    0x140004bbc
   140004bb2:	mov    edi,0x1
   140004bb7:	mov    r14d,edi
   140004bba:	jmp    0x140004bce
   140004bbc:	mov    ecx,0x3e8
   140004bc1:	call   QWORD PTR [rip+0x1469]        # 0x140006030
   140004bc7:	jmp    0x140004ba0
   140004bc9:	mov    edi,0x1
   140004bce:	mov    eax,DWORD PTR [rip+0x4c4c]        # 0x140009820
   140004bd4:	cmp    eax,edi
   140004bd6:	jne    0x140004be6
   140004bd8:	mov    esi,0x1f
   140004bdd:	mov    ecx,esi
   140004bdf:	call   0x140005314
   140004be4:	jmp    0x140004c57
   140004be6:	mov    eax,DWORD PTR [rip+0x4c34]        # 0x140009820
   140004bec:	test   eax,eax
   140004bee:	jne    0x140004c4c
   140004bf0:	mov    DWORD PTR [rip+0x4c2a],edi        # 0x140009820
   140004bf6:	lea    r12,[rip+0x171b]        # 0x140006318
   140004bfd:	lea    rbx,[rip+0x16fc]        # 0x140006300
   140004c04:	mov    QWORD PTR [rsp+0x30],rbx
   140004c09:	mov    eax,r15d
   140004c0c:	mov    DWORD PTR [rsp+0x24],eax
   140004c10:	cmp    rbx,r12
   140004c13:	jae    0x140004c3e
   140004c15:	test   eax,eax
   140004c17:	jne    0x140004c42
   140004c19:	mov    rsi,QWORD PTR [rbx]
   140004c1c:	test   rsi,rsi
   140004c1f:	je     0x140004c33
   140004c21:	mov    rcx,rsi
   140004c24:	mov    rax,QWORD PTR [rip+0x168d]        # 0x1400062b8
   140004c2b:	call   rax
   140004c2d:	call   rsi
   140004c2f:	mov    DWORD PTR [rsp+0x24],eax
   140004c33:	add    rbx,0x8
   140004c37:	mov    QWORD PTR [rsp+0x30],rbx
   140004c3c:	jmp    0x140004c10
   140004c3e:	test   eax,eax
   140004c40:	je     0x140004c52
   140004c42:	mov    eax,0xff
   140004c47:	jmp    0x140004db3
   140004c4c:	mov    DWORD PTR [rip+0x443a],edi        # 0x14000908c
   140004c52:	mov    esi,0x1f
   140004c57:	mov    eax,DWORD PTR [rip+0x4bc3]        # 0x140009820
   140004c5d:	cmp    eax,edi
   140004c5f:	jne    0x140004c7e
   140004c61:	lea    rdx,[rip+0x1690]        # 0x1400062f8
   140004c68:	lea    rcx,[rip+0x1659]        # 0x1400062c8
   140004c6f:	call   0x1400054da
   140004c74:	mov    DWORD PTR [rip+0x4ba2],0x2        # 0x140009820
   140004c7e:	test   r14d,r14d
   140004c81:	jne    0x140004c8d
   140004c83:	mov    rax,r15
   140004c86:	xchg   QWORD PTR [rip+0x4b8b],rax        # 0x140009818
   140004c8d:	cmp    QWORD PTR [rip+0x4ba4],r15        # 0x140009838
   140004c94:	je     0x140004cc4
   140004c96:	lea    rcx,[rip+0x4b9b]        # 0x140009838
   140004c9d:	call   0x140005370
   140004ca2:	test   eax,eax
   140004ca4:	je     0x140004cc4
   140004ca6:	mov    rbx,QWORD PTR [rip+0x4b8b]        # 0x140009838
   140004cad:	mov    rcx,rbx
   140004cb0:	mov    rax,QWORD PTR [rip+0x1601]        # 0x1400062b8
   140004cb7:	call   rax
   140004cb9:	xor    r8d,r8d
   140004cbc:	lea    edx,[r8+0x2]
   140004cc0:	xor    ecx,ecx
   140004cc2:	call   rbx
   140004cc4:	mov    rax,QWORD PTR [rip+0x156d]        # 0x140006238
   140004ccb:	mov    rdx,QWORD PTR [rax]
   140004cce:	test   rdx,rdx
   140004cd1:	jne    0x140004cdd
   140004cd3:	mov    eax,0xff
   140004cd8:	jmp    0x140004db3
   140004cdd:	mov    QWORD PTR [rsp+0x28],rdx
   140004ce2:	mov    ecx,DWORD PTR [rsp+0x20]
   140004ce6:	cmp    WORD PTR [rdx],0x20
   140004cea:	ja     0x140004d64
   140004cec:	cmp    WORD PTR [rdx],r15w
   140004cf0:	je     0x140004cf6
   140004cf2:	test   ecx,ecx
   140004cf4:	jne    0x140004d64
   140004cf6:	movzx  eax,WORD PTR [rdx]
   140004cf9:	sub    ax,di
   140004cfc:	cmp    ax,si
   140004cff:	ja     0x140004d0c
   140004d01:	add    rdx,0x2
   140004d05:	mov    QWORD PTR [rsp+0x28],rdx
   140004d0a:	jmp    0x140004cf6
   140004d0c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140004d10:	movzx  eax,WORD PTR [rsp+0x80]
   140004d18:	mov    r9d,0xa
   140004d1e:	and    cl,dil
   140004d21:	cmovne r9d,eax
   140004d25:	mov    r8,rdx
   140004d28:	xor    edx,edx
   140004d2a:	lea    rcx,[rip+0xffffffffffffb2cf]        # 0x140000000
   140004d31:	call   0x140002510
   140004d36:	mov    DWORD PTR [rip+0x434c],eax        # 0x140009088
   140004d3c:	cmp    DWORD PTR [rip+0x4365],r15d        # 0x1400090a8
   140004d43:	jne    0x140004d4d
   140004d45:	mov    ecx,eax
   140004d47:	call   QWORD PTR [rip+0x14bb]        # 0x140006208
   140004d4d:	cmp    DWORD PTR [rip+0x4338],r15d        # 0x14000908c
   140004d54:	jne    0x140004d62
   140004d56:	call   QWORD PTR [rip+0x14bc]        # 0x140006218
   140004d5c:	mov    eax,DWORD PTR [rip+0x4326]        # 0x140009088
   140004d62:	jmp    0x140004db3
   140004d64:	cmp    WORD PTR [rdx],0x22
   140004d68:	jne    0x140004d78
   140004d6a:	mov    eax,r15d
   140004d6d:	test   ecx,ecx
   140004d6f:	sete   al
   140004d72:	mov    ecx,eax
   140004d74:	mov    DWORD PTR [rsp+0x20],eax
   140004d78:	add    rdx,0x2
   140004d7c:	mov    QWORD PTR [rsp+0x28],rdx
   140004d81:	jmp    0x140004ce6
   140004d86:	mov    DWORD PTR [rip+0x42fc],eax        # 0x140009088
   140004d8c:	cmp    DWORD PTR [rip+0x4315],0x0        # 0x1400090a8
   140004d93:	jne    0x140004d9e
   140004d95:	mov    ecx,eax
   140004d97:	call   QWORD PTR [rip+0x1473]        # 0x140006210
   140004d9d:	int3   
   140004d9e:	cmp    DWORD PTR [rip+0x42e7],0x0        # 0x14000908c
   140004da5:	jne    0x140004db3
   140004da7:	call   QWORD PTR [rip+0x146b]        # 0x140006218
   140004dad:	mov    eax,DWORD PTR [rip+0x42d5]        # 0x140009088
   140004db3:	lea    r11,[rsp+0xb0]
   140004dbb:	mov    rbx,QWORD PTR [r11+0x20]
   140004dbf:	mov    rsi,QWORD PTR [r11+0x28]
   140004dc3:	mov    rdi,QWORD PTR [r11+0x30]
   140004dc7:	mov    rsp,r11
   140004dca:	pop    r15
   140004dcc:	pop    r14
   140004dce:	pop    r12
   140004dd0:	ret    
   140004dd1:	int3   
   140004dd2:	int3   
   140004dd3:	int3   
   140004dd4:	int3   
   140004dd5:	int3   
   140004dd6:	int3   
   140004dd7:	int3   
   140004dd8:	int3   
   140004dd9:	int3   
   140004dda:	int3   
   140004ddb:	int3   
   140004ddc:	int3   
   140004ddd:	int3   
   140004dde:	int3   
   140004ddf:	int3   
   140004de0:	sub    rsp,0x28
   140004de4:	call   0x140005404
   140004de9:	add    rsp,0x28
   140004ded:	jmp    0x140004b60
   140004df2:	int3   
   140004df3:	int3   
   140004df4:	int3   
   140004df5:	int3   
   140004df6:	int3   
   140004df7:	int3   
   140004df8:	int3   
   140004df9:	int3   
   140004dfa:	int3   
   140004dfb:	int3   
   140004dfc:	int3   
   140004dfd:	int3   
   140004dfe:	int3   
   140004dff:	int3   
   140004e00:	int3   
   140004e01:	int3   
   140004e02:	int3   
   140004e03:	int3   
   140004e04:	int3   
   140004e05:	int3   
   140004e06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004e10:	cmp    rcx,QWORD PTR [rip+0x41f1]        # 0x140009008
   140004e17:	jne    0x140004e29
   140004e19:	rol    rcx,0x10
   140004e1d:	test   cx,0xffff
   140004e22:	jne    0x140004e25
   140004e24:	ret    
   140004e25:	ror    rcx,0x10
   140004e29:	jmp    0x140004f60
   140004e2e:	int3   
   140004e2f:	int3   
   140004e30:	int3   
   140004e31:	int3   
   140004e32:	int3   
   140004e33:	int3   
   140004e34:	jmp    QWORD PTR [rip+0x139e]        # 0x1400061d8
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	int3   
   140004e3d:	int3   
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	mov    QWORD PTR [rsp+0x8],rbx
   140004e45:	push   rdi
   140004e46:	sub    rsp,0x20
   140004e4a:	mov    rdi,rcx
   140004e4d:	mov    rax,QWORD PTR [rip+0x49dc]        # 0x140009830
   140004e54:	mov    QWORD PTR [rsp+0x38],rax
   140004e59:	cmp    rax,0xffffffffffffffff
   140004e5d:	jne    0x140004e76
   140004e5f:	mov    rbx,QWORD PTR [rip+0x141a]        # 0x140006280
   140004e66:	mov    rcx,rbx
   140004e69:	call   QWORD PTR [rip+0x1449]        # 0x1400062b8
   140004e6f:	mov    rcx,rdi
   140004e72:	call   rbx
   140004e74:	jmp    0x140004ed3
   140004e76:	mov    ecx,0x8
   140004e7b:	call   0x1400054f2
   140004e80:	nop
   140004e81:	mov    rax,QWORD PTR [rip+0x49a8]        # 0x140009830
   140004e88:	mov    QWORD PTR [rsp+0x38],rax
   140004e8d:	mov    rax,QWORD PTR [rip+0x4994]        # 0x140009828
   140004e94:	mov    QWORD PTR [rsp+0x40],rax
   140004e99:	lea    r8,[rsp+0x40]
   140004e9e:	lea    rdx,[rsp+0x38]
   140004ea3:	mov    rcx,rdi
   140004ea6:	call   0x14000550a
   140004eab:	mov    rbx,rax
   140004eae:	mov    rdx,QWORD PTR [rsp+0x38]
   140004eb3:	mov    QWORD PTR [rip+0x4976],rdx        # 0x140009830
   140004eba:	mov    rdx,QWORD PTR [rsp+0x40]
   140004ebf:	mov    QWORD PTR [rip+0x4962],rdx        # 0x140009828
   140004ec6:	mov    ecx,0x8
   140004ecb:	call   0x1400054fe
   140004ed0:	mov    rax,rbx
   140004ed3:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ed8:	add    rsp,0x20
   140004edc:	pop    rdi
   140004edd:	ret    
   140004ede:	int3   
   140004edf:	int3   
   140004ee0:	int3   
   140004ee1:	int3   
   140004ee2:	int3   
   140004ee3:	int3   
   140004ee4:	sub    rsp,0x28
   140004ee8:	call   0x140004e40
   140004eed:	neg    rax
   140004ef0:	sbb    eax,eax
   140004ef2:	neg    eax
   140004ef4:	dec    eax
   140004ef6:	add    rsp,0x28
   140004efa:	ret    
   140004efb:	int3   
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	int3   
   140004eff:	int3   
   140004f00:	int3   
   140004f01:	int3   
   140004f02:	int3   
   140004f03:	int3   
   140004f04:	int3   
   140004f05:	int3   
   140004f06:	int3   
   140004f07:	int3   
   140004f08:	int3   
   140004f09:	int3   
   140004f0a:	int3   
   140004f0b:	int3   
   140004f0c:	int3   
   140004f0d:	int3   
   140004f0e:	int3   
   140004f0f:	int3   
   140004f10:	jmp    QWORD PTR [rip+0x12ba]        # 0x1400061d0
   140004f16:	int3   
   140004f17:	int3   
   140004f18:	int3   
   140004f19:	int3   
   140004f1a:	int3   
   140004f1b:	int3   
   140004f1c:	rex push rbx
   140004f1e:	sub    rsp,0x20
   140004f22:	mov    rbx,rcx
   140004f25:	xor    ecx,ecx
   140004f27:	call   QWORD PTR [rip+0x11ab]        # 0x1400060d8
   140004f2d:	mov    rcx,rbx
   140004f30:	call   QWORD PTR [rip+0x11aa]        # 0x1400060e0
   140004f36:	call   QWORD PTR [rip+0x1194]        # 0x1400060d0
   140004f3c:	mov    rcx,rax
   140004f3f:	mov    edx,0xc0000409
   140004f44:	add    rsp,0x20
   140004f48:	pop    rbx
   140004f49:	rex.W jmp QWORD PTR [rip+0x1178]        # 0x1400060c8
   140004f50:	int3   
   140004f51:	int3   
   140004f52:	int3   
   140004f53:	int3   
   140004f54:	int3   
   140004f55:	int3   
   140004f56:	int3   
   140004f57:	int3   
   140004f58:	int3   
   140004f59:	int3   
   140004f5a:	int3   
   140004f5b:	int3   
   140004f5c:	int3   
   140004f5d:	int3   
   140004f5e:	int3   
   140004f5f:	int3   
   140004f60:	mov    QWORD PTR [rsp+0x8],rcx
   140004f65:	sub    rsp,0x88
   140004f6c:	lea    rcx,[rip+0x41dd]        # 0x140009150
   140004f73:	call   QWORD PTR [rip+0x1327]        # 0x1400062a0
   140004f79:	mov    rax,QWORD PTR [rip+0x42c8]        # 0x140009248
   140004f80:	mov    QWORD PTR [rsp+0x48],rax
   140004f85:	xor    r8d,r8d
   140004f88:	lea    rdx,[rsp+0x50]
   140004f8d:	mov    rcx,QWORD PTR [rsp+0x48]
   140004f92:	call   QWORD PTR [rip+0x1300]        # 0x140006298
   140004f98:	mov    QWORD PTR [rsp+0x40],rax
   140004f9d:	cmp    QWORD PTR [rsp+0x40],0x0
   140004fa3:	je     0x140004fe7
   140004fa5:	mov    QWORD PTR [rsp+0x38],0x0
   140004fae:	lea    rax,[rsp+0x58]
   140004fb3:	mov    QWORD PTR [rsp+0x30],rax
   140004fb8:	lea    rax,[rsp+0x60]
   140004fbd:	mov    QWORD PTR [rsp+0x28],rax
   140004fc2:	lea    rax,[rip+0x4187]        # 0x140009150
   140004fc9:	mov    QWORD PTR [rsp+0x20],rax
   140004fce:	mov    r9,QWORD PTR [rsp+0x40]
   140004fd3:	mov    r8,QWORD PTR [rsp+0x48]
   140004fd8:	mov    rdx,QWORD PTR [rsp+0x50]
   140004fdd:	xor    ecx,ecx
   140004fdf:	call   QWORD PTR [rip+0x12c3]        # 0x1400062a8
   140004fe5:	jmp    0x14000500a
   140004fe7:	mov    rax,QWORD PTR [rip+0x41fa]        # 0x1400091e8
   140004fee:	mov    rax,QWORD PTR [rax]
   140004ff1:	mov    QWORD PTR [rip+0x4250],rax        # 0x140009248
   140004ff8:	mov    rax,QWORD PTR [rip+0x41e9]        # 0x1400091e8
   140004fff:	add    rax,0x8
   140005003:	mov    QWORD PTR [rip+0x41de],rax        # 0x1400091e8
   14000500a:	mov    rax,QWORD PTR [rip+0x4237]        # 0x140009248
   140005011:	mov    QWORD PTR [rip+0x40a8],rax        # 0x1400090c0
   140005018:	mov    rax,QWORD PTR [rsp+0x90]
   140005020:	mov    QWORD PTR [rip+0x41a9],rax        # 0x1400091d0
   140005027:	mov    DWORD PTR [rip+0x407f],0xc0000409        # 0x1400090b0
   140005031:	mov    DWORD PTR [rip+0x4079],0x1        # 0x1400090b4
   14000503b:	mov    DWORD PTR [rip+0x4083],0x3        # 0x1400090c8
   140005045:	mov    eax,0x8
   14000504a:	imul   rax,rax,0x0
   14000504e:	lea    rcx,[rip+0x407b]        # 0x1400090d0
   140005055:	mov    QWORD PTR [rcx+rax*1],0x2
   14000505d:	mov    eax,0x8
   140005062:	imul   rax,rax,0x1
   140005066:	lea    rcx,[rip+0x4063]        # 0x1400090d0
   14000506d:	mov    rdx,QWORD PTR [rip+0x3f94]        # 0x140009008
   140005074:	mov    QWORD PTR [rcx+rax*1],rdx
   140005078:	mov    eax,0x8
   14000507d:	imul   rax,rax,0x2
   140005081:	lea    rcx,[rip+0x4048]        # 0x1400090d0
   140005088:	mov    rdx,QWORD PTR [rip+0x3f81]        # 0x140009010
   14000508f:	mov    QWORD PTR [rcx+rax*1],rdx
   140005093:	mov    eax,0x8
   140005098:	imul   rax,rax,0x0
   14000509c:	mov    rcx,QWORD PTR [rip+0x3f65]        # 0x140009008
   1400050a3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400050a8:	mov    eax,0x8
   1400050ad:	imul   rax,rax,0x1
   1400050b1:	mov    rcx,QWORD PTR [rip+0x3f58]        # 0x140009010
   1400050b8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400050bd:	lea    rcx,[rip+0x140c]        # 0x1400064d0
   1400050c4:	call   0x140004f1c
   1400050c9:	add    rsp,0x88
   1400050d0:	ret    
   1400050d1:	int3   
   1400050d2:	int3   
   1400050d3:	int3   
   1400050d4:	int3   
   1400050d5:	int3   
   1400050d6:	int3   
   1400050d7:	int3   
   1400050d8:	sub    rsp,0x78
   1400050dc:	lea    rcx,[rip+0x406d]        # 0x140009150
   1400050e3:	call   QWORD PTR [rip+0x11b7]        # 0x1400062a0
   1400050e9:	mov    rax,QWORD PTR [rip+0x4158]        # 0x140009248
   1400050f0:	mov    QWORD PTR [rsp+0x48],rax
   1400050f5:	xor    r8d,r8d
   1400050f8:	lea    rdx,[rsp+0x50]
   1400050fd:	mov    rcx,QWORD PTR [rsp+0x48]
   140005102:	call   QWORD PTR [rip+0x1190]        # 0x140006298
   140005108:	mov    QWORD PTR [rsp+0x40],rax
   14000510d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005113:	je     0x140005157
   140005115:	mov    QWORD PTR [rsp+0x38],0x0
   14000511e:	lea    rax,[rsp+0x58]
   140005123:	mov    QWORD PTR [rsp+0x30],rax
   140005128:	lea    rax,[rsp+0x60]
   14000512d:	mov    QWORD PTR [rsp+0x28],rax
   140005132:	lea    rax,[rip+0x4017]        # 0x140009150
   140005139:	mov    QWORD PTR [rsp+0x20],rax
   14000513e:	mov    r9,QWORD PTR [rsp+0x40]
   140005143:	mov    r8,QWORD PTR [rsp+0x48]
   140005148:	mov    rdx,QWORD PTR [rsp+0x50]
   14000514d:	xor    ecx,ecx
   14000514f:	call   QWORD PTR [rip+0x1153]        # 0x1400062a8
   140005155:	jmp    0x14000517a
   140005157:	mov    rax,QWORD PTR [rip+0x408a]        # 0x1400091e8
   14000515e:	mov    rax,QWORD PTR [rax]
   140005161:	mov    QWORD PTR [rip+0x40e0],rax        # 0x140009248
   140005168:	mov    rax,QWORD PTR [rip+0x4079]        # 0x1400091e8
   14000516f:	add    rax,0x8
   140005173:	mov    QWORD PTR [rip+0x406e],rax        # 0x1400091e8
   14000517a:	mov    rax,QWORD PTR [rip+0x40c7]        # 0x140009248
   140005181:	mov    QWORD PTR [rip+0x3f38],rax        # 0x1400090c0
   140005188:	mov    DWORD PTR [rip+0x3f1e],0xc0000409        # 0x1400090b0
   140005192:	mov    DWORD PTR [rip+0x3f18],0x1        # 0x1400090b4
   14000519c:	mov    DWORD PTR [rip+0x3f22],0x1        # 0x1400090c8
   1400051a6:	mov    eax,0x8
   1400051ab:	imul   rax,rax,0x0
   1400051af:	lea    rcx,[rip+0x3f1a]        # 0x1400090d0
   1400051b6:	mov    QWORD PTR [rcx+rax*1],0x8
   1400051be:	lea    rcx,[rip+0x130b]        # 0x1400064d0
   1400051c5:	call   0x140004f1c
   1400051ca:	add    rsp,0x78
   1400051ce:	ret    
   1400051cf:	int3   
   1400051d0:	int3   
   1400051d1:	int3   
   1400051d2:	int3   
   1400051d3:	int3   
   1400051d4:	int3   
   1400051d5:	int3   
   1400051d6:	jmp    QWORD PTR [rip+0xfdc]        # 0x1400061b8
   1400051dc:	int3   
   1400051dd:	int3   
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	int3   
   1400051e1:	int3   
   1400051e2:	jmp    QWORD PTR [rip+0x1088]        # 0x140006270
   1400051e8:	int3   
   1400051e9:	int3   
   1400051ea:	int3   
   1400051eb:	int3   
   1400051ec:	int3   
   1400051ed:	int3   
   1400051ee:	jmp    QWORD PTR [rip+0xfbc]        # 0x1400061b0
   1400051f4:	int3   
   1400051f5:	int3   
   1400051f6:	int3   
   1400051f7:	int3   
   1400051f8:	int3   
   1400051f9:	int3   
   1400051fa:	int3   
   1400051fb:	int3   
   1400051fc:	int3   
   1400051fd:	int3   
   1400051fe:	int3   
   1400051ff:	int3   
   140005200:	sub    rsp,0x28
   140005204:	mov    rax,QWORD PTR [rcx]
   140005207:	cmp    DWORD PTR [rax],0xe06d7363
   14000520d:	jne    0x140005232
   14000520f:	cmp    DWORD PTR [rax+0x18],0x4
   140005213:	jne    0x140005232
   140005215:	mov    ecx,DWORD PTR [rax+0x20]
   140005218:	lea    eax,[rcx-0x19930520]
   14000521e:	cmp    eax,0x2
   140005221:	jbe    0x14000522b
   140005223:	cmp    ecx,0x1994000
   140005229:	jne    0x140005232
   14000522b:	call   QWORD PTR [rip+0x100f]        # 0x140006240
   140005231:	int3   
   140005232:	xor    eax,eax
   140005234:	add    rsp,0x28
   140005238:	ret    
   140005239:	int3   
   14000523a:	int3   
   14000523b:	int3   
   14000523c:	int3   
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	sub    rsp,0x28
   140005244:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005200
   14000524b:	call   QWORD PTR [rip+0xe87]        # 0x1400060d8
   140005251:	xor    eax,eax
   140005253:	add    rsp,0x28
   140005257:	ret    
   140005258:	int3   
   140005259:	int3   
   14000525a:	int3   
   14000525b:	int3   
   14000525c:	int3   
   14000525d:	int3   
   14000525e:	jmp    QWORD PTR [rip+0xf84]        # 0x1400061e8
   140005264:	int3   
   140005265:	int3   
   140005266:	int3   
   140005267:	int3   
   140005268:	int3   
   140005269:	int3   
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	sub    rsp,0x18
   140005270:	xor    edx,edx
   140005272:	lea    rax,[rcx-0x1]
   140005276:	cmp    rax,0xfffffffffffffffd
   14000527a:	ja     0x1400052b8
   14000527c:	mov    eax,0x5a4d
   140005281:	cmp    WORD PTR [rcx],ax
   140005284:	jne    0x1400052b0
   140005286:	cmp    DWORD PTR [rcx+0x3c],edx
   140005289:	jl     0x1400052b0
   14000528b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005292:	jae    0x1400052b0
   140005294:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005298:	add    rax,rcx
   14000529b:	mov    QWORD PTR [rsp],rax
   14000529f:	cmp    DWORD PTR [rax],0x4550
   1400052a5:	cmovne rax,rdx
   1400052a9:	mov    rdx,rax
   1400052ac:	mov    QWORD PTR [rsp],rax
   1400052b0:	jmp    0x1400052b8
   1400052b2:	xor    edx,edx
   1400052b4:	mov    QWORD PTR [rsp],rdx
   1400052b8:	mov    rax,rdx
   1400052bb:	add    rsp,0x18
   1400052bf:	ret    
   1400052c0:	int3   
   1400052c1:	int3   
   1400052c2:	int3   
   1400052c3:	int3   
   1400052c4:	int3   
   1400052c5:	int3   
   1400052c6:	int3   
   1400052c7:	int3   
   1400052c8:	rex push rbx
   1400052ca:	sub    rsp,0x20
   1400052ce:	mov    ebx,ecx
   1400052d0:	xor    ecx,ecx
   1400052d2:	call   QWORD PTR [rip+0xd48]        # 0x140006020
   1400052d8:	test   rax,rax
   1400052db:	je     0x140005305
   1400052dd:	mov    rcx,rax
   1400052e0:	call   0x14000526c
   1400052e5:	test   rax,rax
   1400052e8:	je     0x140005305
   1400052ea:	mov    ecx,0x2
   1400052ef:	cmp    WORD PTR [rax+0x5c],cx
   1400052f3:	jne    0x1400052f9
   1400052f5:	mov    eax,ecx
   1400052f7:	jmp    0x140005307
   1400052f9:	cmp    WORD PTR [rax+0x5c],0x3
   1400052fe:	mov    eax,0x1
   140005303:	je     0x140005307
   140005305:	mov    eax,ebx
   140005307:	add    rsp,0x20
   14000530b:	pop    rbx
   14000530c:	ret    
   14000530d:	int3   
   14000530e:	int3   
   14000530f:	int3   
   140005310:	int3   
   140005311:	int3   
   140005312:	int3   
   140005313:	int3   
   140005314:	jmp    QWORD PTR [rip+0xed6]        # 0x1400061f0
   14000531a:	int3   
   14000531b:	int3   
   14000531c:	int3   
   14000531d:	int3   
   14000531e:	int3   
   14000531f:	int3   
   140005320:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005324:	xor    r9d,r9d
   140005327:	add    r8,rcx
   14000532a:	mov    r10,rdx
   14000532d:	movzx  eax,WORD PTR [r8+0x14]
   140005332:	movzx  r11d,WORD PTR [r8+0x6]
   140005337:	add    rax,0x18
   14000533b:	add    rax,r8
   14000533e:	test   r11d,r11d
   140005341:	je     0x140005361
   140005343:	mov    edx,DWORD PTR [rax+0xc]
   140005346:	cmp    r10,rdx
   140005349:	jb     0x140005355
   14000534b:	mov    ecx,DWORD PTR [rax+0x8]
   14000534e:	add    ecx,edx
   140005350:	cmp    r10,rcx
   140005353:	jb     0x140005363
   140005355:	inc    r9d
   140005358:	add    rax,0x28
   14000535c:	cmp    r9d,r11d
   14000535f:	jb     0x140005343
   140005361:	xor    eax,eax
   140005363:	ret    
   140005364:	int3   
   140005365:	int3   
   140005366:	int3   
   140005367:	int3   
   140005368:	int3   
   140005369:	int3   
   14000536a:	int3   
   14000536b:	int3   
   14000536c:	int3   
   14000536d:	int3   
   14000536e:	int3   
   14000536f:	int3   
   140005370:	mov    QWORD PTR [rsp+0x8],rbx
   140005375:	push   rdi
   140005376:	sub    rsp,0x20
   14000537a:	mov    rbx,rcx
   14000537d:	lea    rdi,[rip+0xffffffffffffac7c]        # 0x140000000
   140005384:	mov    rcx,rdi
   140005387:	call   0x1400053d0
   14000538c:	test   eax,eax
   14000538e:	je     0x1400053b2
   140005390:	sub    rbx,rdi
   140005393:	mov    rdx,rbx
   140005396:	mov    rcx,rdi
   140005399:	call   0x140005320
   14000539e:	test   rax,rax
   1400053a1:	je     0x1400053b2
   1400053a3:	mov    eax,DWORD PTR [rax+0x24]
   1400053a6:	shr    eax,0x1f
   1400053a9:	not    eax
   1400053ab:	and    eax,0x1
   1400053ae:	jmp    0x1400053b2
   1400053b0:	xor    eax,eax
   1400053b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053b7:	add    rsp,0x20
   1400053bb:	pop    rdi
   1400053bc:	ret    
   1400053bd:	int3   
   1400053be:	int3   
   1400053bf:	int3   
   1400053c0:	int3   
   1400053c1:	int3   
   1400053c2:	int3   
   1400053c3:	int3   
   1400053c4:	int3   
   1400053c5:	int3   
   1400053c6:	int3   
   1400053c7:	int3   
   1400053c8:	int3   
   1400053c9:	int3   
   1400053ca:	int3   
   1400053cb:	int3   
   1400053cc:	int3   
   1400053cd:	int3   
   1400053ce:	int3   
   1400053cf:	int3   
   1400053d0:	mov    rax,rcx
   1400053d3:	mov    ecx,0x5a4d
   1400053d8:	cmp    WORD PTR [rax],cx
   1400053db:	je     0x1400053e0
   1400053dd:	xor    eax,eax
   1400053df:	ret    
   1400053e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400053e4:	add    rcx,rax
   1400053e7:	xor    eax,eax
   1400053e9:	cmp    DWORD PTR [rcx],0x4550
   1400053ef:	jne    0x1400053fd
   1400053f1:	mov    edx,0x20b
   1400053f6:	cmp    WORD PTR [rcx+0x18],dx
   1400053fa:	sete   al
   1400053fd:	ret    
   1400053fe:	int3   
   1400053ff:	int3   
   140005400:	int3   
   140005401:	int3   
   140005402:	int3   
   140005403:	int3   
   140005404:	mov    QWORD PTR [rsp+0x20],rbx
   140005409:	push   rbp
   14000540a:	mov    rbp,rsp
   14000540d:	sub    rsp,0x20
   140005411:	and    QWORD PTR [rbp+0x18],0x0
   140005416:	movabs rbx,0x2b992ddfa232
   140005420:	mov    rax,QWORD PTR [rip+0x3be1]        # 0x140009008
   140005427:	cmp    rax,rbx
   14000542a:	jne    0x1400054bf
   140005430:	lea    rcx,[rbp+0x18]
   140005434:	call   QWORD PTR [rip+0xc76]        # 0x1400060b0
   14000543a:	mov    rax,QWORD PTR [rbp+0x18]
   14000543e:	mov    QWORD PTR [rbp+0x10],rax
   140005442:	call   QWORD PTR [rip+0xc70]        # 0x1400060b8
   140005448:	mov    eax,eax
   14000544a:	xor    QWORD PTR [rbp+0x10],rax
   14000544e:	call   QWORD PTR [rip+0xc14]        # 0x140006068
   140005454:	mov    eax,eax
   140005456:	xor    QWORD PTR [rbp+0x10],rax
   14000545a:	call   QWORD PTR [rip+0xc48]        # 0x1400060a8
   140005460:	mov    eax,eax
   140005462:	shl    rax,0x18
   140005466:	xor    QWORD PTR [rbp+0x10],rax
   14000546a:	call   QWORD PTR [rip+0xc38]        # 0x1400060a8
   140005470:	mov    eax,eax
   140005472:	lea    rcx,[rbp+0x10]
   140005476:	xor    rax,QWORD PTR [rbp+0x10]
   14000547a:	xor    rax,rcx
   14000547d:	lea    rcx,[rbp+0x20]
   140005481:	mov    QWORD PTR [rbp+0x10],rax
   140005485:	call   QWORD PTR [rip+0xc35]        # 0x1400060c0
   14000548b:	mov    eax,DWORD PTR [rbp+0x20]
   14000548e:	movabs rcx,0xffffffffffff
   140005498:	shl    rax,0x20
   14000549c:	xor    rax,QWORD PTR [rbp+0x20]
   1400054a0:	xor    rax,QWORD PTR [rbp+0x10]
   1400054a4:	and    rax,rcx
   1400054a7:	movabs rcx,0x2b992ddfa233
   1400054b1:	cmp    rax,rbx
   1400054b4:	cmove  rax,rcx
   1400054b8:	mov    QWORD PTR [rip+0x3b49],rax        # 0x140009008
   1400054bf:	mov    rbx,QWORD PTR [rsp+0x48]
   1400054c4:	not    rax
   1400054c7:	mov    QWORD PTR [rip+0x3b42],rax        # 0x140009010
   1400054ce:	add    rsp,0x20
   1400054d2:	pop    rbp
   1400054d3:	ret    
   1400054d4:	int3   
   1400054d5:	int3   
   1400054d6:	int3   
   1400054d7:	int3   
   1400054d8:	int3   
   1400054d9:	int3   
   1400054da:	jmp    QWORD PTR [rip+0xd48]        # 0x140006228
   1400054e0:	int3   
   1400054e1:	int3   
   1400054e2:	int3   
   1400054e3:	int3   
   1400054e4:	int3   
   1400054e5:	int3   
   1400054e6:	jmp    QWORD PTR [rip+0xd44]        # 0x140006230
   1400054ec:	int3   
   1400054ed:	int3   
   1400054ee:	int3   
   1400054ef:	int3   
   1400054f0:	int3   
   1400054f1:	int3   
   1400054f2:	jmp    QWORD PTR [rip+0xd70]        # 0x140006268
   1400054f8:	int3   
   1400054f9:	int3   
   1400054fa:	int3   
   1400054fb:	int3   
   1400054fc:	int3   
   1400054fd:	int3   
   1400054fe:	jmp    QWORD PTR [rip+0xd54]        # 0x140006258
   140005504:	int3   
   140005505:	int3   
   140005506:	int3   
   140005507:	int3   
   140005508:	int3   
   140005509:	int3   
   14000550a:	jmp    QWORD PTR [rip+0xd40]        # 0x140006250
   140005510:	int3   
   140005511:	int3   
   140005512:	int3   
   140005513:	int3   
   140005514:	int3   
   140005515:	int3   
   140005516:	int3   
   140005517:	int3   
   140005518:	sub    rsp,0x28
   14000551c:	mov    r8,QWORD PTR [r9+0x38]
   140005520:	mov    rcx,rdx
   140005523:	mov    rdx,r9
   140005526:	call   0x14000553c
   14000552b:	mov    eax,0x1
   140005530:	add    rsp,0x28
   140005534:	ret    
   140005535:	int3   
   140005536:	int3   
   140005537:	int3   
   140005538:	int3   
   140005539:	int3   
   14000553a:	int3   
   14000553b:	int3   
   14000553c:	rex push rbx
   14000553e:	sub    rsp,0x20
   140005542:	mov    r11d,DWORD PTR [r8]
   140005545:	mov    rbx,rdx
   140005548:	and    r11d,0xfffffff8
   14000554c:	mov    r9,rcx
   14000554f:	test   BYTE PTR [r8],0x4
   140005553:	mov    r10,rcx
   140005556:	je     0x14000556b
   140005558:	mov    eax,DWORD PTR [r8+0x8]
   14000555c:	movsxd r10,DWORD PTR [r8+0x4]
   140005560:	neg    eax
   140005562:	add    r10,rcx
   140005565:	movsxd rcx,eax
   140005568:	and    r10,rcx
   14000556b:	movsxd rax,r11d
   14000556e:	mov    rdx,QWORD PTR [rax+r10*1]
   140005572:	mov    rax,QWORD PTR [rbx+0x10]
   140005576:	mov    ecx,DWORD PTR [rax+0x8]
   140005579:	add    rcx,QWORD PTR [rbx+0x8]
   14000557d:	test   BYTE PTR [rcx+0x3],0xf
   140005581:	je     0x14000558f
   140005583:	movzx  eax,BYTE PTR [rcx+0x3]
   140005587:	and    eax,0xfffffff0
   14000558a:	cdqe   
   14000558c:	add    r9,rax
   14000558f:	xor    r9,rdx
   140005592:	mov    rcx,r9
   140005595:	add    rsp,0x20
   140005599:	pop    rbx
   14000559a:	jmp    0x140004e10
   14000559f:	int3   
   1400055a0:	int3   
   1400055a1:	int3   
   1400055a2:	int3   
   1400055a3:	int3   
   1400055a4:	int3   
   1400055a5:	int3   
   1400055a6:	jmp    QWORD PTR [rip+0xb24]        # 0x1400060d0
   1400055ac:	int3   
   1400055ad:	int3   
   1400055ae:	int3   
   1400055af:	int3   
   1400055b0:	int3   
   1400055b1:	int3   
   1400055b2:	jmp    QWORD PTR [rip+0xb10]        # 0x1400060c8
   1400055b8:	int3   
   1400055b9:	int3   
   1400055ba:	int3   
   1400055bb:	int3   
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	lea    rax,[rip+0x5a89]        # 0x14000b050
   1400055c7:	jmp    0x1400055e0
   1400055cc:	int3   
   1400055cd:	int3   
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	int3   
   1400055d1:	int3   
   1400055d2:	int3   
   1400055d3:	int3   
   1400055d4:	int3   
   1400055d5:	int3   
   1400055d6:	int3   
   1400055d7:	int3   
   1400055d8:	int3   
   1400055d9:	int3   
   1400055da:	int3   
   1400055db:	int3   
   1400055dc:	int3   
   1400055dd:	int3   
   1400055de:	int3   
   1400055df:	int3   
   1400055e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400055e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400055ea:	mov    QWORD PTR [rsp+0x18],r8
   1400055ef:	mov    QWORD PTR [rsp+0x20],r9
   1400055f4:	sub    rsp,0x68
   1400055f8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400055fe:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140005604:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000560a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140005610:	mov    rdx,rax
   140005613:	lea    rcx,[rip+0x1f56]        # 0x140007570
   14000561a:	call   0x140004430
   14000561f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140005625:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000562b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140005631:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140005637:	mov    rcx,QWORD PTR [rsp+0x70]
   14000563c:	mov    rdx,QWORD PTR [rsp+0x78]
   140005641:	mov    r8,QWORD PTR [rsp+0x80]
   140005649:	mov    r9,QWORD PTR [rsp+0x88]
   140005651:	add    rsp,0x68
   140005655:	jmp    0x140005657
   140005657:	jmp    rax
   140005659:	int3   
   14000565a:	int3   
   14000565b:	int3   
   14000565c:	int3   
   14000565d:	int3   
   14000565e:	int3   
   14000565f:	int3   
   140005660:	lea    rax,[rip+0x59e1]        # 0x14000b048
   140005667:	jmp    0x1400055e0
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	int3   
   140005671:	int3   
   140005672:	int3   
   140005673:	int3   
   140005674:	int3   
   140005675:	int3   
   140005676:	int3   
   140005677:	int3   
   140005678:	int3   
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	lea    rax,[rip+0x59b9]        # 0x14000b040
   140005687:	jmp    0x1400055e0
   14000568c:	int3   
   14000568d:	int3   
   14000568e:	int3   
   14000568f:	int3   
   140005690:	int3   
   140005691:	int3   
   140005692:	int3   
   140005693:	int3   
   140005694:	int3   
   140005695:	int3   
   140005696:	int3   
   140005697:	int3   
   140005698:	int3   
   140005699:	int3   
   14000569a:	int3   
   14000569b:	int3   
   14000569c:	int3   
   14000569d:	int3   
   14000569e:	int3   
   14000569f:	int3   
   1400056a0:	lea    rax,[rip+0x5991]        # 0x14000b038
   1400056a7:	jmp    0x1400055e0
   1400056ac:	int3   
   1400056ad:	int3   
   1400056ae:	int3   
   1400056af:	int3   
   1400056b0:	int3   
   1400056b1:	int3   
   1400056b2:	int3   
   1400056b3:	int3   
   1400056b4:	int3   
   1400056b5:	int3   
   1400056b6:	int3   
   1400056b7:	int3   
   1400056b8:	int3   
   1400056b9:	int3   
   1400056ba:	int3   
   1400056bb:	int3   
   1400056bc:	int3   
   1400056bd:	int3   
   1400056be:	int3   
   1400056bf:	int3   
   1400056c0:	lea    rax,[rip+0x5969]        # 0x14000b030
   1400056c7:	jmp    0x1400055e0
   1400056cc:	int3   
   1400056cd:	int3   
   1400056ce:	int3   
   1400056cf:	int3   
   1400056d0:	int3   
   1400056d1:	int3   
   1400056d2:	int3   
   1400056d3:	int3   
   1400056d4:	int3   
   1400056d5:	int3   
   1400056d6:	int3   
   1400056d7:	int3   
   1400056d8:	int3   
   1400056d9:	int3   
   1400056da:	int3   
   1400056db:	int3   
   1400056dc:	int3   
   1400056dd:	int3   
   1400056de:	int3   
   1400056df:	int3   
   1400056e0:	lea    rax,[rip+0x5971]        # 0x14000b058
   1400056e7:	jmp    0x1400055e0
   1400056ec:	int3   
   1400056ed:	int3   
   1400056ee:	int3   
   1400056ef:	int3   
   1400056f0:	int3   
   1400056f1:	int3   
   1400056f2:	int3   
   1400056f3:	int3   
   1400056f4:	int3   
   1400056f5:	int3   
   1400056f6:	int3   
   1400056f7:	int3   
   1400056f8:	int3   
   1400056f9:	int3   
   1400056fa:	int3   
   1400056fb:	int3   
   1400056fc:	int3   
   1400056fd:	int3   
   1400056fe:	int3   
   1400056ff:	int3   
   140005700:	lea    rax,[rip+0x5919]        # 0x14000b020
   140005707:	jmp    0x140004900
   14000570c:	int3   
   14000570d:	int3   
   14000570e:	int3   
   14000570f:	int3   
   140005710:	int3   
   140005711:	int3   
   140005712:	int3   
   140005713:	int3   
   140005714:	int3   
   140005715:	int3   
   140005716:	int3   
   140005717:	int3   
   140005718:	int3   
   140005719:	int3   
   14000571a:	int3   
   14000571b:	int3   
   14000571c:	int3   
   14000571d:	int3   
   14000571e:	int3   
   14000571f:	int3   
   140005720:	jmp    QWORD PTR [rip+0x96a]        # 0x140006090
   140005726:	int3   
   140005727:	int3   
   140005728:	int3   
   140005729:	int3   
   14000572a:	int3   
   14000572b:	int3   
   14000572c:	sub    rsp,0x38
   140005730:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005739:	call   0x1400049f0
   14000573e:	nop
   14000573f:	jmp    0x140005746
   140005741:	mov    rax,QWORD PTR [rsp+0x50]
   140005746:	add    rsp,0x38
   14000574a:	ret    
   14000574b:	int3   
   14000574c:	int3   
   14000574d:	int3   
   14000574e:	int3   
   14000574f:	int3   
   140005750:	int3   
   140005751:	int3   
   140005752:	jmp    QWORD PTR [rip+0xb08]        # 0x140006260
   140005758:	int3   
   140005759:	int3   
   14000575a:	int3   
   14000575b:	int3   
   14000575c:	int3   
   14000575d:	int3   
   14000575e:	int3   
   14000575f:	int3   
   140005760:	lea    rax,[rip+0x5919]        # 0x14000b080
   140005767:	jmp    0x140005780
   14000576c:	int3   
   14000576d:	int3   
   14000576e:	int3   
   14000576f:	int3   
   140005770:	int3   
   140005771:	int3   
   140005772:	int3   
   140005773:	int3   
   140005774:	int3   
   140005775:	int3   
   140005776:	int3   
   140005777:	int3   
   140005778:	int3   
   140005779:	int3   
   14000577a:	int3   
   14000577b:	int3   
   14000577c:	int3   
   14000577d:	int3   
   14000577e:	int3   
   14000577f:	int3   
   140005780:	mov    QWORD PTR [rsp+0x8],rcx
   140005785:	mov    QWORD PTR [rsp+0x10],rdx
   14000578a:	mov    QWORD PTR [rsp+0x18],r8
   14000578f:	mov    QWORD PTR [rsp+0x20],r9
   140005794:	sub    rsp,0x68
   140005798:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000579e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400057a4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1400057aa:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400057b0:	mov    rdx,rax
   1400057b3:	lea    rcx,[rip+0x1dd6]        # 0x140007590
   1400057ba:	call   0x140004430
   1400057bf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400057c5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400057cb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400057d1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400057d7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400057dc:	mov    rdx,QWORD PTR [rsp+0x78]
   1400057e1:	mov    r8,QWORD PTR [rsp+0x80]
   1400057e9:	mov    r9,QWORD PTR [rsp+0x88]
   1400057f1:	add    rsp,0x68
   1400057f5:	jmp    0x1400057f7
   1400057f7:	jmp    rax
   1400057f9:	int3   
   1400057fa:	int3   
   1400057fb:	int3   
   1400057fc:	int3   
   1400057fd:	int3   
   1400057fe:	int3   
   1400057ff:	int3   
   140005800:	lea    rax,[rip+0x5871]        # 0x14000b078
   140005807:	jmp    0x140005780
   14000580c:	int3   
   14000580d:	int3   
   14000580e:	int3   
   14000580f:	int3   
   140005810:	int3   
   140005811:	int3   
   140005812:	int3   
   140005813:	int3   
   140005814:	int3   
   140005815:	int3   
   140005816:	int3   
   140005817:	int3   
   140005818:	int3   
   140005819:	int3   
   14000581a:	int3   
   14000581b:	int3   
   14000581c:	int3   
   14000581d:	int3   
   14000581e:	int3   
   14000581f:	int3   
   140005820:	lea    rax,[rip+0x5849]        # 0x14000b070
   140005827:	jmp    0x140005780
   14000582c:	int3   
   14000582d:	int3   
   14000582e:	int3   
   14000582f:	int3   
   140005830:	int3   
   140005831:	int3   
   140005832:	int3   
   140005833:	int3   
   140005834:	int3   
   140005835:	int3   
   140005836:	int3   
   140005837:	int3   
   140005838:	int3   
   140005839:	int3   
   14000583a:	int3   
   14000583b:	int3   
   14000583c:	int3   
   14000583d:	int3   
   14000583e:	int3   
   14000583f:	int3   
   140005840:	lea    rax,[rip+0x5821]        # 0x14000b068
   140005847:	jmp    0x140005780
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	int3   
   140005851:	int3   
   140005852:	int3   
   140005853:	int3   
   140005854:	int3   
   140005855:	int3   
   140005856:	int3   
   140005857:	int3   
   140005858:	int3   
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	int3   
   14000585f:	int3   
   140005860:	lea    rax,[rip+0x5821]        # 0x14000b088
   140005867:	jmp    0x140005780
   14000586c:	int3   
   14000586d:	int3   
   14000586e:	int3   
   14000586f:	int3   
   140005870:	int3   
   140005871:	int3   
   140005872:	int3   
   140005873:	int3   
   140005874:	int3   
   140005875:	int3   
   140005876:	int3   
   140005877:	int3   
   140005878:	int3   
   140005879:	int3   
   14000587a:	int3   
   14000587b:	int3   
   14000587c:	int3   
   14000587d:	int3   
   14000587e:	int3   
   14000587f:	int3   
   140005880:	lea    rax,[rip+0x5791]        # 0x14000b018
   140005887:	jmp    0x140004900
   14000588c:	int3   
   14000588d:	int3   
   14000588e:	int3   
   14000588f:	int3   
   140005890:	int3   
   140005891:	int3   
   140005892:	jmp    QWORD PTR [rip+0x9f0]        # 0x140006288
   140005898:	int3   
   140005899:	int3   
   14000589a:	int3   
   14000589b:	int3   
   14000589c:	int3   
   14000589d:	int3   
   14000589e:	int3   
   14000589f:	int3   
   1400058a0:	int3   
   1400058a1:	int3   
   1400058a2:	int3   
   1400058a3:	int3   
   1400058a4:	int3   
   1400058a5:	int3   
   1400058a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400058b0:	jmp    rax
   1400058b2:	int3   
   1400058b3:	int3   
   1400058b4:	int3   
   1400058b5:	int3   
   1400058b6:	int3   
   1400058b7:	int3   
   1400058b8:	int3   
   1400058b9:	int3   
   1400058ba:	int3   
   1400058bb:	int3   
   1400058bc:	int3   
   1400058bd:	int3   
   1400058be:	int3   
   1400058bf:	int3   
   1400058c0:	int3   
   1400058c1:	int3   
   1400058c2:	int3   
   1400058c3:	int3   
   1400058c4:	int3   
   1400058c5:	int3   
   1400058c6:	rex push rbp
   1400058c8:	sub    rsp,0x20
   1400058cc:	mov    rbp,rdx
   1400058cf:	mov    rax,QWORD PTR [rcx]
   1400058d2:	xor    ecx,ecx
   1400058d4:	cmp    DWORD PTR [rax],0xc0000017
   1400058da:	sete   cl
   1400058dd:	mov    eax,ecx
   1400058df:	add    rsp,0x20
   1400058e3:	pop    rbp
   1400058e4:	ret    
   1400058e5:	int3   
   1400058e6:	int3   
   1400058e7:	int3   
   1400058e8:	int3   
   1400058e9:	int3   
   1400058ea:	int3   
   1400058eb:	int3   
   1400058ec:	rex push rbp
   1400058ee:	sub    rsp,0x20
   1400058f2:	mov    rbp,rdx
   1400058f5:	mov    rax,QWORD PTR [rcx]
   1400058f8:	mov    rdx,rcx
   1400058fb:	mov    ecx,DWORD PTR [rax]
   1400058fd:	call   0x14000525e
   140005902:	nop
   140005903:	add    rsp,0x20
   140005907:	pop    rbp
   140005908:	ret    
   140005909:	int3   
   14000590a:	int3   
   14000590b:	int3   
   14000590c:	int3   
   14000590d:	int3   
   14000590e:	int3   
   14000590f:	int3   
   140005910:	rex push rbp
   140005912:	sub    rsp,0x20
   140005916:	mov    rbp,rdx
   140005919:	mov    ecx,0x8
   14000591e:	call   0x1400054fe
   140005923:	nop
   140005924:	add    rsp,0x20
   140005928:	pop    rbp
   140005929:	ret    
   14000592a:	int3   
   14000592b:	int3   
   14000592c:	int3   
   14000592d:	int3   
   14000592e:	int3   
   14000592f:	int3   
   140005930:	int3   
   140005931:	int3   
   140005932:	int3   
   140005933:	int3   
   140005934:	int3   
   140005935:	int3   
   140005936:	int3   
   140005937:	int3   
   140005938:	int3   
   140005939:	int3   
   14000593a:	int3   
   14000593b:	int3   
   14000593c:	int3   
   14000593d:	int3   
   14000593e:	int3   
   14000593f:	int3   
   140005940:	rex push rbp
   140005942:	sub    rsp,0x20
   140005946:	mov    rbp,rdx
   140005949:	mov    rax,QWORD PTR [rcx]
   14000594c:	xor    ecx,ecx
   14000594e:	cmp    DWORD PTR [rax],0xc0000005
   140005954:	sete   cl
   140005957:	mov    eax,ecx
   140005959:	add    rsp,0x20
   14000595d:	pop    rbp
   14000595e:	ret    
   14000595f:	int3   
   140005960:	int3   
   140005961:	int3   
   140005962:	int3   
   140005963:	int3   
   140005964:	int3   
   140005965:	int3   
   140005966:	mov    QWORD PTR [rsp+0x10],rdx
   14000596b:	push   rbp
   14000596c:	sub    rsp,0x20
   140005970:	mov    rbp,rdx
   140005973:	and    QWORD PTR [rbp+0x50],0x0
   140005978:	lea    rax,[rip+0xfffffffffffffdc2]        # 0x140005741
   14000597f:	add    rsp,0x20
   140005983:	pop    rbp
   140005984:	ret    
   140005985:	int3   
   140005986:	int3   
   140005987:	int3   
   140005988:	int3   
   140005989:	int3   
   14000598a:	int3   
   14000598b:	int3   
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	mov    QWORD PTR [rsp+0x8],rbx
   140005995:	push   rdi
   140005996:	sub    rsp,0x20
   14000599a:	mov    rdi,QWORD PTR [rip+0x3e2f]        # 0x1400097d0
   1400059a1:	mov    rax,QWORD PTR [rip+0x3e30]        # 0x1400097d8
   1400059a8:	jmp    0x1400059ce
   1400059aa:	mov    rbx,QWORD PTR [rdi]
   1400059ad:	test   rbx,rbx
   1400059b0:	je     0x1400059ca
   1400059b2:	mov    rbx,QWORD PTR [rbx+0x40]
   1400059b6:	mov    rcx,rbx
   1400059b9:	call   QWORD PTR [rip+0x8f9]        # 0x1400062b8
   1400059bf:	xor    ecx,ecx
   1400059c1:	call   rbx
   1400059c3:	mov    rax,QWORD PTR [rip+0x3e0e]        # 0x1400097d8
   1400059ca:	add    rdi,0x8
   1400059ce:	cmp    rdi,rax
   1400059d1:	jb     0x1400059aa
   1400059d3:	lea    rcx,[rip+0x3cc6]        # 0x1400096a0
   1400059da:	call   0x14000155c
   1400059df:	call   0x140001364
   1400059e4:	cmp    BYTE PTR [rip+0x3d17],0x0        # 0x140009702
   1400059eb:	je     0x1400059f3
   1400059ed:	call   QWORD PTR [rip+0x5655]        # 0x14000b048
   1400059f3:	lea    rcx,[rip+0x3ca6]        # 0x1400096a0
   1400059fa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400059ff:	add    rsp,0x20
   140005a03:	pop    rdi
   140005a04:	jmp    0x14000155c
   140005a09:	int3   
   140005a0a:	int3   
   140005a0b:	int3   
   140005a0c:	int3   
   140005a0d:	int3   
   140005a0e:	int3   
   140005a0f:	int3   
   140005a10:	sub    rsp,0x28
   140005a14:	lea    rcx,[rip+0x3d1d]        # 0x140009738
   140005a1b:	call   QWORD PTR [rip+0x63f]        # 0x140006060
   140005a21:	mov    rcx,QWORD PTR [rip+0x3d38]        # 0x140009760
   140005a28:	test   rcx,rcx
   140005a2b:	je     0x140005a3b
   140005a2d:	call   QWORD PTR [rip+0x7a5]        # 0x1400061d8
   140005a33:	and    QWORD PTR [rip+0x3d25],0x0        # 0x140009760
   140005a3b:	and    DWORD PTR [rip+0x3d26],0x0        # 0x140009768
   140005a42:	and    DWORD PTR [rip+0x3d23],0x0        # 0x14000976c
   140005a49:	add    rsp,0x28
   140005a4d:	ret    
   140005a4e:	int3   
   140005a4f:	int3   
   140005a50:	int3   
   140005a51:	int3   
   140005a52:	int3   
   140005a53:	int3   
   140005a54:	int3   
   140005a55:	int3   
   140005a56:	int3   
   140005a57:	int3   
   140005a58:	int3   
   140005a59:	int3   
   140005a5a:	int3   
   140005a5b:	int3   
   140005a5c:	int3   
   140005a5d:	int3   
   140005a5e:	int3   
   140005a5f:	int3   
   140005a60:	mov    QWORD PTR [rsp+0x8],rbx
   140005a65:	mov    QWORD PTR [rsp+0x10],rsi
   140005a6a:	push   rdi
   140005a6b:	sub    rsp,0x20
   140005a6f:	cmp    DWORD PTR [rip+0x3cfa],0x48        # 0x140009770
   140005a76:	mov    rsi,QWORD PTR [rip+0x3c9b]        # 0x140009718
   140005a7d:	jne    0x140005afe
   140005a7f:	mov    eax,DWORD PTR [rip+0x3d2b]        # 0x1400097b0
   140005a85:	xor    ebx,ebx
   140005a87:	test   eax,eax
   140005a89:	jle    0x140005ac2
   140005a8b:	xor    edi,edi
   140005a8d:	test   rdi,rdi
   140005a90:	js     0x140005b36
   140005a96:	cmp    ebx,eax
   140005a98:	jge    0x140005b36
   140005a9e:	mov    rax,QWORD PTR [rip+0x3d03]        # 0x1400097a8
   140005aa5:	mov    rdx,rsi
   140005aa8:	movzx  ecx,WORD PTR [rdi+rax*1]
   140005aac:	call   QWORD PTR [rip+0x6ce]        # 0x140006180
   140005ab2:	mov    eax,DWORD PTR [rip+0x3cf8]        # 0x1400097b0
   140005ab8:	inc    ebx
   140005aba:	add    rdi,0x2
   140005abe:	cmp    ebx,eax
   140005ac0:	jl     0x140005a8d
   140005ac2:	mov    rcx,QWORD PTR [rip+0x3cdf]        # 0x1400097a8
   140005ac9:	test   rcx,rcx
   140005acc:	je     0x140005adc
   140005ace:	call   QWORD PTR [rip+0x704]        # 0x1400061d8
   140005ad4:	and    QWORD PTR [rip+0x3ccc],0x0        # 0x1400097a8
   140005adc:	and    DWORD PTR [rip+0x3ccd],0x0        # 0x1400097b0
   140005ae3:	lea    rcx,[rip+0x3c8e]        # 0x140009778
   140005aea:	and    DWORD PTR [rip+0x3cc3],0x0        # 0x1400097b4
   140005af1:	call   QWORD PTR [rip+0x569]        # 0x140006060
   140005af7:	and    DWORD PTR [rip+0x3c72],0x0        # 0x140009770
   140005afe:	mov    rcx,QWORD PTR [rip+0x3ca3]        # 0x1400097a8
   140005b05:	test   rcx,rcx
   140005b08:	je     0x140005b18
   140005b0a:	call   QWORD PTR [rip+0x6c8]        # 0x1400061d8
   140005b10:	and    QWORD PTR [rip+0x3c90],0x0        # 0x1400097a8
   140005b18:	and    DWORD PTR [rip+0x3c91],0x0        # 0x1400097b0
   140005b1f:	and    DWORD PTR [rip+0x3c8e],0x0        # 0x1400097b4
   140005b26:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b2b:	mov    rsi,QWORD PTR [rsp+0x38]
   140005b30:	add    rsp,0x20
   140005b34:	pop    rdi
   140005b35:	ret    
   140005b36:	mov    ecx,0xc000008c
   140005b3b:	call   0x1400012d8
   140005b40:	int3   
   140005b41:	int3   
   140005b42:	int3   
   140005b43:	int3   
   140005b44:	int3   
   140005b45:	int3   
   140005b46:	int3   
   140005b47:	int3   
   140005b48:	int3   
   140005b49:	int3   
   140005b4a:	int3   
   140005b4b:	int3   
   140005b4c:	int3   
   140005b4d:	int3   
   140005b4e:	int3   
   140005b4f:	int3   
   140005b50:	jmp    0x140001364

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	js     0x14000607d
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	mov    bh,BYTE PTR [rbx+0x0]
   14000600b:	add    BYTE PTR [rax],al
   14000600d:	add    BYTE PTR [rax],al
   14000600f:	add    BYTE PTR [rbx+rdi*2+0x0],bl
   140006016:	add    BYTE PTR [rax],al
   140006018:	mov    dl,0x7b
   14000601a:	add    BYTE PTR [rax],al
   14000601c:	add    BYTE PTR [rax],al
   14000601e:	add    BYTE PTR [rax],al
   140006020:	mov    esi,0x7b
   140006025:	add    BYTE PTR [rax],al
   140006027:	add    dl,dl
   140006029:	jnp    0x14000602b
   14000602b:	add    BYTE PTR [rax],al
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    dh,ch
   140006031:	jnp    0x140006033
   140006033:	add    BYTE PTR [rax],al
   140006035:	add    BYTE PTR [rax],al
   140006037:	add    dh,dh
   140006039:	jnp    0x14000603b
   14000603b:	add    BYTE PTR [rax],al
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    BYTE PTR [rsp+rdi*2],cl
   140006042:	add    BYTE PTR [rax],al
   140006044:	add    BYTE PTR [rax],al
   140006046:	add    BYTE PTR [rax],al
   140006048:	(bad)  
   140006049:	jl     0x14000604b
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rsi],ch
   140006051:	jl     0x140006053
   140006053:	add    BYTE PTR [rax],al
   140006055:	add    BYTE PTR [rax],al
   140006057:	add    BYTE PTR [rax+0x7c],al
   14000605a:	add    BYTE PTR [rax],al
   14000605c:	add    BYTE PTR [rax],al
   14000605e:	add    BYTE PTR [rax],al
   140006060:	push   rax
   140006061:	jl     0x140006063
   140006063:	add    BYTE PTR [rax],al
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    BYTE PTR [rax+0x7c],ch
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	add    BYTE PTR [rax],al
   14000606e:	add    BYTE PTR [rax],al
   140006070:	jle    0x1400060ee
   140006072:	add    BYTE PTR [rax],al
   140006074:	add    BYTE PTR [rax],al
   140006076:	add    BYTE PTR [rax],al
   140006078:	mov    WORD PTR [rax+rax*1+0x0],?
   14000607c:	add    BYTE PTR [rax],al
   14000607e:	add    BYTE PTR [rax],al
   140006080:	xor    BYTE PTR [rax+0x0],al
   140006086:	add    BYTE PTR [rax],al
   140006088:	sbb    al,BYTE PTR [rax+0x0]
   14000608e:	add    BYTE PTR [rax],al
   140006090:	(bad)  
   140006091:	jg     0x140006093
   140006093:	add    BYTE PTR [rax],al
   140006095:	add    BYTE PTR [rax],al
   140006097:	add    BYTE PTR [rdx+0x7f],dh
   14000609d:	add    BYTE PTR [rax],al
   14000609f:	add    BYTE PTR [rdi+rdi*2+0x0],ah
   1400060a6:	add    BYTE PTR [rax],al
   1400060a8:	jp     0x140006129
   1400060aa:	add    BYTE PTR [rax],al
   1400060ac:	add    BYTE PTR [rax],al
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	(bad)  
   1400060b1:	jg     0x1400060b3
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    BYTE PTR [rdx+0x7f],cl
   1400060ba:	add    BYTE PTR [rax],al
   1400060bc:	add    BYTE PTR [rax],al
   1400060be:	add    BYTE PTR [rax],al
   1400060c0:	xor    BYTE PTR [rdi+0x0],bh
   1400060c3:	add    BYTE PTR [rax],al
   1400060c5:	add    BYTE PTR [rax],al
   1400060c7:	add    BYTE PTR [rdi+rdi*2],bl
   1400060ca:	add    BYTE PTR [rax],al
   1400060cc:	add    BYTE PTR [rax],al
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	or     BYTE PTR [rdi+0x0],bh
   1400060d3:	add    BYTE PTR [rax],al
   1400060d5:	add    BYTE PTR [rax],al
   1400060d7:	add    dl,ch
   1400060d9:	jle    0x1400060db
   1400060db:	add    BYTE PTR [rax],al
   1400060dd:	add    BYTE PTR [rax],al
   1400060df:	add    dh,cl
   1400060e1:	jle    0x1400060e3
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    BYTE PTR [rsi+rdi*2+0x0],bh
   1400060ee:	add    BYTE PTR [rax],al
   1400060f0:	push   rsi
   1400060f1:	add    BYTE PTR [rax],0x0
   1400060f4:	add    BYTE PTR [rax],al
   1400060f6:	add    BYTE PTR [rax],al
   1400060f8:	outs   dx,BYTE PTR ds:[rsi]
   1400060f9:	add    BYTE PTR [rax],0x0
   1400060fc:	add    BYTE PTR [rax],al
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	nop
   140006101:	add    BYTE PTR [rax],0x0
   140006104:	add    BYTE PTR [rax],al
   140006106:	add    BYTE PTR [rax],al
   140006108:	rex.X add BYTE PTR [rax],0x0
	...
   140006118:	movabs eax,ds:0x680000000000000
   140006121:	add    BYTE PTR [rax],al
   140006123:	add    BYTE PTR [rax],al
   140006125:	add    BYTE PTR [rax],al
   140006127:	and    BYTE PTR [rbx+0x0],0x0
   14000612e:	add    BYTE PTR [rax+0x2],al
   140006134:	add    BYTE PTR [rax],al
   140006136:	add    BYTE PTR [rax+0x7],al
   14000613c:	add    BYTE PTR [rax],al
   14000613e:	add    BYTE PTR [rax+0xba],al
   140006144:	add    BYTE PTR [rax],al
   140006146:	add    BYTE PTR [rax+0x0],al
   14000614c:	add    BYTE PTR [rax],al
   14000614e:	add    BYTE PTR [rax],al
   140006150:	(bad)  
   140006151:	add    BYTE PTR [rax],0x0
   140006154:	add    BYTE PTR [rax],al
   140006156:	add    BYTE PTR [rax],al
   140006158:	fild   DWORD PTR [rax]
   14000615a:	add    BYTE PTR [rax],al
   14000615c:	add    BYTE PTR [rax],al
   14000615e:	add    BYTE PTR [rax+0x10],al
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax+0x0],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	loop   0x1400061ee
   140006172:	add    BYTE PTR [rax],al
   140006174:	add    BYTE PTR [rax],al
   140006176:	add    BYTE PTR [rax],al
   140006178:	(bad)  
   140006179:	jl     0x14000617b
   14000617b:	add    BYTE PTR [rax],al
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    ah,bl
   140006181:	jg     0x140006183
   140006183:	add    BYTE PTR [rax],al
   140006185:	add    BYTE PTR [rax],al
   140006187:	add    BYTE PTR [rdx+0x7c],ch
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    dh,dh
   140006191:	jl     0x140006193
   140006193:	add    BYTE PTR [rax],al
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    BYTE PTR [rdx],al
   140006199:	jge    0x14000619b
   14000619b:	add    BYTE PTR [rax],al
   14000619d:	add    BYTE PTR [rax],al
   14000619f:	add    BYTE PTR [rsi+0x7c],bh
	...
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    BYTE PTR [rdx+0x7d],ch
   1400061b2:	add    BYTE PTR [rax],al
   1400061b4:	add    BYTE PTR [rax],al
   1400061b6:	add    BYTE PTR [rax],al
   1400061b8:	push   rsp
   1400061b9:	jge    0x1400061bb
   1400061bb:	add    BYTE PTR [rax],al
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    BYTE PTR [rax+0x7d],cl
   1400061c2:	add    BYTE PTR [rax],al
   1400061c4:	add    BYTE PTR [rax],al
   1400061c6:	add    BYTE PTR [rax],al
   1400061c8:	cmp    al,0x7d
   1400061ca:	add    BYTE PTR [rax],al
   1400061cc:	add    BYTE PTR [rax],al
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	xor    BYTE PTR [rbp+0x0],bh
   1400061d3:	add    BYTE PTR [rax],al
   1400061d5:	add    BYTE PTR [rax],al
   1400061d7:	add    BYTE PTR [rax],ch
   1400061d9:	jge    0x1400061db
   1400061db:	add    BYTE PTR [rax],al
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    BYTE PTR [rdi*2+0x0],bl
   1400061e6:	add    BYTE PTR [rax],al
   1400061e8:	je     0x140006267
   1400061ea:	add    BYTE PTR [rax],al
   1400061ec:	add    BYTE PTR [rax],al
   1400061ee:	add    BYTE PTR [rax],al
   1400061f0:	(bad)  
   1400061f1:	jge    0x1400061f3
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    BYTE PTR [rax+0x7d],dl
   1400061fd:	add    BYTE PTR [rax],al
   1400061ff:	add    BYTE PTR [rdx+0x7d],ah
   140006205:	add    BYTE PTR [rax],al
   140006207:	add    BYTE PTR [rbp+rdi*2+0x0],dh
   14000620e:	add    BYTE PTR [rax],al
   140006210:	mov    esp,0x7d
   140006215:	add    BYTE PTR [rax],al
   140006217:	add    ah,al
   140006219:	jge    0x14000621b
   14000621b:	add    BYTE PTR [rax],al
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    dh,cl
   140006221:	jge    0x140006223
   140006223:	add    BYTE PTR [rax],al
   140006225:	add    BYTE PTR [rax],al
   140006227:	add    dl,ah
   140006229:	jge    0x14000622b
   14000622b:	add    BYTE PTR [rax],al
   14000622d:	add    BYTE PTR [rax],al
   14000622f:	add    dh,ch
   140006231:	jge    0x140006233
   140006233:	add    BYTE PTR [rax],al
   140006235:	add    BYTE PTR [rax],al
   140006237:	add    BYTE PTR [rsi],al
   140006239:	jle    0x14000623b
   14000623b:	add    BYTE PTR [rax],al
   14000623d:	add    BYTE PTR [rax],al
   14000623f:	add    BYTE PTR [rsi+rdi*2+0x0],bl
   140006243:	add    BYTE PTR [rax],al
   140006245:	add    BYTE PTR [rax],al
   140006247:	add    BYTE PTR [rax],dl
   140006249:	jle    0x14000624b
   14000624b:	add    BYTE PTR [rax],al
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    BYTE PTR [rsi+rdi*2+0x0],al
   140006253:	add    BYTE PTR [rax],al
   140006255:	add    BYTE PTR [rax],al
   140006257:	add    BYTE PTR [rdx],bh
   140006259:	jle    0x14000625b
   14000625b:	add    BYTE PTR [rax],al
   14000625d:	add    BYTE PTR [rax],al
   14000625f:	add    al,dh
   140006261:	jg     0x140006263
   140006263:	add    BYTE PTR [rax],al
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    BYTE PTR [rdx],dh
   140006269:	jle    0x14000626b
   14000626b:	add    BYTE PTR [rax],al
   14000626d:	add    BYTE PTR [rax],al
   14000626f:	add    BYTE PTR [rsi+0x7d],bl
   140006272:	add    BYTE PTR [rax],al
   140006274:	add    BYTE PTR [rax],al
   140006276:	add    BYTE PTR [rax],al
   140006278:	sbb    bh,BYTE PTR [rsi+0x0]
   14000627b:	add    BYTE PTR [rax],al
   14000627d:	add    BYTE PTR [rax],al
   14000627f:	add    BYTE PTR [rdx+0x7e],dl
   140006282:	add    BYTE PTR [rax],al
   140006284:	add    BYTE PTR [rax],al
   140006286:	add    BYTE PTR [rax],al
   140006288:	test   al,0x80
	...
   140006296:	add    BYTE PTR [rax],al
   140006298:	test   BYTE PTR [rsi+0x0],bh
   14000629b:	add    BYTE PTR [rax],al
   14000629d:	add    BYTE PTR [rax],al
   14000629f:	add    BYTE PTR [rax+0x7e],dh
   1400062a2:	add    BYTE PTR [rax],al
   1400062a4:	add    BYTE PTR [rax],al
   1400062a6:	add    BYTE PTR [rax],al
   1400062a8:	sahf   
   1400062a9:	jle    0x1400062ab
	...
   1400062b7:	add    BYTE PTR [rax],al
   1400062b9:	and    eax,DWORD PTR [rax]
   1400062bb:	rex add DWORD PTR [rax],eax
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	mov    al,0x58
   1400062c2:	add    BYTE PTR [rax+0x1],al
	...
   1400062cd:	add    BYTE PTR [rax],al
   1400062cf:	add    BYTE PTR [rax],dl
   1400062d1:	rex.WXB add BYTE PTR [r8+0x1],al
   1400062d5:	add    BYTE PTR [rax],al
   1400062d7:	add    BYTE PTR [rax+0x11],al
   1400062da:	add    BYTE PTR [rax+0x1],al
   1400062dd:	add    BYTE PTR [rax],al
   1400062df:	add    al,ah
   1400062e1:	adc    DWORD PTR [rax],eax
   1400062e3:	rex add DWORD PTR [rax],eax
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	push   rax
   1400062e9:	adc    al,BYTE PTR [rax]
   1400062eb:	rex add DWORD PTR [rax],eax
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	add    BYTE PTR [rax],dl
   1400062f2:	add    BYTE PTR [rax+0x1],al
	...
   140006305:	add    BYTE PTR [rax],al
   140006307:	add    BYTE PTR [rax],dh
   140006309:	rex.WX add BYTE PTR [rax+0x1],al
   14000630d:	add    BYTE PTR [rax],al
   14000630f:	add    BYTE PTR [rax+0x52],al
   140006312:	add    BYTE PTR [rax+0x1],al
	...
   140006321:	adc    BYTE PTR [rax],al
   140006323:	add    BYTE PTR [rax+0x11],al
   140006326:	add    BYTE PTR [rax],al
   140006328:	loopne 0x14000633b
   14000632a:	add    BYTE PTR [rax],al
   14000632c:	push   rax
   14000632d:	adc    al,BYTE PTR [rax]
   14000632f:	add    BYTE PTR [rax],ah
   140006331:	(bad)  
   140006332:	add    BYTE PTR [rax],al
   140006334:	rex (bad) 
   140006336:	add    BYTE PTR [rax],al
   140006338:	push   rax
   140006339:	(bad)  
   14000633a:	add    BYTE PTR [rax],al
   14000633c:	mov    al,0x21
   14000633e:	add    BYTE PTR [rax],al
   140006340:	add    BYTE PTR [rbx],ah
   140006342:	add    BYTE PTR [rax],al
   140006344:	adc    BYTE PTR [rbx],ah
   140006346:	add    BYTE PTR [rax],al
   140006348:	movabs al,ds:0x10000023f0000023
   140006351:	and    al,0x0
   140006353:	add    BYTE PTR [rax],dh
   140006355:	and    al,0x0
   140006357:	add    BYTE PTR [rax+0x24],dh
   14000635a:	add    BYTE PTR [rax],al
   14000635c:	(bad)  
   14000635d:	and    eax,0x26700000
   140006362:	add    BYTE PTR [rax],al
   140006364:	jo     0x14000638d
   140006366:	add    BYTE PTR [rax],al
   140006368:	shl    BYTE PTR [rdi],0x0
   14000636b:	add    BYTE PTR [rax+0x2c],al
   14000636e:	add    BYTE PTR [rax],al
   140006370:	movabs al,ds:0xc000002db000002c
   140006379:	sub    eax,0x2e600000
   14000637e:	add    BYTE PTR [rax],al
   140006380:	sub    BYTE PTR [rsi],0x0
   140006383:	add    BYTE PTR [rax+0x3000002e],dl
   140006389:	(bad)  
   14000638a:	add    BYTE PTR [rax],al
   14000638c:	shr    BYTE PTR [rdi],0x0
   14000638f:	add    BYTE PTR [rax],al
   140006391:	xor    BYTE PTR [rax],al
   140006393:	add    BYTE PTR [rax+0x30],al
   140006396:	add    BYTE PTR [rax],al
   140006398:	movabs al,ds:0xa000003120000030
   1400063a1:	xor    DWORD PTR [rax],eax
   1400063a3:	add    BYTE PTR [rax],ah
   1400063a5:	xor    al,BYTE PTR [rax]
   1400063a7:	add    BYTE PTR [rax+0x34],al
   1400063aa:	add    BYTE PTR [rax],al
   1400063ac:	lock xor al,0x0
   1400063af:	add    BYTE PTR [rax],dl
   1400063b1:	xor    eax,0x35700000
   1400063b6:	add    BYTE PTR [rax],al
   1400063b8:	xor    BYTE PTR [rsi],dh
   1400063ba:	add    BYTE PTR [rax],al
   1400063bc:	lock add BYTE PTR ss:[rax],al
   1400063c0:	mov    al,0x37
   1400063c2:	add    BYTE PTR [rax],al
   1400063c4:	jo     0x1400063fe
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	xor    BYTE PTR [rcx],bh
   1400063ca:	add    BYTE PTR [rax],al
   1400063cc:	lock cmp DWORD PTR [rax],eax
   1400063cf:	add    BYTE PTR [rax+0x7000003a],dh
   1400063d5:	cmp    eax,DWORD PTR [rax]
   1400063d7:	add    BYTE PTR [rax],dh
   1400063d9:	cmp    al,0x0
   1400063db:	add    al,dh
   1400063dd:	cmp    al,0x0
   1400063df:	add    BYTE PTR [rax-0xfffffc3],dh
   1400063e5:	add    BYTE PTR ds:[rax],al
   1400063e8:	rex
   1400063e9:	add    BYTE PTR [rax],al
   1400063ec:	adc    BYTE PTR [rcx+0x0],al
   1400063ef:	add    al,dl
   1400063f1:	add    BYTE PTR [r8],al
   1400063f4:	and    BYTE PTR [rbx+0x0],al
   1400063f7:	add    BYTE PTR [rax],dh
   1400063f9:	rex.XB add BYTE PTR [r8],al
   1400063fc:	rex
   1400063fd:	rex.XB add BYTE PTR [r8],al
   140006400:	push   rax
   140006401:	rex.XB add BYTE PTR [r8],al
   140006404:	(bad)  
   140006405:	rex.XB add BYTE PTR [r8],al
   140006408:	jo     0x14000644d
   14000640a:	add    BYTE PTR [rax],al
   14000640c:	add    BYTE PTR [rbx+0x0],0x0
   140006410:	nop
   140006411:	rex.XB add BYTE PTR [r8],al
   140006414:	movabs al,ds:0xc0000043b0000043
   14000641d:	rex.XB add BYTE PTR [r8],al
   140006420:	rol    BYTE PTR [rbx+0x0],1
   140006423:	add    al,ah
   140006425:	rex.XB add BYTE PTR [r8],al
   140006428:	lock rex.XB add BYTE PTR [r8],al
   14000642c:	add    BYTE PTR [rax+rax*1+0x0],al
   140006430:	adc    BYTE PTR [rax+rax*1+0x0],al
   140006434:	and    BYTE PTR [rax+rax*1+0x0],al
   140006438:	xor    BYTE PTR [rax+rax*1+0x0],al
   14000643c:	lock rex.RXB add BYTE PTR [r8],r8b
   140006440:	adc    BYTE PTR [rax+0x0],cl
   140006443:	add    al,ah
   140006445:	rex.W add BYTE PTR [rax],al
   140006448:	add    BYTE PTR [rcx+0x0],cl
   14000644b:	add    BYTE PTR [rax-0x5fffffb7],al
   140006451:	rex.WB add BYTE PTR [r8],al
   140006454:	xor    BYTE PTR [rdx+0x0],cl
   140006457:	add    BYTE PTR [rax],dl
   140006459:	rex.WXB add BYTE PTR [r8],al
   14000645c:	loopne 0x1400064ab
   14000645e:	add    BYTE PTR [rax],al
   140006460:	adc    BYTE PTR [rdi+0x0],cl
   140006463:	add    BYTE PTR [rax+0x4f],ah
   140006466:	add    BYTE PTR [rax],al
   140006468:	add    BYTE PTR [rdx+0x0],dl
   14000646b:	add    BYTE PTR [rax+0x52],al
   14000646e:	add    BYTE PTR [rax],al
   140006470:	rcl    BYTE PTR [rbp+0x0],0x0
   140006474:	loopne 0x1400064cb
   140006476:	add    BYTE PTR [rax],al
   140006478:	(bad)  
   140006479:	push   rsi
   14000647a:	add    BYTE PTR [rax],al
   14000647c:	adc    BYTE PTR [rsi+0x0],0x0
   140006480:	movabs al,ds:0xe0000056c0000056
   140006489:	push   rsi
   14000648a:	add    BYTE PTR [rax],al
   14000648c:	add    BYTE PTR [rdi+0x0],dl
   14000648f:	add    BYTE PTR [rax],ah
   140006491:	push   rdi
   140006492:	add    BYTE PTR [rax],al
   140006494:	(bad)  
   140006495:	push   rdi
   140006496:	add    BYTE PTR [rax],al
   140006498:	adc    BYTE PTR [rdi+0x0],0x0
   14000649c:	add    BYTE PTR [rax+0x0],bl
   14000649f:	add    BYTE PTR [rax],ah
   1400064a1:	pop    rax
   1400064a2:	add    BYTE PTR [rax],al
   1400064a4:	rex pop rax
   1400064a6:	add    BYTE PTR [rax],al
   1400064a8:	(bad)  
   1400064a9:	pop    rax
   1400064aa:	add    BYTE PTR [rax],al
   1400064ac:	sbb    BYTE PTR [rax+0x0],0x0
   1400064b0:	nop
   1400064b1:	pop    rcx
   1400064b2:	add    BYTE PTR [rax],al
   1400064b4:	adc    BYTE PTR [rdx+0x0],bl
   1400064b7:	add    BYTE PTR [rax+0x5a],ah
   1400064ba:	add    BYTE PTR [rax],al
   1400064bc:	push   rax
   1400064bd:	pop    rbx
   1400064be:	add    BYTE PTR [rax],al
   1400064c0:	rex.B
   1400064c1:	rex.R push rsi
   1400064c3:	push   r8
   1400064c5:	xor    rsi,QWORD PTR [r10]
   1400064c8:	cs fs ins BYTE PTR es:[rdi],dx
   1400064cb:	ins    BYTE PTR es:[rdi],dx
   1400064cc:	add    BYTE PTR [rax],al
   1400064ce:	add    BYTE PTR [rax],al
   1400064d0:	mov    al,0x90
   1400064d2:	add    BYTE PTR [rax+0x1],al
   1400064d5:	add    BYTE PTR [rax],al
   1400064d7:	add    BYTE PTR [rax-0x6f],dl
   1400064da:	add    BYTE PTR [rax+0x1],al
   1400064dd:	add    BYTE PTR [rax],al
   1400064df:	add    BYTE PTR [rdi+0x6c],ch
   1400064e2:	xor    esi,DWORD PTR gs:[rdx]
   1400064e5:	cs fs ins BYTE PTR es:[rdi],dx
   1400064e8:	ins    BYTE PTR es:[rdi],dx
   1400064e9:	add    BYTE PTR [rax],al
   1400064eb:	add    BYTE PTR [rax],al
   1400064ed:	add    BYTE PTR [rax],al
   1400064ef:	add    BYTE PTR [rdx],ah
   1400064f1:	add    eax,0x21993
   1400064f6:	add    BYTE PTR [rax],al
   1400064f8:	mov    ah,0x74
   1400064fa:	add    BYTE PTR [rax],al
   1400064fc:	add    DWORD PTR [rax],eax
   1400064fe:	add    BYTE PTR [rax],al
   140006500:	(bad)  
   140006501:	je     0x140006503
   140006503:	add    BYTE PTR [rsi],al
   140006505:	add    BYTE PTR [rax],al
   140006507:	add    al,dh
   140006509:	je     0x14000650b
   14000650b:	add    BYTE PTR [rax],ah
   14000650d:	add    BYTE PTR [rax],al
   14000650f:	add    BYTE PTR [rax],al
   140006511:	add    BYTE PTR [rax],al
   140006513:	add    BYTE PTR [rcx],al
	...
   14000651d:	add    BYTE PTR [rax],al
   14000651f:	add    BYTE PTR [rdi+0x65],dh
   140006522:	jb     0x140006552
   140006524:	fs ins BYTE PTR es:[rdi],dx
   140006526:	ins    BYTE PTR es:[rdi],dx
	...
   14000652f:	add    BYTE PTR [rcx+0x0],al
   140006532:	push   rax
   140006533:	add    BYTE PTR [rcx+0x0],cl
   140006536:	sub    eax,0x53004d00
   14000653b:	add    BYTE PTR [rip+0x69005700],ch        # 0x1a900bc41
   140006541:	add    BYTE PTR [rsi+0x0],ch
   140006544:	sub    eax,0x6f004300
   140006549:	add    BYTE PTR [rdx+0x0],dh
   14000654c:	add    BYTE PTR gs:[rip+0x6f004c00],ch        # 0x1af00b153
   140006553:	add    BYTE PTR [rbx+0x0],ah
   140006556:	(bad)  
   140006557:	add    BYTE PTR [rax+rax*1+0x52],ch
   14000655b:	add    BYTE PTR [rbp+0x0],ah
   14000655e:	add    BYTE PTR [ecx+0x0],ch
   140006562:	jae    0x140006564
   140006564:	je     0x140006566
   140006566:	jb     0x140006568
   140006568:	jns    0x14000656a
   14000656a:	sub    eax,0x31004c00
   14000656f:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d009675
   140006575:	add    BYTE PTR [rax],dh
   140006577:	add    BYTE PTR [rsi],ch
   140006579:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000657d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006581:	add    BYTE PTR [rax],al
   140006583:	add    BYTE PTR [rax],al
   140006585:	add    BYTE PTR [rax],al
   140006587:	add    BYTE PTR [rdx+0x65],dl
   14000658a:	addr32 rex.R
   14000658c:	gs ins BYTE PTR es:[rdi],dx
   14000658e:	gs je  0x1400065f6
   140006591:	rex.WXB
   140006592:	gs jns 0x1400065da
   140006595:	js     0x1400065ee
   140006597:	add    BYTE PTR [rcx+0x0],ah
   14000659a:	add    BYTE PTR fs:[rsi+0x0],dh
   14000659e:	(bad)  
   14000659f:	add    BYTE PTR [rax+0x0],dh
   1400065a2:	imul   eax,DWORD PTR [rax],0x320033
   1400065a8:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   1400065ad:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400065b1:	add    BYTE PTR [rax],al
   1400065b3:	add    BYTE PTR [rax],al
   1400065b5:	add    BYTE PTR [rax],al
   1400065b7:	add    BYTE PTR [rdx+0x65],dl
   1400065ba:	addr32 rex.R
   1400065bc:	gs ins BYTE PTR es:[rdi],dx
   1400065be:	gs je  0x140006626
   1400065c1:	rex.WXB
   1400065c2:	gs jns 0x14000661c
	...
   1400065cd:	add    BYTE PTR [rax],al
   1400065cf:	add    BYTE PTR [rsi],ch
   1400065d1:	add    BYTE PTR [rax+rax*1+0x6c],dh
   1400065d5:	add    BYTE PTR [rdx+0x0],ah
	...
   1400065e0:	add    BYTE PTR [r8+r8*1+0x53],cl
   1400065e5:	add    BYTE PTR [rcx+0x0],cl
   1400065e8:	add    BYTE PTR [rax+rax*1+0x0],r11b
   1400065ed:	add    BYTE PTR [rax],al
   1400065ef:	add    BYTE PTR [rax+rax*1+0x52],bl
   1400065f3:	add    BYTE PTR [rbp+0x0],ah
   1400065f6:	jno    0x1400065f8
   1400065f8:	jne    0x1400065fa
   1400065fa:	imul   eax,DWORD PTR [rax],0x650072
   140006600:	add    BYTE PTR fs:[rax],ah
   140006603:	add    BYTE PTR [rbx+0x0],al
   140006606:	(bad)  
   140006607:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000660b:	add    BYTE PTR [rdi+0x0],ah
   14000660e:	outs   dx,DWORD PTR ds:[rsi]
   14000660f:	add    BYTE PTR [rdx+0x0],dh
   140006612:	imul   eax,DWORD PTR [rax],0x730065
	...
   140006620:	pop    rsp
   140006621:	add    BYTE PTR [rcx+0x0],cl
   140006624:	ins    DWORD PTR es:[rdi],dx
   140006625:	add    BYTE PTR [rax+0x0],dh
   140006628:	ins    BYTE PTR es:[rdi],dx
   140006629:	add    BYTE PTR [rbp+0x0],ah
   14000662c:	ins    DWORD PTR es:[rdi],dx
   14000662d:	add    BYTE PTR [rbp+0x0],ah
   140006630:	outs   dx,BYTE PTR ds:[rsi]
   140006631:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006635:	add    BYTE PTR [rax+rax*1+0x20],ah
   140006639:	add    BYTE PTR [rbx+0x0],al
   14000663c:	(bad)  
   14000663d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006641:	add    BYTE PTR [rdi+0x0],ah
   140006644:	outs   dx,DWORD PTR ds:[rsi]
   140006645:	add    BYTE PTR [rdx+0x0],dh
   140006648:	imul   eax,DWORD PTR [rax],0x730065
   14000664e:	add    BYTE PTR [rax],al
   140006650:	add    BYTE PTR [r8+0x0],dl
   140006654:	push   rax
   140006655:	add    BYTE PTR [rcx+0x0],cl
   140006658:	add    BYTE PTR [rax],r8b
   14000665b:	add    BYTE PTR [rax],al
   14000665d:	add    BYTE PTR [rax],al
   14000665f:	add    BYTE PTR [rbp+0x0],cl
   140006662:	jae    0x140006664
   140006664:	movsxd eax,DWORD PTR [rax]
   140006666:	outs   dx,DWORD PTR ds:[rsi]
   140006667:	add    BYTE PTR [rdx+0x0],dh
   14000666a:	add    BYTE PTR gs:[rbp+0x0],ah
   14000666e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140006673:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006677:	add    BYTE PTR [rip+0x2f00],ch        # 0x14000957d
   14000667d:	add    BYTE PTR [rax],al
   14000667f:	add    BYTE PTR [rbp+0x0],dl
   140006682:	outs   dx,BYTE PTR ds:[rsi]
   140006683:	add    BYTE PTR [rdx+0x0],dh
   140006686:	add    BYTE PTR gs:[rdi+0x0],ah
   14000668a:	push   rbx
   14000668b:	add    BYTE PTR [rbp+0x0],ah
   14000668e:	jb     0x140006690
   140006690:	jbe    0x140006692
   140006692:	add    BYTE PTR gs:[rdx+0x0],dh
   140006696:	add    BYTE PTR [rax],al
   140006698:	push   rdx
   140006699:	add    BYTE PTR [rbp+0x0],ah
   14000669c:	add    BYTE PTR [ebx+0x0],dl
   1400066a0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400066a4:	jbe    0x1400066a6
   1400066a6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400066aa:	add    BYTE PTR [rax],al
   1400066ac:	add    BYTE PTR [rax],al
   1400066ae:	add    BYTE PTR [rax],al
   1400066b0:	lock and eax,DWORD PTR [rax]
   1400066b3:	rex add DWORD PTR [rax],eax
   1400066b6:	add    BYTE PTR [rax],al
   1400066b8:	adc    BYTE PTR [rax+rax*1],ah
   1400066bb:	rex add DWORD PTR [rax],eax
   1400066be:	add    BYTE PTR [rax],al
   1400066c0:	xor    BYTE PTR [rax+rax*1],ah
   1400066c3:	rex add DWORD PTR [rax],eax
   1400066c6:	add    BYTE PTR [rax],al
   1400066c8:	rol    BYTE PTR [rcx+0x0],1
   1400066cb:	rex add DWORD PTR [rax],eax
   1400066ce:	add    BYTE PTR [rax],al
   1400066d0:	jo     0x1400066f6
   1400066d2:	add    BYTE PTR [rax+0x1],al
   1400066d5:	add    BYTE PTR [rax],al
   1400066d7:	add    BYTE PTR [rax],ah
   1400066d9:	(bad)  
   1400066da:	add    BYTE PTR [rax+0x1],al
   1400066dd:	add    BYTE PTR [rax],al
   1400066df:	add    BYTE PTR [rax+0x27],dh
   1400066e2:	add    BYTE PTR [rax+0x1],al
   1400066e5:	add    BYTE PTR [rax],al
   1400066e7:	add    BYTE PTR [rax+0x16],al
   1400066ea:	add    BYTE PTR [rax+0x1],al
   1400066ed:	add    BYTE PTR [rax],al
   1400066ef:	add    BYTE PTR [rax+0x16],dl
   1400066f2:	add    BYTE PTR [rax+0x1],al
   1400066f5:	add    BYTE PTR [rax],al
   1400066f7:	add    al,al
   1400066f9:	(bad)  
   1400066fa:	add    BYTE PTR [rax+0x1],al
	...
   140006705:	add    BYTE PTR [rax],al
   140006707:	add    al,al
   140006709:	add    BYTE PTR [rax],al
   14000670b:	add    BYTE PTR [rax],al
   14000670d:	add    BYTE PTR [rax],al
   14000670f:	rex.RX adc r12b,al
   140006712:	add    al,BYTE PTR [rax]
   140006714:	add    BYTE PTR [rax],al
   140006716:	add    BYTE PTR [rax],al
   140006718:	rol    BYTE PTR [rax],0x0
   14000671b:	add    BYTE PTR [rax],al
   14000671d:	add    BYTE PTR [rax],al
   14000671f:	rex.RX (bad) 
   140006721:	add    BYTE PTR cs:[rax+0x1],al
   140006725:	add    BYTE PTR [rax],al
   140006727:	add    BYTE PTR [rax+0x140002d],dh
   14000672d:	add    BYTE PTR [rax],al
   14000672f:	add    al,al
   140006731:	sub    eax,0x14000
   140006736:	add    BYTE PTR [rax],al
   140006738:	rol    BYTE PTR [rcx+0x0],1
   14000673b:	rex add DWORD PTR [rax],eax
   14000673e:	add    BYTE PTR [rax],al
   140006740:	movabs al,ds:0x5200000001400030
   140006749:	sbb    DWORD PTR [rdx],edx
   14000674b:	jne    0x14000671d
   14000674d:	loopne 0x140006734
   14000674f:	rex.XB xchg r11d,eax
   140006751:	sbb    BYTE PTR [rip+0xffffffffcf3a4880],0x72        # 0x10f3aafd8
   140006758:	movabs al,ds:0xa749062dfc4545de
   140006761:	sub    BYTE PTR [rbp-0x68],ch
   140006764:	imul   esp,DWORD PTR [rbx+0x1a999],0x0
   14000676b:	add    BYTE PTR [rax],al
   14000676d:	add    BYTE PTR [rax],al
   14000676f:	add    al,al
   140006771:	add    BYTE PTR [rax],al
   140006773:	add    BYTE PTR [rax],al
   140006775:	add    BYTE PTR [rax],al
   140006777:	rex.RX movabs al,ds:0x100000000140002c
   140006781:	and    al,0x0
   140006783:	rex add DWORD PTR [rax],eax
   140006786:	add    BYTE PTR [rax],al
   140006788:	sub    al,0x0
   14000678b:	rex add DWORD PTR [rax],eax
   14000678e:	add    BYTE PTR [rax],al
   140006790:	adc    BYTE PTR [rbx],ah
   140006792:	add    BYTE PTR [rax+0x1],al
   140006795:	add    BYTE PTR [rax],al
   140006797:	add    BYTE PTR [rax+0x1400023],ah
   14000679d:	add    BYTE PTR [rax],al
   14000679f:	add    BYTE PTR [rax],dh
   1400067a1:	(bad)  
   1400067a2:	add    BYTE PTR [rax+0x1],al
   1400067a5:	add    BYTE PTR [rax],al
   1400067a7:	add    BYTE PTR [rax+0x140002e],al
   1400067ad:	add    BYTE PTR [rax],al
   1400067af:	add    BYTE PTR [rax+0x140002e],dl
   1400067b5:	add    BYTE PTR [rax],al
   1400067b7:	add    BYTE PTR [rax],ah
   1400067b9:	xor    DWORD PTR [rax],eax
   1400067bb:	rex add DWORD PTR [rax],eax
   1400067be:	add    BYTE PTR [rax],al
   1400067c0:	rex.RX add DWORD PTR [rax],r8d
   1400067c3:	add    BYTE PTR [rax],al
   1400067c5:	add    BYTE PTR [rax],al
   1400067c7:	add    al,al
   1400067c9:	add    BYTE PTR [rax],al
   1400067cb:	add    BYTE PTR [rax],al
   1400067cd:	add    BYTE PTR [rax],al
   1400067cf:	rex.RX adc BYTE PTR [rdi+0x0],r9b
   1400067d3:	rex add DWORD PTR [rax],eax
   1400067d6:	add    BYTE PTR [rax],al
   1400067d8:	adc    BYTE PTR [rdi+0x0],cl
   1400067db:	rex add DWORD PTR [rax],eax
   1400067de:	add    BYTE PTR [rax],al
   1400067e0:	adc    BYTE PTR [rdi+0x0],cl
   1400067e3:	rex add DWORD PTR [rax],eax
   1400067e6:	add    BYTE PTR [rax],al
   1400067e8:	adc    BYTE PTR [rbx],ah
   1400067ea:	add    BYTE PTR [rax+0x1],al
   1400067ed:	add    BYTE PTR [rax],al
   1400067ef:	add    BYTE PTR [rax+0x1400023],ah
   1400067f5:	add    BYTE PTR [rax],al
   1400067f7:	add    BYTE PTR [rax+0x67],ch
   1400067fa:	add    BYTE PTR [rax+0x1],al
	...
   140006805:	add    BYTE PTR [rax],al
   140006807:	add    BYTE PTR [rcx],al
	...
   140006825:	add    BYTE PTR [rax],al
   140006827:	add    BYTE PTR [rax+0x30],al
   14000682a:	add    BYTE PTR [rax+0x1],al
   14000682d:	add    BYTE PTR [rax],al
   14000682f:	add    al,al
   140006831:	(bad)  
   140006832:	add    BYTE PTR [rax+0x1],al
   140006835:	add    BYTE PTR [rax],al
   140006837:	add    BYTE PTR [rax],al
   140006839:	xor    BYTE PTR [rax],al
   14000683b:	rex add DWORD PTR [rax],eax
   14000683e:	add    BYTE PTR [rax],al
   140006840:	rol    BYTE PTR [rcx+0x0],1
   140006843:	rex add DWORD PTR [rax],eax
   140006846:	add    BYTE PTR [rax],al
   140006848:	rex.W
   140006849:	add    BYTE PTR [eax+0x1],al
	...
   140006855:	add    BYTE PTR [rax],al
   140006857:	add    BYTE PTR [rcx],al
	...
   140006875:	add    BYTE PTR [rax],al
   140006877:	add    BYTE PTR [rax+0x67],cl
   14000687a:	add    BYTE PTR [rax+0x1],al
	...
   140006895:	add    BYTE PTR [rax],al
   140006897:	add    BYTE PTR [rbx],ah
   140006899:	add    eax,DWORD PTR [rax]
   14000689b:	add    BYTE PTR [rax],al
   14000689d:	add    BYTE PTR [rax],al
   14000689f:	add    al,al
   1400068a1:	add    BYTE PTR [rax],al
   1400068a3:	add    BYTE PTR [rax],al
   1400068a5:	add    BYTE PTR [rax],al
   1400068a7:	rex.RX pop rbx
   1400068a9:	add    DWORD PTR [rax],eax
   1400068ab:	add    BYTE PTR [rax],al
   1400068ad:	add    BYTE PTR [rax],al
   1400068af:	add    al,al
   1400068b1:	add    BYTE PTR [rax],al
   1400068b3:	add    BYTE PTR [rax],al
   1400068b5:	add    BYTE PTR [rax],al
   1400068b7:	rex.RX xchg eax,eax
   1400068b9:	rex.XB add BYTE PTR [r8+0x1],al
   1400068bd:	add    BYTE PTR [rax],al
   1400068bf:	add    BYTE PTR [rax+0x1400043],al
   1400068c5:	add    BYTE PTR [rax],al
   1400068c7:	add    BYTE PTR [rax],dh
   1400068c9:	rex.XB add BYTE PTR [r8+0x1],al
   1400068cd:	add    BYTE PTR [rax],al
   1400068cf:	add    al,dh
   1400068d1:	add    BYTE PTR ss:[rax+0x1],al
   1400068d5:	add    BYTE PTR [rax],al
   1400068d7:	add    BYTE PTR [rax+0x1400037],dh
   1400068dd:	add    BYTE PTR [rax],al
   1400068df:	add    BYTE PTR [rax+0x3b],dh
   1400068e2:	add    BYTE PTR [rax+0x1],al
   1400068e5:	add    BYTE PTR [rax],al
   1400068e7:	add    BYTE PTR [rax],dh
   1400068e9:	cmp    al,0x0
   1400068eb:	rex add DWORD PTR [rax],eax
   1400068ee:	add    BYTE PTR [rax],al
   1400068f0:	lock cmp al,0x0
   1400068f3:	rex add DWORD PTR [rax],eax
   1400068f6:	add    BYTE PTR [rax],al
   1400068f8:	push   rax
   1400068f9:	rex.XB add BYTE PTR [r8+0x1],al
   1400068fd:	add    BYTE PTR [rax],al
   1400068ff:	add    BYTE PTR [rax+0x43],al
   140006902:	add    BYTE PTR [rax+0x1],al
   140006905:	add    BYTE PTR [rax],al
   140006907:	add    BYTE PTR [rax],dl
   140006909:	add    BYTE PTR [rax+0x1],r8b
   14000690d:	add    BYTE PTR [rax],al
   14000690f:	add    BYTE PTR [rax+0x35],dh
   140006912:	add    BYTE PTR [rax+0x1],al
   140006915:	add    BYTE PTR [rax],al
   140006917:	add    BYTE PTR [rax],ah
   140006919:	rex.XB add BYTE PTR [r8+0x1],al
   14000691d:	add    BYTE PTR [rax],al
   14000691f:	add    BYTE PTR [rax],ah
   140006921:	add    BYTE PTR [rax+0x1],r8b
   140006925:	add    BYTE PTR [rax],al
   140006927:	add    BYTE PTR [rax+0x1400043],ah
   14000692d:	add    BYTE PTR [rax],al
   14000692f:	add    BYTE PTR [rax],dh
   140006931:	add    BYTE PTR ss:[rax+0x1],al
   140006935:	add    BYTE PTR [rax],al
   140006937:	add    BYTE PTR [rax+0x34],al
   14000693a:	add    BYTE PTR [rax+0x1],al
   14000693d:	add    BYTE PTR [rax],al
   14000693f:	add    al,dh
   140006941:	xor    al,0x0
   140006943:	rex add DWORD PTR [rax],eax
   140006946:	add    BYTE PTR [rax],al
   140006948:	adc    BYTE PTR [rip+0x14000],dh        # 0x14001a94e
   14000694e:	add    BYTE PTR [rax],al
   140006950:	rex
   140006951:	add    BYTE PTR [rax+0x1],al
   140006955:	add    BYTE PTR [rax],al
   140006957:	add    BYTE PTR [rax],dl
   140006959:	add    BYTE PTR [r8+0x1],al
   14000695d:	add    BYTE PTR [rax],al
   14000695f:	add    BYTE PTR [rax],al
   140006961:	add    BYTE PTR [rax+0x1],r8b
   140006965:	add    BYTE PTR [rax],al
   140006967:	add    al,al
   140006969:	rex.XB add BYTE PTR [r8+0x1],al
   14000696d:	add    BYTE PTR [rax],al
   14000696f:	add    BYTE PTR [rax+0x43],dh
   140006972:	add    BYTE PTR [rax+0x1],al
   140006975:	add    BYTE PTR [rax],al
   140006977:	add    al,dl
   140006979:	rex.XB add BYTE PTR [r8+0x1],al
   14000697d:	add    BYTE PTR [rax],al
   14000697f:	add    al,ah
   140006981:	rex.XB add BYTE PTR [r8+0x1],al
   140006985:	add    BYTE PTR [rax],al
   140006987:	add    BYTE PTR [rax+0x38],dh
   14000698a:	add    BYTE PTR [rax+0x1],al
   14000698d:	add    BYTE PTR [rax],al
   14000698f:	add    BYTE PTR [rax],dh
   140006991:	cmp    DWORD PTR [rax],eax
   140006993:	rex add DWORD PTR [rax],eax
   140006996:	add    BYTE PTR [rax],al
   140006998:	lock cmp DWORD PTR [rax],eax
   14000699b:	rex add DWORD PTR [rax],eax
   14000699e:	add    BYTE PTR [rax],al
   1400069a0:	mov    al,0x3a
   1400069a2:	add    BYTE PTR [rax+0x1],al
   1400069a5:	add    BYTE PTR [rax],al
   1400069a7:	add    al,dh
   1400069a9:	rex.XB add BYTE PTR [r8+0x1],al
   1400069ad:	add    BYTE PTR [rax],al
   1400069af:	add    BYTE PTR [rax+0x1400043],dh
   1400069b5:	add    BYTE PTR [rax],al
   1400069b7:	add    BYTE PTR [rax+0x43],ah
   1400069ba:	add    BYTE PTR [rax+0x1],al
   1400069bd:	add    BYTE PTR [rax],al
   1400069bf:	add    BYTE PTR [rax+0x140003d],dh
   1400069c5:	add    BYTE PTR [rax],al
   1400069c7:	add    BYTE PTR [rax+0x34],al
   1400069ca:	add    BYTE PTR [rax+0x1],al
   1400069cd:	add    BYTE PTR [rax],al
   1400069cf:	add    al,dh
   1400069d1:	xor    al,0x0
   1400069d3:	rex add DWORD PTR [rax],eax
   1400069d6:	add    BYTE PTR [rax],al
   1400069d8:	adc    BYTE PTR [rip+0x14000],dh        # 0x14001a9de
   1400069de:	add    BYTE PTR [rax],al
   1400069e0:	adc    BYTE PTR [rdi+0x0],cl
   1400069e3:	rex add DWORD PTR [rax],eax
   1400069e6:	add    BYTE PTR [rax],al
   1400069e8:	lock add BYTE PTR ds:[rax+0x1],al
   1400069ed:	add    BYTE PTR [rax],al
   1400069ef:	add    al,ah
   1400069f1:	cmp    eax,0x3c6f394c
   1400069f6:	rcl    BYTE PTR [rcx],cl
   1400069f8:	cmp    DWORD PTR [rbx+0x0],0x7a794fc0
   1400069ff:	mov    bh,0x5
   140006a01:	loopne 0x140006a05
   140006a03:	add    BYTE PTR [rax],al
   140006a05:	add    BYTE PTR [rax],al
   140006a07:	add    al,al
   140006a09:	add    BYTE PTR [rax],al
   140006a0b:	add    BYTE PTR [rax],al
   140006a0d:	add    BYTE PTR [rax],al
   140006a0f:	rex.RX
   140006a10:	rex.WXB add rax,QWORD PTR [r8]
   140006a13:	add    BYTE PTR [rax],al
   140006a15:	add    BYTE PTR [rax],al
   140006a17:	add    al,al
   140006a19:	add    BYTE PTR [rax],al
   140006a1b:	add    BYTE PTR [rax],al
   140006a1d:	add    BYTE PTR [rax],al
   140006a1f:	rex.RX add BYTE PTR [rax],r8b
	...
   140006a2e:	add    BYTE PTR [rax],al
   140006a30:	push   rdi
   140006a31:	add    BYTE PTR [rcx+0x0],ch
   140006a34:	outs   dx,BYTE PTR ds:[rsi]
   140006a35:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140006a39:	add    BYTE PTR [rdi+0x0],dh
   140006a3c:	jae    0x140006a3e
   140006a3e:	add    BYTE PTR [r8+0x0],r15b
   140006a42:	jo     0x140006a44
   140006a44:	ins    BYTE PTR es:[rdi],dx
   140006a45:	add    BYTE PTR [rdi+0x0],ch
   140006a48:	jb     0x140006a4a
   140006a4a:	add    BYTE PTR gs:[rdx+0x0],dh
   140006a4e:	add    BYTE PTR [rax],al
   140006a50:	xor    BYTE PTR [rax],al
   140006a52:	add    BYTE PTR cs:[rax],dh
   140006a55:	add    BYTE PTR [rsi],ch
   140006a57:	add    BYTE PTR [rax],dh
   140006a59:	add    BYTE PTR [rsi],ch
   140006a5b:	add    BYTE PTR [rax],dh
   140006a5d:	add    BYTE PTR [rax],al
   140006a5f:	add    BYTE PTR [rbx+0x0],dl
   140006a62:	push   0x6c006500
   140006a67:	add    BYTE PTR [rax+rax*1+0x54],ch
   140006a6b:	add    BYTE PTR [rax+0x0],ch
   140006a6e:	jne    0x140006a70
   140006a70:	ins    DWORD PTR es:[rdi],dx
   140006a71:	add    BYTE PTR [rdx+0x0],ah
   140006a74:	outs   dx,BYTE PTR ds:[rsi]
   140006a75:	add    BYTE PTR [rcx+0x0],ah
   140006a78:	imul   eax,DWORD PTR [rax],0x45006c
   140006a7e:	js     0x140006a80
   140006a80:	je     0x140006a82
   140006a82:	jb     0x140006a84
   140006a84:	(bad)  
   140006a85:	add    BYTE PTR [rbx+0x0],ah
   140006a88:	je     0x140006a8a
   140006a8a:	imul   eax,DWORD PTR [rax],0x6e006f
   140006a90:	push   rsp
   140006a91:	add    BYTE PTR [rcx+0x0],ch
   140006a94:	ins    DWORD PTR es:[rdi],dx
   140006a95:	add    BYTE PTR [rbp+0x0],ah
   140006a98:	outs   dx,DWORD PTR ds:[rsi]
   140006a99:	add    BYTE PTR [rbp+0x0],dh
   140006a9c:	je     0x140006a9e
   140006a9e:	add    BYTE PTR [rax],al
   140006aa0:	add    BYTE PTR [r8+0x0],sil
   140006aa4:	jo     0x140006aa6
   140006aa6:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140006aaa:	ins    DWORD PTR es:[rdi],dx
   140006aab:	add    BYTE PTR [rbp+0x0],ah
   140006aae:	add    BYTE PTR [rax],al
   140006ab0:	add    BYTE PTR [r8+0x0],sil
   140006ab4:	jo     0x140006ab6
   140006ab6:	push   rsi
   140006ab7:	add    BYTE PTR [rbp+0x0],ah
   140006aba:	jb     0x140006abc
   140006abc:	jae    0x140006abe
   140006abe:	imul   eax,DWORD PTR [rax],0x6e006f
   140006ac4:	add    BYTE PTR [rax],al
   140006ac6:	add    BYTE PTR [rax],al
   140006ac8:	add    BYTE PTR [r8+r8*1+0x73],bpl
   140006acd:	add    BYTE PTR [rcx+0x0],ch
   140006ad0:	add    BYTE PTR fs:[rax],al
   140006ad3:	add    BYTE PTR [rax],al
   140006ad5:	add    BYTE PTR [rax],al
   140006ad7:	add    BYTE PTR [rbp+0x0],al
   140006ada:	js     0x140006adc
   140006adc:	je     0x140006ade
   140006ade:	jb     0x140006ae0
   140006ae0:	(bad)  
   140006ae1:	add    BYTE PTR [rbx+0x0],ah
   140006ae4:	je     0x140006ae6
   140006ae6:	imul   eax,DWORD PTR [rax],0x6e006f
   140006aec:	push   rsp
   140006aed:	add    BYTE PTR [rcx+0x0],ch
   140006af0:	ins    DWORD PTR es:[rdi],dx
   140006af1:	add    BYTE PTR [rbp+0x0],ah
   140006af4:	outs   dx,DWORD PTR ds:[rsi]
   140006af5:	add    BYTE PTR [rbp+0x0],dh
   140006af8:	je     0x140006afa
   140006afa:	rex.WB add BYTE PTR [r14+0x0],bpl
   140006afe:	rex.WRB add BYTE PTR [r11+0x0],r10b
	...
   140006b0e:	add    BYTE PTR [rax],al
   140006b10:	lock imul eax,DWORD PTR [rax],0x40
   140006b14:	add    DWORD PTR [rax],eax
	...
   140006b1e:	add    BYTE PTR [rax],al
   140006b20:	loopne 0x140006b8d
   140006b22:	add    BYTE PTR [rax+0x1],al
   140006b25:	add    BYTE PTR [rax],al
   140006b27:	add    BYTE PTR [rax],cl
   140006b29:	add    BYTE PTR [rax],al
   140006b2b:	add    BYTE PTR [rax],al
   140006b2d:	add    BYTE PTR [rax],al
   140006b2f:	add    al,dl
   140006b31:	imul   eax,DWORD PTR [rax],0x40
   140006b34:	add    DWORD PTR [rax],eax
   140006b36:	add    BYTE PTR [rax],al
   140006b38:	adc    BYTE PTR [rax],al
   140006b3a:	add    BYTE PTR [rax],al
   140006b3c:	add    BYTE PTR [rax],al
   140006b3e:	add    BYTE PTR [rax],al
   140006b40:	shr    BYTE PTR [rbx+0x0],0x40
   140006b44:	add    DWORD PTR [rax],eax
   140006b46:	add    BYTE PTR [rax],al
   140006b48:	sbb    BYTE PTR [rax],al
   140006b4a:	add    BYTE PTR [rax],al
   140006b4c:	add    BYTE PTR [rax],al
   140006b4e:	add    BYTE PTR [rax],al
   140006b50:	mov    al,0x6b
   140006b52:	add    BYTE PTR [rax+0x1],al
   140006b55:	add    BYTE PTR [rax],al
   140006b57:	add    BYTE PTR [rax],ah
   140006b59:	add    BYTE PTR [rax],al
   140006b5b:	add    BYTE PTR [rax],al
   140006b5d:	add    BYTE PTR [rax],al
   140006b5f:	add    BYTE PTR [rax+0x140006b],ah
   140006b65:	add    BYTE PTR [rax],al
   140006b67:	add    BYTE PTR [rax],ch
   140006b69:	add    BYTE PTR [rax],al
   140006b6b:	add    BYTE PTR [rax],al
   140006b6d:	add    BYTE PTR [rax],al
   140006b6f:	add    BYTE PTR [rax+0x140006b],dl
   140006b75:	add    BYTE PTR [rax],al
   140006b77:	add    BYTE PTR [rax],ch
	...
   140006b8d:	add    BYTE PTR [rax],al
   140006b8f:	add    BYTE PTR [rcx+rax*1],cl
   140006b92:	add    BYTE PTR [rax],al
   140006b94:	add    BYTE PTR [rax],al
   140006b96:	add    BYTE PTR [rax],al
   140006b98:	rol    BYTE PTR [rax],0x0
   140006b9b:	add    BYTE PTR [rax],al
   140006b9d:	add    BYTE PTR [rax],al
   140006b9f:	rex.RX or r8d,DWORD PTR [rcx]
   140006ba2:	add    BYTE PTR [rax],al
   140006ba4:	add    BYTE PTR [rax],al
   140006ba6:	add    BYTE PTR [rax],al
   140006ba8:	rol    BYTE PTR [rax],0x0
   140006bab:	add    BYTE PTR [rax],al
   140006bad:	add    BYTE PTR [rax],al
   140006baf:	rex.RX or DWORD PTR [rcx],r8d
   140006bb2:	add    BYTE PTR [rax],al
   140006bb4:	add    BYTE PTR [rax],al
   140006bb6:	add    BYTE PTR [rax],al
   140006bb8:	rol    BYTE PTR [rax],0x0
   140006bbb:	add    BYTE PTR [rax],al
   140006bbd:	add    BYTE PTR [rax],al
   140006bbf:	rex.RX
   140006bc0:	rex.RB shl WORD PTR [r15+0x4cce0509],1
   140006bc8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140006bc9:	(bad)  
   140006bca:	or     dl,BYTE PTR [rbp+0x42]
   140006bcd:	xor    edi,DWORD PTR [rbp+0x24b49d9b]
   140006bd3:	mov    eax,0x416122ac
   140006bd8:	lods   al,BYTE PTR ds:[rsi]
   140006bd9:	mov    bl,BYTE PTR [rcx+0x3ffae816]
   140006bdf:	jg     0x140006c20
   140006be1:	mov    esi,0xfb797f73
   140006be6:	cmp    al,0x49
   140006be8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140006be9:	(bad)  
   140006bea:	jle    0x140006bcd
   140006bec:	rex.WRX and al,0x58
   140006bef:	rex.B int 0xfc
   140006bf2:	push   rdi
   140006bf3:	jrcxz  0x140006b8a
   140006bf5:	test   eax,0x1fb04576
   140006bfa:	and    eax,DWORD PTR [rsi+0x30]
   140006bfd:	adc    eax,0x53964e
   140006c02:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   140006c06:	push   rsp
   140006c07:	add    BYTE PTR [rdi+0x0],dl
   140006c0a:	add    BYTE PTR [r10+0x0],dl
   140006c0e:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   140006c13:	add    BYTE PTR [rcx+0x0],ch
   140006c16:	movsxd eax,DWORD PTR [rax]
   140006c18:	jb     0x140006c1a
   140006c1a:	outs   dx,DWORD PTR ds:[rsi]
   140006c1b:	add    BYTE PTR [rbx+0x0],dh
   140006c1e:	outs   dx,DWORD PTR ds:[rsi]
   140006c1f:	add    BYTE PTR [rsi+0x0],ah
   140006c22:	je     0x140006c24
   140006c24:	pop    rsp
   140006c25:	add    BYTE PTR [rdi+0x0],dl
   140006c28:	imul   eax,DWORD PTR [rax],0x64006e
   140006c2e:	outs   dx,DWORD PTR ds:[rsi]
   140006c2f:	add    BYTE PTR [rdi+0x0],dh
   140006c32:	jae    0x140006c34
   140006c34:	pop    rsp
   140006c35:	add    BYTE PTR [rbx+0x0],al
   140006c38:	jne    0x140006c3a
   140006c3a:	jb     0x140006c3c
   140006c3c:	jb     0x140006c3e
   140006c3e:	add    BYTE PTR gs:[rsi+0x0],ch
   140006c42:	je     0x140006c44
   140006c44:	push   rsi
   140006c45:	add    BYTE PTR [rbp+0x0],ah
   140006c48:	jb     0x140006c4a
   140006c4a:	jae    0x140006c4c
   140006c4c:	imul   eax,DWORD PTR [rax],0x6e006f
   140006c52:	pop    rsp
   140006c53:	add    BYTE PTR [rax+rax*1+0x68],dl
   140006c57:	add    BYTE PTR [rbp+0x0],dh
   140006c5a:	ins    DWORD PTR es:[rdi],dx
   140006c5b:	add    BYTE PTR [rdx+0x0],ah
   140006c5e:	outs   dx,BYTE PTR ds:[rsi]
   140006c5f:	add    BYTE PTR [rcx+0x0],ah
   140006c62:	imul   eax,DWORD PTR [rax],0x43006c
   140006c68:	(bad)  
   140006c69:	add    BYTE PTR [rbx+0x0],ah
   140006c6c:	push   0x6500
   140006c71:	add    BYTE PTR [rax],al
   140006c73:	add    BYTE PTR [rax],al
   140006c75:	add    BYTE PTR [rax],al
   140006c77:	add    BYTE PTR [rcx+0x18],bl
   140006c7a:	add    BYTE PTR [rax],dl
   140006c7c:	add    al,0x0
   140006c7e:	pop    rcx
   140006c7f:	sbb    BYTE PTR [rax],al
   140006c81:	add    BYTE PTR [rcx],al
   140006c83:	add    BYTE PTR [rax],al
   140006c85:	add    BYTE PTR [rax],al
   140006c87:	add    BYTE PTR [rax],0x0
   140006c8a:	add    BYTE PTR [rax],al
   140006c8c:	add    BYTE PTR [rax],al
   140006c8e:	add    BYTE PTR [rax],al
   140006c90:	(bad)  
   140006c91:	add    BYTE PTR [rax+0x0],dh
   140006c94:	imul   eax,DWORD PTR [rax],0x6d002d
   140006c9a:	jae    0x140006c9c
   140006c9c:	sub    eax,0x69007700
   140006ca1:	add    BYTE PTR [rsi+0x0],ch
   140006ca4:	sub    eax,0x6f006300
   140006ca9:	add    BYTE PTR [rdx+0x0],dh
   140006cac:	add    BYTE PTR gs:[rip+0x65006400],ch        # 0x1a500d0b3
   140006cb3:	add    BYTE PTR [rax+rax*1+0x61],ch
   140006cb7:	add    BYTE PTR [rcx+0x0],bh
   140006cba:	ins    BYTE PTR es:[rdi],dx
   140006cbb:	add    BYTE PTR [rdi+0x0],ch
   140006cbe:	(bad)  
   140006cbf:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140006cc3:	add    BYTE PTR [rax+rax*1+0x31],ch
   140006cc7:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d009dcd
   140006ccd:	add    BYTE PTR [rcx],dh
   140006ccf:	add    BYTE PTR [rsi],ch
   140006cd1:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140006cd5:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006cd9:	add    BYTE PTR [rax],al
   140006cdb:	add    BYTE PTR [rax],al
   140006cdd:	add    BYTE PTR [rax],al
   140006cdf:	add    BYTE PTR [rbx+0x0],cl
   140006ce2:	add    BYTE PTR [r10+0x0],r10b
   140006ce6:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   140006cea:	rex.WR add BYTE PTR [rbx],r14b
   140006ced:	add    BYTE PTR [rdx],dh
   140006cef:	add    BYTE PTR [rsi],ch
   140006cf1:	add    BYTE PTR [rax+rax*1+0x4c],al
   140006cf5:	add    BYTE PTR [rax+rax*1+0x0],cl
   140006cf9:	add    BYTE PTR [rax],al
   140006cfb:	add    BYTE PTR [rax],al
   140006cfd:	add    BYTE PTR [rax],al
   140006cff:	add    BYTE PTR [rdx+0x65],dl
   140006d02:	jae    0x140006d73
   140006d04:	ins    BYTE PTR es:[rdi],dx
   140006d05:	jbe    0x140006d6c
   140006d07:	rex.R
   140006d08:	gs ins BYTE PTR es:[rdi],dx
   140006d0a:	(bad)  
   140006d0b:	jns    0x140006d59
   140006d0d:	outs   dx,DWORD PTR ds:[rsi]
   140006d0e:	(bad)  
   140006d0f:	fs gs fs push r8
   140006d14:	rex.WB add BYTE PTR [r8],al
   140006d17:	add    BYTE PTR [rdx+0x65],dl
   140006d1a:	jae    0x140006d8b
   140006d1c:	ins    BYTE PTR es:[rdi],dx
   140006d1d:	jbe    0x140006d84
   140006d1f:	rex.R
   140006d20:	gs ins BYTE PTR es:[rdi],dx
   140006d22:	(bad)  
   140006d23:	jns    0x140006d71
   140006d25:	outs   dx,DWORD PTR ds:[rsi]
   140006d26:	(bad)  
   140006d27:	fs jae 0x140006d70
   140006d2a:	jb     0x140006d9b
   140006d2c:	ins    DWORD PTR es:[rdi],dx
   140006d2d:	rex.R ins BYTE PTR es:[rdi],dx
   140006d2f:	ins    BYTE PTR es:[rdi],dx
	...
   140006d44:	(bad)  
   140006d45:	cmp    DWORD PTR [rdi+0x55],ebx
   140006d4b:	add    BYTE PTR [rdx],al
   140006d4d:	add    BYTE PTR [rax],al
   140006d4f:	add    BYTE PTR [rax+rax*1],dh
   140006d52:	add    BYTE PTR [rax],al
   140006d54:	rex outs dx,BYTE PTR ds:[rsi]
   140006d56:	add    BYTE PTR [rax],al
   140006d58:	rex pop rsi
   140006d5a:	add    BYTE PTR [rax],al
   140006d5c:	add    BYTE PTR [rax],al
   140006d5e:	add    BYTE PTR [rax],al
   140006d60:	(bad)  
   140006d61:	cmp    DWORD PTR [rdi+0x55],ebx
   140006d67:	add    BYTE PTR [rip+0xffffffffd8000000],cl        # 0x118006d6d
   140006d6d:	add    al,BYTE PTR [rax]
   140006d6f:	add    BYTE PTR [rax-0x77ffff92],cl
   140006d75:	pop    rsi
	...
   140006d9e:	add    BYTE PTR [rax],al
   140006da0:	movabs al,ds:0x0
	...
   140006df5:	add    BYTE PTR [rax],al
   140006df7:	add    BYTE PTR [rax],cl
   140006df9:	nop
   140006dfa:	add    BYTE PTR [rax+0x1],al
	...
   140006e0d:	add    BYTE PTR [rax],al
   140006e0f:	add    BYTE PTR [rax+0x1400062],bh
   140006e15:	add    BYTE PTR [rax],al
   140006e17:	add    al,al
   140006e19:	(bad)  
   140006e1a:	add    BYTE PTR [rax+0x1],al
   140006e1d:	add    BYTE PTR [rax],al
   140006e1f:	add    BYTE PTR [rax],ah
   140006e21:	movsxd eax,DWORD PTR [rax]
   140006e23:	rex add DWORD PTR [rax],eax
   140006e26:	add    BYTE PTR [rax],al
   140006e28:	push   0x0
   140006e2d:	add    BYTE PTR [rax],al
   140006e2f:	add    BYTE PTR [rax],al
   140006e31:	xor    eax,0x0
	...
   140006e3e:	add    BYTE PTR [rax],al
   140006e40:	push   rdx
   140006e41:	push   rbx
   140006e42:	rex.R push rbx
   140006e44:	stos   BYTE PTR es:[rdi],al
   140006e45:	and    dl,ch
   140006e47:	rex.WRXB (bad) 
   140006e49:	pop    rdx
   140006e4a:	fmul   DWORD PTR [rsi-0x76]
   140006e4d:	and    al,0x5a
   140006e4f:	sub    DWORD PTR [rdi+0x131d85f],ebx
   140006e55:	add    BYTE PTR [rax],al
   140006e57:	add    BYTE PTR [rax+rbp*2+0x75],dl
   140006e5b:	ins    DWORD PTR es:[rdi],dx
   140006e5c:	(bad)  
   140006e5d:	outs   dx,BYTE PTR ds:[rsi]
   140006e5e:	(bad)  
   140006e5f:	imul   ebp,DWORD PTR [rbp+rax*2+0x78],0x63617274
   140006e67:	je     0x140006ed2
   140006e69:	outs   dx,DWORD PTR ds:[rsi]
   140006e6a:	outs   dx,BYTE PTR ds:[rsi]
   140006e6b:	rex.W outs dx,DWORD PTR ds:[rsi]
   140006e6d:	jae    0x140006ee3
   140006e6f:	cs jo  0x140006ed6
   140006e72:	(bad)  
	...
   140006e87:	add    BYTE PTR [rdi+0x43],al
   140006e8a:	push   rsp
   140006e8b:	rex.WR add BYTE PTR [rax],r10b
   140006e8e:	add    BYTE PTR [rax],al
   140006e90:	retf   0x2
   140006e93:	add    BYTE PTR [rsi],ch
   140006e95:	je     0x140006efc
   140006e97:	js     0x140006f0d
   140006e99:	and    al,0x64
   140006e9b:	imul   eax,DWORD PTR [rax],0xd0000000
   140006ea1:	adc    al,BYTE PTR [rax]
   140006ea3:	add    al,cl
   140006ea5:	add    BYTE PTR [r8],r8b
   140006ea8:	cs je  0x140006f10
   140006eab:	js     0x140006f21
   140006ead:	and    al,0x6d
   140006eaf:	outs   dx,BYTE PTR ds:[rsi]
   140006eb0:	add    BYTE PTR [rax],al
   140006eb2:	add    BYTE PTR [rax],al
   140006eb4:	movabs al,ds:0x2e00000012000058
   140006ebd:	je     0x140006f24
   140006ebf:	js     0x140006f35
   140006ec1:	and    al,0x6d
   140006ec3:	outs   dx,BYTE PTR ds:[rsi]
   140006ec4:	and    al,0x30
   140006ec6:	xor    BYTE PTR [rax],al
   140006ec8:	rcr    BYTE PTR [rax+0x0],0x0
   140006ecc:	mov    BYTE PTR [rax],0x0
   140006ecf:	add    BYTE PTR [rsi],ch
   140006ed1:	je     0x140006f38
   140006ed3:	js     0x140006f49
   140006ed5:	and    al,0x78
   140006ed7:	add    BYTE PTR [rax-0x32ffffa7],cl
   140006edd:	add    DWORD PTR [rax],eax
   140006edf:	add    BYTE PTR [rsi],ch
   140006ee1:	je     0x140006f48
   140006ee3:	js     0x140006f59
   140006ee5:	and    al,0x79
   140006ee7:	add    BYTE PTR fs:[rax],al
   140006eea:	add    BYTE PTR [rax],al
   140006eec:	add    BYTE PTR [rax+0x0],ah
   140006eef:	add    BYTE PTR [rax+0x2e000002],bh
   140006ef5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140006efd:	add    BYTE PTR [rax],al
   140006eff:	add    BYTE PTR [rax+0x10000062],bh
   140006f05:	add    BYTE PTR [rax],al
   140006f07:	add    BYTE PTR [rsi],ch
   140006f09:	xor    BYTE PTR [rax],dh
   140006f0b:	movsxd esp,DWORD PTR [rsi+0x67]
   140006f0e:	add    BYTE PTR [rax],al
   140006f10:	enter  0x62,0x0
   140006f14:	or     BYTE PTR [rax],al
   140006f16:	add    BYTE PTR [rax],al
   140006f18:	cs rex.XB push r10
   140006f1b:	push   rsp
   140006f1c:	and    al,0x58
   140006f1e:	rex.XB
   140006f1f:	add    BYTE PTR [r8],al
   140006f22:	add    BYTE PTR [rax],al
   140006f24:	shl    BYTE PTR [rdx+0x0],1
   140006f27:	add    BYTE PTR [rax],cl
   140006f29:	add    BYTE PTR [rax],al
   140006f2b:	add    BYTE PTR [rsi],ch
   140006f2d:	rex.XB push r10
   140006f2f:	push   rsp
   140006f30:	and    al,0x58
   140006f32:	rex.XB
   140006f33:	rex.B
   140006f34:	add    BYTE PTR [r8],al
   140006f37:	add    al,bl
   140006f39:	(bad)  
   140006f3a:	add    BYTE PTR [rax],al
   140006f3c:	sbb    BYTE PTR [rax],al
   140006f3e:	add    BYTE PTR [rax],al
   140006f40:	cs rex.XB push r10
   140006f43:	push   rsp
   140006f44:	and    al,0x58
   140006f46:	rex.XB
   140006f47:	rex.WR add BYTE PTR [rax],r8b
   140006f4a:	add    BYTE PTR [rax],al
   140006f4c:	lock (bad) 
   140006f4e:	add    BYTE PTR [rax],al
   140006f50:	or     BYTE PTR [rax],al
   140006f52:	add    BYTE PTR [rax],al
   140006f54:	cs rex.XB push r10
   140006f57:	push   rsp
   140006f58:	and    al,0x58
   140006f5a:	rex.XB push r13
   140006f5c:	add    BYTE PTR [rax],al
   140006f5e:	add    BYTE PTR [rax],al
   140006f60:	clc    
   140006f61:	(bad)  
   140006f62:	add    BYTE PTR [rax],al
   140006f64:	or     BYTE PTR [rax],al
   140006f66:	add    BYTE PTR [rax],al
   140006f68:	cs rex.XB push r10
   140006f6b:	push   rsp
   140006f6c:	and    al,0x58
   140006f6e:	rex.XB pop r10
   140006f70:	add    BYTE PTR [rax],al
   140006f72:	add    BYTE PTR [rax],al
   140006f74:	add    BYTE PTR [rbx+0x0],ah
   140006f77:	add    BYTE PTR [rax],cl
   140006f79:	add    BYTE PTR [rax],al
   140006f7b:	add    BYTE PTR [rsi],ch
   140006f7d:	rex.XB push r10
   140006f7f:	push   rsp
   140006f80:	and    al,0x58
   140006f82:	rex.WB
   140006f83:	add    BYTE PTR [r8],al
   140006f86:	add    BYTE PTR [rax],al
   140006f88:	or     BYTE PTR [rbx+0x0],ah
   140006f8b:	add    BYTE PTR [rax],cl
   140006f8d:	add    BYTE PTR [rax],al
   140006f8f:	add    BYTE PTR [rsi],ch
   140006f91:	rex.XB push r10
   140006f93:	push   rsp
   140006f94:	and    al,0x58
   140006f96:	rex.WB
   140006f97:	rex.B
   140006f98:	add    BYTE PTR [r8],al
   140006f9b:	add    BYTE PTR [rax],dl
   140006f9d:	movsxd eax,DWORD PTR [rax]
   140006f9f:	add    BYTE PTR [rax],cl
   140006fa1:	add    BYTE PTR [rax],al
   140006fa3:	add    BYTE PTR [rsi],ch
   140006fa5:	rex.XB push r10
   140006fa7:	push   rsp
   140006fa8:	and    al,0x58
   140006faa:	rex.WB pop r9
   140006fac:	add    BYTE PTR [rax],al
   140006fae:	add    BYTE PTR [rax],al
   140006fb0:	sbb    BYTE PTR [rbx+0x0],ah
   140006fb3:	add    BYTE PTR [rax],cl
   140006fb5:	add    BYTE PTR [rax],al
   140006fb7:	add    BYTE PTR [rsi],ch
   140006fb9:	rex.XB push r10
   140006fbb:	push   rsp
   140006fbc:	and    al,0x58
   140006fbe:	rex.WB pop r10
   140006fc0:	add    BYTE PTR [rax],al
   140006fc2:	add    BYTE PTR [rax],al
   140006fc4:	and    BYTE PTR [rbx+0x0],ah
   140006fc7:	add    BYTE PTR [rax+0x2e000001],ah
   140006fcd:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140006fd5:	add    BYTE PTR [rax],al
   140006fd7:	add    al,al
   140006fd9:	add    BYTE PTR fs:[rax],al
   140006fdc:	or     BYTE PTR [rcx],0x0
   140006fdf:	add    BYTE PTR [rsi],ch
   140006fe1:	jb     0x140007047
   140006fe3:	(bad)  
   140006fe4:	je     0x140007047
   140006fe6:	add    BYTE PTR [rax],al
   140006fe8:	rex outs dx,BYTE PTR ds:[rsi]
   140006fea:	add    BYTE PTR [rax],al
   140006fec:	and    BYTE PTR [rbx],al
   140006fee:	add    BYTE PTR [rax],al
   140006ff0:	cs jb  0x140007057
   140006ff3:	(bad)  
   140006ff4:	je     0x140007057
   140006ff6:	and    al,0x7a
   140006ff8:	jp     0x140007074
   140006ffa:	fs (bad) 
   140006ffc:	add    BYTE PTR [eax],al
   140006fff:	add    BYTE PTR [rax+0x71],ah
   140007002:	add    BYTE PTR [rax],al
   140007004:	fadd   DWORD PTR [rbx]
   140007006:	add    BYTE PTR [rax],al
   140007008:	cs js  0x14000706f
   14000700b:	(bad)  
   14000700c:	je     0x14000706f
   14000700e:	add    BYTE PTR [rax],al
   140007010:	cmp    BYTE PTR [rbp+0x0],dh
   140007013:	add    BYTE PTR [rax],cl
   140007015:	add    BYTE PTR [rax],al
   140007017:	add    BYTE PTR [rcx+0x54],al
   14000701a:	rex.WR and al,0x5f
   14000701d:	pop    rdi
   14000701e:	(bad)  
   14000701f:	add    BYTE PTR [rax+0x75],al
   140007022:	add    BYTE PTR [rax],al
   140007024:	or     BYTE PTR [rax],al
   140007026:	add    BYTE PTR [rax],al
   140007028:	push   r12
   14000702a:	rex.WR and al,0x5f
   14000702d:	pop    rdi
   14000702e:	ins    DWORD PTR es:[rdi],dx
   14000702f:	add    BYTE PTR [rax+0x75],cl
   140007032:	add    BYTE PTR [rax],al
   140007034:	or     BYTE PTR [rax],al
   140007036:	add    BYTE PTR [rax],al
   140007038:	push   r12
   14000703a:	rex.WR and al,0x5f
   14000703d:	pop    rdi
   14000703e:	jp     0x140007040
   140007040:	push   rax
   140007041:	jne    0x140007043
   140007043:	add    BYTE PTR [rax+0x0],ah
   140007046:	add    BYTE PTR [rax],al
   140007048:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140007052:	add    BYTE PTR [rax],al
   140007054:	mov    al,0x75
   140007056:	add    BYTE PTR [rax],al
   140007058:	and    BYTE PTR [rax],al
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   140007066:	add    BYTE PTR [rax],al
   140007068:	shl    BYTE PTR [rbp+0x0],1
   14000706b:	add    BYTE PTR [rax+0x2e000000],bl
   140007071:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	push   0x2e000076
   140007081:	add    DWORD PTR [rax],eax
   140007083:	add    BYTE PTR [rsi],ch
   140007085:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   14000708e:	add    BYTE PTR [rax],al
   140007090:	cwde   
   140007091:	ja     0x140007093
   140007093:	add    BYTE PTR [rax+0x2e000000],bl
   140007099:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	xor    BYTE PTR [rax+0x0],bh
   1400070a7:	add    BYTE PTR [rax+0x0],bh
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    BYTE PTR [rax+0x14000078],ch
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    BYTE PTR [rsi],ch
   1400070c1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   1400070c9:	add    BYTE PTR [rax],al
   1400070cb:	add    al,al
   1400070cd:	js     0x1400070cf
   1400070cf:	add    BYTE PTR [rax+0x2e000002],bh
   1400070d5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   1400070dd:	add    BYTE PTR [rax],al
   1400070df:	add    BYTE PTR [rax+0x7b],bh
   1400070e2:	add    BYTE PTR [rax],al
   1400070e4:	cmp    al,BYTE PTR [rip+0x692e0000]        # 0x1a92e70ea
   1400070ea:	fs (bad) 
   1400070ec:	je     0x14000714f
   1400070ee:	and    al,0x36
   1400070f0:	add    BYTE PTR [rax],al
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	add    BYTE PTR [rax+0x680000],dl
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	cs fs (bad) 
   1400070ff:	je     0x140007162
   140007101:	add    BYTE PTR [rax],al
   140007103:	add    BYTE PTR [rax-0x27ffff70],al
   140007109:	(bad)  
   14000710a:	add    BYTE PTR [rax],al
   14000710c:	cs (bad) 
   14000710f:	jae    0x140007111
   140007111:	add    BYTE PTR [rax],al
   140007113:	add    BYTE PTR [rax],al
   140007115:	movabs al,ds:0x702e0000048c0000
   14000711e:	fs (bad) 
   140007120:	je     0x140007183
   140007122:	add    BYTE PTR [rax],al
   140007124:	add    BYTE PTR [rax+0x980000],dh
   14000712a:	add    BYTE PTR [rax],al
   14000712c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   140007136:	add    BYTE PTR [rax],al
   140007138:	add    al,al
   14000713a:	add    BYTE PTR [rax],al
   14000713c:	movabs al,ds:0x637273722e000000
   140007145:	and    al,0x30
   140007147:	xor    DWORD PTR [rax],eax
   140007149:	add    BYTE PTR [rax],al
   14000714b:	add    BYTE PTR [rax-0x77ffff40],ah
   140007151:	or     BYTE PTR [rax],al
   140007153:	add    BYTE PTR [rsi],ch
   140007155:	jb     0x1400071ca
   140007157:	jb     0x1400071bc
   140007159:	and    al,0x30
   14000715b:	xor    al,BYTE PTR [rax]
   14000715d:	add    BYTE PTR [rax],al
   14000715f:	add    BYTE PTR [rcx],al
   140007161:	add    al,0x1
   140007163:	add    BYTE PTR [rdx+rax*2],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	or     DWORD PTR [rcx+rax*1],eax
   14000716b:	add    BYTE PTR [rdx+riz*2],al
   14000716e:	add    BYTE PTR [rax],al
   140007170:	out    0x54,al
   140007172:	add    BYTE PTR [rax],al
   140007174:	add    DWORD PTR [rax],eax
   140007176:	add    BYTE PTR [rax],al
   140007178:	sbb    al,0x13
   14000717a:	add    BYTE PTR [rax],al
   14000717c:	sub    dl,BYTE PTR [rbx]
   14000717e:	add    BYTE PTR [rax],al
   140007180:	(bad)  
   140007181:	pop    rax
   140007182:	add    BYTE PTR [rax],al
   140007184:	sub    dl,BYTE PTR [rbx]
   140007186:	add    BYTE PTR [rax],al
   140007188:	add    DWORD PTR [rsi],eax
   14000718a:	add    al,BYTE PTR [rax]
   14000718c:	(bad)  
   14000718d:	xor    al,BYTE PTR [rdx]
   14000718f:	push   rax
   140007190:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415719e
   140007196:	or     BYTE PTR [rax],al
   140007198:	adc    eax,0x15000764
   14000719d:	xor    al,0x6
   14000719f:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e082d7
   1400071a5:	(bad)  
   1400071a6:	(bad)  
   1400071a7:	add    BYTE PTR [rdi],dl
   1400071a9:	xor    al,0xb
   1400071ab:	add    BYTE PTR [rdi],dl
   1400071ad:	push   rdx
   1400071ae:	adc    esp,eax
   1400071b0:	adc    DWORD PTR [rax+0x10],esi
   1400071b3:	(bad)  
   1400071b4:	add    DWORD PTR [rdi],ecx
   1400071b6:	(bad)  
   1400071b7:	add    BYTE PTR [rdi],cl
   1400071b9:	or     DWORD PTR fs:[rax],eax
   1400071bc:	sysenter 
   1400071be:	or     BYTE PTR [rax],al
   1400071c0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400071c3:	jo     0x1400071c6
   1400071c5:	adc    al,0x8
   1400071c7:	add    BYTE PTR [rsp+riz*2],dl
   1400071ca:	or     BYTE PTR [rax],al
   1400071cc:	adc    al,0x54
   1400071ce:	(bad)  
   1400071cf:	add    BYTE PTR [rsp+rsi*1],dl
   1400071d2:	(bad)  
   1400071d3:	add    BYTE PTR [rdx+rsi*1],dl
   1400071d6:	adc    BYTE PTR [rax+0x1],dh
   1400071d9:	clts   
   1400071db:	add    BYTE PTR [rdi],cl
   1400071dd:	fs (bad) 
   1400071df:	add    BYTE PTR [rdi],cl
   1400071e1:	xor    al,0x6
   1400071e3:	add    BYTE PTR [rdi],cl
   1400071e5:	xor    cl,BYTE PTR [rbx]
   1400071e7:	jo     0x140007202
   1400071e9:	and    BYTE PTR [rdi],al
   1400071eb:	add    BYTE PTR [rsi],cl
   1400071ed:	add    DWORD PTR [rax+rax*1+0x7],ecx
   1400071f1:	loopne 0x1400071f8
   1400071f3:	jo     0x1400071f9
   1400071f5:	(bad)  
   1400071f6:	add    edx,DWORD PTR [rax+0x2]
   1400071f9:	xor    BYTE PTR [rax],al
   1400071fb:	add    BYTE PTR [rax],bl
   1400071fd:	push   rbp
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	push   rax
   140007201:	add    al,BYTE PTR [rax]
   140007203:	add    BYTE PTR [rcx],bl
   140007205:	(bad)  
   140007206:	or     DWORD PTR [rax],eax
   140007208:	(bad)  
   140007209:	fs push rsp
   14000720b:	add    BYTE PTR [rsi],bl
   14000720d:	xor    al,0x53
   14000720f:	add    BYTE PTR [rsi],bl
   140007211:	add    DWORD PTR [rsi+0x0],ecx
   140007214:	(bad)  
   140007216:	or     eax,0x500be0
   14000721b:	add    BYTE PTR [rax],bl
   14000721d:	push   rbp
   14000721e:	add    BYTE PTR [rax],al
   140007220:	(bad)  
   140007221:	add    al,BYTE PTR [rax]
   140007223:	add    BYTE PTR [rcx],bl
   140007225:	xor    BYTE PTR [rbx],cl
   140007227:	add    BYTE PTR [rdi],bl
   140007229:	xor    al,0x52
   14000722b:	add    BYTE PTR [rdi],bl
   14000722d:	add    DWORD PTR [rax+0x0],ecx
   140007230:	adc    al,dh
   140007232:	(bad)  
   140007233:	loopne 0x140007241
   140007235:	ror    BYTE PTR [rdx],1
   140007237:	ror    BYTE PTR [rax],0x70
   14000723a:	(bad)  
   14000723b:	(bad)  
   14000723c:	(bad)  
   14000723d:	push   rax
   14000723e:	add    BYTE PTR [rax],al
   140007240:	sbb    BYTE PTR [rbp+0x0],dl
   140007243:	add    BYTE PTR [rax],dh
   140007245:	add    al,BYTE PTR [rax]
   140007247:	add    BYTE PTR [rcx],al
   140007249:	sbb    eax,0x741d000c
   14000724e:	or     eax,DWORD PTR [rax]
   140007250:	sbb    eax,0x1d000a64
   140007255:	push   rsp
   140007256:	or     DWORD PTR [rax],eax
   140007258:	sbb    eax,0x1d000834
   14000725d:	xor    bl,BYTE PTR [rcx]
   14000725f:	lock (bad) 
   140007261:	loopne 0x140007278
   140007263:	rol    BYTE PTR [rcx],0xa
   140007266:	add    al,0x0
   140007268:	or     dh,BYTE PTR [rsi+rax*1]
   14000726b:	add    BYTE PTR [rdx],cl
   14000726d:	xor    al,BYTE PTR [rsi]
   14000726f:	jo     0x140007272
   140007271:	(bad)  
   140007272:	add    al,BYTE PTR [rax]
   140007274:	(bad)  
   140007275:	xor    al,BYTE PTR [rdx]
   140007277:	xor    BYTE PTR [rcx],al
   140007279:	add    al,0x1
   14000727b:	add    BYTE PTR [rdx+riz*2],al
   14000727e:	add    BYTE PTR [rax],al
   140007280:	add    DWORD PTR [rax],ebx
   140007282:	or     al,BYTE PTR [rax]
   140007284:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140007288:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000728c:	sbb    BYTE PTR [rax+rcx*1],dh
   14000728f:	add    BYTE PTR [rax],bl
   140007291:	xor    dl,BYTE PTR [rax+rsi*8]
   140007294:	adc    ah,al
   140007296:	adc    BYTE PTR [rax+0x19],dh
   140007299:	and    DWORD PTR [rax],ecx
   14000729b:	add    BYTE PTR [rdx],dl
   14000729d:	push   rsp
   14000729e:	or     eax,0xa341200
   1400072a3:	add    BYTE PTR [rdx],dl
   1400072a5:	push   rdx
   1400072a6:	(bad)  
   1400072a7:	loopne 0x1400072b5
   1400072a9:	jo     0x1400072b6
   1400072ab:	(bad)  
   1400072ac:	sbb    BYTE PTR [rbp+0x0],dl
   1400072af:	add    BYTE PTR [rax],ch
   1400072b1:	add    BYTE PTR [rax],al
   1400072b3:	add    BYTE PTR [rcx],al
   1400072b5:	(bad)  
   1400072b6:	or     al,BYTE PTR [rax]
   1400072b8:	(bad)  
   1400072b9:	in     al,0x15
   1400072bb:	add    BYTE PTR [rsi],bl
   1400072bd:	je     0x1400072d3
   1400072bf:	add    BYTE PTR [rsi],bl
   1400072c1:	adc    eax,DWORD PTR fs:[rax]
   1400072c4:	(bad)  
   1400072c5:	xor    al,0x12
   1400072c7:	add    BYTE PTR [rsi],bl
   1400072c9:	repnz adc al,0x50
   1400072cc:	sbb    DWORD PTR [rdi],ebp
   1400072ce:	or     DWORD PTR [rax],eax
   1400072d0:	(bad)  
   1400072d1:	je     0x14000731c
   1400072d3:	add    DWORD PTR [rsi],ebx
   1400072d5:	add    QWORD PTR fs:[rsi],rbx
   1400072d9:	xor    al,0x47
   1400072db:	add    DWORD PTR [rsi],ebx
   1400072dd:	add    DWORD PTR [rcx+rax*1+0x10],eax
   1400072e1:	push   rax
   1400072e2:	add    BYTE PTR [rax],al
   1400072e4:	sbb    BYTE PTR [rbp+0x0],dl
   1400072e7:	add    BYTE PTR [rax],dl
   1400072e9:	or     al,BYTE PTR [rax]
   1400072eb:	add    BYTE PTR [rcx],bl
   1400072ed:	sbb    al,BYTE PTR [rsi]
   1400072ef:	add    BYTE PTR [rbx],cl
   1400072f1:	push   rdx
   1400072f2:	(bad)  
   1400072f3:	loopne 0x1400072fa
   1400072f5:	jo     0x1400072fb
   1400072f7:	(bad)  
   1400072f8:	add    edx,DWORD PTR [rax+0x2]
   1400072fb:	xor    BYTE PTR [rax],bl
   1400072fd:	push   rbp
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	sub    BYTE PTR [rax],al
   140007302:	add    BYTE PTR [rax],al
   140007304:	sbb    DWORD PTR [rbx],ebx
   140007306:	(bad)  
   140007307:	add    BYTE PTR [rsp+rsi*1],cl
   14000730a:	or     eax,0x8520c00
   14000730f:	jo     0x140007318
   140007311:	(bad)  
   140007312:	(bad)  
   140007313:	push   rax
   140007314:	sbb    BYTE PTR [rbp+0x0],dl
   140007317:	add    BYTE PTR [rax],ch
   140007319:	add    BYTE PTR [rax],al
   14000731b:	add    BYTE PTR [rcx],bl
   14000731d:	(bad)  
   14000731e:	(bad)  
   14000731f:	add    BYTE PTR [rdi],cl
   140007321:	or     eax,DWORD PTR fs:[rax]
   140007324:	sysenter 
   140007326:	or     al,BYTE PTR [rax]
   140007328:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000732b:	jo     0x140007345
   14000732d:	push   rbp
   14000732e:	add    BYTE PTR [rax],al
   140007330:	sub    BYTE PTR [rax],al
   140007332:	add    BYTE PTR [rax],al
   140007334:	sbb    DWORD PTR [rsi],ebx
   140007336:	(bad)  
   140007337:	add    BYTE PTR [rdi],cl
   140007339:	or     al,BYTE PTR fs:[rax]
   14000733c:	sysenter 
   14000733e:	or     DWORD PTR [rax],eax
   140007340:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140007343:	jo     0x14000735d
   140007345:	push   rbp
   140007346:	add    BYTE PTR [rax],al
   140007348:	sub    BYTE PTR [rax],al
   14000734a:	add    BYTE PTR [rax],al
   14000734c:	sbb    DWORD PTR [rsi],ebx
   14000734e:	(bad)  
   14000734f:	add    BYTE PTR [rdi],cl
   140007351:	fs or  al,0x0
   140007354:	sysenter 
   140007356:	or     eax,DWORD PTR [rax]
   140007358:	(bad)  
   14000735a:	or     esi,DWORD PTR [rax+0x18]
   14000735d:	push   rbp
   14000735e:	add    BYTE PTR [rax],al
   140007360:	cmp    BYTE PTR [rax],al
   140007362:	add    BYTE PTR [rax],al
   140007364:	sbb    DWORD PTR [rdi+rax*1],ebx
   140007367:	add    BYTE PTR [rip+0x7f00962],cl        # 0x147f07ccf
   14000736d:	loopne 0x140007374
   14000736f:	jo     0x140007375
   140007371:	(bad)  
   140007372:	add    edx,DWORD PTR [rax+0x2]
   140007375:	xor    BYTE PTR [rax],al
   140007377:	add    BYTE PTR [rax],bl
   140007379:	push   rbp
   14000737a:	add    BYTE PTR [rax],al
   14000737c:	sub    BYTE PTR [rax],al
   14000737e:	add    BYTE PTR [rax],al
   140007380:	add    DWORD PTR [rcx],ebx
   140007382:	or     al,BYTE PTR [rax]
   140007384:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   140007388:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14000738c:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140007390:	sbb    DWORD PTR [rax+rcx*1],esi
   140007393:	add    BYTE PTR [rcx],bl
   140007395:	push   rdx
   140007396:	adc    eax,0xc1f01e0
   14000739b:	add    BYTE PTR [rdi],bl
   14000739d:	sbb    DWORD PTR fs:[rax],eax
   1400073a0:	(bad)  
   1400073a1:	push   rsp
   1400073a2:	sbb    BYTE PTR [rax],al
   1400073a4:	(bad)  
   1400073a5:	xor    al,0x17
   1400073a7:	add    BYTE PTR [rdi],bl
   1400073a9:	repnz sbb al,dh
   1400073ac:	(bad)  
   1400073ad:	loopne 0x1400073c3
   1400073af:	rcl    BYTE PTR [rdx],1
   1400073b1:	rcl    BYTE PTR [rax],0x70
   1400073b4:	add    DWORD PTR [rdi],edx
   1400073b6:	or     BYTE PTR [rax],al
   1400073b8:	(bad)  
   1400073b9:	push   rsp
   1400073ba:	or     eax,0xc341700
   1400073bf:	add    BYTE PTR [rdi],dl
   1400073c1:	jb     0x1400073d6
   1400073c3:	lock adc DWORD PTR [rax+0x10],esi
   1400073c7:	(bad)  
   1400073c8:	add    DWORD PTR [rbx],ecx
   1400073ca:	add    DWORD PTR [rax],eax
   1400073cc:	or     eax,DWORD PTR [rdx+0x18010000]
   1400073d2:	add    DWORD PTR [rax],eax
   1400073d4:	sbb    dl,al
   1400073d6:	add    BYTE PTR [rax],al
   1400073d8:	or     DWORD PTR [rbx+rcx*1],ebx
   1400073db:	add    BYTE PTR [rsp+rsi*2],bl
   1400073de:	sbb    al,0x0
   1400073e0:	sbb    al,0x64
   1400073e2:	sbb    eax,DWORD PTR [rax]
   1400073e4:	sbb    al,0x34
   1400073e6:	sbb    al,BYTE PTR [rax]
   1400073e8:	sbb    al,0x1
   1400073ea:	(bad)  
   1400073eb:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e087e1
   1400073f1:	rol    BYTE PTR [rax],0x0
   1400073f4:	out    0x54,al
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	add    DWORD PTR [rax],eax
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	nop
   1400073fd:	rex.WXB add BYTE PTR [r8],al
   140007400:	xchg   BYTE PTR [rbp+0x0],cl
   140007403:	add    ah,ch
   140007405:	pop    rax
   140007406:	add    BYTE PTR [rax],al
   140007408:	xchg   BYTE PTR [rbp+0x0],cl
   14000740b:	add    BYTE PTR [rax],al
   14000740d:	add    BYTE PTR [rax],al
   14000740f:	add    BYTE PTR [rcx],al
   140007411:	add    BYTE PTR [rax],al
   140007413:	add    BYTE PTR [rcx],dl
   140007415:	or     al,BYTE PTR [rax+rax*1]
   140007418:	or     dh,BYTE PTR [rsi+rax*1]
   14000741b:	add    BYTE PTR [rdx],cl
   14000741d:	xor    al,BYTE PTR [rsi]
   14000741f:	jo     0x140007407
   140007421:	push   rsp
   140007422:	add    BYTE PTR [rax],al
   140007424:	add    DWORD PTR [rax],eax
   140007426:	add    BYTE PTR [rax],al
   140007428:	or     DWORD PTR [rsi+0x0],0x4ec600
   14000742f:	add    BYTE PTR [rax],dl
   140007431:	pop    rcx
   140007432:	add    BYTE PTR [rax],al
   140007434:	add    BYTE PTR [rax],al
   140007436:	add    BYTE PTR [rax],al
   140007438:	add    DWORD PTR [rcx+rax*1],eax
   14000743b:	add    BYTE PTR [rdx+riz*8],al
   14000743e:	add    BYTE PTR [rax],al
   140007440:	add    DWORD PTR [rdx+rax*1],ecx
   140007443:	add    BYTE PTR [rcx+rax*1],cl
   140007446:	adc    DWORD PTR [rax],eax
   140007448:	or     DWORD PTR [rcx+rax*1],eax
   14000744b:	add    BYTE PTR [rdx+riz*1],al
   14000744e:	add    BYTE PTR [rax],al
   140007450:	out    0x54,al
   140007452:	add    BYTE PTR [rax],al
   140007454:	add    DWORD PTR [rax],eax
   140007456:	add    BYTE PTR [rax],al
   140007458:	jl     0x1400074ac
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	mov    dl,0x52
   14000745e:	add    BYTE PTR [rax],al
   140007460:	add    DWORD PTR [rax],eax
   140007462:	add    BYTE PTR [rax],al
   140007464:	mov    dl,0x52
   140007466:	add    BYTE PTR [rax],al
   140007468:	or     DWORD PTR [rdx],ecx
   14000746a:	add    al,0x0
   14000746c:	or     dh,BYTE PTR [rsi+rax*1]
   14000746f:	add    BYTE PTR [rdx],cl
   140007471:	xor    al,BYTE PTR [rsi]
   140007473:	jo     0x14000745b
   140007475:	push   rsp
   140007476:	add    BYTE PTR [rax],al
   140007478:	add    DWORD PTR [rax],eax
   14000747a:	add    BYTE PTR [rax],al
   14000747c:	jge    0x1400074d1
   14000747e:	add    BYTE PTR [rax],al
   140007480:	mov    al,0x53
   140007482:	add    BYTE PTR [rax],al
   140007484:	rex pop rcx
   140007486:	add    BYTE PTR [rax],al
   140007488:	mov    al,0x53
   14000748a:	add    BYTE PTR [rax],al
   14000748c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d7496
   140007492:	or     DWORD PTR [rax],eax
   140007494:	or     eax,0x1500632
   140007499:	add    BYTE PTR [rax],al
   14000749b:	add    BYTE PTR [rcx],al
   14000749d:	sbb    BYTE PTR [rcx],al
   14000749f:	add    BYTE PTR [rax],bl
   1400074a1:	ret    0x0
   1400074a4:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a20474ab
   1400074aa:	add    BYTE PTR [rax],al
   1400074ac:	push   rdx
   1400074ad:	push   rdi
   1400074ae:	add    BYTE PTR [rax],al
   1400074b0:	lock add BYTE PTR fs:[rax],al
   1400074b4:	(bad)  
   1400074b5:	(bad)  
   1400074b6:	(bad)  
   1400074b7:	inc    DWORD PTR [rax]
   1400074b9:	add    BYTE PTR [rax],al
   1400074bb:	add    bh,bh
   1400074bd:	(bad)  
   1400074be:	(bad)  
   1400074bf:	inc    DWORD PTR [rax]
	...
   1400074c9:	add    BYTE PTR [rax],al
   1400074cb:	add    BYTE PTR [rcx],al
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	add    BYTE PTR [rcx],al
   1400074d1:	add    BYTE PTR [rax],al
   1400074d3:	add    al,bl
   1400074d5:	je     0x1400074d7
   1400074d7:	add    BYTE PTR [rax+0x0],al
	...
   1400074e2:	add    BYTE PTR [rax],al
   1400074e4:	pop    cx
   1400074e6:	add    BYTE PTR [rax],al
   1400074e8:	cmp    BYTE PTR [rax],al
   1400074ea:	add    BYTE PTR [rax],al
   1400074ec:	add    BYTE PTR [rax],al
   1400074ee:	add    BYTE PTR [rax],al
   1400074f0:	sub    al,0x57
   1400074f2:	add    BYTE PTR [rax],al
   1400074f4:	(bad)  
   1400074f5:	(bad)  
   1400074f6:	(bad)  
   1400074f7:	(bad)  
   1400074f8:	cmp    DWORD PTR [rdi+0x0],edx
   1400074fb:	add    BYTE PTR [rax],al
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rdi],bh
   140007501:	push   rdi
   140007502:	add    BYTE PTR [rax],al
   140007504:	(bad)  
   140007505:	(bad)  
   140007506:	(bad)  
   140007507:	jmp    QWORD PTR [rsi+0x59]
   14000750a:	add    BYTE PTR [rax],al
   14000750c:	add    BYTE PTR [rax],al
   14000750e:	add    BYTE PTR [rax],al
   140007510:	jae    0x14000756b
   140007512:	add    BYTE PTR [rax],al
   140007514:	add    DWORD PTR [rax],eax
   140007516:	add    BYTE PTR [rax],al
   140007518:	js     0x140007573
   14000751a:	add    BYTE PTR [rax],al
   14000751c:	add    BYTE PTR [rax],al
   14000751e:	add    BYTE PTR [rax],al
   140007520:	sbb    DWORD PTR [rdx],ecx
   140007522:	add    al,BYTE PTR [rax]
   140007524:	or     dh,BYTE PTR [rdx]
   140007526:	(bad)  
   140007527:	push   rax
   140007528:	push   rdx
   140007529:	push   rdi
   14000752a:	add    BYTE PTR [rax],al
   14000752c:	lock add BYTE PTR fs:[rax],al
   140007530:	add    DWORD PTR [rax],ebx
   140007532:	add    DWORD PTR [rax],eax
   140007534:	sbb    dl,al
	...
   14000753e:	add    BYTE PTR [rax],al
   140007540:	and    BYTE PTR [rax+0x14000],dl
	...
   14000754e:	add    BYTE PTR [rax],al
   140007550:	add    DWORD PTR [rax],eax
   140007552:	add    BYTE PTR [rax],al
   140007554:	shl    BYTE PTR [rax+rax*1+0x0],0x80
   140007559:	nop
   14000755a:	add    BYTE PTR [rax],al
   14000755c:	add    BYTE PTR [rax+0x75d00000],dh
   140007562:	add    BYTE PTR [rax],al
   140007564:	cwde   
   140007565:	ja     0x140007567
	...
   14000756f:	add    BYTE PTR [rcx],al
   140007571:	add    BYTE PTR [rax],al
   140007573:	add    al,ah
   140007575:	add    BYTE PTR fs:[rax],al
   140007578:	xor    BYTE PTR [rsi-0x4fd00000],dl
   14000757e:	add    BYTE PTR [rax],al
   140007580:	add    BYTE PTR [rsi+0x0],dh
   140007583:	add    BYTE PTR [rax+0x77],bh
   140007589:	add    BYTE PTR [rax],al
   14000758b:	add    BYTE PTR [rax],al
   14000758d:	add    BYTE PTR [rax],al
   14000758f:	add    BYTE PTR [rcx],al
   140007591:	add    BYTE PTR [rax],al
   140007593:	add    BYTE PTR [rax],ah
   140007595:	add    BYTE PTR gs:[rax],al
   140007598:	cmp    BYTE PTR [rsi-0x4f980000],dl
   14000759e:	add    BYTE PTR [rax],al
   1400075a0:	cmp    BYTE PTR [rsi+0x0],dh
   1400075a3:	add    al,bh
   1400075a5:	ja     0x1400075a7
	...
   1400075cf:	add    BYTE PTR [rax+0x76],ch
   1400075d2:	add    BYTE PTR [rax],al
   1400075d4:	add    BYTE PTR [rax],al
   1400075d6:	add    BYTE PTR [rax],al
   1400075d8:	jl     0x140007650
   1400075da:	add    BYTE PTR [rax],al
   1400075dc:	add    BYTE PTR [rax],al
   1400075de:	add    BYTE PTR [rax],al
   1400075e0:	mov    WORD PTR [rsi+0x0],?
   1400075e3:	add    BYTE PTR [rax],al
   1400075e5:	add    BYTE PTR [rax],al
   1400075e7:	add    BYTE PTR [rsi+0x77],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rax],dl
   1400075f1:	ja     0x1400075f3
	...
   1400075ff:	add    dl,ah
   140007601:	jbe    0x140007603
   140007603:	add    BYTE PTR [rax],al
   140007605:	add    BYTE PTR [rax],al
   140007607:	add    dl,dl
   140007609:	jbe    0x14000760b
   14000760b:	add    BYTE PTR [rax],al
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    al,al
   140007611:	jbe    0x140007613
   140007613:	add    BYTE PTR [rax],al
   140007615:	add    BYTE PTR [rax],al
   140007617:	add    BYTE PTR [rsi+0x76],ch
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    BYTE PTR [rdx+0x76],bl
   140007625:	add    BYTE PTR [rax],al
   140007627:	add    al,bh
   140007629:	jbe    0x14000762b
	...
   140007637:	add    BYTE PTR [rdi+rsi*2+0x0],bl
   14000763b:	add    BYTE PTR [rax],al
   14000763d:	add    BYTE PTR [rax],al
   14000763f:	add    BYTE PTR [rax+0x77],cl
   140007642:	add    BYTE PTR [rax],al
   140007644:	add    BYTE PTR [rax],al
   140007646:	add    BYTE PTR [rax],al
   140007648:	xor    BYTE PTR [rdi+0x0],dh
   14000764b:	add    BYTE PTR [rax],al
   14000764d:	add    BYTE PTR [rax],al
   14000764f:	add    BYTE PTR [rsi],bl
   140007651:	ja     0x140007653
   140007653:	add    BYTE PTR [rax],al
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rsi+0x77],ch
	...
   14000766a:	push   rdx
   14000766b:	gs addr32 push rcx
   14000766e:	jne    0x1400076d5
   140007670:	jb     0x1400076eb
   140007672:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007674:	outs   dx,WORD PTR ds:[rsi]
   140007676:	rex.WXB
   140007677:	gs jns 0x1400076d1
   14000767a:	add    BYTE PTR [rax],al
   14000767c:	add    BYTE PTR [rax],al
   14000767e:	push   rdx
   14000767f:	gs addr32 rex.WRXB jo 0x1400076e9
   140007684:	outs   dx,BYTE PTR ds:[rsi]
   140007685:	rex.WXB
   140007686:	gs jns 0x1400076ce
   140007689:	js     0x1400076e2
   14000768b:	add    BYTE PTR [rax],al
   14000768d:	add    BYTE PTR [rdx+0x65],dl
   140007690:	rex.XB ins BYTE PTR es:[edi],dx
   140007693:	outs   dx,DWORD PTR ds:[rsi]
   140007694:	jae    0x1400076fb
   140007696:	rex.WXB
   140007697:	gs jns 0x14000769a
   14000769a:	add    BYTE PTR [rax],al
   14000769c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000769e:	rex.XB jb 0x140007706
   1400076a1:	(bad)  
   1400076a2:	je     0x140007709
   1400076a4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400076a6:	jae    0x14000771c
   1400076a8:	(bad)  
   1400076a9:	outs   dx,BYTE PTR ds:[rsi]
   1400076aa:	movsxd esp,DWORD PTR [rbp+0x0]
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rbx+0x6f],al
   1400076b2:	push   rbp
   1400076b3:	outs   dx,BYTE PTR ds:[rsi]
   1400076b4:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400076bb:	imul   edi,DWORD PTR [rdx+0x65],0x0
   1400076c2:	push   rbx
   1400076c3:	je     0x140007737
   1400076c5:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f7246
   1400076cc:	rex.RXB push r13
   1400076ce:	rex.WB
   1400076cf:	xor    r8b,BYTE PTR [rax]
   1400076d2:	add    BYTE PTR [rax],al
   1400076d4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400076d6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400076d8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400076e0:	add    BYTE PTR [rax],al
   1400076e2:	add    BYTE PTR [rax],al
   1400076e4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400076e6:	push   rdx
   1400076e7:	gs jbe 0x140007759
   1400076ea:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   1400076ee:	(bad)  
   1400076ef:	jae    0x140007764
   1400076f1:	rex.WRXB (bad) 
   1400076f3:	push   0x65
   1400076f5:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   1400076f9:	add    BYTE PTR [rbx+0x6f],al
   1400076fc:	push   rdx
   1400076fd:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   140007706:	(bad)  
   140007707:	jae    0x14000777c
   140007709:	rex.WRXB (bad) 
   14000770b:	push   0x65
   14000770d:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140007711:	add    BYTE PTR [rbp+0x76],al
   140007714:	outs   dx,BYTE PTR gs:[rsi]
   140007716:	je     0x14000776f
   140007718:	jb     0x140007783
   14000771a:	je     0x140007781
   14000771c:	add    BYTE PTR [rax],al
   14000771e:	add    BYTE PTR [rax],al
   140007720:	push   rdi
   140007721:	gs jb  0x140007776
   140007724:	gs jo  0x140007796
   140007727:	jb     0x14000779d
   140007729:	rex.XB jb 0x140007791
   14000772c:	(bad)  
   14000772d:	je     0x140007794
   14000772f:	add    BYTE PTR [rax],al
   140007731:	add    BYTE PTR [rdi+0x65],dl
   140007734:	jb     0x140007788
   140007736:	gs jo  0x1400077a8
   140007739:	jb     0x1400077af
   14000773b:	push   rbx
   14000773c:	gs je  0x14000778f
   14000773f:	(bad)  
   140007740:	jb     0x1400077a3
   140007742:	ins    DWORD PTR es:[rdi],dx
   140007743:	gs je  0x1400077ab
   140007746:	jb     0x140007748
   140007748:	add    BYTE PTR [rax],al
   14000774a:	push   rdi
   14000774b:	gs jb  0x1400077a0
   14000774e:	gs jo  0x1400077c0
   140007751:	jb     0x1400077c7
   140007753:	rex.B
   140007754:	fs fs rex.R jne 0x1400077c6
   140007759:	jo     0x14000775b
   14000775b:	add    BYTE PTR [rax],al
   14000775d:	add    BYTE PTR [rdi+0x65],dl
   140007760:	jb     0x1400077b4
   140007762:	gs jo  0x1400077d4
   140007765:	jb     0x1400077db
   140007767:	push   rbx
   140007768:	jne    0x1400077cc
   14000776a:	ins    DWORD PTR es:[rdi],dx
   14000776b:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x72655700
   140007773:	push   rdx
   140007774:	gs jo  0x1400077e6
   140007777:	jb     0x1400077ed
   140007779:	rex.XB ins BYTE PTR es:[rdi],dx
   14000777b:	outs   dx,DWORD PTR ds:[rsi]
   14000777c:	jae    0x1400077e3
   14000777e:	rex.W (bad) 
   140007780:	outs   dx,BYTE PTR ds:[rsi]
   140007781:	fs ins BYTE PTR es:[rdi],dx
   140007783:	add    BYTE PTR gs:[rax],al
   140007786:	add    BYTE PTR [rax],al
   140007788:	push   rdx
   140007789:	gs addr32 rex.RXB
   14000778c:	gs je  0x1400077e5
   14000778f:	(bad)  
   140007790:	ins    BYTE PTR es:[rdi],dx
   140007791:	jne    0x1400077f8
   140007793:	push   rdi
	...
   140007830:	sar    BYTE PTR [rax+0x0],0x0
	...
   14000783c:	pushf  
   14000783d:	jl     0x14000783f
   14000783f:	add    BYTE PTR [rax],al
   140007841:	(bad)  
   140007842:	add    BYTE PTR [rax],al
   140007844:	xor    BYTE PTR [rdx+0x0],bh
	...
   14000784f:	add    BYTE PTR [rax],dl
   140007851:	jge    0x140007853
   140007853:	add    BYTE PTR [rax+0x61],dh
   140007856:	add    BYTE PTR [rax],al
   140007858:	jo     0x1400078d4
	...
   140007862:	add    BYTE PTR [rax],al
   140007864:	es jle 0x140007867
   140007867:	add    BYTE PTR [rax+0x58000061],dh
   14000786d:	jnp    0x14000786f
	...
   140007877:	add    BYTE PTR [rdx-0x67ffff82],dh
   14000787d:	(bad)  
   14000787e:	add    BYTE PTR [rax],al
   140007880:	adc    BYTE PTR [rdx+0x0],bh
	...
   14000788b:	add    BYTE PTR [rdx+0x5000007f],cl
   140007891:	(bad)  
   140007892:	add    BYTE PTR [rax],al
   140007894:	fdivr  DWORD PTR [rcx+0x0]
	...
   14000789f:	add    BYTE PTR [rsi+0x1800007f],dl
   1400078a5:	(bad)  
	...
   1400078be:	add    BYTE PTR [rax],al
   1400078c0:	js     0x14000793d
   1400078c2:	add    BYTE PTR [rax],al
   1400078c4:	add    BYTE PTR [rax],al
   1400078c6:	add    BYTE PTR [rax],al
   1400078c8:	mov    bh,BYTE PTR [rbx+0x0]
   1400078cb:	add    BYTE PTR [rax],al
   1400078cd:	add    BYTE PTR [rax],al
   1400078cf:	add    BYTE PTR [rbx+rdi*2+0x0],bl
   1400078d6:	add    BYTE PTR [rax],al
   1400078d8:	mov    dl,0x7b
   1400078da:	add    BYTE PTR [rax],al
   1400078dc:	add    BYTE PTR [rax],al
   1400078de:	add    BYTE PTR [rax],al
   1400078e0:	mov    esi,0x7b
   1400078e5:	add    BYTE PTR [rax],al
   1400078e7:	add    dl,dl
   1400078e9:	jnp    0x1400078eb
   1400078eb:	add    BYTE PTR [rax],al
   1400078ed:	add    BYTE PTR [rax],al
   1400078ef:	add    dh,ch
   1400078f1:	jnp    0x1400078f3
   1400078f3:	add    BYTE PTR [rax],al
   1400078f5:	add    BYTE PTR [rax],al
   1400078f7:	add    dh,dh
   1400078f9:	jnp    0x1400078fb
   1400078fb:	add    BYTE PTR [rax],al
   1400078fd:	add    BYTE PTR [rax],al
   1400078ff:	add    BYTE PTR [rsp+rdi*2],cl
   140007902:	add    BYTE PTR [rax],al
   140007904:	add    BYTE PTR [rax],al
   140007906:	add    BYTE PTR [rax],al
   140007908:	(bad)  
   140007909:	jl     0x14000790b
   14000790b:	add    BYTE PTR [rax],al
   14000790d:	add    BYTE PTR [rax],al
   14000790f:	add    BYTE PTR [rsi],ch
   140007911:	jl     0x140007913
   140007913:	add    BYTE PTR [rax],al
   140007915:	add    BYTE PTR [rax],al
   140007917:	add    BYTE PTR [rax+0x7c],al
   14000791a:	add    BYTE PTR [rax],al
   14000791c:	add    BYTE PTR [rax],al
   14000791e:	add    BYTE PTR [rax],al
   140007920:	push   rax
   140007921:	jl     0x140007923
   140007923:	add    BYTE PTR [rax],al
   140007925:	add    BYTE PTR [rax],al
   140007927:	add    BYTE PTR [rax+0x7c],ch
   14000792a:	add    BYTE PTR [rax],al
   14000792c:	add    BYTE PTR [rax],al
   14000792e:	add    BYTE PTR [rax],al
   140007930:	jle    0x1400079ae
   140007932:	add    BYTE PTR [rax],al
   140007934:	add    BYTE PTR [rax],al
   140007936:	add    BYTE PTR [rax],al
   140007938:	mov    WORD PTR [rax+rax*1+0x0],?
   14000793c:	add    BYTE PTR [rax],al
   14000793e:	add    BYTE PTR [rax],al
   140007940:	xor    BYTE PTR [rax+0x0],al
   140007946:	add    BYTE PTR [rax],al
   140007948:	sbb    al,BYTE PTR [rax+0x0]
   14000794e:	add    BYTE PTR [rax],al
   140007950:	(bad)  
   140007951:	jg     0x140007953
   140007953:	add    BYTE PTR [rax],al
   140007955:	add    BYTE PTR [rax],al
   140007957:	add    BYTE PTR [rdx+0x7f],dh
   14000795d:	add    BYTE PTR [rax],al
   14000795f:	add    BYTE PTR [rdi+rdi*2+0x0],ah
   140007966:	add    BYTE PTR [rax],al
   140007968:	jp     0x1400079e9
   14000796a:	add    BYTE PTR [rax],al
   14000796c:	add    BYTE PTR [rax],al
   14000796e:	add    BYTE PTR [rax],al
   140007970:	(bad)  
   140007971:	jg     0x140007973
   140007973:	add    BYTE PTR [rax],al
   140007975:	add    BYTE PTR [rax],al
   140007977:	add    BYTE PTR [rdx+0x7f],cl
   14000797a:	add    BYTE PTR [rax],al
   14000797c:	add    BYTE PTR [rax],al
   14000797e:	add    BYTE PTR [rax],al
   140007980:	xor    BYTE PTR [rdi+0x0],bh
   140007983:	add    BYTE PTR [rax],al
   140007985:	add    BYTE PTR [rax],al
   140007987:	add    BYTE PTR [rdi+rdi*2],bl
   14000798a:	add    BYTE PTR [rax],al
   14000798c:	add    BYTE PTR [rax],al
   14000798e:	add    BYTE PTR [rax],al
   140007990:	or     BYTE PTR [rdi+0x0],bh
   140007993:	add    BYTE PTR [rax],al
   140007995:	add    BYTE PTR [rax],al
   140007997:	add    dl,ch
   140007999:	jle    0x14000799b
   14000799b:	add    BYTE PTR [rax],al
   14000799d:	add    BYTE PTR [rax],al
   14000799f:	add    dh,cl
   1400079a1:	jle    0x1400079a3
   1400079a3:	add    BYTE PTR [rax],al
   1400079a5:	add    BYTE PTR [rax],al
   1400079a7:	add    BYTE PTR [rsi+rdi*2+0x0],bh
   1400079ae:	add    BYTE PTR [rax],al
   1400079b0:	push   rsi
   1400079b1:	add    BYTE PTR [rax],0x0
   1400079b4:	add    BYTE PTR [rax],al
   1400079b6:	add    BYTE PTR [rax],al
   1400079b8:	outs   dx,BYTE PTR ds:[rsi]
   1400079b9:	add    BYTE PTR [rax],0x0
   1400079bc:	add    BYTE PTR [rax],al
   1400079be:	add    BYTE PTR [rax],al
   1400079c0:	nop
   1400079c1:	add    BYTE PTR [rax],0x0
   1400079c4:	add    BYTE PTR [rax],al
   1400079c6:	add    BYTE PTR [rax],al
   1400079c8:	rex.X add BYTE PTR [rax],0x0
	...
   1400079d8:	movabs eax,ds:0x680000000000000
   1400079e1:	add    BYTE PTR [rax],al
   1400079e3:	add    BYTE PTR [rax],al
   1400079e5:	add    BYTE PTR [rax],al
   1400079e7:	and    BYTE PTR [rbx+0x0],0x0
   1400079ee:	add    BYTE PTR [rax+0x2],al
   1400079f4:	add    BYTE PTR [rax],al
   1400079f6:	add    BYTE PTR [rax+0x7],al
   1400079fc:	add    BYTE PTR [rax],al
   1400079fe:	add    BYTE PTR [rax+0xba],al
   140007a04:	add    BYTE PTR [rax],al
   140007a06:	add    BYTE PTR [rax+0x0],al
   140007a0c:	add    BYTE PTR [rax],al
   140007a0e:	add    BYTE PTR [rax],al
   140007a10:	(bad)  
   140007a11:	add    BYTE PTR [rax],0x0
   140007a14:	add    BYTE PTR [rax],al
   140007a16:	add    BYTE PTR [rax],al
   140007a18:	fild   DWORD PTR [rax]
   140007a1a:	add    BYTE PTR [rax],al
   140007a1c:	add    BYTE PTR [rax],al
   140007a1e:	add    BYTE PTR [rax+0x10],al
   140007a24:	add    BYTE PTR [rax],al
   140007a26:	add    BYTE PTR [rax+0x0],al
   140007a2c:	add    BYTE PTR [rax],al
   140007a2e:	add    BYTE PTR [rax],al
   140007a30:	loop   0x140007aae
   140007a32:	add    BYTE PTR [rax],al
   140007a34:	add    BYTE PTR [rax],al
   140007a36:	add    BYTE PTR [rax],al
   140007a38:	(bad)  
   140007a39:	jl     0x140007a3b
   140007a3b:	add    BYTE PTR [rax],al
   140007a3d:	add    BYTE PTR [rax],al
   140007a3f:	add    ah,bl
   140007a41:	jg     0x140007a43
   140007a43:	add    BYTE PTR [rax],al
   140007a45:	add    BYTE PTR [rax],al
   140007a47:	add    BYTE PTR [rdx+0x7c],ch
   140007a4d:	add    BYTE PTR [rax],al
   140007a4f:	add    dh,dh
   140007a51:	jl     0x140007a53
   140007a53:	add    BYTE PTR [rax],al
   140007a55:	add    BYTE PTR [rax],al
   140007a57:	add    BYTE PTR [rdx],al
   140007a59:	jge    0x140007a5b
   140007a5b:	add    BYTE PTR [rax],al
   140007a5d:	add    BYTE PTR [rax],al
   140007a5f:	add    BYTE PTR [rsi+0x7c],bh
	...
   140007a6d:	add    BYTE PTR [rax],al
   140007a6f:	add    BYTE PTR [rdx+0x7d],ch
   140007a72:	add    BYTE PTR [rax],al
   140007a74:	add    BYTE PTR [rax],al
   140007a76:	add    BYTE PTR [rax],al
   140007a78:	push   rsp
   140007a79:	jge    0x140007a7b
   140007a7b:	add    BYTE PTR [rax],al
   140007a7d:	add    BYTE PTR [rax],al
   140007a7f:	add    BYTE PTR [rax+0x7d],cl
   140007a82:	add    BYTE PTR [rax],al
   140007a84:	add    BYTE PTR [rax],al
   140007a86:	add    BYTE PTR [rax],al
   140007a88:	cmp    al,0x7d
   140007a8a:	add    BYTE PTR [rax],al
   140007a8c:	add    BYTE PTR [rax],al
   140007a8e:	add    BYTE PTR [rax],al
   140007a90:	xor    BYTE PTR [rbp+0x0],bh
   140007a93:	add    BYTE PTR [rax],al
   140007a95:	add    BYTE PTR [rax],al
   140007a97:	add    BYTE PTR [rax],ch
   140007a99:	jge    0x140007a9b
   140007a9b:	add    BYTE PTR [rax],al
   140007a9d:	add    BYTE PTR [rax],al
   140007a9f:	add    BYTE PTR [rdi*2+0x0],bl
   140007aa6:	add    BYTE PTR [rax],al
   140007aa8:	je     0x140007b27
   140007aaa:	add    BYTE PTR [rax],al
   140007aac:	add    BYTE PTR [rax],al
   140007aae:	add    BYTE PTR [rax],al
   140007ab0:	(bad)  
   140007ab1:	jge    0x140007ab3
   140007ab3:	add    BYTE PTR [rax],al
   140007ab5:	add    BYTE PTR [rax],al
   140007ab7:	add    BYTE PTR [rax+0x7d],dl
   140007abd:	add    BYTE PTR [rax],al
   140007abf:	add    BYTE PTR [rdx+0x7d],ah
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    BYTE PTR [rbp+rdi*2+0x0],dh
   140007ace:	add    BYTE PTR [rax],al
   140007ad0:	mov    esp,0x7d
   140007ad5:	add    BYTE PTR [rax],al
   140007ad7:	add    ah,al
   140007ad9:	jge    0x140007adb
   140007adb:	add    BYTE PTR [rax],al
   140007add:	add    BYTE PTR [rax],al
   140007adf:	add    dh,cl
   140007ae1:	jge    0x140007ae3
   140007ae3:	add    BYTE PTR [rax],al
   140007ae5:	add    BYTE PTR [rax],al
   140007ae7:	add    dl,ah
   140007ae9:	jge    0x140007aeb
   140007aeb:	add    BYTE PTR [rax],al
   140007aed:	add    BYTE PTR [rax],al
   140007aef:	add    dh,ch
   140007af1:	jge    0x140007af3
   140007af3:	add    BYTE PTR [rax],al
   140007af5:	add    BYTE PTR [rax],al
   140007af7:	add    BYTE PTR [rsi],al
   140007af9:	jle    0x140007afb
   140007afb:	add    BYTE PTR [rax],al
   140007afd:	add    BYTE PTR [rax],al
   140007aff:	add    BYTE PTR [rsi+rdi*2+0x0],bl
   140007b03:	add    BYTE PTR [rax],al
   140007b05:	add    BYTE PTR [rax],al
   140007b07:	add    BYTE PTR [rax],dl
   140007b09:	jle    0x140007b0b
   140007b0b:	add    BYTE PTR [rax],al
   140007b0d:	add    BYTE PTR [rax],al
   140007b0f:	add    BYTE PTR [rsi+rdi*2+0x0],al
   140007b13:	add    BYTE PTR [rax],al
   140007b15:	add    BYTE PTR [rax],al
   140007b17:	add    BYTE PTR [rdx],bh
   140007b19:	jle    0x140007b1b
   140007b1b:	add    BYTE PTR [rax],al
   140007b1d:	add    BYTE PTR [rax],al
   140007b1f:	add    al,dh
   140007b21:	jg     0x140007b23
   140007b23:	add    BYTE PTR [rax],al
   140007b25:	add    BYTE PTR [rax],al
   140007b27:	add    BYTE PTR [rdx],dh
   140007b29:	jle    0x140007b2b
   140007b2b:	add    BYTE PTR [rax],al
   140007b2d:	add    BYTE PTR [rax],al
   140007b2f:	add    BYTE PTR [rsi+0x7d],bl
   140007b32:	add    BYTE PTR [rax],al
   140007b34:	add    BYTE PTR [rax],al
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	sbb    bh,BYTE PTR [rsi+0x0]
   140007b3b:	add    BYTE PTR [rax],al
   140007b3d:	add    BYTE PTR [rax],al
   140007b3f:	add    BYTE PTR [rdx+0x7e],dl
   140007b42:	add    BYTE PTR [rax],al
   140007b44:	add    BYTE PTR [rax],al
   140007b46:	add    BYTE PTR [rax],al
   140007b48:	test   al,0x80
	...
   140007b56:	add    BYTE PTR [rax],al
   140007b58:	test   BYTE PTR [rsi+0x0],bh
   140007b5b:	add    BYTE PTR [rax],al
   140007b5d:	add    BYTE PTR [rax],al
   140007b5f:	add    BYTE PTR [rax+0x7e],dh
   140007b62:	add    BYTE PTR [rax],al
   140007b64:	add    BYTE PTR [rax],al
   140007b66:	add    BYTE PTR [rax],al
   140007b68:	sahf   
   140007b69:	jle    0x140007b6b
	...
   140007b77:	add    al,dl
   140007b79:	add    DWORD PTR [rdi+0x65],eax
   140007b7c:	je     0x140007bc1
   140007b7e:	outs   dx,DWORD PTR ds:[rsi]
   140007b7f:	ins    DWORD PTR es:[rdi],dx
   140007b80:	ins    DWORD PTR es:[rdi],dx
   140007b81:	(bad)  
   140007b82:	outs   dx,BYTE PTR ds:[rsi]
   140007b83:	imul   r13,QWORD PTR fs:[rsi+0x65],0x3ae0057
   140007b8c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007b8e:	(bad)  
   140007b8f:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140007b98:	js     0x140007bf1
   140007b9a:	add    BYTE PTR [rax],al
   140007b9c:	enter  0x5705,0x61
   140007ba0:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   140007ba8:	ins    BYTE PTR es:[edi],dx
   140007baa:	gs rex.WRXB (bad) 
   140007bad:	push   0x65
   140007baf:	movsxd esi,DWORD PTR [rax+rax*1+0x8]
   140007bb3:	add    eax,0x45746553
   140007bb8:	jbe    0x140007c1f
   140007bba:	outs   dx,BYTE PTR ds:[rsi]
   140007bbb:	je     0x140007bbd
   140007bbd:	add    BYTE PTR [rsi+0x2],ch
   140007bc0:	rex.RXB
   140007bc1:	gs je  0x140007c11
   140007bc4:	outs   dx,DWORD PTR ds:[rsi]
   140007bc5:	fs jne 0x140007c34
   140007bc8:	gs rex.W (bad) 
   140007bcb:	outs   dx,BYTE PTR ds:[rsi]
   140007bcc:	fs ins BYTE PTR es:[rdi],dx
   140007bce:	gs push rdi
   140007bd0:	add    BYTE PTR [rax],al
   140007bd2:	push   rsp
   140007bd3:	add    ecx,DWORD PTR [rcx+0x6e]
   140007bd6:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007bde:	rex.XB jb 0x140007c4a
   140007be1:	je     0x140007c4c
   140007be3:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007be6:	push   rbx
   140007be7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007bec:	outs   dx,BYTE PTR ds:[rsi]
   140007bed:	add    BYTE PTR [rbp+0x5],ch
   140007bf0:	push   rbx
   140007bf1:	ins    BYTE PTR es:[rdi],dx
   140007bf2:	gs gs jo 0x140007bf6
   140007bf6:	push   0x2
   140007bf8:	rex.RXB
   140007bf9:	gs je  0x140007c49
   140007bfc:	outs   dx,DWORD PTR ds:[rsi]
   140007bfd:	fs jne 0x140007c6c
   140007c00:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140007c0a:	add    BYTE PTR [rax],al
   140007c0c:	rex.WR add al,0x52
   140007c0f:	(bad)  
   140007c10:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140007c17:	jo     0x140007c8d
   140007c19:	imul   ebp,DWORD PTR [rdi+0x6e],0x2570000
   140007c20:	rex.RXB
   140007c21:	gs je  0x140007c70
   140007c24:	(bad)  
   140007c25:	jae    0x140007c9b
   140007c27:	rex.RB jb 0x140007c9c
   140007c2a:	outs   dx,DWORD PTR ds:[rsi]
   140007c2b:	jb     0x140007c2d
   140007c2d:	add    BYTE PTR [rbp+0x74654702],ah
   140007c33:	push   rax
   140007c34:	jb     0x140007ca5
   140007c36:	movsxd eax,DWORD PTR [rcx+0x64]
   140007c39:	fs jb  0x140007ca1
   140007c3c:	jae    0x140007cb1
   140007c3e:	add    BYTE PTR [rax],al
   140007c40:	mov    ah,0x0
   140007c42:	rex.XB jb 0x140007caa
   140007c45:	(bad)  
   140007c46:	je     0x140007cad
   140007c48:	rex.RB jbe 0x140007cb0
   140007c4b:	outs   dx,BYTE PTR ds:[rsi]
   140007c4c:	je     0x140007ca5
   140007c4e:	add    BYTE PTR [rax],al
   140007c50:	add    eax,0x6c654401
   140007c55:	gs je  0x140007cbd
   140007c58:	rex.XB jb 0x140007cc4
   140007c5b:	je     0x140007cc6
   140007c5d:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007c60:	push   rbx
   140007c61:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007c66:	outs   dx,BYTE PTR ds:[rsi]
   140007c67:	add    BYTE PTR [rip+0x74654702],dl        # 0x1b465c36f
   140007c6d:	rex.XB jne 0x140007ce2
   140007c70:	jb     0x140007cd7
   140007c72:	outs   dx,BYTE PTR ds:[rsi]
   140007c73:	je     0x140007cc9
   140007c75:	push   0x64616572
   140007c7a:	rex.WB
   140007c7b:	add    BYTE PTR fs:[rax],al
   140007c7e:	jge    0x140007c80
   140007c80:	rex.XB ins BYTE PTR es:[rdi],dx
   140007c82:	outs   dx,DWORD PTR ds:[rsi]
   140007c83:	jae    0x140007cea
   140007c85:	rex.W (bad) 
   140007c87:	outs   dx,BYTE PTR ds:[rsi]
   140007c88:	fs ins BYTE PTR es:[rdi],dx
   140007c8a:	gs add dh,ah
   140007c8d:	add    BYTE PTR [rbx+0x72],al
   140007c90:	gs (bad) 
   140007c92:	je     0x140007cf9
   140007c94:	push   rsp
   140007c95:	push   0x64616572
   140007c9a:	add    BYTE PTR [rax],al
   140007c9c:	rex.WXB
   140007c9d:	rex.RB push r10
   140007c9f:	rex.WRX
   140007ca0:	rex.RB
   140007ca1:	xor    r14,QWORD PTR [rdx]
   140007ca4:	cs fs ins BYTE PTR es:[rdi],dx
   140007ca7:	ins    BYTE PTR es:[rdi],dx
   140007ca8:	add    BYTE PTR [rax],al
   140007caa:	mov    dh,0x0
   140007cac:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   140007cb4:	rex.WRB
   140007cb5:	gs jae 0x140007d2b
   140007cb8:	(bad)  
   140007cb9:	addr32 gs push rdi
   140007cbc:	add    BYTE PTR [rax],al
   140007cbe:	xchg   BYTE PTR [rdx],al
   140007cc0:	push   rax
   140007cc1:	outs   dx,DWORD PTR ds:[rsi]
   140007cc2:	jae    0x140007d38
   140007cc4:	push   rsp
   140007cc5:	push   0x64616572
   140007cca:	rex.WRB
   140007ccb:	gs jae 0x140007d41
   140007cce:	(bad)  
   140007ccf:	addr32 gs push rdi
   140007cd2:	add    BYTE PTR [rax],al
   140007cd4:	cmp    al,0x0
   140007cd6:	rex.XB push 0x70557261
   140007cdc:	jo     0x140007d43
   140007cde:	jb     0x140007d37
   140007ce0:	add    BYTE PTR [rax],al
   140007ce2:	imul   eax,DWORD PTR [rbx],0x54
   140007ce5:	jb     0x140007d48
   140007ce7:	outs   dx,BYTE PTR ds:[rsi]
   140007ce8:	jae    0x140007d56
   140007cea:	(bad)  
   140007ceb:	je     0x140007d52
   140007ced:	rex.WRB
   140007cee:	gs jae 0x140007d64
   140007cf1:	(bad)  
   140007cf2:	add    BYTE PTR gs:[eax],al
   140007cf6:	xor    DWORD PTR [rax],eax
   140007cf8:	rex.XB push 0x654e7261
   140007cfe:	js     0x140007d74
   140007d00:	push   rdi
   140007d01:	add    BYTE PTR [rax+0x1],bh
   140007d04:	rex.RXB
   140007d05:	gs je  0x140007d55
   140007d08:	gs jae 0x140007d7e
   140007d0b:	(bad)  
   140007d0c:	addr32 gs push rdi
   140007d0f:	add    BYTE PTR [rbp+0x53],dl
   140007d12:	rex.RB push r10
   140007d14:	xor    esi,DWORD PTR [rdx]
   140007d16:	cs fs ins BYTE PTR es:[rdi],dx
   140007d19:	ins    BYTE PTR es:[rdi],dx
   140007d1a:	add    BYTE PTR [rax],al
   140007d1c:	or     eax,0x73637705
   140007d21:	outs   dx,BYTE PTR ds:[rsi]
   140007d22:	movsxd esi,DWORD PTR [rax+0x79]
   140007d25:	pop    rdi
   140007d26:	jae    0x140007d28
   140007d28:	rex.WR add al,0x66
   140007d2b:	jb     0x140007d92
   140007d2d:	add    BYTE PTR gs:[rax],al
   140007d30:	sahf   
   140007d31:	add    bl,BYTE PTR [rdi+0x70]
   140007d34:	jne    0x140007da8
   140007d36:	movsxd esp,DWORD PTR gs:[rcx+0x6c]
   140007d3a:	ins    BYTE PTR es:[rdi],dx
   140007d3b:	add    BYTE PTR [rax],al
   140007d3d:	add    eax,0x63736377
   140007d42:	(bad)  
   140007d43:	je     0x140007da4
   140007d45:	jae    0x140007d47
   140007d47:	add    BYTE PTR [rip+0x73637705],al        # 0x1b363f452
   140007d4d:	movsxd esi,DWORD PTR [rax+0x79]
   140007d50:	pop    rdi
   140007d51:	jae    0x140007d53
   140007d53:	add    BYTE PTR [rsi+0x6c616d04],al
   140007d59:	ins    BYTE PTR es:[rdi],dx
   140007d5a:	outs   dx,DWORD PTR ds:[rsi]
   140007d5b:	movsxd eax,DWORD PTR [rax]
   140007d5d:	add    BYTE PTR [rdi+0x61635f00],bh
   140007d63:	ins    BYTE PTR es:[rdi],dx
   140007d64:	ins    BYTE PTR es:[rdi],dx
   140007d65:	outs   dx,BYTE PTR ds:[rsi]
   140007d66:	gs ja  0x140007dd1
   140007d69:	add    BYTE PTR [rsi+0x6d656d04],dl
   140007d6f:	jae    0x140007dd6
   140007d71:	je     0x140007d73
   140007d73:	add    BYTE PTR [rbp+0x0],dl
   140007d76:	pop    rdi
   140007d77:	pop    rax
   140007d78:	movsxd esi,DWORD PTR [rax+0x74]
   140007d7b:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140007d84:	pop    rdi
   140007d85:	(bad)  
   140007d86:	ins    DWORD PTR es:[rdi],dx
   140007d87:	jae    0x140007df0
   140007d89:	pop    rdi
   140007d8a:	gs js  0x140007df6
   140007d8d:	je     0x140007d8f
   140007d8f:	add    BYTE PTR [rbp+0x775f5f00],bl
   140007d95:	addr32 gs je 0x140007e06
   140007d99:	(bad)  
   140007d9a:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140007da1:	add    BYTE PTR [rsi+0x735f5f00],cl
   140007da7:	gs je  0x140007e09
   140007daa:	(bad)  
   140007dab:	jo     0x140007e1d
   140007dad:	pop    rdi
   140007dae:	je     0x140007e29
   140007db0:	jo     0x140007e17
   140007db2:	add    BYTE PTR [rax],al
   140007db4:	xor    al,BYTE PTR [riz*2+0x746978]
   140007dbb:	add    BYTE PTR [rsi],cl
   140007dbd:	add    DWORD PTR [rdi+0x65],ebx
   140007dc0:	js     0x140007e2b
   140007dc2:	je     0x140007dc4
   140007dc4:	rol    DWORD PTR [rax],0x5f
   140007dc7:	movsxd esp,DWORD PTR [rbp+0x78]
   140007dca:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140007dd2:	jae    0x140007e39
   140007dd4:	je     0x140007e4b
   140007dd6:	jae    0x140007e3d
   140007dd8:	jb     0x140007e47
   140007dda:	(bad)  
   140007ddb:	je     0x140007e45
   140007ddd:	gs jb  0x140007e52
   140007de0:	add    BYTE PTR [rax],al
   140007de2:	jge    0x140007de5
   140007de4:	pop    rdi
   140007de5:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140007dec:	ins    DWORD PTR es:[rdi],dx
   140007ded:	add    BYTE PTR [rdi+0x0],dl
   140007df0:	pop    rdi
   140007df1:	pop    rdi
   140007df2:	rex.XB pop r15
   140007df4:	jae    0x140007e66
   140007df6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140007dfa:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140007e01:	ins    BYTE PTR es:[rdi],dx
   140007e02:	gs jb  0x140007e05
   140007e05:	add    BYTE PTR [rdx+0x63775f03],al
   140007e0b:	ins    DWORD PTR es:[rdi],dx
   140007e0c:	fs ins BYTE PTR es:[rdi],dx
   140007e0e:	outs   dx,BYTE PTR ds:[rsi]
   140007e0f:	add    BYTE PTR [rdi],ah
   140007e11:	add    DWORD PTR [rdi+0x66],ebx
   140007e14:	ins    DWORD PTR es:[rdi],dx
   140007e15:	outs   dx,DWORD PTR ds:[rsi]
   140007e16:	fs add BYTE PTR gs:[rax],al
   140007e1a:	rol    BYTE PTR [rax],cl
   140007e1c:	pop    rdi
   140007e1d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140007e20:	ins    DWORD PTR es:[rdi],dx
   140007e21:	outs   dx,DWORD PTR ds:[rsi]
   140007e22:	fs add BYTE PTR gs:[rax],al
   140007e26:	ins    DWORD PTR es:[rdi],dx
   140007e27:	jae    0x140007e9f
   140007e29:	movsxd esi,DWORD PTR [rdx+0x74]
   140007e2c:	cs fs ins BYTE PTR es:[rdi],dx
   140007e2f:	ins    BYTE PTR es:[rdi],dx
   140007e30:	add    BYTE PTR [rax],al
   140007e32:	out    0x1,al
   140007e34:	pop    rdi
   140007e35:	ins    BYTE PTR es:[rdi],dx
   140007e36:	outs   dx,DWORD PTR ds:[rsi]
   140007e37:	movsxd ebp,DWORD PTR [rbx+0x0]
   140007e3a:	add    ebx,DWORD PTR [r15+0x75]
   140007e3e:	outs   dx,BYTE PTR ds:[rsi]
   140007e3f:	ins    BYTE PTR es:[rdi],dx
   140007e40:	outs   dx,DWORD PTR ds:[rsi]
   140007e41:	movsxd ebp,DWORD PTR [rbx+0x0]
   140007e44:	jnp    0x140007e46
   140007e46:	pop    rdi
   140007e47:	pop    rdi
   140007e48:	fs ins BYTE PTR es:[rdi],dx
   140007e4a:	ins    BYTE PTR es:[rdi],dx
   140007e4b:	outs   dx,DWORD PTR ds:[rsi]
   140007e4c:	outs   dx,BYTE PTR ds:[rsi]
   140007e4d:	gs js  0x140007eb9
   140007e50:	je     0x140007e52
   140007e52:	nop
   140007e53:	add    bl,BYTE PTR [rdi+0x6f]
   140007e56:	outs   dx,BYTE PTR ds:[rsi]
   140007e57:	gs js  0x140007ec3
   140007e5a:	je     0x140007e5c
   140007e5c:	(bad)  
   140007e5d:	add    BYTE PTR [rdi],bh
   140007e5f:	je     0x140007ec6
   140007e61:	jb     0x140007ed0
   140007e63:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140007e6a:	pop    rcx
   140007e6b:	pop    r8
   140007e6d:	pop    rax
   140007e6e:	pop    rdx
   140007e6f:	add    dh,al
   140007e71:	add    dl,BYTE PTR [rdx+0x74]
   140007e74:	ins    BYTE PTR es:[rdi],dx
   140007e75:	rex.XB (bad) 
   140007e77:	jo     0x140007eed
   140007e79:	jne    0x140007eed
   140007e7b:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140007e7e:	outs   dx,BYTE PTR ds:[rsi]
   140007e7f:	je     0x140007ee6
   140007e81:	js     0x140007ef7
   140007e83:	add    BYTE PTR [rdi+0x4],dh
   140007e86:	push   rdx
   140007e87:	je     0x140007ef5
   140007e89:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007e8b:	outs   dx,DWORD PTR ds:[rsi]
   140007e8c:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140007e90:	jne    0x140007f00
   140007e92:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140007e96:	outs   dx,BYTE PTR ds:[rsi]
   140007e97:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140007e99:	je     0x140007f0d
   140007e9b:	jns    0x140007e9d
   140007e9d:	add    BYTE PTR [rbx+0x6c745205],cl
   140007ea3:	push   rsi
   140007ea4:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140007eab:	outs   dx,BYTE PTR ds:[rsi]
   140007eac:	ja     0x140007f17
   140007eae:	outs   dx,BYTE PTR ds:[rsi]
   140007eaf:	add    BYTE PTR fs:[rax],al
   140007eb2:	outs   dx,BYTE PTR ds:[rsi]
   140007eb3:	je     0x140007f19
   140007eb5:	ins    BYTE PTR es:[rdi],dx
   140007eb6:	ins    BYTE PTR es:[rdi],dx
   140007eb7:	cs fs ins BYTE PTR es:[rdi],dx
   140007eba:	ins    BYTE PTR es:[rdi],dx
   140007ebb:	add    ch,al
   140007ebd:	add    al,BYTE PTR [rdi+0x65]
   140007ec0:	je     0x140007f15
   140007ec2:	je     0x140007f25
   140007ec4:	jb     0x140007f3a
   140007ec6:	jne    0x140007f38
   140007ec8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007eca:	outs   dx,WORD PTR ds:[rsi]
   140007ecc:	push   rdi
   140007ecd:	add    BYTE PTR [rcx+0x686e5505],bl
   140007ed3:	(bad)  
   140007ed4:	outs   dx,BYTE PTR ds:[rsi]
   140007ed5:	fs ins BYTE PTR es:[rdi],dx
   140007ed7:	gs fs rex.RB js 0x140007f3f
   140007edc:	gs jo  0x140007f53
   140007edf:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140007ee6:	gs jb  0x140007ee9
   140007ee9:	add    BYTE PTR [rcx+0x5],bl
   140007eec:	push   rbx
   140007eed:	gs je  0x140007f45
   140007ef0:	outs   dx,BYTE PTR ds:[rsi]
   140007ef1:	push   0x6c646e61
   140007ef6:	gs fs rex.RB js 0x140007f5e
   140007efb:	gs jo  0x140007f72
   140007efe:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140007f05:	gs jb  0x140007f08
   140007f08:	(bad)  
   140007f09:	add    al,BYTE PTR [rdi+0x65]
   140007f0c:	je     0x140007f51
   140007f0e:	jne    0x140007f82
   140007f10:	jb     0x140007f77
   140007f12:	outs   dx,BYTE PTR ds:[rsi]
   140007f13:	je     0x140007f65
   140007f15:	jb     0x140007f86
   140007f17:	movsxd esp,DWORD PTR [rbp+0x73]
   140007f1a:	jae    0x140007f1c
   140007f1c:	ja     0x140007f23
   140007f1e:	push   rsp
   140007f1f:	gs jb  0x140007f8f
   140007f22:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140007f29:	outs   dx,DWORD PTR ds:[rsi]
   140007f2a:	movsxd esp,DWORD PTR [rbp+0x73]
   140007f2d:	jae    0x140007f2f
   140007f2f:	add    BYTE PTR [rdx],dh
   140007f31:	add    al,0x51
   140007f33:	jne    0x140007f9a
   140007f35:	jb     0x140007fb0
   140007f37:	push   rax
   140007f38:	gs jb  0x140007fa1
   140007f3b:	outs   dx,DWORD PTR ds:[rsi]
   140007f3c:	jb     0x140007fab
   140007f3e:	(bad)  
   140007f3f:	outs   dx,BYTE PTR ds:[rsi]
   140007f40:	movsxd esp,DWORD PTR [rbp+0x43]
   140007f43:	outs   dx,DWORD PTR ds:[rsi]
   140007f44:	jne    0x140007fb4
   140007f46:	je     0x140007fad
   140007f48:	jb     0x140007f4a
   140007f4a:	lar    eax,WORD PTR [rdi+0x65]
   140007f4e:	je     0x140007f93
   140007f50:	jne    0x140007fc4
   140007f52:	jb     0x140007fb9
   140007f54:	outs   dx,BYTE PTR ds:[rsi]
   140007f55:	je     0x140007fa7
   140007f57:	jb     0x140007fc8
   140007f59:	movsxd esp,DWORD PTR [rbp+0x73]
   140007f5c:	jae    0x140007fa7
   140007f5e:	fs add dh,bl
   140007f61:	add    al,BYTE PTR [rdi+0x65]
   140007f64:	je     0x140007fb9
   140007f66:	jns    0x140007fdb
   140007f68:	je     0x140007fcf
   140007f6a:	ins    DWORD PTR es:[rdi],dx
   140007f6b:	push   rsp
   140007f6c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140007f73:	ins    BYTE PTR es:[rdi],dx
   140007f74:	gs push rsp
   140007f76:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fb00
   140007f7d:	gs je  0x140007fd4
   140007f80:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140007f87:	je     0x140007f89
   140007f89:	add    BYTE PTR [rbx+0x48],dl
   140007f8c:	rex.WR push rdi
   140007f8e:	push   r8
   140007f90:	rex.WB
   140007f91:	cs fs ins BYTE PTR es:[rdi],dx
   140007f94:	ins    BYTE PTR es:[rdi],dx
   140007f95:	add    BYTE PTR [rdi+0x4c],cl
   140007f98:	rex.RB
   140007f99:	push   r13
   140007f9b:	push   rsp
   140007f9c:	xor    esi,DWORD PTR [rdx]
   140007f9e:	cs fs ins BYTE PTR es:[rdi],dx
   140007fa1:	ins    BYTE PTR es:[rdi],dx
   140007fa2:	add    BYTE PTR [rax],al
   140007fa4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007fa5:	add    DWORD PTR [rsi+0x72],eax
   140007fa8:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140007fb2:	lods   eax,DWORD PTR ds:[rsi]
   140007fb3:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140007fb7:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140007fc0:	js     0x140008003
   140007fc2:	add    BYTE PTR [rax],al
   140007fc4:	add    al,BYTE PTR [rcx]
   140007fc6:	rex.R
   140007fc7:	gs ins BYTE PTR es:[rdi],dx
   140007fc9:	(bad)  
   140007fca:	jns    0x140008018
   140007fcc:	outs   dx,DWORD PTR ds:[rsi]
   140007fcd:	(bad)  
   140007fce:	fs rex.RX (bad) 
   140007fd1:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   140007fd9:	imul   eax,DWORD PTR [rax],0x0
   140007fdc:	je     0x140007fe1
   140007fde:	push   rbp
   140007fdf:	outs   dx,BYTE PTR ds:[rsi]
   140007fe0:	jb     0x140008047
   140007fe2:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   140007fea:	(bad)  
   140007feb:	jae    0x140008060
   140007fed:	add    BYTE PTR [r8],al
   140007ff0:	pop    rbx
   140007ff1:	add    BYTE PTR [rdi+0x5f],bl
   140007ff4:	rex.XB js 0x14000806f
   140007ff7:	rex.RX jb 0x14000805b
   140007ffa:	ins    DWORD PTR es:[rdi],dx
   140007ffb:	gs rex.W (bad) 
   140007ffe:	outs   dx,BYTE PTR ds:[rsi]
   140007fff:	fs ins BYTE PTR es:[rdi],dx
   140008001:	gs jb  0x140008037
   140008004:	add    BYTE PTR [rax],al
   140008006:	rex.WRB add BYTE PTR [r8+0x61],r10b
   14000800a:	je     0x140008074
   14000800c:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x656c6946
   140008014:	rex.WRX (bad) 
   140008016:	ins    DWORD PTR es:[rdi],dx
   140008017:	gs push rdi
   140008019:	add    BYTE PTR [rdi+0x5],dl
   14000801c:	push   rbx
   14000801d:	gs je  0x140008074
   140008020:	push   0x64616572
   140008025:	jo     0x140008096
   140008027:	outs   dx,DWORD PTR ds:[rsi]
   140008028:	ins    BYTE PTR es:[rdi],dx
   140008029:	push   rsp
   14000802a:	imul   ebp,DWORD PTR [rbp+0x65],0x23000072
   140008031:	add    DWORD PTR [rbp+rsi*2+0x70],eax
   140008035:	ins    BYTE PTR es:[rdi],dx
   140008036:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   14000803d:	outs   dx,BYTE PTR ds:[rsi]
   14000803e:	fs ins BYTE PTR es:[rdi],dx
   140008040:	add    BYTE PTR gs:[rdx+rax*1],dl
   140008044:	rex.RXB
   140008045:	gs je  0x14000808b
   140008048:	jne    0x1400080bc
   14000804a:	jb     0x1400080b1
   14000804c:	outs   dx,BYTE PTR ds:[rsi]
   14000804d:	je     0x1400080a3
   14000804f:	push   0x64616572
   140008054:	add    BYTE PTR [rax],al
   140008056:	(bad)  
   140008057:	add    BYTE PTR [rbx+0x72],al
   14000805a:	gs (bad) 
   14000805c:	je     0x1400080c3
   14000805e:	push   rsp
   14000805f:	push   0x64616572
   140008064:	jo     0x1400080d5
   140008066:	outs   dx,DWORD PTR ds:[rsi]
   140008067:	ins    BYTE PTR es:[rdi],dx
   140008068:	push   rsp
   140008069:	imul   ebp,DWORD PTR [rbp+0x65],0x5cb0072
   140008070:	push   rdi
   140008071:	(bad)  
   140008072:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x72685472
   14000807a:	gs (bad) 
   14000807c:	fs jo  0x1400080ee
   14000807f:	outs   dx,DWORD PTR ds:[rsi]
   140008080:	ins    BYTE PTR es:[rdi],dx
   140008081:	push   rsp
   140008082:	imul   ebp,DWORD PTR [rbp+0x65],0x6c614372
   140008089:	ins    BYTE PTR es:[rdi],dx
   14000808a:	(bad)  
   14000808c:	movsxd ebp,DWORD PTR [rbx+0x73]
   14000808f:	add    BYTE PTR [rsi+0x6f6c4300],al
   140008095:	jae    0x1400080fc
   140008097:	push   rsp
   140008098:	push   0x64616572
   14000809d:	jo     0x14000810e
   14000809f:	outs   dx,DWORD PTR ds:[rsi]
   1400080a0:	ins    BYTE PTR es:[rdi],dx
   1400080a1:	push   rsp
   1400080a2:	imul   ebp,DWORD PTR [rbp+0x65],0x91000072
   1400080a9:	add    al,0x6d
   1400080ab:	gs ins DWORD PTR es:[rdi],dx
   1400080ad:	movsxd ebp,DWORD PTR [rbp+0x70]
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
   140009019:	add    BYTE PTR [rax],al
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rax+0x67],bl
   140009022:	add    BYTE PTR [rax+0x1],al
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rax+0x1400021],dh
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    BYTE PTR [rax+0x25],ah
   140009032:	add    BYTE PTR [rax+0x1],al
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    BYTE PTR [rax+0x26],dh
   14000903a:	add    BYTE PTR [rax+0x1],al
	...
   14000904d:	add    BYTE PTR [rax],al
   14000904f:	add    BYTE PTR [rax+0x1400021],dh
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rax+0x1400021],dh
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    BYTE PTR [rax],al
   140009061:	and    eax,DWORD PTR [rax]
   140009063:	rex add DWORD PTR [rax],eax
	...

Disassembly of section .pdata:

000000014000a000 <.pdata>:
   14000a000:	add    BYTE PTR [rax],dl
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	xor    edx,DWORD PTR [rcx]
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	fs jb  0x14000a00b
   14000a00b:	add    BYTE PTR [rax+0x11],al
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	fist   WORD PTR [rcx]
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	jo     0x14000a088
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	loopne 0x14000a02b
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	rex.WR adc r8b,BYTE PTR [rax]
   14000a01f:	add    BYTE PTR [rax+0x71],ah
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	push   rax
   14000a025:	adc    al,BYTE PTR [rax]
   14000a027:	add    dl,cl
   14000a029:	adc    al,BYTE PTR [rax]
   14000a02b:	add    BYTE PTR [rax+0x71],ah
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	lock adc al,BYTE PTR [rax]
   14000a033:	add    BYTE PTR [rdi],cl
   14000a035:	adc    eax,DWORD PTR [rax]
   14000a037:	add    BYTE PTR [rax+0x71],ah
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	sbb    BYTE PTR [rbx],dl
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	cmp    BYTE PTR [rbx],dl
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	push   0x40000071
   14000a049:	adc    eax,DWORD PTR [rax]
   14000a04b:	add    BYTE PTR [rsi+0x13],bl
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	(bad)  
   14000a051:	jno    0x14000a053
   14000a053:	add    BYTE PTR [rbx+rdx*1+0x0],ah
   14000a057:	add    bh,dh
   14000a059:	adc    eax,DWORD PTR [rax]
   14000a05b:	add    BYTE PTR [rax+0x71],dl
   14000a061:	adc    al,0x0
   14000a063:	add    BYTE PTR [rbp+0x15],dl
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a069:	jno    0x14000a06b
   14000a06b:	add    BYTE PTR [rbp+rdx*1+0x0],bl
   14000a06f:	add    BYTE PTR [rsi],cl
   14000a071:	(bad)  
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	nop
   14000a075:	jno    0x14000a077
   14000a077:	add    BYTE PTR [rax+0x16],dl
   14000a07a:	add    BYTE PTR [rax],al
   14000a07c:	(bad)  
   14000a07d:	(bad)  
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	mov    ah,0x71
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	(bad)  
   14000a085:	(bad)  
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	movabs eax,ds:0xa8000071c4000017
   14000a091:	(bad)  
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	jb     0x14000a0ae
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	fdiv   DWORD PTR [rcx+0x0]
   14000a09b:	add    BYTE PTR [rax+0x18],bh
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	sbb    BYTE PTR [rdx],bl
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	call   0x16000a11a
   14000a0a9:	sbb    al,BYTE PTR [rax]
   14000a0ab:	add    BYTE PTR [rsi],ah
   14000a0ad:	sbb    al,0x0
   14000a0af:	add    BYTE PTR [rdx+rsi*2],al
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b4:	sub    al,0x1c
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	movabs al,ds:0xbc00007224000021
   14000a0c1:	and    DWORD PTR [rax],eax
   14000a0c3:	add    al,bh
   14000a0c5:	and    al,BYTE PTR [rax]
   14000a0c7:	add    BYTE PTR [rax+0x72],cl
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	adc    BYTE PTR [rbx],ah
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	xchg   esp,eax
   14000a0d1:	and    eax,DWORD PTR [rax]
   14000a0d3:	add    ah,al
   14000a0d5:	jno    0x14000a0d7
   14000a0d7:	add    BYTE PTR [rax-0x22ffffdd],ah
   14000a0dd:	and    eax,DWORD PTR [rax]
   14000a0df:	add    BYTE PTR [rdx+rsi*2+0x0],ah
   14000a0e3:	add    BYTE PTR [rax],dh
   14000a0e5:	and    al,0x0
   14000a0e7:	add    BYTE PTR [rdi+0x24],bl
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	jo     0x14000a160
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	jo     0x14000a116
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	or     DWORD PTR [rip+0x71c40000],esp        # 0x1b1c4a0fa
   14000a0fa:	add    BYTE PTR [rax],al
   14000a0fc:	adc    BYTE PTR [rip+0x25500000],ah        # 0x16550a102
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	js     0x14000a178
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	(bad)  
   14000a109:	and    eax,0x266a0000
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	rex.W jb 0x14000a113
   14000a113:	add    BYTE PTR [rax+0x26],dh
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	data16 (bad) 
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	xor    BYTE PTR [rdx+0x0],0x0
   14000a120:	jo     0x14000a149
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	mov    bl,0x27
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	jo     0x14000a19c
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	shl    BYTE PTR [rdi],0x0
   14000a12f:	add    dh,bh
   14000a131:	(bad)  
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	fs jb  0x14000a137
   14000a137:	add    BYTE PTR [rax+rbp*1],al
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	sti    
   14000a13d:	sub    DWORD PTR [rax],eax
   14000a13f:	add    BYTE PTR [rax+0x4000072],bl
   14000a145:	sub    al,BYTE PTR [rax]
   14000a147:	add    BYTE PTR [rdi],dh
   14000a149:	sub    al,0x0
   14000a14b:	add    BYTE PTR [rdx+rsi*2+0x2c400000],dh
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	cdq    
   14000a155:	sub    al,0x0
   14000a157:	add    BYTE PTR [rdx+rsi*2+0x0],ah
   14000a15b:	add    BYTE PTR [rax-0x57ffffd4],bh
   14000a161:	sub    eax,0x72800000
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	shr    BYTE PTR [rip+0x2e4e0000],0x0        # 0x16e4ea16f
   14000a16f:	add    ah,al
   14000a171:	jno    0x14000a173
   14000a173:	add    BYTE PTR [rax+0x1e00002e],dl
   14000a179:	(bad)  
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	(bad)  
   14000a17d:	jno    0x14000a17f
   14000a17f:	add    BYTE PTR [rax],dh
   14000a181:	(bad)  
   14000a182:	add    BYTE PTR [rax],al
   14000a184:	mov    dl,0x2f
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	fdiv   DWORD PTR [rcx+0x0]
   14000a18b:	add    al,al
   14000a18d:	(bad)  
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	icebp  
   14000a191:	(bad)  
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	fs jb  0x14000a197
   14000a197:	add    BYTE PTR [rax],al
   14000a199:	xor    BYTE PTR [rax],al
   14000a19b:	add    BYTE PTR [rcx],dh
   14000a19d:	xor    BYTE PTR [rax],al
   14000a19f:	add    BYTE PTR [rdx+rsi*2+0x0],ah
   14000a1a3:	add    BYTE PTR [rax+0x30],al
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	nop
   14000a1a9:	xor    BYTE PTR [rax],al
   14000a1ab:	add    ah,al
   14000a1ad:	jno    0x14000a1af
   14000a1af:	add    BYTE PTR [rax+0x18000030],ah
   14000a1b5:	xor    DWORD PTR [rax],eax
   14000a1b7:	add    BYTE PTR [rax+0x20000071],dl
   14000a1bd:	xor    DWORD PTR [rax],eax
   14000a1bf:	add    BYTE PTR [rcx-0x6fffffcf],bl
   14000a1c5:	jno    0x14000a1c7
   14000a1c7:	add    BYTE PTR [rax-0x3ffffcf],ah
   14000a1cd:	xor    DWORD PTR [rax],eax
   14000a1cf:	add    BYTE PTR [rax+0x72],dh
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	and    BYTE PTR [rdx],dh
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	sub    al,0x34
   14000a1da:	add    BYTE PTR [rax],al
   14000a1dc:	int3   
   14000a1dd:	jb     0x14000a1df
   14000a1df:	add    BYTE PTR [rax+0x34],al
   14000a1e2:	add    BYTE PTR [rax],al
   14000a1e4:	out    0x34,eax
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	in     al,dx
   14000a1e9:	jb     0x14000a1eb
   14000a1eb:	add    BYTE PTR [rax],dl
   14000a1ed:	xor    eax,0x355e0000
   14000a1f2:	add    BYTE PTR [rax],al
   14000a1f4:	fdiv   DWORD PTR [rcx+0x0]
   14000a1f7:	add    BYTE PTR [rax+0x35],dh
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	sub    dh,BYTE PTR [rsi]
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	add    al,0x73
   14000a202:	add    BYTE PTR [rax],al
   14000a204:	xor    BYTE PTR [rsi],dh
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	(bad)  
   14000a209:	add    BYTE PTR ss:[rax],al
   14000a20c:	add    al,0x73
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	lock add BYTE PTR ss:[rax],al
   14000a214:	stos   BYTE PTR es:[rdi],al
   14000a215:	(bad)  
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	sbb    al,0x73
   14000a21a:	add    BYTE PTR [rax],al
   14000a21c:	mov    al,0x37
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	cmp    BYTE PTR fs:[rax],al
   14000a223:	add    BYTE PTR [rbx+rsi*2],dh
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	jo     0x14000a262
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	sub    bh,BYTE PTR [rcx]
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	add    al,0x73
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	xor    BYTE PTR [rcx],bh
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	(bad)  
   14000a239:	cmp    DWORD PTR [rax],eax
   14000a23b:	add    BYTE PTR [rbx+rsi*2],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	lock cmp DWORD PTR [rax],eax
   14000a243:	add    BYTE PTR [rdx+0x1c00003a],ch
   14000a249:	jae    0x14000a24b
   14000a24b:	add    BYTE PTR [rax+0x6a00003a],dh
   14000a251:	cmp    eax,DWORD PTR [rax]
   14000a253:	add    BYTE PTR [rbx+rsi*2],bl
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	jo     0x14000a295
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	sub    bh,BYTE PTR [rax+rax*1]
   14000a25f:	add    BYTE PTR [rbx+rsi*2],bl
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	xor    BYTE PTR [rax+rax*1],bh
   14000a267:	add    dl,ch
   14000a269:	cmp    al,0x0
   14000a26b:	add    BYTE PTR [rbx+rsi*2],al
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	lock cmp al,0x0
   14000a273:	add    BYTE PTR [rdx+0x1c00003d],ch
   14000a279:	jae    0x14000a27b
   14000a27b:	add    BYTE PTR [rax+0x6a00003d],dh
   14000a281:	add    BYTE PTR ds:[rax],al
   14000a284:	add    al,0x73
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	jo     0x14000a2c8
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	in     al,0x3e
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	fs jb  0x14000a293
   14000a293:	add    al,dh
   14000a295:	add    BYTE PTR ds:[rax],al
   14000a298:	(bad)  
   14000a299:	(bad)  
   14000a29a:	add    BYTE PTR [rax],al
   14000a29c:	fs jb  0x14000a29f
   14000a29f:	add    BYTE PTR [rax],ch
   14000a2a1:	(bad)  
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	cmp    DWORD PTR [rax+0x0],eax
   14000a2a7:	add    BYTE PTR [rbx+rsi*2+0x0],cl
   14000a2ab:	add    BYTE PTR [rax+0x40],al
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	or     DWORD PTR [rcx+0x0],eax
   14000a2b3:	add    BYTE PTR [rbx+rsi*2+0x0],ah
   14000a2b7:	add    BYTE PTR [rax],dl
   14000a2b9:	add    BYTE PTR [r8],al
   14000a2bc:	rol    BYTE PTR [rcx+0x0],0x0
   14000a2c0:	fdiv   DWORD PTR [rcx+0x0]
   14000a2c3:	add    al,dl
   14000a2c5:	add    BYTE PTR [r8],al
   14000a2c8:	(bad)  
   14000a2c9:	rex.XB add BYTE PTR [r8],al
   14000a2cc:	xor    BYTE PTR [rbx+0x0],0x0
   14000a2d0:	xor    BYTE PTR [rax+rax*1+0x0],al
   14000a2d4:	rex.WB
   14000a2d5:	rex.RX add BYTE PTR [rax],r8b
   14000a2d8:	cwde   
   14000a2d9:	jae    0x14000a2db
   14000a2db:	add    BYTE PTR [rax+0x46],dl
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	jns    0x14000a329
   14000a2e2:	add    BYTE PTR [rax],al
   14000a2e4:	mov    ah,0x73
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	add    BYTE PTR [rdi+0x0],0x0
   14000a2ec:	fild   DWORD PTR [rdi+0x0]
   14000a2ef:	add    BYTE PTR [rax+0x72],dh
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	adc    BYTE PTR [rax+0x0],cl
   14000a2f7:	add    BYTE PTR [rdx+0x48],dh
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	fs jb  0x14000a2ff
   14000a2ff:	add    BYTE PTR [rax+0x48],bh
   14000a302:	add    BYTE PTR [rax],al
   14000a304:	ror    DWORD PTR [rax+0x0],1
   14000a307:	add    al,cl
   14000a309:	jae    0x14000a30b
   14000a30b:	add    BYTE PTR [rax],al
   14000a30d:	rex.WB add BYTE PTR [r8],al
   14000a310:	ja     0x14000a35b
   14000a312:	add    BYTE PTR [rax],al
   14000a314:	shl    BYTE PTR [rbx+0x0],1
   14000a317:	add    al,dh
   14000a319:	rex.WB add BYTE PTR [r8],al
   14000a31c:	sub    DWORD PTR [rdx+0x0],ecx
   14000a31f:	add    BYTE PTR [rdx+rsi*2+0x0],ah
   14000a323:	add    BYTE PTR [rax],dh
   14000a325:	rex.WX add BYTE PTR [rax],al
   14000a328:	dec    DWORD PTR [rdx+0x0]
   14000a32b:	add    BYTE PTR [rax+0x71],ah
   14000a32e:	add    BYTE PTR [rax],al
   14000a330:	adc    BYTE PTR [rbx+0x0],cl
   14000a333:	add    BYTE PTR [rcx+0x4b],bl
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	js     0x14000a3ac
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	(bad)  
   14000a33d:	rex.WXB add BYTE PTR [r8],al
   14000a340:	ror    DWORD PTR [rbp+0x0],1
   14000a343:	add    al,bl
   14000a345:	jae    0x14000a347
   14000a347:	add    al,ah
   14000a349:	rex.WRB add BYTE PTR [r8],r8b
   14000a34c:	repnz rex.WRB add BYTE PTR [r8],r8b
   14000a350:	(bad)  
   14000a351:	jno    0x14000a353
   14000a353:	add    BYTE PTR [rax],dl
   14000a355:	rex.WRX add BYTE PTR [rax],r8b
   14000a358:	rex.WRX add BYTE PTR cs:[rax],r8b
   14000a35c:	adc    BYTE PTR [rax+rax*1+0x0],dh
   14000a360:	rex
   14000a361:	rex.WRX add BYTE PTR [rax],r8b
   14000a364:	fimul  WORD PTR [rsi+0x0]
   14000a367:	add    BYTE PTR [rsp+rsi*2],dl
   14000a36a:	add    BYTE PTR [rax],al
   14000a36c:	in     al,0x4e
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	sti    
   14000a371:	rex.WRX add BYTE PTR [rax],r8b
   14000a374:	(bad)  
   14000a375:	jno    0x14000a377
   14000a377:	add    BYTE PTR [rdi+rcx*2],bl
   14000a37a:	add    BYTE PTR [rax],al
   14000a37c:	push   rax
   14000a37d:	rex.WRXB add BYTE PTR [r8],r8b
   14000a380:	jo     0x14000a3f4
   14000a382:	add    BYTE PTR [rax],al
   14000a384:	(bad)  
   14000a385:	rex.WRXB add BYTE PTR [r8],r8b
   14000a388:	rcl    DWORD PTR [rax+0x0],1
   14000a38b:	add    BYTE PTR [rax+0x74],al
   14000a38e:	add    BYTE PTR [rax],al
   14000a390:	fcom   DWORD PTR [rax+0x0]
   14000a393:	add    bh,cl
   14000a395:	push   rcx
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	cmp    BYTE PTR [rax+rax*1+0x0],dh
   14000a39c:	add    BYTE PTR [rdx+0x0],dl
   14000a39f:	add    BYTE PTR [rcx],bh
   14000a3a1:	push   rdx
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	(bad)  
   14000a3a5:	jno    0x14000a3a7
   14000a3a7:	add    BYTE PTR [rax+0x52],al
   14000a3aa:	add    BYTE PTR [rax],al
   14000a3ac:	pop    rax
   14000a3ad:	push   rdx
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	(bad)  
   14000a3b1:	jno    0x14000a3b3
   14000a3b3:	add    BYTE PTR [rdx+rdx*2+0x0],ch
   14000a3b7:	add    al,al
   14000a3b9:	push   rdx
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	rex.W je 0x14000a3bf
   14000a3bf:	add    al,cl
   14000a3c1:	push   rdx
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	or     eax,0x70000053
   14000a3c9:	jb     0x14000a3cb
   14000a3cb:	add    BYTE PTR [rax+0x53],dh
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	mov    ebp,0x68000053
   14000a3d5:	je     0x14000a3d7
   14000a3d7:	add    BYTE PTR [rsp+rdx*2],al
   14000a3da:	add    BYTE PTR [rax],al
   14000a3dc:	(bad)  
   14000a3dd:	push   rsp
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	mov    WORD PTR [rax+rax*1+0x0],?
   14000a3e4:	sbb    BYTE PTR [rbp+0x0],dl
   14000a3e7:	add    BYTE PTR [rip+0x60000055],dh        # 0x1a000a442
   14000a3ed:	jno    0x14000a3ef
   14000a3ef:	add    BYTE PTR [rdx*2+0x559f0000],bh
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	jo     0x14000a46c
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	loopne 0x14000a453
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	push   rdi
   14000a401:	push   rsi
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	pushf  
   14000a405:	je     0x14000a407
   14000a407:	add    BYTE PTR [rdi+rdx*2],ch
   14000a40a:	add    BYTE PTR [rax],al
   14000a40c:	rex.WXB push r15
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a411:	je     0x14000a413
   14000a413:	add    BYTE PTR [rax-0x8ffffa9],al
   14000a419:	push   rdi
   14000a41a:	add    BYTE PTR [rax],al
   14000a41c:	xor    BYTE PTR [rbp+0x0],dh
   14000a41f:	add    BYTE PTR [rax-0x4dffffa8],dh
   14000a425:	pop    rax
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	cwde   
   14000a429:	je     0x14000a42b
   14000a42b:	add    dh,al
   14000a42d:	pop    rax
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	out    0x58,al
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	mov    BYTE PTR [rcx+0x0],dh
   14000a437:	add    ah,ch
   14000a439:	pop    rax
   14000a43a:	add    BYTE PTR [rax],al
   14000a43c:	or     bl,BYTE PTR [rcx+0x0]
   14000a43f:	add    BYTE PTR [rax+0x10000071],cl
   14000a445:	pop    rcx
   14000a446:	add    BYTE PTR [rax],al
   14000a448:	sub    ebx,DWORD PTR [rcx+0x0]
   14000a44b:	add    BYTE PTR [rax+0x40000071],cl
   14000a451:	pop    rcx
   14000a452:	add    BYTE PTR [rax],al
   14000a454:	(bad)  
   14000a455:	pop    rcx
   14000a456:	add    BYTE PTR [rax],al
   14000a458:	mov    BYTE PTR [rcx+0x0],dh
   14000a45b:	add    BYTE PTR [rsi+0x59],ah
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	xchg   BYTE PTR [rcx+0x0],bl
   14000a463:	add    BYTE PTR [rax],ah
   14000a465:	jne    0x14000a467
   14000a467:	add    BYTE PTR [rax+0x9000059],dl
   14000a46d:	pop    rdx
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	fs jb  0x14000a473
   14000a473:	add    BYTE PTR [rax],dl
   14000a475:	pop    rdx
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	rex.WRX pop rdx
   14000a47a:	add    BYTE PTR [rax],al
   14000a47c:	(bad)  
   14000a47d:	jno    0x14000a47f
   14000a47f:	add    BYTE PTR [rax+0x5a],ah
   14000a482:	add    BYTE PTR [rax],al
   14000a484:	pop    r11
   14000a486:	add    BYTE PTR [rax],al
   14000a488:	fdiv   DWORD PTR [rcx+0x0]
	...

Disassembly of section .didat:

000000014000b000 <.didat>:
   14000b000:	loopne 0x14000b04a
   14000b002:	add    BYTE PTR [rax+0x1],al
   14000b005:	add    BYTE PTR [rax],al
   14000b007:	add    BYTE PTR [rax+0x1400049],al
   14000b00d:	add    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rax+0x1400049],ah
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	add    BYTE PTR [rax+0x1400058],al
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	add    BYTE PTR [rax],al
   14000b021:	push   rdi
   14000b022:	add    BYTE PTR [rax+0x1],al
	...
   14000b02d:	add    BYTE PTR [rax],al
   14000b02f:	add    al,al
   14000b031:	push   rsi
   14000b032:	add    BYTE PTR [rax+0x1],al
   14000b035:	add    BYTE PTR [rax],al
   14000b037:	add    BYTE PTR [rax+0x1400056],ah
   14000b03d:	add    BYTE PTR [rax],al
   14000b03f:	add    BYTE PTR [rax+0x1400056],al
   14000b045:	add    BYTE PTR [rax],al
   14000b047:	add    BYTE PTR [rax+0x56],ah
   14000b04a:	add    BYTE PTR [rax+0x1],al
   14000b04d:	add    BYTE PTR [rax],al
   14000b04f:	add    al,al
   14000b051:	push   rbp
   14000b052:	add    BYTE PTR [rax+0x1],al
   14000b055:	add    BYTE PTR [rax],al
   14000b057:	add    al,ah
   14000b059:	push   rsi
   14000b05a:	add    BYTE PTR [rax+0x1],al
	...
   14000b065:	add    BYTE PTR [rax],al
   14000b067:	add    BYTE PTR [rax+0x58],al
   14000b06a:	add    BYTE PTR [rax+0x1],al
   14000b06d:	add    BYTE PTR [rax],al
   14000b06f:	add    BYTE PTR [rax],ah
   14000b071:	pop    rax
   14000b072:	add    BYTE PTR [rax+0x1],al
   14000b075:	add    BYTE PTR [rax],al
   14000b077:	add    BYTE PTR [rax],al
   14000b079:	pop    rax
   14000b07a:	add    BYTE PTR [rax+0x1],al
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	add    BYTE PTR [rax+0x57],ah
   14000b082:	add    BYTE PTR [rax+0x1],al
   14000b085:	add    BYTE PTR [rax],al
   14000b087:	add    BYTE PTR [rax+0x58],ah
   14000b08a:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    al,BYTE PTR [rax]
   14000c010:	adc    BYTE PTR [rax],al
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	and    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax+0x18],al
   14000c01c:	cmp    BYTE PTR [rax],al
   14000c01e:	add    BYTE PTR [rax+0x0],al
	...
   14000c02c:	add    BYTE PTR [rax],al
   14000c02e:	add    DWORD PTR [rax],eax
   14000c030:	add    DWORD PTR [rax],eax
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	push   rax
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rax],0x0
	...
   14000c046:	add    DWORD PTR [rax],eax
   14000c048:	add    DWORD PTR [rax],eax
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	push   0x800000
	...
   14000c05d:	add    BYTE PTR [rcx],al
   14000c05f:	add    BYTE PTR [rcx],cl
   14000c061:	add    al,0x0
   14000c063:	add    BYTE PTR [rax+0x0],al
	...
   14000c075:	add    BYTE PTR [rcx],al
   14000c077:	add    BYTE PTR [rcx],cl
   14000c079:	add    al,0x0
   14000c07b:	add    BYTE PTR [rax+0x48000000],dl
   14000c081:	(bad)
   14000c084:	loopne 0x14000c089
	...
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	movabs al,ds:0x4a40000c0
   14000c099:	add    BYTE PTR [rax],al
   14000c09b:	add    BYTE PTR [rax],al
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    BYTE PTR [rdi+rdi*1],bh
   14000c0a2:	js     0x14000c111
   14000c0a4:	ins    BYTE PTR es:[rdi],dx
   14000c0a5:	and    BYTE PTR [rsi+0x65],dh
   14000c0a8:	jb     0x14000c11d
   14000c0aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c0b1:	xor    BYTE PTR [rdx],ah
   14000c0b3:	and    BYTE PTR [rbp+0x6e],ah
   14000c0b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c0b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c0c0:	rex.RX sub eax,0x73202238
   14000c0c6:	je     0x14000c129
   14000c0c8:	outs   dx,BYTE PTR ds:[rsi]
   14000c0c9:	fs (bad) 
   14000c0cb:	ins    BYTE PTR es:[rdi],dx
   14000c0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000c0cd:	outs   dx,BYTE PTR ds:[rsi]
   14000c0ce:	gs cmp eax,0x73657922
   14000c0d4:	and    bh,BYTE PTR [rdi]
   14000c0d6:	ds or  eax,0x2d213c0a
   14000c0dc:	sub    eax,0x706f4320
   14000c0e1:	jns    0x14000c155
   14000c0e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c0ea:	sub    DWORD PTR [rax],esp
   14000c0ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c0f4:	je     0x14000c116
   14000c0f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c0f8:	jb     0x14000c16a
   14000c0fa:	outs   dx,DWORD PTR ds:[rsi]
   14000c0fb:	jb     0x14000c15e
   14000c0fd:	je     0x14000c168
   14000c0ff:	outs   dx,DWORD PTR ds:[rsi]
   14000c100:	outs   dx,BYTE PTR ds:[rsi]
   14000c101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dff34
   14000c107:	cmp    al,0x61
   14000c109:	jae    0x14000c17e
   14000c10b:	gs ins DWORD PTR es:[rdi],dx
   14000c10d:	(bad)  
   14000c10e:	ins    BYTE PTR es:[rdi],dx
   14000c10f:	jns    0x14000c131
   14000c111:	js     0x14000c180
   14000c113:	ins    BYTE PTR es:[rdi],dx
   14000c114:	outs   dx,BYTE PTR ds:[rsi]
   14000c115:	jae    0x14000c154
   14000c117:	and    dh,BYTE PTR [rbp+0x72]
   14000c11a:	outs   dx,BYTE PTR ds:[rsi]
   14000c11b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c11e:	push   0x73616d65
   14000c123:	sub    eax,0x7263696d
   14000c128:	outs   dx,DWORD PTR ds:[rsi]
   14000c129:	jae    0x14000c19a
   14000c12b:	data16 je 0x14000c15b
   14000c12e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c131:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c134:	ins    DWORD PTR es:[rdi],dx
   14000c135:	cs jbe 0x14000c169
   14000c138:	and    ah,BYTE PTR [rax]
   14000c13a:	ins    DWORD PTR es:[rdi],dx
   14000c13b:	(bad)  
   14000c13c:	outs   dx,BYTE PTR ds:[rsi]
   14000c13d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c144:	jb     0x14000c1b9
   14000c146:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c14d:	xor    BYTE PTR [rdx],ah
   14000c14f:	ds or  eax,0x73613c0a
   14000c155:	jae    0x14000c1bc
   14000c157:	ins    DWORD PTR es:[rdi],dx
   14000c158:	(bad)  
   14000c159:	ins    BYTE PTR es:[rdi],dx
   14000c15a:	jns    0x14000c1a5
   14000c15c:	fs outs dx,BYTE PTR gs:[rsi]
   14000c15f:	je     0x14000c1ca
   14000c161:	je     0x14000c1dc
   14000c163:	or     eax,0x2020200a
   14000c168:	and    BYTE PTR [rsi+0x61],ch
   14000c16b:	ins    DWORD PTR es:[rdi],dx
   14000c16c:	gs cmp eax,0x63694d22
   14000c172:	jb     0x14000c1e3
   14000c174:	jae    0x14000c1e5
   14000c176:	data16 je 0x14000c1a7
   14000c179:	push   rdi
   14000c17a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c181:	push   rbx
   14000c182:	push   0x2e6c6c65
   14000c187:	push   rsp
   14000c188:	push   0x6e626d75
   14000c18d:	(bad)  
   14000c18e:	imul   ebp,DWORD PTR [rbp+rax*2+0x78],0x63617274
   14000c196:	je     0x14000c201
   14000c198:	outs   dx,DWORD PTR ds:[rsi]
   14000c199:	outs   dx,BYTE PTR ds:[rsi]
   14000c19a:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000c19c:	jae    0x14000c212
   14000c19e:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e1ae
   14000c1a4:	and    BYTE PTR [rax+0x72],dh
   14000c1a7:	outs   dx,DWORD PTR ds:[rsi]
   14000c1a8:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c1ab:	jae    0x14000c21c
   14000c1ad:	jb     0x14000c1f0
   14000c1af:	jb     0x14000c214
   14000c1b1:	push   0x63657469
   14000c1b6:	je     0x14000c22d
   14000c1b8:	jb     0x14000c21f
   14000c1ba:	cmp    eax,0x646d6122
   14000c1bf:	ss xor al,0x22
   14000c1c2:	or     eax,0x2020200a
   14000c1c7:	and    BYTE PTR [rsi+0x65],dh
   14000c1ca:	jb     0x14000c23f
   14000c1cc:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000c1d3:	xor    DWORD PTR [rsi],ebp
   14000c1d5:	xor    BYTE PTR [rsi],ch
   14000c1d7:	xor    BYTE PTR [rdx],ah
   14000c1d9:	or     eax,0x2020200a
   14000c1de:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c1e2:	gs cmp eax,0x6e697722
   14000c1e8:	xor    esi,DWORD PTR [rdx]
   14000c1ea:	and    ch,BYTE PTR [rdi]
   14000c1ec:	ds or  eax,0x65643c0a
   14000c1f2:	jae    0x14000c257
   14000c1f4:	jb     0x14000c25f
   14000c1f6:	jo     0x14000c26c
   14000c1f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69573e
   14000c1ff:	outs   dx,DWORD PTR fs:[rsi]
   14000c201:	ja     0x14000c276
   14000c203:	and    BYTE PTR [rbx+0x68],dl
   14000c206:	gs ins BYTE PTR es:[rdi],dx
   14000c208:	ins    BYTE PTR es:[rdi],dx
   14000c209:	cmp    al,0x2f
   14000c20b:	fs gs jae 0x14000c272
   14000c20f:	jb     0x14000c27a
   14000c211:	jo     0x14000c287
   14000c213:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000c21a:	fs gs jo 0x14000c283
   14000c21e:	outs   dx,BYTE PTR ds:[rsi]
   14000c21f:	fs outs dx,BYTE PTR gs:[rsi]
   14000c222:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000c225:	or     eax,0x2020200a
   14000c22a:	and    BYTE PTR [rsp+riz*2],bh
   14000c22d:	gs jo  0x14000c295
   14000c230:	outs   dx,BYTE PTR ds:[rsi]
   14000c231:	fs outs dx,BYTE PTR gs:[rsi]
   14000c234:	je     0x14000c277
   14000c236:	jae    0x14000c2ab
   14000c238:	gs ins DWORD PTR es:[rdi],dx
   14000c23a:	(bad)  
   14000c23b:	ins    BYTE PTR es:[rdi],dx
   14000c23c:	jns    0x14000c27c
   14000c23e:	or     eax,0x2020200a
   14000c243:	and    BYTE PTR [rax],ah
   14000c245:	and    BYTE PTR [rax],ah
   14000c247:	and    BYTE PTR [rcx+riz*2],bh
   14000c24a:	jae    0x14000c2bf
   14000c24c:	gs ins DWORD PTR es:[rdi],dx
   14000c24e:	(bad)  
   14000c24f:	ins    BYTE PTR es:[rdi],dx
   14000c250:	jns    0x14000c29b
   14000c252:	fs outs dx,BYTE PTR gs:[rsi]
   14000c255:	je     0x14000c2c0
   14000c257:	je     0x14000c2d2
   14000c259:	or     eax,0x2020200a
   14000c25e:	and    BYTE PTR [rax],ah
   14000c260:	and    BYTE PTR [rax],ah
   14000c262:	and    BYTE PTR [rax],ah
   14000c264:	and    BYTE PTR [rax],ah
   14000c266:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c26a:	gs cmp eax,0x6e697722
   14000c270:	xor    esi,DWORD PTR [rdx]
   14000c272:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e282
   14000c278:	and    BYTE PTR [rax],ah
   14000c27a:	and    BYTE PTR [rax],ah
   14000c27c:	and    BYTE PTR [rax],ah
   14000c27e:	and    BYTE PTR [rax],ah
   14000c280:	and    BYTE PTR [rsi+0x61],ch
   14000c283:	ins    DWORD PTR es:[rdi],dx
   14000c284:	gs cmp eax,0x63694d22
   14000c28a:	jb     0x14000c2fb
   14000c28c:	jae    0x14000c2fd
   14000c28e:	data16 je 0x14000c2bf
   14000c291:	push   rdi
   14000c292:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c299:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c29b:	ins    DWORD PTR es:[rdi],dx
   14000c29c:	ins    DWORD PTR es:[rdi],dx
   14000c29d:	outs   dx,DWORD PTR ds:[rsi]
   14000c29e:	outs   dx,BYTE PTR ds:[rsi]
   14000c29f:	sub    eax,0x746e6f43
   14000c2a4:	jb     0x14000c315
   14000c2a6:	ins    BYTE PTR es:[rdi],dx
   14000c2a7:	jae    0x14000c2cb
   14000c2a9:	or     eax,0x2020200a
   14000c2ae:	and    BYTE PTR [rax],ah
   14000c2b0:	and    BYTE PTR [rax],ah
   14000c2b2:	and    BYTE PTR [rax],ah
   14000c2b4:	and    BYTE PTR [rax],ah
   14000c2b6:	and    BYTE PTR [rsi+0x65],dh
   14000c2b9:	jb     0x14000c32e
   14000c2bb:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000c2c2:	xor    BYTE PTR [rsi],ch
   14000c2c4:	xor    BYTE PTR [rsi],ch
   14000c2c6:	xor    BYTE PTR [rdx],ah
   14000c2c8:	or     eax,0x2020200a
   14000c2cd:	and    BYTE PTR [rax],ah
   14000c2cf:	and    BYTE PTR [rax],ah
   14000c2d1:	and    BYTE PTR [rax],ah
   14000c2d3:	and    BYTE PTR [rax],ah
   14000c2d5:	and    BYTE PTR [rax+0x72],dh
   14000c2d8:	outs   dx,DWORD PTR ds:[rsi]
   14000c2d9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c2dc:	jae    0x14000c34d
   14000c2de:	jb     0x14000c321
   14000c2e0:	jb     0x14000c345
   14000c2e2:	push   0x63657469
   14000c2e7:	je     0x14000c35e
   14000c2e9:	jb     0x14000c350
   14000c2eb:	cmp    eax,0xd222a22
   14000c2f0:	or     ah,BYTE PTR [rax]
   14000c2f2:	and    BYTE PTR [rax],ah
   14000c2f4:	and    BYTE PTR [rax],ah
   14000c2f6:	and    BYTE PTR [rax],ah
   14000c2f8:	and    BYTE PTR [rax],ah
   14000c2fa:	and    BYTE PTR [rax],ah
   14000c2fc:	and    BYTE PTR [rax+0x75],dh
   14000c2ff:	(bad)  
   14000c300:	ins    BYTE PTR es:[rdi],dx
   14000c301:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000c308:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000c30c:	and    dh,BYTE PTR [rsi]
   14000c30e:	xor    eax,0x36623539
   14000c313:	xor    al,0x31
   14000c315:	xor    al,0x34
   14000c317:	movsxd esp,DWORD PTR [rbx+0x66]
   14000c31a:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000c31e:	or     eax,0x2020200a
   14000c323:	and    BYTE PTR [rax],ah
   14000c325:	and    BYTE PTR [rax],ah
   14000c327:	and    BYTE PTR [rax],ah
   14000c329:	and    BYTE PTR [rax],ah
   14000c32b:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000c32f:	addr32 jne 0x14000c393
   14000c332:	addr32 gs cmp eax,0xd222a22
   14000c339:	or     ah,BYTE PTR [rax]
   14000c33b:	and    BYTE PTR [rax],ah
   14000c33d:	and    BYTE PTR [rax],ah
   14000c33f:	and    BYTE PTR [rax],ah
   14000c341:	and    BYTE PTR [rdi],ch
   14000c343:	ds or  eax,0x2020200a
   14000c349:	and    BYTE PTR [rdi+rbp*1],bh
   14000c34c:	fs gs jo 0x14000c3b5
   14000c350:	outs   dx,BYTE PTR ds:[rsi]
   14000c351:	fs outs dx,BYTE PTR gs:[rsi]
   14000c354:	je     0x14000c397
   14000c356:	jae    0x14000c3cb
   14000c358:	gs ins DWORD PTR es:[rdi],dx
   14000c35a:	(bad)  
   14000c35b:	ins    BYTE PTR es:[rdi],dx
   14000c35c:	jns    0x14000c39c
   14000c35e:	or     eax,0x642f3c0a
   14000c363:	gs jo  0x14000c3cb
   14000c366:	outs   dx,BYTE PTR ds:[rsi]
   14000c367:	fs outs dx,BYTE PTR gs:[rsi]
   14000c36a:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000c36d:	or     eax,0x72743c0a
   14000c372:	jne    0x14000c3e7
   14000c374:	je     0x14000c3bf
   14000c376:	outs   dx,BYTE PTR ds:[rsi]
   14000c377:	outs   dx,WORD PTR ds:[rsi]
   14000c379:	and    BYTE PTR [rax+0x6d],bh
   14000c37c:	ins    BYTE PTR es:[rdi],dx
   14000c37d:	outs   dx,BYTE PTR ds:[rsi]
   14000c37e:	jae    0x14000c3bd
   14000c380:	and    dh,BYTE PTR [rbp+0x72]
   14000c383:	outs   dx,BYTE PTR ds:[rsi]
   14000c384:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c387:	push   0x73616d65
   14000c38c:	sub    eax,0x7263696d
   14000c391:	outs   dx,DWORD PTR ds:[rsi]
   14000c392:	jae    0x14000c403
   14000c394:	data16 je 0x14000c3c4
   14000c397:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c39a:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c39d:	ins    DWORD PTR es:[rdi],dx
   14000c39e:	cs jbe 0x14000c3d4
   14000c3a1:	and    bh,BYTE PTR [rsi]
   14000c3a3:	or     eax,0x2020200a
   14000c3a8:	and    BYTE PTR [rbx+rsi*2],bh
   14000c3ab:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c3af:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c3b7:	and    BYTE PTR [rax],ah
   14000c3b9:	and    BYTE PTR [rax],ah
   14000c3bb:	and    BYTE PTR [rax],ah
   14000c3bd:	cmp    al,0x72
   14000c3bf:	gs jno 0x14000c437
   14000c3c2:	gs jae 0x14000c439
   14000c3c5:	gs fs push rax
   14000c3c8:	jb     0x14000c433
   14000c3ca:	jbe    0x14000c435
   14000c3cc:	ins    BYTE PTR es:[rdi],dx
   14000c3cd:	gs addr32 gs jae 0x14000c410
   14000c3d2:	or     eax,0x2020200a
   14000c3d7:	and    BYTE PTR [rax],ah
   14000c3d9:	and    BYTE PTR [rax],ah
   14000c3db:	and    BYTE PTR [rax],ah
   14000c3dd:	and    BYTE PTR [rax],ah
   14000c3df:	and    BYTE PTR [rdx+rsi*2],bh
   14000c3e2:	gs jno 0x14000c45a
   14000c3e5:	gs jae 0x14000c45c
   14000c3e8:	gs fs rex.RB js 0x14000c452
   14000c3ed:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c3f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c3f7:	ins    BYTE PTR es:[rdi],dx
   14000c3f8:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c3fc:	gs ins BYTE PTR es:[rdi],dx
   14000c3fe:	cmp    eax,0x49736122
   14000c403:	outs   dx,BYTE PTR ds:[rsi]
   14000c404:	jbe    0x14000c475
   14000c406:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c40a:	and    BYTE PTR [rbp+0x69],dh
   14000c40d:	movsxd esp,DWORD PTR [r11+0x65]
   14000c411:	jae    0x14000c486
   14000c413:	cmp    eax,0x6c616622
   14000c418:	jae    0x14000c47f
   14000c41a:	and    ch,BYTE PTR [rdi]
   14000c41c:	ds or  eax,0x2020200a
   14000c422:	and    BYTE PTR [rax],ah
   14000c424:	and    BYTE PTR [rax],ah
   14000c426:	and    BYTE PTR [rdi+rbp*1],bh
   14000c429:	jb     0x14000c490
   14000c42b:	jno    0x14000c4a2
   14000c42d:	gs jae 0x14000c4a4
   14000c430:	gs fs push rax
   14000c433:	jb     0x14000c49e
   14000c435:	jbe    0x14000c4a0
   14000c437:	ins    BYTE PTR es:[rdi],dx
   14000c438:	gs addr32 gs jae 0x14000c47b
   14000c43d:	or     eax,0x2020200a
   14000c442:	and    BYTE PTR [rdi+rbp*1],bh
   14000c445:	jae    0x14000c4ac
   14000c447:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c44a:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000c452:	je     0x14000c4c6
   14000c454:	jne    0x14000c4c9
   14000c456:	je     0x14000c4a1
   14000c458:	outs   dx,BYTE PTR ds:[rsi]
   14000c459:	outs   dx,WORD PTR ds:[rsi]
   14000c45b:	ds or  eax,0x70613c0a
   14000c461:	jo     0x14000c4cf
   14000c463:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000c46a:	and    BYTE PTR [rax+0x6d],bh
   14000c46d:	ins    BYTE PTR es:[rdi],dx
   14000c46e:	outs   dx,BYTE PTR ds:[rsi]
   14000c46f:	jae    0x14000c4ae
   14000c471:	and    dh,BYTE PTR [rbp+0x72]
   14000c474:	outs   dx,BYTE PTR ds:[rsi]
   14000c475:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c478:	push   0x73616d65
   14000c47d:	sub    eax,0x7263696d
   14000c482:	outs   dx,DWORD PTR ds:[rsi]
   14000c483:	jae    0x14000c4f4
   14000c485:	data16 je 0x14000c4b5
   14000c488:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c48b:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c48e:	ins    DWORD PTR es:[rdi],dx
   14000c48f:	cs jbe 0x14000c4c5
   14000c492:	and    bh,BYTE PTR [rsi]
   14000c494:	or     eax,0x2020200a
   14000c499:	and    BYTE PTR [rdi+rsi*2],bh
   14000c49c:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   14000c4a3:	gs je  0x14000c51a
   14000c4a6:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000c4ad:	and    BYTE PTR [rax],ah
   14000c4af:	and    BYTE PTR [rax],ah
   14000c4b1:	and    BYTE PTR [rax],ah
   14000c4b3:	and    BYTE PTR [rax],ah
   14000c4b5:	cmp    al,0x64
   14000c4b7:	jo     0x14000c522
   14000c4b9:	rex.B ja 0x14000c51d
   14000c4bc:	jb     0x14000c523
   14000c4be:	and    BYTE PTR [rax],ah
   14000c4c0:	js     0x14000c52f
   14000c4c2:	ins    BYTE PTR es:[rdi],dx
   14000c4c3:	outs   dx,BYTE PTR ds:[rsi]
   14000c4c4:	jae    0x14000c503
   14000c4c6:	and    ch,BYTE PTR [rax+0x74]
   14000c4c9:	je     0x14000c53b
   14000c4cb:	cmp    ch,BYTE PTR [rdi]
   14000c4cd:	(bad)  
   14000c4ce:	jae    0x14000c533
   14000c4d0:	push   0x73616d65
   14000c4d5:	cs ins DWORD PTR es:[rdi],dx
   14000c4d7:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000c4de:	je     0x14000c50e
   14000c4e0:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c4e3:	(bad)  
   14000c4e4:	push   rbx
   14000c4e5:	rex.WRB
   14000c4e6:	rex.WB (bad) 
   14000c4e8:	xor    dh,BYTE PTR [rax]
   14000c4ea:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a1c1f
   14000c4f0:	outs   dx,DWORD PTR fs:[rsi]
   14000c4f2:	ja     0x14000c567
   14000c4f4:	push   rbx
   14000c4f5:	gs je  0x14000c56c
   14000c4f8:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   14000c4ff:	jb     0x14000c576
   14000c501:	gs cmp al,0x2f
   14000c504:	fs jo  0x14000c570
   14000c507:	rex.B ja 0x14000c56b
   14000c50a:	jb     0x14000c571
   14000c50c:	ds or  eax,0x2020200a
   14000c512:	and    BYTE PTR [rdi+rbp*1],bh
   14000c515:	ja     0x14000c580
   14000c517:	outs   dx,BYTE PTR ds:[rsi]
   14000c518:	outs   dx,DWORD PTR fs:[rsi]
   14000c51a:	ja     0x14000c58f
   14000c51c:	push   rbx
   14000c51d:	gs je  0x14000c594
   14000c520:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000c527:	cmp    al,0x2f
   14000c529:	(bad)  
   14000c52a:	jo     0x14000c59c
   14000c52c:	ins    BYTE PTR es:[rdi],dx
   14000c52d:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000c534:	ds or  eax,0x612f3c0a
   14000c53a:	jae    0x14000c5af
   14000c53c:	gs ins DWORD PTR es:[rdi],dx
   14000c53e:	(bad)  
   14000c53f:	ins    BYTE PTR es:[rdi],dx
   14000c540:	jns    0x14000c580
   14000c542:	or     eax,0xa
   14000c547:	add    al,ah
   14000c549:	add    esi,DWORD PTR [rax+rax*1]
   14000c54c:	add    BYTE PTR [rax],al
   14000c54e:	push   rsi
   14000c54f:	add    BYTE PTR [rbx+0x0],dl
   14000c552:	pop    rdi
   14000c553:	add    BYTE PTR [rsi+0x0],dl
   14000c556:	add    BYTE PTR [r10+0x0],r10b
   14000c55a:	push   rbx
   14000c55b:	add    BYTE PTR [rcx+0x0],cl
   14000c55e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c562:	pop    rdi
   14000c563:	add    BYTE PTR [rcx+0x0],cl
   14000c566:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c56a:	rex.WRXB add BYTE PTR [r8],r8b
   14000c56d:	add    BYTE PTR [rax],al
   14000c56f:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c575:	add    BYTE PTR [rcx],al
   14000c577:	add    BYTE PTR [rax],al
   14000c579:	add    BYTE PTR [rdx],cl
   14000c57b:	add    BYTE PTR [rax],al
   14000c57d:	add    BYTE PTR [rax],bpl
   14000c580:	add    BYTE PTR [rax],al
   14000c582:	or     al,BYTE PTR [rax]
   14000c584:	add    BYTE PTR [rax+0x0],al
   14000c587:	sub    BYTE PTR [rdi],bh
   14000c589:	add    BYTE PTR [rax],al
   14000c58b:	add    BYTE PTR [rax],al
   14000c58d:	add    BYTE PTR [rax],al
   14000c58f:	add    BYTE PTR [rax+rax*1],al
   14000c592:	add    al,0x0
   14000c594:	add    DWORD PTR [rax],eax
	...
   14000c5a2:	add    BYTE PTR [rax],al
   14000c5a4:	add    eax,DWORD PTR ds:[rax]
   14000c5a7:	add    BYTE PTR [rcx],al
   14000c5a9:	add    BYTE PTR [rbx+0x0],dl
   14000c5ac:	je     0x14000c5ae
   14000c5ae:	jb     0x14000c5b0
   14000c5b0:	imul   eax,DWORD PTR [rax],0x67006e
   14000c5b6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c5ba:	ins    BYTE PTR es:[rdi],dx
   14000c5bb:	add    BYTE PTR [rbp+0x0],ah
   14000c5be:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c5c2:	data16 add BYTE PTR [rdi+0x0],ch
   14000c5c6:	add    BYTE PTR [rax],al
   14000c5c8:	sbb    al,BYTE PTR [rbx]
   14000c5ca:	add    BYTE PTR [rax],al
   14000c5cc:	add    DWORD PTR [rax],eax
   14000c5ce:	xor    BYTE PTR [rax],al
   14000c5d0:	xor    al,0x0
   14000c5d2:	xor    BYTE PTR [rax],al
   14000c5d4:	cmp    DWORD PTR [rax],eax
   14000c5d6:	xor    BYTE PTR [rax],al
   14000c5d8:	xor    al,0x0
   14000c5da:	rex.X add BYTE PTR [rax],sil
   14000c5dd:	add    BYTE PTR [rax],al
   14000c5df:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c5e3:	add    BYTE PTR [rcx],al
   14000c5e5:	add    BYTE PTR [rbx+0x0],al
   14000c5e8:	outs   dx,DWORD PTR ds:[rsi]
   14000c5e9:	add    BYTE PTR [rbp+0x0],ch
   14000c5ec:	jo     0x14000c5ee
   14000c5ee:	(bad)  
   14000c5ef:	add    BYTE PTR [rsi+0x0],ch
   14000c5f2:	jns    0x14000c5f4
   14000c5f4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c5f8:	ins    DWORD PTR es:[rdi],dx
   14000c5f9:	add    BYTE PTR [rbp+0x0],ah
   14000c5fc:	add    BYTE PTR [rax],al
   14000c5fe:	add    BYTE PTR [rax],al
   14000c600:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c604:	movsxd eax,DWORD PTR [rax]
   14000c606:	jb     0x14000c608
   14000c608:	outs   dx,DWORD PTR ds:[rsi]
   14000c609:	add    BYTE PTR [rbx+0x0],dh
   14000c60c:	outs   dx,DWORD PTR ds:[rsi]
   14000c60d:	add    BYTE PTR [rsi+0x0],ah
   14000c610:	je     0x14000c612
   14000c612:	and    BYTE PTR [rax],al
   14000c614:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c618:	jb     0x14000c61a
   14000c61a:	jo     0x14000c61c
   14000c61c:	outs   dx,DWORD PTR ds:[rsi]
   14000c61d:	add    BYTE PTR [rdx+0x0],dh
   14000c620:	(bad)  
   14000c621:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c625:	add    BYTE PTR [rdi+0x0],ch
   14000c628:	outs   dx,BYTE PTR ds:[rsi]
   14000c629:	add    BYTE PTR [rax],al
   14000c62b:	add    BYTE PTR [rax+rax*1+0x22],ch
   14000c62f:	add    BYTE PTR [rcx],al
   14000c631:	add    BYTE PTR [rsi+0x0],al
   14000c634:	imul   eax,DWORD PTR [rax],0x65006c
   14000c63a:	add    BYTE PTR [rbp+0x0],r12b
   14000c63e:	jae    0x14000c640
   14000c640:	movsxd eax,DWORD PTR [rax]
   14000c642:	jb     0x14000c644
   14000c644:	imul   eax,DWORD PTR [rax],0x740070
   14000c64a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c650:	add    BYTE PTR [rax],al
   14000c652:	add    BYTE PTR [rax],al
   14000c654:	push   rsp
   14000c655:	add    BYTE PTR [rax+0x0],ch
   14000c658:	jne    0x14000c65a
   14000c65a:	ins    DWORD PTR es:[rdi],dx
   14000c65b:	add    BYTE PTR [rdx+0x0],ah
   14000c65e:	outs   dx,BYTE PTR ds:[rsi]
   14000c65f:	add    BYTE PTR [rcx+0x0],ah
   14000c662:	imul   eax,DWORD PTR [rax],0x20006c
   14000c668:	rex.W add BYTE PTR [rcx+0x0],spl
   14000c66c:	outs   dx,BYTE PTR ds:[rsi]
   14000c66d:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000c671:	add    BYTE PTR [rbp+0x0],ah
   14000c674:	jb     0x14000c676
   14000c676:	and    BYTE PTR [rax],al
   14000c678:	add    BYTE PTR [r8+0x0],r15b
   14000c67c:	je     0x14000c67e
   14000c67e:	jb     0x14000c680
   14000c680:	(bad)  
   14000c681:	add    BYTE PTR [rbx+0x0],ah
   14000c684:	je     0x14000c686
   14000c686:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c68c:	and    BYTE PTR [rax],al
   14000c68e:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000c692:	jae    0x14000c694
   14000c694:	je     0x14000c696
   14000c696:	add    BYTE PTR [rax],al
   14000c698:	data16 add BYTE PTR [rbx],ah
   14000c69b:	add    BYTE PTR [rcx],al
   14000c69d:	add    BYTE PTR [rsi+0x0],al
   14000c6a0:	imul   eax,DWORD PTR [rax],0x65006c
   14000c6a6:	push   rsi
   14000c6a7:	add    BYTE PTR [rbp+0x0],ah
   14000c6aa:	jb     0x14000c6ac
   14000c6ac:	jae    0x14000c6ae
   14000c6ae:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c6b4:	add    BYTE PTR [rax],al
   14000c6b6:	add    BYTE PTR [rax],al
   14000c6b8:	xor    DWORD PTR [rax],eax
   14000c6ba:	xor    BYTE PTR [rax],al
   14000c6bc:	add    BYTE PTR cs:[rax],dh
   14000c6bf:	add    BYTE PTR [rsi],ch
   14000c6c1:	add    BYTE PTR [rcx],dh
   14000c6c3:	add    BYTE PTR [rax],dh
   14000c6c5:	add    BYTE PTR [rdx],dh
   14000c6c7:	add    BYTE PTR [rax+rax*1],dh
   14000c6ca:	xor    BYTE PTR [rax],al
   14000c6cc:	add    BYTE PTR cs:[rcx],dh
   14000c6cf:	add    BYTE PTR [rsi],dh
   14000c6d1:	add    BYTE PTR [rbx],dh
   14000c6d3:	add    BYTE PTR [rax],bh
   14000c6d5:	add    BYTE PTR [rax+rax*1],dh
   14000c6d8:	and    BYTE PTR [rax],al
   14000c6da:	sub    BYTE PTR [rax],al
   14000c6dc:	je     0x14000c6de
   14000c6de:	push   0x2e003100
   14000c6e3:	add    BYTE PTR [rcx],dh
   14000c6e5:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f6eb
   14000c6eb:	add    BYTE PTR [rax],dh
   14000c6ed:	add    BYTE PTR [rcx],bh
   14000c6ef:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f7f5
   14000c6f5:	add    BYTE PTR [rax],dh
   14000c6f7:	add    BYTE PTR [rax],dh
   14000c6f9:	add    BYTE PTR [rcx],ch
   14000c6fb:	add    BYTE PTR [rax],al
   14000c6fd:	add    BYTE PTR [rax],al
   14000c6ff:	add    BYTE PTR [rax+0x0],dl
   14000c702:	sbb    BYTE PTR [rax],al
   14000c704:	add    DWORD PTR [rax],eax
   14000c706:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c70a:	je     0x14000c70c
   14000c70c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c710:	outs   dx,BYTE PTR ds:[rsi]
   14000c711:	add    BYTE PTR [rcx+0x0],ah
   14000c714:	ins    BYTE PTR es:[rdi],dx
   14000c715:	add    BYTE PTR [rsi+0x0],cl
   14000c718:	(bad)  
   14000c719:	add    BYTE PTR [rbp+0x0],ch
   14000c71c:	add    BYTE PTR gs:[rax],al
   14000c71f:	add    BYTE PTR [rax+rax*1+0x68],dl
   14000c723:	add    BYTE PTR [rbp+0x0],dh
   14000c726:	ins    DWORD PTR es:[rdi],dx
   14000c727:	add    BYTE PTR [rdx+0x0],ah
   14000c72a:	outs   dx,BYTE PTR ds:[rsi]
   14000c72b:	add    BYTE PTR [rcx+0x0],ah
   14000c72e:	imul   eax,DWORD PTR [rax],0x45006c
   14000c734:	js     0x14000c736
   14000c736:	je     0x14000c738
   14000c738:	jb     0x14000c73a
   14000c73a:	(bad)  
   14000c73b:	add    BYTE PTR [rbx+0x0],ah
   14000c73e:	je     0x14000c740
   14000c740:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c746:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000c74a:	jae    0x14000c74c
   14000c74c:	je     0x14000c74e
   14000c74e:	add    BYTE PTR [rax],al
   14000c750:	add    BYTE PTR [rax],0x2e
   14000c753:	add    BYTE PTR [rcx],al
   14000c755:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c759:	add    BYTE PTR [rdi+0x0],ah
   14000c75c:	(bad)  
   14000c75d:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c761:	add    BYTE PTR [rdi+0x0],ch
   14000c764:	jo     0x14000c766
   14000c766:	jns    0x14000c768
   14000c768:	jb     0x14000c76a
   14000c76a:	imul   eax,DWORD PTR [rax],0x680067
   14000c770:	je     0x14000c772
   14000c772:	add    BYTE PTR [rax],al
   14000c774:	test   eax,0x4d002000
   14000c779:	add    BYTE PTR [rcx+0x0],ch
   14000c77c:	movsxd eax,DWORD PTR [rax]
   14000c77e:	jb     0x14000c780
   14000c780:	outs   dx,DWORD PTR ds:[rsi]
   14000c781:	add    BYTE PTR [rbx+0x0],dh
   14000c784:	outs   dx,DWORD PTR ds:[rsi]
   14000c785:	add    BYTE PTR [rsi+0x0],ah
   14000c788:	je     0x14000c78a
   14000c78a:	and    BYTE PTR [rax],al
   14000c78c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c790:	jb     0x14000c792
   14000c792:	jo     0x14000c794
   14000c794:	outs   dx,DWORD PTR ds:[rsi]
   14000c795:	add    BYTE PTR [rdx+0x0],dh
   14000c798:	(bad)  
   14000c799:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c79d:	add    BYTE PTR [rdi+0x0],ch
   14000c7a0:	outs   dx,BYTE PTR ds:[rsi]
   14000c7a1:	add    BYTE PTR [rsi],ch
   14000c7a3:	add    BYTE PTR [rax],ah
   14000c7a5:	add    BYTE PTR [rcx+0x0],al
   14000c7a8:	ins    BYTE PTR es:[rdi],dx
   14000c7a9:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c7ad:	add    BYTE PTR [rdx+0x0],dh
   14000c7b0:	imul   eax,DWORD PTR [rax],0x680067
   14000c7b6:	je     0x14000c7b8
   14000c7b8:	jae    0x14000c7ba
   14000c7ba:	and    BYTE PTR [rax],al
   14000c7bc:	jb     0x14000c7be
   14000c7be:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c7c2:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c7c6:	jbe    0x14000c7c8
   14000c7c8:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c7cd:	add    BYTE PTR [rax],al
   14000c7cf:	add    BYTE PTR [rax+0x0],ah
   14000c7d2:	sbb    al,0x0
   14000c7d4:	add    DWORD PTR [rax],eax
   14000c7d6:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000c7da:	imul   eax,DWORD PTR [rax],0x690067
   14000c7e0:	outs   dx,BYTE PTR ds:[rsi]
   14000c7e1:	add    BYTE PTR [rcx+0x0],ah
   14000c7e4:	ins    BYTE PTR es:[rdi],dx
   14000c7e5:	add    BYTE PTR [rsi+0x0],al
   14000c7e8:	imul   eax,DWORD PTR [rax],0x65006c
   14000c7ee:	outs   dx,BYTE PTR ds:[rsi]
   14000c7ef:	add    BYTE PTR [rcx+0x0],ah
   14000c7f2:	ins    DWORD PTR es:[rdi],dx
   14000c7f3:	add    BYTE PTR [rbp+0x0],ah
   14000c7f6:	add    BYTE PTR [rax],al
   14000c7f8:	push   rsp
   14000c7f9:	add    BYTE PTR [rax+0x0],ch
   14000c7fc:	jne    0x14000c7fe
   14000c7fe:	ins    DWORD PTR es:[rdi],dx
   14000c7ff:	add    BYTE PTR [rdx+0x0],ah
   14000c802:	outs   dx,BYTE PTR ds:[rsi]
   14000c803:	add    BYTE PTR [rcx+0x0],ah
   14000c806:	imul   eax,DWORD PTR [rax],0x45006c
   14000c80c:	js     0x14000c80e
   14000c80e:	je     0x14000c810
   14000c810:	jb     0x14000c812
   14000c812:	(bad)  
   14000c813:	add    BYTE PTR [rbx+0x0],ah
   14000c816:	je     0x14000c818
   14000c818:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c81e:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000c822:	jae    0x14000c824
   14000c824:	je     0x14000c826
   14000c826:	add    BYTE PTR cs:[rbp+0x0],al
   14000c82a:	pop    rax
   14000c82b:	add    BYTE PTR [rbp+0x0],al
   14000c82e:	add    BYTE PTR [rax],al
   14000c830:	push   0x0
   14000c832:	and    eax,0x50000100
   14000c837:	add    BYTE PTR [rdx+0x0],dh
   14000c83a:	outs   dx,DWORD PTR ds:[rsi]
   14000c83b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c83f:	add    BYTE PTR [rbx+0x0],ah
   14000c842:	je     0x14000c844
   14000c844:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c848:	ins    DWORD PTR es:[rdi],dx
   14000c849:	add    BYTE PTR [rbp+0x0],ah
   14000c84c:	add    BYTE PTR [rax],al
   14000c84e:	add    BYTE PTR [rax],al
   14000c850:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c854:	movsxd eax,DWORD PTR [rax]
   14000c856:	jb     0x14000c858
   14000c858:	outs   dx,DWORD PTR ds:[rsi]
   14000c859:	add    BYTE PTR [rbx+0x0],dh
   14000c85c:	outs   dx,DWORD PTR ds:[rsi]
   14000c85d:	add    BYTE PTR [rsi+0x0],ah
   14000c860:	je     0x14000c862
   14000c862:	scas   al,BYTE PTR es:[rdi]
   14000c863:	add    BYTE PTR [rax],ah
   14000c865:	add    BYTE PTR [rdi+0x0],dl
   14000c868:	imul   eax,DWORD PTR [rax],0x64006e
   14000c86e:	outs   dx,DWORD PTR ds:[rsi]
   14000c86f:	add    BYTE PTR [rdi+0x0],dh
   14000c872:	jae    0x14000c874
   14000c874:	scas   al,BYTE PTR es:[rdi]
   14000c875:	add    BYTE PTR [rax],ah
   14000c877:	add    BYTE PTR [rdi+0x0],cl
   14000c87a:	jo     0x14000c87c
   14000c87c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c880:	(bad)  
   14000c881:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c885:	add    BYTE PTR [rsi+0x0],ch
   14000c888:	add    BYTE PTR [eax],ah
   14000c88b:	add    BYTE PTR [rbx+0x0],dl
   14000c88e:	jns    0x14000c890
   14000c890:	jae    0x14000c892
   14000c892:	je     0x14000c894
   14000c894:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c898:	add    BYTE PTR [rax],al
   14000c89a:	add    BYTE PTR [rax],al
   14000c89c:	rex.RX add BYTE PTR [rcx],r10b
   14000c89f:	add    BYTE PTR [rcx],al
   14000c8a1:	add    BYTE PTR [rax+0x0],dl
   14000c8a4:	jb     0x14000c8a6
   14000c8a6:	outs   dx,DWORD PTR ds:[rsi]
   14000c8a7:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c8ab:	add    BYTE PTR [rbx+0x0],ah
   14000c8ae:	je     0x14000c8b0
   14000c8b0:	push   rsi
   14000c8b1:	add    BYTE PTR [rbp+0x0],ah
   14000c8b4:	jb     0x14000c8b6
   14000c8b6:	jae    0x14000c8b8
   14000c8b8:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c8be:	add    BYTE PTR [rax],al
   14000c8c0:	xor    DWORD PTR [rax],eax
   14000c8c2:	xor    BYTE PTR [rax],al
   14000c8c4:	add    BYTE PTR cs:[rax],dh
   14000c8c7:	add    BYTE PTR [rsi],ch
   14000c8c9:	add    BYTE PTR [rcx],dh
   14000c8cb:	add    BYTE PTR [rax],dh
   14000c8cd:	add    BYTE PTR [rdx],dh
   14000c8cf:	add    BYTE PTR [rax+rax*1],dh
   14000c8d2:	xor    BYTE PTR [rax],al
   14000c8d4:	add    BYTE PTR cs:[rcx],dh
   14000c8d7:	add    BYTE PTR [rsi],dh
   14000c8d9:	add    BYTE PTR [rbx],dh
   14000c8db:	add    BYTE PTR [rax],bh
   14000c8dd:	add    BYTE PTR [rax+rax*1],dh
   14000c8e0:	add    BYTE PTR [rax],al
   14000c8e2:	add    BYTE PTR [rax],al
   14000c8e4:	add    BYTE PTR [rax],r8b
   14000c8e7:	add    BYTE PTR [rcx],al
   14000c8e9:	add    BYTE PTR [rsi+0x0],dl
   14000c8ec:	(bad)  
   14000c8ed:	add    BYTE PTR [rdx+0x0],dh
   14000c8f0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c8f4:	ins    BYTE PTR es:[rdi],dx
   14000c8f5:	add    BYTE PTR [rbp+0x0],ah
   14000c8f8:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c8fc:	data16 add BYTE PTR [rdi+0x0],ch
   14000c900:	add    BYTE PTR [rax],al
   14000c902:	add    BYTE PTR [rax],al
   14000c904:	and    al,0x0
   14000c906:	add    al,0x0
   14000c908:	add    BYTE PTR [rax],al
   14000c90a:	push   rsp
   14000c90b:	add    BYTE PTR [rdx+0x0],dh
   14000c90e:	(bad)  
   14000c90f:	add    BYTE PTR [rsi+0x0],ch
   14000c912:	jae    0x14000c914
   14000c914:	ins    BYTE PTR es:[rdi],dx
   14000c915:	add    BYTE PTR [rcx+0x0],ah
   14000c918:	je     0x14000c91a
   14000c91a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c920:	add    BYTE PTR [rax],al
   14000c922:	add    BYTE PTR [rax],al
   14000c924:	or     DWORD PTR [rax+rsi*4],eax
   14000c927:	.byte 0x4

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],ah
   14000d003:	add    ah,cl
   14000d005:	add    BYTE PTR [rax],al
   14000d007:	add    BYTE PTR [rax-0x2f5d3f5e],bh
   14000d00d:	movabs ds:0xa2f0a2e8a2e0a2d8,al
   14000d016:	or     BYTE PTR [rbx-0x5b2f5cf0],ah
   14000d01c:	fsub   DWORD PTR [rax+rsi*4-0x3f59475a]
   14000d023:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d024:	enter  0xd0a6,0xa6
   14000d028:	fsub   DWORD PTR [rsi-0x59175920]
   14000d02e:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d030:	clc    
   14000d031:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d032:	and    BYTE PTR [rdi-0x58cf58d8],ah
   14000d038:	cmp    BYTE PTR [rdi-0x588758c0],ah
   14000d03e:	and    BYTE PTR [rdi-0x586f5878],0x98
   14000d045:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d046:	movabs al,ds:0xd0a7b8a7b0a7a8a7
   14000d04f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d050:	fsub   DWORD PTR [rdi-0x58175820]
   14000d056:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d058:	clc    
   14000d059:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d05a:	sub    BYTE PTR [rax-0x57c757d0],ch
   14000d060:	test   al,0x48
   14000d063:	test   al,0x78
   14000d065:	test   al,0xb8
   14000d067:	test   al,0xc0
   14000d069:	test   al,0xc8
   14000d06b:	test   al,0xd0
   14000d06d:	test   al,0xd8
   14000d06f:	test   al,0xe0
   14000d071:	test   al,0xe8
   14000d073:	test   al,0xf0
   14000d075:	test   al,0xf8
   14000d077:	test   al,0x0
   14000d079:	test   eax,0xa910a908
   14000d07e:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14000d084:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14000d08a:	test   rax,0xffffffffa958a950
   14000d090:	(bad)  
   14000d091:	test   eax,0xa970a968
   14000d096:	js     0x14000d041
   14000d098:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14000d09f:	test   eax,0xa9a8a9a0
   14000d0a4:	mov    al,0xa9
   14000d0a6:	mov    eax,0xc8a9c0a9
   14000d0ab:	test   eax,0xa9d8a9d0
   14000d0b0:	loopne 0x14000d05b
   14000d0b2:	call   0x160abe160
   14000d0b7:	stos   DWORD PTR es:[rdi],eax
   14000d0b8:	xor    BYTE PTR [rbx-0x54af54c0],ch
   14000d0be:	(bad)  
   14000d0bf:	stos   DWORD PTR es:[rdi],eax
   14000d0c0:	jo     0x14000d06d
   14000d0c2:	clc    
   14000d0c3:	lods   eax,DWORD PTR ds:[rsi]
   14000d0c4:	adc    BYTE PTR [rsi-0x51df51e8],ch
   14000d0ca:	add    BYTE PTR [rax],al
   14000d0cc:	add    BYTE PTR [rax+0x0],dh
   14000d0cf:	add    BYTE PTR [rax+rax*1],cl
   14000d0d2:	add    BYTE PTR [rax],al
   14000d0d4:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d0d6:	add    BYTE PTR [rax],al
   14000d0d8:	add    BYTE PTR [rax+0x180000],dl
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   14000d0e6:	cmp    BYTE PTR [rax-0x5fa75fb0],ah
   14000d0ec:	(bad)  
   14000d0ed:	movabs al,ds:0x280000b0000000
   14000d0f6:	add    BYTE PTR [rax],al
   14000d0f8:	add    BYTE PTR [rax-0x5fef5ff8],ah
   14000d0fe:	sbb    BYTE PTR [rax-0x5fcf5fe0],ah
   14000d104:	cmp    BYTE PTR [rax-0x5fb75fc0],ah
   14000d10a:	push   rax
   14000d10b:	movabs al,ds:0xa078a070a068a058
   14000d114:	.byte 0x80
   14000d115:	.byte 0xa0
   14000d116:	.byte 0x88
   14000d117:	.byte 0xa0
