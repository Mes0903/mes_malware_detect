
da1effb56ddd4c5630864b52366f91de3ba8ec77fad6c2a6a0a3ed833aa6b625.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x2a7c5]        # 0x42b7e0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x2a7c6]        # 0x42b7f0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x2a7c9]        # 0x42b800
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x2a78c]        # 0x42b7d0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x2a4af]        # 0x42b500
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x2a761]        # 0x42b7c0
  40105f:	mov    DWORD PTR [rip+0x2ffa3],edx        # 0x431008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x41dcd0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x41b880
  401081:	mov    rdx,QWORD PTR [rip+0x2a518]        # 0x42b5a0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x2a4fe]        # 0x42b590
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x2a564]        # 0x42b600
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x2a49b]        # 0x42b540
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x41b460
  4010af:	mov    rax,QWORD PTR [rip+0x2a3fa]        # 0x42b4b0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x41dcd0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1a639]        # 0x41b760
  401127:	call   0x41b750
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x2a4c5]        # 0x42b630
  40116b:	lea    r8,[rip+0x2fea6]        # 0x431018
  401172:	lea    rdx,[rip+0x2fea7]        # 0x431020
  401179:	lea    rcx,[rip+0x2fea8]        # 0x431028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x2fe78],eax        # 0x431000
  401188:	lea    rax,[rip+0x2fe71]        # 0x431000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x2a455]        # 0x42b5f0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x41dce8
  4011a3:	mov    DWORD PTR [rip+0x2fe67],eax        # 0x431010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x2a5fa]        # 0x42b7c0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x2a37b]        # 0x42b570
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x33476]        # 0x434678
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x2a357]        # 0x42b580
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x2fdba],0x1        # 0x431004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x2a28c]        # 0x42b4f0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x41ba70
  40127d:	lea    rcx,[rip+0x1ad8c]        # 0x41c010
  401284:	call   QWORD PTR [rip+0x333e6]        # 0x434670
  40128a:	mov    rdx,QWORD PTR [rip+0x2a2cf]        # 0x42b560
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x41bf20
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x41dd10
  4012a5:	call   0x41b860
  4012aa:	mov    rax,QWORD PTR [rip+0x2a24f]        # 0x42b500
  4012b1:	mov    QWORD PTR [rip+0x32390],rax        # 0x433648
  4012b8:	mov    rax,QWORD PTR [rip+0x2a271]        # 0x42b530
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x32329],rax        # 0x433640
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1dcca],eax        # 0x41f000
  401336:	mov    r12d,DWORD PTR [rip+0x2fceb]        # 0x431028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x41dbc8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x2fcc2]        # 0x431020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x41db50
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x41dbc8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x41dbc0
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x2fc6a],rbp        # 0x431020
  4013b6:	call   0x41b430
  4013bb:	mov    rax,QWORD PTR [rip+0x2a15e]        # 0x42b520
  4013c2:	mov    rdx,QWORD PTR [rip+0x2fc4f]        # 0x431018
  4013c9:	mov    ecx,DWORD PTR [rip+0x2fc59]        # 0x431028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x2fc3c]        # 0x431018
  4013dc:	mov    rdx,QWORD PTR [rip+0x2fc3d]        # 0x431020
  4013e3:	call   0x41ddf0
  4013e8:	mov    ecx,DWORD PTR [rip+0x2fc1a]        # 0x431008
  4013ee:	mov    DWORD PTR [rip+0x2fc18],eax        # 0x43100c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x2fc02]        # 0x431004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x41dcb8
  40140b:	mov    eax,DWORD PTR [rip+0x2fbfb]        # 0x43100c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x2a149]        # 0x42b580
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x41dcc0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2a15d]        # 0x42b5c0
  401463:	mov    rcx,QWORD PTR [rip+0x2a146]        # 0x42b5b0
  40146a:	call   0x41dca0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x33187]        # 0x434620
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x2a139]        # 0x42b5e0
  4014a7:	mov    rcx,QWORD PTR [rip+0x2a122]        # 0x42b5d0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x41dca0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x41dc48
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x2a2e5]        # 0x42b7c0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x41b470
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x2a2b5]        # 0x42b7c0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x41b470
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	test   rdx,rdx
  401533:	je     0x40153b
  401535:	mov    rax,QWORD PTR [rcx]
  401538:	mov    QWORD PTR [rdx],rax
  40153b:	mov    eax,0x1
  401540:	ret    
  401541:	nop    DWORD PTR [rax+rax*1+0x0]
  401546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401550:	mov    eax,0x1
  401555:	mov    QWORD PTR [rcx],rdx
  401558:	ret    
  401559:	nop    DWORD PTR [rax+0x0]
  401560:	push   r15
  401562:	push   r14
  401564:	push   r13
  401566:	push   r12
  401568:	push   rbp
  401569:	push   rdi
  40156a:	push   rsi
  40156b:	push   rbx
  40156c:	sub    rsp,0x78
  401570:	mov    rbx,QWORD PTR [rsp+0xe0]
  401578:	mov    rsi,rdx
  40157b:	mov    edx,DWORD PTR [rcx+0xc]
  40157e:	mov    rbp,rcx
  401581:	mov    rdi,r8
  401584:	cmp    edx,0xf
  401587:	jle    0x401812
  40158d:	cmp    edx,0x6a
  401590:	je     0x4016c1
  401596:	cmp    edx,0x6c
  401599:	je     0x401930
  40159f:	cmp    edx,0x10
  4015a2:	jne    0x4017e0
  4015a8:	test   rsi,rsi
  4015ab:	je     0x4019e0
  4015b1:	mov    eax,DWORD PTR [rsi]
  4015b3:	cmp    eax,0x1f
  4015b6:	je     0x4019e0
  4015bc:	cmp    eax,0x10
  4015bf:	je     0x4015d0
  4015c1:	mov    ecx,DWORD PTR [rsi+0x4]
  4015c4:	lea    rdx,[rip+0x1eb35]        # 0x420100
  4015cb:	call   0x40b520
  4015d0:	mov    rax,QWORD PTR [rbp+0x30]
  4015d4:	mov    r13,QWORD PTR [rsi+0x8]
  4015d8:	test   rax,rax
  4015db:	je     0x401cd5
  4015e1:	movsxd r8,DWORD PTR [rax+0x4]
  4015e5:	test   r13,r13
  4015e8:	mov    r15d,r8d
  4015eb:	je     0x401d04
  4015f1:	cmp    r15d,DWORD PTR [r13+0x10]
  4015f5:	jl     0x401c50
  4015fb:	test   rax,rax
  4015fe:	mov    r10,QWORD PTR [rbx+0x18]
  401602:	je     0x401d20
  401608:	movsxd r8,DWORD PTR [rax+0x4]
  40160c:	lea    rax,[rsp+0x50]
  401611:	mov    r9,rdi
  401614:	mov    edx,0x3
  401619:	mov    rcx,rbx
  40161c:	mov    QWORD PTR [rsp+0x20],rax
  401621:	call   r10
  401624:	test   r15d,r15d
  401627:	jle    0x401d7a
  40162d:	xor    esi,esi
  40162f:	nop
  401630:	mov    rcx,QWORD PTR [rbp+0x30]
  401634:	mov    edx,esi
  401636:	xor    r12d,r12d
  401639:	call   0x416670
  40163e:	test   r13,r13
  401641:	mov    r14,rax
  401644:	je     0x401657
  401646:	cmp    rsi,QWORD PTR [r13+0x10]
  40164a:	jae    0x401657
  40164c:	mov    r12,rsi
  40164f:	shl    r12,0x5
  401653:	add    r12,QWORD PTR [r13+0x20]
  401657:	mov    r9,rsi
  40165a:	mov    r8d,DWORD PTR [rsp+0x50]
  40165f:	mov    edx,0x3
  401664:	mov    rcx,rbx
  401667:	mov    QWORD PTR [rsp+0x20],rdi
  40166c:	add    rsi,0x1
  401670:	call   QWORD PTR [rbx+0x20]
  401673:	xor    r9d,r9d
  401676:	mov    QWORD PTR [rsp+0x20],rbx
  40167b:	mov    r8,rdi
  40167e:	mov    rdx,r12
  401681:	mov    rcx,r14
  401684:	call   0x401560
  401689:	cmp    r15d,esi
  40168c:	jg     0x401630
  40168e:	movsxd r9,r15d
  401691:	mov    QWORD PTR [rsp+0x20],rdi
  401696:	mov    r8d,DWORD PTR [rsp+0x50]
  40169b:	mov    edx,0x3
  4016a0:	mov    rcx,rbx
  4016a3:	call   QWORD PTR [rbx+0x28]
  4016a6:	nop
  4016a7:	nop    WORD PTR [rax+rax*1+0x0]
  4016b0:	add    rsp,0x78
  4016b4:	pop    rbx
  4016b5:	pop    rsi
  4016b6:	pop    rdi
  4016b7:	pop    rbp
  4016b8:	pop    r12
  4016ba:	pop    r13
  4016bc:	pop    r14
  4016be:	pop    r15
  4016c0:	ret    
  4016c1:	mov    edx,DWORD PTR [rcx+0x88]
  4016c7:	test   edx,edx
  4016c9:	jle    0x401c31
  4016cf:	test   rsi,rsi
  4016d2:	je     0x401d30
  4016d8:	mov    eax,DWORD PTR [rsi]
  4016da:	cmp    eax,0x1f
  4016dd:	je     0x401cc0
  4016e3:	cmp    eax,0x10
  4016e6:	je     0x401cc0
  4016ec:	mov    ecx,DWORD PTR [rsi+0x4]
  4016ef:	lea    rdx,[rip+0x1eac2]        # 0x4201b8
  4016f6:	mov    QWORD PTR [rsp+0x38],r9
  4016fb:	lea    r15,[rbp+0x88]
  401702:	call   0x40b520
  401707:	mov    eax,DWORD PTR [rbp+0x88]
  40170d:	mov    r12,QWORD PTR [rbp+0x50]
  401711:	mov    r9,QWORD PTR [rsp+0x38]
  401716:	test   eax,eax
  401718:	mov    r14d,DWORD PTR [r12+0x5c]
  40171d:	jle    0x401d50
  401723:	xor    r13d,r13d
  401726:	cmp    DWORD PTR [rsi],0x1f
  401729:	je     0x40172f
  40172b:	mov    r13,QWORD PTR [rsi+0x8]
  40172f:	cmp    r14d,0x2
  401733:	je     0x401c80
  401739:	xor    r8d,r8d
  40173c:	xor    edx,edx
  40173e:	mov    rcx,r15
  401741:	call   0x415d10
  401746:	mov    r14,rax
  401749:	lea    rax,[rsp+0x50]
  40174e:	mov    r9,rdi
  401751:	mov    r8,r14
  401754:	mov    edx,0x4
  401759:	mov    rcx,rbx
  40175c:	mov    QWORD PTR [rsp+0x20],rax
  401761:	call   QWORD PTR [rbx+0x18]
  401764:	test   r14,r14
  401767:	je     0x401d72
  40176d:	xor    esi,esi
  40176f:	nop
  401770:	xor    ebp,ebp
  401772:	test   r13,r13
  401775:	je     0x401788
  401777:	cmp    rsi,QWORD PTR [r13+0x10]
  40177b:	jae    0x401788
  40177d:	mov    rbp,rsi
  401780:	shl    rbp,0x5
  401784:	add    rbp,QWORD PTR [r13+0x20]
  401788:	mov    r9,rsi
  40178b:	mov    r8d,DWORD PTR [rsp+0x50]
  401790:	mov    edx,0x4
  401795:	mov    rcx,rbx
  401798:	mov    QWORD PTR [rsp+0x20],rdi
  40179d:	add    rsi,0x1
  4017a1:	call   QWORD PTR [rbx+0x20]
  4017a4:	xor    r9d,r9d
  4017a7:	mov    QWORD PTR [rsp+0x20],rbx
  4017ac:	mov    r8,rdi
  4017af:	mov    rdx,rbp
  4017b2:	mov    rcx,r12
  4017b5:	call   0x401560
  4017ba:	cmp    rsi,r14
  4017bd:	jne    0x401770
  4017bf:	mov    r9,rsi
  4017c2:	mov    QWORD PTR [rsp+0x20],rdi
  4017c7:	mov    r8d,DWORD PTR [rsp+0x50]
  4017cc:	mov    edx,0x4
  4017d1:	mov    rcx,rbx
  4017d4:	call   QWORD PTR [rbx+0x28]
  4017d7:	jmp    0x4016b0
  4017dc:	nop    DWORD PTR [rax+0x0]
  4017e0:	lea    rcx,[rip+0x1ea01]        # 0x4201e8
  4017e7:	call   0x406300
  4017ec:	test   eax,eax
  4017ee:	jne    0x4016b0
  4017f4:	lea    rdx,[rip+0x1ea17]        # 0x420212
  4017fb:	lea    rcx,[rip+0x1ea1e]        # 0x420220
  401802:	mov    r8d,0x189
  401808:	call   0x41da30
  40180d:	jmp    0x4016b0
  401812:	cmp    edx,0xe
  401815:	jge    0x401930
  40181b:	cmp    edx,0xd
  40181e:	jne    0x4017e0
  401820:	test   rsi,rsi
  401823:	je     0x401990
  401829:	mov    eax,DWORD PTR [rsi]
  40182b:	cmp    eax,0x1f
  40182e:	je     0x401990
  401834:	cmp    eax,0x10
  401837:	je     0x401848
  401839:	mov    ecx,DWORD PTR [rsi+0x4]
  40183c:	lea    rdx,[rip+0x1e94d]        # 0x420190
  401843:	call   0x40b520
  401848:	mov    rsi,QWORD PTR [rsi+0x8]
  40184c:	call   0x415f30
  401851:	mov    r12,rax
  401854:	mov    rax,QWORD PTR [rbp+0x50]
  401858:	cmp    DWORD PTR [rax+0x5c],0x2
  40185c:	je     0x401b90
  401862:	lea    rax,[rsp+0x4c]
  401867:	mov    r8,QWORD PTR [rsi+0x10]
  40186b:	mov    r9,rdi
  40186e:	mov    edx,0x2
  401873:	mov    rcx,rbx
  401876:	mov    QWORD PTR [rsp+0x20],rax
  40187b:	call   QWORD PTR [rbx+0x18]
  40187e:	mov    QWORD PTR [rsp+0x50],0x0
  401887:	mov    r9,QWORD PTR [rsi+0x10]
  40188b:	test   r9,r9
  40188e:	je     0x4018e8
  401890:	xor    r9d,r9d
  401893:	mov    edx,0x2
  401898:	mov    QWORD PTR [rsp+0x20],r12
  40189d:	mov    r8d,DWORD PTR [rsp+0x4c]
  4018a2:	mov    rcx,rbx
  4018a5:	call   QWORD PTR [rbx+0x20]
  4018a8:	mov    r9,QWORD PTR [rsp+0x50]
  4018ad:	xor    edx,edx
  4018af:	cmp    QWORD PTR [rsi+0x10],r9
  4018b3:	jbe    0x4018c0
  4018b5:	shl    r9,0x5
  4018b9:	mov    rdx,r9
  4018bc:	add    rdx,QWORD PTR [rsi+0x20]
  4018c0:	mov    rcx,QWORD PTR [rbp+0x50]
  4018c4:	xor    r9d,r9d
  4018c7:	mov    QWORD PTR [rsp+0x20],rbx
  4018cc:	mov    r8,r12
  4018cf:	call   0x401560
  4018d4:	mov    rax,QWORD PTR [rsp+0x50]
  4018d9:	lea    r9,[rax+0x1]
  4018dd:	mov    QWORD PTR [rsp+0x50],r9
  4018e2:	cmp    QWORD PTR [rsi+0x10],r9
  4018e6:	ja     0x401893
  4018e8:	mov    QWORD PTR [rsp+0x28],r12
  4018ed:	mov    QWORD PTR [rsp+0x20],rdi
  4018f2:	mov    edx,0x2
  4018f7:	mov    r8d,DWORD PTR [rsp+0x4c]
  4018fc:	mov    rcx,rbx
  4018ff:	call   QWORD PTR [rbx+0x28]
  401902:	mov    rax,QWORD PTR [rsp+0x50]
  401907:	mov    rcx,rbx
  40190a:	mov    QWORD PTR [rsp+0x28],r12
  40190f:	mov    r9d,DWORD PTR [rsp+0x4c]
  401914:	mov    r8,rbp
  401917:	mov    rdx,rdi
  40191a:	mov    QWORD PTR [rsp+0x20],rax
  40191f:	call   QWORD PTR [rbx+0x30]
  401922:	mov    rcx,r12
  401925:	call   0x416010
  40192a:	jmp    0x4016b0
  40192f:	nop
  401930:	test   rsi,rsi
  401933:	je     0x401ab4
  401939:	mov    eax,DWORD PTR [rsi]
  40193b:	cmp    eax,0x10
  40193e:	je     0x401a90
  401944:	cmp    eax,0x1f
  401947:	je     0x401ab4
  40194d:	cmp    eax,0xe
  401950:	je     0x401c64
  401956:	jle    0x401a35
  40195c:	cmp    eax,0x20
  40195f:	je     0x401af5
  401965:	cmp    eax,0x69
  401968:	jne    0x401a41
  40196e:	cmp    DWORD PTR [rbp+0xc],0xf
  401972:	jne    0x401a41
  401978:	mov    rax,QWORD PTR [rsi+0x8]
  40197c:	cmp    rbp,QWORD PTR [rax+0x20]
  401980:	sete   al
  401983:	movzx  eax,al
  401986:	jmp    0x401bca
  40198b:	nop    DWORD PTR [rax+rax*1+0x0]
  401990:	test   r9,r9
  401993:	je     0x401da2
  401999:	cmp    QWORD PTR [r9+0x10],0x1
  40199e:	je     0x4019bd
  4019a0:	lea    rdx,[rip+0x1e677]        # 0x42001e
  4019a7:	lea    rcx,[rip+0x1e682]        # 0x420030
  4019ae:	mov    QWORD PTR [rsp+0x38],r9
  4019b3:	call   0x406300
  4019b8:	mov    r9,QWORD PTR [rsp+0x38]
  4019bd:	mov    rsi,QWORD PTR [r9+0x20]
  4019c1:	cmp    DWORD PTR [rsi],0x10
  4019c4:	je     0x401848
  4019ca:	mov    ecx,DWORD PTR [rsi+0x4]
  4019cd:	lea    rdx,[rip+0x1e78c]        # 0x420160
  4019d4:	call   0x40b520
  4019d9:	mov    eax,DWORD PTR [rsi]
  4019db:	jmp    0x401834
  4019e0:	test   r9,r9
  4019e3:	je     0x401d92
  4019e9:	cmp    QWORD PTR [r9+0x10],0x1
  4019ee:	je     0x401a0d
  4019f0:	lea    rdx,[rip+0x1e627]        # 0x42001e
  4019f7:	lea    rcx,[rip+0x1e632]        # 0x420030
  4019fe:	mov    QWORD PTR [rsp+0x38],r9
  401a03:	call   0x406300
  401a08:	mov    r9,QWORD PTR [rsp+0x38]
  401a0d:	mov    rsi,QWORD PTR [r9+0x20]
  401a11:	test   rsi,rsi
  401a14:	je     0x401a1f
  401a16:	cmp    DWORD PTR [rsi],0x10
  401a19:	je     0x4015d0
  401a1f:	mov    ecx,DWORD PTR [rsi+0x4]
  401a22:	lea    rdx,[rip+0x1e69f]        # 0x4200c8
  401a29:	call   0x40b520
  401a2e:	mov    eax,DWORD PTR [rsi]
  401a30:	jmp    0x4015bc
  401a35:	sub    eax,0x1
  401a38:	cmp    eax,0xb
  401a3b:	jbe    0x401bc1
  401a41:	mov    r8,QWORD PTR [rbp+0x10]
  401a45:	mov    ecx,DWORD PTR [rsi+0x4]
  401a48:	lea    rdx,[rip+0x1e619]        # 0x420068
  401a4f:	call   0x40b520
  401a54:	mov    eax,DWORD PTR [rbp+0x5c]
  401a57:	lea    r12,[rsp+0x50]
  401a5c:	cmp    eax,0x69
  401a5f:	mov    DWORD PTR [rsp+0x50],eax
  401a63:	jne    0x401b11
  401a69:	cmp    DWORD PTR [rbp+0xc],0xf
  401a6d:	je     0x401a7e
  401a6f:	mov    ecx,DWORD PTR [rsi+0x4]
  401a72:	lea    rdx,[rip+0x1e627]        # 0x4200a0
  401a79:	call   0x40b520
  401a7e:	mov    r8,rdi
  401a81:	mov    rdx,r12
  401a84:	mov    rcx,rbx
  401a87:	call   QWORD PTR [rbx+0x10]
  401a8a:	jmp    0x4016b0
  401a8f:	nop
  401a90:	mov    ecx,DWORD PTR [rsi+0x4]
  401a93:	lea    rdx,[rip+0x1e566]        # 0x420000
  401a9a:	mov    QWORD PTR [rsp+0x38],r9
  401a9f:	call   0x40b520
  401aa4:	mov    eax,DWORD PTR [rsi]
  401aa6:	mov    r9,QWORD PTR [rsp+0x38]
  401aab:	cmp    eax,0x1f
  401aae:	jne    0x401b66
  401ab4:	test   r9,r9
  401ab7:	je     0x401d82
  401abd:	cmp    QWORD PTR [r9+0x10],0x1
  401ac2:	je     0x401b60
  401ac8:	lea    rdx,[rip+0x1e54f]        # 0x42001e
  401acf:	lea    rcx,[rip+0x1e55a]        # 0x420030
  401ad6:	mov    QWORD PTR [rsp+0x38],r9
  401adb:	call   0x406300
  401ae0:	mov    r9,QWORD PTR [rsp+0x38]
  401ae5:	cmp    QWORD PTR [r9+0x10],0x0
  401aea:	jne    0x401b60
  401aec:	mov    eax,DWORD PTR ds:0x0
  401af3:	ud2    
  401af5:	cmp    DWORD PTR [rbp+0xc],0x6c
  401af9:	jne    0x401a41
  401aff:	cmp    DWORD PTR [rbp+0x5c],0xc
  401b03:	jne    0x401a41
  401b09:	mov    DWORD PTR [rsp+0x50],0xc
  401b11:	lea    r12,[rsp+0x50]
  401b16:	mov    rcx,rsi
  401b19:	mov    rdx,r12
  401b1c:	call   0x403680
  401b21:	mov    eax,DWORD PTR [rsp+0x50]
  401b25:	cmp    eax,0xe
  401b28:	jne    0x401bb3
  401b2e:	mov    rsi,QWORD PTR [rbp+0x2090]
  401b35:	mov    eax,DWORD PTR [rsp+0x58]
  401b39:	add    esi,esi
  401b3b:	cmp    esi,eax
  401b3d:	je     0x401a7e
  401b43:	cmp    eax,esi
  401b45:	jle    0x401be0
  401b4b:	mov    rdx,QWORD PTR [rsp+0x60]
  401b50:	movsxd rax,esi
  401b53:	mov    BYTE PTR [rdx+rax*1],0x0
  401b57:	mov    DWORD PTR [rsp+0x58],esi
  401b5b:	jmp    0x401a7e
  401b60:	mov    rsi,QWORD PTR [r9+0x20]
  401b64:	mov    eax,DWORD PTR [rsi]
  401b66:	cmp    eax,0x10
  401b69:	jne    0x40194d
  401b6f:	lea    rdx,[rip+0x1e4d0]        # 0x420046
  401b76:	lea    rcx,[rip+0x1e4b3]        # 0x420030
  401b7d:	call   0x406300
  401b82:	mov    eax,DWORD PTR [rsi]
  401b84:	jmp    0x40194d
  401b89:	nop    DWORD PTR [rax+0x0]
  401b90:	mov    rdx,r12
  401b93:	mov    rcx,rsi
  401b96:	call   0x4033c0
  401b9b:	lea    r9,[rsp+0x50]
  401ba0:	lea    r8,[rsp+0x4c]
  401ba5:	mov    rdx,r12
  401ba8:	mov    rcx,rbx
  401bab:	call   QWORD PTR [rbx+0x38]
  401bae:	jmp    0x401902
  401bb3:	cmp    eax,0x69
  401bb6:	jne    0x401a7e
  401bbc:	jmp    0x401a69
  401bc1:	xor    eax,eax
  401bc3:	cmp    DWORD PTR [rbp+0xc],0x6c
  401bc7:	sete   al
  401bca:	test   eax,eax
  401bcc:	jne    0x401a54
  401bd2:	jmp    0x401a41
  401bd7:	nop    WORD PTR [rax+rax*1+0x0]
  401be0:	lea    ecx,[rsi+0x1]
  401be3:	movsxd r13,esi
  401be6:	movsxd rcx,ecx
  401be9:	call   0x4063a0
  401bee:	mov    r8,r13
  401bf1:	mov    edx,0x30
  401bf6:	mov    rcx,rax
  401bf9:	mov    rbp,rax
  401bfc:	call   0x41dbb0
  401c01:	movsxd r8,DWORD PTR [rsp+0x58]
  401c06:	mov    rdx,QWORD PTR [rsp+0x60]
  401c0b:	mov    rcx,rbp
  401c0e:	call   0x41dbc0
  401c13:	mov    BYTE PTR [rbp+r13*1+0x0],0x0
  401c19:	mov    rcx,QWORD PTR [rsp+0x60]
  401c1e:	call   0x4062e0
  401c23:	mov    QWORD PTR [rsp+0x60],rbp
  401c28:	mov    DWORD PTR [rsp+0x58],esi
  401c2c:	jmp    0x401a7e
  401c31:	mov    rcx,QWORD PTR [rcx+0x50]
  401c35:	xor    r9d,r9d
  401c38:	mov    QWORD PTR [rsp+0x20],rbx
  401c3d:	mov    rdx,rsi
  401c40:	call   0x401560
  401c45:	jmp    0x4016b0
  401c4a:	nop    WORD PTR [rax+rax*1+0x0]
  401c50:	mov    ecx,DWORD PTR [rsi+0x4]
  401c53:	lea    rdx,[rip+0x1e4ce]        # 0x420128
  401c5a:	call   0x40b520
  401c5f:	jmp    0x4016b0
  401c64:	mov    edx,DWORD PTR [rbp+0xc]
  401c67:	cmp    edx,0x6c
  401c6a:	sete   cl
  401c6d:	cmp    edx,0xe
  401c70:	sete   al
  401c73:	or     eax,ecx
  401c75:	movzx  eax,al
  401c78:	jmp    0x401bca
  401c7d:	nop    DWORD PTR [rax]
  401c80:	mov    QWORD PTR [rsp+0x38],r9
  401c85:	call   0x415f30
  401c8a:	mov    r9,QWORD PTR [rsp+0x38]
  401c8f:	mov    rsi,rax
  401c92:	mov    r8,rax
  401c95:	mov    rdx,r13
  401c98:	mov    rcx,r15
  401c9b:	call   0x4032f0
  401ca0:	mov    rcx,rbx
  401ca3:	mov    r8,rsi
  401ca6:	mov    rdx,rdi
  401ca9:	call   QWORD PTR [rbx+0x8]
  401cac:	mov    rcx,rsi
  401caf:	call   0x416010
  401cb4:	jmp    0x4016b0
  401cb9:	nop    DWORD PTR [rax+0x0]
  401cc0:	mov    r12,QWORD PTR [rbp+0x50]
  401cc4:	lea    r15,[rbp+0x88]
  401ccb:	mov    r14d,DWORD PTR [r12+0x5c]
  401cd0:	jmp    0x401723
  401cd5:	xor    r15d,r15d
  401cd8:	test   r13,r13
  401cdb:	jne    0x4015f1
  401ce1:	lea    rax,[rsp+0x50]
  401ce6:	mov    r9,rdi
  401ce9:	xor    r8d,r8d
  401cec:	mov    edx,0x3
  401cf1:	mov    rcx,rbx
  401cf4:	mov    QWORD PTR [rsp+0x20],rax
  401cf9:	call   QWORD PTR [rbx+0x18]
  401cfc:	xor    r9d,r9d
  401cff:	jmp    0x401691
  401d04:	test   r8d,r8d
  401d07:	js     0x401c50
  401d0d:	mov    r10,QWORD PTR [rbx+0x18]
  401d11:	jmp    0x40160c
  401d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d20:	xor    r8d,r8d
  401d23:	jmp    0x40160c
  401d28:	nop    DWORD PTR [rax+rax*1+0x0]
  401d30:	mov    r12,QWORD PTR [rcx+0x50]
  401d34:	lea    r15,[rcx+0x88]
  401d3b:	xor    r13d,r13d
  401d3e:	mov    r14d,DWORD PTR [r12+0x5c]
  401d43:	jmp    0x40172f
  401d48:	nop    DWORD PTR [rax+rax*1+0x0]
  401d50:	lea    rdx,[rip+0x1e50b]        # 0x420262
  401d57:	lea    rcx,[rip+0x1e2d2]        # 0x420030
  401d5e:	mov    QWORD PTR [rsp+0x38],r9
  401d63:	call   0x406300
  401d68:	mov    r9,QWORD PTR [rsp+0x38]
  401d6d:	jmp    0x401723
  401d72:	xor    r9d,r9d
  401d75:	jmp    0x4017c2
  401d7a:	xor    r9d,r9d
  401d7d:	jmp    0x401691
  401d82:	mov    rcx,rbp
  401d85:	call   0x40be90
  401d8a:	mov    r9,rax
  401d8d:	jmp    0x401abd
  401d92:	mov    rcx,rbp
  401d95:	call   0x40be90
  401d9a:	mov    r9,rax
  401d9d:	jmp    0x4019e9
  401da2:	mov    rcx,rbp
  401da5:	call   0x40be90
  401daa:	mov    r9,rax
  401dad:	jmp    0x401999
  401db2:	nop    DWORD PTR [rax+0x0]
  401db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dc0:	push   r13
  401dc2:	push   r12
  401dc4:	push   rbp
  401dc5:	push   rdi
  401dc6:	push   rsi
  401dc7:	push   rbx
  401dc8:	sub    rsp,0x48
  401dcc:	mov    rax,QWORD PTR [rcx+0x50]
  401dd0:	mov    rdi,rcx
  401dd3:	mov    rsi,rdx
  401dd6:	mov    r13,r8
  401dd9:	mov    rbp,r9
  401ddc:	cmp    DWORD PTR [rax+0x5c],0x2
  401de0:	je     0x401eb0
  401de6:	mov    rax,QWORD PTR [rcx+0x48]
  401dea:	mov    edx,0x1
  401def:	mov    rcx,rsi
  401df2:	xor    ebx,ebx
  401df4:	mov    r8,QWORD PTR [rax+0x10]
  401df8:	lea    rax,[rsp+0x3c]
  401dfd:	mov    QWORD PTR [rsp+0x20],rax
  401e02:	call   QWORD PTR [rsi+0x18]
  401e05:	mov    rax,QWORD PTR [rdi+0x48]
  401e09:	cmp    QWORD PTR [rax+0x10],0x0
  401e0e:	je     0x401e68
  401e10:	mov    r12d,0x0
  401e16:	jbe    0x401e2b
  401e18:	nop    DWORD PTR [rax+rax*1+0x0]
  401e20:	mov    r12,rbx
  401e23:	shl    r12,0x5
  401e27:	add    r12,QWORD PTR [rax+0x20]
  401e2b:	mov    r9,rbx
  401e2e:	mov    r8d,DWORD PTR [rsp+0x3c]
  401e33:	mov    edx,0x1
  401e38:	mov    rcx,rsi
  401e3b:	mov    QWORD PTR [rsp+0x20],rbp
  401e40:	add    rbx,0x1
  401e44:	call   QWORD PTR [rsi+0x20]
  401e47:	mov    rcx,QWORD PTR [rdi+0x50]
  401e4b:	xor    r9d,r9d
  401e4e:	mov    QWORD PTR [rsp+0x20],rsi
  401e53:	mov    r8,rbp
  401e56:	mov    rdx,r12
  401e59:	call   0x401560
  401e5e:	mov    rax,QWORD PTR [rdi+0x48]
  401e62:	cmp    QWORD PTR [rax+0x10],rbx
  401e66:	ja     0x401e20
  401e68:	mov    QWORD PTR [rsp+0x20],rbp
  401e6d:	mov    r9,rbx
  401e70:	mov    r8d,DWORD PTR [rsp+0x3c]
  401e75:	mov    edx,0x1
  401e7a:	mov    rcx,rsi
  401e7d:	call   QWORD PTR [rsi+0x28]
  401e80:	xor    r9d,r9d
  401e83:	mov    r8,rbp
  401e86:	mov    rdx,rdi
  401e89:	mov    rcx,rsi
  401e8c:	mov    QWORD PTR [rsp+0x28],0x0
  401e95:	mov    QWORD PTR [rsp+0x20],0x0
  401e9e:	call   r13
  401ea1:	nop
  401ea2:	add    rsp,0x48
  401ea6:	pop    rbx
  401ea7:	pop    rsi
  401ea8:	pop    rdi
  401ea9:	pop    rbp
  401eaa:	pop    r12
  401eac:	pop    r13
  401eae:	ret    
  401eaf:	nop
  401eb0:	mov    rcx,QWORD PTR [rcx+0x48]
  401eb4:	mov    rdx,r9
  401eb7:	call   0x403470
  401ebc:	jmp    0x401e80
  401ebe:	xchg   ax,ax
  401ec0:	push   r15
  401ec2:	push   r14
  401ec4:	push   r13
  401ec6:	push   r12
  401ec8:	push   rbp
  401ec9:	push   rdi
  401eca:	push   rsi
  401ecb:	push   rbx
  401ecc:	sub    rsp,0x68
  401ed0:	mov    r14,QWORD PTR [rcx+0x50]
  401ed4:	mov    rdi,QWORD PTR [rsp+0xd8]
  401edc:	mov    r15,r9
  401edf:	lea    r13,[rcx+0x88]
  401ee6:	mov    r9d,DWORD PTR [rcx+0x88]
  401eed:	mov    r12,rcx
  401ef0:	mov    rbx,r8
  401ef3:	mov    rbp,rdx
  401ef6:	mov    eax,DWORD PTR [r14+0x5c]
  401efa:	mov    rcx,r13
  401efd:	mov    rsi,QWORD PTR [rsp+0xe0]
  401f05:	mov    DWORD PTR [rsp+0x44],r9d
  401f0a:	mov    DWORD PTR [rsp+0x48],eax
  401f0e:	call   0x415e40
  401f13:	mov    r9d,DWORD PTR [rsp+0x44]
  401f18:	mov    r8d,eax
  401f1b:	cmp    eax,r9d
  401f1e:	mov    eax,0x0
  401f23:	cmove  r8d,eax
  401f27:	test   r9d,r9d
  401f2a:	jle    0x4021d0
  401f30:	cmp    DWORD PTR [rsp+0xd0],r9d
  401f38:	jge    0x402160
  401f3e:	mov    eax,DWORD PTR [rsp+0xd0]
  401f45:	shr    eax,0x1f
  401f48:	test   al,al
  401f4a:	jne    0x402160
  401f50:	cmp    DWORD PTR [rsp+0xd0],r8d
  401f58:	jne    0x402030
  401f5e:	cmp    DWORD PTR [rsp+0x48],0x2
  401f63:	je     0x402112
  401f69:	mov    r8d,DWORD PTR [rsp+0xd0]
  401f71:	mov    rdx,r13
  401f74:	mov    rcx,r15
  401f77:	xor    r12d,r12d
  401f7a:	call   0x40c3b0
  401f7f:	mov    r13,rax
  401f82:	lea    rax,[rsp+0x5c]
  401f87:	mov    r9,rbp
  401f8a:	mov    r8,QWORD PTR [rbx+0x10]
  401f8e:	xor    edx,edx
  401f90:	mov    rcx,rsi
  401f93:	mov    QWORD PTR [rsp+0x20],rax
  401f98:	call   QWORD PTR [rsi+0x18]
  401f9b:	jmp    0x401ff3
  401f9d:	nop    DWORD PTR [rax]
  401fa0:	mov    rcx,r13
  401fa3:	xor    r15d,r15d
  401fa6:	call   0x40c6b0
  401fab:	cmp    rax,QWORD PTR [rbx+0x10]
  401faf:	jae    0x401fbc
  401fb1:	shl    rax,0x5
  401fb5:	add    rax,QWORD PTR [rbx+0x20]
  401fb9:	mov    r15,rax
  401fbc:	mov    r9,r12
  401fbf:	mov    r8d,DWORD PTR [rsp+0x5c]
  401fc4:	xor    edx,edx
  401fc6:	mov    rcx,rsi
  401fc9:	mov    QWORD PTR [rsp+0x20],rbp
  401fce:	add    r12,0x1
  401fd2:	call   QWORD PTR [rsi+0x20]
  401fd5:	mov    r9,rdi
  401fd8:	mov    r8,rbp
  401fdb:	mov    rdx,r15
  401fde:	mov    rcx,r14
  401fe1:	mov    QWORD PTR [rsp+0x20],rsi
  401fe6:	call   0x401560
  401feb:	mov    rcx,r13
  401fee:	call   0x40c5e0
  401ff3:	mov    rcx,r13
  401ff6:	call   0x40c570
  401ffb:	test   eax,eax
  401ffd:	jne    0x401fa0
  401fff:	mov    rcx,rsi
  402002:	mov    QWORD PTR [rsp+0x20],rbp
  402007:	movsxd r9,r12d
  40200a:	mov    r8d,DWORD PTR [rsp+0x5c]
  40200f:	xor    edx,edx
  402011:	call   QWORD PTR [rsi+0x28]
  402014:	mov    rcx,r13
  402017:	call   0x40c490
  40201c:	nop
  40201d:	add    rsp,0x68
  402021:	pop    rbx
  402022:	pop    rsi
  402023:	pop    rdi
  402024:	pop    rbp
  402025:	pop    r12
  402027:	pop    r13
  402029:	pop    r14
  40202b:	pop    r15
  40202d:	ret    
  40202e:	xchg   ax,ax
  402030:	mov    eax,DWORD PTR [rsp+0xd0]
  402037:	mov    rcx,r13
  40203a:	lea    edx,[rax+0x1]
  40203d:	call   0x415e00
  402042:	cmp    DWORD PTR [rsp+0xd0],eax
  402049:	mov    r14d,eax
  40204c:	jge    0x402062
  40204e:	cdqe   
  402050:	mov    rax,QWORD PTR [r12+rax*8+0x90]
  402058:	mov    eax,DWORD PTR [rax+0x20fc]
  40205e:	test   eax,eax
  402060:	jne    0x402075
  402062:	lea    rdx,[rip+0x1e23f]        # 0x4202a8
  402069:	lea    rcx,[rip+0x1dfc0]        # 0x420030
  402070:	call   0x406300
  402075:	mov    r8d,DWORD PTR [rsp+0xd0]
  40207d:	mov    rdx,r13
  402080:	mov    r9d,r14d
  402083:	mov    rcx,r15
  402086:	call   0x40c3b0
  40208b:	mov    r13,rax
  40208e:	jmp    0x4020c0
  402090:	shl    rax,0x5
  402094:	add    rax,QWORD PTR [rbx+0x20]
  402098:	je     0x4020e3
  40209a:	mov    edx,DWORD PTR [rax]
  40209c:	test   edx,edx
  40209e:	je     0x4020e3
  4020a0:	cmp    edx,0x10
  4020a3:	je     0x402190
  4020a9:	mov    ecx,DWORD PTR [rax+0x4]
  4020ac:	lea    rdx,[rip+0x1e245]        # 0x4202f8
  4020b3:	call   0x40b4a0
  4020b8:	mov    rcx,r13
  4020bb:	call   0x40c5e0
  4020c0:	mov    rcx,r13
  4020c3:	call   0x40c570
  4020c8:	test   eax,eax
  4020ca:	mov    rcx,r13
  4020cd:	je     0x402150
  4020d3:	call   0x40c6b0
  4020d8:	test   rbx,rbx
  4020db:	je     0x4020e3
  4020dd:	cmp    rax,QWORD PTR [rbx+0x10]
  4020e1:	jb     0x402090
  4020e3:	test   rdi,rdi
  4020e6:	je     0x4021c0
  4020ec:	mov    QWORD PTR [rsp+0x30],rsi
  4020f1:	mov    QWORD PTR [rsp+0x28],0x0
  4020fa:	mov    r9,r15
  4020fd:	mov    DWORD PTR [rsp+0x20],r14d
  402102:	mov    r8,rdi
  402105:	mov    rdx,rbp
  402108:	mov    rcx,r12
  40210b:	call   0x401ec0
  402110:	jmp    0x4020b8
  402112:	call   0x415f30
  402117:	mov    edx,DWORD PTR [rsp+0xd0]
  40211e:	mov    r12,rax
  402121:	mov    r9,rax
  402124:	mov    r8,rbx
  402127:	mov    rcx,r13
  40212a:	mov    QWORD PTR [rsp+0x20],rdi
  40212f:	call   0x403480
  402134:	mov    rcx,rsi
  402137:	mov    r8,r12
  40213a:	mov    rdx,rbp
  40213d:	call   QWORD PTR [rsi+0x8]
  402140:	mov    rcx,r12
  402143:	call   0x416010
  402148:	jmp    0x40201d
  40214d:	nop    DWORD PTR [rax]
  402150:	call   0x40c490
  402155:	jmp    0x40201d
  40215a:	nop    WORD PTR [rax+rax*1+0x0]
  402160:	lea    rdx,[rip+0x1e119]        # 0x420280
  402167:	lea    rcx,[rip+0x1dec2]        # 0x420030
  40216e:	mov    DWORD PTR [rsp+0x4c],r9d
  402173:	mov    DWORD PTR [rsp+0x44],r8d
  402178:	call   0x406300
  40217d:	mov    r9d,DWORD PTR [rsp+0x4c]
  402182:	mov    r8d,DWORD PTR [rsp+0x44]
  402187:	jmp    0x401f50
  40218c:	nop    DWORD PTR [rax+0x0]
  402190:	mov    r8,QWORD PTR [rax+0x8]
  402194:	mov    r9,r15
  402197:	mov    QWORD PTR [rsp+0x30],rsi
  40219c:	mov    QWORD PTR [rsp+0x28],rdi
  4021a1:	mov    DWORD PTR [rsp+0x20],r14d
  4021a6:	mov    rdx,rbp
  4021a9:	mov    rcx,r12
  4021ac:	call   0x401ec0
  4021b1:	jmp    0x4020b8
  4021b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021c0:	mov    rcx,r12
  4021c3:	call   0x40be90
  4021c8:	mov    rdi,rax
  4021cb:	jmp    0x4020ec
  4021d0:	lea    rdx,[rip+0x1e09d]        # 0x420274
  4021d7:	lea    rcx,[rip+0x1de52]        # 0x420030
  4021de:	mov    DWORD PTR [rsp+0x4c],r9d
  4021e3:	mov    DWORD PTR [rsp+0x44],r8d
  4021e8:	call   0x406300
  4021ed:	mov    r9d,DWORD PTR [rsp+0x4c]
  4021f2:	mov    r8d,DWORD PTR [rsp+0x44]
  4021f7:	jmp    0x401f30
  4021fc:	nop    DWORD PTR [rax+0x0]
  402200:	push   r15
  402202:	push   r14
  402204:	mov    eax,0x20e8
  402209:	push   r13
  40220b:	push   r12
  40220d:	push   rbp
  40220e:	push   rdi
  40220f:	push   rsi
  402210:	push   rbx
  402211:	call   0x41c7e0
  402216:	sub    rsp,rax
  402219:	mov    edi,DWORD PTR [rcx+0x88]
  40221f:	mov    rax,QWORD PTR [rcx+0x50]
  402223:	mov    rbp,rcx
  402226:	mov    rsi,rdx
  402229:	mov    r12,r8
  40222c:	mov    rbx,r9
  40222f:	lea    r13,[rcx+0x88]
  402236:	test   edi,edi
  402238:	mov    QWORD PTR [rsp+0x48],rax
  40223d:	mov    r14d,DWORD PTR [rax+0x5c]
  402241:	jle    0x4024b2
  402247:	mov    edx,0x1
  40224c:	mov    rcx,r13
  40224f:	call   0x415e00
  402254:	cmp    edi,eax
  402256:	jne    0x402262
  402258:	cmp    r14d,0x2
  40225c:	je     0x4024ca
  402262:	mov    edx,0x1
  402267:	mov    rcx,r13
  40226a:	call   0x415e00
  40226f:	mov    DWORD PTR [rsp+0x6c],eax
  402273:	cmp    eax,edi
  402275:	lea    rax,[rsp+0x90]
  40227d:	mov    QWORD PTR [rsp+0x50],rax
  402282:	mov    r8,rax
  402285:	je     0x402333
  40228b:	mov    edx,0xffffffff
  402290:	mov    rcx,rbp
  402293:	call   0x41a300
  402298:	mov    rcx,r13
  40229b:	xor    r8d,r8d
  40229e:	xor    edx,edx
  4022a0:	call   0x40c230
  4022a5:	mov    r15,QWORD PTR [rsp+0x2150]
  4022ad:	mov    QWORD PTR [rsp+0x78],rax
  4022b2:	lea    r13,[rax+0x2010]
  4022b9:	lea    rdi,[rax+0x10]
  4022bd:	mov    r14,rax
  4022c0:	jmp    0x4022ff
  4022c2:	mov    QWORD PTR [rsp+0x30],rbx
  4022c7:	mov    QWORD PTR [rsp+0x28],r12
  4022cc:	mov    r9,r14
  4022cf:	mov    DWORD PTR [rsp+0x20],0x0
  4022d7:	mov    r8,QWORD PTR [rbp+0x48]
  4022db:	mov    rdx,rsi
  4022de:	mov    rcx,rbp
  4022e1:	call   0x401ec0
  4022e6:	mov    QWORD PTR [rsp+0x28],r13
  4022eb:	mov    QWORD PTR [rsp+0x20],rdi
  4022f0:	mov    r8,rsi
  4022f3:	mov    r9d,DWORD PTR [r14]
  4022f6:	mov    rdx,rbp
  4022f9:	mov    rcx,rbx
  4022fc:	call   r15
  4022ff:	mov    rcx,QWORD PTR [rsp+0x50]
  402304:	mov    r8,r13
  402307:	mov    rdx,rdi
  40230a:	call   0x41a480
  40230f:	test   rax,rax
  402312:	jne    0x4022c2
  402314:	mov    rcx,QWORD PTR [rsp+0x78]
  402319:	call   0x40c490
  40231e:	nop
  40231f:	add    rsp,0x20e8
  402326:	pop    rbx
  402327:	pop    rsi
  402328:	pop    rdi
  402329:	pop    rbp
  40232a:	pop    r12
  40232c:	pop    r13
  40232e:	pop    r14
  402330:	pop    r15
  402332:	ret    
  402333:	mov    rax,QWORD PTR [rip+0x294f6]        # 0x42b830
  40233a:	mov    rcx,rbp
  40233d:	xor    r14d,r14d
  402340:	mov    rdx,QWORD PTR [rax]
  402343:	call   0x41a300
  402348:	xor    r8d,r8d
  40234b:	xor    edx,edx
  40234d:	mov    rcx,r13
  402350:	call   0x40c230
  402355:	lea    rdi,[rax+0x2010]
  40235c:	mov    QWORD PTR [rsp+0x78],rax
  402361:	add    rax,0x10
  402365:	mov    QWORD PTR [rsp+0x58],rax
  40236a:	lea    rax,[rsp+0x8c]
  402372:	mov    QWORD PTR [rsp+0x2140],r12
  40237a:	mov    QWORD PTR [rsp+0x60],rdi
  40237f:	mov    QWORD PTR [rsp+0x70],rax
  402384:	mov    r8,QWORD PTR [rsp+0x60]
  402389:	mov    rdx,QWORD PTR [rsp+0x58]
  40238e:	mov    rcx,QWORD PTR [rsp+0x50]
  402393:	call   0x41a480
  402398:	test   rax,rax
  40239b:	mov    r13,rax
  40239e:	je     0x402314
  4023a4:	test   rsi,rsi
  4023a7:	je     0x402490
  4023ad:	mov    rax,QWORD PTR [rbp+0x48]
  4023b1:	mov    DWORD PTR [rsi+0x8],0x0
  4023b8:	mov    r9,rsi
  4023bb:	xor    edx,edx
  4023bd:	mov    rcx,rbx
  4023c0:	mov    r8,QWORD PTR [rax+0x10]
  4023c4:	mov    rax,QWORD PTR [rsp+0x70]
  4023c9:	mov    QWORD PTR [rsp+0x20],rax
  4023ce:	call   QWORD PTR [rbx+0x18]
  4023d1:	mov    rdi,r14
  4023d4:	xor    r15d,r15d
  4023d7:	shl    rdi,0x5
  4023db:	jmp    0x402436
  4023dd:	nop    DWORD PTR [rax]
  4023e0:	lea    rdx,[r15+r14*1]
  4023e4:	xor    r12d,r12d
  4023e7:	cmp    QWORD PTR [rax+0x10],rdx
  4023eb:	jbe    0x4023f4
  4023ed:	mov    r12,rdi
  4023f0:	add    r12,QWORD PTR [rax+0x20]
  4023f4:	mov    r9,r15
  4023f7:	xor    edx,edx
  4023f9:	mov    r8d,DWORD PTR [rsp+0x8c]
  402401:	mov    rcx,rbx
  402404:	mov    QWORD PTR [rsp+0x20],rsi
  402409:	add    r15,0x1
  40240d:	call   QWORD PTR [rbx+0x20]
  402410:	mov    r9,QWORD PTR [rsp+0x2140]
  402418:	mov    rcx,QWORD PTR [rsp+0x48]
  40241d:	mov    r8,rsi
  402420:	mov    QWORD PTR [rsp+0x20],rbx
  402425:	mov    rdx,r12
  402428:	add    rdi,0x20
  40242c:	call   0x401560
  402431:	cmp    r15,r13
  402434:	je     0x402444
  402436:	mov    rax,QWORD PTR [rbp+0x48]
  40243a:	test   rax,rax
  40243d:	jne    0x4023e0
  40243f:	xor    r12d,r12d
  402442:	jmp    0x4023f4
  402444:	mov    r9,r15
  402447:	mov    r8d,DWORD PTR [rsp+0x8c]
  40244f:	xor    edx,edx
  402451:	mov    rcx,rbx
  402454:	mov    QWORD PTR [rsp+0x20],rsi
  402459:	add    r14,r15
  40245c:	call   QWORD PTR [rbx+0x28]
  40245f:	mov    rax,QWORD PTR [rsp+0x60]
  402464:	mov    r9d,DWORD PTR [rsp+0x6c]
  402469:	mov    r8,rsi
  40246c:	mov    rdx,rbp
  40246f:	mov    rcx,rbx
  402472:	mov    QWORD PTR [rsp+0x28],rax
  402477:	mov    rax,QWORD PTR [rsp+0x58]
  40247c:	mov    QWORD PTR [rsp+0x20],rax
  402481:	call   QWORD PTR [rsp+0x2150]
  402488:	jmp    0x402384
  40248d:	nop    DWORD PTR [rax]
  402490:	mov    rax,QWORD PTR [rbp+0x48]
  402494:	xor    r9d,r9d
  402497:	xor    edx,edx
  402499:	mov    rcx,rbx
  40249c:	mov    r8,QWORD PTR [rax+0x10]
  4024a0:	mov    rax,QWORD PTR [rsp+0x70]
  4024a5:	mov    QWORD PTR [rsp+0x20],rax
  4024aa:	call   QWORD PTR [rbx+0x18]
  4024ad:	jmp    0x4023d1
  4024b2:	lea    rdx,[rip+0x1ddbb]        # 0x420274
  4024b9:	lea    rcx,[rip+0x1db70]        # 0x420030
  4024c0:	call   0x406300
  4024c5:	jmp    0x402247
  4024ca:	call   0x415f30
  4024cf:	mov    QWORD PTR [rsp+0x20],r12
  4024d4:	mov    r8,QWORD PTR [rbp+0x48]
  4024d8:	mov    rdi,rax
  4024db:	mov    r9,rax
  4024de:	xor    edx,edx
  4024e0:	mov    rcx,r13
  4024e3:	call   0x403480
  4024e8:	mov    r8,rdi
  4024eb:	mov    rdx,rsi
  4024ee:	mov    rcx,rbx
  4024f1:	call   QWORD PTR [rbx+0x8]
  4024f4:	mov    rcx,rdi
  4024f7:	call   0x416010
  4024fc:	xor    r8d,r8d
  4024ff:	xor    edx,edx
  402501:	mov    rcx,r13
  402504:	call   0x40c230
  402509:	mov    rdi,rax
  40250c:	mov    QWORD PTR [rsp+0x78],rax
  402511:	add    rax,0x2010
  402517:	mov    QWORD PTR [rsp+0x28],rax
  40251c:	mov    rax,rdi
  40251f:	mov    r8,rsi
  402522:	add    rax,0x10
  402526:	mov    rdx,rbp
  402529:	mov    rcx,rbx
  40252c:	mov    QWORD PTR [rsp+0x20],rax
  402531:	mov    r9d,DWORD PTR [rdi]
  402534:	call   QWORD PTR [rsp+0x2150]
  40253b:	jmp    0x402314
  402540:	push   r14
  402542:	push   r13
  402544:	push   r12
  402546:	push   rbp
  402547:	push   rdi
  402548:	push   rsi
  402549:	push   rbx
  40254a:	sub    rsp,0x30
  40254e:	mov    r13d,DWORD PTR [rcx+0x88]
  402555:	mov    r14,QWORD PTR [rcx+0x50]
  402559:	mov    rbx,rcx
  40255c:	mov    rdi,rdx
  40255f:	mov    r12,r8
  402562:	mov    rsi,r9
  402565:	call   0x40be90
  40256a:	cmp    QWORD PTR [rbx+0x48],0x0
  40256f:	mov    rbp,rax
  402572:	je     0x4025d2
  402574:	mov    rax,QWORD PTR [rip+0x292b5]        # 0x42b830
  40257b:	mov    rcx,rsi
  40257e:	mov    rdx,QWORD PTR [rax]
  402581:	call   0x415f70
  402586:	test   r13d,r13d
  402589:	jne    0x4025f0
  40258b:	mov    r10,QWORD PTR [rbx+0x48]
  40258f:	xor    edx,edx
  402591:	test   r10,r10
  402594:	je     0x40259d
  402596:	cmp    QWORD PTR [r10+0x10],0x0
  40259b:	jne    0x4025e1
  40259d:	mov    r9,rbp
  4025a0:	mov    r8,rsi
  4025a3:	mov    rcx,r14
  4025a6:	mov    QWORD PTR [rsp+0x20],rdi
  4025ab:	call   0x401560
  4025b0:	mov    QWORD PTR [rsp+0x28],0x0
  4025b9:	mov    QWORD PTR [rsp+0x20],0x0
  4025c2:	xor    r9d,r9d
  4025c5:	mov    r8,rsi
  4025c8:	mov    rdx,rbx
  4025cb:	mov    rcx,rdi
  4025ce:	call   r12
  4025d1:	nop
  4025d2:	add    rsp,0x30
  4025d6:	pop    rbx
  4025d7:	pop    rsi
  4025d8:	pop    rdi
  4025d9:	pop    rbp
  4025da:	pop    r12
  4025dc:	pop    r13
  4025de:	pop    r14
  4025e0:	ret    
  4025e1:	mov    rdx,QWORD PTR [r10+0x20]
  4025e5:	jmp    0x40259d
  4025e7:	nop    WORD PTR [rax+rax*1+0x0]
  4025f0:	mov    QWORD PTR [rsp+0x20],r12
  4025f5:	mov    r9,rdi
  4025f8:	mov    r8,rbp
  4025fb:	mov    rdx,rsi
  4025fe:	mov    rcx,rbx
  402601:	call   0x402200
  402606:	nop
  402607:	add    rsp,0x30
  40260b:	pop    rbx
  40260c:	pop    rsi
  40260d:	pop    rdi
  40260e:	pop    rbp
  40260f:	pop    r12
  402611:	pop    r13
  402613:	pop    r14
  402615:	ret    
  402616:	nop
  402617:	nop
  402618:	nop
  402619:	nop
  40261a:	nop
  40261b:	nop
  40261c:	nop
  40261d:	nop
  40261e:	nop
  40261f:	nop
  402620:	sub    rsp,0x28
  402624:	mov    rdx,QWORD PTR [rip+0x31025]        # 0x433650
  40262b:	lea    rcx,[rip+0x1dcfe]        # 0x420330
  402632:	call   0x40b3d0
  402637:	call   0x41b230
  40263c:	lea    rcx,[rip+0x1dd59]        # 0x42039c
  402643:	mov    rdx,rax
  402646:	add    rsp,0x28
  40264a:	jmp    0x40b3d0
  40264f:	nop
  402650:	sub    rsp,0x28
  402654:	call   0x40c840
  402659:	mov    rax,QWORD PTR [rip+0x29200]        # 0x42b860
  402660:	mov    QWORD PTR [rax],0x0
  402667:	mov    QWORD PTR [rax+0x8],0x0
  40266f:	mov    QWORD PTR [rax+0x10],0x0
  402677:	mov    QWORD PTR [rax+0x18],0x0
  40267f:	mov    rax,QWORD PTR [rip+0x2908a]        # 0x42b710
  402686:	mov    QWORD PTR [rax],0x0
  40268d:	mov    QWORD PTR [rax+0x8],0x0
  402695:	mov    QWORD PTR [rax+0x10],0x0
  40269d:	mov    QWORD PTR [rax+0x18],0x0
  4026a5:	mov    DWORD PTR [rax],0x1f
  4026ab:	call   0x415f30
  4026b0:	mov    rdx,QWORD PTR [rip+0x28fe9]        # 0x42b6a0
  4026b7:	mov    QWORD PTR [rdx],rax
  4026ba:	call   0x415f30
  4026bf:	mov    rdx,QWORD PTR [rip+0x2922a]        # 0x42b8f0
  4026c6:	mov    QWORD PTR [rdx],rax
  4026c9:	mov    rax,QWORD PTR [rip+0x29020]        # 0x42b6f0
  4026d0:	mov    DWORD PTR [rax],0x0
  4026d6:	add    rsp,0x28
  4026da:	ret    
  4026db:	nop
  4026dc:	nop
  4026dd:	nop
  4026de:	nop
  4026df:	nop
  4026e0:	test   r8,r8
  4026e3:	je     0x4026f7
  4026e5:	mov    eax,DWORD PTR [rip+0x2e945]        # 0x431030
  4026eb:	add    eax,0x1
  4026ee:	mov    DWORD PTR [rip+0x2e93c],eax        # 0x431030
  4026f4:	mov    DWORD PTR [r8],eax
  4026f7:	test   r9,r9
  4026fa:	je     0x402707
  4026fc:	test   rdx,rdx
  4026ff:	je     0x402710
  402701:	mov    eax,DWORD PTR [rdx+0x8]
  402704:	mov    QWORD PTR [r9],rax
  402707:	mov    eax,0x1
  40270c:	ret    
  40270d:	nop    DWORD PTR [rax]
  402710:	xor    eax,eax
  402712:	jmp    0x402704
  402714:	xchg   ax,ax
  402716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402720:	push   r13
  402722:	push   r12
  402724:	push   rbp
  402725:	push   rdi
  402726:	push   rsi
  402727:	push   rbx
  402728:	sub    rsp,0x38
  40272c:	mov    r12,QWORD PTR [rcx]
  40272f:	mov    r13,r8
  402732:	mov    rbp,rdx
  402735:	mov    esi,r9d
  402738:	call   0x415f30
  40273d:	mov    rcx,QWORD PTR [r13+0x50]
  402741:	mov    rbx,rax
  402744:	lea    rax,[rsp+0x98]
  40274c:	mov    rdi,QWORD PTR [rsp+0x98]
  402754:	mov    QWORD PTR [rsp+0x28],rax
  402759:	call   0x407940
  40275e:	lea    rdx,[rip+0x1dfeb]        # 0x420750
  402765:	mov    r9d,esi
  402768:	mov    r8,rax
  40276b:	mov    rcx,rbx
  40276e:	call   0x406050
  402773:	mov    rcx,rdi
  402776:	call   0x405e30
  40277b:	mov    rdx,rdi
  40277e:	mov    rcx,rbx
  402781:	call   0x416250
  402786:	lea    rdx,[rip+0x1dfe1]        # 0x42076e
  40278d:	mov    rcx,rbx
  402790:	call   0x416200
  402795:	mov    rdx,rbx
  402798:	mov    rcx,r12
  40279b:	call   0x416750
  4027a0:	mov    r8,QWORD PTR [rsp+0x90]
  4027a8:	lea    rdx,[rip+0x1dfc3]        # 0x420772
  4027af:	mov    r9d,esi
  4027b2:	mov    rcx,rbp
  4027b5:	call   0x406020
  4027ba:	mov    eax,0x1
  4027bf:	add    rsp,0x38
  4027c3:	pop    rbx
  4027c4:	pop    rsi
  4027c5:	pop    rdi
  4027c6:	pop    rbp
  4027c7:	pop    r12
  4027c9:	pop    r13
  4027cb:	ret    
  4027cc:	nop    DWORD PTR [rax+0x0]
  4027d0:	sub    rsp,0x28
  4027d4:	sub    edx,0x3
  4027d7:	cmp    edx,0x1
  4027da:	ja     0x4027eb
  4027dc:	mov    rcx,QWORD PTR [rsp+0x50]
  4027e1:	mov    edx,0x7d
  4027e6:	call   0x416110
  4027eb:	mov    eax,0x1
  4027f0:	add    rsp,0x28
  4027f4:	ret    
  4027f5:	nop
  4027f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402800:	sub    rsp,0x28
  402804:	mov    r8,QWORD PTR [rsp+0x50]
  402809:	test   r8,r8
  40280c:	je     0x402820
  40280e:	mov    eax,DWORD PTR [rip+0x2e81c]        # 0x431030
  402814:	add    eax,0x1
  402817:	mov    DWORD PTR [rip+0x2e813],eax        # 0x431030
  40281d:	mov    DWORD PTR [r8],eax
  402820:	sub    edx,0x3
  402823:	cmp    edx,0x1
  402826:	ja     0x402835
  402828:	mov    rcx,r9
  40282b:	mov    edx,0x7b
  402830:	call   0x416110
  402835:	mov    eax,0x1
  40283a:	add    rsp,0x28
  40283e:	ret    
  40283f:	nop
  402840:	push   rbp
  402841:	push   rdi
  402842:	push   rsi
  402843:	push   rbx
  402844:	sub    rsp,0x38
  402848:	mov    rdi,rdx
  40284b:	mov    QWORD PTR [rsp+0x78],r9
  402850:	mov    rsi,r8
  402853:	call   0x415f30
  402858:	mov    edx,DWORD PTR [rdi]
  40285a:	mov    rbx,rax
  40285d:	cmp    edx,0x69
  402860:	ja     0x402b30
  402866:	lea    r9,[rip+0x1dfbb]        # 0x420828
  40286d:	mov    r10d,edx
  402870:	movsxd rax,DWORD PTR [r9+r10*4]
  402874:	add    r9,rax
  402877:	jmp    r9
  40287a:	nop    WORD PTR [rax+rax*1+0x0]
  402880:	mov    rcx,QWORD PTR [rdi+0x8]
  402884:	call   0x407720
  402889:	lea    rdx,[rip+0x1df38]        # 0x4207c8
  402890:	mov    r8,rax
  402893:	mov    rcx,rbx
  402896:	call   0x406020
  40289b:	nop    DWORD PTR [rax+rax*1+0x0]
  4028a0:	mov    rdx,rbx
  4028a3:	mov    rcx,rsi
  4028a6:	call   0x416250
  4028ab:	mov    rcx,rbx
  4028ae:	call   0x416010
  4028b3:	mov    eax,0x1
  4028b8:	add    rsp,0x38
  4028bc:	pop    rbx
  4028bd:	pop    rsi
  4028be:	pop    rdi
  4028bf:	pop    rbp
  4028c0:	ret    
  4028c1:	movsx  r8d,BYTE PTR [rdi+0x8]
  4028c6:	lea    rdx,[rip+0x1dec3]        # 0x420790
  4028cd:	mov    rcx,rbx
  4028d0:	call   0x406020
  4028d5:	jmp    0x4028a0
  4028d7:	nop    WORD PTR [rax+rax*1+0x0]
  4028e0:	movsx  ecx,BYTE PTR [rdi+0x8]
  4028e4:	cmp    cl,0x27
  4028e7:	je     0x402bd1
  4028ed:	mov    edx,0x27
  4028f2:	call   0x406660
  4028f7:	lea    rdx,[rip+0x1de8d]        # 0x42078b
  4028fe:	mov    r8,rax
  402901:	mov    rcx,rbx
  402904:	call   0x406020
  402909:	jmp    0x4028a0
  40290b:	nop    DWORD PTR [rax+rax*1+0x0]
  402910:	movsx  r8d,WORD PTR [rdi+0x8]
  402915:	lea    rdx,[rip+0x1de79]        # 0x420795
  40291c:	mov    rcx,rbx
  40291f:	call   0x406020
  402924:	jmp    0x4028a0
  402929:	nop    DWORD PTR [rax+0x0]
  402930:	mov    r8d,DWORD PTR [rdi+0x8]
  402934:	lea    rdx,[rip+0x1de5e]        # 0x420799
  40293b:	mov    rcx,rbx
  40293e:	call   0x406020
  402943:	jmp    0x4028a0
  402948:	nop    DWORD PTR [rax+rax*1+0x0]
  402950:	movss  xmm0,DWORD PTR [rdi+0x8]
  402955:	mov    edx,0x7f800000
  40295a:	movd   eax,xmm0
  40295e:	and    eax,0x7fffffff
  402963:	cmp    edx,eax
  402965:	jns    0x402bb0
  40296b:	lea    rdx,[rip+0x1de2a]        # 0x42079c
  402972:	mov    rcx,rbx
  402975:	call   0x406020
  40297a:	jmp    0x4028a0
  40297f:	nop
  402980:	mov    r8,QWORD PTR [rdi+0x8]
  402984:	mov    edx,r8d
  402987:	mov    rax,r8
  40298a:	neg    edx
  40298c:	shr    rax,0x20
  402990:	or     edx,r8d
  402993:	and    eax,0x7fffffff
  402998:	shr    edx,0x1f
  40299b:	or     eax,edx
  40299d:	mov    edx,0x7ff00000
  4029a2:	cmp    edx,eax
  4029a4:	js     0x402be5
  4029aa:	mov    QWORD PTR [rsp+0x28],r8
  4029af:	lea    rdx,[rip+0x1ddf2]        # 0x4207a8
  4029b6:	mov    rcx,rbx
  4029b9:	movsd  xmm2,QWORD PTR [rsp+0x28]
  4029bf:	call   0x406020
  4029c4:	jmp    0x4028a0
  4029c9:	nop    DWORD PTR [rax+0x0]
  4029d0:	movzx  r8d,BYTE PTR [rdi+0x8]
  4029d5:	lea    rdx,[rip+0x1ddd0]        # 0x4207ac
  4029dc:	mov    rcx,rbx
  4029df:	call   0x406020
  4029e4:	jmp    0x4028a0
  4029e9:	nop    DWORD PTR [rax+0x0]
  4029f0:	movzx  r8d,WORD PTR [rdi+0x8]
  4029f5:	lea    rdx,[rip+0x1ddb5]        # 0x4207b1
  4029fc:	mov    rcx,rbx
  4029ff:	call   0x406020
  402a04:	jmp    0x4028a0
  402a09:	nop    DWORD PTR [rax+0x0]
  402a10:	mov    r8d,DWORD PTR [rdi+0x8]
  402a14:	lea    rdx,[rip+0x1dd9a]        # 0x4207b5
  402a1b:	mov    rcx,rbx
  402a1e:	call   0x406020
  402a23:	jmp    0x4028a0
  402a28:	nop    DWORD PTR [rax+rax*1+0x0]
  402a30:	mov    r8,QWORD PTR [rdi+0x8]
  402a34:	lea    rdx,[rip+0x1dd7e]        # 0x4207b9
  402a3b:	mov    rcx,rbx
  402a3e:	call   0x406020
  402a43:	jmp    0x4028a0
  402a48:	nop    DWORD PTR [rax+rax*1+0x0]
  402a50:	mov    r8,QWORD PTR [rdi+0x8]
  402a54:	lea    rdx,[rip+0x1dd65]        # 0x4207c0
  402a5b:	mov    rcx,rbx
  402a5e:	call   0x406020
  402a63:	jmp    0x4028a0
  402a68:	nop    DWORD PTR [rax+rax*1+0x0]
  402a70:	movsxd r8,DWORD PTR [rdi+0x8]
  402a74:	mov    rcx,QWORD PTR [rdi+0x10]
  402a78:	test   r8d,r8d
  402a7b:	jne    0x402b62
  402a81:	test   rcx,rcx
  402a84:	jne    0x402b62
  402a8a:	lea    rdx,[rip+0x1dd3a]        # 0x4207cb
  402a91:	mov    rcx,rbx
  402a94:	call   0x406020
  402a99:	jmp    0x4028a0
  402a9e:	xchg   ax,ax
  402aa0:	mov    eax,DWORD PTR [rdi+0x8]
  402aa3:	lea    ecx,[rax*4+0x3]
  402aaa:	movsxd rcx,ecx
  402aad:	call   0x415600
  402ab2:	mov    ecx,0x22
  402ab7:	mov    rbp,rax
  402aba:	mov    WORD PTR [rax],cx
  402abd:	mov    rdi,QWORD PTR [rdi+0x10]
  402ac1:	cmp    BYTE PTR [rdi],0x0
  402ac4:	je     0x402b05
  402ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ad0:	mov    rcx,rbp
  402ad3:	call   0x41db50
  402ad8:	lea    r9,[rbp+rax*1+0x0]
  402add:	mov    eax,0x785c
  402ae2:	mov    rdx,rdi
  402ae5:	mov    r8d,0x2
  402aeb:	mov    rcx,rbp
  402aee:	add    rdi,0x2
  402af2:	mov    WORD PTR [r9],ax
  402af6:	mov    BYTE PTR [r9+0x2],0x0
  402afb:	call   0x41db48
  402b00:	cmp    BYTE PTR [rdi],0x0
  402b03:	jne    0x402ad0
  402b05:	mov    rcx,rbp
  402b08:	call   0x41db50
  402b0d:	mov    edx,0x22
  402b12:	mov    WORD PTR [rbp+rax*1+0x0],dx
  402b17:	mov    rdx,rbp
  402b1a:	mov    rcx,rsi
  402b1d:	call   0x416200
  402b22:	jmp    0x4028ab
  402b27:	nop    WORD PTR [rax+rax*1+0x0]
  402b30:	lea    rcx,[rip+0x1dc99]        # 0x4207d0
  402b37:	call   0x406300
  402b3c:	test   eax,eax
  402b3e:	jne    0x4028a0
  402b44:	lea    rdx,[rip+0x1dca0]        # 0x4207eb
  402b4b:	lea    rcx,[rip+0x1dca6]        # 0x4207f8
  402b52:	mov    r8d,0x70
  402b58:	call   0x41da30
  402b5d:	jmp    0x4028a0
  402b62:	mov    edx,0x22
  402b67:	call   0x406540
  402b6c:	mov    rcx,rax
  402b6f:	mov    rdi,rax
  402b72:	call   0x41db50
  402b77:	lea    rcx,[rax+0x3]
  402b7b:	call   0x415600
  402b80:	lea    rcx,[rax+0x1]
  402b84:	mov    rbp,rax
  402b87:	mov    rdx,rdi
  402b8a:	mov    BYTE PTR [rax],0x22
  402b8d:	call   0x41db58
  402b92:	mov    rcx,rbp
  402b95:	call   0x41db50
  402b9a:	mov    r8d,0x22
  402ba0:	mov    WORD PTR [rbp+rax*1+0x0],r8w
  402ba6:	jmp    0x402b17
  402bab:	nop    DWORD PTR [rax+rax*1+0x0]
  402bb0:	cvtss2sd xmm0,xmm0
  402bb4:	lea    rdx,[rip+0x1dbe6]        # 0x4207a1
  402bbb:	mov    rcx,rbx
  402bbe:	movapd xmm2,xmm0
  402bc2:	movq   r8,xmm0
  402bc7:	call   0x406020
  402bcc:	jmp    0x4028a0
  402bd1:	lea    rdx,[rip+0x1dbae]        # 0x420786
  402bd8:	mov    rcx,rbx
  402bdb:	call   0x406020
  402be0:	jmp    0x4028a0
  402be5:	lea    rdx,[rip+0x1dbb8]        # 0x4207a4
  402bec:	mov    rcx,rbx
  402bef:	call   0x406020
  402bf4:	jmp    0x4028a0
  402bf9:	nop    DWORD PTR [rax+0x0]
  402c00:	push   rsi
  402c01:	push   rbx
  402c02:	sub    rsp,0x38
  402c06:	lea    rax,[rsp+0x60]
  402c0b:	mov    rsi,rdx
  402c0e:	mov    rbx,r8
  402c11:	mov    rcx,r8
  402c14:	mov    QWORD PTR [rsp+0x60],r8
  402c19:	mov    QWORD PTR [rsp+0x68],r9
  402c1e:	mov    QWORD PTR [rsp+0x28],rax
  402c23:	call   0x4164d0
  402c28:	mov    rdx,rbx
  402c2b:	mov    rcx,rsi
  402c2e:	call   0x416250
  402c33:	mov    eax,0x1
  402c38:	add    rsp,0x38
  402c3c:	pop    rbx
  402c3d:	pop    rsi
  402c3e:	ret    
  402c3f:	nop
  402c40:	sub    rsp,0x28
  402c44:	cmp    edx,0x4
  402c47:	ja     0x402c60
  402c49:	mov    eax,0x1
  402c4e:	mov    ecx,edx
  402c50:	shl    rax,cl
  402c53:	test   al,0x19
  402c55:	jne    0x402c70
  402c57:	test   al,0x6
  402c59:	je     0x402c60
  402c5b:	test   r9,r9
  402c5e:	jne    0x402c90
  402c60:	mov    eax,0x1
  402c65:	add    rsp,0x28
  402c69:	ret    
  402c6a:	nop    WORD PTR [rax+rax*1+0x0]
  402c70:	mov    rcx,QWORD PTR [rsp+0x50]
  402c75:	mov    edx,0x20
  402c7a:	call   0x416110
  402c7f:	mov    eax,0x1
  402c84:	add    rsp,0x28
  402c88:	ret    
  402c89:	nop    DWORD PTR [rax+0x0]
  402c90:	mov    rcx,QWORD PTR [rsp+0x50]
  402c95:	lea    rdx,[rip+0x1dd34]        # 0x4209d0
  402c9c:	call   0x416200
  402ca1:	jmp    0x402c60
  402ca3:	nop
  402ca4:	nop
  402ca5:	nop
  402ca6:	nop
  402ca7:	nop
  402ca8:	nop
  402ca9:	nop
  402caa:	nop
  402cab:	nop
  402cac:	nop
  402cad:	nop
  402cae:	nop
  402caf:	nop
  402cb0:	mov    rdx,QWORD PTR [rsp+0x28]
  402cb5:	test   rdx,rdx
  402cb8:	je     0x402ccb
  402cba:	mov    eax,DWORD PTR [rip+0x2e380]        # 0x431040
  402cc0:	add    eax,0x1
  402cc3:	mov    DWORD PTR [rip+0x2e377],eax        # 0x431040
  402cc9:	mov    DWORD PTR [rdx],eax
  402ccb:	mov    eax,0x1
  402cd0:	ret    
  402cd1:	nop    DWORD PTR [rax+rax*1+0x0]
  402cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ce0:	mov    eax,0x1
  402ce5:	ret    
  402ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402cf0:	mov    eax,0x1
  402cf5:	ret    
  402cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d00:	push   rbx
  402d01:	sub    rsp,0x40
  402d05:	test   r8,r8
  402d08:	mov    rbx,rdx
  402d0b:	je     0x402d1f
  402d0d:	mov    eax,DWORD PTR [rip+0x2e32d]        # 0x431040
  402d13:	add    eax,0x1
  402d16:	mov    DWORD PTR [rip+0x2e324],eax        # 0x431040
  402d1c:	mov    DWORD PTR [r8],eax
  402d1f:	mov    rcx,QWORD PTR [rsp+0x70]
  402d24:	lea    rax,[rsp+0x70]
  402d29:	mov    QWORD PTR [rsp+0x28],rax
  402d2e:	test   rcx,rcx
  402d31:	je     0x402d63
  402d33:	mov    eax,DWORD PTR [rcx+0x8]
  402d36:	mov    QWORD PTR [rsp+0x30],rax
  402d3b:	call   0x416430
  402d40:	lea    rdx,[rsp+0x30]
  402d45:	mov    r8d,0x10
  402d4b:	mov    rcx,rbx
  402d4e:	mov    QWORD PTR [rsp+0x38],rax
  402d53:	call   0x416170
  402d58:	mov    eax,0x1
  402d5d:	add    rsp,0x40
  402d61:	pop    rbx
  402d62:	ret    
  402d63:	xor    eax,eax
  402d65:	jmp    0x402d36
  402d67:	nop    WORD PTR [rax+rax*1+0x0]
  402d70:	push   rbx
  402d71:	sub    rsp,0x40
  402d75:	mov    rcx,QWORD PTR [rsp+0x78]
  402d7a:	lea    rax,[rsp+0x78]
  402d7f:	mov    rbx,rdx
  402d82:	mov    QWORD PTR [rsp+0x28],rax
  402d87:	mov    rax,QWORD PTR [rsp+0x70]
  402d8c:	mov    QWORD PTR [rsp+0x30],rax
  402d91:	call   0x416430
  402d96:	lea    rdx,[rsp+0x30]
  402d9b:	mov    r8d,0x10
  402da1:	mov    rcx,rbx
  402da4:	mov    QWORD PTR [rsp+0x38],rax
  402da9:	call   0x416170
  402dae:	mov    eax,0x1
  402db3:	add    rsp,0x40
  402db7:	pop    rbx
  402db8:	ret    
  402db9:	nop    DWORD PTR [rax+0x0]
  402dc0:	push   rdi
  402dc1:	push   rsi
  402dc2:	push   rbx
  402dc3:	sub    rsp,0x30
  402dc7:	mov    rbx,rdx
  402dca:	mov    QWORD PTR [rsp+0x68],r9
  402dcf:	mov    edx,DWORD PTR [rdx]
  402dd1:	mov    rsi,r8
  402dd4:	cmp    edx,0x69
  402dd7:	je     0x402f30
  402ddd:	mov    rdx,r8
  402de0:	mov    rcx,rbx
  402de3:	call   0x405e90
  402de8:	mov    edx,DWORD PTR [rbx]
  402dea:	cmp    edx,0x20
  402ded:	ja     0x402f30
  402df3:	lea    rax,[rip+0x1dc4e]        # 0x420a48
  402dfa:	mov    ecx,edx
  402dfc:	movsxd rcx,DWORD PTR [rax+rcx*4]
  402e00:	add    rax,rcx
  402e03:	jmp    rax
  402e05:	lea    rdx,[rbx+0x8]
  402e09:	mov    r8d,0x1
  402e0f:	mov    rcx,rsi
  402e12:	call   0x416170
  402e17:	mov    eax,0x1
  402e1c:	add    rsp,0x30
  402e20:	pop    rbx
  402e21:	pop    rsi
  402e22:	pop    rdi
  402e23:	ret    
  402e24:	lea    rdx,[rbx+0x8]
  402e28:	mov    r8d,0x4
  402e2e:	mov    rcx,rsi
  402e31:	call   0x416170
  402e36:	mov    eax,0x1
  402e3b:	add    rsp,0x30
  402e3f:	pop    rbx
  402e40:	pop    rsi
  402e41:	pop    rdi
  402e42:	ret    
  402e43:	lea    rdx,[rbx+0x8]
  402e47:	mov    r8d,0x2
  402e4d:	mov    rcx,rsi
  402e50:	call   0x416170
  402e55:	mov    eax,0x1
  402e5a:	add    rsp,0x30
  402e5e:	pop    rbx
  402e5f:	pop    rsi
  402e60:	pop    rdi
  402e61:	ret    
  402e62:	mov    rax,QWORD PTR [rbx+0x8]
  402e66:	lea    rdx,[rsp+0x20]
  402e6b:	mov    r8d,0x8
  402e71:	mov    rcx,rsi
  402e74:	mov    QWORD PTR [rsp+0x20],rax
  402e79:	call   0x416170
  402e7e:	mov    eax,0x1
  402e83:	add    rsp,0x30
  402e87:	pop    rbx
  402e88:	pop    rsi
  402e89:	pop    rdi
  402e8a:	ret    
  402e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e90:	lea    rdx,[rbx+0x8]
  402e94:	mov    r8d,0x8
  402e9a:	mov    rcx,rsi
  402e9d:	call   0x416170
  402ea2:	jmp    0x402e17
  402ea7:	nop    WORD PTR [rax+rax*1+0x0]
  402eb0:	mov    rcx,QWORD PTR [rbx+0x10]
  402eb4:	lea    rdx,[rsp+0x20]
  402eb9:	call   0x415a10
  402ebe:	mov    r8d,DWORD PTR [rsp+0x20]
  402ec3:	mov    rbx,rax
  402ec6:	mov    rcx,rsi
  402ec9:	mov    rdx,rax
  402ecc:	call   0x416170
  402ed1:	mov    rcx,rbx
  402ed4:	call   0x41dc08
  402ed9:	jmp    0x402e17
  402ede:	xchg   ax,ax
  402ee0:	movsxd rdi,DWORD PTR [rbx+0x8]
  402ee4:	mov    rbx,QWORD PTR [rbx+0x10]
  402ee8:	test   edi,edi
  402eea:	jne    0x402ef1
  402eec:	test   rbx,rbx
  402eef:	je     0x402f62
  402ef1:	lea    ecx,[rdi+0x1]
  402ef4:	movsxd rcx,ecx
  402ef7:	call   0x41dbc8
  402efc:	mov    r8,rdi
  402eff:	mov    rdx,rbx
  402f02:	mov    rcx,rax
  402f05:	mov    QWORD PTR [rsp+0x20],rax
  402f0a:	call   0x41dbc0
  402f0f:	lea    rdx,[rsp+0x20]
  402f14:	mov    BYTE PTR [rax+rdi*1],0x0
  402f18:	mov    r8d,0x8
  402f1e:	mov    rcx,rsi
  402f21:	call   0x416170
  402f26:	jmp    0x402e17
  402f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f30:	lea    rcx,[rip+0x1daa9]        # 0x4209e0
  402f37:	call   0x406300
  402f3c:	test   eax,eax
  402f3e:	jne    0x402e17
  402f44:	lea    rdx,[rip+0x1dab7]        # 0x420a02
  402f4b:	lea    rcx,[rip+0x1dabe]        # 0x420a10
  402f52:	mov    r8d,0x5e
  402f58:	call   0x41da30
  402f5d:	jmp    0x402e17
  402f62:	lea    rdx,[rsp+0x20]
  402f67:	mov    r8d,0x8
  402f6d:	mov    rcx,rsi
  402f70:	mov    QWORD PTR [rsp+0x20],0x0
  402f79:	call   0x416170
  402f7e:	jmp    0x402e17
  402f83:	nop    DWORD PTR [rax]
  402f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f90:	push   rsi
  402f91:	push   rbx
  402f92:	sub    rsp,0x38
  402f96:	lea    rax,[rsp+0x60]
  402f9b:	mov    rsi,rdx
  402f9e:	mov    rbx,r8
  402fa1:	mov    rcx,r8
  402fa4:	mov    QWORD PTR [rsp+0x60],r8
  402fa9:	mov    QWORD PTR [rsp+0x68],r9
  402fae:	mov    QWORD PTR [rsp+0x28],rax
  402fb3:	call   0x4164d0
  402fb8:	mov    rdx,rbx
  402fbb:	mov    rcx,rsi
  402fbe:	call   0x416250
  402fc3:	mov    eax,0x1
  402fc8:	add    rsp,0x38
  402fcc:	pop    rbx
  402fcd:	pop    rsi
  402fce:	ret    
  402fcf:	nop
  402fd0:	xor    eax,eax
  402fd2:	test   rcx,rcx
  402fd5:	je     0x402fee
  402fd7:	cmp    QWORD PTR [rcx+0x10],0x0
  402fdc:	je     0x402fee
  402fde:	mov    rcx,QWORD PTR [rcx+0x20]
  402fe2:	mov    edx,DWORD PTR [rcx]
  402fe4:	cmp    edx,0x2
  402fe7:	je     0x403000
  402fe9:	cmp    edx,0xc
  402fec:	je     0x402ff0
  402fee:	repz ret 
  402ff0:	mov    edx,DWORD PTR [rcx+0x8]
  402ff3:	test   edx,edx
  402ff5:	jle    0x402fee
  402ff7:	mov    rax,QWORD PTR [rcx+0x10]
  402ffb:	movsx  eax,BYTE PTR [rax]
  402ffe:	ret    
  402fff:	nop
  403000:	movsx  eax,BYTE PTR [rcx+0x8]
  403004:	ret    
  403005:	nop
  403006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403010:	push   rsi
  403011:	push   rbx
  403012:	sub    rsp,0x28
  403016:	cmp    DWORD PTR [rcx],0xc
  403019:	mov    rsi,rdx
  40301c:	ja     0x403090
  40301e:	mov    r9d,DWORD PTR [rcx]
  403021:	lea    rax,[rip+0x1daf4]        # 0x420b1c
  403028:	movsxd r9,DWORD PTR [rax+r9*4]
  40302c:	add    rax,r9
  40302f:	jmp    rax
  403031:	movsx  edx,BYTE PTR [rcx+0x8]
  403035:	mov    ebx,0x1
  40303a:	mov    rcx,rsi
  40303d:	call   0x416110
  403042:	mov    rax,rbx
  403045:	add    rsp,0x28
  403049:	pop    rbx
  40304a:	pop    rsi
  40304b:	ret    
  40304c:	nop    DWORD PTR [rax+0x0]
  403050:	movsxd rbx,DWORD PTR [rcx+0x8]
  403054:	mov    rdx,QWORD PTR [rcx+0x10]
  403058:	mov    rcx,rsi
  40305b:	mov    r8,rbx
  40305e:	call   0x416170
  403063:	mov    rcx,rsi
  403066:	call   0x4164d0
  40306b:	mov    rax,rbx
  40306e:	add    rsp,0x28
  403072:	pop    rbx
  403073:	pop    rsi
  403074:	ret    
  403075:	movsx  edx,r8b
  403079:	mov    rcx,rsi
  40307c:	mov    ebx,0x1
  403081:	call   0x416110
  403086:	mov    rax,rbx
  403089:	add    rsp,0x28
  40308d:	pop    rbx
  40308e:	pop    rsi
  40308f:	ret    
  403090:	lea    rcx,[rip+0x1da39]        # 0x420ad0
  403097:	mov    ebx,0x1
  40309c:	call   0x406300
  4030a1:	test   eax,eax
  4030a3:	jne    0x403042
  4030a5:	lea    rdx,[rip+0x1da3d]        # 0x420ae9
  4030ac:	lea    rcx,[rip+0x1da45]        # 0x420af8
  4030b3:	mov    r8d,0xbb
  4030b9:	call   0x41da30
  4030be:	jmp    0x403042
  4030c0:	push   r15
  4030c2:	push   r14
  4030c4:	push   r13
  4030c6:	push   r12
  4030c8:	push   rbp
  4030c9:	push   rdi
  4030ca:	push   rsi
  4030cb:	push   rbx
  4030cc:	sub    rsp,0x58
  4030d0:	mov    rbx,QWORD PTR [rsp+0xc0]
  4030d8:	mov    edi,DWORD PTR [rsp+0xc8]
  4030df:	movsxd rax,edx
  4030e2:	cmp    edx,r8d
  4030e5:	mov    r13,rcx
  4030e8:	mov    rax,QWORD PTR [rcx+rax*8+0x8]
  4030ed:	mov    DWORD PTR [rsp+0x48],r8d
  4030f2:	mov    rsi,r9
  4030f5:	mov    r12d,DWORD PTR [rsp+0xd0]
  4030fd:	movsxd rbp,DWORD PTR [rsp+0xd8]
  403105:	mov    rax,QWORD PTR [rax+0x2100]
  40310c:	mov    QWORD PTR [rsp+0x40],rax
  403111:	jl     0x403131
  403113:	mov    rax,QWORD PTR [rbx+0x10]
  403117:	test   rax,rax
  40311a:	je     0x403140
  40311c:	xor    r13d,r13d
  40311f:	cmp    r13,rax
  403122:	jb     0x403235
  403128:	mov    eax,DWORD PTR ds:0x0
  40312f:	ud2    
  403131:	cmp    QWORD PTR [rsp+0x40],0x0
  403137:	jne    0x403194
  403139:	nop    DWORD PTR [rax+0x0]
  403140:	test   rsi,rsi
  403143:	je     0x403183
  403145:	mov    eax,DWORD PTR [rsi+0x8]
  403148:	test   eax,eax
  40314a:	je     0x403183
  40314c:	cmp    eax,ebp
  40314e:	ja     0x403212
  403154:	xor    edx,edx
  403156:	div    rbp
  403159:	test   rdx,rdx
  40315c:	je     0x403183
  40315e:	sub    rbp,rdx
  403161:	je     0x403183
  403163:	movsx  edi,dil
  403167:	xor    ebx,ebx
  403169:	nop    DWORD PTR [rax+0x0]
  403170:	mov    edx,edi
  403172:	mov    rcx,rsi
  403175:	add    rbx,0x1
  403179:	call   0x416110
  40317e:	cmp    rbx,rbp
  403181:	jne    0x403170
  403183:	add    rsp,0x58
  403187:	pop    rbx
  403188:	pop    rsi
  403189:	pop    rdi
  40318a:	pop    rbp
  40318b:	pop    r12
  40318d:	pop    r13
  40318f:	pop    r14
  403191:	pop    r15
  403193:	ret    
  403194:	lea    eax,[rdx+0x1]
  403197:	xor    r15d,r15d
  40319a:	mov    DWORD PTR [rsp+0x4c],eax
  40319e:	jmp    0x403202
  4031a0:	mov    r8,r15
  4031a3:	shl    r8,0x5
  4031a7:	add    r8,QWORD PTR [rbx+0x20]
  4031ab:	mov    r14,r8
  4031ae:	je     0x4031b6
  4031b0:	cmp    DWORD PTR [r8],0x10
  4031b4:	je     0x4031c9
  4031b6:	lea    rdx,[rip+0x1d993]        # 0x420b50
  4031bd:	lea    rcx,[rip+0x1d99b]        # 0x420b5f
  4031c4:	call   0x406300
  4031c9:	mov    DWORD PTR [rsp+0x38],ebp
  4031cd:	mov    DWORD PTR [rsp+0x30],r12d
  4031d2:	mov    r9,rsi
  4031d5:	mov    DWORD PTR [rsp+0x28],edi
  4031d9:	mov    rax,QWORD PTR [r14+0x8]
  4031dd:	mov    rcx,r13
  4031e0:	mov    r8d,DWORD PTR [rsp+0x48]
  4031e5:	mov    edx,DWORD PTR [rsp+0x4c]
  4031e9:	add    r15,0x1
  4031ed:	mov    QWORD PTR [rsp+0x20],rax
  4031f2:	call   0x4030c0
  4031f7:	cmp    r15,QWORD PTR [rsp+0x40]
  4031fc:	je     0x403140
  403202:	test   rbx,rbx
  403205:	je     0x40320d
  403207:	cmp    QWORD PTR [rbx+0x10],r15
  40320b:	ja     0x4031a0
  40320d:	xor    r14d,r14d
  403210:	jmp    0x4031b6
  403212:	mov    rax,QWORD PTR [rbx+0x20]
  403216:	lea    rdx,[rip+0x1d9ad]        # 0x420bca
  40321d:	mov    ecx,DWORD PTR [rax+0x4]
  403220:	add    rsp,0x58
  403224:	pop    rbx
  403225:	pop    rsi
  403226:	pop    rdi
  403227:	pop    rbp
  403228:	pop    r12
  40322a:	pop    r13
  40322c:	pop    r14
  40322e:	pop    r15
  403230:	jmp    0x40b4a0
  403235:	movsxd rax,r12d
  403238:	movsx  r15d,dil
  40323c:	mov    QWORD PTR [rsp+0x40],rax
  403241:	jmp    0x403261
  403243:	mov    ecx,DWORD PTR [r14+0x4]
  403247:	lea    rdx,[rip+0x1d93a]        # 0x420b88
  40324e:	call   0x40b4a0
  403253:	add    r13,0x1
  403257:	cmp    r13,QWORD PTR [rbx+0x10]
  40325b:	jae    0x403140
  403261:	mov    r14,r13
  403264:	shl    r14,0x5
  403268:	add    r14,QWORD PTR [rbx+0x20]
  40326c:	je     0x403128
  403272:	mov    ecx,DWORD PTR [r14]
  403275:	cmp    ecx,0x10
  403278:	je     0x4032d0
  40327a:	call   0x4053f0
  40327f:	test   eax,eax
  403281:	je     0x403243
  403283:	mov    rdx,rsi
  403286:	mov    r8d,edi
  403289:	mov    rcx,r14
  40328c:	call   0x403010
  403291:	xor    edx,edx
  403293:	div    QWORD PTR [rsp+0x40]
  403298:	test   rdx,rdx
  40329b:	je     0x403253
  40329d:	mov    r14,QWORD PTR [rsp+0x40]
  4032a2:	sub    r14,rdx
  4032a5:	je     0x403253
  4032a7:	xor    r12d,r12d
  4032aa:	nop    WORD PTR [rax+rax*1+0x0]
  4032b0:	mov    edx,r15d
  4032b3:	mov    rcx,rsi
  4032b6:	add    r12,0x1
  4032ba:	call   0x416110
  4032bf:	cmp    r12,r14
  4032c2:	jne    0x4032b0
  4032c4:	jmp    0x403253
  4032c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032d0:	lea    rcx,[rip+0x1d888]        # 0x420b5f
  4032d7:	lea    rdx,[rip+0x1d897]        # 0x420b75
  4032de:	call   0x406300
  4032e3:	mov    ecx,DWORD PTR [r14]
  4032e6:	jmp    0x40327a
  4032e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032f0:	push   r14
  4032f2:	push   r13
  4032f4:	push   r12
  4032f6:	push   rbp
  4032f7:	push   rdi
  4032f8:	push   rsi
  4032f9:	push   rbx
  4032fa:	sub    rsp,0x40
  4032fe:	mov    rbp,r8
  403301:	mov    rsi,rcx
  403304:	mov    rcx,r9
  403307:	mov    r12,rdx
  40330a:	call   0x402fd0
  40330f:	test   rbp,rbp
  403312:	mov    r13d,eax
  403315:	je     0x40331e
  403317:	mov    eax,DWORD PTR [rbp+0x8]
  40331a:	test   eax,eax
  40331c:	jne    0x403394
  40331e:	mov    r14d,DWORD PTR [rsi]
  403321:	mov    rcx,rsi
  403324:	mov    ebx,0x0
  403329:	call   0x415e40
  40332e:	test   eax,eax
  403330:	mov    rcx,rsi
  403333:	lea    edi,[r14-0x1]
  403337:	cmovns ebx,eax
  40333a:	mov    edx,ebx
  40333c:	mov    r8d,edi
  40333f:	call   0x415d10
  403344:	cmp    edi,ebx
  403346:	je     0x4033b0
  403348:	test   r14d,r14d
  40334b:	je     0x4033b0
  40334d:	movsxd rdi,edi
  403350:	mov    rdx,QWORD PTR [rsi+rdi*8+0x8]
  403355:	mov    rcx,QWORD PTR [rdx+0x2100]
  40335c:	mov    edx,ecx
  40335e:	imul   rcx,rax
  403362:	mov    DWORD PTR [rsp+0x30],edx
  403366:	mov    DWORD PTR [rsp+0x28],r13d
  40336b:	mov    QWORD PTR [rsp+0x20],r12
  403370:	mov    r9,rbp
  403373:	mov    r8d,ebx
  403376:	xor    edx,edx
  403378:	mov    DWORD PTR [rsp+0x38],ecx
  40337c:	mov    rcx,rsi
  40337f:	call   0x4030c0
  403384:	nop
  403385:	add    rsp,0x40
  403389:	pop    rbx
  40338a:	pop    rsi
  40338b:	pop    rdi
  40338c:	pop    rbp
  40338d:	pop    r12
  40338f:	pop    r13
  403391:	pop    r14
  403393:	ret    
  403394:	lea    rdx,[rip+0x1d84c]        # 0x420be7
  40339b:	lea    rcx,[rip+0x1d7bd]        # 0x420b5f
  4033a2:	call   0x406300
  4033a7:	jmp    0x40331e
  4033ac:	nop    DWORD PTR [rax+0x0]
  4033b0:	mov    edx,0x1
  4033b5:	mov    ecx,0x1
  4033ba:	jmp    0x40335e
  4033bc:	nop    DWORD PTR [rax+0x0]
  4033c0:	push   rbp
  4033c1:	push   rdi
  4033c2:	push   rsi
  4033c3:	push   rbx
  4033c4:	sub    rsp,0x28
  4033c8:	test   rdx,rdx
  4033cb:	mov    rdi,rcx
  4033ce:	mov    rbp,rdx
  4033d1:	je     0x4033da
  4033d3:	mov    eax,DWORD PTR [rdx+0x8]
  4033d6:	test   eax,eax
  4033d8:	jne    0x403440
  4033da:	mov    rax,QWORD PTR [rdi+0x10]
  4033de:	xor    ebx,ebx
  4033e0:	test   rax,rax
  4033e3:	jne    0x403421
  4033e5:	jmp    0x403430
  4033e7:	nop    WORD PTR [rax+rax*1+0x0]
  4033f0:	mov    rsi,rbx
  4033f3:	shl    rsi,0x5
  4033f7:	add    rsi,QWORD PTR [rdi+0x20]
  4033fb:	mov    ecx,DWORD PTR [rsi]
  4033fd:	call   0x4053f0
  403402:	test   eax,eax
  403404:	je     0x403455
  403406:	xor    r8d,r8d
  403409:	mov    rdx,rbp
  40340c:	mov    rcx,rsi
  40340f:	call   0x403010
  403414:	mov    rax,QWORD PTR [rdi+0x10]
  403418:	add    rbx,0x1
  40341c:	cmp    rbx,rax
  40341f:	jae    0x403430
  403421:	cmp    rax,rbx
  403424:	ja     0x4033f0
  403426:	mov    eax,DWORD PTR ds:0x0
  40342d:	ud2    
  40342f:	nop
  403430:	add    rsp,0x28
  403434:	pop    rbx
  403435:	pop    rsi
  403436:	pop    rdi
  403437:	pop    rbp
  403438:	ret    
  403439:	nop    DWORD PTR [rax+0x0]
  403440:	lea    rdx,[rip+0x1d7a0]        # 0x420be7
  403447:	lea    rcx,[rip+0x1d711]        # 0x420b5f
  40344e:	call   0x406300
  403453:	jmp    0x4033da
  403455:	mov    ecx,DWORD PTR [rsi+0x4]
  403458:	lea    rdx,[rip+0x1d7a1]        # 0x420c00
  40345f:	add    rsp,0x28
  403463:	pop    rbx
  403464:	pop    rsi
  403465:	pop    rdi
  403466:	pop    rbp
  403467:	jmp    0x40b520
  40346c:	nop    DWORD PTR [rax+0x0]
  403470:	jmp    0x4033c0
  403475:	nop
  403476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403480:	push   r15
  403482:	push   r14
  403484:	push   r13
  403486:	push   r12
  403488:	push   rbp
  403489:	push   rdi
  40348a:	push   rsi
  40348b:	push   rbx
  40348c:	sub    rsp,0x38
  403490:	mov    edi,DWORD PTR [rcx]
  403492:	mov    rbx,rcx
  403495:	mov    rcx,QWORD PTR [rsp+0xa0]
  40349d:	mov    rsi,r9
  4034a0:	movsxd rbp,edx
  4034a3:	mov    r12,r8
  4034a6:	call   0x402fd0
  4034ab:	test   rsi,rsi
  4034ae:	mov    r13d,eax
  4034b1:	je     0x4034be
  4034b3:	mov    eax,DWORD PTR [rsi+0x8]
  4034b6:	test   eax,eax
  4034b8:	jne    0x403585
  4034be:	lea    r9d,[rdi-0x1]
  4034c2:	mov    edx,ebp
  4034c4:	mov    rcx,rbx
  4034c7:	mov    r14d,0x1
  4034cd:	mov    r8d,r9d
  4034d0:	mov    DWORD PTR [rsp+0x2c],r9d
  4034d5:	call   0x415d10
  4034da:	test   edi,edi
  4034dc:	mov    QWORD PTR [rsp+0x20],rax
  4034e1:	movsxd r9,DWORD PTR [rsp+0x2c]
  4034e6:	je     0x40350b
  4034e8:	cmp    r9d,ebp
  4034eb:	je     0x40359d
  4034f1:	mov    rax,QWORD PTR [rbx+r9*8+0x8]
  4034f6:	mov    r14,QWORD PTR [rax+0x2100]
  4034fd:	mov    rax,QWORD PTR [rsp+0x20]
  403502:	imul   rax,r14
  403506:	mov    QWORD PTR [rsp+0x20],rax
  40350b:	cmp    QWORD PTR [r12+0x10],0x0
  403511:	je     0x403530
  403513:	mov    ebx,0x0
  403518:	ja     0x4035dd
  40351e:	mov    eax,DWORD PTR ds:0x0
  403525:	ud2    
  403527:	nop    WORD PTR [rax+rax*1+0x0]
  403530:	test   rsi,rsi
  403533:	je     0x403574
  403535:	mov    eax,DWORD PTR [rsi+0x8]
  403538:	test   eax,eax
  40353a:	je     0x403574
  40353c:	cmp    QWORD PTR [rsp+0x20],rax
  403541:	jb     0x4035b9
  403543:	mov    r15,QWORD PTR [rsp+0x20]
  403548:	xor    edx,edx
  40354a:	div    r15
  40354d:	test   rdx,rdx
  403550:	je     0x403574
  403552:	sub    r15,rdx
  403555:	je     0x403574
  403557:	movsx  r13d,r13b
  40355b:	xor    ebx,ebx
  40355d:	nop    DWORD PTR [rax]
  403560:	mov    edx,r13d
  403563:	mov    rcx,rsi
  403566:	add    rbx,0x1
  40356a:	call   0x416110
  40356f:	cmp    rbx,r15
  403572:	jne    0x403560
  403574:	add    rsp,0x38
  403578:	pop    rbx
  403579:	pop    rsi
  40357a:	pop    rdi
  40357b:	pop    rbp
  40357c:	pop    r12
  40357e:	pop    r13
  403580:	pop    r14
  403582:	pop    r15
  403584:	ret    
  403585:	lea    rdx,[rip+0x1d65b]        # 0x420be7
  40358c:	lea    rcx,[rip+0x1d5cc]        # 0x420b5f
  403593:	call   0x406300
  403598:	jmp    0x4034be
  40359d:	mov    rax,QWORD PTR [rbx+rbp*8+0x8]
  4035a2:	mov    rbx,QWORD PTR [rsp+0x20]
  4035a7:	imul   rbx,QWORD PTR [rax+0x2100]
  4035af:	mov    QWORD PTR [rsp+0x20],rbx
  4035b4:	jmp    0x40350b
  4035b9:	mov    rax,QWORD PTR [r12+0x20]
  4035be:	lea    rdx,[rip+0x1d605]        # 0x420bca
  4035c5:	mov    ecx,DWORD PTR [rax+0x4]
  4035c8:	add    rsp,0x38
  4035cc:	pop    rbx
  4035cd:	pop    rsi
  4035ce:	pop    rdi
  4035cf:	pop    rbp
  4035d0:	pop    r12
  4035d2:	pop    r13
  4035d4:	pop    r14
  4035d6:	pop    r15
  4035d8:	jmp    0x40b4a0
  4035dd:	movsx  ebp,r13b
  4035e1:	jmp    0x403601
  4035e3:	mov    ecx,DWORD PTR [rdi+0x4]
  4035e6:	lea    rdx,[rip+0x1d59b]        # 0x420b88
  4035ed:	call   0x40b4a0
  4035f2:	add    rbx,0x1
  4035f6:	cmp    QWORD PTR [r12+0x10],rbx
  4035fb:	jbe    0x403530
  403601:	mov    rdi,rbx
  403604:	shl    rdi,0x5
  403608:	add    rdi,QWORD PTR [r12+0x20]
  40360d:	je     0x40351e
  403613:	mov    ecx,DWORD PTR [rdi]
  403615:	cmp    ecx,0x10
  403618:	je     0x403665
  40361a:	call   0x4053f0
  40361f:	test   eax,eax
  403621:	je     0x4035e3
  403623:	mov    rdx,rsi
  403626:	mov    r8d,r13d
  403629:	mov    rcx,rdi
  40362c:	call   0x403010
  403631:	xor    edx,edx
  403633:	test   rax,rax
  403636:	je     0x403640
  403638:	div    r14
  40363b:	test   rdx,rdx
  40363e:	je     0x4035f2
  403640:	mov    rdi,r14
  403643:	sub    rdi,rdx
  403646:	je     0x4035f2
  403648:	xor    r15d,r15d
  40364b:	nop    DWORD PTR [rax+rax*1+0x0]
  403650:	mov    edx,ebp
  403652:	mov    rcx,rsi
  403655:	add    r15,0x1
  403659:	call   0x416110
  40365e:	cmp    r15,rdi
  403661:	jne    0x403650
  403663:	jmp    0x4035f2
  403665:	lea    rcx,[rip+0x1d4f3]        # 0x420b5f
  40366c:	lea    rdx,[rip+0x1d502]        # 0x420b75
  403673:	call   0x406300
  403678:	mov    ecx,DWORD PTR [rdi]
  40367a:	jmp    0x40361a
  40367c:	nop
  40367d:	nop
  40367e:	nop
  40367f:	nop
  403680:	push   r12
  403682:	push   rbp
  403683:	push   rdi
  403684:	push   rsi
  403685:	push   rbx
  403686:	sub    rsp,0x60
  40368a:	mov    r8d,DWORD PTR [rcx]
  40368d:	mov    eax,DWORD PTR [rcx+0x4]
  403690:	mov    rsi,rcx
  403693:	mov    rbx,rdx
  403696:	cmp    r8d,0x1f
  40369a:	mov    DWORD PTR [rdx+0x4],eax
  40369d:	je     0x403770
  4036a3:	cmp    r8d,0x69
  4036a7:	je     0x403820
  4036ad:	mov    edi,DWORD PTR [rdx]
  4036af:	cmp    edi,0x69
  4036b2:	je     0x403965
  4036b8:	xor    ebp,ebp
  4036ba:	cmp    r8d,0xe
  4036be:	je     0x403980
  4036c4:	shl    r8d,0x8
  4036c8:	add    r8d,edi
  4036cb:	cmp    r8d,0x707
  4036d2:	je     0x404989
  4036d8:	jg     0x403790
  4036de:	cmp    r8d,0x403
  4036e5:	je     0x404a82
  4036eb:	jle    0x4038b5
  4036f1:	cmp    r8d,0x50b
  4036f8:	je     0x404968
  4036fe:	jg     0x403a01
  403704:	cmp    r8d,0x40c
  40370b:	je     0x404886
  403711:	jle    0x403b90
  403717:	cmp    r8d,0x506
  40371e:	je     0x404ce5
  403724:	jg     0x403f20
  40372a:	cmp    r8d,0x503
  403731:	je     0x404771
  403737:	jle    0x404756
  40373d:	cmp    r8d,0x504
  403744:	je     0x404b8b
  40374a:	cmp    r8d,0x505
  403751:	jne    0x403cc0
  403757:	movss  xmm0,DWORD PTR [rsi+0x8]
  40375c:	movss  DWORD PTR [rsp+0x50],xmm0
  403762:	jmp    0x403924
  403767:	nop    WORD PTR [rax+rax*1+0x0]
  403770:	cmp    DWORD PTR [rdx],0x1f
  403773:	je     0x40377e
  403775:	mov    rcx,rdx
  403778:	call   0x40bac0
  40377d:	nop
  40377e:	add    rsp,0x60
  403782:	pop    rbx
  403783:	pop    rsi
  403784:	pop    rdi
  403785:	pop    rbp
  403786:	pop    r12
  403788:	ret    
  403789:	nop    DWORD PTR [rax+0x0]
  403790:	cmp    r8d,0xa0c
  403797:	je     0x404a8f
  40379d:	jg     0x403842
  4037a3:	cmp    r8d,0x904
  4037aa:	je     0x404904
  4037b0:	jg     0x403ad0
  4037b6:	cmp    r8d,0x805
  4037bd:	je     0x404ba7
  4037c3:	jle    0x403c30
  4037c9:	cmp    r8d,0x80a
  4037d0:	je     0x4049cf
  4037d6:	jg     0x403ff0
  4037dc:	cmp    r8d,0x807
  4037e3:	je     0x404397
  4037e9:	jl     0x404380
  4037ef:	cmp    r8d,0x808
  4037f6:	je     0x4048f6
  4037fc:	cmp    r8d,0x809
  403803:	jne    0x403cc0
  403809:	movzx  eax,WORD PTR [rsi+0x8]
  40380d:	mov    DWORD PTR [rsp+0x50],eax
  403811:	jmp    0x403924
  403816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403820:	cmp    DWORD PTR [rdx],0x69
  403823:	je     0x403950
  403829:	mov    rcx,QWORD PTR [rcx+0x8]
  40382d:	add    rcx,0x68
  403831:	call   0x403680
  403836:	nop
  403837:	add    rsp,0x60
  40383b:	pop    rbx
  40383c:	pop    rsi
  40383d:	pop    rdi
  40383e:	pop    rbp
  40383f:	pop    r12
  403841:	ret    
  403842:	cmp    r8d,0xc08
  403849:	je     0x404bd8
  40384f:	jg     0x403a61
  403855:	cmp    r8d,0xb0a
  40385c:	je     0x404c9c
  403862:	jle    0x403b40
  403868:	cmp    r8d,0xc03
  40386f:	je     0x404d46
  403875:	jg     0x403fa4
  40387b:	cmp    r8d,0xb0c
  403882:	je     0x404310
  403888:	jl     0x404302
  40388e:	cmp    r8d,0xc01
  403895:	je     0x404bbe
  40389b:	cmp    r8d,0xc02
  4038a2:	jne    0x403cc0
  4038a8:	mov    rax,QWORD PTR [rsi+0x10]
  4038ac:	movzx  eax,BYTE PTR [rax]
  4038af:	mov    BYTE PTR [rsp+0x50],al
  4038b3:	jmp    0x403924
  4038b5:	cmp    r8d,0x206
  4038bc:	je     0x4043a4
  4038c2:	jg     0x4039a0
  4038c8:	cmp    r8d,0x109
  4038cf:	je     0x403e00
  4038d5:	jg     0x403e10
  4038db:	cmp    r8d,0x104
  4038e2:	je     0x40445c
  4038e8:	jle    0x404107
  4038ee:	cmp    r8d,0x106
  4038f5:	je     0x404cce
  4038fb:	jl     0x404cb7
  403901:	cmp    r8d,0x107
  403908:	je     0x404caa
  40390e:	cmp    r8d,0x108
  403915:	jne    0x403cc0
  40391b:	movzx  eax,BYTE PTR [rsi+0x8]
  40391f:	mov    WORD PTR [rsp+0x50],ax
  403924:	test   rbp,rbp
  403927:	je     0x403931
  403929:	mov    rcx,rbp
  40392c:	call   0x4062e0
  403931:	mov    rax,QWORD PTR [rsp+0x50]
  403936:	mov    rdx,QWORD PTR [rsp+0x58]
  40393b:	mov    QWORD PTR [rbx+0x8],rax
  40393f:	mov    QWORD PTR [rbx+0x10],rdx
  403943:	add    rsp,0x60
  403947:	pop    rbx
  403948:	pop    rsi
  403949:	pop    rdi
  40394a:	pop    rbp
  40394b:	pop    r12
  40394d:	ret    
  40394e:	xchg   ax,ax
  403950:	mov    rax,QWORD PTR [rcx+0x8]
  403954:	mov    rdx,QWORD PTR [rcx+0x10]
  403958:	mov    QWORD PTR [rbx+0x8],rax
  40395c:	mov    QWORD PTR [rbx+0x10],rdx
  403960:	jmp    0x40377e
  403965:	mov    rax,QWORD PTR [rip+0x27e34]        # 0x42b7a0
  40396c:	lea    rdx,[rip+0x1d2cd]        # 0x420c40
  403973:	mov    ecx,DWORD PTR [rax]
  403975:	call   0x40b520
  40397a:	jmp    0x40377e
  40397f:	nop
  403980:	mov    rcx,QWORD PTR [rcx+0x10]
  403984:	lea    rdx,[rsp+0x48]
  403989:	call   0x415a10
  40398e:	mov    r8d,DWORD PTR [rsi]
  403991:	mov    rbp,rax
  403994:	mov    edi,DWORD PTR [rbx]
  403996:	jmp    0x4036c4
  40399b:	nop    DWORD PTR [rax+rax*1+0x0]
  4039a0:	cmp    r8d,0x304
  4039a7:	je     0x404828
  4039ad:	jle    0x403be0
  4039b3:	cmp    r8d,0x309
  4039ba:	je     0x4044e1
  4039c0:	jg     0x403e70
  4039c6:	cmp    r8d,0x306
  4039cd:	je     0x4044ca
  4039d3:	jl     0x4044b3
  4039d9:	cmp    r8d,0x307
  4039e0:	je     0x4046a6
  4039e6:	cmp    r8d,0x308
  4039ed:	jne    0x403cc0
  4039f3:	movzx  eax,WORD PTR [rsi+0x8]
  4039f7:	mov    WORD PTR [rsp+0x50],ax
  4039fc:	jmp    0x403924
  403a01:	cmp    r8d,0x609
  403a08:	je     0x404835
  403a0e:	jle    0x403d00
  403a14:	cmp    r8d,0x702
  403a1b:	je     0x404996
  403a21:	jg     0x403f60
  403a27:	cmp    r8d,0x60b
  403a2e:	je     0x4042dc
  403a34:	jl     0x4042cc
  403a3a:	cmp    r8d,0x60c
  403a41:	je     0x4043bb
  403a47:	cmp    r8d,0x701
  403a4e:	jne    0x403cc0
  403a54:	movzx  eax,BYTE PTR [rsi+0x8]
  403a58:	mov    BYTE PTR [rsp+0x50],al
  403a5c:	jmp    0x403924
  403a61:	cmp    r8d,0xe05
  403a68:	je     0x4046b3
  403a6e:	jle    0x403c80
  403a74:	cmp    r8d,0xe0a
  403a7b:	je     0x40429e
  403a81:	jg     0x403eb0
  403a87:	cmp    r8d,0xe07
  403a8e:	je     0x404162
  403a94:	jl     0x404b0d
  403a9a:	cmp    r8d,0xe08
  403aa1:	je     0x4042b5
  403aa7:	cmp    r8d,0xe09
  403aae:	jne    0x403cc0
  403ab4:	test   rbp,rbp
  403ab7:	je     0x403931
  403abd:	mov    eax,DWORD PTR [rbp+0x0]
  403ac0:	mov    DWORD PTR [rsp+0x50],eax
  403ac4:	jmp    0x403929
  403ac9:	nop    DWORD PTR [rax+0x0]
  403ad0:	cmp    r8d,0xa01
  403ad7:	je     0x404b70
  403add:	jle    0x403d50
  403ae3:	cmp    r8d,0xa07
  403aea:	je     0x404a2b
  403af0:	jg     0x403ee2
  403af6:	cmp    r8d,0xa04
  403afd:	je     0x404749
  403b03:	jle    0x40472e
  403b09:	cmp    r8d,0xa05
  403b10:	je     0x4046cc
  403b16:	cmp    r8d,0xa06
  403b1d:	jne    0x403cc0
  403b23:	pxor   xmm0,xmm0
  403b27:	cvtsi2sd xmm0,QWORD PTR [rsi+0x8]
  403b2d:	movsd  QWORD PTR [rsp+0x50],xmm0
  403b33:	jmp    0x403924
  403b38:	nop    DWORD PTR [rax+rax*1+0x0]
  403b40:	cmp    r8d,0xb05
  403b47:	je     0x404486
  403b4d:	jle    0x40423d
  403b53:	cmp    r8d,0xb07
  403b5a:	je     0x40493f
  403b60:	jl     0x40491e
  403b66:	cmp    r8d,0xb08
  403b6d:	je     0x404910
  403b73:	cmp    r8d,0xb09
  403b7a:	jne    0x403cc0
  403b80:	mov    rax,QWORD PTR [rsi+0x8]
  403b84:	mov    DWORD PTR [rsp+0x50],eax
  403b88:	jmp    0x403924
  403b8d:	nop    DWORD PTR [rax]
  403b90:	cmp    r8d,0x407
  403b97:	je     0x4044a7
  403b9d:	jle    0x40426a
  403ba3:	cmp    r8d,0x409
  403baa:	je     0x40485f
  403bb0:	jl     0x404852
  403bb6:	cmp    r8d,0x40a
  403bbd:	je     0x404844
  403bc3:	cmp    r8d,0x40b
  403bca:	jne    0x403cc0
  403bd0:	movsxd rax,DWORD PTR [rsi+0x8]
  403bd4:	mov    QWORD PTR [rsp+0x50],rax
  403bd9:	jmp    0x403924
  403bde:	xchg   ax,ax
  403be0:	cmp    r8d,0x20a
  403be7:	je     0x404477
  403bed:	jle    0x40421d
  403bf3:	cmp    r8d,0x20c
  403bfa:	je     0x404c0e
  403c00:	jl     0x404bff
  403c06:	cmp    r8d,0x301
  403c0d:	je     0x404bf2
  403c13:	cmp    r8d,0x303
  403c1a:	jne    0x403cc0
  403c20:	movzx  eax,WORD PTR [rsi+0x8]
  403c24:	mov    WORD PTR [rsp+0x50],ax
  403c29:	jmp    0x403924
  403c2e:	xchg   ax,ax
  403c30:	cmp    r8d,0x70b
  403c37:	je     0x404aff
  403c3d:	jle    0x404134
  403c43:	cmp    r8d,0x801
  403c4a:	je     0x40467e
  403c50:	jle    0x404600
  403c56:	cmp    r8d,0x803
  403c5d:	je     0x404b7d
  403c63:	cmp    r8d,0x804
  403c6a:	jne    0x403cc0
  403c6c:	movzx  eax,WORD PTR [rsi+0x8]
  403c70:	mov    DWORD PTR [rsp+0x50],eax
  403c74:	jmp    0x403924
  403c79:	nop    DWORD PTR [rax+0x0]
  403c80:	cmp    r8d,0xc0c
  403c87:	je     0x404545
  403c8d:	jle    0x40402a
  403c93:	cmp    r8d,0xe02
  403c9a:	je     0x404162
  403ca0:	jle    0x404155
  403ca6:	cmp    r8d,0xe03
  403cad:	je     0x4042b5
  403cb3:	cmp    r8d,0xe04
  403cba:	je     0x403ab4
  403cc0:	mov    ecx,edi
  403cc2:	call   0x4156c0
  403cc7:	mov    esi,DWORD PTR [rsi]
  403cc9:	mov    r12,rax
  403ccc:	mov    ecx,esi
  403cce:	call   0x4156c0
  403cd3:	mov    r8,rax
  403cd6:	mov    rax,QWORD PTR [rip+0x27ac3]        # 0x42b7a0
  403cdd:	mov    DWORD PTR [rsp+0x28],edi
  403ce1:	mov    QWORD PTR [rsp+0x20],r12
  403ce6:	lea    rdx,[rip+0x1cfab]        # 0x420c98
  403ced:	mov    r9d,esi
  403cf0:	mov    ecx,DWORD PTR [rax]
  403cf2:	call   0x40b520
  403cf7:	jmp    0x403924
  403cfc:	nop    DWORD PTR [rax+0x0]
  403d00:	cmp    r8d,0x604
  403d07:	je     0x404469
  403d0d:	jle    0x404178
  403d13:	cmp    r8d,0x606
  403d1a:	je     0x404b60
  403d20:	jl     0x404b26
  403d26:	cmp    r8d,0x607
  403d2d:	je     0x404b99
  403d33:	cmp    r8d,0x608
  403d3a:	jne    0x403cc0
  403d3c:	cvttsd2si eax,QWORD PTR [rsi+0x8]
  403d41:	mov    WORD PTR [rsp+0x50],ax
  403d46:	jmp    0x403924
  403d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d50:	cmp    r8d,0x908
  403d57:	je     0x404442
  403d5d:	jle    0x404057
  403d63:	cmp    r8d,0x90a
  403d6a:	je     0x4046ed
  403d70:	jl     0x4046e1
  403d76:	cmp    r8d,0x90b
  403d7d:	je     0x404435
  403d83:	cmp    r8d,0x90c
  403d8a:	jne    0x403cc0
  403d90:	mov    r8d,DWORD PTR [rsi+0x8]
  403d94:	lea    rdx,[rip+0x1ceda]        # 0x420c75
  403d9b:	lea    rcx,[rip+0x2d2de]        # 0x431080
  403da2:	call   0x41db80
  403da7:	lea    r8,[rip+0x2d2d2]        # 0x431080
  403dae:	mov    rdx,r8
  403db1:	mov    ecx,DWORD PTR [rdx]
  403db3:	add    rdx,0x4
  403db7:	lea    eax,[rcx-0x1010101]
  403dbd:	not    ecx
  403dbf:	and    eax,ecx
  403dc1:	and    eax,0x80808080
  403dc6:	je     0x403db1
  403dc8:	mov    ecx,eax
  403dca:	shr    ecx,0x10
  403dcd:	test   eax,0x8080
  403dd2:	cmove  eax,ecx
  403dd5:	lea    rcx,[rdx+0x2]
  403dd9:	cmove  rdx,rcx
  403ddd:	add    al,al
  403ddf:	lea    rcx,[rip+0x2d29a]        # 0x431080
  403de6:	sbb    rdx,0x3
  403dea:	sub    rdx,r8
  403ded:	mov    DWORD PTR [rsp+0x50],edx
  403df1:	call   0x41db10
  403df6:	mov    QWORD PTR [rsp+0x58],rax
  403dfb:	jmp    0x403924
  403e00:	movzx  eax,BYTE PTR [rsi+0x8]
  403e04:	mov    DWORD PTR [rsp+0x50],eax
  403e08:	jmp    0x403924
  403e0d:	nop    DWORD PTR [rax]
  403e10:	cmp    r8d,0x201
  403e17:	je     0x40444f
  403e1d:	jle    0x404076
  403e23:	cmp    r8d,0x203
  403e2a:	je     0x404508
  403e30:	jl     0x4044fb
  403e36:	cmp    r8d,0x204
  403e3d:	je     0x4044ee
  403e43:	cmp    r8d,0x205
  403e4a:	jne    0x403cc0
  403e50:	movsx  eax,BYTE PTR [rsi+0x8]
  403e54:	pxor   xmm0,xmm0
  403e58:	cvtsi2ss xmm0,eax
  403e5c:	movss  DWORD PTR [rsp+0x50],xmm0
  403e62:	jmp    0x403924
  403e67:	nop    WORD PTR [rax+rax*1+0x0]
  403e70:	cmp    r8d,0x30b
  403e77:	je     0x404da1
  403e7d:	jl     0x404d92
  403e83:	cmp    r8d,0x30c
  403e8a:	je     0x4047b7
  403e90:	cmp    r8d,0x401
  403e97:	jne    0x403cc0
  403e9d:	mov    eax,DWORD PTR [rsi+0x8]
  403ea0:	mov    BYTE PTR [rsp+0x50],al
  403ea4:	jmp    0x403924
  403ea9:	nop    DWORD PTR [rax+0x0]
  403eb0:	cmp    r8d,0xe0e
  403eb7:	je     0x404a4e
  403ebd:	jle    0x404291
  403ec3:	cmp    r8d,0x200c
  403eca:	je     0x404a38
  403ed0:	cmp    r8d,0x2020
  403ed7:	je     0x403924
  403edd:	jmp    0x403cc0
  403ee2:	cmp    r8d,0xa09
  403ee9:	je     0x404d39
  403eef:	jl     0x404d2b
  403ef5:	cmp    r8d,0xa0a
  403efc:	je     0x404d1d
  403f02:	cmp    r8d,0xa0b
  403f09:	jne    0x403cc0
  403f0f:	mov    rax,QWORD PTR [rsi+0x8]
  403f13:	mov    QWORD PTR [rsp+0x50],rax
  403f18:	jmp    0x403924
  403f1d:	nop    DWORD PTR [rax]
  403f20:	cmp    r8d,0x508
  403f27:	je     0x4049c0
  403f2d:	jl     0x4049b2
  403f33:	cmp    r8d,0x509
  403f3a:	je     0x4049a3
  403f40:	cmp    r8d,0x50a
  403f47:	jne    0x403cc0
  403f4d:	cvttss2si rax,DWORD PTR [rsi+0x8]
  403f53:	mov    QWORD PTR [rsp+0x50],rax
  403f58:	jmp    0x403924
  403f5d:	nop    DWORD PTR [rax]
  403f60:	cmp    r8d,0x704
  403f67:	je     0x404d85
  403f6d:	jl     0x404d77
  403f73:	cmp    r8d,0x705
  403f7a:	je     0x404d60
  403f80:	cmp    r8d,0x706
  403f87:	jne    0x403cc0
  403f8d:	movzx  eax,BYTE PTR [rsi+0x8]
  403f91:	pxor   xmm0,xmm0
  403f95:	cvtsi2sd xmm0,eax
  403f99:	movsd  QWORD PTR [rsp+0x50],xmm0
  403f9f:	jmp    0x403924
  403fa4:	cmp    r8d,0xc05
  403fab:	je     0x404a11
  403fb1:	jl     0x4049f7
  403fb7:	cmp    r8d,0xc06
  403fbe:	je     0x4049dd
  403fc4:	cmp    r8d,0xc07
  403fcb:	jne    0x403cc0
  403fd1:	mov    rcx,QWORD PTR [rsi+0x10]
  403fd5:	lea    r8,[rsp+0x50]
  403fda:	lea    rdx,[rip+0x1cc8b]        # 0x420c6c
  403fe1:	call   0x41db78
  403fe6:	jmp    0x403924
  403feb:	nop    DWORD PTR [rax+rax*1+0x0]
  403ff0:	cmp    r8d,0x80c
  403ff7:	je     0x40458f
  403ffd:	jl     0x404581
  404003:	cmp    r8d,0x901
  40400a:	je     0x404575
  404010:	cmp    r8d,0x903
  404017:	jne    0x403cc0
  40401d:	mov    eax,DWORD PTR [rsi+0x8]
  404020:	mov    WORD PTR [rsp+0x50],ax
  404025:	jmp    0x403924
  40402a:	cmp    r8d,0xc0a
  404031:	je     0x404714
  404037:	jle    0x4046fa
  40403d:	mov    rcx,QWORD PTR [rsi+0x10]
  404041:	lea    r8,[rsp+0x50]
  404046:	lea    rdx,[rip+0x1cc2b]        # 0x420c78
  40404d:	call   0x41db78
  404052:	jmp    0x403924
  404057:	cmp    r8d,0x906
  40405e:	je     0x40452e
  404064:	jle    0x404517
  40406a:	mov    eax,DWORD PTR [rsi+0x8]
  40406d:	mov    BYTE PTR [rsp+0x50],al
  404071:	jmp    0x403924
  404076:	cmp    r8d,0x10b
  40407d:	je     0x40478e
  404083:	jl     0x404780
  404089:	cmp    r8d,0x10c
  404090:	jne    0x403cc0
  404096:	movzx  r8d,BYTE PTR [rsi+0x8]
  40409b:	lea    rdx,[rip+0x1cbc5]        # 0x420c67
  4040a2:	lea    rcx,[rip+0x2cfd7]        # 0x431080
  4040a9:	call   0x41db80
  4040ae:	lea    r8,[rip+0x2cfcb]        # 0x431080
  4040b5:	mov    rdx,r8
  4040b8:	mov    ecx,DWORD PTR [rdx]
  4040ba:	add    rdx,0x4
  4040be:	lea    eax,[rcx-0x1010101]
  4040c4:	not    ecx
  4040c6:	and    eax,ecx
  4040c8:	and    eax,0x80808080
  4040cd:	je     0x4040b8
  4040cf:	mov    ecx,eax
  4040d1:	shr    ecx,0x10
  4040d4:	test   eax,0x8080
  4040d9:	cmove  eax,ecx
  4040dc:	lea    rcx,[rdx+0x2]
  4040e0:	cmove  rdx,rcx
  4040e4:	add    al,al
  4040e6:	lea    rcx,[rip+0x2cf93]        # 0x431080
  4040ed:	sbb    rdx,0x3
  4040f1:	sub    rdx,r8
  4040f4:	mov    DWORD PTR [rsp+0x50],edx
  4040f8:	call   0x41db10
  4040fd:	mov    QWORD PTR [rsp+0x58],rax
  404102:	jmp    0x403924
  404107:	cmp    r8d,0x102
  40410e:	je     0x404699
  404114:	jg     0x40468b
  40411a:	cmp    r8d,0x101
  404121:	jne    0x403cc0
  404127:	movzx  eax,BYTE PTR [rsi+0x8]
  40412b:	mov    BYTE PTR [rsp+0x50],al
  40412f:	jmp    0x403924
  404134:	cmp    r8d,0x709
  40413b:	je     0x4047aa
  404141:	jle    0x40479c
  404147:	movzx  eax,BYTE PTR [rsi+0x8]
  40414b:	mov    QWORD PTR [rsp+0x50],rax
  404150:	jmp    0x403924
  404155:	cmp    r8d,0xe01
  40415c:	jne    0x403cc0
  404162:	test   rbp,rbp
  404165:	je     0x403931
  40416b:	movzx  eax,BYTE PTR [rbp+0x0]
  40416f:	mov    BYTE PTR [rsp+0x50],al
  404173:	jmp    0x403929
  404178:	cmp    r8d,0x601
  40417f:	je     0x404c8e
  404185:	cmp    r8d,0x603
  40418c:	je     0x404c7f
  404192:	cmp    r8d,0x50c
  404199:	jne    0x403cc0
  40419f:	pxor   xmm0,xmm0
  4041a3:	lea    rdx,[rip+0x1cae9]        # 0x420c93
  4041aa:	lea    rcx,[rip+0x2cecf]        # 0x431080
  4041b1:	cvtss2sd xmm0,DWORD PTR [rsi+0x8]
  4041b6:	movq   r8,xmm0
  4041bb:	movapd xmm2,xmm0
  4041bf:	call   0x41db80
  4041c4:	lea    r8,[rip+0x2ceb5]        # 0x431080
  4041cb:	mov    rdx,r8
  4041ce:	mov    ecx,DWORD PTR [rdx]
  4041d0:	add    rdx,0x4
  4041d4:	lea    eax,[rcx-0x1010101]
  4041da:	not    ecx
  4041dc:	and    eax,ecx
  4041de:	and    eax,0x80808080
  4041e3:	je     0x4041ce
  4041e5:	mov    ecx,eax
  4041e7:	shr    ecx,0x10
  4041ea:	test   eax,0x8080
  4041ef:	cmove  eax,ecx
  4041f2:	lea    rcx,[rdx+0x2]
  4041f6:	cmove  rdx,rcx
  4041fa:	add    al,al
  4041fc:	lea    rcx,[rip+0x2ce7d]        # 0x431080
  404203:	sbb    rdx,0x3
  404207:	sub    rdx,r8
  40420a:	mov    DWORD PTR [rsp+0x50],edx
  40420e:	call   0x41db10
  404213:	mov    QWORD PTR [rsp+0x58],rax
  404218:	jmp    0x403924
  40421d:	cmp    r8d,0x208
  404224:	je     0x404959
  40422a:	jle    0x40494c
  404230:	movsx  eax,BYTE PTR [rsi+0x8]
  404234:	mov    DWORD PTR [rsp+0x50],eax
  404238:	jmp    0x403924
  40423d:	cmp    r8d,0xb03
  404244:	je     0x404878
  40424a:	jg     0x40486b
  404250:	cmp    r8d,0xb01
  404257:	jne    0x403cc0
  40425d:	mov    rax,QWORD PTR [rsi+0x8]
  404261:	mov    BYTE PTR [rsp+0x50],al
  404265:	jmp    0x403924
  40426a:	cmp    r8d,0x405
  404271:	je     0x404dbc
  404277:	jle    0x404db0
  40427d:	pxor   xmm0,xmm0
  404281:	cvtsi2sd xmm0,DWORD PTR [rsi+0x8]
  404286:	movsd  QWORD PTR [rsp+0x50],xmm0
  40428c:	jmp    0x403924
  404291:	cmp    r8d,0xe0b
  404298:	jne    0x403cc0
  40429e:	test   rbp,rbp
  4042a1:	je     0x403931
  4042a7:	mov    rax,QWORD PTR [rbp+0x0]
  4042ab:	mov    QWORD PTR [rsp+0x50],rax
  4042b0:	jmp    0x403929
  4042b5:	test   rbp,rbp
  4042b8:	je     0x403931
  4042be:	movzx  eax,WORD PTR [rbp+0x0]
  4042c2:	mov    WORD PTR [rsp+0x50],ax
  4042c7:	jmp    0x403929
  4042cc:	cvttsd2si rax,QWORD PTR [rsi+0x8]
  4042d2:	mov    QWORD PTR [rsp+0x50],rax
  4042d7:	jmp    0x403924
  4042dc:	movsd  xmm1,QWORD PTR [rip+0x1c9f4]        # 0x420cd8
  4042e4:	movsd  xmm0,QWORD PTR [rsi+0x8]
  4042e9:	ucomisd xmm0,xmm1
  4042ed:	jae    0x404dd0
  4042f3:	cvttsd2si rax,xmm0
  4042f8:	mov    QWORD PTR [rsp+0x50],rax
  4042fd:	jmp    0x403924
  404302:	mov    rax,QWORD PTR [rsi+0x8]
  404306:	mov    QWORD PTR [rsp+0x50],rax
  40430b:	jmp    0x403924
  404310:	mov    r8,QWORD PTR [rsi+0x8]
  404314:	lea    rdx,[rip+0x1c95d]        # 0x420c78
  40431b:	lea    rcx,[rip+0x2cd5e]        # 0x431080
  404322:	call   0x41db80
  404327:	lea    r8,[rip+0x2cd52]        # 0x431080
  40432e:	mov    rdx,r8
  404331:	mov    ecx,DWORD PTR [rdx]
  404333:	add    rdx,0x4
  404337:	lea    eax,[rcx-0x1010101]
  40433d:	not    ecx
  40433f:	and    eax,ecx
  404341:	and    eax,0x80808080
  404346:	je     0x404331
  404348:	mov    ecx,eax
  40434a:	shr    ecx,0x10
  40434d:	test   eax,0x8080
  404352:	cmove  eax,ecx
  404355:	lea    rcx,[rdx+0x2]
  404359:	cmove  rdx,rcx
  40435d:	add    al,al
  40435f:	lea    rcx,[rip+0x2cd1a]        # 0x431080
  404366:	sbb    rdx,0x3
  40436a:	sub    rdx,r8
  40436d:	mov    DWORD PTR [rsp+0x50],edx
  404371:	call   0x41db10
  404376:	mov    QWORD PTR [rsp+0x58],rax
  40437b:	jmp    0x403924
  404380:	movzx  eax,WORD PTR [rsi+0x8]
  404384:	pxor   xmm0,xmm0
  404388:	cvtsi2sd xmm0,eax
  40438c:	movsd  QWORD PTR [rsp+0x50],xmm0
  404392:	jmp    0x403924
  404397:	movzx  eax,WORD PTR [rsi+0x8]
  40439b:	mov    BYTE PTR [rsp+0x50],al
  40439f:	jmp    0x403924
  4043a4:	movsx  eax,BYTE PTR [rsi+0x8]
  4043a8:	pxor   xmm0,xmm0
  4043ac:	cvtsi2sd xmm0,eax
  4043b0:	movsd  QWORD PTR [rsp+0x50],xmm0
  4043b6:	jmp    0x403924
  4043bb:	movsd  xmm0,QWORD PTR [rsi+0x8]
  4043c0:	lea    rdx,[rip+0x1c8cc]        # 0x420c93
  4043c7:	lea    rcx,[rip+0x2ccb2]        # 0x431080
  4043ce:	movq   r8,xmm0
  4043d3:	movapd xmm2,xmm0
  4043d7:	call   0x41db80
  4043dc:	lea    r8,[rip+0x2cc9d]        # 0x431080
  4043e3:	mov    rdx,r8
  4043e6:	mov    ecx,DWORD PTR [rdx]
  4043e8:	add    rdx,0x4
  4043ec:	lea    eax,[rcx-0x1010101]
  4043f2:	not    ecx
  4043f4:	and    eax,ecx
  4043f6:	and    eax,0x80808080
  4043fb:	je     0x4043e6
  4043fd:	mov    ecx,eax
  4043ff:	shr    ecx,0x10
  404402:	test   eax,0x8080
  404407:	cmove  eax,ecx
  40440a:	lea    rcx,[rdx+0x2]
  40440e:	cmove  rdx,rcx
  404412:	add    al,al
  404414:	lea    rcx,[rip+0x2cc65]        # 0x431080
  40441b:	sbb    rdx,0x3
  40441f:	sub    rdx,r8
  404422:	mov    DWORD PTR [rsp+0x50],edx
  404426:	call   0x41db10
  40442b:	mov    QWORD PTR [rsp+0x58],rax
  404430:	jmp    0x403924
  404435:	mov    eax,DWORD PTR [rsi+0x8]
  404438:	mov    QWORD PTR [rsp+0x50],rax
  40443d:	jmp    0x403924
  404442:	mov    eax,DWORD PTR [rsi+0x8]
  404445:	mov    WORD PTR [rsp+0x50],ax
  40444a:	jmp    0x403924
  40444f:	movzx  eax,BYTE PTR [rsi+0x8]
  404453:	mov    BYTE PTR [rsp+0x50],al
  404457:	jmp    0x403924
  40445c:	movzx  eax,BYTE PTR [rsi+0x8]
  404460:	mov    DWORD PTR [rsp+0x50],eax
  404464:	jmp    0x403924
  404469:	cvttsd2si eax,QWORD PTR [rsi+0x8]
  40446e:	mov    DWORD PTR [rsp+0x50],eax
  404472:	jmp    0x403924
  404477:	movsx  rax,BYTE PTR [rsi+0x8]
  40447c:	mov    QWORD PTR [rsp+0x50],rax
  404481:	jmp    0x403924
  404486:	mov    rdx,QWORD PTR [rsi+0x8]
  40448a:	test   rdx,rdx
  40448d:	js     0x404e43
  404493:	pxor   xmm0,xmm0
  404497:	cvtsi2ss xmm0,rdx
  40449c:	movss  DWORD PTR [rsp+0x50],xmm0
  4044a2:	jmp    0x403924
  4044a7:	mov    eax,DWORD PTR [rsi+0x8]
  4044aa:	mov    BYTE PTR [rsp+0x50],al
  4044ae:	jmp    0x403924
  4044b3:	movsx  eax,WORD PTR [rsi+0x8]
  4044b7:	pxor   xmm0,xmm0
  4044bb:	cvtsi2ss xmm0,eax
  4044bf:	movss  DWORD PTR [rsp+0x50],xmm0
  4044c5:	jmp    0x403924
  4044ca:	movsx  eax,WORD PTR [rsi+0x8]
  4044ce:	pxor   xmm0,xmm0
  4044d2:	cvtsi2sd xmm0,eax
  4044d6:	movsd  QWORD PTR [rsp+0x50],xmm0
  4044dc:	jmp    0x403924
  4044e1:	movsx  eax,WORD PTR [rsi+0x8]
  4044e5:	mov    DWORD PTR [rsp+0x50],eax
  4044e9:	jmp    0x403924
  4044ee:	movsx  eax,BYTE PTR [rsi+0x8]
  4044f2:	mov    DWORD PTR [rsp+0x50],eax
  4044f6:	jmp    0x403924
  4044fb:	movzx  eax,BYTE PTR [rsi+0x8]
  4044ff:	mov    BYTE PTR [rsp+0x50],al
  404503:	jmp    0x403924
  404508:	movsx  ax,BYTE PTR [rsi+0x8]
  40450d:	mov    WORD PTR [rsp+0x50],ax
  404512:	jmp    0x403924
  404517:	mov    eax,DWORD PTR [rsi+0x8]
  40451a:	pxor   xmm0,xmm0
  40451e:	cvtsi2ss xmm0,rax
  404523:	movss  DWORD PTR [rsp+0x50],xmm0
  404529:	jmp    0x403924
  40452e:	mov    eax,DWORD PTR [rsi+0x8]
  404531:	pxor   xmm0,xmm0
  404535:	cvtsi2sd xmm0,rax
  40453a:	movsd  QWORD PTR [rsp+0x50],xmm0
  404540:	jmp    0x403924
  404545:	movsxd rdi,DWORD PTR [rsi+0x8]
  404549:	lea    ecx,[rdi+0x1]
  40454c:	mov    DWORD PTR [rsp+0x50],edi
  404550:	movsxd rcx,ecx
  404553:	call   0x41dbc8
  404558:	mov    rdx,QWORD PTR [rsi+0x10]
  40455c:	mov    r8,rdi
  40455f:	mov    rcx,rax
  404562:	mov    QWORD PTR [rsp+0x58],rax
  404567:	call   0x41dbc0
  40456c:	mov    BYTE PTR [rax+rdi*1],0x0
  404570:	jmp    0x403924
  404575:	mov    eax,DWORD PTR [rsi+0x8]
  404578:	mov    BYTE PTR [rsp+0x50],al
  40457c:	jmp    0x403924
  404581:	movzx  eax,WORD PTR [rsi+0x8]
  404585:	mov    QWORD PTR [rsp+0x50],rax
  40458a:	jmp    0x403924
  40458f:	movzx  r8d,WORD PTR [rsi+0x8]
  404594:	lea    rdx,[rip+0x1c6d6]        # 0x420c71
  40459b:	lea    rcx,[rip+0x2cade]        # 0x431080
  4045a2:	call   0x41db80
  4045a7:	lea    r8,[rip+0x2cad2]        # 0x431080
  4045ae:	mov    rdx,r8
  4045b1:	mov    ecx,DWORD PTR [rdx]
  4045b3:	add    rdx,0x4
  4045b7:	lea    eax,[rcx-0x1010101]
  4045bd:	not    ecx
  4045bf:	and    eax,ecx
  4045c1:	and    eax,0x80808080
  4045c6:	je     0x4045b1
  4045c8:	mov    ecx,eax
  4045ca:	shr    ecx,0x10
  4045cd:	test   eax,0x8080
  4045d2:	cmove  eax,ecx
  4045d5:	lea    rcx,[rdx+0x2]
  4045d9:	cmove  rdx,rcx
  4045dd:	add    al,al
  4045df:	lea    rcx,[rip+0x2ca9a]        # 0x431080
  4045e6:	sbb    rdx,0x3
  4045ea:	sub    rdx,r8
  4045ed:	mov    DWORD PTR [rsp+0x50],edx
  4045f1:	call   0x41db10
  4045f6:	mov    QWORD PTR [rsp+0x58],rax
  4045fb:	jmp    0x403924
  404600:	cmp    r8d,0x70c
  404607:	jne    0x403cc0
  40460d:	movzx  r8d,BYTE PTR [rsi+0x8]
  404612:	lea    rdx,[rip+0x1c653]        # 0x420c6c
  404619:	lea    rcx,[rip+0x2ca60]        # 0x431080
  404620:	call   0x41db80
  404625:	lea    r8,[rip+0x2ca54]        # 0x431080
  40462c:	mov    rdx,r8
  40462f:	mov    ecx,DWORD PTR [rdx]
  404631:	add    rdx,0x4
  404635:	lea    eax,[rcx-0x1010101]
  40463b:	not    ecx
  40463d:	and    eax,ecx
  40463f:	and    eax,0x80808080
  404644:	je     0x40462f
  404646:	mov    ecx,eax
  404648:	shr    ecx,0x10
  40464b:	test   eax,0x8080
  404650:	cmove  eax,ecx
  404653:	lea    rcx,[rdx+0x2]
  404657:	cmove  rdx,rcx
  40465b:	add    al,al
  40465d:	lea    rcx,[rip+0x2ca1c]        # 0x431080
  404664:	sbb    rdx,0x3
  404668:	sub    rdx,r8
  40466b:	mov    DWORD PTR [rsp+0x50],edx
  40466f:	call   0x41db10
  404674:	mov    QWORD PTR [rsp+0x58],rax
  404679:	jmp    0x403924
  40467e:	movzx  eax,WORD PTR [rsi+0x8]
  404682:	mov    BYTE PTR [rsp+0x50],al
  404686:	jmp    0x403924
  40468b:	movzx  eax,BYTE PTR [rsi+0x8]
  40468f:	mov    WORD PTR [rsp+0x50],ax
  404694:	jmp    0x403924
  404699:	movzx  eax,BYTE PTR [rsi+0x8]
  40469d:	mov    BYTE PTR [rsp+0x50],al
  4046a1:	jmp    0x403924
  4046a6:	movzx  eax,WORD PTR [rsi+0x8]
  4046aa:	mov    BYTE PTR [rsp+0x50],al
  4046ae:	jmp    0x403924
  4046b3:	test   rbp,rbp
  4046b6:	je     0x403931
  4046bc:	movss  xmm0,DWORD PTR [rbp+0x0]
  4046c1:	movss  DWORD PTR [rsp+0x50],xmm0
  4046c7:	jmp    0x403929
  4046cc:	pxor   xmm0,xmm0
  4046d0:	cvtsi2ss xmm0,QWORD PTR [rsi+0x8]
  4046d6:	movss  DWORD PTR [rsp+0x50],xmm0
  4046dc:	jmp    0x403924
  4046e1:	mov    eax,DWORD PTR [rsi+0x8]
  4046e4:	mov    DWORD PTR [rsp+0x50],eax
  4046e8:	jmp    0x403924
  4046ed:	mov    eax,DWORD PTR [rsi+0x8]
  4046f0:	mov    QWORD PTR [rsp+0x50],rax
  4046f5:	jmp    0x403924
  4046fa:	mov    rcx,QWORD PTR [rsi+0x10]
  4046fe:	lea    r8,[rsp+0x50]
  404703:	lea    rdx,[rip+0x1c56b]        # 0x420c75
  40470a:	call   0x41db78
  40470f:	jmp    0x403924
  404714:	mov    rcx,QWORD PTR [rsi+0x10]
  404718:	lea    r8,[rsp+0x50]
  40471d:	lea    rdx,[rip+0x1c560]        # 0x420c84
  404724:	call   0x41db78
  404729:	jmp    0x403924
  40472e:	cmp    r8d,0xa03
  404735:	jne    0x403cc0
  40473b:	mov    rax,QWORD PTR [rsi+0x8]
  40473f:	mov    WORD PTR [rsp+0x50],ax
  404744:	jmp    0x403924
  404749:	mov    rax,QWORD PTR [rsi+0x8]
  40474d:	mov    DWORD PTR [rsp+0x50],eax
  404751:	jmp    0x403924
  404756:	cmp    r8d,0x501
  40475d:	jne    0x403cc0
  404763:	cvttss2si eax,DWORD PTR [rsi+0x8]
  404768:	mov    BYTE PTR [rsp+0x50],al
  40476c:	jmp    0x403924
  404771:	cvttss2si eax,DWORD PTR [rsi+0x8]
  404776:	mov    WORD PTR [rsp+0x50],ax
  40477b:	jmp    0x403924
  404780:	movzx  eax,BYTE PTR [rsi+0x8]
  404784:	mov    QWORD PTR [rsp+0x50],rax
  404789:	jmp    0x403924
  40478e:	movzx  eax,BYTE PTR [rsi+0x8]
  404792:	mov    QWORD PTR [rsp+0x50],rax
  404797:	jmp    0x403924
  40479c:	movzx  eax,BYTE PTR [rsi+0x8]
  4047a0:	mov    WORD PTR [rsp+0x50],ax
  4047a5:	jmp    0x403924
  4047aa:	movzx  eax,BYTE PTR [rsi+0x8]
  4047ae:	mov    DWORD PTR [rsp+0x50],eax
  4047b2:	jmp    0x403924
  4047b7:	movsx  r8d,WORD PTR [rsi+0x8]
  4047bc:	lea    rdx,[rip+0x1c4ba]        # 0x420c7d
  4047c3:	lea    rcx,[rip+0x2c8b6]        # 0x431080
  4047ca:	call   0x41db80
  4047cf:	lea    r8,[rip+0x2c8aa]        # 0x431080
  4047d6:	mov    rdx,r8
  4047d9:	mov    ecx,DWORD PTR [rdx]
  4047db:	add    rdx,0x4
  4047df:	lea    eax,[rcx-0x1010101]
  4047e5:	not    ecx
  4047e7:	and    eax,ecx
  4047e9:	and    eax,0x80808080
  4047ee:	je     0x4047d9
  4047f0:	mov    ecx,eax
  4047f2:	shr    ecx,0x10
  4047f5:	test   eax,0x8080
  4047fa:	cmove  eax,ecx
  4047fd:	lea    rcx,[rdx+0x2]
  404801:	cmove  rdx,rcx
  404805:	add    al,al
  404807:	lea    rcx,[rip+0x2c872]        # 0x431080
  40480e:	sbb    rdx,0x3
  404812:	sub    rdx,r8
  404815:	mov    DWORD PTR [rsp+0x50],edx
  404819:	call   0x41db10
  40481e:	mov    QWORD PTR [rsp+0x58],rax
  404823:	jmp    0x403924
  404828:	movsx  eax,WORD PTR [rsi+0x8]
  40482c:	mov    DWORD PTR [rsp+0x50],eax
  404830:	jmp    0x403924
  404835:	cvttsd2si rax,QWORD PTR [rsi+0x8]
  40483b:	mov    DWORD PTR [rsp+0x50],eax
  40483f:	jmp    0x403924
  404844:	movsxd rax,DWORD PTR [rsi+0x8]
  404848:	mov    QWORD PTR [rsp+0x50],rax
  40484d:	jmp    0x403924
  404852:	mov    eax,DWORD PTR [rsi+0x8]
  404855:	mov    WORD PTR [rsp+0x50],ax
  40485a:	jmp    0x403924
  40485f:	mov    eax,DWORD PTR [rsi+0x8]
  404862:	mov    DWORD PTR [rsp+0x50],eax
  404866:	jmp    0x403924
  40486b:	mov    rax,QWORD PTR [rsi+0x8]
  40486f:	mov    DWORD PTR [rsp+0x50],eax
  404873:	jmp    0x403924
  404878:	mov    rax,QWORD PTR [rsi+0x8]
  40487c:	mov    WORD PTR [rsp+0x50],ax
  404881:	jmp    0x403924
  404886:	mov    r8d,DWORD PTR [rsi+0x8]
  40488a:	lea    rdx,[rip+0x1c3f0]        # 0x420c81
  404891:	lea    rcx,[rip+0x2c7e8]        # 0x431080
  404898:	call   0x41db80
  40489d:	lea    r8,[rip+0x2c7dc]        # 0x431080
  4048a4:	mov    rdx,r8
  4048a7:	mov    ecx,DWORD PTR [rdx]
  4048a9:	add    rdx,0x4
  4048ad:	lea    eax,[rcx-0x1010101]
  4048b3:	not    ecx
  4048b5:	and    eax,ecx
  4048b7:	and    eax,0x80808080
  4048bc:	je     0x4048a7
  4048be:	mov    ecx,eax
  4048c0:	shr    ecx,0x10
  4048c3:	test   eax,0x8080
  4048c8:	cmove  eax,ecx
  4048cb:	lea    rcx,[rdx+0x2]
  4048cf:	cmove  rdx,rcx
  4048d3:	add    al,al
  4048d5:	lea    rcx,[rip+0x2c7a4]        # 0x431080
  4048dc:	sbb    rdx,0x3
  4048e0:	sub    rdx,r8
  4048e3:	mov    DWORD PTR [rsp+0x50],edx
  4048e7:	call   0x41db10
  4048ec:	mov    QWORD PTR [rsp+0x58],rax
  4048f1:	jmp    0x403924
  4048f6:	movzx  eax,WORD PTR [rsi+0x8]
  4048fa:	mov    WORD PTR [rsp+0x50],ax
  4048ff:	jmp    0x403924
  404904:	mov    eax,DWORD PTR [rsi+0x8]
  404907:	mov    DWORD PTR [rsp+0x50],eax
  40490b:	jmp    0x403924
  404910:	mov    rax,QWORD PTR [rsi+0x8]
  404914:	mov    WORD PTR [rsp+0x50],ax
  404919:	jmp    0x403924
  40491e:	mov    rdx,QWORD PTR [rsi+0x8]
  404922:	test   rdx,rdx
  404925:	js     0x404e25
  40492b:	pxor   xmm0,xmm0
  40492f:	cvtsi2sd xmm0,rdx
  404934:	movsd  QWORD PTR [rsp+0x50],xmm0
  40493a:	jmp    0x403924
  40493f:	mov    rax,QWORD PTR [rsi+0x8]
  404943:	mov    BYTE PTR [rsp+0x50],al
  404947:	jmp    0x403924
  40494c:	movzx  eax,BYTE PTR [rsi+0x8]
  404950:	mov    BYTE PTR [rsp+0x50],al
  404954:	jmp    0x403924
  404959:	movsx  ax,BYTE PTR [rsi+0x8]
  40495e:	mov    WORD PTR [rsp+0x50],ax
  404963:	jmp    0x403924
  404968:	movss  xmm0,DWORD PTR [rsi+0x8]
  40496d:	ucomiss xmm0,DWORD PTR [rip+0x1c35c]        # 0x420cd0
  404974:	jae    0x404df2
  40497a:	cvttss2si rax,xmm0
  40497f:	mov    QWORD PTR [rsp+0x50],rax
  404984:	jmp    0x403924
  404989:	movzx  eax,BYTE PTR [rsi+0x8]
  40498d:	mov    BYTE PTR [rsp+0x50],al
  404991:	jmp    0x403924
  404996:	movzx  eax,BYTE PTR [rsi+0x8]
  40499a:	mov    BYTE PTR [rsp+0x50],al
  40499e:	jmp    0x403924
  4049a3:	cvttss2si rax,DWORD PTR [rsi+0x8]
  4049a9:	mov    DWORD PTR [rsp+0x50],eax
  4049ad:	jmp    0x403924
  4049b2:	cvttss2si eax,DWORD PTR [rsi+0x8]
  4049b7:	mov    BYTE PTR [rsp+0x50],al
  4049bb:	jmp    0x403924
  4049c0:	cvttss2si eax,DWORD PTR [rsi+0x8]
  4049c5:	mov    WORD PTR [rsp+0x50],ax
  4049ca:	jmp    0x403924
  4049cf:	movzx  eax,WORD PTR [rsi+0x8]
  4049d3:	mov    QWORD PTR [rsp+0x50],rax
  4049d8:	jmp    0x403924
  4049dd:	mov    rcx,QWORD PTR [rsi+0x10]
  4049e1:	lea    r8,[rsp+0x50]
  4049e6:	lea    rdx,[rip+0x1c29f]        # 0x420c8c
  4049ed:	call   0x41db78
  4049f2:	jmp    0x403924
  4049f7:	mov    rcx,QWORD PTR [rsi+0x10]
  4049fb:	lea    r8,[rsp+0x50]
  404a00:	lea    rdx,[rip+0x1c27a]        # 0x420c81
  404a07:	call   0x41db78
  404a0c:	jmp    0x403924
  404a11:	mov    rcx,QWORD PTR [rsi+0x10]
  404a15:	lea    r8,[rsp+0x50]
  404a1a:	lea    rdx,[rip+0x1c268]        # 0x420c89
  404a21:	call   0x41db78
  404a26:	jmp    0x403924
  404a2b:	mov    rax,QWORD PTR [rsi+0x8]
  404a2f:	mov    BYTE PTR [rsp+0x50],al
  404a33:	jmp    0x403924
  404a38:	mov    DWORD PTR [rsp+0x50],0x0
  404a40:	mov    QWORD PTR [rsp+0x58],0x0
  404a49:	jmp    0x403924
  404a4e:	movsxd r12,DWORD PTR [rsi+0x8]
  404a52:	lea    ecx,[r12+0x1]
  404a57:	movsxd rcx,ecx
  404a5a:	call   0x41dbc8
  404a5f:	mov    rdx,QWORD PTR [rsi+0x10]
  404a63:	mov    r8,r12
  404a66:	mov    rcx,rax
  404a69:	mov    QWORD PTR [rsp+0x58],rax
  404a6e:	call   0x41dbc0
  404a73:	mov    DWORD PTR [rsp+0x50],r12d
  404a78:	mov    BYTE PTR [rax+r12*1],0x0
  404a7d:	jmp    0x403924
  404a82:	mov    eax,DWORD PTR [rsi+0x8]
  404a85:	mov    WORD PTR [rsp+0x50],ax
  404a8a:	jmp    0x403924
  404a8f:	mov    r8,QWORD PTR [rsi+0x8]
  404a93:	lea    rdx,[rip+0x1c1ea]        # 0x420c84
  404a9a:	lea    rcx,[rip+0x2c5df]        # 0x431080
  404aa1:	call   0x41db80
  404aa6:	lea    r8,[rip+0x2c5d3]        # 0x431080
  404aad:	mov    rdx,r8
  404ab0:	mov    ecx,DWORD PTR [rdx]
  404ab2:	add    rdx,0x4
  404ab6:	lea    eax,[rcx-0x1010101]
  404abc:	not    ecx
  404abe:	and    eax,ecx
  404ac0:	and    eax,0x80808080
  404ac5:	je     0x404ab0
  404ac7:	mov    ecx,eax
  404ac9:	shr    ecx,0x10
  404acc:	test   eax,0x8080
  404ad1:	cmove  eax,ecx
  404ad4:	lea    rcx,[rdx+0x2]
  404ad8:	cmove  rdx,rcx
  404adc:	add    al,al
  404ade:	lea    rcx,[rip+0x2c59b]        # 0x431080
  404ae5:	sbb    rdx,0x3
  404ae9:	sub    rdx,r8
  404aec:	mov    DWORD PTR [rsp+0x50],edx
  404af0:	call   0x41db10
  404af5:	mov    QWORD PTR [rsp+0x58],rax
  404afa:	jmp    0x403924
  404aff:	movzx  eax,BYTE PTR [rsi+0x8]
  404b03:	mov    QWORD PTR [rsp+0x50],rax
  404b08:	jmp    0x403924
  404b0d:	test   rbp,rbp
  404b10:	je     0x403931
  404b16:	movsd  xmm0,QWORD PTR [rbp+0x0]
  404b1b:	movsd  QWORD PTR [rsp+0x50],xmm0
  404b21:	jmp    0x403929
  404b26:	movsd  xmm0,QWORD PTR [rsi+0x8]
  404b2b:	movq   rax,xmm0
  404b30:	mov    edx,eax
  404b32:	neg    edx
  404b34:	or     edx,eax
  404b36:	shr    rax,0x20
  404b3a:	shr    edx,0x1f
  404b3d:	and    eax,0x7fffffff
  404b42:	or     eax,edx
  404b44:	mov    edx,0x7ff00000
  404b49:	cmp    edx,eax
  404b4b:	js     0x404e18
  404b51:	cvtsd2ss xmm0,xmm0
  404b55:	movss  DWORD PTR [rsp+0x50],xmm0
  404b5b:	jmp    0x403924
  404b60:	movsd  xmm0,QWORD PTR [rsi+0x8]
  404b65:	movsd  QWORD PTR [rsp+0x50],xmm0
  404b6b:	jmp    0x403924
  404b70:	mov    rax,QWORD PTR [rsi+0x8]
  404b74:	mov    BYTE PTR [rsp+0x50],al
  404b78:	jmp    0x403924
  404b7d:	movzx  eax,WORD PTR [rsi+0x8]
  404b81:	mov    WORD PTR [rsp+0x50],ax
  404b86:	jmp    0x403924
  404b8b:	cvttss2si eax,DWORD PTR [rsi+0x8]
  404b90:	mov    DWORD PTR [rsp+0x50],eax
  404b94:	jmp    0x403924
  404b99:	cvttsd2si eax,QWORD PTR [rsi+0x8]
  404b9e:	mov    BYTE PTR [rsp+0x50],al
  404ba2:	jmp    0x403924
  404ba7:	movzx  eax,WORD PTR [rsi+0x8]
  404bab:	pxor   xmm0,xmm0
  404baf:	cvtsi2ss xmm0,eax
  404bb3:	movss  DWORD PTR [rsp+0x50],xmm0
  404bb9:	jmp    0x403924
  404bbe:	mov    rcx,QWORD PTR [rsi+0x10]
  404bc2:	lea    r8,[rsp+0x50]
  404bc7:	lea    rdx,[rip+0x1c099]        # 0x420c67
  404bce:	call   0x41db78
  404bd3:	jmp    0x403924
  404bd8:	mov    rcx,QWORD PTR [rsi+0x10]
  404bdc:	lea    r8,[rsp+0x50]
  404be1:	lea    rdx,[rip+0x1c089]        # 0x420c71
  404be8:	call   0x41db78
  404bed:	jmp    0x403924
  404bf2:	movzx  eax,WORD PTR [rsi+0x8]
  404bf6:	mov    BYTE PTR [rsp+0x50],al
  404bfa:	jmp    0x403924
  404bff:	movsx  rax,BYTE PTR [rsi+0x8]
  404c04:	mov    QWORD PTR [rsp+0x50],rax
  404c09:	jmp    0x403924
  404c0e:	movsx  r8d,BYTE PTR [rsi+0x8]
  404c13:	lea    rdx,[rip+0x1c076]        # 0x420c90
  404c1a:	lea    rcx,[rip+0x2c45f]        # 0x431080
  404c21:	call   0x41db80
  404c26:	lea    r8,[rip+0x2c453]        # 0x431080
  404c2d:	mov    rdx,r8
  404c30:	mov    ecx,DWORD PTR [rdx]
  404c32:	add    rdx,0x4
  404c36:	lea    eax,[rcx-0x1010101]
  404c3c:	not    ecx
  404c3e:	and    eax,ecx
  404c40:	and    eax,0x80808080
  404c45:	je     0x404c30
  404c47:	mov    ecx,eax
  404c49:	shr    ecx,0x10
  404c4c:	test   eax,0x8080
  404c51:	cmove  eax,ecx
  404c54:	lea    rcx,[rdx+0x2]
  404c58:	cmove  rdx,rcx
  404c5c:	add    al,al
  404c5e:	lea    rcx,[rip+0x2c41b]        # 0x431080
  404c65:	sbb    rdx,0x3
  404c69:	sub    rdx,r8
  404c6c:	mov    DWORD PTR [rsp+0x50],edx
  404c70:	call   0x41db10
  404c75:	mov    QWORD PTR [rsp+0x58],rax
  404c7a:	jmp    0x403924
  404c7f:	cvttsd2si eax,QWORD PTR [rsi+0x8]
  404c84:	mov    WORD PTR [rsp+0x50],ax
  404c89:	jmp    0x403924
  404c8e:	cvttsd2si eax,QWORD PTR [rsi+0x8]
  404c93:	mov    BYTE PTR [rsp+0x50],al
  404c97:	jmp    0x403924
  404c9c:	mov    rax,QWORD PTR [rsi+0x8]
  404ca0:	mov    QWORD PTR [rsp+0x50],rax
  404ca5:	jmp    0x403924
  404caa:	movzx  eax,BYTE PTR [rsi+0x8]
  404cae:	mov    BYTE PTR [rsp+0x50],al
  404cb2:	jmp    0x403924
  404cb7:	movzx  eax,BYTE PTR [rsi+0x8]
  404cbb:	pxor   xmm0,xmm0
  404cbf:	cvtsi2ss xmm0,eax
  404cc3:	movss  DWORD PTR [rsp+0x50],xmm0
  404cc9:	jmp    0x403924
  404cce:	movzx  eax,BYTE PTR [rsi+0x8]
  404cd2:	pxor   xmm0,xmm0
  404cd6:	cvtsi2sd xmm0,eax
  404cda:	movsd  QWORD PTR [rsp+0x50],xmm0
  404ce0:	jmp    0x403924
  404ce5:	mov    edx,DWORD PTR [rsi+0x8]
  404ce8:	mov    ecx,0x7f800000
  404ced:	movsd  xmm0,QWORD PTR [rip+0x1bfd3]        # 0x420cc8
  404cf5:	mov    eax,edx
  404cf7:	and    eax,0x7fffffff
  404cfc:	cmp    ecx,eax
  404cfe:	js     0x404d12
  404d00:	pxor   xmm0,xmm0
  404d04:	mov    DWORD PTR [rsp+0x3c],edx
  404d08:	movss  xmm3,DWORD PTR [rsp+0x3c]
  404d0e:	cvtss2sd xmm0,xmm3
  404d12:	movsd  QWORD PTR [rsp+0x50],xmm0
  404d18:	jmp    0x403924
  404d1d:	mov    rax,QWORD PTR [rsi+0x8]
  404d21:	mov    QWORD PTR [rsp+0x50],rax
  404d26:	jmp    0x403924
  404d2b:	mov    rax,QWORD PTR [rsi+0x8]
  404d2f:	mov    WORD PTR [rsp+0x50],ax
  404d34:	jmp    0x403924
  404d39:	mov    rax,QWORD PTR [rsi+0x8]
  404d3d:	mov    DWORD PTR [rsp+0x50],eax
  404d41:	jmp    0x403924
  404d46:	mov    rcx,QWORD PTR [rsi+0x10]
  404d4a:	lea    r8,[rsp+0x50]
  404d4f:	lea    rdx,[rip+0x1bf27]        # 0x420c7d
  404d56:	call   0x41db78
  404d5b:	jmp    0x403924
  404d60:	movzx  eax,BYTE PTR [rsi+0x8]
  404d64:	pxor   xmm0,xmm0
  404d68:	cvtsi2ss xmm0,eax
  404d6c:	movss  DWORD PTR [rsp+0x50],xmm0
  404d72:	jmp    0x403924
  404d77:	movzx  eax,BYTE PTR [rsi+0x8]
  404d7b:	mov    WORD PTR [rsp+0x50],ax
  404d80:	jmp    0x403924
  404d85:	movzx  eax,BYTE PTR [rsi+0x8]
  404d89:	mov    DWORD PTR [rsp+0x50],eax
  404d8d:	jmp    0x403924
  404d92:	movsx  rax,WORD PTR [rsi+0x8]
  404d97:	mov    QWORD PTR [rsp+0x50],rax
  404d9c:	jmp    0x403924
  404da1:	movsx  rax,WORD PTR [rsi+0x8]
  404da6:	mov    QWORD PTR [rsp+0x50],rax
  404dab:	jmp    0x403924
  404db0:	mov    eax,DWORD PTR [rsi+0x8]
  404db3:	mov    DWORD PTR [rsp+0x50],eax
  404db7:	jmp    0x403924
  404dbc:	pxor   xmm0,xmm0
  404dc0:	cvtsi2ss xmm0,DWORD PTR [rsi+0x8]
  404dc5:	movss  DWORD PTR [rsp+0x50],xmm0
  404dcb:	jmp    0x403924
  404dd0:	subsd  xmm0,xmm1
  404dd4:	cvttsd2si rax,xmm0
  404dd9:	mov    QWORD PTR [rsp+0x50],rax
  404dde:	movabs rax,0x8000000000000000
  404de8:	xor    QWORD PTR [rsp+0x50],rax
  404ded:	jmp    0x403924
  404df2:	subss  xmm0,DWORD PTR [rip+0x1bed6]        # 0x420cd0
  404dfa:	cvttss2si rax,xmm0
  404dff:	mov    QWORD PTR [rsp+0x50],rax
  404e04:	movabs rax,0x8000000000000000
  404e0e:	xor    QWORD PTR [rsp+0x50],rax
  404e13:	jmp    0x403924
  404e18:	pxor   xmm0,xmm0
  404e1c:	divss  xmm0,xmm0
  404e20:	jmp    0x404b55
  404e25:	mov    rax,rdx
  404e28:	pxor   xmm0,xmm0
  404e2c:	shr    rax,1
  404e2f:	and    edx,0x1
  404e32:	or     rax,rdx
  404e35:	cvtsi2sd xmm0,rax
  404e3a:	addsd  xmm0,xmm0
  404e3e:	jmp    0x404934
  404e43:	mov    rax,rdx
  404e46:	pxor   xmm0,xmm0
  404e4a:	shr    rax,1
  404e4d:	and    edx,0x1
  404e50:	or     rax,rdx
  404e53:	cvtsi2ss xmm0,rax
  404e58:	addss  xmm0,xmm0
  404e5c:	jmp    0x40449c
  404e61:	nop    DWORD PTR [rax+rax*1+0x0]
  404e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e70:	push   r12
  404e72:	push   rbp
  404e73:	push   rdi
  404e74:	push   rsi
  404e75:	push   rbx
  404e76:	sub    rsp,0x40
  404e7a:	mov    ebp,DWORD PTR [rcx+0x8]
  404e7d:	mov    rsi,rcx
  404e80:	mov    ecx,ebp
  404e82:	call   0x415bb0
  404e87:	test   ebp,ebp
  404e89:	mov    rdi,rax
  404e8c:	mov    rbx,QWORD PTR [rsi+0x10]
  404e90:	jle    0x404ed7
  404e92:	lea    eax,[rbp-0x1]
  404e95:	lea    rbp,[rsp+0x20]
  404e9a:	lea    r12,[rbx+rax*1+0x1]
  404e9f:	nop
  404ea0:	mov    r8d,DWORD PTR [rsi+0x4]
  404ea4:	mov    DWORD PTR [rsp+0x20],0x2
  404eac:	mov    rdx,rbp
  404eaf:	mov    rcx,rdi
  404eb2:	add    rbx,0x1
  404eb6:	mov    DWORD PTR [rsp+0x24],r8d
  404ebb:	movzx  r8d,BYTE PTR [rbx-0x1]
  404ec0:	mov    DWORD PTR [rsp+0x38],0x0
  404ec8:	mov    BYTE PTR [rsp+0x28],r8b
  404ecd:	call   0x415c40
  404ed2:	cmp    rbx,r12
  404ed5:	jne    0x404ea0
  404ed7:	mov    rax,rdi
  404eda:	add    rsp,0x40
  404ede:	pop    rbx
  404edf:	pop    rsi
  404ee0:	pop    rdi
  404ee1:	pop    rbp
  404ee2:	pop    r12
  404ee4:	ret    
  404ee5:	nop
  404ee6:	nop
  404ee7:	nop
  404ee8:	nop
  404ee9:	nop
  404eea:	nop
  404eeb:	nop
  404eec:	nop
  404eed:	nop
  404eee:	nop
  404eef:	nop
  404ef0:	push   r15
  404ef2:	push   r14
  404ef4:	push   r13
  404ef6:	push   r12
  404ef8:	push   rbp
  404ef9:	push   rdi
  404efa:	push   rsi
  404efb:	push   rbx
  404efc:	sub    rsp,0xc8
  404f03:	mov    rdi,QWORD PTR [rip+0x2f836]        # 0x434740
  404f0a:	mov    rsi,rcx
  404f0d:	mov    r15,rdx
  404f10:	mov    rbx,r8
  404f13:	mov    r12,rdi
  404f16:	mov    r13,rdi
  404f19:	mov    QWORD PTR [rsp+0x28],rdi
  404f1e:	mov    QWORD PTR [rsp+0x38],rdi
  404f23:	mov    QWORD PTR [rsp+0x30],rdi
  404f28:	nop    DWORD PTR [rax+rax*1+0x0]
  404f30:	movsx  edx,BYTE PTR [r15]
  404f34:	lea    rbp,[r15+0x1]
  404f38:	test   dl,dl
  404f3a:	je     0x40505b
  404f40:	cmp    dl,0x25
  404f43:	jne    0x405040
  404f49:	movsx  edx,BYTE PTR [r15+0x1]
  404f4e:	xor    eax,eax
  404f50:	xor    ecx,ecx
  404f52:	mov    r8d,0x2
  404f58:	cmp    dl,0x66
  404f5b:	lea    r15,[rbp+0x1]
  404f5f:	je     0x4050b4
  404f65:	jg     0x404fd5
  404f67:	cmp    dl,0x25
  404f6a:	je     0x405170
  404f70:	jle    0x405100
  404f76:	cmp    dl,0x63
  404f79:	je     0x405152
  404f7f:	cmp    dl,0x64
  404f82:	jne    0x405120
  404f88:	cmp    ecx,0x2
  404f8b:	lea    rbp,[rbx+0x8]
  404f8f:	lea    r14,[rsp+0x40]
  404f94:	je     0x405250
  404f9a:	cmp    ecx,0x1
  404f9d:	je     0x405270
  404fa3:	cmp    eax,0x2
  404fa6:	je     0x4052d2
  404fac:	cmp    eax,0x1
  404faf:	mov    r9d,DWORD PTR [rbx]
  404fb2:	je     0x405210
  404fb8:	lea    r8,[rip+0x1bd48]        # 0x420d07
  404fbf:	mov    edx,0x80
  404fc4:	mov    rcx,r14
  404fc7:	mov    rbx,rbp
  404fca:	call   QWORD PTR [rip+0x2f770]        # 0x434740
  404fd0:	jmp    0x4050e7
  404fd5:	cmp    dl,0x6c
  404fd8:	je     0x4051a0
  404fde:	jle    0x405070
  404fe4:	cmp    dl,0x73
  404fe7:	je     0x405182
  404fed:	cmp    dl,0x75
  404ff0:	jne    0x405120
  404ff6:	cmp    ecx,0x2
  404ff9:	lea    rbp,[rbx+0x8]
  404ffd:	lea    r14,[rsp+0x40]
  405002:	je     0x405230
  405008:	cmp    ecx,0x1
  40500b:	je     0x405290
  405011:	cmp    eax,0x2
  405014:	je     0x4052b1
  40501a:	cmp    eax,0x1
  40501d:	mov    r9d,DWORD PTR [rbx]
  405020:	je     0x4051f0
  405026:	lea    r8,[rip+0x1bcc5]        # 0x420cf2
  40502d:	mov    edx,0x80
  405032:	mov    rcx,r14
  405035:	mov    rbx,rbp
  405038:	call   r13
  40503b:	jmp    0x4050e7
  405040:	mov    r15,rbp
  405043:	mov    rcx,rsi
  405046:	call   0x416110
  40504b:	movsx  edx,BYTE PTR [r15]
  40504f:	lea    rbp,[r15+0x1]
  405053:	test   dl,dl
  405055:	jne    0x404f40
  40505b:	add    rsp,0xc8
  405062:	pop    rbx
  405063:	pop    rsi
  405064:	pop    rdi
  405065:	pop    rbp
  405066:	pop    r12
  405068:	pop    r13
  40506a:	pop    r14
  40506c:	pop    r15
  40506e:	ret    
  40506f:	nop
  405070:	cmp    dl,0x68
  405073:	jne    0x405120
  405079:	movsx  edx,BYTE PTR [rbp+0x1]
  40507d:	add    ecx,0x1
  405080:	mov    rbp,r15
  405083:	cmp    dl,0x68
  405086:	jne    0x4050a0
  405088:	nop    DWORD PTR [rax+rax*1+0x0]
  405090:	add    rbp,0x1
  405094:	movsx  edx,BYTE PTR [rbp+0x0]
  405098:	add    ecx,0x1
  40509b:	cmp    dl,0x68
  40509e:	je     0x405090
  4050a0:	cmp    ecx,0x2
  4050a3:	lea    r15,[rbp+0x1]
  4050a7:	cmovg  ecx,r8d
  4050ab:	cmp    dl,0x66
  4050ae:	jne    0x404f65
  4050b4:	movsd  xmm0,QWORD PTR [rbx]
  4050b8:	test   eax,eax
  4050ba:	lea    rbp,[rbx+0x8]
  4050be:	lea    r14,[rsp+0x40]
  4050c3:	movapd xmm3,xmm0
  4050c7:	movq   r9,xmm0
  4050cc:	je     0x4051d0
  4050d2:	mov    rbx,rbp
  4050d5:	lea    r8,[rip+0x1bc2e]        # 0x420d0a
  4050dc:	mov    edx,0x80
  4050e1:	mov    rcx,r14
  4050e4:	call   r12
  4050e7:	mov    rdx,r14
  4050ea:	mov    rcx,rsi
  4050ed:	call   0x416200
  4050f2:	jmp    0x404f30
  4050f7:	nop    WORD PTR [rax+rax*1+0x0]
  405100:	test   dl,dl
  405102:	jne    0x405120
  405104:	mov    edx,0x25
  405109:	mov    rcx,rsi
  40510c:	mov    r15,rbp
  40510f:	call   0x416110
  405114:	jmp    0x404f30
  405119:	nop    DWORD PTR [rax+0x0]
  405120:	lea    rcx,[rip+0x1bc01]        # 0x420d28
  405127:	call   0x406300
  40512c:	test   eax,eax
  40512e:	jne    0x404f30
  405134:	lea    rdx,[rip+0x1bc0e]        # 0x420d49
  40513b:	lea    rcx,[rip+0x1bc0e]        # 0x420d50
  405142:	mov    r8d,0x257
  405148:	call   0x41da30
  40514d:	jmp    0x404f30
  405152:	movsx  edx,BYTE PTR [rbx]
  405155:	lea    rbp,[rbx+0x8]
  405159:	mov    rcx,rsi
  40515c:	mov    rbx,rbp
  40515f:	call   0x416110
  405164:	jmp    0x404f30
  405169:	nop    DWORD PTR [rax+0x0]
  405170:	mov    edx,0x25
  405175:	mov    rcx,rsi
  405178:	call   0x416110
  40517d:	jmp    0x404f30
  405182:	mov    rdx,QWORD PTR [rbx]
  405185:	lea    rbp,[rbx+0x8]
  405189:	mov    rcx,rsi
  40518c:	mov    rbx,rbp
  40518f:	call   0x416200
  405194:	jmp    0x404f30
  405199:	nop    DWORD PTR [rax+0x0]
  4051a0:	movsx  edx,BYTE PTR [rbp+0x1]
  4051a4:	add    eax,0x1
  4051a7:	mov    rbp,r15
  4051aa:	cmp    dl,0x6c
  4051ad:	jne    0x4051c0
  4051af:	nop
  4051b0:	add    rbp,0x1
  4051b4:	movsx  edx,BYTE PTR [rbp+0x0]
  4051b8:	add    eax,0x1
  4051bb:	cmp    dl,0x6c
  4051be:	je     0x4051b0
  4051c0:	cmp    eax,0x2
  4051c3:	cmovg  eax,r8d
  4051c7:	jmp    0x404f58
  4051cc:	nop    DWORD PTR [rax+0x0]
  4051d0:	lea    r8,[rip+0x1bb43]        # 0x420d1a
  4051d7:	mov    edx,0x80
  4051dc:	mov    rcx,r14
  4051df:	mov    rbx,rbp
  4051e2:	call   rdi
  4051e4:	jmp    0x4050e7
  4051e9:	nop    DWORD PTR [rax+0x0]
  4051f0:	lea    r8,[rip+0x1baf7]        # 0x420cee
  4051f7:	mov    edx,0x80
  4051fc:	mov    rcx,r14
  4051ff:	mov    rax,QWORD PTR [rsp+0x28]
  405204:	mov    rbx,rbp
  405207:	call   rax
  405209:	jmp    0x4050e7
  40520e:	xchg   ax,ax
  405210:	lea    r8,[rip+0x1baec]        # 0x420d03
  405217:	mov    edx,0x80
  40521c:	mov    rcx,r14
  40521f:	mov    rbx,rbp
  405222:	call   QWORD PTR [rip+0x2f518]        # 0x434740
  405228:	jmp    0x4050e7
  40522d:	nop    DWORD PTR [rax]
  405230:	mov    r9d,DWORD PTR [rbx]
  405233:	lea    r8,[rip+0x1baa6]        # 0x420ce0
  40523a:	mov    edx,0x80
  40523f:	mov    rcx,r14
  405242:	mov    rbx,rbp
  405245:	call   QWORD PTR [rip+0x2f4f5]        # 0x434740
  40524b:	jmp    0x4050e7
  405250:	mov    r9d,DWORD PTR [rbx]
  405253:	lea    r8,[rip+0x1ba9b]        # 0x420cf5
  40525a:	mov    edx,0x80
  40525f:	mov    rcx,r14
  405262:	mov    rbx,rbp
  405265:	call   QWORD PTR [rip+0x2f4d5]        # 0x434740
  40526b:	jmp    0x4050e7
  405270:	mov    r9d,DWORD PTR [rbx]
  405273:	lea    r8,[rip+0x1ba80]        # 0x420cfa
  40527a:	mov    edx,0x80
  40527f:	mov    rcx,r14
  405282:	mov    rbx,rbp
  405285:	call   QWORD PTR [rip+0x2f4b5]        # 0x434740
  40528b:	jmp    0x4050e7
  405290:	mov    r9d,DWORD PTR [rbx]
  405293:	lea    r8,[rip+0x1ba4b]        # 0x420ce5
  40529a:	mov    edx,0x80
  40529f:	mov    rcx,r14
  4052a2:	mov    rax,QWORD PTR [rsp+0x30]
  4052a7:	mov    rbx,rbp
  4052aa:	call   rax
  4052ac:	jmp    0x4050e7
  4052b1:	mov    r9,QWORD PTR [rbx]
  4052b4:	lea    r8,[rip+0x1ba2e]        # 0x420ce9
  4052bb:	mov    edx,0x80
  4052c0:	mov    rcx,r14
  4052c3:	mov    rax,QWORD PTR [rsp+0x38]
  4052c8:	mov    rbx,rbp
  4052cb:	call   rax
  4052cd:	jmp    0x4050e7
  4052d2:	mov    r9,QWORD PTR [rbx]
  4052d5:	lea    r8,[rip+0x1ba22]        # 0x420cfe
  4052dc:	mov    edx,0x80
  4052e1:	mov    rcx,r14
  4052e4:	mov    rbx,rbp
  4052e7:	call   QWORD PTR [rip+0x2f453]        # 0x434740
  4052ed:	jmp    0x4050e7
  4052f2:	nop    DWORD PTR [rax+0x0]
  4052f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405300:	test   rcx,rcx
  405303:	je     0x405339
  405305:	movsxd rax,DWORD PTR [rcx+0x8]
  405309:	cmp    DWORD PTR [rcx+0xc],eax
  40530c:	jg     0x405340
  40530e:	mov    eax,DWORD PTR [rcx+0x10]
  405311:	test   eax,eax
  405313:	jne    0x405330
  405315:	jmp    0x405352
  405317:	nop    WORD PTR [rax+rax*1+0x0]
  405320:	movsxd rax,DWORD PTR [rcx+0x8]
  405324:	cmp    eax,DWORD PTR [rcx+0xc]
  405327:	jl     0x405340
  405329:	mov    eax,DWORD PTR [rcx+0x10]
  40532c:	test   eax,eax
  40532e:	je     0x40533b
  405330:	mov    rcx,QWORD PTR [rcx+0x18]
  405334:	test   rcx,rcx
  405337:	jne    0x405320
  405339:	xor    eax,eax
  40533b:	repz ret 
  40533d:	nop    DWORD PTR [rax]
  405340:	shl    rax,0x5
  405344:	add    rax,QWORD PTR [rcx]
  405347:	je     0x405339
  405349:	cmp    DWORD PTR [rax],edx
  40534b:	sete   al
  40534e:	movzx  eax,al
  405351:	ret    
  405352:	repz ret 
  405354:	xchg   ax,ax
  405356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405360:	mov    edx,0x10
  405365:	jmp    0x405300
  405367:	nop    WORD PTR [rax+rax*1+0x0]
  405370:	mov    edx,0xc
  405375:	jmp    0x405300
  405377:	nop    WORD PTR [rax+rax*1+0x0]
  405380:	sub    rsp,0x28
  405384:	test   rcx,rcx
  405387:	je     0x4053b9
  405389:	movsxd rdx,DWORD PTR [rcx+0x8]
  40538d:	mov    rax,rcx
  405390:	cmp    edx,DWORD PTR [rcx+0xc]
  405393:	jl     0x4053c3
  405395:	mov    r8d,DWORD PTR [rcx+0x10]
  405399:	test   r8d,r8d
  40539c:	jne    0x4053b0
  40539e:	jmp    0x4053b9
  4053a0:	movsxd rdx,DWORD PTR [rax+0x8]
  4053a4:	cmp    edx,DWORD PTR [rax+0xc]
  4053a7:	jl     0x4053c3
  4053a9:	mov    edx,DWORD PTR [rax+0x10]
  4053ac:	test   edx,edx
  4053ae:	je     0x4053b9
  4053b0:	mov    rax,QWORD PTR [rax+0x18]
  4053b4:	test   rax,rax
  4053b7:	jne    0x4053a0
  4053b9:	mov    eax,0x1
  4053be:	add    rsp,0x28
  4053c2:	ret    
  4053c3:	shl    rdx,0x5
  4053c7:	add    rdx,QWORD PTR [rax]
  4053ca:	je     0x4053b9
  4053cc:	mov    edx,0x1f
  4053d1:	call   0x405300
  4053d6:	test   eax,eax
  4053d8:	setne  al
  4053db:	movzx  eax,al
  4053de:	add    rsp,0x28
  4053e2:	ret    
  4053e3:	nop    DWORD PTR [rax]
  4053e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053f0:	xor    eax,eax
  4053f2:	sub    ecx,0x1
  4053f5:	cmp    ecx,0x1e
  4053f8:	ja     0x40540d
  4053fa:	mov    eax,0x1
  4053ff:	shl    rax,cl
  405402:	test   eax,0x40000843
  405407:	setne  al
  40540a:	movzx  eax,al
  40540d:	repz ret 
  40540f:	nop
  405410:	jmp    0x4062e0
  405415:	nop
  405416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405420:	sub    rsp,0x28
  405424:	mov    ecx,0x20
  405429:	call   0x4063a0
  40542e:	mov    QWORD PTR [rax],0x0
  405435:	mov    DWORD PTR [rax+0x8],0x0
  40543c:	mov    DWORD PTR [rax+0xc],0x0
  405443:	mov    QWORD PTR [rax+0x18],0x0
  40544b:	add    rsp,0x28
  40544f:	ret    
  405450:	push   rbx
  405451:	sub    rsp,0x20
  405455:	test   rcx,rcx
  405458:	mov    rbx,rcx
  40545b:	je     0x405490
  40545d:	mov    ecx,0x20
  405462:	call   0x4063a0
  405467:	mov    rdx,QWORD PTR [rbx+0x20]
  40546b:	mov    DWORD PTR [rax+0x8],0x0
  405472:	mov    QWORD PTR [rax+0x18],0x0
  40547a:	mov    QWORD PTR [rax],rdx
  40547d:	mov    rdx,QWORD PTR [rbx+0x10]
  405481:	mov    DWORD PTR [rax+0xc],edx
  405484:	add    rsp,0x20
  405488:	pop    rbx
  405489:	ret    
  40548a:	nop    WORD PTR [rax+rax*1+0x0]
  405490:	lea    rdx,[rip+0x1b8eb]        # 0x420d82
  405497:	lea    rcx,[rip+0x1b8f1]        # 0x420d8f
  40549e:	call   0x406300
  4054a3:	jmp    0x40545d
  4054a5:	nop
  4054a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054b0:	push   rbx
  4054b1:	sub    rsp,0x20
  4054b5:	test   rcx,rcx
  4054b8:	mov    rbx,rcx
  4054bb:	je     0x4054f0
  4054bd:	mov    ecx,0x20
  4054c2:	call   0x4063a0
  4054c7:	mov    DWORD PTR [rax+0x8],0x0
  4054ce:	mov    QWORD PTR [rax+0x18],0x0
  4054d6:	mov    QWORD PTR [rax],rbx
  4054d9:	mov    DWORD PTR [rax+0xc],0x1
  4054e0:	add    rsp,0x20
  4054e4:	pop    rbx
  4054e5:	ret    
  4054e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054f0:	lea    rdx,[rip+0x1b8ae]        # 0x420da5
  4054f7:	lea    rcx,[rip+0x1b891]        # 0x420d8f
  4054fe:	call   0x406300
  405503:	jmp    0x4054bd
  405505:	nop
  405506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405510:	push   rsi
  405511:	push   rbx
  405512:	sub    rsp,0x28
  405516:	test   rdx,rdx
  405519:	mov    rbx,rcx
  40551c:	mov    rsi,rdx
  40551f:	je     0x405550
  405521:	mov    rax,QWORD PTR [rsi+0x20]
  405525:	mov    DWORD PTR [rbx],0x10
  40552b:	mov    QWORD PTR [rbx+0x8],rsi
  40552f:	mov    DWORD PTR [rbx+0x18],0x0
  405536:	mov    eax,DWORD PTR [rax+0x4]
  405539:	mov    DWORD PTR [rbx+0x4],eax
  40553c:	mov    rax,rbx
  40553f:	add    rsp,0x28
  405543:	pop    rbx
  405544:	pop    rsi
  405545:	ret    
  405546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405550:	lea    rdx,[rip+0x1b82b]        # 0x420d82
  405557:	lea    rcx,[rip+0x1b831]        # 0x420d8f
  40555e:	call   0x406300
  405563:	jmp    0x405521
  405565:	nop
  405566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405570:	push   rsi
  405571:	push   rbx
  405572:	sub    rsp,0x28
  405576:	test   rcx,rcx
  405579:	mov    rsi,rcx
  40557c:	je     0x4055a5
  40557e:	mov    ecx,0x1
  405583:	call   0x415bb0
  405588:	test   rax,rax
  40558b:	mov    rbx,rax
  40558e:	je     0x40559b
  405590:	mov    rdx,rsi
  405593:	mov    rcx,rax
  405596:	call   0x415c40
  40559b:	mov    rax,rbx
  40559e:	add    rsp,0x28
  4055a2:	pop    rbx
  4055a3:	pop    rsi
  4055a4:	ret    
  4055a5:	lea    rdx,[rip+0x1b7f9]        # 0x420da5
  4055ac:	lea    rcx,[rip+0x1b7dc]        # 0x420d8f
  4055b3:	call   0x406300
  4055b8:	jmp    0x40557e
  4055ba:	nop    WORD PTR [rax+rax*1+0x0]
  4055c0:	test   rcx,rcx
  4055c3:	je     0x4055e9
  4055c5:	movsxd rax,DWORD PTR [rcx+0x8]
  4055c9:	cmp    DWORD PTR [rcx+0xc],eax
  4055cc:	jle    0x4055e2
  4055ce:	jmp    0x4055f0
  4055d0:	mov    rcx,QWORD PTR [rcx+0x18]
  4055d4:	test   rcx,rcx
  4055d7:	je     0x4055e9
  4055d9:	movsxd rax,DWORD PTR [rcx+0x8]
  4055dd:	cmp    eax,DWORD PTR [rcx+0xc]
  4055e0:	jl     0x4055f0
  4055e2:	mov    eax,DWORD PTR [rcx+0x10]
  4055e5:	test   eax,eax
  4055e7:	jne    0x4055d0
  4055e9:	xor    eax,eax
  4055eb:	ret    
  4055ec:	nop    DWORD PTR [rax+0x0]
  4055f0:	shl    rax,0x5
  4055f4:	add    rax,QWORD PTR [rcx]
  4055f7:	ret    
  4055f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405600:	test   rcx,rcx
  405603:	je     0x405638
  405605:	mov    eax,DWORD PTR [rcx+0xc]
  405608:	cmp    DWORD PTR [rcx+0x8],eax
  40560b:	jl     0x405640
  40560d:	mov    eax,DWORD PTR [rcx+0x10]
  405610:	test   eax,eax
  405612:	jne    0x40562f
  405614:	jmp    0x405647
  405616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405620:	mov    eax,DWORD PTR [rcx+0xc]
  405623:	cmp    DWORD PTR [rcx+0x8],eax
  405626:	jl     0x405640
  405628:	mov    eax,DWORD PTR [rcx+0x10]
  40562b:	test   eax,eax
  40562d:	je     0x405645
  40562f:	mov    rcx,QWORD PTR [rcx+0x18]
  405633:	test   rcx,rcx
  405636:	jne    0x405620
  405638:	xor    eax,eax
  40563a:	ret    
  40563b:	nop    DWORD PTR [rax+rax*1+0x0]
  405640:	mov    eax,0x1
  405645:	repz ret 
  405647:	repz ret 
  405649:	nop    DWORD PTR [rax+0x0]
  405650:	mov    r8d,DWORD PTR [rcx+0xc]
  405654:	xor    eax,eax
  405656:	mov    edx,DWORD PTR [rcx+0x8]
  405659:	test   r8d,r8d
  40565c:	je     0x405675
  40565e:	lea    eax,[r8-0x1]
  405662:	cmp    edx,r8d
  405665:	cmovge edx,eax
  405668:	movsxd rdx,edx
  40566b:	shl    rdx,0x5
  40566f:	add    rdx,QWORD PTR [rcx]
  405672:	mov    eax,DWORD PTR [rdx+0x4]
  405675:	repz ret 
  405677:	nop    WORD PTR [rax+rax*1+0x0]
  405680:	push   rsi
  405681:	push   rbx
  405682:	sub    rsp,0x28
  405686:	test   rcx,rcx
  405689:	mov    rbx,rcx
  40568c:	mov    rsi,rdx
  40568f:	je     0x405700
  405691:	test   rdx,rdx
  405694:	je     0x405700
  405696:	mov    ecx,0x20
  40569b:	call   0x4063a0
  4056a0:	mov    QWORD PTR [rax+0x18],0x0
  4056a8:	mov    DWORD PTR [rax+0x8],0x0
  4056af:	mov    DWORD PTR [rax+0xc],0x0
  4056b6:	mov    QWORD PTR [rax],0x0
  4056bd:	mov    rdx,QWORD PTR [rbx]
  4056c0:	mov    QWORD PTR [rax],rdx
  4056c3:	mov    rdx,QWORD PTR [rbx+0x8]
  4056c7:	mov    QWORD PTR [rax+0x8],rdx
  4056cb:	mov    rdx,QWORD PTR [rbx+0x10]
  4056cf:	mov    QWORD PTR [rax+0x10],rdx
  4056d3:	mov    rdx,QWORD PTR [rbx+0x18]
  4056d7:	mov    QWORD PTR [rax+0x18],rdx
  4056db:	mov    QWORD PTR [rbx+0x18],rax
  4056df:	mov    rax,QWORD PTR [rsi+0x20]
  4056e3:	mov    DWORD PTR [rbx+0x8],0x0
  4056ea:	mov    QWORD PTR [rbx],rax
  4056ed:	mov    rax,QWORD PTR [rsi+0x10]
  4056f1:	mov    DWORD PTR [rbx+0xc],eax
  4056f4:	add    rsp,0x28
  4056f8:	pop    rbx
  4056f9:	pop    rsi
  4056fa:	ret    
  4056fb:	nop    DWORD PTR [rax+rax*1+0x0]
  405700:	lea    rdx,[rip+0x1b6aa]        # 0x420db1
  405707:	lea    rcx,[rip+0x1b681]        # 0x420d8f
  40570e:	call   0x406300
  405713:	jmp    0x405696
  405715:	nop
  405716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405720:	test   rcx,rcx
  405723:	mov    rax,rcx
  405726:	je     0x405750
  405728:	mov    rcx,QWORD PTR [rcx+0x18]
  40572c:	mov    rdx,QWORD PTR [rcx]
  40572f:	mov    QWORD PTR [rax],rdx
  405732:	mov    rdx,QWORD PTR [rcx+0x8]
  405736:	mov    QWORD PTR [rax+0x8],rdx
  40573a:	mov    rdx,QWORD PTR [rcx+0x10]
  40573e:	mov    QWORD PTR [rax+0x10],rdx
  405742:	mov    rdx,QWORD PTR [rcx+0x18]
  405746:	mov    QWORD PTR [rax+0x18],rdx
  40574a:	jmp    0x4062e0
  40574f:	nop
  405750:	repz ret 
  405752:	nop    DWORD PTR [rax+0x0]
  405756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405760:	push   rbx
  405761:	sub    rsp,0x20
  405765:	test   rcx,rcx
  405768:	je     0x405797
  40576a:	mov    edx,DWORD PTR [rcx+0x8]
  40576d:	cmp    DWORD PTR [rcx+0xc],edx
  405770:	mov    rbx,rcx
  405773:	jle    0x405790
  405775:	jmp    0x4057a0
  405777:	nop    WORD PTR [rax+rax*1+0x0]
  405780:	mov    rcx,rbx
  405783:	call   0x405720
  405788:	mov    edx,DWORD PTR [rbx+0x8]
  40578b:	cmp    edx,DWORD PTR [rbx+0xc]
  40578e:	jl     0x4057a0
  405790:	mov    eax,DWORD PTR [rbx+0x10]
  405793:	test   eax,eax
  405795:	jne    0x405780
  405797:	xor    eax,eax
  405799:	add    rsp,0x20
  40579d:	pop    rbx
  40579e:	ret    
  40579f:	nop
  4057a0:	lea    eax,[rdx+0x1]
  4057a3:	mov    rcx,QWORD PTR [rbx]
  4057a6:	mov    DWORD PTR [rbx+0x8],eax
  4057a9:	movsxd rax,edx
  4057ac:	shl    rax,0x5
  4057b0:	lea    rax,[rcx+rax*1]
  4057b4:	add    rsp,0x20
  4057b8:	pop    rbx
  4057b9:	ret    
  4057ba:	nop    WORD PTR [rax+rax*1+0x0]
  4057c0:	push   rsi
  4057c1:	push   rbx
  4057c2:	sub    rsp,0x28
  4057c6:	test   rcx,rcx
  4057c9:	mov    rbx,rcx
  4057cc:	je     0x405803
  4057ce:	mov    rcx,rbx
  4057d1:	call   0x405760
  4057d6:	cmp    DWORD PTR [rax],0x10
  4057d9:	mov    rsi,rax
  4057dc:	je     0x4057f1
  4057de:	lea    rdx,[rip+0x1b5f2]        # 0x420dd7
  4057e5:	lea    rcx,[rip+0x1b5a3]        # 0x420d8f
  4057ec:	call   0x406300
  4057f1:	mov    rdx,QWORD PTR [rsi+0x8]
  4057f5:	mov    rcx,rbx
  4057f8:	add    rsp,0x28
  4057fc:	pop    rbx
  4057fd:	pop    rsi
  4057fe:	jmp    0x405680
  405803:	lea    rdx,[rip+0x1b5c1]        # 0x420dcb
  40580a:	lea    rcx,[rip+0x1b57e]        # 0x420d8f
  405811:	call   0x406300
  405816:	jmp    0x4057ce
  405818:	nop    DWORD PTR [rax+rax*1+0x0]
  405820:	push   rbx
  405821:	sub    rsp,0x20
  405825:	mov    rbx,rcx
  405828:	call   0x405680
  40582d:	mov    DWORD PTR [rbx+0x10],0x1
  405834:	add    rsp,0x20
  405838:	pop    rbx
  405839:	ret    
  40583a:	nop    WORD PTR [rax+rax*1+0x0]
  405840:	push   rsi
  405841:	push   rbx
  405842:	sub    rsp,0x28
  405846:	movsxd rax,DWORD PTR [rcx+0x8]
  40584a:	cmp    eax,DWORD PTR [rcx+0xc]
  40584d:	mov    rsi,rcx
  405850:	mov    rbx,rdx
  405853:	jge    0x4058b0
  405855:	shl    rax,0x5
  405859:	add    rax,QWORD PTR [rsi]
  40585c:	cmp    DWORD PTR [rax],0x1f
  40585f:	je     0x40587c
  405861:	lea    rcx,[rip+0x1b5bd]        # 0x420e25
  405868:	call   0x406300
  40586d:	test   eax,eax
  40586f:	je     0x405890
  405871:	movsxd rax,DWORD PTR [rsi+0x8]
  405875:	shl    rax,0x5
  405879:	add    rax,QWORD PTR [rsi]
  40587c:	mov    DWORD PTR [rax],0x10
  405882:	mov    QWORD PTR [rax+0x8],rbx
  405886:	add    rsp,0x28
  40588a:	pop    rbx
  40588b:	pop    rsi
  40588c:	ret    
  40588d:	nop    DWORD PTR [rax]
  405890:	lea    rdx,[rip+0x1b4b2]        # 0x420d49
  405897:	lea    rcx,[rip+0x1b59c]        # 0x420e3a
  40589e:	mov    r8d,0xe7
  4058a4:	call   0x41da30
  4058a9:	jmp    0x405871
  4058ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4058b0:	lea    rcx,[rip+0x1b53b]        # 0x420df2
  4058b7:	call   0x406300
  4058bc:	test   eax,eax
  4058be:	je     0x4058d0
  4058c0:	movsxd rax,DWORD PTR [rsi+0x8]
  4058c4:	jmp    0x405855
  4058c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058d0:	lea    rdx,[rip+0x1b472]        # 0x420d49
  4058d7:	lea    rcx,[rip+0x1b529]        # 0x420e07
  4058de:	mov    r8d,0xe6
  4058e4:	call   0x41da30
  4058e9:	jmp    0x4058c0
  4058eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4058f0:	push   r12
  4058f2:	push   rbp
  4058f3:	push   rdi
  4058f4:	push   rsi
  4058f5:	push   rbx
  4058f6:	sub    rsp,0x40
  4058fa:	mov    rax,QWORD PTR [rdx]
  4058fd:	mov    edi,DWORD PTR [rdx]
  4058ff:	mov    rbx,rcx
  405902:	mov    rsi,QWORD PTR [rdx+0x10]
  405906:	mov    ebp,DWORD PTR [rdx+0x8]
  405909:	mov    QWORD PTR [rsp+0x20],rax
  40590e:	mov    rax,QWORD PTR [rdx+0x8]
  405912:	cmp    edi,0xc
  405915:	mov    QWORD PTR [rsp+0x28],rax
  40591a:	mov    rax,QWORD PTR [rdx+0x18]
  40591e:	mov    QWORD PTR [rsp+0x38],rax
  405923:	je     0x40592a
  405925:	cmp    edi,0xe
  405928:	jne    0x40594e
  40592a:	lea    ecx,[rbp+0x1]
  40592d:	movsxd r12,ebp
  405930:	movsxd rcx,ecx
  405933:	call   0x4063a0
  405938:	mov    rdx,rsi
  40593b:	mov    r8,r12
  40593e:	mov    rcx,rax
  405941:	call   0x41dbc0
  405946:	mov    BYTE PTR [rax+r12*1],0x0
  40594b:	mov    rsi,rax
  40594e:	mov    DWORD PTR [rsp+0x20],edi
  405952:	mov    rax,QWORD PTR [rsp+0x20]
  405957:	mov    DWORD PTR [rsp+0x28],ebp
  40595b:	mov    QWORD PTR [rbx+0x10],rsi
  40595f:	mov    QWORD PTR [rbx],rax
  405962:	mov    rax,QWORD PTR [rsp+0x28]
  405967:	mov    QWORD PTR [rbx+0x8],rax
  40596b:	mov    rax,QWORD PTR [rsp+0x38]
  405970:	mov    QWORD PTR [rbx+0x18],rax
  405974:	mov    rax,rbx
  405977:	add    rsp,0x40
  40597b:	pop    rbx
  40597c:	pop    rsi
  40597d:	pop    rdi
  40597e:	pop    rbp
  40597f:	pop    r12
  405981:	ret    
  405982:	nop    DWORD PTR [rax+0x0]
  405986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405990:	push   r13
  405992:	push   r12
  405994:	push   rbp
  405995:	push   rdi
  405996:	push   rsi
  405997:	push   rbx
  405998:	sub    rsp,0x48
  40599c:	xor    edi,edi
  40599e:	mov    rbp,rcx
  4059a1:	mov    ecx,DWORD PTR [rcx+0x10]
  4059a4:	lea    r13,[rsp+0x20]
  4059a9:	call   0x415bb0
  4059ae:	cmp    QWORD PTR [rbp+0x10],0x0
  4059b3:	mov    r12,rax
  4059b6:	je     0x405a0c
  4059b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4059c0:	mov    rbx,rdi
  4059c3:	mov    rcx,r13
  4059c6:	mov    rsi,QWORD PTR [r12+0x20]
  4059cb:	shl    rbx,0x5
  4059cf:	add    rdi,0x1
  4059d3:	mov    rdx,rbx
  4059d6:	add    rdx,QWORD PTR [rbp+0x20]
  4059da:	call   0x4058f0
  4059df:	mov    rax,QWORD PTR [rsp+0x20]
  4059e4:	mov    QWORD PTR [rsi+rbx*1],rax
  4059e8:	mov    rax,QWORD PTR [rsp+0x28]
  4059ed:	mov    QWORD PTR [rsi+rbx*1+0x8],rax
  4059f2:	mov    rdx,QWORD PTR [rsp+0x30]
  4059f7:	mov    QWORD PTR [rsi+rbx*1+0x10],rdx
  4059fc:	mov    rdx,QWORD PTR [rsp+0x38]
  405a01:	mov    QWORD PTR [rsi+rbx*1+0x18],rdx
  405a06:	cmp    QWORD PTR [rbp+0x10],rdi
  405a0a:	ja     0x4059c0
  405a0c:	mov    rax,r12
  405a0f:	add    rsp,0x48
  405a13:	pop    rbx
  405a14:	pop    rsi
  405a15:	pop    rdi
  405a16:	pop    rbp
  405a17:	pop    r12
  405a19:	pop    r13
  405a1b:	ret    
  405a1c:	nop    DWORD PTR [rax+0x0]
  405a20:	push   rdi
  405a21:	push   rsi
  405a22:	push   rbx
  405a23:	sub    rsp,0x20
  405a27:	test   rcx,rcx
  405a2a:	mov    rbx,rcx
  405a2d:	mov    rsi,rdx
  405a30:	je     0x405a82
  405a32:	test   rsi,rsi
  405a35:	je     0x405a77
  405a37:	mov    rax,QWORD PTR [rbx+0x10]
  405a3b:	add    rax,QWORD PTR [rsi+0x10]
  405a3f:	mov    rcx,QWORD PTR [rbx+0x20]
  405a43:	shl    rax,0x5
  405a47:	mov    rdx,rax
  405a4a:	call   0x4063f0
  405a4f:	test   rax,rax
  405a52:	mov    rdi,rax
  405a55:	je     0x405aa0
  405a57:	mov    rcx,QWORD PTR [rbx+0x10]
  405a5b:	mov    r8,QWORD PTR [rsi+0x10]
  405a5f:	mov    rdx,QWORD PTR [rsi+0x20]
  405a63:	shl    rcx,0x5
  405a67:	shl    r8,0x5
  405a6b:	add    rcx,rax
  405a6e:	call   0x41dbc0
  405a73:	mov    QWORD PTR [rbx+0x20],rdi
  405a77:	mov    rax,rbx
  405a7a:	add    rsp,0x20
  405a7e:	pop    rbx
  405a7f:	pop    rsi
  405a80:	pop    rdi
  405a81:	ret    
  405a82:	lea    rdx,[rip+0x1b3cf]        # 0x420e58
  405a89:	lea    rcx,[rip+0x1b2ff]        # 0x420d8f
  405a90:	call   0x406300
  405a95:	jmp    0x405a32
  405a97:	nop    WORD PTR [rax+rax*1+0x0]
  405aa0:	xor    ebx,ebx
  405aa2:	jmp    0x405a77
  405aa4:	xchg   ax,ax
  405aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ab0:	push   rsi
  405ab1:	push   rbx
  405ab2:	sub    rsp,0x28
  405ab6:	test   rcx,rcx
  405ab9:	mov    rbx,rcx
  405abc:	mov    rsi,rdx
  405abf:	je     0x405b20
  405ac1:	test   rsi,rsi
  405ac4:	je     0x405b12
  405ac6:	mov    rax,QWORD PTR [rbx+0x10]
  405aca:	mov    rcx,QWORD PTR [rbx+0x20]
  405ace:	lea    rdx,[rax+0x1]
  405ad2:	shl    rdx,0x5
  405ad6:	call   0x4063f0
  405adb:	test   rax,rax
  405ade:	je     0x405b35
  405ae0:	mov    rcx,QWORD PTR [rbx+0x10]
  405ae4:	mov    rdx,QWORD PTR [rsi]
  405ae7:	shl    rcx,0x5
  405aeb:	add    rcx,rax
  405aee:	mov    QWORD PTR [rcx],rdx
  405af1:	mov    rdx,QWORD PTR [rsi+0x8]
  405af5:	mov    QWORD PTR [rcx+0x8],rdx
  405af9:	mov    rdx,QWORD PTR [rsi+0x10]
  405afd:	mov    QWORD PTR [rcx+0x10],rdx
  405b01:	mov    rdx,QWORD PTR [rsi+0x18]
  405b05:	mov    QWORD PTR [rcx+0x18],rdx
  405b09:	add    QWORD PTR [rbx+0x10],0x1
  405b0e:	mov    QWORD PTR [rbx+0x20],rax
  405b12:	mov    rax,rbx
  405b15:	add    rsp,0x28
  405b19:	pop    rbx
  405b1a:	pop    rsi
  405b1b:	ret    
  405b1c:	nop    DWORD PTR [rax+0x0]
  405b20:	lea    rdx,[rip+0x1b33d]        # 0x420e64
  405b27:	lea    rcx,[rip+0x1b261]        # 0x420d8f
  405b2e:	call   0x406300
  405b33:	jmp    0x405ac1
  405b35:	xor    ebx,ebx
  405b37:	jmp    0x405b12
  405b39:	nop    DWORD PTR [rax+0x0]
  405b40:	push   rsi
  405b41:	push   rbx
  405b42:	sub    rsp,0x38
  405b46:	test   rcx,rcx
  405b49:	mov    rsi,rcx
  405b4c:	mov    ebx,edx
  405b4e:	je     0x405bd3
  405b54:	cmp    rbx,QWORD PTR [rsi+0x10]
  405b58:	jae    0x405b92
  405b5a:	test   r8,r8
  405b5d:	je     0x405bb4
  405b5f:	shl    rbx,0x5
  405b63:	mov    rax,QWORD PTR [r8]
  405b66:	mov    rdx,rbx
  405b69:	add    rdx,QWORD PTR [rsi+0x20]
  405b6d:	mov    QWORD PTR [rdx],rax
  405b70:	mov    rax,QWORD PTR [r8+0x8]
  405b74:	mov    QWORD PTR [rdx+0x8],rax
  405b78:	mov    rax,QWORD PTR [r8+0x10]
  405b7c:	mov    QWORD PTR [rdx+0x10],rax
  405b80:	mov    rax,QWORD PTR [r8+0x18]
  405b84:	mov    QWORD PTR [rdx+0x18],rax
  405b88:	mov    rax,rsi
  405b8b:	add    rsp,0x38
  405b8f:	pop    rbx
  405b90:	pop    rsi
  405b91:	ret    
  405b92:	lea    rdx,[rip+0x1b2d6]        # 0x420e6f
  405b99:	lea    rcx,[rip+0x1b1ef]        # 0x420d8f
  405ba0:	mov    QWORD PTR [rsp+0x28],r8
  405ba5:	call   0x406300
  405baa:	mov    r8,QWORD PTR [rsp+0x28]
  405baf:	test   r8,r8
  405bb2:	jne    0x405b5f
  405bb4:	lea    rdx,[rip+0x1b1ea]        # 0x420da5
  405bbb:	lea    rcx,[rip+0x1b1cd]        # 0x420d8f
  405bc2:	mov    QWORD PTR [rsp+0x28],r8
  405bc7:	call   0x406300
  405bcc:	mov    r8,QWORD PTR [rsp+0x28]
  405bd1:	jmp    0x405b5f
  405bd3:	lea    rdx,[rip+0x1b28a]        # 0x420e64
  405bda:	lea    rcx,[rip+0x1b1ae]        # 0x420d8f
  405be1:	mov    QWORD PTR [rsp+0x28],r8
  405be6:	call   0x406300
  405beb:	mov    r8,QWORD PTR [rsp+0x28]
  405bf0:	jmp    0x405b54
  405bf5:	nop
  405bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c00:	xor    eax,eax
  405c02:	test   rcx,rcx
  405c05:	je     0x405c20
  405c07:	cmp    QWORD PTR [rcx+0x10],0x0
  405c0c:	je     0x405c20
  405c0e:	mov    rax,QWORD PTR [rcx+0x20]
  405c12:	mov    eax,DWORD PTR [rax+0x4]
  405c15:	ret    
  405c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c20:	repz ret 
  405c22:	nop    DWORD PTR [rax+0x0]
  405c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c30:	push   rdi
  405c31:	push   rsi
  405c32:	push   rbx
  405c33:	sub    rsp,0x20
  405c37:	mov    rdi,rdx
  405c3a:	movsx  edx,BYTE PTR [rcx]
  405c3d:	mov    rsi,rcx
  405c40:	lea    rbx,[rcx+0x1]
  405c44:	mov    eax,edx
  405c46:	test   al,0xdf
  405c48:	je     0x405ca0
  405c4a:	cmp    edx,0x7d
  405c4d:	je     0x405ca0
  405c4f:	cmp    edx,0x2c
  405c52:	jne    0x405c82
  405c54:	jmp    0x405ca0
  405c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c60:	mov    rsi,rbx
  405c63:	mov    rcx,rdi
  405c66:	add    rbx,0x1
  405c6a:	call   0x416110
  405c6f:	movsx  edx,BYTE PTR [rsi]
  405c72:	mov    eax,edx
  405c74:	test   al,0xdf
  405c76:	je     0x405ca0
  405c78:	cmp    edx,0x2c
  405c7b:	je     0x405ca0
  405c7d:	cmp    edx,0x7d
  405c80:	je     0x405ca0
  405c82:	cmp    edx,0x5c
  405c85:	jne    0x405c60
  405c87:	mov    rcx,rdi
  405c8a:	lea    rbx,[rsi+0x2]
  405c8e:	call   0x416110
  405c93:	movsx  edx,BYTE PTR [rsi+0x1]
  405c97:	test   edx,edx
  405c99:	jne    0x405c60
  405c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  405ca0:	lea    rax,[rbx-0x1]
  405ca4:	add    rsp,0x20
  405ca8:	pop    rbx
  405ca9:	pop    rsi
  405caa:	pop    rdi
  405cab:	ret    
  405cac:	nop    DWORD PTR [rax+0x0]
  405cb0:	push   r13
  405cb2:	push   r12
  405cb4:	push   rbp
  405cb5:	push   rdi
  405cb6:	push   rsi
  405cb7:	push   rbx
  405cb8:	sub    rsp,0x28
  405cbc:	xor    r13d,r13d
  405cbf:	mov    r12,rcx
  405cc2:	mov    rbp,rdx
  405cc5:	movsx  esi,BYTE PTR [r12]
  405cca:	lea    rbx,[r12+0x1]
  405ccf:	test   esi,esi
  405cd1:	je     0x405d32
  405cd3:	cmp    esi,0x20
  405cd6:	je     0x405db0
  405cdc:	cmp    esi,0x2c
  405cdf:	je     0x405db0
  405ce5:	cmp    esi,0x7d
  405ce8:	je     0x405d32
  405cea:	test   r13d,r13d
  405ced:	jne    0x405dc0
  405cf3:	cmp    esi,0x7b
  405cf6:	mov    r13d,0x1
  405cfc:	je     0x405dd8
  405d02:	cmp    esi,0x22
  405d05:	mov    edx,esi
  405d07:	mov    rcx,rbp
  405d0a:	je     0x405d42
  405d0c:	cmp    esi,0x27
  405d0f:	je     0x405d42
  405d11:	call   0x416110
  405d16:	mov    rcx,rbx
  405d19:	mov    rdx,rbp
  405d1c:	call   0x405c30
  405d21:	mov    r12,rax
  405d24:	movsx  esi,BYTE PTR [r12]
  405d29:	lea    rbx,[r12+0x1]
  405d2e:	test   esi,esi
  405d30:	jne    0x405cd3
  405d32:	mov    rax,rbx
  405d35:	add    rsp,0x28
  405d39:	pop    rbx
  405d3a:	pop    rsi
  405d3b:	pop    rdi
  405d3c:	pop    rbp
  405d3d:	pop    r12
  405d3f:	pop    r13
  405d41:	ret    
  405d42:	call   0x416110
  405d47:	movsx  r8d,BYTE PTR [r12+0x1]
  405d4d:	lea    rdi,[r12+0x2]
  405d52:	test   r8d,r8d
  405d55:	jne    0x405d89
  405d57:	jmp    0x405e05
  405d5c:	nop    DWORD PTR [rax+0x0]
  405d60:	cmp    esi,r8d
  405d63:	je     0x405e10
  405d69:	mov    rbx,rdi
  405d6c:	movsx  edx,r8b
  405d70:	mov    rcx,rbp
  405d73:	lea    rdi,[rbx+0x1]
  405d77:	call   0x416110
  405d7c:	movsx  r8d,BYTE PTR [rbx]
  405d80:	test   r8d,r8d
  405d83:	je     0x405e05
  405d89:	cmp    r8d,0x5c
  405d8d:	jne    0x405d60
  405d8f:	mov    edx,0x5c
  405d94:	mov    rcx,rbp
  405d97:	call   0x416110
  405d9c:	movsx  r8d,BYTE PTR [rbx+0x1]
  405da1:	lea    rax,[rbx+0x2]
  405da5:	test   r8d,r8d
  405da8:	je     0x405e05
  405daa:	mov    rbx,rax
  405dad:	jmp    0x405d6c
  405daf:	nop
  405db0:	mov    r12,rbx
  405db3:	jmp    0x405cc5
  405db8:	nop    DWORD PTR [rax+rax*1+0x0]
  405dc0:	lea    rdx,[rip+0x1b0bb]        # 0x420e82
  405dc7:	mov    rcx,rbp
  405dca:	call   0x416200
  405dcf:	cmp    esi,0x7b
  405dd2:	jne    0x405d02
  405dd8:	mov    rcx,rbp
  405ddb:	mov    edx,0x7b
  405de0:	call   0x416110
  405de5:	mov    rdx,rbp
  405de8:	mov    rcx,rbx
  405deb:	call   0x405cb0
  405df0:	mov    edx,0x7d
  405df5:	mov    rcx,rbp
  405df8:	mov    r12,rax
  405dfb:	call   0x416110
  405e00:	jmp    0x405cc5
  405e05:	mov    r12,rdi
  405e08:	jmp    0x405cc5
  405e0d:	nop    DWORD PTR [rax]
  405e10:	mov    edx,esi
  405e12:	mov    rcx,rbp
  405e15:	mov    r12,rdi
  405e18:	call   0x416110
  405e1d:	jmp    0x405cc5
  405e22:	nop    DWORD PTR [rax+0x0]
  405e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e30:	push   rsi
  405e31:	push   rbx
  405e32:	sub    rsp,0x28
  405e36:	test   rcx,rcx
  405e39:	je     0x405e42
  405e3b:	mov    eax,DWORD PTR [rcx+0x8]
  405e3e:	test   eax,eax
  405e40:	jne    0x405e50
  405e42:	add    rsp,0x28
  405e46:	pop    rbx
  405e47:	pop    rsi
  405e48:	ret    
  405e49:	nop    DWORD PTR [rax+0x0]
  405e50:	mov    rbx,rcx
  405e53:	call   0x416430
  405e58:	mov    rdx,rbx
  405e5b:	mov    DWORD PTR [rbx+0x8],0x0
  405e62:	mov    rcx,rax
  405e65:	mov    rsi,rax
  405e68:	call   0x405cb0
  405e6d:	mov    rcx,rbx
  405e70:	call   0x4164d0
  405e75:	mov    rcx,rsi
  405e78:	add    rsp,0x28
  405e7c:	pop    rbx
  405e7d:	pop    rsi
  405e7e:	jmp    0x4062e0
  405e83:	nop    DWORD PTR [rax]
  405e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e90:	push   rbx
  405e91:	sub    rsp,0x20
  405e95:	mov    eax,DWORD PTR [rcx]
  405e97:	mov    rbx,rdx
  405e9a:	cmp    eax,0x69
  405e9d:	je     0x405f20
  405ea3:	mov    rdx,QWORD PTR [rip+0x25a76]        # 0x42b920
  405eaa:	mov    edx,DWORD PTR [rdx]
  405eac:	test   edx,edx
  405eae:	je     0x405eb5
  405eb0:	cmp    eax,0xc
  405eb3:	je     0x405ef0
  405eb5:	cmp    eax,0x2
  405eb8:	je     0x405ef0
  405eba:	mov    ecx,eax
  405ebc:	call   0x40c710
  405ec1:	mov    edx,eax
  405ec3:	test   rbx,rbx
  405ec6:	je     0x405f01
  405ec8:	mov    ecx,DWORD PTR [rbx+0x8]
  405ecb:	call   0x415af0
  405ed0:	test   eax,eax
  405ed2:	jle    0x405f10
  405ed4:	lea    rdx,[rip+0x1afc5]        # 0x420ea0
  405edb:	mov    r8d,eax
  405ede:	mov    rcx,rbx
  405ee1:	add    rsp,0x20
  405ee5:	pop    rbx
  405ee6:	jmp    0x416170
  405eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ef0:	mov    ecx,0x2
  405ef5:	call   0x40c710
  405efa:	test   rbx,rbx
  405efd:	mov    edx,eax
  405eff:	jne    0x405ec8
  405f01:	xor    ecx,ecx
  405f03:	call   0x415af0
  405f08:	test   eax,eax
  405f0a:	jg     0x405ed4
  405f0c:	nop    DWORD PTR [rax+0x0]
  405f10:	add    rsp,0x20
  405f14:	pop    rbx
  405f15:	ret    
  405f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f20:	mov    rax,QWORD PTR [rcx+0x8]
  405f24:	mov    ecx,DWORD PTR [rax+0x5c]
  405f27:	call   0x40c710
  405f2c:	mov    edx,eax
  405f2e:	jmp    0x405ec3
  405f30:	push   rbx
  405f31:	sub    rsp,0x20
  405f35:	mov    rbx,rcx
  405f38:	mov    rdx,rcx
  405f3b:	mov    rcx,QWORD PTR [rip+0x2d81e]        # 0x433760
  405f42:	call   0x416250
  405f47:	test   rbx,rbx
  405f4a:	je     0x405f53
  405f4c:	mov    DWORD PTR [rbx+0x8],0x0
  405f53:	add    rsp,0x20
  405f57:	pop    rbx
  405f58:	ret    
  405f59:	nop    DWORD PTR [rax+0x0]
  405f60:	mov    rdx,rcx
  405f63:	mov    rcx,QWORD PTR [rip+0x2d7f6]        # 0x433760
  405f6a:	jmp    0x416200
  405f6f:	nop
  405f70:	sub    rsp,0x28
  405f74:	mov    rdx,rcx
  405f77:	mov    rcx,QWORD PTR [rip+0x2d7e2]        # 0x433760
  405f7e:	call   0x416200
  405f83:	mov    rcx,QWORD PTR [rip+0x2d7d6]        # 0x433760
  405f8a:	lea    rdx,[rip+0x1aef4]        # 0x420e85
  405f91:	add    rsp,0x28
  405f95:	jmp    0x416200
  405f9a:	nop    WORD PTR [rax+rax*1+0x0]
  405fa0:	push   rbx
  405fa1:	sub    rsp,0x20
  405fa5:	mov    rcx,QWORD PTR [rip+0x2d7b4]        # 0x433760
  405fac:	test   rcx,rcx
  405faf:	je     0x405fb8
  405fb1:	mov    eax,DWORD PTR [rcx+0x8]
  405fb4:	test   eax,eax
  405fb6:	jne    0x405fc0
  405fb8:	add    rsp,0x20
  405fbc:	pop    rbx
  405fbd:	ret    
  405fbe:	xchg   ax,ax
  405fc0:	call   0x4164d0
  405fc5:	mov    rbx,QWORD PTR [rip+0x2e70c]        # 0x4346d8
  405fcc:	call   rbx
  405fce:	lea    rdx,[rax+0x30]
  405fd2:	mov    rax,QWORD PTR [rip+0x2d787]        # 0x433760
  405fd9:	lea    rcx,[rip+0x1aea7]        # 0x420e87
  405fe0:	test   rax,rax
  405fe3:	je     0x405ff0
  405fe5:	mov    rax,QWORD PTR [rax+0x10]
  405fe9:	test   rax,rax
  405fec:	cmovne rcx,rax
  405ff0:	call   0x41dc18
  405ff5:	call   rbx
  405ff7:	lea    rcx,[rax+0x30]
  405ffb:	call   0x41dc38
  406000:	mov    rax,QWORD PTR [rip+0x2d759]        # 0x433760
  406007:	test   rax,rax
  40600a:	je     0x405fb8
  40600c:	mov    DWORD PTR [rax+0x8],0x0
  406013:	add    rsp,0x20
  406017:	pop    rbx
  406018:	ret    
  406019:	nop    DWORD PTR [rax+0x0]
  406020:	sub    rsp,0x38
  406024:	mov    QWORD PTR [rsp+0x50],r8
  406029:	lea    r8,[rsp+0x50]
  40602e:	mov    QWORD PTR [rsp+0x58],r9
  406033:	mov    QWORD PTR [rsp+0x28],r8
  406038:	call   0x404ef0
  40603d:	nop
  40603e:	add    rsp,0x38
  406042:	ret    
  406043:	nop    DWORD PTR [rax]
  406046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406050:	sub    rsp,0x38
  406054:	lea    rax,[rsp+0x50]
  406059:	test   rcx,rcx
  40605c:	mov    QWORD PTR [rsp+0x50],r8
  406061:	mov    QWORD PTR [rsp+0x58],r9
  406066:	mov    QWORD PTR [rsp+0x28],rax
  40606b:	je     0x406074
  40606d:	mov    DWORD PTR [rcx+0x8],0x0
  406074:	mov    r8,QWORD PTR [rsp+0x28]
  406079:	call   0x404ef0
  40607e:	nop
  40607f:	add    rsp,0x38
  406083:	ret    
  406084:	xchg   ax,ax
  406086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406090:	sub    rsp,0x38
  406094:	mov    QWORD PTR [rsp+0x48],rdx
  406099:	mov    rdx,rcx
  40609c:	mov    rcx,QWORD PTR [rip+0x2d6bd]        # 0x433760
  4060a3:	mov    QWORD PTR [rsp+0x50],r8
  4060a8:	lea    r8,[rsp+0x48]
  4060ad:	mov    QWORD PTR [rsp+0x58],r9
  4060b2:	mov    QWORD PTR [rsp+0x28],r8
  4060b7:	call   0x404ef0
  4060bc:	nop
  4060bd:	add    rsp,0x38
  4060c1:	ret    
  4060c2:	nop    DWORD PTR [rax+0x0]
  4060c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060d0:	push   rsi
  4060d1:	push   rbx
  4060d2:	sub    rsp,0x28
  4060d6:	test   rdx,rdx
  4060d9:	mov    esi,ecx
  4060db:	mov    rbx,rdx
  4060de:	je     0x406105
  4060e0:	mov    DWORD PTR [rbx+0x4],esi
  4060e3:	mov    DWORD PTR [rbx],0x10
  4060e9:	xor    ecx,ecx
  4060eb:	call   0x415bb0
  4060f0:	mov    QWORD PTR [rbx+0x8],rax
  4060f4:	mov    rax,rbx
  4060f7:	mov    DWORD PTR [rbx+0x18],0x0
  4060fe:	add    rsp,0x28
  406102:	pop    rbx
  406103:	pop    rsi
  406104:	ret    
  406105:	lea    rdx,[rip+0x1ad7c]        # 0x420e88
  40610c:	lea    rcx,[rip+0x1ac7c]        # 0x420d8f
  406113:	call   0x406300
  406118:	jmp    0x4060e0
  40611a:	nop    WORD PTR [rax+rax*1+0x0]
  406120:	push   rsi
  406121:	push   rbx
  406122:	sub    rsp,0x28
  406126:	test   rdx,rdx
  406129:	mov    esi,ecx
  40612b:	mov    rbx,rdx
  40612e:	je     0x406160
  406130:	mov    rax,rbx
  406133:	mov    DWORD PTR [rbx+0x4],esi
  406136:	mov    DWORD PTR [rbx],0xc
  40613c:	mov    DWORD PTR [rbx+0x8],0x0
  406143:	mov    QWORD PTR [rbx+0x10],0x0
  40614b:	mov    DWORD PTR [rbx+0x18],0x0
  406152:	add    rsp,0x28
  406156:	pop    rbx
  406157:	pop    rsi
  406158:	ret    
  406159:	nop    DWORD PTR [rax+0x0]
  406160:	lea    rdx,[rip+0x1ad21]        # 0x420e88
  406167:	lea    rcx,[rip+0x1ac21]        # 0x420d8f
  40616e:	call   0x406300
  406173:	jmp    0x406130
  406175:	nop
  406176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406180:	push   rdi
  406181:	push   rbx
  406182:	sub    rsp,0x28
  406186:	mov    rax,QWORD PTR [rip+0x2aff3]        # 0x431180
  40618d:	mov    ebx,ecx
  40618f:	test   rax,rax
  406192:	je     0x4061c0
  406194:	lea    ecx,[rbx*4+0x0]
  40619b:	xor    edx,edx
  40619d:	cmp    ecx,0xff
  4061a3:	jg     0x4061b1
  4061a5:	mov    dl,0x40
  4061a7:	sub    edx,ebx
  4061a9:	mov    ecx,edx
  4061ab:	shl    ecx,0x2
  4061ae:	movsxd rdx,ecx
  4061b1:	add    rax,rdx
  4061b4:	add    rsp,0x28
  4061b8:	pop    rbx
  4061b9:	pop    rdi
  4061ba:	ret    
  4061bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4061c0:	mov    ecx,0x101
  4061c5:	call   0x4063a0
  4061ca:	mov    rdx,rax
  4061cd:	mov    QWORD PTR [rip+0x2afac],rax        # 0x431180
  4061d4:	movabs rax,0x2020202020202020
  4061de:	lea    rdi,[rdx+0x8]
  4061e2:	mov    rcx,rdx
  4061e5:	mov    QWORD PTR [rdx],rax
  4061e8:	mov    QWORD PTR [rdx+0xf8],rax
  4061ef:	and    rdi,0xfffffffffffffff8
  4061f3:	sub    rcx,rdi
  4061f6:	add    ecx,0x100
  4061fc:	shr    ecx,0x3
  4061ff:	rep stos QWORD PTR es:[rdi],rax
  406202:	mov    BYTE PTR [rdx+0x100],0x0
  406209:	mov    rax,rdx
  40620c:	jmp    0x406194
  40620e:	xchg   ax,ax
  406210:	push   rbx
  406211:	sub    rsp,0x20
  406215:	mov    rbx,rcx
  406218:	mov    ecx,edx
  40621a:	call   0x406180
  40621f:	mov    rcx,rbx
  406222:	mov    rdx,rax
  406225:	add    rsp,0x20
  406229:	pop    rbx
  40622a:	jmp    0x416200
  40622f:	nop
  406230:	push   rsi
  406231:	push   rbx
  406232:	sub    rsp,0x28
  406236:	mov    rsi,QWORD PTR [rip+0x2d523]        # 0x433760
  40623d:	mov    rbx,rdx
  406240:	call   0x406180
  406245:	mov    rcx,rsi
  406248:	mov    rdx,rax
  40624b:	call   0x416200
  406250:	mov    rcx,QWORD PTR [rip+0x2d509]        # 0x433760
  406257:	mov    rdx,rbx
  40625a:	call   0x416200
  40625f:	mov    rcx,QWORD PTR [rip+0x2d4fa]        # 0x433760
  406266:	lea    rdx,[rip+0x1ac18]        # 0x420e85
  40626d:	add    rsp,0x28
  406271:	pop    rbx
  406272:	pop    rsi
  406273:	jmp    0x416200
  406278:	nop
  406279:	nop
  40627a:	nop
  40627b:	nop
  40627c:	nop
  40627d:	nop
  40627e:	nop
  40627f:	nop
  406280:	push   rsi
  406281:	push   rbx
  406282:	sub    rsp,0x38
  406286:	mov    eax,DWORD PTR [rip+0x2af04]        # 0x431190
  40628c:	mov    QWORD PTR [rsp+0x58],rdx
  406291:	mov    QWORD PTR [rsp+0x60],r8
  406296:	mov    QWORD PTR [rsp+0x68],r9
  40629b:	test   eax,eax
  40629d:	jne    0x4062b0
  40629f:	add    rsp,0x38
  4062a3:	pop    rbx
  4062a4:	pop    rsi
  4062a5:	ret    
  4062a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062b0:	lea    rsi,[rsp+0x58]
  4062b5:	mov    rbx,rcx
  4062b8:	mov    QWORD PTR [rsp+0x28],rsi
  4062bd:	call   QWORD PTR [rip+0x2e415]        # 0x4346d8
  4062c3:	lea    rcx,[rax+0x60]
  4062c7:	mov    r8,rsi
  4062ca:	mov    rdx,rbx
  4062cd:	call   0x41db20
  4062d2:	nop
  4062d3:	add    rsp,0x38
  4062d7:	pop    rbx
  4062d8:	pop    rsi
  4062d9:	ret    
  4062da:	nop    WORD PTR [rax+rax*1+0x0]
  4062e0:	test   rcx,rcx
  4062e3:	je     0x4062f0
  4062e5:	jmp    0x41dc08
  4062ea:	nop    WORD PTR [rax+rax*1+0x0]
  4062f0:	repz ret 
  4062f2:	nop    DWORD PTR [rax+0x0]
  4062f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406300:	push   rdi
  406301:	push   rsi
  406302:	push   rbx
  406303:	sub    rsp,0x30
  406307:	test   rcx,rcx
  40630a:	mov    QWORD PTR [rsp+0x58],rdx
  40630f:	mov    QWORD PTR [rsp+0x60],r8
  406314:	mov    QWORD PTR [rsp+0x68],r9
  406319:	mov    rsi,rcx
  40631c:	je     0x406370
  40631e:	lea    rdi,[rsp+0x58]
  406323:	mov    rbx,QWORD PTR [rip+0x2e3ae]        # 0x4346d8
  40632a:	mov    QWORD PTR [rsp+0x28],rdi
  40632f:	call   rbx
  406331:	lea    rcx,[rax+0x60]
  406335:	mov    rdx,rsi
  406338:	mov    r8,rdi
  40633b:	call   0x41db20
  406340:	call   rbx
  406342:	lea    rdx,[rax+0x60]
  406346:	mov    ecx,0xa
  40634b:	call   0x41dc20
  406350:	call   rbx
  406352:	lea    rdx,[rax+0x60]
  406356:	mov    ecx,0xa
  40635b:	call   0x41dc20
  406360:	call   rbx
  406362:	lea    rcx,[rax+0x60]
  406366:	call   0x41dc38
  40636b:	call   0x41dc68
  406370:	mov    rbx,QWORD PTR [rip+0x2e361]        # 0x4346d8
  406377:	call   rbx
  406379:	lea    rcx,[rip+0x1ab60]        # 0x420ee0
  406380:	lea    r9,[rax+0x60]
  406384:	mov    r8d,0x5
  40638a:	mov    edx,0x1
  40638f:	call   0x41dbf8
  406394:	jmp    0x406350
  406396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063a0:	push   rsi
  4063a1:	push   rbx
  4063a2:	sub    rsp,0x28
  4063a6:	mov    edx,0x1
  4063ab:	mov    rsi,rcx
  4063ae:	call   0x41dc58
  4063b3:	test   rax,rax
  4063b6:	mov    rbx,rax
  4063b9:	je     0x4063d2
  4063bb:	mov    r8,rsi
  4063be:	xor    edx,edx
  4063c0:	mov    rcx,rax
  4063c3:	call   0x41dbb0
  4063c8:	mov    rax,rbx
  4063cb:	add    rsp,0x28
  4063cf:	pop    rbx
  4063d0:	pop    rsi
  4063d1:	ret    
  4063d2:	lea    rcx,[rip+0x1ab0d]        # 0x420ee6
  4063d9:	call   0x406300
  4063de:	nop
  4063df:	nop
  4063e0:	imul   rcx,rdx
  4063e4:	jmp    0x4063a0
  4063e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063f0:	sub    rsp,0x28
  4063f4:	call   0x41db98
  4063f9:	test   rax,rax
  4063fc:	je     0x406403
  4063fe:	add    rsp,0x28
  406402:	ret    
  406403:	lea    rcx,[rip+0x1aaf1]        # 0x420efb
  40640a:	call   0x406300
  40640f:	nop
  406410:	cmp    ecx,0x5c
  406413:	mov    rax,rdx
  406416:	je     0x406452
  406418:	cmp    r8d,ecx
  40641b:	je     0x406461
  40641d:	cmp    ecx,0x7f
  406420:	je     0x406431
  406422:	cmp    ecx,0x1f
  406425:	jbe    0x406431
  406427:	lea    rdx,[rax+0x1]
  40642b:	mov    BYTE PTR [rax],cl
  40642d:	mov    BYTE PTR [rdx],0x0
  406430:	ret    
  406431:	test   cl,0x80
  406434:	jne    0x406427
  406436:	lea    edx,[rcx-0x8]
  406439:	cmp    edx,0x5
  40643c:	ja     0x406505
  406442:	lea    rcx,[rip+0x1aaf7]        # 0x420f40
  406449:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40644d:	add    rcx,rdx
  406450:	jmp    rcx
  406452:	mov    BYTE PTR [rdx],0x5c
  406455:	lea    rdx,[rdx+0x2]
  406459:	mov    BYTE PTR [rax+0x1],0x5c
  40645d:	mov    BYTE PTR [rdx],0x0
  406460:	ret    
  406461:	mov    BYTE PTR [rdx],0x5c
  406464:	lea    rdx,[rdx+0x2]
  406468:	mov    BYTE PTR [rax+0x1],r8b
  40646c:	mov    BYTE PTR [rdx],0x0
  40646f:	ret    
  406470:	mov    r10d,0x665c
  406476:	mov    BYTE PTR [rax+0x2],0x0
  40647a:	lea    rdx,[rax+0x2]
  40647e:	mov    WORD PTR [rax],r10w
  406482:	jmp    0x40642d
  406484:	mov    r8d,0x725c
  40648a:	mov    BYTE PTR [rax+0x2],0x0
  40648e:	lea    rdx,[rax+0x2]
  406492:	mov    WORD PTR [rax],r8w
  406496:	jmp    0x40642d
  406498:	nop    DWORD PTR [rax+rax*1+0x0]
  4064a0:	mov    r11d,0x625c
  4064a6:	mov    BYTE PTR [rax+0x2],0x0
  4064aa:	lea    rdx,[rax+0x2]
  4064ae:	mov    WORD PTR [rax],r11w
  4064b2:	jmp    0x40642d
  4064b7:	nop    WORD PTR [rax+rax*1+0x0]
  4064c0:	mov    ecx,0x745c
  4064c5:	mov    BYTE PTR [rax+0x2],0x0
  4064c9:	lea    rdx,[rax+0x2]
  4064cd:	mov    WORD PTR [rax],cx
  4064d0:	jmp    0x40642d
  4064d5:	mov    r9d,0x6e5c
  4064db:	mov    BYTE PTR [rax+0x2],0x0
  4064df:	lea    rdx,[rax+0x2]
  4064e3:	mov    WORD PTR [rax],r9w
  4064e7:	jmp    0x40642d
  4064ec:	nop    DWORD PTR [rax+0x0]
  4064f0:	mov    edx,0x765c
  4064f5:	mov    BYTE PTR [rax+0x2],0x0
  4064f9:	mov    WORD PTR [rax],dx
  4064fc:	lea    rdx,[rax+0x2]
  406500:	jmp    0x40642d
  406505:	mov    edx,ecx
  406507:	mov    BYTE PTR [rax],0x5c
  40650a:	shr    edx,0x6
  40650d:	and    edx,0x3
  406510:	add    edx,0x30
  406513:	mov    BYTE PTR [rax+0x1],dl
  406516:	mov    edx,ecx
  406518:	and    ecx,0x7
  40651b:	shr    edx,0x3
  40651e:	add    ecx,0x30
  406521:	and    edx,0x7
  406524:	mov    BYTE PTR [rax+0x3],cl
  406527:	add    edx,0x30
  40652a:	mov    BYTE PTR [rax+0x2],dl
  40652d:	lea    rdx,[rax+0x4]
  406531:	jmp    0x40642d
  406536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406540:	push   r12
  406542:	push   rbp
  406543:	push   rdi
  406544:	push   rsi
  406545:	push   rbx
  406546:	sub    rsp,0x30
  40654a:	mov    rbx,rcx
  40654d:	lea    rcx,[r8*4+0x1]
  406555:	mov    rdi,r8
  406558:	mov    r12d,edx
  40655b:	call   0x415600
  406560:	test   rdi,rdi
  406563:	mov    rbp,rax
  406566:	mov    BYTE PTR [rax],0x0
  406569:	je     0x406595
  40656b:	lea    rsi,[rsp+0x20]
  406570:	add    rdi,rbx
  406573:	movsx  ecx,BYTE PTR [rbx]
  406576:	mov    r8d,r12d
  406579:	mov    rdx,rsi
  40657c:	add    rbx,0x1
  406580:	call   0x406410
  406585:	mov    rdx,rsi
  406588:	mov    rcx,rbp
  40658b:	call   0x41db70
  406590:	cmp    rbx,rdi
  406593:	jne    0x406573
  406595:	mov    rax,rbp
  406598:	add    rsp,0x30
  40659c:	pop    rbx
  40659d:	pop    rsi
  40659e:	pop    rdi
  40659f:	pop    rbp
  4065a0:	pop    r12
  4065a2:	ret    
  4065a3:	nop    DWORD PTR [rax]
  4065a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065b0:	push   rbx
  4065b1:	sub    rsp,0x20
  4065b5:	mov    rbx,rcx
  4065b8:	call   0x41db50
  4065bd:	mov    edx,0x22
  4065c2:	mov    r8,rax
  4065c5:	mov    rcx,rbx
  4065c8:	add    rsp,0x20
  4065cc:	pop    rbx
  4065cd:	jmp    0x406540
  4065d2:	nop    DWORD PTR [rax+0x0]
  4065d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065e0:	push   rdi
  4065e1:	push   rsi
  4065e2:	push   rbx
  4065e3:	sub    rsp,0x20
  4065e7:	test   rcx,rcx
  4065ea:	mov    rbx,rcx
  4065ed:	mov    esi,edx
  4065ef:	je     0x406645
  4065f1:	mov    rcx,QWORD PTR [rcx+0x10]
  4065f5:	mov    r8d,DWORD PTR [rbx+0x8]
  4065f9:	lea    rax,[rip+0x1a958]        # 0x420f58
  406600:	mov    edx,0x22
  406605:	test   rcx,rcx
  406608:	cmove  rcx,rax
  40660c:	call   0x406540
  406611:	mov    DWORD PTR [rbx+0x8],0x0
  406618:	mov    rdi,rax
  40661b:	movsx  esi,sil
  40661f:	mov    rcx,rbx
  406622:	mov    edx,esi
  406624:	call   0x416110
  406629:	mov    rdx,rdi
  40662c:	mov    rcx,rbx
  40662f:	call   0x416200
  406634:	mov    edx,esi
  406636:	mov    rcx,rbx
  406639:	add    rsp,0x20
  40663d:	pop    rbx
  40663e:	pop    rsi
  40663f:	pop    rdi
  406640:	jmp    0x416110
  406645:	lea    rcx,[rip+0x1a90c]        # 0x420f58
  40664c:	xor    r8d,r8d
  40664f:	mov    edx,0x22
  406654:	call   0x406540
  406659:	mov    rdi,rax
  40665c:	jmp    0x40661b
  40665e:	xchg   ax,ax
  406660:	push   rdi
  406661:	push   rsi
  406662:	push   rbx
  406663:	sub    rsp,0x20
  406667:	mov    edi,edx
  406669:	mov    esi,ecx
  40666b:	mov    ecx,0x5
  406670:	call   0x415600
  406675:	mov    r8d,edi
  406678:	mov    rbx,rax
  40667b:	mov    rdx,rax
  40667e:	mov    ecx,esi
  406680:	call   0x406410
  406685:	mov    rax,rbx
  406688:	add    rsp,0x20
  40668c:	pop    rbx
  40668d:	pop    rsi
  40668e:	pop    rdi
  40668f:	ret    
  406690:	push   r13
  406692:	push   r12
  406694:	push   rbp
  406695:	push   rdi
  406696:	push   rsi
  406697:	push   rbx
  406698:	sub    rsp,0x28
  40669c:	mov    rbx,r8
  40669f:	mov    rdi,rcx
  4066a2:	call   0x415f30
  4066a7:	test   rbx,rbx
  4066aa:	mov    rbp,rax
  4066ad:	lea    r12,[rdi+rbx*1]
  4066b1:	je     0x40670c
  4066b3:	movsx  esi,BYTE PTR [rdi]
  4066b6:	lea    eax,[rsi-0x20]
  4066b9:	mov    ebx,esi
  4066bb:	cmp    eax,0x5e
  4066be:	ja     0x406780
  4066c4:	movsx  eax,BYTE PTR [rip+0x18c95]        # 0x41f360
  4066cb:	test   al,al
  4066cd:	je     0x4066f9
  4066cf:	cmp    esi,eax
  4066d1:	lea    rbx,[rip+0x18c68]        # 0x41f340
  4066d8:	je     0x406750
  4066da:	lea    r9,[rip+0x18c7f]        # 0x41f360
  4066e1:	jmp    0x4066e8
  4066e3:	cmp    esi,r8d
  4066e6:	je     0x406750
  4066e8:	add    r9,0x1
  4066ec:	movsx  r8d,BYTE PTR [r9]
  4066f0:	add    rbx,0x8
  4066f4:	test   r8b,r8b
  4066f7:	jne    0x4066e3
  4066f9:	mov    edx,esi
  4066fb:	mov    rcx,rbp
  4066fe:	call   0x416110
  406703:	add    rdi,0x1
  406707:	cmp    rdi,r12
  40670a:	jne    0x4066b3
  40670c:	test   rbp,rbp
  40670f:	lea    rcx,[rip+0x1a842]        # 0x420f58
  406716:	je     0x40672a
  406718:	mov    rax,QWORD PTR [rbp+0x10]
  40671c:	lea    rcx,[rip+0x1a835]        # 0x420f58
  406723:	test   rax,rax
  406726:	cmovne rcx,rax
  40672a:	call   0x4157c0
  40672f:	mov    rcx,rbp
  406732:	mov    rbx,rax
  406735:	call   0x416010
  40673a:	mov    rax,rbx
  40673d:	add    rsp,0x28
  406741:	pop    rbx
  406742:	pop    rsi
  406743:	pop    rdi
  406744:	pop    rbp
  406745:	pop    r12
  406747:	pop    r13
  406749:	ret    
  40674a:	nop    WORD PTR [rax+rax*1+0x0]
  406750:	mov    rcx,rbp
  406753:	mov    edx,0x26
  406758:	call   0x416110
  40675d:	mov    rdx,QWORD PTR [rbx]
  406760:	mov    rcx,rbp
  406763:	call   0x416200
  406768:	mov    edx,0x3b
  40676d:	mov    rcx,rbp
  406770:	call   0x416110
  406775:	jmp    0x406703
  406777:	nop    WORD PTR [rax+rax*1+0x0]
  406780:	lea    r13,[rip+0x1aa09]        # 0x421190
  406787:	lea    rdx,[rip+0x1a7cb]        # 0x420f59
  40678e:	shr    esi,0x4
  406791:	mov    rcx,rbp
  406794:	and    esi,0xf
  406797:	and    ebx,0xf
  40679a:	call   0x416200
  40679f:	movsx  edx,BYTE PTR [r13+rsi*1+0x0]
  4067a5:	mov    rcx,rbp
  4067a8:	call   0x416110
  4067ad:	movsx  edx,BYTE PTR [r13+rbx*1+0x0]
  4067b3:	mov    rcx,rbp
  4067b6:	call   0x416110
  4067bb:	mov    edx,0x3b
  4067c0:	mov    rcx,rbp
  4067c3:	call   0x416110
  4067c8:	jmp    0x406703
  4067cd:	nop    DWORD PTR [rax]
  4067d0:	push   r15
  4067d2:	push   r14
  4067d4:	push   r13
  4067d6:	push   r12
  4067d8:	push   rbp
  4067d9:	push   rdi
  4067da:	push   rsi
  4067db:	push   rbx
  4067dc:	sub    rsp,0x48
  4067e0:	mov    rbx,r8
  4067e3:	mov    rdi,rcx
  4067e6:	mov    r14d,edx
  4067e9:	lea    r12,[rbx+rbx*1+0x2]
  4067ee:	call   0x415f30
  4067f3:	mov    rcx,r12
  4067f6:	mov    rsi,rax
  4067f9:	call   0x4063a0
  4067fe:	lea    rdx,[rdi+rbx*1]
  406802:	lea    rcx,[rsp+0x30]
  406807:	lea    r9,[rax+r12*1-0x2]
  40680c:	lea    r8,[rsp+0x38]
  406811:	mov    DWORD PTR [rsp+0x20],0x1
  406819:	mov    rbp,rax
  40681c:	mov    QWORD PTR [rsp+0x30],rdi
  406821:	mov    QWORD PTR [rsp+0x38],rax
  406826:	call   0x41aaf0
  40682b:	test   eax,eax
  40682d:	jne    0x406a52
  406833:	mov    rdi,QWORD PTR [rsp+0x38]
  406838:	xor    r15d,r15d
  40683b:	lea    r13,[rip+0x1a756]        # 0x420f98
  406842:	sub    rdi,rbp
  406845:	sar    rdi,1
  406848:	jne    0x40686c
  40684a:	jmp    0x4068c0
  40684c:	nop    DWORD PTR [rax+0x0]
  406850:	cmp    r14d,ebx
  406853:	je     0x406a40
  406859:	mov    edx,ebx
  40685b:	mov    rcx,rsi
  40685e:	call   0x416110
  406863:	add    r15,0x1
  406867:	cmp    rdi,r15
  40686a:	je     0x4068c0
  40686c:	movzx  ebx,WORD PTR [rbp+r15*2+0x0]
  406872:	cmp    bx,0x7f
  406876:	ja     0x4069e2
  40687c:	lea    eax,[rbx-0x20]
  40687f:	cmp    ax,0x5e
  406883:	jbe    0x406850
  406885:	lea    eax,[rbx-0x8]
  406888:	cmp    ax,0x5
  40688c:	ja     0x406970
  406892:	movzx  eax,ax
  406895:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40689a:	add    rax,r13
  40689d:	jmp    rax
  40689f:	nop
  4068a0:	lea    rdx,[rip+0x1a6ea]        # 0x420f91
  4068a7:	mov    rcx,rsi
  4068aa:	add    r15,0x1
  4068ae:	call   0x416200
  4068b3:	cmp    rdi,r15
  4068b6:	jne    0x40686c
  4068b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068c0:	mov    rcx,rbp
  4068c3:	call   0x4062e0
  4068c8:	test   rsi,rsi
  4068cb:	lea    rcx,[rip+0x1a686]        # 0x420f58
  4068d2:	je     0x4068e6
  4068d4:	mov    rax,QWORD PTR [rsi+0x10]
  4068d8:	lea    rcx,[rip+0x1a679]        # 0x420f58
  4068df:	test   rax,rax
  4068e2:	cmovne rcx,rax
  4068e6:	call   0x4157c0
  4068eb:	mov    rcx,rsi
  4068ee:	mov    rbx,rax
  4068f1:	call   0x416010
  4068f6:	mov    rax,rbx
  4068f9:	add    rsp,0x48
  4068fd:	pop    rbx
  4068fe:	pop    rsi
  4068ff:	pop    rdi
  406900:	pop    rbp
  406901:	pop    r12
  406903:	pop    r13
  406905:	pop    r14
  406907:	pop    r15
  406909:	ret    
  40690a:	nop    WORD PTR [rax+rax*1+0x0]
  406910:	lea    rdx,[rip+0x1a67d]        # 0x420f94
  406917:	mov    rcx,rsi
  40691a:	call   0x416200
  40691f:	jmp    0x406863
  406924:	lea    rdx,[rip+0x1a663]        # 0x420f8e
  40692b:	mov    rcx,rsi
  40692e:	call   0x416200
  406933:	jmp    0x406863
  406938:	nop    DWORD PTR [rax+rax*1+0x0]
  406940:	lea    rdx,[rip+0x1a641]        # 0x420f88
  406947:	mov    rcx,rsi
  40694a:	call   0x416200
  40694f:	jmp    0x406863
  406954:	lea    rdx,[rip+0x1a630]        # 0x420f8b
  40695b:	mov    rcx,rsi
  40695e:	call   0x416200
  406963:	jmp    0x406863
  406968:	nop    DWORD PTR [rax+rax*1+0x0]
  406970:	mov    edx,0x5c
  406975:	mov    rcx,rsi
  406978:	lea    r12,[rip+0x1a811]        # 0x421190
  40697f:	call   0x416110
  406984:	mov    edx,0x75
  406989:	mov    rcx,rsi
  40698c:	call   0x416110
  406991:	mov    edx,0x30
  406996:	mov    rcx,rsi
  406999:	call   0x416110
  40699e:	mov    edx,0x30
  4069a3:	mov    rcx,rsi
  4069a6:	call   0x416110
  4069ab:	mov    eax,ebx
  4069ad:	shr    ax,0x4
  4069b1:	and    eax,0xfff
  4069b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069c0:	movsx  edx,BYTE PTR [r12+rax*1]
  4069c5:	mov    rcx,rsi
  4069c8:	and    ebx,0xf
  4069cb:	call   0x416110
  4069d0:	movsx  edx,BYTE PTR [r12+rbx*1]
  4069d5:	mov    rcx,rsi
  4069d8:	call   0x416110
  4069dd:	jmp    0x406863
  4069e2:	mov    edx,0x5c
  4069e7:	mov    rcx,rsi
  4069ea:	lea    r12,[rip+0x1a79f]        # 0x421190
  4069f1:	call   0x416110
  4069f6:	mov    edx,0x75
  4069fb:	mov    rcx,rsi
  4069fe:	call   0x416110
  406a03:	mov    eax,ebx
  406a05:	mov    rcx,rsi
  406a08:	shr    ax,0xc
  406a0c:	and    eax,0xf
  406a0f:	movsx  edx,BYTE PTR [r12+rax*1]
  406a14:	call   0x416110
  406a19:	mov    eax,ebx
  406a1b:	mov    rcx,rsi
  406a1e:	shr    ax,0x8
  406a22:	and    eax,0xf
  406a25:	movsx  edx,BYTE PTR [r12+rax*1]
  406a2a:	call   0x416110
  406a2f:	mov    eax,ebx
  406a31:	shr    ax,0x4
  406a35:	and    eax,0xf
  406a38:	jmp    0x4069c0
  406a3a:	nop    WORD PTR [rax+rax*1+0x0]
  406a40:	mov    edx,0x5c
  406a45:	mov    rcx,rsi
  406a48:	call   0x416110
  406a4d:	jmp    0x406859
  406a52:	lea    rcx,[rip+0x1a507]        # 0x420f60
  406a59:	mov    rdx,rdi
  406a5c:	call   0x40b3d0
  406a61:	xor    eax,eax
  406a63:	jmp    0x4068f9
  406a68:	nop    DWORD PTR [rax+rax*1+0x0]
  406a70:	push   rbx
  406a71:	sub    rsp,0x20
  406a75:	mov    rbx,rcx
  406a78:	call   0x41db50
  406a7d:	mov    edx,0x22
  406a82:	mov    r8,rax
  406a85:	mov    rcx,rbx
  406a88:	add    rsp,0x20
  406a8c:	pop    rbx
  406a8d:	jmp    0x4067d0
  406a92:	nop    DWORD PTR [rax+0x0]
  406a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406aa0:	push   rsi
  406aa1:	push   rbx
  406aa2:	sub    rsp,0x48
  406aa6:	cmp    ecx,0x27
  406aa9:	mov    rbx,rdx
  406aac:	mov    BYTE PTR [rdx],0x0
  406aaf:	je     0x406b50
  406ab5:	lea    eax,[rcx-0x20]
  406ab8:	cmp    eax,0x5e
  406abb:	ja     0x406ad0
  406abd:	lea    rax,[rdx+0x1]
  406ac1:	mov    BYTE PTR [rdx],cl
  406ac3:	mov    BYTE PTR [rax],0x0
  406ac6:	mov    rax,rbx
  406ac9:	add    rsp,0x48
  406acd:	pop    rbx
  406ace:	pop    rsi
  406acf:	ret    
  406ad0:	lea    rsi,[rsp+0x20]
  406ad5:	lea    r8,[rip+0x1a4d4]        # 0x420fb0
  406adc:	mov    r9d,ecx
  406adf:	mov    edx,0x20
  406ae4:	mov    rcx,rsi
  406ae7:	call   0x40b5e0
  406aec:	mov    rdx,rsi
  406aef:	mov    rcx,rbx
  406af2:	call   0x41db70
  406af7:	mov    rax,rsi
  406afa:	mov    r9d,DWORD PTR [rax]
  406afd:	add    rax,0x4
  406b01:	lea    r8d,[r9-0x1010101]
  406b08:	not    r9d
  406b0b:	and    r8d,r9d
  406b0e:	and    r8d,0x80808080
  406b15:	je     0x406afa
  406b17:	mov    edx,r8d
  406b1a:	shr    edx,0x10
  406b1d:	test   r8d,0x8080
  406b24:	cmove  r8d,edx
  406b28:	lea    rdx,[rax+0x2]
  406b2c:	cmove  rax,rdx
  406b30:	add    r8b,r8b
  406b33:	sbb    rax,0x3
  406b37:	sub    rax,rsi
  406b3a:	add    rax,rbx
  406b3d:	mov    BYTE PTR [rax],0x0
  406b40:	mov    rax,rbx
  406b43:	add    rsp,0x48
  406b47:	pop    rbx
  406b48:	pop    rsi
  406b49:	ret    
  406b4a:	nop    WORD PTR [rax+rax*1+0x0]
  406b50:	lea    rax,[rdx+0x2]
  406b54:	mov    BYTE PTR [rdx],0x27
  406b57:	mov    BYTE PTR [rdx+0x1],0x27
  406b5b:	mov    BYTE PTR [rax],0x0
  406b5e:	mov    rax,rbx
  406b61:	add    rsp,0x48
  406b65:	pop    rbx
  406b66:	pop    rsi
  406b67:	ret    
  406b68:	nop    DWORD PTR [rax+rax*1+0x0]
  406b70:	push   r15
  406b72:	push   r14
  406b74:	push   r13
  406b76:	push   r12
  406b78:	push   rbp
  406b79:	push   rdi
  406b7a:	push   rsi
  406b7b:	push   rbx
  406b7c:	sub    rsp,0x48
  406b80:	test   rcx,rcx
  406b83:	mov    rsi,rcx
  406b86:	je     0x406c80
  406b8c:	mov    r12d,DWORD PTR [rcx+0x8]
  406b90:	test   r12d,r12d
  406b93:	je     0x406c80
  406b99:	lea    ecx,[r12+0x1]
  406b9e:	mov    ebx,r12d
  406ba1:	lea    rdi,[rsp+0x20]
  406ba6:	call   0x4063a0
  406bab:	mov    r13,rax
  406bae:	mov    rax,QWORD PTR [rsi+0x10]
  406bb2:	lea    rdx,[rip+0x1a39f]        # 0x420f58
  406bb9:	mov    r8,rbx
  406bbc:	mov    rcx,r13
  406bbf:	lea    r14,[rdi+0x2]
  406bc3:	test   rax,rax
  406bc6:	cmovne rdx,rax
  406bca:	call   0x41dbc0
  406bcf:	mov    BYTE PTR [r13+rbx*1+0x0],0x0
  406bd5:	xor    eax,eax
  406bd7:	mov    DWORD PTR [rsi+0x8],0x0
  406bde:	xor    ebx,ebx
  406be0:	jmp    0x406c08
  406be2:	cmp    r8b,al
  406be5:	jb     0x406c40
  406be7:	mov    rdx,rdi
  406bea:	mov    ecx,r15d
  406bed:	call   0x406aa0
  406bf2:	mov    rdx,rdi
  406bf5:	mov    rcx,rsi
  406bf8:	call   0x416200
  406bfd:	add    rbx,0x1
  406c01:	mov    eax,ebp
  406c03:	cmp    r12d,ebx
  406c06:	jbe    0x406c51
  406c08:	movzx  r15d,BYTE PTR [r13+rbx*1+0x0]
  406c0e:	lea    edx,[r15-0x20]
  406c12:	cmp    edx,0x5e
  406c15:	seta   r8b
  406c19:	test   rbx,rbx
  406c1c:	movzx  ebp,r8b
  406c20:	je     0x406c91
  406c22:	test   r8b,r8b
  406c25:	je     0x406be2
  406c27:	test   eax,eax
  406c29:	jne    0x406be2
  406c2b:	mov    edx,0x27
  406c30:	mov    rcx,rsi
  406c33:	call   0x416110
  406c38:	jmp    0x406be7
  406c3a:	nop    WORD PTR [rax+rax*1+0x0]
  406c40:	lea    rdx,[rip+0x1a37c]        # 0x420fc3
  406c47:	mov    rcx,rsi
  406c4a:	call   0x416200
  406c4f:	jmp    0x406be7
  406c51:	test   ebp,ebp
  406c53:	je     0x406c70
  406c55:	add    rsp,0x48
  406c59:	pop    rbx
  406c5a:	pop    rsi
  406c5b:	pop    rdi
  406c5c:	pop    rbp
  406c5d:	pop    r12
  406c5f:	pop    r13
  406c61:	pop    r14
  406c63:	pop    r15
  406c65:	ret    
  406c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c70:	mov    edx,0x27
  406c75:	mov    rcx,rsi
  406c78:	call   0x416110
  406c7d:	jmp    0x406c55
  406c7f:	nop
  406c80:	lea    rdx,[rip+0x1a334]        # 0x420fbb
  406c87:	mov    rcx,rsi
  406c8a:	call   0x416200
  406c8f:	jmp    0x406c55
  406c91:	test   r8b,r8b
  406c94:	je     0x406c2b
  406c96:	mov    rdx,rdi
  406c99:	mov    ecx,r15d
  406c9c:	call   0x406aa0
  406ca1:	mov    rdx,r14
  406ca4:	mov    rcx,rsi
  406ca7:	call   0x416200
  406cac:	jmp    0x406bfd
  406cb1:	nop    DWORD PTR [rax+rax*1+0x0]
  406cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cc0:	push   r13
  406cc2:	push   r12
  406cc4:	push   rbp
  406cc5:	push   rdi
  406cc6:	push   rsi
  406cc7:	push   rbx
  406cc8:	sub    rsp,0x38
  406ccc:	xor    eax,eax
  406cce:	cmp    BYTE PTR [rcx],0x2f
  406cd1:	mov    rdi,rcx
  406cd4:	sete   al
  406cd7:	add    rdi,rax
  406cda:	mov    rax,QWORD PTR [rip+0x24a9f]        # 0x42b780
  406ce1:	mov    eax,DWORD PTR [rax]
  406ce3:	cmp    eax,0x2
  406ce6:	je     0x406da0
  406cec:	jbe    0x406d50
  406cee:	cmp    eax,0x3
  406cf1:	je     0x406d10
  406cf3:	cmp    eax,0x4
  406cf6:	jne    0x406d70
  406cf8:	mov    rcx,rdi
  406cfb:	call   0x406cc0
  406d00:	add    rsp,0x38
  406d04:	pop    rbx
  406d05:	pop    rsi
  406d06:	pop    rdi
  406d07:	pop    rbp
  406d08:	pop    r12
  406d0a:	pop    r13
  406d0c:	ret    
  406d0d:	nop    DWORD PTR [rax]
  406d10:	call   0x415f30
  406d15:	mov    rdx,rdi
  406d18:	mov    rsi,rax
  406d1b:	mov    rcx,rax
  406d1e:	call   0x416200
  406d23:	mov    rcx,rsi
  406d26:	call   0x406b70
  406d2b:	mov    rcx,rsi
  406d2e:	call   0x416430
  406d33:	mov    rcx,rsi
  406d36:	mov    rbx,rax
  406d39:	call   0x416010
  406d3e:	mov    rax,rbx
  406d41:	add    rsp,0x38
  406d45:	pop    rbx
  406d46:	pop    rsi
  406d47:	pop    rdi
  406d48:	pop    rbp
  406d49:	pop    r12
  406d4b:	pop    r13
  406d4d:	ret    
  406d4e:	xchg   ax,ax
  406d50:	cmp    eax,0x1
  406d53:	jne    0x406d70
  406d55:	mov    rcx,rdi
  406d58:	call   0x4157c0
  406d5d:	add    rsp,0x38
  406d61:	pop    rbx
  406d62:	pop    rsi
  406d63:	pop    rdi
  406d64:	pop    rbp
  406d65:	pop    r12
  406d67:	pop    r13
  406d69:	ret    
  406d6a:	nop    WORD PTR [rax+rax*1+0x0]
  406d70:	lea    rdx,[rip+0x1a262]        # 0x420fd9
  406d77:	lea    rcx,[rip+0x1a265]        # 0x420fe3
  406d7e:	mov    r8d,0x104
  406d84:	call   0x41da30
  406d89:	xor    eax,eax
  406d8b:	add    rsp,0x38
  406d8f:	pop    rbx
  406d90:	pop    rsi
  406d91:	pop    rdi
  406d92:	pop    rbp
  406d93:	pop    r12
  406d95:	pop    r13
  406d97:	ret    
  406d98:	nop    DWORD PTR [rax+rax*1+0x0]
  406da0:	mov    eax,DWORD PTR [rip+0x2b05a]        # 0x431e00
  406da6:	test   eax,eax
  406da8:	je     0x406e90
  406dae:	mov    rcx,QWORD PTR [rip+0x2a40b]        # 0x4311c0
  406db5:	test   rcx,rcx
  406db8:	je     0x406dc1
  406dba:	mov    DWORD PTR [rcx+0x8],0x0
  406dc1:	movzx  r9d,BYTE PTR [rdi]
  406dc5:	lea    eax,[r9-0x30]
  406dc9:	cmp    al,0x9
  406dcb:	jbe    0x406e50
  406dd1:	add    rdi,0x1
  406dd5:	test   r9d,r9d
  406dd8:	je     0x406e02
  406dda:	lea    rsi,[rip+0x2a81f]        # 0x431600
  406de1:	mov    r9d,r9d
  406de4:	add    rdi,0x1
  406de8:	mov    rdx,QWORD PTR [rsi+r9*8]
  406dec:	call   0x416200
  406df1:	movzx  r9d,BYTE PTR [rdi-0x1]
  406df6:	mov    rcx,QWORD PTR [rip+0x2a3c3]        # 0x4311c0
  406dfd:	test   r9d,r9d
  406e00:	jne    0x406de1
  406e02:	test   rcx,rcx
  406e05:	lea    rbx,[rip+0x1a14c]        # 0x420f58
  406e0c:	je     0x406e20
  406e0e:	mov    rbx,QWORD PTR [rcx+0x10]
  406e12:	lea    rax,[rip+0x1a13f]        # 0x420f58
  406e19:	test   rbx,rbx
  406e1c:	cmove  rbx,rax
  406e20:	xor    edx,edx
  406e22:	call   0x4160c0
  406e27:	cmp    eax,0x5f
  406e2a:	sete   al
  406e2d:	movzx  eax,al
  406e30:	add    rbx,rax
  406e33:	mov    rcx,rbx
  406e36:	call   0x4157c0
  406e3b:	add    rsp,0x38
  406e3f:	pop    rbx
  406e40:	pop    rsi
  406e41:	pop    rdi
  406e42:	pop    rbp
  406e43:	pop    r12
  406e45:	pop    r13
  406e47:	ret    
  406e48:	nop    DWORD PTR [rax+rax*1+0x0]
  406e50:	lea    rbx,[rsp+0x20]
  406e55:	lea    r8,[rip+0x1a173]        # 0x420fcf
  406e5c:	mov    edx,0x10
  406e61:	add    rdi,0x1
  406e65:	mov    rcx,rbx
  406e68:	call   QWORD PTR [rip+0x2d8d2]        # 0x434740
  406e6e:	mov    rcx,QWORD PTR [rip+0x2a34b]        # 0x4311c0
  406e75:	mov    rdx,rbx
  406e78:	call   0x416200
  406e7d:	movzx  r9d,BYTE PTR [rdi]
  406e81:	mov    rcx,QWORD PTR [rip+0x2a338]        # 0x4311c0
  406e88:	jmp    0x406dd1
  406e8d:	nop    DWORD PTR [rax]
  406e90:	lea    rsi,[rip+0x2a769]        # 0x431600
  406e97:	xor    ebx,ebx
  406e99:	call   0x415f30
  406e9e:	mov    DWORD PTR [rip+0x2a324],0x8        # 0x4311cc
  406ea8:	mov    QWORD PTR [rip+0x2a311],rax        # 0x4311c0
  406eaf:	mov    DWORD PTR [rip+0x2a30f],0x4        # 0x4311c8
  406eb9:	nop    DWORD PTR [rax+0x0]
  406ec0:	mov    ecx,0x2
  406ec5:	call   0x4063a0
  406eca:	mov    BYTE PTR [rax],bl
  406ecc:	mov    BYTE PTR [rax+0x1],0x0
  406ed0:	mov    QWORD PTR [rsi+rbx*8],rax
  406ed4:	add    rbx,0x1
  406ed8:	cmp    rbx,0x80
  406edf:	jne    0x406ec0
  406ee1:	lea    rbx,[rip+0x1a418]        # 0x421300
  406ee8:	lea    r12,[rip+0x1a611]        # 0x421500
  406eef:	nop
  406ef0:	movsx  rbp,BYTE PTR [rbx]
  406ef4:	add    rbx,0x10
  406ef8:	mov    rcx,QWORD PTR [rsi+rbp*8]
  406efc:	call   0x4062e0
  406f01:	mov    rax,QWORD PTR [rbx-0x8]
  406f05:	cmp    rbx,r12
  406f08:	mov    QWORD PTR [rsi+rbp*8],rax
  406f0c:	jne    0x406ef0
  406f0e:	mov    r8d,DWORD PTR [rip+0x2a2b3]        # 0x4311c8
  406f15:	mov    rbp,QWORD PTR [rip+0x2d824]        # 0x434740
  406f1c:	lea    r12,[rip+0x2aadd]        # 0x431a00
  406f23:	mov    ebx,0x80
  406f28:	nop    DWORD PTR [rax+rax*1+0x0]
  406f30:	add    r8d,0x1
  406f34:	add    r12,0x8
  406f38:	movsxd rcx,r8d
  406f3b:	call   0x4063a0
  406f40:	mov    r13,rax
  406f43:	mov    eax,DWORD PTR [rip+0x2a27f]        # 0x4311c8
  406f49:	mov    r9d,ebx
  406f4c:	lea    r8,[rip+0x1a074]        # 0x420fc7
  406f53:	mov    rcx,r13
  406f56:	add    ebx,0x1
  406f59:	lea    edx,[rax+0x1]
  406f5c:	movsxd rdx,edx
  406f5f:	call   rbp
  406f61:	movsxd rax,DWORD PTR [rip+0x2a260]        # 0x4311c8
  406f68:	mov    BYTE PTR [r13+rax*1+0x0],0x0
  406f6e:	mov    QWORD PTR [r12-0x8],r13
  406f73:	cmp    ebx,0x100
  406f79:	mov    r8,rax
  406f7c:	jne    0x406f30
  406f7e:	lea    rbp,[rip+0x2a27b]        # 0x431200
  406f85:	xor    ebx,ebx
  406f87:	nop    WORD PTR [rax+rax*1+0x0]
  406f90:	mov    rcx,QWORD PTR [rsi+rbx*2]
  406f94:	call   0x41db50
  406f99:	mov    DWORD PTR [rbp+rbx*1+0x0],eax
  406f9d:	add    rbx,0x4
  406fa1:	cmp    rbx,0x400
  406fa8:	jne    0x406f90
  406faa:	mov    DWORD PTR [rip+0x2ae4c],0x1        # 0x431e00
  406fb4:	jmp    0x406dae
  406fb9:	nop    DWORD PTR [rax+0x0]
  406fc0:	push   rdi
  406fc1:	push   rsi
  406fc2:	push   rbx
  406fc3:	sub    rsp,0x20
  406fc7:	mov    rsi,rcx
  406fca:	call   0x41db50
  406fcf:	lea    ecx,[rax*8+0x0]
  406fd6:	sub    ecx,eax
  406fd8:	add    ecx,0x1
  406fdb:	movsxd rcx,ecx
  406fde:	call   0x415600
  406fe3:	mov    rdi,rax
  406fe6:	mov    BYTE PTR [rax],0x0
  406fe9:	mov    rbx,rax
  406fec:	add    rsi,0x1
  406ff0:	movsx  edx,BYTE PTR [rsi-0x1]
  406ff4:	test   edx,edx
  406ff6:	mov    ecx,edx
  406ff8:	je     0x40701c
  406ffa:	cmp    edx,0x2f
  406ffd:	je     0x407030
  406fff:	cmp    edx,0x2e
  407002:	je     0x407050
  407004:	add    rsi,0x1
  407008:	mov    BYTE PTR [rbx],cl
  40700a:	mov    BYTE PTR [rbx+0x1],0x0
  40700e:	movsx  edx,BYTE PTR [rsi-0x1]
  407012:	add    rbx,0x1
  407016:	test   edx,edx
  407018:	mov    ecx,edx
  40701a:	jne    0x406ffa
  40701c:	mov    rax,rdi
  40701f:	add    rsp,0x20
  407023:	pop    rbx
  407024:	pop    rsi
  407025:	pop    rdi
  407026:	ret    
  407027:	nop    WORD PTR [rax+rax*1+0x0]
  407030:	mov    rcx,rbx
  407033:	add    rbx,0x7
  407037:	call   0x41db50
  40703c:	movabs rcx,0x5f4853414c535f
  407046:	mov    QWORD PTR [rbx+rax*1-0x7],rcx
  40704b:	jmp    0x406fec
  40704d:	nop    DWORD PTR [rax]
  407050:	mov    rcx,rbx
  407053:	call   0x41db50
  407058:	lea    rdx,[rbx+rax*1]
  40705c:	mov    eax,0x5f
  407061:	add    rbx,0x5
  407065:	mov    DWORD PTR [rdx],0x544f445f
  40706b:	mov    WORD PTR [rdx+0x4],ax
  40706f:	jmp    0x406fec
  407074:	xchg   ax,ax
  407076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407080:	push   rsi
  407081:	push   rbx
  407082:	sub    rsp,0x28
  407086:	movsx  ebx,BYTE PTR [rcx]
  407089:	movsx  esi,BYTE PTR [rcx+0x1]
  40708d:	lea    rcx,[rip+0x19f51]        # 0x420fe5
  407094:	mov    edx,ebx
  407096:	call   0x41db68
  40709b:	test   rax,rax
  40709e:	je     0x407100
  4070a0:	lea    rcx,[rip+0x19f3e]        # 0x420fe5
  4070a7:	mov    edx,esi
  4070a9:	call   0x41db68
  4070ae:	test   rax,rax
  4070b1:	je     0x407100
  4070b3:	cmp    ebx,0x60
  4070b6:	jle    0x4070e0
  4070b8:	sub    ebx,0x57
  4070bb:	shl    ebx,0x4
  4070be:	cmp    esi,0x60
  4070c1:	jg     0x4070f3
  4070c3:	lea    eax,[rsi+0x20]
  4070c6:	or     esi,eax
  4070c8:	cmp    esi,0x39
  4070cb:	jg     0x4070f3
  4070cd:	lea    eax,[rsi-0x30]
  4070d0:	add    rsp,0x28
  4070d4:	pop    rbx
  4070d5:	pop    rsi
  4070d6:	ret    
  4070d7:	nop    WORD PTR [rax+rax*1+0x0]
  4070e0:	lea    eax,[rbx+0x20]
  4070e3:	cmp    eax,0x39
  4070e6:	jg     0x407107
  4070e8:	sub    ebx,0x10
  4070eb:	shl    ebx,0x4
  4070ee:	cmp    esi,0x60
  4070f1:	jle    0x4070c3
  4070f3:	lea    eax,[rsi-0x57]
  4070f6:	or     eax,ebx
  4070f8:	add    rsp,0x28
  4070fc:	pop    rbx
  4070fd:	pop    rsi
  4070fe:	ret    
  4070ff:	nop
  407100:	mov    eax,0xffffffff
  407105:	jmp    0x4070d0
  407107:	mov    ebx,eax
  407109:	jmp    0x4070b8
  40710b:	nop    DWORD PTR [rax+rax*1+0x0]
  407110:	push   rdi
  407111:	push   rsi
  407112:	push   rbx
  407113:	sub    rsp,0x20
  407117:	movsx  esi,BYTE PTR [rcx]
  40711a:	movsx  edi,BYTE PTR [rcx+0x1]
  40711e:	movsx  ebx,BYTE PTR [rcx+0x2]
  407122:	lea    rcx,[rip+0x19ed3]        # 0x420ffc
  407129:	mov    edx,esi
  40712b:	call   0x41db68
  407130:	test   rax,rax
  407133:	je     0x407180
  407135:	lea    rcx,[rip+0x19ec0]        # 0x420ffc
  40713c:	mov    edx,edi
  40713e:	call   0x41db68
  407143:	test   rax,rax
  407146:	je     0x407180
  407148:	lea    rcx,[rip+0x19ead]        # 0x420ffc
  40714f:	mov    edx,ebx
  407151:	call   0x41db68
  407156:	test   rax,rax
  407159:	je     0x407180
  40715b:	sub    esi,0x30
  40715e:	lea    eax,[rdi*8-0x180]
  407165:	sub    ebx,0x30
  407168:	shl    esi,0x6
  40716b:	or     eax,esi
  40716d:	or     eax,ebx
  40716f:	add    rsp,0x20
  407173:	pop    rbx
  407174:	pop    rsi
  407175:	pop    rdi
  407176:	ret    
  407177:	nop    WORD PTR [rax+rax*1+0x0]
  407180:	mov    eax,0xffffffff
  407185:	jmp    0x40716f
  407187:	nop    WORD PTR [rax+rax*1+0x0]
  407190:	push   r13
  407192:	push   r12
  407194:	push   rbp
  407195:	push   rdi
  407196:	push   rsi
  407197:	push   rbx
  407198:	sub    rsp,0x38
  40719c:	lea    r13,[rip+0x19e79]        # 0x42101c
  4071a3:	movsxd r8,r8d
  4071a6:	mov    r12,rcx
  4071a9:	mov    rbp,rdx
  4071ac:	lea    rdi,[rdx+r8*1]
  4071b0:	mov    rsi,rcx
  4071b3:	mov    rbx,rdx
  4071b6:	movzx  r10d,BYTE PTR [rbx]
  4071ba:	test   r10b,r10b
  4071bd:	je     0x4071de
  4071bf:	cmp    rbx,rdi
  4071c2:	jae    0x4071de
  4071c4:	cmp    r10b,0x5c
  4071c8:	je     0x4071f4
  4071ca:	add    rbx,0x1
  4071ce:	mov    BYTE PTR [rsi],r10b
  4071d1:	add    rsi,0x1
  4071d5:	movzx  r10d,BYTE PTR [rbx]
  4071d9:	test   r10b,r10b
  4071dc:	jne    0x4071bf
  4071de:	mov    rax,rsi
  4071e1:	mov    BYTE PTR [rsi],0x0
  4071e4:	sub    rax,r12
  4071e7:	add    rsp,0x38
  4071eb:	pop    rbx
  4071ec:	pop    rsi
  4071ed:	pop    rdi
  4071ee:	pop    rbp
  4071ef:	pop    r12
  4071f1:	pop    r13
  4071f3:	ret    
  4071f4:	movzx  eax,BYTE PTR [rbx+0x1]
  4071f8:	lea    rcx,[rbx+0x1]
  4071fc:	lea    r10d,[rax-0x22]
  407200:	cmp    r10b,0x56
  407204:	ja     0x407310
  40720a:	movzx  r10d,r10b
  40720e:	movsxd r8,DWORD PTR [r13+r10*4+0x0]
  407213:	add    r8,r13
  407216:	jmp    r8
  407219:	nop    DWORD PTR [rax+0x0]
  407220:	test   r9d,r9d
  407223:	je     0x40731f
  407229:	add    rbx,0x2
  40722d:	mov    BYTE PTR [rsi],al
  40722f:	add    rsi,0x1
  407233:	jmp    0x4071b6
  407235:	mov    BYTE PTR [rsi],0xb
  407238:	add    rbx,0x2
  40723c:	add    rsi,0x1
  407240:	jmp    0x4071b6
  407245:	mov    BYTE PTR [rsi],0x9
  407248:	add    rbx,0x2
  40724c:	add    rsi,0x1
  407250:	jmp    0x4071b6
  407255:	mov    BYTE PTR [rsi],0xd
  407258:	add    rbx,0x2
  40725c:	add    rsi,0x1
  407260:	jmp    0x4071b6
  407265:	mov    BYTE PTR [rsi],0xa
  407268:	add    rbx,0x2
  40726c:	add    rsi,0x1
  407270:	jmp    0x4071b6
  407275:	mov    BYTE PTR [rsi],0xc
  407278:	add    rbx,0x2
  40727c:	add    rsi,0x1
  407280:	jmp    0x4071b6
  407285:	mov    BYTE PTR [rsi],0x8
  407288:	add    rbx,0x2
  40728c:	add    rsi,0x1
  407290:	jmp    0x4071b6
  407295:	mov    BYTE PTR [rsi],0x7
  407298:	add    rbx,0x2
  40729c:	add    rsi,0x1
  4072a0:	jmp    0x4071b6
  4072a5:	mov    BYTE PTR [rsi],0x5c
  4072a8:	add    rbx,0x2
  4072ac:	add    rsi,0x1
  4072b0:	jmp    0x4071b6
  4072b5:	mov    BYTE PTR [rsi],0x7f
  4072b8:	add    rbx,0x2
  4072bc:	add    rsi,0x1
  4072c0:	jmp    0x4071b6
  4072c5:	test   r9d,r9d
  4072c8:	jne    0x407229
  4072ce:	mov    DWORD PTR [rsp+0x2c],r9d
  4072d3:	call   0x407110
  4072d8:	test   eax,eax
  4072da:	mov    r9d,DWORD PTR [rsp+0x2c]
  4072df:	js     0x407337
  4072e1:	add    rbx,0x4
  4072e5:	jmp    0x40722d
  4072ea:	nop    WORD PTR [rax+rax*1+0x0]
  4072f0:	mov    BYTE PTR [rsi],0x27
  4072f3:	add    rbx,0x2
  4072f7:	add    rsi,0x1
  4072fb:	jmp    0x4071b6
  407300:	mov    BYTE PTR [rsi],0x22
  407303:	add    rbx,0x2
  407307:	add    rsi,0x1
  40730b:	jmp    0x4071b6
  407310:	mov    BYTE PTR [rsi],al
  407312:	add    rbx,0x2
  407316:	add    rsi,0x1
  40731a:	jmp    0x4071b6
  40731f:	mov    DWORD PTR [rsp+0x2c],r9d
  407324:	add    rbx,0x3
  407328:	call   0x407080
  40732d:	mov    r9d,DWORD PTR [rsp+0x2c]
  407332:	jmp    0x40722d
  407337:	lea    rcx,[rip+0x19cc7]        # 0x421005
  40733e:	mov    rdx,rbp
  407341:	mov    DWORD PTR [rsp+0x2c],r9d
  407346:	call   0x40b3d0
  40734b:	xor    eax,eax
  40734d:	mov    r9d,DWORD PTR [rsp+0x2c]
  407352:	jmp    0x4072e1
  407354:	nop
  407355:	nop
  407356:	nop
  407357:	nop
  407358:	nop
  407359:	nop
  40735a:	nop
  40735b:	nop
  40735c:	nop
  40735d:	nop
  40735e:	nop
  40735f:	nop
  407360:	push   rdi
  407361:	push   rsi
  407362:	push   rbx
  407363:	sub    rsp,0x30
  407367:	mov    rdi,rcx
  40736a:	call   0x415f30
  40736f:	mov    rbx,QWORD PTR [rip+0x242fa]        # 0x42b670
  407376:	lea    rdx,[rsp+0x28]
  40737b:	mov    rsi,rax
  40737e:	mov    QWORD PTR [rsp+0x28],0x0
  407387:	mov    rcx,QWORD PTR [rbx]
  40738a:	call   0x401530
  40738f:	mov    rcx,QWORD PTR [rsp+0x28]
  407394:	call   0x416530
  407399:	call   0x416500
  40739e:	mov    rcx,QWORD PTR [rbx]
  4073a1:	mov    rdx,rax
  4073a4:	call   0x401550
  4073a9:	mov    rdx,QWORD PTR [rbx]
  4073ac:	lea    r8,[rip+0x23cd]        # 0x409780
  4073b3:	mov    r9,rsi
  4073b6:	mov    rcx,rdi
  4073b9:	call   0x401dc0
  4073be:	mov    rcx,rsi
  4073c1:	call   0x416010
  4073c6:	nop
  4073c7:	add    rsp,0x30
  4073cb:	pop    rbx
  4073cc:	pop    rsi
  4073cd:	pop    rdi
  4073ce:	ret    
  4073cf:	nop
  4073d0:	sub    rsp,0x38
  4073d4:	cmp    ecx,0xc
  4073d7:	ja     0x4074b0
  4073dd:	lea    rax,[rip+0x1a1c4]        # 0x4215a8
  4073e4:	mov    ecx,ecx
  4073e6:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4073ea:	add    rax,rdx
  4073ed:	jmp    rax
  4073ef:	nop
  4073f0:	lea    rax,[rip+0x1a109]        # 0x421500
  4073f7:	nop    WORD PTR [rax+rax*1+0x0]
  407400:	add    rsp,0x38
  407404:	ret    
  407405:	lea    rax,[rip+0x1a104]        # 0x421510
  40740c:	jmp    0x407400
  40740e:	xchg   ax,ax
  407410:	lea    rax,[rip+0x1a102]        # 0x421519
  407417:	jmp    0x407400
  407419:	nop    DWORD PTR [rax+0x0]
  407420:	lea    rax,[rip+0x1a0f9]        # 0x421520
  407427:	jmp    0x407400
  407429:	nop    DWORD PTR [rax+0x0]
  407430:	lea    rax,[rip+0x1a0f2]        # 0x421529
  407437:	jmp    0x407400
  407439:	nop    DWORD PTR [rax+0x0]
  407440:	lea    rax,[rip+0x1a0ec]        # 0x421533
  407447:	jmp    0x407400
  407449:	nop    DWORD PTR [rax+0x0]
  407450:	lea    rax,[rip+0x1a0e5]        # 0x42153c
  407457:	jmp    0x407400
  407459:	nop    DWORD PTR [rax+0x0]
  407460:	lea    rax,[rip+0x1a0df]        # 0x421546
  407467:	jmp    0x407400
  407469:	nop    DWORD PTR [rax+0x0]
  407470:	lea    rax,[rip+0x1a0d7]        # 0x42154e
  407477:	jmp    0x407400
  407479:	nop    DWORD PTR [rax+0x0]
  407480:	lea    rax,[rip+0x1a0d0]        # 0x421557
  407487:	jmp    0x407400
  40748c:	nop    DWORD PTR [rax+0x0]
  407490:	lea    rax,[rip+0x1a0ca]        # 0x421561
  407497:	jmp    0x407400
  40749c:	nop    DWORD PTR [rax+0x0]
  4074a0:	lea    rax,[rip+0x1a061]        # 0x421508
  4074a7:	jmp    0x407400
  4074ac:	nop    DWORD PTR [rax+0x0]
  4074b0:	lea    rcx,[rip+0x1a0b4]        # 0x42156b
  4074b7:	call   0x406300
  4074bc:	mov    edx,eax
  4074be:	xor    eax,eax
  4074c0:	test   edx,edx
  4074c2:	jne    0x407400
  4074c8:	lea    rdx,[rip+0x1a0b2]        # 0x421581
  4074cf:	lea    rcx,[rip+0x1a0b2]        # 0x421588
  4074d6:	mov    r8d,0x212
  4074dc:	mov    QWORD PTR [rsp+0x28],rax
  4074e1:	call   0x41da30
  4074e6:	mov    rax,QWORD PTR [rsp+0x28]
  4074eb:	jmp    0x407400
  4074f0:	sub    rsp,0x38
  4074f4:	cmp    ecx,0xc
  4074f7:	ja     0x4075d0
  4074fd:	lea    rax,[rip+0x1a19c]        # 0x4216a0
  407504:	mov    edx,ecx
  407506:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40750a:	add    rax,rdx
  40750d:	jmp    rax
  40750f:	nop
  407510:	lea    rax,[rip+0x1a0c5]        # 0x4215dc
  407517:	nop    WORD PTR [rax+rax*1+0x0]
  407520:	add    rsp,0x38
  407524:	ret    
  407525:	lea    rax,[rip+0x1a0c1]        # 0x4215ed
  40752c:	jmp    0x407520
  40752e:	xchg   ax,ax
  407530:	lea    rax,[rip+0x1a0bc]        # 0x4215f3
  407537:	jmp    0x407520
  407539:	nop    DWORD PTR [rax+0x0]
  407540:	lea    rax,[rip+0x1a0b0]        # 0x4215f7
  407547:	jmp    0x407520
  407549:	nop    DWORD PTR [rax+0x0]
  407550:	lea    rax,[rip+0x1a0a6]        # 0x4215fd
  407557:	jmp    0x407520
  407559:	nop    DWORD PTR [rax+0x0]
  407560:	lea    rax,[rip+0x1a09d]        # 0x421604
  407567:	jmp    0x407520
  407569:	nop    DWORD PTR [rax+0x0]
  407570:	lea    rax,[rip+0x1a09b]        # 0x421612
  407577:	jmp    0x407520
  407579:	nop    DWORD PTR [rax+0x0]
  407580:	lea    rax,[rip+0x1a09a]        # 0x421621
  407587:	jmp    0x407520
  407589:	nop    DWORD PTR [rax+0x0]
  407590:	lea    rax,[rip+0x1a097]        # 0x42162e
  407597:	jmp    0x407520
  407599:	nop    DWORD PTR [rax+0x0]
  4075a0:	lea    rax,[rip+0x1a098]        # 0x42163f
  4075a7:	jmp    0x407520
  4075ac:	nop    DWORD PTR [rax+0x0]
  4075b0:	lea    rax,[rip+0x1a09b]        # 0x421652
  4075b7:	jmp    0x407520
  4075bc:	nop    DWORD PTR [rax+0x0]
  4075c0:	lea    rax,[rip+0x1a01a]        # 0x4215e1
  4075c7:	jmp    0x407520
  4075cc:	nop    DWORD PTR [rax+0x0]
  4075d0:	mov    edx,ecx
  4075d2:	lea    rcx,[rip+0x1a07f]        # 0x421658
  4075d9:	call   0x406300
  4075de:	mov    edx,eax
  4075e0:	xor    eax,eax
  4075e2:	test   edx,edx
  4075e4:	jne    0x407520
  4075ea:	lea    rdx,[rip+0x19f90]        # 0x421581
  4075f1:	lea    rcx,[rip+0x1a080]        # 0x421678
  4075f8:	mov    r8d,0x239
  4075fe:	mov    QWORD PTR [rsp+0x28],rax
  407603:	call   0x41da30
  407608:	mov    rax,QWORD PTR [rsp+0x28]
  40760d:	jmp    0x407520
  407612:	nop    DWORD PTR [rax+0x0]
  407616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407620:	sub    rsp,0x28
  407624:	cmp    ecx,0xc
  407627:	ja     0x407700
  40762d:	lea    rax,[rip+0x1a0f4]        # 0x421728
  407634:	mov    edx,ecx
  407636:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40763a:	add    rax,rdx
  40763d:	jmp    rax
  40763f:	nop
  407640:	lea    rax,[rip+0x1a08d]        # 0x4216d4
  407647:	nop    WORD PTR [rax+rax*1+0x0]
  407650:	add    rsp,0x28
  407654:	ret    
  407655:	lea    rax,[rip+0x19f91]        # 0x4215ed
  40765c:	jmp    0x407650
  40765e:	xchg   ax,ax
  407660:	lea    rax,[rip+0x19f8c]        # 0x4215f3
  407667:	jmp    0x407650
  407669:	nop    DWORD PTR [rax+0x0]
  407670:	lea    rax,[rip+0x19f80]        # 0x4215f7
  407677:	jmp    0x407650
  407679:	nop    DWORD PTR [rax+0x0]
  407680:	lea    rax,[rip+0x19f76]        # 0x4215fd
  407687:	jmp    0x407650
  407689:	nop    DWORD PTR [rax+0x0]
  407690:	lea    rax,[rip+0x1a048]        # 0x4216df
  407697:	jmp    0x407650
  407699:	nop    DWORD PTR [rax+0x0]
  4076a0:	lea    rax,[rip+0x1a03e]        # 0x4216e5
  4076a7:	jmp    0x407650
  4076a9:	nop    DWORD PTR [rax+0x0]
  4076b0:	lea    rax,[rip+0x1a035]        # 0x4216ec
  4076b7:	jmp    0x407650
  4076b9:	nop    DWORD PTR [rax+0x0]
  4076c0:	lea    rax,[rip+0x1a02a]        # 0x4216f1
  4076c7:	jmp    0x407650
  4076c9:	nop    DWORD PTR [rax+0x0]
  4076d0:	lea    rax,[rip+0x1a023]        # 0x4216fa
  4076d7:	jmp    0x407650
  4076dc:	nop    DWORD PTR [rax+0x0]
  4076e0:	lea    rax,[rip+0x1a01d]        # 0x421704
  4076e7:	jmp    0x407650
  4076ec:	nop    DWORD PTR [rax+0x0]
  4076f0:	lea    rax,[rip+0x19fe2]        # 0x4216d9
  4076f7:	jmp    0x407650
  4076fc:	nop    DWORD PTR [rax+0x0]
  407700:	mov    edx,ecx
  407702:	lea    rcx,[rip+0x1a002]        # 0x42170b
  407709:	call   0x40b3d0
  40770e:	xor    eax,eax
  407710:	jmp    0x407650
  407715:	nop
  407716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407720:	push   rbx
  407721:	sub    rsp,0x20
  407725:	cmp    QWORD PTR [rcx+0x18],0x0
  40772a:	mov    rbx,rcx
  40772d:	je     0x407760
  40772f:	cmp    QWORD PTR [rcx+0x10],0x0
  407734:	je     0x407760
  407736:	mov    eax,DWORD PTR [rbx+0x2108]
  40773c:	test   eax,eax
  40773e:	jne    0x407750
  407740:	mov    rcx,QWORD PTR [rbx+0x18]
  407744:	add    rsp,0x20
  407748:	pop    rbx
  407749:	jmp    0x406cc0
  40774e:	xchg   ax,ax
  407750:	mov    rcx,QWORD PTR [rbx+0x10]
  407754:	add    rsp,0x20
  407758:	pop    rbx
  407759:	jmp    0x406cc0
  40775e:	xchg   ax,ax
  407760:	lea    rdx,[rip+0x19e1a]        # 0x421581
  407767:	lea    rcx,[rip+0x19ff2]        # 0x421760
  40776e:	mov    r8d,0x4c3
  407774:	call   0x41da30
  407779:	jmp    0x407736
  40777b:	nop    DWORD PTR [rax+rax*1+0x0]
  407780:	push   rsi
  407781:	push   rbx
  407782:	sub    rsp,0x28
  407786:	call   0x407720
  40778b:	mov    rcx,rax
  40778e:	mov    rsi,rax
  407791:	call   0x41db50
  407796:	lea    rcx,[rax+0x5]
  40779a:	call   0x415600
  40779f:	mov    rdx,rsi
  4077a2:	mov    rbx,rax
  4077a5:	mov    rcx,rax
  4077a8:	call   0x41db58
  4077ad:	mov    rcx,rbx
  4077b0:	call   0x41db50
  4077b5:	add    rax,rbx
  4077b8:	mov    DWORD PTR [rax],0x6d69645f
  4077be:	mov    BYTE PTR [rax+0x4],0x0
  4077c2:	mov    rax,rbx
  4077c5:	add    rsp,0x28
  4077c9:	pop    rbx
  4077ca:	pop    rsi
  4077cb:	ret    
  4077cc:	nop    DWORD PTR [rax+0x0]
  4077d0:	push   rsi
  4077d1:	push   rbx
  4077d2:	sub    rsp,0x28
  4077d6:	call   0x407720
  4077db:	mov    rcx,rax
  4077de:	mov    rsi,rax
  4077e1:	call   0x41db50
  4077e6:	lea    rcx,[rax+0x4]
  4077ea:	call   0x415600
  4077ef:	mov    rdx,rsi
  4077f2:	mov    rbx,rax
  4077f5:	mov    rcx,rax
  4077f8:	call   0x41db58
  4077fd:	mov    rcx,rbx
  407800:	call   0x41db50
  407805:	mov    DWORD PTR [rbx+rax*1],0x64695f
  40780c:	mov    rax,rbx
  40780f:	add    rsp,0x28
  407813:	pop    rbx
  407814:	pop    rsi
  407815:	ret    
  407816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407820:	push   rsi
  407821:	push   rbx
  407822:	sub    rsp,0x28
  407826:	mov    rax,QWORD PTR [rip+0x240f3]        # 0x42b920
  40782d:	mov    rbx,rcx
  407830:	mov    eax,DWORD PTR [rax]
  407832:	test   eax,eax
  407834:	jne    0x4078b2
  407836:	test   rcx,rcx
  407839:	jne    0x407850
  40783b:	mov    rax,QWORD PTR [rip+0x2407e]        # 0x42b8c0
  407842:	mov    rbx,QWORD PTR [rax]
  407845:	test   rbx,rbx
  407848:	jne    0x407850
  40784a:	jmp    0x40784a
  40784c:	nop    DWORD PTR [rax+0x0]
  407850:	cmp    DWORD PTR [rbx+0x8],0x64
  407854:	je     0x407869
  407856:	lea    rdx,[rip+0x19f2e]        # 0x42178b
  40785d:	lea    rcx,[rip+0x19f42]        # 0x4217a6
  407864:	call   0x406300
  407869:	mov    rcx,rbx
  40786c:	call   0x407720
  407871:	mov    rcx,rax
  407874:	mov    rsi,rax
  407877:	call   0x41db50
  40787c:	lea    rcx,[rax+0x5]
  407880:	call   0x415600
  407885:	mov    rdx,rsi
  407888:	mov    rbx,rax
  40788b:	mov    rcx,rax
  40788e:	call   0x41db58
  407893:	mov    rcx,rbx
  407896:	call   0x41db50
  40789b:	add    rax,rbx
  40789e:	mov    DWORD PTR [rax],0x7072675f
  4078a4:	mov    BYTE PTR [rax+0x4],0x0
  4078a8:	mov    rax,rbx
  4078ab:	add    rsp,0x28
  4078af:	pop    rbx
  4078b0:	pop    rsi
  4078b1:	ret    
  4078b2:	lea    rax,[rip+0x19ecd]        # 0x421786
  4078b9:	jmp    0x4078ab
  4078bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4078c0:	push   rsi
  4078c1:	push   rbx
  4078c2:	sub    rsp,0x28
  4078c6:	mov    rax,QWORD PTR [rip+0x23ff3]        # 0x42b8c0
  4078cd:	mov    rcx,QWORD PTR [rax]
  4078d0:	call   0x407820
  4078d5:	mov    ecx,0x1
  4078da:	mov    rsi,rax
  4078dd:	call   0x406180
  4078e2:	mov    rbx,QWORD PTR [rip+0x24007]        # 0x42b8f0
  4078e9:	lea    rdx,[rip+0x19ecc]        # 0x4217bc
  4078f0:	mov    r8,rax
  4078f3:	mov    r9,rsi
  4078f6:	mov    rcx,QWORD PTR [rbx]
  4078f9:	call   0x406050
  4078fe:	mov    rcx,QWORD PTR [rbx]
  407901:	call   0x405f30
  407906:	lea    rdx,[rip+0x19ecb]        # 0x4217d8
  40790d:	mov    ecx,0x1
  407912:	call   0x406230
  407917:	lea    rdx,[rip+0x19edd]        # 0x4217fb
  40791e:	mov    ecx,0x1
  407923:	call   0x406230
  407928:	lea    rcx,[rip+0x19ed6]        # 0x421805
  40792f:	call   0x405f70
  407934:	nop
  407935:	add    rsp,0x28
  407939:	pop    rbx
  40793a:	pop    rsi
  40793b:	jmp    0x405fa0
  407940:	push   rbx
  407941:	sub    rsp,0x20
  407945:	cmp    DWORD PTR [rcx+0x8],0x68
  407949:	mov    rbx,rcx
  40794c:	je     0x407961
  40794e:	lea    rdx,[rip+0x19eb2]        # 0x421807
  407955:	lea    rcx,[rip+0x19e4a]        # 0x4217a6
  40795c:	call   0x406300
  407961:	cmp    DWORD PTR [rbx+0xc],0x6c
  407965:	je     0x407974
  407967:	mov    rcx,rbx
  40796a:	add    rsp,0x20
  40796e:	pop    rbx
  40796f:	jmp    0x407720
  407974:	mov    ecx,DWORD PTR [rbx+0x5c]
  407977:	add    rsp,0x20
  40797b:	pop    rbx
  40797c:	jmp    0x4074f0
  407981:	nop    DWORD PTR [rax+rax*1+0x0]
  407986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407990:	push   rsi
  407991:	push   rbx
  407992:	sub    rsp,0x28
  407996:	cmp    DWORD PTR [rcx+0xc],0x6c
  40799a:	je     0x4079e2
  40799c:	call   0x407940
  4079a1:	mov    rcx,rax
  4079a4:	mov    rsi,rax
  4079a7:	call   0x41db50
  4079ac:	lea    rcx,[rax+0x5]
  4079b0:	call   0x415600
  4079b5:	mov    rdx,rsi
  4079b8:	mov    rbx,rax
  4079bb:	mov    rcx,rax
  4079be:	call   0x41db58
  4079c3:	mov    rcx,rbx
  4079c6:	call   0x41db50
  4079cb:	add    rax,rbx
  4079ce:	mov    DWORD PTR [rax],0x7079745f
  4079d4:	mov    BYTE PTR [rax+0x4],0x0
  4079d8:	mov    rax,rbx
  4079db:	add    rsp,0x28
  4079df:	pop    rbx
  4079e0:	pop    rsi
  4079e1:	ret    
  4079e2:	mov    ecx,DWORD PTR [rcx+0x5c]
  4079e5:	add    rsp,0x28
  4079e9:	pop    rbx
  4079ea:	pop    rsi
  4079eb:	jmp    0x4073d0
  4079f0:	push   r15
  4079f2:	push   r14
  4079f4:	push   r13
  4079f6:	push   r12
  4079f8:	push   rbp
  4079f9:	push   rdi
  4079fa:	push   rsi
  4079fb:	push   rbx
  4079fc:	sub    rsp,0x468
  407a03:	cmp    DWORD PTR [rcx+0x8],0x68
  407a07:	mov    QWORD PTR [rsp+0x4b0],rcx
  407a0f:	je     0x407a24
  407a11:	lea    rdx,[rip+0x19def]        # 0x421807
  407a18:	lea    rcx,[rip+0x19d87]        # 0x4217a6
  407a1f:	call   0x406300
  407a24:	mov    rax,QWORD PTR [rsp+0x4b0]
  407a2c:	mov    edx,DWORD PTR [rax+0xc]
  407a2f:	cmp    edx,0xf
  407a32:	je     0x407f63
  407a38:	jg     0x407ae2
  407a3e:	cmp    edx,0xd
  407a41:	je     0x407ee5
  407a47:	cmp    edx,0xe
  407a4a:	jne    0x407aef
  407a50:	mov    rcx,QWORD PTR [rsp+0x4b0]
  407a58:	call   0x407990
  407a5d:	mov    r12,rax
  407a60:	mov    rax,QWORD PTR [rsp+0x4b0]
  407a68:	mov    rcx,QWORD PTR [rax+0x20]
  407a6c:	mov    rbp,QWORD PTR [rax+0x10]
  407a70:	mov    rdi,QWORD PTR [rax+0x2090]
  407a77:	call   0x407820
  407a7c:	mov    ecx,0x1
  407a81:	mov    rsi,rax
  407a84:	call   0x406180
  407a89:	mov    rbx,QWORD PTR [rip+0x23e60]        # 0x42b8f0
  407a90:	lea    rdx,[rip+0x19d91]        # 0x421828
  407a97:	mov    r8,rax
  407a9a:	mov    QWORD PTR [rsp+0x30],r12
  407a9f:	mov    QWORD PTR [rsp+0x28],rbp
  407aa4:	mov    r9,rsi
  407aa7:	mov    QWORD PTR [rsp+0x20],rdi
  407aac:	mov    rcx,QWORD PTR [rbx]
  407aaf:	call   0x406050
  407ab4:	mov    rcx,QWORD PTR [rbx]
  407ab7:	call   0x405f30
  407abc:	lea    rdx,[rip+0x19d15]        # 0x4217d8
  407ac3:	mov    ecx,0x1
  407ac8:	call   0x406230
  407acd:	nop
  407ace:	add    rsp,0x468
  407ad5:	pop    rbx
  407ad6:	pop    rsi
  407ad7:	pop    rdi
  407ad8:	pop    rbp
  407ad9:	pop    r12
  407adb:	pop    r13
  407add:	pop    r14
  407adf:	pop    r15
  407ae1:	ret    
  407ae2:	cmp    edx,0x10
  407ae5:	je     0x407afd
  407ae7:	lea    eax,[rdx-0x6b]
  407aea:	cmp    eax,0x1
  407aed:	jbe    0x407ace
  407aef:	lea    rcx,[rip+0x19f5a]        # 0x421a50
  407af6:	call   0x406300
  407afb:	jmp    0x407ace
  407afd:	mov    rcx,QWORD PTR [rsp+0x4b0]
  407b05:	call   0x407990
  407b0a:	mov    r12,rax
  407b0d:	mov    rax,QWORD PTR [rsp+0x4b0]
  407b15:	mov    rcx,QWORD PTR [rax+0x10]
  407b19:	call   0x4065b0
  407b1e:	mov    rcx,QWORD PTR [rsp+0x4b0]
  407b26:	mov    rbp,rax
  407b29:	call   0x407940
  407b2e:	mov    rsi,rax
  407b31:	mov    rax,QWORD PTR [rsp+0x4b0]
  407b39:	mov    rcx,QWORD PTR [rax+0x20]
  407b3d:	call   0x407820
  407b42:	mov    ecx,0x1
  407b47:	mov    rbx,rax
  407b4a:	call   0x406180
  407b4f:	mov    rdi,QWORD PTR [rip+0x23d9a]        # 0x42b8f0
  407b56:	mov    QWORD PTR [rsp+0x28],rbp
  407b5b:	lea    rdx,[rip+0x19dc6]        # 0x421928
  407b62:	mov    QWORD PTR [rsp+0x30],r12
  407b67:	mov    QWORD PTR [rsp+0x20],rsi
  407b6c:	mov    r8,rax
  407b6f:	mov    r9,rbx
  407b72:	lea    rbp,[rsp+0x60]
  407b77:	mov    rcx,QWORD PTR [rdi]
  407b7a:	call   0x406050
  407b7f:	mov    rcx,QWORD PTR [rdi]
  407b82:	call   0x405f30
  407b87:	lea    rdx,[rip+0x19c4a]        # 0x4217d8
  407b8e:	mov    ecx,0x1
  407b93:	call   0x406230
  407b98:	lea    rdx,[rip+0x19cb6]        # 0x421855
  407b9f:	mov    ecx,0x1
  407ba4:	call   0x406230
  407ba9:	mov    DWORD PTR [rsp+0x5c],0x0
  407bb1:	mov    r15,QWORD PTR [rip+0x2cb88]        # 0x434740
  407bb8:	jmp    0x407bc5
  407bba:	nop    WORD PTR [rax+rax*1+0x0]
  407bc0:	add    DWORD PTR [rsp+0x5c],0x1
  407bc5:	mov    rax,QWORD PTR [rsp+0x4b0]
  407bcd:	mov    rcx,QWORD PTR [rax+0x30]
  407bd1:	test   rcx,rcx
  407bd4:	je     0x407cff
  407bda:	mov    eax,DWORD PTR [rcx+0x4]
  407bdd:	cmp    DWORD PTR [rsp+0x5c],eax
  407be1:	jge    0x407d0b
  407be7:	mov    edx,DWORD PTR [rsp+0x5c]
  407beb:	call   0x416670
  407bf0:	cmp    DWORD PTR [rax+0xc],0x6a
  407bf4:	mov    r12,rax
  407bf7:	je     0x407c0c
  407bf9:	lea    rdx,[rip+0x19d5d]        # 0x42195d
  407c00:	lea    rcx,[rip+0x19b9f]        # 0x4217a6
  407c07:	call   0x406300
  407c0c:	mov    ebx,DWORD PTR [r12+0x88]
  407c14:	test   ebx,ebx
  407c16:	je     0x407bc0
  407c18:	mov    rcx,r12
  407c1b:	call   0x407720
  407c20:	mov    ecx,0x1
  407c25:	mov    rsi,rax
  407c28:	call   0x406180
  407c2d:	mov    DWORD PTR [rsp+0x20],ebx
  407c31:	mov    rcx,QWORD PTR [rdi]
  407c34:	lea    rdx,[rip+0x19d3f]        # 0x42197a
  407c3b:	mov    r8,rax
  407c3e:	mov    r9,rsi
  407c41:	call   0x406050
  407c46:	mov    ecx,DWORD PTR [r12+0x88]
  407c4e:	test   ecx,ecx
  407c50:	jle    0x407ce3
  407c56:	lea    rsi,[r12+0x90]
  407c5e:	xor    ebx,ebx
  407c60:	lea    r14,[rip+0x19bbd]        # 0x421824
  407c67:	lea    r13,[rip+0x19bb7]        # 0x421825
  407c6e:	jmp    0x407cb6
  407c70:	mov    r9d,DWORD PTR [r8+0x2100]
  407c77:	mov    edx,0x100
  407c7c:	lea    r8,[rip+0x19d2a]        # 0x4219ad
  407c83:	mov    rcx,rbp
  407c86:	call   r15
  407c89:	mov    rcx,QWORD PTR [rdi]
  407c8c:	test   ebx,ebx
  407c8e:	mov    rdx,r13
  407c91:	cmove  rdx,r14
  407c95:	add    ebx,0x1
  407c98:	add    rsi,0x8
  407c9c:	call   0x416200
  407ca1:	mov    rcx,QWORD PTR [rdi]
  407ca4:	mov    rdx,rbp
  407ca7:	call   0x416200
  407cac:	cmp    DWORD PTR [r12+0x88],ebx
  407cb4:	jle    0x407ce3
  407cb6:	mov    r8,QWORD PTR [rsi]
  407cb9:	mov    edx,DWORD PTR [r8+0x20f8]
  407cc0:	test   edx,edx
  407cc2:	jne    0x407c70
  407cc4:	lea    rdx,[rip+0x19cd0]        # 0x42199b
  407ccb:	lea    rcx,[rip+0x19ad4]        # 0x4217a6
  407cd2:	mov    QWORD PTR [rsp+0x50],r8
  407cd7:	call   0x406300
  407cdc:	mov    r8,QWORD PTR [rsp+0x50]
  407ce1:	jmp    0x407c70
  407ce3:	mov    rcx,QWORD PTR [rdi]
  407ce6:	lea    rdx,[rip+0x19cab]        # 0x421998
  407ced:	call   0x416200
  407cf2:	mov    rcx,QWORD PTR [rdi]
  407cf5:	call   0x405f30
  407cfa:	jmp    0x407bc0
  407cff:	xor    eax,eax
  407d01:	cmp    DWORD PTR [rsp+0x5c],eax
  407d05:	jl     0x407be7
  407d0b:	xor    esi,esi
  407d0d:	lea    rbp,[rsp+0x60]
  407d12:	jmp    0x407dda
  407d17:	nop    WORD PTR [rax+rax*1+0x0]
  407d20:	mov    rcx,rbx
  407d23:	call   0x407720
  407d28:	mov    rcx,QWORD PTR [rbx+0x50]
  407d2c:	mov    r12d,DWORD PTR [rbx+0x88]
  407d33:	mov    QWORD PTR [rsp+0x50],rax
  407d38:	call   0x407990
  407d3d:	mov    rcx,QWORD PTR [rbx+0x10]
  407d41:	mov    r15,rax
  407d44:	call   0x4065b0
  407d49:	mov    rcx,QWORD PTR [rsp+0x4b0]
  407d51:	mov    r14,rax
  407d54:	call   0x407990
  407d59:	mov    r13,rax
  407d5c:	mov    rax,QWORD PTR [rsp+0x4b0]
  407d64:	mov    rcx,QWORD PTR [rax+0x20]
  407d68:	call   0x407820
  407d6d:	mov    ecx,0x1
  407d72:	mov    rbx,rax
  407d75:	call   0x406180
  407d7a:	mov    r9,QWORD PTR [rsp+0x50]
  407d7f:	mov    DWORD PTR [rsp+0x40],r12d
  407d84:	lea    rdx,[rip+0x19c45]        # 0x4219d0
  407d8b:	mov    QWORD PTR [rsp+0x38],r15
  407d90:	mov    QWORD PTR [rsp+0x30],rbp
  407d95:	mov    r8,rax
  407d98:	mov    QWORD PTR [rsp+0x28],r14
  407d9d:	mov    QWORD PTR [rsp+0x20],r13
  407da2:	mov    QWORD PTR [rsp+0x48],r9
  407da7:	mov    rcx,QWORD PTR [rdi]
  407daa:	mov    r9,rbx
  407dad:	call   0x406050
  407db2:	mov    rcx,QWORD PTR [rdi]
  407db5:	add    esi,0x1
  407db8:	call   0x405f30
  407dbd:	lea    rdx,[rip+0x19a14]        # 0x4217d8
  407dc4:	mov    ecx,0x1
  407dc9:	call   0x406230
  407dce:	mov    rax,QWORD PTR [rsp+0x4b0]
  407dd6:	mov    rcx,QWORD PTR [rax+0x30]
  407dda:	test   rcx,rcx
  407ddd:	je     0x407ede
  407de3:	mov    eax,DWORD PTR [rcx+0x4]
  407de6:	cmp    esi,eax
  407de8:	jge    0x407ec8
  407dee:	mov    edx,esi
  407df0:	call   0x416670
  407df5:	cmp    DWORD PTR [rax+0xc],0x6a
  407df9:	mov    rbx,rax
  407dfc:	je     0x407e11
  407dfe:	lea    rdx,[rip+0x19b58]        # 0x42195d
  407e05:	lea    rcx,[rip+0x1999a]        # 0x4217a6
  407e0c:	call   0x406300
  407e11:	mov    rcx,rbx
  407e14:	call   0x407720
  407e19:	mov    rcx,QWORD PTR [rsp+0x4b0]
  407e21:	mov    r13,rax
  407e24:	call   0x407940
  407e29:	mov    QWORD PTR [rsp+0x20],r13
  407e2e:	mov    r9,rax
  407e31:	lea    r8,[rip+0x19b78]        # 0x4219b0
  407e38:	mov    edx,0x400
  407e3d:	mov    rcx,rbp
  407e40:	call   QWORD PTR [rip+0x2c8fa]        # 0x434740
  407e46:	mov    eax,DWORD PTR [rbx+0x88]
  407e4c:	test   eax,eax
  407e4e:	jg     0x407d20
  407e54:	mov    rcx,QWORD PTR [rbx+0x50]
  407e58:	call   0x407990
  407e5d:	mov    rcx,QWORD PTR [rbx+0x10]
  407e61:	mov    r15,rax
  407e64:	call   0x4065b0
  407e69:	mov    rcx,QWORD PTR [rsp+0x4b0]
  407e71:	mov    r14,rax
  407e74:	call   0x407990
  407e79:	mov    r13,rax
  407e7c:	mov    rax,QWORD PTR [rsp+0x4b0]
  407e84:	mov    rcx,QWORD PTR [rax+0x20]
  407e88:	call   0x407820
  407e8d:	mov    ecx,0x1
  407e92:	mov    rbx,rax
  407e95:	call   0x406180
  407e9a:	mov    QWORD PTR [rsp+0x38],r15
  407e9f:	mov    QWORD PTR [rsp+0x30],rbp
  407ea4:	lea    rdx,[rip+0x19b6d]        # 0x421a18
  407eab:	mov    QWORD PTR [rsp+0x28],r14
  407eb0:	mov    QWORD PTR [rsp+0x20],r13
  407eb5:	mov    r8,rax
  407eb8:	mov    rcx,QWORD PTR [rdi]
  407ebb:	mov    r9,rbx
  407ebe:	call   0x406050
  407ec3:	jmp    0x407db2
  407ec8:	lea    rdx,[rip+0x19936]        # 0x421805
  407ecf:	mov    ecx,0x1
  407ed4:	call   0x406230
  407ed9:	jmp    0x407ace
  407ede:	xor    eax,eax
  407ee0:	jmp    0x407de6
  407ee5:	mov    rcx,QWORD PTR [rsp+0x4b0]
  407eed:	call   0x407990
  407ef2:	mov    r12,rax
  407ef5:	mov    rax,QWORD PTR [rsp+0x4b0]
  407efd:	mov    rcx,QWORD PTR [rax+0x50]
  407f01:	call   0x407990
  407f06:	mov    rbp,rax
  407f09:	mov    rax,QWORD PTR [rsp+0x4b0]
  407f11:	mov    rcx,QWORD PTR [rax+0x10]
  407f15:	call   0x4065b0
  407f1a:	mov    rdi,rax
  407f1d:	mov    rax,QWORD PTR [rsp+0x4b0]
  407f25:	mov    rcx,QWORD PTR [rax+0x20]
  407f29:	call   0x407820
  407f2e:	mov    ecx,0x1
  407f33:	mov    rsi,rax
  407f36:	call   0x406180
  407f3b:	mov    rbx,QWORD PTR [rip+0x239ae]        # 0x42b8f0
  407f42:	mov    r8,rax
  407f45:	mov    QWORD PTR [rsp+0x30],r12
  407f4a:	mov    QWORD PTR [rsp+0x28],rbp
  407f4f:	mov    QWORD PTR [rsp+0x20],rdi
  407f54:	mov    r9,rsi
  407f57:	lea    rdx,[rip+0x1999a]        # 0x4218f8
  407f5e:	jmp    0x407aac
  407f63:	lea    rdx,[rip+0x198eb]        # 0x421855
  407f6a:	mov    ecx,0x1
  407f6f:	call   0x406230
  407f74:	mov    rax,QWORD PTR [rsp+0x4b0]
  407f7c:	mov    rax,QWORD PTR [rax+0x50]
  407f80:	mov    ecx,DWORD PTR [rax+0x5c]
  407f83:	call   0x4074f0
  407f88:	mov    ecx,0x1
  407f8d:	mov    rbx,rax
  407f90:	call   0x406180
  407f95:	mov    rdi,QWORD PTR [rip+0x23954]        # 0x42b8f0
  407f9c:	lea    rdx,[rip+0x198b4]        # 0x421857
  407fa3:	mov    r9,rbx
  407fa6:	mov    r8,rax
  407fa9:	mov    rcx,QWORD PTR [rdi]
  407fac:	call   0x406050
  407fb1:	mov    rcx,QWORD PTR [rdi]
  407fb4:	call   0x405f30
  407fb9:	mov    rcx,QWORD PTR [rsp+0x4b0]
  407fc1:	call   0x407990
  407fc6:	mov    r12,rax
  407fc9:	mov    rax,QWORD PTR [rsp+0x4b0]
  407fd1:	mov    rbp,QWORD PTR [rax+0x10]
  407fd5:	mov    rax,QWORD PTR [rax+0x50]
  407fd9:	mov    ecx,DWORD PTR [rax+0x5c]
  407fdc:	call   0x4073d0
  407fe1:	mov    rsi,rax
  407fe4:	mov    rax,QWORD PTR [rsp+0x4b0]
  407fec:	mov    rcx,QWORD PTR [rax+0x20]
  407ff0:	call   0x407820
  407ff5:	mov    ecx,0x1
  407ffa:	mov    rbx,rax
  407ffd:	call   0x406180
  408002:	mov    QWORD PTR [rsp+0x28],rbp
  408007:	mov    QWORD PTR [rsp+0x30],r12
  40800c:	lea    rdx,[rip+0x19855]        # 0x421868
  408013:	mov    QWORD PTR [rsp+0x20],rsi
  408018:	mov    rcx,QWORD PTR [rdi]
  40801b:	mov    r8,rax
  40801e:	mov    r9,rbx
  408021:	xor    ebp,ebp
  408023:	call   0x406050
  408028:	mov    rcx,QWORD PTR [rdi]
  40802b:	call   0x405f30
  408030:	lea    rdx,[rip+0x197a1]        # 0x4217d8
  408037:	mov    ecx,0x1
  40803c:	call   0x406230
  408041:	mov    r13,QWORD PTR [rip+0x23628]        # 0x42b670
  408048:	jmp    0x408154
  40804d:	nop    DWORD PTR [rax]
  408050:	mov    eax,DWORD PTR [rcx+0x4]
  408053:	cmp    ebp,eax
  408055:	jge    0x407ec8
  40805b:	mov    edx,ebp
  40805d:	call   0x416670
  408062:	mov    r12,rax
  408065:	call   0x415f30
  40806a:	cmp    DWORD PTR [r12+0xc],0x69
  408070:	mov    rbx,rax
  408073:	je     0x408088
  408075:	lea    rdx,[rip+0x19816]        # 0x421892
  40807c:	lea    rcx,[rip+0x19723]        # 0x4217a6
  408083:	call   0x406300
  408088:	mov    rax,QWORD PTR [r13+0x0]
  40808c:	lea    rdx,[r12+0x68]
  408091:	mov    r8,rbx
  408094:	lea    rsi,[rip+0x19789]        # 0x421824
  40809b:	mov    rcx,rax
  40809e:	call   QWORD PTR [rax+0x10]
  4080a1:	mov    rcx,rbx
  4080a4:	call   0x4164d0
  4080a9:	test   rbx,rbx
  4080ac:	je     0x4080c0
  4080ae:	mov    rsi,QWORD PTR [rbx+0x10]
  4080b2:	lea    rax,[rip+0x1976b]        # 0x421824
  4080b9:	test   rsi,rsi
  4080bc:	cmove  rsi,rax
  4080c0:	mov    ecx,0x1
  4080c5:	add    ebp,0x1
  4080c8:	call   0x406180
  4080cd:	mov    rcx,QWORD PTR [rdi]
  4080d0:	lea    rdx,[rip+0x197d9]        # 0x4218b0
  4080d7:	mov    r9,rsi
  4080da:	mov    r8,rax
  4080dd:	call   0x406050
  4080e2:	mov    rcx,rbx
  4080e5:	call   0x416010
  4080ea:	mov    rcx,QWORD PTR [rdi]
  4080ed:	call   0x405f30
  4080f2:	mov    rcx,QWORD PTR [r12+0x10]
  4080f7:	call   0x4065b0
  4080fc:	mov    rcx,QWORD PTR [rsp+0x4b0]
  408104:	mov    r12,rax
  408107:	call   0x407990
  40810c:	mov    rsi,rax
  40810f:	mov    rax,QWORD PTR [rsp+0x4b0]
  408117:	mov    rcx,QWORD PTR [rax+0x20]
  40811b:	call   0x407820
  408120:	mov    ecx,0x1
  408125:	mov    rbx,rax
  408128:	call   0x406180
  40812d:	mov    QWORD PTR [rsp+0x28],r12
  408132:	mov    QWORD PTR [rsp+0x20],rsi
  408137:	lea    rdx,[rip+0x19782]        # 0x4218c0
  40813e:	mov    rcx,QWORD PTR [rdi]
  408141:	mov    r8,rax
  408144:	mov    r9,rbx
  408147:	call   0x406050
  40814c:	mov    rcx,QWORD PTR [rdi]
  40814f:	call   0x405f30
  408154:	mov    rax,QWORD PTR [rsp+0x4b0]
  40815c:	mov    rcx,QWORD PTR [rax+0x30]
  408160:	test   rcx,rcx
  408163:	jne    0x408050
  408169:	xor    eax,eax
  40816b:	jmp    0x408053
  408170:	push   r15
  408172:	push   r14
  408174:	push   r13
  408176:	push   r12
  408178:	push   rbp
  408179:	push   rdi
  40817a:	push   rsi
  40817b:	push   rbx
  40817c:	sub    rsp,0xb8
  408183:	mov    rax,QWORD PTR [rip+0x23546]        # 0x42b6d0
  40818a:	mov    QWORD PTR [rsp+0x100],rcx
  408192:	mov    rax,QWORD PTR [rax]
  408195:	test   rax,rax
  408198:	je     0x409768
  40819e:	mov    eax,DWORD PTR [rax+0x4]
  4081a1:	mov    DWORD PTR [rsp+0x5c],eax
  4081a5:	mov    rax,QWORD PTR [rip+0x23784]        # 0x42b930
  4081ac:	mov    rax,QWORD PTR [rax]
  4081af:	test   rax,rax
  4081b2:	je     0x4096ea
  4081b8:	mov    eax,DWORD PTR [rax+0x4]
  4081bb:	mov    DWORD PTR [rsp+0x54],eax
  4081bf:	mov    rax,QWORD PTR [rip+0x2347a]        # 0x42b640
  4081c6:	mov    rax,QWORD PTR [rax]
  4081c9:	test   rax,rax
  4081cc:	je     0x409705
  4081d2:	mov    eax,DWORD PTR [rax+0x4]
  4081d5:	mov    DWORD PTR [rsp+0x68],eax
  4081d9:	mov    rax,QWORD PTR [rip+0x23560]        # 0x42b740
  4081e0:	mov    rax,QWORD PTR [rax]
  4081e3:	test   rax,rax
  4081e6:	je     0x409720
  4081ec:	mov    eax,DWORD PTR [rax+0x4]
  4081ef:	mov    DWORD PTR [rsp+0x64],eax
  4081f3:	mov    rax,QWORD PTR [rip+0x23556]        # 0x42b750
  4081fa:	mov    rax,QWORD PTR [rax]
  4081fd:	test   rax,rax
  408200:	je     0x40973b
  408206:	mov    eax,DWORD PTR [rax+0x4]
  408209:	mov    DWORD PTR [rsp+0x6c],eax
  40820d:	mov    rax,QWORD PTR [rip+0x236fc]        # 0x42b910
  408214:	mov    rax,QWORD PTR [rax]
  408217:	test   rax,rax
  40821a:	je     0x409756
  408220:	mov    eax,DWORD PTR [rax+0x4]
  408223:	test   eax,eax
  408225:	mov    DWORD PTR [rsp+0x58],eax
  408229:	setg   BYTE PTR [rsp+0x63]
  40822e:	lea    rcx,[rip+0x19914]        # 0x421b49
  408235:	call   0x405f70
  40823a:	lea    rcx,[rip+0x1991b]        # 0x421b5c
  408241:	call   0x405f70
  408246:	lea    rcx,[rip+0x19923]        # 0x421b70
  40824d:	call   0x405f70
  408252:	lea    rcx,[rip+0x195cb]        # 0x421824
  408259:	call   0x405f70
  40825e:	call   0x405fa0
  408263:	mov    rax,QWORD PTR [rip+0x23666]        # 0x42b8d0
  40826a:	mov    eax,DWORD PTR [rax]
  40826c:	test   eax,eax
  40826e:	jne    0x40964e
  408274:	lea    rcx,[rip+0x195a9]        # 0x421824
  40827b:	call   0x405f70
  408280:	call   0x405fa0
  408285:	mov    eax,DWORD PTR [rsp+0x58]
  408289:	mov    r14,QWORD PTR [rip+0x23660]        # 0x42b8f0
  408290:	test   eax,eax
  408292:	jle    0x408387
  408298:	mov    DWORD PTR [rsp+0x50],0x0
  4082a0:	mov    r14,QWORD PTR [rip+0x23649]        # 0x42b8f0
  4082a7:	lea    rbp,[rsp+0x70]
  4082ac:	mov    r13,QWORD PTR [rip+0x2c48d]        # 0x434740
  4082b3:	jmp    0x408307
  4082b5:	cmp    edx,0xd
  4082b8:	je     0x40913f
  4082be:	cmp    edx,0xe
  4082c1:	jne    0x408360
  4082c7:	mov    rax,QWORD PTR [rsp+0x40]
  4082cc:	mov    rbx,QWORD PTR [rax+0x2090]
  4082d3:	mov    rcx,rax
  4082d6:	call   0x407720
  4082db:	mov    rcx,QWORD PTR [r14]
  4082de:	lea    rdx,[rip+0x19933]        # 0x421c18
  4082e5:	mov    r8,rax
  4082e8:	mov    r9,rbx
  4082eb:	call   0x406050
  4082f0:	mov    rcx,QWORD PTR [r14]
  4082f3:	call   0x405f30
  4082f8:	add    DWORD PTR [rsp+0x50],0x1
  4082fd:	mov    eax,DWORD PTR [rsp+0x50]
  408301:	cmp    eax,DWORD PTR [rsp+0x58]
  408305:	je     0x40837b
  408307:	mov    rax,QWORD PTR [rip+0x23602]        # 0x42b910
  40830e:	mov    edx,DWORD PTR [rsp+0x50]
  408312:	mov    rcx,QWORD PTR [rax]
  408315:	call   0x416670
  40831a:	cmp    DWORD PTR [rax+0x8],0x68
  40831e:	mov    QWORD PTR [rsp+0x40],rax
  408323:	je     0x408338
  408325:	lea    rdx,[rip+0x194db]        # 0x421807
  40832c:	lea    rcx,[rip+0x19473]        # 0x4217a6
  408333:	call   0x406300
  408338:	mov    rax,QWORD PTR [rsp+0x40]
  40833d:	mov    edx,DWORD PTR [rax+0xc]
  408340:	cmp    edx,0xf
  408343:	je     0x40901a
  408349:	jle    0x4082b5
  40834f:	cmp    edx,0x10
  408352:	je     0x409168
  408358:	lea    eax,[rdx-0x6b]
  40835b:	cmp    eax,0x1
  40835e:	jbe    0x4082f8
  408360:	lea    rcx,[rip+0x19951]        # 0x421cb8
  408367:	call   0x406300
  40836c:	add    DWORD PTR [rsp+0x50],0x1
  408371:	mov    eax,DWORD PTR [rsp+0x50]
  408375:	cmp    eax,DWORD PTR [rsp+0x58]
  408379:	jne    0x408307
  40837b:	lea    rcx,[rip+0x194a2]        # 0x421824
  408382:	call   0x405f70
  408387:	call   0x405fa0
  40838c:	mov    rax,QWORD PTR [rip+0x2358d]        # 0x42b920
  408393:	mov    esi,DWORD PTR [rax]
  408395:	test   esi,esi
  408397:	jne    0x4084b9
  40839d:	mov    ebx,DWORD PTR [rsp+0x54]
  4083a1:	xor    esi,esi
  4083a3:	lea    rdi,[rip+0x1947b]        # 0x421825
  4083aa:	lea    rbp,[rip+0x19473]        # 0x421824
  4083b1:	mov    r15d,DWORD PTR [rsp+0x54]
  4083b6:	test   ebx,ebx
  4083b8:	jle    0x4084ad
  4083be:	call   0x415f30
  4083c3:	mov    r13,rax
  4083c6:	mov    rax,QWORD PTR [rip+0x23563]        # 0x42b930
  4083cd:	mov    edx,esi
  4083cf:	mov    rcx,QWORD PTR [rax]
  4083d2:	call   0x416670
  4083d7:	test   BYTE PTR [rax+0x20b8],0x2
  4083de:	mov    r12,rax
  4083e1:	je     0x408499
  4083e7:	mov    r9d,DWORD PTR [r12+0x20d8]
  4083ef:	mov    rax,QWORD PTR [rax+0x20d0]
  4083f6:	test   r9d,r9d
  4083f9:	je     0x4084a1
  4083ff:	test   rax,rax
  408402:	je     0x4084a1
  408408:	test   r13,r13
  40840b:	je     0x408415
  40840d:	mov    DWORD PTR [r13+0x8],0x0
  408415:	test   r9d,r9d
  408418:	jle    0x408459
  40841a:	xor    ebx,ebx
  40841c:	jmp    0x408428
  40841e:	xchg   ax,ax
  408420:	mov    rax,QWORD PTR [r12+0x20d0]
  408428:	mov    r9,QWORD PTR [rax+rbx*8]
  40842c:	test   rbx,rbx
  40842f:	mov    r8,rbp
  408432:	lea    rdx,[rip+0x198a9]        # 0x421ce2
  408439:	cmovne r8,rdi
  40843d:	mov    rcx,r13
  408440:	call   0x406020
  408445:	mov    r9d,DWORD PTR [r12+0x20d8]
  40844d:	lea    eax,[rbx+0x1]
  408450:	add    rbx,0x1
  408454:	cmp    eax,r9d
  408457:	jl     0x408420
  408459:	mov    rcx,r12
  40845c:	mov    DWORD PTR [rsp+0x40],r9d
  408461:	call   0x407720
  408466:	mov    r9d,DWORD PTR [rsp+0x40]
  40846b:	mov    rcx,QWORD PTR [r14]
  40846e:	lea    rdx,[rip+0x19873]        # 0x421ce8
  408475:	mov    r8,rax
  408478:	call   0x406050
  40847d:	mov    rcx,QWORD PTR [r14]
  408480:	call   0x405f30
  408485:	mov    rcx,r13
  408488:	call   0x405f30
  40848d:	lea    rcx,[rip+0x19878]        # 0x421d0c
  408494:	call   0x405f70
  408499:	mov    rcx,r13
  40849c:	call   0x416010
  4084a1:	add    esi,0x1
  4084a4:	cmp    esi,r15d
  4084a7:	jne    0x4083be
  4084ad:	lea    rcx,[rip+0x19370]        # 0x421824
  4084b4:	call   0x405f70
  4084b9:	lea    rcx,[rip+0x19850]        # 0x421d10
  4084c0:	call   0x405f70
  4084c5:	lea    rcx,[rip+0x1984c]        # 0x421d18
  4084cc:	call   0x405f70
  4084d1:	lea    rdx,[rip+0x1987e]        # 0x421d56
  4084d8:	mov    ecx,0x1
  4084dd:	call   0x406230
  4084e2:	lea    rdx,[rip+0x19887]        # 0x421d70
  4084e9:	mov    ecx,0x2
  4084ee:	call   0x406230
  4084f3:	lea    rdx,[rip+0x198c2]        # 0x421dbc
  4084fa:	mov    ecx,0x2
  4084ff:	call   0x406230
  408504:	lea    rdx,[rip+0x198c1]        # 0x421dcc
  40850b:	mov    ecx,0x2
  408510:	call   0x406230
  408515:	lea    rdx,[rip+0x192e9]        # 0x421805
  40851c:	mov    ecx,0x1
  408521:	call   0x406230
  408526:	lea    rcx,[rip+0x192d8]        # 0x421805
  40852d:	call   0x405f70
  408532:	lea    rcx,[rip+0x192eb]        # 0x421824
  408539:	call   0x405f70
  40853e:	lea    rcx,[rip+0x190ae]        # 0x4215f3
  408545:	call   0x405f70
  40854a:	mov    rax,QWORD PTR [rip+0x2325f]        # 0x42b7b0
  408551:	mov    r9,QWORD PTR [rsp+0x100]
  408559:	lea    rdx,[rip+0x19875]        # 0x421dd5
  408560:	mov    rcx,QWORD PTR [r14]
  408563:	mov    r8,QWORD PTR [rax]
  408566:	call   0x406050
  40856b:	mov    rcx,QWORD PTR [r14]
  40856e:	call   0x405f30
  408573:	lea    rcx,[rip+0x192aa]        # 0x421824
  40857a:	call   0x405f70
  40857f:	lea    rdx,[rip+0x1986a]        # 0x421df0
  408586:	mov    ecx,0x1
  40858b:	call   0x406230
  408590:	lea    rdx,[rip+0x19879]        # 0x421e10
  408597:	mov    ecx,0x1
  40859c:	call   0x406230
  4085a1:	call   0x405fa0
  4085a6:	mov    rax,QWORD PTR [rip+0x23373]        # 0x42b920
  4085ad:	mov    r11d,DWORD PTR [rax]
  4085b0:	test   r11d,r11d
  4085b3:	je     0x40952c
  4085b9:	call   0x405fa0
  4085be:	mov    r8d,DWORD PTR [rsp+0x5c]
  4085c3:	test   r8d,r8d
  4085c6:	jle    0x4086f6
  4085cc:	lea    rcx,[rip+0x19251]        # 0x421824
  4085d3:	xor    ebx,ebx
  4085d5:	call   0x405f70
  4085da:	lea    rdx,[rip+0x19875]        # 0x421e56
  4085e1:	mov    ecx,0x1
  4085e6:	call   0x406230
  4085eb:	mov    edi,DWORD PTR [rsp+0x5c]
  4085ef:	mov    rax,QWORD PTR [rip+0x230da]        # 0x42b6d0
  4085f6:	mov    edx,ebx
  4085f8:	add    ebx,0x1
  4085fb:	mov    rcx,QWORD PTR [rax]
  4085fe:	call   0x416670
  408603:	mov    rcx,rax
  408606:	call   0x407780
  40860b:	mov    ecx,0x1
  408610:	mov    rsi,rax
  408613:	call   0x406180
  408618:	mov    rcx,QWORD PTR [r14]
  40861b:	lea    rdx,[rip+0x1981a]        # 0x421e3c
  408622:	mov    r8,rax
  408625:	mov    r9,rsi
  408628:	call   0x406050
  40862d:	mov    rcx,QWORD PTR [r14]
  408630:	call   0x405f30
  408635:	cmp    ebx,edi
  408637:	jne    0x4085ef
  408639:	lea    rcx,[rip+0x191e4]        # 0x421824
  408640:	xor    ebx,ebx
  408642:	call   0x405f70
  408647:	lea    rdx,[rip+0x1981c]        # 0x421e6a
  40864e:	mov    ecx,0x1
  408653:	call   0x406230
  408658:	mov    esi,DWORD PTR [rsp+0x5c]
  40865c:	jmp    0x408697
  40865e:	mov    rcx,rax
  408661:	add    ebx,0x1
  408664:	call   0x407720
  408669:	mov    ecx,0x1
  40866e:	mov    rdi,rax
  408671:	call   0x406180
  408676:	mov    rcx,QWORD PTR [r14]
  408679:	lea    rdx,[rip+0x19808]        # 0x421e88
  408680:	mov    r8,rax
  408683:	mov    r9,rdi
  408686:	call   0x406050
  40868b:	mov    rcx,QWORD PTR [r14]
  40868e:	call   0x405f30
  408693:	cmp    ebx,esi
  408695:	je     0x4086f6
  408697:	mov    rax,QWORD PTR [rip+0x23032]        # 0x42b6d0
  40869e:	mov    edx,ebx
  4086a0:	mov    rcx,QWORD PTR [rax]
  4086a3:	call   0x416670
  4086a8:	mov    edx,DWORD PTR [rax+0x20fc]
  4086ae:	test   edx,edx
  4086b0:	jne    0x40865e
  4086b2:	mov    rbp,QWORD PTR [rax+0x2100]
  4086b9:	mov    rcx,rax
  4086bc:	add    ebx,0x1
  4086bf:	call   0x407720
  4086c4:	mov    ecx,0x1
  4086c9:	mov    rdi,rax
  4086cc:	call   0x406180
  4086d1:	mov    DWORD PTR [rsp+0x20],ebp
  4086d5:	mov    rcx,QWORD PTR [r14]
  4086d8:	lea    rdx,[rip+0x197ca]        # 0x421ea9
  4086df:	mov    r8,rax
  4086e2:	mov    r9,rdi
  4086e5:	call   0x406050
  4086ea:	mov    rcx,QWORD PTR [r14]
  4086ed:	call   0x405f30
  4086f2:	cmp    ebx,esi
  4086f4:	jne    0x408697
  4086f6:	call   0x405fa0
  4086fb:	mov    ecx,DWORD PTR [rsp+0x54]
  4086ff:	xor    ebx,ebx
  408701:	xor    esi,esi
  408703:	mov    edi,DWORD PTR [rsp+0x54]
  408707:	test   ecx,ecx
  408709:	jle    0x408874
  40870f:	nop
  408710:	mov    rax,QWORD PTR [rip+0x23219]        # 0x42b930
  408717:	mov    edx,esi
  408719:	mov    rcx,QWORD PTR [rax]
  40871c:	call   0x416670
  408721:	mov    eax,DWORD PTR [rax+0x88]
  408727:	cmp    ebx,eax
  408729:	cmovl  ebx,eax
  40872c:	add    esi,0x1
  40872f:	cmp    esi,edi
  408731:	jne    0x408710
  408733:	lea    rcx,[rip+0x190ea]        # 0x421824
  40873a:	xor    esi,esi
  40873c:	call   0x405f70
  408741:	lea    rdx,[rip+0x19bbd]        # 0x422305
  408748:	mov    ecx,0x1
  40874d:	call   0x406230
  408752:	mov    edi,DWORD PTR [rsp+0x54]
  408756:	mov    rax,QWORD PTR [rip+0x231d3]        # 0x42b930
  40875d:	mov    edx,esi
  40875f:	add    esi,0x1
  408762:	mov    rcx,QWORD PTR [rax]
  408765:	call   0x416670
  40876a:	mov    rcx,rax
  40876d:	call   0x4077d0
  408772:	mov    rcx,QWORD PTR [r14]
  408775:	lea    rdx,[rip+0x1975d]        # 0x421ed9
  40877c:	mov    r8,rax
  40877f:	call   0x406050
  408784:	mov    rcx,QWORD PTR [r14]
  408787:	call   0x405f30
  40878c:	cmp    esi,edi
  40878e:	jne    0x408756
  408790:	lea    rcx,[rip+0x1908d]        # 0x421824
  408797:	xor    esi,esi
  408799:	call   0x405f70
  40879e:	lea    rdx,[rip+0x19743]        # 0x421ee8
  4087a5:	mov    ecx,0x1
  4087aa:	call   0x406230
  4087af:	mov    ebp,DWORD PTR [rsp+0x54]
  4087b3:	mov    rax,QWORD PTR [rip+0x23176]        # 0x42b930
  4087ba:	mov    edx,esi
  4087bc:	add    esi,0x1
  4087bf:	mov    rcx,QWORD PTR [rax]
  4087c2:	call   0x416670
  4087c7:	mov    edi,DWORD PTR [rax+0x88]
  4087cd:	mov    rcx,rax
  4087d0:	call   0x407720
  4087d5:	mov    rcx,QWORD PTR [r14]
  4087d8:	lea    rdx,[rip+0x1973d]        # 0x421f1c
  4087df:	mov    r8,rax
  4087e2:	mov    r9d,edi
  4087e5:	call   0x406050
  4087ea:	mov    rcx,QWORD PTR [r14]
  4087ed:	call   0x405f30
  4087f2:	cmp    esi,ebp
  4087f4:	jne    0x4087b3
  4087f6:	test   ebx,ebx
  4087f8:	je     0x408874
  4087fa:	lea    rcx,[rip+0x19023]        # 0x421824
  408801:	xor    ebx,ebx
  408803:	call   0x405f70
  408808:	lea    rdx,[rip+0x19724]        # 0x421f33
  40880f:	mov    ecx,0x1
  408814:	call   0x406230
  408819:	mov    edi,DWORD PTR [rsp+0x54]
  40881d:	mov    rax,QWORD PTR [rip+0x2310c]        # 0x42b930
  408824:	mov    edx,ebx
  408826:	mov    rcx,QWORD PTR [rax]
  408829:	call   0x416670
  40882e:	mov    r15d,DWORD PTR [rax+0x88]
  408835:	mov    rsi,rax
  408838:	test   r15d,r15d
  40883b:	jle    0x40886d
  40883d:	mov    rcx,rax
  408840:	call   0x407720
  408845:	mov    rcx,rsi
  408848:	mov    rbp,rax
  40884b:	call   0x407720
  408850:	mov    rcx,QWORD PTR [r14]
  408853:	lea    rdx,[rip+0x196ef]        # 0x421f49
  40885a:	mov    r8,rax
  40885d:	mov    r9,rbp
  408860:	call   0x406050
  408865:	mov    rcx,QWORD PTR [r14]
  408868:	call   0x405f30
  40886d:	add    ebx,0x1
  408870:	cmp    ebx,edi
  408872:	jne    0x40881d
  408874:	call   0x405fa0
  408879:	lea    rcx,[rip+0x18fa4]        # 0x421824
  408880:	call   0x405f70
  408885:	lea    rdx,[rip+0x19635]        # 0x421ec1
  40888c:	mov    ecx,0x1
  408891:	call   0x406230
  408896:	mov    rax,QWORD PTR [rip+0x22df3]        # 0x42b690
  40889d:	lea    r9,[rip+0x191d7]        # 0x421a7b
  4088a4:	mov    eax,DWORD PTR [rax]
  4088a6:	test   eax,eax
  4088a8:	jne    0x40934b
  4088ae:	mov    r8,QWORD PTR [rsp+0x100]
  4088b6:	mov    rcx,QWORD PTR [r14]
  4088b9:	lea    rdx,[rip+0x196c0]        # 0x421f80
  4088c0:	call   0x406050
  4088c5:	mov    rcx,QWORD PTR [r14]
  4088c8:	call   0x405f30
  4088cd:	lea    rdx,[rip+0x18f04]        # 0x4217d8
  4088d4:	mov    ecx,0x1
  4088d9:	call   0x406230
  4088de:	call   0x405fa0
  4088e3:	mov    rax,QWORD PTR [rip+0x23036]        # 0x42b920
  4088ea:	mov    r13d,DWORD PTR [rax]
  4088ed:	test   r13d,r13d
  4088f0:	jne    0x4093ed
  4088f6:	mov    rax,QWORD PTR [rip+0x22e23]        # 0x42b720
  4088fd:	mov    r12d,DWORD PTR [rax]
  408900:	test   r12d,r12d
  408903:	jne    0x409393
  408909:	mov    rax,QWORD PTR [rip+0x22fb0]        # 0x42b8c0
  408910:	xor    ebx,ebx
  408912:	mov    rcx,QWORD PTR [rax]
  408915:	mov    rbp,rax
  408918:	mov    QWORD PTR [rsp+0x40],rax
  40891d:	call   0x407820
  408922:	mov    rcx,QWORD PTR [r14]
  408925:	lea    rdx,[rip+0x1967c]        # 0x421fa8
  40892c:	mov    r8,rax
  40892f:	call   0x406050
  408934:	mov    rcx,QWORD PTR [r14]
  408937:	call   0x405f30
  40893c:	jmp    0x4089ae
  40893e:	mov    eax,DWORD PTR [rcx+0x4]
  408941:	cmp    ebx,eax
  408943:	jge    0x4089c3
  408945:	mov    edx,ebx
  408947:	call   0x416670
  40894c:	cmp    rax,QWORD PTR [rbp+0x0]
  408950:	mov    rsi,rax
  408953:	je     0x4089ab
  408955:	cmp    QWORD PTR [rax+0x20],0x0
  40895a:	je     0x4096b8
  408960:	mov    rcx,rsi
  408963:	call   0x407820
  408968:	mov    rcx,QWORD PTR [rsi+0x20]
  40896c:	mov    r12,rax
  40896f:	mov    rdi,QWORD PTR [rsi+0x10]
  408973:	call   0x407820
  408978:	mov    QWORD PTR [rsp+0x20],r12
  40897d:	mov    rcx,QWORD PTR [r14]
  408980:	lea    rdx,[rip+0x19699]        # 0x422020
  408987:	mov    r8,rax
  40898a:	mov    r9,rdi
  40898d:	call   0x406050
  408992:	mov    rcx,QWORD PTR [r14]
  408995:	call   0x405f30
  40899a:	lea    rdx,[rip+0x18e37]        # 0x4217d8
  4089a1:	mov    ecx,0x1
  4089a6:	call   0x406230
  4089ab:	add    ebx,0x1
  4089ae:	mov    rax,QWORD PTR [rip+0x22d9b]        # 0x42b750
  4089b5:	mov    rcx,QWORD PTR [rax]
  4089b8:	test   rcx,rcx
  4089bb:	jne    0x40893e
  4089bd:	xor    eax,eax
  4089bf:	cmp    ebx,eax
  4089c1:	jl     0x408945
  4089c3:	call   0x405fa0
  4089c8:	cmp    BYTE PTR [rsp+0x63],0x0
  4089cd:	jne    0x409404
  4089d3:	call   0x405fa0
  4089d8:	mov    edi,DWORD PTR [rsp+0x5c]
  4089dc:	test   edi,edi
  4089de:	jle    0x408a87
  4089e4:	lea    rcx,[rip+0x18e39]        # 0x421824
  4089eb:	xor    esi,esi
  4089ed:	call   0x405f70
  4089f2:	lea    rdx,[rip+0x1964e]        # 0x422047
  4089f9:	mov    ecx,0x1
  4089fe:	call   0x406230
  408a03:	mov    r13d,DWORD PTR [rsp+0x5c]
  408a08:	mov    rax,QWORD PTR [rip+0x22cc1]        # 0x42b6d0
  408a0f:	mov    edx,esi
  408a11:	add    esi,0x1
  408a14:	mov    rcx,QWORD PTR [rax]
  408a17:	call   0x416670
  408a1c:	mov    rbx,rax
  408a1f:	mov    rcx,rax
  408a22:	call   0x407780
  408a27:	mov    rcx,rbx
  408a2a:	mov    r12,rax
  408a2d:	call   0x407720
  408a32:	mov    rcx,QWORD PTR [rbx+0x10]
  408a36:	mov    rbp,rax
  408a39:	call   0x4065b0
  408a3e:	mov    rcx,QWORD PTR [rbx+0x20]
  408a42:	mov    rdi,rax
  408a45:	call   0x407820
  408a4a:	mov    QWORD PTR [rsp+0x28],r12
  408a4f:	mov    QWORD PTR [rsp+0x20],rbp
  408a54:	lea    rdx,[rip+0x19605]        # 0x422060
  408a5b:	mov    rcx,QWORD PTR [r14]
  408a5e:	mov    r8,rax
  408a61:	mov    r9,rdi
  408a64:	call   0x406050
  408a69:	mov    rcx,QWORD PTR [r14]
  408a6c:	call   0x405f30
  408a71:	lea    rdx,[rip+0x18d60]        # 0x4217d8
  408a78:	mov    ecx,0x1
  408a7d:	call   0x406230
  408a82:	cmp    esi,r13d
  408a85:	jne    0x408a08
  408a87:	call   0x405fa0
  408a8c:	mov    esi,DWORD PTR [rsp+0x54]
  408a90:	test   esi,esi
  408a92:	jle    0x408e10
  408a98:	lea    rcx,[rip+0x18d85]        # 0x421824
  408a9f:	xor    esi,esi
  408aa1:	call   0x405f70
  408aa6:	lea    rdx,[rip+0x195e2]        # 0x42208f
  408aad:	mov    ecx,0x1
  408ab2:	call   0x406230
  408ab7:	mov    rax,QWORD PTR [rip+0x22e72]        # 0x42b930
  408abe:	mov    edx,esi
  408ac0:	mov    rcx,QWORD PTR [rax]
  408ac3:	call   0x416670
  408ac8:	lea    rcx,[rip+0x18d55]        # 0x421824
  408acf:	mov    rdi,rax
  408ad2:	mov    r12,QWORD PTR [rax+0x50]
  408ad6:	call   0x405f70
  408adb:	mov    r11d,DWORD PTR [rdi+0x88]
  408ae2:	test   r11d,r11d
  408ae5:	jle    0x408b38
  408ae7:	xor    ebx,ebx
  408ae9:	nop    DWORD PTR [rax+0x0]
  408af0:	movsxd rax,ebx
  408af3:	mov    rcx,QWORD PTR [rdi+rax*8+0x90]
  408afb:	call   0x407780
  408b00:	mov    rcx,rdi
  408b03:	mov    rbp,rax
  408b06:	call   0x407720
  408b0b:	mov    QWORD PTR [rsp+0x20],rbp
  408b10:	mov    rcx,QWORD PTR [r14]
  408b13:	lea    rdx,[rip+0x1958c]        # 0x4220a6
  408b1a:	mov    r9d,ebx
  408b1d:	mov    r8,rax
  408b20:	add    ebx,0x1
  408b23:	call   0x406050
  408b28:	mov    rcx,QWORD PTR [r14]
  408b2b:	call   0x405f30
  408b30:	cmp    DWORD PTR [rdi+0x88],ebx
  408b36:	jg     0x408af0
  408b38:	mov    rcx,rdi
  408b3b:	lea    rbp,[rip+0x18fa3]        # 0x421ae5
  408b42:	call   0x4077d0
  408b47:	mov    r10d,DWORD PTR [rdi+0x88]
  408b4e:	mov    rbx,rax
  408b51:	test   r10d,r10d
  408b54:	jne    0x409452
  408b5a:	mov    rcx,rdi
  408b5d:	call   0x407720
  408b62:	mov    rcx,r12
  408b65:	mov    r13,rax
  408b68:	call   0x407990
  408b6d:	mov    rcx,QWORD PTR [rdi+0x10]
  408b71:	mov    r15,rax
  408b74:	call   0x4065b0
  408b79:	mov    rcx,QWORD PTR [rdi+0x20]
  408b7d:	mov    r12,rax
  408b80:	call   0x407820
  408b85:	mov    QWORD PTR [rsp+0x38],rbx
  408b8a:	mov    QWORD PTR [rsp+0x30],rbp
  408b8f:	lea    rdx,[rip+0x19532]        # 0x4220c8
  408b96:	mov    QWORD PTR [rsp+0x28],r13
  408b9b:	mov    QWORD PTR [rsp+0x20],r15
  408ba0:	mov    r8,rax
  408ba3:	mov    rcx,QWORD PTR [r14]
  408ba6:	mov    r9,r12
  408ba9:	call   0x406050
  408bae:	mov    rcx,QWORD PTR [r14]
  408bb1:	call   0x405f30
  408bb6:	lea    rdx,[rip+0x18c1b]        # 0x4217d8
  408bbd:	mov    ecx,0x1
  408bc2:	call   0x406230
  408bc7:	mov    rax,QWORD PTR [rip+0x22d52]        # 0x42b920
  408bce:	mov    r9d,DWORD PTR [rax]
  408bd1:	test   r9d,r9d
  408bd4:	jne    0x408e03
  408bda:	mov    eax,DWORD PTR [rdi+0x20b8]
  408be0:	test   al,0x1
  408be2:	je     0x408c9c
  408be8:	cmp    DWORD PTR [rdi+0x20c8],0x1
  408bef:	lea    rax,[rip+0x18ef1]        # 0x421ae7
  408bf6:	lea    rbx,[rip+0x18ef8]        # 0x421af5
  408bfd:	mov    rcx,rdi
  408c00:	mov    rbp,QWORD PTR [rdi+0x20d0]
  408c07:	cmove  rbx,rax
  408c0b:	call   0x4077d0
  408c10:	mov    rcx,QWORD PTR [rdi+0x20]
  408c14:	mov    r12,rax
  408c17:	call   0x407820
  408c1c:	mov    QWORD PTR [rsp+0x20],rbx
  408c21:	mov    rcx,QWORD PTR [r14]
  408c24:	lea    rdx,[rip+0x194d5]        # 0x422100
  408c2b:	mov    r8,rax
  408c2e:	mov    r9,r12
  408c31:	call   0x406050
  408c36:	mov    rcx,QWORD PTR [r14]
  408c39:	call   0x405f30
  408c3e:	mov    r8d,DWORD PTR [rdi+0x20d8]
  408c45:	test   r8d,r8d
  408c48:	je     0x4094c8
  408c4e:	test   rbp,rbp
  408c51:	je     0x4094c8
  408c57:	mov    rcx,rdi
  408c5a:	call   0x407720
  408c5f:	mov    rcx,QWORD PTR [r14]
  408c62:	lea    rdx,[rip+0x194c8]        # 0x422131
  408c69:	mov    r8,rax
  408c6c:	call   0x406050
  408c71:	mov    rcx,QWORD PTR [r14]
  408c74:	call   0x405f30
  408c79:	lea    rcx,[rip+0x194bf]        # 0x42213f
  408c80:	call   0x405f70
  408c85:	lea    rdx,[rip+0x18b4c]        # 0x4217d8
  408c8c:	mov    ecx,0x1
  408c91:	call   0x406230
  408c96:	mov    eax,DWORD PTR [rdi+0x20b8]
  408c9c:	test   al,0x4
  408c9e:	jne    0x409471
  408ca4:	test   al,0x18
  408ca6:	je     0x408d34
  408cac:	mov    eax,DWORD PTR [rdi+0x20e0]
  408cb2:	mov    r12d,0x0
  408cb8:	lea    rbp,[rip+0x18e4c]        # 0x421b0b
  408cbf:	mov    rcx,rdi
  408cc2:	test   eax,eax
  408cc4:	cmovns r12d,eax
  408cc8:	not    eax
  408cca:	shr    eax,0x1f
  408ccd:	cmp    DWORD PTR [rdi+0x20e4],0x1
  408cd4:	mov    ebx,eax
  408cd6:	lea    rax,[rip+0x18e23]        # 0x421b00
  408cdd:	cmove  rbp,rax
  408ce1:	call   0x4077d0
  408ce6:	mov    rcx,QWORD PTR [rdi+0x20]
  408cea:	mov    r15,rax
  408ced:	call   0x407820
  408cf2:	mov    DWORD PTR [rsp+0x30],r12d
  408cf7:	mov    DWORD PTR [rsp+0x28],ebx
  408cfb:	lea    rdx,[rip+0x19476]        # 0x422178
  408d02:	mov    QWORD PTR [rsp+0x20],rbp
  408d07:	mov    rcx,QWORD PTR [r14]
  408d0a:	mov    r8,rax
  408d0d:	mov    r9,r15
  408d10:	call   0x406050
  408d15:	mov    rcx,QWORD PTR [r14]
  408d18:	call   0x405f30
  408d1d:	lea    rdx,[rip+0x18ab4]        # 0x4217d8
  408d24:	mov    ecx,0x1
  408d29:	call   0x406230
  408d2e:	mov    eax,DWORD PTR [rdi+0x20b8]
  408d34:	test   al,0x20
  408d36:	je     0x408d9e
  408d38:	cmp    DWORD PTR [rdi+0x20e8],0x1
  408d3f:	lea    rax,[rip+0x18dd2]        # 0x421b18
  408d46:	lea    rbx,[rip+0x18ddc]        # 0x421b29
  408d4d:	mov    rcx,rdi
  408d50:	cmove  rbx,rax
  408d54:	call   0x4077d0
  408d59:	mov    rcx,QWORD PTR [rdi+0x20]
  408d5d:	mov    rbp,rax
  408d60:	call   0x407820
  408d65:	mov    QWORD PTR [rsp+0x20],rbx
  408d6a:	mov    rcx,QWORD PTR [r14]
  408d6d:	lea    rdx,[rip+0x1943c]        # 0x4221b0
  408d74:	mov    r8,rax
  408d77:	mov    r9,rbp
  408d7a:	call   0x406050
  408d7f:	mov    rcx,QWORD PTR [r14]
  408d82:	call   0x405f30
  408d87:	lea    rdx,[rip+0x18a4a]        # 0x4217d8
  408d8e:	mov    ecx,0x1
  408d93:	call   0x406230
  408d98:	mov    eax,DWORD PTR [rdi+0x20b8]
  408d9e:	test   al,0x40
  408da0:	je     0x408e03
  408da2:	mov    ecx,DWORD PTR [rdi+0x20ec]
  408da8:	lea    rax,[rip+0x18d88]        # 0x421b37
  408daf:	lea    rbp,[rip+0x18d89]        # 0x421b3f
  408db6:	test   ecx,ecx
  408db8:	mov    rcx,rdi
  408dbb:	cmovne rbp,rax
  408dbf:	call   0x4077d0
  408dc4:	mov    rcx,QWORD PTR [rdi+0x20]
  408dc8:	mov    rbx,rax
  408dcb:	call   0x407820
  408dd0:	mov    QWORD PTR [rsp+0x20],rbp
  408dd5:	mov    rcx,QWORD PTR [r14]
  408dd8:	lea    rdx,[rip+0x19401]        # 0x4221e0
  408ddf:	mov    r8,rax
  408de2:	mov    r9,rbx
  408de5:	call   0x406050
  408dea:	mov    rcx,QWORD PTR [r14]
  408ded:	call   0x405f30
  408df2:	lea    rdx,[rip+0x189df]        # 0x4217d8
  408df9:	mov    ecx,0x1
  408dfe:	call   0x406230
  408e03:	add    esi,0x1
  408e06:	cmp    esi,DWORD PTR [rsp+0x54]
  408e0a:	jne    0x408ab7
  408e10:	call   0x405fa0
  408e15:	mov    ebx,DWORD PTR [rsp+0x64]
  408e19:	test   ebx,ebx
  408e1b:	jle    0x408e6c
  408e1d:	lea    rcx,[rip+0x18a00]        # 0x421824
  408e24:	xor    ebx,ebx
  408e26:	call   0x405f70
  408e2b:	lea    rdx,[rip+0x193de]        # 0x422210
  408e32:	mov    ecx,0x1
  408e37:	call   0x406230
  408e3c:	mov    esi,DWORD PTR [rsp+0x64]
  408e40:	mov    rax,QWORD PTR [rip+0x228f9]        # 0x42b740
  408e47:	mov    edx,ebx
  408e49:	add    ebx,0x1
  408e4c:	mov    rcx,QWORD PTR [rax]
  408e4f:	call   0x416670
  408e54:	mov    rcx,rax
  408e57:	call   0x407360
  408e5c:	cmp    ebx,esi
  408e5e:	jne    0x408e40
  408e60:	lea    rcx,[rip+0x189bd]        # 0x421824
  408e67:	call   0x405f70
  408e6c:	call   0x405fa0
  408e71:	mov    esi,DWORD PTR [rsp+0x68]
  408e75:	test   esi,esi
  408e77:	jle    0x408ec4
  408e79:	lea    rcx,[rip+0x189a4]        # 0x421824
  408e80:	xor    ebx,ebx
  408e82:	call   0x405f70
  408e87:	lea    rdx,[rip+0x193a2]        # 0x422230
  408e8e:	mov    ecx,0x1
  408e93:	call   0x406230
  408e98:	mov    rax,QWORD PTR [rip+0x227a1]        # 0x42b640
  408e9f:	mov    edx,ebx
  408ea1:	add    ebx,0x1
  408ea4:	mov    rcx,QWORD PTR [rax]
  408ea7:	call   0x416670
  408eac:	mov    rcx,rax
  408eaf:	call   0x407360
  408eb4:	cmp    ebx,esi
  408eb6:	jne    0x408e98
  408eb8:	lea    rcx,[rip+0x18965]        # 0x421824
  408ebf:	call   0x405f70
  408ec4:	call   0x405fa0
  408ec9:	mov    rax,QWORD PTR [rip+0x22980]        # 0x42b850
  408ed0:	mov    edx,DWORD PTR [rax]
  408ed2:	test   edx,edx
  408ed4:	jne    0x4094d9
  408eda:	lea    rcx,[rip+0x18943]        # 0x421824
  408ee1:	call   0x405f70
  408ee6:	lea    rdx,[rip+0x193c9]        # 0x4222b6
  408eed:	mov    ecx,0x1
  408ef2:	call   0x406230
  408ef7:	mov    rax,QWORD PTR [rsp+0x40]
  408efc:	mov    rcx,QWORD PTR [rax]
  408eff:	call   0x407820
  408f04:	mov    rcx,QWORD PTR [r14]
  408f07:	lea    rdx,[rip+0x193c0]        # 0x4222ce
  408f0e:	mov    r8,rax
  408f11:	call   0x406050
  408f16:	mov    rcx,QWORD PTR [r14]
  408f19:	call   0x405f30
  408f1e:	lea    rdx,[rip+0x188b3]        # 0x4217d8
  408f25:	mov    ecx,0x1
  408f2a:	call   0x406230
  408f2f:	call   0x405fa0
  408f34:	mov    rax,QWORD PTR [rip+0x22825]        # 0x42b760
  408f3b:	mov    eax,DWORD PTR [rax]
  408f3d:	test   eax,eax
  408f3f:	jne    0x409006
  408f45:	mov    r13d,DWORD PTR [rsp+0x54]
  408f4a:	test   r13d,r13d
  408f4d:	jle    0x409000
  408f53:	lea    rcx,[rip+0x188ca]        # 0x421824
  408f5a:	lea    r12,[rsp+0x70]
  408f5f:	xor    ebx,ebx
  408f61:	call   0x405f70
  408f66:	lea    rdx,[rip+0x1937d]        # 0x4222ea
  408f6d:	mov    ecx,0x1
  408f72:	call   0x406230
  408f77:	mov    rdi,QWORD PTR [rip+0x226f2]        # 0x42b670
  408f7e:	mov    rax,QWORD PTR [rip+0x229ab]        # 0x42b930
  408f85:	mov    edx,ebx
  408f87:	mov    rcx,QWORD PTR [rax]
  408f8a:	call   0x416670
  408f8f:	cmp    QWORD PTR [rax+0x48],0x0
  408f94:	mov    rsi,rax
  408f97:	je     0x408fec
  408f99:	mov    QWORD PTR [rsp+0x70],0x0
  408fa2:	call   0x415f30
  408fa7:	mov    rcx,QWORD PTR [rdi]
  408faa:	mov    rdx,r12
  408fad:	mov    rbp,rax
  408fb0:	call   0x401530
  408fb5:	mov    rcx,QWORD PTR [rsp+0x70]
  408fba:	call   0x416530
  408fbf:	call   0x416500
  408fc4:	mov    rcx,QWORD PTR [rdi]
  408fc7:	mov    rdx,rax
  408fca:	call   0x401550
  408fcf:	mov    rdx,QWORD PTR [rdi]
  408fd2:	lea    r8,[rip+0x7a7]        # 0x409780
  408fd9:	mov    rcx,rsi
  408fdc:	mov    r9,rbp
  408fdf:	call   0x402540
  408fe4:	mov    rcx,rbp
  408fe7:	call   0x416010
  408fec:	add    ebx,0x1
  408fef:	cmp    ebx,r13d
  408ff2:	jne    0x408f7e
  408ff4:	lea    rcx,[rip+0x18829]        # 0x421824
  408ffb:	call   0x405f70
  409000:	call   0x405fa0
  409005:	nop
  409006:	add    rsp,0xb8
  40900d:	pop    rbx
  40900e:	pop    rsi
  40900f:	pop    rdi
  409010:	pop    rbp
  409011:	pop    r12
  409013:	pop    r13
  409015:	pop    r14
  409017:	pop    r15
  409019:	ret    
  40901a:	xor    edi,edi
  40901c:	mov    r15,QWORD PTR [rsp+0x40]
  409021:	mov    QWORD PTR [rsp+0x48],rbp
  409026:	jmp    0x4090e8
  40902b:	nop    DWORD PTR [rax+rax*1+0x0]
  409030:	mov    eax,DWORD PTR [rcx+0x4]
  409033:	cmp    edi,eax
  409035:	jge    0x4090ff
  40903b:	mov    edx,edi
  40903d:	call   0x416670
  409042:	mov    r12,rax
  409045:	call   0x415f30
  40904a:	cmp    DWORD PTR [r12+0xc],0x69
  409050:	mov    rbx,rax
  409053:	je     0x409068
  409055:	lea    rdx,[rip+0x18836]        # 0x421892
  40905c:	lea    rcx,[rip+0x18743]        # 0x4217a6
  409063:	call   0x406300
  409068:	mov    rax,QWORD PTR [rip+0x22601]        # 0x42b670
  40906f:	lea    rdx,[r12+0x68]
  409074:	mov    r8,rbx
  409077:	lea    rsi,[rip+0x187a6]        # 0x421824
  40907e:	mov    rax,QWORD PTR [rax]
  409081:	mov    rcx,rax
  409084:	call   QWORD PTR [rax+0x10]
  409087:	mov    rcx,rbx
  40908a:	call   0x4164d0
  40908f:	test   rbx,rbx
  409092:	je     0x4090a6
  409094:	mov    rsi,QWORD PTR [rbx+0x10]
  409098:	lea    rax,[rip+0x18785]        # 0x421824
  40909f:	test   rsi,rsi
  4090a2:	cmove  rsi,rax
  4090a6:	mov    rcx,QWORD PTR [r12+0x50]
  4090ab:	add    edi,0x1
  4090ae:	call   0x407940
  4090b3:	mov    rcx,r12
  4090b6:	mov    rbp,rax
  4090b9:	call   0x407720
  4090be:	mov    QWORD PTR [rsp+0x20],rsi
  4090c3:	mov    rcx,QWORD PTR [r14]
  4090c6:	lea    rdx,[rip+0x18b6b]        # 0x421c38
  4090cd:	mov    r8,rax
  4090d0:	mov    r9,rbp
  4090d3:	call   0x406050
  4090d8:	mov    rcx,rbx
  4090db:	call   0x416010
  4090e0:	mov    rcx,QWORD PTR [r14]
  4090e3:	call   0x405f30
  4090e8:	mov    rcx,QWORD PTR [r15+0x30]
  4090ec:	test   rcx,rcx
  4090ef:	jne    0x409030
  4090f5:	xor    eax,eax
  4090f7:	cmp    edi,eax
  4090f9:	jl     0x40903b
  4090ff:	mov    rsi,QWORD PTR [rsp+0x40]
  409104:	mov    rbp,QWORD PTR [rsp+0x48]
  409109:	mov    rcx,rsi
  40910c:	call   0x407720
  409111:	mov    rcx,QWORD PTR [rsi+0x50]
  409115:	mov    rbx,rax
  409118:	call   0x407940
  40911d:	mov    rcx,QWORD PTR [r14]
  409120:	lea    rdx,[rip+0x18b26]        # 0x421c4d
  409127:	mov    r8,rax
  40912a:	mov    r9,rbx
  40912d:	call   0x406050
  409132:	mov    rcx,QWORD PTR [r14]
  409135:	call   0x405f30
  40913a:	jmp    0x4082f8
  40913f:	mov    rcx,QWORD PTR [rsp+0x40]
  409144:	call   0x407940
  409149:	mov    rcx,QWORD PTR [r14]
  40914c:	lea    rdx,[rip+0x18b0a]        # 0x421c5d
  409153:	mov    r8,rax
  409156:	call   0x406050
  40915b:	mov    rcx,QWORD PTR [r14]
  40915e:	call   0x405f30
  409163:	jmp    0x4082f8
  409168:	mov    rcx,QWORD PTR [rsp+0x40]
  40916d:	xor    r15d,r15d
  409170:	call   0x407720
  409175:	mov    rcx,QWORD PTR [r14]
  409178:	lea    rdx,[rip+0x18af5]        # 0x421c74
  40917f:	mov    r8,rax
  409182:	call   0x406050
  409187:	mov    rcx,QWORD PTR [r14]
  40918a:	call   0x405f30
  40918f:	mov    rax,QWORD PTR [rsp+0x40]
  409194:	mov    QWORD PTR [rsp+0x48],r14
  409199:	mov    rcx,QWORD PTR [rax+0x30]
  40919d:	test   rcx,rcx
  4091a0:	je     0x409312
  4091a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091b0:	mov    eax,DWORD PTR [rcx+0x4]
  4091b3:	cmp    r15d,eax
  4091b6:	jge    0x40931d
  4091bc:	mov    edx,r15d
  4091bf:	call   0x416670
  4091c4:	cmp    DWORD PTR [rax+0xc],0x6a
  4091c8:	mov    r12,rax
  4091cb:	je     0x4091e0
  4091cd:	lea    rdx,[rip+0x18789]        # 0x42195d
  4091d4:	lea    rcx,[rip+0x185cb]        # 0x4217a6
  4091db:	call   0x406300
  4091e0:	mov    rcx,r12
  4091e3:	call   0x407720
  4091e8:	mov    rcx,QWORD PTR [r12+0x50]
  4091ed:	mov    rsi,rax
  4091f0:	call   0x407940
  4091f5:	mov    ecx,0x1
  4091fa:	mov    rbx,rax
  4091fd:	call   0x406180
  409202:	mov    QWORD PTR [rsp+0x20],rsi
  409207:	mov    rsi,QWORD PTR [rsp+0x48]
  40920c:	lea    rdx,[rip+0x18a76]        # 0x421c89
  409213:	mov    r8,rax
  409216:	mov    r9,rbx
  409219:	mov    rcx,QWORD PTR [rsi]
  40921c:	call   0x406050
  409221:	mov    rcx,QWORD PTR [rsi]
  409224:	call   0x405f30
  409229:	mov    eax,DWORD PTR [r12+0x88]
  409231:	test   eax,eax
  409233:	jle    0x4092f0
  409239:	call   0x415f30
  40923e:	mov    rbx,rax
  409241:	mov    eax,DWORD PTR [r12+0x88]
  409249:	test   eax,eax
  40924b:	jle    0x4092e0
  409251:	lea    rdi,[r12+0x90]
  409259:	xor    esi,esi
  40925b:	jmp    0x4092a4
  40925d:	nop    DWORD PTR [rax]
  409260:	mov    r9d,DWORD PTR [r14+0x2100]
  409267:	lea    r8,[rip+0x1873f]        # 0x4219ad
  40926e:	mov    edx,0x40
  409273:	mov    rcx,rbp
  409276:	add    esi,0x1
  409279:	add    rdi,0x8
  40927d:	call   r13
  409280:	mov    rdx,rbp
  409283:	mov    rcx,rbx
  409286:	call   0x416200
  40928b:	lea    rdx,[rip+0x18a15]        # 0x421ca7
  409292:	mov    rcx,rbx
  409295:	call   0x416200
  40929a:	cmp    esi,DWORD PTR [r12+0x88]
  4092a2:	jge    0x4092e0
  4092a4:	lea    rdx,[rip+0x189e6]        # 0x421c91
  4092ab:	mov    rcx,rbx
  4092ae:	call   0x416200
  4092b3:	mov    r14,QWORD PTR [rdi]
  4092b6:	mov    eax,DWORD PTR [r14+0x20f8]
  4092bd:	test   eax,eax
  4092bf:	jne    0x409260
  4092c1:	lea    rdx,[rip+0x189cb]        # 0x421c93
  4092c8:	lea    rcx,[rip+0x184d7]        # 0x4217a6
  4092cf:	call   0x406300
  4092d4:	jmp    0x409260
  4092d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092e0:	mov    rcx,rbx
  4092e3:	call   0x405f30
  4092e8:	mov    rcx,rbx
  4092eb:	call   0x416010
  4092f0:	lea    rcx,[rip+0x189b2]        # 0x421ca9
  4092f7:	add    r15d,0x1
  4092fb:	call   0x405f70
  409300:	mov    rax,QWORD PTR [rsp+0x40]
  409305:	mov    rcx,QWORD PTR [rax+0x30]
  409309:	test   rcx,rcx
  40930c:	jne    0x4091b0
  409312:	xor    eax,eax
  409314:	cmp    r15d,eax
  409317:	jl     0x4091bc
  40931d:	mov    r14,QWORD PTR [rsp+0x48]
  409322:	mov    rcx,QWORD PTR [rsp+0x40]
  409327:	call   0x407940
  40932c:	mov    rcx,QWORD PTR [r14]
  40932f:	lea    rdx,[rip+0x18975]        # 0x421cab
  409336:	mov    r8,rax
  409339:	call   0x406050
  40933e:	mov    rcx,QWORD PTR [r14]
  409341:	call   0x405f30
  409346:	jmp    0x4082f8
  40934b:	test   ah,0x2
  40934e:	lea    r9,[rip+0x18731]        # 0x421a86
  409355:	jne    0x4088ae
  40935b:	test   ah,0x1
  40935e:	lea    r9,[rip+0x18743]        # 0x421aa8
  409365:	jne    0x4088ae
  40936b:	test   ah,0x10
  40936e:	lea    r9,[rip+0x1875a]        # 0x421acf
  409375:	jne    0x4088ae
  40937b:	lea    rcx,[rip+0x18be2]        # 0x421f64
  409382:	call   0x40b3d0
  409387:	lea    r9,[rip+0x186ed]        # 0x421a7b
  40938e:	jmp    0x4088ae
  409393:	mov    rax,QWORD PTR [rip+0x22396]        # 0x42b730
  40939a:	mov    ecx,DWORD PTR [rax]
  40939c:	call   0x415e70
  4093a1:	mov    ecx,0x1
  4093a6:	mov    rbx,rax
  4093a9:	call   0x406180
  4093ae:	mov    rcx,QWORD PTR [r14]
  4093b1:	lea    rdx,[rip+0x18c00]        # 0x421fb8
  4093b8:	mov    r8,rax
  4093bb:	mov    r9,rbx
  4093be:	call   0x406050
  4093c3:	mov    rcx,QWORD PTR [r14]
  4093c6:	call   0x405f30
  4093cb:	lea    rdx,[rip+0x18406]        # 0x4217d8
  4093d2:	mov    ecx,0x1
  4093d7:	call   0x406230
  4093dc:	mov    rax,QWORD PTR [rip+0x2253d]        # 0x42b920
  4093e3:	mov    ebp,DWORD PTR [rax]
  4093e5:	test   ebp,ebp
  4093e7:	je     0x408909
  4093ed:	cmp    BYTE PTR [rsp+0x63],0x0
  4093f2:	mov    rax,QWORD PTR [rip+0x224c7]        # 0x42b8c0
  4093f9:	mov    QWORD PTR [rsp+0x40],rax
  4093fe:	je     0x4089d3
  409404:	lea    rcx,[rip+0x18419]        # 0x421824
  40940b:	xor    ebx,ebx
  40940d:	call   0x405f70
  409412:	mov    esi,DWORD PTR [rsp+0x58]
  409416:	mov    rax,QWORD PTR [rip+0x224f3]        # 0x42b910
  40941d:	mov    edx,ebx
  40941f:	mov    rcx,QWORD PTR [rax]
  409422:	call   0x416670
  409427:	mov    edi,DWORD PTR [rax+0xc]
  40942a:	lea    edx,[rdi-0x6b]
  40942d:	cmp    edx,0x1
  409430:	jbe    0x409446
  409432:	mov    rcx,rax
  409435:	call   0x4079f0
  40943a:	lea    rcx,[rip+0x183e3]        # 0x421824
  409441:	call   0x405f70
  409446:	add    ebx,0x1
  409449:	cmp    esi,ebx
  40944b:	jg     0x409416
  40944d:	jmp    0x4089d3
  409452:	mov    rcx,rdi
  409455:	call   0x407720
  40945a:	lea    rdx,[rip+0x18c5c]        # 0x4220bd
  409461:	mov    rcx,rax
  409464:	call   0x415900
  409469:	mov    rbp,rax
  40946c:	jmp    0x408b5a
  409471:	mov    rcx,rdi
  409474:	mov    ebp,DWORD PTR [rdi+0x20dc]
  40947a:	call   0x4077d0
  40947f:	mov    rcx,QWORD PTR [rdi+0x20]
  409483:	mov    rbx,rax
  409486:	call   0x407820
  40948b:	mov    DWORD PTR [rsp+0x20],ebp
  40948f:	mov    rcx,QWORD PTR [r14]
  409492:	lea    rdx,[rip+0x18caf]        # 0x422148
  409499:	mov    r8,rax
  40949c:	mov    r9,rbx
  40949f:	call   0x406050
  4094a4:	mov    rcx,QWORD PTR [r14]
  4094a7:	call   0x405f30
  4094ac:	lea    rdx,[rip+0x18325]        # 0x4217d8
  4094b3:	mov    ecx,0x1
  4094b8:	call   0x406230
  4094bd:	mov    eax,DWORD PTR [rdi+0x20b8]
  4094c3:	jmp    0x408ca4
  4094c8:	lea    rcx,[rip+0x18c5d]        # 0x42212c
  4094cf:	call   0x405f60
  4094d4:	jmp    0x408c79
  4094d9:	lea    rdx,[rip+0x18d78]        # 0x422258
  4094e0:	mov    ecx,0x1
  4094e5:	call   0x406230
  4094ea:	mov    rcx,QWORD PTR [r14]
  4094ed:	mov    edx,0x1
  4094f2:	call   0x406210
  4094f7:	mov    rax,QWORD PTR [rsp+0x40]
  4094fc:	mov    rcx,QWORD PTR [rax]
  4094ff:	call   0x407820
  409504:	mov    rcx,QWORD PTR [r14]
  409507:	lea    rdx,[rip+0x18d82]        # 0x422290
  40950e:	mov    r8,rax
  409511:	call   0x406050
  409516:	lea    rdx,[rip+0x182bb]        # 0x4217d8
  40951d:	mov    ecx,0x1
  409522:	call   0x406230
  409527:	jmp    0x408eda
  40952c:	lea    rcx,[rip+0x182f1]        # 0x421824
  409533:	call   0x405f70
  409538:	lea    rdx,[rip+0x188ed]        # 0x421e2c
  40953f:	mov    ecx,0x1
  409544:	call   0x406230
  409549:	mov    rax,QWORD PTR [rip+0x223d0]        # 0x42b920
  409550:	mov    esi,DWORD PTR [rsp+0x6c]
  409554:	mov    r10d,DWORD PTR [rax]
  409557:	test   r10d,r10d
  40955a:	sete   dl
  40955d:	test   esi,esi
  40955f:	mov    eax,edx
  409561:	jle    0x4095c9
  409563:	test   dl,dl
  409565:	je     0x4085b9
  40956b:	xor    ebx,ebx
  40956d:	mov    edi,esi
  40956f:	mov    rax,QWORD PTR [rip+0x221da]        # 0x42b750
  409576:	mov    edx,ebx
  409578:	add    ebx,0x1
  40957b:	mov    rcx,QWORD PTR [rax]
  40957e:	call   0x416670
  409583:	mov    rcx,rax
  409586:	call   0x407820
  40958b:	mov    ecx,0x1
  409590:	mov    rsi,rax
  409593:	call   0x406180
  409598:	mov    rcx,QWORD PTR [r14]
  40959b:	lea    rdx,[rip+0x1889a]        # 0x421e3c
  4095a2:	mov    r8,rax
  4095a5:	mov    r9,rsi
  4095a8:	call   0x406050
  4095ad:	mov    rcx,QWORD PTR [r14]
  4095b0:	call   0x405f30
  4095b5:	cmp    edi,ebx
  4095b7:	jg     0x40956f
  4095b9:	mov    rax,QWORD PTR [rip+0x22360]        # 0x42b920
  4095c0:	mov    r9d,DWORD PTR [rax]
  4095c3:	test   r9d,r9d
  4095c6:	sete   al
  4095c9:	test   al,al
  4095cb:	je     0x4085b9
  4095d1:	cmp    BYTE PTR [rsp+0x63],0x0
  4095d6:	je     0x4085b9
  4095dc:	lea    rcx,[rip+0x18241]        # 0x421824
  4095e3:	xor    ebx,ebx
  4095e5:	call   0x405f70
  4095ea:	lea    rdx,[rip+0x18856]        # 0x421e47
  4095f1:	mov    ecx,0x1
  4095f6:	call   0x406230
  4095fb:	mov    edi,DWORD PTR [rsp+0x58]
  4095ff:	mov    rax,QWORD PTR [rip+0x2230a]        # 0x42b910
  409606:	mov    edx,ebx
  409608:	add    ebx,0x1
  40960b:	mov    rcx,QWORD PTR [rax]
  40960e:	call   0x416670
  409613:	mov    rcx,rax
  409616:	call   0x407990
  40961b:	mov    ecx,0x1
  409620:	mov    rsi,rax
  409623:	call   0x406180
  409628:	mov    rcx,QWORD PTR [r14]
  40962b:	lea    rdx,[rip+0x1880a]        # 0x421e3c
  409632:	mov    r8,rax
  409635:	mov    r9,rsi
  409638:	call   0x406050
  40963d:	mov    rcx,QWORD PTR [r14]
  409640:	call   0x405f30
  409645:	cmp    edi,ebx
  409647:	jg     0x4095ff
  409649:	jmp    0x4085b9
  40964e:	lea    rcx,[rip+0x181cf]        # 0x421824
  409655:	call   0x405f70
  40965a:	lea    rcx,[rip+0x18523]        # 0x421b84
  409661:	call   0x405f70
  409666:	lea    rcx,[rip+0x18530]        # 0x421b9d
  40966d:	call   0x405f70
  409672:	lea    rcx,[rip+0x1853b]        # 0x421bb4
  409679:	call   0x405f70
  40967e:	lea    rcx,[rip+0x18548]        # 0x421bcd
  409685:	call   0x405f70
  40968a:	lea    rcx,[rip+0x18553]        # 0x421be4
  409691:	call   0x405f70
  409696:	lea    rcx,[rip+0x1855e]        # 0x421bfb
  40969d:	call   0x405f70
  4096a2:	lea    rcx,[rip+0x1817b]        # 0x421824
  4096a9:	call   0x405f70
  4096ae:	call   0x405fa0
  4096b3:	jmp    0x408274
  4096b8:	lea    rcx,[rip+0x18939]        # 0x421ff8
  4096bf:	call   0x406300
  4096c4:	test   eax,eax
  4096c6:	jne    0x408960
  4096cc:	lea    rdx,[rip+0x17eae]        # 0x421581
  4096d3:	lea    rcx,[rip+0x1892d]        # 0x422007
  4096da:	mov    r8d,0x10f
  4096e0:	call   0x41da30
  4096e5:	jmp    0x408960
  4096ea:	mov    rax,QWORD PTR [rip+0x21f4f]        # 0x42b640
  4096f1:	mov    DWORD PTR [rsp+0x54],0x0
  4096f9:	mov    rax,QWORD PTR [rax]
  4096fc:	test   rax,rax
  4096ff:	jne    0x4081d2
  409705:	mov    rax,QWORD PTR [rip+0x22034]        # 0x42b740
  40970c:	mov    DWORD PTR [rsp+0x68],0x0
  409714:	mov    rax,QWORD PTR [rax]
  409717:	test   rax,rax
  40971a:	jne    0x4081ec
  409720:	mov    rax,QWORD PTR [rip+0x22029]        # 0x42b750
  409727:	mov    DWORD PTR [rsp+0x64],0x0
  40972f:	mov    rax,QWORD PTR [rax]
  409732:	test   rax,rax
  409735:	jne    0x408206
  40973b:	mov    rax,QWORD PTR [rip+0x221ce]        # 0x42b910
  409742:	mov    DWORD PTR [rsp+0x6c],0x0
  40974a:	mov    rax,QWORD PTR [rax]
  40974d:	test   rax,rax
  409750:	jne    0x408220
  409756:	mov    BYTE PTR [rsp+0x63],0x0
  40975b:	mov    DWORD PTR [rsp+0x58],0x0
  409763:	jmp    0x40822e
  409768:	mov    DWORD PTR [rsp+0x5c],0x0
  409770:	jmp    0x4081a5
  409775:	nop
  409776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409780:	push   r15
  409782:	push   r14
  409784:	push   r13
  409786:	push   r12
  409788:	push   rbp
  409789:	push   rdi
  40978a:	push   rsi
  40978b:	push   rbx
  40978c:	sub    rsp,0x68
  409790:	mov    eax,DWORD PTR [rdx+0x8]
  409793:	mov    r12,rcx
  409796:	mov    rbp,rdx
  409799:	mov    rsi,r8
  40979c:	mov    edi,r9d
  40979f:	cmp    eax,0x67
  4097a2:	je     0x409b20
  4097a8:	cmp    eax,0x66
  4097ab:	je     0x4097f0
  4097ad:	lea    rcx,[rip+0x18db9]        # 0x42256d
  4097b4:	call   0x406300
  4097b9:	test   eax,eax
  4097bb:	je     0x4097d0
  4097bd:	add    rsp,0x68
  4097c1:	pop    rbx
  4097c2:	pop    rsi
  4097c3:	pop    rdi
  4097c4:	pop    rbp
  4097c5:	pop    r12
  4097c7:	pop    r13
  4097c9:	pop    r14
  4097cb:	pop    r15
  4097cd:	ret    
  4097ce:	xchg   ax,ax
  4097d0:	lea    rdx,[rip+0x17daa]        # 0x421581
  4097d7:	lea    rcx,[rip+0x18db2]        # 0x422590
  4097de:	mov    r8d,0x3b1
  4097e4:	call   0x41da30
  4097e9:	jmp    0x4097bd
  4097eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4097f0:	mov    r13,QWORD PTR [rdx+0x50]
  4097f4:	lea    rcx,[rip+0x18029]        # 0x421824
  4097fb:	mov    r14d,DWORD PTR [r13+0x5c]
  4097ff:	call   0x405f70
  409804:	lea    rdx,[rip+0x1804a]        # 0x421855
  40980b:	mov    ecx,0x1
  409810:	call   0x406230
  409815:	lea    rdx,[rsp+0x58]
  40981a:	mov    rcx,r12
  40981d:	call   0x401530
  409822:	mov    rcx,QWORD PTR [rsp+0x58]
  409827:	test   rcx,rcx
  40982a:	je     0x40989f
  40982c:	mov    eax,DWORD PTR [rcx+0x4]
  40982f:	xor    ebx,ebx
  409831:	test   eax,eax
  409833:	jg     0x409882
  409835:	jmp    0x40989f
  409837:	nop    WORD PTR [rax+rax*1+0x0]
  409840:	mov    edx,DWORD PTR [rcx+0x4]
  409843:	cmp    ebx,edx
  409845:	jge    0x409890
  409847:	mov    edx,ebx
  409849:	call   0x416670
  40984e:	test   rax,rax
  409851:	mov    r15,rax
  409854:	lea    rdx,[rip+0x17fc9]        # 0x421824
  40985b:	je     0x409868
  40985d:	mov    rax,QWORD PTR [rax+0x10]
  409861:	test   rax,rax
  409864:	cmovne rdx,rax
  409868:	mov    ecx,0x1
  40986d:	add    ebx,0x1
  409870:	call   0x406230
  409875:	mov    rcx,r15
  409878:	call   0x416010
  40987d:	mov    rcx,QWORD PTR [rsp+0x58]
  409882:	test   rcx,rcx
  409885:	jne    0x409840
  409887:	xor    edx,edx
  409889:	jmp    0x409843
  40988b:	nop    DWORD PTR [rax+rax*1+0x0]
  409890:	call   0x416530
  409895:	xor    edx,edx
  409897:	mov    rcx,r12
  40989a:	call   0x401550
  40989f:	test   edi,edi
  4098a1:	je     0x409bd0
  4098a7:	cmp    r14d,0x2
  4098ab:	je     0x40a160
  4098b1:	test   edi,edi
  4098b3:	mov    ebx,0x1
  4098b8:	jle    0x4098df
  4098ba:	mov    rax,QWORD PTR [rsp+0xd8]
  4098c2:	lea    edx,[rdi-0x1]
  4098c5:	lea    rcx,[rax+rdx*8+0x8]
  4098ca:	mov    edx,0x1
  4098cf:	nop
  4098d0:	imul   rdx,QWORD PTR [rax]
  4098d4:	add    rax,0x8
  4098d8:	cmp    rax,rcx
  4098db:	jne    0x4098d0
  4098dd:	mov    ebx,edx
  4098df:	mov    rcx,rsi
  4098e2:	call   0x405e30
  4098e7:	mov    rcx,rbp
  4098ea:	call   0x407720
  4098ef:	mov    rcx,r13
  4098f2:	mov    r14,rax
  4098f5:	call   0x407940
  4098fa:	mov    ecx,0x1
  4098ff:	mov    r13,rax
  409902:	call   0x406180
  409907:	mov    r12,QWORD PTR [rip+0x21fe2]        # 0x42b8f0
  40990e:	mov    DWORD PTR [rsp+0x28],ebx
  409912:	lea    rdx,[rip+0x18bd2]        # 0x4224eb
  409919:	mov    QWORD PTR [rsp+0x20],r14
  40991e:	mov    r8,rax
  409921:	mov    r9,r13
  409924:	mov    rcx,QWORD PTR [r12]
  409928:	call   0x406020
  40992d:	mov    rcx,QWORD PTR [r12]
  409931:	call   0x405f30
  409936:	lea    rcx,[rip+0x17f18]        # 0x421855
  40993d:	call   0x405f60
  409942:	mov    rcx,rsi
  409945:	call   0x405f30
  40994a:	lea    rcx,[rip+0x183bb]        # 0x421d0c
  409951:	call   0x405f70
  409956:	mov    rcx,rbp
  409959:	call   0x407720
  40995e:	mov    ecx,0x1
  409963:	mov    rbx,rax
  409966:	call   0x406180
  40996b:	mov    DWORD PTR [rsp+0x20],edi
  40996f:	mov    rcx,QWORD PTR [r12]
  409973:	lea    rdx,[rip+0x18b86]        # 0x422500
  40997a:	mov    r8,rax
  40997d:	mov    r9,rbx
  409980:	call   0x406050
  409985:	test   edi,edi
  409987:	jle    0x40a1f1
  40998d:	mov    rax,QWORD PTR [rsp+0xd0]
  409995:	lea    r8,[rip+0x17e88]        # 0x421824
  40999c:	xor    ebx,ebx
  40999e:	lea    r14,[rip+0x17e80]        # 0x421825
  4099a5:	mov    r13,r8
  4099a8:	mov    r9,QWORD PTR [rax]
  4099ab:	lea    rsi,[rax+0x8]
  4099af:	jmp    0x4099c1
  4099b1:	test   ebx,ebx
  4099b3:	mov    r8,r13
  4099b6:	mov    r9,QWORD PTR [rsi]
  4099b9:	cmovg  r8,r14
  4099bd:	add    rsi,0x8
  4099c1:	mov    rcx,QWORD PTR [r12]
  4099c5:	lea    rdx,[rip+0x18b52]        # 0x42251e
  4099cc:	add    ebx,0x1
  4099cf:	call   0x406020
  4099d4:	cmp    ebx,edi
  4099d6:	jne    0x4099b1
  4099d8:	mov    rcx,QWORD PTR [r12]
  4099dc:	lea    r14,[rip+0x17e42]        # 0x421825
  4099e3:	call   0x405f30
  4099e8:	lea    rcx,[rip+0x1831d]        # 0x421d0c
  4099ef:	call   0x405f70
  4099f4:	mov    rcx,rbp
  4099f7:	call   0x407720
  4099fc:	mov    ecx,0x1
  409a01:	mov    rbx,rax
  409a04:	call   0x406180
  409a09:	mov    DWORD PTR [rsp+0x20],edi
  409a0d:	mov    rcx,QWORD PTR [r12]
  409a11:	lea    rdx,[rip+0x18b9f]        # 0x4225b7
  409a18:	mov    r8,rax
  409a1b:	mov    r9,rbx
  409a1e:	xor    ebx,ebx
  409a20:	call   0x406050
  409a25:	mov    rax,QWORD PTR [rsp+0xd8]
  409a2d:	lea    r8,[rip+0x17df0]        # 0x421824
  409a34:	mov    r13,r8
  409a37:	mov    r9,QWORD PTR [rax]
  409a3a:	lea    rsi,[rax+0x8]
  409a3e:	jmp    0x409a50
  409a40:	test   ebx,ebx
  409a42:	mov    r8,r13
  409a45:	mov    r9,QWORD PTR [rsi]
  409a48:	cmovg  r8,r14
  409a4c:	add    rsi,0x8
  409a50:	mov    rcx,QWORD PTR [r12]
  409a54:	lea    rdx,[rip+0x18ac3]        # 0x42251e
  409a5b:	add    ebx,0x1
  409a5e:	call   0x406020
  409a63:	cmp    ebx,edi
  409a65:	jne    0x409a40
  409a67:	mov    rcx,QWORD PTR [r12]
  409a6b:	call   0x405f30
  409a70:	lea    rcx,[rip+0x17f21]        # 0x421998
  409a77:	call   0x405f70
  409a7c:	mov    rcx,rbp
  409a7f:	call   0x407720
  409a84:	mov    rcx,rbp
  409a87:	mov    r14,rax
  409a8a:	call   0x407720
  409a8f:	mov    rcx,rbp
  409a92:	mov    r13,rax
  409a95:	call   0x407720
  409a9a:	mov    rcx,rbp
  409a9d:	mov    rdi,rax
  409aa0:	call   0x4077d0
  409aa5:	mov    rcx,QWORD PTR [rbp+0x20]
  409aa9:	mov    rsi,rax
  409aac:	call   0x407820
  409ab1:	mov    ecx,0x1
  409ab6:	mov    rbx,rax
  409ab9:	call   0x406180
  409abe:	mov    QWORD PTR [rsp+0x38],r14
  409ac3:	mov    QWORD PTR [rsp+0x30],r13
  409ac8:	lea    rdx,[rip+0x18a59]        # 0x422528
  409acf:	mov    QWORD PTR [rsp+0x28],rdi
  409ad4:	mov    QWORD PTR [rsp+0x20],rsi
  409ad9:	mov    r8,rax
  409adc:	mov    rcx,QWORD PTR [r12]
  409ae0:	mov    r9,rbx
  409ae3:	call   0x406050
  409ae8:	mov    rcx,QWORD PTR [r12]
  409aec:	call   0x405f30
  409af1:	lea    rdx,[rip+0x17ce0]        # 0x4217d8
  409af8:	mov    ecx,0x1
  409afd:	call   0x406230
  409b02:	lea    rdx,[rip+0x18a61]        # 0x42256a
  409b09:	mov    ecx,0x1
  409b0e:	call   0x406230
  409b13:	call   0x405fa0
  409b18:	jmp    0x4097bd
  409b1d:	nop    DWORD PTR [rax]
  409b20:	mov    r13,QWORD PTR [rdx+0x50]
  409b24:	mov    rax,QWORD PTR [rdx+0x48]
  409b28:	lea    rcx,[rip+0x17cf5]        # 0x421824
  409b2f:	mov    ebx,DWORD PTR [r13+0x5c]
  409b33:	mov    r14,QWORD PTR [rax+0x10]
  409b37:	call   0x405f70
  409b3c:	lea    rdx,[rip+0x17d12]        # 0x421855
  409b43:	mov    ecx,0x1
  409b48:	call   0x406230
  409b4d:	cmp    ebx,0x2
  409b50:	je     0x409cc0
  409b56:	lea    rdx,[rsp+0x58]
  409b5b:	mov    rcx,r12
  409b5e:	call   0x401530
  409b63:	mov    rcx,QWORD PTR [rsp+0x58]
  409b68:	test   rcx,rcx
  409b6b:	je     0x40a0c1
  409b71:	mov    r9d,DWORD PTR [rcx+0x4]
  409b75:	xor    ebx,ebx
  409b77:	test   r9d,r9d
  409b7a:	jg     0x409bc7
  409b7c:	jmp    0x40a0c1
  409b81:	mov    edx,DWORD PTR [rcx+0x4]
  409b84:	cmp    ebx,edx
  409b86:	jge    0x40a0b2
  409b8c:	mov    edx,ebx
  409b8e:	call   0x416670
  409b93:	test   rax,rax
  409b96:	mov    rdi,rax
  409b99:	lea    rdx,[rip+0x17c84]        # 0x421824
  409ba0:	je     0x409bad
  409ba2:	mov    rax,QWORD PTR [rax+0x10]
  409ba6:	test   rax,rax
  409ba9:	cmovne rdx,rax
  409bad:	mov    ecx,0x1
  409bb2:	add    ebx,0x1
  409bb5:	call   0x406230
  409bba:	mov    rcx,rdi
  409bbd:	call   0x416010
  409bc2:	mov    rcx,QWORD PTR [rsp+0x58]
  409bc7:	test   rcx,rcx
  409bca:	jne    0x409b81
  409bcc:	xor    edx,edx
  409bce:	jmp    0x409b84
  409bd0:	lea    rdx,[rip+0x1889e]        # 0x422475
  409bd7:	mov    ecx,0x1
  409bdc:	call   0x406230
  409be1:	mov    rcx,rsi
  409be4:	call   0x405e30
  409be9:	test   rsi,rsi
  409bec:	je     0x40a0a6
  409bf2:	mov    rsi,QWORD PTR [rsi+0x10]
  409bf6:	lea    rax,[rip+0x17c27]        # 0x421824
  409bfd:	test   rsi,rsi
  409c00:	cmove  rsi,rax
  409c04:	mov    rcx,rbp
  409c07:	call   0x407720
  409c0c:	mov    rcx,r13
  409c0f:	mov    r12,rax
  409c12:	call   0x407940
  409c17:	mov    ecx,0x1
  409c1c:	mov    rdi,rax
  409c1f:	call   0x406180
  409c24:	mov    rbx,QWORD PTR [rip+0x21cc5]        # 0x42b8f0
  409c2b:	mov    QWORD PTR [rsp+0x28],rsi
  409c30:	lea    rdx,[rip+0x18851]        # 0x422488
  409c37:	mov    QWORD PTR [rsp+0x20],r12
  409c3c:	mov    r9,rdi
  409c3f:	mov    r8,rax
  409c42:	mov    rcx,QWORD PTR [rbx]
  409c45:	call   0x406050
  409c4a:	mov    rcx,QWORD PTR [rbx]
  409c4d:	call   0x405f30
  409c52:	mov    rcx,rbp
  409c55:	call   0x407720
  409c5a:	mov    rcx,rbp
  409c5d:	mov    r12,rax
  409c60:	call   0x4077d0
  409c65:	mov    rcx,QWORD PTR [rbp+0x20]
  409c69:	mov    rdi,rax
  409c6c:	call   0x407820
  409c71:	mov    ecx,0x1
  409c76:	mov    rsi,rax
  409c79:	call   0x406180
  409c7e:	mov    QWORD PTR [rsp+0x28],r12
  409c83:	mov    QWORD PTR [rsp+0x20],rdi
  409c88:	lea    rdx,[rip+0x18819]        # 0x4224a8
  409c8f:	mov    rcx,QWORD PTR [rbx]
  409c92:	mov    r8,rax
  409c95:	mov    r9,rsi
  409c98:	call   0x406050
  409c9d:	mov    rcx,QWORD PTR [rbx]
  409ca0:	call   0x405f30
  409ca5:	lea    rdx,[rip+0x17b2c]        # 0x4217d8
  409cac:	mov    ecx,0x1
  409cb1:	call   0x406230
  409cb6:	call   0x405fa0
  409cbb:	jmp    0x409b02
  409cc0:	test   rsi,rsi
  409cc3:	je     0x40a23a
  409cc9:	mov    r14d,DWORD PTR [rsi+0x8]
  409ccd:	mov    eax,0x1
  409cd2:	test   r14,r14
  409cd5:	cmove  r14,rax
  409cd9:	mov    edx,0x22
  409cde:	mov    rcx,rsi
  409ce1:	call   0x4065e0
  409ce6:	mov    ecx,DWORD PTR [r13+0x5c]
  409cea:	cmp    ecx,0xc
  409ced:	ja     0x40a000
  409cf3:	lea    rax,[rip+0x188de]        # 0x4225d8
  409cfa:	mov    edx,ecx
  409cfc:	movsxd rdx,DWORD PTR [rax+rdx*4]
  409d00:	add    rax,rdx
  409d03:	jmp    rax
  409d05:	mov    rax,QWORD PTR [rip+0x21c14]        # 0x42b920
  409d0c:	mov    ecx,DWORD PTR [rax]
  409d0e:	test   ecx,ecx
  409d10:	jne    0x40a1d3
  409d16:	mov    rcx,rbp
  409d19:	lea    rsi,[rip+0x185f8]        # 0x422318
  409d20:	call   0x407720
  409d25:	mov    rcx,QWORD PTR [rbp+0x10]
  409d29:	mov    r12,rax
  409d2c:	call   0x4065b0
  409d31:	mov    rcx,QWORD PTR [rbp+0x20f0]
  409d38:	mov    rdi,rax
  409d3b:	test   rcx,rcx
  409d3e:	je     0x409d48
  409d40:	call   0x4077d0
  409d45:	mov    rsi,rax
  409d48:	mov    rcx,QWORD PTR [rbp+0x20]
  409d4c:	call   0x407820
  409d51:	mov    ecx,DWORD PTR [r13+0x5c]
  409d55:	mov    r15,rax
  409d58:	call   0x407620
  409d5d:	mov    ecx,0x1
  409d62:	mov    rbp,rax
  409d65:	call   0x406180
  409d6a:	mov    rbx,QWORD PTR [rip+0x21b7f]        # 0x42b8f0
  409d71:	mov    QWORD PTR [rsp+0x40],r12
  409d76:	lea    rdx,[rip+0x1868b]        # 0x422408
  409d7d:	mov    QWORD PTR [rsp+0x38],r14
  409d82:	mov    QWORD PTR [rsp+0x30],rdi
  409d87:	mov    r8,rax
  409d8a:	mov    QWORD PTR [rsp+0x28],rsi
  409d8f:	mov    QWORD PTR [rsp+0x20],r15
  409d94:	mov    r9,rbp
  409d97:	mov    rcx,QWORD PTR [rbx]
  409d9a:	call   0x406050
  409d9f:	mov    rcx,QWORD PTR [rbx]
  409da2:	call   0x405f30
  409da7:	nop    WORD PTR [rax+rax*1+0x0]
  409db0:	lea    rdx,[rip+0x17a21]        # 0x4217d8
  409db7:	mov    ecx,0x1
  409dbc:	call   0x406230
  409dc1:	lea    rdx,[rip+0x17a3d]        # 0x421805
  409dc8:	mov    ecx,0x1
  409dcd:	call   0x406230
  409dd2:	jmp    0x4097bd
  409dd7:	nop    WORD PTR [rax+rax*1+0x0]
  409de0:	mov    rax,QWORD PTR [rip+0x21b39]        # 0x42b920
  409de7:	mov    r8d,DWORD PTR [rax]
  409dea:	test   r8d,r8d
  409ded:	jne    0x40a1d8
  409df3:	mov    rcx,rbp
  409df6:	lea    rsi,[rip+0x1851b]        # 0x422318
  409dfd:	call   0x407720
  409e02:	mov    rcx,r13
  409e05:	mov    r15,rax
  409e08:	call   0x407990
  409e0d:	mov    rcx,QWORD PTR [rbp+0x10]
  409e11:	mov    r12,rax
  409e14:	call   0x4065b0
  409e19:	mov    rcx,QWORD PTR [rbp+0x20f0]
  409e20:	mov    rdi,rax
  409e23:	test   rcx,rcx
  409e26:	je     0x409e30
  409e28:	call   0x4077d0
  409e2d:	mov    rsi,rax
  409e30:	mov    rcx,QWORD PTR [rbp+0x20]
  409e34:	call   0x407820
  409e39:	mov    ecx,DWORD PTR [r13+0x5c]
  409e3d:	mov    rbx,rax
  409e40:	call   0x407620
  409e45:	mov    ecx,0x1
  409e4a:	mov    rbp,rax
  409e4d:	call   0x406180
  409e52:	mov    r13,QWORD PTR [rip+0x21a97]        # 0x42b8f0
  409e59:	mov    QWORD PTR [rsp+0x48],r15
  409e5e:	lea    rdx,[rip+0x1856b]        # 0x4223d0
  409e65:	mov    QWORD PTR [rsp+0x40],r14
  409e6a:	mov    QWORD PTR [rsp+0x38],r12
  409e6f:	mov    r8,rax
  409e72:	mov    QWORD PTR [rsp+0x30],rdi
  409e77:	mov    QWORD PTR [rsp+0x28],rsi
  409e7c:	mov    r9,rbp
  409e7f:	mov    QWORD PTR [rsp+0x20],rbx
  409e84:	mov    rcx,QWORD PTR [r13+0x0]
  409e88:	call   0x406050
  409e8d:	mov    rcx,QWORD PTR [r13+0x0]
  409e91:	call   0x405f30
  409e96:	jmp    0x409db0
  409e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  409ea0:	test   rsi,rsi
  409ea3:	lea    rbx,[rip+0x1797a]        # 0x421824
  409eaa:	je     0x409ebe
  409eac:	mov    rbx,QWORD PTR [rsi+0x10]
  409eb0:	lea    rax,[rip+0x1796d]        # 0x421824
  409eb7:	test   rbx,rbx
  409eba:	cmove  rbx,rax
  409ebe:	mov    rcx,QWORD PTR [rbp+0x10]
  409ec2:	lea    rdi,[rip+0x1844f]        # 0x422318
  409ec9:	call   0x4065b0
  409ece:	mov    rcx,QWORD PTR [rbp+0x20f0]
  409ed5:	mov    r12,rax
  409ed8:	test   rcx,rcx
  409edb:	je     0x409ee5
  409edd:	call   0x4077d0
  409ee2:	mov    rdi,rax
  409ee5:	mov    rcx,QWORD PTR [rbp+0x20]
  409ee9:	call   0x407820
  409eee:	mov    ecx,DWORD PTR [r13+0x5c]
  409ef2:	mov    r15,rax
  409ef5:	call   0x407620
  409efa:	mov    ecx,0x1
  409eff:	mov    rbp,rax
  409f02:	call   0x406180
  409f07:	mov    rsi,QWORD PTR [rip+0x219e2]        # 0x42b8f0
  409f0e:	mov    QWORD PTR [rsp+0x40],rbx
  409f13:	lea    rdx,[rip+0x1846e]        # 0x422388
  409f1a:	mov    QWORD PTR [rsp+0x38],r14
  409f1f:	mov    QWORD PTR [rsp+0x30],r12
  409f24:	mov    r8,rax
  409f27:	mov    QWORD PTR [rsp+0x28],rdi
  409f2c:	mov    QWORD PTR [rsp+0x20],r15
  409f31:	mov    r9,rbp
  409f34:	mov    rcx,QWORD PTR [rsi]
  409f37:	call   0x406050
  409f3c:	mov    rcx,QWORD PTR [rsi]
  409f3f:	call   0x405f30
  409f44:	jmp    0x409db0
  409f49:	nop    DWORD PTR [rax+0x0]
  409f50:	mov    rcx,rbp
  409f53:	lea    rsi,[rip+0x183be]        # 0x422318
  409f5a:	call   0x407720
  409f5f:	mov    rcx,r13
  409f62:	mov    r15,rax
  409f65:	call   0x407990
  409f6a:	mov    rcx,QWORD PTR [rbp+0x10]
  409f6e:	mov    r12,rax
  409f71:	call   0x4065b0
  409f76:	mov    rcx,QWORD PTR [rbp+0x20f0]
  409f7d:	mov    rdi,rax
  409f80:	test   rcx,rcx
  409f83:	je     0x409f8d
  409f85:	call   0x4077d0
  409f8a:	mov    rsi,rax
  409f8d:	mov    rcx,QWORD PTR [rbp+0x20]
  409f91:	call   0x407820
  409f96:	mov    ecx,DWORD PTR [r13+0x5c]
  409f9a:	mov    rbx,rax
  409f9d:	call   0x407620
  409fa2:	mov    ecx,0x1
  409fa7:	mov    rbp,rax
  409faa:	call   0x406180
  409faf:	mov    r13,QWORD PTR [rip+0x2193a]        # 0x42b8f0
  409fb6:	mov    QWORD PTR [rsp+0x48],r15
  409fbb:	lea    rdx,[rip+0x1838e]        # 0x422350
  409fc2:	mov    QWORD PTR [rsp+0x40],r14
  409fc7:	mov    QWORD PTR [rsp+0x38],r12
  409fcc:	mov    r8,rax
  409fcf:	mov    QWORD PTR [rsp+0x30],rdi
  409fd4:	mov    QWORD PTR [rsp+0x28],rsi
  409fd9:	mov    r9,rbp
  409fdc:	mov    QWORD PTR [rsp+0x20],rbx
  409fe1:	mov    rcx,QWORD PTR [r13+0x0]
  409fe5:	call   0x406050
  409fea:	mov    rcx,QWORD PTR [r13+0x0]
  409fee:	call   0x405f30
  409ff3:	jmp    0x409db0
  409ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a000:	mov    rax,QWORD PTR [rip+0x21919]        # 0x42b920
  40a007:	mov    edx,DWORD PTR [rax]
  40a009:	test   edx,edx
  40a00b:	jne    0x40a24d
  40a011:	mov    rcx,rbp
  40a014:	lea    rsi,[rip+0x182fd]        # 0x422318
  40a01b:	call   0x407720
  40a020:	mov    rcx,r13
  40a023:	mov    r12,rax
  40a026:	call   0x407990
  40a02b:	mov    rcx,QWORD PTR [rbp+0x10]
  40a02f:	mov    r13,rax
  40a032:	call   0x4065b0
  40a037:	mov    rcx,QWORD PTR [rbp+0x20f0]
  40a03e:	mov    rdi,rax
  40a041:	test   rcx,rcx
  40a044:	je     0x40a04e
  40a046:	call   0x4077d0
  40a04b:	mov    rsi,rax
  40a04e:	mov    rcx,QWORD PTR [rbp+0x20]
  40a052:	call   0x407820
  40a057:	mov    ecx,0x1
  40a05c:	mov    rbp,rax
  40a05f:	call   0x406180
  40a064:	mov    rbx,QWORD PTR [rip+0x21885]        # 0x42b8f0
  40a06b:	mov    QWORD PTR [rsp+0x40],r12
  40a070:	lea    rdx,[rip+0x183c9]        # 0x422440
  40a077:	mov    QWORD PTR [rsp+0x38],r14
  40a07c:	mov    QWORD PTR [rsp+0x30],r13
  40a081:	mov    r8,rax
  40a084:	mov    QWORD PTR [rsp+0x28],rdi
  40a089:	mov    QWORD PTR [rsp+0x20],rsi
  40a08e:	mov    r9,rbp
  40a091:	mov    rcx,QWORD PTR [rbx]
  40a094:	call   0x406050
  40a099:	mov    rcx,QWORD PTR [rbx]
  40a09c:	call   0x405f30
  40a0a1:	jmp    0x409db0
  40a0a6:	lea    rsi,[rip+0x17777]        # 0x421824
  40a0ad:	jmp    0x409c04
  40a0b2:	call   0x416530
  40a0b7:	xor    edx,edx
  40a0b9:	mov    rcx,r12
  40a0bc:	call   0x401550
  40a0c1:	mov    rcx,rsi
  40a0c4:	call   0x405e30
  40a0c9:	mov    rax,QWORD PTR [rbp+0x48]
  40a0cd:	mov    rcx,rbp
  40a0d0:	mov    r15,QWORD PTR [rax+0x10]
  40a0d4:	call   0x407720
  40a0d9:	mov    rcx,r13
  40a0dc:	mov    r12,rax
  40a0df:	call   0x407940
  40a0e4:	mov    ecx,0x1
  40a0e9:	mov    rdi,rax
  40a0ec:	call   0x406180
  40a0f1:	mov    rbx,QWORD PTR [rip+0x217f8]        # 0x42b8f0
  40a0f8:	mov    QWORD PTR [rsp+0x28],r15
  40a0fd:	lea    rdx,[rip+0x18224]        # 0x422328
  40a104:	mov    QWORD PTR [rsp+0x20],r12
  40a109:	mov    r8,rax
  40a10c:	mov    r9,rdi
  40a10f:	mov    rcx,QWORD PTR [rbx]
  40a112:	call   0x406050
  40a117:	mov    rcx,QWORD PTR [rbx]
  40a11a:	call   0x405f30
  40a11f:	lea    rcx,[rip+0x1772f]        # 0x421855
  40a126:	call   0x405f60
  40a12b:	mov    rcx,rsi
  40a12e:	call   0x405f30
  40a133:	lea    rcx,[rip+0x176cb]        # 0x421805
  40a13a:	call   0x405f60
  40a13f:	lea    rcx,[rip+0x18203]        # 0x422349
  40a146:	call   0x405f70
  40a14b:	test   rsi,rsi
  40a14e:	je     0x409ce6
  40a154:	mov    DWORD PTR [rsi+0x8],0x0
  40a15b:	jmp    0x409ce6
  40a160:	test   rsi,rsi
  40a163:	je     0x40a245
  40a169:	mov    r13d,DWORD PTR [rsi+0x8]
  40a16d:	mov    rcx,rbp
  40a170:	call   0x407720
  40a175:	mov    ecx,0x1
  40a17a:	mov    rbx,rax
  40a17d:	call   0x406180
  40a182:	mov    r12,QWORD PTR [rip+0x21767]        # 0x42b8f0
  40a189:	mov    DWORD PTR [rsp+0x20],r13d
  40a18e:	lea    rdx,[rip+0x18343]        # 0x4224d8
  40a195:	mov    r8,rax
  40a198:	mov    r9,rbx
  40a19b:	mov    rcx,QWORD PTR [r12]
  40a19f:	call   0x406020
  40a1a4:	mov    rcx,QWORD PTR [r12]
  40a1a8:	call   0x405f30
  40a1ad:	mov    edx,0x22
  40a1b2:	mov    rcx,rsi
  40a1b5:	call   0x4065e0
  40a1ba:	mov    rcx,rsi
  40a1bd:	call   0x405f30
  40a1c2:	lea    rcx,[rip+0x18180]        # 0x422349
  40a1c9:	call   0x405f70
  40a1ce:	jmp    0x409956
  40a1d3:	mov    ecx,0xc
  40a1d8:	call   0x4156c0
  40a1dd:	lea    rcx,[rip+0x181d4]        # 0x4223b8
  40a1e4:	mov    rdx,rax
  40a1e7:	call   0x40b400
  40a1ec:	jmp    0x4097bd
  40a1f1:	mov    rcx,QWORD PTR [r12]
  40a1f5:	call   0x405f30
  40a1fa:	lea    rcx,[rip+0x17b0b]        # 0x421d0c
  40a201:	call   0x405f70
  40a206:	mov    rcx,rbp
  40a209:	call   0x407720
  40a20e:	mov    ecx,0x1
  40a213:	mov    rbx,rax
  40a216:	call   0x406180
  40a21b:	mov    DWORD PTR [rsp+0x20],edi
  40a21f:	mov    rcx,QWORD PTR [r12]
  40a223:	lea    rdx,[rip+0x1838d]        # 0x4225b7
  40a22a:	mov    r8,rax
  40a22d:	mov    r9,rbx
  40a230:	call   0x406050
  40a235:	jmp    0x409a67
  40a23a:	mov    r14d,0x1
  40a240:	jmp    0x409cd9
  40a245:	xor    r13d,r13d
  40a248:	jmp    0x40a16d
  40a24d:	call   0x415450
  40a252:	test   eax,eax
  40a254:	jne    0x40a011
  40a25a:	mov    ecx,DWORD PTR [r13+0x5c]
  40a25e:	call   0x4156c0
  40a263:	lea    rcx,[rip+0x1814e]        # 0x4223b8
  40a26a:	mov    rdx,rax
  40a26d:	call   0x40b400
  40a272:	jmp    0x40a011
  40a277:	nop
  40a278:	nop
  40a279:	nop
  40a27a:	nop
  40a27b:	nop
  40a27c:	nop
  40a27d:	nop
  40a27e:	nop
  40a27f:	nop
  40a280:	push   rdi
  40a281:	push   rsi
  40a282:	push   rbx
  40a283:	sub    rsp,0x20
  40a287:	mov    rsi,rcx
  40a28a:	call   0x415f30
  40a28f:	mov    rbx,QWORD PTR [rip+0x213ba]        # 0x42b650
  40a296:	xor    edx,edx
  40a298:	mov    rdi,rax
  40a29b:	mov    rcx,QWORD PTR [rbx]
  40a29e:	call   0x401550
  40a2a3:	mov    rdx,QWORD PTR [rbx]
  40a2a6:	lea    r8,[rip+0x13]        # 0x40a2c0
  40a2ad:	mov    r9,rdi
  40a2b0:	mov    rcx,rsi
  40a2b3:	add    rsp,0x20
  40a2b7:	pop    rbx
  40a2b8:	pop    rsi
  40a2b9:	pop    rdi
  40a2ba:	jmp    0x401dc0
  40a2bf:	nop
  40a2c0:	push   r14
  40a2c2:	push   r13
  40a2c4:	push   r12
  40a2c6:	push   rbp
  40a2c7:	push   rdi
  40a2c8:	push   rsi
  40a2c9:	push   rbx
  40a2ca:	sub    rsp,0x40
  40a2ce:	mov    eax,DWORD PTR [rdx+0x8]
  40a2d1:	mov    rbx,rdx
  40a2d4:	mov    rsi,r8
  40a2d7:	cmp    eax,0x67
  40a2da:	je     0x40a3b0
  40a2e0:	cmp    eax,0x66
  40a2e3:	je     0x40a330
  40a2e5:	lea    rcx,[rip+0x183b4]        # 0x4226a0
  40a2ec:	mov    ebx,0xffffffdc
  40a2f1:	call   0x406300
  40a2f6:	test   eax,eax
  40a2f8:	je     0x40a310
  40a2fa:	mov    eax,ebx
  40a2fc:	add    rsp,0x40
  40a300:	pop    rbx
  40a301:	pop    rsi
  40a302:	pop    rdi
  40a303:	pop    rbp
  40a304:	pop    r12
  40a306:	pop    r13
  40a308:	pop    r14
  40a30a:	ret    
  40a30b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a310:	lea    rdx,[rip+0x182fa]        # 0x422611
  40a317:	lea    rcx,[rip+0x183a2]        # 0x4226c0
  40a31e:	mov    r8d,0x179
  40a324:	call   0x41da30
  40a329:	jmp    0x40a2fa
  40a32b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a330:	test   r8,r8
  40a333:	mov    rcx,QWORD PTR [rdx+0x20]
  40a337:	lea    rax,[rip+0x182d2]        # 0x422610
  40a33e:	mov    edx,DWORD PTR [rdx+0x2130]
  40a344:	je     0x40a358
  40a346:	mov    rax,QWORD PTR [r8+0x10]
  40a34a:	lea    r8,[rip+0x182bf]        # 0x422610
  40a351:	test   rax,rax
  40a354:	cmove  rax,r8
  40a358:	test   r9d,r9d
  40a35b:	jne    0x40a444
  40a361:	mov    ecx,DWORD PTR [rcx+0x2130]
  40a367:	lea    r8,[rsp+0x30]
  40a36c:	mov    r9,rax
  40a36f:	mov    QWORD PTR [rsp+0x30],0x1
  40a378:	call   0x41b1a8
  40a37d:	mov    ebx,eax
  40a37f:	lea    r8,[rip+0x1828b]        # 0x422611
  40a386:	mov    edx,0x1a3
  40a38b:	mov    ecx,ebx
  40a38d:	call   0x415d80
  40a392:	test   rsi,rsi
  40a395:	je     0x40a2fa
  40a39b:	mov    DWORD PTR [rsi+0x8],0x0
  40a3a2:	jmp    0x40a2fa
  40a3a7:	nop    WORD PTR [rax+rax*1+0x0]
  40a3b0:	mov    rax,QWORD PTR [rdx+0x20]
  40a3b4:	mov    rdi,QWORD PTR [rdx+0x50]
  40a3b8:	mov    ebp,0xffffffff
  40a3bd:	mov    r12d,DWORD PTR [rax+0x2130]
  40a3c4:	mov    rax,QWORD PTR [rdx+0x20f0]
  40a3cb:	test   rax,rax
  40a3ce:	je     0x40a3d6
  40a3d0:	mov    ebp,DWORD PTR [rax+0x2130]
  40a3d6:	mov    rax,QWORD PTR [rbx+0x48]
  40a3da:	mov    ecx,DWORD PTR [rdi+0x5c]
  40a3dd:	mov    r14d,DWORD PTR [rdi+0x2130]
  40a3e4:	mov    r13,QWORD PTR [rax+0x10]
  40a3e8:	call   0x415480
  40a3ed:	test   eax,eax
  40a3ef:	jne    0x40a470
  40a3f1:	test   rsi,rsi
  40a3f4:	lea    rax,[rip+0x18215]        # 0x422610
  40a3fb:	je     0x40a40f
  40a3fd:	mov    rax,QWORD PTR [rsi+0x10]
  40a401:	lea    rdx,[rip+0x18208]        # 0x422610
  40a408:	test   rax,rax
  40a40b:	cmove  rax,rdx
  40a40f:	mov    r8,QWORD PTR [rbx+0x10]
  40a413:	mov    edx,ebp
  40a415:	mov    ecx,r12d
  40a418:	mov    QWORD PTR [rsp+0x28],rax
  40a41d:	mov    QWORD PTR [rsp+0x20],r13
  40a422:	mov    r9d,r14d
  40a425:	call   0x41b210
  40a42a:	lea    r8,[rip+0x181e0]        # 0x422611
  40a431:	mov    edx,0x206
  40a436:	mov    ecx,eax
  40a438:	mov    ebx,eax
  40a43a:	call   0x415d80
  40a43f:	jmp    0x40a2fa
  40a444:	mov    ecx,DWORD PTR [rcx+0x2130]
  40a44a:	mov    r9,QWORD PTR [rsp+0xa8]
  40a452:	mov    r8,QWORD PTR [rsp+0xa0]
  40a45a:	mov    QWORD PTR [rsp+0x20],rax
  40a45f:	call   0x41b1a0
  40a464:	mov    ebx,eax
  40a466:	jmp    0x40a37f
  40a46b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a470:	mov    edx,DWORD PTR [rdi+0x5c]
  40a473:	cmp    edx,0xc
  40a476:	ja     0x40a840
  40a47c:	lea    rax,[rip+0x18269]        # 0x4226ec
  40a483:	mov    ecx,edx
  40a485:	movsxd rcx,DWORD PTR [rax+rcx*4]
  40a489:	add    rax,rcx
  40a48c:	jmp    rax
  40a48e:	test   rsi,rsi
  40a491:	je     0x40a890
  40a497:	mov    rax,QWORD PTR [rsi+0x10]
  40a49b:	mov    r9d,DWORD PTR [rsi+0x8]
  40a49f:	lea    rdx,[rip+0x1816a]        # 0x422610
  40a4a6:	test   rax,rax
  40a4a9:	cmove  rax,rdx
  40a4ad:	shr    r9,0x3
  40a4b1:	mov    r8,QWORD PTR [rbx+0x10]
  40a4b5:	mov    edx,ebp
  40a4b7:	mov    QWORD PTR [rsp+0x20],rax
  40a4bc:	mov    ecx,r12d
  40a4bf:	call   0x41b1d8
  40a4c4:	mov    ebx,eax
  40a4c6:	jmp    0x40a2fa
  40a4cb:	test   rsi,rsi
  40a4ce:	je     0x40a89f
  40a4d4:	mov    rax,QWORD PTR [rsi+0x10]
  40a4d8:	lea    rdx,[rip+0x18131]        # 0x422610
  40a4df:	test   rax,rax
  40a4e2:	cmove  rax,rdx
  40a4e6:	mov    r8,QWORD PTR [rbx+0x10]
  40a4ea:	mov    edx,ebp
  40a4ec:	mov    ecx,r12d
  40a4ef:	mov    QWORD PTR [rsp+0x28],rax
  40a4f4:	mov    QWORD PTR [rsp+0x20],r13
  40a4f9:	mov    r9d,r14d
  40a4fc:	call   0x41b1b8
  40a501:	lea    r8,[rip+0x18109]        # 0x422611
  40a508:	mov    edx,0x1fc
  40a50d:	mov    ecx,eax
  40a50f:	mov    ebx,eax
  40a511:	call   0x415d80
  40a516:	jmp    0x40a2fa
  40a51b:	test   rsi,rsi
  40a51e:	je     0x40a8b7
  40a524:	mov    rax,QWORD PTR [rsi+0x10]
  40a528:	lea    rdx,[rip+0x180e1]        # 0x422610
  40a52f:	test   rax,rax
  40a532:	cmove  rax,rdx
  40a536:	mov    r8,QWORD PTR [rbx+0x10]
  40a53a:	mov    edx,ebp
  40a53c:	mov    ecx,r12d
  40a53f:	mov    QWORD PTR [rsp+0x28],rax
  40a544:	mov    QWORD PTR [rsp+0x20],r13
  40a549:	mov    r9d,r14d
  40a54c:	call   0x41b1c0
  40a551:	lea    r8,[rip+0x180b9]        # 0x422611
  40a558:	mov    edx,0x1f2
  40a55d:	mov    ecx,eax
  40a55f:	mov    ebx,eax
  40a561:	call   0x415d80
  40a566:	jmp    0x40a2fa
  40a56b:	test   rsi,rsi
  40a56e:	je     0x40a8ab
  40a574:	mov    rax,QWORD PTR [rsi+0x10]
  40a578:	lea    rdx,[rip+0x18091]        # 0x422610
  40a57f:	test   rax,rax
  40a582:	cmove  rax,rdx
  40a586:	mov    r8,QWORD PTR [rbx+0x10]
  40a58a:	mov    edx,ebp
  40a58c:	mov    ecx,r12d
  40a58f:	mov    QWORD PTR [rsp+0x28],rax
  40a594:	mov    QWORD PTR [rsp+0x20],r13
  40a599:	mov    r9d,r14d
  40a59c:	call   0x41b1f0
  40a5a1:	lea    r8,[rip+0x18069]        # 0x422611
  40a5a8:	mov    edx,0x1f7
  40a5ad:	mov    ecx,eax
  40a5af:	mov    ebx,eax
  40a5b1:	call   0x415d80
  40a5b6:	jmp    0x40a2fa
  40a5bb:	test   rsi,rsi
  40a5be:	je     0x40a8cf
  40a5c4:	mov    rax,QWORD PTR [rsi+0x10]
  40a5c8:	lea    rdx,[rip+0x18041]        # 0x422610
  40a5cf:	test   rax,rax
  40a5d2:	cmove  rax,rdx
  40a5d6:	mov    r8,QWORD PTR [rbx+0x10]
  40a5da:	mov    edx,ebp
  40a5dc:	mov    ecx,r12d
  40a5df:	mov    QWORD PTR [rsp+0x28],rax
  40a5e4:	mov    QWORD PTR [rsp+0x20],r13
  40a5e9:	mov    r9d,r14d
  40a5ec:	call   0x41b1b0
  40a5f1:	lea    r8,[rip+0x18019]        # 0x422611
  40a5f8:	mov    edx,0x1ed
  40a5fd:	mov    ecx,eax
  40a5ff:	mov    ebx,eax
  40a601:	call   0x415d80
  40a606:	jmp    0x40a2fa
  40a60b:	test   rsi,rsi
  40a60e:	je     0x40a8e7
  40a614:	mov    rax,QWORD PTR [rsi+0x10]
  40a618:	lea    rdx,[rip+0x17ff1]        # 0x422610
  40a61f:	test   rax,rax
  40a622:	cmove  rax,rdx
  40a626:	mov    r8,QWORD PTR [rbx+0x10]
  40a62a:	mov    edx,ebp
  40a62c:	mov    ecx,r12d
  40a62f:	mov    QWORD PTR [rsp+0x28],rax
  40a634:	mov    QWORD PTR [rsp+0x20],r13
  40a639:	mov    r9d,r14d
  40a63c:	call   0x41b1c8
  40a641:	lea    r8,[rip+0x17fc9]        # 0x422611
  40a648:	mov    edx,0x1e8
  40a64d:	mov    ecx,eax
  40a64f:	mov    ebx,eax
  40a651:	call   0x415d80
  40a656:	jmp    0x40a2fa
  40a65b:	test   rsi,rsi
  40a65e:	je     0x40a8c3
  40a664:	mov    rax,QWORD PTR [rsi+0x10]
  40a668:	lea    rdx,[rip+0x17fa1]        # 0x422610
  40a66f:	test   rax,rax
  40a672:	cmove  rax,rdx
  40a676:	mov    r8,QWORD PTR [rbx+0x10]
  40a67a:	mov    edx,ebp
  40a67c:	mov    ecx,r12d
  40a67f:	mov    QWORD PTR [rsp+0x28],rax
  40a684:	mov    QWORD PTR [rsp+0x20],r13
  40a689:	mov    r9d,r14d
  40a68c:	call   0x41b1e0
  40a691:	lea    r8,[rip+0x17f79]        # 0x422611
  40a698:	mov    edx,0x1cc
  40a69d:	mov    ecx,eax
  40a69f:	mov    ebx,eax
  40a6a1:	call   0x415d80
  40a6a6:	jmp    0x40a2fa
  40a6ab:	test   rsi,rsi
  40a6ae:	je     0x40a8ff
  40a6b4:	mov    rax,QWORD PTR [rsi+0x10]
  40a6b8:	lea    rdx,[rip+0x17f51]        # 0x422610
  40a6bf:	test   rax,rax
  40a6c2:	cmove  rax,rdx
  40a6c6:	mov    r8,QWORD PTR [rbx+0x10]
  40a6ca:	mov    edx,ebp
  40a6cc:	mov    ecx,r12d
  40a6cf:	mov    QWORD PTR [rsp+0x28],rax
  40a6d4:	mov    QWORD PTR [rsp+0x20],r13
  40a6d9:	mov    r9d,r14d
  40a6dc:	call   0x41b200
  40a6e1:	lea    r8,[rip+0x17f29]        # 0x422611
  40a6e8:	mov    edx,0x1d6
  40a6ed:	mov    ecx,eax
  40a6ef:	mov    ebx,eax
  40a6f1:	call   0x415d80
  40a6f6:	jmp    0x40a2fa
  40a6fb:	test   rsi,rsi
  40a6fe:	je     0x40a8db
  40a704:	mov    rax,QWORD PTR [rsi+0x10]
  40a708:	lea    rdx,[rip+0x17f01]        # 0x422610
  40a70f:	test   rax,rax
  40a712:	cmove  rax,rdx
  40a716:	mov    r8,QWORD PTR [rbx+0x10]
  40a71a:	mov    edx,ebp
  40a71c:	mov    ecx,r12d
  40a71f:	mov    QWORD PTR [rsp+0x28],rax
  40a724:	mov    QWORD PTR [rsp+0x20],r13
  40a729:	mov    r9d,r14d
  40a72c:	call   0x41b1e8
  40a731:	lea    r8,[rip+0x17ed9]        # 0x422611
  40a738:	mov    edx,0x1bf
  40a73d:	mov    ecx,eax
  40a73f:	mov    ebx,eax
  40a741:	call   0x415d80
  40a746:	jmp    0x40a2fa
  40a74b:	test   rsi,rsi
  40a74e:	je     0x40a8f3
  40a754:	mov    rax,QWORD PTR [rsi+0x10]
  40a758:	lea    rdx,[rip+0x17eb1]        # 0x422610
  40a75f:	test   rax,rax
  40a762:	cmove  rax,rdx
  40a766:	mov    r8,QWORD PTR [rbx+0x10]
  40a76a:	mov    edx,ebp
  40a76c:	mov    ecx,r12d
  40a76f:	mov    QWORD PTR [rsp+0x28],rax
  40a774:	mov    QWORD PTR [rsp+0x20],r13
  40a779:	mov    r9d,r14d
  40a77c:	call   0x41b208
  40a781:	lea    r8,[rip+0x17e89]        # 0x422611
  40a788:	mov    edx,0x1db
  40a78d:	mov    ecx,eax
  40a78f:	mov    ebx,eax
  40a791:	call   0x415d80
  40a796:	jmp    0x40a2fa
  40a79b:	test   rsi,rsi
  40a79e:	je     0x40a874
  40a7a4:	mov    rdi,QWORD PTR [rsi+0x10]
  40a7a8:	mov    r9d,DWORD PTR [rsi+0x8]
  40a7ac:	lea    rax,[rip+0x17e5d]        # 0x422610
  40a7b3:	test   rdi,rdi
  40a7b6:	cmove  rdi,rax
  40a7ba:	test   r9,r9
  40a7bd:	je     0x40a87b
  40a7c3:	mov    r8,QWORD PTR [rbx+0x10]
  40a7c7:	mov    edx,ebp
  40a7c9:	mov    ecx,r12d
  40a7cc:	mov    QWORD PTR [rsp+0x20],rdi
  40a7d1:	call   0x41b1d0
  40a7d6:	lea    r8,[rip+0x17e34]        # 0x422611
  40a7dd:	mov    edx,0x1c7
  40a7e2:	mov    ecx,eax
  40a7e4:	mov    ebx,eax
  40a7e6:	call   0x415d80
  40a7eb:	jmp    0x40a2fa
  40a7f0:	test   rsi,rsi
  40a7f3:	je     0x40a90b
  40a7f9:	mov    rax,QWORD PTR [rsi+0x10]
  40a7fd:	lea    rdx,[rip+0x17e0c]        # 0x422610
  40a804:	test   rax,rax
  40a807:	cmove  rax,rdx
  40a80b:	mov    r8,QWORD PTR [rbx+0x10]
  40a80f:	mov    edx,ebp
  40a811:	mov    ecx,r12d
  40a814:	mov    QWORD PTR [rsp+0x28],rax
  40a819:	mov    QWORD PTR [rsp+0x20],r13
  40a81e:	mov    r9d,r14d
  40a821:	call   0x41b1f8
  40a826:	lea    r8,[rip+0x17de4]        # 0x422611
  40a82d:	mov    edx,0x1d1
  40a832:	mov    ecx,eax
  40a834:	mov    ebx,eax
  40a836:	call   0x415d80
  40a83b:	jmp    0x40a2fa
  40a840:	lea    rcx,[rip+0x17dd9]        # 0x422620
  40a847:	xor    ebx,ebx
  40a849:	call   0x406300
  40a84e:	test   eax,eax
  40a850:	jne    0x40a2fa
  40a856:	lea    rdx,[rip+0x17db4]        # 0x422611
  40a85d:	lea    rcx,[rip+0x17dec]        # 0x422650
  40a864:	mov    r8d,0x1ff
  40a86a:	call   0x41da30
  40a86f:	jmp    0x40a2fa
  40a874:	lea    rdi,[rip+0x17d95]        # 0x422610
  40a87b:	xor    edx,edx
  40a87d:	mov    rcx,rsi
  40a880:	call   0x416110
  40a885:	mov    r9d,0x1
  40a88b:	jmp    0x40a7c3
  40a890:	lea    rax,[rip+0x17d79]        # 0x422610
  40a897:	xor    r9d,r9d
  40a89a:	jmp    0x40a4b1
  40a89f:	lea    rax,[rip+0x17d6a]        # 0x422610
  40a8a6:	jmp    0x40a4e6
  40a8ab:	lea    rax,[rip+0x17d5e]        # 0x422610
  40a8b2:	jmp    0x40a586
  40a8b7:	lea    rax,[rip+0x17d52]        # 0x422610
  40a8be:	jmp    0x40a536
  40a8c3:	lea    rax,[rip+0x17d46]        # 0x422610
  40a8ca:	jmp    0x40a676
  40a8cf:	lea    rax,[rip+0x17d3a]        # 0x422610
  40a8d6:	jmp    0x40a5d6
  40a8db:	lea    rax,[rip+0x17d2e]        # 0x422610
  40a8e2:	jmp    0x40a716
  40a8e7:	lea    rax,[rip+0x17d22]        # 0x422610
  40a8ee:	jmp    0x40a626
  40a8f3:	lea    rax,[rip+0x17d16]        # 0x422610
  40a8fa:	jmp    0x40a766
  40a8ff:	lea    rax,[rip+0x17d0a]        # 0x422610
  40a906:	jmp    0x40a6c6
  40a90b:	lea    rax,[rip+0x17cfe]        # 0x422610
  40a912:	jmp    0x40a80b
  40a917:	nop    WORD PTR [rax+rax*1+0x0]
  40a920:	push   r15
  40a922:	push   r14
  40a924:	mov    eax,0x1088
  40a929:	push   r13
  40a92b:	push   r12
  40a92d:	push   rbp
  40a92e:	push   rdi
  40a92f:	push   rsi
  40a930:	push   rbx
  40a931:	call   0x41c7e0
  40a936:	sub    rsp,rax
  40a939:	mov    QWORD PTR [rsp+0x48],rcx
  40a93e:	call   0x415f30
  40a943:	mov    QWORD PTR [rsp+0x60],rax
  40a948:	mov    rax,QWORD PTR [rip+0x20d81]        # 0x42b6d0
  40a94f:	mov    rcx,QWORD PTR [rsp+0x48]
  40a954:	mov    rax,QWORD PTR [rax]
  40a957:	test   rax,rax
  40a95a:	je     0x40b2f3
  40a960:	mov    eax,DWORD PTR [rax+0x4]
  40a963:	mov    DWORD PTR [rsp+0x50],eax
  40a967:	mov    r14,QWORD PTR [rip+0x20fc2]        # 0x42b930
  40a96e:	mov    rax,QWORD PTR [r14]
  40a971:	test   rax,rax
  40a974:	je     0x40b2e1
  40a97a:	mov    eax,DWORD PTR [rax+0x4]
  40a97d:	test   eax,eax
  40a97f:	mov    DWORD PTR [rsp+0x48],eax
  40a983:	setg   BYTE PTR [rsp+0x5f]
  40a988:	mov    rax,QWORD PTR [rip+0x20cb1]        # 0x42b640
  40a98f:	mov    rax,QWORD PTR [rax]
  40a992:	test   rax,rax
  40a995:	je     0x40b2d4
  40a99b:	mov    eax,DWORD PTR [rax+0x4]
  40a99e:	mov    DWORD PTR [rsp+0x54],eax
  40a9a2:	mov    rax,QWORD PTR [rip+0x20d97]        # 0x42b740
  40a9a9:	mov    rax,QWORD PTR [rax]
  40a9ac:	test   rax,rax
  40a9af:	je     0x40b2c7
  40a9b5:	mov    eax,DWORD PTR [rax+0x4]
  40a9b8:	mov    DWORD PTR [rsp+0x58],eax
  40a9bc:	mov    rax,QWORD PTR [rip+0x20f4d]        # 0x42b910
  40a9c3:	mov    rax,QWORD PTR [rax]
  40a9c6:	test   rax,rax
  40a9c9:	je     0x40b2bf
  40a9cf:	mov    eax,DWORD PTR [rax+0x4]
  40a9d2:	mov    r13d,eax
  40a9d5:	mov    rdi,QWORD PTR [rip+0x20d74]        # 0x42b750
  40a9dc:	mov    rax,QWORD PTR [rdi]
  40a9df:	test   rax,rax
  40a9e2:	je     0x40b2a0
  40a9e8:	mov    r8,QWORD PTR [rip+0x20f31]        # 0x42b920
  40a9ef:	mov    esi,DWORD PTR [rax+0x4]
  40a9f2:	mov    rax,QWORD PTR [rip+0x20c97]        # 0x42b690
  40a9f9:	mov    r9d,DWORD PTR [r8]
  40a9fc:	mov    edx,DWORD PTR [rax]
  40a9fe:	test   r9d,r9d
  40aa01:	jne    0x40aa08
  40aa03:	or     dh,0x10
  40aa06:	mov    DWORD PTR [rax],edx
  40aa08:	lea    r8,[rsp+0x7c]
  40aa0d:	xor    ebx,ebx
  40aa0f:	call   0x41b2a0
  40aa14:	lea    r8,[rip+0x17bf6]        # 0x422611
  40aa1b:	mov    edx,0x3b
  40aa20:	mov    ecx,eax
  40aa22:	call   0x415d80
  40aa27:	mov    r15,QWORD PTR [rip+0x20e92]        # 0x42b8c0
  40aa2e:	mov    edx,DWORD PTR [rsp+0x7c]
  40aa32:	test   esi,esi
  40aa34:	mov    rax,QWORD PTR [r15]
  40aa37:	mov    DWORD PTR [rax+0x2130],edx
  40aa3d:	jle    0x40aa83
  40aa3f:	nop
  40aa40:	mov    rcx,QWORD PTR [rdi]
  40aa43:	mov    edx,ebx
  40aa45:	call   0x416670
  40aa4a:	cmp    rax,QWORD PTR [r15]
  40aa4d:	je     0x40aa7c
  40aa4f:	mov    rcx,QWORD PTR [rax+0x20]
  40aa53:	mov    rdx,QWORD PTR [rax+0x10]
  40aa57:	lea    r8,[rax+0x2130]
  40aa5e:	mov    ecx,DWORD PTR [rcx+0x2130]
  40aa64:	call   0x41b280
  40aa69:	lea    r8,[rip+0x17ba1]        # 0x422611
  40aa70:	mov    edx,0x47
  40aa75:	mov    ecx,eax
  40aa77:	call   0x415d80
  40aa7c:	add    ebx,0x1
  40aa7f:	cmp    ebx,esi
  40aa81:	jne    0x40aa40
  40aa83:	xor    ebp,ebp
  40aa85:	test   r13d,r13d
  40aa88:	mov    r12,QWORD PTR [rip+0x20bc1]        # 0x42b650
  40aa8f:	jle    0x40ab51
  40aa95:	mov    edi,r13d
  40aa98:	mov    QWORD PTR [rsp+0x68],r15
  40aa9d:	jmp    0x40aaec
  40aa9f:	cmp    eax,0xd
  40aaa2:	je     0x40af80
  40aaa8:	cmp    eax,0xe
  40aaab:	jne    0x40ab39
  40aab1:	mov    rax,QWORD PTR [rbx+0x20]
  40aab5:	mov    rdx,QWORD PTR [rbx+0x2090]
  40aabc:	lea    r9,[rbx+0x2130]
  40aac3:	mov    r8,QWORD PTR [rbx+0x10]
  40aac7:	mov    ecx,DWORD PTR [rax+0x2130]
  40aacd:	call   0x41b278
  40aad2:	lea    r8,[rip+0x17b38]        # 0x422611
  40aad9:	mov    edx,0x10d
  40aade:	mov    ecx,eax
  40aae0:	call   0x415d80
  40aae5:	add    ebp,0x1
  40aae8:	cmp    ebp,edi
  40aaea:	je     0x40ab4c
  40aaec:	mov    rax,QWORD PTR [rip+0x20e1d]        # 0x42b910
  40aaf3:	mov    edx,ebp
  40aaf5:	mov    rcx,QWORD PTR [rax]
  40aaf8:	call   0x416670
  40aafd:	cmp    DWORD PTR [rax+0x8],0x68
  40ab01:	mov    rbx,rax
  40ab04:	je     0x40ab19
  40ab06:	lea    rdx,[rip+0x17c13]        # 0x422720
  40ab0d:	lea    rcx,[rip+0x17c29]        # 0x42273d
  40ab14:	call   0x406300
  40ab19:	mov    eax,DWORD PTR [rbx+0xc]
  40ab1c:	cmp    eax,0xf
  40ab1f:	je     0x40ae28
  40ab25:	jle    0x40aa9f
  40ab2b:	cmp    eax,0x10
  40ab2e:	je     0x40afbd
  40ab34:	cmp    eax,0x6c
  40ab37:	je     0x40aae5
  40ab39:	lea    rcx,[rip+0x17c50]        # 0x422790
  40ab40:	add    ebp,0x1
  40ab43:	call   0x406300
  40ab48:	cmp    ebp,edi
  40ab4a:	jne    0x40aaec
  40ab4c:	mov    r15,QWORD PTR [rsp+0x68]
  40ab51:	mov    r8d,DWORD PTR [rsp+0x50]
  40ab56:	xor    ebx,ebx
  40ab58:	mov    esi,DWORD PTR [rsp+0x50]
  40ab5c:	test   r8d,r8d
  40ab5f:	jle    0x40abba
  40ab61:	mov    rax,QWORD PTR [rip+0x20b68]        # 0x42b6d0
  40ab68:	mov    edx,ebx
  40ab6a:	mov    rcx,QWORD PTR [rax]
  40ab6d:	call   0x416670
  40ab72:	mov    edx,DWORD PTR [rax+0x20fc]
  40ab78:	xor    r8d,r8d
  40ab7b:	lea    r9,[rax+0x2130]
  40ab82:	test   edx,edx
  40ab84:	jne    0x40ab8d
  40ab86:	mov    r8,QWORD PTR [rax+0x2100]
  40ab8d:	mov    rdx,QWORD PTR [rax+0x10]
  40ab91:	mov    rax,QWORD PTR [rax+0x20]
  40ab95:	add    ebx,0x1
  40ab98:	mov    ecx,DWORD PTR [rax+0x2130]
  40ab9e:	call   0x41b290
  40aba3:	lea    r8,[rip+0x17a67]        # 0x422611
  40abaa:	mov    edx,0x5e
  40abaf:	mov    ecx,eax
  40abb1:	call   0x415d80
  40abb6:	cmp    ebx,esi
  40abb8:	jne    0x40ab61
  40abba:	mov    ecx,DWORD PTR [rsp+0x48]
  40abbe:	xor    ebx,ebx
  40abc0:	lea    rsi,[rsp+0x80]
  40abc8:	mov    edi,DWORD PTR [rsp+0x48]
  40abcc:	test   ecx,ecx
  40abce:	jle    0x40b107
  40abd4:	mov    rcx,QWORD PTR [r14]
  40abd7:	mov    edx,ebx
  40abd9:	call   0x416670
  40abde:	mov    r9d,DWORD PTR [rax+0x88]
  40abe5:	test   r9d,r9d
  40abe8:	jle    0x40b230
  40abee:	lea    edx,[r9-0x1]
  40abf2:	xor    ecx,ecx
  40abf4:	lea    rdx,[rdx*4+0x4]
  40abfc:	nop    DWORD PTR [rax+0x0]
  40ac00:	mov    r8,QWORD PTR [rax+rcx*2+0x90]
  40ac08:	mov    r8d,DWORD PTR [r8+0x2130]
  40ac0f:	mov    DWORD PTR [rsi+rcx*1],r8d
  40ac13:	add    rcx,0x4
  40ac17:	cmp    rcx,rdx
  40ac1a:	jne    0x40ac00
  40ac1c:	mov    rdx,QWORD PTR [rax+0x50]
  40ac20:	mov    rcx,QWORD PTR [rax+0x20]
  40ac24:	add    rax,0x2130
  40ac2a:	mov    r8d,DWORD PTR [rdx+0x2130]
  40ac31:	mov    ecx,DWORD PTR [rcx+0x2130]
  40ac37:	mov    rdx,QWORD PTR [rax-0x2120]
  40ac3e:	mov    QWORD PTR [rsp+0x28],rax
  40ac43:	mov    QWORD PTR [rsp+0x20],rsi
  40ac48:	call   0x41b270
  40ac4d:	lea    r8,[rip+0x179bd]        # 0x422611
  40ac54:	mov    edx,0x79
  40ac59:	mov    ecx,eax
  40ac5b:	add    ebx,0x1
  40ac5e:	call   0x415d80
  40ac63:	cmp    ebx,edi
  40ac65:	jne    0x40abd4
  40ac6b:	xor    ebx,ebx
  40ac6d:	xor    edi,edi
  40ac6f:	mov    esi,0x2
  40ac74:	mov    r12d,DWORD PTR [rsp+0x48]
  40ac79:	jmp    0x40ad13
  40ac7e:	test   al,0x18
  40ac80:	jne    0x40adce
  40ac86:	test   al,0x20
  40ac88:	je     0x40acc7
  40ac8a:	mov    rax,QWORD PTR [rbp+0x20]
  40ac8e:	mov    r8d,DWORD PTR [rbp+0x20e8]
  40ac95:	mov    edx,DWORD PTR [rbp+0x2130]
  40ac9b:	mov    ecx,DWORD PTR [rax+0x2130]
  40aca1:	cmp    r8d,0x1
  40aca5:	cmovne r8d,esi
  40aca9:	call   0x41b258
  40acae:	lea    r8,[rip+0x1795c]        # 0x422611
  40acb5:	mov    ecx,eax
  40acb7:	mov    edx,0xe7
  40acbc:	call   0x415d80
  40acc1:	mov    eax,DWORD PTR [rbp+0x20b8]
  40acc7:	test   al,0x40
  40acc9:	je     0x40ad07
  40accb:	cmp    DWORD PTR [rbp+0x20ec],0x1
  40acd2:	mov    rax,QWORD PTR [rbp+0x20]
  40acd6:	mov    edx,DWORD PTR [rbp+0x2130]
  40acdc:	mov    ecx,DWORD PTR [rax+0x2130]
  40ace2:	sbb    r8d,r8d
  40ace5:	xor    r9d,r9d
  40ace8:	and    r8d,0x100
  40acef:	call   0x41b250
  40acf4:	lea    r8,[rip+0x17916]        # 0x422611
  40acfb:	mov    edx,0xee
  40ad00:	mov    ecx,eax
  40ad02:	call   0x415d80
  40ad07:	add    ebx,0x1
  40ad0a:	cmp    ebx,r12d
  40ad0d:	je     0x40b107
  40ad13:	mov    rcx,QWORD PTR [r14]
  40ad16:	mov    edx,ebx
  40ad18:	call   0x416670
  40ad1d:	mov    rbp,rax
  40ad20:	mov    eax,DWORD PTR [rax+0x20b8]
  40ad26:	test   al,0x1
  40ad28:	je     0x40ad89
  40ad2a:	mov    r13d,DWORD PTR [rbp+0x20d8]
  40ad31:	mov    eax,DWORD PTR [rbp+0x20c8]
  40ad37:	mov    r9,QWORD PTR [rbp+0x20d0]
  40ad3e:	test   r13d,r13d
  40ad41:	je     0x40b26a
  40ad47:	test   r9,r9
  40ad4a:	je     0x40b26a
  40ad50:	cmp    eax,0x1
  40ad53:	mov    rax,QWORD PTR [rbp+0x20]
  40ad57:	mov    edx,DWORD PTR [rbp+0x2130]
  40ad5d:	sete   r8b
  40ad61:	movzx  r8d,r8b
  40ad65:	mov    ecx,DWORD PTR [rax+0x2130]
  40ad6b:	call   0x41b268
  40ad70:	lea    r8,[rip+0x1789a]        # 0x422611
  40ad77:	mov    ecx,eax
  40ad79:	mov    edx,0xd0
  40ad7e:	call   0x415d80
  40ad83:	mov    eax,DWORD PTR [rbp+0x20b8]
  40ad89:	test   al,0x4
  40ad8b:	je     0x40ac7e
  40ad91:	mov    rax,QWORD PTR [rbp+0x20]
  40ad95:	mov    edx,DWORD PTR [rbp+0x2130]
  40ad9b:	mov    r8d,DWORD PTR [rbp+0x20dc]
  40ada2:	mov    ecx,DWORD PTR [rax+0x2130]
  40ada8:	call   0x41b248
  40adad:	lea    r8,[rip+0x1785d]        # 0x422611
  40adb4:	mov    ecx,eax
  40adb6:	mov    edx,0xd6
  40adbb:	call   0x415d80
  40adc0:	mov    eax,DWORD PTR [rbp+0x20b8]
  40adc6:	test   al,0x18
  40adc8:	je     0x40ac86
  40adce:	xor    r8d,r8d
  40add1:	cmp    DWORD PTR [rbp+0x20e4],0x1
  40add8:	mov    eax,DWORD PTR [rbp+0x20e0]
  40adde:	mov    rcx,QWORD PTR [rbp+0x20]
  40ade2:	mov    edx,DWORD PTR [rbp+0x2130]
  40ade8:	mov    r9d,eax
  40adeb:	sete   r8b
  40adef:	mov    ecx,DWORD PTR [rcx+0x2130]
  40adf5:	test   eax,eax
  40adf7:	cmovs  eax,edi
  40adfa:	not    r9d
  40adfd:	shr    r9d,0x1f
  40ae01:	mov    DWORD PTR [rsp+0x20],eax
  40ae05:	call   0x41b260
  40ae0a:	lea    r8,[rip+0x17800]        # 0x422611
  40ae11:	mov    ecx,eax
  40ae13:	mov    edx,0xdf
  40ae18:	call   0x415d80
  40ae1d:	mov    eax,DWORD PTR [rbp+0x20b8]
  40ae23:	jmp    0x40ac86
  40ae28:	mov    rax,QWORD PTR [rbx+0x50]
  40ae2c:	mov    r8,QWORD PTR [rbx+0x10]
  40ae30:	lea    r9,[rbx+0x2130]
  40ae37:	mov    edx,DWORD PTR [rax+0x5c]
  40ae3a:	mov    rax,QWORD PTR [rbx+0x20]
  40ae3e:	mov    ecx,DWORD PTR [rax+0x2130]
  40ae44:	call   0x41b288
  40ae49:	lea    r8,[rip+0x177c1]        # 0x422611
  40ae50:	mov    edx,0x117
  40ae55:	mov    ecx,eax
  40ae57:	call   0x415d80
  40ae5c:	call   0x415f30
  40ae61:	mov    ecx,0x1
  40ae66:	mov    r13,rax
  40ae69:	call   0x415bb0
  40ae6e:	mov    rsi,rax
  40ae71:	mov    rcx,rax
  40ae74:	call   0x415b90
  40ae79:	mov    QWORD PTR [rsi+0x10],0x1
  40ae81:	xor    esi,esi
  40ae83:	jmp    0x40af37
  40ae88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae90:	mov    eax,DWORD PTR [rcx+0x4]
  40ae93:	cmp    esi,eax
  40ae95:	jge    0x40af4e
  40ae9b:	mov    edx,esi
  40ae9d:	call   0x416670
  40aea2:	cmp    DWORD PTR [rax+0xc],0x69
  40aea6:	mov    r15,rax
  40aea9:	je     0x40aebe
  40aeab:	lea    rdx,[rip+0x178a1]        # 0x422753
  40aeb2:	lea    rcx,[rip+0x17884]        # 0x42273d
  40aeb9:	call   0x406300
  40aebe:	mov    rcx,QWORD PTR [r12]
  40aec2:	xor    edx,edx
  40aec4:	call   0x401550
  40aec9:	test   r13,r13
  40aecc:	je     0x40af5b
  40aed2:	mov    rax,QWORD PTR [r12]
  40aed6:	mov    rcx,QWORD PTR [r15+0x50]
  40aeda:	lea    rdx,[r15+0x68]
  40aede:	xor    r9d,r9d
  40aee1:	mov    DWORD PTR [r13+0x8],0x0
  40aee9:	mov    r8,r13
  40aeec:	mov    QWORD PTR [rsp+0x20],rax
  40aef1:	call   0x401560
  40aef6:	mov    rax,QWORD PTR [r13+0x10]
  40aefa:	lea    r9,[rip+0x1770f]        # 0x422610
  40af01:	test   rax,rax
  40af04:	cmovne r9,rax
  40af08:	mov    rax,QWORD PTR [rbx+0x20]
  40af0c:	mov    edx,DWORD PTR [rbx+0x2130]
  40af12:	add    esi,0x1
  40af15:	mov    r8,QWORD PTR [r15+0x10]
  40af19:	mov    ecx,DWORD PTR [rax+0x2130]
  40af1f:	call   0x41b218
  40af24:	lea    r8,[rip+0x176e6]        # 0x422611
  40af2b:	mov    edx,0x126
  40af30:	mov    ecx,eax
  40af32:	call   0x415d80
  40af37:	mov    rcx,QWORD PTR [rbx+0x30]
  40af3b:	test   rcx,rcx
  40af3e:	jne    0x40ae90
  40af44:	xor    eax,eax
  40af46:	cmp    esi,eax
  40af48:	jl     0x40ae9b
  40af4e:	mov    rcx,r13
  40af51:	call   0x416010
  40af56:	jmp    0x40aae5
  40af5b:	mov    rax,QWORD PTR [r12]
  40af5f:	mov    rcx,QWORD PTR [r15+0x50]
  40af63:	lea    rdx,[r15+0x68]
  40af67:	xor    r9d,r9d
  40af6a:	xor    r8d,r8d
  40af6d:	mov    QWORD PTR [rsp+0x20],rax
  40af72:	call   0x401560
  40af77:	lea    r9,[rip+0x17692]        # 0x422610
  40af7e:	jmp    0x40af08
  40af80:	mov    rax,QWORD PTR [rbx+0x50]
  40af84:	mov    rcx,QWORD PTR [rbx+0x20]
  40af88:	lea    r9,[rbx+0x2130]
  40af8f:	mov    rdx,QWORD PTR [rbx+0x10]
  40af93:	mov    ecx,DWORD PTR [rcx+0x2130]
  40af99:	mov    r8d,DWORD PTR [rax+0x2130]
  40afa0:	call   0x41b240
  40afa5:	lea    r8,[rip+0x17665]        # 0x422611
  40afac:	mov    edx,0x131
  40afb1:	mov    ecx,eax
  40afb3:	call   0x415d80
  40afb8:	jmp    0x40aae5
  40afbd:	mov    rax,QWORD PTR [rbx+0x20]
  40afc1:	mov    rdx,QWORD PTR [rbx+0x2090]
  40afc8:	lea    r9,[rbx+0x2130]
  40afcf:	mov    r8,QWORD PTR [rbx+0x10]
  40afd3:	xor    esi,esi
  40afd5:	mov    ecx,DWORD PTR [rax+0x2130]
  40afdb:	call   0x41b298
  40afe0:	lea    r8,[rip+0x1762a]        # 0x422611
  40afe7:	mov    ecx,eax
  40afe9:	mov    edx,0x138
  40afee:	call   0x415d80
  40aff3:	mov    rcx,QWORD PTR [rbx+0x30]
  40aff7:	test   rcx,rcx
  40affa:	je     0x40b0d3
  40b000:	mov    eax,DWORD PTR [rcx+0x4]
  40b003:	cmp    esi,eax
  40b005:	jge    0x40aae5
  40b00b:	mov    edx,esi
  40b00d:	call   0x416670
  40b012:	cmp    DWORD PTR [rax+0xc],0x6a
  40b016:	mov    r13,rax
  40b019:	je     0x40b02e
  40b01b:	lea    rdx,[rip+0x1774f]        # 0x422771
  40b022:	lea    rcx,[rip+0x17714]        # 0x42273d
  40b029:	call   0x406300
  40b02e:	mov    r10d,DWORD PTR [r13+0x88]
  40b035:	cmp    r10d,0x0
  40b039:	je     0x40b0da
  40b03f:	jle    0x40b340
  40b045:	lea    eax,[r10-0x1]
  40b049:	xor    ecx,ecx
  40b04b:	lea    r9,[rax*4+0x4]
  40b053:	lea    rax,[rsp+0x80]
  40b05b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b060:	mov    rdx,QWORD PTR [r13+rcx*2+0x90]
  40b068:	mov    rdx,QWORD PTR [rdx+0x2100]
  40b06f:	mov    DWORD PTR [rax+rcx*1],edx
  40b072:	add    rcx,0x4
  40b076:	cmp    rcx,r9
  40b079:	jne    0x40b060
  40b07b:	mov    rcx,QWORD PTR [rbx+0x20]
  40b07f:	mov    r9d,DWORD PTR [r13+0x60]
  40b083:	mov    r8,QWORD PTR [r13+0x10]
  40b087:	mov    edx,DWORD PTR [rbx+0x2130]
  40b08d:	mov    ecx,DWORD PTR [rcx+0x2130]
  40b093:	mov    QWORD PTR [rsp+0x30],rax
  40b098:	mov    DWORD PTR [rsp+0x28],r10d
  40b09d:	mov    rax,QWORD PTR [r13+0x50]
  40b0a1:	mov    eax,DWORD PTR [rax+0x2130]
  40b0a7:	mov    DWORD PTR [rsp+0x20],eax
  40b0ab:	call   0x41b228
  40b0b0:	lea    r8,[rip+0x1755a]        # 0x422611
  40b0b7:	mov    ecx,eax
  40b0b9:	mov    edx,0x154
  40b0be:	add    esi,0x1
  40b0c1:	call   0x415d80
  40b0c6:	mov    rcx,QWORD PTR [rbx+0x30]
  40b0ca:	test   rcx,rcx
  40b0cd:	jne    0x40b000
  40b0d3:	xor    eax,eax
  40b0d5:	jmp    0x40b003
  40b0da:	mov    rax,QWORD PTR [rbx+0x20]
  40b0de:	mov    r9d,DWORD PTR [r13+0x60]
  40b0e2:	mov    r8,QWORD PTR [r13+0x10]
  40b0e6:	mov    edx,DWORD PTR [rbx+0x2130]
  40b0ec:	mov    ecx,DWORD PTR [rax+0x2130]
  40b0f2:	mov    rax,QWORD PTR [r13+0x50]
  40b0f6:	mov    eax,DWORD PTR [rax+0x2130]
  40b0fc:	mov    DWORD PTR [rsp+0x20],eax
  40b100:	call   0x41b220
  40b105:	jmp    0x40b0b0
  40b107:	mov    eax,DWORD PTR [rsp+0x58]
  40b10b:	xor    ebx,ebx
  40b10d:	mov    esi,DWORD PTR [rsp+0x58]
  40b111:	test   eax,eax
  40b113:	jle    0x40b135
  40b115:	mov    rax,QWORD PTR [rip+0x20624]        # 0x42b740
  40b11c:	mov    edx,ebx
  40b11e:	add    ebx,0x1
  40b121:	mov    rcx,QWORD PTR [rax]
  40b124:	call   0x416670
  40b129:	mov    rcx,rax
  40b12c:	call   0x40a280
  40b131:	cmp    ebx,esi
  40b133:	jne    0x40b115
  40b135:	mov    r11d,DWORD PTR [rsp+0x54]
  40b13a:	xor    ebx,ebx
  40b13c:	mov    esi,DWORD PTR [rsp+0x54]
  40b140:	test   r11d,r11d
  40b143:	jle    0x40b165
  40b145:	mov    rax,QWORD PTR [rip+0x204f4]        # 0x42b640
  40b14c:	mov    edx,ebx
  40b14e:	add    ebx,0x1
  40b151:	mov    rcx,QWORD PTR [rax]
  40b154:	call   0x416670
  40b159:	mov    rcx,rax
  40b15c:	call   0x40a280
  40b161:	cmp    ebx,esi
  40b163:	jne    0x40b145
  40b165:	mov    rax,QWORD PTR [rip+0x206e4]        # 0x42b850
  40b16c:	mov    r10d,DWORD PTR [rax]
  40b16f:	test   r10d,r10d
  40b172:	jne    0x40b272
  40b178:	mov    rax,QWORD PTR [r15]
  40b17b:	mov    ecx,DWORD PTR [rax+0x2130]
  40b181:	call   0x41b238
  40b186:	lea    r8,[rip+0x17484]        # 0x422611
  40b18d:	mov    edx,0x9e
  40b192:	mov    ecx,eax
  40b194:	call   0x415d80
  40b199:	cmp    BYTE PTR [rsp+0x5f],0x0
  40b19e:	je     0x40b211
  40b1a0:	mov    rax,QWORD PTR [rip+0x205b9]        # 0x42b760
  40b1a7:	xor    ebx,ebx
  40b1a9:	mov    rdi,QWORD PTR [rip+0x204a0]        # 0x42b650
  40b1b0:	mov    r9d,DWORD PTR [rax]
  40b1b3:	test   r9d,r9d
  40b1b6:	jne    0x40b211
  40b1b8:	mov    r13d,DWORD PTR [rsp+0x48]
  40b1bd:	mov    rbp,QWORD PTR [rsp+0x60]
  40b1c2:	mov    rcx,QWORD PTR [r14]
  40b1c5:	mov    edx,ebx
  40b1c7:	call   0x416670
  40b1cc:	cmp    QWORD PTR [rax+0x48],0x0
  40b1d1:	mov    rsi,rax
  40b1d4:	je     0x40b209
  40b1d6:	test   rbp,rbp
  40b1d9:	je     0x40b1e2
  40b1db:	mov    DWORD PTR [rbp+0x8],0x0
  40b1e2:	call   0x415f30
  40b1e7:	mov    rcx,QWORD PTR [rdi]
  40b1ea:	xor    edx,edx
  40b1ec:	mov    r12,rax
  40b1ef:	call   0x401550
  40b1f4:	mov    rdx,QWORD PTR [rdi]
  40b1f7:	lea    r8,[rip+0xfffffffffffff0c2]        # 0x40a2c0
  40b1fe:	mov    r9,r12
  40b201:	mov    rcx,rsi
  40b204:	call   0x402540
  40b209:	add    ebx,0x1
  40b20c:	cmp    r13d,ebx
  40b20f:	jg     0x40b1c2
  40b211:	mov    rcx,QWORD PTR [rsp+0x60]
  40b216:	call   0x416010
  40b21b:	nop
  40b21c:	add    rsp,0x1088
  40b223:	pop    rbx
  40b224:	pop    rsi
  40b225:	pop    rdi
  40b226:	pop    rbp
  40b227:	pop    r12
  40b229:	pop    r13
  40b22b:	pop    r14
  40b22d:	pop    r15
  40b22f:	ret    
  40b230:	mov    rdx,QWORD PTR [rax+0x50]
  40b234:	mov    rcx,QWORD PTR [rax+0x20]
  40b238:	add    rax,0x2130
  40b23e:	mov    r8d,DWORD PTR [rdx+0x2130]
  40b245:	mov    ecx,DWORD PTR [rcx+0x2130]
  40b24b:	mov    rdx,QWORD PTR [rax-0x2120]
  40b252:	mov    QWORD PTR [rsp+0x28],rax
  40b257:	mov    QWORD PTR [rsp+0x20],0x0
  40b260:	call   0x41b270
  40b265:	jmp    0x40ac4d
  40b26a:	xor    r9d,r9d
  40b26d:	jmp    0x40ad50
  40b272:	mov    rax,QWORD PTR [r15]
  40b275:	xor    r8d,r8d
  40b278:	mov    edx,0x100
  40b27d:	mov    ecx,DWORD PTR [rax+0x2130]
  40b283:	call   0x41b198
  40b288:	lea    r8,[rip+0x17382]        # 0x422611
  40b28f:	mov    edx,0x99
  40b294:	mov    ecx,eax
  40b296:	call   0x415d80
  40b29b:	jmp    0x40b178
  40b2a0:	mov    r8,QWORD PTR [rip+0x20679]        # 0x42b920
  40b2a7:	mov    rax,QWORD PTR [rip+0x203e2]        # 0x42b690
  40b2ae:	mov    r8d,DWORD PTR [r8]
  40b2b1:	mov    edx,DWORD PTR [rax]
  40b2b3:	test   r8d,r8d
  40b2b6:	jne    0x40b300
  40b2b8:	xor    esi,esi
  40b2ba:	jmp    0x40aa03
  40b2bf:	xor    r13d,r13d
  40b2c2:	jmp    0x40a9d5
  40b2c7:	mov    DWORD PTR [rsp+0x58],0x0
  40b2cf:	jmp    0x40a9bc
  40b2d4:	mov    DWORD PTR [rsp+0x54],0x0
  40b2dc:	jmp    0x40a9a2
  40b2e1:	mov    BYTE PTR [rsp+0x5f],0x0
  40b2e6:	mov    DWORD PTR [rsp+0x48],0x0
  40b2ee:	jmp    0x40a988
  40b2f3:	mov    DWORD PTR [rsp+0x50],0x0
  40b2fb:	jmp    0x40a967
  40b300:	lea    r8,[rsp+0x7c]
  40b305:	call   0x41b2a0
  40b30a:	lea    r8,[rip+0x17300]        # 0x422611
  40b311:	mov    edx,0x3b
  40b316:	mov    ecx,eax
  40b318:	call   0x415d80
  40b31d:	mov    r15,QWORD PTR [rip+0x2059c]        # 0x42b8c0
  40b324:	mov    edx,DWORD PTR [rsp+0x7c]
  40b328:	mov    rax,QWORD PTR [r15]
  40b32b:	mov    DWORD PTR [rax+0x2130],edx
  40b331:	jmp    0x40aa83
  40b336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b340:	lea    rax,[rsp+0x80]
  40b348:	jmp    0x40b07b
  40b34d:	nop    DWORD PTR [rax]
  40b350:	sub    rsp,0x28
  40b354:	mov    rax,QWORD PTR [rip+0x20565]        # 0x42b8c0
  40b35b:	mov    rax,QWORD PTR [rax]
  40b35e:	mov    ecx,DWORD PTR [rax+0x2130]
  40b364:	call   0x41b2a8
  40b369:	lea    r8,[rip+0x172a1]        # 0x422611
  40b370:	mov    edx,0xf9
  40b375:	mov    ecx,eax
  40b377:	add    rsp,0x28
  40b37b:	jmp    0x415d80
  40b380:	push   rdi
  40b381:	push   rsi
  40b382:	push   rbx
  40b383:	sub    rsp,0x20
  40b387:	mov    rbx,QWORD PTR [rip+0x2934a]        # 0x4346d8
  40b38e:	mov    rsi,rcx
  40b391:	mov    rdi,rdx
  40b394:	call   rbx
  40b396:	lea    rcx,[rax+0x60]
  40b39a:	mov    r8,rdi
  40b39d:	mov    rdx,rsi
  40b3a0:	call   0x41db20
  40b3a5:	call   rbx
  40b3a7:	lea    rdx,[rax+0x60]
  40b3ab:	mov    ecx,0xa
  40b3b0:	call   0x41dc20
  40b3b5:	call   rbx
  40b3b7:	lea    rcx,[rax+0x60]
  40b3bb:	call   0x41dc38
  40b3c0:	add    DWORD PTR [rip+0x283a1],0x1        # 0x433768
  40b3c7:	add    rsp,0x20
  40b3cb:	pop    rbx
  40b3cc:	pop    rsi
  40b3cd:	pop    rdi
  40b3ce:	ret    
  40b3cf:	nop
  40b3d0:	sub    rsp,0x38
  40b3d4:	mov    QWORD PTR [rsp+0x48],rdx
  40b3d9:	lea    rdx,[rsp+0x48]
  40b3de:	mov    QWORD PTR [rsp+0x50],r8
  40b3e3:	mov    QWORD PTR [rsp+0x58],r9
  40b3e8:	mov    QWORD PTR [rsp+0x28],rdx
  40b3ed:	call   0x40b380
  40b3f2:	nop
  40b3f3:	add    rsp,0x38
  40b3f7:	ret    
  40b3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b400:	push   rbx
  40b401:	sub    rsp,0x830
  40b408:	lea    rax,[rsp+0x848]
  40b410:	lea    rbx,[rsp+0x30]
  40b415:	mov    QWORD PTR [rsp+0x848],rdx
  40b41d:	mov    QWORD PTR [rsp+0x850],r8
  40b425:	mov    rdx,rcx
  40b428:	mov    r8d,0x7d0
  40b42e:	mov    QWORD PTR [rsp+0x28],rax
  40b433:	movabs rax,0x632046444374656e
  40b43d:	mov    rcx,rbx
  40b440:	mov    QWORD PTR [rsp+0x30],rax
  40b445:	movabs rax,0x203a63697373616c
  40b44f:	mov    QWORD PTR [rsp+0x858],r9
  40b457:	mov    QWORD PTR [rsp+0x38],rax
  40b45c:	movabs rax,0x7070757320746f6e
  40b466:	mov    QWORD PTR [rsp+0x40],rax
  40b46b:	movabs rax,0x203a646574726f
  40b475:	mov    QWORD PTR [rsp+0x48],rax
  40b47a:	call   0x41db48
  40b47f:	mov    rdx,QWORD PTR [rsp+0x28]
  40b484:	mov    rcx,rbx
  40b487:	call   0x40b380
  40b48c:	nop
  40b48d:	add    rsp,0x830
  40b494:	pop    rbx
  40b495:	ret    
  40b496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4a0:	push   rbp
  40b4a1:	push   rdi
  40b4a2:	push   rsi
  40b4a3:	push   rbx
  40b4a4:	sub    rsp,0x48
  40b4a8:	lea    rax,[rsp+0x80]
  40b4b0:	mov    QWORD PTR [rsp+0x80],r8
  40b4b8:	mov    QWORD PTR [rsp+0x88],r9
  40b4c0:	mov    ebp,ecx
  40b4c2:	mov    rbx,rdx
  40b4c5:	mov    QWORD PTR [rsp+0x38],rax
  40b4ca:	mov    rax,QWORD PTR [rip+0x201af]        # 0x42b680
  40b4d1:	mov    rdi,QWORD PTR [rax]
  40b4d4:	mov    rax,QWORD PTR [rip+0x203d5]        # 0x42b8b0
  40b4db:	mov    rsi,QWORD PTR [rax]
  40b4de:	call   QWORD PTR [rip+0x291f4]        # 0x4346d8
  40b4e4:	lea    rdx,[rip+0x172d5]        # 0x4227c0
  40b4eb:	lea    rcx,[rax+0x60]
  40b4ef:	mov    r9,rdi
  40b4f2:	mov    r8,rsi
  40b4f5:	mov    DWORD PTR [rsp+0x20],ebp
  40b4f9:	call   0x41dc28
  40b4fe:	mov    rdx,QWORD PTR [rsp+0x38]
  40b503:	mov    rcx,rbx
  40b506:	call   0x40b380
  40b50b:	nop
  40b50c:	add    rsp,0x48
  40b510:	pop    rbx
  40b511:	pop    rsi
  40b512:	pop    rdi
  40b513:	pop    rbp
  40b514:	ret    
  40b515:	nop
  40b516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b520:	push   rbp
  40b521:	push   rdi
  40b522:	push   rsi
  40b523:	push   rbx
  40b524:	sub    rsp,0x48
  40b528:	lea    rax,[rsp+0x80]
  40b530:	mov    QWORD PTR [rsp+0x80],r8
  40b538:	mov    QWORD PTR [rsp+0x88],r9
  40b540:	mov    ebp,ecx
  40b542:	mov    rbx,rdx
  40b545:	mov    QWORD PTR [rsp+0x38],rax
  40b54a:	mov    rax,QWORD PTR [rip+0x2012f]        # 0x42b680
  40b551:	mov    rdi,QWORD PTR [rax]
  40b554:	mov    rax,QWORD PTR [rip+0x20355]        # 0x42b8b0
  40b55b:	mov    rsi,QWORD PTR [rax]
  40b55e:	call   QWORD PTR [rip+0x29174]        # 0x4346d8
  40b564:	lea    rdx,[rip+0x17255]        # 0x4227c0
  40b56b:	lea    rcx,[rax+0x60]
  40b56f:	mov    r9,rdi
  40b572:	mov    r8,rsi
  40b575:	mov    DWORD PTR [rsp+0x20],ebp
  40b579:	call   0x41dc28
  40b57e:	mov    rdx,QWORD PTR [rsp+0x38]
  40b583:	mov    rcx,rbx
  40b586:	call   0x40b380
  40b58b:	mov    ecx,0x1
  40b590:	call   0x41dc48
  40b595:	nop
  40b596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b5a0:	cmp    QWORD PTR [rip+0x26898],0x0        # 0x431e40
  40b5a8:	mov    rax,QWORD PTR [rip+0x20131]        # 0x42b6e0
  40b5af:	mov    DWORD PTR [rax],0x1
  40b5b5:	je     0x40b5c0
  40b5b7:	repz ret 
  40b5b9:	nop    DWORD PTR [rax+0x0]
  40b5c0:	mov    QWORD PTR [rip+0x26879],rcx        # 0x431e40
  40b5c7:	ret    
  40b5c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b5d0:	mov    rax,QWORD PTR [rip+0x26869]        # 0x431e40
  40b5d7:	ret    
  40b5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b5e0:	push   rbx
  40b5e1:	sub    rsp,0x30
  40b5e5:	mov    QWORD PTR [rsp+0x58],r9
  40b5ea:	lea    r9,[rsp+0x58]
  40b5ef:	mov    rbx,rdx
  40b5f2:	mov    QWORD PTR [rsp+0x28],r9
  40b5f7:	call   0x41daf0
  40b5fc:	test   eax,eax
  40b5fe:	js     0x40b607
  40b600:	cdqe   
  40b602:	cmp    rbx,rax
  40b605:	ja     0x40b617
  40b607:	lea    rcx,[rip+0x171c3]        # 0x4227d1
  40b60e:	call   0x406300
  40b613:	test   eax,eax
  40b615:	je     0x40b620
  40b617:	add    rsp,0x30
  40b61b:	pop    rbx
  40b61c:	ret    
  40b61d:	nop    DWORD PTR [rax]
  40b620:	lea    rdx,[rip+0x171bb]        # 0x4227e2
  40b627:	lea    rcx,[rip+0x171bd]        # 0x4227eb
  40b62e:	mov    r8d,0x82
  40b634:	call   0x41da30
  40b639:	nop
  40b63a:	add    rsp,0x30
  40b63e:	pop    rbx
  40b63f:	ret    
  40b640:	mov    rax,QWORD PTR [rip+0x20139]        # 0x42b780
  40b647:	mov    eax,DWORD PTR [rax]
  40b649:	cmp    eax,0x2
  40b64c:	je     0x40b665
  40b64e:	cmp    eax,0x3
  40b651:	je     0x40b670
  40b653:	cmp    eax,0x4
  40b656:	je     0x40b675
  40b658:	cmp    eax,0x1
  40b65b:	je     0x40b660
  40b65d:	repz ret 
  40b65f:	nop
  40b660:	jmp    0x40b350
  40b665:	jmp    0x4078c0
  40b66a:	nop    WORD PTR [rax+rax*1+0x0]
  40b670:	jmp    0x416fc0
  40b675:	jmp    0x4193f0
  40b67a:	nop    WORD PTR [rax+rax*1+0x0]
  40b680:	push   rdi
  40b681:	push   rsi
  40b682:	push   rbx
  40b683:	sub    rsp,0x830
  40b68a:	mov    rax,QWORD PTR [rip+0x201af]        # 0x42b840
  40b691:	mov    rdx,QWORD PTR [rax]
  40b694:	test   rdx,rdx
  40b697:	je     0x40b6f0
  40b699:	lea    rbx,[rsp+0x20]
  40b69e:	mov    r8d,0x800
  40b6a4:	mov    rcx,rbx
  40b6a7:	call   0x41db38
  40b6ac:	mov    rax,QWORD PTR [rip+0x200cd]        # 0x42b780
  40b6b3:	mov    rcx,rbx
  40b6b6:	mov    eax,DWORD PTR [rax]
  40b6b8:	cmp    eax,0x2
  40b6bb:	je     0x40b800
  40b6c1:	cmp    eax,0x3
  40b6c4:	je     0x40b810
  40b6ca:	cmp    eax,0x4
  40b6cd:	je     0x40b7f0
  40b6d3:	call   0x40a920
  40b6d8:	call   0x40b640
  40b6dd:	call   0x415cf0
  40b6e2:	nop
  40b6e3:	add    rsp,0x830
  40b6ea:	pop    rbx
  40b6eb:	pop    rsi
  40b6ec:	pop    rdi
  40b6ed:	ret    
  40b6ee:	xchg   ax,ax
  40b6f0:	mov    rax,QWORD PTR [rip+0x1ff89]        # 0x42b680
  40b6f7:	lea    rbx,[rsp+0x20]
  40b6fc:	mov    r8d,0x800
  40b702:	mov    rdx,QWORD PTR [rax]
  40b705:	test   rdx,rdx
  40b708:	je     0x40b721
  40b70a:	lea    rdi,[rip+0x170ff]        # 0x422810
  40b711:	mov    ecx,0x2
  40b716:	mov    rsi,rdx
  40b719:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40b71b:	jne    0x40b7a0
  40b721:	mov    rax,QWORD PTR [rip+0x1ff88]        # 0x42b6b0
  40b728:	mov    rcx,rbx
  40b72b:	mov    rdx,QWORD PTR [rax]
  40b72e:	call   0x41db38
  40b733:	mov    rsi,rbx
  40b736:	mov    eax,DWORD PTR [rsi]
  40b738:	add    rsi,0x4
  40b73c:	lea    edx,[rax-0x1010101]
  40b742:	not    eax
  40b744:	and    edx,eax
  40b746:	and    edx,0x80808080
  40b74c:	je     0x40b736
  40b74e:	mov    eax,edx
  40b750:	shr    eax,0x10
  40b753:	test   edx,0x8080
  40b759:	cmove  edx,eax
  40b75c:	lea    rax,[rsi+0x2]
  40b760:	cmove  rsi,rax
  40b764:	mov    rax,QWORD PTR [rip+0x1fef5]        # 0x42b660
  40b76b:	add    dl,dl
  40b76d:	sbb    rsi,0x3
  40b771:	sub    rsi,rbx
  40b774:	mov    rdi,QWORD PTR [rax]
  40b777:	mov    rcx,rdi
  40b77a:	call   0x41db50
  40b77f:	mov    r8d,0x800
  40b785:	add    rsi,rax
  40b788:	mov    rdx,rdi
  40b78b:	sub    r8,rsi
  40b78e:	mov    rcx,rbx
  40b791:	call   0x41db48
  40b796:	jmp    0x40b6ac
  40b79b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b7a0:	mov    rcx,rbx
  40b7a3:	call   0x41db38
  40b7a8:	mov    edx,0x2e
  40b7ad:	mov    rcx,rbx
  40b7b0:	call   0x41db30
  40b7b5:	test   rax,rax
  40b7b8:	je     0x40b7bd
  40b7ba:	mov    BYTE PTR [rax],0x0
  40b7bd:	mov    edx,0x2f
  40b7c2:	mov    rcx,rbx
  40b7c5:	call   0x41db30
  40b7ca:	test   rax,rax
  40b7cd:	je     0x40b733
  40b7d3:	lea    rdx,[rax+0x1]
  40b7d7:	mov    r8d,0x800
  40b7dd:	mov    rcx,rbx
  40b7e0:	call   0x41dbb8
  40b7e5:	jmp    0x40b733
  40b7ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b7f0:	call   0x418cb0
  40b7f5:	jmp    0x40b6d8
  40b7fa:	nop    WORD PTR [rax+rax*1+0x0]
  40b800:	call   0x408170
  40b805:	jmp    0x40b6d8
  40b80a:	nop    WORD PTR [rax+rax*1+0x0]
  40b810:	call   0x4170c0
  40b815:	jmp    0x40b6d8
  40b81a:	nop    WORD PTR [rax+rax*1+0x0]
  40b820:	push   r12
  40b822:	push   rbp
  40b823:	push   rdi
  40b824:	push   rsi
  40b825:	push   rbx
  40b826:	sub    rsp,0x20
  40b82a:	cmp    QWORD PTR [rcx+0x18],0x0
  40b82f:	je     0x40b840
  40b831:	add    rsp,0x20
  40b835:	pop    rbx
  40b836:	pop    rsi
  40b837:	pop    rdi
  40b838:	pop    rbp
  40b839:	pop    r12
  40b83b:	ret    
  40b83c:	nop    DWORD PTR [rax+0x0]
  40b840:	mov    rax,QWORD PTR [rip+0x200d9]        # 0x42b920
  40b847:	mov    rbx,rcx
  40b84a:	mov    edx,DWORD PTR [rax]
  40b84c:	test   edx,edx
  40b84e:	jne    0x40b8c3
  40b850:	mov    rsi,QWORD PTR [rcx+0x20]
  40b854:	test   rsi,rsi
  40b857:	je     0x40b8d5
  40b859:	mov    rbp,QWORD PTR [rsi+0x18]
  40b85d:	test   rbp,rbp
  40b860:	je     0x40b910
  40b866:	mov    rcx,QWORD PTR [rbx+0x10]
  40b86a:	call   0x406fc0
  40b86f:	mov    rcx,rax
  40b872:	mov    r12,rax
  40b875:	call   0x41db50
  40b87a:	mov    rcx,rbp
  40b87d:	mov    rsi,rax
  40b880:	call   0x41db50
  40b885:	lea    rcx,[rsi+rax*1+0x2]
  40b88a:	mov    rdi,rax
  40b88d:	call   0x41dbc8
  40b892:	mov    r8,rdi
  40b895:	mov    rsi,rax
  40b898:	mov    rdx,rbp
  40b89b:	mov    rcx,rax
  40b89e:	call   0x41dbc0
  40b8a3:	lea    rcx,[rsi+rdi*1+0x1]
  40b8a8:	mov    BYTE PTR [rsi+rdi*1],0x2f
  40b8ac:	mov    rdx,r12
  40b8af:	call   0x41db58
  40b8b4:	mov    QWORD PTR [rbx+0x18],rsi
  40b8b8:	add    rsp,0x20
  40b8bc:	pop    rbx
  40b8bd:	pop    rsi
  40b8be:	pop    rdi
  40b8bf:	pop    rbp
  40b8c0:	pop    r12
  40b8c2:	ret    
  40b8c3:	mov    rcx,QWORD PTR [rcx+0x10]
  40b8c7:	call   0x41db10
  40b8cc:	mov    QWORD PTR [rbx+0x18],rax
  40b8d0:	jmp    0x40b831
  40b8d5:	mov    eax,DWORD PTR [rcx+0x2108]
  40b8db:	test   eax,eax
  40b8dd:	jne    0x40b8f8
  40b8df:	lea    rdx,[rip+0x16f2c]        # 0x422812
  40b8e6:	lea    rcx,[rip+0x16f2e]        # 0x42281b
  40b8ed:	mov    r8d,0x6e
  40b8f3:	call   0x41da30
  40b8f8:	lea    rcx,[rip+0x16f2d]        # 0x42282c
  40b8ff:	call   0x41db10
  40b904:	mov    QWORD PTR [rbx+0x18],rax
  40b908:	jmp    0x40b831
  40b90d:	nop    DWORD PTR [rax]
  40b910:	mov    rcx,rsi
  40b913:	call   0x40b820
  40b918:	mov    rbp,QWORD PTR [rsi+0x18]
  40b91c:	jmp    0x40b866
  40b921:	nop    DWORD PTR [rax+rax*1+0x0]
  40b926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b930:	push   r13
  40b932:	push   r12
  40b934:	push   rbp
  40b935:	push   rdi
  40b936:	push   rsi
  40b937:	push   rbx
  40b938:	sub    rsp,0x28
  40b93c:	cmp    QWORD PTR [rcx+0x18],0x0
  40b941:	je     0x40b950
  40b943:	add    rsp,0x28
  40b947:	pop    rbx
  40b948:	pop    rsi
  40b949:	pop    rdi
  40b94a:	pop    rbp
  40b94b:	pop    r12
  40b94d:	pop    r13
  40b94f:	ret    
  40b950:	mov    rsi,QWORD PTR [rcx+0x20]
  40b954:	mov    rbx,rcx
  40b957:	cmp    DWORD PTR [rsi+0x8],0x68
  40b95b:	je     0x40b976
  40b95d:	lea    rdx,[rip+0x16eae]        # 0x422812
  40b964:	lea    rcx,[rip+0x16ec5]        # 0x422830
  40b96b:	mov    r8d,0x95
  40b971:	call   0x41da30
  40b976:	cmp    QWORD PTR [rsi+0x18],0x0
  40b97b:	je     0x40b9e0
  40b97d:	mov    rcx,QWORD PTR [rbx+0x10]
  40b981:	call   0x406fc0
  40b986:	mov    rcx,rax
  40b989:	mov    rbp,rax
  40b98c:	call   0x41db50
  40b991:	mov    r12,QWORD PTR [rsi+0x18]
  40b995:	mov    r13,rax
  40b998:	mov    rcx,r12
  40b99b:	call   0x41db50
  40b9a0:	lea    rcx,[r13+rax*1+0x2]
  40b9a5:	mov    rdi,rax
  40b9a8:	call   0x41dbc8
  40b9ad:	mov    r8,rdi
  40b9b0:	mov    rsi,rax
  40b9b3:	mov    rdx,r12
  40b9b6:	mov    rcx,rax
  40b9b9:	call   0x41dbc0
  40b9be:	lea    rcx,[rsi+rdi*1+0x1]
  40b9c3:	mov    BYTE PTR [rsi+rdi*1],0x2e
  40b9c7:	mov    rdx,rbp
  40b9ca:	call   0x41db58
  40b9cf:	mov    QWORD PTR [rbx+0x18],rsi
  40b9d3:	add    rsp,0x28
  40b9d7:	pop    rbx
  40b9d8:	pop    rsi
  40b9d9:	pop    rdi
  40b9da:	pop    rbp
  40b9db:	pop    r12
  40b9dd:	pop    r13
  40b9df:	ret    
  40b9e0:	lea    rdx,[rip+0x16e2b]        # 0x422812
  40b9e7:	lea    rcx,[rip+0x16e61]        # 0x42284f
  40b9ee:	mov    r8d,0x97
  40b9f4:	call   0x41da30
  40b9f9:	jmp    0x40b97d
  40b9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ba00:	push   r12
  40ba02:	push   rbp
  40ba03:	push   rdi
  40ba04:	push   rsi
  40ba05:	push   rbx
  40ba06:	sub    rsp,0x20
  40ba0a:	cmp    QWORD PTR [rcx+0x18],0x0
  40ba0f:	je     0x40ba20
  40ba11:	add    rsp,0x20
  40ba15:	pop    rbx
  40ba16:	pop    rsi
  40ba17:	pop    rdi
  40ba18:	pop    rbp
  40ba19:	pop    r12
  40ba1b:	ret    
  40ba1c:	nop    DWORD PTR [rax+0x0]
  40ba20:	cmp    DWORD PTR [rcx+0x8],0x67
  40ba24:	mov    rbx,rcx
  40ba27:	je     0x40ba42
  40ba29:	lea    rdx,[rip+0x16de2]        # 0x422812
  40ba30:	lea    rcx,[rip+0x16e2c]        # 0x422863
  40ba37:	mov    r8d,0xb1
  40ba3d:	call   0x41da30
  40ba42:	mov    rax,QWORD PTR [rbx+0x20]
  40ba46:	lea    rbp,[rip+0x16ddf]        # 0x42282c
  40ba4d:	test   rax,rax
  40ba50:	je     0x40ba56
  40ba52:	mov    rbp,QWORD PTR [rax+0x18]
  40ba56:	mov    rcx,QWORD PTR [rbx+0x10]
  40ba5a:	call   0x406fc0
  40ba5f:	mov    rcx,rax
  40ba62:	mov    r12,rax
  40ba65:	call   0x41db50
  40ba6a:	mov    rcx,rbp
  40ba6d:	mov    rsi,rax
  40ba70:	call   0x41db50
  40ba75:	lea    rcx,[rsi+rax*1+0x2]
  40ba7a:	mov    rdi,rax
  40ba7d:	call   0x41dbc8
  40ba82:	mov    r8,rdi
  40ba85:	mov    rsi,rax
  40ba88:	mov    rdx,rbp
  40ba8b:	mov    rcx,rax
  40ba8e:	call   0x41dbc0
  40ba93:	lea    rcx,[rsi+rdi*1+0x1]
  40ba98:	mov    BYTE PTR [rsi+rdi*1],0x5f
  40ba9c:	mov    rdx,r12
  40ba9f:	call   0x41db58
  40baa4:	mov    QWORD PTR [rbx+0x18],rsi
  40baa8:	add    rsp,0x20
  40baac:	pop    rbx
  40baad:	pop    rsi
  40baae:	pop    rdi
  40baaf:	pop    rbp
  40bab0:	pop    r12
  40bab2:	ret    
  40bab3:	nop
  40bab4:	nop
  40bab5:	nop
  40bab6:	nop
  40bab7:	nop
  40bab8:	nop
  40bab9:	nop
  40baba:	nop
  40babb:	nop
  40babc:	nop
  40babd:	nop
  40babe:	nop
  40babf:	nop
  40bac0:	push   rbx
  40bac1:	sub    rsp,0x20
  40bac5:	mov    edx,DWORD PTR [rcx]
  40bac7:	cmp    edx,0xe
  40baca:	ja     0x40bbe0
  40bad0:	lea    rax,[rip+0x16dd5]        # 0x4228ac
  40bad7:	mov    rbx,rcx
  40bada:	mov    ecx,edx
  40badc:	movsxd rcx,DWORD PTR [rax+rcx*4]
  40bae0:	add    rax,rcx
  40bae3:	jmp    rax
  40bae5:	lea    rcx,[rip+0x16d95]        # 0x422881
  40baec:	mov    DWORD PTR [rbx+0x8],0x2
  40baf3:	call   0x41db10
  40baf8:	mov    QWORD PTR [rbx+0x10],rax
  40bafc:	nop    DWORD PTR [rax+0x0]
  40bb00:	add    rsp,0x20
  40bb04:	pop    rbx
  40bb05:	ret    
  40bb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb10:	mov    BYTE PTR [rbx+0x8],0x81
  40bb14:	jmp    0x40bb00
  40bb16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb20:	mov    BYTE PTR [rbx+0x8],0x0
  40bb24:	jmp    0x40bb00
  40bb26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb30:	mov    edx,0xffff8001
  40bb35:	mov    WORD PTR [rbx+0x8],dx
  40bb39:	jmp    0x40bb00
  40bb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb40:	mov    DWORD PTR [rbx+0x8],0x80000001
  40bb47:	jmp    0x40bb00
  40bb49:	nop    DWORD PTR [rax+0x0]
  40bb50:	mov    DWORD PTR [rbx+0x8],0x7cf00000
  40bb57:	jmp    0x40bb00
  40bb59:	nop    DWORD PTR [rax+0x0]
  40bb60:	movsd  xmm0,QWORD PTR [rip+0x16f80]        # 0x422ae8
  40bb68:	movsd  QWORD PTR [rbx+0x8],xmm0
  40bb6d:	jmp    0x40bb00
  40bb6f:	nop
  40bb70:	mov    BYTE PTR [rbx+0x8],0xff
  40bb74:	jmp    0x40bb00
  40bb76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb80:	mov    eax,0xffffffff
  40bb85:	mov    WORD PTR [rbx+0x8],ax
  40bb89:	jmp    0x40bb00
  40bb8e:	xchg   ax,ax
  40bb90:	mov    DWORD PTR [rbx+0x8],0xffffffff
  40bb97:	jmp    0x40bb00
  40bb9c:	nop    DWORD PTR [rax+0x0]
  40bba0:	movabs rax,0x8000000000000002
  40bbaa:	mov    QWORD PTR [rbx+0x8],rax
  40bbae:	jmp    0x40bb00
  40bbb3:	mov    QWORD PTR [rbx+0x8],0xfffffffffffffffe
  40bbbb:	jmp    0x40bb00
  40bbc0:	lea    rcx,[rip+0x16cb9]        # 0x422880
  40bbc7:	call   0x41db10
  40bbcc:	mov    DWORD PTR [rbx+0x8],0x1
  40bbd3:	mov    QWORD PTR [rbx+0x10],rax
  40bbd7:	jmp    0x40bb00
  40bbdc:	nop    DWORD PTR [rax+0x0]
  40bbe0:	lea    rcx,[rip+0x16ca1]        # 0x422888
  40bbe7:	add    rsp,0x20
  40bbeb:	pop    rbx
  40bbec:	jmp    0x40b3d0
  40bbf1:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc00:	push   rbp
  40bc01:	push   rdi
  40bc02:	push   rsi
  40bc03:	push   rbx
  40bc04:	sub    rsp,0x68
  40bc08:	mov    rax,QWORD PTR [rip+0x1fc51]        # 0x42b860
  40bc0f:	cmp    DWORD PTR [rcx+0x8],0x68
  40bc13:	mov    rdi,rdx
  40bc16:	mov    rsi,rcx
  40bc19:	mov    rdx,QWORD PTR [rax]
  40bc1c:	mov    QWORD PTR [rsp+0x40],rdx
  40bc21:	mov    rdx,QWORD PTR [rax+0x8]
  40bc25:	mov    QWORD PTR [rsp+0x48],rdx
  40bc2a:	mov    rdx,QWORD PTR [rax+0x10]
  40bc2e:	mov    rax,QWORD PTR [rax+0x18]
  40bc32:	mov    QWORD PTR [rsp+0x50],rdx
  40bc37:	mov    QWORD PTR [rsp+0x58],rax
  40bc3c:	je     0x40bc51
  40bc3e:	lea    rdx,[rip+0x16ca3]        # 0x4228e8
  40bc45:	lea    rcx,[rip+0x16cb9]        # 0x422905
  40bc4c:	call   0x406300
  40bc51:	mov    edx,DWORD PTR [rsi+0xc]
  40bc54:	cmp    edx,0xf
  40bc57:	jg     0x40bcd0
  40bc59:	cmp    edx,0xe
  40bc5c:	jge    0x40bd35
  40bc62:	cmp    edx,0xd
  40bc65:	jne    0x40bd60
  40bc6b:	xor    ecx,ecx
  40bc6d:	call   0x415bb0
  40bc72:	mov    rcx,QWORD PTR [rsi+0x50]
  40bc76:	mov    rdx,rax
  40bc79:	mov    rbx,rax
  40bc7c:	call   0x40bc00
  40bc81:	lea    rcx,[rsp+0x20]
  40bc86:	mov    rdx,rbx
  40bc89:	call   0x415cc0
  40bc8e:	mov    rax,QWORD PTR [rsp+0x20]
  40bc93:	lea    rdx,[rsp+0x40]
  40bc98:	mov    rcx,rdi
  40bc9b:	mov    QWORD PTR [rsp+0x40],rax
  40bca0:	mov    rax,QWORD PTR [rsp+0x28]
  40bca5:	mov    QWORD PTR [rsp+0x48],rax
  40bcaa:	mov    rax,QWORD PTR [rsp+0x30]
  40bcaf:	mov    QWORD PTR [rsp+0x50],rax
  40bcb4:	mov    rax,QWORD PTR [rsp+0x38]
  40bcb9:	mov    QWORD PTR [rsp+0x58],rax
  40bcbe:	call   0x415c40
  40bcc3:	nop
  40bcc4:	add    rsp,0x68
  40bcc8:	pop    rbx
  40bcc9:	pop    rsi
  40bcca:	pop    rdi
  40bccb:	pop    rbp
  40bccc:	ret    
  40bccd:	nop    DWORD PTR [rax]
  40bcd0:	cmp    edx,0x10
  40bcd3:	jne    0x40bd30
  40bcd5:	mov    rax,QWORD PTR [rsi+0x30]
  40bcd9:	test   rax,rax
  40bcdc:	je     0x40bd92
  40bce2:	mov    ecx,DWORD PTR [rax+0x4]
  40bce5:	call   0x415bb0
  40bcea:	xor    ebx,ebx
  40bcec:	mov    rbp,rax
  40bcef:	jmp    0x40bd10
  40bcf1:	mov    r9d,DWORD PTR [rcx+0x4]
  40bcf5:	cmp    ebx,r9d
  40bcf8:	jge    0x40bd21
  40bcfa:	mov    edx,ebx
  40bcfc:	add    ebx,0x1
  40bcff:	call   0x416670
  40bd04:	mov    rcx,QWORD PTR [rax+0x50]
  40bd08:	mov    rdx,rbp
  40bd0b:	call   0x40bc00
  40bd10:	mov    rcx,QWORD PTR [rsi+0x30]
  40bd14:	test   rcx,rcx
  40bd17:	jne    0x40bcf1
  40bd19:	xor    r9d,r9d
  40bd1c:	cmp    ebx,r9d
  40bd1f:	jl     0x40bcfa
  40bd21:	lea    rcx,[rsp+0x20]
  40bd26:	mov    rdx,rbp
  40bd29:	jmp    0x40bc89
  40bd2e:	xchg   ax,ax
  40bd30:	cmp    edx,0x6c
  40bd33:	jne    0x40bd60
  40bd35:	mov    eax,DWORD PTR [rsi+0x5c]
  40bd38:	lea    rbx,[rsp+0x40]
  40bd3d:	mov    rcx,rbx
  40bd40:	mov    DWORD PTR [rsp+0x40],eax
  40bd44:	call   0x40bac0
  40bd49:	mov    rdx,rbx
  40bd4c:	mov    rcx,rdi
  40bd4f:	call   0x415c40
  40bd54:	nop
  40bd55:	add    rsp,0x68
  40bd59:	pop    rbx
  40bd5a:	pop    rsi
  40bd5b:	pop    rdi
  40bd5c:	pop    rbp
  40bd5d:	ret    
  40bd5e:	xchg   ax,ax
  40bd60:	lea    rcx,[rip+0x16bb4]        # 0x42291b
  40bd67:	call   0x406300
  40bd6c:	test   eax,eax
  40bd6e:	jne    0x40bcc4
  40bd74:	lea    rdx,[rip+0x16bbd]        # 0x422938
  40bd7b:	lea    rcx,[rip+0x16bc6]        # 0x422948
  40bd82:	mov    r8d,0x71
  40bd88:	call   0x41da30
  40bd8d:	jmp    0x40bcc4
  40bd92:	xor    ecx,ecx
  40bd94:	jmp    0x40bce5
  40bd99:	nop    DWORD PTR [rax+0x0]
  40bda0:	push   r13
  40bda2:	push   r12
  40bda4:	push   rbp
  40bda5:	push   rdi
  40bda6:	push   rsi
  40bda7:	push   rbx
  40bda8:	sub    rsp,0x38
  40bdac:	mov    rsi,rcx
  40bdaf:	mov    rdi,rdx
  40bdb2:	mov    r12,r9
  40bdb5:	jmp    0x40bdd1
  40bdb7:	nop    WORD PTR [rax+rax*1+0x0]
  40bdc0:	test   bpl,bpl
  40bdc3:	jne    0x40be60
  40bdc9:	mov    rsi,QWORD PTR [rsi+0x50]
  40bdcd:	add    r8d,0x1
  40bdd1:	movsxd rax,r8d
  40bdd4:	mov    rax,QWORD PTR [rdi+rax*8+0x8]
  40bdd9:	mov    rbx,QWORD PTR [rax+0x2100]
  40bde0:	mov    eax,DWORD PTR [rdi]
  40bde2:	lea    r10d,[rax-0x1]
  40bde6:	mov    r13d,ebx
  40bde9:	cmp    r10d,r8d
  40bdec:	sete   bpl
  40bdf0:	test   r8d,r8d
  40bdf3:	je     0x40be77
  40bdf9:	test   ebx,ebx
  40bdfb:	je     0x40bdc0
  40bdfd:	test   bpl,bpl
  40be00:	je     0x40be24
  40be02:	xor    ebx,ebx
  40be04:	mov    rdx,r12
  40be07:	mov    rcx,rsi
  40be0a:	add    ebx,0x1
  40be0d:	call   0x40bc00
  40be12:	cmp    ebx,r13d
  40be15:	jne    0x40be04
  40be17:	add    rsp,0x38
  40be1b:	pop    rbx
  40be1c:	pop    rsi
  40be1d:	pop    rdi
  40be1e:	pop    rbp
  40be1f:	pop    r12
  40be21:	pop    r13
  40be23:	ret    
  40be24:	lea    ebx,[r8+0x1]
  40be28:	xor    ebp,ebp
  40be2a:	nop    WORD PTR [rax+rax*1+0x0]
  40be30:	mov    rcx,QWORD PTR [rsi+0x50]
  40be34:	mov    r9,r12
  40be37:	mov    r8d,ebx
  40be3a:	mov    rdx,rdi
  40be3d:	add    ebp,0x1
  40be40:	call   0x40bda0
  40be45:	cmp    ebp,r13d
  40be48:	jne    0x40be30
  40be4a:	add    rsp,0x38
  40be4e:	pop    rbx
  40be4f:	pop    rsi
  40be50:	pop    rdi
  40be51:	pop    rbp
  40be52:	pop    r12
  40be54:	pop    r13
  40be56:	ret    
  40be57:	nop    WORD PTR [rax+rax*1+0x0]
  40be60:	mov    rdx,r12
  40be63:	mov    rcx,rsi
  40be66:	add    rsp,0x38
  40be6a:	pop    rbx
  40be6b:	pop    rsi
  40be6c:	pop    rdi
  40be6d:	pop    rbp
  40be6e:	pop    r12
  40be70:	pop    r13
  40be72:	jmp    0x40bc00
  40be77:	xor    ecx,ecx
  40be79:	mov    DWORD PTR [rsp+0x2c],r8d
  40be7e:	call   0x415bb0
  40be83:	mov    r8d,DWORD PTR [rsp+0x2c]
  40be88:	mov    r12,rax
  40be8b:	jmp    0x40bdf9
  40be90:	push   r12
  40be92:	push   rbp
  40be93:	push   rdi
  40be94:	push   rsi
  40be95:	push   rbx
  40be96:	sub    rsp,0x60
  40be9a:	mov    edx,DWORD PTR [rcx+0x8]
  40be9d:	mov    rbx,rcx
  40bea0:	lea    eax,[rdx-0x66]
  40bea3:	and    eax,0xfffffffd
  40bea6:	jne    0x40bee5
  40bea8:	cmp    edx,0x66
  40beab:	je     0x40bf00
  40bead:	mov    rsi,QWORD PTR [rbx+0x20a0]
  40beb4:	test   rsi,rsi
  40beb7:	je     0x40bf30
  40beb9:	cmp    edx,0x68
  40bebc:	je     0x40bed0
  40bebe:	mov    rax,rsi
  40bec1:	add    rsp,0x60
  40bec5:	pop    rbx
  40bec6:	pop    rsi
  40bec7:	pop    rdi
  40bec8:	pop    rbp
  40bec9:	pop    r12
  40becb:	ret    
  40becc:	nop    DWORD PTR [rax+0x0]
  40bed0:	mov    rax,rsi
  40bed3:	mov    QWORD PTR [rbx+0x20a0],rsi
  40beda:	add    rsp,0x60
  40bede:	pop    rbx
  40bedf:	pop    rsi
  40bee0:	pop    rdi
  40bee1:	pop    rbp
  40bee2:	pop    r12
  40bee4:	ret    
  40bee5:	lea    rdx,[rip+0x16a94]        # 0x422980
  40beec:	lea    rcx,[rip+0x16a12]        # 0x422905
  40bef3:	call   0x406300
  40bef8:	mov    edx,DWORD PTR [rbx+0x8]
  40befb:	cmp    edx,0x66
  40befe:	jne    0x40bead
  40bf00:	mov    rsi,QWORD PTR [rbx+0x20c0]
  40bf07:	mov    rdi,QWORD PTR [rbx+0x50]
  40bf0b:	test   rsi,rsi
  40bf0e:	je     0x40c010
  40bf14:	mov    rax,rsi
  40bf17:	mov    QWORD PTR [rbx+0x20c0],rsi
  40bf1e:	add    rsp,0x60
  40bf22:	pop    rbx
  40bf23:	pop    rsi
  40bf24:	pop    rdi
  40bf25:	pop    rbp
  40bf26:	pop    r12
  40bf28:	ret    
  40bf29:	nop    DWORD PTR [rax+0x0]
  40bf30:	mov    rdi,rbx
  40bf33:	xor    ecx,ecx
  40bf35:	call   0x415bb0
  40bf3a:	mov    rsi,rax
  40bf3d:	mov    rax,QWORD PTR [rip+0x1f91c]        # 0x42b860
  40bf44:	cmp    DWORD PTR [rdi+0x8],0x68
  40bf48:	mov    rdx,QWORD PTR [rax]
  40bf4b:	mov    QWORD PTR [rsp+0x40],rdx
  40bf50:	mov    rdx,QWORD PTR [rax+0x8]
  40bf54:	mov    QWORD PTR [rsp+0x48],rdx
  40bf59:	mov    rdx,QWORD PTR [rax+0x10]
  40bf5d:	mov    rax,QWORD PTR [rax+0x18]
  40bf61:	mov    QWORD PTR [rsp+0x50],rdx
  40bf66:	mov    QWORD PTR [rsp+0x58],rax
  40bf6b:	je     0x40bf80
  40bf6d:	lea    rdx,[rip+0x16974]        # 0x4228e8
  40bf74:	lea    rcx,[rip+0x1698a]        # 0x422905
  40bf7b:	call   0x406300
  40bf80:	mov    edx,DWORD PTR [rdi+0xc]
  40bf83:	cmp    edx,0xf
  40bf86:	jg     0x40c025
  40bf8c:	cmp    edx,0xe
  40bf8f:	jge    0x40c033
  40bf95:	cmp    edx,0xd
  40bf98:	jne    0x40c0d2
  40bf9e:	xor    ecx,ecx
  40bfa0:	call   0x415bb0
  40bfa5:	mov    rcx,QWORD PTR [rdi+0x50]
  40bfa9:	mov    rdx,rax
  40bfac:	mov    rbp,rax
  40bfaf:	call   0x40bc00
  40bfb4:	lea    rcx,[rsp+0x20]
  40bfb9:	mov    rdx,rbp
  40bfbc:	call   0x415cc0
  40bfc1:	mov    rax,QWORD PTR [rsp+0x20]
  40bfc6:	lea    rdi,[rsp+0x40]
  40bfcb:	mov    QWORD PTR [rsp+0x40],rax
  40bfd0:	mov    rax,QWORD PTR [rsp+0x28]
  40bfd5:	mov    QWORD PTR [rsp+0x48],rax
  40bfda:	mov    rax,QWORD PTR [rsp+0x30]
  40bfdf:	mov    QWORD PTR [rsp+0x50],rax
  40bfe4:	mov    rax,QWORD PTR [rsp+0x38]
  40bfe9:	mov    QWORD PTR [rsp+0x58],rax
  40bfee:	mov    rdx,rdi
  40bff1:	mov    rcx,rsi
  40bff4:	call   0x415c40
  40bff9:	mov    edx,DWORD PTR [rbx+0x8]
  40bffc:	cmp    edx,0x66
  40bfff:	jne    0x40beb9
  40c005:	jmp    0x40bf14
  40c00a:	nop    WORD PTR [rax+rax*1+0x0]
  40c010:	mov    rsi,QWORD PTR [rbx+0x20a0]
  40c017:	test   rsi,rsi
  40c01a:	jne    0x40bf14
  40c020:	jmp    0x40bf33
  40c025:	cmp    edx,0x10
  40c028:	je     0x40c050
  40c02a:	cmp    edx,0x6c
  40c02d:	jne    0x40c0d2
  40c033:	mov    eax,DWORD PTR [rdi+0x5c]
  40c036:	lea    rdi,[rsp+0x40]
  40c03b:	mov    rcx,rdi
  40c03e:	mov    DWORD PTR [rsp+0x40],eax
  40c042:	call   0x40bac0
  40c047:	jmp    0x40bfee
  40c049:	nop    DWORD PTR [rax+0x0]
  40c050:	mov    rax,QWORD PTR [rdi+0x30]
  40c054:	test   rax,rax
  40c057:	je     0x40c109
  40c05d:	mov    ecx,DWORD PTR [rax+0x4]
  40c060:	call   0x415bb0
  40c065:	xor    ebp,ebp
  40c067:	mov    r12,rax
  40c06a:	jmp    0x40c089
  40c06c:	nop    DWORD PTR [rax+0x0]
  40c070:	mov    rcx,QWORD PTR [rax+0x50]
  40c074:	lea    rdx,[rax+0x88]
  40c07b:	mov    r9,rsi
  40c07e:	xor    r8d,r8d
  40c081:	call   0x40bda0
  40c086:	add    ebp,0x1
  40c089:	mov    rcx,QWORD PTR [rdi+0x30]
  40c08d:	test   rcx,rcx
  40c090:	je     0x40c0c0
  40c092:	mov    r8d,DWORD PTR [rcx+0x4]
  40c096:	cmp    ebp,r8d
  40c099:	jge    0x40c0c5
  40c09b:	mov    edx,ebp
  40c09d:	call   0x416670
  40c0a2:	mov    edx,DWORD PTR [rax+0x88]
  40c0a8:	test   edx,edx
  40c0aa:	jg     0x40c070
  40c0ac:	mov    rcx,QWORD PTR [rax+0x50]
  40c0b0:	mov    rdx,r12
  40c0b3:	call   0x40bc00
  40c0b8:	jmp    0x40c086
  40c0ba:	nop    WORD PTR [rax+rax*1+0x0]
  40c0c0:	xor    r8d,r8d
  40c0c3:	jmp    0x40c096
  40c0c5:	lea    rcx,[rsp+0x20]
  40c0ca:	mov    rdx,r12
  40c0cd:	jmp    0x40bfbc
  40c0d2:	lea    rcx,[rip+0x16842]        # 0x42291b
  40c0d9:	lea    rdi,[rsp+0x40]
  40c0de:	call   0x406300
  40c0e3:	test   eax,eax
  40c0e5:	jne    0x40bfee
  40c0eb:	lea    rdx,[rip+0x16846]        # 0x422938
  40c0f2:	lea    rcx,[rip+0x1684f]        # 0x422948
  40c0f9:	mov    r8d,0x4f
  40c0ff:	call   0x41da30
  40c104:	jmp    0x40bfee
  40c109:	xor    ecx,ecx
  40c10b:	jmp    0x40c060
  40c110:	sub    rsp,0x38
  40c114:	cmp    ecx,0xc
  40c117:	ja     0x40c1f0
  40c11d:	lea    rax,[rip+0x1698c]        # 0x422ab0
  40c124:	mov    ecx,ecx
  40c126:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40c12a:	add    rax,rdx
  40c12d:	jmp    rax
  40c12f:	nop
  40c130:	lea    rax,[rip+0x16887]        # 0x4229be
  40c137:	nop    WORD PTR [rax+rax*1+0x0]
  40c140:	add    rsp,0x38
  40c144:	ret    
  40c145:	lea    rax,[rip+0x1687f]        # 0x4229cb
  40c14c:	jmp    0x40c140
  40c14e:	xchg   ax,ax
  40c150:	lea    rax,[rip+0x16881]        # 0x4229d8
  40c157:	jmp    0x40c140
  40c159:	nop    DWORD PTR [rax+0x0]
  40c160:	lea    rax,[rip+0x1687f]        # 0x4229e6
  40c167:	jmp    0x40c140
  40c169:	nop    DWORD PTR [rax+0x0]
  40c170:	lea    rax,[rip+0x1687b]        # 0x4229f2
  40c177:	jmp    0x40c140
  40c179:	nop    DWORD PTR [rax+0x0]
  40c180:	lea    rax,[rip+0x16879]        # 0x422a00
  40c187:	jmp    0x40c140
  40c189:	nop    DWORD PTR [rax+0x0]
  40c190:	lea    rax,[rip+0x16878]        # 0x422a0f
  40c197:	jmp    0x40c140
  40c199:	nop    DWORD PTR [rax+0x0]
  40c1a0:	lea    rax,[rip+0x16876]        # 0x422a1d
  40c1a7:	jmp    0x40c140
  40c1a9:	nop    DWORD PTR [rax+0x0]
  40c1b0:	lea    rax,[rip+0x16875]        # 0x422a2c
  40c1b7:	jmp    0x40c140
  40c1b9:	nop    DWORD PTR [rax+0x0]
  40c1c0:	lea    rax,[rip+0x16872]        # 0x422a39
  40c1c7:	jmp    0x40c140
  40c1cc:	nop    DWORD PTR [rax+0x0]
  40c1d0:	lea    rax,[rip+0x16870]        # 0x422a47
  40c1d7:	jmp    0x40c140
  40c1dc:	nop    DWORD PTR [rax+0x0]
  40c1e0:	lea    rax,[rip+0x1686f]        # 0x422a56
  40c1e7:	jmp    0x40c140
  40c1ec:	nop    DWORD PTR [rax+0x0]
  40c1f0:	lea    rcx,[rip+0x1686e]        # 0x422a65
  40c1f7:	call   0x406300
  40c1fc:	mov    edx,eax
  40c1fe:	xor    eax,eax
  40c200:	test   edx,edx
  40c202:	jne    0x40c140
  40c208:	lea    rdx,[rip+0x16729]        # 0x422938
  40c20f:	lea    rcx,[rip+0x16872]        # 0x422a88
  40c216:	mov    r8d,0xc6
  40c21c:	mov    QWORD PTR [rsp+0x28],rax
  40c221:	call   0x41da30
  40c226:	mov    rax,QWORD PTR [rsp+0x28]
  40c22b:	jmp    0x40c140
  40c230:	push   r14
  40c232:	push   r13
  40c234:	push   r12
  40c236:	push   rbp
  40c237:	push   rdi
  40c238:	push   rsi
  40c239:	push   rbx
  40c23a:	sub    rsp,0x20
  40c23e:	test   rcx,rcx
  40c241:	mov    r13,rcx
  40c244:	mov    rbp,rdx
  40c247:	mov    r12,r8
  40c24a:	je     0x40c378
  40c250:	mov    eax,DWORD PTR [r13+0x0]
  40c254:	test   eax,eax
  40c256:	jle    0x40c360
  40c25c:	mov    ecx,0x8010
  40c261:	call   0x4063a0
  40c266:	test   rax,rax
  40c269:	mov    r14,rax
  40c26c:	je     0x40c390
  40c272:	mov    QWORD PTR [r14+0x8],rax
  40c276:	mov    DWORD PTR [rax+0x4],0x0
  40c27d:	mov    eax,DWORD PTR [r13+0x0]
  40c281:	cmp    eax,0x400
  40c286:	mov    DWORD PTR [r14],eax
  40c289:	jg     0x40c345
  40c28f:	test   eax,eax
  40c291:	jle    0x40c312
  40c293:	lea    rbx,[r14+0x2010]
  40c29a:	xor    esi,esi
  40c29c:	xor    edi,edi
  40c29e:	jmp    0x40c2b0
  40c2a0:	add    edi,0x1
  40c2a3:	add    rsi,0x8
  40c2a7:	add    rbx,0x8
  40c2ab:	cmp    DWORD PTR [r14],edi
  40c2ae:	jle    0x40c312
  40c2b0:	mov    r9,QWORD PTR [r13+rsi*1+0x8]
  40c2b5:	test   rbp,rbp
  40c2b8:	mov    r11,QWORD PTR [r9+0x2100]
  40c2bf:	mov    QWORD PTR [rbx+0x4000],r11
  40c2c6:	je     0x40c324
  40c2c8:	mov    r10,QWORD PTR [rbp+rsi*1+0x0]
  40c2cd:	test   r12,r12
  40c2d0:	mov    QWORD PTR [rbx-0x2000],r10
  40c2d7:	je     0x40c340
  40c2d9:	mov    r9,QWORD PTR [r12+rsi*1]
  40c2dd:	mov    QWORD PTR [rbx],r9
  40c2e0:	add    r9,r10
  40c2e3:	mov    QWORD PTR [rbx+0x2000],r10
  40c2ea:	cmp    r11,r9
  40c2ed:	jae    0x40c2a0
  40c2ef:	lea    rdx,[rip+0x16852]        # 0x422b48
  40c2f6:	lea    rcx,[rip+0x16802]        # 0x422aff
  40c2fd:	add    edi,0x1
  40c300:	add    rsi,0x8
  40c304:	add    rbx,0x8
  40c308:	call   0x406300
  40c30d:	cmp    DWORD PTR [r14],edi
  40c310:	jg     0x40c2b0
  40c312:	mov    rax,r14
  40c315:	add    rsp,0x20
  40c319:	pop    rbx
  40c31a:	pop    rsi
  40c31b:	pop    rdi
  40c31c:	pop    rbp
  40c31d:	pop    r12
  40c31f:	pop    r13
  40c321:	pop    r14
  40c323:	ret    
  40c324:	test   r12,r12
  40c327:	mov    QWORD PTR [rbx-0x2000],0x0
  40c332:	je     0x40c394
  40c334:	xor    r10d,r10d
  40c337:	jmp    0x40c2d9
  40c339:	nop    DWORD PTR [rax+0x0]
  40c340:	mov    r9,r11
  40c343:	jmp    0x40c2dd
  40c345:	lea    rdx,[rip+0x167db]        # 0x422b27
  40c34c:	lea    rcx,[rip+0x167ac]        # 0x422aff
  40c353:	call   0x406300
  40c358:	mov    eax,DWORD PTR [r14]
  40c35b:	jmp    0x40c28f
  40c360:	lea    rdx,[rip+0x167ae]        # 0x422b15
  40c367:	lea    rcx,[rip+0x16791]        # 0x422aff
  40c36e:	call   0x406300
  40c373:	jmp    0x40c25c
  40c378:	lea    rdx,[rip+0x16771]        # 0x422af0
  40c37f:	lea    rcx,[rip+0x16779]        # 0x422aff
  40c386:	call   0x406300
  40c38b:	jmp    0x40c250
  40c390:	xor    eax,eax
  40c392:	jmp    0x40c315
  40c394:	mov    QWORD PTR [rbx],r11
  40c397:	mov    QWORD PTR [rbx+0x2000],0x0
  40c3a2:	jmp    0x40c2a0
  40c3a7:	nop    WORD PTR [rax+rax*1+0x0]
  40c3b0:	push   rbp
  40c3b1:	push   rdi
  40c3b2:	push   rsi
  40c3b3:	push   rbx
  40c3b4:	sub    rsp,0x28
  40c3b8:	test   rdx,rdx
  40c3bb:	mov    rbp,rcx
  40c3be:	mov    rdi,rdx
  40c3c1:	mov    esi,r8d
  40c3c4:	mov    ebx,r9d
  40c3c7:	je     0x40c460
  40c3cd:	mov    eax,DWORD PTR [rdi]
  40c3cf:	cmp    eax,ebx
  40c3d1:	jl     0x40c414
  40c3d3:	test   eax,eax
  40c3d5:	jle    0x40c414
  40c3d7:	cmp    ebx,esi
  40c3d9:	jle    0x40c42b
  40c3db:	mov    ecx,0x8010
  40c3e0:	call   0x4063a0
  40c3e5:	test   rax,rax
  40c3e8:	je     0x40c480
  40c3ee:	sub    ebx,esi
  40c3f0:	mov    QWORD PTR [rax+0x8],rbp
  40c3f4:	mov    DWORD PTR [rax+0x4],esi
  40c3f7:	mov    r9d,ebx
  40c3fa:	mov    DWORD PTR [rax],ebx
  40c3fc:	mov    rbx,rax
  40c3ff:	cmp    r9d,0x400
  40c406:	jg     0x40c440
  40c408:	mov    rax,rbx
  40c40b:	add    rsp,0x28
  40c40f:	pop    rbx
  40c410:	pop    rsi
  40c411:	pop    rdi
  40c412:	pop    rbp
  40c413:	ret    
  40c414:	lea    rdx,[rip+0x16765]        # 0x422b80
  40c41b:	lea    rcx,[rip+0x166dd]        # 0x422aff
  40c422:	call   0x406300
  40c427:	cmp    ebx,esi
  40c429:	jg     0x40c3db
  40c42b:	lea    rdx,[rip+0x16779]        # 0x422bab
  40c432:	lea    rcx,[rip+0x166c6]        # 0x422aff
  40c439:	call   0x406300
  40c43e:	jmp    0x40c3db
  40c440:	lea    rdx,[rip+0x166e0]        # 0x422b27
  40c447:	lea    rcx,[rip+0x166b1]        # 0x422aff
  40c44e:	call   0x406300
  40c453:	mov    rax,rbx
  40c456:	add    rsp,0x28
  40c45a:	pop    rbx
  40c45b:	pop    rsi
  40c45c:	pop    rdi
  40c45d:	pop    rbp
  40c45e:	ret    
  40c45f:	nop
  40c460:	lea    rdx,[rip+0x16689]        # 0x422af0
  40c467:	lea    rcx,[rip+0x16691]        # 0x422aff
  40c46e:	call   0x406300
  40c473:	jmp    0x40c3cd
  40c478:	nop    DWORD PTR [rax+rax*1+0x0]
  40c480:	xor    ebx,ebx
  40c482:	jmp    0x40c408
  40c487:	nop    WORD PTR [rax+rax*1+0x0]
  40c490:	test   rcx,rcx
  40c493:	je     0x40c4a0
  40c495:	jmp    0x4062e0
  40c49a:	nop    WORD PTR [rax+rax*1+0x0]
  40c4a0:	repz ret 
  40c4a2:	nop    DWORD PTR [rax+0x0]
  40c4a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4b0:	push   rdi
  40c4b1:	push   rsi
  40c4b2:	push   rbx
  40c4b3:	sub    rsp,0x70
  40c4b7:	mov    BYTE PTR [rip+0x259c2],0x0        # 0x431e80
  40c4be:	mov    r8,QWORD PTR [rcx+0x8]
  40c4c2:	mov    r9d,DWORD PTR [r8]
  40c4c5:	test   r9d,r9d
  40c4c8:	je     0x40c544
  40c4ca:	mov    edx,DWORD PTR [rcx]
  40c4cc:	test   edx,edx
  40c4ce:	jle    0x40c535
  40c4d0:	mov    rsi,rcx
  40c4d3:	xor    ebx,ebx
  40c4d5:	lea    rdi,[rsp+0x30]
  40c4da:	jmp    0x40c4e4
  40c4dc:	nop    DWORD PTR [rax+0x0]
  40c4e0:	mov    r8,QWORD PTR [rsi+0x8]
  40c4e4:	mov    eax,DWORD PTR [rsi+0x4]
  40c4e7:	mov    rcx,rdi
  40c4ea:	add    eax,ebx
  40c4ec:	add    ebx,0x1
  40c4ef:	cdqe   
  40c4f1:	lea    rax,[r8+rax*8]
  40c4f5:	mov    rdx,QWORD PTR [rax+0x2010]
  40c4fc:	mov    r9,QWORD PTR [rax+0x10]
  40c500:	mov    r8,QWORD PTR [rax+0x4010]
  40c507:	mov    DWORD PTR [rsp+0x28],edx
  40c50b:	mov    rax,QWORD PTR [rax+0x6010]
  40c512:	lea    rdx,[rip+0x1669f]        # 0x422bb8
  40c519:	mov    DWORD PTR [rsp+0x20],eax
  40c51d:	call   0x41db80
  40c522:	lea    rcx,[rip+0x25957]        # 0x431e80
  40c529:	mov    rdx,rdi
  40c52c:	call   0x41db70
  40c531:	cmp    DWORD PTR [rsi],ebx
  40c533:	jg     0x40c4e0
  40c535:	lea    rax,[rip+0x25944]        # 0x431e80
  40c53c:	add    rsp,0x70
  40c540:	pop    rbx
  40c541:	pop    rsi
  40c542:	pop    rdi
  40c543:	ret    
  40c544:	mov    eax,0x5d5b
  40c549:	mov    BYTE PTR [rip+0x25932],0x0        # 0x431e82
  40c550:	mov    WORD PTR [rip+0x25929],ax        # 0x431e80
  40c557:	lea    rax,[rip+0x25922]        # 0x431e80
  40c55e:	add    rsp,0x70
  40c562:	pop    rbx
  40c563:	pop    rsi
  40c564:	pop    rdi
  40c565:	ret    
  40c566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c570:	push   rsi
  40c571:	push   rbx
  40c572:	sub    rsp,0x28
  40c576:	mov    eax,DWORD PTR [rcx]
  40c578:	movsxd rbx,DWORD PTR [rcx+0x4]
  40c57c:	mov    rsi,rcx
  40c57f:	test   eax,eax
  40c581:	jle    0x40c5c0
  40c583:	mov    rax,QWORD PTR [rsi+0x8]
  40c587:	lea    rdx,[rax+rbx*8]
  40c58b:	mov    eax,0x1
  40c590:	mov    rcx,QWORD PTR [rdx+0x10]
  40c594:	mov    r8,rcx
  40c597:	add    r8,QWORD PTR [rdx+0x2010]
  40c59e:	cmp    QWORD PTR [rdx+0x4010],r8
  40c5a5:	jb     0x40c5b0
  40c5a7:	mov    QWORD PTR [rdx+0x4010],rcx
  40c5ae:	xor    al,al
  40c5b0:	add    rsp,0x28
  40c5b4:	pop    rbx
  40c5b5:	pop    rsi
  40c5b6:	ret    
  40c5b7:	nop    WORD PTR [rax+rax*1+0x0]
  40c5c0:	lea    rdx,[rip+0x16604]        # 0x422bcb
  40c5c7:	lea    rcx,[rip+0x16531]        # 0x422aff
  40c5ce:	call   0x406300
  40c5d3:	jmp    0x40c583
  40c5d5:	nop
  40c5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c5e0:	push   rdi
  40c5e1:	push   rsi
  40c5e2:	push   rbx
  40c5e3:	sub    rsp,0x20
  40c5e7:	mov    esi,DWORD PTR [rcx]
  40c5e9:	mov    rdi,rcx
  40c5ec:	test   esi,esi
  40c5ee:	lea    ebx,[rsi-0x1]
  40c5f1:	jle    0x40c693
  40c5f7:	test   ebx,ebx
  40c5f9:	js     0x40c689
  40c5ff:	mov    r10d,DWORD PTR [rdi+0x4]
  40c603:	mov    r9,QWORD PTR [rdi+0x8]
  40c607:	lea    eax,[rbx+r10*1]
  40c60b:	movsxd rdx,eax
  40c60e:	lea    rcx,[r9+rdx*8]
  40c612:	mov    rdi,QWORD PTR [rcx+0x4010]
  40c619:	mov    r8,QWORD PTR [rcx+0x10]
  40c61d:	lea    rdx,[rdi+0x1]
  40c621:	mov    rdi,r8
  40c624:	add    rdi,QWORD PTR [rcx+0x2010]
  40c62b:	mov    QWORD PTR [rcx+0x4010],rdx
  40c632:	cmp    rdx,rdi
  40c635:	jb     0x40c689
  40c637:	lea    r10d,[rsi+r10*1-0x2]
  40c63c:	sub    r10d,eax
  40c63f:	jmp    0x40c683
  40c641:	sub    ebx,0x1
  40c644:	movsxd rdx,eax
  40c647:	cmp    ebx,0xffffffff
  40c64a:	mov    QWORD PTR [r9+rdx*8+0x4010],r8
  40c652:	je     0x40c689
  40c654:	add    eax,r10d
  40c657:	movsxd rdx,eax
  40c65a:	lea    rcx,[r9+rdx*8]
  40c65e:	mov    r8,QWORD PTR [rcx+0x10]
  40c662:	mov    rdi,QWORD PTR [rcx+0x4010]
  40c669:	mov    rsi,r8
  40c66c:	add    rsi,QWORD PTR [rcx+0x2010]
  40c673:	lea    rdx,[rdi+0x1]
  40c677:	mov    QWORD PTR [rcx+0x4010],rdx
  40c67e:	cmp    rdx,rsi
  40c681:	jb     0x40c689
  40c683:	test   ebx,ebx
  40c685:	jne    0x40c641
  40c687:	xor    ebx,ebx
  40c689:	mov    eax,ebx
  40c68b:	add    rsp,0x20
  40c68f:	pop    rbx
  40c690:	pop    rsi
  40c691:	pop    rdi
  40c692:	ret    
  40c693:	lea    rdx,[rip+0x16531]        # 0x422bcb
  40c69a:	lea    rcx,[rip+0x1645e]        # 0x422aff
  40c6a1:	call   0x406300
  40c6a6:	jmp    0x40c5f7
  40c6ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40c6b0:	mov    eax,DWORD PTR [rcx]
  40c6b2:	test   eax,eax
  40c6b4:	jle    0x40c701
  40c6b6:	mov    edx,DWORD PTR [rcx+0x4]
  40c6b9:	mov    r8,QWORD PTR [rcx+0x8]
  40c6bd:	lea    r9d,[rax+rdx*1-0x1]
  40c6c2:	mov    r10d,edx
  40c6c5:	xor    eax,eax
  40c6c7:	movsxd rcx,edx
  40c6ca:	add    rax,QWORD PTR [r8+rcx*8+0x4010]
  40c6d2:	cmp    edx,r9d
  40c6d5:	je     0x40c6ff
  40c6d7:	add    edx,0x1
  40c6da:	mov    ecx,edx
  40c6dc:	sub    ecx,r10d
  40c6df:	test   ecx,ecx
  40c6e1:	jle    0x40c6c7
  40c6e3:	movsxd rcx,edx
  40c6e6:	imul   rax,QWORD PTR [r8+rcx*8+0x6010]
  40c6ef:	movsxd rcx,edx
  40c6f2:	add    rax,QWORD PTR [r8+rcx*8+0x4010]
  40c6fa:	cmp    edx,r9d
  40c6fd:	jne    0x40c6d7
  40c6ff:	repz ret 
  40c701:	xor    eax,eax
  40c703:	ret    
  40c704:	nop
  40c705:	nop
  40c706:	nop
  40c707:	nop
  40c708:	nop
  40c709:	nop
  40c70a:	nop
  40c70b:	nop
  40c70c:	nop
  40c70d:	nop
  40c70e:	nop
  40c70f:	nop
  40c710:	push   rbx
  40c711:	sub    rsp,0x20
  40c715:	cmp    ecx,0xe
  40c718:	ja     0x40c800
  40c71e:	lea    rax,[rip+0x1651f]        # 0x422c44
  40c725:	mov    edx,ecx
  40c727:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40c72b:	add    rax,rdx
  40c72e:	jmp    rax
  40c730:	mov    ebx,0x2
  40c735:	movsxd rax,ebx
  40c738:	lea    rdx,[rip+0x25c41]        # 0x432380
  40c73f:	shl    rax,0x4
  40c743:	mov    eax,DWORD PTR [rdx+rax*1+0x8]
  40c747:	add    rsp,0x20
  40c74b:	pop    rbx
  40c74c:	ret    
  40c74d:	nop    DWORD PTR [rax]
  40c750:	mov    ebx,0x1
  40c755:	jmp    0x40c735
  40c757:	nop    WORD PTR [rax+rax*1+0x0]
  40c760:	mov    ebx,0x3
  40c765:	jmp    0x40c735
  40c767:	nop    WORD PTR [rax+rax*1+0x0]
  40c770:	mov    ebx,0x5
  40c775:	jmp    0x40c735
  40c777:	nop    WORD PTR [rax+rax*1+0x0]
  40c780:	mov    ebx,0xb
  40c785:	jmp    0x40c735
  40c787:	nop    WORD PTR [rax+rax*1+0x0]
  40c790:	mov    ebx,0xc
  40c795:	jmp    0x40c735
  40c797:	nop    WORD PTR [rax+rax*1+0x0]
  40c7a0:	mov    ebx,0xe
  40c7a5:	jmp    0x40c735
  40c7a7:	nop    WORD PTR [rax+rax*1+0x0]
  40c7b0:	mov    ebx,0x4
  40c7b5:	jmp    0x40c735
  40c7ba:	nop    WORD PTR [rax+rax*1+0x0]
  40c7c0:	mov    ebx,0x6
  40c7c5:	jmp    0x40c735
  40c7ca:	nop    WORD PTR [rax+rax*1+0x0]
  40c7d0:	mov    ebx,0x9
  40c7d5:	jmp    0x40c735
  40c7da:	nop    WORD PTR [rax+rax*1+0x0]
  40c7e0:	mov    ebx,0xa
  40c7e5:	jmp    0x40c735
  40c7ea:	nop    WORD PTR [rax+rax*1+0x0]
  40c7f0:	mov    ebx,0xd
  40c7f5:	jmp    0x40c735
  40c7fa:	nop    WORD PTR [rax+rax*1+0x0]
  40c800:	mov    edx,ecx
  40c802:	lea    rcx,[rip+0x163d7]        # 0x422be0
  40c809:	xor    ebx,ebx
  40c80b:	call   0x406300
  40c810:	test   eax,eax
  40c812:	jne    0x40c735
  40c818:	lea    rdx,[rip+0x163e4]        # 0x422c03
  40c81f:	lea    rcx,[rip+0x163ea]        # 0x422c10
  40c826:	mov    r8d,0x78
  40c82c:	call   0x41da30
  40c831:	jmp    0x40c735
  40c836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c840:	push   r14
  40c842:	push   r13
  40c844:	push   r12
  40c846:	push   rbp
  40c847:	push   rdi
  40c848:	push   rsi
  40c849:	push   rbx
  40c84a:	lea    rdx,[rip+0x25a2f]        # 0x432280
  40c851:	xor    eax,eax
  40c853:	mov    ecx,0x1c
  40c858:	lea    r14,[rip+0x16421]        # 0x422c80
  40c85f:	lea    r13,[rip+0x1641f]        # 0x422c85
  40c866:	lea    r12,[rip+0x16426]        # 0x422c93
  40c86d:	mov    rdi,rdx
  40c870:	lea    rdx,[rip+0x25b09]        # 0x432380
  40c877:	lea    rbp,[rip+0x1641b]        # 0x422c99
  40c87e:	rep stos QWORD PTR es:[rdi],rax
  40c881:	mov    rdi,rdx
  40c884:	lea    rsi,[rip+0x16421]        # 0x422cac
  40c88b:	lea    rbx,[rip+0x16427]        # 0x422cb9
  40c892:	lea    r11,[rip+0x16425]        # 0x422cbe
  40c899:	lea    r10,[rip+0x1642c]        # 0x422ccc
  40c8a0:	lea    r9,[rip+0x1642f]        # 0x422cd6
  40c8a7:	lea    r8,[rip+0x1643b]        # 0x422ce9
  40c8ae:	lea    rdx,[rip+0x16441]        # 0x422cf6
  40c8b5:	mov    QWORD PTR [rip+0x259c4],r14        # 0x432280
  40c8bc:	mov    QWORD PTR [rip+0x259cd],r13        # 0x432290
  40c8c3:	mov    QWORD PTR [rip+0x259d6],r12        # 0x4322a0
  40c8ca:	mov    QWORD PTR [rip+0x259df],rbp        # 0x4322b0
  40c8d1:	mov    QWORD PTR [rip+0x259f8],rsi        # 0x4322d0
  40c8d8:	mov    cl,0x1e
  40c8da:	mov    QWORD PTR [rip+0x259ff],rbx        # 0x4322e0
  40c8e1:	mov    QWORD PTR [rip+0x25a08],r11        # 0x4322f0
  40c8e8:	rep stos QWORD PTR es:[rdi],rax
  40c8eb:	lea    rdi,[rip+0x163b6]        # 0x422ca8
  40c8f2:	lea    rcx,[rip+0x163f6]        # 0x422cef
  40c8f9:	lea    rax,[rip+0x163fc]        # 0x422cfc
  40c900:	mov    QWORD PTR [rip+0x259f9],r10        # 0x432300
  40c907:	mov    QWORD PTR [rip+0x25a02],r9        # 0x432310
  40c90e:	mov    QWORD PTR [rip+0x259ab],rdi        # 0x4322c0
  40c915:	mov    QWORD PTR [rip+0x25a04],r8        # 0x432320
  40c91c:	mov    QWORD PTR [rip+0x25a0d],rcx        # 0x432330
  40c923:	mov    QWORD PTR [rip+0x25a16],rdx        # 0x432340
  40c92a:	mov    QWORD PTR [rip+0x25a1f],rax        # 0x432350
  40c931:	mov    QWORD PTR [rip+0x25a58],r14        # 0x432390
  40c938:	mov    QWORD PTR [rip+0x25a61],r13        # 0x4323a0
  40c93f:	mov    DWORD PTR [rip+0x2593f],0x1        # 0x432288
  40c949:	mov    DWORD PTR [rip+0x25945],0x1        # 0x432298
  40c953:	mov    DWORD PTR [rip+0x2594b],0x2        # 0x4322a8
  40c95d:	mov    DWORD PTR [rip+0x25951],0x2        # 0x4322b8
  40c967:	mov    DWORD PTR [rip+0x25957],0x4        # 0x4322c8
  40c971:	mov    DWORD PTR [rip+0x2595d],0x4        # 0x4322d8
  40c97b:	mov    DWORD PTR [rip+0x25963],0x4        # 0x4322e8
  40c985:	mov    DWORD PTR [rip+0x25969],0x4        # 0x4322f8
  40c98f:	mov    DWORD PTR [rip+0x2596f],0x8        # 0x432308
  40c999:	mov    DWORD PTR [rip+0x25975],0x8        # 0x432318
  40c9a3:	mov    DWORD PTR [rip+0x2597b],0x4        # 0x432328
  40c9ad:	mov    DWORD PTR [rip+0x25981],0x8        # 0x432338
  40c9b7:	mov    DWORD PTR [rip+0x25987],0x8        # 0x432348
  40c9c1:	mov    DWORD PTR [rip+0x2598d],0x8        # 0x432358
  40c9cb:	mov    DWORD PTR [rip+0x259c3],0x1        # 0x432398
  40c9d5:	mov    DWORD PTR [rip+0x259c9],0x1        # 0x4323a8
  40c9df:	mov    QWORD PTR [rip+0x259ca],r12        # 0x4323b0
  40c9e6:	mov    DWORD PTR [rip+0x259c8],0x2        # 0x4323b8
  40c9f0:	mov    QWORD PTR [rip+0x259c9],rbp        # 0x4323c0
  40c9f7:	mov    DWORD PTR [rip+0x259c7],0x2        # 0x4323c8
  40ca01:	mov    QWORD PTR [rip+0x259c8],rdi        # 0x4323d0
  40ca08:	mov    DWORD PTR [rip+0x259c6],0x4        # 0x4323d8
  40ca12:	mov    QWORD PTR [rip+0x259c7],rsi        # 0x4323e0
  40ca19:	mov    DWORD PTR [rip+0x259c5],0x4        # 0x4323e8
  40ca23:	mov    QWORD PTR [rip+0x259c6],rbx        # 0x4323f0
  40ca2a:	mov    DWORD PTR [rip+0x259c4],0x4        # 0x4323f8
  40ca34:	mov    QWORD PTR [rip+0x259c5],r11        # 0x432400
  40ca3b:	mov    DWORD PTR [rip+0x259c3],0x4        # 0x432408
  40ca45:	mov    QWORD PTR [rip+0x259c4],r10        # 0x432410
  40ca4c:	mov    DWORD PTR [rip+0x259c2],0x8        # 0x432418
  40ca56:	mov    QWORD PTR [rip+0x259c3],r9        # 0x432420
  40ca5d:	mov    DWORD PTR [rip+0x259c1],0x8        # 0x432428
  40ca67:	mov    QWORD PTR [rip+0x259c2],r8        # 0x432430
  40ca6e:	mov    DWORD PTR [rip+0x259c0],0x4        # 0x432438
  40ca78:	mov    QWORD PTR [rip+0x259c1],rcx        # 0x432440
  40ca7f:	mov    DWORD PTR [rip+0x259bf],0x8        # 0x432448
  40ca89:	mov    QWORD PTR [rip+0x259c0],rdx        # 0x432450
  40ca90:	mov    DWORD PTR [rip+0x259be],0x8        # 0x432458
  40ca9a:	mov    QWORD PTR [rip+0x259bf],rax        # 0x432460
  40caa1:	mov    DWORD PTR [rip+0x259bd],0x8        # 0x432468
  40caab:	pop    rbx
  40caac:	pop    rsi
  40caad:	pop    rdi
  40caae:	pop    rbp
  40caaf:	pop    r12
  40cab1:	pop    r13
  40cab3:	pop    r14
  40cab5:	ret    
  40cab6:	nop
  40cab7:	nop
  40cab8:	nop
  40cab9:	nop
  40caba:	nop
  40cabb:	nop
  40cabc:	nop
  40cabd:	nop
  40cabe:	nop
  40cabf:	nop
  40cac0:	push   rdi
  40cac1:	push   rsi
  40cac2:	push   rbx
  40cac3:	sub    rsp,0x20
  40cac7:	test   rcx,rcx
  40caca:	je     0x40cb04
  40cacc:	mov    eax,DWORD PTR [rcx+0x4]
  40cacf:	test   eax,eax
  40cad1:	jle    0x40cb04
  40cad3:	mov    rdi,rdx
  40cad6:	mov    rsi,rcx
  40cad9:	xor    ebx,ebx
  40cadb:	jmp    0x40cae8
  40cadd:	nop    DWORD PTR [rax]
  40cae0:	add    ebx,0x1
  40cae3:	cmp    DWORD PTR [rsi+0x4],ebx
  40cae6:	jle    0x40cb04
  40cae8:	mov    edx,ebx
  40caea:	mov    rcx,rsi
  40caed:	call   0x416670
  40caf2:	cmp    rax,rdi
  40caf5:	jne    0x40cae0
  40caf7:	mov    eax,0x1
  40cafc:	add    rsp,0x20
  40cb00:	pop    rbx
  40cb01:	pop    rsi
  40cb02:	pop    rdi
  40cb03:	ret    
  40cb04:	xor    eax,eax
  40cb06:	add    rsp,0x20
  40cb0a:	pop    rbx
  40cb0b:	pop    rsi
  40cb0c:	pop    rdi
  40cb0d:	ret    
  40cb0e:	xchg   ax,ax
  40cb10:	push   r12
  40cb12:	push   rbp
  40cb13:	push   rdi
  40cb14:	push   rsi
  40cb15:	push   rbx
  40cb16:	sub    rsp,0x20
  40cb1a:	mov    eax,DWORD PTR [rcx+0xc]
  40cb1d:	mov    rbp,rcx
  40cb20:	cmp    eax,0xd
  40cb23:	je     0x40cbc0
  40cb29:	cmp    eax,0x10
  40cb2c:	jne    0x40cbb0
  40cb32:	xor    ebx,ebx
  40cb34:	xor    edi,edi
  40cb36:	mov    r12d,0x1
  40cb3c:	jmp    0x40cb7c
  40cb3e:	xchg   ax,ax
  40cb40:	mov    eax,DWORD PTR [rcx+0x4]
  40cb43:	cmp    ebx,eax
  40cb45:	jge    0x40cb90
  40cb47:	mov    edx,ebx
  40cb49:	call   0x416670
  40cb4e:	cmp    DWORD PTR [rax+0xc],0x6a
  40cb52:	mov    rsi,rax
  40cb55:	je     0x40cb6a
  40cb57:	lea    rdx,[rip+0x161b2]        # 0x422d10
  40cb5e:	lea    rcx,[rip+0x161c7]        # 0x422d2c
  40cb65:	call   0x406300
  40cb6a:	mov    rcx,QWORD PTR [rsi+0x50]
  40cb6e:	call   0x40cb10
  40cb73:	test   eax,eax
  40cb75:	cmovne edi,r12d
  40cb79:	add    ebx,0x1
  40cb7c:	mov    rcx,QWORD PTR [rbp+0x30]
  40cb80:	test   rcx,rcx
  40cb83:	jne    0x40cb40
  40cb85:	xor    eax,eax
  40cb87:	cmp    ebx,eax
  40cb89:	jl     0x40cb47
  40cb8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb90:	test   edi,edi
  40cb92:	mov    eax,edi
  40cb94:	je     0x40cbb2
  40cb96:	mov    DWORD PTR [rbp+0x58],0x1
  40cb9d:	add    rsp,0x20
  40cba1:	pop    rbx
  40cba2:	pop    rsi
  40cba3:	pop    rdi
  40cba4:	pop    rbp
  40cba5:	pop    r12
  40cba7:	ret    
  40cba8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbb0:	xor    eax,eax
  40cbb2:	add    rsp,0x20
  40cbb6:	pop    rbx
  40cbb7:	pop    rsi
  40cbb8:	pop    rdi
  40cbb9:	pop    rbp
  40cbba:	pop    r12
  40cbbc:	ret    
  40cbbd:	nop    DWORD PTR [rax]
  40cbc0:	mov    rcx,QWORD PTR [rcx+0x50]
  40cbc4:	call   0x40cb10
  40cbc9:	mov    eax,0x1
  40cbce:	jmp    0x40cb96
  40cbd0:	push   rsi
  40cbd1:	push   rbx
  40cbd2:	sub    rsp,0x28
  40cbd6:	mov    r8,QWORD PTR [rcx+0x10]
  40cbda:	xor    ebx,ebx
  40cbdc:	mov    rsi,rcx
  40cbdf:	test   r8,r8
  40cbe2:	jne    0x40cbfe
  40cbe4:	jmp    0x40cc33
  40cbe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cbf0:	cmp    edx,0x10
  40cbf3:	je     0x40cc40
  40cbf5:	add    rbx,0x1
  40cbf9:	cmp    r8,rbx
  40cbfc:	jbe    0x40cc33
  40cbfe:	cmp    rbx,r8
  40cc01:	jae    0x40cbf5
  40cc03:	mov    rax,rbx
  40cc06:	shl    rax,0x5
  40cc0a:	add    rax,QWORD PTR [rsi+0x20]
  40cc0e:	je     0x40cbf5
  40cc10:	mov    edx,DWORD PTR [rax]
  40cc12:	cmp    edx,0x20
  40cc15:	jne    0x40cbf0
  40cc17:	mov    ecx,DWORD PTR [rax+0x4]
  40cc1a:	lea    rdx,[rip+0x16127]        # 0x422d48
  40cc21:	add    rbx,0x1
  40cc25:	call   0x40b520
  40cc2a:	mov    r8,QWORD PTR [rsi+0x10]
  40cc2e:	cmp    r8,rbx
  40cc31:	ja     0x40cbfe
  40cc33:	add    rsp,0x28
  40cc37:	pop    rbx
  40cc38:	pop    rsi
  40cc39:	ret    
  40cc3a:	nop    WORD PTR [rax+rax*1+0x0]
  40cc40:	mov    rcx,QWORD PTR [rax+0x8]
  40cc44:	call   0x40cbd0
  40cc49:	mov    r8,QWORD PTR [rsi+0x10]
  40cc4d:	jmp    0x40cbf5
  40cc4f:	nop
  40cc50:	push   rsi
  40cc51:	push   rbx
  40cc52:	sub    rsp,0x28
  40cc56:	mov    rbx,rcx
  40cc59:	jmp    0x40cc7b
  40cc5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc60:	call   0x4057c0
  40cc65:	mov    rcx,rbx
  40cc68:	call   0x40cc50
  40cc6d:	mov    rcx,rbx
  40cc70:	mov    esi,eax
  40cc72:	call   0x405720
  40cc77:	test   esi,esi
  40cc79:	jne    0x40ccaf
  40cc7b:	mov    rcx,rbx
  40cc7e:	call   0x405600
  40cc83:	test   eax,eax
  40cc85:	je     0x40ccc0
  40cc87:	mov    rcx,rbx
  40cc8a:	call   0x405360
  40cc8f:	test   eax,eax
  40cc91:	mov    rcx,rbx
  40cc94:	jne    0x40cc60
  40cc96:	call   0x405760
  40cc9b:	mov    ecx,DWORD PTR [rax]
  40cc9d:	mov    rsi,rax
  40cca0:	call   0x415490
  40cca5:	test   eax,eax
  40cca7:	je     0x40cc7b
  40cca9:	mov    esi,DWORD PTR [rsi]
  40ccab:	test   esi,esi
  40ccad:	je     0x40cc7b
  40ccaf:	mov    eax,esi
  40ccb1:	add    rsp,0x28
  40ccb5:	pop    rbx
  40ccb6:	pop    rsi
  40ccb7:	ret    
  40ccb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ccc0:	xor    esi,esi
  40ccc2:	mov    eax,esi
  40ccc4:	add    rsp,0x28
  40ccc8:	pop    rbx
  40ccc9:	pop    rsi
  40ccca:	ret    
  40cccb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ccd0:	push   r15
  40ccd2:	push   r14
  40ccd4:	push   r13
  40ccd6:	push   r12
  40ccd8:	push   rbp
  40ccd9:	push   rdi
  40ccda:	push   rsi
  40ccdb:	push   rbx
  40ccdc:	sub    rsp,0x28
  40cce0:	movsxd rax,edx
  40cce3:	mov    rbp,rcx
  40cce6:	mov    rdi,r8
  40cce9:	mov    rsi,QWORD PTR [rcx+rax*8+0x8]
  40ccee:	mov    rbx,rax
  40ccf1:	mov    r13d,r9d
  40ccf4:	mov    eax,DWORD PTR [rsi+0x20fc]
  40ccfa:	test   eax,eax
  40ccfc:	je     0x40cdb0
  40cd02:	add    ebx,0x1
  40cd05:	mov    rcx,rbp
  40cd08:	mov    edx,ebx
  40cd0a:	call   0x415e00
  40cd0f:	mov    r15d,DWORD PTR [rbp+0x0]
  40cd13:	mov    r12d,eax
  40cd16:	mov    r8d,eax
  40cd19:	mov    edx,ebx
  40cd1b:	mov    rcx,rbp
  40cd1e:	call   0x415d10
  40cd23:	cmp    r12d,r15d
  40cd26:	mov    r14,rax
  40cd29:	je     0x40cdd0
  40cd2f:	mov    r8,QWORD PTR [rdi+0x10]
  40cd33:	xor    edx,edx
  40cd35:	mov    rax,r8
  40cd38:	div    r14
  40cd3b:	cmp    rdx,0x1
  40cd3f:	sbb    rax,0xffffffffffffffff
  40cd43:	cmp    rax,QWORD PTR [rsi+0x2100]
  40cd4a:	ja     0x40cda3
  40cd4c:	xor    esi,esi
  40cd4e:	test   r8,r8
  40cd51:	je     0x40cd92
  40cd53:	mov    rbx,rsi
  40cd56:	shl    rbx,0x5
  40cd5a:	add    rbx,QWORD PTR [rdi+0x20]
  40cd5e:	cmp    DWORD PTR [rbx],0x10
  40cd61:	je     0x40cd76
  40cd63:	lea    rdx,[rip+0x16041]        # 0x422dab
  40cd6a:	lea    rcx,[rip+0x15fbb]        # 0x422d2c
  40cd71:	call   0x406300
  40cd76:	mov    r8,QWORD PTR [rbx+0x8]
  40cd7a:	mov    r9d,r13d
  40cd7d:	mov    edx,r12d
  40cd80:	mov    rcx,rbp
  40cd83:	add    rsi,0x1
  40cd87:	call   0x40ccd0
  40cd8c:	cmp    QWORD PTR [rdi+0x10],rsi
  40cd90:	ja     0x40cd53
  40cd92:	add    rsp,0x28
  40cd96:	pop    rbx
  40cd97:	pop    rsi
  40cd98:	pop    rdi
  40cd99:	pop    rbp
  40cd9a:	pop    r12
  40cd9c:	pop    r13
  40cd9e:	pop    r14
  40cda0:	pop    r15
  40cda2:	ret    
  40cda3:	mov    QWORD PTR [rsi+0x2100],rax
  40cdaa:	jmp    0x40cd4c
  40cdac:	nop    DWORD PTR [rax+0x0]
  40cdb0:	lea    rdx,[rip+0x15fd9]        # 0x422d90
  40cdb7:	lea    rcx,[rip+0x15f6e]        # 0x422d2c
  40cdbe:	call   0x406300
  40cdc3:	jmp    0x40cd02
  40cdc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cdd0:	test   r13d,r13d
  40cdd3:	je     0x40ce10
  40cdd5:	cmp    QWORD PTR [rdi+0x10],0x0
  40cdda:	je     0x40cd92
  40cddc:	lea    r13,[rip+0x16035]        # 0x422e18
  40cde3:	xor    ebx,ebx
  40cde5:	xor    r12d,r12d
  40cde8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cdf0:	mov    rcx,rbx
  40cdf3:	shl    rcx,0x5
  40cdf7:	add    rcx,QWORD PTR [rdi+0x20]
  40cdfb:	mov    ebp,DWORD PTR [rcx]
  40cdfd:	cmp    ebp,0x10
  40ce00:	ja     0x40ce80
  40ce02:	mov    eax,ebp
  40ce04:	movsxd r9,DWORD PTR [r13+rax*4+0x0]
  40ce09:	add    r9,r13
  40ce0c:	jmp    r9
  40ce0f:	nop
  40ce10:	mov    r12,QWORD PTR [rdi+0x10]
  40ce14:	xor    edx,edx
  40ce16:	mov    rax,r12
  40ce19:	div    r14
  40ce1c:	cmp    rdx,0x1
  40ce20:	sbb    rax,0xffffffffffffffff
  40ce24:	cmp    rax,QWORD PTR [rsi+0x2100]
  40ce2b:	jbe    0x40cd92
  40ce31:	mov    QWORD PTR [rsi+0x2100],rax
  40ce38:	jmp    0x40cd92
  40ce3d:	nop    DWORD PTR [rax]
  40ce40:	mov    rcx,rdi
  40ce43:	call   0x405c00
  40ce48:	lea    rdx,[rip+0x15f79]        # 0x422dc8
  40ce4f:	mov    ecx,eax
  40ce51:	call   0x40b4a0
  40ce56:	add    rbx,0x1
  40ce5a:	cmp    QWORD PTR [rdi+0x10],rbx
  40ce5e:	ja     0x40cdf0
  40ce60:	jmp    0x40ce14
  40ce62:	movsxd rax,DWORD PTR [rcx+0x8]
  40ce66:	add    r12,rax
  40ce69:	jmp    0x40ce56
  40ce6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce70:	add    r12,0x1
  40ce74:	jmp    0x40ce56
  40ce76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ce80:	mov    rcx,rdi
  40ce83:	call   0x405c00
  40ce88:	lea    rdx,[rip+0x15f69]        # 0x422df8
  40ce8f:	mov    r8d,ebp
  40ce92:	mov    ecx,eax
  40ce94:	call   0x40b4a0
  40ce99:	jmp    0x40ce56
  40ce9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cea0:	test   rcx,rcx
  40cea3:	je     0x40cec0
  40cea5:	cmp    QWORD PTR [rcx+0x10],0x0
  40ceaa:	je     0x40cec0
  40ceac:	cmp    DWORD PTR [rdx],0xc
  40ceaf:	je     0x40cec0
  40ceb1:	jmp    0x40cbd0
  40ceb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cec0:	repz ret 
  40cec2:	nop    DWORD PTR [rax+0x0]
  40cec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ced0:	push   r13
  40ced2:	push   r12
  40ced4:	push   rbp
  40ced5:	push   rdi
  40ced6:	push   rsi
  40ced7:	push   rbx
  40ced8:	sub    rsp,0x28
  40cedc:	xor    ebp,ebp
  40cede:	mov    r12,rcx
  40cee1:	mov    rsi,rdx
  40cee4:	call   0x416500
  40cee9:	mov    r13,rax
  40ceec:	jmp    0x40cef3
  40ceee:	xchg   ax,ax
  40cef0:	add    ebp,0x1
  40cef3:	mov    rcx,QWORD PTR [r12]
  40cef7:	test   rcx,rcx
  40cefa:	je     0x40cf60
  40cefc:	mov    eax,DWORD PTR [rcx+0x4]
  40ceff:	cmp    ebp,eax
  40cf01:	jge    0x40cf70
  40cf03:	mov    edx,ebp
  40cf05:	call   0x416670
  40cf0a:	cmp    DWORD PTR [rax+0xc],0xf
  40cf0e:	mov    rdi,rax
  40cf11:	jne    0x40cef0
  40cf13:	xor    ebx,ebx
  40cf15:	jmp    0x40cf3c
  40cf17:	nop    WORD PTR [rax+rax*1+0x0]
  40cf20:	mov    r8d,DWORD PTR [rsi+0x4]
  40cf24:	cmp    ebx,r8d
  40cf27:	jge    0x40cef0
  40cf29:	mov    edx,ebx
  40cf2b:	mov    rcx,rsi
  40cf2e:	call   0x416670
  40cf33:	cmp    rdi,QWORD PTR [rax+0x20]
  40cf37:	je     0x40cf50
  40cf39:	add    ebx,0x1
  40cf3c:	test   rsi,rsi
  40cf3f:	jne    0x40cf20
  40cf41:	xor    r8d,r8d
  40cf44:	jmp    0x40cf24
  40cf46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf50:	mov    rdx,rax
  40cf53:	mov    rcx,r13
  40cf56:	call   0x416750
  40cf5b:	jmp    0x40cf39
  40cf5d:	nop    DWORD PTR [rax]
  40cf60:	xor    eax,eax
  40cf62:	cmp    ebp,eax
  40cf64:	jl     0x40cf03
  40cf66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf70:	test   r13,r13
  40cf73:	je     0x40cf8d
  40cf75:	mov    eax,DWORD PTR [r13+0x4]
  40cf79:	test   eax,eax
  40cf7b:	je     0x40cf8d
  40cf7d:	mov    rax,r13
  40cf80:	add    rsp,0x28
  40cf84:	pop    rbx
  40cf85:	pop    rsi
  40cf86:	pop    rdi
  40cf87:	pop    rbp
  40cf88:	pop    r12
  40cf8a:	pop    r13
  40cf8c:	ret    
  40cf8d:	mov    rcx,r13
  40cf90:	xor    r13d,r13d
  40cf93:	call   0x416530
  40cf98:	mov    rax,r13
  40cf9b:	add    rsp,0x28
  40cf9f:	pop    rbx
  40cfa0:	pop    rsi
  40cfa1:	pop    rdi
  40cfa2:	pop    rbp
  40cfa3:	pop    r12
  40cfa5:	pop    r13
  40cfa7:	ret    
  40cfa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cfb0:	push   rbp
  40cfb1:	push   rdi
  40cfb2:	push   rsi
  40cfb3:	push   rbx
  40cfb4:	sub    rsp,0x28
  40cfb8:	xor    ebx,ebx
  40cfba:	mov    rdi,rcx
  40cfbd:	mov    rbp,rdx
  40cfc0:	jmp    0x40cfe8
  40cfc2:	mov    r8d,DWORD PTR [rcx+0x4]
  40cfc6:	cmp    ebx,r8d
  40cfc9:	jge    0x40d000
  40cfcb:	mov    edx,ebx
  40cfcd:	call   0x416670
  40cfd2:	mov    rcx,QWORD PTR [rax+0x10]
  40cfd6:	mov    rdx,rbp
  40cfd9:	mov    rsi,rax
  40cfdc:	call   0x41db60
  40cfe1:	test   eax,eax
  40cfe3:	je     0x40d010
  40cfe5:	add    ebx,0x1
  40cfe8:	mov    rcx,QWORD PTR [rdi]
  40cfeb:	test   rcx,rcx
  40cfee:	jne    0x40cfc2
  40cff0:	xor    r8d,r8d
  40cff3:	cmp    ebx,r8d
  40cff6:	jl     0x40cfcb
  40cff8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d000:	xor    eax,eax
  40d002:	add    rsp,0x28
  40d006:	pop    rbx
  40d007:	pop    rsi
  40d008:	pop    rdi
  40d009:	pop    rbp
  40d00a:	ret    
  40d00b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d010:	mov    rax,rsi
  40d013:	add    rsp,0x28
  40d017:	pop    rbx
  40d018:	pop    rsi
  40d019:	pop    rdi
  40d01a:	pop    rbp
  40d01b:	ret    
  40d01c:	nop    DWORD PTR [rax+0x0]
  40d020:	push   rdi
  40d021:	push   rsi
  40d022:	push   rbx
  40d023:	sub    rsp,0x20
  40d027:	mov    rbx,rcx
  40d02a:	mov    rcx,QWORD PTR [rcx]
  40d02d:	mov    rsi,rdx
  40d030:	test   rcx,rcx
  40d033:	je     0x40d0d0
  40d039:	cmp    QWORD PTR [rcx+0x10],0x0
  40d03e:	je     0x40d0a2
  40d040:	call   0x405450
  40d045:	mov    rdi,rax
  40d048:	mov    rcx,rax
  40d04b:	call   0x40cc50
  40d050:	mov    rcx,rdi
  40d053:	mov    ebx,eax
  40d055:	call   0x405410
  40d05a:	cmp    ebx,0xc
  40d05d:	je     0x40d0a2
  40d05f:	mov    rax,QWORD PTR [rip+0x1e8ba]        # 0x42b920
  40d066:	mov    eax,DWORD PTR [rax]
  40d068:	test   eax,eax
  40d06a:	je     0x40d090
  40d06c:	lea    ecx,[rbx-0x7]
  40d06f:	cmp    ecx,0x8
  40d072:	ja     0x40d090
  40d074:	mov    eax,0x1
  40d079:	shl    rax,cl
  40d07c:	test   eax,0x19e
  40d081:	jne    0x40d0c0
  40d083:	test   al,0x1
  40d085:	mov    eax,0x3
  40d08a:	cmovne ebx,eax
  40d08d:	nop    DWORD PTR [rax]
  40d090:	mov    ecx,ebx
  40d092:	call   0x411ac0
  40d097:	mov    QWORD PTR [rsi],rax
  40d09a:	add    rsp,0x20
  40d09e:	pop    rbx
  40d09f:	pop    rsi
  40d0a0:	pop    rdi
  40d0a1:	ret    
  40d0a2:	mov    ecx,0x2
  40d0a7:	call   0x411ac0
  40d0ac:	mov    QWORD PTR [rsi],rax
  40d0af:	add    rsp,0x20
  40d0b3:	pop    rbx
  40d0b4:	pop    rsi
  40d0b5:	pop    rdi
  40d0b6:	ret    
  40d0b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d0c0:	mov    ebx,0x4
  40d0c5:	jmp    0x40d090
  40d0c7:	nop    WORD PTR [rax+rax*1+0x0]
  40d0d0:	lea    rcx,[rip+0x15c55]        # 0x422d2c
  40d0d7:	lea    rdx,[rip+0x15d7e]        # 0x422e5c
  40d0de:	call   0x406300
  40d0e3:	mov    rcx,QWORD PTR [rbx]
  40d0e6:	jmp    0x40d039
  40d0eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0f0:	mov    eax,DWORD PTR [rcx+0x212c]
  40d0f6:	test   eax,eax
  40d0f8:	jne    0x40d100
  40d0fa:	jmp    0x40d110
  40d0fc:	nop    DWORD PTR [rax+0x0]
  40d100:	repz ret 
  40d102:	nop    DWORD PTR [rax+0x0]
  40d106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d110:	push   rbp
  40d111:	push   rdi
  40d112:	push   rsi
  40d113:	push   rbx
  40d114:	sub    rsp,0x28
  40d118:	mov    edx,DWORD PTR [rcx+0xc]
  40d11b:	mov    rbx,rcx
  40d11e:	mov    DWORD PTR [rcx+0x212c],0x1
  40d128:	cmp    edx,0xf
  40d12b:	je     0x40d2e3
  40d131:	jle    0x40d180
  40d133:	cmp    edx,0x6a
  40d136:	je     0x40d1e0
  40d13c:	cmp    edx,0x6c
  40d13f:	je     0x40d1a9
  40d141:	cmp    edx,0x10
  40d144:	je     0x40d230
  40d14a:	lea    rcx,[rip+0x15d1f]        # 0x422e70
  40d151:	call   0x406300
  40d156:	test   eax,eax
  40d158:	jne    0x40d195
  40d15a:	lea    rdx,[rip+0x15d36]        # 0x422e97
  40d161:	lea    rcx,[rip+0x15d40]        # 0x422ea8
  40d168:	mov    r8d,0x297
  40d16e:	add    rsp,0x28
  40d172:	pop    rbx
  40d173:	pop    rsi
  40d174:	pop    rdi
  40d175:	pop    rbp
  40d176:	jmp    0x41da30
  40d17b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d180:	cmp    edx,0xd
  40d183:	je     0x40d1a0
  40d185:	cmp    edx,0xe
  40d188:	jne    0x40d14a
  40d18a:	mov    QWORD PTR [rbx+0x2098],0x1
  40d195:	add    rsp,0x28
  40d199:	pop    rbx
  40d19a:	pop    rsi
  40d19b:	pop    rdi
  40d19c:	pop    rbp
  40d19d:	ret    
  40d19e:	xchg   ax,ax
  40d1a0:	mov    rcx,QWORD PTR [rcx+0x50]
  40d1a4:	call   0x40d0f0
  40d1a9:	mov    ecx,DWORD PTR [rbx+0x5c]
  40d1ac:	call   0x415330
  40d1b1:	mov    ecx,DWORD PTR [rbx+0x5c]
  40d1b4:	cdqe   
  40d1b6:	mov    QWORD PTR [rbx+0x2090],rax
  40d1bd:	call   0x40c710
  40d1c2:	mov    QWORD PTR [rbx+0x2098],0x1
  40d1cd:	mov    DWORD PTR [rbx+0x64],eax
  40d1d0:	add    rsp,0x28
  40d1d4:	pop    rbx
  40d1d5:	pop    rsi
  40d1d6:	pop    rdi
  40d1d7:	pop    rbp
  40d1d8:	ret    
  40d1d9:	nop    DWORD PTR [rax+0x0]
  40d1e0:	mov    eax,DWORD PTR [rcx+0x88]
  40d1e6:	test   eax,eax
  40d1e8:	jle    0x40d320
  40d1ee:	mov    rcx,QWORD PTR [rcx+0x50]
  40d1f2:	call   0x40d0f0
  40d1f7:	lea    rcx,[rbx+0x88]
  40d1fe:	xor    edx,edx
  40d200:	xor    r8d,r8d
  40d203:	call   0x415d10
  40d208:	mov    rdx,QWORD PTR [rbx+0x50]
  40d20c:	mov    eax,eax
  40d20e:	imul   rax,QWORD PTR [rdx+0x2090]
  40d216:	mov    QWORD PTR [rbx+0x2090],rax
  40d21d:	mov    eax,DWORD PTR [rdx+0x64]
  40d220:	mov    DWORD PTR [rbx+0x64],eax
  40d223:	jmp    0x40d18a
  40d228:	nop    DWORD PTR [rax+rax*1+0x0]
  40d230:	xor    esi,esi
  40d232:	jmp    0x40d273
  40d234:	mov    eax,DWORD PTR [rcx+0x4]
  40d237:	cmp    esi,eax
  40d239:	jge    0x40d282
  40d23b:	mov    edx,esi
  40d23d:	call   0x416670
  40d242:	cmp    DWORD PTR [rax+0xc],0x6a
  40d246:	mov    rdi,rax
  40d249:	je     0x40d25e
  40d24b:	lea    rdx,[rip+0x15abe]        # 0x422d10
  40d252:	lea    rcx,[rip+0x15ad3]        # 0x422d2c
  40d259:	call   0x406300
  40d25e:	mov    rcx,rdi
  40d261:	call   0x40d0f0
  40d266:	test   esi,esi
  40d268:	jne    0x40d270
  40d26a:	mov    eax,DWORD PTR [rdi+0x64]
  40d26d:	mov    DWORD PTR [rbx+0x64],eax
  40d270:	add    esi,0x1
  40d273:	mov    rcx,QWORD PTR [rbx+0x30]
  40d277:	test   rcx,rcx
  40d27a:	jne    0x40d234
  40d27c:	xor    eax,eax
  40d27e:	cmp    esi,eax
  40d280:	jl     0x40d23b
  40d282:	xor    esi,esi
  40d284:	xor    edi,edi
  40d286:	jmp    0x40d2bd
  40d288:	nop    DWORD PTR [rax+rax*1+0x0]
  40d290:	mov    eax,DWORD PTR [rcx+0x4]
  40d293:	cmp    edi,eax
  40d295:	jge    0x40d2d0
  40d297:	mov    edx,edi
  40d299:	add    edi,0x1
  40d29c:	call   0x416670
  40d2a1:	mov    edx,DWORD PTR [rax+0x64]
  40d2a4:	mov    ecx,esi
  40d2a6:	mov    rbp,rax
  40d2a9:	call   0x415af0
  40d2ae:	add    esi,eax
  40d2b0:	mov    rcx,QWORD PTR [rbx+0x30]
  40d2b4:	mov    DWORD PTR [rbp+0x60],esi
  40d2b7:	add    esi,DWORD PTR [rbp+0x2090]
  40d2bd:	test   rcx,rcx
  40d2c0:	jne    0x40d290
  40d2c2:	xor    eax,eax
  40d2c4:	cmp    edi,eax
  40d2c6:	jl     0x40d297
  40d2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2d0:	movsxd rsi,esi
  40d2d3:	mov    QWORD PTR [rbx+0x2090],rsi
  40d2da:	add    rsp,0x28
  40d2de:	pop    rbx
  40d2df:	pop    rsi
  40d2e0:	pop    rdi
  40d2e1:	pop    rbp
  40d2e2:	ret    
  40d2e3:	mov    rcx,QWORD PTR [rcx+0x50]
  40d2e7:	call   0x40d0f0
  40d2ec:	mov    rax,QWORD PTR [rbx+0x50]
  40d2f0:	mov    rdx,QWORD PTR [rax+0x2090]
  40d2f7:	mov    eax,DWORD PTR [rax+0x64]
  40d2fa:	mov    QWORD PTR [rbx+0x2098],0x1
  40d305:	mov    QWORD PTR [rbx+0x2090],rdx
  40d30c:	mov    DWORD PTR [rbx+0x64],eax
  40d30f:	add    rsp,0x28
  40d313:	pop    rbx
  40d314:	pop    rsi
  40d315:	pop    rdi
  40d316:	pop    rbp
  40d317:	ret    
  40d318:	nop    DWORD PTR [rax+rax*1+0x0]
  40d320:	mov    rax,QWORD PTR [rcx+0x50]
  40d324:	mov    rdx,QWORD PTR [rax+0x2090]
  40d32b:	mov    QWORD PTR [rcx+0x2090],rdx
  40d332:	mov    edx,DWORD PTR [rax+0x64]
  40d335:	mov    rax,QWORD PTR [rax+0x2098]
  40d33c:	mov    DWORD PTR [rcx+0x64],edx
  40d33f:	mov    QWORD PTR [rcx+0x2098],rax
  40d346:	jmp    0x40d195
  40d34b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d350:	test   rcx,rcx
  40d353:	je     0x40d35c
  40d355:	mov    eax,DWORD PTR [rcx+0x4]
  40d358:	test   eax,eax
  40d35a:	jne    0x40d370
  40d35c:	mov    rax,QWORD PTR [rip+0x1e55d]        # 0x42b8c0
  40d363:	mov    rax,QWORD PTR [rax]
  40d366:	ret    
  40d367:	nop    WORD PTR [rax+rax*1+0x0]
  40d370:	jmp    0x4167d0
  40d375:	nop
  40d376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d380:	push   r15
  40d382:	push   r14
  40d384:	push   r13
  40d386:	push   r12
  40d388:	push   rbp
  40d389:	push   rdi
  40d38a:	push   rsi
  40d38b:	push   rbx
  40d38c:	sub    rsp,0x48
  40d390:	cmp    QWORD PTR [rcx],0x0
  40d394:	mov    esi,0x1
  40d399:	mov    rdi,QWORD PTR [rip+0x1e570]        # 0x42b910
  40d3a0:	mov    r12,rcx
  40d3a3:	lea    rbx,[rdx+0x8]
  40d3a7:	jne    0x40d3c6
  40d3a9:	jmp    0x40d3f0
  40d3ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d3b0:	cmp    eax,0x69
  40d3b3:	je     0x40d401
  40d3b5:	add    rbx,0x20
  40d3b9:	cmp    QWORD PTR [r12],rsi
  40d3bd:	lea    rax,[rsi+0x1]
  40d3c1:	jbe    0x40d3f0
  40d3c3:	mov    rsi,rax
  40d3c6:	mov    eax,DWORD PTR [rbx-0x8]
  40d3c9:	cmp    eax,0x10
  40d3cc:	jne    0x40d3b0
  40d3ce:	mov    rcx,QWORD PTR [rbx]
  40d3d1:	add    rbx,0x20
  40d3d5:	mov    rdx,QWORD PTR [rcx+0x20]
  40d3d9:	add    rcx,0x18
  40d3dd:	call   0x40d380
  40d3e2:	cmp    QWORD PTR [r12],rsi
  40d3e6:	lea    rax,[rsi+0x1]
  40d3ea:	ja     0x40d3c3
  40d3ec:	nop    DWORD PTR [rax+0x0]
  40d3f0:	add    rsp,0x48
  40d3f4:	pop    rbx
  40d3f5:	pop    rsi
  40d3f6:	pop    rdi
  40d3f7:	pop    rbp
  40d3f8:	pop    r12
  40d3fa:	pop    r13
  40d3fc:	pop    r14
  40d3fe:	pop    r15
  40d400:	ret    
  40d401:	mov    r13,QWORD PTR [rbx]
  40d404:	xor    r15d,r15d
  40d407:	mov    rax,QWORD PTR [r13+0x10]
  40d40b:	mov    QWORD PTR [rsp+0x20],rax
  40d410:	call   0x416500
  40d415:	mov    rbp,rax
  40d418:	jmp    0x40d441
  40d41a:	nop    WORD PTR [rax+rax*1+0x0]
  40d420:	mov    eax,DWORD PTR [rcx+0x4]
  40d423:	cmp    r15d,eax
  40d426:	jge    0x40d450
  40d428:	mov    edx,r15d
  40d42b:	call   0x416670
  40d430:	cmp    DWORD PTR [rax+0xc],0xf
  40d434:	mov    r14,rax
  40d437:	je     0x40d4e0
  40d43d:	add    r15d,0x1
  40d441:	mov    rcx,QWORD PTR [rdi]
  40d444:	test   rcx,rcx
  40d447:	jne    0x40d420
  40d449:	xor    eax,eax
  40d44b:	cmp    r15d,eax
  40d44e:	jl     0x40d428
  40d450:	test   rbp,rbp
  40d453:	je     0x40d684
  40d459:	mov    eax,DWORD PTR [rbp+0x4]
  40d45c:	test   eax,eax
  40d45e:	je     0x40d684
  40d464:	cmp    eax,0x1
  40d467:	je     0x40d656
  40d46d:	mov    eax,DWORD PTR [r13+0x38]
  40d471:	test   eax,eax
  40d473:	je     0x40d580
  40d479:	mov    rcx,QWORD PTR [r13+0x40]
  40d47d:	test   rcx,rcx
  40d480:	je     0x40d580
  40d486:	call   0x40d350
  40d48b:	test   rax,rax
  40d48e:	je     0x40d6c4
  40d494:	lea    rcx,[rax+0x30]
  40d498:	mov    rdx,rbp
  40d49b:	call   0x40ced0
  40d4a0:	test   rax,rax
  40d4a3:	mov    r14,rax
  40d4a6:	je     0x40d6a4
  40d4ac:	mov    eax,DWORD PTR [rax+0x4]
  40d4af:	test   eax,eax
  40d4b1:	je     0x40d6a4
  40d4b7:	cmp    eax,0x1
  40d4ba:	jne    0x40d665
  40d4c0:	mov    rcx,r14
  40d4c3:	xor    edx,edx
  40d4c5:	call   0x416670
  40d4ca:	mov    rcx,r14
  40d4cd:	mov    QWORD PTR [rbx],rax
  40d4d0:	call   0x416530
  40d4d5:	jmp    0x40d618
  40d4da:	nop    WORD PTR [rax+rax*1+0x0]
  40d4e0:	lea    rax,[rax+0x30]
  40d4e4:	mov    rdx,QWORD PTR [rsp+0x20]
  40d4e9:	mov    rcx,rax
  40d4ec:	mov    QWORD PTR [rsp+0x38],rax
  40d4f1:	call   0x40cfb0
  40d4f6:	test   rax,rax
  40d4f9:	je     0x40d506
  40d4fb:	mov    rdx,rax
  40d4fe:	mov    rcx,rbp
  40d501:	call   0x416750
  40d506:	mov    rdx,QWORD PTR [r14+0x10]
  40d50a:	mov    rcx,rdx
  40d50d:	mov    QWORD PTR [rsp+0x30],rdx
  40d512:	call   0x41db50
  40d517:	mov    rdx,QWORD PTR [rsp+0x30]
  40d51c:	mov    rcx,QWORD PTR [rsp+0x20]
  40d521:	movsxd r10,eax
  40d524:	mov    r8,r10
  40d527:	mov    QWORD PTR [rsp+0x28],r10
  40d52c:	call   0x41db40
  40d531:	test   eax,eax
  40d533:	mov    r10,QWORD PTR [rsp+0x28]
  40d538:	jne    0x40d43d
  40d53e:	mov    rax,QWORD PTR [rsp+0x20]
  40d543:	cmp    BYTE PTR [rax+r10*1],0x2e
  40d548:	jne    0x40d43d
  40d54e:	mov    rcx,QWORD PTR [rsp+0x38]
  40d553:	lea    rdx,[rax+r10*1+0x1]
  40d558:	call   0x40cfb0
  40d55d:	test   rax,rax
  40d560:	je     0x40d43d
  40d566:	mov    rdx,rax
  40d569:	mov    rcx,rbp
  40d56c:	call   0x416750
  40d571:	jmp    0x40d43d
  40d576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d580:	mov    r15,QWORD PTR [r13+0x20]
  40d584:	test   r15,r15
  40d587:	je     0x40d63c
  40d58d:	cmp    DWORD PTR [r15+0x8],0x64
  40d592:	je     0x40d5ad
  40d594:	lea    rdx,[rip+0x158fc]        # 0x422e97
  40d59b:	lea    rcx,[rip+0x159ee]        # 0x422f90
  40d5a2:	mov    r8d,0x1f1
  40d5a8:	call   0x41da30
  40d5ad:	lea    rax,[r15+0x30]
  40d5b1:	mov    QWORD PTR [rsp+0x20],rax
  40d5b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d5c0:	mov    rcx,QWORD PTR [rsp+0x20]
  40d5c5:	mov    rdx,rbp
  40d5c8:	call   0x40ced0
  40d5cd:	test   rax,rax
  40d5d0:	mov    r14,rax
  40d5d3:	je     0x40d630
  40d5d5:	mov    eax,DWORD PTR [rax+0x4]
  40d5d8:	test   eax,eax
  40d5da:	je     0x40d625
  40d5dc:	cmp    eax,0x1
  40d5df:	je     0x40d5fb
  40d5e1:	mov    rcx,r13
  40d5e4:	call   0x4159d0
  40d5e9:	mov    ecx,DWORD PTR [rbx-0x4]
  40d5ec:	lea    rdx,[rip+0x15975]        # 0x422f68
  40d5f3:	mov    r8,rax
  40d5f6:	call   0x40b520
  40d5fb:	xor    edx,edx
  40d5fd:	mov    rcx,r14
  40d600:	call   0x416670
  40d605:	mov    rcx,r14
  40d608:	mov    r15,rax
  40d60b:	call   0x416530
  40d610:	test   r15,r15
  40d613:	je     0x40d5c0
  40d615:	mov    QWORD PTR [rbx],r15
  40d618:	mov    rcx,rbp
  40d61b:	call   0x416530
  40d620:	jmp    0x40d3b5
  40d625:	mov    rcx,r14
  40d628:	call   0x416530
  40d62d:	jmp    0x40d5c0
  40d62f:	nop
  40d630:	xor    ecx,ecx
  40d632:	call   0x416530
  40d637:	jmp    0x40d5c0
  40d63c:	mov    rcx,r13
  40d63f:	call   0x4159d0
  40d644:	mov    ecx,DWORD PTR [rbx-0x4]
  40d647:	lea    rdx,[rip+0x1591a]        # 0x422f68
  40d64e:	mov    r8,rax
  40d651:	call   0x40b520
  40d656:	xor    edx,edx
  40d658:	mov    rcx,rbp
  40d65b:	call   0x416670
  40d660:	mov    QWORD PTR [rbx],rax
  40d663:	jmp    0x40d618
  40d665:	mov    rcx,r13
  40d668:	call   0x4159d0
  40d66d:	mov    ecx,DWORD PTR [rbx-0x4]
  40d670:	lea    rdx,[rip+0x158f1]        # 0x422f68
  40d677:	mov    r8,rax
  40d67a:	call   0x40b520
  40d67f:	jmp    0x40d4c0
  40d684:	mov    rcx,rbp
  40d687:	call   0x416530
  40d68c:	mov    ecx,DWORD PTR [rbx-0x4]
  40d68f:	mov    r8,QWORD PTR [r13+0x10]
  40d693:	lea    rdx,[rip+0x1584e]        # 0x422ee8
  40d69a:	call   0x40b520
  40d69f:	jmp    0x40d3b5
  40d6a4:	mov    ecx,DWORD PTR [rbx-0x4]
  40d6a7:	mov    r8,QWORD PTR [r13+0x10]
  40d6ab:	lea    rdx,[rip+0x15886]        # 0x422f38
  40d6b2:	call   0x40b520
  40d6b7:	mov    rcx,r14
  40d6ba:	call   0x416530
  40d6bf:	jmp    0x40d618
  40d6c4:	mov    rcx,r13
  40d6c7:	call   0x4159d0
  40d6cc:	mov    ecx,DWORD PTR [rbx-0x4]
  40d6cf:	lea    rdx,[rip+0x15840]        # 0x422f16
  40d6d6:	mov    r8,rax
  40d6d9:	call   0x40b520
  40d6de:	jmp    0x40d618
  40d6e3:	nop    DWORD PTR [rax]
  40d6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d6f0:	push   r15
  40d6f2:	push   r14
  40d6f4:	push   r13
  40d6f6:	push   r12
  40d6f8:	push   rbp
  40d6f9:	push   rdi
  40d6fa:	push   rsi
  40d6fb:	push   rbx
  40d6fc:	sub    rsp,0x58
  40d700:	xor    ebx,ebx
  40d702:	jmp    0x40d71d
  40d704:	mov    eax,DWORD PTR [rcx+0x4]
  40d707:	cmp    ebx,eax
  40d709:	jge    0x40d732
  40d70b:	mov    edx,ebx
  40d70d:	add    ebx,0x1
  40d710:	call   0x416670
  40d715:	mov    rcx,rax
  40d718:	call   0x40b820
  40d71d:	mov    rax,QWORD PTR [rip+0x1e02c]        # 0x42b750
  40d724:	mov    rcx,QWORD PTR [rax]
  40d727:	test   rcx,rcx
  40d72a:	jne    0x40d704
  40d72c:	xor    eax,eax
  40d72e:	cmp    ebx,eax
  40d730:	jl     0x40d70b
  40d732:	xor    ebx,ebx
  40d734:	mov    r13,QWORD PTR [rip+0x1df95]        # 0x42b6d0
  40d73b:	jmp    0x40d756
  40d73d:	mov    eax,DWORD PTR [rcx+0x4]
  40d740:	cmp    ebx,eax
  40d742:	jge    0x40d765
  40d744:	mov    edx,ebx
  40d746:	add    ebx,0x1
  40d749:	call   0x416670
  40d74e:	mov    rcx,rax
  40d751:	call   0x40b820
  40d756:	mov    rcx,QWORD PTR [r13+0x0]
  40d75a:	test   rcx,rcx
  40d75d:	jne    0x40d73d
  40d75f:	xor    eax,eax
  40d761:	cmp    ebx,eax
  40d763:	jl     0x40d744
  40d765:	xor    esi,esi
  40d767:	mov    rbx,QWORD PTR [rip+0x1e1a2]        # 0x42b910
  40d76e:	jmp    0x40d789
  40d770:	mov    eax,DWORD PTR [rcx+0x4]
  40d773:	cmp    esi,eax
  40d775:	jge    0x40d797
  40d777:	mov    edx,esi
  40d779:	add    esi,0x1
  40d77c:	call   0x416670
  40d781:	mov    rcx,rax
  40d784:	call   0x40b820
  40d789:	mov    rcx,QWORD PTR [rbx]
  40d78c:	test   rcx,rcx
  40d78f:	jne    0x40d770
  40d791:	xor    eax,eax
  40d793:	cmp    esi,eax
  40d795:	jl     0x40d777
  40d797:	xor    esi,esi
  40d799:	mov    rbp,QWORD PTR [rip+0x1e190]        # 0x42b930
  40d7a0:	jmp    0x40d7bb
  40d7a2:	mov    eax,DWORD PTR [rcx+0x4]
  40d7a5:	cmp    esi,eax
  40d7a7:	jge    0x40d7ca
  40d7a9:	mov    edx,esi
  40d7ab:	add    esi,0x1
  40d7ae:	call   0x416670
  40d7b3:	mov    rcx,rax
  40d7b6:	call   0x40b820
  40d7bb:	mov    rcx,QWORD PTR [rbp+0x0]
  40d7bf:	test   rcx,rcx
  40d7c2:	jne    0x40d7a2
  40d7c4:	xor    eax,eax
  40d7c6:	cmp    esi,eax
  40d7c8:	jl     0x40d7a9
  40d7ca:	xor    edi,edi
  40d7cc:	jmp    0x40d7d3
  40d7ce:	xchg   ax,ax
  40d7d0:	add    edi,0x1
  40d7d3:	mov    rcx,QWORD PTR [rbx]
  40d7d6:	test   rcx,rcx
  40d7d9:	je     0x40d827
  40d7db:	mov    eax,DWORD PTR [rcx+0x4]
  40d7de:	cmp    edi,eax
  40d7e0:	jge    0x40d82d
  40d7e2:	mov    edx,edi
  40d7e4:	call   0x416670
  40d7e9:	cmp    DWORD PTR [rax+0xc],0xf
  40d7ed:	mov    r12,rax
  40d7f0:	jne    0x40d7d0
  40d7f2:	xor    esi,esi
  40d7f4:	jmp    0x40d819
  40d7f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d800:	mov    eax,DWORD PTR [rcx+0x4]
  40d803:	cmp    esi,eax
  40d805:	jge    0x40d7d0
  40d807:	mov    edx,esi
  40d809:	add    esi,0x1
  40d80c:	call   0x416670
  40d811:	mov    rcx,rax
  40d814:	call   0x40b930
  40d819:	mov    rcx,QWORD PTR [r12+0x30]
  40d81e:	test   rcx,rcx
  40d821:	jne    0x40d800
  40d823:	xor    eax,eax
  40d825:	jmp    0x40d803
  40d827:	xor    eax,eax
  40d829:	cmp    edi,eax
  40d82b:	jl     0x40d7e2
  40d82d:	xor    edi,edi
  40d82f:	jmp    0x40d837
  40d831:	mov    rcx,QWORD PTR [rbx]
  40d834:	add    edi,0x1
  40d837:	test   rcx,rcx
  40d83a:	je     0x40d887
  40d83c:	mov    eax,DWORD PTR [rcx+0x4]
  40d83f:	cmp    edi,eax
  40d841:	jge    0x40d88d
  40d843:	mov    edx,edi
  40d845:	call   0x416670
  40d84a:	cmp    DWORD PTR [rax+0xc],0x10
  40d84e:	mov    r12,rax
  40d851:	jne    0x40d831
  40d853:	xor    esi,esi
  40d855:	jmp    0x40d879
  40d857:	nop    WORD PTR [rax+rax*1+0x0]
  40d860:	mov    eax,DWORD PTR [rcx+0x4]
  40d863:	cmp    esi,eax
  40d865:	jge    0x40d831
  40d867:	mov    edx,esi
  40d869:	add    esi,0x1
  40d86c:	call   0x416670
  40d871:	mov    rcx,rax
  40d874:	call   0x40b930
  40d879:	mov    rcx,QWORD PTR [r12+0x30]
  40d87e:	test   rcx,rcx
  40d881:	jne    0x40d860
  40d883:	xor    eax,eax
  40d885:	jmp    0x40d863
  40d887:	xor    eax,eax
  40d889:	cmp    edi,eax
  40d88b:	jl     0x40d843
  40d88d:	xor    esi,esi
  40d88f:	jmp    0x40d8aa
  40d891:	mov    eax,DWORD PTR [rcx+0x4]
  40d894:	cmp    esi,eax
  40d896:	jge    0x40d8bf
  40d898:	mov    edx,esi
  40d89a:	add    esi,0x1
  40d89d:	call   0x416670
  40d8a2:	mov    rcx,rax
  40d8a5:	call   0x40ba00
  40d8aa:	mov    rax,QWORD PTR [rip+0x1de8f]        # 0x42b740
  40d8b1:	mov    rcx,QWORD PTR [rax]
  40d8b4:	test   rcx,rcx
  40d8b7:	jne    0x40d891
  40d8b9:	xor    eax,eax
  40d8bb:	cmp    esi,eax
  40d8bd:	jl     0x40d898
  40d8bf:	xor    edi,edi
  40d8c1:	mov    rsi,QWORD PTR [rip+0x1dd78]        # 0x42b640
  40d8c8:	jmp    0x40d8e3
  40d8ca:	mov    eax,DWORD PTR [rcx+0x4]
  40d8cd:	cmp    edi,eax
  40d8cf:	jge    0x40d8f1
  40d8d1:	mov    edx,edi
  40d8d3:	add    edi,0x1
  40d8d6:	call   0x416670
  40d8db:	mov    rcx,rax
  40d8de:	call   0x40ba00
  40d8e3:	mov    rcx,QWORD PTR [rsi]
  40d8e6:	test   rcx,rcx
  40d8e9:	jne    0x40d8ca
  40d8eb:	xor    eax,eax
  40d8ed:	cmp    edi,eax
  40d8ef:	jl     0x40d8d1
  40d8f1:	call   0x416500
  40d8f6:	xor    r14d,r14d
  40d8f9:	mov    QWORD PTR [rsp+0x28],rax
  40d8fe:	jmp    0x40d924
  40d900:	cmp    eax,0xe
  40d903:	jge    0x40dace
  40d909:	cmp    eax,0xd
  40d90c:	jne    0x40d920
  40d90e:	mov    rax,QWORD PTR [rdi+0x50]
  40d912:	cmp    DWORD PTR [rax+0xc],0x6c
  40d916:	je     0x40dace
  40d91c:	nop    DWORD PTR [rax+0x0]
  40d920:	add    r14d,0x1
  40d924:	mov    rcx,QWORD PTR [rbx]
  40d927:	test   rcx,rcx
  40d92a:	je     0x40db3b
  40d930:	mov    eax,DWORD PTR [rcx+0x4]
  40d933:	cmp    r14d,eax
  40d936:	jge    0x40d971
  40d938:	mov    edx,r14d
  40d93b:	call   0x416670
  40d940:	mov    rdi,rax
  40d943:	mov    eax,DWORD PTR [rax+0xc]
  40d946:	cmp    eax,0xf
  40d949:	jle    0x40d900
  40d94b:	cmp    eax,0x10
  40d94e:	je     0x40daea
  40d954:	cmp    eax,0x6c
  40d957:	jne    0x40d920
  40d959:	mov    DWORD PTR [rdi+0x212c],0x1
  40d963:	jmp    0x40d920
  40d965:	mov    eax,DWORD PTR [rsp+0x20]
  40d969:	test   eax,eax
  40d96b:	je     0x40da76
  40d971:	mov    DWORD PTR [rsp+0x20],0x0
  40d979:	xor    edi,edi
  40d97b:	jmp    0x40d9ba
  40d97d:	cmp    eax,0xe
  40d980:	jge    0x40d9ee
  40d982:	cmp    eax,0xd
  40d985:	jne    0x40d9b4
  40d987:	mov    rax,QWORD PTR [r12+0x50]
  40d98c:	mov    eax,DWORD PTR [rax+0x212c]
  40d992:	test   eax,eax
  40d994:	je     0x40d9b4
  40d996:	mov    rcx,QWORD PTR [rsp+0x28]
  40d99b:	mov    rdx,r12
  40d99e:	call   0x416750
  40d9a3:	add    DWORD PTR [rsp+0x20],0x1
  40d9a8:	mov    DWORD PTR [r12+0x212c],0x1
  40d9b4:	mov    rcx,QWORD PTR [rbx]
  40d9b7:	add    edi,0x1
  40d9ba:	test   rcx,rcx
  40d9bd:	je     0x40da19
  40d9bf:	mov    eax,DWORD PTR [rcx+0x4]
  40d9c2:	cmp    edi,eax
  40d9c4:	jge    0x40d965
  40d9c6:	mov    edx,edi
  40d9c8:	call   0x416670
  40d9cd:	mov    r12,rax
  40d9d0:	mov    eax,DWORD PTR [rax+0x212c]
  40d9d6:	test   eax,eax
  40d9d8:	jne    0x40d9b4
  40d9da:	mov    eax,DWORD PTR [r12+0xc]
  40d9df:	cmp    eax,0xf
  40d9e2:	jle    0x40d97d
  40d9e4:	cmp    eax,0x10
  40d9e7:	je     0x40da1d
  40d9e9:	cmp    eax,0x6c
  40d9ec:	jne    0x40d9b4
  40d9ee:	lea    rcx,[rip+0x155cb]        # 0x422fc0
  40d9f5:	call   0x406300
  40d9fa:	test   eax,eax
  40d9fc:	jne    0x40d9b4
  40d9fe:	lea    rdx,[rip+0x15492]        # 0x422e97
  40da05:	lea    rcx,[rip+0x155c4]        # 0x422fd0
  40da0c:	mov    r8d,0x133
  40da12:	call   0x41da30
  40da17:	jmp    0x40d9b4
  40da19:	xor    eax,eax
  40da1b:	jmp    0x40d9c2
  40da1d:	xor    r15d,r15d
  40da20:	jmp    0x40da68
  40da22:	mov    eax,DWORD PTR [rcx+0x4]
  40da25:	cmp    r15d,eax
  40da28:	jge    0x40d996
  40da2e:	mov    edx,r15d
  40da31:	call   0x416670
  40da36:	cmp    DWORD PTR [rax+0xc],0x6a
  40da3a:	mov    r14,rax
  40da3d:	je     0x40da52
  40da3f:	lea    rdx,[rip+0x152ca]        # 0x422d10
  40da46:	lea    rcx,[rip+0x152df]        # 0x422d2c
  40da4d:	call   0x406300
  40da52:	mov    rax,QWORD PTR [r14+0x50]
  40da56:	mov    eax,DWORD PTR [rax+0x212c]
  40da5c:	test   eax,eax
  40da5e:	je     0x40d996
  40da64:	add    r15d,0x1
  40da68:	mov    rcx,QWORD PTR [r12+0x30]
  40da6d:	test   rcx,rcx
  40da70:	jne    0x40da22
  40da72:	xor    eax,eax
  40da74:	jmp    0x40da25
  40da76:	xor    edi,edi
  40da78:	jmp    0x40da86
  40da7a:	nop    WORD PTR [rax+rax*1+0x0]
  40da80:	mov    rcx,QWORD PTR [rbx]
  40da83:	add    edi,0x1
  40da86:	test   rcx,rcx
  40da89:	je     0x40db42
  40da8f:	mov    eax,DWORD PTR [rcx+0x4]
  40da92:	cmp    edi,eax
  40da94:	jge    0x40db4c
  40da9a:	mov    edx,edi
  40da9c:	call   0x416670
  40daa1:	mov    r14,rax
  40daa4:	mov    eax,DWORD PTR [rax+0x212c]
  40daaa:	test   eax,eax
  40daac:	jne    0x40da80
  40daae:	mov    rcx,r14
  40dab1:	call   0x4159d0
  40dab6:	mov    ecx,DWORD PTR [r14+0x2128]
  40dabd:	lea    rdx,[rip+0x1552c]        # 0x422ff0
  40dac4:	mov    r8,rax
  40dac7:	call   0x40b520
  40dacc:	jmp    0x40da80
  40dace:	mov    rcx,QWORD PTR [rsp+0x28]
  40dad3:	mov    DWORD PTR [rdi+0x212c],0x1
  40dadd:	mov    rdx,rdi
  40dae0:	call   0x416750
  40dae5:	jmp    0x40d920
  40daea:	xor    r12d,r12d
  40daed:	jmp    0x40db2e
  40daef:	nop
  40daf0:	mov    eax,DWORD PTR [rcx+0x4]
  40daf3:	cmp    r12d,eax
  40daf6:	jge    0x40dace
  40daf8:	mov    edx,r12d
  40dafb:	call   0x416670
  40db00:	cmp    DWORD PTR [rax+0xc],0x6a
  40db04:	mov    r15,rax
  40db07:	je     0x40db1c
  40db09:	lea    rdx,[rip+0x15200]        # 0x422d10
  40db10:	lea    rcx,[rip+0x15215]        # 0x422d2c
  40db17:	call   0x406300
  40db1c:	mov    rax,QWORD PTR [r15+0x50]
  40db20:	cmp    DWORD PTR [rax+0xc],0x6c
  40db24:	jne    0x40d920
  40db2a:	add    r12d,0x1
  40db2e:	mov    rcx,QWORD PTR [rdi+0x30]
  40db32:	test   rcx,rcx
  40db35:	jne    0x40daf0
  40db37:	xor    eax,eax
  40db39:	jmp    0x40daf3
  40db3b:	xor    eax,eax
  40db3d:	jmp    0x40d933
  40db42:	xor    eax,eax
  40db44:	cmp    edi,eax
  40db46:	jl     0x40da9a
  40db4c:	call   0x416530
  40db51:	mov    rax,QWORD PTR [rsp+0x28]
  40db56:	xor    edi,edi
  40db58:	mov    QWORD PTR [rbx],rax
  40db5b:	mov    rcx,rax
  40db5e:	jmp    0x40db8c
  40db60:	mov    eax,DWORD PTR [rcx+0x4]
  40db63:	cmp    edi,eax
  40db65:	jge    0x40db97
  40db67:	mov    edx,edi
  40db69:	call   0x416670
  40db6e:	mov    rdx,QWORD PTR [rax+0x50]
  40db72:	test   rdx,rdx
  40db75:	je     0x40db86
  40db77:	mov    r15d,DWORD PTR [rax+0x5c]
  40db7b:	test   r15d,r15d
  40db7e:	jne    0x40db86
  40db80:	mov    edx,DWORD PTR [rdx+0x5c]
  40db83:	mov    DWORD PTR [rax+0x5c],edx
  40db86:	mov    rcx,QWORD PTR [rbx]
  40db89:	add    edi,0x1
  40db8c:	test   rcx,rcx
  40db8f:	jne    0x40db60
  40db91:	xor    eax,eax
  40db93:	cmp    edi,eax
  40db95:	jl     0x40db67
  40db97:	xor    edi,edi
  40db99:	jmp    0x40dbb7
  40db9b:	mov    eax,DWORD PTR [rcx+0x4]
  40db9e:	cmp    edi,eax
  40dba0:	jge    0x40dbc2
  40dba2:	mov    edx,edi
  40dba4:	add    edi,0x1
  40dba7:	call   0x416670
  40dbac:	mov    rcx,rax
  40dbaf:	call   0x40cb10
  40dbb4:	mov    rcx,QWORD PTR [rbx]
  40dbb7:	test   rcx,rcx
  40dbba:	jne    0x40db9b
  40dbbc:	xor    eax,eax
  40dbbe:	cmp    edi,eax
  40dbc0:	jl     0x40dba2
  40dbc2:	mov    rax,QWORD PTR [rip+0x1dd37]        # 0x42b900
  40dbc9:	mov    rax,QWORD PTR [rax]
  40dbcc:	test   rax,rax
  40dbcf:	je     0x40dbf1
  40dbd1:	mov    rdx,QWORD PTR [rax+0x50]
  40dbd5:	test   rdx,rdx
  40dbd8:	je     0x40dbc9
  40dbda:	mov    r14d,DWORD PTR [rax+0x5c]
  40dbde:	test   r14d,r14d
  40dbe1:	jne    0x40dbc9
  40dbe3:	mov    edx,DWORD PTR [rdx+0x5c]
  40dbe6:	mov    DWORD PTR [rax+0x5c],edx
  40dbe9:	mov    rax,QWORD PTR [rax]
  40dbec:	test   rax,rax
  40dbef:	jne    0x40dbd1
  40dbf1:	xor    edi,edi
  40dbf3:	jmp    0x40dc13
  40dbf5:	mov    eax,DWORD PTR [rcx+0x4]
  40dbf8:	cmp    edi,eax
  40dbfa:	jge    0x40dc1e
  40dbfc:	mov    edx,edi
  40dbfe:	add    edi,0x1
  40dc01:	call   0x416670
  40dc06:	mov    rcx,QWORD PTR [rbx]
  40dc09:	mov    DWORD PTR [rax+0x212c],0x0
  40dc13:	test   rcx,rcx
  40dc16:	jne    0x40dbf5
  40dc18:	xor    eax,eax
  40dc1a:	cmp    edi,eax
  40dc1c:	jl     0x40dbfc
  40dc1e:	xor    edi,edi
  40dc20:	jmp    0x40dc28
  40dc22:	mov    rcx,QWORD PTR [rbx]
  40dc25:	add    edi,0x1
  40dc28:	test   rcx,rcx
  40dc2b:	je     0x40dc51
  40dc2d:	mov    eax,DWORD PTR [rcx+0x4]
  40dc30:	cmp    edi,eax
  40dc32:	jge    0x40dc57
  40dc34:	mov    edx,edi
  40dc36:	call   0x416670
  40dc3b:	mov    r12d,DWORD PTR [rax+0x212c]
  40dc42:	test   r12d,r12d
  40dc45:	jne    0x40dc22
  40dc47:	mov    rcx,rax
  40dc4a:	call   0x40d110
  40dc4f:	jmp    0x40dc22
  40dc51:	xor    eax,eax
  40dc53:	cmp    edi,eax
  40dc55:	jl     0x40dc34
  40dc57:	mov    rcx,QWORD PTR [rbp+0x0]
  40dc5b:	mov    DWORD PTR [rsp+0x20],0x0
  40dc63:	mov    r12,QWORD PTR [rip+0x1dcb6]        # 0x42b920
  40dc6a:	test   rcx,rcx
  40dc6d:	je     0x40dd32
  40dc73:	mov    eax,DWORD PTR [rcx+0x4]
  40dc76:	cmp    DWORD PTR [rsp+0x20],eax
  40dc7a:	jge    0x40dd3e
  40dc80:	mov    edx,DWORD PTR [rsp+0x20]
  40dc84:	call   0x416670
  40dc89:	mov    r14,rax
  40dc8c:	mov    rax,QWORD PTR [rax+0x50]
  40dc90:	mov    rcx,QWORD PTR [r14+0x48]
  40dc94:	lea    rdx,[r14+0x5c]
  40dc98:	mov    eax,DWORD PTR [rax+0x5c]
  40dc9b:	mov    DWORD PTR [r14+0x5c],eax
  40dc9f:	call   0x40cea0
  40dca4:	mov    edi,DWORD PTR [r14+0x88]
  40dcab:	test   edi,edi
  40dcad:	jle    0x40dd20
  40dcaf:	lea    r15,[r14+0x90]
  40dcb6:	xor    edi,edi
  40dcb8:	jmp    0x40dcd0
  40dcba:	nop    WORD PTR [rax+rax*1+0x0]
  40dcc0:	add    edi,0x1
  40dcc3:	add    r15,0x8
  40dcc7:	cmp    edi,DWORD PTR [r14+0x88]
  40dcce:	jge    0x40dd20
  40dcd0:	mov    rax,QWORD PTR [r15]
  40dcd3:	cmp    QWORD PTR [rax+0x2100],0x0
  40dcdb:	jne    0x40dcc0
  40dcdd:	mov    r11d,DWORD PTR [r12]
  40dce1:	test   r11d,r11d
  40dce4:	je     0x40dcc0
  40dce6:	test   edi,edi
  40dce8:	je     0x40dcc0
  40dcea:	mov    rcx,r14
  40dced:	add    edi,0x1
  40dcf0:	add    r15,0x8
  40dcf4:	call   0x4159d0
  40dcf9:	mov    ecx,DWORD PTR [r14+0x2128]
  40dd00:	lea    rdx,[rip+0x15311]        # 0x423018
  40dd07:	mov    r8,rax
  40dd0a:	call   0x40b520
  40dd0f:	cmp    edi,DWORD PTR [r14+0x88]
  40dd16:	jl     0x40dcd0
  40dd18:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd20:	mov    rcx,QWORD PTR [rbp+0x0]
  40dd24:	add    DWORD PTR [rsp+0x20],0x1
  40dd29:	test   rcx,rcx
  40dd2c:	jne    0x40dc73
  40dd32:	xor    eax,eax
  40dd34:	cmp    DWORD PTR [rsp+0x20],eax
  40dd38:	jl     0x40dc80
  40dd3e:	xor    r14d,r14d
  40dd41:	jmp    0x40ddd3
  40dd46:	mov    eax,DWORD PTR [rcx+0x4]
  40dd49:	cmp    r14d,eax
  40dd4c:	jge    0x40ddf1
  40dd52:	mov    edx,r14d
  40dd55:	call   0x416670
  40dd5a:	mov    rdi,rax
  40dd5d:	mov    rax,QWORD PTR [rax+0x50]
  40dd61:	test   rax,rax
  40dd64:	je     0x40e663
  40dd6a:	mov    rcx,QWORD PTR [rdi+0x48]
  40dd6e:	mov    eax,DWORD PTR [rax+0x5c]
  40dd71:	cmp    QWORD PTR [rcx+0x10],0x0
  40dd76:	mov    DWORD PTR [rdi+0x5c],eax
  40dd79:	jne    0x40ddc6
  40dd7b:	cmp    eax,0x2
  40dd7e:	je     0x40dd9d
  40dd80:	mov    rcx,rdi
  40dd83:	call   0x4159d0
  40dd88:	mov    ecx,DWORD PTR [rdi+0x2128]
  40dd8e:	lea    rdx,[rip+0x152bb]        # 0x423050
  40dd95:	mov    r8,rax
  40dd98:	call   0x40b520
  40dd9d:	mov    ecx,0x1
  40dda2:	call   0x415bb0
  40dda7:	mov    rdx,QWORD PTR [rax+0x10]
  40ddab:	mov    ecx,DWORD PTR [rdi+0x2128]
  40ddb1:	mov    QWORD PTR [rdi+0x48],rax
  40ddb5:	shl    rdx,0x5
  40ddb9:	add    rdx,QWORD PTR [rax+0x20]
  40ddbd:	call   0x406120
  40ddc2:	mov    rcx,QWORD PTR [rdi+0x48]
  40ddc6:	lea    rdx,[rdi+0x5c]
  40ddca:	add    r14d,0x1
  40ddce:	call   0x40cea0
  40ddd3:	mov    rax,QWORD PTR [rip+0x1d966]        # 0x42b740
  40ddda:	mov    rcx,QWORD PTR [rax]
  40dddd:	test   rcx,rcx
  40dde0:	jne    0x40dd46
  40dde6:	xor    eax,eax
  40dde8:	cmp    r14d,eax
  40ddeb:	jl     0x40dd52
  40ddf1:	xor    r12d,r12d
  40ddf4:	jmp    0x40de81
  40ddf9:	mov    rdx,QWORD PTR [rdi+0x20f0]
  40de00:	mov    rcx,QWORD PTR [rdi+0x48]
  40de04:	mov    rax,QWORD PTR [rdx+0x50]
  40de08:	test   rcx,rcx
  40de0b:	mov    QWORD PTR [rdi+0x50],rax
  40de0f:	je     0x40e679
  40de15:	mov    QWORD PTR [rdx+0x20c0],rcx
  40de1c:	cmp    QWORD PTR [rcx+0x10],0x0
  40de21:	mov    eax,DWORD PTR [rax+0x5c]
  40de24:	mov    DWORD PTR [rdi+0x5c],eax
  40de27:	jne    0x40de74
  40de29:	cmp    eax,0x2
  40de2c:	je     0x40de4b
  40de2e:	mov    rcx,rdi
  40de31:	call   0x4159d0
  40de36:	mov    ecx,DWORD PTR [rdi+0x2128]
  40de3c:	lea    rdx,[rip+0x1520d]        # 0x423050
  40de43:	mov    r8,rax
  40de46:	call   0x40b520
  40de4b:	mov    ecx,0x1
  40de50:	call   0x415bb0
  40de55:	mov    rdx,QWORD PTR [rax+0x10]
  40de59:	mov    ecx,DWORD PTR [rdi+0x2128]
  40de5f:	mov    QWORD PTR [rdi+0x48],rax
  40de63:	shl    rdx,0x5
  40de67:	add    rdx,QWORD PTR [rax+0x20]
  40de6b:	call   0x406120
  40de70:	mov    rcx,QWORD PTR [rdi+0x48]
  40de74:	lea    rdx,[rdi+0x5c]
  40de78:	add    r12d,0x1
  40de7c:	call   0x40cea0
  40de81:	mov    rcx,QWORD PTR [rsi]
  40de84:	test   rcx,rcx
  40de87:	je     0x40ded0
  40de89:	mov    eax,DWORD PTR [rcx+0x4]
  40de8c:	cmp    r12d,eax
  40de8f:	jge    0x40ded7
  40de91:	mov    edx,r12d
  40de94:	call   0x416670
  40de99:	mov    ecx,0x80
  40de9e:	mov    rdi,rax
  40dea1:	call   0x411ad0
  40dea6:	mov    rcx,QWORD PTR [rdi+0x10]
  40deaa:	mov    rdx,rax
  40dead:	call   0x41db60
  40deb2:	test   eax,eax
  40deb4:	je     0x40ddf9
  40deba:	mov    rax,QWORD PTR [rdi+0x50]
  40debe:	test   rax,rax
  40dec1:	je     0x40e698
  40dec7:	mov    rcx,QWORD PTR [rdi+0x48]
  40decb:	jmp    0x40de1c
  40ded0:	xor    eax,eax
  40ded2:	cmp    r12d,eax
  40ded5:	jl     0x40de91
  40ded7:	mov    rcx,QWORD PTR [rbp+0x0]
  40dedb:	xor    r12d,r12d
  40dede:	test   rcx,rcx
  40dee1:	je     0x40df56
  40dee3:	mov    eax,DWORD PTR [rcx+0x4]
  40dee6:	cmp    r12d,eax
  40dee9:	jge    0x40df5d
  40deeb:	mov    edx,r12d
  40deee:	xor    r15d,r15d
  40def1:	call   0x416670
  40def6:	mov    rdi,rax
  40def9:	call   0x416500
  40defe:	mov    r14,rax
  40df01:	jmp    0x40df33
  40df03:	mov    eax,DWORD PTR [rcx+0x4]
  40df06:	cmp    r15d,eax
  40df09:	jge    0x40df42
  40df0b:	mov    edx,r15d
  40df0e:	call   0x416670
  40df13:	mov    rcx,QWORD PTR [rax+0x20f0]
  40df1a:	mov    r8,rax
  40df1d:	test   rcx,rcx
  40df20:	je     0x40e008
  40df26:	cmp    rdi,rcx
  40df29:	je     0x40e035
  40df2f:	add    r15d,0x1
  40df33:	mov    rcx,QWORD PTR [rsi]
  40df36:	test   rcx,rcx
  40df39:	jne    0x40df03
  40df3b:	xor    eax,eax
  40df3d:	cmp    r15d,eax
  40df40:	jl     0x40df0b
  40df42:	mov    rcx,QWORD PTR [rbp+0x0]
  40df46:	add    r12d,0x1
  40df4a:	mov    QWORD PTR [rdi+0x20b0],r14
  40df51:	test   rcx,rcx
  40df54:	jne    0x40dee3
  40df56:	xor    eax,eax
  40df58:	cmp    r12d,eax
  40df5b:	jl     0x40deeb
  40df5d:	call   0x416500
  40df62:	xor    r14d,r14d
  40df65:	mov    QWORD PTR [rsp+0x20],rax
  40df6a:	jmp    0x40df74
  40df6c:	nop    DWORD PTR [rax+0x0]
  40df70:	add    r14d,0x1
  40df74:	mov    rcx,QWORD PTR [rbx]
  40df77:	test   rcx,rcx
  40df7a:	je     0x40e045
  40df80:	mov    eax,DWORD PTR [rcx+0x4]
  40df83:	cmp    r14d,eax
  40df86:	jge    0x40e050
  40df8c:	mov    edx,r14d
  40df8f:	call   0x416670
  40df94:	cmp    DWORD PTR [rax+0x8],0x68
  40df98:	mov    r12,rax
  40df9b:	je     0x40dfb0
  40df9d:	lea    rdx,[rip+0x15101]        # 0x4230a5
  40dfa4:	lea    rcx,[rip+0x14d81]        # 0x422d2c
  40dfab:	call   0x406300
  40dfb0:	cmp    DWORD PTR [r12+0xc],0xf
  40dfb6:	jne    0x40df70
  40dfb8:	xor    edi,edi
  40dfba:	jmp    0x40dffa
  40dfbc:	nop    DWORD PTR [rax+0x0]
  40dfc0:	mov    eax,DWORD PTR [rcx+0x4]
  40dfc3:	cmp    edi,eax
  40dfc5:	jge    0x40df70
  40dfc7:	mov    edx,edi
  40dfc9:	call   0x416670
  40dfce:	cmp    DWORD PTR [rax+0xc],0x69
  40dfd2:	mov    r15,rax
  40dfd5:	je     0x40dfea
  40dfd7:	lea    rdx,[rip+0x150e3]        # 0x4230c1
  40dfde:	lea    rcx,[rip+0x14d47]        # 0x422d2c
  40dfe5:	call   0x406300
  40dfea:	mov    rcx,QWORD PTR [rsp+0x20]
  40dfef:	mov    rdx,r15
  40dff2:	add    edi,0x1
  40dff5:	call   0x416750
  40dffa:	mov    rcx,QWORD PTR [r12+0x30]
  40dfff:	test   rcx,rcx
  40e002:	jne    0x40dfc0
  40e004:	xor    eax,eax
  40e006:	jmp    0x40dfc3
  40e008:	lea    rcx,[rip+0x14d1d]        # 0x422d2c
  40e00f:	lea    rdx,[rip+0x15079]        # 0x42308f
  40e016:	mov    QWORD PTR [rsp+0x20],rax
  40e01b:	call   0x406300
  40e020:	mov    r8,QWORD PTR [rsp+0x20]
  40e025:	mov    rcx,QWORD PTR [r8+0x20f0]
  40e02c:	cmp    rdi,rcx
  40e02f:	jne    0x40df2f
  40e035:	mov    rdx,r8
  40e038:	mov    rcx,r14
  40e03b:	call   0x416750
  40e040:	jmp    0x40df2f
  40e045:	xor    eax,eax
  40e047:	cmp    r14d,eax
  40e04a:	jl     0x40df8c
  40e050:	lea    rax,[rsp+0x30]
  40e055:	xor    r14d,r14d
  40e058:	mov    QWORD PTR [rsp+0x20],rax
  40e05d:	jmp    0x40e067
  40e05f:	nop
  40e060:	mov    rcx,QWORD PTR [rbx]
  40e063:	add    r14d,0x1
  40e067:	test   rcx,rcx
  40e06a:	je     0x40e128
  40e070:	mov    eax,DWORD PTR [rcx+0x4]
  40e073:	cmp    r14d,eax
  40e076:	jge    0x40e133
  40e07c:	mov    edx,r14d
  40e07f:	call   0x416670
  40e084:	cmp    DWORD PTR [rax+0x8],0x68
  40e088:	mov    r12,rax
  40e08b:	je     0x40e0a0
  40e08d:	lea    rdx,[rip+0x15049]        # 0x4230dd
  40e094:	lea    rcx,[rip+0x14c91]        # 0x422d2c
  40e09b:	call   0x406300
  40e0a0:	cmp    DWORD PTR [r12+0xc],0xf
  40e0a6:	jne    0x40e060
  40e0a8:	xor    edi,edi
  40e0aa:	jmp    0x40e11a
  40e0ac:	nop    DWORD PTR [rax+0x0]
  40e0b0:	mov    eax,DWORD PTR [rcx+0x4]
  40e0b3:	cmp    edi,eax
  40e0b5:	jge    0x40e060
  40e0b7:	mov    edx,edi
  40e0b9:	call   0x416670
  40e0be:	cmp    DWORD PTR [rax+0xc],0x69
  40e0c2:	mov    r15,rax
  40e0c5:	je     0x40e0da
  40e0c7:	lea    rdx,[rip+0x14ff3]        # 0x4230c1
  40e0ce:	lea    rcx,[rip+0x14c57]        # 0x422d2c
  40e0d5:	call   0x406300
  40e0da:	mov    eax,DWORD PTR [r15+0x5c]
  40e0de:	mov    rdx,QWORD PTR [rsp+0x20]
  40e0e3:	lea    rcx,[r15+0x68]
  40e0e7:	add    edi,0x1
  40e0ea:	mov    DWORD PTR [rsp+0x30],eax
  40e0ee:	call   0x403680
  40e0f3:	mov    rax,QWORD PTR [rsp+0x30]
  40e0f8:	mov    QWORD PTR [r15+0x68],rax
  40e0fc:	mov    rax,QWORD PTR [rsp+0x38]
  40e101:	mov    QWORD PTR [r15+0x70],rax
  40e105:	mov    rax,QWORD PTR [rsp+0x40]
  40e10a:	mov    QWORD PTR [r15+0x78],rax
  40e10e:	mov    rax,QWORD PTR [rsp+0x48]
  40e113:	mov    QWORD PTR [r15+0x80],rax
  40e11a:	mov    rcx,QWORD PTR [r12+0x30]
  40e11f:	test   rcx,rcx
  40e122:	jne    0x40e0b0
  40e124:	xor    eax,eax
  40e126:	jmp    0x40e0b3
  40e128:	xor    eax,eax
  40e12a:	cmp    r14d,eax
  40e12d:	jl     0x40e07c
  40e133:	xor    edi,edi
  40e135:	jmp    0x40e167
  40e137:	mov    eax,DWORD PTR [rcx+0x4]
  40e13a:	cmp    edi,eax
  40e13c:	jge    0x40e175
  40e13e:	mov    edx,edi
  40e140:	call   0x416670
  40e145:	mov    rax,QWORD PTR [rax+0x48]
  40e149:	test   rax,rax
  40e14c:	je     0x40e164
  40e14e:	mov    r10d,DWORD PTR [rax+0x10]
  40e152:	test   r10d,r10d
  40e155:	jle    0x40e164
  40e157:	mov    rdx,QWORD PTR [rax+0x20]
  40e15b:	lea    rcx,[rax+0x18]
  40e15f:	call   0x40d380
  40e164:	add    edi,0x1
  40e167:	mov    rcx,QWORD PTR [rsi]
  40e16a:	test   rcx,rcx
  40e16d:	jne    0x40e137
  40e16f:	xor    eax,eax
  40e171:	cmp    edi,eax
  40e173:	jl     0x40e13e
  40e175:	xor    esi,esi
  40e177:	jmp    0x40e1a9
  40e179:	mov    eax,DWORD PTR [rcx+0x4]
  40e17c:	cmp    esi,eax
  40e17e:	jge    0x40e1b8
  40e180:	mov    edx,esi
  40e182:	call   0x416670
  40e187:	mov    rax,QWORD PTR [rax+0x48]
  40e18b:	test   rax,rax
  40e18e:	je     0x40e1a6
  40e190:	mov    r9d,DWORD PTR [rax+0x10]
  40e194:	test   r9d,r9d
  40e197:	jle    0x40e1a6
  40e199:	mov    rdx,QWORD PTR [rax+0x20]
  40e19d:	lea    rcx,[rax+0x18]
  40e1a1:	call   0x40d380
  40e1a6:	add    esi,0x1
  40e1a9:	mov    rcx,QWORD PTR [rbp+0x0]
  40e1ad:	test   rcx,rcx
  40e1b0:	jne    0x40e179
  40e1b2:	xor    eax,eax
  40e1b4:	cmp    esi,eax
  40e1b6:	jl     0x40e180
  40e1b8:	xor    esi,esi
  40e1ba:	jmp    0x40e1e4
  40e1bc:	mov    eax,DWORD PTR [rcx+0x4]
  40e1bf:	cmp    esi,eax
  40e1c1:	jge    0x40e1f3
  40e1c3:	mov    edx,esi
  40e1c5:	call   0x416670
  40e1ca:	mov    r8d,DWORD PTR [rax+0x20fc]
  40e1d1:	test   r8d,r8d
  40e1d4:	je     0x40e1e1
  40e1d6:	mov    QWORD PTR [rax+0x2100],0x0
  40e1e1:	add    esi,0x1
  40e1e4:	mov    rcx,QWORD PTR [r13+0x0]
  40e1e8:	test   rcx,rcx
  40e1eb:	jne    0x40e1bc
  40e1ed:	xor    eax,eax
  40e1ef:	cmp    esi,eax
  40e1f1:	jl     0x40e1c3
  40e1f3:	xor    esi,esi
  40e1f5:	mov    rcx,QWORD PTR [rbp+0x0]
  40e1f9:	test   rcx,rcx
  40e1fc:	je     0x40e2e9
  40e202:	mov    eax,DWORD PTR [rcx+0x4]
  40e205:	cmp    esi,eax
  40e207:	jge    0x40e2f3
  40e20d:	mov    edx,esi
  40e20f:	call   0x416670
  40e214:	mov    ecx,DWORD PTR [rax+0x88]
  40e21a:	mov    r15,rax
  40e21d:	test   ecx,ecx
  40e21f:	je     0x40e2d9
  40e225:	cmp    QWORD PTR [rax+0x48],0x0
  40e22a:	je     0x40e2d9
  40e230:	lea    r12,[rax+0x88]
  40e237:	mov    rax,QWORD PTR [rax+0x50]
  40e23b:	xor    edx,edx
  40e23d:	mov    rcx,r12
  40e240:	mov    r14d,DWORD PTR [rax+0x5c]
  40e244:	call   0x415e00
  40e249:	cmp    eax,DWORD PTR [r15+0x88]
  40e250:	mov    edi,eax
  40e252:	je     0x40e2d9
  40e258:	cmp    r14d,0x2
  40e25c:	sete   r14b
  40e260:	test   eax,eax
  40e262:	movzx  r14d,r14b
  40e266:	je     0x40e2c8
  40e268:	mov    rax,QWORD PTR [r15+0x48]
  40e26c:	xor    esi,esi
  40e26e:	cmp    QWORD PTR [rax+0x10],0x0
  40e273:	jne    0x40e2a5
  40e275:	jmp    0x40e6ae
  40e27a:	nop    WORD PTR [rax+rax*1+0x0]
  40e280:	mov    ecx,DWORD PTR [rdx+0x4]
  40e283:	lea    rdx,[rip+0x14e76]        # 0x423100
  40e28a:	call   0x40b520
  40e28f:	mov    rax,QWORD PTR [r15+0x48]
  40e293:	lea    r10d,[rsi+0x1]
  40e297:	add    rsi,0x1
  40e29b:	cmp    QWORD PTR [rax+0x10],rsi
  40e29f:	jbe    0x40e3d3
  40e2a5:	mov    rdx,rsi
  40e2a8:	shl    rdx,0x5
  40e2ac:	add    rdx,QWORD PTR [rax+0x20]
  40e2b0:	cmp    DWORD PTR [rdx],0x10
  40e2b3:	jne    0x40e280
  40e2b5:	mov    r8,QWORD PTR [rdx+0x8]
  40e2b9:	mov    r9d,r14d
  40e2bc:	mov    edx,edi
  40e2be:	mov    rcx,r12
  40e2c1:	call   0x40ccd0
  40e2c6:	jmp    0x40e28f
  40e2c8:	mov    r8,QWORD PTR [r15+0x48]
  40e2cc:	mov    r9d,r14d
  40e2cf:	xor    edx,edx
  40e2d1:	mov    rcx,r12
  40e2d4:	call   0x40ccd0
  40e2d9:	mov    rcx,QWORD PTR [rbp+0x0]
  40e2dd:	add    esi,0x1
  40e2e0:	test   rcx,rcx
  40e2e3:	jne    0x40e202
  40e2e9:	xor    eax,eax
  40e2eb:	cmp    esi,eax
  40e2ed:	jl     0x40e20d
  40e2f3:	xor    edi,edi
  40e2f5:	mov    r12,QWORD PTR [rip+0x1d5c4]        # 0x42b8c0
  40e2fc:	jmp    0x40e320
  40e2fe:	mov    rcx,QWORD PTR [rax+0x30]
  40e302:	mov    rdx,rsi
  40e305:	call   0x40cac0
  40e30a:	test   eax,eax
  40e30c:	je     0x40e494
  40e312:	cmp    QWORD PTR [rsi+0x30],0x0
  40e317:	je     0x40e39d
  40e31d:	add    edi,0x1
  40e320:	mov    rax,QWORD PTR [rip+0x1d429]        # 0x42b750
  40e327:	mov    rcx,QWORD PTR [rax]
  40e32a:	test   rcx,rcx
  40e32d:	je     0x40e3dc
  40e333:	mov    eax,DWORD PTR [rcx+0x4]
  40e336:	cmp    edi,eax
  40e338:	jge    0x40e3e6
  40e33e:	mov    edx,edi
  40e340:	call   0x416670
  40e345:	cmp    rax,QWORD PTR [r12]
  40e349:	mov    rsi,rax
  40e34c:	je     0x40e457
  40e352:	mov    rax,QWORD PTR [rax+0x20]
  40e356:	test   rax,rax
  40e359:	je     0x40e62d
  40e35f:	mov    edx,DWORD PTR [rax+0x2110]
  40e365:	test   edx,edx
  40e367:	je     0x40e2fe
  40e369:	mov    rdx,QWORD PTR [rsi+0x10]
  40e36d:	lea    rcx,[rip+0x14e54]        # 0x4231c8
  40e374:	call   0x406300
  40e379:	test   eax,eax
  40e37b:	jne    0x40e312
  40e37d:	lea    rdx,[rip+0x14b13]        # 0x422e97
  40e384:	lea    rcx,[rip+0x14e65]        # 0x4231f0
  40e38b:	mov    r8d,0x3c1
  40e391:	call   0x41da30
  40e396:	cmp    QWORD PTR [rsi+0x30],0x0
  40e39b:	jne    0x40e31d
  40e39d:	mov    rdx,QWORD PTR [rsi+0x10]
  40e3a1:	lea    rcx,[rip+0x14ece]        # 0x423276
  40e3a8:	call   0x406300
  40e3ad:	test   eax,eax
  40e3af:	jne    0x40e31d
  40e3b5:	lea    rdx,[rip+0x14adb]        # 0x422e97
  40e3bc:	lea    rcx,[rip+0x14ed5]        # 0x423298
  40e3c3:	mov    r8d,0x3c5
  40e3c9:	call   0x41da30
  40e3ce:	jmp    0x40e31d
  40e3d3:	lea    esi,[r10+0x1]
  40e3d7:	jmp    0x40e1f5
  40e3dc:	xor    eax,eax
  40e3de:	cmp    edi,eax
  40e3e0:	jl     0x40e33e
  40e3e6:	xor    esi,esi
  40e3e8:	jmp    0x40e3f3
  40e3ea:	nop    WORD PTR [rax+rax*1+0x0]
  40e3f0:	add    esi,0x1
  40e3f3:	mov    rcx,QWORD PTR [rbx]
  40e3f6:	test   rcx,rcx
  40e3f9:	je     0x40e4ca
  40e3ff:	mov    eax,DWORD PTR [rcx+0x4]
  40e402:	cmp    esi,eax
  40e404:	jge    0x40e4d4
  40e40a:	mov    edx,esi
  40e40c:	call   0x416670
  40e411:	mov    rdi,rax
  40e414:	mov    rax,QWORD PTR [rax+0x20]
  40e418:	mov    rdx,rdi
  40e41b:	mov    rcx,QWORD PTR [rax+0x30]
  40e41f:	call   0x40cac0
  40e424:	test   eax,eax
  40e426:	jne    0x40e3f0
  40e428:	mov    rdx,QWORD PTR [rdi+0x10]
  40e42c:	lea    rcx,[rip+0x14e95]        # 0x4232c8
  40e433:	call   0x406300
  40e438:	test   eax,eax
  40e43a:	jne    0x40e3f0
  40e43c:	lea    rdx,[rip+0x14a54]        # 0x422e97
  40e443:	lea    rcx,[rip+0x14e9e]        # 0x4232e8
  40e44a:	mov    r8d,0x3ca
  40e450:	call   0x41da30
  40e455:	jmp    0x40e3f0
  40e457:	cmp    QWORD PTR [rax+0x20],0x0
  40e45c:	je     0x40e312
  40e462:	lea    rcx,[rip+0x14cd5]        # 0x42313e
  40e469:	call   0x406300
  40e46e:	test   eax,eax
  40e470:	jne    0x40e312
  40e476:	lea    rdx,[rip+0x14a1a]        # 0x422e97
  40e47d:	lea    rcx,[rip+0x14cd4]        # 0x423158
  40e484:	mov    r8d,0x3bd
  40e48a:	call   0x41da30
  40e48f:	jmp    0x40e312
  40e494:	mov    rdx,QWORD PTR [rsi+0x10]
  40e498:	lea    rcx,[rip+0x14d87]        # 0x423226
  40e49f:	call   0x406300
  40e4a4:	test   eax,eax
  40e4a6:	jne    0x40e312
  40e4ac:	lea    rdx,[rip+0x149e4]        # 0x422e97
  40e4b3:	lea    rcx,[rip+0x14d8e]        # 0x423248
  40e4ba:	mov    r8d,0x3c3
  40e4c0:	call   0x41da30
  40e4c5:	jmp    0x40e312
  40e4ca:	xor    eax,eax
  40e4cc:	cmp    esi,eax
  40e4ce:	jl     0x40e40a
  40e4d4:	xor    esi,esi
  40e4d6:	jmp    0x40e4e3
  40e4d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e4e0:	add    esi,0x1
  40e4e3:	mov    rcx,QWORD PTR [r13+0x0]
  40e4e7:	test   rcx,rcx
  40e4ea:	je     0x40e540
  40e4ec:	mov    eax,DWORD PTR [rcx+0x4]
  40e4ef:	cmp    esi,eax
  40e4f1:	jge    0x40e546
  40e4f3:	mov    edx,esi
  40e4f5:	call   0x416670
  40e4fa:	mov    rdi,rax
  40e4fd:	mov    rax,QWORD PTR [rax+0x20]
  40e501:	mov    rdx,rdi
  40e504:	mov    rcx,QWORD PTR [rax+0x30]
  40e508:	call   0x40cac0
  40e50d:	test   eax,eax
  40e50f:	jne    0x40e4e0
  40e511:	mov    rdx,QWORD PTR [rdi+0x10]
  40e515:	lea    rcx,[rip+0x14dfc]        # 0x423318
  40e51c:	call   0x406300
  40e521:	test   eax,eax
  40e523:	jne    0x40e4e0
  40e525:	lea    rdx,[rip+0x1496b]        # 0x422e97
  40e52c:	lea    rcx,[rip+0x14e05]        # 0x423338
  40e533:	mov    r8d,0x3cf
  40e539:	call   0x41da30
  40e53e:	jmp    0x40e4e0
  40e540:	xor    eax,eax
  40e542:	cmp    esi,eax
  40e544:	jl     0x40e4f3
  40e546:	xor    edi,edi
  40e548:	jmp    0x40e559
  40e54a:	mov    ecx,DWORD PTR [rsi+0x5c]
  40e54d:	call   0x415490
  40e552:	test   eax,eax
  40e554:	je     0x40e5c8
  40e556:	add    edi,0x1
  40e559:	mov    rcx,QWORD PTR [rbp+0x0]
  40e55d:	test   rcx,rcx
  40e560:	je     0x40e612
  40e566:	mov    eax,DWORD PTR [rcx+0x4]
  40e569:	cmp    edi,eax
  40e56b:	jge    0x40e61c
  40e571:	mov    edx,edi
  40e573:	call   0x416670
  40e578:	mov    rsi,rax
  40e57b:	mov    rax,QWORD PTR [rax+0x20]
  40e57f:	mov    rdx,rsi
  40e582:	mov    rcx,QWORD PTR [rax+0x30]
  40e586:	call   0x40cac0
  40e58b:	test   eax,eax
  40e58d:	jne    0x40e54a
  40e58f:	mov    rdx,QWORD PTR [rsi+0x10]
  40e593:	lea    rcx,[rip+0x14dd0]        # 0x42336a
  40e59a:	call   0x406300
  40e59f:	test   eax,eax
  40e5a1:	jne    0x40e54a
  40e5a3:	lea    rdx,[rip+0x148ed]        # 0x422e97
  40e5aa:	lea    rcx,[rip+0x14dd7]        # 0x423388
  40e5b1:	mov    r8d,0x3d4
  40e5b7:	call   0x41da30
  40e5bc:	mov    ecx,DWORD PTR [rsi+0x5c]
  40e5bf:	call   0x415490
  40e5c4:	test   eax,eax
  40e5c6:	jne    0x40e556
  40e5c8:	mov    rdx,QWORD PTR [rsi+0x50]
  40e5cc:	mov    rcx,QWORD PTR [rbx]
  40e5cf:	call   0x40cac0
  40e5d4:	test   eax,eax
  40e5d6:	jne    0x40e556
  40e5dc:	mov    rdx,QWORD PTR [rsi+0x10]
  40e5e0:	lea    rcx,[rip+0x14dd9]        # 0x4233c0
  40e5e7:	call   0x406300
  40e5ec:	test   eax,eax
  40e5ee:	jne    0x40e556
  40e5f4:	lea    rdx,[rip+0x1489c]        # 0x422e97
  40e5fb:	lea    rcx,[rip+0x14de6]        # 0x4233e8
  40e602:	mov    r8d,0x3d7
  40e608:	call   0x41da30
  40e60d:	jmp    0x40e556
  40e612:	xor    eax,eax
  40e614:	cmp    edi,eax
  40e616:	jl     0x40e571
  40e61c:	add    rsp,0x58
  40e620:	pop    rbx
  40e621:	pop    rsi
  40e622:	pop    rdi
  40e623:	pop    rbp
  40e624:	pop    r12
  40e626:	pop    r13
  40e628:	pop    r14
  40e62a:	pop    r15
  40e62c:	ret    
  40e62d:	mov    rdx,QWORD PTR [rsi+0x10]
  40e631:	lea    rcx,[rip+0x14b43]        # 0x42317b
  40e638:	call   0x406300
  40e63d:	test   eax,eax
  40e63f:	jne    0x40e312
  40e645:	lea    rdx,[rip+0x1484b]        # 0x422e97
  40e64c:	lea    rcx,[rip+0x14b45]        # 0x423198
  40e653:	mov    r8d,0x3bf
  40e659:	call   0x41da30
  40e65e:	jmp    0x40e312
  40e663:	lea    rdx,[rdi+0x50]
  40e667:	lea    rcx,[rdi+0x48]
  40e66b:	call   0x40d020
  40e670:	mov    rax,QWORD PTR [rdi+0x50]
  40e674:	jmp    0x40dd6a
  40e679:	mov    rcx,rax
  40e67c:	call   0x40be90
  40e681:	mov    rdx,QWORD PTR [rdi+0x20f0]
  40e688:	mov    rcx,rax
  40e68b:	mov    QWORD PTR [rdi+0x48],rax
  40e68f:	mov    rax,QWORD PTR [rdi+0x50]
  40e693:	jmp    0x40de15
  40e698:	lea    rdx,[rdi+0x50]
  40e69c:	lea    rcx,[rdi+0x48]
  40e6a0:	call   0x40d020
  40e6a5:	mov    rax,QWORD PTR [rdi+0x50]
  40e6a9:	jmp    0x40dec7
  40e6ae:	mov    sil,0x1
  40e6b1:	jmp    0x40e1f5
  40e6b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6c0:	push   r12
  40e6c2:	push   rbp
  40e6c3:	push   rdi
  40e6c4:	push   rsi
  40e6c5:	push   rbx
  40e6c6:	sub    rsp,0x20
  40e6ca:	test   rdx,rdx
  40e6cd:	mov    ebp,ecx
  40e6cf:	mov    r12,rdx
  40e6d2:	mov    rdi,r8
  40e6d5:	je     0x40e730
  40e6d7:	test   r8,r8
  40e6da:	je     0x40e760
  40e6e0:	mov    rcx,rdi
  40e6e3:	xor    ebx,ebx
  40e6e5:	call   0x414ac0
  40e6ea:	jmp    0x40e715
  40e6ec:	nop    DWORD PTR [rax+0x0]
  40e6f0:	mov    r9d,DWORD PTR [rcx+0x4]
  40e6f4:	cmp    ebx,r9d
  40e6f7:	jge    0x40e730
  40e6f9:	mov    edx,ebx
  40e6fb:	call   0x416670
  40e700:	mov    rsi,rax
  40e703:	mov    eax,DWORD PTR [rax+0x2110]
  40e709:	test   eax,eax
  40e70b:	jne    0x40e712
  40e70d:	cmp    DWORD PTR [rsi+0x8],ebp
  40e710:	je     0x40e740
  40e712:	add    ebx,0x1
  40e715:	mov    rcx,QWORD PTR [rdi+0x30]
  40e719:	test   rcx,rcx
  40e71c:	jne    0x40e6f0
  40e71e:	xor    r9d,r9d
  40e721:	cmp    ebx,r9d
  40e724:	jl     0x40e6f9
  40e726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e730:	xor    eax,eax
  40e732:	add    rsp,0x20
  40e736:	pop    rbx
  40e737:	pop    rsi
  40e738:	pop    rdi
  40e739:	pop    rbp
  40e73a:	pop    r12
  40e73c:	ret    
  40e73d:	nop    DWORD PTR [rax]
  40e740:	mov    rcx,QWORD PTR [rsi+0x10]
  40e744:	mov    rdx,r12
  40e747:	call   0x41db60
  40e74c:	test   eax,eax
  40e74e:	jne    0x40e712
  40e750:	mov    rax,rsi
  40e753:	add    rsp,0x20
  40e757:	pop    rbx
  40e758:	pop    rsi
  40e759:	pop    rdi
  40e75a:	pop    rbp
  40e75b:	pop    r12
  40e75d:	ret    
  40e75e:	xchg   ax,ax
  40e760:	mov    rax,QWORD PTR [rip+0x1d159]        # 0x42b8c0
  40e767:	mov    rdi,QWORD PTR [rax]
  40e76a:	jmp    0x40e6e0
  40e76f:	nop
  40e770:	push   rbp
  40e771:	push   rdi
  40e772:	push   rsi
  40e773:	push   rbx
  40e774:	sub    rsp,0x28
  40e778:	mov    rdi,rdx
  40e77b:	mov    rbp,rcx
  40e77e:	mov    rdx,QWORD PTR [rcx+0x10]
  40e782:	mov    ecx,DWORD PTR [rcx+0x8]
  40e785:	mov    r8,rdi
  40e788:	call   0x40e6c0
  40e78d:	test   rax,rax
  40e790:	mov    rsi,rax
  40e793:	je     0x40e7a1
  40e795:	mov    rax,rsi
  40e798:	add    rsp,0x28
  40e79c:	pop    rbx
  40e79d:	pop    rsi
  40e79e:	pop    rdi
  40e79f:	pop    rbp
  40e7a0:	ret    
  40e7a1:	xor    ebx,ebx
  40e7a3:	jmp    0x40e7a8
  40e7a5:	add    ebx,0x1
  40e7a8:	mov    rcx,QWORD PTR [rdi+0x30]
  40e7ac:	test   rcx,rcx
  40e7af:	je     0x40e7f0
  40e7b1:	mov    r10d,DWORD PTR [rcx+0x4]
  40e7b5:	cmp    ebx,r10d
  40e7b8:	jge    0x40e795
  40e7ba:	mov    edx,ebx
  40e7bc:	call   0x416670
  40e7c1:	cmp    DWORD PTR [rax+0x8],0x64
  40e7c5:	jne    0x40e7a5
  40e7c7:	mov    edx,DWORD PTR [rax+0x2110]
  40e7cd:	test   edx,edx
  40e7cf:	jne    0x40e7a5
  40e7d1:	mov    rdx,rax
  40e7d4:	mov    rcx,rbp
  40e7d7:	call   0x40e770
  40e7dc:	test   rax,rax
  40e7df:	je     0x40e7a5
  40e7e1:	test   rsi,rsi
  40e7e4:	jne    0x40e7f5
  40e7e6:	mov    rsi,rax
  40e7e9:	jmp    0x40e7a5
  40e7eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e7f0:	xor    r10d,r10d
  40e7f3:	jmp    0x40e7b5
  40e7f5:	xor    eax,eax
  40e7f7:	jmp    0x40e798
  40e7f9:	nop    DWORD PTR [rax+0x0]
  40e800:	push   rsi
  40e801:	push   rbx
  40e802:	sub    rsp,0x28
  40e806:	test   rdx,rdx
  40e809:	je     0x40e832
  40e80b:	mov    esi,ecx
  40e80d:	mov    rcx,QWORD PTR [rdx+0x40]
  40e811:	mov    rbx,rdx
  40e814:	call   0x40d350
  40e819:	test   rax,rax
  40e81c:	mov    r8,rax
  40e81f:	je     0x40e832
  40e821:	mov    rdx,QWORD PTR [rbx+0x10]
  40e825:	mov    ecx,esi
  40e827:	add    rsp,0x28
  40e82b:	pop    rbx
  40e82c:	pop    rsi
  40e82d:	jmp    0x40e6c0
  40e832:	xor    eax,eax
  40e834:	add    rsp,0x28
  40e838:	pop    rbx
  40e839:	pop    rsi
  40e83a:	ret    
  40e83b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e840:	push   rbp
  40e841:	push   rdi
  40e842:	push   rsi
  40e843:	push   rbx
  40e844:	sub    rsp,0x28
  40e848:	mov    edx,DWORD PTR [rcx+0x8]
  40e84b:	mov    rsi,rcx
  40e84e:	cmp    edx,0x65
  40e851:	je     0x40e9a5
  40e857:	jle    0x40e970
  40e85d:	cmp    edx,0x66
  40e860:	je     0x40e950
  40e866:	cmp    edx,0x68
  40e869:	jne    0x40e9f0
  40e86f:	mov    ecx,DWORD PTR [rcx+0x38]
  40e872:	xor    edi,edi
  40e874:	test   ecx,ecx
  40e876:	jne    0x40ea72
  40e87c:	nop    DWORD PTR [rax+0x0]
  40e880:	mov    ecx,edi
  40e882:	call   0x411ac0
  40e887:	test   rax,rax
  40e88a:	mov    rbx,rax
  40e88d:	je     0x40e8a0
  40e88f:	mov    rdx,QWORD PTR [rax+0x10]
  40e893:	mov    rcx,QWORD PTR [rsi+0x10]
  40e897:	call   0x41db60
  40e89c:	test   eax,eax
  40e89e:	je     0x40e8f0
  40e8a0:	add    edi,0x1
  40e8a3:	cmp    edi,0xd
  40e8a6:	jne    0x40e880
  40e8a8:	mov    rcx,QWORD PTR [rsi+0x40]
  40e8ac:	call   0x40d350
  40e8b1:	test   rax,rax
  40e8b4:	mov    rdi,rax
  40e8b7:	jne    0x40e8cd
  40e8b9:	jmp    0x40eab0
  40e8be:	xchg   ax,ax
  40e8c0:	mov    rdi,QWORD PTR [rdi+0x20]
  40e8c4:	test   rdi,rdi
  40e8c7:	je     0x40eab0
  40e8cd:	mov    rdx,QWORD PTR [rsi+0x10]
  40e8d1:	mov    r8,rdi
  40e8d4:	mov    ecx,0x68
  40e8d9:	call   0x40e6c0
  40e8de:	test   rax,rax
  40e8e1:	mov    rbx,rax
  40e8e4:	je     0x40e8c0
  40e8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e8f0:	mov    rax,QWORD PTR [rip+0x1cdc9]        # 0x42b6c0
  40e8f7:	cmp    DWORD PTR [rax],0x1
  40e8fa:	jle    0x40e944
  40e8fc:	mov    ecx,DWORD PTR [rsi+0x8]
  40e8ff:	cmp    ecx,0x68
  40e902:	je     0x40e995
  40e908:	call   0x415750
  40e90d:	mov    rbp,rax
  40e910:	test   rbx,rbx
  40e913:	lea    rdi,[rip+0x14b02]        # 0x42341c
  40e91a:	je     0x40e927
  40e91c:	mov    rcx,rbx
  40e91f:	call   0x4159d0
  40e924:	mov    rdi,rax
  40e927:	mov    rcx,rsi
  40e92a:	call   0x4159d0
  40e92f:	lea    rcx,[rip+0x14b43]        # 0x423479
  40e936:	mov    r8,rax
  40e939:	mov    r9,rdi
  40e93c:	mov    rdx,rbp
  40e93f:	call   0x406280
  40e944:	mov    rax,rbx
  40e947:	add    rsp,0x28
  40e94b:	pop    rbx
  40e94c:	pop    rsi
  40e94d:	pop    rdi
  40e94e:	pop    rbp
  40e94f:	ret    
  40e950:	mov    edx,DWORD PTR [rcx+0x38]
  40e953:	test   edx,edx
  40e955:	je     0x40ea50
  40e95b:	mov    rdx,rcx
  40e95e:	mov    ecx,0x66
  40e963:	call   0x40e800
  40e968:	mov    rbx,rax
  40e96b:	jmp    0x40e8f0
  40e96d:	nop    DWORD PTR [rax]
  40e970:	cmp    edx,0x64
  40e973:	jne    0x40e9f0
  40e975:	mov    eax,DWORD PTR [rcx+0x38]
  40e978:	test   eax,eax
  40e97a:	je     0x40ea25
  40e980:	mov    rdx,rcx
  40e983:	mov    ecx,0x64
  40e988:	call   0x40e800
  40e98d:	mov    rbx,rax
  40e990:	jmp    0x40e8f0
  40e995:	mov    ecx,DWORD PTR [rsi+0xc]
  40e998:	call   0x415750
  40e99d:	mov    rbp,rax
  40e9a0:	jmp    0x40e910
  40e9a5:	mov    r8d,DWORD PTR [rcx+0x38]
  40e9a9:	test   r8d,r8d
  40e9ac:	jne    0x40ea10
  40e9ae:	mov    rcx,QWORD PTR [rcx+0x40]
  40e9b2:	call   0x40d350
  40e9b7:	test   rax,rax
  40e9ba:	mov    rdi,rax
  40e9bd:	jne    0x40e9ca
  40e9bf:	jmp    0x40ea04
  40e9c1:	mov    rdi,QWORD PTR [rdi+0x20]
  40e9c5:	test   rdi,rdi
  40e9c8:	je     0x40ea04
  40e9ca:	mov    rdx,QWORD PTR [rsi+0x10]
  40e9ce:	mov    r8,rdi
  40e9d1:	mov    ecx,0x65
  40e9d6:	call   0x40e6c0
  40e9db:	test   rax,rax
  40e9de:	mov    rbx,rax
  40e9e1:	je     0x40e9c1
  40e9e3:	jmp    0x40e8f0
  40e9e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e9f0:	lea    rcx,[rip+0x14a2a]        # 0x423421
  40e9f7:	call   0x406300
  40e9fc:	test   eax,eax
  40e9fe:	je     0x40ea90
  40ea04:	xor    ebx,ebx
  40ea06:	jmp    0x40e8f0
  40ea0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea10:	mov    rdx,rcx
  40ea13:	mov    ecx,0x65
  40ea18:	call   0x40e800
  40ea1d:	mov    rbx,rax
  40ea20:	jmp    0x40e8f0
  40ea25:	mov    rcx,QWORD PTR [rcx+0x40]
  40ea29:	call   0x40d350
  40ea2e:	mov    rdx,QWORD PTR [rsi+0x10]
  40ea32:	mov    r8,rax
  40ea35:	mov    ecx,0x64
  40ea3a:	call   0x40e6c0
  40ea3f:	mov    rbx,rax
  40ea42:	jmp    0x40e8f0
  40ea47:	nop    WORD PTR [rax+rax*1+0x0]
  40ea50:	mov    rcx,QWORD PTR [rcx+0x40]
  40ea54:	call   0x40d350
  40ea59:	mov    rdx,QWORD PTR [rsi+0x10]
  40ea5d:	mov    r8,rax
  40ea60:	mov    ecx,0x66
  40ea65:	call   0x40e6c0
  40ea6a:	mov    rbx,rax
  40ea6d:	jmp    0x40e8f0
  40ea72:	mov    rdx,rsi
  40ea75:	mov    ecx,0x68
  40ea7a:	call   0x40e800
  40ea7f:	mov    rbx,rax
  40ea82:	jmp    0x40e8f0
  40ea87:	nop    WORD PTR [rax+rax*1+0x0]
  40ea90:	lea    rdx,[rip+0x14400]        # 0x422e97
  40ea97:	lea    rcx,[rip+0x149a2]        # 0x423440
  40ea9e:	mov    r8d,0x9c
  40eaa4:	xor    ebx,ebx
  40eaa6:	call   0x41da30
  40eaab:	jmp    0x40e8f0
  40eab0:	mov    rax,QWORD PTR [rip+0x1ce09]        # 0x42b8c0
  40eab7:	mov    rcx,rsi
  40eaba:	mov    rdx,QWORD PTR [rax]
  40eabd:	call   0x40e770
  40eac2:	mov    rbx,rax
  40eac5:	jmp    0x40e8f0
  40eaca:	nop    WORD PTR [rax+rax*1+0x0]
  40ead0:	sub    rsp,0x38
  40ead4:	cmp    ecx,0xc
  40ead7:	ja     0x40eb30
  40ead9:	lea    rax,[rip+0x149f4]        # 0x4234d4
  40eae0:	mov    ecx,ecx
  40eae2:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40eae6:	add    rax,rdx
  40eae9:	jmp    rax
  40eaeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40eaf0:	mov    eax,0x8
  40eaf5:	add    rsp,0x38
  40eaf9:	ret    
  40eafa:	nop    WORD PTR [rax+rax*1+0x0]
  40eb00:	mov    eax,0x4
  40eb05:	add    rsp,0x38
  40eb09:	ret    
  40eb0a:	nop    WORD PTR [rax+rax*1+0x0]
  40eb10:	mov    eax,0x2
  40eb15:	add    rsp,0x38
  40eb19:	ret    
  40eb1a:	nop    WORD PTR [rax+rax*1+0x0]
  40eb20:	mov    eax,0x1
  40eb25:	jmp    0x40eaf5
  40eb27:	nop    WORD PTR [rax+rax*1+0x0]
  40eb30:	lea    rcx,[rip+0x14958]        # 0x42348f
  40eb37:	call   0x406300
  40eb3c:	mov    edx,eax
  40eb3e:	xor    eax,eax
  40eb40:	test   edx,edx
  40eb42:	jne    0x40eaf5
  40eb44:	lea    rdx,[rip+0x1434c]        # 0x422e97
  40eb4b:	lea    rcx,[rip+0x1495e]        # 0x4234b0
  40eb52:	mov    r8d,0x3a4
  40eb58:	mov    QWORD PTR [rsp+0x28],rax
  40eb5d:	call   0x41da30
  40eb62:	mov    rax,QWORD PTR [rsp+0x28]
  40eb67:	jmp    0x40eaf5
  40eb69:	nop
  40eb6a:	nop
  40eb6b:	nop
  40eb6c:	nop
  40eb6d:	nop
  40eb6e:	nop
  40eb6f:	nop
  40eb70:	movzx  r8d,BYTE PTR [rdx]
  40eb74:	cmp    r8b,0x22
  40eb78:	je     0x40ebb0
  40eb7a:	test   rcx,rcx
  40eb7d:	je     0x40ec20
  40eb83:	mov    rax,rcx
  40eb86:	test   r8b,r8b
  40eb89:	mov    BYTE PTR [rax],r8b
  40eb8c:	je     0x40eba2
  40eb8e:	add    rdx,0x1
  40eb92:	movzx  r8d,BYTE PTR [rdx]
  40eb96:	add    rax,0x1
  40eb9a:	test   r8b,r8b
  40eb9d:	mov    BYTE PTR [rax],r8b
  40eba0:	jne    0x40eb8e
  40eba2:	sub    rax,rcx
  40eba5:	repz ret 
  40eba7:	nop    WORD PTR [rax+rax*1+0x0]
  40ebb0:	mov    r9,rdx
  40ebb3:	xor    eax,eax
  40ebb5:	movzx  r8d,BYTE PTR [r9+0x1]
  40ebba:	cmp    r8b,0x27
  40ebbe:	je     0x40ec10
  40ebc0:	jle    0x40ebf0
  40ebc2:	cmp    r8b,0x2c
  40ebc6:	je     0x40ec10
  40ebc8:	cmp    r8b,0x5c
  40ebcc:	jne    0x40ec00
  40ebce:	cmp    BYTE PTR [r9+0x2],0x5c
  40ebd3:	lea    r8,[r9+0x2]
  40ebd7:	jne    0x40ec10
  40ebd9:	mov    r9,r8
  40ebdc:	test   rcx,rcx
  40ebdf:	je     0x40ebe9
  40ebe1:	movzx  r8d,BYTE PTR [r9]
  40ebe5:	mov    BYTE PTR [rcx+rax*1],r8b
  40ebe9:	add    rax,0x1
  40ebed:	jmp    0x40ebb5
  40ebef:	nop
  40ebf0:	cmp    r8b,0x22
  40ebf4:	jne    0x40ec00
  40ebf6:	test   rcx,rcx
  40ebf9:	je     0x40eba5
  40ebfb:	mov    BYTE PTR [rcx+rax*1],0x0
  40ebff:	ret    
  40ec00:	add    r9,0x1
  40ec04:	jmp    0x40ebdc
  40ec06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ec10:	test   rcx,rcx
  40ec13:	movzx  r8d,BYTE PTR [rdx]
  40ec17:	jne    0x40eb83
  40ec1d:	nop    DWORD PTR [rax]
  40ec20:	xor    eax,eax
  40ec22:	test   r8b,r8b
  40ec25:	je     0x40eba5
  40ec2b:	add    rax,0x1
  40ec2f:	cmp    BYTE PTR [rdx+rax*1],0x0
  40ec33:	jne    0x40ec2b
  40ec35:	repz ret 
  40ec37:	nop    WORD PTR [rax+rax*1+0x0]
  40ec40:	push   r15
  40ec42:	push   r14
  40ec44:	push   r13
  40ec46:	push   r12
  40ec48:	push   rbp
  40ec49:	push   rdi
  40ec4a:	push   rsi
  40ec4b:	push   rbx
  40ec4c:	sub    rsp,0x68
  40ec50:	lea    rbp,[rip+0x1a169]        # 0x428dc0
  40ec57:	movsxd rax,r9d
  40ec5a:	mov    QWORD PTR [rsp+0xb0],rcx
  40ec62:	mov    QWORD PTR [rsp+0xb8],rdx
  40ec6a:	mov    rsi,QWORD PTR [rbp+rax*8+0x0]
  40ec6f:	mov    rbx,rax
  40ec72:	xor    ecx,ecx
  40ec74:	mov    rdi,r8
  40ec77:	mov    rdx,rsi
  40ec7a:	call   0x40eb70
  40ec7f:	cmp    ebx,0xfffffffe
  40ec82:	mov    r14,rax
  40ec85:	mov    QWORD PTR [rsp+0x28],rax
  40ec8a:	je     0x40ee30
  40ec90:	movsx  rdx,WORD PTR [rdi]
  40ec94:	lea    rax,[rip+0x19aa5]        # 0x428740
  40ec9b:	mov    QWORD PTR [rsp+0x30],rsi
  40eca0:	movsx  r12d,WORD PTR [rax+rdx*2]
  40eca5:	cmp    r12d,0xffffff84
  40eca9:	je     0x40ee50
  40ecaf:	mov    ebx,r12d
  40ecb2:	mov    eax,0x0
  40ecb7:	mov    edi,0x170
  40ecbc:	neg    ebx
  40ecbe:	test   r12d,r12d
  40ecc1:	cmovns ebx,eax
  40ecc4:	sub    edi,r12d
  40ecc7:	mov    al,0x3c
  40ecc9:	cmp    edi,0x3c
  40eccc:	cmovg  edi,eax
  40eccf:	cmp    ebx,edi
  40ecd1:	jge    0x40ee50
  40ecd7:	lea    r13,[rip+0x191e2]        # 0x427ec0
  40ecde:	mov    esi,0x1
  40ece3:	lea    r8d,[rbx+r12*1]
  40ece7:	movsxd r8,r8d
  40ecea:	movsx  eax,WORD PTR [r13+r8*2+0x0]
  40ecf0:	cmp    ebx,eax
  40ecf2:	jne    0x40ed25
  40ecf4:	cmp    ebx,0x1
  40ecf7:	je     0x40ed25
  40ecf9:	cmp    esi,0x5
  40ecfc:	je     0x40ee50
  40ed02:	movsxd rax,ebx
  40ed05:	xor    ecx,ecx
  40ed07:	lea    r15d,[rsi+0x1]
  40ed0b:	mov    rdx,QWORD PTR [rbp+rax*8+0x0]
  40ed10:	mov    QWORD PTR [rsp+rsi*8+0x30],rdx
  40ed15:	call   0x40eb70
  40ed1a:	add    rax,r14
  40ed1d:	jb     0x40ed58
  40ed1f:	movsxd rsi,r15d
  40ed22:	mov    r14,rax
  40ed25:	add    ebx,0x1
  40ed28:	cmp    ebx,edi
  40ed2a:	jne    0x40ece3
  40ed2c:	cmp    esi,0x5
  40ed2f:	ja     0x40ed6e
  40ed31:	lea    rax,[rip+0x14908]        # 0x423640
  40ed38:	mov    edx,esi
  40ed3a:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40ed3e:	add    rax,rdx
  40ed41:	jmp    rax
  40ed43:	xor    edx,edx
  40ed45:	add    rdx,0x1
  40ed49:	cmp    BYTE PTR [rbx+rdx*1],0x0
  40ed4d:	jne    0x40ed45
  40ed4f:	add    rdx,r14
  40ed52:	jae    0x40ee7f
  40ed58:	mov    eax,0x2
  40ed5d:	add    rsp,0x68
  40ed61:	pop    rbx
  40ed62:	pop    rsi
  40ed63:	pop    rdi
  40ed64:	pop    rbp
  40ed65:	pop    r12
  40ed67:	pop    r13
  40ed69:	pop    r14
  40ed6b:	pop    r15
  40ed6d:	ret    
  40ed6e:	movzx  eax,BYTE PTR ds:0x0
  40ed76:	ud2    
  40ed78:	lea    rbx,[rip+0x14889]        # 0x423608
  40ed7f:	nop
  40ed80:	movzx  eax,BYTE PTR [rbx]
  40ed83:	test   al,al
  40ed85:	jne    0x40ed43
  40ed87:	mov    rcx,QWORD PTR [rsp+0xb0]
  40ed8f:	cmp    QWORD PTR [rcx],r14
  40ed92:	jae    0x40edd0
  40ed94:	lea    rax,[r14+r14*1]
  40ed98:	cmp    rax,r14
  40ed9b:	jb     0x40ee66
  40eda1:	mov    QWORD PTR [rcx],rax
  40eda4:	mov    eax,0x1
  40eda9:	jmp    0x40ed5d
  40edab:	lea    rbx,[rip+0x1478e]        # 0x423540
  40edb2:	jmp    0x40ed80
  40edb4:	lea    rbx,[rip+0x147ed]        # 0x4235a8
  40edbb:	jmp    0x40ed80
  40edbd:	lea    rbx,[rip+0x14814]        # 0x4235d8
  40edc4:	jmp    0x40ed80
  40edc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40edd0:	mov    rcx,QWORD PTR [rsp+0xb8]
  40edd8:	xor    edx,edx
  40edda:	mov    rdi,QWORD PTR [rcx]
  40eddd:	jmp    0x40ede8
  40eddf:	nop
  40ede0:	add    rdi,0x1
  40ede4:	add    rbx,0x1
  40ede8:	test   al,al
  40edea:	mov    BYTE PTR [rdi],al
  40edec:	je     0x40ee20
  40edee:	cmp    al,0x25
  40edf0:	movzx  eax,BYTE PTR [rbx+0x1]
  40edf4:	jne    0x40ede0
  40edf6:	cmp    al,0x73
  40edf8:	jne    0x40ede0
  40edfa:	cmp    edx,esi
  40edfc:	jge    0x40ede0
  40edfe:	lea    ebp,[rdx+0x1]
  40ee01:	mov    rdx,QWORD PTR [rsp+rdx*8+0x30]
  40ee06:	mov    rcx,rdi
  40ee09:	add    rbx,0x2
  40ee0d:	call   0x40eb70
  40ee12:	movsxd rdx,ebp
  40ee15:	add    rdi,rax
  40ee18:	movzx  eax,BYTE PTR [rbx]
  40ee1b:	jmp    0x40ede8
  40ee1d:	nop    DWORD PTR [rax]
  40ee20:	xor    eax,eax
  40ee22:	jmp    0x40ed5d
  40ee27:	nop    WORD PTR [rax+rax*1+0x0]
  40ee30:	mov    r14,QWORD PTR [rsp+0x28]
  40ee35:	xor    esi,esi
  40ee37:	lea    rbx,[rip+0x1473e]        # 0x42357c
  40ee3e:	jmp    0x40ed80
  40ee43:	mov    QWORD PTR [rsp+0x28],r14
  40ee48:	nop    DWORD PTR [rax+rax*1+0x0]
  40ee50:	mov    r14,QWORD PTR [rsp+0x28]
  40ee55:	mov    esi,0x1
  40ee5a:	lea    rbx,[rip+0x14728]        # 0x423589
  40ee61:	jmp    0x40ed80
  40ee66:	mov    rax,QWORD PTR [rsp+0xb0]
  40ee6e:	mov    QWORD PTR [rax],0xffffffffffffffff
  40ee75:	mov    eax,0x1
  40ee7a:	jmp    0x40ed5d
  40ee7f:	mov    r14,rdx
  40ee82:	jmp    0x40ed87
  40ee87:	nop    WORD PTR [rax+rax*1+0x0]
  40ee90:	mov    rax,QWORD PTR [rip+0x23629]        # 0x4324c0
  40ee97:	mov    rdx,QWORD PTR [rip+0x23632]        # 0x4324d0
  40ee9e:	lea    rdx,[rax+rdx*8]
  40eea2:	mov    rax,QWORD PTR [rdx]
  40eea5:	mov    ecx,DWORD PTR [rax+0x20]
  40eea8:	mov    rax,QWORD PTR [rax+0x10]
  40eeac:	mov    QWORD PTR [rip+0x249dd],rax        # 0x433890
  40eeb3:	mov    rdx,QWORD PTR [rdx]
  40eeb6:	mov    QWORD PTR [rip+0x235f3],rax        # 0x4324b0
  40eebd:	mov    DWORD PTR [rip+0x235f5],ecx        # 0x4324b8
  40eec3:	mov    rdx,QWORD PTR [rdx]
  40eec6:	mov    QWORD PTR [rip+0x235c3],rdx        # 0x432490
  40eecd:	movzx  eax,BYTE PTR [rax]
  40eed0:	mov    BYTE PTR [rip+0x235e6],al        # 0x4324bc
  40eed6:	ret    
  40eed7:	nop    WORD PTR [rax+rax*1+0x0]
  40eee0:	push   rdi
  40eee1:	push   rsi
  40eee2:	push   rbx
  40eee3:	sub    rsp,0x20
  40eee7:	test   rcx,rcx
  40eeea:	je     0x40ef40
  40eeec:	mov    rdi,QWORD PTR [rcx+0x10]
  40eef0:	mov    rbx,QWORD PTR [rcx+0x20]
  40eef4:	test   rdi,rdi
  40eef7:	je     0x40ef40
  40eef9:	xor    esi,esi
  40eefb:	jmp    0x40ef12
  40eefd:	nop    DWORD PTR [rax]
  40ef00:	cmp    eax,0x1f
  40ef03:	je     0x40ef30
  40ef05:	add    rsi,0x1
  40ef09:	add    rbx,0x20
  40ef0d:	cmp    rsi,rdi
  40ef10:	je     0x40ef40
  40ef12:	mov    eax,DWORD PTR [rbx]
  40ef14:	cmp    eax,0x10
  40ef17:	jne    0x40ef00
  40ef19:	mov    rcx,QWORD PTR [rbx+0x8]
  40ef1d:	call   0x40eee0
  40ef22:	test   eax,eax
  40ef24:	je     0x40ef05
  40ef26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef30:	mov    eax,0x1
  40ef35:	add    rsp,0x20
  40ef39:	pop    rbx
  40ef3a:	pop    rsi
  40ef3b:	pop    rdi
  40ef3c:	ret    
  40ef3d:	nop    DWORD PTR [rax]
  40ef40:	xor    eax,eax
  40ef42:	add    rsp,0x20
  40ef46:	pop    rbx
  40ef47:	pop    rsi
  40ef48:	pop    rdi
  40ef49:	ret    
  40ef4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ef50:	push   rbp
  40ef51:	push   rdi
  40ef52:	push   rsi
  40ef53:	push   rbx
  40ef54:	sub    rsp,0x28
  40ef58:	mov    rdi,QWORD PTR [rip+0x25779]        # 0x4346d8
  40ef5f:	mov    rbx,rcx
  40ef62:	mov    rbp,rdx
  40ef65:	call   rdi
  40ef67:	lea    rcx,[rip+0x146ea]        # 0x423658
  40ef6e:	lea    r9,[rax+0x60]
  40ef72:	mov    r8d,0x9
  40ef78:	mov    edx,0x1
  40ef7d:	call   0x41dbf8
  40ef82:	cmp    rbx,rbp
  40ef85:	ja     0x40efb1
  40ef87:	nop    WORD PTR [rax+rax*1+0x0]
  40ef90:	movsx  esi,WORD PTR [rbx]
  40ef93:	add    rbx,0x2
  40ef97:	call   rdi
  40ef99:	lea    rdx,[rip+0x146c2]        # 0x423662
  40efa0:	lea    rcx,[rax+0x60]
  40efa4:	mov    r8d,esi
  40efa7:	call   0x41dc28
  40efac:	cmp    rbp,rbx
  40efaf:	jae    0x40ef90
  40efb1:	call   rdi
  40efb3:	lea    rdx,[rax+0x60]
  40efb7:	mov    ecx,0xa
  40efbc:	add    rsp,0x28
  40efc0:	pop    rbx
  40efc1:	pop    rsi
  40efc2:	pop    rdi
  40efc3:	pop    rbp
  40efc4:	jmp    0x41dc20
  40efc9:	nop    DWORD PTR [rax+0x0]
  40efd0:	push   rbp
  40efd1:	push   rdi
  40efd2:	push   rsi
  40efd3:	push   rbx
  40efd4:	sub    rsp,0x28
  40efd8:	test   rdx,rdx
  40efdb:	mov    edi,ecx
  40efdd:	je     0x40f030
  40efdf:	mov    rsi,QWORD PTR [rdx+0x20]
  40efe3:	test   rsi,rsi
  40efe6:	je     0x40f030
  40efe8:	mov    rcx,QWORD PTR [rsi+0x30]
  40efec:	test   rcx,rcx
  40efef:	je     0x40f030
  40eff1:	mov    rbp,rdx
  40eff4:	xor    ebx,ebx
  40eff6:	jmp    0x40f024
  40eff8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f000:	mov    eax,DWORD PTR [rcx+0x4]
  40f003:	cmp    ebx,eax
  40f005:	jge    0x40f030
  40f007:	mov    edx,ebx
  40f009:	call   0x416670
  40f00e:	mov    edx,DWORD PTR [rax+0x2110]
  40f014:	test   edx,edx
  40f016:	jne    0x40f01d
  40f018:	cmp    DWORD PTR [rax+0x8],edi
  40f01b:	je     0x40f040
  40f01d:	mov    rcx,QWORD PTR [rsi+0x30]
  40f021:	add    ebx,0x1
  40f024:	test   rcx,rcx
  40f027:	jne    0x40f000
  40f029:	xor    eax,eax
  40f02b:	cmp    ebx,eax
  40f02d:	jl     0x40f007
  40f02f:	nop
  40f030:	xor    eax,eax
  40f032:	add    rsp,0x28
  40f036:	pop    rbx
  40f037:	pop    rsi
  40f038:	pop    rdi
  40f039:	pop    rbp
  40f03a:	ret    
  40f03b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f040:	mov    rdx,QWORD PTR [rbp+0x10]
  40f044:	mov    rcx,QWORD PTR [rax+0x10]
  40f048:	call   0x41db60
  40f04d:	test   eax,eax
  40f04f:	jne    0x40f01d
  40f051:	mov    eax,0x1
  40f056:	jmp    0x40f032
  40f058:	nop    DWORD PTR [rax+rax*1+0x0]
  40f060:	mov    rcx,QWORD PTR [rip+0x23491]        # 0x4324f8
  40f067:	test   rcx,rcx
  40f06a:	je     0x40f073
  40f06c:	mov    eax,DWORD PTR [rcx+0x4]
  40f06f:	test   eax,eax
  40f071:	jne    0x40f080
  40f073:	mov    rax,QWORD PTR [rip+0x24866]        # 0x4338e0
  40f07a:	ret    
  40f07b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f080:	jmp    0x4167d0
  40f085:	nop
  40f086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f090:	push   rbx
  40f091:	sub    rsp,0x20
  40f095:	mov    rbx,rcx
  40f098:	call   0x40f060
  40f09d:	mov    rcx,QWORD PTR [rax+0x30]
  40f0a1:	mov    rdx,rbx
  40f0a4:	mov    QWORD PTR [rbx+0x20],rax
  40f0a8:	call   0x416750
  40f0ad:	mov    rcx,QWORD PTR [rip+0x23444]        # 0x4324f8
  40f0b4:	mov    DWORD PTR [rbx+0x38],0x0
  40f0bb:	call   0x415590
  40f0c0:	mov    QWORD PTR [rbx+0x40],rax
  40f0c4:	add    rsp,0x20
  40f0c8:	pop    rbx
  40f0c9:	ret    
  40f0ca:	nop    WORD PTR [rax+rax*1+0x0]
  40f0d0:	push   r12
  40f0d2:	push   rbp
  40f0d3:	push   rdi
  40f0d4:	push   rsi
  40f0d5:	push   rbx
  40f0d6:	sub    rsp,0x20
  40f0da:	mov    edi,DWORD PTR [rsp+0x70]
  40f0de:	mov    rbx,rcx
  40f0e1:	mov    DWORD PTR [rcx+0x8],0x67
  40f0e8:	mov    r12,rdx
  40f0eb:	mov    QWORD PTR [rbx+0x48],r9
  40f0ef:	mov    rbp,r8
  40f0f2:	mov    rsi,r9
  40f0f5:	call   0x40f090
  40f0fa:	test   edi,edi
  40f0fc:	je     0x40f160
  40f0fe:	cmp    edi,0x1
  40f101:	je     0x40f140
  40f103:	lea    rcx,[rip+0x1455c]        # 0x423666
  40f10a:	mov    edx,edi
  40f10c:	call   0x406300
  40f111:	test   eax,eax
  40f113:	je     0x40f180
  40f115:	mov    rcx,rsi
  40f118:	call   0x40eee0
  40f11d:	test   eax,eax
  40f11f:	je     0x40f131
  40f121:	mov    rdx,QWORD PTR [rbx+0x10]
  40f125:	lea    rcx,[rip+0x14594]        # 0x4236c0
  40f12c:	call   0x40b3d0
  40f131:	mov    rax,rbx
  40f134:	add    rsp,0x20
  40f138:	pop    rbx
  40f139:	pop    rsi
  40f13a:	pop    rdi
  40f13b:	pop    rbp
  40f13c:	pop    r12
  40f13e:	ret    
  40f13f:	nop
  40f140:	mov    rcx,QWORD PTR [rip+0x24739]        # 0x433880
  40f147:	mov    QWORD PTR [rbx+0x20f0],0x0
  40f152:	mov    rdx,rbx
  40f155:	mov    QWORD PTR [rbx+0x50],rbp
  40f159:	call   0x416750
  40f15e:	jmp    0x40f115
  40f160:	mov    rcx,QWORD PTR [rip+0x24711]        # 0x433878
  40f167:	mov    QWORD PTR [rbx+0x20f0],r12
  40f16e:	mov    rdx,rbx
  40f171:	mov    QWORD PTR [rbx+0x50],rbp
  40f175:	call   0x416750
  40f17a:	jmp    0x40f115
  40f17c:	nop    DWORD PTR [rax+0x0]
  40f180:	lea    rdx,[rip+0x144fd]        # 0x423684
  40f187:	lea    rcx,[rip+0x14502]        # 0x423690
  40f18e:	mov    r8d,0x550
  40f194:	call   0x41da30
  40f199:	jmp    0x40f115
  40f19e:	xchg   ax,ax
  40f1a0:	push   rbp
  40f1a1:	push   rdi
  40f1a2:	push   rsi
  40f1a3:	push   rbx
  40f1a4:	sub    rsp,0x48
  40f1a8:	mov    ebp,DWORD PTR [rip+0x2473a]        # 0x4338e8
  40f1ae:	lea    rax,[rsp+0x78]
  40f1b3:	mov    QWORD PTR [rsp+0x78],rdx
  40f1b8:	mov    QWORD PTR [rsp+0x80],r8
  40f1c0:	mov    QWORD PTR [rsp+0x88],r9
  40f1c8:	mov    rbx,rcx
  40f1cb:	mov    QWORD PTR [rsp+0x38],rax
  40f1d0:	mov    rax,QWORD PTR [rip+0x1c4a9]        # 0x42b680
  40f1d7:	mov    rdi,QWORD PTR [rax]
  40f1da:	mov    rax,QWORD PTR [rip+0x1c6cf]        # 0x42b8b0
  40f1e1:	mov    rsi,QWORD PTR [rax]
  40f1e4:	call   QWORD PTR [rip+0x254ee]        # 0x4346d8
  40f1ea:	lea    rdx,[rip+0x14508]        # 0x4236f9
  40f1f1:	lea    rcx,[rax+0x60]
  40f1f5:	mov    r9,rdi
  40f1f8:	mov    r8,rsi
  40f1fb:	mov    DWORD PTR [rsp+0x20],ebp
  40f1ff:	call   0x41dc28
  40f204:	mov    rdx,QWORD PTR [rsp+0x38]
  40f209:	mov    rcx,rbx
  40f20c:	call   0x40b380
  40f211:	nop
  40f212:	add    rsp,0x48
  40f216:	pop    rbx
  40f217:	pop    rsi
  40f218:	pop    rdi
  40f219:	pop    rbp
  40f21a:	ret    
  40f21b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f220:	push   r13
  40f222:	push   r12
  40f224:	push   rbp
  40f225:	push   rdi
  40f226:	push   rsi
  40f227:	push   rbx
  40f228:	sub    rsp,0x48
  40f22c:	mov    r8,QWORD PTR [rip+0x1c62d]        # 0x42b860
  40f233:	mov    ebp,DWORD PTR [rip+0x246af]        # 0x4338e8
  40f239:	mov    edi,edx
  40f23b:	mov    rbx,rcx
  40f23e:	cmp    edi,0x20
  40f241:	mov    DWORD PTR [rip+0x232a5],edi        # 0x4324ec
  40f247:	mov    rax,QWORD PTR [r8]
  40f24a:	mov    rdx,QWORD PTR [r8+0x18]
  40f24e:	mov    QWORD PTR [rsp+0x20],rax
  40f253:	mov    rax,QWORD PTR [r8+0x8]
  40f257:	mov    QWORD PTR [rsp+0x38],rdx
  40f25c:	mov    QWORD PTR [rsp+0x28],rax
  40f261:	mov    rax,QWORD PTR [r8+0x10]
  40f265:	mov    QWORD PTR [rsp+0x30],rax
  40f26a:	mov    rsi,rax
  40f26d:	ja     0x40f430
  40f273:	lea    r8,[rip+0x144be]        # 0x423738
  40f27a:	mov    eax,edi
  40f27c:	movsxd rax,DWORD PTR [r8+rax*4]
  40f280:	add    r8,rax
  40f283:	jmp    r8
  40f286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f290:	mov    rax,QWORD PTR [rip+0x245d9]        # 0x433870
  40f297:	test   rax,rax
  40f29a:	je     0x40f455
  40f2a0:	movsxd r13,DWORD PTR [rax+0x8]
  40f2a4:	lea    ecx,[r13+0x1]
  40f2a8:	mov    r12,r13
  40f2ab:	movsxd rcx,ecx
  40f2ae:	call   0x4063a0
  40f2b3:	mov    rsi,rax
  40f2b6:	mov    rax,QWORD PTR [rip+0x245b3]        # 0x433870
  40f2bd:	test   rax,rax
  40f2c0:	je     0x40f469
  40f2c6:	mov    rax,QWORD PTR [rax+0x10]
  40f2ca:	lea    rdx,[rip+0x14439]        # 0x42370a
  40f2d1:	test   rax,rax
  40f2d4:	cmovne rdx,rax
  40f2d8:	mov    r8,r13
  40f2db:	mov    rcx,rsi
  40f2de:	call   0x41db38
  40f2e3:	mov    BYTE PTR [rsi+r13*1],0x0
  40f2e8:	mov    DWORD PTR [rsp+0x28],r12d
  40f2ed:	nop    DWORD PTR [rax]
  40f2f0:	mov    DWORD PTR [rsp+0x20],edi
  40f2f4:	mov    DWORD PTR [rsp+0x24],ebp
  40f2f8:	mov    rax,QWORD PTR [rsp+0x20]
  40f2fd:	mov    DWORD PTR [rsp+0x38],0x0
  40f305:	mov    QWORD PTR [rbx+0x10],rsi
  40f309:	mov    QWORD PTR [rbx],rax
  40f30c:	mov    rax,QWORD PTR [rsp+0x28]
  40f311:	mov    QWORD PTR [rbx+0x8],rax
  40f315:	mov    rax,QWORD PTR [rsp+0x38]
  40f31a:	mov    QWORD PTR [rbx+0x18],rax
  40f31e:	mov    rax,rbx
  40f321:	add    rsp,0x48
  40f325:	pop    rbx
  40f326:	pop    rsi
  40f327:	pop    rdi
  40f328:	pop    rbp
  40f329:	pop    r12
  40f32b:	pop    r13
  40f32d:	ret    
  40f32e:	xchg   ax,ax
  40f330:	movzx  eax,BYTE PTR [rip+0x24451]        # 0x433788
  40f337:	mov    BYTE PTR [rsp+0x28],al
  40f33b:	jmp    0x40f2f0
  40f33d:	nop    DWORD PTR [rax]
  40f340:	movzx  eax,BYTE PTR [rip+0x2447d]        # 0x4337c4
  40f347:	mov    BYTE PTR [rsp+0x28],al
  40f34b:	jmp    0x40f2f0
  40f34d:	nop    DWORD PTR [rax]
  40f350:	movzx  eax,WORD PTR [rip+0x24479]        # 0x4337d0
  40f357:	mov    WORD PTR [rsp+0x28],ax
  40f35c:	jmp    0x40f2f0
  40f35e:	xchg   ax,ax
  40f360:	mov    eax,DWORD PTR [rip+0x2445a]        # 0x4337c0
  40f366:	mov    DWORD PTR [rsp+0x28],eax
  40f36a:	jmp    0x40f2f0
  40f36c:	nop    DWORD PTR [rax+0x0]
  40f370:	movss  xmm0,DWORD PTR [rip+0x24530]        # 0x4338a8
  40f378:	movss  DWORD PTR [rsp+0x28],xmm0
  40f37e:	jmp    0x40f2f0
  40f383:	movsd  xmm0,QWORD PTR [rip+0x2453d]        # 0x4338c8
  40f38b:	movsd  QWORD PTR [rsp+0x28],xmm0
  40f391:	jmp    0x40f2f0
  40f396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f3a0:	movzx  eax,BYTE PTR [rip+0x2442b]        # 0x4337d2
  40f3a7:	mov    BYTE PTR [rsp+0x28],al
  40f3ab:	jmp    0x40f2f0
  40f3b0:	movzx  eax,WORD PTR [rip+0x2441d]        # 0x4337d4
  40f3b7:	mov    WORD PTR [rsp+0x28],ax
  40f3bc:	jmp    0x40f2f0
  40f3c1:	mov    eax,DWORD PTR [rip+0x244d1]        # 0x433898
  40f3c7:	mov    DWORD PTR [rsp+0x28],eax
  40f3cb:	jmp    0x40f2f0
  40f3d0:	mov    rax,QWORD PTR [rip+0x24501]        # 0x4338d8
  40f3d7:	mov    QWORD PTR [rsp+0x28],rax
  40f3dc:	jmp    0x40f2f0
  40f3e1:	mov    rax,QWORD PTR [rip+0x244b8]        # 0x4338a0
  40f3e8:	mov    QWORD PTR [rsp+0x28],rax
  40f3ed:	jmp    0x40f2f0
  40f3f2:	mov    rcx,QWORD PTR [rip+0x24477]        # 0x433870
  40f3f9:	test   rcx,rcx
  40f3fc:	je     0x40f465
  40f3fe:	mov    eax,DWORD PTR [rcx+0x8]
  40f401:	mov    DWORD PTR [rsp+0x28],eax
  40f405:	call   0x416430
  40f40a:	mov    rsi,rax
  40f40d:	mov    rax,QWORD PTR [rip+0x2445c]        # 0x433870
  40f414:	test   rax,rax
  40f417:	je     0x40f2f0
  40f41d:	mov    DWORD PTR [rax+0x8],0x0
  40f424:	jmp    0x40f2f0
  40f429:	nop    DWORD PTR [rax+0x0]
  40f430:	mov    ecx,edi
  40f432:	xor    esi,esi
  40f434:	call   0x4156c0
  40f439:	lea    rcx,[rip+0x142d0]        # 0x423710
  40f440:	mov    rdx,rax
  40f443:	call   0x40f1a0
  40f448:	mov    DWORD PTR [rsp+0x28],0x0
  40f450:	jmp    0x40f2f0
  40f455:	xor    r13d,r13d
  40f458:	mov    ecx,0x1
  40f45d:	xor    r12d,r12d
  40f460:	jmp    0x40f2ae
  40f465:	xor    eax,eax
  40f467:	jmp    0x40f401
  40f469:	lea    rdx,[rip+0x1429a]        # 0x42370a
  40f470:	jmp    0x40f2d8
  40f475:	nop
  40f476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f480:	push   rbx
  40f481:	sub    rsp,0x20
  40f485:	mov    rbx,rcx
  40f488:	call   QWORD PTR [rip+0x2524a]        # 0x4346d8
  40f48e:	lea    rdx,[rip+0x14327]        # 0x4237bc
  40f495:	lea    rcx,[rax+0x60]
  40f499:	mov    r8,rbx
  40f49c:	call   0x41dc28
  40f4a1:	mov    ecx,0x2
  40f4a6:	call   0x41dc48
  40f4ab:	nop
  40f4ac:	nop    DWORD PTR [rax+0x0]
  40f4b0:	push   rdi
  40f4b1:	push   rsi
  40f4b2:	push   rbx
  40f4b3:	sub    rsp,0x30
  40f4b7:	movsxd rax,DWORD PTR [rip+0x243a6]        # 0x433864
  40f4be:	mov    rbx,QWORD PTR [rip+0x243cb]        # 0x433890
  40f4c5:	mov    esi,ecx
  40f4c7:	mov    BYTE PTR [rbx+rax*1],0x0
  40f4cb:	mov    edi,DWORD PTR [rip+0x24417]        # 0x4338e8
  40f4d1:	call   QWORD PTR [rip+0x25201]        # 0x4346d8
  40f4d7:	lea    rdx,[rip+0x142e2]        # 0x4237c0
  40f4de:	lea    rcx,[rax+0x60]
  40f4e2:	mov    r9,rbx
  40f4e5:	mov    DWORD PTR [rsp+0x20],edi
  40f4e9:	mov    r8d,esi
  40f4ec:	call   0x41dc28
  40f4f1:	add    rsp,0x30
  40f4f5:	pop    rbx
  40f4f6:	pop    rsi
  40f4f7:	pop    rdi
  40f4f8:	ret    
  40f4f9:	nop    DWORD PTR [rax+0x0]
  40f500:	push   rbx
  40f501:	sub    rsp,0x20
  40f505:	lea    rax,[rip+0x198b4]        # 0x428dc0
  40f50c:	lea    r8,[rip+0x142c4]        # 0x4237d7
  40f513:	mov    rbx,rcx
  40f516:	movsxd rcx,edx
  40f519:	cmp    edx,0x3c
  40f51c:	mov    r9,QWORD PTR [rax+rcx*8]
  40f520:	lea    rax,[rip+0x142b6]        # 0x4237dd
  40f527:	lea    rdx,[rip+0x142b5]        # 0x4237e3
  40f52e:	mov    rcx,rbx
  40f531:	cmovge r8,rax
  40f535:	call   0x41dc28
  40f53a:	mov    rdx,rbx
  40f53d:	mov    ecx,0x29
  40f542:	add    rsp,0x20
  40f546:	pop    rbx
  40f547:	jmp    0x41dc20
  40f54c:	nop    DWORD PTR [rax+0x0]
  40f550:	push   rdi
  40f551:	push   rsi
  40f552:	push   rbx
  40f553:	sub    rsp,0x20
  40f557:	lea    rax,[rip+0x1428d]        # 0x4237eb
  40f55e:	test   rcx,rcx
  40f561:	mov    rbx,rcx
  40f564:	mov    edi,edx
  40f566:	cmove  rbx,rax
  40f56a:	mov    eax,DWORD PTR [rip+0x2437c]        # 0x4338ec
  40f570:	test   eax,eax
  40f572:	jne    0x40f580
  40f574:	add    rsp,0x20
  40f578:	pop    rbx
  40f579:	pop    rsi
  40f57a:	pop    rdi
  40f57b:	ret    
  40f57c:	nop    DWORD PTR [rax+0x0]
  40f580:	mov    rsi,QWORD PTR [rip+0x25151]        # 0x4346d8
  40f587:	call   rsi
  40f589:	lea    rdx,[rip+0x14264]        # 0x4237f4
  40f590:	lea    rcx,[rax+0x60]
  40f594:	mov    r8,rbx
  40f597:	call   0x41dc28
  40f59c:	call   rsi
  40f59e:	lea    rcx,[rax+0x60]
  40f5a2:	mov    edx,edi
  40f5a4:	call   0x40f500
  40f5a9:	call   rsi
  40f5ab:	lea    rdx,[rax+0x60]
  40f5af:	mov    ecx,0xa
  40f5b4:	add    rsp,0x20
  40f5b8:	pop    rbx
  40f5b9:	pop    rsi
  40f5ba:	pop    rdi
  40f5bb:	jmp    0x41dc20
  40f5c0:	push   rsi
  40f5c1:	push   rbx
  40f5c2:	sub    rsp,0x38
  40f5c6:	mov    rbx,rcx
  40f5c9:	call   0x41dcb0
  40f5ce:	mov    DWORD PTR [rax],0x0
  40f5d4:	cmp    BYTE PTR [rbx],0x2d
  40f5d7:	lea    rdx,[rsp+0x28]
  40f5dc:	mov    QWORD PTR [rsp+0x28],0x0
  40f5e5:	mov    r8d,0xa
  40f5eb:	mov    rcx,rbx
  40f5ee:	je     0x40f614
  40f5f0:	call   0x41d6d0
  40f5f5:	mov    QWORD PTR [rip+0x242a4],rax        # 0x4338a0
  40f5fc:	mov    esi,0x1
  40f601:	call   0x41dcb0
  40f606:	cmp    DWORD PTR [rax],0x22
  40f609:	je     0x40f62f
  40f60b:	mov    eax,esi
  40f60d:	add    rsp,0x38
  40f611:	pop    rbx
  40f612:	pop    rsi
  40f613:	ret    
  40f614:	call   0x41d470
  40f619:	mov    QWORD PTR [rip+0x242b8],rax        # 0x4338d8
  40f620:	mov    esi,0xffffffff
  40f625:	call   0x41dcb0
  40f62a:	cmp    DWORD PTR [rax],0x22
  40f62d:	jne    0x40f60b
  40f62f:	mov    r8,rbx
  40f632:	lea    rbx,[rip+0x241c7]        # 0x433800
  40f639:	lea    rdx,[rip+0x141b8]        # 0x4237f8
  40f640:	xor    esi,esi
  40f642:	mov    rcx,rbx
  40f645:	call   0x41db80
  40f64a:	mov    rcx,rbx
  40f64d:	call   0x40f1a0
  40f652:	mov    eax,esi
  40f654:	add    rsp,0x38
  40f658:	pop    rbx
  40f659:	pop    rsi
  40f65a:	ret    
  40f65b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f660:	push   rdi
  40f661:	push   rsi
  40f662:	push   rbx
  40f663:	sub    rsp,0x20
  40f667:	mov    rcx,QWORD PTR [rip+0x22e52]        # 0x4324c0
  40f66e:	test   rcx,rcx
  40f671:	je     0x40f6d0
  40f673:	mov    rbx,QWORD PTR [rip+0x22e4e]        # 0x4324c8
  40f67a:	lea    rax,[rbx-0x1]
  40f67e:	cmp    rax,QWORD PTR [rip+0x22e4b]        # 0x4324d0
  40f685:	jbe    0x40f690
  40f687:	add    rsp,0x20
  40f68b:	pop    rbx
  40f68c:	pop    rsi
  40f68d:	pop    rdi
  40f68e:	ret    
  40f68f:	nop
  40f690:	lea    esi,[rbx+0x8]
  40f693:	movsxd rsi,esi
  40f696:	lea    rdx,[rsi*8+0x0]
  40f69e:	call   0x41db98
  40f6a3:	test   rax,rax
  40f6a6:	mov    QWORD PTR [rip+0x22e13],rax        # 0x4324c0
  40f6ad:	je     0x40f702
  40f6af:	lea    rdx,[rax+rbx*8]
  40f6b3:	mov    ecx,0x8
  40f6b8:	xor    eax,eax
  40f6ba:	mov    QWORD PTR [rip+0x22e07],rsi        # 0x4324c8
  40f6c1:	mov    rdi,rdx
  40f6c4:	rep stos QWORD PTR es:[rdi],rax
  40f6c7:	add    rsp,0x20
  40f6cb:	pop    rbx
  40f6cc:	pop    rsi
  40f6cd:	pop    rdi
  40f6ce:	ret    
  40f6cf:	nop
  40f6d0:	mov    cl,0x8
  40f6d2:	call   0x41dbc8
  40f6d7:	test   rax,rax
  40f6da:	mov    QWORD PTR [rip+0x22ddf],rax        # 0x4324c0
  40f6e1:	je     0x40f702
  40f6e3:	mov    QWORD PTR [rax],0x0
  40f6ea:	mov    QWORD PTR [rip+0x22dd3],0x1        # 0x4324c8
  40f6f5:	mov    QWORD PTR [rip+0x22dd0],0x0        # 0x4324d0
  40f700:	jmp    0x40f687
  40f702:	lea    rcx,[rip+0x1411f]        # 0x423828
  40f709:	call   0x40f480
  40f70e:	nop
  40f70f:	nop
  40f710:	push   rbx
  40f711:	sub    rsp,0x20
  40f715:	mov    rbx,rcx
  40f718:	call   0x40f660
  40f71d:	mov    rax,QWORD PTR [rip+0x22d9c]        # 0x4324c0
  40f724:	test   rax,rax
  40f727:	je     0x40f780
  40f729:	mov    rdx,QWORD PTR [rip+0x22da0]        # 0x4324d0
  40f730:	lea    rax,[rax+rdx*8]
  40f734:	mov    rdx,QWORD PTR [rax]
  40f737:	cmp    rdx,rbx
  40f73a:	je     0x40f776
  40f73c:	test   rdx,rdx
  40f73f:	je     0x40f764
  40f741:	movzx  ecx,BYTE PTR [rip+0x22d74]        # 0x4324bc
  40f748:	mov    rdx,QWORD PTR [rip+0x22d61]        # 0x4324b0
  40f74f:	mov    BYTE PTR [rdx],cl
  40f751:	mov    rcx,QWORD PTR [rax]
  40f754:	mov    QWORD PTR [rcx+0x10],rdx
  40f758:	mov    ecx,DWORD PTR [rip+0x22d5a]        # 0x4324b8
  40f75e:	mov    rdx,QWORD PTR [rax]
  40f761:	mov    DWORD PTR [rdx+0x20],ecx
  40f764:	mov    QWORD PTR [rax],rbx
  40f767:	call   0x40ee90
  40f76c:	mov    DWORD PTR [rip+0x22d2e],0x1        # 0x4324a4
  40f776:	add    rsp,0x20
  40f77a:	pop    rbx
  40f77b:	ret    
  40f77c:	nop    DWORD PTR [rax+0x0]
  40f780:	test   rbx,rbx
  40f783:	je     0x40f776
  40f785:	mov    rax,QWORD PTR [rip+0x22d44]        # 0x4324d0
  40f78c:	shl    rax,0x3
  40f790:	jmp    0x40f764
  40f792:	nop    DWORD PTR [rax+0x0]
  40f796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f7a0:	push   rbx
  40f7a1:	sub    rsp,0x20
  40f7a5:	test   rcx,rcx
  40f7a8:	je     0x40f810
  40f7aa:	mov    rax,QWORD PTR [rip+0x22d0f]        # 0x4324c0
  40f7b1:	test   rax,rax
  40f7b4:	je     0x40f7c6
  40f7b6:	mov    rdx,QWORD PTR [rip+0x22d13]        # 0x4324d0
  40f7bd:	lea    rax,[rax+rdx*8]
  40f7c1:	cmp    rcx,QWORD PTR [rax]
  40f7c4:	je     0x40f800
  40f7c6:	mov    eax,DWORD PTR [rcx+0x24]
  40f7c9:	mov    rbx,rcx
  40f7cc:	test   eax,eax
  40f7ce:	jne    0x40f7e0
  40f7d0:	mov    rcx,rbx
  40f7d3:	add    rsp,0x20
  40f7d7:	pop    rbx
  40f7d8:	jmp    0x41dc08
  40f7dd:	nop    DWORD PTR [rax]
  40f7e0:	mov    rcx,QWORD PTR [rcx+0x8]
  40f7e4:	call   0x41dc08
  40f7e9:	mov    rcx,rbx
  40f7ec:	add    rsp,0x20
  40f7f0:	pop    rbx
  40f7f1:	jmp    0x41dc08
  40f7f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f800:	mov    QWORD PTR [rax],0x0
  40f807:	jmp    0x40f7c6
  40f809:	nop    DWORD PTR [rax+0x0]
  40f810:	add    rsp,0x20
  40f814:	pop    rbx
  40f815:	ret    
  40f816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f820:	test   rcx,rcx
  40f823:	je     0x40f86a
  40f825:	mov    rax,QWORD PTR [rcx+0x8]
  40f829:	mov    DWORD PTR [rcx+0x20],0x0
  40f830:	mov    BYTE PTR [rax],0x0
  40f833:	mov    rax,QWORD PTR [rcx+0x8]
  40f837:	mov    BYTE PTR [rax+0x1],0x0
  40f83b:	mov    rax,QWORD PTR [rcx+0x8]
  40f83f:	mov    DWORD PTR [rcx+0x2c],0x1
  40f846:	mov    DWORD PTR [rcx+0x3c],0x0
  40f84d:	mov    QWORD PTR [rcx+0x10],rax
  40f851:	mov    rax,QWORD PTR [rip+0x22c68]        # 0x4324c0
  40f858:	test   rax,rax
  40f85b:	je     0x40f86a
  40f85d:	mov    rdx,QWORD PTR [rip+0x22c6c]        # 0x4324d0
  40f864:	cmp    rcx,QWORD PTR [rax+rdx*8]
  40f868:	je     0x40f870
  40f86a:	repz ret 
  40f86c:	nop    DWORD PTR [rax+0x0]
  40f870:	jmp    0x40ee90
  40f875:	nop
  40f876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f880:	push   rdi
  40f881:	push   rsi
  40f882:	push   rbx
  40f883:	sub    rsp,0x20
  40f887:	mov    rbx,rcx
  40f88a:	mov    rsi,rdx
  40f88d:	call   0x41dcb0
  40f892:	mov    rcx,rbx
  40f895:	mov    edi,DWORD PTR [rax]
  40f897:	call   0x40f820
  40f89c:	mov    rax,QWORD PTR [rip+0x22c1d]        # 0x4324c0
  40f8a3:	mov    QWORD PTR [rbx],rsi
  40f8a6:	mov    DWORD PTR [rbx+0x38],0x1
  40f8ad:	test   rax,rax
  40f8b0:	je     0x40f8bf
  40f8b2:	mov    rdx,QWORD PTR [rip+0x22c17]        # 0x4324d0
  40f8b9:	cmp    rbx,QWORD PTR [rax+rdx*8]
  40f8bd:	je     0x40f8cd
  40f8bf:	mov    DWORD PTR [rbx+0x30],0x1
  40f8c6:	mov    DWORD PTR [rbx+0x34],0x0
  40f8cd:	xor    eax,eax
  40f8cf:	test   rsi,rsi
  40f8d2:	je     0x40f8eb
  40f8d4:	mov    rcx,rsi
  40f8d7:	call   0x41db00
  40f8dc:	mov    ecx,eax
  40f8de:	call   0x41db08
  40f8e3:	test   eax,eax
  40f8e5:	setg   al
  40f8e8:	movzx  eax,al
  40f8eb:	mov    DWORD PTR [rbx+0x28],eax
  40f8ee:	call   0x41dcb0
  40f8f3:	mov    DWORD PTR [rax],edi
  40f8f5:	add    rsp,0x20
  40f8f9:	pop    rbx
  40f8fa:	pop    rsi
  40f8fb:	pop    rdi
  40f8fc:	ret    
  40f8fd:	nop    DWORD PTR [rax]
  40f900:	push   rdi
  40f901:	push   rsi
  40f902:	push   rbx
  40f903:	sub    rsp,0x20
  40f907:	mov    rdi,rcx
  40f90a:	mov    ecx,0x40
  40f90f:	mov    esi,edx
  40f911:	call   0x41dbc8
  40f916:	test   rax,rax
  40f919:	mov    rbx,rax
  40f91c:	je     0x40f954
  40f91e:	movsxd rax,esi
  40f921:	lea    rcx,[rax+0x2]
  40f925:	mov    QWORD PTR [rbx+0x18],rax
  40f929:	call   0x41dbc8
  40f92e:	test   rax,rax
  40f931:	mov    QWORD PTR [rbx+0x8],rax
  40f935:	je     0x40f954
  40f937:	mov    rdx,rdi
  40f93a:	mov    rcx,rbx
  40f93d:	mov    DWORD PTR [rbx+0x24],0x1
  40f944:	call   0x40f880
  40f949:	mov    rax,rbx
  40f94c:	add    rsp,0x20
  40f950:	pop    rbx
  40f951:	pop    rsi
  40f952:	pop    rdi
  40f953:	ret    
  40f954:	lea    rcx,[rip+0x13f05]        # 0x423860
  40f95b:	call   0x40f480
  40f960:	nop
  40f961:	nop    DWORD PTR [rax+rax*1+0x0]
  40f966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f970:	push   rsi
  40f971:	push   rbx
  40f972:	sub    rsp,0x28
  40f976:	mov    rax,QWORD PTR [rip+0x22b43]        # 0x4324c0
  40f97d:	mov    rbx,rcx
  40f980:	test   rax,rax
  40f983:	je     0x40f9b0
  40f985:	mov    rdx,QWORD PTR [rip+0x22b44]        # 0x4324d0
  40f98c:	mov    rcx,QWORD PTR [rax+rdx*8]
  40f990:	test   rcx,rcx
  40f993:	je     0x40f9b0
  40f995:	mov    rdx,rbx
  40f998:	call   0x40f880
  40f99d:	nop
  40f99e:	add    rsp,0x28
  40f9a2:	pop    rbx
  40f9a3:	pop    rsi
  40f9a4:	jmp    0x40ee90
  40f9a9:	nop    DWORD PTR [rax+0x0]
  40f9b0:	call   0x40f660
  40f9b5:	mov    rdx,QWORD PTR [rip+0x22b14]        # 0x4324d0
  40f9bc:	mov    rax,QWORD PTR [rip+0x22afd]        # 0x4324c0
  40f9c3:	mov    rcx,QWORD PTR [rip+0x22ac6]        # 0x432490
  40f9ca:	lea    rsi,[rax+rdx*8]
  40f9ce:	mov    edx,0x4000
  40f9d3:	call   0x40f900
  40f9d8:	mov    QWORD PTR [rsi],rax
  40f9db:	mov    rax,QWORD PTR [rip+0x22ade]        # 0x4324c0
  40f9e2:	xor    ecx,ecx
  40f9e4:	test   rax,rax
  40f9e7:	je     0x40f995
  40f9e9:	mov    rdx,QWORD PTR [rip+0x22ae0]        # 0x4324d0
  40f9f0:	mov    rcx,QWORD PTR [rax+rdx*8]
  40f9f4:	jmp    0x40f995
  40f9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa00:	push   rbx
  40fa01:	sub    rsp,0x20
  40fa05:	test   rcx,rcx
  40fa08:	je     0x40fa8f
  40fa0e:	mov    rbx,rcx
  40fa11:	call   0x40f660
  40fa16:	mov    rcx,QWORD PTR [rip+0x22aa3]        # 0x4324c0
  40fa1d:	mov    rax,QWORD PTR [rip+0x22aac]        # 0x4324d0
  40fa24:	shl    rax,0x3
  40fa28:	test   rcx,rcx
  40fa2b:	je     0x40fa7d
  40fa2d:	mov    rdx,QWORD PTR [rip+0x22a9c]        # 0x4324d0
  40fa34:	lea    r8,[rdx*8+0x0]
  40fa3c:	lea    rax,[rcx+r8*1]
  40fa40:	cmp    QWORD PTR [rax],0x0
  40fa44:	je     0x40fa7d
  40fa46:	movzx  r10d,BYTE PTR [rip+0x22a6e]        # 0x4324bc
  40fa4e:	mov    r9,QWORD PTR [rip+0x22a5b]        # 0x4324b0
  40fa55:	add    rdx,0x1
  40fa59:	mov    QWORD PTR [rip+0x22a70],rdx        # 0x4324d0
  40fa60:	mov    BYTE PTR [r9],r10b
  40fa63:	mov    r10,QWORD PTR [rax]
  40fa66:	mov    QWORD PTR [r10+0x10],r9
  40fa6a:	mov    r9d,DWORD PTR [rip+0x22a47]        # 0x4324b8
  40fa71:	mov    rax,QWORD PTR [rax]
  40fa74:	mov    DWORD PTR [rax+0x20],r9d
  40fa78:	lea    rax,[rcx+r8*1+0x8]
  40fa7d:	mov    QWORD PTR [rax],rbx
  40fa80:	call   0x40ee90
  40fa85:	mov    DWORD PTR [rip+0x22a15],0x1        # 0x4324a4
  40fa8f:	add    rsp,0x20
  40fa93:	pop    rbx
  40fa94:	ret    
  40fa95:	nop
  40fa96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40faa0:	push   rdi
  40faa1:	push   rsi
  40faa2:	push   rbx
  40faa3:	sub    rsp,0x20
  40faa7:	mov    rsi,QWORD PTR [rip+0x22a12]        # 0x4324c0
  40faae:	test   rsi,rsi
  40fab1:	je     0x40faf8
  40fab3:	mov    rbx,QWORD PTR [rip+0x22a16]        # 0x4324d0
  40faba:	lea    rdi,[rsi+rbx*8]
  40fabe:	mov    rcx,QWORD PTR [rdi]
  40fac1:	test   rcx,rcx
  40fac4:	je     0x40faf8
  40fac6:	call   0x40f7a0
  40facb:	test   rbx,rbx
  40face:	mov    QWORD PTR [rdi],0x0
  40fad5:	je     0x40faf8
  40fad7:	sub    rbx,0x1
  40fadb:	cmp    QWORD PTR [rsi+rbx*8],0x0
  40fae0:	mov    QWORD PTR [rip+0x229e9],rbx        # 0x4324d0
  40fae7:	je     0x40faf8
  40fae9:	call   0x40ee90
  40faee:	mov    DWORD PTR [rip+0x229ac],0x1        # 0x4324a4
  40faf8:	add    rsp,0x20
  40fafc:	pop    rbx
  40fafd:	pop    rsi
  40fafe:	pop    rdi
  40faff:	ret    
  40fb00:	push   rdi
  40fb01:	push   rsi
  40fb02:	push   rbx
  40fb03:	sub    rsp,0x20
  40fb07:	cmp    rdx,0x1
  40fb0b:	jbe    0x40fb80
  40fb0d:	cmp    BYTE PTR [rcx+rdx*1-0x2],0x0
  40fb12:	lea    rdi,[rdx-0x2]
  40fb16:	jne    0x40fb80
  40fb18:	cmp    BYTE PTR [rcx+rdx*1-0x1],0x0
  40fb1d:	jne    0x40fb80
  40fb1f:	mov    rsi,rcx
  40fb22:	mov    ecx,0x40
  40fb27:	call   0x41dbc8
  40fb2c:	test   rax,rax
  40fb2f:	mov    rbx,rax
  40fb32:	je     0x40fb8a
  40fb34:	mov    QWORD PTR [rax+0x18],rdi
  40fb38:	mov    QWORD PTR [rax+0x8],rsi
  40fb3c:	mov    rcx,rax
  40fb3f:	mov    QWORD PTR [rax+0x10],rsi
  40fb43:	mov    DWORD PTR [rax+0x20],edi
  40fb46:	mov    DWORD PTR [rax+0x24],0x0
  40fb4d:	mov    QWORD PTR [rax],0x0
  40fb54:	mov    DWORD PTR [rax+0x28],0x0
  40fb5b:	mov    DWORD PTR [rax+0x2c],0x1
  40fb62:	mov    DWORD PTR [rax+0x38],0x0
  40fb69:	mov    DWORD PTR [rax+0x3c],0x0
  40fb70:	call   0x40f710
  40fb75:	mov    rax,rbx
  40fb78:	add    rsp,0x20
  40fb7c:	pop    rbx
  40fb7d:	pop    rsi
  40fb7e:	pop    rdi
  40fb7f:	ret    
  40fb80:	xor    eax,eax
  40fb82:	add    rsp,0x20
  40fb86:	pop    rbx
  40fb87:	pop    rsi
  40fb88:	pop    rdi
  40fb89:	ret    
  40fb8a:	lea    rcx,[rip+0x13cff]        # 0x423890
  40fb91:	call   0x40f480
  40fb96:	nop
  40fb97:	nop    WORD PTR [rax+rax*1+0x0]
  40fba0:	push   rdi
  40fba1:	push   rsi
  40fba2:	push   rbx
  40fba3:	sub    rsp,0x20
  40fba7:	movsxd rbx,edx
  40fbaa:	mov    rsi,rcx
  40fbad:	lea    edi,[rbx+0x2]
  40fbb0:	movsxd rdi,edi
  40fbb3:	mov    rcx,rdi
  40fbb6:	call   0x41dbc8
  40fbbb:	test   rax,rax
  40fbbe:	je     0x40fc0a
  40fbc0:	xor    r8d,r8d
  40fbc3:	test   ebx,ebx
  40fbc5:	jle    0x40fbe2
  40fbc7:	nop    WORD PTR [rax+rax*1+0x0]
  40fbd0:	movzx  r9d,BYTE PTR [rsi+r8*1]
  40fbd5:	mov    BYTE PTR [rax+r8*1],r9b
  40fbd9:	add    r8,0x1
  40fbdd:	cmp    ebx,r8d
  40fbe0:	jg     0x40fbd0
  40fbe2:	mov    BYTE PTR [rax+rbx*1+0x1],0x0
  40fbe7:	mov    BYTE PTR [rax+rbx*1],0x0
  40fbeb:	mov    rdx,rdi
  40fbee:	mov    rcx,rax
  40fbf1:	call   0x40fb00
  40fbf6:	test   rax,rax
  40fbf9:	je     0x40fc16
  40fbfb:	mov    DWORD PTR [rax+0x24],0x1
  40fc02:	add    rsp,0x20
  40fc06:	pop    rbx
  40fc07:	pop    rsi
  40fc08:	pop    rdi
  40fc09:	ret    
  40fc0a:	lea    rcx,[rip+0x13caf]        # 0x4238c0
  40fc11:	call   0x40f480
  40fc16:	lea    rcx,[rip+0x13cd3]        # 0x4238f0
  40fc1d:	call   0x40f480
  40fc22:	nop
  40fc23:	nop    DWORD PTR [rax]
  40fc26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc30:	push   rbx
  40fc31:	sub    rsp,0x20
  40fc35:	mov    rbx,rcx
  40fc38:	call   0x41db50
  40fc3d:	mov    rcx,rbx
  40fc40:	mov    edx,eax
  40fc42:	add    rsp,0x20
  40fc46:	pop    rbx
  40fc47:	jmp    0x40fba0
  40fc4c:	nop    DWORD PTR [rax+0x0]
  40fc50:	mov    eax,DWORD PTR [rip+0xf84a]        # 0x41f4a0
  40fc56:	ret    
  40fc57:	nop    WORD PTR [rax+rax*1+0x0]
  40fc60:	mov    rax,QWORD PTR [rip+0x22829]        # 0x432490
  40fc67:	ret    
  40fc68:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc70:	mov    rax,QWORD PTR [rip+0x22811]        # 0x432488
  40fc77:	ret    
  40fc78:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc80:	mov    eax,DWORD PTR [rip+0x23bde]        # 0x433864
  40fc86:	ret    
  40fc87:	nop    WORD PTR [rax+rax*1+0x0]
  40fc90:	mov    rax,QWORD PTR [rip+0x23bf9]        # 0x433890
  40fc97:	ret    
  40fc98:	nop    DWORD PTR [rax+rax*1+0x0]
  40fca0:	mov    DWORD PTR [rip+0xf7fa],ecx        # 0x41f4a0
  40fca6:	ret    
  40fca7:	nop    WORD PTR [rax+rax*1+0x0]
  40fcb0:	mov    QWORD PTR [rip+0x227d9],rcx        # 0x432490
  40fcb7:	ret    
  40fcb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fcc0:	mov    QWORD PTR [rip+0x227c1],rcx        # 0x432488
  40fcc7:	ret    
  40fcc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fcd0:	mov    eax,DWORD PTR [rip+0x227aa]        # 0x432480
  40fcd6:	ret    
  40fcd7:	nop    WORD PTR [rax+rax*1+0x0]
  40fce0:	mov    DWORD PTR [rip+0x2279a],ecx        # 0x432480
  40fce6:	ret    
  40fce7:	nop    WORD PTR [rax+rax*1+0x0]
  40fcf0:	push   rsi
  40fcf1:	push   rbx
  40fcf2:	sub    rsp,0x28
  40fcf6:	mov    rsi,QWORD PTR [rip+0x227c3]        # 0x4324c0
  40fcfd:	test   rsi,rsi
  40fd00:	jne    0x40fd15
  40fd02:	jmp    0x40fd28
  40fd04:	call   0x40f7a0
  40fd09:	mov    QWORD PTR [rbx],0x0
  40fd10:	call   0x40faa0
  40fd15:	mov    rax,QWORD PTR [rip+0x227b4]        # 0x4324d0
  40fd1c:	lea    rbx,[rsi+rax*8]
  40fd20:	mov    rcx,QWORD PTR [rbx]
  40fd23:	test   rcx,rcx
  40fd26:	jne    0x40fd04
  40fd28:	mov    rcx,rsi
  40fd2b:	call   0x41dc08
  40fd30:	xor    eax,eax
  40fd32:	mov    QWORD PTR [rip+0x22783],0x0        # 0x4324c0
  40fd3d:	mov    QWORD PTR [rip+0x22788],0x0        # 0x4324d0
  40fd48:	mov    QWORD PTR [rip+0x22775],0x0        # 0x4324c8
  40fd53:	mov    QWORD PTR [rip+0x22752],0x0        # 0x4324b0
  40fd5e:	mov    DWORD PTR [rip+0x22744],0x0        # 0x4324ac
  40fd68:	mov    DWORD PTR [rip+0x22736],0x0        # 0x4324a8
  40fd72:	mov    QWORD PTR [rip+0x22713],0x0        # 0x432490
  40fd7d:	mov    QWORD PTR [rip+0x22700],0x0        # 0x432488
  40fd88:	add    rsp,0x28
  40fd8c:	pop    rbx
  40fd8d:	pop    rsi
  40fd8e:	ret    
  40fd8f:	nop
  40fd90:	jmp    0x41dbc8
  40fd95:	nop
  40fd96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fda0:	jmp    0x41db98
  40fda5:	nop
  40fda6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fdb0:	jmp    0x41dc08
  40fdb5:	nop
  40fdb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fdc0:	sub    rsp,0x28
  40fdc4:	mov    DWORD PTR [rip+0x23b1a],0x1        # 0x4338e8
  40fdce:	call   0x415f30
  40fdd3:	mov    QWORD PTR [rip+0x23a96],rax        # 0x433870
  40fdda:	xor    eax,eax
  40fddc:	add    rsp,0x28
  40fde0:	ret    
  40fde1:	nop    DWORD PTR [rax+rax*1+0x0]
  40fde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fdf0:	push   rsi
  40fdf1:	push   rbx
  40fdf2:	sub    rsp,0x28
  40fdf6:	mov    rsi,rcx
  40fdf9:	mov    ecx,0x2138
  40fdfe:	call   0x4063a0
  40fe03:	xor    edx,edx
  40fe05:	mov    r8d,0x2138
  40fe0b:	mov    rcx,rax
  40fe0e:	mov    rbx,rax
  40fe11:	call   0x41dbb0
  40fe16:	xor    eax,eax
  40fe18:	test   rsi,rsi
  40fe1b:	je     0x40fe25
  40fe1d:	mov    rcx,rsi
  40fe20:	call   0x41db10
  40fe25:	mov    QWORD PTR [rbx+0x10],rax
  40fe29:	mov    rax,QWORD PTR [rip+0x23a38]        # 0x433868
  40fe30:	mov    QWORD PTR [rbx],rax
  40fe33:	mov    eax,DWORD PTR [rip+0x23aaf]        # 0x4338e8
  40fe39:	mov    DWORD PTR [rbx+0x2128],eax
  40fe3f:	call   0x40f060
  40fe44:	mov    QWORD PTR [rbx+0x28],rax
  40fe48:	call   0x40f060
  40fe4d:	mov    QWORD PTR [rbx+0x20],rax
  40fe51:	mov    rax,rbx
  40fe54:	mov    QWORD PTR [rip+0x23a0d],rbx        # 0x433868
  40fe5b:	add    rsp,0x28
  40fe5f:	pop    rbx
  40fe60:	pop    rsi
  40fe61:	ret    
  40fe62:	nop    DWORD PTR [rax+0x0]
  40fe66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe70:	push   r15
  40fe72:	push   r14
  40fe74:	push   r13
  40fe76:	push   r12
  40fe78:	push   rbp
  40fe79:	push   rdi
  40fe7a:	push   rsi
  40fe7b:	push   rbx
  40fe7c:	sub    rsp,0x68
  40fe80:	mov    eax,DWORD PTR [rip+0x22626]        # 0x4324ac
  40fe86:	test   eax,eax
  40fe88:	jne    0x40feeb
  40fe8a:	mov    eax,DWORD PTR [rip+0x22618]        # 0x4324a8
  40fe90:	mov    DWORD PTR [rip+0x22612],0x1        # 0x4324ac
  40fe9a:	test   eax,eax
  40fe9c:	jne    0x40fea8
  40fe9e:	mov    DWORD PTR [rip+0x22600],0x1        # 0x4324a8
  40fea8:	cmp    QWORD PTR [rip+0x225e0],0x0        # 0x432490
  40feb0:	je     0x4105ab
  40feb6:	cmp    QWORD PTR [rip+0x225ca],0x0        # 0x432488
  40febe:	je     0x4106ef
  40fec4:	mov    rax,QWORD PTR [rip+0x225f5]        # 0x4324c0
  40fecb:	test   rax,rax
  40fece:	je     0x41004b
  40fed4:	mov    rdx,QWORD PTR [rip+0x225f5]        # 0x4324d0
  40fedb:	cmp    QWORD PTR [rax+rdx*8],0x0
  40fee0:	je     0x41004b
  40fee6:	call   0x40ee90
  40feeb:	lea    rdi,[rip+0x2399e]        # 0x433890
  40fef2:	mov    eax,DWORD PTR [rip+0x225b0]        # 0x4324a8
  40fef8:	lea    rbx,[rip+0x171c1]        # 0x4270c0
  40feff:	lea    r13,[rip+0x1763a]        # 0x427540
  40ff06:	lea    rbp,[rip+0x17a33]        # 0x427940
  40ff0d:	lea    rsi,[rip+0x14a6c]        # 0x424980
  40ff14:	mov    QWORD PTR [rsp+0x28],rdi
  40ff19:	lea    rdi,[rip+0x23944]        # 0x433864
  40ff20:	lea    r14,[rip+0x15c59]        # 0x425b80
  40ff27:	mov    QWORD PTR [rsp+0x38],rdi
  40ff2c:	movzx  r8d,BYTE PTR [rip+0x22588]        # 0x4324bc
  40ff34:	mov    r12,QWORD PTR [rip+0x22575]        # 0x4324b0
  40ff3b:	mov    QWORD PTR [rsp+0x30],r12
  40ff40:	mov    BYTE PTR [r12],r8b
  40ff44:	movsxd rcx,eax
  40ff47:	mov    r9d,DWORD PTR [rip+0x22552]        # 0x4324a0
  40ff4e:	mov    r10,QWORD PTR [rip+0x22543]        # 0x432498
  40ff55:	movsx  edx,WORD PTR [rbx+rcx*2]
  40ff59:	nop    DWORD PTR [rax+0x0]
  40ff60:	cmp    WORD PTR [rbp+rcx*2+0x0],0x0
  40ff66:	movzx  r8d,BYTE PTR [r13+r8*4+0x0]
  40ff6c:	cmovne r9d,eax
  40ff70:	cmovne r10,r12
  40ff74:	jmp    0x40ffa5
  40ff76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ff80:	lea    rax,[rip+0x16df9]        # 0x426d80
  40ff87:	movsx  eax,WORD PTR [rax+rcx*2]
  40ff8b:	cmp    eax,0x17f
  40ff90:	jle    0x40ff9e
  40ff92:	lea    rdx,[rip+0x17467]        # 0x427400
  40ff99:	movzx  r8d,BYTE PTR [rdx+r8*4]
  40ff9e:	movsxd rcx,eax
  40ffa1:	movsx  edx,WORD PTR [rbx+rcx*2]
  40ffa5:	add    edx,r8d
  40ffa8:	movsxd r11,edx
  40ffab:	movsx  r11d,WORD PTR [rsi+r11*2]
  40ffb0:	cmp    r11d,eax
  40ffb3:	jne    0x40ff80
  40ffb5:	mov    edx,edx
  40ffb7:	add    r12,0x1
  40ffbb:	movsx  rcx,WORD PTR [r14+rdx*2]
  40ffc0:	movsx  edx,WORD PTR [rbx+rcx*2]
  40ffc4:	mov    rax,rcx
  40ffc7:	cmp    dx,0x8b8
  40ffcc:	je     0x40ffd5
  40ffce:	movzx  r8d,BYTE PTR [r12]
  40ffd3:	jmp    0x40ff60
  40ffd5:	movsx  eax,WORD PTR [rbp+rcx*2+0x0]
  40ffda:	mov    QWORD PTR [rip+0x224b7],r10        # 0x432498
  40ffe1:	mov    DWORD PTR [rip+0x224b8],r9d        # 0x4324a0
  40ffe8:	test   eax,eax
  40ffea:	jne    0x40ffff
  40ffec:	movsxd rax,DWORD PTR [rip+0x224ad]        # 0x4324a0
  40fff3:	mov    r12,QWORD PTR [rip+0x2249e]        # 0x432498
  40fffa:	movsx  eax,WORD PTR [rbp+rax*2+0x0]
  40ffff:	mov    rdi,QWORD PTR [rsp+0x30]
  410004:	mov    rcx,QWORD PTR [rsp+0x28]
  410009:	mov    rdx,r12
  41000c:	mov    QWORD PTR [rip+0x2249d],r12        # 0x4324b0
  410013:	mov    QWORD PTR [rcx],rdi
  410016:	sub    rdx,rdi
  410019:	mov    rdi,QWORD PTR [rsp+0x38]
  41001e:	mov    DWORD PTR [rdi],edx
  410020:	movzx  edx,BYTE PTR [r12]
  410025:	mov    BYTE PTR [r12],0x0
  41002a:	mov    BYTE PTR [rip+0x2248c],dl        # 0x4324bc
  410030:	cmp    eax,0x36
  410033:	ja     0x410db7
  410039:	lea    rdi,[rip+0x13bec]        # 0x423c2c
  410040:	mov    eax,eax
  410042:	movsxd rax,DWORD PTR [rdi+rax*4]
  410046:	add    rax,rdi
  410049:	jmp    rax
  41004b:	call   0x40f660
  410050:	mov    rdx,QWORD PTR [rip+0x22479]        # 0x4324d0
  410057:	mov    rax,QWORD PTR [rip+0x22462]        # 0x4324c0
  41005e:	mov    rcx,QWORD PTR [rip+0x2242b]        # 0x432490
  410065:	lea    rbx,[rax+rdx*8]
  410069:	mov    edx,0x4000
  41006e:	call   0x40f900
  410073:	mov    QWORD PTR [rbx],rax
  410076:	jmp    0x40fee6
  41007b:	add    DWORD PTR [rip+0x23866],0x1        # 0x4338e8
  410082:	mov    eax,DWORD PTR [rip+0x22420]        # 0x4324a8
  410088:	jmp    0x40ff2c
  41008d:	call   QWORD PTR [rip+0x24645]        # 0x4346d8
  410093:	lea    rcx,[rip+0x13a85]        # 0x423b1f
  41009a:	lea    r9,[rax+0x60]
  41009e:	mov    r8d,0x19
  4100a4:	mov    edx,0x1
  4100a9:	call   0x41dbf8
  4100ae:	mov    DWORD PTR [rip+0x223f0],0x1        # 0x4324a8
  4100b8:	mov    eax,0x1
  4100bd:	jmp    0x40ff2c
  4100c2:	xor    ebx,ebx
  4100c4:	mov    eax,ebx
  4100c6:	add    rsp,0x68
  4100ca:	pop    rbx
  4100cb:	pop    rsi
  4100cc:	pop    rdi
  4100cd:	pop    rbp
  4100ce:	pop    r12
  4100d0:	pop    r13
  4100d2:	pop    r14
  4100d4:	pop    r15
  4100d6:	ret    
  4100d7:	mov    rax,QWORD PTR [rip+0x1b5e2]        # 0x42b6c0
  4100de:	mov    ebx,0x10c
  4100e3:	cmp    DWORD PTR [rax],0x1
  4100e6:	jle    0x4100c4
  4100e8:	mov    ecx,0x10c
  4100ed:	call   0x40f4b0
  4100f2:	jmp    0x4100c4
  4100f4:	mov    rcx,QWORD PTR [rip+0x23795]        # 0x433890
  4100fb:	call   0x40f5c0
  410100:	test   eax,eax
  410102:	je     0x4117e8
  410108:	cmp    eax,0x1
  41010b:	je     0x411795
  410111:	cmp    eax,0xffffffff
  410114:	je     0x411760
  41011a:	lea    rcx,[rip+0x1386b]        # 0x42398c
  410121:	call   0x40f1a0
  410126:	mov    rbx,QWORD PTR [rip+0x23763]        # 0x433890
  41012d:	mov    rcx,rbx
  410130:	call   0x41db50
  410135:	cdqe   
  410137:	movzx  ecx,BYTE PTR [rbx+rax*1-0x1]
  41013c:	sub    ecx,0x42
  41013f:	cmp    cl,0x31
  410142:	ja     0x410185
  410144:	mov    eax,0x1
  410149:	movabs rdx,0x40000000400
  410153:	shl    rax,cl
  410156:	test   rax,rdx
  410159:	jne    0x41165b
  41015f:	movabs rdx,0x2000000020000
  410169:	test   rax,rdx
  41016c:	jne    0x41162d
  410172:	movabs rdx,0x100000001
  41017c:	test   rax,rdx
  41017f:	jne    0x411194
  410185:	lea    rdx,[rip+0x1385c]        # 0x4239e8
  41018c:	mov    r8,rbx
  41018f:	lea    rbx,[rip+0x2366a]        # 0x433800
  410196:	mov    rcx,rbx
  410199:	call   0x41db80
  41019e:	mov    rcx,rbx
  4101a1:	xor    ebx,ebx
  4101a3:	call   0x40f1a0
  4101a8:	mov    rax,QWORD PTR [rip+0x1b511]        # 0x42b6c0
  4101af:	cmp    DWORD PTR [rax],0x1
  4101b2:	jle    0x4100c4
  4101b8:	mov    ecx,ebx
  4101ba:	call   0x40f4b0
  4101bf:	jmp    0x4100c4
  4101c4:	mov    rcx,QWORD PTR [rip+0x236a5]        # 0x433870
  4101cb:	test   rcx,rcx
  4101ce:	je     0x4101d7
  4101d0:	mov    DWORD PTR [rcx+0x8],0x0
  4101d7:	mov    r8d,DWORD PTR [rip+0x23686]        # 0x433864
  4101de:	mov    rdx,QWORD PTR [rip+0x236ab]        # 0x433890
  4101e5:	add    r8d,0x1
  4101e9:	call   0x416170
  4101ee:	mov    rcx,QWORD PTR [rip+0x2367b]        # 0x433870
  4101f5:	call   0x4164d0
  4101fa:	mov    rax,QWORD PTR [rip+0x2366f]        # 0x433870
  410201:	test   rax,rax
  410204:	je     0x4115fc
  41020a:	mov    rbx,QWORD PTR [rax+0x10]
  41020e:	test   rbx,rbx
  410211:	je     0x410fbf
  410217:	mov    r8d,DWORD PTR [rax+0x8]
  41021b:	mov    r9d,0x1
  410221:	mov    rdx,rbx
  410224:	mov    rcx,rbx
  410227:	call   0x407190
  41022c:	mov    rcx,QWORD PTR [rip+0x2363d]        # 0x433870
  410233:	mov    edx,eax
  410235:	call   0x416050
  41023a:	cmp    BYTE PTR [rbx],0x5f
  41023d:	jne    0x410fed
  410243:	lea    rdi,[rip+0x13740]        # 0x42398a
  41024a:	mov    ecx,0x2
  41024f:	mov    rsi,rbx
  410252:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  410254:	jne    0x410fed
  41025a:	mov    rax,QWORD PTR [rip+0x1b45f]        # 0x42b6c0
  410261:	mov    ebx,0x126
  410266:	cmp    DWORD PTR [rax],0x1
  410269:	jle    0x4100c4
  41026f:	mov    ecx,0x126
  410274:	call   0x40f4b0
  410279:	jmp    0x4100c4
  41027e:	xchg   ax,ax
  410280:	mov    rcx,QWORD PTR [rip+0x235e9]        # 0x433870
  410287:	test   rcx,rcx
  41028a:	je     0x410293
  41028c:	mov    DWORD PTR [rcx+0x8],0x0
  410293:	mov    r8d,DWORD PTR [rip+0x235ca]        # 0x433864
  41029a:	mov    rdx,QWORD PTR [rip+0x235ef]        # 0x433890
  4102a1:	add    r8d,0x1
  4102a5:	call   0x416170
  4102aa:	mov    rcx,QWORD PTR [rip+0x235bf]        # 0x433870
  4102b1:	call   0x4164d0
  4102b6:	mov    rdx,QWORD PTR [rip+0xf143]        # 0x41f400
  4102bd:	test   rdx,rdx
  4102c0:	je     0x4100c2
  4102c6:	mov    rsi,QWORD PTR [rip+0x235a3]        # 0x433870
  4102cd:	lea    rbx,[rip+0xf12c]        # 0x41f400
  4102d4:	jmp    0x4102e6
  4102d6:	add    rbx,0x10
  4102da:	mov    rdx,QWORD PTR [rbx]
  4102dd:	test   rdx,rdx
  4102e0:	je     0x4100c2
  4102e6:	test   rsi,rsi
  4102e9:	lea    rcx,[rip+0x1341a]        # 0x42370a
  4102f0:	je     0x4102fd
  4102f2:	mov    rax,QWORD PTR [rsi+0x10]
  4102f6:	test   rax,rax
  4102f9:	cmovne rcx,rax
  4102fd:	call   0x41db60
  410302:	test   eax,eax
  410304:	jne    0x4102d6
  410306:	mov    rax,QWORD PTR [rip+0x1b3b3]        # 0x42b6c0
  41030d:	mov    ebx,DWORD PTR [rbx+0x8]
  410310:	cmp    DWORD PTR [rax],0x1
  410313:	jg     0x4101b8
  410319:	jmp    0x4100c4
  41031e:	xchg   ax,ax
  410320:	mov    rax,QWORD PTR [rip+0x1b459]        # 0x42b780
  410327:	mov    eax,DWORD PTR [rax]
  410329:	sub    eax,0x1
  41032c:	cmp    eax,0x1
  41032f:	jbe    0x411020
  410335:	lea    rcx,[rip+0x135ec]        # 0x423928
  41033c:	call   0x40f1a0
  410341:	mov    rcx,QWORD PTR [rip+0x23528]        # 0x433870
  410348:	test   rcx,rcx
  41034b:	je     0x410354
  41034d:	mov    DWORD PTR [rcx+0x8],0x0
  410354:	mov    r8d,DWORD PTR [rip+0x23509]        # 0x433864
  41035b:	mov    rdx,QWORD PTR [rip+0x2352e]        # 0x433890
  410362:	add    r8d,0x1
  410366:	call   0x416170
  41036b:	mov    rcx,QWORD PTR [rip+0x234fe]        # 0x433870
  410372:	call   0x4164d0
  410377:	mov    rax,QWORD PTR [rip+0x234f2]        # 0x433870
  41037e:	test   rax,rax
  410381:	je     0x411044
  410387:	mov    rbx,QWORD PTR [rax+0x10]
  41038b:	test   rbx,rbx
  41038e:	je     0x411044
  410394:	lea    rdi,[rip+0x135be]        # 0x423959
  41039b:	mov    ecx,0x2
  4103a0:	mov    rsi,rbx
  4103a3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4103a5:	jne    0x41104b
  4103ab:	mov    rbx,QWORD PTR [rip+0x2352e]        # 0x4338e0
  4103b2:	mov    rax,QWORD PTR [rip+0x1b307]        # 0x42b6c0
  4103b9:	mov    QWORD PTR [rip+0x233e0],rbx        # 0x4337a0
  4103c0:	mov    ebx,0x125
  4103c5:	cmp    DWORD PTR [rax],0x1
  4103c8:	jle    0x4100c4
  4103ce:	mov    ecx,0x125
  4103d3:	call   0x40f4b0
  4103d8:	jmp    0x4100c4
  4103dd:	mov    rax,QWORD PTR [rip+0x1b2dc]        # 0x42b6c0
  4103e4:	mov    ebx,0x120
  4103e9:	cmp    DWORD PTR [rax],0x1
  4103ec:	jle    0x4100c4
  4103f2:	mov    ecx,0x120
  4103f7:	call   0x40f4b0
  4103fc:	jmp    0x4100c4
  410401:	mov    rax,QWORD PTR [rip+0x23488]        # 0x433890
  410408:	mov    rcx,QWORD PTR [rip+0x23461]        # 0x433870
  41040f:	lea    rdx,[rax+0x2]
  410413:	mov    eax,DWORD PTR [rip+0x2344b]        # 0x433864
  410419:	test   rcx,rcx
  41041c:	lea    ebx,[rax-0x2]
  41041f:	je     0x410428
  410421:	mov    DWORD PTR [rcx+0x8],0x0
  410428:	mov    r8d,ebx
  41042b:	call   0x416170
  410430:	mov    edx,ebx
  410432:	shr    edx,0x1f
  410435:	lea    eax,[rbx+rdx*1]
  410438:	and    eax,0x1
  41043b:	sub    eax,edx
  41043d:	cmp    eax,0x1
  410440:	je     0x41174a
  410446:	mov    rcx,QWORD PTR [rip+0x23423]        # 0x433870
  41044d:	lea    rbx,[rip+0x132b6]        # 0x42370a
  410454:	call   0x4164d0
  410459:	mov    rax,QWORD PTR [rip+0x23410]        # 0x433870
  410460:	test   rax,rax
  410463:	je     0x410477
  410465:	mov    rbx,QWORD PTR [rax+0x10]
  410469:	lea    rax,[rip+0x1329a]        # 0x42370a
  410470:	test   rbx,rbx
  410473:	cmove  rbx,rax
  410477:	movzx  eax,BYTE PTR [rbx]
  41047a:	mov    rsi,QWORD PTR [rip+0x2441f]        # 0x4348a0
  410481:	test   al,al
  410483:	je     0x410498
  410485:	add    rbx,0x1
  410489:	movsx  ecx,al
  41048c:	call   rsi
  41048e:	mov    BYTE PTR [rbx-0x1],al
  410491:	movzx  eax,BYTE PTR [rbx]
  410494:	test   al,al
  410496:	jne    0x410485
  410498:	mov    rax,QWORD PTR [rip+0x1b221]        # 0x42b6c0
  41049f:	cmp    DWORD PTR [rax],0x1
  4104a2:	jle    0x4104ae
  4104a4:	mov    ecx,0x123
  4104a9:	call   0x40f4b0
  4104ae:	mov    ebx,0x123
  4104b3:	jmp    0x4100c4
  4104b8:	mov    rax,QWORD PTR [rip+0x1b201]        # 0x42b6c0
  4104bf:	mov    ebx,0x10a
  4104c4:	cmp    DWORD PTR [rax],0x1
  4104c7:	jle    0x4100c4
  4104cd:	mov    ecx,0x10a
  4104d2:	call   0x40f4b0
  4104d7:	jmp    0x4100c4
  4104dc:	mov    rcx,QWORD PTR [rip+0x2338d]        # 0x433870
  4104e3:	test   rcx,rcx
  4104e6:	je     0x4104ef
  4104e8:	mov    DWORD PTR [rcx+0x8],0x0
  4104ef:	mov    r8d,DWORD PTR [rip+0x2336e]        # 0x433864
  4104f6:	mov    rdx,QWORD PTR [rip+0x23393]        # 0x433890
  4104fd:	add    r8d,0x1
  410501:	call   0x416170
  410506:	mov    rcx,QWORD PTR [rip+0x23363]        # 0x433870
  41050d:	call   0x4164d0
  410512:	mov    rdx,QWORD PTR [rip+0x23357]        # 0x433870
  410519:	lea    rax,[rip+0x131ea]        # 0x42370a
  410520:	test   rdx,rdx
  410523:	je     0x410537
  410525:	mov    rax,QWORD PTR [rdx+0x10]
  410529:	lea    rdx,[rip+0x131da]        # 0x42370a
  410530:	test   rax,rax
  410533:	cmove  rax,rdx
  410537:	mov    rdx,rax
  41053a:	add    rax,0x1
  41053e:	movsx  ecx,BYTE PTR [rax-0x1]
  410542:	test   ecx,ecx
  410544:	mov    r8d,ecx
  410547:	je     0x410564
  410549:	cmp    ecx,0x20
  41054c:	jle    0x41053a
  41054e:	add    rax,0x1
  410552:	mov    BYTE PTR [rdx],r8b
  410555:	add    rdx,0x1
  410559:	movsx  ecx,BYTE PTR [rax-0x1]
  41055d:	test   ecx,ecx
  41055f:	mov    r8d,ecx
  410562:	jne    0x410549
  410564:	mov    BYTE PTR [rdx],0x0
  410567:	mov    rcx,QWORD PTR [rip+0x23302]        # 0x433870
  41056e:	mov    ebx,0x131
  410573:	call   0x416430
  410578:	mov    rdx,QWORD PTR [rip+0x1b131]        # 0x42b6b0
  41057f:	mov    DWORD PTR [rip+0x21f1f],0x1        # 0x4324a8
  410589:	mov    QWORD PTR [rdx],rax
  41058c:	mov    rax,QWORD PTR [rip+0x1b12d]        # 0x42b6c0
  410593:	cmp    DWORD PTR [rax],0x1
  410596:	jle    0x4100c4
  41059c:	mov    ecx,0x131
  4105a1:	call   0x40f4b0
  4105a6:	jmp    0x4100c4
  4105ab:	call   QWORD PTR [rip+0x24127]        # 0x4346d8
  4105b1:	mov    QWORD PTR [rip+0x21ed8],rax        # 0x432490
  4105b8:	jmp    0x40feb6
  4105bd:	mov    eax,DWORD PTR [rip+0x232a1]        # 0x433864
  4105c3:	mov    rcx,QWORD PTR [rip+0x232a6]        # 0x433870
  4105ca:	lea    edx,[rax-0x2]
  4105cd:	call   0x416050
  4105d2:	mov    eax,DWORD PTR [rip+0x2328c]        # 0x433864
  4105d8:	lea    rcx,[rip+0x1312b]        # 0x42370a
  4105df:	lea    r8d,[rax-0x2]
  4105e3:	mov    rax,QWORD PTR [rip+0x232a6]        # 0x433890
  4105ea:	lea    rdx,[rax+0x1]
  4105ee:	mov    rax,QWORD PTR [rip+0x2327b]        # 0x433870
  4105f5:	test   rax,rax
  4105f8:	je     0x41060c
  4105fa:	mov    rcx,QWORD PTR [rax+0x10]
  4105fe:	lea    rax,[rip+0x13105]        # 0x42370a
  410605:	test   rcx,rcx
  410608:	cmove  rcx,rax
  41060c:	xor    r9d,r9d
  41060f:	call   0x407190
  410614:	test   eax,eax
  410616:	mov    ebx,eax
  410618:	js     0x411210
  41061e:	mov    rcx,QWORD PTR [rip+0x2324b]        # 0x433870
  410625:	mov    edx,ebx
  410627:	mov    ebx,0x10f
  41062c:	call   0x416050
  410631:	mov    rcx,QWORD PTR [rip+0x23238]        # 0x433870
  410638:	call   0x4164d0
  41063d:	mov    rax,QWORD PTR [rip+0x1b07c]        # 0x42b6c0
  410644:	cmp    DWORD PTR [rax],0x1
  410647:	jle    0x4100c4
  41064d:	mov    ecx,0x10f
  410652:	call   0x40f4b0
  410657:	jmp    0x4100c4
  41065c:	mov    rax,QWORD PTR [rip+0x2322d]        # 0x433890
  410663:	movzx  ecx,BYTE PTR [rax+0x2]
  410667:	lea    eax,[rcx-0x27]
  41066a:	cmp    al,0x4f
  41066c:	ja     0x41173f
  410672:	movzx  edx,al
  410675:	lea    rax,[rip+0x1368c]        # 0x423d08
  41067c:	movsxd rdx,DWORD PTR [rax+rdx*4]
  410680:	add    rax,rdx
  410683:	jmp    rax
  410685:	mov    rax,QWORD PTR [rip+0x23204]        # 0x433890
  41068c:	lea    rcx,[rax+0x3]
  410690:	call   0x407080
  410695:	cmp    BYTE PTR [rip+0x230ec],0x0        # 0x433788
  41069c:	mov    esi,eax
  41069e:	js     0x4111c2
  4106a4:	mov    BYTE PTR [rip+0x230dd],sil        # 0x433788
  4106ab:	mov    rax,QWORD PTR [rip+0x1b00e]        # 0x42b6c0
  4106b2:	cmp    DWORD PTR [rax],0x1
  4106b5:	jle    0x4106c1
  4106b7:	mov    ecx,0x111
  4106bc:	call   0x40f4b0
  4106c1:	mov    ebx,0x111
  4106c6:	jmp    0x4100c4
  4106cb:	mov    rax,QWORD PTR [rip+0x1afee]        # 0x42b6c0
  4106d2:	mov    ebx,0x105
  4106d7:	cmp    DWORD PTR [rax],0x1
  4106da:	jle    0x4100c4
  4106e0:	mov    ecx,0x105
  4106e5:	call   0x40f4b0
  4106ea:	jmp    0x4100c4
  4106ef:	call   QWORD PTR [rip+0x23fe3]        # 0x4346d8
  4106f5:	add    rax,0x30
  4106f9:	mov    QWORD PTR [rip+0x21d88],rax        # 0x432488
  410700:	jmp    0x40fec4
  410705:	mov    rdi,QWORD PTR [rsp+0x28]
  41070a:	mov    rax,r12
  41070d:	mov    r8,QWORD PTR [rip+0x21dac]        # 0x4324c0
  410714:	mov    rdx,QWORD PTR [rip+0x21db5]        # 0x4324d0
  41071b:	sub    rax,QWORD PTR [rdi]
  41071e:	lea    r9,[r8+rdx*8]
  410722:	sub    eax,0x1
  410725:	mov    DWORD PTR [rsp+0x44],eax
  410729:	movzx  eax,BYTE PTR [rip+0x21d8c]        # 0x4324bc
  410730:	mov    BYTE PTR [r12],al
  410734:	mov    r11,QWORD PTR [r9]
  410737:	mov    eax,DWORD PTR [r11+0x3c]
  41073b:	test   eax,eax
  41073d:	je     0x410f64
  410743:	mov    eax,DWORD PTR [rip+0x21d6f]        # 0x4324b8
  410749:	mov    r10,QWORD PTR [r11+0x8]
  41074d:	movsxd r15,eax
  410750:	mov    rcx,QWORD PTR [rip+0x21d59]        # 0x4324b0
  410757:	lea    rdi,[r10+r15*1]
  41075b:	cmp    rdi,rcx
  41075e:	jae    0x411279
  410764:	mov    rax,QWORD PTR [rsp+0x28]
  410769:	lea    r15,[r10+r15*1+0x1]
  41076e:	cmp    rcx,r15
  410771:	mov    rax,QWORD PTR [rax]
  410774:	ja     0x411621
  41077a:	mov    r15d,DWORD PTR [r11+0x38]
  41077e:	sub    rcx,rax
  410781:	test   r15d,r15d
  410784:	jne    0x410dc3
  41078a:	cmp    rcx,0x1
  41078e:	je     0x4113ee
  410794:	mov    r12,rdi
  410797:	mov    QWORD PTR [rip+0x21d12],r12        # 0x4324b0
  41079e:	call   0x41e680
  4107a3:	mov    rdi,QWORD PTR [rsp+0x28]
  4107a8:	cdqe   
  4107aa:	movsx  eax,WORD PTR [rbp+rax*2+0x0]
  4107af:	mov    rdi,QWORD PTR [rdi]
  4107b2:	mov    QWORD PTR [rsp+0x30],rdi
  4107b7:	jmp    0x40ffe8
  4107bc:	nop    DWORD PTR [rax+0x0]
  4107c0:	mov    rax,QWORD PTR [rip+0x230c9]        # 0x433890
  4107c7:	lea    rcx,[rax+0x2]
  4107cb:	call   0x407110
  4107d0:	test   eax,eax
  4107d2:	mov    ebx,eax
  4107d4:	js     0x411808
  4107da:	mov    BYTE PTR [rip+0x22fa8],bl        # 0x433788
  4107e0:	jmp    0x4106ab
  4107e5:	mov    rbx,QWORD PTR [rip+0x230a4]        # 0x433890
  4107ec:	mov    rcx,rbx
  4107ef:	call   0x41db50
  4107f4:	movsxd rdx,eax
  4107f7:	sub    eax,0x3
  4107fa:	lea    rcx,[rbx+rdx*1-0x1]
  4107ff:	cmp    eax,0x10
  410802:	lea    rdx,[rbx+0x2]
  410806:	movzx  r9d,BYTE PTR [rcx]
  41080a:	mov    BYTE PTR [rcx],0x0
  41080d:	jle    0x410816
  41080f:	cdqe   
  410811:	lea    rdx,[rdx+rax*1-0x10]
  410816:	mov    QWORD PTR [rip+0x2307f],0x0        # 0x4338a0
  410821:	movsx  ecx,BYTE PTR [rdx]
  410824:	xor    r8d,r8d
  410827:	lea    r10,[rdx+0x1]
  41082b:	lea    r11,[rip+0x2306e]        # 0x4338a0
  410832:	test   ecx,ecx
  410834:	je     0x41085a
  410836:	lea    edx,[rcx-0x30]
  410839:	lea    eax,[rcx-0x57]
  41083c:	cmp    ecx,0x39
  41083f:	cmovle rax,rdx
  410843:	shl    r8,0x4
  410847:	add    r10,0x1
  41084b:	or     r8,rax
  41084e:	mov    QWORD PTR [r11],r8
  410851:	movsx  ecx,BYTE PTR [r10-0x1]
  410856:	test   ecx,ecx
  410858:	jne    0x410836
  41085a:	cmp    r9b,0x53
  41085e:	je     0x41087a
  410860:	jle    0x410f88
  410866:	cmp    r9b,0x6c
  41086a:	je     0x41133d
  410870:	cmp    r9b,0x73
  410874:	jne    0x410f92
  41087a:	mov    rax,QWORD PTR [rip+0x2301f]        # 0x4338a0
  410881:	mov    WORD PTR [rip+0x22f4c],ax        # 0x4337d4
  410888:	mov    ebx,0x116
  41088d:	jmp    0x4101a8
  410892:	mov    rax,QWORD PTR [rip+0x1ae27]        # 0x42b6c0
  410899:	mov    ebx,0x107
  41089e:	cmp    DWORD PTR [rax],0x1
  4108a1:	jle    0x4100c4
  4108a7:	mov    ecx,0x107
  4108ac:	call   0x40f4b0
  4108b1:	jmp    0x4100c4
  4108b6:	mov    DWORD PTR [rip+0x21be8],0x3        # 0x4324a8
  4108c0:	mov    eax,0x3
  4108c5:	jmp    0x40ff2c
  4108ca:	movsxd rdx,DWORD PTR [rip+0x22f93]        # 0x433864
  4108d1:	mov    r9,QWORD PTR [rip+0x21bb0]        # 0x432488
  4108d8:	mov    r8d,0x1
  4108de:	mov    rcx,QWORD PTR [rip+0x22fab]        # 0x433890
  4108e5:	xor    ebx,ebx
  4108e7:	call   0x41dbf8
  4108ec:	jmp    0x4100c4
  4108f1:	mov    rbx,QWORD PTR [rip+0x22f98]        # 0x433890
  4108f8:	mov    rcx,rbx
  4108fb:	call   0x41db50
  410900:	cdqe   
  410902:	movzx  ecx,BYTE PTR [rbx+rax*1-0x1]
  410907:	sub    ecx,0x42
  41090a:	cmp    cl,0x31
  41090d:	ja     0x410950
  41090f:	mov    eax,0x1
  410914:	movabs rdx,0x40000000400
  41091e:	shl    rax,cl
  410921:	test   rax,rdx
  410924:	jne    0x41188e
  41092a:	movabs rdx,0x2000000020000
  410934:	test   rax,rdx
  410937:	jne    0x411832
  41093d:	movabs rdx,0x100000001
  410947:	test   rax,rdx
  41094a:	jne    0x4118c5
  410950:	lea    r8,[rip+0x22f41]        # 0x433898
  410957:	lea    rdx,[rip+0x130a3]        # 0x423a01
  41095e:	mov    rcx,rbx
  410961:	mov    ebx,0x117
  410966:	call   0x41db78
  41096b:	cmp    eax,0x1
  41096e:	je     0x4101a8
  410974:	mov    r8,QWORD PTR [rip+0x22f15]        # 0x433890
  41097b:	lea    rdx,[rip+0x130ee]        # 0x423a70
  410982:	lea    rsi,[rip+0x22e77]        # 0x433800
  410989:	mov    rcx,rsi
  41098c:	call   0x41db80
  410991:	mov    rcx,rsi
  410994:	call   0x40f1a0
  410999:	jmp    0x4101a8
  41099e:	mov    rax,QWORD PTR [rip+0x22eeb]        # 0x433890
  4109a5:	movsx  ebx,BYTE PTR [rax]
  4109a8:	jmp    0x4101a8
  4109ad:	mov    rax,QWORD PTR [rip+0x1ad0c]        # 0x42b6c0
  4109b4:	mov    ebx,0x10b
  4109b9:	cmp    DWORD PTR [rax],0x1
  4109bc:	jle    0x4100c4
  4109c2:	mov    ecx,0x10b
  4109c7:	call   0x40f4b0
  4109cc:	jmp    0x4100c4
  4109d1:	mov    rax,QWORD PTR [rip+0x1ace8]        # 0x42b6c0
  4109d8:	mov    ebx,0x106
  4109dd:	cmp    DWORD PTR [rax],0x1
  4109e0:	jle    0x4100c4
  4109e6:	mov    ecx,0x106
  4109eb:	call   0x40f4b0
  4109f0:	jmp    0x4100c4
  4109f5:	movzx  eax,BYTE PTR [rip+0x21ac0]        # 0x4324bc
  4109fc:	mov    BYTE PTR [r12],al
  410a00:	movsxd rax,DWORD PTR [rip+0x21a99]        # 0x4324a0
  410a07:	mov    r12,QWORD PTR [rip+0x21a8a]        # 0x432498
  410a0e:	movsx  eax,WORD PTR [rbp+rax*2+0x0]
  410a13:	jmp    0x40ffe8
  410a18:	mov    rax,QWORD PTR [rip+0x1aca1]        # 0x42b6c0
  410a1f:	mov    ebx,0x109
  410a24:	cmp    DWORD PTR [rax],0x1
  410a27:	jle    0x4100c4
  410a2d:	mov    ecx,0x109
  410a32:	call   0x40f4b0
  410a37:	jmp    0x4100c4
  410a3c:	mov    rax,QWORD PTR [rip+0x1ac7d]        # 0x42b6c0
  410a43:	mov    ebx,0x104
  410a48:	cmp    DWORD PTR [rax],0x1
  410a4b:	jle    0x4100c4
  410a51:	mov    ecx,0x104
  410a56:	call   0x40f4b0
  410a5b:	jmp    0x4100c4
  410a60:	mov    rax,QWORD PTR [rip+0x1ac59]        # 0x42b6c0
  410a67:	mov    ebx,0x103
  410a6c:	cmp    DWORD PTR [rax],0x1
  410a6f:	jle    0x4100c4
  410a75:	mov    ecx,0x103
  410a7a:	call   0x40f4b0
  410a7f:	jmp    0x4100c4
  410a84:	mov    rcx,QWORD PTR [rip+0x22e05]        # 0x433890
  410a8b:	lea    r8,[rip+0x22e16]        # 0x4338a8
  410a92:	lea    rdx,[rip+0x1301f]        # 0x423ab8
  410a99:	call   0x41db78
  410a9e:	cmp    eax,0x1
  410aa1:	je     0x410ac8
  410aa3:	lea    rbx,[rip+0x22d56]        # 0x433800
  410aaa:	mov    r8,QWORD PTR [rip+0x22ddf]        # 0x433890
  410ab1:	lea    rdx,[rip+0x13003]        # 0x423abb
  410ab8:	mov    rcx,rbx
  410abb:	call   0x41db80
  410ac0:	mov    rcx,rbx
  410ac3:	call   0x40f1a0
  410ac8:	mov    rax,QWORD PTR [rip+0x1abf1]        # 0x42b6c0
  410acf:	cmp    DWORD PTR [rax],0x1
  410ad2:	jle    0x410ade
  410ad4:	mov    ecx,0x119
  410ad9:	call   0x40f4b0
  410ade:	mov    ebx,0x119
  410ae3:	jmp    0x4100c4
  410ae8:	mov    rcx,QWORD PTR [rip+0x22da1]        # 0x433890
  410aef:	lea    r8,[rip+0x22dd2]        # 0x4338c8
  410af6:	lea    rdx,[rip+0x12f94]        # 0x423a91
  410afd:	call   0x41db78
  410b02:	cmp    eax,0x1
  410b05:	je     0x410b2c
  410b07:	lea    rbx,[rip+0x22cf2]        # 0x433800
  410b0e:	mov    r8,QWORD PTR [rip+0x22d7b]        # 0x433890
  410b15:	lea    rdx,[rip+0x12f7c]        # 0x423a98
  410b1c:	mov    rcx,rbx
  410b1f:	call   0x41db80
  410b24:	mov    rcx,rbx
  410b27:	call   0x40f1a0
  410b2c:	mov    rax,QWORD PTR [rip+0x1ab8d]        # 0x42b6c0
  410b33:	cmp    DWORD PTR [rax],0x1
  410b36:	jle    0x410b42
  410b38:	mov    ecx,0x11a
  410b3d:	call   0x40f4b0
  410b42:	mov    ebx,0x11a
  410b47:	jmp    0x4100c4
  410b4c:	mov    rax,QWORD PTR [rip+0x22d3d]        # 0x433890
  410b53:	lea    r8,[rip+0x22c2e]        # 0x433788
  410b5a:	lea    rdx,[rip+0x12f71]        # 0x423ad2
  410b61:	lea    rcx,[rax+0x1]
  410b65:	call   0x41db78
  410b6a:	jmp    0x4106ab
  410b6f:	mov    rax,QWORD PTR [rip+0x1ab4a]        # 0x42b6c0
  410b76:	mov    ebx,0x124
  410b7b:	cmp    DWORD PTR [rax],0x1
  410b7e:	jle    0x4100c4
  410b84:	mov    ecx,0x124
  410b89:	call   0x40f4b0
  410b8e:	jmp    0x4100c4
  410b93:	mov    rax,QWORD PTR [rip+0x1ab26]        # 0x42b6c0
  410b9a:	mov    ebx,0x11e
  410b9f:	cmp    DWORD PTR [rax],0x1
  410ba2:	jle    0x4100c4
  410ba8:	mov    ecx,0x11e
  410bad:	call   0x40f4b0
  410bb2:	jmp    0x4100c4
  410bb7:	mov    rax,QWORD PTR [rip+0x1ab02]        # 0x42b6c0
  410bbe:	mov    ebx,0x11c
  410bc3:	cmp    DWORD PTR [rax],0x1
  410bc6:	jle    0x4100c4
  410bcc:	mov    ecx,0x11c
  410bd1:	call   0x40f4b0
  410bd6:	jmp    0x4100c4
  410bdb:	mov    rax,QWORD PTR [rip+0x1aade]        # 0x42b6c0
  410be2:	mov    ebx,0x11b
  410be7:	cmp    DWORD PTR [rax],0x1
  410bea:	jle    0x4100c4
  410bf0:	mov    ecx,0x11b
  410bf5:	call   0x40f4b0
  410bfa:	jmp    0x4100c4
  410bff:	mov    rax,QWORD PTR [rip+0x1aaba]        # 0x42b6c0
  410c06:	mov    ebx,0x11f
  410c0b:	cmp    DWORD PTR [rax],0x1
  410c0e:	jle    0x4100c4
  410c14:	mov    ecx,0x11f
  410c19:	call   0x40f4b0
  410c1e:	jmp    0x4100c4
  410c23:	mov    rax,QWORD PTR [rip+0x1aa96]        # 0x42b6c0
  410c2a:	mov    DWORD PTR [rip+0x22b8c],0xffffffff        # 0x4337c0
  410c34:	mov    ebx,0x102
  410c39:	cmp    DWORD PTR [rax],0x1
  410c3c:	jle    0x4100c4
  410c42:	mov    ecx,0x102
  410c47:	call   0x40f4b0
  410c4c:	jmp    0x4100c4
  410c51:	mov    rax,QWORD PTR [rip+0x1aa68]        # 0x42b6c0
  410c58:	mov    ebx,0x108
  410c5d:	cmp    DWORD PTR [rax],0x1
  410c60:	jle    0x4100c4
  410c66:	mov    ecx,0x108
  410c6b:	call   0x40f4b0
  410c70:	jmp    0x4100c4
  410c75:	mov    rax,QWORD PTR [rip+0x1aa44]        # 0x42b6c0
  410c7c:	mov    ebx,0x10d
  410c81:	cmp    DWORD PTR [rax],0x1
  410c84:	jle    0x4100c4
  410c8a:	mov    ecx,0x10d
  410c8f:	call   0x40f4b0
  410c94:	jmp    0x4100c4
  410c99:	mov    rax,QWORD PTR [rip+0x22bf0]        # 0x433890
  410ca0:	movss  xmm0,DWORD PTR [rip+0x187d8]        # 0x429480
  410ca8:	divss  xmm0,DWORD PTR [rip+0x187d4]        # 0x429484
  410cb0:	cmp    BYTE PTR [rax],0x2d
  410cb3:	je     0x4115e4
  410cb9:	movss  DWORD PTR [rip+0x22be7],xmm0        # 0x4338a8
  410cc1:	mov    rax,QWORD PTR [rip+0x1a9f8]        # 0x42b6c0
  410cc8:	mov    DWORD PTR [rip+0x22bde],0x1        # 0x4338b0
  410cd2:	cmp    DWORD PTR [rax],0x1
  410cd5:	jg     0x410ad4
  410cdb:	jmp    0x410ade
  410ce0:	pxor   xmm0,xmm0
  410ce4:	divsd  xmm0,xmm0
  410ce8:	movsd  QWORD PTR [rip+0x22bd8],xmm0        # 0x4338c8
  410cf0:	mov    rax,QWORD PTR [rip+0x1a9c9]        # 0x42b6c0
  410cf7:	mov    DWORD PTR [rip+0x22baf],0x1        # 0x4338b0
  410d01:	cmp    DWORD PTR [rax],0x1
  410d04:	jg     0x410b38
  410d0a:	jmp    0x410b42
  410d0f:	mov    rax,QWORD PTR [rip+0x1a9aa]        # 0x42b6c0
  410d16:	mov    ebx,0x121
  410d1b:	cmp    DWORD PTR [rax],0x1
  410d1e:	jle    0x4100c4
  410d24:	mov    ecx,0x121
  410d29:	call   0x40f4b0
  410d2e:	jmp    0x4100c4
  410d33:	pxor   xmm0,xmm0
  410d37:	divss  xmm0,xmm0
  410d3b:	jmp    0x410cb9
  410d40:	mov    rax,QWORD PTR [rip+0x1a979]        # 0x42b6c0
  410d47:	mov    ebx,0x122
  410d4c:	cmp    DWORD PTR [rax],0x1
  410d4f:	jle    0x4100c4
  410d55:	mov    ecx,0x122
  410d5a:	call   0x40f4b0
  410d5f:	jmp    0x4100c4
  410d64:	mov    rax,QWORD PTR [rip+0x22b25]        # 0x433890
  410d6b:	cmp    BYTE PTR [rax],0x2d
  410d6e:	je     0x41130d
  410d74:	movsd  xmm0,QWORD PTR [rip+0x18724]        # 0x4294a0
  410d7c:	divsd  xmm0,QWORD PTR [rip+0x18724]        # 0x4294a8
  410d84:	jmp    0x410ce8
  410d89:	mov    rax,QWORD PTR [rip+0x1a930]        # 0x42b6c0
  410d90:	mov    DWORD PTR [rip+0x2170e],0x5        # 0x4324a8
  410d9a:	mov    ebx,0x11d
  410d9f:	cmp    DWORD PTR [rax],0x1
  410da2:	jle    0x4100c4
  410da8:	mov    ecx,0x11d
  410dad:	call   0x40f4b0
  410db2:	jmp    0x4100c4
  410db7:	lea    rcx,[rip+0x12e3a]        # 0x423bf8
  410dbe:	call   0x40f480
  410dc3:	lea    r15d,[rcx-0x1]
  410dc7:	test   r15d,r15d
  410dca:	jle    0x410de3
  410dcc:	xor    ecx,ecx
  410dce:	movzx  r11d,BYTE PTR [rax+rcx*1]
  410dd3:	mov    BYTE PTR [r10+rcx*1],r11b
  410dd7:	add    rcx,0x1
  410ddb:	cmp    r15d,ecx
  410dde:	jg     0x410dce
  410de0:	mov    r11,QWORD PTR [r9]
  410de3:	cmp    DWORD PTR [r11+0x3c],0x2
  410de8:	jne    0x410e46
  410dea:	jmp    0x41160a
  410def:	nop
  410df0:	mov    rax,QWORD PTR [r11+0x18]
  410df4:	lea    edx,[rax+rax*1]
  410df7:	test   edx,edx
  410df9:	jle    0x410e8c
  410dff:	add    rax,rax
  410e02:	mov    QWORD PTR [r11+0x18],rax
  410e06:	lea    rdx,[rax+0x2]
  410e0a:	mov    QWORD PTR [rsp+0x58],r11
  410e0f:	mov    QWORD PTR [rsp+0x50],r8
  410e14:	mov    QWORD PTR [rsp+0x48],r9
  410e19:	call   0x41db98
  410e1e:	mov    r11,QWORD PTR [rsp+0x58]
  410e23:	test   rax,rax
  410e26:	mov    r9,QWORD PTR [rsp+0x48]
  410e2b:	mov    r8,QWORD PTR [rsp+0x50]
  410e30:	mov    QWORD PTR [r11+0x8],rax
  410e34:	je     0x410e76
  410e36:	movsxd rdi,edi
  410e39:	mov    r11,QWORD PTR [r9]
  410e3c:	add    rax,rdi
  410e3f:	mov    QWORD PTR [rip+0x2166a],rax        # 0x4324b0
  410e46:	mov    edi,r15d
  410e49:	not    edi
  410e4b:	add    edi,DWORD PTR [r11+0x18]
  410e4f:	test   edi,edi
  410e51:	jg     0x410e9f
  410e53:	test   r8,r8
  410e56:	je     0x410e82
  410e58:	mov    rcx,QWORD PTR [r11+0x8]
  410e5c:	mov    rdi,QWORD PTR [rip+0x2164d]        # 0x4324b0
  410e63:	mov    edx,DWORD PTR [r11+0x24]
  410e67:	sub    rdi,rcx
  410e6a:	test   edx,edx
  410e6c:	jne    0x410df0
  410e6e:	mov    QWORD PTR [r11+0x8],0x0
  410e76:	lea    rcx,[rip+0x12cfb]        # 0x423b78
  410e7d:	call   0x40f480
  410e82:	mov    rax,QWORD PTR ds:0x8
  410e8a:	ud2    
  410e8c:	mov    rdx,rax
  410e8f:	shr    rdx,0x3
  410e93:	add    rax,rdx
  410e96:	mov    QWORD PTR [r11+0x18],rax
  410e9a:	jmp    0x410e06
  410e9f:	cmp    edi,0x2000
  410ea5:	mov    eax,0x2000
  410eaa:	cmovg  edi,eax
  410ead:	mov    eax,DWORD PTR [r11+0x28]
  410eb1:	test   eax,eax
  410eb3:	je     0x411419
  410eb9:	movsxd rax,r15d
  410ebc:	xor    r9d,r9d
  410ebf:	mov    QWORD PTR [rsp+0x48],rax
  410ec4:	mov    r10,rax
  410ec7:	jmp    0x410f0c
  410ec9:	nop    DWORD PTR [rax+0x0]
  410ed0:	cmp    eax,0xa
  410ed3:	mov    r10,QWORD PTR [rsp+0x58]
  410ed8:	je     0x4115b5
  410ede:	mov    rdx,QWORD PTR [rip+0x215eb]        # 0x4324d0
  410ee5:	mov    r8,QWORD PTR [rip+0x215d4]        # 0x4324c0
  410eec:	add    r9d,0x1
  410ef0:	lea    rcx,[r8+rdx*8]
  410ef4:	mov    r11,QWORD PTR [rcx]
  410ef7:	mov    r11,QWORD PTR [r11+0x8]
  410efb:	mov    BYTE PTR [r11+r10*1],al
  410eff:	add    r10,0x1
  410f03:	cmp    r9d,edi
  410f06:	je     0x411371
  410f0c:	mov    rcx,QWORD PTR [rip+0x2157d]        # 0x432490
  410f13:	mov    DWORD PTR [rsp+0x50],r9d
  410f18:	mov    QWORD PTR [rsp+0x58],r10
  410f1d:	call   0x41dbf0
  410f22:	cmp    eax,0xffffffff
  410f25:	movsxd r9,DWORD PTR [rsp+0x50]
  410f2a:	jne    0x410ed0
  410f2c:	mov    rcx,QWORD PTR [rip+0x2155d]        # 0x432490
  410f33:	mov    DWORD PTR [rsp+0x48],r9d
  410f38:	call   0x41dc40
  410f3d:	test   eax,eax
  410f3f:	mov    r9d,DWORD PTR [rsp+0x48]
  410f44:	jne    0x41158c
  410f4a:	mov    rdx,QWORD PTR [rip+0x2157f]        # 0x4324d0
  410f51:	mov    r8,QWORD PTR [rip+0x21568]        # 0x4324c0
  410f58:	mov    edi,r9d
  410f5b:	mov    rax,QWORD PTR [r8+rdx*8]
  410f5f:	jmp    0x411374
  410f64:	mov    rcx,QWORD PTR [rip+0x21525]        # 0x432490
  410f6b:	mov    eax,DWORD PTR [r11+0x20]
  410f6f:	mov    QWORD PTR [r11],rcx
  410f72:	mov    r11,QWORD PTR [r9]
  410f75:	mov    DWORD PTR [rip+0x2153d],eax        # 0x4324b8
  410f7b:	mov    DWORD PTR [r11+0x3c],0x1
  410f83:	jmp    0x410749
  410f88:	cmp    r9b,0x4c
  410f8c:	je     0x41133d
  410f92:	mov    rcx,QWORD PTR [rip+0x228f7]        # 0x433890
  410f99:	lea    r8,[rip+0x228f8]        # 0x433898
  410fa0:	lea    rdx,[rip+0x12ae7]        # 0x423a8e
  410fa7:	mov    ebx,0x117
  410fac:	call   0x41db78
  410fb1:	cmp    eax,0x1
  410fb4:	jne    0x410974
  410fba:	jmp    0x4101a8
  410fbf:	mov    r8d,DWORD PTR [rax+0x8]
  410fc3:	mov    r9d,0x1
  410fc9:	lea    rdx,[rip+0x1273a]        # 0x42370a
  410fd0:	lea    rbx,[rip+0x12733]        # 0x42370a
  410fd7:	mov    rcx,rdx
  410fda:	call   0x407190
  410fdf:	mov    rcx,QWORD PTR [rip+0x2288a]        # 0x433870
  410fe6:	mov    edx,eax
  410fe8:	call   0x416050
  410fed:	mov    rcx,rbx
  410ff0:	mov    ebx,0x10e
  410ff5:	call   0x40fdf0
  410ffa:	mov    QWORD PTR [rip+0x2279f],rax        # 0x4337a0
  411001:	mov    rax,QWORD PTR [rip+0x1a6b8]        # 0x42b6c0
  411008:	cmp    DWORD PTR [rax],0x1
  41100b:	jle    0x4100c4
  411011:	mov    ecx,0x10e
  411016:	call   0x40f4b0
  41101b:	jmp    0x4100c4
  411020:	mov    rax,QWORD PTR [rip+0x1a699]        # 0x42b6c0
  411027:	mov    ebx,0x127
  41102c:	cmp    DWORD PTR [rax],0x1
  41102f:	jle    0x4100c4
  411035:	mov    ecx,0x127
  41103a:	call   0x40f4b0
  41103f:	jmp    0x4100c4
  411044:	lea    rbx,[rip+0x126bf]        # 0x42370a
  41104b:	call   0x416500
  411050:	mov    rcx,rbx
  411053:	mov    r14,rax
  411056:	mov    r13,QWORD PTR [rip+0x22883]        # 0x4338e0
  41105d:	call   0x41db10
  411062:	lea    rsi,[rax+0x1]
  411066:	mov    r12,rax
  411069:	movzx  edi,BYTE PTR [rax+0x1]
  41106d:	xor    ebx,ebx
  41106f:	lea    r15,[rip+0x2278a]        # 0x433800
  411076:	mov    rbp,rsi
  411079:	jmp    0x41109e
  41107b:	cmp    dil,0x5c
  41107f:	je     0x41113d
  411085:	test   dil,dil
  411088:	lea    rax,[rsi+0x1]
  41108c:	je     0x4110f6
  41108e:	test   dil,dil
  411091:	je     0x411150
  411097:	movzx  edi,BYTE PTR [rsi+0x1]
  41109b:	mov    rsi,rax
  41109e:	cmp    dil,0x2f
  4110a2:	jne    0x41107b
  4110a4:	mov    rcx,rbp
  4110a7:	mov    BYTE PTR [rsi],0x0
  4110aa:	call   0x41db50
  4110af:	mov    r9d,0x1
  4110b5:	mov    r8d,eax
  4110b8:	mov    rdx,rbp
  4110bb:	mov    rcx,rbp
  4110be:	call   0x407190
  4110c3:	mov    r8,r13
  4110c6:	mov    rdx,rbp
  4110c9:	mov    ecx,0x64
  4110ce:	call   0x40e6c0
  4110d3:	test   rax,rax
  4110d6:	mov    rbx,rax
  4110d9:	je     0x41116e
  4110df:	mov    rdx,rbx
  4110e2:	mov    rcx,r14
  4110e5:	call   0x416750
  4110ea:	lea    rbp,[rsi+0x1]
  4110ee:	mov    r13,rbx
  4110f1:	mov    rax,rbp
  4110f4:	jmp    0x41108e
  4110f6:	mov    rcx,rbp
  4110f9:	call   0x41db50
  4110fe:	mov    r9d,0x1
  411104:	mov    r8d,eax
  411107:	mov    rdx,rbp
  41110a:	mov    rcx,rbp
  41110d:	call   0x407190
  411112:	mov    rcx,rbp
  411115:	call   0x40fdf0
  41111a:	mov    rbx,rax
  41111d:	mov    DWORD PTR [rax+0x8],0x64
  411124:	mov    DWORD PTR [rax+0x2110],0x1
  41112e:	mov    QWORD PTR [rax+0x20],r13
  411132:	call   0x416500
  411137:	mov    QWORD PTR [rbx+0x30],rax
  41113b:	jmp    0x4110ea
  41113d:	movzx  edi,BYTE PTR [rsi+0x1]
  411141:	cmp    dil,0x2f
  411145:	je     0x411161
  411147:	add    rsi,0x1
  41114b:	jmp    0x41109e
  411150:	mov    QWORD PTR [rbx+0x40],r14
  411154:	mov    rcx,r12
  411157:	call   0x41dc08
  41115c:	jmp    0x4103b2
  411161:	movzx  edi,BYTE PTR [rsi+0x2]
  411165:	add    rsi,0x2
  411169:	jmp    0x41109e
  41116e:	lea    rdx,[rip+0x127eb]        # 0x423960
  411175:	mov    r8,rbp
  411178:	mov    rcx,r15
  41117b:	call   0x41db80
  411180:	mov    rcx,r15
  411183:	call   0x40f1a0
  411188:	mov    rbx,QWORD PTR [rip+0x22751]        # 0x4338e0
  41118f:	jmp    0x4110ea
  411194:	lea    r8,[rip+0x22625]        # 0x4337c0
  41119b:	lea    rdx,[rip+0x127ff]        # 0x4239a1
  4111a2:	mov    rcx,rbx
  4111a5:	call   0x41db78
  4111aa:	cmp    eax,0x1
  4111ad:	je     0x4111ec
  4111af:	mov    r8,QWORD PTR [rip+0x226da]        # 0x433890
  4111b6:	lea    rdx,[rip+0x127e7]        # 0x4239a4
  4111bd:	jmp    0x41018f
  4111c2:	lea    rbx,[rip+0x22637]        # 0x433800
  4111c9:	mov    r8,QWORD PTR [rip+0x226c0]        # 0x433890
  4111d0:	lea    rdx,[rip+0x12929]        # 0x423b00
  4111d7:	mov    rcx,rbx
  4111da:	call   0x41db80
  4111df:	mov    rcx,rbx
  4111e2:	call   0x40f1a0
  4111e7:	jmp    0x4106a4
  4111ec:	mov    eax,DWORD PTR [rip+0x225ce]        # 0x4337c0
  4111f2:	lea    edx,[rax+0x80]
  4111f8:	cmp    edx,0xff
  4111fe:	ja     0x41125e
  411200:	mov    BYTE PTR [rip+0x22582],al        # 0x433788
  411206:	mov    ebx,0x111
  41120b:	jmp    0x4101a8
  411210:	lea    rsi,[rip+0x225e9]        # 0x433800
  411217:	mov    r8,QWORD PTR [rip+0x22672]        # 0x433890
  41121e:	lea    rdx,[rip+0x126ea]        # 0x42390f
  411225:	mov    rcx,rsi
  411228:	call   0x41db80
  41122d:	mov    rcx,rsi
  411230:	call   0x40f1a0
  411235:	jmp    0x41061e
  41123a:	mov    BYTE PTR [rip+0x22547],0x9        # 0x433788
  411241:	jmp    0x4106ab
  411246:	mov    BYTE PTR [rip+0x2253b],0xd        # 0x433788
  41124d:	jmp    0x4106ab
  411252:	mov    BYTE PTR [rip+0x2252f],0xb        # 0x433788
  411259:	jmp    0x4106ab
  41125e:	cmp    eax,0xff
  411263:	ja     0x4111af
  411269:	mov    BYTE PTR [rip+0x22563],al        # 0x4337d2
  41126f:	mov    ebx,0x115
  411274:	jmp    0x4101a8
  411279:	mov    rdi,QWORD PTR [rsp+0x28]
  41127e:	movsxd rax,DWORD PTR [rsp+0x44]
  411283:	add    rax,QWORD PTR [rdi]
  411286:	mov    r12,rax
  411289:	mov    QWORD PTR [rip+0x21220],rax        # 0x4324b0
  411290:	call   0x41e680
  411295:	movsxd rcx,eax
  411298:	movzx  edx,WORD PTR [rbp+rcx*2+0x0]
  41129d:	test   dx,dx
  4112a0:	je     0x4112af
  4112a2:	mov    DWORD PTR [rip+0x211f8],eax        # 0x4324a0
  4112a8:	mov    QWORD PTR [rip+0x211e9],r12        # 0x432498
  4112af:	movsx  r8d,WORD PTR [rbx+rcx*2]
  4112b4:	lea    r9d,[r8+0x1]
  4112b8:	movsxd r9,r9d
  4112bb:	movsx  r9d,WORD PTR [rsi+r9*2]
  4112c0:	cmp    eax,r9d
  4112c3:	je     0x4112e4
  4112c5:	lea    r10,[rip+0x15ab4]        # 0x426d80
  4112cc:	movsx  rcx,WORD PTR [r10+rcx*2]
  4112d1:	movsx  r8d,WORD PTR [rbx+rcx*2]
  4112d6:	lea    eax,[r8+0x1]
  4112da:	cdqe   
  4112dc:	movsx  eax,WORD PTR [rsi+rax*2]
  4112e0:	cmp    ecx,eax
  4112e2:	jne    0x4112cc
  4112e4:	lea    eax,[r8+0x1]
  4112e8:	movsx  eax,WORD PTR [r14+rax*2]
  4112ed:	cmp    eax,0x17f
  4112f2:	je     0x41135c
  4112f4:	mov    rdi,QWORD PTR [rsp+0x28]
  4112f9:	test   eax,eax
  4112fb:	mov    rdi,QWORD PTR [rdi]
  4112fe:	mov    QWORD PTR [rsp+0x30],rdi
  411303:	jne    0x411347
  411305:	movsx  eax,dx
  411308:	jmp    0x40ffe8
  41130d:	movss  xmm0,DWORD PTR [rip+0x1816b]        # 0x429480
  411315:	movss  xmm1,DWORD PTR [rip+0x18173]        # 0x429490
  41131d:	divss  xmm0,DWORD PTR [rip+0x1815f]        # 0x429484
  411325:	pxor   xmm2,xmm2
  411329:	xorps  xmm0,xmm1
  41132c:	cvtss2sd xmm2,xmm0
  411330:	movsd  QWORD PTR [rip+0x22590],xmm2        # 0x4338c8
  411338:	jmp    0x410cf0
  41133d:	mov    ebx,0x118
  411342:	jmp    0x4101a8
  411347:	add    r12,0x1
  41134b:	mov    QWORD PTR [rip+0x2115e],r12        # 0x4324b0
  411352:	movzx  r8d,BYTE PTR [r12]
  411357:	jmp    0x40ff44
  41135c:	mov    rax,QWORD PTR [rsp+0x28]
  411361:	mov    rax,QWORD PTR [rax]
  411364:	mov    QWORD PTR [rsp+0x30],rax
  411369:	movsx  eax,dx
  41136c:	jmp    0x40ffe8
  411371:	mov    rax,QWORD PTR [rcx]
  411374:	mov    DWORD PTR [rip+0x2113e],edi        # 0x4324b8
  41137a:	mov    ecx,edi
  41137c:	test   ecx,ecx
  41137e:	mov    DWORD PTR [rax+0x20],ecx
  411381:	jne    0x4114bb
  411387:	test   r15d,r15d
  41138a:	je     0x4114ca
  411390:	lea    rdi,[r8+rdx*8]
  411394:	xor    ecx,ecx
  411396:	mov    r8d,0x2
  41139c:	mov    r9,QWORD PTR [rdi]
  41139f:	mov    DWORD PTR [r9+0x3c],0x2
  4113a7:	lea    r10d,[r15+rcx*1]
  4113ab:	movsxd r15,r10d
  4113ae:	cmp    r15,QWORD PTR [r9+0x18]
  4113b2:	ja     0x41152c
  4113b8:	mov    rax,QWORD PTR [r9+0x8]
  4113bc:	mov    BYTE PTR [rax+r15*1],0x0
  4113c1:	mov    rax,QWORD PTR [rdi]
  4113c4:	cmp    r8d,0x1
  4113c8:	mov    rcx,QWORD PTR [rsp+0x28]
  4113cd:	mov    DWORD PTR [rip+0x210e4],r10d        # 0x4324b8
  4113d4:	mov    rax,QWORD PTR [rax+0x8]
  4113d8:	mov    BYTE PTR [rax+r15*1+0x1],0x0
  4113de:	mov    rax,QWORD PTR [rdi]
  4113e1:	mov    rax,QWORD PTR [rax+0x8]
  4113e5:	mov    QWORD PTR [rcx],rax
  4113e8:	jne    0x4114fc
  4113ee:	mov    QWORD PTR [rip+0x210bb],rax        # 0x4324b0
  4113f5:	mov    eax,DWORD PTR [rip+0x210ad]        # 0x4324a8
  4113fb:	mov    DWORD PTR [rip+0x2109f],0x0        # 0x4324a4
  411405:	sub    eax,0x1
  411408:	mov    edx,eax
  41140a:	shr    edx,0x1f
  41140d:	add    eax,edx
  41140f:	sar    eax,1
  411411:	add    eax,0x34
  411414:	jmp    0x410030
  411419:	call   0x41dcb0
  41141e:	mov    DWORD PTR [rax],0x0
  411424:	movsxd rax,edi
  411427:	movsxd rdi,r15d
  41142a:	mov    QWORD PTR [rsp+0x48],rax
  41142f:	jmp    0x41146a
  411431:	mov    rcx,QWORD PTR [rip+0x21058]        # 0x432490
  411438:	call   0x41dc40
  41143d:	test   eax,eax
  41143f:	je     0x411598
  411445:	call   0x41dcb0
  41144a:	cmp    DWORD PTR [rax],0x4
  41144d:	jne    0x41158c
  411453:	call   0x41dcb0
  411458:	mov    rcx,QWORD PTR [rip+0x21031]        # 0x432490
  41145f:	mov    DWORD PTR [rax],0x0
  411465:	call   0x41dc50
  41146a:	mov    rdx,QWORD PTR [rip+0x2105f]        # 0x4324d0
  411471:	mov    rax,QWORD PTR [rip+0x21048]        # 0x4324c0
  411478:	mov    rcx,rdi
  41147b:	mov    r9,QWORD PTR [rip+0x2100e]        # 0x432490
  411482:	mov    r8,QWORD PTR [rsp+0x48]
  411487:	mov    rax,QWORD PTR [rax+rdx*8]
  41148b:	mov    edx,0x1
  411490:	add    rcx,QWORD PTR [rax+0x8]
  411494:	call   0x41dc10
  411499:	test   eax,eax
  41149b:	mov    ecx,eax
  41149d:	mov    DWORD PTR [rip+0x21015],eax        # 0x4324b8
  4114a3:	je     0x411431
  4114a5:	mov    rdx,QWORD PTR [rip+0x21024]        # 0x4324d0
  4114ac:	mov    r8,QWORD PTR [rip+0x2100d]        # 0x4324c0
  4114b3:	mov    r9,QWORD PTR [r8+rdx*8]
  4114b7:	mov    DWORD PTR [r9+0x20],eax
  4114bb:	lea    rdi,[r8+rdx*8]
  4114bf:	xor    r8d,r8d
  4114c2:	mov    r9,QWORD PTR [rdi]
  4114c5:	jmp    0x4113a7
  4114ca:	mov    rcx,QWORD PTR [rip+0x20fbf]        # 0x432490
  4114d1:	call   0x40f970
  4114d6:	mov    rax,QWORD PTR [rip+0x20fe3]        # 0x4324c0
  4114dd:	mov    rdx,QWORD PTR [rip+0x20fec]        # 0x4324d0
  4114e4:	mov    r8d,0x1
  4114ea:	mov    ecx,DWORD PTR [rip+0x20fc8]        # 0x4324b8
  4114f0:	lea    rdi,[rax+rdx*8]
  4114f4:	mov    r9,QWORD PTR [rdi]
  4114f7:	jmp    0x4113a7
  4114fc:	cmp    r8d,0x2
  411500:	mov    r10,r15
  411503:	je     0x41157d
  411505:	movsxd rdx,DWORD PTR [rsp+0x44]
  41150a:	lea    r12,[rax+rdx*1]
  41150e:	mov    QWORD PTR [rip+0x20f9b],r12        # 0x4324b0
  411515:	call   0x41e680
  41151a:	mov    rdi,QWORD PTR [rsp+0x28]
  41151f:	mov    rdi,QWORD PTR [rdi]
  411522:	mov    QWORD PTR [rsp+0x30],rdi
  411527:	jmp    0x411352
  41152c:	sar    ecx,1
  41152e:	mov    DWORD PTR [rsp+0x58],r8d
  411533:	mov    DWORD PTR [rsp+0x50],r10d
  411538:	mov    edx,ecx
  41153a:	mov    rcx,QWORD PTR [r9+0x8]
  41153e:	mov    QWORD PTR [rsp+0x48],r9
  411543:	add    edx,r10d
  411546:	movsxd rdx,edx
  411549:	call   0x41db98
  41154e:	mov    r9,QWORD PTR [rsp+0x48]
  411553:	mov    r10d,DWORD PTR [rsp+0x50]
  411558:	mov    r8d,DWORD PTR [rsp+0x58]
  41155d:	mov    QWORD PTR [r9+0x8],rax
  411561:	mov    rax,QWORD PTR [rdi]
  411564:	mov    rax,QWORD PTR [rax+0x8]
  411568:	test   rax,rax
  41156b:	jne    0x4113bc
  411571:	lea    rcx,[rip+0x12650]        # 0x423bc8
  411578:	call   0x40f480
  41157d:	mov    rax,QWORD PTR [rdi]
  411580:	add    r10,QWORD PTR [rax+0x8]
  411584:	mov    r12,r10
  411587:	jmp    0x410797
  41158c:	lea    rcx,[rip+0x12611]        # 0x423ba4
  411593:	call   0x40f480
  411598:	mov    rdx,QWORD PTR [rip+0x20f31]        # 0x4324d0
  41159f:	mov    r8,QWORD PTR [rip+0x20f1a]        # 0x4324c0
  4115a6:	mov    ecx,DWORD PTR [rip+0x20f0c]        # 0x4324b8
  4115ac:	mov    rax,QWORD PTR [r8+rdx*8]
  4115b0:	jmp    0x41137c
  4115b5:	mov    rdx,QWORD PTR [rip+0x20f14]        # 0x4324d0
  4115bc:	mov    r8,QWORD PTR [rip+0x20efd]        # 0x4324c0
  4115c3:	lea    edi,[r9+0x1]
  4115c7:	mov    r10,QWORD PTR [rsp+0x48]
  4115cc:	lea    rax,[r8+rdx*8]
  4115d0:	mov    rcx,QWORD PTR [rax]
  4115d3:	add    r10,QWORD PTR [rcx+0x8]
  4115d7:	mov    BYTE PTR [r10+r9*1],0xa
  4115dc:	mov    rax,QWORD PTR [rax]
  4115df:	jmp    0x411374
  4115e4:	movss  xmm1,DWORD PTR [rip+0x17ea4]        # 0x429490
  4115ec:	xorps  xmm0,xmm1
  4115ef:	movss  DWORD PTR [rip+0x222b1],xmm0        # 0x4338a8
  4115f7:	jmp    0x410cc1
  4115fc:	mov    r9d,0x1
  411602:	xor    r8d,r8d
  411605:	jmp    0x410fc9
  41160a:	mov    DWORD PTR [rip+0x20ea4],0x0        # 0x4324b8
  411614:	mov    DWORD PTR [r11+0x20],0x0
  41161c:	jmp    0x411387
  411621:	lea    rcx,[rip+0x12518]        # 0x423b40
  411628:	call   0x40f480
  41162d:	lea    r8,[rip+0x2218c]        # 0x4337c0
  411634:	lea    rdx,[rip+0x12366]        # 0x4239a1
  41163b:	mov    rcx,rbx
  41163e:	call   0x41db78
  411643:	cmp    eax,0x1
  411646:	je     0x411681
  411648:	mov    r8,QWORD PTR [rip+0x22241]        # 0x433890
  41164f:	lea    rdx,[rip+0x12364]        # 0x4239ba
  411656:	jmp    0x41018f
  41165b:	mov    rcx,rbx
  41165e:	call   0x40f5c0
  411663:	test   eax,eax
  411665:	je     0x4116c8
  411667:	cmp    eax,0x1
  41166a:	je     0x4116a6
  41166c:	cmp    eax,0xffffffff
  41166f:	mov    ebx,0x0
  411674:	mov    eax,0x114
  411679:	cmove  ebx,eax
  41167c:	jmp    0x4101a8
  411681:	mov    eax,DWORD PTR [rip+0x22139]        # 0x4337c0
  411687:	lea    edx,[rax+0x8000]
  41168d:	cmp    edx,0xffff
  411693:	ja     0x4116db
  411695:	mov    WORD PTR [rip+0x22134],ax        # 0x4337d0
  41169c:	mov    ebx,0x112
  4116a1:	jmp    0x4101a8
  4116a6:	movabs rax,0x7fffffffffffffff
  4116b0:	and    rax,QWORD PTR [rip+0x221e9]        # 0x4338a0
  4116b7:	mov    ebx,0x114
  4116bc:	mov    QWORD PTR [rip+0x22215],rax        # 0x4338d8
  4116c3:	jmp    0x4101a8
  4116c8:	mov    r8,QWORD PTR [rip+0x221c1]        # 0x433890
  4116cf:	lea    rdx,[rip+0x122fb]        # 0x4239d1
  4116d6:	jmp    0x41018f
  4116db:	cmp    eax,0xffff
  4116e0:	jbe    0x410881
  4116e6:	jmp    0x411648
  4116eb:	mov    BYTE PTR [rip+0x22096],0xa        # 0x433788
  4116f2:	jmp    0x4106ab
  4116f7:	mov    BYTE PTR [rip+0x2208a],0xc        # 0x433788
  4116fe:	jmp    0x4106ab
  411703:	mov    BYTE PTR [rip+0x2207e],0x8        # 0x433788
  41170a:	jmp    0x4106ab
  41170f:	mov    BYTE PTR [rip+0x22072],0x7        # 0x433788
  411716:	jmp    0x4106ab
  41171b:	mov    BYTE PTR [rip+0x22066],0x5c        # 0x433788
  411722:	jmp    0x4106ab
  411727:	mov    BYTE PTR [rip+0x2205a],0x7f        # 0x433788
  41172e:	jmp    0x4106ab
  411733:	mov    BYTE PTR [rip+0x2204e],0x27        # 0x433788
  41173a:	jmp    0x4106ab
  41173f:	mov    BYTE PTR [rip+0x22043],cl        # 0x433788
  411745:	jmp    0x4106ab
  41174a:	mov    rcx,QWORD PTR [rip+0x2211f]        # 0x433870
  411751:	mov    edx,0x30
  411756:	call   0x416110
  41175b:	jmp    0x410446
  411760:	mov    rax,QWORD PTR [rip+0x22171]        # 0x4338d8
  411767:	cmp    rax,0xffffffff80000000
  41176d:	jl     0x4117e8
  41176f:	mov    DWORD PTR [rip+0x2204b],eax        # 0x4337c0
  411775:	mov    rax,QWORD PTR [rip+0x19f44]        # 0x42b6c0
  41177c:	cmp    DWORD PTR [rax],0x1
  41177f:	jle    0x41178b
  411781:	mov    ecx,0x113
  411786:	call   0x40f4b0
  41178b:	mov    ebx,0x113
  411790:	jmp    0x4100c4
  411795:	mov    rax,QWORD PTR [rip+0x22104]        # 0x4338a0
  41179c:	cmp    rax,0x7fffffff
  4117a2:	jbe    0x41176f
  4117a4:	mov    edx,0xffffffff
  4117a9:	cmp    rax,rdx
  4117ac:	ja     0x4117d8
  4117ae:	mov    DWORD PTR [rip+0x220e4],eax        # 0x433898
  4117b4:	mov    rax,QWORD PTR [rip+0x19f05]        # 0x42b6c0
  4117bb:	mov    ebx,0x117
  4117c0:	cmp    DWORD PTR [rax],0x1
  4117c3:	jle    0x4100c4
  4117c9:	mov    ecx,0x117
  4117ce:	call   0x40f4b0
  4117d3:	jmp    0x4100c4
  4117d8:	test   rax,rax
  4117db:	js     0x411921
  4117e1:	mov    QWORD PTR [rip+0x220f0],rax        # 0x4338d8
  4117e8:	mov    rax,QWORD PTR [rip+0x19ed1]        # 0x42b6c0
  4117ef:	cmp    DWORD PTR [rax],0x1
  4117f2:	jle    0x4117fe
  4117f4:	mov    ecx,0x114
  4117f9:	call   0x40f4b0
  4117fe:	mov    ebx,0x114
  411803:	jmp    0x4100c4
  411808:	lea    rsi,[rip+0x21ff1]        # 0x433800
  41180f:	mov    r8,QWORD PTR [rip+0x2207a]        # 0x433890
  411816:	lea    rdx,[rip+0x122bb]        # 0x423ad8
  41181d:	mov    rcx,rsi
  411820:	call   0x41db80
  411825:	mov    rcx,rsi
  411828:	call   0x40f1a0
  41182d:	jmp    0x4107da
  411832:	lea    r8,[rip+0x2205f]        # 0x433898
  411839:	lea    rdx,[rip+0x121c1]        # 0x423a01
  411840:	mov    rcx,rbx
  411843:	call   0x41db78
  411848:	cmp    eax,0x1
  41184b:	jne    0x41185e
  41184d:	mov    eax,DWORD PTR [rip+0x22045]        # 0x433898
  411853:	cmp    eax,0xffff
  411858:	jbe    0x410881
  41185e:	mov    r8,QWORD PTR [rip+0x2202b]        # 0x433890
  411865:	lea    rbx,[rip+0x21f94]        # 0x433800
  41186c:	lea    rdx,[rip+0x121b5]        # 0x423a28
  411873:	mov    rcx,rbx
  411876:	call   0x41db80
  41187b:	mov    rcx,rbx
  41187e:	call   0x40f1a0
  411883:	mov    eax,DWORD PTR [rip+0x2200f]        # 0x433898
  411889:	jmp    0x410881
  41188e:	lea    r8,[rip+0x2200b]        # 0x4338a0
  411895:	lea    rdx,[rip+0x121ac]        # 0x423a48
  41189c:	mov    rcx,rbx
  41189f:	mov    ebx,0x118
  4118a4:	call   0x41db78
  4118a9:	cmp    eax,0x1
  4118ac:	je     0x4101a8
  4118b2:	mov    r8,QWORD PTR [rip+0x21fd7]        # 0x433890
  4118b9:	lea    rdx,[rip+0x12190]        # 0x423a50
  4118c0:	jmp    0x410982
  4118c5:	lea    r8,[rip+0x21fcc]        # 0x433898
  4118cc:	lea    rdx,[rip+0x1212e]        # 0x423a01
  4118d3:	mov    rcx,rbx
  4118d6:	call   0x41db78
  4118db:	cmp    eax,0x1
  4118de:	jne    0x4118f1
  4118e0:	mov    eax,DWORD PTR [rip+0x21fb2]        # 0x433898
  4118e6:	cmp    eax,0xff
  4118eb:	jbe    0x411269
  4118f1:	mov    r8,QWORD PTR [rip+0x21f98]        # 0x433890
  4118f8:	lea    rbx,[rip+0x21f01]        # 0x433800
  4118ff:	lea    rdx,[rip+0x12102]        # 0x423a08
  411906:	mov    rcx,rbx
  411909:	call   0x41db80
  41190e:	mov    rcx,rbx
  411911:	call   0x40f1a0
  411916:	mov    eax,DWORD PTR [rip+0x21f7c]        # 0x433898
  41191c:	jmp    0x411269
  411921:	mov    rax,QWORD PTR [rip+0x19d98]        # 0x42b6c0
  411928:	mov    ebx,0x118
  41192d:	cmp    DWORD PTR [rax],0x1
  411930:	jle    0x4100c4
  411936:	mov    ecx,0x118
  41193b:	call   0x40f4b0
  411940:	jmp    0x4100c4
  411945:	nop
  411946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411950:	push   r13
  411952:	push   r12
  411954:	push   rbp
  411955:	push   rdi
  411956:	push   rsi
  411957:	push   rbx
  411958:	sub    rsp,0x28
  41195c:	mov    DWORD PTR [rip+0x20b76],0x0        # 0x4324dc
  411966:	mov    DWORD PTR [rip+0x20b68],0x0        # 0x4324d8
  411970:	lea    r13,[rip+0xdb51]        # 0x41f4c8
  411977:	mov    QWORD PTR [rip+0x21ee6],0x0        # 0x433868
  411982:	xor    esi,esi
  411984:	call   0x416500
  411989:	mov    QWORD PTR [rip+0x20b60],rax        # 0x4324f0
  411990:	call   0x416500
  411995:	mov    DWORD PTR [rip+0x20b4d],0x0        # 0x4324ec
  41199f:	mov    QWORD PTR [rip+0x20b52],rax        # 0x4324f8
  4119a6:	call   0x416500
  4119ab:	mov    QWORD PTR [rip+0x21f06],rax        # 0x4338b8
  4119b2:	call   0x416500
  4119b7:	mov    QWORD PTR [rip+0x21f02],rax        # 0x4338c0
  4119be:	call   0x416500
  4119c3:	mov    QWORD PTR [rip+0x21eae],rax        # 0x433878
  4119ca:	call   0x416500
  4119cf:	mov    QWORD PTR [rip+0x21eaa],rax        # 0x433880
  4119d6:	call   0x416500
  4119db:	mov    QWORD PTR [rip+0x21df6],rax        # 0x4337d8
  4119e2:	call   0x416500
  4119e7:	mov    QWORD PTR [rip+0x21df2],rax        # 0x4337e0
  4119ee:	call   0x416500
  4119f3:	mov    QWORD PTR [rip+0x21dce],rax        # 0x4337c8
  4119fa:	call   0x416500
  4119ff:	mov    QWORD PTR [rip+0x21eca],rax        # 0x4338d0
  411a06:	call   0x416500
  411a0b:	mov    r12,QWORD PTR [rip+0x19e8e]        # 0x42b8a0
  411a12:	mov    QWORD PTR [rip+0x21d67],rax        # 0x433780
  411a19:	nop    DWORD PTR [rax+0x0]
  411a20:	mov    rcx,QWORD PTR [r13+rsi*8+0x0]
  411a25:	lea    edi,[rsi+0x1]
  411a28:	lea    rbp,[rsi*8+0x0]
  411a30:	add    rsi,0x1
  411a34:	call   0x40fdf0
  411a39:	mov    ecx,edi
  411a3b:	mov    DWORD PTR [rax+0x8],0x68
  411a42:	mov    DWORD PTR [rax+0xc],0x6c
  411a49:	mov    DWORD PTR [rax+0x2130],edi
  411a4f:	mov    DWORD PTR [rax+0x5c],edi
  411a52:	mov    rbx,rax
  411a55:	call   0x415330
  411a5a:	cdqe   
  411a5c:	mov    ecx,edi
  411a5e:	mov    QWORD PTR [rbx+0x2098],0x1
  411a69:	mov    QWORD PTR [rbx+0x2090],rax
  411a70:	call   0x40c710
  411a75:	mov    QWORD PTR [rbx+0x50],rbx
  411a79:	mov    DWORD PTR [rbx+0x64],eax
  411a7c:	call   0x416500
  411a81:	cmp    rsi,0xc
  411a85:	mov    QWORD PTR [rbx+0x40],rax
  411a89:	mov    QWORD PTR [rbp+r12*1+0x8],rbx
  411a8e:	jne    0x411a20
  411a90:	mov    DWORD PTR [rip+0x21e4e],0x1        # 0x4338e8
  411a9a:	call   0x415f30
  411a9f:	mov    QWORD PTR [rip+0x21dca],rax        # 0x433870
  411aa6:	add    rsp,0x28
  411aaa:	pop    rbx
  411aab:	pop    rsi
  411aac:	pop    rdi
  411aad:	pop    rbp
  411aae:	pop    r12
  411ab0:	pop    r13
  411ab2:	ret    
  411ab3:	nop    DWORD PTR [rax]
  411ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411ac0:	mov    rax,QWORD PTR [rip+0x19dd9]        # 0x42b8a0
  411ac7:	movsxd rcx,ecx
  411aca:	mov    rax,QWORD PTR [rax+rcx*8]
  411ace:	ret    
  411acf:	nop
  411ad0:	cmp    ecx,0x10
  411ad3:	je     0x411b50
  411ad5:	jle    0x411b05
  411ad7:	cmp    ecx,0x40
  411ada:	lea    rax,[rip+0x123be]        # 0x423e9f
  411ae1:	je     0x411b03
  411ae3:	jle    0x411b33
  411ae5:	cmp    ecx,0x80
  411aeb:	lea    rax,[rip+0x12356]        # 0x423e48
  411af2:	je     0x411b03
  411af4:	cmp    ecx,0x100
  411afa:	lea    rax,[rip+0x12352]        # 0x423e53
  411b01:	jne    0x411b2b
  411b03:	repz ret 
  411b05:	cmp    ecx,0x2
  411b08:	lea    rax,[rip+0x12355]        # 0x423e64
  411b0f:	je     0x411b03
  411b11:	jle    0x411b41
  411b13:	cmp    ecx,0x4
  411b16:	lea    rax,[rip+0x12353]        # 0x423e70
  411b1d:	je     0x411b03
  411b1f:	cmp    ecx,0x8
  411b22:	lea    rax,[rip+0x12353]        # 0x423e7c
  411b29:	je     0x411b03
  411b2b:	lea    rax,[rip+0x12375]        # 0x423ea7
  411b32:	ret    
  411b33:	cmp    ecx,0x20
  411b36:	lea    rax,[rip+0x12356]        # 0x423e93
  411b3d:	jne    0x411b2b
  411b3f:	repz ret 
  411b41:	cmp    ecx,0x1
  411b44:	lea    rax,[rip+0x12310]        # 0x423e5b
  411b4b:	jne    0x411b2b
  411b4d:	repz ret 
  411b4f:	nop
  411b50:	lea    rax,[rip+0x12333]        # 0x423e8a
  411b57:	ret    
  411b58:	nop    DWORD PTR [rax+rax*1+0x0]
  411b60:	push   r14
  411b62:	push   r13
  411b64:	push   r12
  411b66:	push   rbp
  411b67:	push   rdi
  411b68:	push   rsi
  411b69:	push   rbx
  411b6a:	sub    rsp,0x60
  411b6e:	cmp    ecx,0x100
  411b74:	mov    ebx,ecx
  411b76:	mov    rbp,rdx
  411b79:	mov    r14,r8
  411b7c:	mov    r13,r9
  411b7f:	je     0x411d13
  411b85:	test   rdx,rdx
  411b88:	je     0x41219b
  411b8e:	lea    eax,[rcx-0x80]
  411b91:	test   eax,0xffffff7f
  411b96:	je     0x411ba2
  411b98:	mov    rax,QWORD PTR [rip+0x19d41]        # 0x42b8e0
  411b9f:	add    DWORD PTR [rax],0x1
  411ba2:	mov    edx,DWORD PTR [rsp+0xc0]
  411ba9:	test   edx,edx
  411bab:	jne    0x411cf0
  411bb1:	mov    rcx,QWORD PTR [r13+0x20]
  411bb5:	cmp    ebx,0x10
  411bb8:	je     0x411c20
  411bba:	jg     0x411ca4
  411bc0:	cmp    ebx,0x2
  411bc3:	je     0x411c6c
  411bc9:	jle    0x411fd1
  411bcf:	cmp    ebx,0x4
  411bd2:	je     0x411c20
  411bd4:	cmp    ebx,0x8
  411bd7:	jne    0x411fda
  411bdd:	lea    rdx,[rsp+0x40]
  411be2:	mov    DWORD PTR [rsp+0x40],0x4
  411bea:	call   0x403680
  411bef:	cmp    DWORD PTR [rsp+0x40],0x4
  411bf4:	jne    0x412080
  411bfa:	mov    eax,DWORD PTR [rsp+0x48]
  411bfe:	or     DWORD PTR [rbp+0x20b8],0x8
  411c05:	mov    DWORD PTR [rbp+0x20e0],eax
  411c0b:	xor    eax,eax
  411c0d:	nop    DWORD PTR [rax]
  411c10:	add    rsp,0x60
  411c14:	pop    rbx
  411c15:	pop    rsi
  411c16:	pop    rdi
  411c17:	pop    rbp
  411c18:	pop    r12
  411c1a:	pop    r13
  411c1c:	pop    r14
  411c1e:	ret    
  411c1f:	nop
  411c20:	mov    eax,DWORD PTR [rcx]
  411c22:	lea    rsi,[rsp+0x40]
  411c27:	mov    edx,0x4
  411c2c:	cmp    eax,0xc
  411c2f:	cmovne eax,edx
  411c32:	mov    rdx,rsi
  411c35:	mov    DWORD PTR [rsp+0x40],eax
  411c39:	call   0x403680
  411c3e:	cmp    DWORD PTR [rsp+0x40],0xc
  411c43:	mov    edx,DWORD PTR [rsp+0x48]
  411c47:	je     0x4120c0
  411c4d:	cmp    edx,0x1
  411c50:	jbe    0x41216b
  411c56:	mov    ecx,ebx
  411c58:	call   0x411ad0
  411c5d:	lea    rcx,[rip+0x122a1]        # 0x423f05
  411c64:	mov    rdx,rax
  411c67:	call   0x40b3d0
  411c6c:	xor    r12d,r12d
  411c6f:	xor    edx,edx
  411c71:	cmp    ebx,0x100
  411c77:	je     0x411d30
  411c7d:	cmp    ebx,0x80
  411c83:	je     0x411d90
  411c89:	cmp    ebx,0x40
  411c8c:	ja     0x412013
  411c92:	lea    rax,[rip+0x1246f]        # 0x424108
  411c99:	mov    ecx,ebx
  411c9b:	movsxd rcx,DWORD PTR [rax+rcx*4]
  411c9f:	add    rax,rcx
  411ca2:	jmp    rax
  411ca4:	cmp    ebx,0x40
  411ca7:	je     0x411c20
  411cad:	jle    0x412070
  411cb3:	cmp    ebx,0x80
  411cb9:	je     0x411c6c
  411cbb:	cmp    ebx,0x100
  411cc1:	jne    0x411fda
  411cc7:	lea    rsi,[rsp+0x40]
  411ccc:	mov    DWORD PTR [rsp+0x40],0xc
  411cd4:	mov    rdx,rsi
  411cd7:	call   0x403680
  411cdc:	cmp    DWORD PTR [rsp+0x40],0xc
  411ce1:	jne    0x411c56
  411ce7:	mov    r12,QWORD PTR [rsp+0x50]
  411cec:	xor    edx,edx
  411cee:	jmp    0x411c71
  411cf0:	mov    ecx,0x1
  411cf5:	call   0x415bb0
  411cfa:	mov    rdx,r13
  411cfd:	mov    rsi,rax
  411d00:	mov    rcx,rax
  411d03:	call   0x415c40
  411d08:	mov    rcx,r13
  411d0b:	mov    r13,rsi
  411d0e:	jmp    0x411bb5
  411d13:	test   rdx,rdx
  411d16:	je     0x411d24
  411d18:	lea    rcx,[rip+0x12199]        # 0x423eb8
  411d1f:	call   0x40b3d0
  411d24:	xor    ebp,ebp
  411d26:	jmp    0x411ba2
  411d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  411d30:	mov    rbx,QWORD PTR [rip+0x19a59]        # 0x42b790
  411d37:	mov    rdx,QWORD PTR [rbx]
  411d3a:	test   rdx,rdx
  411d3d:	jne    0x411d54
  411d3f:	jmp    0x412055
  411d44:	add    rbx,0x10
  411d48:	mov    rdx,QWORD PTR [rbx]
  411d4b:	test   rdx,rdx
  411d4e:	je     0x412055
  411d54:	mov    rcx,r12
  411d57:	call   0x41db60
  411d5c:	test   eax,eax
  411d5e:	jne    0x411d44
  411d60:	mov    edx,DWORD PTR [rbx+0x8]
  411d63:	mov    rax,QWORD PTR [rip+0x199c6]        # 0x42b730
  411d6a:	mov    DWORD PTR [rax],edx
  411d6c:	mov    rax,QWORD PTR [rip+0x199ad]        # 0x42b720
  411d73:	mov    DWORD PTR [rax],0x1
  411d79:	xor    eax,eax
  411d7b:	add    rsp,0x60
  411d7f:	pop    rbx
  411d80:	pop    rsi
  411d81:	pop    rdi
  411d82:	pop    rbp
  411d83:	pop    r12
  411d85:	pop    r13
  411d87:	pop    r14
  411d89:	ret    
  411d8a:	nop    WORD PTR [rax+rax*1+0x0]
  411d90:	cmp    QWORD PTR [r13+0x10],0x1
  411d95:	mov    QWORD PTR [rbp+0x20c0],r13
  411d9c:	je     0x411dae
  411d9e:	mov    rdx,QWORD PTR [rbp+0x10]
  411da2:	lea    rcx,[rip+0x121b7]        # 0x423f60
  411da9:	call   0x40b3d0
  411dae:	mov    rcx,r13
  411db1:	call   0x40eee0
  411db6:	test   eax,eax
  411db8:	jne    0x411fc0
  411dbe:	cmp    DWORD PTR [rbp+0x8],0x66
  411dc2:	je     0x411dd4
  411dc4:	mov    rdx,QWORD PTR [rbp+0x10]
  411dc8:	lea    rcx,[rip+0x12201]        # 0x423fd0
  411dcf:	call   0x40b3d0
  411dd4:	test   r14,r14
  411dd7:	je     0x412162
  411ddd:	cmp    QWORD PTR [rbp+0x50],r14
  411de1:	je     0x411df3
  411de3:	mov    rdx,QWORD PTR [rbp+0x10]
  411de7:	lea    rcx,[rip+0x1221a]        # 0x424008
  411dee:	call   0x40b3d0
  411df3:	lea    rcx,[rip+0x1204e]        # 0x423e48
  411dfa:	call   0x40fdf0
  411dff:	mov    DWORD PTR [rsp+0x20],0x0
  411e07:	mov    r9,r13
  411e0a:	mov    r8,r14
  411e0d:	mov    rdx,rbp
  411e10:	mov    rcx,rax
  411e13:	call   0x40f0d0
  411e18:	add    rsp,0x60
  411e1c:	pop    rbx
  411e1d:	pop    rsi
  411e1e:	pop    rdi
  411e1f:	pop    rbp
  411e20:	pop    r12
  411e22:	pop    r13
  411e24:	pop    r14
  411e26:	ret    
  411e27:	nop    WORD PTR [rax+rax*1+0x0]
  411e30:	mov    eax,0xffffffff
  411e35:	jmp    0x411bfe
  411e3a:	nop    WORD PTR [rax+rax*1+0x0]
  411e40:	mov    DWORD PTR [rbp+0x20dc],edx
  411e46:	or     DWORD PTR [rbp+0x20b8],0x4
  411e4d:	xor    eax,eax
  411e4f:	jmp    0x411c10
  411e54:	lea    rdi,[rip+0x12217]        # 0x424072
  411e5b:	mov    ecx,0x7
  411e60:	mov    rsi,r12
  411e63:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411e65:	jne    0x412140
  411e6b:	mov    DWORD PTR [rbp+0x20e8],0x1
  411e75:	or     DWORD PTR [rbp+0x20b8],0x20
  411e7c:	xor    eax,eax
  411e7e:	jmp    0x411c10
  411e83:	mov    DWORD PTR [rbp+0x20e4],edx
  411e89:	or     DWORD PTR [rbp+0x20b8],0x10
  411e90:	xor    eax,eax
  411e92:	jmp    0x411c10
  411e97:	nop    WORD PTR [rax+rax*1+0x0]
  411ea0:	mov    eax,0x1
  411ea5:	or     DWORD PTR [rbp+0x20b8],0x40
  411eac:	sub    eax,edx
  411eae:	mov    DWORD PTR [rbp+0x20ec],eax
  411eb4:	xor    eax,eax
  411eb6:	jmp    0x411c10
  411ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  411ec0:	mov    rax,QWORD PTR [r13+0x10]
  411ec4:	xor    ebx,ebx
  411ec6:	xor    r12d,r12d
  411ec9:	lea    rsi,[rsp+0x40]
  411ece:	mov    DWORD PTR [rbp+0x20d8],eax
  411ed4:	cdqe   
  411ed6:	lea    rcx,[rax*8+0x0]
  411ede:	call   0x4063a0
  411ee3:	mov    QWORD PTR [rbp+0x20d0],rax
  411eea:	mov    eax,DWORD PTR [rbp+0x20d8]
  411ef0:	test   eax,eax
  411ef2:	jg     0x411f25
  411ef4:	jmp    0x4120a3
  411ef9:	nop    DWORD PTR [rax+0x0]
  411f00:	movsxd rdx,DWORD PTR [rsp+0x48]
  411f05:	mov    rax,QWORD PTR [rbp+0x20d0]
  411f0c:	mov    QWORD PTR [rax+rbx*1],rdx
  411f10:	add    r12d,0x1
  411f14:	add    rbx,0x8
  411f18:	cmp    DWORD PTR [rbp+0x20d8],r12d
  411f1f:	jle    0x4120a3
  411f25:	mov    rax,QWORD PTR [r13+0x20]
  411f29:	mov    rdx,rsi
  411f2c:	mov    DWORD PTR [rsp+0x40],0x4
  411f34:	lea    rcx,[rax+rbx*4]
  411f38:	call   0x403680
  411f3d:	cmp    DWORD PTR [rsp+0x40],0x4
  411f42:	je     0x411f00
  411f44:	mov    rcx,QWORD PTR [rbp+0x20d0]
  411f4b:	call   0x4062e0
  411f50:	mov    ecx,0x2
  411f55:	call   0x411ad0
  411f5a:	lea    rcx,[rip+0x11fa4]        # 0x423f05
  411f61:	mov    rdx,rax
  411f64:	call   0x40b3d0
  411f69:	jmp    0x411f10
  411f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  411f70:	lea    rdi,[rip+0x120cc]        # 0x424043
  411f77:	mov    ecx,0xb
  411f7c:	mov    rsi,r12
  411f7f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411f81:	je     0x412130
  411f87:	lea    rdi,[rip+0x120c0]        # 0x42404e
  411f8e:	mov    ecx,0x8
  411f93:	mov    rsi,r12
  411f96:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411f98:	jne    0x412173
  411f9e:	mov    DWORD PTR [rbp+0x20c8],0x0
  411fa8:	or     DWORD PTR [rbp+0x20b8],0x1
  411faf:	xor    eax,eax
  411fb1:	jmp    0x411c10
  411fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411fc0:	lea    rcx,[rip+0x11fd1]        # 0x423f98
  411fc7:	call   0x40b3d0
  411fcc:	jmp    0x411dbe
  411fd1:	cmp    ebx,0x1
  411fd4:	je     0x411cc7
  411fda:	lea    rcx,[rip+0x11f36]        # 0x423f17
  411fe1:	mov    edx,ebx
  411fe3:	call   0x406300
  411fe8:	test   eax,eax
  411fea:	jne    0x411c6c
  411ff0:	lea    rdx,[rip+0x1168d]        # 0x423684
  411ff7:	lea    rcx,[rip+0x11f3a]        # 0x423f38
  411ffe:	mov    r8d,0x4d2
  412004:	xor    r12d,r12d
  412007:	call   0x41da30
  41200c:	xor    edx,edx
  41200e:	jmp    0x411c71
  412013:	lea    rcx,[rip+0x12086]        # 0x4240a0
  41201a:	mov    edx,ebx
  41201c:	call   0x406300
  412021:	mov    edx,eax
  412023:	xor    eax,eax
  412025:	test   edx,edx
  412027:	jne    0x411c10
  41202d:	lea    rdx,[rip+0x11650]        # 0x423684
  412034:	lea    rcx,[rip+0x12085]        # 0x4240c0
  41203b:	mov    r8d,0x535
  412041:	mov    QWORD PTR [rsp+0x38],rax
  412046:	call   0x41da30
  41204b:	mov    rax,QWORD PTR [rsp+0x38]
  412050:	jmp    0x411c10
  412055:	lea    rcx,[rip+0x12090]        # 0x4240ec
  41205c:	mov    rdx,r12
  41205f:	call   0x40b3d0
  412064:	jmp    0x411d6c
  412069:	nop    DWORD PTR [rax+0x0]
  412070:	cmp    ebx,0x20
  412073:	je     0x411cc7
  412079:	jmp    0x411fda
  41207e:	xchg   ax,ax
  412080:	mov    ecx,0x8
  412085:	call   0x411ad0
  41208a:	lea    rcx,[rip+0x11e74]        # 0x423f05
  412091:	mov    rdx,rax
  412094:	call   0x40b3d0
  412099:	mov    eax,0xffffffff
  41209e:	jmp    0x411bfe
  4120a3:	or     DWORD PTR [rbp+0x20b8],0x3
  4120aa:	mov    DWORD PTR [rbp+0x20c8],0x0
  4120b4:	xor    eax,eax
  4120b6:	jmp    0x411c10
  4120bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4120c0:	mov    rax,QWORD PTR [rsp+0x50]
  4120c5:	lea    rdi,[rip+0x11e2a]        # 0x423ef6
  4120cc:	mov    ecx,0x6
  4120d1:	mov    rsi,rax
  4120d4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4120d6:	je     0x411c6c
  4120dc:	lea    rdi,[rip+0x11e19]        # 0x423efc
  4120e3:	mov    ecx,0x2
  4120e8:	mov    rsi,rax
  4120eb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4120ed:	je     0x411c6c
  4120f3:	lea    rdi,[rip+0x11e04]        # 0x423efe
  4120fa:	mov    ecx,0x5
  4120ff:	mov    rsi,rax
  412102:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  412104:	je     0x41211d
  412106:	lea    rdi,[rip+0x11df6]        # 0x423f03
  41210d:	mov    ecx,0x2
  412112:	mov    rsi,rax
  412115:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  412117:	jne    0x411c56
  41211d:	xor    r12d,r12d
  412120:	mov    edx,0x1
  412125:	jmp    0x411c71
  41212a:	nop    WORD PTR [rax+rax*1+0x0]
  412130:	mov    DWORD PTR [rbp+0x20c8],0x1
  41213a:	jmp    0x411fa8
  41213f:	nop
  412140:	lea    rdi,[rip+0x11f32]        # 0x424079
  412147:	mov    ecx,0x4
  41214c:	mov    rsi,r12
  41214f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  412151:	jne    0x412187
  412153:	mov    DWORD PTR [rbp+0x20e8],0x2
  41215d:	jmp    0x411e75
  412162:	mov    r14,QWORD PTR [rbp+0x50]
  412166:	jmp    0x411df3
  41216b:	xor    r12d,r12d
  41216e:	jmp    0x411c71
  412173:	lea    rcx,[rip+0x11edc]        # 0x424056
  41217a:	mov    rdx,r12
  41217d:	call   0x40b3d0
  412182:	jmp    0x411fa8
  412187:	lea    rcx,[rip+0x11ef2]        # 0x424080
  41218e:	mov    rdx,r12
  412191:	call   0x40b3d0
  412196:	jmp    0x411e75
  41219b:	call   0x411ad0
  4121a0:	lea    rcx,[rip+0x11d33]        # 0x423eda
  4121a7:	mov    rdx,rax
  4121aa:	call   0x40b3d0
  4121af:	xor    eax,eax
  4121b1:	jmp    0x411c10
  4121b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4121c0:	push   r15
  4121c2:	push   r14
  4121c4:	mov    eax,0x3c08
  4121c9:	push   r13
  4121cb:	push   r12
  4121cd:	push   rbp
  4121ce:	push   rdi
  4121cf:	push   rsi
  4121d0:	push   rbx
  4121d1:	call   0x41c7e0
  4121d6:	sub    rsp,rax
  4121d9:	movaps XMMWORD PTR [rsp+0x3bf0],xmm6
  4121e1:	lea    rax,[rsp+0xd0]
  4121e9:	mov    QWORD PTR [rsp+0xa8],0x80
  4121f5:	mov    QWORD PTR [rsp+0x68],rax
  4121fa:	mov    QWORD PTR [rsp+0xa0],rax
  412202:	mov    eax,DWORD PTR [rip+0x216e4]        # 0x4338ec
  412208:	test   eax,eax
  41220a:	jne    0x412a90
  412210:	lea    rax,[rsp+0x150]
  412218:	lea    r12,[rsp+0x2e0]
  412220:	mov    DWORD PTR [rip+0x2165e],0x0        # 0x433888
  41222a:	mov    DWORD PTR [rip+0x21678],0xfffffffe        # 0x4338ac
  412234:	mov    QWORD PTR [rsp+0x30],0xc8
  41223d:	xor    ebx,ebx
  41223f:	mov    r15,rax
  412242:	mov    QWORD PTR [rsp+0x50],rax
  412247:	mov    r13,rax
  41224a:	mov    rax,QWORD PTR [rip+0x22487]        # 0x4346d8
  412251:	mov    QWORD PTR [rsp+0x48],r12
  412256:	mov    DWORD PTR [rsp+0x60],0x0
  41225e:	mov    QWORD PTR [rsp+0x78],rax
  412263:	mov    QWORD PTR [rsp+0x70],rax
  412268:	mov    QWORD PTR [rsp+0x80],rax
  412270:	mov    rax,QWORD PTR [rsp+0x30]
  412275:	mov    WORD PTR [r13+0x0],bx
  41227a:	lea    rsi,[rip+0x2166b]        # 0x4338ec
  412281:	add    rax,rax
  412284:	lea    rdx,[r15+rax*1-0x2]
  412289:	cmp    r13,rdx
  41228c:	jb     0x4125f7
  412292:	mov    rsi,r13
  412295:	sub    rsi,r15
  412298:	sar    rsi,1
  41229b:	add    rsi,0x1
  41229f:	cmp    QWORD PTR [rsp+0x30],0x270f
  4122a8:	ja     0x4128c9
  4122ae:	cmp    rax,0x2710
  4122b4:	mov    edx,0x2710
  4122b9:	cmovbe rdx,rax
  4122bd:	lea    rbp,[rdx+rdx*1]
  4122c1:	mov    rax,rdx
  4122c4:	mov    QWORD PTR [rsp+0x30],rdx
  4122c9:	shl    rax,0x5
  4122cd:	lea    rcx,[rbp+rax*1+0x1f]
  4122d2:	call   0x41dbc8
  4122d7:	test   rax,rax
  4122da:	mov    r14,rax
  4122dd:	je     0x4128c9
  4122e3:	lea    r12,[rsi+rsi*1]
  4122e7:	lea    rdi,[rbp+0x1f]
  4122eb:	mov    rdx,r15
  4122ee:	mov    rcx,rax
  4122f1:	shl    rsi,0x5
  4122f5:	mov    r8,r12
  4122f8:	and    rdi,0xffffffffffffffe0
  4122fc:	call   0x41dbc0
  412301:	mov    rdx,QWORD PTR [rsp+0x48]
  412306:	add    rdi,r14
  412309:	mov    r8,rsi
  41230c:	mov    rcx,rdi
  41230f:	call   0x41dbc0
  412314:	cmp    r15,QWORD PTR [rsp+0x50]
  412319:	je     0x412323
  41231b:	mov    rcx,r15
  41231e:	call   0x41dc08
  412323:	mov    eax,DWORD PTR [rip+0x215c3]        # 0x4338ec
  412329:	lea    r13,[r14+r12*1-0x2]
  41232e:	lea    r12,[rdi+rsi*1-0x20]
  412333:	lea    rsi,[rip+0x215b2]        # 0x4338ec
  41233a:	test   eax,eax
  41233c:	jne    0x4125c5
  412342:	lea    rax,[r14+rbp*1-0x2]
  412347:	cmp    r13,rax
  41234a:	jae    0x414264
  412350:	mov    QWORD PTR [rsp+0x48],rdi
  412355:	mov    r15,r14
  412358:	cmp    ebx,0x5
  41235b:	je     0x412c7e
  412361:	lea    rdi,[rip+0x163d8]        # 0x428740
  412368:	movsxd r14,ebx
  41236b:	movsx  r10d,WORD PTR [rdi+r14*2]
  412370:	cmp    r10d,0xffffff84
  412374:	mov    ebx,r10d
  412377:	je     0x4123d6
  412379:	mov    eax,DWORD PTR [rip+0x2152d]        # 0x4338ac
  41237f:	cmp    eax,0xfffffffe
  412382:	je     0x4128e1
  412388:	test   eax,eax
  41238a:	jle    0x412908
  412390:	cmp    eax,0x131
  412395:	mov    ebp,0x2
  41239a:	jg     0x4123a9
  41239c:	lea    rdx,[rip+0x16f5d]        # 0x429300
  4123a3:	cdqe   
  4123a5:	movzx  ebp,BYTE PTR [rdx+rax*1]
  4123a9:	mov    eax,DWORD PTR [rsi]
  4123ab:	test   eax,eax
  4123ad:	jne    0x412950
  4123b3:	add    r10d,ebp
  4123b6:	cmp    r10d,0x16f
  4123bd:	ja     0x4123d6
  4123bf:	lea    rax,[rip+0x15afa]        # 0x427ec0
  4123c6:	movsxd r10,r10d
  4123c9:	movsx  eax,WORD PTR [rax+r10*2]
  4123ce:	cmp    eax,ebp
  4123d0:	je     0x412b52
  4123d6:	lea    rax,[rip+0x16263]        # 0x428640
  4123dd:	movzx  ebp,BYTE PTR [rax+r14*1]
  4123e2:	test   ebp,ebp
  4123e4:	je     0x412620
  4123ea:	movsxd rax,ebp
  4123ed:	mov    ebx,DWORD PTR [rsi]
  4123ef:	mov    rdi,rax
  4123f2:	mov    QWORD PTR [rsp+0x58],rax
  4123f7:	lea    rax,[rip+0x15842]        # 0x427c40
  4123fe:	movzx  r14d,BYTE PTR [rax+rdi*1]
  412403:	mov    eax,0x1
  412408:	sub    eax,r14d
  41240b:	mov    BYTE PTR [rsp+0x67],r14b
  412410:	cdqe   
  412412:	shl    rax,0x5
  412416:	add    rax,r12
  412419:	test   ebx,ebx
  41241b:	mov    rdx,QWORD PTR [rax]
  41241e:	mov    rcx,QWORD PTR [rax+0x10]
  412422:	mov    QWORD PTR [rsp+0xb0],rdx
  41242a:	mov    QWORD PTR [rsp+0xc0],rcx
  412432:	mov    rdx,QWORD PTR [rax+0x8]
  412436:	mov    rcx,QWORD PTR [rax+0x18]
  41243a:	mov    eax,DWORD PTR [rax+0x18]
  41243d:	mov    QWORD PTR [rsp+0xb8],rdx
  412445:	mov    QWORD PTR [rsp+0xc8],rcx
  41244d:	mov    QWORD PTR [rsp+0x38],rdx
  412452:	mov    DWORD PTR [rsp+0x40],eax
  412456:	jne    0x4129b0
  41245c:	cmp    ebp,0x96
  412462:	ja     0x412500
  412468:	lea    rax,[rip+0x122a1]        # 0x424710
  41246f:	mov    ebp,ebp
  412471:	movsxd rdx,DWORD PTR [rax+rbp*4]
  412475:	add    rax,rdx
  412478:	jmp    rax
  41247a:	pxor   xmm6,xmm6
  41247e:	movsd  xmm1,QWORD PTR [rip+0x21442]        # 0x4338c8
  412486:	ucomisd xmm6,xmm1
  41248a:	jae    0x414571
  412490:	ucomisd xmm1,QWORD PTR [rip+0x17018]        # 0x4294b0
  412498:	ja     0x4145b1
  41249e:	ucomisd xmm1,QWORD PTR [rip+0x17012]        # 0x4294b8
  4124a6:	jae    0x4142a9
  4124ac:	cvttsd2si rax,xmm1
  4124b1:	test   rax,rax
  4124b4:	js     0x41442c
  4124ba:	pxor   xmm0,xmm0
  4124be:	cvtsi2sd xmm0,rax
  4124c3:	subsd  xmm1,xmm0
  4124c7:	ucomisd xmm1,xmm6
  4124cb:	jbe    0x4124f4
  4124cd:	lea    rcx,[rip+0x12004]        # 0x4244d8
  4124d4:	call   0x40f1a0
  4124d9:	movsd  xmm0,QWORD PTR [rip+0x213e7]        # 0x4338c8
  4124e1:	ucomisd xmm0,QWORD PTR [rip+0x16fcf]        # 0x4294b8
  4124e9:	jae    0x414273
  4124ef:	cvttsd2si rax,xmm0
  4124f4:	mov    rdx,QWORD PTR [r12-0x40]
  4124f9:	mov    QWORD PTR [rdx+0x2100],rax
  412500:	mov    r10d,DWORD PTR [rsi]
  412503:	test   r10d,r10d
  412506:	jne    0x412ac0
  41250c:	movzx  eax,BYTE PTR [rsp+0x67]
  412511:	mov    rsi,QWORD PTR [rsp+0x58]
  412516:	mov    rdi,r12
  412519:	mov    rdx,rax
  41251c:	add    rax,rax
  41251f:	sub    r13,rax
  412522:	lea    rax,[rip+0x157d7]        # 0x427d00
  412529:	shl    rdx,0x5
  41252d:	sub    rdi,rdx
  412530:	movzx  ebx,BYTE PTR [rax+rsi*1]
  412534:	mov    eax,DWORD PTR [rsp+0x40]
  412538:	mov    rsi,QWORD PTR [rsp+0x38]
  41253d:	lea    edx,[rbx-0x3c]
  412540:	lea    r12,[rdi+0x20]
  412544:	movsxd rdx,edx
  412547:	mov    DWORD PTR [rsp+0xc8],eax
  41254e:	mov    rax,QWORD PTR [rsp+0xb0]
  412556:	mov    QWORD PTR [rdi+0x28],rsi
  41255a:	mov    QWORD PTR [rsp+0xb8],rsi
  412562:	mov    QWORD PTR [rdi+0x20],rax
  412566:	mov    rax,QWORD PTR [rsp+0xc0]
  41256e:	mov    QWORD PTR [rdi+0x30],rax
  412572:	mov    rax,QWORD PTR [rsp+0xc8]
  41257a:	mov    QWORD PTR [rdi+0x38],rax
  41257e:	lea    rax,[rip+0x15ffb]        # 0x428580
  412585:	movzx  r8d,WORD PTR [r13+0x0]
  41258a:	movsx  ecx,WORD PTR [rax+rdx*2]
  41258e:	movsx  eax,r8w
  412592:	add    eax,ecx
  412594:	cmp    eax,0x16f
  412599:	ja     0x4125af
  41259b:	lea    rcx,[rip+0x1591e]        # 0x427ec0
  4125a2:	cdqe   
  4125a4:	cmp    r8w,WORD PTR [rcx+rax*2]
  4125a9:	je     0x412bd4
  4125af:	lea    rax,[rip+0x15f0a]        # 0x4284c0
  4125b6:	movsx  eax,WORD PTR [rax+rdx*2]
  4125ba:	mov    ebx,eax
  4125bc:	add    r13,0x2
  4125c0:	jmp    0x412270
  4125c5:	mov    rax,QWORD PTR [rsp+0x78]
  4125ca:	call   rax
  4125cc:	mov    r8d,DWORD PTR [rsp+0x30]
  4125d1:	lea    rcx,[rax+0x60]
  4125d5:	lea    rdx,[rip+0x11c40]        # 0x42421c
  4125dc:	call   0x41dc28
  4125e1:	lea    rax,[r14+rbp*1-0x2]
  4125e6:	cmp    r13,rax
  4125e9:	jae    0x414264
  4125ef:	mov    QWORD PTR [rsp+0x48],rdi
  4125f4:	mov    r15,r14
  4125f7:	mov    eax,DWORD PTR [rsi]
  4125f9:	test   eax,eax
  4125fb:	je     0x412358
  412601:	call   QWORD PTR [rip+0x220d1]        # 0x4346d8
  412607:	lea    rdx,[rip+0x11c2b]        # 0x424239
  41260e:	lea    rcx,[rax+0x60]
  412612:	mov    r8d,ebx
  412615:	call   0x41dc28
  41261a:	jmp    0x412358
  41261f:	nop
  412620:	movsxd rax,DWORD PTR [rip+0x21285]        # 0x4338ac
  412627:	mov    ebp,0xfffffffe
  41262c:	cmp    eax,ebp
  41262e:	je     0x412640
  412630:	cmp    eax,0x131
  412635:	mov    ebp,0x2
  41263a:	jbe    0x412850
  412640:	mov    r8d,DWORD PTR [rsp+0x60]
  412645:	test   r8d,r8d
  412648:	je     0x41286c
  41264e:	cmp    DWORD PTR [rsp+0x60],0x3
  412653:	je     0x412820
  412659:	movsx  eax,bx
  41265c:	jmp    0x412665
  41265e:	xchg   ax,ax
  412660:	movsx  eax,WORD PTR [rdi+r14*2]
  412665:	cmp    eax,0xffffff84
  412668:	je     0x412684
  41266a:	add    eax,0x1
  41266d:	cmp    eax,0x16f
  412672:	ja     0x412684
  412674:	lea    rdx,[rip+0x15845]        # 0x427ec0
  41267b:	cdqe   
  41267d:	cmp    WORD PTR [rdx+rax*2],0x1
  412682:	je     0x4126c5
  412684:	cmp    r13,r15
  412687:	je     0x412770
  41268d:	lea    rax,[rip+0x1572c]        # 0x427dc0
  412694:	lea    rcx,[rip+0x12025]        # 0x4246c0
  41269b:	sub    r13,0x2
  41269f:	sub    r12,0x20
  4126a3:	movzx  edx,BYTE PTR [rax+r14*1]
  4126a8:	call   0x40f550
  4126ad:	mov    ecx,DWORD PTR [rsi]
  4126af:	movsx  r14,WORD PTR [r13+0x0]
  4126b4:	test   ecx,ecx
  4126b6:	je     0x412660
  4126b8:	mov    rdx,r13
  4126bb:	mov    rcx,r15
  4126be:	call   0x40ef50
  4126c3:	jmp    0x412660
  4126c5:	lea    rdx,[rip+0x15af4]        # 0x4281c0
  4126cc:	movsx  ebx,WORD PTR [rdx+rax*2]
  4126d0:	test   ebx,ebx
  4126d2:	jle    0x412684
  4126d4:	mov    rdx,QWORD PTR [rip+0x210c5]        # 0x4337a0
  4126db:	mov    rax,r12
  4126de:	add    r12,0x20
  4126e2:	mov    QWORD PTR [rax+0x20],rdx
  4126e6:	mov    rdx,QWORD PTR [rip+0x210bb]        # 0x4337a8
  4126ed:	mov    QWORD PTR [rax+0x28],rdx
  4126f1:	mov    rdx,QWORD PTR [rip+0x210b8]        # 0x4337b0
  4126f8:	mov    QWORD PTR [rax+0x30],rdx
  4126fc:	mov    rdx,QWORD PTR [rip+0x210b5]        # 0x4337b8
  412703:	mov    QWORD PTR [rax+0x38],rdx
  412707:	mov    edx,DWORD PTR [rsi]
  412709:	test   edx,edx
  41270b:	je     0x41275b
  41270d:	mov    rsi,QWORD PTR [rip+0x21fc4]        # 0x4346d8
  412714:	call   rsi
  412716:	lea    r8,[rip+0x11b65]        # 0x424282
  41271d:	lea    rcx,[rax+0x60]
  412721:	lea    rdx,[rip+0x110cc]        # 0x4237f4
  412728:	call   0x41dc28
  41272d:	lea    rax,[rip+0x1568c]        # 0x427dc0
  412734:	mov    rdi,rax
  412737:	movsxd rax,ebx
  41273a:	movzx  edi,BYTE PTR [rdi+rax*1]
  41273e:	call   rsi
  412740:	lea    rcx,[rax+0x60]
  412744:	mov    edx,edi
  412746:	call   0x40f500
  41274b:	call   rsi
  41274d:	lea    rdx,[rax+0x60]
  412751:	mov    ecx,0xa
  412756:	call   0x41dc20
  41275b:	mov    DWORD PTR [rsp+0x60],0x3
  412763:	jmp    0x4125bc
  412768:	nop    DWORD PTR [rax+rax*1+0x0]
  412770:	xor    ebx,ebx
  412772:	mov    esi,0x1
  412777:	movsxd rax,DWORD PTR [rip+0x2112e]        # 0x4338ac
  41277e:	cmp    eax,0xfffffffe
  412781:	je     0x41279f
  412783:	cmp    eax,0x131
  412788:	mov    edx,0x2
  41278d:	jbe    0x412840
  412793:	lea    rcx,[rip+0x11f46]        # 0x4246e0
  41279a:	call   0x40f550
  41279f:	mov    eax,DWORD PTR [rip+0x21147]        # 0x4338ec
  4127a5:	add    rbx,r13
  4127a8:	test   eax,eax
  4127aa:	jne    0x412b42
  4127b0:	cmp    r15,rbx
  4127b3:	lea    rdi,[rip+0x15606]        # 0x427dc0
  4127ba:	je     0x4127dd
  4127bc:	nop    DWORD PTR [rax+0x0]
  4127c0:	movsx  rax,WORD PTR [rbx]
  4127c4:	lea    rcx,[rip+0x11f33]        # 0x4246fe
  4127cb:	sub    rbx,0x2
  4127cf:	movzx  edx,BYTE PTR [rdi+rax*1]
  4127d3:	call   0x40f550
  4127d8:	cmp    r15,rbx
  4127db:	jne    0x4127c0
  4127dd:	cmp    r15,QWORD PTR [rsp+0x50]
  4127e2:	je     0x4127ec
  4127e4:	mov    rcx,r15
  4127e7:	call   0x41dc08
  4127ec:	mov    rcx,QWORD PTR [rsp+0xa0]
  4127f4:	cmp    rcx,QWORD PTR [rsp+0x68]
  4127f9:	je     0x412801
  4127fb:	call   0x41dc08
  412800:	nop
  412801:	movaps xmm6,XMMWORD PTR [rsp+0x3bf0]
  412809:	mov    eax,esi
  41280b:	add    rsp,0x3c08
  412812:	pop    rbx
  412813:	pop    rsi
  412814:	pop    rdi
  412815:	pop    rbp
  412816:	pop    r12
  412818:	pop    r13
  41281a:	pop    r14
  41281c:	pop    r15
  41281e:	ret    
  41281f:	nop
  412820:	cmp    eax,0x0
  412823:	jg     0x412be6
  412829:	jne    0x412659
  41282f:	mov    esi,0x1
  412834:	xor    ebx,ebx
  412836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412840:	lea    rdx,[rip+0x16ab9]        # 0x429300
  412847:	movzx  edx,BYTE PTR [rdx+rax*1]
  41284b:	jmp    0x412793
  412850:	mov    r8d,DWORD PTR [rsp+0x60]
  412855:	lea    rcx,[rip+0x16aa4]        # 0x429300
  41285c:	movsxd rdx,eax
  41285f:	movzx  ebp,BYTE PTR [rcx+rdx*1]
  412863:	test   r8d,r8d
  412866:	jne    0x41264e
  41286c:	lea    rax,[rsp+0xa0]
  412874:	lea    rcx,[rsp+0xa8]
  41287c:	mov    r9d,ebp
  41287f:	mov    r8,r13
  412882:	add    DWORD PTR [rip+0x20fff],0x1        # 0x433888
  412889:	mov    rdx,rax
  41288c:	mov    QWORD PTR [rsp+0x38],rax
  412891:	mov    QWORD PTR [rsp+0x40],rcx
  412896:	call   0x40ec40
  41289b:	test   eax,eax
  41289d:	je     0x412bc2
  4128a3:	cmp    eax,0x1
  4128a6:	lea    rcx,[rip+0x10ccf]        # 0x42357c
  4128ad:	je     0x414210
  4128b3:	mov    DWORD PTR [rsp+0x38],eax
  4128b7:	call   0x40f1a0
  4128bc:	mov    eax,DWORD PTR [rsp+0x38]
  4128c0:	cmp    eax,0x2
  4128c3:	jne    0x412659
  4128c9:	lea    rcx,[rip+0x11dff]        # 0x4246cf
  4128d0:	xor    ebx,ebx
  4128d2:	mov    esi,0x2
  4128d7:	call   0x40f1a0
  4128dc:	jmp    0x412777
  4128e1:	mov    eax,DWORD PTR [rsi]
  4128e3:	test   eax,eax
  4128e5:	jne    0x412c0c
  4128eb:	mov    DWORD PTR [rsp+0x38],r10d
  4128f0:	call   0x40fe70
  4128f5:	test   eax,eax
  4128f7:	mov    DWORD PTR [rip+0x20faf],eax        # 0x4338ac
  4128fd:	mov    r10d,DWORD PTR [rsp+0x38]
  412902:	jg     0x412390
  412908:	mov    eax,DWORD PTR [rsi]
  41290a:	xor    ebp,ebp
  41290c:	mov    DWORD PTR [rip+0x20f96],0x0        # 0x4338ac
  412916:	test   eax,eax
  412918:	je     0x4123b3
  41291e:	mov    DWORD PTR [rsp+0x38],r10d
  412923:	call   QWORD PTR [rip+0x21daf]        # 0x4346d8
  412929:	lea    rcx,[rip+0x1192e]        # 0x42425e
  412930:	lea    r9,[rax+0x60]
  412934:	mov    r8d,0x15
  41293a:	mov    edx,0x1
  41293f:	call   0x41dbf8
  412944:	mov    r10d,DWORD PTR [rsp+0x38]
  412949:	jmp    0x4123b3
  41294e:	xchg   ax,ax
  412950:	mov    r9,QWORD PTR [rip+0x21d81]        # 0x4346d8
  412957:	mov    DWORD PTR [rsp+0x40],r10d
  41295c:	mov    QWORD PTR [rsp+0x38],r9
  412961:	call   r9
  412964:	lea    r8,[rip+0x11909]        # 0x424274
  41296b:	lea    rcx,[rax+0x60]
  41296f:	lea    rdx,[rip+0x10e7e]        # 0x4237f4
  412976:	call   0x41dc28
  41297b:	mov    r9,QWORD PTR [rsp+0x38]
  412980:	call   r9
  412983:	lea    rcx,[rax+0x60]
  412987:	mov    edx,ebp
  412989:	call   0x40f500
  41298e:	mov    r9,QWORD PTR [rsp+0x38]
  412993:	call   r9
  412996:	lea    rdx,[rax+0x60]
  41299a:	mov    ecx,0xa
  41299f:	call   0x41dc20
  4129a4:	mov    r10d,DWORD PTR [rsp+0x40]
  4129a9:	jmp    0x4123b3
  4129ae:	xchg   ax,ax
  4129b0:	mov    rdi,QWORD PTR [rsp+0x58]
  4129b5:	lea    rax,[rip+0x16804]        # 0x4291c0
  4129bc:	movzx  ebx,WORD PTR [rax+rdi*2]
  4129c0:	mov    rax,QWORD PTR [rsp+0x70]
  4129c5:	call   rax
  4129c7:	lea    r8d,[rbp-0x1]
  4129cb:	lea    rcx,[rax+0x60]
  4129cf:	lea    rdx,[rip+0x118ba]        # 0x424290
  4129d6:	mov    r9d,ebx
  4129d9:	call   0x41dc28
  4129de:	test   r14d,r14d
  4129e1:	je     0x41245c
  4129e7:	movzx  eax,BYTE PTR [rsp+0x67]
  4129ec:	lea    rcx,[rip+0x153cd]        # 0x427dc0
  4129f3:	mov    QWORD PTR [rsp+0x90],r13
  4129fb:	mov    QWORD PTR [rsp+0x88],r15
  412a03:	xor    ebx,ebx
  412a05:	mov    QWORD PTR [rsp+0x98],rsi
  412a0d:	mov    r15,rcx
  412a10:	neg    rax
  412a13:	lea    rdi,[r13+rax*2+0x2]
  412a18:	mov    r13,QWORD PTR [rsp+0x70]
  412a1d:	nop    DWORD PTR [rax]
  412a20:	call   r13
  412a23:	add    ebx,0x1
  412a26:	lea    rcx,[rax+0x60]
  412a2a:	lea    rdx,[rip+0x11886]        # 0x4242b7
  412a31:	mov    r8d,ebx
  412a34:	add    rdi,0x2
  412a38:	call   0x41dc28
  412a3d:	movsx  rax,WORD PTR [rdi-0x2]
  412a42:	movzx  esi,BYTE PTR [r15+rax*1]
  412a47:	call   r13
  412a4a:	lea    rcx,[rax+0x60]
  412a4e:	mov    edx,esi
  412a50:	call   0x40f500
  412a55:	call   r13
  412a58:	lea    rdx,[rax+0x60]
  412a5c:	mov    ecx,0xa
  412a61:	call   0x41dc20
  412a66:	cmp    r14d,ebx
  412a69:	jne    0x412a20
  412a6b:	mov    r15,QWORD PTR [rsp+0x88]
  412a73:	mov    r13,QWORD PTR [rsp+0x90]
  412a7b:	mov    rsi,QWORD PTR [rsp+0x98]
  412a83:	jmp    0x41245c
  412a88:	nop    DWORD PTR [rax+rax*1+0x0]
  412a90:	call   QWORD PTR [rip+0x21c42]        # 0x4346d8
  412a96:	lea    rcx,[rip+0x1176f]        # 0x42420c
  412a9d:	lea    r9,[rax+0x60]
  412aa1:	mov    r8d,0xf
  412aa7:	mov    edx,0x1
  412aac:	call   0x41dbf8
  412ab1:	jmp    0x412210
  412ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ac0:	mov    rdi,QWORD PTR [rsp+0x80]
  412ac8:	call   rdi
  412aca:	lea    r8,[rip+0x11bd5]        # 0x4246a6
  412ad1:	lea    rcx,[rax+0x60]
  412ad5:	lea    rdx,[rip+0x10d18]        # 0x4237f4
  412adc:	call   0x41dc28
  412ae1:	mov    rbx,QWORD PTR [rsp+0x58]
  412ae6:	lea    rax,[rip+0x15213]        # 0x427d00
  412aed:	movzx  ebx,BYTE PTR [rax+rbx*1]
  412af1:	call   rdi
  412af3:	lea    rcx,[rax+0x60]
  412af7:	mov    edx,ebx
  412af9:	call   0x40f500
  412afe:	call   rdi
  412b00:	lea    rdx,[rax+0x60]
  412b04:	mov    ecx,0xa
  412b09:	mov    rdi,r12
  412b0c:	call   0x41dc20
  412b11:	movzx  eax,BYTE PTR [rsp+0x67]
  412b16:	mov    r9d,DWORD PTR [rsi]
  412b19:	mov    rdx,rax
  412b1c:	add    rax,rax
  412b1f:	shl    rdx,0x5
  412b23:	sub    r13,rax
  412b26:	sub    rdi,rdx
  412b29:	test   r9d,r9d
  412b2c:	je     0x412534
  412b32:	mov    rdx,r13
  412b35:	mov    rcx,r15
  412b38:	call   0x40ef50
  412b3d:	jmp    0x412534
  412b42:	mov    rdx,rbx
  412b45:	mov    rcx,r15
  412b48:	call   0x40ef50
  412b4d:	jmp    0x4127b0
  412b52:	lea    rax,[rip+0x15667]        # 0x4281c0
  412b59:	movsx  eax,WORD PTR [rax+r10*2]
  412b5e:	test   eax,eax
  412b60:	mov    ebx,eax
  412b62:	jle    0x412c03
  412b68:	mov    eax,DWORD PTR [rsp+0x60]
  412b6c:	mov    esi,DWORD PTR [rsi]
  412b6e:	cmp    eax,0x1
  412b71:	adc    eax,0xffffffff
  412b74:	test   esi,esi
  412b76:	mov    DWORD PTR [rsp+0x60],eax
  412b7a:	jne    0x412c3c
  412b80:	mov    rax,QWORD PTR [rip+0x20c19]        # 0x4337a0
  412b87:	mov    DWORD PTR [rip+0x20d1b],0xfffffffe        # 0x4338ac
  412b91:	add    r12,0x20
  412b95:	mov    QWORD PTR [r12],rax
  412b99:	mov    rax,QWORD PTR [rip+0x20c08]        # 0x4337a8
  412ba0:	mov    QWORD PTR [r12+0x8],rax
  412ba5:	mov    rax,QWORD PTR [rip+0x20c04]        # 0x4337b0
  412bac:	mov    QWORD PTR [r12+0x10],rax
  412bb1:	mov    rax,QWORD PTR [rip+0x20c00]        # 0x4337b8
  412bb8:	mov    QWORD PTR [r12+0x18],rax
  412bbd:	jmp    0x4125bc
  412bc2:	mov    rcx,QWORD PTR [rsp+0xa0]
  412bca:	call   0x40f1a0
  412bcf:	jmp    0x412659
  412bd4:	lea    rdx,[rip+0x155e5]        # 0x4281c0
  412bdb:	movsx  eax,WORD PTR [rdx+rax*2]
  412bdf:	mov    ebx,eax
  412be1:	jmp    0x4125bc
  412be6:	lea    rcx,[rip+0x11ac1]        # 0x4246ae
  412bed:	mov    edx,ebp
  412bef:	call   0x40f550
  412bf4:	mov    DWORD PTR [rip+0x20cae],0xfffffffe        # 0x4338ac
  412bfe:	jmp    0x412659
  412c03:	mov    ebp,eax
  412c05:	neg    ebp
  412c07:	jmp    0x4123ea
  412c0c:	mov    DWORD PTR [rsp+0x38],r10d
  412c11:	call   QWORD PTR [rip+0x21ac1]        # 0x4346d8
  412c17:	lea    rcx,[rip+0x1162e]        # 0x42424c
  412c1e:	lea    r9,[rax+0x60]
  412c22:	mov    r8d,0x11
  412c28:	mov    edx,0x1
  412c2d:	call   0x41dbf8
  412c32:	mov    r10d,DWORD PTR [rsp+0x38]
  412c37:	jmp    0x4128eb
  412c3c:	mov    rsi,QWORD PTR [rip+0x21a95]        # 0x4346d8
  412c43:	call   rsi
  412c45:	lea    r8,[rip+0x11636]        # 0x424282
  412c4c:	lea    rcx,[rax+0x60]
  412c50:	lea    rdx,[rip+0x10b9d]        # 0x4237f4
  412c57:	call   0x41dc28
  412c5c:	call   rsi
  412c5e:	lea    rcx,[rax+0x60]
  412c62:	mov    edx,ebp
  412c64:	call   0x40f500
  412c69:	call   rsi
  412c6b:	lea    rdx,[rax+0x60]
  412c6f:	mov    ecx,0xa
  412c74:	call   0x41dc20
  412c79:	jmp    0x412b80
  412c7e:	xor    ebx,ebx
  412c80:	xor    esi,esi
  412c82:	jmp    0x412777
  412c87:	mov    rbx,QWORD PTR [r12-0x20]
  412c8c:	lea    rcx,[rip+0x1162e]        # 0x4242c1
  412c93:	call   0x40b5a0
  412c98:	mov    DWORD PTR [rbx+0x8],0x64
  412c9f:	mov    rdx,rbx
  412ca2:	mov    ecx,0x64
  412ca7:	call   0x40efd0
  412cac:	test   eax,eax
  412cae:	jne    0x4143d2
  412cb4:	mov    rcx,rbx
  412cb7:	call   0x40f090
  412cbc:	call   0x416500
  412cc1:	mov    rcx,QWORD PTR [rip+0x1f830]        # 0x4324f8
  412cc8:	mov    rdx,rbx
  412ccb:	mov    QWORD PTR [rbx+0x30],rax
  412ccf:	call   0x416750
  412cd4:	mov    rcx,QWORD PTR [rip+0x20bdd]        # 0x4338b8
  412cdb:	mov    rdx,rbx
  412cde:	call   0x416750
  412ce3:	jmp    0x412500
  412ce8:	lea    rcx,[rsp+0xb0]
  412cf0:	mov    edx,0x5
  412cf5:	call   0x40f220
  412cfa:	mov    rax,QWORD PTR [rsp+0xb8]
  412d02:	mov    QWORD PTR [rsp+0x38],rax
  412d07:	mov    eax,DWORD PTR [rsp+0xc8]
  412d0e:	mov    DWORD PTR [rsp+0x40],eax
  412d12:	jmp    0x412500
  412d17:	mov    rax,QWORD PTR [r12]
  412d1b:	mov    QWORD PTR [rsp+0xb0],rax
  412d23:	mov    DWORD PTR [rax+0x2110],0x1
  412d2d:	mov    rax,QWORD PTR [r12]
  412d31:	mov    DWORD PTR [rax+0x38],0x1
  412d38:	jmp    0x412500
  412d3d:	mov    rax,QWORD PTR [r12]
  412d41:	mov    rcx,QWORD PTR [rip+0x1f7b0]        # 0x4324f8
  412d48:	mov    DWORD PTR [rax+0x2110],0x1
  412d52:	mov    QWORD PTR [rsp+0xb0],rax
  412d5a:	mov    rax,QWORD PTR [r12]
  412d5e:	mov    DWORD PTR [rax+0x38],0x0
  412d65:	mov    rbx,QWORD PTR [r12]
  412d69:	mov    DWORD PTR [rbx+0x38],0x0
  412d70:	call   0x415590
  412d75:	mov    QWORD PTR [rbx+0x40],rax
  412d79:	jmp    0x412500
  412d7e:	mov    DWORD PTR [rsp+0x20],0x1
  412d86:	mov    r9,r12
  412d89:	xor    r8d,r8d
  412d8c:	xor    edx,edx
  412d8e:	mov    ecx,0x100
  412d93:	call   0x411b60
  412d98:	mov    QWORD PTR [rsp+0xb0],rax
  412da0:	jmp    0x412500
  412da5:	mov    rdx,QWORD PTR [r12-0x80]
  412daa:	mov    r9,r12
  412dad:	mov    DWORD PTR [rsp+0x20],0x1
  412db5:	xor    r8d,r8d
  412db8:	mov    ecx,0x40
  412dbd:	call   0x411b60
  412dc2:	mov    QWORD PTR [rsp+0xb0],rax
  412dca:	jmp    0x412500
  412dcf:	mov    rdx,QWORD PTR [r12-0x80]
  412dd4:	mov    r9,r12
  412dd7:	mov    DWORD PTR [rsp+0x20],0x1
  412ddf:	xor    r8d,r8d
  412de2:	mov    ecx,0x20
  412de7:	call   0x411b60
  412dec:	mov    QWORD PTR [rsp+0xb0],rax
  412df4:	jmp    0x412500
  412df9:	mov    rdx,QWORD PTR [r12-0x80]
  412dfe:	mov    r9,r12
  412e01:	mov    DWORD PTR [rsp+0x20],0x1
  412e09:	xor    r8d,r8d
  412e0c:	mov    ecx,0x10
  412e11:	call   0x411b60
  412e16:	mov    QWORD PTR [rsp+0xb0],rax
  412e1e:	jmp    0x412500
  412e23:	mov    rdx,QWORD PTR [r12-0x80]
  412e28:	mov    r9,r12
  412e2b:	mov    DWORD PTR [rsp+0x20],0x1
  412e33:	xor    r8d,r8d
  412e36:	mov    ecx,0x8
  412e3b:	call   0x411b60
  412e40:	mov    QWORD PTR [rsp+0xb0],rax
  412e48:	jmp    0x412500
  412e4d:	mov    rdx,QWORD PTR [r12-0x80]
  412e52:	mov    r9,r12
  412e55:	mov    DWORD PTR [rsp+0x20],0x1
  412e5d:	xor    r8d,r8d
  412e60:	mov    ecx,0x4
  412e65:	call   0x411b60
  412e6a:	mov    QWORD PTR [rsp+0xb0],rax
  412e72:	jmp    0x412500
  412e77:	mov    rdx,QWORD PTR [r12-0x80]
  412e7c:	mov    DWORD PTR [rsp+0x20],0x0
  412e84:	xor    r8d,r8d
  412e87:	mov    r9,QWORD PTR [r12]
  412e8b:	mov    ecx,0x2
  412e90:	call   0x411b60
  412e95:	mov    QWORD PTR [rsp+0xb0],rax
  412e9d:	jmp    0x412500
  412ea2:	mov    rdx,QWORD PTR [r12-0x80]
  412ea7:	mov    r9,r12
  412eaa:	mov    DWORD PTR [rsp+0x20],0x1
  412eb2:	xor    r8d,r8d
  412eb5:	mov    ecx,0x1
  412eba:	call   0x411b60
  412ebf:	mov    QWORD PTR [rsp+0xb0],rax
  412ec7:	jmp    0x412500
  412ecc:	mov    r8,QWORD PTR [r12-0xa0]
  412ed4:	mov    rdx,QWORD PTR [r12-0x80]
  412ed9:	mov    ecx,0x80
  412ede:	mov    DWORD PTR [rsp+0x20],0x0
  412ee6:	mov    r9,QWORD PTR [r12]
  412eea:	call   0x411b60
  412eef:	mov    QWORD PTR [rsp+0xb0],rax
  412ef7:	jmp    0x412500
  412efc:	mov    rdx,QWORD PTR [r12-0x80]
  412f01:	mov    DWORD PTR [rsp+0x20],0x0
  412f09:	xor    r8d,r8d
  412f0c:	mov    r9,QWORD PTR [r12]
  412f10:	mov    ecx,0x80
  412f15:	call   0x411b60
  412f1a:	mov    QWORD PTR [rsp+0xb0],rax
  412f22:	jmp    0x412500
  412f27:	mov    rdx,QWORD PTR [r12-0x80]
  412f2c:	mov    rcx,QWORD PTR [r12-0x40]
  412f31:	mov    eax,DWORD PTR [rdx+0x8]
  412f34:	cmp    eax,0x66
  412f37:	je     0x414524
  412f3d:	cmp    eax,0x68
  412f40:	jne    0x41450f
  412f46:	mov    DWORD PTR [rsp+0x20],0x1
  412f4e:	mov    r9,QWORD PTR [r12]
  412f52:	mov    r8,rdx
  412f55:	xor    edx,edx
  412f57:	call   0x40f0d0
  412f5c:	mov    QWORD PTR [rsp+0xb0],rax
  412f64:	jmp    0x412500
  412f69:	mov    rdx,QWORD PTR [r12-0x80]
  412f6e:	mov    r8,QWORD PTR [r12-0xa0]
  412f76:	mov    rcx,QWORD PTR [r12-0x40]
  412f7b:	cmp    DWORD PTR [rdx+0x8],0x66
  412f7f:	jne    0x414633
  412f85:	mov    DWORD PTR [rsp+0x20],0x0
  412f8d:	mov    r9,QWORD PTR [r12]
  412f91:	call   0x40f0d0
  412f96:	mov    QWORD PTR [rsp+0xb0],rax
  412f9e:	jmp    0x412500
  412fa3:	mov    rcx,QWORD PTR [r12-0x40]
  412fa8:	mov    DWORD PTR [rsp+0x20],0x1
  412fb0:	xor    r8d,r8d
  412fb3:	mov    r9,QWORD PTR [r12]
  412fb7:	xor    edx,edx
  412fb9:	call   0x40f0d0
  412fbe:	mov    QWORD PTR [rsp+0xb0],rax
  412fc6:	jmp    0x412500
  412fcb:	mov    rcx,QWORD PTR [rip+0x1f51e]        # 0x4324f0
  412fd2:	test   rcx,rcx
  412fd5:	je     0x414545
  412fdb:	mov    eax,DWORD PTR [rcx+0x4]
  412fde:	mov    rdx,QWORD PTR [r12]
  412fe2:	mov    DWORD PTR [rsp+0xb0],eax
  412fe9:	call   0x416750
  412fee:	jmp    0x412500
  412ff3:	mov    eax,DWORD PTR [r12-0x20]
  412ff8:	mov    DWORD PTR [rsp+0xb0],eax
  412fff:	jmp    0x412500
  413004:	mov    rax,QWORD PTR [rip+0x1f4e5]        # 0x4324f0
  41300b:	test   rax,rax
  41300e:	je     0x41454c
  413014:	mov    eax,DWORD PTR [rax+0x4]
  413017:	mov    DWORD PTR [rsp+0xb0],eax
  41301e:	jmp    0x412500
  413023:	mov    r14,QWORD PTR [rip+0x1f4c6]        # 0x4324f0
  41302a:	mov    edx,DWORD PTR [r12]
  41302e:	test   r14,r14
  413031:	mov    DWORD PTR [rip+0x1f4b1],edx        # 0x4324e8
  413037:	je     0x414496
  41303d:	mov    edi,DWORD PTR [r14+0x4]
  413041:	mov    DWORD PTR [rip+0x1f49d],edi        # 0x4324e4
  413047:	sub    edi,edx
  413049:	cmp    edi,0x3ff
  41304f:	mov    DWORD PTR [rip+0x1f48b],edi        # 0x4324e0
  413055:	jg     0x414454
  41305b:	test   edi,edi
  41305d:	mov    eax,edx
  41305f:	mov    ebp,edx
  413061:	jle    0x4130dd
  413063:	lea    rbx,[rsp+0x1be0]
  41306b:	xor    ebp,ebp
  41306d:	mov    rcx,r14
  413070:	mov    QWORD PTR [rsp+0x88],rbx
  413078:	lea    rbx,[rsp+0x1be8]
  413080:	jmp    0x41308f
  413082:	mov    eax,DWORD PTR [rip+0x1f460]        # 0x4324e8
  413088:	mov    rcx,QWORD PTR [rip+0x1f461]        # 0x4324f0
  41308f:	lea    edx,[rax+rbp*1]
  413092:	add    rbx,0x8
  413096:	add    ebp,0x1
  413099:	call   0x416670
  41309e:	mov    QWORD PTR [rbx-0x8],rax
  4130a2:	cmp    DWORD PTR [rip+0x1f438],ebp        # 0x4324e0
  4130a8:	jg     0x413082
  4130aa:	mov    rax,QWORD PTR [r12-0x20]
  4130af:	mov    rdx,QWORD PTR [rsp+0x88]
  4130b7:	mov    r8d,0x2008
  4130bd:	mov    ebp,DWORD PTR [rip+0x1f425]        # 0x4324e8
  4130c3:	mov    r14,QWORD PTR [rip+0x1f426]        # 0x4324f0
  4130ca:	mov    DWORD PTR [rsp+0x1be0],edi
  4130d1:	lea    rcx,[rax+0x88]
  4130d8:	call   0x41dbc0
  4130dd:	mov    rax,QWORD PTR [r12-0x20]
  4130e2:	mov    edx,ebp
  4130e4:	mov    rcx,r14
  4130e7:	mov    QWORD PTR [rax+0x50],0x0
  4130ef:	mov    rax,QWORD PTR [r12-0x20]
  4130f4:	mov    DWORD PTR [rax+0x8],0x68
  4130fb:	mov    rax,QWORD PTR [r12-0x20]
  413100:	mov    DWORD PTR [rax+0xc],0x6a
  413107:	call   0x416630
  41310c:	mov    rax,QWORD PTR [r12-0x20]
  413111:	mov    QWORD PTR [rsp+0xb0],rax
  413119:	jmp    0x412500
  41311e:	lea    rcx,[rsp+0xb0]
  413126:	mov    edx,0xc
  41312b:	call   0x40f220
  413130:	mov    rax,QWORD PTR [rsp+0xb8]
  413138:	mov    QWORD PTR [rsp+0x38],rax
  41313d:	mov    eax,DWORD PTR [rsp+0xc8]
  413144:	mov    DWORD PTR [rsp+0x40],eax
  413148:	jmp    0x412500
  41314d:	mov    rax,QWORD PTR [r12]
  413151:	mov    QWORD PTR [rsp+0xb0],rax
  413159:	jmp    0x412500
  41315e:	mov    rbx,QWORD PTR [r12]
  413162:	mov    DWORD PTR [rbx+0x8],0x66
  413169:	mov    rcx,rbx
  41316c:	call   0x40e840
  413171:	test   rax,rax
  413174:	je     0x41449d
  41317a:	mov    QWORD PTR [rsp+0xb0],rax
  413182:	jmp    0x412500
  413187:	mov    rax,QWORD PTR [r12]
  41318b:	cmp    DWORD PTR [rax+0x8],0x68
  41318f:	jne    0x4144d4
  413195:	mov    QWORD PTR [rsp+0xb0],rax
  41319d:	jmp    0x412500
  4131a2:	mov    rax,QWORD PTR [r12]
  4131a6:	cmp    DWORD PTR [rax+0x8],0x66
  4131aa:	jne    0x4144e9
  4131b0:	mov    QWORD PTR [rsp+0xb0],rax
  4131b8:	jmp    0x412500
  4131bd:	lea    rbx,[rsp+0x1be0]
  4131c5:	mov    r8d,DWORD PTR [rip+0x206cc]        # 0x433898
  4131cc:	lea    rdx,[rip+0x113cb]        # 0x42459e
  4131d3:	mov    rcx,rbx
  4131d6:	call   0x41db80
  4131db:	mov    rcx,rbx
  4131de:	call   0x40fdf0
  4131e3:	mov    edi,DWORD PTR [rip+0x206af]        # 0x433898
  4131e9:	mov    QWORD PTR [rsp+0xb0],rax
  4131f1:	mov    DWORD PTR [rax+0x8],0x65
  4131f8:	mov    DWORD PTR [rax+0x20f8],0x1
  413202:	mov    QWORD PTR [rax+0x2100],rdi
  413209:	jmp    0x412500
  41320e:	mov    r8d,DWORD PTR [rip+0x205ab]        # 0x4337c0
  413215:	test   r8d,r8d
  413218:	jle    0x4144fe
  41321e:	lea    rbx,[rsp+0x1be0]
  413226:	lea    rdx,[rip+0x1139c]        # 0x4245c9
  41322d:	mov    rcx,rbx
  413230:	call   0x41db80
  413235:	mov    rcx,rbx
  413238:	call   0x40fdf0
  41323d:	movsxd rdx,DWORD PTR [rip+0x2057c]        # 0x4337c0
  413244:	mov    QWORD PTR [rsp+0xb0],rax
  41324c:	mov    DWORD PTR [rax+0x8],0x65
  413253:	mov    DWORD PTR [rax+0x20f8],0x1
  41325d:	mov    QWORD PTR [rax+0x2100],rdx
  413264:	jmp    0x412500
  413269:	mov    eax,DWORD PTR [r12-0x40]
  41326e:	mov    rdx,QWORD PTR [r12]
  413272:	mov    rcx,QWORD PTR [rip+0x1f277]        # 0x4324f0
  413279:	mov    DWORD PTR [rsp+0xb0],eax
  413280:	call   0x416750
  413285:	jmp    0x412500
  41328a:	lea    rcx,[rsp+0xb0]
  413292:	mov    edx,0x6
  413297:	call   0x40f220
  41329c:	mov    rax,QWORD PTR [rsp+0xb8]
  4132a4:	mov    QWORD PTR [rsp+0x38],rax
  4132a9:	mov    eax,DWORD PTR [rsp+0xc8]
  4132b0:	mov    DWORD PTR [rsp+0x40],eax
  4132b4:	jmp    0x412500
  4132b9:	mov    rax,QWORD PTR [r12]
  4132bd:	lea    rcx,[rip+0x113d8]        # 0x42469c
  4132c4:	mov    rdi,rax
  4132c7:	mov    QWORD PTR [rsp+0x38],rax
  4132cc:	call   0x40b5a0
  4132d1:	mov    eax,DWORD PTR [rip+0x20611]        # 0x4338e8
  4132d7:	mov    DWORD PTR [rip+0x1f20b],0xf        # 0x4324ec
  4132e1:	mov    DWORD PTR [rdi+0x8],0x68
  4132e8:	mov    DWORD PTR [rdi+0xc],0x69
  4132ef:	mov    DWORD PTR [rsp+0xb0],0x69
  4132fa:	mov    DWORD PTR [rsp+0x40],0x0
  413302:	mov    DWORD PTR [rsp+0xb4],eax
  413309:	jmp    0x412500
  41330e:	mov    rax,QWORD PTR [r12]
  413312:	mov    rdx,QWORD PTR [r12+0x10]
  413317:	mov    QWORD PTR [rsp+0xb0],rax
  41331f:	mov    rax,QWORD PTR [r12+0x8]
  413324:	mov    QWORD PTR [rsp+0xc0],rdx
  41332c:	mov    rdx,QWORD PTR [r12+0x18]
  413331:	mov    QWORD PTR [rsp+0xb8],rax
  413339:	mov    QWORD PTR [rsp+0x38],rax
  41333e:	mov    eax,DWORD PTR [r12+0x18]
  413343:	mov    QWORD PTR [rsp+0xc8],rdx
  41334b:	mov    DWORD PTR [rsp+0x40],eax
  41334f:	jmp    0x412500
  413354:	lea    rcx,[rsp+0xb0]
  41335c:	mov    edx,0x20
  413361:	call   0x40f220
  413366:	mov    rax,QWORD PTR [rsp+0xb8]
  41336e:	mov    QWORD PTR [rsp+0x38],rax
  413373:	mov    eax,DWORD PTR [rsp+0xc8]
  41337a:	mov    DWORD PTR [rsp+0x40],eax
  41337e:	jmp    0x412500
  413383:	lea    rcx,[rsp+0xb0]
  41338b:	mov    edx,0x1f
  413390:	call   0x40f220
  413395:	mov    rax,QWORD PTR [rsp+0xb8]
  41339d:	mov    QWORD PTR [rsp+0x38],rax
  4133a2:	mov    eax,DWORD PTR [rsp+0xc8]
  4133a9:	mov    DWORD PTR [rsp+0x40],eax
  4133ad:	jmp    0x412500
  4133b2:	lea    rcx,[rsp+0xb0]
  4133ba:	mov    edx,0xe
  4133bf:	call   0x40f220
  4133c4:	mov    rax,QWORD PTR [rsp+0xb8]
  4133cc:	mov    QWORD PTR [rsp+0x38],rax
  4133d1:	mov    eax,DWORD PTR [rsp+0xc8]
  4133d8:	mov    DWORD PTR [rsp+0x40],eax
  4133dc:	jmp    0x412500
  4133e1:	mov    rax,QWORD PTR [r12]
  4133e5:	mov    rdx,QWORD PTR [r12+0x10]
  4133ea:	mov    QWORD PTR [rsp+0xb0],rax
  4133f2:	mov    rax,QWORD PTR [r12+0x8]
  4133f7:	mov    QWORD PTR [rsp+0xc0],rdx
  4133ff:	mov    rdx,QWORD PTR [r12+0x18]
  413404:	mov    QWORD PTR [rsp+0xb8],rax
  41340c:	mov    QWORD PTR [rsp+0x38],rax
  413411:	mov    eax,DWORD PTR [r12+0x18]
  413416:	mov    QWORD PTR [rsp+0xc8],rdx
  41341e:	mov    DWORD PTR [rsp+0x40],eax
  413422:	jmp    0x412500
  413427:	mov    rdx,QWORD PTR [r12-0x20]
  41342c:	lea    rcx,[rsp+0xb0]
  413434:	call   0x415cc0
  413439:	mov    rax,QWORD PTR [rsp+0xb8]
  413441:	mov    QWORD PTR [rsp+0x38],rax
  413446:	mov    eax,DWORD PTR [rsp+0xc8]
  41344d:	mov    DWORD PTR [rsp+0x40],eax
  413451:	jmp    0x412500
  413456:	mov    rax,QWORD PTR [r12]
  41345a:	mov    rdx,QWORD PTR [r12+0x10]
  41345f:	mov    QWORD PTR [rsp+0xb0],rax
  413467:	mov    rax,QWORD PTR [r12+0x8]
  41346c:	mov    QWORD PTR [rsp+0xc0],rdx
  413474:	mov    rdx,QWORD PTR [r12+0x18]
  413479:	mov    QWORD PTR [rsp+0xb8],rax
  413481:	mov    QWORD PTR [rsp+0x38],rax
  413486:	mov    eax,DWORD PTR [r12+0x18]
  41348b:	mov    QWORD PTR [rsp+0xc8],rdx
  413493:	mov    DWORD PTR [rsp+0x40],eax
  413497:	jmp    0x412500
  41349c:	mov    eax,DWORD PTR [r12-0x40]
  4134a1:	mov    rdx,QWORD PTR [r12]
  4134a5:	mov    rcx,QWORD PTR [rip+0x1f044]        # 0x4324f0
  4134ac:	mov    DWORD PTR [rsp+0xb0],eax
  4134b3:	call   0x416750
  4134b8:	jmp    0x412500
  4134bd:	mov    rcx,QWORD PTR [rip+0x1f02c]        # 0x4324f0
  4134c4:	test   rcx,rcx
  4134c7:	je     0x414613
  4134cd:	mov    eax,DWORD PTR [rcx+0x4]
  4134d0:	mov    rdx,QWORD PTR [r12]
  4134d4:	mov    DWORD PTR [rsp+0xb0],eax
  4134db:	call   0x416750
  4134e0:	jmp    0x412500
  4134e5:	mov    rcx,QWORD PTR [r12]
  4134e9:	mov    DWORD PTR [rcx+0x8],0x65
  4134f0:	call   0x40e840
  4134f5:	test   rax,rax
  4134f8:	je     0x41461a
  4134fe:	mov    QWORD PTR [rsp+0xb0],rax
  413506:	jmp    0x412500
  41350b:	xor    ecx,ecx
  41350d:	call   0x415bb0
  413512:	mov    rdx,r12
  413515:	mov    rcx,rax
  413518:	mov    QWORD PTR [rsp+0xb0],rax
  413520:	call   0x415c40
  413525:	jmp    0x412500
  41352a:	mov    rcx,QWORD PTR [r12-0x40]
  41352f:	mov    rdx,r12
  413532:	call   0x415c40
  413537:	mov    rax,QWORD PTR [r12-0x40]
  41353c:	mov    QWORD PTR [rsp+0xb0],rax
  413544:	jmp    0x412500
  413549:	xor    ecx,ecx
  41354b:	call   0x415bb0
  413550:	mov    rdx,r12
  413553:	mov    rcx,rax
  413556:	mov    QWORD PTR [rsp+0xb0],rax
  41355e:	call   0x415c40
  413563:	jmp    0x412500
  413568:	xor    ecx,ecx
  41356a:	call   0x415bb0
  41356f:	mov    QWORD PTR [rsp+0xb0],rax
  413577:	jmp    0x412500
  41357c:	mov    rax,QWORD PTR [r12]
  413580:	mov    QWORD PTR [rsp+0xb0],rax
  413588:	jmp    0x412500
  41358d:	mov    rax,QWORD PTR [r12]
  413591:	mov    QWORD PTR [rsp+0xb0],rax
  413599:	jmp    0x412500
  41359e:	mov    rax,QWORD PTR [r12-0x40]
  4135a3:	mov    rdx,QWORD PTR [r12]
  4135a7:	mov    QWORD PTR [rax+0x48],rdx
  4135ab:	jmp    0x412500
  4135b0:	lea    rcx,[rsp+0xb0]
  4135b8:	mov    edx,0xb
  4135bd:	call   0x40f220
  4135c2:	mov    rax,QWORD PTR [rsp+0xb8]
  4135ca:	mov    QWORD PTR [rsp+0x38],rax
  4135cf:	mov    eax,DWORD PTR [rsp+0xc8]
  4135d6:	mov    DWORD PTR [rsp+0x40],eax
  4135da:	jmp    0x412500
  4135df:	lea    rcx,[rsp+0xb0]
  4135e7:	mov    edx,0x8
  4135ec:	call   0x40f220
  4135f1:	mov    rax,QWORD PTR [rsp+0xb8]
  4135f9:	mov    QWORD PTR [rsp+0x38],rax
  4135fe:	mov    eax,DWORD PTR [rsp+0xc8]
  413605:	mov    DWORD PTR [rsp+0x40],eax
  413609:	jmp    0x412500
  41360e:	lea    rcx,[rsp+0xb0]
  413616:	mov    edx,0x7
  41361b:	call   0x40f220
  413620:	mov    rax,QWORD PTR [rsp+0xb8]
  413628:	mov    QWORD PTR [rsp+0x38],rax
  41362d:	mov    eax,DWORD PTR [rsp+0xc8]
  413634:	mov    DWORD PTR [rsp+0x40],eax
  413638:	jmp    0x412500
  41363d:	lea    rcx,[rsp+0xb0]
  413645:	mov    edx,0xa
  41364a:	call   0x40f220
  41364f:	mov    rax,QWORD PTR [rsp+0xb8]
  413657:	mov    QWORD PTR [rsp+0x38],rax
  41365c:	mov    eax,DWORD PTR [rsp+0xc8]
  413663:	mov    DWORD PTR [rsp+0x40],eax
  413667:	jmp    0x412500
  41366c:	lea    rcx,[rsp+0xb0]
  413674:	mov    edx,0x4
  413679:	call   0x40f220
  41367e:	mov    rax,QWORD PTR [rsp+0xb8]
  413686:	mov    QWORD PTR [rsp+0x38],rax
  41368b:	mov    eax,DWORD PTR [rsp+0xc8]
  413692:	mov    DWORD PTR [rsp+0x40],eax
  413696:	jmp    0x412500
  41369b:	lea    rcx,[rsp+0xb0]
  4136a3:	mov    edx,0x3
  4136a8:	call   0x40f220
  4136ad:	mov    rax,QWORD PTR [rsp+0xb8]
  4136b5:	mov    QWORD PTR [rsp+0x38],rax
  4136ba:	mov    eax,DWORD PTR [rsp+0xc8]
  4136c1:	mov    DWORD PTR [rsp+0x40],eax
  4136c5:	jmp    0x412500
  4136ca:	lea    rcx,[rsp+0xb0]
  4136d2:	mov    edx,0x1
  4136d7:	call   0x40f220
  4136dc:	mov    rax,QWORD PTR [rsp+0xb8]
  4136e4:	mov    QWORD PTR [rsp+0x38],rax
  4136e9:	mov    eax,DWORD PTR [rsp+0xc8]
  4136f0:	mov    DWORD PTR [rsp+0x40],eax
  4136f4:	jmp    0x412500
  4136f9:	lea    rcx,[rsp+0xb0]
  413701:	mov    edx,0x2
  413706:	call   0x40f220
  41370b:	mov    rax,QWORD PTR [rsp+0xb8]
  413713:	mov    QWORD PTR [rsp+0x38],rax
  413718:	mov    eax,DWORD PTR [rsp+0xc8]
  41371f:	mov    DWORD PTR [rsp+0x40],eax
  413723:	jmp    0x412500
  413728:	mov    rcx,QWORD PTR [r12-0x40]
  41372d:	mov    rdx,r12
  413730:	call   0x415c40
  413735:	mov    rax,QWORD PTR [r12-0x40]
  41373a:	mov    QWORD PTR [rsp+0xb0],rax
  413742:	jmp    0x412500
  413747:	mov    rax,QWORD PTR [rip+0x17f62]        # 0x42b6b0
  41374e:	mov    rcx,QWORD PTR [rax]
  413751:	call   0x40fdf0
  413756:	mov    rbx,rax
  413759:	mov    DWORD PTR [rax+0x8],0x64
  413760:	mov    QWORD PTR [rax+0x20],0x0
  413768:	call   0x416500
  41376d:	mov    DWORD PTR [rbx+0x2108],0x1
  413777:	mov    QWORD PTR [rbx+0x30],rax
  41377b:	call   0x416500
  413780:	mov    rcx,QWORD PTR [rip+0x20131]        # 0x4338b8
  413787:	mov    QWORD PTR [rbx+0x40],rax
  41378b:	mov    rdx,rbx
  41378e:	call   0x416750
  413793:	mov    QWORD PTR [rip+0x20146],rbx        # 0x4338e0
  41379a:	jmp    0x412500
  41379f:	mov    rax,QWORD PTR [rip+0x17f4a]        # 0x42b6f0
  4137a6:	mov    r11d,DWORD PTR [rax]
  4137a9:	test   r11d,r11d
  4137ac:	jle    0x412500
  4137b2:	movsxd rbx,r14d
  4137b5:	mov    esi,0x1
  4137ba:	add    rbx,rbx
  4137bd:	neg    rbx
  4137c0:	jmp    0x412777
  4137c5:	mov    eax,DWORD PTR [r12-0x40]
  4137ca:	mov    rdx,QWORD PTR [r12]
  4137ce:	mov    rcx,QWORD PTR [rip+0x1ed1b]        # 0x4324f0
  4137d5:	mov    DWORD PTR [rsp+0xb0],eax
  4137dc:	call   0x416750
  4137e1:	jmp    0x412500
  4137e6:	mov    rcx,QWORD PTR [rip+0x1ed03]        # 0x4324f0
  4137ed:	test   rcx,rcx
  4137f0:	je     0x414648
  4137f6:	mov    eax,DWORD PTR [rcx+0x4]
  4137f9:	mov    rdx,QWORD PTR [r12]
  4137fd:	mov    DWORD PTR [rsp+0xb0],eax
  413804:	call   0x416750
  413809:	jmp    0x412500
  41380e:	mov    eax,DWORD PTR [r12-0x20]
  413813:	mov    DWORD PTR [rsp+0xb0],eax
  41381a:	jmp    0x412500
  41381f:	movsxd rax,DWORD PTR [rip+0x1ff9a]        # 0x4337c0
  413826:	test   eax,eax
  413828:	jle    0x414561
  41382e:	mov    rdx,QWORD PTR [r12-0x40]
  413833:	mov    QWORD PTR [rdx+0x2100],rax
  41383a:	jmp    0x412500
  41383f:	mov    edi,DWORD PTR [rip+0x20053]        # 0x433898
  413845:	mov    rax,QWORD PTR [r12-0x40]
  41384a:	mov    QWORD PTR [rax+0x2100],rdi
  413851:	jmp    0x412500
  413856:	lea    rcx,[rsp+0xb0]
  41385e:	mov    edx,0xa
  413863:	call   0x40f220
  413868:	mov    rax,QWORD PTR [rsp+0xb8]
  413870:	mov    QWORD PTR [rsp+0x38],rax
  413875:	mov    eax,DWORD PTR [rsp+0xc8]
  41387c:	mov    DWORD PTR [rsp+0x40],eax
  413880:	jmp    0x412500
  413885:	lea    rcx,[rsp+0xb0]
  41388d:	mov    edx,0xb
  413892:	call   0x40f220
  413897:	mov    rax,QWORD PTR [rsp+0xb8]
  41389f:	mov    QWORD PTR [rsp+0x38],rax
  4138a4:	mov    eax,DWORD PTR [rsp+0xc8]
  4138ab:	mov    DWORD PTR [rsp+0x40],eax
  4138af:	jmp    0x412500
  4138b4:	lea    rcx,[rsp+0xb0]
  4138bc:	mov    edx,0xc
  4138c1:	call   0x40f220
  4138c6:	mov    rax,QWORD PTR [rsp+0xb8]
  4138ce:	mov    QWORD PTR [rsp+0x38],rax
  4138d3:	mov    eax,DWORD PTR [rsp+0xc8]
  4138da:	mov    DWORD PTR [rsp+0x40],eax
  4138de:	jmp    0x412500
  4138e3:	mov    rax,QWORD PTR [r12]
  4138e7:	mov    rdx,QWORD PTR [r12+0x10]
  4138ec:	mov    QWORD PTR [rsp+0xb0],rax
  4138f4:	mov    rax,QWORD PTR [r12+0x8]
  4138f9:	mov    QWORD PTR [rsp+0xc0],rdx
  413901:	mov    rdx,QWORD PTR [r12+0x18]
  413906:	mov    QWORD PTR [rsp+0xb8],rax
  41390e:	mov    QWORD PTR [rsp+0x38],rax
  413913:	mov    eax,DWORD PTR [r12+0x18]
  413918:	mov    QWORD PTR [rsp+0xc8],rdx
  413920:	mov    DWORD PTR [rsp+0x40],eax
  413924:	jmp    0x412500
  413929:	lea    rcx,[rip+0x10b3b]        # 0x42446b
  413930:	call   0x40b5a0
  413935:	mov    rax,QWORD PTR [rip+0x17f64]        # 0x42b8a0
  41393c:	mov    rax,QWORD PTR [rax+0x58]
  413940:	mov    QWORD PTR [rsp+0xb0],rax
  413948:	jmp    0x412500
  41394d:	lea    rcx,[rip+0x10b03]        # 0x424457
  413954:	call   0x40b5a0
  413959:	mov    rax,QWORD PTR [rip+0x17f40]        # 0x42b8a0
  413960:	mov    rax,QWORD PTR [rax+0x50]
  413964:	mov    QWORD PTR [rsp+0xb0],rax
  41396c:	jmp    0x412500
  413971:	lea    rcx,[rip+0x10acc]        # 0x424444
  413978:	call   0x40b5a0
  41397d:	mov    rax,QWORD PTR [rip+0x17f1c]        # 0x42b8a0
  413984:	mov    rax,QWORD PTR [rax+0x48]
  413988:	mov    QWORD PTR [rsp+0xb0],rax
  413990:	jmp    0x412500
  413995:	lea    rcx,[rip+0x10a93]        # 0x42442f
  41399c:	call   0x40b5a0
  4139a1:	mov    rax,QWORD PTR [rip+0x17ef8]        # 0x42b8a0
  4139a8:	mov    rax,QWORD PTR [rax+0x40]
  4139ac:	mov    QWORD PTR [rsp+0xb0],rax
  4139b4:	jmp    0x412500
  4139b9:	lea    rcx,[rip+0x10a5b]        # 0x42441b
  4139c0:	call   0x40b5a0
  4139c5:	mov    rax,QWORD PTR [rip+0x17ed4]        # 0x42b8a0
  4139cc:	mov    rax,QWORD PTR [rax+0x38]
  4139d0:	mov    QWORD PTR [rsp+0xb0],rax
  4139d8:	jmp    0x412500
  4139dd:	mov    rax,QWORD PTR [rip+0x17ebc]        # 0x42b8a0
  4139e4:	mov    rax,QWORD PTR [rax+0x30]
  4139e8:	mov    QWORD PTR [rsp+0xb0],rax
  4139f0:	jmp    0x412500
  4139f5:	mov    rax,QWORD PTR [rip+0x17ea4]        # 0x42b8a0
  4139fc:	mov    rax,QWORD PTR [rax+0x28]
  413a00:	mov    QWORD PTR [rsp+0xb0],rax
  413a08:	jmp    0x412500
  413a0d:	mov    rax,QWORD PTR [rip+0x17e8c]        # 0x42b8a0
  413a14:	mov    rax,QWORD PTR [rax+0x20]
  413a18:	mov    QWORD PTR [rsp+0xb0],rax
  413a20:	jmp    0x412500
  413a25:	mov    rax,QWORD PTR [rip+0x17e74]        # 0x42b8a0
  413a2c:	mov    rax,QWORD PTR [rax+0x18]
  413a30:	mov    QWORD PTR [rsp+0xb0],rax
  413a38:	jmp    0x412500
  413a3d:	mov    rax,QWORD PTR [rip+0x17e5c]        # 0x42b8a0
  413a44:	mov    rax,QWORD PTR [rax+0x8]
  413a48:	mov    QWORD PTR [rsp+0xb0],rax
  413a50:	jmp    0x412500
  413a55:	mov    rax,QWORD PTR [rip+0x17e44]        # 0x42b8a0
  413a5c:	mov    rax,QWORD PTR [rax+0x10]
  413a60:	mov    QWORD PTR [rsp+0xb0],rax
  413a68:	jmp    0x412500
  413a6d:	mov    rcx,QWORD PTR [rip+0x1ea7c]        # 0x4324f0
  413a74:	mov    ebx,DWORD PTR [r12]
  413a78:	test   rcx,rcx
  413a7b:	mov    DWORD PTR [rsp+0xb0],ebx
  413a82:	mov    DWORD PTR [rip+0x1ea60],ebx        # 0x4324e8
  413a88:	je     0x41456a
  413a8e:	mov    eax,DWORD PTR [rcx+0x4]
  413a91:	cmp    eax,ebx
  413a93:	mov    DWORD PTR [rip+0x1ea4b],eax        # 0x4324e4
  413a99:	jg     0x413aa7
  413a9b:	jmp    0x412500
  413aa0:	mov    rcx,QWORD PTR [rip+0x1ea49]        # 0x4324f0
  413aa7:	mov    edx,ebx
  413aa9:	add    ebx,0x1
  413aac:	call   0x416670
  413ab1:	cmp    DWORD PTR [rip+0x1ea2d],ebx        # 0x4324e4
  413ab7:	mov    rdx,QWORD PTR [r12-0x20]
  413abc:	mov    QWORD PTR [rax+0x50],rdx
  413ac0:	jg     0x413aa0
  413ac2:	jmp    0x412500
  413ac7:	mov    eax,DWORD PTR [r12-0x40]
  413acc:	mov    DWORD PTR [rsp+0xb0],eax
  413ad3:	jmp    0x412500
  413ad8:	mov    eax,DWORD PTR [r12-0x20]
  413add:	mov    DWORD PTR [rsp+0xb0],eax
  413ae4:	jmp    0x412500
  413ae9:	lea    rcx,[rip+0x108ea]        # 0x4243da
  413af0:	call   0x40b5a0
  413af5:	mov    rcx,QWORD PTR [r12-0x60]
  413afa:	call   0x40f090
  413aff:	mov    rax,QWORD PTR [rip+0x1e9ea]        # 0x4324f0
  413b06:	mov    ebp,DWORD PTR [r12-0x20]
  413b0b:	test   rax,rax
  413b0e:	mov    DWORD PTR [rip+0x1e9d4],ebp        # 0x4324e8
  413b14:	je     0x41455a
  413b1a:	mov    eax,DWORD PTR [rax+0x4]
  413b1d:	mov    DWORD PTR [rip+0x1e9c1],eax        # 0x4324e4
  413b23:	mov    ecx,eax
  413b25:	cmp    ebp,ecx
  413b27:	jge    0x4142da
  413b2d:	mov    rcx,QWORD PTR [rip+0x1e9bc]        # 0x4324f0
  413b34:	mov    edx,ebp
  413b36:	add    ebp,0x1
  413b39:	call   0x416670
  413b3e:	mov    ecx,DWORD PTR [rip+0x1e9a0]        # 0x4324e4
  413b44:	mov    rdi,rax
  413b47:	cmp    ecx,ebp
  413b49:	jle    0x413b25
  413b4b:	mov    ebx,ebp
  413b4d:	jmp    0x413b5d
  413b4f:	nop
  413b50:	mov    ecx,DWORD PTR [rip+0x1e98e]        # 0x4324e4
  413b56:	add    ebx,0x1
  413b59:	cmp    ecx,ebx
  413b5b:	jle    0x413b25
  413b5d:	mov    rcx,QWORD PTR [rip+0x1e98c]        # 0x4324f0
  413b64:	mov    edx,ebx
  413b66:	call   0x416670
  413b6b:	mov    r14,QWORD PTR [rdi+0x10]
  413b6f:	mov    rdx,QWORD PTR [rax+0x10]
  413b73:	mov    rcx,r14
  413b76:	call   0x41db60
  413b7b:	test   eax,eax
  413b7d:	jne    0x413b50
  413b7f:	lea    rcx,[rip+0x10872]        # 0x4243f8
  413b86:	mov    rdx,r14
  413b89:	call   0x40f1a0
  413b8e:	jmp    0x413b50
  413b90:	lea    rcx,[rip+0x10830]        # 0x4243c7
  413b97:	mov    rbx,QWORD PTR [r12-0x80]
  413b9c:	call   0x40b5a0
  413ba1:	mov    rcx,QWORD PTR [r12]
  413ba5:	call   0x40f090
  413baa:	mov    rax,QWORD PTR [r12]
  413bae:	mov    ecx,0xd
  413bb3:	mov    DWORD PTR [rax+0x8],0x68
  413bba:	mov    rax,QWORD PTR [r12]
  413bbe:	mov    DWORD PTR [rax+0xc],0xd
  413bc5:	mov    rax,QWORD PTR [r12]
  413bc9:	mov    QWORD PTR [rax+0x50],rbx
  413bcd:	mov    rax,QWORD PTR [r12]
  413bd1:	mov    DWORD PTR [rax+0x5c],0xd
  413bd8:	mov    rax,QWORD PTR [r12]
  413bdc:	mov    QWORD PTR [rax+0x2090],0x10
  413be7:	mov    rbx,QWORD PTR [r12]
  413beb:	call   0x40c710
  413bf0:	mov    DWORD PTR [rbx+0x64],eax
  413bf3:	jmp    0x412500
  413bf8:	lea    rcx,[rip+0x107b3]        # 0x4243b2
  413bff:	call   0x40b5a0
  413c04:	mov    rcx,QWORD PTR [r12]
  413c08:	call   0x40f090
  413c0d:	mov    rax,QWORD PTR [r12]
  413c11:	movsxd rdx,DWORD PTR [rip+0x1fba8]        # 0x4337c0
  413c18:	mov    ecx,0xe
  413c1d:	mov    DWORD PTR [rax+0x8],0x68
  413c24:	mov    rax,QWORD PTR [r12]
  413c28:	mov    DWORD PTR [rax+0xc],0xe
  413c2f:	mov    rax,QWORD PTR [r12]
  413c33:	mov    DWORD PTR [rax+0x5c],0xe
  413c3a:	mov    rax,QWORD PTR [r12]
  413c3e:	mov    QWORD PTR [rax+0x2090],rdx
  413c45:	mov    rbx,QWORD PTR [r12]
  413c49:	call   0x40c710
  413c4e:	mov    DWORD PTR [rbx+0x64],eax
  413c51:	jmp    0x412500
  413c56:	mov    rax,QWORD PTR [r12-0x40]
  413c5b:	mov    DWORD PTR [rax+0x8],0x68
  413c62:	mov    rax,QWORD PTR [r12-0x40]
  413c67:	mov    DWORD PTR [rax+0xc],0x69
  413c6e:	mov    rax,QWORD PTR [r12-0x40]
  413c73:	mov    rdx,QWORD PTR [r12]
  413c77:	mov    QWORD PTR [rax+0x68],rdx
  413c7b:	mov    rdx,QWORD PTR [r12+0x8]
  413c80:	mov    QWORD PTR [rax+0x70],rdx
  413c84:	mov    rdx,QWORD PTR [r12+0x10]
  413c89:	mov    QWORD PTR [rax+0x78],rdx
  413c8d:	mov    rdx,QWORD PTR [r12+0x18]
  413c92:	mov    QWORD PTR [rax+0x80],rdx
  413c99:	mov    rax,QWORD PTR [r12-0x40]
  413c9e:	mov    QWORD PTR [rsp+0xb0],rax
  413ca6:	jmp    0x412500
  413cab:	mov    rcx,QWORD PTR [rip+0x1e83e]        # 0x4324f0
  413cb2:	mov    ebx,DWORD PTR [r12-0x40]
  413cb7:	test   rcx,rcx
  413cba:	mov    DWORD PTR [rsp+0xb0],ebx
  413cc1:	mov    DWORD PTR [rip+0x1e821],ebx        # 0x4324e8
  413cc7:	je     0x414553
  413ccd:	mov    eax,DWORD PTR [rcx+0x4]
  413cd0:	cmp    eax,ebx
  413cd2:	mov    DWORD PTR [rip+0x1e80c],eax        # 0x4324e4
  413cd8:	jg     0x413cf6
  413cda:	jmp    0x4142cc
  413cdf:	nop
  413ce0:	add    ebx,0x1
  413ce3:	cmp    DWORD PTR [rip+0x1e7fb],ebx        # 0x4324e4
  413ce9:	mov    rcx,QWORD PTR [rip+0x1e800]        # 0x4324f0
  413cf0:	jle    0x4142cc
  413cf6:	mov    edx,ebx
  413cf8:	call   0x416670
  413cfd:	mov    rdi,QWORD PTR [rax+0x10]
  413d01:	mov    rax,QWORD PTR [r12]
  413d05:	mov    rcx,QWORD PTR [rax+0x10]
  413d09:	mov    rdx,rdi
  413d0c:	call   0x41db60
  413d11:	test   eax,eax
  413d13:	jne    0x413ce0
  413d15:	lea    rcx,[rip+0x10674]        # 0x424390
  413d1c:	mov    rdx,rdi
  413d1f:	call   0x40f1a0
  413d24:	jmp    0x413ce0
  413d26:	mov    rcx,QWORD PTR [rip+0x1e7c3]        # 0x4324f0
  413d2d:	test   rcx,rcx
  413d30:	je     0x41440c
  413d36:	mov    eax,DWORD PTR [rcx+0x4]
  413d39:	mov    rdx,QWORD PTR [r12]
  413d3d:	mov    DWORD PTR [rsp+0xb0],eax
  413d44:	call   0x416750
  413d49:	jmp    0x412500
  413d4e:	mov    rcx,QWORD PTR [r12-0x60]
  413d53:	call   0x40f090
  413d58:	mov    rax,QWORD PTR [r12-0x60]
  413d5d:	mov    DWORD PTR [rax+0x8],0x68
  413d64:	mov    rax,QWORD PTR [r12-0x60]
  413d69:	mov    DWORD PTR [rax+0xc],0xf
  413d70:	mov    rax,QWORD PTR [r12-0x60]
  413d75:	mov    rdx,QWORD PTR [r12-0xa0]
  413d7d:	mov    QWORD PTR [rax+0x50],rdx
  413d81:	mov    rdx,QWORD PTR [r12-0xa0]
  413d89:	mov    rax,QWORD PTR [r12-0x60]
  413d8e:	mov    rdx,QWORD PTR [rdx+0x2090]
  413d95:	mov    QWORD PTR [rax+0x2090],rdx
  413d9c:	mov    rdx,QWORD PTR [r12-0xa0]
  413da4:	mov    rax,QWORD PTR [r12-0x60]
  413da9:	mov    edx,DWORD PTR [rdx+0x64]
  413dac:	mov    DWORD PTR [rax+0x64],edx
  413daf:	mov    eax,DWORD PTR [r12-0x20]
  413db4:	mov    DWORD PTR [rip+0x1e72e],eax        # 0x4324e8
  413dba:	mov    rax,QWORD PTR [rip+0x1e72f]        # 0x4324f0
  413dc1:	test   rax,rax
  413dc4:	je     0x414591
  413dca:	mov    eax,DWORD PTR [rax+0x4]
  413dcd:	mov    rbx,QWORD PTR [r12-0x60]
  413dd2:	mov    DWORD PTR [rip+0x1e70c],eax        # 0x4324e4
  413dd8:	call   0x416500
  413ddd:	mov    edi,DWORD PTR [rip+0x1e705]        # 0x4324e8
  413de3:	cmp    edi,DWORD PTR [rip+0x1e6fb]        # 0x4324e4
  413de9:	mov    QWORD PTR [rbx+0x30],rax
  413ded:	jge    0x41458a
  413df3:	mov    rcx,QWORD PTR [rip+0x1e6f6]        # 0x4324f0
  413dfa:	mov    edx,edi
  413dfc:	call   0x416670
  413e01:	cmp    DWORD PTR [rax+0xc],0x69
  413e05:	mov    rbx,rax
  413e08:	je     0x413e23
  413e0a:	lea    rdx,[rip+0xf873]        # 0x423684
  413e11:	lea    rcx,[rip+0x1055a]        # 0x424372
  413e18:	mov    r8d,0x129
  413e1e:	call   0x41da30
  413e23:	mov    rcx,rbx
  413e26:	add    edi,0x1
  413e29:	call   0x40f090
  413e2e:	mov    rax,QWORD PTR [r12-0x60]
  413e33:	mov    rdx,rbx
  413e36:	mov    rcx,QWORD PTR [rax+0x30]
  413e3a:	call   0x416750
  413e3f:	mov    rax,QWORD PTR [r12-0x60]
  413e44:	cmp    DWORD PTR [rip+0x1e69a],edi        # 0x4324e4
  413e4a:	mov    QWORD PTR [rbx+0x20],rax
  413e4e:	mov    rax,QWORD PTR [r12-0x60]
  413e53:	mov    rax,QWORD PTR [rax+0x50]
  413e57:	mov    QWORD PTR [rbx+0x50],rax
  413e5b:	jg     0x413df3
  413e5d:	mov    edx,DWORD PTR [rip+0x1e685]        # 0x4324e8
  413e63:	mov    rcx,QWORD PTR [rip+0x1e686]        # 0x4324f0
  413e6a:	call   0x416630
  413e6f:	jmp    0x412500
  413e74:	mov    rax,QWORD PTR [r12]
  413e78:	mov    rdx,QWORD PTR [r12+0x10]
  413e7d:	mov    QWORD PTR [rsp+0xb0],rax
  413e85:	mov    rax,QWORD PTR [r12+0x8]
  413e8a:	mov    QWORD PTR [rsp+0xc0],rdx
  413e92:	mov    rdx,QWORD PTR [r12+0x18]
  413e97:	mov    QWORD PTR [rsp+0xb8],rax
  413e9f:	mov    QWORD PTR [rsp+0x38],rax
  413ea4:	mov    eax,DWORD PTR [r12+0x18]
  413ea9:	mov    QWORD PTR [rsp+0xc8],rdx
  413eb1:	mov    DWORD PTR [rsp+0x40],eax
  413eb5:	jmp    0x412500
  413eba:	mov    rax,QWORD PTR [r12]
  413ebe:	mov    QWORD PTR [rsp+0xb0],rax
  413ec6:	jmp    0x412500
  413ecb:	mov    rax,QWORD PTR [r12]
  413ecf:	mov    ecx,0x68
  413ed4:	mov    DWORD PTR [rax+0x8],0x68
  413edb:	mov    rdx,QWORD PTR [r12]
  413edf:	call   0x40efd0
  413ee4:	test   eax,eax
  413ee6:	jne    0x414413
  413eec:	mov    rdx,QWORD PTR [r12]
  413ef0:	mov    rcx,QWORD PTR [rip+0x1f8e9]        # 0x4337e0
  413ef7:	call   0x416750
  413efc:	jmp    0x412500
  413f01:	lea    rcx,[rip+0x1042f]        # 0x424337
  413f08:	call   0x40b5a0
  413f0d:	jmp    0x412500
  413f12:	mov    rcx,QWORD PTR [rip+0x1e5df]        # 0x4324f8
  413f19:	call   0x4167a0
  413f1e:	jmp    0x412500
  413f23:	mov    rcx,QWORD PTR [rip+0x1e5c6]        # 0x4324f0
  413f2a:	mov    ebx,DWORD PTR [r12]
  413f2e:	test   rcx,rcx
  413f31:	mov    DWORD PTR [rip+0x1e5b1],ebx        # 0x4324e8
  413f37:	je     0x414405
  413f3d:	mov    eax,DWORD PTR [rcx+0x4]
  413f40:	cmp    eax,ebx
  413f42:	mov    DWORD PTR [rip+0x1e59c],eax        # 0x4324e4
  413f48:	jg     0x413f76
  413f4a:	jmp    0x4143fe
  413f4f:	nop
  413f50:	mov    rdx,QWORD PTR [rdi+0x10]
  413f54:	lea    rcx,[rip+0x105cd]        # 0x424528
  413f5b:	call   0x40f1a0
  413f60:	add    ebx,0x1
  413f63:	cmp    DWORD PTR [rip+0x1e57b],ebx        # 0x4324e4
  413f69:	jle    0x414292
  413f6f:	mov    rcx,QWORD PTR [rip+0x1e57a]        # 0x4324f0
  413f76:	mov    edx,ebx
  413f78:	call   0x416670
  413f7d:	mov    ecx,0x66
  413f82:	mov    DWORD PTR [rax+0x8],0x66
  413f89:	mov    rdx,rax
  413f8c:	mov    rdi,rax
  413f8f:	call   0x40efd0
  413f94:	test   eax,eax
  413f96:	jne    0x413f50
  413f98:	mov    rax,QWORD PTR [r12-0x20]
  413f9d:	mov    rcx,rdi
  413fa0:	mov    QWORD PTR [rdi+0x50],rax
  413fa4:	call   0x40f090
  413fa9:	mov    rcx,QWORD PTR [rip+0x1f818]        # 0x4337c8
  413fb0:	mov    rdx,rdi
  413fb3:	call   0x416750
  413fb8:	jmp    0x413f60
  413fba:	xor    ecx,ecx
  413fbc:	call   0x415bb0
  413fc1:	mov    rdx,r12
  413fc4:	mov    rcx,rax
  413fc7:	mov    QWORD PTR [rsp+0xb0],rax
  413fcf:	call   0x415c40
  413fd4:	jmp    0x412500
  413fd9:	mov    rcx,QWORD PTR [r12-0x40]
  413fde:	mov    rdx,r12
  413fe1:	mov    QWORD PTR [rsp+0xb0],rcx
  413fe9:	call   0x415c40
  413fee:	jmp    0x412500
  413ff3:	lea    rcx,[rsp+0xb0]
  413ffb:	mov    edx,0x4
  414000:	call   0x40f220
  414005:	mov    rax,QWORD PTR [rsp+0xb8]
  41400d:	mov    QWORD PTR [rsp+0x38],rax
  414012:	mov    eax,DWORD PTR [rsp+0xc8]
  414019:	mov    DWORD PTR [rsp+0x40],eax
  41401d:	jmp    0x412500
  414022:	lea    rcx,[rsp+0xb0]
  41402a:	mov    edx,0x9
  41402f:	call   0x40f220
  414034:	mov    rax,QWORD PTR [rsp+0xb8]
  41403c:	mov    QWORD PTR [rsp+0x38],rax
  414041:	mov    eax,DWORD PTR [rsp+0xc8]
  414048:	mov    DWORD PTR [rsp+0x40],eax
  41404c:	jmp    0x412500
  414051:	mov    rax,QWORD PTR [r12]
  414055:	mov    ecx,0x65
  41405a:	mov    DWORD PTR [rax+0x8],0x65
  414061:	mov    rdx,QWORD PTR [r12]
  414065:	call   0x40efd0
  41406a:	test   eax,eax
  41406c:	jne    0x414598
  414072:	mov    rcx,QWORD PTR [r12]
  414076:	call   0x40f090
  41407b:	mov    rdx,QWORD PTR [r12]
  41407f:	mov    rcx,QWORD PTR [rip+0x1f83a]        # 0x4338c0
  414086:	mov    QWORD PTR [rsp+0xb0],rdx
  41408e:	call   0x416750
  414093:	jmp    0x412500
  414098:	mov    rax,QWORD PTR [r12-0x40]
  41409d:	mov    QWORD PTR [rax+0x2100],0x0
  4140a8:	mov    rax,QWORD PTR [r12-0x40]
  4140ad:	mov    DWORD PTR [rax+0x20fc],0x1
  4140b7:	jmp    0x412500
  4140bc:	mov    rax,QWORD PTR [rip+0x1e42d]        # 0x4324f0
  4140c3:	test   rax,rax
  4140c6:	je     0x41444d
  4140cc:	mov    eax,DWORD PTR [rax+0x4]
  4140cf:	mov    DWORD PTR [rsp+0xb0],eax
  4140d6:	jmp    0x412500
  4140db:	mov    r14,QWORD PTR [rip+0x1e40e]        # 0x4324f0
  4140e2:	test   r14,r14
  4140e5:	je     0x41460c
  4140eb:	mov    edi,DWORD PTR [r14+0x4]
  4140ef:	mov    edx,DWORD PTR [r12]
  4140f3:	mov    DWORD PTR [rip+0x1e3eb],edi        # 0x4324e4
  4140f9:	sub    edi,edx
  4140fb:	mov    DWORD PTR [rip+0x1e3e7],edx        # 0x4324e8
  414101:	cmp    edi,0x3ff
  414107:	mov    DWORD PTR [rip+0x1e3d3],edi        # 0x4324e0
  41410d:	jg     0x4145ca
  414113:	test   edi,edi
  414115:	mov    eax,edx
  414117:	mov    ebp,edx
  414119:	jle    0x41419c
  41411f:	lea    rbx,[rsp+0x1be0]
  414127:	xor    ebp,ebp
  414129:	mov    rcx,r14
  41412c:	mov    QWORD PTR [rsp+0x88],rbx
  414134:	lea    rbx,[rsp+0x1be8]
  41413c:	jmp    0x41414d
  41413e:	xchg   ax,ax
  414140:	mov    eax,DWORD PTR [rip+0x1e3a2]        # 0x4324e8
  414146:	mov    rcx,QWORD PTR [rip+0x1e3a3]        # 0x4324f0
  41414d:	lea    edx,[rbp+rax*1+0x0]
  414151:	add    rbx,0x8
  414155:	add    ebp,0x1
  414158:	call   0x416670
  41415d:	mov    QWORD PTR [rbx-0x8],rax
  414161:	cmp    DWORD PTR [rip+0x1e379],ebp        # 0x4324e0
  414167:	jg     0x414140
  414169:	mov    rax,QWORD PTR [r12-0x20]
  41416e:	mov    rdx,QWORD PTR [rsp+0x88]
  414176:	mov    r8d,0x2008
  41417c:	mov    ebp,DWORD PTR [rip+0x1e366]        # 0x4324e8
  414182:	mov    r14,QWORD PTR [rip+0x1e367]        # 0x4324f0
  414189:	mov    DWORD PTR [rsp+0x1be0],edi
  414190:	lea    rcx,[rax+0x88]
  414197:	call   0x41dbc0
  41419c:	mov    rax,QWORD PTR [r12-0x20]
  4141a1:	mov    edx,ebp
  4141a3:	mov    rcx,r14
  4141a6:	mov    QWORD PTR [rax+0x50],0x0
  4141ae:	mov    rax,QWORD PTR [r12-0x20]
  4141b3:	mov    DWORD PTR [rax+0x8],0x66
  4141ba:	call   0x416630
  4141bf:	jmp    0x412500
  4141c4:	mov    eax,DWORD PTR [r12-0x40]
  4141c9:	mov    rdx,QWORD PTR [r12]
  4141cd:	mov    rcx,QWORD PTR [rip+0x1e31c]        # 0x4324f0
  4141d4:	mov    DWORD PTR [rsp+0xb0],eax
  4141db:	call   0x416750
  4141e0:	jmp    0x412500
  4141e5:	mov    rcx,QWORD PTR [rip+0x1e304]        # 0x4324f0
  4141ec:	test   rcx,rcx
  4141ef:	je     0x4143f7
  4141f5:	mov    eax,DWORD PTR [rcx+0x4]
  4141f8:	mov    rdx,QWORD PTR [r12]
  4141fc:	mov    DWORD PTR [rsp+0xb0],eax
  414203:	call   0x416750
  414208:	jmp    0x412500
  41420d:	jmp    0x41420d
  41420f:	nop
  414210:	mov    rcx,QWORD PTR [rsp+0xa0]
  414218:	cmp    rcx,QWORD PTR [rsp+0x68]
  41421d:	je     0x414224
  41421f:	call   0x41dc08
  414224:	mov    rcx,QWORD PTR [rsp+0xa8]
  41422c:	call   0x41dbc8
  414231:	test   rax,rax
  414234:	mov    QWORD PTR [rsp+0xa0],rax
  41423c:	je     0x4143a4
  414242:	mov    rcx,QWORD PTR [rsp+0x40]
  414247:	mov    rdx,QWORD PTR [rsp+0x38]
  41424c:	mov    r9d,ebp
  41424f:	mov    r8,r13
  414252:	call   0x40ec40
  414257:	mov    rcx,QWORD PTR [rsp+0xa0]
  41425f:	jmp    0x4128b3
  414264:	mov    r15,r14
  414267:	xor    ebx,ebx
  414269:	mov    esi,0x1
  41426e:	jmp    0x412777
  414273:	subsd  xmm0,QWORD PTR [rip+0x1523d]        # 0x4294b8
  41427b:	movabs rdx,0x8000000000000000
  414285:	cvttsd2si rax,xmm0
  41428a:	xor    rax,rdx
  41428d:	jmp    0x4124f4
  414292:	mov    edx,DWORD PTR [rip+0x1e250]        # 0x4324e8
  414298:	mov    rcx,QWORD PTR [rip+0x1e251]        # 0x4324f0
  41429f:	call   0x416630
  4142a4:	jmp    0x412500
  4142a9:	movapd xmm0,xmm1
  4142ad:	movabs rdx,0x8000000000000000
  4142b7:	subsd  xmm0,QWORD PTR [rip+0x151f9]        # 0x4294b8
  4142bf:	cvttsd2si rax,xmm0
  4142c4:	xor    rax,rdx
  4142c7:	jmp    0x4124b1
  4142cc:	mov    rdx,QWORD PTR [r12]
  4142d0:	call   0x416750
  4142d5:	jmp    0x412500
  4142da:	mov    rax,QWORD PTR [r12-0x60]
  4142df:	mov    DWORD PTR [rax+0x8],0x68
  4142e6:	mov    rax,QWORD PTR [r12-0x60]
  4142eb:	mov    DWORD PTR [rax+0xc],0x10
  4142f2:	mov    rax,QWORD PTR [r12-0x60]
  4142f7:	mov    QWORD PTR [rax+0x50],0x0
  4142ff:	mov    rax,QWORD PTR [r12-0x60]
  414304:	mov    DWORD PTR [rax+0x5c],0x10
  41430b:	mov    rbx,QWORD PTR [r12-0x60]
  414310:	call   0x416500
  414315:	mov    QWORD PTR [rbx+0x30],rax
  414319:	mov    ebx,DWORD PTR [rip+0x1e1c9]        # 0x4324e8
  41431f:	cmp    ebx,DWORD PTR [rip+0x1e1bf]        # 0x4324e4
  414325:	jge    0x4143ce
  41432b:	mov    rcx,QWORD PTR [rip+0x1e1be]        # 0x4324f0
  414332:	mov    edx,ebx
  414334:	add    ebx,0x1
  414337:	call   0x416670
  41433c:	mov    rdx,QWORD PTR [r12-0x60]
  414341:	mov    QWORD PTR [rax+0x20],rdx
  414345:	mov    rdx,QWORD PTR [r12-0x60]
  41434a:	mov    rcx,QWORD PTR [rdx+0x30]
  41434e:	mov    rdx,rax
  414351:	call   0x416750
  414356:	cmp    DWORD PTR [rip+0x1e188],ebx        # 0x4324e4
  41435c:	jg     0x41432b
  41435e:	mov    edx,DWORD PTR [rip+0x1e184]        # 0x4324e8
  414364:	mov    rcx,QWORD PTR [rip+0x1e185]        # 0x4324f0
  41436b:	call   0x416630
  414370:	jmp    0x412500
  414375:	lea    rcx,[rsp+0xb0]
  41437d:	mov    edx,0x9
  414382:	call   0x40f220
  414387:	mov    rax,QWORD PTR [rsp+0xb8]
  41438f:	mov    QWORD PTR [rsp+0x38],rax
  414394:	mov    eax,DWORD PTR [rsp+0xc8]
  41439b:	mov    DWORD PTR [rsp+0x40],eax
  41439f:	jmp    0x412500
  4143a4:	mov    rax,QWORD PTR [rsp+0x68]
  4143a9:	lea    rcx,[rip+0xf1cc]        # 0x42357c
  4143b0:	mov    QWORD PTR [rsp+0xa8],0x80
  4143bc:	mov    QWORD PTR [rsp+0xa0],rax
  4143c4:	call   0x40f1a0
  4143c9:	jmp    0x4128c9
  4143ce:	mov    edx,ebx
  4143d0:	jmp    0x414364
  4143d2:	mov    rdx,QWORD PTR [rbx+0x10]
  4143d6:	lea    rcx,[rip+0xfefb]        # 0x4242d8
  4143dd:	call   0x40b3d0
  4143e2:	mov    rdx,QWORD PTR [rbx+0x10]
  4143e6:	lea    rcx,[rip+0xff13]        # 0x424300
  4143ed:	call   0x40f1a0
  4143f2:	jmp    0x412500
  4143f7:	xor    eax,eax
  4143f9:	jmp    0x4141f8
  4143fe:	mov    edx,ebx
  414400:	jmp    0x41429f
  414405:	xor    eax,eax
  414407:	jmp    0x413f40
  41440c:	xor    eax,eax
  41440e:	jmp    0x413d39
  414413:	mov    rax,QWORD PTR [r12]
  414417:	lea    rcx,[rip+0xff32]        # 0x424350
  41441e:	mov    rdx,QWORD PTR [rax+0x10]
  414422:	call   0x40f1a0
  414427:	jmp    0x413eec
  41442c:	mov    rdx,rax
  41442f:	mov    rcx,rax
  414432:	pxor   xmm0,xmm0
  414436:	shr    rdx,1
  414439:	and    ecx,0x1
  41443c:	or     rdx,rcx
  41443f:	cvtsi2sd xmm0,rdx
  414444:	addsd  xmm0,xmm0
  414448:	jmp    0x4124c3
  41444d:	xor    eax,eax
  41444f:	jmp    0x4140cf
  414454:	mov    rax,QWORD PTR [r12-0x20]
  414459:	lea    rcx,[rip+0x100ee]        # 0x42454e
  414460:	mov    edi,0x3ff
  414465:	mov    rdx,QWORD PTR [rax+0x10]
  414469:	call   0x40f1a0
  41446e:	mov    eax,DWORD PTR [rip+0x1e074]        # 0x4324e8
  414474:	mov    DWORD PTR [rip+0x1e062],0x3ff        # 0x4324e0
  41447e:	mov    r14,QWORD PTR [rip+0x1e06b]        # 0x4324f0
  414485:	lea    edx,[rax+0x3ff]
  41448b:	mov    DWORD PTR [rip+0x1e053],edx        # 0x4324e4
  414491:	jmp    0x413063
  414496:	xor    edi,edi
  414498:	jmp    0x413041
  41449d:	mov    DWORD PTR [rbx+0x8],0x68
  4144a4:	mov    rcx,rbx
  4144a7:	call   0x40e840
  4144ac:	test   rax,rax
  4144af:	jne    0x41317a
  4144b5:	mov    rax,QWORD PTR [r12]
  4144b9:	lea    rcx,[rip+0x10171]        # 0x424631
  4144c0:	mov    edx,DWORD PTR [rax+0x2128]
  4144c6:	mov    r8,QWORD PTR [rax+0x10]
  4144ca:	call   0x40b3d0
  4144cf:	jmp    0x4137b2
  4144d4:	mov    rdx,QWORD PTR [rax+0x10]
  4144d8:	lea    rcx,[rip+0x10129]        # 0x424608
  4144df:	call   0x40b3d0
  4144e4:	jmp    0x4137b2
  4144e9:	mov    rdx,QWORD PTR [rax+0x10]
  4144ed:	lea    rcx,[rip+0x100e4]        # 0x4245d8
  4144f4:	call   0x40b3d0
  4144f9:	jmp    0x4137b2
  4144fe:	lea    rcx,[rip+0x100a3]        # 0x4245a8
  414505:	call   0x40b3d0
  41450a:	jmp    0x4137b2
  41450f:	mov    rdx,QWORD PTR [rcx+0x10]
  414513:	lea    rcx,[rip+0x10156]        # 0x424670
  41451a:	call   0x40b3d0
  41451f:	jmp    0x4137b2
  414524:	mov    DWORD PTR [rsp+0x20],0x0
  41452c:	mov    r9,QWORD PTR [r12]
  414530:	xor    r8d,r8d
  414533:	call   0x40f0d0
  414538:	mov    QWORD PTR [rsp+0xb0],rax
  414540:	jmp    0x412500
  414545:	xor    eax,eax
  414547:	jmp    0x412fde
  41454c:	xor    eax,eax
  41454e:	jmp    0x413017
  414553:	xor    eax,eax
  414555:	jmp    0x413cd0
  41455a:	xor    eax,eax
  41455c:	jmp    0x413b1d
  414561:	lea    rcx,[rip+0xff18]        # 0x424480
  414568:	jmp    0x414505
  41456a:	xor    eax,eax
  41456c:	jmp    0x413a91
  414571:	lea    rcx,[rip+0xff28]        # 0x4244a0
  414578:	call   0x40f1a0
  41457d:	movsd  xmm1,QWORD PTR [rip+0x1f343]        # 0x4338c8
  414585:	jmp    0x412490
  41458a:	mov    edx,edi
  41458c:	jmp    0x413e63
  414591:	xor    eax,eax
  414593:	jmp    0x413dcd
  414598:	mov    rax,QWORD PTR [r12]
  41459c:	lea    rcx,[rip+0xff5d]        # 0x424500
  4145a3:	mov    rdx,QWORD PTR [rax+0x10]
  4145a7:	call   0x40f1a0
  4145ac:	jmp    0x414072
  4145b1:	lea    rcx,[rip+0xff0a]        # 0x4244c2
  4145b8:	call   0x40f1a0
  4145bd:	movsd  xmm1,QWORD PTR [rip+0x1f303]        # 0x4338c8
  4145c5:	jmp    0x41249e
  4145ca:	mov    rax,QWORD PTR [r12-0x20]
  4145cf:	lea    rcx,[rip+0xff78]        # 0x42454e
  4145d6:	mov    edi,0x3ff
  4145db:	mov    rdx,QWORD PTR [rax+0x10]
  4145df:	call   0x40f1a0
  4145e4:	mov    eax,DWORD PTR [rip+0x1defe]        # 0x4324e8
  4145ea:	mov    DWORD PTR [rip+0x1deec],0x3ff        # 0x4324e0
  4145f4:	mov    r14,QWORD PTR [rip+0x1def5]        # 0x4324f0
  4145fb:	lea    edx,[rax+0x3ff]
  414601:	mov    DWORD PTR [rip+0x1dedd],edx        # 0x4324e4
  414607:	jmp    0x41411f
  41460c:	xor    edi,edi
  41460e:	jmp    0x4140ef
  414613:	xor    eax,eax
  414615:	jmp    0x4134d0
  41461a:	mov    rax,QWORD PTR [r12]
  41461e:	lea    rcx,[rip+0xff4b]        # 0x424570
  414625:	mov    rdx,QWORD PTR [rax+0x10]
  414629:	call   0x40b3d0
  41462e:	jmp    0x4137b2
  414633:	mov    rdx,QWORD PTR [rcx+0x10]
  414637:	lea    rcx,[rip+0x10010]        # 0x42464e
  41463e:	call   0x40b3d0
  414643:	jmp    0x4137b2
  414648:	xor    eax,eax
  41464a:	jmp    0x4137f9
  41464f:	nop
  414650:	push   rbx
  414651:	sub    rsp,0x20
  414655:	mov    edx,0x20
  41465a:	lea    ebx,[rcx+0x1]
  41465d:	lea    rcx,[rip+0x1de9c]        # 0x432500
  414664:	movsxd rbx,ebx
  414667:	mov    r8,rbx
  41466a:	call   0x41dbb0
  41466f:	lea    rax,[rip+0x1de8a]        # 0x432500
  414676:	mov    BYTE PTR [rax+rbx*1],0x0
  41467a:	add    rsp,0x20
  41467e:	pop    rbx
  41467f:	ret    
  414680:	push   r12
  414682:	push   rbp
  414683:	push   rdi
  414684:	push   rsi
  414685:	push   rbx
  414686:	sub    rsp,0x60
  41468a:	test   rcx,rcx
  41468d:	mov    rsi,rdx
  414690:	je     0x41499f
  414696:	mov    rax,QWORD PTR [rcx+0x10]
  41469a:	mov    rdx,QWORD PTR [rcx+0x20]
  41469e:	test   eax,eax
  4146a0:	je     0x414786
  4146a6:	sub    eax,0x1
  4146a9:	lea    rbx,[rdx+0x8]
  4146ad:	lea    r12,[rip+0x14f08]        # 0x4295bc
  4146b4:	shl    rax,0x5
  4146b8:	lea    rbp,[rsp+0x20]
  4146bd:	lea    rdi,[rdx+rax*1+0x28]
  4146c2:	mov    ecx,DWORD PTR [rbx-0x8]
  4146c5:	cmp    ecx,0x10
  4146c8:	je     0x4147c0
  4146ce:	cmp    ecx,0x6b
  4146d1:	je     0x414791
  4146d7:	cmp    ecx,0xd
  4146da:	je     0x414750
  4146dc:	call   0x415490
  4146e1:	test   eax,eax
  4146e3:	jne    0x4146fa
  4146e5:	mov    r8d,DWORD PTR [rbx-0x8]
  4146e9:	lea    rdx,[rip+0x14ec3]        # 0x4295b3
  4146f0:	cmp    r8d,0x1f
  4146f4:	jne    0x4147d4
  4146fa:	lea    rdx,[rip+0x14dcf]        # 0x4294d0
  414701:	mov    rcx,rsi
  414704:	call   0x416200
  414709:	mov    ecx,DWORD PTR [rbx-0x8]
  41470c:	call   0x415490
  414711:	test   eax,eax
  414713:	jne    0x414732
  414715:	cmp    DWORD PTR [rbx-0x8],0x1f
  414719:	je     0x4147f0
  41471f:	lea    rdx,[rip+0x14db2]        # 0x4294d8
  414726:	lea    rcx,[rip+0x14de0]        # 0x42950d
  41472d:	call   0x406300
  414732:	mov    edx,DWORD PTR [rbx-0x8]
  414735:	cmp    edx,0x69
  414738:	ja     0x41496d
  41473e:	mov    eax,edx
  414740:	movsxd rax,DWORD PTR [r12+rax*4]
  414744:	add    rax,r12
  414747:	jmp    rax
  414749:	nop    DWORD PTR [rax+0x0]
  414750:	lea    rdx,[rip+0x14d76]        # 0x4294cd
  414757:	mov    rcx,rsi
  41475a:	call   0x416200
  41475f:	mov    rcx,QWORD PTR [rbx]
  414762:	mov    rdx,rsi
  414765:	call   0x414680
  41476a:	lea    rdx,[rip+0x14d56]        # 0x4294c7
  414771:	mov    rcx,rsi
  414774:	call   0x416200
  414779:	add    rbx,0x20
  41477d:	cmp    rbx,rdi
  414780:	jne    0x4146c2
  414786:	add    rsp,0x60
  41478a:	pop    rbx
  41478b:	pop    rsi
  41478c:	pop    rdi
  41478d:	pop    rbp
  41478e:	pop    r12
  414790:	ret    
  414791:	lea    rdx,[rip+0x14d31]        # 0x4294c9
  414798:	mov    rcx,rsi
  41479b:	call   0x416200
  4147a0:	mov    rcx,QWORD PTR [rbx]
  4147a3:	mov    rdx,rsi
  4147a6:	call   0x414680
  4147ab:	lea    rdx,[rip+0x14d19]        # 0x4294cb
  4147b2:	mov    rcx,rsi
  4147b5:	call   0x416200
  4147ba:	jmp    0x414779
  4147bc:	nop    DWORD PTR [rax+0x0]
  4147c0:	lea    rdx,[rip+0x14cfe]        # 0x4294c5
  4147c7:	jmp    0x414757
  4147c9:	movsx  r8d,BYTE PTR [rbx]
  4147cd:	lea    rdx,[rip+0x14d64]        # 0x429538
  4147d4:	mov    rcx,rbp
  4147d7:	call   0x41db80
  4147dc:	mov    rdx,rbp
  4147df:	mov    rcx,rsi
  4147e2:	call   0x416200
  4147e7:	jmp    0x414779
  4147e9:	nop    DWORD PTR [rax+0x0]
  4147f0:	lea    rdx,[rip+0x14d5c]        # 0x429553
  4147f7:	mov    rcx,rsi
  4147fa:	call   0x416200
  4147ff:	jmp    0x414779
  414804:	movzx  r8d,WORD PTR [rbx]
  414808:	lea    rdx,[rip+0x14d2e]        # 0x42953d
  41480f:	jmp    0x4147d4
  414811:	mov    r8d,DWORD PTR [rbx]
  414814:	lea    rdx,[rip+0x14d26]        # 0x429541
  41481b:	jmp    0x4147d4
  41481d:	mov    r8,QWORD PTR [rbx]
  414820:	lea    rdx,[rip+0x14d1d]        # 0x429544
  414827:	mov    rcx,rbp
  41482a:	call   0x41db80
  41482f:	mov    rdx,rbp
  414832:	mov    rcx,rsi
  414835:	call   0x416200
  41483a:	jmp    0x414779
  41483f:	mov    r8,QWORD PTR [rbx]
  414842:	lea    rdx,[rip+0x14d00]        # 0x429549
  414849:	jmp    0x414827
  41484b:	lea    rdx,[rip+0x14cfc]        # 0x42954e
  414852:	mov    rcx,rsi
  414855:	call   0x416200
  41485a:	mov    rdx,QWORD PTR [rbx+0x8]
  41485e:	mov    rcx,rsi
  414861:	call   0x416200
  414866:	lea    rdx,[rip+0x14ce1]        # 0x42954e
  41486d:	mov    rcx,rsi
  414870:	call   0x416200
  414875:	jmp    0x414779
  41487a:	lea    rdx,[rip+0x14ccf]        # 0x429550
  414881:	mov    rcx,rsi
  414884:	call   0x416200
  414889:	mov    rdx,QWORD PTR [rbx+0x8]
  41488d:	mov    rcx,rsi
  414890:	call   0x416200
  414895:	jmp    0x414779
  41489a:	mov    rax,QWORD PTR [rbx]
  41489d:	mov    rcx,rbp
  4148a0:	mov    rdx,QWORD PTR [rax+0x18]
  4148a4:	call   0x41db58
  4148a9:	mov    rdx,rbp
  4148ac:	mov    rcx,rsi
  4148af:	call   0x416200
  4148b4:	jmp    0x414779
  4148b9:	movsx  r8d,WORD PTR [rbx]
  4148bd:	lea    rdx,[rip+0x14c66]        # 0x42952a
  4148c4:	jmp    0x4147d4
  4148c9:	mov    r8d,DWORD PTR [rbx]
  4148cc:	lea    rdx,[rip+0x14c5b]        # 0x42952e
  4148d3:	jmp    0x4147d4
  4148d8:	pxor   xmm0,xmm0
  4148dc:	lea    rdx,[rip+0x14c4e]        # 0x429531
  4148e3:	cvtss2sd xmm0,DWORD PTR [rbx]
  4148e7:	movapd xmm2,xmm0
  4148eb:	movq   r8,xmm0
  4148f0:	mov    rcx,rbp
  4148f3:	call   0x41db80
  4148f8:	mov    rdx,rbp
  4148fb:	mov    rcx,rsi
  4148fe:	call   0x416200
  414903:	jmp    0x414779
  414908:	movsd  xmm0,QWORD PTR [rbx]
  41490c:	lea    rdx,[rip+0x14c21]        # 0x429534
  414913:	movapd xmm2,xmm0
  414917:	movq   r8,xmm0
  41491c:	jmp    0x4148f0
  41491e:	movsx  r8d,BYTE PTR [rbx]
  414922:	lea    rdx,[rip+0x14bfc]        # 0x429525
  414929:	jmp    0x4147d4
  41492e:	lea    rdx,[rip+0x14bee]        # 0x429523
  414935:	mov    rcx,rsi
  414938:	call   0x416200
  41493d:	movsx  ecx,BYTE PTR [rbx]
  414940:	mov    r8d,0x27
  414946:	mov    rdx,rbp
  414949:	call   0x406410
  41494e:	mov    rdx,rbp
  414951:	mov    rcx,rsi
  414954:	call   0x416200
  414959:	lea    rdx,[rip+0x14bc3]        # 0x429523
  414960:	mov    rcx,rsi
  414963:	call   0x416200
  414968:	jmp    0x414779
  41496d:	lea    rcx,[rip+0x14be4]        # 0x429558
  414974:	call   0x406300
  414979:	test   eax,eax
  41497b:	jne    0x414779
  414981:	lea    rdx,[rip+0x14bef]        # 0x429577
  414988:	lea    rcx,[rip+0x14bf1]        # 0x429580
  41498f:	mov    r8d,0x9e
  414995:	call   0x41da30
  41499a:	jmp    0x414779
  41499f:	lea    rdx,[rip+0x14b1a]        # 0x4294c0
  4149a6:	mov    rcx,rsi
  4149a9:	call   0x416200
  4149ae:	jmp    0x414786
  4149b3:	nop    DWORD PTR [rax]
  4149b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149c0:	push   rbp
  4149c1:	push   rdi
  4149c2:	push   rsi
  4149c3:	push   rbx
  4149c4:	sub    rsp,0x28
  4149c8:	mov    rbp,rcx
  4149cb:	mov    rdi,rdx
  4149ce:	call   0x415f30
  4149d3:	mov    ecx,0x1
  4149d8:	mov    rbx,rax
  4149db:	call   0x415bb0
  4149e0:	mov    rdx,rbp
  4149e3:	mov    rsi,rax
  4149e6:	mov    rcx,rax
  4149e9:	call   0x415c40
  4149ee:	mov    rdx,rbx
  4149f1:	mov    rcx,rsi
  4149f4:	call   0x414680
  4149f9:	test   rbx,rbx
  4149fc:	je     0x414a40
  4149fe:	mov    rsi,QWORD PTR [rbx+0x10]
  414a02:	lea    rax,[rip+0x14d5b]        # 0x429764
  414a09:	test   rsi,rsi
  414a0c:	cmove  rsi,rax
  414a10:	call   QWORD PTR [rip+0x1fcc2]        # 0x4346d8
  414a16:	lea    rdx,[rip+0x14d48]        # 0x429765
  414a1d:	lea    rcx,[rax+0x60]
  414a21:	mov    r9,rsi
  414a24:	mov    r8,rdi
  414a27:	call   0x41dc28
  414a2c:	mov    rcx,rbx
  414a2f:	add    rsp,0x28
  414a33:	pop    rbx
  414a34:	pop    rsi
  414a35:	pop    rdi
  414a36:	pop    rbp
  414a37:	jmp    0x416010
  414a3c:	nop    DWORD PTR [rax+0x0]
  414a40:	lea    rsi,[rip+0x14d1d]        # 0x429764
  414a47:	jmp    0x414a10
  414a49:	nop    DWORD PTR [rax+0x0]
  414a50:	push   rdi
  414a51:	push   rsi
  414a52:	push   rbx
  414a53:	sub    rsp,0x20
  414a57:	mov    rsi,rcx
  414a5a:	mov    rdi,rdx
  414a5d:	call   0x415f30
  414a62:	mov    rcx,rsi
  414a65:	mov    rbx,rax
  414a68:	mov    rdx,rax
  414a6b:	call   0x414680
  414a70:	test   rbx,rbx
  414a73:	je     0x414ab2
  414a75:	mov    rsi,QWORD PTR [rbx+0x10]
  414a79:	lea    rax,[rip+0x14ce4]        # 0x429764
  414a80:	test   rsi,rsi
  414a83:	cmove  rsi,rax
  414a87:	call   QWORD PTR [rip+0x1fc4b]        # 0x4346d8
  414a8d:	lea    rdx,[rip+0x14cd1]        # 0x429765
  414a94:	lea    rcx,[rax+0x60]
  414a98:	mov    r9,rsi
  414a9b:	mov    r8,rdi
  414a9e:	call   0x41dc28
  414aa3:	mov    rcx,rbx
  414aa6:	add    rsp,0x20
  414aaa:	pop    rbx
  414aab:	pop    rsi
  414aac:	pop    rdi
  414aad:	jmp    0x416010
  414ab2:	lea    rsi,[rip+0x14cab]        # 0x429764
  414ab9:	jmp    0x414a87
  414abb:	nop    DWORD PTR [rax+rax*1+0x0]
  414ac0:	push   r12
  414ac2:	push   rbp
  414ac3:	push   rdi
  414ac4:	push   rsi
  414ac5:	push   rbx
  414ac6:	sub    rsp,0x30
  414aca:	mov    rax,QWORD PTR [rip+0x16bef]        # 0x42b6c0
  414ad1:	cmp    DWORD PTR [rax],0x1
  414ad4:	jle    0x414bb0
  414ada:	test   rcx,rcx
  414add:	mov    rdi,rcx
  414ae0:	je     0x414bc0
  414ae6:	mov    rdx,QWORD PTR [rcx+0x10]
  414aea:	lea    rcx,[rip+0x14c80]        # 0x429771
  414af1:	call   0x406280
  414af6:	mov    rcx,QWORD PTR [rdi+0x30]
  414afa:	test   rcx,rcx
  414afd:	je     0x414b90
  414b03:	xor    ebx,ebx
  414b05:	lea    r12,[rip+0x14c61]        # 0x42976d
  414b0c:	lea    rbp,[rip+0x14c51]        # 0x429764
  414b13:	jmp    0x414b4d
  414b15:	mov    ecx,DWORD PTR [rsi+0xc]
  414b18:	call   0x4156c0
  414b1d:	mov    r9,rax
  414b20:	mov    eax,DWORD PTR [rsi+0x2110]
  414b26:	mov    r8,QWORD PTR [rsi+0x10]
  414b2a:	lea    rcx,[rip+0x14c4c]        # 0x42977d
  414b31:	mov    edx,ebx
  414b33:	test   eax,eax
  414b35:	mov    rax,rbp
  414b38:	cmovne rax,r12
  414b3c:	add    ebx,0x1
  414b3f:	mov    QWORD PTR [rsp+0x20],rax
  414b44:	call   0x406280
  414b49:	mov    rcx,QWORD PTR [rdi+0x30]
  414b4d:	test   rcx,rcx
  414b50:	je     0x414b80
  414b52:	mov    eax,DWORD PTR [rcx+0x4]
  414b55:	cmp    ebx,eax
  414b57:	jge    0x414b90
  414b59:	mov    edx,ebx
  414b5b:	call   0x416670
  414b60:	mov    ecx,DWORD PTR [rax+0x8]
  414b63:	mov    rsi,rax
  414b66:	mov    eax,ecx
  414b68:	and    eax,0xfffffffb
  414b6b:	cmp    eax,0x68
  414b6e:	je     0x414b15
  414b70:	call   0x4156c0
  414b75:	mov    r9,rax
  414b78:	jmp    0x414b20
  414b7a:	nop    WORD PTR [rax+rax*1+0x0]
  414b80:	xor    eax,eax
  414b82:	cmp    ebx,eax
  414b84:	jl     0x414b59
  414b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b90:	lea    rcx,[rip+0x14bfa]        # 0x429791
  414b97:	add    rsp,0x30
  414b9b:	pop    rbx
  414b9c:	pop    rsi
  414b9d:	pop    rdi
  414b9e:	pop    rbp
  414b9f:	pop    r12
  414ba1:	jmp    0x406280
  414ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414bb0:	add    rsp,0x30
  414bb4:	pop    rbx
  414bb5:	pop    rsi
  414bb6:	pop    rdi
  414bb7:	pop    rbp
  414bb8:	pop    r12
  414bba:	ret    
  414bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  414bc0:	lea    rdx,[rip+0x14bcd]        # 0x429794
  414bc7:	lea    rcx,[rip+0x14ba3]        # 0x429771
  414bce:	call   0x406280
  414bd3:	jmp    0x414b90
  414bd5:	nop
  414bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414be0:	push   rdi
  414be1:	push   rsi
  414be2:	push   rbx
  414be3:	sub    rsp,0x40
  414be7:	movaps XMMWORD PTR [rsp+0x30],xmm6
  414bec:	cmp    DWORD PTR [rcx],0x69
  414bef:	ja     0x414ee0
  414bf5:	mov    edx,DWORD PTR [rcx]
  414bf7:	lea    rax,[rip+0x14bc6]        # 0x4297c4
  414bfe:	movsxd rdx,DWORD PTR [rax+rdx*4]
  414c02:	add    rax,rdx
  414c05:	jmp    rax
  414c07:	nop    WORD PTR [rax+rax*1+0x0]
  414c10:	mov    QWORD PTR [rsp+0x28],rcx
  414c15:	mov    rbx,QWORD PTR [rip+0x1fabc]        # 0x4346d8
  414c1c:	call   rbx
  414c1e:	mov    rcx,QWORD PTR [rsp+0x28]
  414c23:	lea    rdx,[rax+0x60]
  414c27:	mov    rax,QWORD PTR [rcx+0x8]
  414c2b:	test   rax,rax
  414c2e:	je     0x414f54
  414c34:	mov    rcx,QWORD PTR [rax+0x10]
  414c38:	call   0x41dc18
  414c3d:	nop    DWORD PTR [rax]
  414c40:	call   rbx
  414c42:	nop
  414c43:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  414c48:	lea    rcx,[rax+0x60]
  414c4c:	add    rsp,0x40
  414c50:	pop    rbx
  414c51:	pop    rsi
  414c52:	pop    rdi
  414c53:	jmp    0x41dc38
  414c58:	nop    DWORD PTR [rax+rax*1+0x0]
  414c60:	movsx  esi,BYTE PTR [rcx+0x8]
  414c64:	mov    rbx,QWORD PTR [rip+0x1fa6d]        # 0x4346d8
  414c6b:	call   rbx
  414c6d:	lea    rdx,[rip+0x148b1]        # 0x429525
  414c74:	lea    rcx,[rax+0x60]
  414c78:	mov    r8d,esi
  414c7b:	call   0x41dc28
  414c80:	jmp    0x414c40
  414c82:	movsx  esi,BYTE PTR [rcx+0x8]
  414c86:	mov    rbx,QWORD PTR [rip+0x1fa4b]        # 0x4346d8
  414c8d:	call   rbx
  414c8f:	lea    rdx,[rip+0x14b1c]        # 0x4297b2
  414c96:	lea    rcx,[rax+0x60]
  414c9a:	mov    r8d,esi
  414c9d:	call   0x41dc28
  414ca2:	jmp    0x414c40
  414ca4:	movsx  esi,WORD PTR [rcx+0x8]
  414ca8:	mov    rbx,QWORD PTR [rip+0x1fa29]        # 0x4346d8
  414caf:	call   rbx
  414cb1:	lea    rdx,[rip+0x14872]        # 0x42952a
  414cb8:	lea    rcx,[rax+0x60]
  414cbc:	mov    r8d,esi
  414cbf:	call   0x41dc28
  414cc4:	jmp    0x414c40
  414cc9:	nop    DWORD PTR [rax+0x0]
  414cd0:	mov    esi,DWORD PTR [rcx+0x8]
  414cd3:	mov    rbx,QWORD PTR [rip+0x1f9fe]        # 0x4346d8
  414cda:	call   rbx
  414cdc:	lea    rdx,[rip+0x1484b]        # 0x42952e
  414ce3:	lea    rcx,[rax+0x60]
  414ce7:	mov    r8d,esi
  414cea:	call   0x41dc28
  414cef:	jmp    0x414c40
  414cf4:	pxor   xmm6,xmm6
  414cf8:	cvtss2sd xmm6,DWORD PTR [rcx+0x8]
  414cfd:	mov    rbx,QWORD PTR [rip+0x1f9d4]        # 0x4346d8
  414d04:	call   rbx
  414d06:	movapd xmm2,xmm6
  414d0a:	lea    rcx,[rax+0x60]
  414d0e:	movq   r8,xmm6
  414d13:	lea    rdx,[rip+0x14817]        # 0x429531
  414d1a:	call   0x41dc28
  414d1f:	jmp    0x414c40
  414d24:	movsd  xmm6,QWORD PTR [rcx+0x8]
  414d29:	jmp    0x414cfd
  414d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  414d30:	movzx  esi,BYTE PTR [rcx+0x8]
  414d34:	mov    rbx,QWORD PTR [rip+0x1f99d]        # 0x4346d8
  414d3b:	call   rbx
  414d3d:	lea    rdx,[rip+0x147f4]        # 0x429538
  414d44:	lea    rcx,[rax+0x60]
  414d48:	mov    r8d,esi
  414d4b:	call   0x41dc28
  414d50:	jmp    0x414c40
  414d55:	movzx  esi,WORD PTR [rcx+0x8]
  414d59:	mov    rbx,QWORD PTR [rip+0x1f978]        # 0x4346d8
  414d60:	call   rbx
  414d62:	lea    rdx,[rip+0x147d4]        # 0x42953d
  414d69:	lea    rcx,[rax+0x60]
  414d6d:	mov    r8d,esi
  414d70:	call   0x41dc28
  414d75:	jmp    0x414c40
  414d7a:	nop    WORD PTR [rax+rax*1+0x0]
  414d80:	mov    esi,DWORD PTR [rcx+0x8]
  414d83:	mov    rbx,QWORD PTR [rip+0x1f94e]        # 0x4346d8
  414d8a:	call   rbx
  414d8c:	lea    rdx,[rip+0x147ae]        # 0x429541
  414d93:	lea    rcx,[rax+0x60]
  414d97:	mov    r8d,esi
  414d9a:	call   0x41dc28
  414d9f:	jmp    0x414c40
  414da4:	mov    rsi,QWORD PTR [rcx+0x8]
  414da8:	mov    rbx,QWORD PTR [rip+0x1f929]        # 0x4346d8
  414daf:	call   rbx
  414db1:	lea    rdx,[rip+0x1478c]        # 0x429544
  414db8:	lea    rcx,[rax+0x60]
  414dbc:	mov    r8,rsi
  414dbf:	call   0x41dc28
  414dc4:	jmp    0x414c40
  414dc9:	nop    DWORD PTR [rax+0x0]
  414dd0:	mov    rsi,QWORD PTR [rcx+0x8]
  414dd4:	mov    rbx,QWORD PTR [rip+0x1f8fd]        # 0x4346d8
  414ddb:	call   rbx
  414ddd:	lea    rdx,[rip+0x14765]        # 0x429549
  414de4:	lea    rcx,[rax+0x60]
  414de8:	mov    r8,rsi
  414deb:	call   0x41dc28
  414df0:	jmp    0x414c40
  414df5:	mov    edx,DWORD PTR [rcx+0x8]
  414df8:	mov    rbx,QWORD PTR [rip+0x1f8d9]        # 0x4346d8
  414dff:	test   edx,edx
  414e01:	jle    0x414f32
  414e07:	mov    rsi,QWORD PTR [rcx+0x10]
  414e0b:	test   rsi,rsi
  414e0e:	je     0x414f32
  414e14:	call   rbx
  414e16:	lea    rdx,[rip+0x14983]        # 0x4297a0
  414e1d:	lea    rcx,[rax+0x60]
  414e21:	mov    r8,rsi
  414e24:	call   0x41dc28
  414e29:	jmp    0x414c40
  414e2e:	xchg   ax,ax
  414e30:	mov    eax,DWORD PTR [rcx+0x8]
  414e33:	mov    rbx,QWORD PTR [rip+0x1f89e]        # 0x4346d8
  414e3a:	test   eax,eax
  414e3c:	jle    0x414f10
  414e42:	mov    rsi,QWORD PTR [rcx+0x10]
  414e46:	test   rsi,rsi
  414e49:	je     0x414f10
  414e4f:	call   rbx
  414e51:	lea    rdx,[rip+0x14950]        # 0x4297a8
  414e58:	lea    rcx,[rax+0x60]
  414e5c:	mov    r8,rsi
  414e5f:	call   0x41dc28
  414e64:	jmp    0x414c40
  414e69:	nop    DWORD PTR [rax+0x0]
  414e70:	mov    rbx,QWORD PTR [rcx+0x8]
  414e74:	call   0x415f30
  414e79:	mov    rsi,rax
  414e7c:	mov    rdx,rax
  414e7f:	mov    rcx,rbx
  414e82:	call   0x414680
  414e87:	mov    rcx,rsi
  414e8a:	call   0x416430
  414e8f:	mov    rbx,QWORD PTR [rip+0x1f842]        # 0x4346d8
  414e96:	mov    rdi,rax
  414e99:	call   rbx
  414e9b:	lea    rdx,[rip+0x148f9]        # 0x42979b
  414ea2:	lea    rcx,[rax+0x60]
  414ea6:	mov    r8,rdi
  414ea9:	call   0x41dc28
  414eae:	mov    rcx,rsi
  414eb1:	call   0x416010
  414eb6:	jmp    0x414c40
  414ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  414ec0:	mov    rbx,QWORD PTR [rip+0x1f811]        # 0x4346d8
  414ec7:	call   rbx
  414ec9:	lea    rdx,[rax+0x60]
  414ecd:	mov    ecx,0x5f
  414ed2:	call   0x41dc20
  414ed7:	jmp    0x414c40
  414edc:	nop    DWORD PTR [rax+0x0]
  414ee0:	mov    rbx,QWORD PTR [rip+0x1f7f1]        # 0x4346d8
  414ee7:	call   rbx
  414ee9:	lea    rcx,[rip+0x148c7]        # 0x4297b7
  414ef0:	lea    r9,[rax+0x60]
  414ef4:	mov    r8d,0x9
  414efa:	mov    edx,0x1
  414eff:	call   0x41dbf8
  414f04:	jmp    0x414c40
  414f09:	nop    DWORD PTR [rax+0x0]
  414f10:	call   rbx
  414f12:	lea    rcx,[rip+0x14894]        # 0x4297ad
  414f19:	lea    r9,[rax+0x60]
  414f1d:	mov    r8d,0x4
  414f23:	mov    edx,0x1
  414f28:	call   0x41dbf8
  414f2d:	jmp    0x414c40
  414f32:	call   rbx
  414f34:	lea    rcx,[rip+0x1486a]        # 0x4297a5
  414f3b:	lea    r9,[rax+0x60]
  414f3f:	mov    r8d,0x2
  414f45:	mov    edx,0x1
  414f4a:	call   0x41dbf8
  414f4f:	jmp    0x414c40
  414f54:	lea    rcx,[rip+0x1483e]        # 0x429799
  414f5b:	jmp    0x414c38
  414f60:	push   r15
  414f62:	push   r14
  414f64:	push   r13
  414f66:	push   r12
  414f68:	push   rbp
  414f69:	push   rdi
  414f6a:	push   rsi
  414f6b:	push   rbx
  414f6c:	sub    rsp,0x38
  414f70:	mov    eax,DWORD PTR [rcx+0xc]
  414f73:	mov    r13d,DWORD PTR [rcx+0x8]
  414f77:	mov    r14d,0x8
  414f7d:	lea    rbx,[rip+0x147e0]        # 0x429764
  414f84:	mov    rsi,rcx
  414f87:	mov    rdi,QWORD PTR [rip+0x1f74a]        # 0x4346d8
  414f8e:	cmp    eax,0x8
  414f91:	cmovle r14d,eax
  414f95:	cmp    r14d,r13d
  414f98:	cmovle r13d,r14d
  414f9c:	test   rdx,rdx
  414f9f:	cmovne rbx,rdx
  414fa3:	lea    ebp,[r13-0x1]
  414fa7:	call   rdi
  414fa9:	lea    rdx,[rip+0x149bc]        # 0x42996c
  414fb0:	lea    rcx,[rax+0x60]
  414fb4:	mov    r8,rbx
  414fb7:	add    rbp,0x1
  414fbb:	call   0x41dc28
  414fc0:	movsxd rdx,r13d
  414fc3:	shl    rbp,0x5
  414fc7:	mov    rax,rdx
  414fca:	shl    rax,0x5
  414fce:	mov    QWORD PTR [rsp+0x28],rax
  414fd3:	lea    eax,[r14-0x1]
  414fd7:	sub    eax,r13d
  414fda:	lea    r12,[rdx+rax*1+0x1]
  414fdf:	shl    r12,0x5
  414fe3:	mov    ebx,DWORD PTR [rsi+0xc]
  414fe6:	mov    r15d,DWORD PTR [rsi+0x8]
  414fea:	call   rdi
  414fec:	lea    rdx,[rip+0x1497f]        # 0x429972
  414ff3:	lea    rcx,[rax+0x60]
  414ff7:	mov    r9d,ebx
  414ffa:	mov    r8d,r15d
  414ffd:	xor    ebx,ebx
  414fff:	call   0x41dc28
  415004:	test   r13d,r13d
  415007:	jle    0x415034
  415009:	nop    DWORD PTR [rax+0x0]
  415010:	call   rdi
  415012:	lea    rdx,[rax+0x60]
  415016:	mov    ecx,0x20
  41501b:	call   0x41dc20
  415020:	mov    rcx,rbx
  415023:	add    rcx,QWORD PTR [rsi]
  415026:	add    rbx,0x20
  41502a:	call   0x414be0
  41502f:	cmp    rbx,rbp
  415032:	jne    0x415010
  415034:	call   rdi
  415036:	lea    rdx,[rax+0x60]
  41503a:	mov    ecx,0x5e
  41503f:	call   0x41dc20
  415044:	cmp    r14d,r13d
  415047:	mov    rbx,QWORD PTR [rsp+0x28]
  41504c:	jle    0x415074
  41504e:	xchg   ax,ax
  415050:	call   rdi
  415052:	lea    rdx,[rax+0x60]
  415056:	mov    ecx,0x20
  41505b:	call   0x41dc20
  415060:	mov    rcx,rbx
  415063:	add    rcx,QWORD PTR [rsi]
  415066:	add    rbx,0x20
  41506a:	call   0x414be0
  41506f:	cmp    rbx,r12
  415072:	jne    0x415050
  415074:	cmp    r14d,DWORD PTR [rsi+0xc]
  415078:	jl     0x4150d0
  41507a:	call   rdi
  41507c:	lea    rcx,[rip+0x148fb]        # 0x42997e
  415083:	lea    r9,[rax+0x60]
  415087:	mov    r8d,0x3
  41508d:	mov    edx,0x1
  415092:	call   0x41dbf8
  415097:	mov    rsi,QWORD PTR [rsi+0x18]
  41509b:	test   rsi,rsi
  41509e:	jne    0x414fe3
  4150a4:	call   rdi
  4150a6:	lea    rdx,[rax+0x60]
  4150aa:	mov    ecx,0xa
  4150af:	call   0x41dc20
  4150b4:	call   rdi
  4150b6:	lea    rcx,[rax+0x60]
  4150ba:	add    rsp,0x38
  4150be:	pop    rbx
  4150bf:	pop    rsi
  4150c0:	pop    rdi
  4150c1:	pop    rbp
  4150c2:	pop    r12
  4150c4:	pop    r13
  4150c6:	pop    r14
  4150c8:	pop    r15
  4150ca:	jmp    0x41dc38
  4150cf:	nop
  4150d0:	call   rdi
  4150d2:	lea    rcx,[rip+0x148a1]        # 0x42997a
  4150d9:	lea    r9,[rax+0x60]
  4150dd:	mov    r8d,0x3
  4150e3:	mov    edx,0x1
  4150e8:	call   0x41dbf8
  4150ed:	jmp    0x41507a
  4150ef:	nop
  4150f0:	jmp    0x414f60
  4150f5:	nop
  4150f6:	nop
  4150f7:	nop
  4150f8:	nop
  4150f9:	nop
  4150fa:	nop
  4150fb:	nop
  4150fc:	nop
  4150fd:	nop
  4150fe:	nop
  4150ff:	nop
  415100:	push   rdi
  415101:	push   rsi
  415102:	push   rbx
  415103:	sub    rsp,0x20
  415107:	test   rcx,rcx
  41510a:	mov    rdi,rcx
  41510d:	mov    rsi,rdx
  415110:	je     0x415160
  415112:	call   0x41db50
  415117:	test   rsi,rsi
  41511a:	mov    rbx,rax
  41511d:	je     0x41519b
  41511f:	mov    rcx,rsi
  415122:	call   0x41db50
  415127:	lea    ecx,[rbx+rax*1+0x1]
  41512b:	movsxd rcx,ecx
  41512e:	call   0x4063a0
  415133:	mov    rdx,rdi
  415136:	mov    BYTE PTR [rax],0x0
  415139:	mov    rcx,rax
  41513c:	mov    rbx,rax
  41513f:	call   0x41db70
  415144:	mov    rdx,rsi
  415147:	mov    rcx,rbx
  41514a:	call   0x41db70
  41514f:	mov    rax,rbx
  415152:	add    rsp,0x20
  415156:	pop    rbx
  415157:	pop    rsi
  415158:	pop    rdi
  415159:	ret    
  41515a:	nop    WORD PTR [rax+rax*1+0x0]
  415160:	test   rdx,rdx
  415163:	je     0x415180
  415165:	mov    rcx,rdx
  415168:	call   0x41db50
  41516d:	lea    ecx,[rax+0x1]
  415170:	movsxd rcx,ecx
  415173:	call   0x4063a0
  415178:	mov    rbx,rax
  41517b:	mov    BYTE PTR [rax],0x0
  41517e:	jmp    0x415144
  415180:	mov    ecx,0x1
  415185:	call   0x4063a0
  41518a:	mov    rbx,rax
  41518d:	mov    BYTE PTR [rax],0x0
  415190:	mov    rax,rbx
  415193:	add    rsp,0x20
  415197:	pop    rbx
  415198:	pop    rsi
  415199:	pop    rdi
  41519a:	ret    
  41519b:	lea    ecx,[rax+0x1]
  41519e:	movsxd rcx,ecx
  4151a1:	call   0x4063a0
  4151a6:	mov    rdx,rdi
  4151a9:	mov    rcx,rax
  4151ac:	mov    BYTE PTR [rax],0x0
  4151af:	mov    rbx,rax
  4151b2:	call   0x41db70
  4151b7:	jmp    0x41514f
  4151b9:	nop    DWORD PTR [rax+0x0]
  4151c0:	xor    eax,eax
  4151c2:	mov    edx,ecx
  4151c4:	lea    ecx,[rcx-0x30]
  4151c7:	cmp    cl,0x36
  4151ca:	ja     0x415206
  4151cc:	mov    r8d,0x1
  4151d2:	shl    r8,cl
  4151d5:	mov    rcx,r8
  4151d8:	movabs r8,0x7e000000000000
  4151e2:	test   rcx,r8
  4151e5:	jne    0x415200
  4151e7:	test   ecx,0x7e0000
  4151ed:	jne    0x415210
  4151ef:	test   ecx,0x3ff
  4151f5:	je     0x415206
  4151f7:	movsx  edx,dl
  4151fa:	lea    eax,[rdx-0x30]
  4151fd:	ret    
  4151fe:	xchg   ax,ax
  415200:	movsx  edx,dl
  415203:	lea    eax,[rdx-0x57]
  415206:	repz ret 
  415208:	nop    DWORD PTR [rax+rax*1+0x0]
  415210:	movsx  edx,dl
  415213:	lea    eax,[rdx-0x37]
  415216:	ret    
  415217:	nop    WORD PTR [rax+rax*1+0x0]
  415220:	sub    rsp,0x28
  415224:	mov    edx,0x65
  415229:	call   0x41db30
  41522e:	test   rax,rax
  415231:	je     0x415236
  415233:	mov    BYTE PTR [rax],0x64
  415236:	add    rsp,0x28
  41523a:	ret    
  41523b:	nop    DWORD PTR [rax+rax*1+0x0]
  415240:	test   ecx,ecx
  415242:	jle    0x415260
  415244:	mov    eax,ecx
  415246:	mov    edx,0x1
  41524b:	nop    DWORD PTR [rax+rax*1+0x0]
  415250:	add    edx,edx
  415252:	sar    eax,1
  415254:	jne    0x415250
  415256:	add    ecx,ecx
  415258:	xor    eax,eax
  41525a:	cmp    ecx,edx
  41525c:	sete   al
  41525f:	ret    
  415260:	mov    edx,0x1
  415265:	jmp    0x415256
  415267:	nop    WORD PTR [rax+rax*1+0x0]
  415270:	movzx  eax,BYTE PTR [rcx]
  415273:	cmp    al,0x2d
  415275:	jne    0x415287
  415277:	jmp    0x4152e0
  415279:	nop    DWORD PTR [rax+0x0]
  415280:	add    rcx,0x1
  415284:	movzx  eax,BYTE PTR [rcx]
  415287:	lea    edx,[rax-0x30]
  41528a:	cmp    dl,0x9
  41528d:	jbe    0x415280
  41528f:	cmp    al,0x2e
  415291:	je     0x415280
  415293:	movzx  edx,BYTE PTR [rcx-0x1]
  415297:	lea    rax,[rcx-0x1]
  41529b:	cmp    dl,0x2e
  41529e:	je     0x4152d5
  4152a0:	cmp    dl,0x30
  4152a3:	jne    0x4152ae
  4152a5:	sub    rax,0x1
  4152a9:	cmp    BYTE PTR [rax],0x30
  4152ac:	je     0x4152a5
  4152ae:	add    rax,0x1
  4152b2:	cmp    rax,rcx
  4152b5:	jne    0x4152cb
  4152b7:	jmp    0x4152d5
  4152b9:	nop    DWORD PTR [rax+0x0]
  4152c0:	add    rax,0x1
  4152c4:	add    rcx,0x1
  4152c8:	mov    BYTE PTR [rax-0x1],dl
  4152cb:	movzx  edx,BYTE PTR [rcx]
  4152ce:	test   dl,dl
  4152d0:	jne    0x4152c0
  4152d2:	mov    BYTE PTR [rax],0x0
  4152d5:	repz ret 
  4152d7:	nop    WORD PTR [rax+rax*1+0x0]
  4152e0:	movzx  eax,BYTE PTR [rcx+0x1]
  4152e4:	add    rcx,0x1
  4152e8:	jmp    0x415287
  4152ea:	nop    WORD PTR [rax+rax*1+0x0]
  4152f0:	push   rsi
  4152f1:	push   rbx
  4152f2:	sub    rsp,0x28
  4152f6:	test   edx,edx
  4152f8:	jle    0x415316
  4152fa:	lea    eax,[rdx-0x1]
  4152fd:	mov    rbx,rcx
  415300:	lea    rsi,[rcx+rax*8+0x8]
  415305:	mov    rcx,QWORD PTR [rbx]
  415308:	add    rbx,0x8
  41530c:	call   0x41dc08
  415311:	cmp    rbx,rsi
  415314:	jne    0x415305
  415316:	add    rsp,0x28
  41531a:	pop    rbx
  41531b:	pop    rsi
  41531c:	ret    
  41531d:	nop    DWORD PTR [rax]
  415320:	ret    
  415321:	nop    DWORD PTR [rax+rax*1+0x0]
  415326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415330:	xor    eax,eax
  415332:	cmp    ecx,0x10
  415335:	ja     0x415344
  415337:	lea    rax,[rip+0xa242]        # 0x41f580
  41533e:	movsxd rcx,ecx
  415341:	mov    eax,DWORD PTR [rax+rcx*4]
  415344:	repz ret 
  415346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415350:	mov    edx,DWORD PTR [rcx]
  415352:	test   edx,edx
  415354:	jle    0x415388
  415356:	mov    rax,QWORD PTR [rcx+0x8]
  41535a:	cmp    QWORD PTR [rax+0x2100],0x0
  415362:	je     0x415390
  415364:	sub    edx,0x1
  415367:	lea    rax,[rcx+0x10]
  41536b:	lea    rcx,[rcx+rdx*8+0x10]
  415370:	jmp    0x415383
  415372:	mov    rdx,QWORD PTR [rax]
  415375:	add    rax,0x8
  415379:	cmp    QWORD PTR [rdx+0x2100],0x0
  415381:	je     0x415390
  415383:	cmp    rax,rcx
  415386:	jne    0x415372
  415388:	xor    eax,eax
  41538a:	ret    
  41538b:	nop    DWORD PTR [rax+rax*1+0x0]
  415390:	mov    eax,0x1
  415395:	ret    
  415396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4153a0:	mov    edx,DWORD PTR [rcx]
  4153a2:	xor    eax,eax
  4153a4:	test   edx,edx
  4153a6:	jle    0x4153ba
  4153a8:	mov    rax,QWORD PTR [rcx+0x8]
  4153ac:	cmp    QWORD PTR [rax+0x2100],0x0
  4153b4:	sete   al
  4153b7:	movzx  eax,al
  4153ba:	repz ret 
  4153bc:	nop    DWORD PTR [rax+0x0]
  4153c0:	mov    eax,DWORD PTR [rcx]
  4153c2:	test   eax,eax
  4153c4:	jle    0x4153f6
  4153c6:	lea    r9d,[rax-0x1]
  4153ca:	mov    edx,0xffffffff
  4153cf:	xor    eax,eax
  4153d1:	add    r9,0x1
  4153d5:	mov    r8,QWORD PTR [rcx+rax*8+0x8]
  4153da:	cmp    QWORD PTR [r8+0x2100],0x0
  4153e2:	cmove  edx,eax
  4153e5:	add    rax,0x1
  4153e9:	cmp    rax,r9
  4153ec:	jne    0x4153d5
  4153ee:	xor    eax,eax
  4153f0:	test   edx,edx
  4153f2:	setle  al
  4153f5:	ret    
  4153f6:	mov    eax,0x1
  4153fb:	ret    
  4153fc:	nop    DWORD PTR [rax+0x0]
  415400:	mov    edx,DWORD PTR [rcx]
  415402:	test   edx,edx
  415404:	jle    0x415438
  415406:	mov    rax,QWORD PTR [rcx+0x8]
  41540a:	cmp    QWORD PTR [rax+0x2100],0x0
  415412:	je     0x415440
  415414:	sub    edx,0x1
  415417:	lea    rax,[rcx+0x10]
  41541b:	lea    rcx,[rcx+rdx*8+0x10]
  415420:	jmp    0x415433
  415422:	mov    rdx,QWORD PTR [rax]
  415425:	add    rax,0x8
  415429:	cmp    QWORD PTR [rdx+0x2100],0x0
  415431:	je     0x415440
  415433:	cmp    rax,rcx
  415436:	jne    0x415422
  415438:	mov    eax,0x1
  41543d:	ret    
  41543e:	xchg   ax,ax
  415440:	xor    eax,eax
  415442:	ret    
  415443:	nop    DWORD PTR [rax]
  415446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415450:	xor    eax,eax
  415452:	sub    ecx,0x1
  415455:	cmp    ecx,0x5
  415458:	setbe  al
  41545b:	ret    
  41545c:	nop    DWORD PTR [rax+0x0]
  415460:	lea    eax,[rcx-0x1]
  415463:	cmp    eax,0x5
  415466:	setbe  dl
  415469:	cmp    ecx,0xc
  41546c:	sete   al
  41546f:	or     eax,edx
  415471:	movzx  eax,al
  415474:	ret    
  415475:	nop
  415476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415480:	xor    eax,eax
  415482:	sub    ecx,0x1
  415485:	cmp    ecx,0xb
  415488:	setbe  al
  41548b:	ret    
  41548c:	nop    DWORD PTR [rax+0x0]
  415490:	cmp    ecx,0xe
  415493:	sete   dl
  415496:	cmp    ecx,0x69
  415499:	sete   al
  41549c:	sub    ecx,0x1
  41549f:	or     eax,edx
  4154a1:	cmp    ecx,0xb
  4154a4:	setbe  dl
  4154a7:	or     eax,edx
  4154a9:	movzx  eax,al
  4154ac:	ret    
  4154ad:	nop    DWORD PTR [rax]
  4154b0:	push   rsi
  4154b1:	push   rbx
  4154b2:	sub    rsp,0x28
  4154b6:	test   rcx,rcx
  4154b9:	mov    rbx,rcx
  4154bc:	mov    rsi,rdx
  4154bf:	je     0x4154d5
  4154c1:	mov    rdx,rbx
  4154c4:	mov    rcx,rsi
  4154c7:	call   0x416750
  4154cc:	mov    rbx,QWORD PTR [rbx+0x20]
  4154d0:	test   rbx,rbx
  4154d3:	jne    0x4154c1
  4154d5:	add    rsp,0x28
  4154d9:	pop    rbx
  4154da:	pop    rsi
  4154db:	ret    
  4154dc:	nop    DWORD PTR [rax+0x0]
  4154e0:	push   rbp
  4154e1:	push   rdi
  4154e2:	push   rsi
  4154e3:	push   rbx
  4154e4:	sub    rsp,0x28
  4154e8:	test   rcx,rcx
  4154eb:	je     0x415560
  4154ed:	test   rdx,rdx
  4154f0:	mov    esi,DWORD PTR [rcx+0x4]
  4154f3:	je     0x415570
  4154f5:	xor    eax,eax
  4154f7:	cmp    DWORD PTR [rdx+0x4],esi
  4154fa:	je     0x415505
  4154fc:	add    rsp,0x28
  415500:	pop    rbx
  415501:	pop    rsi
  415502:	pop    rdi
  415503:	pop    rbp
  415504:	ret    
  415505:	test   rcx,rcx
  415508:	je     0x415580
  41550a:	test   rdx,rdx
  41550d:	mov    rdi,QWORD PTR [rcx+0x8]
  415511:	je     0x415584
  415513:	mov    rbp,QWORD PTR [rdx+0x8]
  415517:	test   esi,esi
  415519:	jle    0x415567
  41551b:	xor    ebx,ebx
  41551d:	jmp    0x415528
  41551f:	nop
  415520:	add    rbx,0x1
  415524:	cmp    esi,ebx
  415526:	jle    0x415550
  415528:	mov    rax,QWORD PTR [rbp+rbx*8+0x0]
  41552d:	mov    rdx,QWORD PTR [rax+0x10]
  415531:	mov    rax,QWORD PTR [rdi+rbx*8]
  415535:	mov    rcx,QWORD PTR [rax+0x10]
  415539:	call   0x41db60
  41553e:	test   eax,eax
  415540:	je     0x415520
  415542:	xor    eax,eax
  415544:	add    rsp,0x28
  415548:	pop    rbx
  415549:	pop    rsi
  41554a:	pop    rdi
  41554b:	pop    rbp
  41554c:	ret    
  41554d:	nop    DWORD PTR [rax]
  415550:	mov    al,0x1
  415552:	add    rsp,0x28
  415556:	pop    rbx
  415557:	pop    rsi
  415558:	pop    rdi
  415559:	pop    rbp
  41555a:	ret    
  41555b:	nop    DWORD PTR [rax+rax*1+0x0]
  415560:	xor    esi,esi
  415562:	test   rdx,rdx
  415565:	jne    0x4154f5
  415567:	mov    eax,0x1
  41556c:	jmp    0x4154fc
  41556e:	xchg   ax,ax
  415570:	xor    eax,eax
  415572:	test   esi,esi
  415574:	jne    0x4154fc
  415576:	jmp    0x41550a
  415578:	nop    DWORD PTR [rax+rax*1+0x0]
  415580:	xor    edi,edi
  415582:	jmp    0x415513
  415584:	xor    ebp,ebp
  415586:	jmp    0x415517
  415588:	nop    DWORD PTR [rax+rax*1+0x0]
  415590:	push   rdi
  415591:	push   rsi
  415592:	push   rbx
  415593:	sub    rsp,0x20
  415597:	test   rcx,rcx
  41559a:	je     0x4155f0
  41559c:	mov    rsi,rcx
  41559f:	call   0x416500
  4155a4:	mov    edx,DWORD PTR [rsi+0x4]
  4155a7:	mov    rcx,rax
  4155aa:	mov    rdi,rax
  4155ad:	call   0x416570
  4155b2:	mov    eax,DWORD PTR [rsi+0x4]
  4155b5:	test   eax,eax
  4155b7:	jle    0x4155dd
  4155b9:	xor    ebx,ebx
  4155bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4155c0:	mov    edx,ebx
  4155c2:	mov    rcx,rsi
  4155c5:	add    ebx,0x1
  4155c8:	call   0x416670
  4155cd:	mov    rcx,rdi
  4155d0:	mov    rdx,rax
  4155d3:	call   0x416750
  4155d8:	cmp    DWORD PTR [rsi+0x4],ebx
  4155db:	jg     0x4155c0
  4155dd:	mov    rax,rdi
  4155e0:	add    rsp,0x20
  4155e4:	pop    rbx
  4155e5:	pop    rsi
  4155e6:	pop    rdi
  4155e7:	ret    
  4155e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4155f0:	add    rsp,0x20
  4155f4:	pop    rbx
  4155f5:	pop    rsi
  4155f6:	pop    rdi
  4155f7:	jmp    0x416500
  4155fc:	nop    DWORD PTR [rax+0x0]
  415600:	push   rbp
  415601:	push   rdi
  415602:	push   rsi
  415603:	push   rbx
  415604:	sub    rsp,0x28
  415608:	movsxd rbx,DWORD PTR [rip+0x9f31]        # 0x41f540
  41560f:	mov    rsi,rcx
  415612:	cmp    ebx,0xffffffff
  415615:	je     0x415690
  415617:	cmp    ebx,0x64
  41561a:	je     0x415673
  41561c:	lea    rbp,[rip+0x1d2dd]        # 0x432900
  415623:	movsxd rax,ebx
  415626:	mov    rcx,QWORD PTR [rbp+rax*8+0x0]
  41562b:	test   rsi,rsi
  41562e:	mov    eax,0x100
  415633:	cmove  rsi,rax
  415637:	test   rcx,rcx
  41563a:	je     0x415648
  41563c:	call   0x4062e0
  415641:	movsxd rbx,DWORD PTR [rip+0x9ef8]        # 0x41f540
  415648:	mov    rcx,rsi
  41564b:	call   0x4063a0
  415650:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  415655:	movsxd rax,DWORD PTR [rip+0x9ee4]        # 0x41f540
  41565c:	lea    edx,[rax+0x1]
  41565f:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  415664:	mov    DWORD PTR [rip+0x9ed6],edx        # 0x41f540
  41566a:	add    rsp,0x28
  41566e:	pop    rbx
  41566f:	pop    rsi
  415670:	pop    rdi
  415671:	pop    rbp
  415672:	ret    
  415673:	mov    DWORD PTR [rip+0x9ec3],0x0        # 0x41f540
  41567d:	mov    rcx,QWORD PTR [rip+0x1d27c]        # 0x432900
  415684:	xor    ebx,ebx
  415686:	lea    rbp,[rip+0x1d273]        # 0x432900
  41568d:	jmp    0x41562b
  41568f:	nop
  415690:	lea    rbp,[rip+0x1d269]        # 0x432900
  415697:	xor    eax,eax
  415699:	mov    ecx,0x64
  41569e:	test   rsi,rsi
  4156a1:	mov    DWORD PTR [rip+0x9e95],0x0        # 0x41f540
  4156ab:	mov    rdi,rbp
  4156ae:	rep stos QWORD PTR es:[rdi],rax
  4156b1:	jne    0x4156b8
  4156b3:	mov    esi,0x100
  4156b8:	xor    ebx,ebx
  4156ba:	jmp    0x415648
  4156bc:	nop    DWORD PTR [rax+0x0]
  4156c0:	push   rsi
  4156c1:	push   rbx
  4156c2:	sub    rsp,0x28
  4156c6:	cmp    ecx,0x10
  4156c9:	jbe    0x415734
  4156cb:	lea    eax,[rcx-0x64]
  4156ce:	cmp    eax,0x8
  4156d1:	jbe    0x415720
  4156d3:	cmp    ecx,0x1f
  4156d6:	lea    rax,[rip+0x142b3]        # 0x429990
  4156dd:	je     0x41572d
  4156df:	cmp    ecx,0x20
  4156e2:	lea    rax,[rip+0x142af]        # 0x429998
  4156e9:	je     0x41572d
  4156eb:	mov    ebx,ecx
  4156ed:	mov    ecx,0x80
  4156f2:	call   0x415600
  4156f7:	lea    rdx,[rip+0x142a1]        # 0x42999f
  4156fe:	mov    rsi,rax
  415701:	mov    r8d,ebx
  415704:	mov    rcx,rax
  415707:	call   0x41db80
  41570c:	mov    rax,rsi
  41570f:	add    rsp,0x28
  415713:	pop    rbx
  415714:	pop    rsi
  415715:	ret    
  415716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415720:	lea    rdx,[rip+0x9f59]        # 0x41f680
  415727:	cdqe   
  415729:	mov    rax,QWORD PTR [rdx+rax*8]
  41572d:	add    rsp,0x28
  415731:	pop    rbx
  415732:	pop    rsi
  415733:	ret    
  415734:	lea    rax,[rip+0x9fc5]        # 0x41f700
  41573b:	movsxd rcx,ecx
  41573e:	mov    rax,QWORD PTR [rax+rcx*8]
  415742:	add    rsp,0x28
  415746:	pop    rbx
  415747:	pop    rsi
  415748:	ret    
  415749:	nop    DWORD PTR [rax+0x0]
  415750:	push   rsi
  415751:	push   rbx
  415752:	sub    rsp,0x28
  415756:	cmp    ecx,0x10
  415759:	jbe    0x4157b0
  41575b:	cmp    ecx,0x1f
  41575e:	lea    rax,[rip+0x1422b]        # 0x429990
  415765:	je     0x41577c
  415767:	lea    eax,[rcx-0x64]
  41576a:	cmp    eax,0x8
  41576d:	ja     0x415783
  41576f:	lea    rdx,[rip+0x9e8a]        # 0x41f600
  415776:	cdqe   
  415778:	mov    rax,QWORD PTR [rdx+rax*8]
  41577c:	add    rsp,0x28
  415780:	pop    rbx
  415781:	pop    rsi
  415782:	ret    
  415783:	mov    ebx,ecx
  415785:	mov    ecx,0x80
  41578a:	call   0x415600
  41578f:	lea    rdx,[rip+0x14209]        # 0x42999f
  415796:	mov    rsi,rax
  415799:	mov    r8d,ebx
  41579c:	mov    rcx,rax
  41579f:	call   0x41db80
  4157a4:	mov    rax,rsi
  4157a7:	add    rsp,0x28
  4157ab:	pop    rbx
  4157ac:	pop    rsi
  4157ad:	ret    
  4157ae:	xchg   ax,ax
  4157b0:	add    rsp,0x28
  4157b4:	pop    rbx
  4157b5:	pop    rsi
  4157b6:	jmp    0x4156c0
  4157bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4157c0:	push   rsi
  4157c1:	push   rbx
  4157c2:	sub    rsp,0x28
  4157c6:	mov    rbx,rcx
  4157c9:	call   0x41db50
  4157ce:	lea    rcx,[rax+0x1]
  4157d2:	call   0x415600
  4157d7:	mov    rcx,rbx
  4157da:	mov    rsi,rax
  4157dd:	call   0x41db50
  4157e2:	lea    r8,[rax+0x1]
  4157e6:	mov    rdx,rbx
  4157e9:	mov    rcx,rsi
  4157ec:	call   0x41db38
  4157f1:	mov    rax,rsi
  4157f4:	add    rsp,0x28
  4157f8:	pop    rbx
  4157f9:	pop    rsi
  4157fa:	ret    
  4157fb:	nop    DWORD PTR [rax+rax*1+0x0]
  415800:	push   r14
  415802:	push   r13
  415804:	push   r12
  415806:	push   rbp
  415807:	push   rdi
  415808:	push   rsi
  415809:	push   rbx
  41580a:	sub    rsp,0x20
  41580e:	test   rcx,rcx
  415811:	je     0x4158dc
  415817:	mov    r12d,DWORD PTR [rcx+0x4]
  41581b:	mov    rbp,rdx
  41581e:	mov    rdi,rcx
  415821:	cmp    r12d,0x0
  415825:	je     0x4158c0
  41582b:	mov    ebx,0x0
  415830:	mov    esi,0x0
  415835:	jle    0x4158c0
  41583b:	nop    DWORD PTR [rax+rax*1+0x0]
  415840:	mov    edx,ebx
  415842:	mov    rcx,rdi
  415845:	add    ebx,0x1
  415848:	call   0x416670
  41584d:	mov    rcx,rbp
  415850:	mov    r14,rax
  415853:	call   0x41db50
  415858:	mov    rcx,QWORD PTR [r14+0x10]
  41585c:	mov    r13,rax
  41585f:	call   0x41db50
  415864:	add    eax,r13d
  415867:	add    esi,eax
  415869:	cmp    r12d,ebx
  41586c:	jne    0x415840
  41586e:	lea    ecx,[rsi+0x1]
  415871:	xor    ebx,ebx
  415873:	movsxd rcx,ecx
  415876:	call   0x415600
  41587b:	mov    rsi,rax
  41587e:	mov    BYTE PTR [rax],0x0
  415881:	mov    edx,ebx
  415883:	mov    rcx,rdi
  415886:	add    ebx,0x1
  415889:	call   0x416670
  41588e:	mov    rdx,rbp
  415891:	mov    r13,rax
  415894:	mov    rcx,rsi
  415897:	call   0x41db70
  41589c:	mov    rdx,QWORD PTR [r13+0x10]
  4158a0:	mov    rcx,rsi
  4158a3:	call   0x41db70
  4158a8:	cmp    r12d,ebx
  4158ab:	jne    0x415881
  4158ad:	mov    rax,rsi
  4158b0:	add    rsp,0x20
  4158b4:	pop    rbx
  4158b5:	pop    rsi
  4158b6:	pop    rdi
  4158b7:	pop    rbp
  4158b8:	pop    r12
  4158ba:	pop    r13
  4158bc:	pop    r14
  4158be:	ret    
  4158bf:	nop
  4158c0:	mov    ecx,0x1
  4158c5:	call   0x415600
  4158ca:	mov    BYTE PTR [rax],0x0
  4158cd:	add    rsp,0x20
  4158d1:	pop    rbx
  4158d2:	pop    rsi
  4158d3:	pop    rdi
  4158d4:	pop    rbp
  4158d5:	pop    r12
  4158d7:	pop    r13
  4158d9:	pop    r14
  4158db:	ret    
  4158dc:	lea    rcx,[rip+0x140c4]        # 0x4299a7
  4158e3:	add    rsp,0x20
  4158e7:	pop    rbx
  4158e8:	pop    rsi
  4158e9:	pop    rdi
  4158ea:	pop    rbp
  4158eb:	pop    r12
  4158ed:	pop    r13
  4158ef:	pop    r14
  4158f1:	jmp    0x4157c0
  4158f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415900:	push   rdi
  415901:	push   rsi
  415902:	push   rbx
  415903:	sub    rsp,0x20
  415907:	test   rcx,rcx
  41590a:	jne    0x415911
  41590c:	test   rdx,rdx
  41590f:	je     0x415984
  415911:	test   rcx,rcx
  415914:	mov    rbx,rdx
  415917:	mov    rdi,rcx
  41591a:	je     0x415964
  41591c:	call   0x41db50
  415921:	test   rbx,rbx
  415924:	mov    rsi,rax
  415927:	je     0x4159a5
  415929:	mov    rcx,rbx
  41592c:	call   0x41db50
  415931:	lea    ecx,[rsi+rax*1+0x1]
  415935:	movsxd rcx,ecx
  415938:	call   0x415600
  41593d:	mov    rdx,rdi
  415940:	mov    BYTE PTR [rax],0x0
  415943:	mov    rcx,rax
  415946:	mov    rsi,rax
  415949:	call   0x41db70
  41594e:	mov    rdx,rbx
  415951:	mov    rcx,rsi
  415954:	call   0x41db70
  415959:	mov    rax,rsi
  41595c:	add    rsp,0x20
  415960:	pop    rbx
  415961:	pop    rsi
  415962:	pop    rdi
  415963:	ret    
  415964:	test   rdx,rdx
  415967:	je     0x415990
  415969:	mov    rcx,rdx
  41596c:	call   0x41db50
  415971:	lea    ecx,[rax+0x1]
  415974:	movsxd rcx,ecx
  415977:	call   0x415600
  41597c:	mov    rsi,rax
  41597f:	mov    BYTE PTR [rax],0x0
  415982:	jmp    0x41594e
  415984:	xor    eax,eax
  415986:	add    rsp,0x20
  41598a:	pop    rbx
  41598b:	pop    rsi
  41598c:	pop    rdi
  41598d:	ret    
  41598e:	xchg   ax,ax
  415990:	mov    ecx,0x1
  415995:	call   0x415600
  41599a:	mov    BYTE PTR [rax],0x0
  41599d:	add    rsp,0x20
  4159a1:	pop    rbx
  4159a2:	pop    rsi
  4159a3:	pop    rdi
  4159a4:	ret    
  4159a5:	lea    ecx,[rax+0x1]
  4159a8:	movsxd rcx,ecx
  4159ab:	call   0x415600
  4159b0:	mov    rdx,rdi
  4159b3:	mov    rsi,rax
  4159b6:	mov    BYTE PTR [rax],0x0
  4159b9:	mov    rcx,rax
  4159bc:	call   0x41db70
  4159c1:	mov    rax,rsi
  4159c4:	jmp    0x41595c
  4159c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4159d0:	push   rbx
  4159d1:	sub    rsp,0x20
  4159d5:	lea    rdx,[rip+0x13fcc]        # 0x4299a8
  4159dc:	mov    rbx,rcx
  4159df:	mov    rcx,QWORD PTR [rcx+0x40]
  4159e3:	call   0x415800
  4159e8:	lea    rdx,[rip+0x13fb9]        # 0x4299a8
  4159ef:	mov    rcx,rax
  4159f2:	call   0x415900
  4159f7:	mov    rdx,QWORD PTR [rbx+0x10]
  4159fb:	mov    rcx,rax
  4159fe:	add    rsp,0x20
  415a02:	pop    rbx
  415a03:	jmp    0x415900
  415a08:	nop    DWORD PTR [rax+rax*1+0x0]
  415a10:	push   r15
  415a12:	push   r14
  415a14:	push   r13
  415a16:	push   r12
  415a18:	push   rbp
  415a19:	push   rdi
  415a1a:	push   rsi
  415a1b:	push   rbx
  415a1c:	sub    rsp,0x28
  415a20:	mov    rsi,rcx
  415a23:	mov    r12,rdx
  415a26:	call   0x41db50
  415a2b:	mov    rbp,rax
  415a2e:	mov    rdi,rax
  415a31:	shr    rbp,1
  415a34:	test   al,0x1
  415a36:	jne    0x415aa0
  415a38:	test   rbp,rbp
  415a3b:	je     0x415ab8
  415a3d:	mov    rcx,rbp
  415a40:	call   0x4063a0
  415a45:	mov    r15,rax
  415a48:	mov    r13,rax
  415a4b:	xor    ebx,ebx
  415a4d:	nop    DWORD PTR [rax]
  415a50:	movsx  ecx,BYTE PTR [rsi+rbx*1]
  415a54:	add    r15,0x1
  415a58:	call   0x4151c0
  415a5d:	movsx  ecx,BYTE PTR [rsi+rbx*1+0x1]
  415a62:	mov    r14d,eax
  415a65:	add    rbx,0x2
  415a69:	shl    r14d,0x4
  415a6d:	call   0x4151c0
  415a72:	mov    r8d,r14d
  415a75:	or     r8d,eax
  415a78:	cmp    rdi,rbx
  415a7b:	mov    BYTE PTR [r15-0x1],r8b
  415a7f:	ja     0x415a50
  415a81:	test   r12,r12
  415a84:	je     0x415a8a
  415a86:	mov    QWORD PTR [r12],rbp
  415a8a:	mov    rax,r13
  415a8d:	add    rsp,0x28
  415a91:	pop    rbx
  415a92:	pop    rsi
  415a93:	pop    rdi
  415a94:	pop    rbp
  415a95:	pop    r12
  415a97:	pop    r13
  415a99:	pop    r14
  415a9b:	pop    r15
  415a9d:	ret    
  415a9e:	xchg   ax,ax
  415aa0:	lea    rdx,[rip+0x13f03]        # 0x4299aa
  415aa7:	lea    rcx,[rip+0x13f0a]        # 0x4299b8
  415aae:	call   0x406300
  415ab3:	test   rbp,rbp
  415ab6:	jne    0x415a3d
  415ab8:	lea    rdx,[rip+0x13f0f]        # 0x4299ce
  415abf:	lea    rcx,[rip+0x13ef2]        # 0x4299b8
  415ac6:	call   0x406300
  415acb:	xor    ecx,ecx
  415acd:	call   0x4063a0
  415ad2:	test   rdi,rdi
  415ad5:	mov    r13,rax
  415ad8:	mov    r15,rax
  415adb:	jne    0x415a4b
  415ae1:	jmp    0x415a81
  415ae3:	nop    DWORD PTR [rax]
  415ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415af0:	xor    r9d,r9d
  415af3:	test   edx,edx
  415af5:	mov    r8d,edx
  415af8:	je     0x415b0a
  415afa:	mov    eax,ecx
  415afc:	cdq    
  415afd:	idiv   r8d
  415b00:	test   edx,edx
  415b02:	je     0x415b0a
  415b04:	mov    r9d,r8d
  415b07:	sub    r9d,edx
  415b0a:	mov    eax,r9d
  415b0d:	ret    
  415b0e:	xchg   ax,ax
  415b10:	push   rbp
  415b11:	push   rdi
  415b12:	push   rsi
  415b13:	push   rbx
  415b14:	sub    rsp,0x28
  415b18:	test   rdx,rdx
  415b1b:	mov    rbx,rcx
  415b1e:	mov    rsi,rdx
  415b21:	je     0x415b60
  415b23:	mov    rbp,rdx
  415b26:	shl    rbp,0x5
  415b2a:	cmp    QWORD PTR [rbx+0x18],0x0
  415b2f:	jne    0x415b71
  415b31:	mov    rcx,rbp
  415b34:	call   0x4063a0
  415b39:	mov    r8,rbp
  415b3c:	xor    edx,edx
  415b3e:	mov    rcx,rax
  415b41:	mov    rdi,rax
  415b44:	call   0x41dbb0
  415b49:	mov    QWORD PTR [rbx+0x18],rsi
  415b4d:	mov    QWORD PTR [rbx+0x20],rdi
  415b51:	add    rsp,0x28
  415b55:	pop    rbx
  415b56:	pop    rsi
  415b57:	pop    rdi
  415b58:	pop    rbp
  415b59:	ret    
  415b5a:	nop    WORD PTR [rax+rax*1+0x0]
  415b60:	cmp    QWORD PTR [rbx+0x18],0x0
  415b65:	mov    ebp,0x20
  415b6a:	mov    esi,0x1
  415b6f:	je     0x415b31
  415b71:	mov    rcx,QWORD PTR [rbx+0x20]
  415b75:	mov    rdx,rbp
  415b78:	call   0x4063f0
  415b7d:	mov    rdi,rax
  415b80:	jmp    0x415b49
  415b82:	nop    DWORD PTR [rax+0x0]
  415b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415b90:	mov    rdx,QWORD PTR [rcx+0x18]
  415b94:	lea    rax,[rdx+rdx*1]
  415b98:	test   rdx,rdx
  415b9b:	mov    edx,0x1
  415ba0:	cmovne rdx,rax
  415ba4:	jmp    0x415b10
  415ba9:	nop    DWORD PTR [rax+0x0]
  415bb0:	push   rbp
  415bb1:	push   rdi
  415bb2:	push   rsi
  415bb3:	push   rbx
  415bb4:	sub    rsp,0x28
  415bb8:	test   ecx,ecx
  415bba:	jle    0x415c31
  415bbc:	add    ecx,0x1
  415bbf:	movsxd rbp,ecx
  415bc2:	mov    rsi,rbp
  415bc5:	shl    rsi,0x5
  415bc9:	mov    ecx,0x38
  415bce:	call   0x4063a0
  415bd3:	lea    rdi,[rax+0x8]
  415bd7:	mov    rdx,rax
  415bda:	mov    rbx,rax
  415bdd:	mov    QWORD PTR [rax],0x0
  415be4:	mov    QWORD PTR [rax+0x30],0x0
  415bec:	xor    eax,eax
  415bee:	and    rdi,0xfffffffffffffff8
  415bf2:	sub    rdx,rdi
  415bf5:	add    edx,0x38
  415bf8:	shr    edx,0x3
  415bfb:	mov    ecx,edx
  415bfd:	rep stos QWORD PTR es:[rdi],rax
  415c00:	mov    rcx,rsi
  415c03:	call   0x4063a0
  415c08:	mov    r8,rsi
  415c0b:	mov    QWORD PTR [rbx+0x20],rax
  415c0f:	xor    edx,edx
  415c11:	mov    rcx,rax
  415c14:	call   0x41dbb0
  415c19:	mov    rax,rbx
  415c1c:	mov    QWORD PTR [rbx+0x18],rbp
  415c20:	mov    QWORD PTR [rbx+0x10],0x0
  415c28:	add    rsp,0x28
  415c2c:	pop    rbx
  415c2d:	pop    rsi
  415c2e:	pop    rdi
  415c2f:	pop    rbp
  415c30:	ret    
  415c31:	mov    esi,0x420
  415c36:	mov    ebp,0x21
  415c3b:	jmp    0x415bc9
  415c3d:	nop    DWORD PTR [rax]
  415c40:	push   rsi
  415c41:	push   rbx
  415c42:	sub    rsp,0x28
  415c46:	mov    rax,QWORD PTR [rcx+0x10]
  415c4a:	mov    rsi,rcx
  415c4d:	mov    rcx,QWORD PTR [rcx+0x18]
  415c51:	mov    rbx,rdx
  415c54:	cmp    rax,rcx
  415c57:	jb     0x415c75
  415c59:	lea    rax,[rcx+rcx*1]
  415c5d:	test   rcx,rcx
  415c60:	mov    edx,0x1
  415c65:	mov    rcx,rsi
  415c68:	cmovne rdx,rax
  415c6c:	call   0x415b10
  415c71:	mov    rax,QWORD PTR [rsi+0x10]
  415c75:	test   rbx,rbx
  415c78:	cmove  rbx,QWORD PTR [rip+0x15be0]        # 0x42b860
  415c80:	mov    rdx,QWORD PTR [rsi+0x20]
  415c84:	lea    rcx,[rax+0x1]
  415c88:	shl    rax,0x5
  415c8c:	mov    QWORD PTR [rsi+0x10],rcx
  415c90:	add    rax,rdx
  415c93:	mov    rdx,QWORD PTR [rbx]
  415c96:	mov    QWORD PTR [rax],rdx
  415c99:	mov    rdx,QWORD PTR [rbx+0x8]
  415c9d:	mov    QWORD PTR [rax+0x8],rdx
  415ca1:	mov    rdx,QWORD PTR [rbx+0x10]
  415ca5:	mov    QWORD PTR [rax+0x10],rdx
  415ca9:	mov    rdx,QWORD PTR [rbx+0x18]
  415cad:	mov    QWORD PTR [rax+0x18],rdx
  415cb1:	add    rsp,0x28
  415cb5:	pop    rbx
  415cb6:	pop    rsi
  415cb7:	ret    
  415cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  415cc0:	mov    rax,rcx
  415cc3:	xor    ecx,ecx
  415cc5:	cmp    QWORD PTR [rdx+0x10],0x0
  415cca:	je     0x415cd3
  415ccc:	mov    rcx,QWORD PTR [rdx+0x20]
  415cd0:	mov    ecx,DWORD PTR [rcx+0x4]
  415cd3:	mov    DWORD PTR [rax],0x10
  415cd9:	mov    DWORD PTR [rax+0x4],ecx
  415cdc:	mov    QWORD PTR [rax+0x8],rdx
  415ce0:	mov    DWORD PTR [rax+0x18],0x0
  415ce7:	ret    
  415ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  415cf0:	mov    rax,QWORD PTR [rip+0x15c09]        # 0x42b900
  415cf7:	nop    WORD PTR [rax+rax*1+0x0]
  415d00:	mov    rax,QWORD PTR [rax]
  415d03:	test   rax,rax
  415d06:	jne    0x415d00
  415d08:	repz ret 
  415d0a:	nop    WORD PTR [rax+rax*1+0x0]
  415d10:	test   r8d,r8d
  415d13:	jne    0x415d18
  415d15:	mov    r8d,DWORD PTR [rcx]
  415d18:	cmp    r8d,edx
  415d1b:	mov    eax,0x1
  415d20:	jle    0x415d3c
  415d22:	movsxd r9,edx
  415d25:	add    edx,0x1
  415d28:	mov    r9,QWORD PTR [rcx+r9*8+0x8]
  415d2d:	imul   rax,QWORD PTR [r9+0x2100]
  415d35:	cmp    edx,r8d
  415d38:	jne    0x415d22
  415d3a:	repz ret 
  415d3c:	repz ret 
  415d3e:	xchg   ax,ax
  415d40:	mov    eax,edx
  415d42:	add    eax,0x1
  415d45:	jne    0x415d49
  415d47:	mov    eax,DWORD PTR [rcx]
  415d49:	test   eax,eax
  415d4b:	jle    0x415d76
  415d4d:	sub    eax,0x1
  415d50:	lea    rdx,[rcx+0x8]
  415d54:	lea    r8,[rcx+rax*8+0x10]
  415d59:	mov    eax,0x1
  415d5e:	xchg   ax,ax
  415d60:	mov    rcx,QWORD PTR [rdx]
  415d63:	add    rdx,0x8
  415d67:	imul   rax,QWORD PTR [rcx+0x2100]
  415d6f:	cmp    rdx,r8
  415d72:	jne    0x415d60
  415d74:	repz ret 
  415d76:	mov    eax,0x1
  415d7b:	ret    
  415d7c:	nop    DWORD PTR [rax+0x0]
  415d80:	push   rbp
  415d81:	push   rdi
  415d82:	push   rsi
  415d83:	push   rbx
  415d84:	sub    rsp,0x28
  415d88:	test   ecx,ecx
  415d8a:	jne    0x415d95
  415d8c:	add    rsp,0x28
  415d90:	pop    rbx
  415d91:	pop    rsi
  415d92:	pop    rdi
  415d93:	pop    rbp
  415d94:	ret    
  415d95:	mov    rbx,r8
  415d98:	mov    edi,edx
  415d9a:	call   0x41b190
  415d9f:	mov    rsi,QWORD PTR [rip+0x1e932]        # 0x4346d8
  415da6:	mov    rbp,rax
  415da9:	call   rsi
  415dab:	lea    rdx,[rip+0x13c25]        # 0x4299d7
  415db2:	lea    rcx,[rax+0x60]
  415db6:	mov    r8,rbp
  415db9:	call   0x41dc28
  415dbe:	call   rsi
  415dc0:	lea    rdx,[rip+0x13c1b]        # 0x4299e2
  415dc7:	lea    rcx,[rax+0x60]
  415dcb:	mov    r9d,edi
  415dce:	mov    r8,rbx
  415dd1:	call   0x41dc28
  415dd6:	call   rsi
  415dd8:	lea    rcx,[rax+0x60]
  415ddc:	call   0x41b2b0
  415de1:	call   rsi
  415de3:	lea    rcx,[rax+0x60]
  415de7:	call   0x41dc38
  415dec:	mov    ecx,0x1
  415df1:	call   0x41dc48
  415df6:	nop
  415df7:	nop    WORD PTR [rax+rax*1+0x0]
  415e00:	mov    eax,DWORD PTR [rcx]
  415e02:	cmp    edx,eax
  415e04:	jl     0x415e17
  415e06:	jmp    0x415e30
  415e08:	nop    DWORD PTR [rax+rax*1+0x0]
  415e10:	add    edx,0x1
  415e13:	cmp    edx,eax
  415e15:	je     0x415e30
  415e17:	movsxd r8,edx
  415e1a:	mov    r8,QWORD PTR [rcx+r8*8+0x8]
  415e1f:	mov    r8d,DWORD PTR [r8+0x20fc]
  415e26:	test   r8d,r8d
  415e29:	je     0x415e10
  415e2b:	mov    eax,edx
  415e2d:	ret    
  415e2e:	xchg   ax,ax
  415e30:	repz ret 
  415e32:	nop    DWORD PTR [rax+0x0]
  415e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415e40:	mov    edx,DWORD PTR [rcx]
  415e42:	mov    eax,0xffffffff
  415e47:	add    edx,eax
  415e49:	jns    0x415e58
  415e4b:	jmp    0x415e6c
  415e4d:	nop    DWORD PTR [rax]
  415e50:	sub    edx,0x1
  415e53:	cmp    edx,0xffffffff
  415e56:	je     0x415e6a
  415e58:	movsxd rax,edx
  415e5b:	mov    rax,QWORD PTR [rcx+rax*8+0x8]
  415e60:	mov    eax,DWORD PTR [rax+0x20fc]
  415e66:	test   eax,eax
  415e68:	je     0x415e50
  415e6a:	mov    eax,edx
  415e6c:	repz ret 
  415e6e:	xchg   ax,ax
  415e70:	sub    rsp,0x28
  415e74:	lea    rax,[rip+0x13b79]        # 0x4299f4
  415e7b:	cmp    ecx,0x2
  415e7e:	je     0x415e9a
  415e80:	jle    0x415ea0
  415e82:	cmp    ecx,0x3
  415e85:	lea    rax,[rip+0x13b76]        # 0x429a02
  415e8c:	je     0x415e9a
  415e8e:	cmp    ecx,0x4
  415e91:	lea    rax,[rip+0x13b73]        # 0x429a0b
  415e98:	jne    0x415eac
  415e9a:	add    rsp,0x28
  415e9e:	ret    
  415e9f:	nop
  415ea0:	cmp    ecx,0x1
  415ea3:	lea    rax,[rip+0x13b42]        # 0x4299ec
  415eaa:	je     0x415e9a
  415eac:	mov    edx,ecx
  415eae:	lea    rcx,[rip+0x13b6d]        # 0x429a22
  415eb5:	call   0x40b3d0
  415eba:	xor    eax,eax
  415ebc:	add    rsp,0x28
  415ec0:	ret    
  415ec1:	nop
  415ec2:	nop
  415ec3:	nop
  415ec4:	nop
  415ec5:	nop
  415ec6:	nop
  415ec7:	nop
  415ec8:	nop
  415ec9:	nop
  415eca:	nop
  415ecb:	nop
  415ecc:	nop
  415ecd:	nop
  415ece:	nop
  415ecf:	nop
  415ed0:	push   rbx
  415ed1:	sub    rsp,0x20
  415ed5:	mov    rbx,QWORD PTR [rip+0x1e7fc]        # 0x4346d8
  415edc:	call   rbx
  415ede:	lea    rcx,[rax+0x30]
  415ee2:	call   0x41dc38
  415ee7:	call   rbx
  415ee9:	lea    rcx,[rip+0x13c40]        # 0x429b30
  415ef0:	lea    r9,[rax+0x60]
  415ef4:	mov    r8d,0x13
  415efa:	mov    edx,0x1
  415eff:	call   0x41dbf8
  415f04:	call   rbx
  415f06:	lea    rcx,[rax+0x60]
  415f0a:	call   0x41dc38
  415f0f:	mov    eax,DWORD PTR [rip+0x98ab]        # 0x41f7c0
  415f15:	test   eax,eax
  415f17:	jne    0x415f21
  415f19:	xor    eax,eax
  415f1b:	add    rsp,0x20
  415f1f:	pop    rbx
  415f20:	ret    
  415f21:	mov    ecx,0x1
  415f26:	call   0x41dc48
  415f2b:	nop
  415f2c:	nop    DWORD PTR [rax+0x0]
  415f30:	sub    rsp,0x28
  415f34:	mov    ecx,0x18
  415f39:	call   0x4063a0
  415f3e:	test   rax,rax
  415f41:	je     0x415f64
  415f43:	mov    DWORD PTR [rax+0x4],0x0
  415f4a:	mov    DWORD PTR [rax+0x8],0x0
  415f51:	mov    QWORD PTR [rax+0x10],0x0
  415f59:	mov    DWORD PTR [rax],0x0
  415f5f:	add    rsp,0x28
  415f63:	ret    
  415f64:	call   0x415ed0
  415f69:	cdqe   
  415f6b:	jmp    0x415f5f
  415f6d:	nop    DWORD PTR [rax]
  415f70:	push   rdi
  415f71:	push   rsi
  415f72:	push   rbx
  415f73:	sub    rsp,0x20
  415f77:	test   rcx,rcx
  415f7a:	mov    rbx,rcx
  415f7d:	je     0x416003
  415f83:	test   edx,edx
  415f85:	je     0x415fd5
  415f87:	cmp    edx,DWORD PTR [rcx+0x4]
  415f8a:	jbe    0x415fc8
  415f8c:	mov    ecx,DWORD PTR [rcx]
  415f8e:	test   ecx,ecx
  415f90:	jne    0x416003
  415f92:	mov    ecx,edx
  415f94:	mov    esi,edx
  415f96:	mov    edx,0x1
  415f9b:	call   0x4063e0
  415fa0:	mov    rdi,rax
  415fa3:	mov    eax,DWORD PTR [rbx+0x4]
  415fa6:	test   eax,eax
  415fa8:	je     0x415fb3
  415faa:	mov    r8d,DWORD PTR [rbx+0x8]
  415fae:	test   r8d,r8d
  415fb1:	jne    0x415ff0
  415fb3:	mov    rcx,QWORD PTR [rbx+0x10]
  415fb7:	test   rcx,rcx
  415fba:	je     0x415fc1
  415fbc:	call   0x4062e0
  415fc1:	mov    QWORD PTR [rbx+0x10],rdi
  415fc5:	mov    DWORD PTR [rbx+0x4],esi
  415fc8:	mov    eax,0x1
  415fcd:	add    rsp,0x20
  415fd1:	pop    rbx
  415fd2:	pop    rsi
  415fd3:	pop    rdi
  415fd4:	ret    
  415fd5:	mov    edx,DWORD PTR [rcx+0x4]
  415fd8:	test   edx,edx
  415fda:	je     0x415fe4
  415fdc:	lea    ecx,[rdx+rdx*1]
  415fdf:	mov    rsi,rcx
  415fe2:	jmp    0x415f96
  415fe4:	mov    ecx,0x400
  415fe9:	mov    esi,0x400
  415fee:	jmp    0x415f96
  415ff0:	mov    rdx,QWORD PTR [rbx+0x10]
  415ff4:	test   rdx,rdx
  415ff7:	je     0x415fc1
  415ff9:	mov    rcx,rdi
  415ffc:	call   0x41dbc0
  416001:	jmp    0x415fb3
  416003:	add    rsp,0x20
  416007:	pop    rbx
  416008:	pop    rsi
  416009:	pop    rdi
  41600a:	jmp    0x415ed0
  41600f:	nop
  416010:	push   rbx
  416011:	sub    rsp,0x20
  416015:	test   rcx,rcx
  416018:	je     0x416040
  41601a:	mov    rbx,rcx
  41601d:	mov    rcx,QWORD PTR [rcx+0x10]
  416021:	test   rcx,rcx
  416024:	je     0x41602b
  416026:	call   0x4062e0
  41602b:	mov    rcx,rbx
  41602e:	add    rsp,0x20
  416032:	pop    rbx
  416033:	jmp    0x4062e0
  416038:	nop    DWORD PTR [rax+rax*1+0x0]
  416040:	add    rsp,0x20
  416044:	pop    rbx
  416045:	ret    
  416046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416050:	push   rsi
  416051:	push   rbx
  416052:	sub    rsp,0x28
  416056:	test   rcx,rcx
  416059:	je     0x41607d
  41605b:	cmp    DWORD PTR [rcx+0x8],edx
  41605e:	mov    esi,edx
  416060:	mov    rbx,rcx
  416063:	jb     0x416074
  416065:	mov    eax,0x1
  41606a:	mov    DWORD PTR [rbx+0x8],esi
  41606d:	add    rsp,0x28
  416071:	pop    rbx
  416072:	pop    rsi
  416073:	ret    
  416074:	call   0x415f70
  416079:	test   eax,eax
  41607b:	jne    0x416065
  41607d:	add    rsp,0x28
  416081:	pop    rbx
  416082:	pop    rsi
  416083:	jmp    0x415ed0
  416088:	nop    DWORD PTR [rax+rax*1+0x0]
  416090:	test   rcx,rcx
  416093:	je     0x4160b9
  416095:	mov    r8d,DWORD PTR [rcx+0x8]
  416099:	xor    eax,eax
  41609b:	test   r8d,r8d
  41609e:	je     0x4160b3
  4160a0:	mov    r9,QWORD PTR [rcx+0x10]
  4160a4:	mov    r8d,eax
  4160a7:	add    eax,0x1
  4160aa:	mov    BYTE PTR [r9+r8*1],dl
  4160ae:	cmp    DWORD PTR [rcx+0x8],eax
  4160b1:	ja     0x4160a0
  4160b3:	mov    eax,0x1
  4160b8:	ret    
  4160b9:	jmp    0x415ed0
  4160be:	xchg   ax,ax
  4160c0:	test   rcx,rcx
  4160c3:	je     0x4160d5
  4160c5:	cmp    DWORD PTR [rcx+0x8],edx
  4160c8:	jbe    0x4160d5
  4160ca:	mov    rax,QWORD PTR [rcx+0x10]
  4160ce:	mov    edx,edx
  4160d0:	movsx  eax,BYTE PTR [rax+rdx*1]
  4160d4:	ret    
  4160d5:	mov    eax,0xffffffff
  4160da:	ret    
  4160db:	nop    DWORD PTR [rax+rax*1+0x0]
  4160e0:	test   rcx,rcx
  4160e3:	je     0x416100
  4160e5:	cmp    DWORD PTR [rcx+0x8],edx
  4160e8:	jbe    0x416100
  4160ea:	mov    rax,QWORD PTR [rcx+0x10]
  4160ee:	mov    edx,edx
  4160f0:	mov    BYTE PTR [rax+rdx*1],r8b
  4160f4:	mov    eax,0x1
  4160f9:	ret    
  4160fa:	nop    WORD PTR [rax+rax*1+0x0]
  416100:	jmp    0x415ed0
  416105:	nop
  416106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416110:	push   rsi
  416111:	push   rbx
  416112:	sub    rsp,0x28
  416116:	test   rcx,rcx
  416119:	mov    rbx,rcx
  41611c:	mov    esi,edx
  41611e:	jne    0x416130
  416120:	jmp    0x416160
  416122:	xor    edx,edx
  416124:	mov    rcx,rbx
  416127:	call   0x415f70
  41612c:	test   eax,eax
  41612e:	je     0x416160
  416130:	mov    eax,DWORD PTR [rbx+0x8]
  416133:	lea    ecx,[rax+0x1]
  416136:	cmp    ecx,DWORD PTR [rbx+0x4]
  416139:	jae    0x416122
  41613b:	mov    rdx,QWORD PTR [rbx+0x10]
  41613f:	mov    BYTE PTR [rdx+rax*1],sil
  416143:	mov    eax,DWORD PTR [rbx+0x8]
  416146:	mov    rdx,QWORD PTR [rbx+0x10]
  41614a:	add    eax,0x1
  41614d:	mov    DWORD PTR [rbx+0x8],eax
  416150:	mov    BYTE PTR [rdx+rax*1],0x0
  416154:	mov    eax,0x1
  416159:	add    rsp,0x28
  41615d:	pop    rbx
  41615e:	pop    rsi
  41615f:	ret    
  416160:	add    rsp,0x28
  416164:	pop    rbx
  416165:	pop    rsi
  416166:	jmp    0x415ed0
  41616b:	nop    DWORD PTR [rax+rax*1+0x0]
  416170:	push   rbp
  416171:	push   rdi
  416172:	push   rsi
  416173:	push   rbx
  416174:	sub    rsp,0x28
  416178:	test   rcx,rcx
  41617b:	je     0x4161e1
  41617d:	test   rdx,rdx
  416180:	je     0x4161e1
  416182:	test   r8d,r8d
  416185:	mov    rdi,rdx
  416188:	mov    rbx,rcx
  41618b:	mov    esi,r8d
  41618e:	je     0x4161f0
  416190:	lea    ebp,[rsi+0x1]
  416193:	jmp    0x4161a3
  416195:	xor    edx,edx
  416197:	mov    rcx,rbx
  41619a:	call   0x415f70
  41619f:	test   eax,eax
  4161a1:	je     0x4161e1
  4161a3:	mov    r10d,DWORD PTR [rbx+0x8]
  4161a7:	mov    r9d,DWORD PTR [rbx+0x4]
  4161ab:	sub    r9d,r10d
  4161ae:	cmp    r9d,ebp
  4161b1:	jbe    0x416195
  4161b3:	mov    rcx,r10
  4161b6:	add    rcx,QWORD PTR [rbx+0x10]
  4161ba:	mov    r8d,esi
  4161bd:	mov    rdx,rdi
  4161c0:	call   0x41dbc0
  4161c5:	add    esi,DWORD PTR [rbx+0x8]
  4161c8:	mov    rax,QWORD PTR [rbx+0x10]
  4161cc:	mov    DWORD PTR [rbx+0x8],esi
  4161cf:	mov    BYTE PTR [rax+rsi*1],0x0
  4161d3:	mov    eax,0x1
  4161d8:	add    rsp,0x28
  4161dc:	pop    rbx
  4161dd:	pop    rsi
  4161de:	pop    rdi
  4161df:	pop    rbp
  4161e0:	ret    
  4161e1:	add    rsp,0x28
  4161e5:	pop    rbx
  4161e6:	pop    rsi
  4161e7:	pop    rdi
  4161e8:	pop    rbp
  4161e9:	jmp    0x415ed0
  4161ee:	xchg   ax,ax
  4161f0:	mov    rcx,rdx
  4161f3:	call   0x41db50
  4161f8:	mov    esi,eax
  4161fa:	jmp    0x416190
  4161fc:	nop    DWORD PTR [rax+0x0]
  416200:	push   rsi
  416201:	push   rbx
  416202:	sub    rsp,0x28
  416206:	mov    rbx,rcx
  416209:	mov    rcx,rdx
  41620c:	mov    rsi,rdx
  41620f:	call   0x41db50
  416214:	lea    r8d,[rax+0x1]
  416218:	mov    rdx,rsi
  41621b:	mov    rcx,rbx
  41621e:	call   0x416170
  416223:	mov    eax,DWORD PTR [rbx+0x8]
  416226:	test   eax,eax
  416228:	je     0x416240
  41622a:	sub    eax,0x1
  41622d:	mov    DWORD PTR [rbx+0x8],eax
  416230:	mov    eax,0x1
  416235:	add    rsp,0x28
  416239:	pop    rbx
  41623a:	pop    rsi
  41623b:	ret    
  41623c:	nop    DWORD PTR [rax+0x0]
  416240:	add    rsp,0x28
  416244:	pop    rbx
  416245:	pop    rsi
  416246:	jmp    0x415ed0
  41624b:	nop    DWORD PTR [rax+rax*1+0x0]
  416250:	push   rbx
  416251:	sub    rsp,0x20
  416255:	test   rdx,rdx
  416258:	mov    rbx,rcx
  41625b:	je     0x41627d
  41625d:	mov    r8d,DWORD PTR [rdx+0x8]
  416261:	test   r8d,r8d
  416264:	je     0x41627d
  416266:	mov    rax,QWORD PTR [rdx+0x10]
  41626a:	lea    rdx,[rip+0x138d3]        # 0x429b44
  416271:	test   rax,rax
  416274:	cmovne rdx,rax
  416278:	call   0x416170
  41627d:	xor    edx,edx
  41627f:	mov    rcx,rbx
  416282:	call   0x416110
  416287:	sub    DWORD PTR [rbx+0x8],0x1
  41628b:	mov    eax,0x1
  416290:	add    rsp,0x20
  416294:	pop    rbx
  416295:	ret    
  416296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4162a0:	push   r12
  4162a2:	push   rbp
  4162a3:	push   rdi
  4162a4:	push   rsi
  4162a5:	push   rbx
  4162a6:	sub    rsp,0x20
  4162aa:	mov    eax,DWORD PTR [rcx+0x8]
  4162ad:	mov    edi,edx
  4162af:	mov    edx,DWORD PTR [rcx+0x4]
  4162b2:	mov    rbx,rcx
  4162b5:	mov    rbp,r8
  4162b8:	mov    r12d,r9d
  4162bb:	lea    esi,[r9+rax*1]
  4162bf:	cmp    esi,edx
  4162c1:	jae    0x416310
  4162c3:	cmp    edi,eax
  4162c5:	lea    ecx,[rsi-0x1]
  4162c8:	jae    0x4162e7
  4162ca:	movsxd rsi,ecx
  4162cd:	mov    eax,edi
  4162cf:	sub    ecx,r12d
  4162d2:	mov    r10,QWORD PTR [rbx+0x10]
  4162d6:	add    eax,0x1
  4162d9:	movzx  r11d,BYTE PTR [r10+rcx*1]
  4162de:	mov    BYTE PTR [r10+rsi*1],r11b
  4162e2:	cmp    DWORD PTR [rbx+0x8],eax
  4162e5:	ja     0x4162d2
  4162e7:	mov    ecx,edi
  4162e9:	add    rcx,QWORD PTR [rbx+0x10]
  4162ed:	mov    r8d,r12d
  4162f0:	mov    rdx,rbp
  4162f3:	call   0x41dbc0
  4162f8:	add    DWORD PTR [rbx+0x8],r12d
  4162fc:	mov    eax,0x1
  416301:	add    rsp,0x20
  416305:	pop    rbx
  416306:	pop    rsi
  416307:	pop    rdi
  416308:	pop    rbp
  416309:	pop    r12
  41630b:	ret    
  41630c:	nop    DWORD PTR [rax+0x0]
  416310:	add    edx,r9d
  416313:	call   0x415f70
  416318:	test   eax,eax
  41631a:	je     0x416321
  41631c:	mov    eax,DWORD PTR [rbx+0x8]
  41631f:	jmp    0x4162c3
  416321:	add    rsp,0x20
  416325:	pop    rbx
  416326:	pop    rsi
  416327:	pop    rdi
  416328:	pop    rbp
  416329:	pop    r12
  41632b:	jmp    0x415ed0
  416330:	sub    rsp,0x38
  416334:	mov    r9d,0x1
  41633a:	mov    BYTE PTR [rsp+0x20],r8b
  41633f:	lea    r8,[rsp+0x20]
  416344:	call   0x4162a0
  416349:	add    rsp,0x38
  41634d:	ret    
  41634e:	xchg   ax,ax
  416350:	push   rbx
  416351:	sub    rsp,0x20
  416355:	test   rcx,rcx
  416358:	je     0x416390
  41635a:	mov    eax,DWORD PTR [rcx+0x8]
  41635d:	test   eax,eax
  41635f:	je     0x416390
  416361:	mov    rax,QWORD PTR [rcx+0x10]
  416365:	mov    rbx,rcx
  416368:	movzx  eax,BYTE PTR [rax]
  41636b:	mov    BYTE PTR [rdx],al
  41636d:	mov    rcx,QWORD PTR [rcx+0x10]
  416371:	mov    eax,DWORD PTR [rbx+0x8]
  416374:	lea    rdx,[rcx+0x1]
  416378:	lea    r8d,[rax-0x1]
  41637c:	call   0x41dbc0
  416381:	sub    DWORD PTR [rbx+0x8],0x1
  416385:	mov    eax,0x1
  41638a:	add    rsp,0x20
  41638e:	pop    rbx
  41638f:	ret    
  416390:	add    rsp,0x20
  416394:	pop    rbx
  416395:	jmp    0x415ed0
  41639a:	nop    WORD PTR [rax+rax*1+0x0]
  4163a0:	test   rcx,rcx
  4163a3:	je     0x4163c4
  4163a5:	mov    eax,DWORD PTR [rcx+0x8]
  4163a8:	test   eax,eax
  4163aa:	je     0x4163c4
  4163ac:	mov    r8,QWORD PTR [rcx+0x10]
  4163b0:	sub    eax,0x1
  4163b3:	movzx  eax,BYTE PTR [r8+rax*1]
  4163b8:	mov    BYTE PTR [rdx],al
  4163ba:	mov    eax,0x1
  4163bf:	sub    DWORD PTR [rcx+0x8],0x1
  4163c3:	ret    
  4163c4:	jmp    0x415ed0
  4163c9:	nop    DWORD PTR [rax+0x0]
  4163d0:	test   rcx,rcx
  4163d3:	je     0x4163f0
  4163d5:	mov    eax,DWORD PTR [rcx+0x8]
  4163d8:	test   eax,eax
  4163da:	je     0x4163f0
  4163dc:	mov    rax,QWORD PTR [rcx+0x10]
  4163e0:	movzx  eax,BYTE PTR [rax]
  4163e3:	mov    BYTE PTR [rdx],al
  4163e5:	mov    eax,0x1
  4163ea:	ret    
  4163eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4163f0:	jmp    0x415ed0
  4163f5:	nop
  4163f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416400:	test   rcx,rcx
  416403:	je     0x416420
  416405:	mov    eax,DWORD PTR [rcx+0x8]
  416408:	test   eax,eax
  41640a:	je     0x416420
  41640c:	mov    rcx,QWORD PTR [rcx+0x10]
  416410:	sub    eax,0x1
  416413:	movzx  eax,BYTE PTR [rcx+rax*1]
  416417:	mov    BYTE PTR [rdx],al
  416419:	mov    eax,0x1
  41641e:	ret    
  41641f:	nop
  416420:	jmp    0x415ed0
  416425:	nop
  416426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416430:	push   rbx
  416431:	sub    rsp,0x20
  416435:	mov    eax,DWORD PTR [rcx+0x8]
  416438:	mov    rbx,rcx
  41643b:	lea    ecx,[rax+0x1]
  41643e:	call   0x4063a0
  416443:	mov    r8d,DWORD PTR [rbx+0x8]
  416447:	mov    rdx,QWORD PTR [rbx+0x10]
  41644b:	mov    rcx,rax
  41644e:	call   0x41dbc0
  416453:	mov    r9,rax
  416456:	mov    eax,DWORD PTR [rbx+0x8]
  416459:	mov    BYTE PTR [r9+rax*1],0x0
  41645e:	mov    rax,r9
  416461:	add    rsp,0x20
  416465:	pop    rbx
  416466:	ret    
  416467:	nop    WORD PTR [rax+rax*1+0x0]
  416470:	push   rdi
  416471:	push   rsi
  416472:	push   rbx
  416473:	sub    rsp,0x20
  416477:	test   rcx,rcx
  41647a:	je     0x4164c1
  41647c:	mov    eax,DWORD PTR [rcx]
  41647e:	mov    esi,r8d
  416481:	mov    rdi,rdx
  416484:	mov    rbx,rcx
  416487:	mov    DWORD PTR [rcx+0x8],0x0
  41648e:	test   eax,eax
  416490:	jne    0x4164a0
  416492:	mov    rcx,QWORD PTR [rcx+0x10]
  416496:	test   rcx,rcx
  416499:	je     0x4164a0
  41649b:	call   0x4062e0
  4164a0:	mov    eax,0x1
  4164a5:	mov    QWORD PTR [rbx+0x10],rdi
  4164a9:	mov    DWORD PTR [rbx+0x8],0x0
  4164b0:	mov    DWORD PTR [rbx+0x4],esi
  4164b3:	mov    DWORD PTR [rbx],0x1
  4164b9:	add    rsp,0x20
  4164bd:	pop    rbx
  4164be:	pop    rsi
  4164bf:	pop    rdi
  4164c0:	ret    
  4164c1:	add    rsp,0x20
  4164c5:	pop    rbx
  4164c6:	pop    rsi
  4164c7:	pop    rdi
  4164c8:	jmp    0x415ed0
  4164cd:	nop    DWORD PTR [rax]
  4164d0:	push   rbx
  4164d1:	sub    rsp,0x20
  4164d5:	xor    edx,edx
  4164d7:	mov    rbx,rcx
  4164da:	call   0x416110
  4164df:	sub    DWORD PTR [rbx+0x8],0x1
  4164e3:	mov    eax,0x1
  4164e8:	add    rsp,0x20
  4164ec:	pop    rbx
  4164ed:	ret    
  4164ee:	nop
  4164ef:	nop
  4164f0:	xor    eax,eax
  4164f2:	test   rcx,rcx
  4164f5:	sete   al
  4164f8:	ret    
  4164f9:	nop    DWORD PTR [rax+0x0]
  416500:	sub    rsp,0x28
  416504:	mov    ecx,0x10
  416509:	call   0x41dbc8
  41650e:	test   rax,rax
  416511:	je     0x416528
  416513:	mov    DWORD PTR [rax],0x0
  416519:	mov    DWORD PTR [rax+0x4],0x0
  416520:	mov    QWORD PTR [rax+0x8],0x0
  416528:	add    rsp,0x28
  41652c:	ret    
  41652d:	nop    DWORD PTR [rax]
  416530:	push   rbx
  416531:	sub    rsp,0x20
  416535:	test   rcx,rcx
  416538:	je     0x416559
  41653a:	mov    rbx,rcx
  41653d:	mov    DWORD PTR [rcx],0x0
  416543:	mov    rcx,QWORD PTR [rcx+0x8]
  416547:	test   rcx,rcx
  41654a:	je     0x416551
  41654c:	call   0x41dc08
  416551:	mov    rcx,rbx
  416554:	call   0x41dc08
  416559:	mov    eax,0x1
  41655e:	add    rsp,0x20
  416562:	pop    rbx
  416563:	ret    
  416564:	xchg   ax,ax
  416566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416570:	push   rbp
  416571:	push   rdi
  416572:	push   rsi
  416573:	push   rbx
  416574:	sub    rsp,0x28
  416578:	test   rcx,rcx
  41657b:	mov    rsi,rcx
  41657e:	mov    ebx,edx
  416580:	je     0x416620
  416586:	test   edx,edx
  416588:	je     0x4165a0
  41658a:	mov    edi,DWORD PTR [rsi]
  41658c:	mov    eax,0x1
  416591:	cmp    ebx,edi
  416593:	ja     0x4165b8
  416595:	add    rsp,0x28
  416599:	pop    rbx
  41659a:	pop    rsi
  41659b:	pop    rdi
  41659c:	pop    rbp
  41659d:	ret    
  41659e:	xchg   ax,ax
  4165a0:	mov    edx,DWORD PTR [rcx+0x4]
  4165a3:	mov    edi,DWORD PTR [rsi]
  4165a5:	mov    bl,0x10
  4165a7:	lea    eax,[rdx+rdx*1]
  4165aa:	test   edx,edx
  4165ac:	cmovne ebx,eax
  4165af:	mov    eax,0x1
  4165b4:	cmp    ebx,edi
  4165b6:	jbe    0x416595
  4165b8:	mov    ecx,ebx
  4165ba:	mov    edx,0x8
  4165bf:	call   0x41dc58
  4165c4:	test   rax,rax
  4165c7:	mov    rbp,rax
  4165ca:	je     0x416610
  4165cc:	test   edi,edi
  4165ce:	je     0x416610
  4165d0:	mov    r8d,DWORD PTR [rsi+0x4]
  4165d4:	test   r8d,r8d
  4165d7:	je     0x416610
  4165d9:	mov    rdi,QWORD PTR [rsi+0x8]
  4165dd:	test   rdi,rdi
  4165e0:	je     0x4165f9
  4165e2:	shl    r8,0x3
  4165e6:	mov    rdx,rdi
  4165e9:	mov    rcx,rax
  4165ec:	call   0x41dbc0
  4165f1:	mov    rcx,rdi
  4165f4:	call   0x41dc08
  4165f9:	mov    eax,0x1
  4165fe:	mov    QWORD PTR [rsi+0x8],rbp
  416602:	mov    DWORD PTR [rsi],ebx
  416604:	add    rsp,0x28
  416608:	pop    rbx
  416609:	pop    rsi
  41660a:	pop    rdi
  41660b:	pop    rbp
  41660c:	ret    
  41660d:	nop    DWORD PTR [rax]
  416610:	mov    rdi,QWORD PTR [rsi+0x8]
  416614:	test   rdi,rdi
  416617:	jne    0x4165f1
  416619:	jmp    0x4165f9
  41661b:	nop    DWORD PTR [rax+rax*1+0x0]
  416620:	xor    eax,eax
  416622:	add    rsp,0x28
  416626:	pop    rbx
  416627:	pop    rsi
  416628:	pop    rdi
  416629:	pop    rbp
  41662a:	ret    
  41662b:	nop    DWORD PTR [rax+rax*1+0x0]
  416630:	push   rsi
  416631:	push   rbx
  416632:	sub    rsp,0x28
  416636:	test   rcx,rcx
  416639:	je     0x41665c
  41663b:	cmp    DWORD PTR [rcx],edx
  41663d:	mov    esi,edx
  41663f:	mov    rbx,rcx
  416642:	jb     0x416653
  416644:	mov    eax,0x1
  416649:	mov    DWORD PTR [rbx+0x4],esi
  41664c:	add    rsp,0x28
  416650:	pop    rbx
  416651:	pop    rsi
  416652:	ret    
  416653:	call   0x416570
  416658:	test   eax,eax
  41665a:	jne    0x416644
  41665c:	xor    eax,eax
  41665e:	add    rsp,0x28
  416662:	pop    rbx
  416663:	pop    rsi
  416664:	ret    
  416665:	nop
  416666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416670:	test   rcx,rcx
  416673:	je     0x416690
  416675:	mov    eax,DWORD PTR [rcx+0x4]
  416678:	cmp    eax,edx
  41667a:	jbe    0x416690
  41667c:	test   eax,eax
  41667e:	je     0x416690
  416680:	mov    rax,QWORD PTR [rcx+0x8]
  416684:	mov    edx,edx
  416686:	mov    rax,QWORD PTR [rax+rdx*8]
  41668a:	ret    
  41668b:	nop    DWORD PTR [rax+rax*1+0x0]
  416690:	xor    eax,eax
  416692:	ret    
  416693:	nop    DWORD PTR [rax]
  416696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4166a0:	xor    eax,eax
  4166a2:	test   rcx,rcx
  4166a5:	je     0x4166c0
  4166a7:	cmp    DWORD PTR [rcx+0x4],edx
  4166aa:	jbe    0x4166c0
  4166ac:	mov    rax,QWORD PTR [rcx+0x8]
  4166b0:	mov    edx,edx
  4166b2:	mov    QWORD PTR [rax+rdx*8],r8
  4166b6:	mov    eax,0x1
  4166bb:	ret    
  4166bc:	nop    DWORD PTR [rax+0x0]
  4166c0:	repz ret 
  4166c2:	nop    DWORD PTR [rax+0x0]
  4166c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4166d0:	push   rdi
  4166d1:	push   rsi
  4166d2:	push   rbx
  4166d3:	sub    rsp,0x20
  4166d7:	xor    eax,eax
  4166d9:	test   rcx,rcx
  4166dc:	je     0x4166e3
  4166de:	cmp    DWORD PTR [rcx+0x4],edx
  4166e1:	jae    0x4166f0
  4166e3:	add    rsp,0x20
  4166e7:	pop    rbx
  4166e8:	pop    rsi
  4166e9:	pop    rdi
  4166ea:	ret    
  4166eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4166f0:	mov    rbx,rcx
  4166f3:	mov    esi,edx
  4166f5:	xor    edx,edx
  4166f7:	mov    rdi,r8
  4166fa:	call   0x416570
  4166ff:	movsxd rax,DWORD PTR [rbx+0x4]
  416703:	mov    rcx,rax
  416706:	mov    r9d,eax
  416709:	shl    rax,0x3
  41670d:	cmp    esi,ecx
  41670f:	jae    0x41672b
  416711:	mov    r10,QWORD PTR [rbx+0x8]
  416715:	sub    r9d,0x1
  416719:	mov    rdx,QWORD PTR [r10+rax*1-0x8]
  41671e:	mov    QWORD PTR [r10+rax*1],rdx
  416722:	sub    rax,0x8
  416726:	cmp    esi,r9d
  416729:	jb     0x416711
  41672b:	mov    rax,QWORD PTR [rbx+0x8]
  41672f:	add    ecx,0x1
  416732:	mov    QWORD PTR [rax+rsi*8],rdi
  416736:	mov    eax,0x1
  41673b:	mov    DWORD PTR [rbx+0x4],ecx
  41673e:	add    rsp,0x20
  416742:	pop    rbx
  416743:	pop    rsi
  416744:	pop    rdi
  416745:	ret    
  416746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416750:	push   rsi
  416751:	push   rbx
  416752:	sub    rsp,0x28
  416756:	test   rcx,rcx
  416759:	je     0x416790
  41675b:	mov    eax,DWORD PTR [rcx+0x4]
  41675e:	cmp    eax,DWORD PTR [rcx]
  416760:	mov    rsi,rdx
  416763:	mov    rbx,rcx
  416766:	jae    0x416784
  416768:	mov    rdx,QWORD PTR [rbx+0x8]
  41676c:	mov    ecx,eax
  41676e:	add    eax,0x1
  416771:	mov    QWORD PTR [rdx+rcx*8],rsi
  416775:	mov    DWORD PTR [rbx+0x4],eax
  416778:	mov    eax,0x1
  41677d:	add    rsp,0x28
  416781:	pop    rbx
  416782:	pop    rsi
  416783:	ret    
  416784:	xor    edx,edx
  416786:	call   0x416570
  41678b:	mov    eax,DWORD PTR [rbx+0x4]
  41678e:	jmp    0x416768
  416790:	xor    eax,eax
  416792:	add    rsp,0x28
  416796:	pop    rbx
  416797:	pop    rsi
  416798:	ret    
  416799:	nop    DWORD PTR [rax+0x0]
  4167a0:	test   rcx,rcx
  4167a3:	je     0x4167c0
  4167a5:	mov    eax,DWORD PTR [rcx+0x4]
  4167a8:	test   eax,eax
  4167aa:	je     0x4167c0
  4167ac:	mov    rdx,QWORD PTR [rcx+0x8]
  4167b0:	sub    eax,0x1
  4167b3:	mov    DWORD PTR [rcx+0x4],eax
  4167b6:	mov    rax,QWORD PTR [rdx+rax*8]
  4167ba:	ret    
  4167bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4167c0:	xor    eax,eax
  4167c2:	ret    
  4167c3:	nop    DWORD PTR [rax]
  4167c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4167d0:	test   rcx,rcx
  4167d3:	je     0x4167f0
  4167d5:	mov    eax,DWORD PTR [rcx+0x4]
  4167d8:	test   eax,eax
  4167da:	je     0x4167f0
  4167dc:	lea    edx,[rax-0x1]
  4167df:	mov    rax,QWORD PTR [rcx+0x8]
  4167e3:	mov    rax,QWORD PTR [rax+rdx*8]
  4167e7:	ret    
  4167e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4167f0:	xor    eax,eax
  4167f2:	ret    
  4167f3:	nop    DWORD PTR [rax]
  4167f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416800:	test   rcx,rcx
  416803:	je     0x416854
  416805:	mov    r11d,DWORD PTR [rcx+0x4]
  416809:	cmp    r11d,edx
  41680c:	jbe    0x416854
  41680e:	test   r11d,r11d
  416811:	je     0x416854
  416813:	mov    r8,QWORD PTR [rcx+0x8]
  416817:	mov    eax,edx
  416819:	add    edx,0x1
  41681c:	cmp    r11d,edx
  41681f:	mov    rax,QWORD PTR [r8+rax*8]
  416823:	ja     0x416834
  416825:	jmp    0x41684b
  416827:	nop    WORD PTR [rax+rax*1+0x0]
  416830:	mov    r8,QWORD PTR [rcx+0x8]
  416834:	mov    r9d,edx
  416837:	mov    r10,QWORD PTR [r8+r9*8]
  41683b:	lea    r9d,[rdx-0x1]
  41683f:	add    edx,0x1
  416842:	cmp    edx,r11d
  416845:	mov    QWORD PTR [r8+r9*8],r10
  416849:	jne    0x416830
  41684b:	sub    r11d,0x1
  41684f:	mov    DWORD PTR [rcx+0x4],r11d
  416853:	ret    
  416854:	xor    eax,eax
  416856:	ret    
  416857:	nop    WORD PTR [rax+rax*1+0x0]
  416860:	push   rsi
  416861:	push   rbx
  416862:	sub    rsp,0x28
  416866:	mov    ebx,DWORD PTR [rcx+0x4]
  416869:	mov    rsi,rcx
  41686c:	lea    eax,[rbx+0x1]
  41686f:	lea    rcx,[rax*8+0x0]
  416877:	call   0x41dbc8
  41687c:	mov    rdx,QWORD PTR [rsi+0x8]
  416880:	lea    r8,[rbx*8+0x0]
  416888:	mov    rcx,rax
  41688b:	call   0x41dbc0
  416890:	mov    QWORD PTR [rax+rbx*8],0x0
  416898:	add    rsp,0x28
  41689c:	pop    rbx
  41689d:	pop    rsi
  41689e:	ret    
  41689f:	nop
  4168a0:	test   rcx,rcx
  4168a3:	je     0x4168e3
  4168a5:	mov    r9d,DWORD PTR [rcx+0x4]
  4168a9:	cmp    r9d,0x0
  4168ad:	je     0x4168e3
  4168af:	mov    r8d,0x0
  4168b5:	mov    eax,0x0
  4168ba:	ja     0x4168d0
  4168bc:	cmp    rdx,rax
  4168bf:	je     0x4168dd
  4168c1:	add    r8,0x1
  4168c5:	cmp    r9d,r8d
  4168c8:	jbe    0x4168e3
  4168ca:	nop    WORD PTR [rax+rax*1+0x0]
  4168d0:	mov    rax,QWORD PTR [rcx+0x8]
  4168d4:	mov    rax,QWORD PTR [rax+r8*8]
  4168d8:	cmp    rdx,rax
  4168db:	jne    0x4168c1
  4168dd:	mov    eax,0x1
  4168e2:	ret    
  4168e3:	xor    eax,eax
  4168e5:	ret    
  4168e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4168f0:	test   rcx,rcx
  4168f3:	je     0x416960
  4168f5:	mov    r9d,DWORD PTR [rcx+0x4]
  4168f9:	xor    eax,eax
  4168fb:	test   r9d,r9d
  4168fe:	je     0x416962
  416900:	mov    r10,QWORD PTR [rcx+0x8]
  416904:	xor    eax,eax
  416906:	cmp    rdx,QWORD PTR [r10]
  416909:	lea    r8,[r10+0x8]
  41690d:	je     0x416964
  41690f:	nop
  416910:	add    eax,0x1
  416913:	cmp    eax,r9d
  416916:	je     0x416960
  416918:	add    r8,0x8
  41691c:	cmp    rdx,QWORD PTR [r8-0x8]
  416920:	jne    0x416910
  416922:	add    eax,0x1
  416925:	cmp    r9d,eax
  416928:	ja     0x416934
  41692a:	jmp    0x416949
  41692c:	nop    DWORD PTR [rax+0x0]
  416930:	mov    r10,QWORD PTR [rcx+0x8]
  416934:	mov    edx,eax
  416936:	mov    r8,QWORD PTR [r10+rdx*8]
  41693a:	lea    edx,[rax-0x1]
  41693d:	add    eax,0x1
  416940:	cmp    eax,r9d
  416943:	mov    QWORD PTR [r10+rdx*8],r8
  416947:	jne    0x416930
  416949:	sub    r9d,0x1
  41694d:	mov    eax,0x1
  416952:	mov    DWORD PTR [rcx+0x4],r9d
  416956:	ret    
  416957:	nop    WORD PTR [rax+rax*1+0x0]
  416960:	xor    eax,eax
  416962:	repz ret 
  416964:	mov    eax,0x1
  416969:	jmp    0x416925
  41696b:	nop    DWORD PTR [rax+rax*1+0x0]
  416970:	push   rsi
  416971:	push   rbx
  416972:	test   rcx,rcx
  416975:	je     0x4169ee
  416977:	mov    r9d,DWORD PTR [rcx+0x4]
  41697b:	test   r9d,r9d
  41697e:	je     0x4169ee
  416980:	mov    r8,QWORD PTR [rcx+0x8]
  416984:	xor    edx,edx
  416986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416990:	lea    esi,[rdx+0x1]
  416993:	cmp    esi,r9d
  416996:	jae    0x4169ea
  416998:	mov    eax,edx
  41699a:	add    edx,0x2
  41699d:	lea    rbx,[r8+rax*8]
  4169a1:	jmp    0x4169ad
  4169a3:	cmp    r9d,edx
  4169a6:	lea    eax,[rdx+0x1]
  4169a9:	jbe    0x4169e3
  4169ab:	mov    edx,eax
  4169ad:	lea    eax,[rdx-0x1]
  4169b0:	mov    rax,QWORD PTR [r8+rax*8]
  4169b4:	cmp    QWORD PTR [rbx],rax
  4169b7:	jne    0x4169a3
  4169b9:	cmp    edx,r9d
  4169bc:	mov    eax,edx
  4169be:	jae    0x4169d7
  4169c0:	mov    r10d,eax
  4169c3:	mov    r11,QWORD PTR [r8+r10*8]
  4169c7:	lea    r10d,[rax-0x1]
  4169cb:	add    eax,0x1
  4169ce:	cmp    eax,r9d
  4169d1:	mov    QWORD PTR [r8+r10*8],r11
  4169d5:	jne    0x4169c0
  4169d7:	sub    r9d,0x1
  4169db:	lea    eax,[rdx+0x1]
  4169de:	cmp    r9d,edx
  4169e1:	ja     0x4169ab
  4169e3:	cmp    esi,r9d
  4169e6:	mov    edx,esi
  4169e8:	jb     0x416990
  4169ea:	mov    DWORD PTR [rcx+0x4],r9d
  4169ee:	mov    eax,0x1
  4169f3:	pop    rbx
  4169f4:	pop    rsi
  4169f5:	ret    
  4169f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a00:	push   rsi
  416a01:	push   rbx
  416a02:	sub    rsp,0x28
  416a06:	mov    rsi,rcx
  416a09:	call   0x416500
  416a0e:	mov    rdx,QWORD PTR [rsi+0x8]
  416a12:	mov    rbx,rax
  416a15:	mov    rax,QWORD PTR [rsi]
  416a18:	mov    rcx,rsi
  416a1b:	mov    QWORD PTR [rbx],rax
  416a1e:	mov    QWORD PTR [rbx+0x8],rdx
  416a22:	call   0x416860
  416a27:	mov    QWORD PTR [rbx+0x8],rax
  416a2b:	mov    rax,rbx
  416a2e:	add    rsp,0x28
  416a32:	pop    rbx
  416a33:	pop    rsi
  416a34:	ret    
  416a35:	nop
  416a36:	nop
  416a37:	nop
  416a38:	nop
  416a39:	nop
  416a3a:	nop
  416a3b:	nop
  416a3c:	nop
  416a3d:	nop
  416a3e:	nop
  416a3f:	nop
  416a40:	sub    rsp,0x28
  416a44:	cmp    ecx,0x6
  416a47:	ja     0x416aa0
  416a49:	lea    rax,[rip+0x13130]        # 0x429b80
  416a50:	mov    edx,ecx
  416a52:	movsxd rdx,DWORD PTR [rax+rdx*4]
  416a56:	add    rax,rdx
  416a59:	jmp    rax
  416a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  416a60:	lea    rax,[rip+0x130ee]        # 0x429b55
  416a67:	add    rsp,0x28
  416a6b:	ret    
  416a6c:	nop    DWORD PTR [rax+0x0]
  416a70:	lea    rax,[rip+0x130d9]        # 0x429b50
  416a77:	add    rsp,0x28
  416a7b:	ret    
  416a7c:	nop    DWORD PTR [rax+0x0]
  416a80:	lea    rax,[rip+0x130d9]        # 0x429b60
  416a87:	add    rsp,0x28
  416a8b:	ret    
  416a8c:	nop    DWORD PTR [rax+0x0]
  416a90:	lea    rax,[rip+0x130c2]        # 0x429b59
  416a97:	add    rsp,0x28
  416a9b:	ret    
  416a9c:	nop    DWORD PTR [rax+0x0]
  416aa0:	mov    edx,ecx
  416aa2:	lea    rcx,[rip+0x130bc]        # 0x429b65
  416aa9:	call   0x40b3d0
  416aae:	xor    eax,eax
  416ab0:	add    rsp,0x28
  416ab4:	ret    
  416ab5:	nop
  416ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ac0:	push   rdi
  416ac1:	push   rsi
  416ac2:	push   rbx
  416ac3:	sub    rsp,0x30
  416ac7:	mov    rdi,rcx
  416aca:	call   0x415f30
  416acf:	mov    rbx,QWORD PTR [rip+0x14c2a]        # 0x42b700
  416ad6:	lea    rdx,[rsp+0x28]
  416adb:	mov    rsi,rax
  416ade:	mov    QWORD PTR [rsp+0x28],0x0
  416ae7:	mov    rcx,QWORD PTR [rbx]
  416aea:	call   0x401530
  416aef:	mov    rcx,QWORD PTR [rsp+0x28]
  416af4:	call   0x416530
  416af9:	call   0x416500
  416afe:	mov    rcx,QWORD PTR [rbx]
  416b01:	mov    rdx,rax
  416b04:	call   0x401550
  416b09:	mov    rdx,QWORD PTR [rbx]
  416b0c:	lea    r8,[rip+0x139d]        # 0x417eb0
  416b13:	mov    r9,rsi
  416b16:	mov    rcx,rdi
  416b19:	call   0x401dc0
  416b1e:	mov    rcx,rsi
  416b21:	call   0x416010
  416b26:	nop
  416b27:	add    rsp,0x30
  416b2b:	pop    rbx
  416b2c:	pop    rsi
  416b2d:	pop    rdi
  416b2e:	ret    
  416b2f:	nop
  416b30:	push   rdi
  416b31:	push   rsi
  416b32:	push   rbx
  416b33:	sub    rsp,0x30
  416b37:	mov    rdi,rcx
  416b3a:	call   0x415f30
  416b3f:	mov    rbx,QWORD PTR [rip+0x14bba]        # 0x42b700
  416b46:	lea    rdx,[rsp+0x28]
  416b4b:	mov    rsi,rax
  416b4e:	mov    QWORD PTR [rsp+0x28],0x0
  416b57:	mov    rcx,QWORD PTR [rbx]
  416b5a:	call   0x401530
  416b5f:	mov    rcx,QWORD PTR [rsp+0x28]
  416b64:	call   0x416530
  416b69:	call   0x416500
  416b6e:	mov    rcx,QWORD PTR [rbx]
  416b71:	mov    rdx,rax
  416b74:	call   0x401550
  416b79:	mov    rdx,QWORD PTR [rbx]
  416b7c:	lea    r8,[rip+0x132d]        # 0x417eb0
  416b83:	mov    r9,rsi
  416b86:	mov    rcx,rdi
  416b89:	call   0x402540
  416b8e:	mov    rcx,rsi
  416b91:	call   0x416010
  416b96:	nop
  416b97:	add    rsp,0x30
  416b9b:	pop    rbx
  416b9c:	pop    rsi
  416b9d:	pop    rdi
  416b9e:	ret    
  416b9f:	nop
  416ba0:	push   r12
  416ba2:	push   rbp
  416ba3:	push   rdi
  416ba4:	push   rsi
  416ba5:	push   rbx
  416ba6:	sub    rsp,0x20
  416baa:	mov    rbx,QWORD PTR [rip+0x14aef]        # 0x42b6a0
  416bb1:	mov    rcx,QWORD PTR [rbx]
  416bb4:	test   rcx,rcx
  416bb7:	je     0x416bc0
  416bb9:	mov    eax,DWORD PTR [rcx+0x8]
  416bbc:	test   eax,eax
  416bbe:	jne    0x416bd0
  416bc0:	add    rsp,0x20
  416bc4:	pop    rbx
  416bc5:	pop    rsi
  416bc6:	pop    rdi
  416bc7:	pop    rbp
  416bc8:	pop    r12
  416bca:	ret    
  416bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  416bd0:	call   0x4164d0
  416bd5:	mov    r12,QWORD PTR [rbx]
  416bd8:	mov    rcx,r12
  416bdb:	call   0x416430
  416be0:	test   r12,r12
  416be3:	mov    rsi,rax
  416be6:	je     0x416c08
  416be8:	mov    DWORD PTR [r12+0x8],0x0
  416bf1:	jmp    0x416c08
  416bf3:	lea    rcx,[rip+0x8bd6]        # 0x41f7d0
  416bfa:	call   0x41db68
  416bff:	test   rax,rax
  416c02:	je     0x416c66
  416c04:	add    rsi,0x1
  416c08:	movsx  edx,BYTE PTR [rsi]
  416c0b:	test   dl,dl
  416c0d:	jne    0x416bf3
  416c0f:	add    rsp,0x20
  416c13:	pop    rbx
  416c14:	pop    rsi
  416c15:	pop    rdi
  416c16:	pop    rbp
  416c17:	pop    r12
  416c19:	jmp    0x405fa0
  416c1e:	mov    r9d,eax
  416c21:	mov    r8,rsi
  416c24:	test   r9b,r9b
  416c27:	je     0x416c0f
  416c29:	lea    rbx,[r8+0x1]
  416c2d:	mov    rdi,rbx
  416c30:	sub    rdi,rsi
  416c33:	cmp    rdi,0x1
  416c37:	mov    rbp,rdi
  416c3a:	je     0x416c55
  416c3c:	cmp    al,0x2a
  416c3e:	je     0x416c55
  416c40:	cmp    rdi,0x43
  416c44:	lea    rdx,[rip+0x12f51]        # 0x429b9c
  416c4b:	mov    rcx,r12
  416c4e:	ja     0x416c95
  416c50:	call   0x416200
  416c55:	mov    r8d,edi
  416c58:	mov    rdx,rsi
  416c5b:	mov    rcx,r12
  416c5e:	call   0x416170
  416c63:	mov    rsi,rbx
  416c66:	movzx  eax,BYTE PTR [rsi]
  416c69:	test   al,al
  416c6b:	je     0x416c1e
  416c6d:	cmp    al,0xa
  416c6f:	je     0x416c1e
  416c71:	mov    r8,rsi
  416c74:	jmp    0x416c86
  416c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c80:	cmp    r9b,0xa
  416c84:	je     0x416c24
  416c86:	add    r8,0x1
  416c8a:	movzx  r9d,BYTE PTR [r8]
  416c8e:	test   r9b,r9b
  416c91:	jne    0x416c80
  416c93:	jmp    0x416c24
  416c95:	call   0x416200
  416c9a:	nop    WORD PTR [rax+rax*1+0x0]
  416ca0:	xor    edi,edi
  416ca2:	cmp    BYTE PTR [rsi+0x41],0x5c
  416ca6:	mov    rdx,rsi
  416ca9:	mov    rcx,r12
  416cac:	setne  dil
  416cb0:	xor    r8d,r8d
  416cb3:	add    rdi,0x41
  416cb7:	cmp    BYTE PTR [rsi+0x41],0x5c
  416cbb:	setne  r8b
  416cbf:	sub    rbp,rdi
  416cc2:	add    rsi,rdi
  416cc5:	add    r8d,0x41
  416cc9:	call   0x416170
  416cce:	lea    rdx,[rip+0x12ece]        # 0x429ba3
  416cd5:	mov    rcx,r12
  416cd8:	call   0x416200
  416cdd:	cmp    rbp,0x42
  416ce1:	ja     0x416ca0
  416ce3:	mov    r8d,ebp
  416ce6:	mov    rdx,rsi
  416ce9:	mov    rcx,r12
  416cec:	call   0x416170
  416cf1:	jmp    0x416c63
  416cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416d00:	sub    rsp,0x38
  416d04:	lea    rax,[rip+0x12eb9]        # 0x429bc4
  416d0b:	cmp    ecx,0x5
  416d0e:	je     0x416d1e
  416d10:	jle    0x416d23
  416d12:	cmp    ecx,0x6
  416d15:	lea    rax,[rip+0x12e97]        # 0x429bb3
  416d1c:	jne    0x416d2f
  416d1e:	add    rsp,0x38
  416d22:	ret    
  416d23:	cmp    ecx,0x1
  416d26:	lea    rax,[rip+0x12e7e]        # 0x429bab
  416d2d:	jge    0x416d1e
  416d2f:	lea    rcx,[rip+0x12e94]        # 0x429bca
  416d36:	call   0x406300
  416d3b:	mov    edx,eax
  416d3d:	xor    eax,eax
  416d3f:	test   edx,edx
  416d41:	jne    0x416d1e
  416d43:	lea    rdx,[rip+0x12e96]        # 0x429be0
  416d4a:	lea    rcx,[rip+0x12e9f]        # 0x429bf0
  416d51:	mov    r8d,0x27d
  416d57:	mov    QWORD PTR [rsp+0x28],rax
  416d5c:	call   0x41da30
  416d61:	mov    rax,QWORD PTR [rsp+0x28]
  416d66:	jmp    0x416d1e
  416d68:	nop    DWORD PTR [rax+rax*1+0x0]
  416d70:	sub    rsp,0x38
  416d74:	cmp    ecx,0x6
  416d77:	ja     0x416df0
  416d79:	lea    rax,[rip+0x12ee0]        # 0x429c60
  416d80:	mov    edx,ecx
  416d82:	movsxd rdx,DWORD PTR [rax+rdx*4]
  416d86:	add    rax,rdx
  416d89:	jmp    rax
  416d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  416d90:	lea    rax,[rip+0x12db9]        # 0x429b50
  416d97:	add    rsp,0x38
  416d9b:	ret    
  416d9c:	nop    DWORD PTR [rax+0x0]
  416da0:	lea    rax,[rip+0x12e6d]        # 0x429c14
  416da7:	add    rsp,0x38
  416dab:	ret    
  416dac:	nop    DWORD PTR [rax+0x0]
  416db0:	lea    rax,[rip+0x12d9e]        # 0x429b55
  416db7:	add    rsp,0x38
  416dbb:	ret    
  416dbc:	nop    DWORD PTR [rax+0x0]
  416dc0:	lea    rax,[rip+0x12d99]        # 0x429b60
  416dc7:	add    rsp,0x38
  416dcb:	ret    
  416dcc:	nop    DWORD PTR [rax+0x0]
  416dd0:	lea    rax,[rip+0x12d82]        # 0x429b59
  416dd7:	add    rsp,0x38
  416ddb:	ret    
  416ddc:	nop    DWORD PTR [rax+0x0]
  416de0:	lea    rax,[rip+0x12e28]        # 0x429c0f
  416de7:	add    rsp,0x38
  416deb:	ret    
  416dec:	nop    DWORD PTR [rax+0x0]
  416df0:	mov    edx,ecx
  416df2:	lea    rcx,[rip+0x12e20]        # 0x429c19
  416df9:	call   0x406300
  416dfe:	mov    edx,eax
  416e00:	xor    eax,eax
  416e02:	test   edx,edx
  416e04:	jne    0x416d97
  416e06:	lea    rdx,[rip+0x12dd3]        # 0x429be0
  416e0d:	lea    rcx,[rip+0x12e24]        # 0x429c38
  416e14:	mov    r8d,0x2af
  416e1a:	mov    QWORD PTR [rsp+0x28],rax
  416e1f:	call   0x41da30
  416e24:	mov    rax,QWORD PTR [rsp+0x28]
  416e29:	jmp    0x416d97
  416e2e:	xchg   ax,ax
  416e30:	sub    rsp,0x38
  416e34:	cmp    ecx,0x6
  416e37:	ja     0x416eb0
  416e39:	lea    rax,[rip+0x12e70]        # 0x429cb0
  416e40:	mov    ecx,ecx
  416e42:	movsxd rdx,DWORD PTR [rax+rcx*4]
  416e46:	add    rax,rdx
  416e49:	jmp    rax
  416e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  416e50:	lea    rax,[rip+0x12e25]        # 0x429c7c
  416e57:	add    rsp,0x38
  416e5b:	ret    
  416e5c:	nop    DWORD PTR [rax+0x0]
  416e60:	lea    rax,[rip+0x12e25]        # 0x429c8c
  416e67:	add    rsp,0x38
  416e6b:	ret    
  416e6c:	nop    DWORD PTR [rax+0x0]
  416e70:	lea    rax,[rip+0x12e1e]        # 0x429c95
  416e77:	add    rsp,0x38
  416e7b:	ret    
  416e7c:	nop    DWORD PTR [rax+0x0]
  416e80:	lea    rax,[rip+0x12e15]        # 0x429c9c
  416e87:	add    rsp,0x38
  416e8b:	ret    
  416e8c:	nop    DWORD PTR [rax+0x0]
  416e90:	lea    rax,[rip+0x12e0e]        # 0x429ca5
  416e97:	add    rsp,0x38
  416e9b:	ret    
  416e9c:	nop    DWORD PTR [rax+0x0]
  416ea0:	lea    rax,[rip+0x12ddd]        # 0x429c84
  416ea7:	add    rsp,0x38
  416eab:	ret    
  416eac:	nop    DWORD PTR [rax+0x0]
  416eb0:	lea    rcx,[rip+0x12d13]        # 0x429bca
  416eb7:	call   0x406300
  416ebc:	mov    edx,eax
  416ebe:	xor    eax,eax
  416ec0:	test   edx,edx
  416ec2:	jne    0x416e57
  416ec4:	lea    rdx,[rip+0x12d15]        # 0x429be0
  416ecb:	lea    rcx,[rip+0x12d1e]        # 0x429bf0
  416ed2:	mov    r8d,0x26d
  416ed8:	mov    QWORD PTR [rsp+0x28],rax
  416edd:	call   0x41da30
  416ee2:	mov    rax,QWORD PTR [rsp+0x28]
  416ee7:	jmp    0x416e57
  416eec:	nop    DWORD PTR [rax+0x0]
  416ef0:	push   r12
  416ef2:	push   rbp
  416ef3:	push   rdi
  416ef4:	push   rsi
  416ef5:	push   rbx
  416ef6:	sub    rsp,0x420
  416efd:	mov    ecx,DWORD PTR [rcx+0x5c]
  416f00:	mov    esi,0x1
  416f05:	lea    r12,[rsp+0x20]
  416f0a:	mov    rbx,rdx
  416f0d:	mov    rdi,r8
  416f10:	call   0x416d70
  416f15:	lea    r8,[rip+0x12db0]        # 0x429ccc
  416f1c:	mov    r9,rax
  416f1f:	mov    edx,0x400
  416f24:	mov    rcx,r12
  416f27:	call   0x40b5e0
  416f2c:	mov    rbp,QWORD PTR [rip+0x149bd]        # 0x42b8f0
  416f33:	movsx  r10d,BYTE PTR [rbx]
  416f37:	test   r10d,r10d
  416f3a:	je     0x416f55
  416f3c:	cmp    r10d,0x2c
  416f40:	je     0x416f48
  416f42:	cmp    r10d,0x20
  416f46:	jne    0x416f70
  416f48:	add    rbx,0x1
  416f4c:	movsx  r10d,BYTE PTR [rbx]
  416f50:	test   r10d,r10d
  416f53:	jne    0x416f3c
  416f55:	mov    rax,rbx
  416f58:	add    rsp,0x420
  416f5f:	pop    rbx
  416f60:	pop    rsi
  416f61:	pop    rdi
  416f62:	pop    rbp
  416f63:	pop    r12
  416f65:	ret    
  416f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416f70:	mov    rcx,QWORD PTR [rbp+0x0]
  416f74:	lea    rdx,[rip+0x12d57]        # 0x429cd2
  416f7b:	mov    r9d,esi
  416f7e:	mov    r8,r12
  416f81:	add    esi,0x1
  416f84:	call   0x406050
  416f89:	mov    rdx,QWORD PTR [rbp+0x0]
  416f8d:	mov    rcx,rdi
  416f90:	call   0x416250
  416f95:	mov    rcx,rbx
  416f98:	mov    rdx,rdi
  416f9b:	call   0x405c30
  416fa0:	lea    rdx,[rip+0x12d35]        # 0x429cdc
  416fa7:	mov    rcx,rdi
  416faa:	mov    rbx,rax
  416fad:	call   0x416200
  416fb2:	jmp    0x416f33
  416fb7:	nop    WORD PTR [rax+rax*1+0x0]
  416fc0:	ret    
  416fc1:	nop    DWORD PTR [rax+rax*1+0x0]
  416fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416fd0:	push   rbx
  416fd1:	sub    rsp,0x20
  416fd5:	mov    rax,QWORD PTR [rcx+0x18]
  416fd9:	test   rax,rax
  416fdc:	je     0x416ff0
  416fde:	mov    rcx,rax
  416fe1:	add    rsp,0x20
  416fe5:	pop    rbx
  416fe6:	jmp    0x406cc0
  416feb:	nop    DWORD PTR [rax+rax*1+0x0]
  416ff0:	mov    rbx,rcx
  416ff3:	lea    rdx,[rip+0x12be6]        # 0x429be0
  416ffa:	lea    rcx,[rip+0x12cdd]        # 0x429cde
  417001:	mov    r8d,0x1bb
  417007:	call   0x41da30
  41700c:	mov    rax,QWORD PTR [rbx+0x18]
  417010:	mov    rcx,rax
  417013:	add    rsp,0x20
  417017:	pop    rbx
  417018:	jmp    0x406cc0
  41701d:	nop    DWORD PTR [rax]
  417020:	push   rsi
  417021:	push   rbx
  417022:	sub    rsp,0x28
  417026:	call   0x416fd0
  41702b:	mov    rcx,rax
  41702e:	mov    rsi,rax
  417031:	call   0x41db50
  417036:	lea    rcx,[rax+0x5]
  41703a:	call   0x415600
  41703f:	mov    rdx,rsi
  417042:	mov    rbx,rax
  417045:	mov    rcx,rax
  417048:	call   0x41db58
  41704d:	mov    rcx,rbx
  417050:	call   0x41db50
  417055:	add    rax,rbx
  417058:	mov    DWORD PTR [rax],0x6d69645f
  41705e:	mov    BYTE PTR [rax+0x4],0x0
  417062:	mov    rax,rbx
  417065:	add    rsp,0x28
  417069:	pop    rbx
  41706a:	pop    rsi
  41706b:	ret    
  41706c:	nop    DWORD PTR [rax+0x0]
  417070:	push   rsi
  417071:	push   rbx
  417072:	sub    rsp,0x28
  417076:	call   0x416fd0
  41707b:	mov    rcx,rax
  41707e:	mov    rsi,rax
  417081:	call   0x41db50
  417086:	lea    rcx,[rax+0x4]
  41708a:	call   0x415600
  41708f:	mov    rdx,rsi
  417092:	mov    rbx,rax
  417095:	mov    rcx,rax
  417098:	call   0x41db58
  41709d:	mov    rcx,rbx
  4170a0:	call   0x41db50
  4170a5:	mov    DWORD PTR [rbx+rax*1],0x64695f
  4170ac:	mov    rax,rbx
  4170af:	add    rsp,0x28
  4170b3:	pop    rbx
  4170b4:	pop    rsi
  4170b5:	ret    
  4170b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4170c0:	push   r15
  4170c2:	push   r14
  4170c4:	push   r13
  4170c6:	push   r12
  4170c8:	push   rbp
  4170c9:	push   rdi
  4170ca:	push   rsi
  4170cb:	push   rbx
  4170cc:	sub    rsp,0x88
  4170d3:	mov    rax,QWORD PTR [rip+0x145f6]        # 0x42b6d0
  4170da:	mov    QWORD PTR [rsp+0xd0],rcx
  4170e2:	mov    rax,QWORD PTR [rax]
  4170e5:	test   rax,rax
  4170e8:	je     0x417e44
  4170ee:	mov    eax,DWORD PTR [rax+0x4]
  4170f1:	mov    DWORD PTR [rsp+0x48],eax
  4170f5:	mov    r13,QWORD PTR [rip+0x14834]        # 0x42b930
  4170fc:	mov    rax,QWORD PTR [r13+0x0]
  417100:	test   rax,rax
  417103:	je     0x417e51
  417109:	mov    r12d,DWORD PTR [rax+0x4]
  41710d:	mov    rax,QWORD PTR [rip+0x1452c]        # 0x42b640
  417114:	mov    rax,QWORD PTR [rax]
  417117:	test   rax,rax
  41711a:	je     0x417e67
  417120:	mov    eax,DWORD PTR [rax+0x4]
  417123:	test   eax,eax
  417125:	mov    DWORD PTR [rsp+0x50],eax
  417129:	mov    rax,QWORD PTR [rip+0x14610]        # 0x42b740
  417130:	setg   BYTE PTR [rsp+0x4f]
  417135:	mov    rax,QWORD PTR [rax]
  417138:	test   rax,rax
  41713b:	je     0x417e87
  417141:	mov    eax,DWORD PTR [rax+0x4]
  417144:	test   eax,eax
  417146:	mov    DWORD PTR [rsp+0x54],eax
  41714a:	setg   BYTE PTR [rsp+0x4e]
  41714f:	lea    rcx,[rip+0x12b99]        # 0x429cef
  417156:	call   0x405f70
  41715b:	mov    rax,QWORD PTR [rip+0x1464e]        # 0x42b7b0
  417162:	mov    rbx,QWORD PTR [rip+0x14787]        # 0x42b8f0
  417169:	lea    rdx,[rip+0x12ba8]        # 0x429d18
  417170:	mov    r9,QWORD PTR [rsp+0xd0]
  417178:	mov    r8,QWORD PTR [rax]
  41717b:	mov    rcx,QWORD PTR [rbx]
  41717e:	call   0x406050
  417183:	mov    rcx,QWORD PTR [rbx]
  417186:	call   0x405f30
  41718b:	mov    r8,QWORD PTR [rsp+0xd0]
  417193:	mov    rcx,QWORD PTR [rbx]
  417196:	lea    rdx,[rip+0x12b87]        # 0x429d24
  41719d:	call   0x406050
  4171a2:	lea    rcx,[rip+0x12b8b]        # 0x429d34
  4171a9:	call   0x405f70
  4171ae:	lea    rcx,[rip+0x12b94]        # 0x429d49
  4171b5:	call   0x405f60
  4171ba:	lea    rcx,[rip+0x12b8b]        # 0x429d4c
  4171c1:	call   0x405f70
  4171c6:	lea    rcx,[rip+0x12b93]        # 0x429d60
  4171cd:	call   0x405f70
  4171d2:	lea    rcx,[rip+0x12b70]        # 0x429d49
  4171d9:	call   0x405f60
  4171de:	lea    rcx,[rip+0x12b88]        # 0x429d6d
  4171e5:	call   0x405f70
  4171ea:	lea    rcx,[rip+0x12b88]        # 0x429d79
  4171f1:	call   0x405f70
  4171f6:	mov    r14d,DWORD PTR [rsp+0x48]
  4171fb:	test   r14d,r14d
  4171fe:	jle    0x417dd0
  417204:	lea    rcx,[rip+0x12ae4]        # 0x429cef
  41720b:	xor    esi,esi
  41720d:	call   0x405f70
  417212:	lea    rcx,[rip+0x12b30]        # 0x429d49
  417219:	call   0x405f60
  41721e:	lea    rcx,[rip+0x12b62]        # 0x429d87
  417225:	call   0x405f70
  41722a:	jmp    0x417257
  41722c:	nop    DWORD PTR [rax+0x0]
  417230:	call   0x416fd0
  417235:	mov    rcx,QWORD PTR [rbx]
  417238:	lea    rdx,[rip+0x12b71]        # 0x429db0
  41723f:	mov    r8,rax
  417242:	add    esi,0x1
  417245:	call   0x406050
  41724a:	mov    rcx,QWORD PTR [rbx]
  41724d:	call   0x405f30
  417252:	cmp    esi,r14d
  417255:	je     0x4172c6
  417257:	mov    rax,QWORD PTR [rip+0x14472]        # 0x42b6d0
  41725e:	mov    edx,esi
  417260:	mov    rcx,QWORD PTR [rax]
  417263:	call   0x416670
  417268:	mov    rcx,rax
  41726b:	mov    rdi,rax
  41726e:	call   0x416fd0
  417273:	mov    rcx,QWORD PTR [rbx]
  417276:	lea    rdx,[rip+0x12b1c]        # 0x429d99
  41727d:	mov    r8,rax
  417280:	call   0x406050
  417285:	mov    rcx,QWORD PTR [rbx]
  417288:	call   0x405f30
  41728d:	mov    rbp,QWORD PTR [rdi+0x2100]
  417294:	mov    rcx,rdi
  417297:	test   rbp,rbp
  41729a:	je     0x417230
  41729c:	call   0x416fd0
  4172a1:	mov    rcx,QWORD PTR [rbx]
  4172a4:	lea    rdx,[rip+0x12b28]        # 0x429dd3
  4172ab:	mov    r8,rax
  4172ae:	mov    r9d,ebp
  4172b1:	add    esi,0x1
  4172b4:	call   0x406050
  4172b9:	mov    rcx,QWORD PTR [rbx]
  4172bc:	call   0x405f30
  4172c1:	cmp    esi,r14d
  4172c4:	jne    0x417257
  4172c6:	call   0x416ba0
  4172cb:	lea    rcx,[rip+0x12a1d]        # 0x429cef
  4172d2:	xor    esi,esi
  4172d4:	call   0x405f70
  4172d9:	lea    rcx,[rip+0x12a69]        # 0x429d49
  4172e0:	call   0x405f60
  4172e5:	lea    rcx,[rip+0x12eb8]        # 0x42a1a4
  4172ec:	call   0x405f70
  4172f1:	mov    edi,DWORD PTR [rsp+0x48]
  4172f5:	mov    rax,QWORD PTR [rip+0x143d4]        # 0x42b6d0
  4172fc:	mov    edx,esi
  4172fe:	add    esi,0x1
  417301:	mov    rcx,QWORD PTR [rax]
  417304:	call   0x416670
  417309:	mov    rcx,rax
  41730c:	call   0x416fd0
  417311:	mov    rcx,QWORD PTR [rbx]
  417314:	lea    rdx,[rip+0x12ad2]        # 0x429ded
  41731b:	mov    r8,rax
  41731e:	call   0x406050
  417323:	mov    rcx,QWORD PTR [rbx]
  417326:	call   0x405f30
  41732b:	cmp    esi,edi
  41732d:	jne    0x4172f5
  41732f:	test   r12d,r12d
  417332:	jle    0x417563
  417338:	lea    rcx,[rip+0x129b0]        # 0x429cef
  41733f:	xor    esi,esi
  417341:	call   0x405f70
  417346:	lea    rcx,[rip+0x129fc]        # 0x429d49
  41734d:	call   0x405f60
  417352:	lea    rcx,[rip+0x12aa4]        # 0x429dfd
  417359:	call   0x405f70
  41735e:	xchg   ax,ax
  417360:	mov    rcx,QWORD PTR [r13+0x0]
  417364:	mov    edx,esi
  417366:	add    esi,0x1
  417369:	call   0x416670
  41736e:	mov    rcx,rax
  417371:	call   0x417070
  417376:	mov    rcx,QWORD PTR [rbx]
  417379:	lea    rdx,[rip+0x12a8a]        # 0x429e0a
  417380:	mov    r8,rax
  417383:	call   0x406050
  417388:	mov    rcx,QWORD PTR [rbx]
  41738b:	call   0x405f30
  417390:	cmp    esi,r12d
  417393:	jne    0x417360
  417395:	lea    rcx,[rip+0x12953]        # 0x429cef
  41739c:	xor    esi,esi
  41739e:	call   0x405f70
  4173a3:	lea    rcx,[rip+0x1299f]        # 0x429d49
  4173aa:	call   0x405f60
  4173af:	lea    rcx,[rip+0x12a62]        # 0x429e18
  4173b6:	call   0x405f70
  4173bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4173c0:	mov    rcx,QWORD PTR [r13+0x0]
  4173c4:	mov    edx,esi
  4173c6:	add    esi,0x1
  4173c9:	call   0x416670
  4173ce:	mov    rcx,rax
  4173d1:	mov    rdi,rax
  4173d4:	call   0x416fd0
  4173d9:	mov    rcx,QWORD PTR [rbx]
  4173dc:	lea    rdx,[rip+0x12a63]        # 0x429e46
  4173e3:	mov    r8,rax
  4173e6:	call   0x406050
  4173eb:	mov    rcx,QWORD PTR [rbx]
  4173ee:	call   0x405f30
  4173f3:	mov    ebp,DWORD PTR [rdi+0x88]
  4173f9:	mov    rcx,rdi
  4173fc:	call   0x416fd0
  417401:	mov    rcx,QWORD PTR [rbx]
  417404:	lea    rdx,[rip+0x12a4c]        # 0x429e57
  41740b:	mov    r8,rax
  41740e:	mov    r9d,ebp
  417411:	call   0x406050
  417416:	mov    rcx,QWORD PTR [rbx]
  417419:	call   0x405f30
  41741e:	cmp    esi,r12d
  417421:	jne    0x4173c0
  417423:	lea    rcx,[rip+0x128c5]        # 0x429cef
  41742a:	xor    esi,esi
  41742c:	call   0x405f70
  417431:	lea    rcx,[rip+0x12911]        # 0x429d49
  417438:	call   0x405f60
  41743d:	lea    rcx,[rip+0x12a2d]        # 0x429e71
  417444:	call   0x405f70
  417449:	nop    DWORD PTR [rax+0x0]
  417450:	mov    rcx,QWORD PTR [r13+0x0]
  417454:	mov    edx,esi
  417456:	call   0x416670
  41745b:	mov    r14d,DWORD PTR [rax+0x88]
  417462:	mov    rdi,rax
  417465:	test   r14d,r14d
  417468:	jle    0x41749a
  41746a:	mov    rcx,rax
  41746d:	call   0x416fd0
  417472:	mov    rcx,rdi
  417475:	mov    rbp,rax
  417478:	call   0x416fd0
  41747d:	mov    rcx,QWORD PTR [rbx]
  417480:	lea    rdx,[rip+0x129fa]        # 0x429e81
  417487:	mov    r8,rax
  41748a:	mov    r9,rbp
  41748d:	call   0x406050
  417492:	mov    rcx,QWORD PTR [rbx]
  417495:	call   0x405f30
  41749a:	add    esi,0x1
  41749d:	cmp    esi,r12d
  4174a0:	jne    0x417450
  4174a2:	lea    rcx,[rip+0x12846]        # 0x429cef
  4174a9:	xor    r14d,r14d
  4174ac:	lea    rsi,[rsp+0x60]
  4174b1:	call   0x405f70
  4174b6:	lea    rcx,[rip+0x1288c]        # 0x429d49
  4174bd:	call   0x405f60
  4174c2:	lea    rcx,[rip+0x129d2]        # 0x429e9b
  4174c9:	call   0x405f70
  4174ce:	mov    DWORD PTR [rsp+0x44],r12d
  4174d3:	jmp    0x4174f5
  4174d5:	mov    rax,QWORD PTR [rdi+0x90]
  4174dc:	cmp    QWORD PTR [rax+0x2100],0x0
  4174e4:	jne    0x417bc0
  4174ea:	add    r14d,0x1
  4174ee:	cmp    r14d,DWORD PTR [rsp+0x44]
  4174f3:	je     0x41755e
  4174f5:	mov    rcx,QWORD PTR [r13+0x0]
  4174f9:	mov    edx,r14d
  4174fc:	call   0x416670
  417501:	mov    rdi,rax
  417504:	mov    rax,QWORD PTR [rax+0x50]
  417508:	cmp    QWORD PTR [rdi+0x48],0x0
  41750d:	mov    r15d,DWORD PTR [rax+0x5c]
  417511:	je     0x4174ea
  417513:	cmp    r15d,0x2
  417517:	je     0x4174ea
  417519:	mov    ebp,DWORD PTR [rdi+0x88]
  41751f:	test   ebp,ebp
  417521:	jne    0x4174d5
  417523:	mov    rcx,rdi
  417526:	add    r14d,0x1
  41752a:	call   0x416fd0
  41752f:	mov    ecx,r15d
  417532:	mov    rdi,rax
  417535:	call   0x416d00
  41753a:	mov    rcx,QWORD PTR [rbx]
  41753d:	lea    rdx,[rip+0x1296d]        # 0x429eb1
  417544:	mov    r8,rax
  417547:	mov    r9,rdi
  41754a:	call   0x406050
  41754f:	mov    rcx,QWORD PTR [rbx]
  417552:	call   0x405f30
  417557:	cmp    r14d,DWORD PTR [rsp+0x44]
  41755c:	jne    0x4174f5
  41755e:	mov    r12d,DWORD PTR [rsp+0x44]
  417563:	call   0x416ba0
  417568:	cmp    BYTE PTR [rsp+0x4e],0x0
  41756d:	jne    0x417c82
  417573:	cmp    BYTE PTR [rsp+0x4f],0x0
  417578:	jne    0x417c82
  41757e:	lea    rcx,[rip+0x1276a]        # 0x429cef
  417585:	call   0x405f70
  41758a:	lea    rcx,[rip+0x1275e]        # 0x429cef
  417591:	call   0x405f70
  417596:	lea    rcx,[rip+0x127ac]        # 0x429d49
  41759d:	call   0x405f60
  4175a2:	lea    rcx,[rip+0x1293f]        # 0x429ee8
  4175a9:	call   0x405f70
  4175ae:	mov    rax,QWORD PTR [rip+0x140db]        # 0x42b690
  4175b5:	lea    r9,[rip+0x12734]        # 0x429cf0
  4175bc:	mov    edx,DWORD PTR [rax]
  4175be:	test   edx,edx
  4175c0:	je     0x4175d2
  4175c2:	test   dh,0x2
  4175c5:	lea    r9,[rip+0x1272f]        # 0x429cfb
  4175cc:	je     0x417e2c
  4175d2:	mov    r8,QWORD PTR [rsp+0xd0]
  4175da:	mov    rcx,QWORD PTR [rbx]
  4175dd:	lea    rdx,[rip+0x12934]        # 0x429f18
  4175e4:	call   0x406050
  4175e9:	mov    rcx,QWORD PTR [rbx]
  4175ec:	call   0x405f30
  4175f1:	lea    rcx,[rip+0x12943]        # 0x429f3b
  4175f8:	call   0x405f70
  4175fd:	call   0x416ba0
  417602:	mov    r11d,DWORD PTR [rsp+0x48]
  417607:	test   r11d,r11d
  41760a:	jle    0x4176a9
  417610:	lea    rcx,[rip+0x126d8]        # 0x429cef
  417617:	xor    edi,edi
  417619:	call   0x405f70
  41761e:	lea    rcx,[rip+0x12724]        # 0x429d49
  417625:	call   0x405f60
  41762a:	lea    rcx,[rip+0x1291f]        # 0x429f50
  417631:	call   0x405f70
  417636:	mov    r14d,DWORD PTR [rsp+0x48]
  41763b:	nop    DWORD PTR [rax+rax*1+0x0]
  417640:	mov    rax,QWORD PTR [rip+0x14089]        # 0x42b6d0
  417647:	mov    edx,edi
  417649:	add    edi,0x1
  41764c:	mov    rcx,QWORD PTR [rax]
  41764f:	call   0x416670
  417654:	mov    rsi,rax
  417657:	mov    rcx,rax
  41765a:	call   0x417020
  41765f:	mov    rcx,rsi
  417662:	mov    r15,rax
  417665:	call   0x416fd0
  41766a:	mov    rcx,QWORD PTR [rsi+0x10]
  41766e:	mov    rbp,rax
  417671:	call   0x406cc0
  417676:	mov    QWORD PTR [rsp+0x20],r15
  41767b:	mov    rcx,QWORD PTR [rbx]
  41767e:	lea    rdx,[rip+0x128e3]        # 0x429f68
  417685:	mov    r8,rax
  417688:	mov    r9,rbp
  41768b:	call   0x406050
  417690:	mov    rcx,QWORD PTR [rbx]
  417693:	call   0x405f30
  417698:	lea    rcx,[rip+0x1289c]        # 0x429f3b
  41769f:	call   0x405f70
  4176a4:	cmp    edi,r14d
  4176a7:	jne    0x417640
  4176a9:	call   0x416ba0
  4176ae:	test   r12d,r12d
  4176b1:	jle    0x4177ef
  4176b7:	lea    rcx,[rip+0x12631]        # 0x429cef
  4176be:	xor    ebp,ebp
  4176c0:	call   0x405f70
  4176c5:	lea    rcx,[rip+0x1267d]        # 0x429d49
  4176cc:	call   0x405f60
  4176d1:	lea    rcx,[rip+0x128ba]        # 0x429f92
  4176d8:	call   0x405f70
  4176dd:	mov    DWORD PTR [rsp+0x44],r12d
  4176e2:	mov    rcx,QWORD PTR [r13+0x0]
  4176e6:	mov    edx,ebp
  4176e8:	xor    esi,esi
  4176ea:	call   0x416670
  4176ef:	lea    rcx,[rip+0x125f9]        # 0x429cef
  4176f6:	mov    rdi,rax
  4176f9:	mov    r14,QWORD PTR [rax+0x50]
  4176fd:	call   0x405f70
  417702:	mov    r8d,DWORD PTR [rdi+0x88]
  417709:	test   r8d,r8d
  41770c:	jle    0x417763
  41770e:	xchg   ax,ax
  417710:	sub    r8d,esi
  417713:	add    esi,0x1
  417716:	sub    r8d,0x1
  41771a:	movsxd r8,r8d
  41771d:	mov    rcx,QWORD PTR [rdi+r8*8+0x90]
  417725:	call   0x417020
  41772a:	mov    rcx,rdi
  41772d:	mov    r12,rax
  417730:	call   0x416fd0
  417735:	mov    QWORD PTR [rsp+0x20],r12
  41773a:	mov    rcx,QWORD PTR [rbx]
  41773d:	lea    rdx,[rip+0x1285f]        # 0x429fa3
  417744:	mov    r8,rax
  417747:	mov    r9d,esi
  41774a:	call   0x406050
  41774f:	mov    rcx,QWORD PTR [rbx]
  417752:	call   0x405f30
  417757:	mov    r8d,DWORD PTR [rdi+0x88]
  41775e:	cmp    r8d,esi
  417761:	jg     0x417710
  417763:	mov    rcx,rdi
  417766:	lea    r12,[rip+0x125a9]        # 0x429d16
  41776d:	call   0x417070
  417772:	mov    r10d,DWORD PTR [rdi+0x88]
  417779:	mov    rsi,rax
  41777c:	test   r10d,r10d
  41777f:	jne    0x417ba0
  417785:	mov    rcx,rdi
  417788:	add    ebp,0x1
  41778b:	call   0x416fd0
  417790:	mov    ecx,DWORD PTR [r14+0x5c]
  417794:	mov    r15,rax
  417797:	call   0x416e30
  41779c:	mov    rcx,QWORD PTR [rdi+0x10]
  4177a0:	mov    r14,rax
  4177a3:	call   0x406cc0
  4177a8:	mov    QWORD PTR [rsp+0x30],rsi
  4177ad:	mov    QWORD PTR [rsp+0x28],r12
  4177b2:	lea    rdx,[rip+0x12807]        # 0x429fc0
  4177b9:	mov    QWORD PTR [rsp+0x20],r15
  4177be:	mov    rcx,QWORD PTR [rbx]
  4177c1:	mov    r8,rax
  4177c4:	mov    r9,r14
  4177c7:	call   0x406050
  4177cc:	mov    rcx,QWORD PTR [rbx]
  4177cf:	call   0x405f30
  4177d4:	lea    rcx,[rip+0x12760]        # 0x429f3b
  4177db:	call   0x405f70
  4177e0:	cmp    ebp,DWORD PTR [rsp+0x44]
  4177e4:	jne    0x4176e2
  4177ea:	mov    r12d,DWORD PTR [rsp+0x44]
  4177ef:	call   0x416ba0
  4177f4:	cmp    BYTE PTR [rsp+0x4e],0x0
  4177f9:	je     0x417851
  4177fb:	lea    rcx,[rip+0x124ed]        # 0x429cef
  417802:	xor    ebx,ebx
  417804:	call   0x405f70
  417809:	lea    rcx,[rip+0x12539]        # 0x429d49
  417810:	call   0x405f60
  417815:	lea    rcx,[rip+0x127d7]        # 0x429ff3
  41781c:	call   0x405f70
  417821:	mov    esi,DWORD PTR [rsp+0x54]
  417825:	mov    rax,QWORD PTR [rip+0x13f14]        # 0x42b740
  41782c:	mov    edx,ebx
  41782e:	add    ebx,0x1
  417831:	mov    rcx,QWORD PTR [rax]
  417834:	call   0x416670
  417839:	mov    rcx,rax
  41783c:	call   0x416ac0
  417841:	cmp    esi,ebx
  417843:	jg     0x417825
  417845:	lea    rcx,[rip+0x124a3]        # 0x429cef
  41784c:	call   0x405f70
  417851:	call   0x416ba0
  417856:	cmp    BYTE PTR [rsp+0x4f],0x0
  41785b:	je     0x4178bc
  41785d:	lea    rcx,[rip+0x1248b]        # 0x429cef
  417864:	xor    ebx,ebx
  417866:	call   0x405f70
  41786b:	lea    rcx,[rip+0x124d7]        # 0x429d49
  417872:	call   0x405f60
  417877:	lea    rcx,[rip+0x12792]        # 0x42a010
  41787e:	call   0x405f70
  417883:	mov    esi,DWORD PTR [rsp+0x50]
  417887:	nop    WORD PTR [rax+rax*1+0x0]
  417890:	mov    rax,QWORD PTR [rip+0x13da9]        # 0x42b640
  417897:	mov    edx,ebx
  417899:	add    ebx,0x1
  41789c:	mov    rcx,QWORD PTR [rax]
  41789f:	call   0x416670
  4178a4:	mov    rcx,rax
  4178a7:	call   0x416ac0
  4178ac:	cmp    esi,ebx
  4178ae:	jg     0x417890
  4178b0:	lea    rcx,[rip+0x12438]        # 0x429cef
  4178b7:	call   0x405f70
  4178bc:	call   0x416ba0
  4178c1:	mov    rax,QWORD PTR [rip+0x13f88]        # 0x42b850
  4178c8:	mov    r9d,DWORD PTR [rax]
  4178cb:	test   r9d,r9d
  4178ce:	jne    0x417df7
  4178d4:	lea    rcx,[rip+0x12414]        # 0x429cef
  4178db:	call   0x405f70
  4178e0:	lea    rcx,[rip+0x12462]        # 0x429d49
  4178e7:	call   0x405f60
  4178ec:	lea    rcx,[rip+0x12795]        # 0x42a088
  4178f3:	call   0x405f70
  4178f8:	lea    rcx,[rip+0x1279b]        # 0x42a09a
  4178ff:	call   0x405f70
  417904:	lea    rcx,[rip+0x12630]        # 0x429f3b
  41790b:	call   0x405f70
  417910:	lea    rcx,[rip+0x123d8]        # 0x429cef
  417917:	call   0x405f70
  41791c:	call   0x416ba0
  417921:	mov    rax,QWORD PTR [rip+0x13e38]        # 0x42b760
  417928:	mov    r8d,DWORD PTR [rax]
  41792b:	test   r8d,r8d
  41792e:	jne    0x417b12
  417934:	test   r12d,r12d
  417937:	jle    0x417a6f
  41793d:	lea    rcx,[rip+0x123ab]        # 0x429cef
  417944:	xor    ebx,ebx
  417946:	call   0x405f70
  41794b:	lea    rcx,[rip+0x1239d]        # 0x429cef
  417952:	call   0x405f70
  417957:	lea    rcx,[rip+0x123eb]        # 0x429d49
  41795e:	call   0x405f60
  417963:	lea    rcx,[rip+0x1274e]        # 0x42a0b8
  41796a:	call   0x405f70
  41796f:	jmp    0x417979
  417971:	add    ebx,0x1
  417974:	cmp    ebx,r12d
  417977:	je     0x4179a5
  417979:	mov    rcx,QWORD PTR [r13+0x0]
  41797d:	mov    edx,ebx
  41797f:	call   0x416670
  417984:	cmp    QWORD PTR [rax+0x48],0x0
  417989:	je     0x417971
  41798b:	mov    ecx,DWORD PTR [rax+0x88]
  417991:	test   ecx,ecx
  417993:	jne    0x417971
  417995:	mov    rcx,rax
  417998:	add    ebx,0x1
  41799b:	call   0x416b30
  4179a0:	cmp    ebx,r12d
  4179a3:	jne    0x417979
  4179a5:	lea    rcx,[rip+0x12343]        # 0x429cef
  4179ac:	lea    rbp,[rsp+0x60]
  4179b1:	xor    esi,esi
  4179b3:	call   0x405f70
  4179b8:	lea    rcx,[rip+0x12330]        # 0x429cef
  4179bf:	call   0x405f70
  4179c4:	lea    rcx,[rip+0x12324]        # 0x429cef
  4179cb:	call   0x405f70
  4179d0:	lea    rcx,[rip+0x12372]        # 0x429d49
  4179d7:	call   0x405f60
  4179dc:	lea    rcx,[rip+0x12705]        # 0x42a0e8
  4179e3:	call   0x405f70
  4179e8:	mov    rdi,QWORD PTR [rip+0x13d11]        # 0x42b700
  4179ef:	nop
  4179f0:	mov    rcx,QWORD PTR [r13+0x0]
  4179f4:	mov    edx,esi
  4179f6:	call   0x416670
  4179fb:	cmp    QWORD PTR [rax+0x48],0x0
  417a00:	je     0x417a14
  417a02:	mov    edx,DWORD PTR [rax+0x88]
  417a08:	test   edx,edx
  417a0a:	jle    0x417a14
  417a0c:	mov    rcx,rax
  417a0f:	call   0x416b30
  417a14:	mov    rcx,QWORD PTR [rdi]
  417a17:	mov    rdx,rbp
  417a1a:	call   0x401530
  417a1f:	mov    rcx,QWORD PTR [rsp+0x60]
  417a24:	test   rcx,rcx
  417a27:	je     0x417dda
  417a2d:	xor    ebx,ebx
  417a2f:	jmp    0x417a4f
  417a31:	mov    eax,DWORD PTR [rcx+0x4]
  417a34:	cmp    ebx,eax
  417a36:	jge    0x417a60
  417a38:	mov    edx,ebx
  417a3a:	add    ebx,0x1
  417a3d:	call   0x416670
  417a42:	mov    rcx,rax
  417a45:	call   0x405f70
  417a4a:	mov    rcx,QWORD PTR [rsp+0x60]
  417a4f:	test   rcx,rcx
  417a52:	jne    0x417a31
  417a54:	xor    eax,eax
  417a56:	cmp    ebx,eax
  417a58:	jl     0x417a38
  417a5a:	nop    WORD PTR [rax+rax*1+0x0]
  417a60:	xor    edx,edx
  417a62:	add    esi,0x1
  417a65:	call   0x416630
  417a6a:	cmp    esi,r12d
  417a6d:	jne    0x4179f0
  417a6f:	lea    rcx,[rip+0x126b6]        # 0x42a12c
  417a76:	call   0x405f70
  417a7b:	lea    rcx,[rip+0x124b9]        # 0x429f3b
  417a82:	call   0x405f70
  417a87:	lea    rcx,[rip+0x126b4]        # 0x42a142
  417a8e:	call   0x405f70
  417a93:	mov    rax,QWORD PTR [rip+0x1b1a6]        # 0x432c40
  417a9a:	test   rax,rax
  417a9d:	je     0x417b12
  417a9f:	mov    eax,DWORD PTR [rax+0x4]
  417aa2:	test   eax,eax
  417aa4:	jle    0x417b12
  417aa6:	lea    rcx,[rip+0x12242]        # 0x429cef
  417aad:	xor    ebx,ebx
  417aaf:	call   0x405f70
  417ab4:	jmp    0x417ae4
  417ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417ac0:	mov    eax,DWORD PTR [rcx+0x4]
  417ac3:	cmp    ebx,eax
  417ac5:	jge    0x417af6
  417ac7:	mov    edx,ebx
  417ac9:	add    ebx,0x1
  417acc:	call   0x416670
  417ad1:	mov    rsi,rax
  417ad4:	mov    rcx,rax
  417ad7:	call   0x405f30
  417adc:	mov    rcx,rsi
  417adf:	call   0x416010
  417ae4:	mov    rcx,QWORD PTR [rip+0x1b155]        # 0x432c40
  417aeb:	test   rcx,rcx
  417aee:	jne    0x417ac0
  417af0:	xor    eax,eax
  417af2:	cmp    ebx,eax
  417af4:	jl     0x417ac7
  417af6:	call   0x416530
  417afb:	lea    rcx,[rip+0x121ed]        # 0x429cef
  417b02:	mov    QWORD PTR [rip+0x1b133],0x0        # 0x432c40
  417b0d:	call   0x405f70
  417b12:	call   0x416ba0
  417b17:	lea    rcx,[rip+0x121d1]        # 0x429cef
  417b1e:	call   0x405f70
  417b23:	lea    rcx,[rip+0x1261c]        # 0x42a146
  417b2a:	call   0x405f70
  417b2f:	lea    rcx,[rip+0x1222a]        # 0x429d60
  417b36:	call   0x405f70
  417b3b:	lea    rcx,[rip+0x121f2]        # 0x429d34
  417b42:	call   0x405f70
  417b47:	lea    rcx,[rip+0x12613]        # 0x42a161
  417b4e:	call   0x405f70
  417b53:	lea    rcx,[rip+0x12624]        # 0x42a17e
  417b5a:	call   0x405f70
  417b5f:	lea    rcx,[rip+0x12633]        # 0x42a199
  417b66:	call   0x405f70
  417b6b:	lea    rcx,[rip+0x1262c]        # 0x42a19e
  417b72:	call   0x405f70
  417b77:	lea    rcx,[rip+0x125c4]        # 0x42a142
  417b7e:	call   0x405f70
  417b83:	call   0x416ba0
  417b88:	nop
  417b89:	add    rsp,0x88
  417b90:	pop    rbx
  417b91:	pop    rsi
  417b92:	pop    rdi
  417b93:	pop    rbp
  417b94:	pop    r12
  417b96:	pop    r13
  417b98:	pop    r14
  417b9a:	pop    r15
  417b9c:	ret    
  417b9d:	nop    DWORD PTR [rax]
  417ba0:	mov    rcx,rdi
  417ba3:	call   0x416fd0
  417ba8:	lea    rdx,[rip+0x12406]        # 0x429fb5
  417baf:	mov    rcx,rax
  417bb2:	call   0x415900
  417bb7:	mov    r12,rax
  417bba:	jmp    0x417785
  417bbf:	nop
  417bc0:	call   0x415f30
  417bc5:	mov    r12d,DWORD PTR [rdi+0x88]
  417bcc:	mov    rbp,rax
  417bcf:	sub    r12d,0x1
  417bd3:	js     0x417c10
  417bd5:	movsxd rax,r12d
  417bd8:	lea    r8,[rip+0x122d9]        # 0x429eb8
  417bdf:	mov    edx,0x20
  417be4:	mov    rax,QWORD PTR [rdi+rax*8+0x90]
  417bec:	mov    rcx,rsi
  417bef:	sub    r12d,0x1
  417bf3:	mov    r9d,DWORD PTR [rax+0x2100]
  417bfa:	call   0x40b5e0
  417bff:	mov    rdx,rsi
  417c02:	mov    rcx,rbp
  417c05:	call   0x416200
  417c0a:	cmp    r12d,0xffffffff
  417c0e:	jne    0x417bd5
  417c10:	mov    rcx,rbp
  417c13:	call   0x405e30
  417c18:	test   rbp,rbp
  417c1b:	lea    rdx,[rip+0x120cd]        # 0x429cef
  417c22:	je     0x417c36
  417c24:	mov    rdx,QWORD PTR [rbp+0x10]
  417c28:	lea    rax,[rip+0x120c0]        # 0x429cef
  417c2f:	test   rdx,rdx
  417c32:	cmove  rdx,rax
  417c36:	mov    rcx,rdi
  417c39:	mov    QWORD PTR [rsp+0x58],rdx
  417c3e:	call   0x416fd0
  417c43:	mov    ecx,r15d
  417c46:	mov    rdi,rax
  417c49:	call   0x416d00
  417c4e:	mov    rdx,QWORD PTR [rsp+0x58]
  417c53:	mov    r8,rax
  417c56:	mov    r9,rdi
  417c59:	mov    QWORD PTR [rsp+0x20],rdx
  417c5e:	mov    rcx,QWORD PTR [rbx]
  417c61:	lea    rdx,[rip+0x12255]        # 0x429ebd
  417c68:	call   0x406050
  417c6d:	mov    rcx,QWORD PTR [rbx]
  417c70:	call   0x405f30
  417c75:	mov    rcx,rbp
  417c78:	call   0x416010
  417c7d:	jmp    0x4174ea
  417c82:	lea    rsi,[rsp+0x60]
  417c87:	lea    rdx,[rsi+0x1c]
  417c8b:	mov    rax,rsi
  417c8e:	xchg   ax,ax
  417c90:	mov    DWORD PTR [rax],0x0
  417c96:	add    rax,0x4
  417c9a:	cmp    rax,rdx
  417c9d:	jne    0x417c90
  417c9f:	xor    edi,edi
  417ca1:	cmp    BYTE PTR [rsp+0x4e],0x0
  417ca6:	mov    ebp,DWORD PTR [rsp+0x54]
  417caa:	je     0x417ce6
  417cac:	nop    DWORD PTR [rax+0x0]
  417cb0:	mov    rax,QWORD PTR [rip+0x13a89]        # 0x42b740
  417cb7:	mov    edx,edi
  417cb9:	mov    rcx,QWORD PTR [rax]
  417cbc:	call   0x416670
  417cc1:	mov    rdx,QWORD PTR [rax+0x48]
  417cc5:	mov    rax,QWORD PTR [rax+0x50]
  417cc9:	mov    rdx,QWORD PTR [rdx+0x10]
  417ccd:	movsxd rax,DWORD PTR [rax+0x5c]
  417cd1:	test   edx,edx
  417cd3:	je     0x417cdf
  417cd5:	cmp    edx,DWORD PTR [rsp+rax*4+0x60]
  417cd9:	jle    0x417cdf
  417cdb:	mov    DWORD PTR [rsp+rax*4+0x60],edx
  417cdf:	add    edi,0x1
  417ce2:	cmp    ebp,edi
  417ce4:	jg     0x417cb0
  417ce6:	xor    edi,edi
  417ce8:	cmp    BYTE PTR [rsp+0x4f],0x0
  417ced:	mov    ebp,DWORD PTR [rsp+0x50]
  417cf1:	je     0x417d29
  417cf3:	mov    rax,QWORD PTR [rip+0x13946]        # 0x42b640
  417cfa:	mov    edx,edi
  417cfc:	mov    rcx,QWORD PTR [rax]
  417cff:	call   0x416670
  417d04:	mov    rdx,QWORD PTR [rax+0x48]
  417d08:	mov    rax,QWORD PTR [rax+0x50]
  417d0c:	mov    rdx,QWORD PTR [rdx+0x10]
  417d10:	movsxd rax,DWORD PTR [rax+0x5c]
  417d14:	test   edx,edx
  417d16:	je     0x417d22
  417d18:	cmp    edx,DWORD PTR [rsp+rax*4+0x60]
  417d1c:	jle    0x417d22
  417d1e:	mov    DWORD PTR [rsp+rax*4+0x60],edx
  417d22:	add    edi,0x1
  417d25:	cmp    ebp,edi
  417d27:	jg     0x417cf3
  417d29:	lea    rcx,[rip+0x11fbf]        # 0x429cef
  417d30:	mov    ebp,0x2
  417d35:	mov    edi,0x1
  417d3a:	call   0x405f70
  417d3f:	lea    rcx,[rip+0x12003]        # 0x429d49
  417d46:	call   0x405f60
  417d4b:	lea    rcx,[rip+0x12176]        # 0x429ec8
  417d52:	call   0x405f70
  417d57:	jmp    0x417db1
  417d59:	nop    DWORD PTR [rax+0x0]
  417d60:	cmp    edi,0x6
  417d63:	je     0x417e99
  417d69:	test   r14d,r14d
  417d6c:	lea    r15,[rip+0x11e38]        # 0x429bab
  417d73:	jle    0x417d9e
  417d75:	mov    ecx,edi
  417d77:	call   0x416d70
  417d7c:	mov    DWORD PTR [rsp+0x20],r14d
  417d81:	mov    rcx,QWORD PTR [rbx]
  417d84:	lea    rdx,[rip+0x1214f]        # 0x429eda
  417d8b:	mov    r9,rax
  417d8e:	mov    r8,r15
  417d91:	call   0x406050
  417d96:	mov    rcx,QWORD PTR [rbx]
  417d99:	call   0x405f30
  417d9e:	cmp    ebp,0x7
  417da1:	je     0x41757e
  417da7:	add    edi,0x1
  417daa:	add    ebp,0x1
  417dad:	add    rsi,0x4
  417db1:	cmp    edi,0x5
  417db4:	mov    r14d,DWORD PTR [rsi+0x4]
  417db8:	jne    0x417d60
  417dba:	test   r14d,r14d
  417dbd:	lea    r15,[rip+0x11d9c]        # 0x429b60
  417dc4:	jg     0x417d75
  417dc6:	jmp    0x417da7
  417dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  417dd0:	call   0x416ba0
  417dd5:	jmp    0x41732f
  417dda:	lea    rcx,[rip+0x12335]        # 0x42a116
  417de1:	lea    rdx,[rip+0x1231d]        # 0x42a105
  417de8:	call   0x406300
  417ded:	mov    rcx,QWORD PTR [rsp+0x60]
  417df2:	jmp    0x417a2d
  417df7:	lea    rcx,[rip+0x11f4b]        # 0x429d49
  417dfe:	call   0x405f60
  417e03:	lea    rcx,[rip+0x12226]        # 0x42a030
  417e0a:	call   0x405f70
  417e0f:	lea    rcx,[rip+0x1224a]        # 0x42a060
  417e16:	call   0x405f70
  417e1b:	lea    rcx,[rip+0x12119]        # 0x429f3b
  417e22:	call   0x405f70
  417e27:	jmp    0x4178d4
  417e2c:	lea    rcx,[rip+0x120c7]        # 0x429efa
  417e33:	call   0x40b3d0
  417e38:	lea    r9,[rip+0x11eb1]        # 0x429cf0
  417e3f:	jmp    0x4175d2
  417e44:	mov    DWORD PTR [rsp+0x48],0x0
  417e4c:	jmp    0x4170f5
  417e51:	mov    rax,QWORD PTR [rip+0x137e8]        # 0x42b640
  417e58:	xor    r12d,r12d
  417e5b:	mov    rax,QWORD PTR [rax]
  417e5e:	test   rax,rax
  417e61:	jne    0x417120
  417e67:	mov    rax,QWORD PTR [rip+0x138d2]        # 0x42b740
  417e6e:	mov    BYTE PTR [rsp+0x4f],0x0
  417e73:	mov    DWORD PTR [rsp+0x50],0x0
  417e7b:	mov    rax,QWORD PTR [rax]
  417e7e:	test   rax,rax
  417e81:	jne    0x417141
  417e87:	mov    BYTE PTR [rsp+0x4e],0x0
  417e8c:	mov    DWORD PTR [rsp+0x54],0x0
  417e94:	jmp    0x41714f
  417e99:	test   r14d,r14d
  417e9c:	jle    0x41757e
  417ea2:	lea    r15,[rip+0x11d0a]        # 0x429bb3
  417ea9:	jmp    0x417d75
  417eae:	xchg   ax,ax
  417eb0:	push   r15
  417eb2:	push   r14
  417eb4:	push   r13
  417eb6:	push   r12
  417eb8:	push   rbp
  417eb9:	push   rdi
  417eba:	push   rsi
  417ebb:	push   rbx
  417ebc:	sub    rsp,0x88
  417ec3:	mov    eax,DWORD PTR [rdx+0x8]
  417ec6:	mov    r13,rcx
  417ec9:	mov    rbx,rdx
  417ecc:	mov    r12,r8
  417ecf:	mov    edi,r9d
  417ed2:	cmp    eax,0x67
  417ed5:	je     0x418342
  417edb:	cmp    eax,0x66
  417ede:	je     0x417f20
  417ee0:	lea    rcx,[rip+0x124a9]        # 0x42a390
  417ee7:	call   0x406300
  417eec:	test   eax,eax
  417eee:	je     0x417f04
  417ef0:	add    rsp,0x88
  417ef7:	pop    rbx
  417ef8:	pop    rsi
  417ef9:	pop    rdi
  417efa:	pop    rbp
  417efb:	pop    r12
  417efd:	pop    r13
  417eff:	pop    r14
  417f01:	pop    r15
  417f03:	ret    
  417f04:	lea    rdx,[rip+0x11cd5]        # 0x429be0
  417f0b:	lea    rcx,[rip+0x1249e]        # 0x42a3b0
  417f12:	mov    r8d,0x2ca
  417f18:	call   0x41da30
  417f1d:	jmp    0x417ef0
  417f1f:	nop
  417f20:	mov    rax,QWORD PTR [rdx+0x50]
  417f24:	mov    eax,DWORD PTR [rax+0x5c]
  417f27:	cmp    eax,0x2
  417f2a:	mov    DWORD PTR [rsp+0x44],eax
  417f2e:	je     0x4185c0
  417f34:	test   r9d,r9d
  417f37:	je     0x418490
  417f3d:	mov    rax,QWORD PTR [rip+0x1acfc]        # 0x432c40
  417f44:	test   rax,rax
  417f47:	je     0x418622
  417f4d:	mov    ebp,DWORD PTR [rax+0x4]
  417f50:	mov    rcx,rbx
  417f53:	call   0x416fd0
  417f58:	mov    rcx,rbx
  417f5b:	mov    r14,rax
  417f5e:	call   0x416fd0
  417f63:	mov    rsi,QWORD PTR [rip+0x13986]        # 0x42b8f0
  417f6a:	mov    QWORD PTR [rsp+0x20],r14
  417f6f:	lea    rdx,[rip+0x12312]        # 0x42a288
  417f76:	mov    r8,rax
  417f79:	mov    r9d,ebp
  417f7c:	mov    rcx,QWORD PTR [rsi]
  417f7f:	call   0x406050
  417f84:	lea    rdx,[rsp+0x58]
  417f89:	mov    rcx,r13
  417f8c:	call   0x401530
  417f91:	cmp    QWORD PTR [rsp+0x58],0x0
  417f97:	je     0x418647
  417f9d:	mov    rcx,QWORD PTR [rsi]
  417fa0:	call   0x416430
  417fa5:	mov    rcx,QWORD PTR [rsp+0x58]
  417faa:	mov    rdx,rax
  417fad:	call   0x416750
  417fb2:	call   0x415f30
  417fb7:	mov    rdx,QWORD PTR [rip+0x136e2]        # 0x42b6a0
  417fbe:	lea    rcx,[rip+0x11d2a]        # 0x429cef
  417fc5:	mov    rdx,QWORD PTR [rdx]
  417fc8:	mov    QWORD PTR [rsp+0x48],rdx
  417fcd:	mov    rdx,QWORD PTR [rip+0x136cc]        # 0x42b6a0
  417fd4:	mov    QWORD PTR [rdx],rax
  417fd7:	call   0x405f70
  417fdc:	mov    rcx,rbx
  417fdf:	call   0x416fd0
  417fe4:	mov    rcx,rbx
  417fe7:	mov    r13,rax
  417fea:	call   0x416fd0
  417fef:	mov    QWORD PTR [rsp+0x20],r13
  417ff4:	mov    rcx,QWORD PTR [rsi]
  417ff7:	lea    rdx,[rip+0x122b2]        # 0x42a2b0
  417ffe:	mov    r9d,ebp
  418001:	mov    r8,rax
  418004:	call   0x406050
  418009:	mov    rcx,QWORD PTR [rsi]
  41800c:	call   0x405f30
  418011:	lea    rcx,[rip+0x122bc]        # 0x42a2d4
  418018:	call   0x405f70
  41801d:	mov    rcx,rbx
  418020:	call   0x416fd0
  418025:	mov    rcx,QWORD PTR [rsi]
  418028:	lea    rdx,[rip+0x122b2]        # 0x42a2e1
  41802f:	mov    r8,rax
  418032:	call   0x406050
  418037:	mov    rcx,QWORD PTR [rsi]
  41803a:	call   0x405f30
  41803f:	lea    rcx,[rip+0x11cee]        # 0x429d34
  418046:	call   0x405f70
  41804b:	lea    rcx,[rip+0x11d0e]        # 0x429d60
  418052:	call   0x405f70
  418057:	lea    rcx,[rip+0x11c91]        # 0x429cef
  41805e:	call   0x405f70
  418063:	mov    rcx,rbx
  418066:	call   0x416fd0
  41806b:	mov    rcx,QWORD PTR [rsi]
  41806e:	lea    rdx,[rip+0x1227b]        # 0x42a2f0
  418075:	mov    r8,rax
  418078:	mov    r9d,edi
  41807b:	call   0x406050
  418080:	mov    rcx,QWORD PTR [rsi]
  418083:	call   0x405f30
  418088:	mov    rcx,rbx
  41808b:	call   0x416fd0
  418090:	mov    rcx,QWORD PTR [rsi]
  418093:	lea    rdx,[rip+0x1226c]        # 0x42a306
  41809a:	mov    r8,rax
  41809d:	mov    r9d,edi
  4180a0:	call   0x406050
  4180a5:	mov    rcx,QWORD PTR [rsi]
  4180a8:	call   0x405f30
  4180ad:	lea    rcx,[rip+0x11c3b]        # 0x429cef
  4180b4:	call   0x405f70
  4180b9:	mov    rcx,QWORD PTR [rsi]
  4180bc:	test   rcx,rcx
  4180bf:	je     0x4180c8
  4180c1:	mov    DWORD PTR [rcx+0x8],0x0
  4180c8:	sub    edi,0x1
  4180cb:	js     0x418137
  4180cd:	mov    rdx,QWORD PTR [rsp+0xf8]
  4180d5:	movsxd rax,edi
  4180d8:	lea    rbp,[rsp+0x60]
  4180dd:	lea    r14,[rip+0x11c0b]        # 0x429cef
  4180e4:	mov    r15d,edi
  4180e7:	lea    r13,[rdx+rax*8]
  4180eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4180f0:	mov    rax,QWORD PTR [r13+0x0]
  4180f4:	lea    r9,[rip+0x120c1]        # 0x42a1bc
  4180fb:	cmp    edi,r15d
  4180fe:	lea    r8,[rip+0x12217]        # 0x42a31c
  418105:	mov    edx,0x20
  41810a:	mov    rcx,rbp
  41810d:	cmove  r9,r14
  418111:	sub    r15d,0x1
  418115:	sub    r13,0x8
  418119:	mov    QWORD PTR [rsp+0x20],rax
  41811e:	call   0x40b5e0
  418123:	mov    rcx,QWORD PTR [rsi]
  418126:	mov    rdx,rbp
  418129:	call   0x416200
  41812e:	cmp    r15d,0xffffffff
  418132:	jne    0x4180f0
  418134:	mov    rcx,QWORD PTR [rsi]
  418137:	call   0x416430
  41813c:	mov    rcx,r12
  41813f:	mov    rdi,rax
  418142:	call   0x405e30
  418147:	mov    rcx,rbx
  41814a:	call   0x416fd0
  41814f:	mov    ecx,DWORD PTR [rsp+0x44]
  418153:	mov    rbp,rax
  418156:	call   0x416d00
  41815b:	mov    QWORD PTR [rsp+0x20],rdi
  418160:	mov    rcx,QWORD PTR [rsi]
  418163:	lea    rdx,[rip+0x11d53]        # 0x429ebd
  41816a:	mov    r9,rbp
  41816d:	mov    r8,rax
  418170:	call   0x406050
  418175:	mov    rcx,rdi
  418178:	xor    edi,edi
  41817a:	call   0x4062e0
  41817f:	mov    rcx,QWORD PTR [rsi]
  418182:	call   0x405f30
  418187:	mov    rcx,r12
  41818a:	call   0x405e30
  41818f:	mov    rcx,rbx
  418192:	call   0x416fd0
  418197:	mov    rcx,QWORD PTR [rsi]
  41819a:	lea    rdx,[rip+0x12181]        # 0x42a322
  4181a1:	mov    r8,rax
  4181a4:	call   0x406050
  4181a9:	mov    rcx,QWORD PTR [rsi]
  4181ac:	mov    rdx,r12
  4181af:	call   0x416250
  4181b4:	mov    rcx,QWORD PTR [rsi]
  4181b7:	lea    rdx,[rip+0x1216e]        # 0x42a32c
  4181be:	call   0x416200
  4181c3:	mov    rcx,QWORD PTR [rsi]
  4181c6:	call   0x405f30
  4181cb:	mov    eax,DWORD PTR [rbx+0x88]
  4181d1:	mov    rbp,QWORD PTR [rsp+0xf0]
  4181d9:	test   eax,eax
  4181db:	jle    0x418283
  4181e1:	sub    eax,edi
  4181e3:	mov    rcx,rbx
  4181e6:	add    edi,0x1
  4181e9:	sub    eax,0x1
  4181ec:	cdqe   
  4181ee:	mov    r12,QWORD PTR [rbp+rax*8+0x0]
  4181f3:	call   0x416fd0
  4181f8:	lea    rdx,[rip+0x12169]        # 0x42a368
  4181ff:	mov    r8,rax
  418202:	mov    r9d,edi
  418205:	add    r12,0x1
  418209:	mov    QWORD PTR [rsp+0x20],r12
  41820e:	mov    rcx,QWORD PTR [rsi]
  418211:	call   0x406050
  418216:	mov    rcx,QWORD PTR [rsi]
  418219:	call   0x405f30
  41821e:	mov    eax,DWORD PTR [rbx+0x88]
  418224:	cmp    eax,edi
  418226:	jg     0x4181e1
  418228:	test   eax,eax
  41822a:	jle    0x418283
  41822c:	mov    rbp,QWORD PTR [rsp+0xf8]
  418234:	xor    edi,edi
  418236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418240:	sub    eax,edi
  418242:	mov    rcx,rbx
  418245:	add    edi,0x1
  418248:	sub    eax,0x1
  41824b:	cdqe   
  41824d:	mov    r12,QWORD PTR [rbp+rax*8+0x0]
  418252:	call   0x416fd0
  418257:	lea    rdx,[rip+0x1211e]        # 0x42a37c
  41825e:	mov    r8,rax
  418261:	mov    r9d,edi
  418264:	mov    QWORD PTR [rsp+0x20],r12
  418269:	mov    rcx,QWORD PTR [rsi]
  41826c:	call   0x406050
  418271:	mov    rcx,QWORD PTR [rsi]
  418274:	call   0x405f30
  418279:	mov    eax,DWORD PTR [rbx+0x88]
  41827f:	cmp    eax,edi
  418281:	jg     0x418240
  418283:	mov    rcx,rbx
  418286:	call   0x416fd0
  41828b:	mov    rcx,rbx
  41828e:	mov    r12,rax
  418291:	call   0x416fd0
  418296:	mov    rcx,rbx
  418299:	mov    rbp,rax
  41829c:	call   0x417070
  4182a1:	mov    ecx,DWORD PTR [rsp+0x44]
  4182a5:	mov    rdi,rax
  4182a8:	call   0x416a40
  4182ad:	mov    QWORD PTR [rsp+0x28],r12
  4182b2:	mov    QWORD PTR [rsp+0x20],rbp
  4182b7:	lea    rdx,[rip+0x12072]        # 0x42a330
  4182be:	mov    rcx,QWORD PTR [rsi]
  4182c1:	mov    r8,rax
  4182c4:	mov    r9,rdi
  4182c7:	call   0x406050
  4182cc:	mov    rcx,QWORD PTR [rsi]
  4182cf:	call   0x405f30
  4182d4:	mov    rcx,rbx
  4182d7:	call   0x416fd0
  4182dc:	lea    rcx,[rip+0x12082]        # 0x42a365
  4182e3:	mov    rdx,rax
  4182e6:	call   0x406090
  4182eb:	lea    rcx,[rip+0x11f41]        # 0x42a233
  4182f2:	call   0x405f70
  4182f7:	lea    rcx,[rip+0x11c3d]        # 0x429f3b
  4182fe:	call   0x405f70
  418303:	lea    rcx,[rip+0x11e38]        # 0x42a142
  41830a:	call   0x405f70
  41830f:	mov    rcx,QWORD PTR [rip+0x1a92a]        # 0x432c40
  418316:	test   rcx,rcx
  418319:	je     0x41865f
  41831f:	mov    rax,QWORD PTR [rip+0x1337a]        # 0x42b6a0
  418326:	mov    rdx,QWORD PTR [rax]
  418329:	call   0x416750
  41832e:	mov    rax,QWORD PTR [rip+0x1336b]        # 0x42b6a0
  418335:	mov    rdx,QWORD PTR [rsp+0x48]
  41833a:	mov    QWORD PTR [rax],rdx
  41833d:	jmp    0x417ef0
  418342:	mov    rax,QWORD PTR [rdx+0x48]
  418346:	mov    rdi,QWORD PTR [rdx+0x50]
  41834a:	test   rax,rax
  41834d:	je     0x418640
  418353:	mov    rbp,QWORD PTR [rax+0x10]
  418357:	mov    rsi,QWORD PTR [rip+0x13592]        # 0x42b8f0
  41835e:	mov    r8,QWORD PTR [rbx+0x10]
  418362:	lea    rdx,[rip+0x11e55]        # 0x42a1be
  418369:	mov    rcx,QWORD PTR [rsi]
  41836c:	call   0x406050
  418371:	mov    rcx,QWORD PTR [rsi]
  418374:	call   0x405f30
  418379:	mov    ecx,DWORD PTR [rdi+0x5c]
  41837c:	cmp    ecx,0x2
  41837f:	je     0x418540
  418385:	jg     0x418471
  41838b:	cmp    ecx,0x1
  41838e:	jne    0x41847a
  418394:	test   r12,r12
  418397:	je     0x41867f
  41839d:	mov    eax,DWORD PTR [r12+0x8]
  4183a2:	test   eax,eax
  4183a4:	je     0x4183d9
  4183a6:	mov    rcx,r12
  4183a9:	call   0x416430
  4183ae:	mov    rcx,QWORD PTR [rbx+0x50]
  4183b2:	mov    r8,r12
  4183b5:	mov    rdx,rax
  4183b8:	mov    DWORD PTR [r12+0x8],0x0
  4183c1:	mov    r13,rax
  4183c4:	call   0x416ef0
  4183c9:	mov    rcx,r12
  4183cc:	call   0x4164d0
  4183d1:	mov    rcx,r13
  4183d4:	call   0x4062e0
  4183d9:	mov    rcx,r12
  4183dc:	call   0x405f30
  4183e1:	mov    DWORD PTR [r12+0x8],0x0
  4183ea:	mov    ecx,DWORD PTR [rdi+0x5c]
  4183ed:	call   0x416d70
  4183f2:	mov    ecx,DWORD PTR [rdi+0x5c]
  4183f5:	mov    r14,rax
  4183f8:	call   0x416e30
  4183fd:	mov    rcx,QWORD PTR [rbx+0x10]
  418401:	mov    r13,rax
  418404:	call   0x406cc0
  418409:	mov    rcx,QWORD PTR [rbx+0x20f0]
  418410:	mov    r12,rax
  418413:	lea    rbx,[rip+0x11d98]        # 0x42a1b2
  41841a:	test   rcx,rcx
  41841d:	je     0x418427
  41841f:	call   0x417070
  418424:	mov    rbx,rax
  418427:	mov    ecx,DWORD PTR [rdi+0x5c]
  41842a:	call   0x416a40
  41842f:	mov    QWORD PTR [rsp+0x38],r14
  418434:	mov    QWORD PTR [rsp+0x30],rbp
  418439:	lea    rdx,[rip+0x11d90]        # 0x42a1d0
  418440:	mov    QWORD PTR [rsp+0x28],r13
  418445:	mov    QWORD PTR [rsp+0x20],r12
  41844a:	mov    r8,rax
  41844d:	mov    rcx,QWORD PTR [rsi]
  418450:	mov    r9,rbx
  418453:	call   0x406050
  418458:	mov    rcx,QWORD PTR [rsi]
  41845b:	call   0x405f30
  418460:	lea    rcx,[rip+0x11ad4]        # 0x429f3b
  418467:	call   0x405f70
  41846c:	jmp    0x417ef0
  418471:	cmp    ecx,0x6
  418474:	jle    0x418394
  41847a:	call   0x4156c0
  41847f:	lea    rcx,[rip+0x11daf]        # 0x42a235
  418486:	mov    rdx,rax
  418489:	call   0x40b400
  41848e:	jmp    0x418460
  418490:	mov    rcx,r8
  418493:	call   0x405e30
  418498:	test   r12,r12
  41849b:	je     0x418673
  4184a1:	mov    rdi,QWORD PTR [r12+0x10]
  4184a6:	lea    rax,[rip+0x11842]        # 0x429cef
  4184ad:	test   rdi,rdi
  4184b0:	cmove  rdi,rax
  4184b4:	mov    rcx,rbx
  4184b7:	call   0x416fd0
  4184bc:	mov    rsi,QWORD PTR [rip+0x1342d]        # 0x42b8f0
  4184c3:	lea    rdx,[rip+0x11daa]        # 0x42a274
  4184ca:	mov    r9,rdi
  4184cd:	mov    r8,rax
  4184d0:	mov    rcx,QWORD PTR [rsi]
  4184d3:	call   0x406050
  4184d8:	mov    rcx,QWORD PTR [rsi]
  4184db:	call   0x405f30
  4184e0:	mov    rcx,rbx
  4184e3:	call   0x416fd0
  4184e8:	mov    rcx,rbx
  4184eb:	mov    rdi,rax
  4184ee:	call   0x417070
  4184f3:	mov    ecx,DWORD PTR [rsp+0x44]
  4184f7:	mov    rbx,rax
  4184fa:	call   0x416a40
  4184ff:	mov    QWORD PTR [rsp+0x20],rdi
  418504:	mov    rcx,QWORD PTR [rsi]
  418507:	lea    rdx,[rip+0x11d42]        # 0x42a250
  41850e:	mov    r8,rax
  418511:	mov    r9,rbx
  418514:	call   0x406050
  418519:	mov    rcx,QWORD PTR [rsi]
  41851c:	call   0x405f30
  418521:	lea    rcx,[rip+0x11a13]        # 0x429f3b
  418528:	call   0x405f70
  41852d:	lea    rcx,[rip+0x117bb]        # 0x429cef
  418534:	call   0x405f70
  418539:	jmp    0x417ef0
  41853e:	xchg   ax,ax
  418540:	test   r12,r12
  418543:	je     0x418629
  418549:	mov    edi,DWORD PTR [r12+0x8]
  41854e:	mov    rcx,r12
  418551:	call   0x406b70
  418556:	test   rdi,rdi
  418559:	je     0x418630
  41855f:	mov    rcx,QWORD PTR [rbx+0x10]
  418563:	call   0x406cc0
  418568:	mov    rcx,QWORD PTR [rbx+0x20f0]
  41856f:	mov    rbp,rax
  418572:	lea    r8,[rip+0x11c39]        # 0x42a1b2
  418579:	test   rcx,rcx
  41857c:	je     0x418586
  41857e:	call   0x417070
  418583:	mov    r8,rax
  418586:	mov    QWORD PTR [rsp+0x20],rdi
  41858b:	mov    rcx,QWORD PTR [rsi]
  41858e:	lea    rdx,[rip+0x11c73]        # 0x42a208
  418595:	mov    r9,rbp
  418598:	call   0x406050
  41859d:	mov    rcx,QWORD PTR [rsi]
  4185a0:	call   0x405f30
  4185a5:	mov    rcx,r12
  4185a8:	call   0x405f30
  4185ad:	lea    rcx,[rip+0x11c7f]        # 0x42a233
  4185b4:	call   0x405f70
  4185b9:	jmp    0x418460
  4185be:	xchg   ax,ax
  4185c0:	mov    rcx,r8
  4185c3:	call   0x406b70
  4185c8:	test   r12,r12
  4185cb:	je     0x41868b
  4185d1:	mov    rsi,QWORD PTR [r12+0x10]
  4185d6:	lea    rax,[rip+0x11712]        # 0x429cef
  4185dd:	test   rsi,rsi
  4185e0:	cmove  rsi,rax
  4185e4:	mov    rcx,rbx
  4185e7:	call   0x417070
  4185ec:	mov    ecx,0x2
  4185f1:	mov    rdi,rax
  4185f4:	call   0x416a40
  4185f9:	mov    rbx,QWORD PTR [rip+0x132f0]        # 0x42b8f0
  418600:	mov    QWORD PTR [rsp+0x20],rsi
  418605:	lea    rdx,[rip+0x11c44]        # 0x42a250
  41860c:	mov    r8,rax
  41860f:	mov    r9,rdi
  418612:	mov    rcx,QWORD PTR [rbx]
  418615:	call   0x406050
  41861a:	mov    rcx,QWORD PTR [rbx]
  41861d:	jmp    0x41851c
  418622:	xor    ebp,ebp
  418624:	jmp    0x417f50
  418629:	xor    ecx,ecx
  41862b:	call   0x406b70
  418630:	mov    edi,0x1
  418635:	jmp    0x41855f
  41863a:	nop    WORD PTR [rax+rax*1+0x0]
  418640:	xor    ebp,ebp
  418642:	jmp    0x418357
  418647:	lea    rdx,[rip+0x11ab7]        # 0x42a105
  41864e:	lea    rcx,[rip+0x11ac1]        # 0x42a116
  418655:	call   0x406300
  41865a:	jmp    0x417f9d
  41865f:	call   0x416500
  418664:	mov    rcx,rax
  418667:	mov    QWORD PTR [rip+0x1a5d2],rax        # 0x432c40
  41866e:	jmp    0x41831f
  418673:	lea    rdi,[rip+0x11675]        # 0x429cef
  41867a:	jmp    0x4184b4
  41867f:	xor    ecx,ecx
  418681:	call   0x405f30
  418686:	jmp    0x4183ea
  41868b:	lea    rsi,[rip+0x1165d]        # 0x429cef
  418692:	jmp    0x4185e4
  418697:	nop    WORD PTR [rax+rax*1+0x0]
  4186a0:	push   rbx
  4186a1:	sub    rsp,0x20
  4186a5:	cmp    DWORD PTR [rcx+0x8],0x68
  4186a9:	mov    rbx,rcx
  4186ac:	je     0x4186c1
  4186ae:	lea    rdx,[rip+0x11d24]        # 0x42a3d9
  4186b5:	lea    rcx,[rip+0x11a5a]        # 0x42a116
  4186bc:	call   0x406300
  4186c1:	cmp    DWORD PTR [rbx+0xc],0x6c
  4186c5:	je     0x4186d4
  4186c7:	mov    rcx,rbx
  4186ca:	add    rsp,0x20
  4186ce:	pop    rbx
  4186cf:	jmp    0x416fd0
  4186d4:	mov    ecx,DWORD PTR [rbx+0x5c]
  4186d7:	add    rsp,0x20
  4186db:	pop    rbx
  4186dc:	jmp    0x416e30
  4186e1:	nop
  4186e2:	nop
  4186e3:	nop
  4186e4:	nop
  4186e5:	nop
  4186e6:	nop
  4186e7:	nop
  4186e8:	nop
  4186e9:	nop
  4186ea:	nop
  4186eb:	nop
  4186ec:	nop
  4186ed:	nop
  4186ee:	nop
  4186ef:	nop
  4186f0:	mov    rdx,QWORD PTR [rsp+0x28]
  4186f5:	test   rdx,rdx
  4186f8:	je     0x41870b
  4186fa:	mov    eax,DWORD PTR [rip+0x1a550]        # 0x432c50
  418700:	add    eax,0x1
  418703:	mov    DWORD PTR [rip+0x1a547],eax        # 0x432c50
  418709:	mov    DWORD PTR [rdx],eax
  41870b:	mov    eax,0x1
  418710:	ret    
  418711:	nop    DWORD PTR [rax+rax*1+0x0]
  418716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418720:	mov    eax,0x1
  418725:	ret    
  418726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418730:	mov    eax,0x1
  418735:	ret    
  418736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418740:	test   r8,r8
  418743:	je     0x418757
  418745:	mov    eax,DWORD PTR [rip+0x1a505]        # 0x432c50
  41874b:	add    eax,0x1
  41874e:	mov    DWORD PTR [rip+0x1a4fc],eax        # 0x432c50
  418754:	mov    DWORD PTR [r8],eax
  418757:	mov    eax,0x1
  41875c:	ret    
  41875d:	nop    DWORD PTR [rax]
  418760:	push   rdi
  418761:	push   rsi
  418762:	push   rbx
  418763:	sub    rsp,0x70
  418767:	mov    QWORD PTR [rsp+0xa8],r9
  41876f:	mov    ecx,DWORD PTR [rdx]
  418771:	mov    rsi,rdx
  418774:	mov    rbx,r8
  418777:	cmp    ecx,0xc
  41877a:	ja     0x418900
  418780:	lea    rax,[rip+0x11cf1]        # 0x42a478
  418787:	mov    r9d,ecx
  41878a:	movsxd rdx,DWORD PTR [rax+r9*4]
  41878e:	add    rax,rdx
  418791:	jmp    rax
  418793:	call   0x415f30
  418798:	mov    rdx,QWORD PTR [rsi+0x10]
  41879c:	mov    r8d,DWORD PTR [rsi+0x8]
  4187a0:	mov    rdi,rax
  4187a3:	mov    rcx,rax
  4187a6:	call   0x416170
  4187ab:	mov    rcx,rdi
  4187ae:	call   0x406b70
  4187b3:	mov    rcx,rdi
  4187b6:	call   0x416430
  4187bb:	mov    rcx,rdi
  4187be:	mov    QWORD PTR [rsp+0x28],rax
  4187c3:	call   0x416010
  4187c8:	mov    rdx,QWORD PTR [rsp+0x28]
  4187cd:	test   rdx,rdx
  4187d0:	je     0x418957
  4187d6:	mov    rcx,rbx
  4187d9:	call   0x416200
  4187de:	mov    eax,0x1
  4187e3:	add    rsp,0x70
  4187e7:	pop    rbx
  4187e8:	pop    rsi
  4187e9:	pop    rdi
  4187ea:	ret    
  4187eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4187f0:	movsx  r8d,BYTE PTR [rsi+0x8]
  4187f5:	lea    rdi,[rsp+0x30]
  4187fa:	lea    rdx,[rip+0x11c04]        # 0x42a405
  418801:	mov    rcx,rdi
  418804:	call   0x41db80
  418809:	nop    DWORD PTR [rax+0x0]
  418810:	mov    rdx,rdi
  418813:	jmp    0x4187d6
  418815:	movsx  r8d,BYTE PTR [rsi+0x8]
  41881a:	cmp    r8b,0x27
  41881e:	je     0x418940
  418824:	lea    rdi,[rsp+0x30]
  418829:	lea    rdx,[rip+0x11bd0]        # 0x42a400
  418830:	mov    rcx,rdi
  418833:	call   0x41db80
  418838:	jmp    0x418810
  41883a:	nop    WORD PTR [rax+rax*1+0x0]
  418840:	movsx  r8d,WORD PTR [rsi+0x8]
  418845:	lea    rdi,[rsp+0x30]
  41884a:	lea    rdx,[rip+0x11bb9]        # 0x42a40a
  418851:	mov    rcx,rdi
  418854:	call   0x41db80
  418859:	jmp    0x418810
  41885b:	nop    DWORD PTR [rax+rax*1+0x0]
  418860:	lea    rdi,[rsp+0x30]
  418865:	mov    r8d,DWORD PTR [rsi+0x8]
  418869:	lea    rdx,[rip+0x11b9e]        # 0x42a40e
  418870:	mov    rcx,rdi
  418873:	call   0x41db80
  418878:	jmp    0x418810
  41887a:	nop    WORD PTR [rax+rax*1+0x0]
  418880:	pxor   xmm0,xmm0
  418884:	lea    rdi,[rsp+0x30]
  418889:	lea    rdx,[rip+0x11b81]        # 0x42a411
  418890:	mov    rcx,rdi
  418893:	cvtss2sd xmm0,DWORD PTR [rsi+0x8]
  418898:	movapd xmm2,xmm0
  41889c:	movq   r8,xmm0
  4188a1:	call   0x41db80
  4188a6:	jmp    0x418810
  4188ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4188b0:	movsd  xmm0,QWORD PTR [rsi+0x8]
  4188b5:	lea    rdi,[rsp+0x30]
  4188ba:	lea    rdx,[rip+0x11b55]        # 0x42a416
  4188c1:	movapd xmm2,xmm0
  4188c5:	movq   r8,xmm0
  4188ca:	mov    rcx,rdi
  4188cd:	call   0x41db80
  4188d2:	movzx  eax,BYTE PTR [rsp+0x30]
  4188d7:	test   al,al
  4188d9:	je     0x418810
  4188df:	mov    r9,rdi
  4188e2:	and    eax,0xffffffdf
  4188e5:	cmp    al,0x45
  4188e7:	jne    0x4188ed
  4188e9:	mov    BYTE PTR [r9],0x44
  4188ed:	add    r9,0x1
  4188f1:	movzx  eax,BYTE PTR [r9]
  4188f5:	test   al,al
  4188f7:	jne    0x4188e2
  4188f9:	jmp    0x418810
  4188fe:	xchg   ax,ax
  418900:	mov    edx,ecx
  418902:	lea    rcx,[rip+0x11b13]        # 0x42a41c
  418909:	lea    rdi,[rsp+0x30]
  41890e:	call   0x406300
  418913:	test   eax,eax
  418915:	jne    0x418810
  41891b:	lea    rdx,[rip+0x11b15]        # 0x42a437
  418922:	lea    rcx,[rip+0x11b1f]        # 0x42a448
  418929:	mov    r8d,0x47
  41892f:	call   0x41da30
  418934:	jmp    0x418810
  418939:	nop    DWORD PTR [rax+0x0]
  418940:	mov    DWORD PTR [rsp+0x30],0x27275c27
  418948:	mov    BYTE PTR [rsp+0x34],0x0
  41894d:	lea    rdi,[rsp+0x30]
  418952:	jmp    0x418810
  418957:	lea    rdi,[rsp+0x30]
  41895c:	jmp    0x418810
  418961:	nop    DWORD PTR [rax+rax*1+0x0]
  418966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418970:	push   rsi
  418971:	push   rbx
  418972:	sub    rsp,0x38
  418976:	lea    rax,[rsp+0x60]
  41897b:	mov    rsi,rdx
  41897e:	mov    rbx,r8
  418981:	mov    rcx,r8
  418984:	mov    QWORD PTR [rsp+0x60],r8
  418989:	mov    QWORD PTR [rsp+0x68],r9
  41898e:	mov    QWORD PTR [rsp+0x28],rax
  418993:	call   0x4164d0
  418998:	mov    rdx,rbx
  41899b:	mov    rcx,rsi
  41899e:	call   0x416250
  4189a3:	mov    eax,0x1
  4189a8:	add    rsp,0x38
  4189ac:	pop    rbx
  4189ad:	pop    rsi
  4189ae:	ret    
  4189af:	nop
  4189b0:	sub    rsp,0x28
  4189b4:	test   edx,edx
  4189b6:	je     0x4189d0
  4189b8:	cmp    edx,0x1
  4189bb:	jne    0x4189c2
  4189bd:	test   r9,r9
  4189c0:	jne    0x4189f0
  4189c2:	mov    eax,0x1
  4189c7:	add    rsp,0x28
  4189cb:	ret    
  4189cc:	nop    DWORD PTR [rax+0x0]
  4189d0:	mov    rcx,QWORD PTR [rsp+0x50]
  4189d5:	mov    edx,0x20
  4189da:	call   0x416110
  4189df:	mov    eax,0x1
  4189e4:	add    rsp,0x28
  4189e8:	ret    
  4189e9:	nop    DWORD PTR [rax+0x0]
  4189f0:	mov    rcx,QWORD PTR [rsp+0x50]
  4189f5:	lea    rdx,[rip+0x11ab0]        # 0x42a4ac
  4189fc:	call   0x416200
  418a01:	jmp    0x4189c2
  418a03:	nop
  418a04:	nop
  418a05:	nop
  418a06:	nop
  418a07:	nop
  418a08:	nop
  418a09:	nop
  418a0a:	nop
  418a0b:	nop
  418a0c:	nop
  418a0d:	nop
  418a0e:	nop
  418a0f:	nop
  418a10:	push   rdi
  418a11:	push   rsi
  418a12:	push   rbx
  418a13:	sub    rsp,0x20
  418a17:	cmp    QWORD PTR [rcx+0x48],0x0
  418a1c:	mov    rsi,rcx
  418a1f:	je     0x418a60
  418a21:	call   0x415f30
  418a26:	mov    rdi,QWORD PTR [rip+0x12d43]        # 0x42b770
  418a2d:	xor    edx,edx
  418a2f:	mov    rbx,rax
  418a32:	mov    rcx,QWORD PTR [rdi]
  418a35:	call   0x401550
  418a3a:	mov    rdx,QWORD PTR [rdi]
  418a3d:	lea    r8,[rip+0xa8c]        # 0x4194d0
  418a44:	mov    rcx,rsi
  418a47:	mov    r9,rbx
  418a4a:	call   0x401dc0
  418a4f:	mov    rcx,rbx
  418a52:	add    rsp,0x20
  418a56:	pop    rbx
  418a57:	pop    rsi
  418a58:	pop    rdi
  418a59:	jmp    0x416010
  418a5e:	xchg   ax,ax
  418a60:	lea    rdx,[rip+0x11a49]        # 0x42a4b0
  418a67:	lea    rcx,[rip+0x11a55]        # 0x42a4c3
  418a6e:	call   0x406300
  418a73:	jmp    0x418a21
  418a75:	nop
  418a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418a80:	push   rbx
  418a81:	sub    rsp,0x20
  418a85:	mov    rax,QWORD PTR [rcx]
  418a88:	test   rax,rax
  418a8b:	je     0x418aa0
  418a8d:	mov    rcx,rax
  418a90:	add    rsp,0x20
  418a94:	pop    rbx
  418a95:	jmp    0x406cc0
  418a9a:	nop    WORD PTR [rax+rax*1+0x0]
  418aa0:	mov    rbx,rcx
  418aa3:	lea    rdx,[rip+0x11a2f]        # 0x42a4d9
  418aaa:	lea    rcx,[rip+0x11a2f]        # 0x42a4e0
  418ab1:	mov    r8d,0x114
  418ab7:	call   0x41da30
  418abc:	mov    rax,QWORD PTR [rbx]
  418abf:	mov    rcx,rax
  418ac2:	add    rsp,0x20
  418ac6:	pop    rbx
  418ac7:	jmp    0x406cc0
  418acc:	nop    DWORD PTR [rax+0x0]
  418ad0:	sub    rsp,0x38
  418ad4:	cmp    ecx,0xf
  418ad7:	ja     0x418b70
  418add:	lea    rax,[rip+0x11a7c]        # 0x42a560
  418ae4:	mov    edx,ecx
  418ae6:	movsxd rdx,DWORD PTR [rax+rdx*4]
  418aea:	add    rax,rdx
  418aed:	jmp    rax
  418aef:	nop
  418af0:	lea    rax,[rip+0x11a1b]        # 0x42a512
  418af7:	add    rsp,0x38
  418afb:	ret    
  418afc:	nop    DWORD PTR [rax+0x0]
  418b00:	lea    rax,[rip+0x11a10]        # 0x42a517
  418b07:	add    rsp,0x38
  418b0b:	ret    
  418b0c:	nop    DWORD PTR [rax+0x0]
  418b10:	lea    rax,[rip+0x119ea]        # 0x42a501
  418b17:	add    rsp,0x38
  418b1b:	ret    
  418b1c:	nop    DWORD PTR [rax+0x0]
  418b20:	lea    rax,[rip+0x119ca]        # 0x42a4f1
  418b27:	jmp    0x418af7
  418b29:	nop    DWORD PTR [rax+0x0]
  418b30:	lea    rax,[rip+0x119bf]        # 0x42a4f6
  418b37:	jmp    0x418af7
  418b39:	nop    DWORD PTR [rax+0x0]
  418b40:	lea    rax,[rip+0x119be]        # 0x42a505
  418b47:	jmp    0x418af7
  418b49:	nop    DWORD PTR [rax+0x0]
  418b50:	lea    rax,[rip+0x119b4]        # 0x42a50b
  418b57:	jmp    0x418af7
  418b59:	nop    DWORD PTR [rax+0x0]
  418b60:	lea    rax,[rip+0x11994]        # 0x42a4fb
  418b67:	jmp    0x418af7
  418b69:	nop    DWORD PTR [rax+0x0]
  418b70:	mov    edx,ecx
  418b72:	lea    rcx,[rip+0x119a5]        # 0x42a51e
  418b79:	call   0x406300
  418b7e:	mov    edx,eax
  418b80:	xor    eax,eax
  418b82:	test   edx,edx
  418b84:	jne    0x418af7
  418b8a:	lea    rdx,[rip+0x11948]        # 0x42a4d9
  418b91:	lea    rcx,[rip+0x119a0]        # 0x42a538
  418b98:	mov    r8d,0x130
  418b9e:	mov    QWORD PTR [rsp+0x28],rax
  418ba3:	call   0x41da30
  418ba8:	mov    rax,QWORD PTR [rsp+0x28]
  418bad:	jmp    0x418af7
  418bb2:	nop    DWORD PTR [rax+0x0]
  418bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418bc0:	sub    rsp,0x38
  418bc4:	cmp    ecx,0xf
  418bc7:	ja     0x418c60
  418bcd:	lea    rax,[rip+0x119f4]        # 0x42a5c8
  418bd4:	mov    edx,ecx
  418bd6:	movsxd rdx,DWORD PTR [rax+rdx*4]
  418bda:	add    rax,rdx
  418bdd:	jmp    rax
  418bdf:	nop
  418be0:	lea    rax,[rip+0x119da]        # 0x42a5c1
  418be7:	add    rsp,0x38
  418beb:	ret    
  418bec:	nop    DWORD PTR [rax+0x0]
  418bf0:	lea    rax,[rip+0x11920]        # 0x42a517
  418bf7:	add    rsp,0x38
  418bfb:	ret    
  418bfc:	nop    DWORD PTR [rax+0x0]
  418c00:	lea    rax,[rip+0x119a9]        # 0x42a5b0
  418c07:	add    rsp,0x38
  418c0b:	ret    
  418c0c:	nop    DWORD PTR [rax+0x0]
  418c10:	lea    rax,[rip+0x11989]        # 0x42a5a0
  418c17:	jmp    0x418be7
  418c19:	nop    DWORD PTR [rax+0x0]
  418c20:	lea    rax,[rip+0x1197e]        # 0x42a5a5
  418c27:	jmp    0x418be7
  418c29:	nop    DWORD PTR [rax+0x0]
  418c30:	lea    rax,[rip+0x1197d]        # 0x42a5b4
  418c37:	jmp    0x418be7
  418c39:	nop    DWORD PTR [rax+0x0]
  418c40:	lea    rax,[rip+0x11973]        # 0x42a5ba
  418c47:	jmp    0x418be7
  418c49:	nop    DWORD PTR [rax+0x0]
  418c50:	lea    rax,[rip+0x11953]        # 0x42a5aa
  418c57:	jmp    0x418be7
  418c59:	nop    DWORD PTR [rax+0x0]
  418c60:	mov    edx,ecx
  418c62:	lea    rcx,[rip+0x118b5]        # 0x42a51e
  418c69:	call   0x406300
  418c6e:	mov    edx,eax
  418c70:	xor    eax,eax
  418c72:	test   edx,edx
  418c74:	jne    0x418be7
  418c7a:	lea    rdx,[rip+0x11858]        # 0x42a4d9
  418c81:	lea    rcx,[rip+0x118b0]        # 0x42a538
  418c88:	mov    r8d,0xff
  418c8e:	mov    QWORD PTR [rsp+0x28],rax
  418c93:	call   0x41da30
  418c98:	mov    rax,QWORD PTR [rsp+0x28]
  418c9d:	jmp    0x418be7
  418ca2:	nop    DWORD PTR [rax+0x0]
  418ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418cb0:	push   r15
  418cb2:	push   r14
  418cb4:	push   r13
  418cb6:	push   r12
  418cb8:	push   rbp
  418cb9:	push   rdi
  418cba:	push   rsi
  418cbb:	push   rbx
  418cbc:	sub    rsp,0x58
  418cc0:	mov    r13,QWORD PTR [rip+0x12a09]        # 0x42b6d0
  418cc7:	mov    QWORD PTR [rsp+0x38],rcx
  418ccc:	mov    rax,QWORD PTR [r13+0x0]
  418cd0:	test   rax,rax
  418cd3:	je     0x4193da
  418cd9:	mov    edi,DWORD PTR [rax+0x4]
  418cdc:	mov    r12,QWORD PTR [rip+0x12c4d]        # 0x42b930
  418ce3:	mov    rax,QWORD PTR [r12]
  418ce7:	test   rax,rax
  418cea:	je     0x419398
  418cf0:	mov    ebp,DWORD PTR [rax+0x4]
  418cf3:	mov    rax,QWORD PTR [rip+0x12946]        # 0x42b640
  418cfa:	mov    rax,QWORD PTR [rax]
  418cfd:	test   ebp,ebp
  418cff:	setg   BYTE PTR [rsp+0x4f]
  418d04:	test   rax,rax
  418d07:	je     0x4193b2
  418d0d:	mov    eax,DWORD PTR [rax+0x4]
  418d10:	mov    DWORD PTR [rsp+0x44],eax
  418d14:	mov    rax,QWORD PTR [rip+0x12a25]        # 0x42b740
  418d1b:	mov    rax,QWORD PTR [rax]
  418d1e:	test   rax,rax
  418d21:	je     0x4193cd
  418d27:	mov    eax,DWORD PTR [rax+0x4]
  418d2a:	mov    DWORD PTR [rsp+0x48],eax
  418d2e:	lea    rcx,[rip+0x1190b]        # 0x42a640
  418d35:	call   0x405f70
  418d3a:	lea    rcx,[rip+0x11913]        # 0x42a654
  418d41:	call   0x405f70
  418d46:	lea    rcx,[rip+0x1191a]        # 0x42a667
  418d4d:	call   0x405f70
  418d52:	lea    rcx,[rip+0x11921]        # 0x42a67a
  418d59:	call   0x405f70
  418d5e:	lea    rcx,[rip+0x11933]        # 0x42a698
  418d65:	call   0x405f70
  418d6a:	lea    rcx,[rip+0x11928]        # 0x42a699
  418d71:	call   0x405f60
  418d76:	mov    rax,QWORD PTR [rip+0x12a33]        # 0x42b7b0
  418d7d:	mov    rcx,QWORD PTR [rax]
  418d80:	call   0x405f70
  418d85:	lea    rcx,[rip+0x1191b]        # 0x42a6a7
  418d8c:	call   0x405f70
  418d91:	lea    rcx,[rip+0x11900]        # 0x42a698
  418d98:	call   0x405f70
  418d9d:	lea    rcx,[rip+0x1190c]        # 0x42a6b0
  418da4:	call   0x405f70
  418da9:	lea    rcx,[rip+0x118f7]        # 0x42a6a7
  418db0:	call   0x405f70
  418db5:	test   edi,edi
  418db7:	jle    0x41938c
  418dbd:	lea    rcx,[rip+0x118d4]        # 0x42a698
  418dc4:	xor    esi,esi
  418dc6:	call   0x405f70
  418dcb:	lea    rdx,[rip+0x11916]        # 0x42a6e8
  418dd2:	mov    ecx,0x1
  418dd7:	call   0x406230
  418ddc:	mov    rbx,QWORD PTR [rip+0x12b0d]        # 0x42b8f0
  418de3:	jmp    0x418e1b
  418de5:	call   0x418a80
  418dea:	mov    ecx,0x1
  418def:	mov    r14,rax
  418df2:	add    esi,0x1
  418df5:	call   0x406180
  418dfa:	mov    rcx,QWORD PTR [rbx]
  418dfd:	lea    rdx,[rip+0x118fc]        # 0x42a700
  418e04:	mov    r8,rax
  418e07:	mov    r9,r14
  418e0a:	call   0x406050
  418e0f:	mov    rcx,QWORD PTR [rbx]
  418e12:	call   0x405f30
  418e17:	cmp    esi,edi
  418e19:	je     0x418e71
  418e1b:	mov    rcx,QWORD PTR [r13+0x0]
  418e1f:	mov    edx,esi
  418e21:	call   0x416670
  418e26:	mov    r14,QWORD PTR [rax+0x2100]
  418e2d:	lea    rcx,[rax+0x18]
  418e31:	test   r14,r14
  418e34:	je     0x418de5
  418e36:	call   0x418a80
  418e3b:	mov    ecx,0x1
  418e40:	mov    r15,rax
  418e43:	add    esi,0x1
  418e46:	call   0x406180
  418e4b:	mov    DWORD PTR [rsp+0x20],r14d
  418e50:	mov    rcx,QWORD PTR [rbx]
  418e53:	lea    rdx,[rip+0x118bf]        # 0x42a719
  418e5a:	mov    r8,rax
  418e5d:	mov    r9,r15
  418e60:	call   0x406050
  418e65:	mov    rcx,QWORD PTR [rbx]
  418e68:	call   0x405f30
  418e6d:	cmp    esi,edi
  418e6f:	jne    0x418e1b
  418e71:	call   0x405fa0
  418e76:	xor    esi,esi
  418e78:	test   ebp,ebp
  418e7a:	jle    0x418e92
  418e7c:	nop    DWORD PTR [rax+0x0]
  418e80:	mov    rcx,QWORD PTR [r12]
  418e84:	mov    edx,esi
  418e86:	add    esi,0x1
  418e89:	call   0x416670
  418e8e:	cmp    esi,ebp
  418e90:	jne    0x418e80
  418e92:	lea    rcx,[rip+0x117ff]        # 0x42a698
  418e99:	lea    rsi,[rip+0x1176e]        # 0x42a60e
  418ea0:	call   0x405f70
  418ea5:	lea    rcx,[rip+0x117ec]        # 0x42a698
  418eac:	call   0x405f70
  418eb1:	lea    rdx,[rip+0x1187c]        # 0x42a734
  418eb8:	mov    ecx,0x1
  418ebd:	call   0x406230
  418ec2:	mov    rax,QWORD PTR [rip+0x12987]        # 0x42b850
  418ec9:	mov    ecx,DWORD PTR [rax]
  418ecb:	lea    rax,[rip+0x11736]        # 0x42a608
  418ed2:	test   ecx,ecx
  418ed4:	mov    ecx,0x1
  418ed9:	cmovne rsi,rax
  418edd:	call   0x406180
  418ee2:	mov    r9,QWORD PTR [rsp+0x38]
  418ee7:	mov    QWORD PTR [rsp+0x20],rsi
  418eec:	lea    rdx,[rip+0x1185d]        # 0x42a750
  418ef3:	mov    rcx,QWORD PTR [rbx]
  418ef6:	mov    r8,rax
  418ef9:	call   0x406050
  418efe:	mov    rcx,QWORD PTR [rbx]
  418f01:	call   0x405f30
  418f06:	call   0x405fa0
  418f0b:	test   edi,edi
  418f0d:	jle    0x418ffb
  418f13:	lea    rcx,[rip+0x1177e]        # 0x42a698
  418f1a:	xor    esi,esi
  418f1c:	call   0x405f70
  418f21:	lea    rdx,[rip+0x11871]        # 0x42a799
  418f28:	mov    ecx,0x1
  418f2d:	call   0x406230
  418f32:	mov    DWORD PTR [rsp+0x38],edi
  418f36:	mov    DWORD PTR [rsp+0x40],ebp
  418f3a:	jmp    0x418f89
  418f3c:	mov    rcx,QWORD PTR [rax+0x10]
  418f40:	call   0x406a70
  418f45:	lea    rcx,[r14+0x18]
  418f49:	mov    r15,rax
  418f4c:	call   0x418a80
  418f51:	mov    ecx,0x1
  418f56:	mov    r14,rax
  418f59:	call   0x406180
  418f5e:	mov    QWORD PTR [rsp+0x20],r15
  418f63:	mov    rcx,QWORD PTR [rbx]
  418f66:	lea    rdx,[rip+0x1184b]        # 0x42a7b8
  418f6d:	mov    r8,rax
  418f70:	mov    r9,r14
  418f73:	call   0x406050
  418f78:	mov    rcx,QWORD PTR [rbx]
  418f7b:	add    esi,0x1
  418f7e:	call   0x405f30
  418f83:	cmp    esi,DWORD PTR [rsp+0x38]
  418f87:	je     0x418ff2
  418f89:	mov    rcx,QWORD PTR [r13+0x0]
  418f8d:	mov    edx,esi
  418f8f:	call   0x416670
  418f94:	cmp    QWORD PTR [rax+0x2100],0x0
  418f9c:	mov    r14,rax
  418f9f:	je     0x418f3c
  418fa1:	lea    r15,[rax+0x18]
  418fa5:	mov    rcx,r15
  418fa8:	call   0x418a80
  418fad:	mov    rcx,QWORD PTR [r14+0x10]
  418fb1:	mov    rdi,rax
  418fb4:	call   0x406a70
  418fb9:	mov    rcx,r15
  418fbc:	mov    rbp,rax
  418fbf:	call   0x418a80
  418fc4:	mov    ecx,0x1
  418fc9:	mov    r14,rax
  418fcc:	call   0x406180
  418fd1:	mov    QWORD PTR [rsp+0x28],rdi
  418fd6:	mov    QWORD PTR [rsp+0x20],rbp
  418fdb:	lea    rdx,[rip+0x11816]        # 0x42a7f8
  418fe2:	mov    rcx,QWORD PTR [rbx]
  418fe5:	mov    r8,rax
  418fe8:	mov    r9,r14
  418feb:	call   0x406050
  418ff0:	jmp    0x418f78
  418ff2:	mov    ebp,DWORD PTR [rsp+0x40]
  418ff6:	call   0x405fa0
  418ffb:	test   ebp,ebp
  418ffd:	jle    0x41918a
  419003:	lea    rcx,[rip+0x1168e]        # 0x42a698
  41900a:	xor    r14d,r14d
  41900d:	call   0x405f70
  419012:	lea    rdx,[rip+0x11818]        # 0x42a831
  419019:	mov    ecx,0x1
  41901e:	call   0x406230
  419023:	mov    DWORD PTR [rsp+0x40],ebp
  419027:	nop    WORD PTR [rax+rax*1+0x0]
  419030:	mov    rcx,QWORD PTR [r12]
  419034:	mov    edx,r14d
  419037:	call   0x416670
  41903c:	mov    rdi,rax
  41903f:	mov    rax,QWORD PTR [rax+0x50]
  419043:	lea    rcx,[rip+0x1164e]        # 0x42a698
  41904a:	lea    r13,[rdi+0x18]
  41904e:	mov    QWORD PTR [rsp+0x38],rax
  419053:	call   0x405f70
  419058:	mov    rcx,r13
  41905b:	call   0x418a80
  419060:	mov    ecx,0x1
  419065:	mov    rsi,rax
  419068:	call   0x406180
  41906d:	mov    rcx,QWORD PTR [rbx]
  419070:	lea    rdx,[rip+0x117d1]        # 0x42a848
  419077:	mov    r8,rax
  41907a:	mov    r9,rsi
  41907d:	call   0x406050
  419082:	mov    rcx,QWORD PTR [rbx]
  419085:	call   0x405f30
  41908a:	mov    edx,DWORD PTR [rdi+0x88]
  419090:	test   edx,edx
  419092:	jle    0x4190f9
  419094:	xor    esi,esi
  419096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4190a0:	movsxd rax,esi
  4190a3:	add    esi,0x1
  4190a6:	mov    rax,QWORD PTR [rdi+rax*8+0x90]
  4190ae:	lea    rcx,[rax+0x18]
  4190b2:	call   0x418a80
  4190b7:	mov    rcx,r13
  4190ba:	mov    r15,rax
  4190bd:	call   0x418a80
  4190c2:	mov    ecx,0x1
  4190c7:	mov    rbp,rax
  4190ca:	call   0x406180
  4190cf:	mov    QWORD PTR [rsp+0x20],r15
  4190d4:	mov    rcx,QWORD PTR [rbx]
  4190d7:	lea    rdx,[rip+0x11795]        # 0x42a873
  4190de:	mov    r8,rax
  4190e1:	mov    r9,rbp
  4190e4:	call   0x406050
  4190e9:	mov    rcx,QWORD PTR [rbx]
  4190ec:	call   0x405f30
  4190f1:	cmp    DWORD PTR [rdi+0x88],esi
  4190f7:	jg     0x4190a0
  4190f9:	mov    rcx,r13
  4190fc:	call   0x418a80
  419101:	mov    rsi,rax
  419104:	mov    rax,QWORD PTR [rsp+0x38]
  419109:	mov    edx,DWORD PTR [rax+0x5c]
  41910c:	cmp    edx,0xc
  41910f:	ja     0x419357
  419115:	lea    rcx,[rip+0x11820]        # 0x42a93c
  41911c:	mov    eax,edx
  41911e:	movsxd rcx,DWORD PTR [rcx+rax*4]
  419122:	lea    rax,[rip+0x11813]        # 0x42a93c
  419129:	add    rcx,rax
  41912c:	jmp    rcx
  41912e:	lea    r13,[rip+0x114ff]        # 0x42a634
  419135:	mov    rcx,QWORD PTR [rdi+0x10]
  419139:	add    r14d,0x1
  41913d:	call   0x406a70
  419142:	mov    ecx,0x1
  419147:	mov    rdi,rax
  41914a:	call   0x406180
  41914f:	mov    QWORD PTR [rsp+0x28],rsi
  419154:	mov    QWORD PTR [rsp+0x20],r13
  419159:	lea    rdx,[rip+0x11730]        # 0x42a890
  419160:	mov    rcx,QWORD PTR [rbx]
  419163:	mov    r8,rax
  419166:	mov    r9,rdi
  419169:	call   0x406050
  41916e:	mov    rcx,QWORD PTR [rbx]
  419171:	call   0x405f30
  419176:	cmp    r14d,DWORD PTR [rsp+0x40]
  41917b:	jne    0x419030
  419181:	mov    ebp,DWORD PTR [rsp+0x40]
  419185:	call   0x405fa0
  41918a:	mov    esi,DWORD PTR [rsp+0x48]
  41918e:	test   esi,esi
  419190:	jle    0x4191e2
  419192:	lea    rcx,[rip+0x114ff]        # 0x42a698
  419199:	xor    ebx,ebx
  41919b:	call   0x405f70
  4191a0:	lea    rdx,[rip+0x11721]        # 0x42a8c8
  4191a7:	mov    ecx,0x1
  4191ac:	call   0x406230
  4191b1:	mov    rax,QWORD PTR [rip+0x12588]        # 0x42b740
  4191b8:	mov    edx,ebx
  4191ba:	add    ebx,0x1
  4191bd:	mov    rcx,QWORD PTR [rax]
  4191c0:	call   0x416670
  4191c5:	mov    rcx,rax
  4191c8:	call   0x418a10
  4191cd:	cmp    ebx,esi
  4191cf:	jne    0x4191b1
  4191d1:	lea    rcx,[rip+0x114c0]        # 0x42a698
  4191d8:	call   0x405f70
  4191dd:	call   0x405fa0
  4191e2:	mov    esi,DWORD PTR [rsp+0x44]
  4191e6:	test   esi,esi
  4191e8:	jle    0x419241
  4191ea:	lea    rcx,[rip+0x114a7]        # 0x42a698
  4191f1:	xor    ebx,ebx
  4191f3:	call   0x405f70
  4191f8:	lea    rdx,[rip+0x116e9]        # 0x42a8e8
  4191ff:	mov    ecx,0x1
  419204:	call   0x406230
  419209:	nop    DWORD PTR [rax+0x0]
  419210:	mov    rax,QWORD PTR [rip+0x12429]        # 0x42b640
  419217:	mov    edx,ebx
  419219:	add    ebx,0x1
  41921c:	mov    rcx,QWORD PTR [rax]
  41921f:	call   0x416670
  419224:	mov    rcx,rax
  419227:	call   0x418a10
  41922c:	cmp    ebx,esi
  41922e:	jne    0x419210
  419230:	lea    rcx,[rip+0x11461]        # 0x42a698
  419237:	call   0x405f70
  41923c:	call   0x405fa0
  419241:	lea    rdx,[rip+0x116c5]        # 0x42a90d
  419248:	mov    ecx,0x1
  41924d:	call   0x406230
  419252:	cmp    BYTE PTR [rsp+0x4f],0x0
  419257:	je     0x4192ee
  41925d:	mov    rax,QWORD PTR [rip+0x124fc]        # 0x42b760
  419264:	mov    eax,DWORD PTR [rax]
  419266:	test   eax,eax
  419268:	jne    0x4192ee
  41926e:	lea    rcx,[rip+0x11423]        # 0x42a698
  419275:	xor    ebx,ebx
  419277:	call   0x405f70
  41927c:	lea    rdx,[rip+0x1169b]        # 0x42a91e
  419283:	mov    ecx,0x1
  419288:	call   0x406230
  41928d:	mov    r13,QWORD PTR [rip+0x124dc]        # 0x42b770
  419294:	mov    rcx,QWORD PTR [r12]
  419298:	mov    edx,ebx
  41929a:	call   0x416670
  41929f:	cmp    QWORD PTR [rax+0x48],0x0
  4192a4:	mov    rsi,rax
  4192a7:	je     0x4192da
  4192a9:	call   0x415f30
  4192ae:	mov    rcx,QWORD PTR [r13+0x0]
  4192b2:	xor    edx,edx
  4192b4:	mov    rdi,rax
  4192b7:	call   0x401550
  4192bc:	mov    rdx,QWORD PTR [r13+0x0]
  4192c0:	lea    r8,[rip+0x209]        # 0x4194d0
  4192c7:	mov    rcx,rsi
  4192ca:	mov    r9,rdi
  4192cd:	call   0x402540
  4192d2:	mov    rcx,rdi
  4192d5:	call   0x416010
  4192da:	add    ebx,0x1
  4192dd:	cmp    ebp,ebx
  4192df:	jg     0x419294
  4192e1:	lea    rcx,[rip+0x113b0]        # 0x42a698
  4192e8:	call   0x405f70
  4192ed:	nop
  4192ee:	add    rsp,0x58
  4192f2:	pop    rbx
  4192f3:	pop    rsi
  4192f4:	pop    rdi
  4192f5:	pop    rbp
  4192f6:	pop    r12
  4192f8:	pop    r13
  4192fa:	pop    r14
  4192fc:	pop    r15
  4192fe:	jmp    0x405fa0
  419303:	lea    r13,[rip+0x1132f]        # 0x42a639
  41930a:	jmp    0x419135
  41930f:	lea    r13,[rip+0x11317]        # 0x42a62d
  419316:	jmp    0x419135
  41931b:	lea    r13,[rip+0x11305]        # 0x42a627
  419322:	jmp    0x419135
  419327:	lea    r13,[rip+0x112f5]        # 0x42a623
  41932e:	jmp    0x419135
  419333:	lea    r13,[rip+0x112e3]        # 0x42a61d
  41933a:	jmp    0x419135
  41933f:	lea    r13,[rip+0x112cd]        # 0x42a613
  419346:	jmp    0x419135
  41934b:	lea    r13,[rip+0x112c6]        # 0x42a618
  419352:	jmp    0x419135
  419357:	lea    rcx,[rip+0x111c0]        # 0x42a51e
  41935e:	xor    r13d,r13d
  419361:	call   0x406300
  419366:	test   eax,eax
  419368:	jne    0x419135
  41936e:	lea    rdx,[rip+0x11164]        # 0x42a4d9
  419375:	lea    rcx,[rip+0x111bc]        # 0x42a538
  41937c:	mov    r8d,0xe8
  419382:	call   0x41da30
  419387:	jmp    0x419135
  41938c:	mov    rbx,QWORD PTR [rip+0x1255d]        # 0x42b8f0
  419393:	jmp    0x418e71
  419398:	mov    rax,QWORD PTR [rip+0x122a1]        # 0x42b640
  41939f:	xor    ebp,ebp
  4193a1:	mov    BYTE PTR [rsp+0x4f],0x0
  4193a6:	mov    rax,QWORD PTR [rax]
  4193a9:	test   rax,rax
  4193ac:	jne    0x418d0d
  4193b2:	mov    rax,QWORD PTR [rip+0x12387]        # 0x42b740
  4193b9:	mov    DWORD PTR [rsp+0x44],0x0
  4193c1:	mov    rax,QWORD PTR [rax]
  4193c4:	test   rax,rax
  4193c7:	jne    0x418d27
  4193cd:	mov    DWORD PTR [rsp+0x48],0x0
  4193d5:	jmp    0x418d2e
  4193da:	xor    edi,edi
  4193dc:	jmp    0x418cdc
  4193e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4193e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193f0:	sub    rsp,0x28
  4193f4:	lea    rdx,[rip+0x11575]        # 0x42a970
  4193fb:	mov    ecx,0x1
  419400:	call   0x406230
  419405:	lea    rcx,[rip+0x1128c]        # 0x42a698
  41940c:	call   0x405f70
  419411:	lea    rdx,[rip+0x11568]        # 0x42a980
  419418:	mov    ecx,0x1
  41941d:	call   0x406230
  419422:	lea    rcx,[rip+0x11557]        # 0x42a980
  419429:	call   0x405f70
  41942e:	nop
  41942f:	add    rsp,0x28
  419433:	jmp    0x405fa0
  419438:	nop    DWORD PTR [rax+rax*1+0x0]
  419440:	push   rdi
  419441:	push   rsi
  419442:	push   rbx
  419443:	sub    rsp,0x20
  419447:	test   rcx,rcx
  41944a:	mov    rbx,rcx
  41944d:	mov    esi,edx
  41944f:	je     0x4194b0
  419451:	mov    rcx,QWORD PTR [rcx+0x10]
  419455:	mov    r8d,DWORD PTR [rbx+0x8]
  419459:	lea    rax,[rip+0x11238]        # 0x42a698
  419460:	mov    edx,0x22
  419465:	test   rcx,rcx
  419468:	cmove  rcx,rax
  41946c:	call   0x4067d0
  419471:	mov    DWORD PTR [rbx+0x8],0x0
  419478:	mov    rdi,rax
  41947b:	movsx  esi,sil
  41947f:	mov    rcx,rbx
  419482:	mov    edx,esi
  419484:	call   0x416110
  419489:	test   rdi,rdi
  41948c:	je     0x419499
  41948e:	mov    rdx,rdi
  419491:	mov    rcx,rbx
  419494:	call   0x416200
  419499:	mov    edx,esi
  41949b:	mov    rcx,rbx
  41949e:	add    rsp,0x20
  4194a2:	pop    rbx
  4194a3:	pop    rsi
  4194a4:	pop    rdi
  4194a5:	jmp    0x416110
  4194aa:	nop    WORD PTR [rax+rax*1+0x0]
  4194b0:	lea    rcx,[rip+0x111e1]        # 0x42a698
  4194b7:	xor    r8d,r8d
  4194ba:	mov    edx,0x22
  4194bf:	call   0x4067d0
  4194c4:	mov    rdi,rax
  4194c7:	jmp    0x41947b
  4194c9:	nop    DWORD PTR [rax+0x0]
  4194d0:	push   r15
  4194d2:	push   r14
  4194d4:	push   r13
  4194d6:	push   r12
  4194d8:	push   rbp
  4194d9:	push   rdi
  4194da:	push   rsi
  4194db:	push   rbx
  4194dc:	sub    rsp,0x58
  4194e0:	mov    eax,DWORD PTR [rdx+0x8]
  4194e3:	mov    r13,rdx
  4194e6:	mov    r14,r8
  4194e9:	mov    r12d,r9d
  4194ec:	cmp    eax,0x67
  4194ef:	je     0x419670
  4194f5:	cmp    eax,0x66
  4194f8:	je     0x419540
  4194fa:	lea    rcx,[rip+0x11778]        # 0x42ac79
  419501:	call   0x406300
  419506:	test   eax,eax
  419508:	je     0x419520
  41950a:	add    rsp,0x58
  41950e:	pop    rbx
  41950f:	pop    rsi
  419510:	pop    rdi
  419511:	pop    rbp
  419512:	pop    r12
  419514:	pop    r13
  419516:	pop    r14
  419518:	pop    r15
  41951a:	ret    
  41951b:	nop    DWORD PTR [rax+rax*1+0x0]
  419520:	lea    rdx,[rip+0x10fb2]        # 0x42a4d9
  419527:	lea    rcx,[rip+0x1176a]        # 0x42ac98
  41952e:	mov    r8d,0x1a8
  419534:	call   0x41da30
  419539:	jmp    0x41950a
  41953b:	nop    DWORD PTR [rax+rax*1+0x0]
  419540:	mov    rax,QWORD PTR [rdx+0x50]
  419544:	lea    rcx,[rip+0x1114d]        # 0x42a698
  41954b:	mov    r15d,DWORD PTR [rax+0x5c]
  41954f:	call   0x405f70
  419554:	lea    rdx,[rip+0x1114c]        # 0x42a6a7
  41955b:	mov    ecx,0x1
  419560:	call   0x406230
  419565:	test   r12d,r12d
  419568:	jne    0x4196f0
  41956e:	mov    ecx,r15d
  419571:	call   0x418bc0
  419576:	mov    ecx,r15d
  419579:	mov    rdi,rax
  41957c:	call   0x418bc0
  419581:	mov    ecx,0x1
  419586:	mov    rbx,rax
  419589:	call   0x406180
  41958e:	mov    rsi,QWORD PTR [rip+0x1235b]        # 0x42b8f0
  419595:	mov    QWORD PTR [rsp+0x20],rdi
  41959a:	lea    rdx,[rip+0x114ff]        # 0x42aaa0
  4195a1:	mov    r8,rax
  4195a4:	mov    r9,rbx
  4195a7:	mov    rcx,QWORD PTR [rsi]
  4195aa:	call   0x406050
  4195af:	mov    rcx,QWORD PTR [rsi]
  4195b2:	call   0x405f30
  4195b7:	cmp    r15d,0x2
  4195bb:	je     0x419ce0
  4195c1:	mov    rcx,r14
  4195c4:	lea    rbx,[rip+0x110cd]        # 0x42a698
  4195cb:	call   0x405e30
  4195d0:	test   r14,r14
  4195d3:	je     0x4195e7
  4195d5:	mov    rbx,QWORD PTR [r14+0x10]
  4195d9:	lea    rax,[rip+0x110b8]        # 0x42a698
  4195e0:	test   rbx,rbx
  4195e3:	cmove  rbx,rax
  4195e7:	mov    ecx,r15d
  4195ea:	call   0x418ad0
  4195ef:	mov    ecx,0x1
  4195f4:	mov    rdi,rax
  4195f7:	call   0x406180
  4195fc:	mov    QWORD PTR [rsp+0x20],rbx
  419601:	mov    rcx,QWORD PTR [rsi]
  419604:	lea    rdx,[rip+0x114d3]        # 0x42aade
  41960b:	mov    r8,rax
  41960e:	mov    r9,rdi
  419611:	call   0x406050
  419616:	mov    rcx,QWORD PTR [rsi]
  419619:	call   0x405f30
  41961e:	mov    rcx,QWORD PTR [r13+0x10]
  419622:	call   0x406a70
  419627:	mov    ecx,0x1
  41962c:	mov    rbx,rax
  41962f:	call   0x406180
  419634:	mov    rcx,QWORD PTR [rsi]
  419637:	lea    rdx,[rip+0x114b5]        # 0x42aaf3
  41963e:	mov    r8,rax
  419641:	mov    r9,rbx
  419644:	call   0x406050
  419649:	mov    rcx,QWORD PTR [rsi]
  41964c:	call   0x405f30
  419651:	lea    rdx,[rip+0x11328]        # 0x42a980
  419658:	mov    ecx,0x1
  41965d:	call   0x406230
  419662:	call   0x405fa0
  419667:	jmp    0x41950a
  41966c:	nop    DWORD PTR [rax+0x0]
  419670:	mov    rax,QWORD PTR [rdx+0x48]
  419674:	mov    rdi,QWORD PTR [rdx+0x50]
  419678:	test   rax,rax
  41967b:	mov    ebx,DWORD PTR [rdi+0x5c]
  41967e:	je     0x419dbb
  419684:	mov    rbp,QWORD PTR [rax+0x10]
  419688:	mov    rsi,QWORD PTR [r13+0x10]
  41968c:	mov    ecx,0x1
  419691:	call   0x406180
  419696:	lea    rcx,[rip+0x112e8]        # 0x42a985
  41969d:	mov    rdx,rax
  4196a0:	mov    r8,rsi
  4196a3:	call   0x406090
  4196a8:	cmp    ebx,0x2
  4196ab:	je     0x4199a9
  4196b1:	mov    rcx,r14
  4196b4:	call   0x405e30
  4196b9:	mov    rcx,r14
  4196bc:	call   0x416430
  4196c1:	test   r14,r14
  4196c4:	mov    r12,rax
  4196c7:	je     0x4196d1
  4196c9:	mov    DWORD PTR [r14+0x8],0x0
  4196d1:	cmp    ebx,0xf
  4196d4:	ja     0x419c9f
  4196da:	lea    r8,[rip+0x115df]        # 0x42acc0
  4196e1:	mov    eax,ebx
  4196e3:	movsxd rax,DWORD PTR [r8+rax*4]
  4196e7:	add    r8,rax
  4196ea:	jmp    r8
  4196ed:	nop    DWORD PTR [rax]
  4196f0:	call   0x415f30
  4196f5:	lea    rdx,[rip+0x11413]        # 0x42ab0f
  4196fc:	mov    rcx,rax
  4196ff:	mov    rdi,rax
  419702:	call   0x416200
  419707:	test   r12d,r12d
  41970a:	jle    0x419788
  41970c:	mov    rax,QWORD PTR [r13+0x90]
  419713:	lea    rbp,[rsp+0x30]
  419718:	lea    r8,[rip+0x113fb]        # 0x42ab1a
  41971f:	mov    edx,0x20
  419724:	lea    rsi,[r13+0x98]
  41972b:	xor    ebx,ebx
  41972d:	mov    rcx,rbp
  419730:	mov    r9,QWORD PTR [rax+0x2100]
  419737:	call   0x40b5e0
  41973c:	jmp    0x419775
  41973e:	xchg   ax,ax
  419740:	mov    rax,QWORD PTR [rsi]
  419743:	lea    r8,[rip+0x113d0]        # 0x42ab1a
  41974a:	mov    edx,0x20
  41974f:	mov    rcx,rbp
  419752:	mov    r9,QWORD PTR [rax+0x2100]
  419759:	call   0x40b5e0
  41975e:	test   ebx,ebx
  419760:	jle    0x419771
  419762:	lea    rdx,[rip+0x11219]        # 0x42a982
  419769:	mov    rcx,rdi
  41976c:	call   0x416200
  419771:	add    rsi,0x8
  419775:	mov    rdx,rbp
  419778:	mov    rcx,rdi
  41977b:	add    ebx,0x1
  41977e:	call   0x416200
  419783:	cmp    ebx,r12d
  419786:	jne    0x419740
  419788:	lea    rdx,[rip+0x111f1]        # 0x42a980
  41978f:	mov    rcx,rdi
  419792:	call   0x416200
  419797:	cmp    r15d,0x2
  41979b:	je     0x419d50
  4197a1:	mov    ecx,r15d
  4197a4:	call   0x418ad0
  4197a9:	mov    ecx,r15d
  4197ac:	mov    rbp,rax
  4197af:	call   0x418ad0
  4197b4:	mov    ecx,0x1
  4197b9:	mov    rbx,rax
  4197bc:	call   0x406180
  4197c1:	mov    rsi,QWORD PTR [rip+0x12128]        # 0x42b8f0
  4197c8:	mov    QWORD PTR [rsp+0x20],rbp
  4197cd:	lea    rdx,[rip+0x1135f]        # 0x42ab33
  4197d4:	mov    r8,rax
  4197d7:	mov    r9,rbx
  4197da:	mov    rcx,QWORD PTR [rsi]
  4197dd:	call   0x406050
  4197e2:	mov    rcx,r14
  4197e5:	call   0x405e30
  4197ea:	mov    rcx,QWORD PTR [rsi]
  4197ed:	call   0x405f30
  4197f2:	mov    rcx,r14
  4197f5:	call   0x405f30
  4197fa:	lea    rcx,[rip+0x1117f]        # 0x42a980
  419801:	call   0x405f60
  419806:	lea    rcx,[rip+0x11343]        # 0x42ab50
  41980d:	lea    rbx,[rip+0x10e84]        # 0x42a698
  419814:	call   0x405f70
  419819:	test   rdi,rdi
  41981c:	je     0x419830
  41981e:	mov    rbx,QWORD PTR [rdi+0x10]
  419822:	lea    rax,[rip+0x10e6f]        # 0x42a698
  419829:	test   rbx,rbx
  41982c:	cmove  rbx,rax
  419830:	mov    ecx,r15d
  419833:	call   0x418bc0
  419838:	mov    ecx,r15d
  41983b:	mov    r14,rax
  41983e:	call   0x418bc0
  419843:	mov    ecx,0x1
  419848:	mov    rbp,rax
  41984b:	call   0x406180
  419850:	mov    QWORD PTR [rsp+0x28],rbx
  419855:	mov    QWORD PTR [rsp+0x20],r14
  41985a:	lea    rdx,[rip+0x112f7]        # 0x42ab58
  419861:	mov    rcx,QWORD PTR [rsi]
  419864:	mov    r8,rax
  419867:	mov    r9,rbp
  41986a:	call   0x406050
  41986f:	mov    rcx,QWORD PTR [rsi]
  419872:	call   0x405f30
  419877:	lea    rdx,[rip+0x11302]        # 0x42ab80
  41987e:	mov    ecx,0x1
  419883:	call   0x406230
  419888:	lea    rdx,[rip+0x1131f]        # 0x42abae
  41988f:	mov    ecx,0x1
  419894:	call   0x406230
  419899:	lea    rdx,[rip+0x1131d]        # 0x42abbd
  4198a0:	mov    ecx,0x1
  4198a5:	call   0x406230
  4198aa:	cmp    r15d,0x2
  4198ae:	je     0x419d2f
  4198b4:	mov    ecx,r15d
  4198b7:	call   0x418bc0
  4198bc:	mov    ecx,0x2
  4198c1:	mov    rbx,rax
  4198c4:	call   0x406180
  4198c9:	mov    rcx,QWORD PTR [rsi]
  4198cc:	lea    rdx,[rip+0x11335]        # 0x42ac08
  4198d3:	mov    r8,rax
  4198d6:	mov    r9,rbx
  4198d9:	call   0x406050
  4198de:	mov    rcx,QWORD PTR [rsi]
  4198e1:	call   0x405f30
  4198e6:	mov    rcx,rdi
  4198e9:	call   0x416010
  4198ee:	mov    ecx,0x1
  4198f3:	call   0x406180
  4198f8:	mov    rcx,QWORD PTR [rsi]
  4198fb:	lea    rdx,[rip+0x1132c]        # 0x42ac2e
  419902:	mov    r8,rax
  419905:	call   0x406050
  41990a:	test   r12d,r12d
  41990d:	jle    0x41995a
  41990f:	mov    rax,QWORD PTR [rsp+0xc0]
  419917:	lea    r8,[rip+0x10d7a]        # 0x42a698
  41991e:	xor    ebx,ebx
  419920:	lea    r14,[rip+0x1105b]        # 0x42a982
  419927:	mov    rbp,r8
  41992a:	mov    r9,QWORD PTR [rax]
  41992d:	lea    rdi,[rax+0x8]
  419931:	jmp    0x419943
  419933:	test   ebx,ebx
  419935:	mov    r8,rbp
  419938:	mov    r9,QWORD PTR [rdi]
  41993b:	cmovg  r8,r14
  41993f:	add    rdi,0x8
  419943:	mov    rcx,QWORD PTR [rsi]
  419946:	lea    rdx,[rip+0x11326]        # 0x42ac73
  41994d:	add    ebx,0x1
  419950:	call   0x406020
  419955:	cmp    ebx,r12d
  419958:	jne    0x419933
  41995a:	mov    rcx,QWORD PTR [rsi]
  41995d:	lea    rdx,[rip+0x112e6]        # 0x42ac4a
  419964:	call   0x416200
  419969:	mov    rcx,QWORD PTR [rsi]
  41996c:	call   0x405f30
  419971:	mov    rcx,QWORD PTR [r13+0x10]
  419975:	call   0x406a70
  41997a:	mov    ecx,0x1
  41997f:	mov    rbx,rax
  419982:	call   0x406180
  419987:	mov    rcx,QWORD PTR [rsi]
  41998a:	lea    rdx,[rip+0x112bf]        # 0x42ac50
  419991:	mov    r8,rax
  419994:	mov    r9,rbx
  419997:	call   0x406050
  41999c:	mov    rcx,QWORD PTR [rsi]
  41999f:	call   0x405f30
  4199a4:	jmp    0x419651
  4199a9:	test   r14,r14
  4199ac:	je     0x419dc2
  4199b2:	mov    eax,DWORD PTR [r14+0x8]
  4199b6:	test   eax,eax
  4199b8:	je     0x419d95
  4199be:	mov    edx,0x22
  4199c3:	mov    rcx,r14
  4199c6:	call   0x419440
  4199cb:	mov    rcx,r14
  4199ce:	call   0x4164d0
  4199d3:	cmp    QWORD PTR [r13+0x20f0],0x0
  4199db:	je     0x419dcd
  4199e1:	test   r14,r14
  4199e4:	lea    rbx,[rip+0x10cad]        # 0x42a698
  4199eb:	je     0x4199ff
  4199ed:	mov    rbx,QWORD PTR [r14+0x10]
  4199f1:	lea    rax,[rip+0x10ca0]        # 0x42a698
  4199f8:	test   rbx,rbx
  4199fb:	cmove  rbx,rax
  4199ff:	mov    rcx,QWORD PTR [r13+0x10]
  419a03:	call   0x406a70
  419a08:	mov    rbp,rax
  419a0b:	mov    rax,QWORD PTR [r13+0x20f0]
  419a12:	mov    rcx,QWORD PTR [rax+0x10]
  419a16:	call   0x406a70
  419a1b:	mov    ecx,0x1
  419a20:	mov    rdi,rax
  419a23:	call   0x406180
  419a28:	mov    rsi,QWORD PTR [rip+0x11ec1]        # 0x42b8f0
  419a2f:	mov    QWORD PTR [rsp+0x28],rbx
  419a34:	lea    rdx,[rip+0x11035]        # 0x42aa70
  419a3b:	mov    QWORD PTR [rsp+0x20],rbp
  419a40:	mov    r8,rax
  419a43:	mov    r9,rdi
  419a46:	mov    rcx,QWORD PTR [rsi]
  419a49:	call   0x406050
  419a4e:	mov    rcx,QWORD PTR [rsi]
  419a51:	call   0x405f30
  419a56:	call   0x405fa0
  419a5b:	jmp    0x419662
  419a60:	lea    r8,[rip+0x10aab]        # 0x42a512
  419a67:	mov    rbx,QWORD PTR [rip+0x11e82]        # 0x42b8f0
  419a6e:	lea    rdx,[rip+0x10f2a]        # 0x42a99f
  419a75:	mov    rcx,QWORD PTR [rbx]
  419a78:	call   0x406050
  419a7d:	mov    rdx,QWORD PTR [rbx]
  419a80:	mov    rcx,r14
  419a83:	call   0x416250
  419a88:	lea    rdx,[rip+0x10c18]        # 0x42a6a7
  419a8f:	mov    rcx,r14
  419a92:	call   0x416200
  419a97:	mov    rdx,r12
  419a9a:	mov    rcx,r14
  419a9d:	call   0x416200
  419aa2:	lea    rdx,[rip+0x10ed7]        # 0x42a980
  419aa9:	mov    rcx,r14
  419aac:	call   0x416200
  419ab1:	mov    rcx,r12
  419ab4:	call   0x4062e0
  419ab9:	jmp    0x419662
  419abe:	lea    r8,[rip+0x10a46]        # 0x42a50b
  419ac5:	mov    rsi,QWORD PTR [rip+0x11e24]        # 0x42b8f0
  419acc:	lea    rdx,[rip+0x10ecc]        # 0x42a99f
  419ad3:	mov    rcx,QWORD PTR [rsi]
  419ad6:	call   0x406050
  419adb:	mov    rdx,QWORD PTR [rsi]
  419ade:	mov    rcx,r14
  419ae1:	call   0x416250
  419ae6:	lea    rdx,[rip+0x10bba]        # 0x42a6a7
  419aed:	mov    rcx,r14
  419af0:	call   0x416200
  419af5:	mov    rdx,r12
  419af8:	mov    rcx,r14
  419afb:	call   0x416200
  419b00:	lea    rdx,[rip+0x10e79]        # 0x42a980
  419b07:	mov    rcx,r14
  419b0a:	call   0x416200
  419b0f:	mov    rcx,r12
  419b12:	call   0x4062e0
  419b17:	lea    rdx,[rip+0x10b89]        # 0x42a6a7
  419b1e:	mov    ecx,0x1
  419b23:	call   0x406230
  419b28:	mov    ecx,DWORD PTR [rdi+0x5c]
  419b2b:	call   0x418ad0
  419b30:	mov    ecx,0x1
  419b35:	mov    rbx,rax
  419b38:	call   0x406180
  419b3d:	mov    QWORD PTR [rsp+0x20],rbp
  419b42:	mov    rcx,QWORD PTR [rsi]
  419b45:	lea    rdx,[rip+0x10e5c]        # 0x42a9a8
  419b4c:	mov    r8,rax
  419b4f:	mov    r9,rbx
  419b52:	call   0x406050
  419b57:	mov    rcx,QWORD PTR [rsi]
  419b5a:	call   0x405f30
  419b5f:	mov    rcx,r14
  419b62:	call   0x405f30
  419b67:	lea    rcx,[rip+0x10e72]        # 0x42a9e0
  419b6e:	call   0x405f70
  419b73:	cmp    QWORD PTR [r13+0x20f0],0x0
  419b7b:	mov    rcx,QWORD PTR [r13+0x10]
  419b7f:	je     0x419e27
  419b85:	call   0x406a70
  419b8a:	mov    rdi,rax
  419b8d:	mov    rax,QWORD PTR [r13+0x20f0]
  419b94:	mov    rcx,QWORD PTR [rax+0x10]
  419b98:	call   0x406a70
  419b9d:	mov    ecx,0x1
  419ba2:	mov    rbx,rax
  419ba5:	call   0x406180
  419baa:	mov    QWORD PTR [rsp+0x20],rdi
  419baf:	mov    rcx,QWORD PTR [rsi]
  419bb2:	lea    rdx,[rip+0x10e5f]        # 0x42aa18
  419bb9:	mov    r8,rax
  419bbc:	mov    r9,rbx
  419bbf:	call   0x406050
  419bc4:	mov    rcx,QWORD PTR [rsi]
  419bc7:	call   0x405f30
  419bcc:	lea    rdx,[rip+0x10dad]        # 0x42a980
  419bd3:	mov    ecx,0x1
  419bd8:	call   0x406230
  419bdd:	call   0x405fa0
  419be2:	jmp    0x419662
  419be7:	lea    r8,[rip+0x10917]        # 0x42a505
  419bee:	jmp    0x419ac5
  419bf3:	lea    r8,[rip+0x10907]        # 0x42a501
  419bfa:	jmp    0x419ac5
  419bff:	lea    r8,[rip+0x108fb]        # 0x42a501
  419c06:	jmp    0x419a67
  419c0b:	lea    r8,[rip+0x108e9]        # 0x42a4fb
  419c12:	jmp    0x419ac5
  419c17:	lea    r15,[rip+0x108f9]        # 0x42a517
  419c1e:	mov    rsi,QWORD PTR [rip+0x11ccb]        # 0x42b8f0
  419c25:	lea    rdx,[rip+0x10d73]        # 0x42a99f
  419c2c:	mov    r8,r15
  419c2f:	mov    rcx,QWORD PTR [rsi]
  419c32:	call   0x406050
  419c37:	mov    rdx,QWORD PTR [rsi]
  419c3a:	mov    rcx,r14
  419c3d:	call   0x416250
  419c42:	lea    rdx,[rip+0x10a5e]        # 0x42a6a7
  419c49:	mov    rcx,r14
  419c4c:	call   0x416200
  419c51:	mov    rdx,r12
  419c54:	mov    rcx,r14
  419c57:	call   0x416200
  419c5c:	lea    rdx,[rip+0x10d1d]        # 0x42a980
  419c63:	mov    rcx,r14
  419c66:	call   0x416200
  419c6b:	mov    rcx,r12
  419c6e:	call   0x4062e0
  419c73:	cmp    ebx,0x1
  419c76:	je     0x419b17
  419c7c:	jl     0x419662
  419c82:	sub    ebx,0x3
  419c85:	cmp    ebx,0x3
  419c88:	jbe    0x419b17
  419c8e:	jmp    0x419662
  419c93:	lea    r8,[rip+0x1085c]        # 0x42a4f6
  419c9a:	jmp    0x419ac5
  419c9f:	lea    rcx,[rip+0x10878]        # 0x42a51e
  419ca6:	mov    edx,ebx
  419ca8:	xor    r15d,r15d
  419cab:	call   0x406300
  419cb0:	test   eax,eax
  419cb2:	jne    0x419c1e
  419cb8:	lea    rdx,[rip+0x1081a]        # 0x42a4d9
  419cbf:	lea    rcx,[rip+0x10872]        # 0x42a538
  419cc6:	mov    r8d,0x15a
  419ccc:	call   0x41da30
  419cd1:	jmp    0x419c1e
  419cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419ce0:	mov    edx,0x27
  419ce5:	mov    rcx,r14
  419ce8:	lea    rbx,[rip+0x109a9]        # 0x42a698
  419cef:	call   0x419440
  419cf4:	test   r14,r14
  419cf7:	je     0x419d0b
  419cf9:	mov    rbx,QWORD PTR [r14+0x10]
  419cfd:	lea    rax,[rip+0x10994]        # 0x42a698
  419d04:	test   rbx,rbx
  419d07:	cmove  rbx,rax
  419d0b:	mov    ecx,0x1
  419d10:	call   0x406180
  419d15:	mov    rcx,QWORD PTR [rsi]
  419d18:	lea    rdx,[rip+0x10da8]        # 0x42aac7
  419d1f:	mov    r8,rax
  419d22:	mov    r9,rbx
  419d25:	call   0x406050
  419d2a:	jmp    0x419616
  419d2f:	mov    ecx,0x2
  419d34:	call   0x406180
  419d39:	mov    rcx,QWORD PTR [rsi]
  419d3c:	lea    rdx,[rip+0x10e95]        # 0x42abd8
  419d43:	mov    r8,rax
  419d46:	call   0x406050
  419d4b:	jmp    0x4198de
  419d50:	mov    edx,0x22
  419d55:	mov    rcx,r14
  419d58:	call   0x419440
  419d5d:	mov    ecx,0x1
  419d62:	call   0x406180
  419d67:	mov    rsi,QWORD PTR [rip+0x11b82]        # 0x42b8f0
  419d6e:	lea    rdx,[rip+0x10da9]        # 0x42ab1e
  419d75:	mov    r8,rax
  419d78:	mov    rcx,QWORD PTR [rsi]
  419d7b:	call   0x406050
  419d80:	mov    rcx,QWORD PTR [rsi]
  419d83:	call   0x405f30
  419d88:	mov    rcx,r14
  419d8b:	call   0x405f30
  419d90:	jmp    0x419806
  419d95:	xor    edx,edx
  419d97:	mov    rcx,r14
  419d9a:	call   0x416110
  419d9f:	mov    DWORD PTR [r14+0x8],0x0
  419da7:	lea    rdx,[rip+0x10bee]        # 0x42a99c
  419dae:	mov    rcx,r14
  419db1:	call   0x416200
  419db6:	jmp    0x4199cb
  419dbb:	xor    ebp,ebp
  419dbd:	jmp    0x419688
  419dc2:	xor    edx,edx
  419dc4:	xor    ecx,ecx
  419dc6:	call   0x416110
  419dcb:	jmp    0x419da7
  419dcd:	test   r14,r14
  419dd0:	lea    rbx,[rip+0x108c1]        # 0x42a698
  419dd7:	je     0x419deb
  419dd9:	mov    rbx,QWORD PTR [r14+0x10]
  419ddd:	lea    rax,[rip+0x108b4]        # 0x42a698
  419de4:	test   rbx,rbx
  419de7:	cmove  rbx,rax
  419deb:	mov    rcx,QWORD PTR [r13+0x10]
  419def:	call   0x406a70
  419df4:	mov    ecx,0x1
  419df9:	mov    rdi,rax
  419dfc:	call   0x406180
  419e01:	mov    rsi,QWORD PTR [rip+0x11ae8]        # 0x42b8f0
  419e08:	mov    QWORD PTR [rsp+0x20],rbx
  419e0d:	lea    rdx,[rip+0x10c34]        # 0x42aa48
  419e14:	mov    r8,rax
  419e17:	mov    r9,rdi
  419e1a:	mov    rcx,QWORD PTR [rsi]
  419e1d:	call   0x406050
  419e22:	jmp    0x419a4e
  419e27:	call   0x406a70
  419e2c:	mov    ecx,0x1
  419e31:	mov    rbx,rax
  419e34:	call   0x406180
  419e39:	mov    rcx,QWORD PTR [rsi]
  419e3c:	lea    rdx,[rip+0x10ba5]        # 0x42a9e8
  419e43:	mov    r8,rax
  419e46:	mov    r9,rbx
  419e49:	call   0x406050
  419e4e:	jmp    0x419bc4
  419e53:	nop    DWORD PTR [rax]
  419e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e60:	sub    rsp,0x28
  419e64:	cmp    ecx,0xf
  419e67:	ja     0x419f60
  419e6d:	lea    rax,[rip+0x10eec]        # 0x42ad60
  419e74:	mov    edx,ecx
  419e76:	movsxd rdx,DWORD PTR [rax+rdx*4]
  419e7a:	add    rax,rdx
  419e7d:	jmp    rax
  419e7f:	nop
  419e80:	lea    rax,[rip+0x10e79]        # 0x42ad00
  419e87:	nop    WORD PTR [rax+rax*1+0x0]
  419e90:	add    rsp,0x28
  419e94:	ret    
  419e95:	lea    rax,[rip+0x1065f]        # 0x42a4fb
  419e9c:	jmp    0x419e90
  419e9e:	xchg   ax,ax
  419ea0:	lea    rax,[rip+0x1065a]        # 0x42a501
  419ea7:	jmp    0x419e90
  419ea9:	nop    DWORD PTR [rax+0x0]
  419eb0:	lea    rax,[rip+0x1064e]        # 0x42a505
  419eb7:	jmp    0x419e90
  419eb9:	nop    DWORD PTR [rax+0x0]
  419ec0:	lea    rax,[rip+0x10644]        # 0x42a50b
  419ec7:	jmp    0x419e90
  419ec9:	nop    DWORD PTR [rax+0x0]
  419ed0:	lea    rax,[rip+0x10e34]        # 0x42ad0b
  419ed7:	jmp    0x419e90
  419ed9:	nop    DWORD PTR [rax+0x0]
  419ee0:	lea    rax,[rip+0x10e2a]        # 0x42ad11
  419ee7:	jmp    0x419e90
  419ee9:	nop    DWORD PTR [rax+0x0]
  419ef0:	lea    rax,[rip+0x10e21]        # 0x42ad18
  419ef7:	jmp    0x419e90
  419ef9:	nop    DWORD PTR [rax+0x0]
  419f00:	lea    rax,[rip+0x10e16]        # 0x42ad1d
  419f07:	jmp    0x419e90
  419f09:	nop    DWORD PTR [rax+0x0]
  419f10:	lea    rax,[rip+0x10e0f]        # 0x42ad26
  419f17:	jmp    0x419e90
  419f1c:	nop    DWORD PTR [rax+0x0]
  419f20:	lea    rax,[rip+0x10e09]        # 0x42ad30
  419f27:	jmp    0x419e90
  419f2c:	nop    DWORD PTR [rax+0x0]
  419f30:	lea    rax,[rip+0x10e00]        # 0x42ad37
  419f37:	jmp    0x419e90
  419f3c:	nop    DWORD PTR [rax+0x0]
  419f40:	lea    rax,[rip+0x10df7]        # 0x42ad3e
  419f47:	jmp    0x419e90
  419f4c:	nop    DWORD PTR [rax+0x0]
  419f50:	lea    rax,[rip+0x10dae]        # 0x42ad05
  419f57:	jmp    0x419e90
  419f5c:	nop    DWORD PTR [rax+0x0]
  419f60:	mov    edx,ecx
  419f62:	lea    rcx,[rip+0x10dda]        # 0x42ad43
  419f69:	call   0x40b3d0
  419f6e:	xor    eax,eax
  419f70:	jmp    0x419e90
  419f75:	nop
  419f76:	nop
  419f77:	nop
  419f78:	nop
  419f79:	nop
  419f7a:	nop
  419f7b:	nop
  419f7c:	nop
  419f7d:	nop
  419f7e:	nop
  419f7f:	nop
  419f80:	mov    rdx,QWORD PTR [rsp+0x28]
  419f85:	test   rdx,rdx
  419f88:	je     0x419f9b
  419f8a:	mov    eax,DWORD PTR [rip+0x18cd0]        # 0x432c60
  419f90:	add    eax,0x1
  419f93:	mov    DWORD PTR [rip+0x18cc7],eax        # 0x432c60
  419f99:	mov    DWORD PTR [rdx],eax
  419f9b:	mov    eax,0x1
  419fa0:	ret    
  419fa1:	nop    DWORD PTR [rax+rax*1+0x0]
  419fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419fb0:	mov    eax,0x1
  419fb5:	ret    
  419fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419fc0:	mov    eax,0x1
  419fc5:	ret    
  419fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419fd0:	test   r8,r8
  419fd3:	je     0x419fe7
  419fd5:	mov    eax,DWORD PTR [rip+0x18c85]        # 0x432c60
  419fdb:	add    eax,0x1
  419fde:	mov    DWORD PTR [rip+0x18c7c],eax        # 0x432c60
  419fe4:	mov    DWORD PTR [r8],eax
  419fe7:	test   r9,r9
  419fea:	je     0x419ff3
  419fec:	mov    QWORD PTR [r9],0x0
  419ff3:	mov    eax,0x1
  419ff8:	ret    
  419ff9:	nop    DWORD PTR [rax+0x0]
  41a000:	push   rbp
  41a001:	push   rdi
  41a002:	push   rsi
  41a003:	push   rbx
  41a004:	sub    rsp,0x28
  41a008:	mov    rsi,rdx
  41a00b:	mov    QWORD PTR [rsp+0x68],r9
  41a010:	mov    rdi,r8
  41a013:	call   0x415f30
  41a018:	mov    rbx,rax
  41a01b:	mov    eax,DWORD PTR [rsi]
  41a01d:	cmp    eax,0xc
  41a020:	ja     0x41a210
  41a026:	lea    r9,[rip+0x10e03]        # 0x42ae30
  41a02d:	mov    r10d,eax
  41a030:	movsxd rdx,DWORD PTR [r9+r10*4]
  41a034:	add    r9,rdx
  41a037:	jmp    r9
  41a03a:	nop    WORD PTR [rax+rax*1+0x0]
  41a040:	movsxd r8,DWORD PTR [rsi+0x8]
  41a044:	mov    rcx,QWORD PTR [rsi+0x10]
  41a048:	mov    edx,0x22
  41a04d:	call   0x406540
  41a052:	mov    rcx,rax
  41a055:	mov    rbp,rax
  41a058:	call   0x41db50
  41a05d:	lea    rcx,[rax+0x3]
  41a061:	call   0x415600
  41a066:	lea    rcx,[rax+0x1]
  41a06a:	mov    rsi,rax
  41a06d:	mov    rdx,rbp
  41a070:	mov    BYTE PTR [rax],0x22
  41a073:	call   0x41db58
  41a078:	mov    rcx,rsi
  41a07b:	call   0x41db50
  41a080:	mov    edx,0x22
  41a085:	mov    rcx,rdi
  41a088:	mov    WORD PTR [rsi+rax*1],dx
  41a08c:	mov    rdx,rsi
  41a08f:	call   0x416200
  41a094:	mov    rcx,rbx
  41a097:	call   0x416010
  41a09c:	mov    eax,0x1
  41a0a1:	add    rsp,0x28
  41a0a5:	pop    rbx
  41a0a6:	pop    rsi
  41a0a7:	pop    rdi
  41a0a8:	pop    rbp
  41a0a9:	ret    
  41a0aa:	nop    WORD PTR [rax+rax*1+0x0]
  41a0b0:	movsx  r8d,BYTE PTR [rsi+0x8]
  41a0b5:	lea    rdx,[rip+0x10cee]        # 0x42adaa
  41a0bc:	mov    rcx,rbx
  41a0bf:	call   0x406020
  41a0c4:	mov    rdx,rbx
  41a0c7:	mov    rcx,rdi
  41a0ca:	call   0x416250
  41a0cf:	jmp    0x41a094
  41a0d1:	movsx  r8d,BYTE PTR [rsi+0x8]
  41a0d6:	cmp    r8b,0x27
  41a0da:	je     0x41a244
  41a0e0:	lea    rdx,[rip+0x10cbe]        # 0x42ada5
  41a0e7:	mov    rcx,rbx
  41a0ea:	call   0x406020
  41a0ef:	jmp    0x41a0c4
  41a0f1:	movsx  r8d,WORD PTR [rsi+0x8]
  41a0f6:	lea    rdx,[rip+0x10cb2]        # 0x42adaf
  41a0fd:	mov    rcx,rbx
  41a100:	call   0x406020
  41a105:	jmp    0x41a0c4
  41a107:	nop    WORD PTR [rax+rax*1+0x0]
  41a110:	mov    r8d,DWORD PTR [rsi+0x8]
  41a114:	lea    rdx,[rip+0x10c98]        # 0x42adb3
  41a11b:	mov    rcx,rbx
  41a11e:	call   0x406020
  41a123:	jmp    0x41a0c4
  41a125:	pxor   xmm0,xmm0
  41a129:	lea    rdx,[rip+0x10c86]        # 0x42adb6
  41a130:	mov    rcx,rbx
  41a133:	cvtss2sd xmm0,DWORD PTR [rsi+0x8]
  41a138:	movapd xmm2,xmm0
  41a13c:	movq   r8,xmm0
  41a141:	call   0x406020
  41a146:	jmp    0x41a0c4
  41a14b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a150:	movsd  xmm0,QWORD PTR [rsi+0x8]
  41a155:	lea    rdx,[rip+0x10c5d]        # 0x42adb9
  41a15c:	mov    rcx,rbx
  41a15f:	movapd xmm2,xmm0
  41a163:	movq   r8,xmm0
  41a168:	call   0x406020
  41a16d:	jmp    0x41a0c4
  41a172:	movzx  r8d,BYTE PTR [rsi+0x8]
  41a177:	lea    rdx,[rip+0x10c3f]        # 0x42adbd
  41a17e:	mov    rcx,rbx
  41a181:	call   0x406020
  41a186:	jmp    0x41a0c4
  41a18b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a190:	movzx  r8d,WORD PTR [rsi+0x8]
  41a195:	lea    rdx,[rip+0x10c26]        # 0x42adc2
  41a19c:	mov    rcx,rbx
  41a19f:	call   0x406020
  41a1a4:	jmp    0x41a0c4
  41a1a9:	nop    DWORD PTR [rax+0x0]
  41a1b0:	mov    r8d,DWORD PTR [rsi+0x8]
  41a1b4:	lea    rdx,[rip+0x10c0b]        # 0x42adc6
  41a1bb:	mov    rcx,rbx
  41a1be:	call   0x406020
  41a1c3:	jmp    0x41a0c4
  41a1c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a1d0:	mov    r8,QWORD PTR [rsi+0x8]
  41a1d4:	lea    rdx,[rip+0x10bef]        # 0x42adca
  41a1db:	mov    rcx,rbx
  41a1de:	call   0x406020
  41a1e3:	jmp    0x41a0c4
  41a1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a1f0:	mov    r8,QWORD PTR [rsi+0x8]
  41a1f4:	lea    rdx,[rip+0x10bd6]        # 0x42add1
  41a1fb:	mov    rcx,rbx
  41a1fe:	call   0x406020
  41a203:	jmp    0x41a0c4
  41a208:	nop    DWORD PTR [rax+rax*1+0x0]
  41a210:	lea    rcx,[rip+0x10bc2]        # 0x42add9
  41a217:	mov    edx,eax
  41a219:	call   0x406300
  41a21e:	test   eax,eax
  41a220:	jne    0x41a0c4
  41a226:	lea    rdx,[rip+0x10bc7]        # 0x42adf4
  41a22d:	lea    rcx,[rip+0x10bcc]        # 0x42ae00
  41a234:	mov    r8d,0x52
  41a23a:	call   0x41da30
  41a23f:	jmp    0x41a0c4
  41a244:	lea    rdx,[rip+0x10b55]        # 0x42ada0
  41a24b:	mov    rcx,rbx
  41a24e:	call   0x406020
  41a253:	jmp    0x41a0c4
  41a258:	nop    DWORD PTR [rax+rax*1+0x0]
  41a260:	push   rsi
  41a261:	push   rbx
  41a262:	sub    rsp,0x38
  41a266:	lea    rax,[rsp+0x60]
  41a26b:	mov    rsi,rdx
  41a26e:	mov    rbx,r8
  41a271:	mov    rcx,r8
  41a274:	mov    QWORD PTR [rsp+0x60],r8
  41a279:	mov    QWORD PTR [rsp+0x68],r9
  41a27e:	mov    QWORD PTR [rsp+0x28],rax
  41a283:	call   0x4164d0
  41a288:	mov    rdx,rbx
  41a28b:	mov    rcx,rsi
  41a28e:	call   0x416250
  41a293:	mov    eax,0x1
  41a298:	add    rsp,0x38
  41a29c:	pop    rbx
  41a29d:	pop    rsi
  41a29e:	ret    
  41a29f:	nop
  41a2a0:	sub    rsp,0x28
  41a2a4:	test   edx,edx
  41a2a6:	je     0x41a2c0
  41a2a8:	cmp    edx,0x1
  41a2ab:	jne    0x41a2b2
  41a2ad:	test   r9,r9
  41a2b0:	jne    0x41a2e0
  41a2b2:	mov    eax,0x1
  41a2b7:	add    rsp,0x28
  41a2bb:	ret    
  41a2bc:	nop    DWORD PTR [rax+0x0]
  41a2c0:	mov    rcx,QWORD PTR [rsp+0x50]
  41a2c5:	lea    rdx,[rip+0x10b9b]        # 0x42ae67
  41a2cc:	call   0x416200
  41a2d1:	mov    eax,0x1
  41a2d6:	add    rsp,0x28
  41a2da:	ret    
  41a2db:	nop    DWORD PTR [rax+rax*1+0x0]
  41a2e0:	mov    rcx,QWORD PTR [rsp+0x50]
  41a2e5:	lea    rdx,[rip+0x10b78]        # 0x42ae64
  41a2ec:	call   0x416200
  41a2f1:	jmp    0x41a2b2
  41a2f3:	nop
  41a2f4:	nop
  41a2f5:	nop
  41a2f6:	nop
  41a2f7:	nop
  41a2f8:	nop
  41a2f9:	nop
  41a2fa:	nop
  41a2fb:	nop
  41a2fc:	nop
  41a2fd:	nop
  41a2fe:	nop
  41a2ff:	nop
  41a300:	push   r12
  41a302:	push   rbp
  41a303:	mov    eax,0x2020
  41a308:	push   rdi
  41a309:	push   rsi
  41a30a:	push   rbx
  41a30b:	call   0x41c7e0
  41a310:	sub    rsp,rax
  41a313:	xor    eax,eax
  41a315:	lea    rbx,[rsp+0x20]
  41a31a:	mov    rbp,rcx
  41a31d:	mov    rsi,r8
  41a320:	mov    ecx,0x400
  41a325:	mov    r12,rdx
  41a328:	mov    r8d,0x2048
  41a32e:	mov    rdi,rbx
  41a331:	xor    edx,edx
  41a333:	rep stos QWORD PTR es:[rdi],rax
  41a336:	mov    rcx,rsi
  41a339:	call   0x41dbb0
  41a33e:	mov    eax,DWORD PTR [rbp+0x88]
  41a344:	test   eax,eax
  41a346:	jle    0x41a465
  41a34c:	lea    edx,[rax-0x1]
  41a34f:	xor    r9d,r9d
  41a352:	lea    r10,[rdx*8+0x8]
  41a35a:	mov    rcx,rdx
  41a35d:	nop    DWORD PTR [rax]
  41a360:	mov    r11,QWORD PTR [rbp+r9*1+0x90]
  41a368:	mov    r11,QWORD PTR [r11+0x2100]
  41a36f:	mov    QWORD PTR [rbx+r9*1],r11
  41a373:	add    r9,0x8
  41a377:	cmp    r9,r10
  41a37a:	jne    0x41a360
  41a37c:	mov    DWORD PTR [rsi+0x38],eax
  41a37f:	mov    DWORD PTR [rsi],0x1
  41a385:	xor    r9d,r9d
  41a388:	mov    DWORD PTR [rsi+0x28],0x1
  41a38f:	nop
  41a390:	mov    r11,QWORD PTR [rbx+r9*1]
  41a394:	mov    QWORD PTR [rsi+r9*1+0x48],r11
  41a399:	add    r9,0x8
  41a39d:	cmp    r9,r10
  41a3a0:	jne    0x41a390
  41a3a2:	movsxd rdx,eax
  41a3a5:	mov    r9d,ecx
  41a3a8:	mov    DWORD PTR [rsi+0x4],ecx
  41a3ab:	shl    rdx,0x3
  41a3af:	mov    r8,QWORD PTR [rsp+rdx*1+0x18]
  41a3b4:	cmp    r12,r8
  41a3b7:	jb     0x41a45d
  41a3bd:	mov    r10d,eax
  41a3c0:	lea    rdx,[rbx+rdx*1-0x10]
  41a3c5:	not    r10d
  41a3c8:	add    r10d,ecx
  41a3cb:	jmp    0x41a3e4
  41a3cd:	nop    DWORD PTR [rax]
  41a3d0:	mov    rcx,r8
  41a3d3:	sub    rdx,0x8
  41a3d7:	imul   rcx,QWORD PTR [rdx+0x8]
  41a3dc:	cmp    r12,rcx
  41a3df:	jb     0x41a41d
  41a3e1:	mov    r8,rcx
  41a3e4:	lea    r9d,[r10+rax*1]
  41a3e8:	sub    eax,0x1
  41a3eb:	jne    0x41a3d0
  41a3ed:	mov    rax,QWORD PTR [rsp+0x20]
  41a3f2:	mov    DWORD PTR [rsi+0x4],0x0
  41a3f9:	mov    QWORD PTR [rsi+0x8],rax
  41a3fd:	mov    QWORD PTR [rsi+0x40],0x0
  41a405:	xor    eax,eax
  41a407:	mov    QWORD PTR [rsi+0x30],0x0
  41a40f:	add    rsp,0x2020
  41a416:	pop    rbx
  41a417:	pop    rsi
  41a418:	pop    rdi
  41a419:	pop    rbp
  41a41a:	pop    r12
  41a41c:	ret    
  41a41d:	mov    DWORD PTR [rsi+0x4],r9d
  41a421:	mov    rax,r12
  41a424:	xor    edx,edx
  41a426:	movsxd r9,r9d
  41a429:	div    r8
  41a42c:	mov    rcx,QWORD PTR [rsp+r9*8+0x20]
  41a431:	xor    edx,edx
  41a433:	mov    QWORD PTR [rsi+0x18],0x1
  41a43b:	mov    r12,rax
  41a43e:	mov    QWORD PTR [rsi+0x8],rax
  41a442:	mov    rax,rcx
  41a445:	div    r12
  41a448:	mov    QWORD PTR [rsi+0x40],r12
  41a44c:	mov    QWORD PTR [rsi+0x10],rax
  41a450:	imul   rax,r12
  41a454:	sub    rcx,rax
  41a457:	mov    QWORD PTR [rsi+0x20],rcx
  41a45b:	jmp    0x41a405
  41a45d:	mov    r8d,0x1
  41a463:	jmp    0x41a421
  41a465:	mov    DWORD PTR [rsi+0x38],eax
  41a468:	mov    DWORD PTR [rsi],0x1
  41a46e:	xor    eax,eax
  41a470:	mov    DWORD PTR [rsi+0x28],0x1
  41a477:	jmp    0x41a3f2
  41a47c:	nop    DWORD PTR [rax+0x0]
  41a480:	push   rsi
  41a481:	push   rbx
  41a482:	mov    r9d,DWORD PTR [rcx]
  41a485:	test   r9d,r9d
  41a488:	je     0x41a554
  41a48e:	mov    eax,DWORD PTR [rcx+0x4]
  41a491:	xor    r9d,r9d
  41a494:	test   eax,eax
  41a496:	jle    0x41a4b9
  41a498:	nop    DWORD PTR [rax+rax*1+0x0]
  41a4a0:	mov    QWORD PTR [rdx+r9*8],0x0
  41a4a8:	mov    QWORD PTR [r8+r9*8],0x1
  41a4b0:	add    r9,0x1
  41a4b4:	cmp    eax,r9d
  41a4b7:	jg     0x41a4a0
  41a4b9:	movsxd r9,eax
  41a4bc:	add    eax,0x1
  41a4bf:	mov    QWORD PTR [rdx+r9*8],0x0
  41a4c7:	mov    r11,QWORD PTR [rcx+0x8]
  41a4cb:	lea    r10,[r9*8+0x0]
  41a4d3:	mov    QWORD PTR [r8+r9*8],r11
  41a4d7:	mov    r11d,DWORD PTR [rcx+0x38]
  41a4db:	cmp    eax,r11d
  41a4de:	jge    0x41a510
  41a4e0:	add    r10,0x8
  41a4e4:	lea    rbx,[rdx+r10*1]
  41a4e8:	add    r10,r8
  41a4eb:	xor    edx,edx
  41a4ed:	nop    DWORD PTR [rax]
  41a4f0:	movsxd r9,eax
  41a4f3:	mov    QWORD PTR [rbx+rdx*1],0x0
  41a4fb:	add    eax,0x1
  41a4fe:	mov    r9,QWORD PTR [rcx+r9*8+0x48]
  41a503:	mov    QWORD PTR [r10+rdx*1],r9
  41a507:	add    rdx,0x8
  41a50b:	cmp    eax,r11d
  41a50e:	jne    0x41a4f0
  41a510:	mov    r9d,DWORD PTR [rcx+0x28]
  41a514:	mov    DWORD PTR [rcx],0x0
  41a51a:	test   r11d,r11d
  41a51d:	mov    QWORD PTR [rcx+0x30],0x1
  41a525:	jle    0x41a546
  41a527:	lea    eax,[r11-0x1]
  41a52b:	lea    rdx,[r8+rax*8+0x8]
  41a530:	mov    eax,0x1
  41a535:	imul   rax,QWORD PTR [r8]
  41a539:	add    r8,0x8
  41a53d:	cmp    r8,rdx
  41a540:	mov    QWORD PTR [rcx+0x30],rax
  41a544:	jne    0x41a535
  41a546:	xor    eax,eax
  41a548:	test   r9d,r9d
  41a54b:	je     0x41a551
  41a54d:	mov    rax,QWORD PTR [rcx+0x30]
  41a551:	pop    rbx
  41a552:	pop    rsi
  41a553:	ret    
  41a554:	mov    r10,QWORD PTR [rcx+0x40]
  41a558:	movsxd rbx,DWORD PTR [rcx+0x4]
  41a55c:	test   r10,r10
  41a55f:	je     0x41a5c0
  41a561:	movsxd r11,ebx
  41a564:	lea    r9,[r11*8+0x0]
  41a56c:	lea    rax,[rdx+r9*1]
  41a570:	add    r10,QWORD PTR [rax]
  41a573:	test   ebx,ebx
  41a575:	mov    QWORD PTR [rax],r10
  41a578:	jle    0x41a5b2
  41a57a:	lea    esi,[rbx-0x1]
  41a57d:	add    r9,rcx
  41a580:	sub    r11,rsi
  41a583:	lea    r11,[rdx+r11*8-0x8]
  41a588:	jmp    0x41a593
  41a58a:	nop    WORD PTR [rax+rax*1+0x0]
  41a590:	mov    r10,QWORD PTR [rax]
  41a593:	cmp    QWORD PTR [r9+0x48],r10
  41a597:	ja     0x41a5a5
  41a599:	add    QWORD PTR [rax-0x8],0x1
  41a59e:	mov    r10,QWORD PTR [r9+0x48]
  41a5a2:	sub    QWORD PTR [rax],r10
  41a5a5:	sub    rax,0x8
  41a5a9:	sub    r9,0x8
  41a5ad:	cmp    rax,r11
  41a5b0:	jne    0x41a590
  41a5b2:	xor    r9d,r9d
  41a5b5:	mov    rax,QWORD PTR [rcx+0x48]
  41a5b9:	cmp    QWORD PTR [rdx],rax
  41a5bc:	setb   r9b
  41a5c0:	mov    rax,QWORD PTR [rcx+0x10]
  41a5c4:	cmp    QWORD PTR [rcx+0x18],rax
  41a5c8:	mov    DWORD PTR [rcx+0x28],r9d
  41a5cc:	jb     0x41a5f4
  41a5ce:	mov    rax,QWORD PTR [rcx+0x20]
  41a5d2:	test   rax,rax
  41a5d5:	je     0x41a5eb
  41a5d7:	mov    QWORD PTR [r8+rbx*8],rax
  41a5db:	mov    rax,QWORD PTR [rcx+0x20]
  41a5df:	mov    QWORD PTR [rcx+0x18],0x0
  41a5e7:	mov    QWORD PTR [rcx+0x40],rax
  41a5eb:	mov    r11d,DWORD PTR [rcx+0x38]
  41a5ef:	jmp    0x41a51a
  41a5f4:	mov    rax,QWORD PTR [rcx+0x8]
  41a5f8:	mov    r11d,DWORD PTR [rcx+0x38]
  41a5fc:	mov    QWORD PTR [rcx+0x40],rax
  41a600:	mov    QWORD PTR [r8+rbx*8],rax
  41a604:	add    QWORD PTR [rcx+0x18],0x1
  41a609:	jmp    0x41a51a
  41a60e:	nop
  41a60f:	nop
  41a610:	movsxd r8,edx
  41a613:	add    r8,rcx
  41a616:	cmp    edx,0x2
  41a619:	je     0x41a64d
  41a61b:	jle    0x41a680
  41a61d:	cmp    edx,0x3
  41a620:	je     0x41a63a
  41a622:	cmp    edx,0x4
  41a625:	jne    0x41a6a0
  41a627:	movzx  eax,BYTE PTR [r8-0x1]
  41a62c:	lea    edx,[rax-0x80]
  41a62f:	xor    eax,eax
  41a631:	cmp    dl,0x3f
  41a634:	ja     0x41a674
  41a636:	sub    r8,0x1
  41a63a:	movzx  eax,BYTE PTR [r8-0x1]
  41a63f:	lea    edx,[rax-0x80]
  41a642:	xor    eax,eax
  41a644:	cmp    dl,0x3f
  41a647:	ja     0x41a674
  41a649:	sub    r8,0x1
  41a64d:	movzx  r8d,BYTE PTR [r8-0x1]
  41a652:	xor    eax,eax
  41a654:	cmp    r8b,0xbf
  41a658:	ja     0x41a674
  41a65a:	movzx  edx,BYTE PTR [rcx]
  41a65d:	cmp    dl,0xed
  41a660:	je     0x41a6d0
  41a662:	jbe    0x41a6b0
  41a664:	cmp    dl,0xf0
  41a667:	je     0x41a6a3
  41a669:	cmp    dl,0xf4
  41a66c:	jne    0x41a6c0
  41a66e:	cmp    r8b,0x8f
  41a672:	jbe    0x41a688
  41a674:	repz ret 
  41a676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a680:	cmp    edx,0x1
  41a683:	jne    0x41a6a0
  41a685:	movzx  edx,BYTE PTR [rcx]
  41a688:	lea    eax,[rdx-0x80]
  41a68b:	cmp    al,0x41
  41a68d:	setbe  cl
  41a690:	cmp    dl,0xf4
  41a693:	seta   al
  41a696:	or     eax,ecx
  41a698:	xor    eax,0x1
  41a69b:	ret    
  41a69c:	nop    DWORD PTR [rax+0x0]
  41a6a0:	xor    eax,eax
  41a6a2:	ret    
  41a6a3:	cmp    r8b,0x8f
  41a6a7:	ja     0x41a688
  41a6a9:	jmp    0x41a674
  41a6ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41a6b0:	cmp    dl,0xe0
  41a6b3:	jne    0x41a6c0
  41a6b5:	cmp    r8b,0x9f
  41a6b9:	ja     0x41a688
  41a6bb:	jmp    0x41a674
  41a6bd:	nop    DWORD PTR [rax]
  41a6c0:	xor    eax,eax
  41a6c2:	test   r8b,r8b
  41a6c5:	js     0x41a688
  41a6c7:	repz ret 
  41a6c9:	nop    DWORD PTR [rax+0x0]
  41a6d0:	cmp    r8b,0x9f
  41a6d4:	jbe    0x41a688
  41a6d6:	jmp    0x41a674
  41a6d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a6e0:	push   rbp
  41a6e1:	push   rdi
  41a6e2:	push   rsi
  41a6e3:	push   rbx
  41a6e4:	mov    rsi,QWORD PTR [rcx]
  41a6e7:	mov    ebp,DWORD PTR [rsp+0x48]
  41a6eb:	mov    r11,QWORD PTR [r8]
  41a6ee:	cmp    rsi,rdx
  41a6f1:	jae    0x41a7d7
  41a6f7:	xor    eax,eax
  41a6f9:	cmp    r11,r9
  41a6fc:	jb     0x41a73a
  41a6fe:	jmp    0x41a7ba
  41a703:	lea    edi,[r10-0xd800]
  41a70a:	cmp    edi,0x7ff
  41a710:	ja     0x41a770
  41a712:	test   ebp,ebp
  41a714:	je     0x41a7cd
  41a71a:	mov    r10d,0xfffffffd
  41a720:	add    r11,0x2
  41a724:	mov    WORD PTR [r11-0x2],r10w
  41a729:	cmp    rdx,rbx
  41a72c:	jbe    0x41a762
  41a72e:	cmp    r9,r11
  41a731:	mov    rsi,rbx
  41a734:	jbe    0x41a7bd
  41a73a:	lea    rbx,[rsi+0x4]
  41a73e:	mov    r10d,DWORD PTR [rbx-0x4]
  41a742:	cmp    r10d,0xffff
  41a749:	jbe    0x41a703
  41a74b:	cmp    r10d,0x10ffff
  41a752:	jbe    0x41a780
  41a754:	test   ebp,ebp
  41a756:	jne    0x41a71a
  41a758:	cmp    rdx,rbx
  41a75b:	mov    eax,0x3
  41a760:	ja     0x41a72e
  41a762:	mov    QWORD PTR [rcx],rbx
  41a765:	mov    QWORD PTR [r8],r11
  41a768:	pop    rbx
  41a769:	pop    rsi
  41a76a:	pop    rdi
  41a76b:	pop    rbp
  41a76c:	ret    
  41a76d:	nop    DWORD PTR [rax]
  41a770:	mov    WORD PTR [r11],r10w
  41a774:	add    r11,0x2
  41a778:	jmp    0x41a729
  41a77a:	nop    WORD PTR [rax+rax*1+0x0]
  41a780:	lea    rdi,[r11+0x2]
  41a784:	cmp    r9,rdi
  41a787:	jbe    0x41a7ba
  41a789:	sub    r10d,0x10000
  41a790:	add    r11,0x4
  41a794:	mov    esi,r10d
  41a797:	and    r10w,0x3ff
  41a79d:	shr    esi,0xa
  41a7a0:	sub    r10w,0x2400
  41a7a6:	sub    si,0x2800
  41a7ab:	mov    WORD PTR [r11-0x2],r10w
  41a7b0:	mov    WORD PTR [r11-0x4],si
  41a7b5:	jmp    0x41a729
  41a7ba:	mov    rbx,rsi
  41a7bd:	mov    eax,0x2
  41a7c2:	mov    QWORD PTR [rcx],rbx
  41a7c5:	mov    QWORD PTR [r8],r11
  41a7c8:	pop    rbx
  41a7c9:	pop    rsi
  41a7ca:	pop    rdi
  41a7cb:	pop    rbp
  41a7cc:	ret    
  41a7cd:	mov    rbx,rsi
  41a7d0:	mov    eax,0x3
  41a7d5:	jmp    0x41a762
  41a7d7:	mov    rbx,rsi
  41a7da:	xor    eax,eax
  41a7dc:	jmp    0x41a762
  41a7de:	xchg   ax,ax
  41a7e0:	push   r15
  41a7e2:	push   r14
  41a7e4:	push   r13
  41a7e6:	push   r12
  41a7e8:	push   rbp
  41a7e9:	push   rdi
  41a7ea:	push   rsi
  41a7eb:	push   rbx
  41a7ec:	mov    rbx,QWORD PTR [rcx]
  41a7ef:	mov    r13d,DWORD PTR [rsp+0x68]
  41a7f4:	mov    rbp,QWORD PTR [r8]
  41a7f7:	cmp    rbx,rdx
  41a7fa:	jae    0x41a8c6
  41a800:	movzx  eax,WORD PTR [rbx]
  41a803:	lea    rdi,[rbp+0x4]
  41a807:	mov    r10,rbp
  41a80a:	jmp    0x41a85d
  41a80c:	nop    DWORD PTR [rax+0x0]
  41a810:	cmp    rdx,r11
  41a813:	jbe    0x41a8ca
  41a819:	movzx  r12d,WORD PTR [rbx+0x2]
  41a81e:	lea    r15d,[r12-0xdc00]
  41a826:	mov    r14d,r12d
  41a829:	cmp    r15d,0x3ff
  41a830:	ja     0x41a890
  41a832:	shl    esi,0xa
  41a835:	lea    r11,[rbx+0x4]
  41a839:	lea    eax,[r12+rsi*1+0x2400]
  41a841:	cmp    r9,r10
  41a844:	jbe    0x41a8a3
  41a846:	cmp    r11,rdx
  41a849:	mov    DWORD PTR [r10],eax
  41a84c:	jae    0x41a8c0
  41a84e:	movzx  eax,WORD PTR [r11]
  41a852:	add    rdi,0x4
  41a856:	add    r10,0x4
  41a85a:	mov    rbx,r11
  41a85d:	lea    esi,[rax-0xd800]
  41a863:	mov    rbp,r10
  41a866:	lea    r11,[rbx+0x2]
  41a86a:	cmp    esi,0x3ff
  41a870:	jbe    0x41a810
  41a872:	test   r13d,r13d
  41a875:	jne    0x41a841
  41a877:	lea    esi,[rax-0xdc00]
  41a87d:	cmp    esi,0x3ff
  41a883:	ja     0x41a841
  41a885:	mov    eax,0x3
  41a88a:	jmp    0x41a8a8
  41a88c:	nop    DWORD PTR [rax+0x0]
  41a890:	test   r13d,r13d
  41a893:	je     0x41a885
  41a895:	cmp    r9,r10
  41a898:	jbe    0x41a8a3
  41a89a:	mov    DWORD PTR [r10],eax
  41a89d:	movzx  eax,r14w
  41a8a1:	jmp    0x41a852
  41a8a3:	mov    eax,0x2
  41a8a8:	mov    QWORD PTR [rcx],rbx
  41a8ab:	mov    QWORD PTR [r8],rbp
  41a8ae:	pop    rbx
  41a8af:	pop    rsi
  41a8b0:	pop    rdi
  41a8b1:	pop    rbp
  41a8b2:	pop    r12
  41a8b4:	pop    r13
  41a8b6:	pop    r14
  41a8b8:	pop    r15
  41a8ba:	ret    
  41a8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a8c0:	mov    rbp,rdi
  41a8c3:	mov    rbx,r11
  41a8c6:	xor    eax,eax
  41a8c8:	jmp    0x41a8a8
  41a8ca:	mov    eax,0x1
  41a8cf:	jmp    0x41a8a8
  41a8d1:	nop    DWORD PTR [rax+rax*1+0x0]
  41a8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a8e0:	push   r13
  41a8e2:	push   r12
  41a8e4:	push   rbp
  41a8e5:	push   rdi
  41a8e6:	push   rsi
  41a8e7:	push   rbx
  41a8e8:	mov    rsi,QWORD PTR [rcx]
  41a8eb:	mov    r13d,DWORD PTR [rsp+0x58]
  41a8f0:	mov    r11,QWORD PTR [r8]
  41a8f3:	cmp    rsi,rdx
  41a8f6:	jae    0x41a9c9
  41a8fc:	nop    DWORD PTR [rax+0x0]
  41a900:	movzx  eax,WORD PTR [rsi]
  41a903:	lea    rdi,[rsi+0x2]
  41a907:	lea    r10d,[rax-0xd800]
  41a90e:	cmp    r10d,0x3ff
  41a915:	ja     0x41a9e0
  41a91b:	cmp    rdx,rdi
  41a91e:	jbe    0x41aa4d
  41a924:	movzx  ebx,WORD PTR [rsi+0x2]
  41a928:	lea    ebp,[rbx-0xdc00]
  41a92e:	cmp    ebp,0x3ff
  41a934:	ja     0x41aa14
  41a93a:	shl    r10d,0xa
  41a93e:	lea    rdi,[rsi+0x4]
  41a942:	lea    eax,[rbx+r10*1+0x2400]
  41a94a:	cmp    eax,0xffff
  41a94f:	jbe    0x41aa31
  41a955:	lea    r10,[r11+0x4]
  41a959:	cmp    r9,r10
  41a95c:	jb     0x41aab7
  41a962:	mov    ebx,eax
  41a964:	lea    r10,[r11+0x3]
  41a968:	shr    eax,0x6
  41a96b:	and    ebx,0x3f
  41a96e:	mov    rsi,rdi
  41a971:	mov    ebp,0x4
  41a976:	or     ebx,0xffffff80
  41a979:	mov    BYTE PTR [r11+0x3],bl
  41a97d:	mov    r11d,0x3
  41a983:	mov    r12d,eax
  41a986:	lea    rbx,[r10-0x1]
  41a98a:	shr    eax,0x6
  41a98d:	and    r12d,0x3f
  41a991:	or     r12d,0xffffff80
  41a995:	mov    BYTE PTR [r10-0x1],r12b
  41a999:	mov    r12d,eax
  41a99c:	lea    r10,[rbx-0x1]
  41a9a0:	shr    eax,0x6
  41a9a3:	and    r12d,0x3f
  41a9a7:	or     r12d,0xffffff80
  41a9ab:	mov    BYTE PTR [rbx-0x1],r12b
  41a9af:	lea    rbx,[rip+0x104fa]        # 0x42aeb0
  41a9b6:	add    r11,r10
  41a9b9:	or     al,BYTE PTR [rbx+rbp*1]
  41a9bc:	cmp    rdx,rdi
  41a9bf:	mov    BYTE PTR [r10-0x1],al
  41a9c3:	ja     0x41a900
  41a9c9:	xor    eax,eax
  41a9cb:	mov    QWORD PTR [rcx],rsi
  41a9ce:	mov    QWORD PTR [r8],r11
  41a9d1:	pop    rbx
  41a9d2:	pop    rsi
  41a9d3:	pop    rdi
  41a9d4:	pop    rbp
  41a9d5:	pop    r12
  41a9d7:	pop    r13
  41a9d9:	ret    
  41a9da:	nop    WORD PTR [rax+rax*1+0x0]
  41a9e0:	test   r13d,r13d
  41a9e3:	jne    0x41a9f5
  41a9e5:	lea    r10d,[rax-0xdc00]
  41a9ec:	cmp    r10d,0x3ff
  41a9f3:	jbe    0x41aa1d
  41a9f5:	cmp    eax,0x7f
  41a9f8:	ja     0x41aa7f
  41a9fe:	lea    r10,[r11+0x1]
  41aa02:	cmp    r9,r10
  41aa05:	jb     0x41aa61
  41aa07:	mov    rsi,rdi
  41aa0a:	xor    r11d,r11d
  41aa0d:	mov    ebp,0x1
  41aa12:	jmp    0x41a9af
  41aa14:	test   r13d,r13d
  41aa17:	jne    0x41a94a
  41aa1d:	mov    eax,0x3
  41aa22:	mov    QWORD PTR [rcx],rsi
  41aa25:	mov    QWORD PTR [r8],r11
  41aa28:	pop    rbx
  41aa29:	pop    rsi
  41aa2a:	pop    rdi
  41aa2b:	pop    rbp
  41aa2c:	pop    r12
  41aa2e:	pop    r13
  41aa30:	ret    
  41aa31:	lea    r10,[r11+0x3]
  41aa35:	cmp    r9,r10
  41aa38:	jb     0x41aaae
  41aa3a:	mov    rsi,rdi
  41aa3d:	mov    r11d,0x2
  41aa43:	mov    ebp,0x3
  41aa48:	jmp    0x41a983
  41aa4d:	mov    eax,0x1
  41aa52:	mov    QWORD PTR [rcx],rsi
  41aa55:	mov    QWORD PTR [r8],r11
  41aa58:	pop    rbx
  41aa59:	pop    rsi
  41aa5a:	pop    rdi
  41aa5b:	pop    rbp
  41aa5c:	pop    r12
  41aa5e:	pop    r13
  41aa60:	ret    
  41aa61:	mov    r11,0xffffffffffffffff
  41aa68:	add    r11,r10
  41aa6b:	mov    eax,0x2
  41aa70:	mov    QWORD PTR [rcx],rsi
  41aa73:	mov    QWORD PTR [r8],r11
  41aa76:	pop    rbx
  41aa77:	pop    rsi
  41aa78:	pop    rdi
  41aa79:	pop    rbp
  41aa7a:	pop    r12
  41aa7c:	pop    r13
  41aa7e:	ret    
  41aa7f:	cmp    eax,0x7ff
  41aa84:	ja     0x41aa31
  41aa86:	lea    rbx,[r11+0x2]
  41aa8a:	cmp    r9,rbx
  41aa8d:	jb     0x41aaa2
  41aa8f:	mov    rsi,rdi
  41aa92:	mov    r11d,0x1
  41aa98:	mov    ebp,0x2
  41aa9d:	jmp    0x41a999
  41aaa2:	mov    r10,rbx
  41aaa5:	mov    r11,0xfffffffffffffffe
  41aaac:	jmp    0x41aa68
  41aaae:	mov    r11,0xfffffffffffffffd
  41aab5:	jmp    0x41aa68
  41aab7:	mov    r11,0xfffffffffffffffc
  41aabe:	jmp    0x41aa68
  41aac0:	movzx  eax,BYTE PTR [rcx]
  41aac3:	lea    r8,[rip+0x10436]        # 0x42af00
  41aaca:	movsx  eax,BYTE PTR [r8+rax*1]
  41aacf:	add    eax,0x1
  41aad2:	movsxd r8,eax
  41aad5:	add    r8,rcx
  41aad8:	cmp    rdx,r8
  41aadb:	jb     0x41aae4
  41aadd:	mov    edx,eax
  41aadf:	jmp    0x41a610
  41aae4:	xor    eax,eax
  41aae6:	ret    
  41aae7:	nop    WORD PTR [rax+rax*1+0x0]
  41aaf0:	push   r15
  41aaf2:	push   r14
  41aaf4:	push   r13
  41aaf6:	push   r12
  41aaf8:	push   rbp
  41aaf9:	push   rdi
  41aafa:	push   rsi
  41aafb:	push   rbx
  41aafc:	sub    rsp,0x28
  41ab00:	mov    rsi,QWORD PTR [rcx]
  41ab03:	mov    r15,QWORD PTR [r8]
  41ab06:	mov    QWORD PTR [rsp+0x70],rcx
  41ab0b:	mov    rdi,rdx
  41ab0e:	mov    QWORD PTR [rsp+0x80],r8
  41ab16:	mov    QWORD PTR [rsp+0x88],r9
  41ab1e:	cmp    rsi,rdx
  41ab21:	jae    0x41acc6
  41ab27:	movzx  eax,BYTE PTR [rsi]
  41ab2a:	lea    rcx,[rip+0x103cf]        # 0x42af00
  41ab31:	movsx  r12w,BYTE PTR [rcx+rax*1]
  41ab37:	mov    rbx,rax
  41ab3a:	movzx  r14d,r12w
  41ab3e:	lea    rax,[rsi+r14*1]
  41ab42:	cmp    rdx,rax
  41ab45:	jbe    0x41ac29
  41ab4b:	lea    rbp,[rip+0x1032e]        # 0x42ae80
  41ab52:	movzx  r13d,r12w
  41ab56:	mov    rcx,rsi
  41ab59:	lea    edx,[r13+0x1]
  41ab5d:	call   0x41a610
  41ab62:	test   al,al
  41ab64:	je     0x41ad23
  41ab6a:	cmp    r12w,0x5
  41ab6f:	ja     0x41ad40
  41ab75:	movsxd rax,DWORD PTR [rbp+r14*4+0x0]
  41ab7a:	add    rax,rbp
  41ab7d:	jmp    rax
  41ab7f:	nop
  41ab80:	xor    ebx,ebx
  41ab82:	movzx  eax,BYTE PTR [rsi]
  41ab85:	lea    rdx,[rsi+0x1]
  41ab89:	add    ebx,eax
  41ab8b:	shl    ebx,0x6
  41ab8e:	movzx  eax,BYTE PTR [rdx]
  41ab91:	lea    rsi,[rdx+0x1]
  41ab95:	add    eax,ebx
  41ab97:	shl    eax,0x6
  41ab9a:	movzx  edx,BYTE PTR [rsi]
  41ab9d:	lea    rcx,[rsi+0x1]
  41aba1:	add    eax,edx
  41aba3:	shl    eax,0x6
  41aba6:	lea    rdx,[rcx+0x1]
  41abaa:	movzx  ecx,BYTE PTR [rcx]
  41abad:	add    eax,ecx
  41abaf:	shl    eax,0x6
  41abb2:	lea    rsi,[rdx+0x1]
  41abb6:	movzx  edx,BYTE PTR [rdx]
  41abb9:	add    eax,edx
  41abbb:	lea    rdx,[rip+0x102fe]        # 0x42aec0
  41abc2:	movsxd r8,r13d
  41abc5:	sub    eax,DWORD PTR [rdx+r8*4]
  41abc9:	cmp    QWORD PTR [rsp+0x88],r15
  41abd1:	jbe    0x41ad10
  41abd7:	cmp    eax,0xffff
  41abdc:	ja     0x41acd0
  41abe2:	lea    edx,[rax-0xd800]
  41abe8:	cmp    edx,0x7ff
  41abee:	jbe    0x41aca0
  41abf4:	mov    WORD PTR [r15],ax
  41abf8:	add    r15,0x2
  41abfc:	cmp    rsi,rdi
  41abff:	jae    0x41acc6
  41ac05:	movzx  eax,BYTE PTR [rsi]
  41ac08:	lea    rcx,[rip+0x102f1]        # 0x42af00
  41ac0f:	movsx  r12w,BYTE PTR [rcx+rax*1]
  41ac15:	mov    rbx,rax
  41ac18:	movzx  r14d,r12w
  41ac1c:	lea    rax,[rsi+r14*1]
  41ac20:	cmp    rdi,rax
  41ac23:	ja     0x41ab52
  41ac29:	mov    eax,0x1
  41ac2e:	mov    rdi,QWORD PTR [rsp+0x70]
  41ac33:	mov    QWORD PTR [rdi],rsi
  41ac36:	mov    rdi,QWORD PTR [rsp+0x80]
  41ac3e:	mov    QWORD PTR [rdi],r15
  41ac41:	add    rsp,0x28
  41ac45:	pop    rbx
  41ac46:	pop    rsi
  41ac47:	pop    rdi
  41ac48:	pop    rbp
  41ac49:	pop    r12
  41ac4b:	pop    r13
  41ac4d:	pop    r14
  41ac4f:	pop    r15
  41ac51:	ret    
  41ac52:	mov    rdx,rsi
  41ac55:	xor    ebx,ebx
  41ac57:	jmp    0x41ab8e
  41ac5c:	nop    DWORD PTR [rax+0x0]
  41ac60:	xor    eax,eax
  41ac62:	jmp    0x41ab9a
  41ac67:	nop    WORD PTR [rax+rax*1+0x0]
  41ac70:	mov    rcx,rsi
  41ac73:	xor    eax,eax
  41ac75:	jmp    0x41aba6
  41ac7a:	nop    WORD PTR [rax+rax*1+0x0]
  41ac80:	mov    rdx,rsi
  41ac83:	xor    eax,eax
  41ac85:	jmp    0x41abb2
  41ac8a:	nop    WORD PTR [rax+rax*1+0x0]
  41ac90:	add    rsi,0x1
  41ac94:	shl    ebx,0x6
  41ac97:	jmp    0x41ab82
  41ac9c:	nop    DWORD PTR [rax+0x0]
  41aca0:	mov    edx,DWORD PTR [rsp+0x90]
  41aca7:	test   edx,edx
  41aca9:	je     0x41ad2d
  41acaf:	mov    eax,0xfffffffd
  41acb4:	add    r15,0x2
  41acb8:	mov    WORD PTR [r15-0x2],ax
  41acbd:	cmp    rsi,rdi
  41acc0:	jb     0x41ac05
  41acc6:	xor    eax,eax
  41acc8:	jmp    0x41ac2e
  41accd:	nop    DWORD PTR [rax]
  41acd0:	cmp    eax,0x10ffff
  41acd5:	ja     0x41aca0
  41acd7:	lea    rdx,[r15+0x2]
  41acdb:	cmp    QWORD PTR [rsp+0x88],rdx
  41ace3:	jbe    0x41ad10
  41ace5:	sub    eax,0x10000
  41acea:	add    r15,0x4
  41acee:	mov    edx,eax
  41acf0:	and    ax,0x3ff
  41acf4:	shr    edx,0xa
  41acf7:	sub    ax,0x2400
  41acfb:	sub    dx,0x2800
  41ad00:	mov    WORD PTR [r15-0x2],ax
  41ad05:	mov    WORD PTR [r15-0x4],dx
  41ad0a:	jmp    0x41abfc
  41ad0f:	nop
  41ad10:	mov    r11,r14
  41ad13:	mov    eax,0x2
  41ad18:	not    r11
  41ad1b:	add    rsi,r11
  41ad1e:	jmp    0x41ac2e
  41ad23:	mov    eax,0x3
  41ad28:	jmp    0x41ac2e
  41ad2d:	mov    r11,r14
  41ad30:	mov    eax,0x3
  41ad35:	not    r11
  41ad38:	add    rsi,r11
  41ad3b:	jmp    0x41ac2e
  41ad40:	xor    eax,eax
  41ad42:	jmp    0x41abbb
  41ad47:	nop    WORD PTR [rax+rax*1+0x0]
  41ad50:	push   r13
  41ad52:	push   r12
  41ad54:	push   rbp
  41ad55:	push   rdi
  41ad56:	push   rsi
  41ad57:	push   rbx
  41ad58:	mov    rdi,QWORD PTR [rcx]
  41ad5b:	mov    r12d,DWORD PTR [rsp+0x58]
  41ad60:	mov    rbx,QWORD PTR [r8]
  41ad63:	cmp    rdi,rdx
  41ad66:	jae    0x41aef6
  41ad6c:	xor    eax,eax
  41ad6e:	lea    rsi,[rdi+0x4]
  41ad72:	test   r12d,r12d
  41ad75:	mov    r10d,DWORD PTR [rsi-0x4]
  41ad79:	jne    0x41ad8f
  41ad7b:	lea    r11d,[r10-0xd800]
  41ad82:	cmp    r11d,0x7ff
  41ad89:	jbe    0x41aea1
  41ad8f:	cmp    r10d,0x7f
  41ad93:	jbe    0x41ae40
  41ad99:	cmp    r10d,0x7ff
  41ada0:	jbe    0x41ae52
  41ada6:	cmp    r10d,0xffff
  41adad:	jbe    0x41adc7
  41adaf:	cmp    r10d,0x10ffff
  41adb6:	jbe    0x41ae70
  41adbc:	mov    r10d,0xfffd
  41adc2:	mov    eax,0x3
  41adc7:	lea    r11,[rbx+0x3]
  41adcb:	cmp    r9,r11
  41adce:	jb     0x41aeed
  41add4:	mov    ebx,0x2
  41add9:	mov    edi,0x3
  41adde:	mov    ebp,r10d
  41ade1:	lea    r13,[r11-0x1]
  41ade5:	shr    r10d,0x6
  41ade9:	and    ebp,0x3f
  41adec:	or     ebp,0xffffff80
  41adef:	mov    BYTE PTR [r11-0x1],bpl
  41adf3:	mov    ebp,r10d
  41adf6:	lea    r11,[r13-0x1]
  41adfa:	shr    r10d,0x6
  41adfe:	and    ebp,0x3f
  41ae01:	or     ebp,0xffffff80
  41ae04:	mov    BYTE PTR [r13-0x1],bpl
  41ae08:	lea    rbp,[rip+0x100a1]        # 0x42aeb0
  41ae0f:	add    rbx,r11
  41ae12:	or     r10b,BYTE PTR [rbp+rdi*1+0x0]
  41ae17:	cmp    rdx,rsi
  41ae1a:	mov    rdi,rsi
  41ae1d:	mov    BYTE PTR [r11-0x1],r10b
  41ae21:	ja     0x41ad6e
  41ae27:	mov    QWORD PTR [rcx],rsi
  41ae2a:	mov    QWORD PTR [r8],rbx
  41ae2d:	pop    rbx
  41ae2e:	pop    rsi
  41ae2f:	pop    rdi
  41ae30:	pop    rbp
  41ae31:	pop    r12
  41ae33:	pop    r13
  41ae35:	ret    
  41ae36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae40:	lea    r11,[rbx+0x1]
  41ae44:	cmp    r9,r11
  41ae47:	jb     0x41aec0
  41ae49:	xor    ebx,ebx
  41ae4b:	mov    edi,0x1
  41ae50:	jmp    0x41ae08
  41ae52:	lea    r13,[rbx+0x2]
  41ae56:	cmp    r9,r13
  41ae59:	jb     0x41aee1
  41ae5f:	mov    ebx,0x1
  41ae64:	mov    edi,0x2
  41ae69:	jmp    0x41adf3
  41ae6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ae70:	lea    r11,[rbx+0x4]
  41ae74:	cmp    r9,r11
  41ae77:	jb     0x41af00
  41ae7d:	mov    edi,r10d
  41ae80:	lea    r11,[rbx+0x3]
  41ae84:	shr    r10d,0x6
  41ae88:	and    edi,0x3f
  41ae8b:	or     edi,0xffffff80
  41ae8e:	mov    BYTE PTR [rbx+0x3],dil
  41ae92:	mov    ebx,0x3
  41ae97:	mov    edi,0x4
  41ae9c:	jmp    0x41adde
  41aea1:	mov    rsi,rdi
  41aea4:	mov    eax,0x3
  41aea9:	mov    QWORD PTR [rcx],rsi
  41aeac:	mov    QWORD PTR [r8],rbx
  41aeaf:	pop    rbx
  41aeb0:	pop    rsi
  41aeb1:	pop    rdi
  41aeb2:	pop    rbp
  41aeb3:	pop    r12
  41aeb5:	pop    r13
  41aeb7:	ret    
  41aeb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41aec0:	mov    rbx,0xffffffffffffffff
  41aec7:	add    rbx,r11
  41aeca:	mov    rsi,rdi
  41aecd:	mov    eax,0x2
  41aed2:	mov    QWORD PTR [rcx],rsi
  41aed5:	mov    QWORD PTR [r8],rbx
  41aed8:	pop    rbx
  41aed9:	pop    rsi
  41aeda:	pop    rdi
  41aedb:	pop    rbp
  41aedc:	pop    r12
  41aede:	pop    r13
  41aee0:	ret    
  41aee1:	mov    r11,r13
  41aee4:	mov    rbx,0xfffffffffffffffe
  41aeeb:	jmp    0x41aec7
  41aeed:	mov    rbx,0xfffffffffffffffd
  41aef4:	jmp    0x41aec7
  41aef6:	mov    rsi,rdi
  41aef9:	xor    eax,eax
  41aefb:	jmp    0x41ae27
  41af00:	mov    rbx,0xfffffffffffffffc
  41af07:	jmp    0x41aec7
  41af09:	nop    DWORD PTR [rax+0x0]
  41af10:	push   r15
  41af12:	push   r14
  41af14:	push   r13
  41af16:	push   r12
  41af18:	push   rbp
  41af19:	push   rdi
  41af1a:	push   rsi
  41af1b:	push   rbx
  41af1c:	sub    rsp,0x38
  41af20:	mov    rsi,QWORD PTR [rcx]
  41af23:	mov    r15,QWORD PTR [r8]
  41af26:	mov    QWORD PTR [rsp+0x80],rcx
  41af2e:	mov    rbp,rdx
  41af31:	mov    QWORD PTR [rsp+0x90],r8
  41af39:	mov    QWORD PTR [rsp+0x98],r9
  41af41:	cmp    rsi,rdx
  41af44:	jae    0x41b172
  41af4a:	movzx  eax,BYTE PTR [rsi]
  41af4d:	lea    rdi,[rip+0xffac]        # 0x42af00
  41af54:	movsx  r12w,BYTE PTR [rdi+rax*1]
  41af5a:	mov    rbx,rax
  41af5d:	movzx  r14d,r12w
  41af61:	lea    rax,[rsi+r14*1]
  41af65:	cmp    rdx,rax
  41af68:	jbe    0x41b082
  41af6e:	lea    r13,[r15+0x4]
  41af72:	mov    DWORD PTR [rsp+0x2c],0x0
  41af7a:	mov    r15,r13
  41af7d:	mov    r13d,r12d
  41af80:	mov    r12,r14
  41af83:	movzx  edi,r13w
  41af87:	mov    rcx,rsi
  41af8a:	lea    r14,[r15-0x4]
  41af8e:	lea    edx,[rdi+0x1]
  41af91:	call   0x41a610
  41af96:	test   al,al
  41af98:	je     0x41b130
  41af9e:	cmp    r13w,0x5
  41afa3:	ja     0x41b180
  41afa9:	lea    rax,[rip+0xfee8]        # 0x42ae98
  41afb0:	lea    rcx,[rip+0xfee1]        # 0x42ae98
  41afb7:	movsxd rax,DWORD PTR [rax+r12*4]
  41afbb:	add    rax,rcx
  41afbe:	jmp    rax
  41afc0:	xor    ebx,ebx
  41afc2:	movzx  eax,BYTE PTR [rsi]
  41afc5:	lea    rdx,[rsi+0x1]
  41afc9:	add    ebx,eax
  41afcb:	shl    ebx,0x6
  41afce:	movzx  eax,BYTE PTR [rdx]
  41afd1:	lea    rsi,[rdx+0x1]
  41afd5:	add    eax,ebx
  41afd7:	shl    eax,0x6
  41afda:	movzx  edx,BYTE PTR [rsi]
  41afdd:	lea    rcx,[rsi+0x1]
  41afe1:	add    eax,edx
  41afe3:	shl    eax,0x6
  41afe6:	lea    rdx,[rcx+0x1]
  41afea:	movzx  ecx,BYTE PTR [rcx]
  41afed:	add    eax,ecx
  41afef:	shl    eax,0x6
  41aff2:	lea    rsi,[rdx+0x1]
  41aff6:	movzx  edx,BYTE PTR [rdx]
  41aff9:	add    eax,edx
  41affb:	lea    rdx,[rip+0xfebe]        # 0x42aec0
  41b002:	movsxd r9,edi
  41b005:	sub    eax,DWORD PTR [rdx+r9*4]
  41b009:	cmp    QWORD PTR [rsp+0x98],r14
  41b011:	jbe    0x41b140
  41b017:	cmp    eax,0x10ffff
  41b01c:	ja     0x41b100
  41b022:	lea    edx,[rax-0xd800]
  41b028:	cmp    edx,0x7ff
  41b02e:	ja     0x41b124
  41b034:	mov    eax,DWORD PTR [rsp+0xa0]
  41b03b:	test   eax,eax
  41b03d:	je     0x41b159
  41b043:	mov    r14,r15
  41b046:	mov    DWORD PTR [r15-0x4],0xfffd
  41b04e:	cmp    rsi,rbp
  41b051:	jae    0x41b11c
  41b057:	movzx  eax,BYTE PTR [rsi]
  41b05a:	lea    rdi,[rip+0xfe9f]        # 0x42af00
  41b061:	add    r15,0x4
  41b065:	movsx  r13w,BYTE PTR [rdi+rax*1]
  41b06b:	mov    rbx,rax
  41b06e:	movzx  r12d,r13w
  41b072:	lea    rax,[rsi+r12*1]
  41b076:	cmp    rbp,rax
  41b079:	ja     0x41af83
  41b07f:	mov    r15,r14
  41b082:	mov    DWORD PTR [rsp+0x2c],0x1
  41b08a:	mov    rax,QWORD PTR [rsp+0x80]
  41b092:	mov    QWORD PTR [rax],rsi
  41b095:	mov    rax,QWORD PTR [rsp+0x90]
  41b09d:	mov    QWORD PTR [rax],r15
  41b0a0:	mov    eax,DWORD PTR [rsp+0x2c]
  41b0a4:	add    rsp,0x38
  41b0a8:	pop    rbx
  41b0a9:	pop    rsi
  41b0aa:	pop    rdi
  41b0ab:	pop    rbp
  41b0ac:	pop    r12
  41b0ae:	pop    r13
  41b0b0:	pop    r14
  41b0b2:	pop    r15
  41b0b4:	ret    
  41b0b5:	mov    rdx,rsi
  41b0b8:	xor    ebx,ebx
  41b0ba:	jmp    0x41afce
  41b0bf:	nop
  41b0c0:	xor    eax,eax
  41b0c2:	jmp    0x41afda
  41b0c7:	nop    WORD PTR [rax+rax*1+0x0]
  41b0d0:	mov    rcx,rsi
  41b0d3:	xor    eax,eax
  41b0d5:	jmp    0x41afe6
  41b0da:	nop    WORD PTR [rax+rax*1+0x0]
  41b0e0:	mov    rdx,rsi
  41b0e3:	xor    eax,eax
  41b0e5:	jmp    0x41aff2
  41b0ea:	nop    WORD PTR [rax+rax*1+0x0]
  41b0f0:	add    rsi,0x1
  41b0f4:	shl    ebx,0x6
  41b0f7:	jmp    0x41afc2
  41b0fc:	nop    DWORD PTR [rax+0x0]
  41b100:	cmp    rsi,rbp
  41b103:	mov    r14,r15
  41b106:	mov    DWORD PTR [r15-0x4],0xfffd
  41b10e:	mov    DWORD PTR [rsp+0x2c],0x3
  41b116:	jb     0x41b057
  41b11c:	mov    r15,r14
  41b11f:	jmp    0x41b08a
  41b124:	mov    r14,r15
  41b127:	mov    DWORD PTR [r15-0x4],eax
  41b12b:	jmp    0x41b04e
  41b130:	mov    r15,r14
  41b133:	mov    DWORD PTR [rsp+0x2c],0x3
  41b13b:	jmp    0x41b08a
  41b140:	mov    r11,r12
  41b143:	mov    r15,r14
  41b146:	mov    DWORD PTR [rsp+0x2c],0x2
  41b14e:	not    r11
  41b151:	add    rsi,r11
  41b154:	jmp    0x41b08a
  41b159:	mov    r11,r12
  41b15c:	mov    r15,r14
  41b15f:	mov    DWORD PTR [rsp+0x2c],0x3
  41b167:	not    r11
  41b16a:	add    rsi,r11
  41b16d:	jmp    0x41b08a
  41b172:	mov    DWORD PTR [rsp+0x2c],0x0
  41b17a:	jmp    0x41b08a
  41b17f:	nop
  41b180:	xor    eax,eax
  41b182:	jmp    0x41affb
  41b187:	nop
  41b188:	nop
  41b189:	nop
  41b18a:	nop
  41b18b:	nop
  41b18c:	nop
  41b18d:	nop
  41b18e:	nop
  41b18f:	nop
  41b190:	jmp    QWORD PTR [rip+0x19432]        # 0x4345c8
  41b196:	nop
  41b197:	nop
  41b198:	jmp    QWORD PTR [rip+0x19422]        # 0x4345c0
  41b19e:	nop
  41b19f:	nop
  41b1a0:	jmp    QWORD PTR [rip+0x19412]        # 0x4345b8
  41b1a6:	nop
  41b1a7:	nop
  41b1a8:	jmp    QWORD PTR [rip+0x19402]        # 0x4345b0
  41b1ae:	nop
  41b1af:	nop
  41b1b0:	jmp    QWORD PTR [rip+0x193f2]        # 0x4345a8
  41b1b6:	nop
  41b1b7:	nop
  41b1b8:	jmp    QWORD PTR [rip+0x193e2]        # 0x4345a0
  41b1be:	nop
  41b1bf:	nop
  41b1c0:	jmp    QWORD PTR [rip+0x193d2]        # 0x434598
  41b1c6:	nop
  41b1c7:	nop
  41b1c8:	jmp    QWORD PTR [rip+0x193c2]        # 0x434590
  41b1ce:	nop
  41b1cf:	nop
  41b1d0:	jmp    QWORD PTR [rip+0x193b2]        # 0x434588
  41b1d6:	nop
  41b1d7:	nop
  41b1d8:	jmp    QWORD PTR [rip+0x193a2]        # 0x434580
  41b1de:	nop
  41b1df:	nop
  41b1e0:	jmp    QWORD PTR [rip+0x19392]        # 0x434578
  41b1e6:	nop
  41b1e7:	nop
  41b1e8:	jmp    QWORD PTR [rip+0x19382]        # 0x434570
  41b1ee:	nop
  41b1ef:	nop
  41b1f0:	jmp    QWORD PTR [rip+0x19372]        # 0x434568
  41b1f6:	nop
  41b1f7:	nop
  41b1f8:	jmp    QWORD PTR [rip+0x19362]        # 0x434560
  41b1fe:	nop
  41b1ff:	nop
  41b200:	jmp    QWORD PTR [rip+0x19352]        # 0x434558
  41b206:	nop
  41b207:	nop
  41b208:	jmp    QWORD PTR [rip+0x19342]        # 0x434550
  41b20e:	nop
  41b20f:	nop
  41b210:	jmp    QWORD PTR [rip+0x19332]        # 0x434548
  41b216:	nop
  41b217:	nop
  41b218:	jmp    QWORD PTR [rip+0x19322]        # 0x434540
  41b21e:	nop
  41b21f:	nop
  41b220:	jmp    QWORD PTR [rip+0x19312]        # 0x434538
  41b226:	nop
  41b227:	nop
  41b228:	jmp    QWORD PTR [rip+0x19302]        # 0x434530
  41b22e:	nop
  41b22f:	nop
  41b230:	jmp    QWORD PTR [rip+0x192f2]        # 0x434528
  41b236:	nop
  41b237:	nop
  41b238:	jmp    QWORD PTR [rip+0x192e2]        # 0x434520
  41b23e:	nop
  41b23f:	nop
  41b240:	jmp    QWORD PTR [rip+0x192d2]        # 0x434518
  41b246:	nop
  41b247:	nop
  41b248:	jmp    QWORD PTR [rip+0x192c2]        # 0x434510
  41b24e:	nop
  41b24f:	nop
  41b250:	jmp    QWORD PTR [rip+0x192b2]        # 0x434508
  41b256:	nop
  41b257:	nop
  41b258:	jmp    QWORD PTR [rip+0x192a2]        # 0x434500
  41b25e:	nop
  41b25f:	nop
  41b260:	jmp    QWORD PTR [rip+0x19292]        # 0x4344f8
  41b266:	nop
  41b267:	nop
  41b268:	jmp    QWORD PTR [rip+0x19282]        # 0x4344f0
  41b26e:	nop
  41b26f:	nop
  41b270:	jmp    QWORD PTR [rip+0x19272]        # 0x4344e8
  41b276:	nop
  41b277:	nop
  41b278:	jmp    QWORD PTR [rip+0x19262]        # 0x4344e0
  41b27e:	nop
  41b27f:	nop
  41b280:	jmp    QWORD PTR [rip+0x19252]        # 0x4344d8
  41b286:	nop
  41b287:	nop
  41b288:	jmp    QWORD PTR [rip+0x19242]        # 0x4344d0
  41b28e:	nop
  41b28f:	nop
  41b290:	jmp    QWORD PTR [rip+0x19232]        # 0x4344c8
  41b296:	nop
  41b297:	nop
  41b298:	jmp    QWORD PTR [rip+0x19222]        # 0x4344c0
  41b29e:	nop
  41b29f:	nop
  41b2a0:	jmp    QWORD PTR [rip+0x19212]        # 0x4344b8
  41b2a6:	nop
  41b2a7:	nop
  41b2a8:	jmp    QWORD PTR [rip+0x19202]        # 0x4344b0
  41b2ae:	nop
  41b2af:	nop
  41b2b0:	jmp    QWORD PTR [rip+0x19322]        # 0x4345d8
  41b2b6:	nop
  41b2b7:	nop
  41b2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2c0:	push   rbx
  41b2c1:	sub    rsp,0x30
  41b2c5:	mov    rbx,rcx
  41b2c8:	mov    rcx,QWORD PTR [rip+0x18699]        # 0x433968
  41b2cf:	call   0x41b870
  41b2d4:	cmp    rax,0xffffffffffffffff
  41b2d8:	mov    QWORD PTR [rsp+0x20],rax
  41b2dd:	je     0x41b355
  41b2df:	mov    ecx,0x8
  41b2e4:	call   0x41dc98
  41b2e9:	mov    rcx,QWORD PTR [rip+0x18678]        # 0x433968
  41b2f0:	call   0x41b870
  41b2f5:	mov    rcx,QWORD PTR [rip+0x18674]        # 0x433970
  41b2fc:	mov    QWORD PTR [rsp+0x20],rax
  41b301:	call   0x41b870
  41b306:	lea    rdx,[rsp+0x20]
  41b30b:	lea    r8,[rsp+0x28]
  41b310:	mov    rcx,rbx
  41b313:	mov    QWORD PTR [rsp+0x28],rax
  41b318:	call   0x41dcf0
  41b31d:	mov    rcx,QWORD PTR [rsp+0x20]
  41b322:	mov    rbx,rax
  41b325:	call   0x41b880
  41b32a:	mov    rcx,QWORD PTR [rsp+0x28]
  41b32f:	mov    QWORD PTR [rip+0x18632],rax        # 0x433968
  41b336:	call   0x41b880
  41b33b:	mov    ecx,0x8
  41b340:	mov    QWORD PTR [rip+0x18629],rax        # 0x433970
  41b347:	call   0x41dc78
  41b34c:	mov    rax,rbx
  41b34f:	add    rsp,0x30
  41b353:	pop    rbx
  41b354:	ret    
  41b355:	mov    rax,QWORD PTR [rip+0x101f4]        # 0x42b550
  41b35c:	mov    rcx,rbx
  41b35f:	call   QWORD PTR [rax]
  41b361:	add    rsp,0x30
  41b365:	pop    rbx
  41b366:	ret    
  41b367:	nop    WORD PTR [rax+rax*1+0x0]
  41b370:	sub    rsp,0x28
  41b374:	call   0x41b2c0
  41b379:	test   rax,rax
  41b37c:	sete   al
  41b37f:	movzx  eax,al
  41b382:	neg    eax
  41b384:	add    rsp,0x28
  41b388:	ret    
  41b389:	nop
  41b38a:	nop
  41b38b:	nop
  41b38c:	nop
  41b38d:	nop
  41b38e:	nop
  41b38f:	nop
  41b390:	sub    rsp,0x28
  41b394:	mov    rax,QWORD PTR [rip+0x4565]        # 0x41f900
  41b39b:	mov    rax,QWORD PTR [rax]
  41b39e:	test   rax,rax
  41b3a1:	je     0x41b3c0
  41b3a3:	call   rax
  41b3a5:	mov    rax,QWORD PTR [rip+0x4554]        # 0x41f900
  41b3ac:	lea    rdx,[rax+0x8]
  41b3b0:	mov    rax,QWORD PTR [rax+0x8]
  41b3b4:	mov    QWORD PTR [rip+0x4545],rdx        # 0x41f900
  41b3bb:	test   rax,rax
  41b3be:	jne    0x41b3a3
  41b3c0:	add    rsp,0x28
  41b3c4:	ret    
  41b3c5:	nop
  41b3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b3d0:	push   rsi
  41b3d1:	push   rbx
  41b3d2:	sub    rsp,0x28
  41b3d6:	mov    rsi,QWORD PTR [rip+0x100e3]        # 0x42b4c0
  41b3dd:	mov    rax,QWORD PTR [rsi]
  41b3e0:	cmp    eax,0xffffffff
  41b3e3:	mov    ebx,eax
  41b3e5:	je     0x41b410
  41b3e7:	test   ebx,ebx
  41b3e9:	je     0x41b3fa
  41b3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b3f0:	mov    eax,ebx
  41b3f2:	call   QWORD PTR [rsi+rax*8]
  41b3f5:	sub    ebx,0x1
  41b3f8:	jne    0x41b3f0
  41b3fa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x41b390
  41b401:	add    rsp,0x28
  41b405:	pop    rbx
  41b406:	pop    rsi
  41b407:	jmp    0x41b370
  41b40c:	nop    DWORD PTR [rax+0x0]
  41b410:	xor    ebx,ebx
  41b412:	jmp    0x41b416
  41b414:	mov    ebx,eax
  41b416:	lea    edx,[rbx+0x1]
  41b419:	cmp    QWORD PTR [rsi+rdx*8],0x0
  41b41e:	mov    rax,rdx
  41b421:	jne    0x41b414
  41b423:	jmp    0x41b3e7
  41b425:	nop
  41b426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b430:	mov    eax,DWORD PTR [rip+0x1783a]        # 0x432c70
  41b436:	test   eax,eax
  41b438:	je     0x41b440
  41b43a:	repz ret 
  41b43c:	nop    DWORD PTR [rax+0x0]
  41b440:	mov    DWORD PTR [rip+0x17826],0x1        # 0x432c70
  41b44a:	jmp    0x41b3d0
  41b44c:	nop
  41b44d:	nop
  41b44e:	nop
  41b44f:	nop
  41b450:	mov    rax,QWORD PTR [rip+0x19289]        # 0x4346e0
  41b457:	rex.W jmp rax
  41b45a:	nop
  41b45b:	nop
  41b45c:	nop
  41b45d:	nop
  41b45e:	nop
  41b45f:	nop
  41b460:	xor    eax,eax
  41b462:	ret    
  41b463:	nop
  41b464:	nop
  41b465:	nop
  41b466:	nop
  41b467:	nop
  41b468:	nop
  41b469:	nop
  41b46a:	nop
  41b46b:	nop
  41b46c:	nop
  41b46d:	nop
  41b46e:	nop
  41b46f:	nop
  41b470:	push   r12
  41b472:	push   rbp
  41b473:	push   rdi
  41b474:	push   rsi
  41b475:	push   rbx
  41b476:	sub    rsp,0x40
  41b47a:	mov    rbx,QWORD PTR [rip+0x450f]        # 0x41f990
  41b481:	movabs rax,0x2b992ddfa232
  41b48b:	mov    QWORD PTR [rsp+0x20],0x0
  41b494:	cmp    rbx,rax
  41b497:	je     0x41b4b0
  41b499:	not    rbx
  41b49c:	mov    QWORD PTR [rip+0x44fd],rbx        # 0x41f9a0
  41b4a3:	add    rsp,0x40
  41b4a7:	pop    rbx
  41b4a8:	pop    rsi
  41b4a9:	pop    rdi
  41b4aa:	pop    rbp
  41b4ab:	pop    r12
  41b4ad:	ret    
  41b4ae:	xchg   ax,ax
  41b4b0:	lea    rcx,[rsp+0x20]
  41b4b5:	call   QWORD PTR [rip+0x1916d]        # 0x434628
  41b4bb:	mov    r12,QWORD PTR [rsp+0x20]
  41b4c0:	call   QWORD PTR [rip+0x1913a]        # 0x434600
  41b4c6:	mov    ebp,eax
  41b4c8:	call   QWORD PTR [rip+0x1913a]        # 0x434608
  41b4ce:	mov    edi,eax
  41b4d0:	call   QWORD PTR [rip+0x1915a]        # 0x434630
  41b4d6:	lea    rcx,[rsp+0x30]
  41b4db:	mov    esi,eax
  41b4dd:	call   QWORD PTR [rip+0x19165]        # 0x434648
  41b4e3:	xor    r12,QWORD PTR [rsp+0x30]
  41b4e8:	mov    edx,edi
  41b4ea:	movabs rax,0xffffffffffff
  41b4f4:	xor    rbp,r12
  41b4f7:	mov    rdi,rbp
  41b4fa:	xor    rdi,rdx
  41b4fd:	mov    edx,esi
  41b4ff:	xor    rdi,rdx
  41b502:	mov    rsi,rdi
  41b505:	and    rsi,rax
  41b508:	cmp    rsi,rbx
  41b50b:	je     0x41b530
  41b50d:	mov    rax,rsi
  41b510:	not    rax
  41b513:	mov    QWORD PTR [rip+0x4476],rsi        # 0x41f990
  41b51a:	mov    QWORD PTR [rip+0x447f],rax        # 0x41f9a0
  41b521:	add    rsp,0x40
  41b525:	pop    rbx
  41b526:	pop    rsi
  41b527:	pop    rdi
  41b528:	pop    rbp
  41b529:	pop    r12
  41b52b:	ret    
  41b52c:	nop    DWORD PTR [rax+0x0]
  41b530:	movabs rax,0xffffd466d2205dcc
  41b53a:	movabs rsi,0x2b992ddfa233
  41b544:	jmp    0x41b513
  41b546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b550:	push   rbp
  41b551:	push   rsi
  41b552:	push   rbx
  41b553:	mov    rbp,rsp
  41b556:	sub    rsp,0x70
  41b55a:	mov    rsi,rcx
  41b55d:	lea    rcx,[rip+0x1775c]        # 0x432cc0
  41b564:	call   QWORD PTR [rip+0x190ee]        # 0x434658
  41b56a:	mov    rbx,QWORD PTR [rip+0x17847]        # 0x432db8
  41b571:	xor    r8d,r8d
  41b574:	lea    rdx,[rbp-0x28]
  41b578:	mov    rcx,rbx
  41b57b:	call   QWORD PTR [rip+0x190df]        # 0x434660
  41b581:	test   rax,rax
  41b584:	mov    r9,rax
  41b587:	je     0x41b630
  41b58d:	lea    rax,[rbp-0x20]
  41b591:	mov    QWORD PTR [rsp+0x38],0x0
  41b59a:	mov    r8,rbx
  41b59d:	mov    rdx,QWORD PTR [rbp-0x28]
  41b5a1:	xor    ecx,ecx
  41b5a3:	mov    QWORD PTR [rsp+0x30],rax
  41b5a8:	lea    rax,[rbp-0x18]
  41b5ac:	mov    QWORD PTR [rsp+0x28],rax
  41b5b1:	lea    rax,[rip+0x17708]        # 0x432cc0
  41b5b8:	mov    QWORD PTR [rsp+0x20],rax
  41b5bd:	call   QWORD PTR [rip+0x190a5]        # 0x434668
  41b5c3:	mov    rax,QWORD PTR [rip+0x177ee]        # 0x432db8
  41b5ca:	xor    ecx,ecx
  41b5cc:	mov    QWORD PTR [rip+0x1776d],rsi        # 0x432d40
  41b5d3:	mov    DWORD PTR [rip+0x17be3],0xc0000409        # 0x4331c0
  41b5dd:	mov    DWORD PTR [rip+0x17bdd],0x1        # 0x4331c4
  41b5e7:	mov    QWORD PTR [rip+0x17be2],rax        # 0x4331d0
  41b5ee:	mov    rax,QWORD PTR [rip+0x439b]        # 0x41f990
  41b5f5:	mov    QWORD PTR [rbp-0x10],rax
  41b5f9:	mov    rax,QWORD PTR [rip+0x43a0]        # 0x41f9a0
  41b600:	mov    QWORD PTR [rbp-0x8],rax
  41b604:	call   QWORD PTR [rip+0x19066]        # 0x434670
  41b60a:	lea    rcx,[rip+0xf9ef]        # 0x42b000
  41b611:	call   QWORD PTR [rip+0x19079]        # 0x434690
  41b617:	call   QWORD PTR [rip+0x18fdb]        # 0x4345f8
  41b61d:	mov    edx,0xc0000409
  41b622:	mov    rcx,rax
  41b625:	call   QWORD PTR [rip+0x19055]        # 0x434680
  41b62b:	call   0x41dc68
  41b630:	mov    rax,QWORD PTR [rbp+0x18]
  41b634:	mov    QWORD PTR [rip+0x1777d],rax        # 0x432db8
  41b63b:	lea    rax,[rbp+0x8]
  41b63f:	mov    QWORD PTR [rip+0x17712],rax        # 0x432d58
  41b646:	jmp    0x41b5c3
  41b64b:	nop
  41b64c:	nop
  41b64d:	nop
  41b64e:	nop
  41b64f:	nop
  41b650:	sub    rsp,0x28
  41b654:	test   edx,edx
  41b656:	je     0x41b670
  41b658:	cmp    edx,0x3
  41b65b:	je     0x41b670
  41b65d:	mov    eax,0x1
  41b662:	add    rsp,0x28
  41b666:	ret    
  41b667:	nop    WORD PTR [rax+rax*1+0x0]
  41b670:	call   0x41c360
  41b675:	mov    eax,0x1
  41b67a:	add    rsp,0x28
  41b67e:	ret    
  41b67f:	nop
  41b680:	push   rsi
  41b681:	push   rbx
  41b682:	sub    rsp,0x28
  41b686:	mov    rax,QWORD PTR [rip+0xfe13]        # 0x42b4a0
  41b68d:	cmp    DWORD PTR [rax],0x2
  41b690:	je     0x41b698
  41b692:	mov    DWORD PTR [rax],0x2
  41b698:	cmp    edx,0x2
  41b69b:	je     0x41b6b0
  41b69d:	cmp    edx,0x1
  41b6a0:	je     0x41b6e2
  41b6a2:	mov    eax,0x1
  41b6a7:	add    rsp,0x28
  41b6ab:	pop    rbx
  41b6ac:	pop    rsi
  41b6ad:	ret    
  41b6ae:	xchg   ax,ax
  41b6b0:	lea    rbx,[rip+0x1a9a9]        # 0x436060
  41b6b7:	lea    rsi,[rip+0x1a9a2]        # 0x436060
  41b6be:	cmp    rbx,rsi
  41b6c1:	je     0x41b6a2
  41b6c3:	mov    rax,QWORD PTR [rbx]
  41b6c6:	test   rax,rax
  41b6c9:	je     0x41b6cd
  41b6cb:	call   rax
  41b6cd:	add    rbx,0x8
  41b6d1:	cmp    rbx,rsi
  41b6d4:	jne    0x41b6c3
  41b6d6:	mov    eax,0x1
  41b6db:	add    rsp,0x28
  41b6df:	pop    rbx
  41b6e0:	pop    rsi
  41b6e1:	ret    
  41b6e2:	call   0x41c360
  41b6e7:	jmp    0x41b6a2
  41b6e9:	nop    DWORD PTR [rax+0x0]
  41b6f0:	xor    eax,eax
  41b6f2:	ret    
  41b6f3:	nop
  41b6f4:	nop
  41b6f5:	nop
  41b6f6:	nop
  41b6f7:	nop
  41b6f8:	nop
  41b6f9:	nop
  41b6fa:	nop
  41b6fb:	nop
  41b6fc:	nop
  41b6fd:	nop
  41b6fe:	nop
  41b6ff:	nop
  41b700:	sub    rsp,0x58
  41b704:	mov    rax,QWORD PTR [rip+0x17b95]        # 0x4332a0
  41b70b:	test   rax,rax
  41b70e:	je     0x41b73c
  41b710:	movsd  xmm0,QWORD PTR [rsp+0x80]
  41b719:	mov    DWORD PTR [rsp+0x20],ecx
  41b71d:	lea    rcx,[rsp+0x20]
  41b722:	mov    QWORD PTR [rsp+0x28],rdx
  41b727:	movsd  QWORD PTR [rsp+0x30],xmm2
  41b72d:	movsd  QWORD PTR [rsp+0x38],xmm3
  41b733:	movsd  QWORD PTR [rsp+0x40],xmm0
  41b739:	call   rax
  41b73b:	nop
  41b73c:	add    rsp,0x58
  41b740:	ret    
  41b741:	nop    DWORD PTR [rax+rax*1+0x0]
  41b746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b750:	mov    QWORD PTR [rip+0x17b49],rcx        # 0x4332a0
  41b757:	jmp    0x41dcc8
  41b75c:	nop    DWORD PTR [rax+0x0]
  41b760:	push   rsi
  41b761:	push   rbx
  41b762:	sub    rsp,0x78
  41b766:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41b76b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  41b770:	movaps XMMWORD PTR [rsp+0x60],xmm8
  41b776:	cmp    DWORD PTR [rcx],0x6
  41b779:	ja     0x41b850
  41b77f:	mov    edx,DWORD PTR [rcx]
  41b781:	lea    rax,[rip+0xf9bc]        # 0x42b144
  41b788:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41b78c:	add    rax,rdx
  41b78f:	jmp    rax
  41b791:	lea    rbx,[rip+0xf888]        # 0x42b020
  41b798:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7a0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  41b7a6:	mov    rsi,QWORD PTR [rcx+0x8]
  41b7aa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  41b7af:	movsd  xmm6,QWORD PTR [rcx+0x10]
  41b7b4:	call   0x41dce0
  41b7b9:	movsd  QWORD PTR [rsp+0x30],xmm8
  41b7c0:	lea    rcx,[rax+0x60]
  41b7c4:	lea    rdx,[rip+0xf94d]        # 0x42b118
  41b7cb:	movsd  QWORD PTR [rsp+0x28],xmm7
  41b7d1:	mov    r9,rsi
  41b7d4:	mov    r8,rbx
  41b7d7:	movsd  QWORD PTR [rsp+0x20],xmm6
  41b7dd:	call   0x41dc28
  41b7e2:	nop
  41b7e3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  41b7e8:	xor    eax,eax
  41b7ea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  41b7ef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  41b7f5:	add    rsp,0x78
  41b7f9:	pop    rbx
  41b7fa:	pop    rsi
  41b7fb:	ret    
  41b7fc:	nop    DWORD PTR [rax+0x0]
  41b800:	lea    rbx,[rip+0xf838]        # 0x42b03f
  41b807:	jmp    0x41b7a0
  41b809:	nop    DWORD PTR [rax+0x0]
  41b810:	lea    rbx,[rip+0xf849]        # 0x42b060
  41b817:	jmp    0x41b7a0
  41b819:	nop    DWORD PTR [rax+0x0]
  41b820:	lea    rbx,[rip+0xf8a9]        # 0x42b0d0
  41b827:	jmp    0x41b7a0
  41b82c:	nop    DWORD PTR [rax+0x0]
  41b830:	lea    rbx,[rip+0xf871]        # 0x42b0a8
  41b837:	jmp    0x41b7a0
  41b83c:	nop    DWORD PTR [rax+0x0]
  41b840:	lea    rbx,[rip+0xf839]        # 0x42b080
  41b847:	jmp    0x41b7a0
  41b84c:	nop    DWORD PTR [rax+0x0]
  41b850:	lea    rbx,[rip+0xf8af]        # 0x42b106
  41b857:	jmp    0x41b7a0
  41b85c:	nop
  41b85d:	nop
  41b85e:	nop
  41b85f:	nop
  41b860:	fninit 
  41b862:	ret    
  41b863:	nop
  41b864:	nop
  41b865:	nop
  41b866:	nop
  41b867:	nop
  41b868:	nop
  41b869:	nop
  41b86a:	nop
  41b86b:	nop
  41b86c:	nop
  41b86d:	nop
  41b86e:	nop
  41b86f:	nop
  41b870:	mov    rax,rcx
  41b873:	ret    
  41b874:	xchg   ax,ax
  41b876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b880:	mov    rax,rcx
  41b883:	ret    
  41b884:	nop
  41b885:	nop
  41b886:	nop
  41b887:	nop
  41b888:	nop
  41b889:	nop
  41b88a:	nop
  41b88b:	nop
  41b88c:	nop
  41b88d:	nop
  41b88e:	nop
  41b88f:	nop
  41b890:	push   rsi
  41b891:	push   rbx
  41b892:	sub    rsp,0x38
  41b896:	lea    rax,[rsp+0x58]
  41b89b:	mov    rbx,rcx
  41b89e:	mov    QWORD PTR [rsp+0x58],rdx
  41b8a3:	mov    QWORD PTR [rsp+0x60],r8
  41b8a8:	mov    QWORD PTR [rsp+0x68],r9
  41b8ad:	mov    QWORD PTR [rsp+0x28],rax
  41b8b2:	call   0x41dce0
  41b8b7:	lea    rcx,[rip+0xf8a2]        # 0x42b160
  41b8be:	lea    r9,[rax+0x60]
  41b8c2:	mov    r8d,0x1b
  41b8c8:	mov    edx,0x1
  41b8cd:	call   0x41dbf8
  41b8d2:	mov    rsi,QWORD PTR [rsp+0x28]
  41b8d7:	call   0x41dce0
  41b8dc:	lea    rcx,[rax+0x60]
  41b8e0:	mov    rdx,rbx
  41b8e3:	mov    r8,rsi
  41b8e6:	call   0x41db20
  41b8eb:	call   0x41dc68
  41b8f0:	nop
  41b8f1:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b900:	push   r13
  41b902:	push   r12
  41b904:	push   rbp
  41b905:	push   rdi
  41b906:	push   rsi
  41b907:	push   rbx
  41b908:	sub    rsp,0x58
  41b90c:	movsxd rbp,DWORD PTR [rip+0x179b1]        # 0x4332c4
  41b913:	mov    rbx,rcx
  41b916:	mov    rsi,rdx
  41b919:	mov    rdi,r8
  41b91c:	test   ebp,ebp
  41b91e:	jle    0x41ba1a
  41b924:	mov    rax,QWORD PTR [rip+0x1799d]        # 0x4332c8
  41b92b:	xor    r9d,r9d
  41b92e:	add    rax,0x8
  41b932:	mov    r10,QWORD PTR [rax]
  41b935:	cmp    rbx,r10
  41b938:	jb     0x41b94e
  41b93a:	mov    rdx,QWORD PTR [rax+0x8]
  41b93e:	mov    r11d,DWORD PTR [rdx+0x8]
  41b942:	add    r10,r11
  41b945:	cmp    rbx,r10
  41b948:	jb     0x41ba00
  41b94e:	add    r9d,0x1
  41b952:	add    rax,0x18
  41b956:	cmp    r9d,ebp
  41b959:	jne    0x41b932
  41b95b:	mov    rcx,rbx
  41b95e:	call   0x41c570
  41b963:	test   rax,rax
  41b966:	mov    r12,rax
  41b969:	je     0x41ba52
  41b96f:	lea    rbp,[rbp+rbp*2+0x0]
  41b974:	shl    rbp,0x3
  41b978:	mov    r13,rbp
  41b97b:	add    r13,QWORD PTR [rip+0x17946]        # 0x4332c8
  41b982:	mov    QWORD PTR [r13+0x10],rax
  41b986:	mov    DWORD PTR [r13+0x0],0x0
  41b98e:	call   0x41c690
  41b993:	mov    edx,DWORD PTR [r12+0xc]
  41b998:	mov    r8d,0x30
  41b99e:	add    rax,rdx
  41b9a1:	lea    rdx,[rsp+0x20]
  41b9a6:	mov    QWORD PTR [r13+0x8],rax
  41b9aa:	mov    rax,QWORD PTR [rip+0x17917]        # 0x4332c8
  41b9b1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  41b9b6:	call   QWORD PTR [rip+0x18ce4]        # 0x4346a0
  41b9bc:	test   rax,rax
  41b9bf:	je     0x41ba35
  41b9c1:	mov    eax,DWORD PTR [rsp+0x44]
  41b9c5:	lea    edx,[rax-0x4]
  41b9c8:	and    edx,0xfffffffb
  41b9cb:	je     0x41b9f9
  41b9cd:	sub    eax,0x40
  41b9d0:	and    eax,0xffffffbf
  41b9d3:	je     0x41b9f9
  41b9d5:	mov    r9,rbp
  41b9d8:	add    r9,QWORD PTR [rip+0x178e9]        # 0x4332c8
  41b9df:	mov    r8d,0x40
  41b9e5:	mov    rdx,QWORD PTR [rsp+0x38]
  41b9ea:	mov    rcx,QWORD PTR [rsp+0x20]
  41b9ef:	call   QWORD PTR [rip+0x18ca3]        # 0x434698
  41b9f5:	test   eax,eax
  41b9f7:	je     0x41ba21
  41b9f9:	add    DWORD PTR [rip+0x178c4],0x1        # 0x4332c4
  41ba00:	mov    r8,rdi
  41ba03:	mov    rdx,rsi
  41ba06:	mov    rcx,rbx
  41ba09:	add    rsp,0x58
  41ba0d:	pop    rbx
  41ba0e:	pop    rsi
  41ba0f:	pop    rdi
  41ba10:	pop    rbp
  41ba11:	pop    r12
  41ba13:	pop    r13
  41ba15:	jmp    0x41dbc0
  41ba1a:	xor    ebp,ebp
  41ba1c:	jmp    0x41b95b
  41ba21:	call   QWORD PTR [rip+0x18be9]        # 0x434610
  41ba27:	lea    rcx,[rip+0xf7aa]        # 0x42b1d8
  41ba2e:	mov    edx,eax
  41ba30:	call   0x41b890
  41ba35:	mov    rax,QWORD PTR [rip+0x1788c]        # 0x4332c8
  41ba3c:	mov    edx,DWORD PTR [r12+0x8]
  41ba41:	lea    rcx,[rip+0xf758]        # 0x42b1a0
  41ba48:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  41ba4d:	call   0x41b890
  41ba52:	lea    rcx,[rip+0xf727]        # 0x42b180
  41ba59:	mov    rdx,rbx
  41ba5c:	call   0x41b890
  41ba61:	nop
  41ba62:	nop    DWORD PTR [rax+0x0]
  41ba66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ba70:	push   rbp
  41ba71:	push   r14
  41ba73:	push   r13
  41ba75:	push   r12
  41ba77:	push   rdi
  41ba78:	push   rsi
  41ba79:	push   rbx
  41ba7a:	mov    rbp,rsp
  41ba7d:	sub    rsp,0x60
  41ba81:	mov    ebx,DWORD PTR [rip+0x17839]        # 0x4332c0
  41ba87:	test   ebx,ebx
  41ba89:	je     0x41baa0
  41ba8b:	mov    rsp,rbp
  41ba8e:	pop    rbx
  41ba8f:	pop    rsi
  41ba90:	pop    rdi
  41ba91:	pop    r12
  41ba93:	pop    r13
  41ba95:	pop    r14
  41ba97:	pop    rbp
  41ba98:	ret    
  41ba99:	nop    DWORD PTR [rax+0x0]
  41baa0:	mov    DWORD PTR [rip+0x17816],0x1        # 0x4332c0
  41baaa:	call   0x41c5c0
  41baaf:	cdqe   
  41bab1:	lea    rax,[rax+rax*2]
  41bab5:	lea    rax,[rax*8+0x1e]
  41babd:	and    rax,0xfffffffffffffff0
  41bac1:	call   0x41c7e0
  41bac6:	mov    rsi,QWORD PTR [rip+0xfa03]        # 0x42b4d0
  41bacd:	mov    rbx,QWORD PTR [rip+0xfa0c]        # 0x42b4e0
  41bad4:	sub    rsp,rax
  41bad7:	mov    DWORD PTR [rip+0x177e3],0x0        # 0x4332c4
  41bae1:	lea    rax,[rsp+0x20]
  41bae6:	mov    QWORD PTR [rip+0x177db],rax        # 0x4332c8
  41baed:	mov    rax,rsi
  41baf0:	sub    rax,rbx
  41baf3:	cmp    rax,0x7
  41baf7:	jle    0x41ba8b
  41baf9:	cmp    rax,0xb
  41bafd:	jle    0x41bb25
  41baff:	mov    r11d,DWORD PTR [rbx]
  41bb02:	test   r11d,r11d
  41bb05:	jne    0x41bc50
  41bb0b:	mov    r10d,DWORD PTR [rbx+0x4]
  41bb0f:	test   r10d,r10d
  41bb12:	jne    0x41bc50
  41bb18:	mov    r9d,DWORD PTR [rbx+0x8]
  41bb1c:	test   r9d,r9d
  41bb1f:	jne    0x41bb3c
  41bb21:	add    rbx,0xc
  41bb25:	mov    r8d,DWORD PTR [rbx]
  41bb28:	test   r8d,r8d
  41bb2b:	jne    0x41bc50
  41bb31:	mov    ecx,DWORD PTR [rbx+0x4]
  41bb34:	test   ecx,ecx
  41bb36:	jne    0x41bc50
  41bb3c:	mov    edx,DWORD PTR [rbx+0x8]
  41bb3f:	cmp    edx,0x1
  41bb42:	jne    0x41bd5c
  41bb48:	add    rbx,0xc
  41bb4c:	cmp    rbx,rsi
  41bb4f:	jae    0x41ba8b
  41bb55:	mov    r12,QWORD PTR [rip+0xf9a4]        # 0x42b500
  41bb5c:	lea    r13,[rbp-0x30]
  41bb60:	movabs r14,0xffffffff00000000
  41bb6a:	mov    ecx,DWORD PTR [rbx+0x4]
  41bb6d:	mov    eax,DWORD PTR [rbx]
  41bb6f:	movzx  edx,BYTE PTR [rbx+0x8]
  41bb73:	add    rax,r12
  41bb76:	add    rcx,r12
  41bb79:	cmp    edx,0x10
  41bb7c:	mov    r8,QWORD PTR [rax]
  41bb7f:	je     0x41bcc6
  41bb85:	jbe    0x41bc8d
  41bb8b:	cmp    edx,0x20
  41bb8e:	je     0x41bd0f
  41bb94:	cmp    edx,0x40
  41bb97:	jne    0x41bcfb
  41bb9d:	sub    r8,rax
  41bba0:	mov    rdx,r13
  41bba3:	mov    rdi,r13
  41bba6:	mov    rax,r8
  41bba9:	add    rax,QWORD PTR [rcx]
  41bbac:	mov    r8d,0x8
  41bbb2:	mov    QWORD PTR [rbp-0x30],rax
  41bbb6:	call   0x41b900
  41bbbb:	add    rbx,0xc
  41bbbf:	cmp    rbx,rsi
  41bbc2:	jb     0x41bb6a
  41bbc4:	mov    eax,DWORD PTR [rip+0x176fa]        # 0x4332c4
  41bbca:	xor    ebx,ebx
  41bbcc:	xor    esi,esi
  41bbce:	test   eax,eax
  41bbd0:	jle    0x41ba8b
  41bbd6:	mov    r14,QWORD PTR [rip+0x18ac3]        # 0x4346a0
  41bbdd:	lea    r13,[rbp-0x34]
  41bbe1:	mov    r12,QWORD PTR [rip+0x18ab0]        # 0x434698
  41bbe8:	jmp    0x41bc03
  41bbea:	nop    WORD PTR [rax+rax*1+0x0]
  41bbf0:	add    esi,0x1
  41bbf3:	add    rbx,0x18
  41bbf7:	cmp    esi,DWORD PTR [rip+0x176c7]        # 0x4332c4
  41bbfd:	jge    0x41ba8b
  41bc03:	mov    rax,rbx
  41bc06:	add    rax,QWORD PTR [rip+0x176bb]        # 0x4332c8
  41bc0d:	mov    edx,DWORD PTR [rax]
  41bc0f:	test   edx,edx
  41bc11:	je     0x41bbf0
  41bc13:	mov    rcx,QWORD PTR [rax+0x8]
  41bc17:	mov    r8d,0x30
  41bc1d:	mov    rdx,rdi
  41bc20:	call   r14
  41bc23:	test   rax,rax
  41bc26:	je     0x41bd3e
  41bc2c:	mov    rax,QWORD PTR [rip+0x17695]        # 0x4332c8
  41bc33:	mov    r9,r13
  41bc36:	mov    rdx,QWORD PTR [rbp-0x18]
  41bc3a:	mov    rcx,QWORD PTR [rbp-0x30]
  41bc3e:	mov    r8d,DWORD PTR [rax+rbx*1]
  41bc42:	call   r12
  41bc45:	jmp    0x41bbf0
  41bc47:	nop    WORD PTR [rax+rax*1+0x0]
  41bc50:	cmp    rbx,rsi
  41bc53:	jae    0x41ba8b
  41bc59:	mov    r12,QWORD PTR [rip+0xf8a0]        # 0x42b500
  41bc60:	lea    rdi,[rbp-0x30]
  41bc64:	mov    ecx,DWORD PTR [rbx+0x4]
  41bc67:	mov    eax,DWORD PTR [rbx]
  41bc69:	mov    r8d,0x4
  41bc6f:	mov    rdx,rdi
  41bc72:	add    rbx,0x8
  41bc76:	add    rcx,r12
  41bc79:	add    eax,DWORD PTR [rcx]
  41bc7b:	mov    DWORD PTR [rbp-0x30],eax
  41bc7e:	call   0x41b900
  41bc83:	cmp    rbx,rsi
  41bc86:	jb     0x41bc64
  41bc88:	jmp    0x41bbc4
  41bc8d:	cmp    edx,0x8
  41bc90:	jne    0x41bcfb
  41bc92:	movzx  edx,BYTE PTR [rcx]
  41bc95:	mov    rdi,r13
  41bc98:	mov    r10,rdx
  41bc9b:	or     r10,0xffffffffffffff00
  41bca2:	test   dl,dl
  41bca4:	cmovs  rdx,r10
  41bca8:	sub    rdx,rax
  41bcab:	lea    rax,[r8+rdx*1]
  41bcaf:	mov    r8d,0x1
  41bcb5:	mov    rdx,r13
  41bcb8:	mov    QWORD PTR [rbp-0x30],rax
  41bcbc:	call   0x41b900
  41bcc1:	jmp    0x41bbbb
  41bcc6:	movzx  edx,WORD PTR [rcx]
  41bcc9:	mov    rdi,r13
  41bccc:	mov    r10,rdx
  41bccf:	or     r10,0xffffffffffff0000
  41bcd6:	test   dx,dx
  41bcd9:	cmovs  rdx,r10
  41bcdd:	sub    rdx,rax
  41bce0:	lea    rax,[r8+rdx*1]
  41bce4:	mov    r8d,0x2
  41bcea:	mov    rdx,r13
  41bced:	mov    QWORD PTR [rbp-0x30],rax
  41bcf1:	call   0x41b900
  41bcf6:	jmp    0x41bbbb
  41bcfb:	lea    rcx,[rip+0xf536]        # 0x42b238
  41bd02:	mov    QWORD PTR [rbp-0x30],0x0
  41bd0a:	call   0x41b890
  41bd0f:	mov    edx,DWORD PTR [rcx]
  41bd11:	mov    rdi,r13
  41bd14:	mov    r10,rdx
  41bd17:	or     r10,r14
  41bd1a:	test   edx,edx
  41bd1c:	cmovs  rdx,r10
  41bd20:	sub    rdx,rax
  41bd23:	lea    rax,[r8+rdx*1]
  41bd27:	mov    r8d,0x4
  41bd2d:	mov    rdx,r13
  41bd30:	mov    QWORD PTR [rbp-0x30],rax
  41bd34:	call   0x41b900
  41bd39:	jmp    0x41bbbb
  41bd3e:	add    rbx,QWORD PTR [rip+0x17583]        # 0x4332c8
  41bd45:	lea    rcx,[rip+0xf454]        # 0x42b1a0
  41bd4c:	mov    rax,QWORD PTR [rbx+0x10]
  41bd50:	mov    r8,QWORD PTR [rbx+0x8]
  41bd54:	mov    edx,DWORD PTR [rax+0x8]
  41bd57:	call   0x41b890
  41bd5c:	lea    rcx,[rip+0xf49d]        # 0x42b200
  41bd63:	call   0x41b890
  41bd68:	nop
  41bd69:	nop
  41bd6a:	nop
  41bd6b:	nop
  41bd6c:	nop
  41bd6d:	nop
  41bd6e:	nop
  41bd6f:	nop
  41bd70:	sub    rsp,0x28
  41bd74:	mov    eax,DWORD PTR [rcx]
  41bd76:	cmp    eax,0xc0000091
  41bd7b:	ja     0x41bde0
  41bd7d:	cmp    eax,0xc000008d
  41bd82:	jae    0x41bdff
  41bd84:	cmp    eax,0xc0000008
  41bd89:	je     0x41bea0
  41bd8f:	ja     0x41be70
  41bd95:	cmp    eax,0x80000002
  41bd9a:	je     0x41bea0
  41bda0:	cmp    eax,0xc0000005
  41bda5:	jne    0x41be7e
  41bdab:	xor    edx,edx
  41bdad:	mov    ecx,0xb
  41bdb2:	call   0x41db88
  41bdb7:	cmp    rax,0x1
  41bdbb:	je     0x41bf00
  41bdc1:	test   rax,rax
  41bdc4:	je     0x41bee0
  41bdca:	mov    ecx,0xb
  41bdcf:	call   rax
  41bdd1:	xor    eax,eax
  41bdd3:	add    rsp,0x28
  41bdd7:	ret    
  41bdd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bde0:	cmp    eax,0xc0000094
  41bde5:	je     0x41beb0
  41bdeb:	ja     0x41be30
  41bded:	cmp    eax,0xc0000092
  41bdf2:	je     0x41bea0
  41bdf8:	cmp    eax,0xc0000093
  41bdfd:	jne    0x41be7e
  41bdff:	xor    edx,edx
  41be01:	mov    ecx,0x8
  41be06:	call   0x41db88
  41be0b:	cmp    rax,0x1
  41be0f:	mov    rdx,rax
  41be12:	je     0x41be88
  41be14:	test   rdx,rdx
  41be17:	mov    eax,0x1
  41be1c:	je     0x41bdd3
  41be1e:	mov    ecx,0x8
  41be23:	call   rdx
  41be25:	xor    eax,eax
  41be27:	add    rsp,0x28
  41be2b:	ret    
  41be2c:	nop    DWORD PTR [rax+0x0]
  41be30:	cmp    eax,0xc0000095
  41be35:	je     0x41bea0
  41be37:	cmp    eax,0xc0000096
  41be3c:	jne    0x41be7e
  41be3e:	xor    edx,edx
  41be40:	mov    ecx,0x4
  41be45:	call   0x41db88
  41be4a:	cmp    rax,0x1
  41be4e:	je     0x41beea
  41be54:	test   rax,rax
  41be57:	je     0x41bee0
  41be5d:	mov    ecx,0x4
  41be62:	call   rax
  41be64:	xor    eax,eax
  41be66:	jmp    0x41bdd3
  41be6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41be70:	cmp    eax,0xc000001d
  41be75:	je     0x41be3e
  41be77:	cmp    eax,0xc000008c
  41be7c:	je     0x41bea0
  41be7e:	mov    eax,0x1
  41be83:	add    rsp,0x28
  41be87:	ret    
  41be88:	mov    edx,0x1
  41be8d:	mov    ecx,0x8
  41be92:	call   0x41db88
  41be97:	call   0x41b860
  41be9c:	nop    DWORD PTR [rax+0x0]
  41bea0:	xor    eax,eax
  41bea2:	add    rsp,0x28
  41bea6:	ret    
  41bea7:	nop    WORD PTR [rax+rax*1+0x0]
  41beb0:	xor    edx,edx
  41beb2:	mov    ecx,0x8
  41beb7:	call   0x41db88
  41bebc:	cmp    rax,0x1
  41bec0:	mov    rdx,rax
  41bec3:	jne    0x41be14
  41bec9:	mov    edx,0x1
  41bece:	mov    ecx,0x8
  41bed3:	call   0x41db88
  41bed8:	xor    eax,eax
  41beda:	jmp    0x41bdd3
  41bedf:	nop
  41bee0:	mov    eax,0x4
  41bee5:	add    rsp,0x28
  41bee9:	ret    
  41beea:	mov    edx,0x1
  41beef:	mov    ecx,0x4
  41bef4:	call   0x41db88
  41bef9:	xor    eax,eax
  41befb:	jmp    0x41bdd3
  41bf00:	mov    edx,0x1
  41bf05:	mov    ecx,0xb
  41bf0a:	call   0x41db88
  41bf0f:	xor    eax,eax
  41bf11:	jmp    0x41bdd3
  41bf16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bf20:	push   r12
  41bf22:	push   rbp
  41bf23:	push   rdi
  41bf24:	push   rsi
  41bf25:	push   rbx
  41bf26:	sub    rsp,0x20
  41bf2a:	call   0x41c690
  41bf2f:	mov    rbp,rax
  41bf32:	mov    eax,DWORD PTR [rip+0x173d0]        # 0x433308
  41bf38:	test   eax,eax
  41bf3a:	jne    0x41bf61
  41bf3c:	test   rbp,rbp
  41bf3f:	je     0x41bf61
  41bf41:	lea    rcx,[rip+0xf328]        # 0x42b270
  41bf48:	mov    DWORD PTR [rip+0x173b6],0x1        # 0x433308
  41bf52:	call   0x41c4d0
  41bf57:	test   rax,rax
  41bf5a:	je     0x41bf70
  41bf5c:	mov    eax,0x1
  41bf61:	add    rsp,0x20
  41bf65:	pop    rbx
  41bf66:	pop    rsi
  41bf67:	pop    rdi
  41bf68:	pop    rbp
  41bf69:	pop    r12
  41bf6b:	ret    
  41bf6c:	nop    DWORD PTR [rax+0x0]
  41bf70:	lea    rbx,[rip+0x174c9]        # 0x433440
  41bf77:	mov    ecx,0x30
  41bf7c:	lea    rdx,[rip+0x173bd]        # 0x433340
  41bf83:	lea    r12,[rip+0xfffffffffffffde6]        # 0x41bd70
  41bf8a:	xor    esi,esi
  41bf8c:	mov    rdi,rbx
  41bf8f:	rep stos QWORD PTR es:[rdi],rax
  41bf92:	mov    rdi,rdx
  41bf95:	sub    r12,rbp
  41bf98:	mov    cl,0x20
  41bf9a:	rep stos QWORD PTR es:[rdi],rax
  41bf9d:	mov    rdi,rdx
  41bfa0:	jmp    0x41bfd0
  41bfa2:	mov    BYTE PTR [rdi],0x9
  41bfa5:	mov    DWORD PTR [rdi+0x4],r12d
  41bfa9:	add    rsi,0x1
  41bfad:	mov    edx,DWORD PTR [rax+0xc]
  41bfb0:	add    rbx,0xc
  41bfb4:	mov    DWORD PTR [rbx-0xc],edx
  41bfb7:	add    edx,DWORD PTR [rax+0x8]
  41bfba:	mov    rax,rdi
  41bfbd:	sub    rax,rbp
  41bfc0:	add    rdi,0x8
  41bfc4:	mov    DWORD PTR [rbx-0x4],eax
  41bfc7:	mov    DWORD PTR [rbx-0x8],edx
  41bfca:	cmp    rsi,0x20
  41bfce:	je     0x41c005
  41bfd0:	mov    rcx,rsi
  41bfd3:	call   0x41c600
  41bfd8:	test   rax,rax
  41bfdb:	jne    0x41bfa2
  41bfdd:	test   rsi,rsi
  41bfe0:	je     0x41bf5c
  41bfe6:	mov    edx,esi
  41bfe8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bff0:	mov    r8,rbp
  41bff3:	lea    rcx,[rip+0x17446]        # 0x433440
  41bffa:	call   QWORD PTR [rip+0x18650]        # 0x434650
  41c000:	jmp    0x41bf5c
  41c005:	mov    edx,0x20
  41c00a:	jmp    0x41bff0
  41c00c:	nop    DWORD PTR [rax+0x0]
  41c010:	push   rbx
  41c011:	sub    rsp,0x20
  41c015:	mov    rdx,QWORD PTR [rcx]
  41c018:	mov    eax,DWORD PTR [rdx]
  41c01a:	mov    r8d,eax
  41c01d:	and    r8d,0x20ffffff
  41c024:	cmp    r8d,0x20474343
  41c02b:	je     0x41c130
  41c031:	cmp    eax,0xc0000091
  41c036:	mov    rbx,rcx
  41c039:	ja     0x41c0c0
  41c03f:	cmp    eax,0xc000008d
  41c044:	jae    0x41c0d7
  41c04a:	cmp    eax,0xc0000008
  41c04f:	je     0x41c083
  41c051:	ja     0x41c090
  41c053:	cmp    eax,0x80000002
  41c058:	je     0x41c083
  41c05a:	cmp    eax,0xc0000005
  41c05f:	jne    0x41c0a2
  41c061:	xor    edx,edx
  41c063:	mov    ecx,0xb
  41c068:	call   0x41db88
  41c06d:	cmp    rax,0x1
  41c071:	je     0x41c1a0
  41c077:	test   rax,rax
  41c07a:	je     0x41c0a2
  41c07c:	mov    ecx,0xb
  41c081:	call   rax
  41c083:	mov    eax,0xffffffff
  41c088:	add    rsp,0x20
  41c08c:	pop    rbx
  41c08d:	ret    
  41c08e:	xchg   ax,ax
  41c090:	cmp    eax,0xc000001d
  41c095:	je     0x41c156
  41c09b:	cmp    eax,0xc000008c
  41c0a0:	je     0x41c083
  41c0a2:	mov    rax,QWORD PTR [rip+0x17257]        # 0x433300
  41c0a9:	test   rax,rax
  41c0ac:	je     0x41c088
  41c0ae:	mov    rcx,rbx
  41c0b1:	add    rsp,0x20
  41c0b5:	pop    rbx
  41c0b6:	rex.W jmp rax
  41c0b9:	nop    DWORD PTR [rax+0x0]
  41c0c0:	cmp    eax,0xc0000094
  41c0c5:	je     0x41c102
  41c0c7:	ja     0x41c140
  41c0c9:	cmp    eax,0xc0000092
  41c0ce:	je     0x41c083
  41c0d0:	cmp    eax,0xc0000093
  41c0d5:	jne    0x41c0a2
  41c0d7:	xor    edx,edx
  41c0d9:	mov    ecx,0x8
  41c0de:	call   0x41db88
  41c0e3:	cmp    rax,0x1
  41c0e7:	jne    0x41c114
  41c0e9:	mov    edx,0x1
  41c0ee:	mov    ecx,0x8
  41c0f3:	call   0x41db88
  41c0f8:	call   0x41b860
  41c0fd:	jmp    0x41c083
  41c102:	xor    edx,edx
  41c104:	mov    ecx,0x8
  41c109:	call   0x41db88
  41c10e:	cmp    rax,0x1
  41c112:	je     0x41c182
  41c114:	test   rax,rax
  41c117:	je     0x41c0a2
  41c119:	mov    ecx,0x8
  41c11e:	call   rax
  41c120:	mov    eax,0xffffffff
  41c125:	jmp    0x41c088
  41c12a:	nop    WORD PTR [rax+rax*1+0x0]
  41c130:	test   BYTE PTR [rdx+0x4],0x1
  41c134:	jne    0x41c031
  41c13a:	jmp    0x41c083
  41c13f:	nop
  41c140:	cmp    eax,0xc0000095
  41c145:	je     0x41c083
  41c14b:	cmp    eax,0xc0000096
  41c150:	jne    0x41c0a2
  41c156:	xor    edx,edx
  41c158:	mov    ecx,0x4
  41c15d:	call   0x41db88
  41c162:	cmp    rax,0x1
  41c166:	je     0x41c1b4
  41c168:	test   rax,rax
  41c16b:	je     0x41c0a2
  41c171:	mov    ecx,0x4
  41c176:	call   rax
  41c178:	mov    eax,0xffffffff
  41c17d:	jmp    0x41c088
  41c182:	mov    edx,0x1
  41c187:	mov    ecx,0x8
  41c18c:	call   0x41db88
  41c191:	jmp    0x41c083
  41c196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c1a0:	mov    edx,0x1
  41c1a5:	mov    ecx,0xb
  41c1aa:	call   0x41db88
  41c1af:	jmp    0x41c083
  41c1b4:	mov    edx,0x1
  41c1b9:	mov    ecx,0x4
  41c1be:	call   0x41db88
  41c1c3:	jmp    0x41c083
  41c1c8:	nop
  41c1c9:	nop
  41c1ca:	nop
  41c1cb:	nop
  41c1cc:	nop
  41c1cd:	nop
  41c1ce:	nop
  41c1cf:	nop
  41c1d0:	push   rbp
  41c1d1:	push   rdi
  41c1d2:	push   rsi
  41c1d3:	push   rbx
  41c1d4:	sub    rsp,0x28
  41c1d8:	lea    rcx,[rip+0x17401]        # 0x4335e0
  41c1df:	call   QWORD PTR [rip+0x1840b]        # 0x4345f0
  41c1e5:	mov    rbx,QWORD PTR [rip+0x173d4]        # 0x4335c0
  41c1ec:	test   rbx,rbx
  41c1ef:	je     0x41c224
  41c1f1:	mov    rbp,QWORD PTR [rip+0x18490]        # 0x434688
  41c1f8:	mov    rdi,QWORD PTR [rip+0x18411]        # 0x434610
  41c1ff:	nop
  41c200:	mov    ecx,DWORD PTR [rbx]
  41c202:	call   rbp
  41c204:	mov    rsi,rax
  41c207:	call   rdi
  41c209:	test   eax,eax
  41c20b:	jne    0x41c21b
  41c20d:	test   rsi,rsi
  41c210:	je     0x41c21b
  41c212:	mov    rax,QWORD PTR [rbx+0x8]
  41c216:	mov    rcx,rsi
  41c219:	call   rax
  41c21b:	mov    rbx,QWORD PTR [rbx+0x10]
  41c21f:	test   rbx,rbx
  41c222:	jne    0x41c200
  41c224:	mov    rax,QWORD PTR [rip+0x18415]        # 0x434640
  41c22b:	lea    rcx,[rip+0x173ae]        # 0x4335e0
  41c232:	add    rsp,0x28
  41c236:	pop    rbx
  41c237:	pop    rsi
  41c238:	pop    rdi
  41c239:	pop    rbp
  41c23a:	rex.W jmp rax
  41c23d:	nop    DWORD PTR [rax]
  41c240:	push   rdi
  41c241:	push   rsi
  41c242:	push   rbx
  41c243:	sub    rsp,0x20
  41c247:	mov    eax,DWORD PTR [rip+0x1737b]        # 0x4335c8
  41c24d:	test   eax,eax
  41c24f:	jne    0x41c260
  41c251:	add    rsp,0x20
  41c255:	pop    rbx
  41c256:	pop    rsi
  41c257:	pop    rdi
  41c258:	ret    
  41c259:	nop    DWORD PTR [rax+0x0]
  41c260:	mov    rsi,rdx
  41c263:	mov    edi,ecx
  41c265:	mov    edx,0x18
  41c26a:	mov    ecx,0x1
  41c26f:	call   0x41dc58
  41c274:	test   rax,rax
  41c277:	mov    rbx,rax
  41c27a:	je     0x41c2b8
  41c27c:	mov    DWORD PTR [rax],edi
  41c27e:	mov    QWORD PTR [rax+0x8],rsi
  41c282:	lea    rcx,[rip+0x17357]        # 0x4335e0
  41c289:	call   QWORD PTR [rip+0x18361]        # 0x4345f0
  41c28f:	mov    rax,QWORD PTR [rip+0x1732a]        # 0x4335c0
  41c296:	lea    rcx,[rip+0x17343]        # 0x4335e0
  41c29d:	mov    QWORD PTR [rip+0x1731c],rbx        # 0x4335c0
  41c2a4:	mov    QWORD PTR [rbx+0x10],rax
  41c2a8:	call   QWORD PTR [rip+0x18392]        # 0x434640
  41c2ae:	xor    eax,eax
  41c2b0:	add    rsp,0x20
  41c2b4:	pop    rbx
  41c2b5:	pop    rsi
  41c2b6:	pop    rdi
  41c2b7:	ret    
  41c2b8:	mov    eax,0xffffffff
  41c2bd:	jmp    0x41c251
  41c2bf:	nop
  41c2c0:	push   rbx
  41c2c1:	sub    rsp,0x20
  41c2c5:	mov    eax,DWORD PTR [rip+0x172fd]        # 0x4335c8
  41c2cb:	test   eax,eax
  41c2cd:	jne    0x41c2e0
  41c2cf:	xor    eax,eax
  41c2d1:	add    rsp,0x20
  41c2d5:	pop    rbx
  41c2d6:	ret    
  41c2d7:	nop    WORD PTR [rax+rax*1+0x0]
  41c2e0:	mov    ebx,ecx
  41c2e2:	lea    rcx,[rip+0x172f7]        # 0x4335e0
  41c2e9:	call   QWORD PTR [rip+0x18301]        # 0x4345f0
  41c2ef:	mov    rdx,QWORD PTR [rip+0x172ca]        # 0x4335c0
  41c2f6:	test   rdx,rdx
  41c2f9:	je     0x41c317
  41c2fb:	mov    eax,DWORD PTR [rdx]
  41c2fd:	cmp    eax,ebx
  41c2ff:	jne    0x41c30e
  41c301:	jmp    0x41c34f
  41c303:	mov    r8d,DWORD PTR [rax]
  41c306:	cmp    r8d,ebx
  41c309:	je     0x41c330
  41c30b:	mov    rdx,rax
  41c30e:	mov    rax,QWORD PTR [rdx+0x10]
  41c312:	test   rax,rax
  41c315:	jne    0x41c303
  41c317:	lea    rcx,[rip+0x172c2]        # 0x4335e0
  41c31e:	call   QWORD PTR [rip+0x1831c]        # 0x434640
  41c324:	xor    eax,eax
  41c326:	add    rsp,0x20
  41c32a:	pop    rbx
  41c32b:	ret    
  41c32c:	nop    DWORD PTR [rax+0x0]
  41c330:	mov    rcx,rax
  41c333:	mov    rax,QWORD PTR [rax+0x10]
  41c337:	mov    QWORD PTR [rdx+0x10],rax
  41c33b:	call   0x41dc08
  41c340:	lea    rcx,[rip+0x17299]        # 0x4335e0
  41c347:	call   QWORD PTR [rip+0x182f3]        # 0x434640
  41c34d:	jmp    0x41c324
  41c34f:	mov    rax,QWORD PTR [rdx+0x10]
  41c353:	mov    rcx,rdx
  41c356:	mov    QWORD PTR [rip+0x17263],rax        # 0x4335c0
  41c35d:	jmp    0x41c33b
  41c35f:	nop
  41c360:	push   rbx
  41c361:	sub    rsp,0x20
  41c365:	cmp    edx,0x1
  41c368:	je     0x41c400
  41c36e:	jb     0x41c3a0
  41c370:	cmp    edx,0x2
  41c373:	je     0x41c390
  41c375:	cmp    edx,0x3
  41c378:	jne    0x41c395
  41c37a:	mov    eax,DWORD PTR [rip+0x17248]        # 0x4335c8
  41c380:	test   eax,eax
  41c382:	je     0x41c395
  41c384:	call   0x41c1d0
  41c389:	jmp    0x41c395
  41c38b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c390:	call   0x41b860
  41c395:	mov    eax,0x1
  41c39a:	add    rsp,0x20
  41c39e:	pop    rbx
  41c39f:	ret    
  41c3a0:	mov    eax,DWORD PTR [rip+0x17222]        # 0x4335c8
  41c3a6:	test   eax,eax
  41c3a8:	jne    0x41c430
  41c3ae:	mov    eax,DWORD PTR [rip+0x17214]        # 0x4335c8
  41c3b4:	cmp    eax,0x1
  41c3b7:	jne    0x41c395
  41c3b9:	mov    rcx,QWORD PTR [rip+0x17200]        # 0x4335c0
  41c3c0:	test   rcx,rcx
  41c3c3:	je     0x41c3d6
  41c3c5:	mov    rbx,QWORD PTR [rcx+0x10]
  41c3c9:	call   0x41dc08
  41c3ce:	test   rbx,rbx
  41c3d1:	mov    rcx,rbx
  41c3d4:	jne    0x41c3c5
  41c3d6:	lea    rcx,[rip+0x17203]        # 0x4335e0
  41c3dd:	mov    QWORD PTR [rip+0x171d8],0x0        # 0x4335c0
  41c3e8:	mov    DWORD PTR [rip+0x171d6],0x0        # 0x4335c8
  41c3f2:	call   QWORD PTR [rip+0x181f0]        # 0x4345e8
  41c3f8:	jmp    0x41c395
  41c3fa:	nop    WORD PTR [rax+rax*1+0x0]
  41c400:	mov    eax,DWORD PTR [rip+0x171c2]        # 0x4335c8
  41c406:	test   eax,eax
  41c408:	je     0x41c420
  41c40a:	mov    eax,0x1
  41c40f:	mov    DWORD PTR [rip+0x171af],0x1        # 0x4335c8
  41c419:	add    rsp,0x20
  41c41d:	pop    rbx
  41c41e:	ret    
  41c41f:	nop
  41c420:	lea    rcx,[rip+0x171b9]        # 0x4335e0
  41c427:	call   QWORD PTR [rip+0x1820b]        # 0x434638
  41c42d:	jmp    0x41c40a
  41c42f:	nop
  41c430:	call   0x41c1d0
  41c435:	jmp    0x41c3ae
  41c43a:	nop
  41c43b:	nop
  41c43c:	nop
  41c43d:	nop
  41c43e:	nop
  41c43f:	nop
  41c440:	movsxd rax,DWORD PTR [rcx+0x3c]
  41c444:	add    rcx,rax
  41c447:	xor    eax,eax
  41c449:	cmp    DWORD PTR [rcx],0x4550
  41c44f:	je     0x41c453
  41c451:	repz ret 
  41c453:	xor    eax,eax
  41c455:	cmp    WORD PTR [rcx+0x18],0x20b
  41c45b:	sete   al
  41c45e:	ret    
  41c45f:	nop
  41c460:	cmp    WORD PTR [rcx],0x5a4d
  41c465:	je     0x41c470
  41c467:	xor    eax,eax
  41c469:	ret    
  41c46a:	nop    WORD PTR [rax+rax*1+0x0]
  41c470:	jmp    0x41c440
  41c472:	nop    DWORD PTR [rax+0x0]
  41c476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c480:	movsxd rax,DWORD PTR [rcx+0x3c]
  41c484:	add    rcx,rax
  41c487:	movzx  eax,WORD PTR [rcx+0x14]
  41c48b:	lea    rax,[rcx+rax*1+0x18]
  41c490:	movzx  ecx,WORD PTR [rcx+0x6]
  41c494:	test   ecx,ecx
  41c496:	je     0x41c4c1
  41c498:	sub    ecx,0x1
  41c49b:	lea    rcx,[rcx+rcx*4]
  41c49f:	lea    r9,[rax+rcx*8+0x28]
  41c4a4:	mov    r8d,DWORD PTR [rax+0xc]
  41c4a8:	cmp    r8,rdx
  41c4ab:	mov    rcx,r8
  41c4ae:	ja     0x41c4b8
  41c4b0:	add    ecx,DWORD PTR [rax+0x8]
  41c4b3:	cmp    rdx,rcx
  41c4b6:	jb     0x41c4c3
  41c4b8:	add    rax,0x28
  41c4bc:	cmp    rax,r9
  41c4bf:	jne    0x41c4a4
  41c4c1:	xor    eax,eax
  41c4c3:	repz ret 
  41c4c5:	nop
  41c4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4d0:	push   rdi
  41c4d1:	push   rsi
  41c4d2:	push   rbx
  41c4d3:	sub    rsp,0x20
  41c4d7:	mov    rsi,rcx
  41c4da:	call   0x41db50
  41c4df:	cmp    rax,0x8
  41c4e3:	ja     0x41c500
  41c4e5:	mov    rbx,QWORD PTR [rip+0xf014]        # 0x42b500
  41c4ec:	xor    edi,edi
  41c4ee:	cmp    WORD PTR [rbx],0x5a4d
  41c4f3:	je     0x41c510
  41c4f5:	mov    rax,rdi
  41c4f8:	add    rsp,0x20
  41c4fc:	pop    rbx
  41c4fd:	pop    rsi
  41c4fe:	pop    rdi
  41c4ff:	ret    
  41c500:	xor    edi,edi
  41c502:	mov    rax,rdi
  41c505:	add    rsp,0x20
  41c509:	pop    rbx
  41c50a:	pop    rsi
  41c50b:	pop    rdi
  41c50c:	ret    
  41c50d:	nop    DWORD PTR [rax]
  41c510:	mov    rcx,rbx
  41c513:	call   0x41c440
  41c518:	test   eax,eax
  41c51a:	je     0x41c4f5
  41c51c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  41c520:	add    rdx,rbx
  41c523:	movzx  eax,WORD PTR [rdx+0x14]
  41c527:	lea    rbx,[rdx+rax*1+0x18]
  41c52c:	movzx  eax,WORD PTR [rdx+0x6]
  41c530:	test   eax,eax
  41c532:	je     0x41c4f5
  41c534:	sub    eax,0x1
  41c537:	lea    rax,[rax+rax*4]
  41c53b:	lea    rdi,[rbx+rax*8+0x28]
  41c540:	jmp    0x41c54b
  41c542:	add    rbx,0x28
  41c546:	cmp    rbx,rdi
  41c549:	je     0x41c500
  41c54b:	mov    r8d,0x8
  41c551:	mov    rdx,rsi
  41c554:	mov    rcx,rbx
  41c557:	call   0x41db40
  41c55c:	test   eax,eax
  41c55e:	jne    0x41c542
  41c560:	mov    rdi,rbx
  41c563:	mov    rax,rdi
  41c566:	add    rsp,0x20
  41c56a:	pop    rbx
  41c56b:	pop    rsi
  41c56c:	pop    rdi
  41c56d:	ret    
  41c56e:	xchg   ax,ax
  41c570:	push   rsi
  41c571:	push   rbx
  41c572:	sub    rsp,0x28
  41c576:	mov    rbx,QWORD PTR [rip+0xef83]        # 0x42b500
  41c57d:	cmp    WORD PTR [rbx],0x5a4d
  41c582:	je     0x41c590
  41c584:	xor    eax,eax
  41c586:	add    rsp,0x28
  41c58a:	pop    rbx
  41c58b:	pop    rsi
  41c58c:	ret    
  41c58d:	nop    DWORD PTR [rax]
  41c590:	mov    rsi,rcx
  41c593:	mov    rcx,rbx
  41c596:	call   0x41c440
  41c59b:	test   eax,eax
  41c59d:	je     0x41c584
  41c59f:	sub    rsi,rbx
  41c5a2:	mov    rcx,rbx
  41c5a5:	mov    rdx,rsi
  41c5a8:	add    rsp,0x28
  41c5ac:	pop    rbx
  41c5ad:	pop    rsi
  41c5ae:	jmp    0x41c480
  41c5b3:	nop    DWORD PTR [rax]
  41c5b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c5c0:	push   rbx
  41c5c1:	sub    rsp,0x20
  41c5c5:	mov    rbx,QWORD PTR [rip+0xef34]        # 0x42b500
  41c5cc:	xor    eax,eax
  41c5ce:	cmp    WORD PTR [rbx],0x5a4d
  41c5d3:	je     0x41c5e0
  41c5d5:	add    rsp,0x20
  41c5d9:	pop    rbx
  41c5da:	ret    
  41c5db:	nop    DWORD PTR [rax+rax*1+0x0]
  41c5e0:	mov    rcx,rbx
  41c5e3:	call   0x41c440
  41c5e8:	test   eax,eax
  41c5ea:	je     0x41c5d5
  41c5ec:	movsxd rax,DWORD PTR [rbx+0x3c]
  41c5f0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  41c5f5:	add    rsp,0x20
  41c5f9:	pop    rbx
  41c5fa:	ret    
  41c5fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c600:	push   rdi
  41c601:	push   rsi
  41c602:	push   rbx
  41c603:	sub    rsp,0x20
  41c607:	mov    rsi,QWORD PTR [rip+0xeef2]        # 0x42b500
  41c60e:	xor    edi,edi
  41c610:	mov    rbx,rcx
  41c613:	cmp    WORD PTR [rsi],0x5a4d
  41c618:	je     0x41c625
  41c61a:	mov    rax,rdi
  41c61d:	add    rsp,0x20
  41c621:	pop    rbx
  41c622:	pop    rsi
  41c623:	pop    rdi
  41c624:	ret    
  41c625:	mov    rcx,rsi
  41c628:	call   0x41c440
  41c62d:	test   eax,eax
  41c62f:	je     0x41c61a
  41c631:	movsxd rax,DWORD PTR [rsi+0x3c]
  41c635:	add    rsi,rax
  41c638:	movzx  eax,WORD PTR [rsi+0x14]
  41c63c:	lea    rdx,[rsi+rax*1+0x18]
  41c641:	movzx  eax,WORD PTR [rsi+0x6]
  41c645:	test   eax,eax
  41c647:	je     0x41c61a
  41c649:	sub    eax,0x1
  41c64c:	lea    rax,[rax+rax*4]
  41c650:	lea    rax,[rdx+rax*8+0x28]
  41c655:	test   BYTE PTR [rdx+0x27],0x20
  41c659:	je     0x41c664
  41c65b:	test   rbx,rbx
  41c65e:	je     0x41c680
  41c660:	sub    rbx,0x1
  41c664:	add    rdx,0x28
  41c668:	cmp    rdx,rax
  41c66b:	jne    0x41c655
  41c66d:	xor    edi,edi
  41c66f:	mov    rax,rdi
  41c672:	add    rsp,0x20
  41c676:	pop    rbx
  41c677:	pop    rsi
  41c678:	pop    rdi
  41c679:	ret    
  41c67a:	nop    WORD PTR [rax+rax*1+0x0]
  41c680:	mov    rdi,rdx
  41c683:	mov    rax,rdi
  41c686:	add    rsp,0x20
  41c68a:	pop    rbx
  41c68b:	pop    rsi
  41c68c:	pop    rdi
  41c68d:	ret    
  41c68e:	xchg   ax,ax
  41c690:	push   rsi
  41c691:	push   rbx
  41c692:	sub    rsp,0x28
  41c696:	mov    rsi,QWORD PTR [rip+0xee63]        # 0x42b500
  41c69d:	xor    ebx,ebx
  41c69f:	cmp    WORD PTR [rsi],0x5a4d
  41c6a4:	je     0x41c6b0
  41c6a6:	mov    rax,rbx
  41c6a9:	add    rsp,0x28
  41c6ad:	pop    rbx
  41c6ae:	pop    rsi
  41c6af:	ret    
  41c6b0:	mov    rcx,rsi
  41c6b3:	call   0x41c440
  41c6b8:	test   eax,eax
  41c6ba:	cmovne rbx,rsi
  41c6be:	mov    rax,rbx
  41c6c1:	add    rsp,0x28
  41c6c5:	pop    rbx
  41c6c6:	pop    rsi
  41c6c7:	ret    
  41c6c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c6d0:	push   rsi
  41c6d1:	push   rbx
  41c6d2:	sub    rsp,0x28
  41c6d6:	mov    rbx,QWORD PTR [rip+0xee23]        # 0x42b500
  41c6dd:	xor    eax,eax
  41c6df:	cmp    WORD PTR [rbx],0x5a4d
  41c6e4:	je     0x41c6f0
  41c6e6:	add    rsp,0x28
  41c6ea:	pop    rbx
  41c6eb:	pop    rsi
  41c6ec:	ret    
  41c6ed:	nop    DWORD PTR [rax]
  41c6f0:	mov    rsi,rcx
  41c6f3:	mov    rcx,rbx
  41c6f6:	call   0x41c440
  41c6fb:	test   eax,eax
  41c6fd:	je     0x41c6e6
  41c6ff:	sub    rsi,rbx
  41c702:	mov    rcx,rbx
  41c705:	mov    rdx,rsi
  41c708:	call   0x41c480
  41c70d:	test   rax,rax
  41c710:	je     0x41c721
  41c712:	mov    eax,DWORD PTR [rax+0x24]
  41c715:	not    eax
  41c717:	shr    eax,0x1f
  41c71a:	add    rsp,0x28
  41c71e:	pop    rbx
  41c71f:	pop    rsi
  41c720:	ret    
  41c721:	xor    eax,eax
  41c723:	jmp    0x41c6e6
  41c725:	nop
  41c726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c730:	push   rbp
  41c731:	push   rdi
  41c732:	push   rsi
  41c733:	push   rbx
  41c734:	sub    rsp,0x28
  41c738:	mov    rdi,QWORD PTR [rip+0xedc1]        # 0x42b500
  41c73f:	xor    ebp,ebp
  41c741:	mov    esi,ecx
  41c743:	cmp    WORD PTR [rdi],0x5a4d
  41c748:	je     0x41c760
  41c74a:	mov    rax,rbp
  41c74d:	add    rsp,0x28
  41c751:	pop    rbx
  41c752:	pop    rsi
  41c753:	pop    rdi
  41c754:	pop    rbp
  41c755:	ret    
  41c756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c760:	mov    rcx,rdi
  41c763:	call   0x41c440
  41c768:	test   eax,eax
  41c76a:	je     0x41c74a
  41c76c:	movsxd rax,DWORD PTR [rdi+0x3c]
  41c770:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  41c777:	test   edx,edx
  41c779:	je     0x41c74a
  41c77b:	mov    ebx,edx
  41c77d:	mov    rcx,rdi
  41c780:	mov    rdx,rbx
  41c783:	call   0x41c480
  41c788:	test   rax,rax
  41c78b:	je     0x41c74a
  41c78d:	add    rbx,rdi
  41c790:	mov    rdx,rbx
  41c793:	jne    0x41c7a7
  41c795:	jmp    0x41c74a
  41c797:	nop    WORD PTR [rax+rax*1+0x0]
  41c7a0:	sub    esi,0x1
  41c7a3:	add    rdx,0x14
  41c7a7:	mov    ecx,DWORD PTR [rdx+0x4]
  41c7aa:	test   ecx,ecx
  41c7ac:	jne    0x41c7b5
  41c7ae:	mov    eax,DWORD PTR [rdx+0xc]
  41c7b1:	test   eax,eax
  41c7b3:	je     0x41c7d0
  41c7b5:	test   esi,esi
  41c7b7:	jg     0x41c7a0
  41c7b9:	mov    ebp,DWORD PTR [rdx+0xc]
  41c7bc:	add    rbp,rdi
  41c7bf:	mov    rax,rbp
  41c7c2:	add    rsp,0x28
  41c7c6:	pop    rbx
  41c7c7:	pop    rsi
  41c7c8:	pop    rdi
  41c7c9:	pop    rbp
  41c7ca:	ret    
  41c7cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c7d0:	xor    ebp,ebp
  41c7d2:	mov    rax,rbp
  41c7d5:	add    rsp,0x28
  41c7d9:	pop    rbx
  41c7da:	pop    rsi
  41c7db:	pop    rdi
  41c7dc:	pop    rbp
  41c7dd:	ret    
  41c7de:	nop
  41c7df:	nop
  41c7e0:	push   rcx
  41c7e1:	push   rax
  41c7e2:	cmp    rax,0x1000
  41c7e8:	lea    rcx,[rsp+0x18]
  41c7ed:	jb     0x41c808
  41c7ef:	sub    rcx,0x1000
  41c7f6:	or     QWORD PTR [rcx],0x0
  41c7fa:	sub    rax,0x1000
  41c800:	cmp    rax,0x1000
  41c806:	ja     0x41c7ef
  41c808:	sub    rcx,rax
  41c80b:	or     QWORD PTR [rcx],0x0
  41c80f:	pop    rax
  41c810:	pop    rcx
  41c811:	ret    
  41c812:	nop
  41c813:	nop
  41c814:	nop
  41c815:	nop
  41c816:	nop
  41c817:	nop
  41c818:	nop
  41c819:	nop
  41c81a:	nop
  41c81b:	nop
  41c81c:	nop
  41c81d:	nop
  41c81e:	nop
  41c81f:	nop
  41c820:	push   r13
  41c822:	push   r12
  41c824:	push   rbp
  41c825:	push   rdi
  41c826:	push   rsi
  41c827:	push   rbx
  41c828:	mov    r12d,edx
  41c82b:	mov    ebp,r8d
  41c82e:	mov    edi,edx
  41c830:	sub    r12d,ecx
  41c833:	sub    ebp,edx
  41c835:	mov    eax,r12d
  41c838:	cdq    
  41c839:	idiv   ebp
  41c83b:	test   edx,edx
  41c83d:	mov    r13d,edx
  41c840:	je     0x41c8c5
  41c846:	mov    eax,ebp
  41c848:	jmp    0x41c853
  41c84a:	nop    WORD PTR [rax+rax*1+0x0]
  41c850:	mov    r13d,edx
  41c853:	cdq    
  41c854:	idiv   r13d
  41c857:	mov    eax,r13d
  41c85a:	test   edx,edx
  41c85c:	jne    0x41c850
  41c85e:	mov    eax,r8d
  41c861:	sub    eax,ecx
  41c863:	cdq    
  41c864:	idiv   r13d
  41c867:	test   r13d,r13d
  41c86a:	jle    0x41c8bc
  41c86c:	movsxd rdx,edi
  41c86f:	xor    esi,esi
  41c871:	lea    rdx,[r9+rdx*8]
  41c875:	test   eax,eax
  41c877:	lea    ecx,[rdi+rsi*1]
  41c87a:	jle    0x41c8b3
  41c87c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  41c880:	xor    r10d,r10d
  41c883:	mov    r11d,ecx
  41c886:	lea    r8d,[rcx+rbp*1]
  41c88a:	sub    r11d,r12d
  41c88d:	cmp    edi,ecx
  41c88f:	mov    ecx,r11d
  41c892:	cmovg  ecx,r8d
  41c896:	add    r10d,0x1
  41c89a:	movsxd r11,ecx
  41c89d:	cmp    r10d,eax
  41c8a0:	lea    r8,[r9+r11*8]
  41c8a4:	mov    r11,QWORD PTR [r8]
  41c8a7:	mov    QWORD PTR [r8],rbx
  41c8aa:	mov    QWORD PTR [rdx+rsi*8],r11
  41c8ae:	mov    rbx,r11
  41c8b1:	jne    0x41c883
  41c8b3:	add    rsi,0x1
  41c8b7:	cmp    r13d,esi
  41c8ba:	jg     0x41c875
  41c8bc:	pop    rbx
  41c8bd:	pop    rsi
  41c8be:	pop    rdi
  41c8bf:	pop    rbp
  41c8c0:	pop    r12
  41c8c2:	pop    r13
  41c8c4:	ret    
  41c8c5:	mov    r13d,ebp
  41c8c8:	jmp    0x41c85e
  41c8ca:	nop    WORD PTR [rax+rax*1+0x0]
  41c8d0:	push   rdi
  41c8d1:	push   rsi
  41c8d2:	push   rbx
  41c8d3:	sub    rsp,0x30
  41c8d7:	mov    rax,QWORD PTR [rip+0xec32]        # 0x42b510
  41c8de:	mov    QWORD PTR [rsp+0x58],rdx
  41c8e3:	mov    QWORD PTR [rsp+0x60],r8
  41c8e8:	lea    rsi,[rsp+0x58]
  41c8ed:	mov    QWORD PTR [rsp+0x68],r9
  41c8f2:	mov    rbx,rcx
  41c8f5:	mov    rax,QWORD PTR [rax]
  41c8f8:	mov    QWORD PTR [rsp+0x28],rsi
  41c8fd:	mov    rax,QWORD PTR [rax]
  41c900:	mov    rdi,QWORD PTR [rax]
  41c903:	call   0x41dce0
  41c908:	lea    rdx,[rip+0xe971]        # 0x42b280
  41c90f:	lea    rcx,[rax+0x60]
  41c913:	mov    r8,rdi
  41c916:	call   0x41dc28
  41c91b:	test   rbx,rbx
  41c91e:	je     0x41c934
  41c920:	call   0x41dce0
  41c925:	lea    rcx,[rax+0x60]
  41c929:	mov    r8,rsi
  41c92c:	mov    rdx,rbx
  41c92f:	call   0x41db20
  41c934:	call   0x41dce0
  41c939:	lea    rdx,[rax+0x60]
  41c93d:	mov    ecx,0xa
  41c942:	call   0x41dc20
  41c947:	nop
  41c948:	add    rsp,0x30
  41c94c:	pop    rbx
  41c94d:	pop    rsi
  41c94e:	pop    rdi
  41c94f:	ret    
  41c950:	push   r15
  41c952:	push   r14
  41c954:	push   r13
  41c956:	push   r12
  41c958:	push   rbp
  41c959:	push   rdi
  41c95a:	push   rsi
  41c95b:	push   rbx
  41c95c:	sub    rsp,0x48
  41c960:	mov    eax,DWORD PTR [rip+0x2ff6]        # 0x41f95c
  41c966:	mov    rbp,QWORD PTR [rip+0x2fe3]        # 0x41f950
  41c96d:	mov    QWORD PTR [rsp+0x90],rcx
  41c975:	mov    QWORD PTR [rsp+0x98],rdx
  41c97d:	mov    edx,0x3d
  41c982:	mov    r14,r8
  41c985:	mov    QWORD PTR [rsp+0xa8],r9
  41c98d:	mov    r13d,DWORD PTR [rsp+0xb0]
  41c995:	mov    DWORD PTR [rsp+0x38],eax
  41c999:	mov    rcx,rbp
  41c99c:	add    eax,0x1
  41c99f:	mov    DWORD PTR [rsp+0x3c],eax
  41c9a3:	mov    DWORD PTR [rip+0x2fb3],eax        # 0x41f95c
  41c9a9:	call   0x41db68
  41c9ae:	test   rax,rax
  41c9b1:	mov    QWORD PTR [rsp+0x30],rax
  41c9b6:	je     0x41cb94
  41c9bc:	mov    rdi,rax
  41c9bf:	add    rax,0x1
  41c9c3:	sub    rdi,rbp
  41c9c6:	mov    QWORD PTR [rsp+0x30],rax
  41c9cb:	mov    r15,QWORD PTR [r14]
  41c9ce:	test   r15,r15
  41c9d1:	je     0x41cbdb
  41c9d7:	lea    rbx,[r14+0x20]
  41c9db:	mov    r12d,0xffffffff
  41c9e1:	mov    DWORD PTR [rsp+0x2c],0x0
  41c9e9:	xor    esi,esi
  41c9eb:	jmp    0x41ca05
  41c9ed:	nop    DWORD PTR [rax]
  41c9f0:	test   r13d,r13d
  41c9f3:	je     0x41ca2e
  41c9f5:	add    rbx,0x20
  41c9f9:	mov    r15,QWORD PTR [rbx-0x20]
  41c9fd:	add    esi,0x1
  41ca00:	test   r15,r15
  41ca03:	je     0x41ca70
  41ca05:	mov    r8,rdi
  41ca08:	mov    rdx,r15
  41ca0b:	mov    rcx,rbp
  41ca0e:	call   0x41db40
  41ca13:	test   eax,eax
  41ca15:	jne    0x41c9f5
  41ca17:	mov    rcx,r15
  41ca1a:	call   0x41db50
  41ca1f:	cmp    rax,rdi
  41ca22:	je     0x41cb1d
  41ca28:	cmp    rdi,0x1
  41ca2c:	je     0x41c9f0
  41ca2e:	cmp    r12d,0xffffffff
  41ca32:	je     0x41cad0
  41ca38:	movsxd rax,r12d
  41ca3b:	shl    rax,0x5
  41ca3f:	add    rax,r14
  41ca42:	mov    edx,DWORD PTR [rax+0x8]
  41ca45:	cmp    DWORD PTR [rbx-0x18],edx
  41ca48:	je     0x41cae0
  41ca4e:	add    rbx,0x20
  41ca52:	mov    r15,QWORD PTR [rbx-0x20]
  41ca56:	add    esi,0x1
  41ca59:	mov    DWORD PTR [rsp+0x2c],0x1
  41ca61:	test   r15,r15
  41ca64:	jne    0x41ca05
  41ca66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca70:	mov    r9d,DWORD PTR [rsp+0x2c]
  41ca75:	test   r9d,r9d
  41ca78:	je     0x41cb10
  41ca7e:	mov    r8d,DWORD PTR [rip+0x2edb]        # 0x41f960
  41ca85:	test   r8d,r8d
  41ca88:	je     0x41caa8
  41ca8a:	mov    rax,QWORD PTR [rsp+0x98]
  41ca92:	cmp    BYTE PTR [rax],0x3a
  41ca95:	je     0x41caa8
  41ca97:	lea    rcx,[rip+0xe872]        # 0x42b310
  41ca9e:	mov    r8,rbp
  41caa1:	mov    edx,edi
  41caa3:	call   0x41c8d0
  41caa8:	mov    DWORD PTR [rip+0x2ea6],0x0        # 0x41f958
  41cab2:	mov    eax,0x3f
  41cab7:	add    rsp,0x48
  41cabb:	pop    rbx
  41cabc:	pop    rsi
  41cabd:	pop    rdi
  41cabe:	pop    rbp
  41cabf:	pop    r12
  41cac1:	pop    r13
  41cac3:	pop    r14
  41cac5:	pop    r15
  41cac7:	ret    
  41cac8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cad0:	mov    r12d,esi
  41cad3:	jmp    0x41c9f5
  41cad8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cae0:	mov    rdx,QWORD PTR [rax+0x10]
  41cae4:	cmp    QWORD PTR [rbx-0x10],rdx
  41cae8:	jne    0x41ca4e
  41caee:	mov    eax,DWORD PTR [rax+0x18]
  41caf1:	cmp    DWORD PTR [rbx-0x8],eax
  41caf4:	mov    eax,0x1
  41caf9:	cmove  eax,DWORD PTR [rsp+0x2c]
  41cafe:	mov    DWORD PTR [rsp+0x2c],eax
  41cb02:	jmp    0x41c9f5
  41cb07:	nop    WORD PTR [rax+rax*1+0x0]
  41cb10:	cmp    r12d,0xffffffff
  41cb14:	je     0x41cbdb
  41cb1a:	mov    esi,r12d
  41cb1d:	movsxd rax,esi
  41cb20:	shl    rax,0x5
  41cb24:	add    r14,rax
  41cb27:	cmp    QWORD PTR [rsp+0x30],0x0
  41cb2d:	mov    eax,DWORD PTR [r14+0x8]
  41cb31:	setne  cl
  41cb34:	je     0x41cba4
  41cb36:	test   eax,eax
  41cb38:	jne    0x41cba4
  41cb3a:	mov    ecx,DWORD PTR [rip+0x2e20]        # 0x41f960
  41cb40:	test   ecx,ecx
  41cb42:	jne    0x41cb74
  41cb44:	cmp    QWORD PTR [r14+0x10],0x0
  41cb49:	je     0x41cca4
  41cb4f:	mov    DWORD PTR [rip+0x2dff],0x0        # 0x41f958
  41cb59:	mov    rax,QWORD PTR [rsp+0x98]
  41cb61:	cmp    BYTE PTR [rax],0x3a
  41cb64:	je     0x41cc91
  41cb6a:	mov    eax,0x3f
  41cb6f:	jmp    0x41cab7
  41cb74:	mov    rax,QWORD PTR [rsp+0x98]
  41cb7c:	cmp    BYTE PTR [rax],0x3a
  41cb7f:	je     0x41cb44
  41cb81:	lea    rcx,[rip+0xe758]        # 0x42b2e0
  41cb88:	mov    r8,rbp
  41cb8b:	mov    edx,edi
  41cb8d:	call   0x41c8d0
  41cb92:	jmp    0x41cb44
  41cb94:	mov    rcx,rbp
  41cb97:	call   0x41db50
  41cb9c:	mov    rdi,rax
  41cb9f:	jmp    0x41c9cb
  41cba4:	lea    edx,[rax-0x1]
  41cba7:	cmp    edx,0x1
  41cbaa:	jbe    0x41cc17
  41cbac:	cmp    QWORD PTR [rsp+0xa8],0x0
  41cbb5:	je     0x41cbc1
  41cbb7:	mov    rax,QWORD PTR [rsp+0xa8]
  41cbbf:	mov    DWORD PTR [rax],esi
  41cbc1:	mov    rax,QWORD PTR [r14+0x10]
  41cbc5:	test   rax,rax
  41cbc8:	je     0x41cc9b
  41cbce:	mov    edx,DWORD PTR [r14+0x18]
  41cbd2:	mov    DWORD PTR [rax],edx
  41cbd4:	xor    eax,eax
  41cbd6:	jmp    0x41cab7
  41cbdb:	test   r13d,r13d
  41cbde:	jne    0x41ccf2
  41cbe4:	mov    eax,DWORD PTR [rip+0x2d76]        # 0x41f960
  41cbea:	test   eax,eax
  41cbec:	je     0x41caa8
  41cbf2:	mov    rax,QWORD PTR [rsp+0x98]
  41cbfa:	cmp    BYTE PTR [rax],0x3a
  41cbfd:	je     0x41caa8
  41cc03:	lea    rcx,[rip+0xe696]        # 0x42b2a0
  41cc0a:	mov    rdx,rbp
  41cc0d:	call   0x41c8d0
  41cc12:	jmp    0x41caa8
  41cc17:	test   cl,cl
  41cc19:	je     0x41ccb3
  41cc1f:	mov    rdx,QWORD PTR [rsp+0x30]
  41cc24:	cmp    eax,0x1
  41cc27:	mov    QWORD PTR [rip+0x16d82],rdx        # 0x4339b0
  41cc2e:	jne    0x41cbac
  41cc34:	mov    r15,QWORD PTR [rsp+0x30]
  41cc39:	test   r15,r15
  41cc3c:	jne    0x41cbac
  41cc42:	mov    edx,DWORD PTR [rip+0x2d18]        # 0x41f960
  41cc48:	test   edx,edx
  41cc4a:	je     0x41cc68
  41cc4c:	mov    rax,QWORD PTR [rsp+0x98]
  41cc54:	cmp    BYTE PTR [rax],0x3a
  41cc57:	je     0x41cc68
  41cc59:	lea    rcx,[rip+0xe6e0]        # 0x42b340
  41cc60:	mov    rdx,rbp
  41cc63:	call   0x41c8d0
  41cc68:	cmp    QWORD PTR [r14+0x10],0x0
  41cc6d:	je     0x41cce6
  41cc6f:	mov    DWORD PTR [rip+0x2cdf],0x0        # 0x41f958
  41cc79:	mov    rax,QWORD PTR [rsp+0x98]
  41cc81:	sub    DWORD PTR [rip+0x2cd4],0x1        # 0x41f95c
  41cc88:	cmp    BYTE PTR [rax],0x3a
  41cc8b:	jne    0x41cb6a
  41cc91:	mov    eax,0x3a
  41cc96:	jmp    0x41cab7
  41cc9b:	mov    eax,DWORD PTR [r14+0x18]
  41cc9f:	jmp    0x41cab7
  41cca4:	mov    eax,DWORD PTR [r14+0x18]
  41cca8:	mov    DWORD PTR [rip+0x2caa],eax        # 0x41f958
  41ccae:	jmp    0x41cb59
  41ccb3:	cmp    eax,0x1
  41ccb6:	jne    0x41cbac
  41ccbc:	mov    eax,DWORD PTR [rsp+0x38]
  41ccc0:	mov    rdx,QWORD PTR [rsp+0x90]
  41ccc8:	add    eax,0x2
  41cccb:	mov    DWORD PTR [rip+0x2c8b],eax        # 0x41f95c
  41ccd1:	movsxd rax,DWORD PTR [rsp+0x3c]
  41ccd6:	mov    r15,QWORD PTR [rdx+rax*8]
  41ccda:	mov    QWORD PTR [rip+0x16ccf],r15        # 0x4339b0
  41cce1:	jmp    0x41cc39
  41cce6:	mov    eax,DWORD PTR [r14+0x18]
  41ccea:	mov    DWORD PTR [rip+0x2c68],eax        # 0x41f958
  41ccf0:	jmp    0x41cc79
  41ccf2:	mov    eax,DWORD PTR [rsp+0x38]
  41ccf6:	mov    DWORD PTR [rip+0x2c60],eax        # 0x41f95c
  41ccfc:	mov    eax,0xffffffff
  41cd01:	jmp    0x41cab7
  41cd06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd10:	push   r15
  41cd12:	push   r14
  41cd14:	push   r13
  41cd16:	push   r12
  41cd18:	push   rbp
  41cd19:	push   rdi
  41cd1a:	push   rsi
  41cd1b:	push   rbx
  41cd1c:	sub    rsp,0x38
  41cd20:	test   r8,r8
  41cd23:	mov    edi,ecx
  41cd25:	mov    r15,rdx
  41cd28:	mov    QWORD PTR [rsp+0x90],r8
  41cd30:	mov    QWORD PTR [rsp+0x98],r9
  41cd38:	je     0x41d00e
  41cd3e:	mov    r9d,DWORD PTR [rip+0x2c17]        # 0x41f95c
  41cd45:	test   r9d,r9d
  41cd48:	je     0x41cfa0
  41cd4e:	cmp    DWORD PTR [rip+0x2beb],0xffffffff        # 0x41f940
  41cd55:	je     0x41cf14
  41cd5b:	mov    edx,DWORD PTR [rip+0x16c57]        # 0x4339b8
  41cd61:	test   edx,edx
  41cd63:	jne    0x41cf14
  41cd69:	mov    rax,QWORD PTR [rsp+0x90]
  41cd71:	movzx  eax,BYTE PTR [rax]
  41cd74:	cmp    al,0x2d
  41cd76:	je     0x41cf48
  41cd7c:	cmp    al,0x2b
  41cd7e:	je     0x41d024
  41cd84:	mov    r8d,DWORD PTR [rip+0x2bb5]        # 0x41f940
  41cd8b:	test   r8d,r8d
  41cd8e:	jne    0x41d024
  41cd94:	sub    eax,0x2b
  41cd97:	test   al,0xfd
  41cd99:	je     0x41cf50
  41cd9f:	test   edx,edx
  41cda1:	mov    QWORD PTR [rip+0x16c04],0x0        # 0x4339b0
  41cdac:	jne    0x41cf80
  41cdb2:	mov    r14d,DWORD PTR [rsp+0xa8]
  41cdba:	mov    ebp,DWORD PTR [rsp+0xa8]
  41cdc1:	and    r14d,0x2
  41cdc5:	and    ebp,0x1
  41cdc8:	jmp    0x41ce4e
  41cdcd:	nop    DWORD PTR [rax]
  41cdd0:	lea    rax,[rip+0xe4be]        # 0x42b295
  41cdd7:	test   r14d,r14d
  41cdda:	mov    edx,r14d
  41cddd:	mov    QWORD PTR [rip+0x2b6c],rax        # 0x41f950
  41cde4:	jne    0x41d0f0
  41cdea:	test   ebp,ebp
  41cdec:	je     0x41d00e
  41cdf2:	mov    r12d,DWORD PTR [rip+0x2b4f]        # 0x41f948
  41cdf9:	cmp    r12d,0xffffffff
  41cdfd:	je     0x41cf70
  41ce03:	mov    r13d,DWORD PTR [rip+0x2b3a]        # 0x41f944
  41ce0a:	cmp    r13d,0xffffffff
  41ce0e:	je     0x41ce45
  41ce10:	mov    edx,r13d
  41ce13:	mov    r9,r15
  41ce16:	mov    r8d,ebx
  41ce19:	mov    ecx,r12d
  41ce1c:	call   0x41c820
  41ce21:	mov    esi,DWORD PTR [rip+0x2b35]        # 0x41f95c
  41ce27:	mov    eax,r12d
  41ce2a:	mov    edx,DWORD PTR [rip+0x16b88]        # 0x4339b8
  41ce30:	sub    eax,r13d
  41ce33:	mov    DWORD PTR [rip+0x2b07],0xffffffff        # 0x41f944
  41ce3d:	add    eax,esi
  41ce3f:	mov    DWORD PTR [rip+0x2b03],eax        # 0x41f948
  41ce45:	add    esi,0x1
  41ce48:	mov    DWORD PTR [rip+0x2b0e],esi        # 0x41f95c
  41ce4e:	test   edx,edx
  41ce50:	jne    0x41ce64
  41ce52:	mov    rsi,QWORD PTR [rip+0x2af7]        # 0x41f950
  41ce59:	movzx  eax,BYTE PTR [rsi]
  41ce5c:	test   al,al
  41ce5e:	jne    0x41d05e
  41ce64:	movsxd rbx,DWORD PTR [rip+0x2af1]        # 0x41f95c
  41ce6b:	mov    DWORD PTR [rip+0x16b43],0x0        # 0x4339b8
  41ce75:	cmp    ebx,edi
  41ce77:	mov    esi,ebx
  41ce79:	jge    0x41cfc0
  41ce7f:	movsxd rax,ebx
  41ce82:	mov    r13,QWORD PTR [r15+rax*8]
  41ce86:	cmp    BYTE PTR [r13+0x0],0x2d
  41ce8b:	mov    QWORD PTR [rip+0x2abe],r13        # 0x41f950
  41ce92:	jne    0x41cdd0
  41ce98:	movzx  eax,BYTE PTR [r13+0x1]
  41ce9d:	test   al,al
  41ce9f:	jne    0x41d031
  41cea5:	mov    rcx,QWORD PTR [rsp+0x90]
  41cead:	mov    edx,0x2d
  41ceb2:	call   0x41db68
  41ceb7:	test   rax,rax
  41ceba:	je     0x41cdd0
  41cec0:	cmp    DWORD PTR [rip+0x2a81],0xffffffff        # 0x41f948
  41cec7:	mov    rsi,r13
  41ceca:	je     0x41cee4
  41cecc:	cmp    DWORD PTR [rip+0x2a71],0xffffffff        # 0x41f944
  41ced3:	mov    eax,0x2d
  41ced8:	jne    0x41d05e
  41cede:	mov    DWORD PTR [rip+0x2a60],ebx        # 0x41f944
  41cee4:	cmp    QWORD PTR [rsp+0x98],0x0
  41ceed:	je     0x41d2dc
  41cef3:	cmp    rsi,QWORD PTR [r15+rbx*8]
  41cef7:	mov    eax,0x2d
  41cefc:	je     0x41d12e
  41cf02:	add    rsi,0x1
  41cf06:	xor    edx,edx
  41cf08:	mov    QWORD PTR [rip+0x2a41],rsi        # 0x41f950
  41cf0f:	jmp    0x41d0b2
  41cf14:	lea    rcx,[rip+0xe36a]        # 0x42b285
  41cf1b:	call   0x41dbe8
  41cf20:	test   rax,rax
  41cf23:	mov    edx,DWORD PTR [rip+0x16a8f]        # 0x4339b8
  41cf29:	setne  al
  41cf2c:	movzx  eax,al
  41cf2f:	mov    DWORD PTR [rip+0x2a0b],eax        # 0x41f940
  41cf35:	mov    rax,QWORD PTR [rsp+0x90]
  41cf3d:	movzx  eax,BYTE PTR [rax]
  41cf40:	cmp    al,0x2d
  41cf42:	jne    0x41cd7c
  41cf48:	or     DWORD PTR [rsp+0xa8],0x2
  41cf50:	add    QWORD PTR [rsp+0x90],0x1
  41cf59:	test   edx,edx
  41cf5b:	mov    QWORD PTR [rip+0x16a4a],0x0        # 0x4339b0
  41cf66:	je     0x41cdb2
  41cf6c:	jmp    0x41cf80
  41cf6e:	xchg   ax,ax
  41cf70:	mov    DWORD PTR [rip+0x29d2],ebx        # 0x41f948
  41cf76:	jmp    0x41ce45
  41cf7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cf80:	mov    DWORD PTR [rip+0x29ba],0xffffffff        # 0x41f944
  41cf8a:	mov    DWORD PTR [rip+0x29b4],0xffffffff        # 0x41f948
  41cf94:	jmp    0x41cdb2
  41cf99:	nop    DWORD PTR [rax+0x0]
  41cfa0:	mov    DWORD PTR [rip+0x16a0e],0x1        # 0x4339b8
  41cfaa:	mov    DWORD PTR [rip+0x29a8],0x1        # 0x41f95c
  41cfb4:	jmp    0x41cd4e
  41cfb9:	nop    DWORD PTR [rax+0x0]
  41cfc0:	mov    esi,DWORD PTR [rip+0x297e]        # 0x41f944
  41cfc6:	lea    rax,[rip+0xe2c8]        # 0x42b295
  41cfcd:	mov    QWORD PTR [rip+0x297c],rax        # 0x41f950
  41cfd4:	cmp    esi,0xffffffff
  41cfd7:	je     0x41d10a
  41cfdd:	mov    edi,DWORD PTR [rip+0x2965]        # 0x41f948
  41cfe3:	mov    r9,r15
  41cfe6:	mov    r8d,ebx
  41cfe9:	mov    edx,esi
  41cfeb:	mov    ecx,edi
  41cfed:	sub    edi,esi
  41cfef:	call   0x41c820
  41cff4:	add    DWORD PTR [rip+0x2962],edi        # 0x41f95c
  41cffa:	mov    DWORD PTR [rip+0x2940],0xffffffff        # 0x41f944
  41d004:	mov    DWORD PTR [rip+0x293a],0xffffffff        # 0x41f948
  41d00e:	mov    eax,0xffffffff
  41d013:	add    rsp,0x38
  41d017:	pop    rbx
  41d018:	pop    rsi
  41d019:	pop    rdi
  41d01a:	pop    rbp
  41d01b:	pop    r12
  41d01d:	pop    r13
  41d01f:	pop    r14
  41d021:	pop    r15
  41d023:	ret    
  41d024:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  41d02c:	jmp    0x41cd94
  41d031:	mov    ebp,DWORD PTR [rip+0x2911]        # 0x41f948
  41d037:	cmp    ebp,0xffffffff
  41d03a:	je     0x41d04b
  41d03c:	cmp    DWORD PTR [rip+0x2901],0xffffffff        # 0x41f944
  41d043:	jne    0x41d04b
  41d045:	mov    DWORD PTR [rip+0x28f9],ebx        # 0x41f944
  41d04b:	lea    rsi,[r13+0x1]
  41d04f:	cmp    al,0x2d
  41d051:	mov    QWORD PTR [rip+0x28f8],rsi        # 0x41f950
  41d058:	je     0x41d20f
  41d05e:	cmp    QWORD PTR [rsp+0x98],0x0
  41d067:	je     0x41d12e
  41d06d:	movsxd rdx,DWORD PTR [rip+0x28e8]        # 0x41f95c
  41d074:	cmp    rsi,QWORD PTR [r15+rdx*8]
  41d078:	je     0x41d12e
  41d07e:	cmp    al,0x2d
  41d080:	je     0x41cf02
  41d086:	test   BYTE PTR [rsp+0xa8],0x4
  41d08e:	je     0x41d12e
  41d094:	xor    edx,edx
  41d096:	cmp    al,0x3a
  41d098:	je     0x41d0b2
  41d09a:	mov    rcx,QWORD PTR [rsp+0x90]
  41d0a2:	movsx  edx,al
  41d0a5:	call   0x41db68
  41d0aa:	xor    edx,edx
  41d0ac:	test   rax,rax
  41d0af:	setne  dl
  41d0b2:	mov    DWORD PTR [rsp+0x20],edx
  41d0b6:	mov    r9,QWORD PTR [rsp+0xa0]
  41d0be:	mov    rcx,r15
  41d0c1:	mov    r8,QWORD PTR [rsp+0x98]
  41d0c9:	mov    rdx,QWORD PTR [rsp+0x90]
  41d0d1:	call   0x41c950
  41d0d6:	cmp    eax,0xffffffff
  41d0d9:	je     0x41d124
  41d0db:	lea    rcx,[rip+0xe1b3]        # 0x42b295
  41d0e2:	mov    QWORD PTR [rip+0x2867],rcx        # 0x41f950
  41d0e9:	jmp    0x41d013
  41d0ee:	xchg   ax,ax
  41d0f0:	add    ebx,0x1
  41d0f3:	mov    QWORD PTR [rip+0x168b6],r13        # 0x4339b0
  41d0fa:	mov    eax,0x1
  41d0ff:	mov    DWORD PTR [rip+0x2857],ebx        # 0x41f95c
  41d105:	jmp    0x41d013
  41d10a:	mov    eax,DWORD PTR [rip+0x2838]        # 0x41f948
  41d110:	cmp    eax,0xffffffff
  41d113:	je     0x41cffa
  41d119:	mov    DWORD PTR [rip+0x283d],eax        # 0x41f95c
  41d11f:	jmp    0x41cffa
  41d124:	mov    rsi,QWORD PTR [rip+0x2825]        # 0x41f950
  41d12b:	movzx  eax,BYTE PTR [rsi]
  41d12e:	lea    rbp,[rsi+0x1]
  41d132:	movsx  ebx,al
  41d135:	cmp    ebx,0x3a
  41d138:	mov    QWORD PTR [rip+0x2811],rbp        # 0x41f950
  41d13f:	je     0x41d1a4
  41d141:	cmp    ebx,0x2d
  41d144:	je     0x41d2e7
  41d14a:	mov    rcx,QWORD PTR [rsp+0x90]
  41d152:	mov    edx,ebx
  41d154:	call   0x41db68
  41d159:	test   rax,rax
  41d15c:	je     0x41d1a4
  41d15e:	cmp    ebx,0x57
  41d161:	jne    0x41d206
  41d167:	cmp    QWORD PTR [rsp+0x98],0x0
  41d170:	je     0x41d206
  41d176:	movzx  edx,BYTE PTR [rax+0x1]
  41d17a:	cmp    dl,0x3b
  41d17d:	je     0x41d260
  41d183:	cmp    dl,0x3a
  41d186:	je     0x41d2fb
  41d18c:	cmp    BYTE PTR [rsi+0x1],0x0
  41d190:	mov    eax,ebx
  41d192:	jne    0x41d013
  41d198:	add    DWORD PTR [rip+0x27bd],0x1        # 0x41f95c
  41d19f:	jmp    0x41d013
  41d1a4:	cmp    BYTE PTR [rsi+0x1],0x0
  41d1a8:	jne    0x41d1b1
  41d1aa:	add    DWORD PTR [rip+0x27ab],0x1        # 0x41f95c
  41d1b1:	mov    ecx,DWORD PTR [rip+0x27a9]        # 0x41f960
  41d1b7:	test   ecx,ecx
  41d1b9:	je     0x41d1d6
  41d1bb:	mov    rax,QWORD PTR [rsp+0x90]
  41d1c3:	cmp    BYTE PTR [rax],0x3a
  41d1c6:	je     0x41d1d6
  41d1c8:	lea    rcx,[rip+0xe0f1]        # 0x42b2c0
  41d1cf:	mov    edx,ebx
  41d1d1:	call   0x41c8d0
  41d1d6:	mov    DWORD PTR [rip+0x277c],ebx        # 0x41f958
  41d1dc:	mov    eax,0x3f
  41d1e1:	jmp    0x41d013
  41d1e6:	mov    rcx,QWORD PTR [rsp+0x90]
  41d1ee:	mov    edx,0x2d
  41d1f3:	call   0x41db68
  41d1f8:	test   rax,rax
  41d1fb:	je     0x41d00e
  41d201:	mov    ebx,0x2d
  41d206:	movzx  edx,BYTE PTR [rax+0x1]
  41d20a:	jmp    0x41d183
  41d20f:	cmp    BYTE PTR [r13+0x2],0x0
  41d214:	jne    0x41cee4
  41d21a:	mov    esi,DWORD PTR [rip+0x2724]        # 0x41f944
  41d220:	lea    r8d,[rbx+0x1]
  41d224:	lea    rax,[rip+0xe06a]        # 0x42b295
  41d22b:	mov    DWORD PTR [rip+0x272a],r8d        # 0x41f95c
  41d232:	mov    QWORD PTR [rip+0x2717],rax        # 0x41f950
  41d239:	cmp    esi,0xffffffff
  41d23c:	je     0x41cffa
  41d242:	mov    ecx,ebp
  41d244:	mov    r9,r15
  41d247:	mov    edx,esi
  41d249:	call   0x41c820
  41d24e:	sub    ebp,esi
  41d250:	add    DWORD PTR [rip+0x2706],ebp        # 0x41f95c
  41d256:	jmp    0x41cffa
  41d25b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d260:	cmp    BYTE PTR [rsi+0x1],0x0
  41d264:	jne    0x41d3b5
  41d26a:	mov    eax,DWORD PTR [rip+0x26ec]        # 0x41f95c
  41d270:	add    eax,0x1
  41d273:	cmp    edi,eax
  41d275:	mov    DWORD PTR [rip+0x26e1],eax        # 0x41f95c
  41d27b:	jg     0x41d3a8
  41d281:	mov    edx,DWORD PTR [rip+0x26d9]        # 0x41f960
  41d287:	lea    rax,[rip+0xe007]        # 0x42b295
  41d28e:	mov    QWORD PTR [rip+0x26bb],rax        # 0x41f950
  41d295:	test   edx,edx
  41d297:	je     0x41d2b7
  41d299:	mov    rax,QWORD PTR [rsp+0x90]
  41d2a1:	cmp    BYTE PTR [rax],0x3a
  41d2a4:	je     0x41d2b7
  41d2a6:	lea    rcx,[rip+0xe0d3]        # 0x42b380
  41d2ad:	mov    edx,0x57
  41d2b2:	call   0x41c8d0
  41d2b7:	mov    rax,QWORD PTR [rsp+0x90]
  41d2bf:	mov    DWORD PTR [rip+0x268f],0x57        # 0x41f958
  41d2c9:	cmp    BYTE PTR [rax],0x3a
  41d2cc:	je     0x41d39e
  41d2d2:	mov    eax,0x3f
  41d2d7:	jmp    0x41d013
  41d2dc:	lea    rbp,[rsi+0x1]
  41d2e0:	mov    QWORD PTR [rip+0x2669],rbp        # 0x41f950
  41d2e7:	cmp    BYTE PTR [rsi+0x1],0x0
  41d2eb:	je     0x41d1e6
  41d2f1:	mov    ebx,0x2d
  41d2f6:	jmp    0x41d1b1
  41d2fb:	mov    QWORD PTR [rip+0x166aa],0x0        # 0x4339b0
  41d306:	cmp    BYTE PTR [rsi+0x1],0x0
  41d30a:	je     0x41d337
  41d30c:	mov    eax,DWORD PTR [rip+0x264a]        # 0x41f95c
  41d312:	mov    QWORD PTR [rip+0x16697],rbp        # 0x4339b0
  41d319:	lea    rcx,[rip+0xdf75]        # 0x42b295
  41d320:	add    eax,0x1
  41d323:	mov    DWORD PTR [rip+0x2633],eax        # 0x41f95c
  41d329:	mov    eax,ebx
  41d32b:	mov    QWORD PTR [rip+0x261e],rcx        # 0x41f950
  41d332:	jmp    0x41d013
  41d337:	cmp    BYTE PTR [rax+0x2],0x3a
  41d33b:	mov    eax,DWORD PTR [rip+0x261b]        # 0x41f95c
  41d341:	je     0x41d319
  41d343:	add    eax,0x1
  41d346:	cmp    edi,eax
  41d348:	mov    DWORD PTR [rip+0x260e],eax        # 0x41f95c
  41d34e:	jg     0x41d3e2
  41d354:	lea    rax,[rip+0xdf3a]        # 0x42b295
  41d35b:	mov    QWORD PTR [rip+0x25ee],rax        # 0x41f950
  41d362:	mov    eax,DWORD PTR [rip+0x25f8]        # 0x41f960
  41d368:	test   eax,eax
  41d36a:	je     0x41d387
  41d36c:	mov    rax,QWORD PTR [rsp+0x90]
  41d374:	cmp    BYTE PTR [rax],0x3a
  41d377:	je     0x41d387
  41d379:	lea    rcx,[rip+0xe000]        # 0x42b380
  41d380:	mov    edx,ebx
  41d382:	call   0x41c8d0
  41d387:	mov    rax,QWORD PTR [rsp+0x90]
  41d38f:	mov    DWORD PTR [rip+0x25c3],ebx        # 0x41f958
  41d395:	cmp    BYTE PTR [rax],0x3a
  41d398:	jne    0x41d2d2
  41d39e:	mov    eax,0x3a
  41d3a3:	jmp    0x41d013
  41d3a8:	cdqe   
  41d3aa:	mov    rax,QWORD PTR [r15+rax*8]
  41d3ae:	mov    QWORD PTR [rip+0x259b],rax        # 0x41f950
  41d3b5:	mov    r9,QWORD PTR [rsp+0xa0]
  41d3bd:	mov    r8,QWORD PTR [rsp+0x98]
  41d3c5:	mov    rcx,r15
  41d3c8:	mov    rdx,QWORD PTR [rsp+0x90]
  41d3d0:	mov    DWORD PTR [rsp+0x20],0x0
  41d3d8:	call   0x41c950
  41d3dd:	jmp    0x41d0db
  41d3e2:	movsxd rdx,eax
  41d3e5:	mov    rdx,QWORD PTR [r15+rdx*8]
  41d3e9:	mov    QWORD PTR [rip+0x165c0],rdx        # 0x4339b0
  41d3f0:	jmp    0x41d319
  41d3f5:	nop
  41d3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d400:	sub    rsp,0x38
  41d404:	xor    r9d,r9d
  41d407:	mov    DWORD PTR [rsp+0x28],0x0
  41d40f:	mov    QWORD PTR [rsp+0x20],0x0
  41d418:	call   0x41cd10
  41d41d:	add    rsp,0x38
  41d421:	ret    
  41d422:	nop    DWORD PTR [rax+0x0]
  41d426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d430:	sub    rsp,0x38
  41d434:	mov    rax,QWORD PTR [rsp+0x60]
  41d439:	mov    DWORD PTR [rsp+0x28],0x1
  41d441:	mov    QWORD PTR [rsp+0x20],rax
  41d446:	call   0x41cd10
  41d44b:	add    rsp,0x38
  41d44f:	ret    
  41d450:	sub    rsp,0x38
  41d454:	mov    rax,QWORD PTR [rsp+0x60]
  41d459:	mov    DWORD PTR [rsp+0x28],0x5
  41d461:	mov    QWORD PTR [rsp+0x20],rax
  41d466:	call   0x41cd10
  41d46b:	add    rsp,0x38
  41d46f:	ret    
  41d470:	push   r15
  41d472:	push   r14
  41d474:	push   r13
  41d476:	push   r12
  41d478:	push   rbp
  41d479:	push   rdi
  41d47a:	push   rsi
  41d47b:	push   rbx
  41d47c:	sub    rsp,0x28
  41d480:	test   rdx,rdx
  41d483:	mov    rsi,rcx
  41d486:	mov    r12,rdx
  41d489:	mov    edi,r8d
  41d48c:	je     0x41d492
  41d48e:	mov    QWORD PTR [r12],rcx
  41d492:	cmp    edi,0x24
  41d495:	ja     0x41d573
  41d49b:	cmp    edi,0x1
  41d49e:	jne    0x41d4a9
  41d4a0:	jmp    0x41d573
  41d4a5:	add    rsi,0x1
  41d4a9:	movsx  ecx,BYTE PTR [rsi]
  41d4ac:	mov    ebx,ecx
  41d4ae:	call   0x41dbd8
  41d4b3:	test   eax,eax
  41d4b5:	jne    0x41d4a5
  41d4b7:	lea    edx,[rbx-0x2b]
  41d4ba:	mov    rcx,rsi
  41d4bd:	mov    eax,ebx
  41d4bf:	and    edx,0xfd
  41d4c5:	jne    0x41d4cf
  41d4c7:	movzx  eax,BYTE PTR [rcx+0x1]
  41d4cb:	add    rsi,0x1
  41d4cf:	test   edi,edi
  41d4d1:	jne    0x41d611
  41d4d7:	cmp    al,0x30
  41d4d9:	mov    dil,0xa
  41d4dc:	je     0x41d662
  41d4e2:	movsx  r15d,al
  41d4e6:	lea    edx,[r15-0x30]
  41d4ea:	cmp    edx,0x9
  41d4ed:	ja     0x41d5e0
  41d4f3:	movsx  ecx,al
  41d4f6:	sub    ecx,0x30
  41d4f9:	cmp    edi,ecx
  41d4fb:	jle    0x41d690
  41d501:	mov    eax,ecx
  41d503:	shr    eax,0x1f
  41d506:	test   al,al
  41d508:	jne    0x41d690
  41d50e:	lea    r14,[rsi+0x1]
  41d512:	movsxd r15,ecx
  41d515:	xor    r13d,r13d
  41d518:	movsxd rsi,edi
  41d51b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d520:	movsx  ebp,BYTE PTR [r14]
  41d524:	lea    r9d,[rbp-0x30]
  41d528:	cmp    r9d,0x9
  41d52c:	mov    ecx,r9d
  41d52f:	jbe    0x41d594
  41d531:	mov    ecx,ebp
  41d533:	call   0x41dbd0
  41d538:	test   eax,eax
  41d53a:	lea    ecx,[rbp-0x37]
  41d53d:	jne    0x41d594
  41d53f:	mov    ecx,ebp
  41d541:	call   0x41dbe0
  41d546:	test   eax,eax
  41d548:	jne    0x41d591
  41d54a:	test   r12,r12
  41d54d:	je     0x41d553
  41d54f:	mov    QWORD PTR [r12],r14
  41d553:	cmp    bl,0x2d
  41d556:	je     0x41d640
  41d55c:	test   r15,r15
  41d55f:	js     0x41d6b0
  41d565:	test   r13d,r13d
  41d568:	jne    0x41d6b0
  41d56e:	mov    rax,r15
  41d571:	jmp    0x41d580
  41d573:	call   0x41dcb0
  41d578:	mov    DWORD PTR [rax],0x21
  41d57e:	xor    eax,eax
  41d580:	add    rsp,0x28
  41d584:	pop    rbx
  41d585:	pop    rsi
  41d586:	pop    rdi
  41d587:	pop    rbp
  41d588:	pop    r12
  41d58a:	pop    r13
  41d58c:	pop    r14
  41d58e:	pop    r15
  41d590:	ret    
  41d591:	lea    ecx,[rbp-0x57]
  41d594:	cmp    edi,ecx
  41d596:	jle    0x41d54a
  41d598:	test   ecx,ecx
  41d59a:	js     0x41d54a
  41d59c:	movabs rax,0x7fffffffffffffff
  41d5a6:	cqo    
  41d5a8:	idiv   rsi
  41d5ab:	add    rax,0x2
  41d5af:	cmp    r15,rax
  41d5b2:	ja     0x41d5d0
  41d5b4:	imul   r15,rsi
  41d5b8:	movsxd rcx,ecx
  41d5bb:	add    r15,rcx
  41d5be:	add    r14,0x1
  41d5c2:	jmp    0x41d520
  41d5c7:	nop    WORD PTR [rax+rax*1+0x0]
  41d5d0:	mov    r13d,0x1
  41d5d6:	jmp    0x41d5be
  41d5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d5e0:	mov    ecx,r15d
  41d5e3:	call   0x41dbd0
  41d5e8:	test   eax,eax
  41d5ea:	lea    ecx,[r15-0x37]
  41d5ee:	jne    0x41d4f9
  41d5f4:	mov    ecx,r15d
  41d5f7:	call   0x41dbe0
  41d5fc:	mov    edx,eax
  41d5fe:	xor    eax,eax
  41d600:	test   edx,edx
  41d602:	je     0x41d580
  41d608:	lea    ecx,[r15-0x57]
  41d60c:	jmp    0x41d4f9
  41d611:	cmp    edi,0x10
  41d614:	jne    0x41d4e2
  41d61a:	cmp    al,0x30
  41d61c:	jne    0x41d4e2
  41d622:	movzx  eax,BYTE PTR [rsi+0x1]
  41d626:	and    eax,0xffffffdf
  41d629:	cmp    al,0x58
  41d62b:	je     0x41d675
  41d62d:	mov    eax,0x30
  41d632:	jmp    0x41d4f3
  41d637:	nop    WORD PTR [rax+rax*1+0x0]
  41d640:	movabs rbx,0x8000000000000000
  41d64a:	cmp    r15,rbx
  41d64d:	jbe    0x41d6a0
  41d64f:	call   0x41dcb0
  41d654:	mov    DWORD PTR [rax],0x22
  41d65a:	mov    rax,rbx
  41d65d:	jmp    0x41d580
  41d662:	movzx  edx,BYTE PTR [rsi+0x1]
  41d666:	mov    dil,0x8
  41d669:	and    edx,0xffffffdf
  41d66c:	cmp    dl,0x58
  41d66f:	jne    0x41d4e2
  41d675:	movzx  eax,BYTE PTR [rsi+0x2]
  41d679:	mov    edi,0x10
  41d67e:	add    rsi,0x2
  41d682:	jmp    0x41d4e2
  41d687:	nop    WORD PTR [rax+rax*1+0x0]
  41d690:	xor    eax,eax
  41d692:	jmp    0x41d580
  41d697:	nop    WORD PTR [rax+rax*1+0x0]
  41d6a0:	test   r13d,r13d
  41d6a3:	jne    0x41d64f
  41d6a5:	mov    rax,r15
  41d6a8:	neg    rax
  41d6ab:	jmp    0x41d580
  41d6b0:	call   0x41dcb0
  41d6b5:	mov    DWORD PTR [rax],0x22
  41d6bb:	movabs rax,0x7fffffffffffffff
  41d6c5:	jmp    0x41d580
  41d6ca:	nop
  41d6cb:	nop
  41d6cc:	nop
  41d6cd:	nop
  41d6ce:	nop
  41d6cf:	nop
  41d6d0:	push   r15
  41d6d2:	push   r14
  41d6d4:	push   r13
  41d6d6:	push   r12
  41d6d8:	push   rbp
  41d6d9:	push   rdi
  41d6da:	push   rsi
  41d6db:	push   rbx
  41d6dc:	sub    rsp,0x28
  41d6e0:	test   rdx,rdx
  41d6e3:	mov    rsi,rcx
  41d6e6:	mov    r12,rdx
  41d6e9:	mov    edi,r8d
  41d6ec:	je     0x41d6f2
  41d6ee:	mov    QWORD PTR [r12],rcx
  41d6f2:	cmp    edi,0x24
  41d6f5:	ja     0x41d7d3
  41d6fb:	cmp    edi,0x1
  41d6fe:	jne    0x41d709
  41d700:	jmp    0x41d7d3
  41d705:	add    rsi,0x1
  41d709:	movsx  ecx,BYTE PTR [rsi]
  41d70c:	mov    ebx,ecx
  41d70e:	call   0x41dbd8
  41d713:	test   eax,eax
  41d715:	jne    0x41d705
  41d717:	lea    edx,[rbx-0x2b]
  41d71a:	mov    rcx,rsi
  41d71d:	mov    eax,ebx
  41d71f:	and    edx,0xfd
  41d725:	jne    0x41d72f
  41d727:	movzx  eax,BYTE PTR [rcx+0x1]
  41d72b:	add    rsi,0x1
  41d72f:	test   edi,edi
  41d731:	jne    0x41d865
  41d737:	cmp    al,0x30
  41d739:	mov    dil,0xa
  41d73c:	je     0x41d8c0
  41d742:	movsx  r15d,al
  41d746:	lea    edx,[r15-0x30]
  41d74a:	cmp    edx,0x9
  41d74d:	ja     0x41d840
  41d753:	movsx  r15d,al
  41d757:	sub    r15d,0x30
  41d75b:	cmp    edi,r15d
  41d75e:	jle    0x41d8e5
  41d764:	mov    eax,r15d
  41d767:	shr    eax,0x1f
  41d76a:	test   al,al
  41d76c:	jne    0x41d8e5
  41d772:	lea    r14,[rsi+0x1]
  41d776:	movsxd r15,r15d
  41d779:	xor    r13d,r13d
  41d77c:	movsxd rsi,edi
  41d77f:	nop
  41d780:	movsx  ebp,BYTE PTR [r14]
  41d784:	lea    r9d,[rbp-0x30]
  41d788:	cmp    r9d,0x9
  41d78c:	mov    ecx,r9d
  41d78f:	jbe    0x41d7f4
  41d791:	mov    ecx,ebp
  41d793:	call   0x41dbd0
  41d798:	test   eax,eax
  41d79a:	lea    ecx,[rbp-0x37]
  41d79d:	jne    0x41d7f4
  41d79f:	mov    ecx,ebp
  41d7a1:	call   0x41dbe0
  41d7a6:	test   eax,eax
  41d7a8:	jne    0x41d7f1
  41d7aa:	test   r12,r12
  41d7ad:	je     0x41d7b3
  41d7af:	mov    QWORD PTR [r12],r14
  41d7b3:	test   r13d,r13d
  41d7b6:	jne    0x41d890
  41d7bc:	xor    edx,edx
  41d7be:	cmp    bl,0x2d
  41d7c1:	sete   dl
  41d7c4:	mov    rax,rdx
  41d7c7:	neg    rax
  41d7ca:	xor    r15,rax
  41d7cd:	lea    rax,[r15+rdx*1]
  41d7d1:	jmp    0x41d7e0
  41d7d3:	call   0x41dcb0
  41d7d8:	mov    DWORD PTR [rax],0x21
  41d7de:	xor    eax,eax
  41d7e0:	add    rsp,0x28
  41d7e4:	pop    rbx
  41d7e5:	pop    rsi
  41d7e6:	pop    rdi
  41d7e7:	pop    rbp
  41d7e8:	pop    r12
  41d7ea:	pop    r13
  41d7ec:	pop    r14
  41d7ee:	pop    r15
  41d7f0:	ret    
  41d7f1:	lea    ecx,[rbp-0x57]
  41d7f4:	cmp    edi,ecx
  41d7f6:	jle    0x41d7aa
  41d7f8:	test   ecx,ecx
  41d7fa:	js     0x41d7aa
  41d7fc:	xor    edx,edx
  41d7fe:	mov    rax,0xffffffffffffffff
  41d805:	div    rsi
  41d808:	add    rax,0x1
  41d80c:	cmp    r15,rax
  41d80f:	ja     0x41d830
  41d811:	mov    rax,r15
  41d814:	movsxd rcx,ecx
  41d817:	imul   rax,rsi
  41d81b:	add    rcx,rax
  41d81e:	cmp    r15,rcx
  41d821:	ja     0x41d830
  41d823:	mov    r15,rcx
  41d826:	add    r14,0x1
  41d82a:	jmp    0x41d780
  41d82f:	nop
  41d830:	mov    r13d,0x1
  41d836:	jmp    0x41d826
  41d838:	nop    DWORD PTR [rax+rax*1+0x0]
  41d840:	mov    ecx,r15d
  41d843:	call   0x41dbd0
  41d848:	test   eax,eax
  41d84a:	jne    0x41d8b0
  41d84c:	mov    ecx,r15d
  41d84f:	call   0x41dbe0
  41d854:	mov    edx,eax
  41d856:	xor    eax,eax
  41d858:	test   edx,edx
  41d85a:	je     0x41d7e0
  41d85c:	sub    r15d,0x57
  41d860:	jmp    0x41d75b
  41d865:	cmp    edi,0x10
  41d868:	jne    0x41d742
  41d86e:	cmp    al,0x30
  41d870:	jne    0x41d742
  41d876:	movzx  eax,BYTE PTR [rsi+0x1]
  41d87a:	and    eax,0xffffffdf
  41d87d:	cmp    al,0x58
  41d87f:	je     0x41d8d3
  41d881:	mov    eax,0x30
  41d886:	jmp    0x41d753
  41d88b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d890:	call   0x41dcb0
  41d895:	mov    DWORD PTR [rax],0x22
  41d89b:	mov    rax,0xffffffffffffffff
  41d8a2:	jmp    0x41d7e0
  41d8a7:	nop    WORD PTR [rax+rax*1+0x0]
  41d8b0:	sub    r15d,0x37
  41d8b4:	jmp    0x41d75b
  41d8b9:	nop    DWORD PTR [rax+0x0]
  41d8c0:	movzx  edx,BYTE PTR [rsi+0x1]
  41d8c4:	mov    dil,0x8
  41d8c7:	and    edx,0xffffffdf
  41d8ca:	cmp    dl,0x58
  41d8cd:	jne    0x41d742
  41d8d3:	movzx  eax,BYTE PTR [rsi+0x2]
  41d8d7:	mov    edi,0x10
  41d8dc:	add    rsi,0x2
  41d8e0:	jmp    0x41d742
  41d8e5:	xor    eax,eax
  41d8e7:	jmp    0x41d7e0
  41d8ec:	nop
  41d8ed:	nop
  41d8ee:	nop
  41d8ef:	nop
  41d8f0:	push   r12
  41d8f2:	push   rbp
  41d8f3:	push   rdi
  41d8f4:	push   rsi
  41d8f5:	push   rbx
  41d8f6:	sub    rsp,0x250
  41d8fd:	mov    rbx,rdx
  41d900:	mov    rsi,rcx
  41d903:	mov    ecx,0x4000
  41d908:	mov    r12d,r8d
  41d90b:	call   0x41dbc8
  41d910:	test   rbx,rbx
  41d913:	mov    rbp,rax
  41d916:	je     0x41d9e0
  41d91c:	cmp    WORD PTR [rbx],0x0
  41d920:	lea    rax,[rip+0xda99]        # 0x42b3c0
  41d927:	cmove  rbx,rax
  41d92b:	test   rsi,rsi
  41d92e:	je     0x41d9d1
  41d934:	cmp    WORD PTR [rsi],0x0
  41d938:	lea    rax,[rip+0xda95]        # 0x42b3d4
  41d93f:	cmove  rsi,rax
  41d943:	lea    rdi,[rsp+0x40]
  41d948:	xor    ecx,ecx
  41d94a:	mov    r8d,0x104
  41d950:	mov    rdx,rdi
  41d953:	call   QWORD PTR [rip+0x16cbf]        # 0x434618
  41d959:	test   eax,eax
  41d95b:	je     0x41d9c0
  41d95d:	lea    r8,[rip+0xda74]        # 0x42b3d8
  41d964:	mov    QWORD PTR [rsp+0x30],rsi
  41d969:	mov    DWORD PTR [rsp+0x28],r12d
  41d96e:	mov    QWORD PTR [rsp+0x20],rbx
  41d973:	mov    r9,rdi
  41d976:	mov    edx,0x1fff
  41d97b:	mov    rcx,rbp
  41d97e:	call   0x41dc80
  41d983:	mov    rax,QWORD PTR [rip+0xde36]        # 0x42b7c0
  41d98a:	mov    eax,DWORD PTR [rax]
  41d98c:	test   eax,eax
  41d98e:	je     0x41da05
  41d990:	xor    ecx,ecx
  41d992:	mov    r9d,0x12012
  41d998:	lea    r8,[rip+0xdad1]        # 0x42b470
  41d99f:	mov    rdx,rbp
  41d9a2:	call   QWORD PTR [rip+0x16f30]        # 0x4348d8
  41d9a8:	cmp    eax,0x3
  41d9ab:	je     0x41d9f1
  41d9ad:	cmp    eax,0x5
  41d9b0:	jne    0x41d9ec
  41d9b2:	add    rsp,0x250
  41d9b9:	pop    rbx
  41d9ba:	pop    rsi
  41d9bb:	pop    rdi
  41d9bc:	pop    rbp
  41d9bd:	pop    r12
  41d9bf:	ret    
  41d9c0:	lea    rdx,[rip+0xd9f9]        # 0x42b3c0
  41d9c7:	mov    rcx,rdi
  41d9ca:	call   0x41db18
  41d9cf:	jmp    0x41d95d
  41d9d1:	lea    rsi,[rip+0xd9fc]        # 0x42b3d4
  41d9d8:	jmp    0x41d943
  41d9dd:	nop    DWORD PTR [rax]
  41d9e0:	lea    rbx,[rip+0xd9d9]        # 0x42b3c0
  41d9e7:	jmp    0x41d92b
  41d9ec:	call   0x41dc68
  41d9f1:	mov    ecx,0x16
  41d9f6:	call   0x41dba0
  41d9fb:	mov    ecx,0x3
  41da00:	call   0x41dca8
  41da05:	call   0x41dce0
  41da0a:	lea    rdx,[rip+0xda4f]        # 0x42b460
  41da11:	lea    rcx,[rax+0x60]
  41da15:	mov    r8,rbp
  41da18:	call   0x41dc00
  41da1d:	call   0x41dc68
  41da22:	nop
  41da23:	nop    DWORD PTR [rax]
  41da26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41da30:	push   rbp
  41da31:	push   rdi
  41da32:	push   rsi
  41da33:	push   rbx
  41da34:	sub    rsp,0x38
  41da38:	mov    rdi,rdx
  41da3b:	mov    DWORD PTR [rsp+0x2c],r8d
  41da40:	mov    rbp,rcx
  41da43:	call   0x41db50
  41da48:	lea    rcx,[rax+rax*1+0x2]
  41da4d:	call   0x41dbc8
  41da52:	mov    rcx,rdi
  41da55:	mov    rsi,rax
  41da58:	call   0x41db50
  41da5d:	lea    rcx,[rax+rax*1+0x2]
  41da62:	call   0x41dbc8
  41da67:	movzx  r9d,BYTE PTR [rbp+0x0]
  41da6c:	xor    r10d,r10d
  41da6f:	mov    rbx,rax
  41da72:	mov    r8d,DWORD PTR [rsp+0x2c]
  41da77:	test   r9b,r9b
  41da7a:	je     0x41da97
  41da7c:	nop    DWORD PTR [rax+0x0]
  41da80:	mov    WORD PTR [rsi+r10*2],r9w
  41da85:	add    r10,0x1
  41da89:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  41da8f:	test   r9b,r9b
  41da92:	jne    0x41da80
  41da94:	add    r10,r10
  41da97:	movzx  r9d,BYTE PTR [rdi]
  41da9b:	xor    edx,edx
  41da9d:	mov    WORD PTR [rsi+r10*1],dx
  41daa2:	xor    r10d,r10d
  41daa5:	test   r9b,r9b
  41daa8:	je     0x41dac6
  41daaa:	nop    WORD PTR [rax+rax*1+0x0]
  41dab0:	mov    WORD PTR [rbx+r10*2],r9w
  41dab5:	add    r10,0x1
  41dab9:	movzx  r9d,BYTE PTR [rdi+r10*1]
  41dabe:	test   r9b,r9b
  41dac1:	jne    0x41dab0
  41dac3:	add    r10,r10
  41dac6:	xor    eax,eax
  41dac8:	mov    rdx,rbx
  41dacb:	mov    rcx,rsi
  41dace:	mov    WORD PTR [rbx+r10*1],ax
  41dad3:	call   0x41d8f0
  41dad8:	mov    rcx,rsi
  41dadb:	call   0x41dc08
  41dae0:	mov    rcx,rbx
  41dae3:	add    rsp,0x38
  41dae7:	pop    rbx
  41dae8:	pop    rsi
  41dae9:	pop    rdi
  41daea:	pop    rbp
  41daeb:	jmp    0x41dc08
  41daf0:	jmp    0x41dc70
  41daf5:	nop
  41daf6:	nop
  41daf7:	nop
  41daf8:	nop
  41daf9:	nop
  41dafa:	nop
  41dafb:	nop
  41dafc:	nop
  41dafd:	nop
  41dafe:	nop
  41daff:	nop
  41db00:	jmp    QWORD PTR [rip+0x16dc2]        # 0x4348c8
  41db06:	nop
  41db07:	nop
  41db08:	jmp    QWORD PTR [rip+0x16db2]        # 0x4348c0
  41db0e:	nop
  41db0f:	nop
  41db10:	jmp    QWORD PTR [rip+0x16da2]        # 0x4348b8
  41db16:	nop
  41db17:	nop
  41db18:	jmp    QWORD PTR [rip+0x16d92]        # 0x4348b0
  41db1e:	nop
  41db1f:	nop
  41db20:	jmp    QWORD PTR [rip+0x16d82]        # 0x4348a8
  41db26:	nop
  41db27:	nop
  41db28:	jmp    QWORD PTR [rip+0x16d72]        # 0x4348a0
  41db2e:	nop
  41db2f:	nop
  41db30:	jmp    QWORD PTR [rip+0x16d62]        # 0x434898
  41db36:	nop
  41db37:	nop
  41db38:	jmp    QWORD PTR [rip+0x16d52]        # 0x434890
  41db3e:	nop
  41db3f:	nop
  41db40:	jmp    QWORD PTR [rip+0x16d42]        # 0x434888
  41db46:	nop
  41db47:	nop
  41db48:	jmp    QWORD PTR [rip+0x16d32]        # 0x434880
  41db4e:	nop
  41db4f:	nop
  41db50:	jmp    QWORD PTR [rip+0x16d22]        # 0x434878
  41db56:	nop
  41db57:	nop
  41db58:	jmp    QWORD PTR [rip+0x16d12]        # 0x434870
  41db5e:	nop
  41db5f:	nop
  41db60:	jmp    QWORD PTR [rip+0x16d02]        # 0x434868
  41db66:	nop
  41db67:	nop
  41db68:	jmp    QWORD PTR [rip+0x16cf2]        # 0x434860
  41db6e:	nop
  41db6f:	nop
  41db70:	jmp    QWORD PTR [rip+0x16ce2]        # 0x434858
  41db76:	nop
  41db77:	nop
  41db78:	jmp    QWORD PTR [rip+0x16cd2]        # 0x434850
  41db7e:	nop
  41db7f:	nop
  41db80:	jmp    QWORD PTR [rip+0x16cc2]        # 0x434848
  41db86:	nop
  41db87:	nop
  41db88:	jmp    QWORD PTR [rip+0x16cb2]        # 0x434840
  41db8e:	nop
  41db8f:	nop
  41db90:	jmp    QWORD PTR [rip+0x16ca2]        # 0x434838
  41db96:	nop
  41db97:	nop
  41db98:	jmp    QWORD PTR [rip+0x16c92]        # 0x434830
  41db9e:	nop
  41db9f:	nop
  41dba0:	jmp    QWORD PTR [rip+0x16c82]        # 0x434828
  41dba6:	nop
  41dba7:	nop
  41dba8:	jmp    QWORD PTR [rip+0x16c72]        # 0x434820
  41dbae:	nop
  41dbaf:	nop
  41dbb0:	jmp    QWORD PTR [rip+0x16c62]        # 0x434818
  41dbb6:	nop
  41dbb7:	nop
  41dbb8:	jmp    QWORD PTR [rip+0x16c52]        # 0x434810
  41dbbe:	nop
  41dbbf:	nop
  41dbc0:	jmp    QWORD PTR [rip+0x16c42]        # 0x434808
  41dbc6:	nop
  41dbc7:	nop
  41dbc8:	jmp    QWORD PTR [rip+0x16c32]        # 0x434800
  41dbce:	nop
  41dbcf:	nop
  41dbd0:	jmp    QWORD PTR [rip+0x16c22]        # 0x4347f8
  41dbd6:	nop
  41dbd7:	nop
  41dbd8:	jmp    QWORD PTR [rip+0x16c12]        # 0x4347f0
  41dbde:	nop
  41dbdf:	nop
  41dbe0:	jmp    QWORD PTR [rip+0x16c02]        # 0x4347e8
  41dbe6:	nop
  41dbe7:	nop
  41dbe8:	jmp    QWORD PTR [rip+0x16bf2]        # 0x4347e0
  41dbee:	nop
  41dbef:	nop
  41dbf0:	jmp    QWORD PTR [rip+0x16be2]        # 0x4347d8
  41dbf6:	nop
  41dbf7:	nop
  41dbf8:	jmp    QWORD PTR [rip+0x16bd2]        # 0x4347d0
  41dbfe:	nop
  41dbff:	nop
  41dc00:	jmp    QWORD PTR [rip+0x16bc2]        # 0x4347c8
  41dc06:	nop
  41dc07:	nop
  41dc08:	jmp    QWORD PTR [rip+0x16bb2]        # 0x4347c0
  41dc0e:	nop
  41dc0f:	nop
  41dc10:	jmp    QWORD PTR [rip+0x16ba2]        # 0x4347b8
  41dc16:	nop
  41dc17:	nop
  41dc18:	jmp    QWORD PTR [rip+0x16b92]        # 0x4347b0
  41dc1e:	nop
  41dc1f:	nop
  41dc20:	jmp    QWORD PTR [rip+0x16b82]        # 0x4347a8
  41dc26:	nop
  41dc27:	nop
  41dc28:	jmp    QWORD PTR [rip+0x16b72]        # 0x4347a0
  41dc2e:	nop
  41dc2f:	nop
  41dc30:	jmp    QWORD PTR [rip+0x16b62]        # 0x434798
  41dc36:	nop
  41dc37:	nop
  41dc38:	jmp    QWORD PTR [rip+0x16b52]        # 0x434790
  41dc3e:	nop
  41dc3f:	nop
  41dc40:	jmp    QWORD PTR [rip+0x16b42]        # 0x434788
  41dc46:	nop
  41dc47:	nop
  41dc48:	jmp    QWORD PTR [rip+0x16b32]        # 0x434780
  41dc4e:	nop
  41dc4f:	nop
  41dc50:	jmp    QWORD PTR [rip+0x16b22]        # 0x434778
  41dc56:	nop
  41dc57:	nop
  41dc58:	jmp    QWORD PTR [rip+0x16b12]        # 0x434770
  41dc5e:	nop
  41dc5f:	nop
  41dc60:	jmp    QWORD PTR [rip+0x16b02]        # 0x434768
  41dc66:	nop
  41dc67:	nop
  41dc68:	jmp    QWORD PTR [rip+0x16af2]        # 0x434760
  41dc6e:	nop
  41dc6f:	nop
  41dc70:	jmp    QWORD PTR [rip+0x16ae2]        # 0x434758
  41dc76:	nop
  41dc77:	nop
  41dc78:	jmp    QWORD PTR [rip+0x16ad2]        # 0x434750
  41dc7e:	nop
  41dc7f:	nop
  41dc80:	jmp    QWORD PTR [rip+0x16ac2]        # 0x434748
  41dc86:	nop
  41dc87:	nop
  41dc88:	jmp    QWORD PTR [rip+0x16ab2]        # 0x434740
  41dc8e:	nop
  41dc8f:	nop
  41dc90:	jmp    QWORD PTR [rip+0x16aa2]        # 0x434738
  41dc96:	nop
  41dc97:	nop
  41dc98:	jmp    QWORD PTR [rip+0x16a92]        # 0x434730
  41dc9e:	nop
  41dc9f:	nop
  41dca0:	jmp    QWORD PTR [rip+0x16a82]        # 0x434728
  41dca6:	nop
  41dca7:	nop
  41dca8:	jmp    QWORD PTR [rip+0x16a6a]        # 0x434718
  41dcae:	nop
  41dcaf:	nop
  41dcb0:	jmp    QWORD PTR [rip+0x16a5a]        # 0x434710
  41dcb6:	nop
  41dcb7:	nop
  41dcb8:	jmp    QWORD PTR [rip+0x16a4a]        # 0x434708
  41dcbe:	nop
  41dcbf:	nop
  41dcc0:	jmp    QWORD PTR [rip+0x16a3a]        # 0x434700
  41dcc6:	nop
  41dcc7:	nop
  41dcc8:	jmp    QWORD PTR [rip+0x16a22]        # 0x4346f0
  41dcce:	nop
  41dccf:	nop
  41dcd0:	jmp    QWORD PTR [rip+0x16a12]        # 0x4346e8
  41dcd6:	nop
  41dcd7:	nop
  41dcd8:	jmp    QWORD PTR [rip+0x16a02]        # 0x4346e0
  41dcde:	nop
  41dcdf:	nop
  41dce0:	jmp    QWORD PTR [rip+0x169f2]        # 0x4346d8
  41dce6:	nop
  41dce7:	nop
  41dce8:	jmp    QWORD PTR [rip+0x169da]        # 0x4346c8
  41dcee:	nop
  41dcef:	nop
  41dcf0:	jmp    QWORD PTR [rip+0x169ca]        # 0x4346c0
  41dcf6:	nop
  41dcf7:	nop
  41dcf8:	jmp    QWORD PTR [rip+0x169b2]        # 0x4346b0
  41dcfe:	nop
  41dcff:	nop
  41dd00:	mov    rax,QWORD PTR [rip+0x15929]        # 0x433630
  41dd07:	ret    
  41dd08:	nop    DWORD PTR [rax+rax*1+0x0]
  41dd10:	mov    rax,rcx
  41dd13:	xchg   QWORD PTR [rip+0x15916],rax        # 0x433630
  41dd1a:	ret    
  41dd1b:	nop
  41dd1c:	nop
  41dd1d:	nop
  41dd1e:	nop
  41dd1f:	nop
  41dd20:	jmp    QWORD PTR [rip+0x16bb2]        # 0x4348d8
  41dd26:	nop
  41dd27:	nop
  41dd28:	nop    DWORD PTR [rax+rax*1+0x0]
  41dd30:	jmp    QWORD PTR [rip+0x1696a]        # 0x4346a0
  41dd36:	nop
  41dd37:	nop
  41dd38:	jmp    QWORD PTR [rip+0x1695a]        # 0x434698
  41dd3e:	nop
  41dd3f:	nop
  41dd40:	jmp    QWORD PTR [rip+0x1694a]        # 0x434690
  41dd46:	nop
  41dd47:	nop
  41dd48:	jmp    QWORD PTR [rip+0x1693a]        # 0x434688
  41dd4e:	nop
  41dd4f:	nop
  41dd50:	jmp    QWORD PTR [rip+0x1692a]        # 0x434680
  41dd56:	nop
  41dd57:	nop
  41dd58:	jmp    QWORD PTR [rip+0x1691a]        # 0x434678
  41dd5e:	nop
  41dd5f:	nop
  41dd60:	jmp    QWORD PTR [rip+0x1690a]        # 0x434670
  41dd66:	nop
  41dd67:	nop
  41dd68:	jmp    QWORD PTR [rip+0x168fa]        # 0x434668
  41dd6e:	nop
  41dd6f:	nop
  41dd70:	jmp    QWORD PTR [rip+0x168ea]        # 0x434660
  41dd76:	nop
  41dd77:	nop
  41dd78:	jmp    QWORD PTR [rip+0x168da]        # 0x434658
  41dd7e:	nop
  41dd7f:	nop
  41dd80:	jmp    QWORD PTR [rip+0x168ca]        # 0x434650
  41dd86:	nop
  41dd87:	nop
  41dd88:	jmp    QWORD PTR [rip+0x168ba]        # 0x434648
  41dd8e:	nop
  41dd8f:	nop
  41dd90:	jmp    QWORD PTR [rip+0x168aa]        # 0x434640
  41dd96:	nop
  41dd97:	nop
  41dd98:	jmp    QWORD PTR [rip+0x1689a]        # 0x434638
  41dd9e:	nop
  41dd9f:	nop
  41dda0:	jmp    QWORD PTR [rip+0x1688a]        # 0x434630
  41dda6:	nop
  41dda7:	nop
  41dda8:	jmp    QWORD PTR [rip+0x1687a]        # 0x434628
  41ddae:	nop
  41ddaf:	nop
  41ddb0:	jmp    QWORD PTR [rip+0x1686a]        # 0x434620
  41ddb6:	nop
  41ddb7:	nop
  41ddb8:	jmp    QWORD PTR [rip+0x1685a]        # 0x434618
  41ddbe:	nop
  41ddbf:	nop
  41ddc0:	jmp    QWORD PTR [rip+0x1684a]        # 0x434610
  41ddc6:	nop
  41ddc7:	nop
  41ddc8:	jmp    QWORD PTR [rip+0x1683a]        # 0x434608
  41ddce:	nop
  41ddcf:	nop
  41ddd0:	jmp    QWORD PTR [rip+0x1682a]        # 0x434600
  41ddd6:	nop
  41ddd7:	nop
  41ddd8:	jmp    QWORD PTR [rip+0x1681a]        # 0x4345f8
  41ddde:	nop
  41dddf:	nop
  41dde0:	jmp    QWORD PTR [rip+0x1680a]        # 0x4345f0
  41dde6:	nop
  41dde7:	nop
  41dde8:	jmp    QWORD PTR [rip+0x167fa]        # 0x4345e8
  41ddee:	nop
  41ddef:	nop
  41ddf0:	push   r15
  41ddf2:	push   r14
  41ddf4:	push   r13
  41ddf6:	push   r12
  41ddf8:	push   rbp
  41ddf9:	push   rdi
  41ddfa:	push   rsi
  41ddfb:	push   rbx
  41ddfc:	sub    rsp,0x48
  41de00:	mov    rbx,rdx
  41de03:	mov    esi,ecx
  41de05:	call   0x41b430
  41de0a:	call   0x402650
  41de0f:	mov    rdi,QWORD PTR [rbx]
  41de12:	mov    rax,QWORD PTR [rip+0xda67]        # 0x42b880
  41de19:	mov    edx,0x2f
  41de1e:	mov    rcx,rdi
  41de21:	mov    DWORD PTR [rax],0x1
  41de27:	call   0x41db30
  41de2c:	lea    rdx,[rax+0x1]
  41de30:	test   rax,rax
  41de33:	lea    rax,[rip+0x257c]        # 0x4203b6
  41de3a:	mov    rbp,QWORD PTR [rip+0xda2f]        # 0x42b870
  41de41:	mov    QWORD PTR [rip+0x15814],0x0        # 0x433660
  41de4c:	mov    QWORD PTR [rip+0x15825],rax        # 0x433678
  41de53:	lea    rax,[rip+0x255e]        # 0x4203b8
  41de5a:	cmovne rdi,rdx
  41de5e:	mov    QWORD PTR [rip+0x157eb],rdi        # 0x433650
  41de65:	mov    QWORD PTR [rip+0x15828],0x0        # 0x433698
  41de70:	mov    DWORD PTR [rip+0x15806],0x0        # 0x433680
  41de7a:	mov    DWORD PTR [rip+0x15804],0x0        # 0x433688
  41de84:	mov    r15,rbp
  41de87:	mov    DWORD PTR [rip+0x157df],0x0        # 0x433670
  41de91:	mov    DWORD PTR [rip+0x157d9],0x0        # 0x433674
  41de9b:	mov    r12,rbp
  41de9e:	mov    QWORD PTR [rip+0x15803],rax        # 0x4336a8
  41dea5:	mov    QWORD PTR [rip+0x15808],0x0        # 0x4336b8
  41deb0:	mov    r13,rbp
  41deb3:	mov    DWORD PTR [rip+0x157e7],0x0        # 0x4336a4
  41debd:	mov    DWORD PTR [rip+0x157c9],0x0        # 0x433690
  41dec7:	mov    DWORD PTR [rip+0x157bb],0x0        # 0x43368c
  41ded1:	mov    DWORD PTR [rip+0x157c5],0x0        # 0x4336a0
  41dedb:	mov    DWORD PTR [rip+0x157cf],0x0        # 0x4336b4
  41dee5:	mov    DWORD PTR [rip+0x157c1],0x0        # 0x4336b0
  41deef:	mov    QWORD PTR [rsp+0x28],rbp
  41def4:	lea    rdi,[rip+0x26c1]        # 0x4205bc
  41defb:	lea    r8,[rip+0x2549]        # 0x42044b
  41df02:	mov    rdx,rbx
  41df05:	mov    ecx,esi
  41df07:	call   0x41d400
  41df0c:	cmp    eax,0xffffffff
  41df0f:	je     0x41e200
  41df15:	sub    eax,0x3f
  41df18:	cmp    eax,0x39
  41df1b:	ja     0x41defb
  41df1d:	movsxd rax,DWORD PTR [rdi+rax*4]
  41df21:	add    rax,rdi
  41df24:	jmp    rax
  41df26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df30:	mov    DWORD PTR [rip+0x1574e],0x1        # 0x433688
  41df3a:	jmp    0x41def4
  41df3c:	nop    DWORD PTR [rax+0x0]
  41df40:	mov    rax,QWORD PTR [rsp+0x28]
  41df45:	mov    rax,QWORD PTR [rax]
  41df48:	test   rax,rax
  41df4b:	je     0x41df55
  41df4d:	mov    rcx,rax
  41df50:	call   0x41db10
  41df55:	mov    QWORD PTR [rip+0x15704],rax        # 0x433660
  41df5c:	jmp    0x41def4
  41df5e:	xchg   ax,ax
  41df60:	mov    eax,DWORD PTR [rip+0x1571a]        # 0x433680
  41df66:	test   eax,eax
  41df68:	jne    0x41e2a2
  41df6e:	lea    rax,[rip+0x24bf]        # 0x420434
  41df75:	mov    DWORD PTR [rip+0x15701],0x1        # 0x433680
  41df7f:	mov    QWORD PTR [rip+0x127a],rax        # 0x41f200
  41df86:	jmp    0x41def4
  41df8b:	nop    DWORD PTR [rax+rax*1+0x0]
  41df90:	mov    edx,DWORD PTR [rip+0x156ea]        # 0x433680
  41df96:	test   edx,edx
  41df98:	jne    0x41e2a2
  41df9e:	mov    rdi,QWORD PTR [r13+0x0]
  41dfa2:	xor    eax,eax
  41dfa4:	or     rcx,0xffffffffffffffff
  41dfa8:	repnz scas al,BYTE PTR es:[rdi]
  41dfaa:	not    rcx
  41dfad:	call   0x4063a0
  41dfb2:	mov    rdx,QWORD PTR [r13+0x0]
  41dfb6:	mov    rcx,rax
  41dfb9:	mov    rdi,rax
  41dfbc:	call   0x41db58
  41dfc1:	mov    rdx,QWORD PTR [rip+0x1078]        # 0x41f040
  41dfc8:	test   rdx,rdx
  41dfcb:	je     0x41e1cd
  41dfd1:	lea    r14,[rip+0x1068]        # 0x41f040
  41dfd8:	jmp    0x41dff0
  41dfda:	nop    WORD PTR [rax+rax*1+0x0]
  41dfe0:	add    r14,0x10
  41dfe4:	mov    rdx,QWORD PTR [r14]
  41dfe7:	test   rdx,rdx
  41dfea:	je     0x41e1cd
  41dff0:	mov    rcx,rdi
  41dff3:	call   0x41db60
  41dff8:	test   eax,eax
  41dffa:	jne    0x41dfe0
  41dffc:	mov    eax,DWORD PTR [r14+0x8]
  41e000:	mov    DWORD PTR [rip+0x1567a],eax        # 0x433680
  41e006:	jmp    0x41def4
  41e00b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e010:	mov    rcx,QWORD PTR [r12]
  41e014:	call   0x41db50
  41e019:	lea    rcx,[rax+0x1]
  41e01d:	call   0x4063a0
  41e022:	test   rax,rax
  41e025:	mov    rdi,rax
  41e028:	je     0x41e3c7
  41e02e:	mov    rdx,QWORD PTR [r12]
  41e032:	mov    rcx,rax
  41e035:	call   0x41db58
  41e03a:	mov    rdx,QWORD PTR [rip+0x10bf]        # 0x41f100
  41e041:	test   rdx,rdx
  41e044:	je     0x41e1ea
  41e04a:	lea    r14,[rip+0x10af]        # 0x41f100
  41e051:	jmp    0x41e063
  41e053:	add    r14,0x10
  41e057:	mov    rdx,QWORD PTR [r14]
  41e05a:	test   rdx,rdx
  41e05d:	je     0x41e1ea
  41e063:	mov    rcx,rdi
  41e066:	call   0x41db60
  41e06b:	test   eax,eax
  41e06d:	jne    0x41e053
  41e06f:	mov    eax,DWORD PTR [r14+0x8]
  41e073:	mov    DWORD PTR [rip+0x1562b],eax        # 0x4336a4
  41e079:	jmp    0x41def4
  41e07e:	xchg   ax,ax
  41e080:	mov    DWORD PTR [rip+0x155ea],0x1        # 0x433674
  41e08a:	jmp    0x41def4
  41e08f:	nop
  41e090:	mov    r8d,DWORD PTR [rip+0x155e9]        # 0x433680
  41e097:	test   r8d,r8d
  41e09a:	jne    0x41e2a2
  41e0a0:	mov    DWORD PTR [rip+0x155d6],0x3        # 0x433680
  41e0aa:	call   QWORD PTR [rip+0x16628]        # 0x4346d8
  41e0b0:	lea    rcx,[rip+0x2359]        # 0x420410
  41e0b7:	lea    r9,[rax+0x60]
  41e0bb:	mov    r8d,0x23
  41e0c1:	mov    edx,0x1
  41e0c6:	call   0x41dbf8
  41e0cb:	jmp    0x41def4
  41e0d0:	mov    rax,QWORD PTR [rip+0xd5e9]        # 0x42b6c0
  41e0d7:	mov    DWORD PTR [rax],0x1
  41e0dd:	jmp    0x41def4
  41e0e2:	mov    r9d,DWORD PTR [rip+0x15597]        # 0x433680
  41e0e9:	test   r9d,r9d
  41e0ec:	jne    0x41e2a2
  41e0f2:	mov    DWORD PTR [rip+0x15584],0x2        # 0x433680
  41e0fc:	call   QWORD PTR [rip+0x165d6]        # 0x4346d8
  41e102:	lea    rcx,[rip+0x22df]        # 0x4203e8
  41e109:	lea    r9,[rax+0x60]
  41e10d:	mov    r8d,0x21
  41e113:	mov    edx,0x1
  41e118:	call   0x41dbf8
  41e11d:	jmp    0x41def4
  41e122:	mov    ecx,DWORD PTR [rip+0x15558]        # 0x433680
  41e128:	test   ecx,ecx
  41e12a:	jne    0x41e2a2
  41e130:	mov    DWORD PTR [rip+0x15546],0x1        # 0x433680
  41e13a:	jmp    0x41def4
  41e13f:	nop
  41e140:	mov    DWORD PTR [rip+0x15566],0x1        # 0x4336b0
  41e14a:	jmp    0x41def4
  41e14f:	nop
  41e150:	mov    rax,QWORD PTR [r15]
  41e153:	test   rax,rax
  41e156:	je     0x41e160
  41e158:	mov    rcx,rax
  41e15b:	call   0x41db10
  41e160:	mov    QWORD PTR [rip+0x15541],rax        # 0x4336a8
  41e167:	jmp    0x41def4
  41e16c:	nop    DWORD PTR [rax+0x0]
  41e170:	mov    rax,QWORD PTR [rip+0xd6f9]        # 0x42b870
  41e177:	mov    rcx,QWORD PTR [rax]
  41e17a:	call   0x41dc60
  41e17f:	mov    rdx,QWORD PTR [rip+0xd53a]        # 0x42b6c0
  41e186:	mov    DWORD PTR [rdx],eax
  41e188:	jmp    0x41def4
  41e18d:	nop    DWORD PTR [rax]
  41e190:	mov    rcx,QWORD PTR [rbp+0x0]
  41e194:	call   0x41dc60
  41e199:	cdqe   
  41e19b:	mov    QWORD PTR [rip+0x15516],rax        # 0x4336b8
  41e1a2:	jmp    0x41def4
  41e1a7:	nop    WORD PTR [rax+rax*1+0x0]
  41e1b0:	mov    ebx,0x8
  41e1b5:	call   0x402620
  41e1ba:	mov    eax,ebx
  41e1bc:	add    rsp,0x48
  41e1c0:	pop    rbx
  41e1c1:	pop    rsi
  41e1c2:	pop    rdi
  41e1c3:	pop    rbp
  41e1c4:	pop    r12
  41e1c6:	pop    r13
  41e1c8:	pop    r14
  41e1ca:	pop    r15
  41e1cc:	ret    
  41e1cd:	mov    rdx,QWORD PTR [rip+0x1547c]        # 0x433650
  41e1d4:	lea    rcx,[rip+0x23a5]        # 0x420580
  41e1db:	mov    r8,rdi
  41e1de:	call   0x40b3d0
  41e1e3:	mov    ebx,0x1
  41e1e8:	jmp    0x41e1ba
  41e1ea:	lea    rcx,[rip+0x23b6]        # 0x4205a7
  41e1f1:	mov    rdx,rdi
  41e1f4:	mov    ebx,0x2
  41e1f9:	call   0x40b3d0
  41e1fe:	jmp    0x41e1ba
  41e200:	cmp    DWORD PTR [rip+0x15479],0x0        # 0x433680
  41e207:	je     0x41e26e
  41e209:	mov    eax,DWORD PTR [rip+0x15471]        # 0x433680
  41e20f:	cmp    eax,0x1
  41e212:	je     0x41e28b
  41e214:	cmp    QWORD PTR [rip+0x1549c],0x0        # 0x4336b8
  41e21c:	jne    0x41e229
  41e21e:	mov    QWORD PTR [rip+0x1548f],0x4000        # 0x4336b8
  41e229:	cmp    eax,0x4
  41e22c:	je     0x41e2cd
  41e232:	mov    DWORD PTR [rip+0x15474],0x0        # 0x4336b0
  41e23c:	mov    rax,QWORD PTR [rip+0xd64d]        # 0x42b890
  41e243:	movsxd rdi,DWORD PTR [rax]
  41e246:	sub    esi,edi
  41e248:	cmp    esi,0x1
  41e24b:	jle    0x41e30a
  41e251:	mov    rdx,QWORD PTR [rip+0x153f8]        # 0x433650
  41e258:	lea    rcx,[rip+0x2209]        # 0x420468
  41e25f:	mov    ebx,0x6
  41e264:	call   0x40b3d0
  41e269:	jmp    0x41e1ba
  41e26e:	cmp    DWORD PTR [rip+0x1542f],0x0        # 0x4336a4
  41e275:	mov    DWORD PTR [rip+0x15401],0x1        # 0x433680
  41e27f:	jne    0x41e28b
  41e281:	cmp    QWORD PTR [rip+0x153d7],0x0        # 0x433660
  41e289:	je     0x41e2fb
  41e28b:	cmp    QWORD PTR [rip+0x15425],0x0        # 0x4336b8
  41e293:	jne    0x41e23c
  41e295:	mov    QWORD PTR [rip+0x15418],0x40000        # 0x4336b8
  41e2a0:	jmp    0x41e23c
  41e2a2:	call   QWORD PTR [rip+0x16430]        # 0x4346d8
  41e2a8:	lea    rcx,[rip+0x2111]        # 0x4203c0
  41e2af:	lea    r9,[rax+0x60]
  41e2b3:	mov    r8d,0x21
  41e2b9:	mov    edx,0x1
  41e2be:	mov    ebx,0x1
  41e2c3:	call   0x41dbf8
  41e2c8:	jmp    0x41e1ba
  41e2cd:	mov    rcx,QWORD PTR [rip+0x153d4]        # 0x4336a8
  41e2d4:	lea    rdx,[rip+0x20dd]        # 0x4203b8
  41e2db:	call   0x41db60
  41e2e0:	test   eax,eax
  41e2e2:	jne    0x41e232
  41e2e8:	lea    rax,[rip+0x2173]        # 0x420462
  41e2ef:	mov    QWORD PTR [rip+0x153b2],rax        # 0x4336a8
  41e2f6:	jmp    0x41e232
  41e2fb:	mov    DWORD PTR [rip+0x1536b],0x1        # 0x433670
  41e305:	jmp    0x41e209
  41e30a:	mov    r12,QWORD PTR [rip+0x163c7]        # 0x4346d8
  41e311:	call   r12
  41e314:	sub    esi,0x1
  41e317:	mov    rbp,rax
  41e31a:	jne    0x41e33a
  41e31c:	lea    rbx,[rbx+rdi*8]
  41e320:	lea    rdx,[rip+0x208f]        # 0x4203b6
  41e327:	mov    rsi,QWORD PTR [rbx]
  41e32a:	mov    rcx,rsi
  41e32d:	call   0x41db60
  41e332:	test   eax,eax
  41e334:	jne    0x41e47f
  41e33a:	call   0x411950
  41e33f:	mov    rax,QWORD PTR [rip+0xd4da]        # 0x42b820
  41e346:	mov    QWORD PTR [rax],rbp
  41e349:	mov    rax,QWORD PTR [rip+0xd370]        # 0x42b6c0
  41e350:	cmp    DWORD PTR [rax],0x1
  41e353:	jle    0x41e362
  41e355:	mov    rax,QWORD PTR [rip+0xd4b4]        # 0x42b810
  41e35c:	mov    DWORD PTR [rax],0x1
  41e362:	call   0x4121c0
  41e367:	test   eax,eax
  41e369:	mov    ebx,eax
  41e36b:	jne    0x41e1e3
  41e371:	mov    eax,DWORD PTR [rip+0x15309]        # 0x433680
  41e377:	sub    eax,0x3
  41e37a:	cmp    eax,0x1
  41e37d:	jbe    0x41e56d
  41e383:	cmp    DWORD PTR [rip+0x1531a],0x0        # 0x4336a4
  41e38a:	jne    0x41e595
  41e390:	cmp    DWORD PTR [rip+0x15309],0x0        # 0x4336a0
  41e397:	mov    eax,DWORD PTR [rip+0x152f3]        # 0x433690
  41e39d:	mov    DWORD PTR [rip+0x15301],eax        # 0x4336a4
  41e3a3:	je     0x41e3e4
  41e3a5:	test   eax,eax
  41e3a7:	je     0x41e470
  41e3ad:	cmp    DWORD PTR [rip+0x152f0],0x3        # 0x4336a4
  41e3b4:	je     0x41e3fa
  41e3b6:	lea    rcx,[rip+0x217b]        # 0x420538
  41e3bd:	call   0x40b3d0
  41e3c2:	jmp    0x41e1ba
  41e3c7:	mov    rdx,QWORD PTR [rip+0x15282]        # 0x433650
  41e3ce:	lea    rcx,[rip+0x2064]        # 0x420439
  41e3d5:	mov    ebx,0x1
  41e3da:	call   0x40b3d0
  41e3df:	jmp    0x41e1ba
  41e3e4:	cmp    DWORD PTR [rip+0x152c9],0x0        # 0x4336b4
  41e3eb:	jle    0x41e5af
  41e3f1:	cmp    DWORD PTR [rip+0x152ac],0x0        # 0x4336a4
  41e3f8:	je     0x41e470
  41e3fa:	mov    eax,DWORD PTR [rip+0x152a4]        # 0x4336a4
  41e400:	xor    edx,edx
  41e402:	cmp    eax,0x2
  41e405:	setle  dl
  41e408:	mov    DWORD PTR [rip+0x1524a],edx        # 0x433658
  41e40e:	je     0x41e615
  41e414:	jle    0x41e5e9
  41e41a:	cmp    eax,0x3
  41e41d:	je     0x41e606
  41e423:	cmp    eax,0x4
  41e426:	jne    0x41e5ee
  41e42c:	mov    DWORD PTR [rip+0x1524e],0x1100        # 0x433684
  41e436:	cmp    DWORD PTR [rip+0x15273],0x0        # 0x4336b0
  41e43d:	je     0x41e446
  41e43f:	or     DWORD PTR [rip+0x1523e],0xc        # 0x433684
  41e446:	call   0x40d6f0
  41e44b:	cmp    DWORD PTR [rip+0x1521e],0x0        # 0x433670
  41e452:	jne    0x41e1ba
  41e458:	mov    rax,QWORD PTR [rip+0xd291]        # 0x42b6f0
  41e45f:	mov    ebx,DWORD PTR [rax]
  41e461:	test   ebx,ebx
  41e463:	je     0x41e5df
  41e469:	xor    ebx,ebx
  41e46b:	jmp    0x41e1ba
  41e470:	mov    DWORD PTR [rip+0x1522a],0x3        # 0x4336a4
  41e47a:	jmp    0x41e3fa
  41e47f:	lea    rdx,[rip+0x200d]        # 0x420493
  41e486:	mov    rcx,rsi
  41e489:	call   0x41dc30
  41e48e:	test   rax,rax
  41e491:	mov    rbp,rax
  41e494:	je     0x41e634
  41e49a:	lea    rsi,[rsp+0x30]
  41e49f:	mov    r9,rax
  41e4a2:	mov    r8d,0x2
  41e4a8:	mov    edx,0x1
  41e4ad:	mov    DWORD PTR [rsp+0x30],0x0
  41e4b5:	mov    rcx,rsi
  41e4b8:	call   0x41dc10
  41e4bd:	cmp    rax,0x2
  41e4c1:	jne    0x41e509
  41e4c3:	movzx  eax,BYTE PTR [rsp+0x30]
  41e4c8:	cmp    al,0xef
  41e4ca:	je     0x41e659
  41e4d0:	jl     0x41e501
  41e4d2:	add    eax,0x2
  41e4d5:	cmp    al,0x2
  41e4d7:	ja     0x41e501
  41e4d9:	call   r12
  41e4dc:	lea    rcx,[rip+0x1fdd]        # 0x4204c0
  41e4e3:	lea    r9,[rax+0x60]
  41e4e7:	mov    r8d,0x39
  41e4ed:	mov    edx,0x1
  41e4f2:	mov    ebx,0x1
  41e4f7:	call   0x41dbf8
  41e4fc:	jmp    0x41e1ba
  41e501:	mov    rcx,rbp
  41e504:	call   0x41db90
  41e509:	mov    ecx,0x100
  41e50e:	call   0x4063a0
  41e513:	mov    QWORD PTR [rip+0x1515e],rax        # 0x433678
  41e51a:	mov    rcx,QWORD PTR [rbx]
  41e51d:	test   rcx,rcx
  41e520:	je     0x41e624
  41e526:	call   0x41db10
  41e52b:	test   rax,rax
  41e52e:	mov    r8,rax
  41e531:	mov    QWORD PTR [rip+0x15140],rax        # 0x433678
  41e538:	je     0x41e33a
  41e53e:	xor    eax,eax
  41e540:	or     rcx,0xffffffffffffffff
  41e544:	mov    rdi,r8
  41e547:	repnz scas al,BYTE PTR es:[rdi]
  41e549:	not    rcx
  41e54c:	mov    rdx,rcx
  41e54f:	sub    rdx,0x1
  41e553:	cmp    rdx,0x100
  41e55a:	jbe    0x41e33a
  41e560:	mov    BYTE PTR [r8+0x100],0x0
  41e568:	jmp    0x41e33a
  41e56d:	cmp    DWORD PTR [rip+0x1512c],0x0        # 0x4336a0
  41e574:	mov    DWORD PTR [rip+0x15126],0x1        # 0x4336a4
  41e57e:	je     0x41e3e4
  41e584:	lea    rcx,[rip+0x1f75]        # 0x420500
  41e58b:	call   0x40b3d0
  41e590:	jmp    0x41e1ba
  41e595:	cmp    DWORD PTR [rip+0x15104],0x0        # 0x4336a0
  41e59c:	jne    0x41e3ad
  41e5a2:	cmp    DWORD PTR [rip+0x1510b],0x0        # 0x4336b4
  41e5a9:	jg     0x41e3fa
  41e5af:	cmp    DWORD PTR [rip+0x150ee],0x0        # 0x4336a4
  41e5b6:	jne    0x41e3fa
  41e5bc:	mov    DWORD PTR [rip+0x150de],0x1        # 0x4336a4
  41e5c6:	mov    DWORD PTR [rip+0x15088],0x1        # 0x433658
  41e5d0:	mov    DWORD PTR [rip+0x150aa],0x0        # 0x433684
  41e5da:	jmp    0x41e436
  41e5df:	call   0x40b680
  41e5e4:	jmp    0x41e1ba
  41e5e9:	sub    eax,0x1
  41e5ec:	je     0x41e5d0
  41e5ee:	lea    rdx,[rip+0x1f73]        # 0x420568
  41e5f5:	lea    rcx,[rip+0x1f6e]        # 0x42056a
  41e5fc:	call   0x406300
  41e601:	jmp    0x41e436
  41e606:	mov    DWORD PTR [rip+0x15074],0x1000        # 0x433684
  41e610:	jmp    0x41e436
  41e615:	mov    DWORD PTR [rip+0x15065],0x200        # 0x433684
  41e61f:	jmp    0x41e436
  41e624:	mov    QWORD PTR [rip+0x15049],0x0        # 0x433678
  41e62f:	jmp    0x41e33a
  41e634:	mov    rdx,QWORD PTR [rbx]
  41e637:	lea    rcx,[rip+0x1e5a]        # 0x420498
  41e63e:	mov    ebx,0x7
  41e643:	call   0x40b3d0
  41e648:	lea    rcx,[rip+0x1e6a]        # 0x4204b9
  41e64f:	call   0x41dba8
  41e654:	jmp    0x41e1ba
  41e659:	mov    r9,rbp
  41e65c:	mov    r8d,0x1
  41e662:	mov    edx,0x1
  41e667:	mov    rcx,rsi
  41e66a:	call   0x41dc10
  41e66f:	jmp    0x41e509
  41e674:	nop
  41e675:	nop
  41e676:	nop
  41e677:	nop
  41e678:	nop
  41e679:	nop
  41e67a:	nop
  41e67b:	nop
  41e67c:	nop
  41e67d:	nop
  41e67e:	nop
  41e67f:	nop
  41e680:	push   rbp
  41e681:	push   rdi
  41e682:	push   rsi
  41e683:	push   rbx
  41e684:	mov    eax,DWORD PTR [rip+0x13e1e]        # 0x4324a8
  41e68a:	mov    r11,QWORD PTR [rip+0x151ff]        # 0x433890
  41e691:	mov    rdi,QWORD PTR [rip+0x13e18]        # 0x4324b0
  41e698:	mov    esi,DWORD PTR [rip+0x13e02]        # 0x4324a0
  41e69e:	mov    rbx,QWORD PTR [rip+0x13df3]        # 0x432498
  41e6a5:	cmp    r11,rdi
  41e6a8:	jae    0x41e738
  41e6ae:	movzx  edx,BYTE PTR [r11]
  41e6b2:	mov    bpl,0x1
  41e6b5:	test   dl,dl
  41e6b7:	je     0x41e6c4
  41e6b9:	lea    rcx,[rip+0x8e80]        # 0x427540
  41e6c0:	mov    bpl,BYTE PTR [rcx+rdx*4]
  41e6c4:	lea    rdx,[rip+0x9275]        # 0x427940
  41e6cb:	movsxd rcx,eax
  41e6ce:	cmp    WORD PTR [rdx+rcx*2],0x0
  41e6d3:	cmovne rbx,r11
  41e6d7:	cmovne esi,eax
  41e6da:	lea    rdx,[rip+0x89df]        # 0x4270c0
  41e6e1:	movsxd r8,eax
  41e6e4:	movzx  ecx,bpl
  41e6e8:	lea    r9,[rip+0x6291]        # 0x424980
  41e6ef:	movsx  edx,WORD PTR [rdx+r8*2]
  41e6f4:	add    edx,ecx
  41e6f6:	movsxd r10,edx
  41e6f9:	movsx  r9d,WORD PTR [r9+r10*2]
  41e6fe:	cmp    r9d,eax
  41e701:	je     0x41e723
  41e703:	lea    rax,[rip+0x8676]        # 0x426d80
  41e70a:	movsx  eax,WORD PTR [rax+r8*2]
  41e70f:	cmp    eax,0x17f
  41e714:	jle    0x41e6da
  41e716:	lea    rdx,[rip+0x8ce3]        # 0x427400
  41e71d:	mov    bpl,BYTE PTR [rdx+rcx*4]
  41e721:	jmp    0x41e6da
  41e723:	lea    rax,[rip+0x7456]        # 0x425b80
  41e72a:	mov    edx,edx
  41e72c:	inc    r11
  41e72f:	movsx  eax,WORD PTR [rax+rdx*2]
  41e733:	jmp    0x41e6a5
  41e738:	mov    DWORD PTR [rip+0x13d62],esi        # 0x4324a0
  41e73e:	mov    QWORD PTR [rip+0x13d53],rbx        # 0x432498
  41e745:	pop    rbx
  41e746:	pop    rsi
  41e747:	pop    rdi
  41e748:	pop    rbp
  41e749:	ret    
  41e74a:	nop
  41e74b:	nop
  41e74c:	nop
  41e74d:	nop
  41e74e:	nop
  41e74f:	nop
  41e750:	(bad)  
  41e751:	(bad)  
  41e752:	(bad)  
  41e753:	(bad)  
  41e754:	(bad)  
  41e755:	(bad)  
  41e756:	(bad)  
  41e757:	inc    DWORD PTR [rax]
  41e759:	add    BYTE PTR [rax],al
  41e75b:	add    BYTE PTR [rax],al
  41e75d:	add    BYTE PTR [rax],al
  41e75f:	add    bh,bh
  41e761:	(bad)  
  41e762:	(bad)  
  41e763:	(bad)  
  41e764:	(bad)  
  41e765:	(bad)  
  41e766:	(bad)  
  41e767:	inc    DWORD PTR [rax]
  41e769:	add    BYTE PTR [rax],al
  41e76b:	add    BYTE PTR [rax],al
  41e76d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000041f000 <.data>:
  41f000:	or     al,BYTE PTR [rax]
	...
  41f03e:	add    BYTE PTR [rax],al
  41f040:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f041:	(bad)  
  41f042:	rex.X add BYTE PTR [rax],al
  41f045:	add    BYTE PTR [rax],al
  41f047:	add    BYTE PTR [rcx],al
  41f049:	add    BYTE PTR [rax],al
  41f04b:	add    BYTE PTR [rax],al
  41f04d:	add    BYTE PTR [rax],al
  41f04f:	add    BYTE PTR [rsi+0x4206],ah
  41f055:	add    BYTE PTR [rax],al
  41f057:	add    BYTE PTR [rdx],al
  41f059:	add    BYTE PTR [rax],al
  41f05b:	add    BYTE PTR [rax],al
  41f05d:	add    BYTE PTR [rax],al
  41f05f:	add    BYTE PTR [rax+0x4206],ch
  41f065:	add    BYTE PTR [rax],al
  41f067:	add    BYTE PTR [rdx],al
  41f069:	add    BYTE PTR [rax],al
  41f06b:	add    BYTE PTR [rax],al
  41f06d:	add    BYTE PTR [rax],al
  41f06f:	add    BYTE PTR [rdx+0x4206],ch
  41f075:	add    BYTE PTR [rax],al
  41f077:	add    BYTE PTR [rbx],al
  41f079:	add    BYTE PTR [rax],al
  41f07b:	add    BYTE PTR [rax],al
  41f07d:	add    BYTE PTR [rax],al
  41f07f:	add    BYTE PTR [rsi+0x4206],ch
  41f085:	add    BYTE PTR [rax],al
  41f087:	add    BYTE PTR [rbx],al
  41f089:	add    BYTE PTR [rax],al
  41f08b:	add    BYTE PTR [rax],al
  41f08d:	add    BYTE PTR [rax],al
  41f08f:	add    BYTE PTR [rax+0x4206],bh
  41f095:	add    BYTE PTR [rax],al
  41f097:	add    BYTE PTR [rbx],al
  41f099:	add    BYTE PTR [rax],al
  41f09b:	add    BYTE PTR [rax],al
  41f09d:	add    BYTE PTR [rax],al
  41f09f:	add    dl,al
  41f0a1:	(bad)  
  41f0a2:	rex.X add BYTE PTR [rax],al
  41f0a5:	add    BYTE PTR [rax],al
  41f0a7:	add    BYTE PTR [rax+rax*1],al
  41f0aa:	add    BYTE PTR [rax],al
  41f0ac:	add    BYTE PTR [rax],al
  41f0ae:	add    BYTE PTR [rax],al
  41f0b0:	(bad)  
  41f0b1:	(bad)  
  41f0b2:	rex.X add BYTE PTR [rax],al
  41f0b5:	add    BYTE PTR [rax],al
  41f0b7:	add    BYTE PTR [rax+rax*1],al
	...
  41f0fe:	add    BYTE PTR [rax],al
  41f100:	leave  
  41f101:	(bad)  
  41f102:	rex.X add BYTE PTR [rax],al
  41f105:	add    BYTE PTR [rax],al
  41f107:	add    BYTE PTR [rcx],al
  41f109:	add    BYTE PTR [rax],al
  41f10b:	add    BYTE PTR [rax],al
  41f10d:	add    BYTE PTR [rax],al
  41f10f:	add    bl,cl
  41f111:	(bad)  
  41f112:	rex.X add BYTE PTR [rax],al
  41f115:	add    BYTE PTR [rax],al
  41f117:	add    BYTE PTR [rcx],al
  41f119:	add    BYTE PTR [rax],al
  41f11b:	add    BYTE PTR [rax],al
  41f11d:	add    BYTE PTR [rax],al
  41f11f:	add    bl,dl
  41f121:	(bad)  
  41f122:	rex.X add BYTE PTR [rax],al
  41f125:	add    BYTE PTR [rax],al
  41f127:	add    BYTE PTR [rdx],al
  41f129:	add    BYTE PTR [rax],al
  41f12b:	add    BYTE PTR [rax],al
  41f12d:	add    BYTE PTR [rax],al
  41f12f:	add    ch,dl
  41f131:	(bad)  
  41f132:	rex.X add BYTE PTR [rax],al
  41f135:	add    BYTE PTR [rax],al
  41f137:	add    BYTE PTR [rdx],al
  41f139:	add    BYTE PTR [rax],al
  41f13b:	add    BYTE PTR [rax],al
  41f13d:	add    BYTE PTR [rax],al
  41f13f:	add    bl,ah
  41f141:	(bad)  
  41f142:	rex.X add BYTE PTR [rax],al
  41f145:	add    BYTE PTR [rax],al
  41f147:	add    BYTE PTR [rdx],al
  41f149:	add    BYTE PTR [rax],al
  41f14b:	add    BYTE PTR [rax],al
  41f14d:	add    BYTE PTR [rax],al
  41f14f:	add    cl,dh
  41f151:	(bad)  
  41f152:	rex.X add BYTE PTR [rax],al
  41f155:	add    BYTE PTR [rax],al
  41f157:	add    BYTE PTR [rbx],al
  41f159:	add    BYTE PTR [rax],al
  41f15b:	add    BYTE PTR [rax],al
  41f15d:	add    BYTE PTR [rax],al
  41f15f:	add    bl,dh
  41f161:	(bad)  
  41f162:	rex.X add BYTE PTR [rax],al
  41f165:	add    BYTE PTR [rax],al
  41f167:	add    BYTE PTR [rbx],al
  41f169:	add    BYTE PTR [rax],al
  41f16b:	add    BYTE PTR [rax],al
  41f16d:	add    BYTE PTR [rax],al
  41f16f:	add    al,bh
  41f171:	(bad)  
  41f172:	rex.X add BYTE PTR [rax],al
  41f175:	add    BYTE PTR [rax],al
  41f177:	add    BYTE PTR [rbx],al
  41f179:	add    BYTE PTR [rax],al
  41f17b:	add    BYTE PTR [rax],al
  41f17d:	add    BYTE PTR [rax],al
  41f17f:	add    BYTE PTR [rcx],al
  41f181:	(bad)  
  41f182:	rex.X add BYTE PTR [rax],al
  41f185:	add    BYTE PTR [rax],al
  41f187:	add    BYTE PTR [rbx],al
  41f189:	add    BYTE PTR [rax],al
  41f18b:	add    BYTE PTR [rax],al
  41f18d:	add    BYTE PTR [rax],al
  41f18f:	add    BYTE PTR [rdx],cl
  41f191:	(bad)  
  41f192:	rex.X add BYTE PTR [rax],al
  41f195:	add    BYTE PTR [rax],al
  41f197:	add    BYTE PTR [rbx],al
  41f199:	add    BYTE PTR [rax],al
  41f19b:	add    BYTE PTR [rax],al
  41f19d:	add    BYTE PTR [rax],al
  41f19f:	add    BYTE PTR [rdx],dl
  41f1a1:	(bad)  
  41f1a2:	rex.X add BYTE PTR [rax],al
  41f1a5:	add    BYTE PTR [rax],al
  41f1a7:	add    BYTE PTR [rbx],al
  41f1a9:	add    BYTE PTR [rax],al
  41f1ab:	add    BYTE PTR [rax],al
  41f1ad:	add    BYTE PTR [rax],al
  41f1af:	add    BYTE PTR [rbx],bl
  41f1b1:	(bad)  
  41f1b2:	rex.X add BYTE PTR [rax],al
  41f1b5:	add    BYTE PTR [rax],al
  41f1b7:	add    BYTE PTR [rax+rax*1],al
  41f1ba:	add    BYTE PTR [rax],al
  41f1bc:	add    BYTE PTR [rax],al
  41f1be:	add    BYTE PTR [rax],al
  41f1c0:	sbb    eax,0x4207
  41f1c5:	add    BYTE PTR [rax],al
  41f1c7:	add    BYTE PTR [rax+rax*1],al
  41f1ca:	add    BYTE PTR [rax],al
  41f1cc:	add    BYTE PTR [rax],al
  41f1ce:	add    BYTE PTR [rax],al
  41f1d0:	es (bad) 
  41f1d2:	rex.X add BYTE PTR [rax],al
  41f1d5:	add    BYTE PTR [rax],al
  41f1d7:	add    BYTE PTR [rax+rax*1],al
  41f1da:	add    BYTE PTR [rax],al
  41f1dc:	add    BYTE PTR [rax],al
  41f1de:	add    BYTE PTR [rax],al
  41f1e0:	cmp    eax,0x4207
  41f1e5:	add    BYTE PTR [rax],al
  41f1e7:	add    BYTE PTR [rax+rax*1],al
	...
  41f1fe:	add    BYTE PTR [rax],al
  41f200:	rex.WX (bad) 
  41f202:	rex.X add BYTE PTR [rax],al
	...
  41f23d:	add    BYTE PTR [rax],al
  41f23f:	add    BYTE PTR [rax+0x41f2],al
	...
  41f289:	sub    al,0x40
  41f28b:	add    BYTE PTR [rax],al
  41f28d:	add    BYTE PTR [rax],al
  41f28f:	add    BYTE PTR [rax+0x28],al
  41f292:	add    BYTE PTR [rax],al
  41f295:	add    BYTE PTR [rax],al
  41f297:	add    BYTE PTR [rax],al
  41f299:	sub    BYTE PTR [rax+0x0],al
  41f29c:	add    BYTE PTR [rax],al
  41f29e:	add    BYTE PTR [rax],al
  41f2a0:	sub    al,0x40
  41f2a3:	add    BYTE PTR [rax],al
  41f2a5:	add    BYTE PTR [rax],al
  41f2a7:	add    al,dl
  41f2a9:	(bad)  
  41f2aa:	add    BYTE PTR [rax],al
  41f2ad:	add    BYTE PTR [rax],al
  41f2af:	add    BYTE PTR [rax],ah
  41f2b1:	(bad)  
  41f2b2:	add    BYTE PTR [rax],al
  41f2b5:	add    BYTE PTR [rax],al
  41f2b7:	add    al,ah
  41f2b9:	add    BYTE PTR es:[rax],al
  41f2bd:	add    BYTE PTR [rax],al
  41f2bf:	add    BYTE PTR [rax],al
  41f2c1:	repz add BYTE PTR [r8],al
	...
  41f305:	add    BYTE PTR [rax],al
  41f307:	add    BYTE PTR [rax+0x402f],dl
  41f30d:	add    BYTE PTR [rax],al
  41f30f:	add    al,al
  41f311:	sub    eax,0x40
  41f316:	add    BYTE PTR [rax],al
  41f318:	mov    al,0x2c
  41f31a:	add    BYTE PTR [rax],al
  41f31d:	add    BYTE PTR [rax],al
  41f31f:	add    al,ah
  41f321:	sub    al,0x40
  41f323:	add    BYTE PTR [rax],al
  41f325:	add    BYTE PTR [rax],al
  41f327:	add    al,dh
  41f329:	sub    al,0x40
  41f32b:	add    BYTE PTR [rax],al
  41f32d:	add    BYTE PTR [rax],al
  41f32f:	add    BYTE PTR [rax+0x2d],dh
  41f332:	add    BYTE PTR [rax],al
  41f335:	add    BYTE PTR [rax],al
  41f337:	add    BYTE PTR [rax],al
  41f339:	sub    eax,0x40
  41f33e:	add    BYTE PTR [rax],al
  41f340:	js     0x41f353
  41f342:	rex.X add BYTE PTR [rax],al
  41f345:	add    BYTE PTR [rax],al
  41f347:	add    BYTE PTR [rbp+0x11],bh
  41f34a:	rex.X add BYTE PTR [rax],al
  41f34d:	add    BYTE PTR [rax],al
  41f34f:	add    BYTE PTR [rcx+0x4211],al
  41f355:	add    BYTE PTR [rax],al
  41f357:	add    BYTE PTR [rcx+rdx*1+0x42],al
  41f35e:	add    BYTE PTR [rax],al
  41f360:	and    ah,BYTE PTR [rsi]
  41f362:	cmp    al,0x3e
	...
  41f388:	sub    BYTE PTR [rdx+rax*2],0x0
  41f38c:	add    BYTE PTR [rax],al
  41f38e:	add    BYTE PTR [rax],al
  41f390:	test   DWORD PTR [rdx+rax*2],ebp
  41f393:	add    BYTE PTR [rax],al
  41f395:	add    BYTE PTR [rax],al
  41f397:	add    BYTE PTR [rbx+0x422c],dl
  41f39d:	add    BYTE PTR [rax],al
  41f39f:	add    BYTE PTR [rcx+0x422c],bl
  41f3a5:	add    BYTE PTR [rax],al
  41f3a7:	add    BYTE PTR [rax+0x422c],ch
  41f3ad:	add    BYTE PTR [rax],al
  41f3af:	add    BYTE PTR [rsp+rbp*1+0x42],ch
  41f3b6:	add    BYTE PTR [rax],al
  41f3b8:	mov    ecx,0x422c
  41f3bd:	add    BYTE PTR [rax],al
  41f3bf:	add    BYTE PTR [rsi+0x422c],bh
  41f3c5:	add    BYTE PTR [rax],al
  41f3c7:	add    ah,cl
  41f3c9:	sub    al,0x42
  41f3cb:	add    BYTE PTR [rax],al
  41f3cd:	add    BYTE PTR [rax],al
  41f3cf:	add    dh,dl
  41f3d1:	sub    al,0x42
  41f3d3:	add    BYTE PTR [rax],al
  41f3d5:	add    BYTE PTR [rax],al
  41f3d7:	add    cl,ch
  41f3d9:	sub    al,0x42
  41f3db:	add    BYTE PTR [rax],al
  41f3dd:	add    BYTE PTR [rax],al
  41f3df:	add    bh,ch
  41f3e1:	sub    al,0x42
  41f3e3:	add    BYTE PTR [rax],al
  41f3e5:	add    BYTE PTR [rax],al
  41f3e7:	add    dh,dh
  41f3e9:	sub    al,0x42
  41f3eb:	add    BYTE PTR [rax],al
  41f3ed:	add    BYTE PTR [rax],al
  41f3ef:	add    ah,bh
  41f3f1:	sub    al,0x42
	...
  41f3ff:	add    BYTE PTR [rax+0x3e],cl
  41f402:	rex.X add BYTE PTR [rax],al
  41f405:	add    BYTE PTR [rax],al
  41f407:	add    BYTE PTR [rax],ch
  41f409:	add    DWORD PTR [rax],eax
  41f40b:	add    BYTE PTR [rax],al
  41f40d:	add    BYTE PTR [rax],al
  41f40f:	add    BYTE PTR [rbx+0x3e],dl
  41f412:	rex.X add BYTE PTR [rax],al
  41f415:	add    BYTE PTR [rax],al
  41f417:	add    BYTE PTR [rcx],ch
  41f419:	add    DWORD PTR [rax],eax
  41f41b:	add    BYTE PTR [rax],al
  41f41d:	add    BYTE PTR [rax],al
  41f41f:	add    BYTE PTR [rbx+0x3e],bl
  41f422:	rex.X add BYTE PTR [rax],al
  41f425:	add    BYTE PTR [rax],al
  41f427:	add    BYTE PTR [rdx],ch
  41f429:	add    DWORD PTR [rax],eax
  41f42b:	add    BYTE PTR [rax],al
  41f42d:	add    BYTE PTR [rax],al
  41f42f:	add    BYTE PTR [rsi+rdi*1+0x42],ah
  41f433:	add    BYTE PTR [rax],al
  41f435:	add    BYTE PTR [rax],al
  41f437:	add    BYTE PTR [rbx],ch
  41f439:	add    DWORD PTR [rax],eax
  41f43b:	add    BYTE PTR [rax],al
  41f43d:	add    BYTE PTR [rax],al
  41f43f:	add    BYTE PTR [rax+0x3e],dh
  41f442:	rex.X add BYTE PTR [rax],al
  41f445:	add    BYTE PTR [rax],al
  41f447:	add    BYTE PTR [rax],dh
  41f449:	add    DWORD PTR [rax],eax
  41f44b:	add    BYTE PTR [rax],al
  41f44d:	add    BYTE PTR [rax],al
  41f44f:	add    BYTE PTR [rsi+rdi*1+0x42],bh
  41f453:	add    BYTE PTR [rax],al
  41f455:	add    BYTE PTR [rax],al
  41f457:	add    BYTE PTR [rcx+rax*1],ch
  41f45a:	add    BYTE PTR [rax],al
  41f45c:	add    BYTE PTR [rax],al
  41f45e:	add    BYTE PTR [rax],al
  41f460:	mov    bh,BYTE PTR [rsi]
  41f462:	rex.X add BYTE PTR [rax],al
  41f465:	add    BYTE PTR [rax],al
  41f467:	add    BYTE PTR [rip+0x1],ch        # 0x41f46e
  41f46d:	add    BYTE PTR [rax],al
  41f46f:	add    BYTE PTR [rbx+0x423e],dl
  41f475:	add    BYTE PTR [rax],al
  41f477:	add    BYTE PTR [rsi],ch
  41f479:	add    DWORD PTR [rax],eax
  41f47b:	add    BYTE PTR [rax],al
  41f47d:	add    BYTE PTR [rax],al
  41f47f:	add    BYTE PTR [rdi+0x423e],bl
  41f485:	add    BYTE PTR [rax],al
  41f487:	add    BYTE PTR [rdi],ch
  41f489:	add    DWORD PTR [rax],eax
	...
  41f49f:	add    BYTE PTR [rcx],al
	...
  41f4bd:	add    BYTE PTR [rax],al
  41f4bf:	add    BYTE PTR [rdx],dh
  41f4c1:	xchg   esp,eax
  41f4c2:	rex.X add BYTE PTR [rax],al
  41f4c5:	add    BYTE PTR [rax],al
  41f4c7:	add    BYTE PTR [rsi],dh
  41f4c9:	xchg   esp,eax
  41f4ca:	rex.X add BYTE PTR [rax],al
  41f4cd:	add    BYTE PTR [rax],al
  41f4cf:	add    BYTE PTR [rbx],bh
  41f4d1:	xchg   esp,eax
  41f4d2:	rex.X add BYTE PTR [rax],al
  41f4d5:	add    BYTE PTR [rax],al
  41f4d7:	add    BYTE PTR [rax-0x6c],al
  41f4da:	rex.X add BYTE PTR [rax],al
  41f4dd:	add    BYTE PTR [rax],al
  41f4df:	add    BYTE PTR [rsi-0x6c],al
  41f4e2:	rex.X add BYTE PTR [rax],al
  41f4e5:	add    BYTE PTR [rax],al
  41f4e7:	add    BYTE PTR [rdx-0x6c],cl
  41f4ea:	rex.X add BYTE PTR [rax],al
  41f4ed:	add    BYTE PTR [rax],al
  41f4ef:	add    BYTE PTR [rax-0x6c],dl
  41f4f2:	rex.X add BYTE PTR [rax],al
  41f4f5:	add    BYTE PTR [rax],al
  41f4f7:	add    BYTE PTR [rdi-0x6c],dl
  41f4fa:	rex.X add BYTE PTR [rax],al
  41f4fd:	add    BYTE PTR [rax],al
  41f4ff:	add    BYTE PTR [rbp-0x6c],bl
  41f502:	rex.X add BYTE PTR [rax],al
  41f505:	add    BYTE PTR [rax],al
  41f507:	add    BYTE PTR [rsp+rdx*4+0x42],ah
  41f50b:	add    BYTE PTR [rax],al
  41f50d:	add    BYTE PTR [rax],al
  41f50f:	add    BYTE PTR [rcx-0x6c],ch
  41f512:	rex.X add BYTE PTR [rax],al
  41f515:	add    BYTE PTR [rax],al
  41f517:	add    BYTE PTR [rdi-0x6c],ch
  41f51a:	rex.X add BYTE PTR [rax],al
  41f51d:	add    BYTE PTR [rax],al
  41f51f:	add    BYTE PTR [rsi-0x6c],dh
  41f522:	rex.X add BYTE PTR [rax],al
	...
  41f53d:	add    BYTE PTR [rax],al
  41f53f:	add    bh,bh
  41f541:	(bad)  
  41f542:	(bad)  
  41f543:	inc    DWORD PTR [rax]
	...
  41f581:	add    BYTE PTR [rax],al
  41f583:	add    BYTE PTR [rcx],al
  41f585:	add    BYTE PTR [rax],al
  41f587:	add    BYTE PTR [rcx],al
  41f589:	add    BYTE PTR [rax],al
  41f58b:	add    BYTE PTR [rdx],al
  41f58d:	add    BYTE PTR [rax],al
  41f58f:	add    BYTE PTR [rax+rax*1],al
  41f592:	add    BYTE PTR [rax],al
  41f594:	add    al,0x0
  41f596:	add    BYTE PTR [rax],al
  41f598:	or     BYTE PTR [rax],al
  41f59a:	add    BYTE PTR [rax],al
  41f59c:	add    DWORD PTR [rax],eax
  41f59e:	add    BYTE PTR [rax],al
  41f5a0:	add    al,BYTE PTR [rax]
  41f5a2:	add    BYTE PTR [rax],al
  41f5a4:	add    al,0x0
  41f5a6:	add    BYTE PTR [rax],al
  41f5a8:	or     BYTE PTR [rax],al
  41f5aa:	add    BYTE PTR [rax],al
  41f5ac:	or     BYTE PTR [rax],al
  41f5ae:	add    BYTE PTR [rax],al
  41f5b0:	or     BYTE PTR [rax],al
  41f5b2:	add    BYTE PTR [rax],al
  41f5b4:	adc    BYTE PTR [rax],al
	...
  41f5fe:	add    BYTE PTR [rax],al
  41f600:	cmp    al,0x9a
  41f602:	rex.X add BYTE PTR [rax],al
  41f605:	add    BYTE PTR [rax],al
  41f607:	add    BYTE PTR [rbx-0x66],al
  41f60a:	rex.X add BYTE PTR [rax],al
  41f60d:	add    BYTE PTR [rax],al
  41f60f:	add    BYTE PTR [rdx-0x66],cl
  41f612:	rex.X add BYTE PTR [rax],al
  41f615:	add    BYTE PTR [rax],al
  41f617:	add    BYTE PTR [rcx-0x66],dl
  41f61a:	rex.X add BYTE PTR [rax],al
  41f61d:	add    BYTE PTR [rax],al
  41f61f:	add    BYTE PTR [rax-0x66],bl
  41f622:	rex.X add BYTE PTR [rax],al
  41f625:	add    BYTE PTR [rax],al
  41f627:	add    BYTE PTR [rdi-0x66],bl
  41f62a:	rex.X add BYTE PTR [rax],al
  41f62d:	add    BYTE PTR [rax],al
  41f62f:	add    BYTE PTR [rcx-0x66],ch
  41f632:	rex.X add BYTE PTR [rax],al
  41f635:	add    BYTE PTR [rax],al
  41f637:	add    BYTE PTR [rdx-0x66],dh
  41f63a:	rex.X add BYTE PTR [rax],al
  41f63d:	add    BYTE PTR [rax],al
  41f63f:	add    BYTE PTR [rbx-0x66],bh
  41f642:	rex.X add BYTE PTR [rax],al
	...
  41f67d:	add    BYTE PTR [rax],al
  41f67f:	add    BYTE PTR [rdx+rbx*4],bh
  41f682:	rex.X add BYTE PTR [rax],al
  41f685:	add    BYTE PTR [rax],al
  41f687:	add    BYTE PTR [rbx-0x66],al
  41f68a:	rex.X add BYTE PTR [rax],al
  41f68d:	add    BYTE PTR [rax],al
  41f68f:	add    BYTE PTR [rdx-0x66],cl
  41f692:	rex.X add BYTE PTR [rax],al
  41f695:	add    BYTE PTR [rax],al
  41f697:	add    BYTE PTR [rcx-0x66],dl
  41f69a:	rex.X add BYTE PTR [rax],al
  41f69d:	add    BYTE PTR [rax],al
  41f69f:	add    BYTE PTR [rbx+0x429a],al
  41f6a5:	add    BYTE PTR [rax],al
  41f6a7:	add    BYTE PTR [rdi-0x66],bl
  41f6aa:	rex.X add BYTE PTR [rax],al
  41f6ad:	add    BYTE PTR [rax],al
  41f6af:	add    BYTE PTR [rcx-0x66],ch
  41f6b2:	rex.X add BYTE PTR [rax],al
  41f6b5:	add    BYTE PTR [rax],al
  41f6b7:	add    BYTE PTR [rdx-0x66],dh
  41f6ba:	rex.X add BYTE PTR [rax],al
  41f6bd:	add    BYTE PTR [rax],al
  41f6bf:	add    BYTE PTR [rbx-0x66],bh
  41f6c2:	rex.X add BYTE PTR [rax],al
	...
  41f6fd:	add    BYTE PTR [rax],al
  41f6ff:	add    BYTE PTR [rbx+0x429a],cl
  41f705:	add    BYTE PTR [rax],al
  41f707:	add    BYTE PTR [rdx+0x429a],dl
  41f70d:	add    BYTE PTR [rax],al
  41f70f:	add    BYTE PTR [rdx+0x429a],bl
  41f715:	add    BYTE PTR [rax],al
  41f717:	add    BYTE PTR [rdx+0x429a],ah
  41f71d:	add    BYTE PTR [rax],al
  41f71f:	add    BYTE PTR [rbx+0x429a],ch
  41f725:	add    BYTE PTR [rax],al
  41f727:	add    BYTE PTR [rdx+0x429a],dh
  41f72d:	add    BYTE PTR [rax],al
  41f72f:	add    BYTE PTR [rbx+0x429a],bh
  41f735:	add    BYTE PTR [rax],al
  41f737:	add    ch,al
  41f739:	(bad)  
  41f73a:	rex.X add BYTE PTR [rax],al
  41f73d:	add    BYTE PTR [rax],al
  41f73f:	add    dh,cl
  41f741:	(bad)  
  41f742:	rex.X add BYTE PTR [rax],al
  41f745:	add    BYTE PTR [rax],al
  41f747:	add    al,bl
  41f749:	(bad)  
  41f74a:	rex.X add BYTE PTR [rax],al
  41f74d:	add    BYTE PTR [rax],al
  41f74f:	add    al,ah
  41f751:	(bad)  
  41f752:	rex.X add BYTE PTR [rax],al
  41f755:	add    BYTE PTR [rax],al
  41f757:	add    cl,ch
  41f759:	(bad)  
  41f75a:	rex.X add BYTE PTR [rax],al
  41f75d:	add    BYTE PTR [rax],al
  41f75f:	add    bl,dh
  41f761:	(bad)  
  41f762:	rex.X add BYTE PTR [rax],al
  41f765:	add    BYTE PTR [rax],al
  41f767:	add    ch,bh
  41f769:	(bad)  
  41f76a:	rex.X add BYTE PTR [rax],al
  41f76d:	add    BYTE PTR [rax],al
  41f76f:	add    BYTE PTR [rip+0x429b],al        # 0x423a10
  41f775:	add    BYTE PTR [rax],al
  41f777:	add    BYTE PTR [rdi],cl
  41f779:	fwait
  41f77a:	rex.X add BYTE PTR [rax],al
  41f77d:	add    BYTE PTR [rax],al
  41f77f:	add    BYTE PTR [rdi],dl
  41f781:	fwait
  41f782:	rex.X add BYTE PTR [rax],al
	...
  41f7bd:	add    BYTE PTR [rax],al
  41f7bf:	add    BYTE PTR [rcx],al
	...
  41f7cd:	add    BYTE PTR [rax],al
  41f7cf:	add    BYTE PTR [rax],ah
  41f7d1:	or     DWORD PTR [rip+0xa],ecx        # 0x41f7e1
	...
  41f7ff:	add    BYTE PTR [rax-0x8],al
  41f802:	add    BYTE PTR [r8],al
	...
  41f845:	add    BYTE PTR [rax],al
  41f847:	add    BYTE PTR [rax-0x77],dh
  41f84a:	add    BYTE PTR [r8],al
  41f84d:	add    BYTE PTR [rax],al
  41f84f:	add    BYTE PTR [rax-0x79],ah
  41f852:	add    BYTE PTR [r8],al
  41f855:	add    BYTE PTR [rax],al
  41f857:	add    al,dh
  41f859:	xchg   BYTE PTR [rcx+0x0],al
  41f85c:	add    BYTE PTR [rax],al
  41f85e:	add    BYTE PTR [rax],al
  41f860:	mov    al,0x89
  41f862:	add    BYTE PTR [r8],al
  41f865:	add    BYTE PTR [rax],al
  41f867:	add    BYTE PTR [rax],ah
  41f869:	xchg   DWORD PTR [rcx+0x0],eax
  41f86c:	add    BYTE PTR [rax],al
  41f86e:	add    BYTE PTR [rax],al
  41f870:	xor    BYTE PTR [rdi+0x41],al
  41f876:	add    BYTE PTR [rax],al
  41f878:	rex xchg DWORD PTR [rcx+0x0],eax
  41f87c:	add    BYTE PTR [rax],al
  41f87e:	add    BYTE PTR [rax],al
  41f880:	sar    al,0x41
	...
  41f8c7:	add    BYTE PTR [rax-0x5e],ah
  41f8ca:	add    BYTE PTR [r8],al
  41f8cd:	add    BYTE PTR [rax],al
  41f8cf:	add    BYTE PTR [rax],al
  41f8d1:	movabs al,ds:0x9f80000000000041
  41f8da:	add    BYTE PTR [r8],al
  41f8dd:	add    BYTE PTR [rax],al
  41f8df:	add    BYTE PTR [rax+0x41a2],ah
  41f8e5:	add    BYTE PTR [rax],al
  41f8e7:	add    BYTE PTR [rax+0x419f],dh
  41f8ed:	add    BYTE PTR [rax],al
  41f8ef:	add    al,al
  41f8f1:	lahf   
  41f8f2:	add    BYTE PTR [r8],al
  41f8f5:	add    BYTE PTR [rax],al
  41f8f7:	add    al,dl
  41f8f9:	lahf   
  41f8fa:	add    BYTE PTR [r8],al
  41f8fd:	add    BYTE PTR [rax],al
  41f8ff:	add    BYTE PTR [rax-0x19],ch
  41f902:	add    BYTE PTR [r8],al
	...
  41f90d:	add    BYTE PTR [rax],al
  41f90f:	add    bh,bh
  41f911:	(bad)  
  41f912:	(bad)  
  41f913:	(bad)  
  41f914:	(bad)  
  41f915:	(bad)  
  41f916:	(bad)  
  41f917:	inc    DWORD PTR [rax]
  41f919:	add    BYTE PTR [rax],al
  41f91b:	add    BYTE PTR [rax],al
  41f91d:	add    BYTE PTR [rax],al
  41f91f:	add    bh,bh
	...
  41f92d:	add    BYTE PTR [rax],al
  41f92f:	add    BYTE PTR [rdx],al
	...
  41f93d:	add    BYTE PTR [rax],al
  41f93f:	add    bh,bh
  41f941:	(bad)  
  41f942:	(bad)  
  41f943:	(bad)  
  41f944:	(bad)  
  41f945:	(bad)  
  41f946:	(bad)  
  41f947:	(bad)  
  41f948:	(bad)  
  41f949:	(bad)  
  41f94a:	(bad)  
  41f94b:	inc    DWORD PTR [rax]
  41f94d:	add    BYTE PTR [rax],al
  41f94f:	add    BYTE PTR [rbp+0x42b2],dl
  41f955:	add    BYTE PTR [rax],al
  41f957:	add    BYTE PTR [rdi],bh
  41f959:	add    BYTE PTR [rax],al
  41f95b:	add    BYTE PTR [rcx],al
  41f95d:	add    BYTE PTR [rax],al
  41f95f:	add    BYTE PTR [rcx],al
	...
  41f96d:	add    BYTE PTR [rax],al
  41f96f:	add    bh,bh
  41f971:	(bad)  
  41f972:	(bad)  
  41f973:	inc    DWORD PTR [rax]
	...
  41f981:	fld    QWORD PTR [rcx+0x0]
  41f984:	add    BYTE PTR [rax],al
  41f986:	add    BYTE PTR [rax],al
  41f988:	adc    ch,bl
  41f98a:	add    BYTE PTR [r8],al
  41f98d:	add    BYTE PTR [rax],al
  41f98f:	add    BYTE PTR [rdx],dh
  41f991:	movabs ds:0x2b992ddf,al
  41f99a:	add    BYTE PTR [rax],al
  41f99c:	add    BYTE PTR [rax],al
  41f99e:	add    BYTE PTR [rax],al
  41f9a0:	int    0x5d
  41f9a2:	and    dl,dl
  41f9a4:	data16 (bad) 
  41f9a6:	(bad)  
  41f9a7:	inc    DWORD PTR [rax]
  41f9a9:	add    BYTE PTR [rax],al
  41f9ab:	add    BYTE PTR [rax],al
  41f9ad:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000420000 <.rdata>:
  420000:	rex.RB js 0x420073
  420003:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  420008:	and    BYTE PTR [rax+0x72],dh
  42000b:	imul   ebp,DWORD PTR [rbp+0x69],0x65766974
  420012:	and    BYTE PTR [rsi+0x6f],ah
  420015:	jne    0x420085
  420017:	and    BYTE PTR fs:[rbx+0x2e],bh
  42001b:	cs jge 0x42001e
  42001e:	imul   bp,WORD PTR [rsp+rbp*2+0x2d],0x6c3e
  420025:	outs   dx,BYTE PTR gs:[rsi]
  420027:	addr32 je 0x420092
  42002a:	and    BYTE PTR [rip+0x31203d],bh        # 0x73206d
  420030:	(bad)  
  420031:	jae    0x4200a6
  420033:	gs jb  0x4200aa
  420036:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  42003d:	ins    BYTE PTR es:[rdi],dx
  42003e:	jne    0x4200b2
  420040:	cmp    ah,BYTE PTR gs:[rax]
  420043:	and    eax,0x72700073
  420048:	imul   ebp,DWORD PTR [rbp+0x2d],0x74636e3e
  42004f:	jns    0x4200c1
  420051:	and    BYTE PTR gs:[rcx],ah
  420054:	cmp    eax,0x5f434e20
  420059:	rex.XB
  42005a:	rex.WRXB
  42005b:	rex.WRB push r8
  42005d:	rex.WRXB push r13
  42005f:	rex.WRX
  420060:	add    BYTE PTR [rax],r8b
  420063:	add    BYTE PTR [rax],al
  420065:	add    BYTE PTR [rax],al
  420067:	add    BYTE PTR [rcx+riz*2+0x74],al
  42006b:	(bad)  
  42006c:	and    BYTE PTR [rsi+0x61],dh
  42006f:	ins    BYTE PTR es:[rdi],dx
  420070:	jne    0x4200d7
  420072:	and    BYTE PTR [rcx+0x73],ch
  420075:	and    BYTE PTR [rsi+0x6f],ch
  420078:	je     0x42009a
  42007a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42007d:	jae    0x4200e8
  42007f:	jae    0x4200f5
  420081:	outs   dx,BYTE PTR gs:[rsi]
  420083:	je     0x4200a5
  420085:	ja     0x4200f0
  420087:	je     0x4200f1
  420089:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42008d:	and    BYTE PTR [rbp+0x78],ah
  420090:	jo     0x4200f7
  420092:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  420096:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42009a:	cmp    ah,BYTE PTR gs:[rax]
  42009d:	and    eax,0x6f430073
  4200a2:	outs   dx,BYTE PTR ds:[rsi]
  4200a3:	jbe    0x42010a
  4200a5:	jb     0x42011a
  4200a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  4200ae:	outs   dx,BYTE PTR gs:[rsi]
  4200b0:	jne    0x42011f
  4200b2:	and    BYTE PTR [rsi+0x6f],ch
  4200b5:	je     0x4200d7
  4200b7:	jae    0x42012e
  4200b9:	jo     0x42012b
  4200bb:	outs   dx,DWORD PTR ds:[rsi]
  4200bc:	jb     0x420132
  4200be:	gs and BYTE PTR fs:[rax],ch
  4200c2:	jns    0x420129
  4200c4:	je     0x4200ef
  4200c6:	add    BYTE PTR [rax],al
  4200c8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4200ca:	ins    DWORD PTR es:[rdi],dx
  4200cb:	jo     0x42013c
  4200cd:	jne    0x42013d
  4200cf:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
  4200d4:	(bad)  
  4200d5:	and    BYTE PTR [rsi+0x69],ah
  4200d8:	ins    BYTE PTR es:[rdi],dx
  4200d9:	ins    BYTE PTR es:[rdi],dx
  4200da:	and    BYTE PTR [rsi+0x61],dh
  4200dd:	ins    BYTE PTR es:[rdi],dx
  4200de:	jne    0x420145
  4200e0:	and    BYTE PTR [rcx+0x73],ch
  4200e3:	and    BYTE PTR [rsi+0x6f],ch
  4200e6:	je     0x420108
  4200e8:	outs   dx,BYTE PTR gs:[rsi]
  4200ea:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4200ee:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4200f3:	and    BYTE PTR [rbx+0x2e],bh
  4200f6:	cs jge 0x4200f9
  4200f9:	add    BYTE PTR [rax],al
  4200fb:	add    BYTE PTR [rax],al
  4200fd:	add    BYTE PTR [rax],al
  4200ff:	add    BYTE PTR [rbx+0x6f],al
  420102:	ins    DWORD PTR es:[rdi],dx
  420103:	jo     0x420174
  420105:	jne    0x420175
  420107:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
  42010c:	(bad)  
  42010d:	and    BYTE PTR [rbp+0x75],ch
  420110:	jae    0x420186
  420112:	and    BYTE PTR [rdx+0x65],ah
  420115:	and    BYTE PTR [rbp+0x6e],ah
  420118:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  42011c:	gs and BYTE PTR fs:[rcx+0x6e],ch
  420121:	and    BYTE PTR [rbx+0x2e],bh
  420124:	cs jge 0x420127
  420127:	add    BYTE PTR [rcx+riz*2+0x74],al
  42012b:	(bad)  
  42012c:	ins    BYTE PTR es:[rdi],dx
  42012d:	imul   esi,DWORD PTR [rbx+0x74],0x6e6f6c20
  420134:	addr32 gs jb 0x420158
  420138:	je     0x4201a2
  42013a:	(bad)  
  42013b:	outs   dx,BYTE PTR ds:[rsi]
  42013c:	and    BYTE PTR [rax+rbp*2+0x65],dh
  420140:	and    BYTE PTR [rsi+0x75],ch
  420143:	ins    DWORD PTR es:[rdi],dx
  420144:	(bad)  
  420145:	gs jb  0x420168
  420148:	outs   dx,DWORD PTR ds:[rsi]
  420149:	data16 and BYTE PTR [rbx+0x6f],ah
  42014d:	ins    DWORD PTR es:[rdi],dx
  42014e:	jo     0x4201bf
  420150:	jne    0x4201c0
  420152:	and    BYTE PTR fs:[rsi+0x69],ah
  420156:	gs ins BYTE PTR es:[rdi],dx
  420158:	fs jae 0x42015b
  42015b:	add    BYTE PTR [rax],al
  42015d:	add    BYTE PTR [rax],al
  42015f:	add    BYTE PTR [rsi+0x6c],dl
  420162:	outs   dx,BYTE PTR gs:[rsi]
  420164:	and    BYTE PTR [rcx+riz*2+0x74],ah
  420168:	(bad)  
  420169:	and    BYTE PTR [rsi+0x69],ah
  42016c:	ins    BYTE PTR es:[rdi],dx
  42016d:	ins    BYTE PTR es:[rdi],dx
  42016e:	and    BYTE PTR [rsi+0x61],dh
  420171:	ins    BYTE PTR es:[rdi],dx
  420172:	jne    0x4201d9
  420174:	and    BYTE PTR [rcx+0x73],ch
  420177:	and    BYTE PTR [rsi+0x6f],ch
  42017a:	je     0x42019c
  42017c:	outs   dx,BYTE PTR gs:[rsi]
  42017e:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  420182:	gs and BYTE PTR fs:[rcx+0x6e],ch
  420187:	and    BYTE PTR [rbx+0x2e],bh
  42018a:	cs jge 0x42018d
  42018d:	add    BYTE PTR [rax],al
  42018f:	add    BYTE PTR [rsi+0x6c],dl
  420192:	outs   dx,BYTE PTR gs:[rsi]
  420194:	and    BYTE PTR [rcx+riz*2+0x74],ah
  420198:	(bad)  
  420199:	and    BYTE PTR [rbp+0x75],ch
  42019c:	jae    0x420212
  42019e:	and    BYTE PTR [rdx+0x65],ah
  4201a1:	and    BYTE PTR [rbp+0x6e],ah
  4201a4:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4201a8:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4201ad:	and    BYTE PTR [rbx+0x2e],bh
  4201b0:	cs jge 0x4201b3
  4201b3:	add    BYTE PTR [rax],al
  4201b5:	add    BYTE PTR [rax],al
  4201b7:	add    BYTE PTR [rcx+rbp*2+0x6d],al
  4201bb:	outs   dx,BYTE PTR gs:[rsi]
  4201bd:	jae    0x420228
  4201bf:	outs   dx,DWORD PTR ds:[rsi]
  4201c0:	outs   dx,BYTE PTR ds:[rsi]
  4201c1:	gs and BYTE PTR fs:[rsi+0x69],ah
  4201c6:	gs ins BYTE PTR es:[rdi],dx
  4201c8:	fs jae 0x4201eb
  4201cb:	ins    DWORD PTR es:[rdi],dx
  4201cc:	jne    0x420241
  4201ce:	je     0x4201f0
  4201d0:	(bad)  
  4201d1:	and    BYTE PTR gs:[rbp+0x6e],ah
  4201d5:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4201d9:	and    BYTE PTR gs:[rcx+0x6e],ch
  4201dd:	and    BYTE PTR [rbx+0x2e],bh
  4201e0:	cs cs jge 0x4201e4
  4201e4:	add    BYTE PTR [rax],al
  4201e6:	add    BYTE PTR [rax],al
  4201e8:	outs   dx,BYTE PTR gs:[esi]
  4201eb:	gs jb  0x42024f
  4201ee:	je     0x420255
  4201f0:	pop    rdi
  4201f1:	(bad)  
  4201f3:	jae    0x42025a
  4201f5:	je     0x420270
  4201f7:	jo     0x42025e
  4201f9:	cmp    ah,BYTE PTR [rax]
  4201fb:	jne    0x42026b
  4201fd:	gs js  0x420270
  420200:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  420205:	and    BYTE PTR [rbx+0x75],dh
  420208:	(bad)
  42020d:	jae    0x42022f
  42020f:	and    eax,0x65670064
  420214:	outs   dx,BYTE PTR ds:[rsi]
  420215:	gs jb  0x420279
  420218:	je     0x42027f
  42021a:	movsxd eax,DWORD PTR cs:[rax]
  42021d:	add    BYTE PTR [rax],al
  42021f:	add    BYTE PTR [rax+0x61],dh
  420222:	outs   dx,BYTE PTR ds:[rsi]
  420223:	imul   esp,DWORD PTR [rbx+0x28],0x6e656722
  42022a:	gs jb  0x42028e
  42022d:	je     0x420294
  42022f:	pop    rdi
  420230:	(bad)  
  420232:	jae    0x420299
  420234:	je     0x4202af
  420236:	jo     0x42029d
  420238:	cmp    ah,BYTE PTR [rax]
  42023a:	jne    0x4202aa
  42023c:	gs js  0x4202af
  42023f:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  420244:	and    BYTE PTR [rbx+0x75],dh
  420247:	(bad)
  42024c:	jae    0x42026e
  42024e:	and    eax,0x742c2264
  420253:	jae    0x4202ce
  420255:	ins    DWORD PTR es:[rdi],dx
  420256:	sub    eax,0x6275733e
  42025b:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  42025f:	jae    0x42028a
  420261:	add    BYTE PTR [rcx+rbp*2+0x6d],ah
  420265:	jae    0x4202cc
  420267:	je     0x420296
  420269:	outs   dx,BYTE PTR ds:[rsi]
  42026b:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x30203e20
  420273:	add    BYTE PTR [rdx+0x61],dh
  420276:	outs   dx,BYTE PTR ds:[rsi]
  420277:	imul   esp,DWORD PTR [rax],0x3e
  42027a:	and    BYTE PTR [rax],dh
  42027c:	add    BYTE PTR [rax],al
  42027e:	add    BYTE PTR [rax],al
  420280:	imul   ebp,DWORD PTR fs:[rbp+0x69],0x7865646e
  420288:	and    BYTE PTR [rsi],bh
  42028a:	cmp    eax,0x26203020
  42028f:	and    BYTE PTR es:[rcx+rbp*2+0x6d],ah
  420294:	imul   ebp,DWORD PTR [rsi+0x64],0x3c207865
  42029b:	and    BYTE PTR [rdx+0x61],dh
  42029e:	outs   dx,BYTE PTR ds:[rsi]
  42029f:	imul   eax,DWORD PTR [rax],0x0
  4202a2:	add    BYTE PTR [rax],al
  4202a4:	add    BYTE PTR [rax],al
  4202a6:	add    BYTE PTR [rax],al
  4202a8:	sub    BYTE PTR [rcx+rbp*2+0x6d],ah
  4202ac:	imul   ebp,DWORD PTR [rsi+0x64],0x3c207865
  4202b3:	and    BYTE PTR [rsi+0x65],ch
  4202b6:	js     0x42032c
  4202b8:	jne    0x420328
  4202ba:	ins    BYTE PTR es:[rdi],dx
  4202bb:	imul   ebp,DWORD PTR [rbp+0x69],0x20646574
  4202c2:	es and BYTE PTR es:[rax],ch
  4202c6:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x3e2d7465
  4202ce:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x5b736d79
  4202d6:	outs   dx,BYTE PTR ds:[rsi]
  4202d7:	gs js  0x42034e
  4202da:	jne    0x42034a
  4202dc:	ins    BYTE PTR es:[rdi],dx
  4202dd:	imul   ebp,DWORD PTR [rbp+0x69],0x5d646574
  4202e4:	sub    eax,0x6d69643e
  4202e9:	imul   esi,DWORD PTR cs:[rbx+0x75],0x6d696c6e
  4202f1:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x45002929
  4202f9:	js     0x42036b
  4202fb:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  420300:	and    BYTE PTR [rbx+0x2e],bh
  420303:	cs cs jge 0x420327
  420307:	jb     0x42036e
  420309:	jo     0x42037d
  42030b:	gs jae 0x420373
  42030e:	outs   dx,BYTE PTR ds:[rsi]
  42030f:	je     0x42037a
  420311:	outs   dx,BYTE PTR ds:[rsi]
  420312:	and    BYTE PTR [ebp+0x6e],dh
  420316:	ins    BYTE PTR es:[rdi],dx
  420317:	imul   ebp,DWORD PTR [rbp+0x69],0x20646574
  42031e:	ins    BYTE PTR es:[rdi],dx
  42031f:	imul   esi,DWORD PTR [rbx+0x74],0x0
	...
  42032e:	add    BYTE PTR [rax],al
  420330:	push   rbp
  420331:	jae    0x420394
  420333:	cmp    ah,BYTE PTR gs:[eax]
  420337:	and    eax,0x205b2073
  42033c:	sub    eax,0x205d2062
  420341:	pop    rbx
  420342:	and    BYTE PTR [rip+0x205d2063],ch        # 0x209f23ab
  420348:	pop    rbx
  420349:	and    BYTE PTR [rip+0x205d2066],ch        # 0x209f23b5
  42034f:	pop    rbx
  420350:	and    BYTE PTR [rip+0x696b206b],ch        # 0x69ad23c1
  420356:	outs   dx,BYTE PTR ds:[rsi]
  420357:	and    BYTE PTR fs:[rbp+0x20],bl
  42035b:	pop    rbx
  42035c:	and    BYTE PTR [rip+0x205d2078],ch        # 0x209f23da
  420362:	pop    rbx
  420363:	sub    eax,0x74732053
  420368:	jb     0x4203df
  42036a:	movsxd esi,DWORD PTR [rbp+rbp*1+0x66]
  42036e:	outs   dx,DWORD PTR ds:[rsi]
  42036f:	jb     0x4203de
  420371:	(bad)  
  420372:	je     0x4203d1
  420374:	and    BYTE PTR [rbx+0x2d],bl
  420377:	rex.WRB and BYTE PTR [r14+rbp*2],r15b
  42037b:	(bad)  
  42037c:	ins    DWORD PTR es:[rdi],dx
  42037d:	gs and BYTE PTR ds:[rbx+0x20],bl
  420382:	sub    eax,0x756f206f
  420387:	je     0x4203ef
  420389:	imul   ebp,DWORD PTR [rbp+riz*2+0x5d],0x205b2020
  420391:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2e2e
  420398:	and    BYTE PTR cs:[rbp+0x0],bl
  42039c:	outs   dx,BYTE PTR ds:[rsi]
  42039d:	gs je  0x420403
  4203a0:	data16 and BYTE PTR fs:[rcx+rbp*2+0x62],ch
  4203a6:	jb     0x420409
  4203a8:	jb     0x420423
  4203aa:	and    BYTE PTR [rsi+0x65],dh
  4203ad:	jb     0x420422
  4203af:	imul   ebp,DWORD PTR [rdi+0x6e],0x732520
  4203b6:	sub    eax,0x69616d00
  4203bb:	outs   dx,BYTE PTR ds:[rsi]
  4203bc:	add    BYTE PTR [rax],al
  4203be:	add    BYTE PTR [rax],al
  4203c0:	push   rax
  4203c1:	ins    BYTE PTR es:[rdi],dx
  4203c2:	gs (bad) 
  4203c4:	jae    0x42042b
  4203c6:	and    BYTE PTR [rbx+0x70],dh
  4203c9:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4203cd:	jns    0x4203ef
  4203cf:	outs   dx,DWORD PTR ds:[rsi]
  4203d0:	outs   dx,BYTE PTR ds:[rsi]
  4203d1:	ins    BYTE PTR es:[rdi],dx
  4203d2:	jns    0x4203f4
  4203d4:	outs   dx,DWORD PTR ds:[rsi]
  4203d5:	outs   dx,BYTE PTR ds:[rsi]
  4203d6:	and    BYTE PTR gs:[rcx+riz*2+0x6e],ch
  4203db:	addr32 jne 0x42043f
  4203de:	or     al,BYTE PTR gs:[eax]
  4203e2:	add    BYTE PTR [rax],al
  4203e4:	add    BYTE PTR [rax],al
  4203e6:	add    BYTE PTR [rax],al
  4203e8:	sub    eax,0x73692063
  4203ed:	and    BYTE PTR [rbp+riz*2+0x70],ah
  4203f1:	jb     0x420458
  4203f3:	movsxd esp,DWORD PTR [rcx+0x74]
  4203f6:	gs cmp ah,BYTE PTR fs:[rax]
  4203fa:	jo     0x420468
  4203fc:	gs (bad) 
  4203fe:	jae    0x420465
  420400:	and    BYTE PTR [rbp+0x73],dh
  420403:	and    BYTE PTR gs:[rip+0xa636c],ch        # 0x4c6776
  42040a:	add    BYTE PTR [rax],al
  42040c:	add    BYTE PTR [rax],al
  42040e:	add    BYTE PTR [rax],al
  420410:	sub    eax,0x73692066
  420415:	and    BYTE PTR [rbp+riz*2+0x70],ah
  420419:	jb     0x420480
  42041b:	movsxd esp,DWORD PTR [rcx+0x74]
  42041e:	gs cmp ah,BYTE PTR fs:[rax]
  420422:	jo     0x420490
  420424:	gs (bad) 
  420426:	jae    0x42048d
  420428:	and    BYTE PTR [rbp+0x73],dh
  42042b:	and    BYTE PTR gs:[rip+0x3737666c],ch        # 0x37796a9e
  420432:	or     al,BYTE PTR [rax]
  420434:	movsxd esp,DWORD PTR cs:[rsi+riz*2+0x0]
  420439:	and    eax,0x6f203a73
  42043e:	jne    0x4204b4
  420440:	and    BYTE PTR [rdi+0x66],ch
  420443:	and    BYTE PTR [rbp+0x65],ch
  420446:	ins    DWORD PTR es:[rdi],dx
  420447:	outs   dx,DWORD PTR ds:[rsi]
  420448:	jb     0x4204c3
  42044a:	add    BYTE PTR [rax+0x62],ch
  42044d:	movsxd esp,DWORD PTR [rsi+0x6b]
  420450:	cmp    ch,BYTE PTR [rdx+rdi*1+0x6e]
  420454:	outs   dx,DWORD PTR ds:[rsi]
  420455:	cmp    dh,BYTE PTR [rsi+0x3a]
  420458:	js     0x4204be
  42045a:	rex.WRB cmp r8b,BYTE PTR [r10+rdi*1+0x42]
  42045f:	cmp    dl,BYTE PTR [rax+0x0]
  420462:	rex.WRB (bad) 
  420464:	imul   ebp,DWORD PTR [rsi+0x0],0x3a732500
  42046b:	and    BYTE PTR [rdi+0x6e],ch
  42046e:	ins    BYTE PTR es:[rdi],dx
  42046f:	jns    0x420491
  420471:	outs   dx,DWORD PTR ds:[rsi]
  420472:	outs   dx,BYTE PTR ds:[rsi]
  420473:	and    BYTE PTR gs:[rcx+0x6e],ch
  420477:	jo     0x4204ee
  420479:	je     0x42049b
  42047b:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7261
  420482:	addr32 jne 0x4204f2
  420485:	outs   dx,BYTE PTR gs:[rsi]
  420487:	je     0x4204a9
  420489:	jo     0x4204f0
  42048b:	jb     0x4204fa
  42048d:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x720064
  420495:	add    BYTE PTR [rax],al
  420497:	add    BYTE PTR [rbx+0x61],ah
  42049a:	outs   dx,BYTE PTR ds:[rsi]
  42049b:	(bad)  
  42049c:	je     0x4204be
  42049e:	outs   dx,DWORD PTR ds:[rsi]
  42049f:	jo     0x420506
  4204a1:	outs   dx,BYTE PTR ds:[rsi]
  4204a2:	and    BYTE PTR [rsi+0x69],ah
  4204a5:	ins    BYTE PTR es:[rdi],dx
  4204a6:	and    BYTE PTR gs:[rip+0x6f662073],ah        # 0x6fa82520
  4204ad:	jb     0x4204cf
  4204af:	jb     0x420516
  4204b1:	(bad)  
  4204b2:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x203a
  4204ba:	add    BYTE PTR [rax],al
  4204bc:	add    BYTE PTR [rax],al
  4204be:	add    BYTE PTR [rax],al
  4204c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4204c2:	jo     0x420539
  4204c4:	je     0x4204e6
  4204c6:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f63
  4204cd:	outs   dx,BYTE PTR ds:[rsi]
  4204ce:	je     0x420531
  4204d0:	imul   ebp,DWORD PTR [rsi+0x73],0x42206120
  4204d7:	rex.WRXB
  4204d8:	rex.WRB and BYTE PTR [r9+0x6e],r13b
  4204dc:	imul   esp,DWORD PTR fs:[rbx+0x61],0x676e6974
  4204e4:	and    BYTE PTR [rcx+0x20],ah
  4204e7:	outs   dx,BYTE PTR ds:[rsi]
  4204e8:	outs   dx,DWORD PTR ds:[rsi]
  4204e9:	outs   dx,BYTE PTR ds:[rsi]
  4204ea:	sub    eax,0x38465455
  4204ef:	and    BYTE PTR [rbp+0x6e],ah
  4204f2:	movsxd ebp,DWORD PTR [rdi+0x64]
  4204f5:	imul   ebp,DWORD PTR [rsi+0x67],0xa
  4204fc:	add    BYTE PTR [rax],al
  4204fe:	add    BYTE PTR [rax],al
  420500:	rex.WX (bad) 
  420502:	jbe    0x420565
  420504:	and    BYTE PTR [rdi+0x72],ch
  420507:	and    BYTE PTR [rsi+0x6f],al
  42050a:	jb     0x420580
  42050c:	jb     0x42056f
  42050e:	outs   dx,BYTE PTR ds:[rsi]
  42050f:	and    BYTE PTR [rdx+0x65],dh
  420512:	jno    0x420589
  420514:	imul   esi,DWORD PTR [rdx+0x65],0x6c632073
  42051b:	(bad)  
  42051c:	jae    0x420591
  42051e:	imul   esp,DWORD PTR [rbx+0x20],0x65646f6d
  420525:	ins    BYTE PTR es:[rdi],dx
  420526:	and    BYTE PTR [rbx+0x44],al
  420529:	rex.WR and BYTE PTR [rcx+0x6e],r13b
  42052d:	jo     0x4205a4
  42052f:	je     0x420531
  420531:	add    BYTE PTR [rax],al
  420533:	add    BYTE PTR [rax],al
  420535:	add    BYTE PTR [rax],al
  420537:	add    BYTE PTR [rip+0x726f206b],ch        # 0x72b125a8
  42053d:	and    BYTE PTR [rdi+0x46],bl
  420540:	outs   dx,DWORD PTR ds:[rsi]
  420541:	jb     0x4205b0
  420543:	(bad)  
  420544:	je     0x420566
  420546:	movsxd ebp,DWORD PTR [rdi+0x6e]
  420549:	data16 ins BYTE PTR es:[rdi],dx
  42054b:	imul   esp,DWORD PTR [rbx+0x74],0x69772073
  420552:	je     0x4205bc
  420554:	and    BYTE PTR [rbp+0x6e],ah
  420557:	push   0x65636e61
  42055c:	and    BYTE PTR fs:[rbx+0x44],al
  420560:	rex.WR and BYTE PTR [rcx+0x6e],r13b
  420564:	jo     0x4205db
  420566:	je     0x420568
  420568:	xor    BYTE PTR [rax],al
  42056a:	(bad)  
  42056b:	jae    0x4205e0
  42056d:	gs jb  0x4205e4
  420570:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  420577:	ins    BYTE PTR es:[rdi],dx
  420578:	jne    0x4205ec
  42057a:	cmp    ah,BYTE PTR gs:[rax]
  42057d:	and    eax,0x73250073
  420582:	cmp    ah,BYTE PTR [rax]
  420584:	outs   dx,DWORD PTR ds:[rsi]
  420585:	jne    0x4205fb
  420587:	jo     0x4205fe
  420589:	je     0x4205ab
  42058b:	ins    BYTE PTR es:[rdi],dx
  42058c:	(bad)  
  42058d:	outs   dx,BYTE PTR ds:[rsi]
  42058e:	addr32 jne 0x4205f2
  420591:	and    BYTE PTR gs:[eip+0x6f6e2073],ah        # 0x6fb0260c
  420599:	je     0x4205bb
  42059b:	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
  4205a2:	outs   dx,BYTE PTR ds:[rsi]
  4205a3:	je     0x42060a
  4205a5:	add    BYTE PTR fs:[rcx+0x6e],cl
  4205a9:	jbe    0x42060c
  4205ab:	ins    BYTE PTR es:[rdi],dx
  4205ac:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x616d726f
  4205b4:	je     0x4205f0
  4205b6:	and    BYTE PTR [rip+0x73],ah        # 0x42062f
  4205bc:	hlt    
  4205bd:	(bad)  
  4205bf:	(bad)  
  4205c0:	(bad)  
  4205c1:	fcos   
  4205c3:	(bad)  
  4205c4:	(bad)  
  4205c5:	fcos   
  4205c7:	call   rsp
  4205c9:	(bad)  
  4205cb:	(bad)  
  4205cc:	(bad)  
  4205cd:	fcos   
  4205cf:	push   QWORD PTR [rbx+rbx*8-0x26c00001]
  4205d6:	(bad)  
  4205d7:	(bad)  
  4205d8:	(bad)  
  4205d9:	fcos   
  4205db:	(bad)  
  4205dc:	(bad)  
  4205dd:	fcos   
  4205df:	(bad)  
  4205e0:	(bad)  
  4205e1:	fcos   
  4205e3:	(bad)  
  4205e4:	(bad)  
  4205e5:	fcos   
  4205e7:	(bad)  
  4205e8:	(bad)  
  4205e9:	fcos   
  4205eb:	(bad)  
  4205ec:	(bad)  
  4205ed:	fcos   
  4205ef:	(bad)  
  4205f0:	(bad)  
  4205f1:	fcos   
  4205f3:	call   QWORD PTR [rbx+rbx*8-0x26c00001]
  4205fa:	(bad)  
  4205fb:	(bad)  
  4205fc:	(bad)  
  4205fd:	fcos   
  4205ff:	inc    DWORD PTR [rbx+rbx*8-0x26c00001]
  420606:	(bad)  
  420607:	(bad)  
  420608:	(bad)  
  420609:	fcos   
  42060b:	(bad)  
  42060c:	(bad)  
  42060d:	fcos   
  42060f:	(bad)  
  420610:	(bad)  
  420611:	fcos   
  420613:	(bad)  
  420614:	(bad)  
  420615:	fcos   
  420617:	(bad)  
  420618:	(bad)  
  420619:	fcos   
  42061b:	(bad)  
  42061c:	(bad)  
  42061d:	fcos   
  42061f:	(bad)  
  420620:	(bad)  
  420621:	fcos   
  420623:	(bad)  
  420624:	(bad)  
  420625:	fcos   
  420627:	(bad)  
  420628:	(bad)  
  420629:	fcos   
  42062b:	(bad)  
  42062c:	(bad)  
  42062d:	fcos   
  42062f:	(bad)  
  420630:	(bad)  
  420631:	fcos   
  420633:	(bad)  
  420634:	(bad)  
  420635:	fcos   
  420637:	(bad)  
  420638:	(bad)  
  420639:	fcos   
  42063b:	(bad)  
  42063c:	(bad)  
  42063d:	fcos   
  42063f:	(bad)  
  420640:	(bad)  
  420641:	fcos   
  420643:	(bad)  
  420644:	(bad)  
  420645:	fcos   
  420647:	jmp    QWORD PTR [rsi-0x25]
  42064a:	(bad)  
  42064b:	jmp    QWORD PTR [rsi]
  42064d:	(bad)  
  42064f:	call   QWORD PTR [rbx+rbx*8]
  420652:	(bad)  
  420653:	(bad)  
  420654:	(bad)  
  420655:	fcos   
  420657:	call   rsp
  420659:	(bad)  
  42065b:	(bad)  
  42065c:	(bad)  
  42065d:	fcos   
  42065f:	inc    esp
  420661:	(bad)  
  420663:	(bad)  
  420664:	(bad)  
  420665:	fcos   
  420667:	(bad)  
  420668:	(bad)  
  420669:	fcos   
  42066b:	call   QWORD PTR [rdx+rbx*8-0x1]
  42066f:	call   rsp
  420671:	fcos   
  420673:	(bad)  
  420674:	(bad)  
  420675:	fcos   
  420677:	jmp    QWORD PTR [rcx+rbx*8-0x267b0001]
  42067e:	(bad)  
  42067f:	(bad)  
  420680:	(bad)  
  420681:	fcos   
  420683:	(bad)  
  420684:	(bad)  
  420685:	fcos   
  420687:	(bad)  
  420688:	(bad)  
  420689:	fcos   
  42068b:	(bad)  
  42068c:	(bad)  
  42068d:	fcos   
  42068f:	(bad)  
  420690:	(bad)  
  420691:	fcos   
  420693:	(bad)  
  420694:	(bad)  
  420695:	fcos   
  420697:	call   QWORD PTR [rdx+rbx*8-0x1]
  42069b:	(bad)  
  42069c:	(bad)  
  42069d:	fcos   
  42069f:	push   QWORD PTR [rcx+rbx*8-0x1]
  4206a3:	jmp    QWORD PTR [rdx+0x0]
  4206a6:	movsxd eax,DWORD PTR [rax]
  4206a8:	rex.XB add BYTE PTR [r14+0x37],spl
  4206ac:	(bad)  
  4206ad:	add    BYTE PTR [rsi+0x6f],ah
  4206b0:	jb     0x420726
  4206b2:	jb     0x420715
  4206b4:	outs   dx,BYTE PTR ds:[rsi]
  4206b5:	(bad)  
  4206b6:	(bad)  
  4206b7:	add    BYTE PTR [rsi+0x6f],al
  4206ba:	jb     0x420730
  4206bc:	jb     0x42071f
  4206be:	outs   dx,BYTE PTR ds:[rsi]
  4206bf:	(bad)  
  4206c0:	(bad)  
  4206c1:	add    BYTE PTR [rdx+0x0],ch
  4206c4:	push   0x61
  4206c6:	jbe    0x420729
  4206c8:	add    BYTE PTR [rcx],dh
  4206ca:	add    BYTE PTR [rbx+0x6c],ah
  4206cd:	(bad)  
  4206ce:	jae    0x420743
  4206d0:	imul   esp,DWORD PTR [rbx+0x0],0x34360032
  4206d7:	sub    eax,0x2d746962
  4206dc:	outs   dx,DWORD PTR ds:[rsi]
  4206dd:	data16 data16 jae 0x420746
  4206e1:	je     0x4206e3
  4206e3:	ss xor al,0x2d
  4206e6:	(bad)  
  4206e7:	imul   esi,DWORD PTR [rax+riz*1+0x6f],0x65736666
  4206ef:	je     0x4206f1
  4206f1:	xor    eax,DWORD PTR [rax]
  4206f3:	push   0x356664
  4206f8:	outs   dx,BYTE PTR ds:[rsi]
  4206f9:	gs je  0x42073f
  4206fc:	rex.R
  4206fd:	rex.RX sub eax,0x656e0034
  420703:	je     0x420768
  420705:	fs sub ax,0x34
  42070a:	outs   dx,BYTE PTR ds:[rsi]
  42070b:	gs je  0x420771
  42070e:	fs data16 xor al,0x0
  420712:	outs   dx,BYTE PTR gs:[rsi]
  420714:	push   0x65636e61
  420719:	add    BYTE PTR fs:[rax+rax*1],dh
  42071d:	push   0x2d356664
  420722:	outs   dx,BYTE PTR ds:[rsi]
  420723:	movsxd esi,DWORD PTR [rbx]
  420725:	add    BYTE PTR [rsi+0x65],ch
  420728:	je     0x42076d
  42072a:	rex.R
  42072b:	rex.RX sub eax,0x6c632034
  420731:	(bad)  
  420732:	jae    0x4207a7
  420734:	imul   esp,DWORD PTR [rbx+0x20],0x65646f6d
  42073b:	ins    BYTE PTR es:[rdi],dx
  42073c:	add    BYTE PTR [rbp+0x6e],ah
  42073f:	push   0x65636e61
  420744:	fs sub eax,0x33636e
  42074a:	outs   dx,BYTE PTR cs:[rsi]
  42074c:	movsxd eax,DWORD PTR [rax]
  42074e:	add    BYTE PTR [rax],al
  420750:	jae    0x4207c6
  420752:	(bad)  
  420753:	je     0x4207be
  420755:	movsxd esp,DWORD PTR [rax]
  420757:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42075a:	jae    0x4207d0
  42075c:	and    BYTE PTR [rip+0x6c762073],ah        # 0x6cb827d5
  420762:	outs   dx,BYTE PTR gs:[rsi]
  420764:	pop    rdi
  420765:	and    eax,0x205d5b75
  42076a:	cmp    eax,0x7d007b20
  42076f:	and    BYTE PTR [rbx],bh
  420771:	add    BYTE PTR [rbx+0x25],bh
  420774:	jne    0x4207a2
  420776:	sub    BYTE PTR [rsi+0x6f],dh
  420779:	imul   esp,DWORD PTR [rdx+rbp*1+0x29],0x6e656c76
  420781:	pop    rdi
  420782:	and    eax,0x27007d75
  420787:	pop    rsp
  420788:	(bad)  
  420789:	(bad)  
  42078a:	add    BYTE PTR [rdi],ah
  42078c:	and    eax,0x25002773
  420791:	push   0x25006468
  420796:	push   0x64250064
  42079b:	add    BYTE PTR [rsi+0x61],ch
  42079e:	outs   dx,BYTE PTR ds:[rsi]
  42079f:	data16 add BYTE PTR [rip+0x616e0066],ah        # 0x61b0080c
  4207a6:	outs   dx,BYTE PTR ds:[rsi]
  4207a7:	add    BYTE PTR [rip+0x2500666c],ah        # 0x25426e19
  4207ad:	push   0x25007568
  4207b2:	push   0x75250075
  4207b7:	push   rbp
  4207b8:	add    BYTE PTR [rip+0x4c646c6c],ah        # 0x4ca6742a
  4207be:	rex.WR add BYTE PTR [rip+0x4c756c6c],r12b        # 0x4cb77431
  4207c5:	rex.WR push rbp
  4207c7:	add    BYTE PTR [rip+0x554e0073],ah        # 0x55900840
  4207cd:	rex.WR
  4207ce:	rex.WR add BYTE PTR [rsi+0x63],r13b
  4207d2:	jae    0x420848
  4207d4:	jns    0x420846
  4207d6:	cmp    ah,BYTE PTR gs:[rax]
  4207d9:	(bad)
  4207de:	jns    0x420850
  4207e0:	and    BYTE PTR gs:[rbx+0x6f],ah
  4207e4:	fs cmp ah,BYTE PTR gs:[rax]
  4207e8:	and    eax,0x64630064
  4207ed:	(bad)  
  4207ee:	je     0x420851
  4207f0:	movsxd eax,DWORD PTR cs:[rax]
  4207f3:	add    BYTE PTR [rax],al
  4207f5:	add    BYTE PTR [rax],al
  4207f7:	add    BYTE PTR [rax+0x61],dh
  4207fa:	outs   dx,BYTE PTR ds:[rsi]
  4207fb:	imul   esp,DWORD PTR [rbx+0x28],0x73636e22
  420802:	je     0x42087d
  420804:	jo     0x42086b
  420806:	cmp    ah,BYTE PTR [rax]
  420808:	(bad)
  42080d:	jns    0x42087f
  42080f:	and    BYTE PTR gs:[rbx+0x6f],ah
  420813:	fs cmp ah,BYTE PTR gs:[rax]
  420817:	and    eax,0x632c2264
  42081c:	outs   dx,DWORD PTR ds:[rsi]
  42081d:	outs   dx,BYTE PTR ds:[rsi]
  42081e:	sub    eax,0x74636e3e
  420823:	jns    0x420895
  420825:	sub    DWORD PTR gs:[rax],eax
  420828:	or     BYTE PTR [rbx],ah
  42082a:	(bad)  
  42082b:	call   FWORD PTR [rcx-0x470001e0]
  420831:	and    dh,bh
  420833:	(bad)  
  420834:	call   0x9420659
  420839:	and    esi,edi
  42083b:	jmp    FWORD PTR [rax]
  42083d:	and    esi,edi
  42083f:	call   FWORD PTR [rax+0x21]
  420842:	(bad)  
  420843:	jmp    FWORD PTR [rax-0x370001df]
  420849:	and    esi,edi
  42084b:	(bad)  
  42084c:	call   0x9420672
  420851:	and    bh,dh
  420853:	jmp    FWORD PTR [rax]
  420855:	and    bh,dh
  420857:	dec    DWORD PTR [rax+0x22]
  42085a:	(bad)  
  42085b:	dec    DWORD PTR [rax]
  42085d:	and    edi,esi
  42085f:	(bad)  
  420860:	js     0x420884
  420862:	(bad)  
  420863:	dec    DWORD PTR [rax]
  420865:	and    edi,esi
  420867:	dec    DWORD PTR [rax]
  420869:	and    edi,esi
  42086b:	dec    DWORD PTR [rax]
  42086d:	and    edi,esi
  42086f:	dec    DWORD PTR [rax]
  420871:	and    edi,esi
  420873:	dec    DWORD PTR [rax]
  420875:	and    edi,esi
  420877:	dec    DWORD PTR [rax]
  420879:	and    edi,esi
  42087b:	dec    DWORD PTR [rax]
  42087d:	and    edi,esi
  42087f:	dec    DWORD PTR [rax]
  420881:	and    edi,esi
  420883:	dec    DWORD PTR [rax]
  420885:	and    edi,esi
  420887:	dec    DWORD PTR [rax]
  420889:	and    edi,esi
  42088b:	dec    DWORD PTR [rax]
  42088d:	and    edi,esi
  42088f:	dec    DWORD PTR [rax]
  420891:	and    edi,esi
  420893:	dec    DWORD PTR [rax]
  420895:	and    edi,esi
  420897:	dec    DWORD PTR [rax]
  420899:	and    edi,esi
  42089b:	dec    DWORD PTR [rax]
  42089d:	and    edi,esi
  42089f:	dec    DWORD PTR [rax]
  4208a1:	and    edi,esi
  4208a3:	dec    DWORD PTR [rax]
  4208a5:	and    edi,esi
  4208a7:	dec    DWORD PTR [rax+0x22]
  4208aa:	(bad)  
  4208ab:	dec    DWORD PTR [rax]
  4208ad:	and    edi,esi
  4208af:	dec    DWORD PTR [rax]
  4208b1:	and    edi,esi
  4208b3:	dec    DWORD PTR [rax]
  4208b5:	and    edi,esi
  4208b7:	dec    DWORD PTR [rax]
  4208b9:	and    edi,esi
  4208bb:	dec    DWORD PTR [rax]
  4208bd:	and    edi,esi
  4208bf:	dec    DWORD PTR [rax]
  4208c1:	and    edi,esi
  4208c3:	dec    DWORD PTR [rax]
  4208c5:	and    edi,esi
  4208c7:	dec    DWORD PTR [rax]
  4208c9:	and    edi,esi
  4208cb:	dec    DWORD PTR [rax]
  4208cd:	and    edi,esi
  4208cf:	dec    DWORD PTR [rax]
  4208d1:	and    edi,esi
  4208d3:	dec    DWORD PTR [rax]
  4208d5:	and    edi,esi
  4208d7:	dec    DWORD PTR [rax]
  4208d9:	and    edi,esi
  4208db:	dec    DWORD PTR [rax]
  4208dd:	and    edi,esi
  4208df:	dec    DWORD PTR [rax]
  4208e1:	and    edi,esi
  4208e3:	dec    DWORD PTR [rax]
  4208e5:	and    edi,esi
  4208e7:	dec    DWORD PTR [rax]
  4208e9:	and    edi,esi
  4208eb:	dec    DWORD PTR [rax]
  4208ed:	and    edi,esi
  4208ef:	dec    DWORD PTR [rax]
  4208f1:	and    edi,esi
  4208f3:	dec    DWORD PTR [rax]
  4208f5:	and    edi,esi
  4208f7:	dec    DWORD PTR [rax]
  4208f9:	and    edi,esi
  4208fb:	dec    DWORD PTR [rax]
  4208fd:	and    edi,esi
  4208ff:	dec    DWORD PTR [rax]
  420901:	and    edi,esi
  420903:	dec    DWORD PTR [rax]
  420905:	and    edi,esi
  420907:	dec    DWORD PTR [rax]
  420909:	and    edi,esi
  42090b:	dec    DWORD PTR [rax]
  42090d:	and    edi,esi
  42090f:	dec    DWORD PTR [rax]
  420911:	and    edi,esi
  420913:	dec    DWORD PTR [rax]
  420915:	and    edi,esi
  420917:	dec    DWORD PTR [rax]
  420919:	and    edi,esi
  42091b:	dec    DWORD PTR [rax]
  42091d:	and    edi,esi
  42091f:	dec    DWORD PTR [rax]
  420921:	and    edi,esi
  420923:	dec    DWORD PTR [rax]
  420925:	and    edi,esi
  420927:	dec    DWORD PTR [rax]
  420929:	and    edi,esi
  42092b:	dec    DWORD PTR [rax]
  42092d:	and    edi,esi
  42092f:	dec    DWORD PTR [rax]
  420931:	and    edi,esi
  420933:	dec    DWORD PTR [rax]
  420935:	and    edi,esi
  420937:	dec    DWORD PTR [rax]
  420939:	and    edi,esi
  42093b:	dec    DWORD PTR [rax]
  42093d:	and    edi,esi
  42093f:	dec    DWORD PTR [rax]
  420941:	and    edi,esi
  420943:	dec    DWORD PTR [rax]
  420945:	and    edi,esi
  420947:	dec    DWORD PTR [rax]
  420949:	and    edi,esi
  42094b:	dec    DWORD PTR [rax]
  42094d:	and    edi,esi
  42094f:	dec    DWORD PTR [rax]
  420951:	and    edi,esi
  420953:	dec    DWORD PTR [rax]
  420955:	and    edi,esi
  420957:	dec    DWORD PTR [rax]
  420959:	and    edi,esi
  42095b:	dec    DWORD PTR [rax]
  42095d:	and    edi,esi
  42095f:	dec    DWORD PTR [rax]
  420961:	and    edi,esi
  420963:	dec    DWORD PTR [rax]
  420965:	and    edi,esi
  420967:	dec    DWORD PTR [rax]
  420969:	and    edi,esi
  42096b:	dec    DWORD PTR [rax]
  42096d:	and    edi,esi
  42096f:	dec    DWORD PTR [rax]
  420971:	and    edi,esi
  420973:	dec    DWORD PTR [rax]
  420975:	and    edi,esi
  420977:	dec    DWORD PTR [rax]
  420979:	and    edi,esi
  42097b:	dec    DWORD PTR [rax]
  42097d:	and    edi,esi
  42097f:	dec    DWORD PTR [rax]
  420981:	and    edi,esi
  420983:	dec    DWORD PTR [rax]
  420985:	and    edi,esi
  420987:	dec    DWORD PTR [rax]
  420989:	and    edi,esi
  42098b:	dec    DWORD PTR [rax]
  42098d:	and    edi,esi
  42098f:	dec    DWORD PTR [rax]
  420991:	and    edi,esi
  420993:	dec    DWORD PTR [rax]
  420995:	and    edi,esi
  420997:	dec    DWORD PTR [rax]
  420999:	and    edi,esi
  42099b:	dec    DWORD PTR [rax]
  42099d:	and    edi,esi
  42099f:	dec    DWORD PTR [rax]
  4209a1:	and    edi,esi
  4209a3:	dec    DWORD PTR [rax]
  4209a5:	and    edi,esi
  4209a7:	dec    DWORD PTR [rax]
  4209a9:	and    edi,esi
  4209ab:	dec    DWORD PTR [rax]
  4209ad:	and    edi,esi
  4209af:	dec    DWORD PTR [rax]
  4209b1:	and    edi,esi
  4209b3:	dec    DWORD PTR [rax]
  4209b5:	and    edi,esi
  4209b7:	dec    DWORD PTR [rax]
  4209b9:	and    edi,esi
  4209bb:	dec    DWORD PTR [rax]
  4209bd:	and    edi,esi
  4209bf:	dec    DWORD PTR [rax]
  4209c1:	and    edi,esi
  4209c3:	dec    DWORD PTR [rax]
  4209c5:	and    edi,esi
  4209c7:	dec    DWORD PTR [rax]
  4209c9:	and    edi,esi
  4209cb:	call   FWORD PTR [rax+0x20]
  4209ce:	(bad)  
  4209cf:	jmp    FWORD PTR [rax+riz*1]
	...
  4209de:	add    BYTE PTR [rax],al
  4209e0:	(bad)  
  4209e1:	imul   ebp,DWORD PTR [rsi+0x5f],0x736e6f63
  4209e8:	je     0x420a4b
  4209ea:	outs   dx,BYTE PTR ds:[rsi]
  4209eb:	je     0x420a27
  4209ed:	and    BYTE PTR [rbp+0x6e],dh
  4209f0:	gs js  0x420a63
  4209f3:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4209f8:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4209fc:	cmp    ah,BYTE PTR gs:[rax]
  4209ff:	and    eax,0x69620064
  420a04:	outs   dx,BYTE PTR ds:[rsi]
  420a05:	fs (bad) 
  420a07:	je     0x420a6a
  420a09:	movsxd eax,DWORD PTR cs:[rax]
  420a0c:	add    BYTE PTR [rax],al
  420a0e:	add    BYTE PTR [rax],al
  420a10:	jo     0x420a73
  420a12:	outs   dx,BYTE PTR ds:[rsi]
  420a13:	imul   esp,DWORD PTR [rbx+0x28],0x6e696222
  420a1a:	pop    rdi
  420a1b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  420a1e:	jae    0x420a94
  420a20:	(bad)  
  420a21:	outs   dx,BYTE PTR ds:[rsi]
  420a22:	je     0x420a5e
  420a24:	and    BYTE PTR [rbp+0x6e],dh
  420a27:	gs js  0x420a9a
  420a2a:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  420a2f:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  420a33:	cmp    ah,BYTE PTR gs:[rax]
  420a36:	and    eax,0x632c2264
  420a3b:	outs   dx,DWORD PTR ds:[rsi]
  420a3c:	outs   dx,BYTE PTR ds:[rsi]
  420a3d:	sub    eax,0x74636e3e
  420a42:	jns    0x420ab4
  420a44:	sub    DWORD PTR gs:[rax],eax
  420a47:	add    al,ch
  420a49:	and    al,0xfe
  420a4b:	(bad)  
  420a4c:	mov    ebp,0xbdfffe23
  420a51:	and    edi,esi
  420a53:	(bad)  
  420a54:	sti    
  420a55:	and    edi,esi
  420a57:	(bad)  
  420a58:	fsub   QWORD PTR [rbx]
  420a5a:	(bad)  
  420a5b:	(bad)  
  420a5c:	fsub   QWORD PTR [rbx]
  420a5e:	(bad)  
  420a5f:	dec    DWORD PTR [rax+0x24]
  420a62:	(bad)  
  420a63:	(bad)  
  420a64:	mov    ebp,0xfbfffe23
  420a69:	and    edi,esi
  420a6b:	(bad)  
  420a6c:	fsub   QWORD PTR [rbx]
  420a6e:	(bad)  
  420a6f:	call   FWORD PTR [rdx]
  420a71:	and    al,0xfe
  420a73:	call   FWORD PTR [rdx]
  420a75:	and    al,0xfe
  420a77:	call   FWORD PTR [rax-0x170001dc]
  420a7d:	and    al,0xfe
  420a7f:	jmp    FWORD PTR [rax+0x24]
  420a82:	(bad)  
  420a83:	(bad)  
  420a84:	call   0xffffffffe94208ad
  420a89:	and    al,0xfe
  420a8b:	(bad)  
  420a8c:	call   0xffffffffe94208b5
  420a91:	and    al,0xfe
  420a93:	(bad)  
  420a94:	call   0xffffffffe94208bd
  420a99:	and    al,0xfe
  420a9b:	(bad)  
  420a9c:	call   0xffffffffe94208c5
  420aa1:	and    al,0xfe
  420aa3:	(bad)  
  420aa4:	call   0xffffffffe94208cd
  420aa9:	and    al,0xfe
  420aab:	(bad)  
  420aac:	call   0xffffffffe94208d5
  420ab1:	and    al,0xfe
  420ab3:	(bad)  
  420ab4:	call   0xffffffffe94208dd
  420ab9:	and    al,0xfe
  420abb:	(bad)  
  420abc:	call   0xffffffffe94208e5
  420ac1:	and    al,0xfe
  420ac3:	(bad)  
  420ac4:	call   0xffffffff994208ed
  420ac9:	and    al,0xfe
  420acb:	inc    DWORD PTR [rax]
  420acd:	add    BYTE PTR [rax],al
  420acf:	add    BYTE PTR [rbp+0x6e],dh
  420ad2:	gs js  0x420b45
  420ad5:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  420ada:	and    BYTE PTR [rbx+0x6f],ah
  420add:	outs   dx,BYTE PTR ds:[rsi]
  420ade:	jae    0x420b54
  420ae0:	(bad)  
  420ae1:	outs   dx,BYTE PTR ds:[rsi]
  420ae2:	je     0x420b04
  420ae4:	je     0x420b5f
  420ae6:	jo     0x420b4d
  420ae8:	add    BYTE PTR [rdi+0x65],ah
  420aeb:	outs   dx,BYTE PTR ds:[rsi]
  420aec:	movsxd ebp,DWORD PTR [rax+0x61]
  420aef:	jb     0x420b1f
  420af1:	movsxd eax,DWORD PTR [rax]
  420af3:	add    BYTE PTR [rax],al
  420af5:	add    BYTE PTR [rax],al
  420af7:	add    BYTE PTR [rax+0x61],dh
  420afa:	outs   dx,BYTE PTR ds:[rsi]
  420afb:	imul   esp,DWORD PTR [rbx+0x28],0x656e7522
  420b02:	js     0x420b74
  420b04:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  420b09:	and    BYTE PTR [rbx+0x6f],ah
  420b0c:	outs   dx,BYTE PTR ds:[rsi]
  420b0d:	jae    0x420b83
  420b0f:	(bad)  
  420b10:	outs   dx,BYTE PTR ds:[rsi]
  420b11:	je     0x420b33
  420b13:	je     0x420b8e
  420b15:	jo     0x420b7c
  420b17:	and    ch,BYTE PTR [rcx]
  420b19:	add    BYTE PTR [rax],al
  420b1b:	add    BYTE PTR [rcx+0x25],bl
  420b1e:	(bad)  
  420b1f:	call   QWORD PTR [rip+0x15fffe25]        # 0x1642094a
  420b25:	and    eax,0x2574fffe
  420b2a:	(bad)  
  420b2b:	push   QWORD PTR [rbp+riz*1-0x2]
  420b2f:	push   QWORD PTR [rbp+riz*1-0x2]
  420b33:	push   QWORD PTR [rbp+riz*1-0x2]
  420b37:	call   QWORD PTR [rip+0x74fffe25]        # 0x75420962
  420b3d:	and    eax,0x2574fffe
  420b42:	(bad)  
  420b43:	push   QWORD PTR [rbp+riz*1-0x2]
  420b47:	push   QWORD PTR [rbp+riz*1-0x2]
  420b4b:	push   QWORD PTR ds:0x7369fffe
  420b52:	ins    BYTE PTR es:[rdi],dx
  420b53:	imul   esi,DWORD PTR [rbx+0x74],0x736e6f63
  420b5a:	je     0x420b84
  420b5c:	movsxd ebp,DWORD PTR [rcx]
  420b5e:	add    BYTE PTR [rcx+0x73],ah
  420b61:	jae    0x420bc8
  420b63:	jb     0x420bd9
  420b65:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  420b6c:	ins    BYTE PTR es:[rdi],dx
  420b6d:	jne    0x420be1
  420b6f:	cmp    ah,BYTE PTR gs:[rax]
  420b72:	and    eax,0x69210073
  420b77:	jae    0x420be5
  420b79:	imul   esi,DWORD PTR [rbx+0x74],0x736e6f63
  420b80:	je     0x420baa
  420b82:	movsxd ebp,DWORD PTR [rcx]
  420b84:	add    BYTE PTR [rax],al
  420b86:	add    BYTE PTR [rax],al
  420b88:	rex.RB outs dx,BYTE PTR ds:[rsi]
  420b8a:	movsxd ebp,DWORD PTR [rdi+0x75]
  420b8d:	outs   dx,BYTE PTR ds:[rsi]
  420b8e:	je     0x420bf5
  420b90:	jb     0x420bf7
  420b92:	and    BYTE PTR fs:[rsi+0x6f],ch
  420b96:	outs   dx,BYTE PTR ds:[rsi]
  420b97:	sub    eax,0x69727473
  420b9c:	outs   dx,BYTE PTR ds:[rsi]
  420b9d:	and    BYTE PTR [ecx+0x6e],ah
  420ba1:	and    BYTE PTR fs:[rsi+0x6f],ch
  420ba5:	outs   dx,BYTE PTR ds:[rsi]
  420ba6:	sub    eax,0x72616863
  420bab:	and    BYTE PTR [rbx+0x6f],ah
  420bae:	outs   dx,BYTE PTR ds:[rsi]
  420baf:	jae    0x420c25
  420bb1:	(bad)  
  420bb2:	outs   dx,BYTE PTR ds:[rsi]
  420bb3:	je     0x420bd5
  420bb5:	imul   ebp,DWORD PTR [rsi+0x20],0x61746164
  420bbc:	ins    BYTE PTR es:[rdi],dx
  420bbd:	imul   esi,DWORD PTR [rbx+0x74],0x6769203b
  420bc4:	outs   dx,BYTE PTR ds:[rsi]
  420bc5:	outs   dx,DWORD PTR ds:[rsi]
  420bc6:	jb     0x420c2d
  420bc8:	add    BYTE PTR fs:[rbx+0x68],ah
  420bcc:	(bad)  
  420bcd:	jb     0x420c30
  420bcf:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  420bd3:	and    BYTE PTR [rcx+riz*2+0x74],ah
  420bd7:	(bad)  
  420bd8:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  420bdc:	je     0x420bfe
  420bde:	je     0x420c4f
  420be0:	outs   dx,DWORD PTR ds:[rsi]
  420be1:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
  420be5:	add    BYTE PTR [edx+0x62],ah
  420be9:	rex.WR
  420bea:	outs   dx,BYTE PTR gs:[rsi]
  420bec:	addr32 je 0x420c57
  420bef:	sub    BYTE PTR [rcx+riz*2+0x74],ah
  420bf3:	(bad)  
  420bf4:	(bad)  
  420bf5:	jne    0x420c5d
  420bf7:	sub    DWORD PTR [rax],esp
  420bf9:	cmp    eax,0x30203d
  420bfe:	add    BYTE PTR [rax],al
  420c00:	rex.RB outs dx,BYTE PTR ds:[rsi]
  420c02:	movsxd ebp,DWORD PTR [rdi+0x75]
  420c05:	outs   dx,BYTE PTR ds:[rsi]
  420c06:	je     0x420c6d
  420c08:	jb     0x420c6f
  420c0a:	and    BYTE PTR fs:[rsi+0x6f],ch
  420c0e:	outs   dx,BYTE PTR ds:[rsi]
  420c0f:	sub    eax,0x69727473
  420c14:	outs   dx,BYTE PTR ds:[rsi]
  420c15:	and    BYTE PTR [ecx+0x6e],ah
  420c19:	and    BYTE PTR fs:[rsi+0x6f],ch
  420c1d:	outs   dx,BYTE PTR ds:[rsi]
  420c1e:	sub    eax,0x72616863
  420c23:	and    BYTE PTR [rbx+0x6f],ah
  420c26:	outs   dx,BYTE PTR ds:[rsi]
  420c27:	jae    0x420c9d
  420c29:	(bad)  
  420c2a:	outs   dx,BYTE PTR ds:[rsi]
  420c2b:	je     0x420c4d
  420c2d:	imul   ebp,DWORD PTR [rsi+0x20],0x61746164
  420c34:	ins    BYTE PTR es:[rdi],dx
  420c35:	imul   esi,DWORD PTR [rbx+0x74],0x0
  420c3c:	add    BYTE PTR [rax],al
  420c3e:	add    BYTE PTR [rax],al
  420c40:	rex.XB outs dx,DWORD PTR ds:[rsi]
  420c42:	outs   dx,BYTE PTR ds:[rsi]
  420c43:	jbe    0x420caa
  420c45:	jb     0x420cba
  420c47:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  420c4e:	outs   dx,BYTE PTR gs:[rsi]
  420c50:	jne    0x420cbf
  420c52:	and    BYTE PTR [rsi+0x6f],ch
  420c55:	je     0x420c77
  420c57:	jae    0x420cce
  420c59:	jo     0x420ccb
  420c5b:	outs   dx,DWORD PTR ds:[rsi]
  420c5c:	jb     0x420cd2
  420c5e:	gs and BYTE PTR fs:[rax],ch
  420c62:	jns    0x420cc9
  420c64:	je     0x420c8f
  420c66:	add    BYTE PTR [rip+0x646868],ah        # 0xa674d4
  420c6c:	and    eax,0x756868
  420c71:	and    eax,0x25007568
  420c76:	jne    0x420c78
  420c78:	and    eax,0x756c6c
  420c7d:	and    eax,0x25006468
  420c82:	add    BYTE PTR fs:[rip+0x646c6c],ah        # 0xa678f5
  420c89:	and    eax,0x6c250067
  420c8e:	add    BYTE PTR [eip+0x2e250063],ah        # 0x2e670cf8
  420c95:	cmp    BYTE PTR [rdi+0x0],ah
  420c98:	je     0x420d0c
  420c9a:	(bad)  
  420c9b:	outs   dx,BYTE PTR ds:[rsi]
  420c9c:	jae    0x420d04
  420c9e:	outs   dx,DWORD PTR ds:[rsi]
  420c9f:	jb     0x420d0e
  420ca1:	cmp    ah,BYTE PTR [rax]
  420ca3:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
  420cab:	movsxd ebp,DWORD PTR [rdi+0x6e]
  420cae:	jbe    0x420d15
  420cb0:	jb     0x420d25
  420cb2:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325203a
  420cb9:	(bad)  
  420cba:	and    eax,0x3e2d2064
  420cbf:	and    BYTE PTR [rip+0x64252f73],ah        # 0x64673c38
	...
  420ccd:	add    al,bh
  420ccf:	jg     0x420cd1
  420cd1:	add    BYTE PTR [rax],al
  420cd3:	pop    rdi
	...
  420cdc:	add    BYTE PTR [rax],al
  420cde:	loopne 0x420d23
  420ce0:	and    eax,0x756868
  420ce5:	and    eax,0x25007568
  420cea:	ins    BYTE PTR es:[rdi],dx
  420ceb:	ins    BYTE PTR es:[rdi],dx
  420cec:	jne    0x420cee
  420cee:	and    eax,0x2500756c
  420cf3:	jne    0x420cf5
  420cf5:	and    eax,0x646868
  420cfa:	and    eax,0x25006468
  420cff:	ins    BYTE PTR es:[rdi],dx
  420d00:	ins    BYTE PTR es:[rdi],dx
  420d01:	add    BYTE PTR fs:[rip+0x2500646c],ah        # 0x25427174
  420d08:	add    BYTE PTR fs:[rax],ch
  420d0b:	sub    BYTE PTR [rdi+rbp*2+0x75],ah
  420d0f:	(bad)  
  420d10:	ins    BYTE PTR es:[rdi],dx
  420d11:	sub    DWORD PTR gs:[rip+0x6736312e],esp        # 0x67783e46
  420d18:	sub    DWORD PTR [rax],eax
  420d1a:	sub    BYTE PTR [rax],ch
  420d1c:	data16 ins BYTE PTR es:[rdi],dx
  420d1e:	outs   dx,DWORD PTR ds:[rsi]
  420d1f:	(bad)  
  420d20:	je     0x420d4b
  420d22:	and    eax,0x2967382e
  420d27:	add    BYTE PTR [rsi+0x62],dh
  420d2a:	(bad)  
  420d2b:	jo     0x420d9f
  420d2d:	imul   ebp,DWORD PTR [rsi+0x74],0x75203a66
  420d34:	outs   dx,BYTE PTR ds:[rsi]
  420d35:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  420d39:	outs   dx,BYTE PTR ds:[rsi]
  420d3a:	and    BYTE PTR [rbx+0x70],dh
  420d3d:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  420d41:	imul   esp,DWORD PTR [rbp+0x72],0x6325203a
  420d48:	add    BYTE PTR [rcx+riz*2+0x74],ah
  420d4c:	(bad)  
  420d4d:	movsxd eax,DWORD PTR cs:[rax]
  420d50:	jo     0x420db3
  420d52:	outs   dx,BYTE PTR ds:[rsi]
  420d53:	imul   esp,DWORD PTR [rbx+0x28],0x62627622
  420d5a:	jo     0x420dce
  420d5c:	imul   ebp,DWORD PTR [rsi+0x74],0x75203a66
  420d63:	outs   dx,BYTE PTR ds:[rsi]
  420d64:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  420d68:	outs   dx,BYTE PTR ds:[rsi]
  420d69:	and    BYTE PTR [rbx+0x70],dh
  420d6c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  420d70:	imul   esp,DWORD PTR [rbp+0x72],0x6325203a
  420d77:	and    ch,BYTE PTR [rax+rbp*1]
  420d7a:	movsxd ebp,DWORD PTR [rax+0x61]
  420d7d:	jb     0x420da8
  420d7f:	movsxd ebp,DWORD PTR [rcx]
  420d81:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  420d85:	je     0x420da7
  420d87:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c975bad
  420d8d:	rex.WR add BYTE PTR [rcx+0x73],r12b
  420d91:	jae    0x420df8
  420d93:	jb     0x420e09
  420d95:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  420d9c:	ins    BYTE PTR es:[rdi],dx
  420d9d:	jne    0x420e11
  420d9f:	cmp    ah,BYTE PTR gs:[rax]
  420da2:	and    eax,0x6f630073
  420da7:	outs   dx,BYTE PTR ds:[rsi]
  420da8:	and    BYTE PTR [rcx],ah
  420daa:	cmp    eax,0x4c554e20
  420daf:	rex.WR add BYTE PTR [rbx+0x72],r14b
  420db3:	movsxd esp,DWORD PTR [rax]
  420db5:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c975bdb
  420dbb:	rex.WR and BYTE PTR [rsi],r12b
  420dbe:	and    BYTE PTR es:[rsp+rbp*2+0x20],ah
  420dc3:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c975be9
  420dc9:	rex.WR add BYTE PTR [rbx+0x72],r14b
  420dcd:	movsxd esp,DWORD PTR [rax]
  420dcf:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c975bf5
  420dd5:	rex.WR add BYTE PTR [rbx+0x6f],r12b
  420dd9:	outs   dx,BYTE PTR ds:[rsi]
  420dda:	sub    eax,0x74636e3e
  420ddf:	jns    0x420e51
  420de1:	and    BYTE PTR gs:[rip+0x434e203d],bh        # 0x43902e25
  420de8:	pop    rdi
  420de9:	rex.XB
  420dea:	rex.WRXB
  420deb:	rex.WRB push r8
  420ded:	rex.WRXB push r13
  420def:	rex.WRX
  420df0:	add    BYTE PTR [rbx+0x72],r14b
  420df4:	movsxd esi,DWORD PTR [rbx+0x65]
  420df7:	je     0x420e5f
  420df9:	imul   ebp,DWORD PTR [rsp+rbp*2+0x3a],0x206f6e20
  420e01:	jae    0x420e73
  420e03:	(bad)  
  420e04:	movsxd esp,DWORD PTR [rbp+0x0]
  420e07:	jo     0x420e6a
  420e09:	outs   dx,BYTE PTR ds:[rsi]
  420e0a:	imul   esp,DWORD PTR [rbx+0x28],0x63727322
  420e11:	jae    0x420e78
  420e13:	je     0x420e7b
  420e15:	imul   ebp,DWORD PTR [rsp+rbp*2+0x3a],0x206f6e20
  420e1d:	jae    0x420e8f
  420e1f:	(bad)  
  420e20:	movsxd esp,DWORD PTR [rbp+0x22]
  420e23:	sub    DWORD PTR [rax],eax
  420e25:	jae    0x420e99
  420e27:	movsxd esi,DWORD PTR [rbx+0x65]
  420e2a:	je     0x420e92
  420e2c:	imul   ebp,DWORD PTR [rsp+rbp*2+0x3a],0x746f6e20
  420e34:	and    BYTE PTR [rsi+0x69],ah
  420e37:	ins    BYTE PTR es:[rdi],dx
  420e38:	ins    BYTE PTR es:[rdi],dx
  420e39:	add    BYTE PTR [rax+0x61],dh
  420e3c:	outs   dx,BYTE PTR ds:[rsi]
  420e3d:	imul   esp,DWORD PTR [rbx+0x28],0x63727322
  420e44:	jae    0x420eab
  420e46:	je     0x420eae
  420e48:	imul   ebp,DWORD PTR [rsp+rbp*2+0x3a],0x746f6e20
  420e50:	and    BYTE PTR [rsi+0x69],ah
  420e53:	ins    BYTE PTR es:[rdi],dx
  420e54:	ins    BYTE PTR es:[rdi],dx
  420e55:	and    ch,BYTE PTR [rcx]
  420e57:	add    BYTE PTR [rsp+rbp*2+0x31],ah
  420e5b:	and    BYTE PTR [rcx],ah
  420e5d:	cmp    eax,0x4c554e20
  420e62:	rex.WR add BYTE PTR [rsp+rbp*2+0x20],r12b
  420e67:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c975c8d
  420e6d:	rex.WR add BYTE PTR [rcx+0x6e],r13b
  420e71:	fs gs js 0x420e95
  420e75:	cmp    al,0x20
  420e77:	fs ins BYTE PTR es:[rdi],dx
  420e79:	sub    eax,0x6e656c3e
  420e7e:	addr32 je 0x420ee9
  420e81:	add    BYTE PTR [rax+riz*1],ch
  420e84:	add    BYTE PTR [rdx],cl
  420e86:	add    BYTE PTR [rax],al
  420e88:	movsxd esp,DWORD PTR [rax]
  420e8a:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c975cb0
  420e90:	rex.WR add BYTE PTR [rax],r8b
	...
  420edf:	add    BYTE PTR [rax+0x61],dh
  420ee2:	outs   dx,BYTE PTR ds:[rsi]
  420ee3:	imul   esp,DWORD PTR [rbx+0x0],0x6c6c616d
  420eea:	outs   dx,DWORD PTR ds:[rsi]
  420eeb:	movsxd edi,DWORD PTR [rdx]
  420eed:	outs   dx,DWORD PTR ds:[rsi]
  420eee:	jne    0x420f64
  420ef0:	and    BYTE PTR [rdi+0x66],ch
  420ef3:	and    BYTE PTR [rbp+0x65],ch
  420ef6:	ins    DWORD PTR es:[rdi],dx
  420ef7:	outs   dx,DWORD PTR ds:[rsi]
  420ef8:	jb     0x420f73
  420efa:	add    BYTE PTR [rdx+0x65],dh
  420efd:	(bad)  
  420efe:	ins    BYTE PTR es:[rdi],dx
  420eff:	ins    BYTE PTR es:[rdi],dx
  420f00:	outs   dx,DWORD PTR ds:[rsi]
  420f01:	movsxd edi,DWORD PTR [rdx]
  420f03:	outs   dx,DWORD PTR ds:[rsi]
  420f04:	jne    0x420f7a
  420f06:	and    BYTE PTR [rdi+0x66],ch
  420f09:	and    BYTE PTR [rbp+0x65],ch
  420f0c:	ins    DWORD PTR es:[rdi],dx
  420f0d:	outs   dx,DWORD PTR ds:[rsi]
  420f0e:	jb     0x420f89
	...
  420f40:	(bad)  
  420f41:	push   rbp
  420f42:	(bad)  
  420f43:	inc    DWORD PTR [rax-0x6a0001ab]
  420f49:	push   rbp
  420f4a:	(bad)  
  420f4b:	push   QWORD PTR [rax+0x30fffe55]
  420f51:	push   rbp
  420f52:	(bad)  
  420f53:	inc    DWORD PTR [rbp+rdx*2-0x2]
  420f57:	inc    DWORD PTR [rax]
  420f59:	and    eax,DWORD PTR es:[rax]
  420f5c:	add    BYTE PTR [rax],al
  420f5e:	add    BYTE PTR [rax],al
  420f60:	rex.XB (bad) 
  420f62:	outs   dx,BYTE PTR ds:[rsi]
  420f63:	outs   dx,BYTE PTR ds:[rsi]
  420f64:	outs   dx,DWORD PTR ds:[rsi]
  420f65:	je     0x420f87
  420f67:	movsxd ebp,DWORD PTR [rdi+0x6e]
  420f6a:	jbe    0x420fd1
  420f6c:	jb     0x420fe2
  420f6e:	and    BYTE PTR [rbp+0x54],dl
  420f71:	rex.RX cmp BYTE PTR [rax],r12b
  420f74:	jae    0x420fea
  420f76:	jb     0x420fe1
  420f78:	outs   dx,BYTE PTR ds:[rsi]
  420f79:	and    BYTE PTR [edi+ebp*2+0x20],dh
  420f7e:	push   rbp
  420f7f:	push   rsp
  420f80:	rex.RX xor DWORD PTR [rsi],r14d
  420f83:	cmp    ah,BYTE PTR [rax]
  420f85:	and    eax,0x745c0073
  420f8a:	add    BYTE PTR [rdx+riz*2+0x0],bl
  420f8e:	pop    rsp
  420f8f:	outs   dx,BYTE PTR ds:[rsi]
  420f90:	add    BYTE PTR [rdx+rsi*2+0x0],bl
  420f94:	pop    rsp
  420f95:	data16 add BYTE PTR [rax],al
  420f98:	mov    esp,0xa8fffe59
  420f9d:	pop    rcx
  420f9e:	(bad)  
  420f9f:	dec    DWORD PTR [rcx+rbx*2+0x59d8fffe]
  420fa6:	(bad)  
  420fa7:	(bad)  
  420fa8:	js     0x421003
  420faa:	(bad)  
  420fab:	dec    DWORD PTR [rax]
  420fad:	pop    rcx
  420fae:	(bad)  
  420faf:	jmp    FWORD PTR [rdi]
  420fb1:	(bad)  
  420fb2:	movsxd ebp,DWORD PTR [rax+0x61]
  420fb5:	jb     0x420fdf
  420fb7:	and    eax,0x63002975
  420fbc:	push   0x30287261
  420fc1:	sub    DWORD PTR [rax],eax
  420fc3:	(bad)  
  420fc4:	(bad)  
  420fc5:	(bad)  
  420fc6:	add    BYTE PTR [rdi+0x58],bl
  420fc9:	and    eax,0x58322e32
  420fce:	add    BYTE PTR [rcx+rcx*2+0x47],al
  420fd2:	rex.WB push r12
  420fd4:	pop    rdi
  420fd5:	and    eax,0x65005f63
  420fda:	jae    0x42103f
  420fdc:	(bad)  
  420fdd:	jo     0x421044
  420fdf:	jae    0x42100f
  420fe1:	movsxd eax,DWORD PTR [rax]
  420fe3:	xor    BYTE PTR [rax],al
  420fe5:	xor    BYTE PTR [rcx],dh
  420fe7:	xor    dh,BYTE PTR [rbx]
  420fe9:	xor    al,0x35
  420feb:	ss (bad) 
  420fed:	cmp    BYTE PTR [rcx],bh
  420fef:	(bad)  
  420ff0:	(bad)
  420ff5:	rex.B
  420ff6:	rex.X
  420ff7:	rex.XB
  420ff8:	rex.R
  420ff9:	rex.RB
  420ffa:	rex.RX add BYTE PTR [rax],r14b
  420ffd:	xor    DWORD PTR [rdx],esi
  420fff:	xor    esi,DWORD PTR [rsi*1+0x42003736]
  421006:	(bad)  
  421007:	and    BYTE PTR fs:[rdi+0x63],ch
  42100b:	je     0x42106e
  42100d:	ins    BYTE PTR es:[rdi],dx
  42100e:	and    BYTE PTR [rbx+0x6f],ah
  421011:	outs   dx,BYTE PTR ds:[rsi]
  421012:	jae    0x421088
  421014:	(bad)  
  421015:	outs   dx,BYTE PTR ds:[rsi]
  421016:	je     0x421052
  421018:	and    BYTE PTR [rip+0x62e40073],ah        # 0x63261091
  42101e:	(bad)  
  42101f:	push   rsp
  421021:	(bad)  
  421022:	(bad)  
  421023:	push   rsp
  421025:	(bad)  
  421026:	(bad)  
  421027:	push   rsp
  421029:	(bad)  
  42102a:	(bad)  
  42102b:	push   rsp
  42102d:	(bad)  
  42102e:	(bad)  
  42102f:	call   rsp
  421031:	(bad)  
  421032:	(bad)  
  421033:	push   rsp
  421035:	(bad)  
  421036:	(bad)  
  421037:	push   rsp
  421039:	(bad)  
  42103a:	(bad)  
  42103b:	push   rsp
  42103d:	(bad)  
  42103e:	(bad)  
  42103f:	push   rsp
  421041:	(bad)  
  421042:	(bad)  
  421043:	push   rsp
  421045:	(bad)  
  421046:	(bad)  
  421047:	push   rsp
  421049:	(bad)  
  42104a:	(bad)  
  42104b:	push   rsp
  42104d:	(bad)  
  42104e:	(bad)  
  42104f:	push   rsp
  421051:	(bad)  
  421052:	(bad)  
  421053:	jmp    FWORD PTR [rcx-0x5600019e]
  421059:	(bad)  
  42105a:	(bad)  
  42105b:	jmp    FWORD PTR [rcx-0x5600019e]
  421061:	(bad)  
  421062:	(bad)  
  421063:	jmp    FWORD PTR [rcx-0x5600019e]
  421069:	(bad)  
  42106a:	(bad)  
  42106b:	jmp    FWORD PTR [rcx-0x5600019e]
  421071:	(bad)  
  421072:	(bad)  
  421073:	push   rsp
  421075:	(bad)  
  421076:	(bad)  
  421077:	push   rsp
  421079:	(bad)  
  42107a:	(bad)  
  42107b:	push   rsp
  42107d:	(bad)  
  42107e:	(bad)  
  42107f:	push   rsp
  421081:	(bad)  
  421082:	(bad)  
  421083:	push   rsp
  421085:	(bad)  
  421086:	(bad)  
  421087:	push   rsp
  421089:	(bad)  
  42108a:	(bad)  
  42108b:	push   rsp
  42108d:	(bad)  
  42108e:	(bad)  
  42108f:	call   FWORD PTR [rcx-0xb00019e]
  421095:	(bad)  
  421096:	(bad)  
  421097:	push   rsp
  421099:	(bad)  
  42109a:	(bad)  
  42109b:	push   rsp
  42109d:	(bad)  
  42109e:	(bad)  
  42109f:	push   rsp
  4210a1:	(bad)  
  4210a2:	(bad)  
  4210a3:	push   rsp
  4210a5:	(bad)  
  4210a6:	(bad)  
  4210a7:	push   rsp
  4210a9:	(bad)  
  4210aa:	(bad)  
  4210ab:	push   rsp
  4210ad:	(bad)  
  4210ae:	(bad)  
  4210af:	push   rsp
  4210b1:	(bad)  
  4210b2:	(bad)  
  4210b3:	push   rsp
  4210b5:	(bad)  
  4210b6:	(bad)  
  4210b7:	push   rsp
  4210b9:	(bad)  
  4210ba:	(bad)  
  4210bb:	push   rsp
  4210bd:	(bad)  
  4210be:	(bad)  
  4210bf:	push   rsp
  4210c1:	(bad)  
  4210c2:	(bad)  
  4210c3:	push   rsp
  4210c5:	(bad)  
  4210c6:	(bad)  
  4210c7:	push   rsp
  4210c9:	(bad)  
  4210ca:	(bad)  
  4210cb:	push   rsp
  4210cd:	(bad)  
  4210ce:	(bad)  
  4210cf:	push   rsp
  4210d1:	(bad)  
  4210d2:	(bad)  
  4210d3:	push   rsp
  4210d5:	(bad)  
  4210d6:	(bad)  
  4210d7:	push   rsp
  4210d9:	(bad)  
  4210da:	(bad)  
  4210db:	push   rsp
  4210dd:	(bad)  
  4210de:	(bad)  
  4210df:	push   rsp
  4210e1:	(bad)  
  4210e2:	(bad)  
  4210e3:	push   rsp
  4210e5:	(bad)  
  4210e6:	(bad)  
  4210e7:	push   rsp
  4210e9:	(bad)  
  4210ea:	(bad)  
  4210eb:	push   rsp
  4210ed:	(bad)  
  4210ee:	(bad)  
  4210ef:	push   rsp
  4210f1:	(bad)  
  4210f2:	(bad)  
  4210f3:	push   rsp
  4210f5:	(bad)  
  4210f6:	(bad)  
  4210f7:	push   rsp
  4210f9:	(bad)  
  4210fa:	(bad)  
  4210fb:	push   rsp
  4210fd:	(bad)  
  4210fe:	(bad)  
  4210ff:	push   rsp
  421101:	(bad)  
  421102:	(bad)  
  421103:	dec    DWORD PTR [rcx-0xb00019e]
  421109:	(bad)  
  42110a:	(bad)  
  42110b:	push   rsp
  42110d:	(bad)  
  42110e:	(bad)  
  42110f:	push   rsp
  421111:	(bad)  
  421112:	(bad)  
  421113:	push   rsp
  421115:	(bad)  
  421116:	(bad)  
  421117:	(bad)  
  421118:	jns    0x42117c
  42111a:	(bad)  
  42111b:	jmp    FWORD PTR [rcx+0x62]
  42111e:	(bad)  
  42111f:	push   rsp
  421121:	(bad)  
  421122:	(bad)  
  421123:	push   rsp
  421125:	(bad)  
  421126:	(bad)  
  421127:	push   rsp
  421129:	(bad)  
  42112a:	(bad)  
  42112b:	call   FWORD PTR [rcx+0x62]
  42112e:	(bad)  
  42112f:	push   rsp
  421131:	(bad)  
  421132:	(bad)  
  421133:	push   rsp
  421135:	(bad)  
  421136:	(bad)  
  421137:	push   rsp
  421139:	(bad)  
  42113a:	(bad)  
  42113b:	push   rsp
  42113d:	(bad)  
  42113e:	(bad)  
  42113f:	push   rsp
  421141:	(bad)  
  421142:	(bad)  
  421143:	push   rsp
  421145:	(bad)  
  421146:	(bad)  
  421147:	push   rsp
  421149:	(bad)  
  42114a:	(bad)  
  42114b:	dec    DWORD PTR [rcx+0x62]
  42114e:	(bad)  
  42114f:	push   rsp
  421151:	(bad)  
  421152:	(bad)  
  421153:	push   rsp
  421155:	(bad)  
  421156:	(bad)  
  421157:	push   rsp
  421159:	(bad)  
  42115a:	(bad)  
  42115b:	(bad)  
  42115c:	cmp    DWORD PTR [rdx-0x2],esp
  42115f:	push   rsp
  421161:	(bad)  
  421162:	(bad)  
  421163:	jmp    FWORD PTR [rcx]
  421165:	(bad)  
  421166:	(bad)  
  421167:	push   rsp
  421169:	(bad)  
  42116a:	(bad)  
  42116b:	call   FWORD PTR [rcx]
  42116d:	(bad)  
  42116e:	(bad)  
  42116f:	push   rsp
  421171:	(bad)  
  421172:	(bad)  
  421173:	inc    DWORD PTR [rdx+riz*2]
  421176:	(bad)  
  421177:	push   QWORD PTR [rcx+0x75]
  42117a:	outs   dx,DWORD PTR ds:[rsi]
  42117b:	je     0x42117d
  42117d:	(bad)  
  42117e:	ins    DWORD PTR es:[rdi],dx
  42117f:	jo     0x421181
  421181:	ins    BYTE PTR es:[rdi],dx
  421182:	je     0x421184
  421184:	addr32 je 0x421187
	...
  42118f:	add    BYTE PTR [rax],dh
  421191:	xor    DWORD PTR [rdx],esi
  421193:	xor    esi,DWORD PTR [rsi*1+0x39383736]
  42119a:	rex.B
  42119b:	rex.X
  42119c:	rex.XB
  42119d:	rex.R
  42119e:	rex.RB
  42119f:	rex.RX add BYTE PTR [rdi+0x53],r11b
  4211a3:	push   rax
  4211a4:	rex.B
  4211a5:	rex.XB
  4211a6:	rex.RB pop r15
  4211a8:	add    BYTE PTR [rdi+0x45],bl
  4211ab:	pop    rax
  4211ac:	rex.XB
  4211ad:	rex.WR
  4211ae:	rex.B
  4211af:	rex.WRB
  4211b0:	push   r12
  4211b2:	rex.WB
  4211b3:	rex.WRXB
  4211b4:	rex.WRX pop rdi
  4211b6:	add    BYTE PTR [rdi+0x51],bl
  4211b9:	push   rbp
  4211ba:	rex.WRXB push r12
  4211bc:	push   r12
  4211be:	rex.WB
  4211bf:	rex.WRXB
  4211c0:	rex.WRX pop rdi
  4211c2:	add    BYTE PTR [rdi+0x48],bl
  4211c5:	push   r11
  4211c7:	rex.W pop rdi
  4211c9:	add    BYTE PTR [rdi+0x44],bl
  4211cc:	rex.WRXB
  4211cd:	rex.WR
  4211ce:	rex.WR
  4211cf:	push   r10
  4211d1:	pop    rdi
  4211d2:	add    BYTE PTR [rdi+0x50],bl
  4211d5:	rex.RB push r10
  4211d7:	rex.XB
  4211d8:	rex.RB
  4211d9:	rex.WRX push rsp
  4211db:	pop    rdi
  4211dc:	add    BYTE PTR [rdi+0x41],bl
  4211df:	rex.WRB push r8
  4211e1:	rex.RB push r10
  4211e3:	push   rbx
  4211e4:	rex.B
  4211e5:	rex.WRX
  4211e6:	rex.R pop rdi
  4211e8:	add    BYTE PTR [rdi+0x41],bl
  4211eb:	push   rax
  4211ec:	rex.WRXB push r11
  4211ee:	push   rsp
  4211ef:	push   rdx
  4211f0:	rex.WRXB push r8
  4211f2:	rex.W
  4211f3:	rex.RB pop r15
  4211f5:	add    BYTE PTR [rdi+0x4c],bl
  4211f8:	rex.RB
  4211f9:	rex.RX push rsp
  4211fb:	push   rax
  4211fc:	push   r10
  4211fe:	rex.RB
  4211ff:	rex.WRX pop rdi
  421201:	add    BYTE PTR [rdi+0x52],bl
  421204:	rex.WB
  421205:	rex.RXB
  421206:	rex.W push rsp
  421208:	push   rax
  421209:	push   r10
  42120b:	rex.RB
  42120c:	rex.WRX pop rdi
  42120e:	add    BYTE PTR [rdi+0x41],bl
  421211:	push   rbx
  421212:	push   rsp
  421213:	rex.RB push r10
  421215:	rex.WB push r11
  421217:	rex.WXB pop r15
  421219:	add    BYTE PTR [rdi+0x50],bl
  42121c:	rex.WR push rbp
  42121e:	push   rbx
  42121f:	pop    rdi
  421220:	add    BYTE PTR [rdi+0x43],bl
  421223:	rex.WRXB
  421224:	rex.WRB
  421225:	rex.WRB
  421226:	pop    r15
  421228:	add    BYTE PTR [rdi+0x4d],bl
  42122b:	rex.WB
  42122c:	rex.WRX push rbp
  42122e:	push   rbx
  42122f:	pop    rdi
  421230:	add    BYTE PTR [rdi+0x50],bl
  421233:	rex.RB push r10
  421235:	rex.WB
  421236:	rex.WRXB
  421237:	rex.R pop rdi
  421239:	add    BYTE PTR [rdi+0x43],bl
  42123c:	rex.WRXB
  42123d:	rex.WR
  42123e:	rex.WRXB
  42123f:	rex.WRX pop rdi
  421241:	add    BYTE PTR [rdi+0x53],bl
  421244:	rex.RB
  421245:	rex.WRB
  421246:	rex.WB
  421247:	rex.XB
  421248:	rex.WRXB
  421249:	rex.WR
  42124a:	rex.WRXB
  42124b:	rex.WRX pop rdi
  42124d:	add    BYTE PTR [rdi+0x4c],bl
  421250:	rex.RB push r11
  421252:	push   rbx
  421253:	push   rsp
  421254:	rex.W
  421255:	rex.B
  421256:	rex.WRX pop rdi
  421258:	add    BYTE PTR [rdi+0x45],bl
  42125b:	push   rcx
  42125c:	push   rbp
  42125d:	rex.B
  42125e:	rex.WR push rbx
  421260:	pop    rdi
  421261:	add    BYTE PTR [rdi+0x47],bl
  421264:	push   rdx
  421265:	rex.RB
  421266:	push   r12
  421268:	rex.RB push r10
  42126a:	push   rsp
  42126b:	rex.W
  42126c:	rex.B
  42126d:	rex.WRX pop rdi
  42126f:	add    BYTE PTR [rdi+0x51],bl
  421272:	push   rbp
  421273:	rex.RB push r11
  421275:	push   rsp
  421276:	rex.WB
  421277:	rex.WRXB
  421278:	rex.WRX pop rdi
  42127a:	add    BYTE PTR [rdi+0x41],bl
  42127d:	push   rsp
  42127e:	push   rbx
  42127f:	rex.WB
  421280:	rex.RXB
  421281:	rex.WRX pop rdi
  421283:	add    BYTE PTR [rdi+0x4c],bl
  421286:	rex.RB
  421287:	rex.RX push rsp
  421289:	rex.X push rdx
  42128b:	rex.B
  42128c:	rex.XB
  42128d:	rex.WXB
  42128e:	rex.RB push r12
  421290:	pop    rdi
  421291:	add    BYTE PTR [rdi+0x42],bl
  421294:	rex.B
  421295:	rex.XB
  421296:	rex.WXB push r11
  421298:	rex.WR
  421299:	push   r11
  42129b:	rex.W pop rdi
  42129d:	add    BYTE PTR [rdi+0x52],bl
  4212a0:	rex.WB
  4212a1:	rex.RXB
  4212a2:	rex.W push rsp
  4212a4:	rex.X push rdx
  4212a6:	rex.B
  4212a7:	rex.XB
  4212a8:	rex.WXB
  4212a9:	rex.RB push r12
  4212ab:	pop    rdi
  4212ac:	add    BYTE PTR [rdi+0x43],bl
  4212af:	rex.WB push r10
  4212b1:	rex.XB push r13
  4212b3:	rex.WRB
  4212b4:	rex.RX
  4212b5:	rex.WR
  4212b6:	rex.RB pop r8
  4212b8:	pop    rdi
  4212b9:	add    BYTE PTR [rdi+0x42],bl
  4212bc:	rex.B
  4212bd:	rex.XB
  4212be:	rex.WXB push r9
  4212c0:	push   rbp
  4212c1:	rex.WRXB push r12
  4212c3:	rex.RB pop r15
  4212c5:	add    BYTE PTR [rdi+0x4c],bl
  4212c8:	rex.RB
  4212c9:	rex.RX push rsp
  4212cb:	rex.XB push r13
  4212cd:	push   rdx
  4212ce:	rex.WR pop rcx
  4212d0:	pop    rdi
  4212d1:	add    BYTE PTR [rdi+0x56],bl
  4212d4:	rex.RB push r10
  4212d6:	push   rsp
  4212d7:	rex.WB
  4212d8:	rex.XB
  4212d9:	rex.B
  4212da:	rex.WR
  4212db:	rex.X
  4212dc:	push   r10
  4212de:	pop    rdi
  4212df:	add    BYTE PTR [rdi+0x52],bl
  4212e2:	rex.WB
  4212e3:	rex.RXB
  4212e4:	rex.W push rsp
  4212e6:	rex.XB push r13
  4212e8:	push   rdx
  4212e9:	rex.WR pop rcx
  4212eb:	pop    rdi
  4212ec:	add    BYTE PTR [rdi+0x54],bl
  4212ef:	rex.WB
  4212f0:	rex.WR
  4212f1:	rex.R
  4212f2:	rex.RB pop r15
  4212f4:	add    BYTE PTR [rdi+0x53],bl
  4212f7:	rex.WR
  4212f8:	push   r11
  4212fa:	rex.W pop rdi
  4212fc:	add    BYTE PTR [rax],al
  4212fe:	add    BYTE PTR [rax],al
  421300:	and    BYTE PTR [rax],al
  421302:	add    BYTE PTR [rax],al
  421304:	add    BYTE PTR [rax],al
  421306:	add    BYTE PTR [rax],al
  421308:	movabs eax,ds:0x2100000000004211
  421311:	add    BYTE PTR [rax],al
  421313:	add    BYTE PTR [rax],al
  421315:	add    BYTE PTR [rax],al
  421317:	add    BYTE PTR [rcx+0x4211],ch
  42131d:	add    BYTE PTR [rax],al
  42131f:	add    BYTE PTR [rdx],ah
  421321:	add    BYTE PTR [rax],al
  421323:	add    BYTE PTR [rax],al
  421325:	add    BYTE PTR [rax],al
  421327:	add    BYTE PTR [rdi+0x4211],dh
  42132d:	add    BYTE PTR [rax],al
  42132f:	add    BYTE PTR [rbx],ah
  421331:	add    BYTE PTR [rax],al
  421333:	add    BYTE PTR [rax],al
  421335:	add    BYTE PTR [rax],al
  421337:	add    bl,al
  421339:	adc    DWORD PTR [rdx+0x0],eax
  42133c:	add    BYTE PTR [rax],al
  42133e:	add    BYTE PTR [rax],al
  421340:	and    al,0x0
  421342:	add    BYTE PTR [rax],al
  421344:	add    BYTE PTR [rax],al
  421346:	add    BYTE PTR [rax],al
  421348:	retf   0x4211
  42134b:	add    BYTE PTR [rax],al
  42134d:	add    BYTE PTR [rax],al
  42134f:	add    BYTE PTR [rip+0x0],ah        # 0x421355
  421355:	add    BYTE PTR [rax],al
  421357:	add    bl,dl
  421359:	adc    DWORD PTR [rdx+0x0],eax
  42135c:	add    BYTE PTR [rax],al
  42135e:	add    BYTE PTR [rax],al
  421360:	add    BYTE PTR es:[rax],al
  421363:	add    BYTE PTR [rax],al
  421365:	add    BYTE PTR [rax],al
  421367:	add    ch,bl
  421369:	adc    DWORD PTR [rdx+0x0],eax
  42136c:	add    BYTE PTR [rax],al
  42136e:	add    BYTE PTR [rax],al
  421370:	(bad)  
  421371:	add    BYTE PTR [rax],al
  421373:	add    BYTE PTR [rax],al
  421375:	add    BYTE PTR [rax],al
  421377:	add    cl,ch
  421379:	adc    DWORD PTR [rdx+0x0],eax
  42137c:	add    BYTE PTR [rax],al
  42137e:	add    BYTE PTR [rax],al
  421380:	sub    BYTE PTR [rax],al
  421382:	add    BYTE PTR [rax],al
  421384:	add    BYTE PTR [rax],al
  421386:	add    BYTE PTR [rax],al
  421388:	not    BYTE PTR [rcx]
  42138a:	rex.X add BYTE PTR [rax],al
  42138d:	add    BYTE PTR [rax],al
  42138f:	add    BYTE PTR [rcx],ch
  421391:	add    BYTE PTR [rax],al
  421393:	add    BYTE PTR [rax],al
  421395:	add    BYTE PTR [rax],al
  421397:	add    BYTE PTR [rdx],al
  421399:	adc    al,BYTE PTR [rdx+0x0]
  42139c:	add    BYTE PTR [rax],al
  42139e:	add    BYTE PTR [rax],al
  4213a0:	sub    al,BYTE PTR [rax]
  4213a2:	add    BYTE PTR [rax],al
  4213a4:	add    BYTE PTR [rax],al
  4213a6:	add    BYTE PTR [rax],al
  4213a8:	movlps xmm0,QWORD PTR [rdx+0x0]
  4213ac:	add    BYTE PTR [rax],al
  4213ae:	add    BYTE PTR [rax],al
  4213b0:	sub    eax,DWORD PTR [rax]
  4213b2:	add    BYTE PTR [rax],al
  4213b4:	add    BYTE PTR [rax],al
  4213b6:	add    BYTE PTR [rax],al
  4213b8:	sbb    dl,BYTE PTR [rdx]
  4213ba:	rex.X add BYTE PTR [rax],al
  4213bd:	add    BYTE PTR [rax],al
  4213bf:	add    BYTE PTR [rax+rax*1],ch
  4213c2:	add    BYTE PTR [rax],al
  4213c4:	add    BYTE PTR [rax],al
  4213c6:	add    BYTE PTR [rax],al
  4213c8:	and    DWORD PTR [rdx],edx
  4213ca:	rex.X add BYTE PTR [rax],al
  4213cd:	add    BYTE PTR [rax],al
  4213cf:	add    BYTE PTR [rip+0x0],ch        # 0x4213d5
  4213d5:	add    BYTE PTR [rax],al
  4213d7:	add    BYTE PTR [rcx],ch
  4213d9:	adc    al,BYTE PTR [rdx+0x0]
  4213dc:	add    BYTE PTR [rax],al
  4213de:	add    BYTE PTR [rax],al
  4213e0:	add    BYTE PTR cs:[rax],al
  4213e3:	add    BYTE PTR [rax],al
  4213e5:	add    BYTE PTR [rax],al
  4213e7:	add    BYTE PTR [rcx],dh
  4213e9:	adc    al,BYTE PTR [rdx+0x0]
  4213ec:	add    BYTE PTR [rax],al
  4213ee:	add    BYTE PTR [rax],al
  4213f0:	cmp    al,BYTE PTR [rax]
  4213f2:	add    BYTE PTR [rax],al
  4213f4:	add    BYTE PTR [rax],al
  4213f6:	add    BYTE PTR [rax],al
  4213f8:	cmp    dl,BYTE PTR [rdx]
  4213fa:	rex.X add BYTE PTR [rax],al
  4213fd:	add    BYTE PTR [rax],al
  4213ff:	add    BYTE PTR [rbx],bh
  421401:	add    BYTE PTR [rax],al
  421403:	add    BYTE PTR [rax],al
  421405:	add    BYTE PTR [rax],al
  421407:	add    BYTE PTR [rdx+0x12],al
  42140a:	rex.X add BYTE PTR [rax],al
  42140d:	add    BYTE PTR [rax],al
  42140f:	add    BYTE PTR [rax+rax*1],bh
  421412:	add    BYTE PTR [rax],al
  421414:	add    BYTE PTR [rax],al
  421416:	add    BYTE PTR [rax],al
  421418:	rex.WRX adc r8b,BYTE PTR [rdx+0x0]
  42141c:	add    BYTE PTR [rax],al
  42141e:	add    BYTE PTR [rax],al
  421420:	cmp    eax,0x0
  421425:	add    BYTE PTR [rax],al
  421427:	add    BYTE PTR [rcx+0x12],bl
  42142a:	rex.X add BYTE PTR [rax],al
  42142d:	add    BYTE PTR [rax],al
  42142f:	add    BYTE PTR [rsi],bh
  421431:	add    BYTE PTR [rax],al
  421433:	add    BYTE PTR [rax],al
  421435:	add    BYTE PTR [rax],al
  421437:	add    BYTE PTR [rdx+0x12],ah
  42143a:	rex.X add BYTE PTR [rax],al
  42143d:	add    BYTE PTR [rax],al
  42143f:	add    BYTE PTR [rdi],bh
  421441:	add    BYTE PTR [rax],al
  421443:	add    BYTE PTR [rax],al
  421445:	add    BYTE PTR [rax],al
  421447:	add    BYTE PTR [rax+0x12],dh
  42144a:	rex.X add BYTE PTR [rax],al
  42144d:	add    BYTE PTR [rax],al
  42144f:	add    BYTE PTR [rax+0x0],al
  421452:	add    BYTE PTR [rax],al
  421454:	add    BYTE PTR [rax],al
  421456:	add    BYTE PTR [rax],al
  421458:	jnp    0x42146c
  42145a:	rex.X add BYTE PTR [rax],al
  42145d:	add    BYTE PTR [rax],al
  42145f:	add    BYTE PTR [rbx+0x0],bl
  421462:	add    BYTE PTR [rax],al
  421464:	add    BYTE PTR [rax],al
  421466:	add    BYTE PTR [rax],al
  421468:	test   BYTE PTR [rdx],dl
  42146a:	rex.X add BYTE PTR [rax],al
  42146d:	add    BYTE PTR [rax],al
  42146f:	add    BYTE PTR [rax+rax*1+0x0],bl
  421473:	add    BYTE PTR [rax],al
  421475:	add    BYTE PTR [rax],al
  421477:	add    BYTE PTR [rdx+0x4212],dl
  42147d:	add    BYTE PTR [rax],al
  42147f:	add    BYTE PTR [rbp+0x0],bl
  421482:	add    BYTE PTR [rax],al
  421484:	add    BYTE PTR [rax],al
  421486:	add    BYTE PTR [rax],al
  421488:	sahf   
  421489:	adc    al,BYTE PTR [rdx+0x0]
  42148c:	add    BYTE PTR [rax],al
  42148e:	add    BYTE PTR [rax],al
  421490:	pop    rsi
  421491:	add    BYTE PTR [rax],al
  421493:	add    BYTE PTR [rax],al
  421495:	add    BYTE PTR [rax],al
  421497:	add    BYTE PTR [rbp+0x4212],ch
  42149d:	add    BYTE PTR [rax],al
  42149f:	add    BYTE PTR [rax+0x0],ah
  4214a2:	add    BYTE PTR [rax],al
  4214a4:	add    BYTE PTR [rax],al
  4214a6:	add    BYTE PTR [rax],al
  4214a8:	mov    edx,0x4212
  4214ad:	add    BYTE PTR [rax],al
  4214af:	add    BYTE PTR [rbx+0x0],bh
  4214b2:	add    BYTE PTR [rax],al
  4214b4:	add    BYTE PTR [rax],al
  4214b6:	add    BYTE PTR [rax],al
  4214b8:	(bad)  
  4214b9:	adc    al,BYTE PTR [rdx+0x0]
  4214bc:	add    BYTE PTR [rax],al
  4214be:	add    BYTE PTR [rax],al
  4214c0:	jl     0x4214c2
  4214c2:	add    BYTE PTR [rax],al
  4214c4:	add    BYTE PTR [rax],al
  4214c6:	add    BYTE PTR [rax],al
  4214c8:	rcl    BYTE PTR [rdx],cl
  4214ca:	rex.X add BYTE PTR [rax],al
  4214cd:	add    BYTE PTR [rax],al
  4214cf:	add    BYTE PTR [rbp+0x0],bh
  4214d2:	add    BYTE PTR [rax],al
  4214d4:	add    BYTE PTR [rax],al
  4214d6:	add    BYTE PTR [rax],al
  4214d8:	loopne 0x4214ec
  4214da:	rex.X add BYTE PTR [rax],al
  4214dd:	add    BYTE PTR [rax],al
  4214df:	add    BYTE PTR [rsi+0x0],bh
  4214e2:	add    BYTE PTR [rax],al
  4214e4:	add    BYTE PTR [rax],al
  4214e6:	add    BYTE PTR [rax],al
  4214e8:	in     eax,dx
  4214e9:	adc    al,BYTE PTR [rdx+0x0]
  4214ec:	add    BYTE PTR [rax],al
  4214ee:	add    BYTE PTR [rax],al
  4214f0:	(bad)  
  4214f1:	add    BYTE PTR [rax],al
  4214f3:	add    BYTE PTR [rax],al
  4214f5:	add    BYTE PTR [rax],al
  4214f7:	add    ch,dh
  4214f9:	adc    al,BYTE PTR [rdx+0x0]
  4214fc:	add    BYTE PTR [rax],al
  4214fe:	add    BYTE PTR [rax],al
  421500:	rex.WRX
  421501:	rex.XB pop r15
  421503:	rex.XB
  421504:	rex.W
  421505:	push   r10
  421507:	add    BYTE PTR [rsi+0x43],cl
  42150a:	pop    rdi
  42150b:	rex.X pop rcx
  42150d:	push   rsp
  42150e:	add    BYTE PTR [r14+0x43],r9b
  421512:	pop    rdi
  421513:	push   rbx
  421514:	rex.W
  421515:	rex.WRXB push r10
  421517:	push   rsp
  421518:	add    BYTE PTR [rsi+0x43],cl
  42151b:	pop    rdi
  42151c:	rex.WB
  42151d:	rex.WRX push rsp
  42151f:	add    BYTE PTR [rsi+0x43],cl
  421522:	pop    rdi
  421523:	rex.RX
  421524:	rex.WR
  421525:	rex.WRXB
  421526:	push   r12
  421528:	add    BYTE PTR [rsi+0x43],cl
  42152b:	pop    rdi
  42152c:	rex.R
  42152d:	rex.WRXB push r13
  42152f:	rex.X
  421530:	rex.WR
  421531:	add    BYTE PTR [r14+0x43],r9b
  421535:	pop    rdi
  421536:	push   rbp
  421537:	rex.X pop rcx
  421539:	push   rsp
  42153a:	add    BYTE PTR [r14+0x43],r9b
  42153e:	pop    rdi
  42153f:	push   rbp
  421540:	push   rbx
  421541:	rex.W
  421542:	rex.WRXB push r10
  421544:	push   rsp
  421545:	add    BYTE PTR [rsi+0x43],cl
  421548:	pop    rdi
  421549:	push   rbp
  42154a:	rex.WB
  42154b:	rex.WRX push rsp
  42154d:	add    BYTE PTR [rsi+0x43],cl
  421550:	pop    rdi
  421551:	rex.WB
  421552:	rex.WRX push rsp
  421554:	ss xor al,0x0
  421557:	rex.WRX
  421558:	rex.XB pop r15
  42155a:	push   rbp
  42155b:	rex.WB
  42155c:	rex.WRX push rsp
  42155e:	ss xor al,0x0
  421561:	rex.WRX
  421562:	rex.XB pop r15
  421564:	push   rbx
  421565:	push   rsp
  421566:	push   rdx
  421567:	rex.WB
  421568:	rex.WRX
  421569:	rex.RXB add BYTE PTR [r14+0x63],r13b
  42156d:	je     0x4215e8
  42156f:	jo     0x4215d6
  421571:	cmp    ah,BYTE PTR [rax]
  421573:	(bad)
  421578:	jns    0x4215ea
  42157a:	and    BYTE PTR gs:[rbx+0x6f],ah
  42157e:	fs add BYTE PTR gs:[rdi+0x65],ah
  421583:	outs   dx,BYTE PTR ds:[rsi]
  421584:	movsxd ebp,DWORD PTR [rsi]
  421586:	movsxd eax,DWORD PTR [rax]
  421588:	jo     0x4215eb
  42158a:	outs   dx,BYTE PTR ds:[rsi]
  42158b:	imul   esp,DWORD PTR [rbx+0x28],0x74636e22
  421592:	jns    0x421604
  421594:	cmp    ah,BYTE PTR gs:[rax]
  421597:	(bad)
  42159c:	jns    0x42160e
  42159e:	and    BYTE PTR gs:[rbx+0x6f],ah
  4215a2:	fs and ch,BYTE PTR gs:[rcx]
  4215a6:	add    BYTE PTR [rax],al
  4215a8:	or     BYTE PTR [rdi-0x2],bl
  4215ab:	(bad)  
  4215ac:	clc    
  4215ad:	pop    rsi
  4215ae:	(bad)  
  4215af:	dec    DWORD PTR [rax+0x5e]
  4215b2:	(bad)  
  4215b3:	call   FWORD PTR [rbp+0x5e]
  4215b6:	(bad)  
  4215b7:	jmp    FWORD PTR [rax+0x5e]
  4215ba:	(bad)  
  4215bb:	(bad)  
  4215bc:	js     0x42161c
  4215be:	(bad)  
  4215bf:	dec    DWORD PTR [rax-0x670001a2]
  4215c5:	pop    rsi
  4215c6:	(bad)  
  4215c7:	jmp    FWORD PTR [rax-0x470001a2]
  4215cd:	pop    rsi
  4215ce:	(bad)  
  4215cf:	dec    eax
  4215d1:	pop    rsi
  4215d2:	(bad)  
  4215d3:	(bad)  
  4215d4:	fcomp  DWORD PTR [rsi-0x2]
  4215d7:	(bad)  
  4215d8:	call   0x6442143b
  4215dd:	push   0x73007261
  4215e2:	imul   esp,DWORD PTR [rdi+0x6e],0x63206465
  4215e9:	push   0x73007261
  4215ee:	push   0x74726f
  4215f3:	imul   ebp,DWORD PTR [rsi+0x74],0x6f6c6600
  4215fa:	(bad)  
  4215fb:	je     0x4215fd
  4215fd:	outs   dx,DWORD PTR fs:[rsi]
  4215ff:	jne    0x421663
  421601:	ins    BYTE PTR es:[rdi],dx
  421602:	add    BYTE PTR gs:[rbp+0x6e],dh
  421606:	jae    0x421671
  421608:	outs   dx,BYTE PTR ds:[esi]
  42160a:	gs and BYTE PTR fs:[rbx+0x68],ah
  42160f:	(bad)  
  421610:	jb     0x421612
  421612:	jne    0x421682
  421614:	jae    0x42167f
  421616:	outs   dx,BYTE PTR ds:[esi]
  421618:	gs and BYTE PTR fs:[rbx+0x68],dh
  42161d:	outs   dx,DWORD PTR ds:[rsi]
  42161e:	jb     0x421694
  421620:	add    BYTE PTR [rbp+0x6e],dh
  421623:	jae    0x42168e
  421625:	outs   dx,BYTE PTR ds:[esi]
  421627:	gs and BYTE PTR fs:[rcx+0x6e],ch
  42162c:	je     0x42162e
  42162e:	jae    0x421699
  421630:	outs   dx,BYTE PTR ds:[esi]
  421632:	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
  421638:	and    BYTE PTR [edi+ebp*2+0x6e],ch
  42163d:	add    BYTE PTR [ebp+0x6e],dh
  421641:	jae    0x4216ac
  421643:	outs   dx,BYTE PTR ds:[esi]
  421645:	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
  42164b:	and    BYTE PTR [edi+ebp*2+0x6e],ch
  421650:	add    BYTE PTR [ebx+0x68],ah
  421654:	(bad)  
  421655:	jb     0x421681
  421657:	add    BYTE PTR [rsi+0x63],ch
  42165a:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  42165e:	cmp    ah,BYTE PTR gs:[rax]
  421661:	(bad)
  421666:	jns    0x4216d8
  421668:	and    BYTE PTR gs:[rbx+0x6f],ah
  42166c:	fs cmp ah,BYTE PTR gs:[rip+0x64]        # 0x4216d8
  421674:	add    BYTE PTR [rax],al
  421676:	add    BYTE PTR [rax],al
  421678:	jo     0x4216db
  42167a:	outs   dx,BYTE PTR ds:[rsi]
  42167b:	imul   esp,DWORD PTR [rbx+0x28],0x63636e22
  421682:	je     0x4216fd
  421684:	jo     0x4216eb
  421686:	cmp    ah,BYTE PTR [rax]
  421688:	(bad)
  42168d:	jns    0x4216ff
  42168f:	and    BYTE PTR gs:[rbx+0x6f],ah
  421693:	fs cmp ah,BYTE PTR gs:[rip+0x742c2264]        # 0x746e38ff
  42169b:	jns    0x42170d
  42169d:	sub    DWORD PTR gs:[rax],eax
  4216a0:	xor    BYTE PTR [rdi-0x2],bl
  4216a3:	jmp    QWORD PTR [rax]
  4216a5:	pop    rdi
  4216a6:	(bad)  
  4216a7:	push   QWORD PTR [rax+0x5e]
  4216aa:	(bad)  
  4216ab:	inc    DWORD PTR [rbp-0x6f0001a2]
  4216b1:	pop    rsi
  4216b2:	(bad)  
  4216b3:	jmp    QWORD PTR [rax-0x4f0001a2]
  4216b9:	pop    rsi
  4216ba:	(bad)  
  4216bb:	inc    eax
  4216bd:	pop    rsi
  4216be:	(bad)  
  4216bf:	call   rax
  4216c1:	pop    rsi
  4216c2:	(bad)  
  4216c3:	jmp    rax
  4216c5:	pop    rsi
  4216c6:	(bad)  
  4216c7:	push   rax
  4216c9:	pop    rsi
  4216ca:	(bad)  
  4216cb:	inc    DWORD PTR [rax]
  4216cd:	pop    rdi
  4216ce:	(bad)  
  4216cf:	call   QWORD PTR [rax]
  4216d1:	pop    rdi
  4216d2:	(bad)  
  4216d3:	push   QWORD PTR [rbp+riz*2+0x78]
  4216d7:	je     0x4216d9
  4216d9:	jae    0x42173e
  4216db:	push   0x75007261
  4216e0:	(bad)  
  4216e1:	jns    0x421757
  4216e3:	add    BYTE PTR gs:[rbp+0x73],dh
  4216e7:	push   0x74726f
  4216ec:	jne    0x421757
  4216ee:	outs   dx,BYTE PTR ds:[rsi]
  4216ef:	je     0x4216f1
  4216f1:	ins    BYTE PTR es:[rdi],dx
  4216f2:	outs   dx,DWORD PTR ds:[rsi]
  4216f3:	outs   dx,BYTE PTR ds:[rsi]
  4216f4:	ins    BYTE PTR es:[edi],dx
  4216f6:	outs   dx,DWORD PTR ds:[rsi]
  4216f7:	outs   dx,BYTE PTR ds:[rsi]
  4216f8:	add    BYTE PTR [ebp+0x6c],dh
  4216fc:	outs   dx,DWORD PTR ds:[rsi]
  4216fd:	outs   dx,BYTE PTR ds:[rsi]
  4216fe:	ins    BYTE PTR es:[edi],dx
  421700:	outs   dx,DWORD PTR ds:[rsi]
  421701:	outs   dx,BYTE PTR ds:[rsi]
  421702:	add    BYTE PTR [ebx+0x74],dh
  421706:	jb     0x421771
  421708:	outs   dx,BYTE PTR ds:[rsi]
  421709:	add    BYTE PTR [esi+0x63],ch
  42170d:	jae    0x421783
  42170f:	jns    0x421781
  421711:	cmp    ah,BYTE PTR gs:[rax]
  421714:	(bad)
  421719:	jns    0x42178b
  42171b:	and    BYTE PTR gs:[rbx+0x6f],ah
  42171f:	fs cmp ah,BYTE PTR gs:[rax]
  421723:	and    eax,0x64
  421728:	fcomp  DWORD PTR [rdi-0x2]
  42172b:	dec    eax
  42172d:	pop    rdi
  42172e:	(bad)  
  42172f:	call   FWORD PTR [rax]
  421731:	pop    rdi
  421732:	(bad)  
  421733:	jmp    FWORD PTR [rip+0x38fffe5f]        # 0x39421598
  421739:	pop    rdi
  42173a:	(bad)  
  42173b:	dec    DWORD PTR [rax+0x5f]
  42173e:	(bad)  
  42173f:	call   FWORD PTR [rax+0x5f]
  421742:	(bad)  
  421743:	jmp    FWORD PTR [rax+0x5f]
  421746:	(bad)  
  421747:	(bad)  
  421748:	js     0x4217a9
  42174a:	(bad)  
  42174b:	dec    DWORD PTR [rax-0x670001a1]
  421751:	pop    rdi
  421752:	(bad)  
  421753:	jmp    FWORD PTR [rax-0x470001a1]
  421759:	pop    rdi
  42175a:	(bad)  
  42175b:	inc    DWORD PTR [rax]
  42175d:	add    BYTE PTR [rax],al
  42175f:	add    BYTE PTR [rbx+0x79],dh
  421762:	ins    DWORD PTR es:[rdi],dx
  421763:	sub    eax,0x6e71663e
  421768:	and    BYTE PTR [rcx],ah
  42176a:	cmp    eax,0x4c554e20
  42176f:	rex.WR and BYTE PTR [rsi],r12b
  421772:	and    BYTE PTR es:[rbx+0x79],dh
  421776:	ins    DWORD PTR es:[rdi],dx
  421777:	sub    eax,0x6d616e3e
  42177c:	and    BYTE PTR gs:[rcx],ah
  42177f:	cmp    eax,0x4c554e20
  421784:	rex.WR add BYTE PTR [rsi+0x63],r13b
  421788:	imul   esp,DWORD PTR [rax+rax*1+0x73],0x3e2d6d79
  421790:	outs   dx,DWORD PTR ds:[rsi]
  421791:	(bad)  
  421792:	push   0x65
  421794:	movsxd esi,DWORD PTR [rbx+riz*2+0x6c]
  421798:	(bad)  
  421799:	jae    0x42180e
  42179b:	and    BYTE PTR [rip+0x434e203d],bh        # 0x439037de
  4217a1:	pop    rdi
  4217a2:	rex.RXB push r10
  4217a4:	push   rax
  4217a5:	add    BYTE PTR [rcx+0x73],ah
  4217a8:	jae    0x42180f
  4217aa:	jb     0x421820
  4217ac:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  4217b3:	ins    BYTE PTR es:[rdi],dx
  4217b4:	jne    0x421828
  4217b6:	cmp    ah,BYTE PTR gs:[rax]
  4217b9:	and    eax,0x73250073
  4217be:	jae    0x421834
  4217c0:	(bad)  
  4217c1:	je     0x4217e3
  4217c3:	cmp    eax,0x5f636e20
  4217c8:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4217cc:	sub    BYTE PTR gs:[rip+0xa3b2973],ah        # 0xa7d4146
  4217d3:	add    BYTE PTR [rax],al
  4217d5:	add    BYTE PTR [rax],al
  4217d7:	add    BYTE PTR [rbx+0x68],ah
  4217da:	movsxd ebp,DWORD PTR gs:[rbx+0x5f]
  4217de:	gs jb  0x421853
  4217e1:	sub    BYTE PTR [rbx+0x74],dh
  4217e4:	(bad)  
  4217e5:	je     0x421813
  4217e7:	pop    rdi
  4217e8:	pop    rdi
  4217e9:	rex.WR
  4217ea:	rex.WB
  4217eb:	rex.WRX
  4217ec:	rex.RB pop r15
  4217ee:	pop    rdi
  4217ef:	sub    al,0x5f
  4217f1:	pop    rdi
  4217f2:	rex.RX
  4217f3:	rex.WB
  4217f4:	rex.WR
  4217f5:	rex.RB pop r15
  4217f7:	pop    rdi
  4217f8:	sub    DWORD PTR [rbx],edi
  4217fa:	add    BYTE PTR [rdx+0x65],dh
  4217fd:	je     0x421874
  4217ff:	jb     0x42186f
  421801:	and    BYTE PTR [rax],dh
  421803:	cmp    eax,DWORD PTR [rax]
  421805:	jge    0x421807
  421807:	je     0x42187c
  421809:	jns    0x421878
  42180b:	sub    eax,0x6a626f3e
  421810:	movsxd esi,DWORD PTR gs:[rbx+riz*2+0x6c]
  421815:	(bad)  
  421816:	jae    0x42188b
  421818:	and    BYTE PTR [rip+0x434e203d],bh        # 0x4390385b
  42181e:	pop    rdi
  42181f:	push   rsp
  421820:	pop    rcx
  421821:	push   rax
  421822:	add    BYTE PTR [r8],r8b
  421825:	sub    al,0x20
  421827:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b68ba0
  42182d:	je     0x42184f
  42182f:	cmp    eax,0x5f636e20
  421834:	fs gs pop di
  421838:	outs   dx,DWORD PTR ds:[rsi]
  421839:	jo     0x42189c
  42183b:	jno    0x4218b2
  42183d:	sub    BYTE PTR gs:[rip+0x25202c73],ah        # 0x256244b7
  421844:	ins    BYTE PTR es:[rdi],dx
  421845:	jne    0x421873
  421847:	and    BYTE PTR [rdx],ah
  421849:	and    eax,0x202c2273
  42184e:	es and eax,0xa3b2973
  421854:	add    BYTE PTR [rbx+0x0],bh
  421857:	and    eax,0x20732573
  42185c:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  421860:	jae    0x4218d6
  421862:	cmp    ecx,DWORD PTR [rdx]
  421864:	add    BYTE PTR [rax],al
  421866:	add    BYTE PTR [rax],al
  421868:	and    eax,0x61747373
  42186d:	je     0x42188f
  42186f:	cmp    eax,0x5f636e20
  421874:	fs gs pop di
  421878:	outs   dx,BYTE PTR gs:[rsi]
  42187a:	jne    0x4218e9
  42187c:	sub    BYTE PTR [rip+0x25202c73],ah        # 0x256244f5
  421882:	jae    0x4218b0
  421884:	and    BYTE PTR [rdx],ah
  421886:	and    eax,0x202c2273
  42188b:	es and eax,0xa3b2973
  421891:	add    BYTE PTR [rbp+0x63],ah
  421894:	outs   dx,DWORD PTR ds:[rsi]
  421895:	outs   dx,BYTE PTR ds:[rsi]
  421896:	jae    0x42190c
  421898:	sub    eax,0x6275733e
  42189d:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4218a1:	jae    0x4218c3
  4218a3:	cmp    eax,0x434e203d
  4218a8:	pop    rdi
  4218a9:	rex.RB
  4218aa:	rex.XB
  4218ab:	rex.WRXB
  4218ac:	rex.WRX push rbx
  4218ae:	push   rsp
  4218af:	add    BYTE PTR [rip+0x6f636573],ah        # 0x6fa57e28
  4218b5:	outs   dx,BYTE PTR ds:[rsi]
  4218b6:	jae    0x42192c
  4218b8:	and    BYTE PTR [rip+0x3b732520],bh        # 0x3bb53dde
  4218be:	or     al,BYTE PTR [rax]
  4218c0:	and    eax,0x61747373
  4218c5:	je     0x4218e7
  4218c7:	cmp    eax,0x5f636e20
  4218cc:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  4218d3:	outs   dx,BYTE PTR gs:[rsi]
  4218d5:	jne    0x421944
  4218d7:	sub    BYTE PTR [rip+0x25202c73],ah        # 0x25624550
  4218dd:	jae    0x42190b
  4218df:	and    BYTE PTR [rdx],ah
  4218e1:	and    eax,0x202c2273
  4218e6:	es movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  4218eb:	jae    0x421961
  4218ed:	sub    DWORD PTR [rbx],edi
  4218ef:	or     al,BYTE PTR [rax]
  4218f1:	add    BYTE PTR [rax],al
  4218f3:	add    BYTE PTR [rax],al
  4218f5:	add    BYTE PTR [rax],al
  4218f7:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b68c70
  4218fd:	je     0x42191f
  4218ff:	cmp    eax,0x5f636e20
  421904:	fs gs pop di
  421908:	jbe    0x421976
  42190a:	outs   dx,BYTE PTR gs:[rsi]
  42190c:	sub    BYTE PTR [rip+0x22202c73],ah        # 0x22624585
  421912:	and    eax,0x202c2273
  421917:	and    eax,0x26202c73
  42191c:	and    eax,0x3b2973
  421921:	add    BYTE PTR [rax],al
  421923:	add    BYTE PTR [rax],al
  421925:	add    BYTE PTR [rax],al
  421927:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b68ca0
  42192d:	je     0x42194f
  42192f:	cmp    eax,0x5f636e20
  421934:	fs gs pop di
  421938:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42193b:	jo     0x4219ac
  42193d:	jne    0x4219ad
  42193f:	sub    BYTE PTR fs:[rip+0x73202c73],ah        # 0x736245b9
  421946:	imul   edi,DWORD PTR [rdx+0x65],0x2528666f
  42194d:	jae    0x421978
  42194f:	sub    al,0x20
  421951:	and    ah,BYTE PTR [rip+0x202c2273]        # 0x206e3bca
  421957:	es and eax,0x3b2973
  42195d:	imul   sp,WORD PTR gs:[rbp+0x6c],0x2d64
  421964:	ds jae 0x4219dc
  421967:	(bad)
  42196c:	jae    0x42198e
  42196e:	cmp    eax,0x434e203d
  421973:	pop    rdi
  421974:	rex.RX
  421975:	rex.WB
  421976:	rex.RB
  421977:	rex.WR
  421978:	add    BYTE PTR [rip+0x61747373],r12b        # 0x61b68cf2
  42197f:	je     0x4219ea
  421981:	movsxd esp,DWORD PTR [rax]
  421983:	imul   ebp,DWORD PTR [rsi+0x74],0x5f732520
  42198a:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x5d64255b
  421992:	and    BYTE PTR [rip+0xa7b20],bh        # 0x4c94b8
  421998:	jge    0x4219d5
  42199a:	add    BYTE PTR [rbp+0x2d],ah
  42199d:	ds imul ebp,DWORD PTR fs:[rbp+0x2e],0x6f637369
  4219a6:	outs   dx,BYTE PTR ds:[rsi]
  4219a7:	jae    0x421a1d
  4219a9:	(bad)  
  4219aa:	outs   dx,BYTE PTR ds:[rsi]
  4219ab:	je     0x4219ad
  4219ad:	and    eax,0x434e0075
  4219b2:	pop    rdi
  4219b3:	rex.XB
  4219b4:	rex.WRXB
  4219b5:	rex.WRB push r8
  4219b7:	rex.WRXB push r13
  4219b9:	rex.WRX
  4219ba:	rex.R pop rdi
  4219bc:	rex.WRXB
  4219bd:	rex.RX
  4219be:	rex.RX push rbx
  4219c0:	rex.RB push r12
  4219c2:	sub    BYTE PTR [rip+0x73252c73],ah        # 0x7367463b
  4219c8:	sub    DWORD PTR [rax],eax
  4219ca:	add    BYTE PTR [rax],al
  4219cc:	add    BYTE PTR [rax],al
  4219ce:	add    BYTE PTR [rax],al
  4219d0:	and    eax,0x61747373
  4219d5:	je     0x4219f7
  4219d7:	cmp    eax,0x5f636e20
  4219dc:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  4219e3:	(bad)  
  4219e4:	jb     0x421a58
  4219e6:	(bad)  
  4219e7:	jns    0x421a48
  4219e9:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4219ec:	jo     0x421a5d
  4219ee:	jne    0x421a5e
  4219f0:	sub    BYTE PTR fs:[rip+0x25202c73],ah        # 0x2562466a
  4219f7:	jae    0x421a25
  4219f9:	and    BYTE PTR [rdx],ah
  4219fb:	and    eax,0x202c2273
  421a00:	and    eax,0x25202c73
  421a05:	jae    0x421a33
  421a07:	and    BYTE PTR [rip+0x25202c64],ah        # 0x25624671
  421a0d:	jae    0x421a6e
  421a0f:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x3b29
  421a17:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b68d90
  421a1d:	je     0x421a3f
  421a1f:	cmp    eax,0x5f636e20
  421a24:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  421a2b:	movsxd ebp,DWORD PTR [rdi+0x6d]
  421a2e:	jo     0x421a9f
  421a30:	jne    0x421aa0
  421a32:	sub    BYTE PTR fs:[rip+0x25202c73],ah        # 0x256246ac
  421a39:	jae    0x421a67
  421a3b:	and    BYTE PTR [rdx],ah
  421a3d:	and    eax,0x202c2273
  421a42:	and    eax,0x25202c73
  421a47:	jae    0x421a72
  421a49:	cmp    eax,DWORD PTR [rax]
  421a4b:	add    BYTE PTR [rax],al
  421a4d:	add    BYTE PTR [rax],al
  421a4f:	add    BYTE PTR [rdi+0x65],ah
  421a52:	outs   dx,BYTE PTR ds:[rsi]
  421a53:	movsxd ebx,DWORD PTR [rdi+0x64]
  421a56:	gs data16 je 0x421ad3
  421a5a:	jo     0x421ac1
  421a5c:	cmp    ah,BYTE PTR [rax]
  421a5e:	jne    0x421ace
  421a60:	gs js  0x421ad3
  421a63:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  421a68:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  421a6c:	and    BYTE PTR gs:[rbx+0x75],dh
  421a70:	(bad)
  421a75:	jae    0x421ab1
  421a77:	and    BYTE PTR [rip+0x434e0064],ah        # 0x43901ae1
  421a7d:	pop    rdi
  421a7e:	rex.XB
  421a7f:	rex.WR
  421a80:	rex.WRXB
  421a81:	rex.X
  421a82:	rex.X
  421a83:	rex.RB push r10
  421a85:	add    BYTE PTR [rsi+0x43],cl
  421a88:	pop    rdi
  421a89:	rex.XB
  421a8a:	rex.WR
  421a8b:	rex.WRXB
  421a8c:	rex.X
  421a8d:	rex.X
  421a8e:	rex.RB push r10
  421a90:	jl     0x421ae0
  421a92:	rex.XB pop r15
  421a94:	ss xor al,0x42
  421a97:	rex.WB push r12
  421a99:	pop    rdi
  421a9a:	rex.WRXB
  421a9b:	rex.RX
  421a9c:	rex.RX push rbx
  421a9e:	rex.RB push r12
	...
  421aa8:	rex.WRX
  421aa9:	rex.XB pop r15
  421aab:	rex.XB
  421aac:	rex.WR
  421aad:	rex.WRXB
  421aae:	rex.X
  421aaf:	rex.X
  421ab0:	rex.RB push r10
  421ab2:	jl     0x421b02
  421ab4:	rex.XB pop r15
  421ab6:	rex.WRX
  421ab7:	rex.RB push r12
  421ab9:	rex.XB
  421aba:	rex.R
  421abb:	rex.RX xor al,0x7c
  421abe:	rex.WRX
  421abf:	rex.XB pop r15
  421ac1:	rex.XB
  421ac2:	rex.WR
  421ac3:	push   r11
  421ac5:	push   rbx
  421ac6:	rex.WB
  421ac7:	rex.XB pop r15
  421ac9:	rex.WRB
  421aca:	rex.WRXB
  421acb:	rex.R
  421acc:	rex.RB
  421acd:	rex.WR add BYTE PTR [rsi+0x43],r9b
  421ad1:	pop    rdi
  421ad2:	rex.XB
  421ad3:	rex.WR
  421ad4:	rex.WRXB
  421ad5:	rex.X
  421ad6:	rex.X
  421ad7:	rex.RB push r10
  421ad9:	jl     0x421b29
  421adb:	rex.XB pop r15
  421add:	rex.WRX
  421ade:	rex.RB push r12
  421ae0:	rex.XB
  421ae1:	rex.R
  421ae2:	rex.RX xor al,0x0
  421ae5:	xor    BYTE PTR [rax],al
  421ae7:	rex.WRX
  421ae8:	rex.XB pop r15
  421aea:	rex.XB
  421aeb:	rex.WRXB
  421aec:	rex.WRX push rsp
  421aee:	rex.WB
  421aef:	rex.RXB push r13
  421af1:	rex.WRXB push r13
  421af3:	push   rbx
  421af4:	add    BYTE PTR [rsi+0x43],cl
  421af7:	pop    rdi
  421af8:	rex.XB
  421af9:	rex.W push rbp
  421afb:	rex.WRX
  421afc:	rex.WXB
  421afd:	rex.RB
  421afe:	add    BYTE PTR [rsi+0x43],r9b
  421b02:	pop    rdi
  421b03:	push   rbx
  421b04:	rex.W push rbp
  421b06:	rex.RX
  421b07:	rex.RX
  421b08:	rex.WR
  421b09:	add    BYTE PTR [r14+0x43],r9b
  421b0d:	pop    rdi
  421b0e:	rex.WRX
  421b0f:	rex.WRXB push r11
  421b11:	rex.W push rbp
  421b13:	rex.RX
  421b14:	rex.RX
  421b15:	rex.WR
  421b16:	add    BYTE PTR [r14+0x43],r9b
  421b1a:	pop    rdi
  421b1b:	rex.RB
  421b1c:	rex.WRX
  421b1d:	rex.R
  421b1e:	rex.WB
  421b1f:	rex.B
  421b20:	rex.WRX pop rdi
  421b22:	rex.WR
  421b23:	rex.WB push r12
  421b25:	push   rsp
  421b26:	rex.WR
  421b27:	add    BYTE PTR [r14+0x43],r9b
  421b2b:	pop    rdi
  421b2c:	rex.RB
  421b2d:	rex.WRX
  421b2e:	rex.R
  421b2f:	rex.WB
  421b30:	rex.B
  421b31:	rex.WRX pop rdi
  421b33:	rex.X
  421b34:	rex.WB
  421b35:	rex.RXB add BYTE PTR [r14+0x43],r9b
  421b39:	pop    rdi
  421b3a:	rex.RX
  421b3b:	rex.WB
  421b3c:	rex.WR
  421b3d:	rex.WR add BYTE PTR [rsi+0x43],r9b
  421b41:	pop    rdi
  421b42:	rex.WRX
  421b43:	rex.WRXB
  421b44:	rex.RX
  421b45:	rex.WB
  421b46:	rex.WR
  421b47:	rex.WR add BYTE PTR [rbx],r12b
  421b4a:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  421b51:	and    BYTE PTR [rbx+rsi*2],bh
  421b54:	je     0x421bba
  421b56:	imul   ebp,DWORD PTR [rdi+0x2e],0x23003e68
  421b5d:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  421b64:	and    BYTE PTR [rbx+rsi*2],bh
  421b67:	je     0x421bcd
  421b69:	ins    BYTE PTR es:[rdi],dx
  421b6a:	imul   esp,DWORD PTR [rdx+0x2e],0x23003e68
  421b71:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  421b78:	and    BYTE PTR [rsi+rbp*2],bh
  421b7b:	gs je  0x421be1
  421b7e:	fs cs pushw 0x3e
  421b84:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  421b88:	imul   ebp,DWORD PTR [rsi+0x65],0x6e616e20
  421b8f:	data16 and BYTE PTR [rax],ch
  421b92:	xor    BYTE PTR [rsi],ch
  421b94:	xor    BYTE PTR [rsi+0x2f],ah
  421b97:	xor    BYTE PTR [rsi],ch
  421b99:	xor    BYTE PTR [rsi+0x29],ah
  421b9c:	add    BYTE PTR [rbx],ah
  421b9e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6e20
  421ba6:	(bad)  
  421ba7:	outs   dx,BYTE PTR ds:[rsi]
  421ba8:	and    BYTE PTR [rax],ah
  421baa:	sub    BYTE PTR [rax],dh
  421bac:	xor    BYTE PTR cs:[rdi],ch
  421baf:	xor    BYTE PTR [rsi],ch
  421bb1:	xor    BYTE PTR [rcx],ch
  421bb3:	add    BYTE PTR [rbx],ah
  421bb5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6920
  421bbd:	outs   dx,BYTE PTR ds:[rsi]
  421bbe:	data16 data16 and BYTE PTR [rax],ch
  421bc2:	xor    DWORD PTR [rsi],ebp
  421bc4:	xor    BYTE PTR [rsi+0x2f],ah
  421bc7:	xor    BYTE PTR [rsi],ch
  421bc9:	xor    BYTE PTR [rsi+0x29],ah
  421bcc:	add    BYTE PTR [rbx],ah
  421bce:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6920
  421bd6:	outs   dx,BYTE PTR ds:[rsi]
  421bd7:	data16 and BYTE PTR [rax],ah
  421bda:	sub    BYTE PTR [rcx],dh
  421bdc:	xor    BYTE PTR cs:[rdi],ch
  421bdf:	xor    BYTE PTR [rsi],ch
  421be1:	xor    BYTE PTR [rcx],ch
  421be3:	add    BYTE PTR [rbx],ah
  421be5:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6920
  421bed:	outs   dx,BYTE PTR ds:[rsi]
  421bee:	imul   bp,WORD PTR [rsi+0x69],0x7974
  421bf4:	data16 and BYTE PTR [rcx+0x6e],ch
  421bf8:	data16 data16 add BYTE PTR [rbx],ah
  421bfc:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6920
  421c04:	outs   dx,BYTE PTR ds:[rsi]
  421c05:	imul   bp,WORD PTR [rsi+0x69],0x7974
  421c0b:	and    BYTE PTR [rax],ah
  421c0d:	imul   ebp,DWORD PTR [rsi+0x66],0x0
  421c14:	add    BYTE PTR [rax],al
  421c16:	add    BYTE PTR [rax],al
  421c18:	je     0x421c93
  421c1a:	jo     0x421c81
  421c1c:	fs data16 and BYTE PTR gs:[rbp+0x6e],dh
  421c22:	jae    0x421c8d
  421c24:	outs   dx,BYTE PTR ds:[esi]
  421c26:	gs and BYTE PTR fs:[rbx+0x68],ah
  421c2b:	(bad)  
  421c2c:	jb     0x421c4e
  421c2e:	and    eax,0x6c255b73
  421c33:	jne    0x421c92
  421c35:	cmp    ecx,DWORD PTR [rdx]
  421c37:	add    BYTE PTR [rbx],ah
  421c39:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2520
  421c41:	jae    0x421c63
  421c43:	sub    BYTE PTR [rax],ch
  421c45:	and    eax,0x73252973
  421c4a:	sub    DWORD PTR [rdx],ecx
  421c4c:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  421c50:	gs fs data16 and BYTE PTR gs:[rip+0x73252073],ah        # 0x73673ccd
  421c5a:	cmp    ecx,DWORD PTR [rdx]
  421c5c:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  421c60:	gs fs data16 and BYTE PTR gs:[rsi+0x63],ch
  421c67:	pop    rdi
  421c68:	jbe    0x421cd6
  421c6a:	outs   dx,BYTE PTR gs:[rsi]
  421c6c:	pop    rdi
  421c6d:	je     0x421c8f
  421c6f:	and    eax,0xa3b73
  421c74:	je     0x421cef
  421c76:	jo     0x421cdd
  421c78:	fs data16 and BYTE PTR gs:[rbx+0x74],dh
  421c7e:	jb     0x421cf5
  421c80:	movsxd esi,DWORD PTR [rax+riz*1+0x25]
  421c84:	jae    0x421ca6
  421c86:	jnp    0x421c92
  421c88:	add    BYTE PTR [rip+0x20732573],ah        # 0x20b54201
  421c8e:	and    eax,0x5b0073
  421c93:	imul   ebp,DWORD PTR fs:[rbp+0x2d],0x6d69643e
  421c9b:	imul   esi,DWORD PTR cs:[rbx+0x63],0x74736e6f
  421ca3:	(bad)  
  421ca4:	outs   dx,BYTE PTR ds:[rsi]
  421ca5:	je     0x421ca7
  421ca7:	pop    rbp
  421ca8:	add    BYTE PTR [rbx],bh
  421caa:	add    BYTE PTR [rbp+0x20],bh
  421cad:	and    eax,0xa3b73
  421cb2:	add    BYTE PTR [rax],al
  421cb4:	add    BYTE PTR [rax],al
  421cb6:	add    BYTE PTR [rax],al
  421cb8:	fs imul bp,WORD PTR gs:[rsi+0x65],0x7463
  421cc0:	jns    0x421d32
  421cc2:	cmp    ah,BYTE PTR gs:[rax]
  421cc5:	jne    0x421d35
  421cc7:	gs js  0x421d3a
  421cca:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  421ccf:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  421cd3:	and    BYTE PTR gs:[rbx+0x75],dh
  421cd7:	(bad)
  421cdc:	jae    0x421d18
  421cde:	and    BYTE PTR [rip+0x73250064],ah        # 0x73671d48
  421ce4:	and    eax,0x7300646c
  421ce9:	je     0x421d4c
  421ceb:	je     0x421d56
  421ced:	movsxd esp,DWORD PTR [rax]
  421cef:	jae    0x421d5a
  421cf1:	jp     0x421d58
  421cf3:	pop    rdi
  421cf4:	je     0x421d16
  421cf6:	and    eax,0x68635f73
  421cfb:	jne    0x421d6b
  421cfd:	imul   esi,DWORD PTR [rbx+0x69],0x7a
  421d01:	gs jae 0x421d5f
  421d04:	and    eax,0x3d205d64
  421d09:	and    BYTE PTR [rbx+0x0],bh
  421d0c:	jge    0x421d2e
  421d0e:	cmp    eax,DWORD PTR [rax]
  421d10:	jbe    0x421d81
  421d12:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x68630000
  421d1a:	movsxd ebp,DWORD PTR gs:[rbx+0x5f]
  421d1e:	gs jb  0x421d93
  421d21:	sub    BYTE PTR [rbx+0x6f],ah
  421d24:	outs   dx,BYTE PTR ds:[rsi]
  421d25:	jae    0x421d9b
  421d27:	and    BYTE PTR [rcx+0x6e],ch
  421d2a:	je     0x421d4c
  421d2c:	jae    0x421da2
  421d2e:	(bad)  
  421d2f:	je     0x421d5d
  421d31:	and    BYTE PTR [rbx+0x6f],ah
  421d34:	outs   dx,BYTE PTR ds:[rsi]
  421d35:	jae    0x421dab
  421d37:	and    BYTE PTR [rcx+0x6e],ch
  421d3a:	je     0x421d5c
  421d3c:	ins    BYTE PTR es:[rdi],dx
  421d3d:	imul   ebp,DWORD PTR [rsi+0x65],0x6f63202c
  421d44:	outs   dx,BYTE PTR ds:[rsi]
  421d45:	jae    0x421dbb
  421d47:	and    BYTE PTR [rbx+0x68],ah
  421d4a:	(bad)  
  421d4b:	jb     0x421d6d
  421d4d:	sub    ah,BYTE PTR [rsi+0x69]
  421d50:	ins    BYTE PTR es:[rdi],dx
  421d51:	sub    DWORD PTR gs:[rax],esp
  421d54:	jnp    0x421d56
  421d56:	imul   esp,DWORD PTR [rsi+0x20],0x61747328
  421d5d:	je     0x421d7f
  421d5f:	and    DWORD PTR [rip+0x5f434e20],edi        # 0x5f856b85
  421d65:	rex.WRX
  421d66:	rex.WRXB
  421d67:	rex.RB push r10
  421d69:	push   rdx
  421d6a:	sub    DWORD PTR [rax],esp
  421d6c:	jnp    0x421d6e
  421d6e:	add    BYTE PTR [rax],al
  421d70:	sub    BYTE PTR [rsi+0x6f],dh
  421d73:	imul   esp,DWORD PTR [rcx+rbp*1+0x66],0x6e697270
  421d7b:	je     0x421de3
  421d7d:	sub    BYTE PTR [rbx+0x74],dh
  421d80:	fs gs jb 0x421df6
  421d84:	sub    al,0x22
  421d86:	ins    BYTE PTR es:[rdi],dx
  421d87:	imul   ebp,DWORD PTR [rsi+0x65],0x20642520
  421d8e:	outs   dx,DWORD PTR ds:[rsi]
  421d8f:	data16 and BYTE PTR [rip+0x25203a73],ah        # 0x25625809
  421d96:	jae    0x421df4
  421d98:	outs   dx,BYTE PTR ds:[rsi]
  421d99:	and    ch,BYTE PTR [rax+riz*1]
  421d9c:	ins    BYTE PTR es:[rdi],dx
  421d9d:	imul   ebp,DWORD PTR [rsi+0x65],0x6966202c
  421da4:	ins    BYTE PTR es:[rdi],dx
  421da5:	gs sub al,0x20
  421da8:	outs   dx,BYTE PTR ds:[rsi]
  421da9:	movsxd ebx,DWORD PTR [rdi+0x73]
  421dac:	je     0x421e20
  421dae:	gs jb  0x421e23
  421db1:	outs   dx,DWORD PTR ds:[rsi]
  421db2:	jb     0x421ddc
  421db4:	jae    0x421e2a
  421db6:	(bad)  
  421db7:	je     0x421de2
  421db9:	sub    DWORD PTR [rbx],edi
  421dbb:	add    BYTE PTR [rsi+0x66],ah
  421dbe:	ins    BYTE PTR es:[rdi],dx
  421dbf:	jne    0x421e34
  421dc1:	push   0x64747328
  421dc6:	gs jb  0x421e3b
  421dc9:	sub    DWORD PTR [rbx],edi
  421dcb:	add    BYTE PTR [rbp+0x78],ah
  421dce:	imul   esi,DWORD PTR [rax+rbp*1+0x31],0x25003b29
  421dd6:	jae    0x421e00
  421dd8:	sub    DWORD PTR [rax],esp
  421dda:	jnp    0x421e0b
  421ddc:	sub    ah,BYTE PTR [rax]
  421dde:	movsxd esi,DWORD PTR [rdx+0x65]
  421de1:	(bad)  
  421de2:	je     0x421e49
  421de4:	and    BYTE PTR [rip+0x2f2a2073],ah        # 0x2f6c3e5d
  421dea:	or     al,BYTE PTR [rax]
  421dec:	add    BYTE PTR [rax],al
  421dee:	add    BYTE PTR [rax],al
  421df0:	imul   ebp,DWORD PTR [rsi+0x74],0x74732020
  421df7:	(bad)  
  421df8:	je     0x421e35
  421dfa:	and    BYTE PTR [rax],ah
  421dfc:	(bad)  
  421dfd:	sub    ah,BYTE PTR [rax]
  421dff:	jb     0x421e66
  421e01:	je     0x421e78
  421e03:	jb     0x421e73
  421e05:	and    BYTE PTR [rbx+0x74],dh
  421e08:	(bad)  
  421e09:	je     0x421e80
  421e0b:	jae    0x421e2d
  421e0d:	sub    ch,BYTE PTR [rdi]
  421e0f:	add    BYTE PTR [rcx+0x6e],ch
  421e12:	je     0x421e34
  421e14:	and    BYTE PTR [rsi+0x63],ch
  421e17:	imul   esp,DWORD PTR [rbx+rdi*1+0x20],0x202a2f20
  421e1f:	outs   dx,BYTE PTR ds:[rsi]
  421e20:	gs je  0x421e66
  421e23:	rex.R
  421e24:	rex.RX and BYTE PTR [rcx+0x64],r13b
  421e28:	and    BYTE PTR [rdx],ch
  421e2a:	(bad)  
  421e2b:	add    BYTE PTR [rdi],ch
  421e2d:	sub    ah,BYTE PTR [rax]
  421e2f:	addr32 jb 0x421ea1
  421e32:	jne    0x421ea4
  421e34:	and    BYTE PTR [rcx+0x64],ch
  421e37:	jae    0x421e59
  421e39:	sub    ch,BYTE PTR [rdi]
  421e3b:	add    BYTE PTR [rip+0x746e6973],ah        # 0x74b087b4
  421e41:	and    BYTE PTR [rip+0xa3b73],ah        # 0x4c59ba
  421e47:	(bad)  
  421e48:	sub    ah,BYTE PTR [rax]
  421e4a:	je     0x421ec5
  421e4c:	jo     0x421eb3
  421e4e:	and    BYTE PTR [rcx+0x64],ch
  421e51:	jae    0x421e73
  421e53:	sub    ch,BYTE PTR [rdi]
  421e55:	add    BYTE PTR [rdi],ch
  421e57:	sub    ah,BYTE PTR [rax]
  421e59:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  421e61:	outs   dx,BYTE PTR ds:[rsi]
  421e62:	and    BYTE PTR [rcx+0x64],ch
  421e65:	jae    0x421e87
  421e67:	sub    ch,BYTE PTR [rdi]
  421e69:	add    BYTE PTR [rdi],ch
  421e6b:	sub    ah,BYTE PTR [rax]
  421e6d:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  421e75:	outs   dx,BYTE PTR ds:[rsi]
  421e76:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  421e7a:	addr32 je 0x421ee5
  421e7d:	jae    0x421e9f
  421e7f:	sub    ch,BYTE PTR [rdi]
  421e81:	add    BYTE PTR [rax],al
  421e83:	add    BYTE PTR [rax],al
  421e85:	add    BYTE PTR [rax],al
  421e87:	add    BYTE PTR [rip+0x7a697373],ah        # 0x7aab9200
  421e8d:	gs pop rdi
  421e8f:	je     0x421eb1
  421e91:	and    eax,0x656c5f73
  421e96:	outs   dx,BYTE PTR ds:[rsi]
  421e97:	and    BYTE PTR [rip+0x5f434e20],bh        # 0x5f856cbd
  421e9d:	push   rbp
  421e9e:	rex.WRX
  421e9f:	rex.WR
  421ea0:	rex.WB
  421ea1:	rex.WRB
  421ea2:	rex.WB push r12
  421ea4:	rex.RB
  421ea5:	cmp    r9d,DWORD PTR [rdx]
  421ea8:	add    BYTE PTR [rip+0x7a697373],ah        # 0x7aab9221
  421eae:	gs pop rdi
  421eb0:	je     0x421ed2
  421eb2:	and    eax,0x656c5f73
  421eb7:	outs   dx,BYTE PTR ds:[rsi]
  421eb8:	and    BYTE PTR [rip+0x756c2520],bh        # 0x75ae43de
  421ebe:	cmp    ecx,DWORD PTR [rdx]
  421ec0:	add    BYTE PTR [rdi],ch
  421ec2:	sub    ah,BYTE PTR [rax]
  421ec4:	outs   dx,BYTE PTR gs:[rsi]
  421ec6:	je     0x421f2d
  421ec8:	jb     0x421eea
  421eca:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6d20
  421ed2:	outs   dx,DWORD PTR ds:[rsi]
  421ed3:	fs and BYTE PTR gs:[rdx],ch
  421ed7:	(bad)  
  421ed8:	add    BYTE PTR [rax],ah
  421eda:	and    BYTE PTR [rax],ah
  421edc:	and    BYTE PTR [rcx+0x6e],ch
  421edf:	je     0x421f01
  421ee1:	and    eax,0xa3b73
  421ee6:	add    BYTE PTR [rax],al
  421ee8:	(bad)  
  421ee9:	sub    ah,BYTE PTR [rax]
  421eeb:	jb     0x421f4e
  421eed:	outs   dx,BYTE PTR ds:[rsi]
  421eee:	imul   esp,DWORD PTR [rax],0x28
  421ef1:	outs   dx,BYTE PTR ds:[rsi]
  421ef2:	jne    0x421f61
  421ef4:	(bad)  
  421ef5:	gs jb  0x421f18
  421ef8:	outs   dx,DWORD PTR ds:[rsi]
  421ef9:	data16 and BYTE PTR [rcx+rbp*2+0x6d],ah
  421efe:	outs   dx,BYTE PTR gs:[rsi]
  421f00:	jae    0x421f6b
  421f02:	outs   dx,DWORD PTR ds:[rsi]
  421f03:	outs   dx,BYTE PTR ds:[rsi]
  421f04:	jae    0x421f2f
  421f06:	and    BYTE PTR [rsi+0x6f],ah
  421f09:	jb     0x421f2b
  421f0b:	gs (bad) 
  421f0d:	movsxd ebp,DWORD PTR [rax+0x20]
  421f10:	jbe    0x421f73
  421f12:	jb     0x421f7d
  421f14:	(bad)  
  421f15:	(bad)  
  421f16:	ins    BYTE PTR es:[rdi],dx
  421f17:	and    BYTE PTR gs:[rdx],ch
  421f1a:	(bad)  
  421f1b:	add    BYTE PTR [rbx],ah
  421f1d:	and    BYTE PTR [rax],ah
  421f1f:	and    BYTE PTR [rbp+riz*2+0x66],ah
  421f23:	imul   ebp,DWORD PTR [rsi+0x65],0x4e415220
  421f2a:	rex.WXB pop r15
  421f2c:	and    eax,0x64252073
  421f31:	or     al,BYTE PTR [rax]
  421f33:	(bad)  
  421f34:	sub    ah,BYTE PTR [rax]
  421f36:	jbe    0x421f99
  421f38:	jb     0x421fa3
  421f3a:	(bad)  
  421f3b:	(bad)  
  421f3c:	ins    BYTE PTR es:[rdi],dx
  421f3d:	and    BYTE PTR gs:[rbx+0x68],dh
  421f41:	(bad)  
  421f42:	jo     0x421fa9
  421f44:	jae    0x421f66
  421f46:	sub    ch,BYTE PTR [rdi]
  421f48:	add    BYTE PTR [rax],ah
  421f4a:	and    BYTE PTR [rax],ah
  421f4c:	and    BYTE PTR [rcx+0x6e],ch
  421f4f:	je     0x421f71
  421f51:	and    eax,0x69645f73
  421f56:	ins    DWORD PTR es:[rdi],dx
  421f57:	jae    0x421fb4
  421f59:	push   rdx
  421f5a:	rex.B
  421f5b:	rex.WRX
  421f5c:	rex.WXB pop r15
  421f5e:	and    eax,0xa3b5d73
  421f63:	add    BYTE PTR [rbp+0x6e],dh
  421f66:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  421f6a:	outs   dx,BYTE PTR ds:[rsi]
  421f6b:	and    BYTE PTR [rbx+0x6d],ah
  421f6e:	outs   dx,DWORD PTR ds:[rsi]
  421f6f:	fs and BYTE PTR gs:[rbp+0x6f],ch
  421f74:	imul   esp,DWORD PTR fs:[rsi+0x69],0x7265
  421f7c:	add    BYTE PTR [rax],al
  421f7e:	add    BYTE PTR [rax],al
  421f80:	and    BYTE PTR [rax],ah
  421f82:	and    BYTE PTR [rax],ah
  421f84:	jae    0x421ffa
  421f86:	(bad)  
  421f87:	je     0x421fa9
  421f89:	cmp    eax,0x5f636e20
  421f8e:	movsxd esi,DWORD PTR [rdx+0x65]
  421f91:	(bad)  
  421f92:	je     0x421ff9
  421f94:	sub    BYTE PTR [rdx],ah
  421f96:	and    eax,0x202c2273
  421f9b:	and    eax,0x26202c73
  421fa0:	outs   dx,BYTE PTR ds:[rsi]
  421fa1:	movsxd ebp,DWORD PTR [rcx+0x64]
  421fa4:	sub    DWORD PTR [rbx],edi
  421fa6:	or     al,BYTE PTR [rax]
  421fa8:	and    BYTE PTR [rax],ah
  421faa:	and    BYTE PTR [rax],ah
  421fac:	and    eax,0x203d2073
  421fb1:	outs   dx,BYTE PTR ds:[rsi]
  421fb2:	movsxd ebp,DWORD PTR [rcx+0x64]
  421fb5:	cmp    ecx,DWORD PTR [rdx]
  421fb7:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b69330
  421fbd:	je     0x421fdf
  421fbf:	cmp    eax,0x5f636e20
  421fc4:	jo     0x42203b
  421fc6:	je     0x422027
  421fc8:	(bad)  
  421fc9:	je     0x42203f
  421fcb:	pop    rdi
  421fcc:	je     0x422033
  421fce:	js     0x422044
  421fd0:	sub    BYTE PTR [rsi+0x63],ch
  421fd3:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x475f434e
  421fdb:	rex.WR
  421fdc:	rex.WRXB
  421fdd:	rex.X
  421fde:	rex.B
  421fdf:	rex.WR sub al,0x20
  421fe2:	and    bl,BYTE PTR [rdi+0x46]
  421fe5:	outs   dx,DWORD PTR ds:[rsi]
  421fe6:	jb     0x422055
  421fe8:	(bad)  
  421fe9:	je     0x42200d
  421feb:	sub    al,0x20
  421fed:	xor    DWORD PTR [rax+riz*1],ebp
  421ff0:	and    ah,BYTE PTR [rip+0x3b292273]        # 0x3b6b4269
  421ff6:	or     al,BYTE PTR [rax]
  421ff8:	outs   dx,BYTE PTR ds:[rsi]
  421ff9:	jne    0x422067
  421ffb:	ins    BYTE PTR es:[rdi],dx
  421ffc:	and    BYTE PTR [rbx+0x6f],ah
  421fff:	outs   dx,BYTE PTR ds:[rsi]
  422000:	je     0x422063
  422002:	imul   ebp,DWORD PTR [rsi+0x65],0x61700072
  422009:	outs   dx,BYTE PTR ds:[rsi]
  42200a:	imul   esp,DWORD PTR [rbx+0x28],0x6c756e22
  422011:	ins    BYTE PTR es:[rdi],dx
  422012:	and    BYTE PTR [rbx+0x6f],ah
  422015:	outs   dx,BYTE PTR ds:[rsi]
  422016:	je     0x422079
  422018:	imul   ebp,DWORD PTR [rsi+0x65],0x292272
  42201f:	add    BYTE PTR [rax],ah
  422021:	and    BYTE PTR [rax],ah
  422023:	and    BYTE PTR [rbx+0x74],dh
  422026:	(bad)  
  422027:	je     0x422049
  422029:	cmp    eax,0x5f636e20
  42202e:	fs gs pop di
  422032:	addr32 jb 0x4220a5
  422035:	sub    BYTE PTR [rip+0x22202c73],ah        # 0x22624cae
  42203b:	and    eax,0x202c2273
  422040:	es and eax,0xa3b2973
  422046:	add    BYTE PTR [rdi],ch
  422048:	sub    ah,BYTE PTR [rax]
  42204a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6420
  422052:	imul   ebp,DWORD PTR [rbp+0x65],0x6f69736e
  422059:	outs   dx,BYTE PTR ds:[rsi]
  42205a:	jae    0x42207c
  42205c:	sub    ch,BYTE PTR [rdi]
  42205e:	add    BYTE PTR [rax],al
  422060:	and    BYTE PTR [rax],ah
  422062:	and    BYTE PTR [rax],ah
  422064:	jae    0x4220da
  422066:	(bad)  
  422067:	je     0x422089
  422069:	cmp    eax,0x5f636e20
  42206e:	fs gs pop di
  422072:	imul   ebp,DWORD PTR fs:[rbp+0x28],0x202c7325
  42207a:	and    ah,BYTE PTR [rip+0x202c2273]        # 0x206e42f3
  422080:	and    eax,0x656c5f73
  422085:	outs   dx,BYTE PTR ds:[rsi]
  422086:	sub    al,0x20
  422088:	es and eax,0xa3b2973
  42208e:	add    BYTE PTR [rdi],ch
  422090:	sub    ah,BYTE PTR [rax]
  422092:	fs imul bp,WORD PTR gs:[rsi+0x65],0x7620
  42209a:	(bad)  
  42209b:	jb     0x422106
  42209d:	(bad)  
  42209e:	(bad)  
  42209f:	ins    BYTE PTR es:[rdi],dx
  4220a0:	gs jae 0x4220c3
  4220a3:	sub    ch,BYTE PTR [rdi]
  4220a5:	add    BYTE PTR [rax],ah
  4220a7:	and    BYTE PTR [rax],ah
  4220a9:	and    BYTE PTR [rip+0x69645f73],ah        # 0x69a68022
  4220af:	ins    DWORD PTR es:[rdi],dx
  4220b0:	jae    0x42210d
  4220b2:	and    eax,0x3d205d64
  4220b7:	and    BYTE PTR [rip+0xa3b73],ah        # 0x4c5c30
  4220bd:	pop    rdi
  4220be:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x0
  4220c6:	add    BYTE PTR [rax],al
  4220c8:	and    BYTE PTR [rax],ah
  4220ca:	and    BYTE PTR [rax],ah
  4220cc:	jae    0x422142
  4220ce:	(bad)  
  4220cf:	je     0x4220f1
  4220d1:	cmp    eax,0x5f636e20
  4220d6:	fs gs pop di
  4220da:	jbe    0x42213d
  4220dc:	jb     0x422106
  4220de:	and    eax,0x22202c73
  4220e3:	and    eax,0x202c2273
  4220e8:	and    eax,0x52202c73
  4220ed:	rex.B
  4220ee:	rex.WRX
  4220ef:	rex.WXB pop r15
  4220f1:	and    eax,0x25202c73
  4220f6:	jae    0x422124
  4220f8:	and    BYTE PTR [rsi],ah
  4220fa:	and    eax,0xa3b2973
  4220ff:	add    BYTE PTR [rax],ah
  422101:	and    BYTE PTR [rax],ah
  422103:	and    BYTE PTR [rbx+0x74],dh
  422106:	(bad)  
  422107:	je     0x422129
  422109:	cmp    eax,0x5f636e20
  42210e:	fs gs pop di
  422112:	jbe    0x422175
  422114:	jb     0x422175
  422116:	movsxd ebp,DWORD PTR [rax+0x75]
  422119:	outs   dx,BYTE PTR ds:[rsi]
  42211a:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  42211e:	sub    BYTE PTR [rip+0x25202c73],ah        # 0x25624d97
  422124:	jae    0x422152
  422126:	and    BYTE PTR [rip+0x202c73],ah        # 0x624d9f
  42212c:	rex.WRX push rbp
  42212e:	rex.WR
  42212f:	rex.WR add BYTE PTR [rip+0x68635f73],r12b        # 0x68a580a9
  422136:	jne    0x4221a6
  422138:	imul   esi,DWORD PTR [rbx+0x69],0x7a
  42213c:	gs jae 0x42213f
  42213f:	sub    DWORD PTR [rbx],edi
  422141:	add    BYTE PTR [rax],al
  422143:	add    BYTE PTR [rax],al
  422145:	add    BYTE PTR [rax],al
  422147:	add    BYTE PTR [rax],ah
  422149:	and    BYTE PTR [rax],ah
  42214b:	and    BYTE PTR [rbx+0x74],dh
  42214e:	(bad)  
  42214f:	je     0x422171
  422151:	cmp    eax,0x5f636e20
  422156:	fs gs pop di
  42215a:	jbe    0x4221bd
  42215c:	jb     0x4221bd
  42215e:	data16 ins BYTE PTR es:[rdi],dx
  422160:	gs je  0x4221c6
  422163:	push   0x32337265
  422168:	sub    BYTE PTR [rip+0x25202c73],ah        # 0x25624de1
  42216e:	jae    0x42219c
  422170:	and    BYTE PTR [rip+0xa3b2964],ah        # 0xa7d4ada
  422176:	add    BYTE PTR [rax],al
  422178:	and    BYTE PTR [rax],ah
  42217a:	and    BYTE PTR [rax],ah
  42217c:	jae    0x4221f2
  42217e:	(bad)  
  42217f:	je     0x4221a1
  422181:	cmp    eax,0x5f636e20
  422186:	fs gs pop di
  42218a:	jbe    0x4221ed
  42218c:	jb     0x4221ed
  42218e:	fs gs data16 ins BYTE PTR es:[rdi],dx
  422192:	(bad)  
  422193:	je     0x4221fa
  422195:	sub    BYTE PTR [rip+0x25202c73],ah        # 0x25624e0e
  42219b:	jae    0x4221c9
  42219d:	and    BYTE PTR [rip+0x25202c73],ah        # 0x25624e16
  4221a3:	fs sub al,0x20
  4221a6:	and    eax,0xa3b2964
  4221ab:	add    BYTE PTR [rax],al
  4221ad:	add    BYTE PTR [rax],al
  4221af:	add    BYTE PTR [rax],ah
  4221b1:	and    BYTE PTR [rax],ah
  4221b3:	and    BYTE PTR [rbx+0x74],dh
  4221b6:	(bad)  
  4221b7:	je     0x4221d9
  4221b9:	cmp    eax,0x5f636e20
  4221be:	fs gs pop di
  4221c2:	jbe    0x422225
  4221c4:	jb     0x422225
  4221c6:	outs   dx,BYTE PTR gs:[rsi]
  4221c8:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x2c732528
  4221d0:	and    BYTE PTR [rip+0x25202c73],ah        # 0x25624e49
  4221d6:	jae    0x422201
  4221d8:	cmp    ecx,DWORD PTR [rdx]
  4221da:	add    BYTE PTR [rax],al
  4221dc:	add    BYTE PTR [rax],al
  4221de:	add    BYTE PTR [rax],al
  4221e0:	and    BYTE PTR [rax],ah
  4221e2:	and    BYTE PTR [rax],ah
  4221e4:	jae    0x42225a
  4221e6:	(bad)  
  4221e7:	je     0x422209
  4221e9:	cmp    eax,0x5f636e20
  4221ee:	fs gs pop di
  4221f2:	jbe    0x422255
  4221f4:	jb     0x422255
  4221f6:	imul   bp,WORD PTR [rsp+rbp*2+0x28],0x7325
  4221fd:	sub    al,0x20
  4221ff:	and    eax,0x25202c73
  422204:	jae    0x422232
  422206:	and    BYTE PTR [rsi+0x55],cl
  422209:	rex.WR
  42220a:	sub    QWORD PTR [rbx],r15
  42220d:	or     al,BYTE PTR [rax]
  42220f:	add    BYTE PTR [rdi],ch
  422211:	sub    ah,BYTE PTR [rax]
  422213:	(bad)  
  422214:	jae    0x422289
  422216:	imul   esp,DWORD PTR [rdi+0x6e],0x6f6c6720
  42221d:	(bad)
  422222:	je     0x422298
  422224:	jb     0x42228f
  422226:	(bad)  
  422227:	jne    0x42229d
  422229:	gs jae 0x42224c
  42222c:	sub    ch,BYTE PTR [rdi]
  42222e:	add    BYTE PTR [rax],al
  422230:	(bad)  
  422231:	sub    ah,BYTE PTR [rax]
  422233:	(bad)  
  422234:	jae    0x4222a9
  422236:	imul   esp,DWORD PTR [rdi+0x6e],0x72657020
  42223d:	sub    eax,0x69726176
  422242:	(bad)  
  422243:	(bad)  
  422244:	ins    BYTE PTR es:[rdi],dx
  422245:	and    BYTE PTR gs:[rcx+0x74],ah
  422249:	je     0x4222bd
  42224b:	imul   esp,DWORD PTR [rdx+0x75],0x20736574
  422252:	sub    ch,BYTE PTR [rdi]
  422254:	add    BYTE PTR [rax],al
  422256:	add    BYTE PTR [rax],al
  422258:	(bad)  
  422259:	sub    ah,BYTE PTR [rax]
  42225b:	outs   dx,DWORD PTR fs:[rsi]
  42225d:	outs   dx,BYTE PTR ds:[rsi]
  42225e:	(bad)  
  42225f:	je     0x422281
  422261:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  422268:	imul   edi,DWORD PTR [rdx+0x65],0x72617620
  42226f:	imul   esp,DWORD PTR [rcx+0x62],0x2073656c
  422276:	ja     0x4222e1
  422278:	je     0x4222e2
  42227a:	and    BYTE PTR [rsi+0x69],ah
  42227d:	ins    BYTE PTR es:[rdi],dx
  42227e:	ins    BYTE PTR es:[rdi],dx
  42227f:	and    BYTE PTR [rsi+0x61],dh
  422282:	ins    BYTE PTR es:[rdi],dx
  422283:	jne    0x4222ea
  422285:	jae    0x4222a7
  422287:	sub    ch,BYTE PTR [rdi]
  422289:	add    BYTE PTR [rax],al
  42228b:	add    BYTE PTR [rax],al
  42228d:	add    BYTE PTR [rax],al
  42228f:	add    BYTE PTR [rbx+0x74],dh
  422292:	(bad)  
  422293:	je     0x4222b5
  422295:	cmp    eax,0x5f636e20
  42229a:	jae    0x422301
  42229c:	je     0x4222fd
  42229e:	imul   bp,WORD PTR [rsp+rbp*2+0x28],0x7325
  4222a5:	sub    al,0x20
  4222a7:	rex.WRX
  4222a8:	rex.XB pop r15
  4222aa:	rex.WRX
  4222ab:	rex.WRXB
  4222ac:	rex.RX
  4222ad:	rex.WB
  4222ae:	rex.WR
  4222af:	rex.WR sub al,0x20
  4222b2:	xor    BYTE PTR [rcx],ch
  4222b4:	cmp    eax,DWORD PTR [rax]
  4222b6:	(bad)  
  4222b7:	sub    ah,BYTE PTR [rax]
  4222b9:	ins    BYTE PTR es:[rdi],dx
  4222ba:	gs (bad) 
  4222bc:	jbe    0x422323
  4222be:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4222c2:	imul   ebp,DWORD PTR [rsi+0x65],0x646f6d20
  4222c9:	and    BYTE PTR gs:[rdx],ch
  4222cc:	(bad)  
  4222cd:	add    BYTE PTR [rax],ah
  4222cf:	and    BYTE PTR [rax],ah
  4222d1:	and    BYTE PTR [rbx+0x74],dh
  4222d4:	(bad)  
  4222d5:	je     0x4222f7
  4222d7:	cmp    eax,0x5f636e20
  4222dc:	outs   dx,BYTE PTR gs:[rsi]
  4222de:	fs fs data16 and BYTE PTR gs:[rax],ch
  4222e4:	and    eax,0xa3b2973
  4222e9:	add    BYTE PTR [rdi],ch
  4222eb:	sub    ah,BYTE PTR [rax]
  4222ed:	(bad)  
  4222ee:	jae    0x422363
  4222f0:	imul   esp,DWORD PTR [rdi+0x6e],0x72617620
  4222f7:	imul   esp,DWORD PTR [rcx+0x62],0x6420656c
  4222fe:	(bad)  
  4222ff:	je     0x422362
  422301:	and    BYTE PTR [rdx],ch
  422303:	(bad)  
  422304:	add    BYTE PTR [rdi],ch
  422306:	sub    ah,BYTE PTR [rax]
  422308:	jbe    0x42236b
  42230a:	jb     0x422375
  42230c:	(bad)  
  42230d:	(bad)  
  42230e:	ins    BYTE PTR es:[rdi],dx
  42230f:	and    BYTE PTR gs:[rcx+0x64],ch
  422313:	jae    0x422335
  422315:	sub    ch,BYTE PTR [rdi]
  422317:	add    BYTE PTR [rsi+0x43],cl
  42231a:	pop    rdi
  42231b:	rex.RXB
  42231c:	rex.WR
  42231d:	rex.WRXB
  42231e:	rex.X
  42231f:	rex.B
  422320:	rex.WR add BYTE PTR [rax],r8b
  422323:	add    BYTE PTR [rax],al
  422325:	add    BYTE PTR [rax],al
  422327:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b696a0
  42232d:	je     0x422398
  42232f:	movsxd esp,DWORD PTR [rax]
  422331:	movsxd ebp,DWORD PTR [rdi+0x6e]
  422334:	jae    0x4223aa
  422336:	and    BYTE PTR [rip+0x73252073],ah        # 0x736743af
  42233c:	pop    rdi
  42233d:	(bad)  
  42233e:	je     0x4223b4
  422340:	pop    rbx
  422341:	and    eax,0x205d646c
  422346:	cmp    eax,0x3b200020
  42234b:	add    BYTE PTR [rax],al
  42234d:	add    BYTE PTR [rax],al
  42234f:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b696c8
  422355:	je     0x422377
  422357:	cmp    eax,0x5f636e20
  42235c:	jo     0x4223d3
  42235e:	je     0x4223bf
  422360:	(bad)  
  422361:	je     0x4223d7
  422363:	pop    rdi
  422364:	and    eax,0x73252873
  422369:	sub    al,0x20
  42236b:	and    eax,0x22202c73
  422370:	and    eax,0x202c2273
  422375:	and    eax,0x25202c73
  42237a:	ins    BYTE PTR es:[rdi],dx
  42237b:	jne    0x4223a9
  42237d:	and    BYTE PTR [rip+0x74615f73],ah        # 0x74a382f6
  422383:	je     0x4223ae
  422385:	cmp    ecx,DWORD PTR [rdx]
  422387:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b69700
  42238d:	je     0x4223af
  42238f:	cmp    eax,0x5f636e20
  422394:	jo     0x42240b
  422396:	je     0x4223f7
  422398:	(bad)  
  422399:	je     0x42240f
  42239b:	pop    rdi
  42239c:	and    eax,0x73252873
  4223a1:	sub    al,0x20
  4223a3:	and    eax,0x22202c73
  4223a8:	and    eax,0x202c2273
  4223ad:	and    eax,0x202c756c
  4223b2:	and    eax,0xa3b2973
  4223b7:	add    BYTE PTR [rsi+0x6f],cl
  4223ba:	outs   dx,BYTE PTR ds:[rsi]
  4223bb:	sub    eax,0x73616c63
  4223c0:	jae    0x42242b
  4223c2:	movsxd esp,DWORD PTR [rax]
  4223c4:	je     0x42243f
  4223c6:	jo     0x42242d
  4223c8:	cmp    ah,BYTE PTR [rax]
  4223ca:	and    eax,0x73
  4223cf:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b69748
  4223d5:	je     0x4223f7
  4223d7:	cmp    eax,0x5f636e20
  4223dc:	jo     0x422453
  4223de:	je     0x42243f
  4223e0:	(bad)  
  4223e1:	je     0x422457
  4223e3:	pop    rdi
  4223e4:	and    eax,0x73252873
  4223e9:	sub    al,0x20
  4223eb:	and    eax,0x22202c73
  4223f0:	and    eax,0x202c2273
  4223f5:	and    eax,0x25202c73
  4223fa:	ins    BYTE PTR es:[rdi],dx
  4223fb:	jne    0x422429
  4223fd:	and    BYTE PTR [rip+0x74615f73],ah        # 0x74a38376
  422403:	je     0x42242e
  422405:	cmp    eax,DWORD PTR [rax]
  422407:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b69780
  42240d:	je     0x42242f
  42240f:	cmp    eax,0x5f636e20
  422414:	jo     0x42248b
  422416:	je     0x422477
  422418:	(bad)  
  422419:	je     0x42248f
  42241b:	pop    rdi
  42241c:	and    eax,0x73252873
  422421:	sub    al,0x20
  422423:	and    eax,0x22202c73
  422428:	and    eax,0x202c2273
  42242d:	and    eax,0x202c756c
  422432:	and    eax,0x74615f73
  422437:	je     0x422462
  422439:	cmp    eax,DWORD PTR [rax]
  42243b:	add    BYTE PTR [rax],al
  42243d:	add    BYTE PTR [rax],al
  42243f:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b697b8
  422445:	je     0x422467
  422447:	cmp    eax,0x5f636e20
  42244c:	jo     0x4224c3
  42244e:	je     0x4224af
  422450:	(bad)  
  422451:	je     0x4224c7
  422453:	sub    BYTE PTR [rip+0x25202c73],ah        # 0x256250cc
  422459:	jae    0x422487
  42245b:	and    BYTE PTR [rdx],ah
  42245d:	and    eax,0x202c2273
  422462:	and    eax,0x25202c73
  422467:	ins    BYTE PTR es:[rdi],dx
  422468:	jne    0x422496
  42246a:	and    BYTE PTR [rip+0x74615f73],ah        # 0x74a383e3
  422470:	je     0x42249b
  422472:	cmp    ecx,DWORD PTR [rdx]
  422474:	add    BYTE PTR [rbx+0x69],dh
  422477:	jp     0x4224de
  422479:	pop    rdi
  42247a:	je     0x42249c
  42247c:	movsxd ebp,DWORD PTR [rdi+0x75]
  42247f:	outs   dx,BYTE PTR ds:[rsi]
  422480:	je     0x4224a2
  422482:	cmp    eax,0x3b3020
  422487:	add    BYTE PTR [rip+0x61747373],ah        # 0x61b69800
  42248d:	je     0x4224f8
  42248f:	movsxd esp,DWORD PTR [rax]
  422491:	and    eax,0x73252073
  422496:	pop    rdi
  422497:	fs (bad) 
  422499:	je     0x4224fc
  42249b:	pop    rbx
  42249c:	xor    DWORD PTR [rbp+0x20],ebx
  42249f:	cmp    eax,0x73257b20
  4224a4:	jge    0x4224e1
  4224a6:	or     al,BYTE PTR [rax]
  4224a8:	and    eax,0x61747373
  4224ad:	je     0x4224cf
  4224af:	cmp    eax,0x5f636e20
  4224b4:	jo     0x42252b
  4224b6:	je     0x422517
  4224b8:	jbe    0x42251b
  4224ba:	jb     0x4224ed
  4224bc:	sub    BYTE PTR [rip+0x25202c73],ah        # 0x25625135
  4224c2:	jae    0x4224f0
  4224c4:	and    BYTE PTR [rsi],ah
  4224c6:	movsxd ebp,DWORD PTR [rdi+0x75]
  4224c9:	outs   dx,BYTE PTR ds:[rsi]
  4224ca:	je     0x4224f8
  4224cc:	and    BYTE PTR [rip+0x61645f73],ah        # 0x61a68445
  4224d2:	je     0x422535
  4224d4:	sub    DWORD PTR [rbx],edi
  4224d6:	or     al,BYTE PTR [rax]
  4224d8:	and    eax,0x61686373
  4224dd:	jb     0x422509
  4224df:	and    BYTE PTR [rip+0x61645f73],ah        # 0x61a68458
  4224e5:	je     0x422548
  4224e7:	and    BYTE PTR [rip+0x73250020],bh        # 0x7367250d
  4224ed:	and    eax,0x73252073
  4224f2:	pop    rdi
  4224f3:	fs (bad) 
  4224f5:	je     0x422558
  4224f7:	pop    rbx
  4224f8:	and    eax,0x205d756c
  4224fd:	cmp    eax,0x73250020
  422502:	jae    0x42256d
  422504:	jp     0x42256b
  422506:	pop    rdi
  422507:	je     0x422529
  422509:	and    eax,0x74735f73
  42250e:	(bad)  
  42250f:	jb     0x422585
  422511:	jae    0x422578
  422513:	je     0x422570
  422515:	and    eax,0x205d756c
  42251a:	cmp    eax,0x25007b20
  42251f:	jae    0x422546
  422521:	ins    BYTE PTR es:[rdi],dx
  422522:	jne    0x422524
  422524:	add    BYTE PTR [rax],al
  422526:	add    BYTE PTR [rax],al
  422528:	and    eax,0x61747373
  42252d:	je     0x42254f
  42252f:	cmp    eax,0x5f636e20
  422534:	jo     0x4225ab
  422536:	je     0x422597
  422538:	jbe    0x42259b
  42253a:	jb     0x42259d
  42253c:	sub    BYTE PTR [rip+0x25202c73],ah        # 0x256251b5
  422542:	jae    0x422570
  422544:	and    BYTE PTR [rip+0x74735f73],ah        # 0x74b584bd
  42254a:	(bad)  
  42254b:	jb     0x4225c1
  42254d:	jae    0x4225b4
  42254f:	je     0x42257d
  422551:	and    BYTE PTR [rip+0x6f635f73],ah        # 0x6fa584ca
  422557:	jne    0x4225c7
  422559:	je     0x4225ce
  42255b:	gs je  0x42258a
  42255e:	and    BYTE PTR [rip+0x61645f73],ah        # 0x61a684d7
  422564:	je     0x4225c7
  422566:	sub    DWORD PTR [rbx],edi
  422568:	or     al,BYTE PTR [rax]
  42256a:	jge    0x422576
  42256c:	add    BYTE PTR [rcx+0x6c],ch
  42256f:	ins    BYTE PTR es:[rdi],dx
  422570:	gs addr32 (bad) 
  422573:	ins    BYTE PTR es:[rdi],dx
  422574:	and    BYTE PTR [rbx+0x79],dh
  422577:	ins    DWORD PTR es:[rdi],dx
  422578:	(bad)  
  422579:	outs   dx,DWORD PTR ds:[rsi]
  42257a:	ins    BYTE PTR es:[rdi],dx
  42257b:	and    BYTE PTR [rsi+0x6f],ah
  42257e:	jb     0x4225a0
  422580:	outs   dx,BYTE PTR gs:[esi]
  422583:	movsxd ebx,DWORD PTR [rdi+0x77]
  422586:	jb     0x4225f1
  422588:	je     0x4225ef
  42258a:	add    BYTE PTR [rax],al
  42258c:	add    BYTE PTR [rax],al
  42258e:	add    BYTE PTR [rax],al
  422590:	jo     0x4225f3
  422592:	outs   dx,BYTE PTR ds:[rsi]
  422593:	imul   esp,DWORD PTR [rbx+0x28],0x6c6c6922
  42259a:	gs addr32 (bad) 
  42259d:	ins    BYTE PTR es:[rdi],dx
  42259e:	and    BYTE PTR [rbx+0x79],dh
  4225a1:	ins    DWORD PTR es:[rdi],dx
  4225a2:	(bad)  
  4225a3:	outs   dx,DWORD PTR ds:[rsi]
  4225a4:	ins    BYTE PTR es:[rdi],dx
  4225a5:	and    BYTE PTR [rsi+0x6f],ah
  4225a8:	jb     0x4225ca
  4225aa:	outs   dx,BYTE PTR gs:[esi]
  4225ad:	movsxd ebx,DWORD PTR [rdi+0x77]
  4225b0:	jb     0x42261b
  4225b2:	je     0x422619
  4225b4:	and    ch,BYTE PTR [rcx]
  4225b6:	add    BYTE PTR [rip+0x7a697373],ah        # 0x7aab992f
  4225bc:	gs pop rdi
  4225be:	je     0x4225e0
  4225c0:	and    eax,0x6f635f73
  4225c5:	jne    0x422635
  4225c7:	je     0x42263c
  4225c9:	gs je  0x422627
  4225cc:	and    eax,0x205d756c
  4225d1:	cmp    eax,0x7b20
  4225d6:	add    BYTE PTR [rax],al
  4225d8:	sub    BYTE PTR [rdx-0x2],bh
  4225db:	(bad)  
  4225dc:	js     0x422657
  4225de:	(bad)  
  4225df:	dec    eax
  4225e1:	js     0x4225e1
  4225e3:	(bad)  
  4225e4:	js     0x42265f
  4225e6:	(bad)  
  4225e7:	(bad)  
  4225e8:	js     0x422663
  4225ea:	(bad)  
  4225eb:	(bad)  
  4225ec:	js     0x422667
  4225ee:	(bad)  
  4225ef:	(bad)  
  4225f0:	js     0x42266b
  4225f2:	(bad)  
  4225f3:	dec    DWORD PTR [rax]
  4225f5:	js     0x4225f5
  4225f7:	dec    DWORD PTR [rax]
  4225f9:	js     0x4225f9
  4225fb:	dec    DWORD PTR [rax]
  4225fd:	js     0x4225fd
  4225ff:	dec    DWORD PTR [rax]
  422601:	js     0x422601
  422603:	dec    DWORD PTR [rax]
  422605:	js     0x422605
  422607:	jmp    FWORD PTR [rip+0xfffe77]        # 0x1422484
  42260d:	add    BYTE PTR [rax],al
  42260f:	add    BYTE PTR [rax],al
  422611:	outs   dx,BYTE PTR gs:[esi]
  422614:	(bad)  
  422615:	imul   ebp,DWORD PTR [rsi+0x2e],0x63
  42261c:	add    BYTE PTR [rax],al
  42261e:	add    BYTE PTR [rax],al
  422620:	outs   dx,BYTE PTR gs:[esi]
  422623:	(bad)  
  422624:	imul   ebp,DWORD PTR [rsi+0x5f],0x69666564
  42262b:	outs   dx,BYTE PTR ds:[rsi]
  42262c:	gs (bad) 
  42262e:	je     0x4226a4
  422630:	jb     0x42266c
  422632:	and    BYTE PTR [rbp+0x6e],dh
  422635:	gs js  0x4226a8
  422638:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42263d:	and    BYTE PTR [rdx+0x61],ah
  422640:	jae    0x4226a7
  422642:	je     0x4226bd
  422644:	jo     0x4226ab
  422646:	cmp    ah,BYTE PTR [rax]
  422648:	and    eax,0x64
  42264d:	add    BYTE PTR [rax],al
  42264f:	add    BYTE PTR [rax+0x61],dh
  422652:	outs   dx,BYTE PTR ds:[rsi]
  422653:	imul   esp,DWORD PTR [rbx+0x28],0x6e656722
  42265a:	(bad)  
  42265b:	imul   ebp,DWORD PTR [rsi+0x5f],0x69666564
  422662:	outs   dx,BYTE PTR ds:[rsi]
  422663:	gs (bad) 
  422665:	je     0x4226db
  422667:	jb     0x4226a3
  422669:	and    BYTE PTR [rbp+0x6e],dh
  42266c:	gs js  0x4226df
  42266f:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  422674:	and    BYTE PTR [rdx+0x61],ah
  422677:	jae    0x4226de
  422679:	je     0x4226f4
  42267b:	jo     0x4226e2
  42267d:	cmp    ah,BYTE PTR [rax]
  42267f:	and    eax,0x622c2264
  422684:	(bad)  
  422685:	jae    0x4226ec
  422687:	je     0x422702
  422689:	jo     0x4226f0
  42268b:	sub    eax,0x7079743e
  422690:	cs je  0x42270c
  422693:	jo     0x4226fa
  422695:	movsxd ebp,DWORD PTR [rdi+0x64]
  422698:	sub    DWORD PTR gs:[rax],eax
  42269b:	add    BYTE PTR [rax],al
  42269d:	add    BYTE PTR [rax],al
  42269f:	add    BYTE PTR [rcx+0x6c],ch
  4226a2:	ins    BYTE PTR es:[rdi],dx
  4226a3:	gs addr32 (bad) 
  4226a6:	ins    BYTE PTR es:[rdi],dx
  4226a7:	and    BYTE PTR [rbx+0x79],dh
  4226aa:	ins    DWORD PTR es:[rdi],dx
  4226ab:	(bad)  
  4226ac:	outs   dx,DWORD PTR ds:[rsi]
  4226ad:	ins    BYTE PTR es:[rdi],dx
  4226ae:	and    BYTE PTR [rsi+0x6f],ah
  4226b1:	jb     0x4226d3
  4226b3:	outs   dx,BYTE PTR gs:[esi]
  4226b6:	(bad)  
  4226b7:	imul   ebp,DWORD PTR [rsi+0x5f],0x74697277
  4226be:	add    BYTE PTR gs:[rax+0x61],dh
  4226c2:	outs   dx,BYTE PTR ds:[rsi]
  4226c3:	imul   esp,DWORD PTR [rbx+0x28],0x6c6c6922
  4226ca:	gs addr32 (bad) 
  4226cd:	ins    BYTE PTR es:[rdi],dx
  4226ce:	and    BYTE PTR [rbx+0x79],dh
  4226d1:	ins    DWORD PTR es:[rdi],dx
  4226d2:	(bad)  
  4226d3:	outs   dx,DWORD PTR ds:[rsi]
  4226d4:	ins    BYTE PTR es:[rdi],dx
  4226d5:	and    BYTE PTR [rsi+0x6f],ah
  4226d8:	jb     0x4226fa
  4226da:	outs   dx,BYTE PTR gs:[esi]
  4226dd:	(bad)  
  4226de:	imul   ebp,DWORD PTR [rsi+0x5f],0x74697277
  4226e5:	and    ch,BYTE PTR gs:[rcx]
  4226e8:	add    BYTE PTR [rax],al
  4226ea:	add    BYTE PTR [rax],al
  4226ec:	push   rsp
  4226ed:	cmp    esi,0xfe800fff
  4226f3:	jmp    FWORD PTR [rdi+0x6ffffe80]
  4226f9:	jg     0x4226f9
  4226fb:	inc    DWORD PTR [rcx+rax*4]
  4226fe:	(bad)  
  4226ff:	(bad)  
  422700:	mov    edi,0x5ffffe7f
  422705:	cmp    dh,0xff
  422708:	(bad)  
  422709:	jg     0x422709
  42270b:	dec    edi
  42270d:	jle    0x42270d
  42270f:	jmp    FWORD PTR [rdi]
  422711:	jle    0x422711
  422713:	(bad)  
  422714:	jg     0x422794
  422716:	(bad)  
  422717:	(bad)  
  422718:	fistp  QWORD PTR [rbp-0x2]
  42271b:	jmp    QWORD PTR [rdx+0x74fffe7d]
  422721:	jae    0x42279c
  422723:	ins    DWORD PTR es:[rdi],dx
  422724:	sub    eax,0x6a626f3e
  422729:	movsxd esi,DWORD PTR gs:[rbx+riz*2+0x6c]
  42272e:	(bad)  
  42272f:	jae    0x4227a4
  422731:	and    BYTE PTR [rip+0x434e203d],bh        # 0x43904774
  422737:	pop    rdi
  422738:	push   rsp
  422739:	pop    rcx
  42273a:	push   rax
  42273b:	add    BYTE PTR [r9+0x73],r12b
  42273f:	jae    0x4227a6
  422741:	jb     0x4227b7
  422743:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  42274a:	ins    BYTE PTR es:[rdi],dx
  42274b:	jne    0x4227bf
  42274d:	cmp    ah,BYTE PTR gs:[rax]
  422750:	and    eax,0x63650073
  422755:	outs   dx,DWORD PTR ds:[rsi]
  422756:	outs   dx,BYTE PTR ds:[rsi]
  422757:	jae    0x4227cd
  422759:	sub    eax,0x6275733e
  42275e:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  422762:	jae    0x422784
  422764:	cmp    eax,0x434e203d
  422769:	pop    rdi
  42276a:	rex.RB
  42276b:	rex.XB
  42276c:	rex.WRXB
  42276d:	rex.WRX push rbx
  42276f:	push   rsp
  422770:	add    BYTE PTR [rbp+0x66],ah
  422773:	imul   esp,DWORD PTR [rbp+0x6c],0x733e2d64
  42277a:	jne    0x4227de
  42277c:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  422780:	jae    0x4227a2
  422782:	cmp    eax,0x434e203d
  422787:	pop    rdi
  422788:	rex.RX
  422789:	rex.WB
  42278a:	rex.RB
  42278b:	rex.WR
  42278c:	add    BYTE PTR [rax],r8b
  42278f:	add    BYTE PTR [rbp+riz*2+0x66],ah
  422793:	imul   ebp,DWORD PTR [rsi+0x65],0x70797463
  42279a:	cmp    ah,BYTE PTR gs:[rax]
  42279d:	jne    0x42280d
  42279f:	gs js  0x422812
  4227a2:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4227a7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4227ab:	and    BYTE PTR gs:[rbx+0x75],dh
  4227af:	(bad)
  4227b4:	jae    0x4227b6
	...
  4227be:	add    BYTE PTR [rax],al
  4227c0:	and    eax,0x25203a73
  4227c5:	jae    0x4227e7
  4227c7:	ins    BYTE PTR es:[rdi],dx
  4227c8:	imul   ebp,DWORD PTR [rsi+0x65],0x3a642520
  4227cf:	and    BYTE PTR [rax],al
  4227d1:	jae    0x422841
  4227d3:	jo     0x422847
  4227d5:	imul   ebp,DWORD PTR [rsi+0x74],0x61662066
  4227dc:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65670065
  4227e4:	outs   dx,BYTE PTR ds:[rsi]
  4227e5:	gs jb  0x42285a
  4227e8:	movsxd eax,DWORD PTR cs:[rax]
  4227eb:	jo     0x42284e
  4227ed:	outs   dx,BYTE PTR ds:[rsi]
  4227ee:	imul   esp,DWORD PTR [rbx+0x28],0x706e7322
  4227f5:	jb     0x422860
  4227f7:	outs   dx,BYTE PTR ds:[rsi]
  4227f8:	je     0x422860
  4227fa:	and    BYTE PTR [rsi+0x61],ah
  4227fd:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x292265
	...
  42280d:	add    BYTE PTR [rax],al
  42280f:	add    BYTE PTR [rip+0x6e656700],ch        # 0x6ea78f15
  422815:	ins    BYTE PTR es:[rdi],dx
  422816:	imul   esp,DWORD PTR [rdx+0x2e],0x79730063
  42281d:	ins    DWORD PTR es:[rdi],dx
  42281e:	sub    eax,0x7072673e
  422823:	imul   esi,DWORD PTR cs:[rbx+0x5f],0x746f6f72
  42282b:	add    BYTE PTR [rax],al
  42282d:	add    BYTE PTR [rax],al
  42282f:	add    BYTE PTR [rax+0x61],dh
  422832:	jb     0x422899
  422834:	outs   dx,BYTE PTR ds:[rsi]
  422835:	je     0x422864
  422837:	outs   dx,DWORD PTR ds:[rsi]
  422839:	(bad)  
  42283a:	push   0x65
  42283c:	movsxd esi,DWORD PTR [rbx+riz*2+0x6c]
  422840:	(bad)  
  422841:	jae    0x4228b6
  422843:	and    BYTE PTR [rip+0x434e203d],bh        # 0x43904886
  422849:	pop    rdi
  42284a:	push   rsp
  42284b:	pop    rcx
  42284c:	push   rax
  42284d:	add    BYTE PTR [r8+0x61],r14b
  422851:	jb     0x4228b8
  422853:	outs   dx,BYTE PTR ds:[rsi]
  422854:	je     0x422883
  422856:	ds data16 jno 0x4228c8
  42285a:	and    BYTE PTR [rcx],ah
  42285c:	cmp    eax,0x4c554e20
  422861:	rex.WR add BYTE PTR [rbx+0x79],r14b
  422865:	ins    DWORD PTR es:[rdi],dx
  422866:	sub    eax,0x6a626f3e
  42286b:	movsxd esi,DWORD PTR gs:[rbx+riz*2+0x6c]
  422870:	(bad)  
  422871:	jae    0x4228e6
  422873:	and    BYTE PTR [rip+0x434e203d],bh        # 0x439048b6
  422879:	pop    rdi
  42287a:	push   r12
  42287c:	push   rsp
  42287d:	add    BYTE PTR [rax],al
  42287f:	add    BYTE PTR [rax],al
  422881:	xor    BYTE PTR [rax],dh
  422883:	add    BYTE PTR [rax],al
  422885:	add    BYTE PTR [rax],al
  422887:	add    BYTE PTR [rsi+0x63],ch
  42288a:	pop    rdi
  42288b:	addr32 gs je 0x4228f5
  42288f:	imul   ebp,DWORD PTR [rsp+rbp*2+0x3a],0x726e7520
  422897:	movsxd ebp,DWORD PTR gs:[rdi+0x67]
  42289b:	outs   dx,BYTE PTR ds:[rsi]
  42289c:	imul   edi,DWORD PTR [rdx+0x65],0x79742064
  4228a3:	jo     0x42290a
  4228a5:	cmp    ah,BYTE PTR [rax]
  4228a7:	and    eax,0x64
  4228ac:	xor    al,0x93
  4228ae:	(bad)  
  4228af:	jmp    QWORD PTR [rdx+rdx*4-0x2]
  4228b3:	push   QWORD PTR [rdx+rdx*4-0x2]
  4228b7:	inc    DWORD PTR [rdx+rdx*4-0x6d6b0002]
  4228be:	(bad)  
  4228bf:	jmp    QWORD PTR [rdx+rdx*4-0x6d4b0002]
  4228c6:	(bad)  
  4228c7:	inc    esp
  4228c9:	xchg   edx,eax
  4228ca:	(bad)  
  4228cb:	call   rsp
  4228cd:	xchg   edx,eax
  4228ce:	(bad)  
  4228cf:	jmp    rsp
  4228d1:	xchg   edx,eax
  4228d2:	(bad)  
  4228d3:	push   rsp
  4228d5:	xchg   edx,eax
  4228d6:	(bad)  
  4228d7:	inc    DWORD PTR [rdi]
  4228d9:	xchg   ebx,eax
  4228da:	(bad)  
  4228db:	call   QWORD PTR [rbx+rdx*4]
  4228de:	(bad)  
  4228df:	push   QWORD PTR [rbx+rdx*4]
  4228e2:	(bad)  
  4228e3:	(bad)  
  4228e4:	cmp    DWORD PTR [rdx+0x7374fffe],edx
  4228ea:	jns    0x422959
  4228ec:	sub    eax,0x6a626f3e
  4228f1:	movsxd esi,DWORD PTR gs:[rbx+riz*2+0x6c]
  4228f6:	(bad)  
  4228f7:	jae    0x42296c
  4228f9:	and    BYTE PTR [rip+0x434e203d],bh        # 0x4390493c
  4228ff:	pop    rdi
  422900:	push   rsp
  422901:	pop    rcx
  422902:	push   rax
  422903:	add    BYTE PTR [r9+0x73],r12b
  422907:	jae    0x42296e
  422909:	jb     0x42297f
  42290b:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  422912:	ins    BYTE PTR es:[rdi],dx
  422913:	jne    0x422987
  422915:	cmp    ah,BYTE PTR gs:[rax]
  422918:	and    eax,0x69660073
  42291d:	ins    BYTE PTR es:[rdi],dx
  42291e:	ins    BYTE PTR es:[rdi],dx
  42291f:	cmp    ah,BYTE PTR [rax]
  422921:	jne    0x422991
  422923:	gs js  0x422996
  422926:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42292b:	and    BYTE PTR [rbx+0x75],dh
  42292e:	(bad)
  422933:	jae    0x422955
  422935:	and    eax,0x65670064
  42293a:	je     0x4229a2
  42293c:	imul   ebp,DWORD PTR [rsp+rbp*2+0x2e],0x63
  422944:	add    BYTE PTR [rax],al
  422946:	add    BYTE PTR [rax],al
  422948:	jo     0x4229ab
  42294a:	outs   dx,BYTE PTR ds:[rsi]
  42294b:	imul   esp,DWORD PTR [rbx+0x28],0x6c696622
  422952:	ins    BYTE PTR es:[rdi],dx
  422953:	cmp    ah,BYTE PTR [rax]
  422955:	jne    0x4229c5
  422957:	gs js  0x4229ca
  42295a:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42295f:	and    BYTE PTR [rbx+0x75],dh
  422962:	(bad)
  422967:	jae    0x422989
  422969:	and    eax,0x742c2264
  42296e:	jae    0x4229e9
  422970:	ins    DWORD PTR es:[rdi],dx
  422971:	sub    eax,0x6275733e
  422976:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  42297a:	jae    0x4229a5
  42297c:	add    BYTE PTR [rax],al
  42297e:	add    BYTE PTR [rax],al
  422980:	je     0x4229f8
  422982:	jae    0x4229fd
  422984:	ins    DWORD PTR es:[rdi],dx
  422985:	sub    eax,0x6a626f3e
  42298a:	movsxd esi,DWORD PTR gs:[rbx+riz*2+0x6c]
  42298f:	(bad)  
  422990:	jae    0x422a05
  422992:	and    BYTE PTR [rip+0x434e203d],bh        # 0x439049d5
  422998:	pop    rdi
  422999:	push   rsi
  42299a:	push   r10
  42299c:	and    BYTE PTR [rsp+rdi*2+0x20],bh
  4229a0:	je     0x422a18
  4229a2:	jae    0x422a1d
  4229a4:	ins    DWORD PTR es:[rdi],dx
  4229a5:	sub    eax,0x6a626f3e
  4229aa:	movsxd esi,DWORD PTR gs:[rbx+riz*2+0x6c]
  4229af:	(bad)  
  4229b0:	jae    0x422a25
  4229b2:	and    BYTE PTR [rip+0x434e203d],bh        # 0x439049f5
  4229b8:	pop    rdi
  4229b9:	push   rsp
  4229ba:	pop    rcx
  4229bb:	push   rax
  4229bc:	add    BYTE PTR [r14+0x43],r9b
  4229c0:	pop    rdi
  4229c1:	rex.RX
  4229c2:	rex.WB
  4229c3:	rex.WR
  4229c4:	rex.WR pop rdi
  4229c6:	rex.X pop rcx
  4229c8:	push   rsp
  4229c9:	add    BYTE PTR [r14+0x43],r9b
  4229cd:	pop    rdi
  4229ce:	rex.RX
  4229cf:	rex.WB
  4229d0:	rex.WR
  4229d1:	rex.WR pop rdi
  4229d3:	rex.XB
  4229d4:	rex.W
  4229d5:	push   r10
  4229d7:	add    BYTE PTR [rsi+0x43],cl
  4229da:	pop    rdi
  4229db:	rex.RX
  4229dc:	rex.WB
  4229dd:	rex.WR
  4229de:	rex.WR pop rdi
  4229e0:	push   rbx
  4229e1:	rex.W
  4229e2:	rex.WRXB push r10
  4229e4:	push   rsp
  4229e5:	add    BYTE PTR [rsi+0x43],cl
  4229e8:	pop    rdi
  4229e9:	rex.RX
  4229ea:	rex.WB
  4229eb:	rex.WR
  4229ec:	rex.WR pop rdi
  4229ee:	rex.WB
  4229ef:	rex.WRX push rsp
  4229f1:	add    BYTE PTR [rsi+0x43],cl
  4229f4:	pop    rdi
  4229f5:	rex.RX
  4229f6:	rex.WB
  4229f7:	rex.WR
  4229f8:	rex.WR pop rdi
  4229fa:	rex.RX
  4229fb:	rex.WR
  4229fc:	rex.WRXB
  4229fd:	push   r12
  4229ff:	add    BYTE PTR [rsi+0x43],cl
  422a02:	pop    rdi
  422a03:	rex.RX
  422a04:	rex.WB
  422a05:	rex.WR
  422a06:	rex.WR pop rdi
  422a08:	rex.R
  422a09:	rex.WRXB push r13
  422a0b:	rex.X
  422a0c:	rex.WR
  422a0d:	add    BYTE PTR [r14+0x43],r9b
  422a11:	pop    rdi
  422a12:	rex.RX
  422a13:	rex.WB
  422a14:	rex.WR
  422a15:	rex.WR pop rdi
  422a17:	push   rbp
  422a18:	rex.X pop rcx
  422a1a:	push   rsp
  422a1b:	add    BYTE PTR [r14+0x43],r9b
  422a1f:	pop    rdi
  422a20:	rex.RX
  422a21:	rex.WB
  422a22:	rex.WR
  422a23:	rex.WR pop rdi
  422a25:	push   rbp
  422a26:	push   rbx
  422a27:	rex.W
  422a28:	rex.WRXB push r10
  422a2a:	push   rsp
  422a2b:	add    BYTE PTR [rsi+0x43],cl
  422a2e:	pop    rdi
  422a2f:	rex.RX
  422a30:	rex.WB
  422a31:	rex.WR
  422a32:	rex.WR pop rdi
  422a34:	push   rbp
  422a35:	rex.WB
  422a36:	rex.WRX push rsp
  422a38:	add    BYTE PTR [rsi+0x43],cl
  422a3b:	pop    rdi
  422a3c:	rex.RX
  422a3d:	rex.WB
  422a3e:	rex.WR
  422a3f:	rex.WR pop rdi
  422a41:	rex.WB
  422a42:	rex.WRX push rsp
  422a44:	ss xor al,0x0
  422a47:	rex.WRX
  422a48:	rex.XB pop r15
  422a4a:	rex.RX
  422a4b:	rex.WB
  422a4c:	rex.WR
  422a4d:	rex.WR pop rdi
  422a4f:	push   rbp
  422a50:	rex.WB
  422a51:	rex.WRX push rsp
  422a53:	ss xor al,0x0
  422a56:	rex.WRX
  422a57:	rex.XB pop r15
  422a59:	rex.RX
  422a5a:	rex.WB
  422a5b:	rex.WR
  422a5c:	rex.WR pop rdi
  422a5e:	push   rbx
  422a5f:	push   rsp
  422a60:	push   rdx
  422a61:	rex.WB
  422a62:	rex.WRX
  422a63:	rex.RXB add BYTE PTR [r13+0x6e],r14b
  422a67:	gs js  0x422ada
  422a6a:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  422a6f:	and    BYTE PTR [rbp+riz*2+0x66],ah
  422a73:	(bad)  
  422a74:	jne    0x422ae2
  422a76:	je     0x422a98
  422a78:	imul   bp,WORD PTR [rsp+rbp*2+0x20],0x616e
  422a7f:	ins    DWORD PTR es:[rdi],dx
  422a80:	add    BYTE PTR gs:[rax],al
  422a83:	add    BYTE PTR [rax],al
  422a85:	add    BYTE PTR [rax],al
  422a87:	add    BYTE PTR [rax+0x61],dh
  422a8a:	outs   dx,BYTE PTR ds:[rsi]
  422a8b:	imul   esp,DWORD PTR [rbx+0x28],0x656e7522
  422a92:	js     0x422b04
  422a94:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  422a99:	and    BYTE PTR [rbp+riz*2+0x66],ah
  422a9d:	(bad)  
  422a9e:	jne    0x422b0c
  422aa0:	je     0x422ac2
  422aa2:	imul   bp,WORD PTR [rsp+rbp*2+0x20],0x616e
  422aa9:	ins    DWORD PTR es:[rdi],dx
  422aaa:	and    ch,BYTE PTR gs:[rcx]
  422aad:	add    BYTE PTR [rax],al
  422aaf:	add    BYTE PTR [rax-0x69],al
  422ab2:	(bad)  
  422ab3:	inc    DWORD PTR [rax-0x6a00016a]
  422ab9:	xchg   esi,eax
  422aba:	(bad)  
  422abb:	jmp    QWORD PTR [rax-0x4f00016a]
  422ac1:	xchg   esi,eax
  422ac2:	(bad)  
  422ac3:	inc    eax
  422ac5:	xchg   esi,eax
  422ac6:	(bad)  
  422ac7:	call   rax
  422ac9:	xchg   esi,eax
  422aca:	(bad)  
  422acb:	jmp    rax
  422acd:	xchg   esi,eax
  422ace:	(bad)  
  422acf:	push   rax
  422ad1:	xchg   esi,eax
  422ad2:	(bad)  
  422ad3:	inc    DWORD PTR [rax]
  422ad5:	xchg   edi,eax
  422ad6:	(bad)  
  422ad7:	call   QWORD PTR [rax]
  422ad9:	xchg   edi,eax
  422ada:	(bad)  
  422adb:	jmp    QWORD PTR [rax]
  422add:	xchg   edi,eax
  422ade:	(bad)  
  422adf:	push   QWORD PTR [rax]
  422ae1:	xchg   edi,eax
  422ae2:	(bad)  
  422ae3:	inc    DWORD PTR [rax]
	...
  422aed:	add    BYTE PTR [rsi+0x6d696447],bl
  422af3:	jae    0x422b5a
  422af5:	je     0x422b17
  422af7:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c97791d
  422afd:	rex.WR add BYTE PTR [rcx+0x73],r12b
  422b01:	jae    0x422b68
  422b03:	jb     0x422b79
  422b05:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  422b0c:	ins    BYTE PTR es:[rdi],dx
  422b0d:	jne    0x422b81
  422b0f:	cmp    ah,BYTE PTR gs:[rax]
  422b12:	and    eax,0x69640073
  422b17:	ins    DWORD PTR es:[rdi],dx
  422b18:	jae    0x422b7f
  422b1a:	je     0x422b49
  422b1c:	outs   dx,BYTE PTR ds:[rsi]
  422b1e:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x30203e20
  422b26:	add    BYTE PTR [rdi+0x64],ch
  422b29:	outs   dx,DWORD PTR ds:[rsi]
  422b2a:	ins    DWORD PTR es:[rdi],dx
  422b2b:	sub    eax,0x6e61723e
  422b30:	imul   esp,DWORD PTR [rax],0x3c
  422b33:	cmp    eax,0x5f434e20
  422b38:	rex.WRB
  422b39:	pop    r8
  422b3b:	pop    rdi
  422b3c:	push   rsi
  422b3d:	push   r10
  422b3f:	pop    rdi
  422b40:	rex.R
  422b41:	rex.WB
  422b42:	rex.WRB push r11
  422b44:	add    BYTE PTR [rax],al
  422b46:	add    BYTE PTR [rax],al
  422b48:	outs   dx,DWORD PTR ds:[rsi]
  422b49:	outs   dx,DWORD PTR fs:[rsi]
  422b4b:	ins    DWORD PTR es:[rdi],dx
  422b4c:	sub    eax,0x6174733e
  422b51:	jb     0x422bc7
  422b53:	pop    rbx
  422b54:	imul   ebx,DWORD PTR [rbp+0x20],0x646f202b
  422b5b:	outs   dx,DWORD PTR ds:[rsi]
  422b5c:	ins    DWORD PTR es:[rdi],dx
  422b5d:	sub    eax,0x756f633e
  422b62:	outs   dx,BYTE PTR ds:[rsi]
  422b63:	je     0x422bc0
  422b65:	imul   ebx,DWORD PTR [rbp+0x20],0x6f203d3c
  422b6c:	outs   dx,DWORD PTR fs:[rsi]
  422b6e:	ins    DWORD PTR es:[rdi],dx
  422b6f:	sub    eax,0x6365643e
  422b74:	ins    BYTE PTR es:[rdi],dx
  422b75:	jae    0x422be0
  422b77:	jp     0x422bde
  422b79:	pop    rbx
  422b7a:	imul   ebx,DWORD PTR [rbp+0x0],0x64000000
  422b81:	imul   ebp,DWORD PTR [rbp+0x73],0x3e2d7465
  422b88:	outs   dx,BYTE PTR ds:[rsi]
  422b89:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x30203e20
  422b91:	and    BYTE PTR [rsi],ah
  422b93:	and    BYTE PTR es:[rcx+rbp*2+0x6d],ah
  422b98:	jae    0x422bff
  422b9a:	je     0x422bc9
  422b9c:	outs   dx,BYTE PTR ds:[rsi]
  422b9e:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x203d3e20
  422ba6:	jae    0x422c1c
  422ba8:	outs   dx,DWORD PTR ds:[rsi]
  422ba9:	jo     0x422bab
  422bab:	jae    0x422c21
  422bad:	outs   dx,DWORD PTR ds:[rsi]
  422bae:	jo     0x422bd0
  422bb0:	and    BYTE PTR ds:[rbx+0x74],dh
  422bb4:	(bad)  
  422bb5:	jb     0x422c2b
  422bb7:	add    BYTE PTR [rbx+0x25],bl
  422bba:	ins    BYTE PTR es:[rdi],dx
  422bbb:	jne    0x422bec
  422bbd:	and    eax,0x2e2e756c
  422bc2:	and    eax,0x253a756c
  422bc7:	ins    BYTE PTR es:[rdi],dx
  422bc8:	jne    0x422c27
  422bca:	add    BYTE PTR [rdi+0x64],ch
  422bcd:	outs   dx,DWORD PTR ds:[rsi]
  422bce:	ins    DWORD PTR es:[rdi],dx
  422bcf:	sub    eax,0x6e61723e
  422bd4:	imul   esp,DWORD PTR [rax],0x3e
  422bd7:	and    BYTE PTR [rax],dh
  422bd9:	add    BYTE PTR [rax],al
  422bdb:	add    BYTE PTR [rax],al
  422bdd:	add    BYTE PTR [rax],al
  422bdf:	add    BYTE PTR [rsi+0x63],ch
  422be2:	je     0x422c5d
  422be4:	jo     0x422c4b
  422be6:	(bad)  
  422be7:	ins    BYTE PTR es:[rdi],dx
  422be8:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  422bef:	cmp    ah,BYTE PTR [rax]
  422bf1:	(bad)
  422bf6:	jns    0x422c68
  422bf8:	and    BYTE PTR gs:[rbx+0x6f],ah
  422bfc:	fs cmp ah,BYTE PTR gs:[rax]
  422c00:	and    eax,0x666f0064
  422c05:	data16 jae 0x422c6d
  422c08:	je     0x422c7d
  422c0a:	movsxd eax,DWORD PTR cs:[rax]
  422c0d:	add    BYTE PTR [rax],al
  422c0f:	add    BYTE PTR [rax+0x61],dh
  422c12:	outs   dx,BYTE PTR ds:[rsi]
  422c13:	imul   esp,DWORD PTR [rbx+0x28],0x74636e22
  422c1a:	jns    0x422c8c
  422c1c:	gs (bad) 
  422c1e:	ins    BYTE PTR es:[rdi],dx
  422c1f:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  422c26:	cmp    ah,BYTE PTR [rax]
  422c28:	(bad)
  422c2d:	jns    0x422c9f
  422c2f:	and    BYTE PTR gs:[rbx+0x6f],ah
  422c33:	fs cmp ah,BYTE PTR gs:[rax]
  422c37:	and    eax,0x6e2c2264
  422c3c:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  422c40:	sub    DWORD PTR gs:[rax],eax
  422c43:	add    BYTE PTR [rbx+rbx*4-0x65130002],bh
  422c4a:	(bad)  
  422c4b:	dec    DWORD PTR [rbx+rbx*4]
  422c4e:	(bad)  
  422c4f:	call   FWORD PTR [rbx+rbx*4]
  422c52:	(bad)  
  422c53:	jmp    FWORD PTR [rbx+rbx*4]
  422c56:	(bad)  
  422c57:	(bad)  
  422c58:	cmp    al,0x9b
  422c5a:	(bad)  
  422c5b:	dec    DWORD PTR [rbx+rbx*4-0x2]
  422c5f:	(bad)  
  422c60:	in     al,dx
  422c61:	(bad)  
  422c62:	(bad)  
  422c63:	jmp    FWORD PTR [rbx+rbx*4-0x2]
  422c67:	(bad)  
  422c68:	jl     0x422c05
  422c6a:	(bad)  
  422c6b:	dec    DWORD PTR [rbx+rbx*4-0x64630002]
  422c72:	(bad)  
  422c73:	jmp    FWORD PTR [rbx+rbx*4-0x64a30002]
  422c7a:	(bad)  
  422c7b:	(bad)  
  422c7c:	in     al,dx
  422c7d:	(bad)  
  422c7e:	(bad)  
  422c7f:	jmp    QWORD PTR [rbx+0x68]
  422c82:	(bad)  
  422c83:	jb     0x422c85
  422c85:	jne    0x422cf5
  422c87:	jae    0x422cf2
  422c89:	outs   dx,BYTE PTR ds:[esi]
  422c8b:	gs and BYTE PTR fs:[rbx+0x68],ah
  422c90:	(bad)  
  422c91:	jb     0x422c93
  422c93:	jae    0x422cfd
  422c95:	outs   dx,DWORD PTR ds:[rsi]
  422c96:	jb     0x422d0c
  422c98:	add    BYTE PTR [rbp+0x6e],dh
  422c9b:	jae    0x422d06
  422c9d:	outs   dx,BYTE PTR ds:[esi]
  422c9f:	gs and BYTE PTR fs:[rbx+0x68],dh
  422ca4:	outs   dx,DWORD PTR ds:[rsi]
  422ca5:	jb     0x422d1b
  422ca7:	add    BYTE PTR [rcx+0x6e],ch
  422caa:	je     0x422cac
  422cac:	jne    0x422d1c
  422cae:	jae    0x422d19
  422cb0:	outs   dx,BYTE PTR ds:[esi]
  422cb2:	gs and BYTE PTR fs:[rcx+0x6e],ch
  422cb7:	je     0x422cb9
  422cb9:	ins    BYTE PTR es:[rdi],dx
  422cba:	outs   dx,DWORD PTR ds:[rsi]
  422cbb:	outs   dx,BYTE PTR ds:[rsi]
  422cbc:	add    BYTE PTR [ebp+0x6e],dh
  422cc0:	jae    0x422d2b
  422cc2:	outs   dx,BYTE PTR ds:[esi]
  422cc4:	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
  422cca:	add    BYTE PTR [edi+ebp*2+0x6e],ch
  422ccf:	and    BYTE PTR [edi+ebp*2+0x6e],ch
  422cd4:	add    BYTE PTR [ebp+0x6e],dh
  422cd8:	jae    0x422d43
  422cda:	outs   dx,BYTE PTR ds:[esi]
  422cdc:	gs and BYTE PTR fs:[rdi+rbp*2+0x6e],ch
  422ce2:	and    BYTE PTR [edi+ebp*2+0x6e],ch
  422ce7:	add    BYTE PTR [esi+0x6c],ah
  422ceb:	outs   dx,DWORD PTR ds:[rsi]
  422cec:	(bad)  
  422ced:	je     0x422cef
  422cef:	outs   dx,DWORD PTR fs:[rsi]
  422cf1:	jne    0x422d55
  422cf3:	ins    BYTE PTR es:[rdi],dx
  422cf4:	add    BYTE PTR gs:[rsi+0x6f],dh
  422cf8:	imul   esp,DWORD PTR [rdx+rbp*1+0x0],0x765f636e
  422d00:	ins    BYTE PTR es:[rdi],dx
  422d01:	outs   dx,BYTE PTR gs:[rsi]
  422d03:	pop    rdi
  422d04:	je     0x422d06
	...
  422d0e:	add    BYTE PTR [rax],al
  422d10:	imul   sp,WORD PTR [rbp+0x6c],0x2d64
  422d16:	ds jae 0x422d8e
  422d19:	(bad)
  422d1e:	jae    0x422d40
  422d20:	cmp    eax,0x434e203d
  422d25:	pop    rdi
  422d26:	rex.RX
  422d27:	rex.WB
  422d28:	rex.RB
  422d29:	rex.WR
  422d2a:	add    BYTE PTR [rcx+0x73],r12b
  422d2e:	jae    0x422d95
  422d30:	jb     0x422da6
  422d32:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  422d39:	ins    BYTE PTR es:[rdi],dx
  422d3a:	jne    0x422dae
  422d3c:	cmp    ah,BYTE PTR gs:[rax]
  422d3f:	and    eax,0x73
  422d44:	add    BYTE PTR [rax],al
  422d46:	add    BYTE PTR [rax],al
  422d48:	rex.WRX
  422d49:	rex.WB
  422d4a:	rex.WR and BYTE PTR [rcx+riz*2+0x74],r12b
  422d4f:	(bad)  
  422d50:	and    BYTE PTR [rbx+0x61],ah
  422d53:	outs   dx,BYTE PTR ds:[rsi]
  422d54:	and    BYTE PTR [rdi+0x6e],ch
  422d57:	ins    BYTE PTR es:[rdi],dx
  422d58:	jns    0x422d7a
  422d5a:	(bad)  
  422d5b:	and    BYTE PTR gs:[rcx+0x73],ah
  422d5f:	jae    0x422dca
  422d61:	outs   dx,BYTE PTR ds:[esi]
  422d63:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  422d69:	jbe    0x422dcc
  422d6b:	jb     0x422dd6
  422d6d:	(bad)  
  422d6e:	(bad)  
  422d6f:	ins    BYTE PTR es:[rdi],dx
  422d70:	gs jae 0x422d93
  422d73:	outs   dx,DWORD PTR ds:[rsi]
  422d74:	jb     0x422d96
  422d76:	(bad)  
  422d77:	je     0x422ded
  422d79:	jb     0x422de4
  422d7b:	(bad)  
  422d7c:	jne    0x422df2
  422d7e:	gs jae 0x422da1
  422d81:	outs   dx,DWORD PTR ds:[rsi]
  422d82:	data16 and BYTE PTR [rcx+rdi*2+0x70],dh
  422d87:	and    BYTE PTR gs:[rbx+0x74],dh
  422d8b:	jb     0x422df6
  422d8d:	outs   dx,BYTE PTR ds:[rsi]
  422d8e:	add    BYTE PTR [eax+ebp*2+0x69],dh
  422d93:	jae    0x422e0a
  422d95:	outs   dx,BYTE PTR ds:[rsi]
  422d96:	ins    BYTE PTR es:[rdi],dx
  422d97:	imul   ebp,DWORD PTR [rbp+0x2d],0x6d69643e
  422d9e:	imul   esi,DWORD PTR cs:[rbx+0x75],0x6d696c6e
  422da6:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x6e6f6300
  422dae:	sub    eax,0x74636e3e
  422db3:	jns    0x422e25
  422db5:	and    BYTE PTR gs:[rip+0x434e203d],bh        # 0x43904df9
  422dbc:	pop    rdi
  422dbd:	rex.XB
  422dbe:	rex.WRXB
  422dbf:	rex.WRB push r8
  422dc1:	rex.WRXB push r13
  422dc3:	rex.WRX
  422dc4:	add    BYTE PTR [rax],r8b
  422dc7:	add    BYTE PTR [rbp+0x78],al
  422dca:	jo     0x422e31
  422dcc:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  422dd0:	and    BYTE PTR [rbx+0x68],ah
  422dd3:	(bad)  
  422dd4:	jb     0x422e37
  422dd6:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  422dda:	and    BYTE PTR [rbx+0x6f],ah
  422ddd:	outs   dx,BYTE PTR ds:[rsi]
  422dde:	jae    0x422e54
  422de0:	(bad)  
  422de1:	outs   dx,BYTE PTR ds:[rsi]
  422de2:	je     0x422e10
  422de4:	and    BYTE PTR [rsi+0x6f],ah
  422de7:	jne    0x422e57
  422de9:	and    BYTE PTR fs:[rbx+0x2e],bh
  422ded:	cs cs jge 0x422df1
  422df1:	add    BYTE PTR [rax],al
  422df3:	add    BYTE PTR [rax],al
  422df5:	add    BYTE PTR [rax],al
  422df7:	add    BYTE PTR [rcx+0x6c],cl
  422dfa:	ins    BYTE PTR es:[rdi],dx
  422dfb:	gs addr32 (bad) 
  422dfe:	ins    BYTE PTR es:[rdi],dx
  422dff:	and    BYTE PTR [rbx+0x68],ah
  422e02:	(bad)  
  422e03:	jb     0x422e66
  422e05:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  422e09:	and    BYTE PTR [rbx+0x6f],ah
  422e0c:	outs   dx,BYTE PTR ds:[rsi]
  422e0d:	jae    0x422e83
  422e0f:	(bad)  
  422e10:	outs   dx,BYTE PTR ds:[rsi]
  422e11:	je     0x422e4d
  422e13:	and    BYTE PTR [rip+0x68000064],ah        # 0x68422e7d
  422e19:	movabs al,ds:0xa058fffea058fffe
  422e22:	(bad)  
  422e23:	jmp    FWORD PTR [rax-0x60]
  422e26:	(bad)  
  422e27:	jmp    FWORD PTR [rax-0x60]
  422e2a:	(bad)  
  422e2b:	jmp    FWORD PTR [rax-0x60]
  422e2e:	(bad)  
  422e2f:	jmp    FWORD PTR [rax-0x60]
  422e32:	(bad)  
  422e33:	call   FWORD PTR [rax-0x60]
  422e36:	(bad)  
  422e37:	jmp    FWORD PTR [rax-0x60]
  422e3a:	(bad)  
  422e3b:	jmp    FWORD PTR [rax-0x60]
  422e3e:	(bad)  
  422e3f:	jmp    FWORD PTR [rax-0x60]
  422e42:	(bad)  
  422e43:	jmp    FWORD PTR [rax-0x60]
  422e46:	(bad)  
  422e47:	dec    DWORD PTR [rdx-0x60]
  422e4a:	(bad)  
  422e4b:	jmp    FWORD PTR [rax-0x60]
  422e4e:	(bad)  
  422e4f:	jmp    FWORD PTR [rax-0x60]
  422e52:	(bad)  
  422e53:	jmp    FWORD PTR [rax-0x60]
  422e56:	(bad)  
  422e57:	jmp    FWORD PTR [rax]
  422e59:	movabs al,ds:0x3e2d6d797361fffe
  422e62:	fs (bad) 
  422e64:	je     0x422ec7
  422e66:	and    BYTE PTR [rcx],ah
  422e68:	cmp    eax,0x4c554e20
  422e6d:	rex.WR add BYTE PTR [rax],r8b
  422e70:	movsxd ebp,DWORD PTR [rdi+0x6d]
  422e73:	jo     0x422eea
  422e75:	je     0x422edc
  422e77:	jae    0x422ee2
  422e79:	jp     0x422ee0
  422e7b:	cmp    ah,BYTE PTR [rax]
  422e7d:	jne    0x422eed
  422e7f:	gs js  0x422ef2
  422e82:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  422e87:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  422e8b:	and    BYTE PTR gs:[rbx+0x6c],ah
  422e8f:	(bad)  
  422e90:	jae    0x422f05
  422e92:	cmp    ah,BYTE PTR [rax]
  422e94:	and    eax,0x65730064
  422e99:	ins    DWORD PTR es:[rdi],dx
  422e9a:	(bad)  
  422e9b:	outs   dx,BYTE PTR ds:[rsi]
  422e9c:	je     0x422f07
  422e9e:	movsxd esi,DWORD PTR [rbx+0x2e]
  422ea1:	movsxd eax,DWORD PTR [rax]
  422ea3:	add    BYTE PTR [rax],al
  422ea5:	add    BYTE PTR [rax],al
  422ea7:	add    BYTE PTR [rax+0x61],dh
  422eaa:	outs   dx,BYTE PTR ds:[rsi]
  422eab:	imul   esp,DWORD PTR [rbx+0x28],0x6d6f6322
  422eb2:	jo     0x422f29
  422eb4:	je     0x422f1b
  422eb6:	jae    0x422f21
  422eb8:	jp     0x422f1f
  422eba:	cmp    ah,BYTE PTR [rax]
  422ebc:	jne    0x422f2c
  422ebe:	gs js  0x422f31
  422ec1:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  422ec6:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  422eca:	and    BYTE PTR gs:[rbx+0x6c],ah
  422ece:	(bad)  
  422ecf:	jae    0x422f44
  422ed1:	cmp    ah,BYTE PTR [rax]
  422ed3:	and    eax,0x742c2264
  422ed8:	jae    0x422f53
  422eda:	ins    DWORD PTR es:[rdi],dx
  422edb:	sub    eax,0x6275733e
  422ee0:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  422ee4:	jae    0x422f0f
  422ee6:	add    BYTE PTR [rax],al
  422ee8:	push   rbp
  422ee9:	outs   dx,BYTE PTR ds:[rsi]
  422eea:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  422ef2:	outs   dx,BYTE PTR gs:[rsi]
  422ef4:	jne    0x422f63
  422ef6:	and    BYTE PTR [rdi+0x72],ch
  422ef9:	and    BYTE PTR [rbp+0x6e],ah
  422efc:	jne    0x422f6b
  422efe:	and    BYTE PTR [rbx+0x6f],ah
  422f01:	outs   dx,BYTE PTR ds:[rsi]
  422f02:	jae    0x422f78
  422f04:	(bad)  
  422f05:	outs   dx,BYTE PTR ds:[rsi]
  422f06:	je     0x422f28
  422f08:	jb     0x422f6f
  422f0a:	data16 gs jb 0x422f73
  422f0e:	outs   dx,BYTE PTR ds:[rsi]
  422f0f:	movsxd esp,DWORD PTR [rbp+0x3a]
  422f12:	and    BYTE PTR [rip+0x6e550073],ah        # 0x6e972f8b
  422f18:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  422f20:	addr32 jb 0x422f92
  422f23:	jne    0x422f95
  422f25:	and    BYTE PTR [rdx+0x65],dh
  422f28:	data16 gs jb 0x422f91
  422f2c:	outs   dx,BYTE PTR ds:[rsi]
  422f2d:	movsxd esp,DWORD PTR [rbp+0x3a]
  422f30:	and    BYTE PTR [rax],al
  422f32:	add    BYTE PTR [rax],al
  422f34:	add    BYTE PTR [rax],al
  422f36:	add    BYTE PTR [rax],al
  422f38:	push   rbp
  422f39:	outs   dx,BYTE PTR ds:[rsi]
  422f3a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  422f42:	outs   dx,BYTE PTR gs:[rsi]
  422f44:	jne    0x422fb3
  422f46:	and    BYTE PTR [rdi+0x72],ch
  422f49:	and    BYTE PTR [rbp+0x6e],ah
  422f4c:	jne    0x422fbb
  422f4e:	and    BYTE PTR [rbx+0x6f],ah
  422f51:	outs   dx,BYTE PTR ds:[rsi]
  422f52:	jae    0x422fc8
  422f54:	(bad)  
  422f55:	outs   dx,BYTE PTR ds:[rsi]
  422f56:	je     0x422f78
  422f58:	jb     0x422fbf
  422f5a:	data16 gs jb 0x422fc3
  422f5e:	outs   dx,BYTE PTR ds:[rsi]
  422f5f:	movsxd esp,DWORD PTR [rbp+0x3a]
  422f62:	and    BYTE PTR [rax],al
  422f64:	add    BYTE PTR [rax],al
  422f66:	add    BYTE PTR [rax],al
  422f68:	rex.B ins DWORD PTR es:[rdi],dx
  422f6a:	(bad)  
  422f6b:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  422f72:	outs   dx,BYTE PTR gs:[rsi]
  422f74:	jne    0x422fe3
  422f76:	and    BYTE PTR [rbx+0x6f],ah
  422f79:	outs   dx,BYTE PTR ds:[rsi]
  422f7a:	jae    0x422ff0
  422f7c:	(bad)  
  422f7d:	outs   dx,BYTE PTR ds:[rsi]
  422f7e:	je     0x422fa0
  422f80:	jb     0x422fe7
  422f82:	data16 gs jb 0x422feb
  422f86:	outs   dx,BYTE PTR ds:[rsi]
  422f87:	movsxd esp,DWORD PTR [rbp+0x3a]
  422f8a:	and    BYTE PTR [rip+0x73],ah        # 0x423003
  422f90:	jo     0x422ff3
  422f92:	jb     0x422ff9
  422f94:	outs   dx,BYTE PTR ds:[rsi]
  422f95:	je     0x422fb7
  422f97:	cmp    eax,0x554e203d
  422f9c:	rex.WR
  422f9d:	rex.WR and BYTE PTR [rsp+rdi*2+0x20],r15b
  422fa2:	jo     0x423005
  422fa4:	jb     0x42300b
  422fa6:	outs   dx,BYTE PTR ds:[rsi]
  422fa7:	je     0x422fd6
  422fa9:	outs   dx,DWORD PTR ds:[rsi]
  422fab:	(bad)  
  422fac:	push   0x65
  422fae:	movsxd esi,DWORD PTR [rbx+riz*2+0x6c]
  422fb2:	(bad)  
  422fb3:	jae    0x423028
  422fb5:	and    BYTE PTR [rip+0x434e203d],bh        # 0x43904ff8
  422fbb:	pop    rdi
  422fbc:	rex.RXB push r10
  422fbe:	push   rax
  422fbf:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  422fc3:	and    BYTE PTR gs:[rdx+0x65],dh
  422fc7:	sub    eax,0x63756f74
  422fcc:	push   0x70006465
  422fd1:	(bad)  
  422fd2:	outs   dx,BYTE PTR ds:[rsi]
  422fd3:	imul   esp,DWORD PTR [rbx+0x28],0x70797422
  422fda:	and    BYTE PTR gs:[rdx+0x65],dh
  422fde:	sub    eax,0x63756f74
  422fe3:	push   0x29226465
	...
  422ff0:	rex.XB imul esi,DWORD PTR [r10+0x63],0x72616c75
  422ff8:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  422ffc:	and    BYTE PTR gs:[rbp+riz*2+0x70],ah
  423001:	outs   dx,BYTE PTR gs:[rsi]
  423003:	fs outs dx,BYTE PTR gs:[rsi]
  423006:	movsxd edi,DWORD PTR [rcx+0x20]
  423009:	outs   dx,WORD PTR ds:[rsi]
  42300b:	jb     0x42302d
  42300d:	je     0x423088
  42300f:	jo     0x423076
  423011:	cmp    ah,BYTE PTR [rax]
  423013:	and    eax,0x73
  423018:	push   rsi
  423019:	(bad)  
  42301a:	jb     0x423085
  42301c:	(bad)  
  42301d:	(bad)  
  42301e:	ins    BYTE PTR es:[rdi],dx
  42301f:	cmp    ah,BYTE PTR gs:[rax]
  423022:	and    eax,0x55203a73
  423027:	rex.WRX
  423028:	rex.WR
  423029:	rex.WB
  42302a:	rex.WRB
  42302b:	rex.WB push r12
  42302d:	rex.RB
  42302e:	and    BYTE PTR [rbp+0x75],r13b
  423032:	jae    0x4230a8
  423034:	and    BYTE PTR [rdx+0x65],ah
  423037:	and    BYTE PTR [rcx+0x6e],ch
  42303a:	and    BYTE PTR [rsi+0x69],ah
  42303d:	jb     0x4230b2
  42303f:	je     0x423061
  423041:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  423049:	outs   dx,BYTE PTR ds:[rsi]
  42304a:	and    BYTE PTR [rdi+0x6e],ch
  42304d:	ins    BYTE PTR es:[rdi],dx
  42304e:	jns    0x423050
  423050:	rex.RB ins DWORD PTR es:[rdi],dx
  423052:	jo     0x4230c8
  423054:	jns    0x423076
  423056:	fs (bad) 
  423058:	je     0x4230bb
  42305a:	ins    BYTE PTR es:[rdi],dx
  42305b:	imul   esi,DWORD PTR [rbx+0x74],0x6e616320
  423062:	and    BYTE PTR [rdi+0x6e],ch
  423065:	ins    BYTE PTR es:[rdi],dx
  423066:	jns    0x423088
  423068:	(bad)  
  423069:	and    BYTE PTR gs:[rcx+0x73],ah
  42306d:	jae    0x4230d8
  42306f:	outs   dx,BYTE PTR ds:[esi]
  423071:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  423077:	(bad)  
  423078:	je     0x4230ee
  42307a:	jb     0x4230e5
  42307c:	(bad)  
  42307d:	jne    0x4230f3
  42307f:	gs jae 0x4230a2
  423082:	outs   dx,DWORD PTR ds:[rsi]
  423083:	data16 and BYTE PTR [rcx+rdi*2+0x70],dh
  423088:	and    BYTE PTR gs:[rbx+0x68],ah
  42308c:	(bad)  
  42308d:	jb     0x42308f
  42308f:	(bad)  
  423090:	jae    0x42310b
  423092:	ins    DWORD PTR es:[rdi],dx
  423093:	sub    eax,0x7474613e
  423098:	cs jbe 0x4230fc
  42309b:	jb     0x4230bd
  42309d:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c977ec3
  4230a3:	rex.WR add BYTE PTR [rbx+0x79],r14b
  4230a7:	ins    DWORD PTR es:[rdi],dx
  4230a8:	sub    eax,0x6a626f3e
  4230ad:	movsxd esi,DWORD PTR gs:[rbx+riz*2+0x6c]
  4230b2:	(bad)  
  4230b3:	jae    0x423128
  4230b5:	and    BYTE PTR [rip+0x434e203d],bh        # 0x439050f8
  4230bb:	pop    rdi
  4230bc:	push   rsp
  4230bd:	pop    rcx
  4230be:	push   rax
  4230bf:	add    BYTE PTR [r13+0x73],r12b
  4230c3:	jns    0x423132
  4230c5:	sub    eax,0x6275733e
  4230ca:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  4230ce:	jae    0x4230f0
  4230d0:	cmp    eax,0x434e203d
  4230d5:	pop    rdi
  4230d6:	rex.RB
  4230d7:	rex.XB
  4230d8:	rex.WRXB
  4230d9:	rex.WRX push rbx
  4230db:	push   rsp
  4230dc:	add    BYTE PTR [rbx+rsi*2+0x79],dh
  4230e0:	ins    DWORD PTR es:[rdi],dx
  4230e1:	sub    eax,0x6a626f3e
  4230e6:	movsxd esi,DWORD PTR gs:[rbx+riz*2+0x6c]
  4230eb:	(bad)  
  4230ec:	jae    0x423161
  4230ee:	and    BYTE PTR [rip+0x434e203d],bh        # 0x43905131
  4230f4:	pop    rdi
  4230f5:	push   rsp
  4230f6:	pop    rcx
  4230f7:	push   rax
  4230f8:	add    BYTE PTR [r8],r8b
  4230fb:	add    BYTE PTR [rax],al
  4230fd:	add    BYTE PTR [rax],al
  4230ff:	add    BYTE PTR [rbp+0x4e],dl
  423102:	rex.WR
  423103:	rex.WB
  423104:	rex.WRB
  423105:	rex.WB push r12
  423107:	rex.RB
  423108:	and    BYTE PTR [rcx+rbp*2+0x6d],r12b
  42310d:	outs   dx,BYTE PTR gs:[rsi]
  42310f:	jae    0x42317a
  423111:	outs   dx,DWORD PTR ds:[rsi]
  423112:	outs   dx,BYTE PTR ds:[rsi]
  423113:	and    BYTE PTR [rax],ch
  423115:	outs   dx,DWORD PTR ds:[rsi]
  423116:	je     0x423180
  423118:	gs jb  0x42313b
  42311b:	je     0x423185
  42311d:	(bad)  
  42311e:	outs   dx,BYTE PTR ds:[rsi]
  42311f:	and    BYTE PTR [rsi+0x69],ah
  423122:	jb     0x423197
  423124:	je     0x42314f
  423126:	and    BYTE PTR [rbp+0x75],ch
  423129:	jae    0x42319f
  42312b:	and    BYTE PTR [rdx+0x65],ah
  42312e:	and    BYTE PTR [rbp+0x6e],ah
  423131:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  423135:	gs and BYTE PTR fs:[rcx+0x6e],ch
  42313a:	and    BYTE PTR [rbx+0x7d],bh
  42313d:	add    BYTE PTR [rdx+0x6f],dh
  423140:	outs   dx,DWORD PTR ds:[rsi]
  423141:	je     0x4231aa
  423143:	jb     0x4231b4
  423145:	jne    0x4231b7
  423147:	and    BYTE PTR [rax+0x61],ch
  42314a:	jae    0x42316c
  42314c:	(bad)  
  42314d:	and    BYTE PTR [rbx+0x6f],ah
  423150:	outs   dx,BYTE PTR ds:[rsi]
  423151:	je     0x4231b4
  423153:	imul   ebp,DWORD PTR [rsi+0x65],0x61700072
  42315a:	outs   dx,BYTE PTR ds:[rsi]
  42315b:	imul   esp,DWORD PTR [rbx+0x28],0x6f6f7222
  423162:	je     0x4231cb
  423164:	jb     0x4231d5
  423166:	jne    0x4231d8
  423168:	and    BYTE PTR [rax+0x61],ch
  42316b:	jae    0x42318d
  42316d:	(bad)  
  42316e:	and    BYTE PTR [rbx+0x6f],ah
  423171:	outs   dx,BYTE PTR ds:[rsi]
  423172:	je     0x4231d5
  423174:	imul   ebp,DWORD PTR [rsi+0x65],0x292272
  42317b:	jae    0x4231f6
  42317d:	ins    DWORD PTR es:[rdi],dx
  42317e:	(bad)  
  42317f:	outs   dx,DWORD PTR ds:[rsi]
  423180:	ins    BYTE PTR es:[rdi],dx
  423181:	and    BYTE PTR [rdi+0x69],dh
  423184:	je     0x4231ee
  423186:	and    BYTE PTR [rsi+0x6f],ch
  423189:	and    BYTE PTR [rbx+0x6f],ah
  42318c:	outs   dx,BYTE PTR ds:[rsi]
  42318d:	je     0x4231f0
  42318f:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  423196:	jae    0x423198
  423198:	jo     0x4231fb
  42319a:	outs   dx,BYTE PTR ds:[rsi]
  42319b:	imul   esp,DWORD PTR [rbx+0x28],0x6d797322
  4231a2:	(bad)  
  4231a3:	outs   dx,DWORD PTR ds:[rsi]
  4231a4:	ins    BYTE PTR es:[rdi],dx
  4231a5:	and    BYTE PTR [rdi+0x69],dh
  4231a8:	je     0x423212
  4231aa:	and    BYTE PTR [rsi+0x6f],ch
  4231ad:	and    BYTE PTR [rbx+0x6f],ah
  4231b0:	outs   dx,BYTE PTR ds:[rsi]
  4231b1:	je     0x423214
  4231b3:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  4231ba:	jae    0x4231de
  4231bc:	sub    al,0x73
  4231be:	jns    0x42322d
  4231c0:	sub    eax,0x6d616e3e
  4231c5:	sub    DWORD PTR gs:[rax],eax
  4231c8:	addr32 jb 0x42323a
  4231cb:	jne    0x42323d
  4231cd:	and    BYTE PTR [rdi+0x69],dh
  4231d0:	je     0x42323a
  4231d2:	and    BYTE PTR [rdx+0x65],dh
  4231d5:	data16 gs jb 0x42323e
  4231d9:	outs   dx,BYTE PTR ds:[rsi]
  4231da:	movsxd esp,DWORD PTR [rbp+0x20]
  4231dd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4231e0:	je     0x423243
  4231e2:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  4231e9:	jae    0x4231eb
  4231eb:	add    BYTE PTR [rax],al
  4231ed:	add    BYTE PTR [rax],al
  4231ef:	add    BYTE PTR [rax+0x61],dh
  4231f2:	outs   dx,BYTE PTR ds:[rsi]
  4231f3:	imul   esp,DWORD PTR [rbx+0x28],0x6f726722
  4231fa:	jne    0x42326c
  4231fc:	and    BYTE PTR [rdi+0x69],dh
  4231ff:	je     0x423269
  423201:	and    BYTE PTR [rdx+0x65],dh
  423204:	data16 gs jb 0x42326d
  423208:	outs   dx,BYTE PTR ds:[rsi]
  423209:	movsxd esp,DWORD PTR [rbp+0x20]
  42320c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42320f:	je     0x423272
  423211:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  423218:	jae    0x42323c
  42321a:	sub    al,0x73
  42321c:	jns    0x42328b
  42321e:	sub    eax,0x6d616e3e
  423223:	sub    DWORD PTR gs:[rax],eax
  423226:	addr32 jb 0x423298
  423229:	jne    0x42329b
  42322b:	and    BYTE PTR [rsi+0x6f],ch
  42322e:	je     0x423250
  423230:	imul   ebp,DWORD PTR [rsi+0x20],0x746e6f63
  423237:	(bad)  
  423238:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  42323f:	jae    0x423241
  423241:	add    BYTE PTR [rax],al
  423243:	add    BYTE PTR [rax],al
  423245:	add    BYTE PTR [rax],al
  423247:	add    BYTE PTR [rax+0x61],dh
  42324a:	outs   dx,BYTE PTR ds:[rsi]
  42324b:	imul   esp,DWORD PTR [rbx+0x28],0x6f726722
  423252:	jne    0x4232c4
  423254:	and    BYTE PTR [rsi+0x6f],ch
  423257:	je     0x423279
  423259:	imul   ebp,DWORD PTR [rsi+0x20],0x746e6f63
  423260:	(bad)  
  423261:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  423268:	jae    0x42328c
  42326a:	sub    al,0x73
  42326c:	jns    0x4232db
  42326e:	sub    eax,0x6d616e3e
  423273:	sub    DWORD PTR gs:[rax],eax
  423276:	addr32 jb 0x4232e8
  423279:	jne    0x4232eb
  42327b:	and    BYTE PTR [rdi+0x69],dh
  42327e:	je     0x4232e8
  423280:	and    BYTE PTR [rsi+0x75],ch
  423283:	ins    BYTE PTR es:[rdi],dx
  423284:	ins    BYTE PTR es:[rdi],dx
  423285:	and    BYTE PTR [rbx+0x75],dh
  423288:	(bad)  
  423289:	outs   dx,BYTE PTR ds:[rsi]
  42328a:	outs   dx,DWORD PTR ds:[rsi]
  42328b:	fs gs jae 0x4232c9
  42328f:	and    BYTE PTR [rip+0x73],ah        # 0x423308
  423295:	add    BYTE PTR [rax],al
  423297:	add    BYTE PTR [rax+0x61],dh
  42329a:	outs   dx,BYTE PTR ds:[rsi]
  42329b:	imul   esp,DWORD PTR [rbx+0x28],0x6f726722
  4232a2:	jne    0x423314
  4232a4:	and    BYTE PTR [rdi+0x69],dh
  4232a7:	je     0x423311
  4232a9:	and    BYTE PTR [rsi+0x75],ch
  4232ac:	ins    BYTE PTR es:[rdi],dx
  4232ad:	ins    BYTE PTR es:[rdi],dx
  4232ae:	and    BYTE PTR [rbx+0x75],dh
  4232b1:	(bad)  
  4232b2:	outs   dx,BYTE PTR ds:[rsi]
  4232b3:	outs   dx,DWORD PTR ds:[rsi]
  4232b4:	fs gs jae 0x4232f2
  4232b8:	and    BYTE PTR [rip+0x732c2273],ah        # 0x736e5531
  4232be:	jns    0x42332d
  4232c0:	sub    eax,0x6d616e3e
  4232c5:	sub    DWORD PTR gs:[rax],eax
  4232c8:	je     0x423343
  4232ca:	jo     0x423331
  4232cc:	and    BYTE PTR [rsi+0x6f],ch
  4232cf:	je     0x4232f1
  4232d1:	imul   ebp,DWORD PTR [rsi+0x20],0x746e6f63
  4232d8:	(bad)  
  4232d9:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  4232e0:	jae    0x4232e2
  4232e2:	add    BYTE PTR [rax],al
  4232e4:	add    BYTE PTR [rax],al
  4232e6:	add    BYTE PTR [rax],al
  4232e8:	jo     0x42334b
  4232ea:	outs   dx,BYTE PTR ds:[rsi]
  4232eb:	imul   esp,DWORD PTR [rbx+0x28],0x70797422
  4232f2:	and    BYTE PTR gs:[rsi+0x6f],ch
  4232f6:	je     0x423318
  4232f8:	imul   ebp,DWORD PTR [rsi+0x20],0x746e6f63
  4232ff:	(bad)  
  423300:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  423307:	jae    0x42332b
  423309:	sub    al,0x73
  42330b:	jns    0x42337a
  42330d:	sub    eax,0x6d616e3e
  423312:	sub    DWORD PTR gs:[rax],eax
  423315:	add    BYTE PTR [rax],al
  423317:	add    BYTE PTR [rcx+rbp*2+0x6d],ah
  42331b:	outs   dx,BYTE PTR gs:[rsi]
  42331d:	jae    0x423388
  42331f:	outs   dx,DWORD PTR ds:[rsi]
  423320:	outs   dx,BYTE PTR ds:[rsi]
  423321:	and    BYTE PTR [rsi+0x6f],ch
  423324:	je     0x423346
  423326:	imul   ebp,DWORD PTR [rsi+0x20],0x746e6f63
  42332d:	(bad)  
  42332e:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  423335:	jae    0x423337
  423337:	add    BYTE PTR [rax+0x61],dh
  42333a:	outs   dx,BYTE PTR ds:[rsi]
  42333b:	imul   esp,DWORD PTR [rbx+0x28],0x6d696422
  423342:	outs   dx,BYTE PTR gs:[rsi]
  423344:	jae    0x4233af
  423346:	outs   dx,DWORD PTR ds:[rsi]
  423347:	outs   dx,BYTE PTR ds:[rsi]
  423348:	and    BYTE PTR [rsi+0x6f],ch
  42334b:	je     0x42336d
  42334d:	imul   ebp,DWORD PTR [rsi+0x20],0x746e6f63
  423354:	(bad)  
  423355:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  42335c:	jae    0x423380
  42335e:	sub    al,0x73
  423360:	jns    0x4233cf
  423362:	sub    eax,0x6d616e3e
  423367:	sub    DWORD PTR gs:[rax],eax
  42336a:	jbe    0x4233cd
  42336c:	jb     0x4233d7
  42336e:	(bad)  
  42336f:	(bad)  
  423370:	ins    BYTE PTR es:[rdi],dx
  423371:	and    BYTE PTR gs:[rsi+0x6f],ch
  423375:	je     0x423397
  423377:	imul   ebp,DWORD PTR [rsi+0x20],0x746e6f63
  42337e:	(bad)  
  42337f:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  423386:	jae    0x423388
  423388:	jo     0x4233eb
  42338a:	outs   dx,BYTE PTR ds:[rsi]
  42338b:	imul   esp,DWORD PTR [rbx+0x28],0x72617622
  423392:	imul   esp,DWORD PTR [rcx+0x62],0x6e20656c
  423399:	outs   dx,DWORD PTR ds:[rsi]
  42339a:	je     0x4233bc
  42339c:	imul   ebp,DWORD PTR [rsi+0x20],0x746e6f63
  4233a3:	(bad)  
  4233a4:	imul   ebp,DWORD PTR [rsi+0x65],0x25203a72
  4233ab:	jae    0x4233cf
  4233ad:	sub    al,0x73
  4233af:	jns    0x42341e
  4233b1:	sub    eax,0x6d616e3e
  4233b6:	sub    DWORD PTR gs:[rax],eax
  4233b9:	add    BYTE PTR [rax],al
  4233bb:	add    BYTE PTR [rax],al
  4233bd:	add    BYTE PTR [rax],al
  4233bf:	add    BYTE PTR [rsi+0x61],dh
  4233c2:	jb     0x42342d
  4233c4:	(bad)  
  4233c5:	(bad)  
  4233c6:	ins    BYTE PTR es:[rdi],dx
  4233c7:	and    BYTE PTR gs:[rdi+0x69],dh
  4233cb:	je     0x423435
  4233cd:	and    BYTE PTR [rbp+0x6e],dh
  4233d0:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  4233d8:	je     0x423453
  4233da:	jo     0x423441
  4233dc:	cmp    ah,BYTE PTR [rax]
  4233de:	and    eax,0x73
  4233e3:	add    BYTE PTR [rax],al
  4233e5:	add    BYTE PTR [rax],al
  4233e7:	add    BYTE PTR [rax+0x61],dh
  4233ea:	outs   dx,BYTE PTR ds:[rsi]
  4233eb:	imul   esp,DWORD PTR [rbx+0x28],0x72617622
  4233f2:	imul   esp,DWORD PTR [rcx+0x62],0x7720656c
  4233f9:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x65646e75
  423401:	imul   bp,WORD PTR [rsi+0x65],0x2064
  423407:	je     0x423482
  423409:	jo     0x423470
  42340b:	cmp    ah,BYTE PTR [rax]
  42340d:	and    eax,0x732c2273
  423412:	jns    0x423481
  423414:	sub    eax,0x6d616e3e
  423419:	sub    DWORD PTR gs:[rax],eax
  42341c:	rex.WRX push rbp
  42341e:	rex.WR
  42341f:	rex.WR add BYTE PTR [rdi+rbp*2+0x63],r13b
  423424:	(bad)  
  423425:	je     0x42348c
  423427:	cmp    ah,BYTE PTR [rax]
  423429:	(bad)
  42342e:	gs data16 jae 0x4234ab
  423432:	ins    DWORD PTR es:[rdi],dx
  423433:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  423437:	cmp    ah,BYTE PTR gs:[rax]
  42343a:	and    eax,0x64
  42343f:	add    BYTE PTR [rax+0x61],dh
  423442:	outs   dx,BYTE PTR ds:[rsi]
  423443:	imul   esp,DWORD PTR [rbx+0x28],0x636f6c22
  42344a:	(bad)  
  42344b:	je     0x4234b2
  42344d:	cmp    ah,BYTE PTR [rax]
  42344f:	(bad)
  423454:	gs data16 jae 0x4234d1
  423458:	ins    DWORD PTR es:[rdi],dx
  423459:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42345d:	cmp    ah,BYTE PTR gs:[rax]
  423460:	and    eax,0x722c2264
  423465:	gs data16 jae 0x4234e2
  423469:	ins    DWORD PTR es:[rdi],dx
  42346a:	sub    eax,0x6a626f3e
  42346f:	movsxd esi,DWORD PTR gs:[rbx+riz*2+0x6c]
  423474:	(bad)  
  423475:	jae    0x4234ea
  423477:	sub    DWORD PTR [rax],eax
  423479:	ins    BYTE PTR es:[rdi],dx
  42347a:	outs   dx,DWORD PTR ds:[rsi]
  42347b:	movsxd esp,DWORD PTR [rcx+0x74]
  42347e:	cmp    ah,BYTE PTR gs:[rax]
  423481:	and    eax,0x25203a73
  423486:	jae    0x4234a8
  423488:	sub    eax,0x7325203e
  42348d:	or     al,BYTE PTR [rax]
  42348f:	outs   dx,BYTE PTR ds:[rsi]
  423490:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  423494:	gs jae 0x423500
  423497:	jp     0x4234fe
  423499:	cmp    ah,BYTE PTR [rax]
  42349b:	(bad)
  4234a0:	jns    0x423512
  4234a2:	and    BYTE PTR gs:[rbx+0x6f],ah
  4234a6:	fs add BYTE PTR gs:[rax],al
  4234aa:	add    BYTE PTR [rax],al
  4234ac:	add    BYTE PTR [rax],al
  4234ae:	add    BYTE PTR [rax],al
  4234b0:	jo     0x423513
  4234b2:	outs   dx,BYTE PTR ds:[rsi]
  4234b3:	imul   esp,DWORD PTR [rbx+0x28],0x74636e22
  4234ba:	jns    0x42352c
  4234bc:	gs jae 0x423528
  4234bf:	jp     0x423526
  4234c1:	cmp    ah,BYTE PTR [rax]
  4234c3:	(bad)
  4234c8:	jns    0x42353a
  4234ca:	and    BYTE PTR gs:[rbx+0x6f],ah
  4234ce:	fs and ch,BYTE PTR gs:[rcx]
  4234d2:	add    BYTE PTR [rax],al
  4234d4:	pop    rsp
  4234d5:	mov    dh,0xfe
  4234d7:	dec    DWORD PTR [rsi+rsi*4-0x2]
  4234db:	dec    DWORD PTR [rsi+rsi*4-0x2]
  4234df:	(bad)  
  4234e0:	cmp    al,0xb6
  4234e2:	(bad)  
  4234e3:	jmp    FWORD PTR [rsi+rsi*4]
  4234e6:	(bad)  
  4234e7:	jmp    FWORD PTR [rsi+rsi*4]
  4234ea:	(bad)  
  4234eb:	call   FWORD PTR [rsi+rsi*4]
  4234ee:	(bad)  
  4234ef:	dec    DWORD PTR [rsi+rsi*4-0x2]
  4234f3:	(bad)  
  4234f4:	cmp    al,0xb6
  4234f6:	(bad)  
  4234f7:	jmp    FWORD PTR [rsi+rsi*4]
  4234fa:	(bad)  
  4234fb:	call   FWORD PTR [rsi+rsi*4]
  4234fe:	(bad)  
  4234ff:	call   FWORD PTR [rsi+rsi*4]
  423502:	(bad)  
  423503:	call   FWORD PTR [rsi+rsi*4]
  423506:	(bad)  
  423507:	inc    DWORD PTR [rax]
	...
  42353d:	add    BYTE PTR [rax],al
  42353f:	add    BYTE PTR [rbx+0x79],dh
  423542:	outs   dx,BYTE PTR ds:[rsi]
  423543:	je     0x4235a6
  423545:	js     0x423567
  423547:	gs jb  0x4235bc
  42354a:	outs   dx,DWORD PTR ds:[rsi]
  42354b:	jb     0x423579
  42354d:	and    BYTE PTR [rbp+0x6e],dh
  423550:	gs js  0x4235c3
  423553:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  423558:	and    BYTE PTR [rip+0x65202c73],ah        # 0x656261d1
  42355e:	js     0x4235d0
  423560:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  423565:	and    BYTE PTR [eip+0x726f2073],ah        # 0x72b155df
  42356c:	and    BYTE PTR [rip+0x726f2073],ah        # 0x72b155e5
  423572:	and    BYTE PTR [rip+0x726f2073],ah        # 0x72b155eb
  423578:	and    BYTE PTR [rip+0x79730073],ah        # 0x79b535f1
  42357e:	outs   dx,BYTE PTR ds:[rsi]
  42357f:	je     0x4235e2
  423581:	js     0x4235a3
  423583:	gs jb  0x4235f8
  423586:	outs   dx,DWORD PTR ds:[rsi]
  423587:	jb     0x423589
  423589:	jae    0x423604
  42358b:	outs   dx,BYTE PTR ds:[rsi]
  42358c:	je     0x4235ef
  42358e:	js     0x4235b0
  423590:	gs jb  0x423605
  423593:	outs   dx,DWORD PTR ds:[rsi]
  423594:	jb     0x4235c2
  423596:	and    BYTE PTR [rbp+0x6e],dh
  423599:	gs js  0x42360c
  42359c:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4235a1:	and    BYTE PTR [rip+0x73],ah        # 0x42361a
  4235a7:	add    BYTE PTR [rbx+0x79],dh
  4235aa:	outs   dx,BYTE PTR ds:[rsi]
  4235ab:	je     0x42360e
  4235ad:	js     0x4235cf
  4235af:	gs jb  0x423624
  4235b2:	outs   dx,DWORD PTR ds:[rsi]
  4235b3:	jb     0x4235e1
  4235b5:	and    BYTE PTR [rbp+0x6e],dh
  4235b8:	gs js  0x42362b
  4235bb:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4235c0:	and    BYTE PTR [rip+0x65202c73],ah        # 0x65626239
  4235c6:	js     0x423638
  4235c8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  4235cd:	and    BYTE PTR [eip+0x73],ah        # 0x423647
  4235d4:	add    BYTE PTR [rax],al
  4235d6:	add    BYTE PTR [rax],al
  4235d8:	jae    0x423653
  4235da:	outs   dx,BYTE PTR ds:[rsi]
  4235db:	je     0x42363e
  4235dd:	js     0x4235ff
  4235df:	gs jb  0x423654
  4235e2:	outs   dx,DWORD PTR ds:[rsi]
  4235e3:	jb     0x423611
  4235e5:	and    BYTE PTR [rbp+0x6e],dh
  4235e8:	gs js  0x42365b
  4235eb:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4235f0:	and    BYTE PTR [rip+0x65202c73],ah        # 0x65626269
  4235f6:	js     0x423668
  4235f8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  4235fd:	and    BYTE PTR [eip+0x726f2073],ah        # 0x72b15677
  423604:	and    BYTE PTR [rip+0x79730073],ah        # 0x79b5367d
  42360a:	outs   dx,BYTE PTR ds:[rsi]
  42360b:	je     0x42366e
  42360d:	js     0x42362f
  42360f:	gs jb  0x423684
  423612:	outs   dx,DWORD PTR ds:[rsi]
  423613:	jb     0x423641
  423615:	and    BYTE PTR [rbp+0x6e],dh
  423618:	gs js  0x42368b
  42361b:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  423620:	and    BYTE PTR [rip+0x65202c73],ah        # 0x65626299
  423626:	js     0x423698
  423628:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  42362d:	and    BYTE PTR [eip+0x726f2073],ah        # 0x72b156a7
  423634:	and    BYTE PTR [rip+0x726f2073],ah        # 0x72b156ad
  42363a:	and    BYTE PTR [rip+0x73],ah        # 0x4236b3
  423640:	cs mov bh,0xfe
  423643:	inc    DWORD PTR [rbx]
  423645:	mov    eax,0xb774fffe
  42364a:	(bad)  
  42364b:	(bad)  
  42364c:	jge    0x423605
  42364e:	(bad)  
  42364f:	(bad)  
  423650:	cmp    BYTE PTR [rdi-0x48940002],dh
  423656:	(bad)  
  423657:	call   QWORD PTR [rbx+0x74]
  42365a:	(bad)  
  42365b:	movsxd ebp,DWORD PTR [rbx+0x20]
  42365e:	outs   dx,BYTE PTR ds:[rsi]
  42365f:	outs   dx,DWORD PTR ds:[rsi]
  423660:	ja     0x423662
  423662:	and    BYTE PTR [rip+0x6e750064],ah        # 0x6eb736cc
  423668:	gs js  0x4236db
  42366b:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  423670:	and    BYTE PTR [rcx+0x74],ah
  423673:	je     0x4236e7
  423675:	imul   esp,DWORD PTR [rdx+0x75],0x74206574
  42367c:	jns    0x4236ee
  42367e:	cmp    ah,BYTE PTR gs:[rax]
  423681:	and    eax,0x636e0064
  423686:	outs   dx,BYTE PTR gs:[esi]
  423689:	cs jns 0x42368c
  42368c:	add    BYTE PTR [rax],al
  42368e:	add    BYTE PTR [rax],al
  423690:	jo     0x4236f3
  423692:	outs   dx,BYTE PTR ds:[rsi]
  423693:	imul   esp,DWORD PTR [rbx+0x28],0x656e7522
  42369a:	js     0x42370c
  42369c:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4236a1:	and    BYTE PTR [rcx+0x74],ah
  4236a4:	je     0x423718
  4236a6:	imul   esp,DWORD PTR [rdx+0x75],0x74206574
  4236ad:	jns    0x42371f
  4236af:	cmp    ah,BYTE PTR gs:[rax]
  4236b2:	and    eax,0x6b2c2264
  4236b7:	imul   ebp,DWORD PTR [rsi+0x64],0x29
  4236be:	add    BYTE PTR [rax],al
  4236c0:	rex.B je 0x423737
  4236c3:	jb     0x42372e
  4236c5:	(bad)  
  4236c6:	jne    0x42373c
  4236c8:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  4236cd:	(bad)  
  4236ce:	and    BYTE PTR [rbp+0x61],ch
  4236d1:	jns    0x4236f3
  4236d3:	outs   dx,BYTE PTR ds:[rsi]
  4236d4:	outs   dx,DWORD PTR ds:[rsi]
  4236d5:	je     0x4236f7
  4236d7:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4236da:	je     0x42373d
  4236dc:	imul   ebp,DWORD PTR [rsi+0x20],0x6c6c6966
  4236e3:	and    BYTE PTR [rsi+0x61],dh
  4236e6:	ins    BYTE PTR es:[rdi],dx
  4236e7:	jne    0x42374e
  4236e9:	jae    0x42370b
  4236eb:	sub    BYTE PTR [rcx+0x2e],ch
  4236ee:	gs and BYTE PTR cs:[rdi+0x20],bl
  4236f3:	sub    DWORD PTR [rdx],edi
  4236f5:	and    BYTE PTR [rip+0x73250073],ah        # 0x7367376e
  4236fb:	cmp    ah,BYTE PTR [rax]
  4236fd:	and    eax,0x696c2073
  423702:	outs   dx,BYTE PTR ds:[rsi]
  423703:	and    BYTE PTR gs:[rip+0x203a64],ah        # 0x62716e
  42370a:	add    BYTE PTR [rax],al
  42370c:	add    BYTE PTR [rax],al
  42370e:	add    BYTE PTR [rax],al
  423710:	rex.R (bad) 
  423712:	je     0x423775
  423714:	and    BYTE PTR [rbx+0x6f],ah
  423717:	outs   dx,BYTE PTR ds:[rsi]
  423718:	jae    0x42378e
  42371a:	(bad)  
  42371b:	outs   dx,BYTE PTR ds:[rsi]
  42371c:	je     0x423758
  42371e:	and    BYTE PTR [rbp+0x6e],dh
  423721:	gs js  0x423794
  423724:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  423729:	and    BYTE PTR [rsi+0x43],cl
  42372c:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  423730:	cmp    ah,BYTE PTR gs:[rax]
  423733:	and    eax,0x73
  423738:	clc    
  423739:	mov    esp,0xbbf8fffe
  42373e:	(bad)  
  42373f:	dec    DWORD PTR [rax]
  423741:	mov    esp,0xbc18fffe
  423746:	(bad)  
  423747:	jmp    FWORD PTR [rax]
  423749:	mov    esp,0xbc38fffe
  42374e:	(bad)  
  42374f:	dec    DWORD PTR [rbx-0x44]
  423752:	(bad)  
  423753:	jmp    FWORD PTR [rax-0x44]
  423756:	(bad)  
  423757:	(bad)  
  423758:	js     0x423716
  42375a:	(bad)  
  42375b:	dec    DWORD PTR [rcx-0x67000144]
  423761:	mov    esp,0xbca9fffe
  423766:	(bad)  
  423767:	(bad)  
  423768:	mov    edx,0xf8fffebc
  42376d:	mov    esp,0xbb58fffe
  423772:	(bad)  
  423773:	(bad)  
  423774:	clc    
  423775:	mov    esp,0xbcf8fffe
  42377a:	(bad)  
  42377b:	(bad)  
  42377c:	clc    
  42377d:	mov    esp,0xbcf8fffe
  423782:	(bad)  
  423783:	(bad)  
  423784:	clc    
  423785:	mov    esp,0xbcf8fffe
  42378a:	(bad)  
  42378b:	(bad)  
  42378c:	clc    
  42378d:	mov    esp,0xbcf8fffe
  423792:	(bad)  
  423793:	(bad)  
  423794:	clc    
  423795:	mov    esp,0xbcf8fffe
  42379a:	(bad)  
  42379b:	(bad)  
  42379c:	clc    
  42379d:	mov    esp,0xbcf8fffe
  4237a2:	(bad)  
  4237a3:	(bad)  
  4237a4:	clc    
  4237a5:	mov    esp,0xbcf8fffe
  4237aa:	(bad)  
  4237ab:	(bad)  
  4237ac:	clc    
  4237ad:	mov    esp,0xbcf8fffe
  4237b2:	(bad)  
  4237b3:	(bad)  
  4237b4:	mov    eax,0xb8fffebb
  4237b9:	mov    ebx,0x7325fffe
  4237be:	or     al,BYTE PTR [rax]
  4237c0:	push   rsp
  4237c1:	outs   dx,DWORD PTR ds:[rsi]
  4237c2:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
  4237c6:	and    eax,0x257c2064
  4237cb:	jae    0x423849
  4237cd:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4237d1:	gs cmp eax,0xa6425
  4237d7:	je     0x423848
  4237d9:	imul   esp,DWORD PTR [rbp+0x6e],0x0
  4237dd:	outs   dx,BYTE PTR ds:[rsi]
  4237de:	je     0x423845
  4237e0:	jb     0x42384f
  4237e2:	add    BYTE PTR [rip+0x73252073],ah        # 0x7367585b
  4237e8:	and    BYTE PTR [rax],ch
  4237ea:	add    BYTE PTR [rbp+riz*2+0x6c],al
  4237ee:	gs je  0x42385a
  4237f1:	outs   dx,BYTE PTR ds:[rsi]
  4237f2:	add    BYTE PTR [eip+0x36002073],ah        # 0x3642586c
  4237f9:	xor    al,0x20
  4237fb:	(bad)  
  4237fc:	imul   esi,DWORD PTR [rax+riz*1+0x69],0x6765746e
  423804:	gs jb  0x423827
  423807:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42380a:	jae    0x423880
  42380c:	(bad)  
  42380d:	outs   dx,BYTE PTR ds:[rsi]
  42380e:	je     0x423830
  423810:	outs   dx,DWORD PTR ds:[rsi]
  423811:	jne    0x423887
  423813:	and    BYTE PTR [rdi+0x66],ch
  423816:	and    BYTE PTR [rdx+0x61],dh
  423819:	outs   dx,BYTE PTR ds:[rsi]
  42381a:	cmp    ah,BYTE PTR gs:[eax]
  42381e:	and    eax,0x73
  423823:	add    BYTE PTR [rax],al
  423825:	add    BYTE PTR [rax],al
  423827:	add    BYTE PTR [rdi+0x75],ch
  42382a:	je     0x42384c
  42382c:	outs   dx,DWORD PTR ds:[rsi]
  42382d:	data16 and BYTE PTR [rcx+rdi*2+0x6e],ah
  423832:	(bad)  
  423833:	ins    DWORD PTR es:[rdi],dx
  423834:	imul   esp,DWORD PTR [rbx+0x20],0x6f6d656d
  42383b:	jb     0x4238b6
  42383d:	and    BYTE PTR [rcx+0x6e],ch
  423840:	and    BYTE PTR [rsi+0x63],ch
  423843:	outs   dx,BYTE PTR gs:[esi]
  423846:	jae    0x4238bd
  423848:	jb     0x4238af
  42384a:	pop    rdi
  42384b:	(bad)  
  42384c:	jne    0x4238b4
  42384e:	data16 gs jb 0x4238b1
  423852:	jae    0x4238c8
  423854:	(bad)  
  423855:	movsxd ebp,DWORD PTR [rbx+0x28]
  423858:	sub    DWORD PTR [rax],eax
  42385a:	add    BYTE PTR [rax],al
  42385c:	add    BYTE PTR [rax],al
  42385e:	add    BYTE PTR [rax],al
  423860:	outs   dx,DWORD PTR ds:[rsi]
  423861:	jne    0x4238d7
  423863:	and    BYTE PTR [rdi+0x66],ch
  423866:	and    BYTE PTR [rcx+rdi*2+0x6e],ah
  42386a:	(bad)  
  42386b:	ins    DWORD PTR es:[rdi],dx
  42386c:	imul   esp,DWORD PTR [rbx+0x20],0x6f6d656d
  423873:	jb     0x4238ee
  423875:	and    BYTE PTR [rcx+0x6e],ch
  423878:	and    BYTE PTR [rsi+0x63],ch
  42387b:	addr32 pop rdi
  42387d:	movsxd esi,DWORD PTR [rdx+0x65]
  423880:	(bad)  
  423881:	je     0x4238e8
  423883:	pop    rdi
  423884:	(bad)  
  423885:	jne    0x4238ed
  423887:	data16 gs jb 0x4238b3
  42388b:	sub    DWORD PTR [rax],eax
  42388d:	add    BYTE PTR [rax],al
  42388f:	add    BYTE PTR [rdi+0x75],ch
  423892:	je     0x4238b4
  423894:	outs   dx,DWORD PTR ds:[rsi]
  423895:	data16 and BYTE PTR [rcx+rdi*2+0x6e],ah
  42389a:	(bad)  
  42389b:	ins    DWORD PTR es:[rdi],dx
  42389c:	imul   esp,DWORD PTR [rbx+0x20],0x6f6d656d
  4238a3:	jb     0x42391e
  4238a5:	and    BYTE PTR [rcx+0x6e],ch
  4238a8:	and    BYTE PTR [rsi+0x63],ch
  4238ab:	addr32 pop rdi
  4238ad:	jae    0x423912
  4238af:	(bad)  
  4238b0:	outs   dx,BYTE PTR ds:[rsi]
  4238b1:	pop    rdi
  4238b2:	(bad)  
  4238b3:	jne    0x42391b
  4238b5:	data16 gs jb 0x4238e1
  4238b9:	sub    DWORD PTR [rax],eax
  4238bb:	add    BYTE PTR [rax],al
  4238bd:	add    BYTE PTR [rax],al
  4238bf:	add    BYTE PTR [rdi+0x75],ch
  4238c2:	je     0x4238e4
  4238c4:	outs   dx,DWORD PTR ds:[rsi]
  4238c5:	data16 and BYTE PTR [rcx+rdi*2+0x6e],ah
  4238ca:	(bad)  
  4238cb:	ins    DWORD PTR es:[rdi],dx
  4238cc:	imul   esp,DWORD PTR [rbx+0x20],0x6f6d656d
  4238d3:	jb     0x42394e
  4238d5:	and    BYTE PTR [rcx+0x6e],ch
  4238d8:	and    BYTE PTR [rsi+0x63],ch
  4238db:	addr32 pop rdi
  4238dd:	jae    0x423942
  4238df:	(bad)  
  4238e0:	outs   dx,BYTE PTR ds:[rsi]
  4238e1:	pop    rdi
  4238e2:	(bad)  
  4238e3:	jns    0x423959
  4238e5:	gs jae 0x423910
  4238e8:	sub    DWORD PTR [rax],eax
  4238ea:	add    BYTE PTR [rax],al
  4238ec:	add    BYTE PTR [rax],al
  4238ee:	add    BYTE PTR [rax],al
  4238f0:	(bad)
  4238f5:	jne    0x42395d
  4238f7:	data16 gs jb 0x42391b
  4238fb:	imul   ebp,DWORD PTR [rsi+0x20],0x5f67636e
  423902:	jae    0x423967
  423904:	(bad)  
  423905:	outs   dx,BYTE PTR ds:[rsi]
  423906:	pop    rdi
  423907:	(bad)  
  423908:	jns    0x42397e
  42390a:	gs jae 0x423935
  42390d:	sub    DWORD PTR [rax],eax
  42390f:	rex.WB ins BYTE PTR es:[rdi],dx
  423911:	ins    BYTE PTR es:[rdi],dx
  423912:	gs addr32 (bad) 
  423915:	ins    BYTE PTR es:[rdi],dx
  423916:	and    BYTE PTR [rbx+0x68],ah
  423919:	(bad)  
  42391a:	jb     0x42397d
  42391c:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  423920:	cmp    ah,BYTE PTR [rax]
  423922:	and    eax,0x73
  423927:	add    BYTE PTR [rsi+0x49],cl
  42392a:	rex.WR and BYTE PTR [rdi+0x6e],r13b
  42392e:	ins    BYTE PTR es:[rdi],dx
  42392f:	jns    0x423951
  423931:	(bad)  
  423932:	ins    BYTE PTR es:[rdi],dx
  423933:	ins    BYTE PTR es:[rdi],dx
  423934:	outs   dx,DWORD PTR ds:[rsi]
  423935:	ja     0x42399c
  423937:	and    BYTE PTR fs:[rsi+0x6f],ah
  42393b:	jb     0x42395d
  42393d:	outs   dx,BYTE PTR ds:[rsi]
  42393e:	gs je  0x4239a4
  423941:	fs sub ax,0x2034
  423946:	(bad)  
  423947:	outs   dx,BYTE PTR ds:[rsi]
  423948:	and    BYTE PTR fs:[rsi+0x6f],ah
  42394c:	jb     0x42396e
  42394e:	sub    eax,0x6f20636c
  423953:	jb     0x423975
  423955:	sub    eax,0x2f00626c
  42395a:	add    BYTE PTR [rax],al
  42395c:	add    BYTE PTR [rax],al
  42395e:	add    BYTE PTR [rax],al
  423960:	push   rbp
  423961:	outs   dx,BYTE PTR ds:[rsi]
  423962:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  42396a:	outs   dx,DWORD PTR ds:[rsi]
  42396b:	jb     0x42398d
  42396d:	outs   dx,WORD PTR ds:[rsi]
  42396f:	jb     0x4239e8
  423971:	(bad)  
  423972:	jb     0x4239d8
  423974:	and    BYTE PTR [rdx+0x65],dh
  423977:	data16 gs jb 0x4239e0
  42397b:	outs   dx,BYTE PTR ds:[rsi]
  42397c:	movsxd esp,DWORD PTR [rbp+0x64]
  42397f:	and    BYTE PTR [rdi+0x72],ah
  423982:	outs   dx,DWORD PTR ds:[rsi]
  423983:	jne    0x4239f5
  423985:	cmp    ah,BYTE PTR [rax]
  423987:	and    eax,0x5f0073
  42398c:	push   rbp
  42398d:	outs   dx,BYTE PTR ds:[rsi]
  42398e:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  423992:	outs   dx,BYTE PTR ds:[rsi]
  423993:	and    BYTE PTR [rcx+0x6e],ch
  423996:	je     0x4239fd
  423998:	addr32 gs jb 0x4239bc
  42399c:	jae    0x423a07
  42399e:	jp     0x423a05
  4239a0:	add    BYTE PTR [rip+0x61620064],ah        # 0x61a43a0a
  4239a6:	and    BYTE PTR fs:[rdx+0x79],ah
  4239aa:	je     0x423a11
  4239ac:	and    BYTE PTR [rbx+0x6f],ah
  4239af:	outs   dx,BYTE PTR ds:[rsi]
  4239b0:	jae    0x423a26
  4239b2:	(bad)  
  4239b3:	outs   dx,BYTE PTR ds:[rsi]
  4239b4:	je     0x4239f0
  4239b6:	and    BYTE PTR [rip+0x61620073],ah        # 0x61a43a2f
  4239bc:	and    BYTE PTR fs:[rbx+0x68],dh
  4239c0:	outs   dx,DWORD PTR ds:[rsi]
  4239c1:	jb     0x423a37
  4239c3:	and    BYTE PTR [rbx+0x6f],ah
  4239c6:	outs   dx,BYTE PTR ds:[rsi]
  4239c7:	jae    0x423a3d
  4239c9:	(bad)  
  4239ca:	outs   dx,BYTE PTR ds:[rsi]
  4239cb:	je     0x423a07
  4239cd:	and    BYTE PTR [rip+0x61620073],ah        # 0x61a43a46
  4239d3:	and    BYTE PTR fs:[rcx+0x6e],ch
  4239d7:	je     0x423a0f
  4239d9:	xor    al,0x20
  4239db:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4239de:	jae    0x423a54
  4239e0:	(bad)  
  4239e1:	outs   dx,BYTE PTR ds:[rsi]
  4239e2:	je     0x423a1e
  4239e4:	and    BYTE PTR [rip+0x61620073],ah        # 0x61a43a5d
  4239ea:	and    BYTE PTR fs:[rsi+0x75],ch
  4239ee:	ins    DWORD PTR es:[rdi],dx
  4239ef:	gs jb  0x423a5b
  4239f2:	movsxd esp,DWORD PTR [rax]
  4239f4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4239f7:	jae    0x423a6d
  4239f9:	(bad)  
  4239fa:	outs   dx,BYTE PTR ds:[rsi]
  4239fb:	je     0x423a37
  4239fd:	and    BYTE PTR [rip+0x75250073],ah        # 0x75673a76
  423a03:	add    BYTE PTR [rax],al
  423a05:	add    BYTE PTR [rax],al
  423a07:	add    BYTE PTR [rdx+0x61],ah
  423a0a:	and    BYTE PTR fs:[rbp+0x6e],dh
  423a0e:	jae    0x423a79
  423a10:	outs   dx,BYTE PTR ds:[esi]
  423a12:	gs and BYTE PTR fs:[rdx+0x79],ah
  423a17:	je     0x423a7e
  423a19:	and    BYTE PTR [rbx+0x6f],ah
  423a1c:	outs   dx,BYTE PTR ds:[rsi]
  423a1d:	jae    0x423a93
  423a1f:	(bad)  
  423a20:	outs   dx,BYTE PTR ds:[rsi]
  423a21:	je     0x423a5d
  423a23:	and    BYTE PTR [rip+0x62000073],ah        # 0x62423a9c
  423a29:	(bad)  
  423a2a:	and    BYTE PTR fs:[rbp+0x6e],dh
  423a2e:	jae    0x423a99
  423a30:	outs   dx,BYTE PTR ds:[esi]
  423a32:	gs and BYTE PTR fs:[rbx+0x68],dh
  423a37:	outs   dx,DWORD PTR ds:[rsi]
  423a38:	jb     0x423aae
  423a3a:	and    BYTE PTR [rbx+0x6f],ah
  423a3d:	outs   dx,BYTE PTR ds:[rsi]
  423a3e:	jae    0x423ab4
  423a40:	(bad)  
  423a41:	outs   dx,BYTE PTR ds:[rsi]
  423a42:	je     0x423a7e
  423a44:	and    BYTE PTR [rip+0x6c250073],ah        # 0x6c673abd
  423a4a:	ins    BYTE PTR es:[rdi],dx
  423a4b:	jne    0x423a4d
  423a4d:	add    BYTE PTR [rax],al
  423a4f:	add    BYTE PTR [rdx+0x61],ah
  423a52:	and    BYTE PTR fs:[rbp+0x6e],dh
  423a56:	jae    0x423ac1
  423a58:	outs   dx,BYTE PTR ds:[esi]
  423a5a:	gs and BYTE PTR fs:[rcx+0x6e],ch
  423a5f:	je     0x423a97
  423a61:	xor    al,0x20
  423a63:	movsxd ebp,DWORD PTR [rdi+0x6e]
  423a66:	jae    0x423adc
  423a68:	(bad)  
  423a69:	outs   dx,BYTE PTR ds:[rsi]
  423a6a:	je     0x423aa6
  423a6c:	and    BYTE PTR [rip+0x61620073],ah        # 0x61a43ae5
  423a72:	and    BYTE PTR fs:[rbp+0x6e],dh
  423a76:	jae    0x423ae1
  423a78:	outs   dx,BYTE PTR ds:[esi]
  423a7a:	gs and BYTE PTR fs:[rcx+0x6e],ch
  423a7f:	je     0x423aa1
  423a81:	movsxd ebp,DWORD PTR [rdi+0x6e]
  423a84:	jae    0x423afa
  423a86:	(bad)  
  423a87:	outs   dx,BYTE PTR ds:[rsi]
  423a88:	je     0x423ac4
  423a8a:	and    BYTE PTR [rip+0x69250073],ah        # 0x69673b03
  423a90:	add    BYTE PTR [rip+0x656c],ah        # 0x42a002
  423a96:	add    BYTE PTR [rax],al
  423a98:	(bad)
  423a9d:	outs   dx,DWORD PTR ds:[rsi]
  423a9e:	outs   dx,BYTE PTR ds:[rsi]
  423a9f:	and    BYTE PTR [edi+0x72],ch
  423aa3:	and    BYTE PTR [rdi+rbp*2+0x75],ah
  423aa7:	(bad)  
  423aa8:	ins    BYTE PTR es:[rdi],dx
  423aa9:	and    BYTE PTR gs:[rbx+0x6f],ah
  423aad:	outs   dx,BYTE PTR ds:[rsi]
  423aae:	jae    0x423b24
  423ab0:	(bad)  
  423ab1:	outs   dx,BYTE PTR ds:[rsi]
  423ab2:	je     0x423aee
  423ab4:	and    BYTE PTR [rip+0x65250073],ah        # 0x65673b2d
  423aba:	add    BYTE PTR [rdx+0x61],ah
  423abd:	and    BYTE PTR fs:[rsi+0x6c],ah
  423ac1:	outs   dx,DWORD PTR ds:[rsi]
  423ac2:	(bad)  
  423ac3:	je     0x423ae5
  423ac5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  423ac8:	jae    0x423b3e
  423aca:	(bad)  
  423acb:	outs   dx,BYTE PTR ds:[rsi]
  423acc:	je     0x423b08
  423ace:	and    BYTE PTR [rip+0x63250073],ah        # 0x63673b47
  423ad4:	add    BYTE PTR [rax],al
  423ad6:	add    BYTE PTR [rax],al
  423ad8:	(bad)
  423add:	movsxd esi,DWORD PTR [rcx+riz*2+0x6c]
  423ae1:	and    BYTE PTR [rbx+0x68],ah
  423ae4:	(bad)  
  423ae5:	jb     0x423b48
  423ae7:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  423aeb:	and    BYTE PTR [rbx+0x6f],ah
  423aee:	outs   dx,BYTE PTR ds:[rsi]
  423aef:	jae    0x423b65
  423af1:	(bad)  
  423af2:	outs   dx,BYTE PTR ds:[rsi]
  423af3:	je     0x423b2f
  423af5:	and    BYTE PTR [rip+0x73],ah        # 0x423b6e
  423afb:	add    BYTE PTR [rax],al
  423afd:	add    BYTE PTR [rax],al
  423aff:	add    BYTE PTR [rdx+0x61],ah
  423b02:	and    BYTE PTR fs:[rax+0x65],ch
  423b06:	js     0x423b28
  423b08:	movsxd ebp,DWORD PTR [rax+0x61]
  423b0b:	jb     0x423b6e
  423b0d:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  423b11:	and    BYTE PTR [rbx+0x6f],ah
  423b14:	outs   dx,BYTE PTR ds:[rsi]
  423b15:	jae    0x423b8b
  423b17:	(bad)  
  423b18:	outs   dx,BYTE PTR ds:[rsi]
  423b19:	je     0x423b55
  423b1b:	and    BYTE PTR [rip+0x6e750073],ah        # 0x6eb73b94
  423b21:	je     0x423b88
  423b23:	jb     0x423b92
  423b25:	imul   ebp,DWORD PTR [rsi+0x61],0x20646574
  423b2c:	(bad)  
  423b2d:	sub    ch,BYTE PTR [rdx]
  423b2f:	(bad)  
  423b30:	and    BYTE PTR [rbx+0x6f],ah
  423b33:	ins    DWORD PTR es:[rdi],dx
  423b34:	ins    DWORD PTR es:[rdi],dx
  423b35:	outs   dx,BYTE PTR gs:[rsi]
  423b37:	je     0x423b39
  423b39:	add    BYTE PTR [rax],al
  423b3b:	add    BYTE PTR [rax],al
  423b3d:	add    BYTE PTR [rax],al
  423b3f:	add    BYTE PTR [rsi+0x61],ah
  423b42:	je     0x423ba5
  423b44:	ins    BYTE PTR es:[rdi],dx
  423b45:	and    BYTE PTR [rsi+0x6c],ah
  423b48:	gs js  0x423b6b
  423b4b:	jae    0x423bb0
  423b4d:	(bad)  
  423b4e:	outs   dx,BYTE PTR ds:[rsi]
  423b4f:	outs   dx,BYTE PTR ds:[rsi]
  423b50:	gs jb  0x423b73
  423b53:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  423b5a:	ins    BYTE PTR es:[rdi],dx
  423b5b:	and    BYTE PTR [rbp+0x72],ah
  423b5e:	jb     0x423bcf
  423b60:	jb     0x423b8f
  423b62:	sub    eax,0x20646e65
  423b67:	outs   dx,DWORD PTR ds:[rsi]
  423b68:	data16 and BYTE PTR [rdx+0x75],ah
  423b6c:	data16 data16 gs jb 0x423b91
  423b71:	ins    DWORD PTR es:[rdi],dx
  423b72:	imul   esi,DWORD PTR [rbx+0x73],0x66006465
  423b79:	(bad)  
  423b7a:	je     0x423bdd
  423b7c:	ins    BYTE PTR es:[rdi],dx
  423b7d:	and    BYTE PTR [rbp+0x72],ah
  423b80:	jb     0x423bf1
  423b82:	jb     0x423ba4
  423b84:	sub    eax,0x61637320
  423b89:	outs   dx,BYTE PTR ds:[rsi]
  423b8a:	outs   dx,BYTE PTR ds:[rsi]
  423b8b:	gs jb  0x423bae
  423b8e:	imul   ebp,DWORD PTR [rsi+0x70],0x62207475
  423b95:	jne    0x423bfd
  423b97:	data16 gs jb 0x423bbb
  423b9b:	outs   dx,DWORD PTR ds:[rsi]
  423b9c:	jbe    0x423c03
  423b9e:	jb     0x423c06
  423ba0:	ins    BYTE PTR es:[rdi],dx
  423ba1:	outs   dx,DWORD PTR ds:[rsi]
  423ba2:	ja     0x423ba4
  423ba4:	imul   ebp,DWORD PTR [rsi+0x70],0x69207475
  423bab:	outs   dx,BYTE PTR ds:[rsi]
  423bac:	and    BYTE PTR [rsi+0x6c],ah
  423baf:	gs js  0x423bd2
  423bb2:	jae    0x423c17
  423bb4:	(bad)  
  423bb5:	outs   dx,BYTE PTR ds:[rsi]
  423bb6:	outs   dx,BYTE PTR ds:[rsi]
  423bb7:	gs jb  0x423bda
  423bba:	data16 (bad) 
  423bbc:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
  423bc4:	add    BYTE PTR [rax],al
  423bc6:	add    BYTE PTR [rax],al
  423bc8:	outs   dx,DWORD PTR ds:[rsi]
  423bc9:	jne    0x423c3f
  423bcb:	and    BYTE PTR [rdi+0x66],ch
  423bce:	and    BYTE PTR [rcx+rdi*2+0x6e],ah
  423bd2:	(bad)  
  423bd3:	ins    DWORD PTR es:[rdi],dx
  423bd4:	imul   esp,DWORD PTR [rbx+0x20],0x6f6d656d
  423bdb:	jb     0x423c56
  423bdd:	and    BYTE PTR [rcx+0x6e],ch
  423be0:	and    BYTE PTR [rcx+0x79],bh
  423be3:	pop    rdi
  423be4:	addr32 gs je 0x423c47
  423be8:	outs   dx,BYTE PTR ds:[rsi]
  423be9:	gs js  0x423c60
  423bec:	pop    rdi
  423bed:	(bad)  
  423bee:	jne    0x423c56
  423bf0:	data16 gs jb 0x423c1c
  423bf4:	sub    DWORD PTR [rax],eax
  423bf6:	add    BYTE PTR [rax],al
  423bf8:	data16 (bad) 
  423bfa:	je     0x423c5d
  423bfc:	ins    BYTE PTR es:[rdi],dx
  423bfd:	and    BYTE PTR [rsi+0x6c],ah
  423c00:	gs js  0x423c23
  423c03:	jae    0x423c68
  423c05:	(bad)  
  423c06:	outs   dx,BYTE PTR ds:[rsi]
  423c07:	outs   dx,BYTE PTR ds:[rsi]
  423c08:	gs jb  0x423c2b
  423c0b:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  423c12:	ins    BYTE PTR es:[rdi],dx
  423c13:	and    BYTE PTR [rbp+0x72],ah
  423c16:	jb     0x423c87
  423c18:	jb     0x423c47
  423c1a:	sub    eax,0x61206f6e
  423c1f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  423c23:	outs   dx,BYTE PTR ds:[rsi]
  423c24:	and    BYTE PTR [rsi+0x6f],ah
  423c27:	jne    0x423c97
  423c29:	add    BYTE PTR fs:[rax],al
  423c2c:	leave  
  423c2d:	int    0xfe
  423c2f:	call   QWORD PTR [rsi-0x3c]
  423c32:	(bad)  
  423c33:	call   QWORD PTR [rsi-0x3c]
  423c36:	(bad)  
  423c37:	call   QWORD PTR [rcx-0x2a000137]
  423c3d:	(bad)  
  423c3e:	(bad)  
  423c3f:	push   QWORD PTR [rcx-0x1c000139]
  423c45:	sar    dh,1
  423c47:	call   QWORD PTR [rcx+rdx*8]
  423c4a:	(bad)  
  423c4b:	jmp    QWORD PTR [rsi-0x34]
  423c4e:	(bad)  
  423c4f:	push   QWORD PTR [rsi+rcx*8]
  423c52:	(bad)  
  423c53:	call   QWORD PTR [rax]
  423c55:	(bad)  
  423c56:	(bad)  
  423c57:	(bad)  
  423c58:	in     al,dx
  423c59:	int    0xfe
  423c5b:	call   FWORD PTR [rdi-0x73000136]
  423c61:	enter  0xfffe,0xa5
  423c65:	int    0xfe
  423c67:	inc    DWORD PTR [rcx-0x54000133]
  423c6d:	(bad)  
  423c6e:	(bad)  
  423c6f:	dec    DWORD PTR [rcx-0x30]
  423c72:	(bad)  
  423c73:	jmp    QWORD PTR [rip+0xfffffffff7fffed0]        # 0xfffffffff8423b49
  423c79:	iret   
  423c7a:	(bad)  
  423c7b:	call   rbx
  423c7d:	iret   
  423c7e:	(bad)  
  423c7f:	jmp    FWORD PTR [rdi-0x74000131]
  423c85:	iret   
  423c86:	(bad)  
  423c87:	jmp    QWORD PTR [rdi-0x31]
  423c8a:	(bad)  
  423c8b:	inc    DWORD PTR [rbx-0x31]
  423c8e:	(bad)  
  423c8f:	call   FWORD PTR [rbp-0x2f]
  423c92:	(bad)  
  423c93:	(bad)  
  423c94:	cmp    cl,dl
  423c96:	(bad)  
  423c97:	push   QWORD PTR [rax+rdx*8-0x2f920002]
  423c9e:	(bad)  
  423c9f:	inc    DWORD PTR [rdi]
  423ca1:	sar    esi,1
  423ca3:	push   rsp
  423ca5:	(bad)  
  423ca6:	(bad)  
  423ca7:	call   QWORD PTR [rip+0x54fffec7]        # 0x55423b74
  423cad:	(bad)  
  423cae:	(bad)  
  423caf:	push   QWORD PTR [rax-0x67000138]
  423cb5:	(bad)  
  423cb8:	enter  0xfec4,0xff
  423cbc:	cli    
  423cbd:	(bad)  
  423cbe:	(bad)  
  423cbf:	inc    ebp
  423cc1:	int3   
  423cc2:	(bad)  
  423cc3:	(bad)  
  423cc4:	mov    ecx,0xbcfffecb
  423cc9:	(bad)  
  423cca:	(bad)  
  423ccb:	call   FWORD PTR [rax-0x32]
  423cce:	(bad)  
  423ccf:	jmp    QWORD PTR [rax]
  423cd1:	iret   
  423cd2:	(bad)  
  423cd3:	call   QWORD PTR [rbx+rcx*8-0x35a60002]
  423cda:	(bad)  
  423cdb:	push   QWORD PTR [rax]
  423cdd:	retf   0xfffe
  423ce0:	rex.WRXB (bad) 
  423ce2:	(bad)  
  423ce3:	dec    DWORD PTR [rdx+0x56fffecc]
  423ce9:	(bad)  
  423cea:	(bad)  
  423ceb:	inc    DWORD PTR [rdx+0x72fffec4]
  423cf1:	int    0xfe
  423cf3:	call   FWORD PTR [rsi-0x26000134]
  423cf9:	retf   0xfffe
  423cfc:	xchg   esi,eax
  423cfd:	(bad)  
  423cfe:	(bad)  
  423cff:	jmp    QWORD PTR [rcx-0x3c]
  423d02:	(bad)  
  423d03:	call   QWORD PTR [rsi+0x2bfffec4]
  423d09:	(bad)  
  423d0b:	push   QWORD PTR [rdi]
  423d0d:	(bad)  
  423d0f:	push   QWORD PTR [rdi]
  423d11:	(bad)  
  423d13:	push   QWORD PTR [rdi]
  423d15:	(bad)  
  423d17:	push   QWORD PTR [rdi]
  423d19:	(bad)  
  423d1b:	push   QWORD PTR [rdi]
  423d1d:	(bad)  
  423d1f:	push   QWORD PTR [rdi]
  423d21:	(bad)  
  423d23:	push   QWORD PTR [rdi]
  423d25:	(bad)  
  423d27:	push   QWORD PTR [rdi]
  423d29:	(bad)  
  423d2b:	push   QWORD PTR [rdi]
  423d2d:	(bad)  
  423d2f:	push   QWORD PTR [rdi]
  423d31:	(bad)  
  423d33:	push   QWORD PTR [rdi]
  423d35:	(bad)  
  423d37:	push   QWORD PTR [rdi]
  423d39:	(bad)  
  423d3b:	push   QWORD PTR [rdi]
  423d3d:	(bad)  
  423d3f:	push   QWORD PTR [rdi]
  423d41:	(bad)  
  423d43:	push   QWORD PTR [rdi]
  423d45:	(bad)  
  423d47:	push   QWORD PTR [rdi]
  423d49:	(bad)  
  423d4b:	push   QWORD PTR [rdi]
  423d4d:	(bad)  
  423d4f:	push   QWORD PTR [rdi]
  423d51:	(bad)  
  423d53:	push   QWORD PTR [rdi]
  423d55:	(bad)  
  423d57:	push   QWORD PTR [rdi]
  423d59:	(bad)  
  423d5b:	push   QWORD PTR [rdi]
  423d5d:	(bad)  
  423d5f:	push   QWORD PTR [rdi]
  423d61:	(bad)  
  423d63:	push   QWORD PTR [rdi]
  423d65:	(bad)  
  423d67:	call   FWORD PTR [rdi]
  423d69:	(bad)  
  423d6b:	push   QWORD PTR [rdi]
  423d6d:	(bad)  
  423d6f:	push   QWORD PTR [rdi]
  423d71:	(bad)  
  423d73:	push   QWORD PTR [rdi]
  423d75:	(bad)  
  423d77:	push   QWORD PTR [rdi]
  423d79:	(bad)  
  423d7b:	push   QWORD PTR [rdi]
  423d7d:	(bad)  
  423d7f:	push   QWORD PTR [rdi]
  423d81:	(bad)  
  423d83:	push   QWORD PTR [rdi]
  423d85:	(bad)  
  423d87:	push   QWORD PTR [rdi]
  423d89:	(bad)  
  423d8b:	push   QWORD PTR [rdi]
  423d8d:	(bad)  
  423d8f:	push   QWORD PTR [rdi]
  423d91:	(bad)  
  423d93:	push   QWORD PTR [rdi]
  423d95:	(bad)  
  423d97:	push   QWORD PTR [rdi]
  423d99:	(bad)  
  423d9b:	push   QWORD PTR [rdi]
  423d9d:	(bad)  
  423d9f:	push   QWORD PTR [rdi]
  423da1:	(bad)  
  423da3:	push   QWORD PTR [rdi]
  423da5:	(bad)  
  423da7:	push   QWORD PTR [rdi]
  423da9:	(bad)  
  423dab:	push   QWORD PTR [rdi]
  423dad:	(bad)  
  423daf:	push   QWORD PTR [rdi]
  423db1:	(bad)  
  423db3:	push   QWORD PTR [rdi]
  423db5:	(bad)  
  423db7:	push   QWORD PTR [rdi]
  423db9:	(bad)  
  423dbb:	push   QWORD PTR [rdi]
  423dbd:	(bad)  
  423dbf:	push   QWORD PTR [rdi]
  423dc1:	(bad)  
  423dc3:	push   QWORD PTR [rdi]
  423dc5:	(bad)  
  423dc7:	push   QWORD PTR [rdi]
  423dc9:	(bad)  
  423dcb:	push   QWORD PTR [rdi]
  423dcd:	(bad)  
  423dcf:	push   QWORD PTR [rdi]
  423dd1:	(bad)  
  423dd3:	push   QWORD PTR [rdi]
  423dd5:	(bad)  
  423dd7:	push   QWORD PTR [rdi]
  423dd9:	(bad)  
  423ddb:	call   QWORD PTR [rbx]
  423ddd:	(bad)  
  423ddf:	push   QWORD PTR [rdi]
  423de1:	(bad)  
  423de3:	push   QWORD PTR [rdi]
  423de5:	(bad)  
  423de7:	push   QWORD PTR [rdi]
  423de9:	(bad)  
  423deb:	push   QWORD PTR [rdi]
  423ded:	(bad)  
  423def:	inc    DWORD PTR [rdi]
  423df1:	(bad)  
  423df3:	(bad)  
  423df4:	sti    
  423df5:	fsin   
  423df7:	push   QWORD PTR [rdi]
  423df9:	(bad)  
  423dfb:	push   QWORD PTR [rdi]
  423dfd:	(bad)  
  423dff:	push   QWORD PTR [rdi]
  423e01:	(bad)  
  423e03:	(bad)  
  423e04:	out    dx,eax
  423e05:	fsin   
  423e07:	push   QWORD PTR [rdi]
  423e09:	(bad)  
  423e0b:	push   QWORD PTR [rdi]
  423e0d:	(bad)  
  423e0f:	push   QWORD PTR [rdi]
  423e11:	(bad)  
  423e13:	push   QWORD PTR [rdi]
  423e15:	(bad)  
  423e17:	push   QWORD PTR [rdi]
  423e19:	(bad)  
  423e1b:	push   QWORD PTR [rdi]
  423e1d:	(bad)  
  423e1f:	push   QWORD PTR [rdi]
  423e21:	(bad)  
  423e23:	jmp    rbx
  423e25:	fsin   
  423e27:	push   QWORD PTR [rdi]
  423e29:	(bad)  
  423e2b:	push   QWORD PTR [rdi]
  423e2d:	(bad)  
  423e2f:	push   QWORD PTR [rdi]
  423e31:	(bad)  
  423e33:	(bad)  
  423e34:	ds (bad) 
  423e36:	(bad)  
  423e37:	push   QWORD PTR [rdi]
  423e39:	(bad)  
  423e3b:	push   QWORD PTR [rdx]
  423e3d:	(bad)  
  423e3e:	(bad)  
  423e3f:	push   QWORD PTR [rdi]
  423e41:	(bad)  
  423e43:	dec    DWORD PTR [rdx-0x2b]
  423e46:	(bad)  
  423e47:	call   FWORD PTR [rdi+0x46]
  423e4a:	imul   ebp,DWORD PTR [rsp+rbp*2+0x56],0x65756c61
  423e52:	add    BYTE PTR [rdi+0x46],bl
  423e55:	outs   dx,DWORD PTR ds:[rsi]
  423e56:	jb     0x423ec5
  423e58:	(bad)  
  423e59:	je     0x423e5b
  423e5b:	pop    rdi
  423e5c:	push   rbx
  423e5d:	je     0x423ece
  423e5f:	jb     0x423ec2
  423e61:	add    BYTE PTR gs:[edi+0x43],bl
  423e66:	push   0x536b6e75
  423e6b:	imul   edi,DWORD PTR [rdx+0x65],0x465f0073
  423e72:	ins    BYTE PTR es:[rdi],dx
  423e73:	gs je  0x423ed9
  423e76:	push   0x32337265
  423e7b:	add    BYTE PTR [rdi+0x44],bl
  423e7e:	gs data16 ins BYTE PTR es:[rdi],dx
  423e81:	(bad)  
  423e82:	je     0x423ee9
  423e84:	rex.WR
  423e85:	gs jbe 0x423eed
  423e88:	ins    BYTE PTR es:[rdi],dx
  423e89:	add    BYTE PTR [rdi+0x53],bl
  423e8c:	push   0x6c666675
  423e91:	add    BYTE PTR gs:[rdi+0x45],bl
  423e95:	outs   dx,BYTE PTR ds:[rsi]
  423e96:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x7373656e
  423e9e:	add    BYTE PTR [rdi+0x4e],bl
  423ea1:	outs   dx,DWORD PTR ds:[rsi]
  423ea2:	imul   r13d,DWORD PTR [rsp+r13*2+0x0],0x6b6e753c
  423eab:	outs   dx,BYTE PTR ds:[rsi]
  423eac:	outs   dx,DWORD PTR ds:[rsi]
  423ead:	ja     0x423f1d
  423eaf:	add    BYTE PTR ds:[rax],al
  423eb2:	add    BYTE PTR [rax],al
  423eb4:	add    BYTE PTR [rax],al
  423eb6:	add    BYTE PTR [rax],al
  423eb8:	pop    rdi
  423eb9:	rex.RX outs dx,DWORD PTR ds:[rsi]
  423ebb:	jb     0x423f2a
  423ebd:	(bad)  
  423ebe:	je     0x423efa
  423ec0:	and    BYTE PTR [rbp+0x75],ch
  423ec3:	jae    0x423f39
  423ec5:	and    BYTE PTR [rdx+0x65],ah
  423ec8:	and    BYTE PTR [rdi+0x6c],ah
  423ecb:	outs   dx,DWORD PTR ds:[rsi]
  423ecc:	(bad)
  423ed1:	je     0x423f47
  423ed3:	jb     0x423f3e
  423ed5:	(bad)  
  423ed6:	jne    0x423f4c
  423ed8:	add    BYTE PTR gs:[rip+0x6d203a73],ah        # 0x6d627952
  423edf:	jne    0x423f54
  423ee1:	je     0x423f03
  423ee3:	push   0x20657661
  423ee8:	outs   dx,BYTE PTR ds:[rsi]
  423ee9:	outs   dx,DWORD PTR ds:[rsi]
  423eea:	outs   dx,BYTE PTR ds:[rsi]
  423eeb:	sub    eax,0x4c4c554e
  423ef0:	and    BYTE PTR [rsi+0x73],dh
  423ef3:	jns    0x423f62
  423ef5:	add    BYTE PTR [rsi+0x61],ah
  423ef8:	ins    BYTE PTR es:[rdi],dx
  423ef9:	jae    0x423f60
  423efb:	add    BYTE PTR [rax],dh
  423efd:	add    BYTE PTR [rdx+rsi*2+0x75],dh
  423f01:	add    BYTE PTR gs:[rcx],dh
  423f04:	add    BYTE PTR [rip+0x69203a73],ah        # 0x6962797d
  423f0a:	ins    BYTE PTR es:[rdi],dx
  423f0b:	ins    BYTE PTR es:[rdi],dx
  423f0c:	gs addr32 (bad) 
  423f0f:	ins    BYTE PTR es:[rdi],dx
  423f10:	and    BYTE PTR [rsi+0x61],dh
  423f13:	ins    BYTE PTR es:[rdi],dx
  423f14:	jne    0x423f7b
  423f16:	add    BYTE PTR [rbp+0x6e],dh
  423f19:	gs js  0x423f8c
  423f1c:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  423f21:	and    BYTE PTR [rbx+0x70],dh
  423f24:	movsxd ebp,DWORD PTR gs:[rcx+0x61]
  423f28:	ins    BYTE PTR es:[rdi],dx
  423f29:	and    BYTE PTR [rcx+riz*2+0x67],dh
  423f2d:	cmp    ah,BYTE PTR [rax]
  423f2f:	and    eax,0x64
  423f34:	add    BYTE PTR [rax],al
  423f36:	add    BYTE PTR [rax],al
  423f38:	jo     0x423f9b
  423f3a:	outs   dx,BYTE PTR ds:[rsi]
  423f3b:	imul   esp,DWORD PTR [rbx+0x28],0x656e7522
  423f42:	js     0x423fb4
  423f44:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  423f49:	and    BYTE PTR [rbx+0x70],dh
  423f4c:	movsxd ebp,DWORD PTR gs:[rcx+0x61]
  423f50:	ins    BYTE PTR es:[rdi],dx
  423f51:	and    BYTE PTR [rcx+riz*2+0x67],dh
  423f55:	cmp    ah,BYTE PTR [rax]
  423f57:	and    eax,0x742c2264
  423f5c:	(bad)  
  423f5d:	sub    DWORD PTR [eax],eax
  423f60:	pop    rdi
  423f61:	imul   r13d,DWORD PTR [rsp+r13*2+0x56],0x65756c61
  423f6a:	cmp    ah,BYTE PTR [rax]
  423f6c:	ins    DWORD PTR es:[rdi],dx
  423f6d:	jne    0x423fe2
  423f6f:	je     0x423f91
  423f71:	(bad)  
  423f72:	and    BYTE PTR gs:[rcx+0x20],ah
  423f76:	jae    0x423fe1
  423f78:	outs   dx,BYTE PTR ds:[rsi]
  423f79:	ins    BYTE PTR es:[edi],dx
  423f7b:	and    BYTE PTR gs:[rax],ch
  423f7e:	jo     0x423fef
  423f80:	jae    0x423ff5
  423f82:	imul   esp,DWORD PTR [rdx+0x6c],0x6f632079
  423f89:	ins    DWORD PTR es:[rdi],dx
  423f8a:	jo     0x423ffb
  423f8c:	jne    0x423ffc
  423f8e:	sub    DWORD PTR fs:[rax],esp
  423f91:	jbe    0x423ff4
  423f93:	ins    BYTE PTR es:[rdi],dx
  423f94:	jne    0x423ffb
  423f96:	add    BYTE PTR [rax],al
  423f98:	rex.B je 0x42400f
  423f9b:	jb     0x424006
  423f9d:	(bad)  
  423f9e:	jne    0x424014
  423fa0:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  423fa5:	(bad)  
  423fa6:	and    BYTE PTR [rbp+0x61],ch
  423fa9:	jns    0x423fcb
  423fab:	outs   dx,BYTE PTR ds:[rsi]
  423fac:	outs   dx,DWORD PTR ds:[rsi]
  423fad:	je     0x423fcf
  423faf:	movsxd ebp,DWORD PTR [rdi+0x6e]
  423fb2:	je     0x424015
  423fb4:	imul   ebp,DWORD PTR [rsi+0x20],0x6c6c6966
  423fbb:	and    BYTE PTR [rsi+0x61],dh
  423fbe:	ins    BYTE PTR es:[rdi],dx
  423fbf:	jne    0x424026
  423fc1:	jae    0x423fe3
  423fc3:	sub    BYTE PTR [rcx+0x2e],ch
  423fc6:	gs and BYTE PTR cs:[rdi+0x20],bl
  423fcb:	sub    DWORD PTR [rax],eax
  423fcd:	add    BYTE PTR [rax],al
  423fcf:	add    BYTE PTR [rdi+0x46],bl
  423fd2:	imul   ebp,DWORD PTR [rsp+rbp*2+0x56],0x65756c61
  423fda:	and    BYTE PTR [rcx+0x74],ah
  423fdd:	je     0x424051
  423fdf:	imul   esp,DWORD PTR [rdx+0x75],0x6e206574
  423fe6:	outs   dx,DWORD PTR ds:[rsi]
  423fe7:	je     0x424009
  423fe9:	(bad)  
  423fea:	jae    0x42405f
  423fec:	outs   dx,DWORD PTR ds:[rsi]
  423fed:	movsxd ebp,DWORD PTR [rcx+0x61]
  423ff0:	je     0x424057
  423ff2:	and    BYTE PTR fs:[rdi+0x69],dh
  423ff6:	je     0x424060
  423ff8:	and    BYTE PTR [rsi+0x61],dh
  423ffb:	jb     0x424066
  423ffd:	(bad)  
  423ffe:	(bad)  
  423fff:	ins    BYTE PTR es:[rdi],dx
  424000:	cmp    ah,BYTE PTR gs:[rax]
  424003:	and    eax,0x73
  424008:	pop    rdi
  424009:	imul   r13d,DWORD PTR [rsp+r13*2+0x56],0x65756c61
  424012:	and    BYTE PTR [rcx+0x74],ah
  424015:	je     0x424089
  424017:	imul   esp,DWORD PTR [rdx+0x75],0x74206574
  42401e:	jns    0x424090
  424020:	and    BYTE PTR gs:[rdi+rbp*2+0x65],ah
  424025:	jae    0x424047
  424027:	outs   dx,BYTE PTR ds:[rsi]
  424028:	outs   dx,DWORD PTR ds:[rsi]
  424029:	je     0x42404b
  42402b:	ins    DWORD PTR es:[rdi],dx
  42402c:	(bad)  
  42402d:	je     0x424092
  42402f:	push   0x72617620
  424034:	imul   esp,DWORD PTR [rcx+0x62],0x7420656c
  42403b:	jns    0x4240ad
  42403d:	cmp    ah,BYTE PTR gs:[rax]
  424040:	and    eax,0x6f630073
  424045:	outs   dx,BYTE PTR ds:[rsi]
  424046:	je     0x4240b1
  424048:	addr32 jne 0x4240ba
  42404b:	jne    0x4240c0
  42404d:	add    BYTE PTR [rbx+0x68],ah
  424050:	jne    0x4240c0
  424052:	imul   esp,DWORD PTR [rbp+0x64],0x0
  424056:	pop    rdi
  424057:	push   rbx
  424058:	je     0x4240c9
  42405a:	jb     0x4240bd
  42405c:	cmp    ah,BYTE PTR gs:[eax]
  424060:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
  424068:	jbe    0x4240cb
  42406a:	ins    BYTE PTR es:[rdi],dx
  42406b:	jne    0x4240d2
  42406d:	cmp    ah,BYTE PTR [rax]
  42406f:	and    eax,0x696c0073
  424074:	je     0x4240ea
  424076:	ins    BYTE PTR es:[rdi],dx
  424077:	add    BYTE PTR gs:[rdx+0x69],ah
  42407b:	add    BYTE PTR [eax],al
  42407e:	add    BYTE PTR [rax],al
  424080:	pop    rdi
  424081:	rex.RB outs dx,BYTE PTR ds:[rsi]
  424083:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x7373656e
  42408b:	cmp    ah,BYTE PTR [rax]
  42408d:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
  424095:	jbe    0x4240f8
  424097:	ins    BYTE PTR es:[rdi],dx
  424098:	jne    0x4240ff
  42409a:	cmp    ah,BYTE PTR [rax]
  42409c:	and    eax,0x6d000073
  4240a1:	(bad)  
  4240a2:	imul   esp,DWORD PTR [rbp+0x73],0x70
  4240a6:	movsxd ebp,DWORD PTR gs:[rcx+0x61]
  4240aa:	ins    BYTE PTR es:[rdi],dx
  4240ab:	cmp    ah,BYTE PTR [rax]
  4240ad:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
  4240b5:	je     0x424126
  4240b7:	imul   esp,DWORD PTR [rbp+0x6e],0x3a
  4240bb:	and    BYTE PTR [rip+0x70000064],ah        # 0x70424125
  4240c1:	(bad)  
  4240c2:	outs   dx,BYTE PTR ds:[rsi]
  4240c3:	imul   esp,DWORD PTR [rbx+0x28],0x6b616d22
  4240ca:	gs jae 0x42413d
  4240cd:	movsxd ebp,DWORD PTR gs:[rcx+0x61]
  4240d1:	ins    BYTE PTR es:[rdi],dx
  4240d2:	cmp    ah,BYTE PTR [rax]
  4240d4:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
  4240dc:	je     0x42414d
  4240de:	imul   esp,DWORD PTR [rbp+0x6e],0x3a
  4240e2:	and    BYTE PTR [rip+0x742c2264],ah        # 0x746e634c
  4240e8:	(bad)  
  4240e9:	sub    DWORD PTR [eax],eax
  4240ec:	pop    rdi
  4240ed:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4240ef:	jb     0x42415e
  4240f1:	(bad)  
  4240f2:	je     0x42412e
  4240f4:	and    BYTE PTR [rcx+0x6c],ch
  4240f7:	ins    BYTE PTR es:[rdi],dx
  4240f8:	gs addr32 (bad) 
  4240fb:	ins    BYTE PTR es:[rdi],dx
  4240fc:	and    BYTE PTR [rsi+0x61],dh
  4240ff:	ins    BYTE PTR es:[rdi],dx
  424100:	jne    0x424167
  424102:	cmp    ah,BYTE PTR [rax]
  424104:	and    eax,0xb000073
  424109:	(bad)  
  42410b:	jmp    FWORD PTR [rax-0x22]
  42410e:	(bad)  
  42410f:	(bad)  
  424110:	mov    eax,0xbfffedd
  424115:	(bad)  
  424117:	(bad)  
  424118:	cmp    ch,bl
  42411a:	(bad)  
  42411b:	dec    DWORD PTR [rbx]
  42411d:	(bad)  
  42411f:	dec    DWORD PTR [rbx]
  424121:	(bad)  
  424123:	dec    DWORD PTR [rbx]
  424125:	(bad)  
  424127:	jmp    FWORD PTR [rax]
  424129:	(bad)  
  42412b:	dec    DWORD PTR [rbx]
  42412d:	(bad)  
  42412f:	dec    DWORD PTR [rbx]
  424131:	(bad)  
  424133:	dec    DWORD PTR [rbx]
  424135:	(bad)  
  424137:	dec    DWORD PTR [rbx]
  424139:	(bad)  
  42413b:	dec    DWORD PTR [rbx]
  42413d:	(bad)  
  42413f:	dec    DWORD PTR [rbx]
  424141:	(bad)  
  424143:	dec    DWORD PTR [rbx]
  424145:	(bad)  
  424147:	(bad)  
  424148:	jnp    0x424127
  42414a:	(bad)  
  42414b:	dec    DWORD PTR [rbx]
  42414d:	(bad)  
  42414f:	dec    DWORD PTR [rbx]
  424151:	(bad)  
  424153:	dec    DWORD PTR [rbx]
  424155:	(bad)  
  424157:	dec    DWORD PTR [rbx]
  424159:	(bad)  
  42415b:	dec    DWORD PTR [rbx]
  42415d:	(bad)  
  42415f:	dec    DWORD PTR [rbx]
  424161:	(bad)  
  424163:	dec    DWORD PTR [rbx]
  424165:	(bad)  
  424167:	dec    DWORD PTR [rbx]
  424169:	(bad)  
  42416b:	dec    DWORD PTR [rbx]
  42416d:	(bad)  
  42416f:	dec    DWORD PTR [rbx]
  424171:	(bad)  
  424173:	dec    DWORD PTR [rbx]
  424175:	(bad)  
  424177:	dec    DWORD PTR [rbx]
  424179:	(bad)  
  42417b:	dec    DWORD PTR [rbx]
  42417d:	(bad)  
  42417f:	dec    DWORD PTR [rbx]
  424181:	(bad)  
  424183:	dec    DWORD PTR [rbx]
  424185:	(bad)  
  424187:	dec    DWORD PTR [rbp+rbx*8-0x2]
  42418b:	dec    DWORD PTR [rbx]
  42418d:	(bad)  
  42418f:	dec    DWORD PTR [rbx]
  424191:	(bad)  
  424193:	dec    DWORD PTR [rbx]
  424195:	(bad)  
  424197:	dec    DWORD PTR [rbx]
  424199:	(bad)  
  42419b:	dec    DWORD PTR [rbx]
  42419d:	(bad)  
  42419f:	dec    DWORD PTR [rbx]
  4241a1:	(bad)  
  4241a3:	dec    DWORD PTR [rbx]
  4241a5:	(bad)  
  4241a7:	dec    DWORD PTR [rbx]
  4241a9:	(bad)  
  4241ab:	dec    DWORD PTR [rbx]
  4241ad:	(bad)  
  4241af:	dec    DWORD PTR [rbx]
  4241b1:	(bad)  
  4241b3:	dec    DWORD PTR [rbx]
  4241b5:	(bad)  
  4241b7:	dec    DWORD PTR [rbx]
  4241b9:	(bad)  
  4241bb:	dec    DWORD PTR [rbx]
  4241bd:	(bad)  
  4241bf:	dec    DWORD PTR [rbx]
  4241c1:	(bad)  
  4241c3:	dec    DWORD PTR [rbx]
  4241c5:	(bad)  
  4241c7:	dec    DWORD PTR [rbx]
  4241c9:	(bad)  
  4241cb:	dec    DWORD PTR [rbx]
  4241cd:	(bad)  
  4241cf:	dec    DWORD PTR [rbx]
  4241d1:	(bad)  
  4241d3:	dec    DWORD PTR [rbx]
  4241d5:	(bad)  
  4241d7:	dec    DWORD PTR [rbx]
  4241d9:	(bad)  
  4241db:	dec    DWORD PTR [rbx]
  4241dd:	(bad)  
  4241df:	dec    DWORD PTR [rbx]
  4241e1:	(bad)  
  4241e3:	dec    DWORD PTR [rbx]
  4241e5:	(bad)  
  4241e7:	dec    DWORD PTR [rbx]
  4241e9:	(bad)  
  4241eb:	dec    DWORD PTR [rbx]
  4241ed:	(bad)  
  4241ef:	dec    DWORD PTR [rbx]
  4241f1:	(bad)  
  4241f3:	dec    DWORD PTR [rbx]
  4241f5:	(bad)  
  4241f7:	dec    DWORD PTR [rbx]
  4241f9:	(bad)  
  4241fb:	dec    DWORD PTR [rbx]
  4241fd:	(bad)  
  4241ff:	dec    DWORD PTR [rbx]
  424201:	(bad)  
  424203:	dec    DWORD PTR [rbx]
  424205:	(bad)  
  424207:	call   FWORD PTR [rax+0x53fffedd]
  42420d:	je     0x424270
  42420f:	jb     0x424285
  424211:	imul   ebp,DWORD PTR [rsi+0x67],0x72617020
  424218:	jae    0x42427f
  42421a:	or     al,BYTE PTR [rax]
  42421c:	push   rbx
  42421d:	je     0x424280
  42421f:	movsxd ebp,DWORD PTR [rbx+0x20]
  424222:	jae    0x42428d
  424224:	jp     0x42428b
  424226:	and    BYTE PTR [rcx+0x6e],ch
  424229:	movsxd esi,DWORD PTR [rdx+0x65]
  42422c:	(bad)  
  42422d:	jae    0x424294
  42422f:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  424234:	and    eax,0xa756c
  424239:	rex.RB outs dx,BYTE PTR ds:[rsi]
  42423b:	je     0x4242a2
  42423d:	jb     0x4242a8
  42423f:	outs   dx,BYTE PTR ds:[rsi]
  424240:	and    BYTE PTR [ebx+0x74],dh
  424244:	(bad)  
  424245:	je     0x4242ac
  424247:	and    BYTE PTR [rip+0x52000a64],ah        # 0x52424cb1
  42424d:	gs (bad) 
  42424f:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74206120
  424257:	outs   dx,DWORD PTR ds:[rsi]
  424258:	imul   esp,DWORD PTR [rbp+0x6e],0x3a
  42425c:	and    BYTE PTR [rax],al
  42425e:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  424260:	ja     0x424282
  424262:	(bad)  
  424263:	je     0x424285
  424265:	outs   dx,BYTE PTR gs:[rsi]
  424267:	and    BYTE PTR fs:[rdi+0x66],ch
  42426b:	and    BYTE PTR [rcx+0x6e],ch
  42426e:	jo     0x4242e5
  424270:	je     0x4242a0
  424272:	or     al,BYTE PTR [rax]
  424274:	rex.WRX
  424275:	gs js  0x4242ec
  424278:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
  42427c:	outs   dx,BYTE PTR gs:[rsi]
  42427e:	and    BYTE PTR [rcx+0x73],ch
  424281:	add    BYTE PTR [rbx+0x68],dl
  424284:	imul   esp,DWORD PTR [rsi+0x74],0x676e69
  42428b:	add    BYTE PTR [rax],al
  42428d:	add    BYTE PTR [rax],al
  42428f:	add    BYTE PTR [rdx+0x65],dl
  424292:	fs jne 0x4242f8
  424295:	imul   ebp,DWORD PTR [rsi+0x67],0x61747320
  42429c:	movsxd ebp,DWORD PTR [rbx+0x20]
  42429f:	(bad)  
  4242a0:	jns    0x4242c2
  4242a2:	jb     0x424319
  4242a4:	ins    BYTE PTR es:[rdi],dx
  4242a5:	and    BYTE PTR gs:[rip+0x6c282064],ah        # 0x6c6a6310
  4242ac:	imul   ebp,DWORD PTR [rsi+0x65],0x756c2520
  4242b3:	sub    DWORD PTR [rdx],edi
  4242b5:	or     al,BYTE PTR [rax]
  4242b7:	and    BYTE PTR [rax],ah
  4242b9:	and    BYTE PTR ds:0x203d2064,ah
  4242c0:	add    BYTE PTR [rdi+0x72],al
  4242c3:	outs   dx,DWORD PTR ds:[rsi]
  4242c4:	jne    0x424336
  4242c6:	and    BYTE PTR [rbx+0x70],dh
  4242c9:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4242cd:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  4242d4:	add    BYTE PTR [rax],al
  4242d6:	add    BYTE PTR [rax],al
  4242d8:	rex.R jne 0x42434b
  4242db:	ins    BYTE PTR es:[rdi],dx
  4242dc:	imul   esp,DWORD PTR [rbx+0x61],0x67206574
  4242e3:	jb     0x424354
  4242e5:	jne    0x424357
  4242e7:	and    BYTE PTR [rsi+0x61],ch
  4242ea:	ins    DWORD PTR es:[rdi],dx
  4242eb:	and    BYTE PTR gs:[rcx+0x6e],ch
  4242ef:	and    BYTE PTR [rbx+0x61],dh
  4242f2:	ins    DWORD PTR es:[rdi],dx
  4242f3:	and    BYTE PTR gs:[rbx+0x63],dh
  4242f7:	outs   dx,DWORD PTR ds:[rsi]
  4242f8:	jo     0x42435f
  4242fa:	cmp    ah,BYTE PTR [rax]
  4242fc:	and    eax,0x64000073
  424301:	jne    0x424373
  424303:	ins    BYTE PTR es:[rdi],dx
  424304:	imul   esp,DWORD PTR [rbx+0x61],0x67206574
  42430b:	jb     0x42437c
  42430d:	jne    0x42437f
  42430f:	and    BYTE PTR [rbp+riz*2+0x63],ah
  424313:	ins    BYTE PTR es:[rdi],dx
  424314:	(bad)  
  424315:	jb     0x424378
  424317:	je     0x424382
  424319:	outs   dx,DWORD PTR ds:[rsi]
  42431a:	outs   dx,BYTE PTR ds:[rsi]
  42431b:	and    BYTE PTR [rdi+0x69],dh
  42431e:	je     0x424388
  424320:	imul   ebp,DWORD PTR [rsi+0x20],0x65726170
  424327:	outs   dx,BYTE PTR ds:[rsi]
  424328:	je     0x42434a
  42432a:	addr32 jb 0x42439c
  42432d:	jne    0x42439f
  42432f:	and    BYTE PTR [rsi+0x6f],ah
  424332:	jb     0x424354
  424334:	and    eax,0x79540073
  424339:	jo     0x4243a0
  42433b:	and    BYTE PTR [rbx+0x70],dh
  42433e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  424342:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  424349:	add    BYTE PTR [rax],al
  42434b:	add    BYTE PTR [rax],al
  42434d:	add    BYTE PTR [rax],al
  42434f:	add    BYTE PTR [rbp+rsi*2+0x70],ah
  424353:	ins    BYTE PTR es:[rdi],dx
  424354:	imul   esp,DWORD PTR [rbx+0x61],0x74206574
  42435b:	jns    0x4243cd
  42435d:	and    BYTE PTR gs:[rbp+riz*2+0x63],ah
  424362:	ins    BYTE PTR es:[rdi],dx
  424363:	(bad)  
  424364:	jb     0x4243c7
  424366:	je     0x4243d1
  424368:	outs   dx,DWORD PTR ds:[rsi]
  424369:	outs   dx,BYTE PTR ds:[rsi]
  42436a:	and    BYTE PTR [rsi+0x6f],ah
  42436d:	jb     0x42438f
  42436f:	and    eax,0x69650073
  424374:	fs sub eax,0x6275733e
  42437a:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  42437e:	jae    0x4243a0
  424380:	cmp    eax,0x434e203d
  424385:	pop    rdi
  424386:	rex.RB
  424387:	rex.XB
  424388:	rex.WRXB
  424389:	rex.WRX push rbx
  42438b:	push   rsp
  42438c:	add    BYTE PTR [rax],al
  42438e:	add    BYTE PTR [rax],al
  424390:	fs jne 0x424403
  424393:	ins    BYTE PTR es:[rdi],dx
  424394:	imul   esp,DWORD PTR [rbx+0x61],0x65206574
  42439b:	outs   dx,BYTE PTR ds:[rsi]
  42439c:	jne    0x42440b
  42439e:	and    BYTE PTR [rbp+riz*2+0x63],ah
  4243a2:	ins    BYTE PTR es:[rdi],dx
  4243a3:	(bad)  
  4243a4:	jb     0x424407
  4243a6:	je     0x424411
  4243a8:	outs   dx,DWORD PTR ds:[rsi]
  4243a9:	outs   dx,BYTE PTR ds:[rsi]
  4243aa:	and    BYTE PTR [rsi+0x6f],ah
  4243ad:	jb     0x4243cf
  4243af:	and    eax,0x656e0073
  4243b4:	je     0x4243f9
  4243b6:	rex.R
  4243b7:	rex.RX xor al,0x20
  4243ba:	je     0x424435
  4243bc:	jo     0x424423
  4243be:	cmp    ah,BYTE PTR [rax]
  4243c0:	rex.WRXB push r8
  4243c2:	push   r9
  4243c4:	push   rbp
  4243c5:	add    BYTE PTR [r14+0x65],r13b
  4243c9:	je     0x42440e
  4243cb:	rex.R
  4243cc:	rex.RX xor al,0x20
  4243cf:	je     0x42444a
  4243d1:	jo     0x424438
  4243d3:	cmp    ah,BYTE PTR [rax]
  4243d5:	push   rsi
  4243d6:	rex.WR
  4243d7:	rex.RB
  4243d8:	rex.WRX add BYTE PTR [rsi+0x65],r13b
  4243dc:	je     0x424421
  4243de:	rex.R
  4243df:	rex.RX xor al,0x20
  4243e2:	je     0x42445d
  4243e4:	jo     0x42444b
  4243e6:	cmp    ah,BYTE PTR [rax]
  4243e8:	rex.XB
  4243e9:	rex.WRXB
  4243ea:	rex.WRB push r8
  4243ec:	rex.WRXB push r13
  4243ee:	rex.WRX
  4243ef:	add    BYTE PTR [rax],r8b
  4243f2:	add    BYTE PTR [rax],al
  4243f4:	add    BYTE PTR [rax],al
  4243f6:	add    BYTE PTR [rax],al
  4243f8:	fs jne 0x42446b
  4243fb:	ins    BYTE PTR es:[rdi],dx
  4243fc:	imul   esp,DWORD PTR [rbx+0x61],0x66206574
  424403:	imul   esp,DWORD PTR [rbp+0x6c],0x65642064
  42440a:	movsxd ebp,DWORD PTR [rcx+riz*2+0x72]
  42440e:	(bad)  
  42440f:	je     0x42447a
  424411:	outs   dx,DWORD PTR ds:[rsi]
  424412:	outs   dx,BYTE PTR ds:[rsi]
  424413:	and    BYTE PTR [rsi+0x6f],ah
  424416:	jb     0x424438
  424418:	and    eax,0x656e0073
  42441d:	je     0x424462
  42441f:	rex.R
  424420:	rex.RX xor al,0x20
  424423:	je     0x42449e
  424425:	jo     0x42448c
  424427:	cmp    ah,BYTE PTR [rax]
  424429:	push   rbp
  42442a:	rex.X pop rcx
  42442c:	push   rsp
  42442d:	add    BYTE PTR [r14+0x65],r13b
  424431:	je     0x424476
  424433:	rex.R
  424434:	rex.RX xor al,0x20
  424437:	je     0x4244b2
  424439:	jo     0x4244a0
  42443b:	cmp    ah,BYTE PTR [rax]
  42443d:	push   rbp
  42443e:	push   rbx
  42443f:	rex.W
  424440:	rex.WRXB push r10
  424442:	push   rsp
  424443:	add    BYTE PTR [rsi+0x65],ch
  424446:	je     0x42448b
  424448:	rex.R
  424449:	rex.RX xor al,0x20
  42444c:	je     0x4244c7
  42444e:	jo     0x4244b5
  424450:	cmp    ah,BYTE PTR [rax]
  424452:	push   rbp
  424453:	rex.WB
  424454:	rex.WRX push rsp
  424456:	add    BYTE PTR [rsi+0x65],ch
  424459:	je     0x42449e
  42445b:	rex.R
  42445c:	rex.RX xor al,0x20
  42445f:	je     0x4244da
  424461:	jo     0x4244c8
  424463:	cmp    ah,BYTE PTR [rax]
  424465:	rex.WB
  424466:	rex.WRX push rsp
  424468:	ss xor al,0x0
  42446b:	outs   dx,BYTE PTR ds:[rsi]
  42446c:	gs je  0x4244b2
  42446f:	rex.R
  424470:	rex.RX xor al,0x20
  424473:	je     0x4244ee
  424475:	jo     0x4244dc
  424477:	cmp    ah,BYTE PTR [rax]
  424479:	push   rbp
  42447a:	rex.WB
  42447b:	rex.WRX push rsp
  42447d:	ss xor al,0x0
  424480:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  424488:	outs   dx,BYTE PTR ds:[rsi]
  424489:	and    BYTE PTR [rbx+0x69],dh
  42448c:	jp     0x4244f3
  42448e:	and    BYTE PTR [rbp+0x75],ch
  424491:	jae    0x424507
  424493:	and    BYTE PTR [rdx+0x65],ah
  424496:	and    BYTE PTR [rax+0x6f],dh
  424499:	jae    0x424504
  42449b:	je     0x424506
  42449d:	jbe    0x424504
  42449f:	add    BYTE PTR [rcx+rbp*2+0x6d],ah
  4244a3:	outs   dx,BYTE PTR gs:[rsi]
  4244a5:	jae    0x424510
  4244a7:	outs   dx,DWORD PTR ds:[rsi]
  4244a8:	outs   dx,BYTE PTR ds:[rsi]
  4244a9:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  4244ad:	addr32 je 0x424518
  4244b0:	and    BYTE PTR [rbp+0x75],ch
  4244b3:	jae    0x424529
  4244b5:	and    BYTE PTR [rdx+0x65],ah
  4244b8:	and    BYTE PTR [rax+0x6f],dh
  4244bb:	jae    0x424526
  4244bd:	je     0x424528
  4244bf:	jbe    0x424526
  4244c1:	add    BYTE PTR [rcx+rbp*2+0x6d],ah
  4244c5:	outs   dx,BYTE PTR gs:[rsi]
  4244c7:	jae    0x424532
  4244c9:	outs   dx,DWORD PTR ds:[rsi]
  4244ca:	outs   dx,BYTE PTR ds:[rsi]
  4244cb:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
  4244cf:	and    BYTE PTR [rcx+riz*2+0x72],ch
  4244d3:	add    BYTE PTR gs:[eax],al
  4244d7:	add    BYTE PTR [rcx+rbp*2+0x6d],ah
  4244db:	outs   dx,BYTE PTR gs:[rsi]
  4244dd:	jae    0x424548
  4244df:	outs   dx,DWORD PTR ds:[rsi]
  4244e0:	outs   dx,BYTE PTR ds:[rsi]
  4244e1:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  4244e5:	addr32 je 0x424550
  4244e8:	and    BYTE PTR [rbp+0x75],ch
  4244eb:	jae    0x424561
  4244ed:	and    BYTE PTR [rdx+0x65],ah
  4244f0:	and    BYTE PTR [rcx+0x6e],ah
  4244f3:	and    BYTE PTR [rcx+0x6e],ch
  4244f6:	je     0x42455d
  4244f8:	addr32 gs jb 0x4244fc
  4244fc:	add    BYTE PTR [rax],al
  4244fe:	add    BYTE PTR [rax],al
  424500:	rex.R jne 0x424573
  424503:	ins    BYTE PTR es:[rdi],dx
  424504:	imul   esp,DWORD PTR [rbx+0x61],0x64206574
  42450b:	imul   ebp,DWORD PTR [rbp+0x65],0x6f69736e
  424512:	outs   dx,BYTE PTR ds:[rsi]
  424513:	and    BYTE PTR [rbp+riz*2+0x63],ah
  424517:	ins    BYTE PTR es:[rdi],dx
  424518:	(bad)  
  424519:	jb     0x42457c
  42451b:	je     0x424586
  42451d:	outs   dx,DWORD PTR ds:[rsi]
  42451e:	outs   dx,BYTE PTR ds:[rsi]
  42451f:	and    BYTE PTR [rsi+0x6f],ah
  424522:	jb     0x424544
  424524:	and    eax,0x44000073
  424529:	jne    0x42459b
  42452b:	ins    BYTE PTR es:[rdi],dx
  42452c:	imul   esp,DWORD PTR [rbx+0x61],0x76206574
  424533:	(bad)  
  424534:	jb     0x42459f
  424536:	(bad)  
  424537:	(bad)  
  424538:	ins    BYTE PTR es:[rdi],dx
  424539:	and    BYTE PTR gs:[rbp+riz*2+0x63],ah
  42453e:	ins    BYTE PTR es:[rdi],dx
  42453f:	(bad)  
  424540:	jb     0x4245a3
  424542:	je     0x4245ad
  424544:	outs   dx,DWORD PTR ds:[rsi]
  424545:	outs   dx,BYTE PTR ds:[rsi]
  424546:	and    BYTE PTR [rsi+0x6f],ah
  424549:	jb     0x42456b
  42454b:	and    eax,0x73250073
  424550:	and    BYTE PTR [rax+0x61],ch
  424553:	jae    0x424575
  424555:	je     0x4245c6
  424557:	outs   dx,DWORD PTR ds:[rsi]
  424558:	and    BYTE PTR [rbp+0x61],ch
  42455b:	outs   dx,BYTE PTR ds:[rsi]
  42455c:	jns    0x42457e
  42455e:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  424566:	outs   dx,BYTE PTR ds:[rsi]
  424567:	jae    0x424569
  424569:	add    BYTE PTR [rax],al
  42456b:	add    BYTE PTR [rax],al
  42456d:	add    BYTE PTR [rax],al
  42456f:	add    BYTE PTR [rbp+0x6e],dl
  424572:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  42457a:	outs   dx,DWORD PTR ds:[rsi]
  42457b:	jb     0x42459d
  42457d:	outs   dx,WORD PTR ds:[rsi]
  42457f:	jb     0x4245f8
  424581:	(bad)  
  424582:	jb     0x4245e8
  424584:	and    BYTE PTR [rdx+0x65],dh
  424587:	data16 gs jb 0x4245f0
  42458b:	outs   dx,BYTE PTR ds:[rsi]
  42458c:	movsxd esp,DWORD PTR [rbp+0x64]
  42458f:	and    BYTE PTR [rcx+rbp*2+0x6d],ah
  424593:	outs   dx,BYTE PTR gs:[rsi]
  424595:	jae    0x424600
  424597:	outs   dx,DWORD PTR ds:[rsi]
  424598:	outs   dx,BYTE PTR ds:[rsi]
  424599:	cmp    ah,BYTE PTR [rax]
  42459b:	and    eax,0x6f630073
  4245a0:	outs   dx,BYTE PTR ds:[rsi]
  4245a1:	jae    0x424617
  4245a3:	and    eax,0x75
  4245a8:	imul   sp,WORD PTR [rbp+0x6c],0x2064
  4245ae:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  4245b6:	outs   dx,BYTE PTR ds:[rsi]
  4245b7:	and    BYTE PTR [rbp+0x75],ch
  4245ba:	jae    0x424630
  4245bc:	and    BYTE PTR [rdx+0x65],ah
  4245bf:	and    BYTE PTR [rax+0x6f],dh
  4245c2:	jae    0x42462d
  4245c4:	je     0x42462f
  4245c6:	jbe    0x42462d
  4245c8:	add    BYTE PTR [rbx+0x6f],ah
  4245cb:	outs   dx,BYTE PTR ds:[rsi]
  4245cc:	jae    0x424642
  4245ce:	and    eax,0x64
  4245d3:	add    BYTE PTR [rax],al
  4245d5:	add    BYTE PTR [rax],al
  4245d7:	add    BYTE PTR [rbp+0x6e],dl
  4245da:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  4245e2:	outs   dx,DWORD PTR ds:[rsi]
  4245e3:	jb     0x424605
  4245e5:	outs   dx,WORD PTR ds:[rsi]
  4245e7:	jb     0x424660
  4245e9:	(bad)  
  4245ea:	jb     0x424650
  4245ec:	and    BYTE PTR [rdx+0x65],dh
  4245ef:	data16 gs jb 0x424658
  4245f3:	outs   dx,BYTE PTR ds:[rsi]
  4245f4:	movsxd esp,DWORD PTR [rbp+0x64]
  4245f7:	and    BYTE PTR [rsi+0x61],dh
  4245fa:	jb     0x424665
  4245fc:	(bad)  
  4245fd:	(bad)  
  4245fe:	ins    BYTE PTR es:[rdi],dx
  4245ff:	cmp    ah,BYTE PTR gs:[rax]
  424602:	and    eax,0x73
  424607:	add    BYTE PTR [rbp+0x6e],dl
  42460a:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  424612:	outs   dx,DWORD PTR ds:[rsi]
  424613:	jb     0x424635
  424615:	outs   dx,WORD PTR ds:[rsi]
  424617:	jb     0x424690
  424619:	(bad)  
  42461a:	jb     0x424680
  42461c:	and    BYTE PTR [rdx+0x65],dh
  42461f:	data16 gs jb 0x424688
  424623:	outs   dx,BYTE PTR ds:[rsi]
  424624:	movsxd esp,DWORD PTR [rbp+0x64]
  424627:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42462b:	cmp    ah,BYTE PTR gs:[rax]
  42462e:	and    eax,0x6e550073
  424633:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  42463b:	outs   dx,BYTE PTR ds:[rsi]
  42463c:	(bad)  
  42463d:	ins    DWORD PTR es:[rdi],dx
  42463e:	and    BYTE PTR gs:[rax],ch
  424641:	ins    BYTE PTR es:[rdi],dx
  424642:	imul   ebp,DWORD PTR [rsi+0x65],0x29642520
  424649:	cmp    ah,BYTE PTR [rax]
  42464b:	and    eax,0x6f440073
  424650:	jne    0x4246b4
  424652:	ins    BYTE PTR es:[rdi],dx
  424653:	jns    0x424675
  424655:	je     0x4246d0
  424657:	jo     0x4246be
  424659:	and    BYTE PTR fs:[rcx+0x74],ah
  42465d:	je     0x4246d1
  42465f:	imul   esp,DWORD PTR [rdx+0x75],0x203a6574
  424666:	and    eax,0x73
  42466b:	add    BYTE PTR [rax],al
  42466d:	add    BYTE PTR [rax],al
  42466f:	add    BYTE PTR [rcx+0x74],al
  424672:	je     0x4246e6
  424674:	imul   esp,DWORD PTR [rdx+0x75],0x70206574
  42467b:	jb     0x4246e2
  42467d:	imul   di,WORD PTR [rax+0x20],0x6f6e
  424683:	je     0x4246a5
  424685:	(bad)  
  424686:	and    BYTE PTR [rsi+0x61],dh
  424689:	jb     0x4246f4
  42468b:	(bad)  
  42468c:	(bad)  
  42468d:	ins    BYTE PTR es:[rdi],dx
  42468e:	and    BYTE PTR gs:[rdi+0x72],ch
  424692:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  424696:	cmp    ah,BYTE PTR gs:[rax]
  424699:	and    eax,0x6e450073
  42469e:	jne    0x42470d
  4246a0:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  4246a4:	add    BYTE PTR gs:[rip+0x2424203e],ch        # 0x246666e9
  4246ab:	and    BYTE PTR [rip+0x72724500],bh        # 0x72b48bb1
  4246b1:	outs   dx,DWORD PTR ds:[rsi]
  4246b2:	jb     0x4246ee
  4246b4:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4246b8:	movsxd esp,DWORD PTR [rcx+0x72]
  4246bb:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x72724500
  4246c3:	outs   dx,DWORD PTR ds:[rsi]
  4246c4:	jb     0x424700
  4246c6:	and    BYTE PTR [rax+0x6f],dh
  4246c9:	jo     0x42473b
  4246cb:	imul   ebp,DWORD PTR [rsi+0x67],0x6d656d00
  4246d2:	outs   dx,DWORD PTR ds:[rsi]
  4246d3:	jb     0x42474e
  4246d5:	and    BYTE PTR [rbp+0x78],ah
  4246d8:	push   0x74737561
  4246dd:	gs add BYTE PTR fs:[rbx+0x6c],al
  4246e2:	gs (bad) 
  4246e4:	outs   dx,BYTE PTR ds:[rsi]
  4246e5:	jne    0x424757
  4246e7:	cmp    ah,BYTE PTR [rax]
  4246e9:	imul   esi,DWORD PTR fs:[rbx+0x63],0x69647261
  4246f1:	outs   dx,BYTE PTR ds:[rsi]
  4246f2:	and    BYTE PTR [edi+ebp*2+0x6f],ch
  4246f7:	imul   esp,DWORD PTR [rcx+0x68],0x65
  4246fb:	(bad)  
  4246fc:	add    BYTE PTR fs:[rbx+0x6c],al
  424700:	gs (bad) 
  424702:	outs   dx,BYTE PTR ds:[rsi]
  424703:	jne    0x424775
  424705:	cmp    ah,BYTE PTR [rax]
  424707:	jo     0x424778
  424709:	jo     0x42477b
  42470b:	imul   ebp,DWORD PTR [rsi+0x67],0xddf00000
  424712:	(bad)  
  424713:	push   rax
  424715:	(bad)  
  424717:	dec    DWORD PTR [rdi+0x37fffef0]
  42471d:	lock (bad) 
  42471f:	push   rax
  424721:	(bad)  
  424723:	push   rax
  424725:	(bad)  
  424727:	push   rax
  424729:	(bad)  
  42472b:	push   rax
  42472d:	(bad)  
  42472f:	push   QWORD PTR [rdi-0x1b]
  424732:	(bad)  
  424733:	inc    DWORD PTR [rdx]
  424735:	clc    
  424736:	(bad)  
  424737:	push   rax
  424739:	(bad)  
  42473b:	push   rax
  42473d:	(bad)  
  42473f:	push   rax
  424741:	(bad)  
  424743:	push   rcx
  424745:	idiv   esi
  424747:	push   rax
  424749:	(bad)  
  42474b:	push   rax
  42474d:	(bad)  
  42474f:	(bad)  
  424750:	mov    ebx,0xf0fffef7
  424755:	(bad)  
  424757:	push   rax
  424759:	(bad)  
  42475b:	push   rax
  42475d:	(bad)  
  42475f:	push   rax
  424761:	(bad)  
  424763:	push   rax
  424765:	(bad)  
  424767:	push   rax
  424769:	(bad)  
  42476b:	push   rax
  42476d:	(bad)  
  42476f:	push   rax
  424771:	(bad)  
  424773:	(bad)  
  424774:	ds idiv dh
  424777:	call   QWORD PTR [rsi]
  424779:	idiv   dh
  42477b:	call   FWORD PTR [rbx+0x46fffef5]
  424781:	cmc    
  424782:	(bad)  
  424783:	(bad)  
  424784:	call   0xffffffff8142467d
  424789:	hlt    
  42478a:	(bad)  
  42478b:	(bad)  
  42478c:	fpatan 
  42478e:	(bad)  
  42478f:	dec    eax
  424791:	repz (bad) 
  424793:	push   QWORD PTR [rdi+0x5dfffef3]
  424799:	repz (bad) 
  42479b:	inc    DWORD PTR [rbp-0xd]
  42479e:	(bad)  
  42479f:	jmp    FWORD PTR [rip+0x15fffef3]        # 0x16424698
  4247a5:	repz (bad) 
  4247a7:	(bad)  
  4247a8:	std    
  4247a9:	repnz (bad) 
  4247ab:	jmp    rbp
  4247ad:	repnz (bad) 
  4247af:	dec    ebp
  4247b1:	repnz (bad) 
  4247b3:	jmp    FWORD PTR [rcx-0x7a00010e]
  4247b9:	repnz (bad) 
  4247bb:	jmp    QWORD PTR [rcx-0xe]
  4247be:	(bad)  
  4247bf:	(bad)  
  4247c0:	cmp    eax,0x19fffef2
  4247c5:	repnz (bad) 
  4247c7:	push   rax
  4247c9:	(bad)  
  4247cb:	push   rax
  4247cd:	(bad)  
  4247cf:	push   rax
  4247d1:	(bad)  
  4247d3:	push   rax
  4247d5:	(bad)  
  4247d7:	push   rax
  4247d9:	(bad)  
  4247db:	push   rax
  4247dd:	(bad)  
  4247df:	push   rax
  4247e1:	(bad)  
  4247e3:	push   rax
  4247e5:	(bad)  
  4247e7:	push   rax
  4247e9:	(bad)  
  4247eb:	jmp    FWORD PTR [rdi]
  4247ed:	icebp  
  4247ee:	(bad)  
  4247ef:	dec    DWORD PTR [rdi]
  4247f1:	icebp  
  4247f2:	(bad)  
  4247f3:	jmp    FWORD PTR [rdx-0x23]
  4247f6:	(bad)  
  4247f7:	dec    DWORD PTR [rax+0x41fffef9]
  4247fd:	stc    
  4247fe:	(bad)  
  4247ff:	push   rax
  424801:	(bad)  
  424803:	push   rax
  424805:	(bad)  
  424807:	push   rax
  424809:	(bad)  
  42480b:	push   rax
  42480d:	(bad)  
  42480f:	push   rax
  424811:	(bad)  
  424813:	push   rax
  424815:	(bad)  
  424817:	push   rax
  424819:	(bad)  
  42481b:	call   QWORD PTR [rbx]
  42481d:	clc    
  42481e:	(bad)  
  42481f:	call   rbp
  424821:	cli    
  424822:	(bad)  
  424823:	push   QWORD PTR [rdx+rdi*8-0x6340002]
  42482a:	(bad)  
  42482b:	jmp    FWORD PTR [rcx+rdi*8-0xf010002]
  424832:	(bad)  
  424833:	call   rsi
  424835:	lock (bad) 
  424837:	push   QWORD PTR [rbp-0x2a000110]
  42483d:	in     eax,dx
  42483e:	(bad)  
  42483f:	jmp    FWORD PTR [rbp-0x73000113]
  424845:	in     eax,dx
  424846:	(bad)  
  424847:	call   QWORD PTR [rbx]
  424849:	jmp    0xffffffffe937484c
  42484e:	(bad)  
  42484f:	jmp    rbx
  424851:	call   0xffffffffe8fe4854
  424856:	(bad)  
  424857:	call   FWORD PTR [rcx-0x15]
  42485a:	(bad)  
  42485b:	jmp    FWORD PTR [rbp-0x1000116]
  424861:	(bad)  
  424862:	(bad)  
  424863:	call   QWORD PTR [rdx+0x77fffeea]
  424869:	(bad)  
  42486a:	(bad)  
  42486b:	dec    DWORD PTR [rsi-0x16]
  42486e:	(bad)  
  42486f:	(bad)  
  424870:	cmp    eax,0xf0fffeea
  424875:	(bad)  
  424877:	push   rax
  424879:	(bad)  
  42487b:	call   QWORD PTR [rbx+0x59fffee8]
  424881:	call   0xffffffffe85a4884
  424886:	(bad)  
  424887:	(bad)  
  424888:	in     al,dx
  424889:	out    0xfe,eax
  42488b:	(bad)  
  42488c:	mov    esp,0x92fffee7
  424891:	out    0xfe,eax
  424893:	jmp    QWORD PTR [rdi-0x19]
  424896:	(bad)  
  424897:	(bad)  
  424898:	cmp    eax,0x13fffee7
  42489d:	out    0xfe,eax
  42489f:	(bad)  
  4248a0:	jmp    0xffffffffc042478b
  4248a5:	out    0xfe,al
  4248a7:	call   QWORD PTR [rbp+0x6efffee6]
  4248ad:	out    0xfe,al
  4248af:	jmp    FWORD PTR [rip+0x7fffee6]        # 0x842479b
  4248b5:	out    0xfe,al
  4248b7:	push   rax
  4248b9:	(bad)  
  4248bb:	push   rax
  4248bd:	(bad)  
  4248bf:	push   rax
  4248c1:	(bad)  
  4248c3:	push   rax
  4248c5:	(bad)  
  4248c7:	push   rax
  4248c9:	(bad)  
  4248cb:	dec    DWORD PTR [rsi+0x7dfffeee]
  4248d1:	out    dx,al
  4248d2:	(bad)  
  4248d3:	jmp    FWORD PTR [rsi+rbp*8-0x2]
  4248d7:	call   FWORD PTR [rax-0x12]
  4248da:	(bad)  
  4248db:	(bad)  
  4248dc:	cmp    esi,ebp
  4248de:	(bad)  
  4248df:	call   FWORD PTR [rdx]
  4248e1:	out    dx,al
  4248e2:	(bad)  
  4248e3:	inc    DWORD PTR [rsi-0x13]
  4248e6:	(bad)  
  4248e7:	call   QWORD PTR [rdi]
  4248e9:	in     eax,dx
  4248ea:	(bad)  
  4248eb:	call   rcx
  4248ed:	in     al,dx
  4248ee:	(bad)  
  4248ef:	jmp    QWORD PTR [rdx+0x73fffeec]
  4248f5:	in     al,dx
  4248f6:	(bad)  
  4248f7:	inc    DWORD PTR [rsp+rbp*8-0x2]
  4248fb:	(bad)  
  4248fc:	(bad)  
  4248fd:	jmp    0x4248fd
  4248ff:	push   rax
  424901:	(bad)  
  424903:	jmp    FWORD PTR [rcx-0x2000115]
  424909:	cli    
  42490a:	(bad)  
  42490b:	(bad)  
  42490c:	sti    
  42490d:	in     eax,dx
  42490e:	(bad)  
  42490f:	call   FWORD PTR [rax]
  424911:	lock (bad) 
  424913:	(bad)  
  424914:	jmp    0xffffffffbb424808
  424919:	out    dx,eax
  42491a:	(bad)  
  42491b:	dec    DWORD PTR [rbx+0x5cfffeef]
  424921:	out    dx,eax
  424922:	(bad)  
  424923:	jmp    FWORD PTR [rip+0xfffffffffefffeef]        # 0xffffffffff424818
  424929:	out    dx,al
  42492a:	(bad)  
  42492b:	dec    edi
  42492d:	out    dx,al
  42492e:	(bad)  
  42492f:	jmp    QWORD PTR [rbp-0x4]
  424932:	(bad)  
  424933:	jmp    QWORD PTR [rax-0x27000112]
  424939:	in     eax,0xfe
  42493b:	(bad)  
  42493c:	jp     0x424929
  42493e:	(bad)  
  42493f:	dec    DWORD PTR [rsi]
  424941:	(bad)  
  424942:	(bad)  
  424943:	jmp    FWORD PTR [rdx-0x36000108]
  424949:	clc    
  42494a:	(bad)  
  42494b:	jmp    rbx
  42494d:	clc    
  42494e:	(bad)  
  42494f:	call   QWORD PTR [rdx]
  424951:	stc    
  424952:	(bad)  
  424953:	inc    DWORD PTR [rsi-0xf]
  424956:	(bad)  
  424957:	push   QWORD PTR [rbp-0xf]
  42495a:	(bad)  
  42495b:	jmp    QWORD PTR [rcx+rsi*8-0xe2c0002]
  424962:	(bad)  
  424963:	jmp    QWORD PTR [rdi+rsi*8-0x2]
  424967:	jmp    FWORD PTR [rdx+0xfffef7]
	...
  424981:	add    BYTE PTR [rcx],al
  424983:	add    BYTE PTR [rcx],al
  424985:	add    BYTE PTR [rcx],al
  424987:	add    BYTE PTR [rcx],al
  424989:	add    BYTE PTR [rcx],al
  42498b:	add    BYTE PTR [rcx],al
  42498d:	add    BYTE PTR [rcx],al
  42498f:	add    BYTE PTR [rcx],al
  424991:	add    BYTE PTR [rcx],al
  424993:	add    BYTE PTR [rcx],al
  424995:	add    BYTE PTR [rcx],al
  424997:	add    BYTE PTR [rcx],al
  424999:	add    BYTE PTR [rcx],al
  42499b:	add    BYTE PTR [rcx],al
  42499d:	add    BYTE PTR [rcx],al
  42499f:	add    BYTE PTR [rcx],al
  4249a1:	add    BYTE PTR [rcx],al
  4249a3:	add    BYTE PTR [rcx],al
  4249a5:	add    BYTE PTR [rcx],al
  4249a7:	add    BYTE PTR [rcx],al
  4249a9:	add    BYTE PTR [rcx],al
  4249ab:	add    BYTE PTR [rcx],al
  4249ad:	add    BYTE PTR [rcx],al
  4249af:	add    BYTE PTR [rcx],al
  4249b1:	add    BYTE PTR [rcx],al
  4249b3:	add    BYTE PTR [rcx],al
  4249b5:	add    BYTE PTR [rcx],al
  4249b7:	add    BYTE PTR [rcx],al
  4249b9:	add    BYTE PTR [rcx],al
  4249bb:	add    BYTE PTR [rcx],al
  4249bd:	add    BYTE PTR [rcx],al
  4249bf:	add    BYTE PTR [rcx],al
  4249c1:	add    BYTE PTR [rcx],al
  4249c3:	add    BYTE PTR [rcx],al
  4249c5:	add    BYTE PTR [rcx],al
  4249c7:	add    BYTE PTR [rcx],al
  4249c9:	add    BYTE PTR [rcx],al
  4249cb:	add    BYTE PTR [rcx],al
  4249cd:	add    BYTE PTR [rcx],al
  4249cf:	add    BYTE PTR [rcx],al
  4249d1:	add    BYTE PTR [rcx],al
  4249d3:	add    BYTE PTR [rcx],al
  4249d5:	add    BYTE PTR [rcx],al
  4249d7:	add    BYTE PTR [rcx],al
  4249d9:	add    BYTE PTR [rcx],al
  4249db:	add    BYTE PTR [rcx],al
  4249dd:	add    BYTE PTR [rcx],al
  4249df:	add    BYTE PTR [rcx],al
  4249e1:	add    BYTE PTR [rcx],al
  4249e3:	add    BYTE PTR [rcx],al
  4249e5:	add    BYTE PTR [rcx],al
  4249e7:	add    BYTE PTR [rcx],al
  4249e9:	add    BYTE PTR [rcx],al
  4249eb:	add    BYTE PTR [rcx],al
  4249ed:	add    BYTE PTR [rcx],al
  4249ef:	add    BYTE PTR [rcx],al
  4249f1:	add    BYTE PTR [rcx],al
  4249f3:	add    BYTE PTR [rcx],al
  4249f5:	add    BYTE PTR [rcx],al
  4249f7:	add    BYTE PTR [rcx],al
  4249f9:	add    BYTE PTR [rcx],al
  4249fb:	add    BYTE PTR [rcx],al
  4249fd:	add    BYTE PTR [rcx],al
  4249ff:	add    BYTE PTR [rcx],al
  424a01:	add    BYTE PTR [rcx],al
  424a03:	add    BYTE PTR [rcx],al
  424a05:	add    BYTE PTR [rcx],al
  424a07:	add    BYTE PTR [rcx],cl
  424a09:	add    BYTE PTR [rbx],cl
  424a0b:	add    BYTE PTR [rcx],cl
  424a0d:	add    BYTE PTR [rip+0xd000e00],cl        # 0xd425813
  424a13:	add    BYTE PTR [rip+0xd000d00],cl        # 0xd425719
  424a19:	add    BYTE PTR [rip+0xd000d00],cl        # 0xd42571f
  424a1f:	add    BYTE PTR [rdx],dh
  424a21:	add    BYTE PTR [rcx+rax*1+0x32],ch
  424a25:	add    BYTE PTR [rcx+0x0],dl
  424a28:	push   rcx
  424a29:	add    BYTE PTR [rsi+0x1],bl
  424a2c:	or     eax,0x13000e00
  424a31:	add    BYTE PTR [rbx+0x1],cl
  424a34:	(bad)  
  424a35:	add    BYTE PTR [rax],dl
  424a37:	add    BYTE PTR [rbx],dh
  424a39:	add    dh,al
  424a3b:	add    BYTE PTR [rdx+0x1],cl
  424a3e:	adc    BYTE PTR [rax],al
  424a40:	mov    BYTE PTR [rax],0x2e
  424a43:	add    DWORD PTR [rax+rax*1],edx
  424a46:	sub    eax,0xb012c01
  424a4b:	add    BYTE PTR [rsi],dl
  424a4d:	add    BYTE PTR [rbx],ch
  424a4f:	add    DWORD PTR [rip+0xf000e00],ecx        # 0xf425855
  424a55:	add    BYTE PTR [rdi],cl
  424a57:	add    BYTE PTR [rdi],cl
  424a59:	add    BYTE PTR [rdi],cl
  424a5b:	add    BYTE PTR [rdi],cl
  424a5d:	add    BYTE PTR [rdi],cl
  424a5f:	add    BYTE PTR [rdi],cl
  424a61:	add    BYTE PTR [rax+rax*1],dl
  424a64:	(bad)  
  424a65:	add    BYTE PTR [rbx],dl
  424a67:	add    BYTE PTR [rbx],dl
  424a69:	add    BYTE PTR [rbx],dl
  424a6b:	add    BYTE PTR [rdi],cl
  424a6d:	add    BYTE PTR [rdi],cl
  424a6f:	add    BYTE PTR [rdi],cl
  424a71:	add    BYTE PTR [rax],dl
  424a73:	add    BYTE PTR [rsi],al
  424a75:	add    DWORD PTR [rdi],ecx
  424a77:	add    BYTE PTR [rbx],dh
  424a79:	add    BYTE PTR [rax+rax*1],dl
  424a7c:	adc    al,0x0
  424a7e:	adc    al,0x0
  424a80:	add    eax,0x16001601
  424a85:	add    BYTE PTR [rsi],dl
  424a87:	add    BYTE PTR [rcx+rax*1],al
  424a8a:	(bad)  
  424a8b:	add    BYTE PTR [rcx],bl
  424a8d:	add    BYTE PTR [rbx],al
  424a8f:	add    DWORD PTR [rdi],ecx
  424a91:	add    BYTE PTR [rdi],cl
  424a93:	add    BYTE PTR [rdi],cl
  424a95:	add    BYTE PTR [rdx],al
  424a97:	add    DWORD PTR [rcx],ebx
  424a99:	add    BYTE PTR [rcx],al
  424a9b:	add    esi,edi
  424a9d:	add    BYTE PTR [rdi],cl
  424a9f:	add    ah,bh
  424aa1:	add    bl,bh
  424aa3:	add    cl,dl
  424aa5:	add    BYTE PTR [rdi],dl
  424aa7:	add    BYTE PTR [rax],dl
  424aa9:	add    BYTE PTR [rax],dl
  424aab:	add    BYTE PTR [rax],dl
  424aad:	add    BYTE PTR [rcx],dl
  424aaf:	add    dh,cl
  424ab1:	add    BYTE PTR [rcx],dl
  424ab3:	add    BYTE PTR [rcx],dl
  424ab5:	add    BYTE PTR [rcx],dl
  424ab7:	add    BYTE PTR [rcx],dl
  424ab9:	add    BYTE PTR [rcx],dl
  424abb:	add    BYTE PTR [rcx],dl
  424abd:	add    BYTE PTR [rcx],dl
  424abf:	add    BYTE PTR [rdi],dl
  424ac1:	add    BYTE PTR [rdi],dl
  424ac3:	add    BYTE PTR [rdi],dl
  424ac5:	add    BYTE PTR [rcx],dl
  424ac7:	add    BYTE PTR [rcx+0x0],cl
  424aca:	int    0x0
  424acc:	adc    DWORD PTR [rax],eax
  424ace:	sbb    DWORD PTR [rax],eax
  424ad0:	sbb    DWORD PTR [rax],eax
  424ad2:	sbb    DWORD PTR [rax],eax
  424ad4:	adc    DWORD PTR [rax],eax
  424ad6:	rex.WB add r12b,cl
  424ad9:	add    BYTE PTR [rcx],dl
  424adb:	add    BYTE PTR [rcx+0x0],cl
  424ade:	adc    DWORD PTR [rax],eax
  424ae0:	xchg   esp,eax
  424ae1:	add    BYTE PTR [rcx],dl
  424ae3:	add    bl,cl
  424ae5:	add    BYTE PTR [rax+rax*1+0x110018],dl
  424aec:	rex.WB add BYTE PTR [r8],bl
  424aef:	add    BYTE PTR [rcx],dl
  424af1:	add    dl,cl
  424af3:	add    cl,cl
  424af5:	add    cl,al
  424af7:	add    BYTE PTR [rsi+0x11009500],dl
  424afd:	add    BYTE PTR [rcx+0x0],cl
  424b00:	sbb    BYTE PTR [rax],al
  424b02:	xchg   edx,eax
  424b03:	add    BYTE PTR [rax],bl
  424b05:	add    BYTE PTR [rcx+0x11009400],dl
  424b0b:	add    BYTE PTR [rcx+0x0],cl
  424b0e:	adc    DWORD PTR [rax],eax
  424b10:	adc    eax,0x18001500
  424b15:	add    BYTE PTR [rax+rax*1+0x150015],dl
  424b1c:	adc    eax,0x15001500
  424b21:	add    BYTE PTR [rip+0x1a001500],dl        # 0x1a426027
  424b27:	add    BYTE PTR [rdx],bl
  424b29:	add    BYTE PTR [rdx],bl
  424b2b:	add    BYTE PTR [rdx],bl
  424b2d:	add    BYTE PTR [rdx],bl
  424b2f:	add    BYTE PTR [rdx],bl
  424b31:	add    BYTE PTR [rdx],bl
  424b33:	add    BYTE PTR [rax+rax*1],bl
  424b36:	sbb    BYTE PTR [rax],al
  424b38:	sbb    BYTE PTR [rax],al
  424b3a:	sbb    BYTE PTR [rax],al
  424b3c:	sbb    eax,DWORD PTR [rax]
  424b3e:	sbb    eax,DWORD PTR [rax]
  424b40:	sbb    eax,DWORD PTR [rax]
  424b42:	sbb    eax,DWORD PTR [rax]
  424b44:	and    BYTE PTR [rax],al
  424b46:	nop
  424b47:	add    BYTE PTR [rdi+0x1b001500],cl
  424b4d:	add    BYTE PTR [rbx],bl
  424b4f:	add    BYTE PTR [rsi-0x78ffe300],cl
  424b55:	add    BYTE PTR [rbx-0x7effe500],al
  424b5b:	add    BYTE PTR [rax],ah
  424b5d:	add    BYTE PTR [rbp+0x0],bh
  424b60:	jl     0x424b62
  424b62:	sbb    al,0x0
  424b64:	sbb    eax,0x7a007b00
  424b69:	add    BYTE PTR [rax+rax*1],bl
  424b6c:	sbb    al,0x0
  424b6e:	sbb    al,0x0
  424b70:	sbb    eax,0x4e004f00
  424b75:	add    BYTE PTR [rcx],ah
  424b77:	add    BYTE PTR [rbp+0x0],cl
  424b7a:	and    BYTE PTR [rax],al
  424b7c:	and    BYTE PTR [rax],al
  424b7e:	and    BYTE PTR [rax],al
  424b80:	adc    eax,0x15001500
  424b85:	add    BYTE PTR [rdx],ah
  424b87:	add    BYTE PTR [rip+0x1d001d00],bl        # 0x1d42688d
  424b8d:	add    BYTE PTR [rbx],bl
  424b8f:	add    BYTE PTR [rbx],bl
  424b91:	add    BYTE PTR [rbx],bl
  424b93:	add    BYTE PTR [rsi],bl
  424b95:	add    BYTE PTR [rdi+0x0],al
  424b98:	(bad)  
  424b99:	add    BYTE PTR [rcx],ah
  424b9b:	add    BYTE PTR [rbx],ah
  424b9d:	add    BYTE PTR [rsi+0x0],al
  424ba0:	add    BYTE PTR [r10],r12b
  424ba3:	add    BYTE PTR [rax+rax*1+0x25],al
  424ba7:	add    BYTE PTR [rsi],bl
  424ba9:	add    BYTE PTR [rbx],bh
  424bab:	add    BYTE PTR [rcx],ah
  424bad:	add    BYTE PTR [rcx],ah
  424baf:	add    BYTE PTR [rcx],ah
  424bb1:	add    BYTE PTR [rsi],bl
  424bb3:	add    BYTE PTR [rsi],dh
  424bb5:	add    BYTE PTR [rsi],ah
  424bb7:	add    BYTE PTR [rip+0x22002300],dh        # 0x22426ebd
  424bbd:	add    BYTE PTR [rdx],ah
  424bbf:	add    BYTE PTR [rdx],ah
  424bc1:	add    BYTE PTR [rsi],ah
  424bc3:	add    BYTE PTR [rax+rax*1],ah
  424bc6:	and    eax,0x1e002400
  424bcb:	add    BYTE PTR [rsi],bl
  424bcd:	add    BYTE PTR [rsi],bl
  424bcf:	add    BYTE PTR [rax+rax*1],ah
  424bd2:	and    eax,DWORD PTR [rax]
  424bd4:	and    eax,DWORD PTR [rax]
  424bd6:	and    eax,DWORD PTR [rax]
  424bd8:	and    al,0x0
  424bda:	sub    BYTE PTR [rax],al
  424bdc:	and    eax,0x25002500
  424be1:	add    BYTE PTR [rdi],ah
  424be3:	add    BYTE PTR [rdi],ch
  424be5:	add    BYTE PTR [rsi],ch
  424be7:	add    BYTE PTR [rip+0x26002c00],ch        # 0x264277ed
  424bed:	add    BYTE PTR [rsi],ah
  424bef:	add    BYTE PTR [rsi],ah
  424bf1:	add    BYTE PTR [rdx],ch
  424bf3:	add    BYTE PTR [rdi],ah
  424bf5:	add    BYTE PTR [rdx],ch
  424bf7:	add    BYTE PTR [rbx],ch
  424bf9:	add    BYTE PTR [rax+rax*1],ah
  424bfc:	and    al,0x0
  424bfe:	and    al,0x0
  424c00:	(bad)  
  424c01:	add    BYTE PTR [rdx],dl
  424c03:	add    BYTE PTR [rax+rax*1],cl
  424c06:	(bad)  
  424c07:	add    BYTE PTR [rax],ch
  424c09:	add    BYTE PTR [rdi],ah
  424c0b:	add    BYTE PTR [rsi],al
  424c0d:	add    BYTE PTR [rip+0x28002800],al        # 0x28427413
  424c13:	add    BYTE PTR [rax],ch
  424c15:	add    BYTE PTR [rax+rax*1],al
  424c18:	(bad)  
  424c19:	add    BYTE PTR [rdi],ah
  424c1b:	add    BYTE PTR [rdi],ah
  424c1d:	add    BYTE PTR [rcx],ch
  424c1f:	add    BYTE PTR [rbx],al
  424c21:	add    BYTE PTR [rax],al
  424c23:	add    BYTE PTR [rcx],ch
  424c25:	add    BYTE PTR [rax],al
  424c27:	add    BYTE PTR [rdx],ch
  424c29:	add    BYTE PTR [rdx],ch
  424c2b:	add    BYTE PTR [rdx],ch
  424c2d:	add    BYTE PTR [rax],al
  424c2f:	add    BYTE PTR [rax],al
  424c31:	add    BYTE PTR [rcx],ch
  424c33:	add    BYTE PTR [rax],al
  424c35:	add    BYTE PTR [rcx],ch
  424c37:	add    BYTE PTR [rax],al
  424c39:	add    BYTE PTR [rcx],ch
  424c3b:	add    BYTE PTR [rdx+0x0],al
  424c3e:	add    BYTE PTR [rax],al
  424c40:	add    BYTE PTR [rax],al
  424c42:	add    BYTE PTR [rax],al
  424c44:	sub    DWORD PTR [rax],eax
  424c46:	(bad)  
  424c47:	add    BYTE PTR [rdi],dh
  424c49:	add    BYTE PTR [rdi],dh
  424c4b:	add    BYTE PTR [rdi],dh
  424c4d:	add    BYTE PTR [rdi],dh
  424c4f:	add    BYTE PTR [rdi],dh
  424c51:	add    BYTE PTR [rax],al
  424c53:	add    BYTE PTR [rcx],ch
  424c55:	add    BYTE PTR [rcx],ch
  424c57:	add    BYTE PTR [rcx],ch
  424c59:	add    BYTE PTR [rdx],bh
  424c5b:	add    BYTE PTR [rdx],bh
  424c5d:	add    BYTE PTR [rax],al
  424c5f:	add    BYTE PTR [rax],al
  424c61:	add    BYTE PTR [rdx],bh
  424c63:	add    BYTE PTR [rdx],bh
  424c65:	add    BYTE PTR [rdx],bh
  424c67:	add    BYTE PTR [rdx],bh
  424c69:	add    BYTE PTR [rdx],bh
  424c6b:	add    BYTE PTR [rdx],bh
  424c6d:	add    BYTE PTR [rdx],bh
  424c6f:	add    BYTE PTR [rdx+0x0],al
  424c72:	add    BYTE PTR [rax],al
  424c74:	add    BYTE PTR [rax],al
  424c76:	(bad)  
  424c77:	add    BYTE PTR [rcx],bh
  424c79:	add    BYTE PTR [rax],al
  424c7b:	add    BYTE PTR [rcx],bh
  424c7d:	add    BYTE PTR [rcx],bh
  424c7f:	add    BYTE PTR [rcx],bh
  424c81:	add    BYTE PTR [rcx],bh
  424c83:	add    BYTE PTR [rcx],bh
  424c85:	add    BYTE PTR [rcx],bh
  424c87:	add    BYTE PTR [rcx],bh
  424c89:	add    BYTE PTR [rbx+0x0],cl
  424c8c:	add    BYTE PTR [rax],al
  424c8e:	add    BYTE PTR [rax],al
  424c90:	cmp    DWORD PTR [rax],eax
  424c92:	push   rax
  424c93:	add    BYTE PTR [rax],al
  424c95:	add    BYTE PTR [rcx],bh
  424c97:	add    BYTE PTR [rax],al
  424c99:	add    BYTE PTR [rax],al
  424c9b:	add    BYTE PTR [rax],al
  424c9d:	add    BYTE PTR [rcx],bh
  424c9f:	add    BYTE PTR [rax],al
  424ca1:	add    BYTE PTR [rax],al
  424ca3:	add    BYTE PTR [rcx],bh
  424ca5:	add    BYTE PTR [rdx+0x0],al
  424ca8:	rex.X add BYTE PTR [rdx+0x0],al
	...
  424cb4:	cmp    DWORD PTR [rax],eax
  424cb6:	add    BYTE PTR [rax],al
  424cb8:	add    BYTE PTR [rax],al
  424cba:	cmp    DWORD PTR [rax],eax
  424cbc:	push   rax
  424cbd:	add    BYTE PTR [rax],al
  424cbf:	add    BYTE PTR [rbx+0x0],cl
  424cc2:	rex.WXB add BYTE PTR [r11+0x0],cl
  424cc6:	cmp    DWORD PTR [rax],eax
  424cc8:	push   rax
  424cc9:	add    BYTE PTR [rax+0x0],dl
  424ccc:	push   rax
  424ccd:	add    BYTE PTR [rsi],bh
  424ccf:	add    BYTE PTR [rsi],bh
  424cd1:	add    BYTE PTR [rax],al
  424cd3:	add    BYTE PTR [rcx],bh
  424cd5:	add    BYTE PTR [rsi],bh
  424cd7:	add    BYTE PTR [rsi],bh
  424cd9:	add    BYTE PTR [rsi],bh
  424cdb:	add    BYTE PTR [rsi],bh
  424cdd:	add    BYTE PTR [rsi],bh
  424cdf:	add    BYTE PTR [rsi],bh
  424ce1:	add    BYTE PTR [rsi],bh
  424ce3:	add    BYTE PTR [rbx+0x0],al
  424ce6:	rex.XB add BYTE PTR [r11+0x0],al
  424cea:	rex.XB add BYTE PTR [r11+0x0],al
  424cee:	rex.XB add BYTE PTR [r11+0x0],al
  424cf2:	rex.WR add BYTE PTR [rax+rax*1+0x4c],r9b
  424cf7:	add    BYTE PTR [rax+rax*1+0x4c],cl
  424cfb:	add    BYTE PTR [rdx+0x0],dl
  424cfe:	push   rdx
  424cff:	add    BYTE PTR [rax],al
  424d01:	add    bh,cl
  424d03:	add    BYTE PTR [rbx+0x0],dl
  424d06:	add    BYTE PTR [rax],al
  424d08:	iret   
  424d09:	add    BYTE PTR [rsi+0x0],dl
  424d0c:	add    BYTE PTR [rax],al
  424d0e:	add    BYTE PTR [rax],al
  424d10:	push   rsp
  424d11:	add    BYTE PTR [rax+rax*1+0x0],cl
  424d15:	add    BYTE PTR [rax],al
  424d17:	add    BYTE PTR [rax],al
  424d19:	add    BYTE PTR [rsi+0x0],dl
  424d1c:	push   rdx
  424d1d:	add    BYTE PTR [rax+rax*1+0x52],dl
  424d21:	add    BYTE PTR [rbx+0x0],dl
  424d24:	push   rbp
  424d25:	add    BYTE PTR [rdx+0x0],dl
  424d28:	push   rdi
  424d29:	add    bh,cl
  424d2b:	add    BYTE PTR [rbp+0x0],dl
  424d2e:	add    BYTE PTR [rax],al
  424d30:	add    BYTE PTR [rax],al
  424d32:	add    BYTE PTR [rax],al
  424d34:	push   rdi
  424d35:	add    BYTE PTR [rax+rax*1-0x31],cl
  424d39:	add    BYTE PTR [rbx+0x0],dl
  424d3c:	push   rbx
  424d3d:	add    BYTE PTR [rbx+0x0],dl
  424d40:	push   rdx
  424d41:	add    BYTE PTR [rax+0x0],bl
  424d44:	push   rdx
  424d45:	add    BYTE PTR [rax+rax*1+0x54],dl
  424d49:	add    BYTE PTR [rax+rax*1+0x59],dl
  424d4d:	add    BYTE PTR [rdx+0x0],dl
  424d50:	push   rsi
  424d51:	add    BYTE PTR [rsi+0x0],dl
  424d54:	push   rsi
  424d55:	add    BYTE PTR [rdx+0x0],bl
  424d58:	add    BYTE PTR [rax],al
  424d5a:	pop    rax
  424d5b:	add    BYTE PTR [rcx+0x0],bl
  424d5e:	add    BYTE PTR [rax],al
  424d60:	add    BYTE PTR [rax],al
  424d62:	push   rbp
  424d63:	add    BYTE PTR [rbp+0x0],dl
  424d66:	push   rbp
  424d67:	add    BYTE PTR [rax+rax*1+0x57],cl
  424d6b:	add    BYTE PTR [rdi+0x0],dl
  424d6e:	push   rdi
  424d6f:	add    BYTE PTR [rbx+0x0],bl
  424d72:	add    BYTE PTR [rax],al
  424d74:	add    BYTE PTR [rax],al
  424d76:	add    BYTE PTR [rax],al
  424d78:	pop    rax
  424d79:	add    BYTE PTR [rax+0x0],bl
  424d7c:	pop    rax
  424d7d:	add    BYTE PTR [rax+rax*1+0x0],bl
  424d81:	add    BYTE PTR [rbx+0x0],bl
  424d84:	pop    rbp
  424d85:	add    BYTE PTR [rax],al
  424d87:	add    BYTE PTR [rax],al
  424d89:	add    BYTE PTR [rax+rax*1+0x5a],bl
  424d8d:	add    BYTE PTR [rdx+0x0],bl
  424d90:	pop    rdx
  424d91:	add    BYTE PTR [rcx+0x0],bl
  424d94:	pop    rcx
  424d95:	add    BYTE PTR [rcx+0x0],bl
  424d98:	(bad)  
  424d99:	add    BYTE PTR [rax],al
  424d9b:	add    BYTE PTR [rdx+0x0],ah
  424d9e:	(bad)  
  424d9f:	add    BYTE PTR [rbp+0x0],bl
  424da2:	add    BYTE PTR [rax],al
  424da4:	pop    rdi
  424da5:	add    BYTE PTR [rbx+0x0],bl
  424da8:	pop    rbx
  424da9:	add    BYTE PTR [rbx+0x0],bl
  424dac:	pop    rsi
  424dad:	add    BYTE PTR [rax],al
  424daf:	add    BYTE PTR [rax+0x0],ah
  424db2:	movsxd eax,DWORD PTR [rax]
  424db4:	pop    rsp
  424db5:	add    BYTE PTR [rax+rax*1+0x5c],bl
  424db9:	add    BYTE PTR [rbp+0x0],bl
  424dbc:	pop    rbp
  424dbd:	add    BYTE PTR [rbp+0x0],bl
  424dc0:	pop    rsi
  424dc1:	add    BYTE PTR [rdi+0x0],bl
  424dc4:	pop    rsi
  424dc5:	add    BYTE PTR [rax+0x0],ah
  424dc8:	(bad)  
  424dc9:	add    BYTE PTR [rsi+0x0],bl
  424dcc:	movsxd eax,DWORD PTR [rax]
  424dce:	(bad)  
  424dcf:	add    BYTE PTR [rdx+0x0],ah
  424dd2:	(bad)  
  424dd3:	add    BYTE PTR [rax+0x0],ah
  424dd6:	(bad)  
  424dd7:	add    BYTE PTR [rax+0x0],ah
  424dda:	pop    rdi
  424ddb:	add    BYTE PTR [rdi+0x0],bl
  424dde:	pop    rdi
  424ddf:	add    BYTE PTR [rax+rax*1+0x5e],ah
  424de3:	add    BYTE PTR [rsi+0x0],bl
  424de6:	pop    rsi
  424de7:	add    BYTE PTR [rbx+0x0],ah
  424dea:	movsxd eax,DWORD PTR [rax]
  424dec:	movsxd eax,DWORD PTR [rax]
  424dee:	add    BYTE PTR [rax],al
  424df0:	(bad)  
  424df1:	add    BYTE PTR [rbp+0x0],ah
  424df4:	add    BYTE PTR [rax],al
  424df6:	add    BYTE PTR [rax],al
  424df8:	data16 add BYTE PTR [rax],al
  424dfb:	add    BYTE PTR [rax],al
  424dfd:	add    BYTE PTR [rcx+0x0],ah
  424e00:	(bad)  
  424e01:	add    BYTE PTR [rcx+0x0],ah
  424e04:	add    BYTE PTR [rax],al
  424e06:	add    BYTE PTR [rax],al
  424e08:	add    BYTE PTR fs:[rdi+0x0],ah
  424e0c:	add    BYTE PTR gs:[rax],al
  424e0f:	add    BYTE PTR [rdx+0x0],ch
  424e12:	add    BYTE PTR [rax],al
  424e14:	add    BYTE PTR [rax],al
  424e16:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
  424e1b:	add    BYTE PTR [rax+0x0],ch
  424e1e:	add    BYTE PTR [rax],al
  424e20:	add    BYTE PTR [rax],al
  424e22:	data16 add BYTE PTR [rax],al
  424e25:	add    BYTE PTR [rax],al
  424e27:	add    BYTE PTR [rbp+0x0],ah
  424e2a:	add    BYTE PTR gs:[rbp+0x0],ah
  424e2e:	data16 add BYTE PTR [rsi+0x0],ah
  424e32:	data16 add BYTE PTR [rdi+0x0],ah
  424e36:	ins    DWORD PTR es:[rdi],dx
  424e37:	add    BYTE PTR [rdx+0x0],ch
  424e3a:	push   0x6900
  424e3f:	add    BYTE PTR [rdi+0x0],ah
  424e42:	add    BYTE PTR [edi+0x0],ah
  424e46:	push   0x0
  424e48:	push   0x0
  424e4a:	push   0x0
  424e4c:	imul   eax,DWORD PTR [rax],0x0
  424e4f:	add    BYTE PTR [rax],al
  424e51:	add    BYTE PTR [rax+0x0],ch
  424e54:	push   0x6800
  424e59:	add    BYTE PTR [rcx+0x0],ch
  424e5c:	ins    BYTE PTR es:[rdi],dx
  424e5d:	add    BYTE PTR [rbp+0x0],ch
  424e60:	add    BYTE PTR [rax],al
  424e62:	outs   dx,BYTE PTR ds:[rsi]
  424e63:	add    BYTE PTR [rax],al
  424e65:	add    BYTE PTR [rax],al
  424e67:	add    BYTE PTR [rbx+0x0],ch
  424e6a:	jae    0x424e6c
  424e6c:	ins    DWORD PTR es:[rdi],dx
  424e6d:	add    BYTE PTR [rbp+0x0],ch
  424e70:	ins    DWORD PTR es:[rdi],dx
  424e71:	add    BYTE PTR [rcx+0x0],ch
  424e74:	imul   eax,DWORD PTR [rax],0x6c0069
  424e7a:	outs   dx,BYTE PTR ds:[rsi]
  424e7b:	add    BYTE PTR [rdi+0x0],ch
  424e7e:	add    BYTE PTR [rax],al
  424e80:	outs   dx,DWORD PTR ds:[rsi]
  424e81:	add    BYTE PTR [rbx+0x0],ch
  424e84:	imul   eax,DWORD PTR [rax],0x6b
  424e87:	add    BYTE PTR [rax+0x0],dh
  424e8a:	jae    0x424e8c
  424e8c:	jo     0x424e8e
  424e8e:	jno    0x424e90
  424e90:	add    BYTE PTR [rax],al
  424e92:	ins    BYTE PTR es:[rdi],dx
  424e93:	add    BYTE PTR [rax+rax*1+0x6c],ch
  424e97:	add    BYTE PTR [rsi+0x0],ch
  424e9a:	outs   dx,BYTE PTR ds:[rsi]
  424e9b:	add    BYTE PTR [rsi+0x0],ch
  424e9e:	je     0x424ea0
  424ea0:	jae    0x424ea2
  424ea2:	jae    0x424ea4
  424ea4:	jae    0x424ea6
  424ea6:	jb     0x424ea8
  424ea8:	add    BYTE PTR [rax],al
  424eaa:	add    BYTE PTR [rax],al
  424eac:	jno    0x424eae
  424eae:	jns    0x424eb0
  424eb0:	add    BYTE PTR [rax],al
  424eb2:	outs   dx,DWORD PTR ds:[rsi]
  424eb3:	add    BYTE PTR [rdi+0x0],ch
  424eb6:	outs   dx,DWORD PTR ds:[rsi]
  424eb7:	add    BYTE PTR [rax],al
  424eb9:	add    BYTE PTR [rax],al
  424ebb:	add    BYTE PTR [rsi+0x0],dh
  424ebe:	jo     0x424ec0
  424ec0:	jo     0x424ec2
  424ec2:	jo     0x424ec4
  424ec4:	jno    0x424ec6
  424ec6:	jno    0x424ec8
  424ec8:	jno    0x424eca
  424eca:	jb     0x424ecc
  424ecc:	je     0x424ece
  424ece:	jne    0x424ed0
  424ed0:	add    BYTE PTR [rax],al
  424ed2:	jns    0x424ed4
  424ed4:	je     0x424ed6
  424ed6:	je     0x424ed8
  424ed8:	je     0x424eda
  424eda:	jbe    0x424edc
  424edc:	jb     0x424ede
  424ede:	jb     0x424ee0
  424ee0:	jb     0x424ee2
  424ee2:	ja     0x424ee4
  424ee4:	jns    0x424ee6
  424ee6:	jns    0x424ee8
  424ee8:	jns    0x424eea
  424eea:	jne    0x424eec
  424eec:	js     0x424eee
  424eee:	add    BYTE PTR [rax],al
  424ef0:	add    BYTE PTR [rax],al
  424ef2:	jbe    0x424ef4
  424ef4:	jbe    0x424ef6
  424ef6:	jbe    0x424ef8
  424ef8:	add    BYTE PTR [rax],al
  424efa:	ja     0x424efc
  424efc:	add    BYTE PTR [rax],al
  424efe:	js     0x424f00
  424f00:	(bad)  
  424f01:	add    BYTE PTR [rax],al
  424f03:	add    BYTE PTR [rbp+0x0],dh
  424f06:	jne    0x424f08
  424f08:	jne    0x424f0a
  424f0a:	add    BYTE PTR [rax],al
  424f0c:	(bad)  
  424f0d:	add    BYTE PTR [rdx-0x7dff7e00],al
  424f13:	add    BYTE PTR [rdx+0x77008200],al
  424f19:	add    BYTE PTR [rdi+0x0],dh
  424f1c:	ja     0x424f1e
  424f1e:	add    BYTE PTR [rax],al
  424f20:	add    BYTE PTR [rax],al
  424f22:	js     0x424f24
  424f24:	js     0x424f26
  424f26:	js     0x424f28
  424f28:	test   DWORD PTR [rax],eax
  424f2a:	test   DWORD PTR [rax],eax
  424f2c:	test   DWORD PTR [rax],eax
  424f2e:	test   DWORD PTR [rax],eax
  424f30:	test   DWORD PTR [rax],eax
  424f32:	test   DWORD PTR [rax],eax
  424f34:	test   DWORD PTR [rax],eax
  424f36:	xchg   BYTE PTR [rax],al
  424f38:	xchg   BYTE PTR [rax],al
  424f3a:	xchg   BYTE PTR [rax],al
  424f3c:	xchg   BYTE PTR [rax],al
  424f3e:	xchg   BYTE PTR [rax],al
  424f40:	xchg   BYTE PTR [rax],al
  424f42:	xchg   BYTE PTR [rax],al
  424f44:	mov    eax,DWORD PTR [rax]
	...
  424f4e:	xchg   BYTE PTR [rax],al
  424f50:	add    BYTE PTR [rax],al
  424f52:	xchg   BYTE PTR [rax],al
  424f54:	add    BYTE PTR [rax],al
  424f56:	add    BYTE PTR [rax],al
  424f58:	xchg   BYTE PTR [rax],al
  424f5a:	mov    BYTE PTR [rax],al
  424f5c:	mov    BYTE PTR [rax],al
  424f5e:	mov    BYTE PTR [rax],al
  424f60:	mov    BYTE PTR [rax],al
  424f62:	mov    BYTE PTR [rax],al
  424f64:	mov    BYTE PTR [rax],al
  424f66:	mov    BYTE PTR [rax],al
	...
  424f70:	mov    WORD PTR [rax],es
  424f72:	xchg   BYTE PTR [rax],al
  424f74:	add    BYTE PTR [rax],al
  424f76:	xchg   BYTE PTR [rax],al
  424f78:	mov    eax,DWORD PTR [rax]
  424f7a:	add    BYTE PTR [rax],al
  424f7c:	add    BYTE PTR [rax],al
  424f7e:	add    BYTE PTR [rax],al
  424f80:	xchg   BYTE PTR [rax],al
  424f82:	mov    DWORD PTR [rax],eax
  424f84:	mov    DWORD PTR [rax],eax
  424f86:	mov    DWORD PTR [rax],eax
  424f88:	mov    DWORD PTR [rax],eax
  424f8a:	mov    DWORD PTR [rax],eax
  424f8c:	mov    DWORD PTR [rax],eax
  424f8e:	mov    DWORD PTR [rax],eax
  424f90:	xchg   edi,eax
  424f91:	add    BYTE PTR [rax],al
  424f93:	add    BYTE PTR [rax],al
  424f95:	add    BYTE PTR [rdi-0x76ff6800],dl
  424f9b:	add    BYTE PTR [rax],al
  424f9d:	add    BYTE PTR [rcx+0x9900],cl
  424fa3:	add    BYTE PTR [rcx-0x73ff7400],cl
  424fa9:	add    BYTE PTR [rax+rax*1+0x8b0000],cl
  424fb0:	mov    eax,DWORD PTR [rax]
  424fb2:	mov    eax,DWORD PTR [rax]
  424fb4:	lea    eax,[rax]
  424fb6:	lea    eax,[rax]
  424fb8:	lea    eax,[rax]
  424fba:	lea    eax,[rax]
  424fbc:	lea    eax,[rax]
  424fbe:	mov    DWORD PTR [rax],eax
  424fc0:	add    BYTE PTR [rax],al
  424fc2:	mov    DWORD PTR [rax],eax
  424fc4:	add    BYTE PTR [rax],al
  424fc6:	xchg   edi,eax
  424fc7:	add    BYTE PTR [rdi-0x76ff6900],dl
  424fcd:	add    BYTE PTR [rax-0x67ff6800],bl
  424fd3:	add    BYTE PTR [rbp-0x66ff6700],cl
  424fd9:	add    BYTE PTR [rcx-0x63ff6600],bl
  424fdf:	add    BYTE PTR [rdx+0x9b00],bl
  424fe5:	add    BYTE PTR [rax],al
  424fe7:	add    BYTE PTR [rbp+0x0],bl
  424fed:	add    BYTE PTR [rsi-0x60ff6500],bl
  424ff3:	add    BYTE PTR [rax],al
  424ff5:	add    BYTE PTR [rbx-0x63ff7300],bl
  424ffb:	add    BYTE PTR [rsi+0x0],bl
  425001:	add    BYTE PTR [rax],al
  425003:	add    BYTE PTR [rdi+0x0],bl
  425009:	add    BYTE PTR [rax],al
  42500b:	add    BYTE PTR [rax+0x0],ah
  425011:	add    BYTE PTR [rdx-0x65ff6600],bl
  425017:	add    BYTE PTR [rbx-0x64ff6500],bl
  42501d:	add    BYTE PTR [rbp-0x62ff6300],bl
  425023:	add    BYTE PTR [rsi-0x61ff6200],bl
  425029:	add    BYTE PTR [rbp-0x5e000000],cl
  42502f:	add    BYTE PTR [rax+rax*1+0x9c009c],bl
  425036:	movabs al,ds:0x9f009f009f00a200
  42503f:	add    BYTE PTR [rcx-0x5fff6000],ah
  425045:	add    BYTE PTR [rax+0xa300],ah
  42504b:	add    BYTE PTR [rsi-0x5bff5f00],ah
  425051:	add    BYTE PTR [rax],al
  425053:	add    BYTE PTR [rax],al
  425055:	add    BYTE PTR [rax],al
  425057:	add    BYTE PTR [rbp-0x5c000000],ah
  42505d:	add    BYTE PTR [rax],al
  42505f:	add    BYTE PTR [rbx-0x5dff5a00],ah
  425065:	add    BYTE PTR [rdx-0x58ff5e00],ah
	...
  425073:	add    BYTE PTR [rax],al
  425075:	add    BYTE PTR [rcx-0x5eff5f00],ah
  42507b:	add    BYTE PTR [rbp-0x5cff5d00],ah
  425081:	add    BYTE PTR [rbx-0x5bff5600],ah
  425087:	add    BYTE PTR [rax+rax*1+0xa800a4],ah
  42508e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42508f:	add    BYTE PTR [rbp-0x58ff5b00],ah
  425095:	add    BYTE PTR [rbx-0x59ff5a00],ch
  42509b:	add    BYTE PTR [rsi-0x59000000],ah
  4250a1:	add    BYTE PTR [rdi-0x56ff5900],ah
  4250a7:	add    BYTE PTR [rdx-0x53ff5800],ch
  4250ad:	add    BYTE PTR [rax],al
  4250af:	add    BYTE PTR [rax+rax*1+0xad00a9],ch
  4250b6:	stos   DWORD PTR es:[rdi],eax
  4250b7:	add    BYTE PTR [rax],al
  4250b9:	add    BYTE PTR [rdx-0x55ff5600],ch
  4250bf:	add    BYTE PTR [rbp-0x57ff5800],ch
  4250c5:	add    BYTE PTR [rax+0x0],ch
  4250cb:	add    BYTE PTR [rbx-0x54ff5500],ch
  4250d1:	add    BYTE PTR [rsi+0x0],ch
  4250d7:	add    BYTE PTR [rsi-0x56ff5100],ch
  4250dd:	add    BYTE PTR [rcx-0x53ff5700],ch
  4250e3:	add    BYTE PTR [rax+rax*1+0xac],ch
  4250ea:	lods   eax,DWORD PTR ds:[rsi]
  4250eb:	add    BYTE PTR [rbp-0x4dff5300],ch
  4250f1:	add    BYTE PTR [rax-0x4fff5100],dh
  4250f7:	add    BYTE PTR [rcx+0x0],dh
  4250fd:	add    BYTE PTR [rbx-0x4b000000],dh
  425103:	add    BYTE PTR [rax],al
  425105:	add    BYTE PTR [rax],al
  425107:	add    BYTE PTR [rsi-0x51ff5200],ch
  42510d:	add    BYTE PTR [rbx-0x50ff5100],dh
  425113:	add    BYTE PTR [rdi-0x4e000000],ch
  425119:	add    BYTE PTR [rax],al
  42511b:	add    BYTE PTR [rax],al
  42511d:	add    BYTE PTR [rbp-0x4f000000],dh
  425123:	add    BYTE PTR [rdx-0x4fff4b00],dh
  425129:	add    BYTE PTR [rax-0x4eff5000],dh
  42512f:	add    BYTE PTR [rcx-0x4cff4f00],dh
  425135:	add    BYTE PTR [rbx-0x4bff4d00],dh
  42513b:	add    BYTE PTR [rax],al
  42513d:	add    BYTE PTR [rax],al
  42513f:	add    BYTE PTR [rsi+0x0],dh
  425145:	add    BYTE PTR [rdi+0xb400],dh
  42514b:	add    BYTE PTR [rax],al
  42514d:	add    BYTE PTR [rdx-0x4dff4e00],dh
  425153:	add    BYTE PTR [rbp-0x4aff4b00],dh
  425159:	add    BYTE PTR [rax],al
  42515b:	add    BYTE PTR [rax],al
  42515d:	add    BYTE PTR [rdi-0x49ff4800],dh
  425163:	add    BYTE PTR [rax],al
  425165:	add    BYTE PTR [rcx+0x0],bh
  42516b:	add    BYTE PTR [rbx-0x4c000000],bh
  425171:	add    BYTE PTR [rax+rax*1+0xb600b4],dh
  425178:	mov    dh,0x0
  42517a:	mov    dh,0x0
  42517c:	mov    bh,0x0
  42517e:	mov    bh,0x0
  425180:	mov    bh,0x0
  425182:	mov    edx,0xb800
  425187:	add    BYTE PTR [rax+rax*1+0x0],bh
  42518e:	mov    edx,0xbd00b900
  425193:	add    BYTE PTR [rbx-0x47ff4800],bh
  425199:	add    BYTE PTR [rax-0x46ff4700],bh
  42519f:	add    BYTE PTR [rcx-0x44ff4500],bh
  4251a5:	add    BYTE PTR [rbx-0x39000000],bh
  4251ab:	add    BYTE PTR [rax],al
  4251ad:	add    BYTE PTR [rbp-0x41ff4400],bh
  4251b3:	add    BYTE PTR [rax],al
  4251b5:	add    BYTE PTR [rax],al
  4251b7:	add    BYTE PTR [rdx-0x45ff4600],bh
  4251bd:	add    BYTE PTR [rax+rax*1+0xbc00bc],bh
  4251c4:	mov    edi,0xbd00be00
  4251c9:	add    BYTE PTR [rbp+0xbd00],bh
  4251cf:	add    al,al
  4251d1:	add    bl,al
  4251d3:	add    bl,al
  4251d5:	add    bl,al
  4251d7:	add    bl,al
  4251d9:	add    bl,al
  4251db:	add    bl,al
  4251dd:	add    bh,al
  4251df:	add    BYTE PTR [rax],al
  4251e1:	add    BYTE PTR [rdi+0xc000],bh
  4251e7:	add    BYTE PTR [rsi-0x41ff4200],bh
  4251ed:	add    BYTE PTR [rax],al
  4251ef:	add    BYTE PTR [rax],al
  4251f1:	add    BYTE PTR [rax],al
  4251f3:	add    dl,dl
  4251f5:	add    BYTE PTR [rax],al
  4251f7:	add    BYTE PTR [rax],al
  4251f9:	add    BYTE PTR [rdi-0x40ff4100],bh
  4251ff:	add    bl,dl
  425201:	add    BYTE PTR [rax],al
  425203:	add    BYTE PTR [rax],al
  425205:	add    al,al
  425207:	add    al,al
  425209:	add    al,al
  42520b:	add    dl,dl
  42520d:	add    ah,dl
  42520f:	add    BYTE PTR [rax],al
  425211:	add    BYTE PTR [rax],al
  425213:	add    bh,al
  425215:	add    bh,al
  425217:	add    bh,al
  425219:	add    al,cl
  42521b:	add    al,cl
  42521d:	add    al,cl
  42521f:	add    al,cl
  425221:	add    al,cl
  425223:	add    al,cl
  425225:	add    al,cl
  425227:	add    bl,dl
  425229:	add    dl,dl
  42522b:	add    dl,dl
  42522d:	add    dl,dl
  42522f:	add    ch,dl
  425231:	add    BYTE PTR [rax],al
  425233:	add    dh,dl
  425235:	add    bl,dl
  425237:	add    bl,dl
  425239:	add    bl,dl
  42523b:	add    bh,dl
  42523d:	add    BYTE PTR [rax],al
  42523f:	add    BYTE PTR [rax],al
  425241:	add    cl,bl
  425243:	add    ah,dl
  425245:	add    ah,dl
  425247:	add    ah,dl
  425249:	add    al,bl
  42524b:	add    ch,dl
  42524d:	add    dh,dl
	...
  425257:	add    al,bl
  425259:	add    BYTE PTR [rax],al
  42525b:	add    BYTE PTR [rax],al
  42525d:	add    cl,bl
  42525f:	add    BYTE PTR [rax],al
  425261:	add    ch,bl
  425263:	add    BYTE PTR [rax],al
  425265:	add    ch,dl
  425267:	add    ch,dl
  425269:	add    ch,dl
  42526b:	add    bl,bl
  42526d:	add    BYTE PTR [rax],al
  42526f:	add    BYTE PTR [rax],al
  425271:	add    bh,dl
  425273:	add    bh,dl
  425275:	add    bh,dl
  425277:	add    cl,bl
  425279:	add    cl,bl
  42527b:	add    cl,bl
  42527d:	add    dl,bl
  42527f:	add    bl,bl
  425281:	add    BYTE PTR [rax],al
  425283:	add    dh,dl
  425285:	add    dh,dl
  425287:	add    dh,dl
  425289:	add    ch,bl
  42528b:	add    dl,ah
  42528d:	add    al,bl
  42528f:	add    al,bl
  425291:	add    al,bl
  425293:	add    ah,bl
  425295:	add    dl,bl
  425297:	add    ch,bl
  425299:	add    ch,bl
  42529b:	add    ch,bl
  42529d:	add    BYTE PTR [rax],al
  42529f:	add    dh,bl
  4252a1:	add    bl,bl
  4252a3:	add    bl,bl
  4252a5:	add    bl,bl
  4252a7:	add    bh,bl
  4252a9:	add    BYTE PTR [rax],al
  4252ab:	add    ah,bl
  4252ad:	add    BYTE PTR [rax],al
  4252af:	add    al,ah
  4252b1:	add    BYTE PTR [rax],al
  4252b3:	add    dl,bl
  4252b5:	add    dl,bl
  4252b7:	add    dl,bl
  4252b9:	add    dh,bl
  4252bb:	add    bh,bl
  4252bd:	add    al,ah
  4252bf:	add    cl,ah
  4252c1:	add    dl,ah
  4252c3:	add    dl,ah
  4252c5:	add    dl,ah
  4252c7:	add    bl,ah
  4252c9:	add    ah,bl
  4252cb:	add    ah,bl
  4252cd:	add    ah,bl
  4252cf:	add    ah,ah
  4252d1:	add    BYTE PTR [rax],al
  4252d3:	add    BYTE PTR [rax],al
  4252d5:	add    dh,bl
  4252d7:	add    dh,bl
  4252d9:	add    dh,bl
  4252db:	add    bh,ah
  4252dd:	add    bh,bl
  4252df:	add    bh,bl
  4252e1:	add    bh,bl
  4252e3:	add    cl,ah
  4252e5:	add    al,ah
  4252e7:	add    al,ah
  4252e9:	add    al,ah
  4252eb:	add    ch,ah
  4252ed:	add    ah,ah
  4252ef:	add    dh,ah
  4252f1:	add    BYTE PTR [rax],al
  4252f3:	add    bh,ah
  4252f5:	add    cl,ah
  4252f7:	add    cl,ah
  4252f9:	add    cl,ah
  4252fb:	add    al,ch
  4252fd:	add    bl,ah
  4252ff:	add    bl,ah
  425301:	add    bl,ah
  425303:	add    cl,ch
  425305:	add    ah,ah
  425307:	add    ah,ah
  425309:	add    ah,ah
  42530b:	add    dh,ah
  42530d:	add    BYTE PTR [rax],al
  42530f:	add    ch,ah
  425311:	add    bh,ah
  425313:	add    bh,ah
  425315:	add    bh,ah
  425317:	add    dl,ch
  425319:	add    bl,ch
  42531b:	add    BYTE PTR [rax],al
  42531d:	add    ah,ch
  42531f:	add    BYTE PTR [rax],al
  425321:	add    BYTE PTR [rax],al
  425323:	add    ch,ch
  425325:	add    dh,ah
  425327:	add    dh,ah
  425329:	add    dh,ah
  42532b:	add    cl,ch
  42532d:	add    ah,ch
  42532f:	add    BYTE PTR [rax],al
  425331:	add    al,ch
  425333:	add    al,ch
  425335:	add    al,ch
  425337:	add    dl,ch
  425339:	add    cl,ch
  42533b:	add    cl,ch
  42533d:	add    cl,ch
  42533f:	add    BYTE PTR [rax],al
  425341:	add    BYTE PTR [rax],al
  425343:	add    bl,ch
  425345:	add    ch,ah
  425347:	add    ch,ah
  425349:	add    ch,ah
  42534b:	add    dh,ch
  42534d:	add    dl,ch
  42534f:	add    dl,ch
  425351:	add    dl,ch
  425353:	add    ah,ch
  425355:	add    ah,ch
  425357:	add    ah,ch
  425359:	add    ch,ch
  42535b:	add    ch,ch
  42535d:	add    ch,ch
  42535f:	add    bh,ch
  425361:	add    BYTE PTR [rax],al
  425363:	add    BYTE PTR [rax],al
  425365:	add    dh,ch
  425367:	add    BYTE PTR [rax],al
  425369:	add    bh,ch
  42536b:	add    BYTE PTR [rax],al
  42536d:	add    cl,dh
	...
  425377:	add    al,dh
  425379:	add    bl,ch
  42537b:	add    bl,ch
  42537d:	add    bl,ch
  42537f:	add    BYTE PTR [rax],al
  425381:	add    dl,dh
  425383:	add    BYTE PTR [rax],al
  425385:	add    BYTE PTR [rax],al
  425387:	add    bl,dh
  425389:	add    BYTE PTR [rax],al
  42538b:	add    BYTE PTR [rax],al
  42538d:	add    ah,dh
  42538f:	add    bl,dh
  425391:	add    BYTE PTR [rax],al
  425393:	add    BYTE PTR [rax],al
  425395:	add    bh,ch
  425397:	add    bh,ch
  425399:	add    bh,ch
  42539b:	add    dh,ch
  42539d:	add    dh,ch
  42539f:	add    dh,ch
  4253a1:	add    al,dh
  4253a3:	add    cl,dh
  4253a5:	add    cl,dh
  4253a7:	add    cl,dh
  4253a9:	add    dl,dh
  4253ab:	add    dh,dh
  4253ad:	add    al,dh
  4253af:	add    al,dh
  4253b1:	add    al,dh
  4253b3:	add    ah,dh
  4253b5:	add    al,bh
  4253b7:	add    dl,dh
  4253b9:	add    dl,dh
  4253bb:	add    dl,dh
  4253bd:	add    bl,dh
  4253bf:	add    bl,dh
  4253c1:	add    bl,dh
  4253c3:	add    ah,dh
  4253c5:	add    ah,dh
  4253c7:	add    ah,dh
  4253c9:	add    ch,dh
  4253cb:	add    BYTE PTR [rax],al
  4253cd:	add    BYTE PTR [rax],al
  4253cf:	add    al,bh
  4253d1:	add    BYTE PTR [rax],al
  4253d3:	add    dh,dh
  4253d5:	add    ch,dh
  4253d7:	add    BYTE PTR [rax],al
  4253d9:	add    bh,dh
  4253db:	add    BYTE PTR [rax],al
  4253dd:	add    BYTE PTR [rax],al
  4253df:	add    dh,dh
  4253e1:	add    cl,bh
  4253e3:	add    BYTE PTR [rax],al
  4253e5:	add    BYTE PTR [rax],al
  4253e7:	add    BYTE PTR [rax],al
  4253e9:	add    bh,dh
  4253eb:	add    al,bh
  4253ed:	add    al,bh
  4253ef:	add    al,bh
  4253f1:	add    dl,bh
  4253f3:	add    BYTE PTR [rax],al
  4253f5:	add    dl,bh
  4253f7:	add    BYTE PTR [rax],al
  4253f9:	add    bh,bh
  4253fb:	add    BYTE PTR [rdi],al
  4253fd:	add    DWORD PTR [rax],eax
  4253ff:	add    ch,dh
  425401:	add    ch,dh
  425403:	add    ch,dh
  425405:	add    cl,bh
  425407:	add    BYTE PTR [rdi],al
  425409:	add    esi,esi
  42540b:	add    dh,dh
  42540d:	add    dh,dh
  42540f:	add    bh,dh
  425411:	add    bh,dh
  425413:	add    bh,dh
  425415:	add    BYTE PTR [rax],al
  425417:	add    cl,bh
  425419:	add    cl,bh
  42541b:	add    cl,bh
  42541d:	add    BYTE PTR [rax],al
  42541f:	add    DWORD PTR [rax],eax
  425421:	add    DWORD PTR [rax],eax
  425423:	add    DWORD PTR [rax],eax
  425425:	add    DWORD PTR [rax],eax
  425427:	add    edx,edi
  425429:	add    dl,bh
  42542b:	add    dl,bh
  42542d:	add    bh,bh
  42542f:	add    BYTE PTR [rax],cl
  425431:	add    DWORD PTR [rdi],eax
  425433:	add    DWORD PTR [rdi],eax
  425435:	add    DWORD PTR [rdi],eax
  425437:	add    DWORD PTR [rcx],ecx
  425439:	add    DWORD PTR [rdx],ecx
  42543b:	add    DWORD PTR [rax],eax
  42543d:	add    BYTE PTR [rax],al
  42543f:	add    DWORD PTR [rax],eax
  425441:	add    BYTE PTR [rax],cl
  425443:	add    DWORD PTR [rbx],ecx
  425445:	add    DWORD PTR [rax],eax
  425447:	add    BYTE PTR [rcx+rax*1],cl
  42544a:	add    BYTE PTR [rax],al
  42544c:	or     DWORD PTR [rcx],eax
  42544e:	add    BYTE PTR [rax],al
  425450:	or     al,BYTE PTR [rcx]
  425452:	add    BYTE PTR [rax],al
  425454:	add    BYTE PTR [rax],al
  425456:	or     eax,DWORD PTR [rcx]
  425458:	add    BYTE PTR [rax],al
  42545a:	add    BYTE PTR [rax],al
  42545c:	add    BYTE PTR [rax],al
  42545e:	or     al,0x1
  425460:	add    BYTE PTR [rax],al
  425462:	add    BYTE PTR [rcx],al
  425464:	inc    DWORD PTR [rax]
  425466:	inc    DWORD PTR [rax]
  425468:	inc    DWORD PTR [rax]
  42546a:	add    BYTE PTR [rax],al
  42546c:	adc    BYTE PTR [rcx],al
  42546e:	or     DWORD PTR [rcx],eax
  425470:	or     DWORD PTR [rcx],eax
  425472:	or     DWORD PTR [rcx],eax
  425474:	adc    BYTE PTR [rcx],al
  425476:	add    BYTE PTR [rax],al
  425478:	or     BYTE PTR [rcx],al
  42547a:	or     BYTE PTR [rcx],al
  42547c:	or     BYTE PTR [rcx],al
  42547e:	or     al,0x1
  425480:	or     al,0x1
  425482:	or     al,0x1
  425484:	add    BYTE PTR [rax],al
  425486:	or     al,BYTE PTR [rcx]
  425488:	or     al,BYTE PTR [rcx]
  42548a:	or     al,BYTE PTR [rcx]
  42548c:	or     eax,DWORD PTR [rcx]
  42548e:	or     eax,DWORD PTR [rcx]
  425490:	or     eax,DWORD PTR [rcx]
  425492:	or     eax,0xd010001
  425497:	add    DWORD PTR [rsi],ecx
  425499:	add    DWORD PTR [rdi],ecx
  42549b:	add    DWORD PTR [rsi],ecx
  42549d:	add    DWORD PTR [rdi],ecx
  42549f:	add    DWORD PTR [rax],eax
  4254a1:	add    BYTE PTR [rax],dl
  4254a3:	add    DWORD PTR [rax],edx
  4254a5:	add    DWORD PTR [rax],edx
  4254a7:	add    DWORD PTR [rcx],edx
  4254a9:	add    DWORD PTR [rax],eax
  4254ab:	add    BYTE PTR [rcx],dl
  4254ad:	add    DWORD PTR [rdx],edx
  4254af:	add    DWORD PTR [rax],eax
  4254b1:	add    BYTE PTR [rax],al
  4254b3:	add    BYTE PTR [rbx],dl
  4254b5:	add    DWORD PTR [rax],eax
  4254b7:	add    BYTE PTR [rax],al
  4254b9:	add    BYTE PTR [rcx+rax*1],dl
  4254bc:	add    BYTE PTR [rax],al
  4254be:	adc    al,0x1
  4254c0:	add    BYTE PTR [rax],al
  4254c2:	adc    eax,DWORD PTR [rcx]
  4254c4:	add    BYTE PTR [rax],al
  4254c6:	adc    al,BYTE PTR [rcx]
  4254c8:	or     eax,0xd010d01
  4254cd:	add    DWORD PTR [rsi],ecx
  4254cf:	add    DWORD PTR [rsi],ecx
  4254d1:	add    DWORD PTR [rsi],ecx
  4254d3:	add    DWORD PTR [rdi],ecx
  4254d5:	add    DWORD PTR [rdi],ecx
  4254d7:	add    DWORD PTR [rdi],ecx
  4254d9:	add    DWORD PTR [rip+0x11000001],edx        # 0x114254e0
  4254df:	add    DWORD PTR [rcx],edx
  4254e1:	add    DWORD PTR [rcx],edx
  4254e3:	add    DWORD PTR [rdx],edx
  4254e5:	add    DWORD PTR [rdx],edx
  4254e7:	add    DWORD PTR [rdx],edx
  4254e9:	add    DWORD PTR [rbx],edx
  4254eb:	add    DWORD PTR [rbx],edx
  4254ed:	add    DWORD PTR [rbx],edx
  4254ef:	add    DWORD PTR [rcx+rax*1],edx
  4254f2:	adc    al,0x1
  4254f4:	adc    al,0x1
  4254f6:	(bad)  
  4254f7:	add    DWORD PTR [rax],eax
  4254f9:	add    BYTE PTR [rcx],bl
  4254fb:	add    DWORD PTR [rax],ebx
  4254fd:	add    DWORD PTR [rax],eax
  4254ff:	add    BYTE PTR [rax],al
  425501:	add    BYTE PTR [rdx],bl
  425503:	add    DWORD PTR [rip+0x18000001],edx        # 0x1842550a
  425509:	add    DWORD PTR [rbx],ebx
  42550b:	add    DWORD PTR [rax],eax
  42550d:	add    BYTE PTR [rcx+rax*1],bl
  425510:	adc    eax,0x15011501
  425515:	add    DWORD PTR [rbx],ebx
  425517:	add    DWORD PTR [rip+0x17000001],ebx        # 0x1742551e
  42551d:	add    DWORD PTR [rcx],ebx
  42551f:	add    DWORD PTR [rax],eax
  425521:	add    BYTE PTR [rax],al
  425523:	add    BYTE PTR [rcx+rax*1],bl
  425526:	sbb    eax,0x1f012101
  42552b:	add    DWORD PTR [rdi],edx
  42552d:	add    DWORD PTR [rdi],edx
  42552f:	add    DWORD PTR [rdi],edx
  425531:	add    DWORD PTR [rax],ebx
  425533:	add    DWORD PTR [rax],ebx
  425535:	add    DWORD PTR [rax],ebx
  425537:	add    DWORD PTR [rdx],ebx
  425539:	add    DWORD PTR [rdx],ebx
  42553b:	add    DWORD PTR [rdx],ebx
  42553d:	add    DWORD PTR [rsi],ebx
  42553f:	add    DWORD PTR [rbx],ebx
  425541:	add    DWORD PTR [rbx],ebx
  425543:	add    DWORD PTR [rbx],ebx
  425545:	add    DWORD PTR [rax],esp
  425547:	add    DWORD PTR [rbx],esp
  425549:	add    DWORD PTR [rsi],ebx
  42554b:	add    DWORD PTR [rcx],esp
  42554d:	add    DWORD PTR [rip+0x1d011d01],ebx        # 0x1d437254
  425553:	add    DWORD PTR [rcx],ebx
  425555:	add    DWORD PTR [rcx],ebx
  425557:	add    DWORD PTR [rcx],ebx
  425559:	add    DWORD PTR [rcx+rax*1],ebx
  42555c:	sbb    al,0x1
  42555e:	sbb    al,0x1
  425560:	(bad)  
  425561:	add    DWORD PTR [rdi],ebx
  425563:	add    DWORD PTR [rdi],ebx
  425565:	add    DWORD PTR [rdx],esp
  425567:	add    DWORD PTR [rax],eax
  425569:	add    BYTE PTR [rax],al
  42556b:	add    BYTE PTR [rip+0x12001],ah        # 0x437572
  425571:	add    BYTE PTR [rbx],ah
  425573:	add    DWORD PTR [rsi],ebx
  425575:	add    DWORD PTR [rsi],ebx
  425577:	add    DWORD PTR [rsi],ebx
  425579:	add    DWORD PTR [rcx+rax*1],esp
  42557c:	and    BYTE PTR [rcx],al
  42557e:	and    BYTE PTR [rcx],al
  425580:	and    BYTE PTR [rcx],al
  425582:	and    DWORD PTR [rcx],eax
  425584:	and    DWORD PTR [rcx],eax
  425586:	and    DWORD PTR [rcx],eax
  425588:	add    BYTE PTR [rax],al
  42558a:	and    al,0x1
  42558c:	add    BYTE PTR [rax],al
  42558e:	(bad)  
  42558f:	add    DWORD PTR [rax],eax
	...
  425599:	add    BYTE PTR [rsi],ah
  42559b:	add    DWORD PTR [rdx],esp
  42559d:	add    DWORD PTR [rdx],esp
  42559f:	add    DWORD PTR [rdx],esp
  4255a1:	add    DWORD PTR [rip+0x25012501],esp        # 0x25437aa8
  4255a7:	add    DWORD PTR [rbx],esp
  4255a9:	add    DWORD PTR [rbx],esp
  4255ab:	add    DWORD PTR [rbx],esp
  4255ad:	add    DWORD PTR [rsi],esp
  4255af:	add    DWORD PTR [rcx+rax*1],esp
  4255b2:	and    al,0x1
  4255b4:	and    al,0x1
  4255b6:	(bad)  
  4255b7:	add    DWORD PTR [rax],ebp
  4255b9:	add    DWORD PTR [rdi],ebp
  4255bb:	add    DWORD PTR [rax],eax
  4255bd:	add    BYTE PTR [rax],ch
  4255bf:	add    DWORD PTR [rax],esi
  4255c1:	add    DWORD PTR [rax],eax
  4255c3:	add    BYTE PTR [rdi],ah
  4255c5:	add    DWORD PTR [rdi],esp
  4255c7:	add    DWORD PTR [rdi],esp
  4255c9:	add    DWORD PTR [rax],eax
  4255cb:	add    BYTE PTR [rdi],ch
  4255cd:	add    DWORD PTR [rax],eax
  4255cf:	add    BYTE PTR [rsi],ah
  4255d1:	add    DWORD PTR [rsi],esp
  4255d3:	add    DWORD PTR [rsi],esp
  4255d5:	add    DWORD PTR [rcx],esi
  4255d7:	add    DWORD PTR [rax],eax
  4255d9:	add    BYTE PTR [rax],al
  4255db:	add    BYTE PTR [rax],dh
  4255dd:	add    DWORD PTR [rdx],esi
  4255df:	add    DWORD PTR [rbx],esi
  4255e1:	add    DWORD PTR [rax],eax
  4255e3:	add    BYTE PTR [rax],al
  4255e5:	add    BYTE PTR [rax],al
  4255e7:	add    BYTE PTR [rbx],dh
  4255e9:	add    DWORD PTR [rcx+rax*1],esi
  4255ec:	add    BYTE PTR [rax],al
  4255ee:	sub    BYTE PTR [rcx],al
  4255f0:	sub    BYTE PTR [rcx],al
  4255f2:	sub    BYTE PTR [rcx],al
  4255f4:	xor    al,0x1
  4255f6:	xor    BYTE PTR [rcx],al
  4255f8:	xor    BYTE PTR [rcx],al
  4255fa:	xor    BYTE PTR [rcx],al
  4255fc:	xor    eax,0x13101
  425601:	add    BYTE PTR [rdi],ch
  425603:	add    DWORD PTR [rdi],ebp
  425605:	add    DWORD PTR [rdi],ebp
  425607:	add    DWORD PTR [rax],eax
  425609:	add    BYTE PTR [rsi],dh
  42560b:	add    DWORD PTR [rcx],esi
  42560d:	add    DWORD PTR [rcx],esi
  42560f:	add    DWORD PTR [rcx],esi
  425611:	add    DWORD PTR [rax],eax
  425613:	add    BYTE PTR [rdx],dh
  425615:	add    DWORD PTR [rdx],esi
  425617:	add    DWORD PTR [rdx],esi
  425619:	add    DWORD PTR [rdi],edi
  42561b:	add    DWORD PTR [rax],eax
  42561d:	add    BYTE PTR [rbx],dh
  42561f:	add    DWORD PTR [rbx],esi
  425621:	add    DWORD PTR [rbx],esi
  425623:	add    DWORD PTR [rip+0x38013601],esi        # 0x38438c2a
  425629:	add    DWORD PTR [rcx+rax*1],esi
  42562c:	xor    al,0x1
  42562e:	xor    al,0x1
  425630:	cmp    DWORD PTR [rcx],eax
  425632:	xor    eax,0x35013501
  425637:	add    DWORD PTR [rdi],esi
  425639:	add    DWORD PTR [rax],edi
  42563b:	add    DWORD PTR [rdi],esi
  42563d:	add    DWORD PTR [rdx],edi
  42563f:	add    DWORD PTR [rsi],esi
  425641:	add    DWORD PTR [rsi],esi
  425643:	add    DWORD PTR [rsi],esi
  425645:	add    DWORD PTR [rax],eax
  425647:	add    BYTE PTR [rax],al
  425649:	add    BYTE PTR [rax],al
  42564b:	add    BYTE PTR [rbx],bh
  42564d:	add    DWORD PTR [rax],eax
  42564f:	add    BYTE PTR [rdi],bh
  425651:	add    DWORD PTR [rdi],edi
  425653:	add    DWORD PTR [rdi],edi
  425655:	add    DWORD PTR [rdx],edi
  425657:	add    DWORD PTR [rcx],edi
  425659:	add    DWORD PTR [rax],eax
  42565b:	add    BYTE PTR [rcx+rax*1],bh
  42565e:	cmp    BYTE PTR [rcx],al
  425660:	cmp    BYTE PTR [rcx],al
  425662:	cmp    BYTE PTR [rcx],al
  425664:	cmp    eax,DWORD PTR [rcx]
  425666:	cmp    DWORD PTR [rcx],eax
  425668:	cmp    DWORD PTR [rcx],eax
  42566a:	cmp    DWORD PTR [rcx],eax
  42566c:	cmp    al,0x1
  42566e:	(bad)  
  42566f:	add    DWORD PTR [rdi],esi
  425671:	add    DWORD PTR [rdi],esi
  425673:	add    DWORD PTR [rdx],edi
  425675:	add    DWORD PTR [rdx],edi
  425677:	add    DWORD PTR [rdx],edi
  425679:	add    DWORD PTR [rax],eax
  42567b:	add    BYTE PTR [rip+0x1],bh        # 0x425682
  425681:	add    BYTE PTR [rbx],bh
  425683:	add    DWORD PTR [rbx],edi
  425685:	add    DWORD PTR [rbx],edi
  425687:	add    DWORD PTR [rsi],edi
  425689:	add    DWORD PTR [rax],eax
  42568b:	add    BYTE PTR [rax],al
  42568d:	add    BYTE PTR [rax],al
  42568f:	add    BYTE PTR [rdx+0x1],al
  425692:	cmp    al,0x1
  425694:	cmp    al,0x1
  425696:	cmp    al,0x1
  425698:	cmp    eax,0x3e000001
  42569d:	add    DWORD PTR [rax],eax
  42569f:	add    BYTE PTR [rcx+0x1],al
  4256a2:	add    BYTE PTR [rax],al
  4256a4:	add    BYTE PTR [rax],al
  4256a6:	rex.XB add DWORD PTR [r8],eax
  4256a9:	add    BYTE PTR [rax],al
  4256ab:	add    BYTE PTR [rbp+0x1],al
  4256ae:	add    BYTE PTR [rax],al
  4256b0:	add    BYTE PTR [rax],al
  4256b2:	cmp    eax,0x3d013d01
  4256b7:	add    DWORD PTR [rax+0x1],ecx
  4256ba:	add    BYTE PTR [rax],al
  4256bc:	add    BYTE PTR [rax],al
  4256be:	add    DWORD PTR ds:[rsi],edi
  4256c1:	add    DWORD PTR [rsi],edi
  4256c3:	add    DWORD PTR [rcx+0x1],eax
  4256c6:	rex.X add DWORD PTR [rdx+0x1],eax
  4256ca:	rex.X add DWORD PTR [rax],eax
  4256cd:	add    BYTE PTR [rdi+0x1],al
  4256d0:	rex.XB add DWORD PTR [r8],eax
  4256d3:	add    BYTE PTR [rcx+0x1],cl
  4256d6:	add    DWORD PTR [r9+0x1],eax
  4256da:	add    DWORD PTR [r11+0x1],eax
  4256de:	rex.XB add DWORD PTR [r11+0x1],eax
  4256e2:	add    DWORD PTR [r13+0x1],r8d
  4256e6:	add    DWORD PTR [r14+0x1],r8d
  4256ea:	add    BYTE PTR [rax],al
  4256ec:	add    QWORD PTR [r8+0x1],rcx
  4256f0:	add    QWORD PTR [rax+0x1],rcx
  4256f4:	rex.RX add DWORD PTR [rdi+0x1],r8d
  4256f8:	add    QWORD PTR [rax],r8
  4256fb:	add    BYTE PTR [rax],al
  4256fd:	add    BYTE PTR [rax],al
  4256ff:	add    BYTE PTR [rdi+0x1],cl
  425702:	add    QWORD PTR [r15+0x1],r8
  425706:	rex.RXB add DWORD PTR [r15+0x1],r8d
  42570a:	add    QWORD PTR [r9+0x1],rcx
  42570e:	add    QWORD PTR [r13+0x1],rcx
  425712:	add    QWORD PTR [rcx+r8*1+0x0],r9
  425717:	add    BYTE PTR [rdi+0x1],cl
  42571a:	add    BYTE PTR [rax],al
  42571c:	add    BYTE PTR [rax],al
  42571e:	rex.RX add DWORD PTR [rsi+0x1],r8d
  425722:	rex.RX add DWORD PTR [rax],r8d
  425725:	add    BYTE PTR [rax],al
  425727:	add    BYTE PTR [rax],al
  425729:	add    BYTE PTR [rax+0x1],dl
  42572c:	add    BYTE PTR [rax],al
  42572e:	add    QWORD PTR [rcx+rax*1+0x4c],r9
  425733:	add    DWORD PTR [rax],eax
  425735:	add    BYTE PTR [rcx+0x1],dl
  425738:	add    QWORD PTR [r13+0x1],r9
  42573c:	add    QWORD PTR [r8+0x1],r10
  425740:	rex.WRX add QWORD PTR [rcx+0x1],r10
  425744:	push   rbx
  425745:	add    DWORD PTR [rax],eax
  425747:	add    BYTE PTR [rsi+0x1],cl
  42574a:	rex.WRX add QWORD PTR [rsi+0x1],r9
  42574e:	rex.WRXB add QWORD PTR [r15+0x1],r9
  425752:	rex.WRXB add QWORD PTR [r8],r8
  425755:	add    BYTE PTR [rdx+0x1],dl
  425758:	add    BYTE PTR [rax],al
  42575a:	add    BYTE PTR [rax],al
  42575c:	push   rbx
  42575d:	add    DWORD PTR [rcx+rax*1+0x50],edx
  425761:	add    DWORD PTR [rax+0x1],edx
  425764:	push   rax
  425765:	add    DWORD PTR [rbp+0x1],edx
  425768:	add    BYTE PTR [rax],al
  42576a:	push   rsp
  42576b:	add    DWORD PTR [rcx+0x1],edx
  42576e:	push   rcx
  42576f:	add    DWORD PTR [rcx+0x1],edx
  425772:	push   rdx
  425773:	add    DWORD PTR [rsi+0x1],edx
  425776:	add    BYTE PTR [rax],al
  425778:	add    BYTE PTR [rax],al
  42577a:	push   rbx
  42577b:	add    DWORD PTR [rbx+0x1],edx
  42577e:	push   rbx
  42577f:	add    DWORD PTR [rsi+0x1],edx
  425782:	add    BYTE PTR [rax],al
  425784:	add    BYTE PTR [rax],al
  425786:	push   rdi
  425787:	add    DWORD PTR [rax],eax
  425789:	add    BYTE PTR [rax],al
  42578b:	add    BYTE PTR [rdx+0x1],dl
  42578e:	push   rdx
  42578f:	add    DWORD PTR [rdx+0x1],edx
  425792:	push   rdi
  425793:	add    DWORD PTR [rcx+rax*1+0x54],edx
  425797:	add    DWORD PTR [rcx+rax*1+0x58],edx
  42579b:	add    DWORD PTR [rbp+0x1],edx
  42579e:	push   rbp
  42579f:	add    DWORD PTR [rbp+0x1],edx
  4257a2:	add    BYTE PTR [rax],al
  4257a4:	pop    rax
  4257a5:	add    DWORD PTR [rcx+0x1],ebx
  4257a8:	add    BYTE PTR [rax],al
  4257aa:	push   rsi
  4257ab:	add    DWORD PTR [rsi+0x1],edx
  4257ae:	push   rsi
  4257af:	add    DWORD PTR [rax],eax
  4257b1:	add    BYTE PTR [rdx+0x1],bl
  4257b4:	add    BYTE PTR [rax],al
  4257b6:	add    BYTE PTR [rax],al
  4257b8:	add    BYTE PTR [rax],al
  4257ba:	pop    rsp
  4257bb:	add    DWORD PTR [rdi+0x1],edx
  4257be:	push   rdi
  4257bf:	add    DWORD PTR [rdi+0x1],edx
  4257c2:	pop    rbx
  4257c3:	add    DWORD PTR [rcx+0x1],ebx
  4257c6:	pop    rsp
  4257c7:	add    DWORD PTR [rcx+0x1],esp
  4257ca:	add    BYTE PTR [rax],al
  4257cc:	pop    rbp
  4257cd:	add    DWORD PTR [rax],eax
  4257cf:	add    BYTE PTR [rax+0x1],bl
  4257d2:	pop    rax
  4257d3:	add    DWORD PTR [rax+0x1],ebx
  4257d6:	pop    rdx
  4257d7:	add    DWORD PTR [rbp+0x1],ebx
  4257da:	(bad)  
  4257dc:	pop    rcx
  4257dd:	add    DWORD PTR [rcx+0x1],ebx
  4257e0:	pop    rcx
  4257e1:	add    DWORD PTR [rcx+0x1],esp
  4257e4:	add    BYTE PTR [rax],al
  4257e6:	pop    rbx
  4257e7:	add    DWORD PTR [rdx+0x1],ebx
  4257ea:	pop    rdx
  4257eb:	add    DWORD PTR [rdx+0x1],ebx
  4257ee:	add    BYTE PTR [rax],al
  4257f0:	pop    rsp
  4257f1:	add    DWORD PTR [rcx+rax*1+0x5c],ebx
  4257f5:	add    DWORD PTR [rax],eax
  4257f7:	add    BYTE PTR [rbx+0x1],bl
  4257fa:	pop    rbx
  4257fb:	add    DWORD PTR [rbx+0x1],ebx
  4257fe:	pop    rdi
  4257ff:	add    DWORD PTR [rax],eax
  425801:	add    BYTE PTR [rbp+0x1],bl
  425804:	pop    rbp
  425805:	add    DWORD PTR [rbp+0x1],ebx
  425808:	(bad)  
  425809:	add    DWORD PTR [rdx+0x1],esp
  42580c:	pop    rdi
  42580d:	add    DWORD PTR [rbx+0x1],esp
  425810:	(bad)  
  425812:	(bad)  
  425814:	(bad)  
  425816:	(bad)  
  425817:	add    DWORD PTR [rcx+0x1],esp
  42581a:	(bad)  
  42581b:	add    DWORD PTR [rcx+0x1],esp
  42581e:	movsxd eax,DWORD PTR [rcx]
  425820:	add    BYTE PTR [rax],al
  425822:	add    BYTE PTR [rax],al
  425824:	add    DWORD PTR fs:[rax],eax
	...
  42582f:	add    BYTE PTR [rcx+rax*1+0x0],ah
  425833:	add    BYTE PTR [rdi+0x1],bl
  425836:	pop    rdi
  425837:	add    DWORD PTR [rdi+0x1],ebx
  42583a:	add    DWORD PTR gs:[rax],eax
  42583d:	add    BYTE PTR [rax+0x1],ah
  425840:	(bad)  
  425841:	add    DWORD PTR [rax+0x1],esp
  425844:	add    WORD PTR [rax],ax
  425847:	add    BYTE PTR [rax],al
  425849:	add    BYTE PTR [rdi+0x1],ah
  42584c:	add    BYTE PTR [rax],al
  42584e:	add    BYTE PTR [rax],al
  425850:	push   0x63000001
  425855:	add    DWORD PTR [rbx+0x1],esp
  425858:	movsxd eax,DWORD PTR [rcx]
  42585a:	add    DWORD PTR fs:[rcx+rax*1+0x64],esp
  42585f:	add    DWORD PTR [rax],eax
  425861:	add    BYTE PTR [rcx+0x1],ch
  425864:	add    DWORD PTR gs:[rax],eax
  425867:	add    BYTE PTR [rsi+0x1],ah
  42586a:	imul   eax,DWORD PTR [rcx],0x68
  42586d:	add    DWORD PTR [rcx+0x1],ebp
  425870:	add    DWORD PTR gs:[rbp+0x1],esp
  425874:	add    DWORD PTR gs:[rbp+0x1],ebp
  425878:	add    BYTE PTR [rax],al
  42587a:	add    WORD PTR [rsi+0x1],sp
  42587e:	add    WORD PTR [rdi+0x1],sp
  425882:	add    DWORD PTR [edi+0x1],esp
  425886:	push   0x68016801
  42588b:	add    DWORD PTR [rdx+0x1],ebp
  42588e:	add    BYTE PTR [rax],al
  425890:	imul   eax,DWORD PTR [rcx],0x6e
  425893:	add    DWORD PTR [rbx+0x1],esi
  425896:	push   0x1
  425898:	imul   eax,DWORD PTR [rcx],0x1690169
  42589e:	outs   dx,DWORD PTR ds:[rsi]
  42589f:	add    DWORD PTR [rbx+0x1],ebp
  4258a2:	imul   eax,DWORD PTR [rcx],0x6b
  4258a5:	add    DWORD PTR [rax+0x1],esi
  4258a8:	add    BYTE PTR [rax],al
  4258aa:	outs   dx,DWORD PTR ds:[rsi]
  4258ab:	add    DWORD PTR [rbp+0x1],ebp
  4258ae:	ins    DWORD PTR es:[rdi],dx
  4258af:	add    DWORD PTR [rbp+0x1],ebp
  4258b2:	jo     0x4258b5
  4258b4:	jno    0x4258b7
	...
  4258be:	add    BYTE PTR [rax],al
  4258c0:	jae    0x4258c3
  4258c2:	push   0x1
  4258c4:	push   0x1
  4258c6:	push   0x1
  4258c8:	outs   dx,BYTE PTR ds:[rsi]
  4258c9:	add    DWORD PTR [rsi+0x1],ebp
  4258cc:	outs   dx,BYTE PTR ds:[rsi]
  4258cd:	add    DWORD PTR [rcx+rax*1+0x0],esi
  4258d1:	add    BYTE PTR [rax],al
  4258d3:	add    BYTE PTR [rdi+0x1],ch
  4258d6:	outs   dx,DWORD PTR ds:[rsi]
  4258d7:	add    DWORD PTR [rdi+0x1],ebp
  4258da:	jno    0x4258dd
  4258dc:	jo     0x4258df
  4258de:	jo     0x4258e1
  4258e0:	jo     0x4258e3
  4258e2:	jns    0x4258e5
  4258e4:	jb     0x4258e7
  4258e6:	jne    0x4258e9
  4258e8:	add    BYTE PTR [rax],al
  4258ea:	jno    0x4258ed
  4258ec:	jno    0x4258ef
  4258ee:	jno    0x4258f1
  4258f0:	jb     0x4258f3
  4258f2:	jbe    0x4258f5
  4258f4:	je     0x4258f7
  4258f6:	jae    0x4258f9
  4258f8:	jae    0x4258fb
  4258fa:	jae    0x4258fd
  4258fc:	js     0x4258ff
  4258fe:	add    BYTE PTR [rax],al
  425900:	jp     0x425903
  425902:	ja     0x425905
  425904:	je     0x425907
  425906:	je     0x425909
  425908:	je     0x42590b
  42590a:	jne    0x42590d
  42590c:	add    BYTE PTR [rax],al
  42590e:	add    BYTE PTR [rax],al
  425910:	jns    0x425913
  425912:	add    BYTE PTR [rax],al
  425914:	add    BYTE PTR [rax],al
  425916:	add    BYTE PTR [rax],al
  425918:	jbe    0x42591b
  42591a:	jb     0x42591d
  42591c:	jb     0x42591f
  42591e:	jb     0x425921
  425920:	add    BYTE PTR [rax],al
  425922:	js     0x425925
  425924:	jp     0x425927
  425926:	add    BYTE PTR [rax],al
  425928:	jbe    0x42592b
  42592a:	jbe    0x42592d
  42592c:	jbe    0x42592f
  42592e:	ja     0x425931
  425930:	add    BYTE PTR [rax],al
  425932:	js     0x425935
  425934:	js     0x425937
  425936:	js     0x425939
  425938:	ja     0x42593b
  42593a:	ja     0x42593d
  42593c:	ja     0x42593f
  42593e:	jle    0x425941
  425940:	jne    0x425943
  425942:	jne    0x425945
  425944:	jne    0x425947
  425946:	jns    0x425949
  425948:	jns    0x42594b
  42594a:	jns    0x42594d
  42594c:	jl     0x42594f
	...
  425956:	jle    0x425959
  425958:	jl     0x42595b
  42595a:	jp     0x42595d
  42595c:	jp     0x42595f
  42595e:	jp     0x425961
	...
  425974:	jle    0x425977
  425976:	jle    0x425979
  425978:	jle    0x42597b
	...
  425982:	jl     0x425985
  425984:	jl     0x425987
  425986:	jl     0x425989
  425988:	add    BYTE PTR [rcx],0x80
  42598b:	add    DWORD PTR [rax-0x7ffe7fff],eax
  425991:	add    DWORD PTR [rax-0x7ffe7fff],eax
  425997:	add    DWORD PTR [rax-0x7ffe7fff],eax
  42599d:	add    DWORD PTR [rax-0x7ffe7fff],eax
  4259a3:	add    DWORD PTR [rcx-0x7efe7eff],eax
  4259a9:	add    DWORD PTR [rcx-0x7efe7eff],eax
  4259af:	add    DWORD PTR [rcx-0x7efe7eff],eax
  4259b5:	add    DWORD PTR [rcx-0x7efe7eff],eax
  4259bb:	add    DWORD PTR [rcx-0x7dfe7eff],eax
  4259c1:	add    DWORD PTR [rdx-0x7dfe7dff],eax
  4259c7:	add    DWORD PTR [rdx-0x7dfe7dff],eax
  4259cd:	add    DWORD PTR [rdx-0x7dfe7dff],eax
  4259d3:	add    DWORD PTR [rdx-0x7dfe7dff],eax
  4259d9:	add    DWORD PTR [rdx-0x7cfe7cff],eax
  4259df:	add    DWORD PTR [rbx-0x7cfe7cff],eax
  4259e5:	add    DWORD PTR [rbx-0x7cfe7cff],eax
  4259eb:	add    DWORD PTR [rbx-0x7cfe7cff],eax
  4259f1:	add    DWORD PTR [rbx-0x7cfe7cff],eax
  4259f7:	add    DWORD PTR [rcx+rax*1+0x1840000],eax
  4259fe:	add    BYTE PTR [rax],al
  425a00:	test   BYTE PTR [rcx],al
  425a02:	add    BYTE PTR [rax],al
  425a04:	test   BYTE PTR [rcx],al
  425a06:	test   DWORD PTR [rcx],eax
  425a08:	add    BYTE PTR [rax],al
  425a0a:	add    BYTE PTR [rax],al
  425a0c:	test   DWORD PTR [rcx],eax
  425a0e:	add    BYTE PTR [rax],al
  425a10:	test   DWORD PTR [rcx],eax
  425a12:	test   DWORD PTR [rcx],eax
  425a14:	test   DWORD PTR [rcx],eax
  425a16:	test   DWORD PTR [rcx],eax
  425a18:	test   DWORD PTR [rcx],eax
  425a1a:	xchg   BYTE PTR [rcx],al
  425a1c:	xchg   BYTE PTR [rcx],al
  425a1e:	add    BYTE PTR [rax],al
  425a20:	xchg   BYTE PTR [rcx],al
  425a22:	xchg   BYTE PTR [rcx],al
  425a24:	xchg   BYTE PTR [rcx],al
  425a26:	xchg   BYTE PTR [rcx],al
  425a28:	xchg   BYTE PTR [rcx],al
  425a2a:	xchg   BYTE PTR [rcx],al
  425a2c:	xchg   DWORD PTR [rcx],eax
  425a2e:	xchg   DWORD PTR [rcx],eax
  425a30:	xchg   DWORD PTR [rcx],eax
  425a32:	xchg   DWORD PTR [rcx],eax
  425a34:	xchg   DWORD PTR [rcx],eax
  425a36:	xchg   DWORD PTR [rcx],eax
  425a38:	xchg   DWORD PTR [rcx],eax
  425a3a:	xchg   DWORD PTR [rcx],eax
  425a3c:	xchg   DWORD PTR [rcx],eax
  425a3e:	xchg   DWORD PTR [rcx],eax
  425a40:	xchg   DWORD PTR [rcx],eax
  425a42:	xchg   DWORD PTR [rcx],eax
  425a44:	xchg   DWORD PTR [rcx],eax
  425a46:	xchg   DWORD PTR [rcx],eax
  425a48:	mov    BYTE PTR [rcx],al
  425a4a:	mov    BYTE PTR [rcx],al
  425a4c:	mov    BYTE PTR [rcx],al
  425a4e:	mov    BYTE PTR [rcx],al
  425a50:	mov    BYTE PTR [rcx],al
  425a52:	mov    BYTE PTR [rcx],al
  425a54:	mov    BYTE PTR [rcx],al
  425a56:	mov    BYTE PTR [rcx],al
  425a58:	mov    BYTE PTR [rcx],al
  425a5a:	mov    BYTE PTR [rcx],al
  425a5c:	mov    BYTE PTR [rcx],al
  425a5e:	mov    BYTE PTR [rcx],al
  425a60:	mov    BYTE PTR [rcx],al
  425a62:	mov    DWORD PTR [rcx],eax
  425a64:	add    BYTE PTR [rax],al
  425a66:	mov    DWORD PTR [rcx],eax
  425a68:	mov    DWORD PTR [rcx],eax
  425a6a:	mov    DWORD PTR [rcx],eax
  425a6c:	mov    DWORD PTR [rcx],eax
  425a6e:	mov    DWORD PTR [rcx],eax
  425a70:	mov    DWORD PTR [rcx],eax
  425a72:	mov    DWORD PTR [rcx],eax
  425a74:	mov    DWORD PTR [rcx],eax
  425a76:	mov    DWORD PTR [rcx],eax
  425a78:	mov    DWORD PTR [rcx],eax
  425a7a:	mov    DWORD PTR [rcx],eax
  425a7c:	mov    DWORD PTR [rcx],eax
  425a7e:	mov    al,BYTE PTR [rcx]
  425a80:	add    BYTE PTR [rax],al
  425a82:	mov    al,BYTE PTR [rcx]
  425a84:	mov    al,BYTE PTR [rcx]
  425a86:	mov    al,BYTE PTR [rcx]
  425a88:	mov    al,BYTE PTR [rcx]
  425a8a:	mov    al,BYTE PTR [rcx]
  425a8c:	mov    al,BYTE PTR [rcx]
  425a8e:	mov    al,BYTE PTR [rcx]
  425a90:	mov    al,BYTE PTR [rcx]
  425a92:	mov    al,BYTE PTR [rcx]
  425a94:	mov    al,BYTE PTR [rcx]
  425a96:	mov    al,BYTE PTR [rcx]
  425a98:	mov    al,BYTE PTR [rcx]
  425a9a:	mov    eax,DWORD PTR [rcx]
  425a9c:	mov    eax,DWORD PTR [rcx]
  425a9e:	mov    eax,DWORD PTR [rcx]
  425aa0:	mov    eax,DWORD PTR [rcx]
  425aa2:	mov    eax,DWORD PTR [rcx]
  425aa4:	mov    eax,DWORD PTR [rcx]
  425aa6:	mov    eax,DWORD PTR [rcx]
  425aa8:	mov    eax,DWORD PTR [rcx]
  425aaa:	mov    eax,DWORD PTR [rcx]
  425aac:	mov    WORD PTR [rcx],es
  425aae:	mov    WORD PTR [rcx],es
  425ab0:	mov    WORD PTR [rcx],es
  425ab2:	lea    eax,[rcx]
	...
  425abc:	lea    eax,[rcx]
  425abe:	lea    eax,[rcx]
  425ac0:	lea    eax,[rcx]
  425ac2:	mov    es,WORD PTR [rcx]
  425ac4:	mov    es,WORD PTR [rcx]
  425ac6:	mov    es,WORD PTR [rcx]
  425ac8:	mov    es,WORD PTR [rcx]
  425aca:	mov    es,WORD PTR [rcx]
  425acc:	pop    QWORD PTR [rcx]
  425ace:	pop    QWORD PTR [rcx]
  425ad0:	pop    QWORD PTR [rcx]
  425ad2:	add    BYTE PTR [rax],al
  425ad4:	add    BYTE PTR [rax],al
  425ad6:	pop    QWORD PTR [rcx]
  425ad8:	nop
  425ad9:	add    DWORD PTR [rax-0x6efe6fff],edx
  425adf:	add    DWORD PTR [rcx-0x6efe6eff],edx
  425ae5:	add    DWORD PTR [rcx-0x6efe6eff],edx
  425aeb:	add    DWORD PTR [rcx+0x7f019101],edx
  425af1:	add    DWORD PTR [rdi+0x1],edi
  425af4:	jg     0x425af7
  425af6:	jg     0x425af9
  425af8:	jg     0x425afb
  425afa:	jg     0x425afd
  425afc:	jg     0x425aff
  425afe:	jg     0x425b01
  425b00:	jg     0x425b03
  425b02:	jg     0x425b05
  425b04:	jg     0x425b07
  425b06:	jg     0x425b09
  425b08:	jg     0x425b0b
  425b0a:	jg     0x425b0d
  425b0c:	jg     0x425b0f
  425b0e:	jg     0x425b11
  425b10:	jg     0x425b13
  425b12:	jg     0x425b15
  425b14:	jg     0x425b17
  425b16:	jg     0x425b19
  425b18:	jg     0x425b1b
  425b1a:	jg     0x425b1d
  425b1c:	jg     0x425b1f
  425b1e:	jg     0x425b21
  425b20:	jg     0x425b23
  425b22:	jg     0x425b25
  425b24:	jg     0x425b27
  425b26:	jg     0x425b29
  425b28:	jg     0x425b2b
  425b2a:	jg     0x425b2d
  425b2c:	jg     0x425b2f
  425b2e:	jg     0x425b31
  425b30:	jg     0x425b33
  425b32:	jg     0x425b35
  425b34:	jg     0x425b37
  425b36:	jg     0x425b39
  425b38:	jg     0x425b3b
  425b3a:	jg     0x425b3d
  425b3c:	jg     0x425b3f
  425b3e:	jg     0x425b41
  425b40:	jg     0x425b43
  425b42:	jg     0x425b45
  425b44:	jg     0x425b47
  425b46:	jg     0x425b49
  425b48:	jg     0x425b4b
  425b4a:	jg     0x425b4d
  425b4c:	jg     0x425b4f
  425b4e:	jg     0x425b51
  425b50:	jg     0x425b53
  425b52:	jg     0x425b55
  425b54:	jg     0x425b57
  425b56:	jg     0x425b59
  425b58:	jg     0x425b5b
  425b5a:	jg     0x425b5d
  425b5c:	jg     0x425b5f
  425b5e:	jg     0x425b61
  425b60:	jg     0x425b63
  425b62:	jg     0x425b65
  425b64:	jg     0x425b67
  425b66:	jg     0x425b69
  425b68:	jg     0x425b6b
  425b6a:	jg     0x425b6d
  425b6c:	jg     0x425b6f
  425b6e:	jg     0x425b71
  425b70:	jg     0x425b73
  425b72:	jg     0x425b75
  425b74:	jg     0x425b77
  425b76:	jg     0x425b79
	...
  425b80:	add    BYTE PTR [rax],al
  425b82:	or     BYTE PTR [rax],al
  425b84:	or     DWORD PTR [rax],eax
  425b86:	or     al,BYTE PTR [rax]
  425b88:	or     DWORD PTR [rax],eax
  425b8a:	or     BYTE PTR [rax],al
  425b8c:	or     eax,DWORD PTR [rax]
  425b8e:	or     al,0x0
  425b90:	or     BYTE PTR [rax],al
  425b92:	or     eax,0xf000e00
  425b97:	add    BYTE PTR [rax],dl
  425b99:	add    BYTE PTR [rcx],dl
  425b9b:	add    BYTE PTR [rdx],dl
  425b9d:	add    BYTE PTR [rdx],dl
  425b9f:	add    BYTE PTR [rdx],dl
  425ba1:	add    BYTE PTR [rdx],dl
  425ba3:	add    BYTE PTR [rdx],dl
  425ba5:	add    BYTE PTR [rdx],dl
  425ba7:	add    BYTE PTR [rax],cl
  425ba9:	add    BYTE PTR [rax],cl
  425bab:	add    BYTE PTR [rbx],dl
  425bad:	add    BYTE PTR [rbx],dl
  425baf:	add    BYTE PTR [rbx],dl
  425bb1:	add    BYTE PTR [rax+rax*1],dl
  425bb4:	adc    eax,0x13001600
  425bb9:	add    BYTE PTR [rdi],dl
  425bbb:	add    BYTE PTR [rbx],dl
  425bbd:	add    BYTE PTR [rbx],dl
  425bbf:	add    BYTE PTR [rax],bl
  425bc1:	add    BYTE PTR [rbx],dl
  425bc3:	add    BYTE PTR [rbx],dl
  425bc5:	add    BYTE PTR [rcx],bl
  425bc7:	add    BYTE PTR [rbx],dl
  425bc9:	add    BYTE PTR [rbx],dl
  425bcb:	add    BYTE PTR [rdx],bl
  425bcd:	add    BYTE PTR [rbx],bl
  425bcf:	add    BYTE PTR [rbx],dl
  425bd1:	add    BYTE PTR [rax+rax*1],bl
  425bd4:	sbb    eax,0x1f001e00
  425bd9:	add    BYTE PTR [rax],ah
  425bdb:	add    BYTE PTR [rcx],ah
  425bdd:	add    BYTE PTR [rbx],dl
  425bdf:	add    BYTE PTR [rdx],ah
  425be1:	add    BYTE PTR [rbx],dl
  425be3:	add    BYTE PTR [rbx],ah
  425be5:	add    BYTE PTR [rbx],dl
  425be7:	add    BYTE PTR [rax+rax*1],ah
  425bea:	and    eax,0x13001300
  425bef:	add    BYTE PTR [rsi],ah
  425bf1:	add    BYTE PTR [rdi],ah
  425bf3:	add    BYTE PTR [rax],ch
  425bf5:	add    BYTE PTR [rcx],ch
  425bf7:	add    BYTE PTR [rdx],ch
  425bf9:	add    BYTE PTR [rbx],dl
  425bfb:	add    BYTE PTR [rbx],dl
  425bfd:	add    BYTE PTR [rax],cl
  425bff:	add    BYTE PTR [rax],cl
  425c01:	add    BYTE PTR [rbx],ch
  425c03:	add    BYTE PTR [rax+rax*1],ch
  425c06:	sub    eax,0x34003200
  425c0b:	add    BYTE PTR [rdx],dh
  425c0d:	add    BYTE PTR [rax],bh
  425c0f:	add    BYTE PTR [rax],bh
  425c11:	add    BYTE PTR [rcx],bh
  425c13:	add    BYTE PTR [rcx],bh
  425c15:	add    BYTE PTR [rcx],bh
  425c17:	add    BYTE PTR [rcx],bh
  425c19:	add    BYTE PTR [rcx],bh
  425c1b:	add    BYTE PTR [rcx],bh
  425c1d:	add    BYTE PTR [rcx],bh
  425c1f:	add    BYTE PTR [rdx],dh
  425c21:	add    ch,bh
  425c23:	add    BYTE PTR [rdx],dh
  425c25:	add    BYTE PTR [rbx+0x0],cl
  425c28:	rex.WXB add BYTE PTR [r9+r8*1+0x3a],bpl
  425c2d:	add    BYTE PTR [rdx],bh
  425c2f:	add    BYTE PTR [rax+rax*1-0x1],cl
  425c33:	add    BYTE PTR [rbx],bh
  425c35:	add    BYTE PTR [rax+0x0],al
  425c38:	xor    al,0x0
  425c3a:	std    
  425c3b:	add    BYTE PTR [rsi+0x1],bl
  425c3e:	add    r14b,dil
  425c41:	add    bh,al
  425c43:	add    BYTE PTR [rax+rax*1+0x4b],cl
  425c47:	add    edi,edi
  425c49:	add    BYTE PTR [rip+0x4a004c00],dh        # 0x4a42a84f
  425c4f:	add    DWORD PTR [rdx],edi
  425c51:	add    BYTE PTR [rdx],bh
  425c53:	add    BYTE PTR [rax+rax*1],bh
  425c56:	cmp    al,0x0
  425c58:	cmp    al,0x0
  425c5a:	cmp    al,0x0
  425c5c:	cmp    al,0x0
  425c5e:	cmp    al,0x0
  425c60:	cmp    al,0x0
  425c62:	push   rax
  425c63:	add    BYTE PTR [rbx+0x0],dl
  425c66:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425c6a:	rex.WRXB add BYTE PTR [rip+0x3f003e00],r15b        # 0x3f429a71
  425c71:	add    BYTE PTR [rbx+0x0],al
  425c74:	mov    eax,DWORD PTR [rax]
  425c76:	cmp    eax,0x4d003500
  425c7b:	add    BYTE PTR [rsi+0x0],cl
  425c7e:	rex.WRXB add BYTE PTR [r14],r13b
  425c81:	add    DWORD PTR [rbp+0x0],ecx
  425c84:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425c88:	mov    DWORD PTR [rax],0x59004c
  425c8e:	sub    eax,0x3e003d01
  425c93:	add    BYTE PTR [rdi],bh
  425c95:	add    BYTE PTR [rcx+rax*1],ch
  425c98:	rex.WR add dil,r15b
  425c9b:	add    BYTE PTR [rbx],ch
  425c9d:	add    DWORD PTR [rip+0x29012a00],edi        # 0x294386a3
  425ca3:	add    DWORD PTR [rbx+0x0],ecx
  425ca6:	push   rsp
  425ca7:	add    BYTE PTR [rax+rax*1+0x45],al
  425cab:	add    BYTE PTR [rsi+0x0],al
  425cae:	cmp    BYTE PTR [rax],al
  425cb0:	rex.X add BYTE PTR [rdi+0x0],al
  425cb4:	rex.RXB add BYTE PTR [r15+0x0],r8b
  425cb8:	rex.RXB add BYTE PTR [r15+0x0],r8b
  425cbc:	rex.RXB add BYTE PTR [r15+0x0],r8b
  425cc0:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425cc4:	rex.WRXB add BYTE PTR [r8+0x0],r9b
  425cc8:	xchg   ebx,eax
  425cc9:	add    BYTE PTR [rsi],al
  425ccb:	add    DWORD PTR [rdx],edi
  425ccd:	add    BYTE PTR [rbp+0x0],cl
  425cd0:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425cd4:	rex.W add BYTE PTR [rbx+0x48008b00],dl
  425cdb:	add    BYTE PTR [rbx-0x2fffb700],dl
  425ce1:	add    BYTE PTR [rdx+0x0],cl
  425ce4:	add    eax,0x5500d001
  425ce9:	add    BYTE PTR [rax+0x0],cl
  425cec:	xchg   ebx,eax
  425ced:	add    BYTE PTR [rsi+0x0],dl
  425cf0:	cmp    al,BYTE PTR [rax]
  425cf2:	add    al,0x1
  425cf4:	mov    DWORD PTR [rax],0xd1005a
  425cfa:	rex.WXB add BYTE PTR [r8+0x0],cl
  425cfe:	xchg   ebx,eax
  425cff:	add    BYTE PTR [rax+rax*1-0x32],cl
  425d03:	add    BYTE PTR [rdi+0x0],dl
  425d06:	rex.X add al,dl
  425d09:	add    BYTE PTR [rax+0x0],cl
  425d0c:	xchg   ebx,eax
  425d0d:	add    BYTE PTR [rcx+0x0],cl
  425d10:	push   rcx
  425d11:	add    BYTE PTR [rcx+0x0],dl
  425d14:	pop    rax
  425d15:	add    al,dl
  425d17:	add    BYTE PTR [rdx+0x0],dl
  425d1a:	push   rdx
  425d1b:	add    BYTE PTR [rdx+0x0],dl
  425d1e:	push   rdx
  425d1f:	add    BYTE PTR [rdx+0x0],dl
  425d22:	push   rdx
  425d23:	add    BYTE PTR [rdx+0x0],dl
  425d26:	pop    rdx
  425d27:	add    BYTE PTR [rdx+0x0],bl
  425d2a:	pop    rdx
  425d2b:	add    BYTE PTR [rdx+0x0],bl
  425d2e:	pop    rdx
  425d2f:	add    BYTE PTR [rdx+0x0],bl
  425d32:	pop    rdx
  425d33:	add    BYTE PTR [rax+rax*1+0x4d],cl
  425d37:	add    BYTE PTR [rsi+0x0],cl
  425d3a:	rex.WRXB add BYTE PTR [r11+0x0],r11b
  425d3e:	pop    rsp
  425d3f:	add    BYTE PTR [rbp+0x0],bl
  425d42:	pop    rsi
  425d43:	add    BYTE PTR [rax+rax*1-0x33],cl
  425d47:	add    ah,cl
  425d49:	add    BYTE PTR [rax+rax*1+0x5f],cl
  425d4d:	add    BYTE PTR [rax+0x0],ah
  425d50:	mov    eax,DWORD PTR [rax]
  425d52:	rex.WR add sil,r8b
  425d55:	add    dl,al
  425d57:	add    BYTE PTR [rax+rax*1-0x3e],cl
  425d5b:	add    BYTE PTR [rax+0x0],ch
  425d5e:	jg     0x425d61
  425d60:	jge    0x425d62
  425d62:	(bad)  
  425d63:	add    BYTE PTR [rdx+0x0],ah
  425d66:	rol    DWORD PTR [rax],0x5a
  425d69:	add    BYTE PTR [rbp+0x0],cl
  425d6c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425d70:	movsxd eax,DWORD PTR [rax]
  425d72:	xchg   esi,eax
  425d73:	add    BYTE PTR [rbp+0x4b004c00],dl
  425d79:	add    BYTE PTR [rbp+0x0],cl
  425d7c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425d80:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425d84:	rex.WRXB add BYTE PTR [r8+r8*1+0x4d],r9b
  425d89:	add    BYTE PTR [rsi+0x0],cl
  425d8c:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  425d90:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425d94:	rex.WR add BYTE PTR [rdi+0x1],r15b
  425d98:	add    BYTE PTR fs:[rcx+0x0],ch
  425d9c:	rex.WR add BYTE PTR [rdx+0x6a009100],r10b
  425da3:	add    BYTE PTR [rdx+0x0],al
  425da6:	rex.WR add BYTE PTR [rbp+0x0],r12b
  425daa:	xchg   DWORD PTR [rax],eax
  425dac:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425db0:	rex.WRXB add BYTE PTR [r14+0x0],r12b
  425db4:	add    BYTE PTR [rax],0x4c
  425db7:	add    BYTE PTR [rdi+0x1],bh
  425dba:	imul   eax,DWORD PTR [rax],0x4d
  425dbd:	add    BYTE PTR [rsi+0x0],cl
  425dc0:	rex.WRXB add BYTE PTR [r8+0x0],r14b
  425dc4:	rex.WR add BYTE PTR [rdi+0x0],r13b
  425dc8:	ins    BYTE PTR es:[rdi],dx
  425dc9:	add    BYTE PTR [rbp+0x0],cl
  425dcc:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425dd0:	ins    DWORD PTR es:[rdi],dx
  425dd1:	add    BYTE PTR [rbp+0x0],cl
  425dd4:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425dd8:	outs   dx,BYTE PTR ds:[rsi]
  425dd9:	add    BYTE PTR [rax+rax*1+0x4d],cl
  425ddd:	add    BYTE PTR [rsi+0x0],cl
  425de0:	rex.WRXB add BYTE PTR [r8+r8*1+0x7e],r9b
  425de5:	add    BYTE PTR [rbp+0x0],bh
  425de8:	jnp    0x425dea
  425dea:	jp     0x425dec
  425dec:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425df0:	rex.WRXB add BYTE PTR [r8+r8*1+0x71],r9b
  425df5:	add    BYTE PTR [rcx+0x0],bh
  425df8:	pop    rdx
  425df9:	add    BYTE PTR [rbp+0x0],cl
  425dfc:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425e00:	add    BYTE PTR [edi+0x1],bh
  425e04:	(bad)  
  425e05:	add    BYTE PTR [rdi+0x1],bh
  425e08:	jae    0x425e0a
  425e0a:	jb     0x425e0c
  425e0c:	xor    DWORD PTR [rax],eax
  425e0e:	xor    DWORD PTR [rax],eax
  425e10:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425e14:	rex.WRXB add BYTE PTR [r15],r13b
  425e17:	add    BYTE PTR [rbp+0x0],cl
  425e1a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425e1e:	rex.WR add BYTE PTR [rdi],r13b
  425e21:	add    BYTE PTR [rdi+0x1],bh
  425e24:	je     0x425e26
  425e26:	jg     0x425e29
  425e28:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425e2c:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  425e30:	jg     0x425e33
  425e32:	jne    0x425e34
  425e34:	jg     0x425e37
  425e36:	jbe    0x425e38
  425e38:	jg     0x425e3b
  425e3a:	ja     0x425e3c
  425e3c:	mov    WORD PTR [rax],es
  425e3e:	jg     0x425e41
  425e40:	jg     0x425e43
  425e42:	jg     0x425e45
  425e44:	js     0x425e46
  425e46:	(bad)  
  425e47:	add    BYTE PTR [rdx-0x7dff7e00],al
  425e4d:	add    BYTE PTR [rdx+0x7f008200],al
  425e53:	add    DWORD PTR [rbp+0x0],ecx
  425e56:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425e5a:	test   DWORD PTR [rax],eax
  425e5c:	test   DWORD PTR [rax],eax
  425e5e:	jg     0x425e61
  425e60:	jg     0x425e63
  425e62:	xchg   BYTE PTR [rax],al
  425e64:	xchg   BYTE PTR [rax],al
  425e66:	xchg   BYTE PTR [rax],al
  425e68:	xchg   BYTE PTR [rax],al
  425e6a:	xchg   BYTE PTR [rax],al
  425e6c:	xchg   BYTE PTR [rax],al
  425e6e:	xchg   BYTE PTR [rax],al
  425e70:	lea    eax,[rax]
  425e72:	jg     0x425e75
  425e74:	jg     0x425e77
  425e76:	add    DWORD PTR [rax],0x38
  425e79:	add    BYTE PTR [rdi+0x1],bh
  425e7c:	test   BYTE PTR [rax],al
  425e7e:	test   BYTE PTR [rax],al
  425e80:	test   BYTE PTR [rax],al
  425e82:	test   BYTE PTR [rax],al
  425e84:	test   BYTE PTR [rax],al
  425e86:	test   BYTE PTR [rax],al
  425e88:	test   BYTE PTR [rax],al
  425e8a:	rex.WR add BYTE PTR [rdi+0x1],r15b
  425e8e:	jg     0x425e91
  425e90:	rex.W add BYTE PTR [rax+rax*1+0x7f],cl
  425e95:	add    DWORD PTR [rdx],edi
  425e97:	add    BYTE PTR [rdi+0x1],bh
  425e9a:	jg     0x425e9d
  425e9c:	jg     0x425e9f
  425e9e:	rex.W add BYTE PTR [rdi+0x1],dil
  425ea2:	jg     0x425ea5
  425ea4:	rex.W add BYTE PTR [rsi-0x6fff7100],cl
  425eab:	add    BYTE PTR [rdi+0x1],bh
  425eae:	jg     0x425eb1
  425eb0:	jg     0x425eb3
  425eb2:	jg     0x425eb5
  425eb4:	rex.W add BYTE PTR [rdi+0x1],dil
  425eb8:	jg     0x425ebb
  425eba:	cmp    al,BYTE PTR [rax]
  425ebc:	xchg   edi,eax
  425ebd:	add    BYTE PTR [rdi+0x1],bh
  425ec0:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425ec4:	rex.WRXB add BYTE PTR [r8+0x0],r9b
  425ec8:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425ecc:	rex.WRXB add BYTE PTR [r8+0x7f008800],r9b
  425ed3:	add    DWORD PTR [rax+0x0],ecx
  425ed6:	mov    DWORD PTR [rax],eax
  425ed8:	mov    DWORD PTR [rax],eax
  425eda:	mov    DWORD PTR [rax],eax
  425edc:	mov    DWORD PTR [rax],eax
  425ede:	mov    DWORD PTR [rax],eax
  425ee0:	mov    DWORD PTR [rax],eax
  425ee2:	mov    DWORD PTR [rax],eax
  425ee4:	rex.X add BYTE PTR [rdx+0x0],al
  425ee8:	rex.X add BYTE PTR [rdx+0x0],al
  425eec:	rex.X add BYTE PTR [rdx+0x0],al
  425ef0:	rex.X add BYTE PTR [rbx+0x0],cl
  425ef4:	rex.WXB add BYTE PTR [r11+0x0],cl
  425ef8:	rex.WXB add BYTE PTR [r11+0x0],cl
  425efc:	rex.WXB add BYTE PTR [r11+0x0],cl
  425f00:	jg     0x425f03
  425f02:	rol    BYTE PTR [rax],1
  425f04:	rex.WR add BYTE PTR [rdi+0x1],r15b
  425f08:	rol    BYTE PTR [rax],1
  425f0a:	popf   
  425f0b:	add    BYTE PTR [rdi+0x1],bh
  425f0e:	jg     0x425f11
  425f10:	rex.WR add BYTE PTR [rbx+0x0],r9b
  425f14:	jg     0x425f17
  425f16:	jg     0x425f19
  425f18:	jg     0x425f1b
  425f1a:	rex.WR add BYTE PTR [rax-0x66ff6500],r11b
  425f21:	add    BYTE PTR [rdx-0x67ff6400],bl
  425f27:	add    BYTE PTR [rsi+0x4c00d000],bl
  425f2d:	add    BYTE PTR [rdi+0x1],bh
  425f30:	jg     0x425f33
  425f32:	jg     0x425f35
  425f34:	rex.WR add BYTE PTR [rbx+0x0],r9b
  425f38:	rol    BYTE PTR [rax],1
  425f3a:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425f3e:	rex.WRXB add BYTE PTR [r8-0x66ffb400],r11b
  425f45:	add    BYTE PTR [rbp+0x0],cl
  425f48:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425f4c:	lahf   
  425f4d:	add    BYTE PTR [rax+0x4e004d00],bl
  425f53:	add    BYTE PTR [rdi+0x0],cl
  425f56:	rex.WR add BYTE PTR [rdi+0x1],r15b
  425f5a:	popf   
  425f5b:	add    BYTE PTR [rax+rax*1+0x7f],cl
  425f5f:	add    DWORD PTR [rdi+0x1],edi
  425f62:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425f66:	rex.WRXB add BYTE PTR [r11+0x0],r9b
  425f6a:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425f6e:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  425f73:	add    DWORD PTR [rdi+0x1],edi
  425f76:	jg     0x425f79
  425f78:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425f7c:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  425f81:	add    DWORD PTR [rax+0x7f004c00],esp
  425f87:	add    DWORD PTR [rdi+0x1],edi
  425f8a:	movabs eax,ds:0x4d004f004e004d00
  425f93:	add    BYTE PTR [rsi+0x0],cl
  425f96:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  425f9b:	add    DWORD PTR [rdx-0x5dffb400],ebp
  425fa1:	add    BYTE PTR [rdi+0x1],bh
  425fa4:	rex.WR add BYTE PTR [rbp+0x0],r9b
  425fa8:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425fac:	rex.WR add BYTE PTR [rdi+0x1],r15b
  425fb0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  425fb1:	add    BYTE PTR [rax+rax*1+0x4d],cl
  425fb5:	add    BYTE PTR [rsi+0x0],cl
  425fb8:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  425fbc:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425fc0:	movabs ds:0x4c00a800a400a600,eax
  425fc9:	add    BYTE PTR [rbp+0x4d00ab00],ah
  425fcf:	add    BYTE PTR [rsi+0x0],cl
  425fd2:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  425fd6:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425fda:	rex.WRB add BYTE PTR [r14+0x0],r9b
  425fde:	rex.WRXB add BYTE PTR [r8+r8*1+0x4d],r9b
  425fe3:	add    BYTE PTR [rsi+0x0],cl
  425fe6:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  425fea:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  425fee:	jg     0x425ff1
  425ff0:	test   eax,0x7f004c00
  425ff5:	add    DWORD PTR [rdi+0x1],edi
  425ff8:	rex.WR add BYTE PTR [rdi+0x1],r15b
  425ffc:	jg     0x425fff
  425ffe:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426002:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  426006:	jg     0x426009
  426008:	lods   al,BYTE PTR ds:[rsi]
  426009:	add    BYTE PTR [rax+rax*1-0x53],cl
  42600d:	add    BYTE PTR [rdi+0x1],bh
  426010:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426014:	jg     0x426017
  426016:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42601a:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  42601f:	add    DWORD PTR [rdi+0x1],edi
  426022:	scas   al,BYTE PTR es:[rdi]
  426023:	add    BYTE PTR [rdi+0x1],bh
  426026:	jg     0x426029
  426028:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42602c:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426030:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426034:	scas   eax,DWORD PTR es:[rdi]
  426035:	add    BYTE PTR [rax+rax*1-0x4e],cl
  426039:	add    BYTE PTR [rax+0x7f004c00],dh
  42603f:	add    DWORD PTR [rbp+0x0],ecx
  426042:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426046:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42604a:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  42604f:	add    DWORD PTR [rdi+0x1],edi
  426052:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426056:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  42605a:	mov    cl,0x0
  42605c:	rex.WR add BYTE PTR [rbp+0x4c017f00],r14b
  426063:	add    BYTE PTR [rdi+0x1],bh
  426066:	jg     0x426069
  426068:	mov    bl,0x0
  42606a:	rex.WR add BYTE PTR [rbp+0x0],r9b
  42606e:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426072:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426076:	rex.WRXB add BYTE PTR [r8+r8*1+0x4c009d],r14b
  42607e:	jg     0x426081
  426080:	mov    dh,0x0
  426082:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426086:	rex.WRXB add BYTE PTR [r8+r8*1-0x46],r9b
  42608b:	add    BYTE PTR [rdi+0x7f004c00],dh
  426091:	add    DWORD PTR [rbp+0x0],ecx
  426094:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426098:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42609c:	rex.WRXB add BYTE PTR [r8+r8*1+0x4d],r9b
  4260a1:	add    BYTE PTR [rsi+0x0],cl
  4260a4:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  4260a9:	add    DWORD PTR [rdi+0x1],edi
  4260ac:	mov    eax,0x7f004c00
  4260b1:	add    DWORD PTR [rbp+0x0],ecx
  4260b4:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4260b8:	jg     0x4260bb
  4260ba:	jg     0x4260bd
  4260bc:	rex.WR add BYTE PTR [rbp+0x0],r9b
  4260c0:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4260c4:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4260c8:	rex.WRXB add BYTE PTR [r9+0x4c00bb00],r15b
  4260cf:	add    BYTE PTR [rdi+0x1],bh
  4260d2:	rol    BYTE PTR [rax],0x4d
  4260d5:	add    BYTE PTR [rsi+0x0],cl
  4260d8:	rex.WRXB add BYTE PTR [r13+0x4e004d00],r15b
  4260df:	add    BYTE PTR [rdi+0x0],cl
  4260e2:	rex.WR add BYTE PTR [rbp+0x0],r9b
  4260e6:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4260ea:	mov    esp,0x7f004c00
  4260ef:	add    DWORD PTR [rdi+0x1],edi
  4260f2:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4260f6:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  4260fa:	mov    esi,0xbf017f00
  4260ff:	add    dl,al
  426101:	add    BYTE PTR [rdi+0x1],bh
  426104:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426108:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  42610c:	ret    
  42610d:	add    bl,al
  42610f:	add    bl,al
  426111:	add    bl,al
  426113:	add    bl,al
  426115:	add    bl,al
  426117:	add    BYTE PTR [rbp+0x0],cl
  42611a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42611e:	jg     0x426121
  426120:	jg     0x426123
  426122:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426126:	rex.WRXB add BYTE PTR [r14-0x79ff7a00],r8b
  42612d:	add    BYTE PTR [rsi-0x79ff7a00],al
  426133:	add    BYTE PTR [rsi-0x79ff7a00],al
  426139:	add    BYTE PTR [rsi-0x79ff7a00],al
  42613f:	add    BYTE PTR [rsi-0x73ff7a00],al
  426145:	add    BYTE PTR [rdi+0x1],bh
  426148:	jg     0x42614b
  42614a:	jg     0x42614d
  42614c:	jg     0x42614f
  42614e:	(bad)
  426151:	add    DWORD PTR [rdi],edi
  426153:	add    BYTE PTR [rdi+0x1],bh
  426156:	jg     0x426159
  426158:	(bad)
  42615b:	add    BYTE PTR [rcx-0x76ff7700],cl
  426161:	add    BYTE PTR [rcx-0x76ff7700],cl
  426167:	add    BYTE PTR [rdi+0x1],bh
  42616a:	jg     0x42616d
  42616c:	jg     0x42616f
  42616e:	jg     0x426171
  426170:	enter  0xc500,0x0
  426174:	jg     0x426177
  426176:	(bad)  
  426177:	add    BYTE PTR [rbp+0x7f017f00],cl
  42617d:	add    DWORD PTR [rdi+0x1],edi
  426180:	(bad)
  426183:	add    BYTE PTR [rcx-0x76ff7700],cl
  426189:	add    BYTE PTR [rcx-0x76ff7700],cl
  42618f:	add    BYTE PTR [rax+rax*1+0x7f],cl
  426193:	add    DWORD PTR [rdi+0x1],edi
  426196:	rol    BYTE PTR [rax],cl
  426198:	rex.WR add BYTE PTR [rip+0x3f017f00],r15b        # 0x3f43e09f
  42619f:	add    BYTE PTR [rax+rax*1+0x7f],cl
  4261a3:	add    DWORD PTR [rip+0xffffffffca00c900],edi        # 0xffffffffca432aa9
  4261a9:	add    bl,cl
  4261ab:	add    BYTE PTR [rdi+0x1],bh
  4261ae:	mov    es,WORD PTR [rax]
  4261b0:	pop    QWORD PTR [rax]
  4261b2:	nop
  4261b3:	add    BYTE PTR [rbx-0x74ff7500],cl
  4261b9:	add    BYTE PTR [rbx+0x3d008b00],cl
  4261bf:	add    BYTE PTR [rdi+0x1],bh
  4261c2:	(bad)  
  4261c3:	add    BYTE PTR [rdi+0x1],bh
  4261c6:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4261ca:	rex.WRXB add BYTE PTR [rip+0x4e004d00],r15b        # 0x4e42aed1
  4261d1:	add    BYTE PTR [rdi+0x0],cl
  4261d4:	mov    eax,DWORD PTR [rax]
  4261d6:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4261da:	rex.WRXB add BYTE PTR [r8+r8*1-0x2a],r9b
  4261df:	add    bl,dl
  4261e1:	add    BYTE PTR [rax+rax*1+0x7f],cl
  4261e5:	add    DWORD PTR [rdi+0x1],edi
  4261e8:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4261ec:	jg     0x4261ef
  4261ee:	rex.WR add spl,r10b
  4261f1:	add    al,bl
  4261f3:	add    BYTE PTR [rdi+0x1],bh
  4261f6:	(bad)  
  4261f7:	add    BYTE PTR [rbx-0x28ffb400],cl
  4261fd:	add    BYTE PTR [rdi+0x1],bh
  426200:	jg     0x426203
  426202:	jg     0x426205
  426204:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426208:	jg     0x42620b
  42620a:	jg     0x42620d
  42620c:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426210:	jg     0x426213
  426212:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426216:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  42621a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42621e:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426222:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426226:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42622a:	mov    eax,DWORD PTR [rax]
  42622c:	jg     0x42622f
  42622e:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426232:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426236:	fld    DWORD PTR [rax]
  426238:	fild   DWORD PTR [rax]
  42623a:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42623e:	rex.WRXB add BYTE PTR [r8+r8*1+0x4d],r9b
  426243:	add    BYTE PTR [rsi+0x0],cl
  426246:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  42624b:	add    edi,ebx
  42624d:	add    dl,bl
  42624f:	add    BYTE PTR [rax+rax*1+0x7f],cl
  426253:	add    DWORD PTR [rdi+0x1],edi
  426256:	jg     0x426259
  426258:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42625c:	fld    QWORD PTR [rax]
  42625e:	jg     0x426261
  426260:	fadd   QWORD PTR [rax]
  426262:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426266:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42626a:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42626e:	jg     0x426271
  426270:	jg     0x426273
  426272:	jg     0x426275
  426274:	jg     0x426277
  426276:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42627a:	rex.WRXB add r14b,r11b
  42627d:	add    BYTE PTR [rbp+0x0],cl
  426280:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426284:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426288:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42628c:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426290:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426294:	loopne 0x426296
  426296:	rex.WR add BYTE PTR [rbp+0x0],r9b
  42629a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42629e:	jg     0x4262a1
  4262a0:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4262a4:	rex.WRXB add BYTE PTR [r8+r8*1-0x1d],r9b
  4262a9:	add    cl,ah
  4262ab:	add    BYTE PTR [rax+rax*1+0x7f],cl
  4262af:	add    ebp,esp
  4262b1:	add    dl,ah
  4262b3:	add    BYTE PTR [rax+rax*1-0x1c],cl
  4262b7:	add    BYTE PTR [rdi+0x1],bh
  4262ba:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4262be:	rex.WRXB add r14b,r12b
  4262c1:	add    BYTE PTR [rbp+0x0],cl
  4262c4:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4262c8:	jg     0x4262cb
  4262ca:	jg     0x4262cd
  4262cc:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4262d0:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  4262d5:	add    DWORD PTR [rdi+0x1],edi
  4262d8:	out    0x0,eax
  4262da:	rex.WR add BYTE PTR [rbp+0x0],r9b
  4262de:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4262e2:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4262e6:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  4262ea:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4262ee:	rex.WRXB add r11b,r13b
  4262f1:	add    BYTE PTR [rax+rax*1-0x18],cl
  4262f5:	add    cl,ch
  4262f7:	add    BYTE PTR [rax+rax*1+0x7f],cl
  4262fb:	add    DWORD PTR [rdi+0x1],edi
  4262fe:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426302:	out    dx,al
  426303:	add    BYTE PTR [rdi+0x1],bh
  426306:	jg     0x426309
  426308:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42630c:	rex.WRXB add r13b,r13b
  42630f:	add    BYTE PTR [rbp+0x0],cl
  426312:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426316:	jg     0x426319
  426318:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42631c:	jg     0x42631f
  42631e:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426322:	(bad)  
  426323:	add    ah,ch
  426325:	add    bh,ch
  426327:	add    BYTE PTR [rbp+0x0],cl
  42632a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42632e:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426332:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426336:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42633a:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42633e:	jg     0x426341
  426340:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426344:	jg     0x426347
  426346:	rex.WR add dil,r10b
  426349:	add    BYTE PTR [rdi+0x1],bh
  42634c:	jg     0x42634f
  42634e:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426352:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426356:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42635a:	jg     0x42635d
  42635c:	jg     0x42635f
  42635e:	icebp  
  42635f:	add    BYTE PTR [rax+rax*1-0x10],cl
  426363:	add    BYTE PTR [rdi+0x1],bh
  426366:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42636a:	jg     0x42636d
  42636c:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426370:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426374:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426378:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42637c:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426380:	rex.WRXB add BYTE PTR [r8+r8*1-0xe],r9b
  426385:	add    BYTE PTR [rdi+0x1],bh
  426388:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42638c:	jg     0x42638f
  42638e:	hlt    
  42638f:	add    bl,dh
  426391:	add    BYTE PTR [rax+rax*1-0xb],cl
  426395:	add    BYTE PTR [rbp+0x0],cl
  426398:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42639c:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4263a0:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  4263a4:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4263a8:	jg     0x4263ab
  4263aa:	mov    WORD PTR [rax],es
  4263ac:	jg     0x4263af
  4263ae:	test   DWORD PTR [rax],0x4c00f6
  4263b4:	jg     0x4263b7
  4263b6:	jg     0x4263b9
  4263b8:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4263bc:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  4263c0:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4263c4:	rex.WR add al,r15b
  4263c7:	add    BYTE PTR [rbp+0x0],cl
  4263ca:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4263ce:	jg     0x4263d1
  4263d0:	rex.WR add bl,r15b
  4263d3:	add    bl,bh
  4263d5:	add    bl,bh
  4263d7:	add    bl,bh
  4263d9:	add    bl,bh
  4263db:	add    bl,bh
  4263dd:	add    BYTE PTR [rax],al
  4263df:	add    DWORD PTR [rdi+0x1],edi
  4263e2:	stc    
  4263e3:	add    dl,bh
  4263e5:	add    BYTE PTR [rdi+0x1],bh
  4263e8:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4263ec:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  4263f0:	jg     0x4263f3
  4263f2:	jg     0x4263f5
  4263f4:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4263f8:	jg     0x4263fb
  4263fa:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4263fe:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  426403:	add    DWORD PTR [rdi+0x1],edi
  426406:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42640a:	rex.WRXB add BYTE PTR [r15],r8b
  42640d:	add    DWORD PTR [rax+rax*1+0x7f],ecx
  426411:	add    DWORD PTR [rdi+0x1],edi
  426414:	add    DWORD PTR [rcx],eax
  426416:	add    al,BYTE PTR [rcx]
  426418:	add    eax,DWORD PTR [rcx]
  42641a:	mov    DWORD PTR [rax],0xc700c7
  426420:	mov    DWORD PTR [rax],0xc700c7
  426426:	mov    DWORD PTR [rax],0x4d0108
  42642c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426430:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426434:	or     al,BYTE PTR [rcx]
  426436:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42643a:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  42643f:	add    DWORD PTR [rdi+0x1],edi
  426442:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426446:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42644a:	or     eax,DWORD PTR [rcx]
  42644c:	or     DWORD PTR [rcx],eax
  42644e:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426452:	jg     0x426455
  426454:	jg     0x426457
  426456:	jg     0x426459
  426458:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42645c:	jg     0x42645f
  42645e:	or     al,0x1
  426460:	jg     0x426463
  426462:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426466:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42646a:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  42646f:	add    DWORD PTR [rdi+0x1],edi
  426472:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426476:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  42647a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42647e:	rex.WR add BYTE PTR [rsi],r9b
  426481:	add    DWORD PTR [rdi+0x1],edi
  426484:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426488:	rex.WRXB add BYTE PTR [r8],r10b
  42648b:	add    DWORD PTR [rax+rax*1+0x4d],ecx
  42648f:	add    BYTE PTR [rsi+0x0],cl
  426492:	rex.WRXB add BYTE PTR [r8+r8*1+0xd],r9b
  426497:	add    DWORD PTR [rbp+0x0],ecx
  42649a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42649e:	jg     0x4264a1
  4264a0:	rex.WR add BYTE PTR [rbp+0x0],r9b
  4264a4:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4264a8:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4264ac:	invlpg BYTE PTR [rdi+0x1]
  4264b0:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4264b4:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4264b8:	rex.WRXB add BYTE PTR [r9],r10b
  4264bb:	add    DWORD PTR [rdx],edx
  4264bd:	add    DWORD PTR [rbx],edx
  4264bf:	add    DWORD PTR [rax+rax*1+0x4d],ecx
  4264c3:	add    BYTE PTR [rsi+0x0],cl
  4264c6:	rex.WRXB add BYTE PTR [r8+r8*1+0x4d],r9b
  4264cb:	add    BYTE PTR [rsi+0x0],cl
  4264ce:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  4264d3:	add    DWORD PTR [rdi+0x1],edi
  4264d6:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4264da:	rex.WRXB add BYTE PTR [r8+r8*1+0x4d],r9b
  4264df:	add    BYTE PTR [rsi+0x0],cl
  4264e2:	rex.WRXB add BYTE PTR [r9+r8*1],r10b
  4264e6:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4264ea:	rex.WRXB add BYTE PTR [r14],r10b
  4264ed:	add    DWORD PTR [rip+0x7f004c01],edx        # 0x7f42b0f4
  4264f3:	add    DWORD PTR [rax],ebx
  4264f5:	add    DWORD PTR [rbp+0x0],ecx
  4264f8:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4264fc:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426500:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426504:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426508:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42650c:	(bad)  
  42650d:	add    DWORD PTR [rdi+0x1],edi
  426510:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426514:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426518:	rex.WR add BYTE PTR [rdx],r11b
  42651b:	add    DWORD PTR [rdi+0x1],edi
  42651e:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426522:	jg     0x426525
  426524:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426528:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42652c:	icebp  
  42652d:	add    BYTE PTR [rbx],bl
  42652f:	add    DWORD PTR [rdi+0x1],edi
  426532:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426536:	rex.WRXB add BYTE PTR [r9],r11b
  426539:	add    DWORD PTR [rbp+0x0],ecx
  42653c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426540:	jg     0x426543
  426542:	jg     0x426545
  426544:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426548:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42654c:	sbb    al,0x1
  42654e:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426552:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426556:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42655a:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42655e:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  426563:	add    DWORD PTR [rdi+0x1],edi
  426566:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42656a:	sbb    eax,0x4c017f01
  42656f:	add    BYTE PTR [rdi+0x1],bh
  426572:	jg     0x426575
  426574:	jg     0x426577
  426576:	jg     0x426579
  426578:	rex.WR add BYTE PTR [rbp+0x0],r9b
  42657c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426580:	jg     0x426583
  426582:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426586:	jg     0x426589
  426588:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42658c:	jg     0x42658f
  42658e:	rex.WR add BYTE PTR [rax],r12b
  426591:	add    DWORD PTR [rdi+0x1],edi
  426594:	jg     0x426597
  426596:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42659a:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  42659e:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4265a2:	(bad)  
  4265a3:	add    DWORD PTR [rbp+0x0],ecx
  4265a6:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4265aa:	(bad)  
  4265ab:	add    DWORD PTR [rbx],esp
  4265ad:	add    DWORD PTR [rbp+0x0],ecx
  4265b0:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4265b4:	and    DWORD PTR [rcx],eax
  4265b6:	rex.WR add BYTE PTR [rbp+0x0],r9b
  4265ba:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4265be:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4265c2:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  4265c6:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4265ca:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4265ce:	jg     0x4265d1
  4265d0:	add    DWORD PTR es:[rdi+0x1],edi
  4265d4:	rex.WR add BYTE PTR [rdx],r12b
  4265d7:	add    DWORD PTR [rdi+0x1],edi
  4265da:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4265de:	jg     0x4265e1
  4265e0:	and    al,0x1
  4265e2:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4265e6:	jg     0x4265e9
  4265e8:	jg     0x4265eb
  4265ea:	and    eax,0x4e004d01
  4265ef:	add    BYTE PTR [rdi+0x0],cl
  4265f2:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4265f6:	sub    BYTE PTR [rcx],al
  4265f8:	jg     0x4265fb
  4265fa:	mov    WORD PTR [rax],es
  4265fc:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426600:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426604:	rex.WRXB add BYTE PTR [r15],r12b
  426607:	add    DWORD PTR [rdi],ebp
  426609:	add    DWORD PTR [rbp+0x0],ecx
  42660c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426610:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426614:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  426618:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42661c:	rex.WRXB add r15b,r15b
  42661f:	add    bh,bh
  426621:	add    bh,bh
  426623:	add    bh,bh
  426625:	add    bh,bh
  426627:	add    BYTE PTR [rbp+0x0],cl
  42662a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42662e:	add    BYTE PTR [rcx],al
  426630:	xor    BYTE PTR [rcx],al
  426632:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426636:	rex.WRXB add BYTE PTR [r8+r8*1+0x32],r9b
  42663b:	add    DWORD PTR [rdi+0x1],edi
  42663e:	inc    DWORD PTR [rax]
  426640:	jg     0x426643
  426642:	rex.WR add BYTE PTR [rbx],r14b
  426645:	add    DWORD PTR [rdi+0x1],edi
  426648:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42664c:	xor    DWORD PTR [rcx],eax
  42664e:	jg     0x426651
  426650:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426654:	jg     0x426657
  426656:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42665a:	jg     0x42665d
  42665c:	jg     0x42665f
  42665e:	xor    al,0x1
  426660:	jg     0x426663
  426662:	inc    DWORD PTR [rax]
  426664:	add    DWORD PTR [rcx],eax
  426666:	add    al,BYTE PTR [rcx]
  426668:	add    eax,DWORD PTR [rcx]
  42666a:	jg     0x42666d
  42666c:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426670:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426674:	cmp    BYTE PTR [rcx],al
  426676:	jg     0x426679
  426678:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42667c:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426680:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426684:	jg     0x426687
  426686:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42668a:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  42668e:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426692:	rex.WR add dil,r15b
  426695:	add    BYTE PTR [rip+0x37004c01],dh        # 0x3742b29c
  42669b:	add    DWORD PTR [rsi],esi
  42669d:	add    DWORD PTR [rax+rax*1+0x7f],ecx
  4266a1:	add    DWORD PTR [rbp+0x0],ecx
  4266a4:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4266a8:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4266ac:	cmp    DWORD PTR [rcx],eax
  4266ae:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4266b2:	jg     0x4266b5
  4266b4:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4266b8:	jg     0x4266bb
  4266ba:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4266be:	cmp    al,0x1
  4266c0:	jg     0x4266c3
  4266c2:	cmp    eax,DWORD PTR [rcx]
  4266c4:	jg     0x4266c7
  4266c6:	cmp    al,BYTE PTR [rcx]
  4266c8:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4266cc:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  4266d0:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4266d4:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4266d8:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  4266dd:	add    DWORD PTR [rbp+0x0],ecx
  4266e0:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4266e4:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4266e8:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  4266ec:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4266f0:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4266f4:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  4266f9:	add    DWORD PTR [rax+0x1],eax
  4266fc:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426700:	jg     0x426703
  426702:	rex.WR add BYTE PTR [rip+0x3f017f01],r15b        # 0x3f43e60a
  426709:	add    DWORD PTR [rax+rax*1+0x7f],ecx
  42670d:	add    DWORD PTR [rdx],esi
  42670f:	add    DWORD PTR [rbp+0x0],ecx
  426712:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426716:	add    DWORD PTR [r8+rax*1+0x7f],ecx
  42671b:	add    DWORD PTR [rsi],edi
  42671d:	add    DWORD PTR [rax+rax*1+0x7f],ecx
  426721:	add    DWORD PTR [rdi+0x1],edi
  426724:	rex.WR add BYTE PTR [rdx],r14b
  426727:	add    DWORD PTR [rcx+rax*1+0x4c],eax
  42672b:	add    BYTE PTR [rbp+0x0],cl
  42672e:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426732:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426736:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  42673a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42673e:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426742:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426746:	rex.WR add BYTE PTR [rbp+0x1],r8b
  42674a:	add    DWORD PTR [rax+r8*1+0x4d],ecx
  42674f:	add    BYTE PTR [rsi+0x0],cl
  426752:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426756:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42675a:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42675e:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426762:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426766:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42676a:	jg     0x42676d
  42676c:	rex.WR add BYTE PTR [rbx+0x1],r8b
  426770:	jg     0x426773
  426772:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426776:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42677a:	rex.WR add BYTE PTR [rbp+0x0],r9b
  42677e:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426782:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426786:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  42678a:	rex.RX add DWORD PTR [rdi+0x1],r15d
  42678e:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426792:	jg     0x426795
  426794:	jg     0x426797
  426796:	jg     0x426799
  426798:	jg     0x42679b
  42679a:	rex.WR add BYTE PTR [rbp+0x0],r9b
  42679e:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4267a2:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4267a6:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  4267aa:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4267ae:	rex.RXB add DWORD PTR [r13+0x0],r9d
  4267b2:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4267b6:	add    QWORD PTR [rax+rax*1+0x4c],rcx
  4267bb:	add    DWORD PTR [rdi+0x1],edi
  4267be:	add    QWORD PTR [r8+rax*1+0x7f],rcx
  4267c3:	add    DWORD PTR [rbp+0x0],ecx
  4267c6:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4267ca:	jg     0x4267cd
  4267cc:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4267d0:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4267d4:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  4267d9:	add    DWORD PTR [rdi+0x1],edi
  4267dc:	add    QWORD PTR [r8+rax*1+0x4f],r9
  4267e1:	add    DWORD PTR [rdi+0x1],edi
  4267e4:	jg     0x4267e7
  4267e6:	jg     0x4267e9
  4267e8:	rex.WR add BYTE PTR [rax+0x1],r10b
  4267ec:	jg     0x4267ef
  4267ee:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4267f2:	rex.WRXB add BYTE PTR [r8+r8*1+0x4d],r9b
  4267f7:	add    BYTE PTR [rsi+0x0],cl
  4267fa:	rex.WRXB add BYTE PTR [r8+r8*1+0x4e],r9b
  4267ff:	add    DWORD PTR [rdi+0x1],edi
  426802:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426806:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  42680a:	rex.WR add BYTE PTR [rbp+0x0],r9b
  42680e:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426812:	jg     0x426815
  426814:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426818:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  42681d:	add    DWORD PTR [rbp+0x0],ecx
  426820:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426824:	push   rcx
  426825:	add    DWORD PTR [rdx+0x1],edx
  426828:	rex.WR add BYTE PTR [rbp+0x0],r9b
  42682c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426830:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426834:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426838:	rex.WR add BYTE PTR [rcx+rax*1+0x53],r10b
  42683d:	add    DWORD PTR [rax+rax*1+0x4d],ecx
  426841:	add    BYTE PTR [rsi+0x0],cl
  426844:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  426848:	jg     0x42684b
  42684a:	jg     0x42684d
  42684c:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426850:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426854:	rex.WRXB add BYTE PTR [r13+0x1],r10b
  426858:	push   rbp
  426859:	add    DWORD PTR [rdi+0x1],edi
  42685c:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426860:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426864:	push   rsi
  426865:	add    DWORD PTR [rbp+0x0],ecx
  426868:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42686c:	push   rdi
  42686d:	add    DWORD PTR [rbp+0x0],ecx
  426870:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426874:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426878:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  42687c:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426880:	jg     0x426883
  426882:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426886:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  42688b:	add    DWORD PTR [rdi+0x1],edi
  42688e:	jg     0x426891
  426890:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426894:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426898:	pop    rax
  426899:	add    DWORD PTR [rdi+0x1],edi
  42689c:	pop    rcx
  42689d:	add    DWORD PTR [rdi+0x1],edi
  4268a0:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4268a4:	jg     0x4268a7
  4268a6:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4268aa:	jg     0x4268ad
  4268ac:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4268b0:	jg     0x4268b3
  4268b2:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4268b6:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  4268bb:	add    DWORD PTR [rdi+0x1],edi
  4268be:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4268c2:	rex.WRXB add r13b,r13b
  4268c5:	add    BYTE PTR [rbp+0x0],cl
  4268c8:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4268cc:	jg     0x4268cf
  4268ce:	rex.WR add BYTE PTR [rdx+0x1],r11b
  4268d2:	jg     0x4268d5
  4268d4:	rex.WR add BYTE PTR [rbp+0x0],r9b
  4268d8:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4268dc:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4268e0:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  4268e4:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4268e8:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4268ec:	pop    rbp
  4268ed:	add    DWORD PTR [rbp+0x0],ecx
  4268f0:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4268f4:	pop    rbx
  4268f5:	add    DWORD PTR [rcx+rax*1+0x4c],ebx
  4268f9:	add    BYTE PTR [rdi+0x1],bh
  4268fc:	jg     0x4268ff
  4268fe:	jg     0x426901
  426900:	(bad)  
  426901:	add    DWORD PTR [rax+rax*1+0x4d],ecx
  426905:	add    BYTE PTR [rsi+0x0],cl
  426908:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  42690c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426910:	(bad)  
  426911:	add    BYTE PTR [rax+rax*1+0x5f],cl
  426915:	add    DWORD PTR [rdi+0x1],edi
  426918:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42691c:	jg     0x42691f
  42691e:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426922:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  426926:	jg     0x426929
  426928:	jg     0x42692b
  42692a:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42692e:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426932:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  426936:	rex.WR add BYTE PTR [rbp+0x0],r9b
  42693a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  42693e:	(bad)  
  426940:	(bad)  
  426941:	add    DWORD PTR [rbx+0x1],esp
  426944:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426948:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42694c:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426950:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426954:	jg     0x426957
  426956:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42695a:	jg     0x42695d
  42695c:	add    DWORD PTR gs:[rax+rax*1+0x4d],ecx
  426961:	add    BYTE PTR [rsi+0x0],cl
  426964:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  426969:	add    DWORD PTR [rsi+0x1],esp
  42696c:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426970:	rex.WRXB add BYTE PTR [r9+r8*1+0x4c],r12b
  426975:	add    BYTE PTR [rdi+0x1],bh
  426978:	jg     0x42697b
  42697a:	rex.WRB add BYTE PTR [r14+0x0],r9b
  42697e:	rex.WRXB add BYTE PTR [r13+0x1],r10b
  426982:	jg     0x426985
  426984:	jg     0x426987
  426986:	rex.WR add BYTE PTR [rdi+0x1],r15b
  42698a:	jg     0x42698d
  42698c:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426990:	rex.WRXB add BYTE PTR [r13+0x1],r10b
  426994:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426998:	rex.WRXB add BYTE PTR [r8+r8*1+0x4d],r9b
  42699d:	add    BYTE PTR [rsi+0x0],cl
  4269a0:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  4269a4:	add    DWORD PTR [eax+eax*1+0x7f],ecx
  4269a9:	add    DWORD PTR [rbp+0x0],ecx
  4269ac:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4269b0:	jg     0x4269b3
  4269b2:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4269b6:	jg     0x4269b9
  4269b8:	jg     0x4269bb
  4269ba:	rex.WR add BYTE PTR [rbp+0x0],r9b
  4269be:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4269c2:	rex.WR add BYTE PTR [rax+0x1],r13b
  4269c6:	push   0x1
  4269c8:	outs   dx,BYTE PTR ds:[rsi]
  4269c9:	add    DWORD PTR [rdi+0x1],edi
  4269cc:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4269d0:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4269d4:	rex.WRXB add BYTE PTR [r9+0x1],r13b
  4269d8:	imul   eax,DWORD PTR [rcx],0x4c
  4269db:	add    BYTE PTR [rbp+0x0],cl
  4269de:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  4269e2:	rex.WR add BYTE PTR [rdi+0x1],r15b
  4269e6:	and    eax,0x4e004d01
  4269eb:	add    BYTE PTR [rdi+0x0],cl
  4269ee:	jg     0x4269f1
  4269f0:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4269f4:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  4269f8:	rex.WRB add BYTE PTR [r14+0x0],r9b
  4269fc:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  426a01:	add    DWORD PTR [rbp+0x0],ecx
  426a04:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426a08:	rex.WR add BYTE PTR [rdi+0x1],r13b
  426a0c:	ins    DWORD PTR es:[rdi],dx
  426a0d:	add    DWORD PTR [rax+0x1],esi
  426a10:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426a14:	rex.WRXB add r12b,r10b
  426a17:	add    BYTE PTR [rbp+0x0],cl
  426a1a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426a1e:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426a22:	jg     0x426a25
  426a24:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426a28:	jg     0x426a2b
  426a2a:	jg     0x426a2d
  426a2c:	jg     0x426a2f
  426a2e:	jg     0x426a31
  426a30:	jno    0x426a33
  426a32:	jg     0x426a35
  426a34:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426a38:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  426a3d:	add    DWORD PTR [rbp+0x0],ecx
  426a40:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426a44:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426a48:	jg     0x426a4b
  426a4a:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426a4e:	jg     0x426a51
  426a50:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426a54:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426a58:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426a5c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426a60:	jg     0x426a63
  426a62:	rex.WR add BYTE PTR [rdx+0x1],r14b
  426a66:	jg     0x426a69
  426a68:	jae    0x426a6b
  426a6a:	rex.WR add BYTE PTR [rcx+rax*1+0x67],r14b
  426a6f:	add    DWORD PTR [rbp+0x0],ecx
  426a72:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426a76:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426a7a:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426a7e:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426a82:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426a86:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426a8a:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  426a8f:	add    DWORD PTR [rbp+0x1],esi
  426a92:	rex.WR add BYTE PTR [rcx+0x1],r15b
  426a96:	outs   dx,BYTE PTR ds:[rsi]
  426a97:	add    DWORD PTR [rbp+0x0],ecx
  426a9a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426a9e:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426aa2:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426aa6:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426aaa:	jbe    0x426aad
  426aac:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426ab0:	rex.WRXB add BYTE PTR [r15+0x1],r14b
  426ab4:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426ab8:	jg     0x426abb
  426aba:	jg     0x426abd
  426abc:	jg     0x426abf
  426abe:	jg     0x426ac1
  426ac0:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426ac4:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426ac8:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426acc:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  426ad1:	add    DWORD PTR [rdi+0x1],edi
  426ad4:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426ad8:	rex.WRXB add BYTE PTR [r8+0x1],r15b
  426adc:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426ae0:	rex.WRXB add BYTE PTR [r13+0x1],r10b
  426ae4:	rex.WR add BYTE PTR [rbx+0x1],r15b
  426ae8:	jg     0x426aeb
  426aea:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426aee:	rex.WRXB add BYTE PTR [r13+0x1],r10b
  426af2:	rex.WR add BYTE PTR [rdx+0x1],r15b
  426af6:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426afa:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  426aff:	add    DWORD PTR [rbp+0x1],edi
  426b02:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426b06:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426b0a:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426b0e:	jg     0x426b11
  426b10:	rex.WR add BYTE PTR [rdi+0x1],r15b
  426b14:	jg     0x426b17
  426b16:	jg     0x426b19
  426b18:	push   rbp
  426b19:	add    DWORD PTR [rbp+0x0],ecx
  426b1c:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426b20:	jg     0x426b23
  426b22:	push   rbp
  426b23:	add    DWORD PTR [rax+rax*1+0x7f],ecx
  426b27:	add    DWORD PTR [rbp+0x0],ecx
  426b2a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426b2e:	jl     0x426b31
  426b30:	jg     0x426b33
  426b32:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426b36:	rex.WRXB add BYTE PTR [r13+0x0],r9b
  426b3a:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426b3e:	rex.WR add BYTE PTR [rbp+0x0],r9b
  426b42:	rex.WRX add BYTE PTR [rdi+0x0],r9b
  426b46:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426b4a:	rex.WRXB add BYTE PTR [r8+r8*1+0x7f],r9b
  426b4f:	add    DWORD PTR [rdi+0x1],edi
  426b52:	jg     0x426b55
  426b54:	jg     0x426b57
  426b56:	push   rbp
  426b57:	add    DWORD PTR [rsi+0x1],edi
  426b5a:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426b5e:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  426b62:	jg     0x426b65
  426b64:	jg     0x426b67
  426b66:	jg     0x426b69
  426b68:	jg     0x426b6b
  426b6a:	jg     0x426b6d
  426b6c:	jg     0x426b6f
  426b6e:	jg     0x426b71
  426b70:	jg     0x426b73
  426b72:	jg     0x426b75
  426b74:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426b78:	rex.WRXB add BYTE PTR [r15+0x1],r15b
  426b7c:	jg     0x426b7f
  426b7e:	jg     0x426b81
  426b80:	jg     0x426b83
  426b82:	rex.WRB add BYTE PTR [r14+0x0],r9b
  426b86:	rex.WRXB add BYTE PTR [r14],r13b
  426b89:	add    BYTE PTR [rsi],ch
  426b8b:	add    BYTE PTR [rsi],ch
  426b8d:	add    BYTE PTR [rsi],ch
  426b8f:	add    BYTE PTR [rsi],ch
  426b91:	add    BYTE PTR [rsi],ch
  426b93:	add    BYTE PTR [rsi],ch
  426b95:	add    BYTE PTR [rsi],ch
  426b97:	add    BYTE PTR [rsi],ch
  426b99:	add    BYTE PTR [rsi],ch
  426b9b:	add    BYTE PTR [rsi],ch
  426b9d:	add    BYTE PTR [rsi],ch
  426b9f:	add    BYTE PTR [rsi],ch
  426ba1:	add    BYTE PTR [rsi],ch
  426ba3:	add    BYTE PTR [rax],dh
  426ba5:	add    BYTE PTR [rax],dh
  426ba7:	add    BYTE PTR [rax],dh
  426ba9:	add    BYTE PTR [rax],dh
  426bab:	add    BYTE PTR [rax],dh
  426bad:	add    BYTE PTR [rax],dh
  426baf:	add    BYTE PTR [rax],dh
  426bb1:	add    BYTE PTR [rax],dh
  426bb3:	add    BYTE PTR [rax],dh
  426bb5:	add    BYTE PTR [rax],dh
  426bb7:	add    BYTE PTR [rax],dh
  426bb9:	add    BYTE PTR [rax],dh
  426bbb:	add    BYTE PTR [rax],dh
  426bbd:	add    BYTE PTR [rax],dh
  426bbf:	add    BYTE PTR [rbx],dh
  426bc1:	add    BYTE PTR [rbx],dh
  426bc3:	add    BYTE PTR [rbx],dh
  426bc5:	add    BYTE PTR [rbx],dh
  426bc7:	add    BYTE PTR [rbx],dh
  426bc9:	add    BYTE PTR [rbx],dh
  426bcb:	add    BYTE PTR [rbx],dh
  426bcd:	add    BYTE PTR [rbx],dh
  426bcf:	add    BYTE PTR [rbx],dh
  426bd1:	add    BYTE PTR [rbx],dh
  426bd3:	add    BYTE PTR [rbx],dh
  426bd5:	add    BYTE PTR [rbx],dh
  426bd7:	add    BYTE PTR [rbx],dh
  426bd9:	add    BYTE PTR [rbx],dh
  426bdb:	add    BYTE PTR [rsi],dh
  426bdd:	add    BYTE PTR [rsi],dh
  426bdf:	add    BYTE PTR [rsi],dh
  426be1:	add    BYTE PTR [rsi],dh
  426be3:	add    BYTE PTR [rsi],dh
  426be5:	add    BYTE PTR [rsi],dh
  426be7:	add    BYTE PTR [rsi],dh
  426be9:	add    BYTE PTR [rsi],dh
  426beb:	add    BYTE PTR [rsi],dh
  426bed:	add    BYTE PTR [rsi],dh
  426bef:	add    BYTE PTR [rsi],dh
  426bf1:	add    BYTE PTR [rsi],dh
  426bf3:	add    BYTE PTR [rsi],dh
  426bf5:	add    BYTE PTR [rsi],dh
  426bf7:	add    BYTE PTR [rcx],bh
  426bf9:	add    BYTE PTR [rdi+0x1],bh
  426bfc:	cmp    DWORD PTR [rax],eax
  426bfe:	jg     0x426c01
  426c00:	cmp    DWORD PTR [rax],eax
  426c02:	jg     0x426c05
  426c04:	cmp    DWORD PTR [rax],eax
  426c06:	rex.X add BYTE PTR [rdi+0x1],dil
  426c0a:	jg     0x426c0d
  426c0c:	rex.X add BYTE PTR [rdi+0x1],dil
  426c10:	rex.X add BYTE PTR [rdx+0x0],al
  426c14:	rex.X add BYTE PTR [rdx+0x0],al
  426c18:	rex.X add BYTE PTR [rbx+0x0],cl
  426c1c:	rex.WXB add BYTE PTR [r15+0x1],dil
  426c20:	rex.WXB add BYTE PTR [r11+0x0],cl
  426c24:	rex.WXB add BYTE PTR [r11+0x0],cl
  426c28:	rex.WXB add BYTE PTR [r11+0x0],cl
  426c2c:	jl     0x426c2e
  426c2e:	jl     0x426c30
  426c30:	jl     0x426c32
  426c32:	jl     0x426c34
  426c34:	jl     0x426c36
  426c36:	jl     0x426c38
  426c38:	jl     0x426c3a
  426c3a:	jl     0x426c3c
  426c3c:	jl     0x426c3e
  426c3e:	jl     0x426c40
  426c40:	jl     0x426c42
  426c42:	jl     0x426c44
  426c44:	jl     0x426c46
  426c46:	jl     0x426c48
  426c48:	jg     0x426c4a
  426c4a:	jg     0x426c4c
  426c4c:	jg     0x426c4e
  426c4e:	jg     0x426c50
  426c50:	jg     0x426c52
  426c52:	jg     0x426c54
  426c54:	jg     0x426c56
  426c56:	jg     0x426c58
  426c58:	jg     0x426c5a
  426c5a:	jg     0x426c5c
  426c5c:	jg     0x426c5e
  426c5e:	jg     0x426c60
  426c60:	jg     0x426c62
  426c62:	add    DWORD PTR [rax],0x81017f
  426c68:	add    DWORD PTR [rax],0x810081
  426c6e:	add    DWORD PTR [rax],0x810081
  426c74:	add    DWORD PTR [rax],0x810081
  426c7a:	add    DWORD PTR [rax],0x8a0081
  426c80:	jg     0x426c83
  426c82:	mov    al,BYTE PTR [rax]
  426c84:	mov    al,BYTE PTR [rax]
  426c86:	mov    al,BYTE PTR [rax]
  426c88:	mov    al,BYTE PTR [rax]
  426c8a:	mov    al,BYTE PTR [rax]
  426c8c:	mov    al,BYTE PTR [rax]
  426c8e:	mov    al,BYTE PTR [rax]
  426c90:	mov    al,BYTE PTR [rax]
  426c92:	mov    al,BYTE PTR [rax]
  426c94:	mov    al,BYTE PTR [rax]
  426c96:	mov    al,BYTE PTR [rax]
  426c98:	mov    al,BYTE PTR [rax]
  426c9a:	mov    eax,DWORD PTR [rax]
  426c9c:	mov    eax,DWORD PTR [rax]
  426c9e:	mov    eax,DWORD PTR [rax]
  426ca0:	mov    eax,DWORD PTR [rax]
  426ca2:	mov    eax,DWORD PTR [rax]
  426ca4:	mov    eax,DWORD PTR [rax]
  426ca6:	mov    eax,DWORD PTR [rax]
  426ca8:	mov    eax,DWORD PTR [rax]
  426caa:	mov    eax,DWORD PTR [rax]
  426cac:	xchg   esp,eax
  426cad:	add    BYTE PTR [rax+rax*1+0xc40094],dl
  426cb4:	jg     0x426cb7
  426cb6:	jg     0x426cb9
  426cb8:	jg     0x426cbb
  426cba:	jg     0x426cbd
  426cbc:	(bad)  
  426cbd:	add    ah,al
  426cbf:	add    ah,al
  426cc1:	add    bh,al
  426cc3:	add    bh,al
  426cc5:	add    bh,al
  426cc7:	add    bh,al
  426cc9:	add    bh,al
  426ccb:	add    bh,cl
  426ccd:	add    bh,cl
  426ccf:	add    bh,cl
  426cd1:	add    BYTE PTR [rdi+0x1],bh
  426cd4:	jg     0x426cd7
  426cd6:	iret   
  426cd7:	add    ah,bh
  426cd9:	add    ah,bh
  426cdb:	add    ah,bh
  426cdd:	add    bh,bh
  426cdf:	add    bh,bh
  426ce1:	add    bh,bh
  426ce3:	add    bh,bh
  426ce5:	add    bh,bh
  426ce7:	add    bh,bh
  426ce9:	add    bh,bh
  426ceb:	add    bh,bh
  426ced:	add    bh,bh
  426cef:	add    BYTE PTR [rdi],al
  426cf1:	add    BYTE PTR [rdi+0x1],bh
  426cf4:	jg     0x426cf7
  426cf6:	jg     0x426cf9
  426cf8:	jg     0x426cfb
  426cfa:	jg     0x426cfd
  426cfc:	jg     0x426cff
  426cfe:	jg     0x426d01
  426d00:	jg     0x426d03
  426d02:	jg     0x426d05
  426d04:	jg     0x426d07
  426d06:	jg     0x426d09
  426d08:	jg     0x426d0b
  426d0a:	jg     0x426d0d
  426d0c:	jg     0x426d0f
  426d0e:	jg     0x426d11
  426d10:	jg     0x426d13
  426d12:	jg     0x426d15
  426d14:	jg     0x426d17
  426d16:	jg     0x426d19
  426d18:	jg     0x426d1b
  426d1a:	jg     0x426d1d
  426d1c:	jg     0x426d1f
  426d1e:	jg     0x426d21
  426d20:	jg     0x426d23
  426d22:	jg     0x426d25
  426d24:	jg     0x426d27
  426d26:	jg     0x426d29
  426d28:	jg     0x426d2b
  426d2a:	jg     0x426d2d
  426d2c:	jg     0x426d2f
  426d2e:	jg     0x426d31
  426d30:	jg     0x426d33
  426d32:	jg     0x426d35
  426d34:	jg     0x426d37
  426d36:	jg     0x426d39
  426d38:	jg     0x426d3b
  426d3a:	jg     0x426d3d
  426d3c:	jg     0x426d3f
  426d3e:	jg     0x426d41
  426d40:	jg     0x426d43
  426d42:	jg     0x426d45
  426d44:	jg     0x426d47
  426d46:	jg     0x426d49
  426d48:	jg     0x426d4b
  426d4a:	jg     0x426d4d
  426d4c:	jg     0x426d4f
  426d4e:	jg     0x426d51
  426d50:	jg     0x426d53
  426d52:	jg     0x426d55
  426d54:	jg     0x426d57
  426d56:	jg     0x426d59
  426d58:	jg     0x426d5b
  426d5a:	jg     0x426d5d
  426d5c:	jg     0x426d5f
  426d5e:	jg     0x426d61
  426d60:	jg     0x426d63
  426d62:	jg     0x426d65
  426d64:	jg     0x426d67
  426d66:	jg     0x426d69
  426d68:	jg     0x426d6b
  426d6a:	jg     0x426d6d
  426d6c:	jg     0x426d6f
  426d6e:	jg     0x426d71
  426d70:	jg     0x426d73
  426d72:	jg     0x426d75
  426d74:	jg     0x426d77
  426d76:	jg     0x426d79
	...
  426d80:	add    BYTE PTR [rax],al
  426d82:	jg     0x426d85
  426d84:	add    DWORD PTR [rax],eax
  426d86:	add    BYTE PTR [rcx],0x80
  426d89:	add    DWORD PTR [rcx+0x7f018101],eax
  426d8f:	add    DWORD PTR [rdi+0x1],edi
  426d92:	jg     0x426d95
  426d94:	jg     0x426d97
  426d96:	(bad)  
  426d97:	add    DWORD PTR [rbx-0x7bfe80ff],eax
  426d9d:	add    DWORD PTR [rdi+0x1],edi
  426da0:	test   DWORD PTR [rcx],eax
  426da2:	jg     0x426da5
  426da4:	adc    DWORD PTR [rax],eax
  426da6:	xchg   BYTE PTR [rcx],al
  426da8:	xchg   BYTE PTR [rcx],al
  426daa:	xchg   BYTE PTR [rcx],al
  426dac:	xchg   BYTE PTR [rcx],al
  426dae:	xchg   BYTE PTR [rcx],al
  426db0:	xchg   BYTE PTR [rcx],al
  426db2:	xchg   BYTE PTR [rcx],al
  426db4:	jg     0x426db7
  426db6:	xchg   BYTE PTR [rcx],al
  426db8:	xchg   BYTE PTR [rcx],al
  426dba:	xchg   BYTE PTR [rcx],al
  426dbc:	xchg   BYTE PTR [rcx],al
  426dbe:	adc    eax,0x86018600
  426dc3:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426dc9:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426dcf:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426dd5:	add    DWORD PTR [rdi+0x1],edi
  426dd8:	jg     0x426ddb
  426dda:	jg     0x426ddd
  426ddc:	xchg   DWORD PTR [rcx],eax
  426dde:	xchg   DWORD PTR [rcx],eax
  426de0:	mov    BYTE PTR [rcx],al
  426de2:	jg     0x426de5
  426de4:	jg     0x426de7
  426de6:	(bad)  
  426de7:	add    DWORD PTR [rdi+0x1],edi
  426dea:	(bad)  
  426deb:	add    DWORD PTR [rdi+0x1],edi
  426dee:	mov    DWORD PTR [rcx],eax
  426df0:	(bad)  
  426df2:	jg     0x426df5
  426df4:	jg     0x426df7
  426df6:	jg     0x426df9
  426df8:	(bad)  
  426dfa:	jg     0x426dfd
  426dfc:	jg     0x426dff
  426dfe:	jg     0x426e01
  426e00:	jg     0x426e03
  426e02:	mov    al,BYTE PTR [rcx]
  426e04:	mov    eax,DWORD PTR [rcx]
  426e06:	jg     0x426e09
  426e08:	jg     0x426e0b
  426e0a:	jg     0x426e0d
  426e0c:	jg     0x426e0f
  426e0e:	adc    DWORD PTR [rax],eax
  426e10:	jg     0x426e13
  426e12:	jg     0x426e15
  426e14:	mov    WORD PTR [rcx],es
  426e16:	xchg   BYTE PTR [rcx],al
  426e18:	jg     0x426e1b
  426e1a:	jg     0x426e1d
  426e1c:	jg     0x426e1f
  426e1e:	jg     0x426e21
  426e20:	xchg   BYTE PTR [rcx],al
  426e22:	adc    eax,0x86001500
  426e27:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e2d:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e33:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e39:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e3f:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e45:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e4b:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e51:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e57:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e5d:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e63:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e69:	add    DWORD PTR [rsi-0x79fe79ff],eax
  426e6f:	add    DWORD PTR [rsi+0x7f018601],eax
  426e75:	add    DWORD PTR [rdi+0x1],edi
  426e78:	xchg   DWORD PTR [rcx],eax
  426e7a:	xchg   DWORD PTR [rcx],eax
  426e7c:	jg     0x426e7f
  426e7e:	mov    BYTE PTR [rcx],al
  426e80:	jg     0x426e83
  426e82:	jg     0x426e85
  426e84:	jg     0x426e87
  426e86:	lea    eax,[rcx]
  426e88:	cmp    DWORD PTR [rax],eax
  426e8a:	jg     0x426e8d
  426e8c:	jg     0x426e8f
  426e8e:	jg     0x426e91
  426e90:	jg     0x426e93
  426e92:	jg     0x426e95
  426e94:	mov    al,BYTE PTR [rcx]
  426e96:	mov    eax,DWORD PTR [rcx]
  426e98:	mov    es,WORD PTR [rcx]
  426e9a:	jg     0x426e9d
  426e9c:	jg     0x426e9f
  426e9e:	jg     0x426ea1
  426ea0:	jg     0x426ea3
  426ea2:	jg     0x426ea5
  426ea4:	jg     0x426ea7
  426ea6:	jg     0x426ea9
  426ea8:	pop    QWORD PTR [rcx]
  426eaa:	jg     0x426ead
  426eac:	jg     0x426eaf
  426eae:	xchg   BYTE PTR [rcx],al
  426eb0:	xchg   BYTE PTR [rcx],al
  426eb2:	xchg   BYTE PTR [rcx],al
  426eb4:	xchg   BYTE PTR [rcx],al
  426eb6:	xchg   BYTE PTR [rcx],al
  426eb8:	xchg   BYTE PTR [rcx],al
  426eba:	xchg   BYTE PTR [rcx],al
  426ebc:	xchg   BYTE PTR [rcx],al
  426ebe:	xchg   BYTE PTR [rcx],al
  426ec0:	xchg   BYTE PTR [rcx],al
  426ec2:	xchg   BYTE PTR [rcx],al
  426ec4:	xchg   BYTE PTR [rcx],al
  426ec6:	xchg   BYTE PTR [rcx],al
  426ec8:	xchg   BYTE PTR [rcx],al
  426eca:	xchg   BYTE PTR [rcx],al
  426ecc:	xchg   BYTE PTR [rcx],al
  426ece:	xchg   BYTE PTR [rcx],al
  426ed0:	xchg   BYTE PTR [rcx],al
  426ed2:	xchg   BYTE PTR [rcx],al
  426ed4:	xchg   BYTE PTR [rcx],al
  426ed6:	xchg   BYTE PTR [rcx],al
  426ed8:	xchg   BYTE PTR [rcx],al
  426eda:	xchg   BYTE PTR [rcx],al
  426edc:	xchg   BYTE PTR [rcx],al
  426ede:	xchg   BYTE PTR [rcx],al
  426ee0:	xchg   BYTE PTR [rcx],al
  426ee2:	xchg   BYTE PTR [rcx],al
  426ee4:	xchg   BYTE PTR [rcx],al
  426ee6:	xchg   BYTE PTR [rcx],al
  426ee8:	xchg   BYTE PTR [rcx],al
  426eea:	xchg   BYTE PTR [rcx],al
  426eec:	xchg   BYTE PTR [rcx],al
  426eee:	xchg   BYTE PTR [rcx],al
  426ef0:	xchg   BYTE PTR [rcx],al
  426ef2:	xchg   BYTE PTR [rcx],al
  426ef4:	xchg   BYTE PTR [rcx],al
  426ef6:	xchg   BYTE PTR [rcx],al
  426ef8:	xchg   BYTE PTR [rcx],al
  426efa:	xchg   BYTE PTR [rcx],al
  426efc:	xchg   BYTE PTR [rcx],al
  426efe:	xchg   BYTE PTR [rcx],al
  426f00:	xchg   BYTE PTR [rcx],al
  426f02:	jg     0x426f05
  426f04:	jg     0x426f07
  426f06:	jg     0x426f09
  426f08:	nop
  426f09:	add    DWORD PTR [rdi+0x1],edi
  426f0c:	jg     0x426f0f
  426f0e:	xchg   ecx,eax
  426f0f:	add    DWORD PTR [rdi+0x1],edi
  426f12:	jg     0x426f15
  426f14:	jg     0x426f17
  426f16:	jg     0x426f19
  426f18:	jg     0x426f1b
  426f1a:	jg     0x426f1d
  426f1c:	jg     0x426f1f
  426f1e:	pop    QWORD PTR [rcx]
  426f20:	jg     0x426f23
  426f22:	jg     0x426f25
  426f24:	xchg   BYTE PTR [rcx],al
  426f26:	xchg   BYTE PTR [rcx],al
  426f28:	xchg   BYTE PTR [rcx],al
  426f2a:	xchg   BYTE PTR [rcx],al
  426f2c:	xchg   BYTE PTR [rcx],al
  426f2e:	xchg   BYTE PTR [rcx],al
  426f30:	xchg   BYTE PTR [rcx],al
  426f32:	xchg   BYTE PTR [rcx],al
  426f34:	xchg   BYTE PTR [rcx],al
  426f36:	xchg   BYTE PTR [rcx],al
  426f38:	xchg   BYTE PTR [rcx],al
  426f3a:	xchg   BYTE PTR [rcx],al
  426f3c:	xchg   BYTE PTR [rcx],al
  426f3e:	xchg   BYTE PTR [rcx],al
  426f40:	xchg   BYTE PTR [rcx],al
  426f42:	xchg   BYTE PTR [rcx],al
  426f44:	xchg   BYTE PTR [rcx],al
  426f46:	xchg   BYTE PTR [rcx],al
  426f48:	xchg   BYTE PTR [rcx],al
  426f4a:	xchg   BYTE PTR [rcx],al
  426f4c:	xchg   BYTE PTR [rcx],al
  426f4e:	xchg   BYTE PTR [rcx],al
  426f50:	xchg   BYTE PTR [rcx],al
  426f52:	xchg   BYTE PTR [rcx],al
  426f54:	xchg   BYTE PTR [rcx],al
  426f56:	xchg   BYTE PTR [rcx],al
  426f58:	xchg   BYTE PTR [rcx],al
  426f5a:	xchg   BYTE PTR [rcx],al
  426f5c:	xchg   BYTE PTR [rcx],al
  426f5e:	xchg   BYTE PTR [rcx],al
  426f60:	xchg   BYTE PTR [rcx],al
  426f62:	xchg   BYTE PTR [rcx],al
  426f64:	xchg   BYTE PTR [rcx],al
  426f66:	xchg   BYTE PTR [rcx],al
  426f68:	xchg   BYTE PTR [rcx],al
  426f6a:	xchg   BYTE PTR [rcx],al
  426f6c:	xchg   BYTE PTR [rcx],al
  426f6e:	xchg   BYTE PTR [rcx],al
  426f70:	xchg   BYTE PTR [rcx],al
  426f72:	xchg   BYTE PTR [rcx],al
  426f74:	xchg   BYTE PTR [rcx],al
  426f76:	jg     0x426f79
  426f78:	jg     0x426f7b
  426f7a:	jg     0x426f7d
  426f7c:	jg     0x426f7f
  426f7e:	xchg   ecx,eax
  426f7f:	add    DWORD PTR [rdi+0x1],edi
  426f82:	jg     0x426f85
  426f84:	jg     0x426f87
  426f86:	jg     0x426f89
  426f88:	jg     0x426f8b
  426f8a:	jg     0x426f8d
  426f8c:	jg     0x426f8f
  426f8e:	xchg   BYTE PTR [rcx],al
  426f90:	xchg   BYTE PTR [rcx],al
  426f92:	xchg   BYTE PTR [rcx],al
  426f94:	xchg   BYTE PTR [rcx],al
  426f96:	xchg   BYTE PTR [rcx],al
  426f98:	xchg   BYTE PTR [rcx],al
  426f9a:	xchg   BYTE PTR [rcx],al
  426f9c:	xchg   BYTE PTR [rcx],al
  426f9e:	xchg   BYTE PTR [rcx],al
  426fa0:	xchg   BYTE PTR [rcx],al
  426fa2:	xchg   BYTE PTR [rcx],al
  426fa4:	xchg   BYTE PTR [rcx],al
  426fa6:	xchg   BYTE PTR [rcx],al
  426fa8:	xchg   BYTE PTR [rcx],al
  426faa:	xchg   BYTE PTR [rcx],al
  426fac:	jg     0x426faf
  426fae:	xchg   BYTE PTR [rcx],al
  426fb0:	xchg   BYTE PTR [rcx],al
  426fb2:	xchg   BYTE PTR [rcx],al
  426fb4:	xchg   BYTE PTR [rcx],al
  426fb6:	xchg   BYTE PTR [rcx],al
  426fb8:	xchg   BYTE PTR [rcx],al
  426fba:	xchg   BYTE PTR [rcx],al
  426fbc:	xchg   BYTE PTR [rcx],al
  426fbe:	xchg   BYTE PTR [rcx],al
  426fc0:	xchg   BYTE PTR [rcx],al
  426fc2:	xchg   BYTE PTR [rcx],al
  426fc4:	xchg   BYTE PTR [rcx],al
  426fc6:	xchg   BYTE PTR [rcx],al
  426fc8:	xchg   BYTE PTR [rcx],al
  426fca:	xchg   BYTE PTR [rcx],al
  426fcc:	xchg   BYTE PTR [rcx],al
  426fce:	xchg   BYTE PTR [rcx],al
  426fd0:	xchg   BYTE PTR [rcx],al
  426fd2:	jg     0x426fd5
  426fd4:	jg     0x426fd7
  426fd6:	jg     0x426fd9
  426fd8:	jg     0x426fdb
  426fda:	jg     0x426fdd
  426fdc:	jg     0x426fdf
  426fde:	xchg   BYTE PTR [rcx],al
  426fe0:	xchg   BYTE PTR [rcx],al
  426fe2:	xchg   BYTE PTR [rcx],al
  426fe4:	xchg   BYTE PTR [rcx],al
  426fe6:	xchg   BYTE PTR [rcx],al
  426fe8:	xchg   BYTE PTR [rcx],al
  426fea:	xchg   BYTE PTR [rcx],al
  426fec:	xchg   BYTE PTR [rcx],al
  426fee:	xchg   BYTE PTR [rcx],al
  426ff0:	xchg   BYTE PTR [rcx],al
  426ff2:	xchg   BYTE PTR [rcx],al
  426ff4:	xchg   BYTE PTR [rcx],al
  426ff6:	xchg   BYTE PTR [rcx],al
  426ff8:	xchg   BYTE PTR [rcx],al
  426ffa:	xchg   BYTE PTR [rcx],al
  426ffc:	xchg   BYTE PTR [rcx],al
  426ffe:	xchg   BYTE PTR [rcx],al
  427000:	jg     0x427003
  427002:	xchg   BYTE PTR [rcx],al
  427004:	xchg   BYTE PTR [rcx],al
  427006:	xchg   BYTE PTR [rcx],al
  427008:	jg     0x42700b
  42700a:	xchg   BYTE PTR [rcx],al
  42700c:	xchg   BYTE PTR [rcx],al
  42700e:	xchg   BYTE PTR [rcx],al
  427010:	xchg   BYTE PTR [rcx],al
  427012:	xchg   BYTE PTR [rcx],al
  427014:	jg     0x427017
  427016:	jg     0x427019
  427018:	xchg   BYTE PTR [rcx],al
  42701a:	xchg   BYTE PTR [rcx],al
  42701c:	xchg   BYTE PTR [rcx],al
  42701e:	xchg   BYTE PTR [rcx],al
  427020:	xchg   BYTE PTR [rcx],al
  427022:	xchg   BYTE PTR [rcx],al
  427024:	xchg   BYTE PTR [rcx],al
  427026:	xchg   BYTE PTR [rcx],al
  427028:	xchg   BYTE PTR [rcx],al
  42702a:	xchg   BYTE PTR [rcx],al
  42702c:	xchg   BYTE PTR [rcx],al
  42702e:	xchg   BYTE PTR [rcx],al
  427030:	xchg   BYTE PTR [rcx],al
  427032:	xchg   BYTE PTR [rcx],al
  427034:	xchg   BYTE PTR [rcx],al
  427036:	xchg   BYTE PTR [rcx],al
  427038:	xchg   BYTE PTR [rcx],al
  42703a:	xchg   BYTE PTR [rcx],al
  42703c:	jg     0x42703f
  42703e:	xchg   BYTE PTR [rcx],al
  427040:	xchg   BYTE PTR [rcx],al
  427042:	xchg   BYTE PTR [rcx],al
  427044:	xchg   BYTE PTR [rcx],al
  427046:	xchg   BYTE PTR [rcx],al
  427048:	xchg   BYTE PTR [rcx],al
  42704a:	xchg   BYTE PTR [rcx],al
  42704c:	xchg   BYTE PTR [rcx],al
  42704e:	xchg   BYTE PTR [rcx],al
  427050:	xchg   BYTE PTR [rcx],al
  427052:	xchg   BYTE PTR [rcx],al
  427054:	xchg   BYTE PTR [rcx],al
  427056:	xchg   BYTE PTR [rcx],al
  427058:	jg     0x42705b
  42705a:	xchg   BYTE PTR [rcx],al
  42705c:	xchg   BYTE PTR [rcx],al
  42705e:	xchg   BYTE PTR [rcx],al
  427060:	xchg   BYTE PTR [rcx],al
  427062:	xchg   BYTE PTR [rcx],al
  427064:	xchg   BYTE PTR [rcx],al
  427066:	xchg   BYTE PTR [rcx],al
  427068:	xchg   BYTE PTR [rcx],al
  42706a:	xchg   BYTE PTR [rcx],al
  42706c:	xchg   BYTE PTR [rcx],al
  42706e:	xchg   BYTE PTR [rcx],al
  427070:	xchg   BYTE PTR [rcx],al
  427072:	xchg   BYTE PTR [rcx],al
  427074:	xchg   BYTE PTR [rcx],al
  427076:	jg     0x427079
  427078:	xchg   BYTE PTR [rcx],al
  42707a:	jg     0x42707d
  42707c:	xchg   BYTE PTR [rcx],al
  42707e:	add    BYTE PTR [rax],al
  427080:	jg     0x427083
  427082:	jg     0x427085
  427084:	jg     0x427087
  427086:	jg     0x427089
  427088:	jg     0x42708b
  42708a:	jg     0x42708d
  42708c:	jg     0x42708f
  42708e:	jg     0x427091
  427090:	jg     0x427093
  427092:	jg     0x427095
  427094:	jg     0x427097
  427096:	jg     0x427099
  427098:	jg     0x42709b
  42709a:	jg     0x42709d
  42709c:	jg     0x42709f
  42709e:	jg     0x4270a1
  4270a0:	jg     0x4270a3
  4270a2:	jg     0x4270a5
	...
  4270c4:	add    BYTE PTR [rax],al
  4270c6:	add    QWORD PTR [rbx+0x1],rax
  4270ca:	or     BYTE PTR [rcx],al
  4270cc:	(bad)  
  4270cd:	add    DWORD PTR [rbx+0x1],eax
  4270d0:	mov    eax,0xb8004208
  4270d5:	or     BYTE PTR [rdi],bh
  4270d7:	add    BYTE PTR [rcx+rax*1],bl
  4270da:	cmp    al,0x0
  4270dc:	cmp    eax,0x53005d00
  4270e1:	add    BYTE PTR [rax+rax*1+0x32011c],cl
  4270e8:	cmp    al,0x0
  4270ea:	mov    edi,0x5f004000
  4270ef:	add    BYTE PTR [rdx-0x39ff9a00],bl
  4270f5:	add    dh,al
  4270f7:	add    BYTE PTR [rax+rax*1+0xe400c3],dh
  4270fe:	or     al,0x1
  427100:	mov    esp,0xdd00d500
  427105:	add    al,ch
  427107:	add    ah,bh
  427109:	add    ch,ch
  42710b:	add    ch,dh
  42710d:	add    BYTE PTR [rbx],cl
  42710f:	add    DWORD PTR [rdi],eax
  427111:	add    DWORD PTR [rcx],ebp
  427113:	add    DWORD PTR [rbx],edx
  427115:	add    esp,edi
  427117:	add    ch,dh
  427119:	add    ah,dh
  42711b:	add    BYTE PTR [rbx],ch
  42711d:	add    DWORD PTR [rsi],esp
  42711f:	add    DWORD PTR [rax],eax
  427121:	add    BYTE PTR [rax+0x56004e08],bh
  427127:	add    BYTE PTR [rax+0x13011908],bh
  42712d:	add    DWORD PTR [rsi+0x1],edx
  427130:	add    BYTE PTR [rax],al
  427132:	jno    0x427135
  427134:	fs add ecx,esp
  427137:	add    BYTE PTR [rax],al
  427139:	add    BYTE PTR [rax-0x47fe61f8],bh
  42713f:	or     BYTE PTR [rax+0x52000008],bh
  427145:	add    DWORD PTR [rbp-0x2fff2dff],esp
  42714b:	add    bh,cl
  42714d:	add    dh,ah
  42714f:	add    BYTE PTR [rax+0x8d08],bh
  427155:	add    BYTE PTR [rdi+0x1],bl
  427158:	mov    ch,0x1
  42715a:	mov    esp,0xb900ba00
  42715f:	add    BYTE PTR [rbx+0x1],ah
  427162:	rex.WX add BYTE PTR [rbp-0x5dfe63ff],sil
  427169:	add    DWORD PTR [rax-0x4bfe58ff],esi
  42716f:	add    DWORD PTR [rbx-0x3afe37ff],edi
  427175:	add    edx,edx
  427177:	add    ecx,ebx
  427179:	add    esp,ebx
  42717b:	add    eax,esi
  42717d:	add    esp,ebp
  42717f:	add    ecx,ebp
  427181:	add    esi,edi
  427183:	add    esi,esp
  427185:	add    ebx,esi
  427187:	add    DWORD PTR [rdx],ecx
  427189:	add    dl,BYTE PTR [rbx]
  42718b:	add    dl,BYTE PTR [rsi]
  42718d:	add    bl,BYTE PTR [rdi]
  42718f:	add    ch,BYTE PTR [rax]
  427191:	add    bh,BYTE PTR [rax]
  427193:	add    ah,BYTE PTR [rdx]
  427195:	add    al,BYTE PTR [rax+0x2]
  427198:	rex.W add sil,BYTE PTR [rip+0x58024b02]        # 0x5844bca1
  42719f:	add    bl,BYTE PTR [rsi+0x2]
  4271a2:	(bad)  
  4271a3:	add    ch,BYTE PTR [rbp+0x2]
  4271a6:	rex.WRXB add r13b,BYTE PTR [r9+0x2]
  4271aa:	add    DWORD PTR [rdx],0x28b0278
  4271b0:	nop
  4271b1:	add    dh,BYTE PTR [rcx+0x2]
  4271b4:	mov    ah,0x0
  4271b6:	mov    bl,0x0
  4271b8:	call   0xffffffffb84354bd
  4271bd:	or     BYTE PTR [rax],al
  4271bf:	add    BYTE PTR [rax-0x46ff19f8],bh
  4271c5:	add    ah,ah
  4271c7:	add    BYTE PTR [rax],al
  4271c9:	add    bh,al
  4271cb:	add    cl,dh
  4271cd:	add    bh,BYTE PTR [rbp-0xbfd2000]
  4271d3:	add    al,BYTE PTR [rax]
  4271d5:	add    dh,dl
  4271d7:	add    dl,dl
  4271d9:	add    dl,BYTE PTR [rsi]
  4271db:	add    ebp,DWORD PTR [rax-0x5cff5c00]
  4271e1:	add    BYTE PTR [rbx-0x47ff7f00],al
  4271e7:	or     BYTE PTR [rdx+0x7c007d00],dl
  4271ed:	add    dl,ah
  4271ef:	add    ah,dh
  4271f1:	add    ch,dl
  4271f3:	add    cl,BYTE PTR [rax]
  4271f5:	add    ecx,DWORD PTR [rbx]
  4271f7:	add    edx,DWORD PTR [rdi]
  4271f9:	add    ecx,DWORD PTR [rsi]
  4271fb:	add    edx,DWORD PTR [rcx]
  4271fd:	add    ebx,DWORD PTR [rbx+rax*1]
  427200:	and    BYTE PTR [rbx],al
  427202:	cmp    al,BYTE PTR [rbx]
  427204:	xor    DWORD PTR [rbx],eax
  427206:	add    eax,DWORD PTR ds:[rdx+0x3]
  42720a:	rex.RX add r9d,DWORD PTR [rbx+0x3]
  42720e:	rex.WRXB add r12,QWORD PTR [r8+0x3]
  427212:	ins    DWORD PTR es:[rdi],dx
  427213:	add    ebx,DWORD PTR [rbx+rax*1+0x65]
  427217:	add    esi,DWORD PTR [rax+0x3]
  42721a:	je     0x42721f
  42721c:	add    DWORD PTR [rbx],0xffffff87
  42721f:	add    edx,DWORD PTR [rbx-0x59fc69fd]
  427225:	add    ebx,DWORD PTR [rcx-0x56fc48fd]
  42722b:	add    edi,DWORD PTR [rdx-0x35fc42fd]
  427231:	add    ecx,ebp
  427233:	add    ebx,ebx
  427235:	add    edx,eax
  427237:	add    ebx,esi
  427239:	add    esp,ebx
  42723b:	add    esi,ebx
  42723d:	add    edi,esp
  42723f:	add    eax,DWORD PTR [rdx]
  427241:	add    al,0x7b
  427243:	add    BYTE PTR [rax+0x41c08],bh
  427249:	add    BYTE PTR [rax+0x9003008],bh
  42724f:	add    al,0x40
  427251:	add    al,0x7a
  427253:	add    BYTE PTR [rcx+0x0],bh
  427256:	jb     0x427258
  427258:	ins    BYTE PTR es:[rdi],dx
  427259:	add    BYTE PTR [rbp+0x0],ah
  42725c:	pop    rax
  42725d:	add    BYTE PTR [rbx+0x5208b801],ah
  427263:	add    BYTE PTR [rsp+rax*1],dl
  427266:	sbb    al,BYTE PTR [rcx+riz*1]
  427269:	add    al,0x32
  42726b:	add    al,0x41
  42726d:	add    al,0x38
  42726f:	add    al,0x46
  427271:	add    al,0x3b
  427273:	add    al,0x59
  427275:	add    al,0x50
  427277:	add    al,0x64
  427279:	add    al,0x4b
  42727b:	add    al,0x6a
  42727d:	add    al,0x6e
  42727f:	add    al,0x72
  427281:	add    al,0x7a
  427283:	add    al,0x60
  427285:	add    al,0x7e
  427287:	add    al,0x82
  427289:	add    al,0xa2
  42728b:	add    al,0x92
  42728d:	add    al,0x88
  42728f:	add    al,0x98
  427291:	add    al,0x9c
  427293:	add    al,0xa6
  427295:	add    al,0xbc
  427297:	add    al,0xa9
  427299:	add    al,0xac
  42729b:	add    al,0xcd
  42729d:	add    al,0xca
  42729f:	add    al,0xd6
  4272a1:	add    al,0xd1
  4272a3:	add    al,0xdb
  4272a5:	add    al,0xde
  4272a7:	add    al,0xe1
  4272a9:	add    al,0xff
  4272ab:	add    al,0x4
  4272ad:	add    eax,0x4f50507
  4272b2:	or     eax,DWORD PTR [rip+0x8a0513]        # 0xcc77cb
  4272b8:	mov    DWORD PTR [rax],eax
  4272ba:	mov    eax,0x31005a08
  4272bf:	add    eax,0x4d054b
  4272c4:	rex.WXB add BYTE PTR [r15+0x0],al
  4272c8:	add    BYTE PTR [rax+0x0],r8b
  4272cc:	cmp    al,BYTE PTR [rax]
  4272ce:	sbb    BYTE PTR [rip+0x536053b],al        # 0x578780f
  4272d4:	rex.X add eax,0x53e0545
  4272da:	movsxd eax,DWORD PTR [rip+0x5690566]        # 0x5ab7846
  4272e0:	push   rax
  4272e1:	add    eax,0x571056e
  4272e6:	je     0x4272ed
  4272e8:	ja     0x4272ef
  4272ea:	xchg   DWORD PTR [rip+0x59508b8],eax        # 0x5d77ba8
  4272f0:	cwde   
  4272f1:	add    eax,0x59b05a9
  4272f6:	lahf   
  4272f7:	add    eax,0x5a605ac
  4272fc:	mov    ecx,0xbd05af05
  427301:	add    eax,0x5cd05c0
  427306:	rol    DWORD PTR [rip+0x5d005d7],cl        # 0x61278e3
  42730c:	out    0x5,eax
  42730e:	loope  0x427315
  427310:	test   BYTE PTR [rip+0x8b808b8],0x37        # 0x8fa7bcf
  427317:	add    BYTE PTR [rax+rax*1],ah
  42731a:	and    eax,DWORD PTR [rax]
  42731c:	and    DWORD PTR [rax],eax
  42731e:	add    BYTE PTR [rsi],al
  427320:	cli    
  427321:	add    eax,0x6090605
  427326:	(bad)  
  427327:	(bad)  
  427328:	adc    al,0x6
  42732a:	sbb    BYTE PTR [rsi],al
  42732c:	(bad)  
  42732d:	(bad)  
  42732e:	ss (bad) 
  427330:	cs (bad) 
  427332:	xor    al,BYTE PTR [rsi]
  427334:	cmp    DWORD PTR [rsi],eax
  427336:	rex (bad) 
  427338:	rex.W (bad) 
  42733a:	pop    rax
  42733b:	(bad)  
  42733c:	pop    rsi
  42733d:	(bad)  
  42733e:	(bad)  
  42733f:	(bad)  
  427340:	mov    eax,0x62066a08
  427345:	(bad)  
  427346:	ins    DWORD PTR es:[rdi],dx
  427347:	(bad)  
  427348:	mov    eax,0x8e067008
  42734d:	(bad)  
  42734e:	add    DWORD PTR [rsi],0x6840676
  427354:	and    al,0x0
  427356:	sbb    DWORD PTR [rax],eax
  427358:	xchg   esi,eax
  427359:	(bad)  
  42735a:	fwait
  42735b:	(bad)  
  42735c:	movabs ds:0xc506b506af06a606,eax
  427365:	(bad)  
  427366:	mov    esp,0xcd06c906
  42736b:	(bad)  
  42736c:	(bad)  
  42736d:	(bad)  
  42736e:	fld    QWORD PTR [rsi]
  427370:	out    0x6,eax
  427372:	in     eax,dx
  427373:	(bad)  
  427374:	repz (bad) 
  427376:	sti    
  427377:	(bad)  
  427378:	test   DWORD PTR [rsi],0x180700
  42737e:	sbb    DWORD PTR [rdi],eax
  427380:	(bad)  
  427381:	(bad)  
  427382:	or     eax,DWORD PTR [rdi]
  427384:	(bad)  
  427385:	(bad)  
  427386:	sub    DWORD PTR [rdi],eax
  427388:	sub    al,0x7
  42738a:	(bad)  
  42738b:	(bad)  
  42738c:	cmp    al,0x7
  42738e:	(bad)  
  42738f:	(bad)  
  427390:	rex.X (bad) 
  427392:	rex.WXB (bad) 
  427394:	(bad)  
  427395:	(bad)  
  427396:	rex.WRXB (bad) 
  427398:	and    al,0x0
  42739a:	push   rbp
  42739b:	(bad)  
  42739c:	movsxd eax,DWORD PTR [rdi]
  42739e:	imul   eax,DWORD PTR [rdi],0x774076d
  4273a4:	mov    WORD PTR [rdi],es
  4273a6:	jp     0x4273af
  4273a8:	add    DWORD PTR [rdi],0x793079f
  4273ae:	fwait
  4273af:	(bad)  
  4273b0:	cwde   
  4273b1:	(bad)  
  4273b2:	movabs ds:0xb807c008b807ac07,al
  4273bb:	or     BYTE PTR [rcx+0x308b807],bh
  4273c1:	or     BYTE PTR [rcx],dl
  4273c3:	or     BYTE PTR [rdi],bl
  4273c5:	or     BYTE PTR [rip+0x3f083608],ch        # 0x3f4aa9d3
  4273cb:	or     BYTE PTR [rax+0x8],cl
  4273ce:	push   rbp
  4273cf:	or     BYTE PTR [rbx+0x8],ah
  4273d2:	jo     0x4273dc
  4273d4:	jle    0x4273de
  4273d6:	mov    BYTE PTR [rax],cl
  4273d8:	mov    cs,WORD PTR [rax]
  4273da:	xchg   esi,eax
  4273db:	or     BYTE PTR [rax-0x5bf761f8],bl
  4273e1:	or     BYTE PTR [rdx+0x8],ch
	...
  427403:	add    BYTE PTR [rcx],al
  427405:	add    BYTE PTR [rax],al
  427407:	add    BYTE PTR [rcx],al
  427409:	add    BYTE PTR [rax],al
  42740b:	add    BYTE PTR [rdx],al
  42740d:	add    BYTE PTR [rax],al
  42740f:	add    BYTE PTR [rcx],al
  427411:	add    BYTE PTR [rax],al
  427413:	add    BYTE PTR [rcx],al
  427415:	add    BYTE PTR [rax],al
  427417:	add    BYTE PTR [rcx],al
  427419:	add    BYTE PTR [rax],al
  42741b:	add    BYTE PTR [rbx],al
  42741d:	add    BYTE PTR [rax],al
  42741f:	add    BYTE PTR [rax+rax*1],al
  427422:	add    BYTE PTR [rax],al
  427424:	add    eax,0x5000000
  427429:	add    BYTE PTR [rax],al
  42742b:	add    BYTE PTR [rsi],al
  42742d:	add    BYTE PTR [rax],al
  42742f:	add    BYTE PTR [rdi],al
  427431:	add    BYTE PTR [rax],al
  427433:	add    BYTE PTR [rax],cl
  427435:	add    BYTE PTR [rax],al
  427437:	add    BYTE PTR [rax],cl
  427439:	add    BYTE PTR [rax],al
  42743b:	add    BYTE PTR [rax],cl
  42743d:	add    BYTE PTR [rax],al
  42743f:	add    BYTE PTR [rax],cl
  427441:	add    BYTE PTR [rax],al
  427443:	add    BYTE PTR [rax],cl
  427445:	add    BYTE PTR [rax],al
  427447:	add    BYTE PTR [rax],cl
  427449:	add    BYTE PTR [rax],al
  42744b:	add    BYTE PTR [rax],cl
  42744d:	add    BYTE PTR [rax],al
  42744f:	add    BYTE PTR [rcx],al
  427451:	add    BYTE PTR [rax],al
  427453:	add    BYTE PTR [rip+0x9000000],al        # 0x9427459
  427459:	add    BYTE PTR [rax],al
  42745b:	add    BYTE PTR [rcx],cl
  42745d:	add    BYTE PTR [rax],al
  42745f:	add    BYTE PTR [rcx],cl
  427461:	add    BYTE PTR [rax],al
  427463:	add    BYTE PTR [rcx],cl
  427465:	add    BYTE PTR [rax],al
  427467:	add    BYTE PTR [rdx],cl
  427469:	add    BYTE PTR [rax],al
  42746b:	add    BYTE PTR [rcx],cl
  42746d:	add    BYTE PTR [rax],al
  42746f:	add    BYTE PTR [rbx],cl
  427471:	add    BYTE PTR [rax],al
  427473:	add    BYTE PTR [rax+rax*1],cl
  427476:	add    BYTE PTR [rax],al
  427478:	or     eax,0xb000000
  42747d:	add    BYTE PTR [rax],al
  42747f:	add    BYTE PTR [rbx],cl
  427481:	add    BYTE PTR [rax],al
  427483:	add    BYTE PTR [rip+0xb000000],cl        # 0xb427489
  427489:	add    BYTE PTR [rax],al
  42748b:	add    BYTE PTR [rbx],cl
  42748d:	add    BYTE PTR [rax],al
  42748f:	add    BYTE PTR [rbx],cl
  427491:	add    BYTE PTR [rax],al
  427493:	add    BYTE PTR [rbx],cl
  427495:	add    BYTE PTR [rax],al
  427497:	add    BYTE PTR [rbx],cl
  427499:	add    BYTE PTR [rax],al
  42749b:	add    BYTE PTR [rbx],cl
  42749d:	add    BYTE PTR [rax],al
  42749f:	add    BYTE PTR [rcx],cl
  4274a1:	add    BYTE PTR [rax],al
  4274a3:	add    BYTE PTR [rcx],cl
  4274a5:	add    BYTE PTR [rax],al
  4274a7:	add    BYTE PTR [rcx],cl
  4274a9:	add    BYTE PTR [rax],al
  4274ab:	add    BYTE PTR [rcx],cl
  4274ad:	add    BYTE PTR [rax],al
  4274af:	add    BYTE PTR [rdx],cl
  4274b1:	add    BYTE PTR [rax],al
  4274b3:	add    BYTE PTR [rcx],cl
  4274b5:	add    BYTE PTR [rax],al
  4274b7:	add    BYTE PTR [rbx],cl
  4274b9:	add    BYTE PTR [rax],al
  4274bb:	add    BYTE PTR [rbx],cl
  4274bd:	add    BYTE PTR [rax],al
  4274bf:	add    BYTE PTR [rbx],cl
  4274c1:	add    BYTE PTR [rax],al
  4274c3:	add    BYTE PTR [rbx],cl
  4274c5:	add    BYTE PTR [rax],al
  4274c7:	add    BYTE PTR [rip+0xb000000],cl        # 0xb4274cd
  4274cd:	add    BYTE PTR [rax],al
  4274cf:	add    BYTE PTR [rbx],cl
  4274d1:	add    BYTE PTR [rax],al
  4274d3:	add    BYTE PTR [rbx],cl
  4274d5:	add    BYTE PTR [rax],al
  4274d7:	add    BYTE PTR [rbx],cl
  4274d9:	add    BYTE PTR [rax],al
  4274db:	add    BYTE PTR [rbx],cl
  4274dd:	add    BYTE PTR [rax],al
  4274df:	add    BYTE PTR [rbx],cl
  4274e1:	add    BYTE PTR [rax],al
  4274e3:	add    BYTE PTR [rip+0xb000000],cl        # 0xb4274e9
  4274e9:	add    BYTE PTR [rax],al
  4274eb:	add    BYTE PTR [rbx],cl
  4274ed:	add    BYTE PTR [rax],al
  4274ef:	add    BYTE PTR [rbx],cl
  4274f1:	add    BYTE PTR [rax],al
  4274f3:	add    BYTE PTR [rbx],cl
  4274f5:	add    BYTE PTR [rax],al
  4274f7:	add    BYTE PTR [rbx],cl
  4274f9:	add    BYTE PTR [rax],al
  4274fb:	add    BYTE PTR [rsi],cl
  4274fd:	add    BYTE PTR [rax],al
  4274ff:	add    BYTE PTR [rcx],al
  427501:	add    BYTE PTR [rax],al
  427503:	add    BYTE PTR [rbx],cl
  427505:	add    BYTE PTR [rax],al
  427507:	add    BYTE PTR [rbx],cl
  427509:	add    BYTE PTR [rax],al
  42750b:	add    BYTE PTR [rbx],cl
	...
  427541:	add    BYTE PTR [rax],al
  427543:	add    BYTE PTR [rcx],al
  427545:	add    BYTE PTR [rax],al
  427547:	add    BYTE PTR [rcx],al
  427549:	add    BYTE PTR [rax],al
  42754b:	add    BYTE PTR [rcx],al
  42754d:	add    BYTE PTR [rax],al
  42754f:	add    BYTE PTR [rcx],al
  427551:	add    BYTE PTR [rax],al
  427553:	add    BYTE PTR [rcx],al
  427555:	add    BYTE PTR [rax],al
  427557:	add    BYTE PTR [rcx],al
  427559:	add    BYTE PTR [rax],al
  42755b:	add    BYTE PTR [rcx],al
  42755d:	add    BYTE PTR [rax],al
  42755f:	add    BYTE PTR [rcx],al
  427561:	add    BYTE PTR [rax],al
  427563:	add    BYTE PTR [rdx],al
  427565:	add    BYTE PTR [rax],al
  427567:	add    BYTE PTR [rbx],al
  427569:	add    BYTE PTR [rax],al
  42756b:	add    BYTE PTR [rcx],al
  42756d:	add    BYTE PTR [rax],al
  42756f:	add    BYTE PTR [rdx],al
  427571:	add    BYTE PTR [rax],al
  427573:	add    BYTE PTR [rdx],al
  427575:	add    BYTE PTR [rax],al
  427577:	add    BYTE PTR [rcx],al
  427579:	add    BYTE PTR [rax],al
  42757b:	add    BYTE PTR [rcx],al
  42757d:	add    BYTE PTR [rax],al
  42757f:	add    BYTE PTR [rcx],al
  427581:	add    BYTE PTR [rax],al
  427583:	add    BYTE PTR [rcx],al
  427585:	add    BYTE PTR [rax],al
  427587:	add    BYTE PTR [rcx],al
  427589:	add    BYTE PTR [rax],al
  42758b:	add    BYTE PTR [rcx],al
  42758d:	add    BYTE PTR [rax],al
  42758f:	add    BYTE PTR [rcx],al
  427591:	add    BYTE PTR [rax],al
  427593:	add    BYTE PTR [rcx],al
  427595:	add    BYTE PTR [rax],al
  427597:	add    BYTE PTR [rcx],al
  427599:	add    BYTE PTR [rax],al
  42759b:	add    BYTE PTR [rcx],al
  42759d:	add    BYTE PTR [rax],al
  42759f:	add    BYTE PTR [rcx],al
  4275a1:	add    BYTE PTR [rax],al
  4275a3:	add    BYTE PTR [rcx],al
  4275a5:	add    BYTE PTR [rax],al
  4275a7:	add    BYTE PTR [rcx],al
  4275a9:	add    BYTE PTR [rax],al
  4275ab:	add    BYTE PTR [rcx],al
  4275ad:	add    BYTE PTR [rax],al
  4275af:	add    BYTE PTR [rcx],al
  4275b1:	add    BYTE PTR [rax],al
  4275b3:	add    BYTE PTR [rcx],al
  4275b5:	add    BYTE PTR [rax],al
  4275b7:	add    BYTE PTR [rcx],al
  4275b9:	add    BYTE PTR [rax],al
  4275bb:	add    BYTE PTR [rcx],al
  4275bd:	add    BYTE PTR [rax],al
  4275bf:	add    BYTE PTR [rax+rax*1],al
  4275c2:	add    BYTE PTR [rax],al
  4275c4:	add    eax,0x6000000
  4275c9:	add    BYTE PTR [rax],al
  4275cb:	add    BYTE PTR [rip+0x5000000],al        # 0x54275d1
  4275d1:	add    BYTE PTR [rax],al
  4275d3:	add    BYTE PTR [rip+0x5000000],al        # 0x54275d9
  4275d9:	add    BYTE PTR [rax],al
  4275db:	add    BYTE PTR [rdi],al
  4275dd:	add    BYTE PTR [rax],al
  4275df:	add    BYTE PTR [rip+0x5000000],al        # 0x54275e5
  4275e5:	add    BYTE PTR [rax],al
  4275e7:	add    BYTE PTR [rax],cl
  4275e9:	add    BYTE PTR [rax],al
  4275eb:	add    BYTE PTR [rcx],cl
  4275ed:	add    BYTE PTR [rax],al
  4275ef:	add    BYTE PTR [rip+0xa000000],al        # 0xa4275f5
  4275f5:	add    BYTE PTR [rax],al
  4275f7:	add    BYTE PTR [rbx],cl
  4275f9:	add    BYTE PTR [rax],al
  4275fb:	add    BYTE PTR [rax+rax*1],cl
  4275fe:	add    BYTE PTR [rax],al
  427600:	or     eax,0xe000000
  427605:	add    BYTE PTR [rax],al
  427607:	add    BYTE PTR [rdi],cl
  427609:	add    BYTE PTR [rax],al
  42760b:	add    BYTE PTR [rax],dl
  42760d:	add    BYTE PTR [rax],al
  42760f:	add    BYTE PTR [rcx],dl
  427611:	add    BYTE PTR [rax],al
  427613:	add    BYTE PTR [rsi],cl
  427615:	add    BYTE PTR [rax],al
  427617:	add    BYTE PTR [rdx],dl
  427619:	add    BYTE PTR [rax],al
  42761b:	add    BYTE PTR [rsi],cl
  42761d:	add    BYTE PTR [rax],al
  42761f:	add    BYTE PTR [rbx],dl
  427621:	add    BYTE PTR [rax],al
  427623:	add    BYTE PTR [rbx],dl
  427625:	add    BYTE PTR [rax],al
  427627:	add    BYTE PTR [rax+rax*1],dl
  42762a:	add    BYTE PTR [rax],al
  42762c:	add    eax,0x5000000
  427631:	add    BYTE PTR [rax],al
  427633:	add    BYTE PTR [rip+0x5000000],al        # 0x5427639
  427639:	add    BYTE PTR [rax],al
  42763b:	add    BYTE PTR [rip+0x15000000],al        # 0x15427641
  427641:	add    BYTE PTR [rax],al
  427643:	add    BYTE PTR [rsi],dl
  427645:	add    BYTE PTR [rax],al
  427647:	add    BYTE PTR [rdi],dl
  427649:	add    BYTE PTR [rax],al
  42764b:	add    BYTE PTR [rax],bl
  42764d:	add    BYTE PTR [rax],al
  42764f:	add    BYTE PTR [rcx],bl
  427651:	add    BYTE PTR [rax],al
  427653:	add    BYTE PTR [rdx],bl
  427655:	add    BYTE PTR [rax],al
  427657:	add    BYTE PTR [rbx],bl
  427659:	add    BYTE PTR [rax],al
  42765b:	add    BYTE PTR [rax+rax*1],bl
  42765e:	add    BYTE PTR [rax],al
  427660:	sbb    al,0x0
  427662:	add    BYTE PTR [rax],al
  427664:	sbb    eax,0x1c000000
  427669:	add    BYTE PTR [rax],al
  42766b:	add    BYTE PTR [rax+rax*1],bl
  42766e:	add    BYTE PTR [rax],al
  427670:	(bad)  
  427671:	add    BYTE PTR [rax],al
  427673:	add    BYTE PTR [rdi],bl
  427675:	add    BYTE PTR [rax],al
  427677:	add    BYTE PTR [rax],ah
  427679:	add    BYTE PTR [rax],al
  42767b:	add    BYTE PTR [rax+rax*1],bl
  42767e:	add    BYTE PTR [rax],al
  427680:	sbb    al,0x0
  427682:	add    BYTE PTR [rax],al
  427684:	sbb    al,0x0
  427686:	add    BYTE PTR [rax],al
  427688:	sbb    al,0x0
  42768a:	add    BYTE PTR [rax],al
  42768c:	and    DWORD PTR [rax],eax
  42768e:	add    BYTE PTR [rax],al
  427690:	and    al,BYTE PTR [rax]
  427692:	add    BYTE PTR [rax],al
  427694:	and    eax,DWORD PTR [rax]
  427696:	add    BYTE PTR [rax],al
  427698:	and    al,0x0
  42769a:	add    BYTE PTR [rax],al
  42769c:	sbb    al,0x0
  42769e:	add    BYTE PTR [rax],al
  4276a0:	and    eax,0x1c000000
  4276a5:	add    BYTE PTR [rax],al
  4276a7:	add    BYTE PTR [rax+rax*1],bl
  4276aa:	add    BYTE PTR [rax],al
  4276ac:	add    eax,0x26000000
  4276b1:	add    BYTE PTR [rax],al
  4276b3:	add    BYTE PTR [rip+0x5000000],al        # 0x54276b9
  4276b9:	add    BYTE PTR [rax],al
  4276bb:	add    BYTE PTR [rdi],ah
  4276bd:	add    BYTE PTR [rax],al
  4276bf:	add    BYTE PTR [rip+0x28000000],al        # 0x284276c5
  4276c5:	add    BYTE PTR [rax],al
  4276c7:	add    BYTE PTR [rcx],ch
  4276c9:	add    BYTE PTR [rax],al
  4276cb:	add    BYTE PTR [rdx],ch
  4276cd:	add    BYTE PTR [rax],al
  4276cf:	add    BYTE PTR [rbx],ch
  4276d1:	add    BYTE PTR [rax],al
  4276d3:	add    BYTE PTR [rax+rax*1],ch
  4276d6:	add    BYTE PTR [rax],al
  4276d8:	sub    eax,0x2e000000
  4276dd:	add    BYTE PTR [rax],al
  4276df:	add    BYTE PTR [rdi],ch
  4276e1:	add    BYTE PTR [rax],al
  4276e3:	add    BYTE PTR [rax],dh
  4276e5:	add    BYTE PTR [rax],al
  4276e7:	add    BYTE PTR [rax+rax*1],bl
  4276ea:	add    BYTE PTR [rax],al
  4276ec:	xor    DWORD PTR [rax],eax
  4276ee:	add    BYTE PTR [rax],al
  4276f0:	xor    al,BYTE PTR [rax]
  4276f2:	add    BYTE PTR [rax],al
  4276f4:	xor    eax,DWORD PTR [rax]
  4276f6:	add    BYTE PTR [rax],al
  4276f8:	xor    al,0x0
  4276fa:	add    BYTE PTR [rax],al
  4276fc:	xor    eax,0x36000000
  427701:	add    BYTE PTR [rax],al
  427703:	add    BYTE PTR [rdi],dh
  427705:	add    BYTE PTR [rax],al
  427707:	add    BYTE PTR [rax],bh
  427709:	add    BYTE PTR [rax],al
  42770b:	add    BYTE PTR [rcx],bh
  42770d:	add    BYTE PTR [rax],al
  42770f:	add    BYTE PTR [rdx],bh
  427711:	add    BYTE PTR [rax],al
  427713:	add    BYTE PTR [rbx],bh
  427715:	add    BYTE PTR [rax],al
  427717:	add    BYTE PTR [rax+rax*1],bh
  42771a:	add    BYTE PTR [rax],al
  42771c:	sbb    al,0x0
  42771e:	add    BYTE PTR [rax],al
  427720:	and    eax,0x3d000000
  427725:	add    BYTE PTR [rax],al
  427727:	add    BYTE PTR [rsi],bh
  427729:	add    BYTE PTR [rax],al
  42772b:	add    BYTE PTR [rdi],bh
  42772d:	add    BYTE PTR [rax],al
  42772f:	add    BYTE PTR [rip+0x5000000],al        # 0x5427735
  427735:	add    BYTE PTR [rax],al
  427737:	add    BYTE PTR [rip+0x1000000],al        # 0x142773d
  42773d:	add    BYTE PTR [rax],al
  42773f:	add    BYTE PTR [rax+0x0],al
  427742:	add    BYTE PTR [rax],al
  427744:	add    BYTE PTR [rax],al
  427747:	add    BYTE PTR [rax+0x0],al
  42774a:	add    BYTE PTR [rax],al
  42774c:	add    BYTE PTR [rax],al
  42774f:	add    BYTE PTR [rax+0x0],al
  427752:	add    BYTE PTR [rax],al
  427754:	add    BYTE PTR [rax],al
  427757:	add    BYTE PTR [rax+0x0],al
  42775a:	add    BYTE PTR [rax],al
  42775c:	add    BYTE PTR [rax],al
  42775f:	add    BYTE PTR [rax+0x0],al
  427762:	add    BYTE PTR [rax],al
  427764:	add    BYTE PTR [rax],al
  427767:	add    BYTE PTR [rax+0x0],al
  42776a:	add    BYTE PTR [rax],al
  42776c:	add    BYTE PTR [rax],al
  42776f:	add    BYTE PTR [rax+0x0],al
  427772:	add    BYTE PTR [rax],al
  427774:	add    BYTE PTR [rax],al
  427777:	add    BYTE PTR [rax+0x0],al
  42777a:	add    BYTE PTR [rax],al
  42777c:	add    BYTE PTR [rax],al
  42777f:	add    BYTE PTR [rax+0x0],al
  427782:	add    BYTE PTR [rax],al
  427784:	add    BYTE PTR [rax],al
  427787:	add    BYTE PTR [rax+0x0],al
  42778a:	add    BYTE PTR [rax],al
  42778c:	add    BYTE PTR [rax],al
  42778f:	add    BYTE PTR [rax+0x0],al
  427792:	add    BYTE PTR [rax],al
  427794:	add    BYTE PTR [rax],al
  427797:	add    BYTE PTR [rax+0x0],al
  42779a:	add    BYTE PTR [rax],al
  42779c:	add    BYTE PTR [rax],al
  42779f:	add    BYTE PTR [rax+0x0],al
  4277a2:	add    BYTE PTR [rax],al
  4277a4:	add    BYTE PTR [rax],al
  4277a7:	add    BYTE PTR [rax+0x0],al
  4277aa:	add    BYTE PTR [rax],al
  4277ac:	add    BYTE PTR [rax],al
  4277af:	add    BYTE PTR [rax+0x0],al
  4277b2:	add    BYTE PTR [rax],al
  4277b4:	add    BYTE PTR [rax],al
  4277b7:	add    BYTE PTR [rax+0x0],al
  4277ba:	add    BYTE PTR [rax],al
  4277bc:	add    BYTE PTR [rax],al
  4277bf:	add    BYTE PTR [rax+0x0],al
  4277c2:	add    BYTE PTR [rax],al
  4277c4:	add    BYTE PTR [rax],al
  4277c7:	add    BYTE PTR [rax+0x0],al
  4277ca:	add    BYTE PTR [rax],al
  4277cc:	add    BYTE PTR [rax],al
  4277cf:	add    BYTE PTR [rax+0x0],al
  4277d2:	add    BYTE PTR [rax],al
  4277d4:	add    BYTE PTR [rax],al
  4277d7:	add    BYTE PTR [rax+0x0],al
  4277da:	add    BYTE PTR [rax],al
  4277dc:	add    BYTE PTR [rax],al
  4277df:	add    BYTE PTR [rax+0x0],al
  4277e2:	add    BYTE PTR [rax],al
  4277e4:	add    BYTE PTR [rax],al
  4277e7:	add    BYTE PTR [rax+0x0],al
  4277ea:	add    BYTE PTR [rax],al
  4277ec:	add    BYTE PTR [rax],al
  4277ef:	add    BYTE PTR [rax+0x0],al
  4277f2:	add    BYTE PTR [rax],al
  4277f4:	add    BYTE PTR [rax],al
  4277f7:	add    BYTE PTR [rax+0x0],al
  4277fa:	add    BYTE PTR [rax],al
  4277fc:	add    BYTE PTR [rax],al
  4277ff:	add    BYTE PTR [rax+0x0],al
  427802:	add    BYTE PTR [rax],al
  427804:	add    BYTE PTR [rax],al
  427807:	add    BYTE PTR [rax+0x0],al
  42780a:	add    BYTE PTR [rax],al
  42780c:	add    BYTE PTR [rax],al
  42780f:	add    BYTE PTR [rax+0x0],al
  427812:	add    BYTE PTR [rax],al
  427814:	add    BYTE PTR [rax],al
  427817:	add    BYTE PTR [rax+0x0],al
  42781a:	add    BYTE PTR [rax],al
  42781c:	add    BYTE PTR [rax],al
  42781f:	add    BYTE PTR [rax+0x0],al
  427822:	add    BYTE PTR [rax],al
  427824:	add    BYTE PTR [rax],al
  427827:	add    BYTE PTR [rax+0x0],al
  42782a:	add    BYTE PTR [rax],al
  42782c:	add    BYTE PTR [rax],al
  42782f:	add    BYTE PTR [rax+0x0],al
  427832:	add    BYTE PTR [rax],al
  427834:	add    BYTE PTR [rax],al
  427837:	add    BYTE PTR [rax+0x0],al
  42783a:	add    BYTE PTR [rax],al
  42783c:	add    BYTE PTR [rax],al
  42783f:	add    BYTE PTR [rcx+0x0],al
  427842:	add    BYTE PTR [rax],al
  427844:	add    BYTE PTR [r8],al
  427847:	add    BYTE PTR [rcx+0x0],al
  42784a:	add    BYTE PTR [rax],al
  42784c:	add    BYTE PTR [r8],al
  42784f:	add    BYTE PTR [rcx+0x0],al
  427852:	add    BYTE PTR [rax],al
  427854:	add    BYTE PTR [r8],al
  427857:	add    BYTE PTR [rcx+0x0],al
  42785a:	add    BYTE PTR [rax],al
  42785c:	add    BYTE PTR [r8],al
  42785f:	add    BYTE PTR [rcx+0x0],al
  427862:	add    BYTE PTR [rax],al
  427864:	add    BYTE PTR [r8],al
  427867:	add    BYTE PTR [rcx+0x0],al
  42786a:	add    BYTE PTR [rax],al
  42786c:	add    BYTE PTR [r8],al
  42786f:	add    BYTE PTR [rcx+0x0],al
  427872:	add    BYTE PTR [rax],al
  427874:	add    BYTE PTR [r8],al
  427877:	add    BYTE PTR [rcx+0x0],al
  42787a:	add    BYTE PTR [rax],al
  42787c:	add    BYTE PTR [r8],al
  42787f:	add    BYTE PTR [rcx+0x0],al
  427882:	add    BYTE PTR [rax],al
  427884:	add    BYTE PTR [r8],al
  427887:	add    BYTE PTR [rcx+0x0],al
  42788a:	add    BYTE PTR [rax],al
  42788c:	add    BYTE PTR [r8],al
  42788f:	add    BYTE PTR [rcx+0x0],al
  427892:	add    BYTE PTR [rax],al
  427894:	add    BYTE PTR [r8],al
  427897:	add    BYTE PTR [rcx+0x0],al
  42789a:	add    BYTE PTR [rax],al
  42789c:	add    DWORD PTR [rax],eax
  42789e:	add    BYTE PTR [rax],al
  4278a0:	add    DWORD PTR [rax],eax
  4278a2:	add    BYTE PTR [rax],al
  4278a4:	add    DWORD PTR [rax],eax
  4278a6:	add    BYTE PTR [rax],al
  4278a8:	add    DWORD PTR [rax],eax
  4278aa:	add    BYTE PTR [rax],al
  4278ac:	add    DWORD PTR [rax],eax
  4278ae:	add    BYTE PTR [rax],al
  4278b0:	add    DWORD PTR [rax],eax
  4278b2:	add    BYTE PTR [rax],al
  4278b4:	add    DWORD PTR [rax],eax
  4278b6:	add    BYTE PTR [rax],al
  4278b8:	add    DWORD PTR [rax],eax
  4278ba:	add    BYTE PTR [rax],al
  4278bc:	add    DWORD PTR [rax],eax
  4278be:	add    BYTE PTR [rax],al
  4278c0:	rex.X add BYTE PTR [rax],al
  4278c3:	add    BYTE PTR [rdx+0x0],al
  4278c6:	add    BYTE PTR [rax],al
  4278c8:	rex.X add BYTE PTR [rax],al
  4278cb:	add    BYTE PTR [rdx+0x0],al
  4278ce:	add    BYTE PTR [rax],al
  4278d0:	rex.X add BYTE PTR [rax],al
  4278d3:	add    BYTE PTR [rdx+0x0],al
  4278d6:	add    BYTE PTR [rax],al
  4278d8:	rex.X add BYTE PTR [rax],al
  4278db:	add    BYTE PTR [rdx+0x0],al
  4278de:	add    BYTE PTR [rax],al
  4278e0:	rex.X add BYTE PTR [rax],al
  4278e3:	add    BYTE PTR [rdx+0x0],al
  4278e6:	add    BYTE PTR [rax],al
  4278e8:	rex.X add BYTE PTR [rax],al
  4278eb:	add    BYTE PTR [rdx+0x0],al
  4278ee:	add    BYTE PTR [rax],al
  4278f0:	rex.X add BYTE PTR [rax],al
  4278f3:	add    BYTE PTR [rdx+0x0],al
  4278f6:	add    BYTE PTR [rax],al
  4278f8:	rex.X add BYTE PTR [rax],al
  4278fb:	add    BYTE PTR [rdx+0x0],al
  4278fe:	add    BYTE PTR [rax],al
  427900:	rex.XB add BYTE PTR [r8],al
  427903:	add    BYTE PTR [rbx+0x0],al
  427906:	add    BYTE PTR [rax],al
  427908:	rex.XB add BYTE PTR [r8],al
  42790b:	add    BYTE PTR [rbx+0x0],al
  42790e:	add    BYTE PTR [rax],al
  427910:	rex.XB add BYTE PTR [r8],al
  427913:	add    BYTE PTR [rbx+0x0],al
  427916:	add    BYTE PTR [rax],al
  427918:	rex.XB add BYTE PTR [r8],al
  42791b:	add    BYTE PTR [rbx+0x0],al
  42791e:	add    BYTE PTR [rax],al
  427920:	add    DWORD PTR [rax],eax
  427922:	add    BYTE PTR [rax],al
  427924:	add    DWORD PTR [rax],eax
  427926:	add    BYTE PTR [rax],al
  427928:	add    DWORD PTR [rax],eax
  42792a:	add    BYTE PTR [rax],al
  42792c:	add    DWORD PTR [rax],eax
  42792e:	add    BYTE PTR [rax],al
  427930:	add    DWORD PTR [rax],eax
  427932:	add    BYTE PTR [rax],al
  427934:	add    DWORD PTR [rax],eax
  427936:	add    BYTE PTR [rax],al
  427938:	add    DWORD PTR [rax],eax
  42793a:	add    BYTE PTR [rax],al
  42793c:	add    DWORD PTR [rax],eax
	...
  427946:	(bad)  
  427947:	add    BYTE PTR [rdi],ch
  427949:	add    BYTE PTR [rax],al
  42794b:	add    BYTE PTR [rax],al
  42794d:	add    BYTE PTR [rbx],dh
  42794f:	add    BYTE PTR [rcx],dh
  427951:	add    BYTE PTR [rcx],al
  427953:	add    BYTE PTR [rip+0x31003100],ch        # 0x3142aa59
  427959:	add    BYTE PTR [rcx],dh
  42795b:	add    BYTE PTR [rcx],dh
  42795d:	add    BYTE PTR [rdi],ah
  42795f:	add    BYTE PTR [rdi],bl
  427961:	add    BYTE PTR [rbx],ah
  427963:	add    BYTE PTR [rbx],ah
  427965:	add    BYTE PTR [rdx],ah
  427967:	add    BYTE PTR [rdx],ah
  427969:	add    BYTE PTR [rdx],ah
  42796b:	add    BYTE PTR [rdx],ah
  42796d:	add    BYTE PTR [rdx],ah
  42796f:	add    BYTE PTR [rdx],ah
  427971:	add    BYTE PTR [rdx],ah
  427973:	add    BYTE PTR [rcx],dh
  427975:	add    BYTE PTR [rdx],ah
  427977:	add    BYTE PTR [rdx],ah
  427979:	add    BYTE PTR [rdx],ah
  42797b:	add    BYTE PTR [rdx],ah
  42797d:	add    BYTE PTR [rdx],ah
  42797f:	add    BYTE PTR [rdx],ah
  427981:	add    BYTE PTR [rdx],ah
  427983:	add    BYTE PTR [rdx],ah
  427985:	add    BYTE PTR [rdx],ah
  427987:	add    BYTE PTR [rdx],ah
  427989:	add    BYTE PTR [rdx],ah
  42798b:	add    BYTE PTR [rdx],ah
  42798d:	add    BYTE PTR [rdx],ah
  42798f:	add    BYTE PTR [rdx],ah
  427991:	add    BYTE PTR [rdx],ah
  427993:	add    BYTE PTR [rdx],ah
  427995:	add    BYTE PTR [rcx],dh
  427997:	add    BYTE PTR [rcx],dh
  427999:	add    BYTE PTR [rcx],dh
  42799b:	add    BYTE PTR [rdi],ch
  42799d:	add    BYTE PTR [rdx],dh
  42799f:	add    BYTE PTR [rcx],ah
  4279a1:	add    BYTE PTR [rdx],dh
  4279a3:	add    BYTE PTR [rcx],al
  4279a5:	add    BYTE PTR [rax],al
  4279a7:	add    BYTE PTR [rbx],al
  4279a9:	add    BYTE PTR [rax],al
  4279ab:	add    BYTE PTR [rax],al
  4279ad:	add    BYTE PTR [rax],al
  4279af:	add    BYTE PTR [rdi],ah
  4279b1:	add    BYTE PTR [rbx],ah
  4279b3:	add    BYTE PTR [rax],al
  4279b5:	add    BYTE PTR [rax],al
  4279b7:	add    BYTE PTR [rdi],ah
  4279b9:	add    BYTE PTR [rdi],ah
  4279bb:	add    BYTE PTR [rax],al
  4279bd:	add    BYTE PTR [rax],ch
  4279bf:	add    BYTE PTR [rsi],ch
  4279c1:	add    BYTE PTR [rdx],al
  4279c3:	add    BYTE PTR [rdi],bl
	...
  4279cd:	add    BYTE PTR [rbx],ah
  4279cf:	add    BYTE PTR [rax+rax*1],ah
  4279d2:	and    eax,0x22000000
	...
  4279df:	add    BYTE PTR [rdx],ah
  4279e1:	add    BYTE PTR [rdx],ah
  4279e3:	add    BYTE PTR [rdx],ah
  4279e5:	add    BYTE PTR [rdx],ah
  4279e7:	add    BYTE PTR [rdx],ah
  4279e9:	add    BYTE PTR [rdx],ah
  4279eb:	add    BYTE PTR [rdx],ah
  4279ed:	add    BYTE PTR [rdx],ah
  4279ef:	add    BYTE PTR [rdx],ah
  4279f1:	add    BYTE PTR [rdx],ah
  4279f3:	add    BYTE PTR [rdx],ah
  4279f5:	add    BYTE PTR [rdx],ah
  4279f7:	add    BYTE PTR [rdx],ah
  4279f9:	add    BYTE PTR [rdx],ah
  4279fb:	add    BYTE PTR [rdx],ah
  4279fd:	add    BYTE PTR [rdx],ah
  4279ff:	add    BYTE PTR [rdx],ah
  427a01:	add    BYTE PTR [rdx],ah
  427a03:	add    BYTE PTR [rdx],ah
  427a05:	add    BYTE PTR [rdx],ah
  427a07:	add    BYTE PTR [rdx],ah
  427a09:	add    BYTE PTR [rdx],ah
  427a0b:	add    BYTE PTR [rdx],ah
  427a0d:	add    BYTE PTR [rdx],ah
  427a0f:	add    BYTE PTR [rdx],ah
  427a11:	add    BYTE PTR [rdx],ah
  427a13:	add    BYTE PTR [rdx],ah
  427a15:	add    BYTE PTR [rdx],ah
  427a17:	add    BYTE PTR [rdx],ah
  427a19:	add    BYTE PTR [rdx],ah
  427a1b:	add    BYTE PTR [rdx],ah
  427a1d:	add    BYTE PTR [rdx],ah
  427a1f:	add    BYTE PTR [rdx],ah
  427a21:	add    BYTE PTR [rdx],ah
  427a23:	add    BYTE PTR [rdx],ah
  427a25:	add    BYTE PTR [rdx],ah
  427a27:	add    BYTE PTR [rdx],ah
  427a29:	add    BYTE PTR [rdx],ah
  427a2b:	add    BYTE PTR [rdx],ah
  427a2d:	add    BYTE PTR [rdx],ah
  427a2f:	add    BYTE PTR [rdx],ah
  427a31:	add    BYTE PTR [rdx],ah
  427a33:	add    BYTE PTR [rax],al
  427a35:	add    BYTE PTR [rax],al
  427a37:	add    BYTE PTR [rdi],ch
  427a39:	add    BYTE PTR [rax],al
  427a3b:	add    BYTE PTR [rax],dh
  427a3d:	add    BYTE PTR [rcx],ah
  427a3f:	add    BYTE PTR [rcx],ch
  427a41:	add    BYTE PTR [rax],al
  427a43:	add    BYTE PTR [rax],al
  427a45:	add    BYTE PTR [rax],al
  427a47:	add    BYTE PTR [rbx],ah
  427a49:	add    BYTE PTR [rax],al
  427a4b:	add    BYTE PTR [rdi],ah
  427a4d:	add    BYTE PTR [rax],al
  427a4f:	add    BYTE PTR [rax],al
  427a51:	add    BYTE PTR [rdi],ah
  427a53:	add    BYTE PTR [rdx],al
  427a55:	add    BYTE PTR [rdi],bl
	...
  427a63:	add    BYTE PTR [rax],al
  427a65:	add    BYTE PTR [rip+0x400],ah        # 0x427e6b
  427a6b:	add    BYTE PTR [rax],al
  427a6d:	add    BYTE PTR [rdx],ah
  427a6f:	add    BYTE PTR [rdx],ah
  427a71:	add    BYTE PTR [rdx],ah
  427a73:	add    BYTE PTR [rdx],ah
  427a75:	add    BYTE PTR [rdx],ah
  427a77:	add    BYTE PTR [rdx],ah
  427a79:	add    BYTE PTR [rsi],bl
  427a7b:	add    BYTE PTR [rbx],bl
  427a7d:	add    BYTE PTR [rdx],ah
  427a7f:	add    BYTE PTR [rdx],ah
  427a81:	add    BYTE PTR [rdx],ah
  427a83:	add    BYTE PTR [rdx],ah
  427a85:	add    BYTE PTR [rdx],ah
  427a87:	add    BYTE PTR [rdx],ah
  427a89:	add    BYTE PTR [rdx],ah
  427a8b:	add    BYTE PTR [rdx],ah
  427a8d:	add    BYTE PTR [rdx],ah
  427a8f:	add    BYTE PTR [rdx],ah
  427a91:	add    BYTE PTR [rdx],ah
  427a93:	add    BYTE PTR [rdx],ah
  427a95:	add    BYTE PTR [rdx],ah
  427a97:	add    BYTE PTR [rdx],ah
  427a99:	add    BYTE PTR [rdx],ah
  427a9b:	add    BYTE PTR [rdx],ah
  427a9d:	add    BYTE PTR [rdx],ah
  427a9f:	add    BYTE PTR [rdx],ah
  427aa1:	add    BYTE PTR [rdx],ah
  427aa3:	add    BYTE PTR [rsi],cl
  427aa5:	add    BYTE PTR [rdx],ah
  427aa7:	add    BYTE PTR [rbx],bl
  427aa9:	add    BYTE PTR [rdx],ah
  427aab:	add    BYTE PTR [rdx],ah
  427aad:	add    BYTE PTR [rdx],ah
  427aaf:	add    BYTE PTR [rdx],ah
  427ab1:	add    BYTE PTR [rdx],ah
  427ab3:	add    BYTE PTR [rdx],ah
  427ab5:	add    BYTE PTR [rdx],ah
  427ab7:	add    BYTE PTR [rdx],ah
  427ab9:	add    BYTE PTR [rdx],ah
  427abb:	add    BYTE PTR [rdx],ah
  427abd:	add    BYTE PTR [rdx],ah
  427abf:	add    BYTE PTR [rdx],ah
  427ac1:	add    BYTE PTR [rax],al
  427ac3:	add    BYTE PTR [rax+rax*1],ch
  427ac6:	add    BYTE PTR [rax],al
  427ac8:	add    BYTE PTR [rax],al
  427aca:	(bad)  
  427acb:	add    BYTE PTR [rax],al
  427acd:	add    BYTE PTR [rdi],bl
	...
  427adb:	add    BYTE PTR [rax],al
  427add:	add    BYTE PTR [rax+rax*1],al
  427ae0:	add    BYTE PTR es:[rax],al
  427ae3:	add    BYTE PTR [rdx],ah
  427ae5:	add    BYTE PTR [rdx],ah
  427ae7:	add    BYTE PTR [rax+rax*1],bl
  427aea:	and    al,BYTE PTR [rax]
  427aec:	and    al,BYTE PTR [rax]
  427aee:	sbb    eax,0x22002200
  427af3:	add    BYTE PTR [rdx],ah
  427af5:	add    BYTE PTR [rdx],ah
  427af7:	add    BYTE PTR [rdx],ah
  427af9:	add    BYTE PTR [rdx],ah
  427afb:	add    BYTE PTR [rdx],ah
  427afd:	add    BYTE PTR [rdx],ah
  427aff:	add    BYTE PTR [rdx],ah
  427b01:	add    BYTE PTR [rdx],ah
  427b03:	add    BYTE PTR [rdx],cl
  427b05:	add    BYTE PTR [rcx],cl
  427b07:	add    BYTE PTR [rdx],ah
  427b09:	add    BYTE PTR [rdx],ah
  427b0b:	add    BYTE PTR [rdx],ah
  427b0d:	add    BYTE PTR [rdx],ah
  427b0f:	add    BYTE PTR [rsi],al
  427b11:	add    BYTE PTR [rdx],ah
  427b13:	add    BYTE PTR [rdx],ah
  427b15:	add    BYTE PTR [rdx],ah
  427b17:	add    BYTE PTR [rdx],ah
  427b19:	add    BYTE PTR [rsi],cl
  427b1b:	add    BYTE PTR [rdx],ah
  427b1d:	add    BYTE PTR [rdx],ah
  427b1f:	add    BYTE PTR [rdx],ah
  427b21:	add    BYTE PTR [rax],cl
  427b23:	add    BYTE PTR [rdx],ah
  427b25:	add    BYTE PTR [rdx],ah
  427b27:	add    BYTE PTR [rdx],ah
  427b29:	add    BYTE PTR [rdx],ah
  427b2b:	add    BYTE PTR [rdi],cl
  427b2d:	add    BYTE PTR [rdx],ah
  427b2f:	add    BYTE PTR [rdx],ah
  427b31:	add    BYTE PTR [rdx],ah
  427b33:	add    BYTE PTR [rdx],ah
  427b35:	add    BYTE PTR [rax],al
  427b37:	add    BYTE PTR [rax],al
  427b39:	add    BYTE PTR [rax+rax*1],bl
  427b3c:	add    BYTE PTR [rax],al
  427b3e:	(bad)  
	...
  427b4b:	add    BYTE PTR [rax],al
  427b4d:	add    BYTE PTR [rdx],ah
  427b4f:	add    BYTE PTR [rdx],ah
  427b51:	add    BYTE PTR [rdx],ah
  427b53:	add    BYTE PTR [rdx],ah
  427b55:	add    BYTE PTR [rdx],ah
  427b57:	add    BYTE PTR [rdx],ah
  427b59:	add    BYTE PTR [rdx],ah
  427b5b:	add    BYTE PTR [rdx],ah
  427b5d:	add    BYTE PTR [rdx],ah
  427b5f:	add    BYTE PTR [rdx],ah
  427b61:	add    BYTE PTR [rdx],ah
  427b63:	add    BYTE PTR [rdx],ah
  427b65:	add    BYTE PTR [rdx],ah
  427b67:	add    BYTE PTR [rdx],ah
  427b69:	add    BYTE PTR [rdx],ah
  427b6b:	add    BYTE PTR [rdi],dl
  427b6d:	add    BYTE PTR [rdx],ah
  427b6f:	add    BYTE PTR [rdx],ah
  427b71:	add    BYTE PTR [rdx],ah
  427b73:	add    BYTE PTR [rax],dl
  427b75:	add    BYTE PTR [rdx],ah
  427b77:	add    BYTE PTR [rdx],ah
  427b79:	add    BYTE PTR [rdx],ah
  427b7b:	add    BYTE PTR [rdx],ah
  427b7d:	add    BYTE PTR [rax+rax*1],cl
  427b80:	and    al,BYTE PTR [rax]
  427b82:	and    al,BYTE PTR [rax]
  427b84:	or     eax,DWORD PTR [rax]
  427b86:	and    al,BYTE PTR [rax]
  427b88:	and    al,BYTE PTR [rax]
  427b8a:	verr   WORD PTR [rdx]
  427b8d:	add    BYTE PTR [rdx],ah
  427b8f:	add    BYTE PTR [rdx],ah
  427b91:	add    BYTE PTR [rdx],ch
  427b93:	add    BYTE PTR [rbx],ch
	...
  427b9d:	add    BYTE PTR [rdx],ah
  427b9f:	add    BYTE PTR [rdx],ah
  427ba1:	add    BYTE PTR [rdx],ah
  427ba3:	add    BYTE PTR [rcx],bl
  427ba5:	add    BYTE PTR [rdx],ah
  427ba7:	add    BYTE PTR [rdx],ah
  427ba9:	add    BYTE PTR [rdx],ah
  427bab:	add    BYTE PTR [rdx],ah
  427bad:	add    BYTE PTR [rdx],ah
  427baf:	add    BYTE PTR [rdx],ah
  427bb1:	add    BYTE PTR [rdx],ah
  427bb3:	add    BYTE PTR [rdx],ah
  427bb5:	add    BYTE PTR [rdx],ah
  427bb7:	add    BYTE PTR [rdx],ah
  427bb9:	add    BYTE PTR [rdx],ah
  427bbb:	add    BYTE PTR [rdx],ah
  427bbd:	add    BYTE PTR [rdx],dl
  427bbf:	add    BYTE PTR [rax],bl
  427bc1:	add    BYTE PTR [rdx],ah
  427bc3:	add    BYTE PTR [rdi],al
  427bc5:	add    BYTE PTR [rip+0x11001400],al        # 0x11428fcb
  427bcb:	add    BYTE PTR [rdx],ah
  427bcd:	add    BYTE PTR [rdx],ah
  427bcf:	add    BYTE PTR [rip+0x2200],cl        # 0x429dd5
  427bd5:	add    BYTE PTR [rax],al
  427bd7:	add    BYTE PTR [rdx],ah
  427bd9:	add    BYTE PTR [rdx],ah
  427bdb:	add    BYTE PTR [rdx],ah
  427bdd:	add    BYTE PTR [rdx],ah
  427bdf:	add    BYTE PTR [rdx],ah
  427be1:	add    BYTE PTR [rdx],ah
  427be3:	add    BYTE PTR [rdx],ah
  427be5:	add    BYTE PTR [rdx],ah
  427be7:	add    BYTE PTR [rdx],ah
  427be9:	add    BYTE PTR [rax],ah
  427beb:	add    BYTE PTR [rdx],ah
  427bed:	add    BYTE PTR [rdx],ah
  427bef:	add    BYTE PTR [rdx],ah
  427bf1:	add    BYTE PTR [rdx],ah
  427bf3:	add    BYTE PTR [rdx],ah
  427bf5:	add    BYTE PTR [rdx],ah
  427bf7:	add    BYTE PTR [rdx],ah
  427bf9:	add    BYTE PTR [rdx],ah
  427bfb:	add    BYTE PTR [rax],al
  427bfd:	add    BYTE PTR [rdx],ah
  427bff:	add    BYTE PTR [rdx],bl
  427c01:	add    BYTE PTR [rdx],ah
  427c03:	add    BYTE PTR [rdx],ah
  427c05:	add    BYTE PTR [rdx],ah
  427c07:	add    BYTE PTR [rdx],ah
  427c09:	add    BYTE PTR [rdx],ah
  427c0b:	add    BYTE PTR [rdx],ah
  427c0d:	add    BYTE PTR [rip+0x22002200],al        # 0x22429e13
  427c13:	add    BYTE PTR [rdx],ah
  427c15:	add    BYTE PTR [rdx],ah
  427c17:	add    BYTE PTR [rdx],bl
  427c19:	add    BYTE PTR [rdx],bl
  427c1b:	add    BYTE PTR [rbx],dl
  427c1d:	add    BYTE PTR [rdx],ah
  427c1f:	add    BYTE PTR [rdx],ah
  427c21:	add    BYTE PTR [rdx],ah
  427c23:	add    BYTE PTR [rdx],ah
  427c25:	add    BYTE PTR [rdx],ah
  427c27:	add    BYTE PTR [rdx],ah
  427c29:	add    BYTE PTR [rdx],ah
  427c2b:	add    BYTE PTR [rdx],ah
  427c2d:	add    BYTE PTR [rdx],ah
  427c2f:	add    BYTE PTR [rdx],ah
  427c31:	add    BYTE PTR [rdx],ah
  427c33:	add    BYTE PTR [rdx],ah
  427c35:	add    BYTE PTR [rsi],dl
  427c37:	add    BYTE PTR [rdx],ah
  427c39:	add    BYTE PTR [rip+0x2200],dl        # 0x429e3f
  427c3f:	add    BYTE PTR [rax],al
  427c41:	add    al,BYTE PTR [rbx]
  427c43:	add    DWORD PTR [rax*1+0x200],eax
  427c4a:	or     DWORD PTR [rax],eax
  427c4c:	add    DWORD PTR [rdx],eax
  427c4e:	add    DWORD PTR [rdx],eax
  427c50:	add    DWORD PTR [rcx],eax
  427c52:	add    al,BYTE PTR [rdx]
  427c54:	add    al,BYTE PTR [rdx]
  427c56:	add    al,BYTE PTR [rax]
  427c58:	add    DWORD PTR [rsi],eax
  427c5a:	add    DWORD PTR [rbx],eax
  427c5c:	add    eax,DWORD PTR [rip+0x3020505]        # 0x3448167
  427c62:	add    al,BYTE PTR [rcx]
  427c64:	add    DWORD PTR [rcx],eax
  427c66:	add    DWORD PTR [rcx],eax
  427c68:	add    DWORD PTR [rcx],eax
  427c6a:	add    DWORD PTR [rcx],eax
  427c6c:	add    DWORD PTR [rcx],eax
  427c6e:	add    BYTE PTR [rcx],al
  427c70:	add    al,BYTE PTR [rdx]
  427c72:	add    eax,DWORD PTR [rcx]
  427c74:	add    DWORD PTR [rcx],eax
  427c76:	add    eax,DWORD PTR [rbx]
  427c78:	add    eax,DWORD PTR [rbx]
  427c7a:	add    eax,DWORD PTR [rcx]
  427c7c:	add    BYTE PTR [rcx],al
  427c7e:	add    al,BYTE PTR [rdx]
  427c80:	add    eax,DWORD PTR [rcx]
  427c82:	add    DWORD PTR [rdx],eax
  427c84:	add    DWORD PTR [rbx],eax
  427c86:	add    al,BYTE PTR [rax]
  427c88:	add    eax,DWORD PTR [rcx]
  427c8a:	add    eax,DWORD PTR [rcx]
  427c8c:	add    DWORD PTR [rbx],eax
  427c8e:	add    al,BYTE PTR [rax]
  427c90:	add    eax,DWORD PTR [rcx]
  427c92:	add    eax,DWORD PTR [rcx]
  427c94:	add    DWORD PTR [rcx],eax
  427c96:	add    DWORD PTR [rcx],eax
  427c98:	add    DWORD PTR [rax],eax
  427c9a:	add    eax,DWORD PTR [rsi+rax*1]
  427c9d:	add    eax,0x5050605
  427ca2:	add    eax,0x5050505
  427ca7:	add    al,0x1
  427ca9:	add    DWORD PTR [rax],eax
  427cab:	add    DWORD PTR [rdx],eax
  427cad:	add    al,BYTE PTR [rbx]
  427caf:	add    eax,DWORD PTR [rcx]
  427cb1:	add    DWORD PTR [rax],eax
  427cb3:	add    DWORD PTR [rbx],eax
  427cb5:	add    DWORD PTR [rbx],eax
  427cb7:	add    DWORD PTR [rcx],eax
  427cb9:	add    DWORD PTR [rcx],eax
  427cbb:	add    DWORD PTR [rcx],eax
  427cbd:	add    DWORD PTR [rcx+rax*1],eax
  427cc0:	add    eax,DWORD PTR [rcx]
  427cc2:	add    DWORD PTR [rcx],eax
  427cc4:	add    DWORD PTR [rcx],eax
  427cc6:	add    DWORD PTR [rcx],eax
  427cc8:	add    DWORD PTR [rcx],eax
  427cca:	add    DWORD PTR [rcx],eax
  427ccc:	add    DWORD PTR [rcx],eax
  427cce:	add    eax,DWORD PTR [rcx]
  427cd0:	add    DWORD PTR [rcx],eax
  427cd2:	add    DWORD PTR [rcx],eax
  427cd4:	add    DWORD PTR [rcx],eax
  427cd6:	add    DWORD PTR [rax],eax
	...
  427d00:	add    BYTE PTR [rdi*1+0x41403f3e],bh
  427d07:	rex.B
  427d08:	rex.XB
  427d09:	rex.R
  427d0a:	rex.X
  427d0b:	rex.RB
  427d0c:	rex.RB
  427d0d:	rex.RB
  427d0e:	rex.RX
  427d0f:	rex.RX
  427d10:	rex.RXB
  427d11:	rex.W
  427d12:	rex.W
  427d13:	rex.WB
  427d14:	rex.WB
  427d15:	rex.WB
  427d16:	rex.WB
  427d17:	rex.WX
  427d18:	rex.WX
  427d19:	rex.WXB
  427d1a:	rex.WR
  427d1b:	rex.WR
  427d1c:	rex.WRB
  427d1d:	rex.WRX
  427d1e:	rex.WRXB push r8
  427d20:	push   rcx
  427d21:	push   rcx
  427d22:	push   rdx
  427d23:	push   rbx
  427d24:	push   rbx
  427d25:	push   rbx
  427d26:	push   rbx
  427d27:	push   rbx
  427d28:	push   rbx
  427d29:	push   rbx
  427d2a:	push   rbx
  427d2b:	push   rbx
  427d2c:	push   rbx
  427d2d:	push   rbx
  427d2e:	push   rsp
  427d2f:	push   rsp
  427d30:	push   rsp
  427d31:	push   rbp
  427d32:	push   rbp
  427d33:	push   rsi
  427d34:	push   rsi
  427d35:	push   rdi
  427d36:	push   rdi
  427d37:	pop    rax
  427d38:	pop    rax
  427d39:	pop    rax
  427d3a:	pop    rax
  427d3b:	pop    rcx
  427d3c:	pop    rdx
  427d3d:	pop    rdx
  427d3e:	pop    rdx
  427d3f:	pop    rbx
  427d40:	pop    rbx
  427d41:	pop    rsp
  427d42:	pop    rsp
  427d43:	pop    rbp
  427d44:	pop    rsi
  427d45:	pop    rsi
  427d46:	pop    rdi
  427d47:	(bad)  
  427d48:	(bad)  
  427d49:	(bad)  
  427d4a:	(bad)  
  427d4b:	(bad)  
  427d4d:	movsxd esp,DWORD PTR [rbp+riz*2+0x65]
  427d51:	data16 addr32 addr32 pushw 0x6a69
  427d58:	push   0x6b
  427d5a:	imul   ebp,DWORD PTR [rsp+rbp*2+0x6c],0x6c
  427d5f:	ins    BYTE PTR es:[rdi],dx
  427d60:	ins    BYTE PTR es:[rdi],dx
  427d61:	ins    BYTE PTR es:[rdi],dx
  427d62:	ins    BYTE PTR es:[rdi],dx
  427d63:	ins    BYTE PTR es:[rdi],dx
  427d64:	ins    BYTE PTR es:[rdi],dx
  427d65:	ins    BYTE PTR es:[rdi],dx
  427d66:	ins    BYTE PTR es:[rdi],dx
  427d67:	ins    BYTE PTR es:[rdi],dx
  427d68:	ins    DWORD PTR es:[rdi],dx
  427d69:	ins    DWORD PTR es:[rdi],dx
  427d6a:	outs   dx,BYTE PTR ds:[rsi]
  427d6b:	outs   dx,BYTE PTR ds:[rsi]
  427d6c:	outs   dx,BYTE PTR ds:[rsi]
  427d6d:	outs   dx,DWORD PTR ds:[rsi]
  427d6e:	outs   dx,DWORD PTR ds:[rsi]
  427d6f:	jo     0x427de2
  427d71:	jno    0x427de5
  427d73:	jae    0x427de8
  427d75:	je     0x427deb
  427d77:	jne    0x427dee
  427d79:	jne    0x427df0
  427d7b:	jne    0x427df2
  427d7d:	jbe    0x427df6
  427d7f:	js     0x427df9
  427d81:	jns    0x427dfc
  427d83:	jns    0x427dfe
  427d85:	jns    0x427e00
  427d87:	jns    0x427e02
  427d89:	jns    0x427e04
  427d8b:	jns    0x427e06
  427d8d:	jp     0x427e09
  427d8f:	jnp    0x427e0c
  427d91:	jnp    0x427e0e
  427d93:	jl     0x427e12
  427d95:	jge    0x427e15
	...
  427dbf:	add    BYTE PTR [rax],al
  427dc1:	(bad)  
  427dc2:	cmp    eax,0x33003e32
  427dc7:	(bad)  
  427dc8:	add    al,0x5
  427dca:	(bad)  
  427dcb:	(bad)  
  427dcc:	or     BYTE PTR [rcx],cl
  427dce:	or     cl,BYTE PTR [rbx]
  427dd0:	or     al,0xd
  427dd2:	(bad)  
  427dd3:	(bad)  
  427dd5:	cmp    eax,DWORD PTR [rax+0x53]
  427dd8:	imul   ebp,DWORD PTR [rdx+0x6b],0x2a7e6d6c
  427ddf:	jle    0x427e22
  427de1:	push   0x3b
  427de3:	and    BYTE PTR [rbp+0x35],al
  427de6:	(bad)  
  427de7:	(bad)  
  427de8:	and    eax,0x293b4234
  427ded:	sub    ebp,DWORD PTR [rbp*1+0x31302f2e]
  427df4:	jle    0x427e17
  427df6:	and    eax,DWORD PTR [rsi+0x48]
  427df9:	rex.WB
  427dfa:	rex.WXB
  427dfb:	rex.WRX
  427dfc:	rex.WRXB push r8
  427dfe:	push   rbx
  427dff:	imul   ebp,DWORD PTR [rsp+rbx*1+0x54],0x107c106b
  427e07:	adc    DWORD PTR [rdx],edx
  427e09:	adc    edx,DWORD PTR [rdx*1+0x19181716]
  427e10:	sbb    bl,BYTE PTR [rbx]
  427e12:	and    al,0x27
  427e14:	sub    BYTE PTR [rbx],dh
  427e16:	ins    DWORD PTR es:[rdi],dx
  427e17:	jno    0x427e8b
  427e19:	jae    0x427e8f
  427e1b:	jne    0x427e93
  427e1d:	ja     0x427e98
  427e1f:	jle    0x427e9f
  427e21:	sub    DWORD PTR [rsi+0x37],edi
  427e24:	(bad)  
  427e25:	(bad)  
  427e26:	(bad)  
  427e27:	(bad)  
  427e28:	(bad)  
  427e29:	(bad)  
  427e2a:	(bad)  
  427e2b:	(bad)  
  427e2c:	rex.RXB jle 0x427e67
  427e2f:	xor    rax,0x4a4a4a4a
  427e35:	and    bh,BYTE PTR [rax]
  427e37:	xor    eax,0x58575655
  427e3c:	pop    rcx
  427e3d:	ins    BYTE PTR es:[rdi],dx
  427e3e:	jle    0x427e5d
  427e40:	pop    rdx
  427e41:	jno    0x427e79
  427e43:	cmp    BYTE PTR [rbx],dh
  427e45:	(bad)  
  427e46:	(bad)  
  427e47:	jno    0x427ec5
  427e49:	adc    al,0x15
  427e4b:	sbb    BYTE PTR [rcx],bl
  427e4d:	jp     0x427eca
  427e4f:	jnp    0x427ecc
  427e51:	jl     0x427ed0
  427e53:	jl     0x427ed2
  427e55:	jge    0x427ec8
  427e57:	xor    edx,DWORD PTR [rdi+rax*2]
  427e5a:	cmp    dl,BYTE PTR [rsi+0x35]
  427e5d:	ss (bad) 
  427e5f:	pop    rbx
  427e60:	pop    rsp
  427e61:	pop    rbp
  427e62:	imul   ebp,DWORD PTR [rdi+rbx*1+0x6e],0x79787434
  427e6a:	rex.XB jno 0x427ede
  427e6d:	ss push rcx
  427e6f:	push   rdx
  427e70:	imul   ebp,DWORD PTR [rdx+0x39],0x58353933
  427e77:	jle    0x427e7c
  427e79:	adc    al,0x18
  427e7b:	sbb    ebx,DWORD PTR [rbp+rsi*1+0x5e]
  427e7f:	pop    rdi
  427e80:	jle    0x427eea
  427e82:	push   0x6f
  427e84:	jo     0x427ebc
  427e86:	cmp    DWORD PTR [rax+0x7b],eax
  427e89:	xor    al,0x52
  427e8b:	xor    eax,0x477e6463
  427e90:	rex.WR
  427e91:	rex.WRB jle 0x427edb
  427e94:	xor    eax,0x37603836
  427e99:	jo     0x427ed0
  427e9b:	jns    0x427ede
  427e9d:	xor    eax,0x34653836
  427ea2:	ss (bad) 
  427ea4:	pop    rdi
  427ea5:	jle    0x427f08
  427ea7:	(bad)  
  427ea8:	ins    DWORD PTR es:[rdi],dx
  427ea9:	jno    0x427ee0
  427eab:	rex.R
  427eac:	fs adc al,0x18
  427eaf:	data16 addr32 rex.WRB jnp 0x427eea
  427eb4:	cmp    DWORD PTR [rsi+rsi*1],esi
  427eb7:	cmp    DWORD PTR [rdx+0x6b],esp
  427eba:	add    BYTE PTR [eax],al
  427ebd:	add    BYTE PTR [rax],al
  427ebf:	add    BYTE PTR [rip+0x55001500],ah        # 0x554293c5
  427ec5:	add    BYTE PTR [rax],bl
  427ec7:	add    BYTE PTR [rsi],ah
  427ec9:	add    BYTE PTR [rbp+0x0],ah
  427ecc:	data16 add BYTE PTR [rdi],ah
  427ecf:	add    BYTE PTR [rbx+0x75000f00],al
  427ed5:	add    BYTE PTR [rbx],ah
  427ed7:	add    BYTE PTR [rdi],cl
  427ed9:	add    BYTE PTR [rsi],bl
  427edb:	add    BYTE PTR [rdx],ah
  427edd:	add    BYTE PTR [rsi],dh
  427edf:	add    BYTE PTR [rbx+0x0],ah
  427ee2:	(bad)  
  427ee4:	cmp    DWORD PTR [rax],eax
  427ee6:	(bad)  
  427ee7:	add    BYTE PTR [rax],ch
  427ee9:	add    BYTE PTR [rbx],ah
  427eeb:	add    BYTE PTR [rbx],al
  427eed:	add    BYTE PTR [rbx],ch
  427eef:	add    BYTE PTR [rbx+0x0],ch
  427ef2:	adc    al,0x0
  427ef4:	xor    al,0x0
  427ef6:	and    eax,DWORD PTR [rax]
  427ef8:	add    BYTE PTR ss:[rax],bl
  427efb:	add    BYTE PTR [rdi],cl
  427efd:	add    BYTE PTR [rdi],dh
  427eff:	add    BYTE PTR [rsi],dh
  427f01:	add    BYTE PTR [rip+0x39003200],dh        # 0x3942b107
  427f07:	add    BYTE PTR [rdx],ch
  427f09:	add    BYTE PTR [rip+0x14002900],ah        # 0x1442a80f
  427f0f:	add    BYTE PTR [rsi],ah
  427f11:	add    BYTE PTR [rdi],dh
  427f13:	add    BYTE PTR [rdi],bh
  427f15:	add    BYTE PTR [rax],bl
  427f17:	add    BYTE PTR [rax],al
  427f19:	add    BYTE PTR [rcx+0x0],al
  427f1c:	sbb    eax,DWORD PTR [rax]
  427f1e:	(bad)  
  427f1f:	add    BYTE PTR [rcx+0x0],ch
  427f22:	push   0x0
  427f24:	test   DWORD PTR [rax],eax
  427f26:	xchg   BYTE PTR [rax],al
  427f28:	xor    al,0x0
  427f2a:	push   rbp
  427f2b:	add    BYTE PTR [rbx],dh
  427f2d:	add    BYTE PTR [rbx],bh
  427f2f:	add    BYTE PTR [rcx],ch
  427f31:	add    BYTE PTR [rcx+0x0],al
  427f34:	sub    eax,DWORD PTR [rax]
  427f36:	sub    al,0x0
  427f38:	sub    eax,0x2f002e00
  427f3d:	add    BYTE PTR [rax],dh
  427f3f:	add    BYTE PTR [rcx],dh
  427f41:	add    BYTE PTR [rbp+0x0],dl
  427f44:	add    BYTE PTR fs:[rbx+0x0],ah
  427f48:	and    BYTE PTR [rax],al
  427f4a:	cmp    BYTE PTR [rax],al
  427f4c:	push   0x3b00b200
  427f51:	add    BYTE PTR [rax+rax*1+0x6b00c5],dh
  427f58:	adc    BYTE PTR [rax],al
  427f5a:	lods   eax,DWORD PTR ds:[rsi]
  427f5b:	add    BYTE PTR [rip+0x14006300],dh        # 0x1442e261
  427f61:	add    BYTE PTR [rip+0x36003700],dl        # 0x3642b667
  427f67:	add    BYTE PTR [rax],bl
  427f69:	add    BYTE PTR [rcx],bl
  427f6b:	add    BYTE PTR [rcx],bh
  427f6d:	add    BYTE PTR [rbx+0x0],ch
  427f70:	adc    al,0x0
  427f72:	adc    eax,0x1c003b00
  427f77:	add    BYTE PTR [rax],bl
  427f79:	add    BYTE PTR [rcx],bl
  427f7b:	add    BYTE PTR [rbx],bh
  427f7d:	add    BYTE PTR [rax+rax*1],bh
  427f80:	cmp    eax,0x82007500
  427f85:	add    BYTE PTR [rax],dl
  427f87:	add    BYTE PTR [rax+0x0],bh
  427f8a:	test   DWORD PTR [rax],eax
  427f8c:	xchg   BYTE PTR [rax],al
  427f8e:	jg     0x427f90
  427f90:	xor    al,0x0
  427f92:	(bad)  
  427f93:	add    BYTE PTR [rsi],dh
  427f95:	add    BYTE PTR [rdi],cl
  427f97:	add    BYTE PTR [rdi],dh
  427f99:	add    BYTE PTR [rdi],dh
  427f9b:	add    BYTE PTR [rdx+0x78003700],al
  427fa1:	add    BYTE PTR [rbp+0x38008600],al
  427fa7:	add    BYTE PTR [rdi],dh
  427fa9:	add    BYTE PTR [rdi],dh
  427fab:	add    BYTE PTR [rdx],ah
  427fad:	add    BYTE PTR [rdi+0x0],bh
  427fb0:	(bad)  
  427fb1:	add    BYTE PTR [rdi],dh
  427fb3:	add    BYTE PTR [rdi],dh
  427fb5:	add    BYTE PTR [rip+0x35003700],dh        # 0x3542b6bb
  427fbb:	add    BYTE PTR [rip+0x36009700],bl        # 0x364316c1
  427fc1:	add    BYTE PTR [rax],bh
  427fc3:	add    BYTE PTR [rdi+0x3300e300],dl
  427fc9:	add    al,bl
  427fcb:	add    BYTE PTR [rdi],dh
  427fcd:	add    BYTE PTR [rdi-0x62ffec00],bl
  427fd3:	add    BYTE PTR [rbx],dh
  427fd5:	add    BYTE PTR [rdi],bl
  427fd7:	add    BYTE PTR [rdi],dh
  427fd9:	add    BYTE PTR [rdx-0x5bff5e00],ah
  427fdf:	add    BYTE PTR [rdx],bh
  427fe1:	add    BYTE PTR [rsi],dh
  427fe3:	add    BYTE PTR [rip+0x35003900],dh        # 0x3542b8e9
  427fe9:	add    BYTE PTR [rdi],dh
  427feb:	add    BYTE PTR [rsi+0x36009f00],ch
  427ff1:	add    BYTE PTR [rsi+0x33003700],ch
  427ff7:	add    BYTE PTR [rax-0x4dffc700],dh
  427ffd:	add    BYTE PTR [rbx+0x400b400],dh
  428003:	add    BYTE PTR [rip+0x7000600],al        # 0x7428609
  428009:	add    BYTE PTR [rax],cl
  42800b:	add    BYTE PTR [rcx],cl
  42800d:	add    BYTE PTR [rdx],cl
  42800f:	add    BYTE PTR [rbx],cl
  428011:	add    BYTE PTR [rax+rax*1],cl
  428014:	or     eax,0xf000e00
  428019:	add    BYTE PTR [rip+0x3500c300],dh        # 0x3543431f
  42801f:	add    BYTE PTR [rip+0x36003800],dh        # 0x3642b825
  428025:	add    BYTE PTR [rip+0x35003700],dh        # 0x3542b72b
  42802b:	add    dh,dl
  42802d:	add    BYTE PTR [rsi],dh
  42802f:	add    al,bl
  428031:	add    BYTE PTR [rdi],dh
  428033:	add    BYTE PTR [rip+0x38002500],dh        # 0x3842a539
  428039:	add    BYTE PTR [rax+rax*1],dh
  42803c:	and    DWORD PTR [rax],eax
  42803e:	stos   BYTE PTR es:[rdi],al
  42803f:	add    BYTE PTR [rbx],ah
  428041:	add    ch,dl
  428043:	add    bh,al
  428045:	add    BYTE PTR [rsi],ah
  428047:	add    al,bl
  428049:	add    BYTE PTR [rdi],dh
  42804b:	add    dl,ah
  42804d:	add    BYTE PTR [rbp-0x2aff5200],bl
  428053:	add    dh,bl
  428055:	add    bl,dh
  428057:	add    BYTE PTR [rdi-0x1dff0a00],bl
  42805d:	add    dh,bl
  42805f:	add    ch,dh
  428061:	add    BYTE PTR [rax+0x0],bh
  428064:	(bad)  
  428065:	add    bl,dh
  428067:	add    bl,al
  428069:	add    bh,bh
  42806b:	(bad)  
  42806c:	(bad)  
  42806d:	(bad)  
  42806e:	(bad)  
  42806f:	(bad)  
  428070:	cmp    eax,DWORD PTR [rax]
  428072:	add    al,0x0
  428074:	add    eax,0x7000600
  428079:	add    BYTE PTR [rax],cl
  42807b:	add    BYTE PTR [rcx],cl
  42807d:	add    BYTE PTR [rdx],cl
  42807f:	add    BYTE PTR [rbx],cl
  428081:	add    BYTE PTR [rax+rax*1],cl
  428084:	or     eax,0xf000e00
  428089:	add    BYTE PTR [rax+rax*1],al
  42808c:	add    eax,0x7000600
  428091:	add    BYTE PTR [rax],cl
  428093:	add    BYTE PTR [rcx],cl
  428095:	add    BYTE PTR [rdx],cl
  428097:	add    BYTE PTR [rbx],cl
  428099:	add    BYTE PTR [rax+rax*1],cl
  42809c:	or     eax,0xf000e00
  4280a1:	add    bh,bh
  4280a3:	(bad)  
  4280a4:	(bad)  
  4280a5:	(bad)  
  4280a6:	(bad)  
  4280a7:	(bad)  
  4280a8:	(bad)  
  4280a9:	(bad)  
  4280aa:	(bad)  
  4280ab:	(bad)  
  4280ac:	(bad)  
  4280ad:	(bad)  
  4280ae:	(bad)  
  4280af:	(bad)  
  4280b0:	(bad)  
  4280b1:	(bad)  
  4280b2:	(bad)  
  4280b3:	(bad)  
  4280b4:	(bad)  
  4280b5:	jmp    QWORD PTR [rsi]
  4280b7:	add    bh,bh
  4280b9:	(bad)  
  4280ba:	(bad)  
  4280bb:	(bad)  
  4280bc:	(bad)  
  4280bd:	(bad)  
  4280be:	(bad)  
  4280bf:	(bad)  
  4280c0:	(bad)  
  4280c1:	(bad)  
  4280c2:	(bad)  
  4280c3:	(bad)  
  4280c4:	(bad)  
  4280c5:	(bad)  
  4280c6:	(bad)  
  4280c7:	(bad)  
  4280c8:	(bad)  
  4280c9:	(bad)  
  4280ca:	(bad)  
  4280cb:	(bad)  
  4280cc:	(bad)  
  4280cd:	jmp    QWORD PTR [rsi]
  4280cf:	add    bh,bh
  4280d1:	(bad)  
  4280d2:	(bad)  
  4280d3:	(bad)  
  4280d4:	(bad)  
  4280d5:	(bad)  
  4280d6:	(bad)  
  4280d7:	(bad)  
  4280d8:	(bad)  
  4280d9:	(bad)  
  4280da:	(bad)  
  4280db:	(bad)  
  4280dc:	(bad)  
  4280dd:	(bad)  
  4280de:	(bad)  
  4280df:	(bad)  
  4280e0:	cmp    eax,DWORD PTR [rax]
  4280e2:	(bad)  
  4280e3:	(bad)  
  4280e4:	(bad)  
  4280e5:	(bad)  
  4280e6:	(bad)  
  4280e7:	(bad)  
  4280e8:	(bad)  
  4280e9:	(bad)  
  4280ea:	(bad)  
  4280eb:	(bad)  
  4280ec:	(bad)  
  4280ed:	(bad)  
  4280ee:	(bad)  
  4280ef:	(bad)  
  4280f0:	(bad)  
  4280f1:	(bad)  
  4280f2:	cmp    BYTE PTR [rax],al
  4280f4:	add    al,0x0
  4280f6:	add    eax,0x7000600
  4280fb:	add    BYTE PTR [rax],cl
  4280fd:	add    BYTE PTR [rcx],cl
  4280ff:	add    BYTE PTR [rdx],cl
  428101:	add    BYTE PTR [rbx],cl
  428103:	add    BYTE PTR [rax+rax*1],cl
  428106:	or     eax,0xf000e00
  42810b:	add    bh,bh
  42810d:	(bad)  
  42810e:	(bad)  
  42810f:	dec    DWORD PTR [rdi]
  428111:	add    BYTE PTR [rax],dl
  428113:	add    BYTE PTR [rcx],dl
  428115:	add    BYTE PTR [rdx],dl
  428117:	add    BYTE PTR [rbx],dl
  428119:	add    BYTE PTR [rax+rax*1],dl
  42811c:	adc    eax,0x17001600
  428121:	add    BYTE PTR [rax],bl
  428123:	add    BYTE PTR [rcx],bl
  428125:	add    BYTE PTR [rdx],bl
  428127:	add    BYTE PTR [rbx],bl
  428129:	add    bh,bh
  42812b:	(bad)  
  42812c:	(bad)  
  42812d:	(bad)  
  42812e:	(bad)  
  42812f:	(bad)  
  428130:	(bad)  
  428131:	(bad)  
  428132:	(bad)  
  428133:	(bad)  
  428134:	(bad)  
  428135:	(bad)  
  428136:	(bad)  
  428137:	jmp    QWORD PTR [rsi]
  428139:	add    BYTE PTR [rax+rax*1],ah
  42813c:	(bad)  
  42813d:	jmp    QWORD PTR [rsi]
  42813f:	add    BYTE PTR [rdi],ah
  428141:	add    BYTE PTR [rax],ch
  428143:	add    bh,bh
  428145:	(bad)  
  428146:	(bad)  
  428147:	(bad)  
  428148:	(bad)  
  428149:	(bad)  
  42814a:	(bad)  
  42814b:	(bad)  
  42814c:	(bad)  
  42814d:	(bad)  
  42814e:	(bad)  
  42814f:	(bad)  
  428150:	(bad)  
  428151:	(bad)  
  428152:	(bad)  
  428153:	push   QWORD PTR [rax+rax*1]
  428156:	(bad)  
  428157:	push   QWORD PTR [rbx]
  428159:	add    BYTE PTR [rax+rax*1],al
  42815c:	add    eax,0x7000600
  428161:	add    BYTE PTR [rax],cl
  428163:	add    BYTE PTR [rcx],cl
  428165:	add    BYTE PTR [rdx],cl
  428167:	add    BYTE PTR [rbx],cl
  428169:	add    BYTE PTR [rax+rax*1],cl
  42816c:	or     eax,0xf000e00
  428171:	add    bh,bh
  428173:	call   QWORD PTR [rax]
  428175:	add    BYTE PTR [rcx],dl
  428177:	add    BYTE PTR [rdx],dl
  428179:	add    BYTE PTR [rbx],dl
  42817b:	add    BYTE PTR [rax+rax*1],dl
  42817e:	adc    eax,0x17001600
  428183:	add    BYTE PTR [rax],bl
  428185:	add    BYTE PTR [rcx],bl
  428187:	add    BYTE PTR [rdx],bl
  428189:	add    BYTE PTR [rbx],bl
  42818b:	add    bh,bh
  42818d:	(bad)  
  42818e:	(bad)  
  42818f:	(bad)  
  428190:	(bad)  
  428191:	(bad)  
  428192:	(bad)  
  428193:	(bad)  
  428194:	(bad)  
  428195:	(bad)  
  428196:	(bad)  
  428197:	(bad)  
  428198:	(bad)  
  428199:	(bad)  
  42819a:	(bad)  
  42819b:	(bad)  
  42819c:	(bad)  
  42819d:	jmp    QWORD PTR [rsi]
	...
  4281bf:	add    BYTE PTR [rbx+0x0],al
  4281c2:	(bad)  
  4281c3:	add    BYTE PTR [rcx+0x45002100],al
  4281c9:	add    BYTE PTR [rsi+0x56008f00],cl
  4281cf:	add    BYTE PTR [rcx-0x66ffed00],ch
  4281d5:	add    BYTE PTR [rdi],bh
  4281d7:	add    BYTE PTR [rbx],dl
  4281d9:	add    BYTE PTR [rcx],al
  4281db:	add    BYTE PTR [rax+rax*1],dh
  4281de:	(bad)
  4281e1:	add    BYTE PTR [rbx],dl
  4281e3:	add    dh,al
  4281e5:	add    BYTE PTR [rdi+0x0],bl
  4281e8:	(bad)  
  4281e9:	add    BYTE PTR [rsi],bh
  4281eb:	add    BYTE PTR [rax-0x69ff9e00],bh
  4281f1:	add    ch,ch
  4281f3:	add    BYTE PTR [rsi-0x7dffc000],ah
  4281f9:	add    dh,ch
  4281fb:	add    BYTE PTR [rbx],dl
  4281fd:	add    BYTE PTR [rdi],bh
  4281ff:	add    bl,dh
  428201:	add    BYTE PTR [rbp+0x0],ch
  428204:	add    eax,DWORD PTR [rax]
  428206:	hlt    
  428207:	add    BYTE PTR [rsi],bl
  428209:	add    BYTE PTR [rax],ch
  42820b:	add    BYTE PTR [rcx+0x0],ah
  42820e:	mov    ecx,0x3e001400
  428213:	add    BYTE PTR [rcx],ah
  428215:	add    BYTE PTR [rdx+0x7e000500],bh
  42821b:	add    BYTE PTR [rbx-0x6bffc000],bh
  428221:	add    BYTE PTR [rbp-0x53ff5500],dl
  428227:	add    BYTE PTR [rcx],ch
  428229:	add    BYTE PTR [rsi+0x0],dl
  42822c:	(bad)  
  42822d:	add    BYTE PTR [rdx],ah
  42822f:	add    BYTE PTR [rax+rax*1],ch
  428232:	jge    0x428234
  428234:	sub    eax,0x2f002e00
  428239:	add    BYTE PTR [rax],dh
  42823b:	add    BYTE PTR [rcx],dh
  42823d:	add    BYTE PTR [rdx],dh
  42823f:	add    BYTE PTR [rbx],dh
  428241:	add    BYTE PTR [rdi+0x0],bl
  428244:	mov    BYTE PTR [rax],al
  428246:	push   rsi
  428247:	add    BYTE PTR [rbx],ah
  428249:	add    dh,dl
  42824b:	add    BYTE PTR [rbx-0x67ff3100],dl
  428251:	call   rbx
  428253:	add    bl,bl
  428255:	add    BYTE PTR [rsi+0x0],dl
  428258:	add    al,r9b
  42825b:	add    BYTE PTR [rip+0xffffffff89005f00],ah        # 0xffffffff8942e161
  428261:	add    BYTE PTR [rdx-0x9ffda00],cl
  428267:	add    BYTE PTR [rbx-0x8ff7400],cl
  42826d:	add    BYTE PTR [rdi+0x0],bl
  428270:	mov    DWORD PTR [rax],eax
  428272:	mov    al,BYTE PTR [rax]
  428274:	sub    eax,DWORD PTR [rax]
  428276:	add    BYTE PTR [r11+0x72008c00],cl
  42827d:	add    BYTE PTR [rbx+0x0],dh
  428280:	je     0x428282
  428282:	ins    DWORD PTR es:[rdi],dx
  428283:	add    BYTE PTR [rsi+0x0],dl
  428286:	add    BYTE PTR [rsi+0x0],r15b
  42828a:	push   rsi
  42828b:	add    BYTE PTR [rsi+0x0],dl
  42828e:	movabs ds:0x1300e2002700e100,al
  428297:	add    BYTE PTR [rbx+0x0],ah
  42829a:	add    BYTE PTR fs:[rdi+0x0],bl
  42829e:	add    BYTE PTR gs:[rbp+0x0],bh
  4282a2:	pop    rdi
  4282a3:	add    BYTE PTR [rdi+0x0],bl
  4282a6:	outs   dx,BYTE PTR ds:[rsi]
  4282a7:	add    BYTE PTR [rsi+0x0],ah
  4282aa:	add    BYTE PTR [ebp+0x0],dh
  4282ae:	movabs ds:0x70006a0069006800,eax
  4282b7:	add    BYTE PTR [rbx+0x0],ch
  4282ba:	ja     0x4282bc
  4282bc:	jg     0x4282be
  4282be:	mov    al,0x0
  4282c0:	(bad)  
  4282c1:	add    BYTE PTR [rbx-0xdff4f00],al
  4282c7:	add    BYTE PTR [rax+rax*1+0x8500e9],al
  4282ce:	movabs ds:0xa4009700b7009800,al
  4282d7:	add    BYTE PTR [rsi-0x3fffdf00],al
  4282dd:	add    dl,al
  4282df:	add    BYTE PTR [rdx-0x63ff6300],bl
  4282e5:	add    BYTE PTR [rdx-0x61ff4b00],dh
  4282eb:	add    BYTE PTR [rax-0x52ff5d00],dh
  4282f1:	add    BYTE PTR [rcx-0x4c003b00],dh
  4282f7:	add    dh,cl
  4282f9:	add    BYTE PTR [rax+rax*1+0xd2006d],dh
  428300:	ins    DWORD PTR es:[rdi],dx
  428301:	add    BYTE PTR [rax],cl
  428303:	add    BYTE PTR [rcx],cl
  428305:	add    BYTE PTR [rdx],cl
  428307:	add    BYTE PTR [rbx],cl
  428309:	add    BYTE PTR [rax+rax*1],cl
  42830c:	or     eax,0xf000e00
  428311:	add    BYTE PTR [rax],dl
  428313:	add    BYTE PTR [rcx],dl
  428315:	add    BYTE PTR [rdx],dl
  428317:	add    BYTE PTR [rbx],dl
  428319:	add    BYTE PTR [rbp-0x34ff3e00],bh
  42831f:	add    ah,dl
  428321:	add    bh,bl
  428323:	add    ch,dl
  428325:	add    dl,bl
  428327:	add    al,bl
  428329:	add    ch,bl
  42832b:	add    al,ch
  42832d:	add    dh,bl
  42832f:	add    BYTE PTR [rsi+0x0],dl
  428332:	jrcxz  0x428334
  428334:	(bad)  
  428335:	add    BYTE PTR [rax],ch
  428337:	add    dh,dl
  428339:	add    ch,dh
  42833b:	add    BYTE PTR [rip+0x3600c700],dh        # 0x36434a41
  428341:	add    ch,ah
  428343:	add    ah,bl
  428345:	add    BYTE PTR [rax+rax*1],dl
  428348:	pop    rdi
  428349:	add    BYTE PTR [rdi+0x0],ch
  42834c:	icebp  
  42834d:	add    BYTE PTR [rsi-0x1bff3600],dh
  428353:	add    dh,cl
  428355:	add    al,bh
  428357:	add    BYTE PTR [rax+rax*1+0xd200fa],bh
  42835e:	in     al,dx
  42835f:	add    cl,bh
  428361:	add    BYTE PTR [rbx-0x17ff5900],bl
  428367:	add    cl,bl
  428369:	add    BYTE PTR [rax],al
  42836b:	add    BYTE PTR [rax],al
  42836d:	add    BYTE PTR [rax],al
  42836f:	add    BYTE PTR [rip+0x9000800],dl        # 0x9428b75
  428375:	add    BYTE PTR [rdx],cl
  428377:	add    BYTE PTR [rbx],cl
  428379:	add    BYTE PTR [rax+rax*1],cl
  42837c:	or     eax,0xf000e00
  428381:	add    BYTE PTR [rax],dl
  428383:	add    BYTE PTR [rcx],dl
  428385:	add    BYTE PTR [rdx],dl
  428387:	add    BYTE PTR [rbx],dl
  428389:	add    BYTE PTR [rax],cl
  42838b:	add    BYTE PTR [rcx],cl
  42838d:	add    BYTE PTR [rdx],cl
  42838f:	add    BYTE PTR [rbx],cl
  428391:	add    BYTE PTR [rax+rax*1],cl
  428394:	or     eax,0xf000e00
  428399:	add    BYTE PTR [rax],dl
  42839b:	add    BYTE PTR [rcx],dl
  42839d:	add    BYTE PTR [rdx],dl
  42839f:	add    BYTE PTR [rbx],dl
	...
  4283b5:	add    BYTE PTR [rax+rax*1],dl
	...
  4283cc:	add    BYTE PTR [rax],al
  4283ce:	adc    al,0x0
	...
  4283e0:	adc    eax,0x0
	...
  4283f1:	add    BYTE PTR [rsi+0x0],dh
  4283f4:	or     BYTE PTR [rax],al
  4283f6:	or     DWORD PTR [rax],eax
  4283f8:	or     al,BYTE PTR [rax]
  4283fa:	or     eax,DWORD PTR [rax]
  4283fc:	or     al,0x0
  4283fe:	or     eax,0xf000e00
  428403:	add    BYTE PTR [rax],dl
  428405:	add    BYTE PTR [rcx],dl
  428407:	add    BYTE PTR [rdx],dl
  428409:	add    BYTE PTR [rbx],dl
  42840b:	add    BYTE PTR [rax],al
  42840d:	add    BYTE PTR [rax],al
  42840f:	add    BYTE PTR [rbx],dl
  428411:	add    BYTE PTR [rsi+0x0],al
  428414:	rex.RXB add BYTE PTR [r8+0x0],r9b
  428418:	rex.WB add BYTE PTR [r10+0x0],cl
  42841c:	rex.WXB add BYTE PTR [r8+r8*1+0x4d],cl
  428421:	add    BYTE PTR [rsi+0x0],cl
  428424:	rex.WRXB add BYTE PTR [r8+0x0],r10b
  428428:	push   rcx
	...
  428435:	add    BYTE PTR [rax],al
  428437:	add    BYTE PTR [rax+rax*1],dl
  42843a:	push   rdx
  42843b:	add    BYTE PTR [rax],al
  42843d:	add    BYTE PTR [rax+rax*1],dl
  428440:	push   rbx
  428441:	add    BYTE PTR [rax+rax*1+0x0],dl
	...
  428451:	add    BYTE PTR [rax],al
  428453:	add    cl,cl
  428455:	add    BYTE PTR [rax],al
  428457:	add    BYTE PTR [rbp+0x0],dl
  42845a:	or     BYTE PTR [rax],al
  42845c:	or     DWORD PTR [rax],eax
  42845e:	or     al,BYTE PTR [rax]
  428460:	or     eax,DWORD PTR [rax]
  428462:	or     al,0x0
  428464:	or     eax,0xf000e00
  428469:	add    BYTE PTR [rax],dl
  42846b:	add    BYTE PTR [rcx],dl
  42846d:	add    BYTE PTR [rdx],dl
  42846f:	add    BYTE PTR [rbx],dl
  428471:	add    BYTE PTR [rax],al
  428473:	add    BYTE PTR [rsi+0x0],al
  428476:	rex.RXB add BYTE PTR [r8+0x0],r9b
  42847a:	rex.WB add BYTE PTR [r10+0x0],cl
  42847e:	rex.WXB add BYTE PTR [r8+r8*1+0x4d],cl
  428483:	add    BYTE PTR [rsi+0x0],cl
  428486:	rex.WRXB add BYTE PTR [r8+0x0],r10b
  42848a:	push   rcx
	...
  42849b:	add    BYTE PTR [rax],al
  42849d:	add    BYTE PTR [rax+rax*1],dl
	...
  4284c0:	(bad)  
  4284c1:	inc    DWORD PTR [rdx]
  4284c3:	add    BYTE PTR [rax+rax*1],al
  4284c6:	(bad)  
  4284c7:	add    BYTE PTR [rsi],dl
  4284c9:	add    BYTE PTR [rax],ah
  4284cb:	add    BYTE PTR [rdx],ch
  4284cd:	add    BYTE PTR [rdx+0x2400eb00],ch
  4284d3:	add    BYTE PTR [rdi],dh
  4284d5:	add    BYTE PTR [rax+rax*1+0x38],ch
  4284d9:	add    BYTE PTR [rcx],bh
  4284db:	add    BYTE PTR [rcx+0x0],dh
  4284de:	cmp    al,BYTE PTR [rax]
  4284e0:	rol    BYTE PTR [rax],1
  4284e2:	rol    DWORD PTR [rax],1
  4284e4:	cmp    eax,DWORD PTR [rax]
  4284e6:	cmp    al,0x0
  4284e8:	cmp    eax,0xaf00ae00
  4284ed:	add    BYTE PTR [rdi],dl
  4284ef:	add    BYTE PTR [rdx+0x0],al
  4284f2:	js     0x4284f4
  4284f4:	jns    0x4284f6
  4284f6:	jp     0x4284f8
  4284f8:	jnp    0x4284fa
  4284fa:	jl     0x4284fc
  4284fc:	add    BYTE PTR [rax],0x9f
  4284ff:	add    BYTE PTR [rax-0x41ff5f00],ah
  428505:	add    BYTE PTR [rdi-0x19ff2900],bh
  42850b:	add    bh,ah
  42850d:	add    ah,cl
  42850f:	add    ch,cl
  428511:	add    al,ah
  428513:	add    bh,ch
  428515:	add    al,dh
  428517:	add    cl,al
  428519:	add    BYTE PTR [rax],bl
  42851b:	add    BYTE PTR [rcx],bl
  42851d:	add    BYTE PTR [rdx],bl
  42851f:	add    BYTE PTR [rbx],bl
  428521:	add    BYTE PTR [rax+rax*1],bl
  428524:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  428525:	add    bl,al
  428527:	add    ah,al
  428529:	add    BYTE PTR [rdi+0x0],dl
  42852c:	pop    rax
  42852d:	add    BYTE PTR [rcx+0x0],bl
  428530:	pop    rdx
  428531:	add    BYTE PTR [rbx+0x0],bl
  428534:	pop    rsp
  428535:	add    BYTE PTR [rbp+0x0],bl
  428538:	test   al,0x0
  42853a:	pop    rsi
  42853b:	add    BYTE PTR [rbp-0x6eff7000],cl
  428541:	add    BYTE PTR [rdx+0x1d00],dl
	...
  42857f:	add    BYTE PTR [rdi+rdi*8-0x7b007c],al
  428586:	test   bh,bh
  428588:	adc    eax,0x84fffb00
  42858d:	inc    DWORD PTR [rdi+rdi*8-0x7b007c]
  428594:	test   bh,bh
  428596:	xchg   ebp,eax
  428597:	dec    DWORD PTR [rsi+0x23ff8400]
  42859d:	add    BYTE PTR [rdi+rdi*8-0x1b007c],al
  4285a4:	test   bh,bh
  4285a6:	test   bh,bh
  4285a8:	test   bh,bh
  4285aa:	test   bh,bh
  4285ac:	sbb    al,BYTE PTR [rax]
  4285ae:	repnz inc DWORD PTR [rdi+rdi*8+0x59ff84]
  4285b6:	test   bh,bh
  4285b8:	sub    al,BYTE PTR [rax]
  4285ba:	test   bh,bh
  4285bc:	test   bh,bh
  4285be:	test   bh,bh
  4285c0:	sub    eax,0x84ff8400
  4285c5:	push   rsp
  4285c7:	inc    DWORD PTR [rdi+rdi*8-0x27007c]
  4285ce:	test   bh,bh
  4285d0:	icebp  
  4285d1:	inc    DWORD PTR [rdi+rdi*8-0x28007c]
  4285d8:	test   bh,bh
  4285da:	call   0xffffffffdc4271de
  4285df:	(bad)  
  4285e0:	clc    
  4285e1:	jmp    rax
  4285e3:	inc    DWORD PTR [rdi+rdi*8+0x11ff84]
  4285ea:	lods   eax,DWORD PTR ds:[rsi]
  4285eb:	inc    DWORD PTR [rdi+rdi*8+0x50ff84]
  4285f2:	test   bh,bh
  4285f4:	test   bh,bh
  4285f6:	test   bh,bh
  4285f8:	test   bh,bh
  4285fa:	test   edi,edi
  4285fc:	test   bh,bh
  4285fe:	movabs al,ds:0xffecffc7ffdeff
	...
  428643:	add    eax,DWORD PTR [rax]
  428645:	add    DWORD PTR [rcx+0x2],ebx
  428648:	and    esp,DWORD PTR ds:0x29282726
  42864f:	sub    ch,BYTE PTR [rbx]
  428651:	sub    al,0x2d
  428653:	xchg   esi,eax
  428654:	imul   eax,DWORD PTR [rax],0x56005806
  42865a:	or     eax,DWORD PTR [rax]
  42865c:	push   rdi
  42865d:	push   0x0
  428662:	add    BYTE PTR [rsi+rbp*1],cl
  428665:	pop    rcx
  428666:	add    BYTE PTR [rdx+0x0],dh
  428669:	add    al,0x7
	...
  428677:	or     eax,0x1717110e
  42867c:	(bad)  
  42867d:	(bad)  
  42867e:	pop    rax
  42867f:	add    BYTE PTR [rax],al
  428681:	(bad)  
  428682:	cmp    al,0x5a
  428684:	xchg   ebx,eax
  428685:	mov    WORD PTR [ecx-0x7a7b7c7e],es
  42868c:	xchg   BYTE PTR [rdi-0x74757678],al
  428692:	js     0x42870d
  428694:	jp     0x428708
  428696:	jge    0x4286f3
  428698:	jo     0x42870b
  42869a:	jae    0x428711
  42869c:	jnp    0x42871a
  42869e:	ja     0x428708
  4286a0:	add    BYTE PTR [rax],al
  4286a2:	add    BYTE PTR [rdx+0x0],dh
  4286a5:	add    BYTE PTR [rax],al
  4286a7:	add    BYTE PTR [rax],al
  4286a9:	add    BYTE PTR [rax],al
  4286ab:	jb     0x4286ad
  4286ad:	adc    BYTE PTR [rax],al
  4286af:	prefetcht1 BYTE PTR [rbx]
  4286b2:	(bad)  
  4286b3:	adc    eax,0x12000014
  4286b8:	xor    BYTE PTR [rax],al
  4286ba:	xor    esi,DWORD PTR [rip+0x3d683400]        # 0x3daabac0
  4286c0:	push   0x0
  4286c2:	add    BYTE PTR [rax],al
  4286c4:	or     BYTE PTR [rdx+0x72],dh
  4286c7:	pop    rsi
  4286c8:	(bad)  
  4286c9:	(bad)  
  4286ca:	xchg   ecx,eax
  4286cb:	nop
  4286cc:	xchg   edx,eax
  4286cd:	(bad)  
  4286ce:	lea    esp,[rbx-0x6b]
  4286d1:	xchg   esp,eax
  4286d2:	fs gs data16 (bad) 
  4286d6:	pop    rbp
  4286d7:	add    BYTE PTR [rax],al
  4286d9:	add    BYTE PTR [rax],al
  4286db:	add    BYTE PTR [rcx],dh
  4286dd:	add    BYTE PTR [rax],al
  4286df:	add    BYTE PTR ds:[rcx+0x0],al
  4286e3:	rex.X imul eax,DWORD PTR [rip+0x7f007476],0x59        # 0x7f42fb61
  4286eb:	pop    rdi
  4286ec:	pop    rsp
  4286ed:	add    BYTE PTR [rax],al
  4286ef:	add    BYTE PTR [rax],al
  4286f1:	push   rsi
  4286f2:	add    BYTE PTR [rax],al
  4286f4:	add    BYTE PTR [rdx],dh
  4286f6:	cmp    edi,DWORD PTR ss:[rdx]
  4286f9:	cmp    BYTE PTR [rdi],dh
  4286fb:	cmp    DWORD PTR [rax],eax
  4286fd:	(bad)  
  4286fe:	rex.XB
  4286ff:	rex.R
  428700:	rex.RXB add BYTE PTR [r13+0x6c],r10b
  428704:	add    BYTE PTR [rax],al
  428706:	jle    0x42870e
  428708:	mov    ds,WORD PTR [rdi]
  42870a:	add    BYTE PTR [rax],ah
  42870c:	and    cl,BYTE PTR [rdi+rcx*2+0x1d]
  428710:	add    BYTE PTR [rdx],bl
  428712:	add    BYTE PTR [rsi],bl
  428714:	add    BYTE PTR [rax],al
  428717:	rex.RX jb 0x42871a
  42871a:	ins    DWORD PTR es:[rdi],dx
  42871b:	or     BYTE PTR [rcx],0x21
  42871e:	add    BYTE PTR [rax],al
  428720:	rex.WRX sbb QWORD PTR [rax],r8
  428723:	add    BYTE PTR [rbp+0x47],al
  428726:	add    BYTE PTR [rcx+0x4b],cl
  428729:	outs   dx,DWORD PTR ds:[rsi]
  42872a:	outs   dx,BYTE PTR ds:[rsi]
  42872b:	add    BYTE PTR [rbp+0x54],cl
  42872e:	push   rbx
  42872f:	add    BYTE PTR [rcx+0x1b],dl
  428732:	sbb    al,0x0
  428734:	rex.W pop rcx
  428736:	add    BYTE PTR [rax+0x4a],dl
  428739:	or     dl,BYTE PTR [rdx+0x0]
  42873c:	add    BYTE PTR [rax],al
  42873e:	add    BYTE PTR [rax],al
  428740:	out    dx,eax
  428741:	push   rax
  428743:	jmp    FWORD PTR [rax+rax*1]
  428746:	test   bh,bh
  428748:	add    eax,DWORD PTR [rax]
  42874a:	test   bh,bh
  42874c:	(bad)  
  42874d:	add    BYTE PTR [rdi+rdi*8-0x7b007c],al
  428754:	test   bh,bh
  428756:	test   bh,bh
  428758:	test   bh,bh
  42875a:	test   bh,bh
  42875c:	test   bh,bh
  42875e:	test   bh,bh
  428760:	test   bh,bh
  428762:	test   bh,bh
  428764:	test   bh,bh
  428766:	test   bh,bh
  428768:	test   bh,bh
  42876a:	cli    
  42876b:	inc    DWORD PTR [rdi+rdi*8+0x149ff84]
  428772:	cld    
  428773:	jmp    QWORD PTR [rax+rax*1]
  428776:	sbb    DWORD PTR [rax],eax
  428778:	test   bh,bh
  42877a:	test   bh,bh
  42877c:	sbb    eax,DWORD PTR [rax]
  42877e:	xor    al,BYTE PTR [rax]
  428780:	add    BYTE PTR [rax],al
  428782:	(bad)  
  428783:	add    BYTE PTR [rdi],cl
  428785:	add    BYTE PTR [rbp-0x2affc100],bl
  42878b:	add    BYTE PTR [rbx+0x0],dl
  42878e:	sbb    DWORD PTR [rcx],eax
  428790:	pop    rsp
  428791:	add    BYTE PTR [rdi+rdi*8-0x2007c],al
  428798:	xor    eax,0x38003600
  42879d:	add    BYTE PTR [rip+0x41003e00],bh        # 0x4142c5a3
  4287a3:	add    BYTE PTR [rdx+0x0],al
  4287a6:	rex.XB add BYTE PTR [r13+0x0],al
  4287aa:	pop    rsp
  4287ab:	add    BYTE PTR [rbx],bh
  4287ad:	add    BYTE PTR [rbp-0x7b007c00],bl
  4287b3:	inc    DWORD PTR [rsi+0x0]
  4287b6:	rex.RX add BYTE PTR [rsi+0x0],r8b
  4287ba:	add    BYTE PTR [rax+r8*1-0x1f],r10b
  4287bf:	add    BYTE PTR [rax+0x0],cl
  4287c2:	(bad)  
  4287c3:	add    BYTE PTR [rcx+0x0],ah
  4287c6:	test   bh,bh
  4287c8:	test   bh,bh
  4287ca:	test   bh,bh
  4287cc:	test   bh,bh
  4287ce:	test   bh,bh
  4287d0:	test   bh,bh
  4287d2:	test   bh,bh
  4287d4:	test   bh,bh
  4287d6:	test   bh,bh
  4287d8:	test   bh,bh
  4287da:	test   bh,bh
  4287dc:	test   bh,bh
  4287de:	test   bh,bh
  4287e0:	test   bh,bh
  4287e2:	test   bh,bh
  4287e4:	test   bh,bh
  4287e6:	test   bh,bh
  4287e8:	test   bh,bh
  4287ea:	sbb    DWORD PTR [rcx],eax
  4287ec:	test   bh,bh
  4287ee:	rex.WX add BYTE PTR [rdi+r15*8-0x7b007c],al
  4287f6:	test   bh,bh
  4287f8:	test   bh,bh
  4287fa:	test   bh,bh
  4287fc:	test   bh,bh
  4287fe:	rex.WB add BYTE PTR [r9+0x0],dl
  428802:	rex.WRXB add BYTE PTR [r13+0x0],r10b
  428806:	sbb    DWORD PTR [rcx],eax
  428808:	push   rbx
  428809:	add    BYTE PTR [rax+rax*1+0x44],al
  42880d:	add    BYTE PTR [rax+rax*1],bh
  428810:	push   rbx
  428811:	add    BYTE PTR [rax+rax*1],bh
  428814:	cmp    al,0x0
  428816:	sbb    DWORD PTR [rcx],eax
  428818:	push   rdi
  428819:	add    BYTE PTR [rdi+rdi*8-0x7bff8c],al
  428820:	test   bh,bh
  428822:	test   bh,bh
  428824:	test   bh,bh
  428826:	test   bh,bh
  428828:	test   bh,bh
  42882a:	pop    rsp
  42882b:	add    BYTE PTR [rsi+0x0],dl
  42882e:	test   bh,bh
  428830:	(bad)  
  428831:	add    BYTE PTR [rbp+0x0],bl
  428834:	pop    rbx
  428835:	add    BYTE PTR [rdi+rdi*8-0x7bffa2],al
  42883c:	movsxd eax,DWORD PTR [rax]
  42883e:	(bad)  
  42883f:	add    BYTE PTR [rax+rax*1-0x1a],ch
  428843:	call   FWORD PTR [rcx]
  428845:	add    DWORD PTR [rdx+0x1],ecx
  428848:	test   bh,bh
  42884a:	sbb    DWORD PTR [rcx],eax
  42884c:	sbb    DWORD PTR [rcx],eax
  42884e:	rex.WX add BYTE PTR [rdi+r15*8-0x7b007c],al
  428856:	test   bh,bh
  428858:	test   bh,bh
  42885a:	(bad)  
  42885b:	add    BYTE PTR [rdi+rdi*8-0x7b007c],al
  428862:	test   bh,bh
  428864:	test   bh,bh
  428866:	test   bh,bh
  428868:	test   bh,bh
  42886a:	test   bh,bh
  42886c:	rex.WX add BYTE PTR [rcx+0x1],cl
  428870:	pop    rdx
  428871:	add    BYTE PTR [rax+0x0],ch
  428874:	add    BYTE PTR fs:[rdi+0x0],bl
  428878:	test   bh,bh
  42887a:	pop    rsp
  42887b:	add    BYTE PTR [rbx],dl
  42887d:	add    ch,dl
  42887f:	add    BYTE PTR [rax+0x0],bh
  428882:	test   bh,bh
  428884:	add    QWORD PTR [r15+rdi*8-0x7bfeb7],rax
  42888c:	test   bh,bh
  42888e:	test   bh,bh
  428890:	fcos   
  428892:	test   bh,bh
  428894:	(bad)  
  428895:	add    BYTE PTR [rdx+0x0],cl
  428898:	rex.WX add BYTE PTR [rax+r8*1+0x16],al
  42889d:	add    DWORD PTR [rdx+0x0],edi
  4288a0:	pop    rsp
  4288a1:	add    BYTE PTR [rdi+rdi*8+0x5c005c],al
  4288a8:	pop    rsp
  4288a9:	add    BYTE PTR [rdi+rdi*8-0x7b007c],al
  4288b0:	test   bh,bh
  4288b2:	test   bh,bh
  4288b4:	test   bh,bh
  4288b6:	test   bh,bh
  4288b8:	jnp    0x4288ba
  4288ba:	test   bh,bh
  4288bc:	jl     0x4288be
  4288be:	test   bh,bh
  4288c0:	or     eax,0x84007d00
  4288c5:	dec    DWORD PTR [rcx+0x1]
  4288c8:	jle    0x4288ca
  4288ca:	add    QWORD PTR [rdi+r15*8-0x7b007c],rax
  4288d2:	test   bh,bh
  4288d4:	add    BYTE PTR [rax],0x84
  4288d7:	inc    DWORD PTR [rcx+0x79ff8400]
  4288dd:	add    BYTE PTR [rdi+rdi*8-0x7bffcc],al
  4288e4:	(bad)  
  4288e5:	add    BYTE PTR [rdi+rdi*8+0x5cff84],al
  4288ec:	add    al,BYTE PTR [rax]
  4288ee:	test   bh,bh
  4288f0:	sbb    DWORD PTR [rcx],eax
  4288f2:	test   DWORD PTR [rax],eax
  4288f4:	test   bh,bh
  4288f6:	test   bh,bh
  4288f8:	xchg   esi,eax
  4288f9:	add    BYTE PTR [rdi+rdi*8+0x5005c],al
  428900:	test   bh,bh
  428902:	test   bh,bh
  428904:	pop    rsp
  428905:	add    BYTE PTR [rax+rax*1-0x7c],al
  428909:	inc    DWORD PTR [rax+rax*1-0x7b0016]
  428910:	test   bh,bh
  428912:	rex.WX add BYTE PTR [rdi+r15*8-0x7bff77],al
  42891a:	test   bh,bh
  42891c:	test   bh,bh
  42891e:	sbb    eax,0x84ff8400
  428923:	inc    DWORD PTR [rdi+rdi*8-0x7bfffe]
  42892a:	(bad)  
  42892b:	add    BYTE PTR [rip+0xffffffff84ff8400],al        # 0xffffffff85420d31
  428931:	inc    DWORD PTR [rdi+rdi*8+0x6524ff84]
  428938:	outs   dx,BYTE PTR ds:[rsi]
  428939:	add    BYTE PTR fs:[rbp+0x72],ah
  42893d:	jb     0x4289ae
  42893f:	jb     0x428941
  428941:	and    al,0x75
  428943:	outs   dx,BYTE PTR ds:[rsi]
  428944:	fs imul bp,WORD PTR gs:[rsi+0x65],0x64
  42894c:	rex.WRX
  42894d:	rex.XB pop r15
  42894f:	push   rbp
  428950:	rex.WRX
  428951:	rex.WR
  428952:	rex.WB
  428953:	rex.WRB
  428954:	rex.WB push r12
  428956:	rex.RB
  428957:	rex.R pop rdi
  428959:	rex.WXB add BYTE PTR [r11+0x48],al
  42895d:	push   r10
  42895f:	pop    rdi
  428960:	rex.WXB add BYTE PTR [r10+0x59],al
  428964:	push   rsp
  428965:	rex.RB pop r15
  428967:	rex.WXB add BYTE PTR [r11+0x48],dl
  42896b:	rex.WRXB push r10
  42896d:	push   rsp
  42896e:	pop    rdi
  42896f:	rex.WXB add BYTE PTR [r9+0x4e],cl
  428973:	push   rsp
  428974:	pop    rdi
  428975:	rex.WXB add BYTE PTR [r14+0x4c],al
  428979:	rex.WRXB
  42897a:	push   r12
  42897c:	pop    rdi
  42897d:	rex.WXB add BYTE PTR [r15+r9*2+0x55],al
  428982:	rex.X
  428983:	rex.WR
  428984:	rex.RB pop r15
  428986:	rex.WXB add BYTE PTR [r13+0x42],dl
  42898a:	pop    rcx
  42898b:	push   rsp
  42898c:	rex.RB pop r15
  42898e:	rex.WXB add BYTE PTR [r13+0x53],dl
  428992:	rex.W
  428993:	rex.WRXB push r10
  428995:	push   rsp
  428996:	pop    rdi
  428997:	rex.WXB add BYTE PTR [r13+0x49],dl
  42899b:	rex.WRX push rsp
  42899d:	pop    rdi
  42899e:	rex.WXB add BYTE PTR [r9+0x4e],cl
  4289a2:	push   rsp
  4289a3:	ss xor al,0x5f
  4289a6:	rex.WXB add BYTE PTR [r13+0x49],dl
  4289aa:	rex.WRX push rsp
  4289ac:	ss xor al,0x5f
  4289af:	rex.WXB add BYTE PTR [r9+0x44],cl
  4289b3:	rex.RB
  4289b4:	rex.WRX push rsp
  4289b6:	add    BYTE PTR [rbp+rax*2+0x52],dl
  4289ba:	rex.WRB push r11
  4289bc:	push   rsp
  4289bd:	push   rdx
  4289be:	rex.WB
  4289bf:	rex.WRX
  4289c0:	rex.RXB add BYTE PTR [r11+0x48],r8b
  4289c4:	push   r10
  4289c6:	pop    rdi
  4289c7:	rex.XB
  4289c8:	rex.WRXB
  4289c9:	rex.WRX push rbx
  4289cb:	push   rsp
  4289cc:	add    BYTE PTR [rdx+0x59],al
  4289cf:	push   rsp
  4289d0:	rex.RB pop r15
  4289d2:	rex.XB
  4289d3:	rex.WRXB
  4289d4:	rex.WRX push rbx
  4289d6:	push   rsp
  4289d7:	add    BYTE PTR [rbx+0x48],dl
  4289da:	rex.WRXB push r10
  4289dc:	push   rsp
  4289dd:	pop    rdi
  4289de:	rex.XB
  4289df:	rex.WRXB
  4289e0:	rex.WRX push rbx
  4289e2:	push   rsp
  4289e3:	add    BYTE PTR [rcx+0x4e],cl
  4289e6:	push   rsp
  4289e7:	pop    rdi
  4289e8:	rex.XB
  4289e9:	rex.WRXB
  4289ea:	rex.WRX push rbx
  4289ec:	push   rsp
  4289ed:	add    BYTE PTR [rcx+0x4e],cl
  4289f0:	push   rsp
  4289f1:	ss xor al,0x5f
  4289f4:	rex.XB
  4289f5:	rex.WRXB
  4289f6:	rex.WRX push rbx
  4289f8:	push   rsp
  4289f9:	add    BYTE PTR [rbp+0x42],dl
  4289fc:	pop    rcx
  4289fd:	push   rsp
  4289fe:	rex.RB pop r15
  428a00:	rex.XB
  428a01:	rex.WRXB
  428a02:	rex.WRX push rbx
  428a04:	push   rsp
  428a05:	add    BYTE PTR [rbp+0x53],dl
  428a08:	rex.W
  428a09:	rex.WRXB push r10
  428a0b:	push   rsp
  428a0c:	pop    rdi
  428a0d:	rex.XB
  428a0e:	rex.WRXB
  428a0f:	rex.WRX push rbx
  428a11:	push   rsp
  428a12:	add    BYTE PTR [rbp+0x49],dl
  428a15:	rex.WRX push rsp
  428a17:	pop    rdi
  428a18:	rex.XB
  428a19:	rex.WRXB
  428a1a:	rex.WRX push rbx
  428a1c:	push   rsp
  428a1d:	add    BYTE PTR [rbp+0x49],dl
  428a20:	rex.WRX push rsp
  428a22:	ss xor al,0x5f
  428a25:	rex.XB
  428a26:	rex.WRXB
  428a27:	rex.WRX push rbx
  428a29:	push   rsp
  428a2a:	add    BYTE PTR [rsi+0x4c],al
  428a2d:	rex.WRXB
  428a2e:	push   r12
  428a30:	pop    rdi
  428a31:	rex.XB
  428a32:	rex.WRXB
  428a33:	rex.WRX push rbx
  428a35:	push   rsp
  428a36:	add    BYTE PTR [rdi+rcx*2+0x55],al
  428a3a:	rex.X
  428a3b:	rex.WR
  428a3c:	rex.RB pop r15
  428a3e:	rex.XB
  428a3f:	rex.WRXB
  428a40:	rex.WRX push rbx
  428a42:	push   rsp
  428a43:	add    BYTE PTR [rcx+rcx*2+0x4d],al
  428a47:	rex.RB
  428a48:	rex.WRX push rbx
  428a4a:	rex.WB
  428a4b:	rex.WRXB
  428a4c:	rex.WRX push rbx
  428a4e:	add    BYTE PTR [rsi+0x41],dl
  428a51:	push   rdx
  428a52:	rex.WB
  428a53:	rex.B
  428a54:	rex.X
  428a55:	rex.WR
  428a56:	rex.RB push r11
  428a58:	add    BYTE PTR [rsi+0x45],cl
  428a5b:	push   rsp
  428a5c:	rex.XB
  428a5d:	rex.R
  428a5e:	add    BYTE PTR [rcx+r8*2+0x54],r8b
  428a63:	add    BYTE PTR [r9+rbx*2+0x50],dl
  428a68:	rex.RB push r11
  428a6a:	add    BYTE PTR [rbx+0x4f],al
  428a6d:	rex.WRB push r8
  428a6f:	rex.WRXB push r13
  428a71:	rex.WRX
  428a72:	add    BYTE PTR [rbp+0x4e],r8b
  428a76:	push   rbp
  428a77:	rex.WRB add BYTE PTR [r15+0x50],r9b
  428a7b:	push   r9
  428a7d:	push   rbp
  428a7e:	add    BYTE PTR [r15+0x50],r9b
  428a82:	push   r9
  428a84:	push   rbp
  428a85:	rex.RB push r11
  428a87:	push   rsp
  428a88:	push   rdx
  428a89:	rex.WB
  428a8a:	rex.WRX
  428a8b:	rex.RXB add BYTE PTR [r15+0x52],r8b
  428a8f:	rex.WRXB push r13
  428a91:	push   rax
  428a92:	add    BYTE PTR [rax+0x41],dl
  428a95:	push   rsp
  428a96:	rex.W add BYTE PTR [rsi+0x49],al
  428a9a:	rex.WR
  428a9b:	rex.WR
  428a9c:	rex.WRB
  428a9d:	push   r10
  428a9f:	rex.WXB
  428aa0:	rex.RB push r10
  428aa2:	add    BYTE PTR [rsi+0x49],cl
  428aa5:	rex.WR add BYTE PTR [rdi+0x46],r11b
  428aa9:	rex.WB
  428aaa:	rex.WR
  428aab:	rex.WR push rsi
  428aad:	rex.B
  428aae:	rex.WR push rbp
  428ab0:	add    BYTE PTR [r15+0x46],r11b
  428ab4:	rex.WRXB push r10
  428ab6:	rex.WRB
  428ab7:	push   r12
  428ab9:	add    BYTE PTR [rdi+0x53],bl
  428abc:	push   rsp
  428abd:	rex.WRXB push r10
  428abf:	rex.B
  428ac0:	rex.RXB
  428ac1:	add    BYTE PTR [r15+0x43],r11b
  428ac5:	rex.W push rbp
  428ac7:	rex.WRX
  428ac8:	rex.WXB push r11
  428aca:	rex.WB pop r10
  428acc:	rex.RB push r11
  428ace:	add    BYTE PTR [rdi+0x44],bl
  428ad1:	rex.RB
  428ad2:	rex.RX
  428ad3:	rex.WR
  428ad4:	push   r12
  428ad6:	rex.RB
  428ad7:	rex.WR
  428ad8:	rex.RB push r14
  428ada:	rex.RB
  428adb:	rex.WR add BYTE PTR [rdi+0x53],r11b
  428adf:	rex.W push rbp
  428ae1:	rex.RX
  428ae2:	rex.RX
  428ae3:	rex.WR
  428ae4:	add    BYTE PTR [r15+0x45],r11b
  428ae8:	rex.WRX
  428ae9:	rex.R
  428aea:	rex.WB
  428aeb:	rex.B
  428aec:	rex.WRX
  428aed:	rex.WRX
  428aee:	rex.RB push r11
  428af0:	push   rbx
  428af1:	add    BYTE PTR [rdi+0x4e],bl
  428af4:	rex.WRXB
  428af5:	rex.RX
  428af6:	rex.WB
  428af7:	rex.WR
  428af8:	rex.WR add BYTE PTR [rdi+0x46],r11b
  428afc:	rex.WR
  428afd:	rex.RB push r12
  428aff:	rex.XB
  428b00:	rex.W
  428b01:	rex.RB push r10
  428b03:	xor    esi,DWORD PTR [rdx]
  428b05:	add    BYTE PTR [rcx+rax*2+0x54],al
  428b09:	push   r11
  428b0b:	rex.RB push r12
  428b0d:	rex.WB
  428b0e:	add    BYTE PTR [rdi],r12b
  428b11:	jnp    0x428b3a
  428b13:	add    BYTE PTR [rdi],ah
  428b15:	jge    0x428b3e
  428b17:	add    BYTE PTR [rdi],ah
  428b19:	cmp    esp,DWORD PTR [rdi]
  428b1b:	add    BYTE PTR [rdi],ah
  428b1d:	sub    al,0x27
  428b1f:	add    BYTE PTR [rdi],ah
  428b21:	cmp    eax,0x28270027
  428b26:	(bad)  
  428b27:	add    BYTE PTR [rdi],ah
  428b29:	sub    DWORD PTR [rdi],esp
  428b2b:	add    BYTE PTR [rdi],ah
  428b2d:	sub    ah,BYTE PTR [rdi]
  428b2f:	add    BYTE PTR [rdi],ah
  428b31:	cmp    ah,BYTE PTR [rdi]
  428b33:	add    BYTE PTR [rcx+riz*2],ah
  428b36:	movsxd esp,DWORD PTR [rbx+0x65]
  428b39:	jo     0x428baf
  428b3b:	add    BYTE PTR [rsi+0x63],ch
  428b3e:	fs gs jae 0x428ba5
  428b42:	add    BYTE PTR [rcx+riz*2+0x74],ah
  428b46:	(bad)  
  428b47:	jae    0x428bae
  428b49:	je     0x428bb4
  428b4b:	add    BYTE PTR fs:[rdx+0x6f],dh
  428b4f:	outs   dx,DWORD PTR ds:[rsi]
  428b50:	je     0x428bb9
  428b52:	jb     0x428bc3
  428b54:	jne    0x428bc6
  428b56:	add    BYTE PTR [rdi+0x72],ah
  428b59:	outs   dx,DWORD PTR ds:[rsi]
  428b5a:	jne    0x428bcc
  428b5c:	(bad)  
  428b5d:	outs   dx,DWORD PTR ds:[rsi]
  428b5e:	fs jns 0x428b61
  428b61:	jae    0x428bd8
  428b63:	(bad)  
  428b64:	addr32 jb 0x428bd6
  428b67:	jne    0x428bd9
  428b69:	ins    BYTE PTR es:[rdi],dx
  428b6a:	imul   esi,DWORD PTR [rbx+0x74],0x6d616e00
  428b71:	gs fs addr32 jb 0x428be5
  428b76:	jne    0x428be8
  428b78:	add    BYTE PTR [rax+rax*2],ah
  428b7b:	xor    DWORD PTR [rax],eax
  428b7d:	and    al,0x40
  428b7f:	xor    al,BYTE PTR [rax]
  428b81:	je     0x428bfc
  428b83:	jo     0x428bea
  428b85:	jae    0x428bec
  428b87:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  428b8b:	outs   dx,BYTE PTR ds:[rsi]
  428b8c:	add    BYTE PTR [rcx+rdi*2+0x70],dh
  428b90:	gs fs movsxd ebp,DWORD PTR gs:[rbx+rsi*2+0x0]
  428b97:	je     0x428c12
  428b99:	jo     0x428c00
  428b9b:	outs   dx,BYTE PTR ds:[rsi]
  428b9c:	(bad)  
  428b9d:	ins    DWORD PTR es:[rdi],dx
  428b9e:	add    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  428ba3:	gs pop rdi
  428ba5:	outs   dx,DWORD PTR ds:[rsi]
  428ba6:	jb     0x428c07
  428ba8:	(bad)  
  428ba9:	je     0x428c1f
  428bab:	jb     0x428c0c
  428bad:	fs movsxd ebp,DWORD PTR gs:[rax+rax*1+0x74]
  428bb3:	jns    0x428c25
  428bb5:	gs fs movsxd ebp,DWORD PTR gs:[rax+rax*1+0x6f]
  428bbc:	jo     0x428c32
  428bbe:	jae    0x428c25
  428bc0:	ins    DWORD PTR es:[rdi],dx
  428bc1:	imul   esp,DWORD PTR [rbx+0x6f],0x6e6f6c
  428bc8:	outs   dx,BYTE PTR gs:[rsi]
  428bca:	jne    0x428c39
  428bcc:	fs movsxd ebp,DWORD PTR gs:[rax+rax*1+0x65]
  428bd2:	outs   dx,BYTE PTR ds:[rsi]
  428bd3:	jne    0x428c42
  428bd5:	imul   esp,DWORD PTR [rsp+rbp*2+0x69],0x65007473
  428bdd:	outs   dx,BYTE PTR ds:[rsi]
  428bde:	jne    0x428c4d
  428be0:	imul   esp,DWORD PTR [rax+rax*1+0x6f],0x75716170
  428be8:	gs fs movsxd ebp,DWORD PTR gs:[rax+rax*1+0x76]
  428bef:	ins    BYTE PTR es:[rdi],dx
  428bf0:	outs   dx,BYTE PTR gs:[rsi]
  428bf2:	fs movsxd ebp,DWORD PTR gs:[rax+rax*1+0x63]
  428bf8:	outs   dx,DWORD PTR ds:[rsi]
  428bf9:	ins    DWORD PTR es:[rdi],dx
  428bfa:	jo     0x428c6b
  428bfc:	jne    0x428c6c
  428bfe:	fs fs movsxd ebp,DWORD PTR gs:[rax+rax*1+0x66]
  428c05:	imul   esp,DWORD PTR [rbp+0x6c],0x66007364
  428c0c:	imul   esp,DWORD PTR [rbp+0x6c],0x72700064
  428c13:	imul   ebp,DWORD PTR [rbp+0x74],0x657079
  428c1a:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x69746365
  428c22:	outs   dx,DWORD PTR ds:[rsi]
  428c23:	outs   dx,BYTE PTR ds:[rsi]
  428c24:	add    BYTE PTR [rcx+rbp*2+0x6d],ah
  428c28:	fs movsxd ebp,DWORD PTR gs:[rbx+rsi*2+0x0]
  428c2e:	imul   ebp,DWORD PTR fs:[rbp+0x5f],0x615f726f
  428c36:	je     0x428cac
  428c38:	jb     0x428c99
  428c3a:	fs movsxd ebp,DWORD PTR gs:[rax+rax*1+0x64]
  428c40:	imul   ebp,DWORD PTR [rbp+0x64],0x696c6365
  428c47:	jae    0x428cbd
  428c49:	add    BYTE PTR [rcx+rbp*2+0x6d],ah
  428c4d:	fs movsxd ebp,DWORD PTR gs:[rax+rax*1+0x64]
  428c53:	imul   ebp,DWORD PTR [rbp+0x64],0x73617600
  428c5a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  428c5f:	outs   dx,BYTE PTR ds:[rsi]
  428c60:	add    BYTE PTR [rsi+0x61],dh
  428c63:	fs movsxd ebp,DWORD PTR gs:[rbx+rsi*2+0x0]
  428c69:	jbe    0x428ccc
  428c6b:	fs movsxd ebp,DWORD PTR gs:[rdi+rbx*2+0x6f]
  428c71:	jb     0x428cd2
  428c73:	(bad)  
  428c74:	je     0x428cea
  428c76:	jb     0x428c78
  428c78:	jbe    0x428cdb
  428c7a:	jb     0x428ce0
  428c7c:	movsxd ebp,DWORD PTR gs:[rax+rax*1+0x76]
  428c81:	(bad)  
  428c82:	jb     0x428cf0
  428c84:	imul   esi,DWORD PTR [rbx+0x74],0x72617600
  428c8b:	jae    0x428cfd
  428c8d:	movsxd eax,DWORD PTR gs:[rax]
  428c90:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x636570
  428c98:	imul   ebp,DWORD PTR fs:[rbp+0x6c],0x747369
  428ca0:	imul   ebp,DWORD PTR fs:[rbp+0x72],0x66006665
  428ca8:	imul   esp,DWORD PTR [rbp+0x6c],0x73696c64
  428caf:	je     0x428cb1
  428cb1:	imul   sp,WORD PTR [rbp+0x6c],0x7364
  428cb7:	jo     0x428d1e
  428cb9:	movsxd eax,DWORD PTR [rax]
  428cbb:	imul   sp,WORD PTR [rbp+0x6c],0x6464
  428cc1:	imul   ebp,DWORD PTR [rbp+0x73],0x636570
  428cc8:	imul   sp,WORD PTR [rbp+0x6c],0x6464
  428cce:	imul   ebp,DWORD PTR [rbp+0x6c],0x747369
  428cd5:	imul   sp,WORD PTR [rbp+0x6c],0x6464
  428cdb:	imul   ebp,DWORD PTR [rbp+0x0],0x72726176
  428ce2:	data16 add BYTE PTR gs:[rcx+rdi*2+0x70],dh
  428ce8:	gs jb  0x428d50
  428ceb:	data16 add BYTE PTR [rcx+rdi*2+0x70],dh
  428cf0:	gs pop rdi
  428cf2:	jbe    0x428d55
  428cf4:	jb     0x428d55
  428cf6:	jb     0x428d5d
  428cf8:	data16 add BYTE PTR [rcx+0x74],ah
  428cfc:	je     0x428d70
  428cfe:	fs movsxd ebp,DWORD PTR gs:[rsp+rbp*2+0x69]
  428d04:	jae    0x428d7a
  428d06:	add    BYTE PTR [rcx+0x74],ah
  428d09:	je     0x428d7d
  428d0b:	fs movsxd ebp,DWORD PTR gs:[rax+rax*1+0x70]
  428d11:	(bad)  
  428d12:	je     0x428d7c
  428d14:	add    BYTE PTR [rcx+riz*2+0x74],ah
  428d18:	(bad)  
  428d19:	jae    0x428d80
  428d1b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  428d1f:	outs   dx,BYTE PTR ds:[rsi]
  428d20:	add    BYTE PTR [rcx+riz*2+0x74],ah
  428d24:	(bad)  
  428d25:	fs movsxd ebp,DWORD PTR gs:[rbx+rsi*2+0x0]
  428d2b:	fs (bad) 
  428d2d:	je     0x428d90
  428d2f:	fs movsxd ebp,DWORD PTR gs:[rax+rax*1+0x64]
  428d35:	(bad)  
  428d36:	je     0x428d99
  428d38:	ins    BYTE PTR es:[rdi],dx
  428d39:	imul   esi,DWORD PTR [rbx+0x74],0x74616400
  428d40:	(bad)  
  428d41:	ins    BYTE PTR es:[rdi],dx
  428d42:	imul   esi,DWORD PTR [rbx+0x74],0x61640030
  428d49:	je     0x428dac
  428d4b:	ins    BYTE PTR es:[rdi],dx
  428d4c:	imul   esi,DWORD PTR [rbx+0x74],0x61640031
  428d53:	je     0x428db6
  428d55:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x6e6f6300
  428d5d:	jae    0x428dd3
  428d5f:	fs (bad) 
  428d61:	je     0x428dc4
  428d63:	add    BYTE PTR [rbp+0x63],ah
  428d66:	outs   dx,DWORD PTR ds:[rsi]
  428d67:	outs   dx,BYTE PTR ds:[rsi]
  428d68:	jae    0x428dde
  428d6a:	jb     0x428dd1
  428d6c:	data16 add BYTE PTR [rsi+0x75],ah
  428d70:	outs   dx,BYTE PTR ds:[rsi]
  428d71:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  428d75:	outs   dx,BYTE PTR ds:[rsi]
  428d76:	add    BYTE PTR [rcx+0x72],ah
  428d79:	ins    BYTE PTR es:[edi],dx
  428d7b:	imul   esi,DWORD PTR [rbx+0x74],0x6d697300
  428d82:	jo     0x428df0
  428d84:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  428d88:	jae    0x428dfe
  428d8a:	(bad)  
  428d8b:	outs   dx,BYTE PTR ds:[rsi]
  428d8c:	je     0x428d8e
  428d8e:	imul   ebp,DWORD PTR [rsi+0x74],0x7473696c
  428d95:	add    BYTE PTR [rbx+0x6f],ah
  428d98:	outs   dx,BYTE PTR ds:[rsi]
  428d99:	jae    0x428e0f
  428d9b:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f6300
  428da2:	jae    0x428e18
  428da4:	jae    0x428e1a
  428da6:	jb     0x428e11
  428da8:	outs   dx,BYTE PTR ds:[rsi]
  428da9:	add    BYTE PTR [ebx+0x6f],ah
  428dad:	outs   dx,BYTE PTR ds:[rsi]
  428dae:	jae    0x428e24
  428db0:	(bad)  
  428db1:	outs   dx,DWORD PTR ds:[rsi]
  428db2:	outs   dx,DWORD PTR ds:[rsi]
  428db3:	ins    BYTE PTR es:[rdi],dx
  428db4:	add    BYTE PTR [rcx+0x64],ch
  428db7:	outs   dx,BYTE PTR gs:[rsi]
  428db9:	je     0x428dbb
  428dbb:	add    BYTE PTR [rax],al
  428dbd:	add    BYTE PTR [rax],al
  428dbf:	add    BYTE PTR [rsi],dh
  428dc1:	mov    DWORD PTR [rdx+0x0],eax
  428dc4:	add    BYTE PTR [rax],al
  428dc6:	add    BYTE PTR [rax],al
  428dc8:	cmp    ecx,DWORD PTR [rcx+0x42]
  428dce:	add    BYTE PTR [rax],al
  428dd0:	mov    DWORD PTR [r10+0x0],eax
  428dd4:	add    BYTE PTR [rax],al
  428dd6:	add    BYTE PTR [rax],al
  428dd8:	mov    QWORD PTR [rdx+0x0],r8
  428ddc:	add    BYTE PTR [rax],al
  428dde:	add    BYTE PTR [rax],al
  428de0:	pop    rbx
  428de1:	mov    DWORD PTR [rdx+0x0],eax
  428de4:	add    BYTE PTR [rax],al
  428de6:	add    BYTE PTR [rax],al
  428de8:	(bad)  
  428de9:	mov    DWORD PTR [rdx+0x0],eax
  428dec:	add    BYTE PTR [rax],al
  428dee:	add    BYTE PTR [rax],al
  428df0:	imul   ecx,DWORD PTR [rcx+0x42],0x89710000
  428dfa:	rex.X add BYTE PTR [rax],al
  428dfd:	add    BYTE PTR [rax],al
  428dff:	add    BYTE PTR [rdi-0x77],dh
  428e02:	rex.X add BYTE PTR [rax],al
  428e05:	add    BYTE PTR [rax],al
  428e07:	add    BYTE PTR [rdi-0x77],bh
  428e0a:	rex.X add BYTE PTR [rax],al
  428e0d:	add    BYTE PTR [rax],al
  428e0f:	add    BYTE PTR [rax+0x4289],cl
  428e15:	add    BYTE PTR [rax],al
  428e17:	add    BYTE PTR [rax+0x4289],dl
  428e1d:	add    BYTE PTR [rax],al
  428e1f:	add    BYTE PTR [rcx+0x4289],bl
  428e25:	add    BYTE PTR [rax],al
  428e27:	add    BYTE PTR [rax+0x4289],ah
  428e2d:	add    BYTE PTR [rax],al
  428e2f:	add    BYTE PTR [rax+0x4289],ch
  428e35:	add    BYTE PTR [rax],al
  428e37:	add    BYTE PTR [rcx+0x4289],dh
  428e3d:	add    BYTE PTR [rax],al
  428e3f:	add    BYTE PTR [rdi+0x4289],dh
  428e45:	add    BYTE PTR [rax],al
  428e47:	add    dl,al
  428e49:	mov    DWORD PTR [rdx+0x0],eax
  428e4c:	add    BYTE PTR [rax],al
  428e4e:	add    BYTE PTR [rax],al
  428e50:	int    0x89
  428e52:	rex.X add BYTE PTR [rax],al
  428e55:	add    BYTE PTR [rax],al
  428e57:	add    al,bl
  428e59:	mov    DWORD PTR [rdx+0x0],eax
  428e5c:	add    BYTE PTR [rax],al
  428e5e:	add    BYTE PTR [rax],al
  428e60:	in     al,0x89
  428e62:	rex.X add BYTE PTR [rax],al
  428e65:	add    BYTE PTR [rax],al
  428e67:	add    dh,ch
  428e69:	mov    DWORD PTR [rdx+0x0],eax
  428e6c:	add    BYTE PTR [rax],al
  428e6e:	add    BYTE PTR [rax],al
  428e70:	cli    
  428e71:	mov    DWORD PTR [rdx+0x0],eax
  428e74:	add    BYTE PTR [rax],al
  428e76:	add    BYTE PTR [rax],al
  428e78:	(bad)  
  428e79:	mov    al,BYTE PTR [rdx+0x0]
  428e7c:	add    BYTE PTR [rax],al
  428e7e:	add    BYTE PTR [rax],al
  428e80:	adc    ecx,DWORD PTR [rdx+0x42]
  428e86:	add    BYTE PTR [rax],al
  428e88:	(bad)  
  428e89:	mov    al,BYTE PTR [rdx+0x0]
  428e8c:	add    BYTE PTR [rax],al
  428e8e:	add    BYTE PTR [rax],al
  428e90:	sub    ecx,DWORD PTR [rdx+0x42]
  428e96:	add    BYTE PTR [rax],al
  428e98:	(bad)  
  428e99:	mov    al,BYTE PTR [rdx+0x0]
  428e9c:	add    BYTE PTR [rax],al
  428e9e:	add    BYTE PTR [rax],al
  428ea0:	mov    r8b,BYTE PTR [rdx+0x0]
  428ea4:	add    BYTE PTR [rax],al
  428ea6:	add    BYTE PTR [rax],al
  428ea8:	rex.WRXB mov r8b,BYTE PTR [r10+0x0]
  428eac:	add    BYTE PTR [rax],al
  428eae:	add    BYTE PTR [rax],al
  428eb0:	pop    rcx
  428eb1:	mov    al,BYTE PTR [rdx+0x0]
  428eb4:	add    BYTE PTR [rax],al
  428eb6:	add    BYTE PTR [rax],al
  428eb8:	(bad)  
  428eb9:	mov    al,BYTE PTR [rdx+0x0]
  428ebc:	add    BYTE PTR [rax],al
  428ebe:	add    BYTE PTR [rax],al
  428ec0:	mov    al,BYTE PTR gs:[rdx+0x0]
  428ec4:	add    BYTE PTR [rax],al
  428ec6:	add    BYTE PTR [rax],al
  428ec8:	imul   ecx,DWORD PTR [rdx+0x42],0x0
  428ecf:	add    BYTE PTR [rdx+rcx*4+0x42],dh
  428ed3:	add    BYTE PTR [rax],al
  428ed5:	add    BYTE PTR [rax],al
  428ed7:	add    BYTE PTR [rcx-0x76],bh
  428eda:	rex.X add BYTE PTR [rax],al
  428edd:	add    BYTE PTR [rax],al
  428edf:	add    BYTE PTR [rax+0x428a],al
  428ee5:	add    BYTE PTR [rax],al
  428ee7:	add    BYTE PTR [rbp+0x428a],cl
  428eed:	add    BYTE PTR [rax],al
  428eef:	add    BYTE PTR [rbx+0x428a],dl
  428ef5:	add    BYTE PTR [rax],al
  428ef7:	add    BYTE PTR [rax+0x428a],bl
  428efd:	add    BYTE PTR [rax],al
  428eff:	add    BYTE PTR [rbx+0x428a],ah
  428f05:	add    BYTE PTR [rax],al
  428f07:	add    BYTE PTR [rdi+0x428a],ah
  428f0d:	add    BYTE PTR [rax],al
  428f0f:	add    BYTE PTR [rdx+0x428a],dh
  428f15:	add    BYTE PTR [rax],al
  428f17:	add    BYTE PTR [rdx+0x428a],bh
  428f1d:	add    BYTE PTR [rax],al
  428f1f:	add    bl,al
  428f21:	mov    al,BYTE PTR [rdx+0x0]
  428f24:	add    BYTE PTR [rax],al
  428f26:	add    BYTE PTR [rax],al
  428f28:	iret   
  428f29:	mov    al,BYTE PTR [rdx+0x0]
  428f2c:	add    BYTE PTR [rax],al
  428f2e:	add    BYTE PTR [rax],al
  428f30:	fisttp QWORD PTR [rdx+0x42]
  428f36:	add    BYTE PTR [rax],al
  428f38:	out    0x8a,al
  428f3a:	rex.X add BYTE PTR [rax],al
  428f3d:	add    BYTE PTR [rax],al
  428f3f:	add    dl,dh
  428f41:	mov    al,BYTE PTR [rdx+0x0]
  428f44:	add    BYTE PTR [rax],al
  428f46:	add    BYTE PTR [rax],al
  428f48:	cli    
  428f49:	mov    al,BYTE PTR [rdx+0x0]
  428f4c:	add    BYTE PTR [rax],al
  428f4e:	add    BYTE PTR [rax],al
  428f50:	(bad)  
  428f51:	mov    eax,DWORD PTR [rdx+0x0]
  428f54:	add    BYTE PTR [rax],al
  428f56:	add    BYTE PTR [rax],al
  428f58:	adc    BYTE PTR [rbx+0x42],cl
  428f5e:	add    BYTE PTR [rax],al
  428f60:	adc    al,0x8b
  428f62:	rex.X add BYTE PTR [rax],al
  428f65:	add    BYTE PTR [rax],al
  428f67:	add    BYTE PTR [rax],bl
  428f69:	mov    eax,DWORD PTR [rdx+0x0]
  428f6c:	add    BYTE PTR [rax],al
  428f6e:	add    BYTE PTR [rax],al
  428f70:	sbb    al,0x8b
  428f72:	rex.X add BYTE PTR [rax],al
  428f75:	add    BYTE PTR [rax],al
  428f77:	add    BYTE PTR [rax],ah
  428f79:	mov    eax,DWORD PTR [rdx+0x0]
  428f7c:	add    BYTE PTR [rax],al
  428f7e:	add    BYTE PTR [rax],al
  428f80:	and    al,0x8b
  428f82:	rex.X add BYTE PTR [rax],al
  428f85:	add    BYTE PTR [rax],al
  428f87:	add    BYTE PTR [rax],ch
  428f89:	mov    eax,DWORD PTR [rdx+0x0]
  428f8c:	add    BYTE PTR [rax],al
  428f8e:	add    BYTE PTR [rax],al
  428f90:	sub    al,0x8b
  428f92:	rex.X add BYTE PTR [rax],al
  428f95:	add    BYTE PTR [rax],al
  428f97:	add    BYTE PTR [rax],dh
  428f99:	mov    eax,DWORD PTR [rdx+0x0]
  428f9c:	add    BYTE PTR [rax],al
  428f9e:	add    BYTE PTR [rax],al
  428fa0:	xor    al,0x8b
  428fa2:	rex.X add BYTE PTR [rax],al
  428fa5:	add    BYTE PTR [rax],al
  428fa7:	add    BYTE PTR [rbx+rcx*4],bh
  428faa:	rex.X add BYTE PTR [rax],al
  428fad:	add    BYTE PTR [rax],al
  428faf:	add    BYTE PTR [rbx-0x75],al
  428fb2:	rex.X add BYTE PTR [rax],al
  428fb5:	add    BYTE PTR [rax],al
  428fb7:	add    BYTE PTR [rbp-0x75],cl
  428fba:	rex.X add BYTE PTR [rax],al
  428fbd:	add    BYTE PTR [rax],al
  428fbf:	add    BYTE PTR [rdi-0x75],dl
  428fc2:	rex.X add BYTE PTR [rax],al
  428fc5:	add    BYTE PTR [rax],al
  428fc7:	add    BYTE PTR [rcx-0x75],ah
  428fca:	rex.X add BYTE PTR [rax],al
  428fcd:	add    BYTE PTR [rax],al
  428fcf:	add    BYTE PTR [rsi-0x75],ch
  428fd2:	rex.X add BYTE PTR [rax],al
  428fd5:	add    BYTE PTR [rax],al
  428fd7:	add    BYTE PTR [rcx-0x75],bh
  428fda:	rex.X add BYTE PTR [rax],al
  428fdd:	add    BYTE PTR [rax],al
  428fdf:	add    BYTE PTR [rbp-0x75],bh
  428fe2:	rex.X add BYTE PTR [rax],al
  428fe5:	add    BYTE PTR [rax],al
  428fe7:	add    BYTE PTR [rcx+0x428b],al
  428fed:	add    BYTE PTR [rax],al
  428fef:	add    BYTE PTR [rbp+0x428b],cl
  428ff5:	add    BYTE PTR [rax],al
  428ff7:	add    BYTE PTR [rdi+0x428b],dl
  428ffd:	add    BYTE PTR [rax],al
  428fff:	add    BYTE PTR [rax+0x428b],ah
  429005:	add    BYTE PTR [rax],al
  429007:	add    BYTE PTR [rdx+0x428b],dh
  42900d:	add    BYTE PTR [rax],al
  42900f:	add    BYTE PTR [rbx+0x428b],bh
  429015:	add    BYTE PTR [rax],al
  429017:	add    al,cl
  429019:	mov    eax,DWORD PTR [rdx+0x0]
  42901c:	add    BYTE PTR [rax],al
  42901e:	add    BYTE PTR [rax],al
  429020:	ror    DWORD PTR [rbx+0x42],1
  429026:	add    BYTE PTR [rax],al
  429028:	fmul   QWORD PTR [rbx+0x42]
  42902e:	add    BYTE PTR [rax],al
  429030:	jrcxz  0x428fbd
  429032:	rex.X add BYTE PTR [rax],al
  429035:	add    BYTE PTR [rax],al
  429037:	add    dh,ch
  429039:	mov    eax,DWORD PTR [rdx+0x0]
  42903c:	add    BYTE PTR [rax],al
  42903e:	add    BYTE PTR [rax],al
  429040:	test   DWORD PTR [rbx+0x42],0x8c040000
  42904a:	rex.X add BYTE PTR [rax],al
  42904d:	add    BYTE PTR [rax],al
  42904f:	add    BYTE PTR [rbx],cl
  429051:	mov    WORD PTR [rdx+0x0],es
  429054:	add    BYTE PTR [rax],al
  429056:	add    BYTE PTR [rax],al
  429058:	adc    DWORD PTR [rdx+rax*2+0x0],ecx
  42905f:	add    BYTE PTR [rdx],bl
  429061:	mov    WORD PTR [rdx+0x0],es
  429064:	add    BYTE PTR [rax],al
  429066:	add    BYTE PTR [rax],al
  429068:	and    eax,0x428c
  42906d:	add    BYTE PTR [rax],al
  42906f:	add    BYTE PTR [rsi],ch
  429071:	mov    WORD PTR [rdx+0x0],es
  429074:	add    BYTE PTR [rax],al
  429076:	add    BYTE PTR [rax],al
  429078:	(bad)  
  429079:	mov    WORD PTR [rdx+0x0],es
  42907c:	add    BYTE PTR [rax],al
  42907e:	add    BYTE PTR [rax],al
  429080:	rex.WX mov WORD PTR [rdx+0x0],es
  429084:	add    BYTE PTR [rax],al
  429086:	add    BYTE PTR [rax],al
  429088:	push   rdx
  429089:	mov    WORD PTR [rdx+0x0],es
  42908c:	add    BYTE PTR [rax],al
  42908e:	add    BYTE PTR [rax],al
  429090:	push   rdi
  429091:	mov    WORD PTR [rdx+0x0],es
  429094:	add    BYTE PTR [rax],al
  429096:	add    BYTE PTR [rax],al
  429098:	(bad)  
  429099:	mov    WORD PTR [rdx+0x0],es
  42909c:	add    BYTE PTR [rax],al
  42909e:	add    BYTE PTR [rax],al
  4290a0:	imul   ecx,DWORD PTR [rdx+rax*2+0x0],0x428c7800
  4290ab:	add    BYTE PTR [rax],al
  4290ad:	add    BYTE PTR [rax],al
  4290af:	add    BYTE PTR [rax+0x428c],al
  4290b5:	add    BYTE PTR [rax],al
  4290b7:	add    BYTE PTR [rax+0x428c],cl
  4290bd:	add    BYTE PTR [rax],al
  4290bf:	add    BYTE PTR [rax+0x428c],dl
  4290c5:	add    BYTE PTR [rax],al
  4290c7:	add    BYTE PTR [rax+0x428c],bl
  4290cd:	add    BYTE PTR [rax],al
  4290cf:	add    BYTE PTR [rax+0x428c],ah
  4290d5:	add    BYTE PTR [rax],al
  4290d7:	add    BYTE PTR [rdi+0x428c],ah
  4290dd:	add    BYTE PTR [rax],al
  4290df:	add    BYTE PTR [rcx+0x428c],dh
  4290e5:	add    BYTE PTR [rax],al
  4290e7:	add    BYTE PTR [rbx+0x428c],bh
  4290ed:	add    BYTE PTR [rax],al
  4290ef:	add    al,cl
  4290f1:	mov    WORD PTR [rdx+0x0],es
  4290f4:	add    BYTE PTR [rax],al
  4290f6:	add    BYTE PTR [rax],al
  4290f8:	(bad)  
  4290f9:	mov    WORD PTR [rdx+0x0],es
  4290fc:	add    BYTE PTR [rax],al
  4290fe:	add    BYTE PTR [rax],al
  429100:	fimul  WORD PTR [rdx+rax*2+0x0]
  429107:	add    ch,ah
  429109:	mov    WORD PTR [rdx+0x0],es
  42910c:	add    BYTE PTR [rax],al
  42910e:	add    BYTE PTR [rax],al
  429110:	in     eax,dx
  429111:	mov    WORD PTR [rdx+0x0],es
  429114:	add    BYTE PTR [rax],al
  429116:	add    BYTE PTR [rax],al
  429118:	cli    
  429119:	mov    WORD PTR [rdx+0x0],es
  42911c:	add    BYTE PTR [rax],al
  42911e:	add    BYTE PTR [rax],al
  429120:	(bad)  
  429121:	lea    eax,[rdx+0x0]
  429124:	add    BYTE PTR [rax],al
  429126:	add    BYTE PTR [rax],al
  429128:	adc    BYTE PTR [rbp+0x42],cl
  42912e:	add    BYTE PTR [rax],al
  429130:	adc    eax,0x428d
  429135:	add    BYTE PTR [rax],al
  429137:	add    BYTE PTR [rcx],ah
  429139:	lea    eax,[rdx+0x0]
  42913c:	add    BYTE PTR [rax],al
  42913e:	add    BYTE PTR [rax],al
  429140:	sub    ecx,DWORD PTR [rbp+0x42]
  429146:	add    BYTE PTR [rax],al
  429148:	xor    al,0x8d
  42914a:	rex.X add BYTE PTR [rax],al
  42914d:	add    BYTE PTR [rax],al
  42914f:	add    BYTE PTR [rip+0x428d],bh        # 0x42d3e2
  429155:	add    BYTE PTR [rax],al
  429157:	add    BYTE PTR [rdi-0x73],al
  42915a:	rex.X add BYTE PTR [rax],al
  42915d:	add    BYTE PTR [rax],al
  42915f:	add    BYTE PTR [rcx-0x73],dl
  429162:	rex.X add BYTE PTR [rax],al
  429165:	add    BYTE PTR [rax],al
  429167:	add    BYTE PTR [rdx-0x73],bl
  42916a:	rex.X add BYTE PTR [rax],al
  42916d:	add    BYTE PTR [rax],al
  42916f:	add    BYTE PTR [rbp+rcx*4+0x42],ah
  429173:	add    BYTE PTR [rax],al
  429175:	add    BYTE PTR [rax],al
  429177:	add    BYTE PTR [rsi-0x73],ch
  42917a:	rex.X add BYTE PTR [rax],al
  42917d:	add    BYTE PTR [rax],al
  42917f:	add    BYTE PTR [rdi-0x73],dh
  429182:	rex.X add BYTE PTR [rax],al
  429185:	add    BYTE PTR [rax],al
  429187:	add    BYTE PTR [rdi-0x73],bh
  42918a:	rex.X add BYTE PTR [rax],al
  42918d:	add    BYTE PTR [rax],al
  42918f:	add    BYTE PTR [rsi+0x428d],cl
  429195:	add    BYTE PTR [rax],al
  429197:	add    BYTE PTR [rsi+0x428d],dl
  42919d:	add    BYTE PTR [rax],al
  42919f:	add    BYTE PTR [rdi+0x428d],bl
  4291a5:	add    BYTE PTR [rax],al
  4291a7:	add    BYTE PTR [rbx+0x428d],ch
  4291ad:	add    BYTE PTR [rax],al
  4291af:	add    BYTE PTR [rbp+0x428d],dh
	...
  4291c1:	add    al,dl
  4291c3:	add    al,dl
  4291c5:	add    dh,dl
  4291c7:	add    al,bl
  4291c9:	add    bh,bl
  4291cb:	add    dh,ah
  4291cd:	add    dh,ah
  4291cf:	add    cl,ch
  4291d1:	add    dl,dh
  4291d3:	add    al,ch
  4291d5:	add    bh,dh
  4291d7:	add    al,bh
  4291d9:	add    cl,bh
  4291db:	add    ch,bh
  4291dd:	add    ch,bh
  4291df:	add    bh,bh
  4291e1:	add    BYTE PTR [rcx],cl
  4291e3:	add    DWORD PTR [rcx],ecx
  4291e5:	add    DWORD PTR [rcx+rax*1],ecx
  4291e8:	or     eax,0xf010e01
  4291ed:	add    DWORD PTR [rdx],edx
  4291ef:	add    DWORD PTR [rdx],edx
  4291f1:	add    DWORD PTR [rip+0x35013301],edx        # 0x3543c4f8
  4291f7:	add    DWORD PTR [rsi+0x1],eax
  4291fa:	rex.WRXB add QWORD PTR [r11+0x1],r11
  4291fe:	imul   eax,DWORD PTR [rcx],0x18b018a
  429204:	mov    es,WORD PTR [rcx]
  429206:	pushf  
  429207:	add    DWORD PTR [rbp-0x60fe61ff],ebx
  42920d:	add    DWORD PTR [rax-0x5dfe5eff],esp
  429213:	add    DWORD PTR [rbx-0x5afe5bff],esp
  429219:	add    DWORD PTR [rsi-0x55fe56ff],esp
  42921f:	add    DWORD PTR [rbx-0x50fe51ff],ebp
  429225:	add    DWORD PTR [rdx-0x4bfe4dff],esi
  42922b:	add    DWORD PTR [rbp-0x3ffe46ff],esi
  429231:	add    ebx,ecx
  429233:	add    eax,ebx
  429235:	add    edx,esp
  429237:	add    esi,ebp
  429239:	add    edi,ebp
  42923b:	add    eax,esi
  42923d:	add    ebx,esi
  42923f:	add    esp,esi
  429241:	add    edi,esi
  429243:	add    edi,esi
  429245:	add    ecx,edi
  429247:	add    DWORD PTR [rdi],ecx
  429249:	add    dl,BYTE PTR [rbx]
  42924b:	add    dl,BYTE PTR [rdi]
  42924d:	add    dh,BYTE PTR [rdx]
  42924f:	add    dh,BYTE PTR [rbx]
  429251:	add    dh,BYTE PTR [rsi]
  429253:	add    dh,BYTE PTR [rdi]
  429255:	add    bh,BYTE PTR [rbx]
  429257:	add    cl,BYTE PTR [rcx+0x2]
  42925a:	rex.WRB add r10b,BYTE PTR [r10+0x2]
  42925e:	outs   dx,DWORD PTR ds:[rsi]
  42925f:	add    dh,BYTE PTR [rax+0x2]
  429262:	je     0x429266
  429264:	jne    0x429268
  429266:	jp     0x42926a
  429268:	test   BYTE PTR [rdx],al
  42926a:	cwde   
  42926b:	add    ah,BYTE PTR [rbx-0x3efd51fe]
  429271:	add    cl,al
  429273:	add    cl,al
  429275:	add    cl,bl
  429277:	add    cl,ch
  429279:	add    dl,dh
  42927b:	add    ah,cl
  42927d:	add    ah,bl
  42927f:	add    ah,ch
  429281:	add    ah,bh
  429283:	add    ch,cl
  429285:	add    ch,bl
  429287:	add    ch,ch
  429289:	add    ch,bh
  42928b:	add    dh,cl
  42928d:	add    dh,bl
  42928f:	add    bh,al
  429291:	add    bh,bh
  429293:	add    cl,BYTE PTR [rax]
  429295:	add    ecx,DWORD PTR [rcx]
  429297:	add    ecx,DWORD PTR [rdx]
  429299:	add    ecx,DWORD PTR [rip+0x11030e03]        # 0x1145a0a2
  42929f:	add    edx,DWORD PTR [rip+0x1a031603]        # 0x1a45a8a8
  4292a5:	add    ebx,DWORD PTR [rsi]
  4292a7:	add    ebx,DWORD PTR [rdi]
  4292a9:	add    esp,DWORD PTR [rbx+rax*1]
  4292ac:	and    eax,0x2a032903
  4292b1:	add    ebp,DWORD PTR [rbx]
  4292b3:	add    ebp,DWORD PTR [rbx+rax*1]
  4292b6:	sub    eax,0x32032e03
  4292bb:	add    esi,DWORD PTR [rsi]
  4292bd:	add    edi,DWORD PTR [rdx]
  4292bf:	add    edi,DWORD PTR [rbx+rax*1]
  4292c2:	add    eax,DWORD PTR [r10+0x3]
  4292c6:	add    eax,DWORD PTR [r11+r8*1+0x45]
  4292cb:	add    eax,DWORD PTR [rsi+0x3]
  4292ce:	rex.RXB add r9d,DWORD PTR [r8+0x3]
  4292d2:	add    rcx,QWORD PTR [r10+0x3]
  4292d6:	add    rcx,QWORD PTR [r11+r8*1+0x50]
  4292db:	add    edx,DWORD PTR [rcx+0x3]
  4292de:	push   rbp
  4292df:	add    edx,DWORD PTR [rdi+0x3]
  4292e2:	pop    rcx
  4292e3:	add    ebx,DWORD PTR [rbx+0x3]
  4292e6:	(bad)  
  4292e7:	add    esp,DWORD PTR [rbx+rax*1+0x65]
  4292eb:	add    ebp,DWORD PTR [rbx+0x3]
	...
  4292fe:	add    BYTE PTR [rax],al
  429300:	add    BYTE PTR [rdx],al
  429302:	add    al,BYTE PTR [rdx]
  429304:	add    al,BYTE PTR [rdx]
  429306:	add    al,BYTE PTR [rdx]
  429308:	add    al,BYTE PTR [rdx]
  42930a:	add    al,BYTE PTR [rdx]
  42930c:	add    al,BYTE PTR [rdx]
  42930e:	add    al,BYTE PTR [rdx]
  429310:	add    al,BYTE PTR [rdx]
  429312:	add    al,BYTE PTR [rdx]
  429314:	add    al,BYTE PTR [rdx]
  429316:	add    al,BYTE PTR [rdx]
  429318:	add    al,BYTE PTR [rdx]
  42931a:	add    al,BYTE PTR [rdx]
  42931c:	add    al,BYTE PTR [rdx]
  42931e:	add    al,BYTE PTR [rdx]
  429320:	add    al,BYTE PTR [rdx]
  429322:	add    al,BYTE PTR [rdx]
  429324:	add    al,BYTE PTR [rdx]
  429326:	add    al,BYTE PTR [rdx]
  429328:	cmp    BYTE PTR [rcx],bh
  42932a:	cmp    al,BYTE PTR [rdx]
  42932c:	add    al,BYTE PTR ss:[rdx]
  42932f:	add    al,BYTE PTR [rdx]
  429331:	add    al,BYTE PTR [rdx]
  429333:	add    al,BYTE PTR [rdx]
  429335:	add    al,BYTE PTR [rdx]
  429337:	add    al,BYTE PTR [rdx]
  429339:	add    bh,BYTE PTR [rbx]
  42933b:	xor    eax,0x2023702
  429340:	add    al,BYTE PTR [rdx]
  429342:	add    al,BYTE PTR [rdx]
  429344:	add    al,BYTE PTR [rdx]
  429346:	add    al,BYTE PTR [rdx]
  429348:	add    al,BYTE PTR [rdx]
  42934a:	add    al,BYTE PTR [rdx]
  42934c:	add    al,BYTE PTR [rdx]
  42934e:	add    al,BYTE PTR [rdx]
  429350:	add    al,BYTE PTR [rdx]
  429352:	add    al,BYTE PTR [rdx]
  429354:	add    al,BYTE PTR [rdx]
  429356:	add    al,BYTE PTR [rdx]
  429358:	add    al,BYTE PTR [rdx]
  42935a:	add    al,BYTE PTR [rdx]
  42935c:	add    al,BYTE PTR [rdx]
  42935e:	add    al,BYTE PTR [rdx]
  429360:	add    al,BYTE PTR [rdx]
  429362:	add    al,BYTE PTR [rdx]
  429364:	add    al,BYTE PTR [rdx]
  429366:	add    al,BYTE PTR [rdx]
  429368:	add    al,BYTE PTR [rdx]
  42936a:	add    al,BYTE PTR [rdx]
  42936c:	add    al,BYTE PTR [rdx]
  42936e:	add    al,BYTE PTR [rdx]
  429370:	add    al,BYTE PTR [rdx]
  429372:	add    al,BYTE PTR [rdx]
  429374:	add    al,BYTE PTR [rdx]
  429376:	add    al,BYTE PTR [rdx]
  429378:	add    al,BYTE PTR [rdx]
  42937a:	add    dh,BYTE PTR [rbx]
  42937c:	add    dh,BYTE PTR [rdx+rax*1]
  42937f:	add    al,BYTE PTR [rdx]
  429381:	add    al,BYTE PTR [rdx]
  429383:	add    al,BYTE PTR [rdx]
  429385:	add    al,BYTE PTR [rdx]
  429387:	add    al,BYTE PTR [rdx]
  429389:	add    al,BYTE PTR [rdx]
  42938b:	add    al,BYTE PTR [rdx]
  42938d:	add    al,BYTE PTR [rdx]
  42938f:	add    al,BYTE PTR [rdx]
  429391:	add    al,BYTE PTR [rdx]
  429393:	add    al,BYTE PTR [rdx]
  429395:	add    al,BYTE PTR [rdx]
  429397:	add    al,BYTE PTR [rdx]
  429399:	add    al,BYTE PTR [rdx]
  42939b:	add    al,BYTE PTR [rdx]
  42939d:	add    al,BYTE PTR [rdx]
  42939f:	add    al,BYTE PTR [rdx]
  4293a1:	add    al,BYTE PTR [rdx]
  4293a3:	add    al,BYTE PTR [rdx]
  4293a5:	add    al,BYTE PTR [rdx]
  4293a7:	add    al,BYTE PTR [rdx]
  4293a9:	add    al,BYTE PTR [rdx]
  4293ab:	add    al,BYTE PTR [rdx]
  4293ad:	add    al,BYTE PTR [rdx]
  4293af:	add    al,BYTE PTR [rdx]
  4293b1:	add    al,BYTE PTR [rdx]
  4293b3:	add    al,BYTE PTR [rdx]
  4293b5:	add    al,BYTE PTR [rdx]
  4293b7:	add    al,BYTE PTR [rdx]
  4293b9:	add    al,BYTE PTR [rdx]
  4293bb:	add    al,BYTE PTR [rdx]
  4293bd:	add    al,BYTE PTR [rdx]
  4293bf:	add    al,BYTE PTR [rdx]
  4293c1:	add    al,BYTE PTR [rdx]
  4293c3:	add    al,BYTE PTR [rdx]
  4293c5:	add    al,BYTE PTR [rdx]
  4293c7:	add    al,BYTE PTR [rdx]
  4293c9:	add    al,BYTE PTR [rdx]
  4293cb:	add    al,BYTE PTR [rdx]
  4293cd:	add    al,BYTE PTR [rdx]
  4293cf:	add    al,BYTE PTR [rdx]
  4293d1:	add    al,BYTE PTR [rdx]
  4293d3:	add    al,BYTE PTR [rdx]
  4293d5:	add    al,BYTE PTR [rdx]
  4293d7:	add    al,BYTE PTR [rdx]
  4293d9:	add    al,BYTE PTR [rdx]
  4293db:	add    al,BYTE PTR [rdx]
  4293dd:	add    al,BYTE PTR [rdx]
  4293df:	add    al,BYTE PTR [rdx]
  4293e1:	add    al,BYTE PTR [rdx]
  4293e3:	add    al,BYTE PTR [rdx]
  4293e5:	add    al,BYTE PTR [rdx]
  4293e7:	add    al,BYTE PTR [rdx]
  4293e9:	add    al,BYTE PTR [rdx]
  4293eb:	add    al,BYTE PTR [rdx]
  4293ed:	add    al,BYTE PTR [rdx]
  4293ef:	add    al,BYTE PTR [rdx]
  4293f1:	add    al,BYTE PTR [rdx]
  4293f3:	add    al,BYTE PTR [rdx]
  4293f5:	add    al,BYTE PTR [rdx]
  4293f7:	add    al,BYTE PTR [rdx]
  4293f9:	add    al,BYTE PTR [rdx]
  4293fb:	add    al,BYTE PTR [rdx]
  4293fd:	add    al,BYTE PTR [rdx]
  4293ff:	add    al,BYTE PTR [rcx]
  429401:	add    al,BYTE PTR [rbx]
  429403:	add    al,0x5
  429405:	(bad)  
  429406:	(bad)  
  429407:	or     BYTE PTR [rcx],cl
  429409:	or     cl,BYTE PTR [rbx]
  42940b:	or     al,0xd
  42940d:	(bad)  
  42940e:	movups xmm2,XMMWORD PTR [rcx]
  429411:	adc    dl,BYTE PTR [rbx]
  429413:	adc    al,0x15
  429415:	(bad)  
  429416:	(bad)  
  429417:	sbb    BYTE PTR [rcx],bl
  429419:	sbb    bl,BYTE PTR [rbx]
  42941b:	sbb    al,0x1d
  42941d:	(bad)  
  42941e:	(bad)  
  42941f:	and    BYTE PTR [rcx],ah
  429421:	and    ah,BYTE PTR [rbx]
  429423:	and    al,0x25
  429425:	es (bad) 
  429427:	sub    BYTE PTR [rcx],ch
  429429:	sub    ch,BYTE PTR [rbx]
  42942b:	sub    al,0x2d
  42942d:	cs (bad) 
  42942f:	xor    BYTE PTR [rcx],dh
  429431:	xor    ch,BYTE PTR [rsi+0x61]
  429434:	je     0x429436
  429436:	(bad)  
  429437:	jns    0x4294ad
  429439:	add    BYTE PTR gs:[rbx+0x68],ah
  42943d:	(bad)  
  42943e:	jb     0x429440
  429440:	jae    0x4294aa
  429442:	outs   dx,DWORD PTR ds:[rsi]
  429443:	jb     0x4294b9
  429445:	add    BYTE PTR [rcx+0x6e],ch
  429448:	je     0x42944a
  42944a:	data16 ins BYTE PTR es:[rdi],dx
  42944c:	outs   dx,DWORD PTR ds:[rsi]
  42944d:	(bad)  
  42944e:	je     0x429450
  429450:	outs   dx,DWORD PTR fs:[rsi]
  429452:	jne    0x4294b6
  429454:	ins    BYTE PTR es:[rdi],dx
  429455:	add    BYTE PTR gs:[rbp+0x62],dh
  429459:	jns    0x4294cf
  42945b:	add    BYTE PTR gs:[rbp+0x73],dh
  42945f:	push   0x74726f
  429464:	jne    0x4294cf
  429466:	outs   dx,BYTE PTR ds:[rsi]
  429467:	je     0x429469
  429469:	imul   ebp,DWORD PTR [rsi+0x74],0x75003436
  429470:	imul   ebp,DWORD PTR [rsi+0x74],0x73003436
  429477:	je     0x4294eb
  429479:	imul   ebp,DWORD PTR [rsi+0x67],0x0
  429480:	add    BYTE PTR [rax],al
  429482:	cmp    BYTE PTR [rdi],0x0
	...
  429491:	add    BYTE PTR [rax],al
  429493:	add    BYTE PTR [rax],0x0
	...
  4294a6:	lock (bad) 
	...
  4294b0:	add    BYTE PTR [rax],al
  4294b2:	loopne 0x4294b3
  4294b4:	(bad)  
  4294b5:	(bad)  
  4294b6:	out    dx,eax
  4294b7:	add    BYTE PTR [r8],al
  4294ba:	add    BYTE PTR [rax],al
  4294bc:	add    BYTE PTR [rax],al
  4294be:	loopne 0x429503
  4294c0:	rex.WRX push rbp
  4294c2:	rex.WR
  4294c3:	rex.WR add BYTE PTR [rbx+0x0],r15b
  4294c7:	jge    0x4294c9
  4294c9:	pop    rbx
  4294ca:	add    BYTE PTR [rbp+0x0],bl
  4294cd:	jnp    0x4294f9
  4294cf:	add    BYTE PTR [rax],ah
  4294d1:	add    BYTE PTR [rax],al
  4294d3:	add    BYTE PTR [rax],al
  4294d5:	add    BYTE PTR [rax],al
  4294d7:	add    BYTE PTR [rcx+0x73],ch
  4294da:	jo     0x42954e
  4294dc:	imul   ebp,DWORD PTR [rbp+0x70],0x2873756c
  4294e3:	movsxd ebp,DWORD PTR [rcx+0x2d]
  4294e6:	outs   dx,BYTE PTR ds:[rsi]
  4294e8:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  4294ec:	sub    DWORD PTR gs:[rax],esp
  4294ef:	jl     0x42956d
  4294f1:	and    BYTE PTR [rbx+0x69],ah
  4294f4:	sub    eax,0x74636e3e
  4294f9:	jns    0x42956b
  4294fb:	and    BYTE PTR gs:[rip+0x434e203d],bh        # 0x4390b53f
  429502:	pop    rdi
  429503:	rex.RX
  429504:	rex.WB
  429505:	rex.WR
  429506:	rex.WR push rsi
  429508:	rex.B
  429509:	rex.WR push rbp
  42950b:	add    BYTE PTR [r9+0x73],r12b
  42950f:	jae    0x429576
  429511:	jb     0x429587
  429513:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  42951a:	ins    BYTE PTR es:[rdi],dx
  42951b:	jne    0x42958f
  42951d:	cmp    ah,BYTE PTR gs:[rax]
  429520:	and    eax,0x270073
  429525:	and    eax,0x646868
  42952a:	and    eax,0x25006468
  42952f:	add    BYTE PTR fs:[rip+0x6c250067],ah        # 0x6c67959d
  429536:	add    BYTE PTR [eip+0x756868],ah        # 0xb7fda5
  42953d:	and    eax,0x25007568
  429542:	jne    0x429544
  429544:	and    eax,0x646c6c
  429549:	and    eax,0x756c6c
  42954e:	and    al,BYTE PTR [rax]
  429550:	xor    BYTE PTR [rax+0x0],bh
  429553:	pop    rdi
  429554:	add    BYTE PTR [rax],al
  429556:	add    BYTE PTR [rax],al
  429558:	fs jne 0x4295c8
  42955b:	jo     0x4295c1
  42955d:	(bad)  
  42955e:	je     0x4295c1
  429560:	jo     0x4295d4
  429562:	imul   ebp,DWORD PTR [rbp+0x3a],0x64616220
  429569:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42956d:	and    BYTE PTR gs:[rbx+0x6f],ah
  429571:	fs cmp ah,BYTE PTR gs:[rip+0x75640064]        # 0x75a695dd
  429579:	ins    DWORD PTR es:[rdi],dx
  42957a:	jo     0x4295aa
  42957c:	movsxd eax,DWORD PTR [rax]
  42957e:	add    BYTE PTR [rax],al
  429580:	jo     0x4295e3
  429582:	outs   dx,BYTE PTR ds:[rsi]
  429583:	imul   esp,DWORD PTR [rbx+0x28],0x6d756422
  42958a:	jo     0x4295f0
  42958c:	(bad)  
  42958d:	je     0x4295f0
  42958f:	jo     0x429603
  429591:	imul   ebp,DWORD PTR [rbp+0x3a],0x64616220
  429598:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42959c:	and    BYTE PTR gs:[rbx+0x6f],ah
  4295a0:	fs cmp ah,BYTE PTR gs:[rip+0x632c2264]        # 0x636eb80c
  4295a8:	imul   ebp,DWORD PTR [rip+0x74636e3e],0x29657079        # 0x74a603f0
  4295b2:	add    BYTE PTR [rdi],bh
  4295b4:	and    eax,0x203f64
  4295b9:	add    BYTE PTR [rax],al
  4295bb:	add    BYTE PTR [rcx+0x62fffeb3],dh
  4295c1:	mov    bl,0xfe
  4295c3:	push   QWORD PTR [rdx-0x4d]
  4295c6:	(bad)  
  4295c7:	(bad)  
  4295c8:	std    
  4295c9:	mov    dl,0xfe
  4295cb:	dec    DWORD PTR [rip+0x1cfffeb3]        # 0x1d429484
  4295d1:	mov    bl,0xfe
  4295d3:	dec    DWORD PTR [rbx+rsi*4-0x2]
  4295d7:	dec    DWORD PTR [rip+0x48fffeb2]        # 0x4942948f
  4295dd:	mov    dl,0xfe
  4295df:	call   QWORD PTR [rbp-0x4e]
  4295e2:	(bad)  
  4295e3:	jmp    QWORD PTR [rcx-0x4e]
  4295e6:	(bad)  
  4295e7:	inc    DWORD PTR [rbx-0x7000014e]
  4295ed:	mov    dl,0xfe
  4295ef:	push   QWORD PTR [rcx-0x4100014d]
  4295f5:	mov    dl,0xfe
  4295f7:	push   QWORD PTR [rcx-0x4e00014d]
  4295fd:	mov    bl,0xfe
  4295ff:	push   QWORD PTR [rcx-0x4e00014d]
  429605:	mov    bl,0xfe
  429607:	push   QWORD PTR [rcx-0x4e00014d]
  42960d:	mov    bl,0xfe
  42960f:	push   QWORD PTR [rcx-0x4e00014d]
  429615:	mov    bl,0xfe
  429617:	push   QWORD PTR [rcx-0x4e00014d]
  42961d:	mov    bl,0xfe
  42961f:	push   QWORD PTR [rcx-0x4e00014d]
  429625:	mov    bl,0xfe
  429627:	push   QWORD PTR [rcx-0x4e00014d]
  42962d:	mov    bl,0xfe
  42962f:	push   QWORD PTR [rcx-0x4e00014d]
  429635:	mov    bl,0xfe
  429637:	push   QWORD PTR [rdx+rsi*4]
  42963a:	(bad)  
  42963b:	push   QWORD PTR [rcx-0x4e00014d]
  429641:	mov    bl,0xfe
  429643:	push   QWORD PTR [rcx-0x4e00014d]
  429649:	mov    bl,0xfe
  42964b:	push   QWORD PTR [rcx-0x4e00014d]
  429651:	mov    bl,0xfe
  429653:	push   QWORD PTR [rcx-0x4e00014d]
  429659:	mov    bl,0xfe
  42965b:	push   QWORD PTR [rcx-0x4e00014d]
  429661:	mov    bl,0xfe
  429663:	push   QWORD PTR [rcx-0x4e00014d]
  429669:	mov    bl,0xfe
  42966b:	push   QWORD PTR [rcx-0x4e00014d]
  429671:	mov    bl,0xfe
  429673:	push   QWORD PTR [rcx-0x4e00014d]
  429679:	mov    bl,0xfe
  42967b:	push   QWORD PTR [rcx-0x4e00014d]
  429681:	mov    bl,0xfe
  429683:	push   QWORD PTR [rcx-0x4e00014d]
  429689:	mov    bl,0xfe
  42968b:	push   QWORD PTR [rcx-0x4e00014d]
  429691:	mov    bl,0xfe
  429693:	push   QWORD PTR [rcx-0x4e00014d]
  429699:	mov    bl,0xfe
  42969b:	push   QWORD PTR [rcx-0x4e00014d]
  4296a1:	mov    bl,0xfe
  4296a3:	push   QWORD PTR [rcx-0x4e00014d]
  4296a9:	mov    bl,0xfe
  4296ab:	push   QWORD PTR [rcx-0x4e00014d]
  4296b1:	mov    bl,0xfe
  4296b3:	push   QWORD PTR [rcx-0x4e00014d]
  4296b9:	mov    bl,0xfe
  4296bb:	push   QWORD PTR [rcx-0x4e00014d]
  4296c1:	mov    bl,0xfe
  4296c3:	push   QWORD PTR [rcx-0x4e00014d]
  4296c9:	mov    bl,0xfe
  4296cb:	push   QWORD PTR [rcx-0x4e00014d]
  4296d1:	mov    bl,0xfe
  4296d3:	push   QWORD PTR [rcx-0x4e00014d]
  4296d9:	mov    bl,0xfe
  4296db:	push   QWORD PTR [rcx-0x4e00014d]
  4296e1:	mov    bl,0xfe
  4296e3:	push   QWORD PTR [rcx-0x4e00014d]
  4296e9:	mov    bl,0xfe
  4296eb:	push   QWORD PTR [rcx-0x4e00014d]
  4296f1:	mov    bl,0xfe
  4296f3:	push   QWORD PTR [rcx-0x4e00014d]
  4296f9:	mov    bl,0xfe
  4296fb:	push   QWORD PTR [rcx-0x4e00014d]
  429701:	mov    bl,0xfe
  429703:	push   QWORD PTR [rcx-0x4e00014d]
  429709:	mov    bl,0xfe
  42970b:	push   QWORD PTR [rcx-0x4e00014d]
  429711:	mov    bl,0xfe
  429713:	push   QWORD PTR [rcx-0x4e00014d]
  429719:	mov    bl,0xfe
  42971b:	push   QWORD PTR [rcx-0x4e00014d]
  429721:	mov    bl,0xfe
  429723:	push   QWORD PTR [rcx-0x4e00014d]
  429729:	mov    bl,0xfe
  42972b:	push   QWORD PTR [rcx-0x4e00014d]
  429731:	mov    bl,0xfe
  429733:	push   QWORD PTR [rcx-0x4e00014d]
  429739:	mov    bl,0xfe
  42973b:	push   QWORD PTR [rcx-0x4e00014d]
  429741:	mov    bl,0xfe
  429743:	push   QWORD PTR [rcx-0x4e00014d]
  429749:	mov    bl,0xfe
  42974b:	push   QWORD PTR [rcx-0x4e00014d]
  429751:	mov    bl,0xfe
  429753:	push   QWORD PTR [rcx-0x4e00014d]
  429759:	mov    bl,0xfe
  42975b:	push   QWORD PTR [rcx-0x2100014d]
  429761:	mov    dl,0xfe
  429763:	inc    DWORD PTR [rax]
  429765:	and    eax,0x25203a73
  42976a:	jae    0x429776
  42976c:	add    BYTE PTR [rdx+0x65],dh
  42976f:	data16 add BYTE PTR [rdi+0x72],ah
  429773:	outs   dx,DWORD PTR ds:[rsi]
  429774:	jne    0x4297e6
  429776:	and    BYTE PTR [rip+0xa7b2073],ah        # 0xabdb7ef
  42977c:	add    BYTE PTR [rax],ah
  42977e:	and    BYTE PTR [rax],ah
  429780:	and    BYTE PTR [rip+0x203a6433],ah        # 0x207cfbb9
  429786:	and    BYTE PTR [rip+0x73250973],ah        # 0x7367a0ff
  42978c:	or     DWORD PTR [rip+0x7d000a73],esp        # 0x7d42a205
  429792:	or     al,BYTE PTR [rax]
  429794:	outs   dx,BYTE PTR ds:[rsi]
  429795:	jne    0x429803
  429797:	ins    BYTE PTR es:[rdi],dx
  429798:	add    BYTE PTR [rdi],bh
  42979a:	add    BYTE PTR [rbx+0x25],bh
  42979d:	jae    0x42981c
  42979f:	add    BYTE PTR [rdx],ah
  4297a1:	and    eax,0x22002273
  4297a6:	and    al,BYTE PTR [rax]
  4297a8:	xor    BYTE PTR [rax+0x25],bh
  4297ab:	jae    0x4297ad
  4297ad:	xor    BYTE PTR [rax+0x2d],bh
  4297b0:	sub    eax,0x63252700
  4297b5:	(bad)  
  4297b6:	add    BYTE PTR [rsi*2+0x6f6e6b6e],bh
  4297bd:	ja     0x42982d
  4297bf:	add    BYTE PTR ds:[rax],al
  4297c2:	add    BYTE PTR [rax],al
  4297c4:	sbb    al,0xb7
  4297c6:	(bad)  
  4297c7:	call   FWORD PTR [rsp+rsi*4-0x4b410002]
  4297ce:	(bad)  
  4297cf:	jmp    rax
  4297d1:	mov    ah,0xfe
  4297d3:	dec    DWORD PTR [rsi*4-0x4acf0002]
  4297da:	(bad)  
  4297db:	jmp    QWORD PTR [rax-0x4b]
  4297de:	(bad)  
  4297df:	jmp    FWORD PTR [rbp+rsi*4-0x2]
  4297e3:	call   QWORD PTR [rcx-0x4300014b]
  4297e9:	mov    ch,0xfe
  4297eb:	jmp    rax
  4297ed:	mov    ch,0xfe
  4297ef:	dec    DWORD PTR [rsi+rsi*4]
  4297f2:	(bad)  
  4297f3:	push   QWORD PTR [rcx]
  4297f5:	mov    dh,0xfe
  4297f7:	call   FWORD PTR [rdi+rsi*4]
  4297fa:	(bad)  
  4297fb:	jmp    FWORD PTR [rsi+rsi*4-0x2]
  4297ff:	call   FWORD PTR [rdi+rsi*4]
  429802:	(bad)  
  429803:	jmp    FWORD PTR [rsi+rsi*4-0x48e30002]
  42980a:	(bad)  
  42980b:	call   FWORD PTR [rdi+rsi*4]
  42980e:	(bad)  
  42980f:	call   FWORD PTR [rdi+rsi*4]
  429812:	(bad)  
  429813:	call   FWORD PTR [rdi+rsi*4]
  429816:	(bad)  
  429817:	call   FWORD PTR [rdi+rsi*4]
  42981a:	(bad)  
  42981b:	call   FWORD PTR [rdi+rsi*4]
  42981e:	(bad)  
  42981f:	call   FWORD PTR [rdi+rsi*4]
  429822:	(bad)  
  429823:	call   FWORD PTR [rdi+rsi*4]
  429826:	(bad)  
  429827:	call   FWORD PTR [rdi+rsi*4]
  42982a:	(bad)  
  42982b:	call   FWORD PTR [rdi+rsi*4]
  42982e:	(bad)  
  42982f:	call   FWORD PTR [rdi+rsi*4]
  429832:	(bad)  
  429833:	call   FWORD PTR [rdi+rsi*4]
  429836:	(bad)  
  429837:	call   FWORD PTR [rdi+rsi*4]
  42983a:	(bad)  
  42983b:	call   FWORD PTR [rdi+rsi*4]
  42983e:	(bad)  
  42983f:	(bad)  
  429840:	cld    
  429841:	mov    dh,0xfe
  429843:	call   FWORD PTR [rdi+rsi*4]
  429846:	(bad)  
  429847:	call   FWORD PTR [rdi+rsi*4]
  42984a:	(bad)  
  42984b:	call   FWORD PTR [rdi+rsi*4]
  42984e:	(bad)  
  42984f:	call   FWORD PTR [rdi+rsi*4]
  429852:	(bad)  
  429853:	call   FWORD PTR [rdi+rsi*4]
  429856:	(bad)  
  429857:	call   FWORD PTR [rdi+rsi*4]
  42985a:	(bad)  
  42985b:	call   FWORD PTR [rdi+rsi*4]
  42985e:	(bad)  
  42985f:	call   FWORD PTR [rdi+rsi*4]
  429862:	(bad)  
  429863:	call   FWORD PTR [rdi+rsi*4]
  429866:	(bad)  
  429867:	call   FWORD PTR [rdi+rsi*4]
  42986a:	(bad)  
  42986b:	call   FWORD PTR [rdi+rsi*4]
  42986e:	(bad)  
  42986f:	call   FWORD PTR [rdi+rsi*4]
  429872:	(bad)  
  429873:	call   FWORD PTR [rdi+rsi*4]
  429876:	(bad)  
  429877:	call   FWORD PTR [rdi+rsi*4]
  42987a:	(bad)  
  42987b:	call   FWORD PTR [rdi+rsi*4]
  42987e:	(bad)  
  42987f:	call   FWORD PTR [rdi+rsi*4]
  429882:	(bad)  
  429883:	call   FWORD PTR [rdi+rsi*4]
  429886:	(bad)  
  429887:	call   FWORD PTR [rdi+rsi*4]
  42988a:	(bad)  
  42988b:	call   FWORD PTR [rdi+rsi*4]
  42988e:	(bad)  
  42988f:	call   FWORD PTR [rdi+rsi*4]
  429892:	(bad)  
  429893:	call   FWORD PTR [rdi+rsi*4]
  429896:	(bad)  
  429897:	call   FWORD PTR [rdi+rsi*4]
  42989a:	(bad)  
  42989b:	call   FWORD PTR [rdi+rsi*4]
  42989e:	(bad)  
  42989f:	call   FWORD PTR [rdi+rsi*4]
  4298a2:	(bad)  
  4298a3:	call   FWORD PTR [rdi+rsi*4]
  4298a6:	(bad)  
  4298a7:	call   FWORD PTR [rdi+rsi*4]
  4298aa:	(bad)  
  4298ab:	call   FWORD PTR [rdi+rsi*4]
  4298ae:	(bad)  
  4298af:	call   FWORD PTR [rdi+rsi*4]
  4298b2:	(bad)  
  4298b3:	call   FWORD PTR [rdi+rsi*4]
  4298b6:	(bad)  
  4298b7:	call   FWORD PTR [rdi+rsi*4]
  4298ba:	(bad)  
  4298bb:	call   FWORD PTR [rdi+rsi*4]
  4298be:	(bad)  
  4298bf:	call   FWORD PTR [rdi+rsi*4]
  4298c2:	(bad)  
  4298c3:	call   FWORD PTR [rdi+rsi*4]
  4298c6:	(bad)  
  4298c7:	call   FWORD PTR [rdi+rsi*4]
  4298ca:	(bad)  
  4298cb:	call   FWORD PTR [rdi+rsi*4]
  4298ce:	(bad)  
  4298cf:	call   FWORD PTR [rdi+rsi*4]
  4298d2:	(bad)  
  4298d3:	call   FWORD PTR [rdi+rsi*4]
  4298d6:	(bad)  
  4298d7:	call   FWORD PTR [rdi+rsi*4]
  4298da:	(bad)  
  4298db:	call   FWORD PTR [rdi+rsi*4]
  4298de:	(bad)  
  4298df:	call   FWORD PTR [rdi+rsi*4]
  4298e2:	(bad)  
  4298e3:	call   FWORD PTR [rdi+rsi*4]
  4298e6:	(bad)  
  4298e7:	call   FWORD PTR [rdi+rsi*4]
  4298ea:	(bad)  
  4298eb:	call   FWORD PTR [rdi+rsi*4]
  4298ee:	(bad)  
  4298ef:	call   FWORD PTR [rdi+rsi*4]
  4298f2:	(bad)  
  4298f3:	call   FWORD PTR [rdi+rsi*4]
  4298f6:	(bad)  
  4298f7:	call   FWORD PTR [rdi+rsi*4]
  4298fa:	(bad)  
  4298fb:	call   FWORD PTR [rdi+rsi*4]
  4298fe:	(bad)  
  4298ff:	call   FWORD PTR [rdi+rsi*4]
  429902:	(bad)  
  429903:	call   FWORD PTR [rdi+rsi*4]
  429906:	(bad)  
  429907:	call   FWORD PTR [rdi+rsi*4]
  42990a:	(bad)  
  42990b:	call   FWORD PTR [rdi+rsi*4]
  42990e:	(bad)  
  42990f:	call   FWORD PTR [rdi+rsi*4]
  429912:	(bad)  
  429913:	call   FWORD PTR [rdi+rsi*4]
  429916:	(bad)  
  429917:	call   FWORD PTR [rdi+rsi*4]
  42991a:	(bad)  
  42991b:	call   FWORD PTR [rdi+rsi*4]
  42991e:	(bad)  
  42991f:	call   FWORD PTR [rdi+rsi*4]
  429922:	(bad)  
  429923:	call   FWORD PTR [rdi+rsi*4]
  429926:	(bad)  
  429927:	call   FWORD PTR [rdi+rsi*4]
  42992a:	(bad)  
  42992b:	call   FWORD PTR [rdi+rsi*4]
  42992e:	(bad)  
  42992f:	call   FWORD PTR [rdi+rsi*4]
  429932:	(bad)  
  429933:	call   FWORD PTR [rdi+rsi*4]
  429936:	(bad)  
  429937:	call   FWORD PTR [rdi+rsi*4]
  42993a:	(bad)  
  42993b:	call   FWORD PTR [rdi+rsi*4]
  42993e:	(bad)  
  42993f:	call   FWORD PTR [rdi+rsi*4]
  429942:	(bad)  
  429943:	call   FWORD PTR [rdi+rsi*4]
  429946:	(bad)  
  429947:	call   FWORD PTR [rdi+rsi*4]
  42994a:	(bad)  
  42994b:	call   FWORD PTR [rdi+rsi*4]
  42994e:	(bad)  
  42994f:	call   FWORD PTR [rdi+rsi*4]
  429952:	(bad)  
  429953:	call   FWORD PTR [rdi+rsi*4]
  429956:	(bad)  
  429957:	call   FWORD PTR [rdi+rsi*4]
  42995a:	(bad)  
  42995b:	call   FWORD PTR [rdi+rsi*4]
  42995e:	(bad)  
  42995f:	call   FWORD PTR [rdi+rsi*4]
  429962:	(bad)  
  429963:	call   FWORD PTR [rdi+rsi*4]
  429966:	(bad)  
  429967:	dec    DWORD PTR [rsp+rsi*4-0x2]
  42996b:	jmp    QWORD PTR [rip+0x203a3a73]        # 0x207cd3e4
  429971:	add    BYTE PTR [rbx+0x25],bl
  429974:	fs (bad) 
  429976:	and    eax,0x2e005d64
  42997b:	cs add BYTE PTR cs:[rax],ah
  42997f:	jl     0x4299a1
	...
  42998d:	add    BYTE PTR [rax],al
  42998f:	add    BYTE PTR [rsi+0x43],cl
  429992:	pop    rdi
  429993:	rex.RX
  429994:	rex.WB
  429995:	rex.WR
  429996:	rex.WR add BYTE PTR [rsi+0x43],r9b
  42999a:	pop    rdi
  42999b:	rex.WRX
  42999c:	rex.WB
  42999d:	rex.WR add BYTE PTR [rsi+0x43],r9b
  4299a1:	pop    rdi
  4299a2:	cmp    al,0x25
  4299a4:	fs add BYTE PTR ds:[rax],al
  4299a8:	(bad)  
  4299a9:	add    BYTE PTR [rax],ch
  4299ab:	jae    0x429a19
  4299ad:	outs   dx,BYTE PTR gs:[rsi]
  4299af:	and    eax,0x3d202932
  4299b4:	cmp    eax,0x61003020
  4299b9:	jae    0x429a2e
  4299bb:	gs jb  0x429a32
  4299be:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  4299c5:	ins    BYTE PTR es:[rdi],dx
  4299c6:	jne    0x429a3a
  4299c8:	cmp    ah,BYTE PTR gs:[rax]
  4299cb:	and    eax,0x6c620073
  4299d0:	outs   dx,BYTE PTR gs:[rsi]
  4299d2:	and    BYTE PTR [rsi],bh
  4299d4:	and    BYTE PTR [rax],dh
  4299d6:	add    BYTE PTR [rsi+0x63],ch
  4299d9:	outs   dx,BYTE PTR gs:[esi]
  4299dc:	cmp    ah,BYTE PTR [rax]
  4299de:	and    eax,0x9000a73
  4299e3:	sub    BYTE PTR [rip+0x64253a73],ah        # 0x6467d45c
  4299e9:	sub    DWORD PTR [rdx],ecx
  4299eb:	add    BYTE PTR [rbx+0x6c],ah
  4299ee:	(bad)  
  4299ef:	jae    0x429a64
  4299f1:	imul   esp,DWORD PTR [rbx+0x0],0x622d3436
  4299f8:	imul   esi,DWORD PTR [rax+riz*1+0x6f],0x65736666
  429a00:	je     0x429a02
  429a02:	outs   dx,BYTE PTR ds:[rsi]
  429a03:	gs je  0x429a49
  429a06:	rex.R
  429a07:	rex.RX sub eax,0x656e0034
  429a0d:	je     0x429a52
  429a0f:	rex.R
  429a10:	rex.RX sub eax,0x6c632034
  429a16:	(bad)  
  429a17:	jae    0x429a8c
  429a19:	imul   esp,DWORD PTR [rbx+0x20],0x65646f6d
  429a20:	ins    BYTE PTR es:[rdi],dx
  429a21:	add    BYTE PTR [rbp+0x6e],dl
  429a24:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  429a28:	outs   dx,BYTE PTR ds:[rsi]
  429a29:	and    BYTE PTR [rsi+0x6f],ah
  429a2c:	jb     0x429a9b
  429a2e:	(bad)  
  429a2f:	je     0x429a51
  429a31:	imul   ebp,DWORD PTR [rsi+0x64],0x203a7865
  429a38:	and    eax,0x4e000a64
  429a3d:	rex.XB pop r15
  429a3f:	rex.RXB push r10
  429a41:	push   rax
  429a42:	add    BYTE PTR [rsi+0x43],cl
  429a45:	pop    rdi
  429a46:	rex.R
  429a47:	rex.WB
  429a48:	rex.WRB add BYTE PTR [r14+0x43],r9b
  429a4c:	pop    rdi
  429a4d:	push   rsi
  429a4e:	push   r10
  429a50:	add    BYTE PTR [rsi+0x43],cl
  429a53:	pop    rdi
  429a54:	push   r12
  429a56:	push   rsp
  429a57:	add    BYTE PTR [rsi+0x43],cl
  429a5a:	pop    rdi
  429a5b:	push   rsp
  429a5c:	pop    rcx
  429a5d:	push   rax
  429a5e:	add    BYTE PTR [rsi+0x43],cl
  429a61:	pop    rdi
  429a62:	rex.RB
  429a63:	rex.XB
  429a64:	rex.WRXB
  429a65:	rex.WRX push rbx
  429a67:	push   rsp
  429a68:	add    BYTE PTR [rsi+0x43],cl
  429a6b:	pop    rdi
  429a6c:	rex.RX
  429a6d:	rex.WB
  429a6e:	rex.RB
  429a6f:	rex.WR
  429a70:	add    BYTE PTR [rsi+0x43],r9b
  429a74:	pop    rdi
  429a75:	push   r10
  429a77:	push   rdx
  429a78:	pop    r9
  429a7a:	add    BYTE PTR [rsi+0x43],cl
  429a7d:	pop    rdi
  429a7e:	push   rax
  429a7f:	push   rdx
  429a80:	rex.WB
  429a81:	rex.WRB add BYTE PTR [r14+0x43],r9b
  429a85:	pop    rdi
  429a86:	push   rsp
  429a87:	pop    rcx
  429a88:	push   rax
  429a89:	add    BYTE PTR [r14+0x43],r9b
  429a8d:	pop    rdi
  429a8e:	rex.WRX
  429a8f:	push   r12
  429a91:	add    BYTE PTR [rsi+0x43],cl
  429a94:	pop    rdi
  429a95:	rex.X pop rcx
  429a97:	push   rsp
  429a98:	add    BYTE PTR [r14+0x43],r9b
  429a9c:	pop    rdi
  429a9d:	rex.XB
  429a9e:	rex.W
  429a9f:	push   r10
  429aa1:	add    BYTE PTR [rsi+0x43],cl
  429aa4:	pop    rdi
  429aa5:	push   rbx
  429aa6:	rex.W
  429aa7:	rex.WRXB push r10
  429aa9:	push   rsp
  429aaa:	add    BYTE PTR [rsi+0x43],cl
  429aad:	pop    rdi
  429aae:	rex.WB
  429aaf:	rex.WRX push rsp
  429ab1:	add    BYTE PTR [rsi+0x43],cl
  429ab4:	pop    rdi
  429ab5:	rex.RX
  429ab6:	rex.WR
  429ab7:	rex.WRXB
  429ab8:	push   r12
  429aba:	add    BYTE PTR [rsi+0x43],cl
  429abd:	pop    rdi
  429abe:	rex.R
  429abf:	rex.WRXB push r13
  429ac1:	rex.X
  429ac2:	rex.WR
  429ac3:	add    BYTE PTR [r14+0x43],r9b
  429ac7:	pop    rdi
  429ac8:	push   rbp
  429ac9:	rex.X pop rcx
  429acb:	push   rsp
  429acc:	add    BYTE PTR [r14+0x43],r9b
  429ad0:	pop    rdi
  429ad1:	push   rbp
  429ad2:	push   rbx
  429ad3:	rex.W
  429ad4:	rex.WRXB push r10
  429ad6:	push   rsp
  429ad7:	add    BYTE PTR [rsi+0x43],cl
  429ada:	pop    rdi
  429adb:	push   rbp
  429adc:	rex.WB
  429add:	rex.WRX push rsp
  429adf:	add    BYTE PTR [rsi+0x43],cl
  429ae2:	pop    rdi
  429ae3:	rex.WB
  429ae4:	rex.WRX push rsp
  429ae6:	ss xor al,0x0
  429ae9:	rex.WRX
  429aea:	rex.XB pop r15
  429aec:	push   rbp
  429aed:	rex.WB
  429aee:	rex.WRX push rsp
  429af0:	ss xor al,0x0
  429af3:	rex.WRX
  429af4:	rex.XB pop r15
  429af6:	push   rbx
  429af7:	push   rsp
  429af8:	push   rdx
  429af9:	rex.WB
  429afa:	rex.WRX
  429afb:	rex.RXB add BYTE PTR [r14+0x43],r9b
  429aff:	pop    rdi
  429b00:	push   rsi
  429b01:	rex.WR
  429b02:	rex.RB
  429b03:	rex.WRX add BYTE PTR [rsi+0x43],r9b
  429b07:	pop    rdi
  429b08:	rex.WRXB push r8
  429b0a:	push   r9
  429b0c:	push   rbp
  429b0d:	add    BYTE PTR [r14+0x43],r9b
  429b11:	pop    rdi
  429b12:	rex.RB
  429b13:	rex.WRX push rbp
  429b15:	rex.WRB add BYTE PTR [r14+0x43],r9b
  429b19:	pop    rdi
  429b1a:	rex.XB
  429b1b:	rex.WRXB
  429b1c:	rex.WRB push r8
  429b1e:	rex.WRXB push r13
  429b20:	rex.WRX
  429b21:	add    BYTE PTR [rax],r8b
	...
  429b30:	(bad)  
  429b31:	jns    0x429ba7
  429b33:	gs (bad) 
  429b35:	jne    0x429b9d
  429b37:	data16 gs jb 0x429b5b
  429b3b:	data16 (bad) 
  429b3d:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa65
	...
  429b4d:	add    BYTE PTR [rax],al
  429b4f:	add    BYTE PTR [rbp+riz*2+0x78],dh
  429b53:	je     0x429b55
  429b55:	imul   ebp,DWORD PTR [rsi+0x74],0x756f6400
  429b5c:	(bad)  
  429b5d:	ins    BYTE PTR es:[rdi],dx
  429b5e:	add    BYTE PTR gs:[rdx+0x65],dh
  429b62:	(bad)  
  429b63:	ins    BYTE PTR es:[rdi],dx
  429b64:	add    BYTE PTR [rsi+0x63],ch
  429b67:	jae    0x429bdd
  429b69:	jns    0x429bdb
  429b6b:	cmp    ah,BYTE PTR gs:[rax]
  429b6e:	(bad)
  429b73:	jns    0x429be5
  429b75:	and    BYTE PTR gs:[rbx+0x6f],ah
  429b79:	fs cmp ah,BYTE PTR gs:[rax]
  429b7d:	and    eax,0xcf200064
  429b82:	(bad)  
  429b83:	jmp    rax
  429b85:	(bad)  
  429b86:	(bad)  
  429b87:	push   rax
  429b89:	(bad)  
  429b8a:	(bad)  
  429b8b:	jmp    rax
  429b8d:	(bad)  
  429b8e:	(bad)  
  429b8f:	jmp    rax
  429b91:	(bad)  
  429b92:	(bad)  
  429b93:	inc    DWORD PTR [rax]
  429b95:	iret   
  429b96:	(bad)  
  429b97:	call   QWORD PTR [rax]
  429b99:	iret   
  429b9a:	(bad)  
  429b9b:	jmp    QWORD PTR [rax]
  429b9d:	and    BYTE PTR [rax],ah
  429b9f:	and    BYTE PTR [rax],ah
  429ba1:	and    BYTE PTR [rax],al
  429ba3:	or     ah,BYTE PTR [rax]
  429ba5:	and    BYTE PTR [rax],ah
  429ba7:	and    BYTE PTR [rax],ah
  429ba9:	xor    DWORD PTR [rax],eax
  429bab:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  429bb2:	add    BYTE PTR [rdi+rbp*2+0x75],ah
  429bb6:	(bad)  
  429bb7:	ins    BYTE PTR es:[rdi],dx
  429bb8:	and    BYTE PTR gs:[rax+0x72],dh
  429bbc:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  429bc0:	imul   ebp,DWORD PTR [rdi+0x6e],0x61657200
  429bc7:	ins    BYTE PTR es:[rdi],dx
  429bc8:	and    BYTE PTR [rax],al
  429bca:	outs   dx,BYTE PTR ds:[rsi]
  429bcb:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  429bcf:	cmp    ah,BYTE PTR gs:[rax]
  429bd2:	(bad)
  429bd7:	jns    0x429c49
  429bd9:	and    BYTE PTR gs:[rbx+0x6f],ah
  429bdd:	fs add BYTE PTR gs:[rdi+0x65],ah
  429be2:	outs   dx,BYTE PTR ds:[rsi]
  429be3:	data16 (bad) 
  429be5:	(bad)  
  429be6:	movsxd eax,DWORD PTR cs:[rax]
  429be9:	add    BYTE PTR [rax],al
  429beb:	add    BYTE PTR [rax],al
  429bed:	add    BYTE PTR [rax],al
  429bef:	add    BYTE PTR [rax+0x61],dh
  429bf2:	outs   dx,BYTE PTR ds:[rsi]
  429bf3:	imul   esp,DWORD PTR [rbx+0x28],0x74636e22
  429bfa:	jns    0x429c6c
  429bfc:	cmp    ah,BYTE PTR gs:[rax]
  429bff:	(bad)
  429c04:	jns    0x429c76
  429c06:	and    BYTE PTR gs:[rbx+0x6f],ah
  429c0a:	fs and ch,BYTE PTR gs:[rcx]
  429c0e:	add    BYTE PTR [rcx+0x6e],ch
  429c11:	je     0x429c44
  429c13:	add    BYTE PTR [rcx+0x6e],ch
  429c16:	je     0x429c4a
  429c18:	add    BYTE PTR [rsi+0x63],ch
  429c1b:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  429c1f:	cmp    ah,BYTE PTR gs:[rax]
  429c22:	(bad)
  429c27:	jns    0x429c99
  429c29:	and    BYTE PTR gs:[rbx+0x6f],ah
  429c2d:	fs cmp ah,BYTE PTR gs:[rip+0x64]        # 0x429c99
  429c35:	add    BYTE PTR [rax],al
  429c37:	add    BYTE PTR [rax+0x61],dh
  429c3a:	outs   dx,BYTE PTR ds:[rsi]
  429c3b:	imul   esp,DWORD PTR [rbx+0x28],0x63636e22
  429c42:	je     0x429cbd
  429c44:	jo     0x429cab
  429c46:	cmp    ah,BYTE PTR [rax]
  429c48:	(bad)
  429c4d:	jns    0x429cbf
  429c4f:	and    BYTE PTR gs:[rbx+0x6f],ah
  429c53:	fs cmp ah,BYTE PTR gs:[rip+0x742c2264]        # 0x746ebebf
  429c5b:	jns    0x429ccd
  429c5d:	sub    DWORD PTR gs:[rax],eax
  429c60:	nop
  429c61:	sar    esi,1
  429c63:	inc    DWORD PTR [rax+0x30fffed1]
  429c69:	sar    esi,1
  429c6b:	inc    DWORD PTR [rax-0x2f]
  429c6e:	(bad)  
  429c6f:	call   QWORD PTR [rax-0x2f]
  429c72:	(bad)  
  429c73:	jmp    QWORD PTR [rax-0x2f]
  429c76:	(bad)  
  429c77:	push   QWORD PTR [rax-0x2f]
  429c7a:	(bad)  
  429c7b:	jmp    FWORD PTR [rsi+0x66]
  429c7e:	pop    rdi
  429c7f:	movsxd ebp,DWORD PTR [rax+0x61]
  429c82:	jb     0x429c84
  429c84:	outs   dx,BYTE PTR ds:[rsi]
  429c85:	pop    di
  429c87:	(bad)  
  429c88:	jns    0x429cfe
  429c8a:	add    BYTE PTR gs:[rsi+0x66],ch
  429c8e:	pop    rdi
  429c8f:	jae    0x429cf9
  429c91:	outs   dx,DWORD PTR ds:[rsi]
  429c92:	jb     0x429d08
  429c94:	add    BYTE PTR [rsi+0x66],ch
  429c97:	pop    rdi
  429c98:	imul   ebp,DWORD PTR [rsi+0x74],0x5f666e00
  429c9f:	data16 ins BYTE PTR es:[rdi],dx
  429ca1:	outs   dx,DWORD PTR ds:[rsi]
  429ca2:	(bad)  
  429ca3:	je     0x429ca5
  429ca5:	outs   dx,BYTE PTR ds:[rsi]
  429ca6:	pop    di
  429ca8:	outs   dx,DWORD PTR fs:[rsi]
  429caa:	jne    0x429d0e
  429cac:	ins    BYTE PTR es:[rdi],dx
  429cad:	add    BYTE PTR gs:[rax],al
  429cb0:	add    dl,dl
  429cb2:	(bad)  
  429cb3:	push   rax
  429cb5:	sar    esi,1
  429cb7:	jmp    QWORD PTR [rax-0x4f00012f]
  429cbd:	sar    esi,1
  429cbf:	inc    eax
  429cc1:	sar    esi,1
  429cc3:	call   rax
  429cc5:	sar    esi,1
  429cc7:	jmp    rax
  429cc9:	sar    esi,1
  429ccb:	jmp    QWORD PTR [rip+0x6c617673]        # 0x6ca41344
  429cd1:	add    BYTE PTR [rip+0x64252873],ah        # 0x6467c54a
  429cd7:	sub    DWORD PTR [rax],esp
  429cd9:	cmp    eax,0xa0020
  429cde:	jae    0x429d59
  429ce0:	ins    DWORD PTR es:[rdi],dx
  429ce1:	sub    eax,0x6e71663e
  429ce6:	and    BYTE PTR [rcx],ah
  429ce8:	cmp    eax,0x4c554e20
  429ced:	rex.WR add BYTE PTR [rax],r8b
  429cf0:	outs   dx,BYTE PTR ds:[rsi]
  429cf1:	pop    di
  429cf3:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x62]
  429cf7:	(bad)  
  429cf8:	gs jb  0x429cfb
  429cfb:	outs   dx,BYTE PTR ds:[rsi]
  429cfc:	pop    di
  429cfe:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x62]
  429d02:	(bad)  
  429d03:	gs jb  0x429d82
  429d06:	outs   dx,BYTE PTR ds:[rsi]
  429d07:	pop    di
  429d09:	ss xor al,0x62
  429d0c:	imul   esi,DWORD PTR [rdi+rbx*2+0x6f],0x65736666
  429d14:	je     0x429d16
  429d16:	xor    BYTE PTR [rax],al
  429d18:	jo     0x429d8c
  429d1a:	outs   dx,DWORD PTR ds:[rsi]
  429d1b:	addr32 jb 0x429d7f
  429d1e:	ins    DWORD PTR es:[rdi],dx
  429d1f:	and    BYTE PTR [rip+0x2a000a73],ah        # 0x2a42a798
  429d25:	and    BYTE PTR [rcx+0x6e],ch
  429d28:	jo     0x429d9f
  429d2a:	je     0x429d4c
  429d2c:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7325
  429d33:	add    BYTE PTR [rcx+0x6e],ch
  429d36:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  429d3a:	and    BYTE PTR gs:[rdi],ah
  429d3d:	outs   dx,BYTE PTR ds:[rsi]
  429d3e:	gs je  0x429da4
  429d41:	fs imul bp,WORD PTR cs:[rsi+0x63],0x27
  429d49:	sub    ah,BYTE PTR [rax]
  429d4b:	add    BYTE PTR [rbp+0x72],ah
  429d4e:	jb     0x429dbf
  429d50:	jb     0x429d72
  429d52:	jae    0x429dc8
  429d54:	(bad)  
  429d55:	je     0x429dcc
  429d57:	jae    0x429d79
  429d59:	jb     0x429dc0
  429d5b:	je     0x429dd2
  429d5d:	jb     0x429dcd
  429d5f:	add    BYTE PTR [rcx+0x6e],ch
  429d62:	je     0x429dc9
  429d64:	addr32 gs jb 0x429d88
  429d68:	jae    0x429dde
  429d6a:	(bad)  
  429d6b:	je     0x429d6d
  429d6d:	outs   dx,BYTE PTR ds:[rsi]
  429d6e:	gs je  0x429db4
  429d71:	rex.R
  429d72:	rex.RX and BYTE PTR [rsi+0x63],r13b
  429d76:	imul   esp,DWORD PTR [rax+rax*1+0x69],0x6765746e
  429d7e:	gs jb  0x429da1
  429d81:	and    BYTE PTR [rsi+0x63],ch
  429d84:	imul   esp,DWORD PTR [rax+rax*1+0x64],0x6e656d69
  429d8c:	jae    0x429df7
  429d8e:	outs   dx,DWORD PTR ds:[rsi]
  429d8f:	outs   dx,BYTE PTR ds:[rsi]
  429d90:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  429d94:	addr32 je 0x429dff
  429d97:	jae    0x429d99
  429d99:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  429da0:	and    BYTE PTR [rip+0x656c5f73],ah        # 0x65aefd19
  429da6:	outs   dx,BYTE PTR ds:[rsi]
  429da7:	or     al,BYTE PTR [rax]
  429da9:	add    BYTE PTR [rax],al
  429dab:	add    BYTE PTR [rax],al
  429dad:	add    BYTE PTR [rax],al
  429daf:	add    BYTE PTR [rax+0x61],dh
  429db2:	jb     0x429e15
  429db4:	ins    DWORD PTR es:[rdi],dx
  429db5:	gs je  0x429e1d
  429db8:	jb     0x429dda
  429dba:	sub    BYTE PTR [rip+0x656c5f73],ah        # 0x65aefd33
  429dc0:	outs   dx,BYTE PTR ds:[rsi]
  429dc1:	and    BYTE PTR [rip+0x5f464e20],bh        # 0x5f88ebe7
  429dc7:	push   rbp
  429dc8:	rex.WRX
  429dc9:	rex.WR
  429dca:	rex.WB
  429dcb:	rex.WRB
  429dcc:	rex.WB push r12
  429dce:	rex.RB
  429dcf:	sub    DWORD PTR [rdx],r9d
  429dd2:	add    BYTE PTR [rax+0x61],dh
  429dd5:	jb     0x429e38
  429dd7:	ins    DWORD PTR es:[rdi],dx
  429dd8:	gs je  0x429e40
  429ddb:	jb     0x429dfd
  429ddd:	sub    BYTE PTR [rip+0x656c5f73],ah        # 0x65aefd56
  429de3:	outs   dx,BYTE PTR ds:[rsi]
  429de4:	and    BYTE PTR [rip+0x756c2520],bh        # 0x75aec30a
  429dea:	sub    DWORD PTR [rdx],ecx
  429dec:	add    BYTE PTR [rcx+0x6e],ch
  429def:	je     0x429e56
  429df1:	addr32 gs jb 0x429e15
  429df5:	and    eax,0x69645f73
  429dfa:	ins    DWORD PTR es:[rdi],dx
  429dfb:	or     al,BYTE PTR [rax]
  429dfd:	jbe    0x429e60
  429dff:	jb     0x429e6a
  429e01:	(bad)  
  429e02:	(bad)  
  429e03:	ins    BYTE PTR es:[rdi],dx
  429e04:	and    BYTE PTR gs:[rcx+0x64],ch
  429e08:	jae    0x429e0a
  429e0a:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  429e11:	and    BYTE PTR [rip+0xa3b73],ah        # 0x4cd98a
  429e17:	add    BYTE PTR [rdx+0x61],dh
  429e1a:	outs   dx,BYTE PTR ds:[rsi]
  429e1b:	imul   esp,DWORD PTR [rax],0x28
  429e1e:	outs   dx,BYTE PTR ds:[rsi]
  429e1f:	jne    0x429e8e
  429e21:	(bad)  
  429e22:	gs jb  0x429e45
  429e25:	outs   dx,DWORD PTR ds:[rsi]
  429e26:	data16 and BYTE PTR [rcx+rbp*2+0x6d],ah
  429e2b:	outs   dx,BYTE PTR gs:[rsi]
  429e2d:	jae    0x429e98
  429e2f:	outs   dx,DWORD PTR ds:[rsi]
  429e30:	outs   dx,BYTE PTR ds:[rsi]
  429e31:	jae    0x429e5c
  429e33:	and    BYTE PTR [rsi+0x6f],ah
  429e36:	jb     0x429e58
  429e38:	gs (bad) 
  429e3a:	movsxd ebp,DWORD PTR [rax+0x20]
  429e3d:	jbe    0x429ea0
  429e3f:	jb     0x429eaa
  429e41:	(bad)  
  429e42:	(bad)  
  429e43:	ins    BYTE PTR es:[rdi],dx
  429e44:	add    BYTE PTR gs:[rcx+0x6e],ch
  429e48:	je     0x429eaf
  429e4a:	addr32 gs jb 0x429e6e
  429e4e:	and    eax,0x61725f73
  429e53:	outs   dx,BYTE PTR ds:[rsi]
  429e54:	imul   ecx,DWORD PTR [rdx],0x0
  429e57:	jo     0x429eba
  429e59:	jb     0x429ebc
  429e5b:	ins    DWORD PTR es:[rdi],dx
  429e5c:	gs je  0x429ec4
  429e5f:	jb     0x429e81
  429e61:	sub    BYTE PTR [rip+0x61725f73],ah        # 0x61b4fdda
  429e67:	outs   dx,BYTE PTR ds:[rsi]
  429e68:	imul   esp,DWORD PTR [rax],0x3d
  429e6b:	and    BYTE PTR [rip+0xa2964],ah        # 0x4cc7d5
  429e71:	jbe    0x429ed4
  429e73:	jb     0x429ede
  429e75:	(bad)  
  429e76:	(bad)  
  429e77:	ins    BYTE PTR es:[rdi],dx
  429e78:	and    BYTE PTR gs:[rbx+0x68],dh
  429e7c:	(bad)  
  429e7d:	jo     0x429ee4
  429e7f:	jae    0x429e81
  429e81:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  429e88:	and    BYTE PTR [rip+0x69645f73],ah        # 0x69a6fe01
  429e8e:	ins    DWORD PTR es:[rdi],dx
  429e8f:	jae    0x429eb9
  429e91:	and    eax,0x61725f73
  429e96:	outs   dx,BYTE PTR ds:[rsi]
  429e97:	imul   ebp,DWORD PTR [rcx],0xa
  429e9a:	add    BYTE PTR [rsi+0x61],dh
  429e9d:	jb     0x429f08
  429e9f:	(bad)  
  429ea0:	(bad)  
  429ea1:	ins    BYTE PTR es:[rdi],dx
  429ea2:	and    BYTE PTR gs:[rbp+riz*2+0x63],ah
  429ea7:	ins    BYTE PTR es:[rdi],dx
  429ea8:	(bad)  
  429ea9:	jb     0x429f0c
  429eab:	je     0x429f16
  429ead:	outs   dx,DWORD PTR ds:[rsi]
  429eae:	outs   dx,BYTE PTR ds:[rsi]
  429eaf:	jae    0x429eb1
  429eb1:	and    eax,0x73252073
  429eb6:	or     al,BYTE PTR [rax]
  429eb8:	and    BYTE PTR [rip+0x2500756c],ah        # 0x2543142a
  429ebe:	jae    0x429ee0
  429ec0:	and    eax,0x73252873
  429ec5:	sub    DWORD PTR [rdx],ecx
  429ec7:	add    BYTE PTR [rcx+0x74],ah
  429eca:	je     0x429f3e
  429ecc:	imul   esp,DWORD PTR [rdx+0x75],0x76206574
  429ed3:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  429ed8:	jae    0x429eda
  429eda:	and    eax,0x73252073
  429edf:	jbe    0x429f42
  429ee1:	ins    BYTE PTR es:[rdi],dx
  429ee2:	sub    BYTE PTR [rip+0xa2964],ah        # 0x4cc84c
  429ee8:	outs   dx,BYTE PTR gs:[rsi]
  429eea:	je     0x429f51
  429eec:	jb     0x429f0e
  429eee:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6d20
  429ef6:	outs   dx,DWORD PTR ds:[rsi]
  429ef7:	fs add BYTE PTR gs:[rbp+0x6e],dh
  429efc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  429f00:	outs   dx,BYTE PTR ds:[rsi]
  429f01:	and    BYTE PTR [rbx+0x6d],ah
  429f04:	outs   dx,DWORD PTR ds:[rsi]
  429f05:	fs and BYTE PTR gs:[rbp+0x6f],ch
  429f0a:	imul   esp,DWORD PTR fs:[rsi+0x69],0x203a7265
  429f12:	and    eax,0x64
  429f17:	add    BYTE PTR [rbx+0x74],dh
  429f1a:	(bad)  
  429f1b:	je     0x429f3d
  429f1d:	cmp    eax,0x5f666e20
  429f22:	movsxd esi,DWORD PTR [rdx+0x65]
  429f25:	(bad)  
  429f26:	je     0x429f8d
  429f28:	sub    BYTE PTR [rdi],ah
  429f2a:	and    eax,0x202c2773
  429f2f:	and    eax,0x6e202c73
  429f34:	movsxd ebp,DWORD PTR [rcx+0x64]
  429f37:	sub    DWORD PTR [rbx],edi
  429f39:	or     al,BYTE PTR [rax]
  429f3b:	movsxd esp,DWORD PTR [rcx+0x6c]
  429f3e:	ins    BYTE PTR es:[rdi],dx
  429f3f:	and    BYTE PTR [rbx+0x68],ah
  429f42:	movsxd ebp,DWORD PTR gs:[rbx+0x5f]
  429f46:	gs jb  0x429fbb
  429f49:	sub    BYTE PTR [rbx+0x74],dh
  429f4c:	(bad)  
  429f4d:	je     0x429f78
  429f4f:	add    BYTE PTR [rbp+riz*2+0x66],ah
  429f53:	imul   ebp,DWORD PTR [rsi+0x65],0x6d696420
  429f5a:	outs   dx,BYTE PTR gs:[rsi]
  429f5c:	jae    0x429fc7
  429f5e:	outs   dx,DWORD PTR ds:[rsi]
  429f5f:	outs   dx,BYTE PTR ds:[rsi]
  429f60:	jae    0x429f62
  429f62:	add    BYTE PTR [rax],al
  429f64:	add    BYTE PTR [rax],al
  429f66:	add    BYTE PTR [rax],al
  429f68:	jae    0x429fde
  429f6a:	(bad)  
  429f6b:	je     0x429f8d
  429f6d:	cmp    eax,0x5f666e20
  429f72:	fs gs pop di
  429f76:	imul   ebp,DWORD PTR fs:[rbp+0x28],0x6469636e
  429f7e:	sub    al,0x20
  429f80:	and    eax,0x25202c73
  429f85:	jae    0x429fe6
  429f87:	ins    BYTE PTR es:[rdi],dx
  429f88:	outs   dx,BYTE PTR gs:[rsi]
  429f8a:	sub    al,0x20
  429f8c:	and    eax,0xa3b2973
  429f91:	add    BYTE PTR [rbp+riz*2+0x66],ah
  429f95:	imul   ebp,DWORD PTR [rsi+0x65],0x72617620
  429f9c:	imul   esp,DWORD PTR [rcx+0x62],0x73656c
  429fa3:	and    eax,0x69645f73
  429fa8:	ins    DWORD PTR es:[rdi],dx
  429fa9:	jae    0x429fd3
  429fab:	and    eax,0x3d202964
  429fb0:	and    BYTE PTR [rip+0x5f000a73],ah        # 0x5f42aa29
  429fb6:	imul   ebp,DWORD PTR fs:[rbp+0x73],0x0
  429fbe:	add    BYTE PTR [rax],al
  429fc0:	jae    0x42a036
  429fc2:	(bad)  
  429fc3:	je     0x429fe5
  429fc5:	cmp    eax,0x5f666e20
  429fca:	fs gs pop di
  429fce:	jbe    0x42a031
  429fd0:	jb     0x429ffa
  429fd2:	outs   dx,BYTE PTR ds:[rsi]
  429fd3:	movsxd ebp,DWORD PTR [rcx+0x64]
  429fd6:	sub    al,0x20
  429fd8:	and    eax,0x25202c73
  429fdd:	jae    0x42a00b
  429fdf:	and    BYTE PTR [rip+0x61725f73],ah        # 0x61b4ff58
  429fe5:	outs   dx,BYTE PTR ds:[rsi]
  429fe6:	imul   ebp,DWORD PTR [rax+riz*1],0x25
  429fea:	jae    0x42a018
  429fec:	and    BYTE PTR [rip+0xa3b2973],ah        # 0xa7dc965
  429ff2:	add    BYTE PTR [rcx+0x73],ah
  429ff5:	jae    0x42a060
  429ff7:	outs   dx,BYTE PTR ds:[esi]
  429ff9:	and    BYTE PTR [rdi+0x6c],ah
  429ffc:	outs   dx,DWORD PTR ds:[rsi]
  429ffd:	(bad)
  42a002:	je     0x42a078
  42a004:	jb     0x42a06f
  42a006:	(bad)  
  42a007:	jne    0x42a07d
  42a009:	gs jae 0x42a00c
  42a00c:	add    BYTE PTR [rax],al
  42a00e:	add    BYTE PTR [rax],al
  42a010:	(bad)  
  42a011:	jae    0x42a086
  42a013:	imul   esp,DWORD PTR [rdi+0x6e],0x72657020
  42a01a:	sub    eax,0x69726176
  42a01f:	(bad)  
  42a020:	(bad)  
  42a021:	ins    BYTE PTR es:[rdi],dx
  42a022:	and    BYTE PTR gs:[rcx+0x74],ah
  42a026:	je     0x42a09a
  42a028:	imul   esp,DWORD PTR [rdx+0x75],0x736574
  42a02f:	add    BYTE PTR [rdi+rbp*2+0x6e],ah
  42a033:	(bad)  
  42a034:	je     0x42a056
  42a036:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  42a03d:	imul   edi,DWORD PTR [rdx+0x65],0x72617620
  42a044:	imul   esp,DWORD PTR [rcx+0x62],0x2073656c
  42a04b:	ja     0x42a0b6
  42a04d:	je     0x42a0b7
  42a04f:	and    BYTE PTR [rsi+0x69],ah
  42a052:	ins    BYTE PTR es:[rdi],dx
  42a053:	ins    BYTE PTR es:[rdi],dx
  42a054:	and    BYTE PTR [rsi+0x61],dh
  42a057:	ins    BYTE PTR es:[rdi],dx
  42a058:	jne    0x42a0bf
  42a05a:	jae    0x42a05c
  42a05c:	add    BYTE PTR [rax],al
  42a05e:	add    BYTE PTR [rax],al
  42a060:	jae    0x42a0d6
  42a062:	(bad)  
  42a063:	je     0x42a085
  42a065:	cmp    eax,0x5f666e20
  42a06a:	jae    0x42a0d1
  42a06c:	je     0x42a0cd
  42a06e:	imul   bp,WORD PTR [rsp+rbp*2+0x28],0x636e
  42a075:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x4e5f434e
  42a07d:	rex.WRXB
  42a07e:	rex.RX
  42a07f:	rex.WB
  42a080:	rex.WR
  42a081:	rex.WR sub al,0x20
  42a084:	xor    BYTE PTR [rcx],ch
  42a086:	cmp    eax,DWORD PTR [rax]
  42a088:	ins    BYTE PTR es:[rdi],dx
  42a089:	gs (bad) 
  42a08b:	jbe    0x42a0f2
  42a08d:	and    BYTE PTR [rbp+riz*2+0x66],ah
  42a091:	imul   ebp,DWORD PTR [rsi+0x65],0x646f6d20
  42a098:	add    BYTE PTR gs:[rbx+0x74],dh
  42a09c:	(bad)  
  42a09d:	je     0x42a0bf
  42a09f:	cmp    eax,0x5f666e20
  42a0a4:	outs   dx,BYTE PTR gs:[rsi]
  42a0a6:	fs fs data16 sub BYTE PTR gs:[rsi+0x63],ch
  42a0ad:	imul   esp,DWORD PTR [rcx+rbp*1+0x3b],0x0
  42a0b5:	add    BYTE PTR [rax],al
  42a0b7:	add    BYTE PTR [rcx+0x73],ah
  42a0ba:	jae    0x42a125
  42a0bc:	outs   dx,BYTE PTR ds:[esi]
  42a0be:	and    BYTE PTR [rbx+0x63],dh
  42a0c1:	(bad)  
  42a0c2:	ins    BYTE PTR es:[rdi],dx
  42a0c3:	(bad)  
  42a0c4:	jb     0x42a0e6
  42a0c6:	(bad)  
  42a0c7:	outs   dx,BYTE PTR ds:[rsi]
  42a0c8:	and    BYTE PTR fs:[rsi+0x69],ah
  42a0cc:	js     0x42a133
  42a0ce:	and    BYTE PTR fs:[rcx+rbp*2+0x6d],ah
  42a0d3:	outs   dx,BYTE PTR gs:[rsi]
  42a0d5:	jae    0x42a140
  42a0d7:	outs   dx,DWORD PTR ds:[rsi]
  42a0d8:	outs   dx,BYTE PTR ds:[rsi]
  42a0d9:	and    BYTE PTR [rsi+0x61],dh
  42a0dc:	jb     0x42a147
  42a0de:	(bad)  
  42a0df:	(bad)  
  42a0e0:	ins    BYTE PTR es:[rdi],dx
  42a0e1:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  42a0e6:	(bad)  
  42a0e7:	add    BYTE PTR [rax+0x65],dh
  42a0ea:	jb     0x42a152
  42a0ec:	outs   dx,DWORD PTR ds:[rsi]
  42a0ed:	jb     0x42a15c
  42a0ef:	and    BYTE PTR [rsi+0x61],dh
  42a0f2:	jb     0x42a15d
  42a0f4:	(bad)  
  42a0f5:	(bad)  
  42a0f6:	ins    BYTE PTR es:[rdi],dx
  42a0f7:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  42a0fc:	(bad)  
  42a0fd:	and    BYTE PTR [rdi+0x72],dh
  42a100:	imul   esi,DWORD PTR [rbp+riz*2+0x73],0x6c616300
  42a108:	ins    BYTE PTR es:[rdi],dx
  42a109:	ins    BYTE PTR es:[rdi],dx
  42a10a:	imul   esi,DWORD PTR [rbx+0x74],0x203d2120
  42a111:	rex.WRX push rbp
  42a113:	rex.WR
  42a114:	rex.WR add BYTE PTR [rcx+0x73],r12b
  42a118:	jae    0x42a17f
  42a11a:	jb     0x42a190
  42a11c:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  42a123:	ins    BYTE PTR es:[rdi],dx
  42a124:	jne    0x42a198
  42a126:	cmp    ah,BYTE PTR gs:[rax]
  42a129:	and    eax,0x74730073
  42a12e:	(bad)  
  42a12f:	je     0x42a151
  42a131:	cmp    eax,0x5f666e20
  42a136:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  42a13a:	sub    BYTE PTR gs:[rsi+0x63],ch
  42a13e:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x646e65
  42a146:	jae    0x42a1bd
  42a148:	(bad)
  42a14d:	imul   ebp,DWORD PTR [rsi+0x65],0x65686320
  42a154:	movsxd ebp,DWORD PTR [rbx+0x5f]
  42a157:	gs jb  0x42a1cc
  42a15a:	sub    BYTE PTR [rbx+0x74],dh
  42a15d:	(bad)  
  42a15e:	je     0x42a189
  42a160:	add    BYTE PTR [rcx+0x66],ch
  42a163:	and    BYTE PTR [rax],ch
  42a165:	jae    0x42a1db
  42a167:	(bad)  
  42a168:	je     0x42a18a
  42a16a:	outs   dx,BYTE PTR cs:[rsi]
  42a16c:	gs and BYTE PTR cs:[rsi+0x46],cl
  42a171:	pop    rdi
  42a172:	rex.WRX
  42a173:	rex.WRXB
  42a174:	rex.RB push r10
  42a176:	push   rdx
  42a177:	sub    DWORD PTR [rax],esp
  42a179:	je     0x42a1e3
  42a17b:	outs   dx,BYTE PTR gs:[rsi]
  42a17d:	add    BYTE PTR [rax+0x72],dh
  42a180:	imul   ebp,DWORD PTR [rsi+0x74],0x202c2a20
  42a187:	outs   dx,BYTE PTR ds:[rsi]
  42a188:	pop    di
  42a18a:	jae    0x42a200
  42a18c:	jb     0x42a1f3
  42a18e:	jb     0x42a202
  42a190:	outs   dx,DWORD PTR ds:[rsi]
  42a191:	jb     0x42a1bb
  42a193:	jae    0x42a209
  42a195:	(bad)  
  42a196:	je     0x42a1c1
  42a198:	add    BYTE PTR [rbx+0x74],dh
  42a19b:	outs   dx,DWORD PTR ds:[rsi]
  42a19c:	jo     0x42a19e
  42a19e:	outs   dx,BYTE PTR gs:[rsi]
  42a1a0:	imul   esp,DWORD PTR fs:[rsi+0x0],0x656d6964
  42a1a8:	outs   dx,BYTE PTR ds:[rsi]
  42a1a9:	jae    0x42a214
  42a1ab:	outs   dx,DWORD PTR ds:[rsi]
  42a1ac:	outs   dx,BYTE PTR ds:[rsi]
  42a1ad:	and    BYTE PTR [rcx+0x64],ch
  42a1b0:	jae    0x42a1b2
  42a1b2:	rex.WRX
  42a1b3:	rex.RX pop rdi
  42a1b5:	rex.RXB
  42a1b6:	rex.WR
  42a1b7:	rex.WRXB
  42a1b8:	rex.X
  42a1b9:	rex.B
  42a1ba:	rex.WR add BYTE PTR [rax+rax*1],r13b
  42a1be:	sub    ah,BYTE PTR [rax]
  42a1c0:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2520
  42a1c8:	jae    0x42a1d4
  42a1ca:	add    BYTE PTR [rax],al
  42a1cc:	add    BYTE PTR [rax],al
  42a1ce:	add    BYTE PTR [rax],al
  42a1d0:	jae    0x42a246
  42a1d2:	(bad)  
  42a1d3:	je     0x42a1f5
  42a1d5:	cmp    eax,0x5f666e20
  42a1da:	jo     0x42a251
  42a1dc:	je     0x42a23d
  42a1de:	(bad)  
  42a1df:	je     0x42a255
  42a1e1:	pop    rdi
  42a1e2:	and    eax,0x636e2873
  42a1e7:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x202c7325
  42a1ef:	and    eax,0x25202c73
  42a1f4:	jae    0x42a222
  42a1f6:	and    BYTE PTR [rip+0x202c756c],ah        # 0x206f1768
  42a1fc:	and    eax,0x6c617673
  42a201:	sub    DWORD PTR [rdx],ecx
  42a203:	add    BYTE PTR [rax],al
  42a205:	add    BYTE PTR [rax],al
  42a207:	add    BYTE PTR [rbx+0x74],dh
  42a20a:	(bad)  
  42a20b:	je     0x42a22d
  42a20d:	cmp    eax,0x5f666e20
  42a212:	jo     0x42a289
  42a214:	je     0x42a275
  42a216:	(bad)  
  42a217:	je     0x42a28d
  42a219:	pop    rdi
  42a21a:	je     0x42a281
  42a21c:	js     0x42a292
  42a21e:	sub    BYTE PTR [rsi+0x63],ch
  42a221:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x202c7325
  42a229:	and    eax,0x25202c73
  42a22e:	ins    BYTE PTR es:[rdi],dx
  42a22f:	jne    0x42a25d
  42a231:	and    BYTE PTR [rax],al
  42a233:	sub    DWORD PTR [rax],eax
  42a235:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  42a237:	outs   dx,BYTE PTR ds:[rsi]
  42a238:	sub    eax,0x73616c63
  42a23d:	jae    0x42a2a8
  42a23f:	movsxd esp,DWORD PTR [rax]
  42a241:	je     0x42a2bc
  42a243:	jo     0x42a2aa
  42a245:	cmp    ah,BYTE PTR [rax]
  42a247:	and    eax,0x73
  42a24c:	add    BYTE PTR [rax],al
  42a24e:	add    BYTE PTR [rax],al
  42a250:	jae    0x42a2c6
  42a252:	(bad)  
  42a253:	je     0x42a275
  42a255:	cmp    eax,0x5f666e20
  42a25a:	jo     0x42a2d1
  42a25c:	je     0x42a2bd
  42a25e:	jbe    0x42a2c1
  42a260:	jb     0x42a2c1
  42a262:	and    eax,0x636e2873
  42a267:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x202c7325
  42a26f:	and    eax,0xa2973
  42a274:	fs (bad) 
  42a276:	je     0x42a2d9
  42a278:	and    BYTE PTR [rip+0x252f2073],ah        # 0x2571c2f1
  42a27e:	jae    0x42a2af
  42a280:	or     al,BYTE PTR [rax]
  42a282:	add    BYTE PTR [rax],al
  42a284:	add    BYTE PTR [rax],al
  42a286:	add    BYTE PTR [rax],al
  42a288:	movsxd esp,DWORD PTR [rcx+0x6c]
  42a28b:	ins    BYTE PTR es:[rdi],dx
  42a28c:	and    BYTE PTR [rdi+0x72],dh
  42a28f:	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x255f7325
  42a297:	sub    BYTE PTR fs:[rsi+0x63],ch
  42a29b:	imul   esp,DWORD PTR [rsp+rbp*1+0x25],0x64695f73
  42a2a3:	pop    rdi
  42a2a4:	and    eax,0xa2964
  42a2a9:	add    BYTE PTR [rax],al
  42a2ab:	add    BYTE PTR [rax],al
  42a2ad:	add    BYTE PTR [rax],al
  42a2af:	add    BYTE PTR [rbx+0x75],dh
  42a2b2:	(bad)
  42a2b7:	imul   ebp,DWORD PTR [rsi+0x65],0x69727720
  42a2be:	je     0x42a325
  42a2c0:	pop    rdi
  42a2c1:	and    eax,0x64255f73
  42a2c6:	sub    BYTE PTR [rsi+0x63],ch
  42a2c9:	imul   esp,DWORD PTR [rsp+rbp*1+0x25],0x64695f73
  42a2d1:	sub    DWORD PTR [rdx],ecx
  42a2d3:	add    BYTE PTR [rcx+0x6e],ch
  42a2d6:	je     0x42a33d
  42a2d8:	addr32 gs jb 0x42a2fc
  42a2dc:	outs   dx,BYTE PTR ds:[rsi]
  42a2dd:	movsxd ebp,DWORD PTR [rcx+0x64]
  42a2e0:	add    BYTE PTR [rcx+0x6e],ch
  42a2e3:	je     0x42a34a
  42a2e5:	addr32 gs jb 0x42a309
  42a2e9:	and    eax,0x64695f73
  42a2ee:	or     al,BYTE PTR [rax]
  42a2f0:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  42a2f7:	and    BYTE PTR [rip+0x74735f73],ah        # 0x74b60270
  42a2fd:	(bad)  
  42a2fe:	jb     0x42a374
  42a300:	sub    BYTE PTR [rip+0xa2975],ah        # 0x4ccc7b
  42a306:	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
  42a30d:	and    BYTE PTR [rip+0x6f635f73],ah        # 0x6fa60286
  42a313:	jne    0x42a383
  42a315:	je     0x42a33f
  42a317:	and    eax,0xa2975
  42a31c:	and    eax,0x756c2573
  42a321:	add    BYTE PTR [rcx+riz*2+0x74],ah
  42a325:	(bad)  
  42a326:	and    BYTE PTR [rip+0x2f2073],ah        # 0x71c39f
  42a32c:	(bad)  
  42a32d:	or     al,BYTE PTR [rax]
  42a32f:	add    BYTE PTR [rbx+0x74],dh
  42a332:	(bad)  
  42a333:	je     0x42a355
  42a335:	cmp    eax,0x5f666e20
  42a33a:	jo     0x42a3b1
  42a33c:	je     0x42a39d
  42a33e:	jbe    0x42a3a1
  42a340:	jb     0x42a3a3
  42a342:	pop    rdi
  42a343:	and    eax,0x636e2873
  42a348:	imul   esp,DWORD PTR [rsp+rbp*1+0x20],0x202c7325
  42a350:	and    eax,0x74735f73
  42a355:	(bad)  
  42a356:	jb     0x42a3cc
  42a358:	sub    al,0x20
  42a35a:	and    eax,0x6f635f73
  42a35f:	jne    0x42a3cf
  42a361:	je     0x42a38f
  42a363:	and    BYTE PTR [rax],al
  42a365:	and    eax,0x73250073
  42a36a:	pop    rdi
  42a36b:	jae    0x42a3e1
  42a36d:	(bad)  
  42a36e:	jb     0x42a3e4
  42a370:	sub    BYTE PTR [rip+0x3d202964],ah        # 0x3d62ccda
  42a376:	and    BYTE PTR [rip+0xa756c],ah        # 0x4d18e8
  42a37c:	and    eax,0x6f635f73
  42a381:	jne    0x42a3f1
  42a383:	je     0x42a3ad
  42a385:	and    eax,0x3d202964
  42a38a:	and    BYTE PTR [rip+0xa756c],ah        # 0x4d18fc
  42a390:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
  42a398:	jae    0x42a413
  42a39a:	ins    DWORD PTR es:[rdi],dx
  42a39b:	(bad)  
  42a39c:	outs   dx,DWORD PTR ds:[rsi]
  42a39d:	ins    BYTE PTR es:[rdi],dx
  42a39e:	and    BYTE PTR [rsi+0x6f],ah
  42a3a1:	jb     0x42a3c3
  42a3a3:	outs   dx,BYTE PTR gs:[esi]
  42a3a6:	data16 (bad) 
  42a3a8:	(bad)  
  42a3a9:	pop    rdi
  42a3aa:	ja     0x42a41e
  42a3ac:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x696e6170
  42a3b4:	movsxd ebp,DWORD PTR [rax]
  42a3b6:	and    ch,BYTE PTR [rcx+0x6c]
  42a3b9:	ins    BYTE PTR es:[rdi],dx
  42a3ba:	gs addr32 (bad) 
  42a3bd:	ins    BYTE PTR es:[rdi],dx
  42a3be:	and    BYTE PTR [rbx+0x79],dh
  42a3c1:	ins    DWORD PTR es:[rdi],dx
  42a3c2:	(bad)  
  42a3c3:	outs   dx,DWORD PTR ds:[rsi]
  42a3c4:	ins    BYTE PTR es:[rdi],dx
  42a3c5:	and    BYTE PTR [rsi+0x6f],ah
  42a3c8:	jb     0x42a3ea
  42a3ca:	outs   dx,BYTE PTR gs:[esi]
  42a3cd:	data16 (bad) 
  42a3cf:	(bad)  
  42a3d0:	pop    rdi
  42a3d1:	ja     0x42a445
  42a3d3:	imul   esi,DWORD PTR [rbp+riz*2+0x22],0x73740029
  42a3db:	jns    0x42a44a
  42a3dd:	sub    eax,0x6a626f3e
  42a3e2:	movsxd esi,DWORD PTR gs:[rbx+riz*2+0x6c]
  42a3e7:	(bad)  
  42a3e8:	jae    0x42a45d
  42a3ea:	and    BYTE PTR [rip+0x434e203d],bh        # 0x4390c42d
  42a3f0:	pop    rdi
  42a3f1:	push   rsp
  42a3f2:	pop    rcx
  42a3f3:	push   rax
  42a3f4:	add    BYTE PTR [r8],r8b
	...
  42a3ff:	add    BYTE PTR [rdi],ah
  42a401:	and    eax,0x25002763
  42a406:	push   0x25006468
  42a40b:	push   0x64250064
  42a410:	add    BYTE PTR [rip+0x67382e],ah        # 0xa9dc44
  42a416:	and    eax,0x6736312e
  42a41b:	add    BYTE PTR [rsi+0x37],ah
  42a41e:	(bad)  
  42a41f:	fs (bad) 
  42a421:	je     0x42a484
  42a423:	cmp    ah,BYTE PTR [rax]
  42a425:	(bad)
  42a42a:	jns    0x42a49c
  42a42c:	and    BYTE PTR gs:[rbx+0x6f],ah
  42a430:	fs cmp ah,BYTE PTR gs:[rax]
  42a434:	and    eax,0x37660064
  42a439:	(bad)  
  42a43a:	fs (bad) 
  42a43c:	je     0x42a49f
  42a43e:	movsxd eax,DWORD PTR cs:[rax]
  42a441:	add    BYTE PTR [rax],al
  42a443:	add    BYTE PTR [rax],al
  42a445:	add    BYTE PTR [rax],al
  42a447:	add    BYTE PTR [rax+0x61],dh
  42a44a:	outs   dx,BYTE PTR ds:[rsi]
  42a44b:	imul   esp,DWORD PTR [rbx+0x28],0x37376622
  42a452:	fs (bad) 
  42a454:	je     0x42a4b7
  42a456:	cmp    ah,BYTE PTR [rax]
  42a458:	(bad)
  42a45d:	jns    0x42a4cf
  42a45f:	and    BYTE PTR gs:[rbx+0x6f],ah
  42a463:	fs cmp ah,BYTE PTR gs:[rax]
  42a467:	and    eax,0x632c2264
  42a46c:	imul   ebp,DWORD PTR [rip+0x74636e3e],0x29657079        # 0x74a612b4
  42a476:	add    BYTE PTR [rax],al
  42a478:	mov    ah,ah
  42a47a:	(bad)  
  42a47b:	(bad)  
  42a47c:	js     0x42a461
  42a47e:	(bad)  
  42a47f:	call   FWORD PTR [rbp-0x3700011d]
  42a485:	jrcxz  0x42a485
  42a487:	(bad)  
  42a488:	call   0x942a370
  42a48d:	in     al,0xfe
  42a48f:	(bad)  
  42a490:	cmp    ah,ah
  42a492:	(bad)  
  42a493:	dec    DWORD PTR [rax-0x7700011c]
  42a499:	in     al,0xfe
  42a49b:	dec    DWORD PTR [rax-0x7700011c]
  42a4a1:	in     al,0xfe
  42a4a3:	dec    DWORD PTR [rax+0x1bfffee4]
  42a4a9:	jrcxz  0x42a4a9
  42a4ab:	jmp    FWORD PTR [rax+riz*1]
  42a4ae:	add    BYTE PTR [rax],al
  42a4b0:	(bad)  
  42a4b1:	jae    0x42a52c
  42a4b3:	ins    DWORD PTR es:[rdi],dx
  42a4b4:	sub    eax,0x7461643e
  42a4b9:	(bad)  
  42a4ba:	and    BYTE PTR [rcx],ah
  42a4bc:	cmp    eax,0x4c554e20
  42a4c1:	rex.WR add BYTE PTR [rcx+0x73],r12b
  42a4c5:	jae    0x42a52c
  42a4c7:	jb     0x42a53d
  42a4c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  42a4d0:	ins    BYTE PTR es:[rdi],dx
  42a4d1:	jne    0x42a545
  42a4d3:	cmp    ah,BYTE PTR gs:[rax]
  42a4d6:	and    eax,0x65670073
  42a4db:	outs   dx,BYTE PTR ds:[rsi]
  42a4dc:	push   0x2e
  42a4de:	movsxd eax,DWORD PTR [rax]
  42a4e0:	jae    0x42a55b
  42a4e2:	ins    DWORD PTR es:[rdi],dx
  42a4e3:	sub    eax,0x6e71663e
  42a4e8:	and    BYTE PTR [rcx],ah
  42a4ea:	cmp    eax,0x4c554e20
  42a4ef:	rex.WR add BYTE PTR [rbx+0x68],r12b
  42a4f3:	(bad)  
  42a4f4:	jb     0x42a4f6
  42a4f6:	(bad)  
  42a4f7:	jns    0x42a56d
  42a4f9:	add    BYTE PTR gs:[rbx+0x68],dh
  42a4fd:	outs   dx,DWORD PTR ds:[rsi]
  42a4fe:	jb     0x42a574
  42a500:	add    BYTE PTR [rcx+0x6e],ch
  42a503:	je     0x42a505
  42a505:	data16 ins BYTE PTR es:[rdi],dx
  42a507:	outs   dx,DWORD PTR ds:[rsi]
  42a508:	(bad)  
  42a509:	je     0x42a50b
  42a50b:	outs   dx,DWORD PTR fs:[rsi]
  42a50d:	jne    0x42a571
  42a50f:	ins    BYTE PTR es:[rdi],dx
  42a510:	add    BYTE PTR gs:[rdi+rbp*2+0x6e],ch
  42a515:	add    BYTE PTR [ebx+0x74],dl
  42a519:	jb     0x42a584
  42a51b:	outs   dx,BYTE PTR ds:[rsi]
  42a51c:	add    BYTE PTR [esi+0x63],ch
  42a520:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  42a524:	cmp    ah,BYTE PTR gs:[rax]
  42a527:	(bad)
  42a52c:	jns    0x42a59e
  42a52e:	and    BYTE PTR gs:[rbx+0x6f],ah
  42a532:	fs cmp ah,BYTE PTR gs:[rip+0x61700064]        # 0x61b2a59e
  42a53a:	outs   dx,BYTE PTR ds:[rsi]
  42a53b:	imul   esp,DWORD PTR [rbx+0x28],0x63636e22
  42a542:	je     0x42a5bd
  42a544:	jo     0x42a5ab
  42a546:	cmp    ah,BYTE PTR [rax]
  42a548:	(bad)
  42a54d:	jns    0x42a5bf
  42a54f:	and    BYTE PTR gs:[rbx+0x6f],ah
  42a553:	fs cmp ah,BYTE PTR gs:[rip+0x742c2264]        # 0x746ec7bf
  42a55b:	jns    0x42a5cd
  42a55d:	sub    DWORD PTR gs:[rax],eax
  42a560:	adc    dh,ah
  42a562:	(bad)  
  42a563:	call   rax
  42a565:	in     eax,0xfe
  42a567:	inc    eax
  42a569:	in     eax,0xfe
  42a56b:	inc    DWORD PTR [rax]
  42a56d:	out    0xfe,al
  42a56f:	push   QWORD PTR [rax-0x1f00011b]
  42a575:	in     eax,0xfe
  42a577:	push   rax
  42a579:	in     eax,0xfe
  42a57b:	call   QWORD PTR [rax-0x6f00011b]
  42a581:	in     eax,0xfe
  42a583:	call   QWORD PTR [rax-0x6f00011b]
  42a589:	in     eax,0xfe
  42a58b:	call   QWORD PTR [rax-0x5f00011b]
  42a591:	in     eax,0xfe
  42a593:	call   QWORD PTR [rax]
  42a595:	out    0xfe,al
  42a597:	jmp    QWORD PTR [rax-0x4f00011b]
  42a59d:	in     eax,0xfe
  42a59f:	inc    DWORD PTR [rbx+0x68]
  42a5a2:	(bad)  
  42a5a3:	jb     0x42a5a5
  42a5a5:	rex.X jns 0x42a61c
  42a5a8:	add    BYTE PTR gs:[rbx+0x68],dl
  42a5ac:	outs   dx,DWORD PTR ds:[rsi]
  42a5ad:	jb     0x42a623
  42a5af:	add    BYTE PTR [rcx+0x6e],cl
  42a5b2:	je     0x42a5b4
  42a5b4:	rex.RX ins BYTE PTR es:[rdi],dx
  42a5b6:	outs   dx,DWORD PTR ds:[rsi]
  42a5b7:	(bad)  
  42a5b8:	je     0x42a5ba
  42a5ba:	rex.R outs dx,DWORD PTR ds:[rsi]
  42a5bc:	jne    0x42a620
  42a5be:	ins    BYTE PTR es:[rdi],dx
  42a5bf:	add    BYTE PTR gs:[rdi+rbp*2+0x6e],cl
  42a5c4:	add    BYTE PTR [eax],al
  42a5c7:	add    BYTE PTR [rax+0x58fffee6],bl
  42a5cd:	out    0xfe,al
  42a5cf:	dec    DWORD PTR [rax-0x1a]
  42a5d2:	(bad)  
  42a5d3:	dec    DWORD PTR [rax+0x38fffee6]
  42a5d9:	out    0xfe,al
  42a5db:	jmp    FWORD PTR [rax-0x1a]
  42a5de:	(bad)  
  42a5df:	(bad)  
  42a5e0:	js     0x42a5c8
  42a5e2:	(bad)  
  42a5e3:	call   FWORD PTR [rax]
  42a5e5:	out    0xfe,al
  42a5e7:	call   FWORD PTR [rax]
  42a5e9:	out    0xfe,al
  42a5eb:	call   FWORD PTR [rax]
  42a5ed:	out    0xfe,al
  42a5ef:	call   FWORD PTR [rax]
  42a5f1:	out    0xfe,al
  42a5f3:	call   FWORD PTR [rax]
  42a5f5:	out    0xfe,al
  42a5f7:	jmp    FWORD PTR [rax]
  42a5f9:	out    0xfe,al
  42a5fb:	call   FWORD PTR [rax+0x28fffee6]
  42a601:	out    0xfe,al
  42a603:	(bad)  
  42a604:	cmp    dh,ah
  42a606:	(bad)  
  42a607:	jmp    QWORD PTR [rsi+0x61]
  42a60a:	ins    BYTE PTR es:[rdi],dx
  42a60b:	jae    0x42a672
  42a60d:	add    BYTE PTR [rdx+rsi*2+0x75],dh
  42a611:	add    BYTE PTR gs:[rbx+0x48],al
  42a615:	push   r10
  42a617:	add    BYTE PTR [rdx+0x59],al
  42a61a:	push   rsp
  42a61b:	add    BYTE PTR [r11+0x48],r10b
  42a61f:	rex.WRXB push r10
  42a621:	push   rsp
  42a622:	add    BYTE PTR [rcx+0x4e],cl
  42a625:	push   rsp
  42a626:	add    BYTE PTR [rsi+0x4c],al
  42a629:	rex.WRXB
  42a62a:	push   r12
  42a62c:	add    BYTE PTR [rdi+rcx*2+0x55],al
  42a630:	rex.X
  42a631:	rex.WR
  42a632:	add    BYTE PTR [r15+rcx*2+0x4e],r9b
  42a637:	rex.RXB add BYTE PTR [r11+0x54],r10b
  42a63b:	push   rdx
  42a63c:	rex.WB
  42a63d:	rex.WRX
  42a63e:	rex.RXB add BYTE PTR [r9+0x6d],r13b
  42a642:	jo     0x42a6b3
  42a644:	jb     0x42a6ba
  42a646:	and    BYTE PTR [rdx+0x61],ch
  42a649:	jbe    0x42a6ac
  42a64b:	cs jne 0x42a6c2
  42a64e:	imul   ebp,DWORD PTR [rsi+rbp*1+0x2a],0x6d69003b
  42a656:	jo     0x42a6c7
  42a658:	jb     0x42a6ce
  42a65a:	and    BYTE PTR [rbp+0x63],dh
  42a65d:	(bad)  
  42a65e:	jb     0x42a68e
  42a660:	ins    DWORD PTR es:[rdi],dx
  42a661:	(bad)  
  42a662:	xor    ch,BYTE PTR [rsi]
  42a664:	sub    bh,BYTE PTR [rbx]
  42a666:	add    BYTE PTR [rcx+0x6d],ch
  42a669:	jo     0x42a6da
  42a66b:	jb     0x42a6e1
  42a66d:	and    BYTE PTR [rbp+0x63],dh
  42a670:	(bad)  
  42a671:	jb     0x42a6a1
  42a673:	outs   dx,BYTE PTR ds:[rsi]
  42a674:	movsxd esi,DWORD PTR [rdx]
  42a676:	sub    bh,BYTE PTR cs:[rbx]
  42a679:	add    BYTE PTR [rcx+0x6d],ch
  42a67c:	jo     0x42a6ed
  42a67e:	jb     0x42a6f4
  42a680:	and    BYTE PTR [rbp+0x63],dh
  42a683:	(bad)  
  42a684:	jb     0x42a6b4
  42a686:	outs   dx,BYTE PTR ds:[rsi]
  42a687:	movsxd esi,DWORD PTR [rdx]
  42a689:	cs rex.WRX
  42a68b:	gs je  0x42a6f1
  42a68e:	imul   r13w,WORD PTR fs:[rbp+r12*2+0x2e],0x3b2a
  42a697:	add    BYTE PTR [rax],al
  42a699:	jo     0x42a710
  42a69b:	(bad)  
  42a69c:	ins    BYTE PTR es:[rdi],dx
  42a69d:	imul   esp,DWORD PTR [rbx+0x20],0x73616c63
  42a6a4:	jae    0x42a6c6
  42a6a6:	add    BYTE PTR [rbx+0x0],bh
  42a6a9:	add    BYTE PTR [rax],al
  42a6ab:	add    BYTE PTR [rax],al
  42a6ad:	add    BYTE PTR [rax],al
  42a6af:	add    BYTE PTR [rbx+0x74],dh
  42a6b2:	(bad)  
  42a6b3:	je     0x42a71e
  42a6b5:	movsxd esp,DWORD PTR [rax]
  42a6b7:	jo     0x42a72e
  42a6b9:	(bad)  
  42a6ba:	ins    BYTE PTR es:[rdi],dx
  42a6bb:	imul   esp,DWORD PTR [rbx+0x20],0x64696f76
  42a6c2:	and    BYTE PTR [rbp+0x61],ch
  42a6c5:	imul   ebp,DWORD PTR [rsi+0x28],0x69727453
  42a6cc:	outs   dx,BYTE PTR ds:[rsi]
  42a6cd:	addr32 pop rbx
  42a6cf:	pop    rbp
  42a6d0:	and    BYTE PTR [rcx+0x72],ah
  42a6d3:	addr32 jbe 0x42a6ff
  42a6d6:	and    BYTE PTR [rax+rbp*2+0x72],dh
  42a6da:	outs   dx,DWORD PTR ds:[rsi]
  42a6db:	ja     0x42a750
  42a6dd:	and    BYTE PTR [rbp+0x78],al
  42a6e0:	movsxd esp,DWORD PTR [rbp+0x70]
  42a6e3:	je     0x42a74e
  42a6e5:	outs   dx,DWORD PTR ds:[rsi]
  42a6e6:	outs   dx,BYTE PTR ds:[rsi]
  42a6e7:	add    BYTE PTR [rdi],ch
  42a6e9:	sub    ah,BYTE PTR [rax]
  42a6eb:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  42a6f3:	outs   dx,BYTE PTR ds:[rsi]
  42a6f4:	and    BYTE PTR [rbp+riz*2+0x6e],ch
  42a6f8:	addr32 je 0x42a763
  42a6fb:	jae    0x42a71d
  42a6fd:	sub    ch,BYTE PTR [rdi]
  42a6ff:	add    BYTE PTR [rip+0x6e696673],ah        # 0x6eac0d78
  42a705:	(bad)  
  42a706:	ins    BYTE PTR es:[rdi],dx
  42a707:	and    BYTE PTR [rcx+0x6e],ch
  42a70a:	je     0x42a72c
  42a70c:	and    eax,0x656c5f73
  42a711:	outs   dx,BYTE PTR ds:[rsi]
  42a712:	and    BYTE PTR [rip+0xa3b3020],bh        # 0xa7dd738
  42a718:	add    BYTE PTR [rip+0x6e696673],ah        # 0x6eac0d91
  42a71e:	(bad)  
  42a71f:	ins    BYTE PTR es:[rdi],dx
  42a720:	and    BYTE PTR [rcx+0x6e],ch
  42a723:	je     0x42a745
  42a725:	and    eax,0x656c5f73
  42a72a:	outs   dx,BYTE PTR ds:[rsi]
  42a72b:	and    BYTE PTR [rip+0x756c2520],bh        # 0x75aecc51
  42a731:	cmp    ecx,DWORD PTR [rdx]
  42a733:	add    BYTE PTR [rdi],ch
  42a735:	sub    ah,BYTE PTR [rax]
  42a737:	outs   dx,BYTE PTR gs:[rsi]
  42a739:	je     0x42a7a0
  42a73b:	jb     0x42a75d
  42a73d:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6d20
  42a745:	outs   dx,DWORD PTR ds:[rsi]
  42a746:	fs and BYTE PTR gs:[rdx],ch
  42a74a:	(bad)  
  42a74b:	add    BYTE PTR [rax],al
  42a74d:	add    BYTE PTR [rax],al
  42a74f:	add    BYTE PTR [rip+0x74654e73],ah        # 0x74a7f5c8
  42a755:	movsxd esp,DWORD PTR [rsi+riz*2+0x46]
  42a759:	imul   ebp,DWORD PTR [rbp+riz*2+0x57],0x65746972
  42a761:	(bad)  
  42a762:	(bad)  
  42a763:	ins    BYTE PTR es:[rdi],dx
  42a764:	and    BYTE PTR gs:[rsi+0x63],ch
  42a768:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x203d
  42a76f:	rex.WRX
  42a770:	gs je  0x42a7d6
  42a773:	imul   r13w,WORD PTR fs:[rbp+r12*2+0x57],0x6972
  42a77c:	je     0x42a7e3
  42a77e:	(bad)  
  42a77f:	(bad)  
  42a780:	ins    BYTE PTR es:[rdi],dx
  42a781:	gs movsxd esi,DWORD PTR cs:[rdx+0x65]
  42a786:	(bad)  
  42a787:	je     0x42a7ee
  42a789:	rex.WRX
  42a78a:	gs ja  0x42a7b5
  42a78d:	and    ah,BYTE PTR [rip+0x202c2273]        # 0x206eca06
  42a793:	and    eax,0xa3b2973
  42a798:	add    BYTE PTR [rdi],ch
  42a79a:	sub    ah,BYTE PTR [rax]
  42a79c:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6420
  42a7a4:	imul   ebp,DWORD PTR [rbp+0x65],0x6f69736e
  42a7ab:	outs   dx,BYTE PTR ds:[rsi]
  42a7ac:	jae    0x42a7ce
  42a7ae:	sub    ch,BYTE PTR [rdi]
	...
  42a7b8:	and    eax,0x6d694473
  42a7bd:	outs   dx,BYTE PTR gs:[rsi]
  42a7bf:	jae    0x42a82a
  42a7c1:	outs   dx,DWORD PTR ds:[rsi]
  42a7c2:	outs   dx,BYTE PTR ds:[rsi]
  42a7c3:	and    BYTE PTR [rip+0x69645f73],ah        # 0x69a7073c
  42a7c9:	ins    DWORD PTR es:[rdi],dx
  42a7ca:	and    BYTE PTR [rip+0x66636e20],bh        # 0x66a615f0
  42a7d0:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x55646461
  42a7d8:	outs   dx,BYTE PTR ds:[rsi]
  42a7d9:	ins    BYTE PTR es:[rdi],dx
  42a7da:	imul   ebp,DWORD PTR [rbp+0x69],0x44646574
  42a7e1:	imul   ebp,DWORD PTR [rbp+0x65],0x6f69736e
  42a7e8:	outs   dx,BYTE PTR ds:[rsi]
  42a7e9:	sub    BYTE PTR [rdx],ah
  42a7eb:	and    eax,0x3b292273
  42a7f0:	or     al,BYTE PTR [rax]
  42a7f2:	add    BYTE PTR [rax],al
  42a7f4:	add    BYTE PTR [rax],al
  42a7f6:	add    BYTE PTR [rax],al
  42a7f8:	and    eax,0x6d694473
  42a7fd:	outs   dx,BYTE PTR gs:[rsi]
  42a7ff:	jae    0x42a86a
  42a801:	outs   dx,DWORD PTR ds:[rsi]
  42a802:	outs   dx,BYTE PTR ds:[rsi]
  42a803:	and    BYTE PTR [rip+0x69645f73],ah        # 0x69a7077c
  42a809:	ins    DWORD PTR es:[rdi],dx
  42a80a:	and    BYTE PTR [rip+0x66636e20],bh        # 0x66a61630
  42a810:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x44646461
  42a818:	imul   ebp,DWORD PTR [rbp+0x65],0x6f69736e
  42a81f:	outs   dx,BYTE PTR ds:[rsi]
  42a820:	sub    BYTE PTR [rdx],ah
  42a822:	and    eax,0x202c2273
  42a827:	and    eax,0x656c5f73
  42a82c:	outs   dx,BYTE PTR ds:[rsi]
  42a82d:	sub    DWORD PTR [rbx],edi
  42a82f:	or     al,BYTE PTR [rax]
  42a831:	(bad)  
  42a832:	sub    ah,BYTE PTR [rax]
  42a834:	fs imul bp,WORD PTR gs:[rsi+0x65],0x7620
  42a83c:	(bad)  
  42a83d:	jb     0x42a8a8
  42a83f:	(bad)  
  42a840:	(bad)  
  42a841:	ins    BYTE PTR es:[rdi],dx
  42a842:	gs jae 0x42a865
  42a845:	sub    ch,BYTE PTR [rdi]
  42a847:	add    BYTE PTR [rip+0x72724173],ah        # 0x72b4e9c0
  42a84d:	(bad)  
  42a84e:	jns    0x42a89c
  42a850:	imul   esi,DWORD PTR [rbx+0x74],0x5f732520
  42a857:	imul   ebp,DWORD PTR fs:[rbp+0x6c],0x20747369
  42a85f:	cmp    eax,0x77656e20
  42a864:	and    BYTE PTR [rcx+0x72],al
  42a867:	jb     0x42a8ca
  42a869:	jns    0x42a8b7
  42a86b:	imul   esi,DWORD PTR [rbx+0x74],0xa3b2928
  42a872:	add    BYTE PTR [rip+0x5f732573],ah        # 0x5fb5cdeb
  42a878:	imul   ebp,DWORD PTR fs:[rbp+0x6c],0x2e747369
  42a880:	(bad)  
  42a881:	fs sub BYTE PTR fs:[rip+0x69645f73],ah        # 0x69a707fc
  42a889:	ins    DWORD PTR es:[rdi],dx
  42a88a:	sub    DWORD PTR [rbx],edi
  42a88c:	or     al,BYTE PTR [rax]
  42a88e:	add    BYTE PTR [rax],al
  42a890:	and    eax,0x66636e73
  42a895:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x56646461
  42a89d:	(bad)  
  42a89e:	jb     0x42a909
  42a8a0:	(bad)  
  42a8a1:	(bad)  
  42a8a2:	ins    BYTE PTR es:[rdi],dx
  42a8a3:	sub    BYTE PTR gs:[rdx],ah
  42a8a6:	and    eax,0x202c2273
  42a8ab:	rex.R (bad) 
  42a8ad:	je     0x42a910
  42a8af:	push   rsp
  42a8b0:	jns    0x42a922
  42a8b2:	gs cs and eax,0x25202c73
  42a8b9:	jae    0x42a91a
  42a8bb:	imul   ebp,DWORD PTR fs:[rbp+0x6c],0x29747369
  42a8c3:	cmp    ecx,DWORD PTR [rdx]
  42a8c5:	add    BYTE PTR [rax],al
  42a8c7:	add    BYTE PTR [rdi],ch
  42a8c9:	sub    ah,BYTE PTR [rax]
  42a8cb:	(bad)  
  42a8cc:	jae    0x42a941
  42a8ce:	imul   esp,DWORD PTR [rdi+0x6e],0x6f6c6720
  42a8d5:	(bad)
  42a8da:	je     0x42a950
  42a8dc:	jb     0x42a947
  42a8de:	(bad)  
  42a8df:	jne    0x42a955
  42a8e1:	gs jae 0x42a904
  42a8e4:	sub    ch,BYTE PTR [rdi]
  42a8e6:	add    BYTE PTR [rax],al
  42a8e8:	(bad)  
  42a8e9:	sub    ah,BYTE PTR [rax]
  42a8eb:	(bad)  
  42a8ec:	jae    0x42a961
  42a8ee:	imul   esp,DWORD PTR [rdi+0x6e],0x72657020
  42a8f5:	sub    eax,0x69726176
  42a8fa:	(bad)  
  42a8fb:	(bad)  
  42a8fc:	ins    BYTE PTR es:[rdi],dx
  42a8fd:	and    BYTE PTR gs:[rcx+0x74],ah
  42a901:	je     0x42a975
  42a903:	imul   esp,DWORD PTR [rdx+0x75],0x20736574
  42a90a:	sub    ch,BYTE PTR [rdi]
  42a90c:	add    BYTE PTR [rsi+0x63],ch
  42a90f:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x7263
  42a916:	gs (bad) 
  42a918:	je     0x42a97f
  42a91a:	sub    BYTE PTR [rcx],ch
  42a91c:	cmp    eax,DWORD PTR [rax]
  42a91e:	(bad)  
  42a91f:	sub    ah,BYTE PTR [rax]
  42a921:	(bad)  
  42a922:	jae    0x42a997
  42a924:	imul   esp,DWORD PTR [rdi+0x6e],0x72617620
  42a92b:	imul   esp,DWORD PTR [rcx+0x62],0x6420656c
  42a932:	(bad)  
  42a933:	je     0x42a996
  42a935:	and    BYTE PTR [rdx],ch
  42a937:	(bad)  
  42a938:	add    BYTE PTR [rax],al
  42a93a:	add    BYTE PTR [rax],al
  42a93c:	sbb    ebp,edx
  42a93e:	(bad)  
  42a93f:	dec    DWORD PTR [rdi]
  42a941:	(bad)  
  42a942:	(bad)  
  42a943:	inc    DWORD PTR [rbx]
  42a945:	(bad)  
  42a946:	(bad)  
  42a947:	push   rdi
  42a949:	jmp    0xffffffffea2ea94c
  42a94e:	(bad)  
  42a94f:	(bad)  
  42a950:	fucomip st,st(1)
  42a952:	(bad)  
  42a953:	call   rbx
  42a955:	jmp    0xffffffffe835a958
  42a95a:	(bad)  
  42a95b:	push   rdx
  42a95d:	out    0xfe,eax
  42a95f:	push   rdx
  42a961:	out    0xfe,eax
  42a963:	push   rdx
  42a965:	out    0xfe,eax
  42a967:	push   rdx
  42a969:	out    0xfe,eax
  42a96b:	inc    edi
  42a96d:	jmp    0x63b1a970
  42a972:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x6c63
  42a979:	outs   dx,DWORD PTR ds:[rsi]
  42a97a:	jae    0x42a9e1
  42a97c:	sub    BYTE PTR [rcx],ch
  42a97e:	cmp    eax,DWORD PTR [rax]
  42a980:	jge    0x42a982
  42a982:	sub    al,0x20
  42a984:	add    BYTE PTR [rip+0x202a2f73],ah        # 0x206cd8fd
  42a98a:	(bad)  
  42a98b:	je     0x42aa01
  42a98d:	jb     0x42a9f8
  42a98f:	(bad)  
  42a990:	jne    0x42aa06
  42a992:	cmp    ah,BYTE PTR gs:[rax]
  42a995:	and    eax,0x2f2a2073
  42a99a:	or     al,BYTE PTR [rax]
  42a99c:	and    ah,BYTE PTR [rdx]
  42a99e:	add    BYTE PTR [rsi+0x65],ch
  42a9a1:	ja     0x42a9c3
  42a9a3:	and    eax,0x5d5b73
  42a9a8:	and    eax,0x72724173
  42a9ad:	(bad)  
  42a9ae:	jns    0x42a9d0
  42a9b0:	fs (bad) 
  42a9b2:	je     0x42aa15
  42a9b4:	and    BYTE PTR [rip+0x72724120],bh        # 0x72b4eada
  42a9ba:	(bad)  
  42a9bb:	jns    0x42a9eb
  42a9bd:	data16 (bad) 
  42a9bf:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  42a9c3:	jns    0x42a9ed
  42a9c5:	and    eax,0x6c632e73
  42a9ca:	(bad)  
  42a9cb:	jae    0x42aa40
  42a9cd:	sub    al,0x20
  42a9cf:	outs   dx,BYTE PTR ds:[rsi]
  42a9d0:	gs ja  0x42a9f3
  42a9d3:	imul   ebp,DWORD PTR [rsi+0x74],0x257b5d5b
  42a9da:	ins    BYTE PTR es:[rdi],dx
  42a9db:	jne    0x42aa5a
  42a9dd:	sub    al,0x20
  42a9df:	add    BYTE PTR [rcx],ch
  42a9e1:	cmp    eax,DWORD PTR [rax]
  42a9e3:	add    BYTE PTR [rax],al
  42a9e5:	add    BYTE PTR [rax],al
  42a9e7:	add    BYTE PTR [rip+0x66636e73],ah        # 0x66a61860
  42a9ed:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x47646461
  42a9f5:	ins    BYTE PTR es:[rdi],dx
  42a9f6:	outs   dx,DWORD PTR ds:[rsi]
  42a9f7:	(bad)
  42a9fc:	je     0x42aa70
  42a9fe:	imul   esp,DWORD PTR [rdx+0x75],0x22286574
  42aa05:	and    eax,0x642c2273
  42aa0a:	(bad)  
  42aa0b:	je     0x42aa6e
  42aa0d:	sub    DWORD PTR [rbx],edi
  42aa0f:	or     al,BYTE PTR [rax]
  42aa11:	add    BYTE PTR [rax],al
  42aa13:	add    BYTE PTR [rax],al
  42aa15:	add    BYTE PTR [rax],al
  42aa17:	add    BYTE PTR [rip+0x66636e73],ah        # 0x66a61890
  42aa1d:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x56646461
  42aa25:	(bad)  
  42aa26:	jb     0x42aa91
  42aa28:	(bad)  
  42aa29:	(bad)  
  42aa2a:	ins    BYTE PTR es:[rdi],dx
  42aa2b:	gs rex.B je 0x42aaa3
  42aa2f:	jb     0x42aa9a
  42aa31:	(bad)  
  42aa32:	jne    0x42aaa8
  42aa34:	sub    BYTE PTR gs:[rdx],ah
  42aa37:	and    eax,0x222c2273
  42aa3c:	and    eax,0x642c2273
  42aa41:	(bad)  
  42aa42:	je     0x42aaa5
  42aa44:	sub    DWORD PTR [rbx],edi
  42aa46:	or     al,BYTE PTR [rax]
  42aa48:	and    eax,0x66636e73
  42aa4d:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x47646461
  42aa55:	ins    BYTE PTR es:[rdi],dx
  42aa56:	outs   dx,DWORD PTR ds:[rsi]
  42aa57:	(bad)
  42aa5c:	je     0x42aad0
  42aa5e:	imul   esp,DWORD PTR [rdx+0x75],0x22286574
  42aa65:	and    eax,0x252c2273
  42aa6a:	jae    0x42aa95
  42aa6c:	cmp    ecx,DWORD PTR [rdx]
  42aa6e:	add    BYTE PTR [rax],al
  42aa70:	and    eax,0x66636e73
  42aa75:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x56646461
  42aa7d:	(bad)  
  42aa7e:	jb     0x42aae9
  42aa80:	(bad)  
  42aa81:	(bad)  
  42aa82:	ins    BYTE PTR es:[rdi],dx
  42aa83:	gs rex.B je 0x42aafb
  42aa87:	jb     0x42aaf2
  42aa89:	(bad)  
  42aa8a:	jne    0x42ab00
  42aa8c:	sub    BYTE PTR gs:[rdx],ah
  42aa8f:	and    eax,0x222c2273
  42aa94:	and    eax,0x252c2273
  42aa99:	jae    0x42aac4
  42aa9b:	cmp    ecx,DWORD PTR [rdx]
  42aa9d:	add    BYTE PTR [rax],al
  42aa9f:	add    BYTE PTR [rip+0x72724173],ah        # 0x72b4ec18
  42aaa5:	(bad)  
  42aaa6:	jns    0x42aacd
  42aaa8:	jae    0x42aad8
  42aaaa:	xor    BYTE PTR [rax],r12b
  42aaad:	fs (bad) 
  42aaaf:	je     0x42ab12
  42aab1:	and    BYTE PTR [rip+0x77656e20],bh        # 0x77a818d7
  42aab7:	and    BYTE PTR [rcx+0x72],al
  42aaba:	jb     0x42ab1d
  42aabc:	jns    0x42aae3
  42aabe:	jae    0x42aaee
  42aac0:	xor    BYTE PTR [rax],r13b
  42aac3:	sub    DWORD PTR [rbx],edi
  42aac5:	or     al,BYTE PTR [rax]
  42aac7:	and    eax,0x74616473
  42aacc:	(bad)  
  42aacd:	cs jae 0x42ab35
  42aad0:	je     0x42aafa
  42aad2:	sub    BYTE PTR [rbx+0x68],ah
  42aad5:	(bad)  
  42aad6:	jb     0x42ab01
  42aad8:	and    eax,0xa3b2973
  42aadd:	add    BYTE PTR [rip+0x74616473],ah        # 0x74a40f56
  42aae3:	(bad)  
  42aae4:	cs jae 0x42ab4c
  42aae7:	je     0x42ab11
  42aae9:	sub    BYTE PTR [rip+0x73252973],ah        # 0x7367d462
  42aaef:	sub    DWORD PTR [rbx],edi
  42aaf1:	or     al,BYTE PTR [rax]
  42aaf3:	and    eax,0x66636e73
  42aaf8:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x74697277
  42ab00:	sub    BYTE PTR gs:[rdx],ah
  42ab03:	and    eax,0x642c2273
  42ab08:	(bad)  
  42ab09:	je     0x42ab6c
  42ab0b:	sub    DWORD PTR [rbx],edi
  42ab0d:	or     al,BYTE PTR [rax]
  42ab0f:	outs   dx,BYTE PTR ds:[rsi]
  42ab10:	gs ja  0x42ab33
  42ab13:	imul   ebp,DWORD PTR [rsi+0x74],0x7b5d5b
  42ab1a:	and    eax,0x2500756c
  42ab1f:	jae    0x42ab74
  42ab21:	je     0x42ab95
  42ab23:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
  42ab2a:	je     0x42ab91
  42ab2c:	outs   dx,BYTE PTR ds:[rsi]
  42ab2d:	je     0x42aba2
  42ab2f:	and    BYTE PTR [rip+0x73250020],bh        # 0x7367ab55
  42ab35:	and    eax,0x205d5b73
  42ab3a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42ab3d:	je     0x42aba4
  42ab3f:	outs   dx,BYTE PTR ds:[rsi]
  42ab40:	je     0x42abb5
  42ab42:	and    BYTE PTR [rip+0x77656e20],bh        # 0x77a81968
  42ab48:	and    BYTE PTR [rip+0x205d5b73],ah        # 0x20a006c1
  42ab4e:	jnp    0x42ab50
  42ab50:	cmp    eax,DWORD PTR [rax]
  42ab52:	add    BYTE PTR [rax],al
  42ab54:	add    BYTE PTR [rax],al
  42ab56:	add    BYTE PTR [rax],al
  42ab58:	and    eax,0x72724173
  42ab5d:	(bad)  
  42ab5e:	jns    0x42ab85
  42ab60:	jae    0x42ab82
  42ab62:	fs (bad) 
  42ab64:	je     0x42abc7
  42ab66:	and    BYTE PTR [rip+0x77656e20],bh        # 0x77a8198c
  42ab6c:	and    BYTE PTR [rcx+0x72],al
  42ab6f:	jb     0x42abd2
  42ab71:	jns    0x42ab98
  42ab73:	jae    0x42ab9d
  42ab75:	and    eax,0xa3b2973
  42ab7a:	add    BYTE PTR [rax],al
  42ab7c:	add    BYTE PTR [rax],al
  42ab7e:	add    BYTE PTR [rax],al
  42ab80:	rex.WB outs dx,BYTE PTR ds:[rsi]
  42ab82:	fs gs js 0x42abcf
  42ab86:	je     0x42abed
  42ab88:	jb     0x42abeb
  42ab8a:	je     0x42abfb
  42ab8c:	jb     0x42abae
  42ab8e:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x64203d20
  42ab96:	(bad)  
  42ab97:	je     0x42abfa
  42ab99:	cs addr32 gs je 0x42abe7
  42ab9e:	outs   dx,BYTE PTR ds:[rsi]
  42ab9f:	fs gs js 0x42abec
  42aba3:	je     0x42ac0a
  42aba5:	jb     0x42ac08
  42aba7:	je     0x42ac18
  42aba9:	jb     0x42abd3
  42abab:	sub    DWORD PTR [rbx],edi
  42abad:	add    BYTE PTR [rcx+0x6e],ch
  42abb0:	je     0x42abd2
  42abb2:	movsxd ebp,DWORD PTR [rdi+0x75]
  42abb5:	outs   dx,BYTE PTR ds:[rsi]
  42abb6:	je     0x42abd8
  42abb8:	cmp    eax,0x3b3020
  42abbd:	ja     0x42ac27
  42abbf:	imul   ebp,DWORD PTR [rbp+riz*2+0x28],0x72657469
  42abc7:	cs push 0x654e7361
  42abcd:	js     0x42ac43
  42abcf:	sub    BYTE PTR [rcx],ch
  42abd1:	sub    DWORD PTR [rax],eax
  42abd3:	add    BYTE PTR [rax],al
  42abd5:	add    BYTE PTR [rax],al
  42abd7:	add    BYTE PTR [rip+0x65746973],ah        # 0x65b71550
  42abdd:	jb     0x42ac0d
  42abdf:	jae    0x42ac46
  42abe1:	je     0x42ac26
  42abe3:	push   0x654e7261
  42abe8:	js     0x42ac5e
  42abea:	sub    BYTE PTR [rbx+0x6f],ah
  42abed:	outs   dx,BYTE PTR ds:[rsi]
  42abee:	je     0x42ac55
  42abf0:	outs   dx,BYTE PTR ds:[rsi]
  42abf1:	je     0x42ac66
  42abf3:	movsxd ebp,DWORD PTR cs:[rax+0x61]
  42abf7:	jb     0x42ac3a
  42abf9:	je     0x42ac23
  42abfb:	movsxd ebp,DWORD PTR [rdi+0x75]
  42abfe:	outs   dx,BYTE PTR ds:[rsi]
  42abff:	je     0x42ac2c
  42ac01:	sub    ebp,DWORD PTR [rcx]
  42ac03:	sub    DWORD PTR [rbx],edi
  42ac05:	or     al,BYTE PTR [rax]
  42ac07:	add    BYTE PTR [rip+0x65746973],ah        # 0x65b71580
  42ac0d:	jb     0x42ac3d
  42ac0f:	jae    0x42ac76
  42ac11:	je     0x42ac38
  42ac13:	jae    0x42ac63
  42ac15:	gs js  0x42ac8c
  42ac18:	sub    BYTE PTR [rbx+0x6f],ah
  42ac1b:	outs   dx,BYTE PTR ds:[rsi]
  42ac1c:	je     0x42ac83
  42ac1e:	outs   dx,BYTE PTR ds:[rsi]
  42ac1f:	je     0x42ac94
  42ac21:	pop    rbx
  42ac22:	movsxd ebp,DWORD PTR [rdi+0x75]
  42ac25:	outs   dx,BYTE PTR ds:[rsi]
  42ac26:	je     0x42ac53
  42ac28:	sub    ebx,DWORD PTR [rbp+0x29]
  42ac2b:	cmp    ecx,DWORD PTR [rdx]
  42ac2d:	add    BYTE PTR [rip+0x746e6973],ah        # 0x74b115a6
  42ac33:	pop    rbx
  42ac34:	pop    rbp
  42ac35:	and    BYTE PTR [rdi+0x72],ch
  42ac38:	imul   esp,DWORD PTR [rdi+0x69],0x203d206e
  42ac3f:	outs   dx,BYTE PTR ds:[rsi]
  42ac40:	gs ja  0x42ac63
  42ac43:	imul   ebp,DWORD PTR [rsi+0x74],0x7b5d5b
  42ac4a:	jge    0x42ac87
  42ac4c:	or     al,BYTE PTR [rax]
  42ac4e:	add    BYTE PTR [rax],al
  42ac50:	and    eax,0x66636e73
  42ac55:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x74697277
  42ac5d:	sub    BYTE PTR gs:[rdx],ah
  42ac60:	and    eax,0x6f2c2273
  42ac65:	jb     0x42acd0
  42ac67:	imul   ebp,DWORD PTR [esi+0x2c],0x61746164
  42ac6f:	sub    DWORD PTR [rbx],edi
  42ac71:	or     al,BYTE PTR [rax]
  42ac73:	and    eax,0x756c2573
  42ac78:	add    BYTE PTR [rcx+0x6c],ch
  42ac7b:	ins    BYTE PTR es:[rdi],dx
  42ac7c:	gs addr32 (bad) 
  42ac7f:	ins    BYTE PTR es:[rdi],dx
  42ac80:	and    BYTE PTR [rbx+0x79],dh
  42ac83:	ins    DWORD PTR es:[rdi],dx
  42ac84:	(bad)  
  42ac85:	outs   dx,DWORD PTR ds:[rsi]
  42ac86:	ins    BYTE PTR es:[rdi],dx
  42ac87:	and    BYTE PTR [rsi+0x6f],ah
  42ac8a:	jb     0x42acac
  42ac8c:	outs   dx,BYTE PTR gs:[esi]
  42ac8f:	push   0x5f
  42ac91:	ja     0x42ad05
  42ac93:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6e617000
  42ac9b:	imul   esp,DWORD PTR [rbx+0x28],0x6c6c6922
  42aca2:	gs addr32 (bad) 
  42aca5:	ins    BYTE PTR es:[rdi],dx
  42aca6:	and    BYTE PTR [rbx+0x79],dh
  42aca9:	ins    DWORD PTR es:[rdi],dx
  42acaa:	(bad)  
  42acab:	outs   dx,DWORD PTR ds:[rsi]
  42acac:	ins    BYTE PTR es:[rdi],dx
  42acad:	and    BYTE PTR [rsi+0x6f],ah
  42acb0:	jb     0x42acd2
  42acb2:	outs   dx,BYTE PTR gs:[esi]
  42acb5:	push   0x5f
  42acb7:	ja     0x42ad2b
  42acb9:	imul   esi,DWORD PTR [rbp+riz*2+0x22],0xdf000029
  42acc1:	out    dx,eax
  42acc2:	(bad)  
  42acc3:	call   rbx
  42acc5:	out    dx,eax
  42acc6:	(bad)  
  42acc7:	(bad)  
  42acc8:	fucomip st,st(7)
  42acca:	(bad)  
  42accb:	dec    DWORD PTR [rbx-0x11]
  42acce:	(bad)  
  42accf:	push   QWORD PTR [rbx]
  42acd1:	out    dx,eax
  42acd2:	(bad)  
  42acd3:	jmp    QWORD PTR [rdi]
  42acd5:	out    dx,eax
  42acd6:	(bad)  
  42acd7:	(bad)  
  42acd8:	(bad)  
  42acd9:	in     eax,dx
  42acda:	(bad)  
  42acdb:	jmp    QWORD PTR [rax-0x5f000113]
  42ace1:	in     eax,dx
  42ace2:	(bad)  
  42ace3:	jmp    QWORD PTR [rax-0x5f000113]
  42ace9:	in     eax,dx
  42acea:	(bad)  
  42aceb:	jmp    QWORD PTR [rax+0x57fffeed]
  42acf1:	out    dx,eax
  42acf2:	(bad)  
  42acf3:	(bad)  
  42acf4:	fucomip st,st(7)
  42acf6:	(bad)  
  42acf7:	call   QWORD PTR [rdi-0x11]
  42acfa:	(bad)  
  42acfb:	(bad)  
  42acfc:	(bad)  
  42acfd:	out    dx,eax
  42acfe:	(bad)  
  42acff:	push   QWORD PTR [rbp+riz*2+0x78]
  42ad03:	je     0x42ad05
  42ad05:	jae    0x42ad6a
  42ad07:	push   0x75007261
  42ad0c:	(bad)  
  42ad0d:	jns    0x42ad83
  42ad0f:	add    BYTE PTR gs:[rbp+0x73],dh
  42ad13:	push   0x74726f
  42ad18:	jne    0x42ad83
  42ad1a:	outs   dx,BYTE PTR ds:[rsi]
  42ad1b:	je     0x42ad1d
  42ad1d:	ins    BYTE PTR es:[rdi],dx
  42ad1e:	outs   dx,DWORD PTR ds:[rsi]
  42ad1f:	outs   dx,BYTE PTR ds:[rsi]
  42ad20:	ins    BYTE PTR es:[edi],dx
  42ad22:	outs   dx,DWORD PTR ds:[rsi]
  42ad23:	outs   dx,BYTE PTR ds:[rsi]
  42ad24:	add    BYTE PTR [ebp+0x6c],dh
  42ad28:	outs   dx,DWORD PTR ds:[rsi]
  42ad29:	outs   dx,BYTE PTR ds:[rsi]
  42ad2a:	ins    BYTE PTR es:[edi],dx
  42ad2c:	outs   dx,DWORD PTR ds:[rsi]
  42ad2d:	outs   dx,BYTE PTR ds:[rsi]
  42ad2e:	add    BYTE PTR [ebx+0x74],dh
  42ad32:	jb     0x42ad9d
  42ad34:	outs   dx,BYTE PTR ds:[rsi]
  42ad35:	add    BYTE PTR [edi+0x70],ch
  42ad39:	(bad)  
  42ad3a:	jno    0x42adb1
  42ad3c:	add    BYTE PTR gs:[rbp+0x6e],ah
  42ad40:	jne    0x42adaf
  42ad42:	add    BYTE PTR [rsi+0x63],ch
  42ad45:	jae    0x42adbb
  42ad47:	jns    0x42adb9
  42ad49:	cmp    ah,BYTE PTR gs:[rax]
  42ad4c:	(bad)
  42ad51:	jns    0x42adc3
  42ad53:	and    BYTE PTR gs:[rbx+0x6f],ah
  42ad57:	fs cmp ah,BYTE PTR gs:[rax]
  42ad5b:	and    eax,0x64
  42ad60:	add    dl,dh
  42ad62:	(bad)  
  42ad63:	push   rax
  42ad65:	icebp  
  42ad66:	(bad)  
  42ad67:	jmp    QWORD PTR [rax]
  42ad69:	icebp  
  42ad6a:	(bad)  
  42ad6b:	push   QWORD PTR [rip+0x40fffef1]        # 0x4142ac62
  42ad71:	icebp  
  42ad72:	(bad)  
  42ad73:	call   QWORD PTR [rax-0xf]
  42ad76:	(bad)  
  42ad77:	jmp    QWORD PTR [rax-0xf]
  42ad7a:	(bad)  
  42ad7b:	push   QWORD PTR [rax-0xf]
  42ad7e:	(bad)  
  42ad7f:	inc    DWORD PTR [rax-0x6f00010f]
  42ad85:	icebp  
  42ad86:	(bad)  
  42ad87:	jmp    QWORD PTR [rax-0x4f00010f]
  42ad8d:	icebp  
  42ad8e:	(bad)  
  42ad8f:	inc    eax
  42ad91:	icebp  
  42ad92:	(bad)  
  42ad93:	inc    DWORD PTR [rax]
  42ad95:	repnz (bad) 
  42ad97:	call   rax
  42ad99:	icebp  
  42ad9a:	(bad)  
  42ad9b:	jmp    rax
  42ad9d:	icebp  
  42ad9e:	(bad)  
  42ad9f:	jmp    QWORD PTR [rdi]
  42ada1:	pop    rsp
  42ada2:	(bad)  
  42ada3:	(bad)  
  42ada4:	add    BYTE PTR [rdi],ah
  42ada6:	and    eax,0x25002763
  42adab:	push   0x25006468
  42adb0:	push   0x64250064
  42adb5:	add    BYTE PTR [rip+0x6c250066],ah        # 0x6c67ae21
  42adbb:	data16 add BYTE PTR [rip+0x756868],ah        # 0xb8162a
  42adc2:	and    eax,0x25007568
  42adc7:	jne    0x42ae1e
  42adc9:	add    BYTE PTR [rip+0x4c646c6c],ah        # 0x4ca71a3b
  42adcf:	rex.WR add BYTE PTR [rip+0x4c756c6c],r12b        # 0x4cb81a42
  42add6:	rex.WR push rbp
  42add8:	add    BYTE PTR [rsi+0x63],ch
  42addb:	jae    0x42ae51
  42addd:	jns    0x42ae4f
  42addf:	cmp    ah,BYTE PTR gs:[rax]
  42ade2:	(bad)
  42ade7:	jns    0x42ae59
  42ade9:	and    BYTE PTR gs:[rbx+0x6f],ah
  42aded:	fs cmp ah,BYTE PTR gs:[rax]
  42adf1:	and    eax,0x646a0064
  42adf6:	(bad)  
  42adf7:	je     0x42ae5a
  42adf9:	movsxd eax,DWORD PTR cs:[rax]
  42adfc:	add    BYTE PTR [rax],al
  42adfe:	add    BYTE PTR [rax],al
  42ae00:	jo     0x42ae63
  42ae02:	outs   dx,BYTE PTR ds:[rsi]
  42ae03:	imul   esp,DWORD PTR [rbx+0x28],0x73636e22
  42ae0a:	je     0x42ae85
  42ae0c:	jo     0x42ae73
  42ae0e:	cmp    ah,BYTE PTR [rax]
  42ae10:	(bad)
  42ae15:	jns    0x42ae87
  42ae17:	and    BYTE PTR gs:[rbx+0x6f],ah
  42ae1b:	fs cmp ah,BYTE PTR gs:[rax]
  42ae1f:	and    eax,0x632c2264
  42ae24:	outs   dx,DWORD PTR ds:[rsi]
  42ae25:	outs   dx,BYTE PTR ds:[rsi]
  42ae26:	sub    eax,0x74636e3e
  42ae2b:	jns    0x42ae9d
  42ae2d:	sub    DWORD PTR gs:[rax],eax
  42ae30:	loopne 0x42ae25
  42ae32:	(bad)  
  42ae33:	inc    DWORD PTR [rax-0x5e00010e]
  42ae39:	repnz (bad) 
  42ae3b:	inc    ecx
  42ae3d:	repnz (bad) 
  42ae3f:	jmp    rax
  42ae41:	repnz (bad) 
  42ae43:	push   rbp
  42ae45:	repnz (bad) 
  42ae47:	jmp    QWORD PTR [rax]
  42ae49:	repz (bad) 
  42ae4b:	inc    DWORD PTR [rdx-0xd]
  42ae4e:	(bad)  
  42ae4f:	jmp    QWORD PTR [rax-0xd]
  42ae52:	(bad)  
  42ae53:	inc    DWORD PTR [rax-0x5f00010d]
  42ae59:	repz (bad) 
  42ae5b:	inc    eax
  42ae5d:	repz (bad) 
  42ae5f:	call   QWORD PTR [rax]
  42ae61:	repnz (bad) 
  42ae63:	jmp    FWORD PTR [rax+riz*1]
  42ae66:	add    BYTE PTR [rax],ah
	...
  42ae80:	add    dh,bh
  42ae82:	(bad)  
  42ae83:	push   rax
  42ae85:	std    
  42ae86:	(bad)  
  42ae87:	jmp    rax
  42ae89:	std    
  42ae8a:	(bad)  
  42ae8b:	call   rdx
  42ae8d:	std    
  42ae8e:	(bad)  
  42ae8f:	inc    DWORD PTR [rax]
  42ae91:	std    
  42ae92:	(bad)  
  42ae93:	call   QWORD PTR [rax]
  42ae95:	(bad)  
  42ae96:	(bad)  
  42ae97:	dec    DWORD PTR [rax+0x2]
  42ae9a:	(bad)  
  42ae9b:	(bad)  
  42ae9c:	cmp    BYTE PTR [rdx],al
  42ae9e:	(bad)  
  42ae9f:	jmp    FWORD PTR [rax]
  42aea1:	add    bh,bh
  42aea3:	call   FWORD PTR [rip+0x28ffff02]        # 0x2942adab
  42aea9:	add    edi,edi
  42aeab:	call   FWORD PTR [rax+0x2]
  42aeae:	(bad)  
  42aeaf:	inc    DWORD PTR [rax]
  42aeb1:	add    al,al
  42aeb3:	loopne 0x42aea5
  42aeb5:	clc    
  42aeb6:	cld    
	...
  42aec3:	add    BYTE PTR [rax-0x7fffffd0],al
  42aec9:	and    BYTE PTR [rsi],cl
  42aecb:	add    BYTE PTR [rax-0x7ffc37e0],al
  42aed1:	and    BYTE PTR [rax],cl
  42aed3:	cli    
  42aed4:	and    BYTE PTR [rax],0x8
  42aed7:	(bad)  
	...
  42afc0:	add    DWORD PTR [rcx],eax
  42afc2:	add    DWORD PTR [rcx],eax
  42afc4:	add    DWORD PTR [rcx],eax
  42afc6:	add    DWORD PTR [rcx],eax
  42afc8:	add    DWORD PTR [rcx],eax
  42afca:	add    DWORD PTR [rcx],eax
  42afcc:	add    DWORD PTR [rcx],eax
  42afce:	add    DWORD PTR [rcx],eax
  42afd0:	add    DWORD PTR [rcx],eax
  42afd2:	add    DWORD PTR [rcx],eax
  42afd4:	add    DWORD PTR [rcx],eax
  42afd6:	add    DWORD PTR [rcx],eax
  42afd8:	add    DWORD PTR [rcx],eax
  42afda:	add    DWORD PTR [rcx],eax
  42afdc:	add    DWORD PTR [rcx],eax
  42afde:	add    DWORD PTR [rcx],eax
  42afe0:	add    al,BYTE PTR [rdx]
  42afe2:	add    al,BYTE PTR [rdx]
  42afe4:	add    al,BYTE PTR [rdx]
  42afe6:	add    al,BYTE PTR [rdx]
  42afe8:	add    al,BYTE PTR [rdx]
  42afea:	add    al,BYTE PTR [rdx]
  42afec:	add    al,BYTE PTR [rdx]
  42afee:	add    al,BYTE PTR [rdx]
  42aff0:	add    eax,DWORD PTR [rbx]
  42aff2:	add    eax,DWORD PTR [rbx]
  42aff4:	add    eax,DWORD PTR [rbx]
  42aff6:	add    eax,DWORD PTR [rbx]
  42aff8:	add    al,0x4
  42affa:	add    al,0x4
  42affc:	add    eax,0xc0050505
  42b001:	xor    DWORD PTR [rbx+0x0],eax
  42b004:	add    BYTE PTR [rax],al
  42b006:	add    BYTE PTR [rax],al
  42b008:	shr    BYTE PTR [rbx+rax*2],0x0
  42b00c:	add    BYTE PTR [rax],al
  42b00e:	add    BYTE PTR [rax],al
  42b010:	xor    BYTE PTR [rsi+0x41],0x0
	...
  42b01f:	add    BYTE PTR [rcx+0x72],al
  42b022:	addr32 jne 0x42b092
  42b025:	outs   dx,BYTE PTR gs:[rsi]
  42b027:	je     0x42b049
  42b029:	outs   dx,DWORD PTR fs:[rsi]
  42b02b:	ins    DWORD PTR es:[rdi],dx
  42b02c:	(bad)  
  42b02d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  42b034:	jb     0x42b056
  42b036:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  42b03a:	rex.B
  42b03b:	rex.WB
  42b03c:	rex.WRX sub QWORD PTR [rax],r8
  42b03f:	rex.B jb 0x42b0a9
  42b042:	jne    0x42b0b1
  42b044:	outs   dx,BYTE PTR gs:[rsi]
  42b046:	je     0x42b068
  42b048:	jae    0x42b0b3
  42b04a:	outs   dx,BYTE PTR ds:[rsi]
  42b04b:	addr32 jne 0x42b0ba
  42b04e:	(bad)  
  42b04f:	jb     0x42b0ba
  42b051:	je     0x42b0cc
  42b053:	and    BYTE PTR [rax],ch
  42b055:	push   rbx
  42b056:	rex.WB
  42b057:	rex.RXB
  42b058:	rex.WRX sub QWORD PTR [rax],r8
  42b05b:	add    BYTE PTR [rax],al
  42b05d:	add    BYTE PTR [rax],al
  42b05f:	add    BYTE PTR [rdi+0x76],cl
  42b062:	gs jb  0x42b0cb
  42b065:	ins    BYTE PTR es:[rdi],dx
  42b066:	outs   dx,DWORD PTR ds:[rsi]
  42b067:	ja     0x42b089
  42b069:	jb     0x42b0cc
  42b06b:	outs   dx,BYTE PTR ds:[rsi]
  42b06c:	and    BYTE PTR gs:[ebp+0x72],ah
  42b071:	jb     0x42b0e2
  42b073:	jb     0x42b095
  42b075:	sub    BYTE PTR [rdi+0x56],cl
  42b078:	rex.RB push r10
  42b07a:	rex.RX
  42b07b:	rex.WR
  42b07c:	rex.WRXB push r15
  42b07e:	sub    DWORD PTR [rax],eax
  42b080:	push   rax
  42b081:	(bad)  
  42b082:	jb     0x42b0f8
  42b084:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  42b08b:	jae    0x42b0ad
  42b08d:	outs   dx,DWORD PTR ds:[rsi]
  42b08e:	data16 and BYTE PTR [rbx+0x69],dh
  42b092:	outs   dx,BYTE PTR ds:[esi]
  42b094:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  42b09b:	and    BYTE PTR gs:[rax],ch
  42b09e:	push   rax
  42b09f:	rex.WR
  42b0a0:	rex.WRXB push r11
  42b0a2:	push   rbx
  42b0a3:	sub    DWORD PTR [rax],eax
  42b0a5:	add    BYTE PTR [rax],al
  42b0a7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  42b0ab:	(bad)  
  42b0ac:	ins    BYTE PTR es:[rdi],dx
  42b0ad:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  42b0b1:	jae    0x42b0d3
  42b0b3:	outs   dx,DWORD PTR ds:[rsi]
  42b0b4:	data16 and BYTE PTR [rbx+0x69],dh
  42b0b8:	outs   dx,BYTE PTR ds:[esi]
  42b0ba:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  42b0c1:	and    BYTE PTR gs:[rax],ch
  42b0c4:	push   rsp
  42b0c5:	rex.WR
  42b0c6:	rex.WRXB push r11
  42b0c8:	push   rbx
  42b0c9:	sub    DWORD PTR [rax],eax
  42b0cb:	add    BYTE PTR [rax],al
  42b0cd:	add    BYTE PTR [rax],al
  42b0cf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42b0d3:	and    BYTE PTR [rdx+0x65],dh
  42b0d6:	jae    0x42b14d
  42b0d8:	ins    BYTE PTR es:[rdi],dx
  42b0d9:	je     0x42b0fb
  42b0db:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  42b0e2:	jae    0x42b151
  42b0e4:	(bad)  
  42b0e5:	ins    BYTE PTR es:[rdi],dx
  42b0e6:	ins    BYTE PTR es:[rdi],dx
  42b0e7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42b0eb:	(bad)  
  42b0ec:	and    BYTE PTR gs:[rdx+0x65],dh
  42b0f0:	jo     0x42b164
  42b0f2:	gs jae 0x42b15a
  42b0f5:	outs   dx,BYTE PTR ds:[rsi]
  42b0f6:	je     0x42b15d
  42b0f8:	and    BYTE PTR fs:[rax],ch
  42b0fb:	push   rbp
  42b0fc:	rex.WRX
  42b0fd:	rex.R
  42b0fe:	rex.RB push r10
  42b100:	rex.RX
  42b101:	rex.WR
  42b102:	rex.WRXB push r15
  42b104:	sub    DWORD PTR [rax],eax
  42b106:	push   rbp
  42b107:	outs   dx,BYTE PTR ds:[rsi]
  42b108:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42b10c:	outs   dx,BYTE PTR ds:[rsi]
  42b10d:	and    BYTE PTR [rbp+0x72],ah
  42b110:	jb     0x42b181
  42b112:	jb     0x42b114
  42b114:	add    BYTE PTR [rax],al
  42b116:	add    BYTE PTR [rax],al
  42b118:	pop    rdi
  42b119:	ins    DWORD PTR es:[rdi],dx
  42b11a:	(bad)  
  42b11b:	je     0x42b185
  42b11d:	gs jb  0x42b192
  42b120:	sub    BYTE PTR [rcx],ch
  42b122:	cmp    ah,BYTE PTR [rax]
  42b124:	and    eax,0x6e692073
  42b129:	and    BYTE PTR [rip+0x67252873],ah        # 0x6767d9a2
  42b12f:	sub    al,0x20
  42b131:	and    eax,0x20202967
  42b136:	sub    BYTE PTR [rdx+0x65],dh
  42b139:	je     0x42b1b1
  42b13b:	(bad)  
  42b13c:	ins    BYTE PTR es:[rdi],dx
  42b13d:	cmp    eax,0xa296725
  42b142:	add    BYTE PTR [rax],al
  42b144:	or     al,0x7
  42b146:	(bad)  
  42b147:	dec    DWORD PTR [rbp+0x6]
  42b14a:	(bad)  
  42b14b:	(bad)  
  42b14c:	mov    esp,0xccffff06
  42b151:	(bad)  
  42b152:	(bad)  
  42b153:	(bad)  
  42b154:	fadd   QWORD PTR [rsi]
  42b156:	(bad)  
  42b157:	(bad)  
  42b158:	in     al,dx
  42b159:	(bad)  
  42b15a:	(bad)  
  42b15b:	(bad)  
  42b15c:	cld    
  42b15d:	(bad)  
  42b15e:	(bad)  
  42b15f:	dec    DWORD PTR [rbp+0x69]
  42b162:	outs   dx,BYTE PTR ds:[rsi]
  42b163:	addr32 ja 0x42b193
  42b166:	ja     0x42b19e
  42b168:	xor    al,0x20
  42b16a:	jb     0x42b1e1
  42b16c:	outs   dx,BYTE PTR ds:[rsi]
  42b16d:	je     0x42b1d8
  42b16f:	ins    DWORD PTR es:[rdi],dx
  42b170:	and    BYTE PTR gs:[rsi+0x61],ah
  42b174:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  42b17c:	add    BYTE PTR [rax],al
  42b17e:	add    BYTE PTR [rax],al
  42b180:	rex.B
  42b181:	fs fs jb 0x42b1ea
  42b185:	jae    0x42b1fa
  42b187:	and    BYTE PTR [rip+0x61682070],ah        # 0x61aad1fd
  42b18d:	jae    0x42b1af
  42b18f:	outs   dx,BYTE PTR ds:[rsi]
  42b190:	outs   dx,DWORD PTR ds:[rsi]
  42b191:	and    BYTE PTR [rcx+0x6d],ch
  42b194:	(bad)  
  42b195:	addr32 gs sub eax,0x74636573
  42b19c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  42b1a3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  42b1aa:	jne    0x42b211
  42b1ac:	jb     0x42b227
  42b1ae:	and    BYTE PTR [rsi+0x61],ah
  42b1b1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  42b1b9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a4d223
  42b1bf:	je     0x42b226
  42b1c1:	jae    0x42b1e3
  42b1c3:	(bad)  
  42b1c4:	je     0x42b1e6
  42b1c6:	(bad)  
  42b1c7:	fs fs jb 0x42b230
  42b1cb:	jae    0x42b240
  42b1cd:	and    BYTE PTR [rip+0x70],ah        # 0x42b243
  42b1d3:	add    BYTE PTR [rax],al
  42b1d5:	add    BYTE PTR [rax],al
  42b1d7:	add    BYTE PTR [rax],ah
  42b1d9:	and    BYTE PTR [rsi+0x69],dl
  42b1dc:	jb     0x42b252
  42b1de:	jne    0x42b241
  42b1e0:	ins    BYTE PTR es:[rdi],dx
  42b1e1:	push   rax
  42b1e2:	jb     0x42b253
  42b1e4:	je     0x42b24b
  42b1e6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  42b1ea:	(bad)  
  42b1eb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  42b1f3:	push   0x646f6320
  42b1f8:	and    BYTE PTR gs:[rax],dh
  42b1fb:	js     0x42b222
  42b1fd:	js     0x42b1ff
  42b1ff:	add    BYTE PTR [rax],ah
  42b201:	and    BYTE PTR [rbp+0x6e],dl
  42b204:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42b208:	outs   dx,BYTE PTR ds:[rsi]
  42b209:	and    BYTE PTR [rax+0x73],dh
  42b20c:	gs jne 0x42b273
  42b20f:	outs   dx,DWORD PTR ds:[rsi]
  42b210:	and    BYTE PTR [rdx+0x65],dh
  42b213:	ins    BYTE PTR es:[rdi],dx
  42b214:	outs   dx,DWORD PTR ds:[rsi]
  42b215:	movsxd esp,DWORD PTR [rcx+0x74]
  42b218:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  42b21f:	je     0x42b290
  42b221:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42b224:	and    BYTE PTR [rsi+0x65],dh
  42b227:	jb     0x42b29c
  42b229:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  42b230:	or     al,BYTE PTR [rax]
  42b232:	add    BYTE PTR [rax],al
  42b234:	add    BYTE PTR [rax],al
  42b236:	add    BYTE PTR [rax],al
  42b238:	and    BYTE PTR [rax],ah
  42b23a:	push   rbp
  42b23b:	outs   dx,BYTE PTR ds:[rsi]
  42b23c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42b240:	outs   dx,BYTE PTR ds:[rsi]
  42b241:	and    BYTE PTR [rax+0x73],dh
  42b244:	gs jne 0x42b2ab
  42b247:	outs   dx,DWORD PTR ds:[rsi]
  42b248:	and    BYTE PTR [rdx+0x65],dh
  42b24b:	ins    BYTE PTR es:[rdi],dx
  42b24c:	outs   dx,DWORD PTR ds:[rsi]
  42b24d:	movsxd esp,DWORD PTR [rcx+0x74]
  42b250:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  42b257:	and    BYTE PTR [rbx+0x69],dh
  42b25a:	jp     0x42b2c1
  42b25c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4ce0c6
	...
  42b26e:	add    BYTE PTR [rax],al
  42b270:	cs jo  0x42b2d7
  42b273:	(bad)  
  42b274:	je     0x42b2d7
	...
  42b27e:	add    BYTE PTR [rax],al
  42b280:	and    eax,0x203a73
  42b285:	push   rax
  42b286:	rex.WRXB push r11
  42b288:	rex.WB pop r8
  42b28a:	rex.WR pop rcx
  42b28c:	pop    rdi
  42b28d:	rex.XB
  42b28e:	rex.WRXB push r10
  42b290:	push   rdx
  42b291:	rex.RB
  42b292:	rex.XB push r12
	...
  42b2a0:	jne    0x42b310
  42b2a2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42b2a6:	outs   dx,BYTE PTR ds:[rsi]
  42b2a7:	and    BYTE PTR [rdi+0x70],ch
  42b2aa:	je     0x42b315
  42b2ac:	outs   dx,DWORD PTR ds:[rsi]
  42b2ad:	outs   dx,BYTE PTR ds:[rsi]
  42b2ae:	and    BYTE PTR [rip+0x7325202d],ch        # 0x7367d2e1
	...
  42b2c0:	jne    0x42b330
  42b2c2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42b2c6:	outs   dx,BYTE PTR ds:[rsi]
  42b2c7:	and    BYTE PTR [rdi+0x70],ch
  42b2ca:	je     0x42b335
  42b2cc:	outs   dx,DWORD PTR ds:[rsi]
  42b2cd:	outs   dx,BYTE PTR ds:[rsi]
  42b2ce:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6367d301
	...
  42b2e0:	outs   dx,DWORD PTR ds:[rsi]
  42b2e1:	jo     0x42b357
  42b2e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  42b2ea:	jae    0x42b35a
  42b2ec:	(bad)  
  42b2ed:	je     0x42b30f
  42b2ef:	je     0x42b352
  42b2f1:	imul   esp,DWORD PTR [rbp+0x20],0x61
  42b2f5:	outs   dx,BYTE PTR ds:[rsi]
  42b2f6:	and    BYTE PTR [rcx+0x72],ah
  42b2f9:	addr32 jne 0x42b369
  42b2fc:	outs   dx,BYTE PTR gs:[rsi]
  42b2fe:	je     0x42b320
  42b300:	sub    eax,0x2e25202d
  42b305:	sub    dh,BYTE PTR [rbx+0x0]
	...
  42b310:	(bad)  
  42b311:	ins    DWORD PTR es:[rdi],dx
  42b312:	(bad)  
  42b313:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  42b31a:	outs   dx,DWORD PTR ds:[rsi]
  42b31b:	jo     0x42b391
  42b31d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  42b324:	and    eax,0x732a2e
	...
  42b33d:	add    BYTE PTR [rax],al
  42b33f:	add    BYTE PTR [rdi+0x70],ch
  42b342:	je     0x42b3ad
  42b344:	outs   dx,DWORD PTR ds:[rsi]
  42b345:	outs   dx,BYTE PTR ds:[rsi]
  42b346:	and    BYTE PTR [rdx+0x65],dh
  42b349:	jno    0x42b3c0
  42b34b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  42b352:	and    BYTE PTR [rcx+0x72],ah
  42b355:	addr32 jne 0x42b3c5
  42b358:	outs   dx,BYTE PTR gs:[rsi]
  42b35a:	je     0x42b37c
  42b35c:	sub    eax,0x7325202d
	...
  42b37d:	add    BYTE PTR [rax],al
  42b37f:	add    BYTE PTR [rdi+0x70],ch
  42b382:	je     0x42b3ed
  42b384:	outs   dx,DWORD PTR ds:[rsi]
  42b385:	outs   dx,BYTE PTR ds:[rsi]
  42b386:	and    BYTE PTR [rdx+0x65],dh
  42b389:	jno    0x42b400
  42b38b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  42b392:	and    BYTE PTR [rcx+0x72],ah
  42b395:	addr32 jne 0x42b405
  42b398:	outs   dx,BYTE PTR gs:[rsi]
  42b39a:	je     0x42b3bc
  42b39c:	sub    eax,0x6325202d
	...
  42b3bd:	add    BYTE PTR [rax],al
  42b3bf:	add    BYTE PTR [rax+rax*1],bh
  42b3c2:	jne    0x42b3c4
  42b3c4:	outs   dx,BYTE PTR ds:[rsi]
  42b3c5:	add    BYTE PTR [rbx+0x0],ch
  42b3c8:	outs   dx,BYTE PTR ds:[rsi]
  42b3c9:	add    BYTE PTR [rdi+0x0],ch
  42b3cc:	ja     0x42b3ce
  42b3ce:	outs   dx,BYTE PTR ds:[rsi]
  42b3cf:	add    BYTE PTR [rsi],bh
  42b3d1:	add    BYTE PTR [rax],al
  42b3d3:	add    BYTE PTR [rdi],bh
  42b3d5:	add    BYTE PTR [rax],al
  42b3d7:	add    BYTE PTR [rcx+0x0],al
  42b3da:	jae    0x42b3dc
  42b3dc:	jae    0x42b3de
  42b3de:	add    BYTE PTR gs:[rdx+0x0],dh
  42b3e2:	je     0x42b3e4
  42b3e4:	imul   eax,DWORD PTR [rax],0x6e006f
  42b3ea:	and    BYTE PTR [rax],al
  42b3ec:	data16 add BYTE PTR [rcx+0x0],ah
  42b3f0:	imul   eax,DWORD PTR [rax],0x65006c
  42b3f6:	add    BYTE PTR fs:[rcx],ah
  42b3f9:	add    BYTE PTR [rdx],cl
  42b3fb:	add    BYTE PTR [rdx],cl
  42b3fd:	add    BYTE PTR [rax+0x0],dl
  42b400:	jb     0x42b402
  42b402:	outs   dx,DWORD PTR ds:[rsi]
  42b403:	add    BYTE PTR [rdi+0x0],ah
  42b406:	jb     0x42b408
  42b408:	(bad)  
  42b409:	add    BYTE PTR [rbp+0x0],ch
  42b40c:	cmp    al,BYTE PTR [rax]
  42b40e:	and    BYTE PTR [rax],al
  42b410:	and    eax,0x73007700
  42b415:	add    BYTE PTR [rdx],cl
  42b417:	add    BYTE PTR [rsi+0x0],al
  42b41a:	imul   eax,DWORD PTR [rax],0x65006c
  42b420:	cmp    al,BYTE PTR [rax]
  42b422:	and    BYTE PTR [rax],al
  42b424:	and    eax,0x73007700
  42b429:	add    BYTE PTR [rax+rax*1],ch
  42b42c:	and    BYTE PTR [rax],al
  42b42e:	rex.WR add BYTE PTR [rcx+0x0],r13b
  42b432:	outs   dx,BYTE PTR ds:[rsi]
  42b433:	add    BYTE PTR [rbp+0x0],ah
  42b436:	and    BYTE PTR [rax],al
  42b438:	and    eax,0xa007500
  42b43d:	add    BYTE PTR [rdx],cl
  42b43f:	add    BYTE PTR [rbp+0x0],al
  42b442:	js     0x42b444
  42b444:	jo     0x42b446
  42b446:	jb     0x42b448
  42b448:	add    BYTE PTR gs:[rbx+0x0],dh
  42b44c:	jae    0x42b44e
  42b44e:	imul   eax,DWORD PTR [rax],0x6e006f
  42b454:	cmp    al,BYTE PTR [rax]
  42b456:	and    BYTE PTR [rax],al
  42b458:	and    eax,0x73007700
  42b45d:	add    BYTE PTR [rax],al
  42b45f:	add    BYTE PTR [rip+0x73007700],ah        # 0x73432b65
  42b465:	add    BYTE PTR [rdx],cl
	...
  42b46f:	add    BYTE PTR [rbp+0x0],cl
  42b472:	imul   eax,DWORD PTR [rax],0x47006e
  42b478:	push   rdi
  42b479:	add    BYTE PTR [rax],ah
  42b47b:	add    BYTE PTR [rdx+0x0],dl
  42b47e:	jne    0x42b480
  42b480:	outs   dx,BYTE PTR ds:[rsi]
  42b481:	add    BYTE PTR [rax+rax*1+0x69],dh
  42b485:	add    BYTE PTR [rbp+0x0],ch
  42b488:	add    BYTE PTR gs:[rax],ah
  42b48b:	add    BYTE PTR [rcx+0x0],al
  42b48e:	jae    0x42b490
  42b490:	jae    0x42b492
  42b492:	add    BYTE PTR gs:[rdx+0x0],dh
  42b496:	je     0x42b498
  42b498:	imul   eax,DWORD PTR [rax],0x6e006f
  42b49e:	add    BYTE PTR [rax],al
  42b4a0:	xor    cl,bh
  42b4a2:	add    BYTE PTR [r8],al
	...
  42b4ad:	add    BYTE PTR [rax],al
  42b4af:	add    BYTE PTR [rax-0x7],dh
  42b4b2:	add    BYTE PTR [r8],al
	...
  42b4bd:	add    BYTE PTR [rax],al
  42b4bf:	add    BYTE PTR [rax-0x19],dl
  42b4c2:	add    BYTE PTR [r8],al
	...
  42b4cd:	add    BYTE PTR [rax],al
  42b4cf:	add    BYTE PTR [rax+0x42c0],ah
	...
  42b4dd:	add    BYTE PTR [rax],al
  42b4df:	add    BYTE PTR [rax+0x42c0],ah
	...
  42b4ed:	add    BYTE PTR [rax],al
  42b4ef:	add    BYTE PTR [rax],dl
  42b4f1:	mov    al,0x42
	...
  42b4ff:	add    BYTE PTR [rax],al
  42b501:	add    BYTE PTR [rax+0x0],al
	...
  42b510:	mov    eax,0x4346
	...
  42b51d:	add    BYTE PTR [rax],al
  42b51f:	add    al,dl
  42b521:	rex.RX
  42b522:	rex.XB add BYTE PTR [r8],al
	...
  42b52d:	add    BYTE PTR [rax],al
  42b52f:	add    al,bh
  42b531:	rex.RX
  42b532:	rex.XB add BYTE PTR [r8],al
	...
  42b53d:	add    BYTE PTR [rax],al
  42b53f:	add    BYTE PTR [rax],ah
  42b541:	rex.RXB
  42b542:	rex.XB add BYTE PTR [r8],al
	...
  42b54d:	add    BYTE PTR [rax],al
  42b54f:	add    BYTE PTR [rax],bh
  42b551:	rex.RXB
  42b552:	rex.XB add BYTE PTR [r8],al
	...
  42b561:	xor    eax,DWORD PTR [rbx+0x0]
	...
  42b570:	cmp    BYTE PTR [rcx],0x43
	...
  42b57f:	add    BYTE PTR [rax+0x39],bh
  42b582:	rex.XB add BYTE PTR [r8],al
	...
  42b58d:	add    BYTE PTR [rax],al
  42b58f:	add    BYTE PTR [rax+0x39],ch
  42b592:	rex.XB add BYTE PTR [r8],al
	...
  42b59d:	add    BYTE PTR [rax],al
  42b59f:	add    BYTE PTR [rax+0x39],dh
  42b5a2:	rex.XB add BYTE PTR [r8],al
	...
  42b5b1:	(bad)  
  42b5b2:	rex.XB add BYTE PTR [r8],al
	...
  42b5bd:	add    BYTE PTR [rax],al
  42b5bf:	add    BYTE PTR [rax],dl
  42b5c1:	(bad)  
  42b5c2:	rex.XB add BYTE PTR [r8],al
	...
  42b5cd:	add    BYTE PTR [rax],al
  42b5cf:	add    BYTE PTR [rax],bl
  42b5d1:	(bad)  
  42b5d2:	rex.XB add BYTE PTR [r8],al
	...
  42b5dd:	add    BYTE PTR [rax],al
  42b5df:	add    BYTE PTR [rax],dh
  42b5e1:	(bad)  
  42b5e2:	rex.XB add BYTE PTR [r8],al
	...
  42b5ed:	add    BYTE PTR [rax],al
  42b5ef:	add    BYTE PTR [rax+0x432c],al
	...
  42b5fd:	add    BYTE PTR [rax],al
  42b5ff:	add    al,dl
  42b601:	xor    al,BYTE PTR [rbx+0x0]
	...
  42b610:	adc    al,al
  42b612:	add    BYTE PTR [r8],al
	...
  42b61d:	add    BYTE PTR [rax],al
  42b61f:	add    BYTE PTR [rax-0x49],ah
  42b622:	add    BYTE PTR [r8],al
	...
  42b62d:	add    BYTE PTR [rax],al
  42b62f:	add    BYTE PTR [rax+0x4332],al
	...
  42b63d:	add    BYTE PTR [rax],al
  42b63f:	add    BYTE PTR [rax+0x38],bh
  42b642:	rex.XB add BYTE PTR [r8],al
	...
  42b64d:	add    BYTE PTR [rax],al
  42b64f:	add    al,al
  42b651:	repnz add BYTE PTR [r8],al
	...
  42b661:	repnz add BYTE PTR [r8],al
	...
  42b66d:	add    BYTE PTR [rax],al
  42b66f:	add    BYTE PTR [rax-0xe],al
  42b672:	add    BYTE PTR [r8],al
	...
  42b67d:	add    BYTE PTR [rax],al
  42b67f:	add    BYTE PTR [rax+0x36],bh
  42b682:	rex.XB add BYTE PTR [r8],al
	...
  42b68d:	add    BYTE PTR [rax],al
  42b68f:	add    BYTE PTR [rsi+rsi*1+0x43],al
	...
  42b69e:	add    BYTE PTR [rax],al
  42b6a0:	(bad)  
  42b6a1:	(bad)  
  42b6a2:	rex.XB add BYTE PTR [r8],al
	...
  42b6ad:	add    BYTE PTR [rax],al
  42b6af:	add    BYTE PTR [rax+0x4336],bl
	...
  42b6bd:	add    BYTE PTR [rax],al
  42b6bf:	add    BYTE PTR [rax+0x4311],dl
	...
  42b6cd:	add    BYTE PTR [rax],al
  42b6cf:	add    al,al
  42b6d1:	cmp    BYTE PTR [rbx+0x0],al
	...
  42b6e0:	movabs al,ds:0x4336
  42b6e9:	add    BYTE PTR [rax],al
  42b6eb:	add    BYTE PTR [rax],al
  42b6ed:	add    BYTE PTR [rax],al
  42b6ef:	add    BYTE PTR [rax+0x37],ch
  42b6f2:	rex.XB add BYTE PTR [r8],al
	...
  42b701:	clc    
  42b702:	add    BYTE PTR [r8],al
	...
  42b70d:	add    BYTE PTR [rax],al
  42b70f:	add    BYTE PTR [rax+0x37],al
  42b712:	rex.XB add BYTE PTR [r8],al
	...
  42b71d:	add    BYTE PTR [rax],al
  42b71f:	add    BYTE PTR [rsi+rsi*1+0x43],cl
	...
  42b72e:	add    BYTE PTR [rax],al
  42b730:	nop
  42b731:	rex.XB add BYTE PTR ss:[r8],al
	...
  42b73d:	add    BYTE PTR [rax],al
  42b73f:	add    BYTE PTR [rax+0x4338],al
	...
  42b74d:	add    BYTE PTR [rax],al
  42b74f:	add    BYTE PTR [rax+0x4338],bh
	...
  42b75d:	add    BYTE PTR [rax],al
  42b75f:	add    BYTE PTR [rsi+rsi*1+0x43],dh
	...
  42b76f:	add    BYTE PTR [rax+0x41f8],al
	...
  42b77d:	add    BYTE PTR [rax],al
  42b77f:	add    BYTE PTR [rax+0x4336],al
	...
  42b791:	icebp  
  42b792:	add    BYTE PTR [r8],al
	...
  42b79d:	add    BYTE PTR [rax],al
  42b79f:	add    al,ch
  42b7a1:	cmp    BYTE PTR [rbx+0x0],al
	...
  42b7b0:	test   al,0x36
  42b7b2:	rex.XB add BYTE PTR [r8],al
	...
  42b7bd:	add    BYTE PTR [rax],al
  42b7bf:	add    BYTE PTR [rax+0x4332],dh
	...
  42b7cd:	add    BYTE PTR [rax],al
  42b7cf:	add    BYTE PTR [rax+0x432c],dl
	...
  42b7dd:	add    BYTE PTR [rax],al
  42b7df:	add    BYTE PTR [rax+0x4332],bl
	...
  42b7ed:	add    BYTE PTR [rax],al
  42b7ef:	add    BYTE PTR [rdx+rsi*1+0x43],dl
	...
  42b7fe:	add    BYTE PTR [rax],al
  42b800:	nop
  42b801:	xor    al,BYTE PTR [rbx+0x0]
	...
  42b810:	in     al,dx
  42b811:	cmp    BYTE PTR [rbx+0x0],al
	...
  42b820:	nop
  42b821:	and    al,0x43
	...
  42b82f:	add    BYTE PTR [rax+0x4336],bh
	...
  42b83d:	add    BYTE PTR [rax],al
  42b83f:	add    BYTE PTR [rax+0x36],ah
  42b842:	rex.XB add BYTE PTR [r8],al
	...
  42b84d:	add    BYTE PTR [rax],al
  42b84f:	add    BYTE PTR [rax+0x4336],cl
	...
  42b85d:	add    BYTE PTR [rax],al
  42b85f:	add    al,ah
  42b861:	rex.XB add BYTE PTR ss:[r8],al
	...
  42b86d:	add    BYTE PTR [rax],al
  42b86f:	add    BYTE PTR [rax+0x4339],dh
	...
  42b87d:	add    BYTE PTR [rax],al
  42b87f:	add    BYTE PTR [rax-0x7],ah
  42b882:	add    BYTE PTR [r8],al
	...
  42b88d:	add    BYTE PTR [rax],al
  42b88f:	add    BYTE PTR [rcx+rdi*8+0x41],bl
	...
  42b89f:	add    BYTE PTR [rax],al
  42b8a1:	cmp    DWORD PTR [rbx+0x0],eax
	...
  42b8b0:	push   rax
  42b8b1:	rex.XB add BYTE PTR ss:[r8],al
	...
  42b8bd:	add    BYTE PTR [rax],al
  42b8bf:	add    al,ah
  42b8c1:	cmp    BYTE PTR [rbx+0x0],al
	...
  42b8d0:	mov    al,0x38
  42b8d2:	rex.XB add BYTE PTR [r8],al
	...
  42b8dd:	add    BYTE PTR [rax],al
  42b8df:	add    BYTE PTR [rsi+rsi*1+0x43],dh
	...
  42b8ee:	add    BYTE PTR [rax],al
  42b8f0:	shl    BYTE PTR [rsi],0x43
	...
  42b8ff:	add    BYTE PTR [rax+0x38],ch
  42b902:	rex.XB add BYTE PTR [r8],al
	...
  42b90d:	add    BYTE PTR [rax],al
  42b90f:	add    al,ah
  42b911:	(bad)  
  42b912:	rex.XB add BYTE PTR [r8],al
	...
  42b91d:	add    BYTE PTR [rax],al
  42b91f:	add    BYTE PTR [rax+0x36],bl
  42b922:	rex.XB add BYTE PTR [r8],al
	...
  42b92d:	add    BYTE PTR [rax],al
  42b92f:	add    al,cl
  42b931:	(bad)  
  42b932:	rex.XB add BYTE PTR [r8],al
	...
  42b93d:	add    BYTE PTR [rax],al
  42b93f:	add    BYTE PTR [rdi+0x43],al
  42b942:	rex.XB cmp spl,BYTE PTR [r8]
  42b945:	sub    BYTE PTR [rdi+0x4e],al
  42b948:	push   rbp
  42b949:	sub    DWORD PTR [rax],esp
  42b94b:	xor    al,0x2e
  42b94d:	cmp    DWORD PTR [rsi],ebp
  42b94f:	xor    al,0x0
	...
  42b95d:	add    BYTE PTR [rax],al
  42b95f:	add    BYTE PTR [rdi+0x43],al
  42b962:	rex.XB cmp spl,BYTE PTR [r8]
  42b965:	sub    BYTE PTR [rdi+0x4e],al
  42b968:	push   rbp
  42b969:	sub    DWORD PTR [rax],esp
  42b96b:	xor    al,0x2e
  42b96d:	cmp    DWORD PTR [rsi],ebp
  42b96f:	xor    al,0x0
	...
  42b97d:	add    BYTE PTR [rax],al
  42b97f:	add    BYTE PTR [rdi+0x43],al
  42b982:	rex.XB cmp spl,BYTE PTR [r8]
  42b985:	sub    BYTE PTR [rdi+0x4e],al
  42b988:	push   rbp
  42b989:	sub    DWORD PTR [rax],esp
  42b98b:	xor    al,0x2e
  42b98d:	cmp    DWORD PTR [rsi],ebp
  42b98f:	xor    al,0x0
	...
  42b99d:	add    BYTE PTR [rax],al
  42b99f:	add    BYTE PTR [rdi+0x43],al
  42b9a2:	rex.XB cmp spl,BYTE PTR [r8]
  42b9a5:	sub    BYTE PTR [rdi+0x4e],al
  42b9a8:	push   rbp
  42b9a9:	sub    DWORD PTR [rax],esp
  42b9ab:	xor    al,0x2e
  42b9ad:	cmp    DWORD PTR [rsi],ebp
  42b9af:	xor    al,0x0
	...
  42b9bd:	add    BYTE PTR [rax],al
  42b9bf:	add    BYTE PTR [rdi+0x43],al
  42b9c2:	rex.XB cmp spl,BYTE PTR [r8]
  42b9c5:	sub    BYTE PTR [rdi+0x4e],al
  42b9c8:	push   rbp
  42b9c9:	sub    DWORD PTR [rax],esp
  42b9cb:	xor    al,0x2e
  42b9cd:	cmp    DWORD PTR [rsi],ebp
  42b9cf:	xor    al,0x0
	...
  42b9dd:	add    BYTE PTR [rax],al
  42b9df:	add    BYTE PTR [rdi+0x43],al
  42b9e2:	rex.XB cmp spl,BYTE PTR [r8]
  42b9e5:	sub    BYTE PTR [rdi+0x4e],al
  42b9e8:	push   rbp
  42b9e9:	sub    DWORD PTR [rax],esp
  42b9eb:	xor    al,0x2e
  42b9ed:	cmp    DWORD PTR [rsi],ebp
  42b9ef:	xor    al,0x0
	...
  42b9fd:	add    BYTE PTR [rax],al
  42b9ff:	add    BYTE PTR [rdi+0x43],al
  42ba02:	rex.XB cmp spl,BYTE PTR [r8]
  42ba05:	sub    BYTE PTR [rdi+0x4e],al
  42ba08:	push   rbp
  42ba09:	sub    DWORD PTR [rax],esp
  42ba0b:	xor    al,0x2e
  42ba0d:	cmp    DWORD PTR [rsi],ebp
  42ba0f:	xor    al,0x0
	...
  42ba1d:	add    BYTE PTR [rax],al
  42ba1f:	add    BYTE PTR [rdi+0x43],al
  42ba22:	rex.XB cmp spl,BYTE PTR [r8]
  42ba25:	sub    BYTE PTR [rdi+0x4e],al
  42ba28:	push   rbp
  42ba29:	sub    DWORD PTR [rax],esp
  42ba2b:	xor    al,0x2e
  42ba2d:	cmp    DWORD PTR [rsi],ebp
  42ba2f:	xor    al,0x0
	...
  42ba3d:	add    BYTE PTR [rax],al
  42ba3f:	add    BYTE PTR [rdi+0x43],al
  42ba42:	rex.XB cmp spl,BYTE PTR [r8]
  42ba45:	sub    BYTE PTR [rdi+0x4e],al
  42ba48:	push   rbp
  42ba49:	sub    DWORD PTR [rax],esp
  42ba4b:	xor    al,0x2e
  42ba4d:	cmp    DWORD PTR [rsi],ebp
  42ba4f:	xor    al,0x0
	...
  42ba5d:	add    BYTE PTR [rax],al
  42ba5f:	add    BYTE PTR [rdi+0x43],al
  42ba62:	rex.XB cmp spl,BYTE PTR [r8]
  42ba65:	sub    BYTE PTR [rdi+0x4e],al
  42ba68:	push   rbp
  42ba69:	sub    DWORD PTR [rax],esp
  42ba6b:	xor    al,0x2e
  42ba6d:	cmp    DWORD PTR [rsi],ebp
  42ba6f:	xor    al,0x0
	...
  42ba7d:	add    BYTE PTR [rax],al
  42ba7f:	add    BYTE PTR [rdi+0x43],al
  42ba82:	rex.XB cmp spl,BYTE PTR [r8]
  42ba85:	sub    BYTE PTR [rdi+0x4e],al
  42ba88:	push   rbp
  42ba89:	sub    DWORD PTR [rax],esp
  42ba8b:	xor    al,0x2e
  42ba8d:	cmp    DWORD PTR [rsi],ebp
  42ba8f:	xor    al,0x0
	...
  42ba9d:	add    BYTE PTR [rax],al
  42ba9f:	add    BYTE PTR [rdi+0x43],al
  42baa2:	rex.XB cmp spl,BYTE PTR [r8]
  42baa5:	sub    BYTE PTR [rdi+0x4e],al
  42baa8:	push   rbp
  42baa9:	sub    DWORD PTR [rax],esp
  42baab:	xor    al,0x2e
  42baad:	cmp    DWORD PTR [rsi],ebp
  42baaf:	xor    al,0x0
	...
  42babd:	add    BYTE PTR [rax],al
  42babf:	add    BYTE PTR [rdi+0x43],al
  42bac2:	rex.XB cmp spl,BYTE PTR [r8]
  42bac5:	sub    BYTE PTR [rdi+0x4e],al
  42bac8:	push   rbp
  42bac9:	sub    DWORD PTR [rax],esp
  42bacb:	xor    al,0x2e
  42bacd:	cmp    DWORD PTR [rsi],ebp
  42bacf:	xor    al,0x0
	...
  42badd:	add    BYTE PTR [rax],al
  42badf:	add    BYTE PTR [rdi+0x43],al
  42bae2:	rex.XB cmp spl,BYTE PTR [r8]
  42bae5:	sub    BYTE PTR [rdi+0x4e],al
  42bae8:	push   rbp
  42bae9:	sub    DWORD PTR [rax],esp
  42baeb:	xor    al,0x2e
  42baed:	cmp    DWORD PTR [rsi],ebp
  42baef:	xor    al,0x0
	...
  42bafd:	add    BYTE PTR [rax],al
  42baff:	add    BYTE PTR [rdi+0x43],al
  42bb02:	rex.XB cmp spl,BYTE PTR [r8]
  42bb05:	sub    BYTE PTR [rdi+0x4e],al
  42bb08:	push   rbp
  42bb09:	sub    DWORD PTR [rax],esp
  42bb0b:	xor    al,0x2e
  42bb0d:	cmp    DWORD PTR [rsi],ebp
  42bb0f:	xor    al,0x0
	...
  42bb1d:	add    BYTE PTR [rax],al
  42bb1f:	add    BYTE PTR [rdi+0x43],al
  42bb22:	rex.XB cmp spl,BYTE PTR [r8]
  42bb25:	sub    BYTE PTR [rdi+0x4e],al
  42bb28:	push   rbp
  42bb29:	sub    DWORD PTR [rax],esp
  42bb2b:	xor    al,0x2e
  42bb2d:	cmp    DWORD PTR [rsi],ebp
  42bb2f:	xor    al,0x0
	...
  42bb3d:	add    BYTE PTR [rax],al
  42bb3f:	add    BYTE PTR [rdi+0x43],al
  42bb42:	rex.XB cmp spl,BYTE PTR [r8]
  42bb45:	sub    BYTE PTR [rdi+0x4e],al
  42bb48:	push   rbp
  42bb49:	sub    DWORD PTR [rax],esp
  42bb4b:	xor    al,0x2e
  42bb4d:	cmp    DWORD PTR [rsi],ebp
  42bb4f:	xor    al,0x0
	...
  42bb5d:	add    BYTE PTR [rax],al
  42bb5f:	add    BYTE PTR [rdi+0x43],al
  42bb62:	rex.XB cmp spl,BYTE PTR [r8]
  42bb65:	sub    BYTE PTR [rdi+0x4e],al
  42bb68:	push   rbp
  42bb69:	sub    DWORD PTR [rax],esp
  42bb6b:	xor    al,0x2e
  42bb6d:	cmp    DWORD PTR [rsi],ebp
  42bb6f:	xor    al,0x0
	...
  42bb7d:	add    BYTE PTR [rax],al
  42bb7f:	add    BYTE PTR [rdi+0x43],al
  42bb82:	rex.XB cmp spl,BYTE PTR [r8]
  42bb85:	sub    BYTE PTR [rdi+0x4e],al
  42bb88:	push   rbp
  42bb89:	sub    DWORD PTR [rax],esp
  42bb8b:	xor    al,0x2e
  42bb8d:	cmp    DWORD PTR [rsi],ebp
  42bb8f:	xor    al,0x0
	...
  42bb9d:	add    BYTE PTR [rax],al
  42bb9f:	add    BYTE PTR [rdi+0x43],al
  42bba2:	rex.XB cmp spl,BYTE PTR [r8]
  42bba5:	sub    BYTE PTR [rdi+0x4e],al
  42bba8:	push   rbp
  42bba9:	sub    DWORD PTR [rax],esp
  42bbab:	xor    al,0x2e
  42bbad:	cmp    DWORD PTR [rsi],ebp
  42bbaf:	xor    al,0x0
	...
  42bbbd:	add    BYTE PTR [rax],al
  42bbbf:	add    BYTE PTR [rdi+0x43],al
  42bbc2:	rex.XB cmp spl,BYTE PTR [r8]
  42bbc5:	sub    BYTE PTR [rdi+0x4e],al
  42bbc8:	push   rbp
  42bbc9:	sub    DWORD PTR [rax],esp
  42bbcb:	xor    al,0x2e
  42bbcd:	cmp    DWORD PTR [rsi],ebp
  42bbcf:	xor    al,0x0
	...
  42bbdd:	add    BYTE PTR [rax],al
  42bbdf:	add    BYTE PTR [rdi+0x43],al
  42bbe2:	rex.XB cmp spl,BYTE PTR [r8]
  42bbe5:	sub    BYTE PTR [rdi+0x4e],al
  42bbe8:	push   rbp
  42bbe9:	sub    DWORD PTR [rax],esp
  42bbeb:	xor    al,0x2e
  42bbed:	cmp    DWORD PTR [rsi],ebp
  42bbef:	xor    al,0x0
	...
  42bbfd:	add    BYTE PTR [rax],al
  42bbff:	add    BYTE PTR [rdi+0x43],al
  42bc02:	rex.XB cmp spl,BYTE PTR [r8]
  42bc05:	sub    BYTE PTR [rdi+0x4e],al
  42bc08:	push   rbp
  42bc09:	sub    DWORD PTR [rax],esp
  42bc0b:	xor    al,0x2e
  42bc0d:	cmp    DWORD PTR [rsi],ebp
  42bc0f:	xor    al,0x0
	...
  42bc1d:	add    BYTE PTR [rax],al
  42bc1f:	add    BYTE PTR [rdi+0x43],al
  42bc22:	rex.XB cmp spl,BYTE PTR [r8]
  42bc25:	sub    BYTE PTR [rdi+0x4e],al
  42bc28:	push   rbp
  42bc29:	sub    DWORD PTR [rax],esp
  42bc2b:	xor    al,0x2e
  42bc2d:	cmp    DWORD PTR [rsi],ebp
  42bc2f:	xor    al,0x0
	...
  42bc3d:	add    BYTE PTR [rax],al
  42bc3f:	add    BYTE PTR [rdi+0x43],al
  42bc42:	rex.XB cmp spl,BYTE PTR [r8]
  42bc45:	sub    BYTE PTR [rdi+0x4e],al
  42bc48:	push   rbp
  42bc49:	sub    DWORD PTR [rax],esp
  42bc4b:	xor    al,0x2e
  42bc4d:	cmp    DWORD PTR [rsi],ebp
  42bc4f:	xor    al,0x0
	...
  42bc5d:	add    BYTE PTR [rax],al
  42bc5f:	add    BYTE PTR [rdi+0x43],al
  42bc62:	rex.XB cmp spl,BYTE PTR [r8]
  42bc65:	sub    BYTE PTR [rdi+0x4e],al
  42bc68:	push   rbp
  42bc69:	sub    DWORD PTR [rax],esp
  42bc6b:	xor    al,0x2e
  42bc6d:	cmp    DWORD PTR [rsi],ebp
  42bc6f:	xor    al,0x0
	...
  42bc7d:	add    BYTE PTR [rax],al
  42bc7f:	add    BYTE PTR [rdi+0x43],al
  42bc82:	rex.XB cmp spl,BYTE PTR [r8]
  42bc85:	sub    BYTE PTR [rdi+0x4e],al
  42bc88:	push   rbp
  42bc89:	sub    DWORD PTR [rax],esp
  42bc8b:	xor    al,0x2e
  42bc8d:	cmp    DWORD PTR [rsi],ebp
  42bc8f:	xor    al,0x0
	...
  42bc9d:	add    BYTE PTR [rax],al
  42bc9f:	add    BYTE PTR [rdi+0x43],al
  42bca2:	rex.XB cmp spl,BYTE PTR [r8]
  42bca5:	sub    BYTE PTR [rdi+0x4e],al
  42bca8:	push   rbp
  42bca9:	sub    DWORD PTR [rax],esp
  42bcab:	xor    al,0x2e
  42bcad:	cmp    DWORD PTR [rsi],ebp
  42bcaf:	xor    al,0x0
	...
  42bcbd:	add    BYTE PTR [rax],al
  42bcbf:	add    BYTE PTR [rdi+0x43],al
  42bcc2:	rex.XB cmp spl,BYTE PTR [r8]
  42bcc5:	sub    BYTE PTR [rdi+0x4e],al
  42bcc8:	push   rbp
  42bcc9:	sub    DWORD PTR [rax],esp
  42bccb:	xor    al,0x2e
  42bccd:	cmp    DWORD PTR [rsi],ebp
  42bccf:	xor    al,0x0
	...
  42bcdd:	add    BYTE PTR [rax],al
  42bcdf:	add    BYTE PTR [rdi+0x43],al
  42bce2:	rex.XB cmp spl,BYTE PTR [r8]
  42bce5:	sub    BYTE PTR [rdi+0x4e],al
  42bce8:	push   rbp
  42bce9:	sub    DWORD PTR [rax],esp
  42bceb:	xor    al,0x2e
  42bced:	cmp    DWORD PTR [rsi],ebp
  42bcef:	xor    al,0x0
	...
  42bcfd:	add    BYTE PTR [rax],al
  42bcff:	add    BYTE PTR [rdi+0x43],al
  42bd02:	rex.XB cmp spl,BYTE PTR [r8]
  42bd05:	sub    BYTE PTR [rdi+0x4e],al
  42bd08:	push   rbp
  42bd09:	sub    DWORD PTR [rax],esp
  42bd0b:	xor    al,0x2e
  42bd0d:	cmp    DWORD PTR [rsi],ebp
  42bd0f:	xor    al,0x0
	...
  42bd1d:	add    BYTE PTR [rax],al
  42bd1f:	add    BYTE PTR [rdi+0x43],al
  42bd22:	rex.XB cmp spl,BYTE PTR [r8]
  42bd25:	sub    BYTE PTR [rdi+0x4e],al
  42bd28:	push   rbp
  42bd29:	sub    DWORD PTR [rax],esp
  42bd2b:	xor    al,0x2e
  42bd2d:	cmp    DWORD PTR [rsi],ebp
  42bd2f:	xor    al,0x0
	...
  42bd3d:	add    BYTE PTR [rax],al
  42bd3f:	add    BYTE PTR [rdi+0x43],al
  42bd42:	rex.XB cmp spl,BYTE PTR [r8]
  42bd45:	sub    BYTE PTR [rdi+0x4e],al
  42bd48:	push   rbp
  42bd49:	sub    DWORD PTR [rax],esp
  42bd4b:	xor    al,0x2e
  42bd4d:	cmp    DWORD PTR [rsi],ebp
  42bd4f:	xor    al,0x0
	...
  42bd5d:	add    BYTE PTR [rax],al
  42bd5f:	add    BYTE PTR [rdi+0x43],al
  42bd62:	rex.XB cmp spl,BYTE PTR [r8]
  42bd65:	sub    BYTE PTR [rdi+0x4e],al
  42bd68:	push   rbp
  42bd69:	sub    DWORD PTR [rax],esp
  42bd6b:	xor    al,0x2e
  42bd6d:	cmp    DWORD PTR [rsi],ebp
  42bd6f:	xor    al,0x0
	...
  42bd7d:	add    BYTE PTR [rax],al
  42bd7f:	add    BYTE PTR [rdi+0x43],al
  42bd82:	rex.XB cmp spl,BYTE PTR [r8]
  42bd85:	sub    BYTE PTR [rdi+0x4e],al
  42bd88:	push   rbp
  42bd89:	sub    DWORD PTR [rax],esp
  42bd8b:	xor    al,0x2e
  42bd8d:	cmp    DWORD PTR [rsi],ebp
  42bd8f:	xor    al,0x0
	...
  42bd9d:	add    BYTE PTR [rax],al
  42bd9f:	add    BYTE PTR [rdi+0x43],al
  42bda2:	rex.XB cmp spl,BYTE PTR [r8]
  42bda5:	sub    BYTE PTR [rdi+0x4e],al
  42bda8:	push   rbp
  42bda9:	sub    DWORD PTR [rax],esp
  42bdab:	xor    al,0x2e
  42bdad:	cmp    DWORD PTR [rsi],ebp
  42bdaf:	xor    al,0x0
	...
  42bdbd:	add    BYTE PTR [rax],al
  42bdbf:	add    BYTE PTR [rdi+0x43],al
  42bdc2:	rex.XB cmp spl,BYTE PTR [r8]
  42bdc5:	sub    BYTE PTR [rdi+0x4e],al
  42bdc8:	push   rbp
  42bdc9:	sub    DWORD PTR [rax],esp
  42bdcb:	xor    al,0x2e
  42bdcd:	cmp    DWORD PTR [rsi],ebp
  42bdcf:	xor    al,0x0
	...
  42bddd:	add    BYTE PTR [rax],al
  42bddf:	add    BYTE PTR [rdi+0x43],al
  42bde2:	rex.XB cmp spl,BYTE PTR [r8]
  42bde5:	sub    BYTE PTR [rdi+0x4e],al
  42bde8:	push   rbp
  42bde9:	sub    DWORD PTR [rax],esp
  42bdeb:	xor    al,0x2e
  42bded:	cmp    DWORD PTR [rsi],ebp
  42bdef:	xor    al,0x0
	...
  42bdfd:	add    BYTE PTR [rax],al
  42bdff:	add    BYTE PTR [rdi+0x43],al
  42be02:	rex.XB cmp spl,BYTE PTR [r8]
  42be05:	sub    BYTE PTR [rdi+0x4e],al
  42be08:	push   rbp
  42be09:	sub    DWORD PTR [rax],esp
  42be0b:	xor    al,0x2e
  42be0d:	cmp    DWORD PTR [rsi],ebp
  42be0f:	xor    al,0x0
	...
  42be1d:	add    BYTE PTR [rax],al
  42be1f:	add    BYTE PTR [rdi+0x43],al
  42be22:	rex.XB cmp spl,BYTE PTR [r8]
  42be25:	sub    BYTE PTR [rdi+0x4e],al
  42be28:	push   rbp
  42be29:	sub    DWORD PTR [rax],esp
  42be2b:	xor    al,0x2e
  42be2d:	cmp    DWORD PTR [rsi],ebp
  42be2f:	xor    al,0x0
	...
  42be3d:	add    BYTE PTR [rax],al
  42be3f:	add    BYTE PTR [rdi+0x43],al
  42be42:	rex.XB cmp spl,BYTE PTR [r8]
  42be45:	sub    BYTE PTR [rdi+0x4e],al
  42be48:	push   rbp
  42be49:	sub    DWORD PTR [rax],esp
  42be4b:	xor    al,0x2e
  42be4d:	cmp    DWORD PTR [rsi],ebp
  42be4f:	xor    al,0x0
	...
  42be5d:	add    BYTE PTR [rax],al
  42be5f:	add    BYTE PTR [rdi+0x43],al
  42be62:	rex.XB cmp spl,BYTE PTR [r8]
  42be65:	sub    BYTE PTR [rdi+0x4e],al
  42be68:	push   rbp
  42be69:	sub    DWORD PTR [rax],esp
  42be6b:	xor    al,0x2e
  42be6d:	cmp    DWORD PTR [rsi],ebp
  42be6f:	xor    al,0x0
	...
  42be7d:	add    BYTE PTR [rax],al
  42be7f:	add    BYTE PTR [rdi+0x43],al
  42be82:	rex.XB cmp spl,BYTE PTR [r8]
  42be85:	sub    BYTE PTR [rdi+0x4e],al
  42be88:	push   rbp
  42be89:	sub    DWORD PTR [rax],esp
  42be8b:	xor    al,0x2e
  42be8d:	cmp    DWORD PTR [rsi],ebp
  42be8f:	xor    al,0x0
	...
  42be9d:	add    BYTE PTR [rax],al
  42be9f:	add    BYTE PTR [rdi+0x43],al
  42bea2:	rex.XB cmp spl,BYTE PTR [r8]
  42bea5:	sub    BYTE PTR [rdi+0x4e],al
  42bea8:	push   rbp
  42bea9:	sub    DWORD PTR [rax],esp
  42beab:	xor    al,0x2e
  42bead:	cmp    DWORD PTR [rsi],ebp
  42beaf:	xor    al,0x0
	...
  42bebd:	add    BYTE PTR [rax],al
  42bebf:	add    BYTE PTR [rdi+0x43],al
  42bec2:	rex.XB cmp spl,BYTE PTR [r8]
  42bec5:	sub    BYTE PTR [rdi+0x4e],al
  42bec8:	push   rbp
  42bec9:	sub    DWORD PTR [rax],esp
  42becb:	xor    al,0x2e
  42becd:	cmp    DWORD PTR [rsi],ebp
  42becf:	xor    al,0x0
	...
  42bedd:	add    BYTE PTR [rax],al
  42bedf:	add    BYTE PTR [rdi+0x43],al
  42bee2:	rex.XB cmp spl,BYTE PTR [r8]
  42bee5:	sub    BYTE PTR [rdi+0x4e],al
  42bee8:	push   rbp
  42bee9:	sub    DWORD PTR [rax],esp
  42beeb:	xor    al,0x2e
  42beed:	cmp    DWORD PTR [rsi],ebp
  42beef:	xor    al,0x0
	...
  42befd:	add    BYTE PTR [rax],al
  42beff:	add    BYTE PTR [rdi+0x43],al
  42bf02:	rex.XB cmp spl,BYTE PTR [r8]
  42bf05:	sub    BYTE PTR [rdi+0x4e],al
  42bf08:	push   rbp
  42bf09:	sub    DWORD PTR [rax],esp
  42bf0b:	xor    al,0x2e
  42bf0d:	cmp    DWORD PTR [rsi],ebp
  42bf0f:	xor    al,0x0
	...
  42bf1d:	add    BYTE PTR [rax],al
  42bf1f:	add    BYTE PTR [rdi+0x43],al
  42bf22:	rex.XB cmp spl,BYTE PTR [r8]
  42bf25:	sub    BYTE PTR [rdi+0x4e],al
  42bf28:	push   rbp
  42bf29:	sub    DWORD PTR [rax],esp
  42bf2b:	xor    al,0x2e
  42bf2d:	cmp    DWORD PTR [rsi],ebp
  42bf2f:	xor    al,0x0
	...
  42bf3d:	add    BYTE PTR [rax],al
  42bf3f:	add    BYTE PTR [rdi+0x43],al
  42bf42:	rex.XB cmp spl,BYTE PTR [r8]
  42bf45:	sub    BYTE PTR [rdi+0x4e],al
  42bf48:	push   rbp
  42bf49:	sub    DWORD PTR [rax],esp
  42bf4b:	xor    al,0x2e
  42bf4d:	cmp    DWORD PTR [rsi],ebp
  42bf4f:	xor    al,0x0
	...
  42bf5d:	add    BYTE PTR [rax],al
  42bf5f:	add    BYTE PTR [rdi+0x43],al
  42bf62:	rex.XB cmp spl,BYTE PTR [r8]
  42bf65:	sub    BYTE PTR [rdi+0x4e],al
  42bf68:	push   rbp
  42bf69:	sub    DWORD PTR [rax],esp
  42bf6b:	xor    al,0x2e
  42bf6d:	cmp    DWORD PTR [rsi],ebp
  42bf6f:	xor    al,0x0
	...
  42bf7d:	add    BYTE PTR [rax],al
  42bf7f:	add    BYTE PTR [rdi+0x43],al
  42bf82:	rex.XB cmp spl,BYTE PTR [r8]
  42bf85:	sub    BYTE PTR [rdi+0x4e],al
  42bf88:	push   rbp
  42bf89:	sub    DWORD PTR [rax],esp
  42bf8b:	xor    al,0x2e
  42bf8d:	cmp    DWORD PTR [rsi],ebp
  42bf8f:	xor    al,0x0
	...
  42bf9d:	add    BYTE PTR [rax],al
  42bf9f:	add    BYTE PTR [rdi+0x43],al
  42bfa2:	rex.XB cmp spl,BYTE PTR [r8]
  42bfa5:	sub    BYTE PTR [rdi+0x4e],al
  42bfa8:	push   rbp
  42bfa9:	sub    DWORD PTR [rax],esp
  42bfab:	xor    al,0x2e
  42bfad:	cmp    DWORD PTR [rsi],ebp
  42bfaf:	xor    al,0x0
	...
  42bfbd:	add    BYTE PTR [rax],al
  42bfbf:	add    BYTE PTR [rdi+0x43],al
  42bfc2:	rex.XB cmp spl,BYTE PTR [r8]
  42bfc5:	sub    BYTE PTR [rdi+0x4e],al
  42bfc8:	push   rbp
  42bfc9:	sub    DWORD PTR [rax],esp
  42bfcb:	xor    al,0x2e
  42bfcd:	cmp    DWORD PTR [rsi],ebp
  42bfcf:	xor    al,0x0
	...
  42bfdd:	add    BYTE PTR [rax],al
  42bfdf:	add    BYTE PTR [rdi+0x43],al
  42bfe2:	rex.XB cmp spl,BYTE PTR [r8]
  42bfe5:	sub    BYTE PTR [rdi+0x4e],al
  42bfe8:	push   rbp
  42bfe9:	sub    DWORD PTR [rax],esp
  42bfeb:	xor    al,0x2e
  42bfed:	cmp    DWORD PTR [rsi],ebp
  42bfef:	xor    al,0x0
	...
  42bffd:	add    BYTE PTR [rax],al
  42bfff:	add    BYTE PTR [rdi+0x43],al
  42c002:	rex.XB cmp spl,BYTE PTR [r8]
  42c005:	sub    BYTE PTR [rdi+0x4e],al
  42c008:	push   rbp
  42c009:	sub    DWORD PTR [rax],esp
  42c00b:	xor    al,0x2e
  42c00d:	cmp    DWORD PTR [rsi],ebp
  42c00f:	xor    al,0x0
	...
  42c01d:	add    BYTE PTR [rax],al
  42c01f:	add    BYTE PTR [rdi+0x43],al
  42c022:	rex.XB cmp spl,BYTE PTR [r8]
  42c025:	sub    BYTE PTR [rdi+0x4e],al
  42c028:	push   rbp
  42c029:	sub    DWORD PTR [rax],esp
  42c02b:	xor    al,0x2e
  42c02d:	cmp    DWORD PTR [rsi],ebp
  42c02f:	xor    al,0x0
	...
  42c03d:	add    BYTE PTR [rax],al
  42c03f:	add    BYTE PTR [rdi+0x43],al
  42c042:	rex.XB cmp spl,BYTE PTR [r8]
  42c045:	sub    BYTE PTR [rdi+0x4e],al
  42c048:	push   rbp
  42c049:	sub    DWORD PTR [rax],esp
  42c04b:	xor    al,0x2e
  42c04d:	cmp    DWORD PTR [rsi],ebp
  42c04f:	xor    al,0x0
	...
  42c05d:	add    BYTE PTR [rax],al
  42c05f:	add    BYTE PTR [rdi+0x43],al
  42c062:	rex.XB cmp spl,BYTE PTR [r8]
  42c065:	sub    BYTE PTR [rdi+0x4e],al
  42c068:	push   rbp
  42c069:	sub    DWORD PTR [rax],esp
  42c06b:	xor    al,0x2e
  42c06d:	cmp    DWORD PTR [rsi],ebp
  42c06f:	xor    al,0x0
	...
  42c07d:	add    BYTE PTR [rax],al
  42c07f:	add    BYTE PTR [rdi+0x43],al
  42c082:	rex.XB cmp spl,BYTE PTR [r8]
  42c085:	sub    BYTE PTR [rdi+0x4e],al
  42c088:	push   rbp
  42c089:	sub    DWORD PTR [rax],esp
  42c08b:	xor    al,0x2e
  42c08d:	cmp    DWORD PTR [rsi],ebp
  42c08f:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000042d000 <.pdata>:
  42d000:	add    BYTE PTR [rax],dl
  42d002:	add    BYTE PTR [rax],al
  42d004:	add    DWORD PTR [rax],edx
  42d006:	add    BYTE PTR [rax],al
  42d008:	add    al,dh
  42d00a:	add    al,BYTE PTR [rax]
  42d00c:	adc    BYTE PTR [rax],dl
  42d00e:	add    BYTE PTR [rax],al
  42d010:	push   rcx
  42d011:	adc    DWORD PTR [rax],eax
  42d013:	add    BYTE PTR [rax+rsi*8],al
  42d016:	add    al,BYTE PTR [rax]
  42d018:	(bad)  
  42d019:	adc    DWORD PTR [rax],eax
  42d01b:	add    BYTE PTR [rsi+0xc000011],ch
  42d021:	lock add al,BYTE PTR [rax]
  42d024:	mov    al,0x11
  42d026:	add    BYTE PTR [rax],al
  42d028:	(bad)  
  42d029:	adc    al,0x0
  42d02b:	add    BYTE PTR [rax+rsi*8],dl
  42d02e:	add    al,BYTE PTR [rax]
  42d030:	rcl    BYTE PTR [rax+rax*1],1
  42d033:	add    dl,dh
  42d035:	adc    al,0x0
  42d037:	add    BYTE PTR [rax],ch
  42d039:	lock add al,BYTE PTR [rax]
  42d03c:	add    BYTE PTR [rip+0x15220000],dl        # 0x1564d042
  42d042:	add    BYTE PTR [rax],al
  42d044:	rex.W
  42d045:	lock add al,BYTE PTR [rax]
  42d048:	xor    BYTE PTR [rip+0x15410000],dl        # 0x1583d04e
  42d04e:	add    BYTE PTR [rax],al
  42d050:	push   0x500002f0
  42d055:	adc    eax,0x15590000
  42d05a:	add    BYTE PTR [rax],al
  42d05c:	ins    BYTE PTR es:[rdi],dx
  42d05d:	lock add al,BYTE PTR [rax]
  42d060:	(bad)  
  42d061:	adc    eax,0x1db20000
  42d066:	add    BYTE PTR [rax],al
  42d068:	jo     0x42d05a
  42d06a:	add    al,BYTE PTR [rax]
  42d06c:	rcr    BYTE PTR [rip+0x1ebe0000],0x0        # 0x1f00d073
  42d073:	add    BYTE PTR [rax-0x3ffffd10],cl
  42d079:	(bad)  
  42d07a:	add    BYTE PTR [rax],al
  42d07c:	cld    
  42d07d:	and    DWORD PTR [rax],eax
  42d07f:	add    BYTE PTR [rax+rsi*8+0x22000002],bl
  42d086:	add    BYTE PTR [rax],al
  42d088:	rex and eax,0xf0b40000
  42d08e:	add    al,BYTE PTR [rax]
  42d090:	rex and eax,0x26160000
  42d096:	add    BYTE PTR [rax],al
  42d098:	int3   
  42d099:	lock add al,BYTE PTR [rax]
  42d09c:	and    BYTE PTR [rsi],ah
  42d09e:	add    BYTE PTR [rax],al
  42d0a0:	rex.WRXB
  42d0a1:	add    BYTE PTR es:[rax],al
  42d0a4:	loopne 0x42d096
  42d0a6:	add    al,BYTE PTR [rax]
  42d0a8:	push   rax
  42d0a9:	add    BYTE PTR es:[rax],al
  42d0ac:	(bad)  [rsi]
  42d0ae:	add    BYTE PTR [rax],al
  42d0b0:	call   0xffffffffe042d3a5
  42d0b5:	add    BYTE PTR es:[rax],al
  42d0b8:	adc    al,0x27
  42d0ba:	add    BYTE PTR [rax],al
  42d0bc:	or     cl,dh
  42d0be:	add    al,BYTE PTR [rax]
  42d0c0:	and    BYTE PTR [rdi],ah
  42d0c2:	add    BYTE PTR [rax],al
  42d0c4:	int3   
  42d0c5:	(bad)  
  42d0c6:	add    BYTE PTR [rax],al
  42d0c8:	or     al,0xf1
  42d0ca:	add    al,BYTE PTR [rax]
  42d0cc:	shl    BYTE PTR [rdi],1
  42d0ce:	add    BYTE PTR [rax],al
  42d0d0:	cmc    
  42d0d1:	(bad)  
  42d0d2:	add    BYTE PTR [rax],al
  42d0d4:	and    cl,dh
  42d0d6:	add    al,BYTE PTR [rax]
  42d0d8:	add    BYTE PTR [rax],ch
  42d0da:	add    BYTE PTR [rax],al
  42d0dc:	(bad)  
  42d0dd:	sub    BYTE PTR [rax],al
  42d0df:	add    BYTE PTR [rax],ch
  42d0e1:	icebp  
  42d0e2:	add    al,BYTE PTR [rax]
  42d0e4:	sub    BYTE PTR [rax],al
  42d0e7:	add    cl,bh
  42d0e9:	sub    eax,DWORD PTR [rax]
  42d0eb:	add    BYTE PTR [rax],dh
  42d0ed:	icebp  
  42d0ee:	add    al,BYTE PTR [rax]
  42d0f0:	add    BYTE PTR [rax+rax*1],ch
  42d0f3:	add    BYTE PTR [rdi],bh
  42d0f5:	sub    al,0x0
  42d0f7:	add    BYTE PTR [rax-0xf],al
  42d0fa:	add    al,BYTE PTR [rax]
  42d0fc:	sub    al,0x0
  42d0ff:	add    BYTE PTR [rbx+0x4c00002c],ah
  42d105:	icebp  
  42d106:	add    al,BYTE PTR [rax]
  42d108:	mov    al,0x2c
  42d10a:	add    BYTE PTR [rax],al
  42d10c:	shr    DWORD PTR [rax+rax*1],1
  42d10f:	add    BYTE PTR [rcx+rsi*8+0x2],dl
  42d113:	add    al,ah
  42d115:	sub    al,0x0
  42d117:	add    dh,ah
  42d119:	sub    al,0x0
  42d11b:	add    BYTE PTR [rax-0xf],bl
  42d11e:	add    al,BYTE PTR [rax]
  42d120:	lock sub al,0x0
  42d123:	add    dh,dh
  42d125:	sub    al,0x0
  42d127:	add    BYTE PTR [rcx+rsi*8+0x2],bl
  42d12b:	add    BYTE PTR [rax],al
  42d12d:	sub    eax,0x2d670000
  42d132:	add    BYTE PTR [rax],al
  42d134:	(bad)  
  42d135:	icebp  
  42d136:	add    al,BYTE PTR [rax]
  42d138:	jo     0x42d167
  42d13a:	add    BYTE PTR [rax],al
  42d13c:	mov    ecx,0x6800002d
  42d141:	icebp  
  42d142:	add    al,BYTE PTR [rax]
  42d144:	shr    BYTE PTR [rip+0x2f830000],0x0        # 0x2fc5d14b
  42d14b:	add    BYTE PTR [rax-0xf],dh
  42d14e:	add    al,BYTE PTR [rax]
  42d150:	nop
  42d151:	(bad)  
  42d152:	add    BYTE PTR [rax],al
  42d154:	iret   
  42d155:	(bad)  
  42d156:	add    BYTE PTR [rax],al
  42d158:	jl     0x42d14b
  42d15a:	add    al,BYTE PTR [rax]
  42d15c:	shr    BYTE PTR [rdi],1
  42d15e:	add    BYTE PTR [rax],al
  42d160:	add    eax,0x88000030
  42d165:	icebp  
  42d166:	add    al,BYTE PTR [rax]
  42d168:	adc    BYTE PTR [rax],dh
  42d16a:	add    BYTE PTR [rax],al
  42d16c:	shl    BYTE PTR [rax],0x0
  42d16f:	add    BYTE PTR [rcx+rsi*8+0x30c00002],cl
  42d176:	add    BYTE PTR [rax],al
  42d178:	call   0xffffffff9842d1af
  42d17d:	icebp  
  42d17e:	add    al,BYTE PTR [rax]
  42d180:	lock xor al,BYTE PTR [rax]
  42d183:	add    BYTE PTR [rbx+rsi*1-0xe500000],bh
  42d18a:	add    al,BYTE PTR [rax]
  42d18c:	shl    BYTE PTR [rbx],0x0
  42d18f:	add    BYTE PTR [rsp+rsi*1+0x0],ch
  42d193:	add    ah,al
  42d195:	icebp  
  42d196:	add    al,BYTE PTR [rax]
  42d198:	jo     0x42d1ce
  42d19a:	add    BYTE PTR [rax],al
  42d19c:	jne    0x42d1d2
  42d19e:	add    BYTE PTR [rax],al
  42d1a0:	(bad)  
  42d1a1:	icebp  
  42d1a2:	add    al,BYTE PTR [rax]
  42d1a4:	xor    BYTE PTR [rax+rax*1],0x0
  42d1a8:	jl     0x42d1e0
  42d1aa:	add    BYTE PTR [rax],al
  42d1ac:	fdiv   st,st(1)
  42d1ae:	add    al,BYTE PTR [rax]
  42d1b0:	xor    BYTE PTR [rsi],0x0
  42d1b3:	add    BYTE PTR [rcx+0x4e],ah
  42d1b6:	add    BYTE PTR [rax],al
  42d1b8:	lock icebp 
  42d1ba:	add    al,BYTE PTR [rax]
  42d1bc:	jo     0x42d20c
  42d1be:	add    BYTE PTR [rax],al
  42d1c0:	in     eax,0x4e
  42d1c2:	add    BYTE PTR [rax],al
  42d1c4:	add    dl,dh
  42d1c6:	add    al,BYTE PTR [rax]
  42d1c8:	lock rex.WRX add BYTE PTR [rax],r8b
  42d1cc:	repnz push rdx
  42d1ce:	add    BYTE PTR [rax],al
  42d1d0:	adc    dl,dh
  42d1d2:	add    al,BYTE PTR [rax]
  42d1d4:	add    BYTE PTR [rbx+0x0],dl
  42d1d7:	add    BYTE PTR [rbx+rdx*2+0x0],dl
  42d1db:	add    BYTE PTR [rax],ch
  42d1dd:	repnz add al,BYTE PTR [rax]
  42d1e0:	(bad)  
  42d1e1:	push   rbx
  42d1e2:	add    BYTE PTR [rax],al
  42d1e4:	addr32 push rbx
  42d1e6:	add    BYTE PTR [rax],al
  42d1e8:	sub    al,0xf2
  42d1ea:	add    al,BYTE PTR [rax]
  42d1ec:	jo     0x42d241
  42d1ee:	add    BYTE PTR [rax],al
  42d1f0:	ja     0x42d245
  42d1f2:	add    BYTE PTR [rax],al
  42d1f4:	xor    dl,dh
  42d1f6:	add    al,BYTE PTR [rax]
  42d1f8:	adc    BYTE PTR [rbx+0x0],0x0
  42d1fc:	jrcxz  0x42d251
  42d1fe:	add    BYTE PTR [rax],al
  42d200:	xor    al,0xf2
  42d202:	add    al,BYTE PTR [rax]
  42d204:	lock push rbx
  42d206:	add    BYTE PTR [rax],al
  42d208:	andps  xmm0,XMMWORD PTR [rax]
  42d20b:	add    BYTE PTR [rdx+rsi*8],bh
  42d20e:	add    al,BYTE PTR [rax]
  42d210:	adc    BYTE PTR [rax+rax*1+0x0],dl
  42d214:	adc    eax,0x40000054
  42d219:	repnz add al,BYTE PTR [rax]
  42d21c:	and    BYTE PTR [rax+rax*1+0x0],dl
  42d220:	push   rax
  42d221:	push   rsp
  42d222:	add    BYTE PTR [rax],al
  42d224:	rex.R
  42d225:	repnz add al,BYTE PTR [rax]
  42d228:	push   rax
  42d229:	push   rsp
  42d22a:	add    BYTE PTR [rax],al
  42d22c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42d22d:	push   rsp
  42d22e:	add    BYTE PTR [rax],al
  42d230:	rex.WR
  42d231:	repnz add al,BYTE PTR [rax]
  42d234:	mov    al,0x54
  42d236:	add    BYTE PTR [rax],al
  42d238:	add    eax,0x54000055
  42d23d:	repnz add al,BYTE PTR [rax]
  42d240:	adc    BYTE PTR [rbp+0x0],dl
  42d243:	add    BYTE PTR [rbp+0x55],ah
  42d246:	add    BYTE PTR [rax],al
  42d248:	pop    rsp
  42d249:	repnz add al,BYTE PTR [rax]
  42d24c:	jo     0x42d2a3
  42d24e:	add    BYTE PTR [rax],al
  42d250:	mov    edx,0x68000055
  42d255:	repnz add al,BYTE PTR [rax]
  42d258:	rcl    BYTE PTR [rbp+0x0],0x0
  42d25c:	clc    
  42d25d:	push   rbp
  42d25e:	add    BYTE PTR [rax],al
  42d260:	je     0x42d254
  42d262:	add    al,BYTE PTR [rax]
  42d264:	add    BYTE PTR [rsi+0x0],dl
  42d267:	add    BYTE PTR [rcx+0x56],cl
  42d26a:	add    BYTE PTR [rax],al
  42d26c:	js     0x42d260
  42d26e:	add    al,BYTE PTR [rax]
  42d270:	push   rax
  42d271:	push   rsi
  42d272:	add    BYTE PTR [rax],al
  42d274:	ja     0x42d2cc
  42d276:	add    BYTE PTR [rax],al
  42d278:	jl     0x42d26c
  42d27a:	add    al,BYTE PTR [rax]
  42d27c:	adc    BYTE PTR [rsi+0x0],0x0
  42d280:	adc    eax,0x80000057
  42d285:	repnz add al,BYTE PTR [rax]
  42d288:	and    BYTE PTR [rdi+0x0],dl
  42d28b:	add    BYTE PTR [rdx+0x57],dl
  42d28e:	add    BYTE PTR [rax],al
  42d290:	mov    edx,?
  42d292:	add    al,BYTE PTR [rax]
  42d294:	(bad)  
  42d295:	push   rdi
  42d296:	add    BYTE PTR [rax],al
  42d298:	mov    edx,0x90000057
  42d29d:	repnz add al,BYTE PTR [rax]
  42d2a0:	rcl    BYTE PTR [rdi+0x0],0x0
  42d2a4:	sbb    BYTE PTR [rax+0x0],bl
  42d2a7:	add    BYTE PTR [rax+0x200002f2],bl
  42d2ad:	pop    rax
  42d2ae:	add    BYTE PTR [rax],al
  42d2b0:	cmp    bl,BYTE PTR [rax+0x0]
  42d2b3:	add    BYTE PTR [rdx+rsi*8+0x58400002],ah
  42d2ba:	add    BYTE PTR [rax],al
  42d2bc:	jmp    0x42d316
  42d2be:	add    BYTE PTR [rax],al
  42d2c0:	lods   al,BYTE PTR ds:[rsi]
  42d2c1:	repnz add al,BYTE PTR [rax]
  42d2c4:	lock pop rax
  42d2c6:	add    BYTE PTR [rax],al
  42d2c8:	(bad)  
  42d2c9:	pop    rcx
  42d2ca:	add    BYTE PTR [rax],al
  42d2cc:	mov    eax,0x900002f2
  42d2d1:	pop    rcx
  42d2d2:	add    BYTE PTR [rax],al
  42d2d4:	sbb    al,0x5a
  42d2d6:	add    BYTE PTR [rax],al
  42d2d8:	enter  0x2f2,0x0
  42d2dc:	and    BYTE PTR [rdx+0x0],bl
  42d2df:	add    BYTE PTR [rdx+rbx*2-0xd240000],ah
  42d2e6:	add    al,BYTE PTR [rax]
  42d2e8:	mov    al,0x5a
  42d2ea:	add    BYTE PTR [rax],al
  42d2ec:	cmp    DWORD PTR [rbx+0x0],ebx
  42d2ef:	add    al,ch
  42d2f1:	repnz add al,BYTE PTR [rax]
  42d2f4:	rex pop rbx
  42d2f6:	add    BYTE PTR [rax],al
  42d2f8:	cmc    
  42d2f9:	pop    rbx
  42d2fa:	add    BYTE PTR [rax],al
  42d2fc:	hlt    
  42d2fd:	repnz add al,BYTE PTR [rax]
  42d300:	add    BYTE PTR [rax+rax*1+0x0],bl
  42d304:	and    bl,BYTE PTR [rax+rax*1+0x0]
  42d308:	add    bl,dh
  42d30a:	add    al,BYTE PTR [rax]
  42d30c:	xor    BYTE PTR [rax+rax*1+0x0],bl
  42d310:	lods   al,BYTE PTR ds:[rsi]
  42d311:	pop    rsp
  42d312:	add    BYTE PTR [rax],al
  42d314:	add    al,0xf3
  42d316:	add    al,BYTE PTR [rax]
  42d318:	mov    al,0x5c
  42d31a:	add    BYTE PTR [rax],al
  42d31c:	and    bl,BYTE PTR [rsi+0x0]
  42d31f:	add    BYTE PTR [rax],dl
  42d321:	repz add al,BYTE PTR [rax]
  42d324:	xor    BYTE PTR [rsi+0x0],bl
  42d327:	add    BYTE PTR [rbx+0x2400005e],al
  42d32d:	repz add al,BYTE PTR [rax]
  42d330:	nop
  42d331:	pop    rsi
  42d332:	add    BYTE PTR [rax],al
  42d334:	xor    BYTE PTR [rdi+0x0],bl
  42d337:	add    BYTE PTR [rax],dh
  42d339:	repz add al,BYTE PTR [rax]
  42d33c:	xor    BYTE PTR [rdi+0x0],bl
  42d33f:	add    BYTE PTR [rcx+0x5f],bl
  42d342:	add    BYTE PTR [rax],al
  42d344:	cmp    bl,dh
  42d346:	add    al,BYTE PTR [rax]
  42d348:	(bad)  
  42d349:	pop    rdi
  42d34a:	add    BYTE PTR [rax],al
  42d34c:	outs   dx,DWORD PTR ds:[rsi]
  42d34d:	pop    rdi
  42d34e:	add    BYTE PTR [rax],al
  42d350:	rex
  42d351:	repz add al,BYTE PTR [rax]
  42d354:	jo     0x42d3b5
  42d356:	add    BYTE PTR [rax],al
  42d358:	(bad)  
  42d359:	pop    rdi
  42d35a:	add    BYTE PTR [rax],al
  42d35c:	rex.R
  42d35d:	repz add al,BYTE PTR [rax]
  42d360:	movabs al,ds:0x4c0000601900005f
  42d369:	repz add al,BYTE PTR [rax]
  42d36c:	and    BYTE PTR [rax+0x0],ah
  42d36f:	add    BYTE PTR [rbx+0x60],al
  42d372:	add    BYTE PTR [rax],al
  42d374:	push   rsp
  42d375:	repz add al,BYTE PTR [rax]
  42d378:	push   rax
  42d379:	(bad)  
  42d37a:	add    BYTE PTR [rax],al
  42d37c:	test   BYTE PTR [rax+0x0],ah
  42d37f:	add    BYTE PTR [rbx+rsi*8+0x2],bl
  42d383:	add    BYTE PTR [rax-0x3dffffa0],dl
  42d389:	(bad)  
  42d38a:	add    BYTE PTR [rax],al
  42d38c:	repz add al,BYTE PTR fs:[rax]
  42d390:	shl    BYTE PTR [rax+0x0],1
  42d393:	add    BYTE PTR [rdx],bl
  42d395:	(bad)  
  42d396:	add    BYTE PTR [rax],al
  42d398:	ins    BYTE PTR es:[rdi],dx
  42d399:	repz add al,BYTE PTR [rax]
  42d39c:	and    BYTE PTR [rcx+0x0],ah
  42d39f:	add    BYTE PTR [rbp+0x61],dh
  42d3a2:	add    BYTE PTR [rax],al
  42d3a4:	js     0x42d399
  42d3a6:	add    al,BYTE PTR [rax]
  42d3a8:	and    BYTE PTR [rcx+0x0],0x0
  42d3ac:	(bad)  
  42d3ad:	(bad)  
  42d3ae:	add    BYTE PTR [rax],al
  42d3b0:	test   bl,dh
  42d3b2:	add    al,BYTE PTR [rax]
  42d3b4:	adc    BYTE PTR [rdx+0x0],ah
  42d3b7:	add    BYTE PTR [rdi],ch
  42d3b9:	(bad)  
  42d3ba:	add    BYTE PTR [rax],al
  42d3bc:	nop
  42d3bd:	repz add al,BYTE PTR [rax]
  42d3c0:	xor    BYTE PTR [rdx+0x0],ah
  42d3c3:	add    BYTE PTR [rax+0x62],bh
  42d3c6:	add    BYTE PTR [rax],al
  42d3c8:	cwde   
  42d3c9:	repz add al,BYTE PTR [rax]
  42d3cc:	and    BYTE PTR [rdx+0x0],0x0
  42d3d0:	fisub  DWORD PTR [rdx+0x0]
  42d3d3:	add    BYTE PTR [rbx+rsi*8+0x62e00002],ah
  42d3da:	add    BYTE PTR [rax],al
  42d3dc:	repnz (bad) 
  42d3de:	add    BYTE PTR [rax],al
  42d3e0:	mov    al,0xf3
  42d3e2:	add    al,BYTE PTR [rax]
  42d3e4:	add    BYTE PTR [rbx+0x0],ah
  42d3e7:	add    BYTE PTR [rsi-0x4bffff9d],dl
  42d3ed:	repz add al,BYTE PTR [rax]
  42d3f0:	movabs al,ds:0xc0000063df000063
  42d3f9:	repz add al,BYTE PTR [rax]
  42d3fc:	loopne 0x42d461
  42d3fe:	add    BYTE PTR [rax],al
  42d400:	out    0x63,al
  42d402:	add    BYTE PTR [rax],al
  42d404:	int3   
  42d405:	repz add al,BYTE PTR [rax]
  42d408:	lock movsxd eax,DWORD PTR [rax]
  42d40b:	add    BYTE PTR [rax],dl
  42d40d:	add    BYTE PTR fs:[rax],al
  42d410:	shl    bl,1
  42d412:	add    al,BYTE PTR [rax]
  42d414:	adc    BYTE PTR [rax+rax*1+0x0],ah
  42d418:	ss add BYTE PTR gs:[rax],al
  42d41c:	fdiv   st,st(3)
  42d41e:	add    al,BYTE PTR [rax]
  42d420:	rex
  42d421:	add    BYTE PTR gs:[rax],al
  42d424:	movabs ds:0xb00002f3dc000065,eax
  42d42d:	add    BYTE PTR gs:[rax],al
  42d430:	shl    BYTE PTR [rbp+0x0],cl
  42d433:	add    ah,ch
  42d435:	repz add al,BYTE PTR [rax]
  42d438:	loopne 0x42d49f
  42d43a:	add    BYTE PTR [rax],al
  42d43c:	pop    rsi
  42d43d:	data16 add BYTE PTR [rax],al
  42d440:	hlt    
  42d441:	repz add al,BYTE PTR [rax]
  42d444:	(bad)  
  42d445:	data16 add BYTE PTR [rax],al
  42d448:	nop
  42d449:	data16 add BYTE PTR [rax],al
  42d44c:	add    ah,dh
  42d44e:	add    al,BYTE PTR [rax]
  42d450:	nop
  42d451:	data16 add BYTE PTR [rax],al
  42d454:	int    0x67
  42d456:	add    BYTE PTR [rax],al
  42d458:	or     al,0xf4
  42d45a:	add    al,BYTE PTR [rax]
  42d45c:	shl    BYTE PTR [rdi+0x0],1
  42d45f:	add    BYTE PTR [rax+0x6a],ch
  42d462:	add    BYTE PTR [rax],al
  42d464:	and    ah,dh
  42d466:	add    al,BYTE PTR [rax]
  42d468:	jo     0x42d4d4
  42d46a:	add    BYTE PTR [rax],al
  42d46c:	xchg   edx,eax
  42d46d:	push   0x0
  42d46f:	add    BYTE PTR [rax],bh
  42d471:	hlt    
  42d472:	add    al,BYTE PTR [rax]
  42d474:	movabs al,ds:0x4000006b6800006a
  42d47d:	hlt    
  42d47e:	add    al,BYTE PTR [rax]
  42d480:	jo     0x42d4ed
  42d482:	add    BYTE PTR [rax],al
  42d484:	mov    cl,0x6c
  42d486:	add    BYTE PTR [rax],al
  42d488:	rex.WR hlt 
  42d48a:	add    al,BYTE PTR [rax]
  42d48c:	shr    BYTE PTR [rax+rax*1+0x0],0xb9
  42d491:	outs   dx,DWORD PTR ds:[rsi]
  42d492:	add    BYTE PTR [rax],al
  42d494:	fs hlt 
  42d496:	add    al,BYTE PTR [rax]
  42d498:	shr    BYTE PTR [rdi+0x0],0x0
  42d49c:	je     0x42d50e
  42d49e:	add    BYTE PTR [rax],al
  42d4a0:	js     0x42d496
  42d4a2:	add    al,BYTE PTR [rax]
  42d4a4:	xor    BYTE PTR [rax+0x0],0x0
  42d4a8:	or     esi,DWORD PTR [rcx+0x0]
  42d4ab:	add    BYTE PTR [rsp+rsi*8+0x71100002],al
  42d4b2:	add    BYTE PTR [rax],al
  42d4b4:	xchg   DWORD PTR [rcx+0x0],esi
  42d4b7:	add    BYTE PTR [rax-0x6ffffd0c],dl
  42d4bd:	jno    0x42d4bf
  42d4bf:	add    BYTE PTR [rbx+rsi*2+0x0],dl
  42d4c3:	add    BYTE PTR [rsp+rsi*8+0x73600002],bl
  42d4ca:	add    BYTE PTR [rax],al
  42d4cc:	iret   
  42d4cd:	jae    0x42d4cf
  42d4cf:	add    BYTE PTR [rax-0x2ffffd0c],dh
  42d4d5:	jae    0x42d4d7
  42d4d7:	add    al,dh
  42d4d9:	je     0x42d4db
  42d4db:	add    BYTE PTR [rsp+rsi*8+0x74f00002],bh
  42d4e2:	add    BYTE PTR [rax],al
  42d4e4:	adc    dh,BYTE PTR [rsi+0x0]
  42d4e7:	add    ah,al
  42d4e9:	hlt    
  42d4ea:	add    al,BYTE PTR [rax]
  42d4ec:	and    BYTE PTR [rsi+0x0],dh
  42d4ef:	add    BYTE PTR [rip+0xffffffffcc000077],dl        # 0xffffffffcc42d56c
  42d4f5:	hlt    
  42d4f6:	add    al,BYTE PTR [rax]
  42d4f8:	and    BYTE PTR [rdi+0x0],dh
  42d4fb:	add    BYTE PTR [rbx+0x77],bh
  42d4fe:	add    BYTE PTR [rax],al
  42d500:	(bad)  
  42d501:	hlt    
  42d502:	add    al,BYTE PTR [rax]
  42d504:	xor    BYTE PTR [rdi+0x0],0x0
  42d508:	int3   
  42d509:	ja     0x42d50b
  42d50b:	add    ah,bl
  42d50d:	hlt    
  42d50e:	add    al,BYTE PTR [rax]
  42d510:	shl    BYTE PTR [rdi+0x0],1
  42d513:	add    BYTE PTR [rsi],dl
  42d515:	js     0x42d517
  42d517:	add    al,ch
  42d519:	hlt    
  42d51a:	add    al,BYTE PTR [rax]
  42d51c:	and    BYTE PTR [rax+0x0],bh
  42d51f:	add    BYTE PTR [rbx-0xbffff88],bh
  42d525:	hlt    
  42d526:	add    al,BYTE PTR [rax]
  42d528:	sar    BYTE PTR [rax+0x0],0x0
  42d52c:	rex jns 0x42d52f
  42d52f:	add    BYTE PTR [rax],al
  42d531:	cmc    
  42d532:	add    al,BYTE PTR [rax]
  42d534:	rex jns 0x42d537
  42d537:	add    BYTE PTR [rcx+0xc000079],al
  42d53d:	cmc    
  42d53e:	add    al,BYTE PTR [rax]
  42d540:	nop
  42d541:	jns    0x42d543
  42d543:	add    al,dh
  42d545:	jns    0x42d547
  42d547:	add    BYTE PTR [rsi*8+0x79f00002],dl
  42d54e:	add    BYTE PTR [rax],al
  42d550:	jo     0x42d4d3
  42d552:	add    BYTE PTR [rax],al
  42d554:	and    ch,dh
  42d556:	add    al,BYTE PTR [rax]
  42d558:	jo     0x42d4db
  42d55a:	add    BYTE PTR [rax],al
  42d55c:	jne    0x42d4f5
  42d55e:	add    BYTE PTR [rax],al
  42d560:	cmp    ch,dh
  42d562:	add    al,BYTE PTR [rax]
  42d564:	adc    BYTE PTR [rdi-0x5d890000],0x0
  42d56b:	add    BYTE PTR [rax-0xb],dl
  42d56e:	add    al,BYTE PTR [rax]
  42d570:	and    BYTE PTR [rdx-0x5d410000],0x0
  42d577:	add    BYTE PTR [rax-0xb],ch
  42d57a:	add    al,BYTE PTR [rax]
  42d57c:	shl    BYTE PTR [rdx-0x56e90000],0x0
  42d583:	add    BYTE PTR [rbp+rsi*8+0x2],dh
  42d587:	add    BYTE PTR [rax],ah
  42d589:	test   eax,0xb34d0000
  42d58e:	add    BYTE PTR [rax],al
  42d590:	mov    ch,dh
  42d592:	add    al,BYTE PTR [rax]
  42d594:	push   rax
  42d595:	mov    bl,0x0
  42d597:	add    BYTE PTR [rax-0x5fffff4d],al
  42d59d:	cmc    
  42d59e:	add    al,BYTE PTR [rax]
  42d5a0:	xor    BYTE PTR [rbx-0x4c310000],0x0
  42d5a7:	add    BYTE PTR [rax-0x2ffffd0b],ch
  42d5ad:	mov    bl,0x0
  42d5af:	add    al,bh
  42d5b1:	mov    bl,0x0
  42d5b3:	add    BYTE PTR [rbp+rsi*8-0x4bfffffe],dh
  42d5ba:	add    BYTE PTR [rax],al
  42d5bc:	xchg   esi,eax
  42d5bd:	mov    ah,0x0
  42d5bf:	add    BYTE PTR [rbp+rsi*8-0x4b5ffffe],bh
  42d5c6:	add    BYTE PTR [rax],al
  42d5c8:	adc    eax,0xc80000b5
  42d5cd:	cmc    
  42d5ce:	add    al,BYTE PTR [rax]
  42d5d0:	and    BYTE PTR [rbp-0x4a6a0000],dh
  42d5d6:	add    BYTE PTR [rax],al
  42d5d8:	fdiv   st,st(5)
  42d5da:	add    al,BYTE PTR [rax]
  42d5dc:	movabs al,ds:0xe80000b5c80000b5
  42d5e5:	cmc    
  42d5e6:	add    al,BYTE PTR [rax]
  42d5e8:	shl    BYTE PTR [rbp-0x4a280000],1
  42d5ee:	add    BYTE PTR [rax],al
  42d5f0:	in     al,dx
  42d5f1:	cmc    
  42d5f2:	add    al,BYTE PTR [rax]
  42d5f4:	loopne 0x42d5ab
  42d5f6:	add    BYTE PTR [rax],al
  42d5f8:	mov    sil,0x0
  42d5fb:	add    al,dh
  42d5fd:	cmc    
  42d5fe:	add    al,BYTE PTR [rax]
  42d600:	mov    sil,0x0
  42d603:	add    BYTE PTR [rdx-0x4a],bh
  42d606:	add    BYTE PTR [rax],al
  42d608:	clc    
  42d609:	cmc    
  42d60a:	add    al,BYTE PTR [rax]
  42d60c:	xor    BYTE PTR [rsi-0x47e60000],0x0
  42d613:	add    ah,bh
  42d615:	cmc    
  42d616:	add    al,BYTE PTR [rax]
  42d618:	and    BYTE PTR [rax-0x46df0000],bh
  42d61e:	add    BYTE PTR [rax],al
  42d620:	or     al,0xf6
  42d622:	add    al,BYTE PTR [rax]
  42d624:	xor    BYTE PTR [rcx-0x46050000],bh
  42d62a:	add    BYTE PTR [rax],al
  42d62c:	sbb    al,0xf6
  42d62e:	add    al,BYTE PTR [rax]
  42d630:	add    BYTE PTR [rdx-0x454d0000],bh
  42d636:	add    BYTE PTR [rax],al
  42d638:	xor    dh,dh
  42d63a:	add    al,BYTE PTR [rax]
  42d63c:	sar    BYTE PTR [rdx-0x440f0000],0x0
  42d643:	add    BYTE PTR [rax-0xa],al
  42d646:	add    al,BYTE PTR [rax]
  42d648:	add    BYTE PTR [rax+rax*1+0xbd9900],bh
  42d64f:	add    BYTE PTR [rax-0xa],cl
  42d652:	add    al,BYTE PTR [rax]
  42d654:	movabs al,ds:0x580000be900000bd
  42d65d:	test   BYTE PTR [rdx],0x0
  42d660:	nop
  42d661:	mov    esi,0xc1100000
  42d666:	add    BYTE PTR [rax],al
  42d668:	ins    BYTE PTR es:[rdi],dx
  42d669:	test   BYTE PTR [rdx],0x0
  42d66c:	adc    cl,al
  42d66e:	add    BYTE PTR [rax],al
  42d670:	xor    dl,al
  42d672:	add    BYTE PTR [rax],al
  42d674:	jl     0x42d66c
  42d676:	add    al,BYTE PTR [rax]
  42d678:	xor    dl,al
  42d67a:	add    BYTE PTR [rax],al
  42d67c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42d67d:	ret    
  42d67e:	add    BYTE PTR [rax],al
  42d680:	test   dh,dh
  42d682:	add    al,BYTE PTR [rax]
  42d684:	mov    al,0xc3
  42d686:	add    BYTE PTR [rax],al
  42d688:	xchg   esp,eax
  42d68a:	add    BYTE PTR [rax],al
  42d68c:	cwde   
  42d68d:	test   BYTE PTR [rdx],0x0
  42d690:	nop
  42d691:	(bad)  
  42d692:	add    BYTE PTR [rax],al
  42d694:	movabs ds:0xb00002f6a80000c4,al
  42d69d:	(bad)  
  42d69e:	add    BYTE PTR [rax],al
  42d6a0:	(bad)
  42d6a4:	lods   al,BYTE PTR ds:[rsi]
  42d6a5:	test   BYTE PTR [rdx],0x0
  42d6a8:	jo     0x42d66f
  42d6aa:	add    BYTE PTR [rax],al
  42d6ac:	(bad)  
  42d6ad:	(bad)
  42d6b0:	mov    eax,0xe00002f6
  42d6b5:	(bad)
  42d6b8:	stos   DWORD PTR es:[rdi],eax
  42d6b9:	mov    BYTE PTR [rax],0x0
  42d6bc:	(bad)  
  42d6bd:	test   BYTE PTR [rdx],0x0
  42d6c0:	mov    al,0xc6
  42d6c2:	add    BYTE PTR [rax],al
  42d6c4:	add    al,0xc7
  42d6c6:	add    BYTE PTR [rax],al
  42d6c8:	shl    dh,1
  42d6ca:	add    al,BYTE PTR [rax]
  42d6cc:	adc    bh,al
  42d6ce:	add    BYTE PTR [rax],al
  42d6d0:	ss enter 0x0,0xd4
  42d6d5:	test   BYTE PTR [rdx],0x0
  42d6d8:	rex enter 0x0,0xb6
  42d6dd:	retf   0x0
  42d6e0:	fdivr  st(6),st
  42d6e2:	add    al,BYTE PTR [rax]
  42d6e4:	ror    dl,0x0
  42d6e7:	add    BYTE PTR [rsi],cl
  42d6e9:	retf   
  42d6ea:	add    BYTE PTR [rax],al
  42d6ec:	lock test BYTE PTR [rdx],0x0
  42d6f0:	adc    bl,cl
  42d6f2:	add    BYTE PTR [rax],al
  42d6f4:	ror    bl,1
  42d6f6:	add    BYTE PTR [rax],al
  42d6f8:	cld    
  42d6f9:	test   BYTE PTR [rdx],0x0
  42d6fc:	ror    bl,1
  42d6fe:	add    BYTE PTR [rax],al
  42d700:	rex.WRXB int3 
  42d702:	add    BYTE PTR [rax],al
  42d704:	or     al,0xf7
  42d706:	add    al,BYTE PTR [rax]
  42d708:	push   rax
  42d709:	int3   
  42d70a:	add    BYTE PTR [rax],al
  42d70c:	retf   
  42d70d:	int3   
  42d70e:	add    BYTE PTR [rax],al
  42d710:	sbb    bh,dh
  42d712:	add    al,BYTE PTR [rax]
  42d714:	ror    ah,1
  42d716:	add    BYTE PTR [rax],al
  42d718:	fwait
  42d719:	(bad)  
  42d71a:	add    BYTE PTR [rax],al
  42d71c:	and    al,0xf7
  42d71e:	add    al,BYTE PTR [rax]
  42d720:	movabs al,ds:0x3c0000cec20000ce
  42d729:	test   DWORD PTR [rdx],0xced000
  42d72f:	add    BYTE PTR [rax+0x400000cf],ch
  42d735:	test   DWORD PTR [rdx],0xcfb000
  42d73b:	add    BYTE PTR [rax+rdx*8],bl
  42d73e:	add    BYTE PTR [rax],al
  42d740:	push   rsp
  42d741:	test   DWORD PTR [rdx],0xd02000
  42d747:	add    bl,ch
  42d749:	rol    BYTE PTR [rax],1
  42d74b:	add    BYTE PTR [rdi+rsi*8+0x2],ah
  42d74f:	add    al,dh
  42d751:	rol    BYTE PTR [rax],1
  42d753:	add    BYTE PTR [rdx],al
  42d755:	rol    DWORD PTR [rax],1
  42d757:	add    BYTE PTR [rax-0x9],dh
  42d75a:	add    al,BYTE PTR [rax]
  42d75c:	adc    cl,dl
  42d75e:	add    BYTE PTR [rax],al
  42d760:	rex.WXB rol QWORD PTR [r8],cl
  42d763:	add    BYTE PTR [rdi+rsi*8+0x2],dh
  42d767:	add    BYTE PTR [rax-0x2d],dl
  42d76a:	add    BYTE PTR [rax],al
  42d76c:	jne    0x42d741
  42d76e:	add    BYTE PTR [rax],al
  42d770:	test   bh,dh
  42d772:	add    al,BYTE PTR [rax]
  42d774:	adc    bl,0x0
  42d777:	add    bl,ah
  42d779:	(bad)  
  42d77a:	add    BYTE PTR [rax],al
  42d77c:	mov    bh,dh
  42d77e:	add    al,BYTE PTR [rax]
  42d780:	lock (bad) 
  42d782:	add    BYTE PTR [rax],al
  42d784:	mov    dh,0xe6
  42d786:	add    BYTE PTR [rax],al
  42d788:	movabs al,ds:0x6f0000e6c00002f7
  42d791:	out    0x0,eax
  42d793:	add    BYTE PTR [rax+0x700002f7],bh
  42d799:	out    0x0,eax
  42d79b:	add    cl,bh
  42d79d:	out    0x0,eax
  42d79f:	add    al,cl
  42d7a1:	test   DWORD PTR [rdx],0xe80000
  42d7a7:	add    BYTE PTR [rbx],bh
  42d7a9:	call   0xfffffffff81ad7ae
  42d7ae:	add    al,BYTE PTR [rax]
  42d7b0:	rex call 0xffffffffeb0cd7b6
  42d7b6:	add    BYTE PTR [rax],al
  42d7b8:	in     al,0xf7
  42d7ba:	add    al,BYTE PTR [rax]
  42d7bc:	shr    dl,1
  42d7be:	add    BYTE PTR [rax],al
  42d7c0:	imul   ebp,ebx,0xf7f40000
  42d7c6:	add    al,BYTE PTR [rax]
  42d7c8:	jo     0x42d7b5
  42d7ca:	add    BYTE PTR [rax],al
  42d7cc:	(bad)  
  42d7cd:	in     al,dx
  42d7ce:	add    BYTE PTR [rax],al
  42d7d0:	cld    
  42d7d1:	test   DWORD PTR [rdx],0xec4000
  42d7d7:	add    BYTE PTR [rdi+0xee],al
  42d7dd:	clc    
  42d7de:	add    al,BYTE PTR [rax]
  42d7e0:	nop
  42d7e1:	out    dx,al
  42d7e2:	add    BYTE PTR [rax],al
  42d7e4:	xlat   BYTE PTR ds:[rbx]
  42d7e5:	out    dx,al
  42d7e6:	add    BYTE PTR [rax],al
  42d7e8:	sbb    al,bh
  42d7ea:	add    al,BYTE PTR [rax]
  42d7ec:	loopne 0x42d7dc
  42d7ee:	add    BYTE PTR [rax],al
  42d7f0:	rex.WX out dx,eax
  42d7f2:	add    BYTE PTR [rax],al
  42d7f4:	sbb    al,0xf8
  42d7f6:	add    al,BYTE PTR [rax]
  42d7f8:	push   rax
  42d7f9:	out    dx,eax
  42d7fa:	add    BYTE PTR [rax],al
  42d7fc:	leave  
  42d7fd:	out    dx,eax
  42d7fe:	add    BYTE PTR [rax],al
  42d800:	sub    al,bh
  42d802:	add    al,BYTE PTR [rax]
  42d804:	shr    bh,1
  42d806:	add    BYTE PTR [rax],al
  42d808:	pop    rax
  42d809:	lock add BYTE PTR [rax],al
  42d80c:	cmp    al,bh
  42d80e:	add    al,BYTE PTR [rax]
  42d810:	(bad)  
  42d811:	lock add BYTE PTR [rax],al
  42d814:	test   eax,esi
  42d816:	add    BYTE PTR [rax],al
  42d818:	rex.W clc 
  42d81a:	add    al,BYTE PTR [rax]
  42d81c:	nop
  42d81d:	lock add BYTE PTR [rax],al
  42d820:	retf   0xf0
  42d823:	add    BYTE PTR [rax+rdi*8+0x2],cl
  42d827:	add    al,dl
  42d829:	lock add BYTE PTR [rax],al
  42d82c:	sahf   
  42d82d:	icebp  
  42d82e:	add    BYTE PTR [rax],al
  42d830:	push   rsp
  42d831:	clc    
  42d832:	add    al,BYTE PTR [rax]
  42d834:	movabs al,ds:0x640000f21b0000f1
  42d83d:	clc    
  42d83e:	add    al,BYTE PTR [rax]
  42d840:	and    dl,dh
  42d842:	add    BYTE PTR [rax],al
  42d844:	jne    0x42d83a
  42d846:	add    BYTE PTR [rax],al
  42d848:	je     0x42d842
  42d84a:	add    al,BYTE PTR [rax]
  42d84c:	xor    ah,0x0
  42d84f:	add    BYTE PTR [rsp+rsi*8-0x7780000],ch
  42d856:	add    al,BYTE PTR [rax]
  42d858:	mov    al,0xf4
  42d85a:	add    BYTE PTR [rax],al
  42d85c:	stc    
  42d85d:	hlt    
  42d85e:	add    BYTE PTR [rax],al
  42d860:	nop
  42d861:	clc    
  42d862:	add    al,BYTE PTR [rax]
  42d864:	add    ch,dh
  42d866:	add    BYTE PTR [rax],al
  42d868:	rex.WR cmc 
  42d86a:	add    BYTE PTR [rax],al
  42d86c:	pushf  
  42d86d:	clc    
  42d86e:	add    al,BYTE PTR [rax]
  42d870:	push   rax
  42d871:	cmc    
  42d872:	add    BYTE PTR [rax],al
  42d874:	shl    ch,0x0
  42d877:	add    BYTE PTR [rax+rdi*8-0xa3ffffe],ah
  42d87e:	add    BYTE PTR [rax],al
  42d880:	pop    rbx
  42d881:	test   BYTE PTR [rax],0x0
  42d884:	mov    al,0xf8
  42d886:	add    al,BYTE PTR [rax]
  42d888:	(bad)  
  42d889:	test   BYTE PTR [rax],0x0
  42d88c:	maskmovq mm0,(bad)
  42d88d:	test   DWORD PTR [rax],0x2f8bc00
  42d893:	add    BYTE PTR [rax],dl
  42d895:	test   DWORD PTR [rax],0xf79200
  42d89b:	add    al,cl
  42d89d:	clc    
  42d89e:	add    al,BYTE PTR [rax]
  42d8a0:	movabs al,ds:0xd00000f8160000f7
  42d8a9:	clc    
  42d8aa:	add    al,BYTE PTR [rax]
  42d8ac:	and    al,bh
  42d8ae:	add    BYTE PTR [rax],al
  42d8b0:	jne    0x42d8aa
  42d8b2:	add    BYTE PTR [rax],al
  42d8b4:	fdivr  st,st(0)
  42d8b6:	add    al,BYTE PTR [rax]
  42d8b8:	cmp    al,0x0
  42d8bb:	add    ch,bh
  42d8bd:	clc    
  42d8be:	add    BYTE PTR [rax],al
  42d8c0:	fdiv   st(0),st
  42d8c2:	add    al,BYTE PTR [rax]
  42d8c4:	add    cl,bh
  42d8c6:	add    BYTE PTR [rax],al
  42d8c8:	(bad)  
  42d8c9:	stc    
  42d8ca:	add    BYTE PTR [rax],al
  42d8cc:	call   0x7042dbc9
  42d8d1:	stc    
  42d8d2:	add    BYTE PTR [rax],al
  42d8d4:	idiv   cl
  42d8d6:	add    BYTE PTR [rax],al
  42d8d8:	hlt    
  42d8d9:	clc    
  42d8da:	add    al,BYTE PTR [rax]
  42d8dc:	add    dl,bh
  42d8de:	add    BYTE PTR [rax],al
  42d8e0:	xchg   ebp,eax
  42d8e1:	cli    
  42d8e2:	add    BYTE PTR [rax],al
  42d8e4:	add    cl,bh
  42d8e6:	add    al,BYTE PTR [rax]
  42d8e8:	movabs al,ds:0x80000fb000000fa
  42d8f1:	stc    
  42d8f2:	add    al,BYTE PTR [rax]
  42d8f4:	add    bl,bh
  42d8f6:	add    BYTE PTR [rax],al
  42d8f8:	xchg   edi,eax
  42d8f9:	sti    
  42d8fa:	add    BYTE PTR [rax],al
  42d8fc:	adc    al,0xf9
  42d8fe:	add    al,BYTE PTR [rax]
  42d900:	movabs al,ds:0x200000fc230000fb
  42d909:	stc    
  42d90a:	add    al,BYTE PTR [rax]
  42d90c:	xor    ah,bh
  42d90e:	add    BYTE PTR [rax],al
  42d910:	rex.WR cld 
  42d912:	add    BYTE PTR [rax],al
  42d914:	sub    al,0xf9
  42d916:	add    al,BYTE PTR [rax]
  42d918:	push   rax
  42d919:	cld    
  42d91a:	add    BYTE PTR [rax],al
  42d91c:	push   rdi
  42d91d:	cld    
  42d91e:	add    BYTE PTR [rax],al
  42d920:	xor    al,0xf9
  42d922:	add    al,BYTE PTR [rax]
  42d924:	(bad)  
  42d925:	cld    
  42d926:	add    BYTE PTR [rax],al
  42d928:	push   0x380000fc
  42d92d:	stc    
  42d92e:	add    al,BYTE PTR [rax]
  42d930:	jo     0x42d92e
  42d932:	add    BYTE PTR [rax],al
  42d934:	js     0x42d932
  42d936:	add    BYTE PTR [rax],al
  42d938:	cmp    al,0xf9
  42d93a:	add    al,BYTE PTR [rax]
  42d93c:	cmp    ah,0x0
  42d93f:	add    BYTE PTR [rdi+0x400000fc],al
  42d945:	stc    
  42d946:	add    al,BYTE PTR [rax]
  42d948:	nop
  42d949:	cld    
  42d94a:	add    BYTE PTR [rax],al
  42d94c:	cwde   
  42d94d:	cld    
  42d94e:	add    BYTE PTR [rax],al
  42d950:	rex.R stc 
  42d952:	add    al,BYTE PTR [rax]
  42d954:	movabs al,ds:0x480000fca70000fc
  42d95d:	stc    
  42d95e:	add    al,BYTE PTR [rax]
  42d960:	mov    al,0xfc
  42d962:	add    BYTE PTR [rax],al
  42d964:	mov    eax,0x4c0000fc
  42d969:	stc    
  42d96a:	add    al,BYTE PTR [rax]
  42d96c:	sar    ah,0x0
  42d96f:	add    al,cl
  42d971:	cld    
  42d972:	add    BYTE PTR [rax],al
  42d974:	push   rax
  42d975:	stc    
  42d976:	add    al,BYTE PTR [rax]
  42d978:	sar    ah,1
  42d97a:	add    BYTE PTR [rax],al
  42d97c:	xlat   BYTE PTR ds:[rbx]
  42d97d:	cld    
  42d97e:	add    BYTE PTR [rax],al
  42d980:	push   rsp
  42d981:	stc    
  42d982:	add    al,BYTE PTR [rax]
  42d984:	loopne 0x42d982
  42d986:	add    BYTE PTR [rax],al
  42d988:	out    0xfc,eax
  42d98a:	add    BYTE PTR [rax],al
  42d98c:	pop    rax
  42d98d:	stc    
  42d98e:	add    al,BYTE PTR [rax]
  42d990:	lock cld 
  42d992:	add    BYTE PTR [rax],al
  42d994:	(bad)  
  42d995:	std    
  42d996:	add    BYTE PTR [rax],al
  42d998:	pop    rsp
  42d999:	stc    
  42d99a:	add    al,BYTE PTR [rax]
  42d99c:	nop
  42d99d:	std    
  42d99e:	add    BYTE PTR [rax],al
  42d9a0:	xchg   ebp,eax
  42d9a1:	std    
  42d9a2:	add    BYTE PTR [rax],al
  42d9a4:	push   0xffffffffa00002f9
  42d9a9:	std    
  42d9aa:	add    BYTE PTR [rax],al
  42d9ac:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42d9ad:	std    
  42d9ae:	add    BYTE PTR [rax],al
  42d9b0:	ins    BYTE PTR es:[rdi],dx
  42d9b1:	stc    
  42d9b2:	add    al,BYTE PTR [rax]
  42d9b4:	mov    al,0xfd
  42d9b6:	add    BYTE PTR [rax],al
  42d9b8:	mov    ch,0xfd
  42d9ba:	add    BYTE PTR [rax],al
  42d9bc:	jo     0x42d9b7
  42d9be:	add    al,BYTE PTR [rax]
  42d9c0:	sar    ch,0x0
  42d9c3:	add    cl,ah
  42d9c5:	std    
  42d9c6:	add    BYTE PTR [rax],al
  42d9c8:	je     0x42d9c3
  42d9ca:	add    al,BYTE PTR [rax]
  42d9cc:	lock std 
  42d9ce:	add    BYTE PTR [rax],al
  42d9d0:	(bad)  
  42d9d1:	inc    BYTE PTR [rax]
  42d9d3:	add    BYTE PTR [rcx+rdi*8+0x2],bh
  42d9d7:	add    BYTE PTR [rax-0x2],dh
  42d9da:	add    BYTE PTR [rax],al
  42d9dc:	sbb    DWORD PTR [r9],r8d
  42d9df:	add    BYTE PTR [rax+0x500002f9],cl
  42d9e5:	sbb    DWORD PTR [rcx],eax
  42d9e7:	add    BYTE PTR [rbx-0x5ffffee6],dh
  42d9ed:	stc    
  42d9ee:	add    al,BYTE PTR [rax]
  42d9f0:	rcr    BYTE PTR [rdx],0x1
  42d9f3:	add    bh,cl
  42d9f5:	sbb    al,BYTE PTR [rcx]
  42d9f7:	add    BYTE PTR [rcx+rdi*8+0x1ad00002],dh
  42d9fe:	add    DWORD PTR [rax],eax
  42da00:	pop    rax
  42da01:	sbb    eax,DWORD PTR [rcx]
  42da03:	add    BYTE PTR [rax+0x600002f9],bh
  42da09:	sbb    eax,DWORD PTR [rcx]
  42da0b:	add    BYTE PTR [rsi-0x43fffedf],dh
  42da11:	stc    
  42da12:	add    al,BYTE PTR [rax]
  42da14:	shl    BYTE PTR [rcx],0x1
  42da17:	add    BYTE PTR [rdi+0x46],cl
  42da1a:	add    DWORD PTR [rax],eax
  42da1c:	sar    cl,1
  42da1e:	add    al,BYTE PTR [rax]
  42da20:	push   rax
  42da21:	rex.RX add DWORD PTR [rax],r8d
  42da24:	add    BYTE PTR [rsi+0x1],0x0
  42da28:	clc    
  42da29:	stc    
  42da2a:	add    al,BYTE PTR [rax]
  42da2c:	add    BYTE PTR [rsi+0x1],0x0
  42da30:	mov    bl,0x49
  42da32:	add    DWORD PTR [rax],eax
  42da34:	add    dl,bh
  42da36:	add    al,BYTE PTR [rax]
  42da38:	ror    BYTE PTR [rcx+0x1],0x0
  42da3c:	rex.WB
  42da3d:	rex.WX add QWORD PTR [rax],rax
  42da40:	adc    dl,bh
  42da42:	add    al,BYTE PTR [rax]
  42da44:	push   rax
  42da45:	rex.WX add QWORD PTR [rax],rax
  42da48:	mov    ebx,0x2000014a
  42da4d:	cli    
  42da4e:	add    al,BYTE PTR [rax]
  42da50:	ror    BYTE PTR [rdx+0x1],0x0
  42da54:	(bad)  
  42da55:	rex.WXB add QWORD PTR [r8],rax
  42da58:	sub    al,0xfa
  42da5a:	add    al,BYTE PTR [rax]
  42da5c:	loopne 0x42daa9
  42da5e:	add    DWORD PTR [rax],eax
  42da60:	(bad)  
  42da61:	rex.WRXB add QWORD PTR [r8],r8
  42da64:	cmp    al,0xfa
  42da66:	add    al,BYTE PTR [rax]
  42da68:	(bad)  
  42da69:	rex.WRXB add QWORD PTR [r8],r8
  42da6c:	out    dx,eax
  42da6d:	push   rax
  42da6e:	add    DWORD PTR [rax],eax
  42da70:	rex.WR cli 
  42da72:	add    al,BYTE PTR [rax]
  42da74:	lock push rax
  42da76:	add    DWORD PTR [rax],eax
  42da78:	cmc    
  42da79:	push   rax
  42da7a:	add    DWORD PTR [rax],eax
  42da7c:	fs cli 
  42da7e:	add    al,BYTE PTR [rax]
  42da80:	add    BYTE PTR [rcx+0x1],dl
  42da83:	add    BYTE PTR [rcx+0x68000151],bh
  42da89:	cli    
  42da8a:	add    al,BYTE PTR [rax]
  42da8c:	rcl    BYTE PTR [rcx+0x1],0x0
  42da90:	(bad)  
  42da91:	push   rdx
  42da92:	add    DWORD PTR [rax],eax
  42da94:	je     0x42da90
  42da96:	add    al,BYTE PTR [rax]
  42da98:	and    BYTE PTR [rdx+0x1],dl
  42da9b:	add    BYTE PTR [rbx],bh
  42da9d:	push   rdx
  42da9e:	add    DWORD PTR [rax],eax
  42daa0:	js     0x42da9c
  42daa2:	add    al,BYTE PTR [rax]
  42daa4:	rex push rdx
  42daa6:	add    DWORD PTR [rax],eax
  42daa8:	addr32 push rdx
  42daaa:	add    DWORD PTR [rax],eax
  42daac:	cmp    dl,0x2
  42daaf:	add    BYTE PTR [rax+0x52],dh
  42dab2:	add    DWORD PTR [rax],eax
  42dab4:	(bad)  
  42dab5:	push   rdx
  42dab6:	add    DWORD PTR [rax],eax
  42dab8:	test   dl,bh
  42daba:	add    al,BYTE PTR [rax]
  42dabc:	lock push rdx
  42dabe:	add    DWORD PTR [rax],eax
  42dac0:	sbb    eax,0x88000153
  42dac5:	cli    
  42dac6:	add    al,BYTE PTR [rax]
  42dac8:	and    BYTE PTR [rbx+0x1],dl
  42dacb:	add    BYTE PTR [rcx],ah
  42dacd:	push   rbx
  42dace:	add    DWORD PTR [rax],eax
  42dad0:	xchg   esp,eax
  42dad1:	cli    
  42dad2:	add    al,BYTE PTR [rax]
  42dad4:	xor    BYTE PTR [rbx+0x1],dl
  42dad7:	add    BYTE PTR [rsi+0x53],al
  42dada:	add    DWORD PTR [rax],eax
  42dadc:	cwde   
  42dadd:	cli    
  42dade:	add    al,BYTE PTR [rax]
  42dae0:	push   rax
  42dae1:	push   rbx
  42dae2:	add    DWORD PTR [rax],eax
  42dae4:	xchg   esi,eax
  42dae5:	push   rbx
  42dae6:	add    DWORD PTR [rax],eax
  42dae8:	pushf  
  42dae9:	cli    
  42daea:	add    al,BYTE PTR [rax]
  42daec:	movabs al,ds:0xa0000153bc000153
  42daf5:	cli    
  42daf6:	add    al,BYTE PTR [rax]
  42daf8:	rcl    BYTE PTR [rbx+0x1],0x0
  42dafc:	cld    
  42dafd:	push   rbx
  42dafe:	add    DWORD PTR [rax],eax
  42db00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42db01:	cli    
  42db02:	add    al,BYTE PTR [rax]
  42db04:	add    BYTE PTR [rcx+rax*1+0x0],dl
  42db08:	rex.XB push r12
  42db0a:	add    DWORD PTR [rax],eax
  42db0c:	test   al,0xfa
  42db0e:	add    al,BYTE PTR [rax]
  42db10:	push   rax
  42db11:	push   rsp
  42db12:	add    DWORD PTR [rax],eax
  42db14:	pop    rsp
  42db15:	push   rsp
  42db16:	add    DWORD PTR [rax],eax
  42db18:	lods   al,BYTE PTR ds:[rsi]
  42db19:	cli    
  42db1a:	add    al,BYTE PTR [rax]
  42db1c:	(bad)  
  42db1d:	push   rsp
  42db1e:	add    DWORD PTR [rax],eax
  42db20:	jne    0x42db76
  42db22:	add    DWORD PTR [rax],eax
  42db24:	mov    al,0xfa
  42db26:	add    al,BYTE PTR [rax]
  42db28:	adc    BYTE PTR [rcx+rax*1+0x0],0x8c
  42db2d:	push   rsp
  42db2e:	add    DWORD PTR [rax],eax
  42db30:	mov    ah,0xfa
  42db32:	add    al,BYTE PTR [rax]
  42db34:	nop
  42db35:	push   rsp
  42db36:	add    DWORD PTR [rax],eax
  42db38:	lods   eax,DWORD PTR ds:[rsi]
  42db39:	push   rsp
  42db3a:	add    DWORD PTR [rax],eax
  42db3c:	mov    eax,0xb00002fa
  42db41:	push   rsp
  42db42:	add    DWORD PTR [rax],eax
  42db44:	fcom   QWORD PTR [rcx+rax*1+0x0]
  42db48:	mov    esp,0xe00002fa
  42db4d:	push   rsp
  42db4e:	add    DWORD PTR [rax],eax
  42db50:	mov    BYTE PTR [rbp+0x1],dl
  42db53:	add    al,cl
  42db55:	cli    
  42db56:	add    al,BYTE PTR [rax]
  42db58:	nop
  42db59:	push   rbp
  42db5a:	add    DWORD PTR [rax],eax
  42db5c:	cld    
  42db5d:	push   rbp
  42db5e:	add    DWORD PTR [rax],eax
  42db60:	fdivr  st,st(2)
  42db62:	add    al,BYTE PTR [rax]
  42db64:	add    BYTE PTR [rsi+0x1],dl
  42db67:	add    BYTE PTR [rsi+rdx*2-0x51bffff],bh
  42db6e:	add    al,BYTE PTR [rax]
  42db70:	rcl    BYTE PTR [rsi+0x1],0x0
  42db74:	rex.WB push r15
  42db76:	add    DWORD PTR [rax],eax
  42db78:	hlt    
  42db79:	cli    
  42db7a:	add    al,BYTE PTR [rax]
  42db7c:	push   rax
  42db7d:	push   rdi
  42db7e:	add    DWORD PTR [rax],eax
  42db80:	mov    ebx,0x157
  42db85:	sti    
  42db86:	add    al,BYTE PTR [rax]
  42db88:	rcl    BYTE PTR [rdi+0x1],0x0
  42db8c:	sti    
  42db8d:	push   rdi
  42db8e:	add    DWORD PTR [rax],eax
  42db90:	or     al,0xfb
  42db92:	add    al,BYTE PTR [rax]
  42db94:	add    BYTE PTR [rax+0x1],bl
  42db97:	add    dh,dh
  42db99:	pop    rax
  42db9a:	add    DWORD PTR [rax],eax
  42db9c:	sbb    bl,bh
  42db9e:	add    al,BYTE PTR [rax]
  42dba0:	add    BYTE PTR [rcx+0x1],bl
  42dba3:	add    dh,al
  42dba5:	pop    rcx
  42dba6:	add    DWORD PTR [rax],eax
  42dba8:	sub    al,0xfb
  42dbaa:	add    al,BYTE PTR [rax]
  42dbac:	rcr    BYTE PTR [rcx+0x1],1
  42dbaf:	add    BYTE PTR [rax],cl
  42dbb1:	pop    rdx
  42dbb2:	add    DWORD PTR [rax],eax
  42dbb4:	cmp    bl,bh
  42dbb6:	add    al,BYTE PTR [rax]
  42dbb8:	adc    BYTE PTR [rdx+0x1],bl
  42dbbb:	add    bl,ah
  42dbbd:	pop    rdx
  42dbbe:	add    DWORD PTR [rax],eax
  42dbc0:	rex sti 
  42dbc2:	add    al,BYTE PTR [rax]
  42dbc4:	lock pop rdx
  42dbc6:	add    DWORD PTR [rax],eax
  42dbc8:	(bad)  
  42dbc9:	pop    rbx
  42dbca:	add    DWORD PTR [rax],eax
  42dbcc:	pop    rax
  42dbcd:	sti    
  42dbce:	add    al,BYTE PTR [rax]
  42dbd0:	adc    BYTE PTR [rbx+0x1],bl
  42dbd3:	add    BYTE PTR [rdx+0x5c00015b],al
  42dbd9:	sti    
  42dbda:	add    al,BYTE PTR [rax]
  42dbdc:	nop
  42dbdd:	pop    rbx
  42dbde:	add    DWORD PTR [rax],eax
  42dbe0:	test   eax,0x6c00015b
  42dbe5:	sti    
  42dbe6:	add    al,BYTE PTR [rax]
  42dbe8:	mov    al,0x5b
  42dbea:	add    DWORD PTR [rax],eax
  42dbec:	cmp    eax,0x7000015c
  42dbf1:	sti    
  42dbf2:	add    al,BYTE PTR [rax]
  42dbf4:	rex pop rsp
  42dbf6:	add    DWORD PTR [rax],eax
  42dbf8:	mov    eax,0x8000015c
  42dbfd:	sti    
  42dbfe:	add    al,BYTE PTR [rax]
  42dc00:	rcr    BYTE PTR [rcx+rax*1+0x0],0xe8
  42dc05:	pop    rsp
  42dc06:	add    DWORD PTR [rax],eax
  42dc08:	mov    ebx,?
  42dc0a:	add    al,BYTE PTR [rax]
  42dc0c:	lock pop rsp
  42dc0e:	add    DWORD PTR [rax],eax
  42dc10:	or     bl,BYTE PTR [rbp+0x1]
  42dc13:	add    BYTE PTR [rax+0x100002fb],dl
  42dc19:	pop    rbp
  42dc1a:	add    DWORD PTR [rax],eax
  42dc1c:	ds pop rbp
  42dc1e:	add    DWORD PTR [rax],eax
  42dc20:	xchg   esp,eax
  42dc21:	sti    
  42dc22:	add    al,BYTE PTR [rax]
  42dc24:	rex pop rbp
  42dc26:	add    DWORD PTR [rax],eax
  42dc28:	jl     0x42dc87
  42dc2a:	add    DWORD PTR [rax],eax
  42dc2c:	cwde   
  42dc2d:	sti    
  42dc2e:	add    al,BYTE PTR [rax]
  42dc30:	sbb    BYTE PTR [rbp+0x1],0x0
  42dc34:	neg    DWORD PTR [rbp+0x1]
  42dc37:	add    BYTE PTR [rbx+rdi*8+0x5e000002],bl
  42dc3e:	add    DWORD PTR [rax],eax
  42dc40:	xor    bl,BYTE PTR [rsi+0x1]
  42dc43:	add    BYTE PTR [rbx+rdi*8+0x5e400002],ch
  42dc4a:	add    DWORD PTR [rax],eax
  42dc4c:	outs   dx,BYTE PTR ds:[rsi]
  42dc4d:	pop    rsi
  42dc4e:	add    DWORD PTR [rax],eax
  42dc50:	mov    al,0xfb
  42dc52:	add    al,BYTE PTR [rax]
  42dc54:	jo     0x42dcb4
  42dc56:	add    DWORD PTR [rax],eax
  42dc58:	rcr    DWORD PTR [rsi+0x1],0x0
  42dc5c:	mov    ah,0xfb
  42dc5e:	add    al,BYTE PTR [rax]
  42dc60:	rcr    BYTE PTR [rsi+0x1],1
  42dc63:	add    BYTE PTR [rdi+rbx*2],ch
  42dc66:	add    DWORD PTR [rax],eax
  42dc68:	mov    esp,0x300002fb
  42dc6d:	pop    rdi
  42dc6e:	add    DWORD PTR [rax],eax
  42dc70:	ins    DWORD PTR es:[rdi],dx
  42dc71:	pop    rdi
  42dc72:	add    DWORD PTR [rax],eax
  42dc74:	(bad)  
  42dc75:	sti    
  42dc76:	add    al,BYTE PTR [rax]
  42dc78:	jo     0x42dcd9
  42dc7a:	add    DWORD PTR [rax],eax
  42dc7c:	punpcklbw mm0,DWORD PTR [rcx]
  42dc7f:	add    ah,cl
  42dc81:	sti    
  42dc82:	add    al,BYTE PTR [rax]
  42dc84:	adc    BYTE PTR [rax+0x1],ah
  42dc87:	add    BYTE PTR [rsi+0x60],al
  42dc8a:	add    DWORD PTR [rax],eax
  42dc8c:	fdivr  st,st(3)
  42dc8e:	add    al,BYTE PTR [rax]
  42dc90:	push   rax
  42dc91:	(bad)  
  42dc92:	add    DWORD PTR [rax],eax
  42dc94:	mov    BYTE PTR [rax+0x1],ah
  42dc97:	add    al,ah
  42dc99:	sti    
  42dc9a:	add    al,BYTE PTR [rax]
  42dc9c:	nop
  42dc9d:	(bad)  
  42dc9e:	add    DWORD PTR [rax],eax
  42dca0:	mov    esi,0xec000160
  42dca5:	sti    
  42dca6:	add    al,BYTE PTR [rax]
  42dca8:	shl    BYTE PTR [rax+0x1],0x0
  42dcac:	(bad)  [rax+0x1]
  42dcaf:	add    al,dh
  42dcb1:	sti    
  42dcb2:	add    al,BYTE PTR [rax]
  42dcb4:	loopne 0x42dd16
  42dcb6:	add    DWORD PTR [rax],eax
  42dcb8:	add    eax,0xf4000161
  42dcbd:	sti    
  42dcbe:	add    al,BYTE PTR [rax]
  42dcc0:	adc    BYTE PTR [rcx+0x1],ah
  42dcc3:	add    BYTE PTR [rbx+0x61],ch
  42dcc6:	add    DWORD PTR [rax],eax
  42dcc8:	clc    
  42dcc9:	sti    
  42dcca:	add    al,BYTE PTR [rax]
  42dccc:	jo     0x42dd2f
  42dcce:	add    DWORD PTR [rax],eax
  42dcd0:	cld    
  42dcd1:	(bad)  
  42dcd2:	add    DWORD PTR [rax],eax
  42dcd4:	add    al,0xfc
  42dcd6:	add    al,BYTE PTR [rax]
  42dcd8:	add    BYTE PTR [rdx+0x1],ah
  42dcdb:	add    BYTE PTR [rbx+0x62],cl
  42dcde:	add    DWORD PTR [rax],eax
  42dce0:	adc    al,0xfc
  42dce2:	add    al,BYTE PTR [rax]
  42dce4:	push   rax
  42dce5:	(bad)  
  42dce7:	add    BYTE PTR [rsi+0x20000162],dl
  42dced:	cld    
  42dcee:	add    al,BYTE PTR [rax]
  42dcf0:	movabs al,ds:0x2800016330000162
  42dcf9:	cld    
  42dcfa:	add    al,BYTE PTR [rax]
  42dcfc:	xor    BYTE PTR [rbx+0x1],ah
  42dcff:	add    BYTE PTR [rsi+0x63],cl
  42dd02:	add    DWORD PTR [rax],eax
  42dd04:	cmp    ah,bh
  42dd06:	add    al,BYTE PTR [rax]
  42dd08:	push   rax
  42dd09:	movsxd eax,DWORD PTR [rcx]
  42dd0b:	add    BYTE PTR [rdx+0x40000163],bl
  42dd11:	cld    
  42dd12:	add    al,BYTE PTR [rax]
  42dd14:	movabs al,ds:0x48000163c9000163
  42dd1d:	cld    
  42dd1e:	add    al,BYTE PTR [rax]
  42dd20:	shl    BYTE PTR [rbx+0x1],1
  42dd23:	add    ch,dh
  42dd25:	movsxd eax,DWORD PTR [rcx]
  42dd27:	add    BYTE PTR [rsp+rdi*8+0x2],cl
  42dd2b:	add    BYTE PTR [rax],al
  42dd2d:	add    DWORD PTR fs:[rax],eax
  42dd30:	and    eax,0x50000164
  42dd35:	cld    
  42dd36:	add    al,BYTE PTR [rax]
  42dd38:	xor    BYTE PTR [rcx+rax*1+0x0],ah
  42dd3c:	add    DWORD PTR fs:[eax],eax
  42dd40:	push   rsp
  42dd41:	cld    
  42dd42:	add    al,BYTE PTR [rax]
  42dd44:	jo     0x42ddaa
  42dd46:	add    DWORD PTR [rax],eax
  42dd48:	int    0x64
  42dd4a:	add    DWORD PTR [rax],eax
  42dd4c:	pop    rsp
  42dd4d:	cld    
  42dd4e:	add    al,BYTE PTR [rax]
  42dd50:	shl    BYTE PTR [rcx+rax*1+0x0],1
  42dd54:	out    dx,al
  42dd55:	add    DWORD PTR fs:[rax],eax
  42dd58:	push   0xfffffffff00002fc
  42dd5d:	add    DWORD PTR fs:[rax],eax
  42dd60:	stc    
  42dd61:	add    DWORD PTR fs:[rax],eax
  42dd64:	jo     0x42dd62
  42dd66:	add    al,BYTE PTR [rax]
  42dd68:	add    BYTE PTR [rbp+0x1],ah
  42dd6b:	add    BYTE PTR [rip+0x74000165],ch        # 0x7442ded6
  42dd71:	cld    
  42dd72:	add    al,BYTE PTR [rax]
  42dd74:	xor    BYTE PTR [rbp+0x1],ah
  42dd77:	add    BYTE PTR [rbp+riz*2+0x1],ah
  42dd7b:	add    BYTE PTR [rsp+rdi*8+0x2],bh
  42dd7f:	add    BYTE PTR [rax+0x65],dh
  42dd82:	add    DWORD PTR [rax],eax
  42dd84:	sub    esp,DWORD PTR [rsi+0x1]
  42dd87:	add    BYTE PTR [rsp+rdi*8+0x66300002],al
  42dd8e:	add    DWORD PTR [rax],eax
  42dd90:	add    WORD PTR gs:[rax],ax
  42dd94:	xchg   esp,eax
  42dd95:	cld    
  42dd96:	add    al,BYTE PTR [rax]
  42dd98:	jo     0x42de00
  42dd9a:	add    DWORD PTR [rax],eax
  42dd9c:	xchg   ebx,eax
  42dd9d:	add    WORD PTR [rax],ax
  42dda0:	movabs al,ds:0xc2000166a00002fc
  42dda9:	add    WORD PTR [rax],ax
  42ddac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42ddad:	cld    
  42ddae:	add    al,BYTE PTR [rax]
  42ddb0:	shl    BYTE PTR [rsi+0x1],1
  42ddb3:	add    BYTE PTR [rsi+0x67],al
  42ddb6:	add    DWORD PTR [rax],eax
  42ddb8:	test   al,0xfc
  42ddba:	add    al,BYTE PTR [rax]
  42ddbc:	push   rax
  42ddbd:	add    DWORD PTR [eax],eax
  42ddc0:	cdq    
  42ddc1:	add    DWORD PTR [eax],eax
  42ddc4:	mov    ah,0xfc
  42ddc6:	add    al,BYTE PTR [rax]
  42ddc8:	movabs al,ds:0xc0000167c3000167
  42ddd1:	cld    
  42ddd2:	add    al,BYTE PTR [rax]
  42ddd4:	shl    BYTE PTR [rdi+0x1],1
  42ddd7:	add    bl,dh
  42ddd9:	add    DWORD PTR [eax],eax
  42dddc:	(bad)  
  42dddd:	cld    
  42ddde:	add    al,BYTE PTR [rax]
  42dde0:	add    BYTE PTR [rax+0x1],ch
  42dde3:	add    BYTE PTR [rdi+0x68],dl
  42dde6:	add    DWORD PTR [rax],eax
  42dde8:	enter  0x2fc,0x0
  42ddec:	(bad)  
  42dded:	push   0x689f0001
  42ddf2:	add    DWORD PTR [rax],eax
  42ddf4:	int3   
  42ddf5:	cld    
  42ddf6:	add    al,BYTE PTR [rax]
  42ddf8:	movabs al,ds:0xd8000168e6000168
  42de01:	cld    
  42de02:	add    al,BYTE PTR [rax]
  42de04:	lock push 0x696b0001
  42de0a:	add    DWORD PTR [rax],eax
  42de0c:	fdiv   st(4),st
  42de0e:	add    al,BYTE PTR [rax]
  42de10:	jo     0x42de7b
  42de12:	add    DWORD PTR [rax],eax
  42de14:	imul   BYTE PTR [rcx+0x1]
  42de17:	add    al,ah
  42de19:	cld    
  42de1a:	add    al,BYTE PTR [rax]
  42de1c:	add    BYTE PTR [rdx+0x1],ch
  42de1f:	add    BYTE PTR [rip+0xffffffffe800016a],dh        # 0xffffffffe842df8f
  42de25:	cld    
  42de26:	add    al,BYTE PTR [rax]
  42de28:	rex push 0x1
  42de2b:	add    BYTE PTR [rbp-0xbfffe96],dh
  42de31:	cld    
  42de32:	add    al,BYTE PTR [rax]
  42de34:	shr    BYTE PTR [rdx+0x1],0x0
  42de38:	(bad)  
  42de39:	imul   eax,DWORD PTR [rcx],0x0
  42de3c:	cld    
  42de3d:	cld    
  42de3e:	add    al,BYTE PTR [rax]
  42de40:	xor    BYTE PTR [rbx+0x1],ch
  42de43:	add    BYTE PTR [rdi+0x800016b],bl
  42de49:	std    
  42de4a:	add    al,BYTE PTR [rax]
  42de4c:	movabs al,ds:0x1400016cf600016b
  42de55:	std    
  42de56:	add    al,BYTE PTR [rax]
  42de58:	add    BYTE PTR [rbp+0x1],ch
  42de5b:	add    BYTE PTR [rax+0x6d],ch
  42de5e:	add    DWORD PTR [rax],eax
  42de60:	and    al,0xfd
  42de62:	add    al,BYTE PTR [rax]
  42de64:	jo     0x42ded3
  42de66:	add    DWORD PTR [rax],eax
  42de68:	outs   dx,BYTE PTR cs:[rsi]
  42de6a:	add    DWORD PTR [rax],eax
  42de6c:	sub    al,0xfd
  42de6e:	add    al,BYTE PTR [rax]
  42de70:	xor    BYTE PTR [rsi+0x1],ch
  42de73:	add    ah,ch
  42de75:	outs   dx,BYTE PTR ds:[rsi]
  42de76:	add    DWORD PTR [rax],eax
  42de78:	xor    al,0xfd
  42de7a:	add    al,BYTE PTR [rax]
  42de7c:	lock outs dx,BYTE PTR ds:[rsi]
  42de7e:	add    DWORD PTR [rax],eax
  42de80:	mov    bh,0x6f
  42de82:	add    DWORD PTR [rax],eax
  42de84:	cmp    al,0xfd
  42de86:	add    al,BYTE PTR [rax]
  42de88:	shr    BYTE PTR [rdi+0x1],0x0
  42de8c:	shr    DWORD PTR [rdi+0x1],0x0
  42de90:	push   rax
  42de91:	std    
  42de92:	add    al,BYTE PTR [rax]
  42de94:	shr    BYTE PTR [rdi+0x1],1
  42de97:	add    BYTE PTR [rip+0x54000170],bl        # 0x5442e00d
  42de9d:	std    
  42de9e:	add    al,BYTE PTR [rax]
  42dea0:	and    BYTE PTR [rax+0x1],dh
  42dea3:	add    BYTE PTR [rax+rsi*2+0x1],ch
  42dea7:	add    BYTE PTR [rbp+rdi*8+0x2],bl
  42deab:	add    BYTE PTR [rax+0x70],dh
  42deae:	add    DWORD PTR [rax],eax
  42deb0:	mov    dh,0x70
  42deb2:	add    DWORD PTR [rax],eax
  42deb4:	push   0xffffffffc00002fd
  42deb9:	jo     0x42debc
  42debb:	add    BYTE PTR [rsi+0x7400017e],ch
  42dec1:	std    
  42dec2:	add    al,BYTE PTR [rax]
  42dec4:	mov    al,0x7e
  42dec6:	add    DWORD PTR [rax],eax
  42dec8:	xchg   edi,eax
  42dec9:	xchg   BYTE PTR [rcx],al
  42decb:	add    BYTE PTR [rbp+rdi*8-0x795ffffe],cl
  42ded2:	add    DWORD PTR [rax],eax
  42ded4:	loope  0x42de5c
  42ded6:	add    DWORD PTR [rax],eax
  42ded8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42ded9:	std    
  42deda:	add    al,BYTE PTR [rax]
  42dedc:	lock xchg BYTE PTR [rcx],al
  42dedf:	add    BYTE PTR [rcx],dl
  42dee1:	xchg   DWORD PTR [rcx],eax
  42dee3:	add    BYTE PTR [rbp+rdi*8-0x78dffffe],ch
  42deea:	add    DWORD PTR [rax],eax
  42deec:	xchg   DWORD PTR es:[rcx],eax
  42deef:	add    BYTE PTR [rax+0x300002fd],dh
  42def5:	xchg   DWORD PTR [rcx],eax
  42def7:	add    BYTE PTR [rsi],dh
  42def9:	xchg   DWORD PTR [rcx],eax
  42defb:	add    BYTE PTR [rbp+rdi*8-0x78bffffe],dh
  42df02:	add    DWORD PTR [rax],eax
  42df04:	pop    rbp
  42df05:	xchg   DWORD PTR [rcx],eax
  42df07:	add    BYTE PTR [rax+0x600002fd],bh
  42df0d:	xchg   DWORD PTR [rcx],eax
  42df0f:	add    BYTE PTR [rcx-0x77],ah
  42df12:	add    DWORD PTR [rax],eax
  42df14:	mov    esp,0x700002fd
  42df19:	mov    DWORD PTR [rcx],eax
  42df1b:	add    BYTE PTR [rdi-0x37fffe77],ch
  42df21:	std    
  42df22:	add    al,BYTE PTR [rax]
  42df24:	mov    al,0x89
  42df26:	add    DWORD PTR [rax],eax
  42df28:	add    ecx,DWORD PTR [rdx-0x22bffff]
  42df2e:	add    al,BYTE PTR [rax]
  42df30:	adc    BYTE PTR [rdx-0x758affff],cl
  42df36:	add    DWORD PTR [rax],eax
  42df38:	fdiv   st(5),st
  42df3a:	add    al,BYTE PTR [rax]
  42df3c:	or     BYTE PTR [rdx-0x7533ffff],0x1
  42df43:	add    al,ch
  42df45:	std    
  42df46:	add    al,BYTE PTR [rax]
  42df48:	ror    BYTE PTR [rdx-0x744dffff],1
  42df4e:	add    DWORD PTR [rax],eax
  42df50:	lock std 
  42df52:	add    al,BYTE PTR [rax]
  42df54:	ror    BYTE PTR [rbx-0x735dffff],0x1
  42df5b:	add    al,bh
  42df5d:	std    
  42df5e:	add    al,BYTE PTR [rax]
  42df60:	mov    al,0x8c
  42df62:	add    DWORD PTR [rax],eax
  42df64:	loope  0x42def9
  42df66:	add    DWORD PTR [rax],eax
  42df68:	add    dh,bh
  42df6a:	add    al,BYTE PTR [rax]
  42df6c:	lock xchg ebx,eax
  42df6e:	add    DWORD PTR [rax],eax
  42df70:	cmp    BYTE PTR [rcx+rax*1+0x2fe1800],dl
  42df77:	add    BYTE PTR [rax-0x6c],al
  42df7a:	add    DWORD PTR [rax],eax
  42df7c:	leave  
  42df7d:	xchg   esp,eax
  42df7e:	add    DWORD PTR [rax],eax
  42df80:	and    dh,bh
  42df82:	add    al,BYTE PTR [rax]
  42df84:	rcl    BYTE PTR [rcx+rax*1+0x19e5300],1
  42df8b:	add    BYTE PTR [rsi+rdi*8],ch
  42df8e:	add    al,BYTE PTR [rax]
  42df90:	(bad)  
  42df91:	sahf   
  42df92:	add    DWORD PTR [rax],eax
  42df94:	jne    0x42df35
  42df96:	add    DWORD PTR [rax],eax
  42df98:	rex.R inc BYTE PTR [rdx]
  42df9b:	add    BYTE PTR [rax-0x5efffe61],al
  42dfa1:	lahf   
  42dfa2:	add    DWORD PTR [rax],eax
  42dfa4:	rex.WR inc BYTE PTR [rdx]
  42dfa7:	add    BYTE PTR [rax-0x49fffe61],dh
  42dfad:	lahf   
  42dfae:	add    DWORD PTR [rax],eax
  42dfb0:	push   rax
  42dfb1:	inc    BYTE PTR [rdx]
  42dfb3:	add    al,al
  42dfb5:	lahf   
  42dfb6:	add    DWORD PTR [rax],eax
  42dfb8:	(bad)  
  42dfb9:	lahf   
  42dfba:	add    DWORD PTR [rax],eax
  42dfbc:	push   rsp
  42dfbd:	inc    BYTE PTR [rdx]
  42dfbf:	add    al,dl
  42dfc1:	lahf   
  42dfc2:	add    DWORD PTR [rax],eax
  42dfc4:	stc    
  42dfc5:	lahf   
  42dfc6:	add    DWORD PTR [rax],eax
  42dfc8:	pop    rax
  42dfc9:	inc    BYTE PTR [rdx]
  42dfcb:	add    BYTE PTR [rax],al
  42dfcd:	movabs al,ds:0xfe5c0001a2580001
  42dfd6:	add    al,BYTE PTR [rax]
  42dfd8:	(bad)  
  42dfd9:	movabs ds:0xfe6c0001a29f0001,al
  42dfe2:	add    al,BYTE PTR [rax]
  42dfe4:	movabs al,ds:0x780001a2f30001a2
  42dfed:	inc    BYTE PTR [rdx]
  42dfef:	add    BYTE PTR [rax],al
  42dff1:	movabs ds:0xfe800001a47c0001,eax
  42dffa:	add    al,BYTE PTR [rax]
  42dffc:	and    BYTE PTR [rcx+rax*1+0x1a60e00],0x0
  42e004:	xchg   esp,eax
  42e005:	inc    BYTE PTR [rdx]
  42e007:	add    BYTE PTR [rax],dl
  42e009:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42e00a:	add    DWORD PTR [rax],eax
  42e00c:	fsub   DWORD PTR [rsi-0x163ffff]
  42e012:	add    al,BYTE PTR [rax]
  42e014:	loopne 0x42dfbc
  42e016:	add    DWORD PTR [rax],eax
  42e018:	fisub  WORD PTR [rdi-0x15fffff]
  42e01e:	add    al,BYTE PTR [rax]
  42e020:	loopne 0x42dfc9
  42e022:	add    DWORD PTR [rax],eax
  42e024:	shr    DWORD PTR [rax-0x153ffff],1
  42e02a:	add    al,BYTE PTR [rax]
  42e02c:	loopne 0x42dfd6
  42e02e:	add    DWORD PTR [rax],eax
  42e030:	shr    BYTE PTR [rdx-0x13fffff],0x2
  42e037:	add    al,al
  42e039:	stos   BYTE PTR es:[rdi],al
  42e03a:	add    DWORD PTR [rax],eax
  42e03c:	out    0xaa,eax
  42e03e:	add    DWORD PTR [rax],eax
  42e040:	sar    dh,1
  42e042:	add    al,BYTE PTR [rax]
  42e044:	lock stos BYTE PTR es:[rdi],al
  42e046:	add    DWORD PTR [rax],eax
  42e048:	rex.RXB lods eax,DWORD PTR ds:[rsi]
  42e04a:	add    DWORD PTR [rax],eax
  42e04c:	(bad)  
  42e04d:	inc    BYTE PTR [rdx]
  42e04f:	add    BYTE PTR [rax-0x53],dl
  42e052:	add    DWORD PTR [rax],eax
  42e054:	or     DWORD PTR [rdi-0x113ffff],ebp
  42e05a:	add    al,BYTE PTR [rax]
  42e05c:	adc    BYTE PTR [rdi-0x4e78ffff],ch
  42e062:	add    DWORD PTR [rax],eax
  42e064:	cld    
  42e065:	inc    BYTE PTR [rdx]
  42e067:	add    al,al
  42e069:	mov    dl,0x1
  42e06b:	add    BYTE PTR [rdi-0x4d],ah
  42e06e:	add    DWORD PTR [rax],eax
  42e070:	adc    al,0xff
  42e072:	add    al,BYTE PTR [rax]
  42e074:	jo     0x42e029
  42e076:	add    DWORD PTR [rax],eax
  42e078:	mov    DWORD PTR [rbx-0xe3ffff],esi
  42e07e:	add    al,BYTE PTR [rax]
  42e080:	nop
  42e081:	mov    bl,0x1
  42e083:	add    ch,al
  42e085:	mov    bl,0x1
  42e087:	add    BYTE PTR [rdi+rdi*8],ah
  42e08a:	add    al,BYTE PTR [rax]
  42e08c:	shl    BYTE PTR [rbx-0x4bdaffff],1
  42e092:	add    DWORD PTR [rax],eax
  42e094:	sub    al,0xff
  42e096:	add    al,BYTE PTR [rax]
  42e098:	xor    BYTE PTR [rcx+rax*1+0x1b44c00],dh
  42e09f:	add    BYTE PTR [rax],bh
  42e0a1:	inc    DWORD PTR [rdx]
  42e0a3:	add    BYTE PTR [rax-0x4c],dl
  42e0a6:	add    DWORD PTR [rax],eax
  42e0a8:	pop    rdx
  42e0a9:	mov    ah,0x1
  42e0ab:	add    BYTE PTR [rdi+rdi*8],bh
  42e0ae:	add    al,BYTE PTR [rax]
  42e0b0:	(bad)  
  42e0b1:	mov    ah,0x1
  42e0b3:	add    BYTE PTR [rbx-0x4c],ah
  42e0b6:	add    DWORD PTR [rax],eax
  42e0b8:	rex inc DWORD PTR [rdx]
  42e0bb:	add    BYTE PTR [rax-0x4c],dh
  42e0be:	add    DWORD PTR [rax],eax
  42e0c0:	rex.RX mov bpl,0x1
  42e0c3:	add    BYTE PTR [rdi+rdi*8+0x2],al
  42e0c7:	add    BYTE PTR [rax-0x4b],dl
  42e0ca:	add    DWORD PTR [rax],eax
  42e0cc:	rex.WXB mov r14b,0x1
  42e0cf:	add    BYTE PTR [rdi+rdi*8+0x2],dl
  42e0d3:	add    BYTE PTR [rax-0x4a],dl
  42e0d6:	add    DWORD PTR [rax],eax
  42e0d8:	jg     0x42e090
  42e0da:	add    DWORD PTR [rax],eax
  42e0dc:	inc    DWORD PTR fs:[rdx]
  42e0df:	add    BYTE PTR [rax-0x16fffe4a],al
  42e0e5:	mov    dh,0x1
  42e0e7:	add    BYTE PTR [rdi+rdi*8+0x2],ch
  42e0eb:	add    al,dh
  42e0ed:	mov    dh,0x1
  42e0ef:	add    bl,dh
  42e0f1:	mov    dh,0x1
  42e0f3:	add    BYTE PTR [rax-0x1],bh
  42e0f6:	add    al,BYTE PTR [rax]
  42e0f8:	add    BYTE PTR [rdi-0x48beffff],dh
  42e0fe:	add    DWORD PTR [rax],eax
  42e100:	jl     0x42e101
  42e102:	add    al,BYTE PTR [rax]
  42e104:	push   rax
  42e105:	mov    bh,0x1
  42e107:	add    BYTE PTR [rdi+rsi*4+0x1],bl
  42e10b:	add    BYTE PTR [rdi+rdi*8-0x489ffffe],al
  42e112:	add    DWORD PTR [rax],eax
  42e114:	pop    rsp
  42e115:	mov    eax,0xff880001
  42e11a:	add    al,BYTE PTR [rax]
  42e11c:	(bad)  
  42e11d:	mov    eax,0xb8630001
  42e122:	add    DWORD PTR [rax],eax
  42e124:	movabs al,ds:0x740001b8700002ff
  42e12d:	mov    eax,0xffa40001
  42e132:	add    al,BYTE PTR [rax]
  42e134:	cmp    BYTE PTR [rax-0x477bffff],0x1
  42e13b:	add    BYTE PTR [rax-0x6ffffd01],ch
  42e141:	mov    eax,0xb8f10001
  42e146:	add    DWORD PTR [rax],eax
  42e148:	lods   al,BYTE PTR ds:[rsi]
  42e149:	inc    DWORD PTR [rdx]
  42e14b:	add    BYTE PTR [rax],al
  42e14d:	mov    ecx,0xba620001
  42e152:	add    DWORD PTR [rax],eax
  42e154:	mov    eax,0x700002ff
  42e159:	mov    edx,0xbd690001
  42e15e:	add    DWORD PTR [rax],eax
  42e160:	int3   
  42e161:	inc    DWORD PTR [rdx]
  42e163:	add    BYTE PTR [rax-0x43],dh
  42e166:	add    DWORD PTR [rax],eax
  42e168:	(bad)  
  42e169:	mov    edi,0xffe40001
  42e16e:	add    al,BYTE PTR [rax]
  42e170:	and    BYTE PTR [rdi-0x3ff3ffff],bh
  42e176:	add    DWORD PTR [rax],eax
  42e178:	in     al,dx
  42e179:	inc    DWORD PTR [rdx]
  42e17b:	add    BYTE PTR [rax],dl
  42e17d:	rol    BYTE PTR [rcx],0x0
  42e180:	enter  0x1c1,0x0
  42e184:	cld    
  42e185:	inc    DWORD PTR [rdx]
  42e187:	add    al,dl
  42e189:	rol    DWORD PTR [rcx],0x0
  42e18c:	cmp    eax,0x40001c2
  42e191:	add    BYTE PTR [rbx],al
  42e193:	add    BYTE PTR [rax-0x3e],al
  42e196:	add    DWORD PTR [rax],eax
  42e198:	mov    edi,0x140001c2
  42e19d:	add    BYTE PTR [rbx],al
  42e19f:	add    al,al
  42e1a1:	ret    0x1
  42e1a4:	pop    rdi
  42e1a5:	ret    
  42e1a6:	add    DWORD PTR [rax],eax
  42e1a8:	and    BYTE PTR [rax],al
  42e1aa:	add    eax,DWORD PTR [rax]
  42e1ac:	(bad)  
  42e1ad:	ret    
  42e1ae:	add    DWORD PTR [rax],eax
  42e1b0:	cmp    al,ah
  42e1b2:	add    DWORD PTR [rax],eax
  42e1b4:	sub    BYTE PTR [rax],al
  42e1b6:	add    eax,DWORD PTR [rax]
  42e1b8:	rex vmaxps xmm8,xmm15,xmm12
  42e1be:	add    DWORD PTR [rax],eax
  42e1c0:	xor    BYTE PTR [rax],al
  42e1c2:	add    eax,DWORD PTR [rax]
  42e1c4:	(bad)  
  42e1c5:	(bad)
  42e1c9:	(bad)
  42e1cd:	add    BYTE PTR [rbx],al
  42e1cf:	add    BYTE PTR [rax-0x3afffe3c],al
  42e1d5:	(bad)
  42e1d9:	add    BYTE PTR [rbx],al
  42e1db:	add    al,dl
  42e1dd:	(bad)
  42e1e1:	(bad)
  42e1e4:	cmp    al,0x0
  42e1e6:	add    eax,DWORD PTR [rax]
  42e1e8:	jo     0x42e1af
  42e1ea:	add    DWORD PTR [rax],eax
  42e1ec:	mov    bl,0xc5
  42e1ee:	add    DWORD PTR [rax],eax
  42e1f0:	rex.W add BYTE PTR [rbx],al
  42e1f3:	add    al,al
  42e1f5:	(bad)
  42e1f8:	sti    
  42e1f9:	(bad)
  42e1fc:	push   rsp
  42e1fd:	add    BYTE PTR [rbx],al
  42e1ff:	add    BYTE PTR [rax],al
  42e201:	mov    BYTE PTR [rcx],0x0
  42e204:	mov    es,esi
  42e206:	add    DWORD PTR [rax],eax
  42e208:	pop    rsp
  42e209:	add    BYTE PTR [rbx],al
  42e20b:	add    BYTE PTR [rax-0x37fffe3a],dl
  42e211:	mov    BYTE PTR [rcx],0x0
  42e214:	push   0xffffffffd0000300
  42e219:	mov    BYTE PTR [rcx],0x0
  42e21c:	and    eax,0x740001c7
  42e221:	add    BYTE PTR [rbx],al
  42e223:	add    BYTE PTR [rax],dh
  42e225:	mov    DWORD PTR [rcx],0x1c7de00
  42e22b:	add    BYTE PTR [rax+0x20000300],al
  42e231:	enter  0x1,0xca
  42e235:	enter  0x1,0x90
  42e239:	add    BYTE PTR [rbx],al
  42e23b:	add    al,dl
  42e23d:	enter  0x1,0x50
  42e241:	leave  
  42e242:	add    DWORD PTR [rax],eax
  42e244:	movabs al,ds:0x60001c950000300
  42e24d:	int    0x1
  42e24f:	add    BYTE PTR [rax+rax*1-0x32effffd],ch
  42e256:	add    DWORD PTR [rax],eax
  42e258:	cmc    
  42e259:	rol    DWORD PTR [rcx],cl
  42e25b:	add    ah,al
  42e25d:	add    BYTE PTR [rbx],al
  42e25f:	add    BYTE PTR [rax],al
  42e261:	(bad)  
  42e262:	add    DWORD PTR [rax],eax
  42e264:	and    dl,ah
  42e266:	add    DWORD PTR [rax],eax
  42e268:	fadd   QWORD PTR [rax]
  42e26a:	add    eax,DWORD PTR [rax]
  42e26c:	xor    ah,dl
  42e26e:	add    DWORD PTR [rax],eax
  42e270:	push   rax
  42e271:	(bad)  
  42e272:	add    DWORD PTR [rax],eax
  42e274:	in     al,0x0
  42e276:	add    eax,DWORD PTR [rax]
  42e278:	push   rax
  42e279:	(bad)  
  42e27a:	add    DWORD PTR [rax],eax
  42e27c:	jo     0x42e252
  42e27e:	add    DWORD PTR [rax],eax
  42e280:	in     al,dx
  42e281:	add    BYTE PTR [rbx],al
  42e283:	add    BYTE PTR [rax-0x2c],dh
  42e286:	add    DWORD PTR [rax],eax
  42e288:	retf   0x1d6
  42e28b:	add    ah,dh
  42e28d:	add    BYTE PTR [rbx],al
  42e28f:	add    al,dl
  42e291:	(bad)  
  42e292:	add    DWORD PTR [rax],eax
  42e294:	in     al,dx
  42e295:	fadd   DWORD PTR [rcx]
  42e297:	add    BYTE PTR [rcx+rax*1],cl
  42e29a:	add    eax,DWORD PTR [rax]
  42e29c:	lock fadd DWORD PTR [rcx]
  42e29f:	add    BYTE PTR [rbx],ah
  42e2a1:	fiadd  DWORD PTR [rcx]
  42e2a3:	add    BYTE PTR [rcx+rax*1],ah
  42e2a6:	add    eax,DWORD PTR [rax]
  42e2a8:	xor    dl,bl
  42e2aa:	add    DWORD PTR [rax],eax
  42e2ac:	lock fiadd DWORD PTR [rcx]
  42e2af:	add    BYTE PTR [rax],bh
  42e2b1:	add    DWORD PTR [rbx],eax
  42e2b3:	add    al,dh
  42e2b5:	fiadd  DWORD PTR [rcx]
  42e2b7:	add    ch,dh
  42e2b9:	fiadd  DWORD PTR [rcx]
  42e2bb:	add    BYTE PTR [rax+0x1],cl
  42e2be:	add    eax,DWORD PTR [rax]
  42e2c0:	add    ch,bl
  42e2c2:	add    DWORD PTR [rax],eax
  42e2c4:	or     ch,bl
  42e2c6:	add    DWORD PTR [rax],eax
  42e2c8:	add    QWORD PTR [rbx],r8
  42e2cb:	add    BYTE PTR [rax],dl
  42e2cd:	fld    QWORD PTR [rcx]
  42e2cf:	add    BYTE PTR [rbx],bl
  42e2d1:	fld    QWORD PTR [rcx]
  42e2d3:	add    BYTE PTR [rax+0x1],dl
  42e2d6:	add    eax,DWORD PTR [rax]
  42e2d8:	lock fld QWORD PTR [rcx]
  42e2db:	add    BYTE PTR [rsi+riz*8+0x1],dh
  42e2df:	add    al,dh
  42e2e1:	lock add al,BYTE PTR [rax]
  42e2e4:	and    dh,0x1
  42e2e7:	add    BYTE PTR [rdx-0x19],cl
  42e2ea:	add    DWORD PTR [rax],eax
  42e2ec:	in     al,dx
  42e2ed:	stc    
  42e2ee:	add    al,BYTE PTR [rax]

Disassembly of section .xdata:

000000000042f000 <.xdata>:
  42f000:	add    DWORD PTR [rax],eax
  42f002:	add    BYTE PTR [rax],al
  42f004:	add    DWORD PTR [rcx+rax*1],eax
  42f007:	add    BYTE PTR [rdx+rax*2],al
  42f00a:	add    BYTE PTR [rax],al
  42f00c:	add    DWORD PTR [rcx+rax*1],eax
  42f00f:	add    BYTE PTR [rdx+riz*2],al
  42f012:	add    BYTE PTR [rax],al
  42f014:	add    DWORD PTR [rdi],ecx
  42f016:	or     BYTE PTR [rax],al
  42f018:	lgdt   [rbx]
  42f01b:	add    BYTE PTR [rax],cl
  42f01d:	xor    BYTE PTR [rdi],al
  42f01f:	(bad)  
  42f020:	(bad)  
  42f021:	jo     0x42f028
  42f023:	push   rax
  42f024:	add    al,0xc0
  42f026:	add    dl,al
  42f028:	or     DWORD PTR [rcx+rax*1],eax
  42f02b:	add    BYTE PTR [rdx+rax*2],al
  42f02e:	add    BYTE PTR [rax],al
  42f030:	clc    
  42f031:	fadd   QWORD PTR [rcx]
  42f033:	add    BYTE PTR [rcx],al
  42f035:	add    BYTE PTR [rax],al
  42f037:	add    ah,dl
  42f039:	adc    al,0x0
  42f03b:	add    ah,ch
  42f03d:	adc    al,0x0
  42f03f:	add    BYTE PTR [rax],dl
  42f041:	rol    BYTE PTR [rcx],0x0
  42f044:	in     al,dx
  42f045:	adc    al,0x0
  42f047:	add    BYTE PTR [rcx],cl
  42f049:	add    al,0x1
  42f04b:	add    BYTE PTR [rdx+rax*2],al
  42f04e:	add    BYTE PTR [rax],al
  42f050:	clc    
  42f051:	fadd   QWORD PTR [rcx]
  42f053:	add    BYTE PTR [rcx],al
  42f055:	add    BYTE PTR [rax],al
  42f057:	add    BYTE PTR [rdx*1+0x151c0000],al
  42f05e:	add    BYTE PTR [rax],al
  42f060:	adc    al,al
  42f062:	add    DWORD PTR [rax],eax
  42f064:	sbb    al,0x15
  42f066:	add    BYTE PTR [rax],al
  42f068:	add    DWORD PTR [rax],eax
  42f06a:	add    BYTE PTR [rax],al
  42f06c:	add    DWORD PTR [rax],eax
  42f06e:	add    BYTE PTR [rax],al
  42f070:	add    DWORD PTR [rax],edx
  42f072:	or     DWORD PTR [rax],eax
  42f074:	adc    dl,ah
  42f076:	or     al,0x30
  42f078:	or     esp,DWORD PTR [rax+0xa]
  42f07b:	jo     0x42f086
  42f07d:	push   rax
  42f07e:	or     al,al
  42f080:	(bad)  
  42f081:	rol    BYTE PTR [rax+riz*8],1
  42f084:	add    dh,al
  42f086:	add    BYTE PTR [rax],al
  42f088:	add    DWORD PTR [rdi+rax*1],ecx
  42f08b:	add    BYTE PTR [rdx+rax*4],cl
  42f08e:	or     BYTE PTR [rax],dh
  42f090:	(bad)  
  42f091:	(bad)  
  42f092:	(bad)  
  42f093:	jo     0x42f09a
  42f095:	push   rax
  42f096:	add    al,0xc0
  42f098:	add    dl,al
  42f09a:	add    BYTE PTR [rax],al
  42f09c:	add    DWORD PTR [rax],edx
  42f09e:	or     DWORD PTR [rax],eax
  42f0a0:	adc    dl,al
  42f0a2:	or     al,0x30
  42f0a4:	or     esp,DWORD PTR [rax+0xa]
  42f0a7:	jo     0x42f0b2
  42f0a9:	push   rax
  42f0aa:	or     al,al
  42f0ac:	(bad)  
  42f0ad:	rol    BYTE PTR [rax+riz*8],1
  42f0b0:	add    dh,al
  42f0b2:	add    BYTE PTR [rax],al
  42f0b4:	add    DWORD PTR [rcx],ebx
  42f0b6:	or     al,BYTE PTR [rax]
  42f0b8:	sbb    DWORD PTR [rcx],eax
  42f0ba:	sbb    eax,0x10301104
  42f0bf:	(bad)  
  42f0c0:	pshufw mm1,QWORD PTR [rsi],0x50
  42f0c4:	or     eax,0x4d00bc0
  42f0c9:	loopne 0x42f0cd
  42f0cb:	lock add DWORD PTR [rsi],ecx
  42f0ce:	or     BYTE PTR [rax],al
  42f0d0:	(bad)  
  42f0d1:	push   rdx
  42f0d2:	or     dh,BYTE PTR [rax]
  42f0d4:	or     DWORD PTR [rax+0x8],esp
  42f0d7:	jo     0x42f0e0
  42f0d9:	push   rax
  42f0da:	(bad)  
  42f0db:	rol    BYTE PTR [rax+rdx*8],0x2
  42f0df:	loopne 0x42f0e2
  42f0e1:	add    al,0x1
  42f0e3:	add    BYTE PTR [rdx+rax*2],al
  42f0e6:	add    BYTE PTR [rax],al
  42f0e8:	add    DWORD PTR [rcx+rax*1],eax
  42f0eb:	add    BYTE PTR [rdx+rax*2],al
  42f0ee:	add    BYTE PTR [rax],al
  42f0f0:	add    DWORD PTR [rax],edx
  42f0f2:	or     DWORD PTR [rax],eax
  42f0f4:	adc    BYTE PTR [rdx+0x600b300c],al
  42f0fa:	or     dh,BYTE PTR [rax+0x9]
  42f0fd:	push   rax
  42f0fe:	or     al,al
  42f100:	(bad)  
  42f101:	rol    BYTE PTR [rax+riz*8],1
  42f104:	add    dh,al
  42f106:	add    BYTE PTR [rax],al
  42f108:	add    DWORD PTR [rax],eax
  42f10a:	add    BYTE PTR [rax],al
  42f10c:	add    DWORD PTR [rdi+rax*1],ecx
  42f10f:	add    BYTE PTR [rdx+riz*2],cl
  42f112:	or     BYTE PTR [rax],dh
  42f114:	(bad)  
  42f115:	(bad)  
  42f116:	(bad)  
  42f117:	jo     0x42f11e
  42f119:	push   rax
  42f11a:	add    al,0xc0
  42f11c:	add    dl,al
  42f11e:	add    BYTE PTR [rax],al
  42f120:	add    DWORD PTR [rcx+rax*1],eax
  42f123:	add    BYTE PTR [rdx+rax*2],al
  42f126:	add    BYTE PTR [rax],al
  42f128:	add    DWORD PTR [rcx+rax*1],eax
  42f12b:	add    BYTE PTR [rdx+rax*2],al
  42f12e:	add    BYTE PTR [rax],al
  42f130:	add    DWORD PTR [rax],ecx
  42f132:	add    eax,0x4620800
  42f137:	xor    BYTE PTR [rbx],al
  42f139:	(bad)  
  42f13a:	add    dh,BYTE PTR [rax+0x1]
  42f13d:	push   rax
  42f13e:	add    BYTE PTR [rax],al
  42f140:	add    DWORD PTR [rsi],eax
  42f142:	add    eax,DWORD PTR [rax]
  42f144:	(bad)  
  42f145:	(bad)  
  42f147:	xor    BYTE PTR [rcx],al
  42f149:	(bad)  
  42f14a:	add    BYTE PTR [rax],al
  42f14c:	add    DWORD PTR [rcx+rax*1],eax
  42f14f:	add    BYTE PTR [rdx+rax*2],al
  42f152:	add    BYTE PTR [rax],al
  42f154:	add    DWORD PTR [rax],eax
  42f156:	add    BYTE PTR [rax],al
  42f158:	add    DWORD PTR [rax],eax
  42f15a:	add    BYTE PTR [rax],al
  42f15c:	add    DWORD PTR [rax],eax
  42f15e:	add    BYTE PTR [rax],al
  42f160:	add    DWORD PTR [rip+0x72050002],eax        # 0x7247f168
  42f166:	add    DWORD PTR [rax],esi
  42f168:	add    DWORD PTR [rip+0x72050002],eax        # 0x7247f170
  42f16e:	add    DWORD PTR [rax],esi
  42f170:	add    DWORD PTR [rdi],eax
  42f172:	add    al,0x0
  42f174:	(bad)  
  42f175:	push   rdx
  42f176:	add    esi,DWORD PTR [rax]
  42f178:	add    ah,BYTE PTR [rax+0x1]
  42f17b:	jo     0x42f17e
  42f17d:	(bad)  
  42f17e:	add    eax,DWORD PTR [rax]
  42f180:	(bad)  
  42f181:	(bad)  
  42f183:	xor    BYTE PTR [rcx],al
  42f185:	(bad)  
  42f186:	add    BYTE PTR [rax],al
  42f188:	add    DWORD PTR [rax],eax
  42f18a:	add    BYTE PTR [rax],al
  42f18c:	add    DWORD PTR [rsi],eax
  42f18e:	add    eax,DWORD PTR [rax]
  42f190:	(bad)  
  42f191:	rex.X add sil,BYTE PTR [rax]
  42f194:	add    DWORD PTR [rax+0x0],esp
  42f197:	add    BYTE PTR [rcx],al
  42f199:	adc    BYTE PTR [rcx],cl
  42f19b:	add    BYTE PTR [rax],dl
  42f19d:	movabs ds:0x5009700a600b300c,al
  42f1a6:	or     al,al
  42f1a8:	(bad)  
  42f1a9:	rol    BYTE PTR [rax+riz*8],1
  42f1ac:	add    dh,al
  42f1ae:	add    BYTE PTR [rax],al
  42f1b0:	add    DWORD PTR [rsi],ecx
  42f1b2:	or     BYTE PTR [rax],al
  42f1b4:	(bad)  
  42f1b5:	jb     0x42f1c1
  42f1b7:	xor    BYTE PTR [rcx],cl
  42f1b9:	(bad)  
  42f1ba:	or     BYTE PTR [rax+0x7],dh
  42f1bd:	push   rax
  42f1be:	(bad)  
  42f1bf:	rol    BYTE PTR [rax+rdx*8],0x2
  42f1c3:	loopne 0x42f1c6
  42f1c5:	or     BYTE PTR [rip+0x4420800],al        # 0x484f9cb
  42f1cb:	xor    BYTE PTR [rbx],al
  42f1cd:	(bad)  
  42f1ce:	add    dh,BYTE PTR [rax+0x1]
  42f1d1:	push   rax
  42f1d2:	add    BYTE PTR [rax],al
  42f1d4:	add    DWORD PTR [rax],eax
  42f1d6:	add    BYTE PTR [rax],al
  42f1d8:	add    DWORD PTR [rax],edx
  42f1da:	or     DWORD PTR [rax],eax
  42f1dc:	adc    BYTE PTR [rdx+0xc],ah
  42f1df:	xor    BYTE PTR [rbx],cl
  42f1e1:	(bad)  
  42f1e2:	or     dh,BYTE PTR [rax+0x9]
  42f1e5:	push   rax
  42f1e6:	or     al,al
  42f1e8:	(bad)  
  42f1e9:	rol    BYTE PTR [rax+riz*8],1
  42f1ec:	add    dh,al
  42f1ee:	add    BYTE PTR [rax],al
  42f1f0:	add    DWORD PTR [rdx],ecx
  42f1f2:	(bad)  
  42f1f3:	add    BYTE PTR [rdx],cl
  42f1f5:	mov    dl,0x6
  42f1f7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2f65d
  42f1fd:	push   rax
  42f1fe:	add    al,al
  42f200:	add    DWORD PTR [rdx],ecx
  42f202:	(bad)  
  42f203:	add    BYTE PTR [rdx],cl
  42f205:	jb     0x42f20d
  42f207:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2f66d
  42f20d:	push   rax
  42f20e:	add    al,al
  42f210:	add    DWORD PTR [rbx],edx
  42f212:	or     al,BYTE PTR [rax]
  42f214:	adc    eax,DWORD PTR [rcx]
  42f216:	sbb    DWORD PTR [rax],eax
  42f218:	or     al,0x30
  42f21a:	or     esp,DWORD PTR [rax+0xa]
  42f21d:	jo     0x42f228
  42f21f:	push   rax
  42f220:	or     al,al
  42f222:	(bad)  
  42f223:	rol    BYTE PTR [rax+riz*8],1
  42f226:	add    dh,al
  42f228:	add    DWORD PTR [rax],eax
  42f22a:	add    BYTE PTR [rax],al
  42f22c:	add    DWORD PTR [rax],eax
  42f22e:	add    BYTE PTR [rax],al
  42f230:	add    DWORD PTR [rax],eax
  42f232:	add    BYTE PTR [rax],al
  42f234:	add    DWORD PTR [rcx+rax*1],eax
  42f237:	add    BYTE PTR [rdx+rax*2],al
  42f23a:	add    BYTE PTR [rax],al
  42f23c:	add    DWORD PTR [rax],eax
  42f23e:	add    BYTE PTR [rax],al
  42f240:	add    DWORD PTR [rax],eax
  42f242:	add    BYTE PTR [rax],al
  42f244:	add    DWORD PTR [rcx+rax*1],eax
  42f247:	add    BYTE PTR [rdx+rax*2],al
  42f24a:	add    BYTE PTR [rax],al
  42f24c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f254
  42f252:	add    DWORD PTR [rax],esi
  42f254:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f25c
  42f25a:	add    DWORD PTR [rax],esi
  42f25c:	add    DWORD PTR [rsi],eax
  42f25e:	add    eax,DWORD PTR [rax]
  42f260:	(bad)  
  42f261:	rex.X add sil,BYTE PTR [rax]
  42f264:	add    DWORD PTR [rax+0x0],esp
  42f267:	add    BYTE PTR [rcx],al
  42f269:	(bad)  
  42f26a:	add    eax,DWORD PTR [rax]
  42f26c:	(bad)  
  42f26d:	rex.X add sil,BYTE PTR [rax]
  42f270:	add    DWORD PTR [rax+0x0],esp
  42f273:	add    BYTE PTR [rcx],al
  42f275:	add    BYTE PTR [rax],al
  42f277:	add    BYTE PTR [rcx],al
  42f279:	add    BYTE PTR [rax],al
  42f27b:	add    BYTE PTR [rcx],al
  42f27d:	add    BYTE PTR [rax],al
  42f27f:	add    BYTE PTR [rcx],al
  42f281:	(bad)  
  42f282:	add    eax,DWORD PTR [rax]
  42f284:	(bad)  
  42f285:	rex.X add sil,BYTE PTR [rax]
  42f288:	add    DWORD PTR [rax+0x0],esp
  42f28b:	add    BYTE PTR [rcx],al
  42f28d:	add    BYTE PTR [rax],al
  42f28f:	add    BYTE PTR [rcx],al
  42f291:	add    eax,0x32050002
  42f296:	add    DWORD PTR [rax],esi
  42f298:	add    DWORD PTR [rsi],eax
  42f29a:	add    eax,DWORD PTR [rax]
  42f29c:	(bad)  
  42f29d:	rex.X add sil,BYTE PTR [rax]
  42f2a0:	add    DWORD PTR [rax+0x0],esp
  42f2a3:	add    BYTE PTR [rcx],al
  42f2a5:	add    eax,0x32050002
  42f2aa:	add    DWORD PTR [rax],esi
  42f2ac:	add    DWORD PTR [rsi],eax
  42f2ae:	add    eax,DWORD PTR [rax]
  42f2b0:	(bad)  
  42f2b1:	rex.X add sil,BYTE PTR [rax]
  42f2b4:	add    DWORD PTR [rax+0x0],esp
  42f2b7:	add    BYTE PTR [rcx],al
  42f2b9:	or     al,BYTE PTR [rsi]
  42f2bb:	add    BYTE PTR [rdx],cl
  42f2bd:	jb     0x42f2c5
  42f2bf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2f725
  42f2c5:	push   rax
  42f2c6:	add    al,al
  42f2c8:	add    DWORD PTR [rdi+rax*1],ecx
  42f2cb:	add    BYTE PTR [rdx+rax*4],cl
  42f2ce:	or     BYTE PTR [rax],dh
  42f2d0:	(bad)  
  42f2d1:	(bad)  
  42f2d2:	(bad)  
  42f2d3:	jo     0x42f2da
  42f2d5:	push   rax
  42f2d6:	add    al,0xc0
  42f2d8:	add    dl,al
  42f2da:	add    BYTE PTR [rax],al
  42f2dc:	add    DWORD PTR [rdi],eax
  42f2de:	add    al,0x0
  42f2e0:	(bad)  
  42f2e1:	xor    al,BYTE PTR [rbx]
  42f2e3:	xor    BYTE PTR [rdx],al
  42f2e5:	(bad)  
  42f2e6:	add    DWORD PTR [rax+0x1],esi
  42f2e9:	(bad)  
  42f2ea:	add    eax,DWORD PTR [rax]
  42f2ec:	(bad)  
  42f2ed:	rex.X add sil,BYTE PTR [rax]
  42f2f0:	add    DWORD PTR [rax+0x0],esp
  42f2f3:	add    BYTE PTR [rcx],al
  42f2f5:	(bad)  
  42f2f6:	add    eax,DWORD PTR [rax]
  42f2f8:	(bad)  
  42f2f9:	(bad)  
  42f2fb:	xor    BYTE PTR [rcx],al
  42f2fd:	(bad)  
  42f2fe:	add    BYTE PTR [rax],al
  42f300:	add    DWORD PTR [rax],eax
  42f302:	add    BYTE PTR [rax],al
  42f304:	add    DWORD PTR [rdi],eax
  42f306:	add    al,0x0
  42f308:	(bad)  
  42f309:	xor    al,BYTE PTR [rbx]
  42f30b:	xor    BYTE PTR [rdx],al
  42f30d:	(bad)  
  42f30e:	add    DWORD PTR [rax+0x1],esi
  42f311:	or     al,0x7
  42f313:	add    BYTE PTR [rdx+rax*2],cl
  42f316:	or     BYTE PTR [rax],dh
  42f318:	(bad)  
  42f319:	(bad)  
  42f31a:	(bad)  
  42f31b:	jo     0x42f322
  42f31d:	push   rax
  42f31e:	add    al,0xc0
  42f320:	add    dl,al
  42f322:	add    BYTE PTR [rax],al
  42f324:	add    DWORD PTR [rsi],eax
  42f326:	add    eax,DWORD PTR [rax]
  42f328:	(bad)  
  42f329:	rex.X add sil,BYTE PTR [rax]
  42f32c:	add    DWORD PTR [rax+0x0],esp
  42f32f:	add    BYTE PTR [rcx],al
  42f331:	add    eax,0x32050002
  42f336:	add    DWORD PTR [rax],esi
  42f338:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f340
  42f33e:	add    DWORD PTR [rax],esi
  42f340:	add    DWORD PTR [rax],eax
  42f342:	add    BYTE PTR [rax],al
  42f344:	add    DWORD PTR [rcx+rax*1],eax
  42f347:	add    BYTE PTR [rdx+rax*2],al
  42f34a:	add    BYTE PTR [rax],al
  42f34c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f354
  42f352:	add    DWORD PTR [rax],esi
  42f354:	add    DWORD PTR [rcx+rax*1],eax
  42f357:	add    BYTE PTR [rdx+riz*2],al
  42f35a:	add    BYTE PTR [rax],al
  42f35c:	add    DWORD PTR [rcx+rax*1],eax
  42f35f:	add    BYTE PTR [rdx+riz*2],al
  42f362:	add    BYTE PTR [rax],al
  42f364:	add    DWORD PTR [rcx+rax*1],eax
  42f367:	add    BYTE PTR [rdx+riz*2],al
  42f36a:	add    BYTE PTR [rax],al
  42f36c:	add    DWORD PTR [rsi],eax
  42f36e:	add    eax,DWORD PTR [rax]
  42f370:	(bad)  
  42f371:	rex.X add sil,BYTE PTR [rax]
  42f374:	add    DWORD PTR [rax+0x0],esp
  42f377:	add    BYTE PTR [rcx],al
  42f379:	(bad)  
  42f37a:	add    eax,DWORD PTR [rax]
  42f37c:	(bad)  
  42f37d:	rex.X add sil,BYTE PTR [rax]
  42f380:	add    DWORD PTR [rax+0x0],esp
  42f383:	add    BYTE PTR [rcx],al
  42f385:	(bad)  
  42f386:	add    eax,DWORD PTR [rax]
  42f388:	(bad)  
  42f389:	rex.X add sil,BYTE PTR [rax]
  42f38c:	add    DWORD PTR [rax+0x0],esi
  42f38f:	add    BYTE PTR [rcx],al
  42f391:	add    eax,0x32050002
  42f396:	add    DWORD PTR [rax],esi
  42f398:	add    DWORD PTR [rsi],eax
  42f39a:	add    eax,DWORD PTR [rax]
  42f39c:	(bad)  
  42f39d:	rex.X add sil,BYTE PTR [rax]
  42f3a0:	add    DWORD PTR [rax+0x0],esp
  42f3a3:	add    BYTE PTR [rcx],al
  42f3a5:	(bad)  
  42f3a6:	add    eax,DWORD PTR [rax]
  42f3a8:	(bad)  
  42f3a9:	(bad)  
  42f3ab:	xor    BYTE PTR [rcx],al
  42f3ad:	(bad)  
  42f3ae:	add    BYTE PTR [rax],al
  42f3b0:	add    DWORD PTR [rax],eax
  42f3b2:	add    BYTE PTR [rax],al
  42f3b4:	add    DWORD PTR [rdi],eax
  42f3b6:	add    al,0x0
  42f3b8:	(bad)  
  42f3b9:	push   rdx
  42f3ba:	add    esi,DWORD PTR [rax]
  42f3bc:	add    ah,BYTE PTR [rax+0x1]
  42f3bf:	jo     0x42f3c2
  42f3c1:	(bad)  
  42f3c2:	add    eax,DWORD PTR [rax]
  42f3c4:	(bad)  
  42f3c5:	rex.X add sil,BYTE PTR [rax]
  42f3c8:	add    DWORD PTR [rax+0x0],esp
  42f3cb:	add    BYTE PTR [rcx],al
  42f3cd:	add    BYTE PTR [rax],al
  42f3cf:	add    BYTE PTR [rcx],al
  42f3d1:	add    al,0x1
  42f3d3:	add    BYTE PTR [rdx+rax*2],al
  42f3d6:	add    BYTE PTR [rax],al
  42f3d8:	add    DWORD PTR [rax],eax
  42f3da:	add    BYTE PTR [rax],al
  42f3dc:	add    DWORD PTR [rdx],ecx
  42f3de:	(bad)  
  42f3df:	add    BYTE PTR [rdx],cl
  42f3e1:	push   rdx
  42f3e2:	(bad)  
  42f3e3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2f849
  42f3e9:	push   rax
  42f3ea:	add    al,al
  42f3ec:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f3f4
  42f3f2:	add    DWORD PTR [rax],esi
  42f3f4:	add    DWORD PTR [rdi],eax
  42f3f6:	add    al,0x0
  42f3f8:	(bad)  
  42f3f9:	xor    al,BYTE PTR [rbx]
  42f3fb:	xor    BYTE PTR [rdx],al
  42f3fd:	(bad)  
  42f3fe:	add    DWORD PTR [rax+0x1],esi
  42f401:	(bad)  
  42f402:	add    al,0x0
  42f404:	(bad)  
  42f405:	xor    al,BYTE PTR [rbx]
  42f407:	xor    BYTE PTR [rdx],al
  42f409:	(bad)  
  42f40a:	add    DWORD PTR [rax+0x1],esi
  42f40d:	or     al,0x7
  42f40f:	add    BYTE PTR [rdx+rax*2],cl
  42f412:	or     BYTE PTR [rax],dh
  42f414:	(bad)  
  42f415:	(bad)  
  42f416:	(bad)  
  42f417:	jo     0x42f41e
  42f419:	push   rax
  42f41a:	add    al,0xc0
  42f41c:	add    dl,al
  42f41e:	add    BYTE PTR [rax],al
  42f420:	add    DWORD PTR [rax],edx
  42f422:	or     DWORD PTR [rax],eax
  42f424:	adc    BYTE PTR [rdx+0x600b300c],al
  42f42a:	or     dh,BYTE PTR [rax+0x9]
  42f42d:	push   rax
  42f42e:	or     al,al
  42f430:	(bad)  
  42f431:	rol    BYTE PTR [rax+riz*8],1
  42f434:	add    dh,al
  42f436:	add    BYTE PTR [rax],al
  42f438:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f440
  42f43e:	add    DWORD PTR [rax],esi
  42f440:	add    DWORD PTR [rsi],eax
  42f442:	add    eax,DWORD PTR [rax]
  42f444:	(bad)  
  42f445:	(bad)  
  42f446:	add    dh,BYTE PTR [rax]
  42f448:	add    DWORD PTR [rax+0x0],esp
  42f44b:	add    BYTE PTR [rcx],al
  42f44d:	adc    BYTE PTR [rcx],cl
  42f44f:	add    BYTE PTR [rax],dl
  42f451:	(bad)  
  42f452:	or     al,0x30
  42f454:	or     esp,DWORD PTR [rax+0xa]
  42f457:	jo     0x42f462
  42f459:	push   rax
  42f45a:	or     al,al
  42f45c:	(bad)  
  42f45d:	rol    BYTE PTR [rax+riz*8],1
  42f460:	add    dh,al
  42f462:	add    BYTE PTR [rax],al
  42f464:	add    DWORD PTR [rdi+rax*1],ecx
  42f467:	add    BYTE PTR [rdx+riz*2],cl
  42f46a:	or     BYTE PTR [rax],dh
  42f46c:	(bad)  
  42f46d:	(bad)  
  42f46e:	(bad)  
  42f46f:	jo     0x42f476
  42f471:	push   rax
  42f472:	add    al,0xc0
  42f474:	add    dl,al
  42f476:	add    BYTE PTR [rax],al
  42f478:	add    DWORD PTR [rdi],eax
  42f47a:	add    al,0x0
  42f47c:	(bad)  
  42f47d:	xor    al,BYTE PTR [rbx]
  42f47f:	xor    BYTE PTR [rdx],al
  42f481:	(bad)  
  42f482:	add    DWORD PTR [rax+0x1],esi
  42f485:	(bad)  
  42f486:	add    eax,DWORD PTR [rax]
  42f488:	(bad)  
  42f489:	rex.X add sil,BYTE PTR [rax]
  42f48c:	add    DWORD PTR [rax+0x0],esp
  42f48f:	add    BYTE PTR [rcx],al
  42f491:	(bad)  
  42f492:	add    al,0x0
  42f494:	(bad)  
  42f495:	xor    al,BYTE PTR [rbx]
  42f497:	xor    BYTE PTR [rdx],al
  42f499:	(bad)  
  42f49a:	add    DWORD PTR [rax+0x1],esi
  42f49d:	or     al,0x7
  42f49f:	add    BYTE PTR [rdx+riz*2],cl
  42f4a2:	or     BYTE PTR [rax],dh
  42f4a4:	(bad)  
  42f4a5:	(bad)  
  42f4a6:	(bad)  
  42f4a7:	jo     0x42f4ae
  42f4a9:	push   rax
  42f4aa:	add    al,0xc0
  42f4ac:	add    dl,al
  42f4ae:	add    BYTE PTR [rax],al
  42f4b0:	add    DWORD PTR [rdi],eax
  42f4b2:	add    al,0x0
  42f4b4:	(bad)  
  42f4b5:	push   rdx
  42f4b6:	add    esi,DWORD PTR [rax]
  42f4b8:	add    ah,BYTE PTR [rax+0x1]
  42f4bb:	jo     0x42f4be
  42f4bd:	add    al,0x1
  42f4bf:	add    BYTE PTR [rdx+riz*2],al
  42f4c2:	add    BYTE PTR [rax],al
  42f4c4:	add    DWORD PTR [rcx+rax*1],eax
  42f4c7:	add    BYTE PTR [rdx+riz*2],al
  42f4ca:	add    BYTE PTR [rax],al
  42f4cc:	add    DWORD PTR [rcx+rax*1],eax
  42f4cf:	add    BYTE PTR [rdx+rax*2],al
  42f4d2:	add    BYTE PTR [rax],al
  42f4d4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f4dc
  42f4da:	add    DWORD PTR [rax],esi
  42f4dc:	add    DWORD PTR [rsi],eax
  42f4de:	add    eax,DWORD PTR [rax]
  42f4e0:	(bad)  
  42f4e1:	rex.X add sil,BYTE PTR [rax]
  42f4e4:	add    DWORD PTR [rax+0x0],esp
  42f4e7:	add    BYTE PTR [rcx],al
  42f4e9:	(bad)  
  42f4ea:	add    eax,DWORD PTR [rax]
  42f4ec:	(bad)  
  42f4ed:	rex.X add sil,BYTE PTR [rax]
  42f4f0:	add    DWORD PTR [rax+0x0],esp
  42f4f3:	add    BYTE PTR [rcx],al
  42f4f5:	(bad)  
  42f4f6:	add    eax,DWORD PTR [rax]
  42f4f8:	(bad)  
  42f4f9:	rex.X add sil,BYTE PTR [rax]
  42f4fc:	add    DWORD PTR [rax+0x0],esp
  42f4ff:	add    BYTE PTR [rcx],al
  42f501:	(bad)  
  42f502:	add    eax,DWORD PTR [rax]
  42f504:	(bad)  
  42f505:	rex.X add sil,BYTE PTR [rax]
  42f508:	add    DWORD PTR [rax+0x0],esp
  42f50b:	add    BYTE PTR [rcx],al
  42f50d:	add    eax,0x32050002
  42f512:	add    DWORD PTR [rax],esi
  42f514:	add    DWORD PTR [rsi],eax
  42f516:	add    eax,DWORD PTR [rax]
  42f518:	(bad)  
  42f519:	rex.X add sil,BYTE PTR [rax]
  42f51c:	add    DWORD PTR [rax+0x0],esp
  42f51f:	add    BYTE PTR [rcx],al
  42f521:	adc    ecx,DWORD PTR [rdx]
  42f523:	add    BYTE PTR [rbx],dl
  42f525:	add    DWORD PTR [rbp+0xb300c00],ecx
  42f52b:	(bad)  
  42f52c:	or     dh,BYTE PTR [rax+0x9]
  42f52f:	push   rax
  42f530:	or     al,al
  42f532:	(bad)  
  42f533:	rol    BYTE PTR [rax+riz*8],1
  42f536:	add    dh,al
  42f538:	add    DWORD PTR [rbx],edx
  42f53a:	or     al,BYTE PTR [rax]
  42f53c:	adc    eax,DWORD PTR [rcx]
  42f53e:	(bad)  
  42f53f:	add    BYTE PTR [rax+rsi*1],cl
  42f542:	or     esp,DWORD PTR [rax+0xa]
  42f545:	jo     0x42f550
  42f547:	push   rax
  42f548:	or     al,al
  42f54a:	(bad)  
  42f54b:	rol    BYTE PTR [rax+riz*8],1
  42f54e:	add    dh,al
  42f550:	add    DWORD PTR [rax],edx
  42f552:	or     DWORD PTR [rax],eax
  42f554:	adc    dl,al
  42f556:	or     al,0x30
  42f558:	or     esp,DWORD PTR [rax+0xa]
  42f55b:	jo     0x42f566
  42f55d:	push   rax
  42f55e:	or     al,al
  42f560:	(bad)  
  42f561:	rol    BYTE PTR [rax+riz*8],1
  42f564:	add    dh,al
  42f566:	add    BYTE PTR [rax],al
  42f568:	add    DWORD PTR [rdi],eax
  42f56a:	add    al,0x0
  42f56c:	(bad)  
  42f56d:	xor    al,BYTE PTR [rbx]
  42f56f:	xor    BYTE PTR [rdx],al
  42f571:	(bad)  
  42f572:	add    DWORD PTR [rax+0x1],esi
  42f575:	(bad)  
  42f576:	or     BYTE PTR [rax],al
  42f578:	(bad)  
  42f579:	jb     0x42f585
  42f57b:	xor    BYTE PTR [rcx],cl
  42f57d:	(bad)  
  42f57e:	or     BYTE PTR [rax+0x7],dh
  42f581:	push   rax
  42f582:	(bad)  
  42f583:	rol    BYTE PTR [rax+rdx*8],0x2
  42f587:	loopne 0x42f58a
  42f589:	sbb    DWORD PTR [rdx],ecx
  42f58b:	add    BYTE PTR [rcx],bl
  42f58d:	add    DWORD PTR [rcx],edx
  42f58f:	add    dl,BYTE PTR [rcx]
  42f591:	xor    BYTE PTR [rax],dl
  42f593:	(bad)  
  42f594:	pshufw mm1,QWORD PTR [rsi],0x50
  42f598:	or     eax,0x4d00bc0
  42f59d:	loopne 0x42f5a1
  42f59f:	lock add DWORD PTR [rcx+rax*1],eax
  42f5a3:	add    BYTE PTR [rdx+rax*2],al
  42f5a6:	add    BYTE PTR [rax],al
  42f5a8:	add    DWORD PTR [rdi],eax
  42f5aa:	add    al,0x0
  42f5ac:	(bad)  
  42f5ad:	xor    al,BYTE PTR [rbx]
  42f5af:	xor    BYTE PTR [rdx],al
  42f5b1:	(bad)  
  42f5b2:	add    DWORD PTR [rax+0x1],esi
  42f5b5:	add    al,0x1
  42f5b7:	add    BYTE PTR [rdx+riz*2],al
  42f5ba:	add    BYTE PTR [rax],al
  42f5bc:	add    DWORD PTR [rax],ecx
  42f5be:	add    eax,DWORD PTR [rax]
  42f5c0:	or     BYTE PTR [rcx],al
  42f5c2:	(bad)  
  42f5c3:	add    DWORD PTR [rcx],eax
  42f5c5:	xor    BYTE PTR [rax],al
  42f5c7:	add    BYTE PTR [rcx],al
  42f5c9:	or     BYTE PTR [rip+0x4820800],al        # 0x4c4fdcf
  42f5cf:	xor    BYTE PTR [rbx],al
  42f5d1:	(bad)  
  42f5d2:	add    dh,BYTE PTR [rax+0x1]
  42f5d5:	push   rax
  42f5d6:	add    BYTE PTR [rax],al
  42f5d8:	add    DWORD PTR [rax],ecx
  42f5da:	add    eax,0x4820800
  42f5df:	xor    BYTE PTR [rbx],al
  42f5e1:	(bad)  
  42f5e2:	add    dh,BYTE PTR [rax+0x1]
  42f5e5:	push   rax
  42f5e6:	add    BYTE PTR [rax],al
  42f5e8:	add    DWORD PTR [rax],eax
  42f5ea:	add    BYTE PTR [rax],al
  42f5ec:	add    DWORD PTR [rax],eax
  42f5ee:	add    BYTE PTR [rax],al
  42f5f0:	add    DWORD PTR [rip+0x52050002],eax        # 0x5247f5f8
  42f5f6:	add    DWORD PTR [rax],esi
  42f5f8:	add    DWORD PTR [rax],eax
  42f5fa:	add    BYTE PTR [rax],al
  42f5fc:	add    DWORD PTR [rdx],ecx
  42f5fe:	add    eax,0x6010a00
  42f603:	add    DWORD PTR [rbx],eax
  42f605:	xor    BYTE PTR [rdx],al
  42f607:	(bad)  
  42f608:	add    DWORD PTR [rax+0x0],esi
  42f60b:	add    BYTE PTR [rcx],al
  42f60d:	or     al,BYTE PTR [rsi]
  42f60f:	add    BYTE PTR [rdx],cl
  42f611:	xor    al,BYTE PTR [rsi]
  42f613:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2fa79
  42f619:	push   rax
  42f61a:	add    al,al
  42f61c:	add    DWORD PTR [rdi+rax*1],ecx
  42f61f:	add    BYTE PTR [rdx+rax*2],cl
  42f622:	or     BYTE PTR [rax],dh
  42f624:	(bad)  
  42f625:	(bad)  
  42f626:	(bad)  
  42f627:	jo     0x42f62e
  42f629:	push   rax
  42f62a:	add    al,0xc0
  42f62c:	add    dl,al
  42f62e:	add    BYTE PTR [rax],al
  42f630:	add    DWORD PTR [rdx],ecx
  42f632:	(bad)  
  42f633:	add    BYTE PTR [rdx],cl
  42f635:	xor    al,BYTE PTR [rsi]
  42f637:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2fa9d
  42f63d:	push   rax
  42f63e:	add    al,al
  42f640:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f648
  42f646:	add    DWORD PTR [rax],esi
  42f648:	add    DWORD PTR [rax],ecx
  42f64a:	add    eax,0x4c20800
  42f64f:	xor    BYTE PTR [rbx],al
  42f651:	(bad)  
  42f652:	add    dh,BYTE PTR [rax+0x1]
  42f655:	push   rax
  42f656:	add    BYTE PTR [rax],al
  42f658:	add    DWORD PTR [rdi+rax*1],ecx
  42f65b:	add    BYTE PTR [rdx+riz*2],cl
  42f65e:	or     BYTE PTR [rax],dh
  42f660:	(bad)  
  42f661:	(bad)  
  42f662:	(bad)  
  42f663:	jo     0x42f66a
  42f665:	push   rax
  42f666:	add    al,0xc0
  42f668:	add    dl,al
  42f66a:	add    BYTE PTR [rax],al
  42f66c:	add    DWORD PTR [rdx],ecx
  42f66e:	(bad)  
  42f66f:	add    BYTE PTR [rdx],cl
  42f671:	mov    dl,0x6
  42f673:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2fad9
  42f679:	push   rax
  42f67a:	add    al,al
  42f67c:	add    DWORD PTR [rcx+rax*1],eax
  42f67f:	add    BYTE PTR [rdx+riz*2],al
  42f682:	add    BYTE PTR [rax],al
  42f684:	add    DWORD PTR [rsi],ecx
  42f686:	or     BYTE PTR [rax],al
  42f688:	(bad)  
  42f689:	xor    cl,BYTE PTR [rdx]
  42f68b:	xor    BYTE PTR [rcx],cl
  42f68d:	(bad)  
  42f68e:	or     BYTE PTR [rax+0x7],dh
  42f691:	push   rax
  42f692:	(bad)  
  42f693:	rol    BYTE PTR [rax+rdx*8],0x2
  42f697:	loopne 0x42f69a
  42f699:	or     BYTE PTR [rip+0x4420800],al        # 0x484fe9f
  42f69f:	xor    BYTE PTR [rbx],al
  42f6a1:	(bad)  
  42f6a2:	add    dh,BYTE PTR [rax+0x1]
  42f6a5:	push   rax
  42f6a6:	add    BYTE PTR [rax],al
  42f6a8:	add    DWORD PTR [rax],eax
  42f6aa:	add    BYTE PTR [rax],al
  42f6ac:	add    DWORD PTR [rdi],eax
  42f6ae:	add    al,0x0
  42f6b0:	(bad)  
  42f6b1:	rol    BYTE PTR [rbx],cl
  42f6b3:	xor    BYTE PTR [rdx],al
  42f6b5:	(bad)  
  42f6b6:	add    DWORD PTR [rax+0x1],esi
  42f6b9:	(bad)  
  42f6ba:	add    eax,DWORD PTR [rax]
  42f6bc:	(bad)  
  42f6bd:	rex.X add sil,BYTE PTR [rax]
  42f6c0:	add    DWORD PTR [rax+0x0],esp
  42f6c3:	add    BYTE PTR [rcx],al
  42f6c5:	(bad)  
  42f6c6:	add    al,0x0
  42f6c8:	(bad)  
  42f6c9:	xor    al,BYTE PTR [rbx]
  42f6cb:	xor    BYTE PTR [rdx],al
  42f6cd:	(bad)  
  42f6ce:	add    DWORD PTR [rax+0x1],esi
  42f6d1:	add    BYTE PTR [rax],al
  42f6d3:	add    BYTE PTR [rcx],al
  42f6d5:	add    eax,0x32050002
  42f6da:	add    DWORD PTR [rax],esi
  42f6dc:	add    DWORD PTR [rdx],ecx
  42f6de:	(bad)  
  42f6df:	add    BYTE PTR [rdx],cl
  42f6e1:	xor    BYTE PTR [rcx],cl
  42f6e3:	(bad)  
  42f6e4:	or     BYTE PTR [rax+0x7],dh
  42f6e7:	push   rax
  42f6e8:	(bad)  
  42f6e9:	rol    BYTE PTR [rax+rdx*8],0x2
  42f6ed:	loopne 0x42f6ef
  42f6ef:	add    BYTE PTR [rcx],al
  42f6f1:	(bad)  
  42f6f2:	add    al,0x0
  42f6f4:	(bad)  
  42f6f5:	xor    al,BYTE PTR [rbx]
  42f6f7:	xor    BYTE PTR [rdx],al
  42f6f9:	(bad)  
  42f6fa:	add    DWORD PTR [rax+0x1],esi
  42f6fd:	or     al,BYTE PTR [rsi]
  42f6ff:	add    BYTE PTR [rdx],cl
  42f701:	xor    al,BYTE PTR [rsi]
  42f703:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2fb69
  42f709:	push   rax
  42f70a:	add    al,al
  42f70c:	add    DWORD PTR [rsi],eax
  42f70e:	add    eax,DWORD PTR [rax]
  42f710:	(bad)  
  42f711:	rex.X add sil,BYTE PTR [rax]
  42f714:	add    DWORD PTR [rax+0x0],esp
  42f717:	add    BYTE PTR [rcx],al
  42f719:	(bad)  
  42f71a:	add    eax,DWORD PTR [rax]
  42f71c:	(bad)  
  42f71d:	rex.X add sil,BYTE PTR [rax]
  42f720:	add    DWORD PTR [rax+0x0],esp
  42f723:	add    BYTE PTR [rcx],al
  42f725:	adc    BYTE PTR [rcx],cl
  42f727:	add    BYTE PTR [rax],dl
  42f729:	rex.X or al,0x30
  42f72c:	or     esp,DWORD PTR [rax+0xa]
  42f72f:	jo     0x42f73a
  42f731:	push   rax
  42f732:	or     al,al
  42f734:	(bad)  
  42f735:	rol    BYTE PTR [rax+riz*8],1
  42f738:	add    dh,al
  42f73a:	add    BYTE PTR [rax],al
  42f73c:	add    DWORD PTR [rax],eax
  42f73e:	add    BYTE PTR [rax],al
  42f740:	add    DWORD PTR [rdi+rax*1],ecx
  42f743:	add    BYTE PTR [rdx+rax*2],cl
  42f746:	or     BYTE PTR [rax],dh
  42f748:	(bad)  
  42f749:	(bad)  
  42f74a:	(bad)  
  42f74b:	jo     0x42f752
  42f74d:	push   rax
  42f74e:	add    al,0xc0
  42f750:	add    dl,al
  42f752:	add    BYTE PTR [rax],al
  42f754:	add    DWORD PTR [rax],ecx
  42f756:	add    eax,0x4420800
  42f75b:	xor    BYTE PTR [rbx],al
  42f75d:	(bad)  
  42f75e:	add    dh,BYTE PTR [rax+0x1]
  42f761:	push   rax
  42f762:	add    BYTE PTR [rax],al
  42f764:	add    DWORD PTR [rdi],eax
  42f766:	add    al,0x0
  42f768:	(bad)  
  42f769:	xor    al,BYTE PTR [rbx]
  42f76b:	xor    BYTE PTR [rdx],al
  42f76d:	(bad)  
  42f76e:	add    DWORD PTR [rax+0x1],esi
  42f771:	add    BYTE PTR [rax],al
  42f773:	add    BYTE PTR [rcx],al
  42f775:	or     BYTE PTR [rip+0x4420800],al        # 0x484ff7b
  42f77b:	xor    BYTE PTR [rbx],al
  42f77d:	(bad)  
  42f77e:	add    dh,BYTE PTR [rax+0x1]
  42f781:	push   rax
  42f782:	add    BYTE PTR [rax],al
  42f784:	add    DWORD PTR [rax],eax
  42f786:	add    BYTE PTR [rax],al
  42f788:	add    DWORD PTR [rax],edx
  42f78a:	or     DWORD PTR [rax],eax
  42f78c:	adc    BYTE PTR [rdx+0x600b300c],al
  42f792:	or     dh,BYTE PTR [rax+0x9]
  42f795:	push   rax
  42f796:	or     al,al
  42f798:	(bad)  
  42f799:	rol    BYTE PTR [rax+riz*8],1
  42f79c:	add    dh,al
  42f79e:	add    BYTE PTR [rax],al
  42f7a0:	add    DWORD PTR [rax],edx
  42f7a2:	or     DWORD PTR [rax],eax
  42f7a4:	adc    BYTE PTR [rdx+0x600b300c],ah
  42f7aa:	or     dh,BYTE PTR [rax+0x9]
  42f7ad:	push   rax
  42f7ae:	or     al,al
  42f7b0:	(bad)  
  42f7b1:	rol    BYTE PTR [rax+riz*8],1
  42f7b4:	add    dh,al
  42f7b6:	add    BYTE PTR [rax],al
  42f7b8:	add    DWORD PTR [rdx],ecx
  42f7ba:	(bad)  
  42f7bb:	add    BYTE PTR [rdx],cl
  42f7bd:	xor    al,BYTE PTR [rsi]
  42f7bf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2fc25
  42f7c5:	push   rax
  42f7c6:	add    al,al
  42f7c8:	add    DWORD PTR [rax],ecx
  42f7ca:	add    eax,0x4420800
  42f7cf:	xor    BYTE PTR [rbx],al
  42f7d1:	(bad)  
  42f7d2:	add    dh,BYTE PTR [rax+0x1]
  42f7d5:	push   rax
  42f7d6:	add    BYTE PTR [rax],al
  42f7d8:	add    DWORD PTR [rsi],eax
  42f7da:	add    eax,DWORD PTR [rax]
  42f7dc:	(bad)  
  42f7dd:	rex.X add sil,BYTE PTR [rax]
  42f7e0:	add    DWORD PTR [rax+0x0],esp
  42f7e3:	add    BYTE PTR [rcx],al
  42f7e5:	or     BYTE PTR [rip+0x4420800],al        # 0x484ffeb
  42f7eb:	xor    BYTE PTR [rbx],al
  42f7ed:	(bad)  
  42f7ee:	add    dh,BYTE PTR [rax+0x1]
  42f7f1:	push   rax
  42f7f2:	add    BYTE PTR [rax],al
  42f7f4:	add    DWORD PTR [rcx+rax*1],eax
  42f7f7:	add    BYTE PTR [rdx+riz*2],al
  42f7fa:	add    BYTE PTR [rax],al
  42f7fc:	add    DWORD PTR [rax],eax
  42f7fe:	add    BYTE PTR [rax],al
  42f800:	add    DWORD PTR [rax],edx
  42f802:	or     DWORD PTR [rax],eax
  42f804:	adc    dl,al
  42f806:	or     al,0x30
  42f808:	or     esp,DWORD PTR [rax+0xa]
  42f80b:	jo     0x42f816
  42f80d:	push   rax
  42f80e:	or     al,al
  42f810:	(bad)  
  42f811:	rol    BYTE PTR [rax+riz*8],1
  42f814:	add    dh,al
  42f816:	add    BYTE PTR [rax],al
  42f818:	add    DWORD PTR [rax],eax
  42f81a:	add    BYTE PTR [rax],al
  42f81c:	add    DWORD PTR [rdi],eax
  42f81e:	add    al,0x0
  42f820:	(bad)  
  42f821:	xor    al,BYTE PTR [rbx]
  42f823:	xor    BYTE PTR [rdx],al
  42f825:	(bad)  
  42f826:	add    DWORD PTR [rax+0x1],esi
  42f829:	or     BYTE PTR [rip+0x4420800],al        # 0x485002f
  42f82f:	xor    BYTE PTR [rbx],al
  42f831:	(bad)  
  42f832:	add    dh,BYTE PTR [rax+0x1]
  42f835:	push   rax
  42f836:	add    BYTE PTR [rax],al
  42f838:	add    DWORD PTR [rax],ecx
  42f83a:	add    eax,0x4420800
  42f83f:	xor    BYTE PTR [rbx],al
  42f841:	(bad)  
  42f842:	add    dh,BYTE PTR [rax+0x1]
  42f845:	push   rax
  42f846:	add    BYTE PTR [rax],al
  42f848:	add    DWORD PTR [rax],eax
  42f84a:	add    BYTE PTR [rax],al
  42f84c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f854
  42f852:	add    DWORD PTR [rax],esi
  42f854:	add    DWORD PTR [rdx],ecx
  42f856:	(bad)  
  42f857:	add    BYTE PTR [rdx],cl
  42f859:	xor    al,BYTE PTR [rsi]
  42f85b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2fcc1
  42f861:	push   rax
  42f862:	add    al,al
  42f864:	add    DWORD PTR [rax],ecx
  42f866:	add    eax,0x4820800
  42f86b:	xor    BYTE PTR [rbx],al
  42f86d:	(bad)  
  42f86e:	add    dh,BYTE PTR [rax+0x1]
  42f871:	push   rax
  42f872:	add    BYTE PTR [rax],al
  42f874:	add    DWORD PTR [rdi+rax*1],ecx
  42f877:	add    BYTE PTR [rdx+rax*4],cl
  42f87a:	or     BYTE PTR [rax],dh
  42f87c:	(bad)  
  42f87d:	(bad)  
  42f87e:	(bad)  
  42f87f:	jo     0x42f886
  42f881:	push   rax
  42f882:	add    al,0xc0
  42f884:	add    dl,al
  42f886:	add    BYTE PTR [rax],al
  42f888:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f890
  42f88e:	add    DWORD PTR [rax],esi
  42f890:	add    DWORD PTR [rdi],eax
  42f892:	add    al,0x0
  42f894:	(bad)  
  42f895:	push   rdx
  42f896:	add    esi,DWORD PTR [rax]
  42f898:	add    ah,BYTE PTR [rax+0x1]
  42f89b:	jo     0x42f89e
  42f89d:	add    eax,0x32050002
  42f8a2:	add    DWORD PTR [rax],esi
  42f8a4:	add    DWORD PTR [rdi],eax
  42f8a6:	add    al,0x0
  42f8a8:	(bad)  
  42f8a9:	xor    al,BYTE PTR [rbx]
  42f8ab:	xor    BYTE PTR [rdx],al
  42f8ad:	(bad)  
  42f8ae:	add    DWORD PTR [rax+0x1],esi
  42f8b1:	(bad)  
  42f8b2:	add    eax,DWORD PTR [rax]
  42f8b4:	(bad)  
  42f8b5:	(bad)  
  42f8b7:	xor    BYTE PTR [rcx],al
  42f8b9:	(bad)  
  42f8ba:	add    BYTE PTR [rax],al
  42f8bc:	add    DWORD PTR [rdi],eax
  42f8be:	add    al,0x0
  42f8c0:	(bad)  
  42f8c1:	xor    al,BYTE PTR [rbx]
  42f8c3:	xor    BYTE PTR [rdx],al
  42f8c5:	(bad)  
  42f8c6:	add    DWORD PTR [rax+0x1],esi
  42f8c9:	add    eax,0x32050002
  42f8ce:	add    DWORD PTR [rax],esi
  42f8d0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247f8d8
  42f8d6:	add    DWORD PTR [rax],esi
  42f8d8:	add    DWORD PTR [rax],eax
  42f8da:	add    BYTE PTR [rax],al
  42f8dc:	add    DWORD PTR [rdi],eax
  42f8de:	add    al,0x0
  42f8e0:	(bad)  
  42f8e1:	xor    al,BYTE PTR [rbx]
  42f8e3:	xor    BYTE PTR [rdx],al
  42f8e5:	(bad)  
  42f8e6:	add    DWORD PTR [rax+0x1],esi
  42f8e9:	(bad)  
  42f8ea:	add    al,0x0
  42f8ec:	(bad)  
  42f8ed:	xor    al,BYTE PTR [rbx]
  42f8ef:	xor    BYTE PTR [rdx],al
  42f8f1:	(bad)  
  42f8f2:	add    DWORD PTR [rax+0x1],esi
  42f8f5:	(bad)  
  42f8f6:	add    eax,DWORD PTR [rax]
  42f8f8:	(bad)  
  42f8f9:	rex.X add sil,BYTE PTR [rax]
  42f8fc:	add    DWORD PTR [rax+0x0],esp
  42f8ff:	add    BYTE PTR [rcx],al
  42f901:	add    eax,0x32050002
  42f906:	add    DWORD PTR [rax],esi
  42f908:	add    DWORD PTR [rdi],eax
  42f90a:	add    al,0x0
  42f90c:	(bad)  
  42f90d:	xor    al,BYTE PTR [rbx]
  42f90f:	xor    BYTE PTR [rdx],al
  42f911:	(bad)  
  42f912:	add    DWORD PTR [rax+0x1],esi
  42f915:	(bad)  
  42f916:	add    al,0x0
  42f918:	(bad)  
  42f919:	xor    al,BYTE PTR [rbx]
  42f91b:	xor    BYTE PTR [rdx],al
  42f91d:	(bad)  
  42f91e:	add    DWORD PTR [rax+0x1],esi
  42f921:	(bad)  
  42f922:	add    al,0x0
  42f924:	(bad)  
  42f925:	xor    al,BYTE PTR [rbx]
  42f927:	xor    BYTE PTR [rdx],al
  42f929:	(bad)  
  42f92a:	add    DWORD PTR [rax+0x1],esi
  42f92d:	add    eax,0x32050002
  42f932:	add    DWORD PTR [rax],esi
  42f934:	add    DWORD PTR [rax],eax
  42f936:	add    BYTE PTR [rax],al
  42f938:	add    DWORD PTR [rax],eax
  42f93a:	add    BYTE PTR [rax],al
  42f93c:	add    DWORD PTR [rax],eax
  42f93e:	add    BYTE PTR [rax],al
  42f940:	add    DWORD PTR [rax],eax
  42f942:	add    BYTE PTR [rax],al
  42f944:	add    DWORD PTR [rax],eax
  42f946:	add    BYTE PTR [rax],al
  42f948:	add    DWORD PTR [rax],eax
  42f94a:	add    BYTE PTR [rax],al
  42f94c:	add    DWORD PTR [rax],eax
  42f94e:	add    BYTE PTR [rax],al
  42f950:	add    DWORD PTR [rax],eax
  42f952:	add    BYTE PTR [rax],al
  42f954:	add    DWORD PTR [rax],eax
  42f956:	add    BYTE PTR [rax],al
  42f958:	add    DWORD PTR [rax],eax
  42f95a:	add    BYTE PTR [rax],al
  42f95c:	add    DWORD PTR [rsi],eax
  42f95e:	add    eax,DWORD PTR [rax]
  42f960:	(bad)  
  42f961:	rex.X add sil,BYTE PTR [rax]
  42f964:	add    DWORD PTR [rax+0x0],esp
  42f967:	add    BYTE PTR [rcx],al
  42f969:	add    BYTE PTR [rax],al
  42f96b:	add    BYTE PTR [rcx],al
  42f96d:	add    BYTE PTR [rax],al
  42f96f:	add    BYTE PTR [rcx],al
  42f971:	add    BYTE PTR [rax],al
  42f973:	add    BYTE PTR [rcx],al
  42f975:	add    al,0x1
  42f977:	add    BYTE PTR [rdx+rax*2],al
  42f97a:	add    BYTE PTR [rax],al
  42f97c:	add    DWORD PTR [rsi],eax
  42f97e:	add    eax,DWORD PTR [rax]
  42f980:	(bad)  
  42f981:	rex.X add sil,BYTE PTR [rax]
  42f984:	add    DWORD PTR [rax+0x0],esp
  42f987:	add    BYTE PTR [rcx],al
  42f989:	adc    BYTE PTR [rcx],cl
  42f98b:	add    BYTE PTR [rax],dl
  42f98d:	ret    0x300c
  42f990:	or     esp,DWORD PTR [rax+0xa]
  42f993:	jo     0x42f99e
  42f995:	push   rax
  42f996:	or     al,al
  42f998:	(bad)  
  42f999:	rol    BYTE PTR [rax+riz*8],1
  42f99c:	add    dh,al
  42f99e:	add    BYTE PTR [rax],al
  42f9a0:	add    DWORD PTR [rdi+rax*1],ecx
  42f9a3:	add    BYTE PTR [rdx+rax*2],cl
  42f9a6:	or     BYTE PTR [rax],dh
  42f9a8:	(bad)  
  42f9a9:	(bad)  
  42f9aa:	(bad)  
  42f9ab:	jo     0x42f9b2
  42f9ad:	push   rax
  42f9ae:	add    al,0xc0
  42f9b0:	add    dl,al
  42f9b2:	add    BYTE PTR [rax],al
  42f9b4:	add    DWORD PTR [rax],eax
  42f9b6:	add    BYTE PTR [rax],al
  42f9b8:	add    DWORD PTR [rax],eax
  42f9ba:	add    BYTE PTR [rax],al
  42f9bc:	add    DWORD PTR [rsi],ecx
  42f9be:	or     BYTE PTR [rax],al
  42f9c0:	(bad)  
  42f9c1:	mov    dl,0xa
  42f9c3:	xor    BYTE PTR [rcx],cl
  42f9c5:	(bad)  
  42f9c6:	or     BYTE PTR [rax+0x7],dh
  42f9c9:	push   rax
  42f9ca:	(bad)  
  42f9cb:	rol    BYTE PTR [rax+rdx*8],0x2
  42f9cf:	loopne 0x42f9d2
  42f9d1:	and    DWORD PTR [rax+rax*1],ecx
  42f9d4:	and    DWORD PTR [rax-0x41],ebp
  42f9d7:	add    ebx,DWORD PTR [rcx]
  42f9d9:	add    DWORD PTR [rcx+0x10301107],eax
  42f9df:	(bad)  
  42f9e0:	pshufw mm1,QWORD PTR [rsi],0x50
  42f9e4:	or     eax,0x4d00bc0
  42f9e9:	loopne 0x42f9ed
  42f9eb:	lock add DWORD PTR [rsp+rax*1],eax
  42f9ef:	add    BYTE PTR [rax+rsi*1],al
  42f9f2:	add    esp,DWORD PTR [rax+0x2]
  42f9f5:	jo     0x42f9f8
  42f9f7:	push   rax
  42f9f8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247fa00
  42f9fe:	add    DWORD PTR [rax],esi
  42fa00:	add    DWORD PTR [rdx],ecx
  42fa02:	(bad)  
  42fa03:	add    BYTE PTR [rdx],cl
  42fa05:	mov    dl,0x6
  42fa07:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2fe6d
  42fa0d:	push   rax
  42fa0e:	add    al,al
  42fa10:	add    DWORD PTR [rax],ecx
  42fa12:	add    eax,0x4420800
  42fa17:	xor    BYTE PTR [rbx],al
  42fa19:	(bad)  
  42fa1a:	add    dh,BYTE PTR [rax+0x1]
  42fa1d:	push   rax
  42fa1e:	add    BYTE PTR [rax],al
  42fa20:	add    DWORD PTR [rdi],eax
  42fa22:	add    al,0x0
  42fa24:	(bad)  
  42fa25:	xor    al,BYTE PTR [rbx]
  42fa27:	xor    BYTE PTR [rdx],al
  42fa29:	(bad)  
  42fa2a:	add    DWORD PTR [rax+0x1],esi
  42fa2d:	or     al,BYTE PTR [rsi]
  42fa2f:	add    BYTE PTR [rdx],cl
  42fa31:	push   rdx
  42fa32:	(bad)  
  42fa33:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2fe99
  42fa39:	push   rax
  42fa3a:	add    al,al
  42fa3c:	add    DWORD PTR [rsi+rax*1],ecx
  42fa3f:	add    BYTE PTR [rax+rbp*2],cl
  42fa42:	add    eax,DWORD PTR [rax]
  42fa44:	(bad)  
  42fa45:	jb     0x42fa4a
  42fa47:	xor    BYTE PTR [rdx],al
  42fa49:	(bad)  
  42fa4a:	add    DWORD PTR [rax+0x1],esi
  42fa4d:	adc    BYTE PTR [rcx],cl
  42fa4f:	add    BYTE PTR [rax],dl
  42fa51:	(bad)  
  42fa52:	or     al,0x30
  42fa54:	or     esp,DWORD PTR [rax+0xa]
  42fa57:	jo     0x42fa62
  42fa59:	push   rax
  42fa5a:	or     al,al
  42fa5c:	(bad)  
  42fa5d:	rol    BYTE PTR [rax+riz*8],1
  42fa60:	add    dh,al
  42fa62:	add    BYTE PTR [rax],al
  42fa64:	add    DWORD PTR [rax],eax
  42fa66:	add    BYTE PTR [rax],al
  42fa68:	add    DWORD PTR [rdi],eax
  42fa6a:	add    al,0x0
  42fa6c:	(bad)  
  42fa6d:	xor    al,BYTE PTR [rbx]
  42fa6f:	xor    BYTE PTR [rdx],al
  42fa71:	(bad)  
  42fa72:	add    DWORD PTR [rax+0x1],esi
  42fa75:	add    BYTE PTR [rax],al
  42fa77:	add    BYTE PTR [rcx],al
  42fa79:	add    al,0x1
  42fa7b:	add    BYTE PTR [rdx+rax*2],al
  42fa7e:	add    BYTE PTR [rax],al
  42fa80:	add    DWORD PTR [rax],eax
  42fa82:	add    BYTE PTR [rax],al
  42fa84:	add    DWORD PTR [rax],eax
  42fa86:	add    BYTE PTR [rax],al
  42fa88:	add    DWORD PTR [rsi],eax
  42fa8a:	add    eax,DWORD PTR [rax]
  42fa8c:	(bad)  
  42fa8d:	rex.X add sil,BYTE PTR [rax]
  42fa90:	add    DWORD PTR [rax+0x0],esp
  42fa93:	add    BYTE PTR [rcx],al
  42fa95:	add    BYTE PTR [rax],al
  42fa97:	add    BYTE PTR [rcx],al
  42fa99:	add    BYTE PTR [rax],al
  42fa9b:	add    BYTE PTR [rcx],al
  42fa9d:	add    BYTE PTR [rax],al
  42fa9f:	add    BYTE PTR [rcx],al
  42faa1:	add    BYTE PTR [rax],al
  42faa3:	add    BYTE PTR [rcx],al
  42faa5:	add    BYTE PTR [rax],al
  42faa7:	add    BYTE PTR [rcx],al
  42faa9:	add    BYTE PTR [rax],al
  42faab:	add    BYTE PTR [rcx],al
  42faad:	add    BYTE PTR [rax],al
  42faaf:	add    BYTE PTR [rcx],al
  42fab1:	add    BYTE PTR [rax],al
  42fab3:	add    BYTE PTR [rcx],al
  42fab5:	add    BYTE PTR [rax],al
  42fab7:	add    BYTE PTR [rcx],al
  42fab9:	add    BYTE PTR [rax],al
  42fabb:	add    BYTE PTR [rcx],al
  42fabd:	(bad)  
  42fabe:	add    eax,DWORD PTR [rax]
  42fac0:	(bad)  
  42fac1:	rex.X add sil,BYTE PTR [rax]
  42fac4:	add    DWORD PTR [rax+0x0],esp
  42fac7:	add    BYTE PTR [rcx],al
  42fac9:	or     BYTE PTR [rip+0x4420800],al        # 0x48502cf
  42facf:	xor    BYTE PTR [rbx],al
  42fad1:	(bad)  
  42fad2:	add    dh,BYTE PTR [rax+0x1]
  42fad5:	push   rax
  42fad6:	add    BYTE PTR [rax],al
  42fad8:	add    DWORD PTR [rdi],eax
  42fada:	add    al,0x0
  42fadc:	(bad)  
  42fadd:	xor    al,BYTE PTR [rbx]
  42fadf:	xor    BYTE PTR [rdx],al
  42fae1:	(bad)  
  42fae2:	add    DWORD PTR [rax+0x1],esi
  42fae5:	or     BYTE PTR [rip+0x4420800],al        # 0x48502eb
  42faeb:	xor    BYTE PTR [rbx],al
  42faed:	(bad)  
  42faee:	add    dh,BYTE PTR [rax+0x1]
  42faf1:	push   rax
  42faf2:	add    BYTE PTR [rax],al
  42faf4:	add    DWORD PTR [rsi],eax
  42faf6:	add    eax,DWORD PTR [rax]
  42faf8:	(bad)  
  42faf9:	rex.X add sil,BYTE PTR [rax]
  42fafc:	add    DWORD PTR [rax+0x0],esp
  42faff:	add    BYTE PTR [rcx],al
  42fb01:	(bad)  
  42fb02:	add    eax,DWORD PTR [rax]
  42fb04:	(bad)  
  42fb05:	rex.X add sil,BYTE PTR [rax]
  42fb08:	add    DWORD PTR [rax+0x0],esp
  42fb0b:	add    BYTE PTR [rcx],al
  42fb0d:	(bad)  
  42fb0e:	add    eax,DWORD PTR [rax]
  42fb10:	(bad)  
  42fb11:	rex.X add sil,BYTE PTR [rax]
  42fb14:	add    DWORD PTR [rax+0x0],esp
  42fb17:	add    BYTE PTR [rcx],al
  42fb19:	(bad)  
  42fb1a:	or     BYTE PTR [rax],al
  42fb1c:	(bad)  
  42fb1d:	xor    cl,BYTE PTR [rdx]
  42fb1f:	xor    BYTE PTR [rcx],cl
  42fb21:	(bad)  
  42fb22:	or     BYTE PTR [rax+0x7],dh
  42fb25:	push   rax
  42fb26:	(bad)  
  42fb27:	rol    BYTE PTR [rax+rdx*8],0x2
  42fb2b:	loopne 0x42fb2e
  42fb2d:	(bad)  
  42fb2e:	add    al,0x0
  42fb30:	(bad)  
  42fb31:	xor    al,BYTE PTR [rbx]
  42fb33:	xor    BYTE PTR [rdx],al
  42fb35:	(bad)  
  42fb36:	add    DWORD PTR [rax+0x1],esi
  42fb39:	add    eax,0x32050002
  42fb3e:	add    DWORD PTR [rax],esi
  42fb40:	add    DWORD PTR [rax],edx
  42fb42:	or     DWORD PTR [rax],eax
  42fb44:	adc    BYTE PTR [rdx+0xc],al
  42fb47:	xor    BYTE PTR [rbx],cl
  42fb49:	(bad)  
  42fb4a:	or     dh,BYTE PTR [rax+0x9]
  42fb4d:	push   rax
  42fb4e:	or     al,al
  42fb50:	(bad)  
  42fb51:	rol    BYTE PTR [rax+riz*8],1
  42fb54:	add    dh,al
  42fb56:	add    BYTE PTR [rax],al
  42fb58:	add    DWORD PTR [rax],eax
  42fb5a:	add    BYTE PTR [rax],al
  42fb5c:	add    DWORD PTR [rax],ecx
  42fb5e:	add    eax,0x4420800
  42fb63:	xor    BYTE PTR [rbx],al
  42fb65:	(bad)  
  42fb66:	add    dh,BYTE PTR [rax+0x1]
  42fb69:	push   rax
  42fb6a:	add    BYTE PTR [rax],al
  42fb6c:	add    DWORD PTR [rax],eax
  42fb6e:	add    BYTE PTR [rax],al
  42fb70:	add    DWORD PTR [rax],ecx
  42fb72:	add    eax,0x4420800
  42fb77:	xor    BYTE PTR [rbx],al
  42fb79:	(bad)  
  42fb7a:	add    dh,BYTE PTR [rax+0x1]
  42fb7d:	push   rax
  42fb7e:	add    BYTE PTR [rax],al
  42fb80:	add    DWORD PTR [rsi],eax
  42fb82:	add    eax,DWORD PTR [rax]
  42fb84:	(bad)  
  42fb85:	rex.X add sil,BYTE PTR [rax]
  42fb88:	add    DWORD PTR [rax+0x0],esp
  42fb8b:	add    BYTE PTR [rcx],al
  42fb8d:	add    BYTE PTR [rax],al
  42fb8f:	add    BYTE PTR [rcx],al
  42fb91:	add    BYTE PTR [rax],al
  42fb93:	add    BYTE PTR [rcx],al
  42fb95:	add    BYTE PTR [rax],al
  42fb97:	add    BYTE PTR [rcx],al
  42fb99:	add    BYTE PTR [rax],al
  42fb9b:	add    BYTE PTR [rcx],al
  42fb9d:	or     BYTE PTR [rip+0x4420800],al        # 0x48503a3
  42fba3:	xor    BYTE PTR [rbx],al
  42fba5:	(bad)  
  42fba6:	add    dh,BYTE PTR [rax+0x1]
  42fba9:	push   rax
  42fbaa:	add    BYTE PTR [rax],al
  42fbac:	add    DWORD PTR [rax],eax
  42fbae:	add    BYTE PTR [rax],al
  42fbb0:	add    DWORD PTR [rax],eax
  42fbb2:	add    BYTE PTR [rax],al
  42fbb4:	add    DWORD PTR [rcx+rax*1],eax
  42fbb7:	add    BYTE PTR [rdx+rax*2],al
  42fbba:	add    BYTE PTR [rax],al
  42fbbc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247fbc4
  42fbc2:	add    DWORD PTR [rax],esi
  42fbc4:	add    DWORD PTR [rcx+rax*1],eax
  42fbc7:	add    BYTE PTR [rdx+rax*2],al
  42fbca:	add    BYTE PTR [rax],al
  42fbcc:	add    DWORD PTR [rdi],eax
  42fbce:	add    al,0x0
  42fbd0:	(bad)  
  42fbd1:	xor    al,BYTE PTR [rbx]
  42fbd3:	xor    BYTE PTR [rdx],al
  42fbd5:	(bad)  
  42fbd6:	add    DWORD PTR [rax+0x1],esi
  42fbd9:	add    eax,0x32050002
  42fbde:	add    DWORD PTR [rax],esi
  42fbe0:	add    DWORD PTR [rsi],eax
  42fbe2:	add    eax,DWORD PTR [rax]
  42fbe4:	(bad)  
  42fbe5:	rex.X add sil,BYTE PTR [rax]
  42fbe8:	add    DWORD PTR [rax+0x0],esp
  42fbeb:	add    BYTE PTR [rcx],al
  42fbed:	add    BYTE PTR [rax],al
  42fbef:	add    BYTE PTR [rcx],al
  42fbf1:	add    BYTE PTR [rax],al
  42fbf3:	add    BYTE PTR [rcx],al
  42fbf5:	add    BYTE PTR [rax],al
  42fbf7:	add    BYTE PTR [rcx],al
  42fbf9:	(bad)  
  42fbfa:	add    eax,DWORD PTR [rax]
  42fbfc:	(bad)  
  42fbfd:	rex.X add sil,BYTE PTR [rax]
  42fc00:	add    DWORD PTR [rax+0x0],esp
  42fc03:	add    BYTE PTR [rcx],al
  42fc05:	or     BYTE PTR [rip+0x4420800],al        # 0x485040b
  42fc0b:	xor    BYTE PTR [rbx],al
  42fc0d:	(bad)  
  42fc0e:	add    dh,BYTE PTR [rax+0x1]
  42fc11:	push   rax
  42fc12:	add    BYTE PTR [rax],al
  42fc14:	add    DWORD PTR [rsi],eax
  42fc16:	add    eax,DWORD PTR [rax]
  42fc18:	(bad)  
  42fc19:	rex.X add sil,BYTE PTR [rax]
  42fc1c:	add    DWORD PTR [rax+0x0],esp
  42fc1f:	add    BYTE PTR [rcx],al
  42fc21:	add    eax,0x32050002
  42fc26:	add    DWORD PTR [rax],esi
  42fc28:	add    DWORD PTR [rdx],ecx
  42fc2a:	(bad)  
  42fc2b:	add    BYTE PTR [rdx],cl
  42fc2d:	xor    al,BYTE PTR [rsi]
  42fc2f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b30095
  42fc35:	push   rax
  42fc36:	add    al,al
  42fc38:	add    DWORD PTR [rcx+rax*1],eax
  42fc3b:	add    BYTE PTR [rdx+riz*2],al
  42fc3e:	add    BYTE PTR [rax],al
  42fc40:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247fc48
  42fc46:	add    DWORD PTR [rax],esi
  42fc48:	add    DWORD PTR [rax],eax
  42fc4a:	add    BYTE PTR [rax],al
  42fc4c:	add    DWORD PTR [rax],eax
  42fc4e:	add    BYTE PTR [rax],al
  42fc50:	add    DWORD PTR [rax],eax
  42fc52:	add    BYTE PTR [rax],al
  42fc54:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247fc5c
  42fc5a:	add    DWORD PTR [rax],esi
  42fc5c:	add    DWORD PTR [rdi],eax
  42fc5e:	add    al,0x0
  42fc60:	(bad)  
  42fc61:	xor    al,BYTE PTR [rbx]
  42fc63:	xor    BYTE PTR [rdx],al
  42fc65:	(bad)  
  42fc66:	add    DWORD PTR [rax+0x1],esi
  42fc69:	add    eax,0x32050002
  42fc6e:	add    DWORD PTR [rax],esi
  42fc70:	add    DWORD PTR [rax],eax
  42fc72:	add    BYTE PTR [rax],al
  42fc74:	add    DWORD PTR [rcx+rax*1],eax
  42fc77:	add    BYTE PTR [rdx+rax*2],al
  42fc7a:	add    BYTE PTR [rax],al
  42fc7c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247fc84
  42fc82:	add    DWORD PTR [rax],esi
  42fc84:	add    DWORD PTR [rax],ecx
  42fc86:	add    eax,0x4420800
  42fc8b:	xor    BYTE PTR [rbx],al
  42fc8d:	(bad)  
  42fc8e:	add    dh,BYTE PTR [rax+0x1]
  42fc91:	push   rax
  42fc92:	add    BYTE PTR [rax],al
  42fc94:	add    DWORD PTR [rsi],eax
  42fc96:	add    eax,DWORD PTR [rax]
  42fc98:	(bad)  
  42fc99:	rex.X add sil,BYTE PTR [rax]
  42fc9c:	add    DWORD PTR [rax+0x0],esp
  42fc9f:	add    BYTE PTR [rcx],al
  42fca1:	add    BYTE PTR [rax],al
  42fca3:	add    BYTE PTR [rcx],al
  42fca5:	add    BYTE PTR [rax],al
  42fca7:	add    BYTE PTR [rcx],al
  42fca9:	(bad)  
  42fcaa:	add    al,0x0
  42fcac:	(bad)  
  42fcad:	xor    al,BYTE PTR [rbx]
  42fcaf:	xor    BYTE PTR [rdx],al
  42fcb1:	(bad)  
  42fcb2:	add    DWORD PTR [rax+0x1],esi
  42fcb5:	(bad)  
  42fcb6:	add    eax,DWORD PTR [rax]
  42fcb8:	(bad)  
  42fcb9:	rex.X add sil,BYTE PTR [rax]
  42fcbc:	add    DWORD PTR [rax+0x0],esp
  42fcbf:	add    BYTE PTR [rcx],al
  42fcc1:	add    BYTE PTR [rax],al
  42fcc3:	add    BYTE PTR [rcx],al
  42fcc5:	add    BYTE PTR [rax],al
  42fcc7:	add    BYTE PTR [rcx],al
  42fcc9:	add    BYTE PTR [rax],al
  42fccb:	add    BYTE PTR [rcx],al
  42fccd:	(bad)  
  42fcce:	add    eax,DWORD PTR [rax]
  42fcd0:	(bad)  
  42fcd1:	rex.X add sil,BYTE PTR [rax]
  42fcd4:	add    DWORD PTR [rax+0x0],esp
  42fcd7:	add    BYTE PTR [rcx],al
  42fcd9:	add    BYTE PTR [rax],al
  42fcdb:	add    BYTE PTR [rcx],al
  42fcdd:	add    BYTE PTR [rax],al
  42fcdf:	add    BYTE PTR [rcx],al
  42fce1:	add    al,BYTE PTR [rdx]
  42fce3:	add    BYTE PTR [rdx],al
  42fce5:	xor    BYTE PTR [rcx],al
  42fce7:	(bad)  
  42fce8:	add    DWORD PTR [rsi],eax
  42fcea:	add    eax,DWORD PTR [rax]
  42fcec:	(bad)  
  42fced:	rex.X add sil,BYTE PTR [rax]
  42fcf0:	add    DWORD PTR [rax+0x0],esp
  42fcf3:	add    BYTE PTR [rcx],al
  42fcf5:	add    al,0x1
  42fcf7:	add    BYTE PTR [rdx+rax*2],al
  42fcfa:	add    BYTE PTR [rax],al
  42fcfc:	add    DWORD PTR [rdi],eax
  42fcfe:	add    al,0x0
  42fd00:	(bad)  
  42fd01:	push   rdx
  42fd02:	add    esi,DWORD PTR [rax]
  42fd04:	add    ah,BYTE PTR [rax+0x1]
  42fd07:	jo     0x42fd0a
  42fd09:	(bad)  
  42fd0a:	add    al,0x0
  42fd0c:	(bad)  
  42fd0d:	push   rdx
  42fd0e:	add    esi,DWORD PTR [rax]
  42fd10:	add    ah,BYTE PTR [rax+0x1]
  42fd13:	jo     0x42fd16
  42fd15:	or     al,BYTE PTR [rsi]
  42fd17:	add    BYTE PTR [rdx],cl
  42fd19:	xor    al,BYTE PTR [rsi]
  42fd1b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b30181
  42fd21:	push   rax
  42fd22:	add    al,al
  42fd24:	add    DWORD PTR [rcx+rax*1],eax
  42fd27:	add    BYTE PTR [rdx+riz*2],al
  42fd2a:	add    BYTE PTR [rax],al
  42fd2c:	add    DWORD PTR [rcx+rax*1],eax
  42fd2f:	add    BYTE PTR [rdx+riz*2],al
  42fd32:	add    BYTE PTR [rax],al
  42fd34:	add    DWORD PTR [rcx+rax*1],eax
  42fd37:	add    BYTE PTR [rdx+riz*2],al
  42fd3a:	add    BYTE PTR [rax],al
  42fd3c:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14ffd49
  42fd42:	test   BYTE PTR [rax],al
  42fd44:	(bad)  
  42fd45:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b301ab
  42fd4b:	push   rax
  42fd4c:	add    al,al
  42fd4e:	add    BYTE PTR [rax],al
  42fd50:	add    DWORD PTR [rax],eax
  42fd52:	add    BYTE PTR [rax],al
  42fd54:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247fd5c
  42fd5a:	add    DWORD PTR [rax],esi
  42fd5c:	add    DWORD PTR [rsi],eax
  42fd5e:	add    eax,DWORD PTR [rax]
  42fd60:	(bad)  
  42fd61:	rex.X add sil,BYTE PTR [rax]
  42fd64:	add    DWORD PTR [rax+0x0],esp
  42fd67:	add    BYTE PTR [rcx],al
  42fd69:	(bad)  
  42fd6a:	add    eax,DWORD PTR [rax]
  42fd6c:	(bad)  
  42fd6d:	rex.X add sil,BYTE PTR [rax]
  42fd70:	add    DWORD PTR [rax+0x0],esp
  42fd73:	add    BYTE PTR [rcx],al
  42fd75:	adc    ecx,DWORD PTR [rdx]
  42fd77:	add    BYTE PTR [rbx],dl
  42fd79:	add    DWORD PTR [rcx],edx
  42fd7b:	add    BYTE PTR [rax+rsi*1],cl
  42fd7e:	or     esp,DWORD PTR [rax+0xa]
  42fd81:	jo     0x42fd8c
  42fd83:	push   rax
  42fd84:	or     al,al
  42fd86:	(bad)  
  42fd87:	rol    BYTE PTR [rax+riz*8],1
  42fd8a:	add    dh,al
  42fd8c:	add    DWORD PTR [rbx],edx
  42fd8e:	or     al,BYTE PTR [rax]
  42fd90:	adc    eax,DWORD PTR [rcx]
  42fd92:	adc    DWORD PTR [rax],eax
  42fd94:	or     al,0x30
  42fd96:	or     esp,DWORD PTR [rax+0xa]
  42fd99:	jo     0x42fda4
  42fd9b:	push   rax
  42fd9c:	or     al,al
  42fd9e:	(bad)  
  42fd9f:	rol    BYTE PTR [rax+riz*8],1
  42fda2:	add    dh,al
  42fda4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247fdac
  42fdaa:	add    DWORD PTR [rax],esi
  42fdac:	add    DWORD PTR [rax],eax
  42fdae:	add    BYTE PTR [rax],al
  42fdb0:	add    DWORD PTR [rax],eax
  42fdb2:	add    BYTE PTR [rax],al
  42fdb4:	add    DWORD PTR [rax],eax
  42fdb6:	add    BYTE PTR [rax],al
  42fdb8:	add    DWORD PTR [rax],eax
  42fdba:	add    BYTE PTR [rax],al
  42fdbc:	add    DWORD PTR [rdi],eax
  42fdbe:	add    al,0x0
  42fdc0:	(bad)  
  42fdc1:	rol    BYTE PTR [rbx],cl
  42fdc3:	xor    BYTE PTR [rdx],al
  42fdc5:	(bad)  
  42fdc6:	add    DWORD PTR [rax+0x1],esi
  42fdc9:	(bad)  
  42fdca:	add    eax,DWORD PTR [rax]
  42fdcc:	(bad)  
  42fdcd:	(bad)  
  42fdcf:	xor    BYTE PTR [rcx],al
  42fdd1:	(bad)  
  42fdd2:	add    BYTE PTR [rax],al
  42fdd4:	add    DWORD PTR [rcx+rax*1],eax
  42fdd7:	add    BYTE PTR [rdx+rax*2],al
  42fdda:	add    BYTE PTR [rax],al
  42fddc:	add    DWORD PTR [rdi],eax
  42fdde:	add    al,0x0
  42fde0:	(bad)  
  42fde1:	xor    al,BYTE PTR [rbx]
  42fde3:	xor    BYTE PTR [rdx],al
  42fde5:	(bad)  
  42fde6:	add    DWORD PTR [rax+0x1],esi
  42fde9:	add    eax,0x32050002
  42fdee:	add    DWORD PTR [rax],esi
  42fdf0:	add    DWORD PTR [rcx+rax*1],eax
  42fdf3:	add    BYTE PTR [rdx+riz*2],al
  42fdf6:	add    BYTE PTR [rax],al
  42fdf8:	add    DWORD PTR [rcx+rax*1],eax
  42fdfb:	add    BYTE PTR [rdx+riz*2],al
  42fdfe:	add    BYTE PTR [rax],al
  42fe00:	add    DWORD PTR [rax],edx
  42fe02:	or     DWORD PTR [rax],eax
  42fe04:	adc    BYTE PTR [rdx+0x600b300c],ah
  42fe0a:	or     dh,BYTE PTR [rax+0x9]
  42fe0d:	push   rax
  42fe0e:	or     al,al
  42fe10:	(bad)  
  42fe11:	rol    BYTE PTR [rax+riz*8],1
  42fe14:	add    dh,al
  42fe16:	add    BYTE PTR [rax],al
  42fe18:	add    DWORD PTR [rcx+rax*1],eax
  42fe1b:	add    BYTE PTR [rdx+rax*2],al
  42fe1e:	add    BYTE PTR [rax],al
  42fe20:	add    DWORD PTR [rdi],eax
  42fe22:	add    al,0x0
  42fe24:	(bad)  
  42fe25:	xor    al,BYTE PTR [rbx]
  42fe27:	xor    BYTE PTR [rdx],al
  42fe29:	(bad)  
  42fe2a:	add    DWORD PTR [rax+0x1],esi
  42fe2d:	adc    BYTE PTR [rcx],cl
  42fe2f:	add    BYTE PTR [rax],dl
  42fe31:	movabs ds:0x5009700a600b300c,al
  42fe3a:	or     al,al
  42fe3c:	(bad)  
  42fe3d:	rol    BYTE PTR [rax+riz*8],1
  42fe40:	add    dh,al
  42fe42:	add    BYTE PTR [rax],al
  42fe44:	add    DWORD PTR [rcx+rax*1],eax
  42fe47:	add    BYTE PTR [rdx+rax*2],al
  42fe4a:	add    BYTE PTR [rax],al
  42fe4c:	add    DWORD PTR [rax],eax
  42fe4e:	add    BYTE PTR [rax],al
  42fe50:	add    DWORD PTR [rax],eax
  42fe52:	add    BYTE PTR [rax],al
  42fe54:	add    DWORD PTR [rax],eax
  42fe56:	add    BYTE PTR [rax],al
  42fe58:	add    DWORD PTR [rax],eax
  42fe5a:	add    BYTE PTR [rax],al
  42fe5c:	add    DWORD PTR [rax],ecx
  42fe5e:	add    eax,0x4420800
  42fe63:	xor    BYTE PTR [rbx],al
  42fe65:	(bad)  
  42fe66:	add    dh,BYTE PTR [rax+0x1]
  42fe69:	push   rax
  42fe6a:	add    BYTE PTR [rax],al
  42fe6c:	add    DWORD PTR [rsi],eax
  42fe6e:	add    eax,DWORD PTR [rax]
  42fe70:	(bad)  
  42fe71:	(bad)  
  42fe73:	xor    BYTE PTR [rcx],al
  42fe75:	(bad)  
  42fe76:	add    BYTE PTR [rax],al
  42fe78:	add    DWORD PTR [rcx+rax*1],eax
  42fe7b:	add    BYTE PTR [rdx+rax*2],al
  42fe7e:	add    BYTE PTR [rax],al
  42fe80:	add    DWORD PTR [rbx],edx
  42fe82:	(bad)  
  42fe83:	add    BYTE PTR [rbx],dl
  42fe85:	add    DWORD PTR [rsp+rax*1],eax
  42fe88:	or     esi,DWORD PTR [rax]
  42fe8a:	or     ah,BYTE PTR [rax+0x9]
  42fe8d:	jo     0x42fe92
  42fe8f:	push   rax
  42fe90:	add    al,al
  42fe92:	add    BYTE PTR [rax],al
  42fe94:	add    DWORD PTR [rdx],eax
  42fe96:	add    al,BYTE PTR [rax]
  42fe98:	add    dh,BYTE PTR [rax]
  42fe9a:	add    DWORD PTR [rax+0x1],esp
  42fe9d:	add    BYTE PTR [rax],al
  42fe9f:	add    BYTE PTR [rcx],al
  42fea1:	add    al,0x4
  42fea3:	add    BYTE PTR [rax+rsi*1],al
  42fea6:	add    esp,DWORD PTR [rax+0x2]
  42fea9:	jo     0x42feac
  42feab:	push   rax
  42feac:	add    DWORD PTR [rax+rcx*1],ecx
  42feaf:	add    BYTE PTR [rax+rsi*1],cl
  42feb2:	or     esp,DWORD PTR [rax+0xa]
  42feb5:	jo     0x42fec0
  42feb7:	push   rax
  42feb8:	or     al,al
  42feba:	(bad)  
  42febb:	rol    BYTE PTR [rax+riz*8],1
  42febe:	add    dh,al
  42fec0:	add    DWORD PTR [rax],ecx
  42fec2:	(bad)  
  42fec3:	add    BYTE PTR [rax],cl
  42fec5:	xor    BYTE PTR [rdi],al
  42fec7:	(bad)  
  42fec8:	(bad)  
  42fec9:	jo     0x42fed0
  42fecb:	push   rax
  42fecc:	add    al,0xc0
  42fece:	add    dl,al
  42fed0:	add    DWORD PTR [rax],eax
  42fed2:	add    BYTE PTR [rax],al
  42fed4:	add    DWORD PTR [rax],edx
  42fed6:	or     DWORD PTR [rax],eax
  42fed8:	adc    BYTE PTR [rdx+0xc],al
  42fedb:	xor    BYTE PTR [rbx],cl
  42fedd:	(bad)  
  42fede:	or     dh,BYTE PTR [rax+0x9]
  42fee1:	push   rax
  42fee2:	or     al,al
  42fee4:	(bad)  
  42fee5:	rol    BYTE PTR [rax+riz*8],1
  42fee8:	add    dh,al
  42feea:	add    BYTE PTR [rax],al
  42feec:	add    DWORD PTR [rax],ecx
  42feee:	(bad)  
  42feef:	add    BYTE PTR [rax],cl
  42fef1:	xor    BYTE PTR [rdi],al
  42fef3:	(bad)  
  42fef4:	(bad)  
  42fef5:	jo     0x42fefc
  42fef7:	push   rax
  42fef8:	add    al,0xc0
  42fefa:	add    dl,al
  42fefc:	add    DWORD PTR [rax],edx
  42fefe:	or     DWORD PTR [rax],eax
  42ff00:	adc    BYTE PTR [rdx+0xc],ah
  42ff03:	xor    BYTE PTR [rbx],cl
  42ff05:	(bad)  
  42ff06:	or     dh,BYTE PTR [rax+0x9]
  42ff09:	push   rax
  42ff0a:	or     al,al
  42ff0c:	(bad)  
  42ff0d:	rol    BYTE PTR [rax+riz*8],1
  42ff10:	add    dh,al
  42ff12:	add    BYTE PTR [rax],al
  42ff14:	add    DWORD PTR [rip+0x52050002],eax        # 0x5247ff1c
  42ff1a:	add    DWORD PTR [rax],esi
  42ff1c:	add    DWORD PTR [rcx+rax*1],eax
  42ff1f:	add    BYTE PTR [rdx+rax*2],al
  42ff22:	add    BYTE PTR [rax],al
  42ff24:	add    DWORD PTR [rcx+rax*1],eax
  42ff27:	add    BYTE PTR [rdx+rax*2],al
  42ff2a:	add    BYTE PTR [rax],al
  42ff2c:	add    DWORD PTR [rsi],eax
  42ff2e:	add    eax,DWORD PTR [rax]
  42ff30:	(bad)  
  42ff31:	rex.X add sil,BYTE PTR [rax]
  42ff34:	add    DWORD PTR [rax+0x0],esp
  42ff37:	add    BYTE PTR [rcx],al
  42ff39:	add    BYTE PTR [rax],al
  42ff3b:	add    BYTE PTR [rcx],al
  42ff3d:	add    BYTE PTR [rax],al
  42ff3f:	add    BYTE PTR [rcx],al
  42ff41:	add    BYTE PTR [rax],al
  42ff43:	add    BYTE PTR [rcx],al
  42ff45:	or     al,BYTE PTR [rsi]
  42ff47:	add    BYTE PTR [rdx],cl
  42ff49:	jb     0x42ff51
  42ff4b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b303b1
  42ff51:	push   rax
  42ff52:	add    al,al
  42ff54:	add    DWORD PTR [rdx],ecx
  42ff56:	add    eax,0x6d20a05
  42ff5b:	add    eax,DWORD PTR [rbx]
  42ff5d:	xor    BYTE PTR [rdx],al
  42ff5f:	(bad)  
  42ff60:	add    DWORD PTR [rax+0x0],edx
  42ff63:	add    BYTE PTR [rcx],al
  42ff65:	add    al,0x1
  42ff67:	add    BYTE PTR [rdx+rax*2],al
  42ff6a:	add    BYTE PTR [rax],al
  42ff6c:	add    DWORD PTR [rsi],eax
  42ff6e:	add    eax,DWORD PTR [rax]
  42ff70:	(bad)  
  42ff71:	rex.X add sil,BYTE PTR [rax]
  42ff74:	add    DWORD PTR [rax+0x0],esp
  42ff77:	add    BYTE PTR [rcx],al
  42ff79:	add    BYTE PTR [rax],al
  42ff7b:	add    BYTE PTR [rcx],al
  42ff7d:	add    al,0x1
  42ff7f:	add    BYTE PTR [rdx+riz*4],al
  42ff82:	add    BYTE PTR [rax],al
  42ff84:	add    DWORD PTR [rax],eax
  42ff86:	add    BYTE PTR [rax],al
  42ff88:	add    DWORD PTR [rsi],edx
  42ff8a:	or     DWORD PTR [rax],eax
  42ff8c:	(bad)  
  42ff8d:	mov    BYTE PTR [rsi],al
  42ff8f:	add    BYTE PTR [rax],dl
  42ff91:	js     0x42ff98
  42ff93:	add    BYTE PTR [rbx],cl
  42ff95:	push   0xffffffffe2060004
  42ff9a:	add    dh,BYTE PTR [rax]
  42ff9c:	add    DWORD PTR [rax+0x0],esp
  42ff9f:	add    BYTE PTR [rcx],al
  42ffa1:	add    BYTE PTR [rax],al
  42ffa3:	add    BYTE PTR [rcx],al
  42ffa5:	add    BYTE PTR [rax],al
  42ffa7:	add    BYTE PTR [rcx],al
  42ffa9:	add    BYTE PTR [rax],al
  42ffab:	add    BYTE PTR [rcx],al
  42ffad:	(bad)  
  42ffae:	add    eax,DWORD PTR [rax]
  42ffb0:	(bad)  
  42ffb1:	(bad)  
  42ffb3:	xor    BYTE PTR [rcx],al
  42ffb5:	(bad)  
  42ffb6:	add    BYTE PTR [rax],al
  42ffb8:	add    DWORD PTR [rdi+rax*1],ecx
  42ffbb:	add    BYTE PTR [rdx+riz*4],cl
  42ffbe:	or     BYTE PTR [rax],dh
  42ffc0:	(bad)  
  42ffc1:	(bad)  
  42ffc2:	(bad)  
  42ffc3:	jo     0x42ffca
  42ffc5:	push   rax
  42ffc6:	add    al,0xc0
  42ffc8:	add    dl,al
  42ffca:	add    BYTE PTR [rax],al
  42ffcc:	add    DWORD PTR [rcx],edx
  42ffce:	or     DWORD PTR [rip+0x30db211],eax        # 0x350b1e5
  42ffd4:	or     dh,BYTE PTR [rax]
  42ffd6:	or     DWORD PTR [rax+0x8],esp
  42ffd9:	jo     0x42ffe2
  42ffdb:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x22303b2
  42ffe2:	add    BYTE PTR [rax],al
  42ffe4:	add    DWORD PTR [rcx+rax*1],eax
  42ffe7:	add    BYTE PTR [rdx+rax*2],al
  42ffea:	add    BYTE PTR [rax],al
  42ffec:	add    DWORD PTR [rdx],ecx
  42ffee:	(bad)  
  42ffef:	add    BYTE PTR [rdx],cl
  42fff1:	xor    al,BYTE PTR [rsi]
  42fff3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b30459
  42fff9:	push   rax
  42fffa:	add    al,al
  42fffc:	add    DWORD PTR [rip+0x32050002],eax        # 0x32480004
  430002:	add    DWORD PTR [rax],esi
  430004:	add    DWORD PTR [rax],ecx
  430006:	add    eax,0x4420800
  43000b:	xor    BYTE PTR [rbx],al
  43000d:	(bad)  
  43000e:	add    dh,BYTE PTR [rax+0x1]
  430011:	push   rax
  430012:	add    BYTE PTR [rax],al
  430014:	add    DWORD PTR [rdi],eax
  430016:	add    al,0x0
  430018:	(bad)  
  430019:	xor    al,BYTE PTR [rbx]
  43001b:	xor    BYTE PTR [rdx],al
  43001d:	(bad)  
  43001e:	add    DWORD PTR [rax+0x1],esi
  430021:	add    eax,0x32050002
  430026:	add    DWORD PTR [rax],esi
  430028:	add    DWORD PTR [rip+0x32050002],eax        # 0x32480030
  43002e:	add    DWORD PTR [rax],esi
  430030:	add    DWORD PTR [rax],eax
  430032:	add    BYTE PTR [rax],al
  430034:	add    DWORD PTR [rax],eax
  430036:	add    BYTE PTR [rax],al
  430038:	add    DWORD PTR [rax],eax
  43003a:	add    BYTE PTR [rax],al
  43003c:	add    DWORD PTR [rdi],eax
  43003e:	add    al,0x0
  430040:	(bad)  
  430041:	xor    al,BYTE PTR [rbx]
  430043:	xor    BYTE PTR [rdx],al
  430045:	(bad)  
  430046:	add    DWORD PTR [rax+0x1],esi
  430049:	(bad)  
  43004a:	add    eax,DWORD PTR [rax]
  43004c:	(bad)  
  43004d:	rex.X add sil,BYTE PTR [rax]
  430050:	add    DWORD PTR [rax+0x0],esp
  430053:	add    BYTE PTR [rcx],al
  430055:	add    eax,0x32050002
  43005a:	add    DWORD PTR [rax],esi
  43005c:	add    DWORD PTR [rdi],eax
  43005e:	add    al,0x0
  430060:	(bad)  
  430061:	xor    al,BYTE PTR [rbx]
  430063:	xor    BYTE PTR [rdx],al
  430065:	(bad)  
  430066:	add    DWORD PTR [rax+0x1],esi
  430069:	(bad)  
  43006a:	add    eax,DWORD PTR [rax]
  43006c:	(bad)  
  43006d:	rex.X add sil,BYTE PTR [rax]
  430070:	add    DWORD PTR [rax+0x0],esp
  430073:	add    BYTE PTR [rcx],al
  430075:	(bad)  
  430076:	add    eax,DWORD PTR [rax]
  430078:	(bad)  
  430079:	rex.X add sil,BYTE PTR [rax]
  43007c:	add    DWORD PTR [rax+0x0],esp
  43007f:	add    BYTE PTR [rcx],al
  430081:	or     BYTE PTR [rip+0x4420800],al        # 0x4850887
  430087:	xor    BYTE PTR [rbx],al
  430089:	(bad)  
  43008a:	add    dh,BYTE PTR [rax+0x1]
  43008d:	push   rax
  43008e:	add    BYTE PTR [rax],al
  430090:	add    DWORD PTR [rax],ecx
  430092:	(bad)  
  430093:	add    BYTE PTR [rax],cl
  430095:	xor    BYTE PTR [rdi],al
  430097:	(bad)  
  430098:	(bad)  
  430099:	jo     0x4300a0
  43009b:	push   rax
  43009c:	add    al,0xc0
  43009e:	add    dl,al
  4300a0:	add    DWORD PTR [rdi],eax
  4300a2:	add    al,0x0
  4300a4:	(bad)  
  4300a5:	push   rdx
  4300a6:	add    esi,DWORD PTR [rax]
  4300a8:	add    ah,BYTE PTR [rax+0x1]
  4300ab:	jo     0x4300ae
  4300ad:	adc    BYTE PTR [rcx],cl
  4300af:	add    BYTE PTR [rax],dl
  4300b1:	(bad)  
  4300b2:	or     al,0x30
  4300b4:	or     esp,DWORD PTR [rax+0xa]
  4300b7:	jo     0x4300c2
  4300b9:	push   rax
  4300ba:	or     al,al
  4300bc:	(bad)  
  4300bd:	rol    BYTE PTR [rax+riz*8],1
  4300c0:	add    dh,al
  4300c2:	add    BYTE PTR [rax],al
  4300c4:	add    DWORD PTR [rax],edx
  4300c6:	or     DWORD PTR [rax],eax
  4300c8:	adc    BYTE PTR [rdx+0xc],ah
  4300cb:	xor    BYTE PTR [rbx],cl
  4300cd:	(bad)  
  4300ce:	or     dh,BYTE PTR [rax+0x9]
  4300d1:	push   rax
  4300d2:	or     al,al
  4300d4:	(bad)  
  4300d5:	rol    BYTE PTR [rax+riz*8],1
  4300d8:	add    dh,al
  4300da:	add    BYTE PTR [rax],al
  4300dc:	add    DWORD PTR [rcx+rax*1],eax
  4300df:	add    BYTE PTR [rdx+riz*2],al
  4300e2:	add    BYTE PTR [rax],al
  4300e4:	add    DWORD PTR [rcx+rax*1],eax
  4300e7:	add    BYTE PTR [rdx+riz*2],al
  4300ea:	add    BYTE PTR [rax],al
  4300ec:	add    DWORD PTR [rcx+rax*1],eax
  4300ef:	add    BYTE PTR [rdx+riz*2],al
  4300f2:	add    BYTE PTR [rax],al
  4300f4:	add    DWORD PTR [rax],edx
  4300f6:	or     DWORD PTR [rax],eax
  4300f8:	adc    BYTE PTR [rdx+0xc],al
  4300fb:	xor    BYTE PTR [rbx],cl
  4300fd:	(bad)  
  4300fe:	or     dh,BYTE PTR [rax+0x9]
  430101:	push   rax
  430102:	or     al,al
  430104:	(bad)  
  430105:	rol    BYTE PTR [rax+riz*8],1
  430108:	add    dh,al
  43010a:	add    BYTE PTR [rax],al
  43010c:	add    DWORD PTR [rax],edx
  43010e:	or     DWORD PTR [rax],eax
  430110:	adc    BYTE PTR [rdx+0xc],al
  430113:	xor    BYTE PTR [rbx],cl
  430115:	(bad)  
  430116:	or     dh,BYTE PTR [rax+0x9]
  430119:	push   rax
  43011a:	or     al,al
  43011c:	(bad)  
  43011d:	rol    BYTE PTR [rax+riz*8],1
  430120:	add    dh,al
  430122:	add    BYTE PTR [rax],al
  430124:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x1500131
  43012a:	rex.WX add BYTE PTR [rsi],al
  43012d:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b30593
  430133:	push   rax
  430134:	add    al,al
  430136:	add    BYTE PTR [rax],al
  430138:	add    DWORD PTR [rax],ecx
  43013a:	add    eax,0x4620800
  43013f:	xor    BYTE PTR [rbx],al
  430141:	(bad)  
  430142:	add    dh,BYTE PTR [rax+0x1]
  430145:	push   rax
  430146:	add    BYTE PTR [rax],al
  430148:	add    DWORD PTR [rax],eax
  43014a:	add    BYTE PTR [rax],al
  43014c:	add    DWORD PTR [rax],eax
  43014e:	add    BYTE PTR [rax],al
  430150:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000431000 <.bss>:
	...

Disassembly of section .idata:

0000000000434000 <.idata>:
  434000:	js     0x434042
  434002:	add    eax,DWORD PTR [rax]
	...
  43400c:	sbb    BYTE PTR [rcx+0x3],dl
  43400f:	add    BYTE PTR [rax-0x5ffffcbc],dh
  434015:	add    eax,DWORD PTR [r8]
	...
  434020:	sub    al,0x51
  434022:	add    eax,DWORD PTR [rax]
  434024:	fadd   DWORD PTR [rbp+0x3]
  434027:	add    BYTE PTR [rax+0x341],dh
  43402d:	add    BYTE PTR [rax],al
  43402f:	add    BYTE PTR [rax],al
  434031:	add    BYTE PTR [rax],al
  434033:	add    BYTE PTR [rcx+rdx*2+0x45e80003],bl
  43403a:	add    eax,DWORD PTR [rax]
  43403c:	js     0x434080
  43403e:	add    eax,DWORD PTR [rax]
	...
  434048:	mov    esp,0xb0000352
  43404d:	rex.RX add r8d,DWORD PTR [rax]
  434050:	movabs al,ds:0x344
  434059:	add    BYTE PTR [rax],al
  43405b:	add    ah,cl
  43405d:	push   rdx
  43405e:	add    eax,DWORD PTR [rax]
  434060:	fmul   DWORD PTR [rax+0x3]
	...
  434077:	add    al,ch
  434079:	add    rax,QWORD PTR [rax]
  43407c:	add    BYTE PTR [rax],al
  43407e:	add    BYTE PTR [rax],al
  434080:	hlt    
  434081:	add    rax,QWORD PTR [rax]
  434084:	add    BYTE PTR [rax],al
  434086:	add    BYTE PTR [rax],al
  434088:	add    BYTE PTR [rcx+0x3],cl
  43408b:	add    BYTE PTR [rax],al
  43408d:	add    BYTE PTR [rax],al
  43408f:	add    BYTE PTR [rcx+rcx*2],dl
  434092:	add    eax,DWORD PTR [rax]
  434094:	add    BYTE PTR [rax],al
  434096:	add    BYTE PTR [rax],al
  434098:	and    al,0x49
  43409a:	add    eax,DWORD PTR [rax]
  43409c:	add    BYTE PTR [rax],al
  43409e:	add    BYTE PTR [rax],al
  4340a0:	xor    al,0x49
  4340a2:	add    eax,DWORD PTR [rax]
  4340a4:	add    BYTE PTR [rax],al
  4340a6:	add    BYTE PTR [rax],al
  4340a8:	rex.R
  4340a9:	add    rax,QWORD PTR [r8]
  4340ac:	add    BYTE PTR [rax],al
  4340ae:	add    BYTE PTR [rax],al
  4340b0:	push   rsp
  4340b1:	add    rax,QWORD PTR [r8]
  4340b4:	add    BYTE PTR [rax],al
  4340b6:	add    BYTE PTR [rax],al
  4340b8:	add    rax,QWORD PTR fs:[r8]
  4340bc:	add    BYTE PTR [rax],al
  4340be:	add    BYTE PTR [rax],al
  4340c0:	jl     0x43410b
  4340c2:	add    eax,DWORD PTR [rax]
  4340c4:	add    BYTE PTR [rax],al
  4340c6:	add    BYTE PTR [rax],al
  4340c8:	xchg   esp,eax
  4340c9:	add    rax,QWORD PTR [r8]
  4340cc:	add    BYTE PTR [rax],al
  4340ce:	add    BYTE PTR [rax],al
  4340d0:	test   al,0x49
  4340d2:	add    eax,DWORD PTR [rax]
  4340d4:	add    BYTE PTR [rax],al
  4340d6:	add    BYTE PTR [rax],al
  4340d8:	mov    esp,0x349
  4340dd:	add    BYTE PTR [rax],al
  4340df:	add    ah,dl
  4340e1:	add    rax,QWORD PTR [r8]
  4340e4:	add    BYTE PTR [rax],al
  4340e6:	add    BYTE PTR [rax],al
  4340e8:	in     al,0x49
  4340ea:	add    eax,DWORD PTR [rax]
  4340ec:	add    BYTE PTR [rax],al
  4340ee:	add    BYTE PTR [rax],al
  4340f0:	lock add rax,QWORD PTR [r8]
  4340f4:	add    BYTE PTR [rax],al
  4340f6:	add    BYTE PTR [rax],al
  4340f8:	add    al,0x4a
  4340fa:	add    eax,DWORD PTR [rax]
  4340fc:	add    BYTE PTR [rax],al
  4340fe:	add    BYTE PTR [rax],al
  434100:	and    BYTE PTR [rdx+0x3],cl
  434103:	add    BYTE PTR [rax],al
  434105:	add    BYTE PTR [rax],al
  434107:	add    BYTE PTR [rax],bh
  434109:	rex.WX add rax,QWORD PTR [rax]
  43410c:	add    BYTE PTR [rax],al
  43410e:	add    BYTE PTR [rax],al
  434110:	rex.WR
  434111:	rex.WX add rax,QWORD PTR [rax]
  434114:	add    BYTE PTR [rax],al
  434116:	add    BYTE PTR [rax],al
  434118:	pop    rsp
  434119:	rex.WX add rax,QWORD PTR [rax]
  43411c:	add    BYTE PTR [rax],al
  43411e:	add    BYTE PTR [rax],al
  434120:	jo     0x43416c
  434122:	add    eax,DWORD PTR [rax]
  434124:	add    BYTE PTR [rax],al
  434126:	add    BYTE PTR [rax],al
  434128:	test   BYTE PTR [rdx+0x3],cl
  43412b:	add    BYTE PTR [rax],al
  43412d:	add    BYTE PTR [rax],al
  43412f:	add    BYTE PTR [rax+0x34a],bl
  434135:	add    BYTE PTR [rax],al
  434137:	add    BYTE PTR [rax+0x34a],dh
  43413d:	add    BYTE PTR [rax],al
  43413f:	add    ah,al
  434141:	rex.WX add rax,QWORD PTR [rax]
  434144:	add    BYTE PTR [rax],al
  434146:	add    BYTE PTR [rax],al
  434148:	fmul   DWORD PTR [rdx+0x3]
  43414b:	add    BYTE PTR [rax],al
  43414d:	add    BYTE PTR [rax],al
  43414f:	add    ah,ch
  434151:	rex.WX add rax,QWORD PTR [rax]
  434154:	add    BYTE PTR [rax],al
  434156:	add    BYTE PTR [rax],al
  434158:	add    BYTE PTR [rbx+0x3],cl
  43415b:	add    BYTE PTR [rax],al
  43415d:	add    BYTE PTR [rax],al
  43415f:	add    BYTE PTR [rbx+rcx*2],dl
  434162:	add    eax,DWORD PTR [rax]
  434164:	add    BYTE PTR [rax],al
  434166:	add    BYTE PTR [rax],al
  434168:	sub    BYTE PTR [rbx+0x3],cl
  43416b:	add    BYTE PTR [rax],al
  43416d:	add    BYTE PTR [rax],al
  43416f:	add    BYTE PTR [rax+0x4b],al
  434172:	add    eax,DWORD PTR [rax]
  434174:	add    BYTE PTR [rax],al
  434176:	add    BYTE PTR [rax],al
  434178:	push   rsp
  434179:	rex.WXB add rax,QWORD PTR [r8]
  43417c:	add    BYTE PTR [rax],al
  43417e:	add    BYTE PTR [rax],al
  434180:	rex.WXB add rax,QWORD PTR fs:[r8]
  434184:	add    BYTE PTR [rax],al
  434186:	add    BYTE PTR [rax],al
  434188:	je     0x4341d5
  43418a:	add    eax,DWORD PTR [rax]
  43418c:	add    BYTE PTR [rax],al
  43418e:	add    BYTE PTR [rax],al
  434190:	test   BYTE PTR [rbx+0x3],cl
	...
  43419f:	add    BYTE PTR [rbx+rcx*2+0x3],dl
	...
  4341ae:	add    BYTE PTR [rax],al
  4341b0:	movabs al,ds:0xb80000000000034b
  4341b9:	rex.WXB add rax,QWORD PTR [r8]
  4341bc:	add    BYTE PTR [rax],al
  4341be:	add    BYTE PTR [rax],al
  4341c0:	ror    BYTE PTR [rbx+0x3],1
  4341c3:	add    BYTE PTR [rax],al
  4341c5:	add    BYTE PTR [rax],al
  4341c7:	add    ah,ah
  4341c9:	rex.WXB add rax,QWORD PTR [r8]
  4341cc:	add    BYTE PTR [rax],al
  4341ce:	add    BYTE PTR [rax],al
  4341d0:	cli    
  4341d1:	rex.WXB add rax,QWORD PTR [r8]
  4341d4:	add    BYTE PTR [rax],al
  4341d6:	add    BYTE PTR [rax],al
  4341d8:	adc    BYTE PTR [rbx+rax*1+0x0],cl
  4341dc:	add    BYTE PTR [rax],al
  4341de:	add    BYTE PTR [rax],al
  4341e0:	and    BYTE PTR [rbx+rax*1+0x0],cl
  4341e4:	add    BYTE PTR [rax],al
  4341e6:	add    BYTE PTR [rax],al
  4341e8:	add    r8,QWORD PTR ss:[rax]
  4341ec:	add    BYTE PTR [rax],al
  4341ee:	add    BYTE PTR [rax],al
  4341f0:	rex.W
  4341f1:	add    r8,QWORD PTR [rax]
  4341f4:	add    BYTE PTR [rax],al
  4341f6:	add    BYTE PTR [rax],al
  4341f8:	(bad)  
  4341f9:	add    r8,QWORD PTR [rax]
  4341fc:	add    BYTE PTR [rax],al
  4341fe:	add    BYTE PTR [rax],al
  434200:	jb     0x43424e
  434202:	add    eax,DWORD PTR [rax]
  434204:	add    BYTE PTR [rax],al
  434206:	add    BYTE PTR [rax],al
  434208:	mov    cs,WORD PTR [rbx+rax*1+0x0]
  43420c:	add    BYTE PTR [rax],al
  43420e:	add    BYTE PTR [rax],al
  434210:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  434211:	add    r8,QWORD PTR [rax]
  434214:	add    BYTE PTR [rax],al
  434216:	add    BYTE PTR [rax],al
  434218:	ror    BYTE PTR [rbx+rax*1+0x0],0x0
  43421d:	add    BYTE PTR [rax],al
  43421f:	add    dh,dl
  434221:	add    r8,QWORD PTR [rax]
  434224:	add    BYTE PTR [rax],al
  434226:	add    BYTE PTR [rax],al
  434228:	(bad)  
  434229:	add    r8,QWORD PTR [rax]
  43422c:	add    BYTE PTR [rax],al
  43422e:	add    BYTE PTR [rax],al
  434230:	add    al,0x4d
  434232:	add    eax,DWORD PTR [rax]
  434234:	add    BYTE PTR [rax],al
  434236:	add    BYTE PTR [rax],al
  434238:	sbb    BYTE PTR [rbp+0x3],cl
  43423b:	add    BYTE PTR [rax],al
  43423d:	add    BYTE PTR [rax],al
  43423f:	add    BYTE PTR [rsi],dh
  434241:	add    r8,QWORD PTR [r8]
  434244:	add    BYTE PTR [rax],al
  434246:	add    BYTE PTR [rax],al
  434248:	add    r8,QWORD PTR ds:[r8]
  43424c:	add    BYTE PTR [rax],al
  43424e:	add    BYTE PTR [rax],al
  434250:	push   rdx
  434251:	add    r8,QWORD PTR [r8]
  434254:	add    BYTE PTR [rax],al
  434256:	add    BYTE PTR [rax],al
  434258:	(bad)  
  434259:	add    r8,QWORD PTR [r8]
  43425c:	add    BYTE PTR [rax],al
  43425e:	add    BYTE PTR [rax],al
  434260:	jl     0x4342af
  434262:	add    eax,DWORD PTR [rax]
  434264:	add    BYTE PTR [rax],al
  434266:	add    BYTE PTR [rax],al
  434268:	mov    cs,WORD PTR [rbp+0x3]
	...
  434277:	add    BYTE PTR [rsi+0x34d],bl
  43427d:	add    BYTE PTR [rax],al
  43427f:	add    BYTE PTR [rsi+0x34d],dh
  434285:	add    BYTE PTR [rax],al
  434287:	add    al,al
  434289:	add    r8,QWORD PTR [r8]
  43428c:	add    BYTE PTR [rax],al
  43428e:	add    BYTE PTR [rax],al
  434290:	(bad)  
  434291:	add    r8,QWORD PTR [r8]
  434294:	add    BYTE PTR [rax],al
  434296:	add    BYTE PTR [rax],al
  434298:	fimul  WORD PTR [rbp+0x3]
  43429b:	add    BYTE PTR [rax],al
  43429d:	add    BYTE PTR [rax],al
  43429f:	add    dl,ch
  4342a1:	add    r8,QWORD PTR [r8]
  4342a4:	add    BYTE PTR [rax],al
  4342a6:	add    BYTE PTR [rax],al
  4342a8:	clc    
  4342a9:	add    r8,QWORD PTR [r8]
  4342ac:	add    BYTE PTR [rax],al
  4342ae:	add    BYTE PTR [rax],al
  4342b0:	or     BYTE PTR [rsi+0x3],cl
  4342b3:	add    BYTE PTR [rax],al
  4342b5:	add    BYTE PTR [rax],al
  4342b7:	add    BYTE PTR [rdx],bl
  4342b9:	rex.WRX add r8,QWORD PTR [rax]
  4342bc:	add    BYTE PTR [rax],al
  4342be:	add    BYTE PTR [rax],al
  4342c0:	rex.WRX add r8,QWORD PTR cs:[rax]
  4342c4:	add    BYTE PTR [rax],al
  4342c6:	add    BYTE PTR [rax],al
  4342c8:	cmp    BYTE PTR [rsi+0x3],cl
  4342cb:	add    BYTE PTR [rax],al
  4342cd:	add    BYTE PTR [rax],al
  4342cf:	add    BYTE PTR [rsi+0x4e],al
  4342d2:	add    eax,DWORD PTR [rax]
  4342d4:	add    BYTE PTR [rax],al
  4342d6:	add    BYTE PTR [rax],al
  4342d8:	push   rax
  4342d9:	rex.WRX add r8,QWORD PTR [rax]
  4342dc:	add    BYTE PTR [rax],al
  4342de:	add    BYTE PTR [rax],al
  4342e0:	pop    rdx
  4342e1:	rex.WRX add r8,QWORD PTR [rax]
  4342e4:	add    BYTE PTR [rax],al
  4342e6:	add    BYTE PTR [rax],al
  4342e8:	(bad)  
  4342e9:	rex.WRX add r8,QWORD PTR [rax]
  4342ec:	add    BYTE PTR [rax],al
  4342ee:	add    BYTE PTR [rax],al
  4342f0:	ins    BYTE PTR es:[rdi],dx
  4342f1:	rex.WRX add r8,QWORD PTR [rax]
  4342f4:	add    BYTE PTR [rax],al
  4342f6:	add    BYTE PTR [rax],al
  4342f8:	js     0x434348
  4342fa:	add    eax,DWORD PTR [rax]
  4342fc:	add    BYTE PTR [rax],al
  4342fe:	add    BYTE PTR [rax],al
  434300:	or     BYTE PTR [rsi+0x3],0x0
  434304:	add    BYTE PTR [rax],al
  434306:	add    BYTE PTR [rax],al
  434308:	mov    cl,BYTE PTR [rsi+0x3]
  43430b:	add    BYTE PTR [rax],al
  43430d:	add    BYTE PTR [rax],al
  43430f:	add    BYTE PTR [rsi+0x34e],dl
  434315:	add    BYTE PTR [rax],al
  434317:	add    BYTE PTR [rsi+rcx*2+0x3],ah
  43431e:	add    BYTE PTR [rax],al
  434320:	scas   al,BYTE PTR es:[rdi]
  434321:	rex.WRX add r8,QWORD PTR [rax]
  434324:	add    BYTE PTR [rax],al
  434326:	add    BYTE PTR [rax],al
  434328:	mov    esp,0x34e
  43432d:	add    BYTE PTR [rax],al
  43432f:	add    ah,al
  434331:	rex.WRX add r8,QWORD PTR [rax]
  434334:	add    BYTE PTR [rax],al
  434336:	add    BYTE PTR [rax],al
  434338:	int3   
  434339:	rex.WRX add r8,QWORD PTR [rax]
  43433c:	add    BYTE PTR [rax],al
  43433e:	add    BYTE PTR [rax],al
  434340:	(bad)  
  434341:	rex.WRX add r8,QWORD PTR [rax]
  434344:	add    BYTE PTR [rax],al
  434346:	add    BYTE PTR [rax],al
  434348:	loop   0x434398
  43434a:	add    eax,DWORD PTR [rax]
  43434c:	add    BYTE PTR [rax],al
  43434e:	add    BYTE PTR [rax],al
  434350:	(bad)  
  434351:	rex.WRX add r8,QWORD PTR [rax]
  434354:	add    BYTE PTR [rax],al
  434356:	add    BYTE PTR [rax],al
  434358:	hlt    
  434359:	rex.WRX add r8,QWORD PTR [rax]
  43435c:	add    BYTE PTR [rax],al
  43435e:	add    BYTE PTR [rax],al
  434360:	dec    BYTE PTR [rsi+0x3]
  434363:	add    BYTE PTR [rax],al
  434365:	add    BYTE PTR [rax],al
  434367:	add    BYTE PTR [rsi],al
  434369:	rex.WRXB add r8,QWORD PTR [r8]
  43436c:	add    BYTE PTR [rax],al
  43436e:	add    BYTE PTR [rax],al
  434370:	adc    BYTE PTR [rdi+0x3],cl
  434373:	add    BYTE PTR [rax],al
  434375:	add    BYTE PTR [rax],al
  434377:	add    BYTE PTR [rax],bl
  434379:	rex.WRXB add r8,QWORD PTR [r8]
  43437c:	add    BYTE PTR [rax],al
  43437e:	add    BYTE PTR [rax],al
  434380:	and    BYTE PTR [rdi+0x3],cl
  434383:	add    BYTE PTR [rax],al
  434385:	add    BYTE PTR [rax],al
  434387:	add    BYTE PTR [rax],ch
  434389:	rex.WRXB add r8,QWORD PTR [r8]
  43438c:	add    BYTE PTR [rax],al
  43438e:	add    BYTE PTR [rax],al
  434390:	xor    BYTE PTR [rdi+0x3],cl
  434393:	add    BYTE PTR [rax],al
  434395:	add    BYTE PTR [rax],al
  434397:	add    BYTE PTR [rdi+rcx*2],bh
  43439a:	add    eax,DWORD PTR [rax]
  43439c:	add    BYTE PTR [rax],al
  43439e:	add    BYTE PTR [rax],al
  4343a0:	rex.RX
  4343a1:	rex.WRXB add r8,QWORD PTR [r8]
  4343a4:	add    BYTE PTR [rax],al
  4343a6:	add    BYTE PTR [rax],al
  4343a8:	rex.WRX
  4343a9:	rex.WRXB add r8,QWORD PTR [r8]
  4343ac:	add    BYTE PTR [rax],al
  4343ae:	add    BYTE PTR [rax],al
  4343b0:	pop    rax
  4343b1:	rex.WRXB add r8,QWORD PTR [r8]
  4343b4:	add    BYTE PTR [rax],al
  4343b6:	add    BYTE PTR [rax],al
  4343b8:	(bad)  
  4343b9:	rex.WRXB add r8,QWORD PTR [r8]
  4343bc:	add    BYTE PTR [rax],al
  4343be:	add    BYTE PTR [rax],al
  4343c0:	ins    BYTE PTR es:[rdi],dx
  4343c1:	rex.WRXB add r8,QWORD PTR [r8]
  4343c4:	add    BYTE PTR [rax],al
  4343c6:	add    BYTE PTR [rax],al
  4343c8:	jbe    0x434419
  4343ca:	add    eax,DWORD PTR [rax]
  4343cc:	add    BYTE PTR [rax],al
  4343ce:	add    BYTE PTR [rax],al
  4343d0:	or     BYTE PTR [rdi+0x3],0x0
  4343d4:	add    BYTE PTR [rax],al
  4343d6:	add    BYTE PTR [rax],al
  4343d8:	mov    cl,BYTE PTR [rdi+0x3]
  4343db:	add    BYTE PTR [rax],al
  4343dd:	add    BYTE PTR [rax],al
  4343df:	add    BYTE PTR [rdi+rcx*2+0x3],dl
  4343e6:	add    BYTE PTR [rax],al
  4343e8:	sahf   
  4343e9:	rex.WRXB add r8,QWORD PTR [r8]
  4343ec:	add    BYTE PTR [rax],al
  4343ee:	add    BYTE PTR [rax],al
  4343f0:	test   al,0x4f
  4343f2:	add    eax,DWORD PTR [rax]
  4343f4:	add    BYTE PTR [rax],al
  4343f6:	add    BYTE PTR [rax],al
  4343f8:	mov    al,0x4f
  4343fa:	add    eax,DWORD PTR [rax]
  4343fc:	add    BYTE PTR [rax],al
  4343fe:	add    BYTE PTR [rax],al
  434400:	mov    edx,0x34f
  434405:	add    BYTE PTR [rax],al
  434407:	add    ah,al
  434409:	rex.WRXB add r8,QWORD PTR [r8]
  43440c:	add    BYTE PTR [rax],al
  43440e:	add    BYTE PTR [rax],al
  434410:	(bad)  
  434411:	rex.WRXB add r8,QWORD PTR [r8]
  434414:	add    BYTE PTR [rax],al
  434416:	add    BYTE PTR [rax],al
  434418:	fmul   DWORD PTR [rdi+0x3]
  43441b:	add    BYTE PTR [rax],al
  43441d:	add    BYTE PTR [rax],al
  43441f:	add    dl,ah
  434421:	rex.WRXB add r8,QWORD PTR [r8]
  434424:	add    BYTE PTR [rax],al
  434426:	add    BYTE PTR [rax],al
  434428:	in     al,dx
  434429:	rex.WRXB add r8,QWORD PTR [r8]
  43442c:	add    BYTE PTR [rax],al
  43442e:	add    BYTE PTR [rax],al
  434430:	test   BYTE PTR [rdi+0x3],0x0
  434434:	add    BYTE PTR [rax],al
  434436:	add    BYTE PTR [rax],al
  434438:	add    BYTE PTR [rax+0x3],dl
  43443b:	add    BYTE PTR [rax],al
  43443d:	add    BYTE PTR [rax],al
  43443f:	add    BYTE PTR [rdx],cl
  434441:	push   rax
  434442:	add    eax,DWORD PTR [rax]
  434444:	add    BYTE PTR [rax],al
  434446:	add    BYTE PTR [rax],al
  434448:	adc    al,0x50
  43444a:	add    eax,DWORD PTR [rax]
  43444c:	add    BYTE PTR [rax],al
  43444e:	add    BYTE PTR [rax],al
  434450:	(bad)  
  434451:	push   rax
  434452:	add    eax,DWORD PTR [rax]
  434454:	add    BYTE PTR [rax],al
  434456:	add    BYTE PTR [rax],al
  434458:	sub    BYTE PTR [rax+0x3],dl
  43445b:	add    BYTE PTR [rax],al
  43445d:	add    BYTE PTR [rax],al
  43445f:	add    BYTE PTR [rdx],dh
  434461:	push   rax
  434462:	add    eax,DWORD PTR [rax]
  434464:	add    BYTE PTR [rax],al
  434466:	add    BYTE PTR [rax],al
  434468:	cmp    al,0x50
  43446a:	add    eax,DWORD PTR [rax]
  43446c:	add    BYTE PTR [rax],al
  43446e:	add    BYTE PTR [rax],al
  434470:	rex.RX push rax
  434472:	add    eax,DWORD PTR [rax]
  434474:	add    BYTE PTR [rax],al
  434476:	add    BYTE PTR [rax],al
  434478:	push   rdx
  434479:	push   rax
  43447a:	add    eax,DWORD PTR [rax]
  43447c:	add    BYTE PTR [rax],al
  43447e:	add    BYTE PTR [rax],al
  434480:	pop    rsp
  434481:	push   rax
  434482:	add    eax,DWORD PTR [rax]
  434484:	add    BYTE PTR [rax],al
  434486:	add    BYTE PTR [rax],al
  434488:	push   ax
  43448a:	add    eax,DWORD PTR [rax]
  43448c:	add    BYTE PTR [rax],al
  43448e:	add    BYTE PTR [rax],al
  434490:	jo     0x4344e2
  434492:	add    eax,DWORD PTR [rax]
	...
  4344a0:	jp     0x4344f2
  4344a2:	add    eax,DWORD PTR [rax]
	...
  4344b0:	call   0x4347fd
  4344b5:	add    BYTE PTR [rax],al
  4344b7:	add    ah,dh
  4344b9:	add    rax,QWORD PTR [rax]
  4344bc:	add    BYTE PTR [rax],al
  4344be:	add    BYTE PTR [rax],al
  4344c0:	add    BYTE PTR [rcx+0x3],cl
  4344c3:	add    BYTE PTR [rax],al
  4344c5:	add    BYTE PTR [rax],al
  4344c7:	add    BYTE PTR [rcx+rcx*2],dl
  4344ca:	add    eax,DWORD PTR [rax]
  4344cc:	add    BYTE PTR [rax],al
  4344ce:	add    BYTE PTR [rax],al
  4344d0:	and    al,0x49
  4344d2:	add    eax,DWORD PTR [rax]
  4344d4:	add    BYTE PTR [rax],al
  4344d6:	add    BYTE PTR [rax],al
  4344d8:	xor    al,0x49
  4344da:	add    eax,DWORD PTR [rax]
  4344dc:	add    BYTE PTR [rax],al
  4344de:	add    BYTE PTR [rax],al
  4344e0:	rex.R
  4344e1:	add    rax,QWORD PTR [r8]
  4344e4:	add    BYTE PTR [rax],al
  4344e6:	add    BYTE PTR [rax],al
  4344e8:	push   rsp
  4344e9:	add    rax,QWORD PTR [r8]
  4344ec:	add    BYTE PTR [rax],al
  4344ee:	add    BYTE PTR [rax],al
  4344f0:	add    rax,QWORD PTR fs:[r8]
  4344f4:	add    BYTE PTR [rax],al
  4344f6:	add    BYTE PTR [rax],al
  4344f8:	jl     0x434543
  4344fa:	add    eax,DWORD PTR [rax]
  4344fc:	add    BYTE PTR [rax],al
  4344fe:	add    BYTE PTR [rax],al
  434500:	xchg   esp,eax
  434501:	add    rax,QWORD PTR [r8]
  434504:	add    BYTE PTR [rax],al
  434506:	add    BYTE PTR [rax],al
  434508:	test   al,0x49
  43450a:	add    eax,DWORD PTR [rax]
  43450c:	add    BYTE PTR [rax],al
  43450e:	add    BYTE PTR [rax],al
  434510:	mov    esp,0x349
  434515:	add    BYTE PTR [rax],al
  434517:	add    ah,dl
  434519:	add    rax,QWORD PTR [r8]
  43451c:	add    BYTE PTR [rax],al
  43451e:	add    BYTE PTR [rax],al
  434520:	in     al,0x49
  434522:	add    eax,DWORD PTR [rax]
  434524:	add    BYTE PTR [rax],al
  434526:	add    BYTE PTR [rax],al
  434528:	lock add rax,QWORD PTR [r8]
  43452c:	add    BYTE PTR [rax],al
  43452e:	add    BYTE PTR [rax],al
  434530:	add    al,0x4a
  434532:	add    eax,DWORD PTR [rax]
  434534:	add    BYTE PTR [rax],al
  434536:	add    BYTE PTR [rax],al
  434538:	and    BYTE PTR [rdx+0x3],cl
  43453b:	add    BYTE PTR [rax],al
  43453d:	add    BYTE PTR [rax],al
  43453f:	add    BYTE PTR [rax],bh
  434541:	rex.WX add rax,QWORD PTR [rax]
  434544:	add    BYTE PTR [rax],al
  434546:	add    BYTE PTR [rax],al
  434548:	rex.WR
  434549:	rex.WX add rax,QWORD PTR [rax]
  43454c:	add    BYTE PTR [rax],al
  43454e:	add    BYTE PTR [rax],al
  434550:	pop    rsp
  434551:	rex.WX add rax,QWORD PTR [rax]
  434554:	add    BYTE PTR [rax],al
  434556:	add    BYTE PTR [rax],al
  434558:	jo     0x4345a4
  43455a:	add    eax,DWORD PTR [rax]
  43455c:	add    BYTE PTR [rax],al
  43455e:	add    BYTE PTR [rax],al
  434560:	test   BYTE PTR [rdx+0x3],cl
  434563:	add    BYTE PTR [rax],al
  434565:	add    BYTE PTR [rax],al
  434567:	add    BYTE PTR [rax+0x34a],bl
  43456d:	add    BYTE PTR [rax],al
  43456f:	add    BYTE PTR [rax+0x34a],dh
  434575:	add    BYTE PTR [rax],al
  434577:	add    ah,al
  434579:	rex.WX add rax,QWORD PTR [rax]
  43457c:	add    BYTE PTR [rax],al
  43457e:	add    BYTE PTR [rax],al
  434580:	fmul   DWORD PTR [rdx+0x3]
  434583:	add    BYTE PTR [rax],al
  434585:	add    BYTE PTR [rax],al
  434587:	add    ah,ch
  434589:	rex.WX add rax,QWORD PTR [rax]
  43458c:	add    BYTE PTR [rax],al
  43458e:	add    BYTE PTR [rax],al
  434590:	add    BYTE PTR [rbx+0x3],cl
  434593:	add    BYTE PTR [rax],al
  434595:	add    BYTE PTR [rax],al
  434597:	add    BYTE PTR [rbx+rcx*2],dl
  43459a:	add    eax,DWORD PTR [rax]
  43459c:	add    BYTE PTR [rax],al
  43459e:	add    BYTE PTR [rax],al
  4345a0:	sub    BYTE PTR [rbx+0x3],cl
  4345a3:	add    BYTE PTR [rax],al
  4345a5:	add    BYTE PTR [rax],al
  4345a7:	add    BYTE PTR [rax+0x4b],al
  4345aa:	add    eax,DWORD PTR [rax]
  4345ac:	add    BYTE PTR [rax],al
  4345ae:	add    BYTE PTR [rax],al
  4345b0:	push   rsp
  4345b1:	rex.WXB add rax,QWORD PTR [r8]
  4345b4:	add    BYTE PTR [rax],al
  4345b6:	add    BYTE PTR [rax],al
  4345b8:	rex.WXB add rax,QWORD PTR fs:[r8]
  4345bc:	add    BYTE PTR [rax],al
  4345be:	add    BYTE PTR [rax],al
  4345c0:	je     0x43460d
  4345c2:	add    eax,DWORD PTR [rax]
  4345c4:	add    BYTE PTR [rax],al
  4345c6:	add    BYTE PTR [rax],al
  4345c8:	test   BYTE PTR [rbx+0x3],cl
	...
  4345d7:	add    BYTE PTR [rbx+rcx*2+0x3],dl
	...
  4345e6:	add    BYTE PTR [rax],al
  4345e8:	movabs al,ds:0xb80000000000034b
  4345f1:	rex.WXB add rax,QWORD PTR [r8]
  4345f4:	add    BYTE PTR [rax],al
  4345f6:	add    BYTE PTR [rax],al
  4345f8:	ror    BYTE PTR [rbx+0x3],1
  4345fb:	add    BYTE PTR [rax],al
  4345fd:	add    BYTE PTR [rax],al
  4345ff:	add    ah,ah
  434601:	rex.WXB add rax,QWORD PTR [r8]
  434604:	add    BYTE PTR [rax],al
  434606:	add    BYTE PTR [rax],al
  434608:	cli    
  434609:	rex.WXB add rax,QWORD PTR [r8]
  43460c:	add    BYTE PTR [rax],al
  43460e:	add    BYTE PTR [rax],al
  434610:	adc    BYTE PTR [rbx+rax*1+0x0],cl
  434614:	add    BYTE PTR [rax],al
  434616:	add    BYTE PTR [rax],al
  434618:	and    BYTE PTR [rbx+rax*1+0x0],cl
  43461c:	add    BYTE PTR [rax],al
  43461e:	add    BYTE PTR [rax],al
  434620:	add    r8,QWORD PTR ss:[rax]
  434624:	add    BYTE PTR [rax],al
  434626:	add    BYTE PTR [rax],al
  434628:	rex.W
  434629:	add    r8,QWORD PTR [rax]
  43462c:	add    BYTE PTR [rax],al
  43462e:	add    BYTE PTR [rax],al
  434630:	(bad)  
  434631:	add    r8,QWORD PTR [rax]
  434634:	add    BYTE PTR [rax],al
  434636:	add    BYTE PTR [rax],al
  434638:	jb     0x434686
  43463a:	add    eax,DWORD PTR [rax]
  43463c:	add    BYTE PTR [rax],al
  43463e:	add    BYTE PTR [rax],al
  434640:	mov    cs,WORD PTR [rbx+rax*1+0x0]
  434644:	add    BYTE PTR [rax],al
  434646:	add    BYTE PTR [rax],al
  434648:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  434649:	add    r8,QWORD PTR [rax]
  43464c:	add    BYTE PTR [rax],al
  43464e:	add    BYTE PTR [rax],al
  434650:	ror    BYTE PTR [rbx+rax*1+0x0],0x0
  434655:	add    BYTE PTR [rax],al
  434657:	add    dh,dl
  434659:	add    r8,QWORD PTR [rax]
  43465c:	add    BYTE PTR [rax],al
  43465e:	add    BYTE PTR [rax],al
  434660:	(bad)  
  434661:	add    r8,QWORD PTR [rax]
  434664:	add    BYTE PTR [rax],al
  434666:	add    BYTE PTR [rax],al
  434668:	add    al,0x4d
  43466a:	add    eax,DWORD PTR [rax]
  43466c:	add    BYTE PTR [rax],al
  43466e:	add    BYTE PTR [rax],al
  434670:	sbb    BYTE PTR [rbp+0x3],cl
  434673:	add    BYTE PTR [rax],al
  434675:	add    BYTE PTR [rax],al
  434677:	add    BYTE PTR [rsi],dh
  434679:	add    r8,QWORD PTR [r8]
  43467c:	add    BYTE PTR [rax],al
  43467e:	add    BYTE PTR [rax],al
  434680:	add    r8,QWORD PTR ds:[r8]
  434684:	add    BYTE PTR [rax],al
  434686:	add    BYTE PTR [rax],al
  434688:	push   rdx
  434689:	add    r8,QWORD PTR [r8]
  43468c:	add    BYTE PTR [rax],al
  43468e:	add    BYTE PTR [rax],al
  434690:	(bad)  
  434691:	add    r8,QWORD PTR [r8]
  434694:	add    BYTE PTR [rax],al
  434696:	add    BYTE PTR [rax],al
  434698:	jl     0x4346e7
  43469a:	add    eax,DWORD PTR [rax]
  43469c:	add    BYTE PTR [rax],al
  43469e:	add    BYTE PTR [rax],al
  4346a0:	mov    cs,WORD PTR [rbp+0x3]
	...
  4346af:	add    BYTE PTR [rsi+0x34d],bl
  4346b5:	add    BYTE PTR [rax],al
  4346b7:	add    BYTE PTR [rsi+0x34d],dh
  4346bd:	add    BYTE PTR [rax],al
  4346bf:	add    al,al
  4346c1:	add    r8,QWORD PTR [r8]
  4346c4:	add    BYTE PTR [rax],al
  4346c6:	add    BYTE PTR [rax],al
  4346c8:	(bad)  
  4346c9:	add    r8,QWORD PTR [r8]
  4346cc:	add    BYTE PTR [rax],al
  4346ce:	add    BYTE PTR [rax],al
  4346d0:	fimul  WORD PTR [rbp+0x3]
  4346d3:	add    BYTE PTR [rax],al
  4346d5:	add    BYTE PTR [rax],al
  4346d7:	add    dl,ch
  4346d9:	add    r8,QWORD PTR [r8]
  4346dc:	add    BYTE PTR [rax],al
  4346de:	add    BYTE PTR [rax],al
  4346e0:	clc    
  4346e1:	add    r8,QWORD PTR [r8]
  4346e4:	add    BYTE PTR [rax],al
  4346e6:	add    BYTE PTR [rax],al
  4346e8:	or     BYTE PTR [rsi+0x3],cl
  4346eb:	add    BYTE PTR [rax],al
  4346ed:	add    BYTE PTR [rax],al
  4346ef:	add    BYTE PTR [rdx],bl
  4346f1:	rex.WRX add r8,QWORD PTR [rax]
  4346f4:	add    BYTE PTR [rax],al
  4346f6:	add    BYTE PTR [rax],al
  4346f8:	rex.WRX add r8,QWORD PTR cs:[rax]
  4346fc:	add    BYTE PTR [rax],al
  4346fe:	add    BYTE PTR [rax],al
  434700:	cmp    BYTE PTR [rsi+0x3],cl
  434703:	add    BYTE PTR [rax],al
  434705:	add    BYTE PTR [rax],al
  434707:	add    BYTE PTR [rsi+0x4e],al
  43470a:	add    eax,DWORD PTR [rax]
  43470c:	add    BYTE PTR [rax],al
  43470e:	add    BYTE PTR [rax],al
  434710:	push   rax
  434711:	rex.WRX add r8,QWORD PTR [rax]
  434714:	add    BYTE PTR [rax],al
  434716:	add    BYTE PTR [rax],al
  434718:	pop    rdx
  434719:	rex.WRX add r8,QWORD PTR [rax]
  43471c:	add    BYTE PTR [rax],al
  43471e:	add    BYTE PTR [rax],al
  434720:	(bad)  
  434721:	rex.WRX add r8,QWORD PTR [rax]
  434724:	add    BYTE PTR [rax],al
  434726:	add    BYTE PTR [rax],al
  434728:	ins    BYTE PTR es:[rdi],dx
  434729:	rex.WRX add r8,QWORD PTR [rax]
  43472c:	add    BYTE PTR [rax],al
  43472e:	add    BYTE PTR [rax],al
  434730:	js     0x434780
  434732:	add    eax,DWORD PTR [rax]
  434734:	add    BYTE PTR [rax],al
  434736:	add    BYTE PTR [rax],al
  434738:	or     BYTE PTR [rsi+0x3],0x0
  43473c:	add    BYTE PTR [rax],al
  43473e:	add    BYTE PTR [rax],al
  434740:	mov    cl,BYTE PTR [rsi+0x3]
  434743:	add    BYTE PTR [rax],al
  434745:	add    BYTE PTR [rax],al
  434747:	add    BYTE PTR [rsi+0x34e],dl
  43474d:	add    BYTE PTR [rax],al
  43474f:	add    BYTE PTR [rsi+rcx*2+0x3],ah
  434756:	add    BYTE PTR [rax],al
  434758:	scas   al,BYTE PTR es:[rdi]
  434759:	rex.WRX add r8,QWORD PTR [rax]
  43475c:	add    BYTE PTR [rax],al
  43475e:	add    BYTE PTR [rax],al
  434760:	mov    esp,0x34e
  434765:	add    BYTE PTR [rax],al
  434767:	add    ah,al
  434769:	rex.WRX add r8,QWORD PTR [rax]
  43476c:	add    BYTE PTR [rax],al
  43476e:	add    BYTE PTR [rax],al
  434770:	int3   
  434771:	rex.WRX add r8,QWORD PTR [rax]
  434774:	add    BYTE PTR [rax],al
  434776:	add    BYTE PTR [rax],al
  434778:	(bad)  
  434779:	rex.WRX add r8,QWORD PTR [rax]
  43477c:	add    BYTE PTR [rax],al
  43477e:	add    BYTE PTR [rax],al
  434780:	loop   0x4347d0
  434782:	add    eax,DWORD PTR [rax]
  434784:	add    BYTE PTR [rax],al
  434786:	add    BYTE PTR [rax],al
  434788:	(bad)  
  434789:	rex.WRX add r8,QWORD PTR [rax]
  43478c:	add    BYTE PTR [rax],al
  43478e:	add    BYTE PTR [rax],al
  434790:	hlt    
  434791:	rex.WRX add r8,QWORD PTR [rax]
  434794:	add    BYTE PTR [rax],al
  434796:	add    BYTE PTR [rax],al
  434798:	dec    BYTE PTR [rsi+0x3]
  43479b:	add    BYTE PTR [rax],al
  43479d:	add    BYTE PTR [rax],al
  43479f:	add    BYTE PTR [rsi],al
  4347a1:	rex.WRXB add r8,QWORD PTR [r8]
  4347a4:	add    BYTE PTR [rax],al
  4347a6:	add    BYTE PTR [rax],al
  4347a8:	adc    BYTE PTR [rdi+0x3],cl
  4347ab:	add    BYTE PTR [rax],al
  4347ad:	add    BYTE PTR [rax],al
  4347af:	add    BYTE PTR [rax],bl
  4347b1:	rex.WRXB add r8,QWORD PTR [r8]
  4347b4:	add    BYTE PTR [rax],al
  4347b6:	add    BYTE PTR [rax],al
  4347b8:	and    BYTE PTR [rdi+0x3],cl
  4347bb:	add    BYTE PTR [rax],al
  4347bd:	add    BYTE PTR [rax],al
  4347bf:	add    BYTE PTR [rax],ch
  4347c1:	rex.WRXB add r8,QWORD PTR [r8]
  4347c4:	add    BYTE PTR [rax],al
  4347c6:	add    BYTE PTR [rax],al
  4347c8:	xor    BYTE PTR [rdi+0x3],cl
  4347cb:	add    BYTE PTR [rax],al
  4347cd:	add    BYTE PTR [rax],al
  4347cf:	add    BYTE PTR [rdi+rcx*2],bh
  4347d2:	add    eax,DWORD PTR [rax]
  4347d4:	add    BYTE PTR [rax],al
  4347d6:	add    BYTE PTR [rax],al
  4347d8:	rex.RX
  4347d9:	rex.WRXB add r8,QWORD PTR [r8]
  4347dc:	add    BYTE PTR [rax],al
  4347de:	add    BYTE PTR [rax],al
  4347e0:	rex.WRX
  4347e1:	rex.WRXB add r8,QWORD PTR [r8]
  4347e4:	add    BYTE PTR [rax],al
  4347e6:	add    BYTE PTR [rax],al
  4347e8:	pop    rax
  4347e9:	rex.WRXB add r8,QWORD PTR [r8]
  4347ec:	add    BYTE PTR [rax],al
  4347ee:	add    BYTE PTR [rax],al
  4347f0:	(bad)  
  4347f1:	rex.WRXB add r8,QWORD PTR [r8]
  4347f4:	add    BYTE PTR [rax],al
  4347f6:	add    BYTE PTR [rax],al
  4347f8:	ins    BYTE PTR es:[rdi],dx
  4347f9:	rex.WRXB add r8,QWORD PTR [r8]
  4347fc:	add    BYTE PTR [rax],al
  4347fe:	add    BYTE PTR [rax],al
  434800:	jbe    0x434851
  434802:	add    eax,DWORD PTR [rax]
  434804:	add    BYTE PTR [rax],al
  434806:	add    BYTE PTR [rax],al
  434808:	or     BYTE PTR [rdi+0x3],0x0
  43480c:	add    BYTE PTR [rax],al
  43480e:	add    BYTE PTR [rax],al
  434810:	mov    cl,BYTE PTR [rdi+0x3]
  434813:	add    BYTE PTR [rax],al
  434815:	add    BYTE PTR [rax],al
  434817:	add    BYTE PTR [rdi+rcx*2+0x3],dl
  43481e:	add    BYTE PTR [rax],al
  434820:	sahf   
  434821:	rex.WRXB add r8,QWORD PTR [r8]
  434824:	add    BYTE PTR [rax],al
  434826:	add    BYTE PTR [rax],al
  434828:	test   al,0x4f
  43482a:	add    eax,DWORD PTR [rax]
  43482c:	add    BYTE PTR [rax],al
  43482e:	add    BYTE PTR [rax],al
  434830:	mov    al,0x4f
  434832:	add    eax,DWORD PTR [rax]
  434834:	add    BYTE PTR [rax],al
  434836:	add    BYTE PTR [rax],al
  434838:	mov    edx,0x34f
  43483d:	add    BYTE PTR [rax],al
  43483f:	add    ah,al
  434841:	rex.WRXB add r8,QWORD PTR [r8]
  434844:	add    BYTE PTR [rax],al
  434846:	add    BYTE PTR [rax],al
  434848:	(bad)  
  434849:	rex.WRXB add r8,QWORD PTR [r8]
  43484c:	add    BYTE PTR [rax],al
  43484e:	add    BYTE PTR [rax],al
  434850:	fmul   DWORD PTR [rdi+0x3]
  434853:	add    BYTE PTR [rax],al
  434855:	add    BYTE PTR [rax],al
  434857:	add    dl,ah
  434859:	rex.WRXB add r8,QWORD PTR [r8]
  43485c:	add    BYTE PTR [rax],al
  43485e:	add    BYTE PTR [rax],al
  434860:	in     al,dx
  434861:	rex.WRXB add r8,QWORD PTR [r8]
  434864:	add    BYTE PTR [rax],al
  434866:	add    BYTE PTR [rax],al
  434868:	test   BYTE PTR [rdi+0x3],0x0
  43486c:	add    BYTE PTR [rax],al
  43486e:	add    BYTE PTR [rax],al
  434870:	add    BYTE PTR [rax+0x3],dl
  434873:	add    BYTE PTR [rax],al
  434875:	add    BYTE PTR [rax],al
  434877:	add    BYTE PTR [rdx],cl
  434879:	push   rax
  43487a:	add    eax,DWORD PTR [rax]
  43487c:	add    BYTE PTR [rax],al
  43487e:	add    BYTE PTR [rax],al
  434880:	adc    al,0x50
  434882:	add    eax,DWORD PTR [rax]
  434884:	add    BYTE PTR [rax],al
  434886:	add    BYTE PTR [rax],al
  434888:	(bad)  
  434889:	push   rax
  43488a:	add    eax,DWORD PTR [rax]
  43488c:	add    BYTE PTR [rax],al
  43488e:	add    BYTE PTR [rax],al
  434890:	sub    BYTE PTR [rax+0x3],dl
  434893:	add    BYTE PTR [rax],al
  434895:	add    BYTE PTR [rax],al
  434897:	add    BYTE PTR [rdx],dh
  434899:	push   rax
  43489a:	add    eax,DWORD PTR [rax]
  43489c:	add    BYTE PTR [rax],al
  43489e:	add    BYTE PTR [rax],al
  4348a0:	cmp    al,0x50
  4348a2:	add    eax,DWORD PTR [rax]
  4348a4:	add    BYTE PTR [rax],al
  4348a6:	add    BYTE PTR [rax],al
  4348a8:	rex.RX push rax
  4348aa:	add    eax,DWORD PTR [rax]
  4348ac:	add    BYTE PTR [rax],al
  4348ae:	add    BYTE PTR [rax],al
  4348b0:	push   rdx
  4348b1:	push   rax
  4348b2:	add    eax,DWORD PTR [rax]
  4348b4:	add    BYTE PTR [rax],al
  4348b6:	add    BYTE PTR [rax],al
  4348b8:	pop    rsp
  4348b9:	push   rax
  4348ba:	add    eax,DWORD PTR [rax]
  4348bc:	add    BYTE PTR [rax],al
  4348be:	add    BYTE PTR [rax],al
  4348c0:	push   ax
  4348c2:	add    eax,DWORD PTR [rax]
  4348c4:	add    BYTE PTR [rax],al
  4348c6:	add    BYTE PTR [rax],al
  4348c8:	jo     0x43491a
  4348ca:	add    eax,DWORD PTR [rax]
	...
  4348d8:	jp     0x43492a
  4348da:	add    eax,DWORD PTR [rax]
	...
  4348e8:	imul   eax,DWORD PTR [rax],0x635f636e
  4348ee:	ins    BYTE PTR es:[rdi],dx
  4348ef:	outs   dx,DWORD PTR ds:[rsi]
  4348f0:	jae    0x434957
  4348f2:	add    BYTE PTR [rax],al
  4348f4:	ins    BYTE PTR es:[rdi],dx
  4348f5:	add    BYTE PTR [rsi+0x63],ch
  4348f8:	pop    rdi
  4348f9:	movsxd esi,DWORD PTR [rdx+0x65]
  4348fc:	(bad)  
  4348fd:	je     0x434964
  4348ff:	add    BYTE PTR [rbp+0x0],ch
  434902:	outs   dx,BYTE PTR ds:[rsi]
  434903:	movsxd ebx,DWORD PTR [rdi+0x64]
  434906:	gs pop di
  434909:	movsxd ebp,DWORD PTR [rdi+0x6d]
  43490c:	jo     0x43497d
  43490e:	jne    0x43497e
  434910:	add    BYTE PTR fs:[rax],al
  434913:	add    BYTE PTR [rsi+0x0],ch
  434916:	outs   dx,BYTE PTR ds:[rsi]
  434917:	movsxd ebx,DWORD PTR [rdi+0x64]
  43491a:	gs pop di
  43491d:	imul   ebp,DWORD PTR fs:[rbp+0x0],0x6f000000
  434925:	add    BYTE PTR [rsi+0x63],ch
  434928:	pop    rdi
  434929:	fs gs pop di
  43492d:	outs   dx,BYTE PTR gs:[rsi]
  43492f:	jne    0x43499e
  434931:	add    BYTE PTR [rax],al
  434933:	add    BYTE PTR [rax+0x0],dh
  434936:	outs   dx,BYTE PTR ds:[rsi]
  434937:	movsxd ebx,DWORD PTR [rdi+0x64]
  43493a:	gs pop di
  43493d:	addr32 jb 0x4349b0
  434940:	add    BYTE PTR [rax],al
  434942:	add    BYTE PTR [rax],al
  434944:	jno    0x434946
  434946:	outs   dx,BYTE PTR ds:[rsi]
  434947:	movsxd ebx,DWORD PTR [rdi+0x64]
  43494a:	gs pop di
  43494d:	outs   dx,DWORD PTR ds:[rsi]
  43494e:	jo     0x4349b1
  434950:	jno    0x4349c7
  434952:	add    BYTE PTR gs:[rdx+0x0],dh
  434956:	outs   dx,BYTE PTR ds:[rsi]
  434957:	movsxd ebx,DWORD PTR [rdi+0x64]
  43495a:	gs pop di
  43495d:	jbe    0x4349c0
  43495f:	jb     0x434961
  434961:	add    BYTE PTR [rax],al
  434963:	add    BYTE PTR [rbx+0x0],dh
  434966:	outs   dx,BYTE PTR ds:[rsi]
  434967:	movsxd ebx,DWORD PTR [rdi+0x64]
  43496a:	gs pop di
  43496d:	jbe    0x4349d0
  43496f:	jb     0x4349d0
  434971:	movsxd ebp,DWORD PTR [rax+0x75]
  434974:	outs   dx,BYTE PTR ds:[rsi]
  434975:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  434979:	add    BYTE PTR [rax],al
  43497b:	add    BYTE PTR [rbp+0x0],dh
  43497e:	outs   dx,BYTE PTR ds:[rsi]
  43497f:	movsxd ebx,DWORD PTR [rdi+0x64]
  434982:	gs pop di
  434985:	jbe    0x4349e8
  434987:	jb     0x4349e8
  434989:	fs gs data16 ins BYTE PTR es:[rdi],dx
  43498d:	(bad)  
  43498e:	je     0x4349f5
  434990:	add    BYTE PTR [rax],al
  434992:	add    BYTE PTR [rax],al
  434994:	jbe    0x434996
  434996:	outs   dx,BYTE PTR ds:[rsi]
  434997:	movsxd ebx,DWORD PTR [rdi+0x64]
  43499a:	gs pop di
  43499d:	jbe    0x434a00
  43499f:	jb     0x434a00
  4349a1:	outs   dx,BYTE PTR gs:[rsi]
  4349a3:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x6e007700
  4349ab:	movsxd ebx,DWORD PTR [rdi+0x64]
  4349ae:	gs pop di
  4349b1:	jbe    0x434a14
  4349b3:	jb     0x434a14
  4349b5:	imul   bp,WORD PTR [rsp+rbp*2+0x0],0x0
  4349bc:	js     0x4349be
  4349be:	outs   dx,BYTE PTR ds:[rsi]
  4349bf:	movsxd ebx,DWORD PTR [rdi+0x64]
  4349c2:	gs pop di
  4349c5:	jbe    0x434a28
  4349c7:	jb     0x434a28
  4349c9:	data16 ins BYTE PTR es:[rdi],dx
  4349cb:	gs je  0x434a31
  4349ce:	push   0x32337265
  4349d3:	add    BYTE PTR [rcx+0x0],bh
  4349d6:	outs   dx,BYTE PTR ds:[rsi]
  4349d7:	movsxd ebx,DWORD PTR [rdi+0x64]
  4349da:	gs pop di
  4349dd:	jbe    0x434a4b
  4349df:	outs   dx,BYTE PTR gs:[rsi]
  4349e1:	add    BYTE PTR [rax],al
  4349e3:	add    BYTE PTR [rbp+0x0],bh
  4349e6:	outs   dx,BYTE PTR ds:[rsi]
  4349e7:	movsxd ebx,DWORD PTR [rdi+0x65]
  4349ea:	outs   dx,BYTE PTR ds:[rsi]
  4349eb:	fs fs data16 add BYTE PTR gs:[rbx],al
  4349f1:	add    DWORD PTR [rsi+0x63],ebp
  4349f4:	pop    rdi
  4349f5:	imul   ebp,DWORD PTR [rsi+0x71],0x62696c5f
  4349fc:	jbe    0x434a63
  4349fe:	jb     0x434a73
  434a00:	add    BYTE PTR [rax],al
  434a02:	add    BYTE PTR [rax],al
  434a04:	and    DWORD PTR [rcx],eax
  434a06:	outs   dx,BYTE PTR ds:[rsi]
  434a07:	movsxd ebx,DWORD PTR [rdi+0x69]
  434a0a:	outs   dx,BYTE PTR ds:[rsi]
  434a0b:	jae    0x434a72
  434a0d:	jb     0x434a83
  434a0f:	pop    rdi
  434a10:	(bad)  
  434a11:	jb     0x434a85
  434a13:	(bad)  
  434a14:	jns    0x434a75
  434a16:	movsxd ebp,DWORD PTR [rdi+0x6d]
  434a19:	jo     0x434a8a
  434a1b:	jne    0x434a8b
  434a1d:	add    BYTE PTR fs:[rax],al
  434a20:	and    al,BYTE PTR [rcx]
  434a22:	outs   dx,BYTE PTR ds:[rsi]
  434a23:	movsxd ebx,DWORD PTR [rdi+0x69]
  434a26:	outs   dx,BYTE PTR ds:[rsi]
  434a27:	jae    0x434a8e
  434a29:	jb     0x434a9f
  434a2b:	pop    rdi
  434a2c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  434a2f:	jo     0x434aa0
  434a31:	jne    0x434aa1
  434a33:	add    BYTE PTR fs:[rax],al
  434a36:	add    BYTE PTR [rax],al
  434a38:	and    eax,DWORD PTR [rcx]
  434a3a:	outs   dx,BYTE PTR ds:[rsi]
  434a3b:	movsxd ebx,DWORD PTR [rdi+0x69]
  434a3e:	outs   dx,BYTE PTR ds:[rsi]
  434a3f:	jae    0x434aa6
  434a41:	jb     0x434ab7
  434a43:	pop    rdi
  434a44:	outs   dx,BYTE PTR gs:[rsi]
  434a46:	jne    0x434ab5
  434a48:	add    BYTE PTR [rax],al
  434a4a:	add    BYTE PTR [rax],al
  434a4c:	and    eax,0x5f636e01
  434a51:	jo     0x434ac8
  434a53:	je     0x434ab4
  434a55:	(bad)  
  434a56:	je     0x434acc
  434a58:	add    BYTE PTR [rax],al
  434a5a:	add    BYTE PTR [rax],al
  434a5c:	add    DWORD PTR es:[rsi+0x63],ebp
  434a60:	pop    rdi
  434a61:	jo     0x434ad8
  434a63:	je     0x434ac4
  434a65:	(bad)  
  434a66:	je     0x434adc
  434a68:	pop    rdi
  434a69:	outs   dx,DWORD PTR fs:[rsi]
  434a6b:	jne    0x434acf
  434a6d:	ins    BYTE PTR es:[rdi],dx
  434a6e:	add    BYTE PTR gs:[rdi],ah
  434a71:	add    DWORD PTR [rsi+0x63],ebp
  434a74:	pop    rdi
  434a75:	jo     0x434aec
  434a77:	je     0x434ad8
  434a79:	(bad)  
  434a7a:	je     0x434af0
  434a7c:	pop    rdi
  434a7d:	data16 ins BYTE PTR es:[rdi],dx
  434a7f:	outs   dx,DWORD PTR ds:[rsi]
  434a80:	(bad)  
  434a81:	je     0x434a83
  434a83:	add    BYTE PTR [rax],ch
  434a85:	add    DWORD PTR [rsi+0x63],ebp
  434a88:	pop    rdi
  434a89:	jo     0x434b00
  434a8b:	je     0x434aec
  434a8d:	(bad)  
  434a8e:	je     0x434b04
  434a90:	pop    rdi
  434a91:	imul   ebp,DWORD PTR [rsi+0x74],0x0
  434a98:	sub    al,BYTE PTR [rcx]
  434a9a:	outs   dx,BYTE PTR ds:[rsi]
  434a9b:	movsxd ebx,DWORD PTR [rdi+0x70]
  434a9e:	jne    0x434b14
  434aa0:	pop    rdi
  434aa1:	(bad)  
  434aa2:	je     0x434b18
  434aa4:	pop    rdi
  434aa5:	ins    BYTE PTR es:[rdi],dx
  434aa6:	outs   dx,DWORD PTR ds:[rsi]
  434aa7:	outs   dx,BYTE PTR ds:[rsi]
  434aa8:	ins    BYTE PTR es:[edi],dx
  434aaa:	outs   dx,DWORD PTR ds:[rsi]
  434aab:	outs   dx,BYTE PTR ds:[rsi]
  434aac:	add    BYTE PTR [eax],al
  434aaf:	add    BYTE PTR [rbx],ch
  434ab1:	add    DWORD PTR [rsi+0x63],ebp
  434ab4:	pop    rdi
  434ab5:	jo     0x434b2c
  434ab7:	je     0x434b18
  434ab9:	(bad)  
  434aba:	je     0x434b30
  434abc:	pop    rdi
  434abd:	jae    0x434b22
  434abf:	push   0x7261
  434ac4:	sub    al,0x1
  434ac6:	outs   dx,BYTE PTR ds:[rsi]
  434ac7:	movsxd ebx,DWORD PTR [rdi+0x70]
  434aca:	jne    0x434b40
  434acc:	pop    rdi
  434acd:	(bad)  
  434ace:	je     0x434b44
  434ad0:	pop    rdi
  434ad1:	jae    0x434b3b
  434ad3:	outs   dx,DWORD PTR ds:[rsi]
  434ad4:	jb     0x434b4a
  434ad6:	add    BYTE PTR [rax],al
  434ad8:	sub    eax,0x5f636e01
  434add:	jo     0x434b54
  434adf:	je     0x434b40
  434ae1:	(bad)  
  434ae2:	je     0x434b58
  434ae4:	pop    rdi
  434ae5:	jae    0x434b5b
  434ae7:	jb     0x434b52
  434ae9:	outs   dx,BYTE PTR ds:[rsi]
  434aea:	add    BYTE PTR [esi],ch
  434aed:	add    DWORD PTR [rsi+0x63],ebp
  434af0:	pop    rdi
  434af1:	jo     0x434b68
  434af3:	je     0x434b54
  434af5:	(bad)  
  434af6:	je     0x434b6c
  434af8:	pop    rdi
  434af9:	je     0x434b60
  434afb:	js     0x434b71
  434afd:	add    BYTE PTR [rax],al
  434aff:	add    BYTE PTR [rax],dh
  434b01:	add    DWORD PTR [rsi+0x63],ebp
  434b04:	pop    rdi
  434b05:	jo     0x434b7c
  434b07:	je     0x434b68
  434b09:	(bad)  
  434b0a:	je     0x434b80
  434b0c:	pop    rdi
  434b0d:	jne    0x434b72
  434b0f:	push   0x7261
  434b14:	xor    DWORD PTR [rcx],eax
  434b16:	outs   dx,BYTE PTR ds:[rsi]
  434b17:	movsxd ebx,DWORD PTR [rdi+0x70]
  434b1a:	jne    0x434b90
  434b1c:	pop    rdi
  434b1d:	(bad)  
  434b1e:	je     0x434b94
  434b20:	pop    rdi
  434b21:	jne    0x434b8c
  434b23:	outs   dx,BYTE PTR ds:[rsi]
  434b24:	je     0x434b26
  434b26:	add    BYTE PTR [rax],al
  434b28:	xor    al,BYTE PTR [rcx]
  434b2a:	outs   dx,BYTE PTR ds:[rsi]
  434b2b:	movsxd ebx,DWORD PTR [rdi+0x70]
  434b2e:	jne    0x434ba4
  434b30:	pop    rdi
  434b31:	(bad)  
  434b32:	je     0x434ba8
  434b34:	pop    rdi
  434b35:	jne    0x434ba3
  434b37:	outs   dx,DWORD PTR ds:[rsi]
  434b38:	outs   dx,BYTE PTR ds:[rsi]
  434b39:	ins    BYTE PTR es:[edi],dx
  434b3b:	outs   dx,DWORD PTR ds:[rsi]
  434b3c:	outs   dx,BYTE PTR ds:[rsi]
  434b3d:	add    BYTE PTR [eax],al
  434b40:	xor    eax,DWORD PTR [rcx]
  434b42:	outs   dx,BYTE PTR ds:[rsi]
  434b43:	movsxd ebx,DWORD PTR [rdi+0x70]
  434b46:	jne    0x434bbc
  434b48:	pop    rdi
  434b49:	(bad)  
  434b4a:	je     0x434bc0
  434b4c:	pop    rdi
  434b4d:	jne    0x434bc2
  434b4f:	push   0x74726f
  434b54:	xor    eax,0x5f636e01
  434b59:	jo     0x434bd0
  434b5b:	je     0x434bbc
  434b5d:	jbe    0x434bc0
  434b5f:	jb     0x434b92
  434b61:	add    BYTE PTR [rax],al
  434b63:	add    BYTE PTR [rdx+0x1],dl
  434b66:	outs   dx,BYTE PTR ds:[rsi]
  434b67:	movsxd ebx,DWORD PTR [rdi+0x70]
  434b6a:	jne    0x434be0
  434b6c:	pop    rdi
  434b6d:	jbe    0x434bd0
  434b6f:	jb     0x434bd2
  434b71:	add    BYTE PTR [rax],al
  434b73:	add    BYTE PTR [rcx+0x5f636e01],cl
  434b79:	jae    0x434be0
  434b7b:	je     0x434bdc
  434b7d:	imul   bp,WORD PTR [rsp+rbp*2+0x0],0x0
  434b84:	lea    eax,[rcx]
  434b86:	outs   dx,BYTE PTR ds:[rsi]
  434b87:	movsxd ebx,DWORD PTR [rdi+0x73]
  434b8a:	je     0x434bfe
  434b8c:	gs jb  0x434c01
  434b8f:	outs   dx,DWORD PTR ds:[rsi]
  434b90:	jb     0x434b92
  434b92:	add    BYTE PTR [rax],al
  434b94:	cli    
  434b95:	add    DWORD PTR [rax+0x35],ecx
  434b98:	rex.RB jo 0x434c0d
  434b9b:	imul   ebp,DWORD PTR [rsi+0x74],0xd80031
  434ba2:	rex.R
  434ba3:	gs ins BYTE PTR es:[rdi],dx
  434ba5:	gs je  0x434c0d
  434ba8:	rex.XB jb 0x434c14
  434bab:	je     0x434c16
  434bad:	movsxd esp,DWORD PTR [rcx+0x6c]
  434bb0:	push   rbx
  434bb1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  434bb6:	outs   dx,BYTE PTR ds:[rsi]
  434bb7:	add    al,bh
  434bb9:	add    BYTE PTR [rbp+0x6e],al
  434bbc:	je     0x434c23
  434bbe:	jb     0x434c03
  434bc0:	jb     0x434c2b
  434bc2:	je     0x434c2d
  434bc4:	movsxd esp,DWORD PTR [rcx+0x6c]
  434bc7:	push   rbx
  434bc8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  434bcd:	outs   dx,BYTE PTR ds:[rsi]
  434bce:	add    BYTE PTR [rax],al
  434bd0:	int    0x1
  434bd2:	rex.RXB
  434bd3:	gs je  0x434c19
  434bd6:	jne    0x434c4a
  434bd8:	jb     0x434c3f
  434bda:	outs   dx,BYTE PTR ds:[rsi]
  434bdb:	je     0x434c2d
  434bdd:	jb     0x434c4e
  434bdf:	movsxd esp,DWORD PTR [rbp+0x73]
  434be2:	jae    0x434be4
  434be4:	(bad)  
  434be5:	add    DWORD PTR [rdi+0x65],eax
  434be8:	je     0x434c2d
  434bea:	jne    0x434c5e
  434bec:	jb     0x434c53
  434bee:	outs   dx,BYTE PTR ds:[rsi]
  434bef:	je     0x434c41
  434bf1:	jb     0x434c62
  434bf3:	movsxd esp,DWORD PTR [rbp+0x73]
  434bf6:	jae    0x434c41
  434bf8:	fs add dl,dl
  434bfb:	add    DWORD PTR [rdi+0x65],eax
  434bfe:	je     0x434c43
  434c00:	jne    0x434c74
  434c02:	jb     0x434c69
  434c04:	outs   dx,BYTE PTR ds:[rsi]
  434c05:	je     0x434c5b
  434c07:	push   0x64616572
  434c0c:	rex.WB
  434c0d:	add    BYTE PTR fs:[rax],al
  434c10:	adc    BYTE PTR [rdx],al
  434c12:	rex.RXB
  434c13:	gs je  0x434c62
  434c16:	(bad)  
  434c17:	jae    0x434c8d
  434c19:	rex.RB jb 0x434c8e
  434c1c:	outs   dx,DWORD PTR ds:[rsi]
  434c1d:	jb     0x434c1f
  434c1f:	add    BYTE PTR [rbx],ah
  434c21:	add    al,BYTE PTR [rdi+0x65]
  434c24:	je     0x434c73
  434c26:	outs   dx,DWORD PTR ds:[rsi]
  434c27:	fs jne 0x434c96
  434c2a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  434c34:	add    BYTE PTR [rax],al
  434c36:	jae    0x434c3a
  434c38:	rex.RXB
  434c39:	gs je  0x434c8f
  434c3c:	je     0x434c9f
  434c3e:	jb     0x434cb4
  434c40:	jne    0x434cb2
  434c42:	rex.WB outs dx,BYTE PTR ds:[rsi]
  434c44:	outs   dx,WORD PTR ds:[rsi]
  434c46:	add    BYTE PTR [r10+0x74654702],cl
  434c4d:	push   rbx
  434c4e:	jns    0x434cc3
  434c50:	je     0x434cb7
  434c52:	ins    DWORD PTR es:[rdi],dx
  434c53:	push   rsp
  434c54:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  434c5b:	ins    BYTE PTR es:[rdi],dx
  434c5c:	gs push rsp
  434c5e:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  434c65:	gs je  0x434cbc
  434c68:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  434c6f:	je     0x434c71
  434c71:	add    cl,bh
  434c73:	add    cl,BYTE PTR [rcx+0x6e]
  434c76:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  434c7e:	rex.XB jb 0x434cea
  434c81:	je     0x434cec
  434c83:	movsxd esp,DWORD PTR [rcx+0x6c]
  434c86:	push   rbx
  434c87:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  434c8c:	outs   dx,BYTE PTR ds:[rsi]
  434c8d:	add    BYTE PTR [rbx+0x3],cl
  434c90:	rex.WR
  434c91:	gs (bad) 
  434c93:	jbe    0x434cfa
  434c95:	rex.XB jb 0x434d01
  434c98:	je     0x434d03
  434c9a:	movsxd esp,DWORD PTR [rcx+0x6c]
  434c9d:	push   rbx
  434c9e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  434ca3:	outs   dx,BYTE PTR ds:[rsi]
  434ca4:	add    BYTE PTR [rax],al
  434ca6:	mov    ebx,0x65755103
  434cab:	jb     0x434d26
  434cad:	push   rax
  434cae:	gs jb  0x434d17
  434cb1:	outs   dx,DWORD PTR ds:[rsi]
  434cb2:	jb     0x434d21
  434cb4:	(bad)  
  434cb5:	outs   dx,BYTE PTR ds:[rsi]
  434cb6:	movsxd esp,DWORD PTR [rbp+0x43]
  434cb9:	outs   dx,DWORD PTR ds:[rsi]
  434cba:	jne    0x434d2a
  434cbc:	je     0x434d23
  434cbe:	jb     0x434cc0
  434cc0:	add    DWORD PTR [rdx+rdx*2],eax
  434cc3:	je     0x434d31
  434cc5:	rex.B
  434cc6:	fs fs rex.RX jne 0x434d39
  434ccb:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  434ccf:	outs   dx,BYTE PTR ds:[rsi]
  434cd0:	push   rsp
  434cd1:	(bad)  
  434cd2:	(bad)  
  434cd3:	ins    BYTE PTR es:[rdi],dx
  434cd4:	add    BYTE PTR gs:[rdx],al
  434cd7:	add    al,0x52
  434cd9:	je     0x434d47
  434cdb:	rex.XB (bad) 
  434cdd:	jo     0x434d53
  434cdf:	jne    0x434d53
  434ce1:	rex.XB outs dx,DWORD PTR gs:[rsi]
  434ce4:	outs   dx,BYTE PTR ds:[rsi]
  434ce5:	je     0x434d4c
  434ce7:	js     0x434d5d
  434ce9:	add    BYTE PTR [rcx],cl
  434ceb:	add    al,0x52
  434ced:	je     0x434d5b
  434cef:	rex.WR outs dx,DWORD PTR ds:[rsi]
  434cf1:	outs   dx,DWORD PTR ds:[rsi]
  434cf2:	imul   esi,DWORD PTR [rbp+0x70],0x46
  434cf6:	jne    0x434d66
  434cf8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  434cfc:	outs   dx,BYTE PTR ds:[rsi]
  434cfd:	rex.RB outs dx,BYTE PTR ds:[rsi]
  434cff:	je     0x434d73
  434d01:	jns    0x434d03
  434d03:	add    BYTE PTR [rax],dl
  434d05:	add    al,0x52
  434d07:	je     0x434d75
  434d09:	push   rsi
  434d0a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  434d11:	outs   dx,BYTE PTR ds:[rsi]
  434d12:	ja     0x434d7d
  434d14:	outs   dx,BYTE PTR ds:[rsi]
  434d15:	add    BYTE PTR fs:[rax],al
  434d18:	lahf   
  434d19:	add    al,0x53
  434d1b:	gs je  0x434d73
  434d1e:	outs   dx,BYTE PTR ds:[rsi]
  434d1f:	push   0x6c646e61
  434d24:	gs fs rex.RB js 0x434d8c
  434d29:	gs jo  0x434da0
  434d2c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  434d33:	gs jb  0x434d36
  434d36:	lods   al,BYTE PTR ds:[rsi]
  434d37:	add    al,0x53
  434d39:	ins    BYTE PTR es:[rdi],dx
  434d3a:	gs gs jo 0x434d3e
  434d3e:	mov    edx,0x72655404
  434d43:	ins    DWORD PTR es:[rdi],dx
  434d44:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  434d4b:	outs   dx,DWORD PTR ds:[rsi]
  434d4c:	movsxd esp,DWORD PTR [rbp+0x73]
  434d4f:	jae    0x434d51
  434d51:	add    cl,al
  434d53:	add    al,0x54
  434d55:	ins    BYTE PTR es:[rdi],dx
  434d56:	jae    0x434d9f
  434d58:	gs je  0x434db1
  434d5b:	(bad)  
  434d5c:	ins    BYTE PTR es:[rdi],dx
  434d5d:	jne    0x434dc4
  434d5f:	add    dh,cl
  434d61:	add    al,0x55
  434d63:	outs   dx,BYTE PTR ds:[rsi]
  434d64:	push   0x6c646e61
  434d69:	gs fs rex.RB js 0x434dd1
  434d6e:	gs jo  0x434de5
  434d71:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  434d78:	gs jb  0x434d7b
  434d7b:	add    ah,ch
  434d7d:	add    al,0x56
  434d7f:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  434d86:	jb     0x434df7
  434d88:	je     0x434def
  434d8a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  434d8e:	out    dx,al
  434d8f:	add    al,0x56
  434d91:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  434d98:	jne    0x434dff
  434d9a:	jb     0x434e15
  434d9c:	add    BYTE PTR [rax],al
  434d9e:	(bad)  
  434d9f:	add    BYTE PTR [rdi+0x5f],bl
  434da2:	rex.XB pop r15
  434da4:	jae    0x434e16
  434da6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  434daa:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  434db1:	ins    BYTE PTR es:[rdi],dx
  434db2:	gs jb  0x434db5
  434db5:	add    BYTE PTR [rsi+0x0],al
  434db8:	pop    rdi
  434db9:	pop    rdi
  434dba:	(bad)  
  434dbb:	jb     0x434e24
  434dbd:	jbe    0x434dbf
  434dbf:	add    BYTE PTR [rsi+0x0],cl
  434dc2:	pop    rdi
  434dc3:	pop    rdi
  434dc4:	fs ins BYTE PTR es:[rdi],dx
  434dc6:	ins    BYTE PTR es:[rdi],dx
  434dc7:	outs   dx,DWORD PTR ds:[rsi]
  434dc8:	outs   dx,BYTE PTR ds:[rsi]
  434dc9:	gs js  0x434e35
  434dcc:	je     0x434dce
  434dce:	push   rcx
  434dcf:	add    BYTE PTR [rdi+0x5f],bl
  434dd2:	addr32 gs je 0x434e43
  434dd6:	(bad)  
  434dd7:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  434dde:	push   rdx
  434ddf:	add    BYTE PTR [rdi+0x5f],bl
  434de2:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  434de9:	add    BYTE PTR [rbx+0x0],dl
  434dec:	pop    rdi
  434ded:	pop    rdi
  434dee:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  434df5:	movsxd eax,DWORD PTR [rax]
  434df7:	add    BYTE PTR [rdx+0x0],bl
  434dfa:	pop    rdi
  434dfb:	pop    rdi
  434dfc:	ins    BYTE PTR es:[rdi],dx
  434dfd:	movsxd ebp,DWORD PTR [rdi+0x6e]
  434e00:	jbe    0x434e61
  434e02:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  434e09:	add    BYTE PTR [rdi+0x5f],bl
  434e0c:	jae    0x434e73
  434e0e:	je     0x434e6f
  434e10:	(bad)  
  434e11:	jo     0x434e83
  434e13:	pop    rdi
  434e14:	je     0x434e8f
  434e16:	jo     0x434e7d
  434e18:	add    BYTE PTR [rax],al
  434e1a:	(bad)  
  434e1b:	add    BYTE PTR [rdi+0x5f],bl
  434e1e:	jae    0x434e85
  434e20:	je     0x434e97
  434e22:	jae    0x434e89
  434e24:	jb     0x434e93
  434e26:	(bad)  
  434e27:	je     0x434e91
  434e29:	gs jb  0x434e9e
  434e2c:	add    BYTE PTR [rax],al
  434e2e:	jno    0x434e30
  434e30:	pop    rdi
  434e31:	(bad)  
  434e32:	movsxd ebp,DWORD PTR [rbp+0x64]
  434e35:	ins    BYTE PTR es:[rdi],dx
  434e36:	outs   dx,BYTE PTR ds:[rsi]
  434e37:	add    BYTE PTR [rax+0x0],bh
  434e3a:	pop    rdi
  434e3b:	(bad)  
  434e3c:	ins    DWORD PTR es:[rdi],dx
  434e3d:	jae    0x434ea6
  434e3f:	pop    rdi
  434e40:	gs js  0x434eac
  434e43:	je     0x434e45
  434e45:	add    BYTE PTR [rdx+0x65635f00],cl
  434e4b:	js     0x434eb6
  434e4d:	je     0x434e4f
  434e4f:	add    BYTE PTR [rdx+0x72655f00],bh
  434e55:	jb     0x434ec5
  434e57:	outs   dx,DWORD PTR ds:[rsi]
  434e58:	add    BYTE PTR [rax],al
  434e5a:	ret    
  434e5b:	add    BYTE PTR [rdi+0x65],bl
  434e5e:	js     0x434ec9
  434e60:	je     0x434e62
  434e62:	fiadd  DWORD PTR [rax]
  434e64:	pop    rdi
  434e65:	ins    WORD PTR es:[rdi],dx
  434e67:	outs   dx,DWORD PTR ds:[rsi]
  434e68:	fs add BYTE PTR gs:[rax],al
  434e6c:	sbb    al,BYTE PTR [rcx]
  434e6e:	pop    rdi
  434e6f:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  434e76:	ins    DWORD PTR es:[rdi],dx
  434e77:	add    BYTE PTR [rax+0x6f6c5f01],al
  434e7d:	movsxd ebp,DWORD PTR [rbx+0x0]
  434e80:	and    eax,0x6e6f5f02
  434e85:	gs js  0x434ef1
  434e88:	je     0x434e8a
  434e8a:	pop    rcx
  434e8b:	add    bl,BYTE PTR [rdi+0x73]
  434e8e:	outs   dx,BYTE PTR ds:[rsi]
  434e8f:	jo     0x434f03
  434e91:	imul   ebp,DWORD PTR [rsi+0x74],0x2630066
  434e98:	pop    rdi
  434e99:	jae    0x434f09
  434e9b:	ja     0x434f0d
  434e9d:	jb     0x434f08
  434e9f:	outs   dx,BYTE PTR ds:[rsi]
  434ea0:	je     0x434f08
  434ea2:	add    BYTE PTR [rax],al
  434ea4:	(bad)
  434ea8:	outs   dx,BYTE PTR ds:[rsi]
  434ea9:	ins    BYTE PTR es:[rdi],dx
  434eaa:	outs   dx,DWORD PTR ds:[rsi]
  434eab:	movsxd ebp,DWORD PTR [rbx+0x0]
  434eae:	loope  0x434eb2
  434eb0:	pop    rdi
  434eb1:	jbe    0x434f26
  434eb3:	outs   dx,BYTE PTR ds:[rsi]
  434eb4:	jo     0x434f28
  434eb6:	imul   ebp,DWORD PTR [rsi+0x74],0x7f000066
  434ebd:	add    esp,DWORD PTR [rcx+0x62]
  434ec0:	outs   dx,DWORD PTR ds:[rsi]
  434ec1:	jb     0x434f37
  434ec3:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  434eca:	add    BYTE PTR [rax],al
  434ecc:	nop
  434ecd:	add    esp,DWORD PTR [rbx+0x61]
  434ed0:	ins    BYTE PTR es:[rdi],dx
  434ed1:	ins    BYTE PTR es:[rdi],dx
  434ed2:	outs   dx,DWORD PTR ds:[rsi]
  434ed3:	movsxd eax,DWORD PTR [rax]
  434ed5:	add    BYTE PTR [rbx+0x656c6303],dl
  434edb:	(bad)  
  434edc:	jb     0x434f43
  434ede:	jb     0x434f52
  434ee0:	add    BYTE PTR [rax],al
  434ee2:	popf   
  434ee3:	add    esp,DWORD PTR [rbp+0x78]
  434ee6:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x656603a3
  434eee:	jb     0x434f62
  434ef0:	outs   dx,DWORD PTR ds:[rsi]
  434ef1:	jb     0x434ef3
  434ef3:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  434efa:	jae    0x434f64
  434efc:	add    BYTE PTR [rax],al
  434efe:	scas   al,BYTE PTR es:[rdi]
  434eff:	add    esp,DWORD PTR [rsi+0x6f]
  434f02:	jo     0x434f69
  434f04:	outs   dx,BYTE PTR ds:[rsi]
  434f05:	add    BYTE PTR [rax+0x72706603],dh
  434f0b:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  434f12:	data16 jo 0x434f8a
  434f15:	je     0x434f7a
  434f17:	add    BYTE PTR [rbx+0x75706603],dh
  434f1d:	je     0x434f92
  434f1f:	add    BYTE PTR [rsi+0x65726603],dh
  434f25:	(bad)  
  434f26:	add    BYTE PTR fs:[rdi+0x65726603],dh
  434f2d:	add    BYTE PTR gs:[rax],al
  434f30:	rol    BYTE PTR [rbx],0x66
  434f33:	ja     0x434fa5
  434f35:	jb     0x434fa0
  434f37:	outs   dx,BYTE PTR ds:[rsi]
  434f38:	je     0x434fa0
  434f3a:	add    BYTE PTR [rax],al
  434f3c:	ret    0x6603
  434f3f:	ja     0x434fb3
  434f41:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c500
  434f49:	gs je  0x434faf
  434f4c:	add    BYTE PTR [rax],al
  434f4e:	mov    DWORD PTR [rbx],0x65746567
  434f54:	outs   dx,BYTE PTR ds:[rsi]
  434f55:	jbe    0x434f57
  434f57:	add    ah,dl
  434f59:	add    ebp,DWORD PTR [rcx+0x73]
  434f5c:	ins    BYTE PTR es:[rdi],dx
  434f5d:	outs   dx,DWORD PTR ds:[rsi]
  434f5e:	ja     0x434fc5
  434f60:	jb     0x434f62
  434f62:	xlat   BYTE PTR ds:[rbx]
  434f63:	add    ebp,DWORD PTR [rcx+0x73]
  434f66:	jae    0x434fd8
  434f68:	(bad)  
  434f69:	movsxd esp,DWORD PTR [rbp+0x0]
  434f6c:	fadd   DWORD PTR [rbx]
  434f6e:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
  434f75:	add    al,dh
  434f77:	add    ebp,DWORD PTR [rbp+0x61]
  434f7a:	ins    BYTE PTR es:[rdi],dx
  434f7b:	ins    BYTE PTR es:[rdi],dx
  434f7c:	outs   dx,DWORD PTR ds:[rsi]
  434f7d:	movsxd eax,DWORD PTR [rax]
  434f7f:	add    al,bh
  434f81:	add    ebp,DWORD PTR [rbp+0x65]
  434f84:	ins    DWORD PTR es:[rdi],dx
  434f85:	movsxd esi,DWORD PTR [rax+0x79]
  434f88:	add    BYTE PTR [rax],al
  434f8a:	stc    
  434f8b:	add    ebp,DWORD PTR [rbp+0x65]
  434f8e:	ins    DWORD PTR es:[rdi],dx
  434f8f:	ins    DWORD PTR es:[rdi],dx
  434f90:	outs   dx,DWORD PTR ds:[rsi]
  434f91:	jbe    0x434ff8
  434f93:	add    dl,bh
  434f95:	add    ebp,DWORD PTR [rbp+0x65]
  434f98:	ins    DWORD PTR es:[rdi],dx
  434f99:	jae    0x435000
  434f9b:	je     0x434f9d
  434f9d:	add    dh,bh
  434f9f:	add    esi,DWORD PTR [rax+0x65]
  434fa2:	jb     0x435016
  434fa4:	outs   dx,DWORD PTR ds:[rsi]
  434fa5:	jb     0x434fa7
  434fa7:	add    BYTE PTR [rdx],cl
  434fa9:	add    al,0x72
  434fab:	(bad)  
  434fac:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  434fb3:	gs (bad) 
  434fb5:	ins    BYTE PTR es:[rdi],dx
  434fb6:	ins    BYTE PTR es:[rdi],dx
  434fb7:	outs   dx,DWORD PTR ds:[rsi]
  434fb8:	movsxd eax,DWORD PTR [rax]
  434fba:	(bad)  
  434fbc:	jb     0x435023
  434fbe:	ja     0x435029
  434fc0:	outs   dx,BYTE PTR ds:[rsi]
  434fc1:	add    BYTE PTR fs:[rax],al
  434fc4:	(bad)  
  434fc5:	add    al,0x73
  434fc7:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  434fce:	sbb    eax,DWORD PTR [rbx+rsi*2]
  434fd1:	jo     0x435045
  434fd3:	imul   ebp,DWORD PTR [rsi+0x74],0x41f0066
  434fda:	jae    0x43504f
  434fdc:	movsxd esp,DWORD PTR [rcx+0x6e]
  434fdf:	data16 add BYTE PTR [rax],al
  434fe2:	and    DWORD PTR [rbx+rsi*2],eax
  434fe5:	je     0x435059
  434fe7:	movsxd esp,DWORD PTR [rcx+0x74]
  434fea:	add    BYTE PTR [rax],al
  434fec:	and    eax,DWORD PTR [rbx+rsi*2]
  434fef:	je     0x435063
  434ff1:	movsxd ebp,DWORD PTR [rax+0x72]
  434ff4:	add    BYTE PTR [rax],al
  434ff6:	and    al,0x4
  434ff8:	jae    0x43506e
  434ffa:	jb     0x43505f
  434ffc:	ins    DWORD PTR es:[rdi],dx
  434ffd:	jo     0x434fff
  434fff:	add    BYTE PTR [rsi],ah
  435001:	add    al,0x73
  435003:	je     0x435077
  435005:	movsxd esi,DWORD PTR [rax+0x79]
  435008:	add    BYTE PTR [rax],al
  43500a:	sub    eax,DWORD PTR [rbx+rsi*2]
  43500d:	je     0x435081
  43500f:	ins    BYTE PTR es:[rdi],dx
  435010:	outs   dx,BYTE PTR gs:[rsi]
  435012:	add    BYTE PTR [rax],al
  435014:	sub    al,0x4
  435016:	jae    0x43508c
  435018:	jb     0x435088
  43501a:	movsxd esp,DWORD PTR [rcx+0x74]
  43501d:	add    BYTE PTR [rsi],ch
  43501f:	add    al,0x73
  435021:	je     0x435095
  435023:	outs   dx,BYTE PTR ds:[rsi]
  435024:	movsxd ebp,DWORD PTR [rbp+0x70]
  435027:	add    BYTE PTR [rdi],ch
  435029:	add    al,0x73
  43502b:	je     0x43509f
  43502d:	outs   dx,BYTE PTR ds:[rsi]
  43502e:	movsxd esi,DWORD PTR [rax+0x79]
  435031:	add    BYTE PTR [rdx],dh
  435033:	add    al,0x73
  435035:	je     0x4350a9
  435037:	jb     0x43509c
  435039:	push   0x4480072
  43503e:	je     0x4350af
  435040:	ins    BYTE PTR es:[rdi],dx
  435041:	outs   dx,DWORD PTR ds:[rsi]
  435042:	ja     0x4350a9
  435044:	jb     0x435046
  435046:	rex.WRX add al,0x76
  435049:	data16 jo 0x4350be
  43504c:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  435053:	add    al,0x77
  435055:	movsxd esi,DWORD PTR [rbx+0x63]
  435058:	jo     0x4350d3
  43505a:	add    BYTE PTR [rax],al
  43505c:	mov    esi,0x74735f04
  435061:	jb     0x4350c7
  435063:	jne    0x4350d5
  435065:	add    dh,bl
  435067:	add    al,0x5f
  435069:	imul   esi,DWORD PTR [rbx+0x61],0x797474
  435070:	call   0x69a9af79
  435075:	ins    BYTE PTR es:[rdi],dx
  435076:	outs   dx,BYTE PTR gs:[rsi]
  435078:	outs   dx,DWORD PTR ds:[rsi]
  435079:	add    al,dh
  43507b:	add    DWORD PTR [rbp+0x65],ecx
  43507e:	jae    0x4350f3
  435080:	(bad)  
  435081:	rex.X outs dx,DWORD PTR gs:[esi]
  435085:	js     0x4350de
  435087:	add    BYTE PTR [rax],al
  435089:	rex add eax,DWORD PTR [rax]
  43508c:	add    BYTE PTR [rax+0x3],al
  43508f:	add    BYTE PTR [rax],al
  435091:	rex add eax,DWORD PTR [rax]
  435094:	add    BYTE PTR [rax+0x3],al
  435097:	add    BYTE PTR [rax],al
  435099:	rex add eax,DWORD PTR [rax]
  43509c:	add    BYTE PTR [rax+0x3],al
  43509f:	add    BYTE PTR [rax],al
  4350a1:	rex add eax,DWORD PTR [rax]
  4350a4:	add    BYTE PTR [rax+0x3],al
  4350a7:	add    BYTE PTR [rax],al
  4350a9:	rex add eax,DWORD PTR [rax]
  4350ac:	add    BYTE PTR [rax+0x3],al
  4350af:	add    BYTE PTR [rax],al
  4350b1:	rex add eax,DWORD PTR [rax]
  4350b4:	add    BYTE PTR [rax+0x3],al
  4350b7:	add    BYTE PTR [rax],al
  4350b9:	rex add eax,DWORD PTR [rax]
  4350bc:	add    BYTE PTR [rax+0x3],al
  4350bf:	add    BYTE PTR [rax],al
  4350c1:	rex add eax,DWORD PTR [rax]
  4350c4:	add    BYTE PTR [rax+0x3],al
  4350c7:	add    BYTE PTR [rax],al
  4350c9:	rex add eax,DWORD PTR [rax]
  4350cc:	add    BYTE PTR [rax+0x3],al
  4350cf:	add    BYTE PTR [rax],al
  4350d1:	rex add eax,DWORD PTR [rax]
  4350d4:	add    BYTE PTR [rax+0x3],al
  4350d7:	add    BYTE PTR [rax],al
  4350d9:	rex add eax,DWORD PTR [rax]
  4350dc:	add    BYTE PTR [rax+0x3],al
  4350df:	add    BYTE PTR [rax],al
  4350e1:	rex add eax,DWORD PTR [rax]
  4350e4:	add    BYTE PTR [rax+0x3],al
  4350e7:	add    BYTE PTR [rax],al
  4350e9:	rex add eax,DWORD PTR [rax]
  4350ec:	add    BYTE PTR [rax+0x3],al
  4350ef:	add    BYTE PTR [rax],al
  4350f1:	rex add eax,DWORD PTR [rax]
  4350f4:	add    BYTE PTR [rax+0x3],al
  4350f7:	add    BYTE PTR [rax],al
  4350f9:	rex add eax,DWORD PTR [rax]
  4350fc:	add    BYTE PTR [rax+0x3],al
  4350ff:	add    BYTE PTR [rax],al
  435101:	rex add eax,DWORD PTR [rax]
  435104:	add    BYTE PTR [rax+0x3],al
  435107:	add    BYTE PTR [rax],al
  435109:	rex add eax,DWORD PTR [rax]
  43510c:	add    BYTE PTR [rax+0x3],al
  43510f:	add    BYTE PTR [rax],al
  435111:	rex add eax,DWORD PTR [rax]
  435114:	add    BYTE PTR [rax+0x3],al
  435117:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  43511b:	outs   dx,BYTE PTR ds:[rsi]
  43511c:	gs je  0x435182
  43511f:	fs sub ax,0x2e37
  435124:	fs ins BYTE PTR es:[rdi],dx
  435126:	ins    BYTE PTR es:[rdi],dx
  435127:	add    BYTE PTR [rax+rax*2],dl
  43512a:	add    eax,DWORD PTR [rax]
  43512c:	ins    BYTE PTR es:[rdi],dx
  43512d:	imul   esp,DWORD PTR [rdx+0x68],0x2d356664
  435134:	cmp    DWORD PTR [rsi],ebp
  435136:	fs ins BYTE PTR es:[rdi],dx
  435138:	ins    BYTE PTR es:[rdi],dx
  435139:	add    BYTE PTR [rax],al
  43513b:	add    BYTE PTR [rax],ch
  43513d:	rex add eax,DWORD PTR [rax]
  435140:	sub    BYTE PTR [rax+0x3],al
  435143:	add    BYTE PTR [rax],ch
  435145:	rex add eax,DWORD PTR [rax]
  435148:	sub    BYTE PTR [rax+0x3],al
  43514b:	add    BYTE PTR [rax],ch
  43514d:	rex add eax,DWORD PTR [rax]
  435150:	sub    BYTE PTR [rax+0x3],al
  435153:	add    BYTE PTR [rax],ch
  435155:	rex add eax,DWORD PTR [rax]
  435158:	sub    BYTE PTR [rax+0x3],al
  43515b:	add    BYTE PTR [rax],ch
  43515d:	rex add eax,DWORD PTR [rax]
  435160:	sub    BYTE PTR [rax+0x3],al
  435163:	add    BYTE PTR [rax],ch
  435165:	rex add eax,DWORD PTR [rax]
  435168:	sub    BYTE PTR [rax+0x3],al
  43516b:	add    BYTE PTR [rax],ch
  43516d:	rex add eax,DWORD PTR [rax]
  435170:	sub    BYTE PTR [rax+0x3],al
  435173:	add    BYTE PTR [rax],ch
  435175:	rex add eax,DWORD PTR [rax]
  435178:	sub    BYTE PTR [rax+0x3],al
  43517b:	add    BYTE PTR [rax],ch
  43517d:	rex add eax,DWORD PTR [rax]
  435180:	sub    BYTE PTR [rax+0x3],al
  435183:	add    BYTE PTR [rax],ch
  435185:	rex add eax,DWORD PTR [rax]
  435188:	sub    BYTE PTR [rax+0x3],al
  43518b:	add    BYTE PTR [rax],ch
  43518d:	rex add eax,DWORD PTR [rax]
  435190:	sub    BYTE PTR [rax+0x3],al
  435193:	add    BYTE PTR [rax],ch
  435195:	rex add eax,DWORD PTR [rax]
  435198:	sub    BYTE PTR [rax+0x3],al
  43519b:	add    BYTE PTR [rbx+0x45],cl
  43519e:	push   rdx
  43519f:	rex.WRX
  4351a0:	rex.RB
  4351a1:	xor    r14,QWORD PTR [rdx]
  4351a4:	cs fs ins BYTE PTR es:[rdi],dx
  4351a7:	ins    BYTE PTR es:[rdi],dx
  4351a8:	add    BYTE PTR [rax],al
  4351aa:	add    BYTE PTR [rax],al
  4351ac:	cmp    al,0x40
  4351ae:	add    eax,DWORD PTR [rax]
  4351b0:	cmp    al,0x40
  4351b2:	add    eax,DWORD PTR [rax]
  4351b4:	cmp    al,0x40
  4351b6:	add    eax,DWORD PTR [rax]
  4351b8:	cmp    al,0x40
  4351ba:	add    eax,DWORD PTR [rax]
  4351bc:	cmp    al,0x40
  4351be:	add    eax,DWORD PTR [rax]
  4351c0:	cmp    al,0x40
  4351c2:	add    eax,DWORD PTR [rax]
  4351c4:	cmp    al,0x40
  4351c6:	add    eax,DWORD PTR [rax]
  4351c8:	cmp    al,0x40
  4351ca:	add    eax,DWORD PTR [rax]
  4351cc:	cmp    al,0x40
  4351ce:	add    eax,DWORD PTR [rax]
  4351d0:	cmp    al,0x40
  4351d2:	add    eax,DWORD PTR [rax]
  4351d4:	cmp    al,0x40
  4351d6:	add    eax,DWORD PTR [rax]
  4351d8:	cmp    al,0x40
  4351da:	add    eax,DWORD PTR [rax]
  4351dc:	cmp    al,0x40
  4351de:	add    eax,DWORD PTR [rax]
  4351e0:	cmp    al,0x40
  4351e2:	add    eax,DWORD PTR [rax]
  4351e4:	cmp    al,0x40
  4351e6:	add    eax,DWORD PTR [rax]
  4351e8:	cmp    al,0x40
  4351ea:	add    eax,DWORD PTR [rax]
  4351ec:	cmp    al,0x40
  4351ee:	add    eax,DWORD PTR [rax]
  4351f0:	cmp    al,0x40
  4351f2:	add    eax,DWORD PTR [rax]
  4351f4:	cmp    al,0x40
  4351f6:	add    eax,DWORD PTR [rax]
  4351f8:	cmp    al,0x40
  4351fa:	add    eax,DWORD PTR [rax]
  4351fc:	cmp    al,0x40
  4351fe:	add    eax,DWORD PTR [rax]
  435200:	cmp    al,0x40
  435202:	add    eax,DWORD PTR [rax]
  435204:	cmp    al,0x40
  435206:	add    eax,DWORD PTR [rax]
  435208:	cmp    al,0x40
  43520a:	add    eax,DWORD PTR [rax]
  43520c:	cmp    al,0x40
  43520e:	add    eax,DWORD PTR [rax]
  435210:	cmp    al,0x40
  435212:	add    eax,DWORD PTR [rax]
  435214:	cmp    al,0x40
  435216:	add    eax,DWORD PTR [rax]
  435218:	cmp    al,0x40
  43521a:	add    eax,DWORD PTR [rax]
  43521c:	cmp    al,0x40
  43521e:	add    eax,DWORD PTR [rax]
  435220:	cmp    al,0x40
  435222:	add    eax,DWORD PTR [rax]
  435224:	cmp    al,0x40
  435226:	add    eax,DWORD PTR [rax]
  435228:	cmp    al,0x40
  43522a:	add    eax,DWORD PTR [rax]
  43522c:	cmp    al,0x40
  43522e:	add    eax,DWORD PTR [rax]
  435230:	cmp    al,0x40
  435232:	add    eax,DWORD PTR [rax]
  435234:	cmp    al,0x40
  435236:	add    eax,DWORD PTR [rax]
  435238:	cmp    al,0x40
  43523a:	add    eax,DWORD PTR [rax]
  43523c:	cmp    al,0x40
  43523e:	add    eax,DWORD PTR [rax]
  435240:	cmp    al,0x40
  435242:	add    eax,DWORD PTR [rax]
  435244:	cmp    al,0x40
  435246:	add    eax,DWORD PTR [rax]
  435248:	cmp    al,0x40
  43524a:	add    eax,DWORD PTR [rax]
  43524c:	cmp    al,0x40
  43524e:	add    eax,DWORD PTR [rax]
  435250:	cmp    al,0x40
  435252:	add    eax,DWORD PTR [rax]
  435254:	cmp    al,0x40
  435256:	add    eax,DWORD PTR [rax]
  435258:	cmp    al,0x40
  43525a:	add    eax,DWORD PTR [rax]
  43525c:	cmp    al,0x40
  43525e:	add    eax,DWORD PTR [rax]
  435260:	cmp    al,0x40
  435262:	add    eax,DWORD PTR [rax]
  435264:	cmp    al,0x40
  435266:	add    eax,DWORD PTR [rax]
  435268:	cmp    al,0x40
  43526a:	add    eax,DWORD PTR [rax]
  43526c:	cmp    al,0x40
  43526e:	add    eax,DWORD PTR [rax]
  435270:	cmp    al,0x40
  435272:	add    eax,DWORD PTR [rax]
  435274:	cmp    al,0x40
  435276:	add    eax,DWORD PTR [rax]
  435278:	cmp    al,0x40
  43527a:	add    eax,DWORD PTR [rax]
  43527c:	cmp    al,0x40
  43527e:	add    eax,DWORD PTR [rax]
  435280:	cmp    al,0x40
  435282:	add    eax,DWORD PTR [rax]
  435284:	cmp    al,0x40
  435286:	add    eax,DWORD PTR [rax]
  435288:	cmp    al,0x40
  43528a:	add    eax,DWORD PTR [rax]
  43528c:	cmp    al,0x40
  43528e:	add    eax,DWORD PTR [rax]
  435290:	cmp    al,0x40
  435292:	add    eax,DWORD PTR [rax]
  435294:	cmp    al,0x40
  435296:	add    eax,DWORD PTR [rax]
  435298:	cmp    al,0x40
  43529a:	add    eax,DWORD PTR [rax]
  43529c:	cmp    al,0x40
  43529e:	add    eax,DWORD PTR [rax]
  4352a0:	cmp    al,0x40
  4352a2:	add    eax,DWORD PTR [rax]
  4352a4:	cmp    al,0x40
  4352a6:	add    eax,DWORD PTR [rax]
  4352a8:	cmp    al,0x40
  4352aa:	add    eax,DWORD PTR [rax]
  4352ac:	cmp    al,0x40
  4352ae:	add    eax,DWORD PTR [rax]
  4352b0:	cmp    al,0x40
  4352b2:	add    eax,DWORD PTR [rax]
  4352b4:	cmp    al,0x40
  4352b6:	add    eax,DWORD PTR [rax]
  4352b8:	cmp    al,0x40
  4352ba:	add    eax,DWORD PTR [rax]
  4352bc:	ins    DWORD PTR es:[rdi],dx
  4352bd:	jae    0x435335
  4352bf:	movsxd esi,DWORD PTR [rdx+0x74]
  4352c2:	cs fs ins BYTE PTR es:[rdi],dx
  4352c5:	ins    BYTE PTR es:[rdi],dx
  4352c6:	add    BYTE PTR [rax],al
  4352c8:	push   rax
  4352c9:	rex add eax,DWORD PTR [rax]
  4352cc:	push   rbp
  4352cd:	push   rbx
  4352ce:	rex.RB push r10
  4352d0:	xor    esi,DWORD PTR [rdx]
  4352d2:	cs fs ins BYTE PTR es:[rdi],dx
  4352d5:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000436000 <.CRT>:
	...
  436008:	(bad)  
  436009:	adc    DWORD PTR [rax+0x0],eax
	...
  436020:	adc    BYTE PTR [rax],dl
  436022:	add    BYTE PTR [rax],al
  436025:	add    BYTE PTR [rax],al
  436027:	add    BYTE PTR [rax-0x4c],dl
  43602a:	add    BYTE PTR [r8],al
	...
  43603d:	add    BYTE PTR [rax],al
  43603f:	add    BYTE PTR [rax+0x41b6],al
  436045:	add    BYTE PTR [rax],al
  436047:	add    BYTE PTR [rax-0x4a],dl
  43604a:	add    BYTE PTR [r8],al
	...

Disassembly of section .tls:

0000000000437000 <.tls>:
	...
  437020:	add    BYTE PTR [rax+0x43],dh
  437023:	add    BYTE PTR [rax],al
  437025:	add    BYTE PTR [rax],al
  437027:	add    BYTE PTR [rax+0x70],ah
  43702a:	rex.XB add BYTE PTR [r8],al
  43702d:	add    BYTE PTR [rax],al
  43702f:	add    BYTE PTR [rdx+rsi*1+0x43],bl
  437036:	add    BYTE PTR [rax],al
  437038:	rex (bad) 
  43703a:	rex.XB add BYTE PTR [r8],al
	...
