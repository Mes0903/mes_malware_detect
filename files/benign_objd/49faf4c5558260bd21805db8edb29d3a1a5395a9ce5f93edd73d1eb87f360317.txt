
49faf4c5558260bd21805db8edb29d3a1a5395a9ce5f93edd73d1eb87f360317.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x15c15]        # 0x416c30
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x15c16]        # 0x416c40
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x15c19]        # 0x416c50
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x15bdc]        # 0x416c20
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x15a8f]        # 0x416ae0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x15bb1]        # 0x416c10
  40105f:	mov    DWORD PTR [rip+0x18fa3],edx        # 0x41a008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x411338
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x410240
  401081:	mov    rdx,QWORD PTR [rip+0x15ae8]        # 0x416b70
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x15ace]        # 0x416b60
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x15b34]        # 0x416bd0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x15a6b]        # 0x416b10
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x40fe20
  4010af:	mov    rax,QWORD PTR [rip+0x159da]        # 0x416a90
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x411338
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xeff9]        # 0x410120
  401127:	call   0x410110
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x15a95]        # 0x416c00
  40116b:	lea    r8,[rip+0x18ea6]        # 0x41a018
  401172:	lea    rdx,[rip+0x18ea7]        # 0x41a020
  401179:	lea    rcx,[rip+0x18ea8]        # 0x41a028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x18e78],eax        # 0x41a000
  401188:	lea    rax,[rip+0x18e71]        # 0x41a000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x15a25]        # 0x416bc0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x411350
  4011a3:	mov    DWORD PTR [rip+0x18e67],eax        # 0x41a010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x15a4a]        # 0x416c10
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x1594b]        # 0x416b40
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1b12a]        # 0x41c32c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x15927]        # 0x416b50
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x18dba],0x1        # 0x41a004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x1586c]        # 0x416ad0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x410430
  40127d:	lea    rcx,[rip+0xf74c]        # 0x4109d0
  401284:	call   QWORD PTR [rip+0x1b09a]        # 0x41c324
  40128a:	mov    rdx,QWORD PTR [rip+0x1589f]        # 0x416b30
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4108e0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x411380
  4012a5:	call   0x410220
  4012aa:	mov    rax,QWORD PTR [rip+0x1582f]        # 0x416ae0
  4012b1:	mov    QWORD PTR [rip+0x19750],rax        # 0x41aa08
  4012b8:	mov    rax,QWORD PTR [rip+0x15841]        # 0x416b00
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x196e9],rax        # 0x41aa00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x11cca],eax        # 0x413000
  401336:	mov    r12d,DWORD PTR [rip+0x18ceb]        # 0x41a028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x411278
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x18cc2]        # 0x41a020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x411230
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x411278
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x411270
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x18c6a],rbp        # 0x41a020
  4013b6:	call   0x40fdf0
  4013bb:	mov    rax,QWORD PTR [rip+0x1572e]        # 0x416af0
  4013c2:	mov    rdx,QWORD PTR [rip+0x18c4f]        # 0x41a018
  4013c9:	mov    ecx,DWORD PTR [rip+0x18c59]        # 0x41a028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x18c3c]        # 0x41a018
  4013dc:	mov    rdx,QWORD PTR [rip+0x18c3d]        # 0x41a020
  4013e3:	call   0x411450
  4013e8:	mov    ecx,DWORD PTR [rip+0x18c1a]        # 0x41a008
  4013ee:	mov    DWORD PTR [rip+0x18c18],eax        # 0x41a00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x18c02]        # 0x41a004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x411320
  40140b:	mov    eax,DWORD PTR [rip+0x18bfb]        # 0x41a00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x15719]        # 0x416b50
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x411328
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x1572d]        # 0x416b90
  401463:	mov    rcx,QWORD PTR [rip+0x15716]        # 0x416b80
  40146a:	call   0x411310
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x1ae3b]        # 0x41c2d4
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x15709]        # 0x416bb0
  4014a7:	mov    rcx,QWORD PTR [rip+0x156f2]        # 0x416ba0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x411310
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4112e0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x15735]        # 0x416c10
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x40fe30
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x15705]        # 0x416c10
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x40fe30
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   r12
  401532:	push   rbp
  401533:	push   rdi
  401534:	push   rsi
  401535:	push   rbx
  401536:	sub    rsp,0x30
  40153a:	mov    rax,QWORD PTR [rdx]
  40153d:	xor    esi,esi
  40153f:	mov    r10d,0xcccccccd
  401545:	lea    r11,[rsp-0x8]
  40154a:	lea    rbp,[rsp+0x10]
  40154f:	lea    rbx,[rsp+0x8]
  401554:	mov    rdi,rsp
  401557:	mov    QWORD PTR [rsp],rax
  40155b:	nop    DWORD PTR [rax+rax*1+0x0]
  401560:	mov    r9,rdi
  401563:	mov    r12,rdi
  401566:	xor    r8d,r8d
  401569:	nop    DWORD PTR [rax+0x0]
  401570:	movzx  eax,BYTE PTR [r12+0x7]
  401576:	shl    r8d,0x8
  40157a:	sub    r12,0x1
  40157e:	add    r8d,eax
  401581:	mov    eax,r8d
  401584:	mul    r10d
  401587:	shr    edx,0x3
  40158a:	lea    eax,[rdx+rdx*4]
  40158d:	mov    BYTE PTR [r12+0x8],dl
  401592:	add    eax,eax
  401594:	sub    r8d,eax
  401597:	cmp    r12,r11
  40159a:	jne    0x401570
  40159c:	add    r8d,0x30
  4015a0:	lea    eax,[rsi+0x1]
  4015a3:	mov    BYTE PTR [rbp+rsi*1+0x0],r8b
  4015a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015b0:	cmp    BYTE PTR [r9],0x0
  4015b4:	jne    0x4015f0
  4015b6:	add    r9,0x1
  4015ba:	cmp    r9,rbx
  4015bd:	jne    0x4015b0
  4015bf:	movsxd rdx,eax
  4015c2:	sub    eax,0x1
  4015c5:	mov    BYTE PTR [rcx+rdx*1],0x0
  4015c9:	movsxd rdx,eax
  4015cc:	sub    eax,0x1
  4015cf:	add    rcx,0x1
  4015d3:	movzx  edx,BYTE PTR [rsp+rdx*1+0x10]
  4015d8:	mov    BYTE PTR [rcx-0x1],dl
  4015db:	cmp    eax,0xffffffff
  4015de:	jne    0x4015c9
  4015e0:	add    rsp,0x30
  4015e4:	pop    rbx
  4015e5:	pop    rsi
  4015e6:	pop    rdi
  4015e7:	pop    rbp
  4015e8:	pop    r12
  4015ea:	ret    
  4015eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4015f0:	add    rsi,0x1
  4015f4:	jmp    0x401560
  4015f9:	nop    DWORD PTR [rax+0x0]
  401600:	push   rdi
  401601:	push   rsi
  401602:	push   rbx
  401603:	sub    rsp,0x20
  401607:	mov    rsi,rdx
  40160a:	mov    rdi,rcx
  40160d:	call   0x411230
  401612:	mov    rcx,rsi
  401615:	mov    rbx,rax
  401618:	call   0x411230
  40161d:	mov    r8,rax
  401620:	xor    eax,eax
  401622:	cmp    ebx,r8d
  401625:	jl     0x401641
  401627:	movsxd r8,r8d
  40162a:	movsxd rbx,ebx
  40162d:	mov    rdx,rsi
  401630:	sub    rbx,r8
  401633:	lea    rcx,[rdi+rbx*1]
  401637:	call   0x411240
  40163c:	test   eax,eax
  40163e:	sete   al
  401641:	add    rsp,0x20
  401645:	pop    rbx
  401646:	pop    rsi
  401647:	pop    rdi
  401648:	ret    
  401649:	nop    DWORD PTR [rax+0x0]
  401650:	push   rsi
  401651:	push   rbx
  401652:	sub    rsp,0x28
  401656:	mov    rbx,QWORD PTR [rip+0x19c7b]        # 0x41b2d8
  40165d:	mov    rsi,rcx
  401660:	call   QWORD PTR [rip+0x1ad1e]        # 0x41c384
  401666:	lea    rdx,[rip+0x12993]        # 0x414000
  40166d:	lea    rcx,[rax+0x60]
  401671:	mov    r9,rsi
  401674:	mov    r8,rbx
  401677:	add    rsp,0x28
  40167b:	pop    rbx
  40167c:	pop    rsi
  40167d:	jmp    0x4112b0
  401682:	nop    DWORD PTR [rax+0x0]
  401686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401690:	sub    rsp,0x28
  401694:	call   QWORD PTR [rip+0x1acea]        # 0x41c384
  40169a:	lea    rcx,[rip+0x12997]        # 0x414038
  4016a1:	lea    r9,[rax+0x60]
  4016a5:	mov    r8d,0xeb
  4016ab:	mov    edx,0x1
  4016b0:	call   0x411290
  4016b5:	cmp    DWORD PTR [rip+0x1a490],0x2        # 0x41bb4c
  4016bc:	jg     0x4016c8
  4016be:	mov    DWORD PTR [rip+0x1a484],0x3        # 0x41bb4c
  4016c8:	mov    ecx,DWORD PTR [rip+0x1a47e]        # 0x41bb4c
  4016ce:	call   0x4112e0
  4016d3:	nop
  4016d4:	xchg   ax,ax
  4016d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016e0:	push   rbp
  4016e1:	push   rdi
  4016e2:	push   rsi
  4016e3:	push   rbx
  4016e4:	sub    rsp,0xa8
  4016eb:	cmp    DWORD PTR [rip+0x1934e],0x3        # 0x41aa40
  4016f2:	mov    ebx,ecx
  4016f4:	je     0x401730
  4016f6:	cmp    BYTE PTR [rip+0x1a013],0x0        # 0x41b710
  4016fd:	je     0x401717
  4016ff:	mov    esi,DWORD PTR [rip+0x1a007]        # 0x41b70c
  401705:	test   esi,esi
  401707:	jle    0x401717
  401709:	mov    eax,DWORD PTR [rip+0x19bd1]        # 0x41b2e0
  40170f:	cmp    esi,eax
  401711:	jg     0x401831
  401717:	cmp    DWORD PTR [rip+0x1a42f],ebx        # 0x41bb4c
  40171d:	jge    0x401725
  40171f:	mov    DWORD PTR [rip+0x1a427],ebx        # 0x41bb4c
  401725:	mov    ecx,DWORD PTR [rip+0x1a421]        # 0x41bb4c
  40172b:	call   0x4112e0
  401730:	cmp    DWORD PTR [rip+0x19755],0x3        # 0x41ae8c
  401737:	je     0x4016f6
  401739:	cmp    BYTE PTR [rip+0x1974a],0x0        # 0x41ae8a
  401740:	je     0x4016f6
  401742:	lea    rdx,[rsp+0x60]
  401747:	lea    rcx,[rip+0x19bb2]        # 0x41b300
  40174e:	call   QWORD PTR [rip+0x1ad88]        # 0x41c4dc
  401754:	cmp    eax,0xffffffff
  401757:	je     0x401865
  40175d:	mov    edx,DWORD PTR [rsp+0x60]
  401761:	test   eax,eax
  401763:	mov    DWORD PTR [rsp+0x30],edx
  401767:	movzx  edx,WORD PTR [rsp+0x64]
  40176c:	mov    WORD PTR [rsp+0x34],dx
  401771:	movzx  edx,WORD PTR [rsp+0x66]
  401776:	mov    WORD PTR [rsp+0x36],dx
  40177b:	movzx  edx,WORD PTR [rsp+0x68]
  401780:	mov    WORD PTR [rsp+0x38],dx
  401785:	movzx  edx,WORD PTR [rsp+0x6a]
  40178a:	mov    WORD PTR [rsp+0x3a],dx
  40178f:	movzx  edx,WORD PTR [rsp+0x6c]
  401794:	mov    WORD PTR [rsp+0x3c],dx
  401799:	mov    edx,DWORD PTR [rsp+0x70]
  40179d:	mov    DWORD PTR [rsp+0x40],edx
  4017a1:	mov    rdx,QWORD PTR [rsp+0x78]
  4017a6:	mov    DWORD PTR [rsp+0x44],edx
  4017aa:	mov    rdx,QWORD PTR [rsp+0x80]
  4017b2:	mov    QWORD PTR [rsp+0x48],rdx
  4017b7:	mov    rdx,QWORD PTR [rsp+0x88]
  4017bf:	mov    QWORD PTR [rsp+0x50],rdx
  4017c4:	mov    rdx,QWORD PTR [rsp+0x90]
  4017cc:	mov    QWORD PTR [rsp+0x58],rdx
  4017d1:	jne    0x401876
  4017d7:	cmp    BYTE PTR [rip+0x19f32],0x0        # 0x41b710
  4017de:	lea    rsi,[rip+0x196db]        # 0x41aec0
  4017e5:	jne    0x4018f9
  4017eb:	mov    rcx,QWORD PTR [rip+0x19af6]        # 0x41b2e8
  4017f2:	test   rcx,rcx
  4017f5:	je     0x4017fc
  4017f7:	call   0x4112d8
  4017fc:	mov    rcx,rsi
  4017ff:	call   0x411260
  401804:	test   eax,eax
  401806:	je     0x4016f6
  40180c:	mov    rsi,QWORD PTR [rip+0x19ac5]        # 0x41b2d8
  401813:	call   QWORD PTR [rip+0x1ab6b]        # 0x41c384
  401819:	lea    rdx,[rip+0x12938]        # 0x414158
  401820:	lea    rcx,[rax+0x60]
  401824:	mov    r8,rsi
  401827:	call   0x4112b0
  40182c:	jmp    0x4016f6
  401831:	mov    rdi,QWORD PTR [rip+0x19aa0]        # 0x41b2d8
  401838:	mov    ebp,esi
  40183a:	sub    ebp,eax
  40183c:	call   QWORD PTR [rip+0x1ab42]        # 0x41c384
  401842:	lea    rdx,[rip+0x12a1f]        # 0x414268
  401849:	lea    rcx,[rax+0x60]
  40184d:	mov    DWORD PTR [rsp+0x28],ebp
  401851:	mov    DWORD PTR [rsp+0x20],esi
  401855:	mov    r9,rdi
  401858:	mov    r8,rdi
  40185b:	call   0x4112b0
  401860:	jmp    0x401717
  401865:	lea    rdx,[rsp+0x30]
  40186a:	mov    ecx,0xc
  40186f:	xor    eax,eax
  401871:	mov    rdi,rdx
  401874:	rep stos DWORD PTR es:[rdi],eax
  401876:	mov    rdi,QWORD PTR [rip+0x19a5b]        # 0x41b2d8
  40187d:	mov    rsi,QWORD PTR [rip+0x1ab00]        # 0x41c384
  401884:	call   rsi
  401886:	lea    rdx,[rip+0x1290b]        # 0x414198
  40188d:	lea    rcx,[rax+0x60]
  401891:	mov    r8,rdi
  401894:	call   0x4112b0
  401899:	mov    rdi,QWORD PTR [rip+0x19a38]        # 0x41b2d8
  4018a0:	call   rsi
  4018a2:	lea    rdx,[rip+0x12927]        # 0x4141d0
  4018a9:	lea    rcx,[rax+0x60]
  4018ad:	mov    r8,rdi
  4018b0:	call   0x4112b0
  4018b5:	mov    rdi,QWORD PTR [rip+0x19a1c]        # 0x41b2d8
  4018bc:	call   rsi
  4018be:	lea    r9,[rip+0x195fb]        # 0x41aec0
  4018c5:	lea    rcx,[rax+0x60]
  4018c9:	lea    rdx,[rip+0x12938]        # 0x414208
  4018d0:	mov    r8,rdi
  4018d3:	call   0x4112b0
  4018d8:	mov    rdi,QWORD PTR [rip+0x199f9]        # 0x41b2d8
  4018df:	call   rsi
  4018e1:	lea    rdx,[rip+0x12940]        # 0x414228
  4018e8:	lea    rcx,[rax+0x60]
  4018ec:	mov    r8,rdi
  4018ef:	call   0x4112b0
  4018f4:	jmp    0x4016f6
  4018f9:	mov    rdi,QWORD PTR [rip+0x199d8]        # 0x41b2d8
  401900:	call   QWORD PTR [rip+0x1aa7e]        # 0x41c384
  401906:	lea    rdx,[rip+0x1281b]        # 0x414128
  40190d:	lea    rcx,[rax+0x60]
  401911:	mov    r9,rsi
  401914:	mov    r8,rdi
  401917:	call   0x4112b0
  40191c:	jmp    0x4017eb
  401921:	nop    DWORD PTR [rax+rax*1+0x0]
  401926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401930:	push   rbx
  401931:	sub    rsp,0x20
  401935:	mov    rbx,QWORD PTR [rip+0x1999c]        # 0x41b2d8
  40193c:	call   QWORD PTR [rip+0x1aa42]        # 0x41c384
  401942:	lea    rdx,[rip+0x1298f]        # 0x4142d8
  401949:	lea    rcx,[rax+0x60]
  40194d:	mov    r8,rbx
  401950:	call   0x4112b0
  401955:	mov    ecx,0x1
  40195a:	call   0x4016e0
  40195f:	nop
  401960:	push   rbx
  401961:	sub    rsp,0x20
  401965:	call   0x406c60
  40196a:	mov    rbx,rax
  40196d:	call   QWORD PTR [rip+0x1aa11]        # 0x41c384
  401973:	lea    rdx,[rip+0x1298e]        # 0x414308
  40197a:	lea    rcx,[rax+0x60]
  40197e:	mov    r8,rbx
  401981:	add    rsp,0x20
  401985:	pop    rbx
  401986:	jmp    0x4112b0
  40198b:	nop    DWORD PTR [rax+rax*1+0x0]
  401990:	push   rsi
  401991:	push   rbx
  401992:	sub    rsp,0x28
  401996:	mov    rsi,rcx
  401999:	call   0x406c60
  40199e:	mov    rbx,rax
  4019a1:	call   QWORD PTR [rip+0x1a9dd]        # 0x41c384
  4019a7:	lea    rdx,[rip+0x12b72]        # 0x414520
  4019ae:	lea    rcx,[rax+0x60]
  4019b2:	mov    r9,rsi
  4019b5:	mov    r8,rbx
  4019b8:	add    rsp,0x28
  4019bc:	pop    rbx
  4019bd:	pop    rsi
  4019be:	jmp    0x4112b0
  4019c3:	nop    DWORD PTR [rax]
  4019c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019d0:	push   rbx
  4019d1:	sub    rsp,0x20
  4019d5:	lea    rdx,[rip+0x13011]        # 0x4149ed
  4019dc:	call   0x4112b8
  4019e1:	test   rax,rax
  4019e4:	setne  bl
  4019e7:	je     0x4019f1
  4019e9:	mov    rcx,rax
  4019ec:	call   0x4112d8
  4019f1:	mov    eax,ebx
  4019f3:	add    rsp,0x20
  4019f7:	pop    rbx
  4019f8:	ret    
  4019f9:	nop    DWORD PTR [rax+0x0]
  401a00:	push   rbx
  401a01:	sub    rsp,0x20
  401a05:	mov    rbx,rcx
  401a08:	call   0x4112c0
  401a0d:	cmp    eax,0xffffffff
  401a10:	mov    r8d,0x1
  401a16:	je     0x401a25
  401a18:	mov    rdx,rbx
  401a1b:	mov    ecx,eax
  401a1d:	call   0x411210
  401a22:	xor    r8d,r8d
  401a25:	mov    eax,r8d
  401a28:	add    rsp,0x20
  401a2c:	pop    rbx
  401a2d:	ret    
  401a2e:	xchg   ax,ax
  401a30:	sub    rsp,0x28
  401a34:	call   QWORD PTR [rip+0x1a94a]        # 0x41c384
  401a3a:	lea    r9,[rip+0x1947f]        # 0x41aec0
  401a41:	lea    rcx,[rax+0x60]
  401a45:	lea    r8,[rip+0x198b4]        # 0x41b300
  401a4c:	lea    rdx,[rip+0x12f9d]        # 0x4149f0
  401a53:	add    rsp,0x28
  401a57:	jmp    0x4112b0
  401a5c:	nop    DWORD PTR [rax+0x0]
  401a60:	push   rbx
  401a61:	sub    rsp,0x20
  401a65:	mov    rbx,QWORD PTR [rip+0x1986c]        # 0x41b2d8
  401a6c:	call   QWORD PTR [rip+0x1a912]        # 0x41c384
  401a72:	lea    rdx,[rip+0x12f9f]        # 0x414a18
  401a79:	lea    rcx,[rax+0x60]
  401a7d:	mov    r8,rbx
  401a80:	call   0x4112b0
  401a85:	cmp    BYTE PTR [rip+0x19c84],0x0        # 0x41b710
  401a8c:	jne    0x401a98
  401a8e:	mov    ecx,0x1
  401a93:	call   0x4016e0
  401a98:	call   0x401a30
  401a9d:	jmp    0x401a8e
  401a9f:	nop
  401aa0:	push   rsi
  401aa1:	push   rbx
  401aa2:	sub    rsp,0x28
  401aa6:	mov    rbx,QWORD PTR [rip+0x1982b]        # 0x41b2d8
  401aad:	mov    rsi,rcx
  401ab0:	call   QWORD PTR [rip+0x1a8ce]        # 0x41c384
  401ab6:	lea    rdx,[rip+0x12f83]        # 0x414a40
  401abd:	lea    rcx,[rax+0x60]
  401ac1:	mov    r9,rsi
  401ac4:	mov    r8,rbx
  401ac7:	call   0x4112b0
  401acc:	cmp    BYTE PTR [rip+0x19c3d],0x0        # 0x41b710
  401ad3:	jne    0x401adf
  401ad5:	mov    ecx,0x3
  401ada:	call   0x4016e0
  401adf:	call   0x401a30
  401ae4:	jmp    0x401ad5
  401ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401af0:	push   rbx
  401af1:	sub    rsp,0x20
  401af5:	mov    rbx,QWORD PTR [rip+0x197dc]        # 0x41b2d8
  401afc:	call   QWORD PTR [rip+0x1a882]        # 0x41c384
  401b02:	lea    rdx,[rip+0x12fa7]        # 0x414ab0
  401b09:	lea    rcx,[rax+0x60]
  401b0d:	mov    r8,rbx
  401b10:	call   0x4112b0
  401b15:	mov    rcx,QWORD PTR [rip+0x197bc]        # 0x41b2d8
  401b1c:	call   0x411268
  401b21:	cmp    BYTE PTR [rip+0x19be8],0x0        # 0x41b710
  401b28:	jne    0x401b34
  401b2a:	mov    ecx,0x1
  401b2f:	call   0x4016e0
  401b34:	call   0x401a30
  401b39:	jmp    0x401b2a
  401b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b40:	push   r15
  401b42:	push   r14
  401b44:	mov    eax,0x14a8
  401b49:	push   r13
  401b4b:	push   r12
  401b4d:	push   rbp
  401b4e:	push   rdi
  401b4f:	push   rsi
  401b50:	push   rbx
  401b51:	call   0x4111a0
  401b56:	sub    rsp,rax
  401b59:	movaps XMMWORD PTR [rsp+0x1450],xmm6
  401b61:	movaps XMMWORD PTR [rsp+0x1460],xmm7
  401b69:	movaps XMMWORD PTR [rsp+0x1470],xmm8
  401b72:	movaps XMMWORD PTR [rsp+0x1480],xmm9
  401b7b:	movaps XMMWORD PTR [rsp+0x1490],xmm10
  401b84:	mov    rbx,rcx
  401b87:	mov    r13,rdx
  401b8a:	call   0x4111e8
  401b8f:	mov    edx,0x8000
  401b94:	mov    ecx,eax
  401b96:	call   0x4111f8
  401b9b:	cmp    eax,0xffffffff
  401b9e:	je     0x401fd5
  401ba4:	mov    rcx,r13
  401ba7:	call   0x4111e8
  401bac:	mov    edx,0x8000
  401bb1:	mov    ecx,eax
  401bb3:	call   0x4111f8
  401bb8:	cmp    eax,0xffffffff
  401bbb:	je     0x401fd5
  401bc1:	mov    rcx,rbx
  401bc4:	call   0x4112d0
  401bc9:	test   eax,eax
  401bcb:	jne    0x401fd5
  401bd1:	mov    rcx,r13
  401bd4:	call   0x4112d0
  401bd9:	test   eax,eax
  401bdb:	jne    0x401fd5
  401be1:	mov    eax,DWORD PTR [rip+0x196e5]        # 0x41b2cc
  401be7:	mov    r8d,DWORD PTR [rip+0x19702]        # 0x41b2f0
  401bee:	lea    rbp,[rsp+0x5c]
  401bf3:	mov    r9d,DWORD PTR [rip+0x196d6]        # 0x41b2d0
  401bfa:	mov    rdx,r13
  401bfd:	mov    rcx,rbp
  401c00:	mov    DWORD PTR [rsp+0x20],eax
  401c04:	call   0x405cc0
  401c09:	mov    r8d,DWORD PTR [rsp+0x5c]
  401c0e:	mov    r12,rax
  401c11:	test   r8d,r8d
  401c14:	jne    0x401f70
  401c1a:	cmp    DWORD PTR [rip+0x196af],0x1        # 0x41b2d0
  401c21:	jle    0x401c37
  401c23:	call   QWORD PTR [rip+0x1a75b]        # 0x41c384
  401c29:	lea    rdx,[rax+0x60]
  401c2d:	mov    ecx,0xa
  401c32:	call   0x4112a8
  401c37:	lea    rdi,[rsp+0xc0]
  401c3f:	jmp    0x401c8b
  401c41:	mov    r9,rbx
  401c44:	mov    r8d,0x1388
  401c4a:	mov    edx,0x1
  401c4f:	mov    rcx,rdi
  401c52:	call   0x4112a0
  401c57:	mov    rcx,rbx
  401c5a:	mov    rsi,rax
  401c5d:	call   0x4112d0
  401c62:	test   eax,eax
  401c64:	jne    0x401fd5
  401c6a:	test   esi,esi
  401c6c:	jle    0x401c7f
  401c6e:	mov    r9d,esi
  401c71:	mov    r8,rdi
  401c74:	mov    rdx,r12
  401c77:	mov    rcx,rbp
  401c7a:	call   0x405e40
  401c7f:	mov    ecx,DWORD PTR [rsp+0x5c]
  401c83:	test   ecx,ecx
  401c85:	jne    0x401f70
  401c8b:	mov    rcx,rbx
  401c8e:	call   0x401a00
  401c93:	test   al,al
  401c95:	je     0x401c41
  401c97:	lea    rsi,[rsp+0x4c]
  401c9c:	lea    r15,[rsp+0x58]
  401ca1:	lea    r14,[rsp+0x54]
  401ca6:	lea    rdi,[rsp+0x50]
  401cab:	xor    r8d,r8d
  401cae:	mov    rdx,r12
  401cb1:	mov    QWORD PTR [rsp+0x30],r15
  401cb6:	mov    QWORD PTR [rsp+0x28],r14
  401cbb:	mov    r9,rsi
  401cbe:	mov    QWORD PTR [rsp+0x20],rdi
  401cc3:	mov    rcx,rbp
  401cc6:	call   0x405ff0
  401ccb:	mov    edx,DWORD PTR [rsp+0x5c]
  401ccf:	test   edx,edx
  401cd1:	jne    0x401f84
  401cd7:	mov    rcx,r13
  401cda:	call   0x4112d0
  401cdf:	test   eax,eax
  401ce1:	jne    0x401fd5
  401ce7:	mov    rcx,r13
  401cea:	call   0x4112c8
  401cef:	cmp    eax,0xffffffff
  401cf2:	je     0x401fd5
  401cf8:	mov    rsi,QWORD PTR [rip+0x1a685]        # 0x41c384
  401cff:	call   rsi
  401d01:	add    rax,0x30
  401d05:	cmp    r13,rax
  401d08:	je     0x401d36
  401d0a:	mov    rcx,r13
  401d0d:	call   0x4111e8
  401d12:	test   eax,eax
  401d14:	js     0x401fd5
  401d1a:	mov    rcx,r13
  401d1d:	call   0x4112d8
  401d22:	cmp    eax,0xffffffff
  401d25:	mov    QWORD PTR [rip+0x195b8],0x0        # 0x41b2e8
  401d30:	je     0x401fd5
  401d36:	mov    rcx,rbx
  401d39:	mov    QWORD PTR [rip+0x195a4],0x0        # 0x41b2e8
  401d44:	call   0x4112d0
  401d49:	test   eax,eax
  401d4b:	jne    0x401fd5
  401d51:	mov    rcx,rbx
  401d54:	call   0x4112d8
  401d59:	cmp    eax,0xffffffff
  401d5c:	je     0x401fd5
  401d62:	mov    eax,DWORD PTR [rip+0x19568]        # 0x41b2d0
  401d68:	test   eax,eax
  401d6a:	jle    0x401f2a
  401d70:	mov    eax,DWORD PTR [rsp+0x4c]
  401d74:	mov    edx,DWORD PTR [rsp+0x50]
  401d78:	test   eax,eax
  401d7a:	je     0x401fe5
  401d80:	mov    ecx,edx
  401d82:	mov    BYTE PTR [rsp+0x64],dl
  401d86:	mov    BYTE PTR [rsp+0x60],al
  401d8a:	shr    ecx,0x18
  401d8d:	movsd  xmm8,QWORD PTR [rip+0x13e92]        # 0x415c28
  401d96:	mov    BYTE PTR [rsp+0x67],cl
  401d9a:	mov    ecx,edx
  401d9c:	shr    ecx,0x10
  401d9f:	pxor   xmm7,xmm7
  401da3:	mov    BYTE PTR [rsp+0x66],cl
  401da7:	mov    ecx,edx
  401da9:	mov    edx,eax
  401dab:	shr    edx,0x18
  401dae:	shr    ecx,0x8
  401db1:	mov    BYTE PTR [rsp+0x63],dl
  401db5:	mov    edx,eax
  401db7:	mov    BYTE PTR [rsp+0x65],cl
  401dbb:	shr    edx,0x10
  401dbe:	movzx  ecx,al
  401dc1:	mov    BYTE PTR [rsp+0x62],dl
  401dc5:	mov    edx,eax
  401dc7:	mov    eax,DWORD PTR [rsp+0x58]
  401dcb:	shr    edx,0x8
  401dce:	movapd xmm1,xmm8
  401dd3:	mov    BYTE PTR [rsp+0x61],dl
  401dd7:	mov    edx,DWORD PTR [rsp+0x54]
  401ddb:	mov    r8d,eax
  401dde:	mov    BYTE PTR [rsp+0x74],al
  401de2:	shr    r8d,0x18
  401de6:	movsd  xmm2,QWORD PTR [rip+0x13e42]        # 0x415c30
  401dee:	mov    BYTE PTR [rsp+0x77],r8b
  401df3:	mov    r8d,eax
  401df6:	mov    BYTE PTR [rsp+0x70],dl
  401dfa:	shr    r8d,0x10
  401dfe:	mov    BYTE PTR [rsp+0x76],r8b
  401e03:	mov    r8d,eax
  401e06:	mov    eax,edx
  401e08:	shr    eax,0x18
  401e0b:	shr    r8d,0x8
  401e0f:	mov    BYTE PTR [rsp+0x73],al
  401e13:	mov    eax,edx
  401e15:	mov    BYTE PTR [rsp+0x75],r8b
  401e1a:	shr    eax,0x10
  401e1d:	mov    BYTE PTR [rsp+0x72],al
  401e21:	mov    eax,edx
  401e23:	shr    eax,0x8
  401e26:	mov    BYTE PTR [rsp+0x71],al
  401e2a:	movzx  eax,dl
  401e2d:	lea    rdx,[rsp+0x60]
  401e32:	mov    r8,rdx
  401e35:	lea    r9,[rdx+0x8]
  401e39:	jmp    0x401e44
  401e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401e40:	movzx  ecx,BYTE PTR [r8]
  401e44:	pxor   xmm0,xmm0
  401e48:	add    r8,0x1
  401e4c:	cmp    r8,r9
  401e4f:	cvtsi2sd xmm0,ecx
  401e53:	mulsd  xmm0,xmm1
  401e57:	mulsd  xmm1,xmm2
  401e5b:	addsd  xmm7,xmm0
  401e5f:	jne    0x401e40
  401e61:	lea    rbx,[rsp+0x70]
  401e66:	pxor   xmm6,xmm6
  401e6a:	movapd xmm1,xmm8
  401e6f:	mov    rcx,rbx
  401e72:	lea    r8,[rbx+0x8]
  401e76:	jmp    0x401e83
  401e78:	nop    DWORD PTR [rax+rax*1+0x0]
  401e80:	movzx  eax,BYTE PTR [rcx]
  401e83:	pxor   xmm0,xmm0
  401e87:	add    rcx,0x1
  401e8b:	cmp    rcx,r8
  401e8e:	cvtsi2sd xmm0,eax
  401e92:	mulsd  xmm0,xmm1
  401e96:	mulsd  xmm1,xmm2
  401e9a:	addsd  xmm6,xmm0
  401e9e:	jne    0x401e80
  401ea0:	lea    rdi,[rsp+0x80]
  401ea8:	lea    rbp,[rsp+0xa0]
  401eb0:	movapd xmm10,xmm7
  401eb5:	mov    rcx,rdi
  401eb8:	call   0x401530
  401ebd:	mov    rdx,rbx
  401ec0:	mov    rcx,rbp
  401ec3:	call   0x401530
  401ec8:	movsd  xmm9,QWORD PTR [rip+0x13d67]        # 0x415c38
  401ed1:	divsd  xmm10,xmm6
  401ed6:	call   rsi
  401ed8:	lea    rdx,[rip+0x12c29]        # 0x414b08
  401edf:	lea    rcx,[rax+0x60]
  401ee3:	mov    QWORD PTR [rsp+0x30],rbp
  401ee8:	mov    QWORD PTR [rsp+0x28],rdi
  401eed:	mulsd  xmm9,xmm6
  401ef2:	divsd  xmm6,xmm7
  401ef6:	movapd xmm2,xmm10
  401efb:	movq   r8,xmm10
  401f00:	divsd  xmm9,xmm7
  401f05:	subsd  xmm8,xmm6
  401f0a:	mulsd  xmm8,QWORD PTR [rip+0x13d2d]        # 0x415c40
  401f13:	movapd xmm3,xmm9
  401f18:	movq   r9,xmm9
  401f1d:	movsd  QWORD PTR [rsp+0x20],xmm8
  401f24:	call   0x4112b0
  401f29:	nop
  401f2a:	movaps xmm6,XMMWORD PTR [rsp+0x1450]
  401f32:	movaps xmm7,XMMWORD PTR [rsp+0x1460]
  401f3a:	movaps xmm8,XMMWORD PTR [rsp+0x1470]
  401f43:	movaps xmm9,XMMWORD PTR [rsp+0x1480]
  401f4c:	movaps xmm10,XMMWORD PTR [rsp+0x1490]
  401f55:	add    rsp,0x14a8
  401f5c:	pop    rbx
  401f5d:	pop    rsi
  401f5e:	pop    rdi
  401f5f:	pop    rbp
  401f60:	pop    r12
  401f62:	pop    r13
  401f64:	pop    r14
  401f66:	pop    r15
  401f68:	ret    
  401f69:	nop    DWORD PTR [rax+0x0]
  401f70:	lea    rsi,[rsp+0x4c]
  401f75:	lea    r15,[rsp+0x58]
  401f7a:	lea    r14,[rsp+0x54]
  401f7f:	lea    rdi,[rsp+0x50]
  401f84:	lea    rcx,[rsp+0xa0]
  401f8c:	mov    QWORD PTR [rsp+0x30],r15
  401f91:	mov    QWORD PTR [rsp+0x28],r14
  401f96:	mov    QWORD PTR [rsp+0x20],rdi
  401f9b:	mov    r9,rsi
  401f9e:	mov    r8d,0x1
  401fa4:	mov    rdx,r12
  401fa7:	call   0x405ff0
  401fac:	mov    eax,DWORD PTR [rsp+0x5c]
  401fb0:	cmp    eax,0xfffffffa
  401fb3:	je     0x401fd5
  401fb5:	cmp    eax,0xfffffffd
  401fb8:	je     0x401fd0
  401fba:	cmp    eax,0xfffffff7
  401fbd:	je     0x401fe0
  401fbf:	lea    rcx,[rip+0x12b7b]        # 0x414b41
  401fc6:	call   0x401aa0
  401fcb:	nop    DWORD PTR [rax+rax*1+0x0]
  401fd0:	call   0x401a60
  401fd5:	call   0x401af0
  401fda:	nop    WORD PTR [rax+rax*1+0x0]
  401fe0:	call   0x401690
  401fe5:	test   edx,edx
  401fe7:	jne    0x401d80
  401fed:	call   rsi
  401fef:	lea    rcx,[rip+0x12afb]        # 0x414af1
  401ff6:	lea    r9,[rax+0x60]
  401ffa:	mov    r8d,0x15
  402000:	mov    edx,0x1
  402005:	call   0x411290
  40200a:	jmp    0x401f2a
  40200f:	nop
  402010:	push   r15
  402012:	push   r14
  402014:	mov    eax,0x2788
  402019:	push   r13
  40201b:	push   r12
  40201d:	push   rbp
  40201e:	push   rdi
  40201f:	push   rsi
  402020:	push   rbx
  402021:	call   0x4111a0
  402026:	sub    rsp,rax
  402029:	mov    rbp,rcx
  40202c:	mov    DWORD PTR [rsp+0x54],0x0
  402034:	call   0x4111e8
  402039:	mov    edx,0x8000
  40203e:	mov    ecx,eax
  402040:	call   0x4111f8
  402045:	cmp    eax,0xffffffff
  402048:	je     0x4021f0
  40204e:	mov    rcx,rbp
  402051:	call   0x4112d0
  402056:	test   eax,eax
  402058:	jne    0x4021f0
  40205e:	lea    rbx,[rsp+0x54]
  402063:	mov    eax,DWORD PTR [rsp+0x54]
  402067:	lea    r14,[rip+0x196aa]        # 0x41b718
  40206e:	lea    r13,[rip+0x1925b]        # 0x41b2d0
  402075:	lea    rsi,[rsp+0x4c]
  40207a:	lea    r15,[rsp+0x13f0]
  402082:	mov    QWORD PTR [rsp+0x30],rbx
  402087:	lea    rbx,[rsp+0x58]
  40208c:	lea    rdi,[rsp+0x60]
  402091:	xor    r12d,r12d
  402094:	mov    QWORD PTR [rsp+0x38],rbx
  402099:	movzx  r9d,BYTE PTR [r14]
  40209d:	mov    r8d,DWORD PTR [r13+0x0]
  4020a1:	mov    rdx,rbp
  4020a4:	mov    DWORD PTR [rsp+0x28],eax
  4020a8:	mov    QWORD PTR [rsp+0x20],r15
  4020ad:	mov    rcx,rsi
  4020b0:	call   0x406260
  4020b5:	test   rax,rax
  4020b8:	mov    rbx,rax
  4020bb:	je     0x402190
  4020c1:	mov    r8d,DWORD PTR [rsp+0x4c]
  4020c6:	test   r8d,r8d
  4020c9:	jne    0x402190
  4020cf:	add    r12d,0x1
  4020d3:	mov    r9d,0x1388
  4020d9:	mov    r8,rdi
  4020dc:	mov    rdx,rbx
  4020df:	mov    rcx,rsi
  4020e2:	call   0x4066f0
  4020e7:	mov    eax,DWORD PTR [rsp+0x4c]
  4020eb:	cmp    eax,0xfffffffb
  4020ee:	je     0x402190
  4020f4:	test   eax,eax
  4020f6:	je     0x4020d3
  4020f8:	cmp    eax,0x4
  4020fb:	jne    0x402190
  402101:	mov    r9,QWORD PTR [rsp+0x30]
  402106:	mov    r8,QWORD PTR [rsp+0x38]
  40210b:	mov    rcx,rsi
  40210e:	mov    rdx,rbx
  402111:	call   0x406960
  402116:	mov    ecx,DWORD PTR [rsp+0x4c]
  40211a:	test   ecx,ecx
  40211c:	jne    0x402337
  402122:	mov    eax,DWORD PTR [rsp+0x54]
  402126:	mov    r8,QWORD PTR [rsp+0x58]
  40212b:	test   eax,eax
  40212d:	jle    0x402152
  40212f:	lea    ecx,[rax-0x1]
  402132:	xor    eax,eax
  402134:	add    rcx,0x1
  402138:	nop    DWORD PTR [rax+rax*1+0x0]
  402140:	movzx  edx,BYTE PTR [r8+rax*1]
  402145:	mov    BYTE PTR [r15+rax*1],dl
  402149:	add    rax,0x1
  40214d:	cmp    rax,rcx
  402150:	jne    0x402140
  402152:	mov    rdx,rbx
  402155:	mov    rcx,rsi
  402158:	call   0x406650
  40215d:	mov    edx,DWORD PTR [rsp+0x4c]
  402161:	test   edx,edx
  402163:	jne    0x402337
  402169:	mov    eax,DWORD PTR [rsp+0x54]
  40216d:	test   eax,eax
  40216f:	jne    0x402099
  402175:	mov    rcx,rbp
  402178:	call   0x401a00
  40217d:	test   al,al
  40217f:	jne    0x4022de
  402185:	mov    eax,DWORD PTR [rsp+0x54]
  402189:	jmp    0x402099
  40218e:	xchg   ax,ax
  402190:	lea    rcx,[rsp+0x50]
  402195:	mov    rdx,rbx
  402198:	call   0x406650
  40219d:	mov    eax,DWORD PTR [rip+0x1912d]        # 0x41b2d0
  4021a3:	test   eax,eax
  4021a5:	je     0x4021c7
  4021a7:	mov    eax,DWORD PTR [rsp+0x4c]
  4021ab:	add    eax,0x9
  4021ae:	cmp    eax,0x6
  4021b1:	ja     0x402287
  4021b7:	lea    rdx,[rip+0x12a6e]        # 0x414c2c
  4021be:	movsxd rax,DWORD PTR [rdx+rax*4]
  4021c2:	add    rdx,rax
  4021c5:	jmp    rdx
  4021c7:	mov    rbx,QWORD PTR [rip+0x1910a]        # 0x41b2d8
  4021ce:	call   QWORD PTR [rip+0x1a1b0]        # 0x41c384
  4021d4:	lea    r9,[rip+0x19125]        # 0x41b300
  4021db:	lea    rcx,[rax+0x60]
  4021df:	lea    rdx,[rip+0x12990]        # 0x414b76
  4021e6:	mov    r8,rbx
  4021e9:	call   0x4112b0
  4021ee:	jmp    0x4021a7
  4021f0:	call   0x401af0
  4021f5:	call   0x401690
  4021fa:	call   QWORD PTR [rip+0x1a184]        # 0x41c384
  402200:	lea    rcx,[rip+0x1299d]        # 0x414ba4
  402207:	lea    r9,[rax+0x60]
  40220b:	mov    r8d,0x17
  402211:	mov    edx,0x1
  402216:	call   0x411290
  40221b:	xor    eax,eax
  40221d:	add    rsp,0x2788
  402224:	pop    rbx
  402225:	pop    rsi
  402226:	pop    rdi
  402227:	pop    rbp
  402228:	pop    r12
  40222a:	pop    r13
  40222c:	pop    r14
  40222e:	pop    r15
  402230:	ret    
  402231:	mov    rbx,QWORD PTR [rip+0x1a14c]        # 0x41c384
  402238:	call   rbx
  40223a:	cmp    rax,rbp
  40223d:	je     0x402247
  40223f:	mov    rcx,rbp
  402242:	call   0x4112d8
  402247:	cmp    r12d,0x1
  40224b:	je     0x4022ba
  40224d:	cmp    BYTE PTR [rip+0x194bc],0x0        # 0x41b710
  402254:	jne    0x402293
  402256:	mov    eax,0x1
  40225b:	jmp    0x40221d
  40225d:	call   QWORD PTR [rip+0x1a121]        # 0x41c384
  402263:	lea    rcx,[rip+0x12916]        # 0x414b80
  40226a:	lea    r9,[rax+0x60]
  40226e:	mov    r8d,0x23
  402274:	mov    edx,0x1
  402279:	call   0x411290
  40227e:	xor    eax,eax
  402280:	jmp    0x40221d
  402282:	call   0x401a60
  402287:	lea    rcx,[rip+0x12986]        # 0x414c14
  40228e:	call   0x401aa0
  402293:	call   rbx
  402295:	lea    rcx,[rip+0x12954]        # 0x414bf0
  40229c:	lea    r9,[rax+0x60]
  4022a0:	mov    r8d,0x23
  4022a6:	mov    edx,0x1
  4022ab:	call   0x411290
  4022b0:	mov    eax,0x1
  4022b5:	jmp    0x40221d
  4022ba:	call   rbx
  4022bc:	lea    rcx,[rip+0x128fd]        # 0x414bc0
  4022c3:	lea    r9,[rax+0x60]
  4022c7:	mov    r8d,0x2d
  4022cd:	mov    edx,0x1
  4022d2:	call   0x411290
  4022d7:	xor    eax,eax
  4022d9:	jmp    0x40221d
  4022de:	mov    rcx,rbp
  4022e1:	call   0x4112d0
  4022e6:	test   eax,eax
  4022e8:	jne    0x4021f0
  4022ee:	mov    rcx,rbp
  4022f1:	call   0x4112d8
  4022f6:	cmp    eax,0xffffffff
  4022f9:	je     0x4021f0
  4022ff:	cmp    DWORD PTR [rip+0x18fca],0x1        # 0x41b2d0
  402306:	jle    0x402256
  40230c:	call   QWORD PTR [rip+0x1a072]        # 0x41c384
  402312:	lea    rcx,[rip+0x12857]        # 0x414b70
  402319:	lea    r9,[rax+0x60]
  40231d:	mov    r8d,0x5
  402323:	mov    edx,0x1
  402328:	call   0x411290
  40232d:	mov    eax,0x1
  402332:	jmp    0x40221d
  402337:	lea    rcx,[rip+0x1281d]        # 0x414b5b
  40233e:	call   0x401aa0
  402343:	nop
  402344:	xchg   ax,ax
  402346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402350:	sub    rsp,0x28
  402354:	call   QWORD PTR [rip+0x1a02a]        # 0x41c384
  40235a:	lea    rcx,[rip+0x128e7]        # 0x414c48
  402361:	lea    r9,[rax+0x60]
  402365:	mov    r8d,0xf0
  40236b:	mov    edx,0x1
  402370:	add    rsp,0x28
  402374:	jmp    0x411290
  402379:	nop    DWORD PTR [rax+0x0]
  402380:	push   rbx
  402381:	sub    rsp,0x20
  402385:	cmp    DWORD PTR [rip+0x18b00],0x1        # 0x41ae8c
  40238c:	mov    rbx,QWORD PTR [rip+0x18f45]        # 0x41b2d8
  402393:	je     0x4023e8
  402395:	call   QWORD PTR [rip+0x19fe9]        # 0x41c384
  40239b:	lea    rdx,[rip+0x12d06]        # 0x4150a8
  4023a2:	lea    rcx,[rax+0x60]
  4023a6:	mov    r8,rbx
  4023a9:	call   0x4112b0
  4023ae:	cmp    BYTE PTR [rip+0x1935b],0x0        # 0x41b710
  4023b5:	jne    0x4023ca
  4023b7:	cmp    DWORD PTR [rip+0x18ace],0x1        # 0x41ae8c
  4023be:	je     0x402403
  4023c0:	mov    ecx,0x2
  4023c5:	call   0x4016e0
  4023ca:	call   0x401a30
  4023cf:	cmp    DWORD PTR [rip+0x18ab6],0x1        # 0x41ae8c
  4023d6:	je     0x402403
  4023d8:	cmp    BYTE PTR [rip+0x19331],0x0        # 0x41b710
  4023df:	je     0x4023c0
  4023e1:	call   0x402350
  4023e6:	jmp    0x4023c0
  4023e8:	call   QWORD PTR [rip+0x19f96]        # 0x41c384
  4023ee:	lea    rdx,[rip+0x1294b]        # 0x414d40
  4023f5:	lea    rcx,[rax+0x60]
  4023f9:	mov    r8,rbx
  4023fc:	call   0x4112b0
  402401:	jmp    0x4023ae
  402403:	mov    ecx,0x3
  402408:	call   0x4016e0
  40240d:	nop
  40240e:	xchg   ax,ax
  402410:	push   r15
  402412:	push   r14
  402414:	mov    eax,0x2798
  402419:	push   r13
  40241b:	push   r12
  40241d:	push   rbp
  40241e:	push   rdi
  40241f:	push   rsi
  402420:	push   rbx
  402421:	call   0x4111a0
  402426:	sub    rsp,rax
  402429:	mov    r13,rcx
  40242c:	mov    rcx,rdx
  40242f:	mov    rsi,rdx
  402432:	mov    DWORD PTR [rsp+0x64],0x0
  40243a:	call   0x4111e8
  40243f:	mov    edx,0x8000
  402444:	mov    ecx,eax
  402446:	call   0x4111f8
  40244b:	cmp    eax,0xffffffff
  40244e:	je     0x4027a9
  402454:	mov    rcx,r13
  402457:	call   0x4111e8
  40245c:	mov    edx,0x8000
  402461:	mov    ecx,eax
  402463:	call   0x4111f8
  402468:	cmp    eax,0xffffffff
  40246b:	je     0x4027a9
  402471:	mov    rcx,rsi
  402474:	call   0x4112d0
  402479:	test   eax,eax
  40247b:	jne    0x4027a9
  402481:	mov    rcx,r13
  402484:	call   0x4112d0
  402489:	test   eax,eax
  40248b:	jne    0x4027a9
  402491:	lea    rcx,[rsp+0x64]
  402496:	lea    rdi,[rip+0x18e33]        # 0x41b2d0
  40249d:	mov    eax,DWORD PTR [rsp+0x64]
  4024a1:	lea    r15,[rip+0x19270]        # 0x41b718
  4024a8:	lea    r12,[rsp+0x5c]
  4024ad:	lea    rbx,[rsp+0x1400]
  4024b5:	mov    QWORD PTR [rsp+0x40],rcx
  4024ba:	lea    rcx,[rsp+0x68]
  4024bf:	mov    QWORD PTR [rsp+0x38],rdi
  4024c4:	lea    rdi,[rsp+0x70]
  4024c9:	xor    r14d,r14d
  4024cc:	mov    QWORD PTR [rsp+0x48],rcx
  4024d1:	mov    DWORD PTR [rsp+0x28],eax
  4024d5:	mov    rax,QWORD PTR [rsp+0x38]
  4024da:	mov    rdx,r13
  4024dd:	movzx  r9d,BYTE PTR [r15]
  4024e1:	mov    QWORD PTR [rsp+0x20],rbx
  4024e6:	mov    rcx,r12
  4024e9:	mov    r8d,DWORD PTR [rax]
  4024ec:	call   0x406260
  4024f1:	test   rax,rax
  4024f4:	mov    rbp,rax
  4024f7:	je     0x4025fb
  4024fd:	mov    ecx,DWORD PTR [rsp+0x5c]
  402501:	test   ecx,ecx
  402503:	jne    0x4025fb
  402509:	add    r14d,0x1
  40250d:	nop    DWORD PTR [rax]
  402510:	mov    rdx,rbp
  402513:	mov    r9d,0x1388
  402519:	mov    r8,rdi
  40251c:	mov    rcx,r12
  40251f:	call   0x4066f0
  402524:	mov    edx,DWORD PTR [rsp+0x5c]
  402528:	cmp    edx,0xfffffffb
  40252b:	je     0x4025f2
  402531:	test   eax,eax
  402533:	jle    0x40254d
  402535:	and    edx,0xfffffffb
  402538:	jne    0x40254d
  40253a:	mov    r9,rsi
  40253d:	movsxd r8,eax
  402540:	mov    edx,0x1
  402545:	mov    rcx,rdi
  402548:	call   0x411290
  40254d:	mov    rcx,rsi
  402550:	call   0x4112d0
  402555:	test   eax,eax
  402557:	jne    0x4027a9
  40255d:	mov    eax,DWORD PTR [rsp+0x5c]
  402561:	test   eax,eax
  402563:	je     0x402510
  402565:	cmp    eax,0x4
  402568:	jne    0x4025fb
  40256e:	mov    r9,QWORD PTR [rsp+0x40]
  402573:	mov    r8,QWORD PTR [rsp+0x48]
  402578:	mov    rdx,rbp
  40257b:	mov    rcx,r12
  40257e:	call   0x406960
  402583:	mov    edx,DWORD PTR [rsp+0x5c]
  402587:	test   edx,edx
  402589:	jne    0x40287e
  40258f:	mov    eax,DWORD PTR [rsp+0x64]
  402593:	mov    r8,QWORD PTR [rsp+0x68]
  402598:	test   eax,eax
  40259a:	jle    0x4025b6
  40259c:	lea    ecx,[rax-0x1]
  40259f:	xor    eax,eax
  4025a1:	add    rcx,0x1
  4025a5:	movzx  edx,BYTE PTR [r8+rax*1]
  4025aa:	mov    BYTE PTR [rbx+rax*1],dl
  4025ad:	add    rax,0x1
  4025b1:	cmp    rax,rcx
  4025b4:	jne    0x4025a5
  4025b6:	mov    rdx,rbp
  4025b9:	mov    rcx,r12
  4025bc:	call   0x406650
  4025c1:	mov    eax,DWORD PTR [rsp+0x5c]
  4025c5:	test   eax,eax
  4025c7:	jne    0x40287e
  4025cd:	mov    eax,DWORD PTR [rsp+0x64]
  4025d1:	test   eax,eax
  4025d3:	jne    0x4024d1
  4025d9:	mov    rcx,r13
  4025dc:	call   0x401a00
  4025e1:	test   al,al
  4025e3:	jne    0x40268e
  4025e9:	mov    eax,DWORD PTR [rsp+0x64]
  4025ed:	jmp    0x4024d1
  4025f2:	cmp    BYTE PTR [rip+0x18892],0x0        # 0x41ae8b
  4025f9:	jne    0x402628
  4025fb:	lea    rcx,[rsp+0x60]
  402600:	mov    rdx,rbp
  402603:	call   0x406650
  402608:	mov    eax,DWORD PTR [rsp+0x5c]
  40260c:	add    eax,0x9
  40260f:	cmp    eax,0x6
  402612:	ja     0x40283e
  402618:	lea    rdx,[rip+0x12f65]        # 0x415584
  40261f:	movsxd rax,DWORD PTR [rdx+rax*4]
  402623:	add    rdx,rax
  402626:	jmp    rdx
  402628:	mov    rcx,r13
  40262b:	call   0x411258
  402630:	jmp    0x402682
  402632:	mov    r9,r13
  402635:	mov    r8d,0x1388
  40263b:	mov    edx,0x1
  402640:	mov    rcx,rdi
  402643:	call   0x4112a0
  402648:	mov    rcx,r13
  40264b:	mov    rbx,rax
  40264e:	call   0x4112d0
  402653:	test   eax,eax
  402655:	jne    0x4027a9
  40265b:	test   ebx,ebx
  40265d:	jle    0x402672
  40265f:	mov    r9,rsi
  402662:	movsxd r8,ebx
  402665:	mov    edx,0x1
  40266a:	mov    rcx,rdi
  40266d:	call   0x411290
  402672:	mov    rcx,rsi
  402675:	call   0x4112d0
  40267a:	test   eax,eax
  40267c:	jne    0x4027a9
  402682:	mov    rcx,r13
  402685:	call   0x401a00
  40268a:	test   al,al
  40268c:	je     0x402632
  40268e:	mov    rcx,r13
  402691:	call   0x4112d0
  402696:	test   eax,eax
  402698:	jne    0x4027a9
  40269e:	mov    rbx,QWORD PTR [rip+0x19cdf]        # 0x41c384
  4026a5:	call   rbx
  4026a7:	add    rax,0x30
  4026ab:	cmp    rsi,rax
  4026ae:	je     0x4026c0
  4026b0:	mov    rcx,rsi
  4026b3:	call   0x4111e8
  4026b8:	test   eax,eax
  4026ba:	js     0x4027a9
  4026c0:	mov    rcx,r13
  4026c3:	call   0x4112d8
  4026c8:	cmp    eax,0xffffffff
  4026cb:	je     0x4027a9
  4026d1:	mov    rcx,rsi
  4026d4:	call   0x4112d0
  4026d9:	test   eax,eax
  4026db:	jne    0x4027a9
  4026e1:	mov    rcx,rsi
  4026e4:	call   0x4112c8
  4026e9:	test   eax,eax
  4026eb:	jne    0x4027a9
  4026f1:	call   rbx
  4026f3:	add    rax,0x30
  4026f7:	cmp    rsi,rax
  4026fa:	je     0x402718
  4026fc:	mov    rcx,rsi
  4026ff:	call   0x4112d8
  402704:	cmp    eax,0xffffffff
  402707:	mov    QWORD PTR [rip+0x18bd6],0x0        # 0x41b2e8
  402712:	je     0x4027a9
  402718:	cmp    DWORD PTR [rip+0x18bb1],0x1        # 0x41b2d0
  40271f:	mov    QWORD PTR [rip+0x18bbe],0x0        # 0x41b2e8
  40272a:	jle    0x4027a2
  40272c:	call   rbx
  40272e:	lea    rcx,[rip+0x1243b]        # 0x414b70
  402735:	lea    r9,[rax+0x60]
  402739:	mov    r8d,0x5
  40273f:	mov    edx,0x1
  402744:	call   0x411290
  402749:	mov    eax,0x1
  40274e:	add    rsp,0x2798
  402755:	pop    rbx
  402756:	pop    rsi
  402757:	pop    rdi
  402758:	pop    rbp
  402759:	pop    r12
  40275b:	pop    r13
  40275d:	pop    r14
  40275f:	pop    r15
  402761:	ret    
  402762:	mov    rbx,QWORD PTR [rip+0x19c1b]        # 0x41c384
  402769:	call   rbx
  40276b:	cmp    rax,r13
  40276e:	je     0x402778
  402770:	mov    rcx,r13
  402773:	call   0x4112d8
  402778:	call   rbx
  40277a:	add    rax,0x30
  40277e:	cmp    rsi,rax
  402781:	je     0x40278b
  402783:	mov    rcx,rsi
  402786:	call   0x4112d8
  40278b:	cmp    r14d,0x1
  40278f:	je     0x402877
  402795:	cmp    BYTE PTR [rip+0x18f74],0x0        # 0x41b710
  40279c:	jne    0x40284a
  4027a2:	mov    eax,0x1
  4027a7:	jmp    0x40274e
  4027a9:	call   0x401af0
  4027ae:	call   0x401a60
  4027b3:	mov    rbx,QWORD PTR [rip+0x18b1e]        # 0x41b2d8
  4027ba:	call   QWORD PTR [rip+0x19bc4]        # 0x41c384
  4027c0:	lea    rdx,[rip+0x12ce1]        # 0x4154a8
  4027c7:	lea    rcx,[rax+0x60]
  4027cb:	mov    r8,rbx
  4027ce:	call   0x4112b0
  4027d3:	cmp    BYTE PTR [rip+0x18f36],0x0        # 0x41b710
  4027da:	jne    0x402829
  4027dc:	mov    ecx,0x2
  4027e1:	call   0x4016e0
  4027e6:	call   0x401690
  4027eb:	cmp    BYTE PTR [rip+0x18f1e],0x0        # 0x41b710
  4027f2:	je     0x4027dc
  4027f4:	mov    rbx,QWORD PTR [rip+0x18add]        # 0x41b2d8
  4027fb:	call   QWORD PTR [rip+0x19b83]        # 0x41c384
  402801:	lea    rdx,[rip+0x12cd0]        # 0x4154d8
  402808:	lea    rcx,[rax+0x60]
  40280c:	mov    r8,rbx
  40280f:	call   0x4112b0
  402814:	mov    rcx,QWORD PTR [rip+0x18abd]        # 0x41b2d8
  40281b:	call   0x411268
  402820:	cmp    BYTE PTR [rip+0x18ee9],0x0        # 0x41b710
  402827:	je     0x4027dc
  402829:	call   0x401a30
  40282e:	cmp    BYTE PTR [rip+0x18edb],0x0        # 0x41b710
  402835:	je     0x4027dc
  402837:	call   0x402350
  40283c:	jmp    0x4027dc
  40283e:	lea    rcx,[rip+0x12d20]        # 0x415565
  402845:	call   0x401aa0
  40284a:	mov    rsi,QWORD PTR [rip+0x18a87]        # 0x41b2d8
  402851:	call   rbx
  402853:	lea    r9,[rip+0x18aa6]        # 0x41b300
  40285a:	lea    rcx,[rax+0x60]
  40285e:	lea    rdx,[rip+0x12cd3]        # 0x415538
  402865:	mov    r8,rsi
  402868:	call   0x4112b0
  40286d:	mov    eax,0x1
  402872:	jmp    0x40274e
  402877:	xor    eax,eax
  402879:	jmp    0x40274e
  40287e:	lea    rcx,[rip+0x12c07]        # 0x41548c
  402885:	call   0x401aa0
  40288a:	nop
  40288b:	nop    DWORD PTR [rax+rax*1+0x0]
  402890:	push   rsi
  402891:	push   rbx
  402892:	sub    rsp,0x28
  402896:	mov    rsi,rcx
  402899:	mov    rcx,rdx
  40289c:	mov    rbx,rdx
  40289f:	call   0x411230
  4028a4:	cmp    rax,0x400
  4028aa:	ja     0x4028cb
  4028ac:	mov    r8d,0x400
  4028b2:	mov    rdx,rbx
  4028b5:	mov    rcx,rsi
  4028b8:	call   0x411220
  4028bd:	mov    BYTE PTR [rsi+0x400],0x0
  4028c4:	add    rsp,0x28
  4028c8:	pop    rbx
  4028c9:	pop    rsi
  4028ca:	ret    
  4028cb:	call   QWORD PTR [rip+0x19ab3]        # 0x41c384
  4028d1:	lea    rdx,[rip+0x12cc8]        # 0x4155a0
  4028d8:	lea    rcx,[rax+0x60]
  4028dc:	mov    r9d,0x400
  4028e2:	mov    r8,rbx
  4028e5:	call   0x4112b0
  4028ea:	cmp    DWORD PTR [rip+0x1925b],0x0        # 0x41bb4c
  4028f1:	jle    0x4028fe
  4028f3:	mov    ecx,DWORD PTR [rip+0x19253]        # 0x41bb4c
  4028f9:	call   0x4112e0
  4028fe:	mov    DWORD PTR [rip+0x19244],0x1        # 0x41bb4c
  402908:	jmp    0x4028f3
  40290a:	nop    WORD PTR [rax+rax*1+0x0]
  402910:	push   rsi
  402911:	push   rbx
  402912:	sub    rsp,0x38
  402916:	test   rcx,rcx
  402919:	mov    rsi,rcx
  40291c:	mov    rbx,rcx
  40291f:	jne    0x402926
  402921:	jmp    0x402944
  402923:	mov    rbx,r8
  402926:	mov    r8,QWORD PTR [rbx+0x8]
  40292a:	test   r8,r8
  40292d:	jne    0x402923
  40292f:	xor    ecx,ecx
  402931:	call   0x402910
  402936:	mov    QWORD PTR [rbx+0x8],rax
  40293a:	mov    rax,rsi
  40293d:	add    rsp,0x38
  402941:	pop    rbx
  402942:	pop    rsi
  402943:	ret    
  402944:	mov    ecx,0x10
  402949:	mov    QWORD PTR [rsp+0x28],rdx
  40294e:	call   0x411278
  402953:	test   rax,rax
  402956:	mov    rsi,rax
  402959:	mov    rdx,QWORD PTR [rsp+0x28]
  40295e:	je     0x4029a8
  402960:	mov    rcx,rdx
  402963:	mov    QWORD PTR [rax],0x0
  40296a:	mov    QWORD PTR [rax+0x8],0x0
  402972:	mov    QWORD PTR [rsp+0x28],rdx
  402977:	call   0x411230
  40297c:	lea    ecx,[rax+0x5]
  40297f:	mov    rbx,rax
  402982:	movsxd rcx,ecx
  402985:	call   0x411278
  40298a:	test   rax,rax
  40298d:	mov    rcx,rax
  402990:	je     0x4029a8
  402992:	mov    rdx,QWORD PTR [rsp+0x28]
  402997:	lea    r8,[rbx+0x1]
  40299b:	mov    QWORD PTR [rsi],rax
  40299e:	call   0x411270
  4029a3:	mov    rax,rsi
  4029a6:	jmp    0x40293d
  4029a8:	call   0x401a60
  4029ad:	nop
  4029ae:	xchg   ax,ax
  4029b0:	push   r14
  4029b2:	push   r13
  4029b4:	push   r12
  4029b6:	push   rbp
  4029b7:	push   rdi
  4029b8:	push   rsi
  4029b9:	push   rbx
  4029ba:	sub    rsp,0x20
  4029be:	mov    rbp,rcx
  4029c1:	mov    rcx,rdx
  4029c4:	call   0x411288
  4029c9:	test   rax,rax
  4029cc:	mov    rbx,rax
  4029cf:	je     0x402a8e
  4029d5:	mov    rdi,QWORD PTR [rip+0x19a80]        # 0x41c45c
  4029dc:	lea    r13,[rip+0x18d5d]        # 0x41b740
  4029e3:	xor    esi,esi
  4029e5:	mov    r12d,0x400
  4029eb:	movsxd rsi,esi
  4029ee:	add    rbx,rsi
  4029f1:	movzx  esi,BYTE PTR [rbx]
  4029f4:	test   sil,sil
  4029f7:	jne    0x402a07
  4029f9:	jmp    0x402a8e
  4029fe:	xchg   ax,ax
  402a00:	add    rbx,0x1
  402a04:	movzx  esi,BYTE PTR [rbx]
  402a07:	movsx  ecx,sil
  402a0b:	call   rdi
  402a0d:	test   eax,eax
  402a0f:	jne    0x402a00
  402a11:	test   sil,sil
  402a14:	je     0x402a9d
  402a1a:	lea    r14,[rbx+0x1]
  402a1e:	xor    esi,esi
  402a20:	add    r14,0x1
  402a24:	movsx  ecx,BYTE PTR [r14-0x1]
  402a29:	add    esi,0x1
  402a2c:	test   cl,cl
  402a2e:	je     0x402a36
  402a30:	call   rdi
  402a32:	test   eax,eax
  402a34:	je     0x402a20
  402a36:	cmp    esi,0x400
  402a3c:	mov    edx,r12d
  402a3f:	cmovle edx,esi
  402a42:	xor    r8d,r8d
  402a45:	lea    eax,[rdx-0x1]
  402a48:	add    rax,0x1
  402a4c:	nop    DWORD PTR [rax+0x0]
  402a50:	movzx  r9d,BYTE PTR [rbx+r8*1]
  402a55:	mov    BYTE PTR [r13+r8*1+0x0],r9b
  402a5a:	add    r8,0x1
  402a5e:	cmp    r8,rax
  402a61:	jne    0x402a50
  402a63:	movsxd rdx,edx
  402a66:	movsxd rsi,esi
  402a69:	mov    BYTE PTR [r13+rdx*1+0x0],0x0
  402a6f:	mov    rcx,QWORD PTR [rbp+0x0]
  402a73:	add    rbx,rsi
  402a76:	mov    rdx,r13
  402a79:	call   0x402910
  402a7e:	mov    QWORD PTR [rbp+0x0],rax
  402a82:	movzx  esi,BYTE PTR [rbx]
  402a85:	test   sil,sil
  402a88:	jne    0x402a07
  402a8e:	add    rsp,0x20
  402a92:	pop    rbx
  402a93:	pop    rsi
  402a94:	pop    rdi
  402a95:	pop    rbp
  402a96:	pop    r12
  402a98:	pop    r13
  402a9a:	pop    r14
  402a9c:	ret    
  402a9d:	xor    esi,esi
  402a9f:	jmp    0x4029eb
  402aa4:	xchg   ax,ax
  402aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ab0:	sub    rsp,0x98
  402ab7:	lea    rcx,[rip+0x18842]        # 0x41b300
  402abe:	lea    rdx,[rsp+0x50]
  402ac3:	call   QWORD PTR [rip+0x19a13]        # 0x41c4dc
  402ac9:	mov    edx,eax
  402acb:	xor    eax,eax
  402acd:	cmp    edx,0xffffffff
  402ad0:	je     0x402ae0
  402ad2:	xor    eax,eax
  402ad4:	test   edx,edx
  402ad6:	movsx  ecx,WORD PTR [rsp+0x58]
  402adb:	jne    0x402ae0
  402add:	lea    eax,[rcx-0x1]
  402ae0:	add    rsp,0x98
  402ae7:	ret    
  402ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	sub    rsp,0x98
  402af7:	lea    rcx,[rip+0x18802]        # 0x41b300
  402afe:	lea    rdx,[rsp+0x50]
  402b03:	call   QWORD PTR [rip+0x199d3]        # 0x41c4dc
  402b09:	mov    edx,eax
  402b0b:	mov    eax,0x1
  402b10:	cmp    edx,0xffffffff
  402b13:	je     0x402b2b
  402b15:	test   edx,edx
  402b17:	movzx  ecx,WORD PTR [rsp+0x56]
  402b1c:	mov    eax,0x1
  402b21:	jne    0x402b2b
  402b23:	not    ecx
  402b25:	shr    cx,0xf
  402b29:	mov    eax,ecx
  402b2b:	add    rsp,0x98
  402b32:	ret    
  402b33:	nop    DWORD PTR [rax]
  402b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b40:	push   rdi
  402b41:	push   rsi
  402b42:	push   rbx
  402b43:	sub    rsp,0x20
  402b47:	lea    rbx,[rip+0x187b2]        # 0x41b300
  402b4e:	mov    rdx,rbx
  402b51:	mov    ecx,DWORD PTR [rdx]
  402b53:	add    rdx,0x4
  402b57:	lea    eax,[rcx-0x1010101]
  402b5d:	not    ecx
  402b5f:	and    eax,ecx
  402b61:	and    eax,0x80808080
  402b66:	je     0x402b51
  402b68:	mov    ecx,eax
  402b6a:	mov    r8d,DWORD PTR [rip+0x18ba3]        # 0x41b714
  402b71:	shr    ecx,0x10
  402b74:	test   eax,0x8080
  402b79:	cmove  eax,ecx
  402b7c:	lea    rcx,[rdx+0x2]
  402b80:	cmove  rdx,rcx
  402b84:	add    al,al
  402b86:	sbb    rdx,0x3
  402b8a:	sub    rdx,rbx
  402b8d:	cmp    r8d,edx
  402b90:	jle    0x402c0a
  402b92:	mov    edi,0x1
  402b97:	sub    r8d,edx
  402b9a:	mov    rsi,QWORD PTR [rip+0x197e3]        # 0x41c384
  402ba1:	cmp    edi,r8d
  402ba4:	jg     0x402c0a
  402ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bb0:	call   rsi
  402bb2:	lea    rdx,[rax+0x60]
  402bb6:	mov    ecx,0x20
  402bbb:	add    edi,0x1
  402bbe:	call   0x4112a8
  402bc3:	mov    r8d,DWORD PTR [rip+0x18b4a]        # 0x41b714
  402bca:	mov    rdx,rbx
  402bcd:	mov    ecx,DWORD PTR [rdx]
  402bcf:	add    rdx,0x4
  402bd3:	lea    eax,[rcx-0x1010101]
  402bd9:	not    ecx
  402bdb:	and    eax,ecx
  402bdd:	and    eax,0x80808080
  402be2:	je     0x402bcd
  402be4:	mov    ecx,eax
  402be6:	shr    ecx,0x10
  402be9:	test   eax,0x8080
  402bee:	cmove  eax,ecx
  402bf1:	lea    rcx,[rdx+0x2]
  402bf5:	cmove  rdx,rcx
  402bf9:	add    al,al
  402bfb:	sbb    rdx,0x3
  402bff:	sub    rdx,rbx
  402c02:	sub    r8d,edx
  402c05:	cmp    edi,r8d
  402c08:	jle    0x402bb0
  402c0a:	add    rsp,0x20
  402c0e:	pop    rbx
  402c0f:	pop    rsi
  402c10:	pop    rdi
  402c11:	ret    
  402c12:	nop    DWORD PTR [rax+0x0]
  402c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c20:	push   r14
  402c22:	push   r13
  402c24:	push   r12
  402c26:	push   rbp
  402c27:	push   rdi
  402c28:	push   rsi
  402c29:	push   rbx
  402c2a:	sub    rsp,0xa0
  402c31:	mov    BYTE PTR [rip+0x18252],0x0        # 0x41ae8a
  402c38:	test   rcx,rcx
  402c3b:	mov    rbx,rcx
  402c3e:	je     0x402e60
  402c44:	mov    eax,DWORD PTR [rip+0x17df6]        # 0x41aa40
  402c4a:	cmp    eax,0x2
  402c4d:	je     0x402eb0
  402c53:	cmp    eax,0x3
  402c56:	je     0x402d20
  402c5c:	xor    ebx,ebx
  402c5e:	cmp    eax,0x1
  402c61:	je     0x402e6d
  402c67:	cmp    eax,0x1
  402c6a:	lea    rsi,[rip+0x1868f]        # 0x41b300
  402c71:	je     0x402ce7
  402c73:	movzx  eax,BYTE PTR [rip+0x18686]        # 0x41b300
  402c7a:	test   al,al
  402c7c:	je     0x402cae
  402c7e:	cmp    al,0x2a
  402c80:	je     0x402dd0
  402c86:	cmp    al,0x3f
  402c88:	je     0x402dd0
  402c8e:	mov    rdx,rsi
  402c91:	jmp    0x402ca3
  402c93:	cmp    al,0x2a
  402c95:	je     0x402dd0
  402c9b:	cmp    al,0x3f
  402c9d:	je     0x402dd0
  402ca3:	add    rdx,0x1
  402ca7:	movzx  eax,BYTE PTR [rdx]
  402caa:	test   al,al
  402cac:	jne    0x402c93
  402cae:	mov    rcx,rsi
  402cb1:	call   0x4019d0
  402cb6:	test   al,al
  402cb8:	je     0x403240
  402cbe:	mov    eax,DWORD PTR [rip+0x17d7c]        # 0x41aa40
  402cc4:	sub    eax,0x2
  402cc7:	cmp    eax,0x1
  402cca:	jbe    0x402f91
  402cd0:	test   bl,bl
  402cd2:	je     0x402ce1
  402cd4:	cmp    BYTE PTR [rip+0x18a35],0x0        # 0x41b710
  402cdb:	jne    0x403290
  402ce1:	mov    eax,DWORD PTR [rip+0x17d59]        # 0x41aa40
  402ce7:	cmp    eax,0x3
  402cea:	je     0x403045
  402cf0:	cmp    eax,0x2
  402cf3:	je     0x403193
  402cf9:	cmp    eax,0x3
  402cfc:	lea    rbx,[rip+0x181bd]        # 0x41aec0
  402d03:	je     0x403089
  402d09:	cmp    eax,0x1
  402d0c:	je     0x402eb5
  402d12:	lea    rcx,[rip+0x12b0d]        # 0x415826
  402d19:	call   0x401aa0
  402d1e:	xchg   ax,ax
  402d20:	lea    rsi,[rip+0x185d9]        # 0x41b300
  402d27:	mov    rdx,rcx
  402d2a:	lea    r14,[rip+0x102ef]        # 0x413020
  402d31:	lea    r13,[rip+0x10308]        # 0x413040
  402d38:	xor    edi,edi
  402d3a:	mov    rcx,rsi
  402d3d:	call   0x402890
  402d42:	mov    rdx,rbx
  402d45:	lea    rbx,[rip+0x18174]        # 0x41aec0
  402d4c:	mov    rcx,rbx
  402d4f:	call   0x402890
  402d54:	mov    rbp,QWORD PTR [r13+rdi*1+0x0]
  402d59:	mov    rcx,rbx
  402d5c:	mov    r12,QWORD PTR [r14+rdi*1]
  402d60:	mov    rdx,rbp
  402d63:	call   0x401600
  402d68:	test   al,al
  402d6a:	jne    0x402e00
  402d70:	add    rdi,0x8
  402d74:	cmp    rdi,0x20
  402d78:	jne    0x402d54
  402d7a:	mov    edx,DWORD PTR [rbx]
  402d7c:	add    rbx,0x4
  402d80:	lea    eax,[rdx-0x1010101]
  402d86:	not    edx
  402d88:	and    eax,edx
  402d8a:	and    eax,0x80808080
  402d8f:	je     0x402d7a
  402d91:	mov    edx,eax
  402d93:	shr    edx,0x10
  402d96:	test   eax,0x8080
  402d9b:	cmove  eax,edx
  402d9e:	lea    rdx,[rbx+0x2]
  402da2:	cmove  rbx,rdx
  402da6:	add    al,al
  402da8:	sbb    rbx,0x3
  402dac:	cmp    DWORD PTR [rip+0x17c8d],0x1        # 0x41aa40
  402db3:	mov    DWORD PTR [rbx],0x74756f2e
  402db9:	mov    BYTE PTR [rbx+0x4],0x0
  402dbd:	mov    ebx,0x1
  402dc2:	jne    0x402c73
  402dc8:	jmp    0x402cd4
  402dcd:	nop    DWORD PTR [rax]
  402dd0:	cmp    BYTE PTR [rip+0x18939],0x0        # 0x41b710
  402dd7:	jne    0x403210
  402ddd:	mov    ebp,DWORD PTR [rip+0x18d69]        # 0x41bb4c
  402de3:	test   ebp,ebp
  402de5:	jle    0x403120
  402deb:	add    rsp,0xa0
  402df2:	pop    rbx
  402df3:	pop    rsi
  402df4:	pop    rdi
  402df5:	pop    rbp
  402df6:	pop    r12
  402df8:	pop    r13
  402dfa:	pop    r14
  402dfc:	ret    
  402dfd:	nop    DWORD PTR [rax]
  402e00:	mov    rsi,rbx
  402e03:	mov    edx,DWORD PTR [rsi]
  402e05:	add    rsi,0x4
  402e09:	lea    eax,[rdx-0x1010101]
  402e0f:	not    edx
  402e11:	and    eax,edx
  402e13:	and    eax,0x80808080
  402e18:	je     0x402e03
  402e1a:	mov    edx,eax
  402e1c:	mov    rcx,rbp
  402e1f:	shr    edx,0x10
  402e22:	test   eax,0x8080
  402e27:	cmove  eax,edx
  402e2a:	lea    rdx,[rsi+0x2]
  402e2e:	cmove  rsi,rdx
  402e32:	add    al,al
  402e34:	sbb    rsi,0x3
  402e38:	sub    rsi,rbx
  402e3b:	call   0x411230
  402e40:	sub    rsi,rax
  402e43:	mov    rcx,rbx
  402e46:	mov    rdx,r12
  402e49:	mov    BYTE PTR [rbx+rsi*1],0x0
  402e4d:	xor    ebx,ebx
  402e4f:	call   0x411248
  402e54:	mov    eax,DWORD PTR [rip+0x17be6]        # 0x41aa40
  402e5a:	jmp    0x402c67
  402e5f:	nop
  402e60:	cmp    DWORD PTR [rip+0x17bd9],0x1        # 0x41aa40
  402e67:	jne    0x403524
  402e6d:	lea    rdx,[rip+0x127be]        # 0x415632
  402e74:	lea    rsi,[rip+0x18485]        # 0x41b300
  402e7b:	lea    rbx,[rip+0x1803e]        # 0x41aec0
  402e82:	mov    rcx,rsi
  402e85:	call   0x402890
  402e8a:	lea    rdx,[rip+0x127a9]        # 0x41563a
  402e91:	mov    rcx,rbx
  402e94:	xor    ebx,ebx
  402e96:	call   0x402890
  402e9b:	mov    eax,DWORD PTR [rip+0x17b9f]        # 0x41aa40
  402ea1:	jmp    0x402c67
  402ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402eb0:	mov    rdx,rcx
  402eb3:	jmp    0x402e74
  402eb5:	mov    rbx,QWORD PTR [rip+0x194c8]        # 0x41c384
  402ebc:	call   rbx
  402ebe:	mov    rdi,rax
  402ec1:	call   rbx
  402ec3:	mov    rsi,rax
  402ec6:	call   rbx
  402ec8:	mov    rcx,rax
  402ecb:	add    rsi,0x30
  402ecf:	call   0x4111e8
  402ed4:	mov    ecx,eax
  402ed6:	call   0x4111f0
  402edb:	test   eax,eax
  402edd:	jne    0x40344b
  402ee3:	mov    ecx,DWORD PTR [rip+0x183e7]        # 0x41b2d0
  402ee9:	test   ecx,ecx
  402eeb:	jle    0x402f1d
  402eed:	mov    rbx,QWORD PTR [rip+0x19490]        # 0x41c384
  402ef4:	call   rbx
  402ef6:	lea    r8,[rip+0x18403]        # 0x41b300
  402efd:	lea    rcx,[rax+0x60]
  402f01:	lea    rdx,[rip+0x12936]        # 0x41583e
  402f08:	call   0x4112b0
  402f0d:	call   0x402b40
  402f12:	call   rbx
  402f14:	lea    rcx,[rax+0x60]
  402f18:	call   0x4112c8
  402f1d:	mov    rdx,rsi
  402f20:	mov    rcx,rdi
  402f23:	mov    QWORD PTR [rip+0x183be],rsi        # 0x41b2e8
  402f2a:	mov    BYTE PTR [rip+0x17f59],0x1        # 0x41ae8a
  402f31:	call   0x402410
  402f36:	test   al,al
  402f38:	mov    QWORD PTR [rip+0x183a5],0x0        # 0x41b2e8
  402f43:	je     0x403130
  402f49:	cmp    DWORD PTR [rip+0x17af0],0x3        # 0x41aa40
  402f50:	je     0x4033db
  402f56:	mov    eax,DWORD PTR [rip+0x18374]        # 0x41b2d0
  402f5c:	mov    BYTE PTR [rip+0x17f27],0x0        # 0x41ae8a
  402f63:	test   eax,eax
  402f65:	jle    0x402deb
  402f6b:	call   QWORD PTR [rip+0x19413]        # 0x41c384
  402f71:	lea    rcx,[rip+0x128cd]        # 0x415845
  402f78:	lea    r9,[rax+0x60]
  402f7c:	mov    r8d,0x5
  402f82:	mov    edx,0x1
  402f87:	call   0x411290
  402f8c:	jmp    0x402deb
  402f91:	lea    rdx,[rsp+0x60]
  402f96:	mov    rcx,rsi
  402f99:	call   QWORD PTR [rip+0x1953d]        # 0x41c4dc
  402f9f:	cmp    eax,0xffffffff
  402fa2:	je     0x4034bf
  402fa8:	movzx  edx,WORD PTR [rsp+0x68]
  402fad:	mov    eax,DWORD PTR [rsp+0x60]
  402fb1:	mov    DWORD PTR [rsp+0x30],eax
  402fb5:	movzx  eax,WORD PTR [rsp+0x64]
  402fba:	mov    WORD PTR [rsp+0x38],dx
  402fbf:	movzx  edx,WORD PTR [rsp+0x6a]
  402fc4:	mov    WORD PTR [rsp+0x34],ax
  402fc9:	movzx  eax,WORD PTR [rsp+0x66]
  402fce:	mov    WORD PTR [rsp+0x3a],dx
  402fd3:	movzx  edx,WORD PTR [rsp+0x6c]
  402fd8:	test   ah,0x40
  402fdb:	mov    WORD PTR [rsp+0x36],ax
  402fe0:	mov    WORD PTR [rsp+0x3c],dx
  402fe5:	mov    edx,DWORD PTR [rsp+0x70]
  402fe9:	mov    DWORD PTR [rsp+0x40],edx
  402fed:	mov    rdx,QWORD PTR [rsp+0x78]
  402ff2:	mov    DWORD PTR [rsp+0x44],edx
  402ff6:	mov    rdx,QWORD PTR [rsp+0x80]
  402ffe:	mov    QWORD PTR [rsp+0x48],rdx
  403003:	mov    rdx,QWORD PTR [rsp+0x88]
  40300b:	mov    QWORD PTR [rsp+0x50],rdx
  403010:	mov    rdx,QWORD PTR [rsp+0x90]
  403018:	mov    QWORD PTR [rsp+0x58],rdx
  40301d:	jne    0x40332d
  403023:	cmp    DWORD PTR [rip+0x17a16],0x3        # 0x41aa40
  40302a:	jne    0x402cd0
  403030:	cmp    BYTE PTR [rip+0x17e54],0x0        # 0x41ae8b
  403037:	je     0x403399
  40303d:	test   bl,bl
  40303f:	jne    0x402cd4
  403045:	lea    rbx,[rip+0x17e74]        # 0x41aec0
  40304c:	mov    rcx,rbx
  40304f:	call   0x4019d0
  403054:	test   al,al
  403056:	je     0x40306d
  403058:	cmp    BYTE PTR [rip+0x17e2c],0x0        # 0x41ae8b
  40305f:	je     0x403363
  403065:	mov    rcx,rbx
  403068:	call   0x411260
  40306d:	mov    eax,DWORD PTR [rip+0x179cd]        # 0x41aa40
  403073:	cmp    eax,0x3
  403076:	jne    0x402cf0
  40307c:	cmp    BYTE PTR [rip+0x17e08],0x0        # 0x41ae8b
  403083:	je     0x4032c4
  403089:	lea    rbp,[rip+0x18270]        # 0x41b300
  403090:	lea    rdx,[rip+0x11956]        # 0x4149ed
  403097:	mov    rcx,rbp
  40309a:	call   0x4112b8
  40309f:	lea    rdx,[rip+0x12754]        # 0x4157fa
  4030a6:	mov    rcx,rbx
  4030a9:	mov    rdi,rax
  4030ac:	call   0x4112b8
  4030b1:	test   rax,rax
  4030b4:	mov    rsi,rax
  4030b7:	je     0x4034d6
  4030bd:	test   rdi,rdi
  4030c0:	jne    0x402ee3
  4030c6:	call   QWORD PTR [rip+0x192f0]        # 0x41c3bc
  4030cc:	mov    ecx,DWORD PTR [rax]
  4030ce:	call   0x411238
  4030d3:	mov    rbx,QWORD PTR [rip+0x181fe]        # 0x41b2d8
  4030da:	mov    rdi,rax
  4030dd:	call   QWORD PTR [rip+0x192a1]        # 0x41c384
  4030e3:	lea    rdx,[rip+0x12586]        # 0x415670
  4030ea:	lea    rcx,[rax+0x60]
  4030ee:	mov    r9,rbp
  4030f1:	mov    r8,rbx
  4030f4:	mov    QWORD PTR [rsp+0x20],rdi
  4030f9:	call   0x4112b0
  4030fe:	mov    rcx,rsi
  403101:	call   0x4112d8
  403106:	mov    r8d,DWORD PTR [rip+0x18a3f]        # 0x41bb4c
  40310d:	test   r8d,r8d
  403110:	jg     0x402deb
  403116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403120:	mov    DWORD PTR [rip+0x18a22],0x1        # 0x41bb4c
  40312a:	jmp    0x402deb
  40312f:	nop
  403130:	cmp    DWORD PTR [rip+0x17909],0x3        # 0x41aa40
  403137:	mov    BYTE PTR [rip+0x18a0d],0x1        # 0x41bb4b
  40313e:	mov    BYTE PTR [rip+0x17d45],0x0        # 0x41ae8a
  403145:	je     0x40349b
  40314b:	cmp    DWORD PTR [rip+0x189fa],0x1        # 0x41bb4c
  403152:	mov    BYTE PTR [rip+0x17d31],0x0        # 0x41ae8a
  403159:	jle    0x40343c
  40315f:	mov    edx,DWORD PTR [rip+0x1816b]        # 0x41b2d0
  403165:	test   edx,edx
  403167:	jle    0x403410
  40316d:	call   QWORD PTR [rip+0x19211]        # 0x41c384
  403173:	lea    rcx,[rip+0x126d1]        # 0x41584b
  40317a:	lea    r9,[rax+0x60]
  40317e:	mov    r8d,0x12
  403184:	mov    edx,0x1
  403189:	call   0x411290
  40318e:	jmp    0x402deb
  403193:	lea    rbx,[rip+0x18166]        # 0x41b300
  40319a:	lea    rdx,[rip+0x1184c]        # 0x4149ed
  4031a1:	mov    rcx,rbx
  4031a4:	call   0x4112b8
  4031a9:	mov    rdi,rax
  4031ac:	mov    rbp,QWORD PTR [rip+0x191d1]        # 0x41c384
  4031b3:	call   rbp
  4031b5:	test   rdi,rdi
  4031b8:	lea    rsi,[rax+0x30]
  4031bc:	jne    0x402ee3
  4031c2:	call   QWORD PTR [rip+0x191f4]        # 0x41c3bc
  4031c8:	mov    ecx,DWORD PTR [rax]
  4031ca:	call   0x411238
  4031cf:	mov    rsi,QWORD PTR [rip+0x18102]        # 0x41b2d8
  4031d6:	mov    rdi,rax
  4031d9:	call   rbp
  4031db:	lea    rdx,[rip+0x125f6]        # 0x4157d8
  4031e2:	lea    rcx,[rax+0x60]
  4031e6:	mov    r9,rbx
  4031e9:	mov    QWORD PTR [rsp+0x20],rdi
  4031ee:	mov    r8,rsi
  4031f1:	call   0x4112b0
  4031f6:	mov    r9d,DWORD PTR [rip+0x1894f]        # 0x41bb4c
  4031fd:	test   r9d,r9d
  403200:	jg     0x402deb
  403206:	jmp    0x403120
  40320b:	nop    DWORD PTR [rax+rax*1+0x0]
  403210:	mov    rbx,QWORD PTR [rip+0x180c1]        # 0x41b2d8
  403217:	call   QWORD PTR [rip+0x19167]        # 0x41c384
  40321d:	lea    rdx,[rip+0x12424]        # 0x415648
  403224:	lea    rcx,[rax+0x60]
  403228:	mov    r9,rsi
  40322b:	mov    r8,rbx
  40322e:	call   0x4112b0
  403233:	jmp    0x402ddd
  403238:	nop    DWORD PTR [rax+rax*1+0x0]
  403240:	call   QWORD PTR [rip+0x19176]        # 0x41c3bc
  403246:	mov    ecx,DWORD PTR [rax]
  403248:	call   0x411238
  40324d:	mov    rbx,QWORD PTR [rip+0x18084]        # 0x41b2d8
  403254:	mov    rdi,rax
  403257:	call   QWORD PTR [rip+0x19127]        # 0x41c384
  40325d:	lea    rdx,[rip+0x1240c]        # 0x415670
  403264:	lea    rcx,[rax+0x60]
  403268:	mov    QWORD PTR [rsp+0x20],rdi
  40326d:	mov    r9,rsi
  403270:	mov    r8,rbx
  403273:	call   0x4112b0
  403278:	mov    edi,DWORD PTR [rip+0x188ce]        # 0x41bb4c
  40327e:	test   edi,edi
  403280:	jg     0x402deb
  403286:	jmp    0x403120
  40328b:	nop    DWORD PTR [rax+rax*1+0x0]
  403290:	mov    rdi,QWORD PTR [rip+0x18041]        # 0x41b2d8
  403297:	lea    rbx,[rip+0x17c22]        # 0x41aec0
  40329e:	call   QWORD PTR [rip+0x190e0]        # 0x41c384
  4032a4:	lea    rdx,[rip+0x12445]        # 0x4156f0
  4032ab:	lea    rcx,[rax+0x60]
  4032af:	mov    QWORD PTR [rsp+0x20],rbx
  4032b4:	mov    r9,rsi
  4032b7:	mov    r8,rdi
  4032ba:	call   0x4112b0
  4032bf:	jmp    0x402ce1
  4032c4:	call   0x402ab0
  4032c9:	test   eax,eax
  4032cb:	mov    ebx,eax
  4032cd:	jle    0x4034b4
  4032d3:	cmp    eax,0x1
  4032d6:	mov    rdi,QWORD PTR [rip+0x17ffb]        # 0x41b2d8
  4032dd:	lea    rax,[rip+0x12334]        # 0x415618
  4032e4:	lea    rsi,[rip+0x1232f]        # 0x41561a
  4032eb:	cmovne rsi,rax
  4032ef:	call   QWORD PTR [rip+0x1908f]        # 0x41c384
  4032f5:	lea    r9,[rip+0x18004]        # 0x41b300
  4032fc:	lea    rcx,[rax+0x60]
  403300:	lea    rdx,[rip+0x12449]        # 0x415750
  403307:	mov    QWORD PTR [rsp+0x28],rsi
  40330c:	mov    DWORD PTR [rsp+0x20],ebx
  403310:	mov    r8,rdi
  403313:	call   0x4112b0
  403318:	mov    r11d,DWORD PTR [rip+0x1882d]        # 0x41bb4c
  40331f:	test   r11d,r11d
  403322:	jg     0x402deb
  403328:	jmp    0x403120
  40332d:	mov    rbx,QWORD PTR [rip+0x17fa4]        # 0x41b2d8
  403334:	call   QWORD PTR [rip+0x1904a]        # 0x41c384
  40333a:	lea    rdx,[rip+0x12357]        # 0x415698
  403341:	lea    rcx,[rax+0x60]
  403345:	mov    r9,rsi
  403348:	mov    r8,rbx
  40334b:	call   0x4112b0
  403350:	mov    esi,DWORD PTR [rip+0x187f6]        # 0x41bb4c
  403356:	test   esi,esi
  403358:	jg     0x402deb
  40335e:	jmp    0x403120
  403363:	mov    rsi,QWORD PTR [rip+0x17f6e]        # 0x41b2d8
  40336a:	call   QWORD PTR [rip+0x19014]        # 0x41c384
  403370:	lea    rdx,[rip+0x123b1]        # 0x415728
  403377:	lea    rcx,[rax+0x60]
  40337b:	mov    r9,rbx
  40337e:	mov    r8,rsi
  403381:	call   0x4112b0
  403386:	mov    ebx,DWORD PTR [rip+0x187c0]        # 0x41bb4c
  40338c:	test   ebx,ebx
  40338e:	jg     0x402deb
  403394:	jmp    0x403120
  403399:	call   0x402af0
  40339e:	test   al,al
  4033a0:	je     0x402cd0
  4033a6:	cmp    BYTE PTR [rip+0x18363],0x0        # 0x41b710
  4033ad:	je     0x402ddd
  4033b3:	mov    rbx,QWORD PTR [rip+0x17f1e]        # 0x41b2d8
  4033ba:	call   QWORD PTR [rip+0x18fc4]        # 0x41c384
  4033c0:	lea    rdx,[rip+0x122f9]        # 0x4156c0
  4033c7:	lea    rcx,[rax+0x60]
  4033cb:	mov    r9,rsi
  4033ce:	mov    r8,rbx
  4033d1:	call   0x4112b0
  4033d6:	jmp    0x402ddd
  4033db:	cmp    BYTE PTR [rip+0x18768],0x0        # 0x41bb4a
  4033e2:	mov    BYTE PTR [rip+0x17aa1],0x0        # 0x41ae8a
  4033e9:	jne    0x402f56
  4033ef:	lea    rcx,[rip+0x17f0a]        # 0x41b300
  4033f6:	call   0x411260
  4033fb:	test   eax,eax
  4033fd:	je     0x402f56
  403403:	call   0x401af0
  403408:	nop    DWORD PTR [rax+rax*1+0x0]
  403410:	mov    rbx,QWORD PTR [rip+0x17ec1]        # 0x41b2d8
  403417:	call   QWORD PTR [rip+0x18f67]        # 0x41c384
  40341d:	lea    r9,[rip+0x17edc]        # 0x41b300
  403424:	lea    rcx,[rax+0x60]
  403428:	lea    rdx,[rip+0x1242f]        # 0x41585e
  40342f:	mov    r8,rbx
  403432:	call   0x4112b0
  403437:	jmp    0x402deb
  40343c:	mov    DWORD PTR [rip+0x18706],0x2        # 0x41bb4c
  403446:	jmp    0x40315f
  40344b:	mov    rsi,QWORD PTR [rip+0x17e86]        # 0x41b2d8
  403452:	call   rbx
  403454:	lea    rdx,[rip+0x1231d]        # 0x415778
  40345b:	lea    rcx,[rax+0x60]
  40345f:	mov    r8,rsi
  403462:	call   0x4112b0
  403467:	mov    rsi,QWORD PTR [rip+0x17e6a]        # 0x41b2d8
  40346e:	call   rbx
  403470:	lea    rdx,[rip+0x12339]        # 0x4157b0
  403477:	lea    rcx,[rax+0x60]
  40347b:	mov    r9,rsi
  40347e:	mov    r8,rsi
  403481:	call   0x4112b0
  403486:	mov    r10d,DWORD PTR [rip+0x186bf]        # 0x41bb4c
  40348d:	test   r10d,r10d
  403490:	jg     0x402deb
  403496:	jmp    0x403120
  40349b:	lea    rcx,[rip+0x17a1e]        # 0x41aec0
  4034a2:	call   0x411260
  4034a7:	test   eax,eax
  4034a9:	je     0x40314b
  4034af:	jmp    0x403403
  4034b4:	mov    eax,DWORD PTR [rip+0x17586]        # 0x41aa40
  4034ba:	jmp    0x402cf0
  4034bf:	lea    rdx,[rsp+0x30]
  4034c4:	mov    ecx,0x6
  4034c9:	xor    eax,eax
  4034cb:	mov    rdi,rdx
  4034ce:	rep stos QWORD PTR es:[rdi],rax
  4034d1:	jmp    0x403023
  4034d6:	call   QWORD PTR [rip+0x18ee0]        # 0x41c3bc
  4034dc:	mov    ecx,DWORD PTR [rax]
  4034de:	call   0x411238
  4034e3:	mov    rsi,QWORD PTR [rip+0x17dee]        # 0x41b2d8
  4034ea:	mov    rbp,rax
  4034ed:	call   QWORD PTR [rip+0x18e91]        # 0x41c384
  4034f3:	lea    rdx,[rip+0x12306]        # 0x415800
  4034fa:	lea    rcx,[rax+0x60]
  4034fe:	mov    QWORD PTR [rsp+0x20],rbp
  403503:	mov    r9,rbx
  403506:	mov    r8,rsi
  403509:	call   0x4112b0
  40350e:	test   rdi,rdi
  403511:	je     0x402ddd
  403517:	mov    rcx,rdi
  40351a:	call   0x4112d8
  40351f:	jmp    0x402ddd
  403524:	lea    rcx,[rip+0x120f0]        # 0x41561b
  40352b:	call   0x401aa0
  403530:	nop
  403531:	nop    DWORD PTR [rax+rax*1+0x0]
  403536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403540:	push   rdi
  403541:	push   rsi
  403542:	push   rbx
  403543:	sub    rsp,0xa0
  40354a:	mov    BYTE PTR [rip+0x17939],0x0        # 0x41ae8a
  403551:	test   rcx,rcx
  403554:	mov    rbx,rcx
  403557:	je     0x403840
  40355d:	lea    rdx,[rip+0x12329]        # 0x41588d
  403564:	lea    rcx,[rip+0x17955]        # 0x41aec0
  40356b:	call   0x402890
  403570:	mov    eax,DWORD PTR [rip+0x174ca]        # 0x41aa40
  403576:	cmp    eax,0x2
  403579:	je     0x4037f5
  40357f:	cmp    eax,0x3
  403582:	je     0x4037f5
  403588:	cmp    eax,0x1
  40358b:	lea    rbx,[rip+0x17d6e]        # 0x41b300
  403592:	je     0x403750
  403598:	movzx  eax,BYTE PTR [rip+0x17d61]        # 0x41b300
  40359f:	test   al,al
  4035a1:	je     0x4035db
  4035a3:	cmp    al,0x2a
  4035a5:	je     0x403812
  4035ab:	cmp    al,0x3f
  4035ad:	je     0x403812
  4035b3:	mov    rdx,rbx
  4035b6:	jmp    0x4035d0
  4035b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4035c0:	cmp    al,0x2a
  4035c2:	je     0x403812
  4035c8:	cmp    al,0x3f
  4035ca:	je     0x403812
  4035d0:	add    rdx,0x1
  4035d4:	movzx  eax,BYTE PTR [rdx]
  4035d7:	test   al,al
  4035d9:	jne    0x4035c0
  4035db:	mov    rcx,rbx
  4035de:	call   0x4019d0
  4035e3:	test   al,al
  4035e5:	je     0x4038f0
  4035eb:	cmp    DWORD PTR [rip+0x1744e],0x1        # 0x41aa40
  4035f2:	je     0x403775
  4035f8:	lea    rdx,[rsp+0x60]
  4035fd:	mov    rcx,rbx
  403600:	call   QWORD PTR [rip+0x18ed6]        # 0x41c4dc
  403606:	cmp    eax,0xffffffff
  403609:	je     0x40393d
  40360f:	movzx  edx,WORD PTR [rsp+0x68]
  403614:	mov    eax,DWORD PTR [rsp+0x60]
  403618:	mov    DWORD PTR [rsp+0x30],eax
  40361c:	movzx  eax,WORD PTR [rsp+0x64]
  403621:	mov    WORD PTR [rsp+0x38],dx
  403626:	movzx  edx,WORD PTR [rsp+0x6a]
  40362b:	mov    WORD PTR [rsp+0x34],ax
  403630:	movzx  eax,WORD PTR [rsp+0x66]
  403635:	mov    WORD PTR [rsp+0x3a],dx
  40363a:	movzx  edx,WORD PTR [rsp+0x6c]
  40363f:	test   ah,0x40
  403642:	mov    WORD PTR [rsp+0x36],ax
  403647:	mov    WORD PTR [rsp+0x3c],dx
  40364c:	mov    edx,DWORD PTR [rsp+0x70]
  403650:	mov    DWORD PTR [rsp+0x40],edx
  403654:	mov    rdx,QWORD PTR [rsp+0x78]
  403659:	mov    DWORD PTR [rsp+0x44],edx
  40365d:	mov    rdx,QWORD PTR [rsp+0x80]
  403665:	mov    QWORD PTR [rsp+0x48],rdx
  40366a:	mov    rdx,QWORD PTR [rsp+0x88]
  403672:	mov    QWORD PTR [rsp+0x50],rdx
  403677:	mov    rdx,QWORD PTR [rsp+0x90]
  40367f:	mov    QWORD PTR [rsp+0x58],rdx
  403684:	jne    0x403860
  40368a:	mov    eax,DWORD PTR [rip+0x173b0]        # 0x41aa40
  403690:	cmp    eax,0x1
  403693:	je     0x403775
  403699:	jl     0x4038a0
  40369f:	cmp    eax,0x3
  4036a2:	jg     0x4038a0
  4036a8:	lea    rdx,[rip+0x1133e]        # 0x4149ed
  4036af:	mov    rcx,rbx
  4036b2:	call   0x4112b8
  4036b7:	test   rax,rax
  4036ba:	mov    rsi,rax
  4036bd:	je     0x403954
  4036c3:	mov    edx,DWORD PTR [rip+0x17c07]        # 0x41b2d0
  4036c9:	test   edx,edx
  4036cb:	jle    0x4036f9
  4036cd:	mov    rdi,QWORD PTR [rip+0x18cb0]        # 0x41c384
  4036d4:	call   rdi
  4036d6:	lea    rdx,[rip+0x12161]        # 0x41583e
  4036dd:	lea    rcx,[rax+0x60]
  4036e1:	mov    r8,rbx
  4036e4:	call   0x4112b0
  4036e9:	call   0x402b40
  4036ee:	call   rdi
  4036f0:	lea    rcx,[rax+0x60]
  4036f4:	call   0x4112c8
  4036f9:	mov    rcx,rsi
  4036fc:	mov    QWORD PTR [rip+0x17be1],0x0        # 0x41b2e8
  403707:	call   0x402010
  40370c:	test   al,al
  40370e:	je     0x4038b0
  403714:	mov    eax,DWORD PTR [rip+0x17bb6]        # 0x41b2d0
  40371a:	test   eax,eax
  40371c:	jle    0x40382b
  403722:	call   QWORD PTR [rip+0x18c5c]        # 0x41c384
  403728:	lea    rcx,[rip+0x12196]        # 0x4158c5
  40372f:	lea    r9,[rax+0x60]
  403733:	mov    r8d,0x3
  403739:	mov    edx,0x1
  40373e:	call   0x411290
  403743:	jmp    0x40382b
  403748:	nop    DWORD PTR [rax+rax*1+0x0]
  403750:	lea    rbx,[rip+0x17ba9]        # 0x41b300
  403757:	lea    rdx,[rip+0x11ed4]        # 0x415632
  40375e:	mov    rcx,rbx
  403761:	call   0x402890
  403766:	mov    eax,DWORD PTR [rip+0x172d4]        # 0x41aa40
  40376c:	cmp    eax,0x1
  40376f:	jne    0x403598
  403775:	mov    rsi,QWORD PTR [rip+0x18c08]        # 0x41c384
  40377c:	call   rsi
  40377e:	mov    rcx,rax
  403781:	call   0x4111e8
  403786:	mov    ecx,eax
  403788:	call   0x4111f0
  40378d:	test   eax,eax
  40378f:	je     0x403894
  403795:	mov    rbx,QWORD PTR [rip+0x17b3c]        # 0x41b2d8
  40379c:	call   rsi
  40379e:	lea    rdx,[rip+0x11fd3]        # 0x415778
  4037a5:	lea    rcx,[rax+0x60]
  4037a9:	mov    r8,rbx
  4037ac:	call   0x4112b0
  4037b1:	mov    rbx,QWORD PTR [rip+0x17b20]        # 0x41b2d8
  4037b8:	call   rsi
  4037ba:	lea    rdx,[rip+0x11fef]        # 0x4157b0
  4037c1:	lea    rcx,[rax+0x60]
  4037c5:	mov    r8,rbx
  4037c8:	mov    r9,rbx
  4037cb:	call   0x4112b0
  4037d0:	mov    r8d,DWORD PTR [rip+0x18375]        # 0x41bb4c
  4037d7:	test   r8d,r8d
  4037da:	jg     0x40382b
  4037dc:	nop    DWORD PTR [rax+0x0]
  4037e0:	mov    DWORD PTR [rip+0x18362],0x1        # 0x41bb4c
  4037ea:	add    rsp,0xa0
  4037f1:	pop    rbx
  4037f2:	pop    rsi
  4037f3:	pop    rdi
  4037f4:	ret    
  4037f5:	mov    rdx,rbx
  4037f8:	lea    rbx,[rip+0x17b01]        # 0x41b300
  4037ff:	mov    rcx,rbx
  403802:	call   0x402890
  403807:	mov    eax,DWORD PTR [rip+0x17233]        # 0x41aa40
  40380d:	jmp    0x40376c
  403812:	cmp    BYTE PTR [rip+0x17ef7],0x0        # 0x41b710
  403819:	jne    0x4038c2
  40381f:	mov    r11d,DWORD PTR [rip+0x18326]        # 0x41bb4c
  403826:	test   r11d,r11d
  403829:	jle    0x4037e0
  40382b:	add    rsp,0xa0
  403832:	pop    rbx
  403833:	pop    rsi
  403834:	pop    rdi
  403835:	ret    
  403836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403840:	cmp    DWORD PTR [rip+0x171f9],0x1        # 0x41aa40
  403847:	je     0x40355d
  40384d:	lea    rcx,[rip+0x12027]        # 0x41587b
  403854:	call   0x401aa0
  403859:	nop    DWORD PTR [rax+0x0]
  403860:	mov    rsi,QWORD PTR [rip+0x17a71]        # 0x41b2d8
  403867:	call   QWORD PTR [rip+0x18b17]        # 0x41c384
  40386d:	lea    rdx,[rip+0x11e24]        # 0x415698
  403874:	lea    rcx,[rax+0x60]
  403878:	mov    r9,rbx
  40387b:	mov    r8,rsi
  40387e:	call   0x4112b0
  403883:	mov    r9d,DWORD PTR [rip+0x182c2]        # 0x41bb4c
  40388a:	test   r9d,r9d
  40388d:	jg     0x40382b
  40388f:	jmp    0x4037e0
  403894:	call   rsi
  403896:	mov    rsi,rax
  403899:	jmp    0x4036c3
  40389e:	xchg   ax,ax
  4038a0:	lea    rcx,[rip+0x1200b]        # 0x4158b2
  4038a7:	call   0x401aa0
  4038ac:	nop    DWORD PTR [rax+0x0]
  4038b0:	mov    BYTE PTR [rip+0x175d9],0x1        # 0x41ae90
  4038b7:	add    rsp,0xa0
  4038be:	pop    rbx
  4038bf:	pop    rsi
  4038c0:	pop    rdi
  4038c1:	ret    
  4038c2:	mov    rsi,QWORD PTR [rip+0x17a0f]        # 0x41b2d8
  4038c9:	call   QWORD PTR [rip+0x18ab5]        # 0x41c384
  4038cf:	lea    rdx,[rip+0x11d72]        # 0x415648
  4038d6:	lea    rcx,[rax+0x60]
  4038da:	mov    r9,rbx
  4038dd:	mov    r8,rsi
  4038e0:	call   0x4112b0
  4038e5:	jmp    0x40381f
  4038ea:	nop    WORD PTR [rax+rax*1+0x0]
  4038f0:	call   QWORD PTR [rip+0x18ac6]        # 0x41c3bc
  4038f6:	mov    ecx,DWORD PTR [rax]
  4038f8:	call   0x411238
  4038fd:	mov    rsi,QWORD PTR [rip+0x179d4]        # 0x41b2d8
  403904:	mov    rdi,rax
  403907:	call   QWORD PTR [rip+0x18a77]        # 0x41c384
  40390d:	lea    rdx,[rip+0x11f80]        # 0x415894
  403914:	lea    rcx,[rax+0x60]
  403918:	mov    QWORD PTR [rsp+0x20],rdi
  40391d:	mov    r9,rbx
  403920:	mov    r8,rsi
  403923:	call   0x4112b0
  403928:	mov    r10d,DWORD PTR [rip+0x1821d]        # 0x41bb4c
  40392f:	test   r10d,r10d
  403932:	jg     0x40382b
  403938:	jmp    0x4037e0
  40393d:	lea    rdx,[rsp+0x30]
  403942:	mov    ecx,0x6
  403947:	xor    eax,eax
  403949:	mov    rdi,rdx
  40394c:	rep stos QWORD PTR es:[rdi],rax
  40394f:	jmp    0x40368a
  403954:	call   QWORD PTR [rip+0x18a62]        # 0x41c3bc
  40395a:	mov    ecx,DWORD PTR [rax]
  40395c:	call   0x411238
  403961:	mov    rsi,QWORD PTR [rip+0x17970]        # 0x41b2d8
  403968:	mov    rdi,rax
  40396b:	call   QWORD PTR [rip+0x18a13]        # 0x41c384
  403971:	lea    rdx,[rip+0x11e60]        # 0x4157d8
  403978:	lea    rcx,[rax+0x60]
  40397c:	mov    QWORD PTR [rsp+0x20],rdi
  403981:	mov    r9,rbx
  403984:	mov    r8,rsi
  403987:	call   0x4112b0
  40398c:	mov    ecx,DWORD PTR [rip+0x181ba]        # 0x41bb4c
  403992:	test   ecx,ecx
  403994:	jg     0x40382b
  40399a:	jmp    0x4037e0
  40399f:	nop
  4039a0:	push   rbp
  4039a1:	push   rdi
  4039a2:	push   rsi
  4039a3:	push   rbx
  4039a4:	sub    rsp,0xa8
  4039ab:	mov    BYTE PTR [rip+0x174d8],0x0        # 0x41ae8a
  4039b2:	test   rcx,rcx
  4039b5:	mov    rbx,rcx
  4039b8:	je     0x403b50
  4039be:	mov    eax,DWORD PTR [rip+0x1707c]        # 0x41aa40
  4039c4:	cmp    eax,0x2
  4039c7:	je     0x403ba0
  4039cd:	cmp    eax,0x3
  4039d0:	je     0x403ab0
  4039d6:	cmp    eax,0x1
  4039d9:	lea    rsi,[rip+0x17920]        # 0x41b300
  4039e0:	je     0x403b5d
  4039e6:	movzx  eax,BYTE PTR [rip+0x17913]        # 0x41b300
  4039ed:	test   al,al
  4039ef:	je     0x403a2b
  4039f1:	cmp    al,0x2a
  4039f3:	je     0x403b20
  4039f9:	cmp    al,0x3f
  4039fb:	je     0x403b20
  403a01:	mov    rdx,rsi
  403a04:	jmp    0x403a20
  403a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a10:	cmp    al,0x2a
  403a12:	je     0x403b20
  403a18:	cmp    al,0x3f
  403a1a:	je     0x403b20
  403a20:	add    rdx,0x1
  403a24:	movzx  eax,BYTE PTR [rdx]
  403a27:	test   al,al
  403a29:	jne    0x403a10
  403a2b:	mov    rcx,rsi
  403a2e:	call   0x4019d0
  403a33:	test   al,al
  403a35:	je     0x403e50
  403a3b:	lea    rbx,[rip+0xf5fe]        # 0x413040
  403a42:	lea    rbp,[rip+0xf617]        # 0x413060
  403a49:	mov    rdi,QWORD PTR [rbx]
  403a4c:	mov    rcx,rsi
  403a4f:	mov    rdx,rdi
  403a52:	call   0x401600
  403a57:	test   al,al
  403a59:	jne    0x403ea0
  403a5f:	add    rbx,0x8
  403a63:	cmp    rbx,rbp
  403a66:	jne    0x403a49
  403a68:	mov    eax,DWORD PTR [rip+0x16fd2]        # 0x41aa40
  403a6e:	lea    edx,[rax-0x2]
  403a71:	cmp    edx,0x1
  403a74:	jbe    0x403f10
  403a7a:	cmp    eax,0x2
  403a7d:	je     0x403d80
  403a83:	cmp    eax,0x3
  403a86:	lea    rbx,[rip+0x17433]        # 0x41aec0
  403a8d:	je     0x403ba5
  403a93:	cmp    eax,0x1
  403a96:	je     0x403dd0
  403a9c:	lea    rcx,[rip+0x11e9f]        # 0x415942
  403aa3:	call   0x401aa0
  403aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  403ab0:	lea    rsi,[rip+0x17849]        # 0x41b300
  403ab7:	mov    rdx,rcx
  403aba:	mov    rcx,rsi
  403abd:	call   0x402890
  403ac2:	mov    rdx,rbx
  403ac5:	lea    rbx,[rip+0x173f4]        # 0x41aec0
  403acc:	mov    rcx,rbx
  403acf:	call   0x402890
  403ad4:	mov    edx,DWORD PTR [rbx]
  403ad6:	add    rbx,0x4
  403ada:	lea    eax,[rdx-0x1010101]
  403ae0:	not    edx
  403ae2:	and    eax,edx
  403ae4:	and    eax,0x80808080
  403ae9:	je     0x403ad4
  403aeb:	mov    edx,eax
  403aed:	shr    edx,0x10
  403af0:	test   eax,0x8080
  403af5:	cmove  eax,edx
  403af8:	lea    rdx,[rbx+0x2]
  403afc:	cmove  rbx,rdx
  403b00:	add    al,al
  403b02:	mov    eax,DWORD PTR [rip+0x16f38]        # 0x41aa40
  403b08:	sbb    rbx,0x3
  403b0c:	mov    DWORD PTR [rbx],0x327a622e
  403b12:	mov    BYTE PTR [rbx+0x4],0x0
  403b16:	jmp    0x403b8f
  403b18:	nop    DWORD PTR [rax+rax*1+0x0]
  403b20:	cmp    BYTE PTR [rip+0x17be9],0x0        # 0x41b710
  403b27:	jne    0x403d50
  403b2d:	mov    esi,DWORD PTR [rip+0x18019]        # 0x41bb4c
  403b33:	test   esi,esi
  403b35:	jle    0x403d30
  403b3b:	add    rsp,0xa8
  403b42:	pop    rbx
  403b43:	pop    rsi
  403b44:	pop    rdi
  403b45:	pop    rbp
  403b46:	ret    
  403b47:	nop    WORD PTR [rax+rax*1+0x0]
  403b50:	cmp    DWORD PTR [rip+0x16ee9],0x1        # 0x41aa40
  403b57:	jne    0x4041a4
  403b5d:	lea    rdx,[rip+0x11ace]        # 0x415632
  403b64:	lea    rsi,[rip+0x17795]        # 0x41b300
  403b6b:	lea    rbx,[rip+0x1734e]        # 0x41aec0
  403b72:	mov    rcx,rsi
  403b75:	call   0x402890
  403b7a:	lea    rdx,[rip+0x11ab9]        # 0x41563a
  403b81:	mov    rcx,rbx
  403b84:	call   0x402890
  403b89:	mov    eax,DWORD PTR [rip+0x16eb1]        # 0x41aa40
  403b8f:	cmp    eax,0x1
  403b92:	jne    0x4039e6
  403b98:	jmp    0x403a3b
  403b9d:	nop    DWORD PTR [rax]
  403ba0:	mov    rdx,rcx
  403ba3:	jmp    0x403b64
  403ba5:	lea    rdx,[rip+0x10e41]        # 0x4149ed
  403bac:	mov    rcx,rsi
  403baf:	call   0x4112b8
  403bb4:	lea    rdx,[rip+0x11c3f]        # 0x4157fa
  403bbb:	mov    rcx,rbx
  403bbe:	mov    rbp,rax
  403bc1:	call   0x4112b8
  403bc6:	test   rax,rax
  403bc9:	mov    rdi,rax
  403bcc:	je     0x4040c4
  403bd2:	test   rbp,rbp
  403bd5:	je     0x40410a
  403bdb:	mov    eax,DWORD PTR [rip+0x176ef]        # 0x41b2d0
  403be1:	test   eax,eax
  403be3:	jle    0x403c11
  403be5:	mov    rbx,QWORD PTR [rip+0x18798]        # 0x41c384
  403bec:	call   rbx
  403bee:	lea    rdx,[rip+0x11c49]        # 0x41583e
  403bf5:	lea    rcx,[rax+0x60]
  403bf9:	mov    r8,rsi
  403bfc:	call   0x4112b0
  403c01:	call   0x402b40
  403c06:	call   rbx
  403c08:	lea    rcx,[rax+0x60]
  403c0c:	call   0x4112c8
  403c11:	mov    rdx,rdi
  403c14:	mov    rcx,rbp
  403c17:	mov    QWORD PTR [rip+0x176ca],rdi        # 0x41b2e8
  403c1e:	mov    BYTE PTR [rip+0x17265],0x1        # 0x41ae8a
  403c25:	call   0x401b40
  403c2a:	cmp    DWORD PTR [rip+0x16e0f],0x3        # 0x41aa40
  403c31:	mov    QWORD PTR [rip+0x176ac],0x0        # 0x41b2e8
  403c3c:	je     0x403ee0
  403c42:	mov    BYTE PTR [rip+0x17241],0x0        # 0x41ae8a
  403c49:	add    rsp,0xa8
  403c50:	pop    rbx
  403c51:	pop    rsi
  403c52:	pop    rdi
  403c53:	pop    rbp
  403c54:	ret    
  403c55:	lea    rdx,[rsp+0x30]
  403c5a:	mov    ecx,0x6
  403c5f:	xor    eax,eax
  403c61:	mov    rdi,rdx
  403c64:	rep stos QWORD PTR es:[rdi],rax
  403c67:	mov    eax,DWORD PTR [rip+0x16dd3]        # 0x41aa40
  403c6d:	cmp    eax,0x3
  403c70:	jne    0x403a7a
  403c76:	cmp    BYTE PTR [rip+0x1720e],0x0        # 0x41ae8b
  403c7d:	je     0x403fda
  403c83:	lea    rbx,[rip+0x17236]        # 0x41aec0
  403c8a:	mov    rcx,rbx
  403c8d:	call   0x4019d0
  403c92:	test   al,al
  403c94:	je     0x403cab
  403c96:	cmp    BYTE PTR [rip+0x171ee],0x0        # 0x41ae8b
  403c9d:	je     0x404081
  403ca3:	mov    rcx,rbx
  403ca6:	call   0x411260
  403cab:	mov    eax,DWORD PTR [rip+0x16d8f]        # 0x41aa40
  403cb1:	cmp    eax,0x3
  403cb4:	jne    0x403a7a
  403cba:	cmp    BYTE PTR [rip+0x171ca],0x0        # 0x41ae8b
  403cc1:	jne    0x403ba5
  403cc7:	call   0x402ab0
  403ccc:	test   eax,eax
  403cce:	mov    ebx,eax
  403cd0:	jle    0x4040b9
  403cd6:	cmp    eax,0x1
  403cd9:	mov    rbp,QWORD PTR [rip+0x175f8]        # 0x41b2d8
  403ce0:	lea    rax,[rip+0x11931]        # 0x415618
  403ce7:	lea    rdi,[rip+0x1192c]        # 0x41561a
  403cee:	cmovne rdi,rax
  403cf2:	call   QWORD PTR [rip+0x1868c]        # 0x41c384
  403cf8:	lea    rdx,[rip+0x11a51]        # 0x415750
  403cff:	lea    rcx,[rax+0x60]
  403d03:	mov    r9,rsi
  403d06:	mov    QWORD PTR [rsp+0x28],rdi
  403d0b:	mov    DWORD PTR [rsp+0x20],ebx
  403d0f:	mov    r8,rbp
  403d12:	call   0x4112b0
  403d17:	mov    r9d,DWORD PTR [rip+0x17e2e]        # 0x41bb4c
  403d1e:	test   r9d,r9d
  403d21:	jg     0x403b3b
  403d27:	nop    WORD PTR [rax+rax*1+0x0]
  403d30:	mov    DWORD PTR [rip+0x17e12],0x1        # 0x41bb4c
  403d3a:	add    rsp,0xa8
  403d41:	pop    rbx
  403d42:	pop    rsi
  403d43:	pop    rdi
  403d44:	pop    rbp
  403d45:	ret    
  403d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d50:	mov    rbx,QWORD PTR [rip+0x17581]        # 0x41b2d8
  403d57:	call   QWORD PTR [rip+0x18627]        # 0x41c384
  403d5d:	lea    rdx,[rip+0x118e4]        # 0x415648
  403d64:	lea    rcx,[rax+0x60]
  403d68:	mov    r9,rsi
  403d6b:	mov    r8,rbx
  403d6e:	call   0x4112b0
  403d73:	jmp    0x403b2d
  403d78:	nop    DWORD PTR [rax+rax*1+0x0]
  403d80:	lea    rdx,[rip+0x10c66]        # 0x4149ed
  403d87:	mov    rcx,rsi
  403d8a:	call   0x4112b8
  403d8f:	mov    rbx,QWORD PTR [rip+0x185ee]        # 0x41c384
  403d96:	mov    rbp,rax
  403d99:	call   rbx
  403d9b:	mov    rdi,rax
  403d9e:	call   rbx
  403da0:	lea    rcx,[rax+0x30]
  403da4:	call   0x4111e8
  403da9:	mov    ecx,eax
  403dab:	call   0x4111f0
  403db0:	test   eax,eax
  403db2:	jne    0x40401c
  403db8:	test   rbp,rbp
  403dbb:	je     0x40415d
  403dc1:	add    rdi,0x30
  403dc5:	jmp    0x403bdb
  403dca:	nop    WORD PTR [rax+rax*1+0x0]
  403dd0:	mov    rbx,QWORD PTR [rip+0x185ad]        # 0x41c384
  403dd7:	call   rbx
  403dd9:	mov    rbp,rax
  403ddc:	call   rbx
  403dde:	mov    rdi,rax
  403de1:	call   rbx
  403de3:	lea    rcx,[rax+0x30]
  403de7:	add    rdi,0x30
  403deb:	call   0x4111e8
  403df0:	mov    ecx,eax
  403df2:	call   0x4111f0
  403df7:	test   eax,eax
  403df9:	je     0x403bdb
  403dff:	mov    rsi,QWORD PTR [rip+0x174d2]        # 0x41b2d8
  403e06:	call   rbx
  403e08:	lea    rdx,[rip+0x11b01]        # 0x415910
  403e0f:	lea    rcx,[rax+0x60]
  403e13:	mov    r8,rsi
  403e16:	call   0x4112b0
  403e1b:	mov    rsi,QWORD PTR [rip+0x174b6]        # 0x41b2d8
  403e22:	call   rbx
  403e24:	lea    rdx,[rip+0x11985]        # 0x4157b0
  403e2b:	lea    rcx,[rax+0x60]
  403e2f:	mov    r8,rsi
  403e32:	mov    r9,rsi
  403e35:	call   0x4112b0
  403e3a:	mov    r8d,DWORD PTR [rip+0x17d0b]        # 0x41bb4c
  403e41:	test   r8d,r8d
  403e44:	jg     0x403b3b
  403e4a:	jmp    0x403d30
  403e4f:	nop
  403e50:	call   QWORD PTR [rip+0x18566]        # 0x41c3bc
  403e56:	mov    ecx,DWORD PTR [rax]
  403e58:	call   0x411238
  403e5d:	mov    rbx,QWORD PTR [rip+0x17474]        # 0x41b2d8
  403e64:	mov    rdi,rax
  403e67:	call   QWORD PTR [rip+0x18517]        # 0x41c384
  403e6d:	lea    rdx,[rip+0x117fc]        # 0x415670
  403e74:	lea    rcx,[rax+0x60]
  403e78:	mov    QWORD PTR [rsp+0x20],rdi
  403e7d:	mov    r8,rbx
  403e80:	mov    r9,rsi
  403e83:	call   0x4112b0
  403e88:	mov    ebx,DWORD PTR [rip+0x17cbe]        # 0x41bb4c
  403e8e:	test   ebx,ebx
  403e90:	jg     0x403b3b
  403e96:	jmp    0x403d30
  403e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  403ea0:	cmp    BYTE PTR [rip+0x17869],0x0        # 0x41b710
  403ea7:	je     0x403b2d
  403ead:	mov    rbx,QWORD PTR [rip+0x17424]        # 0x41b2d8
  403eb4:	call   QWORD PTR [rip+0x184ca]        # 0x41c384
  403eba:	lea    rdx,[rip+0x11a1f]        # 0x4158e0
  403ec1:	lea    rcx,[rax+0x60]
  403ec5:	mov    QWORD PTR [rsp+0x20],rdi
  403eca:	mov    r9,rsi
  403ecd:	mov    r8,rbx
  403ed0:	call   0x4112b0
  403ed5:	jmp    0x403b2d
  403eda:	nop    WORD PTR [rax+rax*1+0x0]
  403ee0:	cmp    BYTE PTR [rip+0x17c63],0x0        # 0x41bb4a
  403ee7:	mov    BYTE PTR [rip+0x16f9c],0x0        # 0x41ae8a
  403eee:	jne    0x403c42
  403ef4:	mov    rcx,rsi
  403ef7:	call   0x411260
  403efc:	test   eax,eax
  403efe:	je     0x403c42
  403f04:	call   0x401af0
  403f09:	nop    DWORD PTR [rax+0x0]
  403f10:	lea    rdx,[rsp+0x60]
  403f15:	mov    rcx,rsi
  403f18:	call   QWORD PTR [rip+0x185be]        # 0x41c4dc
  403f1e:	cmp    eax,0xffffffff
  403f21:	je     0x403c55
  403f27:	movzx  edx,WORD PTR [rsp+0x68]
  403f2c:	mov    eax,DWORD PTR [rsp+0x60]
  403f30:	mov    DWORD PTR [rsp+0x30],eax
  403f34:	movzx  eax,WORD PTR [rsp+0x64]
  403f39:	mov    WORD PTR [rsp+0x38],dx
  403f3e:	movzx  edx,WORD PTR [rsp+0x6a]
  403f43:	mov    WORD PTR [rsp+0x34],ax
  403f48:	movzx  eax,WORD PTR [rsp+0x66]
  403f4d:	mov    WORD PTR [rsp+0x3a],dx
  403f52:	movzx  edx,WORD PTR [rsp+0x6c]
  403f57:	test   ah,0x40
  403f5a:	mov    WORD PTR [rsp+0x36],ax
  403f5f:	mov    WORD PTR [rsp+0x3c],dx
  403f64:	mov    edx,DWORD PTR [rsp+0x70]
  403f68:	mov    DWORD PTR [rsp+0x40],edx
  403f6c:	mov    rdx,QWORD PTR [rsp+0x78]
  403f71:	mov    DWORD PTR [rsp+0x44],edx
  403f75:	mov    rdx,QWORD PTR [rsp+0x80]
  403f7d:	mov    QWORD PTR [rsp+0x48],rdx
  403f82:	mov    rdx,QWORD PTR [rsp+0x88]
  403f8a:	mov    QWORD PTR [rsp+0x50],rdx
  403f8f:	mov    rdx,QWORD PTR [rsp+0x90]
  403f97:	mov    QWORD PTR [rsp+0x58],rdx
  403f9c:	je     0x403c67
  403fa2:	mov    rbx,QWORD PTR [rip+0x1732f]        # 0x41b2d8
  403fa9:	call   QWORD PTR [rip+0x183d5]        # 0x41c384
  403faf:	lea    rdx,[rip+0x116e2]        # 0x415698
  403fb6:	lea    rcx,[rax+0x60]
  403fba:	mov    r9,rsi
  403fbd:	mov    r8,rbx
  403fc0:	call   0x4112b0
  403fc5:	mov    r11d,DWORD PTR [rip+0x17b80]        # 0x41bb4c
  403fcc:	test   r11d,r11d
  403fcf:	jg     0x403b3b
  403fd5:	jmp    0x403d30
  403fda:	call   0x402af0
  403fdf:	test   al,al
  403fe1:	je     0x40406d
  403fe7:	cmp    BYTE PTR [rip+0x17722],0x0        # 0x41b710
  403fee:	je     0x403b2d
  403ff4:	mov    rbx,QWORD PTR [rip+0x172dd]        # 0x41b2d8
  403ffb:	call   QWORD PTR [rip+0x18383]        # 0x41c384
  404001:	lea    rdx,[rip+0x116b8]        # 0x4156c0
  404008:	lea    rcx,[rax+0x60]
  40400c:	mov    r9,rsi
  40400f:	mov    r8,rbx
  404012:	call   0x4112b0
  404017:	jmp    0x403b2d
  40401c:	mov    rsi,QWORD PTR [rip+0x172b5]        # 0x41b2d8
  404023:	call   rbx
  404025:	lea    rdx,[rip+0x118e4]        # 0x415910
  40402c:	lea    rcx,[rax+0x60]
  404030:	mov    r8,rsi
  404033:	call   0x4112b0
  404038:	mov    rsi,QWORD PTR [rip+0x17299]        # 0x41b2d8
  40403f:	call   rbx
  404041:	lea    rdx,[rip+0x11768]        # 0x4157b0
  404048:	lea    rcx,[rax+0x60]
  40404c:	mov    r9,rsi
  40404f:	mov    r8,rsi
  404052:	call   0x4112b0
  404057:	test   rbp,rbp
  40405a:	je     0x403b2d
  404060:	mov    rcx,rbp
  404063:	call   0x4112d8
  404068:	jmp    0x403b2d
  40406d:	mov    eax,DWORD PTR [rip+0x169cd]        # 0x41aa40
  404073:	cmp    eax,0x3
  404076:	jne    0x403a7a
  40407c:	jmp    0x403c83
  404081:	mov    rsi,QWORD PTR [rip+0x17250]        # 0x41b2d8
  404088:	call   QWORD PTR [rip+0x182f6]        # 0x41c384
  40408e:	lea    rdx,[rip+0x11693]        # 0x415728
  404095:	lea    rcx,[rax+0x60]
  404099:	mov    r9,rbx
  40409c:	mov    r8,rsi
  40409f:	call   0x4112b0
  4040a4:	mov    r10d,DWORD PTR [rip+0x17aa1]        # 0x41bb4c
  4040ab:	test   r10d,r10d
  4040ae:	jg     0x403b3b
  4040b4:	jmp    0x403d30
  4040b9:	mov    eax,DWORD PTR [rip+0x16981]        # 0x41aa40
  4040bf:	jmp    0x403a7a
  4040c4:	call   QWORD PTR [rip+0x182f2]        # 0x41c3bc
  4040ca:	mov    ecx,DWORD PTR [rax]
  4040cc:	call   0x411238
  4040d1:	mov    rsi,QWORD PTR [rip+0x17200]        # 0x41b2d8
  4040d8:	mov    rdi,rax
  4040db:	call   QWORD PTR [rip+0x182a3]        # 0x41c384
  4040e1:	lea    rdx,[rip+0x11718]        # 0x415800
  4040e8:	lea    rcx,[rax+0x60]
  4040ec:	mov    QWORD PTR [rsp+0x20],rdi
  4040f1:	mov    r9,rbx
  4040f4:	mov    r8,rsi
  4040f7:	call   0x4112b0
  4040fc:	test   rbp,rbp
  4040ff:	jne    0x404060
  404105:	jmp    0x403b2d
  40410a:	call   QWORD PTR [rip+0x182ac]        # 0x41c3bc
  404110:	mov    ecx,DWORD PTR [rax]
  404112:	call   0x411238
  404117:	mov    rbx,QWORD PTR [rip+0x171ba]        # 0x41b2d8
  40411e:	mov    rbp,rax
  404121:	call   QWORD PTR [rip+0x1825d]        # 0x41c384
  404127:	lea    rdx,[rip+0x11542]        # 0x415670
  40412e:	lea    rcx,[rax+0x60]
  404132:	mov    r9,rsi
  404135:	mov    r8,rbx
  404138:	mov    QWORD PTR [rsp+0x20],rbp
  40413d:	call   0x4112b0
  404142:	mov    rcx,rdi
  404145:	call   0x4112d8
  40414a:	mov    edx,DWORD PTR [rip+0x179fc]        # 0x41bb4c
  404150:	test   edx,edx
  404152:	jg     0x403b3b
  404158:	jmp    0x403d30
  40415d:	call   QWORD PTR [rip+0x18259]        # 0x41c3bc
  404163:	mov    ecx,DWORD PTR [rax]
  404165:	call   0x411238
  40416a:	mov    rdi,QWORD PTR [rip+0x17167]        # 0x41b2d8
  404171:	mov    rbp,rax
  404174:	call   rbx
  404176:	lea    rdx,[rip+0x114f3]        # 0x415670
  40417d:	lea    rcx,[rax+0x60]
  404181:	mov    QWORD PTR [rsp+0x20],rbp
  404186:	mov    r9,rsi
  404189:	mov    r8,rdi
  40418c:	call   0x4112b0
  404191:	mov    ecx,DWORD PTR [rip+0x179b5]        # 0x41bb4c
  404197:	test   ecx,ecx
  404199:	jg     0x403b3b
  40419f:	jmp    0x403d30
  4041a4:	lea    rcx,[rip+0x1171e]        # 0x4158c9
  4041ab:	call   0x401aa0
  4041b0:	nop
  4041b1:	nop
  4041b2:	nop
  4041b3:	nop
  4041b4:	nop
  4041b5:	nop
  4041b6:	nop
  4041b7:	nop
  4041b8:	nop
  4041b9:	nop
  4041ba:	nop
  4041bb:	nop
  4041bc:	nop
  4041bd:	nop
  4041be:	nop
  4041bf:	nop
  4041c0:	push   rbx
  4041c1:	mov    r9d,DWORD PTR [rcx+0x60]
  4041c5:	mov    ebx,DWORD PTR [rcx+0x5c]
  4041c8:	test   r9d,r9d
  4041cb:	jle    0x4041ff
  4041cd:	mov    edx,DWORD PTR [rcx+0x288]
  4041d3:	mov    r10,QWORD PTR [rip+0x12886]        # 0x416a60
  4041da:	movzx  r11d,bl
  4041de:	xor    r8d,r8d
  4041e1:	mov    eax,edx
  4041e3:	add    r8d,0x1
  4041e7:	shl    edx,0x8
  4041ea:	shr    eax,0x18
  4041ed:	xor    eax,r11d
  4041f0:	xor    edx,DWORD PTR [r10+rax*4]
  4041f4:	cmp    r8d,r9d
  4041f7:	jne    0x4041e1
  4041f9:	mov    DWORD PTR [rcx+0x288],edx
  4041ff:	mov    eax,ebx
  404201:	cmp    r9d,0x2
  404205:	mov    BYTE PTR [rcx+rax*1+0x80],0x1
  40420d:	je     0x4042e0
  404213:	cmp    r9d,0x3
  404217:	je     0x4042a5
  40421d:	cmp    r9d,0x1
  404221:	je     0x404294
  404223:	movsxd rax,DWORD PTR [rcx+0x6c]
  404227:	mov    rdx,QWORD PTR [rcx+0x40]
  40422b:	sub    r9d,0x4
  40422f:	movsxd r9,r9d
  404232:	mov    BYTE PTR [rcx+r9*1+0x80],0x1
  40423b:	mov    BYTE PTR [rdx+rax*1],bl
  40423e:	mov    eax,DWORD PTR [rcx+0x6c]
  404241:	mov    rdx,QWORD PTR [rcx+0x40]
  404245:	add    eax,0x1
  404248:	mov    DWORD PTR [rcx+0x6c],eax
  40424b:	cdqe   
  40424d:	mov    BYTE PTR [rdx+rax*1],bl
  404250:	mov    eax,DWORD PTR [rcx+0x6c]
  404253:	mov    rdx,QWORD PTR [rcx+0x40]
  404257:	add    eax,0x1
  40425a:	mov    DWORD PTR [rcx+0x6c],eax
  40425d:	cdqe   
  40425f:	mov    BYTE PTR [rdx+rax*1],bl
  404262:	mov    eax,DWORD PTR [rcx+0x6c]
  404265:	mov    rdx,QWORD PTR [rcx+0x40]
  404269:	add    eax,0x1
  40426c:	mov    DWORD PTR [rcx+0x6c],eax
  40426f:	cdqe   
  404271:	mov    BYTE PTR [rdx+rax*1],bl
  404274:	movzx  ebx,BYTE PTR [rcx+0x60]
  404278:	mov    eax,DWORD PTR [rcx+0x6c]
  40427b:	mov    r8,QWORD PTR [rcx+0x40]
  40427f:	add    eax,0x1
  404282:	lea    edx,[rbx-0x4]
  404285:	mov    DWORD PTR [rcx+0x6c],eax
  404288:	cdqe   
  40428a:	mov    BYTE PTR [r8+rax*1],dl
  40428e:	add    DWORD PTR [rcx+0x6c],0x1
  404292:	pop    rbx
  404293:	ret    
  404294:	movsxd rax,DWORD PTR [rcx+0x6c]
  404298:	mov    rdx,QWORD PTR [rcx+0x40]
  40429c:	mov    BYTE PTR [rdx+rax*1],bl
  40429f:	add    DWORD PTR [rcx+0x6c],0x1
  4042a3:	pop    rbx
  4042a4:	ret    
  4042a5:	movsxd rax,DWORD PTR [rcx+0x6c]
  4042a9:	mov    rdx,QWORD PTR [rcx+0x40]
  4042ad:	mov    BYTE PTR [rdx+rax*1],bl
  4042b0:	mov    eax,DWORD PTR [rcx+0x6c]
  4042b3:	add    eax,0x1
  4042b6:	mov    DWORD PTR [rcx+0x6c],eax
  4042b9:	cdqe   
  4042bb:	mov    rdx,QWORD PTR [rcx+0x40]
  4042bf:	mov    BYTE PTR [rdx+rax*1],bl
  4042c2:	mov    eax,DWORD PTR [rcx+0x6c]
  4042c5:	mov    rdx,QWORD PTR [rcx+0x40]
  4042c9:	add    eax,0x1
  4042cc:	mov    DWORD PTR [rcx+0x6c],eax
  4042cf:	cdqe   
  4042d1:	mov    BYTE PTR [rdx+rax*1],bl
  4042d4:	add    DWORD PTR [rcx+0x6c],0x1
  4042d8:	pop    rbx
  4042d9:	ret    
  4042da:	nop    WORD PTR [rax+rax*1+0x0]
  4042e0:	movsxd rax,DWORD PTR [rcx+0x6c]
  4042e4:	jmp    0x4042bb
  4042e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042f0:	test   rdx,rdx
  4042f3:	je     0x404300
  4042f5:	mov    rcx,rdx
  4042f8:	jmp    0x411298
  4042fd:	nop    DWORD PTR [rax]
  404300:	repz ret 
  404302:	nop    DWORD PTR [rax+0x0]
  404306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404310:	imul   r8d,edx
  404314:	movsxd rcx,r8d
  404317:	jmp    0x411278
  40431c:	nop    DWORD PTR [rax+0x0]
  404320:	push   r14
  404322:	push   r13
  404324:	push   r12
  404326:	push   rbp
  404327:	push   rdi
  404328:	push   rsi
  404329:	push   rbx
  40432a:	sub    rsp,0x20
  40432e:	mov    r12,QWORD PTR [rip+0x1272b]        # 0x416a60
  404335:	mov    eax,DWORD PTR [rcx+0xc]
  404338:	xor    edi,edi
  40433a:	mov    rbx,rcx
  40433d:	xor    ebp,ebp
  40433f:	lea    rsi,[rcx+0x180]
  404346:	mov    r13,r12
  404349:	jmp    0x404359
  40434b:	nop    DWORD PTR [rax+rax*1+0x0]
  404350:	cmp    eax,0x2
  404353:	je     0x404751
  404359:	cmp    eax,0x1
  40435c:	jne    0x404350
  40435e:	xor    ecx,ecx
  404360:	mov    rax,QWORD PTR [rbx]
  404363:	jmp    0x4043a6
  404365:	movsxd rdx,DWORD PTR [rbx+0x78]
  404369:	cmp    edx,DWORD PTR [rbx+0x74]
  40436c:	jge    0x4045b9
  404372:	mov    rcx,QWORD PTR [rbx+0x50]
  404376:	mov    rax,QWORD PTR [rax+0x18]
  40437a:	movzx  edx,BYTE PTR [rcx+rdx*1]
  40437e:	mov    BYTE PTR [rax],dl
  404380:	mov    rax,QWORD PTR [rbx]
  404383:	add    DWORD PTR [rbx+0x78],0x1
  404387:	mov    ecx,DWORD PTR [rax+0x24]
  40438a:	sub    DWORD PTR [rax+0x20],0x1
  40438e:	add    QWORD PTR [rax+0x18],0x1
  404393:	lea    edx,[rcx+0x1]
  404396:	mov    ecx,0x1
  40439b:	test   edx,edx
  40439d:	mov    DWORD PTR [rax+0x24],edx
  4043a0:	je     0x4045f0
  4043a6:	mov    edx,DWORD PTR [rax+0x20]
  4043a9:	test   edx,edx
  4043ab:	jne    0x404365
  4043ad:	or     edi,ecx
  4043af:	mov    eax,DWORD PTR [rbx+0x74]
  4043b2:	cmp    DWORD PTR [rbx+0x78],eax
  4043b5:	jl     0x404611
  4043bb:	mov    edx,DWORD PTR [rbx+0x8]
  4043be:	cmp    edx,0x4
  4043c1:	je     0x4045c7
  4043c7:	lea    rax,[rbx+0x80]
  4043ce:	mov    DWORD PTR [rbx+0x6c],0x0
  4043d5:	mov    DWORD PTR [rbx+0x74],0x0
  4043dc:	mov    DWORD PTR [rbx+0x78],0x0
  4043e3:	mov    DWORD PTR [rbx+0x288],0xffffffff
  4043ed:	nop    DWORD PTR [rax]
  4043f0:	mov    BYTE PTR [rax],0x0
  4043f3:	add    rax,0x1
  4043f7:	cmp    rax,rsi
  4043fa:	jne    0x4043f0
  4043fc:	add    DWORD PTR [rbx+0x294],0x1
  404403:	xor    ecx,ecx
  404405:	cmp    edx,0x3
  404408:	mov    DWORD PTR [rbx+0xc],0x2
  40440f:	je     0x4045f9
  404415:	cmp    edx,0x2
  404418:	je     0x404626
  40441e:	cmp    DWORD PTR [rbx+0x70],ecx
  404421:	jle    0x404553
  404427:	mov    rax,QWORD PTR [rbx]
  40442a:	mov    r11d,DWORD PTR [rax+0x8]
  40442e:	test   r11d,r11d
  404431:	je     0x404553
  404437:	mov    r10d,DWORD PTR [rbx+0x10]
  40443b:	test   r10d,r10d
  40443e:	je     0x40455a
  404444:	mov    rdx,QWORD PTR [rax]
  404447:	jmp    0x4044c2
  404449:	nop    DWORD PTR [rax+0x0]
  404450:	cmp    DWORD PTR [rbx+0x60],0x1
  404454:	je     0x4044e4
  40445a:	cmp    edx,0xff
  404460:	jbe    0x404530
  404466:	mov    ecx,DWORD PTR [rbx+0x6c]
  404469:	mov    DWORD PTR [rbx+0x5c],r14d
  40446d:	mov    DWORD PTR [rbx+0x60],0x1
  404474:	mov    r9d,DWORD PTR [rax+0xc]
  404478:	mov    rdx,QWORD PTR [rax]
  40447b:	sub    DWORD PTR [rax+0x8],0x1
  40447f:	lea    r8d,[r9+0x1]
  404483:	add    rdx,0x1
  404487:	mov    QWORD PTR [rax],rdx
  40448a:	test   r8d,r8d
  40448d:	mov    DWORD PTR [rax+0xc],r8d
  404491:	jne    0x404497
  404493:	add    DWORD PTR [rax+0x10],0x1
  404497:	mov    r10d,DWORD PTR [rbx+0x10]
  40449b:	cmp    DWORD PTR [rbx+0x70],ecx
  40449e:	lea    r8d,[r10-0x1]
  4044a2:	mov    DWORD PTR [rbx+0x10],r8d
  4044a6:	jle    0x404540
  4044ac:	mov    r9d,DWORD PTR [rax+0x8]
  4044b0:	test   r9d,r9d
  4044b3:	je     0x40471d
  4044b9:	test   r8d,r8d
  4044bc:	je     0x404592
  4044c2:	movzx  r14d,BYTE PTR [rdx]
  4044c6:	mov    edx,DWORD PTR [rbx+0x5c]
  4044c9:	cmp    r14d,edx
  4044cc:	jne    0x404450
  4044ce:	mov    edx,DWORD PTR [rbx+0x60]
  4044d1:	cmp    edx,0xff
  4044d7:	je     0x404530
  4044d9:	add    edx,0x1
  4044dc:	mov    ecx,DWORD PTR [rbx+0x6c]
  4044df:	mov    DWORD PTR [rbx+0x60],edx
  4044e2:	jmp    0x404474
  4044e4:	mov    eax,DWORD PTR [rbx+0x288]
  4044ea:	movsxd rcx,ecx
  4044ed:	mov    r8d,eax
  4044f0:	shl    eax,0x8
  4044f3:	shr    r8d,0x18
  4044f7:	xor    r8d,edx
  4044fa:	movzx  r8d,r8b
  4044fe:	xor    eax,DWORD PTR [r12+r8*4]
  404502:	mov    DWORD PTR [rbx+0x288],eax
  404508:	mov    eax,edx
  40450a:	mov    BYTE PTR [rbx+rax*1+0x80],0x1
  404512:	mov    rax,QWORD PTR [rbx+0x40]
  404516:	mov    BYTE PTR [rax+rcx*1],dl
  404519:	mov    eax,DWORD PTR [rbx+0x6c]
  40451c:	mov    DWORD PTR [rbx+0x5c],r14d
  404520:	lea    ecx,[rax+0x1]
  404523:	mov    rax,QWORD PTR [rbx]
  404526:	mov    DWORD PTR [rbx+0x6c],ecx
  404529:	jmp    0x404474
  40452e:	xchg   ax,ax
  404530:	mov    rcx,rbx
  404533:	call   0x4041c0
  404538:	mov    rax,QWORD PTR [rbx]
  40453b:	jmp    0x404466
  404540:	mov    eax,DWORD PTR [rbx+0x8]
  404543:	mov    edx,0x1
  404548:	or     ebp,edx
  40454a:	cmp    eax,0x2
  40454d:	je     0x404707
  404553:	mov    edx,DWORD PTR [rbx+0x10]
  404556:	test   edx,edx
  404558:	jne    0x40459b
  40455a:	cmp    DWORD PTR [rbx+0x5c],0xff
  404561:	jbe    0x40475d
  404567:	xor    edx,edx
  404569:	cmp    DWORD PTR [rbx+0x8],0x4
  40456d:	mov    DWORD PTR [rbx+0x5c],0x100
  404574:	mov    DWORD PTR [rbx+0x60],0x0
  40457b:	mov    rcx,rbx
  40457e:	sete   dl
  404581:	call   0x407040
  404586:	mov    DWORD PTR [rbx+0xc],0x1
  40458d:	jmp    0x40435e
  404592:	or     ebp,0x1
  404595:	cmp    DWORD PTR [rbx+0x8],0x2
  404599:	jne    0x40455a
  40459b:	mov    eax,DWORD PTR [rbx+0x70]
  40459e:	cmp    DWORD PTR [rbx+0x6c],eax
  4045a1:	jge    0x404707
  4045a7:	mov    rax,QWORD PTR [rbx]
  4045aa:	mov    eax,DWORD PTR [rax+0x8]
  4045ad:	test   eax,eax
  4045af:	je     0x404611
  4045b1:	mov    eax,DWORD PTR [rbx+0xc]
  4045b4:	jmp    0x404359
  4045b9:	mov    edx,DWORD PTR [rbx+0x8]
  4045bc:	or     edi,ecx
  4045be:	cmp    edx,0x4
  4045c1:	jne    0x4043c7
  4045c7:	mov    eax,DWORD PTR [rbx+0x10]
  4045ca:	test   eax,eax
  4045cc:	jne    0x4043c7
  4045d2:	cmp    DWORD PTR [rbx+0x5c],0xff
  4045d9:	ja     0x404611
  4045db:	mov    eax,DWORD PTR [rbx+0x60]
  4045de:	test   eax,eax
  4045e0:	jg     0x4043c7
  4045e6:	jmp    0x404611
  4045e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4045f0:	add    DWORD PTR [rax+0x28],0x1
  4045f4:	jmp    0x4043a6
  4045f9:	mov    eax,DWORD PTR [rbx+0x10]
  4045fc:	test   eax,eax
  4045fe:	jne    0x40441e
  404604:	cmp    DWORD PTR [rbx+0x5c],0xff
  40460b:	jbe    0x40476a
  404611:	or     dil,bpl
  404614:	setne  al
  404617:	add    rsp,0x20
  40461b:	pop    rbx
  40461c:	pop    rsi
  40461d:	pop    rdi
  40461e:	pop    rbp
  40461f:	pop    r12
  404621:	pop    r13
  404623:	pop    r14
  404625:	ret    
  404626:	xor    edx,edx
  404628:	jmp    0x404673
  40462a:	nop    WORD PTR [rax+rax*1+0x0]
  404630:	cmp    DWORD PTR [rbx+0x60],0x1
  404634:	je     0x4046af
  404636:	cmp    r8d,0xff
  40463d:	jbe    0x4046f4
  404643:	mov    DWORD PTR [rbx+0x5c],r14d
  404647:	mov    DWORD PTR [rbx+0x60],0x1
  40464e:	mov    ecx,DWORD PTR [rax+0xc]
  404651:	add    rdx,0x1
  404655:	sub    DWORD PTR [rax+0x8],0x1
  404659:	mov    QWORD PTR [rax],rdx
  40465c:	lea    edx,[rcx+0x1]
  40465f:	test   edx,edx
  404661:	mov    DWORD PTR [rax+0xc],edx
  404664:	je     0x404737
  40466a:	movsxd rcx,DWORD PTR [rbx+0x6c]
  40466e:	mov    edx,0x1
  404673:	cmp    DWORD PTR [rbx+0x70],ecx
  404676:	jle    0x40472f
  40467c:	mov    rax,QWORD PTR [rbx]
  40467f:	mov    r14d,DWORD PTR [rax+0x8]
  404683:	test   r14d,r14d
  404686:	je     0x404740
  40468c:	mov    rdx,QWORD PTR [rax]
  40468f:	mov    r8d,DWORD PTR [rbx+0x5c]
  404693:	movzx  r14d,BYTE PTR [rdx]
  404697:	cmp    r14d,r8d
  40469a:	jne    0x404630
  40469c:	mov    ecx,DWORD PTR [rbx+0x60]
  40469f:	cmp    ecx,0xff
  4046a5:	je     0x4046f4
  4046a7:	add    ecx,0x1
  4046aa:	mov    DWORD PTR [rbx+0x60],ecx
  4046ad:	jmp    0x40464e
  4046af:	mov    eax,DWORD PTR [rbx+0x288]
  4046b5:	mov    edx,eax
  4046b7:	shl    eax,0x8
  4046ba:	shr    edx,0x18
  4046bd:	xor    edx,r8d
  4046c0:	movzx  edx,dl
  4046c3:	xor    eax,DWORD PTR [r13+rdx*4+0x0]
  4046c8:	mov    DWORD PTR [rbx+0x288],eax
  4046ce:	mov    eax,r8d
  4046d1:	mov    BYTE PTR [rbx+rax*1+0x80],0x1
  4046d9:	mov    rax,QWORD PTR [rbx+0x40]
  4046dd:	mov    BYTE PTR [rax+rcx*1],r8b
  4046e1:	mov    rax,QWORD PTR [rbx]
  4046e4:	add    DWORD PTR [rbx+0x6c],0x1
  4046e8:	mov    DWORD PTR [rbx+0x5c],r14d
  4046ec:	mov    rdx,QWORD PTR [rax]
  4046ef:	jmp    0x40464e
  4046f4:	mov    rcx,rbx
  4046f7:	call   0x4041c0
  4046fc:	mov    rax,QWORD PTR [rbx]
  4046ff:	mov    rdx,QWORD PTR [rax]
  404702:	jmp    0x404643
  404707:	xor    edx,edx
  404709:	mov    rcx,rbx
  40470c:	call   0x407040
  404711:	mov    DWORD PTR [rbx+0xc],0x1
  404718:	jmp    0x40435e
  40471d:	or     ebp,0x1
  404720:	cmp    DWORD PTR [rbx+0x8],0x2
  404724:	jne    0x404553
  40472a:	jmp    0x4045aa
  40472f:	mov    eax,DWORD PTR [rbx+0x8]
  404732:	jmp    0x404548
  404737:	add    DWORD PTR [rax+0x10],0x1
  40473b:	jmp    0x40466a
  404740:	or     ebp,edx
  404742:	cmp    DWORD PTR [rbx+0x8],0x2
  404746:	jne    0x404553
  40474c:	jmp    0x404611
  404751:	movsxd rcx,DWORD PTR [rbx+0x6c]
  404755:	mov    edx,DWORD PTR [rbx+0x8]
  404758:	jmp    0x404415
  40475d:	mov    rcx,rbx
  404760:	call   0x4041c0
  404765:	jmp    0x404567
  40476a:	mov    eax,DWORD PTR [rbx+0x60]
  40476d:	test   eax,eax
  40476f:	jg     0x40441e
  404775:	jmp    0x404611
  40477a:	nop    WORD PTR [rax+rax*1+0x0]
  404780:	push   rsi
  404781:	push   rbx
  404782:	sub    rsp,0x28
  404786:	mov    rsi,QWORD PTR [rip+0x17bf7]        # 0x41c384
  40478d:	mov    ebx,ecx
  40478f:	call   rsi
  404791:	lea    r9,[rip+0x114e8]        # 0x415c80
  404798:	lea    rcx,[rax+0x60]
  40479c:	lea    rdx,[rip+0x114f5]        # 0x415c98
  4047a3:	mov    r8d,ebx
  4047a6:	call   0x4112b0
  4047ab:	cmp    ebx,0x3ef
  4047b1:	je     0x4047bd
  4047b3:	mov    ecx,0x3
  4047b8:	call   0x4112e0
  4047bd:	call   rsi
  4047bf:	lea    rcx,[rip+0x11692]        # 0x415e58
  4047c6:	lea    r9,[rax+0x60]
  4047ca:	mov    r8d,0x420
  4047d0:	mov    edx,0x1
  4047d5:	call   0x411290
  4047da:	jmp    0x4047b3
  4047dc:	nop    DWORD PTR [rax+0x0]
  4047e0:	push   r13
  4047e2:	push   r12
  4047e4:	push   rbp
  4047e5:	push   rdi
  4047e6:	push   rsi
  4047e7:	push   rbx
  4047e8:	sub    rsp,0x28
  4047ec:	test   rcx,rcx
  4047ef:	mov    rsi,rcx
  4047f2:	mov    r12d,edx
  4047f5:	mov    r13d,r8d
  4047f8:	mov    edi,r9d
  4047fb:	je     0x404a0b
  404801:	lea    eax,[rdx-0x1]
  404804:	cmp    eax,0x8
  404807:	ja     0x404a0b
  40480d:	cmp    r9d,0xfa
  404814:	ja     0x404a0b
  40481a:	test   r9d,r9d
  40481d:	mov    eax,0x1e
  404822:	cmove  edi,eax
  404825:	mov    rax,QWORD PTR [rcx+0x38]
  404829:	test   rax,rax
  40482c:	je     0x4049fb
  404832:	cmp    QWORD PTR [rsi+0x40],0x0
  404837:	je     0x4049eb
  40483d:	mov    rcx,QWORD PTR [rsi+0x48]
  404841:	mov    r8d,0x1
  404847:	mov    edx,0xd9d8
  40484c:	call   rax
  40484e:	test   rax,rax
  404851:	mov    rbx,rax
  404854:	je     0x404a12
  40485a:	imul   ebp,r12d,0x186a0
  404861:	mov    rcx,QWORD PTR [rsi+0x48]
  404865:	mov    r8d,0x1
  40486b:	mov    QWORD PTR [rax],rsi
  40486e:	mov    QWORD PTR [rax+0x18],0x0
  404876:	mov    QWORD PTR [rax+0x20],0x0
  40487e:	mov    QWORD PTR [rax+0x28],0x0
  404886:	lea    edx,[rbp*4+0x0]
  40488d:	call   QWORD PTR [rsi+0x38]
  404890:	lea    edx,[rbp*4+0x88]
  404897:	mov    rcx,QWORD PTR [rsi+0x48]
  40489b:	mov    r8d,0x1
  4048a1:	mov    QWORD PTR [rbx+0x18],rax
  4048a5:	call   QWORD PTR [rsi+0x38]
  4048a8:	mov    edx,0x40004
  4048ad:	mov    QWORD PTR [rbx+0x20],rax
  4048b1:	mov    rcx,QWORD PTR [rsi+0x48]
  4048b5:	mov    r8d,0x1
  4048bb:	call   QWORD PTR [rsi+0x38]
  4048be:	mov    rdx,QWORD PTR [rbx+0x18]
  4048c2:	mov    QWORD PTR [rbx+0x28],rax
  4048c6:	test   rdx,rdx
  4048c9:	je     0x4049af
  4048cf:	test   rax,rax
  4048d2:	mov    rcx,QWORD PTR [rbx+0x20]
  4048d6:	je     0x4049a8
  4048dc:	test   rcx,rcx
  4048df:	je     0x4049a8
  4048e5:	mov    QWORD PTR [rbx+0x40],rcx
  4048e9:	sub    ebp,0x13
  4048ec:	lea    rcx,[rbx+0x80]
  4048f3:	lea    r8,[rbx+0x180]
  4048fa:	mov    DWORD PTR [rbx+0xc],0x2
  404901:	mov    DWORD PTR [rbx+0x8],0x2
  404908:	mov    DWORD PTR [rbx+0x28c],0x0
  404912:	mov    DWORD PTR [rbx+0x298],r12d
  404919:	mov    DWORD PTR [rbx+0x70],ebp
  40491c:	mov    DWORD PTR [rbx+0x290],r13d
  404923:	mov    DWORD PTR [rbx+0x58],edi
  404926:	mov    QWORD PTR [rbx+0x48],rdx
  40492a:	mov    QWORD PTR [rbx+0x50],0x0
  404932:	mov    QWORD PTR [rbx+0x38],rdx
  404936:	mov    QWORD PTR [rsi+0x30],rbx
  40493a:	mov    DWORD PTR [rsi+0xc],0x0
  404941:	mov    DWORD PTR [rsi+0x10],0x0
  404948:	mov    DWORD PTR [rsi+0x24],0x0
  40494f:	mov    DWORD PTR [rsi+0x28],0x0
  404956:	mov    DWORD PTR [rbx+0x5c],0x100
  40495d:	mov    DWORD PTR [rbx+0x60],0x0
  404964:	mov    DWORD PTR [rbx+0x6c],0x0
  40496b:	mov    DWORD PTR [rbx+0x74],0x0
  404972:	mov    DWORD PTR [rbx+0x78],0x0
  404979:	mov    DWORD PTR [rbx+0x288],0xffffffff
  404983:	mov    BYTE PTR [rcx],0x0
  404986:	add    rcx,0x1
  40498a:	cmp    rcx,r8
  40498d:	jne    0x404983
  40498f:	mov    DWORD PTR [rbx+0x294],0x1
  404999:	xor    eax,eax
  40499b:	add    rsp,0x28
  40499f:	pop    rbx
  4049a0:	pop    rsi
  4049a1:	pop    rdi
  4049a2:	pop    rbp
  4049a3:	pop    r12
  4049a5:	pop    r13
  4049a7:	ret    
  4049a8:	mov    rcx,QWORD PTR [rsi+0x48]
  4049ac:	call   QWORD PTR [rsi+0x40]
  4049af:	mov    rdx,QWORD PTR [rbx+0x20]
  4049b3:	test   rdx,rdx
  4049b6:	je     0x4049bf
  4049b8:	mov    rcx,QWORD PTR [rsi+0x48]
  4049bc:	call   QWORD PTR [rsi+0x40]
  4049bf:	mov    rdx,QWORD PTR [rbx+0x28]
  4049c3:	test   rdx,rdx
  4049c6:	je     0x4049cf
  4049c8:	mov    rcx,QWORD PTR [rsi+0x48]
  4049cc:	call   QWORD PTR [rsi+0x40]
  4049cf:	mov    rcx,QWORD PTR [rsi+0x48]
  4049d3:	mov    rdx,rbx
  4049d6:	call   QWORD PTR [rsi+0x40]
  4049d9:	mov    eax,0xfffffffd
  4049de:	add    rsp,0x28
  4049e2:	pop    rbx
  4049e3:	pop    rsi
  4049e4:	pop    rdi
  4049e5:	pop    rbp
  4049e6:	pop    r12
  4049e8:	pop    r13
  4049ea:	ret    
  4049eb:	lea    rdx,[rip+0xfffffffffffff8fe]        # 0x4042f0
  4049f2:	mov    QWORD PTR [rsi+0x40],rdx
  4049f6:	jmp    0x40483d
  4049fb:	lea    rax,[rip+0xfffffffffffff90e]        # 0x404310
  404a02:	mov    QWORD PTR [rcx+0x38],rax
  404a06:	jmp    0x404832
  404a0b:	mov    eax,0xfffffffe
  404a10:	jmp    0x40499b
  404a12:	mov    eax,0xfffffffd
  404a17:	jmp    0x40499b
  404a19:	nop    DWORD PTR [rax+0x0]
  404a20:	push   rsi
  404a21:	push   rbx
  404a22:	sub    rsp,0x28
  404a26:	test   rcx,rcx
  404a29:	je     0x404aa3
  404a2b:	mov    rbx,QWORD PTR [rcx+0x30]
  404a2f:	test   rbx,rbx
  404a32:	je     0x404aa3
  404a34:	mov    rax,QWORD PTR [rbx]
  404a37:	cmp    rax,rcx
  404a3a:	jne    0x404aa3
  404a3c:	mov    esi,DWORD PTR [rbx+0x8]
  404a3f:	cmp    esi,0x2
  404a42:	je     0x404b10
  404a48:	jle    0x404a90
  404a4a:	cmp    esi,0x3
  404a4d:	je     0x404ac0
  404a4f:	cmp    esi,0x4
  404a52:	jne    0x404ab1
  404a54:	cmp    edx,0x2
  404a57:	jne    0x404a95
  404a59:	mov    eax,DWORD PTR [rax+0x8]
  404a5c:	cmp    DWORD PTR [rbx+0x10],eax
  404a5f:	jne    0x404a95
  404a61:	mov    rcx,rbx
  404a64:	call   0x404320
  404a69:	test   al,al
  404a6b:	je     0x404a95
  404a6d:	mov    edx,DWORD PTR [rbx+0x10]
  404a70:	test   edx,edx
  404a72:	je     0x404b44
  404a78:	mov    esi,0x3
  404a7d:	mov    eax,esi
  404a7f:	add    rsp,0x28
  404a83:	pop    rbx
  404a84:	pop    rsi
  404a85:	ret    
  404a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a90:	cmp    esi,0x1
  404a93:	jne    0x404ab1
  404a95:	mov    esi,0xffffffff
  404a9a:	mov    eax,esi
  404a9c:	add    rsp,0x28
  404aa0:	pop    rbx
  404aa1:	pop    rsi
  404aa2:	ret    
  404aa3:	mov    esi,0xfffffffe
  404aa8:	mov    eax,esi
  404aaa:	add    rsp,0x28
  404aae:	pop    rbx
  404aaf:	pop    rsi
  404ab0:	ret    
  404ab1:	xor    esi,esi
  404ab3:	mov    eax,esi
  404ab5:	add    rsp,0x28
  404ab9:	pop    rbx
  404aba:	pop    rsi
  404abb:	ret    
  404abc:	nop    DWORD PTR [rax+0x0]
  404ac0:	cmp    edx,0x1
  404ac3:	jne    0x404a95
  404ac5:	mov    eax,DWORD PTR [rax+0x8]
  404ac8:	cmp    DWORD PTR [rbx+0x10],eax
  404acb:	jne    0x404a95
  404acd:	mov    rcx,rbx
  404ad0:	mov    esi,0x2
  404ad5:	call   0x404320
  404ada:	mov    r8d,DWORD PTR [rbx+0x10]
  404ade:	test   r8d,r8d
  404ae1:	jne    0x404a9a
  404ae3:	cmp    DWORD PTR [rbx+0x5c],0xff
  404aea:	ja     0x404af3
  404aec:	mov    ecx,DWORD PTR [rbx+0x60]
  404aef:	test   ecx,ecx
  404af1:	jg     0x404a9a
  404af3:	mov    eax,DWORD PTR [rbx+0x74]
  404af6:	cmp    DWORD PTR [rbx+0x78],eax
  404af9:	mov    esi,0x2
  404afe:	jl     0x404a9a
  404b00:	mov    DWORD PTR [rbx+0x8],0x2
  404b07:	mov    esi,0x1
  404b0c:	jmp    0x404a9a
  404b0e:	xchg   ax,ax
  404b10:	test   edx,edx
  404b12:	je     0x404b70
  404b14:	cmp    edx,0x1
  404b17:	je     0x404b35
  404b19:	cmp    edx,0x2
  404b1c:	jne    0x404aa3
  404b1e:	mov    edx,DWORD PTR [rax+0x8]
  404b21:	mov    esi,0x4
  404b26:	mov    DWORD PTR [rbx+0x8],0x4
  404b2d:	mov    DWORD PTR [rbx+0x10],edx
  404b30:	jmp    0x404a59
  404b35:	mov    edx,DWORD PTR [rax+0x8]
  404b38:	mov    DWORD PTR [rbx+0x8],0x3
  404b3f:	mov    DWORD PTR [rbx+0x10],edx
  404b42:	jmp    0x404ac5
  404b44:	cmp    DWORD PTR [rbx+0x5c],0xff
  404b4b:	ja     0x404b58
  404b4d:	mov    eax,DWORD PTR [rbx+0x60]
  404b50:	test   eax,eax
  404b52:	jg     0x404a78
  404b58:	mov    eax,DWORD PTR [rbx+0x74]
  404b5b:	cmp    DWORD PTR [rbx+0x78],eax
  404b5e:	jl     0x404a78
  404b64:	mov    DWORD PTR [rbx+0x8],0x1
  404b6b:	jmp    0x404a9a
  404b70:	mov    rcx,rbx
  404b73:	call   0x404320
  404b78:	cmp    al,0x1
  404b7a:	sbb    esi,esi
  404b7c:	and    esi,0xfffffffd
  404b7f:	add    esi,0x1
  404b82:	jmp    0x404a9a
  404b87:	nop    WORD PTR [rax+rax*1+0x0]
  404b90:	push   rsi
  404b91:	push   rbx
  404b92:	sub    rsp,0x28
  404b96:	test   rcx,rcx
  404b99:	je     0x404c00
  404b9b:	mov    rsi,QWORD PTR [rcx+0x30]
  404b9f:	test   rsi,rsi
  404ba2:	je     0x404c00
  404ba4:	mov    rbx,QWORD PTR [rsi]
  404ba7:	mov    eax,0xfffffffe
  404bac:	cmp    rbx,rcx
  404baf:	jne    0x404bf6
  404bb1:	mov    rdx,QWORD PTR [rsi+0x18]
  404bb5:	test   rdx,rdx
  404bb8:	je     0x404bc1
  404bba:	mov    rcx,QWORD PTR [rbx+0x48]
  404bbe:	call   QWORD PTR [rbx+0x40]
  404bc1:	mov    rdx,QWORD PTR [rsi+0x20]
  404bc5:	test   rdx,rdx
  404bc8:	je     0x404bd1
  404bca:	mov    rcx,QWORD PTR [rbx+0x48]
  404bce:	call   QWORD PTR [rbx+0x40]
  404bd1:	mov    rdx,QWORD PTR [rsi+0x28]
  404bd5:	test   rdx,rdx
  404bd8:	je     0x404be1
  404bda:	mov    rcx,QWORD PTR [rbx+0x48]
  404bde:	call   QWORD PTR [rbx+0x40]
  404be1:	mov    rdx,QWORD PTR [rbx+0x30]
  404be5:	mov    rcx,QWORD PTR [rbx+0x48]
  404be9:	call   QWORD PTR [rbx+0x40]
  404bec:	mov    QWORD PTR [rbx+0x30],0x0
  404bf4:	xor    eax,eax
  404bf6:	add    rsp,0x28
  404bfa:	pop    rbx
  404bfb:	pop    rsi
  404bfc:	ret    
  404bfd:	nop    DWORD PTR [rax]
  404c00:	mov    eax,0xfffffffe
  404c05:	jmp    0x404bf6
  404c07:	nop    WORD PTR [rax+rax*1+0x0]
  404c10:	push   rdi
  404c11:	push   rsi
  404c12:	push   rbx
  404c13:	sub    rsp,0x20
  404c17:	mov    eax,0xfffffffe
  404c1c:	test   rcx,rcx
  404c1f:	mov    rbx,rcx
  404c22:	mov    edi,edx
  404c24:	mov    esi,r8d
  404c27:	je     0x404ce5
  404c2d:	cmp    r8d,0x1
  404c31:	ja     0x404ce5
  404c37:	cmp    edx,0x4
  404c3a:	ja     0x404ce5
  404c40:	mov    rax,QWORD PTR [rcx+0x38]
  404c44:	test   rax,rax
  404c47:	je     0x404cf0
  404c4d:	cmp    QWORD PTR [rbx+0x40],0x0
  404c52:	je     0x404d10
  404c58:	mov    rcx,QWORD PTR [rbx+0x48]
  404c5c:	mov    r8d,0x1
  404c62:	mov    edx,0xfa90
  404c67:	call   rax
  404c69:	test   rax,rax
  404c6c:	je     0x404d20
  404c72:	mov    QWORD PTR [rax],rbx
  404c75:	mov    QWORD PTR [rbx+0x30],rax
  404c79:	mov    DWORD PTR [rax+0x8],0xa
  404c80:	mov    DWORD PTR [rax+0x24],0x0
  404c87:	mov    DWORD PTR [rax+0x20],0x0
  404c8e:	mov    DWORD PTR [rax+0xc74],0x0
  404c98:	mov    DWORD PTR [rbx+0xc],0x0
  404c9f:	mov    DWORD PTR [rbx+0x10],0x0
  404ca6:	mov    DWORD PTR [rbx+0x24],0x0
  404cad:	mov    DWORD PTR [rbx+0x28],0x0
  404cb4:	mov    BYTE PTR [rax+0x2c],sil
  404cb8:	mov    QWORD PTR [rax+0xc60],0x0
  404cc3:	mov    QWORD PTR [rax+0xc58],0x0
  404cce:	mov    QWORD PTR [rax+0xc50],0x0
  404cd9:	mov    DWORD PTR [rax+0x30],0x0
  404ce0:	mov    DWORD PTR [rax+0x34],edi
  404ce3:	xor    eax,eax
  404ce5:	add    rsp,0x20
  404ce9:	pop    rbx
  404cea:	pop    rsi
  404ceb:	pop    rdi
  404cec:	ret    
  404ced:	nop    DWORD PTR [rax]
  404cf0:	cmp    QWORD PTR [rbx+0x40],0x0
  404cf5:	lea    rax,[rip+0xfffffffffffff614]        # 0x404310
  404cfc:	mov    QWORD PTR [rcx+0x38],rax
  404d00:	jne    0x404c58
  404d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d10:	lea    rdx,[rip+0xfffffffffffff5d9]        # 0x4042f0
  404d17:	mov    QWORD PTR [rbx+0x40],rdx
  404d1b:	jmp    0x404c58
  404d20:	mov    eax,0xfffffffd
  404d25:	jmp    0x404ce5
  404d27:	nop    WORD PTR [rax+rax*1+0x0]
  404d30:	mov    r9d,0x100
  404d36:	xor    eax,eax
  404d38:	nop    DWORD PTR [rax+rax*1+0x0]
  404d40:	lea    r8d,[rax+r9*1]
  404d44:	sar    r8d,1
  404d47:	movsxd r10,r8d
  404d4a:	cmp    DWORD PTR [rdx+r10*4],ecx
  404d4e:	cmovg  r9d,r8d
  404d52:	cmovle eax,r8d
  404d56:	mov    r8d,r9d
  404d59:	sub    r8d,eax
  404d5c:	cmp    r8d,0x1
  404d60:	jne    0x404d40
  404d62:	ret    
  404d63:	nop    DWORD PTR [rax]
  404d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d70:	push   r15
  404d72:	push   r14
  404d74:	push   r13
  404d76:	push   r12
  404d78:	push   rbp
  404d79:	push   rdi
  404d7a:	push   rsi
  404d7b:	push   rbx
  404d7c:	sub    rsp,0x68
  404d80:	test   rcx,rcx
  404d83:	je     0x405bd5
  404d89:	mov    rbx,QWORD PTR [rcx+0x30]
  404d8d:	mov    eax,0xfffffffe
  404d92:	test   rbx,rbx
  404d95:	je     0x405898
  404d9b:	cmp    QWORD PTR [rbx],rcx
  404d9e:	jne    0x405898
  404da4:	mov    rdi,QWORD PTR [rip+0x175d9]        # 0x41c384
  404dab:	mov    eax,DWORD PTR [rbx+0x8]
  404dae:	mov    QWORD PTR [rsp+0x38],rdi
  404db3:	mov    rdi,QWORD PTR [rip+0x11ca6]        # 0x416a60
  404dba:	cmp    eax,0x1
  404dbd:	mov    QWORD PTR [rsp+0x30],rdi
  404dc2:	mov    QWORD PTR [rsp+0x48],rdi
  404dc7:	je     0x404de7
  404dc9:	nop    DWORD PTR [rax+0x0]
  404dd0:	cmp    eax,0x2
  404dd3:	je     0x404f70
  404dd9:	cmp    eax,0x9
  404ddc:	jg     0x404f4f
  404de2:	cmp    eax,0x1
  404de5:	jne    0x404dd0
  404de7:	mov    eax,0xffffffff
  404dec:	jmp    0x405898
  404df1:	mov    rdx,QWORD PTR [rbx]
  404df4:	movzx  r11d,BYTE PTR [rbx+0xc]
  404df9:	imul   r15d,DWORD PTR [rbx+0x28],0x186a0
  404e01:	mov    esi,DWORD PTR [rbx+0x3c]
  404e04:	mov    eax,DWORD PTR [rbx+0xc70]
  404e0a:	mov    edi,DWORD PTR [rdx+0x20]
  404e0d:	mov    r9,QWORD PTR [rdx+0x18]
  404e11:	mov    edx,DWORD PTR [rbx+0xfa50]
  404e17:	mov    ecx,DWORD PTR [rbx+0x10]
  404e1a:	mov    r12d,DWORD PTR [rbx+0x444]
  404e21:	mov    ebp,DWORD PTR [rbx+0x40]
  404e24:	mov    r8d,edi
  404e27:	mov    DWORD PTR [rsp+0x40],edi
  404e2b:	mov    r13,QWORD PTR [rbx+0xc50]
  404e32:	mov    rdi,QWORD PTR [rsp+0x30]
  404e37:	lea    r14d,[rdx+0x1]
  404e3b:	mov    QWORD PTR [rsp+0x28],rbx
  404e40:	test   ecx,ecx
  404e42:	jle    0x405928
  404e48:	test   r8d,r8d
  404e4b:	je     0x404e88
  404e4d:	cmp    ecx,0x1
  404e50:	movzx  ebx,r11b
  404e54:	je     0x405b61
  404e5a:	mov    r10,rdi
  404e5d:	jmp    0x404e69
  404e5f:	nop
  404e60:	cmp    ecx,0x1
  404e63:	je     0x40590d
  404e69:	mov    edx,eax
  404e6b:	shr    eax,0x18
  404e6e:	mov    BYTE PTR [r9],r11b
  404e71:	xor    eax,ebx
  404e73:	shl    edx,0x8
  404e76:	sub    ecx,0x1
  404e79:	xor    edx,DWORD PTR [rdi+rax*4]
  404e7c:	add    r9,0x1
  404e80:	sub    r8d,0x1
  404e84:	mov    eax,edx
  404e86:	jne    0x404e60
  404e88:	mov    rbx,QWORD PTR [rsp+0x28]
  404e8d:	mov    edi,DWORD PTR [rsp+0x40]
  404e91:	mov    rdx,QWORD PTR [rbx]
  404e94:	mov    r10d,DWORD PTR [rdx+0x24]
  404e98:	add    edi,r10d
  404e9b:	sub    edi,r8d
  404e9e:	cmp    r10d,edi
  404ea1:	mov    DWORD PTR [rdx+0x24],edi
  404ea4:	jbe    0x404eaa
  404ea6:	add    DWORD PTR [rdx+0x28],0x1
  404eaa:	mov    DWORD PTR [rbx+0xc70],eax
  404eb0:	mov    BYTE PTR [rbx+0xc],r11b
  404eb4:	mov    DWORD PTR [rbx+0x10],ecx
  404eb7:	mov    DWORD PTR [rbx+0x444],r12d
  404ebe:	mov    DWORD PTR [rbx+0x40],ebp
  404ec1:	mov    QWORD PTR [rbx+0xc50],r13
  404ec8:	mov    DWORD PTR [rbx+0x3c],esi
  404ecb:	mov    QWORD PTR [rdx+0x18],r9
  404ecf:	mov    DWORD PTR [rdx+0x20],r8d
  404ed3:	mov    eax,DWORD PTR [rbx+0xfa50]
  404ed9:	add    eax,0x1
  404edc:	cmp    DWORD PTR [rbx+0x444],eax
  404ee2:	jne    0x405ad3
  404ee8:	mov    eax,DWORD PTR [rbx+0x10]
  404eeb:	test   eax,eax
  404eed:	jne    0x405ad3
  404ef3:	mov    esi,DWORD PTR [rbx+0xc70]
  404ef9:	mov    eax,DWORD PTR [rbx+0x34]
  404efc:	not    esi
  404efe:	cmp    eax,0x2
  404f01:	mov    DWORD PTR [rbx+0xc70],esi
  404f07:	jg     0x4058a9
  404f0d:	cmp    eax,0x1
  404f10:	jle    0x404f26
  404f12:	call   QWORD PTR [rip+0x1746c]        # 0x41c384
  404f18:	lea    rdx,[rax+0x60]
  404f1c:	mov    ecx,0x5d
  404f21:	call   0x4112a8
  404f26:	mov    eax,DWORD PTR [rbx+0xc70]
  404f2c:	cmp    eax,DWORD PTR [rbx+0xc68]
  404f32:	jne    0x405893
  404f38:	mov    edx,DWORD PTR [rbx+0xc74]
  404f3e:	mov    DWORD PTR [rbx+0x8],0xe
  404f45:	rol    edx,1
  404f47:	xor    eax,edx
  404f49:	mov    DWORD PTR [rbx+0xc74],eax
  404f4f:	mov    rcx,rbx
  404f52:	call   0x40aed0
  404f57:	cmp    eax,0x4
  404f5a:	je     0x405b34
  404f60:	cmp    DWORD PTR [rbx+0x8],0x2
  404f64:	jne    0x405898
  404f6a:	nop    WORD PTR [rax+rax*1+0x0]
  404f70:	cmp    BYTE PTR [rbx+0x2c],0x0
  404f74:	je     0x405300
  404f7a:	cmp    BYTE PTR [rbx+0x14],0x0
  404f7e:	mov    r14,QWORD PTR [rip+0x11adb]        # 0x416a60
  404f85:	mov    r8,QWORD PTR [rbx]
  404f88:	je     0x4051c0
  404f8e:	mov    rax,QWORD PTR [rip+0x11adb]        # 0x416a70
  404f95:	mov    QWORD PTR [rsp+0x50],rax
  404f9a:	mov    QWORD PTR [rsp+0x58],rax
  404f9f:	mov    QWORD PTR [rsp+0x40],rax
  404fa4:	mov    QWORD PTR [rsp+0x28],rax
  404fa9:	nop    DWORD PTR [rax+0x0]
  404fb0:	mov    esi,DWORD PTR [r8+0x20]
  404fb4:	test   esi,esi
  404fb6:	je     0x404ed3
  404fbc:	mov    r11d,DWORD PTR [rbx+0x10]
  404fc0:	test   r11d,r11d
  404fc3:	je     0x405025
  404fc5:	movzx  edx,BYTE PTR [rbx+0xc]
  404fc9:	mov    rax,QWORD PTR [r8+0x18]
  404fcd:	mov    rsi,QWORD PTR [rip+0x11a8c]        # 0x416a60
  404fd4:	mov    BYTE PTR [rax],dl
  404fd6:	mov    eax,DWORD PTR [rbx+0xc70]
  404fdc:	mov    r8,QWORD PTR [rbx]
  404fdf:	mov    edx,eax
  404fe1:	shl    eax,0x8
  404fe4:	shr    edx,0x18
  404fe7:	xor    dl,BYTE PTR [rbx+0xc]
  404fea:	movzx  edx,dl
  404fed:	xor    eax,DWORD PTR [rsi+rdx*4]
  404ff0:	sub    DWORD PTR [rbx+0x10],0x1
  404ff4:	mov    DWORD PTR [rbx+0xc70],eax
  404ffa:	add    QWORD PTR [r8+0x18],0x1
  404fff:	sub    DWORD PTR [r8+0x20],0x1
  405004:	add    DWORD PTR [r8+0x24],0x1
  405009:	jne    0x404fb0
  40500b:	mov    esi,DWORD PTR [r8+0x20]
  40500f:	add    DWORD PTR [r8+0x28],0x1
  405014:	test   esi,esi
  405016:	je     0x404ed3
  40501c:	mov    r11d,DWORD PTR [rbx+0x10]
  405020:	test   r11d,r11d
  405023:	jne    0x404fc5
  405025:	mov    eax,DWORD PTR [rbx+0xfa50]
  40502b:	mov    esi,DWORD PTR [rbx+0x444]
  405031:	lea    r11d,[rax+0x1]
  405035:	cmp    esi,r11d
  405038:	je     0x404ef3
  40503e:	jg     0x405893
  405044:	imul   ebp,DWORD PTR [rbx+0x28],0x186a0
  40504b:	mov    r12d,DWORD PTR [rbx+0x3c]
  40504f:	mov    edi,DWORD PTR [rbx+0x40]
  405052:	mov    DWORD PTR [rbx+0x10],0x1
  405059:	mov    BYTE PTR [rbx+0xc],dil
  40505d:	cmp    r12d,ebp
  405060:	jae    0x405893
  405066:	lea    r10,[rbx+0x448]
  40506d:	mov    ecx,0x100
  405072:	xor    edx,edx
  405074:	lea    eax,[rdx+rcx*1]
  405077:	sar    eax,1
  405079:	movsxd r9,eax
  40507c:	cmp    r12d,DWORD PTR [r10+r9*4]
  405080:	cmovl  ecx,eax
  405083:	cmovge edx,eax
  405086:	mov    eax,ecx
  405088:	sub    eax,edx
  40508a:	cmp    eax,0x1
  40508d:	jne    0x405074
  40508f:	mov    r9,QWORD PTR [rbx+0xc60]
  405096:	mov    ecx,r12d
  405099:	mov    rax,QWORD PTR [rbx+0xc58]
  4050a0:	shr    ecx,1
  4050a2:	movzx  r13d,BYTE PTR [r9+rcx*1]
  4050a7:	lea    ecx,[r12*4+0x0]
  4050af:	movzx  r12d,WORD PTR [rax+r12*2]
  4050b4:	and    ecx,0x4
  4050b7:	shr    r13d,cl
  4050ba:	and    r13d,0xf
  4050be:	shl    r13d,0x10
  4050c2:	or     r12d,r13d
  4050c5:	mov    r13d,DWORD PTR [rbx+0x18]
  4050c9:	mov    DWORD PTR [rbx+0x3c],r12d
  4050cd:	test   r13d,r13d
  4050d0:	jne    0x4050fc
  4050d2:	movsxd r13,DWORD PTR [rbx+0x1c]
  4050d6:	mov    r14,QWORD PTR [rsp+0x28]
  4050db:	mov    rcx,r13
  4050de:	mov    r13d,DWORD PTR [r14+r13*4]
  4050e2:	mov    r14d,0x0
  4050e8:	add    ecx,0x1
  4050eb:	cmp    ecx,0x200
  4050f1:	cmove  ecx,r14d
  4050f5:	mov    DWORD PTR [rbx+0x18],r13d
  4050f9:	mov    DWORD PTR [rbx+0x1c],ecx
  4050fc:	lea    ecx,[rsi+0x1]
  4050ff:	sub    r13d,0x1
  405103:	mov    DWORD PTR [rbx+0x18],r13d
  405107:	cmp    r11d,ecx
  40510a:	mov    DWORD PTR [rbx+0x444],ecx
  405110:	je     0x404fb0
  405116:	cmp    r13d,0x1
  40511a:	sete   cl
  40511d:	xor    edx,ecx
  40511f:	movzx  edx,dl
  405122:	cmp    edi,edx
  405124:	je     0x405450
  40512a:	mov    DWORD PTR [rbx+0x40],edx
  40512d:	jmp    0x404fb0
  405132:	cmp    ebp,r12d
  405135:	mov    DWORD PTR [rbx+0x10],0x2
  40513c:	jbe    0x405893
  405142:	mov    ecx,0x100
  405147:	xor    r13d,r13d
  40514a:	nop    WORD PTR [rax+rax*1+0x0]
  405150:	lea    edx,[r13+rcx*1+0x0]
  405155:	sar    edx,1
  405157:	movsxd r15,edx
  40515a:	cmp    r12d,DWORD PTR [r10+r15*4]
  40515e:	cmovl  ecx,edx
  405161:	cmovge r13d,edx
  405165:	mov    edx,ecx
  405167:	sub    edx,r13d
  40516a:	cmp    edx,0x1
  40516d:	jne    0x405150
  40516f:	mov    edx,r12d
  405172:	lea    ecx,[r12*4+0x0]
  40517a:	movzx  r12d,WORD PTR [rax+r12*2]
  40517f:	shr    edx,1
  405181:	movzx  edx,BYTE PTR [r9+rdx*1]
  405186:	and    ecx,0x4
  405189:	shr    edx,cl
  40518b:	and    edx,0xf
  40518e:	shl    edx,0x10
  405191:	or     r12d,edx
  405194:	lea    edx,[rsi+0x2]
  405197:	mov    DWORD PTR [rbx+0x3c],r12d
  40519b:	cmp    r11d,edx
  40519e:	mov    DWORD PTR [rbx+0x444],edx
  4051a4:	je     0x4051c0
  4051a6:	movzx  r13d,r13b
  4051aa:	cmp    edi,r13d
  4051ad:	je     0x405943
  4051b3:	mov    DWORD PTR [rbx+0x40],r13d
  4051b7:	nop    WORD PTR [rax+rax*1+0x0]
  4051c0:	mov    r10d,DWORD PTR [r8+0x20]
  4051c4:	test   r10d,r10d
  4051c7:	je     0x404ed3
  4051cd:	mov    r9d,DWORD PTR [rbx+0x10]
  4051d1:	test   r9d,r9d
  4051d4:	je     0x405231
  4051d6:	movzx  edx,BYTE PTR [rbx+0xc]
  4051da:	mov    rax,QWORD PTR [r8+0x18]
  4051de:	mov    BYTE PTR [rax],dl
  4051e0:	mov    eax,DWORD PTR [rbx+0xc70]
  4051e6:	mov    r8,QWORD PTR [rbx]
  4051e9:	mov    edx,eax
  4051eb:	shl    eax,0x8
  4051ee:	shr    edx,0x18
  4051f1:	xor    dl,BYTE PTR [rbx+0xc]
  4051f4:	movzx  edx,dl
  4051f7:	xor    eax,DWORD PTR [r14+rdx*4]
  4051fb:	sub    DWORD PTR [rbx+0x10],0x1
  4051ff:	mov    DWORD PTR [rbx+0xc70],eax
  405205:	add    QWORD PTR [r8+0x18],0x1
  40520a:	sub    DWORD PTR [r8+0x20],0x1
  40520f:	add    DWORD PTR [r8+0x24],0x1
  405214:	jne    0x4051c0
  405216:	mov    r10d,DWORD PTR [r8+0x20]
  40521a:	add    DWORD PTR [r8+0x28],0x1
  40521f:	test   r10d,r10d
  405222:	je     0x404ed3
  405228:	mov    r9d,DWORD PTR [rbx+0x10]
  40522c:	test   r9d,r9d
  40522f:	jne    0x4051d6
  405231:	mov    eax,DWORD PTR [rbx+0xfa50]
  405237:	mov    esi,DWORD PTR [rbx+0x444]
  40523d:	lea    r11d,[rax+0x1]
  405241:	cmp    esi,r11d
  405244:	je     0x404ef3
  40524a:	jg     0x405893
  405250:	imul   ebp,DWORD PTR [rbx+0x28],0x186a0
  405257:	mov    r12d,DWORD PTR [rbx+0x3c]
  40525b:	mov    edi,DWORD PTR [rbx+0x40]
  40525e:	mov    DWORD PTR [rbx+0x10],0x1
  405265:	mov    BYTE PTR [rbx+0xc],dil
  405269:	cmp    r12d,ebp
  40526c:	jae    0x405893
  405272:	lea    r10,[rbx+0x448]
  405279:	mov    ecx,0x100
  40527e:	xor    edx,edx
  405280:	lea    eax,[rdx+rcx*1]
  405283:	sar    eax,1
  405285:	movsxd r9,eax
  405288:	cmp    r12d,DWORD PTR [r10+r9*4]
  40528c:	cmovl  ecx,eax
  40528f:	cmovge edx,eax
  405292:	mov    eax,ecx
  405294:	sub    eax,edx
  405296:	cmp    eax,0x1
  405299:	jne    0x405280
  40529b:	mov    r9,QWORD PTR [rbx+0xc60]
  4052a2:	mov    ecx,r12d
  4052a5:	mov    rax,QWORD PTR [rbx+0xc58]
  4052ac:	shr    ecx,1
  4052ae:	movzx  r13d,BYTE PTR [r9+rcx*1]
  4052b3:	lea    ecx,[r12*4+0x0]
  4052bb:	movzx  r12d,WORD PTR [rax+r12*2]
  4052c0:	and    ecx,0x4
  4052c3:	shr    r13d,cl
  4052c6:	lea    ecx,[rsi+0x1]
  4052c9:	and    r13d,0xf
  4052cd:	shl    r13d,0x10
  4052d1:	mov    DWORD PTR [rbx+0x444],ecx
  4052d7:	or     r12d,r13d
  4052da:	cmp    r11d,ecx
  4052dd:	mov    DWORD PTR [rbx+0x3c],r12d
  4052e1:	je     0x4051c0
  4052e7:	movzx  edx,dl
  4052ea:	cmp    edi,edx
  4052ec:	je     0x405132
  4052f2:	mov    DWORD PTR [rbx+0x40],edx
  4052f5:	jmp    0x4051c0
  4052fa:	nop    WORD PTR [rax+rax*1+0x0]
  405300:	cmp    BYTE PTR [rbx+0x14],0x0
  405304:	je     0x404df1
  40530a:	mov    rdi,QWORD PTR [rip+0x1175f]        # 0x416a70
  405311:	mov    rax,QWORD PTR [rbx]
  405314:	xor    r13d,r13d
  405317:	mov    r12,QWORD PTR [rip+0x11742]        # 0x416a60
  40531e:	mov    QWORD PTR [rsp+0x28],rdi
  405323:	mov    r15,rdi
  405326:	mov    r14,rdi
  405329:	nop    DWORD PTR [rax+0x0]
  405330:	mov    ecx,DWORD PTR [rax+0x20]
  405333:	test   ecx,ecx
  405335:	je     0x404ed3
  40533b:	mov    edx,DWORD PTR [rbx+0x10]
  40533e:	test   edx,edx
  405340:	je     0x40539d
  405342:	movzx  edx,BYTE PTR [rbx+0xc]
  405346:	mov    rax,QWORD PTR [rax+0x18]
  40534a:	mov    BYTE PTR [rax],dl
  40534c:	mov    eax,DWORD PTR [rbx+0xc70]
  405352:	mov    edx,eax
  405354:	shl    eax,0x8
  405357:	shr    edx,0x18
  40535a:	xor    dl,BYTE PTR [rbx+0xc]
  40535d:	movzx  edx,dl
  405360:	xor    eax,DWORD PTR [r12+rdx*4]
  405364:	sub    DWORD PTR [rbx+0x10],0x1
  405368:	mov    DWORD PTR [rbx+0xc70],eax
  40536e:	mov    rax,QWORD PTR [rbx]
  405371:	mov    edi,DWORD PTR [rax+0x24]
  405374:	add    QWORD PTR [rax+0x18],0x1
  405379:	sub    DWORD PTR [rax+0x20],0x1
  40537d:	lea    edx,[rdi+0x1]
  405380:	test   edx,edx
  405382:	mov    DWORD PTR [rax+0x24],edx
  405385:	jne    0x405330
  405387:	mov    ecx,DWORD PTR [rax+0x20]
  40538a:	add    DWORD PTR [rax+0x28],0x1
  40538e:	test   ecx,ecx
  405390:	je     0x404ed3
  405396:	mov    edx,DWORD PTR [rbx+0x10]
  405399:	test   edx,edx
  40539b:	jne    0x405342
  40539d:	mov    esi,DWORD PTR [rbx+0xfa50]
  4053a3:	mov    r9d,DWORD PTR [rbx+0x444]
  4053aa:	lea    r8d,[rsi+0x1]
  4053ae:	cmp    r9d,r8d
  4053b1:	je     0x404ef3
  4053b7:	jg     0x405893
  4053bd:	imul   esi,DWORD PTR [rbx+0x28],0x186a0
  4053c4:	mov    edx,DWORD PTR [rbx+0x3c]
  4053c7:	mov    r10d,DWORD PTR [rbx+0x40]
  4053cb:	mov    DWORD PTR [rbx+0x10],0x1
  4053d2:	mov    BYTE PTR [rbx+0xc],r10b
  4053d6:	cmp    edx,esi
  4053d8:	jae    0x405893
  4053de:	mov    rdi,QWORD PTR [rbx+0xc50]
  4053e5:	mov    ecx,DWORD PTR [rdi+rdx*4]
  4053e8:	mov    edx,DWORD PTR [rbx+0x18]
  4053eb:	mov    r11d,ecx
  4053ee:	shr    r11d,0x8
  4053f2:	test   edx,edx
  4053f4:	mov    DWORD PTR [rbx+0x3c],r11d
  4053f8:	jne    0x405418
  4053fa:	movsxd rdx,DWORD PTR [rbx+0x1c]
  4053fe:	mov    rbp,rdx
  405401:	mov    edx,DWORD PTR [r14+rdx*4]
  405405:	add    ebp,0x1
  405408:	cmp    ebp,0x200
  40540e:	cmove  ebp,r13d
  405412:	mov    DWORD PTR [rbx+0x18],edx
  405415:	mov    DWORD PTR [rbx+0x1c],ebp
  405418:	lea    ebp,[r9+0x1]
  40541c:	sub    edx,0x1
  40541f:	mov    DWORD PTR [rbx+0x18],edx
  405422:	cmp    r8d,ebp
  405425:	mov    DWORD PTR [rbx+0x444],ebp
  40542b:	je     0x405330
  405431:	cmp    edx,0x1
  405434:	sete   bpl
  405438:	xor    ecx,ebp
  40543a:	movzx  ecx,cl
  40543d:	cmp    r10d,ecx
  405440:	je     0x405701
  405446:	mov    DWORD PTR [rbx+0x40],ecx
  405449:	jmp    0x405330
  40544e:	xchg   ax,ax
  405450:	cmp    ebp,r12d
  405453:	mov    DWORD PTR [rbx+0x10],0x2
  40545a:	jbe    0x405893
  405460:	mov    ecx,0x100
  405465:	xor    r14d,r14d
  405468:	nop    DWORD PTR [rax+rax*1+0x0]
  405470:	lea    edx,[r14+rcx*1]
  405474:	sar    edx,1
  405476:	movsxd r15,edx
  405479:	cmp    r12d,DWORD PTR [r10+r15*4]
  40547d:	cmovl  ecx,edx
  405480:	cmovge r14d,edx
  405484:	mov    edx,ecx
  405486:	sub    edx,r14d
  405489:	cmp    edx,0x1
  40548c:	jne    0x405470
  40548e:	mov    edx,r12d
  405491:	lea    ecx,[r12*4+0x0]
  405499:	movzx  r12d,WORD PTR [rax+r12*2]
  40549e:	shr    edx,1
  4054a0:	movzx  edx,BYTE PTR [r9+rdx*1]
  4054a5:	and    ecx,0x4
  4054a8:	shr    edx,cl
  4054aa:	and    edx,0xf
  4054ad:	shl    edx,0x10
  4054b0:	or     r12d,edx
  4054b3:	test   r13d,r13d
  4054b6:	mov    DWORD PTR [rbx+0x3c],r12d
  4054ba:	jne    0x4054e4
  4054bc:	movsxd rcx,DWORD PTR [rbx+0x1c]
  4054c0:	mov    r15,QWORD PTR [rsp+0x40]
  4054c5:	mov    rdx,rcx
  4054c8:	mov    r13d,DWORD PTR [r15+rcx*4]
  4054cc:	mov    ecx,0x0
  4054d1:	add    edx,0x1
  4054d4:	cmp    edx,0x200
  4054da:	cmove  edx,ecx
  4054dd:	mov    DWORD PTR [rbx+0x18],r13d
  4054e1:	mov    DWORD PTR [rbx+0x1c],edx
  4054e4:	lea    edx,[rsi+0x2]
  4054e7:	sub    r13d,0x1
  4054eb:	mov    DWORD PTR [rbx+0x18],r13d
  4054ef:	cmp    r11d,edx
  4054f2:	mov    DWORD PTR [rbx+0x444],edx
  4054f8:	je     0x404fb0
  4054fe:	cmp    r13d,0x1
  405502:	sete   dl
  405505:	xor    r14d,edx
  405508:	movzx  edx,r14b
  40550c:	cmp    edi,edx
  40550e:	jne    0x40512a
  405514:	cmp    ebp,r12d
  405517:	mov    DWORD PTR [rbx+0x10],0x3
  40551e:	jbe    0x405893
  405524:	mov    ecx,0x100
  405529:	xor    r14d,r14d
  40552c:	nop    DWORD PTR [rax+0x0]
  405530:	lea    edx,[r14+rcx*1]
  405534:	sar    edx,1
  405536:	movsxd r15,edx
  405539:	cmp    r12d,DWORD PTR [r10+r15*4]
  40553d:	cmovl  ecx,edx
  405540:	cmovge r14d,edx
  405544:	mov    edx,ecx
  405546:	sub    edx,r14d
  405549:	cmp    edx,0x1
  40554c:	jne    0x405530
  40554e:	mov    edx,r12d
  405551:	lea    ecx,[r12*4+0x0]
  405559:	movzx  r12d,WORD PTR [rax+r12*2]
  40555e:	shr    edx,1
  405560:	movzx  edx,BYTE PTR [r9+rdx*1]
  405565:	and    ecx,0x4
  405568:	shr    edx,cl
  40556a:	and    edx,0xf
  40556d:	shl    edx,0x10
  405570:	or     r12d,edx
  405573:	test   r13d,r13d
  405576:	mov    DWORD PTR [rbx+0x3c],r12d
  40557a:	jne    0x4055a4
  40557c:	movsxd rcx,DWORD PTR [rbx+0x1c]
  405580:	mov    r15,QWORD PTR [rsp+0x58]
  405585:	mov    rdx,rcx
  405588:	mov    r13d,DWORD PTR [r15+rcx*4]
  40558c:	mov    ecx,0x0
  405591:	add    edx,0x1
  405594:	cmp    edx,0x200
  40559a:	cmove  edx,ecx
  40559d:	mov    DWORD PTR [rbx+0x18],r13d
  4055a1:	mov    DWORD PTR [rbx+0x1c],edx
  4055a4:	lea    edx,[rsi+0x3]
  4055a7:	sub    r13d,0x1
  4055ab:	mov    DWORD PTR [rbx+0x18],r13d
  4055af:	cmp    r11d,edx
  4055b2:	mov    DWORD PTR [rbx+0x444],edx
  4055b8:	je     0x404fb0
  4055be:	cmp    r13d,0x1
  4055c2:	sete   dl
  4055c5:	xor    r14d,edx
  4055c8:	movzx  edx,r14b
  4055cc:	cmp    edi,edx
  4055ce:	jne    0x40512a
  4055d4:	cmp    ebp,r12d
  4055d7:	jbe    0x405893
  4055dd:	mov    ecx,0x100
  4055e2:	xor    r11d,r11d
  4055e5:	lea    edx,[r11+rcx*1]
  4055e9:	sar    edx,1
  4055eb:	movsxd rdi,edx
  4055ee:	cmp    r12d,DWORD PTR [r10+rdi*4]
  4055f2:	cmovl  ecx,edx
  4055f5:	cmovge r11d,edx
  4055f9:	mov    edx,ecx
  4055fb:	sub    edx,r11d
  4055fe:	cmp    edx,0x1
  405601:	jne    0x4055e5
  405603:	mov    edx,r12d
  405606:	lea    ecx,[r12*4+0x0]
  40560e:	movzx  edi,WORD PTR [rax+r12*2]
  405613:	shr    edx,1
  405615:	movzx  edx,BYTE PTR [r9+rdx*1]
  40561a:	and    ecx,0x4
  40561d:	shr    edx,cl
  40561f:	and    edx,0xf
  405622:	shl    edx,0x10
  405625:	or     edi,edx
  405627:	test   r13d,r13d
  40562a:	mov    DWORD PTR [rbx+0x3c],edi
  40562d:	je     0x405ada
  405633:	sub    r13d,0x1
  405637:	lea    edx,[rsi+0x4]
  40563a:	cmp    r13d,0x1
  40563e:	mov    DWORD PTR [rbx+0x18],r13d
  405642:	mov    DWORD PTR [rbx+0x444],edx
  405648:	sete   dl
  40564b:	xor    edx,r11d
  40564e:	movzx  edx,dl
  405651:	add    edx,0x4
  405654:	cmp    ebp,edi
  405656:	mov    DWORD PTR [rbx+0x10],edx
  405659:	jbe    0x405893
  40565f:	mov    ecx,0x100
  405664:	xor    r11d,r11d
  405667:	lea    edx,[r11+rcx*1]
  40566b:	sar    edx,1
  40566d:	movsxd rbp,edx
  405670:	cmp    edi,DWORD PTR [r10+rbp*4]
  405674:	cmovl  ecx,edx
  405677:	cmovge r11d,edx
  40567b:	mov    edx,ecx
  40567d:	sub    edx,r11d
  405680:	cmp    edx,0x1
  405683:	jne    0x405667
  405685:	mov    edx,edi
  405687:	mov    DWORD PTR [rbx+0x40],r11d
  40568b:	lea    ecx,[rdi*4+0x0]
  405692:	shr    edx,1
  405694:	movzx  eax,WORD PTR [rax+rdi*2]
  405698:	movzx  edx,BYTE PTR [r9+rdx*1]
  40569d:	and    ecx,0x4
  4056a0:	shr    edx,cl
  4056a2:	and    edx,0xf
  4056a5:	shl    edx,0x10
  4056a8:	or     edx,eax
  4056aa:	test   r13d,r13d
  4056ad:	mov    DWORD PTR [rbx+0x3c],edx
  4056b0:	jne    0x4056db
  4056b2:	movsxd rdx,DWORD PTR [rbx+0x1c]
  4056b6:	mov    rdi,QWORD PTR [rip+0x113b3]        # 0x416a70
  4056bd:	mov    rax,rdx
  4056c0:	mov    r13d,DWORD PTR [rdi+rdx*4]
  4056c4:	mov    edx,0x0
  4056c9:	add    eax,0x1
  4056cc:	cmp    eax,0x200
  4056d1:	cmove  eax,edx
  4056d4:	mov    DWORD PTR [rbx+0x18],r13d
  4056d8:	mov    DWORD PTR [rbx+0x1c],eax
  4056db:	sub    r13d,0x1
  4056df:	xor    eax,eax
  4056e1:	cmp    r13d,0x1
  4056e5:	mov    DWORD PTR [rbx+0x18],r13d
  4056e9:	sete   al
  4056ec:	add    esi,0x5
  4056ef:	xor    r11d,eax
  4056f2:	mov    DWORD PTR [rbx+0x444],esi
  4056f8:	mov    DWORD PTR [rbx+0x40],r11d
  4056fc:	jmp    0x404fb0
  405701:	cmp    esi,r11d
  405704:	mov    DWORD PTR [rbx+0x10],0x2
  40570b:	jbe    0x405893
  405711:	mov    ecx,DWORD PTR [rdi+r11*4]
  405715:	mov    r11d,ecx
  405718:	shr    r11d,0x8
  40571c:	test   edx,edx
  40571e:	mov    DWORD PTR [rbx+0x3c],r11d
  405722:	jne    0x405742
  405724:	movsxd rdx,DWORD PTR [rbx+0x1c]
  405728:	mov    rbp,rdx
  40572b:	mov    edx,DWORD PTR [r15+rdx*4]
  40572f:	add    ebp,0x1
  405732:	cmp    ebp,0x200
  405738:	cmove  ebp,r13d
  40573c:	mov    DWORD PTR [rbx+0x18],edx
  40573f:	mov    DWORD PTR [rbx+0x1c],ebp
  405742:	lea    ebp,[r9+0x2]
  405746:	sub    edx,0x1
  405749:	mov    DWORD PTR [rbx+0x18],edx
  40574c:	cmp    r8d,ebp
  40574f:	mov    DWORD PTR [rbx+0x444],ebp
  405755:	je     0x405330
  40575b:	cmp    edx,0x1
  40575e:	sete   bpl
  405762:	xor    ecx,ebp
  405764:	movzx  ecx,cl
  405767:	cmp    r10d,ecx
  40576a:	jne    0x405446
  405770:	cmp    esi,r11d
  405773:	mov    DWORD PTR [rbx+0x10],0x3
  40577a:	jbe    0x405893
  405780:	mov    ecx,DWORD PTR [rdi+r11*4]
  405784:	mov    r11d,ecx
  405787:	shr    r11d,0x8
  40578b:	test   edx,edx
  40578d:	mov    DWORD PTR [rbx+0x3c],r11d
  405791:	jne    0x4057bb
  405793:	movsxd rdx,DWORD PTR [rbx+0x1c]
  405797:	mov    rbp,QWORD PTR [rsp+0x28]
  40579c:	mov    DWORD PTR [rsp+0x40],edx
  4057a0:	mov    edx,DWORD PTR [rbp+rdx*4+0x0]
  4057a4:	mov    ebp,DWORD PTR [rsp+0x40]
  4057a8:	mov    DWORD PTR [rbx+0x18],edx
  4057ab:	add    ebp,0x1
  4057ae:	cmp    ebp,0x200
  4057b4:	cmove  ebp,r13d
  4057b8:	mov    DWORD PTR [rbx+0x1c],ebp
  4057bb:	lea    ebp,[r9+0x3]
  4057bf:	sub    edx,0x1
  4057c2:	mov    DWORD PTR [rbx+0x18],edx
  4057c5:	cmp    r8d,ebp
  4057c8:	mov    DWORD PTR [rbx+0x444],ebp
  4057ce:	je     0x405330
  4057d4:	cmp    edx,0x1
  4057d7:	sete   r8b
  4057db:	xor    ecx,r8d
  4057de:	movzx  ecx,cl
  4057e1:	cmp    r10d,ecx
  4057e4:	jne    0x405446
  4057ea:	cmp    esi,r11d
  4057ed:	jbe    0x405893
  4057f3:	mov    ecx,DWORD PTR [rdi+r11*4]
  4057f7:	mov    r8d,ecx
  4057fa:	shr    r8d,0x8
  4057fe:	test   edx,edx
  405800:	mov    DWORD PTR [rbx+0x3c],r8d
  405804:	je     0x405b07
  40580a:	sub    edx,0x1
  40580d:	lea    r10d,[r9+0x4]
  405811:	cmp    edx,0x1
  405814:	mov    DWORD PTR [rbx+0x18],edx
  405817:	mov    DWORD PTR [rbx+0x444],r10d
  40581e:	sete   r10b
  405822:	xor    ecx,r10d
  405825:	movzx  ecx,cl
  405828:	add    ecx,0x4
  40582b:	cmp    esi,r8d
  40582e:	mov    DWORD PTR [rbx+0x10],ecx
  405831:	jbe    0x405893
  405833:	mov    ecx,DWORD PTR [rdi+r8*4]
  405837:	movzx  r8d,cl
  40583b:	shr    ecx,0x8
  40583e:	test   edx,edx
  405840:	mov    DWORD PTR [rbx+0x40],r8d
  405844:	mov    DWORD PTR [rbx+0x3c],ecx
  405847:	jne    0x40586d
  405849:	movsxd rdx,DWORD PTR [rbx+0x1c]
  40584d:	mov    rdi,QWORD PTR [rip+0x1121c]        # 0x416a70
  405854:	mov    rcx,rdx
  405857:	mov    edx,DWORD PTR [rdi+rdx*4]
  40585a:	add    ecx,0x1
  40585d:	cmp    ecx,0x200
  405863:	cmove  ecx,r13d
  405867:	mov    DWORD PTR [rbx+0x18],edx
  40586a:	mov    DWORD PTR [rbx+0x1c],ecx
  40586d:	sub    edx,0x1
  405870:	cmp    edx,0x1
  405873:	mov    DWORD PTR [rbx+0x18],edx
  405876:	sete   dl
  405879:	add    r9d,0x5
  40587d:	movzx  edx,dl
  405880:	mov    DWORD PTR [rbx+0x444],r9d
  405887:	xor    r8d,edx
  40588a:	mov    DWORD PTR [rbx+0x40],r8d
  40588e:	jmp    0x405330
  405893:	mov    eax,0xfffffffc
  405898:	add    rsp,0x68
  40589c:	pop    rbx
  40589d:	pop    rsi
  40589e:	pop    rdi
  40589f:	pop    rbp
  4058a0:	pop    r12
  4058a2:	pop    r13
  4058a4:	pop    r14
  4058a6:	pop    r15
  4058a8:	ret    
  4058a9:	mov    edi,DWORD PTR [rbx+0xc68]
  4058af:	mov    rax,QWORD PTR [rsp+0x38]
  4058b4:	call   rax
  4058b6:	lea    rdx,[rip+0x109bc]        # 0x416279
  4058bd:	lea    rcx,[rax+0x60]
  4058c1:	mov    r9d,esi
  4058c4:	mov    r8d,edi
  4058c7:	call   0x4112b0
  4058cc:	mov    eax,DWORD PTR [rbx+0x34]
  4058cf:	jmp    0x404f0d
  4058d4:	cmp    r15d,esi
  4058d7:	mov    r11d,ebp
  4058da:	jbe    0x405893
  4058dc:	mov    ecx,DWORD PTR [r13+rsi*4+0x0]
  4058e1:	lea    r10d,[r12+0x1]
  4058e6:	mov    esi,ecx
  4058e8:	movzx  ecx,cl
  4058eb:	shr    esi,0x8
  4058ee:	cmp    ebp,ecx
  4058f0:	je     0x405a93
  4058f6:	test   r8d,r8d
  4058f9:	je     0x405c0c
  4058ff:	mov    r12d,r10d
  405902:	mov    r10,QWORD PTR [rsp+0x48]
  405907:	movzx  ebx,bpl
  40590b:	mov    ebp,ecx
  40590d:	mov    edx,eax
  40590f:	shr    eax,0x18
  405912:	mov    BYTE PTR [r9],r11b
  405915:	xor    eax,ebx
  405917:	shl    edx,0x8
  40591a:	add    r9,0x1
  40591e:	xor    edx,DWORD PTR [r10+rax*4]
  405922:	sub    r8d,0x1
  405926:	mov    eax,edx
  405928:	cmp    r14d,r12d
  40592b:	jl     0x405893
  405931:	jne    0x4058d4
  405933:	mov    rbx,QWORD PTR [rsp+0x28]
  405938:	mov    edi,DWORD PTR [rsp+0x40]
  40593c:	xor    ecx,ecx
  40593e:	jmp    0x404e91
  405943:	cmp    ebp,r12d
  405946:	mov    DWORD PTR [rbx+0x10],0x3
  40594d:	jbe    0x405893
  405953:	mov    ecx,0x100
  405958:	xor    r13d,r13d
  40595b:	nop    DWORD PTR [rax+rax*1+0x0]
  405960:	lea    edx,[r13+rcx*1+0x0]
  405965:	sar    edx,1
  405967:	movsxd r15,edx
  40596a:	cmp    r12d,DWORD PTR [r10+r15*4]
  40596e:	cmovl  ecx,edx
  405971:	cmovge r13d,edx
  405975:	mov    edx,ecx
  405977:	sub    edx,r13d
  40597a:	cmp    edx,0x1
  40597d:	jne    0x405960
  40597f:	mov    edx,r12d
  405982:	lea    ecx,[r12*4+0x0]
  40598a:	movzx  r12d,WORD PTR [rax+r12*2]
  40598f:	shr    edx,1
  405991:	movzx  edx,BYTE PTR [r9+rdx*1]
  405996:	and    ecx,0x4
  405999:	shr    edx,cl
  40599b:	and    edx,0xf
  40599e:	shl    edx,0x10
  4059a1:	or     r12d,edx
  4059a4:	lea    edx,[rsi+0x3]
  4059a7:	mov    DWORD PTR [rbx+0x3c],r12d
  4059ab:	cmp    r11d,edx
  4059ae:	mov    DWORD PTR [rbx+0x444],edx
  4059b4:	je     0x4051c0
  4059ba:	movzx  r13d,r13b
  4059be:	cmp    edi,r13d
  4059c1:	jne    0x4051b3
  4059c7:	cmp    ebp,r12d
  4059ca:	jbe    0x405893
  4059d0:	mov    ecx,0x100
  4059d5:	xor    r11d,r11d
  4059d8:	lea    edx,[r11+rcx*1]
  4059dc:	sar    edx,1
  4059de:	movsxd rdi,edx
  4059e1:	cmp    r12d,DWORD PTR [r10+rdi*4]
  4059e5:	cmovl  ecx,edx
  4059e8:	cmovge r11d,edx
  4059ec:	mov    edx,ecx
  4059ee:	sub    edx,r11d
  4059f1:	cmp    edx,0x1
  4059f4:	jne    0x4059d8
  4059f6:	mov    edx,r12d
  4059f9:	lea    ecx,[r12*4+0x0]
  405a01:	movzx  edi,WORD PTR [rax+r12*2]
  405a06:	shr    edx,1
  405a08:	movzx  edx,BYTE PTR [r9+rdx*1]
  405a0d:	and    ecx,0x4
  405a10:	shr    edx,cl
  405a12:	and    edx,0xf
  405a15:	shl    edx,0x10
  405a18:	or     edi,edx
  405a1a:	lea    edx,[rsi+0x4]
  405a1d:	mov    DWORD PTR [rbx+0x3c],edi
  405a20:	mov    DWORD PTR [rbx+0x444],edx
  405a26:	movzx  edx,r11b
  405a2a:	add    edx,0x4
  405a2d:	cmp    ebp,edi
  405a2f:	mov    DWORD PTR [rbx+0x10],edx
  405a32:	jbe    0x405893
  405a38:	mov    r11d,0x100
  405a3e:	xor    ecx,ecx
  405a40:	lea    edx,[rcx+r11*1]
  405a44:	sar    edx,1
  405a46:	movsxd rbp,edx
  405a49:	cmp    edi,DWORD PTR [r10+rbp*4]
  405a4d:	cmovl  r11d,edx
  405a51:	cmovge ecx,edx
  405a54:	mov    edx,r11d
  405a57:	sub    edx,ecx
  405a59:	cmp    edx,0x1
  405a5c:	jne    0x405a40
  405a5e:	mov    edx,edi
  405a60:	mov    DWORD PTR [rbx+0x40],ecx
  405a63:	lea    ecx,[rdi*4+0x0]
  405a6a:	shr    edx,1
  405a6c:	movzx  eax,WORD PTR [rax+rdi*2]
  405a70:	add    esi,0x5
  405a73:	movzx  edx,BYTE PTR [r9+rdx*1]
  405a78:	and    ecx,0x4
  405a7b:	mov    DWORD PTR [rbx+0x444],esi
  405a81:	shr    edx,cl
  405a83:	and    edx,0xf
  405a86:	shl    edx,0x10
  405a89:	or     edx,eax
  405a8b:	mov    DWORD PTR [rbx+0x3c],edx
  405a8e:	jmp    0x4051c0
  405a93:	cmp    r14d,r10d
  405a96:	je     0x405b5a
  405a9c:	cmp    r15d,esi
  405a9f:	jbe    0x405893
  405aa5:	mov    ecx,DWORD PTR [r13+rsi*4+0x0]
  405aaa:	lea    edx,[r12+0x2]
  405aaf:	mov    esi,ecx
  405ab1:	shr    esi,0x8
  405ab4:	cmp    r14d,edx
  405ab7:	je     0x405ac6
  405ab9:	movzx  ecx,cl
  405abc:	cmp    ebp,ecx
  405abe:	je     0x405b6d
  405ac4:	mov    ebp,ecx
  405ac6:	mov    ecx,0x2
  405acb:	mov    r12d,edx
  405ace:	jmp    0x404e40
  405ad3:	xor    eax,eax
  405ad5:	jmp    0x405898
  405ada:	movsxd rcx,DWORD PTR [rbx+0x1c]
  405ade:	mov    r14,QWORD PTR [rsp+0x50]
  405ae3:	mov    rdx,rcx
  405ae6:	mov    r13d,DWORD PTR [r14+rcx*4]
  405aea:	mov    ecx,0x0
  405aef:	add    edx,0x1
  405af2:	cmp    edx,0x200
  405af8:	cmove  edx,ecx
  405afb:	mov    DWORD PTR [rbx+0x18],r13d
  405aff:	mov    DWORD PTR [rbx+0x1c],edx
  405b02:	jmp    0x405633
  405b07:	movsxd rdx,DWORD PTR [rbx+0x1c]
  405b0b:	mov    r11,QWORD PTR [rip+0x10f5e]        # 0x416a70
  405b12:	mov    r10,rdx
  405b15:	mov    edx,DWORD PTR [r11+rdx*4]
  405b19:	add    r10d,0x1
  405b1d:	cmp    r10d,0x200
  405b24:	cmove  r10d,r13d
  405b28:	mov    DWORD PTR [rbx+0x18],edx
  405b2b:	mov    DWORD PTR [rbx+0x1c],r10d
  405b2f:	jmp    0x40580a
  405b34:	cmp    DWORD PTR [rbx+0x34],0x2
  405b38:	jg     0x405bdf
  405b3e:	mov    eax,DWORD PTR [rbx+0xc6c]
  405b44:	cmp    DWORD PTR [rbx+0xc74],eax
  405b4a:	jne    0x405893
  405b50:	mov    eax,0x4
  405b55:	jmp    0x405898
  405b5a:	mov    ecx,ebp
  405b5c:	jmp    0x4058f6
  405b61:	mov    r10,QWORD PTR [rip+0x10ef8]        # 0x416a60
  405b68:	jmp    0x40590d
  405b6d:	cmp    r15d,esi
  405b70:	jbe    0x405893
  405b76:	mov    ecx,DWORD PTR [r13+rsi*4+0x0]
  405b7b:	lea    edx,[r12+0x3]
  405b80:	mov    esi,ecx
  405b82:	shr    esi,0x8
  405b85:	cmp    r14d,edx
  405b88:	je     0x405b93
  405b8a:	movzx  ecx,cl
  405b8d:	cmp    ebp,ecx
  405b8f:	je     0x405b9d
  405b91:	mov    ebp,ecx
  405b93:	mov    ecx,0x3
  405b98:	jmp    0x405acb
  405b9d:	cmp    r15d,esi
  405ba0:	jbe    0x405893
  405ba6:	mov    ecx,DWORD PTR [r13+rsi*4+0x0]
  405bab:	mov    edx,ecx
  405bad:	shr    edx,0x8
  405bb0:	cmp    r15d,edx
  405bb3:	jbe    0x405893
  405bb9:	mov    esi,DWORD PTR [r13+rdx*4+0x0]
  405bbe:	movzx  ecx,cl
  405bc1:	lea    edx,[r12+0x5]
  405bc6:	add    ecx,0x4
  405bc9:	movzx  ebp,sil
  405bcd:	shr    esi,0x8
  405bd0:	jmp    0x405acb
  405bd5:	mov    eax,0xfffffffe
  405bda:	jmp    0x405898
  405bdf:	mov    edi,DWORD PTR [rbx+0xc74]
  405be5:	mov    esi,DWORD PTR [rbx+0xc6c]
  405beb:	call   QWORD PTR [rip+0x16793]        # 0x41c384
  405bf1:	lea    rdx,[rip+0x10698]        # 0x416290
  405bf8:	lea    rcx,[rax+0x60]
  405bfc:	mov    r9d,edi
  405bff:	mov    r8d,esi
  405c02:	call   0x4112b0
  405c07:	jmp    0x405b3e
  405c0c:	mov    ebp,ecx
  405c0e:	mov    rbx,QWORD PTR [rsp+0x28]
  405c13:	mov    edi,DWORD PTR [rsp+0x40]
  405c17:	mov    r12d,r10d
  405c1a:	mov    ecx,0x1
  405c1f:	jmp    0x404e91
  405c24:	xchg   ax,ax
  405c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c30:	push   rsi
  405c31:	push   rbx
  405c32:	sub    rsp,0x28
  405c36:	test   rcx,rcx
  405c39:	je     0x405cb0
  405c3b:	mov    rsi,QWORD PTR [rcx+0x30]
  405c3f:	test   rsi,rsi
  405c42:	je     0x405cb0
  405c44:	mov    rbx,QWORD PTR [rsi]
  405c47:	mov    eax,0xfffffffe
  405c4c:	cmp    rbx,rcx
  405c4f:	jne    0x405c9f
  405c51:	mov    rdx,QWORD PTR [rsi+0xc50]
  405c58:	test   rdx,rdx
  405c5b:	je     0x405c64
  405c5d:	mov    rcx,QWORD PTR [rbx+0x48]
  405c61:	call   QWORD PTR [rbx+0x40]
  405c64:	mov    rdx,QWORD PTR [rsi+0xc58]
  405c6b:	test   rdx,rdx
  405c6e:	je     0x405c77
  405c70:	mov    rcx,QWORD PTR [rbx+0x48]
  405c74:	call   QWORD PTR [rbx+0x40]
  405c77:	mov    rdx,QWORD PTR [rsi+0xc60]
  405c7e:	test   rdx,rdx
  405c81:	je     0x405c8a
  405c83:	mov    rcx,QWORD PTR [rbx+0x48]
  405c87:	call   QWORD PTR [rbx+0x40]
  405c8a:	mov    rdx,QWORD PTR [rbx+0x30]
  405c8e:	mov    rcx,QWORD PTR [rbx+0x48]
  405c92:	call   QWORD PTR [rbx+0x40]
  405c95:	mov    QWORD PTR [rbx+0x30],0x0
  405c9d:	xor    eax,eax
  405c9f:	add    rsp,0x28
  405ca3:	pop    rbx
  405ca4:	pop    rsi
  405ca5:	ret    
  405ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cb0:	mov    eax,0xfffffffe
  405cb5:	jmp    0x405c9f
  405cb7:	nop    WORD PTR [rax+rax*1+0x0]
  405cc0:	push   r12
  405cc2:	push   rbp
  405cc3:	push   rdi
  405cc4:	push   rsi
  405cc5:	push   rbx
  405cc6:	sub    rsp,0x20
  405cca:	test   rcx,rcx
  405ccd:	je     0x405d00
  405ccf:	test   rdx,rdx
  405cd2:	mov    DWORD PTR [rcx],0x0
  405cd8:	je     0x405ce3
  405cda:	lea    eax,[r8-0x1]
  405cde:	cmp    eax,0x8
  405ce1:	jbe    0x405d10
  405ce3:	mov    DWORD PTR [rcx],0xfffffffe
  405ce9:	xor    eax,eax
  405ceb:	add    rsp,0x20
  405cef:	pop    rbx
  405cf0:	pop    rsi
  405cf1:	pop    rdi
  405cf2:	pop    rbp
  405cf3:	pop    r12
  405cf5:	ret    
  405cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d00:	test   rdx,rdx
  405d03:	je     0x405d25
  405d05:	lea    eax,[r8-0x1]
  405d09:	cmp    eax,0x8
  405d0c:	ja     0x405d25
  405d0e:	xchg   ax,ax
  405d10:	cmp    DWORD PTR [rsp+0x70],0xfa
  405d18:	ja     0x405d20
  405d1a:	cmp    r9d,0x4
  405d1e:	jbe    0x405d32
  405d20:	test   rcx,rcx
  405d23:	jne    0x405ce3
  405d25:	xor    eax,eax
  405d27:	add    rsp,0x20
  405d2b:	pop    rbx
  405d2c:	pop    rsi
  405d2d:	pop    rdi
  405d2e:	pop    rbp
  405d2f:	pop    r12
  405d31:	ret    
  405d32:	mov    rbx,rcx
  405d35:	mov    rcx,rdx
  405d38:	mov    r12d,r9d
  405d3b:	mov    ebp,r8d
  405d3e:	mov    rdi,rdx
  405d41:	call   0x4112d0
  405d46:	test   eax,eax
  405d48:	je     0x405d60
  405d4a:	test   rbx,rbx
  405d4d:	je     0x405d25
  405d4f:	mov    DWORD PTR [rbx],0xfffffffa
  405d55:	xor    eax,eax
  405d57:	jmp    0x405ceb
  405d59:	nop    DWORD PTR [rax+0x0]
  405d60:	mov    ecx,0x13f0
  405d65:	call   0x411278
  405d6a:	test   rax,rax
  405d6d:	mov    rsi,rax
  405d70:	je     0x405e0c
  405d76:	test   rbx,rbx
  405d79:	je     0x405d81
  405d7b:	mov    DWORD PTR [rbx],0x0
  405d81:	mov    eax,DWORD PTR [rsp+0x70]
  405d85:	lea    rcx,[rsi+0x1398]
  405d8c:	mov    r8d,r12d
  405d8f:	mov    edx,ebp
  405d91:	mov    DWORD PTR [rsi+0x13e8],0x0
  405d9b:	mov    BYTE PTR [rsi+0x13ec],0x0
  405da2:	mov    DWORD PTR [rsi+0x1390],0x0
  405dac:	mov    QWORD PTR [rsi],rdi
  405daf:	test   eax,eax
  405db1:	mov    eax,0x1e
  405db6:	cmovne eax,DWORD PTR [rsp+0x70]
  405dbb:	mov    BYTE PTR [rsi+0x1394],0x1
  405dc2:	mov    QWORD PTR [rsi+0x13d0],0x0
  405dcd:	mov    QWORD PTR [rsi+0x13d8],0x0
  405dd8:	mov    QWORD PTR [rsi+0x13e0],0x0
  405de3:	mov    r9d,eax
  405de6:	mov    DWORD PTR [rsp+0x70],eax
  405dea:	call   0x4047e0
  405def:	test   eax,eax
  405df1:	jne    0x405e22
  405df3:	mov    DWORD PTR [rsi+0x13a0],0x0
  405dfd:	mov    BYTE PTR [rsi+0x13ec],0x1
  405e04:	mov    rax,rsi
  405e07:	jmp    0x405ceb
  405e0c:	test   rbx,rbx
  405e0f:	je     0x405d25
  405e15:	mov    DWORD PTR [rbx],0xfffffffd
  405e1b:	xor    eax,eax
  405e1d:	jmp    0x405d27
  405e22:	test   rbx,rbx
  405e25:	je     0x405e29
  405e27:	mov    DWORD PTR [rbx],eax
  405e29:	mov    rcx,rsi
  405e2c:	call   0x411298
  405e31:	xor    eax,eax
  405e33:	jmp    0x405d27
  405e38:	nop    DWORD PTR [rax+rax*1+0x0]
  405e40:	push   r12
  405e42:	push   rbp
  405e43:	push   rdi
  405e44:	push   rsi
  405e45:	push   rbx
  405e46:	sub    rsp,0x20
  405e4a:	test   rcx,rcx
  405e4d:	je     0x405ea4
  405e4f:	test   rdx,rdx
  405e52:	mov    DWORD PTR [rcx],0x0
  405e58:	je     0x405eb4
  405e5a:	test   r8,r8
  405e5d:	mov    DWORD PTR [rdx+0x13e8],0x0
  405e67:	je     0x405f90
  405e6d:	mov    eax,r9d
  405e70:	shr    eax,0x1f
  405e73:	test   al,al
  405e75:	jne    0x405f90
  405e7b:	cmp    BYTE PTR [rdx+0x1394],0x0
  405e82:	jne    0x405ec5
  405e84:	test   rcx,rcx
  405e87:	je     0x405e8f
  405e89:	mov    DWORD PTR [rcx],0xffffffff
  405e8f:	mov    DWORD PTR [rdx+0x13e8],0xffffffff
  405e99:	add    rsp,0x20
  405e9d:	pop    rbx
  405e9e:	pop    rsi
  405e9f:	pop    rdi
  405ea0:	pop    rbp
  405ea1:	pop    r12
  405ea3:	ret    
  405ea4:	test   rdx,rdx
  405ea7:	jne    0x405e5a
  405ea9:	add    rsp,0x20
  405ead:	pop    rbx
  405eae:	pop    rsi
  405eaf:	pop    rdi
  405eb0:	pop    rbp
  405eb1:	pop    r12
  405eb3:	ret    
  405eb4:	mov    DWORD PTR [rcx],0xfffffffe
  405eba:	add    rsp,0x20
  405ebe:	pop    rbx
  405ebf:	pop    rsi
  405ec0:	pop    rdi
  405ec1:	pop    rbp
  405ec2:	pop    r12
  405ec4:	ret    
  405ec5:	mov    rsi,rcx
  405ec8:	mov    rcx,QWORD PTR [rdx]
  405ecb:	mov    ebp,r9d
  405ece:	mov    rdi,r8
  405ed1:	mov    rbx,rdx
  405ed4:	call   0x4112d0
  405ed9:	test   eax,eax
  405edb:	jne    0x405f70
  405ee1:	test   ebp,ebp
  405ee3:	je     0x405fb0
  405ee9:	mov    DWORD PTR [rbx+0x13a0],ebp
  405eef:	mov    QWORD PTR [rbx+0x1398],rdi
  405ef6:	lea    rbp,[rbx+0x8]
  405efa:	lea    r12,[rbx+0x1398]
  405f01:	jmp    0x405f11
  405f03:	mov    eax,DWORD PTR [rbx+0x13a0]
  405f09:	test   eax,eax
  405f0b:	je     0x405fb0
  405f11:	xor    edx,edx
  405f13:	mov    DWORD PTR [rbx+0x13b8],0x1388
  405f1d:	mov    QWORD PTR [rbx+0x13b0],rbp
  405f24:	mov    rcx,r12
  405f27:	call   0x404a20
  405f2c:	cmp    eax,0x1
  405f2f:	jne    0x405fd0
  405f35:	mov    eax,DWORD PTR [rbx+0x13b8]
  405f3b:	cmp    eax,0x1387
  405f40:	ja     0x405f03
  405f42:	mov    edi,0x1388
  405f47:	mov    r9,QWORD PTR [rbx]
  405f4a:	mov    edx,0x1
  405f4f:	sub    edi,eax
  405f51:	mov    rcx,rbp
  405f54:	mov    r8d,edi
  405f57:	call   0x411290
  405f5c:	cmp    edi,eax
  405f5e:	jne    0x405f70
  405f60:	mov    rcx,QWORD PTR [rbx]
  405f63:	call   0x4112d0
  405f68:	test   eax,eax
  405f6a:	je     0x405f03
  405f6c:	nop    DWORD PTR [rax+0x0]
  405f70:	test   rsi,rsi
  405f73:	je     0x405f7b
  405f75:	mov    DWORD PTR [rsi],0xfffffffa
  405f7b:	mov    DWORD PTR [rbx+0x13e8],0xfffffffa
  405f85:	jmp    0x405e99
  405f8a:	nop    WORD PTR [rax+rax*1+0x0]
  405f90:	test   rcx,rcx
  405f93:	je     0x405f9b
  405f95:	mov    DWORD PTR [rcx],0xfffffffe
  405f9b:	mov    DWORD PTR [rdx+0x13e8],0xfffffffe
  405fa5:	add    rsp,0x20
  405fa9:	pop    rbx
  405faa:	pop    rsi
  405fab:	pop    rdi
  405fac:	pop    rbp
  405fad:	pop    r12
  405faf:	ret    
  405fb0:	test   rsi,rsi
  405fb3:	je     0x405fbb
  405fb5:	mov    DWORD PTR [rsi],0x0
  405fbb:	mov    DWORD PTR [rbx+0x13e8],0x0
  405fc5:	jmp    0x405e99
  405fca:	nop    WORD PTR [rax+rax*1+0x0]
  405fd0:	test   rsi,rsi
  405fd3:	je     0x405fd7
  405fd5:	mov    DWORD PTR [rsi],eax
  405fd7:	mov    DWORD PTR [rbx+0x13e8],eax
  405fdd:	jmp    0x405e99
  405fe2:	nop    DWORD PTR [rax+0x0]
  405fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ff0:	push   r15
  405ff2:	push   r14
  405ff4:	push   r13
  405ff6:	push   r12
  405ff8:	push   rbp
  405ff9:	push   rdi
  405ffa:	push   rsi
  405ffb:	push   rbx
  405ffc:	sub    rsp,0x38
  406000:	mov    rbp,QWORD PTR [rsp+0xa0]
  406008:	mov    r12,QWORD PTR [rsp+0xa8]
  406010:	test   rdx,rdx
  406013:	mov    r13,QWORD PTR [rsp+0xb0]
  40601b:	je     0x406160
  406021:	cmp    BYTE PTR [rdx+0x1394],0x0
  406028:	jne    0x406050
  40602a:	test   rcx,rcx
  40602d:	je     0x406035
  40602f:	mov    DWORD PTR [rcx],0xffffffff
  406035:	mov    DWORD PTR [rdx+0x13e8],0xffffffff
  40603f:	add    rsp,0x38
  406043:	pop    rbx
  406044:	pop    rsi
  406045:	pop    rdi
  406046:	pop    rbp
  406047:	pop    r12
  406049:	pop    r13
  40604b:	pop    r14
  40604d:	pop    r15
  40604f:	ret    
  406050:	mov    r14,rcx
  406053:	mov    rcx,QWORD PTR [rdx]
  406056:	mov    rsi,r9
  406059:	mov    edi,r8d
  40605c:	mov    rbx,rdx
  40605f:	call   0x4112d0
  406064:	test   eax,eax
  406066:	jne    0x406142
  40606c:	test   rsi,rsi
  40606f:	je     0x406077
  406071:	mov    DWORD PTR [rsi],0x0
  406077:	test   rbp,rbp
  40607a:	je     0x406083
  40607c:	mov    DWORD PTR [rbp+0x0],0x0
  406083:	test   r12,r12
  406086:	je     0x406090
  406088:	mov    DWORD PTR [r12],0x0
  406090:	test   r13,r13
  406093:	je     0x40609d
  406095:	mov    DWORD PTR [r13+0x0],0x0
  40609d:	test   edi,edi
  40609f:	jne    0x406194
  4060a5:	mov    eax,DWORD PTR [rbx+0x13e8]
  4060ab:	test   eax,eax
  4060ad:	jne    0x406174
  4060b3:	lea    rax,[rbx+0x1398]
  4060ba:	lea    rdi,[rbx+0x8]
  4060be:	mov    QWORD PTR [rsp+0x20],rax
  4060c3:	jmp    0x4060cf
  4060c5:	cmp    r15d,0x4
  4060c9:	je     0x406174
  4060cf:	mov    rcx,QWORD PTR [rsp+0x20]
  4060d4:	mov    DWORD PTR [rbx+0x13b8],0x1388
  4060de:	mov    edx,0x2
  4060e3:	mov    QWORD PTR [rbx+0x13b0],rdi
  4060ea:	call   0x404a20
  4060ef:	mov    r15d,eax
  4060f2:	lea    eax,[rax-0x3]
  4060f5:	cmp    eax,0x1
  4060f8:	ja     0x406210
  4060fe:	mov    eax,DWORD PTR [rbx+0x13b8]
  406104:	cmp    eax,0x1387
  406109:	ja     0x4060c5
  40610b:	mov    r11d,0x1388
  406111:	mov    r9,QWORD PTR [rbx]
  406114:	mov    edx,0x1
  406119:	sub    r11d,eax
  40611c:	mov    rcx,rdi
  40611f:	mov    r8d,r11d
  406122:	mov    DWORD PTR [rsp+0x2c],r11d
  406127:	call   0x411290
  40612c:	mov    r11d,DWORD PTR [rsp+0x2c]
  406131:	cmp    r11d,eax
  406134:	jne    0x406142
  406136:	mov    rcx,QWORD PTR [rbx]
  406139:	call   0x4112d0
  40613e:	test   eax,eax
  406140:	je     0x4060c5
  406142:	test   r14,r14
  406145:	je     0x40614e
  406147:	mov    DWORD PTR [r14],0xfffffffa
  40614e:	mov    DWORD PTR [rbx+0x13e8],0xfffffffa
  406158:	jmp    0x40603f
  40615d:	nop    DWORD PTR [rax]
  406160:	test   rcx,rcx
  406163:	je     0x40603f
  406169:	mov    DWORD PTR [rcx],0x0
  40616f:	jmp    0x40603f
  406174:	mov    rcx,QWORD PTR [rbx]
  406177:	call   0x4112d0
  40617c:	test   eax,eax
  40617e:	jne    0x406194
  406180:	mov    rcx,QWORD PTR [rbx]
  406183:	call   0x4112c8
  406188:	mov    rcx,QWORD PTR [rbx]
  40618b:	call   0x4112d0
  406190:	test   eax,eax
  406192:	jne    0x406142
  406194:	test   rsi,rsi
  406197:	je     0x4061a1
  406199:	mov    eax,DWORD PTR [rbx+0x13a4]
  40619f:	mov    DWORD PTR [rsi],eax
  4061a1:	test   rbp,rbp
  4061a4:	je     0x4061af
  4061a6:	mov    eax,DWORD PTR [rbx+0x13a8]
  4061ac:	mov    DWORD PTR [rbp+0x0],eax
  4061af:	test   r12,r12
  4061b2:	je     0x4061be
  4061b4:	mov    eax,DWORD PTR [rbx+0x13bc]
  4061ba:	mov    DWORD PTR [r12],eax
  4061be:	test   r13,r13
  4061c1:	je     0x4061cd
  4061c3:	mov    eax,DWORD PTR [rbx+0x13c0]
  4061c9:	mov    DWORD PTR [r13+0x0],eax
  4061cd:	test   r14,r14
  4061d0:	je     0x4061d9
  4061d2:	mov    DWORD PTR [r14],0x0
  4061d9:	lea    rcx,[rbx+0x1398]
  4061e0:	mov    DWORD PTR [rbx+0x13e8],0x0
  4061ea:	call   0x404b90
  4061ef:	mov    rcx,rbx
  4061f2:	add    rsp,0x38
  4061f6:	pop    rbx
  4061f7:	pop    rsi
  4061f8:	pop    rdi
  4061f9:	pop    rbp
  4061fa:	pop    r12
  4061fc:	pop    r13
  4061fe:	pop    r14
  406200:	pop    r15
  406202:	jmp    0x411298
  406207:	nop    WORD PTR [rax+rax*1+0x0]
  406210:	test   r14,r14
  406213:	je     0x406218
  406215:	mov    DWORD PTR [r14],r15d
  406218:	mov    DWORD PTR [rbx+0x13e8],r15d
  40621f:	jmp    0x40603f
  406224:	xchg   ax,ax
  406226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406230:	sub    rsp,0x48
  406234:	mov    rax,QWORD PTR [rsp+0x70]
  406239:	mov    QWORD PTR [rsp+0x30],0x0
  406242:	mov    QWORD PTR [rsp+0x20],0x0
  40624b:	mov    QWORD PTR [rsp+0x28],rax
  406250:	call   0x405ff0
  406255:	nop
  406256:	add    rsp,0x48
  40625a:	ret    
  40625b:	nop    DWORD PTR [rax+rax*1+0x0]
  406260:	push   r13
  406262:	push   r12
  406264:	push   rbp
  406265:	push   rdi
  406266:	push   rsi
  406267:	push   rbx
  406268:	sub    rsp,0x28
  40626c:	test   rcx,rcx
  40626f:	je     0x406322
  406275:	cmp    r9d,0x1
  406279:	mov    DWORD PTR [rcx],0x0
  40627f:	ja     0x4062a9
  406281:	test   rdx,rdx
  406284:	je     0x4062a9
  406286:	cmp    r8d,0x4
  40628a:	ja     0x4062a9
  40628c:	cmp    QWORD PTR [rsp+0x80],0x0
  406295:	jne    0x4062e0
  406297:	mov    r10d,DWORD PTR [rsp+0x88]
  40629f:	test   r10d,r10d
  4062a2:	je     0x4062e0
  4062a4:	test   rcx,rcx
  4062a7:	je     0x4062d0
  4062a9:	mov    DWORD PTR [rcx],0xfffffffe
  4062af:	xor    eax,eax
  4062b1:	add    rsp,0x28
  4062b5:	pop    rbx
  4062b6:	pop    rsi
  4062b7:	pop    rdi
  4062b8:	pop    rbp
  4062b9:	pop    r12
  4062bb:	pop    r13
  4062bd:	ret    
  4062be:	test   rbx,rbx
  4062c1:	je     0x4062c5
  4062c3:	mov    DWORD PTR [rbx],eax
  4062c5:	mov    rcx,rsi
  4062c8:	call   0x411298
  4062cd:	nop    DWORD PTR [rax]
  4062d0:	xor    eax,eax
  4062d2:	add    rsp,0x28
  4062d6:	pop    rbx
  4062d7:	pop    rsi
  4062d8:	pop    rdi
  4062d9:	pop    rbp
  4062da:	pop    r12
  4062dc:	pop    r13
  4062de:	ret    
  4062df:	nop
  4062e0:	cmp    DWORD PTR [rsp+0x88],0x1388
  4062eb:	jbe    0x4062f8
  4062ed:	cmp    QWORD PTR [rsp+0x80],0x0
  4062f6:	jne    0x4062a4
  4062f8:	mov    rbx,rcx
  4062fb:	mov    rcx,rdx
  4062fe:	mov    edi,r9d
  406301:	mov    r12d,r8d
  406304:	mov    rbp,rdx
  406307:	call   0x4112d0
  40630c:	test   eax,eax
  40630e:	mov    r13d,eax
  406311:	je     0x406340
  406313:	test   rbx,rbx
  406316:	je     0x4062d0
  406318:	mov    DWORD PTR [rbx],0xfffffffa
  40631e:	xor    eax,eax
  406320:	jmp    0x4062b1
  406322:	cmp    r9d,0x1
  406326:	ja     0x4062d0
  406328:	test   rdx,rdx
  40632b:	je     0x4062d0
  40632d:	cmp    r8d,0x4
  406331:	jbe    0x40628c
  406337:	xor    eax,eax
  406339:	jmp    0x4062d2
  40633b:	nop    DWORD PTR [rax+rax*1+0x0]
  406340:	mov    ecx,0x13f0
  406345:	call   0x411278
  40634a:	test   rax,rax
  40634d:	mov    rsi,rax
  406350:	je     0x406428
  406356:	test   rbx,rbx
  406359:	je     0x406361
  40635b:	mov    DWORD PTR [rbx],0x0
  406361:	mov    edx,DWORD PTR [rsp+0x88]
  406368:	xor    eax,eax
  40636a:	mov    DWORD PTR [rsi+0x13e8],0x0
  406374:	mov    BYTE PTR [rsi+0x13ec],0x0
  40637b:	mov    QWORD PTR [rsi],rbp
  40637e:	mov    DWORD PTR [rsi+0x1390],0x0
  406388:	mov    BYTE PTR [rsi+0x1394],0x0
  40638f:	test   edx,edx
  406391:	mov    QWORD PTR [rsi+0x13d0],0x0
  40639c:	mov    QWORD PTR [rsi+0x13d8],0x0
  4063a7:	mov    QWORD PTR [rsi+0x13e0],0x0
  4063b2:	jle    0x4063e8
  4063b4:	mov    rdx,QWORD PTR [rsp+0x80]
  4063bc:	movsxd r13,r13d
  4063bf:	add    QWORD PTR [rsp+0x80],0x1
  4063c8:	movzx  edx,BYTE PTR [rdx]
  4063cb:	mov    BYTE PTR [rsi+r13*1+0x8],dl
  4063d0:	lea    r13d,[rax+0x1]
  4063d4:	cmp    r13d,DWORD PTR [rsp+0x88]
  4063dc:	mov    eax,r13d
  4063df:	jne    0x4063b4
  4063e1:	mov    DWORD PTR [rsi+0x1390],r13d
  4063e8:	lea    rcx,[rsi+0x1398]
  4063ef:	mov    r8d,edi
  4063f2:	mov    edx,r12d
  4063f5:	call   0x404c10
  4063fa:	test   eax,eax
  4063fc:	jne    0x4062be
  406402:	mov    eax,DWORD PTR [rsi+0x1390]
  406408:	mov    BYTE PTR [rsi+0x13ec],0x1
  40640f:	mov    DWORD PTR [rsi+0x13a0],eax
  406415:	lea    rax,[rsi+0x8]
  406419:	mov    QWORD PTR [rsi+0x1398],rax
  406420:	mov    rax,rsi
  406423:	jmp    0x4062b1
  406428:	test   rbx,rbx
  40642b:	je     0x4062d0
  406431:	mov    DWORD PTR [rbx],0xfffffffd
  406437:	xor    eax,eax
  406439:	jmp    0x4062d2
  40643e:	xchg   ax,ax
  406440:	push   rbp
  406441:	push   rdi
  406442:	mov    eax,0x13e8
  406447:	push   rsi
  406448:	push   rbx
  406449:	call   0x4111a0
  40644e:	sub    rsp,rax
  406451:	mov    r10d,edx
  406454:	xor    edx,edx
  406456:	test   r8,r8
  406459:	mov    QWORD PTR [rsp+0x40],0x0
  406462:	mov    WORD PTR [rsp+0x48],dx
  406467:	je     0x40663c
  40646d:	movsx  eax,BYTE PTR [r8]
  406471:	xor    ebp,ebp
  406473:	xor    esi,esi
  406475:	mov    ebx,0x9
  40647a:	test   al,al
  40647c:	jne    0x4064a8
  40647e:	jmp    0x406630
  406483:	cmp    al,0x77
  406485:	je     0x406590
  40648b:	cmp    al,0x72
  40648d:	je     0x406580
  406493:	sub    eax,0x30
  406496:	cmp    eax,0x9
  406499:	cmovbe ebx,eax
  40649c:	add    r8,0x1
  4064a0:	movsx  eax,BYTE PTR [r8]
  4064a4:	test   al,al
  4064a6:	je     0x4064bd
  4064a8:	cmp    al,0x73
  4064aa:	jne    0x406483
  4064ac:	add    r8,0x1
  4064b0:	movsx  eax,BYTE PTR [r8]
  4064b4:	mov    ebp,0x1
  4064b9:	test   al,al
  4064bb:	jne    0x4064a8
  4064bd:	lea    rdx,[rip+0xfe03]        # 0x4162c7
  4064c4:	lea    rax,[rip+0xfdfe]        # 0x4162c9
  4064cb:	test   esi,esi
  4064cd:	cmovne rax,rdx
  4064d1:	movzx  eax,BYTE PTR [rax]
  4064d4:	test   r9d,r9d
  4064d7:	lea    rdx,[rsp+0x40]
  4064dc:	mov    BYTE PTR [rsp+0x40],al
  4064e0:	mov    eax,0x62
  4064e5:	mov    WORD PTR [rsp+0x41],ax
  4064ea:	jne    0x4065b0
  4064f0:	test   rcx,rcx
  4064f3:	je     0x4064fe
  4064f5:	cmp    BYTE PTR [rcx],0x0
  4064f8:	jne    0x4065f0
  4064fe:	test   esi,esi
  406500:	jne    0x4065a0
  406506:	call   QWORD PTR [rip+0x15e78]        # 0x41c384
  40650c:	mov    rdi,rax
  40650f:	mov    rcx,rdi
  406512:	call   0x4111e8
  406517:	mov    edx,0x8000
  40651c:	mov    ecx,eax
  40651e:	call   0x4111f8
  406523:	test   rdi,rdi
  406526:	je     0x40663c
  40652c:	test   esi,esi
  40652e:	je     0x4065c0
  406534:	test   ebx,ebx
  406536:	jle    0x406600
  40653c:	cmp    ebx,0xa
  40653f:	mov    eax,0x9
  406544:	cmovge ebx,eax
  406547:	lea    rcx,[rsp+0x3c]
  40654c:	mov    DWORD PTR [rsp+0x20],0x1e
  406554:	xor    r9d,r9d
  406557:	mov    r8d,ebx
  40655a:	mov    rdx,rdi
  40655d:	call   0x405cc0
  406562:	test   rax,rax
  406565:	mov    rbx,rax
  406568:	je     0x40660a
  40656e:	mov    rax,rbx
  406571:	add    rsp,0x13e8
  406578:	pop    rbx
  406579:	pop    rsi
  40657a:	pop    rdi
  40657b:	pop    rbp
  40657c:	ret    
  40657d:	nop    DWORD PTR [rax]
  406580:	xor    esi,esi
  406582:	jmp    0x40649c
  406587:	nop    WORD PTR [rax+rax*1+0x0]
  406590:	mov    esi,0x1
  406595:	jmp    0x40649c
  40659a:	nop    WORD PTR [rax+rax*1+0x0]
  4065a0:	call   QWORD PTR [rip+0x15dde]        # 0x41c384
  4065a6:	lea    rdi,[rax+0x30]
  4065aa:	jmp    0x40650f
  4065af:	nop
  4065b0:	mov    ecx,r10d
  4065b3:	call   0x4111e0
  4065b8:	mov    rdi,rax
  4065bb:	jmp    0x406523
  4065c0:	lea    rax,[rsp+0x50]
  4065c5:	lea    rcx,[rsp+0x3c]
  4065ca:	mov    DWORD PTR [rsp+0x28],0x0
  4065d2:	mov    r9d,ebp
  4065d5:	xor    r8d,r8d
  4065d8:	mov    rdx,rdi
  4065db:	mov    QWORD PTR [rsp+0x20],rax
  4065e0:	call   0x406260
  4065e5:	jmp    0x406562
  4065ea:	nop    WORD PTR [rax+rax*1+0x0]
  4065f0:	call   0x4112b8
  4065f5:	mov    rdi,rax
  4065f8:	jmp    0x406523
  4065fd:	nop    DWORD PTR [rax]
  406600:	mov    ebx,0x1
  406605:	jmp    0x406547
  40660a:	mov    rsi,QWORD PTR [rip+0x15d73]        # 0x41c384
  406611:	call   rsi
  406613:	cmp    rax,rdi
  406616:	je     0x40663c
  406618:	call   rsi
  40661a:	add    rax,0x30
  40661e:	cmp    rdi,rax
  406621:	je     0x40663c
  406623:	mov    rcx,rdi
  406626:	call   0x4112d8
  40662b:	jmp    0x40656e
  406630:	lea    rax,[rip+0xfc92]        # 0x4162c9
  406637:	jmp    0x4064d1
  40663c:	xor    ebx,ebx
  40663e:	jmp    0x40656e
  406643:	nop    DWORD PTR [rax]
  406646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406650:	push   rbx
  406651:	sub    rsp,0x20
  406655:	test   rcx,rcx
  406658:	je     0x406690
  40665a:	test   rdx,rdx
  40665d:	mov    DWORD PTR [rcx],0x0
  406663:	je     0x406688
  406665:	cmp    BYTE PTR [rdx+0x1394],0x0
  40666c:	mov    DWORD PTR [rdx+0x13e8],0x0
  406676:	je     0x4066b0
  406678:	mov    DWORD PTR [rcx],0xffffffff
  40667e:	mov    DWORD PTR [rdx+0x13e8],0xffffffff
  406688:	add    rsp,0x20
  40668c:	pop    rbx
  40668d:	ret    
  40668e:	xchg   ax,ax
  406690:	test   rdx,rdx
  406693:	je     0x406688
  406695:	cmp    BYTE PTR [rdx+0x1394],0x0
  40669c:	mov    DWORD PTR [rdx+0x13e8],0x0
  4066a6:	jne    0x40667e
  4066a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4066b0:	cmp    BYTE PTR [rdx+0x13ec],0x0
  4066b7:	mov    rbx,rdx
  4066ba:	jne    0x4066d0
  4066bc:	mov    rcx,rbx
  4066bf:	add    rsp,0x20
  4066c3:	pop    rbx
  4066c4:	jmp    0x411298
  4066c9:	nop    DWORD PTR [rax+0x0]
  4066d0:	lea    rcx,[rdx+0x1398]
  4066d7:	call   0x405c30
  4066dc:	mov    rcx,rbx
  4066df:	add    rsp,0x20
  4066e3:	pop    rbx
  4066e4:	jmp    0x411298
  4066e9:	nop    DWORD PTR [rax+0x0]
  4066f0:	push   r14
  4066f2:	push   r13
  4066f4:	push   r12
  4066f6:	push   rbp
  4066f7:	push   rdi
  4066f8:	push   rsi
  4066f9:	push   rbx
  4066fa:	sub    rsp,0x20
  4066fe:	test   rcx,rcx
  406701:	je     0x406760
  406703:	test   rdx,rdx
  406706:	mov    DWORD PTR [rcx],0x0
  40670c:	je     0x406780
  40670e:	test   r8,r8
  406711:	mov    DWORD PTR [rdx+0x13e8],0x0
  40671b:	je     0x4067b0
  406721:	mov    eax,r9d
  406724:	shr    eax,0x1f
  406727:	test   al,al
  406729:	jne    0x4067b0
  40672f:	cmp    BYTE PTR [rdx+0x1394],0x0
  406736:	jne    0x406790
  406738:	test   r9d,r9d
  40673b:	jne    0x4067d0
  406741:	test   rcx,rcx
  406744:	je     0x40674c
  406746:	mov    DWORD PTR [rcx],0x0
  40674c:	mov    DWORD PTR [rdx+0x13e8],0x0
  406756:	xor    esi,esi
  406758:	jmp    0x406767
  40675a:	nop    WORD PTR [rax+rax*1+0x0]
  406760:	test   rdx,rdx
  406763:	jne    0x40670e
  406765:	xor    esi,esi
  406767:	mov    eax,esi
  406769:	add    rsp,0x20
  40676d:	pop    rbx
  40676e:	pop    rsi
  40676f:	pop    rdi
  406770:	pop    rbp
  406771:	pop    r12
  406773:	pop    r13
  406775:	pop    r14
  406777:	ret    
  406778:	nop    DWORD PTR [rax+rax*1+0x0]
  406780:	mov    DWORD PTR [rcx],0xfffffffe
  406786:	jmp    0x406765
  406788:	nop    DWORD PTR [rax+rax*1+0x0]
  406790:	test   rcx,rcx
  406793:	je     0x40679b
  406795:	mov    DWORD PTR [rcx],0xffffffff
  40679b:	mov    DWORD PTR [rdx+0x13e8],0xffffffff
  4067a5:	xor    esi,esi
  4067a7:	jmp    0x406767
  4067a9:	nop    DWORD PTR [rax+0x0]
  4067b0:	test   rcx,rcx
  4067b3:	je     0x4067bb
  4067b5:	mov    DWORD PTR [rcx],0xfffffffe
  4067bb:	mov    DWORD PTR [rdx+0x13e8],0xfffffffe
  4067c5:	xor    esi,esi
  4067c7:	jmp    0x406767
  4067c9:	nop    DWORD PTR [rax+0x0]
  4067d0:	mov    rbx,rdx
  4067d3:	mov    ebp,r9d
  4067d6:	mov    rdi,rcx
  4067d9:	mov    DWORD PTR [rbx+0x13b8],r9d
  4067e0:	lea    r13,[rdx+0x8]
  4067e4:	mov    QWORD PTR [rdx+0x13b0],r8
  4067eb:	lea    r12,[rdx+0x1398]
  4067f2:	jmp    0x40680b
  4067f4:	cmp    eax,0x4
  4067f7:	je     0x406922
  4067fd:	mov    edx,DWORD PTR [rbx+0x13b8]
  406803:	test   edx,edx
  406805:	je     0x4068d8
  40680b:	mov    rcx,QWORD PTR [rbx]
  40680e:	call   0x4112d0
  406813:	test   eax,eax
  406815:	mov    esi,eax
  406817:	jne    0x4068f4
  40681d:	mov    r8d,DWORD PTR [rbx+0x13a0]
  406824:	test   r8d,r8d
  406827:	jne    0x406881
  406829:	mov    r14,QWORD PTR [rbx]
  40682c:	mov    rcx,r14
  40682f:	call   0x4112c0
  406834:	cmp    eax,0xffffffff
  406837:	je     0x406881
  406839:	mov    rdx,r14
  40683c:	mov    ecx,eax
  40683e:	call   0x411210
  406843:	mov    r9,QWORD PTR [rbx]
  406846:	mov    r8d,0x1388
  40684c:	mov    edx,0x1
  406851:	mov    rcx,r13
  406854:	call   0x4112a0
  406859:	mov    rcx,QWORD PTR [rbx]
  40685c:	mov    r14,rax
  40685f:	call   0x4112d0
  406864:	test   eax,eax
  406866:	jne    0x4068f4
  40686c:	mov    DWORD PTR [rbx+0x1390],r14d
  406873:	mov    DWORD PTR [rbx+0x13a0],r14d
  40687a:	mov    QWORD PTR [rbx+0x1398],r13
  406881:	mov    rcx,r12
  406884:	call   0x404d70
  406889:	test   eax,0xfffffffb
  40688e:	jne    0x406910
  406894:	test   eax,eax
  406896:	jne    0x4067f4
  40689c:	mov    rsi,QWORD PTR [rbx]
  40689f:	mov    rcx,rsi
  4068a2:	call   0x4112c0
  4068a7:	cmp    eax,0xffffffff
  4068aa:	je     0x4068c0
  4068ac:	mov    rdx,rsi
  4068af:	mov    ecx,eax
  4068b1:	call   0x411210
  4068b6:	jmp    0x4067fd
  4068bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4068c0:	mov    eax,DWORD PTR [rbx+0x13a0]
  4068c6:	test   eax,eax
  4068c8:	jne    0x4067fd
  4068ce:	mov    ecx,DWORD PTR [rbx+0x13b8]
  4068d4:	test   ecx,ecx
  4068d6:	jne    0x406944
  4068d8:	test   rdi,rdi
  4068db:	je     0x4068e3
  4068dd:	mov    DWORD PTR [rdi],0x0
  4068e3:	mov    DWORD PTR [rbx+0x13e8],0x0
  4068ed:	mov    esi,ebp
  4068ef:	jmp    0x406767
  4068f4:	test   rdi,rdi
  4068f7:	je     0x4068ff
  4068f9:	mov    DWORD PTR [rdi],0xfffffffa
  4068ff:	mov    DWORD PTR [rbx+0x13e8],0xfffffffa
  406909:	xor    esi,esi
  40690b:	jmp    0x406767
  406910:	test   rdi,rdi
  406913:	je     0x406917
  406915:	mov    DWORD PTR [rdi],eax
  406917:	mov    DWORD PTR [rbx+0x13e8],eax
  40691d:	jmp    0x406767
  406922:	test   rdi,rdi
  406925:	je     0x40692d
  406927:	mov    DWORD PTR [rdi],0x4
  40692d:	mov    esi,ebp
  40692f:	mov    DWORD PTR [rbx+0x13e8],0x4
  406939:	sub    esi,DWORD PTR [rbx+0x13b8]
  40693f:	jmp    0x406767
  406944:	test   rdi,rdi
  406947:	je     0x40694f
  406949:	mov    DWORD PTR [rdi],0xfffffff9
  40694f:	mov    DWORD PTR [rbx+0x13e8],0xfffffff9
  406959:	xor    esi,esi
  40695b:	jmp    0x406767
  406960:	test   rdx,rdx
  406963:	je     0x4069e0
  406965:	cmp    DWORD PTR [rdx+0x13e8],0x4
  40696c:	je     0x406984
  40696e:	test   rcx,rcx
  406971:	je     0x406979
  406973:	mov    DWORD PTR [rcx],0xffffffff
  406979:	mov    DWORD PTR [rdx+0x13e8],0xffffffff
  406983:	ret    
  406984:	test   r8,r8
  406987:	je     0x4069c0
  406989:	test   r9,r9
  40698c:	je     0x4069c0
  40698e:	test   rcx,rcx
  406991:	je     0x406999
  406993:	mov    DWORD PTR [rcx],0x0
  406999:	mov    eax,DWORD PTR [rdx+0x13a0]
  40699f:	mov    DWORD PTR [rdx+0x13e8],0x0
  4069a9:	mov    DWORD PTR [r9],eax
  4069ac:	mov    rax,QWORD PTR [rdx+0x1398]
  4069b3:	mov    QWORD PTR [r8],rax
  4069b6:	repz ret 
  4069b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4069c0:	test   rcx,rcx
  4069c3:	je     0x4069cb
  4069c5:	mov    DWORD PTR [rcx],0xfffffffe
  4069cb:	mov    DWORD PTR [rdx+0x13e8],0xfffffffe
  4069d5:	ret    
  4069d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069e0:	test   rcx,rcx
  4069e3:	je     0x4069b6
  4069e5:	mov    DWORD PTR [rcx],0xfffffffe
  4069eb:	ret    
  4069ec:	nop    DWORD PTR [rax+0x0]
  4069f0:	push   r13
  4069f2:	push   r12
  4069f4:	push   rbp
  4069f5:	push   rdi
  4069f6:	push   rsi
  4069f7:	push   rbx
  4069f8:	sub    rsp,0x78
  4069fc:	mov    r11d,DWORD PTR [rsp+0xd8]
  406a04:	mov    eax,DWORD PTR [rsp+0xe0]
  406a0b:	test   rcx,rcx
  406a0e:	mov    r10,rdx
  406a11:	mov    edx,DWORD PTR [rsp+0xd0]
  406a18:	je     0x406b00
  406a1e:	test   r10,r10
  406a21:	je     0x406b00
  406a27:	test   r8,r8
  406a2a:	je     0x406b00
  406a30:	lea    ebx,[rdx-0x1]
  406a33:	cmp    ebx,0x8
  406a36:	ja     0x406b00
  406a3c:	cmp    r11d,0x4
  406a40:	ja     0x406b00
  406a46:	cmp    eax,0xfa
  406a4b:	ja     0x406b00
  406a51:	test   eax,eax
  406a53:	mov    rsi,rcx
  406a56:	lea    r13,[rsp+0x20]
  406a5b:	mov    ecx,0x1e
  406a60:	mov    ebp,r9d
  406a63:	mov    r12,r8
  406a66:	cmove  eax,ecx
  406a69:	mov    r8d,r11d
  406a6c:	mov    rcx,r13
  406a6f:	mov    r9d,eax
  406a72:	mov    rdi,r10
  406a75:	mov    QWORD PTR [rsp+0x58],0x0
  406a7e:	mov    QWORD PTR [rsp+0x60],0x0
  406a87:	mov    QWORD PTR [rsp+0x68],0x0
  406a90:	call   0x4047e0
  406a95:	test   eax,eax
  406a97:	mov    ebx,eax
  406a99:	je     0x406ab0
  406a9b:	mov    eax,ebx
  406a9d:	add    rsp,0x78
  406aa1:	pop    rbx
  406aa2:	pop    rsi
  406aa3:	pop    rdi
  406aa4:	pop    rbp
  406aa5:	pop    r12
  406aa7:	pop    r13
  406aa9:	ret    
  406aaa:	nop    WORD PTR [rax+rax*1+0x0]
  406ab0:	mov    eax,DWORD PTR [rdi]
  406ab2:	mov    edx,0x2
  406ab7:	mov    rcx,r13
  406aba:	mov    QWORD PTR [rsp+0x38],rsi
  406abf:	mov    QWORD PTR [rsp+0x20],r12
  406ac4:	mov    DWORD PTR [rsp+0x28],ebp
  406ac8:	mov    DWORD PTR [rsp+0x40],eax
  406acc:	call   0x404a20
  406ad1:	cmp    eax,0x3
  406ad4:	mov    esi,eax
  406ad6:	je     0x406b27
  406ad8:	cmp    eax,0x4
  406adb:	je     0x406b14
  406add:	mov    rcx,r13
  406ae0:	mov    ebx,esi
  406ae2:	call   0x404b90
  406ae7:	mov    eax,ebx
  406ae9:	add    rsp,0x78
  406aed:	pop    rbx
  406aee:	pop    rsi
  406aef:	pop    rdi
  406af0:	pop    rbp
  406af1:	pop    r12
  406af3:	pop    r13
  406af5:	ret    
  406af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b00:	mov    ebx,0xfffffffe
  406b05:	mov    eax,ebx
  406b07:	add    rsp,0x78
  406b0b:	pop    rbx
  406b0c:	pop    rsi
  406b0d:	pop    rdi
  406b0e:	pop    rbp
  406b0f:	pop    r12
  406b11:	pop    r13
  406b13:	ret    
  406b14:	mov    eax,DWORD PTR [rsp+0x40]
  406b18:	sub    DWORD PTR [rdi],eax
  406b1a:	mov    rcx,r13
  406b1d:	call   0x404b90
  406b22:	jmp    0x406a9b
  406b27:	mov    rcx,r13
  406b2a:	mov    ebx,0xfffffff8
  406b2f:	call   0x404b90
  406b34:	jmp    0x406a9b
  406b39:	nop    DWORD PTR [rax+0x0]
  406b40:	push   r13
  406b42:	push   r12
  406b44:	push   rbp
  406b45:	push   rdi
  406b46:	push   rsi
  406b47:	push   rbx
  406b48:	sub    rsp,0x78
  406b4c:	mov    esi,0xfffffffe
  406b51:	mov    r10d,DWORD PTR [rsp+0xd0]
  406b59:	test   rcx,rcx
  406b5c:	mov    rax,rdx
  406b5f:	mov    edx,DWORD PTR [rsp+0xd8]
  406b66:	je     0x406bba
  406b68:	test   rax,rax
  406b6b:	je     0x406bba
  406b6d:	test   r8,r8
  406b70:	je     0x406bba
  406b72:	cmp    r10d,0x1
  406b76:	ja     0x406bba
  406b78:	cmp    edx,0x4
  406b7b:	ja     0x406bba
  406b7d:	lea    r13,[rsp+0x20]
  406b82:	mov    rbp,r8
  406b85:	mov    rbx,rcx
  406b88:	mov    r8d,r10d
  406b8b:	mov    r12d,r9d
  406b8e:	mov    rdi,rax
  406b91:	mov    rcx,r13
  406b94:	mov    QWORD PTR [rsp+0x58],0x0
  406b9d:	mov    QWORD PTR [rsp+0x60],0x0
  406ba6:	mov    QWORD PTR [rsp+0x68],0x0
  406baf:	call   0x404c10
  406bb4:	test   eax,eax
  406bb6:	mov    esi,eax
  406bb8:	je     0x406bd0
  406bba:	mov    eax,esi
  406bbc:	add    rsp,0x78
  406bc0:	pop    rbx
  406bc1:	pop    rsi
  406bc2:	pop    rdi
  406bc3:	pop    rbp
  406bc4:	pop    r12
  406bc6:	pop    r13
  406bc8:	ret    
  406bc9:	nop    DWORD PTR [rax+0x0]
  406bd0:	mov    eax,DWORD PTR [rdi]
  406bd2:	mov    rcx,r13
  406bd5:	mov    QWORD PTR [rsp+0x38],rbx
  406bda:	mov    QWORD PTR [rsp+0x20],rbp
  406bdf:	mov    DWORD PTR [rsp+0x28],r12d
  406be4:	mov    DWORD PTR [rsp+0x40],eax
  406be8:	call   0x404d70
  406bed:	test   eax,eax
  406bef:	mov    ebx,eax
  406bf1:	jne    0x406c10
  406bf3:	mov    eax,DWORD PTR [rsp+0x40]
  406bf7:	mov    rcx,r13
  406bfa:	test   eax,eax
  406bfc:	je     0x406c30
  406bfe:	call   0x405c30
  406c03:	mov    esi,0xfffffff9
  406c08:	jmp    0x406bba
  406c0a:	nop    WORD PTR [rax+rax*1+0x0]
  406c10:	cmp    eax,0x4
  406c13:	je     0x406c40
  406c15:	mov    rcx,r13
  406c18:	mov    esi,ebx
  406c1a:	call   0x405c30
  406c1f:	mov    eax,esi
  406c21:	add    rsp,0x78
  406c25:	pop    rbx
  406c26:	pop    rsi
  406c27:	pop    rdi
  406c28:	pop    rbp
  406c29:	pop    r12
  406c2b:	pop    r13
  406c2d:	ret    
  406c2e:	xchg   ax,ax
  406c30:	call   0x405c30
  406c35:	mov    esi,0xfffffff8
  406c3a:	jmp    0x406bba
  406c3f:	nop
  406c40:	mov    eax,DWORD PTR [rsp+0x40]
  406c44:	sub    DWORD PTR [rdi],eax
  406c46:	mov    rcx,r13
  406c49:	call   0x405c30
  406c4e:	jmp    0x406bba
  406c53:	nop    DWORD PTR [rax]
  406c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c60:	lea    rax,[rip+0xf019]        # 0x415c80
  406c67:	ret    
  406c68:	nop    DWORD PTR [rax+rax*1+0x0]
  406c70:	xor    r9d,r9d
  406c73:	mov    r8,rdx
  406c76:	mov    edx,0xffffffff
  406c7b:	jmp    0x406440
  406c80:	mov    r9d,0x1
  406c86:	mov    r8,rdx
  406c89:	mov    edx,ecx
  406c8b:	xor    ecx,ecx
  406c8d:	jmp    0x406440
  406c92:	nop    DWORD PTR [rax+0x0]
  406c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ca0:	sub    rsp,0x38
  406ca4:	xor    eax,eax
  406ca6:	cmp    DWORD PTR [rcx+0x13e8],0x4
  406cad:	je     0x406cd2
  406caf:	mov    r9d,r8d
  406cb2:	mov    r8,rdx
  406cb5:	mov    rdx,rcx
  406cb8:	lea    rcx,[rsp+0x2c]
  406cbd:	call   0x4066f0
  406cc2:	test   DWORD PTR [rsp+0x2c],0xfffffffb
  406cca:	mov    edx,0xffffffff
  406ccf:	cmovne eax,edx
  406cd2:	add    rsp,0x38
  406cd6:	ret    
  406cd7:	nop    WORD PTR [rax+rax*1+0x0]
  406ce0:	push   rbx
  406ce1:	sub    rsp,0x30
  406ce5:	mov    rax,rcx
  406ce8:	lea    rcx,[rsp+0x2c]
  406ced:	mov    ebx,r8d
  406cf0:	mov    r9d,r8d
  406cf3:	mov    r8,rdx
  406cf6:	mov    rdx,rax
  406cf9:	call   0x405e40
  406cfe:	mov    eax,DWORD PTR [rsp+0x2c]
  406d02:	test   eax,eax
  406d04:	mov    eax,0xffffffff
  406d09:	cmove  eax,ebx
  406d0c:	add    rsp,0x30
  406d10:	pop    rbx
  406d11:	ret    
  406d12:	nop    DWORD PTR [rax+0x0]
  406d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d20:	xor    eax,eax
  406d22:	ret    
  406d23:	nop    DWORD PTR [rax]
  406d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d30:	push   rsi
  406d31:	push   rbx
  406d32:	sub    rsp,0x58
  406d36:	test   rcx,rcx
  406d39:	je     0x406d79
  406d3b:	mov    rbx,rcx
  406d3e:	mov    rsi,QWORD PTR [rcx]
  406d41:	lea    rcx,[rsp+0x4c]
  406d46:	cmp    BYTE PTR [rbx+0x1394],0x0
  406d4d:	jne    0x406d80
  406d4f:	mov    rdx,rbx
  406d52:	call   0x406650
  406d57:	mov    rbx,QWORD PTR [rip+0x15626]        # 0x41c384
  406d5e:	call   rbx
  406d60:	cmp    rax,rsi
  406d63:	je     0x406d79
  406d65:	call   rbx
  406d67:	add    rax,0x30
  406d6b:	cmp    rsi,rax
  406d6e:	je     0x406d79
  406d70:	mov    rcx,rsi
  406d73:	call   0x4112d8
  406d78:	nop
  406d79:	add    rsp,0x58
  406d7d:	pop    rbx
  406d7e:	pop    rsi
  406d7f:	ret    
  406d80:	xor    r9d,r9d
  406d83:	xor    r8d,r8d
  406d86:	mov    QWORD PTR [rsp+0x30],0x0
  406d8f:	mov    QWORD PTR [rsp+0x28],0x0
  406d98:	mov    QWORD PTR [rsp+0x20],0x0
  406da1:	mov    rdx,rbx
  406da4:	call   0x405ff0
  406da9:	mov    eax,DWORD PTR [rsp+0x4c]
  406dad:	test   eax,eax
  406daf:	je     0x406d57
  406db1:	mov    QWORD PTR [rsp+0x30],0x0
  406dba:	mov    QWORD PTR [rsp+0x28],0x0
  406dc3:	xor    r9d,r9d
  406dc6:	mov    QWORD PTR [rsp+0x20],0x0
  406dcf:	mov    r8d,0x1
  406dd5:	mov    rdx,rbx
  406dd8:	xor    ecx,ecx
  406dda:	call   0x405ff0
  406ddf:	jmp    0x406d57
  406de4:	xchg   ax,ax
  406de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406df0:	mov    eax,DWORD PTR [rcx+0x13e8]
  406df6:	mov    ecx,0x0
  406dfb:	test   eax,eax
  406dfd:	cmovg  eax,ecx
  406e00:	mov    DWORD PTR [rdx],eax
  406e02:	neg    eax
  406e04:	lea    rdx,[rip+0xf575]        # 0x416380
  406e0b:	cdqe   
  406e0d:	mov    rax,QWORD PTR [rdx+rax*8]
  406e11:	ret    
  406e12:	nop
  406e13:	nop
  406e14:	nop
  406e15:	nop
  406e16:	nop
  406e17:	nop
  406e18:	nop
  406e19:	nop
  406e1a:	nop
  406e1b:	nop
  406e1c:	nop
  406e1d:	nop
  406e1e:	nop
  406e1f:	nop
  406e20:	push   rbx
  406e21:	mov    ebx,DWORD PTR [rcx+0x284]
  406e27:	mov    r9d,edx
  406e2a:	mov    rax,rcx
  406e2d:	shr    r9d,0x18
  406e31:	cmp    ebx,0x7
  406e34:	jle    0x407005
  406e3a:	mov    ecx,DWORD PTR [rcx+0x74]
  406e3d:	mov    r11d,DWORD PTR [rax+0x280]
  406e44:	mov    rbx,QWORD PTR [rax+0x50]
  406e48:	shr    r11d,0x18
  406e4c:	movsxd rcx,ecx
  406e4f:	mov    BYTE PTR [rbx+rcx*1],r11b
  406e53:	mov    ebx,DWORD PTR [rax+0x74]
  406e56:	mov    r11d,DWORD PTR [rax+0x280]
  406e5d:	lea    ecx,[rbx+0x1]
  406e60:	mov    ebx,DWORD PTR [rax+0x284]
  406e66:	shl    r11d,0x8
  406e6a:	mov    DWORD PTR [rax+0x74],ecx
  406e6d:	mov    DWORD PTR [rax+0x280],r11d
  406e74:	sub    ebx,0x8
  406e77:	cmp    ebx,0x7
  406e7a:	mov    DWORD PTR [rax+0x284],ebx
  406e80:	jg     0x406e44
  406e82:	mov    ecx,0x18
  406e87:	mov    r8d,edx
  406e8a:	sub    ecx,ebx
  406e8c:	shr    r8d,0x10
  406e90:	shl    r9d,cl
  406e93:	movzx  r8d,r8b
  406e97:	or     r9d,r11d
  406e9a:	lea    r11d,[rbx+0x8]
  406e9e:	mov    r10d,r9d
  406ea1:	mov    DWORD PTR [rax+0x280],r9d
  406ea8:	cmp    r11d,0x7
  406eac:	mov    DWORD PTR [rax+0x284],r11d
  406eb3:	jle    0x406f01
  406eb5:	mov    ecx,DWORD PTR [rax+0x74]
  406eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ec0:	mov    r11,QWORD PTR [rax+0x50]
  406ec4:	shr    r10d,0x18
  406ec8:	movsxd rcx,ecx
  406ecb:	mov    BYTE PTR [r11+rcx*1],r10b
  406ecf:	mov    ebx,DWORD PTR [rax+0x74]
  406ed2:	mov    r10d,DWORD PTR [rax+0x280]
  406ed9:	lea    ecx,[rbx+0x1]
  406edc:	mov    ebx,DWORD PTR [rax+0x284]
  406ee2:	shl    r10d,0x8
  406ee6:	mov    DWORD PTR [rax+0x74],ecx
  406ee9:	mov    DWORD PTR [rax+0x280],r10d
  406ef0:	lea    r11d,[rbx-0x8]
  406ef4:	cmp    r11d,0x7
  406ef8:	mov    DWORD PTR [rax+0x284],r11d
  406eff:	jg     0x406ec0
  406f01:	mov    ecx,0x18
  406f06:	movzx  ebx,dh
  406f09:	sub    ecx,r11d
  406f0c:	shl    r8d,cl
  406f0f:	mov    r9d,r8d
  406f12:	or     r9d,r10d
  406f15:	lea    r10d,[r11+0x8]
  406f19:	mov    DWORD PTR [rax+0x280],r9d
  406f20:	cmp    r10d,0x7
  406f24:	mov    DWORD PTR [rax+0x284],r10d
  406f2b:	jle    0x406f75
  406f2d:	mov    ecx,DWORD PTR [rax+0x74]
  406f30:	mov    r10,QWORD PTR [rax+0x50]
  406f34:	mov    r8d,r9d
  406f37:	movsxd rcx,ecx
  406f3a:	shr    r8d,0x18
  406f3e:	mov    BYTE PTR [r10+rcx*1],r8b
  406f42:	mov    r8d,DWORD PTR [rax+0x284]
  406f49:	mov    ecx,DWORD PTR [rax+0x74]
  406f4c:	mov    r9d,DWORD PTR [rax+0x280]
  406f53:	lea    r10d,[r8-0x8]
  406f57:	add    ecx,0x1
  406f5a:	shl    r9d,0x8
  406f5e:	cmp    r10d,0x7
  406f62:	mov    DWORD PTR [rax+0x74],ecx
  406f65:	mov    DWORD PTR [rax+0x280],r9d
  406f6c:	mov    DWORD PTR [rax+0x284],r10d
  406f73:	jg     0x406f30
  406f75:	mov    ecx,0x18
  406f7a:	movzx  edx,dl
  406f7d:	sub    ecx,r10d
  406f80:	shl    ebx,cl
  406f82:	mov    r8d,ebx
  406f85:	or     r8d,r9d
  406f88:	lea    r9d,[r10+0x8]
  406f8c:	mov    DWORD PTR [rax+0x280],r8d
  406f93:	cmp    r9d,0x7
  406f97:	mov    DWORD PTR [rax+0x284],r9d
  406f9e:	jle    0x406fe4
  406fa0:	mov    ecx,DWORD PTR [rax+0x74]
  406fa3:	mov    r9,QWORD PTR [rax+0x50]
  406fa7:	shr    r8d,0x18
  406fab:	movsxd rcx,ecx
  406fae:	mov    BYTE PTR [r9+rcx*1],r8b
  406fb2:	mov    ebx,DWORD PTR [rax+0x74]
  406fb5:	mov    r8d,DWORD PTR [rax+0x280]
  406fbc:	lea    ecx,[rbx+0x1]
  406fbf:	mov    ebx,DWORD PTR [rax+0x284]
  406fc5:	shl    r8d,0x8
  406fc9:	mov    DWORD PTR [rax+0x74],ecx
  406fcc:	mov    DWORD PTR [rax+0x280],r8d
  406fd3:	lea    r9d,[rbx-0x8]
  406fd7:	cmp    r9d,0x7
  406fdb:	mov    DWORD PTR [rax+0x284],r9d
  406fe2:	jg     0x406fa3
  406fe4:	mov    ecx,0x18
  406fe9:	sub    ecx,r9d
  406fec:	add    r9d,0x8
  406ff0:	shl    edx,cl
  406ff2:	mov    DWORD PTR [rax+0x284],r9d
  406ff9:	or     r8d,edx
  406ffc:	mov    DWORD PTR [rax+0x280],r8d
  407003:	pop    rbx
  407004:	ret    
  407005:	mov    r11d,DWORD PTR [rcx+0x280]
  40700c:	jmp    0x406e82
  407011:	nop    DWORD PTR [rax+rax*1+0x0]
  407016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407020:	mov    DWORD PTR [rcx+0x284],0x0
  40702a:	mov    DWORD PTR [rcx+0x280],0x0
  407034:	ret    
  407035:	nop
  407036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407040:	push   r15
  407042:	push   r14
  407044:	push   r13
  407046:	push   r12
  407048:	push   rbp
  407049:	push   rdi
  40704a:	push   rsi
  40704b:	push   rbx
  40704c:	sub    rsp,0x208
  407053:	movaps XMMWORD PTR [rsp+0x1e0],xmm6
  40705b:	movaps XMMWORD PTR [rsp+0x1f0],xmm7
  407063:	mov    rbx,rcx
  407066:	mov    esi,DWORD PTR [rcx+0x6c]
  407069:	mov    DWORD PTR [rsp+0xac],edx
  407070:	test   esi,esi
  407072:	jle    0x4073c9
  407078:	mov    ebp,DWORD PTR [rcx+0x288]
  40707e:	mov    edi,DWORD PTR [rcx+0x28c]
  407084:	mov    r12d,DWORD PTR [rcx+0x294]
  40708b:	not    ebp
  40708d:	rol    edi,1
  40708f:	xor    edi,ebp
  407091:	cmp    r12d,0x1
  407095:	mov    DWORD PTR [rcx+0x288],ebp
  40709b:	mov    DWORD PTR [rcx+0x28c],edi
  4070a1:	jle    0x4070aa
  4070a3:	mov    DWORD PTR [rcx+0x74],0x0
  4070aa:	cmp    DWORD PTR [rbx+0x290],0x1
  4070b1:	jle    0x4070d7
  4070b3:	call   QWORD PTR [rip+0x152cb]        # 0x41c384
  4070b9:	lea    rdx,[rip+0xf340]        # 0x416400
  4070c0:	lea    rcx,[rax+0x60]
  4070c4:	mov    DWORD PTR [rsp+0x28],esi
  4070c8:	mov    DWORD PTR [rsp+0x20],edi
  4070cc:	mov    r9d,ebp
  4070cf:	mov    r8d,r12d
  4070d2:	call   0x4112b0
  4070d7:	mov    rcx,rbx
  4070da:	call   0x40f410
  4070df:	movsxd rdx,DWORD PTR [rbx+0x6c]
  4070e3:	mov    rax,rdx
  4070e6:	add    rdx,QWORD PTR [rbx+0x20]
  4070ea:	cmp    DWORD PTR [rbx+0x294],0x1
  4070f1:	mov    QWORD PTR [rbx+0x50],rdx
  4070f5:	je     0x40740f
  4070fb:	test   eax,eax
  4070fd:	jle    0x4073dd
  407103:	mov    edx,DWORD PTR [rbx+0x284]
  407109:	cmp    edx,0x7
  40710c:	jle    0x407859
  407112:	mov    ecx,DWORD PTR [rbx+0x74]
  407115:	mov    eax,DWORD PTR [rbx+0x280]
  40711b:	mov    rdx,QWORD PTR [rbx+0x50]
  40711f:	shr    eax,0x18
  407122:	movsxd rcx,ecx
  407125:	mov    BYTE PTR [rdx+rcx*1],al
  407128:	mov    eax,DWORD PTR [rbx+0x74]
  40712b:	mov    edi,DWORD PTR [rbx+0x284]
  407131:	lea    ecx,[rax+0x1]
  407134:	mov    eax,DWORD PTR [rbx+0x280]
  40713a:	lea    edx,[rdi-0x8]
  40713d:	mov    DWORD PTR [rbx+0x74],ecx
  407140:	shl    eax,0x8
  407143:	cmp    edx,0x7
  407146:	mov    DWORD PTR [rbx+0x284],edx
  40714c:	mov    DWORD PTR [rbx+0x280],eax
  407152:	jg     0x40711b
  407154:	mov    ecx,0x18
  407159:	mov    r8d,0x31
  40715f:	sub    ecx,edx
  407161:	add    edx,0x8
  407164:	shl    r8d,cl
  407167:	mov    DWORD PTR [rbx+0x284],edx
  40716d:	or     eax,r8d
  407170:	cmp    edx,0x7
  407173:	mov    DWORD PTR [rbx+0x280],eax
  407179:	jle    0x4071b7
  40717b:	mov    ecx,DWORD PTR [rbx+0x74]
  40717e:	mov    rdx,QWORD PTR [rbx+0x50]
  407182:	shr    eax,0x18
  407185:	movsxd rcx,ecx
  407188:	mov    BYTE PTR [rdx+rcx*1],al
  40718b:	mov    eax,DWORD PTR [rbx+0x74]
  40718e:	mov    edi,DWORD PTR [rbx+0x284]
  407194:	lea    ecx,[rax+0x1]
  407197:	mov    eax,DWORD PTR [rbx+0x280]
  40719d:	lea    edx,[rdi-0x8]
  4071a0:	mov    DWORD PTR [rbx+0x74],ecx
  4071a3:	shl    eax,0x8
  4071a6:	cmp    edx,0x7
  4071a9:	mov    DWORD PTR [rbx+0x284],edx
  4071af:	mov    DWORD PTR [rbx+0x280],eax
  4071b5:	jg     0x40717e
  4071b7:	mov    ecx,0x18
  4071bc:	mov    r8d,0x41
  4071c2:	sub    ecx,edx
  4071c4:	add    edx,0x8
  4071c7:	shl    r8d,cl
  4071ca:	mov    DWORD PTR [rbx+0x284],edx
  4071d0:	or     eax,r8d
  4071d3:	cmp    edx,0x7
  4071d6:	mov    DWORD PTR [rbx+0x280],eax
  4071dc:	jle    0x40721a
  4071de:	mov    ecx,DWORD PTR [rbx+0x74]
  4071e1:	mov    rdx,QWORD PTR [rbx+0x50]
  4071e5:	shr    eax,0x18
  4071e8:	movsxd rcx,ecx
  4071eb:	mov    BYTE PTR [rdx+rcx*1],al
  4071ee:	mov    eax,DWORD PTR [rbx+0x74]
  4071f1:	mov    edi,DWORD PTR [rbx+0x284]
  4071f7:	lea    ecx,[rax+0x1]
  4071fa:	mov    eax,DWORD PTR [rbx+0x280]
  407200:	lea    edx,[rdi-0x8]
  407203:	mov    DWORD PTR [rbx+0x74],ecx
  407206:	shl    eax,0x8
  407209:	cmp    edx,0x7
  40720c:	mov    DWORD PTR [rbx+0x284],edx
  407212:	mov    DWORD PTR [rbx+0x280],eax
  407218:	jg     0x4071e1
  40721a:	mov    ecx,0x18
  40721f:	mov    r8d,0x59
  407225:	sub    ecx,edx
  407227:	add    edx,0x8
  40722a:	shl    r8d,cl
  40722d:	mov    DWORD PTR [rbx+0x284],edx
  407233:	or     eax,r8d
  407236:	cmp    edx,0x7
  407239:	mov    DWORD PTR [rbx+0x280],eax
  40723f:	jle    0x40727d
  407241:	mov    ecx,DWORD PTR [rbx+0x74]
  407244:	mov    rdx,QWORD PTR [rbx+0x50]
  407248:	shr    eax,0x18
  40724b:	movsxd rcx,ecx
  40724e:	mov    BYTE PTR [rdx+rcx*1],al
  407251:	mov    eax,DWORD PTR [rbx+0x74]
  407254:	mov    edi,DWORD PTR [rbx+0x284]
  40725a:	lea    ecx,[rax+0x1]
  40725d:	mov    eax,DWORD PTR [rbx+0x280]
  407263:	lea    edx,[rdi-0x8]
  407266:	mov    DWORD PTR [rbx+0x74],ecx
  407269:	shl    eax,0x8
  40726c:	cmp    edx,0x7
  40726f:	mov    DWORD PTR [rbx+0x284],edx
  407275:	mov    DWORD PTR [rbx+0x280],eax
  40727b:	jg     0x407244
  40727d:	mov    ecx,0x18
  407282:	mov    r8d,0x26
  407288:	sub    ecx,edx
  40728a:	add    edx,0x8
  40728d:	shl    r8d,cl
  407290:	mov    DWORD PTR [rbx+0x284],edx
  407296:	or     eax,r8d
  407299:	cmp    edx,0x7
  40729c:	mov    DWORD PTR [rbx+0x280],eax
  4072a2:	jle    0x4072e0
  4072a4:	mov    ecx,DWORD PTR [rbx+0x74]
  4072a7:	mov    rdx,QWORD PTR [rbx+0x50]
  4072ab:	shr    eax,0x18
  4072ae:	movsxd rcx,ecx
  4072b1:	mov    BYTE PTR [rdx+rcx*1],al
  4072b4:	mov    eax,DWORD PTR [rbx+0x74]
  4072b7:	mov    edi,DWORD PTR [rbx+0x284]
  4072bd:	lea    ecx,[rax+0x1]
  4072c0:	mov    eax,DWORD PTR [rbx+0x280]
  4072c6:	lea    edx,[rdi-0x8]
  4072c9:	mov    DWORD PTR [rbx+0x74],ecx
  4072cc:	shl    eax,0x8
  4072cf:	cmp    edx,0x7
  4072d2:	mov    DWORD PTR [rbx+0x284],edx
  4072d8:	mov    DWORD PTR [rbx+0x280],eax
  4072de:	jg     0x4072a7
  4072e0:	mov    ecx,0x18
  4072e5:	mov    r8d,0x53
  4072eb:	sub    ecx,edx
  4072ed:	add    edx,0x8
  4072f0:	shl    r8d,cl
  4072f3:	mov    DWORD PTR [rbx+0x284],edx
  4072f9:	or     eax,r8d
  4072fc:	cmp    edx,0x7
  4072ff:	mov    DWORD PTR [rbx+0x280],eax
  407305:	jle    0x407343
  407307:	mov    ecx,DWORD PTR [rbx+0x74]
  40730a:	mov    rdx,QWORD PTR [rbx+0x50]
  40730e:	shr    eax,0x18
  407311:	movsxd rcx,ecx
  407314:	mov    BYTE PTR [rdx+rcx*1],al
  407317:	mov    eax,DWORD PTR [rbx+0x74]
  40731a:	mov    edi,DWORD PTR [rbx+0x284]
  407320:	lea    ecx,[rax+0x1]
  407323:	mov    eax,DWORD PTR [rbx+0x280]
  407329:	lea    edx,[rdi-0x8]
  40732c:	mov    DWORD PTR [rbx+0x74],ecx
  40732f:	shl    eax,0x8
  407332:	cmp    edx,0x7
  407335:	mov    DWORD PTR [rbx+0x284],edx
  40733b:	mov    DWORD PTR [rbx+0x280],eax
  407341:	jg     0x40730a
  407343:	mov    ecx,0x18
  407348:	mov    r8d,0x59
  40734e:	sub    ecx,edx
  407350:	add    edx,0x8
  407353:	shl    r8d,cl
  407356:	mov    DWORD PTR [rbx+0x284],edx
  40735c:	mov    edx,DWORD PTR [rbx+0x288]
  407362:	or     eax,r8d
  407365:	mov    rcx,rbx
  407368:	mov    DWORD PTR [rbx+0x280],eax
  40736e:	call   0x406e20
  407373:	mov    eax,DWORD PTR [rbx+0x284]
  407379:	cmp    eax,0x7
  40737c:	jle    0x407864
  407382:	mov    ecx,DWORD PTR [rbx+0x74]
  407385:	mov    edx,DWORD PTR [rbx+0x280]
  40738b:	mov    rax,QWORD PTR [rbx+0x50]
  40738f:	shr    edx,0x18
  407392:	movsxd rcx,ecx
  407395:	mov    BYTE PTR [rax+rcx*1],dl
  407398:	mov    eax,DWORD PTR [rbx+0x74]
  40739b:	mov    edx,DWORD PTR [rbx+0x280]
  4073a1:	lea    ecx,[rax+0x1]
  4073a4:	mov    eax,DWORD PTR [rbx+0x284]
  4073aa:	shl    edx,0x8
  4073ad:	mov    DWORD PTR [rbx+0x74],ecx
  4073b0:	mov    DWORD PTR [rbx+0x280],edx
  4073b6:	sub    eax,0x8
  4073b9:	cmp    eax,0x7
  4073bc:	mov    DWORD PTR [rbx+0x284],eax
  4073c2:	jg     0x40738b
  4073c4:	jmp    0x40786a
  4073c9:	movsxd rax,esi
  4073cc:	add    rax,QWORD PTR [rcx+0x20]
  4073d0:	cmp    DWORD PTR [rcx+0x294],0x1
  4073d7:	mov    QWORD PTR [rcx+0x50],rax
  4073db:	je     0x40740f
  4073dd:	cmp    BYTE PTR [rsp+0xac],0x0
  4073e5:	jne    0x407562
  4073eb:	movaps xmm6,XMMWORD PTR [rsp+0x1e0]
  4073f3:	movaps xmm7,XMMWORD PTR [rsp+0x1f0]
  4073fb:	add    rsp,0x208
  407402:	pop    rbx
  407403:	pop    rsi
  407404:	pop    rdi
  407405:	pop    rbp
  407406:	pop    r12
  407408:	pop    r13
  40740a:	pop    r14
  40740c:	pop    r15
  40740e:	ret    
  40740f:	mov    r8d,DWORD PTR [rbx+0x74]
  407413:	mov    DWORD PTR [rbx+0x280],0x42000000
  40741d:	mov    eax,0x42000000
  407422:	mov    DWORD PTR [rbx+0x284],0x8
  40742c:	mov    rdx,QWORD PTR [rbx+0x50]
  407430:	shr    eax,0x18
  407433:	movsxd r8,r8d
  407436:	mov    BYTE PTR [rdx+r8*1],al
  40743a:	mov    eax,DWORD PTR [rbx+0x74]
  40743d:	mov    edx,DWORD PTR [rbx+0x284]
  407443:	lea    r8d,[rax+0x1]
  407447:	mov    eax,DWORD PTR [rbx+0x280]
  40744d:	lea    r9d,[rdx-0x8]
  407451:	mov    DWORD PTR [rbx+0x74],r8d
  407455:	shl    eax,0x8
  407458:	cmp    r9d,0x7
  40745c:	mov    DWORD PTR [rbx+0x284],r9d
  407463:	mov    DWORD PTR [rbx+0x280],eax
  407469:	jg     0x40742c
  40746b:	mov    ecx,0x18
  407470:	mov    DWORD PTR [rbx+0x284],edx
  407476:	sub    ecx,r9d
  407479:	mov    r9d,0x5a
  40747f:	shl    r9d,cl
  407482:	or     eax,r9d
  407485:	cmp    edx,0x7
  407488:	mov    DWORD PTR [rbx+0x280],eax
  40748e:	jle    0x4074cc
  407490:	mov    rdx,QWORD PTR [rbx+0x50]
  407494:	shr    eax,0x18
  407497:	movsxd r8,r8d
  40749a:	mov    BYTE PTR [rdx+r8*1],al
  40749e:	mov    eax,DWORD PTR [rbx+0x74]
  4074a1:	mov    edi,DWORD PTR [rbx+0x284]
  4074a7:	lea    r8d,[rax+0x1]
  4074ab:	mov    eax,DWORD PTR [rbx+0x280]
  4074b1:	lea    edx,[rdi-0x8]
  4074b4:	mov    DWORD PTR [rbx+0x74],r8d
  4074b8:	shl    eax,0x8
  4074bb:	cmp    edx,0x7
  4074be:	mov    DWORD PTR [rbx+0x284],edx
  4074c4:	mov    DWORD PTR [rbx+0x280],eax
  4074ca:	jg     0x407490
  4074cc:	movzx  edi,BYTE PTR [rbx+0x298]
  4074d3:	mov    ecx,0x18
  4074d8:	mov    r8d,0x68
  4074de:	sub    ecx,edx
  4074e0:	add    edx,0x8
  4074e3:	shl    r8d,cl
  4074e6:	mov    DWORD PTR [rbx+0x284],edx
  4074ec:	or     eax,r8d
  4074ef:	cmp    edx,0x7
  4074f2:	lea    r8d,[rdi+0x30]
  4074f6:	mov    DWORD PTR [rbx+0x280],eax
  4074fc:	movzx  r8d,r8b
  407500:	jle    0x40753e
  407502:	mov    ecx,DWORD PTR [rbx+0x74]
  407505:	mov    rdx,QWORD PTR [rbx+0x50]
  407509:	shr    eax,0x18
  40750c:	movsxd rcx,ecx
  40750f:	mov    BYTE PTR [rdx+rcx*1],al
  407512:	mov    eax,DWORD PTR [rbx+0x74]
  407515:	mov    edi,DWORD PTR [rbx+0x284]
  40751b:	lea    ecx,[rax+0x1]
  40751e:	mov    eax,DWORD PTR [rbx+0x280]
  407524:	lea    edx,[rdi-0x8]
  407527:	mov    DWORD PTR [rbx+0x74],ecx
  40752a:	shl    eax,0x8
  40752d:	cmp    edx,0x7
  407530:	mov    DWORD PTR [rbx+0x284],edx
  407536:	mov    DWORD PTR [rbx+0x280],eax
  40753c:	jg     0x407505
  40753e:	mov    ecx,0x18
  407543:	sub    ecx,edx
  407545:	add    edx,0x8
  407548:	shl    r8d,cl
  40754b:	mov    DWORD PTR [rbx+0x284],edx
  407551:	or     eax,r8d
  407554:	mov    DWORD PTR [rbx+0x280],eax
  40755a:	mov    eax,DWORD PTR [rbx+0x6c]
  40755d:	jmp    0x4070fb
  407562:	mov    edx,DWORD PTR [rbx+0x284]
  407568:	cmp    edx,0x7
  40756b:	jle    0x40784e
  407571:	mov    ecx,DWORD PTR [rbx+0x74]
  407574:	mov    eax,DWORD PTR [rbx+0x280]
  40757a:	mov    rdx,QWORD PTR [rbx+0x50]
  40757e:	shr    eax,0x18
  407581:	movsxd rcx,ecx
  407584:	mov    BYTE PTR [rdx+rcx*1],al
  407587:	mov    eax,DWORD PTR [rbx+0x74]
  40758a:	mov    edi,DWORD PTR [rbx+0x284]
  407590:	lea    ecx,[rax+0x1]
  407593:	mov    eax,DWORD PTR [rbx+0x280]
  407599:	lea    edx,[rdi-0x8]
  40759c:	mov    DWORD PTR [rbx+0x74],ecx
  40759f:	shl    eax,0x8
  4075a2:	cmp    edx,0x7
  4075a5:	mov    DWORD PTR [rbx+0x284],edx
  4075ab:	mov    DWORD PTR [rbx+0x280],eax
  4075b1:	jg     0x40757a
  4075b3:	mov    ecx,0x18
  4075b8:	mov    r8d,0x17
  4075be:	sub    ecx,edx
  4075c0:	add    edx,0x8
  4075c3:	shl    r8d,cl
  4075c6:	mov    DWORD PTR [rbx+0x284],edx
  4075cc:	or     eax,r8d
  4075cf:	cmp    edx,0x7
  4075d2:	mov    DWORD PTR [rbx+0x280],eax
  4075d8:	jle    0x407616
  4075da:	mov    ecx,DWORD PTR [rbx+0x74]
  4075dd:	mov    rdx,QWORD PTR [rbx+0x50]
  4075e1:	shr    eax,0x18
  4075e4:	movsxd rcx,ecx
  4075e7:	mov    BYTE PTR [rdx+rcx*1],al
  4075ea:	mov    eax,DWORD PTR [rbx+0x74]
  4075ed:	mov    edi,DWORD PTR [rbx+0x284]
  4075f3:	lea    ecx,[rax+0x1]
  4075f6:	mov    eax,DWORD PTR [rbx+0x280]
  4075fc:	lea    edx,[rdi-0x8]
  4075ff:	mov    DWORD PTR [rbx+0x74],ecx
  407602:	shl    eax,0x8
  407605:	cmp    edx,0x7
  407608:	mov    DWORD PTR [rbx+0x284],edx
  40760e:	mov    DWORD PTR [rbx+0x280],eax
  407614:	jg     0x4075dd
  407616:	mov    ecx,0x18
  40761b:	mov    r8d,0x72
  407621:	sub    ecx,edx
  407623:	add    edx,0x8
  407626:	shl    r8d,cl
  407629:	mov    DWORD PTR [rbx+0x284],edx
  40762f:	or     eax,r8d
  407632:	cmp    edx,0x7
  407635:	mov    DWORD PTR [rbx+0x280],eax
  40763b:	jle    0x407679
  40763d:	mov    ecx,DWORD PTR [rbx+0x74]
  407640:	mov    rdx,QWORD PTR [rbx+0x50]
  407644:	shr    eax,0x18
  407647:	movsxd rcx,ecx
  40764a:	mov    BYTE PTR [rdx+rcx*1],al
  40764d:	mov    eax,DWORD PTR [rbx+0x74]
  407650:	mov    edi,DWORD PTR [rbx+0x284]
  407656:	lea    ecx,[rax+0x1]
  407659:	mov    eax,DWORD PTR [rbx+0x280]
  40765f:	lea    edx,[rdi-0x8]
  407662:	mov    DWORD PTR [rbx+0x74],ecx
  407665:	shl    eax,0x8
  407668:	cmp    edx,0x7
  40766b:	mov    DWORD PTR [rbx+0x284],edx
  407671:	mov    DWORD PTR [rbx+0x280],eax
  407677:	jg     0x407640
  407679:	mov    ecx,0x18
  40767e:	mov    r8d,0x45
  407684:	sub    ecx,edx
  407686:	add    edx,0x8
  407689:	shl    r8d,cl
  40768c:	mov    DWORD PTR [rbx+0x284],edx
  407692:	or     eax,r8d
  407695:	cmp    edx,0x7
  407698:	mov    DWORD PTR [rbx+0x280],eax
  40769e:	jle    0x4076dc
  4076a0:	mov    ecx,DWORD PTR [rbx+0x74]
  4076a3:	mov    rdx,QWORD PTR [rbx+0x50]
  4076a7:	shr    eax,0x18
  4076aa:	movsxd rcx,ecx
  4076ad:	mov    BYTE PTR [rdx+rcx*1],al
  4076b0:	mov    eax,DWORD PTR [rbx+0x74]
  4076b3:	mov    edi,DWORD PTR [rbx+0x284]
  4076b9:	lea    ecx,[rax+0x1]
  4076bc:	mov    eax,DWORD PTR [rbx+0x280]
  4076c2:	lea    edx,[rdi-0x8]
  4076c5:	mov    DWORD PTR [rbx+0x74],ecx
  4076c8:	shl    eax,0x8
  4076cb:	cmp    edx,0x7
  4076ce:	mov    DWORD PTR [rbx+0x284],edx
  4076d4:	mov    DWORD PTR [rbx+0x280],eax
  4076da:	jg     0x4076a3
  4076dc:	mov    ecx,0x18
  4076e1:	mov    r8d,0x38
  4076e7:	sub    ecx,edx
  4076e9:	add    edx,0x8
  4076ec:	shl    r8d,cl
  4076ef:	mov    DWORD PTR [rbx+0x284],edx
  4076f5:	or     eax,r8d
  4076f8:	cmp    edx,0x7
  4076fb:	mov    DWORD PTR [rbx+0x280],eax
  407701:	jle    0x40773f
  407703:	mov    ecx,DWORD PTR [rbx+0x74]
  407706:	mov    rdx,QWORD PTR [rbx+0x50]
  40770a:	shr    eax,0x18
  40770d:	movsxd rcx,ecx
  407710:	mov    BYTE PTR [rdx+rcx*1],al
  407713:	mov    eax,DWORD PTR [rbx+0x74]
  407716:	mov    edi,DWORD PTR [rbx+0x284]
  40771c:	lea    ecx,[rax+0x1]
  40771f:	mov    eax,DWORD PTR [rbx+0x280]
  407725:	lea    edx,[rdi-0x8]
  407728:	mov    DWORD PTR [rbx+0x74],ecx
  40772b:	shl    eax,0x8
  40772e:	cmp    edx,0x7
  407731:	mov    DWORD PTR [rbx+0x284],edx
  407737:	mov    DWORD PTR [rbx+0x280],eax
  40773d:	jg     0x407706
  40773f:	mov    ecx,0x18
  407744:	mov    r8d,0x50
  40774a:	sub    ecx,edx
  40774c:	add    edx,0x8
  40774f:	shl    r8d,cl
  407752:	mov    DWORD PTR [rbx+0x284],edx
  407758:	or     eax,r8d
  40775b:	cmp    edx,0x7
  40775e:	mov    DWORD PTR [rbx+0x280],eax
  407764:	jle    0x4077a2
  407766:	mov    ecx,DWORD PTR [rbx+0x74]
  407769:	mov    rdx,QWORD PTR [rbx+0x50]
  40776d:	shr    eax,0x18
  407770:	movsxd rcx,ecx
  407773:	mov    BYTE PTR [rdx+rcx*1],al
  407776:	mov    eax,DWORD PTR [rbx+0x74]
  407779:	mov    edi,DWORD PTR [rbx+0x284]
  40777f:	lea    ecx,[rax+0x1]
  407782:	mov    eax,DWORD PTR [rbx+0x280]
  407788:	lea    edx,[rdi-0x8]
  40778b:	mov    DWORD PTR [rbx+0x74],ecx
  40778e:	shl    eax,0x8
  407791:	cmp    edx,0x7
  407794:	mov    DWORD PTR [rbx+0x284],edx
  40779a:	mov    DWORD PTR [rbx+0x280],eax
  4077a0:	jg     0x407769
  4077a2:	mov    ecx,0x18
  4077a7:	mov    r8d,0x90
  4077ad:	sub    ecx,edx
  4077af:	add    edx,0x8
  4077b2:	shl    r8d,cl
  4077b5:	mov    DWORD PTR [rbx+0x284],edx
  4077bb:	mov    edx,DWORD PTR [rbx+0x28c]
  4077c1:	or     eax,r8d
  4077c4:	mov    rcx,rbx
  4077c7:	mov    DWORD PTR [rbx+0x280],eax
  4077cd:	call   0x406e20
  4077d2:	cmp    DWORD PTR [rbx+0x290],0x1
  4077d9:	jle    0x4077fa
  4077db:	mov    esi,DWORD PTR [rbx+0x28c]
  4077e1:	call   QWORD PTR [rip+0x14b9d]        # 0x41c384
  4077e7:	lea    rdx,[rip+0xed4a]        # 0x416538
  4077ee:	lea    rcx,[rax+0x60]
  4077f2:	mov    r8d,esi
  4077f5:	call   0x4112b0
  4077fa:	mov    eax,DWORD PTR [rbx+0x284]
  407800:	test   eax,eax
  407802:	jle    0x4073eb
  407808:	mov    edx,DWORD PTR [rbx+0x74]
  40780b:	mov    eax,DWORD PTR [rbx+0x280]
  407811:	mov    rcx,QWORD PTR [rbx+0x50]
  407815:	shr    eax,0x18
  407818:	movsxd rdx,edx
  40781b:	mov    BYTE PTR [rcx+rdx*1],al
  40781e:	mov    eax,DWORD PTR [rbx+0x74]
  407821:	mov    edi,DWORD PTR [rbx+0x284]
  407827:	lea    edx,[rax+0x1]
  40782a:	mov    eax,DWORD PTR [rbx+0x280]
  407830:	lea    ecx,[rdi-0x8]
  407833:	mov    DWORD PTR [rbx+0x74],edx
  407836:	shl    eax,0x8
  407839:	test   ecx,ecx
  40783b:	mov    DWORD PTR [rbx+0x284],ecx
  407841:	mov    DWORD PTR [rbx+0x280],eax
  407847:	jg     0x407811
  407849:	jmp    0x4073eb
  40784e:	mov    eax,DWORD PTR [rbx+0x280]
  407854:	jmp    0x4075b3
  407859:	mov    eax,DWORD PTR [rbx+0x280]
  40785f:	jmp    0x407154
  407864:	mov    edx,DWORD PTR [rbx+0x280]
  40786a:	add    eax,0x1
  40786d:	mov    r8d,DWORD PTR [rbx+0x30]
  407871:	cmp    eax,0x8
  407874:	mov    DWORD PTR [rbx+0x284],eax
  40787a:	jne    0x4078b8
  40787c:	mov    ecx,DWORD PTR [rbx+0x74]
  40787f:	mov    rax,QWORD PTR [rbx+0x50]
  407883:	shr    edx,0x18
  407886:	movsxd rcx,ecx
  407889:	mov    BYTE PTR [rax+rcx*1],dl
  40788c:	mov    eax,DWORD PTR [rbx+0x74]
  40788f:	mov    edx,DWORD PTR [rbx+0x280]
  407895:	lea    ecx,[rax+0x1]
  407898:	mov    eax,DWORD PTR [rbx+0x284]
  40789e:	shl    edx,0x8
  4078a1:	mov    DWORD PTR [rbx+0x74],ecx
  4078a4:	mov    DWORD PTR [rbx+0x280],edx
  4078aa:	sub    eax,0x8
  4078ad:	cmp    eax,0x7
  4078b0:	mov    DWORD PTR [rbx+0x284],eax
  4078b6:	jg     0x40787f
  4078b8:	mov    ecx,0x8
  4078bd:	mov    r9,QWORD PTR [rbx+0x38]
  4078c1:	mov    rdi,QWORD PTR [rbx+0x40]
  4078c5:	sub    ecx,eax
  4078c7:	mov    r10,QWORD PTR [rbx+0x48]
  4078cb:	add    eax,0x18
  4078ce:	shl    r8d,cl
  4078d1:	mov    DWORD PTR [rbx+0x284],eax
  4078d7:	lea    rax,[rbx+0x80]
  4078de:	or     edx,r8d
  4078e1:	mov    DWORD PTR [rbx+0x7c],0x0
  4078e8:	xor    r8d,r8d
  4078eb:	mov    DWORD PTR [rbx+0x280],edx
  4078f1:	lea    rdx,[rbx+0x180]
  4078f8:	cmp    BYTE PTR [rax],0x0
  4078fb:	je     0x40790c
  4078fd:	mov    BYTE PTR [rax+0x100],r8b
  407904:	add    r8d,0x1
  407908:	mov    DWORD PTR [rbx+0x7c],r8d
  40790c:	add    rax,0x1
  407910:	cmp    rax,rdx
  407913:	jne    0x4078f8
  407915:	lea    edx,[r8+0x1]
  407919:	lea    rax,[rbx+0x2a0]
  407920:	mov    ebp,r8d
  407923:	mov    r11,rdx
  407926:	lea    rdx,[rbx+rdx*4+0x2a4]
  40792e:	mov    DWORD PTR [rax],0x0
  407934:	add    rax,0x4
  407938:	cmp    rax,rdx
  40793b:	jne    0x40792e
  40793d:	test   r8d,r8d
  407940:	je     0x40796c
  407942:	lea    edx,[r8-0x1]
  407946:	lea    rcx,[rsp+0xe0]
  40794e:	xor    eax,eax
  407950:	add    rdx,0x1
  407954:	mov    QWORD PTR [rsp+0x60],rcx
  407959:	mov    rcx,QWORD PTR [rsp+0x60]
  40795e:	mov    BYTE PTR [rcx+rax*1],al
  407961:	add    rax,0x1
  407965:	cmp    rax,rdx
  407968:	jne    0x407959
  40796a:	jmp    0x407979
  40796c:	lea    rax,[rsp+0xe0]
  407974:	mov    QWORD PTR [rsp+0x60],rax
  407979:	mov    r12d,DWORD PTR [rbx+0x6c]
  40797d:	test   r12d,r12d
  407980:	jle    0x407b1a
  407986:	mov    rbp,QWORD PTR [rsp+0x60]
  40798b:	xor    eax,eax
  40798d:	xor    edx,edx
  40798f:	xor    esi,esi
  407991:	mov    ecx,DWORD PTR [r9]
  407994:	movzx  r14d,BYTE PTR [rsp+0xe0]
  40799d:	sub    ecx,0x1
  4079a0:	lea    r13d,[rcx+r12*1]
  4079a4:	test   ecx,ecx
  4079a6:	cmovs  ecx,r13d
  4079aa:	movsxd rcx,ecx
  4079ad:	movzx  ecx,BYTE PTR [rdi+rcx*1]
  4079b1:	movzx  r13d,BYTE PTR [rbx+rcx*1+0x180]
  4079ba:	cmp    r13b,r14b
  4079bd:	je     0x407b12
  4079c3:	test   edx,edx
  4079c5:	je     0x407a26
  4079c7:	lea    r12d,[rax+0x1]
  4079cb:	cdqe   
  4079cd:	sub    edx,0x1
  4079d0:	lea    rcx,[r10+rax*2]
  4079d4:	jmp    0x4079fb
  4079d6:	mov    eax,0x1
  4079db:	add    rcx,0x2
  4079df:	mov    WORD PTR [rcx-0x2],ax
  4079e3:	mov    eax,r12d
  4079e6:	add    DWORD PTR [rbx+0x2a4],0x1
  4079ed:	add    r12d,0x1
  4079f1:	cmp    edx,0x1
  4079f4:	jle    0x407a1d
  4079f6:	sub    edx,0x2
  4079f9:	sar    edx,1
  4079fb:	test   dl,0x1
  4079fe:	jne    0x4079d6
  407a00:	xor    eax,eax
  407a02:	add    rcx,0x2
  407a06:	mov    WORD PTR [rcx-0x2],ax
  407a0a:	mov    eax,r12d
  407a0d:	add    DWORD PTR [rbx+0x2a0],0x1
  407a14:	add    r12d,0x1
  407a18:	cmp    edx,0x1
  407a1b:	jg     0x4079f6
  407a1d:	movzx  r14d,BYTE PTR [rsp+0xe0]
  407a26:	movzx  ecx,BYTE PTR [rsp+0xe1]
  407a2e:	mov    BYTE PTR [rsp+0xe1],r14b
  407a36:	cmp    r13b,cl
  407a39:	je     0x407b09
  407a3f:	lea    rdx,[rbp+0x1]
  407a43:	mov    r12d,ecx
  407a46:	add    rdx,0x1
  407a4a:	movzx  ecx,BYTE PTR [rdx]
  407a4d:	mov    BYTE PTR [rdx],r12b
  407a50:	cmp    r13b,cl
  407a53:	mov    r12d,ecx
  407a56:	jne    0x407a46
  407a58:	sub    rdx,rbp
  407a5b:	mov    BYTE PTR [rsp+0xe0],cl
  407a62:	movsxd rcx,eax
  407a65:	lea    r12d,[rdx+0x1]
  407a69:	movsxd rdx,edx
  407a6c:	add    eax,0x1
  407a6f:	mov    WORD PTR [r10+rcx*2],r12w
  407a74:	add    DWORD PTR [rbx+rdx*4+0x2a4],0x1
  407a7c:	xor    edx,edx
  407a7e:	mov    r12d,DWORD PTR [rbx+0x6c]
  407a82:	add    esi,0x1
  407a85:	add    r9,0x4
  407a89:	cmp    r12d,esi
  407a8c:	jg     0x407991
  407a92:	test   edx,edx
  407a94:	je     0x407fdc
  407a9a:	lea    r9d,[rax+0x1]
  407a9e:	cdqe   
  407aa0:	sub    edx,0x1
  407aa3:	lea    rcx,[r10+rax*2]
  407aa7:	jmp    0x407ad5
  407aa9:	nop    DWORD PTR [rax+0x0]
  407ab0:	mov    eax,0x1
  407ab5:	mov    esi,r9d
  407ab8:	add    rcx,0x2
  407abc:	mov    WORD PTR [rcx-0x2],ax
  407ac0:	add    r9d,0x1
  407ac4:	add    DWORD PTR [rbx+0x2a4],0x1
  407acb:	cmp    edx,0x1
  407ace:	jle    0x407af7
  407ad0:	sub    edx,0x2
  407ad3:	sar    edx,1
  407ad5:	test   dl,0x1
  407ad8:	jne    0x407ab0
  407ada:	xor    eax,eax
  407adc:	mov    esi,r9d
  407adf:	add    rcx,0x2
  407ae3:	mov    WORD PTR [rcx-0x2],ax
  407ae7:	add    r9d,0x1
  407aeb:	add    DWORD PTR [rbx+0x2a0],0x1
  407af2:	cmp    edx,0x1
  407af5:	jg     0x407ad0
  407af7:	movsxd rdx,esi
  407afa:	mov    rdi,QWORD PTR [rbx+0x48]
  407afe:	add    esi,0x1
  407b01:	add    rdx,rdx
  407b04:	mov    ebp,DWORD PTR [rbx+0x7c]
  407b07:	jmp    0x407b24
  407b09:	lea    rdx,[rbp+0x1]
  407b0d:	jmp    0x407a58
  407b12:	add    edx,0x1
  407b15:	jmp    0x407a82
  407b1a:	mov    rdi,r10
  407b1d:	mov    esi,0x1
  407b22:	xor    edx,edx
  407b24:	mov    WORD PTR [r10+rdx*1],r11w
  407b29:	movsxd rdx,r8d
  407b2c:	add    DWORD PTR [rbx+rdx*4+0x2a4],0x1
  407b34:	mov    DWORD PTR [rbx+0x29c],esi
  407b3a:	cmp    DWORD PTR [rbx+0x290],0x2
  407b41:	jle    0x407b70
  407b43:	mov    r12d,DWORD PTR [rbx+0x6c]
  407b47:	call   QWORD PTR [rip+0x14837]        # 0x41c384
  407b4d:	lea    rdx,[rip+0xe8ec]        # 0x416440
  407b54:	lea    rcx,[rax+0x60]
  407b58:	mov    DWORD PTR [rsp+0x20],ebp
  407b5c:	mov    r9d,esi
  407b5f:	mov    r8d,r12d
  407b62:	call   0x4112b0
  407b67:	mov    esi,DWORD PTR [rbx+0x29c]
  407b6d:	mov    ebp,DWORD PTR [rbx+0x7c]
  407b70:	lea    eax,[rbp+0x2]
  407b73:	lea    rcx,[rbx+0x9958]
  407b7a:	lea    r8d,[rbp+0x1]
  407b7e:	mov    DWORD PTR [rsp+0x68],eax
  407b82:	lea    rax,[rbx+0x934c]
  407b89:	mov    QWORD PTR [rsp+0x78],rcx
  407b8e:	mov    DWORD PTR [rsp+0x4c],r8d
  407b93:	add    r8,0x1
  407b97:	mov    QWORD PTR [rsp+0x58],rax
  407b9c:	mov    rcx,rax
  407b9f:	mov    eax,DWORD PTR [rsp+0x68]
  407ba3:	test   eax,eax
  407ba5:	jle    0x407bba
  407ba7:	lea    rdx,[r8+rcx*1]
  407bab:	mov    rax,rcx
  407bae:	mov    BYTE PTR [rax],0xf
  407bb1:	add    rax,0x1
  407bb5:	cmp    rax,rdx
  407bb8:	jne    0x407bae
  407bba:	add    rcx,0x102
  407bc1:	cmp    rcx,QWORD PTR [rsp+0x78]
  407bc6:	jne    0x407b9f
  407bc8:	test   esi,esi
  407bca:	jg     0x407bdc
  407bcc:	mov    ecx,0xbb9
  407bd1:	call   0x404780
  407bd6:	mov    esi,DWORD PTR [rbx+0x29c]
  407bdc:	cmp    esi,0xc7
  407be2:	jle    0x409568
  407be8:	cmp    esi,0x257
  407bee:	jle    0x409556
  407bf4:	cmp    esi,0x4af
  407bfa:	jle    0x409544
  407c00:	xor    eax,eax
  407c02:	cmp    esi,0x95f
  407c08:	setg   al
  407c0b:	add    eax,0x5
  407c0e:	mov    DWORD PTR [rsp+0x74],eax
  407c12:	mov    ebp,eax
  407c14:	mov    eax,DWORD PTR [rbx+0x290]
  407c1a:	xor    r10d,r10d
  407c1d:	mov    r15,rdi
  407c20:	movsd  xmm7,QWORD PTR [rip+0xe938]        # 0x416560
  407c28:	mov    rdi,rbx
  407c2b:	mov    r14d,ebp
  407c2e:	xor    r11d,r11d
  407c31:	mov    ecx,esi
  407c33:	mov    DWORD PTR [rsp+0xa8],eax
  407c3a:	movsxd rax,ebp
  407c3d:	mov    rdx,rax
  407c40:	shl    rdx,0x8
  407c44:	lea    rax,[rdx+rax*2+0x924a]
  407c4c:	add    rax,rbx
  407c4f:	mov    ebx,r10d
  407c52:	mov    QWORD PTR [rsp+0x50],rax
  407c57:	mov    eax,esi
  407c59:	xor    r13d,r13d
  407c5c:	lea    r12d,[rbx-0x1]
  407c60:	cdq    
  407c61:	idiv   r14d
  407c64:	test   eax,eax
  407c66:	jg     0x407c84
  407c68:	jmp    0x407c8b
  407c6a:	nop    WORD PTR [rax+rax*1+0x0]
  407c70:	add    r12d,0x1
  407c74:	movsxd rdx,r12d
  407c77:	add    r13d,DWORD PTR [rdi+rdx*4+0x2a0]
  407c7f:	cmp    eax,r13d
  407c82:	jle    0x407c8b
  407c84:	cmp    r12d,DWORD PTR [rsp+0x4c]
  407c89:	jl     0x407c70
  407c8b:	cmp    ebx,r12d
  407c8e:	setl   dl
  407c91:	cmp    ebp,r14d
  407c94:	setne  al
  407c97:	test   dl,al
  407c99:	je     0x407cab
  407c9b:	cmp    r14d,0x1
  407c9f:	je     0x407cab
  407ca1:	test   r11b,0x1
  407ca5:	jne    0x408060
  407cab:	cmp    DWORD PTR [rsp+0xa8],0x2
  407cb3:	jg     0x407ff1
  407cb9:	mov    eax,DWORD PTR [rsp+0x68]
  407cbd:	sub    r14d,0x1
  407cc1:	test   eax,eax
  407cc3:	jle    0x407cf7
  407cc5:	mov    rdx,QWORD PTR [rsp+0x50]
  407cca:	xor    eax,eax
  407ccc:	jmp    0x407ce2
  407cce:	cmp    ebx,eax
  407cd0:	jg     0x407ce7
  407cd2:	mov    BYTE PTR [rdx],0x0
  407cd5:	add    eax,0x1
  407cd8:	add    rdx,0x1
  407cdc:	cmp    eax,DWORD PTR [rsp+0x68]
  407ce0:	je     0x407cf7
  407ce2:	cmp    r12d,eax
  407ce5:	jge    0x407cce
  407ce7:	mov    BYTE PTR [rdx],0xf
  407cea:	add    eax,0x1
  407ced:	add    rdx,0x1
  407cf1:	cmp    eax,DWORD PTR [rsp+0x68]
  407cf5:	jne    0x407ce2
  407cf7:	sub    esi,r13d
  407cfa:	add    r11d,0x1
  407cfe:	sub    QWORD PTR [rsp+0x50],0x102
  407d07:	test   r14d,r14d
  407d0a:	lea    ebx,[r12+0x1]
  407d0f:	jg     0x407c57
  407d15:	lea    eax,[rbp-0x1]
  407d18:	mov    rbx,rdi
  407d1b:	mov    rdi,r15
  407d1e:	mov    r15d,ecx
  407d21:	mov    DWORD PTR [rsp+0x70],0x1
  407d29:	mov    rdx,rax
  407d2c:	shl    rdx,0xa
  407d30:	lea    rdx,[rdx+rax*8+0xb590]
  407d38:	lea    rcx,[rbx+rdx*1]
  407d3c:	mov    QWORD PTR [rsp+0x80],rcx
  407d44:	mov    ecx,DWORD PTR [rsp+0x4c]
  407d48:	mov    rdx,rcx
  407d4b:	mov    QWORD PTR [rsp+0x88],rcx
  407d53:	shl    rdx,0x4
  407d57:	lea    rsi,[rbx+rdx*1+0xc9c8]
  407d5f:	mov    rdx,rax
  407d62:	shl    rdx,0x8
  407d66:	lea    rax,[rdx+rax*2]
  407d6a:	mov    QWORD PTR [rsp+0xa0],rsi
  407d72:	lea    rsi,[rsp+0xc0]
  407d7a:	mov    QWORD PTR [rsp+0x90],rax
  407d82:	lea    rax,[rbx+0xb188]
  407d89:	mov    QWORD PTR [rsp+0xb0],rax
  407d91:	lea    rax,[rcx*4+0x4]
  407d99:	mov    QWORD PTR [rsp+0xb8],rax
  407da1:	xor    eax,eax
  407da3:	mov    rcx,QWORD PTR [rsp+0x60]
  407da8:	mov    DWORD PTR [rcx+rax*4],0x0
  407daf:	add    rax,0x1
  407db3:	cmp    ebp,eax
  407db5:	jg     0x407da3
  407db7:	mov    rax,QWORD PTR [rsp+0xb0]
  407dbf:	mov    QWORD PTR [rsp+0x98],rax
  407dc7:	mov    rcx,rax
  407dca:	mov    r11d,DWORD PTR [rsp+0x68]
  407dcf:	test   r11d,r11d
  407dd2:	jle    0x407df2
  407dd4:	mov    rax,QWORD PTR [rsp+0xb8]
  407ddc:	lea    rdx,[rax+rcx*1]
  407de0:	mov    rax,rcx
  407de3:	mov    DWORD PTR [rax],0x0
  407de9:	add    rax,0x4
  407ded:	cmp    rax,rdx
  407df0:	jne    0x407de3
  407df2:	add    rcx,0x408
  407df9:	cmp    rcx,QWORD PTR [rsp+0x80]
  407e01:	jne    0x407dca
  407e03:	cmp    ebp,0x6
  407e06:	je     0x40958f
  407e0c:	test   r15d,r15d
  407e0f:	jle    0x40957a
  407e15:	lea    eax,[r15-0x1]
  407e19:	lea    r13,[rbx+0x6a8]
  407e20:	mov    DWORD PTR [rsp+0x4c],0x0
  407e28:	mov    DWORD PTR [rsp+0x50],0x0
  407e30:	xor    r11d,r11d
  407e33:	mov    DWORD PTR [rsp+0x6c],eax
  407e37:	mov    rax,QWORD PTR [rsp+0x90]
  407e3f:	lea    r10,[rax+0x102]
  407e46:	lea    r14d,[r11+0x31]
  407e4a:	cmp    r14d,r15d
  407e4d:	cmovge r14d,DWORD PTR [rsp+0x6c]
  407e53:	xor    eax,eax
  407e55:	xor    r9d,r9d
  407e58:	mov    WORD PTR [rsi+rax*2],r9w
  407e5d:	add    rax,0x1
  407e61:	cmp    ebp,eax
  407e63:	jg     0x407e55
  407e65:	cmp    ebp,0x6
  407e68:	je     0x4083d0
  407e6e:	cmp    r14d,r11d
  407e71:	jl     0x407ec3
  407e73:	mov    edx,r14d
  407e76:	movsxd rax,r11d
  407e79:	sub    edx,r11d
  407e7c:	lea    r9,[rdi+rax*2]
  407e80:	lea    rax,[rax+rdx*1+0x1]
  407e85:	lea    r12,[rdi+rax*2]
  407e89:	nop    DWORD PTR [rax+0x0]
  407e90:	movzx  r8d,WORD PTR [r9]
  407e94:	mov    rdx,rsi
  407e97:	lea    rax,[rbx+r8*1]
  407e9b:	add    r8,r10
  407e9e:	add    r8,rbx
  407ea1:	movzx  ecx,BYTE PTR [rax+0x934c]
  407ea8:	add    rax,0x102
  407eae:	add    WORD PTR [rdx],cx
  407eb1:	add    rdx,0x2
  407eb5:	cmp    rax,r8
  407eb8:	jne    0x407ea1
  407eba:	add    r9,0x2
  407ebe:	cmp    r9,r12
  407ec1:	jne    0x407e90
  407ec3:	movzx  eax,WORD PTR [rsp+0xc0]
  407ecb:	xor    edx,edx
  407ecd:	mov    r8d,0xffffffff
  407ed3:	mov    ecx,0x3b9ac9ff
  407ed8:	jmp    0x407ee4
  407eda:	nop    WORD PTR [rax+rax*1+0x0]
  407ee0:	movzx  eax,WORD PTR [rsi+rdx*2]
  407ee4:	cmp    eax,ecx
  407ee6:	jge    0x407eed
  407ee8:	mov    ecx,eax
  407eea:	mov    r8d,edx
  407eed:	add    rdx,0x1
  407ef1:	cmp    ebp,edx
  407ef3:	jg     0x407ee0
  407ef5:	movsxd rax,r8d
  407ef8:	add    DWORD PTR [rsp+0x50],ecx
  407efc:	add    DWORD PTR [rsp+0x4c],0x1
  407f01:	mov    BYTE PTR [r13+0x0],r8b
  407f05:	add    DWORD PTR [rsp+rax*4+0xe0],0x1
  407f0d:	cmp    ebp,0x6
  407f10:	je     0x408074
  407f16:	cmp    r14d,r11d
  407f19:	jl     0x407f57
  407f1b:	mov    r8d,r14d
  407f1e:	movsxd rcx,r11d
  407f21:	sub    r8d,r11d
  407f24:	lea    rdx,[rdi+rcx*2]
  407f28:	lea    rcx,[rcx+r8*1+0x1]
  407f2d:	mov    r8,rax
  407f30:	shl    r8,0x8
  407f34:	lea    rcx,[rdi+rcx*2]
  407f38:	lea    r8,[r8+rax*2]
  407f3c:	nop    DWORD PTR [rax+0x0]
  407f40:	movzx  eax,WORD PTR [rdx]
  407f43:	add    rdx,0x2
  407f47:	add    rax,r8
  407f4a:	add    DWORD PTR [rbx+rax*4+0xb188],0x1
  407f52:	cmp    rdx,rcx
  407f55:	jne    0x407f40
  407f57:	lea    r11d,[r14+0x1]
  407f5b:	add    r13,0x1
  407f5f:	cmp    r11d,r15d
  407f62:	jl     0x407e46
  407f68:	cmp    DWORD PTR [rsp+0xa8],0x2
  407f70:	jg     0x408c62
  407f76:	mov    r12,QWORD PTR [rsp+0x58]
  407f7b:	mov    r13,QWORD PTR [rsp+0x98]
  407f83:	mov    r8d,DWORD PTR [rsp+0x68]
  407f88:	mov    rdx,r13
  407f8b:	mov    rcx,r12
  407f8e:	mov    r9d,0x11
  407f94:	add    r12,0x102
  407f9b:	add    r13,0x408
  407fa2:	call   0x40f5e0
  407fa7:	cmp    QWORD PTR [rsp+0x80],r13
  407faf:	jne    0x407f83
  407fb1:	add    DWORD PTR [rsp+0x70],0x1
  407fb6:	mov    eax,DWORD PTR [rsp+0x70]
  407fba:	cmp    eax,0x5
  407fbd:	je     0x408ccd
  407fc3:	mov    eax,DWORD PTR [rbx+0x290]
  407fc9:	mov    r15d,DWORD PTR [rbx+0x29c]
  407fd0:	mov    DWORD PTR [rsp+0xa8],eax
  407fd7:	jmp    0x407da1
  407fdc:	movsxd rdx,eax
  407fdf:	mov    rdi,QWORD PTR [rbx+0x48]
  407fe3:	lea    esi,[rax+0x1]
  407fe6:	add    rdx,rdx
  407fe9:	mov    ebp,DWORD PTR [rbx+0x7c]
  407fec:	jmp    0x407b24
  407ff1:	pxor   xmm6,xmm6
  407ff5:	mov    DWORD PTR [rsp+0x6c],r11d
  407ffa:	pxor   xmm0,xmm0
  407ffe:	cvtsi2ss xmm6,r13d
  408003:	cvtsi2ss xmm0,ecx
  408007:	cvtss2sd xmm6,xmm6
  40800b:	mulsd  xmm6,xmm7
  40800f:	cvtss2sd xmm0,xmm0
  408013:	divsd  xmm6,xmm0
  408017:	call   QWORD PTR [rip+0x14367]        # 0x41c384
  40801d:	lea    rdx,[rip+0xe45c]        # 0x416480
  408024:	lea    rcx,[rax+0x60]
  408028:	mov    DWORD PTR [rsp+0x28],r13d
  40802d:	mov    DWORD PTR [rsp+0x20],r12d
  408032:	mov    r9d,ebx
  408035:	mov    r8d,r14d
  408038:	movsd  QWORD PTR [rsp+0x30],xmm6
  40803e:	call   0x4112b0
  408043:	mov    eax,DWORD PTR [rdi+0x290]
  408049:	mov    ecx,DWORD PTR [rdi+0x29c]
  40804f:	mov    r11d,DWORD PTR [rsp+0x6c]
  408054:	mov    DWORD PTR [rsp+0xa8],eax
  40805b:	jmp    0x407cb9
  408060:	movsxd rax,r12d
  408063:	sub    r12d,0x1
  408067:	sub    r13d,DWORD PTR [rdi+rax*4+0x2a0]
  40806f:	jmp    0x407cab
  408074:	mov    edx,r14d
  408077:	sub    edx,r11d
  40807a:	cmp    edx,0x31
  40807d:	jne    0x407f16
  408083:	mov    rcx,rax
  408086:	movsxd r11,r11d
  408089:	shl    rcx,0x8
  40808d:	lea    rdx,[r11+r11*1]
  408091:	lea    rax,[rcx+rax*2]
  408095:	movzx  ecx,WORD PTR [rdi+r11*2]
  40809a:	lea    r11d,[r14+0x1]
  40809e:	add    rcx,rax
  4080a1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4080a9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x2]
  4080ae:	add    rcx,rax
  4080b1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4080b9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x4]
  4080be:	add    rcx,rax
  4080c1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4080c9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x6]
  4080ce:	add    rcx,rax
  4080d1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4080d9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x8]
  4080de:	add    rcx,rax
  4080e1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4080e9:	movzx  ecx,WORD PTR [rdi+rdx*1+0xa]
  4080ee:	add    rcx,rax
  4080f1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4080f9:	movzx  ecx,WORD PTR [rdi+rdx*1+0xc]
  4080fe:	add    rcx,rax
  408101:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408109:	movzx  ecx,WORD PTR [rdi+rdx*1+0xe]
  40810e:	add    rcx,rax
  408111:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408119:	movzx  ecx,WORD PTR [rdi+rdx*1+0x10]
  40811e:	add    rcx,rax
  408121:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408129:	movzx  ecx,WORD PTR [rdi+rdx*1+0x12]
  40812e:	add    rcx,rax
  408131:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408139:	movzx  ecx,WORD PTR [rdi+rdx*1+0x14]
  40813e:	add    rcx,rax
  408141:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408149:	movzx  ecx,WORD PTR [rdi+rdx*1+0x16]
  40814e:	add    rcx,rax
  408151:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408159:	movzx  ecx,WORD PTR [rdi+rdx*1+0x18]
  40815e:	add    rcx,rax
  408161:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408169:	movzx  ecx,WORD PTR [rdi+rdx*1+0x1a]
  40816e:	add    rcx,rax
  408171:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408179:	movzx  ecx,WORD PTR [rdi+rdx*1+0x1c]
  40817e:	add    rcx,rax
  408181:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408189:	movzx  ecx,WORD PTR [rdi+rdx*1+0x1e]
  40818e:	add    rcx,rax
  408191:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408199:	movzx  ecx,WORD PTR [rdi+rdx*1+0x20]
  40819e:	add    rcx,rax
  4081a1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4081a9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x22]
  4081ae:	add    rcx,rax
  4081b1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4081b9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x24]
  4081be:	add    rcx,rax
  4081c1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4081c9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x26]
  4081ce:	add    rcx,rax
  4081d1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4081d9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x28]
  4081de:	add    rcx,rax
  4081e1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4081e9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x2a]
  4081ee:	add    rcx,rax
  4081f1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4081f9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x2c]
  4081fe:	add    rcx,rax
  408201:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408209:	movzx  ecx,WORD PTR [rdi+rdx*1+0x2e]
  40820e:	add    rcx,rax
  408211:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408219:	movzx  ecx,WORD PTR [rdi+rdx*1+0x30]
  40821e:	add    rcx,rax
  408221:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408229:	movzx  ecx,WORD PTR [rdi+rdx*1+0x32]
  40822e:	add    rcx,rax
  408231:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408239:	movzx  ecx,WORD PTR [rdi+rdx*1+0x34]
  40823e:	add    rcx,rax
  408241:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408249:	movzx  ecx,WORD PTR [rdi+rdx*1+0x36]
  40824e:	add    rcx,rax
  408251:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408259:	movzx  ecx,WORD PTR [rdi+rdx*1+0x38]
  40825e:	add    rcx,rax
  408261:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408269:	movzx  ecx,WORD PTR [rdi+rdx*1+0x3a]
  40826e:	add    rcx,rax
  408271:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408279:	movzx  ecx,WORD PTR [rdi+rdx*1+0x3c]
  40827e:	add    rcx,rax
  408281:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408289:	movzx  ecx,WORD PTR [rdi+rdx*1+0x3e]
  40828e:	add    rcx,rax
  408291:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408299:	movzx  ecx,WORD PTR [rdi+rdx*1+0x40]
  40829e:	add    rcx,rax
  4082a1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4082a9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x42]
  4082ae:	add    rcx,rax
  4082b1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4082b9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x44]
  4082be:	add    rcx,rax
  4082c1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4082c9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x46]
  4082ce:	add    rcx,rax
  4082d1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4082d9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x48]
  4082de:	add    rcx,rax
  4082e1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4082e9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x4a]
  4082ee:	add    rcx,rax
  4082f1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4082f9:	movzx  ecx,WORD PTR [rdi+rdx*1+0x4c]
  4082fe:	add    rcx,rax
  408301:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408309:	movzx  ecx,WORD PTR [rdi+rdx*1+0x4e]
  40830e:	add    rcx,rax
  408311:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408319:	movzx  ecx,WORD PTR [rdi+rdx*1+0x50]
  40831e:	add    rcx,rax
  408321:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408329:	movzx  ecx,WORD PTR [rdi+rdx*1+0x52]
  40832e:	add    rcx,rax
  408331:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408339:	movzx  ecx,WORD PTR [rdi+rdx*1+0x54]
  40833e:	add    rcx,rax
  408341:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408349:	movzx  ecx,WORD PTR [rdi+rdx*1+0x56]
  40834e:	add    rcx,rax
  408351:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408359:	movzx  ecx,WORD PTR [rdi+rdx*1+0x58]
  40835e:	add    rcx,rax
  408361:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408369:	movzx  ecx,WORD PTR [rdi+rdx*1+0x5a]
  40836e:	add    rcx,rax
  408371:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408379:	movzx  ecx,WORD PTR [rdi+rdx*1+0x5c]
  40837e:	add    rcx,rax
  408381:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408389:	movzx  ecx,WORD PTR [rdi+rdx*1+0x5e]
  40838e:	add    rcx,rax
  408391:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  408399:	movzx  ecx,WORD PTR [rdi+rdx*1+0x60]
  40839e:	add    rcx,rax
  4083a1:	add    DWORD PTR [rbx+rcx*4+0xb188],0x1
  4083a9:	movzx  edx,WORD PTR [rdi+rdx*1+0x62]
  4083ae:	add    rax,rdx
  4083b1:	add    r13,0x1
  4083b5:	add    DWORD PTR [rbx+rax*4+0xb188],0x1
  4083bd:	cmp    r11d,r15d
  4083c0:	jl     0x407e46
  4083c6:	jmp    0x407f68
  4083cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4083d0:	mov    eax,r14d
  4083d3:	sub    eax,r11d
  4083d6:	cmp    eax,0x31
  4083d9:	jne    0x407e6e
  4083df:	movsxd rcx,r11d
  4083e2:	lea    rax,[rcx+rcx*1]
  4083e6:	movzx  r8d,WORD PTR [rdi+rcx*2]
  4083eb:	movzx  edx,WORD PTR [rdi+rax*1+0x2]
  4083f0:	lea    rcx,[r8+0xc9b]
  4083f7:	shl    r8,0x4
  4083fb:	add    r8,rbx
  4083fe:	lea    r9,[rdx+0xc9b]
  408405:	shl    rdx,0x4
  408409:	shl    rcx,0x4
  40840d:	add    rdx,rbx
  408410:	mov    ecx,DWORD PTR [rbx+rcx*1+0x8]
  408414:	shl    r9,0x4
  408418:	add    ecx,DWORD PTR [rbx+r9*1+0x8]
  40841d:	mov    r9d,DWORD PTR [r8+0xc9bc]
  408424:	mov    r8d,DWORD PTR [r8+0xc9c0]
  40842b:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408432:	add    r8d,DWORD PTR [rdx+0xc9c0]
  408439:	movzx  edx,WORD PTR [rdi+rax*1+0x4]
  40843e:	mov    r12d,r8d
  408441:	lea    r8,[rdx+0xc9b]
  408448:	shl    rdx,0x4
  40844c:	add    rdx,rbx
  40844f:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408456:	add    r12d,DWORD PTR [rdx+0xc9c0]
  40845d:	shl    r8,0x4
  408461:	movzx  edx,WORD PTR [rdi+rax*1+0x6]
  408466:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40846b:	lea    r8,[rdx+0xc9b]
  408472:	shl    rdx,0x4
  408476:	add    rdx,rbx
  408479:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408480:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408487:	shl    r8,0x4
  40848b:	movzx  edx,WORD PTR [rdi+rax*1+0x8]
  408490:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408495:	lea    r8,[rdx+0xc9b]
  40849c:	shl    rdx,0x4
  4084a0:	add    rdx,rbx
  4084a3:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4084aa:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4084b1:	shl    r8,0x4
  4084b5:	movzx  edx,WORD PTR [rdi+rax*1+0xa]
  4084ba:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4084bf:	lea    r8,[rdx+0xc9b]
  4084c6:	shl    rdx,0x4
  4084ca:	add    rdx,rbx
  4084cd:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4084d4:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4084db:	shl    r8,0x4
  4084df:	movzx  edx,WORD PTR [rdi+rax*1+0xc]
  4084e4:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4084e9:	lea    r8,[rdx+0xc9b]
  4084f0:	shl    r8,0x4
  4084f4:	shl    rdx,0x4
  4084f8:	add    rdx,rbx
  4084fb:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408500:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408507:	add    r12d,DWORD PTR [rdx+0xc9c0]
  40850e:	movzx  edx,WORD PTR [rdi+rax*1+0xe]
  408513:	lea    r8,[rdx+0xc9b]
  40851a:	shl    rdx,0x4
  40851e:	add    rdx,rbx
  408521:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408528:	add    r12d,DWORD PTR [rdx+0xc9c0]
  40852f:	shl    r8,0x4
  408533:	movzx  edx,WORD PTR [rdi+rax*1+0x10]
  408538:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40853d:	lea    r8,[rdx+0xc9b]
  408544:	shl    rdx,0x4
  408548:	add    rdx,rbx
  40854b:	shl    r8,0x4
  40854f:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408554:	add    r9d,DWORD PTR [rdx+0xc9bc]
  40855b:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408562:	movzx  edx,WORD PTR [rdi+rax*1+0x12]
  408567:	lea    r8,[rdx+0xc9b]
  40856e:	shl    rdx,0x4
  408572:	add    rdx,rbx
  408575:	add    r9d,DWORD PTR [rdx+0xc9bc]
  40857c:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408583:	shl    r8,0x4
  408587:	movzx  edx,WORD PTR [rdi+rax*1+0x14]
  40858c:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408591:	lea    r8,[rdx+0xc9b]
  408598:	shl    rdx,0x4
  40859c:	add    rdx,rbx
  40859f:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4085a6:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4085ad:	shl    r8,0x4
  4085b1:	movzx  edx,WORD PTR [rdi+rax*1+0x16]
  4085b6:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4085bb:	lea    r8,[rdx+0xc9b]
  4085c2:	shl    rdx,0x4
  4085c6:	shl    r8,0x4
  4085ca:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4085cf:	add    rdx,rbx
  4085d2:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4085d9:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4085e0:	movzx  edx,WORD PTR [rdi+rax*1+0x18]
  4085e5:	lea    r8,[rdx+0xc9b]
  4085ec:	shl    rdx,0x4
  4085f0:	add    rdx,rbx
  4085f3:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4085fa:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408601:	shl    r8,0x4
  408605:	movzx  edx,WORD PTR [rdi+rax*1+0x1a]
  40860a:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40860f:	lea    r8,[rdx+0xc9b]
  408616:	shl    rdx,0x4
  40861a:	add    rdx,rbx
  40861d:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408624:	add    r12d,DWORD PTR [rdx+0xc9c0]
  40862b:	shl    r8,0x4
  40862f:	movzx  edx,WORD PTR [rdi+rax*1+0x1c]
  408634:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408639:	lea    r8,[rdx+0xc9b]
  408640:	shl    rdx,0x4
  408644:	add    rdx,rbx
  408647:	add    r9d,DWORD PTR [rdx+0xc9bc]
  40864e:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408655:	shl    r8,0x4
  408659:	movzx  edx,WORD PTR [rdi+rax*1+0x1e]
  40865e:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408663:	lea    r8,[rdx+0xc9b]
  40866a:	shl    rdx,0x4
  40866e:	add    rdx,rbx
  408671:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408678:	add    r9d,DWORD PTR [rdx+0xc9bc]
  40867f:	shl    r8,0x4
  408683:	movzx  edx,WORD PTR [rdi+rax*1+0x20]
  408688:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40868d:	lea    r8,[rdx+0xc9b]
  408694:	shl    rdx,0x4
  408698:	add    rdx,rbx
  40869b:	shl    r8,0x4
  40869f:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4086a4:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4086ab:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4086b2:	movzx  edx,WORD PTR [rdi+rax*1+0x22]
  4086b7:	lea    r8,[rdx+0xc9b]
  4086be:	shl    r8,0x4
  4086c2:	shl    rdx,0x4
  4086c6:	add    rdx,rbx
  4086c9:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4086ce:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4086d5:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4086dc:	movzx  edx,WORD PTR [rdi+rax*1+0x24]
  4086e1:	lea    r8,[rdx+0xc9b]
  4086e8:	shl    rdx,0x4
  4086ec:	add    rdx,rbx
  4086ef:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4086f6:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4086fd:	shl    r8,0x4
  408701:	movzx  edx,WORD PTR [rdi+rax*1+0x26]
  408706:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40870b:	lea    r8,[rdx+0xc9b]
  408712:	shl    rdx,0x4
  408716:	add    rdx,rbx
  408719:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408720:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408727:	shl    r8,0x4
  40872b:	movzx  edx,WORD PTR [rdi+rax*1+0x28]
  408730:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408735:	lea    r8,[rdx+0xc9b]
  40873c:	shl    rdx,0x4
  408740:	add    rdx,rbx
  408743:	add    r9d,DWORD PTR [rdx+0xc9bc]
  40874a:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408751:	shl    r8,0x4
  408755:	movzx  edx,WORD PTR [rdi+rax*1+0x2a]
  40875a:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40875f:	lea    r8,[rdx+0xc9b]
  408766:	shl    rdx,0x4
  40876a:	add    rdx,rbx
  40876d:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408774:	add    r12d,DWORD PTR [rdx+0xc9c0]
  40877b:	shl    r8,0x4
  40877f:	movzx  edx,WORD PTR [rdi+rax*1+0x2c]
  408784:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408789:	lea    r8,[rdx+0xc9b]
  408790:	shl    rdx,0x4
  408794:	shl    r8,0x4
  408798:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40879d:	add    rdx,rbx
  4087a0:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4087a7:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4087ae:	movzx  edx,WORD PTR [rdi+rax*1+0x2e]
  4087b3:	lea    r8,[rdx+0xc9b]
  4087ba:	shl    rdx,0x4
  4087be:	add    rdx,rbx
  4087c1:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4087c8:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4087cf:	shl    r8,0x4
  4087d3:	movzx  edx,WORD PTR [rdi+rax*1+0x30]
  4087d8:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4087dd:	lea    r8,[rdx+0xc9b]
  4087e4:	shl    rdx,0x4
  4087e8:	add    rdx,rbx
  4087eb:	shl    r8,0x4
  4087ef:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4087f6:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4087fb:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408802:	movzx  edx,WORD PTR [rdi+rax*1+0x32]
  408807:	lea    r8,[rdx+0xc9b]
  40880e:	shl    rdx,0x4
  408812:	add    rdx,rbx
  408815:	add    r9d,DWORD PTR [rdx+0xc9bc]
  40881c:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408823:	shl    r8,0x4
  408827:	movzx  edx,WORD PTR [rdi+rax*1+0x34]
  40882c:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408831:	lea    r8,[rdx+0xc9b]
  408838:	shl    rdx,0x4
  40883c:	add    rdx,rbx
  40883f:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408846:	add    r12d,DWORD PTR [rdx+0xc9c0]
  40884d:	shl    r8,0x4
  408851:	movzx  edx,WORD PTR [rdi+rax*1+0x36]
  408856:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40885b:	lea    r8,[rdx+0xc9b]
  408862:	shl    rdx,0x4
  408866:	add    rdx,rbx
  408869:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408870:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408877:	shl    r8,0x4
  40887b:	movzx  edx,WORD PTR [rdi+rax*1+0x38]
  408880:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408885:	lea    r8,[rdx+0xc9b]
  40888c:	shl    r8,0x4
  408890:	shl    rdx,0x4
  408894:	add    rdx,rbx
  408897:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40889c:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4088a3:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4088aa:	movzx  edx,WORD PTR [rdi+rax*1+0x3a]
  4088af:	lea    r8,[rdx+0xc9b]
  4088b6:	shl    rdx,0x4
  4088ba:	add    rdx,rbx
  4088bd:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4088c4:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4088cb:	shl    r8,0x4
  4088cf:	movzx  edx,WORD PTR [rdi+rax*1+0x3c]
  4088d4:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4088d9:	lea    r8,[rdx+0xc9b]
  4088e0:	shl    rdx,0x4
  4088e4:	add    rdx,rbx
  4088e7:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4088ee:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4088f5:	shl    r8,0x4
  4088f9:	movzx  edx,WORD PTR [rdi+rax*1+0x3e]
  4088fe:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408903:	lea    r8,[rdx+0xc9b]
  40890a:	shl    rdx,0x4
  40890e:	add    rdx,rbx
  408911:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408918:	add    r12d,DWORD PTR [rdx+0xc9c0]
  40891f:	shl    r8,0x4
  408923:	movzx  edx,WORD PTR [rdi+rax*1+0x40]
  408928:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40892d:	lea    r8,[rdx+0xc9b]
  408934:	shl    rdx,0x4
  408938:	add    rdx,rbx
  40893b:	shl    r8,0x4
  40893f:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408946:	add    r12d,DWORD PTR [rdx+0xc9c0]
  40894d:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408952:	movzx  edx,WORD PTR [rdi+rax*1+0x42]
  408957:	lea    r8,[rdx+0xc9b]
  40895e:	shl    rdx,0x4
  408962:	shl    r8,0x4
  408966:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  40896b:	add    rdx,rbx
  40896e:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408975:	add    r12d,DWORD PTR [rdx+0xc9c0]
  40897c:	movzx  edx,WORD PTR [rdi+rax*1+0x44]
  408981:	lea    r8,[rdx+0xc9b]
  408988:	shl    rdx,0x4
  40898c:	add    rdx,rbx
  40898f:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408996:	add    r12d,DWORD PTR [rdx+0xc9c0]
  40899d:	shl    r8,0x4
  4089a1:	movzx  edx,WORD PTR [rdi+rax*1+0x46]
  4089a6:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4089ab:	lea    r8,[rdx+0xc9b]
  4089b2:	shl    rdx,0x4
  4089b6:	add    rdx,rbx
  4089b9:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4089c0:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4089c7:	shl    r8,0x4
  4089cb:	movzx  edx,WORD PTR [rdi+rax*1+0x48]
  4089d0:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4089d5:	lea    r8,[rdx+0xc9b]
  4089dc:	shl    rdx,0x4
  4089e0:	add    rdx,rbx
  4089e3:	add    r9d,DWORD PTR [rdx+0xc9bc]
  4089ea:	add    r12d,DWORD PTR [rdx+0xc9c0]
  4089f1:	shl    r8,0x4
  4089f5:	movzx  edx,WORD PTR [rdi+rax*1+0x4a]
  4089fa:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  4089ff:	lea    r8,[rdx+0xc9b]
  408a06:	shl    rdx,0x4
  408a0a:	add    rdx,rbx
  408a0d:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408a14:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408a1b:	shl    r8,0x4
  408a1f:	movzx  edx,WORD PTR [rdi+rax*1+0x4c]
  408a24:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408a29:	lea    r8,[rdx+0xc9b]
  408a30:	shl    rdx,0x4
  408a34:	add    rdx,rbx
  408a37:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408a3e:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408a45:	shl    r8,0x4
  408a49:	movzx  edx,WORD PTR [rdi+rax*1+0x4e]
  408a4e:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408a53:	lea    r8,[rdx+0xc9b]
  408a5a:	shl    r8,0x4
  408a5e:	shl    rdx,0x4
  408a62:	add    rdx,rbx
  408a65:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408a6a:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408a71:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408a78:	movzx  edx,WORD PTR [rdi+rax*1+0x50]
  408a7d:	lea    r8,[rdx+0xc9b]
  408a84:	shl    rdx,0x4
  408a88:	add    rdx,rbx
  408a8b:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408a92:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408a99:	shl    r8,0x4
  408a9d:	movzx  edx,WORD PTR [rdi+rax*1+0x52]
  408aa2:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408aa7:	lea    r8,[rdx+0xc9b]
  408aae:	shl    rdx,0x4
  408ab2:	add    rdx,rbx
  408ab5:	shl    r8,0x4
  408ab9:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408abe:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408ac5:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408acc:	movzx  edx,WORD PTR [rdi+rax*1+0x54]
  408ad1:	lea    r8,[rdx+0xc9b]
  408ad8:	shl    rdx,0x4
  408adc:	add    rdx,rbx
  408adf:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408ae6:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408aed:	shl    r8,0x4
  408af1:	movzx  edx,WORD PTR [rdi+rax*1+0x56]
  408af6:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408afb:	lea    r8,[rdx+0xc9b]
  408b02:	shl    rdx,0x4
  408b06:	add    rdx,rbx
  408b09:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408b10:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408b17:	shl    r8,0x4
  408b1b:	movzx  edx,WORD PTR [rdi+rax*1+0x58]
  408b20:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408b25:	lea    r8,[rdx+0xc9b]
  408b2c:	shl    rdx,0x4
  408b30:	shl    r8,0x4
  408b34:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408b39:	add    rdx,rbx
  408b3c:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408b43:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408b4a:	movzx  edx,WORD PTR [rdi+rax*1+0x5a]
  408b4f:	lea    r8,[rdx+0xc9b]
  408b56:	shl    rdx,0x4
  408b5a:	add    rdx,rbx
  408b5d:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408b64:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408b6b:	shl    r8,0x4
  408b6f:	movzx  edx,WORD PTR [rdi+rax*1+0x5c]
  408b74:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408b79:	lea    r8,[rdx+0xc9b]
  408b80:	shl    rdx,0x4
  408b84:	add    rdx,rbx
  408b87:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408b8e:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408b95:	shl    r8,0x4
  408b99:	movzx  edx,WORD PTR [rdi+rax*1+0x5e]
  408b9e:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408ba3:	lea    r8,[rdx+0xc9b]
  408baa:	shl    rdx,0x4
  408bae:	add    rdx,rbx
  408bb1:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408bb8:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408bbf:	shl    r8,0x4
  408bc3:	movzx  edx,WORD PTR [rdi+rax*1+0x60]
  408bc8:	movzx  eax,WORD PTR [rdi+rax*1+0x62]
  408bcd:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408bd2:	lea    r8,[rdx+0xc9b]
  408bd9:	shl    rdx,0x4
  408bdd:	add    rdx,rbx
  408be0:	add    r12d,DWORD PTR [rdx+0xc9c0]
  408be7:	add    r9d,DWORD PTR [rdx+0xc9bc]
  408bee:	lea    rdx,[rax+0xc9b]
  408bf5:	shl    r8,0x4
  408bf9:	shl    rax,0x4
  408bfd:	add    rax,rbx
  408c00:	add    ecx,DWORD PTR [rbx+r8*1+0x8]
  408c05:	shl    rdx,0x4
  408c09:	add    ecx,DWORD PTR [rbx+rdx*1+0x8]
  408c0d:	add    r9d,DWORD PTR [rax+0xc9bc]
  408c14:	add    r12d,DWORD PTR [rax+0xc9c0]
  408c1b:	mov    WORD PTR [rsp+0xc0],cx
  408c23:	movzx  eax,cx
  408c26:	mov    WORD PTR [rsp+0xc4],r9w
  408c2f:	shr    ecx,0x10
  408c32:	mov    WORD PTR [rsp+0xc8],r12w
  408c3b:	shr    r9d,0x10
  408c3f:	shr    r12d,0x10
  408c43:	mov    WORD PTR [rsp+0xc2],cx
  408c4b:	mov    WORD PTR [rsp+0xc6],r9w
  408c54:	mov    WORD PTR [rsp+0xca],r12w
  408c5d:	jmp    0x407ecb
  408c62:	call   QWORD PTR [rip+0x1371c]        # 0x41c384
  408c68:	mov    r9d,DWORD PTR [rsp+0x50]
  408c6d:	mov    r8d,DWORD PTR [rsp+0x70]
  408c72:	lea    rcx,[rax+0x60]
  408c76:	lea    rdx,[rip+0xd843]        # 0x4164c0
  408c7d:	xor    r13d,r13d
  408c80:	sar    r9d,0x3
  408c84:	call   0x4112b0
  408c89:	mov    rax,QWORD PTR [rsp+0x60]
  408c8e:	mov    r12d,DWORD PTR [rax+r13*4]
  408c92:	add    r13,0x1
  408c96:	call   QWORD PTR [rip+0x136e8]        # 0x41c384
  408c9c:	lea    rdx,[rip+0xd846]        # 0x4164e9
  408ca3:	lea    rcx,[rax+0x60]
  408ca7:	mov    r8d,r12d
  408caa:	call   0x4112b0
  408caf:	cmp    ebp,r13d
  408cb2:	jg     0x408c89
  408cb4:	call   QWORD PTR [rip+0x136ca]        # 0x41c384
  408cba:	lea    rdx,[rax+0x60]
  408cbe:	mov    ecx,0xa
  408cc3:	call   0x4112a8
  408cc8:	jmp    0x407f76
  408ccd:	cmp    DWORD PTR [rsp+0x4c],0x4652
  408cd5:	jle    0x408ce1
  408cd7:	mov    ecx,0xbbb
  408cdc:	call   0x404780
  408ce1:	lea    r12,[rsp+0xd0]
  408ce9:	xor    eax,eax
  408ceb:	mov    BYTE PTR [r12+rax*1],al
  408cef:	add    rax,0x1
  408cf3:	cmp    ebp,eax
  408cf5:	jg     0x408ceb
  408cf7:	mov    r8d,DWORD PTR [rsp+0x4c]
  408cfc:	test   r8d,r8d
  408cff:	je     0x408d64
  408d01:	mov    eax,DWORD PTR [rsp+0x4c]
  408d05:	movzx  r8d,BYTE PTR [rsp+0xd0]
  408d0e:	lea    r10,[rbx+0x6a8]
  408d15:	sub    eax,0x1
  408d18:	lea    r11,[rbx+rax*1+0x6a9]
  408d20:	movzx  r9d,BYTE PTR [r10]
  408d24:	cmp    r9b,r8b
  408d27:	je     0x409520
  408d2d:	mov    rax,r12
  408d30:	mov    edx,r8d
  408d33:	xor    ecx,ecx
  408d35:	movzx  r8d,BYTE PTR [rax+0x1]
  408d3a:	add    ecx,0x1
  408d3d:	mov    BYTE PTR [rax+0x1],dl
  408d40:	add    rax,0x1
  408d44:	cmp    r9b,r8b
  408d47:	mov    edx,r8d
  408d4a:	jne    0x408d35
  408d4c:	mov    BYTE PTR [r10+0x4652],cl
  408d53:	add    r10,0x1
  408d57:	mov    BYTE PTR [rsp+0xd0],r8b
  408d5f:	cmp    r10,r11
  408d62:	jne    0x408d20
  408d64:	mov    rax,QWORD PTR [rsp+0x90]
  408d6c:	mov    rsi,QWORD PTR [rsp+0x58]
  408d71:	lea    r15,[rbx+rax*1+0x944e]
  408d79:	mov    rax,QWORD PTR [rsp+0x88]
  408d81:	add    rax,0x1
  408d85:	mov    QWORD PTR [rsp+0x50],rax
  408d8a:	mov    ecx,DWORD PTR [rsp+0x68]
  408d8e:	test   ecx,ecx
  408d90:	jle    0x409527
  408d96:	mov    rax,QWORD PTR [rsp+0x50]
  408d9b:	mov    rcx,rsi
  408d9e:	mov    r13d,0x20
  408da4:	xor    r9d,r9d
  408da7:	lea    rdx,[rax+rsi*1]
  408dab:	nop    DWORD PTR [rax+rax*1+0x0]
  408db0:	movzx  eax,BYTE PTR [rcx]
  408db3:	cmp    r9d,eax
  408db6:	cmovl  r9d,eax
  408dba:	cmp    r13d,eax
  408dbd:	cmovg  r13d,eax
  408dc1:	add    rcx,0x1
  408dc5:	cmp    rcx,rdx
  408dc8:	jne    0x408db0
  408dca:	cmp    r9d,0x11
  408dce:	mov    r14d,r9d
  408dd1:	jg     0x409609
  408dd7:	test   r13d,r13d
  408dda:	je     0x409535
  408de0:	mov    eax,DWORD PTR [rsp+0x68]
  408de4:	mov    r9d,r14d
  408de7:	mov    r14,QWORD PTR [rsp+0x78]
  408dec:	mov    rdx,rsi
  408def:	mov    r8d,r13d
  408df2:	add    rsi,0x102
  408df9:	mov    DWORD PTR [rsp+0x20],eax
  408dfd:	mov    rcx,r14
  408e00:	call   0x40fac0
  408e05:	mov    rax,r14
  408e08:	add    rax,0x408
  408e0e:	cmp    rsi,r15
  408e11:	mov    QWORD PTR [rsp+0x78],rax
  408e16:	jne    0x408d8a
  408e1c:	mov    r10,r12
  408e1f:	mov    rcx,r12
  408e22:	xor    eax,eax
  408e24:	lea    r8d,[rax+0x10]
  408e28:	mov    BYTE PTR [rcx],0x0
  408e2b:	movsxd rdx,eax
  408e2e:	cmp    BYTE PTR [rbx+rdx*1+0x80],0x0
  408e36:	je     0x408e3b
  408e38:	mov    BYTE PTR [rcx],0x1
  408e3b:	add    eax,0x1
  408e3e:	cmp    eax,r8d
  408e41:	jne    0x408e2b
  408e43:	add    rcx,0x1
  408e47:	cmp    eax,0x100
  408e4c:	jne    0x408e24
  408e4e:	mov    esi,DWORD PTR [rbx+0x74]
  408e51:	lea    r8,[r12+0x10]
  408e56:	mov    r11d,0x1f
  408e5c:	mov    r13d,0x1
  408e62:	mov    r9d,esi
  408e65:	cmp    BYTE PTR [r12],0x0
  408e6a:	jne    0x409620
  408e70:	mov    eax,DWORD PTR [rbx+0x284]
  408e76:	cmp    eax,0x7
  408e79:	jle    0x408ebd
  408e7b:	mov    edx,DWORD PTR [rbx+0x280]
  408e81:	mov    rax,QWORD PTR [rbx+0x50]
  408e85:	shr    edx,0x18
  408e88:	movsxd r9,r9d
  408e8b:	mov    BYTE PTR [rax+r9*1],dl
  408e8f:	mov    eax,DWORD PTR [rbx+0x74]
  408e92:	mov    edx,DWORD PTR [rbx+0x280]
  408e98:	lea    r9d,[rax+0x1]
  408e9c:	mov    eax,DWORD PTR [rbx+0x284]
  408ea2:	shl    edx,0x8
  408ea5:	mov    DWORD PTR [rbx+0x74],r9d
  408ea9:	mov    DWORD PTR [rbx+0x280],edx
  408eaf:	sub    eax,0x8
  408eb2:	cmp    eax,0x7
  408eb5:	mov    DWORD PTR [rbx+0x284],eax
  408ebb:	jg     0x408e81
  408ebd:	add    eax,0x1
  408ec0:	mov    DWORD PTR [rbx+0x284],eax
  408ec6:	add    r12,0x1
  408eca:	cmp    r12,r8
  408ecd:	jne    0x408e65
  408ecf:	xor    r8d,r8d
  408ed2:	mov    r12d,0x1f
  408ed8:	mov    r13d,0x1
  408ede:	cmp    BYTE PTR [r10],0x0
  408ee2:	lea    r11d,[r8+0x10]
  408ee6:	je     0x408f5a
  408ee8:	mov    edx,r8d
  408eeb:	movsxd rax,edx
  408eee:	cmp    BYTE PTR [rbx+rax*1+0x80],0x0
  408ef6:	jne    0x40968f
  408efc:	mov    ecx,DWORD PTR [rbx+0x284]
  408f02:	cmp    ecx,0x7
  408f05:	jle    0x408f49
  408f07:	mov    eax,DWORD PTR [rbx+0x280]
  408f0d:	mov    rcx,QWORD PTR [rbx+0x50]
  408f11:	shr    eax,0x18
  408f14:	movsxd r9,r9d
  408f17:	mov    BYTE PTR [rcx+r9*1],al
  408f1b:	mov    eax,DWORD PTR [rbx+0x74]
  408f1e:	mov    ecx,DWORD PTR [rbx+0x284]
  408f24:	lea    r9d,[rax+0x1]
  408f28:	mov    eax,DWORD PTR [rbx+0x280]
  408f2e:	sub    ecx,0x8
  408f31:	mov    DWORD PTR [rbx+0x74],r9d
  408f35:	mov    DWORD PTR [rbx+0x284],ecx
  408f3b:	shl    eax,0x8
  408f3e:	cmp    ecx,0x7
  408f41:	mov    DWORD PTR [rbx+0x280],eax
  408f47:	jg     0x408f0d
  408f49:	add    ecx,0x1
  408f4c:	mov    DWORD PTR [rbx+0x284],ecx
  408f52:	add    edx,0x1
  408f55:	cmp    edx,r11d
  408f58:	jne    0x408eeb
  408f5a:	add    r10,0x1
  408f5e:	cmp    r11d,0x100
  408f65:	mov    r8d,r11d
  408f68:	jne    0x408ede
  408f6e:	cmp    DWORD PTR [rbx+0x290],0x2
  408f75:	jle    0x408f9a
  408f77:	sub    r9d,esi
  408f7a:	mov    esi,r9d
  408f7d:	call   QWORD PTR [rip+0x13401]        # 0x41c384
  408f83:	lea    rdx,[rip+0xd563]        # 0x4164ed
  408f8a:	lea    rcx,[rax+0x60]
  408f8e:	mov    r8d,esi
  408f91:	call   0x4112b0
  408f96:	mov    r9d,DWORD PTR [rbx+0x74]
  408f9a:	mov    eax,DWORD PTR [rbx+0x284]
  408fa0:	mov    edx,DWORD PTR [rbx+0x280]
  408fa6:	mov    r8d,r9d
  408fa9:	cmp    eax,0x7
  408fac:	jle    0x408fea
  408fae:	mov    rax,QWORD PTR [rbx+0x50]
  408fb2:	shr    edx,0x18
  408fb5:	movsxd r8,r8d
  408fb8:	mov    BYTE PTR [rax+r8*1],dl
  408fbc:	mov    eax,DWORD PTR [rbx+0x74]
  408fbf:	mov    edx,DWORD PTR [rbx+0x280]
  408fc5:	lea    r8d,[rax+0x1]
  408fc9:	mov    eax,DWORD PTR [rbx+0x284]
  408fcf:	shl    edx,0x8
  408fd2:	mov    DWORD PTR [rbx+0x74],r8d
  408fd6:	mov    DWORD PTR [rbx+0x280],edx
  408fdc:	sub    eax,0x8
  408fdf:	cmp    eax,0x7
  408fe2:	mov    DWORD PTR [rbx+0x284],eax
  408fe8:	jg     0x408fae
  408fea:	mov    esi,DWORD PTR [rsp+0x74]
  408fee:	mov    ecx,0x1d
  408ff3:	sub    ecx,eax
  408ff5:	add    eax,0x3
  408ff8:	mov    DWORD PTR [rbx+0x284],eax
  408ffe:	shl    esi,cl
  409000:	or     edx,esi
  409002:	cmp    eax,0x7
  409005:	mov    DWORD PTR [rbx+0x280],edx
  40900b:	jle    0x409049
  40900d:	mov    rax,QWORD PTR [rbx+0x50]
  409011:	shr    edx,0x18
  409014:	movsxd r8,r8d
  409017:	mov    BYTE PTR [rax+r8*1],dl
  40901b:	mov    eax,DWORD PTR [rbx+0x74]
  40901e:	mov    edx,DWORD PTR [rbx+0x280]
  409024:	lea    r8d,[rax+0x1]
  409028:	mov    eax,DWORD PTR [rbx+0x284]
  40902e:	shl    edx,0x8
  409031:	mov    DWORD PTR [rbx+0x74],r8d
  409035:	mov    DWORD PTR [rbx+0x280],edx
  40903b:	sub    eax,0x8
  40903e:	cmp    eax,0x7
  409041:	mov    DWORD PTR [rbx+0x284],eax
  409047:	jg     0x40900d
  409049:	mov    r11d,DWORD PTR [rsp+0x4c]
  40904e:	mov    ecx,0x11
  409053:	sub    ecx,eax
  409055:	mov    esi,r11d
  409058:	shl    esi,cl
  40905a:	mov    ecx,esi
  40905c:	mov    esi,r11d
  40905f:	or     ecx,edx
  409061:	lea    edx,[rax+0xf]
  409064:	test   r11d,r11d
  409067:	mov    DWORD PTR [rbx+0x280],ecx
  40906d:	mov    DWORD PTR [rbx+0x284],edx
  409073:	je     0x409173
  409079:	lea    eax,[rsi-0x1]
  40907c:	lea    r11,[rbx+0x4cfa]
  409083:	mov    r12d,0x1f
  409089:	mov    esi,0x1
  40908e:	lea    r13,[rbx+rax*1+0x4cfb]
  409096:	cmp    BYTE PTR [r11],0x0
  40909a:	je     0x409116
  40909c:	mov    eax,DWORD PTR [rbx+0x280]
  4090a2:	xor    r10d,r10d
  4090a5:	jmp    0x4090e7
  4090a7:	nop    WORD PTR [rax+rax*1+0x0]
  4090b0:	mov    rdx,QWORD PTR [rbx+0x50]
  4090b4:	movsxd r8,r8d
  4090b7:	shr    eax,0x18
  4090ba:	mov    BYTE PTR [rdx+r8*1],al
  4090be:	mov    eax,DWORD PTR [rbx+0x74]
  4090c1:	mov    ecx,DWORD PTR [rbx+0x284]
  4090c7:	lea    r8d,[rax+0x1]
  4090cb:	mov    eax,DWORD PTR [rbx+0x280]
  4090d1:	lea    edx,[rcx-0x8]
  4090d4:	mov    DWORD PTR [rbx+0x74],r8d
  4090d8:	shl    eax,0x8
  4090db:	mov    DWORD PTR [rbx+0x284],edx
  4090e1:	mov    DWORD PTR [rbx+0x280],eax
  4090e7:	cmp    edx,0x7
  4090ea:	jg     0x4090b0
  4090ec:	mov    ecx,r12d
  4090ef:	mov    r14d,esi
  4090f2:	add    r10d,0x1
  4090f6:	sub    ecx,edx
  4090f8:	add    edx,0x1
  4090fb:	shl    r14d,cl
  4090fe:	mov    DWORD PTR [rbx+0x284],edx
  409104:	or     eax,r14d
  409107:	mov    DWORD PTR [rbx+0x280],eax
  40910d:	movzx  ecx,BYTE PTR [r11]
  409111:	cmp    r10d,ecx
  409114:	jl     0x4090e7
  409116:	cmp    edx,0x7
  409119:	jle    0x40915d
  40911b:	mov    eax,DWORD PTR [rbx+0x280]
  409121:	mov    rdx,QWORD PTR [rbx+0x50]
  409125:	shr    eax,0x18
  409128:	movsxd r8,r8d
  40912b:	mov    BYTE PTR [rdx+r8*1],al
  40912f:	mov    eax,DWORD PTR [rbx+0x74]
  409132:	mov    ecx,DWORD PTR [rbx+0x284]
  409138:	lea    r8d,[rax+0x1]
  40913c:	mov    eax,DWORD PTR [rbx+0x280]
  409142:	lea    edx,[rcx-0x8]
  409145:	mov    DWORD PTR [rbx+0x74],r8d
  409149:	shl    eax,0x8
  40914c:	cmp    edx,0x7
  40914f:	mov    DWORD PTR [rbx+0x284],edx
  409155:	mov    DWORD PTR [rbx+0x280],eax
  40915b:	jg     0x409121
  40915d:	add    r11,0x1
  409161:	add    edx,0x1
  409164:	cmp    r11,r13
  409167:	mov    DWORD PTR [rbx+0x284],edx
  40916d:	jne    0x409096
  409173:	cmp    DWORD PTR [rbx+0x290],0x2
  40917a:	jle    0x40919f
  40917c:	mov    esi,r8d
  40917f:	sub    esi,r9d
  409182:	call   QWORD PTR [rip+0x131fc]        # 0x41c384
  409188:	lea    rdx,[rip+0xd378]        # 0x416507
  40918f:	lea    rcx,[rax+0x60]
  409193:	mov    r8d,esi
  409196:	call   0x4112b0
  40919b:	mov    r8d,DWORD PTR [rbx+0x74]
  40919f:	mov    rax,QWORD PTR [rsp+0x88]
  4091a7:	mov    esi,r8d
  4091aa:	mov    r11d,0x1e
  4091b0:	mov    r13d,0x2
  4091b6:	add    rax,0x1
  4091ba:	mov    QWORD PTR [rsp+0x50],rax
  4091bf:	mov    rax,QWORD PTR [rsp+0x58]
  4091c4:	mov    edx,DWORD PTR [rbx+0x280]
  4091ca:	movzx  r9d,BYTE PTR [rax]
  4091ce:	mov    eax,DWORD PTR [rbx+0x284]
  4091d4:	cmp    eax,0x7
  4091d7:	jle    0x409212
  4091d9:	mov    rax,QWORD PTR [rbx+0x50]
  4091dd:	shr    edx,0x18
  4091e0:	movsxd rsi,esi
  4091e3:	mov    BYTE PTR [rax+rsi*1],dl
  4091e6:	mov    eax,DWORD PTR [rbx+0x74]
  4091e9:	mov    edx,DWORD PTR [rbx+0x280]
  4091ef:	lea    esi,[rax+0x1]
  4091f2:	mov    eax,DWORD PTR [rbx+0x284]
  4091f8:	shl    edx,0x8
  4091fb:	mov    DWORD PTR [rbx+0x74],esi
  4091fe:	mov    DWORD PTR [rbx+0x280],edx
  409204:	sub    eax,0x8
  409207:	cmp    eax,0x7
  40920a:	mov    DWORD PTR [rbx+0x284],eax
  409210:	jg     0x4091d9
  409212:	mov    ecx,0x1b
  409217:	mov    r14d,r9d
  40921a:	sub    ecx,eax
  40921c:	add    eax,0x5
  40921f:	shl    r14d,cl
  409222:	mov    DWORD PTR [rbx+0x284],eax
  409228:	or     edx,r14d
  40922b:	mov    DWORD PTR [rbx+0x280],edx
  409231:	mov    edx,DWORD PTR [rsp+0x68]
  409235:	test   edx,edx
  409237:	jle    0x409390
  40923d:	mov    rcx,QWORD PTR [rsp+0x58]
  409242:	mov    r14,QWORD PTR [rsp+0x50]
  409247:	mov    r10,rcx
  40924a:	add    r14,rcx
  40924d:	movzx  ecx,BYTE PTR [r10]
  409251:	cmp    r9d,ecx
  409254:	jge    0x4092c3
  409256:	mov    edx,DWORD PTR [rbx+0x280]
  40925c:	jmp    0x409294
  40925e:	xchg   ax,ax
  409260:	mov    rax,QWORD PTR [rbx+0x50]
  409264:	movsxd rsi,esi
  409267:	shr    edx,0x18
  40926a:	mov    BYTE PTR [rax+rsi*1],dl
  40926d:	mov    eax,DWORD PTR [rbx+0x74]
  409270:	mov    edx,DWORD PTR [rbx+0x280]
  409276:	lea    esi,[rax+0x1]
  409279:	mov    eax,DWORD PTR [rbx+0x284]
  40927f:	shl    edx,0x8
  409282:	mov    DWORD PTR [rbx+0x74],esi
  409285:	mov    DWORD PTR [rbx+0x280],edx
  40928b:	sub    eax,0x8
  40928e:	mov    DWORD PTR [rbx+0x284],eax
  409294:	cmp    eax,0x7
  409297:	jg     0x409260
  409299:	mov    ecx,r11d
  40929c:	mov    r12d,r13d
  40929f:	add    r9d,0x1
  4092a3:	sub    ecx,eax
  4092a5:	add    eax,0x2
  4092a8:	shl    r12d,cl
  4092ab:	mov    DWORD PTR [rbx+0x284],eax
  4092b1:	or     edx,r12d
  4092b4:	mov    DWORD PTR [rbx+0x280],edx
  4092ba:	movzx  ecx,BYTE PTR [r10]
  4092be:	cmp    r9d,ecx
  4092c1:	jl     0x409294
  4092c3:	cmp    r9d,ecx
  4092c6:	jle    0x409336
  4092c8:	mov    edx,DWORD PTR [rbx+0x280]
  4092ce:	jmp    0x409304
  4092d0:	mov    rax,QWORD PTR [rbx+0x50]
  4092d4:	movsxd rsi,esi
  4092d7:	shr    edx,0x18
  4092da:	mov    BYTE PTR [rax+rsi*1],dl
  4092dd:	mov    eax,DWORD PTR [rbx+0x74]
  4092e0:	mov    edx,DWORD PTR [rbx+0x280]
  4092e6:	lea    esi,[rax+0x1]
  4092e9:	mov    eax,DWORD PTR [rbx+0x284]
  4092ef:	shl    edx,0x8
  4092f2:	mov    DWORD PTR [rbx+0x74],esi
  4092f5:	mov    DWORD PTR [rbx+0x280],edx
  4092fb:	sub    eax,0x8
  4092fe:	mov    DWORD PTR [rbx+0x284],eax
  409304:	cmp    eax,0x7
  409307:	jg     0x4092d0
  409309:	mov    ecx,r11d
  40930c:	mov    r12d,0x3
  409312:	sub    r9d,0x1
  409316:	sub    ecx,eax
  409318:	add    eax,0x2
  40931b:	shl    r12d,cl
  40931e:	mov    DWORD PTR [rbx+0x284],eax
  409324:	or     edx,r12d
  409327:	mov    DWORD PTR [rbx+0x280],edx
  40932d:	movzx  ecx,BYTE PTR [r10]
  409331:	cmp    r9d,ecx
  409334:	jg     0x409304
  409336:	cmp    eax,0x7
  409339:	jle    0x40937a
  40933b:	mov    edx,DWORD PTR [rbx+0x280]
  409341:	mov    rax,QWORD PTR [rbx+0x50]
  409345:	shr    edx,0x18
  409348:	movsxd rsi,esi
  40934b:	mov    BYTE PTR [rax+rsi*1],dl
  40934e:	mov    eax,DWORD PTR [rbx+0x74]
  409351:	mov    edx,DWORD PTR [rbx+0x280]
  409357:	lea    esi,[rax+0x1]
  40935a:	mov    eax,DWORD PTR [rbx+0x284]
  409360:	shl    edx,0x8
  409363:	mov    DWORD PTR [rbx+0x74],esi
  409366:	mov    DWORD PTR [rbx+0x280],edx
  40936c:	sub    eax,0x8
  40936f:	cmp    eax,0x7
  409372:	mov    DWORD PTR [rbx+0x284],eax
  409378:	jg     0x409341
  40937a:	add    r10,0x1
  40937e:	add    eax,0x1
  409381:	cmp    r10,r14
  409384:	mov    DWORD PTR [rbx+0x284],eax
  40938a:	jne    0x40924d
  409390:	add    QWORD PTR [rsp+0x58],0x102
  409399:	mov    rax,QWORD PTR [rsp+0x58]
  40939e:	cmp    r15,rax
  4093a1:	jne    0x4091bf
  4093a7:	cmp    DWORD PTR [rbx+0x290],0x2
  4093ae:	jle    0x4093cf
  4093b0:	sub    esi,r8d
  4093b3:	call   QWORD PTR [rip+0x12fcb]        # 0x41c384
  4093b9:	lea    rdx,[rip+0xd156]        # 0x416516
  4093c0:	lea    rcx,[rax+0x60]
  4093c4:	mov    r8d,esi
  4093c7:	call   0x4112b0
  4093cc:	mov    esi,DWORD PTR [rbx+0x74]
  4093cf:	mov    eax,DWORD PTR [rbx+0x29c]
  4093d5:	test   eax,eax
  4093d7:	jle    0x40ae81
  4093dd:	mov    edx,0x1
  4093e2:	xor    r15d,r15d
  4093e5:	mov    r13,rbx
  4093e8:	sub    edx,ebx
  4093ea:	mov    r12d,0x20
  4093f0:	mov    r9d,r15d
  4093f3:	mov    DWORD PTR [rsp+0x68],edx
  4093f7:	lea    r14d,[r9+0x31]
  4093fb:	lea    edx,[rax-0x1]
  4093fe:	cmp    r14d,eax
  409401:	movzx  eax,BYTE PTR [r13+0x6a8]
  409409:	cmovge r14d,edx
  40940d:	cmp    ebp,eax
  40940f:	jle    0x40ae68
  409415:	cmp    ebp,0x6
  409418:	je     0x409706
  40941e:	cmp    r14d,r9d
  409421:	jl     0x4094f8
  409427:	mov    ecx,r14d
  40942a:	movsxd rdx,r9d
  40942d:	mov    r15d,DWORD PTR [rbx+0x284]
  409434:	sub    ecx,r9d
  409437:	lea    r8,[rdi+rdx*2]
  40943b:	mov    eax,DWORD PTR [rbx+0x280]
  409441:	lea    rdx,[rdx+rcx*1+0x1]
  409446:	lea    r11,[rdi+rdx*2]
  40944a:	nop    WORD PTR [rax+rax*1+0x0]
  409450:	movzx  edx,BYTE PTR [r13+0x6a8]
  409458:	movzx  ecx,WORD PTR [r8]
  40945c:	mov    r9,rdx
  40945f:	shl    r9,0x8
  409463:	lea    rdx,[r9+rdx*2]
  409467:	lea    r9,[rcx+rdx*1+0x2654]
  40946f:	add    rdx,rbx
  409472:	cmp    r15d,0x7
  409476:	movzx  r10d,BYTE PTR [rcx+rdx*1+0x934c]
  40947f:	mov    r9d,DWORD PTR [rbx+r9*4+0x8]
  409484:	jle    0x4094cc
  409486:	mov    edx,DWORD PTR [rbx+0x74]
  409489:	nop    DWORD PTR [rax+0x0]
  409490:	mov    rcx,QWORD PTR [rbx+0x50]
  409494:	shr    eax,0x18
  409497:	movsxd rdx,edx
  40949a:	mov    BYTE PTR [rcx+rdx*1],al
  40949d:	mov    eax,DWORD PTR [rbx+0x74]
  4094a0:	mov    ecx,DWORD PTR [rbx+0x284]
  4094a6:	lea    edx,[rax+0x1]
  4094a9:	mov    eax,DWORD PTR [rbx+0x280]
  4094af:	lea    r15d,[rcx-0x8]
  4094b3:	mov    DWORD PTR [rbx+0x74],edx
  4094b6:	shl    eax,0x8
  4094b9:	cmp    r15d,0x7
  4094bd:	mov    DWORD PTR [rbx+0x284],r15d
  4094c4:	mov    DWORD PTR [rbx+0x280],eax
  4094ca:	jg     0x409490
  4094cc:	mov    ecx,r12d
  4094cf:	add    r8,0x2
  4094d3:	sub    ecx,r15d
  4094d6:	add    r15d,r10d
  4094d9:	sub    ecx,r10d
  4094dc:	mov    DWORD PTR [rbx+0x284],r15d
  4094e3:	shl    r9d,cl
  4094e6:	or     eax,r9d
  4094e9:	cmp    r8,r11
  4094ec:	mov    DWORD PTR [rbx+0x280],eax
  4094f2:	jne    0x409450
  4094f8:	mov    eax,DWORD PTR [rsp+0x68]
  4094fc:	lea    r9d,[r14+0x1]
  409500:	lea    edx,[rax+r13*1]
  409504:	mov    eax,DWORD PTR [rbx+0x29c]
  40950a:	add    r13,0x1
  40950e:	cmp    eax,r9d
  409511:	jg     0x4093f7
  409517:	jmp    0x40ae83
  40951c:	nop    DWORD PTR [rax+0x0]
  409520:	xor    ecx,ecx
  409522:	jmp    0x408d4c
  409527:	mov    r13d,0x20
  40952d:	xor    r14d,r14d
  409530:	jmp    0x408de0
  409535:	mov    ecx,0xbbd
  40953a:	call   0x404780
  40953f:	jmp    0x408de0
  409544:	mov    DWORD PTR [rsp+0x74],0x4
  40954c:	mov    ebp,0x4
  409551:	jmp    0x407c14
  409556:	mov    DWORD PTR [rsp+0x74],0x3
  40955e:	mov    ebp,0x3
  409563:	jmp    0x407c14
  409568:	mov    DWORD PTR [rsp+0x74],0x2
  409570:	mov    ebp,0x2
  409575:	jmp    0x407c14
  40957a:	mov    DWORD PTR [rsp+0x4c],0x0
  409582:	mov    DWORD PTR [rsp+0x50],0x0
  40958a:	jmp    0x407f68
  40958f:	mov    r10d,DWORD PTR [rsp+0x68]
  409594:	test   r10d,r10d
  409597:	jle    0x407e0c
  40959d:	lea    rax,[rbx+0x944e]
  4095a4:	lea    r8,[rbx+0xc9b8]
  4095ab:	movzx  edx,BYTE PTR [rax]
  4095ae:	add    r8,0x10
  4095b2:	add    rax,0x1
  4095b6:	mov    ecx,edx
  4095b8:	movzx  edx,BYTE PTR [rax-0x103]
  4095bf:	shl    ecx,0x10
  4095c2:	or     edx,ecx
  4095c4:	mov    DWORD PTR [r8-0x10],edx
  4095c8:	movzx  edx,BYTE PTR [rax+0x203]
  4095cf:	mov    ecx,edx
  4095d1:	movzx  edx,BYTE PTR [rax+0x101]
  4095d8:	shl    ecx,0x10
  4095db:	or     edx,ecx
  4095dd:	mov    DWORD PTR [r8-0xc],edx
  4095e1:	movzx  edx,BYTE PTR [rax+0x407]
  4095e8:	mov    ecx,edx
  4095ea:	movzx  edx,BYTE PTR [rax+0x305]
  4095f1:	shl    ecx,0x10
  4095f4:	or     edx,ecx
  4095f6:	mov    DWORD PTR [r8-0x8],edx
  4095fa:	cmp    r8,QWORD PTR [rsp+0xa0]
  409602:	jne    0x4095ab
  409604:	jmp    0x407e0c
  409609:	mov    ecx,0xbbc
  40960e:	call   0x404780
  409613:	jmp    0x408dd7
  409618:	nop    DWORD PTR [rax+rax*1+0x0]
  409620:	mov    edx,DWORD PTR [rbx+0x284]
  409626:	mov    eax,DWORD PTR [rbx+0x280]
  40962c:	cmp    edx,0x7
  40962f:	jle    0x40966d
  409631:	mov    rdx,QWORD PTR [rbx+0x50]
  409635:	shr    eax,0x18
  409638:	movsxd r9,r9d
  40963b:	mov    BYTE PTR [rdx+r9*1],al
  40963f:	mov    eax,DWORD PTR [rbx+0x74]
  409642:	mov    ecx,DWORD PTR [rbx+0x284]
  409648:	lea    r9d,[rax+0x1]
  40964c:	mov    eax,DWORD PTR [rbx+0x280]
  409652:	lea    edx,[rcx-0x8]
  409655:	mov    DWORD PTR [rbx+0x74],r9d
  409659:	shl    eax,0x8
  40965c:	cmp    edx,0x7
  40965f:	mov    DWORD PTR [rbx+0x284],edx
  409665:	mov    DWORD PTR [rbx+0x280],eax
  40966b:	jg     0x409631
  40966d:	mov    ecx,r11d
  409670:	mov    r14d,r13d
  409673:	sub    ecx,edx
  409675:	shl    r14d,cl
  409678:	or     eax,r14d
  40967b:	mov    DWORD PTR [rbx+0x280],eax
  409681:	lea    eax,[rdx+0x1]
  409684:	mov    DWORD PTR [rbx+0x284],eax
  40968a:	jmp    0x408ec6
  40968f:	mov    r8d,DWORD PTR [rbx+0x284]
  409696:	mov    eax,DWORD PTR [rbx+0x280]
  40969c:	cmp    r8d,0x7
  4096a0:	jle    0x4096e1
  4096a2:	mov    rcx,QWORD PTR [rbx+0x50]
  4096a6:	shr    eax,0x18
  4096a9:	movsxd r9,r9d
  4096ac:	mov    BYTE PTR [rcx+r9*1],al
  4096b0:	mov    eax,DWORD PTR [rbx+0x74]
  4096b3:	mov    ecx,DWORD PTR [rbx+0x284]
  4096b9:	lea    r9d,[rax+0x1]
  4096bd:	mov    eax,DWORD PTR [rbx+0x280]
  4096c3:	lea    r8d,[rcx-0x8]
  4096c7:	mov    DWORD PTR [rbx+0x74],r9d
  4096cb:	shl    eax,0x8
  4096ce:	cmp    r8d,0x7
  4096d2:	mov    DWORD PTR [rbx+0x284],r8d
  4096d9:	mov    DWORD PTR [rbx+0x280],eax
  4096df:	jg     0x4096a2
  4096e1:	mov    ecx,r12d
  4096e4:	mov    r14d,r13d
  4096e7:	sub    ecx,r8d
  4096ea:	add    r8d,0x1
  4096ee:	shl    r14d,cl
  4096f1:	mov    DWORD PTR [rbx+0x284],r8d
  4096f8:	or     eax,r14d
  4096fb:	mov    DWORD PTR [rbx+0x280],eax
  409701:	jmp    0x408f52
  409706:	mov    eax,r14d
  409709:	sub    eax,r9d
  40970c:	cmp    eax,0x31
  40970f:	jne    0x40941e
  409715:	movzx  eax,BYTE PTR [r13+0x6a8]
  40971d:	mov    r10d,DWORD PTR [rbx+0x284]
  409724:	mov    rdx,rax
  409727:	mov    rcx,rax
  40972a:	shl    rdx,0x8
  40972e:	shl    rcx,0xa
  409732:	lea    rdx,[rdx+rax*2+0x9340]
  40973a:	lea    rax,[rcx+rax*8+0x9950]
  409742:	lea    r8,[rbx+rax*1+0x8]
  409747:	movsxd rax,r9d
  40974a:	add    rdx,rbx
  40974d:	lea    r9,[rax+rax*1]
  409751:	movzx  eax,WORD PTR [rdi+rax*2]
  409755:	cmp    r10d,0x7
  409759:	mov    r15d,DWORD PTR [r8+rax*4]
  40975d:	movzx  r11d,BYTE PTR [rax+rdx*1+0xc]
  409763:	jle    0x40aec5
  409769:	mov    ecx,DWORD PTR [rbx+0x74]
  40976c:	mov    eax,DWORD PTR [rbx+0x280]
  409772:	mov    r10,QWORD PTR [rbx+0x50]
  409776:	shr    eax,0x18
  409779:	movsxd rcx,ecx
  40977c:	mov    BYTE PTR [r10+rcx*1],al
  409780:	mov    eax,DWORD PTR [rbx+0x74]
  409783:	mov    r10d,DWORD PTR [rbx+0x284]
  40978a:	lea    ecx,[rax+0x1]
  40978d:	mov    eax,DWORD PTR [rbx+0x280]
  409793:	sub    r10d,0x8
  409797:	mov    DWORD PTR [rbx+0x74],ecx
  40979a:	mov    DWORD PTR [rbx+0x284],r10d
  4097a1:	shl    eax,0x8
  4097a4:	cmp    r10d,0x7
  4097a8:	mov    DWORD PTR [rbx+0x280],eax
  4097ae:	jg     0x409772
  4097b0:	mov    ecx,r12d
  4097b3:	sub    ecx,r10d
  4097b6:	add    r10d,r11d
  4097b9:	sub    ecx,r11d
  4097bc:	mov    DWORD PTR [rbx+0x284],r10d
  4097c3:	shl    r15d,cl
  4097c6:	movzx  ecx,WORD PTR [rdi+r9*1+0x2]
  4097cc:	or     eax,r15d
  4097cf:	cmp    r10d,0x7
  4097d3:	mov    DWORD PTR [rbx+0x280],eax
  4097d9:	mov    r15d,DWORD PTR [r8+rcx*4]
  4097dd:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  4097e3:	jle    0x409826
  4097e5:	mov    ecx,DWORD PTR [rbx+0x74]
  4097e8:	mov    r10,QWORD PTR [rbx+0x50]
  4097ec:	shr    eax,0x18
  4097ef:	movsxd rcx,ecx
  4097f2:	mov    BYTE PTR [r10+rcx*1],al
  4097f6:	mov    eax,DWORD PTR [rbx+0x74]
  4097f9:	mov    r10d,DWORD PTR [rbx+0x284]
  409800:	lea    ecx,[rax+0x1]
  409803:	mov    eax,DWORD PTR [rbx+0x280]
  409809:	sub    r10d,0x8
  40980d:	mov    DWORD PTR [rbx+0x74],ecx
  409810:	mov    DWORD PTR [rbx+0x284],r10d
  409817:	shl    eax,0x8
  40981a:	cmp    r10d,0x7
  40981e:	mov    DWORD PTR [rbx+0x280],eax
  409824:	jg     0x4097e8
  409826:	mov    ecx,r12d
  409829:	sub    ecx,r10d
  40982c:	add    r10d,r11d
  40982f:	sub    ecx,r11d
  409832:	mov    DWORD PTR [rbx+0x284],r10d
  409839:	shl    r15d,cl
  40983c:	movzx  ecx,WORD PTR [rdi+r9*1+0x4]
  409842:	or     eax,r15d
  409845:	cmp    r10d,0x7
  409849:	mov    DWORD PTR [rbx+0x280],eax
  40984f:	mov    r15d,DWORD PTR [r8+rcx*4]
  409853:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409859:	jle    0x40989c
  40985b:	mov    ecx,DWORD PTR [rbx+0x74]
  40985e:	mov    r10,QWORD PTR [rbx+0x50]
  409862:	shr    eax,0x18
  409865:	movsxd rcx,ecx
  409868:	mov    BYTE PTR [r10+rcx*1],al
  40986c:	mov    eax,DWORD PTR [rbx+0x74]
  40986f:	mov    r10d,DWORD PTR [rbx+0x284]
  409876:	lea    ecx,[rax+0x1]
  409879:	mov    eax,DWORD PTR [rbx+0x280]
  40987f:	sub    r10d,0x8
  409883:	mov    DWORD PTR [rbx+0x74],ecx
  409886:	mov    DWORD PTR [rbx+0x284],r10d
  40988d:	shl    eax,0x8
  409890:	cmp    r10d,0x7
  409894:	mov    DWORD PTR [rbx+0x280],eax
  40989a:	jg     0x40985e
  40989c:	mov    ecx,r12d
  40989f:	sub    ecx,r10d
  4098a2:	add    r10d,r11d
  4098a5:	sub    ecx,r11d
  4098a8:	mov    DWORD PTR [rbx+0x284],r10d
  4098af:	shl    r15d,cl
  4098b2:	movzx  ecx,WORD PTR [rdi+r9*1+0x6]
  4098b8:	or     eax,r15d
  4098bb:	cmp    r10d,0x7
  4098bf:	mov    DWORD PTR [rbx+0x280],eax
  4098c5:	mov    r15d,DWORD PTR [r8+rcx*4]
  4098c9:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  4098cf:	jle    0x409912
  4098d1:	mov    ecx,DWORD PTR [rbx+0x74]
  4098d4:	mov    r10,QWORD PTR [rbx+0x50]
  4098d8:	shr    eax,0x18
  4098db:	movsxd rcx,ecx
  4098de:	mov    BYTE PTR [r10+rcx*1],al
  4098e2:	mov    eax,DWORD PTR [rbx+0x74]
  4098e5:	mov    r10d,DWORD PTR [rbx+0x284]
  4098ec:	lea    ecx,[rax+0x1]
  4098ef:	mov    eax,DWORD PTR [rbx+0x280]
  4098f5:	sub    r10d,0x8
  4098f9:	mov    DWORD PTR [rbx+0x74],ecx
  4098fc:	mov    DWORD PTR [rbx+0x284],r10d
  409903:	shl    eax,0x8
  409906:	cmp    r10d,0x7
  40990a:	mov    DWORD PTR [rbx+0x280],eax
  409910:	jg     0x4098d4
  409912:	mov    ecx,r12d
  409915:	sub    ecx,r10d
  409918:	add    r10d,r11d
  40991b:	sub    ecx,r11d
  40991e:	mov    DWORD PTR [rbx+0x284],r10d
  409925:	shl    r15d,cl
  409928:	movzx  ecx,WORD PTR [rdi+r9*1+0x8]
  40992e:	or     eax,r15d
  409931:	cmp    r10d,0x7
  409935:	mov    DWORD PTR [rbx+0x280],eax
  40993b:	mov    r15d,DWORD PTR [r8+rcx*4]
  40993f:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409945:	jle    0x409988
  409947:	mov    ecx,DWORD PTR [rbx+0x74]
  40994a:	mov    r10,QWORD PTR [rbx+0x50]
  40994e:	shr    eax,0x18
  409951:	movsxd rcx,ecx
  409954:	mov    BYTE PTR [r10+rcx*1],al
  409958:	mov    eax,DWORD PTR [rbx+0x74]
  40995b:	mov    r10d,DWORD PTR [rbx+0x284]
  409962:	lea    ecx,[rax+0x1]
  409965:	mov    eax,DWORD PTR [rbx+0x280]
  40996b:	sub    r10d,0x8
  40996f:	mov    DWORD PTR [rbx+0x74],ecx
  409972:	mov    DWORD PTR [rbx+0x284],r10d
  409979:	shl    eax,0x8
  40997c:	cmp    r10d,0x7
  409980:	mov    DWORD PTR [rbx+0x280],eax
  409986:	jg     0x40994a
  409988:	mov    ecx,r12d
  40998b:	sub    ecx,r10d
  40998e:	add    r10d,r11d
  409991:	sub    ecx,r11d
  409994:	mov    DWORD PTR [rbx+0x284],r10d
  40999b:	shl    r15d,cl
  40999e:	movzx  ecx,WORD PTR [rdi+r9*1+0xa]
  4099a4:	or     eax,r15d
  4099a7:	cmp    r10d,0x7
  4099ab:	mov    DWORD PTR [rbx+0x280],eax
  4099b1:	mov    r15d,DWORD PTR [r8+rcx*4]
  4099b5:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  4099bb:	jle    0x4099fe
  4099bd:	mov    ecx,DWORD PTR [rbx+0x74]
  4099c0:	mov    r10,QWORD PTR [rbx+0x50]
  4099c4:	shr    eax,0x18
  4099c7:	movsxd rcx,ecx
  4099ca:	mov    BYTE PTR [r10+rcx*1],al
  4099ce:	mov    eax,DWORD PTR [rbx+0x74]
  4099d1:	mov    r10d,DWORD PTR [rbx+0x284]
  4099d8:	lea    ecx,[rax+0x1]
  4099db:	mov    eax,DWORD PTR [rbx+0x280]
  4099e1:	sub    r10d,0x8
  4099e5:	mov    DWORD PTR [rbx+0x74],ecx
  4099e8:	mov    DWORD PTR [rbx+0x284],r10d
  4099ef:	shl    eax,0x8
  4099f2:	cmp    r10d,0x7
  4099f6:	mov    DWORD PTR [rbx+0x280],eax
  4099fc:	jg     0x4099c0
  4099fe:	mov    ecx,r12d
  409a01:	sub    ecx,r10d
  409a04:	add    r10d,r11d
  409a07:	sub    ecx,r11d
  409a0a:	mov    DWORD PTR [rbx+0x284],r10d
  409a11:	shl    r15d,cl
  409a14:	movzx  ecx,WORD PTR [rdi+r9*1+0xc]
  409a1a:	or     eax,r15d
  409a1d:	cmp    r10d,0x7
  409a21:	mov    DWORD PTR [rbx+0x280],eax
  409a27:	mov    r15d,DWORD PTR [r8+rcx*4]
  409a2b:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409a31:	jle    0x409a74
  409a33:	mov    ecx,DWORD PTR [rbx+0x74]
  409a36:	mov    r10,QWORD PTR [rbx+0x50]
  409a3a:	shr    eax,0x18
  409a3d:	movsxd rcx,ecx
  409a40:	mov    BYTE PTR [r10+rcx*1],al
  409a44:	mov    eax,DWORD PTR [rbx+0x74]
  409a47:	mov    r10d,DWORD PTR [rbx+0x284]
  409a4e:	lea    ecx,[rax+0x1]
  409a51:	mov    eax,DWORD PTR [rbx+0x280]
  409a57:	sub    r10d,0x8
  409a5b:	mov    DWORD PTR [rbx+0x74],ecx
  409a5e:	mov    DWORD PTR [rbx+0x284],r10d
  409a65:	shl    eax,0x8
  409a68:	cmp    r10d,0x7
  409a6c:	mov    DWORD PTR [rbx+0x280],eax
  409a72:	jg     0x409a36
  409a74:	mov    ecx,r12d
  409a77:	sub    ecx,r10d
  409a7a:	add    r10d,r11d
  409a7d:	sub    ecx,r11d
  409a80:	mov    DWORD PTR [rbx+0x284],r10d
  409a87:	shl    r15d,cl
  409a8a:	movzx  ecx,WORD PTR [rdi+r9*1+0xe]
  409a90:	or     eax,r15d
  409a93:	cmp    r10d,0x7
  409a97:	mov    DWORD PTR [rbx+0x280],eax
  409a9d:	mov    r15d,DWORD PTR [r8+rcx*4]
  409aa1:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409aa7:	jle    0x409aea
  409aa9:	mov    ecx,DWORD PTR [rbx+0x74]
  409aac:	mov    r10,QWORD PTR [rbx+0x50]
  409ab0:	shr    eax,0x18
  409ab3:	movsxd rcx,ecx
  409ab6:	mov    BYTE PTR [r10+rcx*1],al
  409aba:	mov    eax,DWORD PTR [rbx+0x74]
  409abd:	mov    r10d,DWORD PTR [rbx+0x284]
  409ac4:	lea    ecx,[rax+0x1]
  409ac7:	mov    eax,DWORD PTR [rbx+0x280]
  409acd:	sub    r10d,0x8
  409ad1:	mov    DWORD PTR [rbx+0x74],ecx
  409ad4:	mov    DWORD PTR [rbx+0x284],r10d
  409adb:	shl    eax,0x8
  409ade:	cmp    r10d,0x7
  409ae2:	mov    DWORD PTR [rbx+0x280],eax
  409ae8:	jg     0x409aac
  409aea:	mov    ecx,r12d
  409aed:	sub    ecx,r10d
  409af0:	add    r10d,r11d
  409af3:	sub    ecx,r11d
  409af6:	mov    DWORD PTR [rbx+0x284],r10d
  409afd:	shl    r15d,cl
  409b00:	movzx  ecx,WORD PTR [rdi+r9*1+0x10]
  409b06:	or     eax,r15d
  409b09:	cmp    r10d,0x7
  409b0d:	mov    DWORD PTR [rbx+0x280],eax
  409b13:	mov    r15d,DWORD PTR [r8+rcx*4]
  409b17:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409b1d:	jle    0x409b60
  409b1f:	mov    ecx,DWORD PTR [rbx+0x74]
  409b22:	mov    r10,QWORD PTR [rbx+0x50]
  409b26:	shr    eax,0x18
  409b29:	movsxd rcx,ecx
  409b2c:	mov    BYTE PTR [r10+rcx*1],al
  409b30:	mov    eax,DWORD PTR [rbx+0x74]
  409b33:	mov    r10d,DWORD PTR [rbx+0x284]
  409b3a:	lea    ecx,[rax+0x1]
  409b3d:	mov    eax,DWORD PTR [rbx+0x280]
  409b43:	sub    r10d,0x8
  409b47:	mov    DWORD PTR [rbx+0x74],ecx
  409b4a:	mov    DWORD PTR [rbx+0x284],r10d
  409b51:	shl    eax,0x8
  409b54:	cmp    r10d,0x7
  409b58:	mov    DWORD PTR [rbx+0x280],eax
  409b5e:	jg     0x409b22
  409b60:	mov    ecx,r12d
  409b63:	sub    ecx,r10d
  409b66:	add    r10d,r11d
  409b69:	sub    ecx,r11d
  409b6c:	mov    DWORD PTR [rbx+0x284],r10d
  409b73:	shl    r15d,cl
  409b76:	movzx  ecx,WORD PTR [rdi+r9*1+0x12]
  409b7c:	or     eax,r15d
  409b7f:	cmp    r10d,0x7
  409b83:	mov    DWORD PTR [rbx+0x280],eax
  409b89:	mov    r15d,DWORD PTR [r8+rcx*4]
  409b8d:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409b93:	jle    0x409bd6
  409b95:	mov    ecx,DWORD PTR [rbx+0x74]
  409b98:	mov    r10,QWORD PTR [rbx+0x50]
  409b9c:	shr    eax,0x18
  409b9f:	movsxd rcx,ecx
  409ba2:	mov    BYTE PTR [r10+rcx*1],al
  409ba6:	mov    eax,DWORD PTR [rbx+0x74]
  409ba9:	mov    r10d,DWORD PTR [rbx+0x284]
  409bb0:	lea    ecx,[rax+0x1]
  409bb3:	mov    eax,DWORD PTR [rbx+0x280]
  409bb9:	sub    r10d,0x8
  409bbd:	mov    DWORD PTR [rbx+0x74],ecx
  409bc0:	mov    DWORD PTR [rbx+0x284],r10d
  409bc7:	shl    eax,0x8
  409bca:	cmp    r10d,0x7
  409bce:	mov    DWORD PTR [rbx+0x280],eax
  409bd4:	jg     0x409b98
  409bd6:	mov    ecx,r12d
  409bd9:	sub    ecx,r10d
  409bdc:	add    r10d,r11d
  409bdf:	sub    ecx,r11d
  409be2:	mov    DWORD PTR [rbx+0x284],r10d
  409be9:	shl    r15d,cl
  409bec:	movzx  ecx,WORD PTR [rdi+r9*1+0x14]
  409bf2:	or     eax,r15d
  409bf5:	cmp    r10d,0x7
  409bf9:	mov    DWORD PTR [rbx+0x280],eax
  409bff:	mov    r15d,DWORD PTR [r8+rcx*4]
  409c03:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409c09:	jle    0x409c4c
  409c0b:	mov    ecx,DWORD PTR [rbx+0x74]
  409c0e:	mov    r10,QWORD PTR [rbx+0x50]
  409c12:	shr    eax,0x18
  409c15:	movsxd rcx,ecx
  409c18:	mov    BYTE PTR [r10+rcx*1],al
  409c1c:	mov    eax,DWORD PTR [rbx+0x74]
  409c1f:	mov    r10d,DWORD PTR [rbx+0x284]
  409c26:	lea    ecx,[rax+0x1]
  409c29:	mov    eax,DWORD PTR [rbx+0x280]
  409c2f:	sub    r10d,0x8
  409c33:	mov    DWORD PTR [rbx+0x74],ecx
  409c36:	mov    DWORD PTR [rbx+0x284],r10d
  409c3d:	shl    eax,0x8
  409c40:	cmp    r10d,0x7
  409c44:	mov    DWORD PTR [rbx+0x280],eax
  409c4a:	jg     0x409c0e
  409c4c:	mov    ecx,r12d
  409c4f:	sub    ecx,r10d
  409c52:	add    r10d,r11d
  409c55:	sub    ecx,r11d
  409c58:	mov    DWORD PTR [rbx+0x284],r10d
  409c5f:	shl    r15d,cl
  409c62:	movzx  ecx,WORD PTR [rdi+r9*1+0x16]
  409c68:	or     eax,r15d
  409c6b:	cmp    r10d,0x7
  409c6f:	mov    DWORD PTR [rbx+0x280],eax
  409c75:	mov    r15d,DWORD PTR [r8+rcx*4]
  409c79:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409c7f:	jle    0x409cc2
  409c81:	mov    ecx,DWORD PTR [rbx+0x74]
  409c84:	mov    r10,QWORD PTR [rbx+0x50]
  409c88:	shr    eax,0x18
  409c8b:	movsxd rcx,ecx
  409c8e:	mov    BYTE PTR [r10+rcx*1],al
  409c92:	mov    eax,DWORD PTR [rbx+0x74]
  409c95:	mov    r10d,DWORD PTR [rbx+0x284]
  409c9c:	lea    ecx,[rax+0x1]
  409c9f:	mov    eax,DWORD PTR [rbx+0x280]
  409ca5:	sub    r10d,0x8
  409ca9:	mov    DWORD PTR [rbx+0x74],ecx
  409cac:	mov    DWORD PTR [rbx+0x284],r10d
  409cb3:	shl    eax,0x8
  409cb6:	cmp    r10d,0x7
  409cba:	mov    DWORD PTR [rbx+0x280],eax
  409cc0:	jg     0x409c84
  409cc2:	mov    ecx,r12d
  409cc5:	sub    ecx,r10d
  409cc8:	add    r10d,r11d
  409ccb:	sub    ecx,r11d
  409cce:	mov    DWORD PTR [rbx+0x284],r10d
  409cd5:	shl    r15d,cl
  409cd8:	movzx  ecx,WORD PTR [rdi+r9*1+0x18]
  409cde:	or     eax,r15d
  409ce1:	cmp    r10d,0x7
  409ce5:	mov    DWORD PTR [rbx+0x280],eax
  409ceb:	mov    r15d,DWORD PTR [r8+rcx*4]
  409cef:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409cf5:	jle    0x409d38
  409cf7:	mov    ecx,DWORD PTR [rbx+0x74]
  409cfa:	mov    r10,QWORD PTR [rbx+0x50]
  409cfe:	shr    eax,0x18
  409d01:	movsxd rcx,ecx
  409d04:	mov    BYTE PTR [r10+rcx*1],al
  409d08:	mov    eax,DWORD PTR [rbx+0x74]
  409d0b:	mov    r10d,DWORD PTR [rbx+0x284]
  409d12:	lea    ecx,[rax+0x1]
  409d15:	mov    eax,DWORD PTR [rbx+0x280]
  409d1b:	sub    r10d,0x8
  409d1f:	mov    DWORD PTR [rbx+0x74],ecx
  409d22:	mov    DWORD PTR [rbx+0x284],r10d
  409d29:	shl    eax,0x8
  409d2c:	cmp    r10d,0x7
  409d30:	mov    DWORD PTR [rbx+0x280],eax
  409d36:	jg     0x409cfa
  409d38:	mov    ecx,r12d
  409d3b:	sub    ecx,r10d
  409d3e:	add    r10d,r11d
  409d41:	sub    ecx,r11d
  409d44:	mov    DWORD PTR [rbx+0x284],r10d
  409d4b:	shl    r15d,cl
  409d4e:	movzx  ecx,WORD PTR [rdi+r9*1+0x1a]
  409d54:	or     eax,r15d
  409d57:	cmp    r10d,0x7
  409d5b:	mov    DWORD PTR [rbx+0x280],eax
  409d61:	mov    r15d,DWORD PTR [r8+rcx*4]
  409d65:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409d6b:	jle    0x409dae
  409d6d:	mov    ecx,DWORD PTR [rbx+0x74]
  409d70:	mov    r10,QWORD PTR [rbx+0x50]
  409d74:	shr    eax,0x18
  409d77:	movsxd rcx,ecx
  409d7a:	mov    BYTE PTR [r10+rcx*1],al
  409d7e:	mov    eax,DWORD PTR [rbx+0x74]
  409d81:	mov    r10d,DWORD PTR [rbx+0x284]
  409d88:	lea    ecx,[rax+0x1]
  409d8b:	mov    eax,DWORD PTR [rbx+0x280]
  409d91:	sub    r10d,0x8
  409d95:	mov    DWORD PTR [rbx+0x74],ecx
  409d98:	mov    DWORD PTR [rbx+0x284],r10d
  409d9f:	shl    eax,0x8
  409da2:	cmp    r10d,0x7
  409da6:	mov    DWORD PTR [rbx+0x280],eax
  409dac:	jg     0x409d70
  409dae:	mov    ecx,r12d
  409db1:	sub    ecx,r10d
  409db4:	add    r10d,r11d
  409db7:	sub    ecx,r11d
  409dba:	mov    DWORD PTR [rbx+0x284],r10d
  409dc1:	shl    r15d,cl
  409dc4:	movzx  ecx,WORD PTR [rdi+r9*1+0x1c]
  409dca:	or     eax,r15d
  409dcd:	cmp    r10d,0x7
  409dd1:	mov    DWORD PTR [rbx+0x280],eax
  409dd7:	mov    r15d,DWORD PTR [r8+rcx*4]
  409ddb:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409de1:	jle    0x409e24
  409de3:	mov    ecx,DWORD PTR [rbx+0x74]
  409de6:	mov    r10,QWORD PTR [rbx+0x50]
  409dea:	shr    eax,0x18
  409ded:	movsxd rcx,ecx
  409df0:	mov    BYTE PTR [r10+rcx*1],al
  409df4:	mov    eax,DWORD PTR [rbx+0x74]
  409df7:	mov    r10d,DWORD PTR [rbx+0x284]
  409dfe:	lea    ecx,[rax+0x1]
  409e01:	mov    eax,DWORD PTR [rbx+0x280]
  409e07:	sub    r10d,0x8
  409e0b:	mov    DWORD PTR [rbx+0x74],ecx
  409e0e:	mov    DWORD PTR [rbx+0x284],r10d
  409e15:	shl    eax,0x8
  409e18:	cmp    r10d,0x7
  409e1c:	mov    DWORD PTR [rbx+0x280],eax
  409e22:	jg     0x409de6
  409e24:	mov    ecx,r12d
  409e27:	sub    ecx,r10d
  409e2a:	add    r10d,r11d
  409e2d:	sub    ecx,r11d
  409e30:	mov    DWORD PTR [rbx+0x284],r10d
  409e37:	shl    r15d,cl
  409e3a:	movzx  ecx,WORD PTR [rdi+r9*1+0x1e]
  409e40:	or     eax,r15d
  409e43:	cmp    r10d,0x7
  409e47:	mov    DWORD PTR [rbx+0x280],eax
  409e4d:	mov    r15d,DWORD PTR [r8+rcx*4]
  409e51:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409e57:	jle    0x409e9a
  409e59:	mov    ecx,DWORD PTR [rbx+0x74]
  409e5c:	mov    r10,QWORD PTR [rbx+0x50]
  409e60:	shr    eax,0x18
  409e63:	movsxd rcx,ecx
  409e66:	mov    BYTE PTR [r10+rcx*1],al
  409e6a:	mov    eax,DWORD PTR [rbx+0x74]
  409e6d:	mov    r10d,DWORD PTR [rbx+0x284]
  409e74:	lea    ecx,[rax+0x1]
  409e77:	mov    eax,DWORD PTR [rbx+0x280]
  409e7d:	sub    r10d,0x8
  409e81:	mov    DWORD PTR [rbx+0x74],ecx
  409e84:	mov    DWORD PTR [rbx+0x284],r10d
  409e8b:	shl    eax,0x8
  409e8e:	cmp    r10d,0x7
  409e92:	mov    DWORD PTR [rbx+0x280],eax
  409e98:	jg     0x409e5c
  409e9a:	mov    ecx,r12d
  409e9d:	sub    ecx,r10d
  409ea0:	add    r10d,r11d
  409ea3:	sub    ecx,r11d
  409ea6:	mov    DWORD PTR [rbx+0x284],r10d
  409ead:	shl    r15d,cl
  409eb0:	movzx  ecx,WORD PTR [rdi+r9*1+0x20]
  409eb6:	or     eax,r15d
  409eb9:	cmp    r10d,0x7
  409ebd:	mov    DWORD PTR [rbx+0x280],eax
  409ec3:	mov    r15d,DWORD PTR [r8+rcx*4]
  409ec7:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409ecd:	jle    0x409f10
  409ecf:	mov    ecx,DWORD PTR [rbx+0x74]
  409ed2:	mov    r10,QWORD PTR [rbx+0x50]
  409ed6:	shr    eax,0x18
  409ed9:	movsxd rcx,ecx
  409edc:	mov    BYTE PTR [r10+rcx*1],al
  409ee0:	mov    eax,DWORD PTR [rbx+0x74]
  409ee3:	mov    r10d,DWORD PTR [rbx+0x284]
  409eea:	lea    ecx,[rax+0x1]
  409eed:	mov    eax,DWORD PTR [rbx+0x280]
  409ef3:	sub    r10d,0x8
  409ef7:	mov    DWORD PTR [rbx+0x74],ecx
  409efa:	mov    DWORD PTR [rbx+0x284],r10d
  409f01:	shl    eax,0x8
  409f04:	cmp    r10d,0x7
  409f08:	mov    DWORD PTR [rbx+0x280],eax
  409f0e:	jg     0x409ed2
  409f10:	mov    ecx,r12d
  409f13:	sub    ecx,r10d
  409f16:	add    r10d,r11d
  409f19:	sub    ecx,r11d
  409f1c:	mov    DWORD PTR [rbx+0x284],r10d
  409f23:	shl    r15d,cl
  409f26:	movzx  ecx,WORD PTR [rdi+r9*1+0x22]
  409f2c:	or     eax,r15d
  409f2f:	cmp    r10d,0x7
  409f33:	mov    DWORD PTR [rbx+0x280],eax
  409f39:	mov    r15d,DWORD PTR [r8+rcx*4]
  409f3d:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409f43:	jle    0x409f86
  409f45:	mov    ecx,DWORD PTR [rbx+0x74]
  409f48:	mov    r10,QWORD PTR [rbx+0x50]
  409f4c:	shr    eax,0x18
  409f4f:	movsxd rcx,ecx
  409f52:	mov    BYTE PTR [r10+rcx*1],al
  409f56:	mov    eax,DWORD PTR [rbx+0x74]
  409f59:	mov    r10d,DWORD PTR [rbx+0x284]
  409f60:	lea    ecx,[rax+0x1]
  409f63:	mov    eax,DWORD PTR [rbx+0x280]
  409f69:	sub    r10d,0x8
  409f6d:	mov    DWORD PTR [rbx+0x74],ecx
  409f70:	mov    DWORD PTR [rbx+0x284],r10d
  409f77:	shl    eax,0x8
  409f7a:	cmp    r10d,0x7
  409f7e:	mov    DWORD PTR [rbx+0x280],eax
  409f84:	jg     0x409f48
  409f86:	mov    ecx,r12d
  409f89:	sub    ecx,r10d
  409f8c:	add    r10d,r11d
  409f8f:	sub    ecx,r11d
  409f92:	mov    DWORD PTR [rbx+0x284],r10d
  409f99:	shl    r15d,cl
  409f9c:	movzx  ecx,WORD PTR [rdi+r9*1+0x24]
  409fa2:	or     eax,r15d
  409fa5:	cmp    r10d,0x7
  409fa9:	mov    DWORD PTR [rbx+0x280],eax
  409faf:	mov    r15d,DWORD PTR [r8+rcx*4]
  409fb3:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  409fb9:	jle    0x409ffc
  409fbb:	mov    ecx,DWORD PTR [rbx+0x74]
  409fbe:	mov    r10,QWORD PTR [rbx+0x50]
  409fc2:	shr    eax,0x18
  409fc5:	movsxd rcx,ecx
  409fc8:	mov    BYTE PTR [r10+rcx*1],al
  409fcc:	mov    eax,DWORD PTR [rbx+0x74]
  409fcf:	mov    r10d,DWORD PTR [rbx+0x284]
  409fd6:	lea    ecx,[rax+0x1]
  409fd9:	mov    eax,DWORD PTR [rbx+0x280]
  409fdf:	sub    r10d,0x8
  409fe3:	mov    DWORD PTR [rbx+0x74],ecx
  409fe6:	mov    DWORD PTR [rbx+0x284],r10d
  409fed:	shl    eax,0x8
  409ff0:	cmp    r10d,0x7
  409ff4:	mov    DWORD PTR [rbx+0x280],eax
  409ffa:	jg     0x409fbe
  409ffc:	mov    ecx,r12d
  409fff:	sub    ecx,r10d
  40a002:	add    r10d,r11d
  40a005:	sub    ecx,r11d
  40a008:	mov    DWORD PTR [rbx+0x284],r10d
  40a00f:	shl    r15d,cl
  40a012:	movzx  ecx,WORD PTR [rdi+r9*1+0x26]
  40a018:	or     eax,r15d
  40a01b:	cmp    r10d,0x7
  40a01f:	mov    DWORD PTR [rbx+0x280],eax
  40a025:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a029:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a02f:	jle    0x40a072
  40a031:	mov    ecx,DWORD PTR [rbx+0x74]
  40a034:	mov    r10,QWORD PTR [rbx+0x50]
  40a038:	shr    eax,0x18
  40a03b:	movsxd rcx,ecx
  40a03e:	mov    BYTE PTR [r10+rcx*1],al
  40a042:	mov    eax,DWORD PTR [rbx+0x74]
  40a045:	mov    r10d,DWORD PTR [rbx+0x284]
  40a04c:	lea    ecx,[rax+0x1]
  40a04f:	mov    eax,DWORD PTR [rbx+0x280]
  40a055:	sub    r10d,0x8
  40a059:	mov    DWORD PTR [rbx+0x74],ecx
  40a05c:	mov    DWORD PTR [rbx+0x284],r10d
  40a063:	shl    eax,0x8
  40a066:	cmp    r10d,0x7
  40a06a:	mov    DWORD PTR [rbx+0x280],eax
  40a070:	jg     0x40a034
  40a072:	mov    ecx,r12d
  40a075:	sub    ecx,r10d
  40a078:	add    r10d,r11d
  40a07b:	sub    ecx,r11d
  40a07e:	mov    DWORD PTR [rbx+0x284],r10d
  40a085:	shl    r15d,cl
  40a088:	movzx  ecx,WORD PTR [rdi+r9*1+0x28]
  40a08e:	or     eax,r15d
  40a091:	cmp    r10d,0x7
  40a095:	mov    DWORD PTR [rbx+0x280],eax
  40a09b:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a09f:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a0a5:	jle    0x40a0e8
  40a0a7:	mov    ecx,DWORD PTR [rbx+0x74]
  40a0aa:	mov    r10,QWORD PTR [rbx+0x50]
  40a0ae:	shr    eax,0x18
  40a0b1:	movsxd rcx,ecx
  40a0b4:	mov    BYTE PTR [r10+rcx*1],al
  40a0b8:	mov    eax,DWORD PTR [rbx+0x74]
  40a0bb:	mov    r10d,DWORD PTR [rbx+0x284]
  40a0c2:	lea    ecx,[rax+0x1]
  40a0c5:	mov    eax,DWORD PTR [rbx+0x280]
  40a0cb:	sub    r10d,0x8
  40a0cf:	mov    DWORD PTR [rbx+0x74],ecx
  40a0d2:	mov    DWORD PTR [rbx+0x284],r10d
  40a0d9:	shl    eax,0x8
  40a0dc:	cmp    r10d,0x7
  40a0e0:	mov    DWORD PTR [rbx+0x280],eax
  40a0e6:	jg     0x40a0aa
  40a0e8:	mov    ecx,r12d
  40a0eb:	sub    ecx,r10d
  40a0ee:	add    r10d,r11d
  40a0f1:	sub    ecx,r11d
  40a0f4:	mov    DWORD PTR [rbx+0x284],r10d
  40a0fb:	shl    r15d,cl
  40a0fe:	movzx  ecx,WORD PTR [rdi+r9*1+0x2a]
  40a104:	or     eax,r15d
  40a107:	cmp    r10d,0x7
  40a10b:	mov    DWORD PTR [rbx+0x280],eax
  40a111:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a115:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a11b:	jle    0x40a15e
  40a11d:	mov    ecx,DWORD PTR [rbx+0x74]
  40a120:	mov    r10,QWORD PTR [rbx+0x50]
  40a124:	shr    eax,0x18
  40a127:	movsxd rcx,ecx
  40a12a:	mov    BYTE PTR [r10+rcx*1],al
  40a12e:	mov    eax,DWORD PTR [rbx+0x74]
  40a131:	mov    r10d,DWORD PTR [rbx+0x284]
  40a138:	lea    ecx,[rax+0x1]
  40a13b:	mov    eax,DWORD PTR [rbx+0x280]
  40a141:	sub    r10d,0x8
  40a145:	mov    DWORD PTR [rbx+0x74],ecx
  40a148:	mov    DWORD PTR [rbx+0x284],r10d
  40a14f:	shl    eax,0x8
  40a152:	cmp    r10d,0x7
  40a156:	mov    DWORD PTR [rbx+0x280],eax
  40a15c:	jg     0x40a120
  40a15e:	mov    ecx,r12d
  40a161:	sub    ecx,r10d
  40a164:	add    r10d,r11d
  40a167:	sub    ecx,r11d
  40a16a:	mov    DWORD PTR [rbx+0x284],r10d
  40a171:	shl    r15d,cl
  40a174:	movzx  ecx,WORD PTR [rdi+r9*1+0x2c]
  40a17a:	or     eax,r15d
  40a17d:	cmp    r10d,0x7
  40a181:	mov    DWORD PTR [rbx+0x280],eax
  40a187:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a18b:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a191:	jle    0x40a1d4
  40a193:	mov    ecx,DWORD PTR [rbx+0x74]
  40a196:	mov    r10,QWORD PTR [rbx+0x50]
  40a19a:	shr    eax,0x18
  40a19d:	movsxd rcx,ecx
  40a1a0:	mov    BYTE PTR [r10+rcx*1],al
  40a1a4:	mov    eax,DWORD PTR [rbx+0x74]
  40a1a7:	mov    r10d,DWORD PTR [rbx+0x284]
  40a1ae:	lea    ecx,[rax+0x1]
  40a1b1:	mov    eax,DWORD PTR [rbx+0x280]
  40a1b7:	sub    r10d,0x8
  40a1bb:	mov    DWORD PTR [rbx+0x74],ecx
  40a1be:	mov    DWORD PTR [rbx+0x284],r10d
  40a1c5:	shl    eax,0x8
  40a1c8:	cmp    r10d,0x7
  40a1cc:	mov    DWORD PTR [rbx+0x280],eax
  40a1d2:	jg     0x40a196
  40a1d4:	mov    ecx,r12d
  40a1d7:	sub    ecx,r10d
  40a1da:	add    r10d,r11d
  40a1dd:	sub    ecx,r11d
  40a1e0:	mov    DWORD PTR [rbx+0x284],r10d
  40a1e7:	shl    r15d,cl
  40a1ea:	movzx  ecx,WORD PTR [rdi+r9*1+0x2e]
  40a1f0:	or     eax,r15d
  40a1f3:	cmp    r10d,0x7
  40a1f7:	mov    DWORD PTR [rbx+0x280],eax
  40a1fd:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a201:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a207:	jle    0x40a24a
  40a209:	mov    ecx,DWORD PTR [rbx+0x74]
  40a20c:	mov    r10,QWORD PTR [rbx+0x50]
  40a210:	shr    eax,0x18
  40a213:	movsxd rcx,ecx
  40a216:	mov    BYTE PTR [r10+rcx*1],al
  40a21a:	mov    eax,DWORD PTR [rbx+0x74]
  40a21d:	mov    r10d,DWORD PTR [rbx+0x284]
  40a224:	lea    ecx,[rax+0x1]
  40a227:	mov    eax,DWORD PTR [rbx+0x280]
  40a22d:	sub    r10d,0x8
  40a231:	mov    DWORD PTR [rbx+0x74],ecx
  40a234:	mov    DWORD PTR [rbx+0x284],r10d
  40a23b:	shl    eax,0x8
  40a23e:	cmp    r10d,0x7
  40a242:	mov    DWORD PTR [rbx+0x280],eax
  40a248:	jg     0x40a20c
  40a24a:	mov    ecx,r12d
  40a24d:	sub    ecx,r10d
  40a250:	add    r10d,r11d
  40a253:	sub    ecx,r11d
  40a256:	mov    DWORD PTR [rbx+0x284],r10d
  40a25d:	shl    r15d,cl
  40a260:	movzx  ecx,WORD PTR [rdi+r9*1+0x30]
  40a266:	or     eax,r15d
  40a269:	cmp    r10d,0x7
  40a26d:	mov    DWORD PTR [rbx+0x280],eax
  40a273:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a277:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a27d:	jle    0x40a2c0
  40a27f:	mov    ecx,DWORD PTR [rbx+0x74]
  40a282:	mov    r10,QWORD PTR [rbx+0x50]
  40a286:	shr    eax,0x18
  40a289:	movsxd rcx,ecx
  40a28c:	mov    BYTE PTR [r10+rcx*1],al
  40a290:	mov    eax,DWORD PTR [rbx+0x74]
  40a293:	mov    r10d,DWORD PTR [rbx+0x284]
  40a29a:	lea    ecx,[rax+0x1]
  40a29d:	mov    eax,DWORD PTR [rbx+0x280]
  40a2a3:	sub    r10d,0x8
  40a2a7:	mov    DWORD PTR [rbx+0x74],ecx
  40a2aa:	mov    DWORD PTR [rbx+0x284],r10d
  40a2b1:	shl    eax,0x8
  40a2b4:	cmp    r10d,0x7
  40a2b8:	mov    DWORD PTR [rbx+0x280],eax
  40a2be:	jg     0x40a282
  40a2c0:	mov    ecx,r12d
  40a2c3:	sub    ecx,r10d
  40a2c6:	add    r10d,r11d
  40a2c9:	sub    ecx,r11d
  40a2cc:	mov    DWORD PTR [rbx+0x284],r10d
  40a2d3:	shl    r15d,cl
  40a2d6:	movzx  ecx,WORD PTR [rdi+r9*1+0x32]
  40a2dc:	or     eax,r15d
  40a2df:	cmp    r10d,0x7
  40a2e3:	mov    DWORD PTR [rbx+0x280],eax
  40a2e9:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a2ed:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a2f3:	jle    0x40a336
  40a2f5:	mov    ecx,DWORD PTR [rbx+0x74]
  40a2f8:	mov    r10,QWORD PTR [rbx+0x50]
  40a2fc:	shr    eax,0x18
  40a2ff:	movsxd rcx,ecx
  40a302:	mov    BYTE PTR [r10+rcx*1],al
  40a306:	mov    eax,DWORD PTR [rbx+0x74]
  40a309:	mov    r10d,DWORD PTR [rbx+0x284]
  40a310:	lea    ecx,[rax+0x1]
  40a313:	mov    eax,DWORD PTR [rbx+0x280]
  40a319:	sub    r10d,0x8
  40a31d:	mov    DWORD PTR [rbx+0x74],ecx
  40a320:	mov    DWORD PTR [rbx+0x284],r10d
  40a327:	shl    eax,0x8
  40a32a:	cmp    r10d,0x7
  40a32e:	mov    DWORD PTR [rbx+0x280],eax
  40a334:	jg     0x40a2f8
  40a336:	mov    ecx,r12d
  40a339:	sub    ecx,r10d
  40a33c:	add    r10d,r11d
  40a33f:	sub    ecx,r11d
  40a342:	mov    DWORD PTR [rbx+0x284],r10d
  40a349:	shl    r15d,cl
  40a34c:	movzx  ecx,WORD PTR [rdi+r9*1+0x34]
  40a352:	or     eax,r15d
  40a355:	cmp    r10d,0x7
  40a359:	mov    DWORD PTR [rbx+0x280],eax
  40a35f:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a363:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a369:	jle    0x40a3ac
  40a36b:	mov    ecx,DWORD PTR [rbx+0x74]
  40a36e:	mov    r10,QWORD PTR [rbx+0x50]
  40a372:	shr    eax,0x18
  40a375:	movsxd rcx,ecx
  40a378:	mov    BYTE PTR [r10+rcx*1],al
  40a37c:	mov    eax,DWORD PTR [rbx+0x74]
  40a37f:	mov    r10d,DWORD PTR [rbx+0x284]
  40a386:	lea    ecx,[rax+0x1]
  40a389:	mov    eax,DWORD PTR [rbx+0x280]
  40a38f:	sub    r10d,0x8
  40a393:	mov    DWORD PTR [rbx+0x74],ecx
  40a396:	mov    DWORD PTR [rbx+0x284],r10d
  40a39d:	shl    eax,0x8
  40a3a0:	cmp    r10d,0x7
  40a3a4:	mov    DWORD PTR [rbx+0x280],eax
  40a3aa:	jg     0x40a36e
  40a3ac:	mov    ecx,r12d
  40a3af:	sub    ecx,r10d
  40a3b2:	add    r10d,r11d
  40a3b5:	sub    ecx,r11d
  40a3b8:	mov    DWORD PTR [rbx+0x284],r10d
  40a3bf:	shl    r15d,cl
  40a3c2:	movzx  ecx,WORD PTR [rdi+r9*1+0x36]
  40a3c8:	or     eax,r15d
  40a3cb:	cmp    r10d,0x7
  40a3cf:	mov    DWORD PTR [rbx+0x280],eax
  40a3d5:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a3d9:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a3df:	jle    0x40a422
  40a3e1:	mov    ecx,DWORD PTR [rbx+0x74]
  40a3e4:	mov    r10,QWORD PTR [rbx+0x50]
  40a3e8:	shr    eax,0x18
  40a3eb:	movsxd rcx,ecx
  40a3ee:	mov    BYTE PTR [r10+rcx*1],al
  40a3f2:	mov    eax,DWORD PTR [rbx+0x74]
  40a3f5:	mov    r10d,DWORD PTR [rbx+0x284]
  40a3fc:	lea    ecx,[rax+0x1]
  40a3ff:	mov    eax,DWORD PTR [rbx+0x280]
  40a405:	sub    r10d,0x8
  40a409:	mov    DWORD PTR [rbx+0x74],ecx
  40a40c:	mov    DWORD PTR [rbx+0x284],r10d
  40a413:	shl    eax,0x8
  40a416:	cmp    r10d,0x7
  40a41a:	mov    DWORD PTR [rbx+0x280],eax
  40a420:	jg     0x40a3e4
  40a422:	mov    ecx,r12d
  40a425:	sub    ecx,r10d
  40a428:	add    r10d,r11d
  40a42b:	sub    ecx,r11d
  40a42e:	mov    DWORD PTR [rbx+0x284],r10d
  40a435:	shl    r15d,cl
  40a438:	movzx  ecx,WORD PTR [rdi+r9*1+0x38]
  40a43e:	or     eax,r15d
  40a441:	cmp    r10d,0x7
  40a445:	mov    DWORD PTR [rbx+0x280],eax
  40a44b:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a44f:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a455:	jle    0x40a498
  40a457:	mov    ecx,DWORD PTR [rbx+0x74]
  40a45a:	mov    r10,QWORD PTR [rbx+0x50]
  40a45e:	shr    eax,0x18
  40a461:	movsxd rcx,ecx
  40a464:	mov    BYTE PTR [r10+rcx*1],al
  40a468:	mov    eax,DWORD PTR [rbx+0x74]
  40a46b:	mov    r10d,DWORD PTR [rbx+0x284]
  40a472:	lea    ecx,[rax+0x1]
  40a475:	mov    eax,DWORD PTR [rbx+0x280]
  40a47b:	sub    r10d,0x8
  40a47f:	mov    DWORD PTR [rbx+0x74],ecx
  40a482:	mov    DWORD PTR [rbx+0x284],r10d
  40a489:	shl    eax,0x8
  40a48c:	cmp    r10d,0x7
  40a490:	mov    DWORD PTR [rbx+0x280],eax
  40a496:	jg     0x40a45a
  40a498:	mov    ecx,r12d
  40a49b:	sub    ecx,r10d
  40a49e:	add    r10d,r11d
  40a4a1:	sub    ecx,r11d
  40a4a4:	mov    DWORD PTR [rbx+0x284],r10d
  40a4ab:	shl    r15d,cl
  40a4ae:	movzx  ecx,WORD PTR [rdi+r9*1+0x3a]
  40a4b4:	or     eax,r15d
  40a4b7:	cmp    r10d,0x7
  40a4bb:	mov    DWORD PTR [rbx+0x280],eax
  40a4c1:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a4c5:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a4cb:	jle    0x40a50e
  40a4cd:	mov    ecx,DWORD PTR [rbx+0x74]
  40a4d0:	mov    r10,QWORD PTR [rbx+0x50]
  40a4d4:	shr    eax,0x18
  40a4d7:	movsxd rcx,ecx
  40a4da:	mov    BYTE PTR [r10+rcx*1],al
  40a4de:	mov    eax,DWORD PTR [rbx+0x74]
  40a4e1:	mov    r10d,DWORD PTR [rbx+0x284]
  40a4e8:	lea    ecx,[rax+0x1]
  40a4eb:	mov    eax,DWORD PTR [rbx+0x280]
  40a4f1:	sub    r10d,0x8
  40a4f5:	mov    DWORD PTR [rbx+0x74],ecx
  40a4f8:	mov    DWORD PTR [rbx+0x284],r10d
  40a4ff:	shl    eax,0x8
  40a502:	cmp    r10d,0x7
  40a506:	mov    DWORD PTR [rbx+0x280],eax
  40a50c:	jg     0x40a4d0
  40a50e:	mov    ecx,r12d
  40a511:	sub    ecx,r10d
  40a514:	add    r10d,r11d
  40a517:	sub    ecx,r11d
  40a51a:	mov    DWORD PTR [rbx+0x284],r10d
  40a521:	shl    r15d,cl
  40a524:	movzx  ecx,WORD PTR [rdi+r9*1+0x3c]
  40a52a:	or     eax,r15d
  40a52d:	cmp    r10d,0x7
  40a531:	mov    DWORD PTR [rbx+0x280],eax
  40a537:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a53b:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a541:	jle    0x40a584
  40a543:	mov    ecx,DWORD PTR [rbx+0x74]
  40a546:	mov    r10,QWORD PTR [rbx+0x50]
  40a54a:	shr    eax,0x18
  40a54d:	movsxd rcx,ecx
  40a550:	mov    BYTE PTR [r10+rcx*1],al
  40a554:	mov    eax,DWORD PTR [rbx+0x74]
  40a557:	mov    r10d,DWORD PTR [rbx+0x284]
  40a55e:	lea    ecx,[rax+0x1]
  40a561:	mov    eax,DWORD PTR [rbx+0x280]
  40a567:	sub    r10d,0x8
  40a56b:	mov    DWORD PTR [rbx+0x74],ecx
  40a56e:	mov    DWORD PTR [rbx+0x284],r10d
  40a575:	shl    eax,0x8
  40a578:	cmp    r10d,0x7
  40a57c:	mov    DWORD PTR [rbx+0x280],eax
  40a582:	jg     0x40a546
  40a584:	mov    ecx,r12d
  40a587:	sub    ecx,r10d
  40a58a:	add    r10d,r11d
  40a58d:	sub    ecx,r11d
  40a590:	mov    DWORD PTR [rbx+0x284],r10d
  40a597:	shl    r15d,cl
  40a59a:	movzx  ecx,WORD PTR [rdi+r9*1+0x3e]
  40a5a0:	or     eax,r15d
  40a5a3:	cmp    r10d,0x7
  40a5a7:	mov    DWORD PTR [rbx+0x280],eax
  40a5ad:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a5b1:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a5b7:	jle    0x40a5fa
  40a5b9:	mov    ecx,DWORD PTR [rbx+0x74]
  40a5bc:	mov    r10,QWORD PTR [rbx+0x50]
  40a5c0:	shr    eax,0x18
  40a5c3:	movsxd rcx,ecx
  40a5c6:	mov    BYTE PTR [r10+rcx*1],al
  40a5ca:	mov    eax,DWORD PTR [rbx+0x74]
  40a5cd:	mov    r10d,DWORD PTR [rbx+0x284]
  40a5d4:	lea    ecx,[rax+0x1]
  40a5d7:	mov    eax,DWORD PTR [rbx+0x280]
  40a5dd:	sub    r10d,0x8
  40a5e1:	mov    DWORD PTR [rbx+0x74],ecx
  40a5e4:	mov    DWORD PTR [rbx+0x284],r10d
  40a5eb:	shl    eax,0x8
  40a5ee:	cmp    r10d,0x7
  40a5f2:	mov    DWORD PTR [rbx+0x280],eax
  40a5f8:	jg     0x40a5bc
  40a5fa:	mov    ecx,r12d
  40a5fd:	sub    ecx,r10d
  40a600:	add    r10d,r11d
  40a603:	sub    ecx,r11d
  40a606:	mov    DWORD PTR [rbx+0x284],r10d
  40a60d:	shl    r15d,cl
  40a610:	movzx  ecx,WORD PTR [rdi+r9*1+0x40]
  40a616:	or     eax,r15d
  40a619:	cmp    r10d,0x7
  40a61d:	mov    DWORD PTR [rbx+0x280],eax
  40a623:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a627:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a62d:	jle    0x40a670
  40a62f:	mov    ecx,DWORD PTR [rbx+0x74]
  40a632:	mov    r10,QWORD PTR [rbx+0x50]
  40a636:	shr    eax,0x18
  40a639:	movsxd rcx,ecx
  40a63c:	mov    BYTE PTR [r10+rcx*1],al
  40a640:	mov    eax,DWORD PTR [rbx+0x74]
  40a643:	mov    r10d,DWORD PTR [rbx+0x284]
  40a64a:	lea    ecx,[rax+0x1]
  40a64d:	mov    eax,DWORD PTR [rbx+0x280]
  40a653:	sub    r10d,0x8
  40a657:	mov    DWORD PTR [rbx+0x74],ecx
  40a65a:	mov    DWORD PTR [rbx+0x284],r10d
  40a661:	shl    eax,0x8
  40a664:	cmp    r10d,0x7
  40a668:	mov    DWORD PTR [rbx+0x280],eax
  40a66e:	jg     0x40a632
  40a670:	mov    ecx,r12d
  40a673:	sub    ecx,r10d
  40a676:	add    r10d,r11d
  40a679:	sub    ecx,r11d
  40a67c:	mov    DWORD PTR [rbx+0x284],r10d
  40a683:	shl    r15d,cl
  40a686:	movzx  ecx,WORD PTR [rdi+r9*1+0x42]
  40a68c:	or     eax,r15d
  40a68f:	cmp    r10d,0x7
  40a693:	mov    DWORD PTR [rbx+0x280],eax
  40a699:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a69d:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a6a3:	jle    0x40a6e6
  40a6a5:	mov    ecx,DWORD PTR [rbx+0x74]
  40a6a8:	mov    r10,QWORD PTR [rbx+0x50]
  40a6ac:	shr    eax,0x18
  40a6af:	movsxd rcx,ecx
  40a6b2:	mov    BYTE PTR [r10+rcx*1],al
  40a6b6:	mov    eax,DWORD PTR [rbx+0x74]
  40a6b9:	mov    r10d,DWORD PTR [rbx+0x284]
  40a6c0:	lea    ecx,[rax+0x1]
  40a6c3:	mov    eax,DWORD PTR [rbx+0x280]
  40a6c9:	sub    r10d,0x8
  40a6cd:	mov    DWORD PTR [rbx+0x74],ecx
  40a6d0:	mov    DWORD PTR [rbx+0x284],r10d
  40a6d7:	shl    eax,0x8
  40a6da:	cmp    r10d,0x7
  40a6de:	mov    DWORD PTR [rbx+0x280],eax
  40a6e4:	jg     0x40a6a8
  40a6e6:	mov    ecx,r12d
  40a6e9:	sub    ecx,r10d
  40a6ec:	add    r10d,r11d
  40a6ef:	sub    ecx,r11d
  40a6f2:	mov    DWORD PTR [rbx+0x284],r10d
  40a6f9:	shl    r15d,cl
  40a6fc:	movzx  ecx,WORD PTR [rdi+r9*1+0x44]
  40a702:	or     eax,r15d
  40a705:	cmp    r10d,0x7
  40a709:	mov    DWORD PTR [rbx+0x280],eax
  40a70f:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a713:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a719:	jle    0x40a75c
  40a71b:	mov    ecx,DWORD PTR [rbx+0x74]
  40a71e:	mov    r10,QWORD PTR [rbx+0x50]
  40a722:	shr    eax,0x18
  40a725:	movsxd rcx,ecx
  40a728:	mov    BYTE PTR [r10+rcx*1],al
  40a72c:	mov    eax,DWORD PTR [rbx+0x74]
  40a72f:	mov    r10d,DWORD PTR [rbx+0x284]
  40a736:	lea    ecx,[rax+0x1]
  40a739:	mov    eax,DWORD PTR [rbx+0x280]
  40a73f:	sub    r10d,0x8
  40a743:	mov    DWORD PTR [rbx+0x74],ecx
  40a746:	mov    DWORD PTR [rbx+0x284],r10d
  40a74d:	shl    eax,0x8
  40a750:	cmp    r10d,0x7
  40a754:	mov    DWORD PTR [rbx+0x280],eax
  40a75a:	jg     0x40a71e
  40a75c:	mov    ecx,r12d
  40a75f:	sub    ecx,r10d
  40a762:	add    r10d,r11d
  40a765:	sub    ecx,r11d
  40a768:	mov    DWORD PTR [rbx+0x284],r10d
  40a76f:	shl    r15d,cl
  40a772:	movzx  ecx,WORD PTR [rdi+r9*1+0x46]
  40a778:	or     eax,r15d
  40a77b:	cmp    r10d,0x7
  40a77f:	mov    DWORD PTR [rbx+0x280],eax
  40a785:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a789:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a78f:	jle    0x40a7d2
  40a791:	mov    ecx,DWORD PTR [rbx+0x74]
  40a794:	mov    r10,QWORD PTR [rbx+0x50]
  40a798:	shr    eax,0x18
  40a79b:	movsxd rcx,ecx
  40a79e:	mov    BYTE PTR [r10+rcx*1],al
  40a7a2:	mov    eax,DWORD PTR [rbx+0x74]
  40a7a5:	mov    r10d,DWORD PTR [rbx+0x284]
  40a7ac:	lea    ecx,[rax+0x1]
  40a7af:	mov    eax,DWORD PTR [rbx+0x280]
  40a7b5:	sub    r10d,0x8
  40a7b9:	mov    DWORD PTR [rbx+0x74],ecx
  40a7bc:	mov    DWORD PTR [rbx+0x284],r10d
  40a7c3:	shl    eax,0x8
  40a7c6:	cmp    r10d,0x7
  40a7ca:	mov    DWORD PTR [rbx+0x280],eax
  40a7d0:	jg     0x40a794
  40a7d2:	mov    ecx,r12d
  40a7d5:	sub    ecx,r10d
  40a7d8:	add    r10d,r11d
  40a7db:	sub    ecx,r11d
  40a7de:	mov    DWORD PTR [rbx+0x284],r10d
  40a7e5:	shl    r15d,cl
  40a7e8:	movzx  ecx,WORD PTR [rdi+r9*1+0x48]
  40a7ee:	or     eax,r15d
  40a7f1:	cmp    r10d,0x7
  40a7f5:	mov    DWORD PTR [rbx+0x280],eax
  40a7fb:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a7ff:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a805:	jle    0x40a848
  40a807:	mov    ecx,DWORD PTR [rbx+0x74]
  40a80a:	mov    r10,QWORD PTR [rbx+0x50]
  40a80e:	shr    eax,0x18
  40a811:	movsxd rcx,ecx
  40a814:	mov    BYTE PTR [r10+rcx*1],al
  40a818:	mov    eax,DWORD PTR [rbx+0x74]
  40a81b:	mov    r10d,DWORD PTR [rbx+0x284]
  40a822:	lea    ecx,[rax+0x1]
  40a825:	mov    eax,DWORD PTR [rbx+0x280]
  40a82b:	sub    r10d,0x8
  40a82f:	mov    DWORD PTR [rbx+0x74],ecx
  40a832:	mov    DWORD PTR [rbx+0x284],r10d
  40a839:	shl    eax,0x8
  40a83c:	cmp    r10d,0x7
  40a840:	mov    DWORD PTR [rbx+0x280],eax
  40a846:	jg     0x40a80a
  40a848:	mov    ecx,r12d
  40a84b:	sub    ecx,r10d
  40a84e:	add    r10d,r11d
  40a851:	sub    ecx,r11d
  40a854:	mov    DWORD PTR [rbx+0x284],r10d
  40a85b:	shl    r15d,cl
  40a85e:	movzx  ecx,WORD PTR [rdi+r9*1+0x4a]
  40a864:	or     eax,r15d
  40a867:	cmp    r10d,0x7
  40a86b:	mov    DWORD PTR [rbx+0x280],eax
  40a871:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a875:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a87b:	jle    0x40a8be
  40a87d:	mov    ecx,DWORD PTR [rbx+0x74]
  40a880:	mov    r10,QWORD PTR [rbx+0x50]
  40a884:	shr    eax,0x18
  40a887:	movsxd rcx,ecx
  40a88a:	mov    BYTE PTR [r10+rcx*1],al
  40a88e:	mov    eax,DWORD PTR [rbx+0x74]
  40a891:	mov    r10d,DWORD PTR [rbx+0x284]
  40a898:	lea    ecx,[rax+0x1]
  40a89b:	mov    eax,DWORD PTR [rbx+0x280]
  40a8a1:	sub    r10d,0x8
  40a8a5:	mov    DWORD PTR [rbx+0x74],ecx
  40a8a8:	mov    DWORD PTR [rbx+0x284],r10d
  40a8af:	shl    eax,0x8
  40a8b2:	cmp    r10d,0x7
  40a8b6:	mov    DWORD PTR [rbx+0x280],eax
  40a8bc:	jg     0x40a880
  40a8be:	mov    ecx,r12d
  40a8c1:	sub    ecx,r10d
  40a8c4:	add    r10d,r11d
  40a8c7:	sub    ecx,r11d
  40a8ca:	mov    DWORD PTR [rbx+0x284],r10d
  40a8d1:	shl    r15d,cl
  40a8d4:	movzx  ecx,WORD PTR [rdi+r9*1+0x4c]
  40a8da:	or     eax,r15d
  40a8dd:	cmp    r10d,0x7
  40a8e1:	mov    DWORD PTR [rbx+0x280],eax
  40a8e7:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a8eb:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a8f1:	jle    0x40a934
  40a8f3:	mov    ecx,DWORD PTR [rbx+0x74]
  40a8f6:	mov    r10,QWORD PTR [rbx+0x50]
  40a8fa:	shr    eax,0x18
  40a8fd:	movsxd rcx,ecx
  40a900:	mov    BYTE PTR [r10+rcx*1],al
  40a904:	mov    eax,DWORD PTR [rbx+0x74]
  40a907:	mov    r10d,DWORD PTR [rbx+0x284]
  40a90e:	lea    ecx,[rax+0x1]
  40a911:	mov    eax,DWORD PTR [rbx+0x280]
  40a917:	sub    r10d,0x8
  40a91b:	mov    DWORD PTR [rbx+0x74],ecx
  40a91e:	mov    DWORD PTR [rbx+0x284],r10d
  40a925:	shl    eax,0x8
  40a928:	cmp    r10d,0x7
  40a92c:	mov    DWORD PTR [rbx+0x280],eax
  40a932:	jg     0x40a8f6
  40a934:	mov    ecx,r12d
  40a937:	sub    ecx,r10d
  40a93a:	add    r10d,r11d
  40a93d:	sub    ecx,r11d
  40a940:	mov    DWORD PTR [rbx+0x284],r10d
  40a947:	shl    r15d,cl
  40a94a:	movzx  ecx,WORD PTR [rdi+r9*1+0x4e]
  40a950:	or     eax,r15d
  40a953:	cmp    r10d,0x7
  40a957:	mov    DWORD PTR [rbx+0x280],eax
  40a95d:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a961:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a967:	jle    0x40a9aa
  40a969:	mov    ecx,DWORD PTR [rbx+0x74]
  40a96c:	mov    r10,QWORD PTR [rbx+0x50]
  40a970:	shr    eax,0x18
  40a973:	movsxd rcx,ecx
  40a976:	mov    BYTE PTR [r10+rcx*1],al
  40a97a:	mov    eax,DWORD PTR [rbx+0x74]
  40a97d:	mov    r10d,DWORD PTR [rbx+0x284]
  40a984:	lea    ecx,[rax+0x1]
  40a987:	mov    eax,DWORD PTR [rbx+0x280]
  40a98d:	sub    r10d,0x8
  40a991:	mov    DWORD PTR [rbx+0x74],ecx
  40a994:	mov    DWORD PTR [rbx+0x284],r10d
  40a99b:	shl    eax,0x8
  40a99e:	cmp    r10d,0x7
  40a9a2:	mov    DWORD PTR [rbx+0x280],eax
  40a9a8:	jg     0x40a96c
  40a9aa:	mov    ecx,r12d
  40a9ad:	sub    ecx,r10d
  40a9b0:	add    r10d,r11d
  40a9b3:	sub    ecx,r11d
  40a9b6:	mov    DWORD PTR [rbx+0x284],r10d
  40a9bd:	shl    r15d,cl
  40a9c0:	movzx  ecx,WORD PTR [rdi+r9*1+0x50]
  40a9c6:	or     eax,r15d
  40a9c9:	cmp    r10d,0x7
  40a9cd:	mov    DWORD PTR [rbx+0x280],eax
  40a9d3:	mov    r15d,DWORD PTR [r8+rcx*4]
  40a9d7:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40a9dd:	jle    0x40aa20
  40a9df:	mov    ecx,DWORD PTR [rbx+0x74]
  40a9e2:	mov    r10,QWORD PTR [rbx+0x50]
  40a9e6:	shr    eax,0x18
  40a9e9:	movsxd rcx,ecx
  40a9ec:	mov    BYTE PTR [r10+rcx*1],al
  40a9f0:	mov    eax,DWORD PTR [rbx+0x74]
  40a9f3:	mov    r10d,DWORD PTR [rbx+0x284]
  40a9fa:	lea    ecx,[rax+0x1]
  40a9fd:	mov    eax,DWORD PTR [rbx+0x280]
  40aa03:	sub    r10d,0x8
  40aa07:	mov    DWORD PTR [rbx+0x74],ecx
  40aa0a:	mov    DWORD PTR [rbx+0x284],r10d
  40aa11:	shl    eax,0x8
  40aa14:	cmp    r10d,0x7
  40aa18:	mov    DWORD PTR [rbx+0x280],eax
  40aa1e:	jg     0x40a9e2
  40aa20:	mov    ecx,r12d
  40aa23:	sub    ecx,r10d
  40aa26:	add    r10d,r11d
  40aa29:	sub    ecx,r11d
  40aa2c:	mov    DWORD PTR [rbx+0x284],r10d
  40aa33:	shl    r15d,cl
  40aa36:	movzx  ecx,WORD PTR [rdi+r9*1+0x52]
  40aa3c:	or     eax,r15d
  40aa3f:	cmp    r10d,0x7
  40aa43:	mov    DWORD PTR [rbx+0x280],eax
  40aa49:	mov    r15d,DWORD PTR [r8+rcx*4]
  40aa4d:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40aa53:	jle    0x40aa96
  40aa55:	mov    ecx,DWORD PTR [rbx+0x74]
  40aa58:	mov    r10,QWORD PTR [rbx+0x50]
  40aa5c:	shr    eax,0x18
  40aa5f:	movsxd rcx,ecx
  40aa62:	mov    BYTE PTR [r10+rcx*1],al
  40aa66:	mov    eax,DWORD PTR [rbx+0x74]
  40aa69:	mov    r10d,DWORD PTR [rbx+0x284]
  40aa70:	lea    ecx,[rax+0x1]
  40aa73:	mov    eax,DWORD PTR [rbx+0x280]
  40aa79:	sub    r10d,0x8
  40aa7d:	mov    DWORD PTR [rbx+0x74],ecx
  40aa80:	mov    DWORD PTR [rbx+0x284],r10d
  40aa87:	shl    eax,0x8
  40aa8a:	cmp    r10d,0x7
  40aa8e:	mov    DWORD PTR [rbx+0x280],eax
  40aa94:	jg     0x40aa58
  40aa96:	mov    ecx,r12d
  40aa99:	sub    ecx,r10d
  40aa9c:	add    r10d,r11d
  40aa9f:	sub    ecx,r11d
  40aaa2:	mov    DWORD PTR [rbx+0x284],r10d
  40aaa9:	shl    r15d,cl
  40aaac:	movzx  ecx,WORD PTR [rdi+r9*1+0x54]
  40aab2:	or     eax,r15d
  40aab5:	cmp    r10d,0x7
  40aab9:	mov    DWORD PTR [rbx+0x280],eax
  40aabf:	mov    r15d,DWORD PTR [r8+rcx*4]
  40aac3:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40aac9:	jle    0x40ab0c
  40aacb:	mov    ecx,DWORD PTR [rbx+0x74]
  40aace:	mov    r10,QWORD PTR [rbx+0x50]
  40aad2:	shr    eax,0x18
  40aad5:	movsxd rcx,ecx
  40aad8:	mov    BYTE PTR [r10+rcx*1],al
  40aadc:	mov    eax,DWORD PTR [rbx+0x74]
  40aadf:	mov    r10d,DWORD PTR [rbx+0x284]
  40aae6:	lea    ecx,[rax+0x1]
  40aae9:	mov    eax,DWORD PTR [rbx+0x280]
  40aaef:	sub    r10d,0x8
  40aaf3:	mov    DWORD PTR [rbx+0x74],ecx
  40aaf6:	mov    DWORD PTR [rbx+0x284],r10d
  40aafd:	shl    eax,0x8
  40ab00:	cmp    r10d,0x7
  40ab04:	mov    DWORD PTR [rbx+0x280],eax
  40ab0a:	jg     0x40aace
  40ab0c:	mov    ecx,r12d
  40ab0f:	sub    ecx,r10d
  40ab12:	add    r10d,r11d
  40ab15:	sub    ecx,r11d
  40ab18:	mov    DWORD PTR [rbx+0x284],r10d
  40ab1f:	shl    r15d,cl
  40ab22:	movzx  ecx,WORD PTR [rdi+r9*1+0x56]
  40ab28:	or     eax,r15d
  40ab2b:	cmp    r10d,0x7
  40ab2f:	mov    DWORD PTR [rbx+0x280],eax
  40ab35:	mov    r15d,DWORD PTR [r8+rcx*4]
  40ab39:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40ab3f:	jle    0x40ab82
  40ab41:	mov    ecx,DWORD PTR [rbx+0x74]
  40ab44:	mov    r10,QWORD PTR [rbx+0x50]
  40ab48:	shr    eax,0x18
  40ab4b:	movsxd rcx,ecx
  40ab4e:	mov    BYTE PTR [r10+rcx*1],al
  40ab52:	mov    eax,DWORD PTR [rbx+0x74]
  40ab55:	mov    r10d,DWORD PTR [rbx+0x284]
  40ab5c:	lea    ecx,[rax+0x1]
  40ab5f:	mov    eax,DWORD PTR [rbx+0x280]
  40ab65:	sub    r10d,0x8
  40ab69:	mov    DWORD PTR [rbx+0x74],ecx
  40ab6c:	mov    DWORD PTR [rbx+0x284],r10d
  40ab73:	shl    eax,0x8
  40ab76:	cmp    r10d,0x7
  40ab7a:	mov    DWORD PTR [rbx+0x280],eax
  40ab80:	jg     0x40ab44
  40ab82:	mov    ecx,r12d
  40ab85:	sub    ecx,r10d
  40ab88:	add    r10d,r11d
  40ab8b:	sub    ecx,r11d
  40ab8e:	mov    DWORD PTR [rbx+0x284],r10d
  40ab95:	shl    r15d,cl
  40ab98:	movzx  ecx,WORD PTR [rdi+r9*1+0x58]
  40ab9e:	or     eax,r15d
  40aba1:	cmp    r10d,0x7
  40aba5:	mov    DWORD PTR [rbx+0x280],eax
  40abab:	mov    r15d,DWORD PTR [r8+rcx*4]
  40abaf:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40abb5:	jle    0x40abf8
  40abb7:	mov    ecx,DWORD PTR [rbx+0x74]
  40abba:	mov    r10,QWORD PTR [rbx+0x50]
  40abbe:	shr    eax,0x18
  40abc1:	movsxd rcx,ecx
  40abc4:	mov    BYTE PTR [r10+rcx*1],al
  40abc8:	mov    eax,DWORD PTR [rbx+0x74]
  40abcb:	mov    r10d,DWORD PTR [rbx+0x284]
  40abd2:	lea    ecx,[rax+0x1]
  40abd5:	mov    eax,DWORD PTR [rbx+0x280]
  40abdb:	sub    r10d,0x8
  40abdf:	mov    DWORD PTR [rbx+0x74],ecx
  40abe2:	mov    DWORD PTR [rbx+0x284],r10d
  40abe9:	shl    eax,0x8
  40abec:	cmp    r10d,0x7
  40abf0:	mov    DWORD PTR [rbx+0x280],eax
  40abf6:	jg     0x40abba
  40abf8:	mov    ecx,r12d
  40abfb:	sub    ecx,r10d
  40abfe:	add    r10d,r11d
  40ac01:	sub    ecx,r11d
  40ac04:	mov    DWORD PTR [rbx+0x284],r10d
  40ac0b:	shl    r15d,cl
  40ac0e:	movzx  ecx,WORD PTR [rdi+r9*1+0x5a]
  40ac14:	or     eax,r15d
  40ac17:	cmp    r10d,0x7
  40ac1b:	mov    DWORD PTR [rbx+0x280],eax
  40ac21:	mov    r15d,DWORD PTR [r8+rcx*4]
  40ac25:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40ac2b:	jle    0x40ac6e
  40ac2d:	mov    ecx,DWORD PTR [rbx+0x74]
  40ac30:	mov    r10,QWORD PTR [rbx+0x50]
  40ac34:	shr    eax,0x18
  40ac37:	movsxd rcx,ecx
  40ac3a:	mov    BYTE PTR [r10+rcx*1],al
  40ac3e:	mov    eax,DWORD PTR [rbx+0x74]
  40ac41:	mov    r10d,DWORD PTR [rbx+0x284]
  40ac48:	lea    ecx,[rax+0x1]
  40ac4b:	mov    eax,DWORD PTR [rbx+0x280]
  40ac51:	sub    r10d,0x8
  40ac55:	mov    DWORD PTR [rbx+0x74],ecx
  40ac58:	mov    DWORD PTR [rbx+0x284],r10d
  40ac5f:	shl    eax,0x8
  40ac62:	cmp    r10d,0x7
  40ac66:	mov    DWORD PTR [rbx+0x280],eax
  40ac6c:	jg     0x40ac30
  40ac6e:	mov    ecx,r12d
  40ac71:	sub    ecx,r10d
  40ac74:	add    r10d,r11d
  40ac77:	sub    ecx,r11d
  40ac7a:	mov    DWORD PTR [rbx+0x284],r10d
  40ac81:	shl    r15d,cl
  40ac84:	movzx  ecx,WORD PTR [rdi+r9*1+0x5c]
  40ac8a:	or     eax,r15d
  40ac8d:	cmp    r10d,0x7
  40ac91:	mov    DWORD PTR [rbx+0x280],eax
  40ac97:	mov    r15d,DWORD PTR [r8+rcx*4]
  40ac9b:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40aca1:	jle    0x40ace4
  40aca3:	mov    ecx,DWORD PTR [rbx+0x74]
  40aca6:	mov    r10,QWORD PTR [rbx+0x50]
  40acaa:	shr    eax,0x18
  40acad:	movsxd rcx,ecx
  40acb0:	mov    BYTE PTR [r10+rcx*1],al
  40acb4:	mov    eax,DWORD PTR [rbx+0x74]
  40acb7:	mov    r10d,DWORD PTR [rbx+0x284]
  40acbe:	lea    ecx,[rax+0x1]
  40acc1:	mov    eax,DWORD PTR [rbx+0x280]
  40acc7:	sub    r10d,0x8
  40accb:	mov    DWORD PTR [rbx+0x74],ecx
  40acce:	mov    DWORD PTR [rbx+0x284],r10d
  40acd5:	shl    eax,0x8
  40acd8:	cmp    r10d,0x7
  40acdc:	mov    DWORD PTR [rbx+0x280],eax
  40ace2:	jg     0x40aca6
  40ace4:	mov    ecx,r12d
  40ace7:	sub    ecx,r10d
  40acea:	add    r10d,r11d
  40aced:	sub    ecx,r11d
  40acf0:	mov    DWORD PTR [rbx+0x284],r10d
  40acf7:	shl    r15d,cl
  40acfa:	movzx  ecx,WORD PTR [rdi+r9*1+0x5e]
  40ad00:	or     eax,r15d
  40ad03:	cmp    r10d,0x7
  40ad07:	mov    DWORD PTR [rbx+0x280],eax
  40ad0d:	mov    r15d,DWORD PTR [r8+rcx*4]
  40ad11:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40ad17:	jle    0x40ad5a
  40ad19:	mov    ecx,DWORD PTR [rbx+0x74]
  40ad1c:	mov    r10,QWORD PTR [rbx+0x50]
  40ad20:	shr    eax,0x18
  40ad23:	movsxd rcx,ecx
  40ad26:	mov    BYTE PTR [r10+rcx*1],al
  40ad2a:	mov    eax,DWORD PTR [rbx+0x74]
  40ad2d:	mov    r10d,DWORD PTR [rbx+0x284]
  40ad34:	lea    ecx,[rax+0x1]
  40ad37:	mov    eax,DWORD PTR [rbx+0x280]
  40ad3d:	sub    r10d,0x8
  40ad41:	mov    DWORD PTR [rbx+0x74],ecx
  40ad44:	mov    DWORD PTR [rbx+0x284],r10d
  40ad4b:	shl    eax,0x8
  40ad4e:	cmp    r10d,0x7
  40ad52:	mov    DWORD PTR [rbx+0x280],eax
  40ad58:	jg     0x40ad1c
  40ad5a:	mov    ecx,r12d
  40ad5d:	sub    ecx,r10d
  40ad60:	add    r10d,r11d
  40ad63:	sub    ecx,r11d
  40ad66:	mov    DWORD PTR [rbx+0x284],r10d
  40ad6d:	shl    r15d,cl
  40ad70:	movzx  ecx,WORD PTR [rdi+r9*1+0x60]
  40ad76:	or     eax,r15d
  40ad79:	cmp    r10d,0x7
  40ad7d:	mov    DWORD PTR [rbx+0x280],eax
  40ad83:	mov    r15d,DWORD PTR [r8+rcx*4]
  40ad87:	movzx  r11d,BYTE PTR [rcx+rdx*1+0xc]
  40ad8d:	jle    0x40add0
  40ad8f:	mov    ecx,DWORD PTR [rbx+0x74]
  40ad92:	mov    r10,QWORD PTR [rbx+0x50]
  40ad96:	shr    eax,0x18
  40ad99:	movsxd rcx,ecx
  40ad9c:	mov    BYTE PTR [r10+rcx*1],al
  40ada0:	mov    eax,DWORD PTR [rbx+0x74]
  40ada3:	mov    r10d,DWORD PTR [rbx+0x284]
  40adaa:	lea    ecx,[rax+0x1]
  40adad:	mov    eax,DWORD PTR [rbx+0x280]
  40adb3:	sub    r10d,0x8
  40adb7:	mov    DWORD PTR [rbx+0x74],ecx
  40adba:	mov    DWORD PTR [rbx+0x284],r10d
  40adc1:	shl    eax,0x8
  40adc4:	cmp    r10d,0x7
  40adc8:	mov    DWORD PTR [rbx+0x280],eax
  40adce:	jg     0x40ad92
  40add0:	mov    ecx,r12d
  40add3:	sub    ecx,r10d
  40add6:	add    r10d,r11d
  40add9:	sub    ecx,r11d
  40addc:	mov    DWORD PTR [rbx+0x284],r10d
  40ade3:	shl    r15d,cl
  40ade6:	movzx  ecx,WORD PTR [rdi+r9*1+0x62]
  40adec:	or     eax,r15d
  40adef:	cmp    r10d,0x7
  40adf3:	mov    DWORD PTR [rbx+0x280],eax
  40adf9:	mov    r8d,DWORD PTR [r8+rcx*4]
  40adfd:	movzx  r9d,BYTE PTR [rcx+rdx*1+0xc]
  40ae03:	jle    0x40ae44
  40ae05:	mov    edx,DWORD PTR [rbx+0x74]
  40ae08:	mov    rcx,QWORD PTR [rbx+0x50]
  40ae0c:	shr    eax,0x18
  40ae0f:	movsxd rdx,edx
  40ae12:	mov    BYTE PTR [rcx+rdx*1],al
  40ae15:	mov    eax,DWORD PTR [rbx+0x74]
  40ae18:	mov    ecx,DWORD PTR [rbx+0x284]
  40ae1e:	lea    edx,[rax+0x1]
  40ae21:	mov    eax,DWORD PTR [rbx+0x280]
  40ae27:	lea    r10d,[rcx-0x8]
  40ae2b:	mov    DWORD PTR [rbx+0x74],edx
  40ae2e:	shl    eax,0x8
  40ae31:	cmp    r10d,0x7
  40ae35:	mov    DWORD PTR [rbx+0x284],r10d
  40ae3c:	mov    DWORD PTR [rbx+0x280],eax
  40ae42:	jg     0x40ae08
  40ae44:	mov    ecx,r12d
  40ae47:	sub    ecx,r10d
  40ae4a:	add    r10d,r9d
  40ae4d:	sub    ecx,r9d
  40ae50:	mov    DWORD PTR [rbx+0x284],r10d
  40ae57:	shl    r8d,cl
  40ae5a:	or     eax,r8d
  40ae5d:	mov    DWORD PTR [rbx+0x280],eax
  40ae63:	jmp    0x4094f8
  40ae68:	mov    ecx,0xbbe
  40ae6d:	mov    DWORD PTR [rsp+0x50],r9d
  40ae72:	call   0x404780
  40ae77:	mov    r9d,DWORD PTR [rsp+0x50]
  40ae7c:	jmp    0x409415
  40ae81:	xor    edx,edx
  40ae83:	cmp    edx,DWORD PTR [rsp+0x4c]
  40ae87:	je     0x40ae93
  40ae89:	mov    ecx,0xbbf
  40ae8e:	call   0x404780
  40ae93:	cmp    DWORD PTR [rbx+0x290],0x2
  40ae9a:	jle    0x4073dd
  40aea0:	mov    eax,DWORD PTR [rbx+0x74]
  40aea3:	sub    eax,esi
  40aea5:	mov    esi,eax
  40aea7:	call   QWORD PTR [rip+0x114d7]        # 0x41c384
  40aead:	lea    rdx,[rip+0xb674]        # 0x416528
  40aeb4:	lea    rcx,[rax+0x60]
  40aeb8:	mov    r8d,esi
  40aebb:	call   0x4112b0
  40aec0:	jmp    0x4073dd
  40aec5:	mov    eax,DWORD PTR [rbx+0x280]
  40aecb:	jmp    0x4097b0
  40aed0:	push   r15
  40aed2:	push   r14
  40aed4:	push   r13
  40aed6:	push   r12
  40aed8:	push   rbp
  40aed9:	push   rdi
  40aeda:	push   rsi
  40aedb:	push   rbx
  40aedc:	sub    rsp,0xc8
  40aee3:	mov    eax,DWORD PTR [rcx+0x8]
  40aee6:	mov    r11,QWORD PTR [rcx]
  40aee9:	mov    rbx,rcx
  40aeec:	cmp    eax,0xa
  40aeef:	je     0x40b000
  40aef5:	mov    edi,DWORD PTR [rcx+0xfa60]
  40aefb:	mov    rsi,QWORD PTR [rcx+0xfa80]
  40af02:	mov    r15d,DWORD PTR [rbx+0xfa54]
  40af09:	mov    r14d,DWORD PTR [rbx+0xfa50]
  40af10:	mov    r10d,DWORD PTR [rbx+0xfa48]
  40af17:	mov    r9d,DWORD PTR [rbx+0xfa3c]
  40af1e:	mov    DWORD PTR [rsp+0xa8],edi
  40af25:	mov    rdi,QWORD PTR [rcx+0xfa88]
  40af2c:	mov    QWORD PTR [rsp+0x78],rsi
  40af31:	mov    esi,DWORD PTR [rcx+0xfa74]
  40af37:	mov    r12d,DWORD PTR [rbx+0xfa34]
  40af3e:	mov    QWORD PTR [rsp+0x80],rdi
  40af46:	mov    rdi,QWORD PTR [rcx+0xfa78]
  40af4d:	mov    DWORD PTR [rsp+0x8c],esi
  40af54:	mov    esi,DWORD PTR [rcx+0xfa6c]
  40af5a:	mov    QWORD PTR [rsp+0x70],rdi
  40af5f:	mov    edi,DWORD PTR [rcx+0xfa70]
  40af65:	mov    DWORD PTR [rsp+0x6c],esi
  40af69:	mov    esi,DWORD PTR [rcx+0xfa64]
  40af6f:	mov    DWORD PTR [rsp+0x94],edi
  40af76:	mov    edi,DWORD PTR [rcx+0xfa68]
  40af7c:	mov    ecx,DWORD PTR [rcx+0xfa5c]
  40af82:	mov    DWORD PTR [rsp+0x64],ecx
  40af86:	mov    ecx,DWORD PTR [rbx+0xfa58]
  40af8c:	mov    DWORD PTR [rsp+0x88],ecx
  40af93:	mov    ecx,DWORD PTR [rbx+0xfa4c]
  40af99:	mov    DWORD PTR [rsp+0x90],ecx
  40afa0:	mov    ecx,DWORD PTR [rbx+0xfa44]
  40afa6:	mov    DWORD PTR [rsp+0x58],ecx
  40afaa:	mov    ecx,DWORD PTR [rbx+0xfa40]
  40afb0:	mov    DWORD PTR [rsp+0x48],ecx
  40afb4:	mov    ecx,DWORD PTR [rbx+0xfa38]
  40afba:	mov    DWORD PTR [rsp+0x54],ecx
  40afbe:	mov    ecx,DWORD PTR [rbx+0xfa30]
  40afc4:	mov    r13d,DWORD PTR [rbx+0xfa28]
  40afcb:	mov    ebp,DWORD PTR [rbx+0xfa24]
  40afd1:	mov    DWORD PTR [rsp+0x60],ecx
  40afd5:	mov    ecx,DWORD PTR [rbx+0xfa2c]
  40afdb:	mov    DWORD PTR [rsp+0x68],ecx
  40afdf:	sub    eax,0xa
  40afe2:	cmp    eax,0x28
  40afe5:	ja     0x40cd00
  40afeb:	lea    rdx,[rip+0xb59a]        # 0x41658c
  40aff2:	movsxd rax,DWORD PTR [rdx+rax*4]
  40aff6:	add    rdx,rax
  40aff9:	jmp    rdx
  40affb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b000:	mov    DWORD PTR [rcx+0xfa24],0x0
  40b00a:	mov    DWORD PTR [rcx+0xfa28],0x0
  40b014:	xor    edi,edi
  40b016:	mov    DWORD PTR [rcx+0xfa2c],0x0
  40b020:	mov    DWORD PTR [rcx+0xfa30],0x0
  40b02a:	xor    esi,esi
  40b02c:	mov    DWORD PTR [rcx+0xfa34],0x0
  40b036:	mov    DWORD PTR [rcx+0xfa38],0x0
  40b040:	xor    r15d,r15d
  40b043:	mov    DWORD PTR [rcx+0xfa3c],0x0
  40b04d:	mov    DWORD PTR [rcx+0xfa40],0x0
  40b057:	xor    r14d,r14d
  40b05a:	mov    DWORD PTR [rcx+0xfa44],0x0
  40b064:	mov    DWORD PTR [rcx+0xfa48],0x0
  40b06e:	xor    r10d,r10d
  40b071:	mov    DWORD PTR [rcx+0xfa4c],0x0
  40b07b:	mov    DWORD PTR [rcx+0xfa50],0x0
  40b085:	xor    r9d,r9d
  40b088:	mov    DWORD PTR [rcx+0xfa54],0x0
  40b092:	mov    DWORD PTR [rcx+0xfa58],0x0
  40b09c:	xor    r12d,r12d
  40b09f:	mov    DWORD PTR [rcx+0xfa5c],0x0
  40b0a9:	mov    DWORD PTR [rcx+0xfa60],0x0
  40b0b3:	xor    r13d,r13d
  40b0b6:	mov    DWORD PTR [rcx+0xfa64],0x0
  40b0c0:	mov    DWORD PTR [rcx+0xfa68],0x0
  40b0ca:	xor    ebp,ebp
  40b0cc:	mov    DWORD PTR [rcx+0xfa6c],0x0
  40b0d6:	mov    DWORD PTR [rcx+0xfa70],0x0
  40b0e0:	mov    DWORD PTR [rcx+0xfa74],0x0
  40b0ea:	mov    QWORD PTR [rcx+0xfa78],0x0
  40b0f5:	mov    QWORD PTR [rcx+0xfa80],0x0
  40b100:	mov    QWORD PTR [rcx+0xfa88],0x0
  40b10b:	mov    QWORD PTR [rsp+0x80],0x0
  40b117:	mov    QWORD PTR [rsp+0x78],0x0
  40b120:	mov    QWORD PTR [rsp+0x70],0x0
  40b129:	mov    DWORD PTR [rsp+0x8c],0x0
  40b134:	mov    DWORD PTR [rsp+0x94],0x0
  40b13f:	mov    DWORD PTR [rsp+0x6c],0x0
  40b147:	mov    DWORD PTR [rsp+0xa8],0x0
  40b152:	mov    DWORD PTR [rsp+0x64],0x0
  40b15a:	mov    DWORD PTR [rsp+0x88],0x0
  40b165:	mov    DWORD PTR [rsp+0x90],0x0
  40b170:	mov    DWORD PTR [rsp+0x58],0x0
  40b178:	mov    DWORD PTR [rsp+0x48],0x0
  40b180:	mov    DWORD PTR [rsp+0x54],0x0
  40b188:	mov    DWORD PTR [rsp+0x60],0x0
  40b190:	mov    DWORD PTR [rsp+0x68],0x0
  40b198:	jmp    0x40afdf
  40b19d:	mov    DWORD PTR [rsp+0xa0],r10d
  40b1a5:	mov    DWORD PTR [rsp+0x98],r9d
  40b1ad:	mov    r8d,0x1
  40b1b3:	imul   edx,eax,0x61a80
  40b1b9:	mov    rcx,QWORD PTR [r11+0x48]
  40b1bd:	call   QWORD PTR [r11+0x38]
  40b1c1:	test   rax,rax
  40b1c4:	mov    QWORD PTR [rbx+0xc50],rax
  40b1cb:	mov    r9d,DWORD PTR [rsp+0x98]
  40b1d3:	mov    r10d,DWORD PTR [rsp+0xa0]
  40b1db:	je     0x40cf33
  40b1e1:	mov    DWORD PTR [rbx+0x8],0xe
  40b1e8:	jmp    0x40b236
  40b1ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b1f0:	mov    rax,QWORD PTR [rbx]
  40b1f3:	mov    r8d,DWORD PTR [rax+0x8]
  40b1f7:	test   r8d,r8d
  40b1fa:	je     0x40ccf0
  40b200:	mov    rcx,QWORD PTR [rax]
  40b203:	add    edx,0x8
  40b206:	sub    r8d,0x1
  40b20a:	movzx  r11d,BYTE PTR [rcx]
  40b20e:	mov    ecx,DWORD PTR [rbx+0x20]
  40b211:	mov    DWORD PTR [rbx+0x24],edx
  40b214:	shl    ecx,0x8
  40b217:	or     ecx,r11d
  40b21a:	mov    DWORD PTR [rbx+0x20],ecx
  40b21d:	mov    ecx,DWORD PTR [rax+0xc]
  40b220:	add    QWORD PTR [rax],0x1
  40b224:	mov    DWORD PTR [rax+0x8],r8d
  40b228:	lea    edx,[rcx+0x1]
  40b22b:	test   edx,edx
  40b22d:	mov    DWORD PTR [rax+0xc],edx
  40b230:	je     0x40cda7
  40b236:	mov    edx,DWORD PTR [rbx+0x24]
  40b239:	cmp    edx,0x7
  40b23c:	jle    0x40b1f0
  40b23e:	mov    eax,DWORD PTR [rbx+0x20]
  40b241:	sub    edx,0x8
  40b244:	mov    ecx,edx
  40b246:	mov    DWORD PTR [rbx+0x24],edx
  40b249:	shr    eax,cl
  40b24b:	cmp    al,0x17
  40b24d:	mov    ecx,eax
  40b24f:	je     0x40c0df
  40b255:	cmp    cl,0x31
  40b258:	mov    eax,0xfffffffc
  40b25d:	jne    0x40c765
  40b263:	jmp    0x40c05f
  40b268:	mov    eax,DWORD PTR [rbx+0x20]
  40b26b:	lea    ecx,[r8-0x1]
  40b26f:	add    edi,edi
  40b271:	mov    DWORD PTR [rbx+0x24],ecx
  40b274:	shr    eax,cl
  40b276:	and    eax,0x1
  40b279:	mov    DWORD PTR [rsp+0x6c],eax
  40b27d:	or     edi,eax
  40b27f:	cmp    esi,0x14
  40b282:	jg     0x40c760
  40b288:	mov    rcx,QWORD PTR [rsp+0x70]
  40b28d:	movsxd rax,esi
  40b290:	cmp    edi,DWORD PTR [rcx+rax*4]
  40b293:	jle    0x40c15c
  40b299:	add    esi,0x1
  40b29c:	mov    DWORD PTR [rbx+0x8],0x29
  40b2a3:	jmp    0x40b2e9
  40b2a5:	mov    rax,QWORD PTR [rbx]
  40b2a8:	mov    ecx,DWORD PTR [rax+0x8]
  40b2ab:	test   ecx,ecx
  40b2ad:	je     0x40ccf0
  40b2b3:	mov    rdx,QWORD PTR [rax]
  40b2b6:	sub    ecx,0x1
  40b2b9:	add    r8d,0x8
  40b2bd:	movzx  r11d,BYTE PTR [rdx]
  40b2c1:	mov    edx,DWORD PTR [rbx+0x20]
  40b2c4:	mov    DWORD PTR [rbx+0x24],r8d
  40b2c8:	shl    edx,0x8
  40b2cb:	or     edx,r11d
  40b2ce:	mov    DWORD PTR [rbx+0x20],edx
  40b2d1:	mov    DWORD PTR [rax+0x8],ecx
  40b2d4:	mov    ecx,DWORD PTR [rax+0xc]
  40b2d7:	add    QWORD PTR [rax],0x1
  40b2db:	lea    edx,[rcx+0x1]
  40b2de:	test   edx,edx
  40b2e0:	mov    DWORD PTR [rax+0xc],edx
  40b2e3:	je     0x40ce67
  40b2e9:	mov    r8d,DWORD PTR [rbx+0x24]
  40b2ed:	test   r8d,r8d
  40b2f0:	jle    0x40b2a5
  40b2f2:	jmp    0x40b268
  40b2f7:	mov    eax,DWORD PTR [rbx+0x20]
  40b2fa:	lea    ecx,[r8-0x1]
  40b2fe:	add    edi,edi
  40b300:	mov    DWORD PTR [rbx+0x24],ecx
  40b303:	shr    eax,cl
  40b305:	and    eax,0x1
  40b308:	mov    DWORD PTR [rsp+0x6c],eax
  40b30c:	or     edi,eax
  40b30e:	cmp    esi,0x14
  40b311:	jg     0x40c760
  40b317:	mov    rcx,QWORD PTR [rsp+0x70]
  40b31c:	movsxd rax,esi
  40b31f:	cmp    edi,DWORD PTR [rcx+rax*4]
  40b322:	jle    0x40c15c
  40b328:	add    esi,0x1
  40b32b:	mov    DWORD PTR [rbx+0x8],0x25
  40b332:	jmp    0x40b378
  40b334:	mov    rax,QWORD PTR [rbx]
  40b337:	mov    ecx,DWORD PTR [rax+0x8]
  40b33a:	test   ecx,ecx
  40b33c:	je     0x40ccf0
  40b342:	mov    rdx,QWORD PTR [rax]
  40b345:	sub    ecx,0x1
  40b348:	add    r8d,0x8
  40b34c:	movzx  r11d,BYTE PTR [rdx]
  40b350:	mov    edx,DWORD PTR [rbx+0x20]
  40b353:	mov    DWORD PTR [rbx+0x24],r8d
  40b357:	shl    edx,0x8
  40b35a:	or     edx,r11d
  40b35d:	mov    DWORD PTR [rbx+0x20],edx
  40b360:	mov    DWORD PTR [rax+0x8],ecx
  40b363:	mov    ecx,DWORD PTR [rax+0xc]
  40b366:	add    QWORD PTR [rax],0x1
  40b36a:	lea    edx,[rcx+0x1]
  40b36d:	test   edx,edx
  40b36f:	mov    DWORD PTR [rax+0xc],edx
  40b372:	je     0x40ce27
  40b378:	mov    r8d,DWORD PTR [rbx+0x24]
  40b37c:	test   r8d,r8d
  40b37f:	jle    0x40b334
  40b381:	jmp    0x40b2f7
  40b386:	mov    eax,DWORD PTR [rbx+0x24]
  40b389:	mov    DWORD PTR [rbx+0x8],0x23
  40b390:	jmp    0x40b3d4
  40b392:	mov    rdx,QWORD PTR [rbx]
  40b395:	mov    r8d,DWORD PTR [rdx+0x8]
  40b399:	test   r8d,r8d
  40b39c:	je     0x40ccf0
  40b3a2:	mov    rcx,QWORD PTR [rdx]
  40b3a5:	add    eax,0x8
  40b3a8:	sub    r8d,0x1
  40b3ac:	movzx  r11d,BYTE PTR [rcx]
  40b3b0:	mov    ecx,DWORD PTR [rbx+0x20]
  40b3b3:	mov    DWORD PTR [rbx+0x24],eax
  40b3b6:	shl    ecx,0x8
  40b3b9:	or     ecx,r11d
  40b3bc:	mov    DWORD PTR [rbx+0x20],ecx
  40b3bf:	add    QWORD PTR [rdx],0x1
  40b3c3:	add    DWORD PTR [rdx+0xc],0x1
  40b3c7:	mov    DWORD PTR [rdx+0x8],r8d
  40b3cb:	je     0x40cd95
  40b3d1:	mov    eax,DWORD PTR [rbx+0x24]
  40b3d4:	test   eax,eax
  40b3d6:	jle    0x40b392
  40b3d8:	lea    ecx,[rax-0x1]
  40b3db:	mov    eax,DWORD PTR [rbx+0x20]
  40b3de:	mov    DWORD PTR [rbx+0x24],ecx
  40b3e1:	shr    eax,cl
  40b3e3:	mov    ecx,DWORD PTR [rsp+0x64]
  40b3e7:	lea    edx,[rcx-0x1]
  40b3ea:	add    ecx,0x1
  40b3ed:	test   al,0x1
  40b3ef:	cmove  edx,ecx
  40b3f2:	mov    DWORD PTR [rsp+0x64],edx
  40b3f6:	mov    eax,DWORD PTR [rsp+0x64]
  40b3fa:	sub    eax,0x1
  40b3fd:	cmp    eax,0x13
  40b400:	ja     0x40c760
  40b406:	mov    DWORD PTR [rbx+0x8],0x22
  40b40d:	jmp    0x40b44f
  40b40f:	nop
  40b410:	mov    rdx,QWORD PTR [rbx]
  40b413:	mov    r8d,DWORD PTR [rdx+0x8]
  40b417:	test   r8d,r8d
  40b41a:	je     0x40ccf0
  40b420:	mov    rcx,QWORD PTR [rdx]
  40b423:	add    eax,0x8
  40b426:	sub    r8d,0x1
  40b42a:	movzx  r11d,BYTE PTR [rcx]
  40b42e:	mov    ecx,DWORD PTR [rbx+0x20]
  40b431:	mov    DWORD PTR [rbx+0x24],eax
  40b434:	shl    ecx,0x8
  40b437:	or     ecx,r11d
  40b43a:	mov    DWORD PTR [rbx+0x20],ecx
  40b43d:	add    QWORD PTR [rdx],0x1
  40b441:	add    DWORD PTR [rdx+0xc],0x1
  40b445:	mov    DWORD PTR [rdx+0x8],r8d
  40b449:	je     0x40ce55
  40b44f:	mov    eax,DWORD PTR [rbx+0x24]
  40b452:	test   eax,eax
  40b454:	jle    0x40b410
  40b456:	mov    edx,DWORD PTR [rbx+0x20]
  40b459:	sub    eax,0x1
  40b45c:	mov    DWORD PTR [rbx+0x24],eax
  40b45f:	bt     edx,eax
  40b462:	jb     0x40b389
  40b468:	movsxd rax,DWORD PTR [rsp+0x68]
  40b46d:	movsxd rdx,ebp
  40b470:	add    ebp,0x1
  40b473:	mov    rcx,rax
  40b476:	shl    rcx,0x8
  40b47a:	lea    rax,[rcx+rax*2]
  40b47e:	movzx  ecx,BYTE PTR [rsp+0x64]
  40b483:	add    rax,rbx
  40b486:	mov    BYTE PTR [rdx+rax*1+0xab70],cl
  40b48d:	cmp    ebp,DWORD PTR [rsp+0x60]
  40b491:	jl     0x40b3f6
  40b497:	add    DWORD PTR [rsp+0x68],0x1
  40b49c:	cmp    DWORD PTR [rsp+0x68],r12d
  40b4a1:	jl     0x40b7b2
  40b4a7:	test   r12d,r12d
  40b4aa:	jle    0x40d162
  40b4b0:	lea    rax,[rbx+0xfa0c]
  40b4b7:	lea    r14,[rbx+0xb17c]
  40b4be:	lea    r11,[rbx+0xab70]
  40b4c5:	mov    QWORD PTR [rsp+0x110],rbx
  40b4cd:	mov    DWORD PTR [rsp+0x90],esi
  40b4d4:	mov    rbp,rax
  40b4d7:	lea    eax,[r12-0x1]
  40b4dc:	mov    DWORD PTR [rsp+0x68],r10d
  40b4e1:	mov    DWORD PTR [rsp+0x98],edi
  40b4e8:	mov    rsi,r11
  40b4eb:	mov    rdx,rax
  40b4ee:	shl    rdx,0xa
  40b4f2:	lea    rax,[rdx+rax*8+0xb584]
  40b4fa:	add    rax,rbx
  40b4fd:	mov    rbx,r14
  40b500:	mov    r14,QWORD PTR [rsp+0x110]
  40b508:	mov    QWORD PTR [rsp+0x48],rax
  40b50d:	mov    eax,DWORD PTR [rsp+0x60]
  40b511:	sub    eax,0x1
  40b514:	add    rax,0x1
  40b518:	mov    QWORD PTR [rsp+0x58],rax
  40b51d:	mov    ecx,DWORD PTR [rsp+0x60]
  40b521:	test   ecx,ecx
  40b523:	jle    0x40d371
  40b529:	mov    rax,QWORD PTR [rsp+0x58]
  40b52e:	mov    rcx,rsi
  40b531:	xor    r8d,r8d
  40b534:	mov    edi,0x20
  40b539:	lea    r9,[rax+rsi*1]
  40b53d:	nop    DWORD PTR [rax]
  40b540:	movzx  eax,BYTE PTR [rcx]
  40b543:	cmp    r8d,eax
  40b546:	cmovl  r8d,eax
  40b54a:	cmp    edi,eax
  40b54c:	cmovg  edi,eax
  40b54f:	add    rcx,0x1
  40b553:	cmp    r9,rcx
  40b556:	jne    0x40b540
  40b558:	mov    eax,DWORD PTR [rsp+0x60]
  40b55c:	lea    rdx,[rbx+0x1830]
  40b563:	mov    DWORD PTR [rsp+0x28],r8d
  40b568:	lea    r8,[rbx+0x3060]
  40b56f:	mov    r9,rsi
  40b572:	mov    rcx,rbx
  40b575:	mov    DWORD PTR [rsp+0x20],edi
  40b579:	add    rbx,0x408
  40b580:	add    rsi,0x102
  40b587:	mov    DWORD PTR [rsp+0x30],eax
  40b58b:	add    rbp,0x4
  40b58f:	call   0x40fb20
  40b594:	mov    DWORD PTR [rbp-0x4],edi
  40b597:	cmp    rbx,QWORD PTR [rsp+0x48]
  40b59c:	jne    0x40b51d
  40b5a2:	mov    esi,DWORD PTR [rsp+0x90]
  40b5a9:	mov    edi,DWORD PTR [rsp+0x98]
  40b5b0:	mov    rbx,r14
  40b5b3:	mov    r10d,DWORD PTR [rsp+0x68]
  40b5b8:	mov    DWORD PTR [rsp+0x68],r12d
  40b5bd:	mov    eax,DWORD PTR [rbx+0xc78]
  40b5c3:	lea    rdx,[rbx+0x444]
  40b5ca:	lea    r9d,[rax+0x1]
  40b5ce:	imul   eax,DWORD PTR [rbx+0x28],0x186a0
  40b5d5:	mov    DWORD PTR [rsp+0x90],eax
  40b5dc:	lea    rax,[rbx+0x44]
  40b5e0:	mov    DWORD PTR [rax],0x0
  40b5e6:	add    rax,0x4
  40b5ea:	cmp    rax,rdx
  40b5ed:	jne    0x40b5e0
  40b5ef:	lea    r11,[rbx+0x1ec8]
  40b5f6:	mov    eax,0xfff
  40b5fb:	lea    r8d,[rax-0x10]
  40b5ff:	mov    edx,eax
  40b601:	movsxd rcx,eax
  40b604:	sub    eax,0x1
  40b607:	mov    BYTE PTR [rbx+rcx*1+0xe8c],dl
  40b60e:	sub    edx,0x1
  40b611:	cmp    r8d,eax
  40b614:	jne    0x40b601
  40b616:	lea    edx,[r8+0x1]
  40b61a:	sub    r11,0x4
  40b61e:	mov    eax,r8d
  40b621:	mov    DWORD PTR [r11+0x4],edx
  40b625:	cmp    r8d,0xeff
  40b62c:	jne    0x40b5fb
  40b62e:	mov    edx,DWORD PTR [rsp+0x54]
  40b632:	test   edx,edx
  40b634:	jle    0x40d140
  40b63a:	movzx  eax,BYTE PTR [rbx+0x1ecc]
  40b641:	xor    r14d,r14d
  40b644:	mov    DWORD PTR [rsp+0x58],0x31
  40b64c:	mov    DWORD PTR [rsp+0x48],0x0
  40b654:	mov    ebp,0x100
  40b659:	mov    rdx,rax
  40b65c:	mov    esi,DWORD PTR [rbx+rax*4+0xfa0c]
  40b663:	mov    DWORD PTR [rsp+0x94],eax
  40b66a:	shl    rdx,0xa
  40b66e:	lea    rax,[rdx+rax*8]
  40b672:	mov    DWORD PTR [rsp+0x8c],esi
  40b679:	lea    rcx,[rbx+rax*1+0xb17c]
  40b681:	mov    QWORD PTR [rsp+0x70],rcx
  40b686:	lea    rcx,[rbx+rax*1+0xe1dc]
  40b68e:	lea    rax,[rbx+rax*1+0xc9ac]
  40b696:	mov    QWORD PTR [rsp+0x80],rcx
  40b69e:	mov    QWORD PTR [rsp+0x78],rax
  40b6a3:	mov    DWORD PTR [rbx+0x8],0x24
  40b6aa:	jmp    0x40b6f4
  40b6ac:	nop    DWORD PTR [rax+0x0]
  40b6b0:	mov    rax,QWORD PTR [rbx]
  40b6b3:	mov    ecx,DWORD PTR [rax+0x8]
  40b6b6:	test   ecx,ecx
  40b6b8:	je     0x40ccf0
  40b6be:	mov    rdx,QWORD PTR [rax]
  40b6c1:	sub    ecx,0x1
  40b6c4:	add    r8d,0x8
  40b6c8:	movzx  r11d,BYTE PTR [rdx]
  40b6cc:	mov    edx,DWORD PTR [rbx+0x20]
  40b6cf:	mov    DWORD PTR [rbx+0x24],r8d
  40b6d3:	shl    edx,0x8
  40b6d6:	or     edx,r11d
  40b6d9:	mov    DWORD PTR [rbx+0x20],edx
  40b6dc:	mov    DWORD PTR [rax+0x8],ecx
  40b6df:	mov    ecx,DWORD PTR [rax+0xc]
  40b6e2:	add    QWORD PTR [rax],0x1
  40b6e6:	lea    edx,[rcx+0x1]
  40b6e9:	test   edx,edx
  40b6eb:	mov    DWORD PTR [rax+0xc],edx
  40b6ee:	je     0x40ce70
  40b6f4:	mov    r8d,DWORD PTR [rbx+0x24]
  40b6f8:	cmp    esi,r8d
  40b6fb:	jg     0x40b6b0
  40b6fd:	mov    edx,DWORD PTR [rbx+0x20]
  40b700:	sub    r8d,esi
  40b703:	mov    eax,0x1
  40b708:	mov    ecx,r8d
  40b70b:	mov    DWORD PTR [rbx+0x24],r8d
  40b70f:	shr    edx,cl
  40b711:	mov    ecx,esi
  40b713:	shl    eax,cl
  40b715:	lea    edi,[rax-0x1]
  40b718:	and    edi,edx
  40b71a:	jmp    0x40b30e
  40b71f:	mov    eax,DWORD PTR [rbx+0x20]
  40b722:	lea    ecx,[r8-0x1]
  40b726:	add    edi,edi
  40b728:	mov    DWORD PTR [rbx+0x24],ecx
  40b72b:	shr    eax,cl
  40b72d:	and    eax,0x1
  40b730:	mov    DWORD PTR [rsp+0x6c],eax
  40b734:	or     edi,eax
  40b736:	cmp    esi,0x14
  40b739:	jg     0x40c760
  40b73f:	mov    rcx,QWORD PTR [rsp+0x70]
  40b744:	movsxd rax,esi
  40b747:	cmp    edi,DWORD PTR [rcx+rax*4]
  40b74a:	jle    0x40cf66
  40b750:	add    esi,0x1
  40b753:	mov    DWORD PTR [rbx+0x8],0x27
  40b75a:	jmp    0x40b7a4
  40b75c:	nop    DWORD PTR [rax+0x0]
  40b760:	mov    rax,QWORD PTR [rbx]
  40b763:	mov    ecx,DWORD PTR [rax+0x8]
  40b766:	test   ecx,ecx
  40b768:	je     0x40ccf0
  40b76e:	mov    rdx,QWORD PTR [rax]
  40b771:	sub    ecx,0x1
  40b774:	add    r8d,0x8
  40b778:	movzx  r11d,BYTE PTR [rdx]
  40b77c:	mov    edx,DWORD PTR [rbx+0x20]
  40b77f:	mov    DWORD PTR [rbx+0x24],r8d
  40b783:	shl    edx,0x8
  40b786:	or     edx,r11d
  40b789:	mov    DWORD PTR [rbx+0x20],edx
  40b78c:	mov    DWORD PTR [rax+0x8],ecx
  40b78f:	mov    ecx,DWORD PTR [rax+0xc]
  40b792:	add    QWORD PTR [rax],0x1
  40b796:	lea    edx,[rcx+0x1]
  40b799:	test   edx,edx
  40b79b:	mov    DWORD PTR [rax+0xc],edx
  40b79e:	je     0x40ce30
  40b7a4:	mov    r8d,DWORD PTR [rbx+0x24]
  40b7a8:	test   r8d,r8d
  40b7ab:	jle    0x40b760
  40b7ad:	jmp    0x40b71f
  40b7b2:	mov    DWORD PTR [rbx+0x8],0x21
  40b7b9:	jmp    0x40b804
  40b7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b7c0:	mov    rax,QWORD PTR [rbx]
  40b7c3:	mov    ecx,DWORD PTR [rax+0x8]
  40b7c6:	test   ecx,ecx
  40b7c8:	je     0x40ccf0
  40b7ce:	mov    rdx,QWORD PTR [rax]
  40b7d1:	sub    ecx,0x1
  40b7d4:	add    r8d,0x8
  40b7d8:	movzx  r11d,BYTE PTR [rdx]
  40b7dc:	mov    edx,DWORD PTR [rbx+0x20]
  40b7df:	mov    DWORD PTR [rbx+0x24],r8d
  40b7e3:	shl    edx,0x8
  40b7e6:	or     edx,r11d
  40b7e9:	mov    DWORD PTR [rbx+0x20],edx
  40b7ec:	mov    DWORD PTR [rax+0x8],ecx
  40b7ef:	mov    ecx,DWORD PTR [rax+0xc]
  40b7f2:	add    QWORD PTR [rax],0x1
  40b7f6:	lea    edx,[rcx+0x1]
  40b7f9:	test   edx,edx
  40b7fb:	mov    DWORD PTR [rax+0xc],edx
  40b7fe:	je     0x40ce5e
  40b804:	mov    r8d,DWORD PTR [rbx+0x24]
  40b808:	cmp    r8d,0x4
  40b80c:	jle    0x40b7c0
  40b80e:	mov    eax,DWORD PTR [rbx+0x20]
  40b811:	lea    ecx,[r8-0x5]
  40b815:	xor    ebp,ebp
  40b817:	mov    DWORD PTR [rbx+0x24],ecx
  40b81a:	shr    eax,cl
  40b81c:	and    eax,0x1f
  40b81f:	mov    DWORD PTR [rsp+0x64],eax
  40b823:	jmp    0x40b48d
  40b828:	mov    ecx,DWORD PTR [rbx+0x24]
  40b82b:	mov    DWORD PTR [rbx+0x8],0x18
  40b832:	jmp    0x40b87d
  40b834:	mov    rax,QWORD PTR [rbx]
  40b837:	mov    r8d,DWORD PTR [rax+0x8]
  40b83b:	test   r8d,r8d
  40b83e:	je     0x40ccf0
  40b844:	mov    rdx,QWORD PTR [rax]
  40b847:	add    ecx,0x8
  40b84a:	sub    r8d,0x1
  40b84e:	movzx  r11d,BYTE PTR [rdx]
  40b852:	mov    edx,DWORD PTR [rbx+0x20]
  40b855:	mov    DWORD PTR [rbx+0x24],ecx
  40b858:	mov    ecx,DWORD PTR [rax+0xc]
  40b85b:	shl    edx,0x8
  40b85e:	or     edx,r11d
  40b861:	mov    DWORD PTR [rbx+0x20],edx
  40b864:	lea    edx,[rcx+0x1]
  40b867:	add    QWORD PTR [rax],0x1
  40b86b:	mov    DWORD PTR [rax+0x8],r8d
  40b86f:	test   edx,edx
  40b871:	mov    DWORD PTR [rax+0xc],edx
  40b874:	je     0x40cd3b
  40b87a:	mov    ecx,DWORD PTR [rbx+0x24]
  40b87d:	test   ecx,ecx
  40b87f:	jle    0x40b834
  40b881:	mov    eax,DWORD PTR [rbx+0x20]
  40b884:	sub    ecx,0x1
  40b887:	mov    DWORD PTR [rbx+0x38],0x0
  40b88e:	mov    DWORD PTR [rbx+0x24],ecx
  40b891:	shr    eax,cl
  40b893:	and    eax,0x1
  40b896:	mov    BYTE PTR [rbx+0x14],al
  40b899:	mov    DWORD PTR [rbx+0x8],0x19
  40b8a0:	jmp    0x40b8eb
  40b8a2:	mov    rax,QWORD PTR [rbx]
  40b8a5:	mov    r8d,DWORD PTR [rax+0x8]
  40b8a9:	test   r8d,r8d
  40b8ac:	je     0x40ccf0
  40b8b2:	mov    rdx,QWORD PTR [rax]
  40b8b5:	add    ecx,0x8
  40b8b8:	sub    r8d,0x1
  40b8bc:	movzx  r11d,BYTE PTR [rdx]
  40b8c0:	mov    edx,DWORD PTR [rbx+0x20]
  40b8c3:	mov    DWORD PTR [rbx+0x24],ecx
  40b8c6:	mov    ecx,DWORD PTR [rax+0xc]
  40b8c9:	shl    edx,0x8
  40b8cc:	or     edx,r11d
  40b8cf:	mov    DWORD PTR [rbx+0x20],edx
  40b8d2:	lea    edx,[rcx+0x1]
  40b8d5:	add    QWORD PTR [rax],0x1
  40b8d9:	mov    DWORD PTR [rax+0x8],r8d
  40b8dd:	test   edx,edx
  40b8df:	mov    DWORD PTR [rax+0xc],edx
  40b8e2:	je     0x40cd44
  40b8e8:	mov    ecx,DWORD PTR [rbx+0x24]
  40b8eb:	cmp    ecx,0x7
  40b8ee:	jle    0x40b8a2
  40b8f0:	mov    eax,DWORD PTR [rbx+0x20]
  40b8f3:	sub    ecx,0x8
  40b8f6:	mov    DWORD PTR [rbx+0x24],ecx
  40b8f9:	shr    eax,cl
  40b8fb:	movzx  edx,al
  40b8fe:	mov    eax,DWORD PTR [rbx+0x38]
  40b901:	shl    eax,0x8
  40b904:	or     eax,edx
  40b906:	mov    DWORD PTR [rbx+0x38],eax
  40b909:	mov    DWORD PTR [rbx+0x8],0x1a
  40b910:	jmp    0x40b95b
  40b912:	mov    rax,QWORD PTR [rbx]
  40b915:	mov    r8d,DWORD PTR [rax+0x8]
  40b919:	test   r8d,r8d
  40b91c:	je     0x40ccf0
  40b922:	mov    rdx,QWORD PTR [rax]
  40b925:	add    ecx,0x8
  40b928:	sub    r8d,0x1
  40b92c:	movzx  r11d,BYTE PTR [rdx]
  40b930:	mov    edx,DWORD PTR [rbx+0x20]
  40b933:	mov    DWORD PTR [rbx+0x24],ecx
  40b936:	mov    ecx,DWORD PTR [rax+0xc]
  40b939:	shl    edx,0x8
  40b93c:	or     edx,r11d
  40b93f:	mov    DWORD PTR [rbx+0x20],edx
  40b942:	lea    edx,[rcx+0x1]
  40b945:	add    QWORD PTR [rax],0x1
  40b949:	mov    DWORD PTR [rax+0x8],r8d
  40b94d:	test   edx,edx
  40b94f:	mov    DWORD PTR [rax+0xc],edx
  40b952:	je     0x40cd4d
  40b958:	mov    ecx,DWORD PTR [rbx+0x24]
  40b95b:	cmp    ecx,0x7
  40b95e:	jle    0x40b912
  40b960:	mov    eax,DWORD PTR [rbx+0x20]
  40b963:	sub    ecx,0x8
  40b966:	mov    DWORD PTR [rbx+0x24],ecx
  40b969:	shr    eax,cl
  40b96b:	movzx  edx,al
  40b96e:	mov    eax,DWORD PTR [rbx+0x38]
  40b971:	shl    eax,0x8
  40b974:	or     eax,edx
  40b976:	mov    DWORD PTR [rbx+0x38],eax
  40b979:	mov    DWORD PTR [rbx+0x8],0x1b
  40b980:	jmp    0x40b9cb
  40b982:	mov    rax,QWORD PTR [rbx]
  40b985:	mov    r8d,DWORD PTR [rax+0x8]
  40b989:	test   r8d,r8d
  40b98c:	je     0x40ccf0
  40b992:	mov    rdx,QWORD PTR [rax]
  40b995:	add    ecx,0x8
  40b998:	sub    r8d,0x1
  40b99c:	movzx  r11d,BYTE PTR [rdx]
  40b9a0:	mov    edx,DWORD PTR [rbx+0x20]
  40b9a3:	mov    DWORD PTR [rbx+0x24],ecx
  40b9a6:	mov    ecx,DWORD PTR [rax+0xc]
  40b9a9:	shl    edx,0x8
  40b9ac:	or     edx,r11d
  40b9af:	mov    DWORD PTR [rbx+0x20],edx
  40b9b2:	lea    edx,[rcx+0x1]
  40b9b5:	add    QWORD PTR [rax],0x1
  40b9b9:	mov    DWORD PTR [rax+0x8],r8d
  40b9bd:	test   edx,edx
  40b9bf:	mov    DWORD PTR [rax+0xc],edx
  40b9c2:	je     0x40cd56
  40b9c8:	mov    ecx,DWORD PTR [rbx+0x24]
  40b9cb:	cmp    ecx,0x7
  40b9ce:	jle    0x40b982
  40b9d0:	mov    eax,DWORD PTR [rbx+0x20]
  40b9d3:	sub    ecx,0x8
  40b9d6:	mov    DWORD PTR [rbx+0x24],ecx
  40b9d9:	shr    eax,cl
  40b9db:	movzx  edx,al
  40b9de:	mov    eax,DWORD PTR [rbx+0x38]
  40b9e1:	shl    eax,0x8
  40b9e4:	or     eax,edx
  40b9e6:	test   eax,eax
  40b9e8:	mov    DWORD PTR [rbx+0x38],eax
  40b9eb:	js     0x40c760
  40b9f1:	imul   edx,DWORD PTR [rbx+0x28],0x186a0
  40b9f8:	add    edx,0xa
  40b9fb:	cmp    eax,edx
  40b9fd:	jg     0x40c760
  40ba03:	xor    ebp,ebp
  40ba05:	mov    DWORD PTR [rbx+0x8],0x1c
  40ba0c:	jmp    0x40ba59
  40ba0e:	xchg   ax,ax
  40ba10:	mov    rax,QWORD PTR [rbx]
  40ba13:	mov    r8d,DWORD PTR [rax+0x8]
  40ba17:	test   r8d,r8d
  40ba1a:	je     0x40ccf0
  40ba20:	mov    rdx,QWORD PTR [rax]
  40ba23:	add    ecx,0x8
  40ba26:	sub    r8d,0x1
  40ba2a:	movzx  r11d,BYTE PTR [rdx]
  40ba2e:	mov    edx,DWORD PTR [rbx+0x20]
  40ba31:	mov    DWORD PTR [rbx+0x24],ecx
  40ba34:	mov    ecx,DWORD PTR [rax+0xc]
  40ba37:	shl    edx,0x8
  40ba3a:	or     edx,r11d
  40ba3d:	mov    DWORD PTR [rbx+0x20],edx
  40ba40:	lea    edx,[rcx+0x1]
  40ba43:	add    QWORD PTR [rax],0x1
  40ba47:	mov    DWORD PTR [rax+0x8],r8d
  40ba4b:	test   edx,edx
  40ba4d:	mov    DWORD PTR [rax+0xc],edx
  40ba50:	je     0x40ce0c
  40ba56:	mov    ecx,DWORD PTR [rbx+0x24]
  40ba59:	test   ecx,ecx
  40ba5b:	jle    0x40ba10
  40ba5d:	mov    eax,DWORD PTR [rbx+0x20]
  40ba60:	sub    ecx,0x1
  40ba63:	mov    DWORD PTR [rbx+0x24],ecx
  40ba66:	bt     eax,ecx
  40ba69:	jb     0x40cf3d
  40ba6f:	movsxd rax,ebp
  40ba72:	mov    BYTE PTR [rbx+rax*1+0xd7c],0x0
  40ba7a:	add    ebp,0x1
  40ba7d:	cmp    ebp,0xf
  40ba80:	jle    0x40ba05
  40ba82:	lea    rax,[rbx+0xc7c]
  40ba89:	lea    rdx,[rbx+0xd7c]
  40ba90:	mov    BYTE PTR [rax],0x0
  40ba93:	add    rax,0x1
  40ba97:	cmp    rax,rdx
  40ba9a:	jne    0x40ba90
  40ba9c:	xor    ebp,ebp
  40ba9e:	movsxd rax,ebp
  40baa1:	cmp    BYTE PTR [rbx+rax*1+0xd7c],0x0
  40baa9:	je     0x40bb39
  40baaf:	xor    r13d,r13d
  40bab2:	mov    eax,ebp
  40bab4:	shl    eax,0x4
  40bab7:	mov    DWORD PTR [rsp+0x98],eax
  40babe:	mov    DWORD PTR [rbx+0x8],0x1d
  40bac5:	jmp    0x40bb16
  40bac7:	nop    WORD PTR [rax+rax*1+0x0]
  40bad0:	mov    rax,QWORD PTR [rbx]
  40bad3:	mov    r8d,DWORD PTR [rax+0x8]
  40bad7:	test   r8d,r8d
  40bada:	je     0x40ccf0
  40bae0:	mov    rdx,QWORD PTR [rax]
  40bae3:	add    ecx,0x8
  40bae6:	sub    r8d,0x1
  40baea:	movzx  r11d,BYTE PTR [rdx]
  40baee:	mov    edx,DWORD PTR [rbx+0x20]
  40baf1:	mov    DWORD PTR [rbx+0x24],ecx
  40baf4:	mov    ecx,DWORD PTR [rax+0xc]
  40baf7:	shl    edx,0x8
  40bafa:	or     edx,r11d
  40bafd:	mov    DWORD PTR [rbx+0x20],edx
  40bb00:	lea    edx,[rcx+0x1]
  40bb03:	add    QWORD PTR [rax],0x1
  40bb07:	mov    DWORD PTR [rax+0x8],r8d
  40bb0b:	test   edx,edx
  40bb0d:	mov    DWORD PTR [rax+0xc],edx
  40bb10:	je     0x40ce79
  40bb16:	mov    ecx,DWORD PTR [rbx+0x24]
  40bb19:	test   ecx,ecx
  40bb1b:	jle    0x40bad0
  40bb1d:	mov    eax,DWORD PTR [rbx+0x20]
  40bb20:	sub    ecx,0x1
  40bb23:	mov    DWORD PTR [rbx+0x24],ecx
  40bb26:	bt     eax,ecx
  40bb29:	jb     0x40cf4d
  40bb2f:	add    r13d,0x1
  40bb33:	cmp    r13d,0xf
  40bb37:	jle    0x40babe
  40bb39:	add    ebp,0x1
  40bb3c:	cmp    ebp,0xf
  40bb3f:	jle    0x40ba9e
  40bb45:	mov    DWORD PTR [rbx+0xc78],0x0
  40bb4f:	xor    eax,eax
  40bb51:	xor    edx,edx
  40bb53:	cmp    BYTE PTR [rbx+rax*1+0xc7c],0x0
  40bb5b:	je     0x40bb70
  40bb5d:	movsxd rcx,edx
  40bb60:	add    edx,0x1
  40bb63:	mov    BYTE PTR [rbx+rcx*1+0xd8c],al
  40bb6a:	mov    DWORD PTR [rbx+0xc78],edx
  40bb70:	add    rax,0x1
  40bb74:	cmp    rax,0x100
  40bb7a:	jne    0x40bb53
  40bb7c:	test   edx,edx
  40bb7e:	je     0x40c760
  40bb84:	lea    eax,[rdx+0x2]
  40bb87:	mov    DWORD PTR [rsp+0x60],eax
  40bb8b:	mov    DWORD PTR [rbx+0x8],0x1e
  40bb92:	jmp    0x40bbda
  40bb94:	mov    rax,QWORD PTR [rbx]
  40bb97:	mov    r8d,DWORD PTR [rax+0x8]
  40bb9b:	test   r8d,r8d
  40bb9e:	je     0x40ccf0
  40bba4:	mov    rdx,QWORD PTR [rax]
  40bba7:	add    ecx,0x8
  40bbaa:	sub    r8d,0x1
  40bbae:	movzx  r11d,BYTE PTR [rdx]
  40bbb2:	mov    edx,DWORD PTR [rbx+0x20]
  40bbb5:	mov    DWORD PTR [rbx+0x24],ecx
  40bbb8:	mov    ecx,DWORD PTR [rax+0xc]
  40bbbb:	shl    edx,0x8
  40bbbe:	or     edx,r11d
  40bbc1:	mov    DWORD PTR [rbx+0x20],edx
  40bbc4:	lea    edx,[rcx+0x1]
  40bbc7:	add    QWORD PTR [rax],0x1
  40bbcb:	mov    DWORD PTR [rax+0x8],r8d
  40bbcf:	test   edx,edx
  40bbd1:	mov    DWORD PTR [rax+0xc],edx
  40bbd4:	je     0x40ce82
  40bbda:	mov    ecx,DWORD PTR [rbx+0x24]
  40bbdd:	cmp    ecx,0x2
  40bbe0:	jle    0x40bb94
  40bbe2:	mov    r12d,DWORD PTR [rbx+0x20]
  40bbe6:	sub    ecx,0x3
  40bbe9:	mov    DWORD PTR [rbx+0x24],ecx
  40bbec:	shr    r12d,cl
  40bbef:	and    r12d,0x7
  40bbf3:	lea    eax,[r12-0x2]
  40bbf8:	cmp    eax,0x4
  40bbfb:	ja     0x40c760
  40bc01:	jmp    0x40c866
  40bc06:	mov    ecx,DWORD PTR [rbx+0x24]
  40bc09:	mov    DWORD PTR [rbx+0x8],0x17
  40bc10:	jmp    0x40bc5b
  40bc12:	mov    rax,QWORD PTR [rbx]
  40bc15:	mov    r8d,DWORD PTR [rax+0x8]
  40bc19:	test   r8d,r8d
  40bc1c:	je     0x40ccf0
  40bc22:	mov    rdx,QWORD PTR [rax]
  40bc25:	add    ecx,0x8
  40bc28:	sub    r8d,0x1
  40bc2c:	movzx  r11d,BYTE PTR [rdx]
  40bc30:	mov    edx,DWORD PTR [rbx+0x20]
  40bc33:	mov    DWORD PTR [rbx+0x24],ecx
  40bc36:	mov    ecx,DWORD PTR [rax+0xc]
  40bc39:	shl    edx,0x8
  40bc3c:	or     edx,r11d
  40bc3f:	mov    DWORD PTR [rbx+0x20],edx
  40bc42:	lea    edx,[rcx+0x1]
  40bc45:	add    QWORD PTR [rax],0x1
  40bc49:	mov    DWORD PTR [rax+0x8],r8d
  40bc4d:	test   edx,edx
  40bc4f:	mov    DWORD PTR [rax+0xc],edx
  40bc52:	je     0x40cd68
  40bc58:	mov    ecx,DWORD PTR [rbx+0x24]
  40bc5b:	cmp    ecx,0x7
  40bc5e:	jle    0x40bc12
  40bc60:	mov    eax,DWORD PTR [rbx+0x20]
  40bc63:	sub    ecx,0x8
  40bc66:	mov    DWORD PTR [rbx+0x24],ecx
  40bc69:	shr    eax,cl
  40bc6b:	movzx  edx,al
  40bc6e:	mov    eax,DWORD PTR [rbx+0xc68]
  40bc74:	shl    eax,0x8
  40bc77:	or     eax,edx
  40bc79:	mov    DWORD PTR [rbx+0xc68],eax
  40bc7f:	jmp    0x40b82b
  40bc84:	mov    ecx,DWORD PTR [rbx+0x24]
  40bc87:	mov    DWORD PTR [rbx+0x8],0x14
  40bc8e:	jmp    0x40bcd9
  40bc90:	mov    rax,QWORD PTR [rbx]
  40bc93:	mov    r8d,DWORD PTR [rax+0x8]
  40bc97:	test   r8d,r8d
  40bc9a:	je     0x40ccf0
  40bca0:	mov    rdx,QWORD PTR [rax]
  40bca3:	add    ecx,0x8
  40bca6:	sub    r8d,0x1
  40bcaa:	movzx  r11d,BYTE PTR [rdx]
  40bcae:	mov    edx,DWORD PTR [rbx+0x20]
  40bcb1:	mov    DWORD PTR [rbx+0x24],ecx
  40bcb4:	mov    ecx,DWORD PTR [rax+0xc]
  40bcb7:	shl    edx,0x8
  40bcba:	or     edx,r11d
  40bcbd:	mov    DWORD PTR [rbx+0x20],edx
  40bcc0:	lea    edx,[rcx+0x1]
  40bcc3:	add    QWORD PTR [rax],0x1
  40bcc7:	mov    DWORD PTR [rax+0x8],r8d
  40bccb:	test   edx,edx
  40bccd:	mov    DWORD PTR [rax+0xc],edx
  40bcd0:	je     0x40cdcc
  40bcd6:	mov    ecx,DWORD PTR [rbx+0x24]
  40bcd9:	cmp    ecx,0x7
  40bcdc:	jle    0x40bc90
  40bcde:	mov    eax,DWORD PTR [rbx+0x20]
  40bce1:	sub    ecx,0x8
  40bce4:	mov    DWORD PTR [rbx+0x24],ecx
  40bce7:	shr    eax,cl
  40bce9:	movzx  edx,al
  40bcec:	mov    eax,DWORD PTR [rbx+0xc68]
  40bcf2:	shl    eax,0x8
  40bcf5:	or     eax,edx
  40bcf7:	mov    DWORD PTR [rbx+0xc68],eax
  40bcfd:	jmp    0x40be65
  40bd02:	mov    ecx,DWORD PTR [rbx+0x24]
  40bd05:	mov    DWORD PTR [rbx+0x8],0x13
  40bd0c:	jmp    0x40bd59
  40bd0e:	xchg   ax,ax
  40bd10:	mov    rax,QWORD PTR [rbx]
  40bd13:	mov    r8d,DWORD PTR [rax+0x8]
  40bd17:	test   r8d,r8d
  40bd1a:	je     0x40ccf0
  40bd20:	mov    rdx,QWORD PTR [rax]
  40bd23:	add    ecx,0x8
  40bd26:	sub    r8d,0x1
  40bd2a:	movzx  r11d,BYTE PTR [rdx]
  40bd2e:	mov    edx,DWORD PTR [rbx+0x20]
  40bd31:	mov    DWORD PTR [rbx+0x24],ecx
  40bd34:	mov    ecx,DWORD PTR [rax+0xc]
  40bd37:	shl    edx,0x8
  40bd3a:	or     edx,r11d
  40bd3d:	mov    DWORD PTR [rbx+0x20],edx
  40bd40:	lea    edx,[rcx+0x1]
  40bd43:	add    QWORD PTR [rax],0x1
  40bd47:	mov    DWORD PTR [rax+0x8],r8d
  40bd4b:	test   edx,edx
  40bd4d:	mov    DWORD PTR [rax+0xc],edx
  40bd50:	je     0x40cdb0
  40bd56:	mov    ecx,DWORD PTR [rbx+0x24]
  40bd59:	cmp    ecx,0x7
  40bd5c:	jle    0x40bd10
  40bd5e:	mov    edx,DWORD PTR [rbx+0x20]
  40bd61:	sub    ecx,0x8
  40bd64:	mov    eax,0xfffffffc
  40bd69:	mov    DWORD PTR [rbx+0x24],ecx
  40bd6c:	shr    edx,cl
  40bd6e:	cmp    dl,0x59
  40bd71:	jne    0x40c765
  40bd77:	mov    eax,DWORD PTR [rbx+0x30]
  40bd7a:	cmp    DWORD PTR [rbx+0x34],0x1
  40bd7e:	lea    r8d,[rax+0x1]
  40bd82:	mov    DWORD PTR [rbx+0x30],r8d
  40bd86:	mov    DWORD PTR [rsp+0xac],r8d
  40bd8e:	jle    0x40bdd1
  40bd90:	mov    DWORD PTR [rsp+0xa0],r10d
  40bd98:	mov    DWORD PTR [rsp+0x98],r9d
  40bda0:	call   QWORD PTR [rip+0x105de]        # 0x41c384
  40bda6:	mov    r8d,DWORD PTR [rsp+0xac]
  40bdae:	lea    rcx,[rax+0x60]
  40bdb2:	lea    rdx,[rip+0xa7b7]        # 0x416570
  40bdb9:	call   0x4112b0
  40bdbe:	mov    ecx,DWORD PTR [rbx+0x24]
  40bdc1:	mov    r10d,DWORD PTR [rsp+0xa0]
  40bdc9:	mov    r9d,DWORD PTR [rsp+0x98]
  40bdd1:	mov    DWORD PTR [rbx+0xc68],0x0
  40bddb:	jmp    0x40bc87
  40bde0:	mov    ecx,DWORD PTR [rbx+0x24]
  40bde3:	mov    DWORD PTR [rbx+0x8],0x16
  40bdea:	jmp    0x40be39
  40bdec:	nop    DWORD PTR [rax+0x0]
  40bdf0:	mov    rax,QWORD PTR [rbx]
  40bdf3:	mov    r8d,DWORD PTR [rax+0x8]
  40bdf7:	test   r8d,r8d
  40bdfa:	je     0x40ccf0
  40be00:	mov    rdx,QWORD PTR [rax]
  40be03:	add    ecx,0x8
  40be06:	sub    r8d,0x1
  40be0a:	movzx  r11d,BYTE PTR [rdx]
  40be0e:	mov    edx,DWORD PTR [rbx+0x20]
  40be11:	mov    DWORD PTR [rbx+0x24],ecx
  40be14:	mov    ecx,DWORD PTR [rax+0xc]
  40be17:	shl    edx,0x8
  40be1a:	or     edx,r11d
  40be1d:	mov    DWORD PTR [rbx+0x20],edx
  40be20:	lea    edx,[rcx+0x1]
  40be23:	add    QWORD PTR [rax],0x1
  40be27:	mov    DWORD PTR [rax+0x8],r8d
  40be2b:	test   edx,edx
  40be2d:	mov    DWORD PTR [rax+0xc],edx
  40be30:	je     0x40cd71
  40be36:	mov    ecx,DWORD PTR [rbx+0x24]
  40be39:	cmp    ecx,0x7
  40be3c:	jle    0x40bdf0
  40be3e:	mov    eax,DWORD PTR [rbx+0x20]
  40be41:	sub    ecx,0x8
  40be44:	mov    DWORD PTR [rbx+0x24],ecx
  40be47:	shr    eax,cl
  40be49:	movzx  edx,al
  40be4c:	mov    eax,DWORD PTR [rbx+0xc68]
  40be52:	shl    eax,0x8
  40be55:	or     eax,edx
  40be57:	mov    DWORD PTR [rbx+0xc68],eax
  40be5d:	jmp    0x40bc09
  40be62:	mov    ecx,DWORD PTR [rbx+0x24]
  40be65:	mov    DWORD PTR [rbx+0x8],0x15
  40be6c:	jmp    0x40beb9
  40be6e:	xchg   ax,ax
  40be70:	mov    rax,QWORD PTR [rbx]
  40be73:	mov    r8d,DWORD PTR [rax+0x8]
  40be77:	test   r8d,r8d
  40be7a:	je     0x40ccf0
  40be80:	mov    rdx,QWORD PTR [rax]
  40be83:	add    ecx,0x8
  40be86:	sub    r8d,0x1
  40be8a:	movzx  r11d,BYTE PTR [rdx]
  40be8e:	mov    edx,DWORD PTR [rbx+0x20]
  40be91:	mov    DWORD PTR [rbx+0x24],ecx
  40be94:	mov    ecx,DWORD PTR [rax+0xc]
  40be97:	shl    edx,0x8
  40be9a:	or     edx,r11d
  40be9d:	mov    DWORD PTR [rbx+0x20],edx
  40bea0:	lea    edx,[rcx+0x1]
  40bea3:	add    QWORD PTR [rax],0x1
  40bea7:	mov    DWORD PTR [rax+0x8],r8d
  40beab:	test   edx,edx
  40bead:	mov    DWORD PTR [rax+0xc],edx
  40beb0:	je     0x40cd83
  40beb6:	mov    ecx,DWORD PTR [rbx+0x24]
  40beb9:	cmp    ecx,0x7
  40bebc:	jle    0x40be70
  40bebe:	mov    eax,DWORD PTR [rbx+0x20]
  40bec1:	sub    ecx,0x8
  40bec4:	mov    DWORD PTR [rbx+0x24],ecx
  40bec7:	shr    eax,cl
  40bec9:	movzx  edx,al
  40becc:	mov    eax,DWORD PTR [rbx+0xc68]
  40bed2:	shl    eax,0x8
  40bed5:	or     eax,edx
  40bed7:	mov    DWORD PTR [rbx+0xc68],eax
  40bedd:	jmp    0x40bde3
  40bee2:	mov    ecx,DWORD PTR [rbx+0x24]
  40bee5:	mov    DWORD PTR [rbx+0x8],0x12
  40beec:	jmp    0x40bf39
  40beee:	xchg   ax,ax
  40bef0:	mov    rax,QWORD PTR [rbx]
  40bef3:	mov    r8d,DWORD PTR [rax+0x8]
  40bef7:	test   r8d,r8d
  40befa:	je     0x40ccf0
  40bf00:	mov    rdx,QWORD PTR [rax]
  40bf03:	add    ecx,0x8
  40bf06:	sub    r8d,0x1
  40bf0a:	movzx  r11d,BYTE PTR [rdx]
  40bf0e:	mov    edx,DWORD PTR [rbx+0x20]
  40bf11:	mov    DWORD PTR [rbx+0x24],ecx
  40bf14:	mov    ecx,DWORD PTR [rax+0xc]
  40bf17:	shl    edx,0x8
  40bf1a:	or     edx,r11d
  40bf1d:	mov    DWORD PTR [rbx+0x20],edx
  40bf20:	lea    edx,[rcx+0x1]
  40bf23:	add    QWORD PTR [rax],0x1
  40bf27:	mov    DWORD PTR [rax+0x8],r8d
  40bf2b:	test   edx,edx
  40bf2d:	mov    DWORD PTR [rax+0xc],edx
  40bf30:	je     0x40cdb9
  40bf36:	mov    ecx,DWORD PTR [rbx+0x24]
  40bf39:	cmp    ecx,0x7
  40bf3c:	jle    0x40bef0
  40bf3e:	mov    edx,DWORD PTR [rbx+0x20]
  40bf41:	sub    ecx,0x8
  40bf44:	mov    eax,0xfffffffc
  40bf49:	mov    DWORD PTR [rbx+0x24],ecx
  40bf4c:	shr    edx,cl
  40bf4e:	cmp    dl,0x53
  40bf51:	jne    0x40c765
  40bf57:	jmp    0x40bd05
  40bf5c:	mov    ecx,DWORD PTR [rbx+0x24]
  40bf5f:	mov    DWORD PTR [rbx+0x8],0x11
  40bf66:	jmp    0x40bfb9
  40bf68:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf70:	mov    rax,QWORD PTR [rbx]
  40bf73:	mov    r8d,DWORD PTR [rax+0x8]
  40bf77:	test   r8d,r8d
  40bf7a:	je     0x40ccf0
  40bf80:	mov    rdx,QWORD PTR [rax]
  40bf83:	add    ecx,0x8
  40bf86:	sub    r8d,0x1
  40bf8a:	movzx  r11d,BYTE PTR [rdx]
  40bf8e:	mov    edx,DWORD PTR [rbx+0x20]
  40bf91:	mov    DWORD PTR [rbx+0x24],ecx
  40bf94:	mov    ecx,DWORD PTR [rax+0xc]
  40bf97:	shl    edx,0x8
  40bf9a:	or     edx,r11d
  40bf9d:	mov    DWORD PTR [rbx+0x20],edx
  40bfa0:	lea    edx,[rcx+0x1]
  40bfa3:	add    QWORD PTR [rax],0x1
  40bfa7:	mov    DWORD PTR [rax+0x8],r8d
  40bfab:	test   edx,edx
  40bfad:	mov    DWORD PTR [rax+0xc],edx
  40bfb0:	je     0x40cdf0
  40bfb6:	mov    ecx,DWORD PTR [rbx+0x24]
  40bfb9:	cmp    ecx,0x7
  40bfbc:	jle    0x40bf70
  40bfbe:	mov    edx,DWORD PTR [rbx+0x20]
  40bfc1:	sub    ecx,0x8
  40bfc4:	mov    eax,0xfffffffc
  40bfc9:	mov    DWORD PTR [rbx+0x24],ecx
  40bfcc:	shr    edx,cl
  40bfce:	cmp    dl,0x26
  40bfd1:	jne    0x40c765
  40bfd7:	jmp    0x40bee5
  40bfdc:	mov    ecx,DWORD PTR [rbx+0x24]
  40bfdf:	mov    DWORD PTR [rbx+0x8],0x10
  40bfe6:	jmp    0x40c039
  40bfe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bff0:	mov    rax,QWORD PTR [rbx]
  40bff3:	mov    r8d,DWORD PTR [rax+0x8]
  40bff7:	test   r8d,r8d
  40bffa:	je     0x40ccf0
  40c000:	mov    rdx,QWORD PTR [rax]
  40c003:	add    ecx,0x8
  40c006:	sub    r8d,0x1
  40c00a:	movzx  r11d,BYTE PTR [rdx]
  40c00e:	mov    edx,DWORD PTR [rbx+0x20]
  40c011:	mov    DWORD PTR [rbx+0x24],ecx
  40c014:	mov    ecx,DWORD PTR [rax+0xc]
  40c017:	shl    edx,0x8
  40c01a:	or     edx,r11d
  40c01d:	mov    DWORD PTR [rbx+0x20],edx
  40c020:	lea    edx,[rcx+0x1]
  40c023:	add    QWORD PTR [rax],0x1
  40c027:	mov    DWORD PTR [rax+0x8],r8d
  40c02b:	test   edx,edx
  40c02d:	mov    DWORD PTR [rax+0xc],edx
  40c030:	je     0x40ce39
  40c036:	mov    ecx,DWORD PTR [rbx+0x24]
  40c039:	cmp    ecx,0x7
  40c03c:	jle    0x40bff0
  40c03e:	mov    edx,DWORD PTR [rbx+0x20]
  40c041:	sub    ecx,0x8
  40c044:	mov    eax,0xfffffffc
  40c049:	mov    DWORD PTR [rbx+0x24],ecx
  40c04c:	shr    edx,cl
  40c04e:	cmp    dl,0x59
  40c051:	jne    0x40c765
  40c057:	jmp    0x40bf5f
  40c05c:	mov    edx,DWORD PTR [rbx+0x24]
  40c05f:	mov    DWORD PTR [rbx+0x8],0xf
  40c066:	jmp    0x40c0b9
  40c068:	nop    DWORD PTR [rax+rax*1+0x0]
  40c070:	mov    rax,QWORD PTR [rbx]
  40c073:	mov    r8d,DWORD PTR [rax+0x8]
  40c077:	test   r8d,r8d
  40c07a:	je     0x40ccf0
  40c080:	mov    rcx,QWORD PTR [rax]
  40c083:	add    edx,0x8
  40c086:	sub    r8d,0x1
  40c08a:	movzx  r11d,BYTE PTR [rcx]
  40c08e:	mov    ecx,DWORD PTR [rbx+0x20]
  40c091:	mov    DWORD PTR [rbx+0x24],edx
  40c094:	shl    ecx,0x8
  40c097:	or     ecx,r11d
  40c09a:	mov    DWORD PTR [rbx+0x20],ecx
  40c09d:	mov    ecx,DWORD PTR [rax+0xc]
  40c0a0:	add    QWORD PTR [rax],0x1
  40c0a4:	mov    DWORD PTR [rax+0x8],r8d
  40c0a8:	lea    edx,[rcx+0x1]
  40c0ab:	test   edx,edx
  40c0ad:	mov    DWORD PTR [rax+0xc],edx
  40c0b0:	je     0x40ce4c
  40c0b6:	mov    edx,DWORD PTR [rbx+0x24]
  40c0b9:	cmp    edx,0x7
  40c0bc:	jle    0x40c070
  40c0be:	lea    ecx,[rdx-0x8]
  40c0c1:	mov    edx,DWORD PTR [rbx+0x20]
  40c0c4:	mov    eax,0xfffffffc
  40c0c9:	mov    DWORD PTR [rbx+0x24],ecx
  40c0cc:	shr    edx,cl
  40c0ce:	cmp    dl,0x41
  40c0d1:	jne    0x40c765
  40c0d7:	jmp    0x40bfdf
  40c0dc:	mov    edx,DWORD PTR [rbx+0x24]
  40c0df:	mov    DWORD PTR [rbx+0x8],0x2a
  40c0e6:	jmp    0x40c139
  40c0e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c0f0:	mov    rax,QWORD PTR [rbx]
  40c0f3:	mov    r8d,DWORD PTR [rax+0x8]
  40c0f7:	test   r8d,r8d
  40c0fa:	je     0x40ccf0
  40c100:	mov    rcx,QWORD PTR [rax]
  40c103:	add    edx,0x8
  40c106:	sub    r8d,0x1
  40c10a:	movzx  r11d,BYTE PTR [rcx]
  40c10e:	mov    ecx,DWORD PTR [rbx+0x20]
  40c111:	mov    DWORD PTR [rbx+0x24],edx
  40c114:	shl    ecx,0x8
  40c117:	or     ecx,r11d
  40c11a:	mov    DWORD PTR [rbx+0x20],ecx
  40c11d:	mov    ecx,DWORD PTR [rax+0xc]
  40c120:	add    QWORD PTR [rax],0x1
  40c124:	mov    DWORD PTR [rax+0x8],r8d
  40c128:	lea    edx,[rcx+0x1]
  40c12b:	test   edx,edx
  40c12d:	mov    DWORD PTR [rax+0xc],edx
  40c130:	je     0x40ce1e
  40c136:	mov    edx,DWORD PTR [rbx+0x24]
  40c139:	cmp    edx,0x7
  40c13c:	jle    0x40c0f0
  40c13e:	lea    ecx,[rdx-0x8]
  40c141:	mov    edx,DWORD PTR [rbx+0x20]
  40c144:	mov    eax,0xfffffffc
  40c149:	mov    DWORD PTR [rbx+0x24],ecx
  40c14c:	shr    edx,cl
  40c14e:	cmp    dl,0x72
  40c151:	jne    0x40c765
  40c157:	jmp    0x40c95f
  40c15c:	mov    rdx,QWORD PTR [rsp+0x78]
  40c161:	mov    ecx,edi
  40c163:	sub    ecx,DWORD PTR [rdx+rax*4]
  40c166:	movsxd rax,ecx
  40c169:	cmp    eax,0x101
  40c16e:	ja     0x40c760
  40c174:	mov    rcx,QWORD PTR [rsp+0x80]
  40c17c:	mov    r10d,DWORD PTR [rcx+rax*4]
  40c180:	cmp    r10d,r9d
  40c183:	je     0x40d185
  40c189:	cmp    r10d,0x1
  40c18d:	jbe    0x40d16f
  40c193:	cmp    DWORD PTR [rsp+0x90],r14d
  40c19b:	jle    0x40c760
  40c1a1:	lea    eax,[r10-0x1]
  40c1a5:	cmp    eax,0xf
  40c1a8:	mov    edx,eax
  40c1aa:	ja     0x40d225
  40c1b0:	movsxd r11,DWORD PTR [rbx+0x1e8c]
  40c1b7:	cmp    eax,0x3
  40c1ba:	lea    ecx,[rax+r11*1]
  40c1be:	movzx  ecx,BYTE PTR [rbx+rcx*1+0xe8c]
  40c1c6:	mov    BYTE PTR [rsp+0x98],cl
  40c1cd:	jbe    0x40c270
  40c1d3:	mov    DWORD PTR [rsp+0xa0],eax
  40c1da:	mov    DWORD PTR [rsp+0xac],eax
  40c1e1:	mov    ecx,DWORD PTR [rsp+0xa0]
  40c1e8:	sub    DWORD PTR [rsp+0xa0],0x4
  40c1f0:	lea    edx,[r11+rcx*1]
  40c1f4:	lea    ecx,[rdx-0x1]
  40c1f7:	movsxd r8,edx
  40c1fa:	movsxd rcx,ecx
  40c1fd:	movzx  eax,BYTE PTR [rbx+rcx*1+0xe8c]
  40c205:	mov    BYTE PTR [rbx+r8*1+0xe8c],al
  40c20d:	lea    r8d,[rdx-0x2]
  40c211:	movsxd r8,r8d
  40c214:	movzx  eax,BYTE PTR [rbx+r8*1+0xe8c]
  40c21d:	mov    BYTE PTR [rbx+rcx*1+0xe8c],al
  40c224:	lea    ecx,[rdx-0x3]
  40c227:	sub    edx,0x4
  40c22a:	movsxd rdx,edx
  40c22d:	movsxd rcx,ecx
  40c230:	movzx  eax,BYTE PTR [rbx+rcx*1+0xe8c]
  40c238:	mov    BYTE PTR [rbx+r8*1+0xe8c],al
  40c240:	movzx  edx,BYTE PTR [rbx+rdx*1+0xe8c]
  40c248:	mov    BYTE PTR [rbx+rcx*1+0xe8c],dl
  40c24f:	mov    ecx,DWORD PTR [rsp+0xa0]
  40c256:	cmp    ecx,0x3
  40c259:	ja     0x40c1e1
  40c25b:	lea    edx,[r10-0x5]
  40c25f:	mov    eax,DWORD PTR [rsp+0xac]
  40c266:	shr    edx,0x2
  40c269:	imul   edx,edx,0xfffffffc
  40c26c:	lea    edx,[rax+rdx*1-0x4]
  40c270:	test   edx,edx
  40c272:	je     0x40c298
  40c274:	lea    r8d,[r11-0x1]
  40c278:	lea    eax,[r8+rdx*1]
  40c27c:	mov    edx,eax
  40c27e:	movzx  ecx,BYTE PTR [rbx+rdx*1+0xe8c]
  40c286:	lea    edx,[rax+0x1]
  40c289:	sub    eax,0x1
  40c28c:	cmp    r8d,eax
  40c28f:	mov    BYTE PTR [rbx+rdx*1+0xe8c],cl
  40c296:	jne    0x40c27c
  40c298:	movzx  eax,BYTE PTR [rsp+0x98]
  40c2a0:	mov    BYTE PTR [rbx+r11*1+0xe8c],al
  40c2a8:	movzx  eax,BYTE PTR [rsp+0x98]
  40c2b0:	movsxd rcx,r14d
  40c2b3:	movzx  edx,BYTE PTR [rbx+rax*1+0xd8c]
  40c2bb:	add    DWORD PTR [rbx+rdx*4+0x44],0x1
  40c2c0:	mov    rax,rdx
  40c2c3:	cmp    BYTE PTR [rbx+0x2c],0x0
  40c2c7:	je     0x40d362
  40c2cd:	mov    rdx,QWORD PTR [rbx+0xc58]
  40c2d4:	mov    WORD PTR [rdx+rcx*2],ax
  40c2d8:	mov    eax,DWORD PTR [rsp+0x58]
  40c2dc:	add    r14d,0x1
  40c2e0:	test   eax,eax
  40c2e2:	jne    0x40c34e
  40c2e4:	add    DWORD PTR [rsp+0x48],0x1
  40c2e9:	movsxd rax,DWORD PTR [rsp+0x48]
  40c2ee:	cmp    DWORD PTR [rsp+0x54],eax
  40c2f2:	jle    0x40c760
  40c2f8:	movzx  eax,BYTE PTR [rbx+rax*1+0x1ecc]
  40c300:	mov    DWORD PTR [rsp+0x58],0x32
  40c308:	mov    esi,DWORD PTR [rbx+rax*4+0xfa0c]
  40c30f:	mov    DWORD PTR [rsp+0x94],eax
  40c316:	imul   rax,rax,0x408
  40c31d:	mov    DWORD PTR [rsp+0x8c],esi
  40c324:	lea    rsi,[rbx+rax*1+0xb17c]
  40c32c:	mov    QWORD PTR [rsp+0x70],rsi
  40c331:	lea    rsi,[rbx+rax*1+0xe1dc]
  40c339:	lea    rax,[rbx+rax*1+0xc9ac]
  40c341:	mov    QWORD PTR [rsp+0x80],rsi
  40c349:	mov    QWORD PTR [rsp+0x78],rax
  40c34e:	sub    DWORD PTR [rsp+0x58],0x1
  40c353:	mov    esi,DWORD PTR [rsp+0x8c]
  40c35a:	mov    DWORD PTR [rbx+0x8],0x28
  40c361:	jmp    0x40c3a7
  40c363:	mov    rax,QWORD PTR [rbx]
  40c366:	mov    ecx,DWORD PTR [rax+0x8]
  40c369:	test   ecx,ecx
  40c36b:	je     0x40ccf0
  40c371:	mov    rdx,QWORD PTR [rax]
  40c374:	sub    ecx,0x1
  40c377:	add    r8d,0x8
  40c37b:	movzx  r11d,BYTE PTR [rdx]
  40c37f:	mov    edx,DWORD PTR [rbx+0x20]
  40c382:	mov    DWORD PTR [rbx+0x24],r8d
  40c386:	shl    edx,0x8
  40c389:	or     edx,r11d
  40c38c:	mov    DWORD PTR [rbx+0x20],edx
  40c38f:	mov    DWORD PTR [rax+0x8],ecx
  40c392:	mov    ecx,DWORD PTR [rax+0xc]
  40c395:	add    QWORD PTR [rax],0x1
  40c399:	lea    edx,[rcx+0x1]
  40c39c:	test   edx,edx
  40c39e:	mov    DWORD PTR [rax+0xc],edx
  40c3a1:	je     0x40ce8b
  40c3a7:	mov    r8d,DWORD PTR [rbx+0x24]
  40c3ab:	cmp    esi,r8d
  40c3ae:	jg     0x40c363
  40c3b0:	mov    edx,DWORD PTR [rbx+0x20]
  40c3b3:	sub    r8d,esi
  40c3b6:	mov    eax,0x1
  40c3bb:	mov    ecx,r8d
  40c3be:	mov    DWORD PTR [rbx+0x24],r8d
  40c3c2:	shr    edx,cl
  40c3c4:	mov    ecx,esi
  40c3c6:	shl    eax,cl
  40c3c8:	lea    edi,[rax-0x1]
  40c3cb:	and    edi,edx
  40c3cd:	jmp    0x40b27f
  40c3d2:	mov    ecx,DWORD PTR [rbx+0x24]
  40c3d5:	jmp    0x40ba05
  40c3da:	mov    ecx,DWORD PTR [rbx+0x24]
  40c3dd:	jmp    0x40b979
  40c3e2:	mov    ecx,DWORD PTR [rbx+0x24]
  40c3e5:	mov    DWORD PTR [rbx+0x8],0x2e
  40c3ec:	jmp    0x40c439
  40c3ee:	xchg   ax,ax
  40c3f0:	mov    rax,QWORD PTR [rbx]
  40c3f3:	mov    r8d,DWORD PTR [rax+0x8]
  40c3f7:	test   r8d,r8d
  40c3fa:	je     0x40ccf0
  40c400:	mov    rdx,QWORD PTR [rax]
  40c403:	add    ecx,0x8
  40c406:	sub    r8d,0x1
  40c40a:	movzx  r11d,BYTE PTR [rdx]
  40c40e:	mov    edx,DWORD PTR [rbx+0x20]
  40c411:	mov    DWORD PTR [rbx+0x24],ecx
  40c414:	mov    ecx,DWORD PTR [rax+0xc]
  40c417:	shl    edx,0x8
  40c41a:	or     edx,r11d
  40c41d:	mov    DWORD PTR [rbx+0x20],edx
  40c420:	lea    edx,[rcx+0x1]
  40c423:	add    QWORD PTR [rax],0x1
  40c427:	mov    DWORD PTR [rax+0x8],r8d
  40c42b:	test   edx,edx
  40c42d:	mov    DWORD PTR [rax+0xc],edx
  40c430:	je     0x40cdde
  40c436:	mov    ecx,DWORD PTR [rbx+0x24]
  40c439:	cmp    ecx,0x7
  40c43c:	jle    0x40c3f0
  40c43e:	mov    edx,DWORD PTR [rbx+0x20]
  40c441:	sub    ecx,0x8
  40c444:	mov    eax,0xfffffffc
  40c449:	mov    DWORD PTR [rbx+0x24],ecx
  40c44c:	shr    edx,cl
  40c44e:	cmp    dl,0x90
  40c451:	jne    0x40c765
  40c457:	mov    DWORD PTR [rbx+0xc6c],0x0
  40c461:	jmp    0x40cc65
  40c466:	mov    ecx,DWORD PTR [rbx+0x24]
  40c469:	mov    DWORD PTR [rbx+0x8],0x2d
  40c470:	jmp    0x40c4bb
  40c472:	mov    rax,QWORD PTR [rbx]
  40c475:	mov    r8d,DWORD PTR [rax+0x8]
  40c479:	test   r8d,r8d
  40c47c:	je     0x40ccf0
  40c482:	mov    rdx,QWORD PTR [rax]
  40c485:	add    ecx,0x8
  40c488:	sub    r8d,0x1
  40c48c:	movzx  r11d,BYTE PTR [rdx]
  40c490:	mov    edx,DWORD PTR [rbx+0x20]
  40c493:	mov    DWORD PTR [rbx+0x24],ecx
  40c496:	mov    ecx,DWORD PTR [rax+0xc]
  40c499:	shl    edx,0x8
  40c49c:	or     edx,r11d
  40c49f:	mov    DWORD PTR [rbx+0x20],edx
  40c4a2:	lea    edx,[rcx+0x1]
  40c4a5:	add    QWORD PTR [rax],0x1
  40c4a9:	mov    DWORD PTR [rax+0x8],r8d
  40c4ad:	test   edx,edx
  40c4af:	mov    DWORD PTR [rax+0xc],edx
  40c4b2:	je     0x40cde7
  40c4b8:	mov    ecx,DWORD PTR [rbx+0x24]
  40c4bb:	cmp    ecx,0x7
  40c4be:	jle    0x40c472
  40c4c0:	mov    edx,DWORD PTR [rbx+0x20]
  40c4c3:	sub    ecx,0x8
  40c4c6:	mov    eax,0xfffffffc
  40c4cb:	mov    DWORD PTR [rbx+0x24],ecx
  40c4ce:	shr    edx,cl
  40c4d0:	cmp    dl,0x50
  40c4d3:	jne    0x40c765
  40c4d9:	jmp    0x40c3e5
  40c4de:	mov    ecx,DWORD PTR [rbx+0x24]
  40c4e1:	mov    DWORD PTR [rbx+0x8],0x32
  40c4e8:	jmp    0x40c539
  40c4ea:	nop    WORD PTR [rax+rax*1+0x0]
  40c4f0:	mov    rax,QWORD PTR [rbx]
  40c4f3:	mov    r8d,DWORD PTR [rax+0x8]
  40c4f7:	test   r8d,r8d
  40c4fa:	je     0x40ccf0
  40c500:	mov    rdx,QWORD PTR [rax]
  40c503:	add    ecx,0x8
  40c506:	sub    r8d,0x1
  40c50a:	movzx  r11d,BYTE PTR [rdx]
  40c50e:	mov    edx,DWORD PTR [rbx+0x20]
  40c511:	mov    DWORD PTR [rbx+0x24],ecx
  40c514:	mov    ecx,DWORD PTR [rax+0xc]
  40c517:	shl    edx,0x8
  40c51a:	or     edx,r11d
  40c51d:	mov    DWORD PTR [rbx+0x20],edx
  40c520:	lea    edx,[rcx+0x1]
  40c523:	add    QWORD PTR [rax],0x1
  40c527:	mov    DWORD PTR [rax+0x8],r8d
  40c52b:	test   edx,edx
  40c52d:	mov    DWORD PTR [rax+0xc],edx
  40c530:	je     0x40cd5f
  40c536:	mov    ecx,DWORD PTR [rbx+0x24]
  40c539:	cmp    ecx,0x7
  40c53c:	jle    0x40c4f0
  40c53e:	mov    eax,DWORD PTR [rbx+0x20]
  40c541:	sub    ecx,0x8
  40c544:	mov    DWORD PTR [rbx+0x8],0x1
  40c54b:	mov    DWORD PTR [rbx+0x24],ecx
  40c54e:	shr    eax,cl
  40c550:	movzx  edx,al
  40c553:	mov    eax,DWORD PTR [rbx+0xc6c]
  40c559:	shl    eax,0x8
  40c55c:	or     eax,edx
  40c55e:	mov    DWORD PTR [rbx+0xc6c],eax
  40c564:	mov    eax,0x4
  40c569:	jmp    0x40c765
  40c56e:	mov    ecx,DWORD PTR [rbx+0x24]
  40c571:	mov    DWORD PTR [rbx+0x8],0x31
  40c578:	jmp    0x40c5c9
  40c57a:	nop    WORD PTR [rax+rax*1+0x0]
  40c580:	mov    rax,QWORD PTR [rbx]
  40c583:	mov    r8d,DWORD PTR [rax+0x8]
  40c587:	test   r8d,r8d
  40c58a:	je     0x40ccf0
  40c590:	mov    rdx,QWORD PTR [rax]
  40c593:	add    ecx,0x8
  40c596:	sub    r8d,0x1
  40c59a:	movzx  r11d,BYTE PTR [rdx]
  40c59e:	mov    edx,DWORD PTR [rbx+0x20]
  40c5a1:	mov    DWORD PTR [rbx+0x24],ecx
  40c5a4:	mov    ecx,DWORD PTR [rax+0xc]
  40c5a7:	shl    edx,0x8
  40c5aa:	or     edx,r11d
  40c5ad:	mov    DWORD PTR [rbx+0x20],edx
  40c5b0:	lea    edx,[rcx+0x1]
  40c5b3:	add    QWORD PTR [rax],0x1
  40c5b7:	mov    DWORD PTR [rax+0x8],r8d
  40c5bb:	test   edx,edx
  40c5bd:	mov    DWORD PTR [rax+0xc],edx
  40c5c0:	je     0x40cd7a
  40c5c6:	mov    ecx,DWORD PTR [rbx+0x24]
  40c5c9:	cmp    ecx,0x7
  40c5cc:	jle    0x40c580
  40c5ce:	mov    eax,DWORD PTR [rbx+0x20]
  40c5d1:	sub    ecx,0x8
  40c5d4:	mov    DWORD PTR [rbx+0x24],ecx
  40c5d7:	shr    eax,cl
  40c5d9:	movzx  edx,al
  40c5dc:	mov    eax,DWORD PTR [rbx+0xc6c]
  40c5e2:	shl    eax,0x8
  40c5e5:	or     eax,edx
  40c5e7:	mov    DWORD PTR [rbx+0xc6c],eax
  40c5ed:	jmp    0x40c4e1
  40c5f2:	mov    ecx,DWORD PTR [rbx+0x24]
  40c5f5:	mov    DWORD PTR [rbx+0x8],0xd
  40c5fc:	jmp    0x40c63e
  40c5fe:	xchg   ax,ax
  40c600:	mov    edx,DWORD PTR [r11+0x8]
  40c604:	test   edx,edx
  40c606:	je     0x40ccf0
  40c60c:	mov    rax,QWORD PTR [r11]
  40c60f:	add    ecx,0x8
  40c612:	sub    edx,0x1
  40c615:	movzx  r8d,BYTE PTR [rax]
  40c619:	mov    eax,DWORD PTR [rbx+0x20]
  40c61c:	mov    DWORD PTR [rbx+0x24],ecx
  40c61f:	shl    eax,0x8
  40c622:	or     eax,r8d
  40c625:	mov    DWORD PTR [rbx+0x20],eax
  40c628:	add    QWORD PTR [r11],0x1
  40c62c:	add    DWORD PTR [r11+0xc],0x1
  40c631:	mov    DWORD PTR [r11+0x8],edx
  40c635:	je     0x40cdc2
  40c63b:	mov    ecx,DWORD PTR [rbx+0x24]
  40c63e:	cmp    ecx,0x7
  40c641:	jle    0x40c600
  40c643:	mov    eax,DWORD PTR [rbx+0x20]
  40c646:	sub    ecx,0x8
  40c649:	mov    DWORD PTR [rbx+0x24],ecx
  40c64c:	shr    eax,cl
  40c64e:	movzx  eax,al
  40c651:	lea    edx,[rax-0x31]
  40c654:	cmp    edx,0x8
  40c657:	jbe    0x40cea7
  40c65d:	mov    DWORD PTR [rbx+0x28],eax
  40c660:	mov    eax,0xfffffffb
  40c665:	jmp    0x40c765
  40c66a:	mov    ecx,DWORD PTR [rbx+0x24]
  40c66d:	mov    DWORD PTR [rbx+0x8],0xc
  40c674:	jmp    0x40c6be
  40c676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c680:	mov    edx,DWORD PTR [r11+0x8]
  40c684:	test   edx,edx
  40c686:	je     0x40ccf0
  40c68c:	mov    rax,QWORD PTR [r11]
  40c68f:	add    ecx,0x8
  40c692:	sub    edx,0x1
  40c695:	movzx  r8d,BYTE PTR [rax]
  40c699:	mov    eax,DWORD PTR [rbx+0x20]
  40c69c:	mov    DWORD PTR [rbx+0x24],ecx
  40c69f:	shl    eax,0x8
  40c6a2:	or     eax,r8d
  40c6a5:	mov    DWORD PTR [rbx+0x20],eax
  40c6a8:	add    QWORD PTR [r11],0x1
  40c6ac:	add    DWORD PTR [r11+0xc],0x1
  40c6b1:	mov    DWORD PTR [r11+0x8],edx
  40c6b5:	je     0x40ce02
  40c6bb:	mov    ecx,DWORD PTR [rbx+0x24]
  40c6be:	cmp    ecx,0x7
  40c6c1:	jle    0x40c680
  40c6c3:	mov    edx,DWORD PTR [rbx+0x20]
  40c6c6:	sub    ecx,0x8
  40c6c9:	mov    eax,0xfffffffb
  40c6ce:	mov    DWORD PTR [rbx+0x24],ecx
  40c6d1:	shr    edx,cl
  40c6d3:	cmp    dl,0x68
  40c6d6:	jne    0x40c765
  40c6dc:	jmp    0x40c5f5
  40c6e1:	mov    ecx,DWORD PTR [rbx+0x24]
  40c6e4:	mov    DWORD PTR [rbx+0x8],0x20
  40c6eb:	jmp    0x40c739
  40c6ed:	nop    DWORD PTR [rax]
  40c6f0:	mov    rax,QWORD PTR [rbx]
  40c6f3:	mov    r8d,DWORD PTR [rax+0x8]
  40c6f7:	test   r8d,r8d
  40c6fa:	je     0x40ccf0
  40c700:	mov    rdx,QWORD PTR [rax]
  40c703:	add    ecx,0x8
  40c706:	sub    r8d,0x1
  40c70a:	movzx  r11d,BYTE PTR [rdx]
  40c70e:	mov    edx,DWORD PTR [rbx+0x20]
  40c711:	mov    DWORD PTR [rbx+0x24],ecx
  40c714:	mov    ecx,DWORD PTR [rax+0xc]
  40c717:	shl    edx,0x8
  40c71a:	or     edx,r11d
  40c71d:	mov    DWORD PTR [rbx+0x20],edx
  40c720:	lea    edx,[rcx+0x1]
  40c723:	add    QWORD PTR [rax],0x1
  40c727:	mov    DWORD PTR [rax+0x8],r8d
  40c72b:	test   edx,edx
  40c72d:	mov    DWORD PTR [rax+0xc],edx
  40c730:	je     0x40ccf7
  40c736:	mov    ecx,DWORD PTR [rbx+0x24]
  40c739:	test   ecx,ecx
  40c73b:	jle    0x40c6f0
  40c73d:	mov    eax,DWORD PTR [rbx+0x20]
  40c740:	sub    ecx,0x1
  40c743:	mov    DWORD PTR [rbx+0x24],ecx
  40c746:	bt     eax,ecx
  40c749:	jae    0x40d011
  40c74f:	add    r13d,0x1
  40c753:	cmp    r13d,r12d
  40c756:	jl     0x40c6e4
  40c758:	nop    DWORD PTR [rax+rax*1+0x0]
  40c760:	mov    eax,0xfffffffc
  40c765:	mov    ecx,DWORD PTR [rsp+0x68]
  40c769:	mov    DWORD PTR [rbx+0xfa64],esi
  40c76f:	mov    esi,DWORD PTR [rsp+0x6c]
  40c773:	mov    DWORD PTR [rbx+0xfa68],edi
  40c779:	mov    edi,DWORD PTR [rsp+0x8c]
  40c780:	mov    DWORD PTR [rbx+0xfa24],ebp
  40c786:	mov    DWORD PTR [rbx+0xfa2c],ecx
  40c78c:	mov    ecx,DWORD PTR [rsp+0x60]
  40c790:	mov    DWORD PTR [rbx+0xfa6c],esi
  40c796:	mov    esi,DWORD PTR [rsp+0x94]
  40c79d:	mov    DWORD PTR [rbx+0xfa74],edi
  40c7a3:	mov    DWORD PTR [rbx+0xfa28],r13d
  40c7aa:	mov    DWORD PTR [rbx+0xfa30],ecx
  40c7b0:	mov    ecx,DWORD PTR [rsp+0x54]
  40c7b4:	mov    DWORD PTR [rbx+0xfa34],r12d
  40c7bb:	mov    DWORD PTR [rbx+0xfa3c],r9d
  40c7c2:	mov    DWORD PTR [rbx+0xfa48],r10d
  40c7c9:	mov    DWORD PTR [rbx+0xfa50],r14d
  40c7d0:	mov    DWORD PTR [rbx+0xfa38],ecx
  40c7d6:	mov    ecx,DWORD PTR [rsp+0x48]
  40c7da:	mov    DWORD PTR [rbx+0xfa54],r15d
  40c7e1:	mov    DWORD PTR [rbx+0xfa70],esi
  40c7e7:	mov    DWORD PTR [rbx+0xfa40],ecx
  40c7ed:	mov    ecx,DWORD PTR [rsp+0x58]
  40c7f1:	mov    DWORD PTR [rbx+0xfa44],ecx
  40c7f7:	mov    ecx,DWORD PTR [rsp+0x90]
  40c7fe:	mov    DWORD PTR [rbx+0xfa4c],ecx
  40c804:	mov    ecx,DWORD PTR [rsp+0x88]
  40c80b:	mov    DWORD PTR [rbx+0xfa58],ecx
  40c811:	mov    ecx,DWORD PTR [rsp+0x64]
  40c815:	mov    DWORD PTR [rbx+0xfa5c],ecx
  40c81b:	mov    ecx,DWORD PTR [rsp+0xa8]
  40c822:	mov    DWORD PTR [rbx+0xfa60],ecx
  40c828:	mov    rsi,QWORD PTR [rsp+0x70]
  40c82d:	mov    rdi,QWORD PTR [rsp+0x78]
  40c832:	mov    QWORD PTR [rbx+0xfa78],rsi
  40c839:	mov    rsi,QWORD PTR [rsp+0x80]
  40c841:	mov    QWORD PTR [rbx+0xfa80],rdi
  40c848:	mov    QWORD PTR [rbx+0xfa88],rsi
  40c84f:	add    rsp,0xc8
  40c856:	pop    rbx
  40c857:	pop    rsi
  40c858:	pop    rdi
  40c859:	pop    rbp
  40c85a:	pop    r12
  40c85c:	pop    r13
  40c85e:	pop    r14
  40c860:	pop    r15
  40c862:	ret    
  40c863:	mov    ecx,DWORD PTR [rbx+0x24]
  40c866:	mov    DWORD PTR [rbx+0x8],0x1f
  40c86d:	jmp    0x40c8b9
  40c86f:	nop
  40c870:	mov    rax,QWORD PTR [rbx]
  40c873:	mov    r8d,DWORD PTR [rax+0x8]
  40c877:	test   r8d,r8d
  40c87a:	je     0x40ccf0
  40c880:	mov    rdx,QWORD PTR [rax]
  40c883:	add    ecx,0x8
  40c886:	sub    r8d,0x1
  40c88a:	movzx  r11d,BYTE PTR [rdx]
  40c88e:	mov    edx,DWORD PTR [rbx+0x20]
  40c891:	mov    DWORD PTR [rbx+0x24],ecx
  40c894:	mov    ecx,DWORD PTR [rax+0xc]
  40c897:	shl    edx,0x8
  40c89a:	or     edx,r11d
  40c89d:	mov    DWORD PTR [rbx+0x20],edx
  40c8a0:	lea    edx,[rcx+0x1]
  40c8a3:	add    QWORD PTR [rax],0x1
  40c8a7:	mov    DWORD PTR [rax+0x8],r8d
  40c8ab:	test   edx,edx
  40c8ad:	mov    DWORD PTR [rax+0xc],edx
  40c8b0:	je     0x40cd9e
  40c8b6:	mov    ecx,DWORD PTR [rbx+0x24]
  40c8b9:	cmp    ecx,0xe
  40c8bc:	jle    0x40c870
  40c8be:	mov    eax,DWORD PTR [rbx+0x20]
  40c8c1:	sub    ecx,0xf
  40c8c4:	mov    DWORD PTR [rbx+0x24],ecx
  40c8c7:	shr    eax,cl
  40c8c9:	and    eax,0x7fff
  40c8ce:	mov    DWORD PTR [rsp+0x54],eax
  40c8d2:	je     0x40c760
  40c8d8:	xor    r13d,r13d
  40c8db:	xor    ebp,ebp
  40c8dd:	jmp    0x40c6e4
  40c8e2:	mov    ecx,DWORD PTR [rbx+0x24]
  40c8e5:	mov    DWORD PTR [rbx+0x8],0x2c
  40c8ec:	jmp    0x40c939
  40c8ee:	xchg   ax,ax
  40c8f0:	mov    rax,QWORD PTR [rbx]
  40c8f3:	mov    r8d,DWORD PTR [rax+0x8]
  40c8f7:	test   r8d,r8d
  40c8fa:	je     0x40ccf0
  40c900:	mov    rdx,QWORD PTR [rax]
  40c903:	add    ecx,0x8
  40c906:	sub    r8d,0x1
  40c90a:	movzx  r11d,BYTE PTR [rdx]
  40c90e:	mov    edx,DWORD PTR [rbx+0x20]
  40c911:	mov    DWORD PTR [rbx+0x24],ecx
  40c914:	mov    ecx,DWORD PTR [rax+0xc]
  40c917:	shl    edx,0x8
  40c91a:	or     edx,r11d
  40c91d:	mov    DWORD PTR [rbx+0x20],edx
  40c920:	lea    edx,[rcx+0x1]
  40c923:	add    QWORD PTR [rax],0x1
  40c927:	mov    DWORD PTR [rax+0x8],r8d
  40c92b:	test   edx,edx
  40c92d:	mov    DWORD PTR [rax+0xc],edx
  40c930:	je     0x40cdd5
  40c936:	mov    ecx,DWORD PTR [rbx+0x24]
  40c939:	cmp    ecx,0x7
  40c93c:	jle    0x40c8f0
  40c93e:	mov    edx,DWORD PTR [rbx+0x20]
  40c941:	sub    ecx,0x8
  40c944:	mov    eax,0xfffffffc
  40c949:	mov    DWORD PTR [rbx+0x24],ecx
  40c94c:	shr    edx,cl
  40c94e:	cmp    dl,0x38
  40c951:	jne    0x40c765
  40c957:	jmp    0x40c469
  40c95c:	mov    ecx,DWORD PTR [rbx+0x24]
  40c95f:	mov    DWORD PTR [rbx+0x8],0x2b
  40c966:	jmp    0x40c9b9
  40c968:	nop    DWORD PTR [rax+rax*1+0x0]
  40c970:	mov    rax,QWORD PTR [rbx]
  40c973:	mov    r8d,DWORD PTR [rax+0x8]
  40c977:	test   r8d,r8d
  40c97a:	je     0x40ccf0
  40c980:	mov    rdx,QWORD PTR [rax]
  40c983:	add    ecx,0x8
  40c986:	sub    r8d,0x1
  40c98a:	movzx  r11d,BYTE PTR [rdx]
  40c98e:	mov    edx,DWORD PTR [rbx+0x20]
  40c991:	mov    DWORD PTR [rbx+0x24],ecx
  40c994:	mov    ecx,DWORD PTR [rax+0xc]
  40c997:	shl    edx,0x8
  40c99a:	or     edx,r11d
  40c99d:	mov    DWORD PTR [rbx+0x20],edx
  40c9a0:	lea    edx,[rcx+0x1]
  40c9a3:	add    QWORD PTR [rax],0x1
  40c9a7:	mov    DWORD PTR [rax+0x8],r8d
  40c9ab:	test   edx,edx
  40c9ad:	mov    DWORD PTR [rax+0xc],edx
  40c9b0:	je     0x40cdf9
  40c9b6:	mov    ecx,DWORD PTR [rbx+0x24]
  40c9b9:	cmp    ecx,0x7
  40c9bc:	jle    0x40c970
  40c9be:	mov    edx,DWORD PTR [rbx+0x20]
  40c9c1:	sub    ecx,0x8
  40c9c4:	mov    eax,0xfffffffc
  40c9c9:	mov    DWORD PTR [rbx+0x24],ecx
  40c9cc:	shr    edx,cl
  40c9ce:	cmp    dl,0x45
  40c9d1:	jne    0x40c765
  40c9d7:	jmp    0x40c8e5
  40c9dc:	mov    ecx,DWORD PTR [rbx+0x24]
  40c9df:	mov    DWORD PTR [rbx+0x8],0xb
  40c9e6:	jmp    0x40ca2e
  40c9e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c9f0:	mov    edx,DWORD PTR [r11+0x8]
  40c9f4:	test   edx,edx
  40c9f6:	je     0x40ccf0
  40c9fc:	mov    rax,QWORD PTR [r11]
  40c9ff:	add    ecx,0x8
  40ca02:	sub    edx,0x1
  40ca05:	movzx  r8d,BYTE PTR [rax]
  40ca09:	mov    eax,DWORD PTR [rbx+0x20]
  40ca0c:	mov    DWORD PTR [rbx+0x24],ecx
  40ca0f:	shl    eax,0x8
  40ca12:	or     eax,r8d
  40ca15:	mov    DWORD PTR [rbx+0x20],eax
  40ca18:	add    QWORD PTR [r11],0x1
  40ca1c:	add    DWORD PTR [r11+0xc],0x1
  40ca21:	mov    DWORD PTR [r11+0x8],edx
  40ca25:	je     0x40ce42
  40ca2b:	mov    ecx,DWORD PTR [rbx+0x24]
  40ca2e:	cmp    ecx,0x7
  40ca31:	jle    0x40c9f0
  40ca33:	mov    edx,DWORD PTR [rbx+0x20]
  40ca36:	sub    ecx,0x8
  40ca39:	mov    eax,0xfffffffb
  40ca3e:	mov    DWORD PTR [rbx+0x24],ecx
  40ca41:	shr    edx,cl
  40ca43:	cmp    dl,0x5a
  40ca46:	jne    0x40c765
  40ca4c:	jmp    0x40c66d
  40ca51:	mov    DWORD PTR [rbx+0x8],0xa
  40ca58:	jmp    0x40ca9b
  40ca5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca60:	mov    edx,DWORD PTR [r11+0x8]
  40ca64:	test   edx,edx
  40ca66:	je     0x40ccf0
  40ca6c:	mov    rax,QWORD PTR [r11]
  40ca6f:	add    ecx,0x8
  40ca72:	sub    edx,0x1
  40ca75:	movzx  r8d,BYTE PTR [rax]
  40ca79:	mov    eax,DWORD PTR [rbx+0x20]
  40ca7c:	mov    DWORD PTR [rbx+0x24],ecx
  40ca7f:	shl    eax,0x8
  40ca82:	or     eax,r8d
  40ca85:	mov    DWORD PTR [rbx+0x20],eax
  40ca88:	add    QWORD PTR [r11],0x1
  40ca8c:	add    DWORD PTR [r11+0xc],0x1
  40ca91:	mov    DWORD PTR [r11+0x8],edx
  40ca95:	je     0x40ce94
  40ca9b:	mov    ecx,DWORD PTR [rbx+0x24]
  40ca9e:	cmp    ecx,0x7
  40caa1:	jle    0x40ca60
  40caa3:	mov    edx,DWORD PTR [rbx+0x20]
  40caa6:	sub    ecx,0x8
  40caa9:	mov    eax,0xfffffffb
  40caae:	mov    DWORD PTR [rbx+0x24],ecx
  40cab1:	shr    edx,cl
  40cab3:	cmp    dl,0x42
  40cab6:	jne    0x40c765
  40cabc:	jmp    0x40c9df
  40cac1:	cmp    DWORD PTR [rsp+0x88],0x1fffff
  40cacc:	jg     0x40c760
  40cad2:	test   r10d,r10d
  40cad5:	jne    0x40d37e
  40cadb:	add    r15d,DWORD PTR [rsp+0x88]
  40cae3:	shl    DWORD PTR [rsp+0x88],1
  40caea:	cmp    DWORD PTR [rsp+0x58],0x0
  40caef:	jne    0x40cb5b
  40caf1:	add    DWORD PTR [rsp+0x48],0x1
  40caf6:	movsxd rax,DWORD PTR [rsp+0x48]
  40cafb:	cmp    DWORD PTR [rsp+0x54],eax
  40caff:	jle    0x40c760
  40cb05:	movzx  eax,BYTE PTR [rbx+rax*1+0x1ecc]
  40cb0d:	mov    DWORD PTR [rsp+0x58],0x32
  40cb15:	mov    esi,DWORD PTR [rbx+rax*4+0xfa0c]
  40cb1c:	mov    DWORD PTR [rsp+0x94],eax
  40cb23:	imul   rax,rax,0x408
  40cb2a:	mov    DWORD PTR [rsp+0x8c],esi
  40cb31:	lea    rsi,[rbx+rax*1+0xb17c]
  40cb39:	mov    QWORD PTR [rsp+0x70],rsi
  40cb3e:	lea    rsi,[rbx+rax*1+0xe1dc]
  40cb46:	lea    rax,[rbx+rax*1+0xc9ac]
  40cb4e:	mov    QWORD PTR [rsp+0x80],rsi
  40cb56:	mov    QWORD PTR [rsp+0x78],rax
  40cb5b:	sub    DWORD PTR [rsp+0x58],0x1
  40cb60:	mov    esi,DWORD PTR [rsp+0x8c]
  40cb67:	mov    DWORD PTR [rbx+0x8],0x26
  40cb6e:	jmp    0x40cbb4
  40cb70:	mov    rax,QWORD PTR [rbx]
  40cb73:	mov    ecx,DWORD PTR [rax+0x8]
  40cb76:	test   ecx,ecx
  40cb78:	je     0x40ccf0
  40cb7e:	mov    rdx,QWORD PTR [rax]
  40cb81:	sub    ecx,0x1
  40cb84:	add    r8d,0x8
  40cb88:	movzx  r11d,BYTE PTR [rdx]
  40cb8c:	mov    edx,DWORD PTR [rbx+0x20]
  40cb8f:	mov    DWORD PTR [rbx+0x24],r8d
  40cb93:	shl    edx,0x8
  40cb96:	or     edx,r11d
  40cb99:	mov    DWORD PTR [rbx+0x20],edx
  40cb9c:	mov    DWORD PTR [rax+0x8],ecx
  40cb9f:	mov    ecx,DWORD PTR [rax+0xc]
  40cba2:	add    QWORD PTR [rax],0x1
  40cba6:	lea    edx,[rcx+0x1]
  40cba9:	test   edx,edx
  40cbab:	mov    DWORD PTR [rax+0xc],edx
  40cbae:	je     0x40ce9e
  40cbb4:	mov    r8d,DWORD PTR [rbx+0x24]
  40cbb8:	cmp    esi,r8d
  40cbbb:	jg     0x40cb70
  40cbbd:	mov    edx,DWORD PTR [rbx+0x20]
  40cbc0:	sub    r8d,esi
  40cbc3:	mov    eax,0x1
  40cbc8:	mov    ecx,r8d
  40cbcb:	mov    DWORD PTR [rbx+0x24],r8d
  40cbcf:	shr    edx,cl
  40cbd1:	mov    ecx,esi
  40cbd3:	shl    eax,cl
  40cbd5:	lea    edi,[rax-0x1]
  40cbd8:	and    edi,edx
  40cbda:	jmp    0x40b736
  40cbdf:	mov    ecx,DWORD PTR [rbx+0x24]
  40cbe2:	mov    DWORD PTR [rbx+0x8],0x30
  40cbe9:	jmp    0x40cc39
  40cbeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbf0:	mov    rax,QWORD PTR [rbx]
  40cbf3:	mov    r8d,DWORD PTR [rax+0x8]
  40cbf7:	test   r8d,r8d
  40cbfa:	je     0x40ccf0
  40cc00:	mov    rdx,QWORD PTR [rax]
  40cc03:	add    ecx,0x8
  40cc06:	sub    r8d,0x1
  40cc0a:	movzx  r11d,BYTE PTR [rdx]
  40cc0e:	mov    edx,DWORD PTR [rbx+0x20]
  40cc11:	mov    DWORD PTR [rbx+0x24],ecx
  40cc14:	mov    ecx,DWORD PTR [rax+0xc]
  40cc17:	shl    edx,0x8
  40cc1a:	or     edx,r11d
  40cc1d:	mov    DWORD PTR [rbx+0x20],edx
  40cc20:	lea    edx,[rcx+0x1]
  40cc23:	add    QWORD PTR [rax],0x1
  40cc27:	mov    DWORD PTR [rax+0x8],r8d
  40cc2b:	test   edx,edx
  40cc2d:	mov    DWORD PTR [rax+0xc],edx
  40cc30:	je     0x40cd8c
  40cc36:	mov    ecx,DWORD PTR [rbx+0x24]
  40cc39:	cmp    ecx,0x7
  40cc3c:	jle    0x40cbf0
  40cc3e:	mov    eax,DWORD PTR [rbx+0x20]
  40cc41:	sub    ecx,0x8
  40cc44:	mov    DWORD PTR [rbx+0x24],ecx
  40cc47:	shr    eax,cl
  40cc49:	movzx  edx,al
  40cc4c:	mov    eax,DWORD PTR [rbx+0xc6c]
  40cc52:	shl    eax,0x8
  40cc55:	or     eax,edx
  40cc57:	mov    DWORD PTR [rbx+0xc6c],eax
  40cc5d:	jmp    0x40c571
  40cc62:	mov    ecx,DWORD PTR [rbx+0x24]
  40cc65:	mov    DWORD PTR [rbx+0x8],0x2f
  40cc6c:	jmp    0x40ccb5
  40cc6e:	xchg   ax,ax
  40cc70:	mov    rax,QWORD PTR [rbx]
  40cc73:	mov    r8d,DWORD PTR [rax+0x8]
  40cc77:	test   r8d,r8d
  40cc7a:	je     0x40ccf0
  40cc7c:	mov    rdx,QWORD PTR [rax]
  40cc7f:	add    ecx,0x8
  40cc82:	sub    r8d,0x1
  40cc86:	movzx  r11d,BYTE PTR [rdx]
  40cc8a:	mov    edx,DWORD PTR [rbx+0x20]
  40cc8d:	mov    DWORD PTR [rbx+0x24],ecx
  40cc90:	mov    ecx,DWORD PTR [rax+0xc]
  40cc93:	shl    edx,0x8
  40cc96:	or     edx,r11d
  40cc99:	mov    DWORD PTR [rbx+0x20],edx
  40cc9c:	lea    edx,[rcx+0x1]
  40cc9f:	add    QWORD PTR [rax],0x1
  40cca3:	mov    DWORD PTR [rax+0x8],r8d
  40cca7:	test   edx,edx
  40cca9:	mov    DWORD PTR [rax+0xc],edx
  40ccac:	je     0x40ce15
  40ccb2:	mov    ecx,DWORD PTR [rbx+0x24]
  40ccb5:	cmp    ecx,0x7
  40ccb8:	jle    0x40cc70
  40ccba:	mov    eax,DWORD PTR [rbx+0x20]
  40ccbd:	sub    ecx,0x8
  40ccc0:	mov    DWORD PTR [rbx+0x24],ecx
  40ccc3:	shr    eax,cl
  40ccc5:	movzx  edx,al
  40ccc8:	mov    eax,DWORD PTR [rbx+0xc6c]
  40ccce:	shl    eax,0x8
  40ccd1:	or     eax,edx
  40ccd3:	mov    DWORD PTR [rbx+0xc6c],eax
  40ccd9:	jmp    0x40cbe2
  40ccde:	mov    ecx,DWORD PTR [rbx+0x24]
  40cce1:	jmp    0x40b909
  40cce6:	mov    ecx,DWORD PTR [rbx+0x24]
  40cce9:	jmp    0x40b899
  40ccee:	xchg   ax,ax
  40ccf0:	xor    eax,eax
  40ccf2:	jmp    0x40c765
  40ccf7:	add    DWORD PTR [rax+0x10],0x1
  40ccfb:	jmp    0x40c736
  40cd00:	mov    ecx,0xfa1
  40cd05:	mov    DWORD PTR [rsp+0xa0],r10d
  40cd0d:	mov    DWORD PTR [rsp+0x98],r9d
  40cd15:	call   0x404780
  40cd1a:	mov    ecx,0xfa2
  40cd1f:	call   0x404780
  40cd24:	xor    eax,eax
  40cd26:	mov    r9d,DWORD PTR [rsp+0x98]
  40cd2e:	mov    r10d,DWORD PTR [rsp+0xa0]
  40cd36:	jmp    0x40c765
  40cd3b:	add    DWORD PTR [rax+0x10],0x1
  40cd3f:	jmp    0x40b87a
  40cd44:	add    DWORD PTR [rax+0x10],0x1
  40cd48:	jmp    0x40b8e8
  40cd4d:	add    DWORD PTR [rax+0x10],0x1
  40cd51:	jmp    0x40b958
  40cd56:	add    DWORD PTR [rax+0x10],0x1
  40cd5a:	jmp    0x40b9c8
  40cd5f:	add    DWORD PTR [rax+0x10],0x1
  40cd63:	jmp    0x40c536
  40cd68:	add    DWORD PTR [rax+0x10],0x1
  40cd6c:	jmp    0x40bc58
  40cd71:	add    DWORD PTR [rax+0x10],0x1
  40cd75:	jmp    0x40be36
  40cd7a:	add    DWORD PTR [rax+0x10],0x1
  40cd7e:	jmp    0x40c5c6
  40cd83:	add    DWORD PTR [rax+0x10],0x1
  40cd87:	jmp    0x40beb6
  40cd8c:	add    DWORD PTR [rax+0x10],0x1
  40cd90:	jmp    0x40cc36
  40cd95:	add    DWORD PTR [rdx+0x10],0x1
  40cd99:	jmp    0x40b3d1
  40cd9e:	add    DWORD PTR [rax+0x10],0x1
  40cda2:	jmp    0x40c8b6
  40cda7:	add    DWORD PTR [rax+0x10],0x1
  40cdab:	jmp    0x40b236
  40cdb0:	add    DWORD PTR [rax+0x10],0x1
  40cdb4:	jmp    0x40bd56
  40cdb9:	add    DWORD PTR [rax+0x10],0x1
  40cdbd:	jmp    0x40bf36
  40cdc2:	add    DWORD PTR [r11+0x10],0x1
  40cdc7:	jmp    0x40c63b
  40cdcc:	add    DWORD PTR [rax+0x10],0x1
  40cdd0:	jmp    0x40bcd6
  40cdd5:	add    DWORD PTR [rax+0x10],0x1
  40cdd9:	jmp    0x40c936
  40cdde:	add    DWORD PTR [rax+0x10],0x1
  40cde2:	jmp    0x40c436
  40cde7:	add    DWORD PTR [rax+0x10],0x1
  40cdeb:	jmp    0x40c4b8
  40cdf0:	add    DWORD PTR [rax+0x10],0x1
  40cdf4:	jmp    0x40bfb6
  40cdf9:	add    DWORD PTR [rax+0x10],0x1
  40cdfd:	jmp    0x40c9b6
  40ce02:	add    DWORD PTR [r11+0x10],0x1
  40ce07:	jmp    0x40c6bb
  40ce0c:	add    DWORD PTR [rax+0x10],0x1
  40ce10:	jmp    0x40ba56
  40ce15:	add    DWORD PTR [rax+0x10],0x1
  40ce19:	jmp    0x40ccb2
  40ce1e:	add    DWORD PTR [rax+0x10],0x1
  40ce22:	jmp    0x40c136
  40ce27:	add    DWORD PTR [rax+0x10],0x1
  40ce2b:	jmp    0x40b378
  40ce30:	add    DWORD PTR [rax+0x10],0x1
  40ce34:	jmp    0x40b7a4
  40ce39:	add    DWORD PTR [rax+0x10],0x1
  40ce3d:	jmp    0x40c036
  40ce42:	add    DWORD PTR [r11+0x10],0x1
  40ce47:	jmp    0x40ca2b
  40ce4c:	add    DWORD PTR [rax+0x10],0x1
  40ce50:	jmp    0x40c0b6
  40ce55:	add    DWORD PTR [rdx+0x10],0x1
  40ce59:	jmp    0x40b44f
  40ce5e:	add    DWORD PTR [rax+0x10],0x1
  40ce62:	jmp    0x40b804
  40ce67:	add    DWORD PTR [rax+0x10],0x1
  40ce6b:	jmp    0x40b2e9
  40ce70:	add    DWORD PTR [rax+0x10],0x1
  40ce74:	jmp    0x40b6f4
  40ce79:	add    DWORD PTR [rax+0x10],0x1
  40ce7d:	jmp    0x40bb16
  40ce82:	add    DWORD PTR [rax+0x10],0x1
  40ce86:	jmp    0x40bbda
  40ce8b:	add    DWORD PTR [rax+0x10],0x1
  40ce8f:	jmp    0x40c3a7
  40ce94:	add    DWORD PTR [r11+0x10],0x1
  40ce99:	jmp    0x40ca9b
  40ce9e:	add    DWORD PTR [rax+0x10],0x1
  40cea2:	jmp    0x40cbb4
  40cea7:	sub    eax,0x30
  40ceaa:	cmp    BYTE PTR [rbx+0x2c],0x0
  40ceae:	mov    DWORD PTR [rbx+0x28],eax
  40ceb1:	je     0x40b19d
  40ceb7:	mov    DWORD PTR [rsp+0xac],r10d
  40cebf:	mov    DWORD PTR [rsp+0xa0],r9d
  40cec7:	mov    r8d,0x1
  40cecd:	imul   edx,eax,0x30d40
  40ced3:	mov    rcx,QWORD PTR [r11+0x48]
  40ced7:	mov    QWORD PTR [rsp+0x98],r11
  40cedf:	call   QWORD PTR [r11+0x38]
  40cee3:	imul   edx,DWORD PTR [rbx+0x28],0x186a0
  40ceea:	mov    r11,QWORD PTR [rsp+0x98]
  40cef2:	mov    QWORD PTR [rbx+0xc58],rax
  40cef9:	mov    r8d,0x1
  40ceff:	mov    rcx,QWORD PTR [r11+0x48]
  40cf03:	sar    edx,1
  40cf05:	call   QWORD PTR [r11+0x38]
  40cf09:	test   rax,rax
  40cf0c:	mov    QWORD PTR [rbx+0xc60],rax
  40cf13:	mov    r9d,DWORD PTR [rsp+0xa0]
  40cf1b:	mov    r10d,DWORD PTR [rsp+0xac]
  40cf23:	je     0x40cf33
  40cf25:	cmp    QWORD PTR [rbx+0xc58],0x0
  40cf2d:	jne    0x40b1e1
  40cf33:	mov    eax,0xfffffffd
  40cf38:	jmp    0x40c765
  40cf3d:	movsxd rax,ebp
  40cf40:	mov    BYTE PTR [rbx+rax*1+0xd7c],0x1
  40cf48:	jmp    0x40ba7a
  40cf4d:	mov    eax,DWORD PTR [rsp+0x98]
  40cf54:	add    eax,r13d
  40cf57:	cdqe   
  40cf59:	mov    BYTE PTR [rbx+rax*1+0xc7c],0x1
  40cf61:	jmp    0x40bb2f
  40cf66:	mov    rdx,QWORD PTR [rsp+0x78]
  40cf6b:	mov    ecx,edi
  40cf6d:	sub    ecx,DWORD PTR [rdx+rax*4]
  40cf70:	movsxd rax,ecx
  40cf73:	cmp    eax,0x101
  40cf78:	ja     0x40c760
  40cf7e:	mov    rcx,QWORD PTR [rsp+0x80]
  40cf86:	mov    r10d,DWORD PTR [rcx+rax*4]
  40cf8a:	cmp    r10d,0x1
  40cf8e:	jbe    0x40cac1
  40cf94:	movsxd rdx,DWORD PTR [rbx+0x1e8c]
  40cf9b:	lea    eax,[r15+0x1]
  40cf9f:	movzx  edx,BYTE PTR [rbx+rdx*1+0xe8c]
  40cfa7:	movzx  ecx,BYTE PTR [rbx+rdx*1+0xd8c]
  40cfaf:	add    DWORD PTR [rbx+rcx*4+0x44],eax
  40cfb3:	mov    rdx,rcx
  40cfb6:	cmp    BYTE PTR [rbx+0x2c],0x0
  40cfba:	jne    0x40d0e8
  40cfc0:	test   eax,eax
  40cfc2:	jle    0x40d396
  40cfc8:	mov    r11d,DWORD PTR [rsp+0x90]
  40cfd0:	cmp    r11d,r14d
  40cfd3:	jle    0x40d38e
  40cfd9:	mov    r8,QWORD PTR [rbx+0xc50]
  40cfe0:	movsxd rcx,r14d
  40cfe3:	lea    r8,[r8+rcx*4]
  40cfe7:	lea    ecx,[r14+r15*1+0x1]
  40cfec:	mov    r15d,eax
  40cfef:	sub    ecx,r11d
  40cff2:	add    r14d,0x1
  40cff6:	sub    r15d,0x1
  40cffa:	mov    DWORD PTR [r8],edx
  40cffd:	je     0x40c180
  40d003:	add    r8,0x4
  40d007:	cmp    r15d,ecx
  40d00a:	jne    0x40cff2
  40d00c:	jmp    0x40c760
  40d011:	movsxd rdx,ebp
  40d014:	mov    eax,r13d
  40d017:	add    ebp,0x1
  40d01a:	mov    BYTE PTR [rbx+rdx*1+0x651e],r13b
  40d022:	xor    r13d,r13d
  40d025:	cmp    ebp,DWORD PTR [rsp+0x54]
  40d029:	jl     0x40c6e4
  40d02f:	mov    r13d,eax
  40d032:	xor    edx,edx
  40d034:	xor    eax,eax
  40d036:	test   r12d,r12d
  40d039:	jle    0x40d052
  40d03b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d040:	mov    BYTE PTR [rsp+rax*1+0xb0],dl
  40d047:	add    edx,0x1
  40d04a:	movzx  eax,dl
  40d04d:	cmp    eax,r12d
  40d050:	jl     0x40d040
  40d052:	mov    r8d,DWORD PTR [rsp+0x54]
  40d057:	test   r8d,r8d
  40d05a:	jle    0x40d39e
  40d060:	mov    eax,DWORD PTR [rsp+0x54]
  40d064:	lea    r8,[rbx+0x651e]
  40d06b:	sub    eax,0x1
  40d06e:	lea    rbp,[rbx+rax*1+0x651f]
  40d076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d080:	movzx  eax,BYTE PTR [r8]
  40d084:	movsxd rcx,eax
  40d087:	test   al,al
  40d089:	mov    edx,eax
  40d08b:	movzx  r11d,BYTE PTR [rsp+rcx*1+0xb0]
  40d094:	jne    0x40d0a3
  40d096:	jmp    0x40d0bf
  40d098:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0a0:	movzx  eax,dl
  40d0a3:	lea    ecx,[rax-0x1]
  40d0a6:	sub    dl,0x1
  40d0a9:	cdqe   
  40d0ab:	movsxd rcx,ecx
  40d0ae:	movzx  ecx,BYTE PTR [rsp+rcx*1+0xb0]
  40d0b6:	mov    BYTE PTR [rsp+rax*1+0xb0],cl
  40d0bd:	jne    0x40d0a0
  40d0bf:	mov    BYTE PTR [r8-0x4652],r11b
  40d0c6:	add    r8,0x1
  40d0ca:	mov    BYTE PTR [rsp+0xb0],r11b
  40d0d2:	cmp    r8,rbp
  40d0d5:	jne    0x40d080
  40d0d7:	mov    ebp,DWORD PTR [rsp+0x54]
  40d0db:	mov    DWORD PTR [rsp+0x68],0x0
  40d0e3:	jmp    0x40b49c
  40d0e8:	test   eax,eax
  40d0ea:	jle    0x40d396
  40d0f0:	mov    r11d,DWORD PTR [rsp+0x90]
  40d0f8:	cmp    r11d,r14d
  40d0fb:	jle    0x40d38e
  40d101:	mov    r8,QWORD PTR [rbx+0xc58]
  40d108:	movsxd rcx,r14d
  40d10b:	lea    r8,[r8+rcx*2]
  40d10f:	lea    ecx,[r14+r15*1+0x1]
  40d114:	mov    r15d,eax
  40d117:	sub    ecx,r11d
  40d11a:	add    r14d,0x1
  40d11e:	sub    r15d,0x1
  40d122:	mov    WORD PTR [r8],dx
  40d126:	je     0x40c180
  40d12c:	add    r8,0x2
  40d130:	cmp    r15d,ecx
  40d133:	jne    0x40d11a
  40d135:	jmp    0x40c760
  40d13a:	nop    WORD PTR [rax+rax*1+0x0]
  40d140:	xor    r14d,r14d
  40d143:	mov    DWORD PTR [rsp+0x58],0x0
  40d14b:	mov    DWORD PTR [rsp+0x48],0x0
  40d153:	mov    ebp,0x100
  40d158:	mov    eax,0xfffffffc
  40d15d:	jmp    0x40c765
  40d162:	mov    DWORD PTR [rsp+0x68],0x0
  40d16a:	jmp    0x40b5bd
  40d16f:	mov    DWORD PTR [rsp+0x88],0x1
  40d17a:	mov    r15d,0xffffffff
  40d180:	jmp    0x40cad2
  40d185:	mov    eax,DWORD PTR [rbx+0x38]
  40d188:	cmp    r14d,eax
  40d18b:	jle    0x40d1b3
  40d18d:	shr    eax,0x1f
  40d190:	test   al,al
  40d192:	jne    0x40d1b3
  40d194:	xor    eax,eax
  40d196:	jmp    0x40d1a9
  40d198:	cmp    r14d,edx
  40d19b:	jl     0x40d1b3
  40d19d:	add    rax,0x1
  40d1a1:	cmp    rax,0x100
  40d1a7:	je     0x40d1bb
  40d1a9:	mov    edx,DWORD PTR [rbx+rax*4+0x44]
  40d1ad:	mov    ebp,eax
  40d1af:	test   edx,edx
  40d1b1:	jns    0x40d198
  40d1b3:	mov    r9d,r10d
  40d1b6:	jmp    0x40c760
  40d1bb:	lea    rax,[rbx+0x44]
  40d1bf:	lea    rdx,[rbx+0x444]
  40d1c6:	mov    DWORD PTR [rbx+0x448],0x0
  40d1d0:	mov    ecx,DWORD PTR [rax]
  40d1d2:	add    rax,0x4
  40d1d6:	mov    DWORD PTR [rax+0x404],ecx
  40d1dc:	cmp    rax,rdx
  40d1df:	jne    0x40d1d0
  40d1e1:	lea    rax,[rbx+0x44c]
  40d1e8:	lea    rdx,[rbx+0x84c]
  40d1ef:	mov    ecx,DWORD PTR [rax-0x4]
  40d1f2:	add    DWORD PTR [rax],ecx
  40d1f4:	add    rax,0x4
  40d1f8:	cmp    rax,rdx
  40d1fb:	jne    0x40d1ef
  40d1fd:	xor    eax,eax
  40d1ff:	jmp    0x40d216
  40d201:	cmp    r14d,edx
  40d204:	jl     0x40d1b3
  40d206:	add    rax,0x1
  40d20a:	cmp    rax,0x101
  40d210:	je     0x40d3a5
  40d216:	mov    edx,DWORD PTR [rbx+rax*4+0x448]
  40d21d:	mov    ebp,eax
  40d21f:	test   edx,edx
  40d221:	jns    0x40d201
  40d223:	jmp    0x40d1b3
  40d225:	mov    r11d,eax
  40d228:	and    eax,0xf
  40d22b:	shr    r11d,0x4
  40d22f:	mov    edx,r11d
  40d232:	lea    rcx,[rbx+rdx*4]
  40d236:	mov    edx,DWORD PTR [rcx+0x1e8c]
  40d23c:	mov    QWORD PTR [rsp+0xa0],rcx
  40d244:	add    eax,edx
  40d246:	movsxd r8,eax
  40d249:	cmp    edx,eax
  40d24b:	movzx  ecx,BYTE PTR [rbx+r8*1+0xe8c]
  40d254:	mov    BYTE PTR [rsp+0x98],cl
  40d25b:	jge    0x40d296
  40d25d:	mov    DWORD PTR [rsp+0xac],r9d
  40d265:	jmp    0x40d273
  40d267:	nop    WORD PTR [rax+rax*1+0x0]
  40d270:	mov    r8,rcx
  40d273:	sub    eax,0x1
  40d276:	movsxd rcx,eax
  40d279:	cmp    eax,edx
  40d27b:	movzx  r9d,BYTE PTR [rbx+rcx*1+0xe8c]
  40d284:	mov    BYTE PTR [rbx+r8*1+0xe8c],r9b
  40d28c:	jne    0x40d270
  40d28e:	mov    r9d,DWORD PTR [rsp+0xac]
  40d296:	mov    rax,QWORD PTR [rsp+0xa0]
  40d29e:	add    edx,0x1
  40d2a1:	mov    DWORD PTR [rax+0x1e8c],edx
  40d2a7:	lea    eax,[rdx-0x1]
  40d2aa:	movsxd rdx,r11d
  40d2ad:	sub    r11d,0x1
  40d2b1:	lea    rdx,[rbx+rdx*4]
  40d2b5:	mov    DWORD PTR [rdx+0x1e8c],eax
  40d2bb:	mov    edx,DWORD PTR [rdx+0x1e88]
  40d2c1:	cdqe   
  40d2c3:	lea    ecx,[rdx+0xf]
  40d2c6:	movsxd rcx,ecx
  40d2c9:	movzx  ecx,BYTE PTR [rbx+rcx*1+0xe8c]
  40d2d1:	mov    BYTE PTR [rbx+rax*1+0xe8c],cl
  40d2d8:	jne    0x40d2a7
  40d2da:	mov    eax,DWORD PTR [rbx+0x1e8c]
  40d2e0:	movzx  ecx,BYTE PTR [rsp+0x98]
  40d2e8:	sub    eax,0x1
  40d2eb:	movsxd rdx,eax
  40d2ee:	test   eax,eax
  40d2f0:	mov    DWORD PTR [rbx+0x1e8c],eax
  40d2f6:	mov    BYTE PTR [rbx+rdx*1+0xe8c],cl
  40d2fd:	jne    0x40c2a8
  40d303:	lea    r11,[rbx+0x1ec8]
  40d30a:	mov    ax,0xfff
  40d30e:	mov    DWORD PTR [rsp+0xa0],ebp
  40d315:	mov    r8d,0xf
  40d31b:	lea    ebp,[rax-0x10]
  40d31e:	sub    r8d,eax
  40d321:	add    r8d,DWORD PTR [r11]
  40d324:	lea    edx,[r8+rax*1]
  40d328:	movsxd rdx,edx
  40d32b:	movzx  ecx,BYTE PTR [rbx+rdx*1+0xe8c]
  40d333:	movsxd rdx,eax
  40d336:	sub    eax,0x1
  40d339:	cmp    eax,ebp
  40d33b:	mov    BYTE PTR [rbx+rdx*1+0xe8c],cl
  40d342:	jne    0x40d324
  40d344:	lea    edx,[rax+0x1]
  40d347:	sub    r11,0x4
  40d34b:	mov    DWORD PTR [r11+0x4],edx
  40d34f:	cmp    eax,0xeff
  40d354:	jne    0x40d315
  40d356:	mov    ebp,DWORD PTR [rsp+0xa0]
  40d35d:	jmp    0x40c2a8
  40d362:	mov    rdx,QWORD PTR [rbx+0xc50]
  40d369:	mov    DWORD PTR [rdx+rcx*4],eax
  40d36c:	jmp    0x40c2d8
  40d371:	xor    r8d,r8d
  40d374:	mov    edi,0x20
  40d379:	jmp    0x40b558
  40d37e:	mov    eax,DWORD PTR [rsp+0x88]
  40d385:	lea    r15d,[r15+rax*2]
  40d389:	jmp    0x40cae3
  40d38e:	mov    r15d,eax
  40d391:	jmp    0x40c760
  40d396:	mov    r15d,eax
  40d399:	jmp    0x40c180
  40d39e:	xor    ebp,ebp
  40d3a0:	jmp    0x40d0db
  40d3a5:	xor    ax,ax
  40d3a8:	mov    ecx,DWORD PTR [rbx+rax*4+0x44c]
  40d3af:	cmp    DWORD PTR [rbx+rax*4+0x448],ecx
  40d3b6:	lea    ebp,[rax+0x1]
  40d3b9:	jg     0x40d1b3
  40d3bf:	add    rax,0x1
  40d3c3:	cmp    rax,0x100
  40d3c9:	jne    0x40d3a8
  40d3cb:	cmp    DWORD PTR [rbx+0x34],0x1
  40d3cf:	mov    DWORD PTR [rbx+0x10],0x0
  40d3d6:	mov    BYTE PTR [rbx+0xc],0x0
  40d3da:	mov    DWORD PTR [rbx+0xc70],0xffffffff
  40d3e4:	mov    DWORD PTR [rbx+0x8],0x2
  40d3eb:	jle    0x40d41e
  40d3ed:	mov    DWORD PTR [rsp+0x98],r10d
  40d3f5:	call   QWORD PTR [rip+0xef89]        # 0x41c384
  40d3fb:	lea    rcx,[rip+0x9182]        # 0x416584
  40d402:	lea    r9,[rax+0x60]
  40d406:	mov    r8d,0x6
  40d40c:	mov    edx,0x1
  40d411:	call   0x411290
  40d416:	mov    r10d,DWORD PTR [rsp+0x98]
  40d41e:	cmp    BYTE PTR [rbx+0x2c],0x0
  40d422:	je     0x40d53f
  40d428:	xor    eax,eax
  40d42a:	mov    edx,DWORD PTR [rbx+rax*1+0x448]
  40d431:	mov    DWORD PTR [rbx+rax*1+0x84c],edx
  40d438:	add    rax,0x4
  40d43c:	cmp    rax,0x404
  40d442:	jne    0x40d42a
  40d444:	xor    edx,edx
  40d446:	mov    rax,QWORD PTR [rbx+0xc58]
  40d44d:	lea    rcx,[rax+rdx*2]
  40d451:	movzx  eax,BYTE PTR [rcx]
  40d454:	lea    r8,[rbx+rax*4]
  40d458:	mov    eax,DWORD PTR [r8+0x84c]
  40d45f:	mov    WORD PTR [rcx],ax
  40d462:	mov    ecx,edx
  40d464:	sar    eax,0x10
  40d467:	sar    ecx,1
  40d469:	movsxd rcx,ecx
  40d46c:	add    rcx,QWORD PTR [rbx+0xc60]
  40d473:	test   dl,0x1
  40d476:	jne    0x40d602
  40d47c:	movzx  r9d,BYTE PTR [rcx]
  40d480:	and    r9d,0xfffffff0
  40d484:	or     eax,r9d
  40d487:	mov    BYTE PTR [rcx],al
  40d489:	add    rdx,0x1
  40d48d:	add    DWORD PTR [r8+0x84c],0x1
  40d495:	cmp    r14d,edx
  40d498:	jg     0x40d446
  40d49a:	movsxd r8,DWORD PTR [rbx+0x38]
  40d49e:	mov    rax,QWORD PTR [rbx+0xc60]
  40d4a5:	mov    edx,r8d
  40d4a8:	lea    ecx,[r8*4+0x0]
  40d4b0:	mov    r9,r8
  40d4b3:	sar    edx,1
  40d4b5:	movsxd rdx,edx
  40d4b8:	and    ecx,0x4
  40d4bb:	movzx  edx,BYTE PTR [rax+rdx*1]
  40d4bf:	shr    edx,cl
  40d4c1:	mov    rcx,QWORD PTR [rbx+0xc58]
  40d4c8:	and    edx,0xf
  40d4cb:	shl    edx,0x10
  40d4ce:	movzx  ebp,WORD PTR [rcx+r8*2]
  40d4d3:	or     ebp,edx
  40d4d5:	movsxd rdx,ebp
  40d4d8:	lea    r8,[rcx+rdx*2]
  40d4dc:	mov    edx,ebp
  40d4de:	lea    ecx,[rbp*4+0x0]
  40d4e5:	sar    edx,1
  40d4e7:	movsxd rdx,edx
  40d4ea:	and    ecx,0x4
  40d4ed:	add    rax,rdx
  40d4f0:	movzx  edx,BYTE PTR [rax]
  40d4f3:	shr    edx,cl
  40d4f5:	movzx  ecx,WORD PTR [r8]
  40d4f9:	mov    WORD PTR [r8],r9w
  40d4fd:	and    edx,0xf
  40d500:	shl    edx,0x10
  40d503:	or     edx,ecx
  40d505:	test   bpl,0x1
  40d509:	mov    r13d,edx
  40d50c:	jne    0x40d651
  40d512:	movzx  ecx,BYTE PTR [rax]
  40d515:	sar    r9d,0x10
  40d519:	and    ecx,0xfffffff0
  40d51c:	or     ecx,r9d
  40d51f:	mov    BYTE PTR [rax],cl
  40d521:	cmp    ebp,DWORD PTR [rbx+0x38]
  40d524:	mov    r9d,ebp
  40d527:	je     0x40d617
  40d52d:	mov    ebp,edx
  40d52f:	mov    rcx,QWORD PTR [rbx+0xc58]
  40d536:	mov    rax,QWORD PTR [rbx+0xc60]
  40d53d:	jmp    0x40d4d5
  40d53f:	mov    rdx,QWORD PTR [rbx+0xc50]
  40d546:	xor    eax,eax
  40d548:	movzx  ecx,BYTE PTR [rdx+rax*4]
  40d54c:	mov    r9d,eax
  40d54f:	add    rax,0x1
  40d553:	shl    r9d,0x8
  40d557:	lea    rcx,[rbx+rcx*4]
  40d55b:	movsxd r8,DWORD PTR [rcx+0x448]
  40d562:	or     DWORD PTR [rdx+r8*4],r9d
  40d566:	add    DWORD PTR [rcx+0x448],0x1
  40d56d:	cmp    r14d,eax
  40d570:	jg     0x40d548
  40d572:	movsxd rax,DWORD PTR [rbx+0x38]
  40d576:	test   r14d,r14d
  40d579:	mov    ebp,0x1
  40d57e:	cmovg  ebp,r14d
  40d582:	mov    eax,DWORD PTR [rdx+rax*4]
  40d585:	mov    DWORD PTR [rbx+0x444],0x0
  40d58f:	shr    eax,0x8
  40d592:	cmp    BYTE PTR [rbx+0x14],0x0
  40d596:	mov    DWORD PTR [rbx+0x3c],eax
  40d599:	je     0x40d66c
  40d59f:	imul   ecx,DWORD PTR [rbx+0x28],0x186a0
  40d5a6:	mov    DWORD PTR [rbx+0x18],0x0
  40d5ad:	mov    DWORD PTR [rbx+0x1c],0x0
  40d5b4:	cmp    eax,ecx
  40d5b6:	jae    0x40d647
  40d5bc:	mov    eax,DWORD PTR [rdx+rax*4]
  40d5bf:	mov    DWORD PTR [rbx+0x444],0x1
  40d5c9:	mov    edx,eax
  40d5cb:	movzx  eax,al
  40d5ce:	shr    edx,0x8
  40d5d1:	mov    DWORD PTR [rbx+0x3c],edx
  40d5d4:	mov    rdx,QWORD PTR [rip+0x9495]        # 0x416a70
  40d5db:	mov    edx,DWORD PTR [rdx]
  40d5dd:	mov    DWORD PTR [rbx+0x1c],0x1
  40d5e4:	sub    edx,0x1
  40d5e7:	mov    DWORD PTR [rbx+0x18],edx
  40d5ea:	sub    edx,0x1
  40d5ed:	mov    r9d,r10d
  40d5f0:	sete   dl
  40d5f3:	movzx  edx,dl
  40d5f6:	xor    eax,edx
  40d5f8:	mov    DWORD PTR [rbx+0x40],eax
  40d5fb:	xor    eax,eax
  40d5fd:	jmp    0x40c765
  40d602:	movzx  r9d,BYTE PTR [rcx]
  40d606:	shl    eax,0x4
  40d609:	and    r9d,0xf
  40d60d:	or     eax,r9d
  40d610:	mov    BYTE PTR [rcx],al
  40d612:	jmp    0x40d489
  40d617:	cmp    BYTE PTR [rbx+0x14],0x0
  40d61b:	mov    DWORD PTR [rbx+0x3c],ebp
  40d61e:	mov    DWORD PTR [rbx+0x444],0x0
  40d628:	je     0x40d739
  40d62e:	imul   eax,DWORD PTR [rbx+0x28],0x186a0
  40d635:	mov    DWORD PTR [rbx+0x18],0x0
  40d63c:	mov    DWORD PTR [rbx+0x1c],0x0
  40d643:	cmp    ebp,eax
  40d645:	jb     0x40d69a
  40d647:	mov    eax,0x1
  40d64c:	jmp    0x40c84f
  40d651:	movzx  r8d,BYTE PTR [rax]
  40d655:	mov    ecx,r9d
  40d658:	sar    ecx,0x10
  40d65b:	shl    ecx,0x4
  40d65e:	and    r8d,0xf
  40d662:	or     ecx,r8d
  40d665:	mov    BYTE PTR [rax],cl
  40d667:	jmp    0x40d521
  40d66c:	imul   ecx,DWORD PTR [rbx+0x28],0x186a0
  40d673:	cmp    eax,ecx
  40d675:	jae    0x40d647
  40d677:	mov    eax,DWORD PTR [rdx+rax*4]
  40d67a:	mov    r9d,r10d
  40d67d:	mov    DWORD PTR [rbx+0x444],0x1
  40d687:	movzx  edx,al
  40d68a:	shr    eax,0x8
  40d68d:	mov    DWORD PTR [rbx+0x3c],eax
  40d690:	mov    DWORD PTR [rbx+0x40],edx
  40d693:	xor    eax,eax
  40d695:	jmp    0x40c765
  40d69a:	lea    rdx,[rbx+0x448]
  40d6a1:	mov    ecx,ebp
  40d6a3:	mov    DWORD PTR [rsp+0x98],r10d
  40d6ab:	call   0x404d30
  40d6b0:	mov    edx,DWORD PTR [rbx+0x3c]
  40d6b3:	mov    r8,QWORD PTR [rbx+0xc60]
  40d6ba:	mov    DWORD PTR [rbx+0x40],eax
  40d6bd:	mov    r10d,DWORD PTR [rsp+0x98]
  40d6c5:	mov    ecx,edx
  40d6c7:	shr    ecx,1
  40d6c9:	movzx  r8d,BYTE PTR [r8+rcx*1]
  40d6ce:	lea    ecx,[rdx*4+0x0]
  40d6d5:	and    ecx,0x4
  40d6d8:	shr    r8d,cl
  40d6db:	mov    ecx,r8d
  40d6de:	mov    r8,QWORD PTR [rbx+0xc58]
  40d6e5:	and    ecx,0xf
  40d6e8:	shl    ecx,0x10
  40d6eb:	movzx  edx,WORD PTR [r8+rdx*2]
  40d6f0:	add    DWORD PTR [rbx+0x444],0x1
  40d6f7:	or     ecx,edx
  40d6f9:	cmp    DWORD PTR [rbx+0x18],0x0
  40d6fd:	mov    DWORD PTR [rbx+0x3c],ecx
  40d700:	jne    0x40d72b
  40d702:	movsxd r8,DWORD PTR [rbx+0x1c]
  40d706:	mov    rcx,QWORD PTR [rip+0x9363]        # 0x416a70
  40d70d:	mov    ecx,DWORD PTR [rcx+r8*4]
  40d711:	mov    rdx,r8
  40d714:	add    edx,0x1
  40d717:	cmp    edx,0x200
  40d71d:	mov    DWORD PTR [rbx+0x18],ecx
  40d720:	mov    ecx,0x0
  40d725:	cmove  edx,ecx
  40d728:	mov    DWORD PTR [rbx+0x1c],edx
  40d72b:	mov    ecx,DWORD PTR [rbx+0x18]
  40d72e:	lea    edx,[rcx-0x1]
  40d731:	mov    DWORD PTR [rbx+0x18],edx
  40d734:	jmp    0x40d5ea
  40d739:	imul   eax,DWORD PTR [rbx+0x28],0x186a0
  40d740:	cmp    ebp,eax
  40d742:	jae    0x40d647
  40d748:	lea    rdx,[rbx+0x448]
  40d74f:	mov    ecx,ebp
  40d751:	mov    DWORD PTR [rsp+0x98],r10d
  40d759:	call   0x404d30
  40d75e:	mov    edx,DWORD PTR [rbx+0x3c]
  40d761:	mov    rcx,QWORD PTR [rbx+0xc60]
  40d768:	mov    DWORD PTR [rbx+0x40],eax
  40d76b:	mov    r10d,DWORD PTR [rsp+0x98]
  40d773:	mov    eax,edx
  40d775:	mov    r9d,r10d
  40d778:	shr    eax,1
  40d77a:	movzx  eax,BYTE PTR [rcx+rax*1]
  40d77e:	lea    ecx,[rdx*4+0x0]
  40d785:	and    ecx,0x4
  40d788:	shr    eax,cl
  40d78a:	mov    rcx,QWORD PTR [rbx+0xc58]
  40d791:	and    eax,0xf
  40d794:	shl    eax,0x10
  40d797:	movzx  edx,WORD PTR [rcx+rdx*2]
  40d79b:	add    DWORD PTR [rbx+0x444],0x1
  40d7a2:	or     eax,edx
  40d7a4:	mov    DWORD PTR [rbx+0x3c],eax
  40d7a7:	xor    eax,eax
  40d7a9:	jmp    0x40c765
  40d7ae:	nop
  40d7af:	nop
  40d7b0:	push   r15
  40d7b2:	push   r14
  40d7b4:	push   r13
  40d7b6:	push   r12
  40d7b8:	push   rbp
  40d7b9:	push   rdi
  40d7ba:	push   rsi
  40d7bb:	push   rbx
  40d7bc:	sub    rsp,0xba8
  40d7c3:	mov    eax,DWORD PTR [rsp+0xc10]
  40d7ca:	mov    r13,rcx
  40d7cd:	mov    r12,rdx
  40d7d0:	mov    r15,r8
  40d7d3:	mov    DWORD PTR [rsp+0x3c],r9d
  40d7d8:	cmp    eax,0x3
  40d7db:	mov    DWORD PTR [rsp+0x5c],eax
  40d7df:	jle    0x40d802
  40d7e1:	call   QWORD PTR [rip+0xeb9d]        # 0x41c384
  40d7e7:	lea    rcx,[rip+0x8e52]        # 0x416640
  40d7ee:	lea    r9,[rax+0x60]
  40d7f2:	mov    r8d,0x1b
  40d7f8:	mov    edx,0x1
  40d7fd:	call   0x411290
  40d802:	lea    rdx,[rsp+0x790]
  40d80a:	lea    rcx,[rdx+0x404]
  40d811:	mov    r8,rdx
  40d814:	mov    rax,rdx
  40d817:	mov    DWORD PTR [rax],0x0
  40d81d:	add    rax,0x4
  40d821:	cmp    rax,rcx
  40d824:	jne    0x40d817
  40d826:	mov    esi,DWORD PTR [rsp+0x3c]
  40d82a:	test   esi,esi
  40d82c:	jle    0x40d850
  40d82e:	lea    r9d,[rsi-0x1]
  40d832:	mov    rax,r12
  40d835:	lea    r10,[r12+r9*1+0x1]
  40d83a:	movzx  r9d,BYTE PTR [rax]
  40d83e:	add    rax,0x1
  40d842:	add    DWORD PTR [rsp+r9*4+0x790],0x1
  40d84b:	cmp    rax,r10
  40d84e:	jne    0x40d83a
  40d850:	lea    r10,[rsp+0x390]
  40d858:	xor    eax,eax
  40d85a:	mov    r9d,DWORD PTR [rdx+rax*1]
  40d85e:	mov    DWORD PTR [r10+rax*1],r9d
  40d862:	add    rax,0x4
  40d866:	cmp    rax,0x400
  40d86c:	jne    0x40d85a
  40d86e:	lea    rax,[rdx+0x4]
  40d872:	mov    r9d,DWORD PTR [rax-0x4]
  40d876:	add    DWORD PTR [rax],r9d
  40d879:	add    rax,0x4
  40d87d:	cmp    rax,rcx
  40d880:	jne    0x40d872
  40d882:	mov    r9d,DWORD PTR [rsp+0x3c]
  40d887:	xor    ecx,ecx
  40d889:	test   r9d,r9d
  40d88c:	jle    0x40d8b7
  40d88e:	movzx  r9d,BYTE PTR [r12+rcx*1]
  40d893:	mov    eax,DWORD PTR [rsp+r9*4+0x790]
  40d89b:	sub    eax,0x1
  40d89e:	mov    DWORD PTR [rsp+r9*4+0x790],eax
  40d8a6:	cdqe   
  40d8a8:	mov    DWORD PTR [r13+rax*4+0x0],ecx
  40d8ad:	add    rcx,0x1
  40d8b1:	cmp    DWORD PTR [rsp+0x3c],ecx
  40d8b5:	jg     0x40d88e
  40d8b7:	mov    esi,DWORD PTR [rsp+0x3c]
  40d8bb:	mov    eax,esi
  40d8bd:	add    eax,0x1f
  40d8c0:	test   esi,esi
  40d8c2:	cmovns eax,esi
  40d8c5:	sar    eax,0x5
  40d8c8:	cmp    eax,0xffffffff
  40d8cb:	jl     0x40d8e7
  40d8cd:	add    eax,0x1
  40d8d0:	mov    rcx,r15
  40d8d3:	lea    rax,[r15+rax*4+0x4]
  40d8d8:	mov    DWORD PTR [rcx],0x0
  40d8de:	add    rcx,0x4
  40d8e2:	cmp    rcx,rax
  40d8e5:	jne    0x40d8d8
  40d8e7:	add    rdx,0x400
  40d8ee:	mov    r9d,0x1
  40d8f4:	mov    ecx,DWORD PTR [r8]
  40d8f7:	mov    esi,r9d
  40d8fa:	add    r8,0x4
  40d8fe:	mov    eax,ecx
  40d900:	shl    esi,cl
  40d902:	sar    eax,0x5
  40d905:	cdqe   
  40d907:	or     DWORD PTR [r15+rax*4],esi
  40d90b:	cmp    r8,rdx
  40d90e:	jne    0x40d8f4
  40d910:	mov    eax,DWORD PTR [rsp+0x3c]
  40d914:	mov    r8d,0x1
  40d91a:	lea    r9d,[rax+0x40]
  40d91e:	mov    ecx,eax
  40d920:	mov    edx,eax
  40d922:	mov    esi,r8d
  40d925:	shl    esi,cl
  40d927:	sar    edx,0x5
  40d92a:	lea    ecx,[rax+0x1]
  40d92d:	movsxd rdx,edx
  40d930:	add    eax,0x2
  40d933:	or     DWORD PTR [r15+rdx*4],esi
  40d937:	mov    edx,ecx
  40d939:	mov    esi,r8d
  40d93c:	sar    edx,0x5
  40d93f:	shl    esi,cl
  40d941:	movsxd rdx,edx
  40d944:	mov    ecx,esi
  40d946:	not    ecx
  40d948:	and    DWORD PTR [r15+rdx*4],ecx
  40d94c:	cmp    eax,r9d
  40d94f:	jne    0x40d91e
  40d951:	mov    rax,QWORD PTR [rip+0xea2c]        # 0x41c384
  40d958:	mov    DWORD PTR [rsp+0x54],0x1
  40d960:	mov    QWORD PTR [rsp+0x60],rax
  40d965:	cmp    DWORD PTR [rsp+0x5c],0x3
  40d96a:	jle    0x40d987
  40d96c:	call   QWORD PTR [rip+0xea12]        # 0x41c384
  40d972:	mov    r8d,DWORD PTR [rsp+0x54]
  40d977:	lea    rcx,[rax+0x60]
  40d97b:	lea    rdx,[rip+0x8cda]        # 0x41665c
  40d982:	call   0x4112b0
  40d987:	mov    r8d,DWORD PTR [rsp+0x3c]
  40d98c:	xor    ecx,ecx
  40d98e:	xor    edx,edx
  40d990:	mov    r9d,0x1
  40d996:	test   r8d,r8d
  40d999:	jle    0x40d9d6
  40d99b:	mov    r8d,DWORD PTR [rsp+0x3c]
  40d9a0:	mov    eax,ecx
  40d9a2:	mov    r10d,r9d
  40d9a5:	sar    eax,0x5
  40d9a8:	shl    r10d,cl
  40d9ab:	cdqe   
  40d9ad:	test   DWORD PTR [r15+rax*4],r10d
  40d9b1:	mov    eax,DWORD PTR [r13+rcx*4+0x0]
  40d9b6:	cmovne edx,ecx
  40d9b9:	sub    eax,DWORD PTR [rsp+0x54]
  40d9bd:	lea    r10d,[rax+r8*1]
  40d9c1:	test   eax,eax
  40d9c3:	cmovs  eax,r10d
  40d9c7:	add    rcx,0x1
  40d9cb:	cdqe   
  40d9cd:	cmp    r8d,ecx
  40d9d0:	mov    DWORD PTR [r12+rax*4],edx
  40d9d4:	jg     0x40d9a0
  40d9d6:	mov    DWORD PTR [rsp+0x58],0x0
  40d9de:	xor    eax,eax
  40d9e0:	jmp    0x40d9ed
  40d9e2:	test   ecx,ecx
  40d9e4:	je     0x40dcdf
  40d9ea:	add    eax,0x1
  40d9ed:	mov    edx,eax
  40d9ef:	mov    ecx,eax
  40d9f1:	mov    r8d,0x1
  40d9f7:	sar    edx,0x5
  40d9fa:	and    ecx,0x1f
  40d9fd:	movsxd rdx,edx
  40da00:	shl    r8d,cl
  40da03:	mov    edx,DWORD PTR [r15+rdx*4]
  40da07:	test   edx,r8d
  40da0a:	jne    0x40d9e2
  40da0c:	lea    esi,[rax-0x1]
  40da0f:	cmp    DWORD PTR [rsp+0x3c],esi
  40da13:	mov    DWORD PTR [rsp+0x4c],esi
  40da17:	jle    0x40dfbd
  40da1d:	mov    edx,eax
  40da1f:	mov    ecx,eax
  40da21:	mov    r8d,0x1
  40da27:	sar    edx,0x5
  40da2a:	and    ecx,0x1f
  40da2d:	movsxd rdx,edx
  40da30:	shl    r8d,cl
  40da33:	mov    edx,DWORD PTR [r15+rdx*4]
  40da37:	test   edx,r8d
  40da3a:	je     0x40da63
  40da3c:	jmp    0x40e090
  40da41:	add    eax,0x1
  40da44:	mov    r8d,0x1
  40da4a:	mov    edx,eax
  40da4c:	mov    ecx,eax
  40da4e:	sar    edx,0x5
  40da51:	and    ecx,0x1f
  40da54:	movsxd rdx,edx
  40da57:	shl    r8d,cl
  40da5a:	mov    edx,DWORD PTR [r15+rdx*4]
  40da5e:	test   edx,r8d
  40da61:	jne    0x40daab
  40da63:	test   ecx,ecx
  40da65:	jne    0x40da41
  40da67:	test   edx,edx
  40da69:	jne    0x40da83
  40da6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40da70:	add    eax,0x20
  40da73:	mov    edx,eax
  40da75:	sar    edx,0x5
  40da78:	movsxd rdx,edx
  40da7b:	mov    edx,DWORD PTR [r15+rdx*4]
  40da7f:	test   edx,edx
  40da81:	je     0x40da70
  40da83:	mov    esi,0x1
  40da88:	mov    ecx,eax
  40da8a:	shl    esi,cl
  40da8c:	test   esi,edx
  40da8e:	jne    0x40daab
  40da90:	mov    ecx,eax
  40da92:	add    ecx,0x1
  40da95:	mov    edx,0x1
  40da9a:	mov    eax,ecx
  40da9c:	shl    edx,cl
  40da9e:	sar    eax,0x5
  40daa1:	cdqe   
  40daa3:	test   DWORD PTR [r15+rax*4],edx
  40daa7:	je     0x40da92
  40daa9:	mov    eax,ecx
  40daab:	sub    eax,0x1
  40daae:	mov    DWORD PTR [rsp+0x50],eax
  40dab2:	mov    eax,DWORD PTR [rsp+0x50]
  40dab6:	cmp    DWORD PTR [rsp+0x3c],eax
  40daba:	jle    0x40dfbd
  40dac0:	mov    esi,eax
  40dac2:	add    eax,0x1
  40dac5:	cmp    DWORD PTR [rsp+0x4c],esi
  40dac9:	jge    0x40d9ed
  40dacf:	mov    edi,DWORD PTR [rsp+0x4c]
  40dad3:	mov    ebx,DWORD PTR [rsp+0x58]
  40dad7:	mov    eax,esi
  40dad9:	mov    DWORD PTR [rsp+0x200],esi
  40dae0:	mov    DWORD PTR [rsp+0x48],0x0
  40dae8:	mov    DWORD PTR [rsp+0x38],0x1
  40daf0:	mov    QWORD PTR [rsp+0x68],r15
  40daf5:	sub    eax,edi
  40daf7:	mov    DWORD PTR [rsp+0x70],edi
  40dafb:	lea    eax,[rbx+rax*1+0x1]
  40daff:	mov    ebx,edi
  40db01:	mov    edi,esi
  40db03:	mov    ebp,ebx
  40db05:	mov    DWORD PTR [rsp+0x58],eax
  40db09:	mov    eax,DWORD PTR [rsp+0x38]
  40db0d:	sub    eax,0x1
  40db10:	mov    DWORD PTR [rsp+0x34],eax
  40db14:	mov    eax,edi
  40db16:	sub    eax,ebp
  40db18:	cmp    eax,0x9
  40db1b:	jle    0x40dda4
  40db21:	imul   eax,DWORD PTR [rsp+0x48],0x1dc5
  40db29:	add    eax,0x1
  40db2c:	and    eax,0x7fff
  40db31:	mov    esi,eax
  40db33:	mov    DWORD PTR [rsp+0x48],eax
  40db37:	mov    eax,0xaaaaaaab
  40db3c:	mul    esi
  40db3e:	shr    edx,1
  40db40:	lea    eax,[rdx+rdx*2]
  40db43:	mov    edx,esi
  40db45:	sub    edx,eax
  40db47:	jne    0x40df3d
  40db4d:	movsxd rax,ebp
  40db50:	mov    QWORD PTR [rsp+0x40],rax
  40db55:	mov    eax,DWORD PTR [r13+rax*4+0x0]
  40db5a:	mov    r11d,DWORD PTR [r12+rax*4]
  40db5e:	mov    rax,QWORD PTR [rsp+0x40]
  40db63:	lea    esi,[rbp+0x1]
  40db66:	mov    r9d,edi
  40db69:	mov    r15d,ebp
  40db6c:	mov    ecx,edi
  40db6e:	lea    r14,[r13+rax*4+0x0]
  40db73:	mov    rbx,r14
  40db76:	jmp    0x40dbb0
  40db78:	nop    DWORD PTR [rax+rax*1+0x0]
  40db80:	mov    eax,DWORD PTR [rbx]
  40db82:	mov    rdx,rax
  40db85:	mov    eax,DWORD PTR [r12+rax*4]
  40db89:	sub    eax,r11d
  40db8c:	cmp    eax,0x0
  40db8f:	jne    0x40dd30
  40db95:	movsxd rax,r15d
  40db98:	add    r15d,0x1
  40db9c:	lea    rax,[r13+rax*4+0x0]
  40dba1:	mov    r8d,DWORD PTR [rax]
  40dba4:	mov    DWORD PTR [rbx],r8d
  40dba7:	mov    DWORD PTR [rax],edx
  40dba9:	add    esi,0x1
  40dbac:	add    rbx,0x4
  40dbb0:	lea    r10d,[rsi-0x1]
  40dbb4:	cmp    ecx,r10d
  40dbb7:	jge    0x40db80
  40dbb9:	cmp    r9d,r15d
  40dbbc:	jl     0x40dee0
  40dbc2:	mov    edx,r15d
  40dbc5:	mov    eax,r10d
  40dbc8:	sub    eax,r15d
  40dbcb:	sub    edx,ebp
  40dbcd:	cmp    edx,eax
  40dbcf:	cmovg  edx,eax
  40dbd2:	mov    eax,r10d
  40dbd5:	sub    eax,edx
  40dbd7:	test   edx,edx
  40dbd9:	jle    0x40dc0e
  40dbdb:	mov    rsi,QWORD PTR [rsp+0x40]
  40dbe0:	sub    edx,0x1
  40dbe3:	cdqe   
  40dbe5:	lea    rax,[r13+rax*4+0x0]
  40dbea:	lea    rdx,[rdx+rsi*1+0x1]
  40dbef:	lea    r8,[r13+rdx*4+0x0]
  40dbf4:	mov    r11d,DWORD PTR [rax]
  40dbf7:	mov    edx,DWORD PTR [r14]
  40dbfa:	add    r14,0x4
  40dbfe:	add    rax,0x4
  40dc02:	mov    DWORD PTR [r14-0x4],r11d
  40dc06:	mov    DWORD PTR [rax-0x4],edx
  40dc09:	cmp    r14,r8
  40dc0c:	jne    0x40dbf4
  40dc0e:	mov    edx,edi
  40dc10:	mov    eax,r9d
  40dc13:	mov    ebx,edi
  40dc15:	sub    edx,r9d
  40dc18:	sub    eax,ecx
  40dc1a:	cmp    edx,eax
  40dc1c:	cmovg  edx,eax
  40dc1f:	sub    ebx,edx
  40dc21:	add    ebx,0x1
  40dc24:	test   edx,edx
  40dc26:	jle    0x40dc58
  40dc28:	movsxd r11,r10d
  40dc2b:	sub    edx,0x1
  40dc2e:	lea    rdx,[r11+rdx*1+0x1]
  40dc33:	lea    rax,[r13+r11*4+0x0]
  40dc38:	lea    r8,[r13+rdx*4+0x0]
  40dc3d:	movsxd rdx,ebx
  40dc40:	sub    rdx,r11
  40dc43:	mov    r11d,DWORD PTR [rax]
  40dc46:	mov    ebx,DWORD PTR [rax+rdx*4]
  40dc49:	mov    DWORD PTR [rax],ebx
  40dc4b:	mov    DWORD PTR [rax+rdx*4],r11d
  40dc4f:	add    rax,0x4
  40dc53:	cmp    rax,r8
  40dc56:	jne    0x40dc43
  40dc58:	lea    eax,[r10+rbp*1]
  40dc5c:	sub    ecx,r9d
  40dc5f:	lea    edx,[rdi+rcx*1+0x1]
  40dc63:	mov    ecx,edi
  40dc65:	sub    eax,r15d
  40dc68:	sub    eax,0x1
  40dc6b:	sub    ecx,edx
  40dc6d:	mov    r8d,eax
  40dc70:	sub    r8d,ebp
  40dc73:	cmp    r8d,ecx
  40dc76:	jle    0x40df6a
  40dc7c:	movsxd rcx,DWORD PTR [rsp+0x34]
  40dc81:	mov    esi,DWORD PTR [rsp+0x38]
  40dc85:	mov    DWORD PTR [rsp+rcx*4+0x200],eax
  40dc8c:	movsxd rax,esi
  40dc8f:	mov    DWORD PTR [rsp+rax*4+0x70],edx
  40dc93:	mov    DWORD PTR [rsp+rax*4+0x200],edi
  40dc9a:	mov    eax,esi
  40dc9c:	add    eax,0x1
  40dc9f:	mov    DWORD PTR [rsp+0x34],eax
  40dca3:	cmp    DWORD PTR [rsp+0x34],0x62
  40dca8:	jg     0x40df5b
  40dcae:	mov    esi,DWORD PTR [rsp+0x34]
  40dcb2:	mov    eax,esi
  40dcb4:	mov    DWORD PTR [rsp+0x38],esi
  40dcb8:	sub    eax,0x1
  40dcbb:	cdqe   
  40dcbd:	mov    ebp,DWORD PTR [rsp+rax*4+0x70]
  40dcc1:	mov    edi,DWORD PTR [rsp+rax*4+0x200]
  40dcc8:	jmp    0x40db09
  40dccd:	nop    DWORD PTR [rax]
  40dcd0:	add    eax,0x20
  40dcd3:	mov    edx,eax
  40dcd5:	sar    edx,0x5
  40dcd8:	movsxd rdx,edx
  40dcdb:	mov    edx,DWORD PTR [r15+rdx*4]
  40dcdf:	cmp    edx,0xffffffff
  40dce2:	je     0x40dcd0
  40dce4:	mov    esi,0x1
  40dce9:	mov    ecx,eax
  40dceb:	shl    esi,cl
  40dced:	test   esi,edx
  40dcef:	je     0x40da0c
  40dcf5:	add    eax,0x1
  40dcf8:	mov    r8d,0x1
  40dcfe:	mov    edx,eax
  40dd00:	mov    ecx,eax
  40dd02:	sar    edx,0x5
  40dd05:	and    ecx,0x1f
  40dd08:	movsxd rdx,edx
  40dd0b:	shl    r8d,cl
  40dd0e:	test   DWORD PTR [r15+rdx*4],r8d
  40dd12:	jne    0x40dcf5
  40dd14:	lea    esi,[rax-0x1]
  40dd17:	cmp    DWORD PTR [rsp+0x3c],esi
  40dd1b:	mov    DWORD PTR [rsp+0x4c],esi
  40dd1f:	jle    0x40dfbd
  40dd25:	mov    edx,DWORD PTR [r15+rdx*4]
  40dd29:	jmp    0x40da63
  40dd2e:	xchg   ax,ax
  40dd30:	jle    0x40dba9
  40dd36:	movsxd rax,ecx
  40dd39:	lea    edx,[rcx-0x1]
  40dd3c:	mov    QWORD PTR [rsp+0x28],rbx
  40dd41:	lea    rax,[r13+rax*4+0x0]
  40dd46:	jmp    0x40dd76
  40dd48:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd50:	movsxd r8,r9d
  40dd53:	sub    r9d,0x1
  40dd57:	lea    r8,[r13+r8*4+0x0]
  40dd5c:	mov    ebx,DWORD PTR [r8]
  40dd5f:	mov    DWORD PTR [rax],ebx
  40dd61:	mov    DWORD PTR [r8],ecx
  40dd64:	mov    ecx,edx
  40dd66:	sub    rax,0x4
  40dd6a:	sub    edx,0x1
  40dd6d:	cmp    ecx,r10d
  40dd70:	jl     0x40dbb9
  40dd76:	mov    r8d,DWORD PTR [rax]
  40dd79:	cmp    DWORD PTR [r12+r8*4],r11d
  40dd7d:	mov    rcx,r8
  40dd80:	je     0x40dd50
  40dd82:	js     0x40dd90
  40dd84:	mov    ecx,edx
  40dd86:	jmp    0x40dd66
  40dd88:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd90:	mov    rbx,QWORD PTR [rsp+0x28]
  40dd95:	mov    r8d,DWORD PTR [rbx]
  40dd98:	mov    DWORD PTR [rbx],ecx
  40dd9a:	mov    ecx,edx
  40dd9c:	mov    DWORD PTR [rax],r8d
  40dd9f:	jmp    0x40dba9
  40dda4:	cmp    ebp,edi
  40dda6:	je     0x40dee0
  40ddac:	cmp    eax,0x3
  40ddaf:	jle    0x40de47
  40ddb5:	lea    eax,[rdi-0x4]
  40ddb8:	cmp    eax,ebp
  40ddba:	jl     0x40de47
  40ddc0:	movsxd rdx,eax
  40ddc3:	sub    eax,ebp
  40ddc5:	mov    r11d,edi
  40ddc8:	lea    r10,[rdx*4+0x10]
  40ddd0:	sub    rdx,rax
  40ddd3:	lea    rsi,[rdx*4+0xc]
  40dddb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dde0:	movsxd rax,DWORD PTR [r13+r10*1-0x10]
  40dde5:	cmp    r11d,edi
  40dde8:	mov    edx,r11d
  40ddeb:	mov    rbx,rax
  40ddee:	mov    r9d,DWORD PTR [r12+rax*4]
  40ddf2:	jg     0x40dfb5
  40ddf8:	mov    eax,DWORD PTR [r13+r10*1+0x0]
  40ddfd:	cmp    r9d,DWORD PTR [r12+rax*4]
  40de01:	mov    rcx,rax
  40de04:	mov    rax,r10
  40de07:	ja     0x40de22
  40de09:	jmp    0x40de35
  40de0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40de10:	add    rax,0x10
  40de14:	mov    r8d,DWORD PTR [r13+rax*1+0x0]
  40de19:	cmp    r9d,DWORD PTR [r12+r8*4]
  40de1d:	mov    rcx,r8
  40de20:	jbe    0x40de35
  40de22:	add    edx,0x4
  40de25:	mov    DWORD PTR [r13+rax*1-0x10],ecx
  40de2a:	cmp    edx,edi
  40de2c:	jle    0x40de10
  40de2e:	movsxd rax,edx
  40de31:	shl    rax,0x2
  40de35:	sub    r10,0x4
  40de39:	sub    r11d,0x1
  40de3d:	mov    DWORD PTR [r13+rax*1-0x10],ebx
  40de42:	cmp    r10,rsi
  40de45:	jne    0x40dde0
  40de47:	lea    eax,[rdi-0x1]
  40de4a:	cmp    eax,ebp
  40de4c:	jl     0x40dee0
  40de52:	movsxd rdx,eax
  40de55:	sub    eax,ebp
  40de57:	mov    r10d,edi
  40de5a:	lea    r9,[rdx*4+0x4]
  40de62:	sub    rdx,rax
  40de65:	lea    rbx,[rdx*4+0x0]
  40de6d:	nop    DWORD PTR [rax]
  40de70:	movsxd rax,DWORD PTR [r13+r9*1-0x4]
  40de75:	cmp    r10d,edi
  40de78:	mov    edx,r10d
  40de7b:	mov    rsi,rax
  40de7e:	mov    r11d,DWORD PTR [r12+rax*4]
  40de82:	jg     0x40df8f
  40de88:	mov    eax,DWORD PTR [r13+r9*1+0x0]
  40de8d:	cmp    r11d,DWORD PTR [r12+rax*4]
  40de91:	mov    rcx,rax
  40de94:	mov    rax,r9
  40de97:	ja     0x40deb2
  40de99:	jmp    0x40dec5
  40de9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40dea0:	add    rax,0x4
  40dea4:	mov    r8d,DWORD PTR [r13+rax*1+0x0]
  40dea9:	cmp    r11d,DWORD PTR [r12+r8*4]
  40dead:	mov    rcx,r8
  40deb0:	jbe    0x40dec5
  40deb2:	add    edx,0x1
  40deb5:	mov    DWORD PTR [r13+rax*1-0x4],ecx
  40deba:	cmp    edx,edi
  40debc:	jle    0x40dea0
  40debe:	movsxd rax,edx
  40dec1:	shl    rax,0x2
  40dec5:	sub    r9,0x4
  40dec9:	sub    r10d,0x1
  40decd:	mov    DWORD PTR [r13+rax*1-0x4],esi
  40ded2:	cmp    r9,rbx
  40ded5:	jne    0x40de70
  40ded7:	nop    WORD PTR [rax+rax*1+0x0]
  40dee0:	mov    ecx,DWORD PTR [rsp+0x34]
  40dee4:	test   ecx,ecx
  40dee6:	jne    0x40dca3
  40deec:	mov    ecx,DWORD PTR [rsp+0x4c]
  40def0:	mov    r15,QWORD PTR [rsp+0x68]
  40def5:	mov    edx,0xffffffff
  40defa:	movsxd rax,ecx
  40defd:	lea    r8,[r13+rax*4+0x0]
  40df02:	mov    eax,DWORD PTR [rsp+0x50]
  40df06:	add    eax,0x1
  40df09:	mov    r9d,DWORD PTR [r8]
  40df0c:	mov    r9d,DWORD PTR [r12+r9*4]
  40df10:	cmp    edx,r9d
  40df13:	je     0x40df2a
  40df15:	mov    edx,ecx
  40df17:	mov    r10d,0x1
  40df1d:	sar    edx,0x5
  40df20:	shl    r10d,cl
  40df23:	movsxd rdx,edx
  40df26:	or     DWORD PTR [r15+rdx*4],r10d
  40df2a:	add    ecx,0x1
  40df2d:	add    r8,0x4
  40df31:	mov    edx,r9d
  40df34:	cmp    ecx,eax
  40df36:	jne    0x40df09
  40df38:	jmp    0x40d9ed
  40df3d:	cmp    edx,0x1
  40df40:	je     0x40df97
  40df42:	movsxd rax,edi
  40df45:	mov    eax,DWORD PTR [r13+rax*4+0x0]
  40df4a:	mov    r11d,DWORD PTR [r12+rax*4]
  40df4e:	movsxd rax,ebp
  40df51:	mov    QWORD PTR [rsp+0x40],rax
  40df56:	jmp    0x40db5e
  40df5b:	mov    ecx,0x3ec
  40df60:	call   0x404780
  40df65:	jmp    0x40dcae
  40df6a:	movsxd rcx,DWORD PTR [rsp+0x34]
  40df6f:	mov    DWORD PTR [rsp+rcx*4+0x70],edx
  40df73:	movsxd rdx,DWORD PTR [rsp+0x38]
  40df78:	mov    DWORD PTR [rsp+rdx*4+0x200],eax
  40df7f:	lea    eax,[rdx+0x1]
  40df82:	mov    DWORD PTR [rsp+rdx*4+0x70],ebp
  40df86:	mov    DWORD PTR [rsp+0x34],eax
  40df8a:	jmp    0x40dca3
  40df8f:	mov    rax,r9
  40df92:	jmp    0x40dec5
  40df97:	lea    eax,[rbp+rdi*1+0x0]
  40df9b:	sar    eax,1
  40df9d:	cdqe   
  40df9f:	mov    eax,DWORD PTR [r13+rax*4+0x0]
  40dfa4:	mov    r11d,DWORD PTR [r12+rax*4]
  40dfa8:	movsxd rax,ebp
  40dfab:	mov    QWORD PTR [rsp+0x40],rax
  40dfb0:	jmp    0x40db5e
  40dfb5:	mov    rax,r10
  40dfb8:	jmp    0x40de35
  40dfbd:	cmp    DWORD PTR [rsp+0x5c],0x3
  40dfc2:	jle    0x40dfe0
  40dfc4:	mov    rax,QWORD PTR [rsp+0x60]
  40dfc9:	call   rax
  40dfcb:	mov    r8d,DWORD PTR [rsp+0x58]
  40dfd0:	lea    rcx,[rax+0x60]
  40dfd4:	lea    rdx,[rip+0x8698]        # 0x416673
  40dfdb:	call   0x4112b0
  40dfe0:	mov    edx,DWORD PTR [rsp+0x58]
  40dfe4:	shl    DWORD PTR [rsp+0x54],1
  40dfe8:	mov    eax,DWORD PTR [rsp+0x54]
  40dfec:	test   edx,edx
  40dfee:	je     0x40dffc
  40dff0:	mov    esi,DWORD PTR [rsp+0x3c]
  40dff4:	cmp    eax,esi
  40dff6:	jle    0x40d965
  40dffc:	cmp    DWORD PTR [rsp+0x5c],0x3
  40e001:	jle    0x40e024
  40e003:	call   QWORD PTR [rip+0xe37b]        # 0x41c384
  40e009:	lea    rcx,[rip+0x8680]        # 0x416690
  40e010:	lea    r9,[rax+0x60]
  40e014:	mov    r8d,0x21
  40e01a:	mov    edx,0x1
  40e01f:	call   0x411290
  40e024:	mov    eax,DWORD PTR [rsp+0x3c]
  40e028:	test   eax,eax
  40e02a:	jle    0x40e077
  40e02c:	mov    edx,DWORD PTR [rsp+0x390]
  40e033:	sub    eax,0x1
  40e036:	mov    r8,r13
  40e039:	lea    r9,[r13+rax*4+0x4]
  40e03e:	xor    eax,eax
  40e040:	test   edx,edx
  40e042:	jne    0x40e099
  40e044:	add    eax,0x1
  40e047:	movsxd rcx,eax
  40e04a:	mov    edx,DWORD PTR [rsp+rcx*4+0x390]
  40e051:	test   edx,edx
  40e053:	je     0x40e044
  40e055:	sub    edx,0x1
  40e058:	add    r8,0x4
  40e05c:	mov    DWORD PTR [rsp+rcx*4+0x390],edx
  40e063:	mov    ecx,DWORD PTR [r8-0x4]
  40e067:	cmp    r8,r9
  40e06a:	mov    BYTE PTR [r12+rcx*1],al
  40e06e:	jne    0x40e040
  40e070:	cmp    eax,0xff
  40e075:	jg     0x40e09e
  40e077:	add    rsp,0xba8
  40e07e:	pop    rbx
  40e07f:	pop    rsi
  40e080:	pop    rdi
  40e081:	pop    rbp
  40e082:	pop    r12
  40e084:	pop    r13
  40e086:	pop    r14
  40e088:	pop    r15
  40e08a:	ret    
  40e08b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e090:	mov    eax,DWORD PTR [rsp+0x4c]
  40e094:	jmp    0x40daae
  40e099:	movsxd rcx,eax
  40e09c:	jmp    0x40e055
  40e09e:	mov    ecx,0x3ed
  40e0a3:	add    rsp,0xba8
  40e0aa:	pop    rbx
  40e0ab:	pop    rsi
  40e0ac:	pop    rdi
  40e0ad:	pop    rbp
  40e0ae:	pop    r12
  40e0b0:	pop    r13
  40e0b2:	pop    r14
  40e0b4:	pop    r15
  40e0b6:	jmp    0x404780
  40e0bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e0c0:	push   r15
  40e0c2:	push   r14
  40e0c4:	mov    eax,0x1298
  40e0c9:	push   r13
  40e0cb:	push   r12
  40e0cd:	push   rbp
  40e0ce:	push   rdi
  40e0cf:	push   rsi
  40e0d0:	push   rbx
  40e0d1:	call   0x4111a0
  40e0d6:	sub    rsp,rax
  40e0d9:	mov    eax,DWORD PTR [rsp+0x1300]
  40e0e0:	mov    rsi,QWORD PTR [rsp+0x1310]
  40e0e8:	mov    QWORD PTR [rsp+0x58],rcx
  40e0ed:	mov    r13,rdx
  40e0f0:	mov    QWORD PTR [rsp+0x98],r8
  40e0f8:	mov    QWORD PTR [rsp+0x88],r9
  40e100:	mov    DWORD PTR [rsp+0x90],eax
  40e107:	mov    eax,DWORD PTR [rsp+0x1308]
  40e10e:	mov    QWORD PTR [rsp+0x68],rsi
  40e113:	cmp    eax,0x3
  40e116:	mov    DWORD PTR [rsp+0xb4],eax
  40e11d:	jle    0x40e140
  40e11f:	call   QWORD PTR [rip+0xe25f]        # 0x41c384
  40e125:	lea    rcx,[rip+0x858c]        # 0x4166b8
  40e12c:	lea    r9,[rax+0x60]
  40e130:	mov    r8d,0x21
  40e136:	mov    edx,0x1
  40e13b:	call   0x411290
  40e140:	mov    rsi,QWORD PTR [rsp+0x88]
  40e148:	mov    rax,rsi
  40e14b:	lea    rdx,[rsi-0x4]
  40e14f:	add    rax,0x40000
  40e155:	mov    DWORD PTR [rax],0x0
  40e15b:	sub    rax,0x4
  40e15f:	cmp    rax,rdx
  40e162:	jne    0x40e155
  40e164:	mov    ebx,DWORD PTR [rsp+0x90]
  40e16b:	movzx  eax,BYTE PTR [r13+0x0]
  40e170:	mov    esi,ebx
  40e172:	sub    esi,0x1
  40e175:	shl    eax,0x8
  40e178:	cmp    esi,0x2
  40e17b:	mov    DWORD PTR [rsp+0xac],esi
  40e182:	jle    0x40ed78
  40e188:	lea    ecx,[rbx-0x4]
  40e18b:	mov    rdi,QWORD PTR [rsp+0x98]
  40e193:	movsxd r9,esi
  40e196:	lea    r8,[r13+r9*1+0x0]
  40e19b:	mov    r11,QWORD PTR [rsp+0x88]
  40e1a3:	shr    ecx,0x2
  40e1a6:	mov    r10d,ecx
  40e1a9:	lea    rdx,[rdi+r9*2]
  40e1ad:	shl    r10,0x2
  40e1b1:	sub    r9,r10
  40e1b4:	lea    r9,[rdi+r9*2-0x8]
  40e1b9:	xor    esi,esi
  40e1bb:	sar    eax,0x8
  40e1be:	xor    edi,edi
  40e1c0:	mov    WORD PTR [rdx],si
  40e1c3:	movzx  r10d,BYTE PTR [r8]
  40e1c7:	xor    ebp,ebp
  40e1c9:	xor    r12d,r12d
  40e1cc:	sub    rdx,0x8
  40e1d0:	sub    r8,0x4
  40e1d4:	shl    r10d,0x8
  40e1d8:	or     eax,r10d
  40e1db:	movsxd r10,eax
  40e1de:	sar    eax,0x8
  40e1e1:	add    DWORD PTR [r11+r10*4],0x1
  40e1e6:	mov    WORD PTR [rdx+0x6],di
  40e1ea:	movzx  r10d,BYTE PTR [r8+0x3]
  40e1ef:	shl    r10d,0x8
  40e1f3:	or     eax,r10d
  40e1f6:	movsxd r10,eax
  40e1f9:	sar    eax,0x8
  40e1fc:	add    DWORD PTR [r11+r10*4],0x1
  40e201:	mov    WORD PTR [rdx+0x4],bp
  40e205:	mov    r10d,eax
  40e208:	movzx  eax,BYTE PTR [r8+0x2]
  40e20d:	shl    eax,0x8
  40e210:	or     eax,r10d
  40e213:	movsxd r10,eax
  40e216:	sar    eax,0x8
  40e219:	add    DWORD PTR [r11+r10*4],0x1
  40e21e:	mov    WORD PTR [rdx+0x2],r12w
  40e223:	mov    r10d,eax
  40e226:	movzx  eax,BYTE PTR [r8+0x1]
  40e22b:	shl    eax,0x8
  40e22e:	or     eax,r10d
  40e231:	movsxd r10,eax
  40e234:	add    DWORD PTR [r11+r10*4],0x1
  40e239:	cmp    rdx,r9
  40e23c:	jne    0x40e1b9
  40e242:	mov    esi,DWORD PTR [rsp+0x90]
  40e249:	neg    ecx
  40e24b:	lea    edx,[rsi+rcx*4-0x5]
  40e24f:	test   edx,edx
  40e251:	jns    0x40ed87
  40e257:	movsxd rdx,DWORD PTR [rsp+0x90]
  40e25f:	mov    rax,QWORD PTR [rsp+0x98]
  40e267:	lea    rcx,[rax+rdx*2]
  40e26b:	xor    eax,eax
  40e26d:	add    rdx,r13
  40e270:	movzx  r8d,BYTE PTR [r13+rax*1+0x0]
  40e276:	mov    BYTE PTR [rdx+rax*1],r8b
  40e27a:	xor    r8d,r8d
  40e27d:	mov    WORD PTR [rcx+rax*2],r8w
  40e282:	add    rax,0x1
  40e286:	cmp    rax,0x22
  40e28a:	jne    0x40e270
  40e28c:	cmp    DWORD PTR [rsp+0xb4],0x3
  40e294:	jle    0x40e2b7
  40e296:	call   QWORD PTR [rip+0xe0e8]        # 0x41c384
  40e29c:	lea    rcx,[rip+0x839d]        # 0x416640
  40e2a3:	lea    r9,[rax+0x60]
  40e2a7:	mov    r8d,0x1b
  40e2ad:	mov    edx,0x1
  40e2b2:	call   0x411290
  40e2b7:	mov    rsi,QWORD PTR [rsp+0x88]
  40e2bf:	mov    rax,rsi
  40e2c2:	lea    rcx,[rsi+0x40004]
  40e2c9:	add    rax,0x4
  40e2cd:	mov    edx,DWORD PTR [rax-0x4]
  40e2d0:	add    DWORD PTR [rax],edx
  40e2d2:	add    rax,0x4
  40e2d6:	cmp    rax,rcx
  40e2d9:	jne    0x40e2cd
  40e2db:	movzx  eax,BYTE PTR [r13+0x0]
  40e2e0:	mov    esi,DWORD PTR [rsp+0xac]
  40e2e7:	shl    eax,0x8
  40e2ea:	cmp    esi,0x2
  40e2ed:	jle    0x40edd4
  40e2f3:	mov    r9,QWORD PTR [rsp+0x58]
  40e2f8:	mov    r10,QWORD PTR [rsp+0x88]
  40e300:	movsxd rdx,esi
  40e303:	add    rdx,r13
  40e306:	mov    ecx,esi
  40e308:	movzx  r8d,BYTE PTR [rdx]
  40e30c:	shr    ax,0x8
  40e310:	sub    rdx,0x4
  40e314:	shl    r8d,0x8
  40e318:	or     eax,r8d
  40e31b:	movzx  r8d,ax
  40e31f:	shr    ax,0x8
  40e323:	lea    r11,[r10+r8*4]
  40e327:	mov    esi,DWORD PTR [r11]
  40e32a:	lea    r8d,[rsi-0x1]
  40e32e:	mov    DWORD PTR [r11],r8d
  40e331:	movsxd r8,r8d
  40e334:	mov    DWORD PTR [r9+r8*4],ecx
  40e338:	mov    r8d,eax
  40e33b:	movzx  eax,BYTE PTR [rdx+0x3]
  40e33f:	shl    eax,0x8
  40e342:	or     eax,r8d
  40e345:	movzx  r8d,ax
  40e349:	shr    ax,0x8
  40e34d:	lea    r11,[r10+r8*4]
  40e351:	mov    esi,DWORD PTR [r11]
  40e354:	lea    r8d,[rsi-0x1]
  40e358:	mov    DWORD PTR [r11],r8d
  40e35b:	lea    r11d,[rcx-0x1]
  40e35f:	movsxd r8,r8d
  40e362:	mov    DWORD PTR [r9+r8*4],r11d
  40e366:	mov    r8d,eax
  40e369:	movzx  eax,BYTE PTR [rdx+0x2]
  40e36d:	shl    eax,0x8
  40e370:	or     eax,r8d
  40e373:	movzx  r8d,ax
  40e377:	shr    ax,0x8
  40e37b:	lea    r11,[r10+r8*4]
  40e37f:	mov    esi,DWORD PTR [r11]
  40e382:	lea    r8d,[rsi-0x1]
  40e386:	mov    DWORD PTR [r11],r8d
  40e389:	lea    r11d,[rcx-0x2]
  40e38d:	movsxd r8,r8d
  40e390:	mov    DWORD PTR [r9+r8*4],r11d
  40e394:	mov    r8d,eax
  40e397:	movzx  eax,BYTE PTR [rdx+0x1]
  40e39b:	shl    eax,0x8
  40e39e:	or     eax,r8d
  40e3a1:	movzx  r8d,ax
  40e3a5:	lea    r11,[r10+r8*4]
  40e3a9:	mov    esi,DWORD PTR [r11]
  40e3ac:	lea    r8d,[rsi-0x1]
  40e3b0:	mov    DWORD PTR [r11],r8d
  40e3b3:	lea    r11d,[rcx-0x3]
  40e3b7:	sub    ecx,0x4
  40e3ba:	movsxd r8,r8d
  40e3bd:	cmp    ecx,0x2
  40e3c0:	mov    DWORD PTR [r9+r8*4],r11d
  40e3c4:	jg     0x40e308
  40e3ca:	mov    esi,DWORD PTR [rsp+0x90]
  40e3d1:	lea    edx,[rsi-0x4]
  40e3d4:	and    edx,0xfffffffc
  40e3d7:	neg    edx
  40e3d9:	lea    ecx,[rsi+rdx*1-0x5]
  40e3dd:	test   ecx,ecx
  40e3df:	jns    0x40ede3
  40e3e5:	lea    rdx,[rsp+0xe0]
  40e3ed:	lea    rbp,[rsp+0x690]
  40e3f5:	xor    eax,eax
  40e3f7:	mov    BYTE PTR [rdx+rax*1],0x0
  40e3fb:	mov    DWORD PTR [rbp+rax*4+0x0],eax
  40e3ff:	add    rax,0x1
  40e403:	cmp    rax,0x100
  40e409:	jne    0x40e3f7
  40e40b:	mov    ax,0x5
  40e40f:	mov    edi,0x1
  40e414:	sub    eax,0x1
  40e417:	lea    edi,[rdi+rdi*2+0x1]
  40e41b:	jne    0x40e414
  40e41d:	mov    r10,QWORD PTR [rsp+0x88]
  40e425:	mov    r12d,0x55555556
  40e42b:	mov    eax,edi
  40e42d:	sar    edi,0x1f
  40e430:	imul   r12d
  40e433:	sub    edx,edi
  40e435:	cmp    edx,0xff
  40e43b:	mov    r11d,edx
  40e43e:	mov    edi,edx
  40e440:	jg     0x40e42b
  40e442:	mov    eax,edx
  40e444:	movsxd rdx,eax
  40e447:	mov    ebx,DWORD PTR [rsp+rdx*4+0x690]
  40e44e:	lea    edx,[rbx+0x1]
  40e451:	mov    ecx,ebx
  40e453:	shl    ecx,0x8
  40e456:	shl    edx,0x8
  40e459:	movsxd rcx,ecx
  40e45c:	movsxd rdx,edx
  40e45f:	mov    esi,DWORD PTR [r10+rdx*4]
  40e463:	movsxd rdx,eax
  40e466:	sub    esi,DWORD PTR [r10+rcx*4]
  40e46a:	jmp    0x40e480
  40e46c:	nop    DWORD PTR [rax+0x0]
  40e470:	mov    DWORD PTR [rsp+rdx*4+0x690],r8d
  40e478:	movsxd rdx,r9d
  40e47b:	cmp    r11d,edx
  40e47e:	jg     0x40e4b1
  40e480:	mov    r9d,edx
  40e483:	sub    r9d,r11d
  40e486:	movsxd rcx,r9d
  40e489:	mov    r8d,DWORD PTR [rsp+rcx*4+0x690]
  40e491:	lea    ecx,[r8+0x1]
  40e495:	mov    r14d,r8d
  40e498:	shl    r14d,0x8
  40e49c:	shl    ecx,0x8
  40e49f:	movsxd r14,r14d
  40e4a2:	movsxd rcx,ecx
  40e4a5:	mov    ecx,DWORD PTR [r10+rcx*4]
  40e4a9:	sub    ecx,DWORD PTR [r10+r14*4]
  40e4ad:	cmp    ecx,esi
  40e4af:	ja     0x40e470
  40e4b1:	add    eax,0x1
  40e4b4:	mov    DWORD PTR [rsp+rdx*4+0x690],ebx
  40e4bb:	cmp    eax,0x100
  40e4c0:	jne    0x40e444
  40e4c2:	cmp    r11d,0x1
  40e4c6:	jne    0x40e42b
  40e4cc:	mov    rax,rbp
  40e4cf:	lea    rsi,[rbp+0x400]
  40e4d6:	mov    QWORD PTR [rsp+0xa0],rbp
  40e4de:	add    rax,0x3fc
  40e4e4:	mov    DWORD PTR [rsp+0xb0],0x0
  40e4ef:	mov    QWORD PTR [rsp+0xc8],rsi
  40e4f7:	mov    QWORD PTR [rsp+0xc0],rax
  40e4ff:	mov    rax,QWORD PTR [rsp+0xa0]
  40e507:	mov    rsi,QWORD PTR [rsp+0x88]
  40e50f:	mov    r11,r13
  40e512:	mov    DWORD PTR [rsp+0x7c],0x0
  40e51a:	mov    eax,DWORD PTR [rax]
  40e51c:	mov    DWORD PTR [rsp+0x94],eax
  40e523:	shl    eax,0x8
  40e526:	cdqe   
  40e528:	lea    rax,[rsi+rax*4]
  40e52c:	mov    QWORD PTR [rsp+0xb8],rax
  40e534:	mov    QWORD PTR [rsp+0x80],rax
  40e53c:	mov    esi,DWORD PTR [rsp+0x94]
  40e543:	cmp    DWORD PTR [rsp+0x7c],esi
  40e547:	je     0x40eed9
  40e54d:	mov    rax,QWORD PTR [rsp+0x80]
  40e555:	mov    eax,DWORD PTR [rax]
  40e557:	test   eax,0x200000
  40e55c:	jne    0x40eeca
  40e562:	mov    rsi,QWORD PTR [rsp+0x80]
  40e56a:	mov    ebx,eax
  40e56c:	and    ebx,0xffdfffff
  40e572:	mov    esi,DWORD PTR [rsi+0x4]
  40e575:	mov    DWORD PTR [rsp+0x30],esi
  40e579:	and    esi,0xffdfffff
  40e57f:	sub    esi,0x1
  40e582:	cmp    ebx,esi
  40e584:	jge    0x40eeca
  40e58a:	cmp    DWORD PTR [rsp+0xb4],0x3
  40e592:	jg     0x40f373
  40e598:	mov    eax,esi
  40e59a:	sub    eax,ebx
  40e59c:	add    eax,0x1
  40e59f:	mov    DWORD PTR [rsp+0xd8],eax
  40e5a6:	mov    DWORD PTR [rsp+0x50],esi
  40e5aa:	mov    DWORD PTR [rsp+0x74],ebx
  40e5ae:	mov    r12d,0x2
  40e5b4:	mov    edx,DWORD PTR [rsp+0x50]
  40e5b8:	sub    edx,DWORD PTR [rsp+0x74]
  40e5bc:	mov    rax,r11
  40e5bf:	mov    r13d,0x1
  40e5c5:	mov    r11d,r12d
  40e5c8:	mov    DWORD PTR [rsp+0x1e0],ebx
  40e5cf:	mov    DWORD PTR [rsp+0x370],esi
  40e5d6:	mov    DWORD PTR [rsp+0x500],0x2
  40e5e1:	mov    r12,rax
  40e5e4:	mov    DWORD PTR [rsp+0xa8],0x0
  40e5ef:	mov    DWORD PTR [rsp+0x38],r13d
  40e5f4:	cmp    edx,0x13
  40e5f7:	jle    0x40e71e
  40e5fd:	cmp    r11d,0xe
  40e601:	jg     0x40e71e
  40e607:	mov    esi,DWORD PTR [rsp+0x74]
  40e60b:	mov    ecx,DWORD PTR [rsp+0x50]
  40e60f:	mov    edi,r11d
  40e612:	mov    rbx,QWORD PTR [rsp+0x58]
  40e617:	mov    eax,esi
  40e619:	movsxd r14,esi
  40e61c:	add    eax,ecx
  40e61e:	sar    eax,1
  40e620:	cdqe   
  40e622:	add    edi,DWORD PTR [rbx+rax*4]
  40e625:	movsxd rax,ecx
  40e628:	movzx  edx,BYTE PTR [r12+rdi*1]
  40e62d:	mov    edi,r11d
  40e630:	add    edi,DWORD PTR [rbx+rax*4]
  40e633:	mov    eax,r11d
  40e636:	movzx  r8d,BYTE PTR [r12+rdi*1]
  40e63b:	lea    rdi,[rbx+r14*4]
  40e63f:	add    eax,DWORD PTR [rdi]
  40e641:	movzx  eax,BYTE PTR [r12+rax*1]
  40e646:	cmp    r8b,al
  40e649:	jae    0x40e653
  40e64b:	mov    ecx,eax
  40e64d:	mov    eax,r8d
  40e650:	mov    r8d,ecx
  40e653:	cmp    dl,r8b
  40e656:	jae    0x40e660
  40e658:	cmp    al,dl
  40e65a:	cmovae edx,eax
  40e65d:	mov    r8d,edx
  40e660:	mov    eax,DWORD PTR [rsp+0x74]
  40e664:	mov    ecx,DWORD PTR [rsp+0x50]
  40e668:	movzx  r15d,r8b
  40e66c:	mov    rbx,rdi
  40e66f:	mov    r13,QWORD PTR [rsp+0x58]
  40e674:	lea    esi,[rax+0x1]
  40e677:	mov    r9d,ecx
  40e67a:	mov    ebp,eax
  40e67c:	jmp    0x40e6b1
  40e67e:	xchg   ax,ax
  40e680:	mov    edx,DWORD PTR [rbx]
  40e682:	lea    eax,[rdx+r11*1]
  40e686:	movzx  eax,BYTE PTR [r12+rax*1]
  40e68b:	sub    eax,r15d
  40e68e:	cmp    eax,0x0
  40e691:	jne    0x40ee30
  40e697:	movsxd rax,ebp
  40e69a:	add    ebp,0x1
  40e69d:	lea    rax,[r13+rax*4+0x0]
  40e6a2:	mov    r8d,DWORD PTR [rax]
  40e6a5:	mov    DWORD PTR [rbx],r8d
  40e6a8:	mov    DWORD PTR [rax],edx
  40e6aa:	add    esi,0x1
  40e6ad:	add    rbx,0x4
  40e6b1:	lea    r10d,[rsi-0x1]
  40e6b5:	cmp    ecx,r10d
  40e6b8:	jge    0x40e680
  40e6ba:	cmp    r9d,ebp
  40e6bd:	jge    0x40f1d0
  40e6c3:	movsxd rax,DWORD PTR [rsp+0xa8]
  40e6cb:	lea    edx,[r11+0x1]
  40e6cf:	mov    DWORD PTR [rsp+rax*4+0x500],edx
  40e6d6:	cmp    DWORD PTR [rsp+0x38],0x61
  40e6db:	jle    0x40e6e7
  40e6dd:	mov    ecx,0x3e9
  40e6e2:	call   0x404780
  40e6e7:	movsxd rax,DWORD PTR [rsp+0xa8]
  40e6ef:	mov    esi,DWORD PTR [rsp+rax*4+0x1e0]
  40e6f6:	mov    r11d,DWORD PTR [rsp+rax*4+0x500]
  40e6fe:	mov    DWORD PTR [rsp+0x74],esi
  40e702:	mov    esi,DWORD PTR [rsp+rax*4+0x370]
  40e709:	mov    DWORD PTR [rsp+0x50],esi
  40e70d:	mov    edx,DWORD PTR [rsp+0x50]
  40e711:	sub    edx,DWORD PTR [rsp+0x74]
  40e715:	cmp    edx,0x13
  40e718:	jg     0x40e5fd
  40e71e:	add    edx,0x1
  40e721:	xor    eax,eax
  40e723:	cmp    edx,0x1
  40e726:	jle    0x40ed47
  40e72c:	nop    DWORD PTR [rax+0x0]
  40e730:	lea    rsi,[rip+0x8069]        # 0x4167a0
  40e737:	mov    ecx,eax
  40e739:	add    rax,0x1
  40e73d:	cmp    edx,DWORD PTR [rsi+rax*4]
  40e740:	jg     0x40e730
  40e742:	mov    DWORD PTR [rsp+0x78],ecx
  40e746:	mov    r10,r12
  40e749:	movsxd rax,DWORD PTR [rsp+0x78]
  40e74e:	lea    rsi,[rip+0x804b]        # 0x4167a0
  40e755:	mov    r13d,DWORD PTR [rsi+rax*4]
  40e759:	mov    eax,DWORD PTR [rsp+0x74]
  40e75d:	lea    r15d,[r13+rax*1+0x0]
  40e762:	cmp    r15d,DWORD PTR [rsp+0x50]
  40e767:	jg     0x40ed32
  40e76d:	mov    rsi,QWORD PTR [rsp+0x58]
  40e772:	movsxd rax,r15d
  40e775:	movsxd r14,r13d
  40e778:	mov    DWORD PTR [rsp+0x3c],r15d
  40e77d:	lea    rbx,[rsi+rax*4]
  40e781:	sub    rax,r14
  40e784:	lea    rax,[rsi+rax*4]
  40e788:	mov    QWORD PTR [rsp+0x40],rbx
  40e78d:	mov    QWORD PTR [rsp+0x48],rax
  40e792:	mov    eax,r13d
  40e795:	neg    eax
  40e797:	cdqe   
  40e799:	shl    rax,0x2
  40e79d:	mov    QWORD PTR [rsp+0x30],rax
  40e7a2:	mov    rax,QWORD PTR [rsp+0x40]
  40e7a7:	mov    rbx,QWORD PTR [rsp+0x48]
  40e7ac:	movsxd rsi,DWORD PTR [rsp+0x3c]
  40e7b1:	mov    eax,DWORD PTR [rax]
  40e7b3:	lea    ebp,[rax+r11*1]
  40e7b7:	mov    DWORD PTR [rsp+0x60],eax
  40e7bb:	mov    rax,rbp
  40e7be:	mov    DWORD PTR [rsp+0x70],ebp
  40e7c2:	add    rbp,r10
  40e7c5:	lea    edi,[rax+0x1]
  40e7c8:	mov    DWORD PTR [rsp+0x38],edi
  40e7cc:	lea    edi,[rax+0x2]
  40e7cf:	add    eax,0x3
  40e7d2:	mov    DWORD PTR [rsp+0x64],eax
  40e7d6:	mov    DWORD PTR [rsp+0x54],edi
  40e7da:	jmp    0x40e802
  40e7dc:	nop    DWORD PTR [rax+0x0]
  40e7e0:	seta   al
  40e7e3:	test   al,al
  40e7e5:	je     0x40e951
  40e7eb:	mov    eax,DWORD PTR [rbx]
  40e7ed:	movsxd rsi,edi
  40e7f0:	mov    DWORD PTR [rbx+r14*4],eax
  40e7f4:	add    rbx,QWORD PTR [rsp+0x30]
  40e7f9:	cmp    r15d,esi
  40e7fc:	jg     0x40e95a
  40e802:	mov    ecx,DWORD PTR [rbx]
  40e804:	mov    edi,esi
  40e806:	movzx  edx,BYTE PTR [rbp+0x0]
  40e80a:	sub    edi,r13d
  40e80d:	mov    r12,rbx
  40e810:	add    ecx,r11d
  40e813:	mov    eax,ecx
  40e815:	cmp    BYTE PTR [r10+rax*1],dl
  40e819:	jne    0x40e7e0
  40e81b:	mov    edx,DWORD PTR [rsp+0x38]
  40e81f:	lea    eax,[rcx+0x1]
  40e822:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e827:	cmp    BYTE PTR [r10+rax*1],dl
  40e82b:	jne    0x40e7e0
  40e82d:	mov    edx,DWORD PTR [rsp+0x54]
  40e831:	lea    eax,[rcx+0x2]
  40e834:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e839:	cmp    BYTE PTR [r10+rax*1],dl
  40e83d:	jne    0x40e7e0
  40e83f:	mov    edx,DWORD PTR [rsp+0x64]
  40e843:	lea    eax,[rcx+0x3]
  40e846:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e84b:	cmp    BYTE PTR [r10+rax*1],dl
  40e84f:	jne    0x40e7e0
  40e851:	mov    edx,DWORD PTR [rsp+0x70]
  40e855:	lea    eax,[rcx+0x4]
  40e858:	add    edx,0x4
  40e85b:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e860:	cmp    BYTE PTR [r10+rax*1],dl
  40e864:	jne    0x40e7e0
  40e86a:	mov    edx,DWORD PTR [rsp+0x70]
  40e86e:	lea    eax,[rcx+0x5]
  40e871:	add    edx,0x5
  40e874:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e879:	cmp    BYTE PTR [r10+rax*1],dl
  40e87d:	jne    0x40e7e0
  40e883:	mov    edx,DWORD PTR [rsp+0x70]
  40e887:	lea    eax,[rcx+0x6]
  40e88a:	add    edx,0x6
  40e88d:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e892:	cmp    BYTE PTR [r10+rax*1],dl
  40e896:	jne    0x40e7e0
  40e89c:	mov    edx,DWORD PTR [rsp+0x70]
  40e8a0:	lea    eax,[rcx+0x7]
  40e8a3:	add    edx,0x7
  40e8a6:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e8ab:	cmp    BYTE PTR [r10+rax*1],dl
  40e8af:	jne    0x40e7e0
  40e8b5:	mov    edx,DWORD PTR [rsp+0x70]
  40e8b9:	lea    eax,[rcx+0x8]
  40e8bc:	add    edx,0x8
  40e8bf:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e8c4:	cmp    BYTE PTR [r10+rax*1],dl
  40e8c8:	jne    0x40e7e0
  40e8ce:	mov    edx,DWORD PTR [rsp+0x70]
  40e8d2:	lea    eax,[rcx+0x9]
  40e8d5:	add    edx,0x9
  40e8d8:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e8dd:	cmp    BYTE PTR [r10+rax*1],dl
  40e8e1:	jne    0x40e7e0
  40e8e7:	mov    edx,DWORD PTR [rsp+0x70]
  40e8eb:	lea    eax,[rcx+0xa]
  40e8ee:	add    edx,0xa
  40e8f1:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e8f6:	cmp    BYTE PTR [r10+rax*1],dl
  40e8fa:	jne    0x40e7e0
  40e900:	mov    rax,QWORD PTR [rsp+0x68]
  40e905:	mov    r9,QWORD PTR [rsp+0x98]
  40e90d:	mov    r8,r10
  40e910:	mov    edx,DWORD PTR [rsp+0x70]
  40e914:	mov    DWORD PTR [rsp+0xdc],r11d
  40e91c:	mov    QWORD PTR [rsp+0xd0],r10
  40e924:	mov    QWORD PTR [rsp+0x28],rax
  40e929:	mov    eax,DWORD PTR [rsp+0x90]
  40e930:	mov    DWORD PTR [rsp+0x20],eax
  40e934:	call   0x411f20
  40e939:	test   al,al
  40e93b:	mov    r11d,DWORD PTR [rsp+0xdc]
  40e943:	mov    r10,QWORD PTR [rsp+0xd0]
  40e94b:	jne    0x40e7eb
  40e951:	mov    rax,QWORD PTR [rsp+0x58]
  40e956:	lea    r12,[rax+rsi*4]
  40e95a:	mov    eax,DWORD PTR [rsp+0x60]
  40e95e:	mov    DWORD PTR [r12],eax
  40e962:	mov    eax,DWORD PTR [rsp+0x3c]
  40e966:	lea    esi,[rax+0x1]
  40e969:	cmp    esi,DWORD PTR [rsp+0x50]
  40e96d:	jg     0x40ed32
  40e973:	mov    rax,QWORD PTR [rsp+0x40]
  40e978:	mov    rdi,QWORD PTR [rsp+0x48]
  40e97d:	mov    eax,DWORD PTR [rax+0x4]
  40e980:	lea    rbx,[rdi+0x4]
  40e984:	lea    ebp,[rax+r11*1]
  40e988:	mov    DWORD PTR [rsp+0x60],eax
  40e98c:	mov    rax,rbp
  40e98f:	mov    DWORD PTR [rsp+0x70],ebp
  40e993:	add    rbp,r10
  40e996:	lea    edi,[rax+0x1]
  40e999:	mov    DWORD PTR [rsp+0x38],edi
  40e99d:	lea    edi,[rax+0x2]
  40e9a0:	add    eax,0x3
  40e9a3:	mov    DWORD PTR [rsp+0x64],eax
  40e9a7:	mov    DWORD PTR [rsp+0x54],edi
  40e9ab:	jmp    0x40e9d1
  40e9ad:	nop    DWORD PTR [rax]
  40e9b0:	seta   al
  40e9b3:	test   al,al
  40e9b5:	je     0x40eb20
  40e9bb:	mov    eax,DWORD PTR [rbx]
  40e9bd:	mov    esi,edi
  40e9bf:	mov    DWORD PTR [rbx+r14*4],eax
  40e9c3:	add    rbx,QWORD PTR [rsp+0x30]
  40e9c8:	cmp    r15d,edi
  40e9cb:	jg     0x40eb2c
  40e9d1:	mov    ecx,DWORD PTR [rbx]
  40e9d3:	mov    edi,esi
  40e9d5:	movzx  edx,BYTE PTR [rbp+0x0]
  40e9d9:	sub    edi,r13d
  40e9dc:	mov    r12,rbx
  40e9df:	add    ecx,r11d
  40e9e2:	mov    eax,ecx
  40e9e4:	cmp    BYTE PTR [r10+rax*1],dl
  40e9e8:	jne    0x40e9b0
  40e9ea:	mov    edx,DWORD PTR [rsp+0x38]
  40e9ee:	lea    eax,[rcx+0x1]
  40e9f1:	movzx  edx,BYTE PTR [r10+rdx*1]
  40e9f6:	cmp    BYTE PTR [r10+rax*1],dl
  40e9fa:	jne    0x40e9b0
  40e9fc:	mov    edx,DWORD PTR [rsp+0x54]
  40ea00:	lea    eax,[rcx+0x2]
  40ea03:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ea08:	cmp    BYTE PTR [r10+rax*1],dl
  40ea0c:	jne    0x40e9b0
  40ea0e:	mov    edx,DWORD PTR [rsp+0x64]
  40ea12:	lea    eax,[rcx+0x3]
  40ea15:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ea1a:	cmp    BYTE PTR [r10+rax*1],dl
  40ea1e:	jne    0x40e9b0
  40ea20:	mov    edx,DWORD PTR [rsp+0x70]
  40ea24:	lea    eax,[rcx+0x4]
  40ea27:	add    edx,0x4
  40ea2a:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ea2f:	cmp    BYTE PTR [r10+rax*1],dl
  40ea33:	jne    0x40e9b0
  40ea39:	mov    edx,DWORD PTR [rsp+0x70]
  40ea3d:	lea    eax,[rcx+0x5]
  40ea40:	add    edx,0x5
  40ea43:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ea48:	cmp    BYTE PTR [r10+rax*1],dl
  40ea4c:	jne    0x40e9b0
  40ea52:	mov    edx,DWORD PTR [rsp+0x70]
  40ea56:	lea    eax,[rcx+0x6]
  40ea59:	add    edx,0x6
  40ea5c:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ea61:	cmp    BYTE PTR [r10+rax*1],dl
  40ea65:	jne    0x40e9b0
  40ea6b:	mov    edx,DWORD PTR [rsp+0x70]
  40ea6f:	lea    eax,[rcx+0x7]
  40ea72:	add    edx,0x7
  40ea75:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ea7a:	cmp    BYTE PTR [r10+rax*1],dl
  40ea7e:	jne    0x40e9b0
  40ea84:	mov    edx,DWORD PTR [rsp+0x70]
  40ea88:	lea    eax,[rcx+0x8]
  40ea8b:	add    edx,0x8
  40ea8e:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ea93:	cmp    BYTE PTR [r10+rax*1],dl
  40ea97:	jne    0x40e9b0
  40ea9d:	mov    edx,DWORD PTR [rsp+0x70]
  40eaa1:	lea    eax,[rcx+0x9]
  40eaa4:	add    edx,0x9
  40eaa7:	movzx  edx,BYTE PTR [r10+rdx*1]
  40eaac:	cmp    BYTE PTR [r10+rax*1],dl
  40eab0:	jne    0x40e9b0
  40eab6:	mov    edx,DWORD PTR [rsp+0x70]
  40eaba:	lea    eax,[rcx+0xa]
  40eabd:	add    edx,0xa
  40eac0:	movzx  edx,BYTE PTR [r10+rdx*1]
  40eac5:	cmp    BYTE PTR [r10+rax*1],dl
  40eac9:	jne    0x40e9b0
  40eacf:	mov    rax,QWORD PTR [rsp+0x68]
  40ead4:	mov    r9,QWORD PTR [rsp+0x98]
  40eadc:	mov    r8,r10
  40eadf:	mov    edx,DWORD PTR [rsp+0x70]
  40eae3:	mov    DWORD PTR [rsp+0xdc],r11d
  40eaeb:	mov    QWORD PTR [rsp+0xd0],r10
  40eaf3:	mov    QWORD PTR [rsp+0x28],rax
  40eaf8:	mov    eax,DWORD PTR [rsp+0x90]
  40eaff:	mov    DWORD PTR [rsp+0x20],eax
  40eb03:	call   0x411f20
  40eb08:	test   al,al
  40eb0a:	mov    r11d,DWORD PTR [rsp+0xdc]
  40eb12:	mov    r10,QWORD PTR [rsp+0xd0]
  40eb1a:	jne    0x40e9bb
  40eb20:	mov    rax,QWORD PTR [rsp+0x58]
  40eb25:	movsxd rsi,esi
  40eb28:	lea    r12,[rax+rsi*4]
  40eb2c:	mov    eax,DWORD PTR [rsp+0x60]
  40eb30:	mov    DWORD PTR [r12],eax
  40eb34:	mov    eax,DWORD PTR [rsp+0x3c]
  40eb38:	lea    esi,[rax+0x2]
  40eb3b:	cmp    esi,DWORD PTR [rsp+0x50]
  40eb3f:	jg     0x40ed32
  40eb45:	mov    rax,QWORD PTR [rsp+0x40]
  40eb4a:	mov    rdi,QWORD PTR [rsp+0x48]
  40eb4f:	mov    eax,DWORD PTR [rax+0x8]
  40eb52:	lea    rbx,[rdi+0x8]
  40eb56:	lea    ebp,[rax+r11*1]
  40eb5a:	mov    DWORD PTR [rsp+0x60],eax
  40eb5e:	mov    rax,rbp
  40eb61:	mov    DWORD PTR [rsp+0x70],ebp
  40eb65:	add    rbp,r10
  40eb68:	lea    edi,[rax+0x1]
  40eb6b:	mov    DWORD PTR [rsp+0x38],edi
  40eb6f:	lea    edi,[rax+0x2]
  40eb72:	add    eax,0x3
  40eb75:	mov    DWORD PTR [rsp+0x64],eax
  40eb79:	mov    DWORD PTR [rsp+0x54],edi
  40eb7d:	jmp    0x40eba1
  40eb7f:	nop
  40eb80:	seta   al
  40eb83:	test   al,al
  40eb85:	je     0x40ecf0
  40eb8b:	mov    eax,DWORD PTR [rbx]
  40eb8d:	mov    esi,edi
  40eb8f:	mov    DWORD PTR [rbx+r14*4],eax
  40eb93:	add    rbx,QWORD PTR [rsp+0x30]
  40eb98:	cmp    r15d,edi
  40eb9b:	jg     0x40ecfc
  40eba1:	mov    ecx,DWORD PTR [rbx]
  40eba3:	mov    edi,esi
  40eba5:	movzx  edx,BYTE PTR [rbp+0x0]
  40eba9:	sub    edi,r13d
  40ebac:	mov    r12,rbx
  40ebaf:	add    ecx,r11d
  40ebb2:	mov    eax,ecx
  40ebb4:	cmp    BYTE PTR [r10+rax*1],dl
  40ebb8:	jne    0x40eb80
  40ebba:	mov    edx,DWORD PTR [rsp+0x38]
  40ebbe:	lea    eax,[rcx+0x1]
  40ebc1:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ebc6:	cmp    BYTE PTR [r10+rax*1],dl
  40ebca:	jne    0x40eb80
  40ebcc:	mov    edx,DWORD PTR [rsp+0x54]
  40ebd0:	lea    eax,[rcx+0x2]
  40ebd3:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ebd8:	cmp    BYTE PTR [r10+rax*1],dl
  40ebdc:	jne    0x40eb80
  40ebde:	mov    edx,DWORD PTR [rsp+0x64]
  40ebe2:	lea    eax,[rcx+0x3]
  40ebe5:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ebea:	cmp    BYTE PTR [r10+rax*1],dl
  40ebee:	jne    0x40eb80
  40ebf0:	mov    edx,DWORD PTR [rsp+0x70]
  40ebf4:	lea    eax,[rcx+0x4]
  40ebf7:	add    edx,0x4
  40ebfa:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ebff:	cmp    BYTE PTR [r10+rax*1],dl
  40ec03:	jne    0x40eb80
  40ec09:	mov    edx,DWORD PTR [rsp+0x70]
  40ec0d:	lea    eax,[rcx+0x5]
  40ec10:	add    edx,0x5
  40ec13:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ec18:	cmp    BYTE PTR [r10+rax*1],dl
  40ec1c:	jne    0x40eb80
  40ec22:	mov    edx,DWORD PTR [rsp+0x70]
  40ec26:	lea    eax,[rcx+0x6]
  40ec29:	add    edx,0x6
  40ec2c:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ec31:	cmp    BYTE PTR [r10+rax*1],dl
  40ec35:	jne    0x40eb80
  40ec3b:	mov    edx,DWORD PTR [rsp+0x70]
  40ec3f:	lea    eax,[rcx+0x7]
  40ec42:	add    edx,0x7
  40ec45:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ec4a:	cmp    BYTE PTR [r10+rax*1],dl
  40ec4e:	jne    0x40eb80
  40ec54:	mov    edx,DWORD PTR [rsp+0x70]
  40ec58:	lea    eax,[rcx+0x8]
  40ec5b:	add    edx,0x8
  40ec5e:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ec63:	cmp    BYTE PTR [r10+rax*1],dl
  40ec67:	jne    0x40eb80
  40ec6d:	mov    edx,DWORD PTR [rsp+0x70]
  40ec71:	lea    eax,[rcx+0x9]
  40ec74:	add    edx,0x9
  40ec77:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ec7c:	cmp    BYTE PTR [r10+rax*1],dl
  40ec80:	jne    0x40eb80
  40ec86:	mov    edx,DWORD PTR [rsp+0x70]
  40ec8a:	lea    eax,[rcx+0xa]
  40ec8d:	add    edx,0xa
  40ec90:	movzx  edx,BYTE PTR [r10+rdx*1]
  40ec95:	cmp    BYTE PTR [r10+rax*1],dl
  40ec99:	jne    0x40eb80
  40ec9f:	mov    rax,QWORD PTR [rsp+0x68]
  40eca4:	mov    r9,QWORD PTR [rsp+0x98]
  40ecac:	mov    r8,r10
  40ecaf:	mov    edx,DWORD PTR [rsp+0x70]
  40ecb3:	mov    DWORD PTR [rsp+0xdc],r11d
  40ecbb:	mov    QWORD PTR [rsp+0xd0],r10
  40ecc3:	mov    QWORD PTR [rsp+0x28],rax
  40ecc8:	mov    eax,DWORD PTR [rsp+0x90]
  40eccf:	mov    DWORD PTR [rsp+0x20],eax
  40ecd3:	call   0x411f20
  40ecd8:	test   al,al
  40ecda:	mov    r11d,DWORD PTR [rsp+0xdc]
  40ece2:	mov    r10,QWORD PTR [rsp+0xd0]
  40ecea:	jne    0x40eb8b
  40ecf0:	mov    rax,QWORD PTR [rsp+0x58]
  40ecf5:	movsxd rsi,esi
  40ecf8:	lea    r12,[rax+rsi*4]
  40ecfc:	mov    eax,DWORD PTR [rsp+0x60]
  40ed00:	add    DWORD PTR [rsp+0x3c],0x3
  40ed05:	mov    DWORD PTR [r12],eax
  40ed09:	mov    rax,QWORD PTR [rsp+0x68]
  40ed0e:	mov    edx,DWORD PTR [rax]
  40ed10:	test   edx,edx
  40ed12:	js     0x40f1ba
  40ed18:	add    QWORD PTR [rsp+0x40],0xc
  40ed1e:	add    QWORD PTR [rsp+0x48],0xc
  40ed24:	mov    esi,DWORD PTR [rsp+0x50]
  40ed28:	cmp    DWORD PTR [rsp+0x3c],esi
  40ed2c:	jle    0x40e7a2
  40ed32:	sub    DWORD PTR [rsp+0x78],0x1
  40ed37:	mov    eax,DWORD PTR [rsp+0x78]
  40ed3b:	cmp    eax,0xffffffff
  40ed3e:	jne    0x40e749
  40ed44:	mov    r12,r10
  40ed47:	mov    rax,QWORD PTR [rsp+0x68]
  40ed4c:	mov    ecx,DWORD PTR [rax]
  40ed4e:	test   ecx,ecx
  40ed50:	js     0x40f1ba
  40ed56:	mov    eax,DWORD PTR [rsp+0xa8]
  40ed5d:	test   eax,eax
  40ed5f:	mov    DWORD PTR [rsp+0x38],eax
  40ed63:	je     0x40eea0
  40ed69:	sub    eax,0x1
  40ed6c:	mov    DWORD PTR [rsp+0xa8],eax
  40ed73:	jmp    0x40e6d6
  40ed78:	mov    edx,DWORD PTR [rsp+0xac]
  40ed7f:	test   edx,edx
  40ed81:	js     0x40e257
  40ed87:	mov    rsi,QWORD PTR [rsp+0x98]
  40ed8f:	movsxd r8,edx
  40ed92:	mov    r11,QWORD PTR [rsp+0x88]
  40ed9a:	lea    r10,[r13+r8*1+0x0]
  40ed9f:	xor    ecx,ecx
  40eda1:	lea    r9,[rsi+r8*2]
  40eda5:	xor    ebx,ebx
  40eda7:	sar    eax,0x8
  40edaa:	sub    edx,0x1
  40edad:	mov    WORD PTR [r9+rcx*2],bx
  40edb2:	movzx  r8d,BYTE PTR [r10+rcx*1]
  40edb7:	sub    rcx,0x1
  40edbb:	shl    r8d,0x8
  40edbf:	or     eax,r8d
  40edc2:	movsxd r8,eax
  40edc5:	add    DWORD PTR [r11+r8*4],0x1
  40edca:	cmp    edx,0xffffffff
  40edcd:	jne    0x40eda5
  40edcf:	jmp    0x40e257
  40edd4:	mov    ecx,DWORD PTR [rsp+0xac]
  40eddb:	test   ecx,ecx
  40eddd:	js     0x40e3e5
  40ede3:	movsxd r8,ecx
  40ede6:	add    r8,r13
  40ede9:	movzx  edx,BYTE PTR [r8]
  40eded:	shr    ax,0x8
  40edf1:	mov    rsi,QWORD PTR [rsp+0x88]
  40edf9:	sub    r8,0x1
  40edfd:	shl    edx,0x8
  40ee00:	or     eax,edx
  40ee02:	movzx  edx,ax
  40ee05:	lea    r9,[rsi+rdx*4]
  40ee09:	mov    esi,DWORD PTR [r9]
  40ee0c:	lea    edx,[rsi-0x1]
  40ee0f:	mov    rsi,QWORD PTR [rsp+0x58]
  40ee14:	mov    DWORD PTR [r9],edx
  40ee17:	movsxd rdx,edx
  40ee1a:	mov    DWORD PTR [rsi+rdx*4],ecx
  40ee1d:	sub    ecx,0x1
  40ee20:	cmp    ecx,0xffffffff
  40ee23:	jne    0x40ede9
  40ee25:	jmp    0x40e3e5
  40ee2a:	nop    WORD PTR [rax+rax*1+0x0]
  40ee30:	jle    0x40e6aa
  40ee36:	movsxd rax,ecx
  40ee39:	lea    edx,[rcx-0x1]
  40ee3c:	mov    QWORD PTR [rsp+0x30],rbx
  40ee41:	lea    rax,[r13+rax*4+0x0]
  40ee46:	jmp    0x40ee76
  40ee48:	nop    DWORD PTR [rax+rax*1+0x0]
  40ee50:	movsxd r8,r9d
  40ee53:	sub    r9d,0x1
  40ee57:	lea    r8,[r13+r8*4+0x0]
  40ee5c:	mov    ebx,DWORD PTR [r8]
  40ee5f:	mov    DWORD PTR [rax],ebx
  40ee61:	mov    DWORD PTR [r8],ecx
  40ee64:	mov    ecx,edx
  40ee66:	sub    rax,0x4
  40ee6a:	sub    edx,0x1
  40ee6d:	cmp    ecx,r10d
  40ee70:	jl     0x40e6ba
  40ee76:	mov    ecx,DWORD PTR [rax]
  40ee78:	lea    r8d,[rcx+r11*1]
  40ee7c:	movzx  r8d,BYTE PTR [r12+r8*1]
  40ee81:	cmp    r8d,r15d
  40ee84:	je     0x40ee50
  40ee86:	js     0x40ee8c
  40ee88:	mov    ecx,edx
  40ee8a:	jmp    0x40ee66
  40ee8c:	mov    rbx,QWORD PTR [rsp+0x30]
  40ee91:	mov    r8d,DWORD PTR [rbx]
  40ee94:	mov    DWORD PTR [rbx],ecx
  40ee96:	mov    ecx,edx
  40ee98:	mov    DWORD PTR [rax],r8d
  40ee9b:	jmp    0x40e6aa
  40eea0:	mov    rax,QWORD PTR [rsp+0x68]
  40eea5:	mov    esi,DWORD PTR [rsp+0xd8]
  40eeac:	mov    r11,r12
  40eeaf:	add    DWORD PTR [rsp+0xb0],esi
  40eeb6:	mov    eax,DWORD PTR [rax]
  40eeb8:	test   eax,eax
  40eeba:	js     0x40f1ba
  40eec0:	mov    rax,QWORD PTR [rsp+0x80]
  40eec8:	mov    eax,DWORD PTR [rax]
  40eeca:	mov    rsi,QWORD PTR [rsp+0x80]
  40eed2:	or     eax,0x200000
  40eed7:	mov    DWORD PTR [rsi],eax
  40eed9:	add    DWORD PTR [rsp+0x7c],0x1
  40eede:	add    QWORD PTR [rsp+0x80],0x4
  40eee7:	mov    eax,DWORD PTR [rsp+0x7c]
  40eeeb:	cmp    eax,0x100
  40eef0:	jne    0x40e53c
  40eef6:	movsxd rbx,DWORD PTR [rsp+0x94]
  40eefe:	mov    r13,r11
  40ef01:	cmp    BYTE PTR [rsp+rbx*1+0xe0],0x0
  40ef09:	je     0x40ef15
  40ef0b:	mov    ecx,0x3ee
  40ef10:	call   0x404780
  40ef15:	mov    r11d,DWORD PTR [rsp+0x94]
  40ef1d:	mov    r10,QWORD PTR [rsp+0x88]
  40ef25:	lea    r9,[rsp+0xa90]
  40ef2d:	lea    r8,[rsp+0xe90]
  40ef35:	xor    edx,edx
  40ef37:	mov    eax,edx
  40ef39:	shl    eax,0x8
  40ef3c:	add    eax,r11d
  40ef3f:	cdqe   
  40ef41:	mov    ecx,DWORD PTR [r10+rax*4]
  40ef45:	mov    eax,DWORD PTR [r10+rax*4+0x4]
  40ef4a:	and    eax,0xffdfffff
  40ef4f:	and    ecx,0xffdfffff
  40ef55:	sub    eax,0x1
  40ef58:	mov    DWORD PTR [r9+rdx*4],ecx
  40ef5c:	mov    DWORD PTR [r8+rdx*4],eax
  40ef60:	add    rdx,0x1
  40ef64:	cmp    rdx,0x100
  40ef6b:	jne    0x40ef37
  40ef6d:	mov    rax,QWORD PTR [rsp+0xb8]
  40ef75:	mov    ecx,DWORD PTR [rsp+rbx*4+0xa90]
  40ef7c:	mov    eax,DWORD PTR [rax]
  40ef7e:	mov    edx,eax
  40ef80:	mov    DWORD PTR [rsp+0x30],eax
  40ef84:	and    edx,0xffdfffff
  40ef8a:	cmp    ecx,edx
  40ef8c:	jle    0x40eff1
  40ef8e:	mov    rsi,QWORD PTR [rsp+0x58]
  40ef93:	movsxd rax,edx
  40ef96:	lea    r8,[rsi+rax*4]
  40ef9a:	mov    eax,DWORD PTR [r8]
  40ef9d:	mov    esi,DWORD PTR [rsp+0x90]
  40efa4:	sub    eax,0x1
  40efa7:	lea    ecx,[rax+rsi*1]
  40efaa:	test   eax,eax
  40efac:	cmovs  eax,ecx
  40efaf:	movsxd rcx,eax
  40efb2:	movzx  r9d,BYTE PTR [r13+rcx*1+0x0]
  40efb8:	cmp    BYTE PTR [rsp+r9*1+0xe0],0x0
  40efc1:	jne    0x40efdf
  40efc3:	movsxd rcx,DWORD PTR [rsp+r9*4+0xa90]
  40efcb:	mov    rsi,QWORD PTR [rsp+0x58]
  40efd0:	lea    r10d,[rcx+0x1]
  40efd4:	mov    DWORD PTR [rsi+rcx*4],eax
  40efd7:	mov    DWORD PTR [rsp+r9*4+0xa90],r10d
  40efdf:	mov    ecx,DWORD PTR [rsp+rbx*4+0xa90]
  40efe6:	add    edx,0x1
  40efe9:	add    r8,0x4
  40efed:	cmp    ecx,edx
  40efef:	jg     0x40ef9a
  40eff1:	mov    eax,DWORD PTR [rsp+0x94]
  40eff8:	mov    rsi,QWORD PTR [rsp+0x88]
  40f000:	mov    edx,DWORD PTR [rsp+rbx*4+0xe90]
  40f007:	add    eax,0x1
  40f00a:	shl    eax,0x8
  40f00d:	cdqe   
  40f00f:	lea    rsi,[rsi+rax*4]
  40f013:	mov    eax,DWORD PTR [rsi]
  40f015:	and    eax,0xffdfffff
  40f01a:	sub    eax,0x1
  40f01d:	cmp    edx,eax
  40f01f:	jge    0x40f087
  40f021:	mov    rdi,QWORD PTR [rsp+0x58]
  40f026:	movsxd rdx,eax
  40f029:	lea    r9,[rdi+rdx*4]
  40f02d:	mov    edi,DWORD PTR [r9]
  40f030:	lea    edx,[rdi-0x1]
  40f033:	mov    edi,DWORD PTR [rsp+0x90]
  40f03a:	test   edx,edx
  40f03c:	lea    r8d,[rdx+rdi*1]
  40f040:	cmovs  edx,r8d
  40f044:	movsxd r8,edx
  40f047:	movzx  r10d,BYTE PTR [r13+r8*1+0x0]
  40f04d:	cmp    BYTE PTR [rsp+r10*1+0xe0],0x0
  40f056:	jne    0x40f075
  40f058:	movsxd r8,DWORD PTR [rsp+r10*4+0xe90]
  40f060:	mov    rdi,QWORD PTR [rsp+0x58]
  40f065:	lea    r11d,[r8-0x1]
  40f069:	mov    DWORD PTR [rdi+r8*4],edx
  40f06d:	mov    DWORD PTR [rsp+r10*4+0xe90],r11d
  40f075:	mov    edx,DWORD PTR [rsp+rbx*4+0xe90]
  40f07c:	sub    eax,0x1
  40f07f:	sub    r9,0x4
  40f083:	cmp    edx,eax
  40f085:	jl     0x40f02d
  40f087:	lea    eax,[rcx-0x1]
  40f08a:	cmp    eax,edx
  40f08c:	je     0x40f0a5
  40f08e:	test   ecx,ecx
  40f090:	jne    0x40f09b
  40f092:	cmp    DWORD PTR [rsp+0xac],edx
  40f099:	je     0x40f0a5
  40f09b:	mov    ecx,0x3ef
  40f0a0:	call   0x404780
  40f0a5:	mov    r8d,DWORD PTR [rsp+0x94]
  40f0ad:	mov    rcx,QWORD PTR [rsp+0x88]
  40f0b5:	xor    edx,edx
  40f0b7:	mov    eax,edx
  40f0b9:	add    edx,0x1
  40f0bc:	shl    eax,0x8
  40f0bf:	add    eax,r8d
  40f0c2:	cdqe   
  40f0c4:	or     DWORD PTR [rcx+rax*4],0x200000
  40f0cb:	cmp    edx,0x100
  40f0d1:	jne    0x40f0b7
  40f0d3:	mov    BYTE PTR [rsp+rbx*1+0xe0],0x1
  40f0db:	mov    rbx,QWORD PTR [rsp+0xc0]
  40f0e3:	cmp    QWORD PTR [rsp+0xa0],rbx
  40f0eb:	je     0x40f1ac
  40f0f1:	mov    rax,QWORD PTR [rsp+0xb8]
  40f0f9:	xor    ecx,ecx
  40f0fb:	mov    edx,DWORD PTR [rax]
  40f0fd:	mov    eax,DWORD PTR [rsi]
  40f0ff:	and    edx,0xffdfffff
  40f105:	and    eax,0xffdfffff
  40f10a:	sub    eax,edx
  40f10c:	cmp    eax,0xfffe
  40f111:	jle    0x40f125
  40f113:	add    ecx,0x1
  40f116:	mov    r8d,eax
  40f119:	sar    r8d,cl
  40f11c:	cmp    r8d,0xfffe
  40f123:	jg     0x40f113
  40f125:	sub    eax,0x1
  40f128:	js     0x40f17a
  40f12a:	mov    rsi,QWORD PTR [rsp+0x58]
  40f12f:	movsxd r8,eax
  40f132:	movsxd rdx,edx
  40f135:	add    rdx,r8
  40f138:	mov    r11,QWORD PTR [rsp+0x98]
  40f140:	mov    r8d,eax
  40f143:	lea    r9,[rsi+rdx*4]
  40f147:	movsxd rbx,DWORD PTR [r9]
  40f14a:	mov    r10d,r8d
  40f14d:	sar    r10d,cl
  40f150:	cmp    ebx,0x21
  40f153:	mov    rdx,rbx
  40f156:	mov    WORD PTR [r11+rbx*2],r10w
  40f15b:	jg     0x40f16c
  40f15d:	add    edx,DWORD PTR [rsp+0x90]
  40f164:	movsxd rdx,edx
  40f167:	mov    WORD PTR [r11+rdx*2],r10w
  40f16c:	sub    r8d,0x1
  40f170:	sub    r9,0x4
  40f174:	cmp    r8d,0xffffffff
  40f178:	jne    0x40f147
  40f17a:	sar    eax,cl
  40f17c:	cmp    eax,0xffff
  40f181:	jle    0x40f18d
  40f183:	mov    ecx,0x3ea
  40f188:	call   0x404780
  40f18d:	add    QWORD PTR [rsp+0xa0],0x4
  40f196:	mov    rax,QWORD PTR [rsp+0xa0]
  40f19e:	cmp    rax,QWORD PTR [rsp+0xc8]
  40f1a6:	jne    0x40e4ff
  40f1ac:	cmp    DWORD PTR [rsp+0xb4],0x3
  40f1b4:	jg     0x40f3c4
  40f1ba:	add    rsp,0x1298
  40f1c1:	pop    rbx
  40f1c2:	pop    rsi
  40f1c3:	pop    rdi
  40f1c4:	pop    rbp
  40f1c5:	pop    r12
  40f1c7:	pop    r13
  40f1c9:	pop    r14
  40f1cb:	pop    r15
  40f1cd:	ret    
  40f1ce:	xchg   ax,ax
  40f1d0:	mov    edx,ebp
  40f1d2:	sub    edx,DWORD PTR [rsp+0x74]
  40f1d6:	mov    eax,r10d
  40f1d9:	sub    eax,ebp
  40f1db:	cmp    edx,eax
  40f1dd:	cmovg  edx,eax
  40f1e0:	mov    eax,r10d
  40f1e3:	sub    eax,edx
  40f1e5:	test   edx,edx
  40f1e7:	jle    0x40f217
  40f1e9:	mov    rsi,QWORD PTR [rsp+0x58]
  40f1ee:	sub    edx,0x1
  40f1f1:	cdqe   
  40f1f3:	lea    rdx,[r14+rdx*1+0x1]
  40f1f8:	lea    rax,[rsi+rax*4]
  40f1fc:	lea    r8,[rsi+rdx*4]
  40f200:	mov    ebx,DWORD PTR [rax]
  40f202:	mov    edx,DWORD PTR [rdi]
  40f204:	add    rdi,0x4
  40f208:	add    rax,0x4
  40f20c:	mov    DWORD PTR [rdi-0x4],ebx
  40f20f:	mov    DWORD PTR [rax-0x4],edx
  40f212:	cmp    rdi,r8
  40f215:	jne    0x40f200
  40f217:	mov    ebx,DWORD PTR [rsp+0x50]
  40f21b:	mov    eax,r9d
  40f21e:	sub    eax,ecx
  40f220:	mov    edx,ebx
  40f222:	sub    edx,r9d
  40f225:	cmp    edx,eax
  40f227:	cmovg  edx,eax
  40f22a:	sub    ebx,edx
  40f22c:	add    ebx,0x1
  40f22f:	test   edx,edx
  40f231:	jle    0x40f264
  40f233:	movsxd rsi,r10d
  40f236:	mov    rdi,QWORD PTR [rsp+0x58]
  40f23b:	sub    edx,0x1
  40f23e:	lea    rdx,[rsi+rdx*1+0x1]
  40f243:	lea    rax,[rdi+rsi*4]
  40f247:	lea    r8,[rdi+rdx*4]
  40f24b:	movsxd rdx,ebx
  40f24e:	sub    rdx,rsi
  40f251:	mov    ebx,DWORD PTR [rax]
  40f253:	mov    esi,DWORD PTR [rax+rdx*4]
  40f256:	mov    DWORD PTR [rax],esi
  40f258:	mov    DWORD PTR [rax+rdx*4],ebx
  40f25b:	add    rax,0x4
  40f25f:	cmp    rax,r8
  40f262:	jne    0x40f251
  40f264:	mov    ebx,DWORD PTR [rsp+0x74]
  40f268:	mov    esi,DWORD PTR [rsp+0x50]
  40f26c:	mov    eax,ecx
  40f26e:	sub    eax,r9d
  40f271:	lea    r9d,[r11+0x1]
  40f275:	lea    edx,[r10+rbx*1]
  40f279:	add    eax,esi
  40f27b:	lea    ecx,[rax+0x1]
  40f27e:	sub    edx,ebp
  40f280:	lea    r8d,[rdx-0x1]
  40f284:	sub    esi,ecx
  40f286:	mov    r10d,r8d
  40f289:	sub    r10d,ebx
  40f28c:	mov    ebx,esi
  40f28e:	cmp    r10d,esi
  40f291:	jl     0x40f2b1
  40f293:	mov    esi,r10d
  40f296:	mov    r10d,ebx
  40f299:	mov    ebx,esi
  40f29b:	mov    esi,DWORD PTR [rsp+0x50]
  40f29f:	mov    DWORD PTR [rsp+0x50],r8d
  40f2a4:	mov    r8d,esi
  40f2a7:	mov    esi,ecx
  40f2a9:	mov    ecx,DWORD PTR [rsp+0x74]
  40f2ad:	mov    DWORD PTR [rsp+0x74],esi
  40f2b1:	mov    edi,eax
  40f2b3:	mov    esi,r11d
  40f2b6:	sub    edi,edx
  40f2b8:	cmp    edi,r10d
  40f2bb:	jg     0x40f2db
  40f2bd:	mov    edi,r10d
  40f2c0:	mov    r10d,eax
  40f2c3:	mov    eax,r8d
  40f2c6:	mov    r8d,r10d
  40f2c9:	mov    r10d,edx
  40f2cc:	mov    esi,r9d
  40f2cf:	mov    edx,DWORD PTR [rsp+0x74]
  40f2d3:	mov    r9d,r11d
  40f2d6:	mov    DWORD PTR [rsp+0x74],r10d
  40f2db:	cmp    ebx,edi
  40f2dd:	jge    0x40f2fc
  40f2df:	mov    r10d,r11d
  40f2e2:	mov    r11d,r9d
  40f2e5:	mov    r9d,r10d
  40f2e8:	mov    r10d,DWORD PTR [rsp+0x50]
  40f2ed:	mov    DWORD PTR [rsp+0x50],eax
  40f2f1:	mov    eax,r10d
  40f2f4:	mov    r10d,ecx
  40f2f7:	mov    ecx,edx
  40f2f9:	mov    edx,r10d
  40f2fc:	movsxd r10,DWORD PTR [rsp+0xa8]
  40f304:	mov    ebx,DWORD PTR [rsp+0x50]
  40f308:	mov    edi,DWORD PTR [rsp+0x74]
  40f30c:	mov    DWORD PTR [rsp+r10*4+0x1e0],ecx
  40f314:	movsxd rcx,DWORD PTR [rsp+0x38]
  40f319:	mov    DWORD PTR [rsp+r10*4+0x370],ebx
  40f321:	mov    DWORD PTR [rsp+r10*4+0x500],r11d
  40f329:	mov    DWORD PTR [rsp+rcx*4+0x370],eax
  40f330:	lea    eax,[rcx+0x1]
  40f333:	mov    rbx,rcx
  40f336:	add    ebx,0x2
  40f339:	mov    DWORD PTR [rsp+rcx*4+0x1e0],edx
  40f340:	mov    DWORD PTR [rsp+rcx*4+0x500],r9d
  40f348:	cdqe   
  40f34a:	mov    DWORD PTR [rsp+0x38],ebx
  40f34e:	mov    DWORD PTR [rsp+rax*4+0x1e0],edi
  40f355:	mov    DWORD PTR [rsp+rax*4+0x370],r8d
  40f35d:	mov    DWORD PTR [rsp+rax*4+0x500],esi
  40f364:	lea    eax,[rbx-0x1]
  40f367:	mov    DWORD PTR [rsp+0xa8],eax
  40f36e:	jmp    0x40e6d6
  40f373:	mov    eax,esi
  40f375:	mov    QWORD PTR [rsp+0x30],r11
  40f37a:	sub    eax,ebx
  40f37c:	add    eax,0x1
  40f37f:	mov    edi,eax
  40f381:	mov    DWORD PTR [rsp+0xd8],eax
  40f388:	call   QWORD PTR [rip+0xcff6]        # 0x41c384
  40f38e:	lea    rcx,[rax+0x60]
  40f392:	mov    eax,DWORD PTR [rsp+0xb0]
  40f399:	mov    r9d,DWORD PTR [rsp+0x7c]
  40f39e:	mov    r8d,DWORD PTR [rsp+0x94]
  40f3a6:	lea    rdx,[rip+0x7333]        # 0x4166e0
  40f3ad:	mov    DWORD PTR [rsp+0x28],edi
  40f3b1:	mov    DWORD PTR [rsp+0x20],eax
  40f3b5:	call   0x4112b0
  40f3ba:	mov    r11,QWORD PTR [rsp+0x30]
  40f3bf:	jmp    0x40e5a6
  40f3c4:	mov    esi,DWORD PTR [rsp+0x90]
  40f3cb:	mov    edi,DWORD PTR [rsp+0xb0]
  40f3d2:	call   QWORD PTR [rip+0xcfac]        # 0x41c384
  40f3d8:	lea    rdx,[rip+0x7331]        # 0x416710
  40f3df:	lea    rcx,[rax+0x60]
  40f3e3:	mov    ebx,esi
  40f3e5:	mov    r9d,edi
  40f3e8:	mov    r8d,esi
  40f3eb:	sub    ebx,edi
  40f3ed:	mov    DWORD PTR [rsp+0x1300],ebx
  40f3f4:	add    rsp,0x1298
  40f3fb:	pop    rbx
  40f3fc:	pop    rsi
  40f3fd:	pop    rdi
  40f3fe:	pop    rbp
  40f3ff:	pop    r12
  40f401:	pop    r13
  40f403:	pop    r14
  40f405:	pop    r15
  40f407:	jmp    0x4112b0
  40f40c:	nop    DWORD PTR [rax+0x0]
  40f410:	push   r13
  40f412:	push   r12
  40f414:	push   rbp
  40f415:	push   rdi
  40f416:	push   rsi
  40f417:	push   rbx
  40f418:	sub    rsp,0x58
  40f41c:	mov    rbx,QWORD PTR [rcx+0x38]
  40f420:	mov    rsi,rcx
  40f423:	mov    rcx,QWORD PTR [rcx+0x40]
  40f427:	mov    edi,DWORD PTR [rsi+0x6c]
  40f42a:	mov    r13,QWORD PTR [rsi+0x28]
  40f42e:	mov    r12d,DWORD PTR [rsi+0x290]
  40f435:	mov    edx,DWORD PTR [rsi+0x58]
  40f438:	cmp    edi,0x270f
  40f43e:	jle    0x40f527
  40f444:	lea    eax,[rdi+0x22]
  40f447:	lea    r8d,[rdi+0x23]
  40f44b:	test   al,0x1
  40f44d:	cmovne eax,r8d
  40f451:	xor    ebp,ebp
  40f453:	test   edx,edx
  40f455:	cdqe   
  40f457:	lea    r8,[rcx+rax*1]
  40f45b:	jle    0x40f46d
  40f45d:	mov    ebp,edi
  40f45f:	shl    ebp,0x5
  40f462:	add    ebp,edi
  40f464:	cmp    edx,0x64
  40f467:	jle    0x40f560
  40f46d:	lea    rax,[rsp+0x4c]
  40f472:	mov    rdx,rcx
  40f475:	mov    DWORD PTR [rsp+0x28],r12d
  40f47a:	mov    DWORD PTR [rsp+0x20],edi
  40f47e:	mov    r9,r13
  40f481:	mov    rcx,rbx
  40f484:	mov    QWORD PTR [rsp+0x30],rax
  40f489:	mov    DWORD PTR [rsp+0x4c],ebp
  40f48d:	call   0x40e0c0
  40f492:	cmp    r12d,0x2
  40f496:	jg     0x40f580
  40f49c:	mov    r10d,DWORD PTR [rsp+0x4c]
  40f4a1:	test   r10d,r10d
  40f4a4:	js     0x40f500
  40f4a6:	mov    r8d,DWORD PTR [rsi+0x6c]
  40f4aa:	mov    DWORD PTR [rsi+0x30],0xffffffff
  40f4b1:	test   r8d,r8d
  40f4b4:	jle    0x40f4e3
  40f4b6:	mov    r9d,DWORD PTR [rbx]
  40f4b9:	xor    eax,eax
  40f4bb:	lea    rdx,[rbx+0x4]
  40f4bf:	test   r9d,r9d
  40f4c2:	jne    0x40f4db
  40f4c4:	jmp    0x40f5d0
  40f4c9:	nop    DWORD PTR [rax+0x0]
  40f4d0:	add    rdx,0x4
  40f4d4:	mov    ecx,DWORD PTR [rdx-0x4]
  40f4d7:	test   ecx,ecx
  40f4d9:	je     0x40f544
  40f4db:	add    eax,0x1
  40f4de:	cmp    eax,r8d
  40f4e1:	jne    0x40f4d0
  40f4e3:	mov    ecx,0x3eb
  40f4e8:	call   0x404780
  40f4ed:	nop
  40f4ee:	add    rsp,0x58
  40f4f2:	pop    rbx
  40f4f3:	pop    rsi
  40f4f4:	pop    rdi
  40f4f5:	pop    rbp
  40f4f6:	pop    r12
  40f4f8:	pop    r13
  40f4fa:	ret    
  40f4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f500:	cmp    r12d,0x1
  40f504:	jle    0x40f527
  40f506:	call   QWORD PTR [rip+0xce78]        # 0x41c384
  40f50c:	lea    rcx,[rip+0x722d]        # 0x416740
  40f513:	lea    r9,[rax+0x60]
  40f517:	mov    r8d,0x35
  40f51d:	mov    edx,0x1
  40f522:	call   0x411290
  40f527:	mov    rdx,QWORD PTR [rsi+0x20]
  40f52b:	mov    rcx,QWORD PTR [rsi+0x18]
  40f52f:	mov    r9d,edi
  40f532:	mov    DWORD PTR [rsp+0x20],r12d
  40f537:	mov    r8,r13
  40f53a:	call   0x40d7b0
  40f53f:	jmp    0x40f4a6
  40f544:	cmp    eax,0xffffffff
  40f547:	mov    DWORD PTR [rsi+0x30],eax
  40f54a:	je     0x40f4e3
  40f54c:	add    rsp,0x58
  40f550:	pop    rbx
  40f551:	pop    rsi
  40f552:	pop    rdi
  40f553:	pop    rbp
  40f554:	pop    r12
  40f556:	pop    r13
  40f558:	ret    
  40f559:	nop    DWORD PTR [rax+0x0]
  40f560:	lea    r9d,[rdx-0x1]
  40f564:	mov    edx,0x55555556
  40f569:	mov    eax,r9d
  40f56c:	sar    r9d,0x1f
  40f570:	imul   edx
  40f572:	sub    edx,r9d
  40f575:	imul   edx,edi
  40f578:	mov    ebp,edx
  40f57a:	jmp    0x40f46d
  40f57f:	nop
  40f580:	sub    ebp,DWORD PTR [rsp+0x4c]
  40f584:	call   QWORD PTR [rip+0xcdfa]        # 0x41c384
  40f58a:	pxor   xmm0,xmm0
  40f58e:	lea    rcx,[rax+0x60]
  40f592:	pxor   xmm1,xmm1
  40f596:	lea    rdx,[rip+0x71db]        # 0x416778
  40f59d:	pxor   xmm2,xmm2
  40f5a1:	mov    r9d,edi
  40f5a4:	cvtsi2ss xmm0,ebp
  40f5a8:	mov    r8d,ebp
  40f5ab:	cvtsi2ss xmm1,edi
  40f5af:	divss  xmm0,xmm1
  40f5b3:	cvtss2sd xmm2,xmm0
  40f5b7:	movsd  QWORD PTR [rsp+0x20],xmm2
  40f5bd:	call   0x4112b0
  40f5c2:	jmp    0x40f49c
  40f5c7:	nop    WORD PTR [rax+rax*1+0x0]
  40f5d0:	mov    DWORD PTR [rsi+0x30],0x0
  40f5d7:	jmp    0x40f4ee
  40f5dc:	nop
  40f5dd:	nop
  40f5de:	nop
  40f5df:	nop
  40f5e0:	push   r15
  40f5e2:	push   r14
  40f5e4:	mov    eax,0x1498
  40f5e9:	push   r13
  40f5eb:	push   r12
  40f5ed:	push   rbp
  40f5ee:	push   rdi
  40f5ef:	push   rsi
  40f5f0:	push   rbx
  40f5f1:	call   0x4111a0
  40f5f6:	sub    rsp,rax
  40f5f9:	test   r8d,r8d
  40f5fc:	mov    QWORD PTR [rsp+0x14e0],rcx
  40f604:	mov    DWORD PTR [rsp+0x14f0],r8d
  40f60c:	mov    DWORD PTR [rsp+0x14f8],r9d
  40f614:	jle    0x40faaa
  40f61a:	mov    eax,DWORD PTR [rsp+0x14f0]
  40f621:	lea    rdi,[rsp+0x470]
  40f629:	lea    r9,[rsp+0x474]
  40f631:	mov    r10d,0x100
  40f637:	mov    QWORD PTR [rsp+0x28],rdi
  40f63c:	sub    eax,0x1
  40f63f:	mov    rbx,rax
  40f642:	lea    r11,[rax*4+0x4]
  40f64a:	xor    eax,eax
  40f64c:	mov    r8d,DWORD PTR [rdx+rax*1]
  40f650:	mov    ecx,r8d
  40f653:	shl    ecx,0x8
  40f656:	test   r8d,r8d
  40f659:	cmove  ecx,r10d
  40f65d:	mov    DWORD PTR [r9+rax*1],ecx
  40f661:	add    rax,0x4
  40f665:	cmp    rax,r11
  40f668:	jne    0x40f64c
  40f66a:	mov    rdi,QWORD PTR [rsp+0x28]
  40f66f:	mov    eax,ebx
  40f671:	mov    QWORD PTR [rsp+0x38],rax
  40f676:	lea    rax,[rdi+rax*4+0x8]
  40f67b:	lea    rdi,[rsp+0x60]
  40f680:	mov    QWORD PTR [rsp+0x30],rax
  40f685:	mov    eax,DWORD PTR [rsp+0x14f0]
  40f68c:	mov    QWORD PTR [rsp+0x48],rdi
  40f691:	add    eax,0x1
  40f694:	mov    DWORD PTR [rsp+0x58],eax
  40f698:	lea    rax,[rsp+0xc80]
  40f6a0:	mov    QWORD PTR [rsp+0x40],rax
  40f6a5:	lea    rax,[rsp+0xc84]
  40f6ad:	mov    QWORD PTR [rsp+0x50],rax
  40f6b2:	mov    eax,DWORD PTR [rsp+0x14f0]
  40f6b9:	lea    eax,[rax+rax*1-0x1]
  40f6bd:	mov    DWORD PTR [rsp+0x5c],eax
  40f6c1:	mov    edx,DWORD PTR [rsp+0x14f0]
  40f6c8:	mov    DWORD PTR [rsp+0x60],0x0
  40f6d0:	mov    DWORD PTR [rsp+0x470],0x0
  40f6db:	mov    DWORD PTR [rsp+0xc80],0xfffffffe
  40f6e6:	test   edx,edx
  40f6e8:	jle    0x40fa96
  40f6ee:	mov    rax,QWORD PTR [rsp+0x48]
  40f6f3:	mov    ebp,DWORD PTR [rsp+0x58]
  40f6f7:	xor    ebx,ebx
  40f6f9:	mov    r12,QWORD PTR [rsp+0x50]
  40f6fe:	mov    r11d,0x1
  40f704:	lea    rdi,[rax+0x4]
  40f708:	mov    rax,QWORD PTR [rsp+0x28]
  40f70d:	lea    rsi,[rax+0x4]
  40f711:	mov    edx,r11d
  40f714:	mov    DWORD PTR [rdi+rbx*1],r11d
  40f718:	mov    r10d,DWORD PTR [rsi+rbx*1]
  40f71c:	sar    edx,1
  40f71e:	mov    DWORD PTR [r12+rbx*1],0xffffffff
  40f726:	movsxd rax,edx
  40f729:	movsxd rax,DWORD PTR [rsp+rax*4+0x60]
  40f72e:	cmp    r10d,DWORD PTR [rsp+rax*4+0x470]
  40f736:	mov    rcx,rax
  40f739:	jge    0x40fa5d
  40f73f:	movsxd rax,r11d
  40f742:	jmp    0x40f747
  40f744:	mov    edx,r8d
  40f747:	mov    r8d,edx
  40f74a:	mov    DWORD PTR [rsp+rax*4+0x60],ecx
  40f74e:	sar    r8d,1
  40f751:	movsxd rax,r8d
  40f754:	movsxd r9,DWORD PTR [rsp+rax*4+0x60]
  40f759:	movsxd rax,edx
  40f75c:	cmp    DWORD PTR [rsp+r9*4+0x470],r10d
  40f764:	mov    rcx,r9
  40f767:	jg     0x40f744
  40f769:	movsxd rdx,edx
  40f76c:	add    rbx,0x4
  40f770:	mov    DWORD PTR [rsp+rdx*4+0x60],r11d
  40f775:	add    r11d,0x1
  40f779:	cmp    r11d,ebp
  40f77c:	jne    0x40f711
  40f77e:	cmp    DWORD PTR [rsp+0x14f0],0x1
  40f786:	je     0x40f9b8
  40f78c:	movsxd r14,DWORD PTR [rsp+0x14f0]
  40f794:	lea    r11d,[r14-0x2]
  40f798:	mov    r10d,r14d
  40f79b:	mov    ebp,r14d
  40f79e:	xchg   ax,ax
  40f7a0:	mov    r13d,DWORD PTR [rsp+r14*4+0x60]
  40f7a5:	sub    r10d,0x1
  40f7a9:	movsxd r8,DWORD PTR [rsp+0x64]
  40f7ae:	cmp    r10d,0x1
  40f7b2:	mov    DWORD PTR [rsp+0x64],r13d
  40f7b7:	je     0x40fa6f
  40f7bd:	movsxd rax,r13d
  40f7c0:	mov    edx,0x1
  40f7c5:	mov    r12d,DWORD PTR [rsp+rax*4+0x470]
  40f7cd:	mov    eax,0x2
  40f7d2:	jmp    0x40f7fe
  40f7d4:	movsxd rcx,eax
  40f7d7:	mov    r9d,eax
  40f7da:	movsxd rcx,DWORD PTR [rsp+rcx*4+0x60]
  40f7df:	mov    rbx,rcx
  40f7e2:	mov    ecx,DWORD PTR [rsp+rcx*4+0x470]
  40f7e9:	cmp    r12d,ecx
  40f7ec:	jl     0x40f840
  40f7ee:	lea    eax,[r9+r9*1]
  40f7f2:	mov    DWORD PTR [rsp+rdx*4+0x60],ebx
  40f7f6:	movsxd rdx,r9d
  40f7f9:	cmp    r10d,eax
  40f7fc:	jl     0x40f840
  40f7fe:	cmp    r10d,eax
  40f801:	jle    0x40f7d4
  40f803:	lea    r9d,[rax+0x1]
  40f807:	movsxd rsi,eax
  40f80a:	movsxd rdi,DWORD PTR [rsp+rsi*4+0x60]
  40f80f:	movsxd rcx,r9d
  40f812:	movsxd rcx,DWORD PTR [rsp+rcx*4+0x60]
  40f817:	mov    rsi,rdi
  40f81a:	mov    edi,DWORD PTR [rsp+rdi*4+0x470]
  40f821:	mov    rbx,rcx
  40f824:	mov    ecx,DWORD PTR [rsp+rcx*4+0x470]
  40f82b:	cmp    ecx,edi
  40f82d:	jl     0x40f7e9
  40f82f:	mov    ecx,edi
  40f831:	mov    ebx,esi
  40f833:	mov    r9d,eax
  40f836:	cmp    r12d,ecx
  40f839:	jge    0x40f7ee
  40f83b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f840:	movsxd r14,r10d
  40f843:	mov    DWORD PTR [rsp+rdx*4+0x60],r13d
  40f848:	cmp    r11d,0x1
  40f84c:	mov    r12d,DWORD PTR [rsp+r14*4+0x60]
  40f851:	movsxd rdi,DWORD PTR [rsp+0x64]
  40f856:	mov    DWORD PTR [rsp+0x64],r12d
  40f85b:	jle    0x40fa65
  40f861:	movsxd rax,r12d
  40f864:	mov    edx,0x1
  40f869:	mov    r13d,DWORD PTR [rsp+rax*4+0x470]
  40f871:	mov    eax,0x2
  40f876:	jmp    0x40f8a9
  40f878:	nop    DWORD PTR [rax+rax*1+0x0]
  40f880:	movsxd rcx,eax
  40f883:	movsxd rcx,DWORD PTR [rsp+rcx*4+0x60]
  40f888:	mov    r9,rcx
  40f88b:	mov    ebx,DWORD PTR [rsp+rcx*4+0x470]
  40f892:	mov    ecx,eax
  40f894:	cmp    ebx,r13d
  40f897:	jg     0x40f8f0
  40f899:	lea    eax,[rcx+rcx*1]
  40f89c:	mov    DWORD PTR [rsp+rdx*4+0x60],r9d
  40f8a1:	movsxd rdx,ecx
  40f8a4:	cmp    r11d,eax
  40f8a7:	jl     0x40f8f0
  40f8a9:	cmp    r11d,eax
  40f8ac:	jle    0x40f880
  40f8ae:	lea    ecx,[rax+0x1]
  40f8b1:	movsxd rsi,eax
  40f8b4:	movsxd r15,DWORD PTR [rsp+rsi*4+0x60]
  40f8b9:	movsxd r9,ecx
  40f8bc:	movsxd rbx,DWORD PTR [rsp+r9*4+0x60]
  40f8c1:	mov    rsi,r15
  40f8c4:	mov    r15d,DWORD PTR [rsp+r15*4+0x470]
  40f8cc:	mov    r9,rbx
  40f8cf:	mov    ebx,DWORD PTR [rsp+rbx*4+0x470]
  40f8d6:	cmp    ebx,r15d
  40f8d9:	jl     0x40f894
  40f8db:	mov    ebx,r15d
  40f8de:	mov    r9d,esi
  40f8e1:	mov    ecx,eax
  40f8e3:	cmp    ebx,r13d
  40f8e6:	jle    0x40f899
  40f8e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f8f0:	mov    eax,DWORD PTR [rsp+r8*4+0x470]
  40f8f8:	mov    ecx,DWORD PTR [rsp+rdi*4+0x470]
  40f8ff:	add    ebp,0x1
  40f902:	mov    DWORD PTR [rsp+rdx*4+0x60],r12d
  40f907:	mov    DWORD PTR [rsp+rdi*4+0xc80],ebp
  40f90e:	mov    DWORD PTR [rsp+r8*4+0xc80],ebp
  40f916:	mov    DWORD PTR [rsp+r14*4+0x60],ebp
  40f91b:	movzx  edx,al
  40f91e:	movzx  ebx,cl
  40f921:	cmp    edx,ebx
  40f923:	cmovge ebx,edx
  40f926:	xor    cl,cl
  40f928:	xor    al,al
  40f92a:	add    eax,ecx
  40f92c:	add    ebx,0x1
  40f92f:	mov    edx,r10d
  40f932:	or     ebx,eax
  40f934:	sar    edx,1
  40f936:	movsxd rax,ebp
  40f939:	mov    DWORD PTR [rsp+rax*4+0x470],ebx
  40f940:	mov    DWORD PTR [rsp+rax*4+0xc80],0xffffffff
  40f94b:	movsxd rax,edx
  40f94e:	movsxd rax,DWORD PTR [rsp+rax*4+0x60]
  40f953:	cmp    ebx,DWORD PTR [rsp+rax*4+0x470]
  40f95a:	mov    rcx,rax
  40f95d:	jge    0x40fa55
  40f963:	movsxd rax,r10d
  40f966:	jmp    0x40f973
  40f968:	nop    DWORD PTR [rax+rax*1+0x0]
  40f970:	mov    edx,r8d
  40f973:	mov    r8d,edx
  40f976:	mov    DWORD PTR [rsp+rax*4+0x60],ecx
  40f97a:	sar    r8d,1
  40f97d:	movsxd rax,r8d
  40f980:	movsxd r9,DWORD PTR [rsp+rax*4+0x60]
  40f985:	movsxd rax,edx
  40f988:	cmp    ebx,DWORD PTR [rsp+r9*4+0x470]
  40f990:	mov    rcx,r9
  40f993:	jl     0x40f970
  40f995:	movsxd rdx,edx
  40f998:	sub    r11d,0x1
  40f99c:	cmp    r10d,0x1
  40f9a0:	mov    DWORD PTR [rsp+rdx*4+0x60],ebp
  40f9a4:	jne    0x40f7a0
  40f9aa:	cmp    DWORD PTR [rsp+0x5c],0x203
  40f9b2:	jg     0x40fa7d
  40f9b8:	mov    rax,QWORD PTR [rsp+0x38]
  40f9bd:	mov    r11,QWORD PTR [rsp+0x14e0]
  40f9c5:	xor    ecx,ecx
  40f9c7:	mov    ebx,DWORD PTR [rsp+0x14f8]
  40f9ce:	mov    rsi,QWORD PTR [rsp+0x40]
  40f9d3:	xor    r8d,r8d
  40f9d6:	mov    r9d,0x1
  40f9dc:	lea    r10,[rax+0x1]
  40f9e0:	movsxd rax,DWORD PTR [rsi+rcx*4+0x4]
  40f9e5:	xor    edx,edx
  40f9e7:	test   eax,eax
  40f9e9:	js     0x40fa79
  40f9ef:	nop
  40f9f0:	movsxd rax,DWORD PTR [rsp+rax*4+0xc80]
  40f9f8:	add    edx,0x1
  40f9fb:	test   eax,eax
  40f9fd:	jns    0x40f9f0
  40f9ff:	mov    eax,edx
  40fa01:	cmp    ebx,edx
  40fa03:	mov    BYTE PTR [r11+rcx*1],al
  40fa07:	cmovl  r8d,r9d
  40fa0b:	add    rcx,0x1
  40fa0f:	cmp    rcx,r10
  40fa12:	jne    0x40f9e0
  40fa14:	test   r8b,r8b
  40fa17:	je     0x40fa96
  40fa19:	mov    rax,QWORD PTR [rsp+0x28]
  40fa1e:	mov    r8,QWORD PTR [rsp+0x30]
  40fa23:	lea    rcx,[rax+0x4]
  40fa27:	nop    WORD PTR [rax+rax*1+0x0]
  40fa30:	mov    eax,DWORD PTR [rcx]
  40fa32:	add    rcx,0x4
  40fa36:	sar    eax,0x8
  40fa39:	mov    edx,eax
  40fa3b:	shr    edx,0x1f
  40fa3e:	add    eax,edx
  40fa40:	sar    eax,1
  40fa42:	add    eax,0x1
  40fa45:	shl    eax,0x8
  40fa48:	mov    DWORD PTR [rcx-0x4],eax
  40fa4b:	cmp    rcx,r8
  40fa4e:	jne    0x40fa30
  40fa50:	jmp    0x40f6c1
  40fa55:	mov    edx,r10d
  40fa58:	jmp    0x40f995
  40fa5d:	mov    edx,r11d
  40fa60:	jmp    0x40f769
  40fa65:	mov    edx,0x1
  40fa6a:	jmp    0x40f8f0
  40fa6f:	mov    edx,0x1
  40fa74:	jmp    0x40f840
  40fa79:	xor    eax,eax
  40fa7b:	jmp    0x40fa01
  40fa7d:	mov    ecx,0x7d2
  40fa82:	call   0x404780
  40fa87:	mov    eax,DWORD PTR [rsp+0x14f0]
  40fa8e:	test   eax,eax
  40fa90:	jg     0x40f9b8
  40fa96:	add    rsp,0x1498
  40fa9d:	pop    rbx
  40fa9e:	pop    rsi
  40fa9f:	pop    rdi
  40faa0:	pop    rbp
  40faa1:	pop    r12
  40faa3:	pop    r13
  40faa5:	pop    r14
  40faa7:	pop    r15
  40faa9:	ret    
  40faaa:	lea    rax,[rsp+0x470]
  40fab2:	lea    ebx,[r8-0x1]
  40fab6:	mov    QWORD PTR [rsp+0x28],rax
  40fabb:	jmp    0x40f66a
  40fac0:	push   rbx
  40fac1:	mov    r10d,DWORD PTR [rsp+0x30]
  40fac6:	cmp    r8d,r9d
  40fac9:	jg     0x40fb10
  40facb:	lea    ebx,[r9+0x1]
  40facf:	xor    r11d,r11d
  40fad2:	xor    eax,eax
  40fad4:	test   r10d,r10d
  40fad7:	jg     0x40fae9
  40fad9:	jmp    0x40fb04
  40fadb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fae0:	add    rax,0x1
  40fae4:	cmp    r10d,eax
  40fae7:	jle    0x40fb04
  40fae9:	movzx  r9d,BYTE PTR [rdx+rax*1]
  40faee:	cmp    r9d,r8d
  40faf1:	jne    0x40fae0
  40faf3:	mov    DWORD PTR [rcx+rax*4],r11d
  40faf7:	add    rax,0x1
  40fafb:	add    r11d,0x1
  40faff:	cmp    r10d,eax
  40fb02:	jg     0x40fae9
  40fb04:	add    r8d,0x1
  40fb08:	add    r11d,r11d
  40fb0b:	cmp    r8d,ebx
  40fb0e:	jne    0x40fad2
  40fb10:	pop    rbx
  40fb11:	ret    
  40fb12:	nop    DWORD PTR [rax+0x0]
  40fb16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb20:	push   r12
  40fb22:	push   rbp
  40fb23:	push   rdi
  40fb24:	push   rsi
  40fb25:	push   rbx
  40fb26:	mov    ebp,DWORD PTR [rsp+0x50]
  40fb2a:	mov    edi,DWORD PTR [rsp+0x58]
  40fb2e:	mov    ebx,DWORD PTR [rsp+0x60]
  40fb32:	cmp    ebp,edi
  40fb34:	jg     0x40fb7d
  40fb36:	lea    r12d,[rdi+0x1]
  40fb3a:	mov    r11d,ebp
  40fb3d:	xor    esi,esi
  40fb3f:	nop
  40fb40:	xor    eax,eax
  40fb42:	test   ebx,ebx
  40fb44:	jg     0x40fb58
  40fb46:	jmp    0x40fb74
  40fb48:	nop    DWORD PTR [rax+rax*1+0x0]
  40fb50:	add    rax,0x1
  40fb54:	cmp    ebx,eax
  40fb56:	jle    0x40fb74
  40fb58:	movzx  r10d,BYTE PTR [r9+rax*1]
  40fb5d:	cmp    r10d,r11d
  40fb60:	jne    0x40fb50
  40fb62:	movsxd r10,esi
  40fb65:	add    esi,0x1
  40fb68:	mov    DWORD PTR [r8+r10*4],eax
  40fb6c:	add    rax,0x1
  40fb70:	cmp    ebx,eax
  40fb72:	jg     0x40fb58
  40fb74:	add    r11d,0x1
  40fb78:	cmp    r11d,r12d
  40fb7b:	jne    0x40fb40
  40fb7d:	lea    r8,[rdx+0x5c]
  40fb81:	mov    rax,rdx
  40fb84:	mov    DWORD PTR [rax],0x0
  40fb8a:	add    rax,0x4
  40fb8e:	cmp    rax,r8
  40fb91:	jne    0x40fb84
  40fb93:	test   ebx,ebx
  40fb95:	jle    0x40fbb2
  40fb97:	lea    eax,[rbx-0x1]
  40fb9a:	lea    r10,[r9+rax*1+0x1]
  40fb9f:	nop
  40fba0:	movzx  eax,BYTE PTR [r9]
  40fba4:	add    r9,0x1
  40fba8:	add    DWORD PTR [rdx+rax*4+0x4],0x1
  40fbad:	cmp    r9,r10
  40fbb0:	jne    0x40fba0
  40fbb2:	lea    rax,[rdx+0x4]
  40fbb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fbc0:	mov    r9d,DWORD PTR [rax-0x4]
  40fbc4:	add    DWORD PTR [rax],r9d
  40fbc7:	add    rax,0x4
  40fbcb:	cmp    rax,r8
  40fbce:	jne    0x40fbc0
  40fbd0:	lea    r8,[rcx+0x5c]
  40fbd4:	mov    rax,rcx
  40fbd7:	nop    WORD PTR [rax+rax*1+0x0]
  40fbe0:	mov    DWORD PTR [rax],0x0
  40fbe6:	add    rax,0x4
  40fbea:	cmp    rax,r8
  40fbed:	jne    0x40fbe0
  40fbef:	cmp    ebp,edi
  40fbf1:	jg     0x40fc2c
  40fbf3:	mov    ebx,edi
  40fbf5:	movsxd r11,ebp
  40fbf8:	xor    r8d,r8d
  40fbfb:	shl    r11,0x2
  40fbff:	sub    ebx,ebp
  40fc01:	xor    eax,eax
  40fc03:	lea    r9,[rdx+r11*1]
  40fc07:	add    rbx,0x1
  40fc0b:	add    r11,rcx
  40fc0e:	xchg   ax,ax
  40fc10:	add    eax,DWORD PTR [r9+r8*4+0x4]
  40fc15:	sub    eax,DWORD PTR [r9+r8*4]
  40fc19:	lea    r10d,[rax-0x1]
  40fc1d:	add    eax,eax
  40fc1f:	mov    DWORD PTR [r11+r8*4],r10d
  40fc23:	add    r8,0x1
  40fc27:	cmp    r8,rbx
  40fc2a:	jne    0x40fc10
  40fc2c:	lea    eax,[rbp+0x1]
  40fc2f:	cmp    edi,eax
  40fc31:	jl     0x40fc6b
  40fc33:	sub    edi,0x1
  40fc36:	cdqe   
  40fc38:	sub    edi,ebp
  40fc3a:	shl    rax,0x2
  40fc3e:	lea    r9,[rdi+0x1]
  40fc42:	add    rcx,rax
  40fc45:	add    rdx,rax
  40fc48:	xor    eax,eax
  40fc4a:	nop    WORD PTR [rax+rax*1+0x0]
  40fc50:	mov    r8d,DWORD PTR [rcx+rax*4-0x4]
  40fc55:	lea    r8d,[r8+r8*1+0x2]
  40fc5a:	sub    r8d,DWORD PTR [rdx+rax*4]
  40fc5e:	mov    DWORD PTR [rdx+rax*4],r8d
  40fc62:	add    rax,0x1
  40fc66:	cmp    rax,r9
  40fc69:	jne    0x40fc50
  40fc6b:	pop    rbx
  40fc6c:	pop    rsi
  40fc6d:	pop    rdi
  40fc6e:	pop    rbp
  40fc6f:	pop    r12
  40fc71:	ret    
  40fc72:	nop
  40fc73:	nop
  40fc74:	nop
  40fc75:	nop
  40fc76:	nop
  40fc77:	nop
  40fc78:	nop
  40fc79:	nop
  40fc7a:	nop
  40fc7b:	nop
  40fc7c:	nop
  40fc7d:	nop
  40fc7e:	nop
  40fc7f:	nop
  40fc80:	push   rbx
  40fc81:	sub    rsp,0x30
  40fc85:	mov    rbx,rcx
  40fc88:	mov    rcx,QWORD PTR [rip+0xbec1]        # 0x41bb50
  40fc8f:	call   0x410230
  40fc94:	cmp    rax,0xffffffffffffffff
  40fc98:	mov    QWORD PTR [rsp+0x20],rax
  40fc9d:	je     0x40fd15
  40fc9f:	mov    ecx,0x8
  40fca4:	call   0x411308
  40fca9:	mov    rcx,QWORD PTR [rip+0xbea0]        # 0x41bb50
  40fcb0:	call   0x410230
  40fcb5:	mov    rcx,QWORD PTR [rip+0xbe9c]        # 0x41bb58
  40fcbc:	mov    QWORD PTR [rsp+0x20],rax
  40fcc1:	call   0x410230
  40fcc6:	lea    rdx,[rsp+0x20]
  40fccb:	lea    r8,[rsp+0x28]
  40fcd0:	mov    rcx,rbx
  40fcd3:	mov    QWORD PTR [rsp+0x28],rax
  40fcd8:	call   0x411358
  40fcdd:	mov    rcx,QWORD PTR [rsp+0x20]
  40fce2:	mov    rbx,rax
  40fce5:	call   0x410240
  40fcea:	mov    rcx,QWORD PTR [rsp+0x28]
  40fcef:	mov    QWORD PTR [rip+0xbe5a],rax        # 0x41bb50
  40fcf6:	call   0x410240
  40fcfb:	mov    ecx,0x8
  40fd00:	mov    QWORD PTR [rip+0xbe51],rax        # 0x41bb58
  40fd07:	call   0x4112f8
  40fd0c:	mov    rax,rbx
  40fd0f:	add    rsp,0x30
  40fd13:	pop    rbx
  40fd14:	ret    
  40fd15:	mov    rax,QWORD PTR [rip+0x6e04]        # 0x416b20
  40fd1c:	mov    rcx,rbx
  40fd1f:	call   QWORD PTR [rax]
  40fd21:	add    rsp,0x30
  40fd25:	pop    rbx
  40fd26:	ret    
  40fd27:	nop    WORD PTR [rax+rax*1+0x0]
  40fd30:	sub    rsp,0x28
  40fd34:	call   0x40fc80
  40fd39:	test   rax,rax
  40fd3c:	sete   al
  40fd3f:	movzx  eax,al
  40fd42:	neg    eax
  40fd44:	add    rsp,0x28
  40fd48:	ret    
  40fd49:	nop
  40fd4a:	nop
  40fd4b:	nop
  40fd4c:	nop
  40fd4d:	nop
  40fd4e:	nop
  40fd4f:	nop
  40fd50:	sub    rsp,0x28
  40fd54:	mov    rax,QWORD PTR [rip+0x3f25]        # 0x413c80
  40fd5b:	mov    rax,QWORD PTR [rax]
  40fd5e:	test   rax,rax
  40fd61:	je     0x40fd80
  40fd63:	call   rax
  40fd65:	mov    rax,QWORD PTR [rip+0x3f14]        # 0x413c80
  40fd6c:	lea    rdx,[rax+0x8]
  40fd70:	mov    rax,QWORD PTR [rax+0x8]
  40fd74:	mov    QWORD PTR [rip+0x3f05],rdx        # 0x413c80
  40fd7b:	test   rax,rax
  40fd7e:	jne    0x40fd63
  40fd80:	add    rsp,0x28
  40fd84:	ret    
  40fd85:	nop
  40fd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd90:	push   rsi
  40fd91:	push   rbx
  40fd92:	sub    rsp,0x28
  40fd96:	mov    rsi,QWORD PTR [rip+0x6d03]        # 0x416aa0
  40fd9d:	mov    rax,QWORD PTR [rsi]
  40fda0:	cmp    eax,0xffffffff
  40fda3:	mov    ebx,eax
  40fda5:	je     0x40fdd0
  40fda7:	test   ebx,ebx
  40fda9:	je     0x40fdba
  40fdab:	nop    DWORD PTR [rax+rax*1+0x0]
  40fdb0:	mov    eax,ebx
  40fdb2:	call   QWORD PTR [rsi+rax*8]
  40fdb5:	sub    ebx,0x1
  40fdb8:	jne    0x40fdb0
  40fdba:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x40fd50
  40fdc1:	add    rsp,0x28
  40fdc5:	pop    rbx
  40fdc6:	pop    rsi
  40fdc7:	jmp    0x40fd30
  40fdcc:	nop    DWORD PTR [rax+0x0]
  40fdd0:	xor    ebx,ebx
  40fdd2:	jmp    0x40fdd6
  40fdd4:	mov    ebx,eax
  40fdd6:	lea    edx,[rbx+0x1]
  40fdd9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40fdde:	mov    rax,rdx
  40fde1:	jne    0x40fdd4
  40fde3:	jmp    0x40fda7
  40fde5:	nop
  40fde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fdf0:	mov    eax,DWORD PTR [rip+0xa23a]        # 0x41a030
  40fdf6:	test   eax,eax
  40fdf8:	je     0x40fe00
  40fdfa:	repz ret 
  40fdfc:	nop    DWORD PTR [rax+0x0]
  40fe00:	mov    DWORD PTR [rip+0xa226],0x1        # 0x41a030
  40fe0a:	jmp    0x40fd90
  40fe0c:	nop
  40fe0d:	nop
  40fe0e:	nop
  40fe0f:	nop
  40fe10:	mov    rax,QWORD PTR [rip+0xc575]        # 0x41c38c
  40fe17:	rex.W jmp rax
  40fe1a:	nop
  40fe1b:	nop
  40fe1c:	nop
  40fe1d:	nop
  40fe1e:	nop
  40fe1f:	nop
  40fe20:	xor    eax,eax
  40fe22:	ret    
  40fe23:	nop
  40fe24:	nop
  40fe25:	nop
  40fe26:	nop
  40fe27:	nop
  40fe28:	nop
  40fe29:	nop
  40fe2a:	nop
  40fe2b:	nop
  40fe2c:	nop
  40fe2d:	nop
  40fe2e:	nop
  40fe2f:	nop
  40fe30:	push   r12
  40fe32:	push   rbp
  40fe33:	push   rdi
  40fe34:	push   rsi
  40fe35:	push   rbx
  40fe36:	sub    rsp,0x40
  40fe3a:	mov    rbx,QWORD PTR [rip+0x3e9f]        # 0x413ce0
  40fe41:	movabs rax,0x2b992ddfa232
  40fe4b:	mov    QWORD PTR [rsp+0x20],0x0
  40fe54:	cmp    rbx,rax
  40fe57:	je     0x40fe70
  40fe59:	not    rbx
  40fe5c:	mov    QWORD PTR [rip+0x3e8d],rbx        # 0x413cf0
  40fe63:	add    rsp,0x40
  40fe67:	pop    rbx
  40fe68:	pop    rsi
  40fe69:	pop    rdi
  40fe6a:	pop    rbp
  40fe6b:	pop    r12
  40fe6d:	ret    
  40fe6e:	xchg   ax,ax
  40fe70:	lea    rcx,[rsp+0x20]
  40fe75:	call   QWORD PTR [rip+0xc461]        # 0x41c2dc
  40fe7b:	mov    r12,QWORD PTR [rsp+0x20]
  40fe80:	call   QWORD PTR [rip+0xc436]        # 0x41c2bc
  40fe86:	mov    ebp,eax
  40fe88:	call   QWORD PTR [rip+0xc436]        # 0x41c2c4
  40fe8e:	mov    edi,eax
  40fe90:	call   QWORD PTR [rip+0xc44e]        # 0x41c2e4
  40fe96:	lea    rcx,[rsp+0x30]
  40fe9b:	mov    esi,eax
  40fe9d:	call   QWORD PTR [rip+0xc459]        # 0x41c2fc
  40fea3:	xor    r12,QWORD PTR [rsp+0x30]
  40fea8:	mov    edx,edi
  40feaa:	movabs rax,0xffffffffffff
  40feb4:	xor    rbp,r12
  40feb7:	mov    rdi,rbp
  40feba:	xor    rdi,rdx
  40febd:	mov    edx,esi
  40febf:	xor    rdi,rdx
  40fec2:	mov    rsi,rdi
  40fec5:	and    rsi,rax
  40fec8:	cmp    rsi,rbx
  40fecb:	je     0x40fef0
  40fecd:	mov    rax,rsi
  40fed0:	not    rax
  40fed3:	mov    QWORD PTR [rip+0x3e06],rsi        # 0x413ce0
  40feda:	mov    QWORD PTR [rip+0x3e0f],rax        # 0x413cf0
  40fee1:	add    rsp,0x40
  40fee5:	pop    rbx
  40fee6:	pop    rsi
  40fee7:	pop    rdi
  40fee8:	pop    rbp
  40fee9:	pop    r12
  40feeb:	ret    
  40feec:	nop    DWORD PTR [rax+0x0]
  40fef0:	movabs rax,0xffffd466d2205dcc
  40fefa:	movabs rsi,0x2b992ddfa233
  40ff04:	jmp    0x40fed3
  40ff06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ff10:	push   rbp
  40ff11:	push   rsi
  40ff12:	push   rbx
  40ff13:	mov    rbp,rsp
  40ff16:	sub    rsp,0x70
  40ff1a:	mov    rsi,rcx
  40ff1d:	lea    rcx,[rip+0xa15c]        # 0x41a080
  40ff24:	call   QWORD PTR [rip+0xc3e2]        # 0x41c30c
  40ff2a:	mov    rbx,QWORD PTR [rip+0xa247]        # 0x41a178
  40ff31:	xor    r8d,r8d
  40ff34:	lea    rdx,[rbp-0x28]
  40ff38:	mov    rcx,rbx
  40ff3b:	call   QWORD PTR [rip+0xc3d3]        # 0x41c314
  40ff41:	test   rax,rax
  40ff44:	mov    r9,rax
  40ff47:	je     0x40fff0
  40ff4d:	lea    rax,[rbp-0x20]
  40ff51:	mov    QWORD PTR [rsp+0x38],0x0
  40ff5a:	mov    r8,rbx
  40ff5d:	mov    rdx,QWORD PTR [rbp-0x28]
  40ff61:	xor    ecx,ecx
  40ff63:	mov    QWORD PTR [rsp+0x30],rax
  40ff68:	lea    rax,[rbp-0x18]
  40ff6c:	mov    QWORD PTR [rsp+0x28],rax
  40ff71:	lea    rax,[rip+0xa108]        # 0x41a080
  40ff78:	mov    QWORD PTR [rsp+0x20],rax
  40ff7d:	call   QWORD PTR [rip+0xc399]        # 0x41c31c
  40ff83:	mov    rax,QWORD PTR [rip+0xa1ee]        # 0x41a178
  40ff8a:	xor    ecx,ecx
  40ff8c:	mov    QWORD PTR [rip+0xa16d],rsi        # 0x41a100
  40ff93:	mov    DWORD PTR [rip+0xa5e3],0xc0000409        # 0x41a580
  40ff9d:	mov    DWORD PTR [rip+0xa5dd],0x1        # 0x41a584
  40ffa7:	mov    QWORD PTR [rip+0xa5e2],rax        # 0x41a590
  40ffae:	mov    rax,QWORD PTR [rip+0x3d2b]        # 0x413ce0
  40ffb5:	mov    QWORD PTR [rbp-0x10],rax
  40ffb9:	mov    rax,QWORD PTR [rip+0x3d30]        # 0x413cf0
  40ffc0:	mov    QWORD PTR [rbp-0x8],rax
  40ffc4:	call   QWORD PTR [rip+0xc35a]        # 0x41c324
  40ffca:	lea    rcx,[rip+0x680f]        # 0x4167e0
  40ffd1:	call   QWORD PTR [rip+0xc36d]        # 0x41c344
  40ffd7:	call   QWORD PTR [rip+0xc2d7]        # 0x41c2b4
  40ffdd:	mov    edx,0xc0000409
  40ffe2:	mov    rcx,rax
  40ffe5:	call   QWORD PTR [rip+0xc349]        # 0x41c334
  40ffeb:	call   0x4112f0
  40fff0:	mov    rax,QWORD PTR [rbp+0x18]
  40fff4:	mov    QWORD PTR [rip+0xa17d],rax        # 0x41a178
  40fffb:	lea    rax,[rbp+0x8]
  40ffff:	mov    QWORD PTR [rip+0xa112],rax        # 0x41a118
  410006:	jmp    0x40ff83
  41000b:	nop
  41000c:	nop
  41000d:	nop
  41000e:	nop
  41000f:	nop
  410010:	sub    rsp,0x28
  410014:	test   edx,edx
  410016:	je     0x410030
  410018:	cmp    edx,0x3
  41001b:	je     0x410030
  41001d:	mov    eax,0x1
  410022:	add    rsp,0x28
  410026:	ret    
  410027:	nop    WORD PTR [rax+rax*1+0x0]
  410030:	call   0x410d20
  410035:	mov    eax,0x1
  41003a:	add    rsp,0x28
  41003e:	ret    
  41003f:	nop
  410040:	push   rsi
  410041:	push   rbx
  410042:	sub    rsp,0x28
  410046:	mov    rax,QWORD PTR [rip+0x6a33]        # 0x416a80
  41004d:	cmp    DWORD PTR [rax],0x2
  410050:	je     0x410058
  410052:	mov    DWORD PTR [rax],0x2
  410058:	cmp    edx,0x2
  41005b:	je     0x410070
  41005d:	cmp    edx,0x1
  410060:	je     0x4100a2
  410062:	mov    eax,0x1
  410067:	add    rsp,0x28
  41006b:	pop    rbx
  41006c:	pop    rsi
  41006d:	ret    
  41006e:	xchg   ax,ax
  410070:	lea    rbx,[rip+0xcfe9]        # 0x41d060
  410077:	lea    rsi,[rip+0xcfe2]        # 0x41d060
  41007e:	cmp    rbx,rsi
  410081:	je     0x410062
  410083:	mov    rax,QWORD PTR [rbx]
  410086:	test   rax,rax
  410089:	je     0x41008d
  41008b:	call   rax
  41008d:	add    rbx,0x8
  410091:	cmp    rbx,rsi
  410094:	jne    0x410083
  410096:	mov    eax,0x1
  41009b:	add    rsp,0x28
  41009f:	pop    rbx
  4100a0:	pop    rsi
  4100a1:	ret    
  4100a2:	call   0x410d20
  4100a7:	jmp    0x410062
  4100a9:	nop    DWORD PTR [rax+0x0]
  4100b0:	xor    eax,eax
  4100b2:	ret    
  4100b3:	nop
  4100b4:	nop
  4100b5:	nop
  4100b6:	nop
  4100b7:	nop
  4100b8:	nop
  4100b9:	nop
  4100ba:	nop
  4100bb:	nop
  4100bc:	nop
  4100bd:	nop
  4100be:	nop
  4100bf:	nop
  4100c0:	sub    rsp,0x58
  4100c4:	mov    rax,QWORD PTR [rip+0xa595]        # 0x41a660
  4100cb:	test   rax,rax
  4100ce:	je     0x4100fc
  4100d0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4100d9:	mov    DWORD PTR [rsp+0x20],ecx
  4100dd:	lea    rcx,[rsp+0x20]
  4100e2:	mov    QWORD PTR [rsp+0x28],rdx
  4100e7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4100ed:	movsd  QWORD PTR [rsp+0x38],xmm3
  4100f3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4100f9:	call   rax
  4100fb:	nop
  4100fc:	add    rsp,0x58
  410100:	ret    
  410101:	nop    DWORD PTR [rax+rax*1+0x0]
  410106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410110:	mov    QWORD PTR [rip+0xa549],rcx        # 0x41a660
  410117:	jmp    0x411330
  41011c:	nop    DWORD PTR [rax+0x0]
  410120:	push   rsi
  410121:	push   rbx
  410122:	sub    rsp,0x78
  410126:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41012b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  410130:	movaps XMMWORD PTR [rsp+0x60],xmm8
  410136:	cmp    DWORD PTR [rcx],0x6
  410139:	ja     0x410210
  41013f:	mov    edx,DWORD PTR [rcx]
  410141:	lea    rax,[rip+0x67dc]        # 0x416924
  410148:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41014c:	add    rax,rdx
  41014f:	jmp    rax
  410151:	lea    rbx,[rip+0x66a8]        # 0x416800
  410158:	nop    DWORD PTR [rax+rax*1+0x0]
  410160:	movsd  xmm8,QWORD PTR [rcx+0x20]
  410166:	mov    rsi,QWORD PTR [rcx+0x8]
  41016a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  41016f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  410174:	call   0x411348
  410179:	movsd  QWORD PTR [rsp+0x30],xmm8
  410180:	lea    rcx,[rax+0x60]
  410184:	lea    rdx,[rip+0x676d]        # 0x4168f8
  41018b:	movsd  QWORD PTR [rsp+0x28],xmm7
  410191:	mov    r9,rsi
  410194:	mov    r8,rbx
  410197:	movsd  QWORD PTR [rsp+0x20],xmm6
  41019d:	call   0x4112b0
  4101a2:	nop
  4101a3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4101a8:	xor    eax,eax
  4101aa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4101af:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4101b5:	add    rsp,0x78
  4101b9:	pop    rbx
  4101ba:	pop    rsi
  4101bb:	ret    
  4101bc:	nop    DWORD PTR [rax+0x0]
  4101c0:	lea    rbx,[rip+0x6658]        # 0x41681f
  4101c7:	jmp    0x410160
  4101c9:	nop    DWORD PTR [rax+0x0]
  4101d0:	lea    rbx,[rip+0x6669]        # 0x416840
  4101d7:	jmp    0x410160
  4101d9:	nop    DWORD PTR [rax+0x0]
  4101e0:	lea    rbx,[rip+0x66c9]        # 0x4168b0
  4101e7:	jmp    0x410160
  4101ec:	nop    DWORD PTR [rax+0x0]
  4101f0:	lea    rbx,[rip+0x6691]        # 0x416888
  4101f7:	jmp    0x410160
  4101fc:	nop    DWORD PTR [rax+0x0]
  410200:	lea    rbx,[rip+0x6659]        # 0x416860
  410207:	jmp    0x410160
  41020c:	nop    DWORD PTR [rax+0x0]
  410210:	lea    rbx,[rip+0x66cf]        # 0x4168e6
  410217:	jmp    0x410160
  41021c:	nop
  41021d:	nop
  41021e:	nop
  41021f:	nop
  410220:	fninit 
  410222:	ret    
  410223:	nop
  410224:	nop
  410225:	nop
  410226:	nop
  410227:	nop
  410228:	nop
  410229:	nop
  41022a:	nop
  41022b:	nop
  41022c:	nop
  41022d:	nop
  41022e:	nop
  41022f:	nop
  410230:	mov    rax,rcx
  410233:	ret    
  410234:	xchg   ax,ax
  410236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410240:	mov    rax,rcx
  410243:	ret    
  410244:	nop
  410245:	nop
  410246:	nop
  410247:	nop
  410248:	nop
  410249:	nop
  41024a:	nop
  41024b:	nop
  41024c:	nop
  41024d:	nop
  41024e:	nop
  41024f:	nop
  410250:	push   rsi
  410251:	push   rbx
  410252:	sub    rsp,0x38
  410256:	lea    rax,[rsp+0x58]
  41025b:	mov    rbx,rcx
  41025e:	mov    QWORD PTR [rsp+0x58],rdx
  410263:	mov    QWORD PTR [rsp+0x60],r8
  410268:	mov    QWORD PTR [rsp+0x68],r9
  41026d:	mov    QWORD PTR [rsp+0x28],rax
  410272:	call   0x411348
  410277:	lea    rcx,[rip+0x66c2]        # 0x416940
  41027e:	lea    r9,[rax+0x60]
  410282:	mov    r8d,0x1b
  410288:	mov    edx,0x1
  41028d:	call   0x411290
  410292:	mov    rsi,QWORD PTR [rsp+0x28]
  410297:	call   0x411348
  41029c:	lea    rcx,[rax+0x60]
  4102a0:	mov    rdx,rbx
  4102a3:	mov    r8,rsi
  4102a6:	call   0x411208
  4102ab:	call   0x4112f0
  4102b0:	nop
  4102b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4102b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4102c0:	push   r13
  4102c2:	push   r12
  4102c4:	push   rbp
  4102c5:	push   rdi
  4102c6:	push   rsi
  4102c7:	push   rbx
  4102c8:	sub    rsp,0x58
  4102cc:	movsxd rbp,DWORD PTR [rip+0xa3b1]        # 0x41a684
  4102d3:	mov    rbx,rcx
  4102d6:	mov    rsi,rdx
  4102d9:	mov    rdi,r8
  4102dc:	test   ebp,ebp
  4102de:	jle    0x4103da
  4102e4:	mov    rax,QWORD PTR [rip+0xa39d]        # 0x41a688
  4102eb:	xor    r9d,r9d
  4102ee:	add    rax,0x8
  4102f2:	mov    r10,QWORD PTR [rax]
  4102f5:	cmp    rbx,r10
  4102f8:	jb     0x41030e
  4102fa:	mov    rdx,QWORD PTR [rax+0x8]
  4102fe:	mov    r11d,DWORD PTR [rdx+0x8]
  410302:	add    r10,r11
  410305:	cmp    rbx,r10
  410308:	jb     0x4103c0
  41030e:	add    r9d,0x1
  410312:	add    rax,0x18
  410316:	cmp    r9d,ebp
  410319:	jne    0x4102f2
  41031b:	mov    rcx,rbx
  41031e:	call   0x410f30
  410323:	test   rax,rax
  410326:	mov    r12,rax
  410329:	je     0x410412
  41032f:	lea    rbp,[rbp+rbp*2+0x0]
  410334:	shl    rbp,0x3
  410338:	mov    r13,rbp
  41033b:	add    r13,QWORD PTR [rip+0xa346]        # 0x41a688
  410342:	mov    QWORD PTR [r13+0x10],rax
  410346:	mov    DWORD PTR [r13+0x0],0x0
  41034e:	call   0x411050
  410353:	mov    edx,DWORD PTR [r12+0xc]
  410358:	mov    r8d,0x30
  41035e:	add    rax,rdx
  410361:	lea    rdx,[rsp+0x20]
  410366:	mov    QWORD PTR [r13+0x8],rax
  41036a:	mov    rax,QWORD PTR [rip+0xa317]        # 0x41a688
  410371:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  410376:	call   QWORD PTR [rip+0xbfd8]        # 0x41c354
  41037c:	test   rax,rax
  41037f:	je     0x4103f5
  410381:	mov    eax,DWORD PTR [rsp+0x44]
  410385:	lea    edx,[rax-0x4]
  410388:	and    edx,0xfffffffb
  41038b:	je     0x4103b9
  41038d:	sub    eax,0x40
  410390:	and    eax,0xffffffbf
  410393:	je     0x4103b9
  410395:	mov    r9,rbp
  410398:	add    r9,QWORD PTR [rip+0xa2e9]        # 0x41a688
  41039f:	mov    r8d,0x40
  4103a5:	mov    rdx,QWORD PTR [rsp+0x38]
  4103aa:	mov    rcx,QWORD PTR [rsp+0x20]
  4103af:	call   QWORD PTR [rip+0xbf97]        # 0x41c34c
  4103b5:	test   eax,eax
  4103b7:	je     0x4103e1
  4103b9:	add    DWORD PTR [rip+0xa2c4],0x1        # 0x41a684
  4103c0:	mov    r8,rdi
  4103c3:	mov    rdx,rsi
  4103c6:	mov    rcx,rbx
  4103c9:	add    rsp,0x58
  4103cd:	pop    rbx
  4103ce:	pop    rsi
  4103cf:	pop    rdi
  4103d0:	pop    rbp
  4103d1:	pop    r12
  4103d3:	pop    r13
  4103d5:	jmp    0x411270
  4103da:	xor    ebp,ebp
  4103dc:	jmp    0x41031b
  4103e1:	call   QWORD PTR [rip+0xbee5]        # 0x41c2cc
  4103e7:	lea    rcx,[rip+0x65ca]        # 0x4169b8
  4103ee:	mov    edx,eax
  4103f0:	call   0x410250
  4103f5:	mov    rax,QWORD PTR [rip+0xa28c]        # 0x41a688
  4103fc:	mov    edx,DWORD PTR [r12+0x8]
  410401:	lea    rcx,[rip+0x6578]        # 0x416980
  410408:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  41040d:	call   0x410250
  410412:	lea    rcx,[rip+0x6547]        # 0x416960
  410419:	mov    rdx,rbx
  41041c:	call   0x410250
  410421:	nop
  410422:	nop    DWORD PTR [rax+0x0]
  410426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410430:	push   rbp
  410431:	push   r14
  410433:	push   r13
  410435:	push   r12
  410437:	push   rdi
  410438:	push   rsi
  410439:	push   rbx
  41043a:	mov    rbp,rsp
  41043d:	sub    rsp,0x60
  410441:	mov    ebx,DWORD PTR [rip+0xa239]        # 0x41a680
  410447:	test   ebx,ebx
  410449:	je     0x410460
  41044b:	mov    rsp,rbp
  41044e:	pop    rbx
  41044f:	pop    rsi
  410450:	pop    rdi
  410451:	pop    r12
  410453:	pop    r13
  410455:	pop    r14
  410457:	pop    rbp
  410458:	ret    
  410459:	nop    DWORD PTR [rax+0x0]
  410460:	mov    DWORD PTR [rip+0xa216],0x1        # 0x41a680
  41046a:	call   0x410f80
  41046f:	cdqe   
  410471:	lea    rax,[rax+rax*2]
  410475:	lea    rax,[rax*8+0x1e]
  41047d:	and    rax,0xfffffffffffffff0
  410481:	call   0x4111a0
  410486:	mov    rsi,QWORD PTR [rip+0x6623]        # 0x416ab0
  41048d:	mov    rbx,QWORD PTR [rip+0x662c]        # 0x416ac0
  410494:	sub    rsp,rax
  410497:	mov    DWORD PTR [rip+0xa1e3],0x0        # 0x41a684
  4104a1:	lea    rax,[rsp+0x20]
  4104a6:	mov    QWORD PTR [rip+0xa1db],rax        # 0x41a688
  4104ad:	mov    rax,rsi
  4104b0:	sub    rax,rbx
  4104b3:	cmp    rax,0x7
  4104b7:	jle    0x41044b
  4104b9:	cmp    rax,0xb
  4104bd:	jle    0x4104e5
  4104bf:	mov    r11d,DWORD PTR [rbx]
  4104c2:	test   r11d,r11d
  4104c5:	jne    0x410610
  4104cb:	mov    r10d,DWORD PTR [rbx+0x4]
  4104cf:	test   r10d,r10d
  4104d2:	jne    0x410610
  4104d8:	mov    r9d,DWORD PTR [rbx+0x8]
  4104dc:	test   r9d,r9d
  4104df:	jne    0x4104fc
  4104e1:	add    rbx,0xc
  4104e5:	mov    r8d,DWORD PTR [rbx]
  4104e8:	test   r8d,r8d
  4104eb:	jne    0x410610
  4104f1:	mov    ecx,DWORD PTR [rbx+0x4]
  4104f4:	test   ecx,ecx
  4104f6:	jne    0x410610
  4104fc:	mov    edx,DWORD PTR [rbx+0x8]
  4104ff:	cmp    edx,0x1
  410502:	jne    0x41071c
  410508:	add    rbx,0xc
  41050c:	cmp    rbx,rsi
  41050f:	jae    0x41044b
  410515:	mov    r12,QWORD PTR [rip+0x65c4]        # 0x416ae0
  41051c:	lea    r13,[rbp-0x30]
  410520:	movabs r14,0xffffffff00000000
  41052a:	mov    ecx,DWORD PTR [rbx+0x4]
  41052d:	mov    eax,DWORD PTR [rbx]
  41052f:	movzx  edx,BYTE PTR [rbx+0x8]
  410533:	add    rax,r12
  410536:	add    rcx,r12
  410539:	cmp    edx,0x10
  41053c:	mov    r8,QWORD PTR [rax]
  41053f:	je     0x410686
  410545:	jbe    0x41064d
  41054b:	cmp    edx,0x20
  41054e:	je     0x4106cf
  410554:	cmp    edx,0x40
  410557:	jne    0x4106bb
  41055d:	sub    r8,rax
  410560:	mov    rdx,r13
  410563:	mov    rdi,r13
  410566:	mov    rax,r8
  410569:	add    rax,QWORD PTR [rcx]
  41056c:	mov    r8d,0x8
  410572:	mov    QWORD PTR [rbp-0x30],rax
  410576:	call   0x4102c0
  41057b:	add    rbx,0xc
  41057f:	cmp    rbx,rsi
  410582:	jb     0x41052a
  410584:	mov    eax,DWORD PTR [rip+0xa0fa]        # 0x41a684
  41058a:	xor    ebx,ebx
  41058c:	xor    esi,esi
  41058e:	test   eax,eax
  410590:	jle    0x41044b
  410596:	mov    r14,QWORD PTR [rip+0xbdb7]        # 0x41c354
  41059d:	lea    r13,[rbp-0x34]
  4105a1:	mov    r12,QWORD PTR [rip+0xbda4]        # 0x41c34c
  4105a8:	jmp    0x4105c3
  4105aa:	nop    WORD PTR [rax+rax*1+0x0]
  4105b0:	add    esi,0x1
  4105b3:	add    rbx,0x18
  4105b7:	cmp    esi,DWORD PTR [rip+0xa0c7]        # 0x41a684
  4105bd:	jge    0x41044b
  4105c3:	mov    rax,rbx
  4105c6:	add    rax,QWORD PTR [rip+0xa0bb]        # 0x41a688
  4105cd:	mov    edx,DWORD PTR [rax]
  4105cf:	test   edx,edx
  4105d1:	je     0x4105b0
  4105d3:	mov    rcx,QWORD PTR [rax+0x8]
  4105d7:	mov    r8d,0x30
  4105dd:	mov    rdx,rdi
  4105e0:	call   r14
  4105e3:	test   rax,rax
  4105e6:	je     0x4106fe
  4105ec:	mov    rax,QWORD PTR [rip+0xa095]        # 0x41a688
  4105f3:	mov    r9,r13
  4105f6:	mov    rdx,QWORD PTR [rbp-0x18]
  4105fa:	mov    rcx,QWORD PTR [rbp-0x30]
  4105fe:	mov    r8d,DWORD PTR [rax+rbx*1]
  410602:	call   r12
  410605:	jmp    0x4105b0
  410607:	nop    WORD PTR [rax+rax*1+0x0]
  410610:	cmp    rbx,rsi
  410613:	jae    0x41044b
  410619:	mov    r12,QWORD PTR [rip+0x64c0]        # 0x416ae0
  410620:	lea    rdi,[rbp-0x30]
  410624:	mov    ecx,DWORD PTR [rbx+0x4]
  410627:	mov    eax,DWORD PTR [rbx]
  410629:	mov    r8d,0x4
  41062f:	mov    rdx,rdi
  410632:	add    rbx,0x8
  410636:	add    rcx,r12
  410639:	add    eax,DWORD PTR [rcx]
  41063b:	mov    DWORD PTR [rbp-0x30],eax
  41063e:	call   0x4102c0
  410643:	cmp    rbx,rsi
  410646:	jb     0x410624
  410648:	jmp    0x410584
  41064d:	cmp    edx,0x8
  410650:	jne    0x4106bb
  410652:	movzx  edx,BYTE PTR [rcx]
  410655:	mov    rdi,r13
  410658:	mov    r10,rdx
  41065b:	or     r10,0xffffffffffffff00
  410662:	test   dl,dl
  410664:	cmovs  rdx,r10
  410668:	sub    rdx,rax
  41066b:	lea    rax,[r8+rdx*1]
  41066f:	mov    r8d,0x1
  410675:	mov    rdx,r13
  410678:	mov    QWORD PTR [rbp-0x30],rax
  41067c:	call   0x4102c0
  410681:	jmp    0x41057b
  410686:	movzx  edx,WORD PTR [rcx]
  410689:	mov    rdi,r13
  41068c:	mov    r10,rdx
  41068f:	or     r10,0xffffffffffff0000
  410696:	test   dx,dx
  410699:	cmovs  rdx,r10
  41069d:	sub    rdx,rax
  4106a0:	lea    rax,[r8+rdx*1]
  4106a4:	mov    r8d,0x2
  4106aa:	mov    rdx,r13
  4106ad:	mov    QWORD PTR [rbp-0x30],rax
  4106b1:	call   0x4102c0
  4106b6:	jmp    0x41057b
  4106bb:	lea    rcx,[rip+0x6356]        # 0x416a18
  4106c2:	mov    QWORD PTR [rbp-0x30],0x0
  4106ca:	call   0x410250
  4106cf:	mov    edx,DWORD PTR [rcx]
  4106d1:	mov    rdi,r13
  4106d4:	mov    r10,rdx
  4106d7:	or     r10,r14
  4106da:	test   edx,edx
  4106dc:	cmovs  rdx,r10
  4106e0:	sub    rdx,rax
  4106e3:	lea    rax,[r8+rdx*1]
  4106e7:	mov    r8d,0x4
  4106ed:	mov    rdx,r13
  4106f0:	mov    QWORD PTR [rbp-0x30],rax
  4106f4:	call   0x4102c0
  4106f9:	jmp    0x41057b
  4106fe:	add    rbx,QWORD PTR [rip+0x9f83]        # 0x41a688
  410705:	lea    rcx,[rip+0x6274]        # 0x416980
  41070c:	mov    rax,QWORD PTR [rbx+0x10]
  410710:	mov    r8,QWORD PTR [rbx+0x8]
  410714:	mov    edx,DWORD PTR [rax+0x8]
  410717:	call   0x410250
  41071c:	lea    rcx,[rip+0x62bd]        # 0x4169e0
  410723:	call   0x410250
  410728:	nop
  410729:	nop
  41072a:	nop
  41072b:	nop
  41072c:	nop
  41072d:	nop
  41072e:	nop
  41072f:	nop
  410730:	sub    rsp,0x28
  410734:	mov    eax,DWORD PTR [rcx]
  410736:	cmp    eax,0xc0000091
  41073b:	ja     0x4107a0
  41073d:	cmp    eax,0xc000008d
  410742:	jae    0x4107bf
  410744:	cmp    eax,0xc0000008
  410749:	je     0x410860
  41074f:	ja     0x410830
  410755:	cmp    eax,0x80000002
  41075a:	je     0x410860
  410760:	cmp    eax,0xc0000005
  410765:	jne    0x41083e
  41076b:	xor    edx,edx
  41076d:	mov    ecx,0xb
  410772:	call   0x411250
  410777:	cmp    rax,0x1
  41077b:	je     0x4108c0
  410781:	test   rax,rax
  410784:	je     0x4108a0
  41078a:	mov    ecx,0xb
  41078f:	call   rax
  410791:	xor    eax,eax
  410793:	add    rsp,0x28
  410797:	ret    
  410798:	nop    DWORD PTR [rax+rax*1+0x0]
  4107a0:	cmp    eax,0xc0000094
  4107a5:	je     0x410870
  4107ab:	ja     0x4107f0
  4107ad:	cmp    eax,0xc0000092
  4107b2:	je     0x410860
  4107b8:	cmp    eax,0xc0000093
  4107bd:	jne    0x41083e
  4107bf:	xor    edx,edx
  4107c1:	mov    ecx,0x8
  4107c6:	call   0x411250
  4107cb:	cmp    rax,0x1
  4107cf:	mov    rdx,rax
  4107d2:	je     0x410848
  4107d4:	test   rdx,rdx
  4107d7:	mov    eax,0x1
  4107dc:	je     0x410793
  4107de:	mov    ecx,0x8
  4107e3:	call   rdx
  4107e5:	xor    eax,eax
  4107e7:	add    rsp,0x28
  4107eb:	ret    
  4107ec:	nop    DWORD PTR [rax+0x0]
  4107f0:	cmp    eax,0xc0000095
  4107f5:	je     0x410860
  4107f7:	cmp    eax,0xc0000096
  4107fc:	jne    0x41083e
  4107fe:	xor    edx,edx
  410800:	mov    ecx,0x4
  410805:	call   0x411250
  41080a:	cmp    rax,0x1
  41080e:	je     0x4108aa
  410814:	test   rax,rax
  410817:	je     0x4108a0
  41081d:	mov    ecx,0x4
  410822:	call   rax
  410824:	xor    eax,eax
  410826:	jmp    0x410793
  41082b:	nop    DWORD PTR [rax+rax*1+0x0]
  410830:	cmp    eax,0xc000001d
  410835:	je     0x4107fe
  410837:	cmp    eax,0xc000008c
  41083c:	je     0x410860
  41083e:	mov    eax,0x1
  410843:	add    rsp,0x28
  410847:	ret    
  410848:	mov    edx,0x1
  41084d:	mov    ecx,0x8
  410852:	call   0x411250
  410857:	call   0x410220
  41085c:	nop    DWORD PTR [rax+0x0]
  410860:	xor    eax,eax
  410862:	add    rsp,0x28
  410866:	ret    
  410867:	nop    WORD PTR [rax+rax*1+0x0]
  410870:	xor    edx,edx
  410872:	mov    ecx,0x8
  410877:	call   0x411250
  41087c:	cmp    rax,0x1
  410880:	mov    rdx,rax
  410883:	jne    0x4107d4
  410889:	mov    edx,0x1
  41088e:	mov    ecx,0x8
  410893:	call   0x411250
  410898:	xor    eax,eax
  41089a:	jmp    0x410793
  41089f:	nop
  4108a0:	mov    eax,0x4
  4108a5:	add    rsp,0x28
  4108a9:	ret    
  4108aa:	mov    edx,0x1
  4108af:	mov    ecx,0x4
  4108b4:	call   0x411250
  4108b9:	xor    eax,eax
  4108bb:	jmp    0x410793
  4108c0:	mov    edx,0x1
  4108c5:	mov    ecx,0xb
  4108ca:	call   0x411250
  4108cf:	xor    eax,eax
  4108d1:	jmp    0x410793
  4108d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4108e0:	push   r12
  4108e2:	push   rbp
  4108e3:	push   rdi
  4108e4:	push   rsi
  4108e5:	push   rbx
  4108e6:	sub    rsp,0x20
  4108ea:	call   0x411050
  4108ef:	mov    rbp,rax
  4108f2:	mov    eax,DWORD PTR [rip+0x9dd0]        # 0x41a6c8
  4108f8:	test   eax,eax
  4108fa:	jne    0x410921
  4108fc:	test   rbp,rbp
  4108ff:	je     0x410921
  410901:	lea    rcx,[rip+0x6148]        # 0x416a50
  410908:	mov    DWORD PTR [rip+0x9db6],0x1        # 0x41a6c8
  410912:	call   0x410e90
  410917:	test   rax,rax
  41091a:	je     0x410930
  41091c:	mov    eax,0x1
  410921:	add    rsp,0x20
  410925:	pop    rbx
  410926:	pop    rsi
  410927:	pop    rdi
  410928:	pop    rbp
  410929:	pop    r12
  41092b:	ret    
  41092c:	nop    DWORD PTR [rax+0x0]
  410930:	lea    rbx,[rip+0x9ec9]        # 0x41a800
  410937:	mov    ecx,0x30
  41093c:	lea    rdx,[rip+0x9dbd]        # 0x41a700
  410943:	lea    r12,[rip+0xfffffffffffffde6]        # 0x410730
  41094a:	xor    esi,esi
  41094c:	mov    rdi,rbx
  41094f:	rep stos QWORD PTR es:[rdi],rax
  410952:	mov    rdi,rdx
  410955:	sub    r12,rbp
  410958:	mov    cl,0x20
  41095a:	rep stos QWORD PTR es:[rdi],rax
  41095d:	mov    rdi,rdx
  410960:	jmp    0x410990
  410962:	mov    BYTE PTR [rdi],0x9
  410965:	mov    DWORD PTR [rdi+0x4],r12d
  410969:	add    rsi,0x1
  41096d:	mov    edx,DWORD PTR [rax+0xc]
  410970:	add    rbx,0xc
  410974:	mov    DWORD PTR [rbx-0xc],edx
  410977:	add    edx,DWORD PTR [rax+0x8]
  41097a:	mov    rax,rdi
  41097d:	sub    rax,rbp
  410980:	add    rdi,0x8
  410984:	mov    DWORD PTR [rbx-0x4],eax
  410987:	mov    DWORD PTR [rbx-0x8],edx
  41098a:	cmp    rsi,0x20
  41098e:	je     0x4109c5
  410990:	mov    rcx,rsi
  410993:	call   0x410fc0
  410998:	test   rax,rax
  41099b:	jne    0x410962
  41099d:	test   rsi,rsi
  4109a0:	je     0x41091c
  4109a6:	mov    edx,esi
  4109a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4109b0:	mov    r8,rbp
  4109b3:	lea    rcx,[rip+0x9e46]        # 0x41a800
  4109ba:	call   QWORD PTR [rip+0xb944]        # 0x41c304
  4109c0:	jmp    0x41091c
  4109c5:	mov    edx,0x20
  4109ca:	jmp    0x4109b0
  4109cc:	nop    DWORD PTR [rax+0x0]
  4109d0:	push   rbx
  4109d1:	sub    rsp,0x20
  4109d5:	mov    rdx,QWORD PTR [rcx]
  4109d8:	mov    eax,DWORD PTR [rdx]
  4109da:	mov    r8d,eax
  4109dd:	and    r8d,0x20ffffff
  4109e4:	cmp    r8d,0x20474343
  4109eb:	je     0x410af0
  4109f1:	cmp    eax,0xc0000091
  4109f6:	mov    rbx,rcx
  4109f9:	ja     0x410a80
  4109ff:	cmp    eax,0xc000008d
  410a04:	jae    0x410a97
  410a0a:	cmp    eax,0xc0000008
  410a0f:	je     0x410a43
  410a11:	ja     0x410a50
  410a13:	cmp    eax,0x80000002
  410a18:	je     0x410a43
  410a1a:	cmp    eax,0xc0000005
  410a1f:	jne    0x410a62
  410a21:	xor    edx,edx
  410a23:	mov    ecx,0xb
  410a28:	call   0x411250
  410a2d:	cmp    rax,0x1
  410a31:	je     0x410b60
  410a37:	test   rax,rax
  410a3a:	je     0x410a62
  410a3c:	mov    ecx,0xb
  410a41:	call   rax
  410a43:	mov    eax,0xffffffff
  410a48:	add    rsp,0x20
  410a4c:	pop    rbx
  410a4d:	ret    
  410a4e:	xchg   ax,ax
  410a50:	cmp    eax,0xc000001d
  410a55:	je     0x410b16
  410a5b:	cmp    eax,0xc000008c
  410a60:	je     0x410a43
  410a62:	mov    rax,QWORD PTR [rip+0x9c57]        # 0x41a6c0
  410a69:	test   rax,rax
  410a6c:	je     0x410a48
  410a6e:	mov    rcx,rbx
  410a71:	add    rsp,0x20
  410a75:	pop    rbx
  410a76:	rex.W jmp rax
  410a79:	nop    DWORD PTR [rax+0x0]
  410a80:	cmp    eax,0xc0000094
  410a85:	je     0x410ac2
  410a87:	ja     0x410b00
  410a89:	cmp    eax,0xc0000092
  410a8e:	je     0x410a43
  410a90:	cmp    eax,0xc0000093
  410a95:	jne    0x410a62
  410a97:	xor    edx,edx
  410a99:	mov    ecx,0x8
  410a9e:	call   0x411250
  410aa3:	cmp    rax,0x1
  410aa7:	jne    0x410ad4
  410aa9:	mov    edx,0x1
  410aae:	mov    ecx,0x8
  410ab3:	call   0x411250
  410ab8:	call   0x410220
  410abd:	jmp    0x410a43
  410ac2:	xor    edx,edx
  410ac4:	mov    ecx,0x8
  410ac9:	call   0x411250
  410ace:	cmp    rax,0x1
  410ad2:	je     0x410b42
  410ad4:	test   rax,rax
  410ad7:	je     0x410a62
  410ad9:	mov    ecx,0x8
  410ade:	call   rax
  410ae0:	mov    eax,0xffffffff
  410ae5:	jmp    0x410a48
  410aea:	nop    WORD PTR [rax+rax*1+0x0]
  410af0:	test   BYTE PTR [rdx+0x4],0x1
  410af4:	jne    0x4109f1
  410afa:	jmp    0x410a43
  410aff:	nop
  410b00:	cmp    eax,0xc0000095
  410b05:	je     0x410a43
  410b0b:	cmp    eax,0xc0000096
  410b10:	jne    0x410a62
  410b16:	xor    edx,edx
  410b18:	mov    ecx,0x4
  410b1d:	call   0x411250
  410b22:	cmp    rax,0x1
  410b26:	je     0x410b74
  410b28:	test   rax,rax
  410b2b:	je     0x410a62
  410b31:	mov    ecx,0x4
  410b36:	call   rax
  410b38:	mov    eax,0xffffffff
  410b3d:	jmp    0x410a48
  410b42:	mov    edx,0x1
  410b47:	mov    ecx,0x8
  410b4c:	call   0x411250
  410b51:	jmp    0x410a43
  410b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410b60:	mov    edx,0x1
  410b65:	mov    ecx,0xb
  410b6a:	call   0x411250
  410b6f:	jmp    0x410a43
  410b74:	mov    edx,0x1
  410b79:	mov    ecx,0x4
  410b7e:	call   0x411250
  410b83:	jmp    0x410a43
  410b88:	nop
  410b89:	nop
  410b8a:	nop
  410b8b:	nop
  410b8c:	nop
  410b8d:	nop
  410b8e:	nop
  410b8f:	nop
  410b90:	push   rbp
  410b91:	push   rdi
  410b92:	push   rsi
  410b93:	push   rbx
  410b94:	sub    rsp,0x28
  410b98:	lea    rcx,[rip+0x9e01]        # 0x41a9a0
  410b9f:	call   QWORD PTR [rip+0xb707]        # 0x41c2ac
  410ba5:	mov    rbx,QWORD PTR [rip+0x9dd4]        # 0x41a980
  410bac:	test   rbx,rbx
  410baf:	je     0x410be4
  410bb1:	mov    rbp,QWORD PTR [rip+0xb784]        # 0x41c33c
  410bb8:	mov    rdi,QWORD PTR [rip+0xb70d]        # 0x41c2cc
  410bbf:	nop
  410bc0:	mov    ecx,DWORD PTR [rbx]
  410bc2:	call   rbp
  410bc4:	mov    rsi,rax
  410bc7:	call   rdi
  410bc9:	test   eax,eax
  410bcb:	jne    0x410bdb
  410bcd:	test   rsi,rsi
  410bd0:	je     0x410bdb
  410bd2:	mov    rax,QWORD PTR [rbx+0x8]
  410bd6:	mov    rcx,rsi
  410bd9:	call   rax
  410bdb:	mov    rbx,QWORD PTR [rbx+0x10]
  410bdf:	test   rbx,rbx
  410be2:	jne    0x410bc0
  410be4:	mov    rax,QWORD PTR [rip+0xb709]        # 0x41c2f4
  410beb:	lea    rcx,[rip+0x9dae]        # 0x41a9a0
  410bf2:	add    rsp,0x28
  410bf6:	pop    rbx
  410bf7:	pop    rsi
  410bf8:	pop    rdi
  410bf9:	pop    rbp
  410bfa:	rex.W jmp rax
  410bfd:	nop    DWORD PTR [rax]
  410c00:	push   rdi
  410c01:	push   rsi
  410c02:	push   rbx
  410c03:	sub    rsp,0x20
  410c07:	mov    eax,DWORD PTR [rip+0x9d7b]        # 0x41a988
  410c0d:	test   eax,eax
  410c0f:	jne    0x410c20
  410c11:	add    rsp,0x20
  410c15:	pop    rbx
  410c16:	pop    rsi
  410c17:	pop    rdi
  410c18:	ret    
  410c19:	nop    DWORD PTR [rax+0x0]
  410c20:	mov    rsi,rdx
  410c23:	mov    edi,ecx
  410c25:	mov    edx,0x18
  410c2a:	mov    ecx,0x1
  410c2f:	call   0x4112e8
  410c34:	test   rax,rax
  410c37:	mov    rbx,rax
  410c3a:	je     0x410c78
  410c3c:	mov    DWORD PTR [rax],edi
  410c3e:	mov    QWORD PTR [rax+0x8],rsi
  410c42:	lea    rcx,[rip+0x9d57]        # 0x41a9a0
  410c49:	call   QWORD PTR [rip+0xb65d]        # 0x41c2ac
  410c4f:	mov    rax,QWORD PTR [rip+0x9d2a]        # 0x41a980
  410c56:	lea    rcx,[rip+0x9d43]        # 0x41a9a0
  410c5d:	mov    QWORD PTR [rip+0x9d1c],rbx        # 0x41a980
  410c64:	mov    QWORD PTR [rbx+0x10],rax
  410c68:	call   QWORD PTR [rip+0xb686]        # 0x41c2f4
  410c6e:	xor    eax,eax
  410c70:	add    rsp,0x20
  410c74:	pop    rbx
  410c75:	pop    rsi
  410c76:	pop    rdi
  410c77:	ret    
  410c78:	mov    eax,0xffffffff
  410c7d:	jmp    0x410c11
  410c7f:	nop
  410c80:	push   rbx
  410c81:	sub    rsp,0x20
  410c85:	mov    eax,DWORD PTR [rip+0x9cfd]        # 0x41a988
  410c8b:	test   eax,eax
  410c8d:	jne    0x410ca0
  410c8f:	xor    eax,eax
  410c91:	add    rsp,0x20
  410c95:	pop    rbx
  410c96:	ret    
  410c97:	nop    WORD PTR [rax+rax*1+0x0]
  410ca0:	mov    ebx,ecx
  410ca2:	lea    rcx,[rip+0x9cf7]        # 0x41a9a0
  410ca9:	call   QWORD PTR [rip+0xb5fd]        # 0x41c2ac
  410caf:	mov    rdx,QWORD PTR [rip+0x9cca]        # 0x41a980
  410cb6:	test   rdx,rdx
  410cb9:	je     0x410cd7
  410cbb:	mov    eax,DWORD PTR [rdx]
  410cbd:	cmp    eax,ebx
  410cbf:	jne    0x410cce
  410cc1:	jmp    0x410d0f
  410cc3:	mov    r8d,DWORD PTR [rax]
  410cc6:	cmp    r8d,ebx
  410cc9:	je     0x410cf0
  410ccb:	mov    rdx,rax
  410cce:	mov    rax,QWORD PTR [rdx+0x10]
  410cd2:	test   rax,rax
  410cd5:	jne    0x410cc3
  410cd7:	lea    rcx,[rip+0x9cc2]        # 0x41a9a0
  410cde:	call   QWORD PTR [rip+0xb610]        # 0x41c2f4
  410ce4:	xor    eax,eax
  410ce6:	add    rsp,0x20
  410cea:	pop    rbx
  410ceb:	ret    
  410cec:	nop    DWORD PTR [rax+0x0]
  410cf0:	mov    rcx,rax
  410cf3:	mov    rax,QWORD PTR [rax+0x10]
  410cf7:	mov    QWORD PTR [rdx+0x10],rax
  410cfb:	call   0x411298
  410d00:	lea    rcx,[rip+0x9c99]        # 0x41a9a0
  410d07:	call   QWORD PTR [rip+0xb5e7]        # 0x41c2f4
  410d0d:	jmp    0x410ce4
  410d0f:	mov    rax,QWORD PTR [rdx+0x10]
  410d13:	mov    rcx,rdx
  410d16:	mov    QWORD PTR [rip+0x9c63],rax        # 0x41a980
  410d1d:	jmp    0x410cfb
  410d1f:	nop
  410d20:	push   rbx
  410d21:	sub    rsp,0x20
  410d25:	cmp    edx,0x1
  410d28:	je     0x410dc0
  410d2e:	jb     0x410d60
  410d30:	cmp    edx,0x2
  410d33:	je     0x410d50
  410d35:	cmp    edx,0x3
  410d38:	jne    0x410d55
  410d3a:	mov    eax,DWORD PTR [rip+0x9c48]        # 0x41a988
  410d40:	test   eax,eax
  410d42:	je     0x410d55
  410d44:	call   0x410b90
  410d49:	jmp    0x410d55
  410d4b:	nop    DWORD PTR [rax+rax*1+0x0]
  410d50:	call   0x410220
  410d55:	mov    eax,0x1
  410d5a:	add    rsp,0x20
  410d5e:	pop    rbx
  410d5f:	ret    
  410d60:	mov    eax,DWORD PTR [rip+0x9c22]        # 0x41a988
  410d66:	test   eax,eax
  410d68:	jne    0x410df0
  410d6e:	mov    eax,DWORD PTR [rip+0x9c14]        # 0x41a988
  410d74:	cmp    eax,0x1
  410d77:	jne    0x410d55
  410d79:	mov    rcx,QWORD PTR [rip+0x9c00]        # 0x41a980
  410d80:	test   rcx,rcx
  410d83:	je     0x410d96
  410d85:	mov    rbx,QWORD PTR [rcx+0x10]
  410d89:	call   0x411298
  410d8e:	test   rbx,rbx
  410d91:	mov    rcx,rbx
  410d94:	jne    0x410d85
  410d96:	lea    rcx,[rip+0x9c03]        # 0x41a9a0
  410d9d:	mov    QWORD PTR [rip+0x9bd8],0x0        # 0x41a980
  410da8:	mov    DWORD PTR [rip+0x9bd6],0x0        # 0x41a988
  410db2:	call   QWORD PTR [rip+0xb4ec]        # 0x41c2a4
  410db8:	jmp    0x410d55
  410dba:	nop    WORD PTR [rax+rax*1+0x0]
  410dc0:	mov    eax,DWORD PTR [rip+0x9bc2]        # 0x41a988
  410dc6:	test   eax,eax
  410dc8:	je     0x410de0
  410dca:	mov    eax,0x1
  410dcf:	mov    DWORD PTR [rip+0x9baf],0x1        # 0x41a988
  410dd9:	add    rsp,0x20
  410ddd:	pop    rbx
  410dde:	ret    
  410ddf:	nop
  410de0:	lea    rcx,[rip+0x9bb9]        # 0x41a9a0
  410de7:	call   QWORD PTR [rip+0xb4ff]        # 0x41c2ec
  410ded:	jmp    0x410dca
  410def:	nop
  410df0:	call   0x410b90
  410df5:	jmp    0x410d6e
  410dfa:	nop
  410dfb:	nop
  410dfc:	nop
  410dfd:	nop
  410dfe:	nop
  410dff:	nop
  410e00:	movsxd rax,DWORD PTR [rcx+0x3c]
  410e04:	add    rcx,rax
  410e07:	xor    eax,eax
  410e09:	cmp    DWORD PTR [rcx],0x4550
  410e0f:	je     0x410e13
  410e11:	repz ret 
  410e13:	xor    eax,eax
  410e15:	cmp    WORD PTR [rcx+0x18],0x20b
  410e1b:	sete   al
  410e1e:	ret    
  410e1f:	nop
  410e20:	cmp    WORD PTR [rcx],0x5a4d
  410e25:	je     0x410e30
  410e27:	xor    eax,eax
  410e29:	ret    
  410e2a:	nop    WORD PTR [rax+rax*1+0x0]
  410e30:	jmp    0x410e00
  410e32:	nop    DWORD PTR [rax+0x0]
  410e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410e40:	movsxd rax,DWORD PTR [rcx+0x3c]
  410e44:	add    rcx,rax
  410e47:	movzx  eax,WORD PTR [rcx+0x14]
  410e4b:	lea    rax,[rcx+rax*1+0x18]
  410e50:	movzx  ecx,WORD PTR [rcx+0x6]
  410e54:	test   ecx,ecx
  410e56:	je     0x410e81
  410e58:	sub    ecx,0x1
  410e5b:	lea    rcx,[rcx+rcx*4]
  410e5f:	lea    r9,[rax+rcx*8+0x28]
  410e64:	mov    r8d,DWORD PTR [rax+0xc]
  410e68:	cmp    r8,rdx
  410e6b:	mov    rcx,r8
  410e6e:	ja     0x410e78
  410e70:	add    ecx,DWORD PTR [rax+0x8]
  410e73:	cmp    rdx,rcx
  410e76:	jb     0x410e83
  410e78:	add    rax,0x28
  410e7c:	cmp    rax,r9
  410e7f:	jne    0x410e64
  410e81:	xor    eax,eax
  410e83:	repz ret 
  410e85:	nop
  410e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410e90:	push   rdi
  410e91:	push   rsi
  410e92:	push   rbx
  410e93:	sub    rsp,0x20
  410e97:	mov    rsi,rcx
  410e9a:	call   0x411230
  410e9f:	cmp    rax,0x8
  410ea3:	ja     0x410ec0
  410ea5:	mov    rbx,QWORD PTR [rip+0x5c34]        # 0x416ae0
  410eac:	xor    edi,edi
  410eae:	cmp    WORD PTR [rbx],0x5a4d
  410eb3:	je     0x410ed0
  410eb5:	mov    rax,rdi
  410eb8:	add    rsp,0x20
  410ebc:	pop    rbx
  410ebd:	pop    rsi
  410ebe:	pop    rdi
  410ebf:	ret    
  410ec0:	xor    edi,edi
  410ec2:	mov    rax,rdi
  410ec5:	add    rsp,0x20
  410ec9:	pop    rbx
  410eca:	pop    rsi
  410ecb:	pop    rdi
  410ecc:	ret    
  410ecd:	nop    DWORD PTR [rax]
  410ed0:	mov    rcx,rbx
  410ed3:	call   0x410e00
  410ed8:	test   eax,eax
  410eda:	je     0x410eb5
  410edc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  410ee0:	add    rdx,rbx
  410ee3:	movzx  eax,WORD PTR [rdx+0x14]
  410ee7:	lea    rbx,[rdx+rax*1+0x18]
  410eec:	movzx  eax,WORD PTR [rdx+0x6]
  410ef0:	test   eax,eax
  410ef2:	je     0x410eb5
  410ef4:	sub    eax,0x1
  410ef7:	lea    rax,[rax+rax*4]
  410efb:	lea    rdi,[rbx+rax*8+0x28]
  410f00:	jmp    0x410f0b
  410f02:	add    rbx,0x28
  410f06:	cmp    rbx,rdi
  410f09:	je     0x410ec0
  410f0b:	mov    r8d,0x8
  410f11:	mov    rdx,rsi
  410f14:	mov    rcx,rbx
  410f17:	call   0x411228
  410f1c:	test   eax,eax
  410f1e:	jne    0x410f02
  410f20:	mov    rdi,rbx
  410f23:	mov    rax,rdi
  410f26:	add    rsp,0x20
  410f2a:	pop    rbx
  410f2b:	pop    rsi
  410f2c:	pop    rdi
  410f2d:	ret    
  410f2e:	xchg   ax,ax
  410f30:	push   rsi
  410f31:	push   rbx
  410f32:	sub    rsp,0x28
  410f36:	mov    rbx,QWORD PTR [rip+0x5ba3]        # 0x416ae0
  410f3d:	cmp    WORD PTR [rbx],0x5a4d
  410f42:	je     0x410f50
  410f44:	xor    eax,eax
  410f46:	add    rsp,0x28
  410f4a:	pop    rbx
  410f4b:	pop    rsi
  410f4c:	ret    
  410f4d:	nop    DWORD PTR [rax]
  410f50:	mov    rsi,rcx
  410f53:	mov    rcx,rbx
  410f56:	call   0x410e00
  410f5b:	test   eax,eax
  410f5d:	je     0x410f44
  410f5f:	sub    rsi,rbx
  410f62:	mov    rcx,rbx
  410f65:	mov    rdx,rsi
  410f68:	add    rsp,0x28
  410f6c:	pop    rbx
  410f6d:	pop    rsi
  410f6e:	jmp    0x410e40
  410f73:	nop    DWORD PTR [rax]
  410f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f80:	push   rbx
  410f81:	sub    rsp,0x20
  410f85:	mov    rbx,QWORD PTR [rip+0x5b54]        # 0x416ae0
  410f8c:	xor    eax,eax
  410f8e:	cmp    WORD PTR [rbx],0x5a4d
  410f93:	je     0x410fa0
  410f95:	add    rsp,0x20
  410f99:	pop    rbx
  410f9a:	ret    
  410f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  410fa0:	mov    rcx,rbx
  410fa3:	call   0x410e00
  410fa8:	test   eax,eax
  410faa:	je     0x410f95
  410fac:	movsxd rax,DWORD PTR [rbx+0x3c]
  410fb0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  410fb5:	add    rsp,0x20
  410fb9:	pop    rbx
  410fba:	ret    
  410fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  410fc0:	push   rdi
  410fc1:	push   rsi
  410fc2:	push   rbx
  410fc3:	sub    rsp,0x20
  410fc7:	mov    rsi,QWORD PTR [rip+0x5b12]        # 0x416ae0
  410fce:	xor    edi,edi
  410fd0:	mov    rbx,rcx
  410fd3:	cmp    WORD PTR [rsi],0x5a4d
  410fd8:	je     0x410fe5
  410fda:	mov    rax,rdi
  410fdd:	add    rsp,0x20
  410fe1:	pop    rbx
  410fe2:	pop    rsi
  410fe3:	pop    rdi
  410fe4:	ret    
  410fe5:	mov    rcx,rsi
  410fe8:	call   0x410e00
  410fed:	test   eax,eax
  410fef:	je     0x410fda
  410ff1:	movsxd rax,DWORD PTR [rsi+0x3c]
  410ff5:	add    rsi,rax
  410ff8:	movzx  eax,WORD PTR [rsi+0x14]
  410ffc:	lea    rdx,[rsi+rax*1+0x18]
  411001:	movzx  eax,WORD PTR [rsi+0x6]
  411005:	test   eax,eax
  411007:	je     0x410fda
  411009:	sub    eax,0x1
  41100c:	lea    rax,[rax+rax*4]
  411010:	lea    rax,[rdx+rax*8+0x28]
  411015:	test   BYTE PTR [rdx+0x27],0x20
  411019:	je     0x411024
  41101b:	test   rbx,rbx
  41101e:	je     0x411040
  411020:	sub    rbx,0x1
  411024:	add    rdx,0x28
  411028:	cmp    rdx,rax
  41102b:	jne    0x411015
  41102d:	xor    edi,edi
  41102f:	mov    rax,rdi
  411032:	add    rsp,0x20
  411036:	pop    rbx
  411037:	pop    rsi
  411038:	pop    rdi
  411039:	ret    
  41103a:	nop    WORD PTR [rax+rax*1+0x0]
  411040:	mov    rdi,rdx
  411043:	mov    rax,rdi
  411046:	add    rsp,0x20
  41104a:	pop    rbx
  41104b:	pop    rsi
  41104c:	pop    rdi
  41104d:	ret    
  41104e:	xchg   ax,ax
  411050:	push   rsi
  411051:	push   rbx
  411052:	sub    rsp,0x28
  411056:	mov    rsi,QWORD PTR [rip+0x5a83]        # 0x416ae0
  41105d:	xor    ebx,ebx
  41105f:	cmp    WORD PTR [rsi],0x5a4d
  411064:	je     0x411070
  411066:	mov    rax,rbx
  411069:	add    rsp,0x28
  41106d:	pop    rbx
  41106e:	pop    rsi
  41106f:	ret    
  411070:	mov    rcx,rsi
  411073:	call   0x410e00
  411078:	test   eax,eax
  41107a:	cmovne rbx,rsi
  41107e:	mov    rax,rbx
  411081:	add    rsp,0x28
  411085:	pop    rbx
  411086:	pop    rsi
  411087:	ret    
  411088:	nop    DWORD PTR [rax+rax*1+0x0]
  411090:	push   rsi
  411091:	push   rbx
  411092:	sub    rsp,0x28
  411096:	mov    rbx,QWORD PTR [rip+0x5a43]        # 0x416ae0
  41109d:	xor    eax,eax
  41109f:	cmp    WORD PTR [rbx],0x5a4d
  4110a4:	je     0x4110b0
  4110a6:	add    rsp,0x28
  4110aa:	pop    rbx
  4110ab:	pop    rsi
  4110ac:	ret    
  4110ad:	nop    DWORD PTR [rax]
  4110b0:	mov    rsi,rcx
  4110b3:	mov    rcx,rbx
  4110b6:	call   0x410e00
  4110bb:	test   eax,eax
  4110bd:	je     0x4110a6
  4110bf:	sub    rsi,rbx
  4110c2:	mov    rcx,rbx
  4110c5:	mov    rdx,rsi
  4110c8:	call   0x410e40
  4110cd:	test   rax,rax
  4110d0:	je     0x4110e1
  4110d2:	mov    eax,DWORD PTR [rax+0x24]
  4110d5:	not    eax
  4110d7:	shr    eax,0x1f
  4110da:	add    rsp,0x28
  4110de:	pop    rbx
  4110df:	pop    rsi
  4110e0:	ret    
  4110e1:	xor    eax,eax
  4110e3:	jmp    0x4110a6
  4110e5:	nop
  4110e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4110f0:	push   rbp
  4110f1:	push   rdi
  4110f2:	push   rsi
  4110f3:	push   rbx
  4110f4:	sub    rsp,0x28
  4110f8:	mov    rdi,QWORD PTR [rip+0x59e1]        # 0x416ae0
  4110ff:	xor    ebp,ebp
  411101:	mov    esi,ecx
  411103:	cmp    WORD PTR [rdi],0x5a4d
  411108:	je     0x411120
  41110a:	mov    rax,rbp
  41110d:	add    rsp,0x28
  411111:	pop    rbx
  411112:	pop    rsi
  411113:	pop    rdi
  411114:	pop    rbp
  411115:	ret    
  411116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411120:	mov    rcx,rdi
  411123:	call   0x410e00
  411128:	test   eax,eax
  41112a:	je     0x41110a
  41112c:	movsxd rax,DWORD PTR [rdi+0x3c]
  411130:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  411137:	test   edx,edx
  411139:	je     0x41110a
  41113b:	mov    ebx,edx
  41113d:	mov    rcx,rdi
  411140:	mov    rdx,rbx
  411143:	call   0x410e40
  411148:	test   rax,rax
  41114b:	je     0x41110a
  41114d:	add    rbx,rdi
  411150:	mov    rdx,rbx
  411153:	jne    0x411167
  411155:	jmp    0x41110a
  411157:	nop    WORD PTR [rax+rax*1+0x0]
  411160:	sub    esi,0x1
  411163:	add    rdx,0x14
  411167:	mov    ecx,DWORD PTR [rdx+0x4]
  41116a:	test   ecx,ecx
  41116c:	jne    0x411175
  41116e:	mov    eax,DWORD PTR [rdx+0xc]
  411171:	test   eax,eax
  411173:	je     0x411190
  411175:	test   esi,esi
  411177:	jg     0x411160
  411179:	mov    ebp,DWORD PTR [rdx+0xc]
  41117c:	add    rbp,rdi
  41117f:	mov    rax,rbp
  411182:	add    rsp,0x28
  411186:	pop    rbx
  411187:	pop    rsi
  411188:	pop    rdi
  411189:	pop    rbp
  41118a:	ret    
  41118b:	nop    DWORD PTR [rax+rax*1+0x0]
  411190:	xor    ebp,ebp
  411192:	mov    rax,rbp
  411195:	add    rsp,0x28
  411199:	pop    rbx
  41119a:	pop    rsi
  41119b:	pop    rdi
  41119c:	pop    rbp
  41119d:	ret    
  41119e:	nop
  41119f:	nop
  4111a0:	push   rcx
  4111a1:	push   rax
  4111a2:	cmp    rax,0x1000
  4111a8:	lea    rcx,[rsp+0x18]
  4111ad:	jb     0x4111c8
  4111af:	sub    rcx,0x1000
  4111b6:	or     QWORD PTR [rcx],0x0
  4111ba:	sub    rax,0x1000
  4111c0:	cmp    rax,0x1000
  4111c6:	ja     0x4111af
  4111c8:	sub    rcx,rax
  4111cb:	or     QWORD PTR [rcx],0x0
  4111cf:	pop    rax
  4111d0:	pop    rcx
  4111d1:	ret    
  4111d2:	nop
  4111d3:	nop
  4111d4:	nop
  4111d5:	nop
  4111d6:	nop
  4111d7:	nop
  4111d8:	nop
  4111d9:	nop
  4111da:	nop
  4111db:	nop
  4111dc:	nop
  4111dd:	nop
  4111de:	nop
  4111df:	nop
  4111e0:	jmp    QWORD PTR [rip+0xb316]        # 0x41c4fc
  4111e6:	nop
  4111e7:	nop
  4111e8:	jmp    QWORD PTR [rip+0xb306]        # 0x41c4f4
  4111ee:	nop
  4111ef:	nop
  4111f0:	jmp    QWORD PTR [rip+0xb2f6]        # 0x41c4ec
  4111f6:	nop
  4111f7:	nop
  4111f8:	jmp    QWORD PTR [rip+0xb2e6]        # 0x41c4e4
  4111fe:	nop
  4111ff:	nop
  411200:	jmp    QWORD PTR [rip+0xb2d6]        # 0x41c4dc
  411206:	nop
  411207:	nop
  411208:	jmp    QWORD PTR [rip+0xb2c6]        # 0x41c4d4
  41120e:	nop
  41120f:	nop
  411210:	jmp    QWORD PTR [rip+0xb2b6]        # 0x41c4cc
  411216:	nop
  411217:	nop
  411218:	jmp    QWORD PTR [rip+0xb2a6]        # 0x41c4c4
  41121e:	nop
  41121f:	nop
  411220:	jmp    QWORD PTR [rip+0xb296]        # 0x41c4bc
  411226:	nop
  411227:	nop
  411228:	jmp    QWORD PTR [rip+0xb286]        # 0x41c4b4
  41122e:	nop
  41122f:	nop
  411230:	jmp    QWORD PTR [rip+0xb276]        # 0x41c4ac
  411236:	nop
  411237:	nop
  411238:	jmp    QWORD PTR [rip+0xb266]        # 0x41c4a4
  41123e:	nop
  41123f:	nop
  411240:	jmp    QWORD PTR [rip+0xb256]        # 0x41c49c
  411246:	nop
  411247:	nop
  411248:	jmp    QWORD PTR [rip+0xb246]        # 0x41c494
  41124e:	nop
  41124f:	nop
  411250:	jmp    QWORD PTR [rip+0xb236]        # 0x41c48c
  411256:	nop
  411257:	nop
  411258:	jmp    QWORD PTR [rip+0xb226]        # 0x41c484
  41125e:	nop
  41125f:	nop
  411260:	jmp    QWORD PTR [rip+0xb216]        # 0x41c47c
  411266:	nop
  411267:	nop
  411268:	jmp    QWORD PTR [rip+0xb206]        # 0x41c474
  41126e:	nop
  41126f:	nop
  411270:	jmp    QWORD PTR [rip+0xb1f6]        # 0x41c46c
  411276:	nop
  411277:	nop
  411278:	jmp    QWORD PTR [rip+0xb1e6]        # 0x41c464
  41127e:	nop
  41127f:	nop
  411280:	jmp    QWORD PTR [rip+0xb1d6]        # 0x41c45c
  411286:	nop
  411287:	nop
  411288:	jmp    QWORD PTR [rip+0xb1c6]        # 0x41c454
  41128e:	nop
  41128f:	nop
  411290:	jmp    QWORD PTR [rip+0xb1b6]        # 0x41c44c
  411296:	nop
  411297:	nop
  411298:	jmp    QWORD PTR [rip+0xb1a6]        # 0x41c444
  41129e:	nop
  41129f:	nop
  4112a0:	jmp    QWORD PTR [rip+0xb196]        # 0x41c43c
  4112a6:	nop
  4112a7:	nop
  4112a8:	jmp    QWORD PTR [rip+0xb186]        # 0x41c434
  4112ae:	nop
  4112af:	nop
  4112b0:	jmp    QWORD PTR [rip+0xb176]        # 0x41c42c
  4112b6:	nop
  4112b7:	nop
  4112b8:	jmp    QWORD PTR [rip+0xb166]        # 0x41c424
  4112be:	nop
  4112bf:	nop
  4112c0:	jmp    QWORD PTR [rip+0xb156]        # 0x41c41c
  4112c6:	nop
  4112c7:	nop
  4112c8:	jmp    QWORD PTR [rip+0xb146]        # 0x41c414
  4112ce:	nop
  4112cf:	nop
  4112d0:	jmp    QWORD PTR [rip+0xb136]        # 0x41c40c
  4112d6:	nop
  4112d7:	nop
  4112d8:	jmp    QWORD PTR [rip+0xb126]        # 0x41c404
  4112de:	nop
  4112df:	nop
  4112e0:	jmp    QWORD PTR [rip+0xb116]        # 0x41c3fc
  4112e6:	nop
  4112e7:	nop
  4112e8:	jmp    QWORD PTR [rip+0xb106]        # 0x41c3f4
  4112ee:	nop
  4112ef:	nop
  4112f0:	jmp    QWORD PTR [rip+0xb0f6]        # 0x41c3ec
  4112f6:	nop
  4112f7:	nop
  4112f8:	jmp    QWORD PTR [rip+0xb0e6]        # 0x41c3e4
  4112fe:	nop
  4112ff:	nop
  411300:	jmp    QWORD PTR [rip+0xb0d6]        # 0x41c3dc
  411306:	nop
  411307:	nop
  411308:	jmp    QWORD PTR [rip+0xb0c6]        # 0x41c3d4
  41130e:	nop
  41130f:	nop
  411310:	jmp    QWORD PTR [rip+0xb0b6]        # 0x41c3cc
  411316:	nop
  411317:	nop
  411318:	jmp    QWORD PTR [rip+0xb09e]        # 0x41c3bc
  41131e:	nop
  41131f:	nop
  411320:	jmp    QWORD PTR [rip+0xb08e]        # 0x41c3b4
  411326:	nop
  411327:	nop
  411328:	jmp    QWORD PTR [rip+0xb07e]        # 0x41c3ac
  41132e:	nop
  41132f:	nop
  411330:	jmp    QWORD PTR [rip+0xb066]        # 0x41c39c
  411336:	nop
  411337:	nop
  411338:	jmp    QWORD PTR [rip+0xb056]        # 0x41c394
  41133e:	nop
  41133f:	nop
  411340:	jmp    QWORD PTR [rip+0xb046]        # 0x41c38c
  411346:	nop
  411347:	nop
  411348:	jmp    QWORD PTR [rip+0xb036]        # 0x41c384
  41134e:	nop
  41134f:	nop
  411350:	jmp    QWORD PTR [rip+0xb01e]        # 0x41c374
  411356:	nop
  411357:	nop
  411358:	jmp    QWORD PTR [rip+0xb00e]        # 0x41c36c
  41135e:	nop
  41135f:	nop
  411360:	jmp    QWORD PTR [rip+0xaffe]        # 0x41c364
  411366:	nop
  411367:	nop
  411368:	nop    DWORD PTR [rax+rax*1+0x0]
  411370:	mov    rax,QWORD PTR [rip+0x9679]        # 0x41a9f0
  411377:	ret    
  411378:	nop    DWORD PTR [rax+rax*1+0x0]
  411380:	mov    rax,rcx
  411383:	xchg   QWORD PTR [rip+0x9666],rax        # 0x41a9f0
  41138a:	ret    
  41138b:	nop
  41138c:	nop
  41138d:	nop
  41138e:	nop
  41138f:	nop
  411390:	jmp    QWORD PTR [rip+0xafbe]        # 0x41c354
  411396:	nop
  411397:	nop
  411398:	jmp    QWORD PTR [rip+0xafae]        # 0x41c34c
  41139e:	nop
  41139f:	nop
  4113a0:	jmp    QWORD PTR [rip+0xaf9e]        # 0x41c344
  4113a6:	nop
  4113a7:	nop
  4113a8:	jmp    QWORD PTR [rip+0xaf8e]        # 0x41c33c
  4113ae:	nop
  4113af:	nop
  4113b0:	jmp    QWORD PTR [rip+0xaf7e]        # 0x41c334
  4113b6:	nop
  4113b7:	nop
  4113b8:	jmp    QWORD PTR [rip+0xaf6e]        # 0x41c32c
  4113be:	nop
  4113bf:	nop
  4113c0:	jmp    QWORD PTR [rip+0xaf5e]        # 0x41c324
  4113c6:	nop
  4113c7:	nop
  4113c8:	jmp    QWORD PTR [rip+0xaf4e]        # 0x41c31c
  4113ce:	nop
  4113cf:	nop
  4113d0:	jmp    QWORD PTR [rip+0xaf3e]        # 0x41c314
  4113d6:	nop
  4113d7:	nop
  4113d8:	jmp    QWORD PTR [rip+0xaf2e]        # 0x41c30c
  4113de:	nop
  4113df:	nop
  4113e0:	jmp    QWORD PTR [rip+0xaf1e]        # 0x41c304
  4113e6:	nop
  4113e7:	nop
  4113e8:	jmp    QWORD PTR [rip+0xaf0e]        # 0x41c2fc
  4113ee:	nop
  4113ef:	nop
  4113f0:	jmp    QWORD PTR [rip+0xaefe]        # 0x41c2f4
  4113f6:	nop
  4113f7:	nop
  4113f8:	jmp    QWORD PTR [rip+0xaeee]        # 0x41c2ec
  4113fe:	nop
  4113ff:	nop
  411400:	jmp    QWORD PTR [rip+0xaede]        # 0x41c2e4
  411406:	nop
  411407:	nop
  411408:	jmp    QWORD PTR [rip+0xaece]        # 0x41c2dc
  41140e:	nop
  41140f:	nop
  411410:	jmp    QWORD PTR [rip+0xaebe]        # 0x41c2d4
  411416:	nop
  411417:	nop
  411418:	jmp    QWORD PTR [rip+0xaeae]        # 0x41c2cc
  41141e:	nop
  41141f:	nop
  411420:	jmp    QWORD PTR [rip+0xae9e]        # 0x41c2c4
  411426:	nop
  411427:	nop
  411428:	jmp    QWORD PTR [rip+0xae8e]        # 0x41c2bc
  41142e:	nop
  41142f:	nop
  411430:	jmp    QWORD PTR [rip+0xae7e]        # 0x41c2b4
  411436:	nop
  411437:	nop
  411438:	jmp    QWORD PTR [rip+0xae6e]        # 0x41c2ac
  41143e:	nop
  41143f:	nop
  411440:	jmp    QWORD PTR [rip+0xae5e]        # 0x41c2a4
  411446:	nop
  411447:	nop
  411448:	nop    DWORD PTR [rax+rax*1+0x0]
  411450:	push   r15
  411452:	push   r14
  411454:	push   r13
  411456:	push   r12
  411458:	push   rbp
  411459:	push   rdi
  41145a:	push   rsi
  41145b:	push   rbx
  41145c:	sub    rsp,0x38
  411460:	lea    rbx,[rip+0x9619]        # 0x41aa80
  411467:	mov    rsi,rdx
  41146a:	mov    edi,ecx
  41146c:	call   0x40fdf0
  411471:	lea    rdx,[rip+0xffffffffffff0f08]        # 0x402380
  411478:	mov    ecx,0xb
  41147d:	mov    QWORD PTR [rip+0x9e60],0x0        # 0x41b2e8
  411488:	mov    BYTE PTR [rip+0xa289],0x0        # 0x41b718
  41148f:	mov    BYTE PTR [rip+0xa6b4],0x0        # 0x41bb4a
  411496:	mov    BYTE PTR [rip+0x99ee],0x0        # 0x41ae8b
  41149d:	mov    BYTE PTR [rip+0xa26c],0x1        # 0x41b710
  4114a4:	mov    DWORD PTR [rip+0x9e22],0x0        # 0x41b2d0
  4114ae:	mov    DWORD PTR [rip+0x9e38],0x9        # 0x41b2f0
  4114b8:	mov    BYTE PTR [rip+0x99d1],0x0        # 0x41ae90
  4114bf:	mov    BYTE PTR [rip+0xa685],0x0        # 0x41bb4b
  4114c6:	mov    DWORD PTR [rip+0xa23c],0x0        # 0x41b70c
  4114d0:	mov    DWORD PTR [rip+0x9e06],0x0        # 0x41b2e0
  4114da:	mov    DWORD PTR [rip+0x9de8],0x1e        # 0x41b2cc
  4114e4:	mov    BYTE PTR [rip+0x999f],0x0        # 0x41ae8a
  4114eb:	mov    DWORD PTR [rip+0xa657],0x0        # 0x41bb4c
  4114f5:	call   0x411250
  4114fa:	lea    rdx,[rip+0x438c]        # 0x41588d
  411501:	lea    rcx,[rip+0x9df8]        # 0x41b300
  411508:	call   0x402890
  41150d:	lea    rdx,[rip+0x4379]        # 0x41588d
  411514:	lea    rcx,[rip+0x99a5]        # 0x41aec0
  41151b:	call   0x402890
  411520:	mov    rdx,QWORD PTR [rsi]
  411523:	mov    rcx,rbx
  411526:	call   0x402890
  41152b:	movzx  r8d,BYTE PTR [rip+0x954d]        # 0x41aa80
  411533:	mov    QWORD PTR [rip+0x9d9e],rbx        # 0x41b2d8
  41153a:	lea    rax,[rip+0x9540]        # 0x41aa81
  411541:	mov    r9,rbx
  411544:	test   r8b,r8b
  411547:	je     0x41156c
  411549:	nop    DWORD PTR [rax+0x0]
  411550:	cmp    r8b,0x5c
  411554:	movzx  r8d,BYTE PTR [rax]
  411558:	cmove  r9,rax
  41155c:	add    rax,0x1
  411560:	test   r8b,r8b
  411563:	jne    0x411550
  411565:	mov    QWORD PTR [rip+0x9d6c],r9        # 0x41b2d8
  41156c:	lea    rbx,[rsp+0x28]
  411571:	lea    rdx,[rip+0x43e0]        # 0x415958
  411578:	mov    QWORD PTR [rsp+0x28],0x0
  411581:	mov    rcx,rbx
  411584:	call   0x4029b0
  411589:	lea    rdx,[rip+0x43ce]        # 0x41595e
  411590:	mov    rcx,rbx
  411593:	call   0x4029b0
  411598:	cmp    edi,0x1
  41159b:	jle    0x411c33
  4115a1:	lea    edx,[rdi-0x2]
  4115a4:	mov    rax,QWORD PTR [rsp+0x28]
  4115a9:	lea    rbx,[rsi+0x8]
  4115ad:	lea    rsi,[rsi+rdx*8+0x10]
  4115b2:	mov    rdx,QWORD PTR [rbx]
  4115b5:	mov    rcx,rax
  4115b8:	add    rbx,0x8
  4115bc:	call   0x402910
  4115c1:	cmp    rbx,rsi
  4115c4:	mov    QWORD PTR [rsp+0x28],rax
  4115c9:	jne    0x4115b2
  4115cb:	mov    rbp,rax
  4115ce:	test   rbp,rbp
  4115d1:	mov    DWORD PTR [rip+0xa139],0x7        # 0x41b714
  4115db:	mov    DWORD PTR [rip+0xa127],0x0        # 0x41b70c
  4115e5:	je     0x41175a
  4115eb:	mov    rbx,rbp
  4115ee:	xor    r14d,r14d
  4115f1:	mov    r15d,0x1
  4115f7:	lea    r12,[rip+0x4365]        # 0x415963
  4115fe:	mov    r13d,0x3
  411604:	jmp    0x411631
  411606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411610:	test   r15b,r15b
  411613:	je     0x411730
  411619:	cmp    BYTE PTR [rax],0x2d
  41161c:	jne    0x411730
  411622:	mov    r15d,0x1
  411628:	mov    rbx,QWORD PTR [rbx+0x8]
  41162c:	test   rbx,rbx
  41162f:	je     0x41164d
  411631:	mov    rax,QWORD PTR [rbx]
  411634:	mov    rdi,r12
  411637:	mov    rcx,r13
  41163a:	mov    rsi,rax
  41163d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41163f:	jne    0x411610
  411641:	mov    rbx,QWORD PTR [rbx+0x8]
  411645:	xor    r15d,r15d
  411648:	test   rbx,rbx
  41164b:	jne    0x411631
  41164d:	test   r14d,r14d
  411650:	je     0x41175a
  411656:	mov    DWORD PTR [rip+0x93e0],0x3        # 0x41aa40
  411660:	mov    rbx,QWORD PTR [rip+0x9c71]        # 0x41b2d8
  411667:	lea    rdx,[rip+0x42f8]        # 0x415966
  41166e:	mov    DWORD PTR [rip+0x9814],0x1        # 0x41ae8c
  411678:	mov    rcx,rbx
  41167b:	call   0x411218
  411680:	test   rax,rax
  411683:	je     0x411bc9
  411689:	mov    DWORD PTR [rip+0x97f9],0x2        # 0x41ae8c
  411693:	lea    rdx,[rip+0x42d8]        # 0x415972
  41169a:	mov    rcx,rbx
  41169d:	call   0x411218
  4116a2:	test   rax,rax
  4116a5:	je     0x411be6
  4116ab:	cmp    r14d,0x1
  4116af:	mov    DWORD PTR [rip+0x97d3],0x2        # 0x41ae8c
  4116b9:	sbb    eax,eax
  4116bb:	add    eax,0x2
  4116be:	mov    DWORD PTR [rip+0x937c],eax        # 0x41aa40
  4116c4:	test   rbp,rbp
  4116c7:	lea    r12,[rip+0x4295]        # 0x415963
  4116ce:	mov    r14d,0x3
  4116d4:	lea    r13,[rip+0x4409]        # 0x415ae4
  4116db:	jne    0x4116ef
  4116dd:	jmp    0x4118e6
  4116e2:	mov    rbp,QWORD PTR [rbp+0x8]
  4116e6:	test   rbp,rbp
  4116e9:	je     0x4118e6
  4116ef:	mov    rbx,QWORD PTR [rbp+0x0]
  4116f3:	mov    rdi,r12
  4116f6:	mov    rcx,r14
  4116f9:	mov    rsi,rbx
  4116fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4116fe:	je     0x4118e6
  411704:	cmp    BYTE PTR [rbx],0x2d
  411707:	jne    0x4116e2
  411709:	movzx  edx,BYTE PTR [rbx+0x1]
  41170d:	cmp    dl,0x2d
  411710:	je     0x4116e2
  411712:	test   dl,dl
  411714:	je     0x4116e2
  411716:	sub    edx,0x31
  411719:	mov    esi,0x2
  41171e:	cmp    dl,0x49
  411721:	ja     0x411798
  411723:	movzx  edx,dl
  411726:	movsxd rax,DWORD PTR [r13+rdx*4+0x0]
  41172b:	add    rax,r13
  41172e:	jmp    rax
  411730:	add    r14d,0x1
  411734:	mov    rcx,rax
  411737:	mov    DWORD PTR [rip+0x9fce],r14d        # 0x41b70c
  41173e:	call   0x411230
  411743:	cmp    eax,DWORD PTR [rip+0x9fcb]        # 0x41b714
  411749:	jle    0x411628
  41174f:	mov    DWORD PTR [rip+0x9fbf],eax        # 0x41b714
  411755:	jmp    0x411628
  41175a:	mov    DWORD PTR [rip+0x92dc],0x1        # 0x41aa40
  411764:	xor    r14d,r14d
  411767:	jmp    0x411660
  41176c:	mov    DWORD PTR [rip+0x9716],0x1        # 0x41ae8c
  411776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411780:	movzx  edx,BYTE PTR [rbx+rsi*1]
  411784:	add    rsi,0x1
  411788:	test   dl,dl
  41178a:	je     0x4116e2
  411790:	sub    edx,0x31
  411793:	cmp    dl,0x49
  411796:	jbe    0x411723
  411798:	mov    rsi,QWORD PTR [rip+0x9b39]        # 0x41b2d8
  41179f:	call   QWORD PTR [rip+0xabdf]        # 0x41c384
  4117a5:	lea    rcx,[rax+0x60]
  4117a9:	mov    r9,rbx
  4117ac:	mov    r8,rsi
  4117af:	lea    rdx,[rip+0x41d2]        # 0x415988
  4117b6:	call   0x4112b0
  4117bb:	mov    rcx,QWORD PTR [rip+0x9b16]        # 0x41b2d8
  4117c2:	call   0x401990
  4117c7:	mov    ecx,0x1
  4117cc:	call   0x4112e0
  4117d1:	add    DWORD PTR [rip+0x9af8],0x1        # 0x41b2d0
  4117d8:	jmp    0x411780
  4117da:	mov    DWORD PTR [rip+0x96a8],0x3        # 0x41ae8c
  4117e4:	jmp    0x411780
  4117e6:	mov    BYTE PTR [rip+0x9f2b],0x1        # 0x41b718
  4117ed:	mov    rbx,QWORD PTR [rbp+0x0]
  4117f1:	jmp    0x411780
  4117f3:	mov    BYTE PTR [rip+0x9f16],0x0        # 0x41b710
  4117fa:	mov    rbx,QWORD PTR [rbp+0x0]
  4117fe:	jmp    0x411780
  411800:	mov    BYTE PTR [rip+0xa343],0x1        # 0x41bb4a
  411807:	mov    rbx,QWORD PTR [rbp+0x0]
  41180b:	jmp    0x411780
  411810:	mov    rcx,QWORD PTR [rip+0x9ac1]        # 0x41b2d8
  411817:	call   0x401990
  41181c:	xor    ecx,ecx
  41181e:	call   0x4112e0
  411823:	mov    BYTE PTR [rip+0x9661],0x1        # 0x41ae8b
  41182a:	mov    rbx,QWORD PTR [rbp+0x0]
  41182e:	jmp    0x411780
  411833:	mov    DWORD PTR [rip+0x964f],0x2        # 0x41ae8c
  41183d:	jmp    0x411780
  411842:	mov    DWORD PTR [rip+0x91f4],0x2        # 0x41aa40
  41184c:	jmp    0x411780
  411851:	call   0x401960
  411856:	mov    rbx,QWORD PTR [rbp+0x0]
  41185a:	jmp    0x411780
  41185f:	mov    DWORD PTR [rip+0x9a87],0x9        # 0x41b2f0
  411869:	jmp    0x411780
  41186e:	mov    DWORD PTR [rip+0x9a78],0x8        # 0x41b2f0
  411878:	jmp    0x411780
  41187d:	mov    DWORD PTR [rip+0x9a69],0x7        # 0x41b2f0
  411887:	jmp    0x411780
  41188c:	mov    DWORD PTR [rip+0x9a5a],0x6        # 0x41b2f0
  411896:	jmp    0x411780
  41189b:	mov    DWORD PTR [rip+0x9a4b],0x5        # 0x41b2f0
  4118a5:	jmp    0x411780
  4118aa:	mov    DWORD PTR [rip+0x9a3c],0x4        # 0x41b2f0
  4118b4:	jmp    0x411780
  4118b9:	mov    DWORD PTR [rip+0x9a2d],0x3        # 0x41b2f0
  4118c3:	jmp    0x411780
  4118c8:	mov    DWORD PTR [rip+0x9a1e],0x2        # 0x41b2f0
  4118d2:	jmp    0x411780
  4118d7:	mov    DWORD PTR [rip+0x9a0f],0x1        # 0x41b2f0
  4118e1:	jmp    0x411780
  4118e6:	mov    rbx,QWORD PTR [rsp+0x28]
  4118eb:	lea    r12,[rip+0x4071]        # 0x415963
  4118f2:	test   rbx,rbx
  4118f5:	je     0x41196c
  4118f7:	mov    r14d,0x3
  4118fd:	mov    r15d,0x9
  411903:	mov    r13d,0xd
  411909:	jmp    0x411923
  41190b:	nop    DWORD PTR [rax+rax*1+0x0]
  411910:	mov    DWORD PTR [rip+0x9126],0x2        # 0x41aa40
  41191a:	mov    rbx,QWORD PTR [rbx+0x8]
  41191e:	test   rbx,rbx
  411921:	je     0x41196c
  411923:	mov    rbp,QWORD PTR [rbx]
  411926:	mov    rdi,r12
  411929:	mov    rcx,r14
  41192c:	mov    rsi,rbp
  41192f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411931:	je     0x41196c
  411933:	lea    rdi,[rip+0x4061]        # 0x41599b
  41193a:	mov    rsi,rbp
  41193d:	mov    rcx,r15
  411940:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411942:	je     0x411910
  411944:	lea    rdi,[rip+0x4059]        # 0x4159a4
  41194b:	mov    rsi,rbp
  41194e:	mov    rcx,r13
  411951:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411953:	jne    0x411a41
  411959:	mov    rbx,QWORD PTR [rbx+0x8]
  41195d:	mov    DWORD PTR [rip+0x9525],0x2        # 0x41ae8c
  411967:	test   rbx,rbx
  41196a:	jne    0x411923
  41196c:	cmp    DWORD PTR [rip+0x995d],0x4        # 0x41b2d0
  411973:	jle    0x41197f
  411975:	mov    DWORD PTR [rip+0x9951],0x4        # 0x41b2d0
  41197f:	mov    eax,DWORD PTR [rip+0x9507]        # 0x41ae8c
  411985:	cmp    eax,0x1
  411988:	je     0x411ac7
  41198e:	cmp    eax,0x3
  411991:	je     0x411c87
  411997:	cmp    DWORD PTR [rip+0x90a2],0x2        # 0x41aa40
  41199e:	je     0x411d5b
  4119a4:	mov    DWORD PTR [rip+0x9942],0x0        # 0x41b2f0
  4119ae:	cmp    DWORD PTR [rip+0x908b],0x3        # 0x41aa40
  4119b5:	je     0x411d77
  4119bb:	cmp    eax,0x1
  4119be:	je     0x411b03
  4119c4:	cmp    eax,0x2
  4119c7:	je     0x411cca
  4119cd:	cmp    DWORD PTR [rip+0x906c],0x1        # 0x41aa40
  4119d4:	mov    BYTE PTR [rip+0x94b5],0x0        # 0x41ae90
  4119db:	je     0x411b6a
  4119e1:	mov    rbp,QWORD PTR [rsp+0x28]
  4119e6:	test   rbp,rbp
  4119e9:	mov    rbx,rbp
  4119ec:	je     0x411b8c
  4119f2:	mov    r13d,0x1
  4119f8:	lea    r12,[rip+0x3f64]        # 0x415963
  4119ff:	mov    ebx,0x3
  411a04:	jmp    0x411a2b
  411a06:	test   r13b,r13b
  411a09:	je     0x411b56
  411a0f:	cmp    BYTE PTR [rax],0x2d
  411a12:	jne    0x411b56
  411a18:	mov    r13d,0x1
  411a1e:	mov    rbp,QWORD PTR [rbp+0x8]
  411a22:	test   rbp,rbp
  411a25:	je     0x411b71
  411a2b:	mov    rax,QWORD PTR [rbp+0x0]
  411a2f:	mov    rdi,r12
  411a32:	mov    rcx,rbx
  411a35:	mov    rsi,rax
  411a38:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411a3a:	jne    0x411a06
  411a3c:	xor    r13d,r13d
  411a3f:	jmp    0x411a1e
  411a41:	lea    rdi,[rip+0x3f69]        # 0x4159b1
  411a48:	mov    ecx,0xb
  411a4d:	mov    rsi,rbp
  411a50:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  411a52:	jne    0x411a63
  411a54:	mov    DWORD PTR [rip+0x942e],0x1        # 0x41ae8c
  411a5e:	jmp    0x41191a
  411a63:	lea    rdx,[rip+0x3f52]        # 0x4159bc
  411a6a:	mov    rcx,rbp
  411a6d:	call   0x411240
  411a72:	test   eax,eax
  411a74:	jne    0x411a82
  411a76:	mov    BYTE PTR [rip+0x940e],0x1        # 0x41ae8b
  411a7d:	jmp    0x41191a
  411a82:	lea    rdx,[rip+0x3f3b]        # 0x4159c4
  411a89:	mov    rcx,rbp
  411a8c:	call   0x411240
  411a91:	test   eax,eax
  411a93:	je     0x411ab8
  411a95:	lea    rdx,[rip+0x3f2f]        # 0x4159cb
  411a9c:	mov    rcx,rbp
  411a9f:	call   0x411240
  411aa4:	test   eax,eax
  411aa6:	jne    0x411c3d
  411aac:	mov    BYTE PTR [rip+0xa097],0x1        # 0x41bb4a
  411ab3:	jmp    0x41191a
  411ab8:	mov    DWORD PTR [rip+0x93ca],0x3        # 0x41ae8c
  411ac2:	jmp    0x41191a
  411ac7:	cmp    BYTE PTR [rip+0x9c4a],0x0        # 0x41b718
  411ace:	je     0x411ae3
  411ad0:	cmp    DWORD PTR [rip+0x9819],0x2        # 0x41b2f0
  411ad7:	jle    0x411ae3
  411ad9:	mov    DWORD PTR [rip+0x980d],0x2        # 0x41b2f0
  411ae3:	cmp    DWORD PTR [rip+0x8f56],0x2        # 0x41aa40
  411aea:	jne    0x4119ae
  411af0:	cmp    DWORD PTR [rip+0x9c15],0x0        # 0x41b70c
  411af7:	jne    0x411b03
  411af9:	mov    DWORD PTR [rip+0x8f3d],0x1        # 0x41aa40
  411b03:	cmp    DWORD PTR [rip+0x8f36],0x1        # 0x41aa40
  411b0a:	je     0x411df6
  411b10:	mov    rbx,QWORD PTR [rsp+0x28]
  411b15:	mov    edi,0x1
  411b1a:	jmp    0x411b37
  411b1c:	test   dil,dil
  411b1f:	je     0x411c73
  411b25:	cmp    BYTE PTR [rsi],0x2d
  411b28:	jne    0x411c73
  411b2e:	mov    edi,0x1
  411b33:	mov    rbx,QWORD PTR [rbx+0x8]
  411b37:	test   rbx,rbx
  411b3a:	je     0x411b87
  411b3c:	mov    rsi,QWORD PTR [rbx]
  411b3f:	lea    rdx,[rip+0x3e1d]        # 0x415963
  411b46:	mov    rcx,rsi
  411b49:	call   0x411240
  411b4e:	test   eax,eax
  411b50:	jne    0x411b1c
  411b52:	xor    edi,edi
  411b54:	jmp    0x411b33
  411b56:	mov    rcx,rax
  411b59:	add    DWORD PTR [rip+0x9780],0x1        # 0x41b2e0
  411b60:	call   0x403540
  411b65:	jmp    0x411a1e
  411b6a:	xor    ecx,ecx
  411b6c:	call   0x403540
  411b71:	cmp    BYTE PTR [rip+0x9318],0x0        # 0x41ae90
  411b78:	je     0x411b87
  411b7a:	cmp    BYTE PTR [rip+0x9b8f],0x0        # 0x41b710
  411b81:	jne    0x411e9d
  411b87:	mov    rbx,QWORD PTR [rsp+0x28]
  411b8c:	test   rbx,rbx
  411b8f:	je     0x411bb2
  411b91:	mov    rcx,QWORD PTR [rbx]
  411b94:	mov    rsi,QWORD PTR [rbx+0x8]
  411b98:	test   rcx,rcx
  411b9b:	je     0x411ba2
  411b9d:	call   0x411298
  411ba2:	mov    rcx,rbx
  411ba5:	mov    rbx,rsi
  411ba8:	call   0x411298
  411bad:	test   rsi,rsi
  411bb0:	jne    0x411b91
  411bb2:	mov    eax,DWORD PTR [rip+0x9f94]        # 0x41bb4c
  411bb8:	add    rsp,0x38
  411bbc:	pop    rbx
  411bbd:	pop    rsi
  411bbe:	pop    rdi
  411bbf:	pop    rbp
  411bc0:	pop    r12
  411bc2:	pop    r13
  411bc4:	pop    r14
  411bc6:	pop    r15
  411bc8:	ret    
  411bc9:	lea    rdx,[rip+0x3d9c]        # 0x41596c
  411bd0:	mov    rcx,rbx
  411bd3:	call   0x411218
  411bd8:	test   rax,rax
  411bdb:	jne    0x411689
  411be1:	jmp    0x411693
  411be6:	lea    rdx,[rip+0x3d8b]        # 0x415978
  411bed:	mov    rcx,rbx
  411bf0:	call   0x411218
  411bf5:	test   rax,rax
  411bf8:	jne    0x4116ab
  411bfe:	lea    rdx,[rip+0x3d79]        # 0x41597e
  411c05:	mov    rcx,rbx
  411c08:	call   0x411218
  411c0d:	test   rax,rax
  411c10:	jne    0x4116ab
  411c16:	lea    rdx,[rip+0x3d66]        # 0x415983
  411c1d:	mov    rcx,rbx
  411c20:	call   0x411218
  411c25:	test   rax,rax
  411c28:	jne    0x4116ab
  411c2e:	jmp    0x4116c4
  411c33:	mov    rbp,QWORD PTR [rsp+0x28]
  411c38:	jmp    0x4115ce
  411c3d:	lea    rdx,[rip+0x3d8e]        # 0x4159d2
  411c44:	mov    rcx,rbp
  411c47:	call   0x411240
  411c4c:	test   eax,eax
  411c4e:	je     0x411cbe
  411c50:	lea    rdx,[rip+0x3d83]        # 0x4159da
  411c57:	mov    rcx,rbp
  411c5a:	call   0x411240
  411c5f:	test   eax,eax
  411c61:	jne    0x411da4
  411c67:	mov    BYTE PTR [rip+0x9aa2],0x0        # 0x41b710
  411c6e:	jmp    0x41191a
  411c73:	mov    rcx,rsi
  411c76:	add    DWORD PTR [rip+0x9663],0x1        # 0x41b2e0
  411c7d:	call   0x4039a0
  411c82:	jmp    0x411b33
  411c87:	cmp    DWORD PTR [rip+0x8db2],0x2        # 0x41aa40
  411c8e:	jne    0x4119a4
  411c94:	mov    rbx,QWORD PTR [rip+0x963d]        # 0x41b2d8
  411c9b:	call   QWORD PTR [rip+0xa6e3]        # 0x41c384
  411ca1:	lea    rdx,[rip+0x3da0]        # 0x415a48
  411ca8:	lea    rcx,[rax+0x60]
  411cac:	mov    r8,rbx
  411caf:	call   0x4112b0
  411cb4:	mov    ecx,0x1
  411cb9:	call   0x4112e0
  411cbe:	mov    BYTE PTR [rip+0x9a53],0x1        # 0x41b718
  411cc5:	jmp    0x41191a
  411cca:	cmp    DWORD PTR [rip+0x8d6f],0x1        # 0x41aa40
  411cd1:	mov    BYTE PTR [rip+0x9e73],0x0        # 0x41bb4b
  411cd8:	je     0x411d29
  411cda:	mov    rbx,QWORD PTR [rsp+0x28]
  411cdf:	mov    edi,0x1
  411ce4:	jmp    0x411cf9
  411ce6:	test   dil,dil
  411ce9:	je     0x411d18
  411ceb:	cmp    BYTE PTR [rsi],0x2d
  411cee:	jne    0x411d18
  411cf0:	mov    edi,0x1
  411cf5:	mov    rbx,QWORD PTR [rbx+0x8]
  411cf9:	test   rbx,rbx
  411cfc:	je     0x411d30
  411cfe:	mov    rsi,QWORD PTR [rbx]
  411d01:	lea    rdx,[rip+0x3c5b]        # 0x415963
  411d08:	mov    rcx,rsi
  411d0b:	call   0x411240
  411d10:	test   eax,eax
  411d12:	jne    0x411ce6
  411d14:	xor    edi,edi
  411d16:	jmp    0x411cf5
  411d18:	mov    rcx,rsi
  411d1b:	add    DWORD PTR [rip+0x95be],0x1        # 0x41b2e0
  411d22:	call   0x402c20
  411d27:	jmp    0x411cf5
  411d29:	xor    ecx,ecx
  411d2b:	call   0x402c20
  411d30:	cmp    BYTE PTR [rip+0x9e14],0x0        # 0x41bb4b
  411d37:	je     0x411b87
  411d3d:	cmp    DWORD PTR [rip+0x9e08],0x1        # 0x41bb4c
  411d44:	jg     0x411d50
  411d46:	mov    DWORD PTR [rip+0x9dfc],0x2        # 0x41bb4c
  411d50:	mov    ecx,DWORD PTR [rip+0x9df6]        # 0x41bb4c
  411d56:	call   0x4112e0
  411d5b:	cmp    DWORD PTR [rip+0x99aa],0x0        # 0x41b70c
  411d62:	jne    0x4119a4
  411d68:	mov    DWORD PTR [rip+0x8cce],0x1        # 0x41aa40
  411d72:	jmp    0x4119a4
  411d77:	lea    rdx,[rip+0xfffffffffffefbb2]        # 0x401930
  411d7e:	mov    ecx,0x2
  411d83:	call   0x411250
  411d88:	lea    rdx,[rip+0xfffffffffffefba1]        # 0x401930
  411d8f:	mov    ecx,0xf
  411d94:	call   0x411250
  411d99:	mov    eax,DWORD PTR [rip+0x90ed]        # 0x41ae8c
  411d9f:	jmp    0x4119bb
  411da4:	lea    rdx,[rip+0x3c37]        # 0x4159e2
  411dab:	mov    rcx,rbp
  411dae:	call   0x411240
  411db3:	test   eax,eax
  411db5:	je     0x411dec
  411db7:	lea    rdx,[rip+0x3c2e]        # 0x4159ec
  411dbe:	mov    rcx,rbp
  411dc1:	call   0x411240
  411dc6:	test   eax,eax
  411dc8:	je     0x411dec
  411dca:	lea    rdx,[rip+0x3c25]        # 0x4159f6
  411dd1:	mov    rcx,rbp
  411dd4:	call   0x411240
  411dd9:	test   eax,eax
  411ddb:	jne    0x411e07
  411ddd:	mov    DWORD PTR [rip+0x94e5],0x1        # 0x41b2cc
  411de7:	jmp    0x41191a
  411dec:	call   0x401960
  411df1:	jmp    0x41191a
  411df6:	xor    ecx,ecx
  411df8:	call   0x4039a0
  411dfd:	mov    rbx,QWORD PTR [rsp+0x28]
  411e02:	jmp    0x411b8c
  411e07:	lea    rdx,[rip+0x3bf6]        # 0x415a04
  411e0e:	mov    rcx,rbp
  411e11:	call   0x411240
  411e16:	test   eax,eax
  411e18:	je     0x411e4f
  411e1a:	lea    rdx,[rip+0x3bf5]        # 0x415a16
  411e21:	mov    rcx,rbp
  411e24:	call   0x411240
  411e29:	test   eax,eax
  411e2b:	je     0x411e4f
  411e2d:	lea    rdx,[rip+0x3bf4]        # 0x415a28
  411e34:	mov    rcx,rbp
  411e37:	call   0x411240
  411e3c:	test   eax,eax
  411e3e:	jne    0x411e5c
  411e40:	mov    DWORD PTR [rip+0x94a6],0x1        # 0x41b2f0
  411e4a:	jmp    0x41191a
  411e4f:	mov    rcx,rbp
  411e52:	call   0x401650
  411e57:	jmp    0x41191a
  411e5c:	lea    rdx,[rip+0x3bcc]        # 0x415a2f
  411e63:	mov    rcx,rbp
  411e66:	call   0x411240
  411e6b:	test   eax,eax
  411e6d:	jne    0x411e7e
  411e6f:	mov    DWORD PTR [rip+0x9477],0x9        # 0x41b2f0
  411e79:	jmp    0x41191a
  411e7e:	lea    rdx,[rip+0x3bb1]        # 0x415a36
  411e85:	mov    rcx,rbp
  411e88:	call   0x411240
  411e8d:	test   eax,eax
  411e8f:	jne    0x411ec3
  411e91:	add    DWORD PTR [rip+0x9438],0x1        # 0x41b2d0
  411e98:	jmp    0x41191a
  411e9d:	call   QWORD PTR [rip+0xa4e1]        # 0x41c384
  411ea3:	lea    rcx,[rip+0x3bc6]        # 0x415a70
  411eaa:	lea    r9,[rax+0x60]
  411eae:	mov    r8d,0x70
  411eb4:	mov    edx,0x1
  411eb9:	call   0x411290
  411ebe:	jmp    0x411d3d
  411ec3:	lea    rdx,[rip+0x3b76]        # 0x415a40
  411eca:	mov    rcx,rbp
  411ecd:	call   0x411240
  411ed2:	test   eax,eax
  411ed4:	je     0x411810
  411eda:	lea    rdx,[rip+0x3a82]        # 0x415963
  411ee1:	mov    r8d,0x2
  411ee7:	mov    rcx,rbp
  411eea:	call   0x411228
  411eef:	test   eax,eax
  411ef1:	jne    0x41191a
  411ef7:	mov    rbx,QWORD PTR [rip+0x93da]        # 0x41b2d8
  411efe:	call   QWORD PTR [rip+0xa480]        # 0x41c384
  411f04:	mov    r9,rbp
  411f07:	lea    rcx,[rax+0x60]
  411f0b:	mov    r8,rbx
  411f0e:	jmp    0x4117af
  411f13:	nop
  411f14:	nop
  411f15:	nop
  411f16:	nop
  411f17:	nop
  411f18:	nop
  411f19:	nop
  411f1a:	nop
  411f1b:	nop
  411f1c:	nop
  411f1d:	nop
  411f1e:	nop
  411f1f:	nop
  411f20:	push   rdi
  411f21:	push   rsi
  411f22:	push   rbx
  411f23:	mov    eax,DWORD PTR [rsp+0x40]
  411f27:	mov    rsi,QWORD PTR [rsp+0x48]
  411f2c:	lea    r11d,[rcx+0xb]
  411f30:	lea    r10d,[rdx+0xb]
  411f34:	mov    bl,BYTE PTR [r8+r10*1]
  411f38:	cmp    BYTE PTR [r8+r11*1],bl
  411f3c:	jne    0x412055
  411f42:	lea    ebx,[rax+0x8]
  411f45:	add    ecx,0xc
  411f48:	add    edx,0xc
  411f4b:	mov    r11d,ecx
  411f4e:	mov    r10d,edx
  411f51:	mov    dil,BYTE PTR [r8+r10*1]
  411f55:	cmp    BYTE PTR [r8+r11*1],dil
  411f59:	jne    0x412055
  411f5f:	mov    di,WORD PTR [r9+r10*2]
  411f64:	cmp    WORD PTR [r9+r11*2],di
  411f69:	jne    0x412055
  411f6f:	lea    r11d,[rcx+0x1]
  411f73:	lea    r10d,[rdx+0x1]
  411f77:	mov    dil,BYTE PTR [r8+r10*1]
  411f7b:	cmp    BYTE PTR [r8+r11*1],dil
  411f7f:	jne    0x412055
  411f85:	mov    di,WORD PTR [r9+r10*2]
  411f8a:	cmp    WORD PTR [r9+r11*2],di
  411f8f:	jne    0x412055
  411f95:	lea    r11d,[rcx+0x2]
  411f99:	lea    r10d,[rdx+0x2]
  411f9d:	mov    dil,BYTE PTR [r8+r10*1]
  411fa1:	cmp    BYTE PTR [r8+r11*1],dil
  411fa5:	jne    0x412055
  411fab:	mov    di,WORD PTR [r9+r10*2]
  411fb0:	cmp    WORD PTR [r9+r11*2],di
  411fb5:	jne    0x412055
  411fbb:	lea    r11d,[rcx+0x3]
  411fbf:	lea    r10d,[rdx+0x3]
  411fc3:	mov    dil,BYTE PTR [r8+r10*1]
  411fc7:	cmp    BYTE PTR [r8+r11*1],dil
  411fcb:	jne    0x412055
  411fd1:	mov    di,WORD PTR [r9+r10*2]
  411fd6:	cmp    WORD PTR [r9+r11*2],di
  411fdb:	jne    0x412055
  411fdd:	lea    r11d,[rcx+0x4]
  411fe1:	lea    r10d,[rdx+0x4]
  411fe5:	mov    dil,BYTE PTR [r8+r10*1]
  411fe9:	cmp    BYTE PTR [r8+r11*1],dil
  411fed:	jne    0x412055
  411fef:	mov    di,WORD PTR [r9+r10*2]
  411ff4:	cmp    WORD PTR [r9+r11*2],di
  411ff9:	jne    0x412055
  411ffb:	lea    r11d,[rcx+0x5]
  411fff:	lea    r10d,[rdx+0x5]
  412003:	mov    dil,BYTE PTR [r8+r10*1]
  412007:	cmp    BYTE PTR [r8+r11*1],dil
  41200b:	jne    0x412055
  41200d:	mov    di,WORD PTR [r9+r10*2]
  412012:	cmp    WORD PTR [r9+r11*2],di
  412017:	jne    0x412055
  412019:	lea    r11d,[rcx+0x6]
  41201d:	lea    r10d,[rdx+0x6]
  412021:	mov    dil,BYTE PTR [r8+r10*1]
  412025:	cmp    BYTE PTR [r8+r11*1],dil
  412029:	jne    0x412055
  41202b:	mov    di,WORD PTR [r9+r10*2]
  412030:	cmp    WORD PTR [r9+r11*2],di
  412035:	jne    0x412055
  412037:	lea    r11d,[rcx+0x7]
  41203b:	lea    r10d,[rdx+0x7]
  41203f:	mov    dil,BYTE PTR [r8+r10*1]
  412043:	cmp    BYTE PTR [r8+r11*1],dil
  412047:	jne    0x412055
  412049:	mov    di,WORD PTR [r9+r10*2]
  41204e:	cmp    WORD PTR [r9+r11*2],di
  412053:	je     0x41205a
  412055:	seta   al
  412058:	jmp    0x412085
  41205a:	add    ecx,0x8
  41205d:	add    edx,0x8
  412060:	mov    r10d,ecx
  412063:	sub    r10d,eax
  412066:	cmp    eax,ecx
  412068:	cmovbe ecx,r10d
  41206c:	mov    r10d,edx
  41206f:	sub    r10d,eax
  412072:	cmp    eax,edx
  412074:	cmovbe edx,r10d
  412078:	dec    DWORD PTR [rsi]
  41207a:	sub    ebx,0x8
  41207d:	jns    0x411f4b
  412083:	xor    eax,eax
  412085:	pop    rbx
  412086:	pop    rsi
  412087:	pop    rdi
  412088:	ret    
  412089:	nop
  41208a:	nop
  41208b:	nop
  41208c:	nop
  41208d:	nop
  41208e:	nop
  41208f:	nop
  412090:	(bad)  
  412091:	(bad)  
  412092:	(bad)  
  412093:	(bad)  
  412094:	(bad)  
  412095:	(bad)  
  412096:	(bad)  
  412097:	inc    DWORD PTR [rax]
  412099:	add    BYTE PTR [rax],al
  41209b:	add    BYTE PTR [rax],al
  41209d:	add    BYTE PTR [rax],al
  41209f:	add    bh,bh
  4120a1:	(bad)  
  4120a2:	(bad)  
  4120a3:	(bad)  
  4120a4:	(bad)  
  4120a5:	(bad)  
  4120a6:	(bad)  
  4120a7:	inc    DWORD PTR [rax]
  4120a9:	add    BYTE PTR [rax],al
  4120ab:	add    BYTE PTR [rax],al
  4120ad:	add    BYTE PTR [rax],al
	...
