
405865f8af5ff082926927140e1915d1f77f63d3dcd703b3f0fe72102fd80abd.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001010:	mov    r11,rsp
   140001013:	push   rbp
   140001014:	lea    rbp,[r11-0x7e8]
   14000101b:	sub    rsp,0x8e0
   140001022:	mov    rax,QWORD PTR [rip+0x4fdf]        # 0x140006008
   140001029:	xor    rax,rsp
   14000102c:	mov    QWORD PTR [rbp+0x7b0],rax
   140001033:	mov    eax,DWORD PTR [rbp-0x30]
   140001036:	movups xmm0,XMMWORD PTR [rip+0x3763]        # 0x1400047a0
   14000103d:	and    eax,0xfffffff8
   140001040:	mov    QWORD PTR [r11+0x8],rbx
   140001044:	and    eax,0xfffffff9
   140001047:	mov    QWORD PTR [r11+0x10],rsi
   14000104b:	or     eax,0x1
   14000104e:	mov    QWORD PTR [r11+0x18],rdi
   140001052:	mov    DWORD PTR [rbp-0x30],eax
   140001055:	lea    rax,[rbp-0x18]
   140001059:	mov    QWORD PTR [rbp-0x20],rax
   14000105d:	mov    eax,DWORD PTR [rbp+0x450]
   140001063:	and    eax,0xfffffff8
   140001066:	mov    QWORD PTR [r11-0x10],r12
   14000106a:	and    eax,0xfffffff9
   14000106d:	mov    QWORD PTR [r11-0x20],r14
   140001071:	or     eax,0x1
   140001074:	mov    QWORD PTR [r11-0x28],r15
   140001078:	mov    DWORD PTR [rbp+0x450],eax
   14000107e:	xor    r12d,r12d
   140001081:	lea    rax,[rbp+0x468]
   140001088:	mov    QWORD PTR [rsp+0x60],r12
   14000108d:	mov    QWORD PTR [rbp+0x460],rax
   140001094:	mov    r15d,r12d
   140001097:	mov    eax,DWORD PTR [rbp+0x210]
   14000109d:	mov    r14d,r12d
   1400010a0:	and    eax,0xfffffff8
   1400010a3:	mov    QWORD PTR [rbp-0x2c],r12
   1400010a7:	and    eax,0xfffffff9
   1400010aa:	mov    DWORD PTR [rbp-0x24],0x80
   1400010b1:	or     eax,0x1
   1400010b4:	mov    QWORD PTR [rbp+0x454],r12
   1400010bb:	mov    DWORD PTR [rbp+0x210],eax
   1400010c1:	mov    esi,r12d
   1400010c4:	lea    rax,[rbp+0x228]
   1400010cb:	mov    DWORD PTR [rbp+0x45c],0x80
   1400010d5:	mov    QWORD PTR [rbp+0x220],rax
   1400010dc:	mov    eax,DWORD PTR [rbp+0xf0]
   1400010e2:	and    eax,0xfffffff8
   1400010e5:	mov    QWORD PTR [rbp+0x214],r12
   1400010ec:	and    eax,0xfffffff9
   1400010ef:	mov    DWORD PTR [rbp+0x21c],0x80
   1400010f9:	or     eax,0x1
   1400010fc:	mov    QWORD PTR [rbp+0xf4],r12
   140001103:	mov    DWORD PTR [rbp+0xf0],eax
   140001109:	lea    rax,[rbp+0x108]
   140001110:	mov    QWORD PTR [rbp+0x100],rax
   140001117:	mov    eax,DWORD PTR [rbp+0x690]
   14000111d:	and    eax,0xfffffff8
   140001120:	mov    DWORD PTR [rbp+0xfc],0x80
   14000112a:	and    eax,0xfffffff9
   14000112d:	mov    QWORD PTR [rsp+0x58],r12
   140001132:	or     eax,0x1
   140001135:	mov    DWORD PTR [rbp-0x68],r12d
   140001139:	mov    DWORD PTR [rbp+0x690],eax
   14000113f:	lea    rax,[rbp+0x6a8]
   140001146:	mov    QWORD PTR [rbp+0x6a0],rax
   14000114d:	mov    eax,DWORD PTR [rbp+0x570]
   140001153:	and    eax,0xfffffff8
   140001156:	mov    QWORD PTR [rbp+0x694],r12
   14000115d:	and    eax,0xfffffff9
   140001160:	mov    DWORD PTR [rbp+0x69c],0x80
   14000116a:	or     eax,0x1
   14000116d:	mov    QWORD PTR [rbp+0x574],r12
   140001174:	mov    DWORD PTR [rbp+0x570],eax
   14000117a:	lea    rax,[rbp+0x588]
   140001181:	movups XMMWORD PTR [rbp-0x48],xmm0
   140001185:	mov    QWORD PTR [rbp+0x580],rax
   14000118c:	xorps  xmm0,xmm0
   14000118f:	mov    DWORD PTR [rbp+0x57c],0x80
   140001199:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   14000119e:	mov    DWORD PTR [rsp+0x78],0x20070
   1400011a6:	mov    QWORD PTR [rsp+0x68],r12
   1400011ab:	call   QWORD PTR [rip+0x2f17]        # 0x1400040c8
   1400011b1:	or     eax,0x1
   1400011b4:	mov    ecx,eax
   1400011b6:	call   QWORD PTR [rip+0x2f1c]        # 0x1400040d8
   1400011bc:	xor    r9d,r9d
   1400011bf:	lea    edx,[r12+0x1]
   1400011c4:	xor    r8d,r8d
   1400011c7:	xor    ecx,ecx
   1400011c9:	call   QWORD PTR [rip+0x2f41]        # 0x140004110
   1400011cf:	mov    QWORD PTR [rbp-0x80],r12
   1400011d3:	mov    QWORD PTR [rbp-0x78],r12
   1400011d7:	call   QWORD PTR [rip+0x2f53]        # 0x140004130
   1400011dd:	mov    r8,rax
   1400011e0:	test   rax,rax
   1400011e3:	je     0x140002cd0
   1400011e9:	mov    QWORD PTR [rbp-0x60],rax
   1400011ed:	or     rax,0xffffffffffffffff
   1400011f1:	inc    rax
   1400011f4:	cmp    WORD PTR [r8+rax*2],si
   1400011f9:	jne    0x1400011f1
   1400011fb:	mov    eax,eax
   1400011fd:	lea    rsi,[r8+rax*2]
   140001201:	mov    QWORD PTR [rbp-0x58],rsi
   140001205:	cmp    r8,rsi
   140001208:	jae    0x140002d15
   14000120e:	xchg   ax,ax
   140001210:	cmp    WORD PTR [r8],0x20
   140001215:	je     0x140001225
   140001217:	add    r8,0x2
   14000121b:	cmp    r8,rsi
   14000121e:	jb     0x140001210
   140001220:	jmp    0x140002d15
   140001225:	mov    QWORD PTR [rbp-0x60],r8
   140001229:	cmp    r8,rsi
   14000122c:	jae    0x140002d15
   140001232:	cmp    WORD PTR [r8],0x20
   140001237:	je     0x140001726
   14000123d:	cmp    r8,rsi
   140001240:	jae    0x140002cd9
   140001246:	mov    rdi,r8
   140001249:	nop    DWORD PTR [rax+0x0]
   140001250:	cmp    WORD PTR [rdi],0x20
   140001254:	je     0x140001264
   140001256:	add    rdi,0x2
   14000125a:	cmp    rdi,rsi
   14000125d:	jb     0x140001250
   14000125f:	jmp    0x140002cd9
   140001264:	mov    r9,rdi
   140001267:	lea    rcx,[rbp-0x30]
   14000126b:	sub    r9,r8
   14000126e:	sar    r9,1
   140001271:	call   0x140001790
   140001276:	test   eax,eax
   140001278:	js     0x140002ce1
   14000127e:	cmp    rdi,rsi
   140001281:	jae    0x140002d15
   140001287:	mov    QWORD PTR [rsp+0x8d0],r13
   14000128f:	cmp    WORD PTR [rdi],0x20
   140001293:	je     0x14000173b
   140001299:	cmp    rdi,rsi
   14000129c:	jae    0x140002d21
   1400012a2:	mov    rbx,rdi
   1400012a5:	cmp    WORD PTR [rbx],0x20
   1400012a9:	je     0x1400012b9
   1400012ab:	add    rbx,0x2
   1400012af:	cmp    rbx,rsi
   1400012b2:	jb     0x1400012a5
   1400012b4:	jmp    0x140002d21
   1400012b9:	mov    r9,rbx
   1400012bc:	lea    rcx,[rbp+0x450]
   1400012c3:	sub    r9,rdi
   1400012c6:	mov    r8,rdi
   1400012c9:	sar    r9,1
   1400012cc:	call   0x140001790
   1400012d1:	lea    r13,[rip+0x33a8]        # 0x140004680
   1400012d8:	cmp    DWORD PTR [rbp+0x454],r12d
   1400012df:	jl     0x140002d29
   1400012e5:	cmp    DWORD PTR [rbp+0x458],r12d
   1400012ec:	je     0x140002d29
   1400012f2:	mov    rcx,QWORD PTR [rbp+0x460]
   1400012f9:	lea    rdx,[rbp-0x48]
   1400012fd:	call   QWORD PTR [rip+0x2d5d]        # 0x140004060
   140001303:	test   eax,eax
   140001305:	js     0x140002d31
   14000130b:	cmp    rbx,rsi
   14000130e:	jae    0x140002d41
   140001314:	cmp    WORD PTR [rbx],0x20
   140001318:	je     0x140001750
   14000131e:	mov    QWORD PTR [rbp-0x60],rbx
   140001322:	lea    rdx,[rbp-0x70]
   140001326:	lea    rcx,[rbp-0x68]
   14000132a:	call   0x1400018a0
   14000132f:	test   eax,eax
   140001331:	je     0x140002d4a
   140001337:	mov    rax,QWORD PTR [rbp-0x60]
   14000133b:	mov    rcx,QWORD PTR [rbp-0x58]
   14000133f:	cmp    rax,rcx
   140001342:	jae    0x140002d61
   140001348:	cmp    WORD PTR [rax],0x20
   14000134c:	je     0x140001762
   140001352:	mov    QWORD PTR [rbp-0x60],rax
   140001356:	lea    rdx,[rsp+0x78]
   14000135b:	lea    rcx,[rbp-0x68]
   14000135f:	call   0x1400018a0
   140001364:	test   eax,eax
   140001366:	je     0x140002d6a
   14000136c:	mov    rbx,QWORD PTR [rbp-0x60]
   140001370:	mov    rdi,QWORD PTR [rbp-0x58]
   140001374:	cmp    rbx,rdi
   140001377:	jae    0x140001781
   14000137d:	cmp    WORD PTR [rbx],0x20
   140001381:	je     0x140001774
   140001387:	mov    esi,r12d
   14000138a:	lea    r14,[rip+0x33ff]        # 0x140004790
   140001391:	mov    eax,DWORD PTR [rbp+0x330]
   140001397:	lea    rcx,[rbp+0x348]
   14000139e:	mov    r15,QWORD PTR [r14]
   1400013a1:	and    eax,0xfffffff8
   1400013a4:	and    eax,0xfffffff9
   1400013a7:	mov    QWORD PTR [rbp+0x340],rcx
   1400013ae:	or     eax,0x1
   1400013b1:	mov    DWORD PTR [rbp+0x33c],0x80
   1400013bb:	xor    edx,edx
   1400013bd:	mov    DWORD PTR [rbp+0x330],eax
   1400013c3:	mov    QWORD PTR [rbp+0x334],rdx
   1400013ca:	cmp    rbx,rdi
   1400013cd:	jae    0x140002e0d
   1400013d3:	cmp    WORD PTR [rbx],0x3d
   1400013d7:	jne    0x140002e0d
   1400013dd:	mov    rax,rdi
   1400013e0:	sub    rax,rbx
   1400013e3:	sar    rax,1
   1400013e6:	cmp    eax,0x1
   1400013e9:	jb     0x140002da5
   1400013ef:	add    rbx,0x2
   1400013f3:	mov    r8,rbx
   1400013f6:	cmp    rbx,rdi
   1400013f9:	jae    0x14000140f
   1400013fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140001400:	cmp    WORD PTR [rbx],0x3d
   140001404:	je     0x140001412
   140001406:	add    rbx,0x2
   14000140a:	cmp    rbx,rdi
   14000140d:	jb     0x140001400
   14000140f:	mov    rbx,rdi
   140001412:	mov    r9,rbx
   140001415:	lea    rcx,[rbp+0x330]
   14000141c:	sub    r9,r8
   14000141f:	sar    r9,1
   140001422:	call   0x140001790
   140001427:	cmp    DWORD PTR [rbp+0x334],0x0
   14000142e:	jl     0x140002dad
   140001434:	cmp    DWORD PTR [rbp+0x338],0x0
   14000143b:	je     0x140002dad
   140001441:	mov    rdx,QWORD PTR [rbp+0x340]
   140001448:	mov    rcx,r15
   14000144b:	call   QWORD PTR [rip+0x2ce7]        # 0x140004138
   140001451:	test   eax,eax
   140001453:	je     0x140002db5
   140001459:	mov    rcx,QWORD PTR [rbp+0x340]
   140001460:	test   rcx,rcx
   140001463:	je     0x140001473
   140001465:	mov    eax,DWORD PTR [rbp+0x330]
   14000146b:	test   al,0x1
   14000146d:	je     0x140002e18
   140001473:	test   r12d,r12d
   140001476:	js     0x140003056
   14000147c:	inc    esi
   14000147e:	add    r14,0x8
   140001482:	mov    r12d,0x0
   140001488:	cmp    esi,0x2
   14000148b:	jb     0x140001391
   140001491:	lea    edx,[r12+0x4]
   140001496:	xor    ecx,ecx
   140001498:	call   QWORD PTR [rip+0x2bd2]        # 0x140004070
   14000149e:	test   eax,eax
   1400014a0:	js     0x140002e52
   1400014a6:	mov    QWORD PTR [rsp+0x40],r12
   1400014ab:	xor    r9d,r9d
   1400014ae:	mov    DWORD PTR [rsp+0x38],r12d
   1400014b3:	xor    r8d,r8d
   1400014b6:	mov    QWORD PTR [rsp+0x30],r12
   1400014bb:	or     edx,0xffffffff
   1400014be:	mov    DWORD PTR [rsp+0x28],0x3
   1400014c6:	xor    ecx,ecx
   1400014c8:	mov    DWORD PTR [rsp+0x20],0x4
   1400014d0:	call   QWORD PTR [rip+0x2b72]        # 0x140004048
   1400014d6:	test   eax,eax
   1400014d8:	js     0x140002e66
   1400014de:	xor    edx,edx
   1400014e0:	mov    DWORD PTR [rsp+0x70],r12d
   1400014e5:	lea    rcx,[rsp+0x70]
   1400014ea:	call   QWORD PTR [rip+0x2b38]        # 0x140004028
   1400014f0:	cmp    eax,0x7a
   1400014f3:	jne    0x140001574
   1400014f5:	lea    r9,[rbp-0x68]
   1400014f9:	lea    r8,[rbp-0x60]
   1400014fd:	lea    edx,[rax-0x4d]
   140001500:	lea    rcx,[rip+0x2f29]        # 0x140004430
   140001507:	call   QWORD PTR [rip+0x2d33]        # 0x140004240
   14000150d:	test   eax,eax
   14000150f:	js     0x140002e76
   140001515:	mov    rcx,QWORD PTR [rbp-0x68]
   140001519:	lea    r8,[rsp+0x68]
   14000151e:	lea    rdx,[rip+0x2ef3]        # 0x140004418
   140001525:	call   QWORD PTR [rip+0x2cfd]        # 0x140004228
   14000152b:	test   eax,eax
   14000152d:	js     0x140002e91
   140001533:	mov    rdi,QWORD PTR [rsp+0x68]
   140001538:	xor    ecx,ecx
   14000153a:	mov    QWORD PTR [rsp+0x70],r12
   14000153f:	call   QWORD PTR [rip+0x2cf3]        # 0x140004238
   140001545:	mov    QWORD PTR [rsp+0x70],r12
   14000154a:	mov    rax,QWORD PTR [rdi]
   14000154d:	mov    rbx,QWORD PTR [rax+0x30]
   140001551:	mov    rcx,rbx
   140001554:	call   QWORD PTR [rip+0x2db6]        # 0x140004310
   14000155a:	lea    rdx,[rsp+0x70]
   14000155f:	mov    rcx,rdi
   140001562:	call   rbx
   140001564:	mov    rcx,QWORD PTR [rsp+0x70]
   140001569:	test   rcx,rcx
   14000156c:	je     0x140001574
   14000156e:	call   QWORD PTR [rip+0x2cc4]        # 0x140004238
   140001574:	mov    ecx,DWORD PTR [rsp+0x78]
   140001578:	mov    edx,0x1
   14000157d:	call   QWORD PTR [rip+0x2a8d]        # 0x140004010
   140001583:	test   eax,eax
   140001585:	js     0x140002ea1
   14000158b:	lea    rcx,[rsp+0x60]
   140001590:	call   0x140001970
   140001595:	test   eax,eax
   140001597:	js     0x140002eb1
   14000159d:	cmp    BYTE PTR [rip+0x50dd],0x8        # 0x140006681
   1400015a4:	jae    0x140002ef1
   1400015aa:	cmp    DWORD PTR [rbp-0x2c],r12d
   1400015ae:	jl     0x140002f24
   1400015b4:	cmp    DWORD PTR [rbp-0x28],r12d
   1400015b8:	je     0x140002f24
   1400015be:	mov    r8,QWORD PTR [rbp-0x20]
   1400015c2:	or     r9d,0xffffffff
   1400015c6:	lea    rcx,[rbp+0x210]
   1400015cd:	call   0x140001790
   1400015d2:	or     r9d,0xffffffff
   1400015d6:	lea    r8,[rip+0x2e2b]        # 0x140004408
   1400015dd:	lea    rcx,[rbp+0x210]
   1400015e4:	call   0x140001790
   1400015e9:	cmp    BYTE PTR [rip+0x5091],0x8        # 0x140006681
   1400015f0:	jae    0x140002f2c
   1400015f6:	cmp    DWORD PTR [rbp+0x214],r12d
   1400015fd:	jl     0x140002f62
   140001603:	cmp    DWORD PTR [rbp+0x218],r12d
   14000160a:	je     0x140002f62
   140001610:	mov    r9,QWORD PTR [rbp+0x220]
   140001617:	xor    r8d,r8d
   14000161a:	xor    ecx,ecx
   14000161c:	lea    edx,[r8+0x1]
   140001620:	call   QWORD PTR [rip+0x2bda]        # 0x140004200
   140001626:	mov    rsi,rax
   140001629:	test   rax,rax
   14000162c:	je     0x140002f6a
   140001632:	cmp    DWORD PTR [rbp-0x2c],r12d
   140001636:	jl     0x140002fc5
   14000163c:	cmp    DWORD PTR [rbp-0x28],r12d
   140001640:	je     0x140002fc5
   140001646:	mov    r8,QWORD PTR [rbp-0x20]
   14000164a:	or     r9d,0xffffffff
   14000164e:	lea    rcx,[rbp+0xf0]
   140001655:	call   0x140001790
   14000165a:	or     r9d,0xffffffff
   14000165e:	lea    r8,[rip+0x2d8b]        # 0x1400043f0
   140001665:	lea    rcx,[rbp+0xf0]
   14000166c:	call   0x140001790
   140001671:	cmp    BYTE PTR [rip+0x5009],0x8        # 0x140006681
   140001678:	jae    0x140002fcd
   14000167e:	mov    r8d,DWORD PTR [rbp-0x70]
   140001682:	xor    edx,edx
   140001684:	mov    ecx,0x100000
   140001689:	call   QWORD PTR [rip+0x2ab9]        # 0x140004148
   14000168f:	mov    QWORD PTR [rbp-0x80],rax
   140001693:	test   rax,rax
   140001696:	je     0x140003003
   14000169c:	cmp    DWORD PTR [rbp+0xf4],r12d
   1400016a3:	jl     0x1400016b5
   1400016a5:	cmp    DWORD PTR [rbp+0xf8],r12d
   1400016ac:	je     0x1400016b5
   1400016ae:	mov    r13,QWORD PTR [rbp+0x100]
   1400016b5:	mov    r8,r13
   1400016b8:	xor    edx,edx
   1400016ba:	mov    ecx,0x100000
   1400016bf:	call   QWORD PTR [rip+0x2af3]        # 0x1400041b8
   1400016c5:	mov    QWORD PTR [rbp-0x78],rax
   1400016c9:	test   rax,rax
   1400016cc:	je     0x140003019
   1400016d2:	mov    r14,QWORD PTR [rsp+0x60]
   1400016d7:	lea    rdx,[rbp-0x48]
   1400016db:	mov    rcx,r14
   1400016de:	call   0x140001d20
   1400016e3:	mov    ebx,eax
   1400016e5:	test   rsi,rsi
   1400016e8:	je     0x1400016f3
   1400016ea:	mov    rcx,rsi
   1400016ed:	call   QWORD PTR [rip+0x2abd]        # 0x1400041b0
   1400016f3:	test   ebx,ebx
   1400016f5:	js     0x14000171e
   1400016f7:	xor    r8d,r8d
   1400016fa:	mov    DWORD PTR [rsp+0x20],r12d
   1400016ff:	or     r9d,0xffffffff
   140001703:	lea    rdx,[rbp-0x80]
   140001707:	lea    ecx,[r8+0x2]
   14000170b:	call   QWORD PTR [rip+0x2ae7]        # 0x1400041f8
   140001711:	cmp    BYTE PTR [rip+0x4f69],0x1        # 0x140006681
   140001718:	jae    0x14000302d
   14000171e:	mov    r15d,r12d
   140001721:	jmp    0x140003093
   140001726:	add    r8,0x2
   14000172a:	cmp    r8,rsi
   14000172d:	jb     0x140001232
   140001733:	mov    r8,rsi
   140001736:	jmp    0x14000123d
   14000173b:	add    rdi,0x2
   14000173f:	cmp    rdi,rsi
   140001742:	jb     0x14000128f
   140001748:	mov    rdi,rsi
   14000174b:	jmp    0x140001299
   140001750:	add    rbx,0x2
   140001754:	cmp    rbx,rsi
   140001757:	jb     0x140001314
   14000175d:	jmp    0x140002d41
   140001762:	add    rax,0x2
   140001766:	cmp    rax,rcx
   140001769:	jb     0x140001348
   14000176f:	jmp    0x140002d61
   140001774:	add    rbx,0x2
   140001778:	cmp    rbx,rdi
   14000177b:	jb     0x14000137d
   140001781:	mov    rbx,rdi
   140001784:	jmp    0x140001387
   140001789:	int3   
   14000178a:	int3   
   14000178b:	int3   
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	rex push rbx
   140001792:	push   rsi
   140001793:	push   r14
   140001795:	sub    rsp,0x20
   140001799:	mov    ebx,r9d
   14000179c:	mov    rsi,r8
   14000179f:	mov    r14,rcx
   1400017a2:	test   r8,r8
   1400017a5:	je     0x140001895
   1400017ab:	lea    eax,[r9+0x1]
   1400017af:	cmp    eax,0x4000001
   1400017b4:	ja     0x14000331c
   1400017ba:	mov    QWORD PTR [rsp+0x58],r15
   1400017bf:	or     r15,0xffffffffffffffff
   1400017c3:	cmp    ebx,r15d
   1400017c6:	jne    0x1400017e8
   1400017c8:	mov    rbx,r15
   1400017cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400017d0:	inc    rbx
   1400017d3:	cmp    WORD PTR [r8+rbx*2],0x0
   1400017d9:	jne    0x1400017d0
   1400017db:	cmp    rbx,0x7fffffff
   1400017e2:	ja     0x14000321e
   1400017e8:	mov    r8d,DWORD PTR [rcx+0x4]
   1400017ec:	mov    QWORD PTR [rsp+0x40],rbp
   1400017f1:	mov    QWORD PTR [rsp+0x48],rdi
   1400017f6:	mov    QWORD PTR [rsp+0x50],r12
   1400017fb:	test   r8d,r8d
   1400017fe:	js     0x140001875
   140001800:	cmp    ebx,0x4000000
   140001806:	ja     0x14000330a
   14000180c:	mov    ebp,DWORD PTR [rcx+0x8]
   14000180f:	inc    ebp
   140001811:	add    ebp,ebx
   140001813:	lea    eax,[rbp-0x1]
   140001816:	cmp    eax,0x3ffffff
   14000181b:	ja     0x1400032fa
   140001821:	cmp    ebp,DWORD PTR [rcx+0xc]
   140001824:	jg     0x14000322f
   14000182a:	movsxd rcx,DWORD PTR [r14+0x8]
   14000182e:	mov    rdx,rsi
   140001831:	mov    rax,QWORD PTR [r14+0x10]
   140001835:	movsxd r8,ebx
   140001838:	add    r8,r8
   14000183b:	lea    rcx,[rax+rcx*2]
   14000183f:	call   0x140002bea
   140001844:	mov    edx,DWORD PTR [r14+0x8]
   140001848:	xor    r8d,r8d
   14000184b:	add    edx,ebx
   14000184d:	cmp    DWORD PTR [r14+0x4],r8d
   140001851:	jl     0x140001875
   140001853:	test   edx,edx
   140001855:	js     0x1400032b2
   14000185b:	cmp    edx,DWORD PTR [r14+0xc]
   14000185f:	jge    0x1400032e5
   140001865:	mov    rax,QWORD PTR [r14+0x10]
   140001869:	movsxd rcx,edx
   14000186c:	mov    WORD PTR [rax+rcx*2],r8w
   140001871:	mov    DWORD PTR [r14+0x8],edx
   140001875:	mov    r12,QWORD PTR [rsp+0x50]
   14000187a:	mov    eax,r8d
   14000187d:	mov    rdi,QWORD PTR [rsp+0x48]
   140001882:	mov    rbp,QWORD PTR [rsp+0x40]
   140001887:	mov    r15,QWORD PTR [rsp+0x58]
   14000188c:	add    rsp,0x20
   140001890:	pop    r14
   140001892:	pop    rsi
   140001893:	pop    rbx
   140001894:	ret    
   140001895:	xor    eax,eax
   140001897:	jmp    0x14000188c
   140001899:	int3   
   14000189a:	int3   
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400018a5:	push   rbp
   1400018a6:	push   rsi
   1400018a7:	push   r14
   1400018a9:	sub    rsp,0x20
   1400018ad:	mov    rbp,QWORD PTR [rcx+0x8]
   1400018b1:	xor    esi,esi
   1400018b3:	mov    DWORD PTR [rcx],esi
   1400018b5:	mov    r14,rdx
   1400018b8:	mov    rbx,rcx
   1400018bb:	test   rdx,rdx
   1400018be:	je     0x14000332e
   1400018c4:	mov    QWORD PTR [rsp+0x40],rdi
   1400018c9:	mov    QWORD PTR [rsp+0x48],r15
   1400018ce:	cmp    rbp,QWORD PTR [rcx+0x10]
   1400018d2:	jae    0x14000193c
   1400018d4:	mov    r15d,0xffffffff
   1400018da:	nop    WORD PTR [rax+rax*1+0x0]
   1400018e0:	mov    rax,QWORD PTR [rbx+0x8]
   1400018e4:	movzx  edi,WORD PTR [rax]
   1400018e7:	movzx  ecx,di
   1400018ea:	call   QWORD PTR [rip+0x29f0]        # 0x1400042e0
   1400018f0:	test   eax,eax
   1400018f2:	je     0x14000192b
   1400018f4:	movzx  eax,di
   1400018f7:	sub    eax,0x30
   1400018fa:	cmp    eax,0xa
   1400018fd:	jae    0x14000193c
   1400018ff:	lea    rdx,[rsi+rsi*4]
   140001903:	add    rdx,rdx
   140001906:	cmp    rdx,r15
   140001909:	ja     0x14000334f
   14000190f:	lea    esi,[rdx+rax*1]
   140001912:	cmp    esi,edx
   140001914:	jb     0x14000334f
   14000191a:	add    QWORD PTR [rbx+0x8],0x2
   14000191f:	mov    rax,QWORD PTR [rbx+0x8]
   140001923:	cmp    rax,QWORD PTR [rbx+0x10]
   140001927:	jb     0x1400018e0
   140001929:	jmp    0x14000193c
   14000192b:	movzx  ecx,di
   14000192e:	call   QWORD PTR [rip+0x29bc]        # 0x1400042f0
   140001934:	test   eax,eax
   140001936:	jne    0x14000333b
   14000193c:	cmp    rbp,QWORD PTR [rbx+0x8]
   140001940:	je     0x140003360
   140001946:	mov    DWORD PTR [r14],esi
   140001949:	mov    eax,0x1
   14000194e:	mov    rdi,QWORD PTR [rsp+0x40]
   140001953:	mov    r15,QWORD PTR [rsp+0x48]
   140001958:	mov    rbx,QWORD PTR [rsp+0x50]
   14000195d:	add    rsp,0x20
   140001961:	pop    r14
   140001963:	pop    rsi
   140001964:	pop    rbp
   140001965:	ret    
   140001966:	int3   
   140001967:	int3   
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	mov    QWORD PTR [rsp+0x8],rbx
   140001975:	push   rdi
   140001976:	sub    rsp,0x20
   14000197a:	mov    rdi,rcx
   14000197d:	mov    ecx,0x68
   140001982:	call   0x140001ff4
   140001987:	test   rax,rax
   14000198a:	je     0x1400019cb
   14000198c:	mov    rcx,rax
   14000198f:	call   0x1400019e0
   140001994:	mov    rbx,rax
   140001997:	mov    QWORD PTR [rdi],rbx
   14000199a:	test   rbx,rbx
   14000199d:	je     0x1400019cf
   14000199f:	mov    rax,QWORD PTR [rbx]
   1400019a2:	mov    rdi,QWORD PTR [rax+0x8]
   1400019a6:	lea    rax,[rip+0x353]        # 0x140001d00
   1400019ad:	cmp    rdi,rax
   1400019b0:	jne    0x14000336e
   1400019b6:	mov    rcx,rbx
   1400019b9:	call   0x140001d00
   1400019be:	xor    eax,eax
   1400019c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400019c5:	add    rsp,0x20
   1400019c9:	pop    rdi
   1400019ca:	ret    
   1400019cb:	xor    ebx,ebx
   1400019cd:	jmp    0x140001997
   1400019cf:	mov    eax,0x8007000e
   1400019d4:	jmp    0x1400019c0
   1400019d6:	int3   
   1400019d7:	int3   
   1400019d8:	int3   
   1400019d9:	int3   
   1400019da:	int3   
   1400019db:	int3   
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400019e5:	push   rdi
   1400019e6:	sub    rsp,0x20
   1400019ea:	lea    rax,[rip+0x2b47]        # 0x140004538
   1400019f1:	mov    rbx,rcx
   1400019f4:	mov    QWORD PTR [rcx],rax
   1400019f7:	xor    edi,edi
   1400019f9:	lea    rax,[rip+0x2b08]        # 0x140004508
   140001a00:	mov    DWORD PTR [rcx+0x18],edi
   140001a03:	mov    QWORD PTR [rcx+0x8],rax
   140001a07:	lea    rax,[rip+0x2ad2]        # 0x1400044e0
   140001a0e:	mov    QWORD PTR [rcx+0x10],rax
   140001a12:	add    rcx,0x20
   140001a16:	call   QWORD PTR [rip+0x27a4]        # 0x1400041c0
   140001a1c:	mov    ecx,DWORD PTR [rip+0x4bfe]        # 0x140006620
   140001a22:	lea    rdx,[rip+0x4bff]        # 0x140006628
   140001a29:	mov    QWORD PTR [rbx+0x48],rdi
   140001a2d:	mov    eax,ecx
   140001a2f:	and    eax,0x3
   140001a32:	mov    QWORD PTR [rbx+0x50],rdi
   140001a36:	mov    DWORD PTR [rbx+0x58],edi
   140001a39:	mov    QWORD PTR [rbx+0x60],rdi
   140001a3d:	mov    QWORD PTR [rdx+rax*8],rbx
   140001a41:	lea    eax,[rcx+0x1]
   140001a44:	and    eax,0x3
   140001a47:	mov    DWORD PTR [rip+0x4bd3],eax        # 0x140006620
   140001a4d:	mov    rax,rbx
   140001a50:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a55:	add    rsp,0x20
   140001a59:	pop    rdi
   140001a5a:	ret    
   140001a5b:	int3   
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	int3   
   140001a61:	int3   
   140001a62:	int3   
   140001a63:	int3   
   140001a64:	int3   
   140001a65:	int3   
   140001a66:	int3   
   140001a67:	int3   
   140001a68:	int3   
   140001a69:	int3   
   140001a6a:	int3   
   140001a6b:	int3   
   140001a6c:	int3   
   140001a6d:	int3   
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	mov    QWORD PTR [rsp+0x8],rbx
   140001a75:	mov    QWORD PTR [rsp+0x10],rsi
   140001a7a:	push   rdi
   140001a7b:	sub    rsp,0x30
   140001a7f:	mov    rsi,r8
   140001a82:	mov    rbx,rdx
   140001a85:	mov    rdi,rcx
   140001a88:	cmp    BYTE PTR [rip+0x4bf2],0x8        # 0x140006681
   140001a8f:	jae    0x140003382
   140001a95:	mov    rcx,QWORD PTR [rdi+0x40]
   140001a99:	mov    r8,rsi
   140001a9c:	mov    rdx,rbx
   140001a9f:	call   QWORD PTR [rip+0x255b]        # 0x140004000
   140001aa5:	mov    ebx,eax
   140001aa7:	test   eax,eax
   140001aa9:	js     0x1400033ad
   140001aaf:	mov    rbx,QWORD PTR [rsp+0x40]
   140001ab4:	mov    rsi,QWORD PTR [rsp+0x48]
   140001ab9:	add    rsp,0x30
   140001abd:	pop    rdi
   140001abe:	ret    
   140001abf:	int3   
   140001ac0:	int3   
   140001ac1:	int3   
   140001ac2:	int3   
   140001ac3:	int3   
   140001ac4:	int3   
   140001ac5:	int3   
   140001ac6:	int3   
   140001ac7:	int3   
   140001ac8:	int3   
   140001ac9:	int3   
   140001aca:	int3   
   140001acb:	int3   
   140001acc:	int3   
   140001acd:	int3   
   140001ace:	int3   
   140001acf:	int3   
   140001ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ad5:	mov    QWORD PTR [rsp+0x10],rsi
   140001ada:	push   rdi
   140001adb:	sub    rsp,0x20
   140001adf:	lea    rbx,[rcx+0x18]
   140001ae3:	mov    rdi,rcx
   140001ae6:	mov    rcx,rbx
   140001ae9:	call   QWORD PTR [rip+0x26e1]        # 0x1400041d0
   140001aef:	mov    rdi,QWORD PTR [rdi+0x48]
   140001af3:	mov    rax,QWORD PTR [rdi]
   140001af6:	mov    rsi,QWORD PTR [rax+0x18]
   140001afa:	lea    rax,[rip+0x41f]        # 0x140001f20
   140001b01:	cmp    rsi,rax
   140001b04:	jne    0x1400033e6
   140001b0a:	mov    rcx,rdi
   140001b0d:	call   0x140001f20
   140001b12:	mov    rcx,rbx
   140001b15:	call   QWORD PTR [rip+0x26ad]        # 0x1400041c8
   140001b1b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b20:	xor    eax,eax
   140001b22:	mov    rsi,QWORD PTR [rsp+0x38]
   140001b27:	add    rsp,0x20
   140001b2b:	pop    rdi
   140001b2c:	ret    
   140001b2d:	int3   
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	int3   
   140001b31:	int3   
   140001b32:	int3   
   140001b33:	int3   
   140001b34:	int3   
   140001b35:	int3   
   140001b36:	int3   
   140001b37:	int3   
   140001b38:	int3   
   140001b39:	int3   
   140001b3a:	int3   
   140001b3b:	int3   
   140001b3c:	int3   
   140001b3d:	int3   
   140001b3e:	int3   
   140001b3f:	int3   
   140001b40:	mov    QWORD PTR [rsp+0x18],rsi
   140001b45:	push   rdi
   140001b46:	sub    rsp,0x20
   140001b4a:	mov    rdi,r8
   140001b4d:	mov    rsi,rcx
   140001b50:	test   r8,r8
   140001b53:	je     0x1400033fa
   140001b59:	mov    QWORD PTR [rsp+0x30],rbx
   140001b5e:	xor    ebx,ebx
   140001b60:	mov    QWORD PTR [r8],rbx
   140001b63:	mov    rax,QWORD PTR [rdx]
   140001b66:	sub    rax,QWORD PTR [rip+0x2923]        # 0x140004490
   140001b6d:	jne    0x140001b7a
   140001b6f:	mov    rax,QWORD PTR [rdx+0x8]
   140001b73:	sub    rax,QWORD PTR [rip+0x291e]        # 0x140004498
   140001b7a:	test   rax,rax
   140001b7d:	je     0x140001c4b
   140001b83:	mov    rax,QWORD PTR [rdx]
   140001b86:	sub    rax,QWORD PTR [rip+0x2923]        # 0x1400044b0
   140001b8d:	jne    0x140001b9a
   140001b8f:	mov    rax,QWORD PTR [rdx+0x8]
   140001b93:	sub    rax,QWORD PTR [rip+0x291e]        # 0x1400044b8
   140001b9a:	test   rax,rax
   140001b9d:	je     0x140003404
   140001ba3:	mov    rax,QWORD PTR [rdx]
   140001ba6:	sub    rax,QWORD PTR [rip+0x28f3]        # 0x1400044a0
   140001bad:	jne    0x140001bba
   140001baf:	mov    rax,QWORD PTR [rdx+0x8]
   140001bb3:	sub    rax,QWORD PTR [rip+0x28ee]        # 0x1400044a8
   140001bba:	test   rax,rax
   140001bbd:	je     0x140001c0e
   140001bbf:	mov    rax,QWORD PTR [rdx]
   140001bc2:	sub    rax,QWORD PTR [rip+0x28f7]        # 0x1400044c0
   140001bc9:	jne    0x140001bd6
   140001bcb:	mov    rax,QWORD PTR [rdx+0x8]
   140001bcf:	sub    rax,QWORD PTR [rip+0x28f2]        # 0x1400044c8
   140001bd6:	test   rax,rax
   140001bd9:	je     0x140001c50
   140001bdb:	mov    rax,QWORD PTR [rdx]
   140001bde:	sub    rax,QWORD PTR [rip+0x28eb]        # 0x1400044d0
   140001be5:	jne    0x140001bf2
   140001be7:	mov    rax,QWORD PTR [rdx+0x8]
   140001beb:	sub    rax,QWORD PTR [rip+0x28e6]        # 0x1400044d8
   140001bf2:	test   rax,rax
   140001bf5:	je     0x140001c5b
   140001bf7:	mov    ebx,0x80004002
   140001bfc:	mov    eax,ebx
   140001bfe:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c03:	mov    rsi,QWORD PTR [rsp+0x40]
   140001c08:	add    rsp,0x20
   140001c0c:	pop    rdi
   140001c0d:	ret    
   140001c0e:	test   rcx,rcx
   140001c11:	je     0x140001cae
   140001c17:	lea    rax,[rcx+0x8]
   140001c1b:	mov    QWORD PTR [r8],rax
   140001c1e:	mov    rax,QWORD PTR [rsi]
   140001c21:	mov    rdi,QWORD PTR [rax+0x8]
   140001c25:	lea    rax,[rip+0xd4]        # 0x140001d00
   140001c2c:	cmp    rdi,rax
   140001c2f:	jne    0x14000340c
   140001c35:	lock inc DWORD PTR [rsi+0x18]
   140001c39:	mov    rsi,QWORD PTR [rsp+0x40]
   140001c3e:	mov    eax,ebx
   140001c40:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c45:	add    rsp,0x20
   140001c49:	pop    rdi
   140001c4a:	ret    
   140001c4b:	mov    QWORD PTR [r8],rcx
   140001c4e:	jmp    0x140001c1e
   140001c50:	test   rcx,rcx
   140001c53:	je     0x140001cae
   140001c55:	lea    rax,[rcx+0x10]
   140001c59:	jmp    0x140001c1b
   140001c5b:	mov    QWORD PTR [rsp+0x38],r14
   140001c60:	mov    r14,QWORD PTR [rcx+0x48]
   140001c64:	test   r14,r14
   140001c67:	jne    0x140001c7c
   140001c69:	lea    rdx,[rcx+0x48]
   140001c6d:	call   QWORD PTR [rip+0x2405]        # 0x140004078
   140001c73:	mov    r14,QWORD PTR [rsi+0x48]
   140001c77:	test   r14,r14
   140001c7a:	je     0x140001c9a
   140001c7c:	mov    rax,QWORD PTR [r14]
   140001c7f:	mov    rbx,QWORD PTR [rax]
   140001c82:	mov    rcx,rbx
   140001c85:	call   QWORD PTR [rip+0x2685]        # 0x140004310
   140001c8b:	mov    r8,rdi
   140001c8e:	lea    rdx,[rip+0x283b]        # 0x1400044d0
   140001c95:	mov    rcx,r14
   140001c98:	call   rbx
   140001c9a:	mov    r14,QWORD PTR [rsp+0x38]
   140001c9f:	mov    ebx,eax
   140001ca1:	test   eax,eax
   140001ca3:	jns    0x140001c1e
   140001ca9:	jmp    0x140001bfc
   140001cae:	mov    rax,rbx
   140001cb1:	jmp    0x140001c1b
   140001cb6:	int3   
   140001cb7:	int3   
   140001cb8:	int3   
   140001cb9:	int3   
   140001cba:	int3   
   140001cbb:	int3   
   140001cbc:	int3   
   140001cbd:	int3   
   140001cbe:	int3   
   140001cbf:	int3   
   140001cc0:	mov    QWORD PTR [rsp+0x10],rbx
   140001cc5:	push   rsi
   140001cc6:	sub    rsp,0x20
   140001cca:	mov    rsi,rcx
   140001ccd:	or     ebx,0xffffffff
   140001cd0:	lock xadd DWORD PTR [rcx+0x18],ebx
   140001cd5:	sub    ebx,0x1
   140001cd8:	je     0x140003420
   140001cde:	mov    eax,ebx
   140001ce0:	mov    rbx,QWORD PTR [rsp+0x38]
   140001ce5:	add    rsp,0x20
   140001ce9:	pop    rsi
   140001cea:	ret    
   140001ceb:	int3   
   140001cec:	int3   
   140001ced:	int3   
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	int3   
   140001cf1:	int3   
   140001cf2:	int3   
   140001cf3:	int3   
   140001cf4:	int3   
   140001cf5:	int3   
   140001cf6:	int3   
   140001cf7:	int3   
   140001cf8:	int3   
   140001cf9:	int3   
   140001cfa:	int3   
   140001cfb:	int3   
   140001cfc:	int3   
   140001cfd:	int3   
   140001cfe:	int3   
   140001cff:	int3   
   140001d00:	mov    eax,0x1
   140001d05:	lock xadd DWORD PTR [rcx+0x18],eax
   140001d0a:	inc    eax
   140001d0c:	ret    
   140001d0d:	int3   
   140001d0e:	int3   
   140001d0f:	int3   
   140001d10:	int3   
   140001d11:	int3   
   140001d12:	int3   
   140001d13:	int3   
   140001d14:	int3   
   140001d15:	int3   
   140001d16:	int3   
   140001d17:	int3   
   140001d18:	int3   
   140001d19:	int3   
   140001d1a:	int3   
   140001d1b:	int3   
   140001d1c:	int3   
   140001d1d:	int3   
   140001d1e:	int3   
   140001d1f:	int3   
   140001d20:	rex push rbx
   140001d22:	push   rsi
   140001d23:	sub    rsp,0x48
   140001d27:	mov    QWORD PTR [rsp+0x40],rbp
   140001d2c:	mov    rsi,rdx
   140001d2f:	mov    QWORD PTR [rsp+0x30],r14
   140001d34:	mov    rbp,rcx
   140001d37:	xor    r14d,r14d
   140001d3a:	mov    QWORD PTR [rsp+0x60],r14
   140001d3f:	mov    QWORD PTR [rsp+0x78],r14
   140001d44:	mov    QWORD PTR [rsp+0x70],r14
   140001d49:	cmp    BYTE PTR [rip+0x4931],0x8        # 0x140006681
   140001d50:	jae    0x140003452
   140001d56:	mov    ecx,0x48
   140001d5b:	call   0x140001ff4
   140001d60:	test   rax,rax
   140001d63:	je     0x140003477
   140001d69:	mov    rcx,rax
   140001d6c:	call   0x140001eb0
   140001d71:	mov    rbx,rax
   140001d74:	mov    QWORD PTR [rsp+0x38],rdi
   140001d79:	mov    QWORD PTR [rbp+0x50],rbx
   140001d7d:	test   rbx,rbx
   140001d80:	je     0x14000347f
   140001d86:	mov    rax,QWORD PTR [rbx]
   140001d89:	mov    rdi,QWORD PTR [rax+0x8]
   140001d8d:	lea    rax,[rip+0x1ec]        # 0x140001f80
   140001d94:	cmp    rdi,rax
   140001d97:	jne    0x140003489
   140001d9d:	mov    rcx,rbx
   140001da0:	call   0x140001f80
   140001da5:	lea    rdx,[rsp+0x60]
   140001daa:	mov    rcx,rsi
   140001dad:	call   QWORD PTR [rip+0x22cd]        # 0x140004080
   140001db3:	mov    edi,eax
   140001db5:	test   eax,eax
   140001db7:	js     0x14000349d
   140001dbd:	call   0x140002a00
   140001dc2:	mov    rdx,QWORD PTR [rsp+0x60]
   140001dc7:	test   al,al
   140001dc9:	je     0x1400034ed
   140001dcf:	lea    r8,[rsp+0x78]
   140001dd4:	lea    rcx,[rip+0x27b5]        # 0x140004590
   140001ddb:	call   QWORD PTR [rip+0x6237]        # 0x140008018
   140001de1:	mov    edi,eax
   140001de3:	test   eax,eax
   140001de5:	js     0x1400034b1
   140001deb:	lea    rdx,[rsp+0x70]
   140001df0:	xor    ecx,ecx
   140001df2:	call   QWORD PTR [rip+0x6228]        # 0x140008020
   140001df8:	mov    edi,eax
   140001dfa:	test   eax,eax
   140001dfc:	js     0x1400034c5
   140001e02:	mov    rbx,QWORD PTR [rsp+0x70]
   140001e07:	lea    rdi,[rbp+0x58]
   140001e0b:	mov    rax,QWORD PTR [rbx]
   140001e0e:	mov    rsi,QWORD PTR [rax+0x18]
   140001e12:	mov    rcx,rsi
   140001e15:	call   QWORD PTR [rip+0x24f5]        # 0x140004310
   140001e1b:	mov    r9,QWORD PTR [rsp+0x78]
   140001e20:	mov    r8,rbp
   140001e23:	mov    edx,0x1
   140001e28:	mov    QWORD PTR [rsp+0x20],rdi
   140001e2d:	mov    rcx,rbx
   140001e30:	call   rsi
   140001e32:	mov    edi,eax
   140001e34:	test   eax,eax
   140001e36:	js     0x1400034d9
   140001e3c:	mov    rcx,QWORD PTR [rsp+0x60]
   140001e41:	call   QWORD PTR [rip+0x2211]        # 0x140004058
   140001e47:	mov    rbx,QWORD PTR [rsp+0x70]
   140001e4c:	mov    rbp,QWORD PTR [rsp+0x40]
   140001e51:	mov    QWORD PTR [rsp+0x60],r14
   140001e56:	mov    r14,QWORD PTR [rsp+0x30]
   140001e5b:	test   rbx,rbx
   140001e5e:	je     0x140001e75
   140001e60:	mov    rax,QWORD PTR [rbx]
   140001e63:	mov    rsi,QWORD PTR [rax+0x10]
   140001e67:	mov    rcx,rsi
   140001e6a:	call   QWORD PTR [rip+0x24a0]        # 0x140004310
   140001e70:	mov    rcx,rbx
   140001e73:	call   rsi
   140001e75:	mov    rbx,QWORD PTR [rsp+0x78]
   140001e7a:	test   rbx,rbx
   140001e7d:	je     0x140001e94
   140001e7f:	mov    rax,QWORD PTR [rbx]
   140001e82:	mov    rsi,QWORD PTR [rax+0x10]
   140001e86:	mov    rcx,rsi
   140001e89:	call   QWORD PTR [rip+0x2481]        # 0x140004310
   140001e8f:	mov    rcx,rbx
   140001e92:	call   rsi
   140001e94:	mov    eax,edi
   140001e96:	mov    rdi,QWORD PTR [rsp+0x38]
   140001e9b:	add    rsp,0x48
   140001e9f:	pop    rsi
   140001ea0:	pop    rbx
   140001ea1:	ret    
   140001ea2:	int3   
   140001ea3:	int3   
   140001ea4:	int3   
   140001ea5:	int3   
   140001ea6:	int3   
   140001ea7:	int3   
   140001ea8:	int3   
   140001ea9:	int3   
   140001eaa:	int3   
   140001eab:	int3   
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140001eb5:	push   rdi
   140001eb6:	sub    rsp,0x20
   140001eba:	lea    rax,[rip+0x26a7]        # 0x140004568
   140001ec1:	mov    rbx,rcx
   140001ec4:	mov    QWORD PTR [rcx],rax
   140001ec7:	xor    edi,edi
   140001ec9:	mov    DWORD PTR [rcx+0x8],edi
   140001ecc:	add    rcx,0x10
   140001ed0:	call   QWORD PTR [rip+0x22ea]        # 0x1400041c0
   140001ed6:	mov    edx,0x1
   140001edb:	mov    DWORD PTR [rbx+0x38],edi
   140001ede:	mov    r8d,edx
   140001ee1:	mov    QWORD PTR [rbx+0x40],rdi
   140001ee5:	xor    r9d,r9d
   140001ee8:	xor    ecx,ecx
   140001eea:	call   QWORD PTR [rip+0x2310]        # 0x140004200
   140001ef0:	mov    QWORD PTR [rbx+0x40],rax
   140001ef4:	test   rax,rax
   140001ef7:	je     0x140001f07
   140001ef9:	mov    rax,rbx
   140001efc:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f01:	add    rsp,0x20
   140001f05:	pop    rdi
   140001f06:	ret    
   140001f07:	call   QWORD PTR [rip+0x21ab]        # 0x1400040b8
   140001f0d:	jmp    0x140001ef9
   140001f0f:	int3   
   140001f10:	int3   
   140001f11:	int3   
   140001f12:	int3   
   140001f13:	int3   
   140001f14:	int3   
   140001f15:	int3   
   140001f16:	int3   
   140001f17:	int3   
   140001f18:	int3   
   140001f19:	int3   
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	mov    QWORD PTR [rsp+0x8],rbx
   140001f25:	push   rdi
   140001f26:	sub    rsp,0x30
   140001f2a:	mov    rdi,rcx
   140001f2d:	add    rcx,0x10
   140001f31:	call   QWORD PTR [rip+0x2299]        # 0x1400041d0
   140001f37:	cmp    DWORD PTR [rdi+0x38],0x0
   140001f3b:	jne    0x140001f47
   140001f3d:	mov    rcx,QWORD PTR [rdi+0x40]
   140001f41:	call   QWORD PTR [rip+0x2291]        # 0x1400041d8
   140001f47:	inc    DWORD PTR [rdi+0x38]
   140001f4a:	mov    eax,DWORD PTR [rdi+0x38]
   140001f4d:	cmp    BYTE PTR [rip+0x472d],0x8        # 0x140006681
   140001f54:	jae    0x140003536
   140001f5a:	lea    rcx,[rdi+0x10]
   140001f5e:	call   QWORD PTR [rip+0x2264]        # 0x1400041c8
   140001f64:	mov    rbx,QWORD PTR [rsp+0x40]
   140001f69:	xor    eax,eax
   140001f6b:	add    rsp,0x30
   140001f6f:	pop    rdi
   140001f70:	ret    
   140001f71:	int3   
   140001f72:	int3   
   140001f73:	int3   
   140001f74:	int3   
   140001f75:	int3   
   140001f76:	int3   
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	mov    eax,0x1
   140001f85:	lock xadd DWORD PTR [rcx+0x8],eax
   140001f8a:	inc    eax
   140001f8c:	ret    
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	int3   
   140001f91:	int3   
   140001f92:	int3   
   140001f93:	int3   
   140001f94:	int3   
   140001f95:	int3   
   140001f96:	int3   
   140001f97:	int3   
   140001f98:	int3   
   140001f99:	int3   
   140001f9a:	int3   
   140001f9b:	int3   
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	sub    rsp,0x38
   140001fa4:	mov    eax,DWORD PTR [rip+0x2866]        # 0x140004810
   140001faa:	mov    r9,QWORD PTR [rip+0x20e7]        # 0x140004098
   140001fb1:	mov    r8,QWORD PTR [rip+0x2850]        # 0x140004808
   140001fb8:	mov    DWORD PTR [rsp+0x28],eax
   140001fbc:	mov    QWORD PTR [rsp+0x20],rdx
   140001fc1:	mov    rdx,rcx
   140001fc4:	lea    rcx,[rip+0xffffffffffffe035]        # 0x140000000
   140001fcb:	call   QWORD PTR [rip+0x20cf]        # 0x1400040a0
   140001fd1:	add    rsp,0x38
   140001fd5:	ret    
   140001fd6:	int3   
   140001fd7:	int3   
   140001fd8:	int3   
   140001fd9:	int3   
   140001fda:	int3   
   140001fdb:	int3   
   140001fdc:	int3   
   140001fdd:	int3   
   140001fde:	int3   
   140001fdf:	int3   
   140001fe0:	int3   
   140001fe1:	int3   
   140001fe2:	int3   
   140001fe3:	int3   
   140001fe4:	int3   
   140001fe5:	int3   
   140001fe6:	int3   
   140001fe7:	int3   
   140001fe8:	jmp    0x140002444
   140001fed:	int3   
   140001fee:	int3   
   140001fef:	int3   
   140001ff0:	int3   
   140001ff1:	int3   
   140001ff2:	int3   
   140001ff3:	int3   
   140001ff4:	mov    QWORD PTR [rsp+0x8],rbx
   140001ff9:	push   rdi
   140001ffa:	sub    rsp,0x20
   140001ffe:	mov    rdi,rcx
   140002001:	jmp    0x140002012
   140002003:	mov    rcx,rdi
   140002006:	call   0x14000245c
   14000200b:	test   eax,eax
   14000200d:	je     0x14000201f
   14000200f:	mov    rcx,rdi
   140002012:	call   0x140002450
   140002017:	mov    rbx,rax
   14000201a:	test   rax,rax
   14000201d:	je     0x140002003
   14000201f:	mov    rax,rbx
   140002022:	mov    rbx,QWORD PTR [rsp+0x30]
   140002027:	add    rsp,0x20
   14000202b:	pop    rdi
   14000202c:	ret    
   14000202d:	int3   
   14000202e:	int3   
   14000202f:	int3   
   140002030:	int3   
   140002031:	int3   
   140002032:	int3   
   140002033:	int3   
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	sub    rsp,0x28
   140002044:	mov    eax,0x5a4d
   140002049:	cmp    WORD PTR [rip+0xffffffffffffdfb0],ax        # 0x140000000
   140002050:	je     0x140002056
   140002052:	xor    eax,eax
   140002054:	jmp    0x1400020a5
   140002056:	movsxd rcx,DWORD PTR [rip+0xffffffffffffdfdf]        # 0x14000003c
   14000205d:	lea    rax,[rip+0xffffffffffffdf9c]        # 0x140000000
   140002064:	add    rcx,rax
   140002067:	cmp    DWORD PTR [rcx],0x4550
   14000206d:	jne    0x140002052
   14000206f:	movzx  eax,WORD PTR [rcx+0x18]
   140002073:	cmp    eax,0x10b
   140002078:	je     0x140002094
   14000207a:	cmp    eax,0x20b
   14000207f:	jne    0x140002052
   140002081:	xor    eax,eax
   140002083:	cmp    DWORD PTR [rcx+0x84],0xe
   14000208a:	jbe    0x1400020a5
   14000208c:	cmp    DWORD PTR [rcx+0xf8],eax
   140002092:	jmp    0x1400020a2
   140002094:	xor    eax,eax
   140002096:	cmp    DWORD PTR [rcx+0x74],0xe
   14000209a:	jbe    0x1400020a5
   14000209c:	cmp    DWORD PTR [rcx+0xe8],eax
   1400020a2:	setne  al
   1400020a5:	mov    ecx,0x2
   1400020aa:	mov    DWORD PTR [rip+0x3fa0],eax        # 0x140006050
   1400020b0:	call   0x140002538
   1400020b5:	mov    ecx,eax
   1400020b7:	call   QWORD PTR [rip+0x21eb]        # 0x1400042a8
   1400020bd:	mov    rcx,QWORD PTR [rip+0x21dc]        # 0x1400042a0
   1400020c4:	or     rax,0xffffffffffffffff
   1400020c8:	mov    QWORD PTR [rip+0x4529],rax        # 0x1400065f8
   1400020cf:	mov    QWORD PTR [rip+0x452a],rax        # 0x140006600
   1400020d6:	mov    eax,DWORD PTR [rip+0x3f88]        # 0x140006064
   1400020dc:	mov    DWORD PTR [rcx],eax
   1400020de:	mov    rcx,QWORD PTR [rip+0x2213]        # 0x1400042f8
   1400020e5:	mov    eax,DWORD PTR [rip+0x3f6d]        # 0x140006058
   1400020eb:	mov    DWORD PTR [rcx],eax
   1400020ed:	call   0x140002750
   1400020f2:	cmp    DWORD PTR [rip+0x3f07],0x0        # 0x140006000
   1400020f9:	jne    0x140002108
   1400020fb:	lea    rcx,[rip+0x64e]        # 0x140002750
   140002102:	call   QWORD PTR [rip+0x2170]        # 0x140004278
   140002108:	xor    eax,eax
   14000210a:	add    rsp,0x28
   14000210e:	ret    
   14000210f:	int3   
   140002110:	int3   
   140002111:	int3   
   140002112:	int3   
   140002113:	int3   
   140002114:	int3   
   140002115:	int3   
   140002116:	int3   
   140002117:	int3   
   140002118:	int3   
   140002119:	int3   
   14000211a:	int3   
   14000211b:	int3   
   14000211c:	int3   
   14000211d:	int3   
   14000211e:	int3   
   14000211f:	int3   
   140002120:	sub    rsp,0x38
   140002124:	mov    eax,DWORD PTR [rip+0x3f36]        # 0x140006060
   14000212a:	lea    r8,[rip+0x3f17]        # 0x140006048
   140002131:	mov    r9d,DWORD PTR [rip+0x3f24]        # 0x14000605c
   140002138:	lea    rdx,[rip+0x3f01]        # 0x140006040
   14000213f:	mov    DWORD PTR [rip+0x3f0f],eax        # 0x140006054
   140002145:	lea    rcx,[rip+0x3eec]        # 0x140006038
   14000214c:	lea    rax,[rip+0x3f01]        # 0x140006054
   140002153:	mov    QWORD PTR [rsp+0x20],rax
   140002158:	call   QWORD PTR [rip+0x2152]        # 0x1400042b0
   14000215e:	mov    DWORD PTR [rip+0x3ed8],eax        # 0x14000603c
   140002164:	add    rsp,0x38
   140002168:	ret    
   140002169:	int3   
   14000216a:	int3   
   14000216b:	int3   
   14000216c:	int3   
   14000216d:	int3   
   14000216e:	int3   
   14000216f:	int3   
   140002170:	mov    QWORD PTR [rsp+0x8],rbx
   140002175:	mov    QWORD PTR [rsp+0x10],rsi
   14000217a:	mov    QWORD PTR [rsp+0x18],rdi
   14000217f:	push   r12
   140002181:	push   r14
   140002183:	push   r15
   140002185:	sub    rsp,0xb0
   14000218c:	xor    r15d,r15d
   14000218f:	mov    DWORD PTR [rsp+0x20],r15d
   140002194:	lea    rcx,[rsp+0x40]
   140002199:	call   QWORD PTR [rip+0x1fc9]        # 0x140004168
   14000219f:	nop
   1400021a0:	mov    rax,QWORD PTR gs:0x30
   1400021a9:	mov    rbx,QWORD PTR [rax+0x8]
   1400021ad:	mov    r14d,r15d
   1400021b0:	xor    eax,eax
   1400021b2:	lock cmpxchg QWORD PTR [rip+0x444d],rbx        # 0x140006608
   1400021bb:	je     0x1400021d9
   1400021bd:	cmp    rax,rbx
   1400021c0:	jne    0x1400021cc
   1400021c2:	mov    edi,0x1
   1400021c7:	mov    r14d,edi
   1400021ca:	jmp    0x1400021de
   1400021cc:	mov    ecx,0x3e8
   1400021d1:	call   QWORD PTR [rip+0x2011]        # 0x1400041e8
   1400021d7:	jmp    0x1400021b0
   1400021d9:	mov    edi,0x1
   1400021de:	mov    eax,DWORD PTR [rip+0x442c]        # 0x140006610
   1400021e4:	cmp    eax,edi
   1400021e6:	jne    0x1400021f6
   1400021e8:	mov    esi,0x1f
   1400021ed:	mov    ecx,esi
   1400021ef:	call   0x140002584
   1400021f4:	jmp    0x140002267
   1400021f6:	mov    eax,DWORD PTR [rip+0x4414]        # 0x140006610
   1400021fc:	test   eax,eax
   1400021fe:	jne    0x14000225c
   140002200:	mov    DWORD PTR [rip+0x440a],edi        # 0x140006610
   140002206:	lea    r12,[rip+0x2143]        # 0x140004350
   14000220d:	lea    rbx,[rip+0x2124]        # 0x140004338
   140002214:	mov    QWORD PTR [rsp+0x30],rbx
   140002219:	mov    eax,r15d
   14000221c:	mov    DWORD PTR [rsp+0x24],eax
   140002220:	cmp    rbx,r12
   140002223:	jae    0x14000224e
   140002225:	test   eax,eax
   140002227:	jne    0x140002252
   140002229:	mov    rsi,QWORD PTR [rbx]
   14000222c:	test   rsi,rsi
   14000222f:	je     0x140002243
   140002231:	mov    rcx,rsi
   140002234:	mov    rax,QWORD PTR [rip+0x20d5]        # 0x140004310
   14000223b:	call   rax
   14000223d:	call   rsi
   14000223f:	mov    DWORD PTR [rsp+0x24],eax
   140002243:	add    rbx,0x8
   140002247:	mov    QWORD PTR [rsp+0x30],rbx
   14000224c:	jmp    0x140002220
   14000224e:	test   eax,eax
   140002250:	je     0x140002262
   140002252:	mov    eax,0xff
   140002257:	jmp    0x1400023c3
   14000225c:	mov    DWORD PTR [rip+0x3dd2],edi        # 0x140006034
   140002262:	mov    esi,0x1f
   140002267:	mov    eax,DWORD PTR [rip+0x43a3]        # 0x140006610
   14000226d:	cmp    eax,edi
   14000226f:	jne    0x14000228e
   140002271:	lea    rdx,[rip+0x20b8]        # 0x140004330
   140002278:	lea    rcx,[rip+0x20a1]        # 0x140004320
   14000227f:	call   0x14000275a
   140002284:	mov    DWORD PTR [rip+0x4382],0x2        # 0x140006610
   14000228e:	test   r14d,r14d
   140002291:	jne    0x14000229d
   140002293:	mov    rax,r15
   140002296:	xchg   QWORD PTR [rip+0x436b],rax        # 0x140006608
   14000229d:	cmp    QWORD PTR [rip+0x4374],r15        # 0x140006618
   1400022a4:	je     0x1400022d4
   1400022a6:	lea    rcx,[rip+0x436b]        # 0x140006618
   1400022ad:	call   0x1400025e0
   1400022b2:	test   eax,eax
   1400022b4:	je     0x1400022d4
   1400022b6:	mov    rbx,QWORD PTR [rip+0x435b]        # 0x140006618
   1400022bd:	mov    rcx,rbx
   1400022c0:	mov    rax,QWORD PTR [rip+0x2049]        # 0x140004310
   1400022c7:	call   rax
   1400022c9:	xor    r8d,r8d
   1400022cc:	lea    edx,[r8+0x2]
   1400022d0:	xor    ecx,ecx
   1400022d2:	call   rbx
   1400022d4:	mov    rax,QWORD PTR [rip+0x1fbd]        # 0x140004298
   1400022db:	mov    rdx,QWORD PTR [rax]
   1400022de:	test   rdx,rdx
   1400022e1:	jne    0x1400022ed
   1400022e3:	mov    eax,0xff
   1400022e8:	jmp    0x1400023c3
   1400022ed:	mov    QWORD PTR [rsp+0x28],rdx
   1400022f2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400022f6:	cmp    WORD PTR [rdx],0x20
   1400022fa:	ja     0x140002374
   1400022fc:	cmp    WORD PTR [rdx],r15w
   140002300:	je     0x140002306
   140002302:	test   ecx,ecx
   140002304:	jne    0x140002374
   140002306:	movzx  eax,WORD PTR [rdx]
   140002309:	sub    ax,di
   14000230c:	cmp    ax,si
   14000230f:	ja     0x14000231c
   140002311:	add    rdx,0x2
   140002315:	mov    QWORD PTR [rsp+0x28],rdx
   14000231a:	jmp    0x140002306
   14000231c:	mov    ecx,DWORD PTR [rsp+0x7c]
   140002320:	movzx  eax,WORD PTR [rsp+0x80]
   140002328:	mov    r9d,0xa
   14000232e:	and    cl,dil
   140002331:	cmovne r9d,eax
   140002335:	mov    r8,rdx
   140002338:	xor    edx,edx
   14000233a:	lea    rcx,[rip+0xffffffffffffdcbf]        # 0x140000000
   140002341:	call   0x140001010
   140002346:	mov    DWORD PTR [rip+0x3ce4],eax        # 0x140006030
   14000234c:	cmp    DWORD PTR [rip+0x3cfd],r15d        # 0x140006050
   140002353:	jne    0x14000235d
   140002355:	mov    ecx,eax
   140002357:	call   QWORD PTR [rip+0x1f13]        # 0x140004270
   14000235d:	cmp    DWORD PTR [rip+0x3cd0],r15d        # 0x140006034
   140002364:	jne    0x140002372
   140002366:	call   QWORD PTR [rip+0x1efc]        # 0x140004268
   14000236c:	mov    eax,DWORD PTR [rip+0x3cbe]        # 0x140006030
   140002372:	jmp    0x1400023c3
   140002374:	cmp    WORD PTR [rdx],0x22
   140002378:	jne    0x140002388
   14000237a:	mov    eax,r15d
   14000237d:	test   ecx,ecx
   14000237f:	sete   al
   140002382:	mov    ecx,eax
   140002384:	mov    DWORD PTR [rsp+0x20],eax
   140002388:	add    rdx,0x2
   14000238c:	mov    QWORD PTR [rsp+0x28],rdx
   140002391:	jmp    0x1400022f6
   140002396:	mov    DWORD PTR [rip+0x3c94],eax        # 0x140006030
   14000239c:	cmp    DWORD PTR [rip+0x3cad],0x0        # 0x140006050
   1400023a3:	jne    0x1400023ae
   1400023a5:	mov    ecx,eax
   1400023a7:	call   QWORD PTR [rip+0x1eb3]        # 0x140004260
   1400023ad:	int3   
   1400023ae:	cmp    DWORD PTR [rip+0x3c7f],0x0        # 0x140006034
   1400023b5:	jne    0x1400023c3
   1400023b7:	call   QWORD PTR [rip+0x1eab]        # 0x140004268
   1400023bd:	mov    eax,DWORD PTR [rip+0x3c6d]        # 0x140006030
   1400023c3:	lea    r11,[rsp+0xb0]
   1400023cb:	mov    rbx,QWORD PTR [r11+0x20]
   1400023cf:	mov    rsi,QWORD PTR [r11+0x28]
   1400023d3:	mov    rdi,QWORD PTR [r11+0x30]
   1400023d7:	mov    rsp,r11
   1400023da:	pop    r15
   1400023dc:	pop    r14
   1400023de:	pop    r12
   1400023e0:	ret    
   1400023e1:	int3   
   1400023e2:	int3   
   1400023e3:	int3   
   1400023e4:	int3   
   1400023e5:	int3   
   1400023e6:	int3   
   1400023e7:	int3   
   1400023e8:	int3   
   1400023e9:	int3   
   1400023ea:	int3   
   1400023eb:	int3   
   1400023ec:	int3   
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	sub    rsp,0x28
   1400023f4:	call   0x140002674
   1400023f9:	add    rsp,0x28
   1400023fd:	jmp    0x140002170
   140002402:	int3   
   140002403:	int3   
   140002404:	int3   
   140002405:	int3   
   140002406:	int3   
   140002407:	int3   
   140002408:	int3   
   140002409:	int3   
   14000240a:	int3   
   14000240b:	int3   
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	int3   
   140002411:	int3   
   140002412:	int3   
   140002413:	int3   
   140002414:	int3   
   140002415:	int3   
   140002416:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002420:	cmp    rcx,QWORD PTR [rip+0x3be1]        # 0x140006008
   140002427:	jne    0x140002439
   140002429:	rol    rcx,0x10
   14000242d:	test   cx,0xffff
   140002432:	jne    0x140002435
   140002434:	ret    
   140002435:	ror    rcx,0x10
   140002439:	jmp    0x1400027d0
   14000243e:	int3   
   14000243f:	int3   
   140002440:	int3   
   140002441:	int3   
   140002442:	int3   
   140002443:	int3   
   140002444:	jmp    QWORD PTR [rip+0x1e8e]        # 0x1400042d8
   14000244a:	int3   
   14000244b:	int3   
   14000244c:	int3   
   14000244d:	int3   
   14000244e:	int3   
   14000244f:	int3   
   140002450:	jmp    QWORD PTR [rip+0x1e7a]        # 0x1400042d0
   140002456:	int3   
   140002457:	int3   
   140002458:	int3   
   140002459:	int3   
   14000245a:	int3   
   14000245b:	int3   
   14000245c:	jmp    QWORD PTR [rip+0x1e66]        # 0x1400042c8
   140002462:	int3   
   140002463:	int3   
   140002464:	int3   
   140002465:	int3   
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	sub    rsp,0x28
   140002474:	mov    rax,QWORD PTR [rcx]
   140002477:	cmp    DWORD PTR [rax],0xe06d7363
   14000247d:	jne    0x1400024a2
   14000247f:	cmp    DWORD PTR [rax+0x18],0x4
   140002483:	jne    0x1400024a2
   140002485:	mov    ecx,DWORD PTR [rax+0x20]
   140002488:	lea    eax,[rcx-0x19930520]
   14000248e:	cmp    eax,0x2
   140002491:	jbe    0x14000249b
   140002493:	cmp    ecx,0x1994000
   140002499:	jne    0x1400024a2
   14000249b:	call   QWORD PTR [rip+0x1ddf]        # 0x140004280
   1400024a1:	int3   
   1400024a2:	xor    eax,eax
   1400024a4:	add    rsp,0x28
   1400024a8:	ret    
   1400024a9:	int3   
   1400024aa:	int3   
   1400024ab:	int3   
   1400024ac:	int3   
   1400024ad:	int3   
   1400024ae:	int3   
   1400024af:	int3   
   1400024b0:	sub    rsp,0x28
   1400024b4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140002470
   1400024bb:	call   QWORD PTR [rip+0x1bef]        # 0x1400040b0
   1400024c1:	xor    eax,eax
   1400024c3:	add    rsp,0x28
   1400024c7:	ret    
   1400024c8:	int3   
   1400024c9:	int3   
   1400024ca:	int3   
   1400024cb:	int3   
   1400024cc:	int3   
   1400024cd:	int3   
   1400024ce:	jmp    QWORD PTR [rip+0x1dec]        # 0x1400042c0
   1400024d4:	int3   
   1400024d5:	int3   
   1400024d6:	int3   
   1400024d7:	int3   
   1400024d8:	int3   
   1400024d9:	int3   
   1400024da:	int3   
   1400024db:	int3   
   1400024dc:	sub    rsp,0x18
   1400024e0:	xor    edx,edx
   1400024e2:	lea    rax,[rcx-0x1]
   1400024e6:	cmp    rax,0xfffffffffffffffd
   1400024ea:	ja     0x140002528
   1400024ec:	mov    eax,0x5a4d
   1400024f1:	cmp    WORD PTR [rcx],ax
   1400024f4:	jne    0x140002520
   1400024f6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400024f9:	jl     0x140002520
   1400024fb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140002502:	jae    0x140002520
   140002504:	movsxd rax,DWORD PTR [rcx+0x3c]
   140002508:	add    rax,rcx
   14000250b:	mov    QWORD PTR [rsp],rax
   14000250f:	cmp    DWORD PTR [rax],0x4550
   140002515:	cmovne rax,rdx
   140002519:	mov    rdx,rax
   14000251c:	mov    QWORD PTR [rsp],rax
   140002520:	jmp    0x140002528
   140002522:	xor    edx,edx
   140002524:	mov    QWORD PTR [rsp],rdx
   140002528:	mov    rax,rdx
   14000252b:	add    rsp,0x18
   14000252f:	ret    
   140002530:	int3   
   140002531:	int3   
   140002532:	int3   
   140002533:	int3   
   140002534:	int3   
   140002535:	int3   
   140002536:	int3   
   140002537:	int3   
   140002538:	rex push rbx
   14000253a:	sub    rsp,0x20
   14000253e:	mov    ebx,ecx
   140002540:	xor    ecx,ecx
   140002542:	call   QWORD PTR [rip+0x1bd8]        # 0x140004120
   140002548:	test   rax,rax
   14000254b:	je     0x140002575
   14000254d:	mov    rcx,rax
   140002550:	call   0x1400024dc
   140002555:	test   rax,rax
   140002558:	je     0x140002575
   14000255a:	mov    ecx,0x2
   14000255f:	cmp    WORD PTR [rax+0x5c],cx
   140002563:	jne    0x140002569
   140002565:	mov    eax,ecx
   140002567:	jmp    0x140002577
   140002569:	cmp    WORD PTR [rax+0x5c],0x3
   14000256e:	mov    eax,0x1
   140002573:	je     0x140002577
   140002575:	mov    eax,ebx
   140002577:	add    rsp,0x20
   14000257b:	pop    rbx
   14000257c:	ret    
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	int3   
   140002581:	int3   
   140002582:	int3   
   140002583:	int3   
   140002584:	jmp    QWORD PTR [rip+0x1d2e]        # 0x1400042b8
   14000258a:	int3   
   14000258b:	int3   
   14000258c:	int3   
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	movsxd r8,DWORD PTR [rcx+0x3c]
   140002594:	xor    r9d,r9d
   140002597:	add    r8,rcx
   14000259a:	mov    r10,rdx
   14000259d:	movzx  eax,WORD PTR [r8+0x14]
   1400025a2:	movzx  r11d,WORD PTR [r8+0x6]
   1400025a7:	add    rax,0x18
   1400025ab:	add    rax,r8
   1400025ae:	test   r11d,r11d
   1400025b1:	je     0x1400025d1
   1400025b3:	mov    edx,DWORD PTR [rax+0xc]
   1400025b6:	cmp    r10,rdx
   1400025b9:	jb     0x1400025c5
   1400025bb:	mov    ecx,DWORD PTR [rax+0x8]
   1400025be:	add    ecx,edx
   1400025c0:	cmp    r10,rcx
   1400025c3:	jb     0x1400025d3
   1400025c5:	inc    r9d
   1400025c8:	add    rax,0x28
   1400025cc:	cmp    r9d,r11d
   1400025cf:	jb     0x1400025b3
   1400025d1:	xor    eax,eax
   1400025d3:	ret    
   1400025d4:	int3   
   1400025d5:	int3   
   1400025d6:	int3   
   1400025d7:	int3   
   1400025d8:	int3   
   1400025d9:	int3   
   1400025da:	int3   
   1400025db:	int3   
   1400025dc:	int3   
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025e5:	push   rdi
   1400025e6:	sub    rsp,0x20
   1400025ea:	mov    rbx,rcx
   1400025ed:	lea    rdi,[rip+0xffffffffffffda0c]        # 0x140000000
   1400025f4:	mov    rcx,rdi
   1400025f7:	call   0x140002640
   1400025fc:	test   eax,eax
   1400025fe:	je     0x140002622
   140002600:	sub    rbx,rdi
   140002603:	mov    rdx,rbx
   140002606:	mov    rcx,rdi
   140002609:	call   0x140002590
   14000260e:	test   rax,rax
   140002611:	je     0x140002622
   140002613:	mov    eax,DWORD PTR [rax+0x24]
   140002616:	shr    eax,0x1f
   140002619:	not    eax
   14000261b:	and    eax,0x1
   14000261e:	jmp    0x140002622
   140002620:	xor    eax,eax
   140002622:	mov    rbx,QWORD PTR [rsp+0x30]
   140002627:	add    rsp,0x20
   14000262b:	pop    rdi
   14000262c:	ret    
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	int3   
   140002631:	int3   
   140002632:	int3   
   140002633:	int3   
   140002634:	int3   
   140002635:	int3   
   140002636:	int3   
   140002637:	int3   
   140002638:	int3   
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	mov    rax,rcx
   140002643:	mov    ecx,0x5a4d
   140002648:	cmp    WORD PTR [rax],cx
   14000264b:	je     0x140002650
   14000264d:	xor    eax,eax
   14000264f:	ret    
   140002650:	movsxd rcx,DWORD PTR [rax+0x3c]
   140002654:	add    rcx,rax
   140002657:	xor    eax,eax
   140002659:	cmp    DWORD PTR [rcx],0x4550
   14000265f:	jne    0x14000266d
   140002661:	mov    edx,0x20b
   140002666:	cmp    WORD PTR [rcx+0x18],dx
   14000266a:	sete   al
   14000266d:	ret    
   14000266e:	int3   
   14000266f:	int3   
   140002670:	int3   
   140002671:	int3   
   140002672:	int3   
   140002673:	int3   
   140002674:	mov    QWORD PTR [rsp+0x20],rbx
   140002679:	push   rbp
   14000267a:	mov    rbp,rsp
   14000267d:	sub    rsp,0x20
   140002681:	and    QWORD PTR [rbp+0x18],0x0
   140002686:	movabs rbx,0x2b992ddfa232
   140002690:	mov    rax,QWORD PTR [rip+0x3971]        # 0x140006008
   140002697:	cmp    rax,rbx
   14000269a:	jne    0x14000272f
   1400026a0:	lea    rcx,[rbp+0x18]
   1400026a4:	call   QWORD PTR [rip+0x1b6e]        # 0x140004218
   1400026aa:	mov    rax,QWORD PTR [rbp+0x18]
   1400026ae:	mov    QWORD PTR [rbp+0x10],rax
   1400026b2:	call   QWORD PTR [rip+0x1aa8]        # 0x140004160
   1400026b8:	mov    eax,eax
   1400026ba:	xor    QWORD PTR [rbp+0x10],rax
   1400026be:	call   QWORD PTR [rip+0x1a94]        # 0x140004158
   1400026c4:	mov    eax,eax
   1400026c6:	xor    QWORD PTR [rbp+0x10],rax
   1400026ca:	call   QWORD PTR [rip+0x1b40]        # 0x140004210
   1400026d0:	mov    eax,eax
   1400026d2:	shl    rax,0x18
   1400026d6:	xor    QWORD PTR [rbp+0x10],rax
   1400026da:	call   QWORD PTR [rip+0x1b30]        # 0x140004210
   1400026e0:	mov    eax,eax
   1400026e2:	lea    rcx,[rbp+0x10]
   1400026e6:	xor    rax,QWORD PTR [rbp+0x10]
   1400026ea:	xor    rax,rcx
   1400026ed:	lea    rcx,[rbp+0x20]
   1400026f1:	mov    QWORD PTR [rbp+0x10],rax
   1400026f5:	call   QWORD PTR [rip+0x1a85]        # 0x140004180
   1400026fb:	mov    eax,DWORD PTR [rbp+0x20]
   1400026fe:	movabs rcx,0xffffffffffff
   140002708:	shl    rax,0x20
   14000270c:	xor    rax,QWORD PTR [rbp+0x20]
   140002710:	xor    rax,QWORD PTR [rbp+0x10]
   140002714:	and    rax,rcx
   140002717:	movabs rcx,0x2b992ddfa233
   140002721:	cmp    rax,rbx
   140002724:	cmove  rax,rcx
   140002728:	mov    QWORD PTR [rip+0x38d9],rax        # 0x140006008
   14000272f:	mov    rbx,QWORD PTR [rsp+0x48]
   140002734:	not    rax
   140002737:	mov    QWORD PTR [rip+0x38d2],rax        # 0x140006010
   14000273e:	add    rsp,0x20
   140002742:	pop    rbp
   140002743:	ret    
   140002744:	int3   
   140002745:	int3   
   140002746:	int3   
   140002747:	int3   
   140002748:	int3   
   140002749:	int3   
   14000274a:	int3   
   14000274b:	int3   
   14000274c:	int3   
   14000274d:	int3   
   14000274e:	int3   
   14000274f:	int3   
   140002750:	xor    eax,eax
   140002752:	ret    
   140002753:	int3   
   140002754:	int3   
   140002755:	int3   
   140002756:	int3   
   140002757:	int3   
   140002758:	int3   
   140002759:	int3   
   14000275a:	jmp    QWORD PTR [rip+0x1b28]        # 0x140004288
   140002760:	int3   
   140002761:	int3   
   140002762:	int3   
   140002763:	int3   
   140002764:	int3   
   140002765:	int3   
   140002766:	jmp    QWORD PTR [rip+0x1b24]        # 0x140004290
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	int3   
   140002771:	int3   
   140002772:	int3   
   140002773:	int3   
   140002774:	int3   
   140002775:	int3   
   140002776:	int3   
   140002777:	int3   
   140002778:	int3   
   140002779:	int3   
   14000277a:	int3   
   14000277b:	int3   
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	ret    0x0
   140002783:	int3   
   140002784:	int3   
   140002785:	int3   
   140002786:	int3   
   140002787:	int3   
   140002788:	int3   
   140002789:	int3   
   14000278a:	int3   
   14000278b:	int3   
   14000278c:	rex push rbx
   14000278e:	sub    rsp,0x20
   140002792:	mov    rbx,rcx
   140002795:	xor    ecx,ecx
   140002797:	call   QWORD PTR [rip+0x1913]        # 0x1400040b0
   14000279d:	mov    rcx,rbx
   1400027a0:	call   QWORD PTR [rip+0x192a]        # 0x1400040d0
   1400027a6:	call   QWORD PTR [rip+0x19a4]        # 0x140004150
   1400027ac:	mov    rcx,rax
   1400027af:	mov    edx,0xc0000409
   1400027b4:	add    rsp,0x20
   1400027b8:	pop    rbx
   1400027b9:	rex.W jmp QWORD PTR [rip+0x19b0]        # 0x140004170
   1400027c0:	int3   
   1400027c1:	int3   
   1400027c2:	int3   
   1400027c3:	int3   
   1400027c4:	int3   
   1400027c5:	int3   
   1400027c6:	int3   
   1400027c7:	int3   
   1400027c8:	int3   
   1400027c9:	int3   
   1400027ca:	int3   
   1400027cb:	int3   
   1400027cc:	int3   
   1400027cd:	int3   
   1400027ce:	int3   
   1400027cf:	int3   
   1400027d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400027d5:	sub    rsp,0x88
   1400027dc:	lea    rcx,[rip+0x392d]        # 0x140006110
   1400027e3:	call   QWORD PTR [rip+0x19b7]        # 0x1400041a0
   1400027e9:	mov    rax,QWORD PTR [rip+0x3a18]        # 0x140006208
   1400027f0:	mov    QWORD PTR [rsp+0x48],rax
   1400027f5:	xor    r8d,r8d
   1400027f8:	lea    rdx,[rsp+0x50]
   1400027fd:	mov    rcx,QWORD PTR [rsp+0x48]
   140002802:	call   QWORD PTR [rip+0x1988]        # 0x140004190
   140002808:	mov    QWORD PTR [rsp+0x40],rax
   14000280d:	cmp    QWORD PTR [rsp+0x40],0x0
   140002813:	je     0x140002857
   140002815:	mov    QWORD PTR [rsp+0x38],0x0
   14000281e:	lea    rax,[rsp+0x58]
   140002823:	mov    QWORD PTR [rsp+0x30],rax
   140002828:	lea    rax,[rsp+0x60]
   14000282d:	mov    QWORD PTR [rsp+0x28],rax
   140002832:	lea    rax,[rip+0x38d7]        # 0x140006110
   140002839:	mov    QWORD PTR [rsp+0x20],rax
   14000283e:	mov    r9,QWORD PTR [rsp+0x40]
   140002843:	mov    r8,QWORD PTR [rsp+0x48]
   140002848:	mov    rdx,QWORD PTR [rsp+0x50]
   14000284d:	xor    ecx,ecx
   14000284f:	call   QWORD PTR [rip+0x1943]        # 0x140004198
   140002855:	jmp    0x14000287a
   140002857:	mov    rax,QWORD PTR [rip+0x394a]        # 0x1400061a8
   14000285e:	mov    rax,QWORD PTR [rax]
   140002861:	mov    QWORD PTR [rip+0x39a0],rax        # 0x140006208
   140002868:	mov    rax,QWORD PTR [rip+0x3939]        # 0x1400061a8
   14000286f:	add    rax,0x8
   140002873:	mov    QWORD PTR [rip+0x392e],rax        # 0x1400061a8
   14000287a:	mov    rax,QWORD PTR [rip+0x3987]        # 0x140006208
   140002881:	mov    QWORD PTR [rip+0x37f8],rax        # 0x140006080
   140002888:	mov    rax,QWORD PTR [rsp+0x90]
   140002890:	mov    QWORD PTR [rip+0x38f9],rax        # 0x140006190
   140002897:	mov    DWORD PTR [rip+0x37cf],0xc0000409        # 0x140006070
   1400028a1:	mov    DWORD PTR [rip+0x37c9],0x1        # 0x140006074
   1400028ab:	mov    DWORD PTR [rip+0x37d3],0x3        # 0x140006088
   1400028b5:	mov    eax,0x8
   1400028ba:	imul   rax,rax,0x0
   1400028be:	lea    rcx,[rip+0x37cb]        # 0x140006090
   1400028c5:	mov    QWORD PTR [rcx+rax*1],0x2
   1400028cd:	mov    eax,0x8
   1400028d2:	imul   rax,rax,0x1
   1400028d6:	lea    rcx,[rip+0x37b3]        # 0x140006090
   1400028dd:	mov    rdx,QWORD PTR [rip+0x3724]        # 0x140006008
   1400028e4:	mov    QWORD PTR [rcx+rax*1],rdx
   1400028e8:	mov    eax,0x8
   1400028ed:	imul   rax,rax,0x2
   1400028f1:	lea    rcx,[rip+0x3798]        # 0x140006090
   1400028f8:	mov    rdx,QWORD PTR [rip+0x3711]        # 0x140006010
   1400028ff:	mov    QWORD PTR [rcx+rax*1],rdx
   140002903:	mov    eax,0x8
   140002908:	imul   rax,rax,0x0
   14000290c:	mov    rcx,QWORD PTR [rip+0x36f5]        # 0x140006008
   140002913:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140002918:	mov    eax,0x8
   14000291d:	imul   rax,rax,0x1
   140002921:	mov    rcx,QWORD PTR [rip+0x36e8]        # 0x140006010
   140002928:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000292d:	lea    rcx,[rip+0x1c64]        # 0x140004598
   140002934:	call   0x14000278c
   140002939:	add    rsp,0x88
   140002940:	ret    
   140002941:	int3   
   140002942:	int3   
   140002943:	int3   
   140002944:	int3   
   140002945:	int3   
   140002946:	int3   
   140002947:	int3   
   140002948:	int3   
   140002949:	int3   
   14000294a:	int3   
   14000294b:	int3   
   14000294c:	int3   
   14000294d:	int3   
   14000294e:	int3   
   14000294f:	int3   
   140002950:	int3   
   140002951:	int3   
   140002952:	int3   
   140002953:	int3   
   140002954:	int3   
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	int3   
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	lea    rax,[rip+0x56b9]        # 0x140008020
   140002967:	jmp    0x140002980
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	int3   
   140002971:	int3   
   140002972:	int3   
   140002973:	int3   
   140002974:	int3   
   140002975:	int3   
   140002976:	int3   
   140002977:	int3   
   140002978:	int3   
   140002979:	int3   
   14000297a:	int3   
   14000297b:	int3   
   14000297c:	int3   
   14000297d:	int3   
   14000297e:	int3   
   14000297f:	int3   
   140002980:	mov    QWORD PTR [rsp+0x8],rcx
   140002985:	mov    QWORD PTR [rsp+0x10],rdx
   14000298a:	mov    QWORD PTR [rsp+0x18],r8
   14000298f:	mov    QWORD PTR [rsp+0x20],r9
   140002994:	sub    rsp,0x68
   140002998:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000299e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400029a4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1400029aa:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400029b0:	mov    rdx,rax
   1400029b3:	lea    rcx,[rip+0x26ee]        # 0x1400050a8
   1400029ba:	call   0x140001fa0
   1400029bf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400029c5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400029cb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400029d1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400029d7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400029dc:	mov    rdx,QWORD PTR [rsp+0x78]
   1400029e1:	mov    r8,QWORD PTR [rsp+0x80]
   1400029e9:	mov    r9,QWORD PTR [rsp+0x88]
   1400029f1:	add    rsp,0x68
   1400029f5:	jmp    0x1400029f7
   1400029f7:	jmp    rax
   1400029f9:	int3   
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	sub    rsp,0x28
   140002a04:	mov    ecx,DWORD PTR [rip+0x3bde]        # 0x1400065e8
   140002a0a:	cmp    ecx,0x1
   140002a0d:	jne    0x140002a13
   140002a0f:	mov    al,cl
   140002a11:	jmp    0x140002a49
   140002a13:	cmp    ecx,0x2
   140002a16:	jne    0x140002a1c
   140002a18:	xor    al,al
   140002a1a:	jmp    0x140002a49
   140002a1c:	lea    rdx,[rsp+0x30]
   140002a21:	mov    BYTE PTR [rsp+0x30],0x0
   140002a26:	lea    rcx,[rip+0x1ba3]        # 0x1400045d0
   140002a2d:	call   0x140002b50
   140002a32:	test   eax,eax
   140002a34:	js     0x140002a18
   140002a36:	mov    al,BYTE PTR [rsp+0x30]
   140002a3a:	mov    cl,al
   140002a3c:	neg    cl
   140002a3e:	sbb    edx,edx
   140002a40:	add    edx,0x2
   140002a43:	mov    DWORD PTR [rip+0x3b9f],edx        # 0x1400065e8
   140002a49:	add    rsp,0x28
   140002a4d:	ret    
   140002a4e:	int3   
   140002a4f:	int3   
   140002a50:	int3   
   140002a51:	int3   
   140002a52:	int3   
   140002a53:	int3   
   140002a54:	int3   
   140002a55:	int3   
   140002a56:	int3   
   140002a57:	int3   
   140002a58:	int3   
   140002a59:	int3   
   140002a5a:	int3   
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	lea    rax,[rip+0x55b1]        # 0x140008018
   140002a67:	jmp    0x140002980
   140002a6c:	int3   
   140002a6d:	int3   
   140002a6e:	int3   
   140002a6f:	int3   
   140002a70:	int3   
   140002a71:	int3   
   140002a72:	int3   
   140002a73:	int3   
   140002a74:	int3   
   140002a75:	int3   
   140002a76:	int3   
   140002a77:	int3   
   140002a78:	int3   
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	int3   
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	lea    rax,[rip+0x5579]        # 0x140008000
   140002a87:	jmp    0x140002aa0
   140002a8c:	int3   
   140002a8d:	int3   
   140002a8e:	int3   
   140002a8f:	int3   
   140002a90:	int3   
   140002a91:	int3   
   140002a92:	int3   
   140002a93:	int3   
   140002a94:	int3   
   140002a95:	int3   
   140002a96:	int3   
   140002a97:	int3   
   140002a98:	int3   
   140002a99:	int3   
   140002a9a:	int3   
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	mov    QWORD PTR [rsp+0x8],rcx
   140002aa5:	mov    QWORD PTR [rsp+0x10],rdx
   140002aaa:	mov    QWORD PTR [rsp+0x18],r8
   140002aaf:	mov    QWORD PTR [rsp+0x20],r9
   140002ab4:	sub    rsp,0x68
   140002ab8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140002abe:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140002ac4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140002aca:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140002ad0:	mov    rdx,rax
   140002ad3:	lea    rcx,[rip+0x25ee]        # 0x1400050c8
   140002ada:	call   0x140001fa0
   140002adf:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140002ae5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140002aeb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140002af1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140002af7:	mov    rcx,QWORD PTR [rsp+0x70]
   140002afc:	mov    rdx,QWORD PTR [rsp+0x78]
   140002b01:	mov    r8,QWORD PTR [rsp+0x80]
   140002b09:	mov    r9,QWORD PTR [rsp+0x88]
   140002b11:	add    rsp,0x68
   140002b15:	jmp    0x140002b17
   140002b17:	jmp    rax
   140002b19:	int3   
   140002b1a:	int3   
   140002b1b:	int3   
   140002b1c:	int3   
   140002b1d:	int3   
   140002b1e:	int3   
   140002b1f:	int3   
   140002b20:	lea    rax,[rip+0x54e1]        # 0x140008008
   140002b27:	jmp    0x140002aa0
   140002b2c:	int3   
   140002b2d:	int3   
   140002b2e:	int3   
   140002b2f:	int3   
   140002b30:	int3   
   140002b31:	int3   
   140002b32:	int3   
   140002b33:	int3   
   140002b34:	int3   
   140002b35:	int3   
   140002b36:	int3   
   140002b37:	int3   
   140002b38:	int3   
   140002b39:	int3   
   140002b3a:	int3   
   140002b3b:	int3   
   140002b3c:	int3   
   140002b3d:	int3   
   140002b3e:	int3   
   140002b3f:	int3   
   140002b40:	jmp    QWORD PTR [rip+0x1552]        # 0x140004098
   140002b46:	int3   
   140002b47:	int3   
   140002b48:	int3   
   140002b49:	int3   
   140002b4a:	int3   
   140002b4b:	int3   
   140002b4c:	int3   
   140002b4d:	int3   
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	jmp    QWORD PTR [rip+0x14e2]        # 0x140004038
   140002b56:	int3   
   140002b57:	int3   
   140002b58:	int3   
   140002b59:	int3   
   140002b5a:	int3   
   140002b5b:	int3   
   140002b5c:	sub    rsp,0x28
   140002b60:	mov    r8,QWORD PTR [r9+0x38]
   140002b64:	mov    rcx,rdx
   140002b67:	mov    rdx,r9
   140002b6a:	call   0x140002b80
   140002b6f:	mov    eax,0x1
   140002b74:	add    rsp,0x28
   140002b78:	ret    
   140002b79:	int3   
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	rex push rbx
   140002b82:	sub    rsp,0x20
   140002b86:	mov    r11d,DWORD PTR [r8]
   140002b89:	mov    rbx,rdx
   140002b8c:	and    r11d,0xfffffff8
   140002b90:	mov    r9,rcx
   140002b93:	test   BYTE PTR [r8],0x4
   140002b97:	mov    r10,rcx
   140002b9a:	je     0x140002baf
   140002b9c:	mov    eax,DWORD PTR [r8+0x8]
   140002ba0:	movsxd r10,DWORD PTR [r8+0x4]
   140002ba4:	neg    eax
   140002ba6:	add    r10,rcx
   140002ba9:	movsxd rcx,eax
   140002bac:	and    r10,rcx
   140002baf:	movsxd rax,r11d
   140002bb2:	mov    rdx,QWORD PTR [rax+r10*1]
   140002bb6:	mov    rax,QWORD PTR [rbx+0x10]
   140002bba:	mov    ecx,DWORD PTR [rax+0x8]
   140002bbd:	add    rcx,QWORD PTR [rbx+0x8]
   140002bc1:	test   BYTE PTR [rcx+0x3],0xf
   140002bc5:	je     0x140002bd3
   140002bc7:	movzx  eax,BYTE PTR [rcx+0x3]
   140002bcb:	and    eax,0xfffffff0
   140002bce:	cdqe   
   140002bd0:	add    r9,rax
   140002bd3:	xor    r9,rdx
   140002bd6:	mov    rcx,r9
   140002bd9:	add    rsp,0x20
   140002bdd:	pop    rbx
   140002bde:	jmp    0x140002420
   140002be3:	int3   
   140002be4:	int3   
   140002be5:	int3   
   140002be6:	int3   
   140002be7:	int3   
   140002be8:	int3   
   140002be9:	int3   
   140002bea:	jmp    QWORD PTR [rip+0x1710]        # 0x140004300
   140002bf0:	int3   
   140002bf1:	int3   
   140002bf2:	int3   
   140002bf3:	int3   
   140002bf4:	int3   
   140002bf5:	int3   
   140002bf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002c00:	jmp    rax
   140002c02:	int3   
   140002c03:	int3   
   140002c04:	int3   
   140002c05:	int3   
   140002c06:	int3   
   140002c07:	int3   
   140002c08:	int3   
   140002c09:	int3   
   140002c0a:	int3   
   140002c0b:	int3   
   140002c0c:	int3   
   140002c0d:	int3   
   140002c0e:	int3   
   140002c0f:	int3   
   140002c10:	sub    rcx,0x8
   140002c14:	jmp    0x140001d00
   140002c19:	int3   
   140002c1a:	int3   
   140002c1b:	int3   
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	sub    rcx,0x10
   140002c24:	jmp    0x140001d00
   140002c29:	int3   
   140002c2a:	int3   
   140002c2b:	int3   
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	mov    eax,0x80004001
   140002c35:	ret    
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	sub    rcx,0x8
   140002c44:	jmp    0x140001b40
   140002c49:	int3   
   140002c4a:	int3   
   140002c4b:	int3   
   140002c4c:	int3   
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	sub    rcx,0x10
   140002c54:	jmp    0x140001b40
   140002c59:	int3   
   140002c5a:	int3   
   140002c5b:	int3   
   140002c5c:	int3   
   140002c5d:	int3   
   140002c5e:	int3   
   140002c5f:	int3   
   140002c60:	sub    rcx,0x8
   140002c64:	jmp    0x140001cc0
   140002c69:	int3   
   140002c6a:	int3   
   140002c6b:	int3   
   140002c6c:	int3   
   140002c6d:	int3   
   140002c6e:	int3   
   140002c6f:	int3   
   140002c70:	sub    rcx,0x10
   140002c74:	jmp    0x140001cc0
   140002c79:	int3   
   140002c7a:	int3   
   140002c7b:	int3   
   140002c7c:	int3   
   140002c7d:	int3   
   140002c7e:	int3   
   140002c7f:	int3   
   140002c80:	int3   
   140002c81:	int3   
   140002c82:	int3   
   140002c83:	int3   
   140002c84:	int3   
   140002c85:	int3   
   140002c86:	rex push rbp
   140002c88:	sub    rsp,0x20
   140002c8c:	mov    rbp,rdx
   140002c8f:	mov    rax,QWORD PTR [rcx]
   140002c92:	mov    rdx,rcx
   140002c95:	mov    ecx,DWORD PTR [rax]
   140002c97:	call   0x1400024ce
   140002c9c:	nop
   140002c9d:	add    rsp,0x20
   140002ca1:	pop    rbp
   140002ca2:	ret    
   140002ca3:	int3   
   140002ca4:	int3   
   140002ca5:	int3   
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	rex push rbp
   140002cb2:	sub    rsp,0x20
   140002cb6:	mov    rbp,rdx
   140002cb9:	mov    rax,QWORD PTR [rcx]
   140002cbc:	xor    ecx,ecx
   140002cbe:	cmp    DWORD PTR [rax],0xc0000005
   140002cc4:	sete   cl
   140002cc7:	mov    eax,ecx
   140002cc9:	add    rsp,0x20
   140002ccd:	pop    rbp
   140002cce:	ret    
   140002ccf:	int3   
   140002cd0:	or     r15d,0xffffffff
   140002cd4:	jmp    0x14000309b
   140002cd9:	mov    rdi,rsi
   140002cdc:	jmp    0x140001264
   140002ce1:	cmp    BYTE PTR [rip+0x3998],0x1        # 0x140006680
   140002ce8:	jb     0x140002d0d
   140002cea:	mov    rcx,QWORD PTR [rip+0x332f]        # 0x140006020
   140002cf1:	lea    r8,[rip+0x1978]        # 0x140004670
   140002cf8:	mov    edx,0xb
   140002cfd:	mov    DWORD PTR [rsp+0x20],eax
   140002d01:	xor    r9d,r9d
   140002d04:	mov    rcx,QWORD PTR [rcx+0x10]
   140002d08:	call   0x1400036fc
   140002d0d:	mov    rsi,r12
   140002d10:	jmp    0x14000309b
   140002d15:	or     r15d,0xffffffff
   140002d19:	mov    rsi,r12
   140002d1c:	jmp    0x14000309b
   140002d21:	mov    rbx,rsi
   140002d24:	jmp    0x1400012b9
   140002d29:	mov    rcx,r13
   140002d2c:	jmp    0x1400012f9
   140002d31:	cmp    BYTE PTR [rip+0x3948],0x1        # 0x140006680
   140002d38:	jb     0x140002d9d
   140002d3a:	mov    edx,0xc
   140002d3f:	jmp    0x140002d7f
   140002d41:	mov    QWORD PTR [rbp-0x60],rsi
   140002d45:	jmp    0x140001322
   140002d4a:	mov    eax,DWORD PTR [rbp-0x68]
   140002d4d:	test   eax,eax
   140002d4f:	jns    0x140002d9d
   140002d51:	cmp    BYTE PTR [rip+0x3928],0x1        # 0x140006680
   140002d58:	jb     0x140002d9d
   140002d5a:	mov    edx,0xd
   140002d5f:	jmp    0x140002d7f
   140002d61:	mov    QWORD PTR [rbp-0x60],rcx
   140002d65:	jmp    0x140001356
   140002d6a:	mov    eax,DWORD PTR [rbp-0x68]
   140002d6d:	test   eax,eax
   140002d6f:	jns    0x140002d9d
   140002d71:	cmp    BYTE PTR [rip+0x3908],0x1        # 0x140006680
   140002d78:	jb     0x140002d9d
   140002d7a:	mov    edx,0xe
   140002d7f:	mov    rcx,QWORD PTR [rip+0x329a]        # 0x140006020
   140002d86:	lea    r8,[rip+0x18e3]        # 0x140004670
   140002d8d:	xor    r9d,r9d
   140002d90:	mov    DWORD PTR [rsp+0x20],eax
   140002d94:	mov    rcx,QWORD PTR [rcx+0x10]
   140002d98:	call   0x1400036fc
   140002d9d:	mov    rsi,r12
   140002da0:	jmp    0x140003093
   140002da5:	mov    rbx,rdi
   140002da8:	jmp    0x1400013f3
   140002dad:	mov    rdx,r13
   140002db0:	jmp    0x140001448
   140002db5:	call   QWORD PTR [rip+0x12fd]        # 0x1400040b8
   140002dbb:	mov    r12d,eax
   140002dbe:	test   eax,eax
   140002dc0:	jle    0x140002dcd
   140002dc2:	movzx  r12d,ax
   140002dc6:	or     r12d,0x80070000
   140002dcd:	test   r12d,r12d
   140002dd0:	jns    0x140001459
   140002dd6:	cmp    BYTE PTR [rip+0x38a3],0x1        # 0x140006680
   140002ddd:	jb     0x140001459
   140002de3:	mov    rcx,QWORD PTR [rip+0x3236]        # 0x140006020
   140002dea:	lea    r8,[rip+0x187f]        # 0x140004670
   140002df1:	mov    edx,0xa
   140002df6:	mov    DWORD PTR [rsp+0x20],r12d
   140002dfb:	xor    r9d,r9d
   140002dfe:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e02:	call   0x1400036fc
   140002e07:	nop
   140002e08:	jmp    0x140001459
   140002e0d:	mov    r12d,0x80070057
   140002e13:	jmp    0x14000146b
   140002e18:	shr    eax,1
   140002e1a:	and    eax,0x3
   140002e1d:	jne    0x140002e3d
   140002e1f:	call   QWORD PTR [rip+0x12d3]        # 0x1400040f8
   140002e25:	mov    r8,QWORD PTR [rbp+0x340]
   140002e2c:	xor    edx,edx
   140002e2e:	mov    rcx,rax
   140002e31:	call   QWORD PTR [rip+0x12c9]        # 0x140004100
   140002e37:	nop
   140002e38:	jmp    0x140001473
   140002e3d:	cmp    eax,0x1
   140002e40:	jne    0x140001473
   140002e46:	call   QWORD PTR [rip+0x120c]        # 0x140004058
   140002e4c:	nop
   140002e4d:	jmp    0x140001473
   140002e52:	cmp    BYTE PTR [rip+0x3827],0x1        # 0x140006680
   140002e59:	jb     0x140002ee1
   140002e5f:	mov    edx,0x10
   140002e64:	jmp    0x140002ec3
   140002e66:	cmp    BYTE PTR [rip+0x3813],0x1        # 0x140006680
   140002e6d:	jb     0x140002ee1
   140002e6f:	mov    edx,0x11
   140002e74:	jmp    0x140002ec3
   140002e76:	xor    r9d,r9d
   140002e79:	xor    r8d,r8d
   140002e7c:	mov    ecx,0xc000000d
   140002e81:	lea    edx,[r9+0x1]
   140002e85:	call   QWORD PTR [rip+0x1235]        # 0x1400040c0
   140002e8b:	nop
   140002e8c:	jmp    0x140001515
   140002e91:	cmp    BYTE PTR [rip+0x37e8],0x1        # 0x140006680
   140002e98:	jb     0x140002ee1
   140002e9a:	mov    edx,0x12
   140002e9f:	jmp    0x140002ec3
   140002ea1:	cmp    BYTE PTR [rip+0x37d8],0x1        # 0x140006680
   140002ea8:	jb     0x140002ee1
   140002eaa:	mov    edx,0x13
   140002eaf:	jmp    0x140002ec3
   140002eb1:	cmp    BYTE PTR [rip+0x37c8],0x1        # 0x140006680
   140002eb8:	jb     0x140002fb8
   140002ebe:	mov    edx,0x14
   140002ec3:	mov    rcx,QWORD PTR [rip+0x3156]        # 0x140006020
   140002eca:	lea    r8,[rip+0x179f]        # 0x140004670
   140002ed1:	xor    r9d,r9d
   140002ed4:	mov    DWORD PTR [rsp+0x20],eax
   140002ed8:	mov    rcx,QWORD PTR [rcx+0x10]
   140002edc:	call   0x1400036fc
   140002ee1:	mov    r14,QWORD PTR [rsp+0x60]
   140002ee6:	mov    rsi,r12
   140002ee9:	mov    r15d,esi
   140002eec:	jmp    0x140003093
   140002ef1:	lea    rcx,[rbp-0x30]
   140002ef5:	call   0x1400035c0
   140002efa:	mov    rcx,QWORD PTR [rip+0x311f]        # 0x140006020
   140002f01:	lea    r8,[rip+0x1768]        # 0x140004670
   140002f08:	mov    edx,0x15
   140002f0d:	mov    QWORD PTR [rsp+0x20],rax
   140002f12:	xor    r9d,r9d
   140002f15:	mov    rcx,QWORD PTR [rcx+0x38]
   140002f19:	call   0x14000365c
   140002f1e:	nop
   140002f1f:	jmp    0x1400015aa
   140002f24:	mov    r8,r13
   140002f27:	jmp    0x1400015c2
   140002f2c:	lea    rcx,[rbp+0xf0]
   140002f33:	call   0x1400035c0
   140002f38:	mov    rcx,QWORD PTR [rip+0x30e1]        # 0x140006020
   140002f3f:	lea    r8,[rip+0x172a]        # 0x140004670
   140002f46:	mov    edx,0x16
   140002f4b:	mov    QWORD PTR [rsp+0x20],rax
   140002f50:	xor    r9d,r9d
   140002f53:	mov    rcx,QWORD PTR [rcx+0x38]
   140002f57:	call   0x14000365c
   140002f5c:	nop
   140002f5d:	jmp    0x1400015f6
   140002f62:	mov    r9,r13
   140002f65:	jmp    0x140001617
   140002f6a:	call   QWORD PTR [rip+0x1148]        # 0x1400040b8
   140002f70:	test   eax,eax
   140002f72:	jle    0x140002f7c
   140002f74:	movzx  eax,ax
   140002f77:	or     eax,0x80070000
   140002f7c:	cmp    eax,0x800700b7
   140002f81:	je     0x140001632
   140002f87:	cmp    BYTE PTR [rip+0x36f3],0x1        # 0x140006681
   140002f8e:	jb     0x140002fbb
   140002f90:	mov    edx,0x17
   140002f95:	jmp    0x140002f9c
   140002f97:	mov    edx,0x1a
   140002f9c:	mov    rcx,QWORD PTR [rip+0x307d]        # 0x140006020
   140002fa3:	lea    r8,[rip+0x16c6]        # 0x140004670
   140002faa:	xor    r9d,r9d
   140002fad:	mov    rcx,QWORD PTR [rcx+0x38]
   140002fb1:	call   0x14000361c
   140002fb6:	jmp    0x140002fbb
   140002fb8:	mov    rsi,r12
   140002fbb:	mov    r14,QWORD PTR [rsp+0x60]
   140002fc0:	jmp    0x14000171e
   140002fc5:	mov    r8,r13
   140002fc8:	jmp    0x14000164a
   140002fcd:	lea    rcx,[rbp+0xf0]
   140002fd4:	call   0x1400035c0
   140002fd9:	mov    rcx,QWORD PTR [rip+0x3040]        # 0x140006020
   140002fe0:	lea    r8,[rip+0x1689]        # 0x140004670
   140002fe7:	mov    edx,0x18
   140002fec:	mov    QWORD PTR [rsp+0x20],rax
   140002ff1:	xor    r9d,r9d
   140002ff4:	mov    rcx,QWORD PTR [rcx+0x38]
   140002ff8:	call   0x14000365c
   140002ffd:	nop
   140002ffe:	jmp    0x14000167e
   140003003:	call   QWORD PTR [rip+0x10af]        # 0x1400040b8
   140003009:	cmp    BYTE PTR [rip+0x3671],0x1        # 0x140006681
   140003010:	jb     0x140002fbb
   140003012:	mov    edx,0x19
   140003017:	jmp    0x140002f9c
   140003019:	call   QWORD PTR [rip+0x1099]        # 0x1400040b8
   14000301f:	cmp    BYTE PTR [rip+0x365b],0x1        # 0x140006681
   140003026:	jb     0x140002fbb
   140003028:	jmp    0x140002f97
   14000302d:	mov    rcx,QWORD PTR [rip+0x2fec]        # 0x140006020
   140003034:	lea    r8,[rip+0x1635]        # 0x140004670
   14000303b:	mov    edx,0x1b
   140003040:	mov    DWORD PTR [rsp+0x20],eax
   140003044:	xor    r9d,r9d
   140003047:	mov    rcx,QWORD PTR [rcx+0x38]
   14000304b:	call   0x1400036fc
   140003050:	nop
   140003051:	jmp    0x14000171e
   140003056:	cmp    BYTE PTR [rip+0x3623],0x1        # 0x140006680
   14000305d:	jb     0x140003083
   14000305f:	mov    rcx,QWORD PTR [rip+0x2fba]        # 0x140006020
   140003066:	lea    r8,[rip+0x1603]        # 0x140004670
   14000306d:	mov    edx,0xf
   140003072:	mov    DWORD PTR [rsp+0x20],r12d
   140003077:	xor    r9d,r9d
   14000307a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000307e:	call   0x1400036fc
   140003083:	mov    rsi,QWORD PTR [rsp+0x58]
   140003088:	xor    r12d,r12d
   14000308b:	mov    r14,QWORD PTR [rsp+0x60]
   140003090:	mov    r15d,esi
   140003093:	mov    r13,QWORD PTR [rsp+0x8d0]
   14000309b:	mov    rdi,QWORD PTR [rsp+0x68]
   1400030a0:	test   rdi,rdi
   1400030a3:	je     0x1400030c4
   1400030a5:	mov    QWORD PTR [rsp+0x68],r12
   1400030aa:	mov    rax,QWORD PTR [rdi]
   1400030ad:	mov    rbx,QWORD PTR [rax+0x10]
   1400030b1:	mov    rcx,rbx
   1400030b4:	call   QWORD PTR [rip+0x1256]        # 0x140004310
   1400030ba:	mov    rcx,rdi
   1400030bd:	call   rbx
   1400030bf:	mov    rdi,QWORD PTR [rsp+0x68]
   1400030c4:	test   r15d,r15d
   1400030c7:	mov    r15,QWORD PTR [rsp+0x8c0]
   1400030cf:	jne    0x140003143
   1400030d1:	test   r14,r14
   1400030d4:	je     0x1400030de
   1400030d6:	mov    rcx,r14
   1400030d9:	call   0x140003a38
   1400030de:	call   QWORD PTR [rip+0xf6c]        # 0x140004050
   1400030e4:	call   QWORD PTR [rip+0xf7e]        # 0x140004068
   1400030ea:	test   r14,r14
   1400030ed:	je     0x140003104
   1400030ef:	mov    rax,QWORD PTR [r14]
   1400030f2:	mov    rbx,QWORD PTR [rax+0x10]
   1400030f6:	mov    rcx,rbx
   1400030f9:	call   QWORD PTR [rip+0x1211]        # 0x140004310
   1400030ff:	mov    rcx,r14
   140003102:	call   rbx
   140003104:	test   rsi,rsi
   140003107:	je     0x140003112
   140003109:	mov    rcx,rsi
   14000310c:	call   QWORD PTR [rip+0xfd6]        # 0x1400040e8
   140003112:	mov    rcx,QWORD PTR [rbp-0x80]
   140003116:	test   rcx,rcx
   140003119:	je     0x140003125
   14000311b:	call   QWORD PTR [rip+0xfc7]        # 0x1400040e8
   140003121:	mov    QWORD PTR [rbp-0x80],r12
   140003125:	mov    rcx,QWORD PTR [rbp-0x78]
   140003129:	test   rcx,rcx
   14000312c:	je     0x140003138
   14000312e:	call   QWORD PTR [rip+0xfb4]        # 0x1400040e8
   140003134:	mov    QWORD PTR [rbp-0x78],r12
   140003138:	call   QWORD PTR [rip+0xeda]        # 0x140004018
   14000313e:	mov    rdi,QWORD PTR [rsp+0x68]
   140003143:	mov    r14,QWORD PTR [rsp+0x8c8]
   14000314b:	mov    r12,QWORD PTR [rsp+0x8d8]
   140003153:	mov    rsi,QWORD PTR [rsp+0x8f8]
   14000315b:	test   rdi,rdi
   14000315e:	je     0x140003175
   140003160:	mov    rax,QWORD PTR [rdi]
   140003163:	mov    rbx,QWORD PTR [rax+0x10]
   140003167:	mov    rcx,rbx
   14000316a:	call   QWORD PTR [rip+0x11a0]        # 0x140004310
   140003170:	mov    rcx,rdi
   140003173:	call   rbx
   140003175:	cmp    QWORD PTR [rbp+0x580],0x0
   14000317d:	mov    rdi,QWORD PTR [rsp+0x900]
   140003185:	mov    rbx,QWORD PTR [rsp+0x8f0]
   14000318d:	je     0x14000319b
   14000318f:	lea    rcx,[rbp+0x570]
   140003196:	call   0x140003568
   14000319b:	cmp    QWORD PTR [rbp+0x6a0],0x0
   1400031a3:	je     0x1400031b1
   1400031a5:	lea    rcx,[rbp+0x690]
   1400031ac:	call   0x140003568
   1400031b1:	cmp    QWORD PTR [rbp+0x100],0x0
   1400031b9:	je     0x1400031c7
   1400031bb:	lea    rcx,[rbp+0xf0]
   1400031c2:	call   0x140003568
   1400031c7:	cmp    QWORD PTR [rbp+0x220],0x0
   1400031cf:	je     0x1400031dd
   1400031d1:	lea    rcx,[rbp+0x210]
   1400031d8:	call   0x140003568
   1400031dd:	cmp    QWORD PTR [rbp+0x460],0x0
   1400031e5:	je     0x1400031f3
   1400031e7:	lea    rcx,[rbp+0x450]
   1400031ee:	call   0x140003568
   1400031f3:	cmp    QWORD PTR [rbp-0x20],0x0
   1400031f8:	je     0x140003203
   1400031fa:	lea    rcx,[rbp-0x30]
   1400031fe:	call   0x140003568
   140003203:	xor    eax,eax
   140003205:	mov    rcx,QWORD PTR [rbp+0x7b0]
   14000320c:	xor    rcx,rsp
   14000320f:	call   0x140002420
   140003214:	add    rsp,0x8e0
   14000321b:	pop    rbp
   14000321c:	ret    
   14000321d:	int3   
   14000321e:	mov    DWORD PTR [rcx+0x4],0x8007006f
   140003225:	mov    eax,0x8007006f
   14000322a:	jmp    0x140001887
   14000322f:	mov    eax,DWORD PTR [rcx]
   140003231:	and    al,0x6
   140003233:	cmp    al,0x4
   140003235:	jne    0x140003243
   140003237:	mov    DWORD PTR [rcx+0x4],0x8007007a
   14000323e:	jmp    0x140003301
   140003243:	movsxd rdi,ebp
   140003246:	add    rdi,rdi
   140003249:	call   QWORD PTR [rip+0xea9]        # 0x1400040f8
   14000324f:	mov    r8,rdi
   140003252:	xor    edx,edx
   140003254:	mov    rcx,rax
   140003257:	call   QWORD PTR [rip+0xeab]        # 0x140004108
   14000325d:	mov    r12,rax
   140003260:	test   rax,rax
   140003263:	jne    0x140003279
   140003265:	xor    r8d,r8d
   140003268:	mov    DWORD PTR [r14+0x4],0x8007000e
   140003270:	mov    DWORD PTR [r14+0x8],r8d
   140003274:	jmp    0x140003301
   140003279:	mov    rdx,QWORD PTR [r14+0x10]
   14000327d:	test   rdx,rdx
   140003280:	je     0x1400032a5
   140003282:	movsxd r8,DWORD PTR [r14+0x8]
   140003286:	mov    rcx,rax
   140003289:	add    r8,r8
   14000328c:	call   0x140002bea
   140003291:	mov    edi,DWORD PTR [r14+0x8]
   140003295:	mov    rcx,r14
   140003298:	call   0x140003568
   14000329d:	and    DWORD PTR [r14],0xfffffffe
   1400032a1:	mov    DWORD PTR [r14+0x8],edi
   1400032a5:	mov    QWORD PTR [r14+0x10],r12
   1400032a9:	mov    DWORD PTR [r14+0xc],ebp
   1400032ad:	jmp    0x14000182a
   1400032b2:	movsxd rax,DWORD PTR [r14+0xc]
   1400032b6:	test   eax,eax
   1400032b8:	jle    0x1400032f2
   1400032ba:	mov    rcx,rax
   1400032bd:	mov    rax,QWORD PTR [r14+0x10]
   1400032c1:	mov    WORD PTR [rax+rcx*2-0x2],r8w
   1400032c7:	mov    rax,QWORD PTR [r14+0x10]
   1400032cb:	inc    r15
   1400032ce:	cmp    WORD PTR [rax+r15*2],r8w
   1400032d3:	jne    0x1400032cb
   1400032d5:	mov    rdx,r15
   1400032d8:	cmp    r15,0x7fffffff
   1400032df:	jbe    0x140001871
   1400032e5:	mov    DWORD PTR [r14+0x4],0x8007006f
   1400032ed:	jmp    0x140001875
   1400032f2:	mov    edx,r8d
   1400032f5:	jmp    0x140001871
   1400032fa:	mov    DWORD PTR [rcx+0x4],0x8007006f
   140003301:	mov    r8d,DWORD PTR [r14+0x4]
   140003305:	jmp    0x140001875
   14000330a:	mov    DWORD PTR [rcx+0x4],0x8007006f
   140003311:	mov    r8d,0x8007006f
   140003317:	jmp    0x140001875
   14000331c:	mov    DWORD PTR [rcx+0x4],0x8007006f
   140003323:	mov    eax,0x8007006f
   140003328:	jmp    0x14000188c
   14000332d:	int3   
   14000332e:	mov    DWORD PTR [rcx],0x80070057
   140003334:	xor    eax,eax
   140003336:	jmp    0x140001958
   14000333b:	movzx  ecx,di
   14000333e:	call   QWORD PTR [rip+0xfa4]        # 0x1400042e8
   140003344:	movzx  eax,ax
   140003347:	sub    eax,0x37
   14000334a:	jmp    0x1400018fa
   14000334f:	mov    DWORD PTR [rbx],0x80070216
   140003355:	xor    eax,eax
   140003357:	mov    QWORD PTR [rbx+0x8],rbp
   14000335b:	jmp    0x14000194e
   140003360:	mov    DWORD PTR [rbx],0x80004005
   140003366:	xor    eax,eax
   140003368:	jmp    0x14000194e
   14000336d:	int3   
   14000336e:	mov    rcx,rdi
   140003371:	call   QWORD PTR [rip+0xf99]        # 0x140004310
   140003377:	mov    rcx,rbx
   14000337a:	call   rdi
   14000337c:	nop
   14000337d:	jmp    0x1400019be
   140003382:	lea    r9,[rcx-0x10]
   140003386:	mov    QWORD PTR [rsp+0x20],rbx
   14000338b:	mov    rcx,QWORD PTR [rip+0x2c8e]        # 0x140006020
   140003392:	lea    r8,[rip+0x145f]        # 0x1400047f8
   140003399:	mov    edx,0x1a
   14000339e:	mov    rcx,QWORD PTR [rcx+0x38]
   1400033a2:	call   0x14000365c
   1400033a7:	nop
   1400033a8:	jmp    0x140001a95
   1400033ad:	cmp    BYTE PTR [rip+0x32cc],0x1        # 0x140006680
   1400033b4:	jb     0x140001aaf
   1400033ba:	mov    rcx,QWORD PTR [rip+0x2c5f]        # 0x140006020
   1400033c1:	lea    r9,[rdi-0x10]
   1400033c5:	mov    edx,0x1b
   1400033ca:	mov    DWORD PTR [rsp+0x20],eax
   1400033ce:	lea    r8,[rip+0x1423]        # 0x1400047f8
   1400033d5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400033d9:	call   0x1400036fc
   1400033de:	mov    eax,ebx
   1400033e0:	jmp    0x140001aaf
   1400033e5:	int3   
   1400033e6:	mov    rcx,rsi
   1400033e9:	call   QWORD PTR [rip+0xf21]        # 0x140004310
   1400033ef:	mov    rcx,rdi
   1400033f2:	call   rsi
   1400033f4:	nop
   1400033f5:	jmp    0x140001b12
   1400033fa:	mov    eax,0x80070057
   1400033ff:	jmp    0x140001c03
   140003404:	mov    QWORD PTR [r8],rcx
   140003407:	jmp    0x140001c1e
   14000340c:	mov    rcx,rdi
   14000340f:	call   QWORD PTR [rip+0xefb]        # 0x140004310
   140003415:	mov    rcx,rsi
   140003418:	call   rdi
   14000341a:	nop
   14000341b:	jmp    0x140001bfc
   140003420:	test   rcx,rcx
   140003423:	je     0x140001cde
   140003429:	mov    rax,QWORD PTR [rcx]
   14000342c:	mov    QWORD PTR [rsp+0x30],rdi
   140003431:	mov    rdi,QWORD PTR [rax+0x28]
   140003435:	mov    rcx,rdi
   140003438:	call   QWORD PTR [rip+0xed2]        # 0x140004310
   14000343e:	mov    edx,0x1
   140003443:	mov    rcx,rsi
   140003446:	call   rdi
   140003448:	mov    rdi,QWORD PTR [rsp+0x30]
   14000344d:	jmp    0x140001cde
   140003452:	mov    r9,rcx
   140003455:	lea    r8,[rip+0x139c]        # 0x1400047f8
   14000345c:	mov    rcx,QWORD PTR [rip+0x2bbd]        # 0x140006020
   140003463:	mov    edx,0x10
   140003468:	mov    rcx,QWORD PTR [rcx+0x38]
   14000346c:	call   0x14000361c
   140003471:	nop
   140003472:	jmp    0x140001d56
   140003477:	mov    rbx,r14
   14000347a:	jmp    0x140001d74
   14000347f:	mov    edi,0x8007000e
   140003484:	jmp    0x140001e3c
   140003489:	mov    rcx,rdi
   14000348c:	call   QWORD PTR [rip+0xe7e]        # 0x140004310
   140003492:	mov    rcx,rbx
   140003495:	call   rdi
   140003497:	nop
   140003498:	jmp    0x140001da5
   14000349d:	cmp    BYTE PTR [rip+0x31dc],0x1        # 0x140006680
   1400034a4:	jb     0x140001e3c
   1400034aa:	mov    edx,0x11
   1400034af:	jmp    0x140003511
   1400034b1:	cmp    BYTE PTR [rip+0x31c8],0x1        # 0x140006680
   1400034b8:	jb     0x140001e3c
   1400034be:	mov    edx,0x12
   1400034c3:	jmp    0x140003511
   1400034c5:	cmp    BYTE PTR [rip+0x31b4],0x1        # 0x140006680
   1400034cc:	jb     0x140001e3c
   1400034d2:	mov    edx,0x13
   1400034d7:	jmp    0x140003511
   1400034d9:	cmp    BYTE PTR [rip+0x31a0],0x1        # 0x140006680
   1400034e0:	jb     0x140001e3c
   1400034e6:	mov    edx,0x14
   1400034eb:	jmp    0x140003511
   1400034ed:	mov    rcx,rbp
   1400034f0:	call   0x140003898
   1400034f5:	mov    edi,eax
   1400034f7:	test   eax,eax
   1400034f9:	jns    0x140001e3c
   1400034ff:	cmp    BYTE PTR [rip+0x317a],0x1        # 0x140006680
   140003506:	jb     0x140001e3c
   14000350c:	mov    edx,0x15
   140003511:	mov    rcx,QWORD PTR [rip+0x2b08]        # 0x140006020
   140003518:	lea    r8,[rip+0x12d9]        # 0x1400047f8
   14000351f:	mov    r9,rbp
   140003522:	mov    DWORD PTR [rsp+0x20],eax
   140003526:	mov    rcx,QWORD PTR [rcx+0x10]
   14000352a:	call   0x1400036fc
   14000352f:	nop
   140003530:	jmp    0x140001e3c
   140003535:	int3   
   140003536:	mov    rcx,QWORD PTR [rip+0x2ae3]        # 0x140006020
   14000353d:	lea    r8,[rip+0x12b4]        # 0x1400047f8
   140003544:	mov    edx,0xa
   140003549:	mov    DWORD PTR [rsp+0x20],eax
   14000354d:	mov    r9,rdi
   140003550:	mov    rcx,QWORD PTR [rcx+0x38]
   140003554:	call   0x1400036fc
   140003559:	nop
   14000355a:	jmp    0x140001f5a
   14000355f:	int3   
   140003560:	int3   
   140003561:	int3   
   140003562:	int3   
   140003563:	int3   
   140003564:	int3   
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	rex push rbx
   14000356a:	sub    rsp,0x20
   14000356e:	mov    eax,DWORD PTR [rcx]
   140003570:	mov    rbx,rcx
   140003573:	test   al,0x1
   140003575:	jne    0x1400035b1
   140003577:	shr    eax,1
   140003579:	and    eax,0x3
   14000357c:	jne    0x140003595
   14000357e:	call   QWORD PTR [rip+0xb74]        # 0x1400040f8
   140003584:	mov    r8,QWORD PTR [rbx+0x10]
   140003588:	xor    edx,edx
   14000358a:	mov    rcx,rax
   14000358d:	call   QWORD PTR [rip+0xb6d]        # 0x140004100
   140003593:	jmp    0x1400035a4
   140003595:	cmp    eax,0x1
   140003598:	jne    0x1400035a4
   14000359a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000359e:	call   QWORD PTR [rip+0xab4]        # 0x140004058
   1400035a4:	and    DWORD PTR [rbx],0xfffffff9
   1400035a7:	xor    eax,eax
   1400035a9:	mov    QWORD PTR [rbx+0x10],rax
   1400035ad:	mov    QWORD PTR [rbx+0x8],rax
   1400035b1:	add    rsp,0x20
   1400035b5:	pop    rbx
   1400035b6:	ret    
   1400035b7:	int3   
   1400035b8:	int3   
   1400035b9:	int3   
   1400035ba:	int3   
   1400035bb:	int3   
   1400035bc:	int3   
   1400035bd:	int3   
   1400035be:	int3   
   1400035bf:	int3   
   1400035c0:	cmp    DWORD PTR [rcx+0x4],0x0
   1400035c4:	jl     0x1400035d1
   1400035c6:	cmp    DWORD PTR [rcx+0x8],0x0
   1400035ca:	je     0x1400035d1
   1400035cc:	mov    rax,QWORD PTR [rcx+0x10]
   1400035d0:	ret    
   1400035d1:	lea    rax,[rip+0x10a8]        # 0x140004680
   1400035d8:	ret    
   1400035d9:	int3   
   1400035da:	int3   
   1400035db:	int3   
   1400035dc:	int3   
   1400035dd:	int3   
   1400035de:	int3   
   1400035df:	int3   
   1400035e0:	rex push rdi
   1400035e2:	sub    rsp,0x20
   1400035e6:	mov    rdi,QWORD PTR [rcx]
   1400035e9:	test   rdi,rdi
   1400035ec:	je     0x14000360d
   1400035ee:	mov    rax,QWORD PTR [rdi]
   1400035f1:	mov    QWORD PTR [rsp+0x30],rbx
   1400035f6:	mov    rbx,QWORD PTR [rax+0x10]
   1400035fa:	mov    rcx,rbx
   1400035fd:	call   QWORD PTR [rip+0xd0d]        # 0x140004310
   140003603:	mov    rcx,rdi
   140003606:	call   rbx
   140003608:	mov    rbx,QWORD PTR [rsp+0x30]
   14000360d:	add    rsp,0x20
   140003611:	pop    rdi
   140003612:	ret    
   140003613:	int3   
   140003614:	int3   
   140003615:	int3   
   140003616:	int3   
   140003617:	int3   
   140003618:	int3   
   140003619:	int3   
   14000361a:	int3   
   14000361b:	int3   
   14000361c:	mov    QWORD PTR [rsp+0x20],r9
   140003621:	sub    rsp,0x48
   140003625:	mov    QWORD PTR [rsp+0x30],0x0
   14000362e:	lea    rax,[rsp+0x68]
   140003633:	movzx  r9d,dx
   140003637:	mov    edx,0x2b
   14000363c:	mov    QWORD PTR [rsp+0x28],0x8
   140003645:	mov    QWORD PTR [rsp+0x20],rax
   14000364a:	call   QWORD PTR [rip+0xc00]        # 0x140004250
   140003650:	add    rsp,0x48
   140003654:	ret    
   140003655:	int3   
   140003656:	int3   
   140003657:	int3   
   140003658:	int3   
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	mov    QWORD PTR [rsp+0x20],r9
   140003661:	sub    rsp,0x58
   140003665:	mov    r9,QWORD PTR [rsp+0x80]
   14000366d:	test   r9,r9
   140003670:	je     0x1400036ae
   140003672:	movzx  r11d,WORD PTR [r9]
   140003676:	test   r11w,r11w
   14000367a:	jne    0x140003684
   14000367c:	mov    r10d,0xe
   140003682:	jmp    0x14000369d
   140003684:	or     r10,0xffffffffffffffff
   140003688:	cmp    WORD PTR [r9+r10*2+0x2],0x0
   14000368f:	lea    r10,[r10+0x1]
   140003693:	jne    0x140003688
   140003695:	lea    r10,[r10*2+0x2]
   14000369d:	test   r11w,r11w
   1400036a1:	lea    rax,[rip+0x1140]        # 0x1400047e8
   1400036a8:	cmovne rax,r9
   1400036ac:	jmp    0x1400036bb
   1400036ae:	mov    r10d,0xa
   1400036b4:	lea    rax,[rip+0x111d]        # 0x1400047d8
   1400036bb:	mov    QWORD PTR [rsp+0x40],0x0
   1400036c4:	mov    QWORD PTR [rsp+0x38],r10
   1400036c9:	mov    QWORD PTR [rsp+0x30],rax
   1400036ce:	lea    rax,[rsp+0x78]
   1400036d3:	movzx  r9d,dx
   1400036d7:	mov    edx,0x2b
   1400036dc:	mov    QWORD PTR [rsp+0x28],0x8
   1400036e5:	mov    QWORD PTR [rsp+0x20],rax
   1400036ea:	call   QWORD PTR [rip+0xb60]        # 0x140004250
   1400036f0:	add    rsp,0x58
   1400036f4:	ret    
   1400036f5:	int3   
   1400036f6:	int3   
   1400036f7:	int3   
   1400036f8:	int3   
   1400036f9:	int3   
   1400036fa:	int3   
   1400036fb:	int3   
   1400036fc:	mov    r11,rsp
   1400036ff:	mov    QWORD PTR [r11+0x20],r9
   140003703:	sub    rsp,0x58
   140003707:	mov    QWORD PTR [r11-0x18],0x0
   14000370f:	lea    rax,[r11+0x28]
   140003713:	mov    QWORD PTR [r11-0x20],0x4
   14000371b:	mov    QWORD PTR [r11-0x28],rax
   14000371f:	lea    rax,[r11+0x20]
   140003723:	movzx  r9d,dx
   140003727:	mov    edx,0x2b
   14000372c:	mov    QWORD PTR [r11-0x30],0x8
   140003734:	mov    QWORD PTR [r11-0x38],rax
   140003738:	call   QWORD PTR [rip+0xb12]        # 0x140004250
   14000373e:	add    rsp,0x58
   140003742:	ret    
   140003743:	int3   
   140003744:	int3   
   140003745:	int3   
   140003746:	int3   
   140003747:	int3   
   140003748:	int3   
   140003749:	int3   
   14000374a:	int3   
   14000374b:	int3   
   14000374c:	mov    QWORD PTR [rsp+0x8],rbx
   140003751:	mov    QWORD PTR [rsp+0x10],rsi
   140003756:	push   rdi
   140003757:	sub    rsp,0x20
   14000375b:	mov    rsi,QWORD PTR [rcx+0x50]
   14000375f:	lea    rax,[rip+0xdd2]        # 0x140004538
   140003766:	mov    QWORD PTR [rcx],rax
   140003769:	lea    rax,[rip+0xd98]        # 0x140004508
   140003770:	mov    QWORD PTR [rcx+0x8],rax
   140003774:	lea    rax,[rip+0xd65]        # 0x1400044e0
   14000377b:	mov    QWORD PTR [rcx+0x10],rax
   14000377f:	mov    rdi,rcx
   140003782:	test   rsi,rsi
   140003785:	je     0x1400037a4
   140003787:	mov    rax,QWORD PTR [rsi]
   14000378a:	mov    rbx,QWORD PTR [rax+0x10]
   14000378e:	mov    rcx,rbx
   140003791:	call   QWORD PTR [rip+0xb79]        # 0x140004310
   140003797:	mov    rcx,rsi
   14000379a:	call   rbx
   14000379c:	mov    QWORD PTR [rdi+0x50],0x0
   1400037a4:	lea    rdx,[rip+0x2e7d]        # 0x140006628
   1400037ab:	xor    eax,eax
   1400037ad:	mov    rcx,rdx
   1400037b0:	cmp    QWORD PTR [rcx],rdi
   1400037b3:	je     0x1400037c2
   1400037b5:	inc    eax
   1400037b7:	add    rcx,0x8
   1400037bb:	cmp    eax,0x4
   1400037be:	jb     0x1400037b0
   1400037c0:	jmp    0x1400037ca
   1400037c2:	mov    QWORD PTR [rdx+rax*8],0x0
   1400037ca:	mov    rsi,QWORD PTR [rdi+0x48]
   1400037ce:	test   rsi,rsi
   1400037d1:	je     0x1400037f0
   1400037d3:	mov    rax,QWORD PTR [rsi]
   1400037d6:	mov    rbx,QWORD PTR [rax+0x10]
   1400037da:	mov    rcx,rbx
   1400037dd:	call   QWORD PTR [rip+0xb2d]        # 0x140004310
   1400037e3:	mov    rcx,rsi
   1400037e6:	call   rbx
   1400037e8:	mov    QWORD PTR [rdi+0x48],0x0
   1400037f0:	lea    rcx,[rdi+0x20]
   1400037f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037f9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400037fe:	add    rsp,0x20
   140003802:	pop    rdi
   140003803:	rex.W jmp QWORD PTR [rip+0x9d6]        # 0x1400041e0
   14000380a:	int3   
   14000380b:	int3   
   14000380c:	int3   
   14000380d:	int3   
   14000380e:	int3   
   14000380f:	int3   
   140003810:	mov    QWORD PTR [rsp+0x8],rbx
   140003815:	push   rdi
   140003816:	sub    rsp,0x20
   14000381a:	mov    ebx,edx
   14000381c:	mov    rdi,rcx
   14000381f:	call   0x14000374c
   140003824:	test   bl,0x1
   140003827:	je     0x140003831
   140003829:	mov    rcx,rdi
   14000382c:	call   0x140001fe8
   140003831:	mov    rax,rdi
   140003834:	mov    rbx,QWORD PTR [rsp+0x30]
   140003839:	add    rsp,0x20
   14000383d:	pop    rdi
   14000383e:	ret    
   14000383f:	int3   
   140003840:	int3   
   140003841:	int3   
   140003842:	int3   
   140003843:	int3   
   140003844:	int3   
   140003845:	int3   
   140003846:	int3   
   140003847:	int3   
   140003848:	int3   
   140003849:	int3   
   14000384a:	int3   
   14000384b:	int3   
   14000384c:	int3   
   14000384d:	int3   
   14000384e:	int3   
   14000384f:	int3   
   140003850:	sub    rsp,0x38
   140003854:	mov    rcx,rdx
   140003857:	mov    QWORD PTR [rsp+0x20],r9
   14000385c:	xor    edx,edx
   14000385e:	mov    r9,r8
   140003861:	lea    r8d,[rdx+0x1]
   140003865:	call   QWORD PTR [rip+0x81d]        # 0x140004088
   14000386b:	add    rsp,0x38
   14000386f:	ret    
   140003870:	int3   
   140003871:	int3   
   140003872:	int3   
   140003873:	int3   
   140003874:	int3   
   140003875:	int3   
   140003876:	int3   
   140003877:	int3   
   140003878:	int3   
   140003879:	int3   
   14000387a:	int3   
   14000387b:	int3   
   14000387c:	int3   
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	mov    eax,0x80004002
   140003885:	test   r8,r8
   140003888:	je     0x140003891
   14000388a:	mov    QWORD PTR [r8],0x0
   140003891:	ret    
   140003892:	int3   
   140003893:	int3   
   140003894:	int3   
   140003895:	int3   
   140003896:	int3   
   140003897:	int3   
   140003898:	mov    QWORD PTR [rsp+0x18],rbx
   14000389d:	mov    QWORD PTR [rsp+0x20],rsi
   1400038a2:	push   rdi
   1400038a3:	sub    rsp,0x60
   1400038a7:	mov    rax,QWORD PTR [rip+0x275a]        # 0x140006008
   1400038ae:	xor    rax,rsp
   1400038b1:	mov    QWORD PTR [rsp+0x50],rax
   1400038b6:	mov    rsi,rdx
   1400038b9:	mov    rdi,rcx
   1400038bc:	or     rbx,0xffffffffffffffff
   1400038c0:	inc    rbx
   1400038c3:	cmp    WORD PTR [rdx+rbx*2],0x0
   1400038c8:	jne    0x1400038c0
   1400038ca:	mov    eax,0xffffffff
   1400038cf:	cmp    rbx,rax
   1400038d2:	jbe    0x1400038eb
   1400038d4:	xor    r9d,r9d
   1400038d7:	xor    r8d,r8d
   1400038da:	mov    ecx,0xc000000d
   1400038df:	mov    ebx,eax
   1400038e1:	lea    edx,[r9+0x1]
   1400038e5:	call   QWORD PTR [rip+0x7d5]        # 0x1400040c0
   1400038eb:	lea    r9,[rsp+0x30]
   1400038f0:	mov    edx,ebx
   1400038f2:	lea    r8,[rsp+0x38]
   1400038f7:	mov    rcx,rsi
   1400038fa:	call   QWORD PTR [rip+0x940]        # 0x140004240
   140003900:	mov    rcx,QWORD PTR [rsp+0x30]
   140003905:	lea    r8,[rdi+0x60]
   140003909:	mov    rdx,rdi
   14000390c:	call   QWORD PTR [rip+0x46ee]        # 0x140008000
   140003912:	mov    ebx,eax
   140003914:	test   eax,eax
   140003916:	jns    0x140003946
   140003918:	cmp    BYTE PTR [rip+0x2d61],0x1        # 0x140006680
   14000391f:	jb     0x140003946
   140003921:	mov    rcx,QWORD PTR [rip+0x26f8]        # 0x140006020
   140003928:	lea    r8,[rip+0xec9]        # 0x1400047f8
   14000392f:	mov    edx,0xe
   140003934:	mov    DWORD PTR [rsp+0x20],eax
   140003938:	mov    r9,rdi
   14000393b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000393f:	call   0x1400036fc
   140003944:	mov    eax,ebx
   140003946:	mov    rcx,QWORD PTR [rsp+0x50]
   14000394b:	xor    rcx,rsp
   14000394e:	call   0x140002420
   140003953:	lea    r11,[rsp+0x60]
   140003958:	mov    rbx,QWORD PTR [r11+0x20]
   14000395c:	mov    rsi,QWORD PTR [r11+0x28]
   140003960:	mov    rsp,r11
   140003963:	pop    rdi
   140003964:	ret    
   140003965:	int3   
   140003966:	int3   
   140003967:	int3   
   140003968:	int3   
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    QWORD PTR [rsp+0x8],rbx
   140003975:	push   rdi
   140003976:	sub    rsp,0x20
   14000397a:	mov    rdi,rcx
   14000397d:	or     ebx,0xffffffff
   140003980:	lock xadd DWORD PTR [rcx+0x8],ebx
   140003985:	sub    ebx,0x1
   140003988:	jne    0x1400039ba
   14000398a:	test   rcx,rcx
   14000398d:	je     0x1400039ba
   14000398f:	lea    rax,[rip+0xbd2]        # 0x140004568
   140003996:	mov    QWORD PTR [rcx],rax
   140003999:	mov    rcx,QWORD PTR [rcx+0x40]
   14000399d:	test   rcx,rcx
   1400039a0:	je     0x1400039a8
   1400039a2:	call   QWORD PTR [rip+0x740]        # 0x1400040e8
   1400039a8:	lea    rcx,[rdi+0x10]
   1400039ac:	call   QWORD PTR [rip+0x82e]        # 0x1400041e0
   1400039b2:	mov    rcx,rdi
   1400039b5:	call   0x140001fe8
   1400039ba:	mov    eax,ebx
   1400039bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039c1:	add    rsp,0x20
   1400039c5:	pop    rdi
   1400039c6:	ret    
   1400039c7:	int3   
   1400039c8:	int3   
   1400039c9:	int3   
   1400039ca:	int3   
   1400039cb:	int3   
   1400039cc:	int3   
   1400039cd:	int3   
   1400039ce:	int3   
   1400039cf:	int3   
   1400039d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400039d5:	push   rdi
   1400039d6:	sub    rsp,0x30
   1400039da:	mov    rdi,rcx
   1400039dd:	mov    rcx,QWORD PTR [rcx+0x60]
   1400039e1:	call   QWORD PTR [rip+0x4621]        # 0x140008008
   1400039e7:	mov    ebx,eax
   1400039e9:	test   eax,eax
   1400039eb:	jns    0x140003a1d
   1400039ed:	cmp    BYTE PTR [rip+0x2c8c],0x1        # 0x140006680
   1400039f4:	jb     0x140003a25
   1400039f6:	mov    rcx,QWORD PTR [rip+0x2623]        # 0x140006020
   1400039fd:	lea    r8,[rip+0xdf4]        # 0x1400047f8
   140003a04:	mov    edx,0xf
   140003a09:	mov    DWORD PTR [rsp+0x20],eax
   140003a0d:	mov    r9,rdi
   140003a10:	mov    rcx,QWORD PTR [rcx+0x10]
   140003a14:	call   0x1400036fc
   140003a19:	mov    eax,ebx
   140003a1b:	jmp    0x140003a25
   140003a1d:	mov    QWORD PTR [rdi+0x60],0x0
   140003a25:	mov    rbx,QWORD PTR [rsp+0x40]
   140003a2a:	add    rsp,0x30
   140003a2e:	pop    rdi
   140003a2f:	ret    
   140003a30:	int3   
   140003a31:	int3   
   140003a32:	int3   
   140003a33:	int3   
   140003a34:	int3   
   140003a35:	int3   
   140003a36:	int3   
   140003a37:	int3   
   140003a38:	rex push rsi
   140003a3a:	sub    rsp,0x30
   140003a3e:	mov    rsi,rcx
   140003a41:	mov    QWORD PTR [rsp+0x40],0x0
   140003a4a:	cmp    BYTE PTR [rip+0x2c30],0x8        # 0x140006681
   140003a51:	jb     0x140003a72
   140003a53:	mov    r9,rcx
   140003a56:	lea    r8,[rip+0xd9b]        # 0x1400047f8
   140003a5d:	mov    rcx,QWORD PTR [rip+0x25bc]        # 0x140006020
   140003a64:	mov    edx,0x16
   140003a69:	mov    rcx,QWORD PTR [rcx+0x38]
   140003a6d:	call   0x14000361c
   140003a72:	mov    rcx,QWORD PTR [rsi+0x50]
   140003a76:	mov    QWORD PTR [rsp+0x48],rbx
   140003a7b:	mov    QWORD PTR [rsp+0x50],rdi
   140003a80:	test   rcx,rcx
   140003a83:	je     0x140003aab
   140003a85:	call   0x140003c34
   140003a8a:	mov    rdi,QWORD PTR [rsi+0x50]
   140003a8e:	mov    rax,QWORD PTR [rdi]
   140003a91:	mov    rbx,QWORD PTR [rax+0x10]
   140003a95:	mov    rcx,rbx
   140003a98:	call   QWORD PTR [rip+0x872]        # 0x140004310
   140003a9e:	mov    rcx,rdi
   140003aa1:	call   rbx
   140003aa3:	mov    QWORD PTR [rsi+0x50],0x0
   140003aab:	call   0x140002a00
   140003ab0:	test   al,al
   140003ab2:	je     0x140003b06
   140003ab4:	lea    rdx,[rsp+0x40]
   140003ab9:	xor    ecx,ecx
   140003abb:	call   QWORD PTR [rip+0x455f]        # 0x140008020
   140003ac1:	test   eax,eax
   140003ac3:	jns    0x140003ad5
   140003ac5:	cmp    BYTE PTR [rip+0x2bb4],0x1        # 0x140006680
   140003acc:	jb     0x140003b3e
   140003ace:	mov    edx,0x17
   140003ad3:	jmp    0x140003b20
   140003ad5:	mov    rbx,QWORD PTR [rsp+0x40]
   140003ada:	mov    rax,QWORD PTR [rbx]
   140003add:	mov    rdi,QWORD PTR [rax+0x20]
   140003ae1:	mov    rcx,rdi
   140003ae4:	call   QWORD PTR [rip+0x826]        # 0x140004310
   140003aea:	mov    edx,DWORD PTR [rsi+0x58]
   140003aed:	mov    rcx,rbx
   140003af0:	call   rdi
   140003af2:	test   eax,eax
   140003af4:	jns    0x140003b3e
   140003af6:	cmp    BYTE PTR [rip+0x2b83],0x1        # 0x140006680
   140003afd:	jb     0x140003b3e
   140003aff:	mov    edx,0x18
   140003b04:	jmp    0x140003b20
   140003b06:	mov    rcx,rsi
   140003b09:	call   0x1400039d0
   140003b0e:	test   eax,eax
   140003b10:	jns    0x140003b3e
   140003b12:	cmp    BYTE PTR [rip+0x2b67],0x1        # 0x140006680
   140003b19:	jb     0x140003b3e
   140003b1b:	mov    edx,0x19
   140003b20:	mov    rcx,QWORD PTR [rip+0x24f9]        # 0x140006020
   140003b27:	lea    r8,[rip+0xcca]        # 0x1400047f8
   140003b2e:	mov    r9,rsi
   140003b31:	mov    DWORD PTR [rsp+0x20],eax
   140003b35:	mov    rcx,QWORD PTR [rcx+0x10]
   140003b39:	call   0x1400036fc
   140003b3e:	lea    rcx,[rsp+0x40]
   140003b43:	call   0x1400035e0
   140003b48:	mov    rdi,QWORD PTR [rsp+0x50]
   140003b4d:	mov    rbx,QWORD PTR [rsp+0x48]
   140003b52:	add    rsp,0x30
   140003b56:	pop    rsi
   140003b57:	ret    
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	mov    QWORD PTR [rsp+0x8],rbx
   140003b65:	mov    QWORD PTR [rsp+0x10],rsi
   140003b6a:	push   rdi
   140003b6b:	sub    rsp,0x20
   140003b6f:	lea    rbx,[rcx+0x18]
   140003b73:	mov    rdi,rcx
   140003b76:	mov    rcx,rbx
   140003b79:	call   QWORD PTR [rip+0x651]        # 0x1400041d0
   140003b7f:	mov    rsi,QWORD PTR [rdi+0x48]
   140003b83:	mov    rax,QWORD PTR [rsi]
   140003b86:	mov    rdi,QWORD PTR [rax+0x20]
   140003b8a:	mov    rcx,rdi
   140003b8d:	call   QWORD PTR [rip+0x77d]        # 0x140004310
   140003b93:	mov    rcx,rsi
   140003b96:	call   rdi
   140003b98:	mov    rcx,rbx
   140003b9b:	call   QWORD PTR [rip+0x627]        # 0x1400041c8
   140003ba1:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ba6:	xor    eax,eax
   140003ba8:	mov    rsi,QWORD PTR [rsp+0x38]
   140003bad:	add    rsp,0x20
   140003bb1:	pop    rdi
   140003bb2:	ret    
   140003bb3:	int3   
   140003bb4:	int3   
   140003bb5:	int3   
   140003bb6:	int3   
   140003bb7:	int3   
   140003bb8:	int3   
   140003bb9:	int3   
   140003bba:	int3   
   140003bbb:	int3   
   140003bbc:	int3   
   140003bbd:	int3   
   140003bbe:	int3   
   140003bbf:	int3   
   140003bc0:	mov    QWORD PTR [rsp+0x8],rbx
   140003bc5:	push   rdi
   140003bc6:	sub    rsp,0x30
   140003bca:	mov    rdi,rcx
   140003bcd:	add    rcx,0x10
   140003bd1:	call   QWORD PTR [rip+0x5f9]        # 0x1400041d0
   140003bd7:	sub    DWORD PTR [rdi+0x38],0x1
   140003bdb:	jne    0x140003be7
   140003bdd:	mov    rcx,QWORD PTR [rdi+0x40]
   140003be1:	call   QWORD PTR [rip+0x5c9]        # 0x1400041b0
   140003be7:	cmp    BYTE PTR [rip+0x2a93],0x8        # 0x140006681
   140003bee:	jb     0x140003c16
   140003bf0:	mov    rcx,QWORD PTR [rip+0x2429]        # 0x140006020
   140003bf7:	lea    r8,[rip+0xbfa]        # 0x1400047f8
   140003bfe:	mov    eax,DWORD PTR [rdi+0x38]
   140003c01:	mov    edx,0xb
   140003c06:	mov    r9,rdi
   140003c09:	mov    DWORD PTR [rsp+0x20],eax
   140003c0d:	mov    rcx,QWORD PTR [rcx+0x38]
   140003c11:	call   0x1400036fc
   140003c16:	lea    rcx,[rdi+0x10]
   140003c1a:	call   QWORD PTR [rip+0x5a8]        # 0x1400041c8
   140003c20:	mov    rbx,QWORD PTR [rsp+0x40]
   140003c25:	xor    eax,eax
   140003c27:	add    rsp,0x30
   140003c2b:	pop    rdi
   140003c2c:	ret    
   140003c2d:	int3   
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	int3   
   140003c31:	int3   
   140003c32:	int3   
   140003c33:	int3   
   140003c34:	rex push rbx
   140003c36:	sub    rsp,0x30
   140003c3a:	mov    rbx,rcx
   140003c3d:	cmp    BYTE PTR [rip+0x2a3d],0x8        # 0x140006681
   140003c44:	jb     0x140003c6d
   140003c46:	mov    r9,rcx
   140003c49:	mov    DWORD PTR [rsp+0x20],0xbb8
   140003c51:	mov    rcx,QWORD PTR [rip+0x23c8]        # 0x140006020
   140003c58:	lea    r8,[rip+0xb99]        # 0x1400047f8
   140003c5f:	mov    edx,0xc
   140003c64:	mov    rcx,QWORD PTR [rcx+0x38]
   140003c68:	call   0x1400036fc
   140003c6d:	mov    rcx,QWORD PTR [rbx+0x40]
   140003c71:	mov    edx,0xbb8
   140003c76:	call   QWORD PTR [rip+0x574]        # 0x1400041f0
   140003c7c:	cmp    BYTE PTR [rip+0x29fe],0x8        # 0x140006681
   140003c83:	jb     0x140003ca8
   140003c85:	mov    rcx,QWORD PTR [rip+0x2394]        # 0x140006020
   140003c8c:	lea    r8,[rip+0xb65]        # 0x1400047f8
   140003c93:	mov    edx,0xd
   140003c98:	mov    DWORD PTR [rsp+0x20],eax
   140003c9c:	mov    r9,rbx
   140003c9f:	mov    rcx,QWORD PTR [rcx+0x38]
   140003ca3:	call   0x1400036fc
   140003ca8:	xor    eax,eax
   140003caa:	add    rsp,0x30
   140003cae:	pop    rbx
   140003caf:	ret    

Disassembly of section .rdata:

0000000140004000 <.rdata>:
   140004000:	ficomp WORD PTR [rbp+0x0]
	...
   14000400f:	add    BYTE PTR [rdx],cl
   140004011:	pop    rsi
   140004012:	add    BYTE PTR [rax],al
   140004014:	add    BYTE PTR [rax],al
   140004016:	add    BYTE PTR [rax],al
   140004018:	cld    
   140004019:	pop    rbp
	...
   140004026:	add    BYTE PTR [rax],al
   140004028:	movabs al,ds:0x5d
   140004031:	add    BYTE PTR [rax],al
   140004033:	add    BYTE PTR [rax],al
   140004035:	add    BYTE PTR [rax],al
   140004037:	add    BYTE PTR [rax+0x5e],bh
	...
   140004046:	add    BYTE PTR [rax],al
   140004048:	movabs ds:0xdc00000000000058,al
   140004051:	pop    rax
   140004052:	add    BYTE PTR [rax],al
   140004054:	add    BYTE PTR [rax],al
   140004056:	add    BYTE PTR [rax],al
   140004058:	hlt    
   140004059:	pop    rax
   14000405a:	add    BYTE PTR [rax],al
   14000405c:	add    BYTE PTR [rax],al
   14000405e:	add    BYTE PTR [rax],al
   140004060:	adc    al,0x59
   140004062:	add    BYTE PTR [rax],al
   140004064:	add    BYTE PTR [rax],al
   140004066:	add    BYTE PTR [rax],al
   140004068:	rcl    BYTE PTR [rdi+0x0],cl
   14000406b:	add    BYTE PTR [rax],al
   14000406d:	add    BYTE PTR [rax],al
   14000406f:	add    BYTE PTR [rdx],bh
   140004071:	pop    rcx
   140004072:	add    BYTE PTR [rax],al
   140004074:	add    BYTE PTR [rax],al
   140004076:	add    BYTE PTR [rax],al
   140004078:	js     0x1400040d3
   14000407a:	add    BYTE PTR [rax],al
   14000407c:	add    BYTE PTR [rax],al
   14000407e:	add    BYTE PTR [rax],al
   140004080:	lods   al,BYTE PTR ds:[rsi]
   140004081:	pop    rcx
   140004082:	add    BYTE PTR [rax],al
   140004084:	add    BYTE PTR [rax],al
   140004086:	add    BYTE PTR [rax],al
   140004088:	cwde   
   140004089:	pop    rcx
	...
   140004096:	add    BYTE PTR [rax],al
   140004098:	cmp    bl,BYTE PTR [rsi+0x0]
   14000409b:	add    BYTE PTR [rax],al
   14000409d:	add    BYTE PTR [rax],al
   14000409f:	add    BYTE PTR [rdx],ah
   1400040a1:	pop    rsi
	...
   1400040ae:	add    BYTE PTR [rax],al
   1400040b0:	(bad)  
   1400040b1:	pop    rdx
   1400040b2:	add    BYTE PTR [rax],al
   1400040b4:	add    BYTE PTR [rax],al
   1400040b6:	add    BYTE PTR [rax],al
   1400040b8:	int3   
   1400040b9:	pop    rax
   1400040ba:	add    BYTE PTR [rax],al
   1400040bc:	add    BYTE PTR [rax],al
   1400040be:	add    BYTE PTR [rax],al
   1400040c0:	mov    edx,0x58
   1400040c5:	add    BYTE PTR [rax],al
   1400040c7:	add    BYTE PTR [rdx+0x59],bl
   1400040ca:	add    BYTE PTR [rax],al
   1400040cc:	add    BYTE PTR [rax],al
   1400040ce:	add    BYTE PTR [rax],al
   1400040d0:	rex.R pop rbx
   1400040d2:	add    BYTE PTR [rax],al
   1400040d4:	add    BYTE PTR [rax],al
   1400040d6:	add    BYTE PTR [rax],al
   1400040d8:	mov    dh,0x57
	...
   1400040e6:	add    BYTE PTR [rax],al
   1400040e8:	push   0x59
	...
   1400040f6:	add    BYTE PTR [rax],al
   1400040f8:	rex.WR pop rax
   1400040fa:	add    BYTE PTR [rax],al
   1400040fc:	add    BYTE PTR [rax],al
   1400040fe:	add    BYTE PTR [rax],al
   140004100:	(bad)  
   140004101:	push   rdi
   140004102:	add    BYTE PTR [rax],al
   140004104:	add    BYTE PTR [rax],al
   140004106:	add    BYTE PTR [rax],al
   140004108:	(bad)  
   140004109:	push   rdi
   14000410a:	add    BYTE PTR [rax],al
   14000410c:	add    BYTE PTR [rax],al
   14000410e:	add    BYTE PTR [rax],al
   140004110:	and    al,0x59
	...
   14000411e:	add    BYTE PTR [rax],al
   140004120:	jle    0x14000417c
	...
   14000412e:	add    BYTE PTR [rax],al
   140004130:	xchg   esp,eax
   140004131:	push   rdi
   140004132:	add    BYTE PTR [rax],al
   140004134:	add    BYTE PTR [rax],al
   140004136:	add    BYTE PTR [rax],al
   140004138:	in     al,0x57
	...
   140004146:	add    BYTE PTR [rax],al
   140004148:	xchg   esp,eax
   140004149:	pop    rax
   14000414a:	add    BYTE PTR [rax],al
   14000414c:	add    BYTE PTR [rax],al
   14000414e:	add    BYTE PTR [rax],al
   140004150:	(bad)  
   140004151:	pop    rbx
   140004152:	add    BYTE PTR [rax],al
   140004154:	add    BYTE PTR [rax],al
   140004156:	add    BYTE PTR [rax],al
   140004158:	ret    0x5a
   14000415b:	add    BYTE PTR [rax],al
   14000415d:	add    BYTE PTR [rax],al
   14000415f:	add    BYTE PTR [rdx+rbx*2+0x0],ch
   140004166:	add    BYTE PTR [rax],al
   140004168:	rex.WRX pop rdx
   14000416a:	add    BYTE PTR [rax],al
   14000416c:	add    BYTE PTR [rax],al
   14000416e:	add    BYTE PTR [rax],al
   140004170:	je     0x1400041cd
	...
   14000417e:	add    BYTE PTR [rax],al
   140004180:	xchg   edx,eax
   140004181:	pop    rdx
	...
   14000418e:	add    BYTE PTR [rax],al
   140004190:	(bad)  
   140004191:	pop    rbx
   140004192:	add    BYTE PTR [rax],al
   140004194:	add    BYTE PTR [rax],al
   140004196:	add    BYTE PTR [rax],al
   140004198:	xor    BYTE PTR [rbx+0x0],bl
   14000419b:	add    BYTE PTR [rax],al
   14000419d:	add    BYTE PTR [rax],al
   14000419f:	add    BYTE PTR [rdx],al
   1400041a1:	pop    rbx
	...
   1400041ae:	add    BYTE PTR [rax],al
   1400041b0:	rex pop rax
   1400041b2:	add    BYTE PTR [rax],al
   1400041b4:	add    BYTE PTR [rax],al
   1400041b6:	add    BYTE PTR [rax],al
   1400041b8:	rex.WR pop rcx
   1400041ba:	add    BYTE PTR [rax],al
   1400041bc:	add    BYTE PTR [rax],al
   1400041be:	add    BYTE PTR [rax],al
   1400041c0:	(bad)  
   1400041c1:	pop    rcx
   1400041c2:	add    BYTE PTR [rax],al
   1400041c4:	add    BYTE PTR [rax],al
   1400041c6:	add    BYTE PTR [rax],al
   1400041c8:	lock pop rcx
   1400041ca:	add    BYTE PTR [rax],al
   1400041cc:	add    BYTE PTR [rax],al
   1400041ce:	add    BYTE PTR [rax],al
   1400041d0:	or     BYTE PTR [rdx+0x0],bl
   1400041d3:	add    BYTE PTR [rax],al
   1400041d5:	add    BYTE PTR [rax],al
   1400041d7:	add    BYTE PTR [rax],ah
   1400041d9:	pop    rdx
   1400041da:	add    BYTE PTR [rax],al
   1400041dc:	add    BYTE PTR [rax],al
   1400041de:	add    BYTE PTR [rax],al
   1400041e0:	cs pop rdx
   1400041e2:	add    BYTE PTR [rax],al
   1400041e4:	add    BYTE PTR [rax],al
   1400041e6:	add    BYTE PTR [rax],al
   1400041e8:	rex.RX pop rdx
   1400041ea:	add    BYTE PTR [rax],al
   1400041ec:	add    BYTE PTR [rax],al
   1400041ee:	add    BYTE PTR [rax],al
   1400041f0:	mov    esi,0x59
   1400041f5:	add    BYTE PTR [rax],al
   1400041f7:	add    BYTE PTR [rsi+0x58],bl
   1400041fa:	add    BYTE PTR [rax],al
   1400041fc:	add    BYTE PTR [rax],al
   1400041fe:	add    BYTE PTR [rax],al
   140004200:	add    al,0x59
	...
   14000420e:	add    BYTE PTR [rax],al
   140004210:	repnz pop rdx
   140004212:	add    BYTE PTR [rax],al
   140004214:	add    BYTE PTR [rax],al
   140004216:	add    BYTE PTR [rax],al
   140004218:	fcomp  DWORD PTR [rdx+0x0]
	...
   140004227:	add    BYTE PTR [rdx+0x58],bh
	...
   140004236:	add    BYTE PTR [rax],al
   140004238:	or     bl,BYTE PTR [rax+0x0]
   14000423b:	add    BYTE PTR [rax],al
   14000423d:	add    BYTE PTR [rax],al
   14000423f:	add    BYTE PTR [rax],ah
   140004241:	pop    rax
	...
   14000424e:	add    BYTE PTR [rax],al
   140004250:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140004251:	push   rdi
	...
   14000425e:	add    BYTE PTR [rax],al
   140004260:	or     dl,BYTE PTR [rdi+0x0]
   140004263:	add    BYTE PTR [rax],al
   140004265:	add    BYTE PTR [rax],al
   140004267:	add    BYTE PTR [rdx],dl
   140004269:	push   rdi
   14000426a:	add    BYTE PTR [rax],al
   14000426c:	add    BYTE PTR [rax],al
   14000426e:	add    BYTE PTR [rax],al
   140004270:	add    dl,BYTE PTR [rdi+0x0]
   140004273:	add    BYTE PTR [rax],al
   140004275:	add    BYTE PTR [rax],al
   140004277:	add    BYTE PTR [rdi+rdx*2],bl
   14000427a:	add    BYTE PTR [rax],al
   14000427c:	add    BYTE PTR [rax],al
   14000427e:	add    BYTE PTR [rax],al
   140004280:	adc    BYTE PTR [rdi+0x0],0x0
   140004284:	add    BYTE PTR [rax],al
   140004286:	add    BYTE PTR [rax],al
   140004288:	xor    BYTE PTR [rdi+0x0],dl
   14000428b:	add    BYTE PTR [rax],al
   14000428d:	add    BYTE PTR [rax],al
   14000428f:	add    BYTE PTR [rdi+rdx*2],bh
   140004292:	add    BYTE PTR [rax],al
   140004294:	add    BYTE PTR [rax],al
   140004296:	add    BYTE PTR [rax],al
   140004298:	push   rsp
   140004299:	push   rdi
   14000429a:	add    BYTE PTR [rax],al
   14000429c:	add    BYTE PTR [rax],al
   14000429e:	add    BYTE PTR [rax],al
   1400042a0:	pop    rsi
   1400042a1:	push   rdi
   1400042a2:	add    BYTE PTR [rax],al
   1400042a4:	add    BYTE PTR [rax],al
   1400042a6:	add    BYTE PTR [rax],al
   1400042a8:	lock push rsi
   1400042aa:	add    BYTE PTR [rax],al
   1400042ac:	add    BYTE PTR [rax],al
   1400042ae:	add    BYTE PTR [rax],al
   1400042b0:	ficom  WORD PTR [rsi+0x0]
   1400042b3:	add    BYTE PTR [rax],al
   1400042b5:	add    BYTE PTR [rax],al
   1400042b7:	add    al,dl
   1400042b9:	push   rsi
   1400042ba:	add    BYTE PTR [rax],al
   1400042bc:	add    BYTE PTR [rax],al
   1400042be:	add    BYTE PTR [rax],al
   1400042c0:	ret    0x56
   1400042c3:	add    BYTE PTR [rax],al
   1400042c5:	add    BYTE PTR [rax],al
   1400042c7:	add    BYTE PTR [rsi+0x56],dh
   1400042cd:	add    BYTE PTR [rax],al
   1400042cf:	add    BYTE PTR [rsi+rdx*2+0x0],ch
   1400042d6:	add    BYTE PTR [rax],al
   1400042d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400042d9:	push   rsi
   1400042da:	add    BYTE PTR [rax],al
   1400042dc:	add    BYTE PTR [rax],al
   1400042de:	add    BYTE PTR [rax],al
   1400042e0:	cwde   
   1400042e1:	push   rsi
   1400042e2:	add    BYTE PTR [rax],al
   1400042e4:	add    BYTE PTR [rax],al
   1400042e6:	add    BYTE PTR [rax],al
   1400042e8:	mov    WORD PTR [rsi+0x0],ss
   1400042eb:	add    BYTE PTR [rax],al
   1400042ed:	add    BYTE PTR [rax],al
   1400042ef:	add    BYTE PTR [rax+0x56],al
   1400042f5:	add    BYTE PTR [rax],al
   1400042f7:	add    BYTE PTR [rax+0x57],ch
   1400042fa:	add    BYTE PTR [rax],al
   1400042fc:	add    BYTE PTR [rax],al
   1400042fe:	add    BYTE PTR [rax],al
   140004300:	mov    eax,0x5e
	...
   14000430d:	add    BYTE PTR [rax],al
   14000430f:	add    BYTE PTR [rax+0x1400027],al
   140004315:	add    BYTE PTR [rax],al
   140004317:	add    BYTE PTR [rax],al
   140004319:	sub    al,0x0
   14000431b:	rex add DWORD PTR [rax],eax
	...
   140004326:	add    BYTE PTR [rax],al
   140004328:	and    BYTE PTR [rcx],ah
   14000432a:	add    BYTE PTR [rax+0x1],al
	...
   14000433d:	add    BYTE PTR [rax],al
   14000433f:	add    BYTE PTR [rax+0x20],al
   140004342:	add    BYTE PTR [rax+0x1],al
   140004345:	add    BYTE PTR [rax],al
   140004347:	add    BYTE PTR [rax+0x1400024],dh
	...
   140004355:	add    BYTE PTR [rax],al
   140004357:	add    BYTE PTR [rax+0x1a],dh
   14000435a:	add    BYTE PTR [rax],al
   14000435c:	rcr    BYTE PTR [rdx],1
   14000435e:	add    BYTE PTR [rax],al
   140004360:	rex sbb eax,DWORD PTR [rax]
   140004363:	add    al,al
   140004365:	sbb    al,0x0
   140004367:	add    BYTE PTR [rax],al
   140004369:	sbb    eax,0x1f200000
   14000436e:	add    BYTE PTR [rax],al
   140004370:	sbb    BYTE PTR [rdi],0x0
   140004373:	add    BYTE PTR [rax+0x4000001f],ah
   140004379:	and    BYTE PTR [rax],al
   14000437b:	add    BYTE PTR [rax],ah
   14000437d:	and    DWORD PTR [rax],eax
   14000437f:	add    al,dh
   140004381:	and    eax,DWORD PTR [rax]
   140004383:	add    BYTE PTR [rax+0x24],dh
   140004386:	add    BYTE PTR [rax],al
   140004388:	mov    al,0x24
   14000438a:	add    BYTE PTR [rax],al
   14000438c:	push   rax
   14000438d:	(bad)  
   14000438e:	add    BYTE PTR [rax],al
   140004390:	and    BYTE PTR [rdi],0x0
   140004393:	add    al,dl
   140004395:	(bad)  
   140004396:	add    BYTE PTR [rax],al
   140004398:	(bad)  
   140004399:	sub    DWORD PTR [rax],eax
   14000439b:	add    BYTE PTR [rax+0x60000029],al
   1400043a1:	sub    al,BYTE PTR [rax]
   1400043a3:	add    BYTE PTR [rax-0x5fffffd6],al
   1400043a9:	sub    al,BYTE PTR [rax]
   1400043ab:	add    BYTE PTR [rax],ah
   1400043ad:	sub    eax,DWORD PTR [rax]
   1400043af:	add    BYTE PTR [rax+0x2b],al
   1400043b2:	add    BYTE PTR [rax],al
   1400043b4:	push   rax
   1400043b5:	sub    eax,DWORD PTR [rax]
   1400043b7:	add    BYTE PTR [rax],dl
   1400043b9:	sub    al,0x0
   1400043bb:	add    BYTE PTR [rax],ah
   1400043bd:	sub    al,0x0
   1400043bf:	add    BYTE PTR [rax],dh
   1400043c1:	sub    al,0x0
   1400043c3:	add    BYTE PTR [rax+0x2c],al
   1400043c6:	add    BYTE PTR [rax],al
   1400043c8:	push   rax
   1400043c9:	sub    al,0x0
   1400043cb:	add    BYTE PTR [rax+0x2c],ah
   1400043ce:	add    BYTE PTR [rax],al
   1400043d0:	jo     0x1400043fe
   1400043d2:	add    BYTE PTR [rax],al
   1400043d4:	adc    BYTE PTR [rax],bh
   1400043d6:	add    BYTE PTR [rax],al
   1400043d8:	push   rax
   1400043d9:	cmp    BYTE PTR [rax],al
   1400043db:	add    BYTE PTR [rax+0x70000038],al
   1400043e1:	cmp    DWORD PTR [rax],eax
   1400043e3:	add    BYTE PTR [rax+0x3b],ah
   1400043e6:	add    BYTE PTR [rax],al
   1400043e8:	sar    BYTE PTR [rbx],0x0
   1400043eb:	add    BYTE PTR [rax],al
   1400043ed:	add    BYTE PTR [rax],al
   1400043ef:	add    BYTE PTR [rdi],ch
   1400043f1:	add    BYTE PTR [rax+rax*1+0x65],dl
   1400043f5:	add    BYTE PTR [rdx+0x0],dh
   1400043f8:	ins    DWORD PTR es:[rdi],dx
   1400043f9:	add    BYTE PTR [rbp+0x0],al
   1400043fc:	jbe    0x1400043fe
   1400043fe:	add    BYTE PTR gs:[rsi+0x0],ch
   140004402:	je     0x140004404
   140004404:	add    BYTE PTR [rax],al
   140004406:	add    BYTE PTR [rax],al
   140004408:	(bad)  
   140004409:	add    BYTE PTR [rbx+0x0],dl
   14000440c:	je     0x14000440e
   14000440e:	(bad)  
   14000440f:	add    BYTE PTR [rdx+0x0],dh
   140004412:	je     0x140004414
   140004414:	add    BYTE PTR [rax],al
   140004416:	add    BYTE PTR [rax],al
   140004418:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140004419:	imul   DWORD PTR [rdx+rcx*1+0x49df5e1d]
   140004420:	xor    BYTE PTR [rbx+rdi*8],0x6a
   140004424:	push   0xd15ebc
   140004429:	add    BYTE PTR [rax],al
   14000442b:	add    BYTE PTR [rax],al
   14000442d:	add    BYTE PTR [rax],al
   14000442f:	add    BYTE PTR [rdi+0x0],dl
   140004432:	imul   eax,DWORD PTR [rax],0x64006e
   140004438:	outs   dx,DWORD PTR ds:[rsi]
   140004439:	add    BYTE PTR [rdi+0x0],dh
   14000443c:	jae    0x14000443e
   14000443e:	add    BYTE PTR cs:[rcx+0x0],al
   140004442:	jo     0x140004444
   140004444:	jo     0x140004446
   140004446:	ins    BYTE PTR es:[rdi],dx
   140004447:	add    BYTE PTR [rcx+0x0],ch
   14000444a:	movsxd eax,DWORD PTR [rax]
   14000444c:	(bad)  
   14000444d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140004451:	add    BYTE PTR [rdi+0x0],ch
   140004454:	outs   dx,BYTE PTR ds:[rsi]
   140004455:	add    BYTE PTR [rbp+0x0],cl
   140004458:	outs   dx,DWORD PTR ds:[rsi]
   140004459:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000445d:	add    BYTE PTR [rax+rax*1+0x2e],ch
   140004461:	add    BYTE PTR [rbx+0x0],al
   140004464:	outs   dx,DWORD PTR ds:[rsi]
   140004465:	add    BYTE PTR [rdx+0x0],dh
   140004468:	add    BYTE PTR gs:[rsi],ch
   14000446b:	add    BYTE PTR [rbx+0x0],al
   14000446e:	outs   dx,DWORD PTR ds:[rsi]
   14000446f:	add    BYTE PTR [rdx+0x0],dh
   140004472:	add    BYTE PTR gs:[rcx+0x0],al
   140004476:	jo     0x140004478
   140004478:	jo     0x14000447a
   14000447a:	ins    BYTE PTR es:[rdi],dx
   14000447b:	add    BYTE PTR [rcx+0x0],ch
   14000447e:	movsxd eax,DWORD PTR [rax]
   140004480:	(bad)  
   140004481:	add    BYTE PTR [rax+rax*1+0x69],dh
   140004485:	add    BYTE PTR [rdi+0x0],ch
   140004488:	outs   dx,BYTE PTR ds:[rsi]
	...
   140004495:	add    BYTE PTR [rax],al
   140004497:	add    al,al
   140004499:	add    BYTE PTR [rax],al
   14000449b:	add    BYTE PTR [rax],al
   14000449d:	add    BYTE PTR [rax],al
   14000449f:	rex.RX scas eax,DWORD PTR es:[rdi]
   1400044a1:	and    ecx,DWORD PTR [rsi-0x67]
   1400044a4:	ret    0x3c1c
   1400044a7:	movabs r9,0x1a40f04cbf146fa
   1400044b1:	add    BYTE PTR [rax],al
   1400044b3:	add    BYTE PTR [rax],al
   1400044b5:	add    BYTE PTR [rax],al
   1400044b7:	add    al,al
   1400044b9:	add    BYTE PTR [rax],al
   1400044bb:	add    BYTE PTR [rax],al
   1400044bd:	add    BYTE PTR [rax],al
   1400044bf:	rex.RX (bad) 
   1400044c1:	icebp  
   1400044c2:	(bad)  
   1400044c3:	ja     0x140004450
   1400044c5:	adc    edx,DWORD PTR [rdi+0x42]
   1400044c8:	xchg   DWORD PTR [rbx+rbx*1],edi
   1400044cb:	mov    cs,WORD PTR [rcx+riz*8]
   1400044ce:	rol    DWORD PTR [rbx+0x3],1
   1400044d4:	add    BYTE PTR [rax],al
   1400044d6:	add    BYTE PTR [rax],al
   1400044d8:	rol    BYTE PTR [rax],0x0
   1400044db:	add    BYTE PTR [rax],al
   1400044dd:	add    BYTE PTR [rax],al
   1400044df:	rex.RX push rax
   1400044e1:	sub    al,0x0
   1400044e3:	rex add DWORD PTR [rax],eax
   1400044e6:	add    BYTE PTR [rax],al
   1400044e8:	and    BYTE PTR [rax+rax*1],ch
   1400044eb:	rex add DWORD PTR [rax],eax
   1400044ee:	add    BYTE PTR [rax],al
   1400044f0:	jo     0x14000451e
   1400044f2:	add    BYTE PTR [rax+0x1],al
   1400044f5:	add    BYTE PTR [rax],al
   1400044f7:	add    BYTE PTR [rax+0x1a],dh
   1400044fa:	add    BYTE PTR [rax+0x1],al
   1400044fd:	add    BYTE PTR [rax],al
   1400044ff:	add    BYTE PTR [rax],dh
   140004501:	sub    al,0x0
   140004503:	rex add DWORD PTR [rax],eax
   140004506:	add    BYTE PTR [rax],al
   140004508:	sub    al,0x0
   14000450b:	rex add DWORD PTR [rax],eax
   14000450e:	add    BYTE PTR [rax],al
   140004510:	adc    BYTE PTR [rax+rax*1],ch
   140004513:	rex add DWORD PTR [rax],eax
   140004516:	add    BYTE PTR [rax],al
   140004518:	(bad)  
   140004519:	sub    al,0x0
   14000451b:	rex add DWORD PTR [rax],eax
   14000451e:	add    BYTE PTR [rax],al
   140004520:	rcr    BYTE PTR [rdx],1
   140004522:	add    BYTE PTR [rax+0x1],al
   140004525:	add    BYTE PTR [rax],al
   140004527:	add    BYTE PTR [rax+0x3b],ah
   14000452a:	add    BYTE PTR [rax+0x1],al
   14000452d:	add    BYTE PTR [rax],al
   14000452f:	add    BYTE PTR [rax+0x38],dl
   140004532:	add    BYTE PTR [rax+0x1],al
   140004535:	add    BYTE PTR [rax],al
   140004537:	add    BYTE PTR [rax+0x1b],al
   14000453a:	add    BYTE PTR [rax+0x1],al
   14000453d:	add    BYTE PTR [rax],al
   14000453f:	add    BYTE PTR [rax],al
   140004541:	sbb    eax,0x14000
   140004546:	add    BYTE PTR [rax],al
   140004548:	rcr    BYTE PTR [rax+rax*1],0x40
   14000454c:	add    DWORD PTR [rax],eax
   14000454e:	add    BYTE PTR [rax],al
   140004550:	push   rax
   140004551:	(bad)  
   140004552:	add    BYTE PTR [rax+0x1],al
   140004555:	add    BYTE PTR [rax],al
   140004557:	add    BYTE PTR [rax+0x27],dl
   14000455a:	add    BYTE PTR [rax+0x1],al
   14000455d:	add    BYTE PTR [rax],al
   14000455f:	add    BYTE PTR [rax],dl
   140004561:	cmp    BYTE PTR [rax],al
   140004563:	rex add DWORD PTR [rax],eax
   140004566:	add    BYTE PTR [rax],al
   140004568:	cmp    BYTE PTR [rax],0x0
   14000456b:	rex add DWORD PTR [rax],eax
   14000456e:	add    BYTE PTR [rax],al
   140004570:	sbb    BYTE PTR [rdi],0x0
   140004573:	rex add DWORD PTR [rax],eax
   140004576:	add    BYTE PTR [rax],al
   140004578:	jo     0x1400045b3
   14000457a:	add    BYTE PTR [rax+0x1],al
   14000457d:	add    BYTE PTR [rax],al
   14000457f:	add    BYTE PTR [rax],ah
   140004581:	(bad)  
   140004582:	add    BYTE PTR [rax+0x1],al
   140004585:	add    BYTE PTR [rax],al
   140004587:	add    al,al
   140004589:	cmp    eax,DWORD PTR [rax]
   14000458b:	rex add DWORD PTR [rax],eax
   14000458e:	add    BYTE PTR [rax],al
   140004590:	and    DWORD PTR [rax],eax
   140004592:	add    BYTE PTR [rax],al
   140004594:	add    BYTE PTR [rax],al
   140004596:	add    BYTE PTR [rax],al
   140004598:	jo     0x1400045fa
   14000459a:	add    BYTE PTR [rax+0x1],al
   14000459d:	add    BYTE PTR [rax],al
   14000459f:	add    BYTE PTR [rax],dl
   1400045a1:	(bad)  
   1400045a2:	add    BYTE PTR [rax+0x1],al
	...
   1400045ad:	add    BYTE PTR [rax],al
   1400045af:	add    BYTE PTR [rbp+0x78],ah
   1400045b2:	je     0x1400045e1
   1400045b4:	ins    DWORD PTR es:[rdi],dx
   1400045b5:	jae    0x1400045e4
   1400045b7:	ja     0x140004622
   1400045b9:	outs   dx,BYTE PTR ds:[rsi]
   1400045ba:	sub    eax,0x2d6d6f63
   1400045bf:	outs   dx,DWORD PTR ds:[rsi]
   1400045c0:	ins    BYTE PTR es:[rdi],dx
   1400045c1:	xor    esi,DWORD PTR gs:[rdx]
   1400045c4:	sub    eax,0x312d316c
   1400045c9:	sub    eax,0x6c642e31
   1400045ce:	ins    BYTE PTR es:[rdi],dx
   1400045cf:	add    BYTE PTR [rsi],dh
   1400045d1:	add    BYTE PTR [rax],bh
   1400045d3:	add    BYTE PTR [rax],al
   1400045d5:	add    BYTE PTR [rax],al
   1400045d7:	add    al,dh
   1400045d9:	add    BYTE PTR [r8+0x1],r8b
   1400045dd:	add    BYTE PTR [rax],al
   1400045df:	add    BYTE PTR [rsi],dh
   1400045e1:	add    BYTE PTR [rax],bh
   1400045e3:	add    BYTE PTR [rax],al
   1400045e5:	add    BYTE PTR [rax],al
   1400045e7:	add    BYTE PTR [rax],ch
   1400045e9:	rex.RX add BYTE PTR [rax+0x1],r8b
   1400045ed:	add    BYTE PTR [rax],al
   1400045ef:	add    BYTE PTR [rbp+0x0],ah
   1400045f2:	js     0x1400045f4
   1400045f4:	je     0x1400045f6
   1400045f6:	sub    eax,0x73006d00
   1400045fb:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900bd01
   140004601:	add    BYTE PTR [rsi+0x0],ch
   140004604:	sub    eax,0x6f006300
   140004609:	add    BYTE PTR [rbp+0x0],ch
   14000460c:	sub    eax,0x6c006f00
   140004611:	add    BYTE PTR [rbp+0x0],ah
   140004614:	xor    eax,DWORD PTR [rax]
   140004616:	xor    al,BYTE PTR [rax]
   140004618:	sub    eax,0x31006c00
   14000461d:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d007723
   140004623:	add    BYTE PTR [rcx],dh
   140004625:	add    BYTE PTR [rax],al
   140004627:	add    BYTE PTR [rbp+0x0],ah
   14000462a:	js     0x14000462c
   14000462c:	je     0x14000462e
   14000462e:	sub    eax,0x73006d00
   140004633:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900bd39
   140004639:	add    BYTE PTR [rsi+0x0],ch
   14000463c:	sub    eax,0x6f006300
   140004641:	add    BYTE PTR [rbp+0x0],ch
   140004644:	sub    eax,0x6c006f00
   140004649:	add    BYTE PTR [rbp+0x0],ah
   14000464c:	xor    eax,DWORD PTR [rax]
   14000464e:	xor    al,BYTE PTR [rax]
   140004650:	sub    eax,0x31006c00
   140004655:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d00775b
   14000465b:	add    BYTE PTR [rbx],dh
   14000465d:	add    BYTE PTR [rax],al
   14000465f:	add    BYTE PTR [rbx+0x6f],al
   140004662:	ins    DWORD PTR es:[rdi],dx
   140004663:	jo     0x1400046b5
   140004665:	imul   esp,DWORD PTR [rdi+0x53],0x75
   140004669:	jo     0x140004699
   14000466b:	rex.R
   14000466c:	rex.WR
   14000466d:	rex.WR add BYTE PTR [rax],r8b
   140004670:	xchg   edx,eax
   140004671:	sub    ch,BYTE PTR [rdx]
   140004673:	mov    edi,0x4c4c7956
   140004678:	mul    DWORD PTR [rdx+riz*2]
   14000467b:	mov    esp,0xe6e799d0
	...
   140004694:	mov    esi,0x57cf95
   140004699:	add    BYTE PTR [rax],al
   14000469b:	add    BYTE PTR [rdx],al
   14000469d:	add    BYTE PTR [rax],al
   14000469f:	add    BYTE PTR [rdx],ah
   1400046a1:	add    BYTE PTR [rax],al
   1400046a3:	add    BYTE PTR [rax+rcx*2],dl
   1400046a6:	add    BYTE PTR [rax],al
   1400046a8:	adc    al,0x3a
   1400046aa:	add    BYTE PTR [rax],al
   1400046ac:	add    BYTE PTR [rax],al
   1400046ae:	add    BYTE PTR [rax],al
   1400046b0:	mov    esi,0x57cf95
   1400046b5:	add    BYTE PTR [rax],al
   1400046b7:	add    BYTE PTR [rip+0x14000000],cl        # 0x1540046bd
   1400046bd:	add    eax,DWORD PTR [rax]
   1400046bf:	add    BYTE PTR [rax+rcx*2+0x0],cl
   1400046c3:	add    BYTE PTR [rdx+rdi*1+0x0],cl
	...
   1400046ef:	add    BYTE PTR [rax+0x0],ah
	...
   140004745:	add    BYTE PTR [rax],al
   140004747:	add    BYTE PTR [rax],cl
   140004749:	(bad)  
   14000474a:	add    BYTE PTR [rax+0x1],al
	...
   14000475d:	add    BYTE PTR [rax],al
   14000475f:	add    BYTE PTR [rax],dl
   140004761:	rex.XB add BYTE PTR [r8+0x1],al
   140004765:	add    BYTE PTR [rax],al
   140004767:	add    BYTE PTR [rax],bl
   140004769:	rex.XB add BYTE PTR [r8+0x1],al
   14000476d:	add    BYTE PTR [rax],al
   14000476f:	add    BYTE PTR [rax+0x43],bl
   140004772:	add    BYTE PTR [rax+0x1],al
   140004775:	add    BYTE PTR [rax],al
   140004777:	add    BYTE PTR [rip+0x0],ah        # 0x14000477d
   14000477d:	add    BYTE PTR [rax],al
   14000477f:	add    BYTE PTR [rax],al
   140004781:	xor    eax,0x0
	...
   14000478e:	add    BYTE PTR [rax],al
   140004790:	enter  0x47,0x40
   140004794:	add    DWORD PTR [rax],eax
   140004796:	add    BYTE PTR [rax],al
   140004798:	mov    al,0x47
   14000479a:	add    BYTE PTR [rax+0x1],al
	...
   1400047ad:	add    BYTE PTR [rax],al
   1400047af:	add    BYTE PTR [rax+0x0],dl
   1400047b2:	push   rdx
   1400047b3:	add    BYTE PTR [rdi+0x0],cl
   1400047b6:	rex.RXB add BYTE PTR [r10+0x0],r10b
   1400047ba:	add    BYTE PTR [r13+0x0],cl
   1400047be:	add    BYTE PTR [rcx+0x0],r8b
   1400047c2:	push   rsp
   1400047c3:	add    BYTE PTR [rcx+0x0],al
   1400047c6:	add    BYTE PTR [rax],al
   1400047c8:	push   rsp
   1400047c9:	add    BYTE PTR [rbp+0x0],al
   1400047cc:	rex.WRB add BYTE PTR [r8+0x0],r10b
	...
   1400047d8:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   1400047dc:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   1400047e1:	add    BYTE PTR [rax],al
   1400047e3:	add    BYTE PTR [rax],al
   1400047e5:	add    BYTE PTR [rax],al
   1400047e7:	add    BYTE PTR [rax+rax*1],bh
   1400047ea:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   1400047ee:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   1400047f3:	add    BYTE PTR [rax],al
   1400047f5:	add    BYTE PTR [rax],al
   1400047f7:	add    BYTE PTR [rdx-0x364466de],dh
   1400047fd:	sbb    esp,DWORD PTR [rbx+0x63f4e188]
   140004803:	sbb    bl,dh
   140004805:	shr    BYTE PTR [rsi],1
   140004807:	mov    ch,0x0
	...
   140004811:	add    BYTE PTR [rax],al
   140004813:	add    BYTE PTR [rdx+0x53],dl
   140004816:	rex.R push rbx
   140004818:	ins    BYTE PTR es:[rdi],dx
   140004819:	test   esi,ebp
   14000481b:	mov    cl,0xfa
   14000481d:	(bad)
   140004822:	(bad)  
   140004823:	or     al,0xf6
   140004825:	mov    ecx,0x1ff5d
   14000482a:	add    BYTE PTR [rax],al
   14000482c:	rex.WRB
   14000482d:	rex.RX push rax
   14000482f:	rex.WRB push r8
   140004831:	cs jo  0x140004898
   140004834:	(bad)  
	...
   14000484d:	push   rbp
   14000484e:	rex.RXB push r8
   140004850:	add    BYTE PTR [rax],dl
   140004852:	add    BYTE PTR [rax],al
   140004854:	(bad)  
   140004855:	sldt   WORD PTR [rax]
   140004858:	cs je  0x1400048c0
   14000485b:	js     0x1400048d1
   14000485d:	and    al,0x6c
   14000485f:	jo     0x140004891
   140004861:	xor    BYTE PTR [rbp+0x66],ch
   140004864:	jo     0x1400048d3
   140004866:	jo     0x140004896
   140004868:	gs js  0x1400048d0
   14000486b:	and    DWORD PTR [rdx],esi
   14000486d:	xor    BYTE PTR [rdi+0x70],bl
   140004870:	jb     0x1400048db
   140004872:	(bad)  
   140004873:	add    al,ah
   140004875:	(bad)  
   140004876:	add    BYTE PTR [rax],al
   140004878:	adc    BYTE PTR [rax+rax*1],cl
   14000487b:	add    BYTE PTR [rsi],ch
   14000487d:	je     0x1400048e4
   14000487f:	js     0x1400048f5
   140004881:	and    al,0x6d
   140004883:	outs   dx,BYTE PTR ds:[rsi]
   140004884:	add    BYTE PTR [rax],al
   140004886:	add    BYTE PTR [rax],al
   140004888:	lock sub eax,DWORD PTR [rax]
   14000488b:	add    BYTE PTR [rdx],dl
   14000488d:	add    BYTE PTR [rax],al
   14000488f:	add    BYTE PTR [rsi],ch
   140004891:	je     0x1400048f8
   140004893:	js     0x140004909
   140004895:	and    al,0x6d
   140004897:	outs   dx,BYTE PTR ds:[rsi]
   140004898:	and    al,0x30
   14000489a:	xor    BYTE PTR [rax],al
   14000489c:	add    al,0x2c
   14000489e:	add    BYTE PTR [rax],al
   1400048a0:	jne    0x1400048a2
   1400048a2:	add    BYTE PTR [rax],al
   1400048a4:	cs je  0x14000490c
   1400048a7:	js     0x14000491d
   1400048a9:	and    al,0x6e
   1400048ab:	jo     0x1400048ad
   1400048ad:	add    BYTE PTR [rax],al
   1400048af:	add    BYTE PTR [rax+0x5000002c],al
   1400048b5:	add    BYTE PTR [rax],al
   1400048b7:	add    BYTE PTR [rsi],ch
   1400048b9:	je     0x140004920
   1400048bb:	js     0x140004931
   1400048bd:	and    al,0x78
   1400048bf:	add    al,dl
   1400048c1:	sub    al,0x0
   1400048c3:	add    BYTE PTR [rdi+0x2e000008],cl
   1400048c9:	je     0x140004930
   1400048cb:	js     0x140004941
   1400048cd:	and    al,0x7a
   1400048cf:	jns    0x1400048d1
   1400048d1:	add    BYTE PTR [rax],al
   1400048d3:	add    BYTE PTR [rax+0x35],ah
   1400048d6:	add    BYTE PTR [rax],al
   1400048d8:	push   rax
   1400048d9:	(bad)  
   1400048da:	add    BYTE PTR [rax],al
   1400048dc:	cs je  0x140004944
   1400048df:	js     0x140004955
   1400048e1:	and    al,0x7a
   1400048e3:	jp     0x1400048e5
   1400048e5:	add    BYTE PTR [rax],al
   1400048e7:	add    BYTE PTR [rax],al
   1400048e9:	add    BYTE PTR [rax],al
   1400048ec:	adc    BYTE PTR [rbx],al
   1400048ee:	add    BYTE PTR [rax],al
   1400048f0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   1400048f9:	add    BYTE PTR [rax],al
   1400048fb:	add    BYTE PTR [rax],dl
   1400048fd:	rex.XB add BYTE PTR [r8],al
   140004900:	adc    BYTE PTR [rax],al
   140004902:	add    BYTE PTR [rax],al
   140004904:	xor    BYTE PTR cs:[rax],dh
   140004907:	movsxd esp,DWORD PTR [rsi+0x67]
   14000490a:	add    BYTE PTR [rax],al
   14000490c:	and    BYTE PTR [rbx+0x0],al
   14000490f:	add    BYTE PTR [rax],cl
   140004911:	add    BYTE PTR [rax],al
   140004913:	add    BYTE PTR [rsi],ch
   140004915:	rex.XB push r10
   140004917:	push   rsp
   140004918:	and    al,0x58
   14000491a:	rex.XB
   14000491b:	add    BYTE PTR [r8],al
   14000491e:	add    BYTE PTR [rax],al
   140004920:	sub    BYTE PTR [rbx+0x0],al
   140004923:	add    BYTE PTR [rax],cl
   140004925:	add    BYTE PTR [rax],al
   140004927:	add    BYTE PTR [rsi],ch
   140004929:	rex.XB push r10
   14000492b:	push   rsp
   14000492c:	and    al,0x58
   14000492e:	rex.XB
   14000492f:	rex.B
   140004930:	add    BYTE PTR [r8],al
   140004933:	add    BYTE PTR [rax],dh
   140004935:	rex.XB add BYTE PTR [r8],al
   140004938:	or     BYTE PTR [rax],al
   14000493a:	add    BYTE PTR [rax],al
   14000493c:	cs rex.XB push r10
   14000493f:	push   rsp
   140004940:	and    al,0x58
   140004942:	rex.XB pop r10
   140004944:	add    BYTE PTR [rax],al
   140004946:	add    BYTE PTR [rax],al
   140004948:	cmp    BYTE PTR [rbx+0x0],al
   14000494b:	add    BYTE PTR [rax],cl
   14000494d:	add    BYTE PTR [rax],al
   14000494f:	add    BYTE PTR [rsi],ch
   140004951:	rex.XB push r10
   140004953:	push   rsp
   140004954:	and    al,0x58
   140004956:	rex.WB
   140004957:	add    BYTE PTR [r8],al
   14000495a:	add    BYTE PTR [rax],al
   14000495c:	rex
   14000495d:	rex.XB add BYTE PTR [r8],al
   140004960:	or     BYTE PTR [rax],al
   140004962:	add    BYTE PTR [rax],al
   140004964:	cs rex.XB push r10
   140004967:	push   rsp
   140004968:	and    al,0x58
   14000496a:	rex.WB
   14000496b:	rex.B
   14000496c:	add    BYTE PTR [r8],al
   14000496f:	add    BYTE PTR [rax+0x43],cl
   140004972:	add    BYTE PTR [rax],al
   140004974:	or     BYTE PTR [rax],al
   140004976:	add    BYTE PTR [rax],al
   140004978:	cs rex.XB push r10
   14000497b:	push   rsp
   14000497c:	and    al,0x58
   14000497e:	rex.WB pop r9
   140004980:	add    BYTE PTR [rax],al
   140004982:	add    BYTE PTR [rax],al
   140004984:	push   rax
   140004985:	rex.XB add BYTE PTR [r8],al
   140004988:	or     BYTE PTR [rax],al
   14000498a:	add    BYTE PTR [rax],al
   14000498c:	cs rex.XB push r10
   14000498f:	push   rsp
   140004990:	and    al,0x58
   140004992:	rex.WB pop r10
   140004994:	add    BYTE PTR [rax],al
   140004996:	add    BYTE PTR [rax],al
   140004998:	pop    rax
   140004999:	rex.XB add BYTE PTR [r8],al
   14000499c:	xchg   esp,eax
   14000499d:	add    BYTE PTR [rax],al
   14000499f:	add    BYTE PTR [rsi],ch
   1400049a1:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   1400049a9:	add    BYTE PTR [rax],al
   1400049ab:	add    al,dh
   1400049ad:	rex.XB add BYTE PTR [r8],al
   1400049b0:	movabs al,ds:0x746164722e000003
   1400049b9:	(bad)  
   1400049ba:	add    BYTE PTR [rax],al
   1400049bc:	nop
   1400049bd:	rex.RXB add BYTE PTR [r8],r8b
   1400049c0:	rex.X add BYTE PTR [rax],al
   1400049c3:	add    BYTE PTR [rsi],ch
   1400049c5:	jb     0x140004a2b
   1400049c7:	(bad)  
   1400049c8:	je     0x140004a2b
   1400049ca:	and    al,0x30
   1400049cc:	xor    BYTE PTR [rax],al
   1400049ce:	add    BYTE PTR [rax],al
   1400049d0:	fadd   DWORD PTR [rdi+0x0]
   1400049d3:	add    BYTE PTR [rax+rax*1],bh
   1400049d6:	add    BYTE PTR [rax],al
   1400049d8:	cs jb  0x140004a3f
   1400049db:	(bad)  
   1400049dc:	je     0x140004a3f
   1400049de:	and    al,0x7a
   1400049e0:	jp     0x1400049e2
   1400049e2:	add    BYTE PTR [rax],al
   1400049e4:	adc    al,0x48
   1400049e6:	add    BYTE PTR [rax],al
   1400049e8:	add    r8,QWORD PTR [rax]
   1400049eb:	add    BYTE PTR [rsi],ch
   1400049ed:	jb     0x140004a53
   1400049ef:	(bad)  
   1400049f0:	je     0x140004a53
   1400049f2:	and    al,0x7a
   1400049f4:	jp     0x140004a70
   1400049f6:	fs (bad) 
   1400049f8:	add    BYTE PTR [eax],al
   1400049fb:	add    BYTE PTR [rax+0x4b],ah
   1400049fe:	add    BYTE PTR [rax],al
   140004a00:	add    rax,0x782e0000
   140004a06:	fs (bad) 
   140004a08:	je     0x140004a6b
   140004a0a:	add    BYTE PTR [rax],al
   140004a0c:	test   al,0x50
   140004a0e:	add    BYTE PTR [rax],al
   140004a10:	add    BYTE PTR [rax],al
   140004a13:	add    BYTE PTR [rsi],ch
   140004a15:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140004a1e:	add    BYTE PTR [rax],al
   140004a20:	call   0x160004a75
   140004a25:	add    BYTE PTR [rax],al
   140004a27:	add    BYTE PTR [rsi],ch
   140004a29:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   140004a32:	add    BYTE PTR [rax],al
   140004a34:	or     BYTE PTR [rcx+0x0],dl
   140004a37:	add    BYTE PTR [rax],dh
   140004a39:	add    BYTE PTR [rax],al
   140004a3b:	add    BYTE PTR [rsi],ch
   140004a3d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   140004a46:	add    BYTE PTR [rax],al
   140004a48:	cmp    BYTE PTR [rcx+0x0],dl
   140004a4b:	add    BYTE PTR [rsi+0x0],bl
   140004a4e:	add    BYTE PTR [rax],al
   140004a50:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140004a5a:	add    BYTE PTR [rax],al
   140004a5c:	cwde   
   140004a5d:	push   rcx
   140004a5e:	add    BYTE PTR [rax],al
   140004a60:	xor    BYTE PTR [rax],al
   140004a62:	add    BYTE PTR [rax],al
   140004a64:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   140004a6e:	add    BYTE PTR [rax],al
   140004a70:	enter  0x51,0x0
   140004a74:	nop
   140004a75:	add    DWORD PTR [rax],eax
   140004a77:	add    BYTE PTR [rsi],ch
   140004a79:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140004a81:	add    BYTE PTR [rax],al
   140004a83:	add    BYTE PTR [rax+0x53],bl
   140004a86:	add    BYTE PTR [rax],al
   140004a88:	adc    al,0x0
   140004a8a:	add    BYTE PTR [rax],al
   140004a8c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140004a95:	add    BYTE PTR [rax],al
   140004a97:	add    BYTE PTR [rax+0x53],dh
   140004a9a:	add    BYTE PTR [rax],al
   140004a9c:	adc    BYTE PTR [rbx],al
   140004a9e:	add    BYTE PTR [rax],al
   140004aa0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140004aa9:	add    BYTE PTR [rax],al
   140004aab:	add    BYTE PTR [rax+0x42000056],al
   140004ab1:	or     BYTE PTR [rax],al
   140004ab3:	add    BYTE PTR [rsi],ch
   140004ab5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140004abd:	add    BYTE PTR [rax],al
   140004abf:	add    BYTE PTR [rax],al
   140004ac1:	(bad)  
   140004ac2:	add    BYTE PTR [rax],al
   140004ac4:	and    BYTE PTR [rax],al
   140004ac6:	add    BYTE PTR [rax],al
   140004ac8:	cs fs (bad) 
   140004acb:	je     0x140004b2e
   140004acd:	add    BYTE PTR [rax],al
   140004acf:	add    BYTE PTR [rax],ah
   140004ad1:	(bad)  
   140004ad2:	add    BYTE PTR [rax],al
   140004ad4:	or     BYTE PTR [rax],al
   140004ad6:	add    BYTE PTR [rax],al
   140004ad8:	cs fs (bad) 
   140004adb:	je     0x140004b3e
   140004add:	and    al,0x70
   140004adf:	jb     0x140004b11
   140004ae1:	xor    BYTE PTR [rax],al
   140004ae3:	add    BYTE PTR [rax],dh
   140004ae5:	(bad)  
   140004ae6:	add    BYTE PTR [rax],al
   140004ae8:	lock add eax,0x622e0000
   140004aee:	jae    0x140004b63
   140004af0:	add    BYTE PTR [rax],al
   140004af2:	add    BYTE PTR [rax],al
   140004af4:	and    BYTE PTR [rsi+0x0],ah
   140004af7:	add    BYTE PTR [rax],ch
   140004af9:	add    BYTE PTR [rax],al
   140004afb:	add    BYTE PTR [rsi],ch
   140004afd:	(bad)  
   140004aff:	jae    0x140004b25
   140004b01:	xor    BYTE PTR [rax],dh
   140004b03:	add    BYTE PTR [rax+0x9000066],al
   140004b09:	add    BYTE PTR [rax],al
   140004b0b:	add    BYTE PTR [rsi],ch
   140004b0d:	(bad)  
   140004b0f:	jae    0x140004b35
   140004b11:	jp     0x140004b8d
   140004b13:	add    BYTE PTR [rax],al
   140004b15:	jo     0x140004b17
   140004b17:	add    BYTE PTR [rax],bh
   140004b19:	add    al,0x0
   140004b1b:	add    BYTE PTR [rsi],ch
   140004b1d:	jo     0x140004b83
   140004b1f:	(bad)  
   140004b20:	je     0x140004b83
   140004b22:	add    BYTE PTR [rax],al
   140004b24:	add    BYTE PTR [rax+0x300000],al
   140004b2a:	add    BYTE PTR [rax],al
   140004b2c:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   140004b36:	add    BYTE PTR [rax],al
   140004b38:	add    BYTE PTR [rax+0xf00000],dl
   140004b3e:	add    BYTE PTR [rax],al
   140004b40:	cs jb  0x140004bb6
   140004b43:	jb     0x140004ba8
   140004b45:	and    al,0x30
   140004b47:	xor    DWORD PTR [rax],eax
   140004b49:	add    BYTE PTR [rax],al
   140004b4b:	add    al,dh
   140004b4d:	nop
   140004b4e:	add    BYTE PTR [rax],al
   140004b50:	push   0x2e000007
   140004b55:	jb     0x140004bca
   140004b57:	jb     0x140004bbc
   140004b59:	and    al,0x30
   140004b5b:	xor    al,BYTE PTR [rax]
   140004b5d:	add    BYTE PTR [rax],al
   140004b5f:	add    BYTE PTR [rcx],bl
   140004b61:	and    eax,DWORD PTR [rbx]
   140004b63:	add    BYTE PTR [rdx],dl
   140004b65:	add    DWORD PTR [rcx+rax*1],ebx
   140004b68:	add    al,0x50
   140004b6a:	add    BYTE PTR [rax],al
   140004b6c:	pop    rsp
   140004b6d:	sub    eax,DWORD PTR [rax]
   140004b6f:	add    BYTE PTR [rax+0x21000008],dh
   140004b75:	cmp    BYTE PTR [rax+rax*1],cl
   140004b78:	cmp    ah,dh
   140004b7a:	sbb    BYTE PTR [rcx],al
   140004b7c:	xor    esp,esp
   140004b7e:	sbb    DWORD PTR [rcx],eax
   140004b80:	sub    al,ah
   140004b82:	sbb    eax,DWORD PTR [rcx]
   140004b84:	adc    dh,BYTE PTR [rax+riz*1+0x1]
   140004b88:	or     esp,DWORD PTR [rdi+rbx*1+0x1]
   140004b8c:	add    al,0x34
   140004b8e:	(bad)  
   140004b8f:	add    DWORD PTR [rax],edx
   140004b91:	adc    BYTE PTR [rax],al
   140004b93:	add    BYTE PTR [rax+0x10],al
   140004b96:	add    BYTE PTR [rax],al
   140004b98:	(bad)  
   140004b99:	rex.WXB add BYTE PTR [r8],al
   140004b9c:	and    DWORD PTR [rax],ecx
   140004b9e:	add    al,BYTE PTR [rax]
   140004ba0:	or     ah,dl
   140004ba2:	sbb    al,BYTE PTR [rcx]
   140004ba4:	adc    BYTE PTR [rax],al
   140004ba7:	add    BYTE PTR [rdi+0x74000012],al
   140004bad:	rex.WXB add BYTE PTR [r8],al
   140004bb0:	and    DWORD PTR [rax],eax
   140004bb2:	add    BYTE PTR [rax],al
   140004bb4:	adc    BYTE PTR [rax],al
   140004bb7:	add    BYTE PTR [rdi+0x74000012],al
   140004bbd:	rex.WXB add BYTE PTR [r8],al
   140004bc0:	and    DWORD PTR [rax],eax
   140004bc2:	add    al,BYTE PTR [rax]
   140004bc4:	add    ah,dl
   140004bc6:	sbb    al,BYTE PTR [rcx]
   140004bc8:	adc    BYTE PTR [rax],al
   140004bcb:	add    BYTE PTR [rdi+0x74000012],al
   140004bd1:	rex.WXB add BYTE PTR [r8],al
   140004bd4:	and    DWORD PTR [rax],eax
   140004bd6:	or     al,0x0
   140004bd8:	add    ah,dh
   140004bda:	sbb    BYTE PTR [rcx],al
   140004bdc:	add    ah,ah
   140004bde:	sbb    DWORD PTR [rcx],eax
   140004be0:	add    ah,al
   140004be2:	sbb    eax,DWORD PTR [rcx]
   140004be4:	add    BYTE PTR [rax+riz*1+0x1],dh
   140004be8:	add    BYTE PTR [rdi+rbx*1+0x1],ah
   140004bec:	add    BYTE PTR [rsi+rbx*1],dh
   140004bef:	add    DWORD PTR [rax],edx
   140004bf1:	adc    BYTE PTR [rax],al
   140004bf3:	add    BYTE PTR [rax+0x10],al
   140004bf6:	add    BYTE PTR [rax],al
   140004bf8:	(bad)  
   140004bf9:	rex.WXB add BYTE PTR [r8],al
   140004bfc:	and    DWORD PTR [rax],eax
   140004bfe:	(bad)  
   140004bff:	add    BYTE PTR [rax],al
   140004c01:	hlt    
   140004c02:	sbb    BYTE PTR [rcx],al
   140004c04:	add    ah,ah
   140004c06:	sbb    DWORD PTR [rcx],eax
   140004c08:	add    ah,dl
   140004c0a:	sbb    al,BYTE PTR [rcx]
   140004c0c:	add    ah,al
   140004c0e:	sbb    eax,DWORD PTR [rcx]
   140004c10:	add    BYTE PTR [rax+riz*1+0x1],dh
   140004c14:	add    BYTE PTR [rdi+rbx*1+0x1],ah
   140004c18:	add    BYTE PTR [rsi+rbx*1],dh
   140004c1b:	add    DWORD PTR [rax],edx
   140004c1d:	adc    BYTE PTR [rax],al
   140004c1f:	add    BYTE PTR [rax+0x10],al
   140004c22:	add    BYTE PTR [rax],al
   140004c24:	(bad)  
   140004c25:	rex.WXB add BYTE PTR [r8],al
   140004c28:	and    DWORD PTR [rax],eax
   140004c2a:	or     al,0x0
   140004c2c:	add    ah,dh
   140004c2e:	sbb    BYTE PTR [rcx],al
   140004c30:	add    ah,ah
   140004c32:	sbb    DWORD PTR [rcx],eax
   140004c34:	add    ah,al
   140004c36:	sbb    eax,DWORD PTR [rcx]
   140004c38:	add    BYTE PTR [rax+riz*1+0x1],dh
   140004c3c:	add    BYTE PTR [rdi+rbx*1+0x1],ah
   140004c40:	add    BYTE PTR [rsi+rbx*1],dh
   140004c43:	add    DWORD PTR [rax],edx
   140004c45:	adc    BYTE PTR [rax],al
   140004c47:	add    BYTE PTR [rax+0x10],al
   140004c4a:	add    BYTE PTR [rax],al
   140004c4c:	(bad)  
   140004c4d:	rex.WXB add BYTE PTR [r8],al
   140004c50:	and    DWORD PTR [rax],eax
   140004c52:	or     al,BYTE PTR [rax]
   140004c54:	add    ah,ah
   140004c56:	sbb    DWORD PTR [rcx],eax
   140004c58:	add    ah,al
   140004c5a:	sbb    eax,DWORD PTR [rcx]
   140004c5c:	add    BYTE PTR [rax+riz*1+0x1],dh
   140004c60:	add    BYTE PTR [rdi+rbx*1+0x1],ah
   140004c64:	add    BYTE PTR [rsi+rbx*1],dh
   140004c67:	add    DWORD PTR [rax],edx
   140004c69:	adc    BYTE PTR [rax],al
   140004c6b:	add    BYTE PTR [rax+0x10],al
   140004c6e:	add    BYTE PTR [rax],al
   140004c70:	(bad)  
   140004c71:	rex.WXB add BYTE PTR [r8],al
   140004c74:	and    DWORD PTR [rax],eax
   140004c76:	add    al,0x0
   140004c78:	add    BYTE PTR [rax+riz*1+0x1],dh
   140004c7c:	add    BYTE PTR [rsi+rbx*1],dh
   140004c7f:	add    DWORD PTR [rax],edx
   140004c81:	adc    BYTE PTR [rax],al
   140004c83:	add    BYTE PTR [rax+0x10],al
   140004c86:	add    BYTE PTR [rax],al
   140004c88:	(bad)  
   140004c89:	rex.WXB add BYTE PTR [r8],al
   140004c8c:	and    DWORD PTR [rax],eax
   140004c8e:	add    BYTE PTR [rax],al
   140004c90:	adc    BYTE PTR [rax],dl
   140004c92:	add    BYTE PTR [rax],al
   140004c94:	adc    BYTE PTR [rax],al
   140004c97:	add    BYTE PTR [rax+0x4b],ah
   140004c9a:	add    BYTE PTR [rax],al
   140004c9c:	add    DWORD PTR [rcx],ecx
   140004c9e:	add    al,0x0
   140004ca0:	or     DWORD PTR [rdx],esi
   140004ca2:	add    eax,0x26003e0
   140004ca7:	xor    BYTE PTR [rcx],ah
   140004ca9:	add    eax,0xf4050002
   140004cae:	or     eax,DWORD PTR [rax]
   140004cb0:	nop
   140004cb1:	(bad)  
   140004cb2:	add    BYTE PTR [rax],al
   140004cb4:	mov    edx,0x9c000017
   140004cb9:	rex.WR add BYTE PTR [rax],r8b
   140004cbc:	and    DWORD PTR [rdi],ecx
   140004cbe:	(bad)  
   140004cbf:	add    BYTE PTR [rdi],cl
   140004cc1:	(bad)  
   140004cc2:	or     al,BYTE PTR [rax]
   140004cc4:	or     dh,BYTE PTR [rcx+rcx*1+0x0]
   140004cc8:	add    eax,0xba000854
   140004ccd:	(bad)  
   140004cce:	add    BYTE PTR [rax],al
   140004cd0:	in     al,dx
   140004cd1:	(bad)  
   140004cd2:	add    BYTE PTR [rax],al
   140004cd4:	test   al,0x4c
   140004cd6:	add    BYTE PTR [rax],al
   140004cd8:	and    DWORD PTR [rax],eax
   140004cda:	add    BYTE PTR [rax],al
   140004cdc:	mov    edx,0xec000017
   140004ce1:	(bad)  
   140004ce2:	add    BYTE PTR [rax],al
   140004ce4:	test   al,0x4c
   140004ce6:	add    BYTE PTR [rax],al
   140004ce8:	and    DWORD PTR [rax],eax
   140004cea:	add    BYTE PTR [rax],al
   140004cec:	nop
   140004ced:	(bad)  
   140004cee:	add    BYTE PTR [rax],al
   140004cf0:	mov    edx,0x9c000017
   140004cf5:	rex.WR add BYTE PTR [rax],r8b
   140004cf8:	and    DWORD PTR [rax],eax
   140004cfa:	add    al,BYTE PTR [rax]
   140004cfc:	add    ah,dh
   140004cfe:	or     eax,DWORD PTR [rax]
   140004d00:	nop
   140004d01:	(bad)  
   140004d02:	add    BYTE PTR [rax],al
   140004d04:	mov    edx,0x9c000017
   140004d09:	rex.WR add BYTE PTR [rax],r8b
   140004d0c:	and    DWORD PTR [rax],eax
   140004d0e:	or     BYTE PTR [rax],al
   140004d10:	add    ah,dh
   140004d12:	or     eax,DWORD PTR [rax]
   140004d14:	add    ah,al
   140004d16:	or     al,BYTE PTR [rax]
   140004d18:	add    BYTE PTR [rcx+rcx*1+0x0],dh
   140004d1c:	add    BYTE PTR [rax+rcx*1+0x0],dl
   140004d20:	nop
   140004d21:	(bad)  
   140004d22:	add    BYTE PTR [rax],al
   140004d24:	mov    edx,0x9c000017
   140004d29:	rex.WR add BYTE PTR [rax],r8b
   140004d2c:	and    DWORD PTR [rax],eax
   140004d2e:	add    BYTE PTR [rax],al
   140004d30:	nop
   140004d31:	(bad)  
   140004d32:	add    BYTE PTR [rax],al
   140004d34:	mov    edx,0x9c000017
   140004d39:	rex.WR add BYTE PTR [rax],r8b
   140004d3c:	add    DWORD PTR [rip+0x340d0006],ecx        # 0x1740d4d48
   140004d42:	or     al,BYTE PTR [rax]
   140004d44:	or     eax,0x7e00932
   140004d49:	(bad)  
   140004d4a:	(bad)  
   140004d4b:	push   rax
   140004d4c:	and    DWORD PTR [rdx],ecx
   140004d4e:	add    al,0x0
   140004d50:	or     dh,ah
   140004d52:	or     DWORD PTR [rax],eax
   140004d54:	add    eax,0xa0000874
   140004d59:	sbb    BYTE PTR [rax],al
   140004d5b:	add    ah,al
   140004d5d:	sbb    BYTE PTR [rax],al
   140004d5f:	add    BYTE PTR [rcx*2+0x210000],bh
   140004d66:	add    BYTE PTR [rax],al
   140004d68:	movabs al,ds:0x3c000018c4000018
   140004d71:	rex.WRB add BYTE PTR [r8],r8b
   140004d74:	and    DWORD PTR [rax],eax
   140004d76:	add    BYTE PTR [rax],al
   140004d78:	movabs al,ds:0x3c000018c4000018
   140004d81:	rex.WRB add BYTE PTR [r8],r8b
   140004d84:	and    DWORD PTR [rax],eax
   140004d86:	add    al,0x0
   140004d88:	add    ah,dh
   140004d8a:	or     DWORD PTR [rax],eax
   140004d8c:	add    BYTE PTR [rax+rcx*1+0x0],dh
   140004d90:	xor    eax,DWORD PTR cs:[rax]
   140004d93:	add    BYTE PTR [rbx],bh
   140004d95:	xor    eax,DWORD PTR [rax]
   140004d97:	add    BYTE PTR [rbp+rcx*2+0x0],dh
   140004d9b:	add    BYTE PTR [rcx],al
   140004d9d:	or     al,BYTE PTR [rax+rax*1]
   140004da0:	or     dh,BYTE PTR [rsi+rax*1]
   140004da3:	add    BYTE PTR [rdx],cl
   140004da5:	xor    al,BYTE PTR [rsi]
   140004da7:	jo     0x140004dca
   140004da9:	add    BYTE PTR [rax],al
   140004dab:	add    BYTE PTR [rax+0x19],dh
   140004dae:	add    BYTE PTR [rax],al
   140004db0:	(bad)  
   140004db1:	sbb    DWORD PTR [rax],eax
   140004db3:	add    BYTE PTR [rbp+rcx*2+0xa010000],bl
   140004dba:	add    al,0x0
   140004dbc:	or     dh,BYTE PTR [rsi+rax*1]
   140004dbf:	add    BYTE PTR [rdx],cl
   140004dc1:	xor    al,BYTE PTR [rsi]
   140004dc3:	jo     0x140004dc6
   140004dc5:	clts   
   140004dc7:	add    BYTE PTR [rdi],cl
   140004dc9:	or     DWORD PTR fs:[rax],eax
   140004dcc:	sysenter 
   140004dce:	or     BYTE PTR [rax],al
   140004dd0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140004dd3:	jo     0x140004df6
   140004dd5:	add    BYTE PTR [rax],al
   140004dd7:	add    BYTE PTR [rax+0x1a],dh
   140004dda:	add    BYTE PTR [rax],al
   140004ddc:	mov    edi,0xc400001a
   140004de1:	rex.WRB add BYTE PTR [r8],r8b
   140004de4:	add    DWORD PTR [rdi],ecx
   140004de6:	(bad)  
   140004de7:	add    BYTE PTR [rdi],cl
   140004de9:	fs (bad) 
   140004deb:	add    BYTE PTR [rdi],cl
   140004ded:	xor    al,0x6
   140004def:	add    BYTE PTR [rdi],cl
   140004df1:	xor    cl,BYTE PTR [rbx]
   140004df3:	jo     0x140004e16
   140004df5:	add    BYTE PTR [rax],al
   140004df7:	add    al,dl
   140004df9:	sbb    al,BYTE PTR [rax]
   140004dfb:	add    BYTE PTR [rip+0xffffffffe400001b],ch        # 0x124004e1c
   140004e01:	rex.WRB add BYTE PTR [r8],r8b
   140004e04:	add    DWORD PTR [rdx],ecx
   140004e06:	add    al,0x0
   140004e08:	or     ah,BYTE PTR [rax+rcx*1+0x0]
   140004e0c:	or     dh,BYTE PTR [rdx]
   140004e0e:	(bad)  
   140004e0f:	jo     0x140004e32
   140004e11:	add    eax,0x34050002
   140004e16:	(bad)  
   140004e17:	add    BYTE PTR [rax+0x1b],al
   140004e1a:	add    BYTE PTR [rax],al
   140004e1c:	pop    rcx
   140004e1d:	sbb    eax,DWORD PTR [rax]
   140004e1f:	add    BYTE PTR [rsi+rcx*2],al
   140004e22:	add    BYTE PTR [rax],al
   140004e24:	and    DWORD PTR [rax],eax
   140004e26:	add    BYTE PTR [rax],al
   140004e28:	rex sbb eax,DWORD PTR [rax]
   140004e2b:	add    BYTE PTR [rcx+0x1b],bl
   140004e2e:	add    BYTE PTR [rax],al
   140004e30:	add    al,0x4e
   140004e32:	add    BYTE PTR [rax],al
   140004e34:	and    DWORD PTR [rax],eax
   140004e36:	add    al,BYTE PTR [rax]
   140004e38:	add    BYTE PTR [rsi+rax*1],dh
   140004e3b:	add    BYTE PTR [rax+0x1b],al
   140004e3e:	add    BYTE PTR [rax],al
   140004e40:	pop    rcx
   140004e41:	sbb    eax,DWORD PTR [rax]
   140004e43:	add    BYTE PTR [rsi+rcx*2],al
   140004e46:	add    BYTE PTR [rax],al
   140004e48:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x124054e50
   140004e4e:	(bad)  
   140004e4f:	add    BYTE PTR [rsi],cl
   140004e51:	sbb    al,0x0
   140004e53:	add    BYTE PTR [rbx+0x1c],bl
   140004e56:	add    BYTE PTR [rax],al
   140004e58:	xor    al,0x4e
   140004e5a:	add    BYTE PTR [rax],al
   140004e5c:	and    DWORD PTR [rax],eax
   140004e5e:	add    BYTE PTR [rax],al
   140004e60:	(bad)  
   140004e61:	sbb    al,0x0
   140004e63:	add    BYTE PTR [rbx+0x1c],bl
   140004e66:	add    BYTE PTR [rax],al
   140004e68:	xor    al,0x4e
   140004e6a:	add    BYTE PTR [rax],al
   140004e6c:	and    DWORD PTR [rax],eax
   140004e6e:	add    BYTE PTR [rax],al
   140004e70:	rex sbb eax,DWORD PTR [rax]
   140004e73:	add    BYTE PTR [rcx+0x1b],bl
   140004e76:	add    BYTE PTR [rax],al
   140004e78:	add    al,0x4e
   140004e7a:	add    BYTE PTR [rax],al
   140004e7c:	and    DWORD PTR [rax],eax
   140004e7e:	add    al,BYTE PTR [rax]
   140004e80:	add    BYTE PTR [rsi+rax*1],dh
   140004e83:	add    dl,bh
   140004e85:	xor    eax,DWORD PTR [rax]
   140004e87:	add    BYTE PTR [rsp+rsi*1],al
   140004e8a:	add    BYTE PTR [rax],al
   140004e8c:	ins    BYTE PTR es:[rdi],dx
   140004e8d:	rex.WRX add BYTE PTR [rax],r8b
   140004e90:	add    DWORD PTR [rdx],ecx
   140004e92:	add    al,0x0
   140004e94:	or     dh,BYTE PTR [rdi+rax*1]
   140004e97:	add    BYTE PTR [rdx],cl
   140004e99:	xor    al,BYTE PTR [rsi]
   140004e9b:	(bad)  
   140004e9c:	and    DWORD PTR [rax],eax
   140004e9e:	add    BYTE PTR [rax],al
   140004ea0:	rcr    BYTE PTR [rax+rax*1],0x0
   140004ea4:	jmp    0x140004ec2
   140004ea6:	add    BYTE PTR [rax],al
   140004ea8:	nop
   140004ea9:	rex.WRX add BYTE PTR [rax],r8b
   140004eac:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4054eb4
   140004eb2:	(bad)  
   140004eb3:	add    BYTE PTR [rax],ah
   140004eb5:	xor    al,0x0
   140004eb7:	add    BYTE PTR [rsp+rsi*1],ch
   140004eba:	add    BYTE PTR [rax],al
   140004ebc:	pushf  
   140004ebd:	rex.WRX add BYTE PTR [rax],r8b
   140004ec0:	add    DWORD PTR [rdi],eax
   140004ec2:	add    eax,DWORD PTR [rax]
   140004ec4:	(bad)  
   140004ec5:	(bad)  
   140004ec6:	add    esp,DWORD PTR [rax+0x2]
   140004ec9:	xor    BYTE PTR [rax],al
   140004ecb:	add    BYTE PTR [rcx],ah
   140004ecd:	push   rdx
   140004ece:	(bad)  
   140004ecf:	add    BYTE PTR [rdx+0x74],dl
   140004ed2:	(bad)  
   140004ed3:	add    BYTE PTR [rip+0x50006e4],cl        # 0x1450055bd
   140004ed9:	push   rsp
   140004eda:	or     BYTE PTR [rax],al
   140004edc:	and    BYTE PTR [rip+0x1d270000],bl        # 0x15d274ee2
   140004ee2:	add    BYTE PTR [rax],al
   140004ee4:	ror    BYTE PTR [rsi+0x0],0x0
   140004ee8:	and    DWORD PTR [rax],eax
   140004eea:	add    al,BYTE PTR [rax]
   140004eec:	add    BYTE PTR [rdi+rax*1+0x0],dh
   140004ef0:	and    BYTE PTR [rip+0x1d270000],bl        # 0x15d274ef6
   140004ef6:	add    BYTE PTR [rax],al
   140004ef8:	ror    BYTE PTR [rsi+0x0],0x0
   140004efc:	and    DWORD PTR [rax],eax
   140004efe:	add    al,0x0
   140004f00:	add    ah,ah
   140004f02:	(bad)  
   140004f03:	add    BYTE PTR [rax],al
   140004f05:	push   rsp
   140004f06:	or     BYTE PTR [rax],al
   140004f08:	and    BYTE PTR [rip+0x1d270000],bl        # 0x15d274f0e
   140004f0e:	add    BYTE PTR [rax],al
   140004f10:	ror    BYTE PTR [rsi+0x0],0x0
   140004f14:	and    DWORD PTR [rax],eax
   140004f16:	(bad)  
   140004f17:	add    BYTE PTR [rax],al
   140004f19:	in     al,0x6
   140004f1b:	add    BYTE PTR [rax],al
   140004f1d:	je     0x140004f26
   140004f1f:	add    BYTE PTR [rax],al
   140004f21:	push   rsp
   140004f22:	or     BYTE PTR [rax],al
   140004f24:	and    BYTE PTR [rip+0x1d270000],bl        # 0x15d274f2a
   140004f2a:	add    BYTE PTR [rax],al
   140004f2c:	ror    BYTE PTR [rsi+0x0],0x0
   140004f30:	add    DWORD PTR [rdx],ecx
   140004f32:	add    al,0x0
   140004f34:	or     dh,BYTE PTR [rax+rcx*1]
   140004f37:	add    BYTE PTR [rdx],cl
   140004f39:	push   rdx
   140004f3a:	(bad)  
   140004f3b:	jo     0x140004f5e
   140004f3d:	add    BYTE PTR [rax],al
   140004f3f:	add    BYTE PTR [rax],ah
   140004f41:	(bad)  
   140004f42:	add    BYTE PTR [rax],al
   140004f44:	jno    0x140004f65
   140004f46:	add    BYTE PTR [rax],al
   140004f48:	xor    BYTE PTR [rdi+0x0],cl
   140004f4b:	add    BYTE PTR [rcx],al
   140004f4d:	add    al,0x1
   140004f4f:	add    BYTE PTR [rdx+riz*2],al
   140004f52:	add    BYTE PTR [rax],al
   140004f54:	add    DWORD PTR [rsi],eax
   140004f56:	add    al,BYTE PTR [rax]
   140004f58:	(bad)  
   140004f59:	xor    al,BYTE PTR [rdx]
   140004f5b:	xor    BYTE PTR [rcx],al
   140004f5d:	(bad)  
   140004f5e:	add    al,BYTE PTR [rax]
   140004f60:	(bad)  
   140004f61:	xor    al,BYTE PTR [rdx]
   140004f63:	jo     0x140004f86
   140004f65:	add    eax,0x34050002
   140004f6a:	(bad)  
   140004f6b:	add    al,ah
   140004f6d:	xor    eax,0x35f10000
   140004f72:	add    BYTE PTR [rax],al
   140004f74:	pop    rsp
   140004f75:	rex.WRXB add BYTE PTR [r8],r8b
   140004f78:	and    DWORD PTR [rax],eax
   140004f7a:	add    BYTE PTR [rax],al
   140004f7c:	loopne 0x140004fb3
   140004f7e:	add    BYTE PTR [rax],al
   140004f80:	icebp  
   140004f81:	xor    eax,0x4f5c0000
   140004f86:	add    BYTE PTR [rax],al
   140004f88:	add    DWORD PTR [rcx+rax*1],eax
   140004f8b:	add    BYTE PTR [rdx+rax*2],al
   140004f8e:	add    BYTE PTR [rax],al
   140004f90:	or     DWORD PTR [rbx+rcx*1],ebx
   140004f93:	add    BYTE PTR [rsp+rsi*2],bl
   140004f96:	sbb    al,0x0
   140004f98:	sbb    al,0x64
   140004f9a:	sbb    eax,DWORD PTR [rax]
   140004f9c:	sbb    al,0x34
   140004f9e:	sbb    al,BYTE PTR [rax]
   140004fa0:	sbb    al,0x1
   140004fa2:	(bad)  
   140004fa3:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e06399
   140004fa9:	rol    BYTE PTR [rax],0x0
   140004fac:	data16 (bad) 
   140004fae:	add    BYTE PTR [rax],al
   140004fb0:	add    DWORD PTR [rax],eax
   140004fb2:	add    BYTE PTR [rax],al
   140004fb4:	movabs al,ds:0x8600002396000021
   140004fbd:	sub    al,0x0
   140004fbf:	add    BYTE PTR [rsi+0x1000023],dl
   140004fc5:	(bad)  
   140004fc6:	add    al,BYTE PTR [rax]
   140004fc8:	(bad)  
   140004fc9:	xor    al,BYTE PTR [rdx]
   140004fcb:	push   rax
   140004fcc:	add    BYTE PTR [rax],al
   140004fce:	add    BYTE PTR [rax],al
   140004fd0:	add    DWORD PTR [rax],eax
   140004fd2:	add    BYTE PTR [rax],al
   140004fd4:	or     DWORD PTR [rcx+rax*1],eax
   140004fd7:	add    BYTE PTR [rdx+riz*1],al
   140004fda:	add    BYTE PTR [rax],al
   140004fdc:	data16 (bad) 
   140004fde:	add    BYTE PTR [rax],al
   140004fe0:	add    DWORD PTR [rax],eax
   140004fe2:	add    BYTE PTR [rax],al
   140004fe4:	in     al,dx
   140004fe5:	and    al,0x0
   140004fe7:	add    BYTE PTR [rdx],ah
   140004fe9:	and    eax,0x10000
   140004fee:	add    BYTE PTR [rax],al
   140004ff0:	and    ah,BYTE PTR [rip+0xa090000]        # 0x14a094ff6
   140004ff6:	add    al,0x0
   140004ff8:	or     dh,BYTE PTR [rsi+rax*1]
   140004ffb:	add    BYTE PTR [rdx],cl
   140004ffd:	xor    al,BYTE PTR [rsi]
   140004fff:	jo     0x140005067
   140005001:	(bad)  
   140005002:	add    BYTE PTR [rax],al
   140005004:	add    DWORD PTR [rax],eax
   140005006:	add    BYTE PTR [rax],al
   140005008:	in     eax,dx
   140005009:	and    eax,0x26200000
   14000500e:	add    BYTE PTR [rax],al
   140005010:	mov    al,0x2c
   140005012:	add    BYTE PTR [rax],al
   140005014:	and    BYTE PTR [rsi],ah
   140005016:	add    BYTE PTR [rax],al
   140005018:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d5022
   14000501e:	or     DWORD PTR [rax],eax
   140005020:	or     eax,0x1500632
   140005025:	or     al,0x2
   140005027:	add    BYTE PTR [rcx+rax*1],cl
   14000502a:	adc    DWORD PTR [rax],eax
   14000502c:	add    BYTE PTR [rax],al
   14000502e:	add    BYTE PTR [rax],al
   140005030:	add    DWORD PTR [rax],eax
   140005032:	add    BYTE PTR [rax],al
   140005034:	add    DWORD PTR [rax],ebx
   140005036:	add    DWORD PTR [rax],eax
   140005038:	sbb    dl,al
   14000503a:	add    BYTE PTR [rax],al
   14000503c:	add    DWORD PTR [rax],ebx
   14000503e:	add    DWORD PTR [rax],eax
   140005040:	sbb    dl,al
   140005042:	add    BYTE PTR [rax],al
   140005044:	add    DWORD PTR [rbx],ecx
   140005046:	add    DWORD PTR [rax],eax
   140005048:	or     esp,DWORD PTR [rdx+0x9010000]
   14000504e:	add    DWORD PTR [rax],eax
   140005050:	or     DWORD PTR [rdx+0x9010000],esp
   140005056:	add    DWORD PTR [rax],eax
   140005058:	or     DWORD PTR [rdx+0xa010000],eax
   14000505e:	add    al,0x0
   140005060:	or     dh,BYTE PTR [rax+rcx*1]
   140005063:	add    BYTE PTR [rdx],cl
   140005065:	push   rdx
   140005066:	(bad)  
   140005067:	jo     0x140005082
   140005069:	(bad)  
   14000506a:	(bad)  
   14000506b:	add    BYTE PTR [rdi],cl
   14000506d:	adc    DWORD PTR fs:[rax],eax
   140005070:	sysenter 
   140005072:	adc    BYTE PTR [rax],al
   140005074:	lss    ecx,FWORD PTR [rbx]
   140005077:	jo     0x1400050d5
   140005079:	sub    eax,DWORD PTR [rax]
   14000507b:	add    BYTE PTR [rax+0x0],dl
   14000507e:	add    BYTE PTR [rax],al
   140005080:	add    DWORD PTR [rdi],ecx
   140005082:	(bad)  
   140005083:	add    BYTE PTR [rdi],cl
   140005085:	fs (bad) 
   140005087:	add    BYTE PTR [rdi],cl
   140005089:	xor    al,0x6
   14000508b:	add    BYTE PTR [rdi],cl
   14000508d:	xor    cl,BYTE PTR [rbx]
   14000508f:	jo     0x140005092
   140005091:	(bad)  
   140005092:	add    al,BYTE PTR [rax]
   140005094:	(bad)  
   140005095:	push   rdx
   140005096:	add    dh,BYTE PTR [rax]
   140005098:	add    DWORD PTR [rax+0x6],ecx
   14000509b:	add    BYTE PTR [rax+0x74],cl
   14000509e:	or     al,BYTE PTR [rax]
   1400050a0:	rex.XB xor al,0x9
   1400050a3:	add    BYTE PTR [rsi],al
   1400050a5:	push   rdx
   1400050a6:	add    ah,BYTE PTR [rax+0x1]
   1400050a9:	add    BYTE PTR [rax],al
   1400050ab:	add    BYTE PTR [rax-0x1fffffbb],dh
   1400050b1:	add    BYTE PTR gs:[rax],al
   1400050b4:	sbb    BYTE PTR [rax+0x51200000],al
   1400050ba:	add    BYTE PTR [rax],al
   1400050bc:	cwde   
   1400050bd:	push   rcx
	...
   1400050c6:	add    BYTE PTR [rax],al
   1400050c8:	add    DWORD PTR [rax],eax
   1400050ca:	add    BYTE PTR [rax],al
   1400050cc:	(bad)  
   1400050cd:	rex.RX add BYTE PTR [rax],r8b
   1400050d0:	lock add BYTE PTR gs:[rax],al
   1400050d4:	add    BYTE PTR [rax+0x51080000],al
   1400050da:	add    BYTE PTR [rax],al
   1400050dc:	mov    al,0x51
	...
   140005106:	add    BYTE PTR [rax],al
   140005108:	fs push rcx
   14000510a:	add    BYTE PTR [rax],al
   14000510c:	add    BYTE PTR [rax],al
   14000510e:	add    BYTE PTR [rax],al
   140005110:	jl     0x140005163
	...
   14000511e:	add    BYTE PTR [rax],al
   140005120:	push   rax
   140005121:	push   rcx
   140005122:	add    BYTE PTR [rax],al
   140005124:	add    BYTE PTR [rax],al
   140005126:	add    BYTE PTR [rax],al
   140005128:	cmp    BYTE PTR [rcx+0x0],dl
	...
   140005137:	add    BYTE PTR [rax],al
   140005139:	add    BYTE PTR [rdi+0x65],al
   14000513c:	je     0x140005190
   14000513e:	jne    0x1400051ae
   140005140:	outs   dx,BYTE PTR ds:[rsi]
   140005141:	imul   ebp,DWORD PTR [rsi+0x67],0x656a624f
   140005148:	movsxd esi,DWORD PTR [rsp+rdx*2+0x61]
   14000514c:	(bad)  
   14000514d:	ins    BYTE PTR es:[rdi],dx
   14000514e:	add    BYTE PTR gs:[rax],al
   140005151:	add    BYTE PTR [rbx+0x72],al
   140005154:	gs (bad) 
   140005156:	je     0x1400051bd
   140005158:	rex.WB je 0x1400051c0
   14000515b:	ins    DWORD PTR es:[rdi],dx
   14000515c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000515e:	outs   dx,BYTE PTR ds:[rsi]
   14000515f:	imul   ebp,DWORD PTR [rbx+0x65],0x72
   140005166:	push   rdx
   140005167:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65537265
   140005170:	jb     0x1400051e8
   140005172:	gs jb  0x1400051bb
   140005175:	outs   dx,DWORD PTR ds:[rsi]
   140005176:	jb     0x1400051c8
   140005178:	rex.WRB push r8
   14000517a:	add    BYTE PTR [rax],al
   14000517c:	add    BYTE PTR [rax],al
   14000517e:	push   rbp
   14000517f:	outs   dx,BYTE PTR ds:[rsi]
   140005180:	jb     0x1400051e7
   140005182:	imul   esi,DWORD PTR [ebx+0x74],0x65537265
   14000518a:	jb     0x140005202
   14000518c:	gs jb  0x1400051d5
   14000518f:	outs   dx,DWORD PTR ds:[rsi]
   140005190:	jb     0x1400051e2
   140005192:	rex.WRB push r8
	...
   1400051c8:	rcl    BYTE PTR [rbp+0x0],1
	...
   1400051d3:	add    BYTE PTR [rdi+rdx*2+0x0],dh
   1400051d7:	add    BYTE PTR [rax+0x42],ah
   1400051da:	add    BYTE PTR [rax],al
   1400051dc:	movabs al,ds:0x54
   1400051e5:	add    BYTE PTR [rax],al
   1400051e7:	add    BYTE PTR [rax+0x3000005b],cl
   1400051ed:	add    BYTE PTR [r8],al
   1400051f0:	rcl    BYTE PTR [rbp+0x0],0x0
	...
   1400051fc:	mov    dh,0x5b
   1400051fe:	add    BYTE PTR [rax],al
   140005200:	push   rax
   140005201:	rex.X add BYTE PTR [rax],al
   140005204:	and    BYTE PTR [rax+rax*1+0x0],dl
	...
   140005210:	out    0x5b,al
   140005212:	add    BYTE PTR [rax],al
   140005214:	mov    al,0x40
   140005216:	add    BYTE PTR [rax],al
   140005218:	push   0x54
   14000521d:	add    BYTE PTR [rax],al
   14000521f:	add    BYTE PTR [rax],al
   140005221:	add    BYTE PTR [rax],al
   140005223:	add    BYTE PTR [rax],dl
   140005225:	pop    rsp
   140005226:	add    BYTE PTR [rax],al
   140005228:	clc    
   140005229:	add    BYTE PTR [rax],al
   14000522c:	mov    eax,0x53
   140005231:	add    BYTE PTR [rax],al
   140005233:	add    BYTE PTR [rax],al
   140005235:	add    BYTE PTR [rax],al
   140005237:	add    BYTE PTR [rax],dh
   140005239:	pop    rsp
   14000523a:	add    BYTE PTR [rax],al
   14000523c:	rex.W
   14000523d:	add    BYTE PTR [rax],al
   140005240:	test   al,0x55
	...
   14000524a:	add    BYTE PTR [rax],al
   14000524c:	push   rax
   14000524d:	pop    rsp
   14000524e:	add    BYTE PTR [rax],al
   140005250:	cmp    BYTE PTR [rdx+0x0],al
   140005253:	add    BYTE PTR [rax],ah
   140005255:	push   rbp
	...
   14000525e:	add    BYTE PTR [rax],al
   140005260:	js     0x1400052be
   140005262:	add    BYTE PTR [rax],al
   140005264:	mov    al,0x41
   140005266:	add    BYTE PTR [rax],al
   140005268:	cwde   
   140005269:	push   rbp
	...
   140005272:	add    BYTE PTR [rax],al
   140005274:	(bad)  
   140005275:	pop    rsp
   140005276:	add    BYTE PTR [rax],al
   140005278:	sub    BYTE PTR [rdx+0x0],al
   14000527b:	add    BYTE PTR [rax+0x54],bh
   140005281:	add    BYTE PTR [rax],al
   140005283:	add    BYTE PTR [rax],al
   140005285:	add    BYTE PTR [rax],al
   140005287:	add    BYTE PTR [rsp+rbx*2+0x41480000],bh
   14000528e:	add    BYTE PTR [rax],al
   140005290:	pop    rax
   140005291:	push   rsp
	...
   14000529a:	add    BYTE PTR [rax],al
   14000529c:	out    0x5c,al
   14000529e:	add    BYTE PTR [rax],al
   1400052a0:	call   0xd00052e5
   1400052a5:	push   rsp
	...
   1400052ae:	add    BYTE PTR [rax],al
   1400052b0:	or     BYTE PTR [rbp+0x0],bl
   1400052b3:	add    BYTE PTR [rax],ah
   1400052b5:	add    BYTE PTR [r8],al
   1400052b8:	lock push rsp
	...
   1400052c2:	add    BYTE PTR [rax],al
   1400052c4:	xor    bl,BYTE PTR [rbp+0x0]
   1400052c7:	add    BYTE PTR [rax-0x7fffffbf],al
   1400052cd:	push   rbp
	...
   1400052d6:	add    BYTE PTR [rax],al
   1400052d8:	push   rsi
   1400052d9:	pop    rbp
   1400052da:	add    BYTE PTR [rax],al
   1400052dc:	adc    BYTE PTR [rdx+0x0],al
   1400052df:	add    BYTE PTR [rax],al
   1400052e1:	push   rbp
	...
   1400052ea:	add    BYTE PTR [rax],al
   1400052ec:	jp     0x14000534b
   1400052ee:	add    BYTE PTR [rax],al
   1400052f0:	nop
   1400052f1:	add    BYTE PTR [r8],al
   1400052f4:	cwde   
   1400052f5:	push   rbx
	...
   1400052fe:	add    BYTE PTR [rax],al
   140005300:	mov    dh,0x5d
   140005302:	add    BYTE PTR [rax],al
   140005304:	sub    BYTE PTR [rax+0x0],al
   140005307:	add    BYTE PTR [rax+0x53],dh
	...
   140005312:	add    BYTE PTR [rax],al
   140005314:	lock pop rbp
   140005316:	add    BYTE PTR [rax],al
   140005318:	add    BYTE PTR [rax+0x0],al
   14000531b:	add    BYTE PTR [rax+0x53],al
   140005321:	add    BYTE PTR [rax],al
   140005323:	add    BYTE PTR [rax],al
   140005325:	add    BYTE PTR [rax],al
   140005327:	add    BYTE PTR [rsi],dl
   140005329:	pop    rsi
   14000532a:	add    BYTE PTR [rax],al
   14000532c:	adc    BYTE PTR [rax+0x0],al
   14000532f:	add    BYTE PTR [rax],cl
   140005331:	push   rsp
	...
   14000533a:	add    BYTE PTR [rax],al
   14000533c:	push   rdx
   14000533d:	pop    rsi
   14000533e:	add    BYTE PTR [rax],al
   140005340:	cwde   
   140005341:	add    BYTE PTR [rax],al
   140005344:	test   al,0x53
	...
   14000534e:	add    BYTE PTR [rax],al
   140005350:	xchg   esp,eax
   140005351:	pop    rsi
   140005352:	add    BYTE PTR [rax],al
   140005354:	cmp    BYTE PTR [rax+0x0],al
	...
   14000536f:	add    dh,bl
   140005371:	pop    rbp
	...
   14000537e:	add    BYTE PTR [rax],al
   140005380:	or     bl,BYTE PTR [rsi+0x0]
   140005383:	add    BYTE PTR [rax],al
   140005385:	add    BYTE PTR [rax],al
   140005387:	add    ah,bh
   140005389:	pop    rbp
	...
   140005396:	add    BYTE PTR [rax],al
   140005398:	movabs al,ds:0x5d
   1400053a1:	add    BYTE PTR [rax],al
   1400053a3:	add    BYTE PTR [rax],al
   1400053a5:	add    BYTE PTR [rax],al
   1400053a7:	add    BYTE PTR [rax+0x5e],bh
	...
   1400053b6:	add    BYTE PTR [rax],al
   1400053b8:	movabs ds:0xdc00000000000058,al
   1400053c1:	pop    rax
   1400053c2:	add    BYTE PTR [rax],al
   1400053c4:	add    BYTE PTR [rax],al
   1400053c6:	add    BYTE PTR [rax],al
   1400053c8:	hlt    
   1400053c9:	pop    rax
   1400053ca:	add    BYTE PTR [rax],al
   1400053cc:	add    BYTE PTR [rax],al
   1400053ce:	add    BYTE PTR [rax],al
   1400053d0:	adc    al,0x59
   1400053d2:	add    BYTE PTR [rax],al
   1400053d4:	add    BYTE PTR [rax],al
   1400053d6:	add    BYTE PTR [rax],al
   1400053d8:	rcl    BYTE PTR [rdi+0x0],cl
   1400053db:	add    BYTE PTR [rax],al
   1400053dd:	add    BYTE PTR [rax],al
   1400053df:	add    BYTE PTR [rdx],bh
   1400053e1:	pop    rcx
   1400053e2:	add    BYTE PTR [rax],al
   1400053e4:	add    BYTE PTR [rax],al
   1400053e6:	add    BYTE PTR [rax],al
   1400053e8:	js     0x140005443
   1400053ea:	add    BYTE PTR [rax],al
   1400053ec:	add    BYTE PTR [rax],al
   1400053ee:	add    BYTE PTR [rax],al
   1400053f0:	lods   al,BYTE PTR ds:[rsi]
   1400053f1:	pop    rcx
   1400053f2:	add    BYTE PTR [rax],al
   1400053f4:	add    BYTE PTR [rax],al
   1400053f6:	add    BYTE PTR [rax],al
   1400053f8:	cwde   
   1400053f9:	pop    rcx
	...
   140005406:	add    BYTE PTR [rax],al
   140005408:	cmp    bl,BYTE PTR [rsi+0x0]
   14000540b:	add    BYTE PTR [rax],al
   14000540d:	add    BYTE PTR [rax],al
   14000540f:	add    BYTE PTR [rdx],ah
   140005411:	pop    rsi
	...
   14000541e:	add    BYTE PTR [rax],al
   140005420:	(bad)  
   140005421:	pop    rdx
   140005422:	add    BYTE PTR [rax],al
   140005424:	add    BYTE PTR [rax],al
   140005426:	add    BYTE PTR [rax],al
   140005428:	int3   
   140005429:	pop    rax
   14000542a:	add    BYTE PTR [rax],al
   14000542c:	add    BYTE PTR [rax],al
   14000542e:	add    BYTE PTR [rax],al
   140005430:	mov    edx,0x58
   140005435:	add    BYTE PTR [rax],al
   140005437:	add    BYTE PTR [rdx+0x59],bl
   14000543a:	add    BYTE PTR [rax],al
   14000543c:	add    BYTE PTR [rax],al
   14000543e:	add    BYTE PTR [rax],al
   140005440:	rex.R pop rbx
   140005442:	add    BYTE PTR [rax],al
   140005444:	add    BYTE PTR [rax],al
   140005446:	add    BYTE PTR [rax],al
   140005448:	mov    dh,0x57
	...
   140005456:	add    BYTE PTR [rax],al
   140005458:	push   0x59
	...
   140005466:	add    BYTE PTR [rax],al
   140005468:	rex.WR pop rax
   14000546a:	add    BYTE PTR [rax],al
   14000546c:	add    BYTE PTR [rax],al
   14000546e:	add    BYTE PTR [rax],al
   140005470:	(bad)  
   140005471:	push   rdi
   140005472:	add    BYTE PTR [rax],al
   140005474:	add    BYTE PTR [rax],al
   140005476:	add    BYTE PTR [rax],al
   140005478:	(bad)  
   140005479:	push   rdi
   14000547a:	add    BYTE PTR [rax],al
   14000547c:	add    BYTE PTR [rax],al
   14000547e:	add    BYTE PTR [rax],al
   140005480:	and    al,0x59
	...
   14000548e:	add    BYTE PTR [rax],al
   140005490:	jle    0x1400054ec
	...
   14000549e:	add    BYTE PTR [rax],al
   1400054a0:	xchg   esp,eax
   1400054a1:	push   rdi
   1400054a2:	add    BYTE PTR [rax],al
   1400054a4:	add    BYTE PTR [rax],al
   1400054a6:	add    BYTE PTR [rax],al
   1400054a8:	in     al,0x57
	...
   1400054b6:	add    BYTE PTR [rax],al
   1400054b8:	xchg   esp,eax
   1400054b9:	pop    rax
   1400054ba:	add    BYTE PTR [rax],al
   1400054bc:	add    BYTE PTR [rax],al
   1400054be:	add    BYTE PTR [rax],al
   1400054c0:	(bad)  
   1400054c1:	pop    rbx
   1400054c2:	add    BYTE PTR [rax],al
   1400054c4:	add    BYTE PTR [rax],al
   1400054c6:	add    BYTE PTR [rax],al
   1400054c8:	ret    0x5a
   1400054cb:	add    BYTE PTR [rax],al
   1400054cd:	add    BYTE PTR [rax],al
   1400054cf:	add    BYTE PTR [rdx+rbx*2+0x0],ch
   1400054d6:	add    BYTE PTR [rax],al
   1400054d8:	rex.WRX pop rdx
   1400054da:	add    BYTE PTR [rax],al
   1400054dc:	add    BYTE PTR [rax],al
   1400054de:	add    BYTE PTR [rax],al
   1400054e0:	je     0x14000553d
	...
   1400054ee:	add    BYTE PTR [rax],al
   1400054f0:	xchg   edx,eax
   1400054f1:	pop    rdx
	...
   1400054fe:	add    BYTE PTR [rax],al
   140005500:	(bad)  
   140005501:	pop    rbx
   140005502:	add    BYTE PTR [rax],al
   140005504:	add    BYTE PTR [rax],al
   140005506:	add    BYTE PTR [rax],al
   140005508:	xor    BYTE PTR [rbx+0x0],bl
   14000550b:	add    BYTE PTR [rax],al
   14000550d:	add    BYTE PTR [rax],al
   14000550f:	add    BYTE PTR [rdx],al
   140005511:	pop    rbx
	...
   14000551e:	add    BYTE PTR [rax],al
   140005520:	rex pop rax
   140005522:	add    BYTE PTR [rax],al
   140005524:	add    BYTE PTR [rax],al
   140005526:	add    BYTE PTR [rax],al
   140005528:	rex.WR pop rcx
   14000552a:	add    BYTE PTR [rax],al
   14000552c:	add    BYTE PTR [rax],al
   14000552e:	add    BYTE PTR [rax],al
   140005530:	(bad)  
   140005531:	pop    rcx
   140005532:	add    BYTE PTR [rax],al
   140005534:	add    BYTE PTR [rax],al
   140005536:	add    BYTE PTR [rax],al
   140005538:	lock pop rcx
   14000553a:	add    BYTE PTR [rax],al
   14000553c:	add    BYTE PTR [rax],al
   14000553e:	add    BYTE PTR [rax],al
   140005540:	or     BYTE PTR [rdx+0x0],bl
   140005543:	add    BYTE PTR [rax],al
   140005545:	add    BYTE PTR [rax],al
   140005547:	add    BYTE PTR [rax],ah
   140005549:	pop    rdx
   14000554a:	add    BYTE PTR [rax],al
   14000554c:	add    BYTE PTR [rax],al
   14000554e:	add    BYTE PTR [rax],al
   140005550:	cs pop rdx
   140005552:	add    BYTE PTR [rax],al
   140005554:	add    BYTE PTR [rax],al
   140005556:	add    BYTE PTR [rax],al
   140005558:	rex.RX pop rdx
   14000555a:	add    BYTE PTR [rax],al
   14000555c:	add    BYTE PTR [rax],al
   14000555e:	add    BYTE PTR [rax],al
   140005560:	mov    esi,0x59
   140005565:	add    BYTE PTR [rax],al
   140005567:	add    BYTE PTR [rsi+0x58],bl
   14000556a:	add    BYTE PTR [rax],al
   14000556c:	add    BYTE PTR [rax],al
   14000556e:	add    BYTE PTR [rax],al
   140005570:	add    al,0x59
	...
   14000557e:	add    BYTE PTR [rax],al
   140005580:	repnz pop rdx
   140005582:	add    BYTE PTR [rax],al
   140005584:	add    BYTE PTR [rax],al
   140005586:	add    BYTE PTR [rax],al
   140005588:	fcomp  DWORD PTR [rdx+0x0]
	...
   140005597:	add    BYTE PTR [rdx+0x58],bh
	...
   1400055a6:	add    BYTE PTR [rax],al
   1400055a8:	or     bl,BYTE PTR [rax+0x0]
   1400055ab:	add    BYTE PTR [rax],al
   1400055ad:	add    BYTE PTR [rax],al
   1400055af:	add    BYTE PTR [rax],ah
   1400055b1:	pop    rax
	...
   1400055be:	add    BYTE PTR [rax],al
   1400055c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400055c1:	push   rdi
	...
   1400055ce:	add    BYTE PTR [rax],al
   1400055d0:	or     dl,BYTE PTR [rdi+0x0]
   1400055d3:	add    BYTE PTR [rax],al
   1400055d5:	add    BYTE PTR [rax],al
   1400055d7:	add    BYTE PTR [rdx],dl
   1400055d9:	push   rdi
   1400055da:	add    BYTE PTR [rax],al
   1400055dc:	add    BYTE PTR [rax],al
   1400055de:	add    BYTE PTR [rax],al
   1400055e0:	add    dl,BYTE PTR [rdi+0x0]
   1400055e3:	add    BYTE PTR [rax],al
   1400055e5:	add    BYTE PTR [rax],al
   1400055e7:	add    BYTE PTR [rdi+rdx*2],bl
   1400055ea:	add    BYTE PTR [rax],al
   1400055ec:	add    BYTE PTR [rax],al
   1400055ee:	add    BYTE PTR [rax],al
   1400055f0:	adc    BYTE PTR [rdi+0x0],0x0
   1400055f4:	add    BYTE PTR [rax],al
   1400055f6:	add    BYTE PTR [rax],al
   1400055f8:	xor    BYTE PTR [rdi+0x0],dl
   1400055fb:	add    BYTE PTR [rax],al
   1400055fd:	add    BYTE PTR [rax],al
   1400055ff:	add    BYTE PTR [rdi+rdx*2],bh
   140005602:	add    BYTE PTR [rax],al
   140005604:	add    BYTE PTR [rax],al
   140005606:	add    BYTE PTR [rax],al
   140005608:	push   rsp
   140005609:	push   rdi
   14000560a:	add    BYTE PTR [rax],al
   14000560c:	add    BYTE PTR [rax],al
   14000560e:	add    BYTE PTR [rax],al
   140005610:	pop    rsi
   140005611:	push   rdi
   140005612:	add    BYTE PTR [rax],al
   140005614:	add    BYTE PTR [rax],al
   140005616:	add    BYTE PTR [rax],al
   140005618:	lock push rsi
   14000561a:	add    BYTE PTR [rax],al
   14000561c:	add    BYTE PTR [rax],al
   14000561e:	add    BYTE PTR [rax],al
   140005620:	ficom  WORD PTR [rsi+0x0]
   140005623:	add    BYTE PTR [rax],al
   140005625:	add    BYTE PTR [rax],al
   140005627:	add    al,dl
   140005629:	push   rsi
   14000562a:	add    BYTE PTR [rax],al
   14000562c:	add    BYTE PTR [rax],al
   14000562e:	add    BYTE PTR [rax],al
   140005630:	ret    0x56
   140005633:	add    BYTE PTR [rax],al
   140005635:	add    BYTE PTR [rax],al
   140005637:	add    BYTE PTR [rsi+0x56],dh
   14000563d:	add    BYTE PTR [rax],al
   14000563f:	add    BYTE PTR [rsi+rdx*2+0x0],ch
   140005646:	add    BYTE PTR [rax],al
   140005648:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005649:	push   rsi
   14000564a:	add    BYTE PTR [rax],al
   14000564c:	add    BYTE PTR [rax],al
   14000564e:	add    BYTE PTR [rax],al
   140005650:	cwde   
   140005651:	push   rsi
   140005652:	add    BYTE PTR [rax],al
   140005654:	add    BYTE PTR [rax],al
   140005656:	add    BYTE PTR [rax],al
   140005658:	mov    WORD PTR [rsi+0x0],ss
   14000565b:	add    BYTE PTR [rax],al
   14000565d:	add    BYTE PTR [rax],al
   14000565f:	add    BYTE PTR [rax+0x56],al
   140005665:	add    BYTE PTR [rax],al
   140005667:	add    BYTE PTR [rax+0x57],ch
   14000566a:	add    BYTE PTR [rax],al
   14000566c:	add    BYTE PTR [rax],al
   14000566e:	add    BYTE PTR [rax],al
   140005670:	mov    eax,0x5e
	...
   14000567d:	add    BYTE PTR [rax],al
   14000567f:	add    BYTE PTR [rdi+0x4],ch
   140005682:	imul   esi,DWORD PTR [rbx+0x77],0x68706c61
   140005689:	(bad)  
   14000568a:	add    BYTE PTR [rax],al
   14000568c:	in     al,dx
   14000568d:	add    al,0x74
   14000568f:	outs   dx,DWORD PTR ds:[rsi]
   140005690:	ja     0x140005707
   140005692:	jo     0x140005704
   140005694:	gs jb  0x140005697
   140005697:	add    BYTE PTR [rbx+0x4],dh
   14000569a:	imul   esi,DWORD PTR [rbx+0x77],0x69676964
   1400056a1:	je     0x1400056a3
   1400056a3:	add    BYTE PTR [rsp+rax*1+0x66],cl
   1400056a7:	jb     0x14000570e
   1400056a9:	add    BYTE PTR gs:[rax],al
   1400056ac:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   1400056b3:	movsxd eax,DWORD PTR [rax]
   1400056b5:	add    BYTE PTR [rdi+0x61635f00],bh
   1400056bb:	ins    BYTE PTR es:[rdi],dx
   1400056bc:	ins    BYTE PTR es:[rdi],dx
   1400056bd:	outs   dx,BYTE PTR ds:[rsi]
   1400056be:	gs ja  0x140005729
   1400056c1:	add    BYTE PTR [rbp+0x0],dl
   1400056c4:	pop    rdi
   1400056c5:	pop    rax
   1400056c6:	movsxd esi,DWORD PTR [rax+0x74]
   1400056c9:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400056d2:	pop    rdi
   1400056d3:	(bad)  
   1400056d4:	ins    DWORD PTR es:[rdi],dx
   1400056d5:	jae    0x14000573e
   1400056d7:	pop    rdi
   1400056d8:	gs js  0x140005744
   1400056db:	je     0x1400056dd
   1400056dd:	add    BYTE PTR [rbp+0x775f5f00],bl
   1400056e3:	addr32 gs je 0x140005754
   1400056e7:	(bad)  
   1400056e8:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400056ef:	add    BYTE PTR [rsi+0x735f5f00],cl
   1400056f5:	gs je  0x140005757
   1400056f8:	(bad)  
   1400056f9:	jo     0x14000576b
   1400056fb:	pop    rdi
   1400056fc:	je     0x140005777
   1400056fe:	jo     0x140005765
   140005700:	add    BYTE PTR [rax],al
   140005702:	xor    al,BYTE PTR [riz*2+0x746978]
   140005709:	add    BYTE PTR [rsi],cl
   14000570b:	add    DWORD PTR [rdi+0x65],ebx
   14000570e:	js     0x140005779
   140005710:	je     0x140005712
   140005712:	rol    DWORD PTR [rax],0x5f
   140005715:	movsxd esp,DWORD PTR [rbp+0x78]
   140005718:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140005720:	jae    0x140005787
   140005722:	je     0x140005799
   140005724:	jae    0x14000578b
   140005726:	jb     0x140005795
   140005728:	(bad)  
   140005729:	je     0x140005793
   14000572b:	gs jb  0x1400057a0
   14000572e:	add    BYTE PTR [rax],al
   140005730:	jge    0x140005733
   140005732:	pop    rdi
   140005733:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000573a:	ins    DWORD PTR es:[rdi],dx
   14000573b:	add    BYTE PTR [rdi+0x0],dl
   14000573e:	pop    rdi
   14000573f:	pop    rdi
   140005740:	rex.XB pop r15
   140005742:	jae    0x1400057b4
   140005744:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140005748:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000574f:	ins    BYTE PTR es:[rdi],dx
   140005750:	gs jb  0x140005753
   140005753:	add    BYTE PTR [rdx+0x63775f03],al
   140005759:	ins    DWORD PTR es:[rdi],dx
   14000575a:	fs ins BYTE PTR es:[rdi],dx
   14000575c:	outs   dx,BYTE PTR ds:[rsi]
   14000575d:	add    BYTE PTR [rdi],ah
   14000575f:	add    DWORD PTR [rdi+0x66],ebx
   140005762:	ins    DWORD PTR es:[rdi],dx
   140005763:	outs   dx,DWORD PTR ds:[rsi]
   140005764:	fs add BYTE PTR gs:[rax],al
   140005768:	rol    BYTE PTR [rax],cl
   14000576a:	pop    rdi
   14000576b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000576e:	ins    DWORD PTR es:[rdi],dx
   14000576f:	outs   dx,DWORD PTR ds:[rsi]
   140005770:	fs add BYTE PTR gs:[rax],al
   140005774:	ins    DWORD PTR es:[rdi],dx
   140005775:	jae    0x1400057ed
   140005777:	movsxd esi,DWORD PTR [rdx+0x74]
   14000577a:	cs fs ins BYTE PTR es:[rdi],dx
   14000577d:	ins    BYTE PTR es:[rdi],dx
   14000577e:	add    BYTE PTR [rax],al
   140005780:	(bad)  
   140005781:	add    BYTE PTR [rdi],bh
   140005783:	je     0x1400057ea
   140005785:	jb     0x1400057f4
   140005787:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000578e:	pop    rcx
   14000578f:	pop    r8
   140005791:	pop    rax
   140005792:	pop    rdx
   140005793:	add    BYTE PTR [rip+0x74654700],al        # 0x1b4659e99
   140005799:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000579b:	ins    DWORD PTR es:[rdi],dx
   14000579c:	ins    DWORD PTR es:[rdi],dx
   14000579d:	(bad)  
   14000579e:	outs   dx,BYTE PTR ds:[rsi]
   14000579f:	imul   r13,QWORD PTR fs:[rsi+0x65],0x50057
   1400057a8:	push   rsp
   1400057a9:	jb     0x14000580c
   1400057ab:	movsxd esp,DWORD PTR [rbp+0x4d]
   1400057ae:	gs jae 0x140005824
   1400057b1:	(bad)  
   1400057b2:	add    BYTE PTR gs:[eax],al
   1400057b6:	or     al,0x0
   1400057b8:	push   rbx
   1400057b9:	gs je  0x140005801
   1400057bc:	jb     0x140005830
   1400057be:	outs   dx,DWORD PTR ds:[rsi]
   1400057bf:	jb     0x14000580e
   1400057c1:	outs   dx,DWORD PTR ds:[rsi]
   1400057c2:	fs add BYTE PTR gs:[rax],al
   1400057c6:	add    al,BYTE PTR [rax]
   1400057c8:	rex.W
   1400057c9:	gs (bad) 
   1400057cb:	jo     0x14000580e
   1400057cd:	ins    BYTE PTR es:[rdi],dx
   1400057ce:	ins    BYTE PTR es:[rdi],dx
   1400057cf:	outs   dx,DWORD PTR ds:[rsi]
   1400057d0:	movsxd eax,DWORD PTR [rax]
   1400057d2:	rex.X add BYTE PTR [rbx+0x6f],al
   1400057d6:	push   rbp
   1400057d7:	outs   dx,BYTE PTR ds:[rsi]
   1400057d8:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400057df:	imul   edi,DWORD PTR [rdx+0x65],0x150000
   1400057e6:	push   rbx
   1400057e7:	gs je  0x14000582f
   1400057ea:	outs   dx,BYTE PTR ds:[rsi]
   1400057eb:	jbe    0x140005856
   1400057ed:	jb     0x14000585e
   1400057ef:	outs   dx,BYTE PTR ds:[rsi]
   1400057f0:	ins    DWORD PTR es:[rdi],dx
   1400057f1:	outs   dx,BYTE PTR gs:[rsi]
   1400057f3:	je     0x14000584b
   1400057f5:	(bad)  
   1400057f6:	jb     0x140005861
   1400057f8:	(bad)  
   1400057f9:	(bad)  
   1400057fa:	ins    BYTE PTR es:[rdi],dx
   1400057fb:	gs push rdi
   1400057fd:	add    BYTE PTR [rsi],al
   1400057ff:	add    BYTE PTR [rax+0x65],cl
   140005802:	(bad)  
   140005803:	jo     0x14000584b
   140005805:	jb     0x14000586c
   140005807:	add    BYTE PTR gs:[rax],al
   14000580a:	or     al,0x0
   14000580c:	push   rdi
   14000580d:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   140005814:	gs ins BYTE PTR es:[rdi],dx
   140005816:	gs je  0x14000587e
   140005819:	push   rbx
   14000581a:	je     0x14000588e
   14000581c:	imul   ebp,DWORD PTR [rsi+0x67],0x57000b00
   140005823:	imul   ebp,DWORD PTR [rsi+0x64],0x4373776f
   14000582a:	jb     0x140005891
   14000582c:	(bad)  
   14000582d:	je     0x140005894
   14000582f:	push   rbx
   140005830:	je     0x1400058a4
   140005832:	imul   ebp,DWORD PTR [rsi+0x67],0x65666552
   140005839:	jb     0x1400058a0
   14000583b:	outs   dx,BYTE PTR ds:[rsi]
   14000583c:	movsxd esp,DWORD PTR [rbp+0x0]
   14000583f:	add    BYTE PTR [rcx],ch
   140005841:	add    BYTE PTR [rbx+0x65],dl
   140005844:	je     0x14000588b
   140005846:	jbe    0x1400058ad
   140005848:	outs   dx,BYTE PTR ds:[rsi]
   140005849:	je     0x14000584b
   14000584b:	add    BYTE PTR [rax],al
   14000584d:	add    BYTE PTR [rdi+0x65],al
   140005850:	je     0x1400058a2
   140005852:	jb     0x1400058c3
   140005854:	movsxd esp,DWORD PTR [rbp+0x73]
   140005857:	jae    0x1400058a1
   140005859:	gs (bad) 
   14000585b:	jo     0x14000585d
   14000585d:	add    BYTE PTR [rip+0x69615700],dh        # 0x1a961af63
   140005863:	je     0x1400058ab
   140005865:	outs   dx,DWORD PTR ds:[rsi]
   140005866:	jb     0x1400058b5
   140005868:	jne    0x1400058d6
   14000586a:	je     0x1400058d5
   14000586c:	jo     0x1400058da
   14000586e:	gs rex.WRXB (bad) 
   140005871:	push   0x65
   140005873:	movsxd esi,DWORD PTR [rbx+rsi*2+0x45]
   140005877:	js     0x140005879
   140005879:	add    BYTE PTR [rcx],al
   14000587b:	add    BYTE PTR [rdx+0x6f],dl
   14000587e:	rex.RXB
   14000587f:	gs je  0x1400058c3
   140005882:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140005886:	(bad)  
   140005887:	je     0x1400058f2
   140005889:	outs   dx,DWORD PTR ds:[rsi]
   14000588a:	outs   dx,BYTE PTR ds:[rsi]
   14000588b:	rex.RX (bad) 
   14000588d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140005891:	jns    0x140005893
   140005893:	add    BYTE PTR [rdi],ch
   140005895:	add    BYTE PTR [rdi+0x70],cl
   140005898:	outs   dx,BYTE PTR gs:[rsi]
   14000589a:	push   rax
   14000589b:	jb     0x14000590c
   14000589d:	movsxd esp,DWORD PTR [rbp+0x73]
   1400058a0:	jae    0x1400058a2
   1400058a2:	(bad)  
   1400058a3:	add    BYTE PTR [rbx+0x6f],al
   1400058a6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400058a8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400058b0:	push   rbx
   1400058b1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400058b5:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x52000700
   1400058bd:	(bad)  
   1400058be:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   1400058c5:	jo     0x14000593b
   1400058c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x50000
   1400058ce:	rex.RXB
   1400058cf:	gs je  0x14000591e
   1400058d2:	(bad)  
   1400058d3:	jae    0x140005949
   1400058d5:	rex.RB jb 0x14000594a
   1400058d8:	outs   dx,DWORD PTR ds:[rsi]
   1400058d9:	jb     0x1400058db
   1400058db:	add    BYTE PTR [rcx],dl
   1400058dd:	add    BYTE PTR [rbx+0x6f],al
   1400058e0:	rex.RX jb 0x140005948
   1400058e3:	gs push rbp
   1400058e5:	outs   dx,BYTE PTR ds:[rsi]
   1400058e6:	jne    0x14000595b
   1400058e8:	gs imul r12,QWORD PTR fs:[rdx+0x72],0x65697261
   1400058f2:	jae    0x1400058f4
   1400058f4:	(bad)  
   1400058f5:	add    BYTE PTR [rbx+0x6f],al
   1400058f8:	push   rsp
   1400058f9:	(bad)  
   1400058fa:	jae    0x140005967
   1400058fc:	rex.WRB
   1400058fd:	gs ins DWORD PTR es:[rdi],dx
   1400058ff:	rex.RX jb 0x140005967
   140005902:	add    BYTE PTR gs:[rsi],al
   140005905:	add    BYTE PTR [rbx+0x72],al
   140005908:	gs (bad) 
   14000590a:	je     0x140005971
   14000590c:	rex.RB jbe 0x140005974
   14000590f:	outs   dx,BYTE PTR ds:[rsi]
   140005910:	je     0x140005969
   140005912:	add    BYTE PTR [rax],al
   140005914:	rex.WX add BYTE PTR [rcx+0x49],cl
   140005918:	rex.R
   140005919:	rex.RX jb 0x14000598b
   14000591c:	ins    DWORD PTR es:[rdi],dx
   14000591d:	push   rbx
   14000591e:	je     0x140005992
   140005920:	imul   ebp,DWORD PTR [rsi+0x67],0x48000a00
   140005927:	gs (bad) 
   140005929:	jo     0x14000597e
   14000592b:	gs je  0x140005977
   14000592e:	outs   dx,BYTE PTR ds:[rsi]
   14000592f:	outs   dx,WORD PTR ds:[rsi]
   140005931:	jb     0x1400059a0
   140005933:	(bad)  
   140005934:	je     0x14000599f
   140005936:	outs   dx,DWORD PTR ds:[rsi]
   140005937:	outs   dx,BYTE PTR ds:[rsi]
   140005938:	add    BYTE PTR [rax],al
   14000593a:	add    BYTE PTR es:[rbx+0x6f],al
   14000593e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140005940:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140005948:	rex.RB js 0x14000594b
   14000594b:	add    BYTE PTR [rdi],bl
   14000594d:	add    BYTE PTR [rdi+0x70],cl
   140005950:	outs   dx,BYTE PTR gs:[rsi]
   140005952:	rex.RB jbe 0x1400059ba
   140005955:	outs   dx,BYTE PTR ds:[rsi]
   140005956:	je     0x1400059af
   140005958:	add    BYTE PTR [rax],al
   14000595a:	add    al,0x0
   14000595c:	rex.RXB
   14000595d:	gs je  0x1400059a5
   140005960:	jb     0x1400059d4
   140005962:	outs   dx,DWORD PTR ds:[rsi]
   140005963:	jb     0x1400059b2
   140005965:	outs   dx,DWORD PTR ds:[rsi]
   140005966:	fs add BYTE PTR gs:[rax],al
   14000596a:	add    BYTE PTR [rax],al
   14000596c:	rex.XB ins BYTE PTR es:[rdi],dx
   14000596e:	outs   dx,DWORD PTR ds:[rsi]
   14000596f:	jae    0x1400059d6
   140005971:	rex.W (bad) 
   140005973:	outs   dx,BYTE PTR ds:[rsi]
   140005974:	fs ins BYTE PTR es:[rdi],dx
   140005976:	add    BYTE PTR gs:[rsi],al
   140005979:	add    BYTE PTR [rbx+0x6f],al
   14000597c:	rex.XB jb 0x1400059e4
   14000597f:	(bad)  
   140005980:	je     0x1400059e7
   140005982:	rex.RX jb 0x1400059ea
   140005985:	gs push rsp
   140005987:	push   0x64616572
   14000598c:	gs fs rex.WRB (bad) 
   140005990:	jb     0x140005a05
   140005992:	push   0x72656c61
   140005997:	add    BYTE PTR [rax],cl
   140005999:	add    BYTE PTR [rbx+0x6f],al
   14000599c:	rex.XB jb 0x140005a04
   14000599f:	(bad)  
   1400059a0:	je     0x140005a07
   1400059a2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400059a4:	jae    0x140005a1a
   1400059a6:	(bad)  
   1400059a7:	outs   dx,BYTE PTR ds:[rsi]
   1400059a8:	movsxd esp,DWORD PTR [rbp+0x0]
   1400059ab:	add    BYTE PTR [rdi+0x0],cl
   1400059ae:	push   rbx
   1400059af:	je     0x140005a23
   1400059b1:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f7246
   1400059b8:	rex.XB
   1400059b9:	rex.WR push rbx
   1400059bb:	rex.WB
   1400059bc:	add    BYTE PTR [rsi],r14b
   1400059bf:	add    BYTE PTR [rdi+0x61],dl
   1400059c2:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   1400059ca:	ins    BYTE PTR es:[edi],dx
   1400059cc:	gs rex.WRXB (bad) 
   1400059cf:	push   0x65
   1400059d1:	movsxd esi,DWORD PTR [rax+rax*1+0x18]
   1400059d5:	add    BYTE PTR [rcx+0x6e],cl
   1400059d8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400059e0:	rex.XB jb 0x140005a4c
   1400059e3:	je     0x140005a4e
   1400059e5:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400059e8:	push   rbx
   1400059e9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400059ee:	outs   dx,BYTE PTR ds:[rsi]
   1400059ef:	add    BYTE PTR [rip+0x61654c00],bl        # 0x1a165a5f5
   1400059f5:	jbe    0x140005a5c
   1400059f7:	rex.XB jb 0x140005a63
   1400059fa:	je     0x140005a65
   1400059fc:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400059ff:	push   rbx
   140005a00:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140005a05:	outs   dx,BYTE PTR ds:[rsi]
   140005a06:	add    BYTE PTR [rax],al
   140005a08:	adc    DWORD PTR [rax],eax
   140005a0a:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140005a0c:	je     0x140005a73
   140005a0e:	jb     0x140005a53
   140005a10:	jb     0x140005a7b
   140005a12:	je     0x140005a7d
   140005a14:	movsxd esp,DWORD PTR [rcx+0x6c]
   140005a17:	push   rbx
   140005a18:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140005a1d:	outs   dx,BYTE PTR ds:[rsi]
   140005a1e:	add    BYTE PTR [rax],al
   140005a20:	(bad)  
   140005a21:	add    BYTE PTR [rdx+0x65],dl
   140005a24:	jae    0x140005a8b
   140005a26:	je     0x140005a6d
   140005a28:	jbe    0x140005a8f
   140005a2a:	outs   dx,BYTE PTR ds:[rsi]
   140005a2b:	je     0x140005a2d
   140005a2d:	add    BYTE PTR [rdi],cl
   140005a2f:	add    BYTE PTR [rbp+riz*2+0x6c],al
   140005a33:	gs je  0x140005a9b
   140005a36:	rex.XB jb 0x140005aa2
   140005a39:	je     0x140005aa4
   140005a3b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140005a3e:	push   rbx
   140005a3f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140005a44:	outs   dx,BYTE PTR ds:[rsi]
   140005a45:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56cad4b
   140005a4b:	gs jo  0x140005a4e
   140005a4e:	and    BYTE PTR [rax],al
   140005a50:	rex.RXB
   140005a51:	gs je  0x140005aa7
   140005a54:	je     0x140005ab7
   140005a56:	jb     0x140005acc
   140005a58:	jne    0x140005aca
   140005a5a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140005a5c:	outs   dx,WORD PTR ds:[rsi]
   140005a5e:	push   rdi
   140005a5f:	add    BYTE PTR [rdi],cl
   140005a61:	add    BYTE PTR [rbx+0x65],dl
   140005a64:	je     0x140005abb
   140005a66:	outs   dx,BYTE PTR ds:[rsi]
   140005a67:	push   0x6c646e61
   140005a6c:	gs fs rex.RB js 0x140005ad4
   140005a71:	gs jo  0x140005ae8
   140005a74:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140005a7b:	gs jb  0x140005a7e
   140005a7e:	adc    eax,DWORD PTR [rax]
   140005a80:	rex.RXB
   140005a81:	gs je  0x140005ad1
   140005a84:	outs   dx,DWORD PTR ds:[rsi]
   140005a85:	fs jne 0x140005af4
   140005a88:	gs rex.W (bad) 
   140005a8b:	outs   dx,BYTE PTR ds:[rsi]
   140005a8c:	fs ins BYTE PTR es:[rdi],dx
   140005a8e:	gs push rdi
   140005a90:	add    BYTE PTR [rax],al
   140005a92:	add    BYTE PTR [rax],al
   140005a94:	push   rcx
   140005a95:	jne    0x140005afc
   140005a97:	jb     0x140005b12
   140005a99:	push   rax
   140005a9a:	gs jb  0x140005b03
   140005a9d:	outs   dx,DWORD PTR ds:[rsi]
   140005a9e:	jb     0x140005b0d
   140005aa0:	(bad)  
   140005aa1:	outs   dx,BYTE PTR ds:[rsi]
   140005aa2:	movsxd esp,DWORD PTR [rbp+0x43]
   140005aa5:	outs   dx,DWORD PTR ds:[rsi]
   140005aa6:	jne    0x140005b16
   140005aa8:	je     0x140005b0f
   140005aaa:	jb     0x140005aac
   140005aac:	or     eax,0x74654700
   140005ab1:	rex.XB jne 0x140005b26
   140005ab4:	jb     0x140005b1b
   140005ab6:	outs   dx,BYTE PTR ds:[rsi]
   140005ab7:	je     0x140005b09
   140005ab9:	jb     0x140005b2a
   140005abb:	movsxd esp,DWORD PTR [rbp+0x73]
   140005abe:	jae    0x140005b09
   140005ac0:	add    BYTE PTR fs:[rcx],dl
   140005ac3:	add    BYTE PTR [rdi+0x65],al
   140005ac6:	je     0x140005b0b
   140005ac8:	jne    0x140005b3c
   140005aca:	jb     0x140005b31
   140005acc:	outs   dx,BYTE PTR ds:[rsi]
   140005acd:	je     0x140005b23
   140005acf:	push   0x64616572
   140005ad4:	rex.WB
   140005ad5:	add    BYTE PTR fs:[rax],al
   140005ad8:	adc    al,0x0
   140005ada:	rex.RXB
   140005adb:	gs je  0x140005b31
   140005ade:	jns    0x140005b53
   140005ae0:	je     0x140005b47
   140005ae2:	ins    DWORD PTR es:[rdi],dx
   140005ae3:	push   rsp
   140005ae4:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140005aeb:	ins    BYTE PTR es:[rdi],dx
   140005aec:	gs push rsp
   140005aee:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140005af5:	gs je  0x140005b4c
   140005af8:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140005aff:	je     0x140005b01
   140005b01:	add    BYTE PTR [rdx],al
   140005b03:	add    BYTE PTR [rdx+0x74],dl
   140005b06:	ins    BYTE PTR es:[rdi],dx
   140005b07:	rex.XB (bad) 
   140005b09:	jo     0x140005b7f
   140005b0b:	jne    0x140005b7f
   140005b0d:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140005b10:	outs   dx,BYTE PTR ds:[rsi]
   140005b11:	je     0x140005b78
   140005b13:	js     0x140005b89
   140005b15:	add    BYTE PTR [rcx],cl
   140005b17:	add    BYTE PTR [rdx+0x74],dl
   140005b1a:	ins    BYTE PTR es:[rdi],dx
   140005b1b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140005b1d:	outs   dx,DWORD PTR ds:[rsi]
   140005b1e:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140005b22:	jne    0x140005b92
   140005b24:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140005b28:	outs   dx,BYTE PTR ds:[rsi]
   140005b29:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140005b2b:	je     0x140005b9f
   140005b2d:	jns    0x140005b2f
   140005b2f:	add    BYTE PTR [rdi],cl
   140005b31:	add    BYTE PTR [rdx+0x74],dl
   140005b34:	ins    BYTE PTR es:[rdi],dx
   140005b35:	push   rsi
   140005b36:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140005b3d:	outs   dx,BYTE PTR ds:[rsi]
   140005b3e:	ja     0x140005ba9
   140005b40:	outs   dx,BYTE PTR ds:[rsi]
   140005b41:	add    BYTE PTR fs:[rax],al
   140005b44:	adc    DWORD PTR [rax],eax
   140005b46:	push   rbp
   140005b47:	outs   dx,BYTE PTR ds:[rsi]
   140005b48:	push   0x6c646e61
   140005b4d:	gs fs rex.RB js 0x140005bb5
   140005b52:	gs jo  0x140005bc9
   140005b55:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140005b5c:	gs jb  0x140005b5f
   140005b5f:	add    BYTE PTR [rax+rax*1],cl
   140005b62:	rex.RXB
   140005b63:	gs je  0x140005ba9
   140005b66:	jne    0x140005bda
   140005b68:	jb     0x140005bcf
   140005b6a:	outs   dx,BYTE PTR ds:[rsi]
   140005b6b:	je     0x140005bbd
   140005b6d:	jb     0x140005bde
   140005b6f:	movsxd esp,DWORD PTR [rbp+0x73]
   140005b72:	jae    0x140005b74
   140005b74:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   140005b79:	ins    DWORD PTR es:[rdi],dx
   140005b7a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140005b81:	outs   dx,DWORD PTR ds:[rsi]
   140005b82:	movsxd esp,DWORD PTR [rbp+0x73]
   140005b85:	jae    0x140005b87
   140005b87:	add    BYTE PTR [rcx+0x70],ah
   140005b8a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dcf01
   140005b94:	outs   dx,DWORD PTR ds:[rsi]
   140005b95:	jb     0x140005bfc
   140005b97:	sub    eax,0x636f7270
   140005b9c:	gs jae 0x140005c12
   140005b9f:	outs   dx,BYTE PTR gs:[rsi]
   140005ba1:	jbe    0x140005c0c
   140005ba3:	jb     0x140005c14
   140005ba5:	outs   dx,BYTE PTR ds:[rsi]
   140005ba6:	ins    DWORD PTR es:[rdi],dx
   140005ba7:	outs   dx,BYTE PTR gs:[rsi]
   140005ba9:	je     0x140005bd8
   140005bab:	ins    BYTE PTR es:[rdi],dx
   140005bac:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e3088e4
   140005bb2:	fs ins BYTE PTR es:[rdi],dx
   140005bb4:	ins    BYTE PTR es:[rdi],dx
   140005bb5:	add    BYTE PTR [rcx+0x70],ah
   140005bb8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x652d6e69        # 0x1b72dcf2f
   140005bc2:	jbe    0x140005c29
   140005bc4:	outs   dx,BYTE PTR ds:[rsi]
   140005bc5:	je     0x140005c30
   140005bc7:	outs   dx,BYTE PTR ds:[rsi]
   140005bc8:	addr32 sub eax,0x73616c63
   140005bce:	jae    0x140005c39
   140005bd0:	movsxd esi,DWORD PTR [rax+0x72]
   140005bd3:	outs   dx,DWORD PTR ds:[rsi]
   140005bd4:	jbe    0x140005c3f
   140005bd6:	fs gs jb 0x140005c07
   140005bda:	ins    BYTE PTR es:[rdi],dx
   140005bdb:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e308912
   140005be1:	fs ins BYTE PTR es:[rdi],dx
   140005be3:	ins    BYTE PTR es:[rdi],dx
   140005be4:	add    BYTE PTR [rax],al
   140005be6:	(bad)  
   140005be7:	jo     0x140005c52
   140005be9:	sub    eax,0x772d736d
   140005bee:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005bf5:	sub    eax,0x6f727265
   140005bfa:	jb     0x140005c64
   140005bfc:	(bad)  
   140005bfd:	outs   dx,BYTE PTR ds:[rsi]
   140005bfe:	fs ins BYTE PTR es:[rdi],dx
   140005c00:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140005c07:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac648a3e
   140005c0d:	ins    BYTE PTR es:[rdi],dx
   140005c0e:	add    BYTE PTR [rax],al
   140005c10:	(bad)  
   140005c11:	jo     0x140005c7c
   140005c13:	sub    eax,0x772d736d
   140005c18:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005c1f:	sub    eax,0x70616568
   140005c24:	sub    eax,0x322d316c
   140005c29:	sub    eax,0x6c642e30
   140005c2e:	ins    BYTE PTR es:[rdi],dx
   140005c2f:	add    BYTE PTR [rcx+0x70],ah
   140005c32:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dcfa9
   140005c3c:	outs   dx,DWORD PTR ds:[rsi]
   140005c3d:	jb     0x140005ca4
   140005c3f:	sub    eax,0x2d6d6f63
   140005c44:	ins    BYTE PTR es:[rdi],dx
   140005c45:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31897c
   140005c4b:	fs ins BYTE PTR es:[rdi],dx
   140005c4d:	ins    BYTE PTR es:[rdi],dx
   140005c4e:	add    BYTE PTR [rax],al
   140005c50:	(bad)  
   140005c51:	jo     0x140005cbc
   140005c53:	sub    eax,0x772d736d
   140005c58:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005c5f:	sub    eax,0x726e6977
   140005c64:	je     0x140005c93
   140005c66:	jae    0x140005cdc
   140005c68:	jb     0x140005cd3
   140005c6a:	outs   dx,BYTE PTR ds:[rsi]
   140005c6b:	addr32 sub eax,0x312d316c
   140005c71:	sub    eax,0x6c642e30
   140005c76:	ins    BYTE PTR es:[rdi],dx
   140005c77:	add    BYTE PTR [rcx+0x70],ah
   140005c7a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dcff1
   140005c84:	outs   dx,DWORD PTR ds:[rsi]
   140005c85:	jb     0x140005cec
   140005c87:	sub    eax,0x636e7973
   140005c8c:	push   0x2d316c2d
   140005c91:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac648ac7
   140005c97:	ins    BYTE PTR es:[rdi],dx
   140005c98:	add    BYTE PTR [rax],al
   140005c9a:	(bad)  
   140005c9b:	jo     0x140005d06
   140005c9d:	sub    eax,0x772d736d
   140005ca2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005ca9:	sub    eax,0x726e6977
   140005cae:	je     0x140005cdd
   140005cb0:	ins    BYTE PTR es:[rdi],dx
   140005cb1:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e3089e8
   140005cb7:	fs ins BYTE PTR es:[rdi],dx
   140005cb9:	ins    BYTE PTR es:[rdi],dx
   140005cba:	add    BYTE PTR [rax],al
   140005cbc:	(bad)  
   140005cbd:	jo     0x140005d28
   140005cbf:	sub    eax,0x772d736d
   140005cc4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005ccb:	sub    eax,0x636f7270
   140005cd0:	gs jae 0x140005d46
   140005cd3:	je     0x140005d3d
   140005cd5:	jb     0x140005d3c
   140005cd7:	(bad)  
   140005cd8:	fs jae 0x140005d08
   140005cdb:	ins    BYTE PTR es:[rdi],dx
   140005cdc:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e328a13
   140005ce2:	fs ins BYTE PTR es:[rdi],dx
   140005ce4:	ins    BYTE PTR es:[rdi],dx
   140005ce5:	add    BYTE PTR [rcx+0x70],ah
   140005ce8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dd05f
   140005cf2:	outs   dx,DWORD PTR ds:[rsi]
   140005cf3:	jb     0x140005d5a
   140005cf5:	sub    eax,0x646e6168
   140005cfa:	ins    BYTE PTR es:[rdi],dx
   140005cfb:	gs sub eax,0x312d316c
   140005d01:	sub    eax,0x6c642e30
   140005d06:	ins    BYTE PTR es:[rdi],dx
   140005d07:	add    BYTE PTR [rcx+0x70],ah
   140005d0a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dd081
   140005d14:	outs   dx,DWORD PTR ds:[rsi]
   140005d15:	jb     0x140005d7c
   140005d17:	sub    eax,0x7262696c
   140005d1c:	(bad)  
   140005d1d:	jb     0x140005d98
   140005d1f:	ins    BYTE PTR es:[rdi],dx
   140005d20:	outs   dx,DWORD PTR ds:[rsi]
   140005d21:	(bad)  
   140005d22:	fs gs jb 0x140005d53
   140005d26:	ins    BYTE PTR es:[rdi],dx
   140005d27:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e308a5f
   140005d2d:	fs ins BYTE PTR es:[rdi],dx
   140005d2f:	ins    BYTE PTR es:[rdi],dx
   140005d30:	add    BYTE PTR [rax],al
   140005d32:	(bad)  
   140005d33:	jo     0x140005d9e
   140005d35:	sub    eax,0x772d736d
   140005d3a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005d41:	sub    eax,0x666f7270
   140005d46:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140005d4e:	sub    eax,0x6c642e30
   140005d53:	ins    BYTE PTR es:[rdi],dx
   140005d54:	add    BYTE PTR [rax],al
   140005d56:	(bad)  
   140005d57:	jo     0x140005dc2
   140005d59:	sub    eax,0x772d736d
   140005d5e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005d65:	sub    eax,0x69737973
   140005d6a:	outs   dx,BYTE PTR ds:[rsi]
   140005d6b:	outs   dx,WORD PTR ds:[rsi]
   140005d6d:	sub    eax,0x322d316c
   140005d72:	sub    eax,0x6c642e31
   140005d77:	ins    BYTE PTR es:[rdi],dx
   140005d78:	add    BYTE PTR [rax],al
   140005d7a:	(bad)  
   140005d7b:	jo     0x140005de6
   140005d7d:	sub    eax,0x772d736d
   140005d82:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005d89:	sub    eax,0x736c7472
   140005d8e:	jne    0x140005e00
   140005d90:	jo     0x140005e01
   140005d92:	jb     0x140005e08
   140005d94:	sub    eax,0x322d316c
   140005d99:	sub    eax,0x6c642e30
   140005d9e:	ins    BYTE PTR es:[rdi],dx
   140005d9f:	add    BYTE PTR [rax],cl
   140005da1:	add    BYTE PTR [rdi+0x65],al
   140005da4:	je     0x140005de9
   140005da6:	jne    0x140005e1a
   140005da8:	jb     0x140005e0f
   140005daa:	outs   dx,BYTE PTR ds:[rsi]
   140005dab:	je     0x140005dfd
   140005dad:	(bad)  
   140005dae:	movsxd ebp,DWORD PTR [rbx+0x61]
   140005db1:	addr32 gs rex.WB
   140005db4:	add    BYTE PTR fs:[rcx+0x70],ah
   140005db8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x612d6e69        # 0x1b72dd12f
   140005dc2:	jo     0x140005e34
   140005dc4:	ins    DWORD PTR es:[rdi],dx
   140005dc5:	outs   dx,DWORD PTR ds:[rsi]
   140005dc6:	fs gs ins BYTE PTR es:[rdi],dx
   140005dc9:	sub    eax,0x746e7572
   140005dce:	imul   ebp,DWORD PTR [rbp+0x65],0x2d316c2d
   140005dd5:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac648c0c
   140005ddb:	ins    BYTE PTR es:[rdi],dx
   140005ddc:	add    BYTE PTR [rax],al
   140005dde:	(bad)  
   140005ddf:	add    BYTE PTR [rbp+0x46],cl
   140005de2:	rex.XB jb 0x140005e4a
   140005de5:	(bad)  
   140005de6:	je     0x140005e4d
   140005de8:	push   rax
   140005de9:	rex.WRB push r8
   140005deb:	rex.W outs dx,DWORD PTR ds:[rsi]
   140005ded:	jae    0x140005e63
   140005def:	add    BYTE PTR [rbp+0x46],cl
   140005df2:	rex.XB
   140005df3:	rex.WRXB push r10
   140005df5:	rex.RB
   140005df6:	cs fs ins BYTE PTR es:[rdi],dx
   140005df9:	ins    BYTE PTR es:[rdi],dx
   140005dfa:	add    BYTE PTR [rax],al
   140005dfc:	lods   eax,DWORD PTR ds:[rsi]
   140005dfd:	add    BYTE PTR [rbp+0x46],cl
   140005e00:	push   rbx
   140005e01:	push   0x6f647475
   140005e06:	ja     0x140005e76
   140005e08:	add    BYTE PTR [rax],al
   140005e0a:	scas   al,BYTE PTR es:[rdi]
   140005e0b:	add    BYTE PTR [rbp+0x46],cl
   140005e0e:	push   rbx
   140005e0f:	je     0x140005e72
   140005e11:	jb     0x140005e87
   140005e13:	jne    0x140005e85
   140005e15:	add    BYTE PTR [rbp+0x46],cl
   140005e18:	push   rax
   140005e19:	ins    BYTE PTR es:[rdi],dx
   140005e1a:	(bad)  
   140005e1b:	je     0x140005e4b
   140005e1d:	rex.R
   140005e1e:	rex.WR
   140005e1f:	rex.WR add BYTE PTR [rax],r8b
   140005e22:	add    DWORD PTR [rax],eax
   140005e24:	push   rdx
   140005e25:	gs jae 0x140005e97
   140005e28:	ins    BYTE PTR es:[rdi],dx
   140005e29:	jbe    0x140005e90
   140005e2b:	rex.R
   140005e2c:	gs ins BYTE PTR es:[rdi],dx
   140005e2e:	(bad)  
   140005e2f:	jns    0x140005e7d
   140005e31:	outs   dx,DWORD PTR ds:[rsi]
   140005e32:	(bad)  
   140005e33:	fs gs fs push r8
   140005e38:	rex.WB add BYTE PTR [r8],al
   140005e3b:	add    BYTE PTR [rbp+riz*2+0x6c],al
   140005e3f:	(bad)  
   140005e40:	jns    0x140005e8e
   140005e42:	outs   dx,DWORD PTR ds:[rsi]
   140005e43:	(bad)  
   140005e44:	fs rex.RX (bad) 
   140005e47:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   140005e4f:	imul   eax,DWORD PTR [rax],0x0
   140005e52:	(bad)  
   140005e53:	jo     0x140005ebe
   140005e55:	sub    eax,0x772d736d
   140005e5a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005e61:	sub    eax,0x616c6564
   140005e66:	jns    0x140005ed4
   140005e68:	outs   dx,DWORD PTR ds:[rsi]
   140005e69:	(bad)  
   140005e6a:	fs sub eax,0x312d316c
   140005e70:	sub    eax,0x6c642e31
   140005e75:	ins    BYTE PTR es:[rdi],dx
   140005e76:	add    BYTE PTR [rax],al
   140005e78:	add    BYTE PTR [rax],al
   140005e7a:	rex.B jo 0x140005ee6
   140005e7d:	push   rbx
   140005e7e:	gs je  0x140005ed2
   140005e81:	jne    0x140005ee8
   140005e83:	jb     0x140005efe
   140005e85:	rex.B jo 0x140005ef1
   140005e88:	push   rbx
   140005e89:	gs je  0x140005edc
   140005e8c:	jb     0x140005ef3
   140005e8e:	jae    0x140005ef5
   140005e90:	outs   dx,BYTE PTR ds:[rsi]
   140005e91:	movsxd esp,DWORD PTR [rbp+0x0]
   140005e94:	(bad)  
   140005e95:	jo     0x140005f00
   140005e97:	sub    eax,0x772d736d
   140005e9c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140005ea3:	sub    eax,0x71697061
   140005ea8:	jne    0x140005f0f
   140005eaa:	jb     0x140005f25
   140005eac:	sub    eax,0x312d316c
   140005eb1:	sub    eax,0x6c642e30
   140005eb6:	ins    BYTE PTR es:[rdi],dx
   140005eb7:	add    BYTE PTR [rdx+0x6d656d04],dl
   140005ebd:	movsxd esi,DWORD PTR [rax+0x79]
	...

Disassembly of section .data:

0000000140006000 <.data>:
   140006000:	add    DWORD PTR [rax],eax
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000600e:	add    BYTE PTR [rax],al
   140006010:	int    0x5d
   140006012:	and    dl,dl
   140006014:	data16 (bad) 
   140006016:	(bad)  
   140006017:	inc    DWORD PTR [rax]
   140006019:	add    BYTE PTR [rax],al
   14000601b:	add    BYTE PTR [rax],al
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    BYTE PTR [rax],ah
   140006021:	(bad)  
   140006022:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .pdata:

0000000140007000 <.pdata>:
   140007000:	adc    BYTE PTR [rax],dl
   140007002:	add    BYTE PTR [rax],al
   140007004:	adc    BYTE PTR [rax],al
   140007007:	add    BYTE PTR [rax+0x4b],ah
   14000700a:	add    BYTE PTR [rax],al
   14000700c:	adc    BYTE PTR [rax],al
   14000700f:	add    BYTE PTR [rdi+0x74000012],al
   140007015:	rex.WXB add BYTE PTR [r8],al
   140007018:	xchg   DWORD PTR [rdx],edx
   14000701a:	add    BYTE PTR [rax],al
   14000701c:	es (bad) 
   14000701e:	add    BYTE PTR [rax],al
   140007020:	pushf  
   140007021:	rex.WXB add BYTE PTR [r8],al
   140007024:	es (bad) 
   140007026:	add    BYTE PTR [rax],al
   140007028:	cmp    edx,DWORD PTR [rdi]
   14000702a:	add    BYTE PTR [rax],al
   14000702c:	mov    al,0x4b
   14000702e:	add    BYTE PTR [rax],al
   140007030:	cmp    edx,DWORD PTR [rdi]
   140007032:	add    BYTE PTR [rax],al
   140007034:	mov    DWORD PTR [rdi],edx
   140007036:	add    BYTE PTR [rax],al
   140007038:	ror    BYTE PTR [rbx+0x0],0x0
   14000703c:	nop
   14000703d:	(bad)  
   14000703e:	add    BYTE PTR [rax],al
   140007040:	mov    edx,0x9c000017
   140007045:	rex.WR add BYTE PTR [rax],r8b
   140007048:	mov    edx,0xec000017
   14000704d:	(bad)  
   14000704e:	add    BYTE PTR [rax],al
   140007050:	test   al,0x4c
   140007052:	add    BYTE PTR [rax],al
   140007054:	in     al,dx
   140007055:	(bad)  
   140007056:	add    BYTE PTR [rax],al
   140007058:	xchg   DWORD PTR [rax],ebx
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	mov    esp,0x8700004c
   140007061:	sbb    BYTE PTR [rax],al
   140007063:	add    BYTE PTR [rax+rbx*1+0x4cd80000],cl
   14000706a:	add    BYTE PTR [rax],al
   14000706c:	mov    WORD PTR [rax],ds
   14000706e:	add    BYTE PTR [rax],al
   140007070:	cdq    
   140007071:	sbb    BYTE PTR [rax],al
   140007073:	add    al,ch
   140007075:	rex.WR add BYTE PTR [rax],r8b
   140007078:	movabs al,ds:0x3c000018c4000018
   140007081:	rex.WRB add BYTE PTR [r8],r8b
   140007084:	(bad)  
   140007085:	sbb    BYTE PTR [rax],al
   140007087:	add    BYTE PTR [rax+0x19],bl
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	rex.WR
   14000708d:	rex.WRB add BYTE PTR [r8],r8b
   140007090:	pop    rax
   140007091:	sbb    DWORD PTR [rax],eax
   140007093:	add    BYTE PTR [rsi+0x19],ah
   140007096:	add    BYTE PTR [rax],al
   140007098:	rex.WRB add BYTE PTR fs:[r8],r8b
   14000709c:	jo     0x1400070b7
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	(bad)  
   1400070a1:	sbb    DWORD PTR [rax],eax
   1400070a3:	add    BYTE PTR [rbp+rcx*2+0x19e00000],bl
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	pop    rbx
   1400070ad:	sbb    al,BYTE PTR [rax]
   1400070af:	add    BYTE PTR [rax+0x7000004d],bh
   1400070b5:	sbb    al,BYTE PTR [rax]
   1400070b7:	add    BYTE PTR [rdi-0x3bffffe6],bh
   1400070bd:	rex.WRB add BYTE PTR [r8],r8b
   1400070c0:	rcr    BYTE PTR [rdx],1
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	sub    eax,0xe400001b
   1400070c9:	rex.WRB add BYTE PTR [r8],r8b
   1400070cc:	rex sbb eax,DWORD PTR [rax]
   1400070cf:	add    BYTE PTR [rcx+0x1b],bl
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	add    al,0x4e
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	pop    rcx
   1400070d9:	sbb    eax,DWORD PTR [rax]
   1400070db:	add    BYTE PTR [rbx],al
   1400070dd:	sbb    al,0x0
   1400070df:	add    BYTE PTR [rax],dl
   1400070e1:	rex.WRX add BYTE PTR [rax],r8b
   1400070e4:	add    ebx,DWORD PTR [rax+rax*1]
   1400070e7:	add    BYTE PTR [rsi],cl
   1400070e9:	sbb    al,0x0
   1400070eb:	add    BYTE PTR [rsi+rcx*2],ah
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	(bad)  
   1400070f1:	sbb    al,0x0
   1400070f3:	add    BYTE PTR [rbx+0x1c],bl
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	xor    al,0x4e
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	pop    rbx
   1400070fd:	sbb    al,0x0
   1400070ff:	add    BYTE PTR [rcx+0x4800001c],ch
   140007105:	rex.WRX add BYTE PTR [rax],r8b
   140007108:	test   eax,0xb600001c
   14000710d:	sbb    al,0x0
   14000710f:	add    BYTE PTR [rsi+rcx*2+0x0],bl
   140007113:	add    al,al
   140007115:	sbb    al,0x0
   140007117:	add    bl,ch
   140007119:	sbb    al,0x0
   14000711b:	add    BYTE PTR [rax+0x2000004e],dl
   140007121:	sbb    eax,0x1d270000
   140007126:	add    BYTE PTR [rax],al
   140007128:	ror    BYTE PTR [rsi+0x0],0x0
   14000712c:	(bad)  
   14000712d:	sbb    eax,0x1e600000
   140007132:	add    BYTE PTR [rax],al
   140007134:	int3   
   140007135:	rex.WRX add BYTE PTR [rax],r8b
   140007138:	(bad)  
   140007139:	(bad)  
   14000713a:	add    BYTE PTR [rax],al
   14000713c:	movabs ds:0xb000004ee800001e,al
   140007145:	(bad)  
   140007146:	add    BYTE PTR [rax],al
   140007148:	nop    DWORD PTR [rax]
   14000714b:	add    BYTE PTR [rax+0x2000004d],bh
   140007151:	(bad)  
   140007152:	add    BYTE PTR [rax],al
   140007154:	jno    0x140007175
   140007156:	add    BYTE PTR [rax],al
   140007158:	xor    BYTE PTR [rdi+0x0],cl
   14000715b:	add    BYTE PTR [rax-0x29ffffe1],ah
   140007161:	(bad)  
   140007162:	add    BYTE PTR [rax],al
   140007164:	rex.WR
   140007165:	rex.WRXB add BYTE PTR [r8],r8b
   140007168:	hlt    
   140007169:	(bad)  
   14000716a:	add    BYTE PTR [rax],al
   14000716c:	sub    eax,0xb8000020
   140007171:	rex.WRB add BYTE PTR [r8],r8b
   140007174:	and    BYTE PTR [rax],al
   140007177:	add    BYTE PTR [rdi],cl
   140007179:	and    DWORD PTR [rax],eax
   14000717b:	add    BYTE PTR [rax+0x2000004f],cl
   140007181:	and    DWORD PTR [rax],eax
   140007183:	add    BYTE PTR [rcx+0x21],ch
   140007186:	add    BYTE PTR [rax],al
   140007188:	rex.WR
   140007189:	rex.WRXB add BYTE PTR [r8],r8b
   14000718c:	jo     0x1400071af
   14000718e:	add    BYTE PTR [rax],al
   140007190:	loope  0x1400071b5
   140007192:	add    BYTE PTR [rax],al
   140007194:	nop
   140007195:	rex.WRXB add BYTE PTR [r8],r8b
   140007198:	lock and eax,DWORD PTR [rax]
   14000719b:	add    BYTE PTR [rdx],al
   14000719d:	and    al,0x0
   14000719f:	add    BYTE PTR [rax+0x2000004f],cl
   1400071a5:	and    al,0x0
   1400071a7:	add    BYTE PTR [rsi],bh
   1400071a9:	and    al,0x0
   1400071ab:	add    al,dl
   1400071ad:	rex.WRXB add BYTE PTR [r8],r8b
   1400071b0:	jo     0x1400071d6
   1400071b2:	add    BYTE PTR [rax],al
   1400071b4:	test   eax,0x88000024
   1400071b9:	rex.WRXB add BYTE PTR [r8],r8b
   1400071bc:	mov    al,0x24
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	enter  0x24,0x0
   1400071c4:	mov    BYTE PTR [rdi+0x0],cl
   1400071c7:	add    ah,bl
   1400071c9:	and    al,0x0
   1400071cb:	add    BYTE PTR [rax],dh
   1400071cd:	and    eax,0x4fd40000
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	cmp    BYTE PTR [rip+0x257d0000],ah        # 0x1657d71da
   1400071da:	add    BYTE PTR [rax],al
   1400071dc:	push   rsp
   1400071dd:	rex.WRXB add BYTE PTR [r8],r8b
   1400071e0:	loopne 0x140007207
   1400071e2:	add    BYTE PTR [rax],al
   1400071e4:	sub    eax,0xf4000026
   1400071e9:	rex.WRXB add BYTE PTR [r8],r8b
   1400071ec:	je     0x140007214
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	rex.R (bad) 
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	sbb    BYTE PTR [rax+0x0],dl
   1400071f7:	add    BYTE PTR [rdi+riz*1+0x27c00000],cl
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	push   rsp
   140007201:	rex.WRXB add BYTE PTR [r8],r8b
   140007204:	shl    BYTE PTR [rdi],1
   140007206:	add    BYTE PTR [rax],al
   140007208:	sub    DWORD PTR [r8],eax
   14000720b:	add    BYTE PTR [rax+rdx*2],ah
   14000720e:	add    BYTE PTR [rax],al
   140007210:	sub    BYTE PTR [rcx],0x0
   140007213:	add    bh,dh
   140007215:	sub    DWORD PTR [rax],eax
   140007217:	add    BYTE PTR [rax+rdx*2],dh
   14000721a:	add    BYTE PTR [rax],al
   14000721c:	add    BYTE PTR [rdx],ch
   14000721e:	add    BYTE PTR [rax],al
   140007220:	rex.WRX sub r8b,BYTE PTR [rax]
   140007223:	add    BYTE PTR [rax-0x5fffffb1],cl
   140007229:	sub    al,BYTE PTR [rax]
   14000722b:	add    BYTE PTR [rdi],dl
   14000722d:	sub    eax,DWORD PTR [rax]
   14000722f:	add    BYTE PTR [rax+rdx*2],bh
   140007232:	add    BYTE PTR [rax],al
   140007234:	pop    rsp
   140007235:	sub    eax,DWORD PTR [rax]
   140007237:	add    BYTE PTR [rcx+0x2b],bh
   14000723a:	add    BYTE PTR [rax],al
   14000723c:	mov    BYTE PTR [rdi+0x0],cl
   14000723f:	add    BYTE PTR [rax-0x1cffffd5],al
   140007245:	sub    eax,DWORD PTR [rax]
   140007247:	add    BYTE PTR [rdi+rcx*2+0x0],dl
   14000724b:	add    BYTE PTR [rax],al
   14000724d:	sub    al,0x0
   14000724f:	add    BYTE PTR [rdx],al
   140007251:	sub    al,0x0
   140007253:	add    BYTE PTR [rax],dh
   140007255:	push   rax
   140007256:	add    BYTE PTR [rax],al
   140007258:	xchg   BYTE PTR [rax+rax*1],ch
   14000725b:	add    BYTE PTR [rsp+rbp*1+0x4fc40000],ah
   140007262:	add    BYTE PTR [rax],al
   140007264:	mov    al,0x2c
   140007266:	add    BYTE PTR [rax],al
   140007268:	shr    BYTE PTR [rax+rax*1],1
   14000726b:	add    ah,al
   14000726d:	rex.WRXB add BYTE PTR [r8],r8b
   140007270:	shr    BYTE PTR [rax+rax*1],1
   140007273:	add    BYTE PTR [rcx],ah
   140007275:	sub    eax,0x4bd40000
   14000727a:	add    BYTE PTR [rax],al
   14000727c:	and    DWORD PTR [rip+0x309b0000],ebp        # 0x1709b7282
   140007282:	add    BYTE PTR [rax],al
   140007284:	cld    
   140007285:	rex.WXB add BYTE PTR [r8],al
   140007288:	fwait
   140007289:	xor    BYTE PTR [rax],al
   14000728b:	add    cl,dl
   14000728d:	xor    BYTE PTR [rax],al
   14000728f:	add    BYTE PTR [rax],ch
   140007291:	rex.WR add BYTE PTR [rax],r8b
   140007294:	shl    DWORD PTR [rax],1
   140007296:	add    BYTE PTR [rax],al
   140007298:	(bad)  
   140007299:	xor    DWORD PTR [rax],eax
   14000729b:	add    BYTE PTR [rax+0x4c],dl
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	(bad)  
   1400072a1:	xor    DWORD PTR [rax],eax
   1400072a3:	add    BYTE PTR [rdi+0x74000031],cl
   1400072a9:	rex.WR add BYTE PTR [rax],r8b
   1400072ac:	(bad)  
   1400072ad:	xor    DWORD PTR [rax],eax
   1400072af:	add    BYTE PTR [rip+0xffffffff8c000032],bl        # 0xcc0072e7
   1400072b5:	rex.WR add BYTE PTR [rax],r8b
   1400072b8:	(bad)  
   1400072b9:	xor    al,BYTE PTR [rax]
   1400072bb:	add    BYTE PTR [rdi],ch
   1400072bd:	xor    al,BYTE PTR [rax]
   1400072bf:	add    al,bh
   1400072c1:	rex.WR add BYTE PTR [rax],r8b
   1400072c4:	(bad)  
   1400072c5:	xor    al,BYTE PTR [rax]
   1400072c7:	add    BYTE PTR [rbx+rsi*1],bl
   1400072ca:	add    BYTE PTR [rax],al
   1400072cc:	or     al,0x4d
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	sbb    al,0x33
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	sub    eax,0x2c000033
   1400072d9:	rex.WRB add BYTE PTR [r8],r8b
   1400072dc:	xor    eax,DWORD PTR cs:[rax]
   1400072df:	add    BYTE PTR [rbx],bh
   1400072e1:	xor    eax,DWORD PTR [rax]
   1400072e3:	add    BYTE PTR [rbp+rcx*2+0x0],dh
   1400072e7:	add    BYTE PTR [rbx],bh
   1400072e9:	xor    eax,DWORD PTR [rax]
   1400072eb:	add    BYTE PTR [rbp+0x33],ch
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	test   BYTE PTR [rbp+0x0],cl
   1400072f3:	add    BYTE PTR [rsi+0x33],ch
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	(bad)  
   1400072f9:	xor    eax,DWORD PTR [rax]
   1400072fb:	add    BYTE PTR [rax-0x7dffffb3],ch
   140007301:	xor    eax,DWORD PTR [rax]
   140007303:	add    ch,ah
   140007305:	xor    eax,DWORD PTR [rax]
   140007307:	add    ah,dl
   140007309:	rex.WRB add BYTE PTR [r8],r8b
   14000730c:	out    0x33,al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	cli    
   140007311:	xor    eax,DWORD PTR [rax]
   140007313:	add    ah,dh
   140007315:	rex.WRB add BYTE PTR [r8],r8b
   140007318:	cli    
   140007319:	xor    eax,DWORD PTR [rax]
   14000731b:	add    BYTE PTR [rsp+rsi*1],al
   14000731e:	add    BYTE PTR [rax],al
   140007320:	ins    BYTE PTR es:[rdi],dx
   140007321:	rex.WRX add BYTE PTR [rax],r8b
   140007324:	add    al,0x34
   140007326:	add    BYTE PTR [rax],al
   140007328:	and    BYTE PTR [rax+rax*1],dh
   14000732b:	add    BYTE PTR [rsi+rcx*2+0x0],bh
   14000732f:	add    BYTE PTR [rax],ah
   140007331:	xor    al,0x0
   140007333:	add    BYTE PTR [rsp+rsi*1],ch
   140007336:	add    BYTE PTR [rax],al
   140007338:	pushf  
   140007339:	rex.WRX add BYTE PTR [rax],r8b
   14000733c:	sub    al,0x34
   14000733e:	add    BYTE PTR [rax],al
   140007340:	push   rdx
   140007341:	xor    al,0x0
   140007343:	add    BYTE PTR [rsi+rcx*2+0x34520000],ch
   14000734a:	add    BYTE PTR [rax],al
   14000734c:	jg     0x140007382
   14000734e:	add    BYTE PTR [rax],al
   140007350:	cld    
   140007351:	rex.WRX add BYTE PTR [rax],r8b
   140007354:	jg     0x14000738a
   140007356:	add    BYTE PTR [rax],al
   140007358:	xor    eax,0x14000035
   14000735d:	rex.WRXB add BYTE PTR [r8],r8b
   140007360:	ss xor eax,0x355f0000
   140007366:	add    BYTE PTR [rax],al
   140007368:	cmp    al,0x4f
   14000736a:	add    BYTE PTR [rax],al
   14000736c:	push   0xffffffffb7000035
   140007371:	xor    eax,0x4f540000
   140007376:	add    BYTE PTR [rax],al
   140007378:	loopne 0x1400073af
   14000737a:	add    BYTE PTR [rax],al
   14000737c:	icebp  
   14000737d:	xor    eax,0x4f5c0000
   140007382:	add    BYTE PTR [rax],al
   140007384:	icebp  
   140007385:	xor    eax,0x360d0000
   14000738a:	add    BYTE PTR [rax],al
   14000738c:	rex.WRXB add BYTE PTR fs:[r8],r8b
   140007390:	or     eax,0x13000036
   140007395:	add    BYTE PTR ss:[rax],al
   140007398:	js     0x1400073e9
   14000739a:	add    BYTE PTR [rax],al
   14000739c:	sbb    al,0x36
   14000739e:	add    BYTE PTR [rax],al
   1400073a0:	push   rbp
   1400073a1:	add    BYTE PTR ss:[rax],al
   1400073a4:	push   rsp
   1400073a5:	push   rax
   1400073a6:	add    BYTE PTR [rax],al
   1400073a8:	pop    rsp
   1400073a9:	add    BYTE PTR ss:[rax],al
   1400073ac:	cmc    
   1400073ad:	add    BYTE PTR ss:[rax],al
   1400073b0:	rex.WR push rax
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	cld    
   1400073b5:	add    BYTE PTR ss:[rax],al
   1400073b8:	rex.XB (bad) 
   1400073ba:	add    BYTE PTR [rax],al
   1400073bc:	rex.R push rax
   1400073be:	add    BYTE PTR [rax],al
   1400073c0:	rex.WR (bad) 
   1400073c2:	add    BYTE PTR [rax],al
   1400073c4:	or     bh,BYTE PTR [rax]
   1400073c6:	add    BYTE PTR [rax],al
   1400073c8:	adc    BYTE PTR [rax+0x0],0x0
   1400073cc:	adc    BYTE PTR [rax],bh
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	(bad)  
   1400073d1:	cmp    BYTE PTR [rax],al
   1400073d3:	add    BYTE PTR [rax+0x5000004d],bh
   1400073d9:	cmp    BYTE PTR [rax],al
   1400073db:	add    BYTE PTR [rax+0x38],dh
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	rex.WR
   1400073e1:	rex.WRXB add BYTE PTR [r8],r8b
   1400073e4:	cwde   
   1400073e5:	cmp    BYTE PTR [rax],al
   1400073e7:	add    BYTE PTR [rbp+0x39],ah
   1400073ea:	add    BYTE PTR [rax],al
   1400073ec:	push   0x70000050
   1400073f1:	cmp    DWORD PTR [rax],eax
   1400073f3:	add    bh,al
   1400073f5:	cmp    DWORD PTR [rax],eax
   1400073f7:	add    BYTE PTR [rax-0x2fffffb3],bh
   1400073fd:	cmp    DWORD PTR [rax],eax
   1400073ff:	add    BYTE PTR [rax],dh
   140007401:	cmp    al,BYTE PTR [rax]
   140007403:	add    BYTE PTR [rax+rdx*2+0x0],bl
   140007407:	add    BYTE PTR [rax],bh
   140007409:	cmp    al,BYTE PTR [rax]
   14000740b:	add    BYTE PTR [rax+0x3b],bl
   14000740e:	add    BYTE PTR [rax],al
   140007410:	cwde   
   140007411:	push   rax
   140007412:	add    BYTE PTR [rax],al
   140007414:	(bad)  
   140007415:	cmp    eax,DWORD PTR [rax]
   140007417:	add    BYTE PTR [rbx-0x7fffffc5],dh
   14000741d:	push   rax
   14000741e:	add    BYTE PTR [rax],al
   140007420:	sar    BYTE PTR [rbx],0x0
   140007423:	add    BYTE PTR [rip+0x5c00003c],ch        # 0x19c007465
   140007429:	push   rax
   14000742a:	add    BYTE PTR [rax],al
   14000742c:	xor    al,0x3c
   14000742e:	add    BYTE PTR [rax],al
   140007430:	mov    al,0x3c
   140007432:	add    BYTE PTR [rax],al
   140007434:	nop
   140007435:	push   rax
	...

Disassembly of section .didat:

0000000140008000 <.didat>:
   140008000:	sub    BYTE PTR [rdx],0x0
   140008003:	rex add DWORD PTR [rax],eax
   140008006:	add    BYTE PTR [rax],al
   140008008:	and    BYTE PTR [rbx],ch
   14000800a:	add    BYTE PTR [rax+0x1],al
	...
   140008015:	add    BYTE PTR [rax],al
   140008017:	add    BYTE PTR [rax+0x2a],ah
   14000801a:	add    BYTE PTR [rax+0x1],al
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	add    BYTE PTR [rax+0x29],ah
   140008022:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rsrc:

0000000140009000 <.rsrc>:
	...
   14000900c:	add    DWORD PTR [rax],eax
   14000900e:	add    al,BYTE PTR [rax]
   140009010:	call   0x168809015
   140009015:	add    BYTE PTR [rax],al
   140009017:	adc    BYTE PTR [rax],0x0
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    BYTE PTR [rax],al
   14000901f:	sbb    BYTE PTR [rax],0x0
   140009022:	add    BYTE PTR [rax],al
   140009024:	pop    rax
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rax],0x0
	...
   140009036:	add    DWORD PTR [rax],eax
   140009038:	add    DWORD PTR [rax],eax
   14000903a:	add    BYTE PTR [rax],al
   14000903c:	jo     0x14000903e
   14000903e:	add    BYTE PTR [rax+0x0],al
	...
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    DWORD PTR [rax],eax
   140009050:	add    DWORD PTR [rax],eax
   140009052:	add    BYTE PTR [rax],al
   140009054:	mov    BYTE PTR [rax],al
   140009056:	add    BYTE PTR [rax+0x0],al
	...
   140009064:	add    BYTE PTR [rax],al
   140009066:	add    DWORD PTR [rax],eax
   140009068:	add    DWORD PTR [rax],eax
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	movabs al,ds:0x800000
	...
   14000907d:	add    BYTE PTR [rcx],al
   14000907f:	add    BYTE PTR [rcx],cl
   140009081:	add    al,0x0
   140009083:	add    BYTE PTR [rax+0x0],bh
	...
   140009095:	add    BYTE PTR [rcx],al
   140009097:	add    BYTE PTR [rcx],cl
   140009099:	add    al,0x0
   14000909b:	add    al,cl
	...
   1400090ad:	add    BYTE PTR [rcx],al
   1400090af:	add    BYTE PTR [rcx],cl
   1400090b1:	add    al,0x0
   1400090b3:	add    al,bl
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    BYTE PTR [rax-0x37ffff69],dl
	...
   1400090c5:	add    BYTE PTR [rax],al
   1400090c7:	add    BYTE PTR [rax-0x1bffff6d],ch
   1400090cd:	add    eax,DWORD PTR [rax]
	...
   1400090d7:	add    al,dh
   1400090d9:	nop
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	mov    dl,0x2
	...
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	add    eax,DWORD PTR [rax]
   1400090ea:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400090ee:	rex.WB add BYTE PTR [r15+rdi*1],dil
   1400090f2:	js     0x140009161
   1400090f4:	ins    BYTE PTR es:[rdi],dx
   1400090f5:	and    BYTE PTR [rsi+0x65],dh
   1400090f8:	jb     0x14000916d
   1400090fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140009101:	xor    BYTE PTR [rdx],ah
   140009103:	and    BYTE PTR [rbp+0x6e],ah
   140009106:	movsxd ebp,DWORD PTR [rdi+0x64]
   140009109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140009110:	rex.RX sub eax,0x73202238
   140009116:	je     0x140009179
   140009118:	outs   dx,BYTE PTR ds:[rsi]
   140009119:	fs (bad) 
   14000911b:	ins    BYTE PTR es:[rdi],dx
   14000911c:	outs   dx,DWORD PTR ds:[rsi]
   14000911d:	outs   dx,BYTE PTR ds:[rsi]
   14000911e:	gs cmp eax,0x73657922
   140009124:	and    bh,BYTE PTR [rdi]
   140009126:	ds or  eax,0x2d213c0a
   14000912c:	sub    eax,0x706f4320
   140009131:	jns    0x1400091a5
   140009133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000913a:	sub    DWORD PTR [rax],esp
   14000913c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140009144:	je     0x140009166
   140009146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009148:	jb     0x1400091ba
   14000914a:	outs   dx,DWORD PTR ds:[rsi]
   14000914b:	jb     0x1400091ae
   14000914d:	je     0x1400091b8
   14000914f:	outs   dx,DWORD PTR ds:[rsi]
   140009150:	outs   dx,BYTE PTR ds:[rsi]
   140009151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dcf84
   140009157:	cmp    al,0x61
   140009159:	jae    0x1400091ce
   14000915b:	gs ins DWORD PTR es:[rdi],dx
   14000915d:	(bad)  
   14000915e:	ins    BYTE PTR es:[rdi],dx
   14000915f:	jns    0x140009181
   140009161:	js     0x1400091d0
   140009163:	ins    BYTE PTR es:[rdi],dx
   140009164:	outs   dx,BYTE PTR ds:[rsi]
   140009165:	jae    0x1400091a4
   140009167:	and    dh,BYTE PTR [rbp+0x72]
   14000916a:	outs   dx,BYTE PTR ds:[rsi]
   14000916b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000916e:	push   0x73616d65
   140009173:	sub    eax,0x7263696d
   140009178:	outs   dx,DWORD PTR ds:[rsi]
   140009179:	jae    0x1400091ea
   14000917b:	data16 je 0x1400091ab
   14000917e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009181:	cmp    ah,BYTE PTR [rcx+0x73]
   140009184:	ins    DWORD PTR es:[rdi],dx
   140009185:	cs jbe 0x1400091b9
   140009188:	and    ah,BYTE PTR [rax]
   14000918a:	ins    DWORD PTR es:[rdi],dx
   14000918b:	(bad)  
   14000918c:	outs   dx,BYTE PTR ds:[rsi]
   14000918d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140009194:	jb     0x140009209
   140009196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000919d:	xor    BYTE PTR [rdx],ah
   14000919f:	ds or  eax,0x73613c0a
   1400091a5:	jae    0x14000920c
   1400091a7:	ins    DWORD PTR es:[rdi],dx
   1400091a8:	(bad)  
   1400091a9:	ins    BYTE PTR es:[rdi],dx
   1400091aa:	jns    0x1400091f5
   1400091ac:	fs outs dx,BYTE PTR gs:[rsi]
   1400091af:	je     0x14000921a
   1400091b1:	je     0x14000922c
   1400091b3:	or     eax,0x2020200a
   1400091b8:	and    BYTE PTR [rsi+0x65],dh
   1400091bb:	jb     0x140009230
   1400091bd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400091c4:	xor    DWORD PTR [rsi],ebp
   1400091c6:	xor    BYTE PTR [rsi],ch
   1400091c8:	xor    BYTE PTR [rdx],ah
   1400091ca:	or     eax,0x2020200a
   1400091cf:	and    BYTE PTR [rax+0x72],dh
   1400091d2:	outs   dx,DWORD PTR ds:[rsi]
   1400091d3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400091d6:	jae    0x140009247
   1400091d8:	jb     0x14000921b
   1400091da:	jb     0x14000923f
   1400091dc:	push   0x63657469
   1400091e1:	je     0x140009258
   1400091e3:	jb     0x14000924a
   1400091e5:	cmp    eax,0x646d6122
   1400091ea:	ss xor al,0x22
   1400091ed:	or     eax,0x2020200a
   1400091f2:	and    BYTE PTR [rsi+0x61],ch
   1400091f5:	ins    DWORD PTR es:[rdi],dx
   1400091f6:	gs cmp eax,0x63694d22
   1400091fc:	jb     0x14000926d
   1400091fe:	jae    0x14000926f
   140009200:	data16 je 0x140009231
   140009203:	push   rdi
   140009204:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000920b:	rex.WRB
   14000920c:	rex.RX
   14000920d:	cs rex.WRB
   14000920f:	rex.RX push rax
   140009211:	rex.WRB push r8
   140009213:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020b223
   140009219:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000921d:	gs cmp eax,0x6e697722
   140009223:	xor    esi,DWORD PTR [rdx]
   140009225:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3ec135
   14000922b:	or     bh,BYTE PTR [rsp+riz*2]
   14000922e:	gs jae 0x140009294
   140009231:	jb     0x14000929c
   140009233:	jo     0x1400092a9
   140009235:	imul   ebp,DWORD PTR [rdi+0x6e],0x64654d3e
   14000923c:	imul   esp,DWORD PTR [rcx+0x20],0x6e756f46
   140009243:	fs (bad) 
   140009245:	je     0x1400092b0
   140009247:	outs   dx,DWORD PTR ds:[rsi]
   140009248:	outs   dx,BYTE PTR ds:[rsi]
   140009249:	and    BYTE PTR [rax+0x72],dl
   14000924c:	outs   dx,DWORD PTR ds:[rsi]
   14000924d:	je     0x1400092b4
   14000924f:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140009253:	and    BYTE PTR [rax+0x69],dl
   140009256:	jo     0x1400092bd
   140009258:	ins    BYTE PTR es:[rdi],dx
   140009259:	imul   ebp,DWORD PTR [rsi+0x65],0x45584520
   140009260:	cmp    al,0x2f
   140009262:	fs gs jae 0x1400092c9
   140009266:	jb     0x1400092d1
   140009268:	jo     0x1400092de
   14000926a:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   140009271:	or     bh,BYTE PTR [rsp+rsi*2]
   140009274:	jb     0x1400092eb
   140009276:	jae    0x1400092ec
   140009278:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000927a:	outs   dx,WORD PTR ds:[rsi]
   14000927c:	and    BYTE PTR [rax+0x6d],bh
   14000927f:	ins    BYTE PTR es:[rdi],dx
   140009280:	outs   dx,BYTE PTR ds:[rsi]
   140009281:	jae    0x1400092c0
   140009283:	and    dh,BYTE PTR [rbp+0x72]
   140009286:	outs   dx,BYTE PTR ds:[rsi]
   140009287:	cmp    dh,BYTE PTR [rbx+0x63]
   14000928a:	push   0x73616d65
   14000928f:	sub    eax,0x7263696d
   140009294:	outs   dx,DWORD PTR ds:[rsi]
   140009295:	jae    0x140009306
   140009297:	data16 je 0x1400092c7
   14000929a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000929d:	cmp    ah,BYTE PTR [rcx+0x73]
   1400092a0:	ins    DWORD PTR es:[rdi],dx
   1400092a1:	cs jbe 0x1400092d7
   1400092a4:	and    bh,BYTE PTR [rsi]
   1400092a6:	or     eax,0x2020200a
   1400092ab:	and    BYTE PTR [rbx+rsi*2],bh
   1400092ae:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400092b2:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400092ba:	and    BYTE PTR [rax],ah
   1400092bc:	and    BYTE PTR [rax],ah
   1400092be:	and    BYTE PTR [rax],ah
   1400092c0:	cmp    al,0x72
   1400092c2:	gs jno 0x14000933a
   1400092c5:	gs jae 0x14000933c
   1400092c8:	gs fs push rax
   1400092cb:	jb     0x140009336
   1400092cd:	jbe    0x140009338
   1400092cf:	ins    BYTE PTR es:[rdi],dx
   1400092d0:	gs addr32 gs jae 0x140009313
   1400092d5:	or     eax,0x2020200a
   1400092da:	and    BYTE PTR [rax],ah
   1400092dc:	and    BYTE PTR [rax],ah
   1400092de:	and    BYTE PTR [rax],ah
   1400092e0:	and    BYTE PTR [rax],ah
   1400092e2:	and    BYTE PTR [rdx+rsi*2],bh
   1400092e5:	gs jno 0x14000935d
   1400092e8:	gs jae 0x14000935f
   1400092eb:	gs fs rex.RB js 0x140009355
   1400092f0:	movsxd esi,DWORD PTR [rbp+0x74]
   1400092f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400092fa:	ins    BYTE PTR es:[rdi],dx
   1400092fb:	or     eax,0x2020200a
   140009300:	and    BYTE PTR [rax],ah
   140009302:	and    BYTE PTR [rax],ah
   140009304:	and    BYTE PTR [rax],ah
   140009306:	and    BYTE PTR [rax],ah
   140009308:	and    BYTE PTR [rax],ah
   14000930a:	and    BYTE PTR [rax],ah
   14000930c:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140009310:	gs ins BYTE PTR es:[rdi],dx
   140009312:	cmp    eax,0x49736122
   140009317:	outs   dx,BYTE PTR ds:[rsi]
   140009318:	jbe    0x140009389
   14000931a:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000931e:	or     eax,0x2020200a
   140009323:	and    BYTE PTR [rax],ah
   140009325:	and    BYTE PTR [rax],ah
   140009327:	and    BYTE PTR [rax],ah
   140009329:	and    BYTE PTR [rax],ah
   14000932b:	and    BYTE PTR [rax],ah
   14000932d:	and    BYTE PTR [rax],ah
   14000932f:	and    BYTE PTR [rbp+0x69],dh
   140009332:	movsxd esp,DWORD PTR [r11+0x65]
   140009336:	jae    0x1400093ab
   140009338:	cmp    eax,0x6c616622
   14000933d:	jae    0x1400093a4
   14000933f:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020b34f
   140009345:	and    BYTE PTR [rax],ah
   140009347:	and    BYTE PTR [rax],ah
   140009349:	and    BYTE PTR [rax],ah
   14000934b:	and    BYTE PTR [rax],ah
   14000934d:	and    BYTE PTR [rdi],ch
   14000934f:	ds or  eax,0x2020200a
   140009355:	and    BYTE PTR [rax],ah
   140009357:	and    BYTE PTR [rax],ah
   140009359:	and    BYTE PTR [rdi+rbp*1],bh
   14000935c:	jb     0x1400093c3
   14000935e:	jno    0x1400093d5
   140009360:	gs jae 0x1400093d7
   140009363:	gs fs push rax
   140009366:	jb     0x1400093d1
   140009368:	jbe    0x1400093d3
   14000936a:	ins    BYTE PTR es:[rdi],dx
   14000936b:	gs addr32 gs jae 0x1400093ae
   140009370:	or     eax,0x2020200a
   140009375:	and    BYTE PTR [rdi+rbp*1],bh
   140009378:	jae    0x1400093df
   14000937a:	movsxd esi,DWORD PTR [rbp+0x72]
   14000937d:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140009385:	je     0x1400093f9
   140009387:	jne    0x1400093fc
   140009389:	je     0x1400093d4
   14000938b:	outs   dx,BYTE PTR ds:[rsi]
   14000938c:	outs   dx,WORD PTR ds:[rsi]
   14000938e:	ds or  eax,0x3c0a0d0a
   140009394:	(bad)  
   140009395:	(bad)  
   140009396:	jae    0x14000940b
   140009398:	gs ins DWORD PTR es:[rdi],dx
   14000939a:	(bad)  
   14000939b:	ins    BYTE PTR es:[rdi],dx
   14000939c:	jns    0x1400093dc
   14000939e:	or     eax,0xa0d0a
   1400093a3:	add    BYTE PTR [rax],al
   1400093a5:	add    BYTE PTR [rax],al
   1400093a7:	add    ah,ah
   1400093a9:	add    esi,DWORD PTR [rax+rax*1]
   1400093ac:	add    BYTE PTR [rax],al
   1400093ae:	push   rsi
   1400093af:	add    BYTE PTR [rbx+0x0],dl
   1400093b2:	pop    rdi
   1400093b3:	add    BYTE PTR [rsi+0x0],dl
   1400093b6:	add    BYTE PTR [r10+0x0],r10b
   1400093ba:	push   rbx
   1400093bb:	add    BYTE PTR [rcx+0x0],cl
   1400093be:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   1400093c2:	pop    rdi
   1400093c3:	add    BYTE PTR [rcx+0x0],cl
   1400093c6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   1400093ca:	rex.WRXB add BYTE PTR [r8],r8b
   1400093cd:	add    BYTE PTR [rax],al
   1400093cf:	add    BYTE PTR [rbp+0xfeef04],bh
   1400093d5:	add    BYTE PTR [rcx],al
   1400093d7:	add    BYTE PTR [rax],al
   1400093d9:	add    BYTE PTR [rax+rax*1],cl
   1400093dc:	fld    DWORD PTR [rdx+0x0]
   1400093df:	sub    BYTE PTR [rax],al
   1400093e1:	add    BYTE PTR [rax+rax*1],cl
   1400093e4:	fld    DWORD PTR [rdx+0x0]
   1400093e7:	sub    BYTE PTR [rdi],bh
   1400093e9:	add    BYTE PTR [rax],al
   1400093eb:	add    BYTE PTR [rax],al
   1400093ed:	add    BYTE PTR [rax],al
   1400093ef:	add    BYTE PTR [rax+rax*1],al
   1400093f2:	add    al,0x0
   1400093f4:	add    al,BYTE PTR [rax]
	...
   140009402:	add    BYTE PTR [rax],al
   140009404:	rex.X add eax,DWORD PTR [rax]
   140009407:	add    BYTE PTR [rcx],al
   140009409:	add    BYTE PTR [rbx+0x0],dl
   14000940c:	je     0x14000940e
   14000940e:	jb     0x140009410
   140009410:	imul   eax,DWORD PTR [rax],0x67006e
   140009416:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000941a:	ins    BYTE PTR es:[rdi],dx
   14000941b:	add    BYTE PTR [rbp+0x0],ah
   14000941e:	rex.WB add BYTE PTR [r14+0x0],bpl
   140009422:	data16 add BYTE PTR [rdi+0x0],ch
   140009426:	add    BYTE PTR [rax],al
   140009428:	(bad)  
   140009429:	add    eax,DWORD PTR [rax]
   14000942b:	add    BYTE PTR [rcx],al
   14000942d:	add    BYTE PTR [rax],dh
   14000942f:	add    BYTE PTR [rax+rax*1],dh
   140009432:	xor    BYTE PTR [rax],al
   140009434:	cmp    DWORD PTR [rax],eax
   140009436:	xor    BYTE PTR [rax],al
   140009438:	xor    al,0x0
   14000943a:	rex.X add BYTE PTR [rax],sil
   14000943d:	add    BYTE PTR [rax],al
   14000943f:	add    BYTE PTR [rax+rax*1+0x16],cl
   140009443:	add    BYTE PTR [rcx],al
   140009445:	add    BYTE PTR [rbx+0x0],al
   140009448:	outs   dx,DWORD PTR ds:[rsi]
   140009449:	add    BYTE PTR [rbp+0x0],ch
   14000944c:	jo     0x14000944e
   14000944e:	(bad)  
   14000944f:	add    BYTE PTR [rsi+0x0],ch
   140009452:	jns    0x140009454
   140009454:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140009458:	ins    DWORD PTR es:[rdi],dx
   140009459:	add    BYTE PTR [rbp+0x0],ah
   14000945c:	add    BYTE PTR [rax],al
   14000945e:	add    BYTE PTR [rax],al
   140009460:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140009464:	movsxd eax,DWORD PTR [rax]
   140009466:	jb     0x140009468
   140009468:	outs   dx,DWORD PTR ds:[rsi]
   140009469:	add    BYTE PTR [rbx+0x0],dh
   14000946c:	outs   dx,DWORD PTR ds:[rsi]
   14000946d:	add    BYTE PTR [rsi+0x0],ah
   140009470:	je     0x140009472
   140009472:	and    BYTE PTR [rax],al
   140009474:	rex.XB add BYTE PTR [r15+0x0],bpl
   140009478:	jb     0x14000947a
   14000947a:	jo     0x14000947c
   14000947c:	outs   dx,DWORD PTR ds:[rsi]
   14000947d:	add    BYTE PTR [rdx+0x0],dh
   140009480:	(bad)  
   140009481:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009485:	add    BYTE PTR [rdi+0x0],ch
   140009488:	outs   dx,BYTE PTR ds:[rsi]
   140009489:	add    BYTE PTR [rax],al
   14000948b:	add    BYTE PTR [rax+0x0],bh
   14000948e:	sub    BYTE PTR [rax],al
   140009490:	add    DWORD PTR [rax],eax
   140009492:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140009496:	ins    BYTE PTR es:[rdi],dx
   140009497:	add    BYTE PTR [rbp+0x0],ah
   14000949a:	add    BYTE PTR [rbp+0x0],r12b
   14000949e:	jae    0x1400094a0
   1400094a0:	movsxd eax,DWORD PTR [rax]
   1400094a2:	jb     0x1400094a4
   1400094a4:	imul   eax,DWORD PTR [rax],0x740070
   1400094aa:	imul   eax,DWORD PTR [rax],0x6e006f
   1400094b0:	add    BYTE PTR [rax],al
   1400094b2:	add    BYTE PTR [rax],al
   1400094b4:	rex.WRB add BYTE PTR [r13+0x0],r12b
   1400094b8:	add    BYTE PTR fs:[rcx+0x0],ch
   1400094bc:	(bad)  
   1400094bd:	add    BYTE PTR [rax],ah
   1400094bf:	add    BYTE PTR [rsi+0x0],al
   1400094c2:	outs   dx,DWORD PTR ds:[rsi]
   1400094c3:	add    BYTE PTR [rbp+0x0],dh
   1400094c6:	outs   dx,BYTE PTR ds:[rsi]
   1400094c7:	add    BYTE PTR [rax+rax*1+0x61],ah
   1400094cb:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400094cf:	add    BYTE PTR [rdi+0x0],ch
   1400094d2:	outs   dx,BYTE PTR ds:[rsi]
   1400094d3:	add    BYTE PTR [rax],ah
   1400094d5:	add    BYTE PTR [rax+0x0],dl
   1400094d8:	jb     0x1400094da
   1400094da:	outs   dx,DWORD PTR ds:[rsi]
   1400094db:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400094df:	add    BYTE PTR [rbx+0x0],ah
   1400094e2:	je     0x1400094e4
   1400094e4:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1400094e9:	add    BYTE PTR [rax+0x0],dl
   1400094ec:	imul   eax,DWORD PTR [rax],0x650070
   1400094f2:	ins    BYTE PTR es:[rdi],dx
   1400094f3:	add    BYTE PTR [rcx+0x0],ch
   1400094f6:	outs   dx,BYTE PTR ds:[rsi]
   1400094f7:	add    BYTE PTR [rbp+0x0],ah
   1400094fa:	and    BYTE PTR [rax],al
   1400094fc:	add    BYTE PTR [r8+0x0],r11b
   140009500:	add    BYTE PTR [r8],r8b
   140009503:	add    BYTE PTR [rsi+0x0],ah
   140009506:	and    eax,DWORD PTR [rax]
   140009508:	add    DWORD PTR [rax],eax
   14000950a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000950e:	ins    BYTE PTR es:[rdi],dx
   14000950f:	add    BYTE PTR [rbp+0x0],ah
   140009512:	push   rsi
   140009513:	add    BYTE PTR [rbp+0x0],ah
   140009516:	jb     0x140009518
   140009518:	jae    0x14000951a
   14000951a:	imul   eax,DWORD PTR [rax],0x6e006f
   140009520:	add    BYTE PTR [rax],al
   140009522:	add    BYTE PTR [rax],al
   140009524:	xor    DWORD PTR [rax],eax
   140009526:	xor    al,BYTE PTR [rax]
   140009528:	add    BYTE PTR cs:[rax],dh
   14000952b:	add    BYTE PTR [rsi],ch
   14000952d:	add    BYTE PTR [rcx],dh
   14000952f:	add    BYTE PTR [rax],dh
   140009531:	add    BYTE PTR [rdx],dh
   140009533:	add    BYTE PTR [rax+rax*1],dh
   140009536:	xor    BYTE PTR [rax],al
   140009538:	add    BYTE PTR cs:[rcx],dh
   14000953b:	add    BYTE PTR [rdi],dh
   14000953d:	add    BYTE PTR [rcx],dh
   14000953f:	add    BYTE PTR [rcx],dh
   140009541:	add    BYTE PTR [rbx],dh
   140009543:	add    BYTE PTR [rax],ah
   140009545:	add    BYTE PTR [rax],ch
   140009547:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000954b:	add    BYTE PTR [rcx],dh
   14000954d:	add    BYTE PTR [rsi],ch
   14000954f:	add    BYTE PTR [rcx],dh
   140009551:	add    BYTE PTR [rsi],dh
   140009553:	add    BYTE PTR [rax],dh
   140009555:	add    BYTE PTR [rcx],bh
   140009557:	add    BYTE PTR [rax],dh
   140009559:	add    BYTE PTR [rsi],dh
   14000955b:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700c661
   140009561:	add    BYTE PTR [rip+0x29003500],dh        # 0x16900ca67
   140009567:	add    BYTE PTR [rax],al
   140009569:	add    BYTE PTR [rax],al
   14000956b:	add    BYTE PTR [rax+0x0],dh
   14000956e:	sub    BYTE PTR [rax],al
   140009570:	add    DWORD PTR [rax],eax
   140009572:	rex.WB add BYTE PTR [r14+0x0],bpl
   140009576:	je     0x140009578
   140009578:	add    BYTE PTR gs:[rdx+0x0],dh
   14000957c:	outs   dx,BYTE PTR ds:[rsi]
   14000957d:	add    BYTE PTR [rcx+0x0],ah
   140009580:	ins    BYTE PTR es:[rdi],dx
   140009581:	add    BYTE PTR [rsi+0x0],cl
   140009584:	(bad)  
   140009585:	add    BYTE PTR [rbp+0x0],ch
   140009588:	add    BYTE PTR gs:[rax],al
   14000958b:	add    BYTE PTR [rbp+0x0],cl
   14000958e:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
   140009593:	add    BYTE PTR [rcx+0x0],ah
   140009596:	and    BYTE PTR [rax],al
   140009598:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000959c:	jne    0x14000959e
   14000959e:	outs   dx,BYTE PTR ds:[rsi]
   14000959f:	add    BYTE PTR [rax+rax*1+0x61],ah
   1400095a3:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400095a7:	add    BYTE PTR [rdi+0x0],ch
   1400095aa:	outs   dx,BYTE PTR ds:[rsi]
   1400095ab:	add    BYTE PTR [rax],ah
   1400095ad:	add    BYTE PTR [rax+0x0],dl
   1400095b0:	jb     0x1400095b2
   1400095b2:	outs   dx,DWORD PTR ds:[rsi]
   1400095b3:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400095b7:	add    BYTE PTR [rbx+0x0],ah
   1400095ba:	je     0x1400095bc
   1400095bc:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   1400095c1:	add    BYTE PTR [rax+0x0],dl
   1400095c4:	imul   eax,DWORD PTR [rax],0x650070
   1400095ca:	ins    BYTE PTR es:[rdi],dx
   1400095cb:	add    BYTE PTR [rcx+0x0],ch
   1400095ce:	outs   dx,BYTE PTR ds:[rsi]
   1400095cf:	add    BYTE PTR [rbp+0x0],ah
   1400095d2:	and    BYTE PTR [rax],al
   1400095d4:	add    BYTE PTR [r8+0x0],r11b
   1400095d8:	add    BYTE PTR [r8],r8b
   1400095db:	add    BYTE PTR [rax+0x1002e00],al
   1400095e1:	add    BYTE PTR [rax+rax*1+0x65],cl
   1400095e5:	add    BYTE PTR [rdi+0x0],ah
   1400095e8:	(bad)  
   1400095e9:	add    BYTE PTR [rax+rax*1+0x43],ch
   1400095ed:	add    BYTE PTR [rdi+0x0],ch
   1400095f0:	jo     0x1400095f2
   1400095f2:	jns    0x1400095f4
   1400095f4:	jb     0x1400095f6
   1400095f6:	imul   eax,DWORD PTR [rax],0x680067
   1400095fc:	je     0x1400095fe
   1400095fe:	add    BYTE PTR [rax],al
   140009600:	test   eax,0x4d002000
   140009605:	add    BYTE PTR [rcx+0x0],ch
   140009608:	movsxd eax,DWORD PTR [rax]
   14000960a:	jb     0x14000960c
   14000960c:	outs   dx,DWORD PTR ds:[rsi]
   14000960d:	add    BYTE PTR [rbx+0x0],dh
   140009610:	outs   dx,DWORD PTR ds:[rsi]
   140009611:	add    BYTE PTR [rsi+0x0],ah
   140009614:	je     0x140009616
   140009616:	and    BYTE PTR [rax],al
   140009618:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000961c:	jb     0x14000961e
   14000961e:	jo     0x140009620
   140009620:	outs   dx,DWORD PTR ds:[rsi]
   140009621:	add    BYTE PTR [rdx+0x0],dh
   140009624:	(bad)  
   140009625:	add    BYTE PTR [rax+rax*1+0x69],dh
   140009629:	add    BYTE PTR [rdi+0x0],ch
   14000962c:	outs   dx,BYTE PTR ds:[rsi]
   14000962d:	add    BYTE PTR [rsi],ch
   14000962f:	add    BYTE PTR [rax],ah
   140009631:	add    BYTE PTR [rcx+0x0],al
   140009634:	ins    BYTE PTR es:[rdi],dx
   140009635:	add    BYTE PTR [rax+rax*1+0x20],ch
   140009639:	add    BYTE PTR [rdx+0x0],dh
   14000963c:	imul   eax,DWORD PTR [rax],0x680067
   140009642:	je     0x140009644
   140009644:	jae    0x140009646
   140009646:	and    BYTE PTR [rax],al
   140009648:	jb     0x14000964a
   14000964a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000964e:	add    BYTE PTR gs:[rdx+0x0],dh
   140009652:	jbe    0x140009654
   140009654:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140009659:	add    BYTE PTR [rax],al
   14000965b:	add    BYTE PTR [rsi],dh
   14000965d:	add    BYTE PTR [rdi],al
   14000965f:	add    BYTE PTR [rcx],al
   140009661:	add    BYTE PTR [rdi+0x0],cl
   140009664:	jb     0x140009666
   140009666:	imul   eax,DWORD PTR [rax],0x690067
   14000966c:	outs   dx,BYTE PTR ds:[rsi]
   14000966d:	add    BYTE PTR [rcx+0x0],ah
   140009670:	ins    BYTE PTR es:[rdi],dx
   140009671:	add    BYTE PTR [rsi+0x0],al
   140009674:	imul   eax,DWORD PTR [rax],0x65006c
   14000967a:	outs   dx,BYTE PTR ds:[rsi]
   14000967b:	add    BYTE PTR [rcx+0x0],ah
   14000967e:	ins    DWORD PTR es:[rdi],dx
   14000967f:	add    BYTE PTR [rbp+0x0],ah
   140009682:	add    BYTE PTR [rax],al
   140009684:	ins    DWORD PTR es:[rdi],dx
   140009685:	add    BYTE PTR [rsi+0x0],ah
   140009688:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000968d:	add    BYTE PTR [rax+rax*1+0x0],ch
   140009691:	add    BYTE PTR [rax],al
   140009693:	add    BYTE PTR [rdx+0x0],ch
   140009696:	and    eax,0x50000100
   14000969b:	add    BYTE PTR [rdx+0x0],dh
   14000969e:	outs   dx,DWORD PTR ds:[rsi]
   14000969f:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400096a3:	add    BYTE PTR [rbx+0x0],ah
   1400096a6:	je     0x1400096a8
   1400096a8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400096ac:	ins    DWORD PTR es:[rdi],dx
   1400096ad:	add    BYTE PTR [rbp+0x0],ah
   1400096b0:	add    BYTE PTR [rax],al
   1400096b2:	add    BYTE PTR [rax],al
   1400096b4:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400096b8:	movsxd eax,DWORD PTR [rax]
   1400096ba:	jb     0x1400096bc
   1400096bc:	outs   dx,DWORD PTR ds:[rsi]
   1400096bd:	add    BYTE PTR [rbx+0x0],dh
   1400096c0:	outs   dx,DWORD PTR ds:[rsi]
   1400096c1:	add    BYTE PTR [rsi+0x0],ah
   1400096c4:	je     0x1400096c6
   1400096c6:	scas   al,BYTE PTR es:[rdi]
   1400096c7:	add    BYTE PTR [rax],ah
   1400096c9:	add    BYTE PTR [rdi+0x0],dl
   1400096cc:	imul   eax,DWORD PTR [rax],0x64006e
   1400096d2:	outs   dx,DWORD PTR ds:[rsi]
   1400096d3:	add    BYTE PTR [rdi+0x0],dh
   1400096d6:	jae    0x1400096d8
   1400096d8:	scas   al,BYTE PTR es:[rdi]
   1400096d9:	add    BYTE PTR [rax],ah
   1400096db:	add    BYTE PTR [rdi+0x0],cl
   1400096de:	jo     0x1400096e0
   1400096e0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400096e4:	(bad)  
   1400096e5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400096e9:	add    BYTE PTR [rsi+0x0],ch
   1400096ec:	add    BYTE PTR [eax],ah
   1400096ef:	add    BYTE PTR [rbx+0x0],dl
   1400096f2:	jns    0x1400096f4
   1400096f4:	jae    0x1400096f6
   1400096f6:	je     0x1400096f8
   1400096f8:	add    BYTE PTR gs:[rbp+0x0],ch
   1400096fc:	add    BYTE PTR [rax],al
   1400096fe:	add    BYTE PTR [rax],al
   140009700:	rex.RX add BYTE PTR [rcx],r10b
   140009703:	add    BYTE PTR [rcx],al
   140009705:	add    BYTE PTR [rax+0x0],dl
   140009708:	jb     0x14000970a
   14000970a:	outs   dx,DWORD PTR ds:[rsi]
   14000970b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000970f:	add    BYTE PTR [rbx+0x0],ah
   140009712:	je     0x140009714
   140009714:	push   rsi
   140009715:	add    BYTE PTR [rbp+0x0],ah
   140009718:	jb     0x14000971a
   14000971a:	jae    0x14000971c
   14000971c:	imul   eax,DWORD PTR [rax],0x6e006f
   140009722:	add    BYTE PTR [rax],al
   140009724:	xor    DWORD PTR [rax],eax
   140009726:	xor    al,BYTE PTR [rax]
   140009728:	add    BYTE PTR cs:[rax],dh
   14000972b:	add    BYTE PTR [rsi],ch
   14000972d:	add    BYTE PTR [rcx],dh
   14000972f:	add    BYTE PTR [rax],dh
   140009731:	add    BYTE PTR [rdx],dh
   140009733:	add    BYTE PTR [rax+rax*1],dh
   140009736:	xor    BYTE PTR [rax],al
   140009738:	add    BYTE PTR cs:[rcx],dh
   14000973b:	add    BYTE PTR [rdi],dh
   14000973d:	add    BYTE PTR [rcx],dh
   14000973f:	add    BYTE PTR [rcx],dh
   140009741:	add    BYTE PTR [rbx],dh
   140009743:	add    BYTE PTR [rax],al
   140009745:	add    BYTE PTR [rax],al
   140009747:	add    BYTE PTR [rax+rax*1+0x0],al
   14000974b:	add    BYTE PTR [rcx],al
   14000974d:	add    BYTE PTR [rsi+0x0],dl
   140009750:	(bad)  
   140009751:	add    BYTE PTR [rdx+0x0],dh
   140009754:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140009758:	ins    BYTE PTR es:[rdi],dx
   140009759:	add    BYTE PTR [rbp+0x0],ah
   14000975c:	rex.WB add BYTE PTR [r14+0x0],bpl
   140009760:	data16 add BYTE PTR [rdi+0x0],ch
   140009764:	add    BYTE PTR [rax],al
   140009766:	add    BYTE PTR [rax],al
   140009768:	and    al,0x0
   14000976a:	add    al,0x0
   14000976c:	add    BYTE PTR [rax],al
   14000976e:	push   rsp
   14000976f:	add    BYTE PTR [rdx+0x0],dh
   140009772:	(bad)  
   140009773:	add    BYTE PTR [rsi+0x0],ch
   140009776:	jae    0x140009778
   140009778:	ins    BYTE PTR es:[rdi],dx
   140009779:	add    BYTE PTR [rcx+0x0],ah
   14000977c:	je     0x14000977e
   14000977e:	imul   eax,DWORD PTR [rax],0x6e006f
   140009784:	add    BYTE PTR [rax],al
   140009786:	add    BYTE PTR [rax],al
   140009788:	or     DWORD PTR [rax+rsi*4],eax
   14000978b:	add    al,0x0
   14000978d:	add    BYTE PTR [rax],al
   14000978f:	add    ch,cl
   140009791:	dec    ch
   140009793:	dec    al
   140009795:	add    BYTE PTR [rax],al
   140009797:	add    BYTE PTR [rax],al
   140009799:	add    BYTE PTR [rcx],al
   14000979b:	add    BYTE PTR [rax],al
   14000979d:	add    BYTE PTR [rax],al
   14000979f:	add    BYTE PTR [rcx],dl
   1400097a1:	add    BYTE PTR [rax],al
   1400097a3:	add    BYTE PTR [rax],al
   1400097a5:	add    BYTE PTR [rax],al
   1400097a7:	add    BYTE PTR [rdx],al
   1400097a9:	add    BYTE PTR [rax],al
   1400097ab:	add    BYTE PTR [rsi-0x14],bl
   1400097ae:	(bad)  
   1400097af:	fldz   
   1400097b1:	jle    0x1400097e2
   1400097b3:	sub    BYTE PTR [rsi+0x2c],dh
   1400097b6:	or     ah,BYTE PTR [rsi-0x75]
   1400097b9:	mov    edx,0x479141c1
   1400097be:	adc    esp,esi
   1400097c0:	rex.WX icebp 
   1400097c2:	mov    eax,0xe46133c5
   1400097c7:	sub    eax,0x4998ea1e
	...
   1400097e4:	mov    BYTE PTR [rax],al
   1400097e6:	add    BYTE PTR [rax],al
   1400097e8:	(bad)  
   1400097e9:	add    BYTE PTR [rax],al
   1400097eb:	add    BYTE PTR [rax+0x8000000],bl
   1400097f1:	add    BYTE PTR [rax],al
   1400097f3:	add    BYTE PTR [rax+0xe000000],ah
   1400097f9:	add    BYTE PTR [rax],al
   1400097fb:	add    BYTE PTR [rax+0x4000000],dh
	...
   140009809:	add    BYTE PTR [rax],al
   14000980b:	add    BYTE PTR [rax+0xc000000],bh
   140009811:	add    BYTE PTR [rax],al
   140009813:	add    BYTE PTR [rax],al
   140009815:	add    BYTE PTR [rax],al
   140009817:	add    BYTE PTR [rbp+0x0],cl
   14000981a:	push   rbp
   14000981b:	add    BYTE PTR [rcx+0x0],cl
	...
   140009826:	add    BYTE PTR [rax],al
   140009828:	adc    BYTE PTR [rax],al
   14000982a:	add    BYTE PTR [rax],al
   14000982c:	sbb    BYTE PTR [rax],al
   14000982e:	add    BYTE PTR [rax],al
   140009830:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140009834:	rex.WB add BYTE PTR [r8],al
	...
   14000983f:	add    BYTE PTR [rax],dl
   140009841:	add    BYTE PTR [rax],al
   140009843:	add    BYTE PTR [rax],al
   140009845:	add    BYTE PTR [rax],al
   140009847:	add    BYTE PTR [rbp+0x0],ah
   14000984a:	outs   dx,BYTE PTR ds:[rsi]
   14000984b:	add    BYTE PTR [rip+0x53005500],ch        # 0x19300ed51
   140009851:	add    BYTE PTR [rax],al
   140009853:	add    BYTE PTR [rax],al
   140009855:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000a000 <.reloc>:
   14000a000:	add    BYTE PTR [rax+0x0],al
   14000a003:	add    BYTE PTR [rax+rax*1+0x0],dl
   14000a007:	add    BYTE PTR [rax],dl
   14000a009:	movabs ds:0xa348a340a328a318,eax
   14000a012:	loopne 0x140009fb8
   14000a014:	call   0x138a590bd
   14000a019:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a01a:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14000a020:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14000a026:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14000a02c:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000a02e:	push   rax
   14000a02f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a030:	pop    rax
   14000a031:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a032:	(bad)  
   14000a033:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a034:	push   0x78a570a5
   14000a039:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a03a:	and    BYTE PTR [rbp-0x5a675a78],0xa0
   14000a041:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a042:	fsub   DWORD PTR [rbp-0x58b75a18]
   14000a048:	(bad)  
   14000a049:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a04a:	push   0xffffffff90a770a7
   14000a04f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a050:	cwde   
   14000a051:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	add    BYTE PTR [rax+0x0],ah
   14000a057:	add    BYTE PTR [rax+rax*1],cl
   14000a05a:	add    BYTE PTR [rax],al
   14000a05c:	and    BYTE PTR [rax-0x80000000],ah
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	adc    BYTE PTR [rax],al
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	add    BYTE PTR [rax-0x5fe75ff8],ah
   14000a06e:	.byte 0x20
   14000a06f:	.byte 0xa0
