
8ca3475c4ea7f68cf9404ae41b3bcff001cc48e0ef4b0cb73ca9e1b7972e5a83.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    rax,QWORD PTR [rip+0x6059]        # 0x140007060
   140001007:	mov    QWORD PTR [rip+0x970a],rax        # 0x14000a718
   14000100e:	mov    rax,QWORD PTR [rip+0x60a3]        # 0x1400070b8
   140001015:	mov    QWORD PTR [rip+0x9704],rax        # 0x14000a720
   14000101c:	mov    rax,QWORD PTR [rip+0x603d]        # 0x140007060
   140001023:	mov    QWORD PTR [rip+0x96fe],rax        # 0x14000a728
   14000102a:	ret    
   14000102b:	int3   
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	mov    rax,QWORD PTR [rip+0x6019]        # 0x140007050
   140001037:	mov    QWORD PTR [rip+0x96fa],rax        # 0x14000a738
   14000103e:	mov    rax,QWORD PTR [rip+0x6003]        # 0x140007048
   140001045:	mov    QWORD PTR [rip+0x96f4],rax        # 0x14000a740
   14000104c:	mov    rax,QWORD PTR [rip+0x5ffd]        # 0x140007050
   140001053:	mov    QWORD PTR [rip+0x96ee],rax        # 0x14000a748
   14000105a:	ret    
   14000105b:	int3   
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	int3   
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	int3   
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	sub    rsp,0x38
   14000106c:	and    QWORD PTR [rsp+0x20],0x0
   140001072:	movzx  r9d,dx
   140001076:	mov    edx,0x2b
   14000107b:	call   QWORD PTR [rip+0x61cf]        # 0x140007250
   140001081:	add    rsp,0x38
   140001085:	ret    
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	mov    r11,rsp
   14000108f:	mov    DWORD PTR [r11+0x20],r9d
   140001093:	sub    rsp,0x48
   140001097:	and    QWORD PTR [r11-0x18],0x0
   14000109c:	lea    rax,[r11+0x20]
   1400010a0:	movzx  r9d,dx
   1400010a4:	mov    edx,0x2b
   1400010a9:	mov    QWORD PTR [r11-0x20],0x4
   1400010b1:	mov    QWORD PTR [r11-0x28],rax
   1400010b5:	call   QWORD PTR [rip+0x6195]        # 0x140007250
   1400010bb:	add    rsp,0x48
   1400010bf:	ret    
   1400010c0:	int3   
   1400010c1:	int3   
   1400010c2:	int3   
   1400010c3:	int3   
   1400010c4:	int3   
   1400010c5:	int3   
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	sub    rsp,0x48
   1400010cc:	xor    r11d,r11d
   1400010cf:	test   r9,r9
   1400010d2:	je     0x1400010f8
   1400010d4:	cmp    WORD PTR [r9],r11w
   1400010d8:	jne    0x1400010e0
   1400010da:	lea    eax,[r11+0xe]
   1400010de:	jmp    0x1400010fd
   1400010e0:	or     rax,0xffffffffffffffff
   1400010e4:	inc    rax
   1400010e7:	cmp    WORD PTR [r9+rax*2],r11w
   1400010ec:	jne    0x1400010e4
   1400010ee:	lea    rax,[rax*2+0x2]
   1400010f6:	jmp    0x1400010fd
   1400010f8:	mov    eax,0xa
   1400010fd:	test   r9,r9
   140001100:	je     0x140001113
   140001102:	cmp    WORD PTR [r9],r11w
   140001106:	lea    r10,[rip+0x65bb]        # 0x1400076c8
   14000110d:	cmove  r9,r10
   140001111:	jmp    0x14000111a
   140001113:	lea    r9,[rip+0x65be]        # 0x1400076d8
   14000111a:	mov    QWORD PTR [rsp+0x30],r11
   14000111f:	mov    QWORD PTR [rsp+0x28],rax
   140001124:	mov    QWORD PTR [rsp+0x20],r9
   140001129:	movzx  r9d,dx
   14000112d:	mov    edx,0x2b
   140001132:	call   QWORD PTR [rip+0x6118]        # 0x140007250
   140001138:	add    rsp,0x48
   14000113c:	ret    
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	int3   
   140001141:	int3   
   140001142:	int3   
   140001143:	int3   
   140001144:	sub    rsp,0x68
   140001148:	xor    r8d,r8d
   14000114b:	test   r9,r9
   14000114e:	je     0x140001174
   140001150:	cmp    WORD PTR [r9],r8w
   140001154:	jne    0x14000115c
   140001156:	lea    eax,[r8+0xe]
   14000115a:	jmp    0x140001179
   14000115c:	or     rax,0xffffffffffffffff
   140001160:	inc    rax
   140001163:	cmp    WORD PTR [r9+rax*2],r8w
   140001168:	jne    0x140001160
   14000116a:	lea    rax,[rax*2+0x2]
   140001172:	jmp    0x140001179
   140001174:	mov    eax,0xa
   140001179:	test   r9,r9
   14000117c:	je     0x14000118f
   14000117e:	cmp    WORD PTR [r9],r8w
   140001182:	lea    rdx,[rip+0x653f]        # 0x1400076c8
   140001189:	cmove  r9,rdx
   14000118d:	jmp    0x140001196
   14000118f:	lea    r9,[rip+0x6542]        # 0x1400076d8
   140001196:	mov    QWORD PTR [rsp+0x50],r8
   14000119b:	lea    rdx,[rsp+0x98]
   1400011a3:	mov    r10d,0x10
   1400011a9:	lea    r8d,[r10-0xc]
   1400011ad:	mov    QWORD PTR [rsp+0x48],r8
   1400011b2:	mov    QWORD PTR [rsp+0x40],rdx
   1400011b7:	lea    rdx,[rsp+0x90]
   1400011bf:	mov    QWORD PTR [rsp+0x38],r8
   1400011c4:	lea    r8,[rip+0x6525]        # 0x1400076f0
   1400011cb:	mov    QWORD PTR [rsp+0x30],rdx
   1400011d0:	lea    edx,[r10+0x1b]
   1400011d4:	mov    QWORD PTR [rsp+0x28],rax
   1400011d9:	mov    QWORD PTR [rsp+0x20],r9
   1400011de:	movzx  r9d,r10w
   1400011e2:	call   QWORD PTR [rip+0x6068]        # 0x140007250
   1400011e8:	add    rsp,0x68
   1400011ec:	ret    
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	int3   
   1400011f1:	int3   
   1400011f2:	int3   
   1400011f3:	int3   
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	mov    QWORD PTR [rsp+0x8],rbx
   140001205:	mov    QWORD PTR [rsp+0x10],rsi
   14000120a:	push   rdi
   14000120b:	sub    rsp,0x20
   14000120f:	and    DWORD PTR [r8],0x0
   140001213:	mov    rbx,rdx
   140001216:	sub    ecx,0x4
   140001219:	je     0x140001230
   14000121b:	cmp    ecx,0x1
   14000121e:	je     0x140001227
   140001220:	mov    eax,0x57
   140001225:	jmp    0x14000126f
   140001227:	xor    edi,edi
   140001229:	xor    eax,eax
   14000122b:	xor    sil,sil
   14000122e:	jmp    0x140001251
   140001230:	mov    rcx,r9
   140001233:	call   QWORD PTR [rip+0x5fef]        # 0x140007228
   140001239:	mov    rcx,rax
   14000123c:	mov    rdi,rax
   14000123f:	call   QWORD PTR [rip+0x5ff3]        # 0x140007238
   140001245:	mov    rcx,rdi
   140001248:	mov    sil,al
   14000124b:	call   QWORD PTR [rip+0x5fef]        # 0x140007240
   140001251:	test   BYTE PTR [rbx+0x1a],0x2
   140001255:	je     0x140001262
   140001257:	mov    rcx,QWORD PTR [rbx+0x10]
   14000125b:	test   rcx,rcx
   14000125e:	cmovne rbx,rcx
   140001262:	mov    QWORD PTR [rbx+0x10],rdi
   140001266:	mov    BYTE PTR [rbx+0x19],sil
   14000126a:	mov    DWORD PTR [rbx+0x1c],eax
   14000126d:	xor    eax,eax
   14000126f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001274:	mov    rsi,QWORD PTR [rsp+0x38]
   140001279:	add    rsp,0x20
   14000127d:	pop    rdi
   14000127e:	ret    
   14000127f:	int3   
   140001280:	int3   
   140001281:	int3   
   140001282:	int3   
   140001283:	int3   
   140001284:	int3   
   140001285:	int3   
   140001286:	int3   
   140001287:	int3   
   140001288:	rex push rbx
   14000128a:	push   rsi
   14000128b:	push   rdi
   14000128c:	push   r12
   14000128e:	push   r13
   140001290:	push   r14
   140001292:	push   r15
   140001294:	sub    rsp,0x70
   140001298:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   1400012a1:	mov    rdi,rdx
   1400012a4:	mov    esi,ecx
   1400012a6:	xor    r14d,r14d
   1400012a9:	mov    eax,r14d
   1400012ac:	mov    DWORD PTR [rsp+0xb0],eax
   1400012b3:	xor    r9d,r9d
   1400012b6:	xor    r8d,r8d
   1400012b9:	lea    r12d,[r14+0x1]
   1400012bd:	mov    edx,r12d
   1400012c0:	xor    ecx,ecx
   1400012c2:	call   QWORD PTR [rip+0x5e60]        # 0x140007128
   1400012c8:	mov    QWORD PTR [rip+0x9429],r14        # 0x14000a6f8
   1400012cf:	mov    QWORD PTR [rip+0x9412],r14        # 0x14000a6e8
   1400012d6:	mov    QWORD PTR [rip+0x9423],r12        # 0x14000a700
   1400012dd:	lea    rax,[rip+0x641c]        # 0x140007700
   1400012e4:	mov    QWORD PTR [rip+0x9425],rax        # 0x14000a710
   1400012eb:	lea    rbx,[rip+0x93f6]        # 0x14000a6e8
   1400012f2:	mov    QWORD PTR [rip+0x8d37],rbx        # 0x14000a030
   1400012f9:	lea    r15,[rip+0x9410]        # 0x14000a710
   140001300:	mov    r8,QWORD PTR [r15]
   140001303:	lea    r15,[r15+0x8]
   140001307:	mov    QWORD PTR [rsp+0x58],r8
   14000130c:	mov    QWORD PTR [rsp+0x60],r14
   140001311:	mov    QWORD PTR [rbx+0x20],r8
   140001315:	lea    rax,[rbx+0x8]
   140001319:	mov    QWORD PTR [rsp+0x38],rax
   14000131e:	mov    QWORD PTR [rsp+0x30],r14
   140001323:	mov    QWORD PTR [rsp+0x28],r14
   140001328:	lea    rax,[rsp+0x58]
   14000132d:	mov    QWORD PTR [rsp+0x20],rax
   140001332:	mov    r9d,r12d
   140001335:	mov    rdx,rbx
   140001338:	lea    rcx,[rip+0xfffffffffffffec1]        # 0x140001200
   14000133f:	call   QWORD PTR [rip+0x5f03]        # 0x140007248
   140001345:	mov    rbx,QWORD PTR [rbx]
   140001348:	test   rbx,rbx
   14000134b:	jne    0x140001300
   14000134d:	mov    ecx,0x400
   140001352:	mov    DWORD PTR [rsp+0xc8],ecx
   140001359:	mov    eax,0x12c
   14000135e:	mov    DWORD PTR [rsp+0xc0],eax
   140001365:	cmp    esi,0x2
   140001368:	jge    0x1400013a5
   14000136a:	lea    r15,[rip+0x8cbf]        # 0x14000a030
   140001371:	mov    rbx,QWORD PTR [rip+0x8cb8]        # 0x14000a030
   140001378:	cmp    rbx,r15
   14000137b:	je     0x1400014c3
   140001381:	cmp    BYTE PTR [rbx+0x19],0x2
   140001385:	jb     0x1400014c3
   14000138b:	mov    edx,0xa
   140001390:	lea    r8,[rip+0x6359]        # 0x1400076f0
   140001397:	mov    rcx,QWORD PTR [rbx+0x10]
   14000139b:	call   0x140001068
   1400013a0:	jmp    0x1400014bc
   1400013a5:	mov    r13,QWORD PTR [rdi+0x8]
   1400013a9:	cmp    esi,0x3
   1400013ac:	jl     0x140001437
   1400013b2:	lea    r8,[rsp+0xc8]
   1400013ba:	lea    rdx,[rip+0x6323]        # 0x1400076e4
   1400013c1:	mov    rcx,QWORD PTR [rdi+0x10]
   1400013c5:	call   QWORD PTR [rip+0x5f05]        # 0x1400072d0
   1400013cb:	cmp    eax,r12d
   1400013ce:	je     0x1400013ff
   1400013d0:	lea    r15,[rip+0x8c59]        # 0x14000a030
   1400013d7:	mov    rbx,QWORD PTR [rip+0x8c52]        # 0x14000a030
   1400013de:	cmp    rbx,r15
   1400013e1:	je     0x1400014c3
   1400013e7:	cmp    BYTE PTR [rbx+0x19],0x2
   1400013eb:	jb     0x1400014c3
   1400013f1:	mov    edx,0xb
   1400013f6:	mov    r9,QWORD PTR [rdi+0x10]
   1400013fa:	jmp    0x1400014ac
   1400013ff:	mov    ecx,DWORD PTR [rsp+0xc8]
   140001406:	test   ecx,ecx
   140001408:	jne    0x140001430
   14000140a:	lea    r15,[rip+0x8c1f]        # 0x14000a030
   140001411:	mov    rbx,QWORD PTR [rip+0x8c18]        # 0x14000a030
   140001418:	cmp    rbx,r15
   14000141b:	je     0x1400014c3
   140001421:	cmp    BYTE PTR [rbx+0x19],0x2
   140001425:	jb     0x1400014c3
   14000142b:	lea    edx,[rcx+0xc]
   14000142e:	jmp    0x1400013f6
   140001430:	mov    eax,DWORD PTR [rsp+0xc0]
   140001437:	cmp    esi,0x4
   14000143a:	jl     0x140001508
   140001440:	lea    r8,[rsp+0xc0]
   140001448:	lea    rdx,[rip+0x6295]        # 0x1400076e4
   14000144f:	mov    rcx,QWORD PTR [rdi+0x18]
   140001453:	call   QWORD PTR [rip+0x5e77]        # 0x1400072d0
   140001459:	cmp    eax,r12d
   14000145c:	je     0x14000147e
   14000145e:	lea    r15,[rip+0x8bcb]        # 0x14000a030
   140001465:	mov    rbx,QWORD PTR [rip+0x8bc4]        # 0x14000a030
   14000146c:	cmp    rbx,r15
   14000146f:	je     0x1400014c3
   140001471:	cmp    BYTE PTR [rbx+0x19],0x2
   140001475:	jb     0x1400014c3
   140001477:	mov    edx,0xd
   14000147c:	jmp    0x1400014a8
   14000147e:	mov    eax,DWORD PTR [rsp+0xc0]
   140001485:	cmp    eax,0xa
   140001488:	jae    0x140001501
   14000148a:	lea    r15,[rip+0x8b9f]        # 0x14000a030
   140001491:	mov    rbx,QWORD PTR [rip+0x8b98]        # 0x14000a030
   140001498:	cmp    rbx,r15
   14000149b:	je     0x1400014c3
   14000149d:	cmp    BYTE PTR [rbx+0x19],0x2
   1400014a1:	jb     0x1400014c3
   1400014a3:	mov    edx,0xe
   1400014a8:	mov    r9,QWORD PTR [rdi+0x18]
   1400014ac:	lea    r8,[rip+0x623d]        # 0x1400076f0
   1400014b3:	mov    rcx,QWORD PTR [rbx+0x10]
   1400014b7:	call   0x1400010c8
   1400014bc:	mov    rbx,QWORD PTR [rip+0x8b6d]        # 0x14000a030
   1400014c3:	mov    edi,0x667
   1400014c8:	cmp    rbx,r15
   1400014cb:	je     0x1400014f2
   1400014cd:	cmp    BYTE PTR [rbx+0x19],0x2
   1400014d1:	jb     0x1400014f2
   1400014d3:	mov    edx,0xf
   1400014d8:	mov    r9d,edi
   1400014db:	lea    r8,[rip+0x620e]        # 0x1400076f0
   1400014e2:	mov    rcx,QWORD PTR [rbx+0x10]
   1400014e6:	call   0x14000108c
   1400014eb:	mov    rbx,QWORD PTR [rip+0x8b3e]        # 0x14000a030
   1400014f2:	lea    r12,[rip+0x61c7]        # 0x1400076c0
   1400014f9:	mov    r13d,r14d
   1400014fc:	jmp    0x1400016d2
   140001501:	mov    ecx,DWORD PTR [rsp+0xc8]
   140001508:	lea    r15,[rip+0x8b21]        # 0x14000a030
   14000150f:	mov    rdx,QWORD PTR [rip+0x8b1a]        # 0x14000a030
   140001516:	cmp    rdx,r15
   140001519:	je     0x140001536
   14000151b:	cmp    BYTE PTR [rdx+0x19],0x4
   14000151f:	jb     0x140001536
   140001521:	mov    DWORD PTR [rsp+0x28],eax
   140001525:	mov    DWORD PTR [rsp+0x20],ecx
   140001529:	mov    r9,r13
   14000152c:	mov    rcx,QWORD PTR [rdx+0x10]
   140001530:	call   0x140001144
   140001535:	nop
   140001536:	mov    ecx,0x130
   14000153b:	call   0x1400051ac
   140001540:	mov    QWORD PTR [rsp+0x50],rax
   140001545:	test   rax,rax
   140001548:	je     0x140001554
   14000154a:	mov    rcx,rax
   14000154d:	call   0x140001a7c
   140001552:	jmp    0x140001557
   140001554:	mov    rax,r14
   140001557:	mov    QWORD PTR [rip+0x917a],rax        # 0x14000a6d8
   14000155e:	mov    ecx,0x68
   140001563:	call   0x1400051ac
   140001568:	mov    rbx,rax
   14000156b:	lea    r12,[rip+0x614e]        # 0x1400076c0
   140001572:	test   rax,rax
   140001575:	je     0x1400015a0
   140001577:	mov    QWORD PTR [rax],r12
   14000157a:	or     QWORD PTR [rax+0x30],0xffffffffffffffff
   14000157f:	mov    QWORD PTR [rax+0x38],r14
   140001583:	mov    QWORD PTR [rax+0x58],0x7
   14000158b:	mov    QWORD PTR [rax+0x50],r14
   14000158f:	mov    WORD PTR [rax+0x40],r14w
   140001594:	lea    rcx,[rax+0x8]
   140001598:	call   QWORD PTR [rip+0x5bfa]        # 0x140007198
   14000159e:	jmp    0x1400015a3
   1400015a0:	mov    rbx,r14
   1400015a3:	mov    QWORD PTR [rip+0x9136],rbx        # 0x14000a6e0
   1400015aa:	xor    edx,edx
   1400015ac:	xor    ecx,ecx
   1400015ae:	call   QWORD PTR [rip+0x5b24]        # 0x1400070d8
   1400015b4:	test   eax,eax
   1400015b6:	je     0x1400015f9
   1400015b8:	mov    edi,0x1f
   1400015bd:	mov    rbx,QWORD PTR [rip+0x8a6c]        # 0x14000a030
   1400015c4:	cmp    rbx,r15
   1400015c7:	je     0x1400016ca
   1400015cd:	cmp    BYTE PTR [rbx+0x19],0x2
   1400015d1:	jb     0x1400016ca
   1400015d7:	lea    edx,[rdi-0xd]
   1400015da:	mov    r9d,eax
   1400015dd:	lea    r8,[rip+0x610c]        # 0x1400076f0
   1400015e4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400015e8:	call   0x14000108c
   1400015ed:	mov    rbx,QWORD PTR [rip+0x8a3c]        # 0x14000a030
   1400015f4:	jmp    0x1400016ca
   1400015f9:	mov    DWORD PTR [rsp+0xb0],0x1
   140001604:	mov    r8d,DWORD PTR [rsp+0xc0]
   14000160c:	mov    edx,DWORD PTR [rsp+0xc8]
   140001613:	call   0x140001cd4
   140001618:	mov    edi,eax
   14000161a:	test   eax,eax
   14000161c:	je     0x140001652
   14000161e:	mov    rbx,QWORD PTR [rip+0x8a0b]        # 0x14000a030
   140001625:	cmp    rbx,r15
   140001628:	je     0x1400016ca
   14000162e:	cmp    BYTE PTR [rbx+0x19],0x2
   140001632:	jb     0x1400016ca
   140001638:	mov    edx,0x13
   14000163d:	mov    r9d,eax
   140001640:	lea    r8,[rip+0x60a9]        # 0x1400076f0
   140001647:	mov    rcx,QWORD PTR [rbx+0x10]
   14000164b:	call   0x14000108c
   140001650:	jmp    0x1400015ed
   140001652:	mov    rsi,QWORD PTR [rip+0x907f]        # 0x14000a6d8
   140001659:	mov    rdi,QWORD PTR [rip+0x9080]        # 0x14000a6e0
   140001660:	mov    QWORD PTR [rdi+0x38],rsi
   140001664:	mov    rax,QWORD PTR [rsi]
   140001667:	mov    rbx,QWORD PTR [rax]
   14000166a:	mov    rcx,rbx
   14000166d:	call   QWORD PTR [rip+0x5e0d]        # 0x140007480
   140001673:	mov    rdx,rdi
   140001676:	mov    rcx,rsi
   140001679:	call   rbx
   14000167b:	mov    rdx,r13
   14000167e:	call   0x140003bdc
   140001683:	mov    edi,eax
   140001685:	test   eax,eax
   140001687:	je     0x1400015ed
   14000168d:	mov    rbx,QWORD PTR [rip+0x899c]        # 0x14000a030
   140001694:	cmp    rbx,r15
   140001697:	je     0x1400016ca
   140001699:	cmp    BYTE PTR [rbx+0x19],0x2
   14000169d:	jb     0x1400016ca
   14000169f:	mov    edx,0x14
   1400016a4:	jmp    0x14000163d
   1400016a6:	xor    r14d,r14d
   1400016a9:	lea    r15,[rip+0x8980]        # 0x14000a030
   1400016b0:	lea    r12,[rip+0x6009]        # 0x1400076c0
   1400016b7:	mov    edi,DWORD PTR [rsp+0xb0]
   1400016be:	mov    r13d,r14d
   1400016c1:	mov    rbx,QWORD PTR [rip+0x8968]        # 0x14000a030
   1400016c8:	jmp    0x1400016d2
   1400016ca:	mov    r13d,DWORD PTR [rsp+0xb0]
   1400016d2:	mov    rsi,QWORD PTR [rip+0x8fff]        # 0x14000a6d8
   1400016d9:	test   rsi,rsi
   1400016dc:	je     0x140001706
   1400016de:	mov    rax,QWORD PTR [rsi]
   1400016e1:	mov    rbx,QWORD PTR [rax+0x10]
   1400016e5:	mov    rcx,rbx
   1400016e8:	call   QWORD PTR [rip+0x5d92]        # 0x140007480
   1400016ee:	mov    edx,0x1
   1400016f3:	mov    rcx,rsi
   1400016f6:	call   rbx
   1400016f8:	mov    QWORD PTR [rip+0x8fd9],r14        # 0x14000a6d8
   1400016ff:	mov    rbx,QWORD PTR [rip+0x892a]        # 0x14000a030
   140001706:	mov    rsi,QWORD PTR [rip+0x8fd3]        # 0x14000a6e0
   14000170d:	test   rsi,rsi
   140001710:	je     0x140001756
   140001712:	mov    QWORD PTR [rsi],r12
   140001715:	lea    rcx,[rsi+0x8]
   140001719:	call   QWORD PTR [rip+0x5a81]        # 0x1400071a0
   14000171f:	cmp    QWORD PTR [rsi+0x58],0x8
   140001724:	jb     0x14000172f
   140001726:	mov    rcx,QWORD PTR [rsi+0x40]
   14000172a:	call   0x140005244
   14000172f:	mov    QWORD PTR [rsi+0x58],0x7
   140001737:	mov    QWORD PTR [rsi+0x50],r14
   14000173b:	mov    WORD PTR [rsi+0x40],r14w
   140001740:	mov    rcx,rsi
   140001743:	call   0x140005244
   140001748:	mov    QWORD PTR [rip+0x8f91],r14        # 0x14000a6e0
   14000174f:	mov    rbx,QWORD PTR [rip+0x88da]        # 0x14000a030
   140001756:	test   r13d,r13d
   140001759:	je     0x140001768
   14000175b:	call   QWORD PTR [rip+0x5987]        # 0x1400070e8
   140001761:	mov    rbx,QWORD PTR [rip+0x88c8]        # 0x14000a030
   140001768:	cmp    rbx,r15
   14000176b:	je     0x140001791
   14000176d:	jmp    0x140001785
   14000176f:	mov    rcx,QWORD PTR [rbx+0x8]
   140001773:	test   rcx,rcx
   140001776:	je     0x140001782
   140001778:	call   QWORD PTR [rip+0x5ab2]        # 0x140007230
   14000177e:	mov    QWORD PTR [rbx+0x8],r14
   140001782:	mov    rbx,QWORD PTR [rbx]
   140001785:	test   rbx,rbx
   140001788:	jne    0x14000176f
   14000178a:	mov    QWORD PTR [rip+0x889f],r15        # 0x14000a030
   140001791:	mov    eax,edi
   140001793:	add    rsp,0x70
   140001797:	pop    r15
   140001799:	pop    r14
   14000179b:	pop    r13
   14000179d:	pop    r12
   14000179f:	pop    rdi
   1400017a0:	pop    rsi
   1400017a1:	pop    rbx
   1400017a2:	ret    
   1400017a3:	int3   
   1400017a4:	int3   
   1400017a5:	int3   
   1400017a6:	int3   
   1400017a7:	int3   
   1400017a8:	int3   
   1400017a9:	int3   
   1400017aa:	int3   
   1400017ab:	int3   
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400017ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400017bf:	push   rdi
   1400017c0:	sub    rsp,0x20
   1400017c4:	mov    rbx,r8
   1400017c7:	mov    rdi,rdx
   1400017ca:	mov    rsi,rcx
   1400017cd:	mov    rcx,QWORD PTR [rip+0x885c]        # 0x14000a030
   1400017d4:	lea    rbp,[rip+0x8855]        # 0x14000a030
   1400017db:	cmp    rcx,rbp
   1400017de:	je     0x1400017fb
   1400017e0:	cmp    BYTE PTR [rcx+0x19],0x4
   1400017e4:	jb     0x1400017fb
   1400017e6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400017ea:	lea    r8,[rip+0x5f1f]        # 0x140007710
   1400017f1:	mov    edx,0xa
   1400017f6:	call   0x140001068
   1400017fb:	mov    r9,rbx
   1400017fe:	mov    r8,rdi
   140001801:	mov    rdx,rsi
   140001804:	call   0x140002490
   140001809:	mov    ebx,eax
   14000180b:	test   eax,eax
   14000180d:	je     0x140001839
   14000180f:	mov    rcx,QWORD PTR [rip+0x881a]        # 0x14000a030
   140001816:	cmp    rcx,rbp
   140001819:	je     0x140001839
   14000181b:	cmp    BYTE PTR [rcx+0x19],0x2
   14000181f:	jb     0x140001839
   140001821:	mov    rcx,QWORD PTR [rcx+0x10]
   140001825:	lea    r8,[rip+0x5ee4]        # 0x140007710
   14000182c:	mov    edx,0xb
   140001831:	mov    r9d,eax
   140001834:	call   0x14000108c
   140001839:	mov    rbp,QWORD PTR [rsp+0x38]
   14000183e:	mov    eax,ebx
   140001840:	mov    rbx,QWORD PTR [rsp+0x30]
   140001845:	mov    rsi,QWORD PTR [rsp+0x40]
   14000184a:	add    rsp,0x20
   14000184e:	pop    rdi
   14000184f:	ret    
   140001850:	int3   
   140001851:	int3   
   140001852:	int3   
   140001853:	int3   
   140001854:	int3   
   140001855:	int3   
   140001856:	int3   
   140001857:	int3   
   140001858:	int3   
   140001859:	int3   
   14000185a:	int3   
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	mov    QWORD PTR [rsp+0x8],rbx
   140001865:	mov    QWORD PTR [rsp+0x10],rbp
   14000186a:	mov    QWORD PTR [rsp+0x18],rsi
   14000186f:	push   rdi
   140001870:	sub    rsp,0x20
   140001874:	mov    rbx,r8
   140001877:	mov    rdi,rdx
   14000187a:	mov    rsi,rcx
   14000187d:	mov    rcx,QWORD PTR [rip+0x87ac]        # 0x14000a030
   140001884:	lea    rbp,[rip+0x87a5]        # 0x14000a030
   14000188b:	cmp    rcx,rbp
   14000188e:	je     0x1400018ab
   140001890:	cmp    BYTE PTR [rcx+0x19],0x4
   140001894:	jb     0x1400018ab
   140001896:	mov    rcx,QWORD PTR [rcx+0x10]
   14000189a:	lea    r8,[rip+0x5e6f]        # 0x140007710
   1400018a1:	mov    edx,0xc
   1400018a6:	call   0x140001068
   1400018ab:	mov    r9,rbx
   1400018ae:	mov    r8,rdi
   1400018b1:	mov    rdx,rsi
   1400018b4:	call   0x140002700
   1400018b9:	test   eax,eax
   1400018bb:	je     0x1400018e7
   1400018bd:	mov    rcx,QWORD PTR [rip+0x876c]        # 0x14000a030
   1400018c4:	cmp    rcx,rbp
   1400018c7:	je     0x1400018e7
   1400018c9:	cmp    BYTE PTR [rcx+0x19],0x2
   1400018cd:	jb     0x1400018e7
   1400018cf:	mov    rcx,QWORD PTR [rcx+0x10]
   1400018d3:	lea    r8,[rip+0x5e36]        # 0x140007710
   1400018da:	mov    edx,0xd
   1400018df:	mov    r9d,eax
   1400018e2:	call   0x14000108c
   1400018e7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018ec:	mov    rbp,QWORD PTR [rsp+0x38]
   1400018f1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400018f6:	add    rsp,0x20
   1400018fa:	pop    rdi
   1400018fb:	ret    
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	int3   
   140001901:	int3   
   140001902:	int3   
   140001903:	int3   
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	rex push rbx
   140001912:	sub    rsp,0x20
   140001916:	mov    rbx,rcx
   140001919:	mov    rcx,QWORD PTR [rip+0x8710]        # 0x14000a030
   140001920:	lea    rax,[rip+0x8709]        # 0x14000a030
   140001927:	cmp    rcx,rax
   14000192a:	je     0x140001947
   14000192c:	cmp    BYTE PTR [rcx+0x19],0x4
   140001930:	jb     0x140001947
   140001932:	mov    rcx,QWORD PTR [rcx+0x10]
   140001936:	lea    r8,[rip+0x5dd3]        # 0x140007710
   14000193d:	mov    edx,0xe
   140001942:	call   0x140001068
   140001947:	mov    rcx,QWORD PTR [rip+0x8d8a]        # 0x14000a6d8
   14000194e:	mov    rdx,rbx
   140001951:	add    rsp,0x20
   140001955:	pop    rbx
   140001956:	jmp    0x14000267c
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	int3   
   140001961:	int3   
   140001962:	int3   
   140001963:	int3   
   140001964:	int3   
   140001965:	int3   
   140001966:	int3   
   140001967:	int3   
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	rex push rbx
   140001972:	sub    rsp,0x20
   140001976:	mov    rcx,QWORD PTR [rip+0x86b3]        # 0x14000a030
   14000197d:	lea    rax,[rip+0x86ac]        # 0x14000a030
   140001984:	cmp    rcx,rax
   140001987:	je     0x1400019a4
   140001989:	cmp    BYTE PTR [rcx+0x19],0x4
   14000198d:	jb     0x1400019a4
   14000198f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001993:	lea    r8,[rip+0x5d76]        # 0x140007710
   14000199a:	mov    edx,0xf
   14000199f:	call   0x140001068
   1400019a4:	mov    rbx,QWORD PTR [rip+0x8d2d]        # 0x14000a6d8
   1400019ab:	lea    rdx,[rsp+0x30]
   1400019b0:	mov    rcx,rbx
   1400019b3:	call   0x14000267c
   1400019b8:	mov    rcx,rbx
   1400019bb:	add    rsp,0x20
   1400019bf:	pop    rbx
   1400019c0:	jmp    0x140002030
   1400019c5:	int3   
   1400019c6:	int3   
   1400019c7:	int3   
   1400019c8:	int3   
   1400019c9:	int3   
   1400019ca:	int3   
   1400019cb:	int3   
   1400019cc:	int3   
   1400019cd:	int3   
   1400019ce:	int3   
   1400019cf:	int3   
   1400019d0:	rex.W jmp QWORD PTR [rip+0x59d1]        # 0x1400073a8
   1400019d7:	int3   
   1400019d8:	int3   
   1400019d9:	int3   
   1400019da:	int3   
   1400019db:	int3   
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	rex.W jmp QWORD PTR [rip+0x59b9]        # 0x1400073a0
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	mov    r11,rsp
   1400019f3:	mov    DWORD PTR [r11+0x20],r9d
   1400019f7:	sub    rsp,0x48
   1400019fb:	and    QWORD PTR [r11-0x18],0x0
   140001a00:	lea    rax,[r11+0x20]
   140001a04:	mov    edx,0x2c
   140001a09:	mov    QWORD PTR [r11-0x20],0x4
   140001a11:	movzx  r9d,dx
   140001a15:	lea    r8,[rip+0x61bc]        # 0x140007bd8
   140001a1c:	mov    edx,0x2b
   140001a21:	mov    QWORD PTR [r11-0x28],rax
   140001a25:	call   QWORD PTR [rip+0x5825]        # 0x140007250
   140001a2b:	add    rsp,0x48
   140001a2f:	ret    
   140001a30:	int3   
   140001a31:	int3   
   140001a32:	int3   
   140001a33:	int3   
   140001a34:	int3   
   140001a35:	int3   
   140001a36:	int3   
   140001a37:	int3   
   140001a38:	mov    r11,rsp
   140001a3b:	mov    DWORD PTR [r11+0x20],r9d
   140001a3f:	sub    rsp,0x48
   140001a43:	and    QWORD PTR [r11-0x18],0x0
   140001a48:	lea    rax,[r11+0x20]
   140001a4c:	movzx  r9d,dx
   140001a50:	lea    r8,[rip+0x6181]        # 0x140007bd8
   140001a57:	mov    QWORD PTR [r11-0x20],0x4
   140001a5f:	mov    edx,0x2b
   140001a64:	mov    QWORD PTR [r11-0x28],rax
   140001a68:	call   QWORD PTR [rip+0x57e2]        # 0x140007250
   140001a6e:	add    rsp,0x48
   140001a72:	ret    
   140001a73:	int3   
   140001a74:	int3   
   140001a75:	int3   
   140001a76:	int3   
   140001a77:	int3   
   140001a78:	int3   
   140001a79:	int3   
   140001a7a:	int3   
   140001a7b:	int3   
   140001a7c:	mov    QWORD PTR [rsp+0x10],rbx
   140001a81:	mov    QWORD PTR [rsp+0x18],rsi
   140001a86:	push   rdi
   140001a87:	sub    rsp,0x40
   140001a8b:	xor    esi,esi
   140001a8d:	lea    rdi,[rcx+0x98]
   140001a94:	mov    QWORD PTR [rcx+0x60],rsi
   140001a98:	lea    rax,[rip+0x5c09]        # 0x1400076a8
   140001a9f:	mov    QWORD PTR [rcx],rax
   140001aa2:	mov    rbx,rcx
   140001aa5:	mov    QWORD PTR [rcx+0x68],rsi
   140001aa9:	lea    rax,[rip+0x5bf0]        # 0x1400076a0
   140001ab0:	mov    QWORD PTR [rcx+0x8],rax
   140001ab4:	mov    QWORD PTR [rcx+0x70],rsi
   140001ab8:	mov    QWORD PTR [rcx+0x78],rsi
   140001abc:	mov    QWORD PTR [rcx+0x80],rsi
   140001ac3:	mov    QWORD PTR [rcx+0x88],rsi
   140001aca:	mov    QWORD PTR [rcx+0x90],rsi
   140001ad1:	lea    ecx,[rsi+0x18]
   140001ad4:	mov    QWORD PTR [rsp+0x50],rdi
   140001ad9:	mov    QWORD PTR [rdi+0x8],rsi
   140001add:	call   0x1400051ac
   140001ae2:	test   rax,rax
   140001ae5:	je     0x140001b5c
   140001ae7:	mov    QWORD PTR [rdi],rax
   140001aea:	lea    rcx,[rbx+0xb0]
   140001af1:	mov    QWORD PTR [rax],rax
   140001af4:	mov    rax,QWORD PTR [rdi]
   140001af7:	mov    QWORD PTR [rax+0x8],rax
   140001afb:	mov    QWORD PTR [rcx+0x28],rsi
   140001aff:	mov    DWORD PTR [rcx+0x30],esi
   140001b02:	mov    QWORD PTR [rcx+0x38],rsi
   140001b06:	mov    QWORD PTR [rcx+0x40],rsi
   140001b0a:	mov    QWORD PTR [rcx+0x48],rsi
   140001b0e:	mov    QWORD PTR [rcx+0x50],rsi
   140001b12:	mov    DWORD PTR [rcx+0x58],esi
   140001b15:	mov    QWORD PTR [rcx+0x5c],0x400
   140001b1d:	mov    DWORD PTR [rcx+0x64],0x12c
   140001b24:	mov    QWORD PTR [rcx+0x70],rsi
   140001b28:	call   QWORD PTR [rip+0x566a]        # 0x140007198
   140001b2e:	lea    rcx,[rbx+0x10]
   140001b32:	mov    QWORD PTR [rbx+0x128],rsi
   140001b39:	call   QWORD PTR [rip+0x5659]        # 0x140007198
   140001b3f:	lea    rcx,[rbx+0x38]
   140001b43:	call   QWORD PTR [rip+0x564f]        # 0x140007198
   140001b49:	mov    rsi,QWORD PTR [rsp+0x60]
   140001b4e:	mov    rax,rbx
   140001b51:	mov    rbx,QWORD PTR [rsp+0x58]
   140001b56:	add    rsp,0x40
   140001b5a:	pop    rdi
   140001b5b:	ret    
   140001b5c:	lea    rcx,[rsp+0x20]
   140001b61:	call   0x140003838
   140001b66:	lea    rdx,[rip+0x6feb]        # 0x140008b58
   140001b6d:	lea    rcx,[rsp+0x20]
   140001b72:	call   0x140005856
   140001b77:	int3   
   140001b78:	int3   
   140001b79:	int3   
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	mov    QWORD PTR [rsp+0x8],rbx
   140001b85:	push   rdi
   140001b86:	sub    rsp,0x20
   140001b8a:	mov    ebx,edx
   140001b8c:	mov    rdi,rcx
   140001b8f:	call   0x140001bb8
   140001b94:	test   bl,0x1
   140001b97:	je     0x140001ba1
   140001b99:	mov    rcx,rdi
   140001b9c:	call   0x140005244
   140001ba1:	mov    rax,rdi
   140001ba4:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ba9:	add    rsp,0x20
   140001bad:	pop    rdi
   140001bae:	ret    
   140001baf:	int3   
   140001bb0:	int3   
   140001bb1:	int3   
   140001bb2:	int3   
   140001bb3:	int3   
   140001bb4:	int3   
   140001bb5:	int3   
   140001bb6:	int3   
   140001bb7:	int3   
   140001bb8:	mov    rax,rsp
   140001bbb:	mov    QWORD PTR [rax+0x8],rcx
   140001bbf:	push   rdi
   140001bc0:	sub    rsp,0x30
   140001bc4:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140001bcc:	mov    QWORD PTR [rax+0x10],rbx
   140001bd0:	mov    QWORD PTR [rax+0x18],rsi
   140001bd4:	mov    rdi,rcx
   140001bd7:	lea    rax,[rip+0x5aca]        # 0x1400076a8
   140001bde:	mov    QWORD PTR [rcx],rax
   140001be1:	lea    rax,[rip+0x5ab8]        # 0x1400076a0
   140001be8:	mov    QWORD PTR [rcx+0x8],rax
   140001bec:	call   0x140002158
   140001bf1:	mov    rbx,QWORD PTR [rdi+0x90]
   140001bf8:	xor    esi,esi
   140001bfa:	test   rbx,rbx
   140001bfd:	je     0x140001c35
   140001bff:	mov    rcx,QWORD PTR [rbx+0x28]
   140001c03:	call   0x140005244
   140001c08:	cmp    QWORD PTR [rbx+0x18],0x8
   140001c0d:	jb     0x140001c17
   140001c0f:	mov    rcx,QWORD PTR [rbx]
   140001c12:	call   0x140005244
   140001c17:	mov    QWORD PTR [rbx+0x18],0x7
   140001c1f:	mov    QWORD PTR [rbx+0x10],rsi
   140001c23:	mov    WORD PTR [rbx],si
   140001c26:	mov    rcx,rbx
   140001c29:	call   0x140005244
   140001c2e:	mov    QWORD PTR [rdi+0x90],rsi
   140001c35:	lea    rcx,[rdi+0x10]
   140001c39:	call   QWORD PTR [rip+0x5561]        # 0x1400071a0
   140001c3f:	lea    rcx,[rdi+0x38]
   140001c43:	call   QWORD PTR [rip+0x5557]        # 0x1400071a0
   140001c49:	nop
   140001c4a:	lea    rbx,[rdi+0xb0]
   140001c51:	mov    rcx,rbx
   140001c54:	call   0x140004390
   140001c59:	mov    rcx,QWORD PTR [rbx+0x68]
   140001c5d:	test   rcx,rcx
   140001c60:	je     0x140001c6c
   140001c62:	call   QWORD PTR [rip+0x55b0]        # 0x140007218
   140001c68:	mov    QWORD PTR [rbx+0x68],rsi
   140001c6c:	mov    rcx,rbx
   140001c6f:	call   QWORD PTR [rip+0x552b]        # 0x1400071a0
   140001c75:	nop
   140001c76:	mov    rax,QWORD PTR [rdi+0x98]
   140001c7d:	mov    rcx,QWORD PTR [rax]
   140001c80:	mov    QWORD PTR [rax],rax
   140001c83:	mov    rax,QWORD PTR [rdi+0x98]
   140001c8a:	mov    QWORD PTR [rax+0x8],rax
   140001c8e:	mov    QWORD PTR [rdi+0xa0],rsi
   140001c95:	cmp    rcx,QWORD PTR [rdi+0x98]
   140001c9c:	je     0x140001cb2
   140001c9e:	mov    rbx,QWORD PTR [rcx]
   140001ca1:	call   0x140005244
   140001ca6:	mov    rcx,rbx
   140001ca9:	cmp    rbx,QWORD PTR [rdi+0x98]
   140001cb0:	jne    0x140001c9e
   140001cb2:	mov    rcx,QWORD PTR [rdi+0x98]
   140001cb9:	mov    rbx,QWORD PTR [rsp+0x48]
   140001cbe:	mov    rsi,QWORD PTR [rsp+0x50]
   140001cc3:	add    rsp,0x30
   140001cc7:	pop    rdi
   140001cc8:	jmp    0x140005244
   140001ccd:	int3   
   140001cce:	int3   
   140001ccf:	int3   
   140001cd0:	int3   
   140001cd1:	int3   
   140001cd2:	int3   
   140001cd3:	int3   
   140001cd4:	mov    QWORD PTR [rsp+0x8],rbx
   140001cd9:	mov    QWORD PTR [rsp+0x10],rsi
   140001cde:	mov    QWORD PTR [rsp+0x18],rdi
   140001ce3:	push   r12
   140001ce5:	push   r14
   140001ce7:	push   r15
   140001ce9:	sub    rsp,0x30
   140001ced:	mov    rsi,QWORD PTR [rip+0x89e4]        # 0x14000a6d8
   140001cf4:	test   rsi,rsi
   140001cf7:	je     0x140001cff
   140001cf9:	lea    rax,[rsi+0x8]
   140001cfd:	jmp    0x140001d01
   140001cff:	xor    eax,eax
   140001d01:	lea    rbx,[rsi+0xb0]
   140001d08:	mov    DWORD PTR [rbx+0x5c],edx
   140001d0b:	lea    rcx,[rip+0x299e]        # 0x1400046b0
   140001d12:	mov    DWORD PTR [rbx+0x64],r8d
   140001d16:	mov    rdx,rbx
   140001d19:	xor    r8d,r8d
   140001d1c:	mov    QWORD PTR [rbx+0x70],rax
   140001d20:	mov    DWORD PTR [rbx+0x60],0xc
   140001d27:	call   QWORD PTR [rip+0x54e3]        # 0x140007210
   140001d2d:	mov    QWORD PTR [rbx+0x68],rax
   140001d31:	lea    r15,[rip+0x82f8]        # 0x14000a030
   140001d38:	mov    r14d,0xa
   140001d3e:	test   rax,rax
   140001d41:	jne    0x140001d75
   140001d43:	call   QWORD PTR [rip+0x53b7]        # 0x140007100
   140001d49:	mov    ebx,eax
   140001d4b:	mov    rcx,QWORD PTR [rip+0x82de]        # 0x14000a030
   140001d52:	cmp    rcx,r15
   140001d55:	je     0x140001d7e
   140001d57:	cmp    BYTE PTR [rcx+0x19],0x2
   140001d5b:	jb     0x140001d7e
   140001d5d:	mov    rcx,QWORD PTR [rcx+0x10]
   140001d61:	lea    r8,[rip+0x5ed0]        # 0x140007c38
   140001d68:	mov    edx,r14d
   140001d6b:	mov    r9d,eax
   140001d6e:	call   0x14000108c
   140001d73:	jmp    0x140001d77
   140001d75:	xor    ebx,ebx
   140001d77:	mov    rcx,QWORD PTR [rip+0x82b2]        # 0x14000a030
   140001d7e:	test   ebx,ebx
   140001d80:	je     0x140001da7
   140001d82:	cmp    rcx,r15
   140001d85:	je     0x140001fff
   140001d8b:	cmp    BYTE PTR [rcx+0x19],0x2
   140001d8f:	jb     0x140001fff
   140001d95:	mov    edx,r14d
   140001d98:	lea    r8,[rip+0x5e39]        # 0x140007bd8
   140001d9f:	mov    r9d,ebx
   140001da2:	jmp    0x140001ff0
   140001da7:	mov    r12d,0x1
   140001dad:	mov    edx,r12d
   140001db0:	call   0x1400031a0
   140001db5:	lea    rdi,[rip+0x5e1c]        # 0x140007bd8
   140001dbc:	test   eax,eax
   140001dbe:	jne    0x140001dc6
   140001dc0:	mov    DWORD PTR [rsi+0x6c],r12d
   140001dc4:	jmp    0x140001dec
   140001dc6:	mov    rcx,QWORD PTR [rip+0x8263]        # 0x14000a030
   140001dcd:	cmp    rcx,r15
   140001dd0:	je     0x140001dec
   140001dd2:	cmp    BYTE PTR [rcx+0x19],0x2
   140001dd6:	jb     0x140001dec
   140001dd8:	mov    rcx,QWORD PTR [rcx+0x10]
   140001ddc:	mov    edx,0xb
   140001de1:	mov    r9d,eax
   140001de4:	mov    r8,rdi
   140001de7:	call   0x14000108c
   140001dec:	mov    rcx,rsi
   140001def:	call   0x1400033f0
   140001df4:	test   eax,eax
   140001df6:	je     0x140001e1e
   140001df8:	mov    rcx,QWORD PTR [rip+0x8231]        # 0x14000a030
   140001dff:	cmp    rcx,r15
   140001e02:	je     0x140001e1e
   140001e04:	cmp    BYTE PTR [rcx+0x19],0x2
   140001e08:	jb     0x140001e1e
   140001e0a:	mov    rcx,QWORD PTR [rcx+0x10]
   140001e0e:	mov    edx,0xc
   140001e13:	mov    r9d,eax
   140001e16:	mov    r8,rdi
   140001e19:	call   0x14000108c
   140001e1e:	xor    r8d,r8d
   140001e21:	lea    rcx,[rip+0x5d00]        # 0x140007b28
   140001e28:	mov    edx,r14d
   140001e2b:	call   QWORD PTR [rip+0x5207]        # 0x140007038
   140001e31:	mov    ebx,eax
   140001e33:	test   eax,eax
   140001e35:	je     0x140001e5b
   140001e37:	mov    rcx,QWORD PTR [rip+0x81f2]        # 0x14000a030
   140001e3e:	cmp    rcx,r15
   140001e41:	je     0x140001fff
   140001e47:	cmp    BYTE PTR [rcx+0x19],0x2
   140001e4b:	jb     0x140001fff
   140001e51:	mov    edx,0xd
   140001e56:	jmp    0x140001fea
   140001e5b:	lea    r14,[rsi+0x70]
   140001e5f:	mov    ecx,0x9
   140001e64:	mov    rdx,r14
   140001e67:	call   QWORD PTR [rip+0x51c3]        # 0x140007030
   140001e6d:	mov    ebx,eax
   140001e6f:	test   eax,eax
   140001e71:	je     0x140001e97
   140001e73:	mov    rcx,QWORD PTR [rip+0x81b6]        # 0x14000a030
   140001e7a:	cmp    rcx,r15
   140001e7d:	je     0x140001fff
   140001e83:	cmp    BYTE PTR [rcx+0x19],0x2
   140001e87:	jb     0x140001fff
   140001e8d:	mov    edx,0xe
   140001e92:	jmp    0x140001fea
   140001e97:	mov    rcx,QWORD PTR [rip+0x8192]        # 0x14000a030
   140001e9e:	cmp    rcx,r15
   140001ea1:	je     0x140001ebd
   140001ea3:	cmp    BYTE PTR [rcx+0x19],0x4
   140001ea7:	jb     0x140001ebd
   140001ea9:	mov    r9,QWORD PTR [r14]
   140001eac:	mov    edx,0xf
   140001eb1:	mov    rcx,QWORD PTR [rcx+0x10]
   140001eb5:	mov    r8,rdi
   140001eb8:	call   0x1400010c8
   140001ebd:	mov    rcx,QWORD PTR [r14]
   140001ec0:	xor    r9d,r9d
   140001ec3:	xor    r8d,r8d
   140001ec6:	lea    edx,[r9+0x9]
   140001eca:	call   QWORD PTR [rip+0x5158]        # 0x140007028
   140001ed0:	mov    ebx,eax
   140001ed2:	test   eax,eax
   140001ed4:	je     0x140001efa
   140001ed6:	mov    rcx,QWORD PTR [rip+0x8153]        # 0x14000a030
   140001edd:	cmp    rcx,r15
   140001ee0:	je     0x140001fff
   140001ee6:	cmp    BYTE PTR [rcx+0x19],0x2
   140001eea:	jb     0x140001fff
   140001ef0:	mov    edx,0x10
   140001ef5:	jmp    0x140001fea
   140001efa:	lea    rax,[rip+0x4bf]        # 0x1400023c0
   140001f01:	xor    r9d,r9d
   140001f04:	mov    QWORD PTR [rsp+0x28],rax
   140001f09:	lea    rcx,[rip+0x5ba0]        # 0x140007ab0
   140001f10:	xor    r8d,r8d
   140001f13:	mov    DWORD PTR [rsp+0x20],0x4d2
   140001f1b:	xor    edx,edx
   140001f1d:	call   QWORD PTR [rip+0x50fd]        # 0x140007020
   140001f23:	mov    ebx,eax
   140001f25:	test   eax,eax
   140001f27:	je     0x140001f4d
   140001f29:	mov    rcx,QWORD PTR [rip+0x8100]        # 0x14000a030
   140001f30:	cmp    rcx,r15
   140001f33:	je     0x140001fff
   140001f39:	cmp    BYTE PTR [rcx+0x19],0x2
   140001f3d:	jb     0x140001fff
   140001f43:	mov    edx,0x11
   140001f48:	jmp    0x140001fea
   140001f4d:	lea    rcx,[rsi+0x78]
   140001f51:	mov    DWORD PTR [rsi+0x60],r12d
   140001f55:	call   QWORD PTR [rip+0x50bd]        # 0x140007018
   140001f5b:	mov    ebx,eax
   140001f5d:	test   eax,eax
   140001f5f:	je     0x140001f82
   140001f61:	mov    rcx,QWORD PTR [rip+0x80c8]        # 0x14000a030
   140001f68:	cmp    rcx,r15
   140001f6b:	je     0x140001fff
   140001f71:	cmp    BYTE PTR [rcx+0x19],0x2
   140001f75:	jb     0x140001fff
   140001f7b:	mov    edx,0x12
   140001f80:	jmp    0x140001fea
   140001f82:	mov    rdx,QWORD PTR [rsi+0x78]
   140001f86:	lea    rcx,[rip+0x5b23]        # 0x140007ab0
   140001f8d:	xor    r9d,r9d
   140001f90:	xor    r8d,r8d
   140001f93:	call   QWORD PTR [rip+0x50a7]        # 0x140007040
   140001f99:	mov    ebx,eax
   140001f9b:	test   eax,eax
   140001f9d:	je     0x140001fb8
   140001f9f:	mov    rcx,QWORD PTR [rip+0x808a]        # 0x14000a030
   140001fa6:	cmp    rcx,r15
   140001fa9:	je     0x140001fff
   140001fab:	cmp    BYTE PTR [rcx+0x19],0x2
   140001faf:	jb     0x140001fff
   140001fb1:	mov    edx,0x13
   140001fb6:	jmp    0x140001fea
   140001fb8:	mov    r8d,r12d
   140001fbb:	mov    DWORD PTR [rsi+0x64],r12d
   140001fbf:	mov    edx,0x4d2
   140001fc4:	mov    ecx,r12d
   140001fc7:	call   QWORD PTR [rip+0x508b]        # 0x140007058
   140001fcd:	mov    ebx,eax
   140001fcf:	test   eax,eax
   140001fd1:	je     0x140001ffb
   140001fd3:	mov    rcx,QWORD PTR [rip+0x8056]        # 0x14000a030
   140001fda:	cmp    rcx,r15
   140001fdd:	je     0x140001fff
   140001fdf:	cmp    BYTE PTR [rcx+0x19],0x2
   140001fe3:	jb     0x140001fff
   140001fe5:	mov    edx,0x14
   140001fea:	mov    r9d,eax
   140001fed:	mov    r8,rdi
   140001ff0:	mov    rcx,QWORD PTR [rcx+0x10]
   140001ff4:	call   0x14000108c
   140001ff9:	jmp    0x140001fff
   140001ffb:	mov    DWORD PTR [rsi+0x68],r12d
   140001fff:	test   ebx,ebx
   140002001:	je     0x14000200b
   140002003:	mov    rcx,rsi
   140002006:	call   0x140002158
   14000200b:	mov    rsi,QWORD PTR [rsp+0x58]
   140002010:	mov    eax,ebx
   140002012:	mov    rbx,QWORD PTR [rsp+0x50]
   140002017:	mov    rdi,QWORD PTR [rsp+0x60]
   14000201c:	add    rsp,0x30
   140002020:	pop    r15
   140002022:	pop    r14
   140002024:	pop    r12
   140002026:	ret    
   140002027:	int3   
   140002028:	int3   
   140002029:	int3   
   14000202a:	int3   
   14000202b:	int3   
   14000202c:	int3   
   14000202d:	int3   
   14000202e:	int3   
   14000202f:	int3   
   140002030:	mov    QWORD PTR [rsp+0x8],rbx
   140002035:	mov    QWORD PTR [rsp+0x10],rbp
   14000203a:	mov    QWORD PTR [rsp+0x18],rsi
   14000203f:	push   rdi
   140002040:	sub    rsp,0x20
   140002044:	mov    rdi,rcx
   140002047:	add    rcx,0x38
   14000204b:	call   QWORD PTR [rip+0x517f]        # 0x1400071d0
   140002051:	mov    rsi,QWORD PTR [rdi+0x128]
   140002058:	test   rsi,rsi
   14000205b:	je     0x140002079
   14000205d:	mov    rax,QWORD PTR [rsi]
   140002060:	mov    rbx,QWORD PTR [rax]
   140002063:	mov    rcx,rbx
   140002066:	call   QWORD PTR [rip+0x5414]        # 0x140007480
   14000206c:	mov    rcx,rsi
   14000206f:	call   rbx
   140002071:	and    QWORD PTR [rdi+0x128],0x0
   140002079:	lea    rcx,[rdi+0xb0]
   140002080:	call   0x140004390
   140002085:	cmp    DWORD PTR [rdi+0x68],0x0
   140002089:	je     0x1400020cc
   14000208b:	xor    ecx,ecx
   14000208d:	call   QWORD PTR [rip+0x5035]        # 0x1400070c8
   140002093:	test   eax,eax
   140002095:	je     0x1400020c8
   140002097:	mov    rcx,QWORD PTR [rip+0x7f92]        # 0x14000a030
   14000209e:	lea    rdx,[rip+0x7f8b]        # 0x14000a030
   1400020a5:	cmp    rcx,rdx
   1400020a8:	je     0x1400020c8
   1400020aa:	cmp    BYTE PTR [rcx+0x19],0x2
   1400020ae:	jb     0x1400020c8
   1400020b0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400020b4:	lea    r8,[rip+0x5b1d]        # 0x140007bd8
   1400020bb:	mov    edx,0x15
   1400020c0:	mov    r9d,eax
   1400020c3:	call   0x14000108c
   1400020c8:	and    DWORD PTR [rdi+0x68],0x0
   1400020cc:	lea    rcx,[rdi+0x10]
   1400020d0:	call   QWORD PTR [rip+0x50fa]        # 0x1400071d0
   1400020d6:	jmp    0x14000211d
   1400020d8:	mov    rax,QWORD PTR [rdi+0x98]
   1400020df:	mov    rcx,QWORD PTR [rax]
   1400020e2:	mov    rsi,QWORD PTR [rcx+0x10]
   1400020e6:	cmp    rcx,rax
   1400020e9:	je     0x14000210c
   1400020eb:	mov    r8,QWORD PTR [rcx+0x8]
   1400020ef:	mov    rax,QWORD PTR [rcx]
   1400020f2:	mov    QWORD PTR [r8],rax
   1400020f5:	mov    r8,QWORD PTR [rcx]
   1400020f8:	mov    rax,QWORD PTR [rcx+0x8]
   1400020fc:	mov    QWORD PTR [r8+0x8],rax
   140002100:	call   0x140005244
   140002105:	dec    QWORD PTR [rdi+0xa0]
   14000210c:	mov    r8d,0x71a
   140002112:	mov    rdx,rsi
   140002115:	mov    rcx,rdi
   140002118:	call   0x140002950
   14000211d:	cmp    QWORD PTR [rdi+0xa0],0x0
   140002125:	jne    0x1400020d8
   140002127:	lea    rcx,[rdi+0x10]
   14000212b:	call   QWORD PTR [rip+0x50a7]        # 0x1400071d8
   140002131:	lea    rcx,[rdi+0x38]
   140002135:	mov    rbx,QWORD PTR [rsp+0x30]
   14000213a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000213f:	mov    rsi,QWORD PTR [rsp+0x40]
   140002144:	add    rsp,0x20
   140002148:	pop    rdi
   140002149:	rex.W jmp QWORD PTR [rip+0x5088]        # 0x1400071d8
   140002150:	int3   
   140002151:	int3   
   140002152:	int3   
   140002153:	int3   
   140002154:	int3   
   140002155:	int3   
   140002156:	int3   
   140002157:	int3   
   140002158:	mov    QWORD PTR [rsp+0x8],rbx
   14000215d:	mov    QWORD PTR [rsp+0x10],rbp
   140002162:	mov    QWORD PTR [rsp+0x18],rsi
   140002167:	push   rdi
   140002168:	push   r12
   14000216a:	push   r14
   14000216c:	sub    rsp,0x20
   140002170:	mov    rdi,rcx
   140002173:	mov    rcx,QWORD PTR [rip+0x7eb6]        # 0x14000a030
   14000217a:	lea    r14,[rip+0x7eaf]        # 0x14000a030
   140002181:	lea    r12,[rip+0x5a50]        # 0x140007bd8
   140002188:	cmp    rcx,r14
   14000218b:	je     0x1400021a4
   14000218d:	cmp    BYTE PTR [rcx+0x19],0x4
   140002191:	jb     0x1400021a4
   140002193:	mov    rcx,QWORD PTR [rcx+0x10]
   140002197:	mov    edx,0x16
   14000219c:	mov    r8,r12
   14000219f:	call   0x140001068
   1400021a4:	mov    rcx,rdi
   1400021a7:	call   0x140002030
   1400021ac:	xor    ebp,ebp
   1400021ae:	cmp    DWORD PTR [rdi+0x64],ebp
   1400021b1:	je     0x1400021f2
   1400021b3:	mov    rdx,QWORD PTR [rdi+0x78]
   1400021b7:	lea    rcx,[rip+0x58f2]        # 0x140007ab0
   1400021be:	xor    r8d,r8d
   1400021c1:	call   QWORD PTR [rip+0x4ea1]        # 0x140007068
   1400021c7:	test   eax,eax
   1400021c9:	je     0x1400021ef
   1400021cb:	mov    rcx,QWORD PTR [rip+0x7e5e]        # 0x14000a030
   1400021d2:	cmp    rcx,r14
   1400021d5:	je     0x1400021ef
   1400021d7:	cmp    BYTE PTR [rcx+0x19],0x2
   1400021db:	jb     0x1400021ef
   1400021dd:	mov    rcx,QWORD PTR [rcx+0x10]
   1400021e1:	lea    edx,[rbp+0x17]
   1400021e4:	mov    r9d,eax
   1400021e7:	mov    r8,r12
   1400021ea:	call   0x14000108c
   1400021ef:	mov    DWORD PTR [rdi+0x64],ebp
   1400021f2:	lea    rbx,[rdi+0x78]
   1400021f6:	cmp    QWORD PTR [rbx],rbp
   1400021f9:	je     0x140002231
   1400021fb:	mov    rcx,rbx
   1400021fe:	call   QWORD PTR [rip+0x4e6c]        # 0x140007070
   140002204:	test   eax,eax
   140002206:	je     0x14000222e
   140002208:	mov    rcx,QWORD PTR [rip+0x7e21]        # 0x14000a030
   14000220f:	cmp    rcx,r14
   140002212:	je     0x14000222e
   140002214:	cmp    BYTE PTR [rcx+0x19],0x2
   140002218:	jb     0x14000222e
   14000221a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000221e:	mov    edx,0x18
   140002223:	mov    r9d,eax
   140002226:	mov    r8,r12
   140002229:	call   0x14000108c
   14000222e:	mov    QWORD PTR [rbx],rbp
   140002231:	cmp    DWORD PTR [rdi+0x60],ebp
   140002234:	je     0x140002276
   140002236:	xor    edx,edx
   140002238:	lea    rcx,[rip+0x5871]        # 0x140007ab0
   14000223f:	lea    r8d,[rdx+0x1]
   140002243:	call   QWORD PTR [rip+0x4e2f]        # 0x140007078
   140002249:	test   eax,eax
   14000224b:	je     0x140002273
   14000224d:	mov    rcx,QWORD PTR [rip+0x7ddc]        # 0x14000a030
   140002254:	cmp    rcx,r14
   140002257:	je     0x140002273
   140002259:	cmp    BYTE PTR [rcx+0x19],0x2
   14000225d:	jb     0x140002273
   14000225f:	mov    rcx,QWORD PTR [rcx+0x10]
   140002263:	mov    edx,0x19
   140002268:	mov    r9d,eax
   14000226b:	mov    r8,r12
   14000226e:	call   0x14000108c
   140002273:	mov    DWORD PTR [rdi+0x60],ebp
   140002276:	lea    rbx,[rdi+0x70]
   14000227a:	cmp    QWORD PTR [rbx],rbp
   14000227d:	je     0x14000228b
   14000227f:	mov    rcx,rbx
   140002282:	call   QWORD PTR [rip+0x4df8]        # 0x140007080
   140002288:	mov    QWORD PTR [rbx],rbp
   14000228b:	cmp    DWORD PTR [rdi+0x88],ebp
   140002291:	je     0x1400022d2
   140002293:	mov    rcx,QWORD PTR [rdi+0x80]
   14000229a:	xor    r8d,r8d
   14000229d:	call   0x1400049ac
   1400022a2:	test   eax,eax
   1400022a4:	je     0x1400022cc
   1400022a6:	mov    rcx,QWORD PTR [rip+0x7d83]        # 0x14000a030
   1400022ad:	cmp    rcx,r14
   1400022b0:	je     0x1400022cc
   1400022b2:	cmp    BYTE PTR [rcx+0x19],0x2
   1400022b6:	jb     0x1400022cc
   1400022b8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400022bc:	mov    edx,0x40
   1400022c1:	mov    r9d,eax
   1400022c4:	mov    r8,r12
   1400022c7:	call   0x14000108c
   1400022cc:	mov    DWORD PTR [rdi+0x88],ebp
   1400022d2:	mov    rsi,QWORD PTR [rdi+0x80]
   1400022d9:	test   rsi,rsi
   1400022dc:	je     0x140002363
   1400022e2:	cmp    DWORD PTR [rsi],0x41636450
   1400022e8:	jne    0x140002333
   1400022ea:	lea    rcx,[rsi+0x8]
   1400022ee:	call   QWORD PTR [rip+0x4ecc]        # 0x1400071c0
   1400022f4:	call   QWORD PTR [rip+0x4e4e]        # 0x140007148
   1400022fa:	mov    DWORD PTR [rsi+0x10],eax
   1400022fd:	mov    rcx,QWORD PTR [rsi+0x20]
   140002301:	call   0x140004d48
   140002306:	mov    QWORD PTR [rsi+0x20],rbp
   14000230a:	lea    rcx,[rsi+0x8]
   14000230e:	mov    DWORD PTR [rsi],ebp
   140002310:	mov    DWORD PTR [rsi+0x10],ebp
   140002313:	call   QWORD PTR [rip+0x4eaf]        # 0x1400071c8
   140002319:	mov    rcx,QWORD PTR gs:0x60
   140002322:	mov    r8,rsi
   140002325:	xor    edx,edx
   140002327:	mov    rcx,QWORD PTR [rcx+0x30]
   14000232b:	call   QWORD PTR [rip+0x510f]        # 0x140007440
   140002331:	jmp    0x14000235c
   140002333:	mov    rcx,QWORD PTR [rip+0x7cf6]        # 0x14000a030
   14000233a:	cmp    rcx,r14
   14000233d:	je     0x14000235c
   14000233f:	cmp    BYTE PTR [rcx+0x19],0x2
   140002343:	jb     0x14000235c
   140002345:	mov    rcx,QWORD PTR [rcx+0x10]
   140002349:	mov    edx,0x41
   14000234e:	mov    r9d,0xc00000ef
   140002354:	mov    r8,r12
   140002357:	call   0x14000108c
   14000235c:	mov    QWORD PTR [rdi+0x80],rbp
   140002363:	cmp    DWORD PTR [rdi+0x6c],ebp
   140002366:	je     0x14000239c
   140002368:	xor    edx,edx
   14000236a:	call   0x1400031a0
   14000236f:	test   eax,eax
   140002371:	je     0x140002399
   140002373:	mov    rcx,QWORD PTR [rip+0x7cb6]        # 0x14000a030
   14000237a:	cmp    rcx,r14
   14000237d:	je     0x140002399
   14000237f:	cmp    BYTE PTR [rcx+0x19],0x2
   140002383:	jb     0x140002399
   140002385:	mov    rcx,QWORD PTR [rcx+0x10]
   140002389:	mov    edx,0x1a
   14000238e:	mov    r9d,eax
   140002391:	mov    r8,r12
   140002394:	call   0x14000108c
   140002399:	mov    DWORD PTR [rdi+0x6c],ebp
   14000239c:	mov    rbx,QWORD PTR [rsp+0x40]
   1400023a1:	mov    rbp,QWORD PTR [rsp+0x48]
   1400023a6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400023ab:	add    rsp,0x20
   1400023af:	pop    r14
   1400023b1:	pop    r12
   1400023b3:	pop    rdi
   1400023b4:	ret    
   1400023b5:	int3   
   1400023b6:	int3   
   1400023b7:	int3   
   1400023b8:	int3   
   1400023b9:	int3   
   1400023ba:	int3   
   1400023bb:	int3   
   1400023bc:	int3   
   1400023bd:	int3   
   1400023be:	int3   
   1400023bf:	int3   
   1400023c0:	sub    rsp,0x38
   1400023c4:	and    QWORD PTR [rsp+0x28],0x0
   1400023ca:	lea    r9,[rsp+0x50]
   1400023cf:	and    QWORD PTR [rsp+0x20],0x0
   1400023d5:	xor    r8d,r8d
   1400023d8:	xor    edx,edx
   1400023da:	xor    ecx,ecx
   1400023dc:	call   QWORD PTR [rip+0x4ca6]        # 0x140007088
   1400023e2:	test   eax,eax
   1400023e4:	je     0x14000241e
   1400023e6:	mov    rcx,QWORD PTR [rip+0x7c43]        # 0x14000a030
   1400023ed:	lea    rdx,[rip+0x7c3c]        # 0x14000a030
   1400023f4:	cmp    rcx,rdx
   1400023f7:	je     0x140002417
   1400023f9:	cmp    BYTE PTR [rcx+0x19],0x2
   1400023fd:	jb     0x140002417
   1400023ff:	mov    edx,0x1b
   140002404:	mov    rcx,QWORD PTR [rcx+0x10]
   140002408:	lea    r8,[rip+0x57c9]        # 0x140007bd8
   14000240f:	mov    r9d,eax
   140002412:	call   0x14000108c
   140002417:	mov    eax,0x5
   14000241c:	jmp    0x140002484
   14000241e:	mov    r9d,DWORD PTR [rsp+0x50]
   140002423:	cmp    r9d,0x4
   140002427:	jae    0x140002459
   140002429:	mov    rcx,QWORD PTR [rip+0x7c00]        # 0x14000a030
   140002430:	lea    rdx,[rip+0x7bf9]        # 0x14000a030
   140002437:	cmp    rcx,rdx
   14000243a:	je     0x140002417
   14000243c:	cmp    BYTE PTR [rcx+0x19],0x2
   140002440:	jb     0x140002417
   140002442:	mov    rcx,QWORD PTR [rcx+0x10]
   140002446:	lea    r8,[rip+0x578b]        # 0x140007bd8
   14000244d:	mov    edx,0x1c
   140002452:	call   0x14000108c
   140002457:	jmp    0x140002417
   140002459:	call   0x140004870
   14000245e:	test   eax,eax
   140002460:	je     0x140002482
   140002462:	mov    rcx,QWORD PTR [rip+0x7bc7]        # 0x14000a030
   140002469:	lea    rdx,[rip+0x7bc0]        # 0x14000a030
   140002470:	cmp    rcx,rdx
   140002473:	je     0x140002417
   140002475:	cmp    BYTE PTR [rcx+0x19],0x2
   140002479:	jb     0x140002417
   14000247b:	mov    edx,0x1d
   140002480:	jmp    0x140002404
   140002482:	xor    eax,eax
   140002484:	add    rsp,0x38
   140002488:	ret    
   140002489:	int3   
   14000248a:	int3   
   14000248b:	int3   
   14000248c:	int3   
   14000248d:	int3   
   14000248e:	int3   
   14000248f:	int3   
   140002490:	mov    rax,rsp
   140002493:	mov    QWORD PTR [rax+0x8],rcx
   140002497:	push   rdi
   140002498:	push   r12
   14000249a:	push   r13
   14000249c:	push   r14
   14000249e:	push   r15
   1400024a0:	sub    rsp,0x30
   1400024a4:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   1400024ac:	mov    QWORD PTR [rax+0x10],rbx
   1400024b0:	mov    QWORD PTR [rax+0x18],rsi
   1400024b4:	mov    r12,r9
   1400024b7:	mov    r13,r8
   1400024ba:	mov    rdi,rdx
   1400024bd:	mov    r14,QWORD PTR [rip+0x8214]        # 0x14000a6d8
   1400024c4:	mov    QWORD PTR [rsp+0x20],r14
   1400024c9:	xor    ebx,ebx
   1400024cb:	mov    QWORD PTR [rax+0x20],rbx
   1400024cf:	mov    QWORD PTR [r9],rbx
   1400024d2:	call   0x140004870
   1400024d7:	test   eax,eax
   1400024d9:	je     0x140002514
   1400024db:	lea    rdx,[rip+0x7b4e]        # 0x14000a030
   1400024e2:	mov    rcx,QWORD PTR [rip+0x7b47]        # 0x14000a030
   1400024e9:	cmp    rcx,rdx
   1400024ec:	je     0x14000250a
   1400024ee:	cmp    BYTE PTR [rcx+0x19],0x2
   1400024f2:	jb     0x14000250a
   1400024f4:	lea    edx,[rbx+0x1e]
   1400024f7:	mov    r9d,eax
   1400024fa:	lea    r8,[rip+0x56d7]        # 0x140007bd8
   140002501:	mov    rcx,QWORD PTR [rcx+0x10]
   140002505:	call   0x14000108c
   14000250a:	mov    eax,0x5
   14000250f:	jmp    0x14000265c
   140002514:	lea    r8,[rsp+0x78]
   140002519:	mov    rdx,rdi
   14000251c:	call   0x140002fb0
   140002521:	test   eax,eax
   140002523:	je     0x140002545
   140002525:	lea    rdx,[rip+0x7b04]        # 0x14000a030
   14000252c:	mov    rcx,QWORD PTR [rip+0x7afd]        # 0x14000a030
   140002533:	cmp    rcx,rdx
   140002536:	je     0x14000250a
   140002538:	cmp    BYTE PTR [rcx+0x19],0x2
   14000253c:	jb     0x14000250a
   14000253e:	mov    edx,0x1f
   140002543:	jmp    0x1400024f7
   140002545:	lea    rcx,[r14+0x10]
   140002549:	call   QWORD PTR [rip+0x4c81]        # 0x1400071d0
   14000254f:	cmp    QWORD PTR [r14+0x90],rbx
   140002556:	je     0x140002599
   140002558:	mov    r15d,0x6e0
   14000255e:	lea    rdx,[rip+0x7acb]        # 0x14000a030
   140002565:	mov    rcx,QWORD PTR [rip+0x7ac4]        # 0x14000a030
   14000256c:	cmp    rcx,rdx
   14000256f:	je     0x140002638
   140002575:	cmp    BYTE PTR [rcx+0x19],0x2
   140002579:	jb     0x140002638
   14000257f:	mov    edx,0x20
   140002584:	lea    r8,[rip+0x564d]        # 0x140007bd8
   14000258b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000258f:	call   0x140001068
   140002594:	jmp    0x140002638
   140002599:	mov    rsi,QWORD PTR [rsp+0x78]
   14000259e:	mov    rcx,rsi
   1400025a1:	call   0x140004098
   1400025a6:	mov    r15d,eax
   1400025a9:	test   eax,eax
   1400025ab:	je     0x1400025e0
   1400025ad:	lea    rdx,[rip+0x7a7c]        # 0x14000a030
   1400025b4:	mov    rcx,QWORD PTR [rip+0x7a75]        # 0x14000a030
   1400025bb:	cmp    rcx,rdx
   1400025be:	je     0x14000263d
   1400025c0:	cmp    BYTE PTR [rcx+0x19],0x2
   1400025c4:	jb     0x14000263d
   1400025c6:	mov    edx,0x21
   1400025cb:	mov    r9d,eax
   1400025ce:	lea    r8,[rip+0x5603]        # 0x140007bd8
   1400025d5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400025d9:	call   0x14000108c
   1400025de:	jmp    0x14000263d
   1400025e0:	mov    ecx,0x38
   1400025e5:	call   0x1400051ac
   1400025ea:	mov    rdi,rax
   1400025ed:	mov    QWORD PTR [rsp+0x60],rax
   1400025f2:	test   rax,rax
   1400025f5:	je     0x14000261b
   1400025f7:	mov    QWORD PTR [rax+0x18],0x7
   1400025ff:	mov    QWORD PTR [rax+0x10],rbx
   140002603:	mov    WORD PTR [rax],bx
   140002606:	mov    rdx,r13
   140002609:	mov    rcx,rax
   14000260c:	call   0x140003a34
   140002611:	mov    QWORD PTR [rdi+0x28],rsi
   140002615:	mov    QWORD PTR [rdi+0x30],r14
   140002619:	jmp    0x14000261e
   14000261b:	mov    rdi,rbx
   14000261e:	mov    QWORD PTR [r14+0x90],rdi
   140002625:	mov    rsi,rbx
   140002628:	mov    QWORD PTR [r12],rdi
   14000262c:	jmp    0x14000263d
   14000262e:	mov    r14,QWORD PTR [rsp+0x20]
   140002633:	mov    r15d,DWORD PTR [rsp+0x60]
   140002638:	mov    rsi,QWORD PTR [rsp+0x78]
   14000263d:	lea    rcx,[r14+0x10]
   140002641:	call   QWORD PTR [rip+0x4b91]        # 0x1400071d8
   140002647:	test   r15d,r15d
   14000264a:	je     0x140002659
   14000264c:	test   rsi,rsi
   14000264f:	je     0x140002659
   140002651:	mov    rcx,rsi
   140002654:	call   0x140005244
   140002659:	mov    eax,r15d
   14000265c:	mov    rbx,QWORD PTR [rsp+0x68]
   140002661:	mov    rsi,QWORD PTR [rsp+0x70]
   140002666:	add    rsp,0x30
   14000266a:	pop    r15
   14000266c:	pop    r14
   14000266e:	pop    r13
   140002670:	pop    r12
   140002672:	pop    rdi
   140002673:	ret    
   140002674:	int3   
   140002675:	int3   
   140002676:	int3   
   140002677:	int3   
   140002678:	int3   
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	mov    QWORD PTR [rsp+0x8],rbx
   140002681:	mov    QWORD PTR [rsp+0x10],rbp
   140002686:	mov    QWORD PTR [rsp+0x18],rsi
   14000268b:	push   rdi
   14000268c:	sub    rsp,0x20
   140002690:	mov    rbx,QWORD PTR [rcx+0x90]
   140002697:	xor    ebp,ebp
   140002699:	mov    rdi,rdx
   14000269c:	mov    rsi,rcx
   14000269f:	test   rbx,rbx
   1400026a2:	je     0x1400026df
   1400026a4:	cmp    rdx,rbx
   1400026a7:	jne    0x1400026df
   1400026a9:	mov    rcx,QWORD PTR [rbx+0x28]
   1400026ad:	call   0x140005244
   1400026b2:	cmp    QWORD PTR [rbx+0x18],0x8
   1400026b7:	jb     0x1400026c1
   1400026b9:	mov    rcx,QWORD PTR [rbx]
   1400026bc:	call   0x140005244
   1400026c1:	mov    QWORD PTR [rbx+0x18],0x7
   1400026c9:	mov    rcx,rbx
   1400026cc:	mov    QWORD PTR [rbx+0x10],rbp
   1400026d0:	mov    WORD PTR [rbx],bp
   1400026d3:	call   0x140005244
   1400026d8:	mov    QWORD PTR [rsi+0x90],rbp
   1400026df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026e4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400026e9:	mov    QWORD PTR [rdi],rbp
   1400026ec:	mov    rbp,QWORD PTR [rsp+0x38]
   1400026f1:	add    rsp,0x20
   1400026f5:	pop    rdi
   1400026f6:	ret    
   1400026f7:	int3   
   1400026f8:	int3   
   1400026f9:	int3   
   1400026fa:	int3   
   1400026fb:	int3   
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	mov    r11,rsp
   140002703:	mov    QWORD PTR [r11+0x10],rdx
   140002707:	mov    QWORD PTR [r11+0x8],rcx
   14000270b:	push   rdi
   14000270c:	push   r14
   14000270e:	push   r15
   140002710:	sub    rsp,0x50
   140002714:	mov    QWORD PTR [r11-0x48],0xfffffffffffffffe
   14000271c:	mov    QWORD PTR [r11+0x18],rbx
   140002720:	mov    QWORD PTR [r11+0x20],rsi
   140002724:	mov    rbx,r9
   140002727:	mov    rsi,rdx
   14000272a:	mov    rdi,QWORD PTR [rip+0x7fa7]        # 0x14000a6d8
   140002731:	and    DWORD PTR [rsp+0x70],0x0
   140002736:	and    QWORD PTR [r11-0x40],0x0
   14000273b:	xor    eax,eax
   14000273d:	mov    QWORD PTR [r11-0x38],rax
   140002741:	mov    QWORD PTR [r11-0x30],rax
   140002745:	mov    QWORD PTR [r11-0x28],rax
   140002749:	cmp    r8,QWORD PTR [rdi+0x90]
   140002750:	je     0x140002793
   140002752:	mov    DWORD PTR [rsp+0x70],0x6
   14000275a:	lea    rbx,[rip+0x78cf]        # 0x14000a030
   140002761:	mov    rcx,QWORD PTR [rip+0x78c8]        # 0x14000a030
   140002768:	cmp    rcx,rbx
   14000276b:	je     0x140002920
   140002771:	cmp    BYTE PTR [rcx+0x19],0x2
   140002775:	jb     0x140002920
   14000277b:	lea    edx,[rax+0x23]
   14000277e:	lea    r8,[rip+0x5453]        # 0x140007bd8
   140002785:	mov    rcx,QWORD PTR [rcx+0x10]
   140002789:	call   0x140001068
   14000278e:	jmp    0x140002918
   140002793:	test   rbx,rbx
   140002796:	jne    0x1400027c8
   140002798:	mov    DWORD PTR [rsp+0x70],0x57
   1400027a0:	lea    rbx,[rip+0x7889]        # 0x14000a030
   1400027a7:	mov    rcx,QWORD PTR [rip+0x7882]        # 0x14000a030
   1400027ae:	cmp    rcx,rbx
   1400027b1:	je     0x140002920
   1400027b7:	cmp    BYTE PTR [rcx+0x19],0x2
   1400027bb:	jb     0x140002920
   1400027c1:	mov    edx,0x24
   1400027c6:	jmp    0x14000277e
   1400027c8:	lea    r15,[rdi+0x10]
   1400027cc:	mov    rcx,r15
   1400027cf:	call   QWORD PTR [rip+0x49fb]        # 0x1400071d0
   1400027d5:	nop
   1400027d6:	mov    QWORD PTR [rsi+0x18],rbx
   1400027da:	mov    rbx,QWORD PTR [rdi+0x98]
   1400027e1:	lea    r9,[rsp+0x78]
   1400027e6:	mov    r8,QWORD PTR [rbx+0x8]
   1400027ea:	mov    rdx,rbx
   1400027ed:	call   0x1400035b0
   1400027f2:	mov    rdx,rax
   1400027f5:	mov    rax,QWORD PTR [rdi+0xa0]
   1400027fc:	movabs rcx,0x1ffffffffffffffe
   140002806:	sub    rcx,rax
   140002809:	cmp    rcx,0x1
   14000280d:	jae    0x14000281b
   14000280f:	lea    rcx,[rip+0x5362]        # 0x140007b78
   140002816:	call   0x140005308
   14000281b:	inc    rax
   14000281e:	mov    QWORD PTR [rdi+0xa0],rax
   140002825:	mov    QWORD PTR [rbx+0x8],rdx
   140002829:	mov    rax,QWORD PTR [rdx+0x8]
   14000282d:	mov    QWORD PTR [rax],rdx
   140002830:	lea    rbx,[rip+0x77f9]        # 0x14000a030
   140002837:	mov    rcx,QWORD PTR [rip+0x77f2]        # 0x14000a030
   14000283e:	cmp    rcx,rbx
   140002841:	je     0x140002866
   140002843:	cmp    BYTE PTR [rcx+0x19],0x4
   140002847:	jb     0x140002866
   140002849:	mov    edx,0x25
   14000284e:	mov    r9d,DWORD PTR [rdi+0xa0]
   140002855:	lea    r8,[rip+0x537c]        # 0x140007bd8
   14000285c:	mov    rcx,QWORD PTR [rcx+0x10]
   140002860:	call   0x14000108c
   140002865:	nop
   140002866:	lea    rax,[rip+0x223]        # 0x140002a90
   14000286d:	mov    QWORD PTR [rsp+0x28],rax
   140002872:	lea    r9,[rsp+0x28]
   140002877:	mov    edx,0x3
   14000287c:	lea    r8d,[rdx+0x2]
   140002880:	mov    rcx,QWORD PTR [rsi+0x20]
   140002884:	call   QWORD PTR [rip+0x4806]        # 0x140007090
   14000288a:	mov    DWORD PTR [rsp+0x70],eax
   14000288e:	test   eax,eax
   140002890:	je     0x140002900
   140002892:	mov    rcx,QWORD PTR [rip+0x7797]        # 0x14000a030
   140002899:	cmp    rcx,rbx
   14000289c:	je     0x1400028bc
   14000289e:	cmp    BYTE PTR [rcx+0x19],0x2
   1400028a2:	jb     0x1400028bc
   1400028a4:	mov    edx,0x27
   1400028a9:	mov    r9d,eax
   1400028ac:	lea    r8,[rip+0x5325]        # 0x140007bd8
   1400028b3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400028b7:	call   0x14000108c
   1400028bc:	mov    r14,QWORD PTR [rdi+0x98]
   1400028c3:	mov    rbx,QWORD PTR [r14]
   1400028c6:	jmp    0x1400028f0
   1400028c8:	cmp    QWORD PTR [rbx+0x10],rsi
   1400028cc:	jne    0x1400028ed
   1400028ce:	mov    rax,QWORD PTR [rbx+0x8]
   1400028d2:	mov    rcx,rbx
   1400028d5:	mov    rbx,QWORD PTR [rbx]
   1400028d8:	mov    QWORD PTR [rax],rbx
   1400028db:	mov    QWORD PTR [rbx+0x8],rax
   1400028df:	call   0x140005244
   1400028e4:	dec    QWORD PTR [rdi+0xa0]
   1400028eb:	jmp    0x1400028f0
   1400028ed:	mov    rbx,QWORD PTR [rbx]
   1400028f0:	cmp    rbx,r14
   1400028f3:	jne    0x1400028c8
   1400028f5:	mov    rcx,r15
   1400028f8:	call   QWORD PTR [rip+0x48da]        # 0x1400071d8
   1400028fe:	jmp    0x140002918
   140002900:	mov    rcx,r15
   140002903:	call   QWORD PTR [rip+0x48cf]        # 0x1400071d8
   140002909:	mov    rcx,rdi
   14000290c:	call   0x140002d1c
   140002911:	jmp    0x140002918
   140002913:	mov    rsi,QWORD PTR [rsp+0x78]
   140002918:	mov    eax,DWORD PTR [rsp+0x70]
   14000291c:	test   eax,eax
   14000291e:	je     0x140002932
   140002920:	lea    rdx,[rsp+0x70]
   140002925:	mov    rcx,rsi
   140002928:	call   QWORD PTR [rip+0x476a]        # 0x140007098
   14000292e:	mov    eax,DWORD PTR [rsp+0x70]
   140002932:	lea    r11,[rsp+0x50]
   140002937:	mov    rbx,QWORD PTR [r11+0x30]
   14000293b:	mov    rsi,QWORD PTR [r11+0x38]
   14000293f:	mov    rsp,r11
   140002942:	pop    r15
   140002944:	pop    r14
   140002946:	pop    rdi
   140002947:	ret    
   140002948:	int3   
   140002949:	int3   
   14000294a:	int3   
   14000294b:	int3   
   14000294c:	int3   
   14000294d:	int3   
   14000294e:	int3   
   14000294f:	int3   
   140002950:	mov    rax,rsp
   140002953:	mov    QWORD PTR [rax+0x10],rbx
   140002957:	mov    QWORD PTR [rax+0x20],rbp
   14000295b:	mov    DWORD PTR [rax+0x18],r8d
   14000295f:	push   rdi
   140002960:	sub    rsp,0x20
   140002964:	and    DWORD PTR [rax+0x8],0x0
   140002968:	mov    rbx,rdx
   14000296b:	mov    rdi,rcx
   14000296e:	mov    rcx,QWORD PTR [rip+0x76bb]        # 0x14000a030
   140002975:	lea    rbp,[rip+0x76b4]        # 0x14000a030
   14000297c:	cmp    rcx,rbp
   14000297f:	je     0x14000299c
   140002981:	cmp    BYTE PTR [rcx+0x19],0x4
   140002985:	jb     0x14000299c
   140002987:	mov    rcx,QWORD PTR [rcx+0x10]
   14000298b:	lea    r8,[rip+0x5246]        # 0x140007bd8
   140002992:	mov    edx,0x28
   140002997:	call   0x140001068
   14000299c:	lea    rcx,[rdi+0x10]
   1400029a0:	call   QWORD PTR [rip+0x482a]        # 0x1400071d0
   1400029a6:	mov    rcx,QWORD PTR [rbx+0x20]
   1400029aa:	lea    r8,[rsp+0x30]
   1400029af:	mov    edx,0x1
   1400029b4:	call   QWORD PTR [rip+0x46e6]        # 0x1400070a0
   1400029ba:	test   eax,eax
   1400029bc:	je     0x1400029e8
   1400029be:	mov    rcx,QWORD PTR [rip+0x766b]        # 0x14000a030
   1400029c5:	cmp    rcx,rbp
   1400029c8:	je     0x1400029e8
   1400029ca:	cmp    BYTE PTR [rcx+0x19],0x2
   1400029ce:	jb     0x1400029e8
   1400029d0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400029d4:	lea    r8,[rip+0x51fd]        # 0x140007bd8
   1400029db:	mov    edx,0x29
   1400029e0:	mov    r9d,eax
   1400029e3:	call   0x14000108c
   1400029e8:	mov    rcx,QWORD PTR [rbx+0x20]
   1400029ec:	lea    r8,[rsp+0x30]
   1400029f1:	mov    edx,0x2
   1400029f6:	call   QWORD PTR [rip+0x46a4]        # 0x1400070a0
   1400029fc:	test   eax,eax
   1400029fe:	je     0x140002a2a
   140002a00:	mov    rcx,QWORD PTR [rip+0x7629]        # 0x14000a030
   140002a07:	cmp    rcx,rbp
   140002a0a:	je     0x140002a2a
   140002a0c:	cmp    BYTE PTR [rcx+0x19],0x2
   140002a10:	jb     0x140002a2a
   140002a12:	mov    rcx,QWORD PTR [rcx+0x10]
   140002a16:	lea    r8,[rip+0x51bb]        # 0x140007bd8
   140002a1d:	mov    edx,0x2a
   140002a22:	mov    r9d,eax
   140002a25:	call   0x14000108c
   140002a2a:	lea    rcx,[rdi+0x10]
   140002a2e:	call   QWORD PTR [rip+0x47a4]        # 0x1400071d8
   140002a34:	lea    rdx,[rsp+0x40]
   140002a39:	mov    rcx,rbx
   140002a3c:	call   QWORD PTR [rip+0x4656]        # 0x140007098
   140002a42:	test   eax,eax
   140002a44:	je     0x140002a70
   140002a46:	mov    rcx,QWORD PTR [rip+0x75e3]        # 0x14000a030
   140002a4d:	cmp    rcx,rbp
   140002a50:	je     0x140002a70
   140002a52:	cmp    BYTE PTR [rcx+0x19],0x2
   140002a56:	jb     0x140002a70
   140002a58:	mov    rcx,QWORD PTR [rcx+0x10]
   140002a5c:	lea    r8,[rip+0x5175]        # 0x140007bd8
   140002a63:	mov    edx,0x2b
   140002a68:	mov    r9d,eax
   140002a6b:	call   0x14000108c
   140002a70:	mov    rbx,QWORD PTR [rsp+0x38]
   140002a75:	mov    rbp,QWORD PTR [rsp+0x48]
   140002a7a:	add    rsp,0x20
   140002a7e:	pop    rdi
   140002a7f:	ret    
   140002a80:	int3   
   140002a81:	int3   
   140002a82:	int3   
   140002a83:	int3   
   140002a84:	int3   
   140002a85:	int3   
   140002a86:	int3   
   140002a87:	int3   
   140002a88:	int3   
   140002a89:	int3   
   140002a8a:	int3   
   140002a8b:	int3   
   140002a8c:	int3   
   140002a8d:	int3   
   140002a8e:	int3   
   140002a8f:	int3   
   140002a90:	mov    QWORD PTR [rsp+0x8],rbx
   140002a95:	mov    QWORD PTR [rsp+0x10],rsi
   140002a9a:	push   rdi
   140002a9b:	sub    rsp,0x20
   140002a9f:	mov    edi,r8d
   140002aa2:	mov    rsi,rcx
   140002aa5:	mov    rcx,QWORD PTR [rip+0x7584]        # 0x14000a030
   140002aac:	lea    rax,[rip+0x757d]        # 0x14000a030
   140002ab3:	cmp    rcx,rax
   140002ab6:	je     0x140002aca
   140002ab8:	cmp    BYTE PTR [rcx+0x19],0x4
   140002abc:	jb     0x140002aca
   140002abe:	mov    rcx,QWORD PTR [rcx+0x10]
   140002ac2:	mov    r9d,r8d
   140002ac5:	call   0x1400019f0
   140002aca:	mov    rcx,QWORD PTR [rip+0x7c07]        # 0x14000a6d8
   140002ad1:	add    rcx,0x10
   140002ad5:	call   QWORD PTR [rip+0x46f5]        # 0x1400071d0
   140002adb:	mov    rbx,QWORD PTR [rip+0x7bf6]        # 0x14000a6d8
   140002ae2:	mov    rax,QWORD PTR [rbx+0x98]
   140002ae9:	mov    rcx,QWORD PTR [rax]
   140002aec:	jmp    0x140002af7
   140002aee:	cmp    QWORD PTR [rcx+0x10],rsi
   140002af2:	je     0x140002b16
   140002af4:	mov    rcx,QWORD PTR [rcx]
   140002af7:	cmp    rcx,rax
   140002afa:	jne    0x140002aee
   140002afc:	lea    rcx,[rbx+0x10]
   140002b00:	call   QWORD PTR [rip+0x46d2]        # 0x1400071d8
   140002b06:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b0b:	mov    rsi,QWORD PTR [rsp+0x38]
   140002b10:	add    rsp,0x20
   140002b14:	pop    rdi
   140002b15:	ret    
   140002b16:	cmp    rcx,rax
   140002b19:	je     0x140002b43
   140002b1b:	mov    rdx,QWORD PTR [rcx+0x8]
   140002b1f:	mov    rax,QWORD PTR [rcx]
   140002b22:	mov    QWORD PTR [rdx],rax
   140002b25:	mov    rdx,QWORD PTR [rcx]
   140002b28:	mov    rax,QWORD PTR [rcx+0x8]
   140002b2c:	mov    QWORD PTR [rdx+0x8],rax
   140002b30:	call   0x140005244
   140002b35:	dec    QWORD PTR [rbx+0xa0]
   140002b3c:	mov    rbx,QWORD PTR [rip+0x7b95]        # 0x14000a6d8
   140002b43:	lea    rcx,[rbx+0x10]
   140002b47:	call   QWORD PTR [rip+0x468b]        # 0x1400071d8
   140002b4d:	mov    rcx,QWORD PTR [rip+0x7b84]        # 0x14000a6d8
   140002b54:	mov    r8d,0x71a
   140002b5a:	mov    rdx,rsi
   140002b5d:	call   0x140002950
   140002b62:	cmp    edi,0x3
   140002b65:	jne    0x140002b06
   140002b67:	mov    rcx,QWORD PTR [rip+0x7b6a]        # 0x14000a6d8
   140002b6e:	call   0x140002030
   140002b73:	jmp    0x140002b06
   140002b75:	int3   
   140002b76:	int3   
   140002b77:	int3   
   140002b78:	int3   
   140002b79:	int3   
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	mov    QWORD PTR [rsp+0x10],rbx
   140002b85:	mov    QWORD PTR [rsp+0x18],rbp
   140002b8a:	push   rsi
   140002b8b:	push   rdi
   140002b8c:	push   r12
   140002b8e:	push   r14
   140002b90:	push   r15
   140002b92:	sub    rsp,0x20
   140002b96:	and    QWORD PTR [rsp+0x50],0x0
   140002b9c:	lea    rsi,[rcx+0x10]
   140002ba0:	mov    rdi,rcx
   140002ba3:	mov    r14,rdx
   140002ba6:	mov    rcx,rsi
   140002ba9:	call   QWORD PTR [rip+0x4621]        # 0x1400071d0
   140002baf:	cmp    QWORD PTR [rdi+0x90],0x0
   140002bb7:	jne    0x140002bc3
   140002bb9:	mov    ebx,0x15
   140002bbe:	jmp    0x140002cf3
   140002bc3:	movzx  ebp,WORD PTR [r14+0x56]
   140002bc8:	lea    r15,[rdi+0xb0]
   140002bcf:	add    ebp,0x68
   140002bd2:	lea    r8,[rsp+0x50]
   140002bd7:	mov    edx,ebp
   140002bd9:	mov    rcx,r15
   140002bdc:	call   0x1400045e4
   140002be1:	mov    ebx,eax
   140002be3:	cmp    eax,0x19e4
   140002be8:	jne    0x140002c79
   140002bee:	mov    rcx,rsi
   140002bf1:	call   QWORD PTR [rip+0x45e1]        # 0x1400071d8
   140002bf7:	mov    rcx,rdi
   140002bfa:	call   0x140002d1c
   140002bff:	lea    r12,[rip+0x742a]        # 0x14000a030
   140002c06:	test   eax,eax
   140002c08:	je     0x140002c34
   140002c0a:	mov    rcx,QWORD PTR [rip+0x741f]        # 0x14000a030
   140002c11:	cmp    rcx,r12
   140002c14:	je     0x140002c34
   140002c16:	cmp    BYTE PTR [rcx+0x19],0x2
   140002c1a:	jb     0x140002c34
   140002c1c:	mov    rcx,QWORD PTR [rcx+0x10]
   140002c20:	lea    r8,[rip+0x4fb1]        # 0x140007bd8
   140002c27:	mov    edx,0x2e
   140002c2c:	mov    r9d,eax
   140002c2f:	call   0x14000108c
   140002c34:	mov    rcx,rsi
   140002c37:	call   QWORD PTR [rip+0x4593]        # 0x1400071d0
   140002c3d:	lea    r8,[rsp+0x50]
   140002c42:	mov    edx,ebp
   140002c44:	mov    rcx,r15
   140002c47:	call   0x1400045e4
   140002c4c:	mov    ebx,eax
   140002c4e:	test   eax,eax
   140002c50:	je     0x140002c8a
   140002c52:	mov    rcx,QWORD PTR [rip+0x73d7]        # 0x14000a030
   140002c59:	cmp    rcx,r12
   140002c5c:	je     0x140002c79
   140002c5e:	cmp    BYTE PTR [rcx+0x19],0x2
   140002c62:	jb     0x140002c79
   140002c64:	mov    rcx,QWORD PTR [rcx+0x10]
   140002c68:	lea    r8,[rip+0x4f69]        # 0x140007bd8
   140002c6f:	mov    edx,0x2f
   140002c74:	call   0x140001068
   140002c79:	test   ebx,ebx
   140002c7b:	je     0x140002c8a
   140002c7d:	mov    eax,0x1
   140002c82:	add    DWORD PTR [rdi+0x8c],eax
   140002c88:	jmp    0x140002cf3
   140002c8a:	mov    rcx,QWORD PTR [rsp+0x50]
   140002c8f:	mov    eax,0x1
   140002c94:	mov    WORD PTR [rcx+0x4],ax
   140002c98:	mov    DWORD PTR [rcx],ebp
   140002c9a:	add    rcx,0x8
   140002c9e:	movups xmm0,XMMWORD PTR [r14]
   140002ca2:	movups XMMWORD PTR [rcx],xmm0
   140002ca5:	movups xmm1,XMMWORD PTR [r14+0x10]
   140002caa:	movups XMMWORD PTR [rcx+0x10],xmm1
   140002cae:	movups xmm0,XMMWORD PTR [r14+0x20]
   140002cb3:	movups XMMWORD PTR [rcx+0x20],xmm0
   140002cb7:	movups xmm1,XMMWORD PTR [r14+0x30]
   140002cbc:	movups XMMWORD PTR [rcx+0x30],xmm1
   140002cc0:	movups xmm0,XMMWORD PTR [r14+0x40]
   140002cc5:	movups XMMWORD PTR [rcx+0x40],xmm0
   140002cc9:	mov    eax,DWORD PTR [r14+0x50]
   140002ccd:	mov    DWORD PTR [rcx+0x50],eax
   140002cd0:	movzx  eax,WORD PTR [r14+0x56]
   140002cd5:	mov    WORD PTR [rcx+0x56],ax
   140002cd9:	mov    eax,0x60
   140002cde:	mov    WORD PTR [rcx+0x5a],ax
   140002ce2:	add    rcx,rax
   140002ce5:	movzx  r8d,WORD PTR [r14+0x56]
   140002cea:	mov    rdx,QWORD PTR [r14+0x60]
   140002cee:	call   0x140005ef2
   140002cf3:	mov    rcx,rsi
   140002cf6:	call   QWORD PTR [rip+0x44dc]        # 0x1400071d8
   140002cfc:	mov    rbp,QWORD PTR [rsp+0x60]
   140002d01:	mov    eax,ebx
   140002d03:	mov    rbx,QWORD PTR [rsp+0x58]
   140002d08:	add    rsp,0x20
   140002d0c:	pop    r15
   140002d0e:	pop    r14
   140002d10:	pop    r12
   140002d12:	pop    rdi
   140002d13:	pop    rsi
   140002d14:	ret    
   140002d15:	int3   
   140002d16:	int3   
   140002d17:	int3   
   140002d18:	int3   
   140002d19:	int3   
   140002d1a:	int3   
   140002d1b:	int3   
   140002d1c:	mov    rax,rsp
   140002d1f:	mov    QWORD PTR [rax+0x8],rbx
   140002d23:	mov    QWORD PTR [rax+0x10],rbp
   140002d27:	mov    QWORD PTR [rax+0x18],rsi
   140002d2b:	mov    QWORD PTR [rax+0x20],rdi
   140002d2f:	push   r12
   140002d31:	push   r14
   140002d33:	push   r15
   140002d35:	sub    rsp,0x20
   140002d39:	lea    rbp,[rcx+0x10]
   140002d3d:	mov    rbx,rcx
   140002d40:	xor    r15d,r15d
   140002d43:	mov    rcx,rbp
   140002d46:	mov    r12d,r15d
   140002d49:	call   QWORD PTR [rip+0x4481]        # 0x1400071d0
   140002d4f:	cmp    QWORD PTR [rbx+0xa0],r15
   140002d56:	jne    0x140002d8e
   140002d58:	mov    rcx,QWORD PTR [rip+0x72d1]        # 0x14000a030
   140002d5f:	lea    rsi,[rip+0x72ca]        # 0x14000a030
   140002d66:	cmp    rcx,rsi
   140002d69:	je     0x140002d87
   140002d6b:	lea    eax,[r15+0x2]
   140002d6f:	cmp    BYTE PTR [rcx+0x19],al
   140002d72:	jb     0x140002d87
   140002d74:	mov    rcx,QWORD PTR [rcx+0x10]
   140002d78:	lea    edx,[rax+0x2e]
   140002d7b:	lea    r8,[rip+0x4e56]        # 0x140007bd8
   140002d82:	call   0x140001068
   140002d87:	mov    ebx,0x6
   140002d8c:	jmp    0x140002ddc
   140002d8e:	lea    rdi,[rbx+0xb0]
   140002d95:	cmp    DWORD PTR [rdi+0x54],r15d
   140002d99:	jne    0x140002dec
   140002d9b:	cmp    DWORD PTR [rdi+0x58],r15d
   140002d9f:	je     0x140002da7
   140002da1:	cmp    DWORD PTR [rdi+0x50],r15d
   140002da5:	ja     0x140002dec
   140002da7:	mov    rcx,QWORD PTR [rip+0x7282]        # 0x14000a030
   140002dae:	lea    rsi,[rip+0x727b]        # 0x14000a030
   140002db5:	cmp    rcx,rsi
   140002db8:	je     0x140002dd7
   140002dba:	mov    eax,0x2
   140002dbf:	cmp    BYTE PTR [rcx+0x19],al
   140002dc2:	jb     0x140002dd7
   140002dc4:	mov    rcx,QWORD PTR [rcx+0x10]
   140002dc8:	lea    edx,[rax+0x2f]
   140002dcb:	lea    r8,[rip+0x4e06]        # 0x140007bd8
   140002dd2:	call   0x140001068
   140002dd7:	mov    ebx,0x15
   140002ddc:	mov    rcx,rbp
   140002ddf:	call   QWORD PTR [rip+0x43f3]        # 0x1400071d8
   140002de5:	mov    eax,ebx
   140002de7:	jmp    0x140002f2c
   140002dec:	lea    rsi,[rip+0x723d]        # 0x14000a030
   140002df3:	cmp    DWORD PTR [rbx+0x8c],r15d
   140002dfa:	je     0x140002e9d
   140002e00:	mov    rcx,rdi
   140002e03:	mov    r14,r15
   140002e06:	call   QWORD PTR [rip+0x43c4]        # 0x1400071d0
   140002e0c:	mov    ecx,DWORD PTR [rdi+0x44]
   140002e0f:	cmp    ecx,0xc
   140002e12:	jb     0x140002e46
   140002e14:	mov    edx,DWORD PTR [rdi+0x40]
   140002e17:	cmp    edx,0xc
   140002e1a:	jb     0x140002e46
   140002e1c:	mov    r14,QWORD PTR [rdi+0x38]
   140002e20:	inc    DWORD PTR [rdi+0x50]
   140002e23:	mov    QWORD PTR [rdi+0x48],r14
   140002e27:	lea    rax,[r14+0xc]
   140002e2b:	mov    QWORD PTR [rdi+0x38],rax
   140002e2f:	lea    eax,[rdx-0xc]
   140002e32:	mov    DWORD PTR [rdi+0x40],eax
   140002e35:	lea    eax,[rcx-0xc]
   140002e38:	mov    rcx,rdi
   140002e3b:	mov    DWORD PTR [rdi+0x44],eax
   140002e3e:	call   QWORD PTR [rip+0x4394]        # 0x1400071d8
   140002e44:	jmp    0x140002e55
   140002e46:	mov    rcx,rdi
   140002e49:	call   QWORD PTR [rip+0x4389]        # 0x1400071d8
   140002e4f:	mov    r12d,0x19e4
   140002e55:	mov    r9d,DWORD PTR [rbx+0x8c]
   140002e5c:	mov    eax,0x2
   140002e61:	mov    WORD PTR [r14+0x4],ax
   140002e66:	mov    DWORD PTR [r14],0xc
   140002e6d:	mov    DWORD PTR [r14+0x8],r9d
   140002e71:	mov    rcx,QWORD PTR [rip+0x71b8]        # 0x14000a030
   140002e78:	cmp    rcx,rsi
   140002e7b:	je     0x140002e96
   140002e7d:	cmp    BYTE PTR [rcx+0x19],0x4
   140002e81:	jb     0x140002e96
   140002e83:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e87:	lea    edx,[rax+0x2b]
   140002e8a:	lea    r8,[rip+0x4d47]        # 0x140007bd8
   140002e91:	call   0x14000108c
   140002e96:	mov    DWORD PTR [rbx+0x8c],r15d
   140002e9d:	mov    rax,QWORD PTR [rbx+0x98]
   140002ea4:	mov    rcx,QWORD PTR [rax]
   140002ea7:	mov    r15,QWORD PTR [rcx+0x10]
   140002eab:	cmp    rcx,rax
   140002eae:	je     0x140002ed1
   140002eb0:	mov    rdx,QWORD PTR [rcx+0x8]
   140002eb4:	mov    rax,QWORD PTR [rcx]
   140002eb7:	mov    QWORD PTR [rdx],rax
   140002eba:	mov    rdx,QWORD PTR [rcx]
   140002ebd:	mov    rax,QWORD PTR [rcx+0x8]
   140002ec1:	mov    QWORD PTR [rdx+0x8],rax
   140002ec5:	call   0x140005244
   140002eca:	dec    QWORD PTR [rbx+0xa0]
   140002ed1:	mov    r14,QWORD PTR [r15+0x18]
   140002ed5:	mov    rcx,QWORD PTR [rip+0x7154]        # 0x14000a030
   140002edc:	cmp    rcx,rsi
   140002edf:	je     0x140002f03
   140002ee1:	cmp    BYTE PTR [rcx+0x19],0x4
   140002ee5:	jb     0x140002f03
   140002ee7:	mov    r9d,DWORD PTR [rbx+0xa0]
   140002eee:	lea    r8,[rip+0x4ce3]        # 0x140007bd8
   140002ef5:	mov    rcx,QWORD PTR [rcx+0x10]
   140002ef9:	mov    edx,0x32
   140002efe:	call   0x14000108c
   140002f03:	mov    rdx,r14
   140002f06:	mov    rcx,rdi
   140002f09:	call   0x1400044f8
   140002f0e:	mov    rcx,rbp
   140002f11:	mov    QWORD PTR [r14+0x8],rax
   140002f15:	call   QWORD PTR [rip+0x42bd]        # 0x1400071d8
   140002f1b:	xor    r8d,r8d
   140002f1e:	mov    rdx,r15
   140002f21:	mov    rcx,rbx
   140002f24:	call   0x140002950
   140002f29:	mov    eax,r12d
   140002f2c:	mov    rbx,QWORD PTR [rsp+0x40]
   140002f31:	mov    rbp,QWORD PTR [rsp+0x48]
   140002f36:	mov    rsi,QWORD PTR [rsp+0x50]
   140002f3b:	mov    rdi,QWORD PTR [rsp+0x58]
   140002f40:	add    rsp,0x20
   140002f44:	pop    r15
   140002f46:	pop    r14
   140002f48:	pop    r12
   140002f4a:	ret    
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	int3   
   140002f51:	int3   
   140002f52:	int3   
   140002f53:	int3   
   140002f54:	int3   
   140002f55:	int3   
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	sub    rsp,0x28
   140002f64:	add    rcx,0xfffffffffffffff8
   140002f68:	call   0x140002d1c
   140002f6d:	test   eax,eax
   140002f6f:	je     0x140002fa2
   140002f71:	mov    rcx,QWORD PTR [rip+0x70b8]        # 0x14000a030
   140002f78:	lea    rdx,[rip+0x70b1]        # 0x14000a030
   140002f7f:	cmp    rcx,rdx
   140002f82:	je     0x140002fa2
   140002f84:	cmp    BYTE PTR [rcx+0x19],0x2
   140002f88:	jb     0x140002fa2
   140002f8a:	mov    rcx,QWORD PTR [rcx+0x10]
   140002f8e:	lea    r8,[rip+0x4c43]        # 0x140007bd8
   140002f95:	mov    edx,0x33
   140002f9a:	mov    r9d,eax
   140002f9d:	call   0x14000108c
   140002fa2:	add    rsp,0x28
   140002fa6:	ret    
   140002fa7:	int3   
   140002fa8:	int3   
   140002fa9:	int3   
   140002faa:	int3   
   140002fab:	int3   
   140002fac:	int3   
   140002fad:	int3   
   140002fae:	int3   
   140002faf:	int3   
   140002fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140002fb5:	push   rbp
   140002fb6:	push   rsi
   140002fb7:	push   rdi
   140002fb8:	lea    rbp,[rsp-0x50]
   140002fbd:	sub    rsp,0x150
   140002fc4:	mov    rax,QWORD PTR [rip+0x704d]        # 0x14000a018
   140002fcb:	xor    rax,rsp
   140002fce:	mov    QWORD PTR [rbp+0x40],rax
   140002fd2:	xor    esi,esi
   140002fd4:	lea    rcx,[rsp+0x32]
   140002fd9:	mov    rdi,r8
   140002fdc:	mov    DWORD PTR [rsp+0x20],esi
   140002fe0:	mov    rbx,rdx
   140002fe3:	mov    WORD PTR [rsp+0x30],si
   140002fe8:	xor    edx,edx
   140002fea:	lea    r8d,[rsi+0x7e]
   140002fee:	call   0x140005efe
   140002ff3:	mov    r8d,0x80
   140002ff9:	mov    WORD PTR [rbp-0x50],si
   140002ffd:	xor    edx,edx
   140002fff:	mov    DWORD PTR [rsp+0x24],r8d
   140003004:	lea    rcx,[rbp-0x4e]
   140003008:	call   0x140005efe
   14000300d:	lea    r9,[rsp+0x20]
   140003012:	mov    QWORD PTR [rdi],rsi
   140003015:	lea    r8,[rsp+0x24]
   14000301a:	mov    rcx,rbx
   14000301d:	lea    rdx,[rsp+0x30]
   140003022:	call   QWORD PTR [rip+0x4080]        # 0x1400070a8
   140003028:	mov    ebx,eax
   14000302a:	test   eax,eax
   14000302c:	je     0x140003066
   14000302e:	mov    rcx,QWORD PTR [rip+0x6ffb]        # 0x14000a030
   140003035:	lea    rdx,[rip+0x6ff4]        # 0x14000a030
   14000303c:	cmp    rcx,rdx
   14000303f:	je     0x14000305f
   140003041:	lea    edx,[rsi+0x2]
   140003044:	cmp    BYTE PTR [rcx+0x19],dl
   140003047:	jb     0x14000305f
   140003049:	mov    rcx,QWORD PTR [rcx+0x10]
   14000304d:	lea    edx,[rsi+0x34]
   140003050:	mov    r9d,eax
   140003053:	lea    r8,[rip+0x4b7e]        # 0x140007bd8
   14000305a:	call   0x14000108c
   14000305f:	mov    eax,ebx
   140003061:	jmp    0x14000317a
   140003066:	mov    eax,DWORD PTR [rsp+0x20]
   14000306a:	dec    eax
   14000306c:	cmp    eax,0x1
   14000306f:	jbe    0x1400030ad
   140003071:	mov    rcx,QWORD PTR [rip+0x6fb8]        # 0x14000a030
   140003078:	lea    rdx,[rip+0x6fb1]        # 0x14000a030
   14000307f:	cmp    rcx,rdx
   140003082:	je     0x1400030a3
   140003084:	mov    edx,0x2
   140003089:	cmp    BYTE PTR [rcx+0x19],dl
   14000308c:	jb     0x1400030a3
   14000308e:	mov    rcx,QWORD PTR [rcx+0x10]
   140003092:	lea    r8,[rip+0x4b3f]        # 0x140007bd8
   140003099:	mov    edx,0x35
   14000309e:	call   0x140001068
   1400030a3:	mov    eax,0x6e4
   1400030a8:	jmp    0x14000317a
   1400030ad:	lea    rdx,[rip+0x7068]        # 0x14000a11c
   1400030b4:	mov    ecx,0x14
   1400030b9:	call   0x140005754
   1400030be:	mov    rbx,rax
   1400030c1:	test   rax,rax
   1400030c4:	jne    0x1400030fb
   1400030c6:	mov    rcx,QWORD PTR [rip+0x6f63]        # 0x14000a030
   1400030cd:	lea    rdx,[rip+0x6f5c]        # 0x14000a030
   1400030d4:	cmp    rcx,rdx
   1400030d7:	je     0x1400030f4
   1400030d9:	lea    edx,[rax+0x2]
   1400030dc:	cmp    BYTE PTR [rcx+0x19],dl
   1400030df:	jb     0x1400030f4
   1400030e1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030e5:	lea    edx,[rax+0x36]
   1400030e8:	lea    r8,[rip+0x4ae9]        # 0x140007bd8
   1400030ef:	call   0x140001068
   1400030f4:	mov    eax,0xe
   1400030f9:	jmp    0x14000317a
   1400030fb:	cmp    DWORD PTR [rsp+0x20],0x1
   140003100:	jne    0x140003122
   140003102:	mov    edx,0x2
   140003107:	lea    rcx,[rsp+0x34]
   14000310c:	mov    WORD PTR [rax],dx
   14000310f:	lea    rdx,[rbp-0x50]
   140003113:	mov    eax,DWORD PTR [rsp+0x34]
   140003117:	mov    DWORD PTR [rbx+0x4],eax
   14000311a:	call   QWORD PTR [rip+0x4348]        # 0x140007468
   140003120:	jmp    0x140003143
   140003122:	mov    eax,0x17
   140003127:	lea    rdx,[rbp-0x50]
   14000312b:	mov    WORD PTR [rbx],ax
   14000312e:	lea    rcx,[rsp+0x38]
   140003133:	movups xmm0,XMMWORD PTR [rsp+0x38]
   140003138:	movdqu XMMWORD PTR [rbx+0x4],xmm0
   14000313d:	call   QWORD PTR [rip+0x431d]        # 0x140007460
   140003143:	mov    QWORD PTR [rdi],rbx
   140003146:	mov    rcx,QWORD PTR [rip+0x6ee3]        # 0x14000a030
   14000314d:	lea    rdx,[rip+0x6edc]        # 0x14000a030
   140003154:	cmp    rcx,rdx
   140003157:	je     0x140003178
   140003159:	cmp    BYTE PTR [rcx+0x19],0x4
   14000315d:	jb     0x140003178
   14000315f:	mov    rcx,QWORD PTR [rcx+0x10]
   140003163:	lea    r9,[rbp-0x50]
   140003167:	mov    edx,0x37
   14000316c:	lea    r8,[rip+0x4a65]        # 0x140007bd8
   140003173:	call   0x1400010c8
   140003178:	xor    eax,eax
   14000317a:	mov    rcx,QWORD PTR [rbp+0x40]
   14000317e:	xor    rcx,rsp
   140003181:	call   0x1400056a0
   140003186:	mov    rbx,QWORD PTR [rsp+0x170]
   14000318e:	add    rsp,0x150
   140003195:	pop    rdi
   140003196:	pop    rsi
   140003197:	pop    rbp
   140003198:	ret    
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	mov    r11,rsp
   1400031a3:	mov    QWORD PTR [r11+0x18],rbx
   1400031a7:	mov    QWORD PTR [r11+0x20],rbp
   1400031ab:	mov    QWORD PTR [r11+0x8],rcx
   1400031af:	push   rsi
   1400031b0:	push   rdi
   1400031b1:	push   r12
   1400031b3:	push   r14
   1400031b5:	push   r15
   1400031b7:	sub    rsp,0x30
   1400031bb:	mov    eax,edx
   1400031bd:	lea    r9,[rip+0x49dc]        # 0x140007ba0
   1400031c4:	xor    r12d,r12d
   1400031c7:	lea    rcx,[rip+0x49c2]        # 0x140007b90
   1400031ce:	neg    eax
   1400031d0:	mov    QWORD PTR [r11+0x8],r12
   1400031d4:	mov    r14d,edx
   1400031d7:	mov    WORD PTR [r11+0x10],r12w
   1400031dc:	sbb    r15w,r15w
   1400031e0:	lea    rax,[r11+0x8]
   1400031e4:	mov    esi,0x1f
   1400031e9:	mov    QWORD PTR [r11-0x38],rax
   1400031ed:	xor    edx,edx
   1400031ef:	lea    r8d,[rsi-0x1e]
   1400031f3:	call   QWORD PTR [rip+0x3ee7]        # 0x1400070e0
   1400031f9:	mov    r9d,eax
   1400031fc:	test   eax,eax
   1400031fe:	je     0x140003239
   140003200:	mov    rcx,QWORD PTR [rip+0x6e29]        # 0x14000a030
   140003207:	lea    rax,[rip+0x6e22]        # 0x14000a030
   14000320e:	cmp    rcx,rax
   140003211:	je     0x1400033b2
   140003217:	cmp    BYTE PTR [rcx+0x19],0x2
   14000321b:	jb     0x1400033b2
   140003221:	mov    rcx,QWORD PTR [rcx+0x10]
   140003225:	lea    edx,[rsi+0x19]
   140003228:	lea    r8,[rip+0x49a9]        # 0x140007bd8
   14000322f:	call   0x14000108c
   140003234:	jmp    0x1400033b2
   140003239:	lea    rcx,[rip+0x4908]        # 0x140007b48
   140003240:	call   QWORD PTR [rip+0x3dc2]        # 0x140007008
   140003246:	mov    rbp,rax
   140003249:	test   rax,rax
   14000324c:	jne    0x14000328a
   14000324e:	lea    esi,[rax+0xe]
   140003251:	mov    rcx,QWORD PTR [rip+0x6dd8]        # 0x14000a030
   140003258:	lea    rax,[rip+0x6dd1]        # 0x14000a030
   14000325f:	cmp    rcx,rax
   140003262:	je     0x1400033b2
   140003268:	cmp    BYTE PTR [rcx+0x19],0x2
   14000326c:	jb     0x1400033b2
   140003272:	mov    rcx,QWORD PTR [rcx+0x10]
   140003276:	lea    edx,[rbp+0x39]
   140003279:	lea    r8,[rip+0x4958]        # 0x140007bd8
   140003280:	call   0x140001068
   140003285:	jmp    0x1400033b2
   14000328a:	mov    rdi,QWORD PTR [rsp+0x60]
   14000328f:	mov    rax,QWORD PTR [rdi]
   140003292:	mov    rbx,QWORD PTR [rax+0xa8]
   140003299:	mov    rcx,rbx
   14000329c:	call   QWORD PTR [rip+0x41de]        # 0x140007480
   1400032a2:	lea    r9,[rsp+0x68]
   1400032a7:	mov    r8,rbp
   1400032aa:	mov    edx,0x7fffffff
   1400032af:	mov    rcx,rdi
   1400032b2:	call   rbx
   1400032b4:	mov    r9d,eax
   1400032b7:	test   eax,eax
   1400032b9:	je     0x1400032e6
   1400032bb:	mov    rcx,QWORD PTR [rip+0x6d6e]        # 0x14000a030
   1400032c2:	lea    rax,[rip+0x6d67]        # 0x14000a030
   1400032c9:	cmp    rcx,rax
   1400032cc:	je     0x1400033a9
   1400032d2:	cmp    BYTE PTR [rcx+0x19],0x2
   1400032d6:	jb     0x1400033a9
   1400032dc:	mov    edx,0x3a
   1400032e1:	jmp    0x14000336a
   1400032e6:	cmp    WORD PTR [rsp+0x68],r15w
   1400032ec:	jne    0x14000331c
   1400032ee:	mov    esi,r12d
   1400032f1:	mov    rcx,QWORD PTR [rip+0x6d38]        # 0x14000a030
   1400032f8:	lea    rax,[rip+0x6d31]        # 0x14000a030
   1400032ff:	cmp    rcx,rax
   140003302:	je     0x1400033a9
   140003308:	cmp    BYTE PTR [rcx+0x19],0x4
   14000330c:	jb     0x1400033a9
   140003312:	mov    edx,0x3b
   140003317:	jmp    0x14000339d
   14000331c:	mov    rdi,QWORD PTR [rsp+0x60]
   140003321:	mov    rax,QWORD PTR [rdi]
   140003324:	mov    rbx,QWORD PTR [rax+0xa0]
   14000332b:	mov    rcx,rbx
   14000332e:	call   QWORD PTR [rip+0x414c]        # 0x140007480
   140003334:	movzx  r9d,r15w
   140003338:	mov    r8,rbp
   14000333b:	mov    edx,0x7fffffff
   140003340:	mov    rcx,rdi
   140003343:	call   rbx
   140003345:	mov    r9d,eax
   140003348:	test   eax,eax
   14000334a:	je     0x14000337c
   14000334c:	mov    rcx,QWORD PTR [rip+0x6cdd]        # 0x14000a030
   140003353:	lea    rax,[rip+0x6cd6]        # 0x14000a030
   14000335a:	cmp    rcx,rax
   14000335d:	je     0x1400033a9
   14000335f:	cmp    BYTE PTR [rcx+0x19],0x2
   140003363:	jb     0x1400033a9
   140003365:	mov    edx,0x3c
   14000336a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000336e:	lea    r8,[rip+0x4863]        # 0x140007bd8
   140003375:	call   0x14000108c
   14000337a:	jmp    0x1400033a9
   14000337c:	mov    esi,r12d
   14000337f:	mov    rcx,QWORD PTR [rip+0x6caa]        # 0x14000a030
   140003386:	lea    rax,[rip+0x6ca3]        # 0x14000a030
   14000338d:	cmp    rcx,rax
   140003390:	je     0x1400033a9
   140003392:	cmp    BYTE PTR [rcx+0x19],0x4
   140003396:	jb     0x1400033a9
   140003398:	mov    edx,0x3d
   14000339d:	mov    rcx,QWORD PTR [rcx+0x10]
   1400033a1:	mov    r9d,r14d
   1400033a4:	call   0x140001a38
   1400033a9:	mov    rcx,rbp
   1400033ac:	call   QWORD PTR [rip+0x3c4e]        # 0x140007000
   1400033b2:	mov    rdi,QWORD PTR [rsp+0x60]
   1400033b7:	test   rdi,rdi
   1400033ba:	je     0x1400033d1
   1400033bc:	mov    rdx,QWORD PTR [rdi]
   1400033bf:	mov    rbx,QWORD PTR [rdx+0x10]
   1400033c3:	mov    rcx,rbx
   1400033c6:	call   QWORD PTR [rip+0x40b4]        # 0x140007480
   1400033cc:	mov    rcx,rdi
   1400033cf:	call   rbx
   1400033d1:	mov    rbx,QWORD PTR [rsp+0x70]
   1400033d6:	mov    eax,esi
   1400033d8:	mov    rbp,QWORD PTR [rsp+0x78]
   1400033dd:	add    rsp,0x30
   1400033e1:	pop    r15
   1400033e3:	pop    r14
   1400033e5:	pop    r12
   1400033e7:	pop    rdi
   1400033e8:	pop    rsi
   1400033e9:	ret    
   1400033ea:	int3   
   1400033eb:	int3   
   1400033ec:	int3   
   1400033ed:	int3   
   1400033ee:	int3   
   1400033ef:	int3   
   1400033f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400033f5:	mov    QWORD PTR [rsp+0x18],rsi
   1400033fa:	push   rdi
   1400033fb:	sub    rsp,0x40
   1400033ff:	and    QWORD PTR [rcx+0x80],0x0
   140003407:	mov    rsi,rcx
   14000340a:	mov    rcx,QWORD PTR gs:0x60
   140003413:	mov    edi,0x50
   140003418:	mov    r8d,edi
   14000341b:	mov    rcx,QWORD PTR [rcx+0x30]
   14000341f:	lea    edx,[rdi-0x48]
   140003422:	call   QWORD PTR [rip+0x4010]        # 0x140007438
   140003428:	mov    rbx,rax
   14000342b:	test   rax,rax
   14000342e:	jne    0x140003437
   140003430:	mov    edi,0xc0000017
   140003435:	jmp    0x1400034af
   140003437:	mov    r8,rdi
   14000343a:	xor    edx,edx
   14000343c:	mov    rcx,rax
   14000343f:	call   0x140005efe
   140003444:	xor    eax,eax
   140003446:	mov    DWORD PTR [rbx],0x41636450
   14000344c:	lea    rcx,[rbx+0x8]
   140003450:	mov    DWORD PTR [rbx+0x18],0x2a
   140003457:	mov    QWORD PTR [rcx],rax
   14000345a:	mov    QWORD PTR [rcx+0x8],rax
   14000345e:	mov    QWORD PTR [rsp+0x50],rax
   140003463:	call   QWORD PTR [rip+0x3d47]        # 0x1400071b0
   140003469:	lea    rax,[rbx+0x20]
   14000346d:	mov    r8,rbx
   140003470:	lea    r9,[rsp+0x50]
   140003475:	mov    QWORD PTR [rsp+0x30],rax
   14000347a:	call   0x140004af8
   14000347f:	mov    edi,eax
   140003481:	test   eax,eax
   140003483:	jne    0x14000348e
   140003485:	mov    QWORD PTR [rsi+0x80],rbx
   14000348c:	xor    ebx,ebx
   14000348e:	test   rbx,rbx
   140003491:	je     0x1400034ab
   140003493:	mov    rcx,QWORD PTR gs:0x60
   14000349c:	mov    r8,rbx
   14000349f:	xor    edx,edx
   1400034a1:	mov    rcx,QWORD PTR [rcx+0x30]
   1400034a5:	call   QWORD PTR [rip+0x3f95]        # 0x140007440
   1400034ab:	test   edi,edi
   1400034ad:	je     0x1400034e4
   1400034af:	mov    rcx,QWORD PTR [rip+0x6b7a]        # 0x14000a030
   1400034b6:	lea    rax,[rip+0x6b73]        # 0x14000a030
   1400034bd:	cmp    rcx,rax
   1400034c0:	je     0x1400034e0
   1400034c2:	cmp    BYTE PTR [rcx+0x19],0x2
   1400034c6:	jb     0x1400034e0
   1400034c8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400034cc:	lea    r8,[rip+0x4705]        # 0x140007bd8
   1400034d3:	mov    edx,0x3e
   1400034d8:	mov    r9d,edi
   1400034db:	call   0x14000108c
   1400034e0:	mov    eax,edi
   1400034e2:	jmp    0x14000353a
   1400034e4:	mov    rcx,QWORD PTR [rsi+0x80]
   1400034eb:	mov    r8b,0x1
   1400034ee:	call   0x1400049ac
   1400034f3:	mov    ebx,eax
   1400034f5:	test   eax,eax
   1400034f7:	je     0x14000352e
   1400034f9:	mov    rcx,QWORD PTR [rip+0x6b30]        # 0x14000a030
   140003500:	lea    rax,[rip+0x6b29]        # 0x14000a030
   140003507:	cmp    rcx,rax
   14000350a:	je     0x14000352a
   14000350c:	cmp    BYTE PTR [rcx+0x19],0x2
   140003510:	jb     0x14000352a
   140003512:	mov    rcx,QWORD PTR [rcx+0x10]
   140003516:	lea    r8,[rip+0x46bb]        # 0x140007bd8
   14000351d:	mov    edx,0x3f
   140003522:	mov    r9d,ebx
   140003525:	call   0x14000108c
   14000352a:	mov    eax,ebx
   14000352c:	jmp    0x14000353a
   14000352e:	mov    DWORD PTR [rsi+0x88],0x1
   140003538:	xor    eax,eax
   14000353a:	mov    rbx,QWORD PTR [rsp+0x58]
   14000353f:	mov    rsi,QWORD PTR [rsp+0x60]
   140003544:	add    rsp,0x40
   140003548:	pop    rdi
   140003549:	ret    
   14000354a:	int3   
   14000354b:	int3   
   14000354c:	int3   
   14000354d:	int3   
   14000354e:	int3   
   14000354f:	int3   
   140003550:	mov    QWORD PTR [rsp+0x8],rbx
   140003555:	push   rdi
   140003556:	sub    rsp,0x20
   14000355a:	mov    rax,QWORD PTR [rcx]
   14000355d:	mov    rdi,rcx
   140003560:	mov    rcx,QWORD PTR [rax]
   140003563:	mov    QWORD PTR [rax],rax
   140003566:	mov    rax,QWORD PTR [rdi]
   140003569:	mov    QWORD PTR [rax+0x8],rax
   14000356d:	and    QWORD PTR [rdi+0x8],0x0
   140003572:	cmp    rcx,QWORD PTR [rdi]
   140003575:	je     0x140003587
   140003577:	mov    rbx,QWORD PTR [rcx]
   14000357a:	call   0x140005244
   14000357f:	mov    rcx,rbx
   140003582:	cmp    rbx,QWORD PTR [rdi]
   140003585:	jne    0x140003577
   140003587:	mov    rcx,QWORD PTR [rdi]
   14000358a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000358f:	add    rsp,0x20
   140003593:	pop    rdi
   140003594:	jmp    0x140005244
   140003599:	int3   
   14000359a:	int3   
   14000359b:	int3   
   14000359c:	int3   
   14000359d:	int3   
   14000359e:	int3   
   14000359f:	int3   
   1400035a0:	mov    rcx,rdx
   1400035a3:	jmp    0x140005244
   1400035a8:	int3   
   1400035a9:	int3   
   1400035aa:	int3   
   1400035ab:	int3   
   1400035ac:	int3   
   1400035ad:	int3   
   1400035ae:	int3   
   1400035af:	int3   
   1400035b0:	mov    rax,rsp
   1400035b3:	mov    QWORD PTR [rax+0x8],rcx
   1400035b7:	push   rdi
   1400035b8:	sub    rsp,0x40
   1400035bc:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400035c4:	mov    QWORD PTR [rax+0x10],rbx
   1400035c8:	mov    QWORD PTR [rax+0x18],rsi
   1400035cc:	mov    rbx,r9
   1400035cf:	mov    rdi,r8
   1400035d2:	mov    rsi,rdx
   1400035d5:	mov    ecx,0x18
   1400035da:	call   0x1400051ac
   1400035df:	mov    QWORD PTR [rsp+0x50],rax
   1400035e4:	test   rax,rax
   1400035e7:	je     0x140003601
   1400035e9:	mov    QWORD PTR [rax],rsi
   1400035ec:	mov    QWORD PTR [rax+0x8],rdi
   1400035f0:	lea    rdx,[rax+0x10]
   1400035f4:	test   rdx,rdx
   1400035f7:	je     0x1400035ff
   1400035f9:	mov    rcx,QWORD PTR [rbx]
   1400035fc:	mov    QWORD PTR [rdx],rcx
   1400035ff:	jmp    0x14000361d
   140003601:	lea    rcx,[rsp+0x28]
   140003606:	call   0x140003838
   14000360b:	lea    rdx,[rip+0x5546]        # 0x140008b58
   140003612:	lea    rcx,[rsp+0x28]
   140003617:	call   0x140005856
   14000361c:	int3   
   14000361d:	mov    rbx,QWORD PTR [rsp+0x58]
   140003622:	mov    rsi,QWORD PTR [rsp+0x60]
   140003627:	add    rsp,0x40
   14000362b:	pop    rdi
   14000362c:	ret    
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	int3   
   140003631:	int3   
   140003632:	int3   
   140003633:	int3   
   140003634:	int3   
   140003635:	int3   
   140003636:	int3   
   140003637:	int3   
   140003638:	int3   
   140003639:	int3   
   14000363a:	int3   
   14000363b:	int3   
   14000363c:	int3   
   14000363d:	int3   
   14000363e:	int3   
   14000363f:	int3   
   140003640:	mov    QWORD PTR [rcx+0x128],rdx
   140003647:	ret    
   140003648:	int3   
   140003649:	int3   
   14000364a:	int3   
   14000364b:	int3   
   14000364c:	int3   
   14000364d:	int3   
   14000364e:	int3   
   14000364f:	int3   
   140003650:	sub    rsp,0x28
   140003654:	lea    rcx,[rip+0x4555]        # 0x140007bb0
   14000365b:	call   0x140005334
   140003660:	int3   
   140003661:	int3   
   140003662:	int3   
   140003663:	int3   
   140003664:	int3   
   140003665:	int3   
   140003666:	int3   
   140003667:	int3   
   140003668:	mov    QWORD PTR [rsp+0x8],rbx
   14000366d:	mov    QWORD PTR [rsp+0x10],rsi
   140003672:	push   rdi
   140003673:	sub    rsp,0x20
   140003677:	mov    rdi,r8
   14000367a:	mov    r9,rdx
   14000367d:	mov    r8,QWORD PTR [rcx+0x10]
   140003681:	mov    rbx,rcx
   140003684:	cmp    r8,rdx
   140003687:	jb     0x1400036fc
   140003689:	sub    r8,rdx
   14000368c:	cmp    r8,rdi
   14000368f:	cmovb  rdi,r8
   140003693:	xor    esi,esi
   140003695:	test   rdi,rdi
   140003698:	je     0x1400036e9
   14000369a:	cmp    QWORD PTR [rcx+0x18],0x8
   14000369f:	jb     0x1400036a6
   1400036a1:	mov    rdx,QWORD PTR [rcx]
   1400036a4:	jmp    0x1400036a9
   1400036a6:	mov    rdx,rcx
   1400036a9:	cmp    QWORD PTR [rcx+0x18],0x8
   1400036ae:	jb     0x1400036b3
   1400036b0:	mov    rcx,QWORD PTR [rcx]
   1400036b3:	sub    r8,rdi
   1400036b6:	lea    rax,[r9+rdi*1]
   1400036ba:	add    r8,r8
   1400036bd:	lea    rdx,[rdx+rax*2]
   1400036c1:	lea    rcx,[rcx+r9*2]
   1400036c5:	call   QWORD PTR [rip+0x3c95]        # 0x140007360
   1400036cb:	mov    rcx,QWORD PTR [rbx+0x10]
   1400036cf:	sub    rcx,rdi
   1400036d2:	cmp    QWORD PTR [rbx+0x18],0x8
   1400036d7:	mov    QWORD PTR [rbx+0x10],rcx
   1400036db:	jb     0x1400036e2
   1400036dd:	mov    rax,QWORD PTR [rbx]
   1400036e0:	jmp    0x1400036e5
   1400036e2:	mov    rax,rbx
   1400036e5:	mov    WORD PTR [rax+rcx*2],si
   1400036e9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400036ee:	mov    rax,rbx
   1400036f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036f6:	add    rsp,0x20
   1400036fa:	pop    rdi
   1400036fb:	ret    
   1400036fc:	call   0x140003650
   140003701:	int3   
   140003702:	int3   
   140003703:	int3   
   140003704:	int3   
   140003705:	int3   
   140003706:	int3   
   140003707:	int3   
   140003708:	mov    QWORD PTR [rsp+0x8],rbx
   14000370d:	mov    QWORD PTR [rsp+0x10],rbp
   140003712:	mov    QWORD PTR [rsp+0x18],rsi
   140003717:	push   rdi
   140003718:	push   r14
   14000371a:	push   r15
   14000371c:	sub    rsp,0x20
   140003720:	mov    rdi,QWORD PTR [rdx+0x10]
   140003724:	mov    rbp,r8
   140003727:	mov    rsi,rdx
   14000372a:	mov    rbx,rcx
   14000372d:	cmp    rdi,r8
   140003730:	jb     0x14000380c
   140003736:	sub    rdi,r8
   140003739:	cmp    r9,rdi
   14000373c:	cmovb  rdi,r9
   140003740:	cmp    rcx,rdx
   140003743:	jne    0x140003764
   140003745:	lea    rdx,[rdi+r8*1]
   140003749:	or     r8,0xffffffffffffffff
   14000374d:	call   0x140003668
   140003752:	mov    r8,rbp
   140003755:	xor    edx,edx
   140003757:	mov    rcx,rbx
   14000375a:	call   0x140003668
   14000375f:	jmp    0x1400037f0
   140003764:	movabs rax,0x7ffffffffffffffe
   14000376e:	cmp    rdi,rax
   140003771:	ja     0x140003812
   140003777:	xor    r15d,r15d
   14000377a:	cmp    QWORD PTR [rcx+0x18],rdi
   14000377e:	jae    0x14000378e
   140003780:	mov    r8,QWORD PTR [rcx+0x10]
   140003784:	mov    rdx,rdi
   140003787:	call   0x1400038f8
   14000378c:	jmp    0x1400037aa
   14000378e:	test   rdi,rdi
   140003791:	jne    0x1400037af
   140003793:	cmp    QWORD PTR [rcx+0x18],0x8
   140003798:	mov    QWORD PTR [rcx+0x10],r15
   14000379c:	jb     0x1400037a3
   14000379e:	mov    rax,QWORD PTR [rcx]
   1400037a1:	jmp    0x1400037a6
   1400037a3:	mov    rax,rcx
   1400037a6:	mov    WORD PTR [rax],r15w
   1400037aa:	test   rdi,rdi
   1400037ad:	je     0x1400037f0
   1400037af:	cmp    QWORD PTR [rsi+0x18],0x8
   1400037b4:	jb     0x1400037b9
   1400037b6:	mov    rsi,QWORD PTR [rsi]
   1400037b9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400037be:	jb     0x1400037c5
   1400037c0:	mov    rcx,QWORD PTR [rbx]
   1400037c3:	jmp    0x1400037c8
   1400037c5:	mov    rcx,rbx
   1400037c8:	lea    r14,[rdi+rdi*1]
   1400037cc:	mov    r8,r14
   1400037cf:	lea    rdx,[rsi+rbp*2]
   1400037d3:	call   0x140005ef2
   1400037d8:	cmp    QWORD PTR [rbx+0x18],0x8
   1400037dd:	mov    QWORD PTR [rbx+0x10],rdi
   1400037e1:	jb     0x1400037e8
   1400037e3:	mov    rax,QWORD PTR [rbx]
   1400037e6:	jmp    0x1400037eb
   1400037e8:	mov    rax,rbx
   1400037eb:	mov    WORD PTR [r14+rax*1],r15w
   1400037f0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400037f5:	mov    rax,rbx
   1400037f8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400037fd:	mov    rsi,QWORD PTR [rsp+0x50]
   140003802:	add    rsp,0x20
   140003806:	pop    r15
   140003808:	pop    r14
   14000380a:	pop    rdi
   14000380b:	ret    
   14000380c:	call   0x140003650
   140003811:	int3   
   140003812:	call   0x140003820
   140003817:	int3   
   140003818:	int3   
   140003819:	int3   
   14000381a:	int3   
   14000381b:	int3   
   14000381c:	int3   
   14000381d:	int3   
   14000381e:	int3   
   14000381f:	int3   
   140003820:	sub    rsp,0x28
   140003824:	lea    rcx,[rip+0x439d]        # 0x140007bc8
   14000382b:	call   0x140005308
   140003830:	int3   
   140003831:	int3   
   140003832:	int3   
   140003833:	int3   
   140003834:	int3   
   140003835:	int3   
   140003836:	int3   
   140003837:	int3   
   140003838:	rex push rbx
   14000383a:	sub    rsp,0x30
   14000383e:	and    QWORD PTR [rsp+0x20],0x0
   140003844:	lea    rdx,[rsp+0x20]
   140003849:	mov    rbx,rcx
   14000384c:	call   QWORD PTR [rip+0x3b26]        # 0x140007378
   140003852:	lea    rax,[rip+0x3e37]        # 0x140007690
   140003859:	mov    QWORD PTR [rbx],rax
   14000385c:	mov    rax,rbx
   14000385f:	add    rsp,0x30
   140003863:	pop    rbx
   140003864:	ret    
   140003865:	int3   
   140003866:	int3   
   140003867:	int3   
   140003868:	int3   
   140003869:	int3   
   14000386a:	int3   
   14000386b:	int3   
   14000386c:	lea    rax,[rip+0x3e1d]        # 0x140007690
   140003873:	mov    QWORD PTR [rcx],rax
   140003876:	rex.W jmp QWORD PTR [rip+0x3b03]        # 0x140007380
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	int3   
   140003881:	int3   
   140003882:	int3   
   140003883:	int3   
   140003884:	int3   
   140003885:	int3   
   140003886:	int3   
   140003887:	int3   
   140003888:	int3   
   140003889:	int3   
   14000388a:	int3   
   14000388b:	int3   
   14000388c:	int3   
   14000388d:	int3   
   14000388e:	int3   
   14000388f:	int3   
   140003890:	mov    QWORD PTR [rsp+0x8],rbx
   140003895:	push   rdi
   140003896:	sub    rsp,0x20
   14000389a:	lea    rax,[rip+0x3def]        # 0x140007690
   1400038a1:	mov    ebx,edx
   1400038a3:	mov    QWORD PTR [rcx],rax
   1400038a6:	mov    rdi,rcx
   1400038a9:	call   QWORD PTR [rip+0x3ad1]        # 0x140007380
   1400038af:	test   bl,0x1
   1400038b2:	je     0x1400038bc
   1400038b4:	mov    rcx,rdi
   1400038b7:	call   0x140005244
   1400038bc:	mov    rax,rdi
   1400038bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038c4:	add    rsp,0x20
   1400038c8:	pop    rdi
   1400038c9:	ret    
   1400038ca:	int3   
   1400038cb:	int3   
   1400038cc:	int3   
   1400038cd:	int3   
   1400038ce:	int3   
   1400038cf:	int3   
   1400038d0:	rex push rbx
   1400038d2:	sub    rsp,0x20
   1400038d6:	mov    rbx,rcx
   1400038d9:	call   QWORD PTR [rip+0x3ab1]        # 0x140007390
   1400038df:	lea    rax,[rip+0x3daa]        # 0x140007690
   1400038e6:	mov    QWORD PTR [rbx],rax
   1400038e9:	mov    rax,rbx
   1400038ec:	add    rsp,0x20
   1400038f0:	pop    rbx
   1400038f1:	ret    
   1400038f2:	int3   
   1400038f3:	int3   
   1400038f4:	int3   
   1400038f5:	int3   
   1400038f6:	int3   
   1400038f7:	int3   
   1400038f8:	mov    rax,rsp
   1400038fb:	mov    QWORD PTR [rax+0x18],r8
   1400038ff:	mov    QWORD PTR [rax+0x10],rdx
   140003903:	mov    QWORD PTR [rax+0x8],rcx
   140003907:	push   rbx
   140003908:	push   rsi
   140003909:	push   rdi
   14000390a:	push   r14
   14000390c:	push   r15
   14000390e:	sub    rsp,0x60
   140003912:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   14000391a:	mov    r15,r8
   14000391d:	mov    rbx,rcx
   140003920:	mov    rdi,rdx
   140003923:	or     rdi,0x7
   140003927:	movabs r9,0x7ffffffffffffffe
   140003931:	cmp    rdi,r9
   140003934:	jbe    0x14000393b
   140003936:	mov    rdi,rdx
   140003939:	jmp    0x14000396c
   14000393b:	mov    r8,QWORD PTR [rcx+0x18]
   14000393f:	mov    rcx,r8
   140003942:	shr    rcx,1
   140003945:	movabs rax,0xaaaaaaaaaaaaaaab
   14000394f:	mul    rdi
   140003952:	shr    rdx,1
   140003955:	cmp    rcx,rdx
   140003958:	jbe    0x14000396c
   14000395a:	mov    rax,r9
   14000395d:	sub    rax,rcx
   140003960:	cmp    r8,rax
   140003963:	lea    rdi,[rcx+r8*1]
   140003967:	jbe    0x14000396c
   140003969:	mov    rdi,r9
   14000396c:	lea    rcx,[rdi+0x1]
   140003970:	xor    esi,esi
   140003972:	mov    r14d,esi
   140003975:	test   rcx,rcx
   140003978:	je     0x1400039b5
   14000397a:	movabs rax,0x7fffffffffffffff
   140003984:	cmp    rcx,rax
   140003987:	ja     0x140003999
   140003989:	add    rcx,rcx
   14000398c:	call   0x1400051ac
   140003991:	mov    r14,rax
   140003994:	test   rax,rax
   140003997:	jne    0x1400039b5
   140003999:	lea    rcx,[rsp+0x28]
   14000399e:	call   0x140003838
   1400039a3:	lea    rdx,[rip+0x51ae]        # 0x140008b58
   1400039aa:	lea    rcx,[rsp+0x28]
   1400039af:	call   0x140005856
   1400039b4:	nop
   1400039b5:	jmp    0x1400039d9
   1400039b7:	xor    esi,esi
   1400039b9:	mov    rbx,QWORD PTR [rsp+0x90]
   1400039c1:	mov    r15,QWORD PTR [rsp+0xa0]
   1400039c9:	mov    rdi,QWORD PTR [rsp+0x98]
   1400039d1:	mov    r14,QWORD PTR [rsp+0xa8]
   1400039d9:	test   r15,r15
   1400039dc:	je     0x1400039f9
   1400039de:	cmp    QWORD PTR [rbx+0x18],0x8
   1400039e3:	jb     0x1400039ea
   1400039e5:	mov    rdx,QWORD PTR [rbx]
   1400039e8:	jmp    0x1400039ed
   1400039ea:	mov    rdx,rbx
   1400039ed:	lea    r8,[r15+r15*1]
   1400039f1:	mov    rcx,r14
   1400039f4:	call   0x140005ef2
   1400039f9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400039fe:	jb     0x140003a08
   140003a00:	mov    rcx,QWORD PTR [rbx]
   140003a03:	call   0x140005244
   140003a08:	mov    QWORD PTR [rbx],r14
   140003a0b:	mov    QWORD PTR [rbx+0x18],rdi
   140003a0f:	mov    QWORD PTR [rbx+0x10],r15
   140003a13:	cmp    rdi,0x8
   140003a17:	cmovae rbx,r14
   140003a1b:	mov    WORD PTR [rbx+r15*2],si
   140003a20:	add    rsp,0x60
   140003a24:	pop    r15
   140003a26:	pop    r14
   140003a28:	pop    rdi
   140003a29:	pop    rsi
   140003a2a:	pop    rbx
   140003a2b:	ret    
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	int3   
   140003a31:	int3   
   140003a32:	int3   
   140003a33:	int3   
   140003a34:	mov    rax,rsp
   140003a37:	mov    QWORD PTR [rax+0x8],rbx
   140003a3b:	mov    QWORD PTR [rax+0x10],rbp
   140003a3f:	mov    QWORD PTR [rax+0x18],rsi
   140003a43:	mov    QWORD PTR [rax+0x20],rdi
   140003a47:	push   r14
   140003a49:	sub    rsp,0x20
   140003a4d:	or     rdi,0xffffffffffffffff
   140003a51:	mov    rsi,rdx
   140003a54:	xor    ebp,ebp
   140003a56:	mov    rbx,rcx
   140003a59:	inc    rdi
   140003a5c:	cmp    WORD PTR [rdx+rdi*2],bp
   140003a60:	jne    0x140003a59
   140003a62:	test   rdx,rdx
   140003a65:	je     0x140003ac0
   140003a67:	cmp    QWORD PTR [rcx+0x18],0x8
   140003a6c:	jb     0x140003a73
   140003a6e:	mov    rax,QWORD PTR [rcx]
   140003a71:	jmp    0x140003a76
   140003a73:	mov    rax,rcx
   140003a76:	cmp    rdx,rax
   140003a79:	jb     0x140003ac0
   140003a7b:	cmp    QWORD PTR [rcx+0x18],0x8
   140003a80:	jb     0x140003a85
   140003a82:	mov    rcx,QWORD PTR [rcx]
   140003a85:	mov    rax,QWORD PTR [rbx+0x10]
   140003a89:	lea    rcx,[rcx+rax*2]
   140003a8d:	cmp    rcx,rdx
   140003a90:	jbe    0x140003ac0
   140003a92:	cmp    QWORD PTR [rbx+0x18],0x8
   140003a97:	jb     0x140003a9e
   140003a99:	mov    rax,QWORD PTR [rbx]
   140003a9c:	jmp    0x140003aa1
   140003a9e:	mov    rax,rbx
   140003aa1:	sub    rsi,rax
   140003aa4:	mov    r9,rdi
   140003aa7:	sar    rsi,1
   140003aaa:	mov    rdx,rbx
   140003aad:	mov    r8,rsi
   140003ab0:	mov    rcx,rbx
   140003ab3:	call   0x140003708
   140003ab8:	mov    rbx,rax
   140003abb:	jmp    0x140003b40
   140003ac0:	movabs rax,0x7ffffffffffffffe
   140003aca:	cmp    rdi,rax
   140003acd:	ja     0x140003b5e
   140003ad3:	cmp    QWORD PTR [rbx+0x18],rdi
   140003ad7:	jae    0x140003aea
   140003ad9:	mov    r8,QWORD PTR [rbx+0x10]
   140003add:	mov    rdx,rdi
   140003ae0:	mov    rcx,rbx
   140003ae3:	call   0x1400038f8
   140003ae8:	jmp    0x140003b05
   140003aea:	test   rdi,rdi
   140003aed:	jne    0x140003b0a
   140003aef:	cmp    QWORD PTR [rbx+0x18],0x8
   140003af4:	mov    QWORD PTR [rbx+0x10],rbp
   140003af8:	jb     0x140003aff
   140003afa:	mov    rax,QWORD PTR [rbx]
   140003afd:	jmp    0x140003b02
   140003aff:	mov    rax,rbx
   140003b02:	mov    WORD PTR [rax],bp
   140003b05:	test   rdi,rdi
   140003b08:	je     0x140003b40
   140003b0a:	cmp    QWORD PTR [rbx+0x18],0x8
   140003b0f:	jb     0x140003b16
   140003b11:	mov    rcx,QWORD PTR [rbx]
   140003b14:	jmp    0x140003b19
   140003b16:	mov    rcx,rbx
   140003b19:	lea    r14,[rdi+rdi*1]
   140003b1d:	mov    rdx,rsi
   140003b20:	mov    r8,r14
   140003b23:	call   0x140005ef2
   140003b28:	cmp    QWORD PTR [rbx+0x18],0x8
   140003b2d:	mov    QWORD PTR [rbx+0x10],rdi
   140003b31:	jb     0x140003b38
   140003b33:	mov    rax,QWORD PTR [rbx]
   140003b36:	jmp    0x140003b3b
   140003b38:	mov    rax,rbx
   140003b3b:	mov    WORD PTR [r14+rax*1],bp
   140003b40:	mov    rbp,QWORD PTR [rsp+0x38]
   140003b45:	mov    rax,rbx
   140003b48:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b4d:	mov    rsi,QWORD PTR [rsp+0x40]
   140003b52:	mov    rdi,QWORD PTR [rsp+0x48]
   140003b57:	add    rsp,0x20
   140003b5b:	pop    r14
   140003b5d:	ret    
   140003b5e:	call   0x140003820
   140003b63:	int3   
   140003b64:	int3   
   140003b65:	int3   
   140003b66:	int3   
   140003b67:	int3   
   140003b68:	int3   
   140003b69:	int3   
   140003b6a:	int3   
   140003b6b:	int3   
   140003b6c:	mov    QWORD PTR [rsp+0x8],rbx
   140003b71:	mov    QWORD PTR [rsp+0x10],rbp
   140003b76:	mov    QWORD PTR [rsp+0x18],rsi
   140003b7b:	push   rdi
   140003b7c:	sub    rsp,0x20
   140003b80:	xor    ebp,ebp
   140003b82:	mov    rdi,r8
   140003b85:	mov    rbx,rcx
   140003b88:	test   dl,dl
   140003b8a:	je     0x140003bae
   140003b8c:	cmp    QWORD PTR [rcx+0x18],0x8
   140003b91:	jb     0x140003bae
   140003b93:	mov    rsi,QWORD PTR [rcx]
   140003b96:	test   r8,r8
   140003b99:	je     0x140003ba6
   140003b9b:	add    r8,r8
   140003b9e:	mov    rdx,rsi
   140003ba1:	call   0x140005ef2
   140003ba6:	mov    rcx,rsi
   140003ba9:	call   0x140005244
   140003bae:	mov    rsi,QWORD PTR [rsp+0x40]
   140003bb3:	mov    QWORD PTR [rbx+0x18],0x7
   140003bbb:	mov    QWORD PTR [rbx+0x10],rdi
   140003bbf:	mov    WORD PTR [rbx+rdi*2],bp
   140003bc3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bc8:	mov    rbp,QWORD PTR [rsp+0x38]
   140003bcd:	add    rsp,0x20
   140003bd1:	pop    rdi
   140003bd2:	ret    
   140003bd3:	int3   
   140003bd4:	int3   
   140003bd5:	int3   
   140003bd6:	int3   
   140003bd7:	int3   
   140003bd8:	int3   
   140003bd9:	int3   
   140003bda:	int3   
   140003bdb:	int3   
   140003bdc:	mov    rax,rsp
   140003bdf:	push   rdi
   140003be0:	sub    rsp,0x200
   140003be7:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003bf0:	mov    QWORD PTR [rax+0x8],rbx
   140003bf4:	mov    QWORD PTR [rax+0x18],rsi
   140003bf8:	mov    rax,QWORD PTR [rip+0x6419]        # 0x14000a018
   140003bff:	xor    rax,rsp
   140003c02:	mov    QWORD PTR [rsp+0x1f0],rax
   140003c0a:	mov    rbx,rdx
   140003c0d:	mov    rdi,QWORD PTR [rip+0x6acc]        # 0x14000a6e0
   140003c14:	and    QWORD PTR [rsp+0x30],0x0
   140003c1a:	xor    edx,edx
   140003c1c:	mov    r8d,0x1b8
   140003c22:	lea    rcx,[rsp+0x38]
   140003c27:	call   0x140005efe
   140003c2c:	lea    rsi,[rip+0x63fd]        # 0x14000a030
   140003c33:	mov    rcx,QWORD PTR [rip+0x63f6]        # 0x14000a030
   140003c3a:	cmp    rcx,rsi
   140003c3d:	je     0x140003c5e
   140003c3f:	cmp    BYTE PTR [rcx+0x19],0x4
   140003c43:	jb     0x140003c5e
   140003c45:	mov    edx,0xa
   140003c4a:	mov    r9,rbx
   140003c4d:	lea    r8,[rip+0x3fd4]        # 0x140007c28
   140003c54:	mov    rcx,QWORD PTR [rcx+0x10]
   140003c58:	call   0x1400010c8
   140003c5d:	nop
   140003c5e:	lea    rcx,[rdi+0x40]
   140003c62:	mov    rdx,rbx
   140003c65:	call   0x140003a34
   140003c6a:	nop
   140003c6b:	mov    QWORD PTR [rsp+0x38],rbx
   140003c70:	mov    DWORD PTR [rsp+0x4c],0x10000100
   140003c78:	lea    rax,[rip+0x251]        # 0x140003ed0
   140003c7f:	mov    QWORD PTR [rsp+0x1d8],rax
   140003c87:	mov    QWORD PTR [rsp+0x1e8],rdi
   140003c8f:	and    QWORD PTR [rsp+0x1c0],0x0
   140003c98:	lea    rcx,[rsp+0x30]
   140003c9d:	call   QWORD PTR [rip+0x35bd]        # 0x140007260
   140003ca3:	lea    rcx,[rdi+0x30]
   140003ca7:	mov    QWORD PTR [rcx],rax
   140003caa:	cmp    rax,0xffffffffffffffff
   140003cae:	jne    0x140003ce6
   140003cb0:	call   QWORD PTR [rip+0x344a]        # 0x140007100
   140003cb6:	mov    ebx,eax
   140003cb8:	mov    rcx,QWORD PTR [rip+0x6371]        # 0x14000a030
   140003cbf:	cmp    rcx,rsi
   140003cc2:	je     0x140003ce2
   140003cc4:	cmp    BYTE PTR [rcx+0x19],0x2
   140003cc8:	jb     0x140003ce2
   140003cca:	mov    edx,0xb
   140003ccf:	mov    r9d,eax
   140003cd2:	lea    r8,[rip+0x3f4f]        # 0x140007c28
   140003cd9:	mov    rcx,QWORD PTR [rcx+0x10]
   140003cdd:	call   0x14000108c
   140003ce2:	mov    eax,ebx
   140003ce4:	jmp    0x140003d3c
   140003ce6:	xor    r9d,r9d
   140003ce9:	xor    r8d,r8d
   140003cec:	lea    edx,[r9+0x1]
   140003cf0:	call   QWORD PTR [rip+0x3572]        # 0x140007268
   140003cf6:	mov    ebx,eax
   140003cf8:	test   eax,eax
   140003cfa:	je     0x140003d2d
   140003cfc:	cmp    eax,0x4c7
   140003d01:	je     0x140003d2d
   140003d03:	mov    rcx,QWORD PTR [rip+0x6326]        # 0x14000a030
   140003d0a:	cmp    rcx,rsi
   140003d0d:	je     0x140003d2d
   140003d0f:	cmp    BYTE PTR [rcx+0x19],0x2
   140003d13:	jb     0x140003d2d
   140003d15:	mov    edx,0xc
   140003d1a:	mov    r9d,eax
   140003d1d:	lea    r8,[rip+0x3f04]        # 0x140007c28
   140003d24:	mov    rcx,QWORD PTR [rcx+0x10]
   140003d28:	call   0x14000108c
   140003d2d:	mov    rcx,rdi
   140003d30:	call   0x140003d68
   140003d35:	jmp    0x140003ce2
   140003d37:	mov    eax,0xe
   140003d3c:	mov    rcx,QWORD PTR [rsp+0x1f0]
   140003d44:	xor    rcx,rsp
   140003d47:	call   0x1400056a0
   140003d4c:	lea    r11,[rsp+0x200]
   140003d54:	mov    rbx,QWORD PTR [r11+0x10]
   140003d58:	mov    rsi,QWORD PTR [r11+0x20]
   140003d5c:	mov    rsp,r11
   140003d5f:	pop    rdi
   140003d60:	ret    
   140003d61:	int3   
   140003d62:	int3   
   140003d63:	int3   
   140003d64:	int3   
   140003d65:	int3   
   140003d66:	int3   
   140003d67:	int3   
   140003d68:	mov    QWORD PTR [rsp+0x10],rbx
   140003d6d:	mov    QWORD PTR [rsp+0x18],rbp
   140003d72:	mov    QWORD PTR [rsp+0x20],rsi
   140003d77:	push   rdi
   140003d78:	sub    rsp,0xb0
   140003d7f:	mov    rax,QWORD PTR [rip+0x6292]        # 0x14000a018
   140003d86:	xor    rax,rsp
   140003d89:	mov    QWORD PTR [rsp+0xa0],rax
   140003d91:	mov    rdi,rcx
   140003d94:	xor    ebx,ebx
   140003d96:	xor    edx,edx
   140003d98:	lea    rcx,[rsp+0x24]
   140003d9d:	lea    r8d,[rbx+0x74]
   140003da1:	call   0x140005efe
   140003da6:	lea    rcx,[rdi+0x8]
   140003daa:	mov    DWORD PTR [rsp+0x20],0x78
   140003db2:	mov    DWORD PTR [rsp+0x4c],0x20000
   140003dba:	call   QWORD PTR [rip+0x3410]        # 0x1400071d0
   140003dc0:	cmp    QWORD PTR [rdi+0x30],0xffffffffffffffff
   140003dc5:	je     0x140003e93
   140003dcb:	mov    rcx,QWORD PTR [rip+0x625e]        # 0x14000a030
   140003dd2:	lea    rbp,[rip+0x6257]        # 0x14000a030
   140003dd9:	cmp    rcx,rbp
   140003ddc:	je     0x140003df7
   140003dde:	cmp    BYTE PTR [rcx+0x19],0x4
   140003de2:	jb     0x140003df7
   140003de4:	mov    rcx,QWORD PTR [rcx+0x10]
   140003de8:	lea    edx,[rbx+0xd]
   140003deb:	lea    r8,[rip+0x3e36]        # 0x140007c28
   140003df2:	call   0x140001068
   140003df7:	mov    rcx,QWORD PTR [rdi+0x30]
   140003dfb:	call   QWORD PTR [rip+0x346f]        # 0x140007270
   140003e01:	test   eax,eax
   140003e03:	je     0x140003e36
   140003e05:	cmp    eax,0x1b5f
   140003e0a:	je     0x140003e36
   140003e0c:	mov    rcx,QWORD PTR [rip+0x621d]        # 0x14000a030
   140003e13:	cmp    rcx,rbp
   140003e16:	je     0x140003e36
   140003e18:	cmp    BYTE PTR [rcx+0x19],0x2
   140003e1c:	jb     0x140003e36
   140003e1e:	mov    rcx,QWORD PTR [rcx+0x10]
   140003e22:	lea    r8,[rip+0x3dff]        # 0x140007c28
   140003e29:	mov    edx,0xe
   140003e2e:	mov    r9d,eax
   140003e31:	call   0x14000108c
   140003e36:	or     QWORD PTR [rdi+0x30],0xffffffffffffffff
   140003e3b:	lea    rdx,[rdi+0x40]
   140003e3f:	cmp    QWORD PTR [rdx+0x18],0x8
   140003e44:	jb     0x140003e49
   140003e46:	mov    rdx,QWORD PTR [rdx]
   140003e49:	mov    r9d,0x1
   140003e4f:	lea    r8,[rsp+0x20]
   140003e54:	xor    ecx,ecx
   140003e56:	call   QWORD PTR [rip+0x3434]        # 0x140007290
   140003e5c:	mov    ebx,eax
   140003e5e:	test   eax,eax
   140003e60:	je     0x140003e93
   140003e62:	cmp    eax,0xea
   140003e67:	je     0x140003e93
   140003e69:	mov    rcx,QWORD PTR [rip+0x61c0]        # 0x14000a030
   140003e70:	cmp    rcx,rbp
   140003e73:	je     0x140003e93
   140003e75:	cmp    BYTE PTR [rcx+0x19],0x2
   140003e79:	jb     0x140003e93
   140003e7b:	mov    rcx,QWORD PTR [rcx+0x10]
   140003e7f:	lea    r8,[rip+0x3da2]        # 0x140007c28
   140003e86:	mov    edx,0xf
   140003e8b:	mov    r9d,eax
   140003e8e:	call   0x14000108c
   140003e93:	lea    rcx,[rdi+0x8]
   140003e97:	call   QWORD PTR [rip+0x333b]        # 0x1400071d8
   140003e9d:	mov    eax,ebx
   140003e9f:	mov    rcx,QWORD PTR [rsp+0xa0]
   140003ea7:	xor    rcx,rsp
   140003eaa:	call   0x1400056a0
   140003eaf:	lea    r11,[rsp+0xb0]
   140003eb7:	mov    rbx,QWORD PTR [r11+0x18]
   140003ebb:	mov    rbp,QWORD PTR [r11+0x20]
   140003ebf:	mov    rsi,QWORD PTR [r11+0x28]
   140003ec3:	mov    rsp,r11
   140003ec6:	pop    rdi
   140003ec7:	ret    
   140003ec8:	int3   
   140003ec9:	int3   
   140003eca:	int3   
   140003ecb:	int3   
   140003ecc:	int3   
   140003ecd:	int3   
   140003ece:	int3   
   140003ecf:	int3   
   140003ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ed5:	mov    QWORD PTR [rsp+0x10],rsi
   140003eda:	push   rdi
   140003edb:	sub    rsp,0x20
   140003edf:	mov    rax,QWORD PTR [rcx+0x68]
   140003ee3:	mov    rsi,rcx
   140003ee6:	mov    rdi,QWORD PTR [rax+0x38]
   140003eea:	test   rdi,rdi
   140003eed:	je     0x140003f41
   140003eef:	mov    rax,QWORD PTR [rdi]
   140003ef2:	mov    rbx,QWORD PTR [rax+0x8]
   140003ef6:	mov    rcx,rbx
   140003ef9:	call   QWORD PTR [rip+0x3581]        # 0x140007480
   140003eff:	mov    rdx,rsi
   140003f02:	mov    rcx,rdi
   140003f05:	call   rbx
   140003f07:	test   eax,eax
   140003f09:	je     0x140003f41
   140003f0b:	cmp    eax,0x15
   140003f0e:	je     0x140003f41
   140003f10:	mov    rcx,QWORD PTR [rip+0x6119]        # 0x14000a030
   140003f17:	lea    rdx,[rip+0x6112]        # 0x14000a030
   140003f1e:	cmp    rcx,rdx
   140003f21:	je     0x140003f41
   140003f23:	cmp    BYTE PTR [rcx+0x19],0x2
   140003f27:	jb     0x140003f41
   140003f29:	mov    rcx,QWORD PTR [rcx+0x10]
   140003f2d:	lea    r8,[rip+0x3cf4]        # 0x140007c28
   140003f34:	mov    edx,0x10
   140003f39:	mov    r9d,eax
   140003f3c:	call   0x14000108c
   140003f41:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f46:	mov    rsi,QWORD PTR [rsp+0x38]
   140003f4b:	add    rsp,0x20
   140003f4f:	pop    rdi
   140003f50:	ret    
   140003f51:	int3   
   140003f52:	int3   
   140003f53:	int3   
   140003f54:	int3   
   140003f55:	int3   
   140003f56:	int3   
   140003f57:	int3   
   140003f58:	mov    rax,rsp
   140003f5b:	mov    QWORD PTR [rax+0x10],rdx
   140003f5f:	push   rbx
   140003f60:	push   rbp
   140003f61:	push   rsi
   140003f62:	push   rdi
   140003f63:	push   r12
   140003f65:	push   r13
   140003f67:	push   r14
   140003f69:	push   r15
   140003f6b:	sub    rsp,0x38
   140003f6f:	xor    r14d,r14d
   140003f72:	mov    WORD PTR [rax+0x8],0xb0a
   140003f78:	mov    WORD PTR [rax+0x18],0xe0d
   140003f7e:	mov    r12,rcx
   140003f81:	lea    ebp,[r14+0x2]
   140003f85:	cmp    WORD PTR [rcx],bp
   140003f88:	sete   r14b
   140003f8c:	mov    eax,r14d
   140003f8f:	neg    eax
   140003f91:	sbb    si,si
   140003f94:	and    si,0xfff4
   140003f99:	add    si,0x10
   140003f9d:	lea    edi,[rsi+0x4]
   140003fa0:	movzx  r15d,di
   140003fa4:	add    r15w,r15w
   140003fa8:	movzx  ecx,r15w
   140003fac:	mov    WORD PTR [rsp+0x98],r15w
   140003fb5:	call   QWORD PTR [rip+0x33ed]        # 0x1400073a8
   140003fbb:	mov    r13,rax
   140003fbe:	test   rax,rax
   140003fc1:	jne    0x140003ff9
   140003fc3:	mov    rcx,QWORD PTR [rip+0x6066]        # 0x14000a030
   140003fca:	lea    rdx,[rip+0x605f]        # 0x14000a030
   140003fd1:	cmp    rcx,rdx
   140003fd4:	je     0x140003fef
   140003fd6:	cmp    BYTE PTR [rcx+0x19],bpl
   140003fda:	jb     0x140003fef
   140003fdc:	mov    rcx,QWORD PTR [rcx+0x10]
   140003fe0:	lea    edx,[rbp+0xf]
   140003fe3:	lea    r8,[rip+0x3c3e]        # 0x140007c28
   140003fea:	call   0x140001068
   140003fef:	mov    eax,0xe
   140003ff4:	jmp    0x14000407e
   140003ff9:	movzx  r8d,r15w
   140003ffd:	xor    edx,edx
   140003fff:	mov    rcx,rax
   140004002:	call   0x140005efe
   140004007:	movzx  eax,di
   14000400a:	lea    rdi,[r13+0x2]
   14000400e:	movsxd rbx,r14d
   140004011:	xor    r14d,r14d
   140004014:	mov    QWORD PTR [rsp+0x20],rax
   140004019:	movzx  r15d,si
   14000401d:	test   rbx,rbx
   140004020:	je     0x14000402c
   140004022:	mov    al,BYTE PTR [rsp+r14*1+0x80]
   14000402a:	jmp    0x140004034
   14000402c:	mov    al,BYTE PTR [rsp+r14*1+0x90]
   140004034:	lea    rcx,[rdi+0x2]
   140004038:	mov    BYTE PTR [rdi-0x2],al
   14000403b:	mov    r8,r15
   14000403e:	mov    BYTE PTR [rdi-0x1],0x83
   140004042:	lea    rdx,[r12+0x4]
   140004047:	mov    WORD PTR [rdi],si
   14000404a:	call   0x140005ef2
   14000404f:	add    rdi,QWORD PTR [rsp+0x20]
   140004054:	inc    r14
   140004057:	sub    rbp,0x1
   14000405b:	jne    0x14000401d
   14000405d:	mov    rbx,QWORD PTR [rsp+0x88]
   140004065:	xor    eax,eax
   140004067:	movzx  r15d,WORD PTR [rsp+0x98]
   140004070:	mov    DWORD PTR [rbx+0xc],0x30ad
   140004077:	mov    DWORD PTR [rbx+0x8],r15d
   14000407b:	mov    QWORD PTR [rbx],r13
   14000407e:	add    rsp,0x38
   140004082:	pop    r15
   140004084:	pop    r14
   140004086:	pop    r13
   140004088:	pop    r12
   14000408a:	pop    rdi
   14000408b:	pop    rsi
   14000408c:	pop    rbp
   14000408d:	pop    rbx
   14000408e:	ret    
   14000408f:	int3   
   140004090:	int3   
   140004091:	int3   
   140004092:	int3   
   140004093:	int3   
   140004094:	int3   
   140004095:	int3   
   140004096:	int3   
   140004097:	int3   
   140004098:	mov    rax,rsp
   14000409b:	mov    QWORD PTR [rax+0x10],rbx
   14000409f:	mov    QWORD PTR [rax+0x18],rdi
   1400040a3:	mov    QWORD PTR [rax+0x20],r15
   1400040a7:	push   rbp
   1400040a8:	lea    rbp,[rax-0x58]
   1400040ac:	sub    rsp,0x150
   1400040b3:	mov    rax,QWORD PTR [rip+0x5f5e]        # 0x14000a018
   1400040ba:	xor    rax,rsp
   1400040bd:	mov    QWORD PTR [rbp+0x40],rax
   1400040c1:	and    QWORD PTR [rsp+0x40],0x0
   1400040c7:	xor    eax,eax
   1400040c9:	and    QWORD PTR [rsp+0x48],0x0
   1400040cf:	mov    rdi,rcx
   1400040d2:	and    DWORD PTR [rsp+0x58],eax
   1400040d6:	lea    rcx,[rsp+0x5c]
   1400040db:	xor    edx,edx
   1400040dd:	mov    QWORD PTR [rsp+0x50],rax
   1400040e2:	lea    r8d,[rax+0x2c]
   1400040e6:	call   0x140005efe
   1400040eb:	xor    edx,edx
   1400040ed:	lea    rcx,[rbp-0x6c]
   1400040f1:	lea    r8d,[rdx+0x74]
   1400040f5:	call   0x140005efe
   1400040fa:	movups xmm0,XMMWORD PTR [rip+0x3ae7]        # 0x140007be8
   140004101:	movzx  eax,WORD PTR [rip+0x3b08]        # 0x140007c10
   140004108:	lea    r8,[rbp-0x70]
   14000410c:	movups xmm1,XMMWORD PTR [rip+0x3ae5]        # 0x140007bf8
   140004113:	lea    rdx,[rip+0x3ace]        # 0x140007be8
   14000411a:	mov    WORD PTR [rbp+0x30],ax
   14000411e:	movups XMMWORD PTR [rbp+0x8],xmm0
   140004122:	lea    rcx,[rsp+0x40]
   140004127:	mov    DWORD PTR [rbp-0x70],0xa8
   14000412e:	movsd  xmm0,QWORD PTR [rip+0x3ad2]        # 0x140007c08
   140004136:	movsd  QWORD PTR [rbp+0x28],xmm0
   14000413b:	movups XMMWORD PTR [rbp+0x18],xmm1
   14000413f:	mov    DWORD PTR [rbp-0x44],0x20000
   140004146:	mov    DWORD PTR [rbp-0x30],0x100
   14000414d:	mov    DWORD PTR [rbp+0x4],0x78
   140004154:	call   QWORD PTR [rip+0x312e]        # 0x140007288
   14000415a:	lea    r15,[rip+0x5ecf]        # 0x14000a030
   140004161:	mov    ebx,eax
   140004163:	test   eax,eax
   140004165:	je     0x140004192
   140004167:	cmp    eax,0xb7
   14000416c:	je     0x140004192
   14000416e:	mov    rcx,QWORD PTR [rip+0x5ebb]        # 0x14000a030
   140004175:	cmp    rcx,r15
   140004178:	je     0x14000423a
   14000417e:	cmp    BYTE PTR [rcx+0x19],0x2
   140004182:	jb     0x14000423a
   140004188:	mov    edx,0x12
   14000418d:	jmp    0x140004227
   140004192:	lea    rdx,[rsp+0x48]
   140004197:	mov    rcx,rdi
   14000419a:	call   0x140003f58
   14000419f:	mov    ebx,eax
   1400041a1:	test   eax,eax
   1400041a3:	je     0x1400041c2
   1400041a5:	mov    rcx,QWORD PTR [rip+0x5e84]        # 0x14000a030
   1400041ac:	cmp    rcx,r15
   1400041af:	je     0x14000423a
   1400041b5:	cmp    BYTE PTR [rcx+0x19],0x2
   1400041b9:	jb     0x14000423a
   1400041bb:	mov    edx,0x13
   1400041c0:	jmp    0x140004227
   1400041c2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400041c7:	lea    rax,[rsp+0x48]
   1400041cc:	mov    QWORD PTR [rsp+0x78],rax
   1400041d1:	lea    rdx,[rip+0x3a40]        # 0x140007c18
   1400041d8:	lea    rax,[rsp+0x58]
   1400041dd:	mov    DWORD PTR [rsp+0x58],0x1
   1400041e5:	mov    QWORD PTR [rsp+0x38],rax
   1400041ea:	mov    r9b,0x4
   1400041ed:	and    DWORD PTR [rsp+0x30],0x0
   1400041f2:	mov    r8d,0x1
   1400041f8:	and    QWORD PTR [rsp+0x28],0x0
   1400041fe:	and    QWORD PTR [rsp+0x20],0x0
   140004204:	call   QWORD PTR [rip+0x3076]        # 0x140007280
   14000420a:	mov    ebx,eax
   14000420c:	test   eax,eax
   14000420e:	je     0x14000423a
   140004210:	mov    rcx,QWORD PTR [rip+0x5e19]        # 0x14000a030
   140004217:	cmp    rcx,r15
   14000421a:	je     0x14000423a
   14000421c:	cmp    BYTE PTR [rcx+0x19],0x2
   140004220:	jb     0x14000423a
   140004222:	mov    edx,0x14
   140004227:	mov    rcx,QWORD PTR [rcx+0x10]
   14000422b:	lea    r8,[rip+0x39f6]        # 0x140007c28
   140004232:	mov    r9d,eax
   140004235:	call   0x14000108c
   14000423a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000423f:	test   rcx,rcx
   140004242:	je     0x14000429c
   140004244:	and    DWORD PTR [rbp+0x4],0x0
   140004248:	lea    r8,[rbp-0x70]
   14000424c:	and    DWORD PTR [rbp+0x0],0x0
   140004250:	lea    rdx,[rip+0x3991]        # 0x140007be8
   140004257:	mov    r9d,0x1
   14000425d:	call   QWORD PTR [rip+0x302d]        # 0x140007290
   140004263:	mov    ebx,eax
   140004265:	test   eax,eax
   140004267:	je     0x14000429c
   140004269:	cmp    eax,0xea
   14000426e:	je     0x14000429c
   140004270:	mov    rcx,QWORD PTR [rip+0x5db9]        # 0x14000a030
   140004277:	cmp    rcx,r15
   14000427a:	je     0x14000429a
   14000427c:	cmp    BYTE PTR [rcx+0x19],0x2
   140004280:	jb     0x14000429a
   140004282:	mov    rcx,QWORD PTR [rcx+0x10]
   140004286:	lea    r8,[rip+0x399b]        # 0x140007c28
   14000428d:	mov    edx,0x15
   140004292:	mov    r9d,eax
   140004295:	call   0x14000108c
   14000429a:	xor    ebx,ebx
   14000429c:	mov    rcx,QWORD PTR [rsp+0x48]
   1400042a1:	test   rcx,rcx
   1400042a4:	je     0x1400042ac
   1400042a6:	call   QWORD PTR [rip+0x30f4]        # 0x1400073a0
   1400042ac:	mov    eax,ebx
   1400042ae:	mov    rcx,QWORD PTR [rbp+0x40]
   1400042b2:	xor    rcx,rsp
   1400042b5:	call   0x1400056a0
   1400042ba:	lea    r11,[rsp+0x150]
   1400042c2:	mov    rbx,QWORD PTR [r11+0x18]
   1400042c6:	mov    rdi,QWORD PTR [r11+0x20]
   1400042ca:	mov    r15,QWORD PTR [r11+0x28]
   1400042ce:	mov    rsp,r11
   1400042d1:	pop    rbp
   1400042d2:	ret    
   1400042d3:	int3   
   1400042d4:	int3   
   1400042d5:	int3   
   1400042d6:	int3   
   1400042d7:	int3   
   1400042d8:	int3   
   1400042d9:	int3   
   1400042da:	int3   
   1400042db:	int3   
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	jmp    0x140003d68
   1400042e5:	int3   
   1400042e6:	int3   
   1400042e7:	int3   
   1400042e8:	int3   
   1400042e9:	int3   
   1400042ea:	int3   
   1400042eb:	int3   
   1400042ec:	mov    r11,rsp
   1400042ef:	mov    DWORD PTR [r11+0x20],r9d
   1400042f3:	sub    rsp,0x78
   1400042f7:	and    QWORD PTR [r11-0x18],0x0
   1400042fc:	lea    rax,[r11+0x38]
   140004300:	mov    r8d,0xd
   140004306:	movzx  r9d,r8w
   14000430a:	lea    edx,[r8-0x9]
   14000430e:	mov    QWORD PTR [r11-0x20],rdx
   140004312:	lea    r8,[rip+0x391f]        # 0x140007c38
   140004319:	mov    QWORD PTR [r11-0x28],rax
   14000431d:	lea    rax,[r11+0x30]
   140004321:	mov    QWORD PTR [r11-0x30],rdx
   140004325:	mov    QWORD PTR [r11-0x38],rax
   140004329:	lea    rax,[r11+0x28]
   14000432d:	mov    QWORD PTR [r11-0x40],rdx
   140004331:	mov    QWORD PTR [r11-0x48],rax
   140004335:	lea    rax,[r11+0x20]
   140004339:	mov    QWORD PTR [r11-0x50],rdx
   14000433d:	mov    edx,0x2b
   140004342:	mov    QWORD PTR [r11-0x58],rax
   140004346:	call   QWORD PTR [rip+0x2f04]        # 0x140007250
   14000434c:	add    rsp,0x78
   140004350:	ret    
   140004351:	int3   
   140004352:	int3   
   140004353:	int3   
   140004354:	int3   
   140004355:	int3   
   140004356:	int3   
   140004357:	int3   
   140004358:	rex push rbx
   14000435a:	sub    rsp,0x20
   14000435e:	mov    rbx,rcx
   140004361:	call   0x140004390
   140004366:	mov    rcx,QWORD PTR [rbx+0x68]
   14000436a:	test   rcx,rcx
   14000436d:	je     0x14000437a
   14000436f:	call   QWORD PTR [rip+0x2ea3]        # 0x140007218
   140004375:	and    QWORD PTR [rbx+0x68],0x0
   14000437a:	mov    rcx,rbx
   14000437d:	add    rsp,0x20
   140004381:	pop    rbx
   140004382:	rex.W jmp QWORD PTR [rip+0x2e17]        # 0x1400071a0
   140004389:	int3   
   14000438a:	int3   
   14000438b:	int3   
   14000438c:	int3   
   14000438d:	int3   
   14000438e:	int3   
   14000438f:	int3   
   140004390:	rex push rbx
   140004392:	sub    rsp,0x20
   140004396:	mov    rbx,rcx
   140004399:	call   QWORD PTR [rip+0x2e31]        # 0x1400071d0
   14000439f:	mov    rcx,QWORD PTR [rbx+0x68]
   1400043a3:	test   rcx,rcx
   1400043a6:	je     0x1400043b3
   1400043a8:	mov    edx,0x1
   1400043ad:	call   QWORD PTR [rip+0x2e55]        # 0x140007208
   1400043b3:	mov    rcx,QWORD PTR [rbx+0x28]
   1400043b7:	test   rcx,rcx
   1400043ba:	je     0x1400043c7
   1400043bc:	call   QWORD PTR [rip+0x2fde]        # 0x1400073a0
   1400043c2:	and    QWORD PTR [rbx+0x28],0x0
   1400043c7:	mov    rcx,rbx
   1400043ca:	add    rsp,0x20
   1400043ce:	pop    rbx
   1400043cf:	rex.W jmp QWORD PTR [rip+0x2e02]        # 0x1400071d8
   1400043d6:	int3   
   1400043d7:	int3   
   1400043d8:	int3   
   1400043d9:	int3   
   1400043da:	int3   
   1400043db:	int3   
   1400043dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400043e1:	mov    QWORD PTR [rsp+0x18],rbp
   1400043e6:	push   rsi
   1400043e7:	push   rdi
   1400043e8:	push   r14
   1400043ea:	sub    rsp,0x20
   1400043ee:	mov    esi,DWORD PTR [rcx+0x5c]
   1400043f1:	mov    rbx,rcx
   1400043f4:	shl    esi,0xa
   1400043f7:	add    esi,DWORD PTR [rcx+0x60]
   1400043fa:	xor    edi,edi
   1400043fc:	mov    QWORD PTR [rsp+0x40],rdi
   140004401:	mov    rcx,QWORD PTR [rip+0x5c28]        # 0x14000a030
   140004408:	lea    r14,[rip+0x5c21]        # 0x14000a030
   14000440f:	cmp    rcx,r14
   140004412:	je     0x14000442d
   140004414:	cmp    BYTE PTR [rcx+0x19],0x4
   140004418:	jb     0x14000442d
   14000441a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000441e:	lea    edx,[rdi+0xb]
   140004421:	lea    r8,[rip+0x3810]        # 0x140007c38
   140004428:	call   0x140001068
   14000442d:	mov    rcx,rbx
   140004430:	call   QWORD PTR [rip+0x2d9a]        # 0x1400071d0
   140004436:	mov    ecx,esi
   140004438:	mov    ebp,esi
   14000443a:	call   QWORD PTR [rip+0x2f68]        # 0x1400073a8
   140004440:	mov    QWORD PTR [rbx+0x28],rax
   140004444:	test   rax,rax
   140004447:	jne    0x140004475
   140004449:	mov    rcx,QWORD PTR [rip+0x5be0]        # 0x14000a030
   140004450:	cmp    rcx,r14
   140004453:	je     0x14000446e
   140004455:	cmp    BYTE PTR [rcx+0x19],0x2
   140004459:	jb     0x14000446e
   14000445b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000445f:	lea    edx,[rax+0xc]
   140004462:	lea    r8,[rip+0x37cf]        # 0x140007c38
   140004469:	call   0x140001068
   14000446e:	mov    edi,0xe
   140004473:	jmp    0x1400044d3
   140004475:	mov    r8,rbp
   140004478:	xor    edx,edx
   14000447a:	mov    rcx,rax
   14000447d:	call   0x140005efe
   140004482:	mov    rcx,QWORD PTR [rbx+0x28]
   140004486:	xor    r8d,r8d
   140004489:	mov    eax,DWORD PTR [rbx+0x60]
   14000448c:	mov    DWORD PTR [rbx+0x44],eax
   14000448f:	mov    QWORD PTR [rbx+0x38],rcx
   140004493:	mov    QWORD PTR [rbx+0x48],rcx
   140004497:	mov    ecx,DWORD PTR [rbx+0x64]
   14000449a:	imul   rax,rcx,0xffffffffffffd8f0
   1400044a1:	mov    DWORD PTR [rbx+0x30],esi
   1400044a4:	mov    DWORD PTR [rsp+0x40],eax
   1400044a8:	shr    rax,0x20
   1400044ac:	mov    DWORD PTR [rsp+0x44],eax
   1400044b0:	mov    eax,0xcccccccd
   1400044b5:	mul    ecx
   1400044b7:	mov    rcx,QWORD PTR [rbx+0x68]
   1400044bb:	shr    edx,0x2
   1400044be:	mov    r9d,edx
   1400044c1:	mov    DWORD PTR [rbx+0x40],esi
   1400044c4:	lea    rdx,[rsp+0x40]
   1400044c9:	mov    QWORD PTR [rbx+0x54],rdi
   1400044cd:	call   QWORD PTR [rip+0x2d2d]        # 0x140007200
   1400044d3:	mov    rcx,rbx
   1400044d6:	call   QWORD PTR [rip+0x2cfc]        # 0x1400071d8
   1400044dc:	mov    rbx,QWORD PTR [rsp+0x48]
   1400044e1:	mov    eax,edi
   1400044e3:	mov    rbp,QWORD PTR [rsp+0x50]
   1400044e8:	add    rsp,0x20
   1400044ec:	pop    r14
   1400044ee:	pop    rdi
   1400044ef:	pop    rsi
   1400044f0:	ret    
   1400044f1:	int3   
   1400044f2:	int3   
   1400044f3:	int3   
   1400044f4:	int3   
   1400044f5:	int3   
   1400044f6:	int3   
   1400044f7:	int3   
   1400044f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400044fd:	mov    QWORD PTR [rsp+0x10],rsi
   140004502:	mov    QWORD PTR [rsp+0x18],rdi
   140004507:	push   r14
   140004509:	sub    rsp,0x40
   14000450d:	mov    rdi,rdx
   140004510:	mov    rbx,rcx
   140004513:	call   QWORD PTR [rip+0x2cb7]        # 0x1400071d0
   140004519:	cmp    DWORD PTR [rbx+0x58],0x0
   14000451d:	mov    r14d,0x1
   140004523:	jne    0x140004544
   140004525:	mov    rcx,rbx
   140004528:	call   QWORD PTR [rip+0x2caa]        # 0x1400071d8
   14000452e:	mov    rcx,QWORD PTR [rbx+0x68]
   140004532:	mov    edx,r14d
   140004535:	call   QWORD PTR [rip+0x2ccd]        # 0x140007208
   14000453b:	mov    rcx,rbx
   14000453e:	call   QWORD PTR [rip+0x2c8c]        # 0x1400071d0
   140004544:	mov    eax,DWORD PTR [rbx+0x30]
   140004547:	sub    eax,DWORD PTR [rbx+0x40]
   14000454a:	mov    rsi,QWORD PTR [rbx+0x28]
   14000454e:	mov    DWORD PTR [rdi],eax
   140004550:	mov    rax,QWORD PTR [rbx+0x48]
   140004554:	or     WORD PTR [rax+0x6],r14w
   140004559:	mov    rcx,QWORD PTR [rip+0x5ad0]        # 0x14000a030
   140004560:	lea    rax,[rip+0x5ac9]        # 0x14000a030
   140004567:	cmp    rcx,rax
   14000456a:	je     0x140004593
   14000456c:	cmp    BYTE PTR [rcx+0x19],0x4
   140004570:	jb     0x140004593
   140004572:	mov    eax,DWORD PTR [rbx+0x58]
   140004575:	mov    r9d,DWORD PTR [rdi]
   140004578:	mov    rcx,QWORD PTR [rcx+0x10]
   14000457c:	mov    DWORD PTR [rsp+0x30],eax
   140004580:	mov    eax,DWORD PTR [rbx+0x54]
   140004583:	mov    DWORD PTR [rsp+0x28],eax
   140004587:	mov    eax,DWORD PTR [rbx+0x50]
   14000458a:	mov    DWORD PTR [rsp+0x20],eax
   14000458e:	call   0x1400042ec
   140004593:	and    QWORD PTR [rbx+0x28],0x0
   140004598:	mov    rcx,rbx
   14000459b:	and    DWORD PTR [rbx+0x30],0x0
   14000459f:	and    QWORD PTR [rbx+0x38],0x0
   1400045a4:	and    DWORD PTR [rbx+0x40],0x0
   1400045a8:	and    DWORD PTR [rbx+0x50],0x0
   1400045ac:	and    DWORD PTR [rbx+0x54],0x0
   1400045b0:	and    DWORD PTR [rbx+0x58],0x0
   1400045b4:	and    QWORD PTR [rbx+0x48],0x0
   1400045b9:	and    DWORD PTR [rbx+0x44],0x0
   1400045bd:	call   QWORD PTR [rip+0x2c15]        # 0x1400071d8
   1400045c3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400045c8:	mov    rax,rsi
   1400045cb:	mov    rsi,QWORD PTR [rsp+0x58]
   1400045d0:	mov    rdi,QWORD PTR [rsp+0x60]
   1400045d5:	add    rsp,0x40
   1400045d9:	pop    r14
   1400045db:	ret    
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	int3   
   1400045e1:	int3   
   1400045e2:	int3   
   1400045e3:	int3   
   1400045e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400045e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400045ee:	mov    QWORD PTR [rsp+0x18],rdi
   1400045f3:	push   r14
   1400045f5:	sub    rsp,0x20
   1400045f9:	xor    edi,edi
   1400045fb:	mov    esi,edx
   1400045fd:	and    QWORD PTR [r8],rdi
   140004600:	mov    r14,r8
   140004603:	mov    rbx,rcx
   140004606:	call   QWORD PTR [rip+0x2bc4]        # 0x1400071d0
   14000460c:	cmp    QWORD PTR [rbx+0x28],rdi
   140004610:	jne    0x140004653
   140004612:	mov    rcx,rbx
   140004615:	call   0x1400043dc
   14000461a:	mov    edi,eax
   14000461c:	test   eax,eax
   14000461e:	je     0x140004653
   140004620:	mov    rcx,QWORD PTR [rip+0x5a09]        # 0x14000a030
   140004627:	lea    rax,[rip+0x5a02]        # 0x14000a030
   14000462e:	cmp    rcx,rax
   140004631:	je     0x140004688
   140004633:	cmp    BYTE PTR [rcx+0x19],0x2
   140004637:	jb     0x140004688
   140004639:	mov    rcx,QWORD PTR [rcx+0x10]
   14000463d:	lea    r8,[rip+0x35f4]        # 0x140007c38
   140004644:	mov    edx,0xe
   140004649:	mov    r9d,edi
   14000464c:	call   0x14000108c
   140004651:	jmp    0x140004688
   140004653:	mov    ecx,DWORD PTR [rbx+0x44]
   140004656:	mov    edx,DWORD PTR [rbx+0x40]
   140004659:	add    ecx,esi
   14000465b:	cmp    ecx,edx
   14000465d:	jbe    0x14000466d
   14000465f:	mov    DWORD PTR [rbx+0x54],0x1
   140004666:	mov    edi,0x19e4
   14000466b:	jmp    0x140004688
   14000466d:	mov    rcx,QWORD PTR [rbx+0x38]
   140004671:	sub    edx,esi
   140004673:	inc    DWORD PTR [rbx+0x50]
   140004676:	mov    QWORD PTR [r14],rcx
   140004679:	mov    QWORD PTR [rbx+0x48],rcx
   14000467d:	lea    rax,[rcx+rsi*1]
   140004681:	mov    DWORD PTR [rbx+0x40],edx
   140004684:	mov    QWORD PTR [rbx+0x38],rax
   140004688:	mov    rcx,rbx
   14000468b:	call   QWORD PTR [rip+0x2b47]        # 0x1400071d8
   140004691:	mov    rbx,QWORD PTR [rsp+0x30]
   140004696:	mov    eax,edi
   140004698:	mov    rdi,QWORD PTR [rsp+0x40]
   14000469d:	mov    rsi,QWORD PTR [rsp+0x38]
   1400046a2:	add    rsp,0x20
   1400046a6:	pop    r14
   1400046a8:	ret    
   1400046a9:	int3   
   1400046aa:	int3   
   1400046ab:	int3   
   1400046ac:	int3   
   1400046ad:	int3   
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400046b5:	push   rdi
   1400046b6:	sub    rsp,0x20
   1400046ba:	mov    rdi,rdx
   1400046bd:	mov    rcx,QWORD PTR [rip+0x596c]        # 0x14000a030
   1400046c4:	lea    rax,[rip+0x5965]        # 0x14000a030
   1400046cb:	cmp    rcx,rax
   1400046ce:	je     0x1400046eb
   1400046d0:	cmp    BYTE PTR [rcx+0x19],0x4
   1400046d4:	jb     0x1400046eb
   1400046d6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400046da:	lea    r8,[rip+0x3557]        # 0x140007c38
   1400046e1:	mov    edx,0xf
   1400046e6:	call   0x140001068
   1400046eb:	mov    rcx,rdi
   1400046ee:	call   QWORD PTR [rip+0x2adc]        # 0x1400071d0
   1400046f4:	mov    rcx,rdi
   1400046f7:	mov    DWORD PTR [rdi+0x58],0x1
   1400046fe:	call   QWORD PTR [rip+0x2ad4]        # 0x1400071d8
   140004704:	mov    rdi,QWORD PTR [rdi+0x70]
   140004708:	mov    rax,QWORD PTR [rdi]
   14000470b:	mov    rbx,QWORD PTR [rax]
   14000470e:	mov    rcx,rbx
   140004711:	call   QWORD PTR [rip+0x2d69]        # 0x140007480
   140004717:	mov    rcx,rdi
   14000471a:	mov    rax,rbx
   14000471d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004722:	add    rsp,0x20
   140004726:	pop    rdi
   140004727:	rex.W jmp rax
   14000472a:	int3   
   14000472b:	int3   
   14000472c:	int3   
   14000472d:	int3   
   14000472e:	int3   
   14000472f:	int3   
   140004730:	mov    QWORD PTR [rsp+0x10],rbx
   140004735:	mov    QWORD PTR [rsp+0x18],rdi
   14000473a:	push   rbp
   14000473b:	mov    rbp,rsp
   14000473e:	sub    rsp,0x80
   140004745:	mov    rax,QWORD PTR [rip+0x58cc]        # 0x14000a018
   14000474c:	xor    rax,rsp
   14000474f:	mov    QWORD PTR [rbp-0x8],rax
   140004753:	xor    edi,edi
   140004755:	mov    WORD PTR [rbp-0xc],0x500
   14000475b:	lea    rax,[rbp-0x18]
   14000475f:	mov    DWORD PTR [rbp-0x20],edi
   140004762:	mov    QWORD PTR [rsp+0x50],rax
   140004767:	mov    rbx,rcx
   14000476a:	mov    DWORD PTR [rsp+0x48],edi
   14000476e:	lea    rcx,[rbp-0x10]
   140004772:	mov    DWORD PTR [rsp+0x40],edi
   140004776:	lea    r8d,[rdi+0x20]
   14000477a:	mov    DWORD PTR [rsp+0x38],edi
   14000477e:	mov    r9d,0x220
   140004784:	mov    DWORD PTR [rsp+0x30],edi
   140004788:	mov    dl,0x2
   14000478a:	mov    DWORD PTR [rsp+0x28],edi
   14000478e:	mov    DWORD PTR [rsp+0x20],edi
   140004792:	mov    QWORD PTR [rbp-0x18],rdi
   140004796:	mov    DWORD PTR [rbp-0x10],edi
   140004799:	call   QWORD PTR [rip+0x2b11]        # 0x1400072b0
   14000479f:	test   eax,eax
   1400047a1:	jne    0x1400047e3
   1400047a3:	mov    rcx,QWORD PTR [rip+0x5886]        # 0x14000a030
   1400047aa:	lea    rax,[rip+0x587f]        # 0x14000a030
   1400047b1:	cmp    rcx,rax
   1400047b4:	je     0x1400047df
   1400047b6:	cmp    BYTE PTR [rcx+0x19],0x2
   1400047ba:	jb     0x1400047df
   1400047bc:	call   QWORD PTR [rip+0x293e]        # 0x140007100
   1400047c2:	mov    rcx,QWORD PTR [rip+0x5867]        # 0x14000a030
   1400047c9:	lea    edx,[rdi+0xa]
   1400047cc:	mov    r9d,eax
   1400047cf:	lea    r8,[rip+0x3472]        # 0x140007c48
   1400047d6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400047da:	call   0x14000108c
   1400047df:	xor    eax,eax
   1400047e1:	jmp    0x140004846
   1400047e3:	mov    rdx,QWORD PTR [rbp-0x18]
   1400047e7:	lea    r8,[rbp-0x20]
   1400047eb:	mov    rcx,rbx
   1400047ee:	call   QWORD PTR [rip+0x2ab4]        # 0x1400072a8
   1400047f4:	test   eax,eax
   1400047f6:	jne    0x140004839
   1400047f8:	mov    DWORD PTR [rbp-0x20],edi
   1400047fb:	mov    rcx,QWORD PTR [rip+0x582e]        # 0x14000a030
   140004802:	lea    rax,[rip+0x5827]        # 0x14000a030
   140004809:	cmp    rcx,rax
   14000480c:	je     0x140004839
   14000480e:	cmp    BYTE PTR [rcx+0x19],0x2
   140004812:	jb     0x140004839
   140004814:	call   QWORD PTR [rip+0x28e6]        # 0x140007100
   14000481a:	mov    rcx,QWORD PTR [rip+0x580f]        # 0x14000a030
   140004821:	lea    r8,[rip+0x3420]        # 0x140007c48
   140004828:	mov    r9d,eax
   14000482b:	mov    edx,0xb
   140004830:	mov    rcx,QWORD PTR [rcx+0x10]
   140004834:	call   0x14000108c
   140004839:	mov    rcx,QWORD PTR [rbp-0x18]
   14000483d:	call   QWORD PTR [rip+0x2a5d]        # 0x1400072a0
   140004843:	mov    eax,DWORD PTR [rbp-0x20]
   140004846:	mov    rcx,QWORD PTR [rbp-0x8]
   14000484a:	xor    rcx,rsp
   14000484d:	call   0x1400056a0
   140004852:	lea    r11,[rsp+0x80]
   14000485a:	mov    rbx,QWORD PTR [r11+0x18]
   14000485e:	mov    rdi,QWORD PTR [r11+0x20]
   140004862:	mov    rsp,r11
   140004865:	pop    rbp
   140004866:	ret    
   140004867:	int3   
   140004868:	int3   
   140004869:	int3   
   14000486a:	int3   
   14000486b:	int3   
   14000486c:	int3   
   14000486d:	int3   
   14000486e:	int3   
   14000486f:	int3   
   140004870:	mov    rax,rsp
   140004873:	mov    QWORD PTR [rax+0x10],rbx
   140004877:	mov    QWORD PTR [rax+0x18],rbp
   14000487b:	mov    QWORD PTR [rax+0x20],rsi
   14000487f:	push   rdi
   140004880:	sub    rsp,0x20
   140004884:	xor    ebp,ebp
   140004886:	xor    ecx,ecx
   140004888:	mov    QWORD PTR [rax+0x8],rbp
   14000488c:	mov    esi,ebp
   14000488e:	call   QWORD PTR [rip+0x282c]        # 0x1400070c0
   140004894:	mov    ebx,eax
   140004896:	test   eax,eax
   140004898:	je     0x1400048d3
   14000489a:	mov    rcx,QWORD PTR [rip+0x578f]        # 0x14000a030
   1400048a1:	lea    rdi,[rip+0x5788]        # 0x14000a030
   1400048a8:	cmp    rcx,rdi
   1400048ab:	je     0x140004943
   1400048b1:	cmp    BYTE PTR [rcx+0x19],0x2
   1400048b5:	jb     0x140004943
   1400048bb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400048bf:	lea    edx,[rbp+0xd]
   1400048c2:	mov    r9d,eax
   1400048c5:	lea    r8,[rip+0x337c]        # 0x140007c48
   1400048cc:	call   0x14000108c
   1400048d1:	jmp    0x14000493c
   1400048d3:	call   QWORD PTR [rip+0x288f]        # 0x140007168
   1400048d9:	mov    edx,0xc
   1400048de:	lea    r9,[rsp+0x30]
   1400048e3:	mov    rcx,rax
   1400048e6:	lea    r8d,[rdx-0xb]
   1400048ea:	call   QWORD PTR [rip+0x2870]        # 0x140007160
   1400048f0:	lea    rdi,[rip+0x5739]        # 0x14000a030
   1400048f7:	test   eax,eax
   1400048f9:	jne    0x14000492f
   1400048fb:	call   QWORD PTR [rip+0x27ff]        # 0x140007100
   140004901:	mov    ebx,eax
   140004903:	mov    rcx,QWORD PTR [rip+0x5726]        # 0x14000a030
   14000490a:	cmp    rcx,rdi
   14000490d:	je     0x140004934
   14000490f:	cmp    BYTE PTR [rcx+0x19],0x2
   140004913:	jb     0x140004934
   140004915:	mov    rcx,QWORD PTR [rcx+0x10]
   140004919:	lea    r8,[rip+0x3328]        # 0x140007c48
   140004920:	mov    edx,0xe
   140004925:	mov    r9d,eax
   140004928:	call   0x14000108c
   14000492d:	jmp    0x140004934
   14000492f:	mov    rsi,QWORD PTR [rsp+0x30]
   140004934:	xor    ecx,ecx
   140004936:	call   QWORD PTR [rip+0x2774]        # 0x1400070b0
   14000493c:	mov    rcx,QWORD PTR [rip+0x56ed]        # 0x14000a030
   140004943:	test   ebx,ebx
   140004945:	je     0x140004971
   140004947:	cmp    rcx,rdi
   14000494a:	je     0x14000496a
   14000494c:	cmp    BYTE PTR [rcx+0x19],0x2
   140004950:	jb     0x14000496a
   140004952:	mov    rcx,QWORD PTR [rcx+0x10]
   140004956:	lea    r8,[rip+0x32eb]        # 0x140007c48
   14000495d:	mov    edx,0xf
   140004962:	mov    r9d,ebx
   140004965:	call   0x14000108c
   14000496a:	mov    eax,0x5
   14000496f:	jmp    0x14000498e
   140004971:	mov    rcx,rsi
   140004974:	mov    ebx,0x5
   140004979:	call   0x140004730
   14000497e:	test   eax,eax
   140004980:	mov    rcx,rsi
   140004983:	cmovne ebx,ebp
   140004986:	call   QWORD PTR [rip+0x278c]        # 0x140007118
   14000498c:	mov    eax,ebx
   14000498e:	mov    rbx,QWORD PTR [rsp+0x38]
   140004993:	mov    rbp,QWORD PTR [rsp+0x40]
   140004998:	mov    rsi,QWORD PTR [rsp+0x48]
   14000499d:	add    rsp,0x20
   1400049a1:	pop    rdi
   1400049a2:	ret    
   1400049a3:	int3   
   1400049a4:	int3   
   1400049a5:	int3   
   1400049a6:	int3   
   1400049a7:	int3   
   1400049a8:	int3   
   1400049a9:	int3   
   1400049aa:	int3   
   1400049ab:	int3   
   1400049ac:	mov    QWORD PTR [rsp+0x10],rbx
   1400049b1:	mov    QWORD PTR [rsp+0x18],rbp
   1400049b6:	push   rsi
   1400049b7:	push   rdi
   1400049b8:	push   r14
   1400049ba:	sub    rsp,0x130
   1400049c1:	mov    bpl,r8b
   1400049c4:	mov    rdi,rcx
   1400049c7:	test   rcx,rcx
   1400049ca:	jne    0x1400049d6
   1400049cc:	mov    ebx,0xc00000ef
   1400049d1:	jmp    0x140004ad6
   1400049d6:	cmp    DWORD PTR [rcx],0x41636450
   1400049dc:	jne    0x1400049cc
   1400049de:	add    rcx,0x8
   1400049e2:	call   QWORD PTR [rip+0x27d8]        # 0x1400071c0
   1400049e8:	call   QWORD PTR [rip+0x275a]        # 0x140007148
   1400049ee:	mov    DWORD PTR [rdi+0x10],eax
   1400049f1:	mov    eax,DWORD PTR [rdi+0x34]
   1400049f4:	test   bpl,bpl
   1400049f7:	jne    0x140004ab9
   1400049fd:	test   eax,eax
   1400049ff:	jne    0x140004a0b
   140004a01:	mov    ebx,0xc0000001
   140004a06:	jmp    0x140004ac8
   140004a0b:	cmp    eax,0x1
   140004a0e:	jne    0x140004ac1
   140004a14:	mov    rbx,QWORD PTR [rdi+0x20]
   140004a18:	test   bpl,bpl
   140004a1b:	mov    DWORD PTR [rsp+0x68],0x4
   140004a23:	setne  BYTE PTR [rsp+0x70]
   140004a28:	and    DWORD PTR [rsp+0x74],0x0
   140004a2d:	lea    rcx,[rbx+0x10]
   140004a31:	call   QWORD PTR [rip+0x2759]        # 0x140007190
   140004a37:	cmp    QWORD PTR [rbx+0x8],0x0
   140004a3c:	je     0x140004a9d
   140004a3e:	xor    edx,edx
   140004a40:	lea    rcx,[rsp+0x40]
   140004a45:	lea    r8d,[rdx+0x28]
   140004a49:	call   0x140005efe
   140004a4e:	and    QWORD PTR [rsp+0x38],0x0
   140004a54:	lea    r8,[rsp+0x40]
   140004a59:	and    QWORD PTR [rsp+0x30],0x0
   140004a5f:	mov    eax,0xf0
   140004a64:	mov    QWORD PTR [rsp+0x150],rax
   140004a6c:	xor    r9d,r9d
   140004a6f:	lea    rax,[rsp+0x150]
   140004a77:	mov    DWORD PTR [rsp+0x40],0xf000c8
   140004a7f:	mov    rcx,QWORD PTR [rbx+0x8]
   140004a83:	mov    edx,0x20000
   140004a88:	mov    QWORD PTR [rsp+0x28],rax
   140004a8d:	lea    rax,[rsp+0x40]
   140004a92:	mov    QWORD PTR [rsp+0x20],rax
   140004a97:	call   QWORD PTR [rip+0x29d3]        # 0x140007470
   140004a9d:	lea    rcx,[rbx+0x10]
   140004aa1:	call   QWORD PTR [rip+0x2711]        # 0x1400071b8
   140004aa7:	mov    ebx,DWORD PTR [rsp+0x70]
   140004aab:	test   ebx,ebx
   140004aad:	js     0x140004ac8
   140004aaf:	test   bpl,bpl
   140004ab2:	jne    0x140004ac5
   140004ab4:	dec    DWORD PTR [rdi+0x34]
   140004ab7:	jmp    0x140004ac8
   140004ab9:	test   eax,eax
   140004abb:	je     0x140004a14
   140004ac1:	xor    ebx,ebx
   140004ac3:	jmp    0x140004aab
   140004ac5:	inc    DWORD PTR [rdi+0x34]
   140004ac8:	and    DWORD PTR [rdi+0x10],0x0
   140004acc:	lea    rcx,[rdi+0x8]
   140004ad0:	call   QWORD PTR [rip+0x26f2]        # 0x1400071c8
   140004ad6:	lea    r11,[rsp+0x130]
   140004ade:	mov    eax,ebx
   140004ae0:	mov    rbx,QWORD PTR [r11+0x28]
   140004ae4:	mov    rbp,QWORD PTR [r11+0x30]
   140004ae8:	mov    rsp,r11
   140004aeb:	pop    r14
   140004aed:	pop    rdi
   140004aee:	pop    rsi
   140004aef:	ret    
   140004af0:	int3   
   140004af1:	int3   
   140004af2:	int3   
   140004af3:	int3   
   140004af4:	int3   
   140004af5:	int3   
   140004af6:	int3   
   140004af7:	int3   
   140004af8:	mov    rax,rsp
   140004afb:	mov    QWORD PTR [rax+0x8],rbx
   140004aff:	mov    QWORD PTR [rax+0x10],rsi
   140004b03:	mov    QWORD PTR [rax+0x18],rdi
   140004b07:	push   rbp
   140004b08:	push   r14
   140004b0a:	push   r15
   140004b0c:	lea    rbp,[rax-0xe8]
   140004b13:	sub    rsp,0x1d0
   140004b1a:	mov    rax,QWORD PTR [rip+0x54f7]        # 0x14000a018
   140004b21:	xor    rax,rsp
   140004b24:	mov    QWORD PTR [rbp+0xc0],rax
   140004b2b:	mov    r14,QWORD PTR [rbp+0x120]
   140004b32:	xor    r15d,r15d
   140004b35:	mov    rsi,r8
   140004b38:	mov    rbx,r9
   140004b3b:	mov    QWORD PTR [r14],r15
   140004b3e:	lea    edx,[r15+0x8]
   140004b42:	mov    rcx,QWORD PTR gs:0x60
   140004b4b:	lea    r8d,[r15+0x50]
   140004b4f:	mov    rcx,QWORD PTR [rcx+0x30]
   140004b53:	call   QWORD PTR [rip+0x28df]        # 0x140007438
   140004b59:	mov    rdi,rax
   140004b5c:	test   rax,rax
   140004b5f:	jne    0x140004b6b
   140004b61:	mov    ebx,0xc0000017
   140004b66:	jmp    0x140004cb9
   140004b6b:	xor    edx,edx
   140004b6d:	mov    rcx,rax
   140004b70:	lea    r8d,[rdx+0x50]
   140004b74:	call   0x140005efe
   140004b79:	mov    rax,QWORD PTR [rbx]
   140004b7c:	lea    rcx,[rdi+0x10]
   140004b80:	mov    QWORD PTR [rdi+0x40],rax
   140004b84:	lea    rbx,[rdi+0x48]
   140004b88:	mov    DWORD PTR [rbx],0x74434450
   140004b8e:	xor    eax,eax
   140004b90:	mov    DWORD PTR [rdi],0x50636450
   140004b96:	mov    QWORD PTR [rdi+0x38],rsi
   140004b9a:	mov    DWORD PTR [rdi+0x2c],0x1
   140004ba1:	mov    QWORD PTR [rcx],rax
   140004ba4:	mov    QWORD PTR [rcx+0x8],rax
   140004ba8:	call   QWORD PTR [rip+0x2602]        # 0x1400071b0
   140004bae:	lea    rdx,[rip+0x30a3]        # 0x140007c58
   140004bb5:	lea    rcx,[rsp+0x68]
   140004bba:	call   QWORD PTR [rip+0x2820]        # 0x1400073e0
   140004bc0:	xor    edx,edx
   140004bc2:	lea    rcx,[rbp+0x70]
   140004bc6:	lea    r8d,[rdx+0x48]
   140004bca:	call   0x140005efe
   140004bcf:	mov    eax,0x20000
   140004bd4:	lea    rcx,[rbp-0x80]
   140004bd8:	mov    esi,0xf0
   140004bdd:	mov    QWORD PTR [rbp+0x90],rax
   140004be4:	mov    r8d,esi
   140004be7:	mov    DWORD PTR [rbp+0x70],eax
   140004bea:	xor    edx,edx
   140004bec:	mov    QWORD PTR [rbp+0x80],rsi
   140004bf3:	call   0x140005efe
   140004bf8:	mov    QWORD PTR [rsp+0x50],r15
   140004bfd:	lea    rax,[rsp+0x60]
   140004c02:	mov    QWORD PTR [rsp+0x48],r15
   140004c07:	lea    r9,[rbp+0x70]
   140004c0b:	mov    QWORD PTR [rsp+0x40],r15
   140004c10:	lea    rdx,[rsp+0x68]
   140004c15:	mov    QWORD PTR [rsp+0x38],rax
   140004c1a:	xor    r8d,r8d
   140004c1d:	lea    rax,[rbp-0x80]
   140004c21:	mov    QWORD PTR [rsp+0x60],rsi
   140004c26:	mov    QWORD PTR [rsp+0x30],rax
   140004c2b:	lea    rsi,[rdi+0x8]
   140004c2f:	mov    QWORD PTR [rsp+0x28],r15
   140004c34:	mov    rcx,rsi
   140004c37:	mov    DWORD PTR [rsp+0x20],0xa0000
   140004c3f:	mov    DWORD PTR [rbp-0x58],r15d
   140004c43:	mov    DWORD PTR [rbp-0x50],0x2a
   140004c4a:	mov    DWORD PTR [rbp-0x4c],0x2
   140004c51:	mov    QWORD PTR [rbp-0x48],rbx
   140004c55:	mov    QWORD PTR [rbp-0x80],0xf000c8
   140004c5d:	mov    QWORD PTR [rbp-0x78],r15
   140004c61:	mov    QWORD PTR [rbp-0x70],r15
   140004c65:	call   QWORD PTR [rip+0x275d]        # 0x1400073c8
   140004c6b:	mov    ebx,eax
   140004c6d:	cmp    eax,0xc0000041
   140004c72:	jne    0x140004c7b
   140004c74:	mov    ebx,DWORD PTR [rsi]
   140004c76:	mov    QWORD PTR [rsi],r15
   140004c79:	jmp    0x140004cad
   140004c7b:	test   eax,eax
   140004c7d:	js     0x140004cb1
   140004c7f:	cmp    QWORD PTR [rdi+0x40],r15
   140004c83:	je     0x140004ca7
   140004c85:	mov    rdx,QWORD PTR [rsi]
   140004c88:	lea    rcx,[rdi+0x20]
   140004c8c:	mov    r9,rdi
   140004c8f:	mov    QWORD PTR [rsp+0x20],r15
   140004c94:	lea    r8,[rip+0x1c5]        # 0x140004e60
   140004c9b:	call   QWORD PTR [rip+0x2737]        # 0x1400073d8
   140004ca1:	mov    ebx,eax
   140004ca3:	test   eax,eax
   140004ca5:	js     0x140004cb1
   140004ca7:	mov    QWORD PTR [r14],rdi
   140004caa:	mov    ebx,r15d
   140004cad:	test   ebx,ebx
   140004caf:	jns    0x140004cb9
   140004cb1:	mov    rcx,rdi
   140004cb4:	call   0x140004cf0
   140004cb9:	mov    eax,ebx
   140004cbb:	mov    rcx,QWORD PTR [rbp+0xc0]
   140004cc2:	xor    rcx,rsp
   140004cc5:	call   0x1400056a0
   140004cca:	lea    r11,[rsp+0x1d0]
   140004cd2:	mov    rbx,QWORD PTR [r11+0x20]
   140004cd6:	mov    rsi,QWORD PTR [r11+0x28]
   140004cda:	mov    rdi,QWORD PTR [r11+0x30]
   140004cde:	mov    rsp,r11
   140004ce1:	pop    r15
   140004ce3:	pop    r14
   140004ce5:	pop    rbp
   140004ce6:	ret    
   140004ce7:	int3   
   140004ce8:	int3   
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	rex push rbx
   140004cf2:	sub    rsp,0x20
   140004cf6:	and    DWORD PTR [rcx],0x0
   140004cf9:	mov    rbx,rcx
   140004cfc:	mov    rcx,QWORD PTR [rcx+0x20]
   140004d00:	test   rcx,rcx
   140004d03:	je     0x140004d10
   140004d05:	call   QWORD PTR [rip+0x2705]        # 0x140007410
   140004d0b:	and    QWORD PTR [rbx+0x20],0x0
   140004d10:	mov    rcx,QWORD PTR [rbx+0x8]
   140004d14:	test   rcx,rcx
   140004d17:	je     0x140004d24
   140004d19:	call   QWORD PTR [rip+0x23f9]        # 0x140007118
   140004d1f:	and    QWORD PTR [rbx+0x8],0x0
   140004d24:	mov    rcx,QWORD PTR gs:0x60
   140004d2d:	mov    r8,rbx
   140004d30:	xor    edx,edx
   140004d32:	mov    rcx,QWORD PTR [rcx+0x30]
   140004d36:	add    rsp,0x20
   140004d3a:	pop    rbx
   140004d3b:	rex.W jmp QWORD PTR [rip+0x26fe]        # 0x140007440
   140004d42:	int3   
   140004d43:	int3   
   140004d44:	int3   
   140004d45:	int3   
   140004d46:	int3   
   140004d47:	int3   
   140004d48:	mov    QWORD PTR [rsp+0x10],rbx
   140004d4d:	mov    QWORD PTR [rsp+0x18],rsi
   140004d52:	push   rdi
   140004d53:	sub    rsp,0x40
   140004d57:	and    DWORD PTR [rsp+0x30],0x0
   140004d5c:	lea    rdi,[rcx+0x10]
   140004d60:	xor    eax,eax
   140004d62:	mov    rbx,rcx
   140004d65:	mov    rcx,rdi
   140004d68:	mov    QWORD PTR [rsp+0x34],rax
   140004d6d:	mov    DWORD PTR [rsp+0x3c],eax
   140004d71:	call   QWORD PTR [rip+0x2419]        # 0x140007190
   140004d77:	mov    rcx,QWORD PTR [rbx+0x8]
   140004d7b:	test   rcx,rcx
   140004d7e:	jne    0x140004d8b
   140004d80:	mov    rcx,rdi
   140004d83:	call   QWORD PTR [rip+0x242f]        # 0x1400071b8
   140004d89:	jmp    0x140004df4
   140004d8b:	mov    edx,0x1
   140004d90:	call   QWORD PTR [rip+0x266a]        # 0x140007400
   140004d96:	mov    rcx,QWORD PTR [rbx+0x8]
   140004d9a:	lea    r8,[rsp+0x30]
   140004d9f:	and    QWORD PTR [rsp+0x20],0x0
   140004da5:	mov    r9d,0x10
   140004dab:	xor    edx,edx
   140004dad:	call   QWORD PTR [rip+0x2665]        # 0x140007418
   140004db3:	mov    rcx,rdi
   140004db6:	call   QWORD PTR [rip+0x23fc]        # 0x1400071b8
   140004dbc:	cmp    QWORD PTR [rbx+0x20],0x0
   140004dc1:	je     0x140004df4
   140004dc3:	mov    eax,DWORD PTR [rsp+0x34]
   140004dc7:	lea    rsi,[rbx+0x2c]
   140004dcb:	mov    DWORD PTR [rbx+0x28],eax
   140004dce:	jmp    0x140004de5
   140004dd0:	xor    r9d,r9d
   140004dd3:	lea    rdx,[rsp+0x50]
   140004dd8:	mov    rcx,rsi
   140004ddb:	lea    r8d,[r9+0x4]
   140004ddf:	call   QWORD PTR [rip+0x25eb]        # 0x1400073d0
   140004de5:	mov    eax,DWORD PTR [rsi]
   140004de7:	mov    DWORD PTR [rsp+0x50],eax
   140004deb:	mov    eax,DWORD PTR [rbx+0x28]
   140004dee:	cmp    DWORD PTR [rsp+0x50],eax
   140004df2:	jne    0x140004dd0
   140004df4:	mov    rcx,rdi
   140004df7:	call   QWORD PTR [rip+0x23c3]        # 0x1400071c0
   140004dfd:	call   QWORD PTR [rip+0x2345]        # 0x140007148
   140004e03:	mov    DWORD PTR [rdi+0x8],eax
   140004e06:	mov    rcx,rdi
   140004e09:	mov    rsi,QWORD PTR [rbx+0x8]
   140004e0d:	and    QWORD PTR [rbx+0x8],0x0
   140004e12:	and    DWORD PTR [rdi+0x8],0x0
   140004e16:	call   QWORD PTR [rip+0x23ac]        # 0x1400071c8
   140004e1c:	test   rsi,rsi
   140004e1f:	je     0x140004e2a
   140004e21:	mov    rcx,rsi
   140004e24:	call   QWORD PTR [rip+0x22ee]        # 0x140007118
   140004e2a:	mov    rcx,QWORD PTR [rbx+0x20]
   140004e2e:	test   rcx,rcx
   140004e31:	je     0x140004e39
   140004e33:	call   QWORD PTR [rip+0x25bf]        # 0x1400073f8
   140004e39:	mov    rcx,rbx
   140004e3c:	call   0x140004cf0
   140004e41:	mov    rbx,QWORD PTR [rsp+0x58]
   140004e46:	mov    rsi,QWORD PTR [rsp+0x60]
   140004e4b:	add    rsp,0x40
   140004e4f:	pop    rdi
   140004e50:	ret    
   140004e51:	int3   
   140004e52:	int3   
   140004e53:	int3   
   140004e54:	int3   
   140004e55:	int3   
   140004e56:	int3   
   140004e57:	int3   
   140004e58:	int3   
   140004e59:	int3   
   140004e5a:	int3   
   140004e5b:	int3   
   140004e5c:	int3   
   140004e5d:	int3   
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	mov    QWORD PTR [rsp+0x8],rbx
   140004e65:	mov    QWORD PTR [rsp+0x18],rbp
   140004e6a:	push   rsi
   140004e6b:	push   rdi
   140004e6c:	push   r14
   140004e6e:	sub    rsp,0x1f0
   140004e75:	mov    rax,QWORD PTR [rip+0x519c]        # 0x14000a018
   140004e7c:	xor    rax,rsp
   140004e7f:	mov    QWORD PTR [rsp+0x1e0],rax
   140004e87:	mov    rbx,rdx
   140004e8a:	mov    eax,0x1
   140004e8f:	lock xadd DWORD PTR [rdx+0x30],eax
   140004e94:	inc    eax
   140004e96:	cmp    eax,0x1
   140004e99:	jne    0x140004fe2
   140004e9f:	lea    rsi,[rdx+0x10]
   140004ea3:	lea    rdi,[rdx+0x2c]
   140004ea7:	xor    edx,edx
   140004ea9:	lea    rcx,[rsp+0x50]
   140004eae:	mov    r8d,0x98
   140004eb4:	call   0x140005efe
   140004eb9:	lea    r9,[rsp+0x48]
   140004ebe:	mov    r8d,0x98
   140004ec4:	lea    rdx,[rsp+0x50]
   140004ec9:	mov    ecx,0x20000000
   140004ece:	call   QWORD PTR [rip+0x254c]        # 0x140007420
   140004ed4:	mov    rcx,rsi
   140004ed7:	call   QWORD PTR [rip+0x22b3]        # 0x140007190
   140004edd:	mov    rcx,QWORD PTR [rbx+0x8]
   140004ee1:	test   rcx,rcx
   140004ee4:	jne    0x140004ef4
   140004ee6:	mov    rcx,rsi
   140004ee9:	call   QWORD PTR [rip+0x22c9]        # 0x1400071b8
   140004eef:	jmp    0x140004fbc
   140004ef4:	and    QWORD PTR [rsp+0x38],0x0
   140004efa:	lea    rax,[rsp+0x50]
   140004eff:	mov    QWORD PTR [rsp+0x30],rax
   140004f04:	xor    r9d,r9d
   140004f07:	lea    rax,[rsp+0x40]
   140004f0c:	mov    QWORD PTR [rsp+0x40],0xf0
   140004f15:	mov    QWORD PTR [rsp+0x28],rax
   140004f1a:	xor    r8d,r8d
   140004f1d:	lea    rax,[rsp+0xf0]
   140004f25:	xor    edx,edx
   140004f27:	mov    QWORD PTR [rsp+0x20],rax
   140004f2c:	call   QWORD PTR [rip+0x253e]        # 0x140007470
   140004f32:	mov    edx,0x20000000
   140004f37:	lea    rcx,[rsp+0x50]
   140004f3c:	mov    ebp,eax
   140004f3e:	call   QWORD PTR [rip+0x24a4]        # 0x1400073e8
   140004f44:	mov    r14,rax
   140004f47:	mov    eax,0xc0000023
   140004f4c:	cmp    ebp,eax
   140004f4e:	jne    0x140004f7f
   140004f50:	mov    r9d,eax
   140004f53:	lea    r8,[rip+0x2d16]        # 0x140007c70
   140004f5a:	lea    rdx,[rip+0x2d27]        # 0x140007c88
   140004f61:	mov    ecx,0x1
   140004f66:	call   0x140005144
   140004f6b:	mov    rcx,QWORD PTR [rbx+0x8]
   140004f6f:	mov    r8,r14
   140004f72:	xor    edx,edx
   140004f74:	call   QWORD PTR [rip+0x24b6]        # 0x140007430
   140004f7a:	jmp    0x140004ee6
   140004f7f:	mov    rcx,rsi
   140004f82:	call   QWORD PTR [rip+0x2230]        # 0x1400071b8
   140004f88:	test   ebp,ebp
   140004f8a:	jns    0x140004fa9
   140004f8c:	mov    r9d,ebp
   140004f8f:	lea    r8,[rip+0x2cda]        # 0x140007c70
   140004f96:	lea    rdx,[rip+0x2ceb]        # 0x140007c88
   140004f9d:	mov    ecx,0x1
   140004fa2:	call   0x140005144
   140004fa7:	jmp    0x140004fbc
   140004fa9:	mov    r8,r14
   140004fac:	lea    rdx,[rsp+0xf0]
   140004fb4:	mov    rcx,rbx
   140004fb7:	call   0x140005010
   140004fbc:	lock inc DWORD PTR [rdi]
   140004fbf:	mov    ecx,DWORD PTR [rdi]
   140004fc1:	mov    eax,DWORD PTR [rbx+0x28]
   140004fc4:	cmp    ecx,eax
   140004fc6:	jne    0x140004fd1
   140004fc8:	mov    rcx,rdi
   140004fcb:	call   QWORD PTR [rip+0x241f]        # 0x1400073f0
   140004fd1:	or     eax,0xffffffff
   140004fd4:	lock xadd DWORD PTR [rbx+0x30],eax
   140004fd9:	sub    eax,0x1
   140004fdc:	jg     0x140004ea7
   140004fe2:	mov    rcx,QWORD PTR [rsp+0x1e0]
   140004fea:	xor    rcx,rsp
   140004fed:	call   0x1400056a0
   140004ff2:	lea    r11,[rsp+0x1f0]
   140004ffa:	mov    rbx,QWORD PTR [r11+0x20]
   140004ffe:	mov    rbp,QWORD PTR [r11+0x30]
   140005002:	mov    rsp,r11
   140005005:	pop    r14
   140005007:	pop    rdi
   140005008:	pop    rsi
   140005009:	ret    
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	int3   
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	mov    QWORD PTR [rsp+0x8],rbx
   140005015:	mov    QWORD PTR [rsp+0x10],rbp
   14000501a:	mov    QWORD PTR [rsp+0x18],rsi
   14000501f:	push   rdi
   140005020:	sub    rsp,0x20
   140005024:	movzx  eax,WORD PTR [rdx+0x4]
   140005028:	mov    rdi,rcx
   14000502b:	mov    ecx,0xff
   140005030:	xor    ebx,ebx
   140005032:	and    ax,cx
   140005035:	mov    rsi,r8
   140005038:	movzx  r9d,ax
   14000503c:	mov    rbp,rdx
   14000503f:	mov    r10d,r9d
   140005042:	lea    ecx,[rbx+0x2]
   140005045:	sub    r10d,0x1
   140005049:	je     0x1400050dc
   14000504f:	sub    r10d,ecx
   140005052:	je     0x1400050a3
   140005054:	cmp    r10d,ecx
   140005057:	je     0x140005065
   140005059:	lea    rdx,[rip+0x2cf0]        # 0x140007d50
   140005060:	jmp    0x140005118
   140005065:	lea    rcx,[rdi+0x10]
   140005069:	call   QWORD PTR [rip+0x2151]        # 0x1400071c0
   14000506f:	call   QWORD PTR [rip+0x20d3]        # 0x140007148
   140005075:	mov    DWORD PTR [rdi+0x18],eax
   140005078:	mov    rcx,QWORD PTR [rdi+0x8]
   14000507c:	test   rcx,rcx
   14000507f:	je     0x140005090
   140005081:	call   QWORD PTR [rip+0x2381]        # 0x140007408
   140005087:	and    QWORD PTR [rdi+0x8],rbx
   14000508b:	mov    ebx,0xc0000042
   140005090:	and    DWORD PTR [rdi+0x18],0x0
   140005094:	lea    rcx,[rdi+0x10]
   140005098:	call   QWORD PTR [rip+0x212a]        # 0x1400071c8
   14000509e:	jmp    0x140005124
   1400050a3:	mov    eax,0x2000
   1400050a8:	test   WORD PTR [rdx+0x4],ax
   1400050ac:	jne    0x1400050dc
   1400050ae:	movsx  rax,WORD PTR [rdx+0x2]
   1400050b3:	cmp    rax,0xf0
   1400050b9:	jae    0x1400050c2
   1400050bb:	mov    ebx,0xc000000d
   1400050c0:	jmp    0x140005124
   1400050c2:	mov    rbx,QWORD PTR [rdi+0x40]
   1400050c6:	mov    rcx,rbx
   1400050c9:	call   QWORD PTR [rip+0x23b1]        # 0x140007480
   1400050cf:	mov    rcx,QWORD PTR [rdi+0x38]
   1400050d3:	mov    rdx,rbp
   1400050d6:	call   rbx
   1400050d8:	xor    ebx,ebx
   1400050da:	jmp    0x140005124
   1400050dc:	mov    r9d,DWORD PTR [r8+0x14]
   1400050e0:	lea    rdx,[rip+0x2be9]        # 0x140007cd0
   1400050e7:	lea    r8,[rip+0x2bc2]        # 0x140007cb0
   1400050ee:	call   0x140005144
   1400050f3:	mov    rcx,QWORD PTR [rdi+0x8]
   1400050f7:	mov    r8,rsi
   1400050fa:	xor    edx,edx
   1400050fc:	call   QWORD PTR [rip+0x232e]        # 0x140007430
   140005102:	mov    ebx,eax
   140005104:	test   eax,eax
   140005106:	jns    0x140005124
   140005108:	mov    r9d,DWORD PTR [rsi+0x14]
   14000510c:	lea    rdx,[rip+0x2c0d]        # 0x140007d20
   140005113:	mov    ecx,0x1
   140005118:	lea    r8,[rip+0x2b91]        # 0x140007cb0
   14000511f:	call   0x140005144
   140005124:	mov    rbp,QWORD PTR [rsp+0x38]
   140005129:	mov    eax,ebx
   14000512b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005130:	mov    rsi,QWORD PTR [rsp+0x40]
   140005135:	add    rsp,0x20
   140005139:	pop    rdi
   14000513a:	ret    
   14000513b:	int3   
   14000513c:	int3   
   14000513d:	int3   
   14000513e:	int3   
   14000513f:	int3   
   140005140:	int3   
   140005141:	int3   
   140005142:	int3   
   140005143:	int3   
   140005144:	mov    rax,rsp
   140005147:	mov    QWORD PTR [rax+0x10],rdx
   14000514b:	mov    QWORD PTR [rax+0x18],r8
   14000514f:	mov    QWORD PTR [rax+0x20],r9
   140005153:	sub    rsp,0x28
   140005157:	mov    r8,rdx
   14000515a:	lea    r9,[rax+0x18]
   14000515e:	mov    edx,ecx
   140005160:	mov    ecx,0x92
   140005165:	call   QWORD PTR [rip+0x22bd]        # 0x140007428
   14000516b:	add    rsp,0x28
   14000516f:	ret    
   140005170:	int3   
   140005171:	int3   
   140005172:	int3   
   140005173:	int3   
   140005174:	int3   
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	rex push rbx
   14000517a:	sub    rsp,0x20
   14000517e:	mov    r8d,0x1
   140005184:	lea    rdx,[rip+0x4e75]        # 0x14000a000
   14000518b:	mov    rbx,rcx
   14000518e:	call   0x14000584a
   140005193:	lea    rax,[rip+0x24f6]        # 0x140007690
   14000519a:	mov    QWORD PTR [rbx],rax
   14000519d:	mov    rax,rbx
   1400051a0:	add    rsp,0x20
   1400051a4:	pop    rbx
   1400051a5:	ret    
   1400051a6:	int3   
   1400051a7:	int3   
   1400051a8:	int3   
   1400051a9:	int3   
   1400051aa:	int3   
   1400051ab:	int3   
   1400051ac:	mov    QWORD PTR [rsp+0x8],rcx
   1400051b1:	sub    rsp,0x48
   1400051b5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400051ba:	call   0x140005706
   1400051bf:	mov    QWORD PTR [rsp+0x20],rax
   1400051c4:	cmp    QWORD PTR [rsp+0x20],0x0
   1400051ca:	jne    0x140005232
   1400051cc:	mov    rcx,QWORD PTR [rsp+0x50]
   1400051d1:	call   0x14000583e
   1400051d6:	test   eax,eax
   1400051d8:	jne    0x140005230
   1400051da:	mov    eax,DWORD PTR [rip+0x4f38]        # 0x14000a118
   1400051e0:	and    eax,0x1
   1400051e3:	test   eax,eax
   1400051e5:	jne    0x14000520e
   1400051e7:	mov    eax,DWORD PTR [rip+0x4f2b]        # 0x14000a118
   1400051ed:	or     eax,0x1
   1400051f0:	mov    DWORD PTR [rip+0x4f22],eax        # 0x14000a118
   1400051f6:	lea    rcx,[rip+0x4f03]        # 0x14000a100
   1400051fd:	call   0x140005178
   140005202:	lea    rcx,[rip+0xff7]        # 0x140006200
   140005209:	call   0x140005820
   14000520e:	lea    rdx,[rip+0x4eeb]        # 0x14000a100
   140005215:	lea    rcx,[rsp+0x28]
   14000521a:	call   0x1400038d0
   14000521f:	lea    rdx,[rip+0x3932]        # 0x140008b58
   140005226:	lea    rcx,[rsp+0x28]
   14000522b:	call   0x140005856
   140005230:	jmp    0x1400051b5
   140005232:	mov    rax,QWORD PTR [rsp+0x20]
   140005237:	add    rsp,0x48
   14000523b:	ret    
   14000523c:	int3   
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	int3   
   140005241:	int3   
   140005242:	int3   
   140005243:	int3   
   140005244:	mov    QWORD PTR [rsp+0x8],rcx
   140005249:	sub    rsp,0x28
   14000524d:	mov    rcx,QWORD PTR [rsp+0x30]
   140005252:	call   0x140005712
   140005257:	add    rsp,0x28
   14000525b:	ret    
   14000525c:	int3   
   14000525d:	int3   
   14000525e:	int3   
   14000525f:	int3   
   140005260:	int3   
   140005261:	int3   
   140005262:	int3   
   140005263:	int3   
   140005264:	rex push rbx
   140005266:	sub    rsp,0x20
   14000526a:	mov    rbx,rcx
   14000526d:	call   0x14000571e
   140005272:	lea    rax,[rip+0x2307]        # 0x140007580
   140005279:	mov    QWORD PTR [rbx],rax
   14000527c:	mov    rax,rbx
   14000527f:	add    rsp,0x20
   140005283:	pop    rbx
   140005284:	ret    
   140005285:	int3   
   140005286:	int3   
   140005287:	int3   
   140005288:	int3   
   140005289:	int3   
   14000528a:	int3   
   14000528b:	int3   
   14000528c:	mov    QWORD PTR [rsp+0x8],rcx
   140005291:	push   rbx
   140005292:	sub    rsp,0x20
   140005296:	mov    QWORD PTR [rsp+0x30],rdx
   14000529b:	mov    rbx,rcx
   14000529e:	lea    rdx,[rsp+0x30]
   1400052a3:	call   0x140005748
   1400052a8:	lea    rax,[rip+0x22d1]        # 0x140007580
   1400052af:	mov    QWORD PTR [rbx],rax
   1400052b2:	mov    rax,rbx
   1400052b5:	add    rsp,0x20
   1400052b9:	pop    rbx
   1400052ba:	ret    
   1400052bb:	int3   
   1400052bc:	int3   
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	int3   
   1400052c1:	int3   
   1400052c2:	int3   
   1400052c3:	int3   
   1400052c4:	jmp    0x14000573c
   1400052c9:	int3   
   1400052ca:	int3   
   1400052cb:	int3   
   1400052cc:	int3   
   1400052cd:	int3   
   1400052ce:	int3   
   1400052cf:	int3   
   1400052d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400052d5:	push   rdi
   1400052d6:	sub    rsp,0x20
   1400052da:	mov    ebx,edx
   1400052dc:	mov    rdi,rcx
   1400052df:	call   0x14000573c
   1400052e4:	test   bl,0x1
   1400052e7:	je     0x1400052f1
   1400052e9:	mov    rcx,rdi
   1400052ec:	call   0x140005244
   1400052f1:	mov    rax,rdi
   1400052f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400052f9:	add    rsp,0x20
   1400052fd:	pop    rdi
   1400052fe:	ret    
   1400052ff:	int3   
   140005300:	int3   
   140005301:	int3   
   140005302:	int3   
   140005303:	int3   
   140005304:	int3   
   140005305:	int3   
   140005306:	int3   
   140005307:	int3   
   140005308:	sub    rsp,0x48
   14000530c:	mov    rdx,rcx
   14000530f:	lea    rcx,[rsp+0x20]
   140005314:	call   0x14000528c
   140005319:	lea    rdx,[rip+0x3700]        # 0x140008a20
   140005320:	lea    rcx,[rsp+0x20]
   140005325:	call   0x140005856
   14000532a:	int3   
   14000532b:	int3   
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	int3   
   140005331:	int3   
   140005332:	int3   
   140005333:	int3   
   140005334:	sub    rsp,0x48
   140005338:	mov    rdx,rcx
   14000533b:	lea    rcx,[rsp+0x20]
   140005340:	call   0x14000528c
   140005345:	lea    rdx,[rip+0x373c]        # 0x140008a88
   14000534c:	lea    rcx,[rsp+0x20]
   140005351:	call   0x140005856
   140005356:	int3   
   140005357:	int3   
   140005358:	int3   
   140005359:	int3   
   14000535a:	int3   
   14000535b:	int3   
   14000535c:	int3   
   14000535d:	int3   
   14000535e:	int3   
   14000535f:	int3   
   140005360:	sub    rsp,0x28
   140005364:	mov    eax,0x5a4d
   140005369:	cmp    WORD PTR [rip+0xffffffffffffac90],ax        # 0x140000000
   140005370:	je     0x140005376
   140005372:	xor    eax,eax
   140005374:	jmp    0x1400053c5
   140005376:	movsxd rcx,DWORD PTR [rip+0xffffffffffffacbf]        # 0x14000003c
   14000537d:	lea    rax,[rip+0xffffffffffffac7c]        # 0x140000000
   140005384:	add    rcx,rax
   140005387:	cmp    DWORD PTR [rcx],0x4550
   14000538d:	jne    0x140005372
   14000538f:	movzx  eax,WORD PTR [rcx+0x18]
   140005393:	cmp    eax,0x10b
   140005398:	je     0x1400053b4
   14000539a:	cmp    eax,0x20b
   14000539f:	jne    0x140005372
   1400053a1:	xor    eax,eax
   1400053a3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400053aa:	jbe    0x1400053c5
   1400053ac:	cmp    DWORD PTR [rcx+0xf8],eax
   1400053b2:	jmp    0x1400053c2
   1400053b4:	xor    eax,eax
   1400053b6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400053ba:	jbe    0x1400053c5
   1400053bc:	cmp    DWORD PTR [rcx+0xe8],eax
   1400053c2:	setne  al
   1400053c5:	mov    ecx,0x1
   1400053ca:	mov    DWORD PTR [rip+0x4d70],eax        # 0x14000a140
   1400053d0:	call   0x140005938
   1400053d5:	mov    ecx,eax
   1400053d7:	call   QWORD PTR [rip+0x1f3b]        # 0x140007318
   1400053dd:	mov    rcx,QWORD PTR [rip+0x1fcc]        # 0x1400073b0
   1400053e4:	or     rax,0xffffffffffffffff
   1400053e8:	mov    QWORD PTR [rip+0x5379],rax        # 0x14000a768
   1400053ef:	mov    QWORD PTR [rip+0x537a],rax        # 0x14000a770
   1400053f6:	mov    eax,DWORD PTR [rip+0x4d58]        # 0x14000a154
   1400053fc:	mov    DWORD PTR [rcx],eax
   1400053fe:	mov    rcx,QWORD PTR [rip+0x1ec3]        # 0x1400072c8
   140005405:	mov    eax,DWORD PTR [rip+0x4d3d]        # 0x14000a148
   14000540b:	mov    DWORD PTR [rcx],eax
   14000540d:	call   0x140005990
   140005412:	cmp    DWORD PTR [rip+0x4bf7],0x0        # 0x14000a010
   140005419:	jne    0x140005428
   14000541b:	lea    rcx,[rip+0x56e]        # 0x140005990
   140005422:	call   QWORD PTR [rip+0x1ec0]        # 0x1400072e8
   140005428:	xor    eax,eax
   14000542a:	add    rsp,0x28
   14000542e:	ret    
   14000542f:	int3   
   140005430:	int3   
   140005431:	int3   
   140005432:	int3   
   140005433:	int3   
   140005434:	int3   
   140005435:	int3   
   140005436:	int3   
   140005437:	int3   
   140005438:	int3   
   140005439:	int3   
   14000543a:	int3   
   14000543b:	int3   
   14000543c:	int3   
   14000543d:	int3   
   14000543e:	int3   
   14000543f:	int3   
   140005440:	sub    rsp,0x38
   140005444:	mov    eax,DWORD PTR [rip+0x4d06]        # 0x14000a150
   14000544a:	lea    r8,[rip+0x4ce7]        # 0x14000a138
   140005451:	mov    r9d,DWORD PTR [rip+0x4cf4]        # 0x14000a14c
   140005458:	lea    rdx,[rip+0x4cd1]        # 0x14000a130
   14000545f:	mov    DWORD PTR [rip+0x4cdf],eax        # 0x14000a144
   140005465:	lea    rcx,[rip+0x4cbc]        # 0x14000a128
   14000546c:	lea    rax,[rip+0x4cd1]        # 0x14000a144
   140005473:	mov    QWORD PTR [rsp+0x20],rax
   140005478:	call   QWORD PTR [rip+0x1ea2]        # 0x140007320
   14000547e:	mov    DWORD PTR [rip+0x4ca8],eax        # 0x14000a12c
   140005484:	add    rsp,0x38
   140005488:	ret    
   140005489:	int3   
   14000548a:	int3   
   14000548b:	int3   
   14000548c:	int3   
   14000548d:	int3   
   14000548e:	int3   
   14000548f:	int3   
   140005490:	mov    rax,rsp
   140005493:	mov    QWORD PTR [rax+0x8],rbx
   140005497:	mov    QWORD PTR [rax+0x10],rsi
   14000549b:	mov    QWORD PTR [rax+0x18],rdi
   14000549f:	mov    QWORD PTR [rax+0x20],r12
   1400054a3:	push   r14
   1400054a5:	sub    rsp,0x30
   1400054a9:	mov    rax,QWORD PTR gs:0x30
   1400054b2:	mov    rbx,QWORD PTR [rax+0x8]
   1400054b6:	xor    r14d,r14d
   1400054b9:	xor    eax,eax
   1400054bb:	lock cmpxchg QWORD PTR [rip+0x5294],rbx        # 0x14000a758
   1400054c4:	je     0x1400054e2
   1400054c6:	cmp    rax,rbx
   1400054c9:	jne    0x1400054d5
   1400054cb:	mov    ebx,0x1
   1400054d0:	mov    r14d,ebx
   1400054d3:	jmp    0x1400054e7
   1400054d5:	mov    ecx,0x3e8
   1400054da:	call   QWORD PTR [rip+0x1cc8]        # 0x1400071a8
   1400054e0:	jmp    0x1400054b9
   1400054e2:	mov    ebx,0x1
   1400054e7:	mov    eax,DWORD PTR [rip+0x5273]        # 0x14000a760
   1400054ed:	cmp    eax,ebx
   1400054ef:	jne    0x1400054fd
   1400054f1:	mov    ecx,0x1f
   1400054f6:	call   0x140005984
   1400054fb:	jmp    0x140005566
   1400054fd:	mov    eax,DWORD PTR [rip+0x525d]        # 0x14000a760
   140005503:	test   eax,eax
   140005505:	jne    0x140005560
   140005507:	mov    DWORD PTR [rip+0x5253],ebx        # 0x14000a760
   14000550d:	lea    r12,[rip+0x1fbc]        # 0x1400074d0
   140005514:	lea    rdi,[rip+0x1f9d]        # 0x1400074b8
   14000551b:	mov    QWORD PTR [rsp+0x28],rdi
   140005520:	mov    DWORD PTR [rsp+0x20],eax
   140005524:	cmp    rdi,r12
   140005527:	jae    0x140005552
   140005529:	test   eax,eax
   14000552b:	jne    0x140005556
   14000552d:	mov    rsi,QWORD PTR [rdi]
   140005530:	test   rsi,rsi
   140005533:	je     0x140005547
   140005535:	mov    rcx,rsi
   140005538:	mov    rax,QWORD PTR [rip+0x1f41]        # 0x140007480
   14000553f:	call   rax
   140005541:	call   rsi
   140005543:	mov    DWORD PTR [rsp+0x20],eax
   140005547:	add    rdi,0x8
   14000554b:	mov    QWORD PTR [rsp+0x28],rdi
   140005550:	jmp    0x140005524
   140005552:	test   eax,eax
   140005554:	je     0x140005566
   140005556:	mov    eax,0xff
   14000555b:	jmp    0x140005647
   140005560:	mov    DWORD PTR [rip+0x4bbe],ebx        # 0x14000a124
   140005566:	mov    eax,DWORD PTR [rip+0x51f4]        # 0x14000a760
   14000556c:	cmp    eax,ebx
   14000556e:	jne    0x14000558d
   140005570:	lea    rdx,[rip+0x1f39]        # 0x1400074b0
   140005577:	lea    rcx,[rip+0x1f12]        # 0x140007490
   14000557e:	call   0x140005b5a
   140005583:	mov    DWORD PTR [rip+0x51d3],0x2        # 0x14000a760
   14000558d:	test   r14d,r14d
   140005590:	jne    0x14000559b
   140005592:	xor    eax,eax
   140005594:	xchg   QWORD PTR [rip+0x51bd],rax        # 0x14000a758
   14000559b:	cmp    QWORD PTR [rip+0x51d5],0x0        # 0x14000a778
   1400055a3:	je     0x1400055d3
   1400055a5:	lea    rcx,[rip+0x51cc]        # 0x14000a778
   1400055ac:	call   0x1400059f0
   1400055b1:	test   eax,eax
   1400055b3:	je     0x1400055d3
   1400055b5:	mov    rbx,QWORD PTR [rip+0x51bc]        # 0x14000a778
   1400055bc:	mov    rcx,rbx
   1400055bf:	mov    rax,QWORD PTR [rip+0x1eba]        # 0x140007480
   1400055c6:	call   rax
   1400055c8:	xor    r8d,r8d
   1400055cb:	lea    edx,[r8+0x2]
   1400055cf:	xor    ecx,ecx
   1400055d1:	call   rbx
   1400055d3:	mov    r8,QWORD PTR [rip+0x4b5e]        # 0x14000a138
   1400055da:	mov    rdx,QWORD PTR [rip+0x4b4f]        # 0x14000a130
   1400055e1:	mov    ecx,DWORD PTR [rip+0x4b41]        # 0x14000a128
   1400055e7:	call   0x140001288
   1400055ec:	mov    DWORD PTR [rip+0x4b2e],eax        # 0x14000a120
   1400055f2:	cmp    DWORD PTR [rip+0x4b47],0x0        # 0x14000a140
   1400055f9:	jne    0x140005603
   1400055fb:	mov    ecx,eax
   1400055fd:	call   QWORD PTR [rip+0x1cfd]        # 0x140007300
   140005603:	cmp    DWORD PTR [rip+0x4b1a],0x0        # 0x14000a124
   14000560a:	jne    0x140005618
   14000560c:	call   QWORD PTR [rip+0x1d5e]        # 0x140007370
   140005612:	mov    eax,DWORD PTR [rip+0x4b08]        # 0x14000a120
   140005618:	jmp    0x140005647
   14000561a:	mov    DWORD PTR [rip+0x4b00],eax        # 0x14000a120
   140005620:	cmp    DWORD PTR [rip+0x4b19],0x0        # 0x14000a140
   140005627:	jne    0x140005632
   140005629:	mov    ecx,eax
   14000562b:	call   QWORD PTR [rip+0x1cc7]        # 0x1400072f8
   140005631:	int3   
   140005632:	cmp    DWORD PTR [rip+0x4aeb],0x0        # 0x14000a124
   140005639:	jne    0x140005647
   14000563b:	call   QWORD PTR [rip+0x1d2f]        # 0x140007370
   140005641:	mov    eax,DWORD PTR [rip+0x4ad9]        # 0x14000a120
   140005647:	mov    rbx,QWORD PTR [rsp+0x40]
   14000564c:	mov    rsi,QWORD PTR [rsp+0x48]
   140005651:	mov    rdi,QWORD PTR [rsp+0x50]
   140005656:	mov    r12,QWORD PTR [rsp+0x58]
   14000565b:	add    rsp,0x30
   14000565f:	pop    r14
   140005661:	ret    
   140005662:	int3   
   140005663:	int3   
   140005664:	int3   
   140005665:	int3   
   140005666:	int3   
   140005667:	int3   
   140005668:	int3   
   140005669:	int3   
   14000566a:	int3   
   14000566b:	int3   
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	sub    rsp,0x28
   140005674:	call   0x140005a84
   140005679:	add    rsp,0x28
   14000567d:	jmp    0x140005490
   140005682:	int3   
   140005683:	int3   
   140005684:	int3   
   140005685:	int3   
   140005686:	int3   
   140005687:	int3   
   140005688:	int3   
   140005689:	int3   
   14000568a:	int3   
   14000568b:	int3   
   14000568c:	int3   
   14000568d:	int3   
   14000568e:	int3   
   14000568f:	int3   
   140005690:	int3   
   140005691:	int3   
   140005692:	int3   
   140005693:	int3   
   140005694:	int3   
   140005695:	int3   
   140005696:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400056a0:	cmp    rcx,QWORD PTR [rip+0x4971]        # 0x14000a018
   1400056a7:	jne    0x1400056b9
   1400056a9:	rol    rcx,0x10
   1400056ad:	test   cx,0xffff
   1400056b2:	jne    0x1400056b5
   1400056b4:	ret    
   1400056b5:	ror    rcx,0x10
   1400056b9:	jmp    0x140005bd0
   1400056be:	int3   
   1400056bf:	int3   
   1400056c0:	int3   
   1400056c1:	int3   
   1400056c2:	int3   
   1400056c3:	int3   
   1400056c4:	int3   
   1400056c5:	int3   
   1400056c6:	int3   
   1400056c7:	int3   
   1400056c8:	int3   
   1400056c9:	int3   
   1400056ca:	int3   
   1400056cb:	int3   
   1400056cc:	int3   
   1400056cd:	int3   
   1400056ce:	int3   
   1400056cf:	int3   
   1400056d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400056d5:	push   rdi
   1400056d6:	sub    rsp,0x20
   1400056da:	mov    ebx,edx
   1400056dc:	mov    rdi,rcx
   1400056df:	call   QWORD PTR [rip+0x1bdb]        # 0x1400072c0
   1400056e5:	test   bl,0x1
   1400056e8:	je     0x1400056f2
   1400056ea:	mov    rcx,rdi
   1400056ed:	call   0x140005244
   1400056f2:	mov    rax,rdi
   1400056f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400056fa:	add    rsp,0x20
   1400056fe:	pop    rdi
   1400056ff:	ret    
   140005700:	int3   
   140005701:	int3   
   140005702:	int3   
   140005703:	int3   
   140005704:	int3   
   140005705:	int3   
   140005706:	jmp    QWORD PTR [rip+0x1c9c]        # 0x1400073a8
   14000570c:	int3   
   14000570d:	int3   
   14000570e:	int3   
   14000570f:	int3   
   140005710:	int3   
   140005711:	int3   
   140005712:	jmp    QWORD PTR [rip+0x1c88]        # 0x1400073a0
   140005718:	int3   
   140005719:	int3   
   14000571a:	int3   
   14000571b:	int3   
   14000571c:	int3   
   14000571d:	int3   
   14000571e:	jmp    QWORD PTR [rip+0x1c6c]        # 0x140007390
   140005724:	int3   
   140005725:	int3   
   140005726:	int3   
   140005727:	int3   
   140005728:	int3   
   140005729:	int3   
   14000572a:	int3   
   14000572b:	int3   
   14000572c:	int3   
   14000572d:	int3   
   14000572e:	int3   
   14000572f:	int3   
   140005730:	jmp    QWORD PTR [rip+0x1c52]        # 0x140007388
   140005736:	int3   
   140005737:	int3   
   140005738:	int3   
   140005739:	int3   
   14000573a:	int3   
   14000573b:	int3   
   14000573c:	jmp    QWORD PTR [rip+0x1c3e]        # 0x140007380
   140005742:	int3   
   140005743:	int3   
   140005744:	int3   
   140005745:	int3   
   140005746:	int3   
   140005747:	int3   
   140005748:	jmp    QWORD PTR [rip+0x1c2a]        # 0x140007378
   14000574e:	int3   
   14000574f:	int3   
   140005750:	int3   
   140005751:	int3   
   140005752:	int3   
   140005753:	int3   
   140005754:	sub    rsp,0x38
   140005758:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005761:	call   0x1400051ac
   140005766:	nop
   140005767:	jmp    0x14000576e
   140005769:	mov    rax,QWORD PTR [rsp+0x50]
   14000576e:	add    rsp,0x38
   140005772:	ret    
   140005773:	int3   
   140005774:	int3   
   140005775:	int3   
   140005776:	int3   
   140005777:	int3   
   140005778:	int3   
   140005779:	int3   
   14000577a:	int3   
   14000577b:	int3   
   14000577c:	mov    QWORD PTR [rsp+0x8],rbx
   140005781:	push   rdi
   140005782:	sub    rsp,0x20
   140005786:	mov    rdi,rcx
   140005789:	mov    rax,QWORD PTR [rip+0x4fe0]        # 0x14000a770
   140005790:	mov    QWORD PTR [rsp+0x38],rax
   140005795:	cmp    rax,0xffffffffffffffff
   140005799:	jne    0x1400057b2
   14000579b:	mov    rbx,QWORD PTR [rip+0x1b6e]        # 0x140007310
   1400057a2:	mov    rcx,rbx
   1400057a5:	call   QWORD PTR [rip+0x1cd5]        # 0x140007480
   1400057ab:	mov    rcx,rdi
   1400057ae:	call   rbx
   1400057b0:	jmp    0x14000580f
   1400057b2:	mov    ecx,0x8
   1400057b7:	call   0x140005d54
   1400057bc:	nop
   1400057bd:	mov    rax,QWORD PTR [rip+0x4fac]        # 0x14000a770
   1400057c4:	mov    QWORD PTR [rsp+0x38],rax
   1400057c9:	mov    rax,QWORD PTR [rip+0x4f98]        # 0x14000a768
   1400057d0:	mov    QWORD PTR [rsp+0x40],rax
   1400057d5:	lea    r8,[rsp+0x40]
   1400057da:	lea    rdx,[rsp+0x38]
   1400057df:	mov    rcx,rdi
   1400057e2:	call   0x140005d6c
   1400057e7:	mov    rbx,rax
   1400057ea:	mov    rdx,QWORD PTR [rsp+0x38]
   1400057ef:	mov    QWORD PTR [rip+0x4f7a],rdx        # 0x14000a770
   1400057f6:	mov    rdx,QWORD PTR [rsp+0x40]
   1400057fb:	mov    QWORD PTR [rip+0x4f66],rdx        # 0x14000a768
   140005802:	mov    ecx,0x8
   140005807:	call   0x140005d60
   14000580c:	mov    rax,rbx
   14000580f:	mov    rbx,QWORD PTR [rsp+0x30]
   140005814:	add    rsp,0x20
   140005818:	pop    rdi
   140005819:	ret    
   14000581a:	int3   
   14000581b:	int3   
   14000581c:	int3   
   14000581d:	int3   
   14000581e:	int3   
   14000581f:	int3   
   140005820:	sub    rsp,0x28
   140005824:	call   0x14000577c
   140005829:	neg    rax
   14000582c:	sbb    eax,eax
   14000582e:	neg    eax
   140005830:	dec    eax
   140005832:	add    rsp,0x28
   140005836:	ret    
   140005837:	int3   
   140005838:	int3   
   140005839:	int3   
   14000583a:	int3   
   14000583b:	int3   
   14000583c:	int3   
   14000583d:	int3   
   14000583e:	jmp    QWORD PTR [rip+0x1b0c]        # 0x140007350
   140005844:	int3   
   140005845:	int3   
   140005846:	int3   
   140005847:	int3   
   140005848:	int3   
   140005849:	int3   
   14000584a:	jmp    QWORD PTR [rip+0x1af8]        # 0x140007348
   140005850:	int3   
   140005851:	int3   
   140005852:	int3   
   140005853:	int3   
   140005854:	int3   
   140005855:	int3   
   140005856:	jmp    QWORD PTR [rip+0x1ae4]        # 0x140007340
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	int3   
   14000585f:	int3   
   140005860:	int3   
   140005861:	int3   
   140005862:	int3   
   140005863:	int3   
   140005864:	int3   
   140005865:	int3   
   140005866:	int3   
   140005867:	int3   
   140005868:	int3   
   140005869:	int3   
   14000586a:	int3   
   14000586b:	int3   
   14000586c:	int3   
   14000586d:	int3   
   14000586e:	int3   
   14000586f:	int3   
   140005870:	sub    rsp,0x28
   140005874:	mov    rax,QWORD PTR [rcx]
   140005877:	cmp    DWORD PTR [rax],0xe06d7363
   14000587d:	jne    0x1400058a2
   14000587f:	cmp    DWORD PTR [rax+0x18],0x4
   140005883:	jne    0x1400058a2
   140005885:	mov    ecx,DWORD PTR [rax+0x20]
   140005888:	lea    eax,[rcx-0x19930520]
   14000588e:	cmp    eax,0x2
   140005891:	jbe    0x14000589b
   140005893:	cmp    ecx,0x1994000
   140005899:	jne    0x1400058a2
   14000589b:	call   QWORD PTR [rip+0x1a8f]        # 0x140007330
   1400058a1:	int3   
   1400058a2:	xor    eax,eax
   1400058a4:	add    rsp,0x28
   1400058a8:	ret    
   1400058a9:	int3   
   1400058aa:	int3   
   1400058ab:	int3   
   1400058ac:	int3   
   1400058ad:	int3   
   1400058ae:	int3   
   1400058af:	int3   
   1400058b0:	sub    rsp,0x28
   1400058b4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005870
   1400058bb:	call   QWORD PTR [rip+0x1837]        # 0x1400070f8
   1400058c1:	xor    eax,eax
   1400058c3:	add    rsp,0x28
   1400058c7:	ret    
   1400058c8:	int3   
   1400058c9:	int3   
   1400058ca:	int3   
   1400058cb:	int3   
   1400058cc:	int3   
   1400058cd:	int3   
   1400058ce:	jmp    QWORD PTR [rip+0x1a64]        # 0x140007338
   1400058d4:	int3   
   1400058d5:	int3   
   1400058d6:	int3   
   1400058d7:	int3   
   1400058d8:	int3   
   1400058d9:	int3   
   1400058da:	int3   
   1400058db:	int3   
   1400058dc:	sub    rsp,0x18
   1400058e0:	xor    edx,edx
   1400058e2:	lea    rax,[rcx-0x1]
   1400058e6:	cmp    rax,0xfffffffffffffffd
   1400058ea:	ja     0x140005928
   1400058ec:	mov    eax,0x5a4d
   1400058f1:	cmp    WORD PTR [rcx],ax
   1400058f4:	jne    0x140005920
   1400058f6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400058f9:	jl     0x140005920
   1400058fb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005902:	jae    0x140005920
   140005904:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005908:	add    rax,rcx
   14000590b:	mov    QWORD PTR [rsp],rax
   14000590f:	cmp    DWORD PTR [rax],0x4550
   140005915:	cmovne rax,rdx
   140005919:	mov    rdx,rax
   14000591c:	mov    QWORD PTR [rsp],rax
   140005920:	jmp    0x140005928
   140005922:	xor    edx,edx
   140005924:	mov    QWORD PTR [rsp],rdx
   140005928:	mov    rax,rdx
   14000592b:	add    rsp,0x18
   14000592f:	ret    
   140005930:	int3   
   140005931:	int3   
   140005932:	int3   
   140005933:	int3   
   140005934:	int3   
   140005935:	int3   
   140005936:	int3   
   140005937:	int3   
   140005938:	rex push rbx
   14000593a:	sub    rsp,0x20
   14000593e:	mov    ebx,ecx
   140005940:	xor    ecx,ecx
   140005942:	call   QWORD PTR [rip+0x17f0]        # 0x140007138
   140005948:	test   rax,rax
   14000594b:	je     0x140005975
   14000594d:	mov    rcx,rax
   140005950:	call   0x1400058dc
   140005955:	test   rax,rax
   140005958:	je     0x140005975
   14000595a:	mov    ecx,0x2
   14000595f:	cmp    WORD PTR [rax+0x5c],cx
   140005963:	jne    0x140005969
   140005965:	mov    eax,ecx
   140005967:	jmp    0x140005977
   140005969:	cmp    WORD PTR [rax+0x5c],0x3
   14000596e:	mov    eax,0x1
   140005973:	je     0x140005977
   140005975:	mov    eax,ebx
   140005977:	add    rsp,0x20
   14000597b:	pop    rbx
   14000597c:	ret    
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	int3   
   140005981:	int3   
   140005982:	int3   
   140005983:	int3   
   140005984:	jmp    QWORD PTR [rip+0x199e]        # 0x140007328
   14000598a:	int3   
   14000598b:	int3   
   14000598c:	int3   
   14000598d:	int3   
   14000598e:	int3   
   14000598f:	int3   
   140005990:	xor    eax,eax
   140005992:	ret    
   140005993:	int3   
   140005994:	int3   
   140005995:	int3   
   140005996:	int3   
   140005997:	int3   
   140005998:	int3   
   140005999:	int3   
   14000599a:	int3   
   14000599b:	int3   
   14000599c:	int3   
   14000599d:	int3   
   14000599e:	int3   
   14000599f:	int3   
   1400059a0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400059a4:	xor    r9d,r9d
   1400059a7:	add    r8,rcx
   1400059aa:	mov    r10,rdx
   1400059ad:	movzx  eax,WORD PTR [r8+0x14]
   1400059b2:	movzx  r11d,WORD PTR [r8+0x6]
   1400059b7:	add    rax,0x18
   1400059bb:	add    rax,r8
   1400059be:	test   r11d,r11d
   1400059c1:	je     0x1400059e1
   1400059c3:	mov    edx,DWORD PTR [rax+0xc]
   1400059c6:	cmp    r10,rdx
   1400059c9:	jb     0x1400059d5
   1400059cb:	mov    ecx,DWORD PTR [rax+0x8]
   1400059ce:	add    ecx,edx
   1400059d0:	cmp    r10,rcx
   1400059d3:	jb     0x1400059e3
   1400059d5:	inc    r9d
   1400059d8:	add    rax,0x28
   1400059dc:	cmp    r9d,r11d
   1400059df:	jb     0x1400059c3
   1400059e1:	xor    eax,eax
   1400059e3:	ret    
   1400059e4:	int3   
   1400059e5:	int3   
   1400059e6:	int3   
   1400059e7:	int3   
   1400059e8:	int3   
   1400059e9:	int3   
   1400059ea:	int3   
   1400059eb:	int3   
   1400059ec:	int3   
   1400059ed:	int3   
   1400059ee:	int3   
   1400059ef:	int3   
   1400059f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400059f5:	push   rdi
   1400059f6:	sub    rsp,0x20
   1400059fa:	mov    rbx,rcx
   1400059fd:	lea    rdi,[rip+0xffffffffffffa5fc]        # 0x140000000
   140005a04:	mov    rcx,rdi
   140005a07:	call   0x140005a50
   140005a0c:	test   eax,eax
   140005a0e:	je     0x140005a32
   140005a10:	sub    rbx,rdi
   140005a13:	mov    rdx,rbx
   140005a16:	mov    rcx,rdi
   140005a19:	call   0x1400059a0
   140005a1e:	test   rax,rax
   140005a21:	je     0x140005a32
   140005a23:	mov    eax,DWORD PTR [rax+0x24]
   140005a26:	shr    eax,0x1f
   140005a29:	not    eax
   140005a2b:	and    eax,0x1
   140005a2e:	jmp    0x140005a32
   140005a30:	xor    eax,eax
   140005a32:	mov    rbx,QWORD PTR [rsp+0x30]
   140005a37:	add    rsp,0x20
   140005a3b:	pop    rdi
   140005a3c:	ret    
   140005a3d:	int3   
   140005a3e:	int3   
   140005a3f:	int3   
   140005a40:	int3   
   140005a41:	int3   
   140005a42:	int3   
   140005a43:	int3   
   140005a44:	int3   
   140005a45:	int3   
   140005a46:	int3   
   140005a47:	int3   
   140005a48:	int3   
   140005a49:	int3   
   140005a4a:	int3   
   140005a4b:	int3   
   140005a4c:	int3   
   140005a4d:	int3   
   140005a4e:	int3   
   140005a4f:	int3   
   140005a50:	mov    rax,rcx
   140005a53:	mov    ecx,0x5a4d
   140005a58:	cmp    WORD PTR [rax],cx
   140005a5b:	je     0x140005a60
   140005a5d:	xor    eax,eax
   140005a5f:	ret    
   140005a60:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005a64:	add    rcx,rax
   140005a67:	xor    eax,eax
   140005a69:	cmp    DWORD PTR [rcx],0x4550
   140005a6f:	jne    0x140005a7d
   140005a71:	mov    edx,0x20b
   140005a76:	cmp    WORD PTR [rcx+0x18],dx
   140005a7a:	sete   al
   140005a7d:	ret    
   140005a7e:	int3   
   140005a7f:	int3   
   140005a80:	int3   
   140005a81:	int3   
   140005a82:	int3   
   140005a83:	int3   
   140005a84:	mov    QWORD PTR [rsp+0x20],rbx
   140005a89:	push   rbp
   140005a8a:	mov    rbp,rsp
   140005a8d:	sub    rsp,0x20
   140005a91:	and    QWORD PTR [rbp+0x18],0x0
   140005a96:	movabs rbx,0x2b992ddfa232
   140005aa0:	mov    rax,QWORD PTR [rip+0x4571]        # 0x14000a018
   140005aa7:	cmp    rax,rbx
   140005aaa:	jne    0x140005b3f
   140005ab0:	lea    rcx,[rbp+0x18]
   140005ab4:	call   QWORD PTR [rip+0x1736]        # 0x1400071f0
   140005aba:	mov    rax,QWORD PTR [rbp+0x18]
   140005abe:	mov    QWORD PTR [rbp+0x10],rax
   140005ac2:	call   QWORD PTR [rip+0x1690]        # 0x140007158
   140005ac8:	mov    eax,eax
   140005aca:	xor    QWORD PTR [rbp+0x10],rax
   140005ace:	call   QWORD PTR [rip+0x1674]        # 0x140007148
   140005ad4:	mov    eax,eax
   140005ad6:	xor    QWORD PTR [rbp+0x10],rax
   140005ada:	call   QWORD PTR [rip+0x1708]        # 0x1400071e8
   140005ae0:	mov    eax,eax
   140005ae2:	shl    rax,0x18
   140005ae6:	xor    QWORD PTR [rbp+0x10],rax
   140005aea:	call   QWORD PTR [rip+0x16f8]        # 0x1400071e8
   140005af0:	mov    eax,eax
   140005af2:	lea    rcx,[rbp+0x10]
   140005af6:	xor    rax,QWORD PTR [rbp+0x10]
   140005afa:	xor    rax,rcx
   140005afd:	lea    rcx,[rbp+0x20]
   140005b01:	mov    QWORD PTR [rbp+0x10],rax
   140005b05:	call   QWORD PTR [rip+0x1675]        # 0x140007180
   140005b0b:	mov    eax,DWORD PTR [rbp+0x20]
   140005b0e:	movabs rcx,0xffffffffffff
   140005b18:	shl    rax,0x20
   140005b1c:	xor    rax,QWORD PTR [rbp+0x20]
   140005b20:	xor    rax,QWORD PTR [rbp+0x10]
   140005b24:	and    rax,rcx
   140005b27:	movabs rcx,0x2b992ddfa233
   140005b31:	cmp    rax,rbx
   140005b34:	cmove  rax,rcx
   140005b38:	mov    QWORD PTR [rip+0x44d9],rax        # 0x14000a018
   140005b3f:	mov    rbx,QWORD PTR [rsp+0x48]
   140005b44:	not    rax
   140005b47:	mov    QWORD PTR [rip+0x44d2],rax        # 0x14000a020
   140005b4e:	add    rsp,0x20
   140005b52:	pop    rbp
   140005b53:	ret    
   140005b54:	int3   
   140005b55:	int3   
   140005b56:	int3   
   140005b57:	int3   
   140005b58:	int3   
   140005b59:	int3   
   140005b5a:	jmp    QWORD PTR [rip+0x1780]        # 0x1400072e0
   140005b60:	int3   
   140005b61:	int3   
   140005b62:	int3   
   140005b63:	int3   
   140005b64:	int3   
   140005b65:	int3   
   140005b66:	jmp    QWORD PTR [rip+0x176c]        # 0x1400072d8
   140005b6c:	int3   
   140005b6d:	int3   
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	int3   
   140005b71:	int3   
   140005b72:	int3   
   140005b73:	int3   
   140005b74:	int3   
   140005b75:	int3   
   140005b76:	int3   
   140005b77:	int3   
   140005b78:	int3   
   140005b79:	int3   
   140005b7a:	int3   
   140005b7b:	int3   
   140005b7c:	int3   
   140005b7d:	int3   
   140005b7e:	int3   
   140005b7f:	int3   
   140005b80:	ret    0x0
   140005b83:	int3   
   140005b84:	int3   
   140005b85:	int3   
   140005b86:	int3   
   140005b87:	int3   
   140005b88:	int3   
   140005b89:	int3   
   140005b8a:	int3   
   140005b8b:	int3   
   140005b8c:	rex push rbx
   140005b8e:	sub    rsp,0x20
   140005b92:	mov    rbx,rcx
   140005b95:	xor    ecx,ecx
   140005b97:	call   QWORD PTR [rip+0x155b]        # 0x1400070f8
   140005b9d:	mov    rcx,rbx
   140005ba0:	call   QWORD PTR [rip+0x1562]        # 0x140007108
   140005ba6:	call   QWORD PTR [rip+0x15a4]        # 0x140007150
   140005bac:	mov    rcx,rax
   140005baf:	mov    edx,0xc0000409
   140005bb4:	add    rsp,0x20
   140005bb8:	pop    rbx
   140005bb9:	rex.W jmp QWORD PTR [rip+0x15b0]        # 0x140007170
   140005bc0:	int3   
   140005bc1:	int3   
   140005bc2:	int3   
   140005bc3:	int3   
   140005bc4:	int3   
   140005bc5:	int3   
   140005bc6:	int3   
   140005bc7:	int3   
   140005bc8:	int3   
   140005bc9:	int3   
   140005bca:	int3   
   140005bcb:	int3   
   140005bcc:	int3   
   140005bcd:	int3   
   140005bce:	int3   
   140005bcf:	int3   
   140005bd0:	mov    QWORD PTR [rsp+0x8],rcx
   140005bd5:	sub    rsp,0x88
   140005bdc:	lea    rcx,[rip+0x461d]        # 0x14000a200
   140005be3:	call   QWORD PTR [rip+0x186f]        # 0x140007458
   140005be9:	mov    rax,QWORD PTR [rip+0x4708]        # 0x14000a2f8
   140005bf0:	mov    QWORD PTR [rsp+0x48],rax
   140005bf5:	xor    r8d,r8d
   140005bf8:	lea    rdx,[rsp+0x50]
   140005bfd:	mov    rcx,QWORD PTR [rsp+0x48]
   140005c02:	call   QWORD PTR [rip+0x1848]        # 0x140007450
   140005c08:	mov    QWORD PTR [rsp+0x40],rax
   140005c0d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005c13:	je     0x140005c57
   140005c15:	mov    QWORD PTR [rsp+0x38],0x0
   140005c1e:	lea    rax,[rsp+0x58]
   140005c23:	mov    QWORD PTR [rsp+0x30],rax
   140005c28:	lea    rax,[rsp+0x60]
   140005c2d:	mov    QWORD PTR [rsp+0x28],rax
   140005c32:	lea    rax,[rip+0x45c7]        # 0x14000a200
   140005c39:	mov    QWORD PTR [rsp+0x20],rax
   140005c3e:	mov    r9,QWORD PTR [rsp+0x40]
   140005c43:	mov    r8,QWORD PTR [rsp+0x48]
   140005c48:	mov    rdx,QWORD PTR [rsp+0x50]
   140005c4d:	xor    ecx,ecx
   140005c4f:	call   QWORD PTR [rip+0x17f3]        # 0x140007448
   140005c55:	jmp    0x140005c7a
   140005c57:	mov    rax,QWORD PTR [rip+0x463a]        # 0x14000a298
   140005c5e:	mov    rax,QWORD PTR [rax]
   140005c61:	mov    QWORD PTR [rip+0x4690],rax        # 0x14000a2f8
   140005c68:	mov    rax,QWORD PTR [rip+0x4629]        # 0x14000a298
   140005c6f:	add    rax,0x8
   140005c73:	mov    QWORD PTR [rip+0x461e],rax        # 0x14000a298
   140005c7a:	mov    rax,QWORD PTR [rip+0x4677]        # 0x14000a2f8
   140005c81:	mov    QWORD PTR [rip+0x44e8],rax        # 0x14000a170
   140005c88:	mov    rax,QWORD PTR [rsp+0x90]
   140005c90:	mov    QWORD PTR [rip+0x45e9],rax        # 0x14000a280
   140005c97:	mov    DWORD PTR [rip+0x44bf],0xc0000409        # 0x14000a160
   140005ca1:	mov    DWORD PTR [rip+0x44b9],0x1        # 0x14000a164
   140005cab:	mov    DWORD PTR [rip+0x44c3],0x3        # 0x14000a178
   140005cb5:	mov    eax,0x8
   140005cba:	imul   rax,rax,0x0
   140005cbe:	lea    rcx,[rip+0x44bb]        # 0x14000a180
   140005cc5:	mov    QWORD PTR [rcx+rax*1],0x2
   140005ccd:	mov    eax,0x8
   140005cd2:	imul   rax,rax,0x1
   140005cd6:	lea    rcx,[rip+0x44a3]        # 0x14000a180
   140005cdd:	mov    rdx,QWORD PTR [rip+0x4334]        # 0x14000a018
   140005ce4:	mov    QWORD PTR [rcx+rax*1],rdx
   140005ce8:	mov    eax,0x8
   140005ced:	imul   rax,rax,0x2
   140005cf1:	lea    rcx,[rip+0x4488]        # 0x14000a180
   140005cf8:	mov    rdx,QWORD PTR [rip+0x4321]        # 0x14000a020
   140005cff:	mov    QWORD PTR [rcx+rax*1],rdx
   140005d03:	mov    eax,0x8
   140005d08:	imul   rax,rax,0x0
   140005d0c:	mov    rcx,QWORD PTR [rip+0x4305]        # 0x14000a018
   140005d13:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005d18:	mov    eax,0x8
   140005d1d:	imul   rax,rax,0x1
   140005d21:	mov    rcx,QWORD PTR [rip+0x42f8]        # 0x14000a020
   140005d28:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005d2d:	lea    rcx,[rip+0x188c]        # 0x1400075c0
   140005d34:	call   0x140005b8c
   140005d39:	add    rsp,0x88
   140005d40:	ret    
   140005d41:	int3   
   140005d42:	int3   
   140005d43:	int3   
   140005d44:	int3   
   140005d45:	int3   
   140005d46:	int3   
   140005d47:	int3   
   140005d48:	jmp    QWORD PTR [rip+0x15a2]        # 0x1400072f0
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	int3   
   140005d51:	int3   
   140005d52:	int3   
   140005d53:	int3   
   140005d54:	jmp    QWORD PTR [rip+0x15fe]        # 0x140007358
   140005d5a:	int3   
   140005d5b:	int3   
   140005d5c:	int3   
   140005d5d:	int3   
   140005d5e:	int3   
   140005d5f:	int3   
   140005d60:	jmp    QWORD PTR [rip+0x1602]        # 0x140007368
   140005d66:	int3   
   140005d67:	int3   
   140005d68:	int3   
   140005d69:	int3   
   140005d6a:	int3   
   140005d6b:	int3   
   140005d6c:	jmp    QWORD PTR [rip+0x1596]        # 0x140007308
   140005d72:	int3   
   140005d73:	int3   
   140005d74:	int3   
   140005d75:	int3   
   140005d76:	int3   
   140005d77:	int3   
   140005d78:	int3   
   140005d79:	int3   
   140005d7a:	int3   
   140005d7b:	int3   
   140005d7c:	int3   
   140005d7d:	int3   
   140005d7e:	int3   
   140005d7f:	int3   
   140005d80:	int3   
   140005d81:	int3   
   140005d82:	int3   
   140005d83:	int3   
   140005d84:	int3   
   140005d85:	int3   
   140005d86:	int3   
   140005d87:	int3   
   140005d88:	int3   
   140005d89:	int3   
   140005d8a:	int3   
   140005d8b:	int3   
   140005d8c:	int3   
   140005d8d:	int3   
   140005d8e:	int3   
   140005d8f:	int3   
   140005d90:	jmp    QWORD PTR [rip+0x12ca]        # 0x140007060
   140005d96:	int3   
   140005d97:	int3   
   140005d98:	int3   
   140005d99:	int3   
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	jmp    QWORD PTR [rip+0x1312]        # 0x1400070b8
   140005da6:	int3   
   140005da7:	int3   
   140005da8:	int3   
   140005da9:	int3   
   140005daa:	int3   
   140005dab:	int3   
   140005dac:	int3   
   140005dad:	int3   
   140005dae:	int3   
   140005daf:	int3   
   140005db0:	jmp    QWORD PTR [rip+0x129a]        # 0x140007050
   140005db6:	int3   
   140005db7:	int3   
   140005db8:	int3   
   140005db9:	int3   
   140005dba:	int3   
   140005dbb:	int3   
   140005dbc:	int3   
   140005dbd:	int3   
   140005dbe:	int3   
   140005dbf:	int3   
   140005dc0:	jmp    QWORD PTR [rip+0x1282]        # 0x140007048
   140005dc6:	int3   
   140005dc7:	int3   
   140005dc8:	int3   
   140005dc9:	int3   
   140005dca:	int3   
   140005dcb:	int3   
   140005dcc:	sub    rsp,0x28
   140005dd0:	mov    r8,QWORD PTR [r9+0x38]
   140005dd4:	mov    rcx,rdx
   140005dd7:	mov    rdx,r9
   140005dda:	call   0x140005df0
   140005ddf:	mov    eax,0x1
   140005de4:	add    rsp,0x28
   140005de8:	ret    
   140005de9:	int3   
   140005dea:	int3   
   140005deb:	int3   
   140005dec:	int3   
   140005ded:	int3   
   140005dee:	int3   
   140005def:	int3   
   140005df0:	rex push rbx
   140005df2:	sub    rsp,0x20
   140005df6:	mov    r11d,DWORD PTR [r8]
   140005df9:	mov    rbx,rdx
   140005dfc:	and    r11d,0xfffffff8
   140005e00:	mov    r9,rcx
   140005e03:	test   BYTE PTR [r8],0x4
   140005e07:	mov    r10,rcx
   140005e0a:	je     0x140005e1f
   140005e0c:	mov    eax,DWORD PTR [r8+0x8]
   140005e10:	movsxd r10,DWORD PTR [r8+0x4]
   140005e14:	neg    eax
   140005e16:	add    r10,rcx
   140005e19:	movsxd rcx,eax
   140005e1c:	and    r10,rcx
   140005e1f:	movsxd rax,r11d
   140005e22:	mov    rdx,QWORD PTR [rax+r10*1]
   140005e26:	mov    rax,QWORD PTR [rbx+0x10]
   140005e2a:	mov    ecx,DWORD PTR [rax+0x8]
   140005e2d:	add    rcx,QWORD PTR [rbx+0x8]
   140005e31:	test   BYTE PTR [rcx+0x3],0xf
   140005e35:	je     0x140005e43
   140005e37:	movzx  eax,BYTE PTR [rcx+0x3]
   140005e3b:	and    eax,0xfffffff0
   140005e3e:	cdqe   
   140005e40:	add    r9,rax
   140005e43:	xor    r9,rdx
   140005e46:	mov    rcx,r9
   140005e49:	add    rsp,0x20
   140005e4d:	pop    rbx
   140005e4e:	jmp    0x1400056a0
   140005e53:	int3   
   140005e54:	int3   
   140005e55:	int3   
   140005e56:	int3   
   140005e57:	int3   
   140005e58:	int3   
   140005e59:	int3   
   140005e5a:	int3   
   140005e5b:	int3   
   140005e5c:	mov    rax,rsp
   140005e5f:	mov    QWORD PTR [rax+0x8],rbx
   140005e63:	mov    QWORD PTR [rax+0x10],rbp
   140005e67:	mov    QWORD PTR [rax+0x18],rsi
   140005e6b:	mov    QWORD PTR [rax+0x20],rdi
   140005e6f:	push   r14
   140005e71:	sub    rsp,0x20
   140005e75:	mov    rbx,QWORD PTR [r9+0x38]
   140005e79:	mov    rsi,rdx
   140005e7c:	mov    r14,r8
   140005e7f:	mov    rbp,rcx
   140005e82:	mov    rdx,r9
   140005e85:	mov    rcx,rsi
   140005e88:	mov    rdi,r9
   140005e8b:	lea    r8,[rbx+0x4]
   140005e8f:	call   0x140005df0
   140005e94:	mov    r11d,DWORD PTR [rbx+0x4]
   140005e98:	mov    r8d,0x1
   140005e9e:	mov    r10d,DWORD PTR [rbp+0x4]
   140005ea2:	mov    eax,r11d
   140005ea5:	and    eax,r8d
   140005ea8:	and    r11d,0x2
   140005eac:	and    r10b,0x66
   140005eb0:	cmove  r11d,eax
   140005eb4:	test   r11d,r11d
   140005eb7:	je     0x140005ecd
   140005eb9:	mov    r9,rdi
   140005ebc:	mov    r8,r14
   140005ebf:	mov    rdx,rsi
   140005ec2:	mov    rcx,rbp
   140005ec5:	call   0x140005d48
   140005eca:	mov    r8d,eax
   140005ecd:	mov    rbx,QWORD PTR [rsp+0x30]
   140005ed2:	mov    eax,r8d
   140005ed5:	mov    rbp,QWORD PTR [rsp+0x38]
   140005eda:	mov    rsi,QWORD PTR [rsp+0x40]
   140005edf:	mov    rdi,QWORD PTR [rsp+0x48]
   140005ee4:	add    rsp,0x20
   140005ee8:	pop    r14
   140005eea:	ret    
   140005eeb:	int3   
   140005eec:	int3   
   140005eed:	int3   
   140005eee:	int3   
   140005eef:	int3   
   140005ef0:	int3   
   140005ef1:	int3   
   140005ef2:	jmp    QWORD PTR [rip+0x14a0]        # 0x140007398
   140005ef8:	int3   
   140005ef9:	int3   
   140005efa:	int3   
   140005efb:	int3   
   140005efc:	int3   
   140005efd:	int3   
   140005efe:	jmp    QWORD PTR [rip+0x14b4]        # 0x1400073b8
   140005f04:	int3   
   140005f05:	int3   
   140005f06:	int3   
   140005f07:	int3   
   140005f08:	int3   
   140005f09:	int3   
   140005f0a:	int3   
   140005f0b:	int3   
   140005f0c:	int3   
   140005f0d:	int3   
   140005f0e:	int3   
   140005f0f:	int3   
   140005f10:	int3   
   140005f11:	int3   
   140005f12:	int3   
   140005f13:	int3   
   140005f14:	int3   
   140005f15:	int3   
   140005f16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005f20:	jmp    rax
   140005f22:	int3   
   140005f23:	int3   
   140005f24:	int3   
   140005f25:	int3   
   140005f26:	int3   
   140005f27:	int3   
   140005f28:	int3   
   140005f29:	int3   
   140005f2a:	int3   
   140005f2b:	int3   
   140005f2c:	int3   
   140005f2d:	int3   
   140005f2e:	int3   
   140005f2f:	int3   
   140005f30:	int3   
   140005f31:	int3   
   140005f32:	int3   
   140005f33:	int3   
   140005f34:	int3   
   140005f35:	int3   
   140005f36:	mov    rcx,QWORD PTR [rdx+0x50]
   140005f3d:	jmp    0x140005244
   140005f42:	mov    QWORD PTR [rsp+0x10],rdx
   140005f47:	push   rbp
   140005f48:	sub    rsp,0x40
   140005f4c:	mov    rbp,rdx
   140005f4f:	mov    DWORD PTR [rbp+0xb0],0xe
   140005f59:	lea    rax,[rip+0x40d0]        # 0x14000a030
   140005f60:	mov    rcx,QWORD PTR [rip+0x40c9]        # 0x14000a030
   140005f67:	cmp    rcx,rax
   140005f6a:	je     0x140005f88
   140005f6c:	cmp    BYTE PTR [rcx+0x19],0x2
   140005f70:	jb     0x140005f88
   140005f72:	mov    edx,0x11
   140005f77:	lea    r8,[rip+0x1772]        # 0x1400076f0
   140005f7e:	mov    rcx,QWORD PTR [rcx+0x10]
   140005f82:	call   0x140001068
   140005f87:	nop
   140005f88:	lea    rax,[rip+0xffffffffffffb717]        # 0x1400016a6
   140005f8f:	add    rsp,0x40
   140005f93:	pop    rbp
   140005f94:	ret    
   140005f95:	int3   
   140005f96:	int3   
   140005f97:	int3   
   140005f98:	int3   
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	mov    rcx,QWORD PTR [rdx+0x40]
   140005fa3:	add    rcx,0x98
   140005faa:	jmp    0x140003550
   140005faf:	mov    rcx,QWORD PTR [rdx+0x40]
   140005fb6:	add    rcx,0xb0
   140005fbd:	jmp    0x140004358
   140005fc2:	int3   
   140005fc3:	int3   
   140005fc4:	int3   
   140005fc5:	int3   
   140005fc6:	int3   
   140005fc7:	int3   
   140005fc8:	mov    rcx,QWORD PTR [rdx+0x60]
   140005fcf:	jmp    0x140005244
   140005fd4:	mov    QWORD PTR [rsp+0x10],rdx
   140005fd9:	push   rbp
   140005fda:	sub    rsp,0x20
   140005fde:	mov    rbp,rdx
   140005fe1:	mov    DWORD PTR [rbp+0x60],0xe
   140005fe8:	lea    rax,[rip+0x4041]        # 0x14000a030
   140005fef:	mov    rcx,QWORD PTR [rip+0x403a]        # 0x14000a030
   140005ff6:	cmp    rcx,rax
   140005ff9:	je     0x140006017
   140005ffb:	cmp    BYTE PTR [rcx+0x19],0x2
   140005fff:	jb     0x140006017
   140006001:	mov    edx,0x22
   140006006:	lea    r8,[rip+0x1bcb]        # 0x140007bd8
   14000600d:	mov    rcx,QWORD PTR [rcx+0x10]
   140006011:	call   0x140001068
   140006016:	nop
   140006017:	lea    rax,[rip+0xffffffffffffc610]        # 0x14000262e
   14000601e:	add    rsp,0x20
   140006022:	pop    rbp
   140006023:	ret    
   140006024:	int3   
   140006025:	int3   
   140006026:	int3   
   140006027:	int3   
   140006028:	int3   
   140006029:	int3   
   14000602a:	int3   
   14000602b:	mov    QWORD PTR [rsp+0x10],rdx
   140006030:	push   rbp
   140006031:	sub    rsp,0x20
   140006035:	mov    rbp,rdx
   140006038:	mov    DWORD PTR [rbp+0x70],0xe
   14000603f:	lea    rax,[rip+0x3fea]        # 0x14000a030
   140006046:	mov    rcx,QWORD PTR [rip+0x3fe3]        # 0x14000a030
   14000604d:	cmp    rcx,rax
   140006050:	je     0x14000606e
   140006052:	cmp    BYTE PTR [rcx+0x19],0x2
   140006056:	jb     0x14000606e
   140006058:	mov    edx,0x26
   14000605d:	lea    r8,[rip+0x1b74]        # 0x140007bd8
   140006064:	mov    rcx,QWORD PTR [rcx+0x10]
   140006068:	call   0x140001068
   14000606d:	nop
   14000606e:	lea    rax,[rip+0xffffffffffffc89e]        # 0x140002913
   140006075:	add    rsp,0x20
   140006079:	pop    rbp
   14000607a:	ret    
   14000607b:	int3   
   14000607c:	int3   
   14000607d:	int3   
   14000607e:	int3   
   14000607f:	int3   
   140006080:	int3   
   140006081:	int3   
   140006082:	mov    QWORD PTR [rsp+0x10],rdx
   140006087:	push   rbp
   140006088:	sub    rsp,0x20
   14000608c:	mov    rbp,rdx
   14000608f:	mov    rdx,QWORD PTR [rbp+0x50]
   140006093:	call   0x1400035a0
   140006098:	xor    edx,edx
   14000609a:	xor    ecx,ecx
   14000609c:	call   0x140005856
   1400060a1:	nop
   1400060a2:	int3   
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	mov    QWORD PTR [rsp+0x10],rdx
   1400060ad:	push   rbp
   1400060ae:	sub    rsp,0x20
   1400060b2:	mov    rbp,rdx
   1400060b5:	mov    rcx,QWORD PTR [rbp+0x98]
   1400060bc:	mov    QWORD PTR [rbp+0x98],rcx
   1400060c3:	xor    eax,eax
   1400060c5:	add    rcx,0x1
   1400060c9:	je     0x140006100
   1400060cb:	movabs rax,0x7fffffffffffffff
   1400060d5:	cmp    rcx,rax
   1400060d8:	ja     0x1400060e7
   1400060da:	add    rcx,rcx
   1400060dd:	call   0x1400051ac
   1400060e2:	test   rax,rax
   1400060e5:	jne    0x140006100
   1400060e7:	lea    rcx,[rbp+0x40]
   1400060eb:	call   0x140003838
   1400060f0:	lea    rdx,[rip+0x2a61]        # 0x140008b58
   1400060f7:	lea    rcx,[rbp+0x40]
   1400060fb:	call   0x140005856
   140006100:	mov    QWORD PTR [rbp+0xa8],rax
   140006107:	lea    rax,[rip+0xffffffffffffd8a9]        # 0x1400039b7
   14000610e:	add    rsp,0x20
   140006112:	pop    rbp
   140006113:	ret    
   140006114:	int3   
   140006115:	mov    QWORD PTR [rsp+0x10],rdx
   14000611a:	push   rbp
   14000611b:	sub    rsp,0x20
   14000611f:	mov    rbp,rdx
   140006122:	xor    r8d,r8d
   140006125:	mov    dl,0x1
   140006127:	mov    rcx,QWORD PTR [rbp+0x90]
   14000612e:	call   0x140003b6c
   140006133:	xor    edx,edx
   140006135:	xor    ecx,ecx
   140006137:	call   0x140005856
   14000613c:	nop
   14000613d:	int3   
   14000613e:	int3   
   14000613f:	int3   
   140006140:	int3   
   140006141:	int3   
   140006142:	int3   
   140006143:	mov    QWORD PTR [rsp+0x10],rdx
   140006148:	push   rbp
   140006149:	sub    rsp,0x20
   14000614d:	mov    rbp,rdx
   140006150:	lea    rax,[rip+0xffffffffffffdbe0]        # 0x140003d37
   140006157:	add    rsp,0x20
   14000615b:	pop    rbp
   14000615c:	ret    
   14000615d:	int3   
   14000615e:	int3   
   14000615f:	int3   
   140006160:	int3   
   140006161:	int3   
   140006162:	int3   
   140006163:	int3   
   140006164:	rex push rbp
   140006166:	sub    rsp,0x20
   14000616a:	mov    rbp,rdx
   14000616d:	mov    rax,QWORD PTR [rcx]
   140006170:	mov    rdx,rcx
   140006173:	mov    ecx,DWORD PTR [rax]
   140006175:	call   0x1400058ce
   14000617a:	nop
   14000617b:	add    rsp,0x20
   14000617f:	pop    rbp
   140006180:	ret    
   140006181:	int3   
   140006182:	int3   
   140006183:	int3   
   140006184:	int3   
   140006185:	int3   
   140006186:	int3   
   140006187:	int3   
   140006188:	mov    QWORD PTR [rsp+0x10],rdx
   14000618d:	push   rbp
   14000618e:	sub    rsp,0x20
   140006192:	mov    rbp,rdx
   140006195:	and    QWORD PTR [rbp+0x50],0x0
   14000619a:	lea    rax,[rip+0xfffffffffffff5c8]        # 0x140005769
   1400061a1:	add    rsp,0x20
   1400061a5:	pop    rbp
   1400061a6:	ret    
   1400061a7:	int3   
   1400061a8:	int3   
   1400061a9:	int3   
   1400061aa:	int3   
   1400061ab:	int3   
   1400061ac:	int3   
   1400061ad:	int3   
   1400061ae:	rex push rbp
   1400061b0:	sub    rsp,0x20
   1400061b4:	mov    rbp,rdx
   1400061b7:	mov    ecx,0x8
   1400061bc:	call   0x140005d60
   1400061c1:	nop
   1400061c2:	add    rsp,0x20
   1400061c6:	pop    rbp
   1400061c7:	ret    
   1400061c8:	int3   
   1400061c9:	int3   
   1400061ca:	int3   
   1400061cb:	int3   
   1400061cc:	int3   
   1400061cd:	int3   
   1400061ce:	int3   
   1400061cf:	int3   
   1400061d0:	rex push rbp
   1400061d2:	sub    rsp,0x20
   1400061d6:	mov    rbp,rdx
   1400061d9:	mov    rax,QWORD PTR [rcx]
   1400061dc:	xor    ecx,ecx
   1400061de:	cmp    DWORD PTR [rax],0xc0000005
   1400061e4:	sete   cl
   1400061e7:	mov    eax,ecx
   1400061e9:	add    rsp,0x20
   1400061ed:	pop    rbp
   1400061ee:	ret    
   1400061ef:	int3   
   1400061f0:	int3   
   1400061f1:	int3   
   1400061f2:	int3   
   1400061f3:	int3   
   1400061f4:	int3   
   1400061f5:	int3   
   1400061f6:	int3   
   1400061f7:	int3   
   1400061f8:	int3   
   1400061f9:	int3   
   1400061fa:	int3   
   1400061fb:	int3   
   1400061fc:	int3   
   1400061fd:	int3   
   1400061fe:	int3   
   1400061ff:	int3   
   140006200:	sub    rsp,0x28
   140006204:	lea    rcx,[rip+0x3ef5]        # 0x14000a100
   14000620b:	call   0x14000386c
   140006210:	add    rsp,0x28
   140006214:	ret    

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	(bad)  
   140007001:	add    BYTE PTR [rax],al
   140007003:	add    BYTE PTR [rax],al
   140007005:	add    BYTE PTR [rax],al
   140007007:	add    BYTE PTR [rdx],0x0
   14000700a:	add    BYTE PTR [rax],al
   14000700c:	add    BYTE PTR [rax],al
   14000700e:	add    BYTE PTR [rax+0x0],al
   140007014:	add    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax],al
   140007018:	movabs ds:0x8a00000000000095,al
   140007021:	xchg   ebp,eax
   140007022:	add    BYTE PTR [rax],al
   140007024:	add    BYTE PTR [rax],al
   140007026:	add    BYTE PTR [rax],al
   140007028:	ins    BYTE PTR es:[rdi],dx
   140007029:	xchg   ebp,eax
   14000702a:	add    BYTE PTR [rax],al
   14000702c:	add    BYTE PTR [rax],al
   14000702e:	add    BYTE PTR [rax],al
   140007030:	rex.WR xchg rbp,rax
   140007032:	add    BYTE PTR [rax],al
   140007034:	add    BYTE PTR [rax],al
   140007036:	add    BYTE PTR [rax],al
   140007038:	xor    al,0x95
   14000703a:	add    BYTE PTR [rax],al
   14000703c:	add    BYTE PTR [rax],al
   14000703e:	add    BYTE PTR [rax],al
   140007040:	mov    edx,0x95
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    dh,ah
   140007049:	xchg   esp,eax
   14000704a:	add    BYTE PTR [rax],al
   14000704c:	add    BYTE PTR [rax],al
   14000704e:	add    BYTE PTR [rax],al
   140007050:	rcl    BYTE PTR [rax+rax*1+0x0],cl
   140007057:	add    ah,cl
   140007059:	xchg   ebp,eax
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	add    BYTE PTR [rax],al
   14000705e:	add    BYTE PTR [rax],al
   140007060:	stos   BYTE PTR es:[rdi],al
   140007061:	xchg   esp,eax
   140007062:	add    BYTE PTR [rax],al
   140007064:	add    BYTE PTR [rax],al
   140007066:	add    BYTE PTR [rax],al
   140007068:	sub    al,0x96
   14000706a:	add    BYTE PTR [rax],al
   14000706c:	add    BYTE PTR [rax],al
   14000706e:	add    BYTE PTR [rax],al
   140007070:	ds xchg esi,eax
   140007072:	add    BYTE PTR [rax],al
   140007074:	add    BYTE PTR [rax],al
   140007076:	add    BYTE PTR [rax],al
   140007078:	push   rsi
   140007079:	xchg   esi,eax
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	add    BYTE PTR [rax],al
   14000707e:	add    BYTE PTR [rax],al
   140007080:	outs   dx,BYTE PTR ds:[rsi]
   140007081:	xchg   esi,eax
   140007082:	add    BYTE PTR [rax],al
   140007084:	add    BYTE PTR [rax],al
   140007086:	add    BYTE PTR [rax],al
   140007088:	adc    BYTE PTR [rsi+0x0],0x0
   14000708f:	add    BYTE PTR [rsi+rdx*4+0x0],bl
   140007096:	add    BYTE PTR [rax],al
   140007098:	rcl    BYTE PTR [rsi+0x0],0x0
   14000709f:	add    al,bl
   1400070a1:	xchg   esi,eax
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	add    BYTE PTR [rax],al
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	(bad)  
   1400070a9:	xchg   esi,eax
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    BYTE PTR [rax],al
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	test   BYTE PTR [rax+0x0],bl
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	mov    esp,0x94
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    BYTE PTR [rsi-0x68],al
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	add    BYTE PTR [rax],al
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	not    BYTE PTR [rbp+0x0]
	...
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	xchg   BYTE PTR [rax+rax*1+0x0],dl
   1400070df:	add    BYTE PTR [rax],ah
   1400070e1:	xchg   edi,eax
   1400070e2:	add    BYTE PTR [rax],al
   1400070e4:	add    BYTE PTR [rax],al
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	cwde   
   1400070e9:	xchg   esp,eax
	...
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	scas   al,BYTE PTR es:[rdi]
   1400070f9:	cwde   
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	add    BYTE PTR [rax],al
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	rex.X xchg edi,eax
   140007102:	add    BYTE PTR [rax],al
   140007104:	add    BYTE PTR [rax],al
   140007106:	add    BYTE PTR [rax],al
   140007108:	push   rax
   140007109:	cdq    
	...
   140007116:	add    BYTE PTR [rax],al
   140007118:	cwde   
   140007119:	cwde   
	...
   140007126:	add    BYTE PTR [rax],al
   140007128:	jo     0x1400070be
	...
   140007136:	add    BYTE PTR [rax],al
   140007138:	int3   
   140007139:	cwde   
	...
   140007146:	add    BYTE PTR [rax],al
   140007148:	adc    BYTE PTR [rcx+0x0],bl
   14000714e:	add    BYTE PTR [rax],al
   140007150:	ins    BYTE PTR es:[rdi],dx
   140007151:	cdq    
   140007152:	add    BYTE PTR [rax],al
   140007154:	add    BYTE PTR [rax],al
   140007156:	add    BYTE PTR [rax],al
   140007158:	cli    
   140007159:	cwde   
   14000715a:	add    BYTE PTR [rax],al
   14000715c:	add    BYTE PTR [rax],al
   14000715e:	add    BYTE PTR [rax],al
   140007160:	pop    rsi
   140007161:	cwde   
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    BYTE PTR [rax],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	jo     0x140007102
   14000716a:	add    BYTE PTR [rax],al
   14000716c:	add    BYTE PTR [rax],al
   14000716e:	add    BYTE PTR [rax],al
   140007170:	sbb    BYTE PTR [rcx+0x0],0x0
	...
   14000717f:	add    al,ah
   140007181:	cwde   
	...
   14000718e:	add    BYTE PTR [rax],al
   140007190:	pushf  
   140007191:	popf   
   140007192:	add    BYTE PTR [rax],al
   140007194:	add    BYTE PTR [rax],al
   140007196:	add    BYTE PTR [rax],al
   140007198:	add    BYTE PTR [rbp+0x0],dl
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	sbb    al,0x95
   1400071a2:	add    BYTE PTR [rax],al
   1400071a4:	add    BYTE PTR [rax],al
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400071a9:	cwde   
   1400071aa:	add    BYTE PTR [rax],al
   1400071ac:	add    BYTE PTR [rax],al
   1400071ae:	add    BYTE PTR [rax],al
   1400071b0:	mov    BYTE PTR [rbp+0x0],bl
   1400071b6:	add    BYTE PTR [rax],al
   1400071b8:	jo     0x140007157
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	add    BYTE PTR [rax],al
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	push   rsi
   1400071c1:	popf   
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	add    BYTE PTR [rax],al
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	cmp    al,0x9d
   1400071ca:	add    BYTE PTR [rax],al
   1400071cc:	add    BYTE PTR [rax],al
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	ficom  WORD PTR [rbp+0x0]
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	adc    al,0x96
	...
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	rex cdq 
   1400071ea:	add    BYTE PTR [rax],al
   1400071ec:	add    BYTE PTR [rax],al
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	es cdq 
	...
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	repnz xchg edi,eax
   140007202:	add    BYTE PTR [rax],al
   140007204:	add    BYTE PTR [rax],al
   140007206:	add    BYTE PTR [rax],al
   140007208:	rcl    BYTE PTR [rdi+0x0],1
   14000720e:	add    BYTE PTR [rax],al
   140007210:	mov    eax,0x97
   140007215:	add    BYTE PTR [rax],al
   140007217:	add    BYTE PTR [rax+0x97],ah
	...
   140007225:	add    BYTE PTR [rax],al
   140007227:	add    dh,bh
   140007229:	xchg   ebx,eax
   14000722a:	add    BYTE PTR [rax],al
   14000722c:	add    BYTE PTR [rax],al
   14000722e:	add    BYTE PTR [rax],al
   140007230:	pop    rax
   140007231:	xchg   esp,eax
   140007232:	add    BYTE PTR [rax],al
   140007234:	add    BYTE PTR [rax],al
   140007236:	add    BYTE PTR [rax],al
   140007238:	(bad)  
   140007239:	xchg   esp,eax
   14000723a:	add    BYTE PTR [rax],al
   14000723c:	add    BYTE PTR [rax],al
   14000723e:	add    BYTE PTR [rax],al
   140007240:	sub    al,0x94
   140007242:	add    BYTE PTR [rax],al
   140007244:	add    BYTE PTR [rax],al
   140007246:	add    BYTE PTR [rax],al
   140007248:	rex.X xchg esp,eax
   14000724a:	add    BYTE PTR [rax],al
   14000724c:	add    BYTE PTR [rax],al
   14000724e:	add    BYTE PTR [rax],al
   140007250:	out    dx,al
   140007251:	xchg   ebx,eax
	...
   14000725e:	add    BYTE PTR [rax],al
   140007260:	xor    al,0x97
   140007262:	add    BYTE PTR [rax],al
   140007264:	add    BYTE PTR [rax],al
   140007266:	add    BYTE PTR [rax],al
   140007268:	push   rdx
   140007269:	xchg   edi,eax
   14000726a:	add    BYTE PTR [rax],al
   14000726c:	add    BYTE PTR [rax],al
   14000726e:	add    BYTE PTR [rax],al
   140007270:	(bad)  
   140007271:	xchg   edi,eax
	...
   14000727e:	add    BYTE PTR [rax],al
   140007280:	mov    ss,WORD PTR [rdi+0x0]
   140007286:	add    BYTE PTR [rax],al
   140007288:	adc    BYTE PTR [rdi+0x0],0x0
   14000728f:	add    BYTE PTR [rax-0x69],dh
	...
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	cmp    al,0x98
   1400072a2:	add    BYTE PTR [rax],al
   1400072a4:	add    BYTE PTR [rax],al
   1400072a6:	add    BYTE PTR [rax],al
   1400072a8:	and    al,0x98
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	add    BYTE PTR [rax],al
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	or     BYTE PTR [rax+0x0],bl
	...
   1400072be:	add    BYTE PTR [rax],al
   1400072c0:	add    dl,BYTE PTR [rbx+0x0]
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	(bad)  
   1400072c9:	xchg   edx,eax
   1400072ca:	add    BYTE PTR [rax],al
   1400072cc:	add    BYTE PTR [rax],al
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	jo     0x140007263
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	add    BYTE PTR [rax],al
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	enter  0x92,0x0
   1400072dc:	add    BYTE PTR [rax],al
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	mov    esp,0x92
   1400072e5:	add    BYTE PTR [rax],al
   1400072e7:	add    BYTE PTR [rax+0x92],ch
   1400072ed:	add    BYTE PTR [rax],al
   1400072ef:	add    BYTE PTR [rdx],bl
   1400072f1:	xchg   ebx,eax
   1400072f2:	add    BYTE PTR [rax],al
   1400072f4:	add    BYTE PTR [rax],al
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	xchg   esi,eax
   1400072f9:	xchg   edx,eax
   1400072fa:	add    BYTE PTR [rax],al
   1400072fc:	add    BYTE PTR [rax],al
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	mov    ss,WORD PTR [rdx+0x0]
   140007306:	add    BYTE PTR [rax],al
   140007308:	rex.X xchg ebx,eax
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	add    BYTE PTR [rax],al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	push   rax
   140007311:	xchg   ebx,eax
   140007312:	add    BYTE PTR [rax],al
   140007314:	add    BYTE PTR [rax],al
   140007316:	add    BYTE PTR [rax],al
   140007318:	jl     0x1400072ac
   14000731a:	add    BYTE PTR [rax],al
   14000731c:	add    BYTE PTR [rax],al
   14000731e:	add    BYTE PTR [rax],al
   140007320:	push   0xffffffffffffff92
   140007322:	add    BYTE PTR [rax],al
   140007324:	add    BYTE PTR [rax],al
   140007326:	add    BYTE PTR [rax],al
   140007328:	pop    rsp
   140007329:	xchg   edx,eax
   14000732a:	add    BYTE PTR [rax],al
   14000732c:	add    BYTE PTR [rax],al
   14000732e:	add    BYTE PTR [rax],al
   140007330:	pop    rdx
   140007331:	xchg   ebx,eax
   140007332:	add    BYTE PTR [rax],al
   140007334:	add    BYTE PTR [rax],al
   140007336:	add    BYTE PTR [rax],al
   140007338:	rex.WRX xchg rdx,rax
   14000733a:	add    BYTE PTR [rax],al
   14000733c:	add    BYTE PTR [rax],al
   14000733e:	add    BYTE PTR [rax],al
   140007340:	cmp    BYTE PTR [rdx+0x0],dl
   140007346:	add    BYTE PTR [rax],al
   140007348:	sbb    BYTE PTR [rdx+0x0],dl
   14000734e:	add    BYTE PTR [rax],al
   140007350:	or     al,0x92
   140007352:	add    BYTE PTR [rax],al
   140007354:	add    BYTE PTR [rax],al
   140007356:	add    BYTE PTR [rax],al
   140007358:	xor    BYTE PTR [rbx+0x0],dl
   14000735e:	add    BYTE PTR [rax],al
   140007360:	add    dl,BYTE PTR [rdx+0x0]
   140007366:	add    BYTE PTR [rax],al
   140007368:	cmp    BYTE PTR [rbx+0x0],dl
   14000736e:	add    BYTE PTR [rax],al
   140007370:	sahf   
   140007371:	xchg   edx,eax
   140007372:	add    BYTE PTR [rax],al
   140007374:	add    BYTE PTR [rax],al
   140007376:	add    BYTE PTR [rax],al
   140007378:	loop   0x14000730b
   14000737a:	add    BYTE PTR [rax],al
   14000737c:	add    BYTE PTR [rax],al
   14000737e:	add    BYTE PTR [rax],al
   140007380:	retf   0x91
   140007383:	add    BYTE PTR [rax],al
   140007385:	add    BYTE PTR [rax],al
   140007387:	add    BYTE PTR [rcx+rdx*4+0x0],ch
   14000738e:	add    BYTE PTR [rax],al
   140007390:	mov    ss,WORD PTR [rcx+0x0]
   140007396:	add    BYTE PTR [rax],al
   140007398:	mov    ah,0x9d
   14000739a:	add    BYTE PTR [rax],al
   14000739c:	add    BYTE PTR [rax],al
   14000739e:	add    BYTE PTR [rax],al
   1400073a0:	xchg   BYTE PTR [rcx+0x0],dl
   1400073a6:	add    BYTE PTR [rax],al
   1400073a8:	jl     0x14000733b
   1400073aa:	add    BYTE PTR [rax],al
   1400073ac:	add    BYTE PTR [rax],al
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	loopne 0x140007344
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	add    BYTE PTR [rax],al
   1400073b6:	add    BYTE PTR [rax],al
   1400073b8:	mov    esi,0x9d
	...
   1400073c5:	add    BYTE PTR [rax],al
   1400073c7:	add    BYTE PTR [rsi],dl
   1400073c9:	pushf  
   1400073ca:	add    BYTE PTR [rax],al
   1400073cc:	add    BYTE PTR [rax],al
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	sub    bl,BYTE PTR [rax+rax*1+0x0]
   1400073d7:	add    BYTE PTR [rsi],bh
   1400073d9:	pushf  
   1400073da:	add    BYTE PTR [rax],al
   1400073dc:	add    BYTE PTR [rax],al
   1400073de:	add    BYTE PTR [rax],al
   1400073e0:	push   rsi
   1400073e1:	pushf  
   1400073e2:	add    BYTE PTR [rax],al
   1400073e4:	add    BYTE PTR [rax],al
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	outs   dx,BYTE PTR ds:[rsi]
   1400073e9:	pushf  
   1400073ea:	add    BYTE PTR [rax],al
   1400073ec:	add    BYTE PTR [rax],al
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	mov    BYTE PTR [rax+rax*1+0x0],bl
   1400073f7:	add    BYTE PTR [rsp+rbx*4+0x0],bl
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	mov    dh,0x9c
   140007402:	add    BYTE PTR [rax],al
   140007404:	add    BYTE PTR [rax],al
   140007406:	add    BYTE PTR [rax],al
   140007408:	(bad)  
   140007409:	pushf  
   14000740a:	add    BYTE PTR [rax],al
   14000740c:	add    BYTE PTR [rax],al
   14000740e:	add    BYTE PTR [rax],al
   140007410:	fcomp  DWORD PTR [rax+rax*1+0x0]
   140007417:	add    dl,dh
   140007419:	pushf  
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	add    BYTE PTR [rax],al
   14000741e:	add    BYTE PTR [rax],al
   140007420:	or     al,0x9d
   140007422:	add    BYTE PTR [rax],al
   140007424:	add    BYTE PTR [rax],al
   140007426:	add    BYTE PTR [rax],al
   140007428:	cs popf 
   14000742a:	add    BYTE PTR [rax],al
   14000742c:	add    BYTE PTR [rax],al
   14000742e:	add    BYTE PTR [rax],al
   140007430:	in     al,0x9b
   140007432:	add    BYTE PTR [rax],al
   140007434:	add    BYTE PTR [rax],al
   140007436:	add    BYTE PTR [rax],al
   140007438:	rcr    BYTE PTR [rbx+0x0],cl
   14000743e:	add    BYTE PTR [rax],al
   140007440:	(bad)  
   140007441:	fwait
   140007442:	add    BYTE PTR [rax],al
   140007444:	add    BYTE PTR [rax],al
   140007446:	add    BYTE PTR [rax],al
   140007448:	rcl    BYTE PTR [rbx+0x0],1
   14000744e:	add    BYTE PTR [rax],al
   140007450:	mov    dh,0x93
   140007452:	add    BYTE PTR [rax],al
   140007454:	add    BYTE PTR [rax],al
   140007456:	add    BYTE PTR [rax],al
   140007458:	movabs ds:0x8800000000000093,al
   140007461:	xchg   ebx,eax
   140007462:	add    BYTE PTR [rax],al
   140007464:	add    BYTE PTR [rax],al
   140007466:	add    BYTE PTR [rax],al
   140007468:	outs   dx,BYTE PTR ds:[rsi]
   140007469:	xchg   ebx,eax
   14000746a:	add    BYTE PTR [rax],al
   14000746c:	add    BYTE PTR [rax],al
   14000746e:	add    BYTE PTR [rax],al
   140007470:	cli    
   140007471:	fwait
	...
   14000747e:	add    BYTE PTR [rax],al
   140007480:	sbb    BYTE PTR [rbx+0x0],0x40
   140007484:	add    DWORD PTR [rax],eax
   140007486:	add    BYTE PTR [rax],al
   140007488:	and    BYTE PTR [rdi+0x0],bl
   14000748b:	rex add DWORD PTR [rax],eax
	...
   140007496:	add    BYTE PTR [rax],al
   140007498:	rex push rsp
   14000749a:	add    BYTE PTR [rax+0x1],al
   14000749d:	add    BYTE PTR [rax],al
   14000749f:	add    BYTE PTR [rax],al
   1400074a1:	adc    BYTE PTR [rax],al
   1400074a3:	rex add DWORD PTR [rax],eax
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	xor    BYTE PTR [rax],dl
   1400074aa:	add    BYTE PTR [rax+0x1],al
	...
   1400074bd:	add    BYTE PTR [rax],al
   1400074bf:	add    BYTE PTR [rax+0x53],ah
   1400074c2:	add    BYTE PTR [rax+0x1],al
   1400074c5:	add    BYTE PTR [rax],al
   1400074c7:	add    BYTE PTR [rax+0x1400058],dh
	...
   1400074d9:	adc    BYTE PTR [rax],al
   1400074db:	add    BYTE PTR [rax],dh
   1400074dd:	adc    BYTE PTR [rax],al
   1400074df:	add    BYTE PTR [rax],al
   1400074e1:	adc    al,BYTE PTR [rax]
   1400074e3:	add    BYTE PTR [rax+0x60000017],dh
   1400074e9:	sbb    BYTE PTR [rax],al
   1400074eb:	add    BYTE PTR [rax],dl
   1400074ed:	sbb    DWORD PTR [rax],eax
   1400074ef:	add    BYTE PTR [rax+0x19],dh
   1400074f2:	add    BYTE PTR [rax],al
   1400074f4:	rcr    BYTE PTR [rcx],1
   1400074f6:	add    BYTE PTR [rax],al
   1400074f8:	loopne 0x140007513
   1400074fa:	add    BYTE PTR [rax],al
   1400074fc:	sbb    BYTE PTR [rbx],0x0
   1400074ff:	add    al,al
   140007501:	and    eax,DWORD PTR [rax]
   140007503:	add    BYTE PTR [rax-0x7fffffd6],dl
   140007509:	sub    eax,DWORD PTR [rax]
   14000750b:	add    BYTE PTR [rax+0x2f],ah
   14000750e:	add    BYTE PTR [rax],al
   140007510:	rex
   140007511:	add    BYTE PTR ss:[rax],al
   140007514:	nop
   140007515:	cmp    BYTE PTR [rax],al
   140007517:	add    al,dl
   140007519:	add    BYTE PTR ds:[rax],al
   14000751c:	loopne 0x140007560
   14000751e:	add    BYTE PTR [rax],al
   140007520:	mov    al,0x46
   140007522:	add    BYTE PTR [rax],al
   140007524:	(bad)  
   140007525:	rex.WRX add BYTE PTR [rax],r8b
   140007528:	rcl    BYTE PTR [rdx+0x0],1
   14000752b:	add    BYTE PTR [rax+0x53],ah
   14000752e:	add    BYTE PTR [rax],al
   140007530:	rex push rsp
   140007532:	add    BYTE PTR [rax],al
   140007534:	jo     0x14000758c
   140007536:	add    BYTE PTR [rax],al
   140007538:	rcl    BYTE PTR [rsi+0x0],1
   14000753b:	add    BYTE PTR [rax],dh
   14000753d:	push   rdi
   14000753e:	add    BYTE PTR [rax],al
   140007540:	jo     0x14000759a
   140007542:	add    BYTE PTR [rax],al
   140007544:	mov    al,0x58
   140007546:	add    BYTE PTR [rax],al
   140007548:	nop
   140007549:	pop    rcx
   14000754a:	add    BYTE PTR [rax],al
   14000754c:	sbb    BYTE PTR [rbx+0x0],0x0
   140007550:	rcr    BYTE PTR [rbx+0x0],1
   140007553:	add    BYTE PTR [rax-0x5fffffa3],dl
   140007559:	pop    rbp
   14000755a:	add    BYTE PTR [rax],al
   14000755c:	mov    al,0x5d
   14000755e:	add    BYTE PTR [rax],al
   140007560:	rcr    BYTE PTR [rbp+0x0],0x0
   140007564:	add    BYTE PTR [rdx+0x0],ah
	...
   14000756f:	add    BYTE PTR [rdx+0x61],ah
   140007572:	and    BYTE PTR fs:[rcx+0x6c],ah
   140007576:	ins    BYTE PTR es:[rdi],dx
   140007577:	outs   dx,DWORD PTR ds:[rsi]
   140007578:	movsxd esp,DWORD PTR [rcx+0x74]
   14000757b:	imul   ebp,DWORD PTR [rdi+0x6e],0x52d00000
   140007582:	add    BYTE PTR [rax+0x1],al
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    BYTE PTR [rax],dh
   140007589:	push   rdi
   14000758a:	add    BYTE PTR [rax+0x1],al
   14000758d:	add    BYTE PTR [rax],al
   14000758f:	add    al,dl
   140007591:	push   rsi
   140007592:	add    BYTE PTR [rax+0x1],al
   140007595:	add    BYTE PTR [rax],al
   140007597:	add    BYTE PTR [rdx],ah
   140007599:	add    eax,0x21993
   14000759e:	add    BYTE PTR [rax],al
   1400075a0:	ins    BYTE PTR es:[rdi],dx
   1400075a1:	test   BYTE PTR [rax],al
   1400075a3:	add    BYTE PTR [rcx],al
   1400075a5:	add    BYTE PTR [rax],al
   1400075a7:	add    ah,bh
   1400075a9:	mov    BYTE PTR [rax],al
   1400075ab:	add    BYTE PTR [rsi],al
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    BYTE PTR [rax],ch
   1400075b1:	mov    DWORD PTR [rax],eax
   1400075b3:	add    BYTE PTR [rax],ah
   1400075b5:	add    BYTE PTR [rax],al
   1400075b7:	add    BYTE PTR [rax],al
   1400075b9:	add    BYTE PTR [rax],al
   1400075bb:	add    BYTE PTR [rcx],al
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    BYTE PTR [rax-0x5f],ah
   1400075c2:	add    BYTE PTR [rax+0x1],al
   1400075c5:	add    BYTE PTR [rax],al
   1400075c7:	add    BYTE PTR [rax],al
   1400075c9:	movabs ds:0x17b0000000014000,al
   1400075d2:	add    BYTE PTR [rax+0x1],al
   1400075d5:	add    BYTE PTR [rax],al
   1400075d7:	add    BYTE PTR [rax+0x18],ah
   1400075da:	add    BYTE PTR [rax+0x1],al
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rax],dl
   1400075e1:	sbb    DWORD PTR [rax],eax
   1400075e3:	rex add DWORD PTR [rax],eax
	...
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	mov    al,0x7a
   1400075f2:	add    BYTE PTR [rax+0x1],al
   1400075f5:	add    BYTE PTR [rax],al
   1400075f7:	add    al,dl
   1400075f9:	sbb    DWORD PTR [rax],eax
   1400075fb:	rex add DWORD PTR [rax],eax
   1400075fe:	add    BYTE PTR [rax],al
   140007600:	loopne 0x14000761b
   140007602:	add    BYTE PTR [rax+0x1],al
	...
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    BYTE PTR [rax+0x1400076],cl
	...
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rdx+0x79],bh
   140007632:	add    BYTE PTR [rax+0x1],al
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    BYTE PTR [rcx],al
   140007639:	add    BYTE PTR [rax],al
   14000763b:	add    BYTE PTR [rax],al
   14000763d:	add    BYTE PTR [rdx],cl
	...
   140007647:	add    BYTE PTR [rbp+0x2],ah
   14000764a:	add    BYTE PTR [rax],cl
	...
   140007668:	add    DWORD PTR [rax],eax
   14000766a:	add    BYTE PTR [rdx],al
	...
   140007678:	push   rax
   140007679:	jp     0x14000767b
   14000767b:	rex add DWORD PTR [rax],eax
	...
   140007686:	add    BYTE PTR [rax],al
   140007688:	jo     0x1400076a3
   14000768a:	add    BYTE PTR [rax+0x1],al
   14000768d:	add    BYTE PTR [rax],al
   14000768f:	add    BYTE PTR [rax+0x1400038],dl
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    BYTE PTR [rax],dh
   140007699:	push   rdi
   14000769a:	add    BYTE PTR [rax+0x1],al
   14000769d:	add    BYTE PTR [rax],al
   14000769f:	add    BYTE PTR [rax+0x2f],ah
   1400076a2:	add    BYTE PTR [rax+0x1],al
   1400076a5:	add    BYTE PTR [rax],al
   1400076a7:	add    BYTE PTR [rax+0x36],al
   1400076aa:	add    BYTE PTR [rax+0x1],al
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rax+0x140002b],al
   1400076b5:	add    BYTE PTR [rax],al
   1400076b7:	add    BYTE PTR [rax+0x140001b],al
   1400076bd:	add    BYTE PTR [rax],al
   1400076bf:	add    al,ah
   1400076c1:	rex.X add BYTE PTR [rax+0x1],al
   1400076c5:	add    BYTE PTR [rax],al
   1400076c7:	add    BYTE PTR [rax+rax*1],bh
   1400076ca:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   1400076ce:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   1400076d3:	add    BYTE PTR [rax],al
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rsi+0x0],cl
   1400076da:	push   rbp
   1400076db:	add    BYTE PTR [rax+rax*1+0x4c],cl
   1400076df:	add    BYTE PTR [rax],al
   1400076e1:	add    BYTE PTR [rax],al
   1400076e3:	add    BYTE PTR [rip+0x7500],ah        # 0x14000ebe9
   1400076e9:	add    BYTE PTR [rax],al
   1400076eb:	add    BYTE PTR [rax],al
   1400076ed:	add    BYTE PTR [rax],al
   1400076ef:	add    BYTE PTR [rbx+rbx*2],ah
   1400076f2:	(bad)  
   1400076f3:	fcmovnbe st,st(3)
   1400076f5:	xor    ebx,DWORD PTR [rbx+0x5d3e8433]
   1400076fb:	mov    ecx,0xc0bd751
   140007700:	pop    rsp
   140007701:	xchg   ecx,eax
   140007702:	adc    DWORD PTR [rbp+0x4d73c654],ebx
   140007708:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007709:	(bad)  
   14000770a:	pop    rcx
   14000770b:	adc    eax,0xa011e070
   140007710:	retf   0x9323
   140007713:	shl    DWORD PTR [rsi+rcx*8],0xc1
   140007717:	out    0x50,al
   140007719:	rex.X movabs ds:0x885d04ed621315ea,eax
   140007723:	mov    ch,bl
   140007725:	sbb    al,0xc9
   140007727:	adc    DWORD PTR [rdi+0x2b0008e8],ebx
   14000772d:	adc    BYTE PTR [rax+0x60],cl
   140007730:	add    al,BYTE PTR [rax]
   140007732:	add    BYTE PTR [rax],al
   140007734:	add    BYTE PTR [rax],al
   140007736:	add    BYTE PTR [rax],al
   140007738:	nop
   140007739:	jp     0x14000773b
   14000773b:	rex add DWORD PTR [rax],eax
   14000773e:	add    BYTE PTR [rax],al
   140007740:	ret    0x79
   140007743:	rex add DWORD PTR [rax],eax
   140007746:	add    BYTE PTR [rax],al
   140007748:	ins    BYTE PTR es:[rdi],dx
   140007749:	jns    0x14000774b
   14000774b:	rex add DWORD PTR [rax],eax
   14000774e:	add    BYTE PTR [rax],al
   140007750:	jp     0x1400077cb
   140007752:	add    BYTE PTR [rax+0x1],al
	...
   14000776d:	add    BYTE PTR [rax],al
   14000776f:	add    BYTE PTR [rbx],dh
   140007771:	add    eax,0xbeba7171
   140007776:	(bad)  
   140007777:	sbb    QWORD PTR [r9],0xffffffffffffffb5
   14000777b:	fucomi st,st(7)
   14000777d:	pushf  
   14000777e:	int3   
   14000777f:	add    DWORD PTR ss:[rax],eax
   140007782:	add    BYTE PTR [rax],al
   140007784:	add    BYTE PTR [rax],al
   140007786:	add    BYTE PTR [rax],al
   140007788:	shl    BYTE PTR [rdi+0x0],0x40
   14000778c:	add    DWORD PTR [rax],eax
	...
   140007796:	add    BYTE PTR [rax],al
   140007798:	fdiv   DWORD PTR [rdi+0x0]
   14000779b:	rex add DWORD PTR [rax],eax
	...
   1400077be:	add    BYTE PTR [rax],al
   1400077c0:	add    eax,DWORD PTR [rax]
   1400077c2:	add    BYTE PTR [rax],al
   1400077c4:	add    BYTE PTR [rax],al
   1400077c6:	add    BYTE PTR [rax],al
   1400077c8:	cmp    BYTE PTR [rdi+0x14000],ah
	...
   1400077d6:	add    BYTE PTR [rax],al
   1400077d8:	lock ja 0x1400077db
   1400077db:	rex add DWORD PTR [rax],eax
   1400077de:	add    BYTE PTR [rax],al
   1400077e0:	push   rax
   1400077e1:	js     0x1400077e3
   1400077e3:	rex add DWORD PTR [rax],eax
   1400077e6:	add    BYTE PTR [rax],al
   1400077e8:	cmp    BYTE PTR [rcx+0x0],bh
   1400077eb:	rex add DWORD PTR [rax],eax
   1400077ee:	add    BYTE PTR [rax],al
   1400077f0:	add    BYTE PTR [rcx+rax*1],cl
   1400077f4:	and    BYTE PTR [rax],al
   1400077f6:	add    BYTE PTR [rax],al
   1400077f8:	add    BYTE PTR [rax],al
   1400077fa:	add    BYTE PTR [rax],al
   1400077fc:	add    BYTE PTR [rax],r8b
   1400077ff:	add    BYTE PTR [rax],al
   140007801:	add    BYTE PTR [rax],al
   140007803:	add    BYTE PTR [rbx],al
   140007805:	add    BYTE PTR [rax],cl
   140007807:	add    BYTE PTR [rdx+0x0],dh
   14000780a:	add    BYTE PTR [rax],al
   14000780c:	add    BYTE PTR [rax],al
   14000780e:	add    BYTE PTR [rax],al
   140007810:	rex js 0x140007813
   140007813:	rex add DWORD PTR [rax],eax
   140007816:	add    BYTE PTR [rax],al
   140007818:	or     eax,DWORD PTR [rcx]
   14000781a:	add    BYTE PTR [rax],al
   14000781c:	or     BYTE PTR [rax],al
   14000781e:	add    BYTE PTR [rax],al
   140007820:	rex.R js 0x140007823
   140007823:	rex add DWORD PTR [rax],eax
   140007826:	add    BYTE PTR [rax],al
   140007828:	adc    BYTE PTR [rcx],al
   14000782a:	add    BYTE PTR [rax],al
   14000782c:	adc    BYTE PTR [rax],al
   14000782e:	add    BYTE PTR [rax],al
   140007830:	rex.W js 0x140007833
   140007833:	rex add DWORD PTR [rax],eax
   140007836:	add    BYTE PTR [rax],al
   140007838:	lock add BYTE PTR [rax],al
   14000783b:	add    BYTE PTR [rax],bl
   14000783d:	add    BYTE PTR [rax],al
   14000783f:	add    BYTE PTR [rax+rax*1+0x2],ah
   140007843:	add    BYTE PTR [rax-0x5c],dh
   140007846:	add    BYTE PTR [rcx],al
   140007848:	add    eax,0x0
   14000784d:	add    BYTE PTR [rax],al
   14000784f:	add    BYTE PTR [rax+0x0],al
   140007852:	rex.WX add QWORD PTR [rax],rsp
   140007855:	add    BYTE PTR [rax],al
   140007857:	add    BYTE PTR [rax+rax*1],ah
   14000785a:	add    BYTE PTR [rax],al
   14000785c:	or     BYTE PTR [rax],al
   14000785e:	add    BYTE PTR [rax],al
   140007860:	add    BYTE PTR [rax],al
   140007862:	add    BYTE PTR [rax],al
   140007864:	add    eax,DWORD PTR [rax]
   140007866:	or     BYTE PTR [rax],al
   140007868:	jo     0x1400078ae
   14000786a:	or     BYTE PTR [rax],al
   14000786c:	add    BYTE PTR [rax],al
   14000786e:	add    BYTE PTR [rax],al
   140007870:	movabs al,ds:0x800000001400078
   140007879:	add    BYTE PTR [rax],al
   14000787b:	add    BYTE PTR [rax],cl
   14000787d:	add    BYTE PTR [rax],al
   14000787f:	add    BYTE PTR [rax+0x1400078],dh
   140007885:	add    BYTE PTR [rax],al
   140007887:	add    BYTE PTR [rbx],dl
   140007889:	add    DWORD PTR [rax],0x1000
   14000788f:	add    BYTE PTR [rax],dh
   140007891:	jns    0x140007893
   140007893:	rex add DWORD PTR [rax],eax
   140007896:	add    BYTE PTR [rax],al
   140007898:	lock add BYTE PTR [rax],al
   14000789b:	add    BYTE PTR [rax],bl
   14000789d:	add    BYTE PTR [rax],al
   14000789f:	add    BYTE PTR [rax+0x45],dh
   1400078a2:	add    BYTE PTR [rcx],al
	...
   1400078b0:	xor    eax,0x10000307
	...
   1400078c5:	add    BYTE PTR [rax],al
   1400078c7:	add    BYTE PTR [rax],ah
   1400078c9:	jns    0x1400078cb
   1400078cb:	rex add DWORD PTR [rax],eax
   1400078ce:	add    BYTE PTR [rax],al
   1400078d0:	add    eax,0x0
   1400078d5:	add    BYTE PTR [rax],al
   1400078d7:	add    BYTE PTR [rax+0x400],dl
   1400078dd:	add    BYTE PTR [rax],al
   1400078df:	add    BYTE PTR [rax+rax*1],dl
   1400078e2:	add    BYTE PTR [rax],al
   1400078e4:	add    BYTE PTR [rax],al
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	xchg   ebx,eax
   1400078e9:	add    BYTE PTR [rax],al
   1400078eb:	add    BYTE PTR [rax],al
   1400078ed:	add    BYTE PTR [rax],al
   1400078ef:	add    BYTE PTR [rcx],al
   1400078f1:	add    BYTE PTR [rax],al
   1400078f3:	add    BYTE PTR [rbx],al
   1400078f5:	(bad)  
   1400078f6:	add    BYTE PTR [rax],al
   1400078f8:	add    BYTE PTR [rax],al
   1400078fa:	add    BYTE PTR [rax],al
   1400078fc:	add    al,BYTE PTR [rax]
   1400078fe:	add    BYTE PTR [rax],al
   140007900:	add    BYTE PTR [r8],al
   140007903:	add    BYTE PTR [rcx],al
   140007905:	add    BYTE PTR [rax],al
   140007907:	add    al,dh
   140007909:	js     0x14000790b
   14000790b:	rex add DWORD PTR [rax],eax
   14000790e:	add    BYTE PTR [rax],al
   140007910:	add    DWORD PTR [rax],eax
   140007912:	add    BYTE PTR [rax],al
   140007914:	add    BYTE PTR [rax],al
   140007916:	add    BYTE PTR [rax],al
   140007918:	cld    
   140007919:	js     0x14000791b
   14000791b:	rex add DWORD PTR [rax],eax
   14000791e:	add    BYTE PTR [rax],al
   140007920:	and    DWORD PTR [rax],esp
   140007922:	add    BYTE PTR [rax],al
   140007924:	add    BYTE PTR [rax],al
   140007926:	add    BYTE PTR [rax],al
   140007928:	add    BYTE PTR [rcx+0x0],bh
   14000792b:	rex add DWORD PTR [rax],eax
   14000792e:	add    BYTE PTR [rax],al
   140007930:	add    eax,0x0
   140007935:	add    BYTE PTR [rax],al
   140007937:	add    BYTE PTR [rax+0x0],al
   14000793a:	add    BYTE PTR [rcx],al
   14000793c:	or     BYTE PTR [rax],al
   14000793e:	add    BYTE PTR [rax],al
   140007940:	cmp    al,0x0
   140007942:	add    BYTE PTR [rax],al
   140007944:	cmp    al,0x0
   140007946:	add    BYTE PTR [rax],al
   140007948:	add    BYTE PTR [rax],al
   14000794a:	add    BYTE PTR [rax],al
   14000794c:	add    DWORD PTR [rax],eax
   14000794e:	or     BYTE PTR [rax],al
   140007950:	jo     0x140007936
   140007952:	add    BYTE PTR [rax],al
   140007954:	add    BYTE PTR [rax],al
   140007956:	add    BYTE PTR [rax],al
   140007958:	push   0x1400079
   14000795d:	add    BYTE PTR [rax],al
   14000795f:	add    BYTE PTR [rax],bl
   140007961:	add    DWORD PTR [rax],eax
   140007963:	add    BYTE PTR [rax],al
   140007965:	add    BYTE PTR [rax],al
   140007967:	add    BYTE PTR [rax-0x1b],dh
   14000796a:	add    BYTE PTR [rcx],al
   14000796c:	add    BYTE PTR [rax],al
   14000796e:	xor    BYTE PTR [rax],al
   140007970:	(bad)  
	...
   140007979:	add    BYTE PTR [rax],al
   14000797b:	add    BYTE PTR [rcx],dl
   14000797d:	or     BYTE PTR [rip+0x204115c],ah        # 0x142048adf
   140007983:	add    BYTE PTR [rax],dh
   140007985:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007986:	add    BYTE PTR [rax],al
   140007988:	xor    BYTE PTR [rbp+0x0],al
   14000798b:	add    BYTE PTR [rcx],dl
   14000798d:	add    al,0xe
   14000798f:	add    BYTE PTR [rbx],bl
   140007991:	add    BYTE PTR [rcx],al
   140007993:	add    BYTE PTR [rcx],bl
   140007995:	add    BYTE PTR [rax],al
   140007997:	add    BYTE PTR [rcx],al
   140007999:	add    BYTE PTR [rcx],al
   14000799b:	pop    rbx
   14000799c:	sbb    al,BYTE PTR [rbx]
   14000799e:	adc    BYTE PTR [rax],al
   1400079a0:	add    BYTE PTR [rax],al
   1400079a2:	(bad)  
   1400079a3:	add    BYTE PTR [rax],cl
   1400079a5:	rex
   1400079a6:	ss pop rbx
   1400079a8:	adc    ah,BYTE PTR [rax]
   1400079aa:	out    0xff,al
   1400079ac:	adc    DWORD PTR [rdx+rax*1],eax
   1400079af:	add    BYTE PTR [rax],dh
   1400079b1:	in     eax,0x0
	...
   1400079c3:	rex.W add BYTE PTR [rax],al
   1400079c6:	add    BYTE PTR [rax],al
   1400079c8:	add    BYTE PTR [rax],al
   1400079ca:	and    BYTE PTR [rax],al
   1400079cc:	xor    al,BYTE PTR [rax]
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	add    BYTE PTR [rax],al
   1400079d2:	add    BYTE PTR [rsi+0x3],al
   1400079d6:	or     al,BYTE PTR [rcx]
	...
   1400079e0:	or     eax,DWORD PTR [rcx]
   1400079e2:	or     BYTE PTR [rax],al
   1400079e4:	add    al,0x0
   1400079e6:	adc    BYTE PTR [rcx],al
   1400079e8:	adc    BYTE PTR [rax],al
   1400079ea:	or     al,BYTE PTR [rax]
   1400079ec:	jo     0x1400079ee
   1400079ee:	sbb    BYTE PTR [rax],al
   1400079f0:	or     BYTE PTR [rax],al
   1400079f2:	add    BYTE PTR [rax+0x0],cl
   1400079f5:	add    BYTE PTR [rax],al
   1400079f7:	add    BYTE PTR [rcx],al
   1400079f9:	add    BYTE PTR [rax],ah
   1400079fb:	add    BYTE PTR [rax],dh
   1400079fd:	or     BYTE PTR [rax],r8b
   140007a00:	add    BYTE PTR [rax],al
   140007a02:	and    al,0x0
   140007a04:	or     BYTE PTR [rax],al
   140007a06:	(bad)
   140007a09:	add    eax,DWORD PTR [rcx]
   140007a0b:	add    BYTE PTR [rax],al
   140007a0d:	add    BYTE PTR [rax],al
   140007a0f:	add    BYTE PTR [rax],al
   140007a11:	add    BYTE PTR [rax],cl
   140007a13:	add    BYTE PTR [rax],cl
   140007a15:	add    BYTE PTR [rsi],cl
   140007a17:	add    BYTE PTR [rbx],dl
   140007a19:	adc    BYTE PTR [r8],al
   140007a1c:	and    al,BYTE PTR [rax]
   140007a1e:	jo     0x140007a20
   140007a20:	sbb    BYTE PTR [rax],al
   140007a22:	or     BYTE PTR [rax],al
   140007a24:	add    BYTE PTR [rax+0x0],cl
   140007a27:	add    BYTE PTR [rax],al
   140007a29:	add    BYTE PTR [rdx],al
   140007a2b:	add    BYTE PTR [rax],cl
   140007a2d:	add    BYTE PTR [rax],dh
   140007a2f:	in     al,0x0
   140007a31:	add    BYTE PTR [rax],al
   140007a33:	add    BYTE PTR [rax],bh
   140007a35:	add    BYTE PTR [rax],bh
   140007a37:	add    BYTE PTR [rax+0x1],al
   140007a3a:	or     al,BYTE PTR [rcx]
	...
   140007a44:	sbb    BYTE PTR [rcx],al
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	add    BYTE PTR ss:[rax],al
   140007a4b:	add    BYTE PTR [rax],al
   140007a4d:	add    BYTE PTR [rax],al
   140007a4f:	add    al,dh
   140007a51:	jne    0x140007a53
   140007a53:	rex add DWORD PTR [rax],eax
   140007a56:	add    BYTE PTR [rax],al
   140007a58:	shl    BYTE PTR [rbp+0x0],1
   140007a5b:	rex add DWORD PTR [rax],eax
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	ret    0x79
   140007a63:	rex add DWORD PTR [rax],eax
   140007a66:	add    BYTE PTR [rax],al
   140007a68:	ins    BYTE PTR es:[rdi],dx
   140007a69:	jns    0x140007a6b
   140007a6b:	rex add DWORD PTR [rax],eax
	...
   140007a76:	add    BYTE PTR [rax],al
   140007a78:	adc    BYTE PTR [rbx+0x0],bh
   140007a7b:	rex add DWORD PTR [rax],eax
   140007a7e:	add    BYTE PTR [rax],al
   140007a80:	add    al,BYTE PTR [rax]
   140007a82:	add    BYTE PTR [rax],al
   140007a84:	add    BYTE PTR [rax],al
   140007a86:	add    BYTE PTR [rax],al
   140007a88:	and    BYTE PTR [rdi+0x0],dh
   140007a8b:	rex add DWORD PTR [rax],eax
   140007a8e:	add    BYTE PTR [rax],al
   140007a90:	add    eax,DWORD PTR [rax]
   140007a92:	add    BYTE PTR [rax],al
   140007a94:	add    BYTE PTR [rax],al
   140007a96:	add    BYTE PTR [rax],al
   140007a98:	sbb    BYTE PTR [rdi+0x14000],ah
	...
   140007aae:	add    BYTE PTR [rax],al
   140007ab0:	(bad)  
   140007ab1:	add    BYTE PTR [rax],al
   140007ab3:	add    BYTE PTR [rbp+0x38],ch
   140007ab6:	in     eax,0x22
   140007ab8:	adc    cl,BYTE PTR [rbx-0x134fb410]
   140007abe:	push   0x1e
   140007ac0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007ac1:	sbb    ebx,esp
   140007ac3:	add    WORD PTR [rax],ax
   140007ac6:	add    BYTE PTR [rax],al
   140007ac8:	add    al,0x5d
   140007aca:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   140007ad0:	lahf   
   140007ad1:	call   0x1502b7ade
   140007ad6:	rex.W (bad) 
   140007ad8:	add    al,BYTE PTR [rax]
   140007ada:	add    BYTE PTR [rax],al
   140007adc:	add    BYTE PTR [rax],al
   140007ade:	add    BYTE PTR [rax],al
   140007ae0:	nop
   140007ae1:	jp     0x140007ae3
   140007ae3:	rex add DWORD PTR [rax],eax
	...
   140007afe:	add    BYTE PTR [rax],al
   140007b00:	push   rax
   140007b01:	jp     0x140007b03
   140007b03:	rex add DWORD PTR [rax],eax
   140007b06:	add    BYTE PTR [rax],al
   140007b08:	add    BYTE PTR [rax],al
   140007b0a:	add    BYTE PTR [rsi],al
   140007b0c:	add    BYTE PTR [rax],al
   140007b0e:	add    BYTE PTR [rax],al
   140007b10:	xor    eax,DWORD PTR [rip+0xffffffffbeba7171]        # 0xfebaec87
   140007b16:	(bad)  
   140007b17:	sbb    QWORD PTR [r9],0xffffffffffffffb5
   140007b1b:	fucomi st,st(7)
   140007b1d:	pushf  
   140007b1e:	int3   
   140007b1f:	add    DWORD PTR ss:[rax],eax
   140007b22:	add    BYTE PTR [rax],al
   140007b24:	add    BYTE PTR [rax],al
   140007b26:	add    BYTE PTR [rax],al
   140007b28:	outs   dx,BYTE PTR ds:[rsi]
   140007b29:	add    BYTE PTR [rbx+0x0],ah
   140007b2c:	(bad)  
   140007b2d:	add    BYTE PTR [rbx+0x0],ah
   140007b30:	outs   dx,BYTE PTR ds:[rsi]
   140007b31:	add    BYTE PTR [rdi+0x0],bl
   140007b34:	imul   eax,DWORD PTR [rax],0x5f0070
   140007b3a:	je     0x140007b3c
   140007b3c:	movsxd eax,DWORD PTR [rax]
   140007b3e:	jo     0x140007b40
	...
   140007b48:	add    BYTE PTR [rsi+0x0],al
   140007b4c:	imul   eax,DWORD PTR [rax],0x650072
   140007b52:	ja     0x140007b54
   140007b54:	(bad)  
   140007b55:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140007b59:	add    BYTE PTR [rcx+0x0],al
   140007b5c:	push   rax
   140007b5d:	add    BYTE PTR [rcx+0x0],cl
   140007b60:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140007b65:	add    BYTE PTR [rax+rax*1+0x2c],ch
   140007b69:	add    BYTE PTR [rip+0x36003300],ch        # 0x17600ae6f
   140007b6f:	add    BYTE PTR [rax],bh
   140007b71:	add    BYTE PTR [rax],dh
   140007b73:	add    BYTE PTR [rcx],dh
   140007b75:	add    BYTE PTR [rax],al
   140007b77:	add    BYTE PTR [rcx+rbp*2+0x73],ch
   140007b7b:	je     0x140007bb9
   140007b7d:	push   rsp
   140007b7e:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   140007b83:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140007b87:	add    BYTE PTR [eax],al
   140007b8a:	add    BYTE PTR [rax],al
   140007b8c:	add    BYTE PTR [rax],al
   140007b8e:	add    BYTE PTR [rax],al
   140007b90:	jg     0x140007b5b
   140007b92:	mov    bl,0xe2
   140007b94:	loope  0x140007c00
   140007b96:	lods   al,BYTE PTR ds:[rsi]
   140007b97:	cmp    DWORD PTR [r10-0xa],0xd76621f9
   140007b9f:	fld    QWORD PTR [rdi+0x50]
   140007ba2:	xor    bl,BYTE PTR [rax+0x4174c671]
   140007ba8:	lea    eax,[rcx-0xf2c0322]
   140007bae:	xor    DWORD PTR [rsi+0x61766e69],eax
   140007bb4:	ins    BYTE PTR es:[rdi],dx
   140007bb5:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   140007bbd:	and    BYTE PTR [eax+0x6f],dh
   140007bc1:	jae    0x140007c2c
   140007bc3:	je     0x140007c2e
   140007bc5:	outs   dx,DWORD PTR ds:[rsi]
   140007bc6:	outs   dx,BYTE PTR ds:[rsi]
   140007bc7:	add    BYTE PTR [rbx+0x74],dh
   140007bca:	jb     0x140007c35
   140007bcc:	outs   dx,BYTE PTR ds:[rsi]
   140007bcd:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   140007bd2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140007bd6:	add    BYTE PTR [ecx],al
   140007bd9:	ja     0x140007b8f
   140007bdb:	add    al,0x93
   140007bdd:	sub    ebp,ebx
   140007bdf:	(bad)  
   140007be0:	cwde   
   140007be1:	out    0x95,al
   140007be3:	cmc    
   140007be4:	test   BYTE PTR [rsi+0x7],al
   140007be7:	sub    eax,0x650054
   140007bec:	ins    DWORD PTR es:[rdi],dx
   140007bed:	add    BYTE PTR [rax+0x0],dh
   140007bf0:	push   rax
   140007bf1:	add    BYTE PTR [rcx+0x0],ah
   140007bf4:	movsxd eax,DWORD PTR [rax]
   140007bf6:	imul   eax,DWORD PTR [rax],0x65
   140007bf9:	add    BYTE PTR [rax+rax*1+0x43],dh
   140007bfd:	add    BYTE PTR [rcx+0x0],ah
   140007c00:	jo     0x140007c02
   140007c02:	push   rbx
   140007c03:	add    BYTE PTR [rbp+0x0],ah
   140007c06:	jae    0x140007c08
   140007c08:	jae    0x140007c0a
   140007c0a:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140007c18:	outs   dx,BYTE PTR ds:[rsi]
   140007c19:	add    dh,dl
   140007c1b:	sub    DWORD PTR cs:[rdi+0x9],eax
   140007c1f:	rex.RX mov spl,0x23
   140007c22:	ds out 0xbc,eax
   140007c25:	(bad)  
   140007c26:	js     0x140007c17
   140007c28:	pushf  
   140007c29:	cmp    eax,0xd206f506
   140007c2e:	jae    0x140007c4e
   140007c30:	(bad)  
   140007c31:	out    dx,eax
   140007c32:	packuswb mm4,QWORD PTR [rax]
   140007c35:	(bad)  
   140007c36:	or     bh,BYTE PTR [rbx+rbx*1]
   140007c39:	in     al,dx
   140007c3a:	out    0xc4,al
   140007c3c:	xchg   esp,eax
   140007c3d:	scas   al,BYTE PTR es:[rdi]
   140007c3e:	pop    rcx
   140007c3f:	cmc    
   140007c40:	(bad)  
   140007c41:	jae    0x140007c45
   140007c43:	clc    
   140007c44:	js     0x140007c55
   140007c46:	push   rdi
   140007c47:	cmc    
   140007c48:	(bad)  
   140007c49:	xor    dh,bl
   140007c4b:	add    ecx,DWORD PTR [rbx]
   140007c4d:	jno    0x140007c7b
   140007c4f:	jbe    0x140007c8e
   140007c51:	(bad)  
   140007c52:	push   rax
   140007c53:	in     al,dx
   140007c54:	retf   
   140007c55:	xchg   esp,eax
   140007c56:	adc    ah,BYTE PTR [rcx+0x5c]
   140007c59:	add    BYTE PTR [rax+0x0],dl
   140007c5c:	add    BYTE PTR fs:[rbx+0x0],ah
   140007c60:	push   rax
   140007c61:	add    BYTE PTR [rdi+0x0],ch
   140007c64:	jb     0x140007c66
   140007c66:	je     0x140007c68
	...
   140007c70:	push   rax
   140007c71:	movsxd esi,DWORD PTR fs:[rax+0x41]
   140007c75:	ins    BYTE PTR es:[rdi],dx
   140007c76:	jo     0x140007cdb
   140007c78:	push   rax
   140007c79:	jb     0x140007cea
   140007c7b:	movsxd esp,DWORD PTR [rbp+0x73]
   140007c7e:	jae    0x140007ccd
   140007c80:	gs jae 0x140007cf6
   140007c83:	(bad)  
   140007c84:	add    BYTE PTR gs:[eax],al
   140007c88:	and    eax,0x45203a73
   140007c8d:	jb     0x140007d01
   140007c8f:	outs   dx,DWORD PTR ds:[rsi]
   140007c90:	jb     0x140007cb2
   140007c92:	jb     0x140007cf9
   140007c94:	movsxd esp,DWORD PTR [rbp+0x69]
   140007c97:	jbe    0x140007d02
   140007c99:	outs   dx,BYTE PTR ds:[rsi]
   140007c9a:	and    BYTE PTR [ebp+0x65],ch
   140007c9e:	jae    0x140007d13
   140007ca0:	(bad)  
   140007ca1:	and    BYTE PTR gs:[esi+0x72],ah
   140007ca6:	outs   dx,DWORD PTR ds:[rsi]
   140007ca7:	ins    DWORD PTR es:[rdi],dx
   140007ca8:	and    BYTE PTR [rax+0x4f],dl
   140007cab:	and    BYTE PTR [rip+0x50000a78],ah        # 0x190008729
   140007cb1:	movsxd esi,DWORD PTR fs:[rax+0x50]
   140007cb5:	jb     0x140007d26
   140007cb7:	movsxd esp,DWORD PTR [rbp+0x73]
   140007cba:	jae    0x140007d09
   140007cbc:	gs jae 0x140007d32
   140007cbf:	(bad)  
   140007cc0:	rex.WB outs dx,BYTE PTR gs:[esi]
   140007cc4:	je     0x140007d2b
   140007cc6:	jb     0x140007d36
   140007cc8:	(bad)  
   140007cc9:	ins    BYTE PTR es:[rdi],dx
   140007cca:	add    BYTE PTR [rax],al
   140007ccc:	add    BYTE PTR [rax],al
   140007cce:	add    BYTE PTR [rax],al
   140007cd0:	and    eax,0x41203a73
   140007cd5:	rex.WR push rax
   140007cd7:	rex.XB and BYTE PTR [r13+0x65],bpl
   140007cdb:	jae    0x140007d50
   140007cdd:	(bad)  
   140007cde:	and    BYTE PTR gs:[ecx+0x64],ch
   140007ce3:	cmp    eax,0x72207825
   140007ce8:	gs jno 0x140007d60
   140007ceb:	imul   esi,DWORD PTR [rdx+0x65],0x6f632064
   140007cf2:	outs   dx,BYTE PTR ds:[rsi]
   140007cf3:	je     0x140007d5e
   140007cf5:	outs   dx,BYTE PTR ds:[rsi]
   140007cf6:	jne    0x140007d59
   140007cf8:	je     0x140007d63
   140007cfa:	outs   dx,DWORD PTR ds:[rsi]
   140007cfb:	outs   dx,BYTE PTR ds:[rsi]
   140007cfc:	and    BYTE PTR [rbp+0x6e],dh
   140007cff:	gs js  0x140007d72
   140007d02:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140007d07:	ins    BYTE PTR es:[rdi],dx
   140007d08:	jns    0x140007d38
   140007d0a:	rex.XB (bad) 
   140007d0c:	outs   dx,BYTE PTR ds:[rsi]
   140007d0d:	movsxd esp,DWORD PTR [rbp+0x6c]
   140007d10:	ins    BYTE PTR es:[rdi],dx
   140007d11:	imul   ebp,DWORD PTR [rsi+0x67],0x2e746920
   140007d18:	or     al,BYTE PTR [rax]
   140007d1a:	add    BYTE PTR [rax],al
   140007d1c:	add    BYTE PTR [rax],al
   140007d1e:	add    BYTE PTR [rax],al
   140007d20:	and    eax,0x55203a73
   140007d25:	outs   dx,BYTE PTR ds:[rsi]
   140007d26:	(bad)  
   140007d27:	(bad)  
   140007d28:	ins    BYTE PTR es:[rdi],dx
   140007d29:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140007d2e:	movsxd esp,DWORD PTR [rcx+0x6e]
   140007d31:	movsxd esp,DWORD PTR [rbp+0x6c]
   140007d34:	and    BYTE PTR [rcx+0x4c],al
   140007d37:	push   rax
   140007d38:	rex.XB and BYTE PTR [r13+0x65],bpl
   140007d3c:	jae    0x140007db1
   140007d3e:	(bad)  
   140007d3f:	and    BYTE PTR gs:[ecx+0x64],ch
   140007d44:	cmp    eax,0xa7825
   140007d49:	add    BYTE PTR [rax],al
   140007d4b:	add    BYTE PTR [rax],al
   140007d4d:	add    BYTE PTR [rax],al
   140007d4f:	add    BYTE PTR [rip+0x55203a73],ah        # 0x19520b7c8
   140007d55:	outs   dx,BYTE PTR ds:[rsi]
   140007d56:	gs js  0x140007dc9
   140007d59:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140007d5e:	and    BYTE PTR [rcx+0x4c],al
   140007d61:	push   rax
   140007d62:	rex.XB and BYTE PTR [r13+0x65],bpl
   140007d66:	jae    0x140007ddb
   140007d68:	(bad)  
   140007d69:	and    BYTE PTR gs:[ecx+edi*2+0x70],dh
   140007d6f:	and    BYTE PTR gs:[rip+0xa782520],ch        # 0x14a78a296
   140007d76:	add    BYTE PTR [rax],al
   140007d78:	and    al,BYTE PTR [rip+0x31993]        # 0x140039711
   140007d7e:	add    BYTE PTR [rax],al
   140007d80:	pop    rsp
   140007d81:	(bad)  
   140007d82:	add    BYTE PTR [rax],al
   140007d84:	add    DWORD PTR [rax],eax
   140007d86:	add    BYTE PTR [rax],al
   140007d88:	je     0x140007d0c
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	or     BYTE PTR [rax],al
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	movabs al,ds:0x48000082
   140007d99:	add    BYTE PTR [rax],al
   140007d9b:	add    BYTE PTR [rcx],al
   140007d9d:	add    BYTE PTR [rax],al
   140007d9f:	add    BYTE PTR [rdx],ah
   140007da1:	add    eax,0x41993
   140007da6:	add    BYTE PTR [rax],al
   140007da8:	sbb    BYTE PTR [rsi+0x20000],al
   140007dae:	add    BYTE PTR [rax],al
   140007db0:	cmp    BYTE PTR [rsi+0x80000],al
   140007db6:	add    BYTE PTR [rax],al
   140007db8:	nop
   140007db9:	xchg   BYTE PTR [rax],al
   140007dbb:	add    BYTE PTR [rax],ah
   140007dbd:	add    BYTE PTR [rax],al
   140007dbf:	add    BYTE PTR [rax],al
   140007dc1:	add    BYTE PTR [rax],al
   140007dc3:	add    BYTE PTR [rcx],al
   140007dc5:	add    BYTE PTR [rax],al
   140007dc7:	add    BYTE PTR [rdx],ah
   140007dc9:	add    eax,0x21993
   140007dce:	add    BYTE PTR [rax],al
   140007dd0:	ins    BYTE PTR es:[rdi],dx
   140007dd1:	test   BYTE PTR [rax],al
   140007dd3:	add    BYTE PTR [rcx],al
   140007dd5:	add    BYTE PTR [rax],al
   140007dd7:	add    BYTE PTR [rax+0x5000085],al
   140007ddd:	add    BYTE PTR [rax],al
   140007ddf:	add    BYTE PTR [rax+0x20000085],ch
   140007de5:	add    BYTE PTR [rax],al
   140007de7:	add    BYTE PTR [rax],al
   140007de9:	add    BYTE PTR [rax],al
   140007deb:	add    BYTE PTR [rcx],al
   140007ded:	add    BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rdx],ah
   140007df1:	add    eax,0x21993
   140007df6:	add    BYTE PTR [rax],al
   140007df8:	rex add DWORD PTR [rax],0x0
	...
   140007e04:	add    al,0x0
   140007e06:	add    BYTE PTR [rax],al
   140007e08:	push   rax
   140007e09:	add    DWORD PTR [rax],0x0
   140007e0c:	and    BYTE PTR [rax],al
   140007e0e:	add    BYTE PTR [rax],al
   140007e10:	add    BYTE PTR [rax],al
   140007e12:	add    BYTE PTR [rax],al
   140007e14:	add    DWORD PTR [rax],eax
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	and    al,BYTE PTR [rip+0x31993]        # 0x1400397b1
   140007e1e:	add    BYTE PTR [rax],al
   140007e20:	rol    BYTE PTR [rbx+0x10000],0x0
   140007e27:	add    al,bl
   140007e29:	add    DWORD PTR [rax],0x0
   140007e2c:	or     BYTE PTR [rax],al
   140007e2e:	add    BYTE PTR [rax],al
   140007e30:	add    BYTE PTR [rax+rax*1+0x2800],al
   140007e37:	add    BYTE PTR [rax],al
   140007e39:	add    BYTE PTR [rax],al
   140007e3b:	add    BYTE PTR [rcx],al
   140007e3d:	add    BYTE PTR [rax],al
   140007e3f:	add    BYTE PTR [rdx],ah
   140007e41:	add    eax,0x21993
   140007e46:	add    BYTE PTR [rax],al
   140007e48:	ins    BYTE PTR es:[rdi],dx
   140007e49:	test   BYTE PTR [rax],al
   140007e4b:	add    BYTE PTR [rcx],al
   140007e4d:	add    BYTE PTR [rax],al
   140007e4f:	add    BYTE PTR [rsp+rax*4+0x0],bh
   140007e53:	add    BYTE PTR [rsi],al
   140007e55:	add    BYTE PTR [rax],al
   140007e57:	add    BYTE PTR [rax+0x20000084],ch
   140007e5d:	add    BYTE PTR [rax],al
   140007e5f:	add    BYTE PTR [rax],al
   140007e61:	add    BYTE PTR [rax],al
   140007e63:	add    BYTE PTR [rcx],al
   140007e65:	add    BYTE PTR [rax],al
   140007e67:	add    BYTE PTR [rdx],ah
   140007e69:	add    eax,0x21993
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	ins    BYTE PTR es:[rdi],dx
   140007e71:	test   BYTE PTR [rax],al
   140007e73:	add    BYTE PTR [rcx],al
   140007e75:	add    BYTE PTR [rax],al
   140007e77:	add    BYTE PTR [rax],bl
   140007e79:	xchg   DWORD PTR [rax],eax
   140007e7b:	add    BYTE PTR [rax+rax*1],al
   140007e7e:	add    BYTE PTR [rax],al
   140007e80:	rex xchg DWORD PTR [rax],eax
   140007e83:	add    BYTE PTR [rax],ah
   140007e85:	add    BYTE PTR [rax],al
   140007e87:	add    BYTE PTR [rax],al
   140007e89:	add    BYTE PTR [rax],al
   140007e8b:	add    BYTE PTR [rcx],al
   140007e8d:	add    BYTE PTR [rax],al
   140007e8f:	add    BYTE PTR [rax],al
   140007e91:	add    BYTE PTR [rax],al
   140007e93:	add    BYTE PTR [rax+0x559f3a],bl
   140007e99:	add    BYTE PTR [rax],al
   140007e9b:	add    BYTE PTR [rdx],al
   140007e9d:	add    BYTE PTR [rax],al
   140007e9f:	add    BYTE PTR [rdi],ah
   140007ea1:	add    BYTE PTR [rax],al
   140007ea3:	add    BYTE PTR [rax-0x6fffff81],dl
   140007ea9:	add    BYTE PTR [eax],al
   140007eac:	add    BYTE PTR [rax],al
   140007eae:	add    BYTE PTR [rax],al
   140007eb0:	cwde   
   140007eb1:	cmp    bl,BYTE PTR [rdi+0x55]
   140007eb7:	add    BYTE PTR [rip+0x40000000],cl        # 0x180007ebd
   140007ebd:	add    al,BYTE PTR [rax]
   140007ebf:	add    ah,cl
   140007ec1:	jg     0x140007ec3
   140007ec3:	add    ah,cl
   140007ec5:	add    BYTE PTR [eax],al
	...
   140007ef0:	movabs al,ds:0x0
	...
   140007f45:	add    BYTE PTR [rax],al
   140007f47:	add    BYTE PTR [rax],bl
   140007f49:	movabs al,ds:0x14000
	...
   140007f5e:	add    BYTE PTR [rax],al
   140007f60:	xor    BYTE PTR [rax+rax*1+0x40],0x1
   140007f65:	add    BYTE PTR [rax],al
   140007f67:	add    BYTE PTR [rax+0x1400074],cl
   140007f6d:	add    BYTE PTR [rax],al
   140007f6f:	add    al,bl
   140007f71:	je     0x140007f73
   140007f73:	rex add DWORD PTR [rax],eax
   140007f76:	add    BYTE PTR [rax],al
   140007f78:	and    al,0x0
   140007f7a:	add    BYTE PTR [rax],al
   140007f7c:	add    BYTE PTR [rax],al
   140007f7e:	add    BYTE PTR [rax],al
   140007f80:	add    BYTE PTR [rip+0x0],dh        # 0x140007f86
	...
   140007f8e:	add    BYTE PTR [rax],al
   140007f90:	push   rdx
   140007f91:	push   rbx
   140007f92:	rex.R push rbx
   140007f94:	test   eax,0xc40007da
   140007f99:	or     al,0xe0
   140007f9b:	rex.WRB pushf 
   140007f9d:	test   BYTE PTR [rbx],al
   140007f9f:	jrcxz  0x140007f4f
   140007fa1:	lea    ecx,[rbx-0x65]
   140007fa4:	add    DWORD PTR [rax],eax
   140007fa6:	add    BYTE PTR [rax],al
   140007fa8:	rex.WRX
   140007fa9:	gs je  0x140007ff1
   140007fac:	jbe    0x140008022
   140007fae:	rex.RX ja 0x140008015
   140007fb1:	jb     0x140007fe1
   140007fb3:	jo     0x140008019
   140007fb5:	(bad)  
	...
   140007fca:	add    BYTE PTR [rax],al
   140007fcc:	rex.RXB
   140007fcd:	rex.XB push r12
   140007fcf:	rex.WR add BYTE PTR [rax],r10b
   140007fd2:	add    BYTE PTR [rax],al
   140007fd4:	pop    rbx
   140007fd5:	add    BYTE PTR [rax],al
   140007fd7:	add    BYTE PTR [rsi],ch
   140007fd9:	je     0x140008040
   140007fdb:	js     0x140008051
   140007fdd:	and    al,0x64
   140007fdf:	imul   eax,DWORD PTR [rax],0x60000000
   140007fe5:	adc    BYTE PTR [rax],al
   140007fe7:	add    BYTE PTR [rsi+rcx*2+0x742e0000],ah
   140007fee:	gs js  0x140008065
   140007ff1:	and    al,0x6d
   140007ff3:	outs   dx,BYTE PTR ds:[rsi]
   140007ff4:	add    BYTE PTR [rax],al
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	adc    BYTE PTR [rdi+0x0],bl
   140007ffb:	add    BYTE PTR [rdx],dl
   140007ffd:	add    BYTE PTR [rax],al
   140007fff:	add    BYTE PTR [rsi],ch
   140008001:	je     0x140008068
   140008003:	js     0x140008079
   140008005:	and    al,0x6d
   140008007:	outs   dx,BYTE PTR ds:[rsi]
   140008008:	and    al,0x30
   14000800a:	xor    BYTE PTR [rax],al
   14000800c:	xor    BYTE PTR [rdi+0x0],bl
   14000800f:	add    al,al
   140008011:	add    al,BYTE PTR [rax]
   140008013:	add    BYTE PTR [rsi],ch
   140008015:	je     0x14000807c
   140008017:	js     0x14000808d
   140008019:	and    al,0x78
   14000801b:	add    al,dh
   14000801d:	(bad)  
   14000801e:	add    BYTE PTR [rax],al
   140008020:	and    eax,0x2e000000
   140008025:	je     0x14000808c
   140008027:	js     0x14000809d
   140008029:	and    al,0x79
   14000802b:	add    BYTE PTR fs:[rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	add    BYTE PTR [rax+0x0],dh
   140008033:	add    BYTE PTR [rax+0x2e000004],al
   140008039:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140008041:	add    BYTE PTR [rax],al
   140008043:	add    BYTE PTR [rax+0x10000074],al
   140008049:	add    BYTE PTR [rax],al
   14000804b:	add    BYTE PTR [rsi],ch
   14000804d:	xor    BYTE PTR [rax],dh
   14000804f:	movsxd esp,DWORD PTR [rsi+0x67]
   140008052:	add    BYTE PTR [rax],al
   140008054:	nop
   140008055:	je     0x140008057
   140008057:	add    BYTE PTR [rax],cl
   140008059:	add    BYTE PTR [rax],al
   14000805b:	add    BYTE PTR [rsi],ch
   14000805d:	rex.XB push r10
   14000805f:	push   rsp
   140008060:	and    al,0x58
   140008062:	rex.XB
   140008063:	add    BYTE PTR [r8],al
   140008066:	add    BYTE PTR [rax],al
   140008068:	cwde   
   140008069:	je     0x14000806b
   14000806b:	add    BYTE PTR [rax],cl
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    BYTE PTR [rsi],ch
   140008071:	rex.XB push r10
   140008073:	push   rsp
   140008074:	and    al,0x58
   140008076:	rex.XB
   140008077:	rex.B
   140008078:	add    BYTE PTR [r8],al
   14000807b:	add    BYTE PTR [rax+0x10000074],ah
   140008081:	add    BYTE PTR [rax],al
   140008083:	add    BYTE PTR [rsi],ch
   140008085:	rex.XB push r10
   140008087:	push   rsp
   140008088:	and    al,0x58
   14000808a:	rex.XB push r13
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    BYTE PTR [rax],al
   140008090:	mov    al,0x74
   140008092:	add    BYTE PTR [rax],al
   140008094:	or     BYTE PTR [rax],al
   140008096:	add    BYTE PTR [rax],al
   140008098:	cs rex.XB push r10
   14000809b:	push   rsp
   14000809c:	and    al,0x58
   14000809e:	rex.XB pop r10
   1400080a0:	add    BYTE PTR [rax],al
   1400080a2:	add    BYTE PTR [rax],al
   1400080a4:	mov    eax,0x8000074
   1400080a9:	add    BYTE PTR [rax],al
   1400080ab:	add    BYTE PTR [rsi],ch
   1400080ad:	rex.XB push r10
   1400080af:	push   rsp
   1400080b0:	and    al,0x58
   1400080b2:	rex.WB
   1400080b3:	add    BYTE PTR [r8],al
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	shl    BYTE PTR [rax+rax*1+0x0],0x8
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rsi],ch
   1400080c1:	rex.XB push r10
   1400080c3:	push   rsp
   1400080c4:	and    al,0x58
   1400080c6:	rex.WB
   1400080c7:	rex.B
   1400080c8:	add    BYTE PTR [r8],al
   1400080cb:	add    al,cl
   1400080cd:	je     0x1400080cf
   1400080cf:	add    BYTE PTR [rax],cl
   1400080d1:	add    BYTE PTR [rax],al
   1400080d3:	add    BYTE PTR [rsi],ch
   1400080d5:	rex.XB push r10
   1400080d7:	push   rsp
   1400080d8:	and    al,0x58
   1400080da:	rex.WB pop r9
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	shl    BYTE PTR [rax+rax*1+0x0],1
   1400080e4:	or     BYTE PTR [rax],al
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	cs rex.XB push r10
   1400080eb:	push   rsp
   1400080ec:	and    al,0x58
   1400080ee:	rex.WB pop r10
   1400080f0:	add    BYTE PTR [rax],al
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	fdiv   DWORD PTR [rax+rax*1+0x0]
   1400080f8:	nop
   1400080f9:	add    BYTE PTR [rax],al
   1400080fb:	add    BYTE PTR [rsi],ch
   1400080fd:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140008105:	add    BYTE PTR [rax],al
   140008107:	add    BYTE PTR [rax+0x75],dh
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	and    BYTE PTR [rdx],cl
   14000810e:	add    BYTE PTR [rax],al
   140008110:	cs jb  0x140008177
   140008113:	(bad)  
   140008114:	je     0x140008177
   140008116:	add    BYTE PTR [rax],al
   140008118:	nop
   140008119:	jg     0x14000811b
   14000811b:	add    BYTE PTR [rdx+rax*1+0x0],bh
   14000811f:	add    BYTE PTR [rsi],ch
   140008121:	jb     0x140008187
   140008123:	(bad)  
   140008124:	je     0x140008187
   140008126:	and    al,0x7a
   140008128:	jp     0x1400081a4
   14000812a:	fs (bad) 
   14000812c:	add    BYTE PTR [eax],al
   14000812f:	add    BYTE PTR [rax],dl
   140008131:	(bad)  
   140008132:	add    BYTE PTR [rax],al
   140008134:	in     al,0x7
   140008136:	add    BYTE PTR [rax],al
   140008138:	cs js  0x14000819f
   14000813b:	(bad)  
   14000813c:	je     0x14000819f
   14000813e:	add    BYTE PTR [rax],al
   140008140:	clc    
   140008141:	mov    DWORD PTR [rax],eax
   140008143:	add    BYTE PTR [rcx+rax*1+0x0],bh
   140008147:	add    BYTE PTR [rsi],ch
   140008149:	js     0x1400081af
   14000814b:	(bad)  
   14000814c:	je     0x1400081af
   14000814e:	and    al,0x78
   140008150:	add    BYTE PTR [rax],al
   140008152:	add    BYTE PTR [rax],al
   140008154:	je     0x1400080e1
   140008156:	add    BYTE PTR [rax],al
   140008158:	push   0x2e000001
   14000815d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    ah,bl
   140008169:	mov    WORD PTR [rax],es
   14000816b:	add    BYTE PTR [rax+rax*1],dl
   14000816e:	add    BYTE PTR [rax],al
   140008170:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140008179:	add    BYTE PTR [rax],al
   14000817b:	add    al,dh
   14000817d:	mov    WORD PTR [rax],es
   14000817f:	add    BYTE PTR [rax+0x2e000004],al
   140008185:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    BYTE PTR [rax-0x6f],dh
   140008192:	add    BYTE PTR [rax],al
   140008194:	pop    rax
   140008195:	or     al,0x0
   140008197:	add    BYTE PTR [rsi],ch
   140008199:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   1400081a1:	add    BYTE PTR [rax],al
   1400081a3:	add    BYTE PTR [rax],al
   1400081a5:	movabs al,ds:0x642e000000380000
   1400081ae:	(bad)  
   1400081af:	je     0x140008212
   1400081b1:	add    BYTE PTR [rax],al
   1400081b3:	add    BYTE PTR [rax],bh
   1400081b5:	movabs al,ds:0x642e000000c00000
   1400081be:	(bad)  
   1400081bf:	je     0x140008222
   1400081c1:	and    al,0x72
   1400081c3:	add    BYTE PTR [rax],al
   1400081c5:	movabs eax,ds:0x622e000006800000
   1400081ce:	jae    0x140008243
   1400081d0:	add    BYTE PTR [rax],al
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	add    BYTE PTR [rax+0x4e00000],dh
   1400081da:	add    BYTE PTR [rax],al
   1400081dc:	cs jo  0x140008243
   1400081df:	(bad)  
   1400081e0:	je     0x140008243
   1400081e2:	add    BYTE PTR [rax],al
   1400081e4:	add    al,al
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	movabs al,ds:0x637273722e000000
   1400081f1:	and    al,0x30
   1400081f3:	xor    DWORD PTR [rax],eax
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    BYTE PTR [rax+0x300000c0],ah
   1400081fd:	(bad)  
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	cs jb  0x140008276
   140008203:	jb     0x140008268
   140008205:	and    al,0x30
   140008207:	xor    al,BYTE PTR [rax]
   140008209:	add    BYTE PTR [rax],al
   14000820b:	add    BYTE PTR [rax],al
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rcx],al
   140008211:	add    al,0x1
   140008213:	add    BYTE PTR [rdx+riz*2],al
   140008216:	add    BYTE PTR [rax],al
   140008218:	add    DWORD PTR [rbx],ecx
   14000821a:	add    DWORD PTR [rax],eax
   14000821c:	or     eax,DWORD PTR [rdx+0x4010000]
   140008222:	add    DWORD PTR [rax],eax
   140008224:	add    al,0x82
   140008226:	add    BYTE PTR [rax],al
   140008228:	add    DWORD PTR [rcx+rax*1],eax
   14000822b:	add    BYTE PTR [rdx+rax*8],al
   14000822e:	add    BYTE PTR [rax],al
   140008230:	add    DWORD PTR [rdi],ecx
   140008232:	(bad)  
   140008233:	add    BYTE PTR [rdi],cl
   140008235:	fs (bad) 
   140008237:	add    BYTE PTR [rdi],cl
   140008239:	xor    al,0x6
   14000823b:	add    BYTE PTR [rdi],cl
   14000823d:	xor    cl,BYTE PTR [rbx]
   14000823f:	jo     0x14000825a
   140008241:	sbb    DWORD PTR [rax],ecx
   140008243:	add    BYTE PTR [rax],dl
   140008245:	ror    BYTE PTR [rax+rsi*8],cl
   140008248:	or     ah,al
   14000824a:	or     al,dl
   14000824c:	(bad)  
   14000824d:	rol    BYTE PTR [rax+rsi*2],0x3
   140008251:	(bad)  
   140008252:	add    dh,BYTE PTR [rax]
   140008254:	rex.W pop rbp
   140008256:	add    BYTE PTR [rax],al
   140008258:	js     0x1400082d7
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	(bad)  
   14000825d:	(bad)  
   14000825e:	(bad)  
   14000825f:	inc    DWORD PTR [rax]
   140008261:	add    BYTE PTR [rax],al
   140008263:	add    BYTE PTR [rax],al
   140008265:	add    BYTE PTR [rax],al
   140008267:	add    BYTE PTR [rsi],dh
   140008269:	pop    rdi
   14000826a:	add    BYTE PTR [rax],al
   14000826c:	(bad)  
   14000826d:	(bad)  
   14000826e:	(bad)  
   14000826f:	inc    DWORD PTR [rax]
   140008271:	add    BYTE PTR [rax],al
   140008273:	add    BYTE PTR [rax],al
   140008275:	add    BYTE PTR [rax],al
   140008277:	add    BYTE PTR [rcx],al
   140008279:	add    BYTE PTR [rax],al
   14000827b:	add    BYTE PTR [rdx],al
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    BYTE PTR [rcx],al
   140008281:	add    BYTE PTR [rax],al
   140008283:	add    BYTE PTR [rax+0x82],cl
   140008289:	add    BYTE PTR [rax],al
   14000828b:	add    BYTE PTR [rax+0xa0],dh
   140008291:	add    BYTE PTR [rax],al
   140008293:	add    BYTE PTR [rdx+0x5f],al
   140008296:	add    BYTE PTR [rax],al
   140008298:	pop    rax
   140008299:	add    BYTE PTR [rax],al
   14000829b:	add    BYTE PTR [rax],al
   14000829d:	add    BYTE PTR [rax],al
   14000829f:	add    BYTE PTR [rax-0xffffee],cl
   1400082a5:	(bad)  
   1400082a6:	(bad)  
   1400082a7:	push   QWORD PTR [rsi]
   1400082a9:	adc    eax,0x0
   1400082ae:	add    BYTE PTR [rax],al
   1400082b0:	rex.RB adc eax,0x10000
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	push   rdi
   1400082b9:	adc    eax,0x0
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	stos   BYTE PTR es:[rdi],al
   1400082c1:	adc    eax,0xffff0000
   1400082c6:	(bad)  
   1400082c7:	inc    DWORD PTR [rdx+0x5f]
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	add    BYTE PTR [rax],al
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	rex.WRXB pop r15
   1400082d2:	add    BYTE PTR [rax],al
   1400082d4:	add    al,BYTE PTR [rax]
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	mov    BYTE PTR [rdi+0x0],bl
   1400082db:	add    BYTE PTR [rax],al
   1400082dd:	add    BYTE PTR [rax],al
   1400082df:	add    BYTE PTR [rcx],bl
   1400082e1:	or     al,BYTE PTR [rdx]
   1400082e3:	add    BYTE PTR [rdx],cl
   1400082e5:	jb     0x1400082ed
   1400082e7:	push   rax
   1400082e8:	rex.W pop rbp
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	js     0x14000836b
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	add    DWORD PTR [rax+rcx*1],edx
   1400082f3:	add    BYTE PTR [rsp+riz*2],dl
   1400082f6:	or     BYTE PTR [rax],al
   1400082f8:	adc    al,0x54
   1400082fa:	(bad)  
   1400082fb:	add    BYTE PTR [rsp+rsi*1],dl
   1400082fe:	(bad)  
   1400082ff:	add    BYTE PTR [rdx+rsi*1],dl
   140008302:	adc    BYTE PTR [rax+0x1],dh
   140008305:	(bad)  
   140008306:	add    al,BYTE PTR [rax]
   140008308:	(bad)  
   140008309:	xor    al,BYTE PTR [rdx]
   14000830b:	xor    BYTE PTR [rcx],al
   14000830d:	clts   
   14000830f:	add    BYTE PTR [rdi],cl
   140008311:	fs or  al,0x0
   140008314:	sysenter 
   140008316:	or     eax,DWORD PTR [rax]
   140008318:	(bad)  
   14000831a:	or     esi,DWORD PTR [rax+0x1]
   14000831d:	or     al,BYTE PTR [rax+rax*1]
   140008320:	or     dh,BYTE PTR [rsi+rax*1]
   140008323:	add    BYTE PTR [rdx],cl
   140008325:	xor    al,BYTE PTR [rsi]
   140008327:	jo     0x14000833a
   140008329:	sbb    al,0x6
   14000832b:	add    BYTE PTR [rsp+riz*2],bl
   14000832e:	or     al,BYTE PTR [rax]
   140008330:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008333:	add    BYTE PTR [rdx+rdx*2],cl
   140008336:	or     BYTE PTR [rax+0x48],dh
   140008339:	pop    rbp
   14000833a:	add    BYTE PTR [rax],al
   14000833c:	lock jge 0x14000833f
   14000833f:	add    bh,bh
   140008341:	(bad)  
   140008342:	(bad)  
   140008343:	call   FWORD PTR [rdi+rbx*2+0x0]
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	scas   eax,DWORD PTR es:[rdi]
   14000834d:	pop    rdi
   14000834e:	add    BYTE PTR [rax],al
   140008350:	mov    eax,0xff00001b
   140008355:	(bad)  
   140008356:	(bad)  
   140008357:	(bad)  
   140008358:	in     al,dx
   140008359:	sbb    eax,DWORD PTR [rax]
   14000835b:	add    BYTE PTR [rcx],al
   14000835d:	add    BYTE PTR [rax],al
   14000835f:	add    BYTE PTR [rdx+0x1c],cl
   140008362:	add    BYTE PTR [rax],al
   140008364:	add    BYTE PTR [rax],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	jbe    0x140008386
   14000836a:	add    BYTE PTR [rax],al
   14000836c:	(bad)  
   14000836d:	(bad)  
   14000836e:	(bad)  
   14000836f:	inc    DWORD PTR [rcx]
   140008371:	sbb    DWORD PTR [rdx],ecx
   140008373:	add    BYTE PTR [rcx],bl
   140008375:	je     0x140008383
   140008377:	add    BYTE PTR [rcx],bl
   140008379:	or     eax,DWORD PTR fs:[rax]
   14000837c:	sbb    DWORD PTR [rdx+rcx*1],esi
   14000837f:	add    BYTE PTR [rcx],bl
   140008381:	push   rdx
   140008382:	adc    eax,0x11e013f0
   140008387:	rol    BYTE PTR [rcx],0x18
   14000838a:	or     al,BYTE PTR [rax]
   14000838c:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140008390:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140008394:	sbb    BYTE PTR [rax+rcx*1],dh
   140008397:	add    BYTE PTR [rax],bl
   140008399:	xor    dl,BYTE PTR [rax+riz*8]
   14000839c:	adc    al,al
   14000839e:	adc    BYTE PTR [rax+0x19],dh
   1400083a1:	and    al,0xa
   1400083a3:	add    BYTE PTR [rsp+riz*2],ah
   1400083a6:	(bad)  
   1400083a7:	add    BYTE PTR [rax],ah
   1400083a9:	xor    al,0xd
   1400083ab:	add    BYTE PTR [rdx+rdx*2],dl
   1400083ae:	adc    al,dh
   1400083b0:	(bad)  
   1400083b1:	loopne 0x1400083bf
   1400083b3:	ror    BYTE PTR [rdx],1
   1400083b5:	ror    BYTE PTR [rax],0x70
   1400083b8:	rex.W pop rbp
   1400083ba:	add    BYTE PTR [rax],al
   1400083bc:	sbb    BYTE PTR [rsi+0x0],bh
   1400083bf:	add    bh,bh
   1400083c1:	(bad)  
   1400083c2:	(bad)  
   1400083c3:	inc    DWORD PTR [rax]
   1400083c5:	add    BYTE PTR [rax],al
   1400083c7:	add    BYTE PTR [rax],al
   1400083c9:	add    BYTE PTR [rax],al
   1400083cb:	add    al,cl
   1400083cd:	pop    rdi
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	(bad)  
   1400083d1:	(bad)  
   1400083d2:	(bad)  
   1400083d3:	inc    DWORD PTR [rax]
   1400083d5:	add    BYTE PTR [rax],al
   1400083d7:	add    BYTE PTR [rax],al
   1400083d9:	add    BYTE PTR [rax],al
   1400083db:	add    BYTE PTR [rcx],al
   1400083dd:	add    BYTE PTR [rax],al
   1400083df:	add    BYTE PTR [rdx],al
   1400083e1:	add    BYTE PTR [rax],al
   1400083e3:	add    BYTE PTR [rcx],al
   1400083e5:	add    BYTE PTR [rax],al
   1400083e7:	add    ah,ch
   1400083e9:	add    DWORD PTR [rax],0x0
   1400083ec:	add    BYTE PTR [rax],al
   1400083ee:	add    BYTE PTR [rax],al
   1400083f0:	mov    al,0xa0
   1400083f2:	add    BYTE PTR [rax],al
   1400083f4:	add    BYTE PTR [rax],al
   1400083f6:	add    BYTE PTR [rax],al
   1400083f8:	(bad)  
   1400083f9:	pop    rdi
   1400083fa:	add    BYTE PTR [rax],al
   1400083fc:	cmp    BYTE PTR [rax],al
   1400083fe:	add    BYTE PTR [rax],al
   140008400:	nop
   140008401:	and    al,0x0
   140008403:	add    bh,bh
   140008405:	(bad)  
   140008406:	(bad)  
   140008407:	jmp    rax
   140008409:	and    eax,0x0
   14000840e:	add    BYTE PTR [rax],al
   140008410:	repnz and eax,0x10000
   140008416:	add    BYTE PTR [rax],al
   140008418:	(bad)  
   140008419:	add    BYTE PTR es:[rax],al
   14000841c:	add    BYTE PTR [rax],al
   14000841e:	add    BYTE PTR [rax],al
   140008420:	and    eax,0xff000026
   140008425:	(bad)  
   140008426:	(bad)  
   140008427:	call   rsp
   140008429:	pop    rdi
   14000842a:	add    BYTE PTR [rax],al
   14000842c:	add    BYTE PTR [rax],al
   14000842e:	add    BYTE PTR [rax],al
   140008430:	loope  0x140008491
   140008432:	add    BYTE PTR [rax],al
   140008434:	add    al,BYTE PTR [rax]
   140008436:	add    BYTE PTR [rax],al
   140008438:	(bad)  
   140008439:	(bad)  
   14000843a:	add    BYTE PTR [rax],al
   14000843c:	add    BYTE PTR [rax],al
   14000843e:	add    BYTE PTR [rax],al
   140008440:	sbb    DWORD PTR [rdx],ecx
   140008442:	add    al,BYTE PTR [rax]
   140008444:	or     dh,BYTE PTR [rdx]
   140008446:	(bad)  
   140008447:	push   rax
   140008448:	rex.W pop rbp
   14000844a:	add    BYTE PTR [rax],al
   14000844c:	sbb    BYTE PTR [rsi+0x0],bh
   14000844f:	add    BYTE PTR [rcx],bl
   140008451:	and    al,0x8
   140008453:	add    BYTE PTR [rsp+riz*2],ah
   140008456:	adc    DWORD PTR [rax],eax
   140008458:	and    BYTE PTR [rax+rdx*1],dh
   14000845b:	add    BYTE PTR [rdx+rdx*4],dl
   14000845e:	adc    al,dh
   140008460:	(bad)  
   140008461:	loopne 0x14000846f
   140008463:	jo     0x1400084ad
   140008465:	pop    rbp
   140008466:	add    BYTE PTR [rax],al
   140008468:	rex jle 0x14000846b
   14000846b:	add    bh,bh
   14000846d:	(bad)  
   14000846e:	(bad)  
   14000846f:	inc    DWORD PTR [rax]
   140008471:	add    BYTE PTR [rax],al
   140008473:	add    bh,bh
   140008475:	(bad)  
   140008476:	(bad)  
   140008477:	inc    DWORD PTR [rax]
	...
   140008481:	add    BYTE PTR [rax],al
   140008483:	add    BYTE PTR [rcx],al
   140008485:	add    BYTE PTR [rax],al
   140008487:	add    BYTE PTR [rcx],al
   140008489:	add    BYTE PTR [rax],al
   14000848b:	add    BYTE PTR [rax+0x84],dl
   140008491:	add    BYTE PTR [rax],al
   140008493:	add    BYTE PTR [rax+0xa0],dh
   140008499:	add    BYTE PTR [rax],al
   14000849b:	add    BYTE PTR [rbx],ch
   14000849d:	(bad)  
   14000849e:	add    BYTE PTR [rax],al
   1400084a0:	cmp    BYTE PTR [rax],al
   1400084a2:	add    BYTE PTR [rax],al
   1400084a4:	add    BYTE PTR [rax],al
   1400084a6:	add    BYTE PTR [rax],al
   1400084a8:	add    BYTE PTR [rdi],ah
   1400084aa:	add    BYTE PTR [rax],al
   1400084ac:	(bad)  
   1400084ad:	(bad)  
   1400084ae:	(bad)  
   1400084af:	call   rsi
   1400084b1:	(bad)  
   1400084b2:	add    BYTE PTR [rax],al
   1400084b4:	add    BYTE PTR [rax],al
   1400084b6:	add    BYTE PTR [rax],al
   1400084b8:	data16 sub BYTE PTR [rax],al
   1400084bb:	add    bh,bh
   1400084bd:	(bad)  
   1400084be:	(bad)  
   1400084bf:	jmp    FWORD PTR [rbx]
   1400084c1:	(bad)  
   1400084c2:	add    BYTE PTR [rax],al
   1400084c4:	add    BYTE PTR [rax],al
   1400084c6:	add    BYTE PTR [rax],al
   1400084c8:	cmp    BYTE PTR [rax+0x0],ah
   1400084cb:	add    BYTE PTR [rcx],al
   1400084cd:	add    BYTE PTR [rax],al
   1400084cf:	add    BYTE PTR [rsi+0x60],ch
   1400084d2:	add    BYTE PTR [rax],al
   1400084d4:	add    BYTE PTR [rax],al
   1400084d6:	add    BYTE PTR [rax],al
   1400084d8:	sbb    DWORD PTR [rdx],ecx
   1400084da:	add    al,BYTE PTR [rax]
   1400084dc:	or     dh,BYTE PTR [rdx]
   1400084de:	(bad)  
   1400084df:	push   rax
   1400084e0:	rex.W pop rbp
   1400084e2:	add    BYTE PTR [rax],al
   1400084e4:	rex jle 0x1400084e7
   1400084e7:	add    BYTE PTR [rcx],al
   1400084e9:	adc    al,0x6
   1400084eb:	add    BYTE PTR [rsp+rdx*2],dl
   1400084ee:	or     DWORD PTR [rax],eax
   1400084f0:	adc    al,0x34
   1400084f2:	(bad)  
   1400084f3:	add    BYTE PTR [rdx+rsi*1],dl
   1400084f6:	adc    BYTE PTR [rax+0x1],dh
   1400084f9:	(bad)  
   1400084fa:	or     al,BYTE PTR [rax]
   1400084fc:	(bad)  
   1400084fd:	push   rsp
   1400084fe:	or     al,0x0
   140008500:	(bad)  
   140008501:	xor    al,0xb
   140008503:	add    BYTE PTR [rsi],dl
   140008505:	xor    dl,BYTE PTR [rdx]
   140008507:	lock adc al,ah
   14000850a:	(bad)  
   14000850b:	ror    BYTE PTR [rax+rsi*2],0xb
   14000850f:	(bad)  
   140008510:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41d8522
   140008516:	or     eax,DWORD PTR [rax]
   140008518:	sbb    eax,0x1d000a64
   14000851d:	push   rsp
   14000851e:	or     DWORD PTR [rax],eax
   140008520:	sbb    eax,0x1d000834
   140008525:	xor    bl,BYTE PTR [rcx]
   140008527:	lock (bad) 
   140008529:	loopne 0x140008540
   14000852b:	rol    BYTE PTR [rcx],0x4
   14000852e:	add    DWORD PTR [rax],eax
   140008530:	add    al,0x42
   140008532:	add    BYTE PTR [rax],al
   140008534:	sbb    DWORD PTR [rdx],esp
   140008536:	(bad)  
   140008537:	add    BYTE PTR [rsp+rsi*1],dl
   14000853a:	add    BYTE PTR cs:[rcx+rax*1],dl
   14000853e:	sub    al,BYTE PTR [rax]
   140008540:	or     BYTE PTR [rax+0x7],dh
   140008543:	(bad)  
   140008544:	(bad)  
   140008545:	push   rax
   140008546:	add    BYTE PTR [rax],al
   140008548:	int3   
   140008549:	pop    rbp
   14000854a:	add    BYTE PTR [rax],al
   14000854c:	rex add DWORD PTR [rax],eax
   14000854f:	add    BYTE PTR [rcx],al
   140008551:	sbb    ecx,DWORD PTR [rdx]
   140008553:	add    BYTE PTR [rbx],bl
   140008555:	push   rsp
   140008556:	ltr    WORD PTR [rbx]
   140008559:	xor    al,0xe
   14000855b:	add    BYTE PTR [rbx],bl
   14000855d:	push   rdx
   14000855e:	(bad)  
   14000855f:	lock adc eax,0x11c013e0
   140008565:	jo     0x140008577
   140008567:	(bad)  
   140008568:	sbb    DWORD PTR [rsi+rax*1],ebx
   14000856b:	add    BYTE PTR [rsp+riz*2],bl
   14000856e:	or     al,0x0
   140008570:	sbb    BYTE PTR [rbx+rcx*1],dh
   140008573:	add    BYTE PTR [rdx+rsi*2],cl
   140008576:	or     BYTE PTR [rax+0x48],dh
   140008579:	pop    rbp
   14000857a:	add    BYTE PTR [rax],al
   14000857c:	enter  0x7d,0x0
	...
   140008588:	add    DWORD PTR [rax],eax
   14000858a:	add    BYTE PTR [rax],al
   14000858c:	add    DWORD PTR [rax],eax
   14000858e:	add    BYTE PTR [rax],al
   140008590:	xchg   esp,eax
   140008591:	test   DWORD PTR [rax],eax
   140008593:	add    BYTE PTR [rax+0x0],al
	...
   14000859e:	add    BYTE PTR [rax],al
   1400085a0:	(bad)  
   1400085a1:	(bad)  
   1400085a2:	add    BYTE PTR [rax],al
   1400085a4:	cmp    BYTE PTR [rax],al
   1400085a6:	add    BYTE PTR [rax],al
   1400085a8:	mov    al,0x35
   1400085aa:	add    BYTE PTR [rax],al
   1400085ac:	(bad)  
   1400085ad:	(bad)  
   1400085ae:	(bad)  
   1400085af:	(bad)  
   1400085b0:	jmp    0x1400085ea
   1400085b5:	add    BYTE PTR [rax],al
   1400085b7:	add    bh,bh
   1400085b9:	xor    eax,0xffff0000
   1400085be:	(bad)  
   1400085bf:	inc    DWORD PTR [rdx+0x60]
   1400085c5:	add    BYTE PTR [rax],al
   1400085c7:	add    BYTE PTR [rdi+0x1000060],cl
   1400085cd:	add    BYTE PTR [rax],al
   1400085cf:	add    BYTE PTR [rcx],bl
   1400085d1:	or     al,BYTE PTR [rdx]
   1400085d3:	add    BYTE PTR [rdx],cl
   1400085d5:	xor    al,BYTE PTR [rsi]
   1400085d7:	push   rax
   1400085d8:	rex.W pop rbp
   1400085da:	add    BYTE PTR [rax],al
   1400085dc:	enter  0x7d,0x0
   1400085e0:	add    DWORD PTR [rax],ebx
   1400085e2:	or     al,BYTE PTR [rax]
   1400085e4:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   1400085e8:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400085ec:	sbb    BYTE PTR [rax+rcx*1],dh
   1400085ef:	add    BYTE PTR [rax],bl
   1400085f1:	xor    dl,BYTE PTR [rax+rsi*8]
   1400085f4:	adc    ah,al
   1400085f6:	adc    BYTE PTR [rax+0x1],dh
   1400085f9:	(bad)  
   1400085fa:	add    al,BYTE PTR [rax]
   1400085fc:	(bad)  
   1400085fd:	push   rdx
   1400085fe:	add    dh,BYTE PTR [rax]
   140008600:	sbb    DWORD PTR [rdx],esp
   140008602:	(bad)  
   140008603:	add    BYTE PTR [rdx],bl
   140008605:	mov    dl,0x16
   140008607:	lock adc al,0xe0
   14000860a:	adc    dh,BYTE PTR [rax+0x11]
   14000860d:	(bad)  
   14000860e:	adc    BYTE PTR [rax],dh
   140008610:	rex.W pop rbp
   140008612:	add    BYTE PTR [rax],al
   140008614:	movabs al,ds:0xffffffff00007d
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    bh,bh
   140008621:	(bad)  
   140008622:	(bad)  
   140008623:	inc    DWORD PTR [rax]
   140008625:	add    BYTE PTR [rax],al
   140008627:	add    BYTE PTR [rcx],al
   140008629:	add    BYTE PTR [rax],al
   14000862b:	add    BYTE PTR [rax],al
   14000862d:	add    BYTE PTR [rax],al
   14000862f:	add    BYTE PTR [rcx],al
	...
   14000863d:	add    BYTE PTR [rax],al
   14000863f:	add    BYTE PTR [rbx],al
   140008641:	add    BYTE PTR [rax],al
   140008643:	add    BYTE PTR [rcx],al
   140008645:	add    BYTE PTR [rax],al
   140008647:	add    BYTE PTR [rax-0x7a],ah
   14000864a:	add    BYTE PTR [rax],al
   14000864c:	add    al,BYTE PTR [rax]
   14000864e:	add    BYTE PTR [rax],al
   140008650:	add    al,BYTE PTR [rax]
   140008652:	add    BYTE PTR [rax],al
   140008654:	add    eax,DWORD PTR [rax]
   140008656:	add    BYTE PTR [rax],al
   140008658:	add    DWORD PTR [rax],eax
   14000865a:	add    BYTE PTR [rax],al
   14000865c:	je     0x1400085e4
   14000865e:	add    BYTE PTR [rax],al
   140008660:	add    BYTE PTR [rax],al
	...
   14000866b:	add    BYTE PTR [rax+0x38000060],ch
   140008671:	add    BYTE PTR [rax],al
   140008673:	add    BYTE PTR [rax+0x0],al
	...
   14000867e:	add    BYTE PTR [rax],al
   140008680:	adc    eax,0x38000061
	...
   14000868d:	add    BYTE PTR [rax],al
   14000868f:	add    al,bh
   140008691:	cmp    BYTE PTR [rax],al
   140008693:	add    bh,bh
   140008695:	(bad)  
   140008696:	(bad)  
   140008697:	jmp    FWORD PTR [rcx+rdi*1+0x0]
   14000869b:	add    BYTE PTR [rax],al
   14000869d:	add    BYTE PTR [rax],al
   14000869f:	add    BYTE PTR [rbp-0xffffc7],dh
   1400086a5:	(bad)  
   1400086a6:	(bad)  
   1400086a7:	jmp    FWORD PTR [rax+0x60]
   1400086ad:	add    BYTE PTR [rax],al
   1400086af:	add    BYTE PTR [rbp+0x1000060],dh
   1400086b5:	add    BYTE PTR [rax],al
   1400086b7:	add    bl,al
   1400086b9:	(bad)  
   1400086ba:	add    BYTE PTR [rax],al
   1400086bc:	add    al,BYTE PTR [rax]
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	(bad)  
   1400086c1:	(bad)  
   1400086c2:	add    BYTE PTR [rax],al
   1400086c4:	add    BYTE PTR [rax],al
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	and    ah,BYTE PTR [rcx+0x0]
   1400086cb:	add    BYTE PTR [rbx],al
   1400086cd:	add    BYTE PTR [rax],al
   1400086cf:	add    BYTE PTR [rcx],bl
   1400086d1:	or     al,BYTE PTR [rdx]
   1400086d3:	add    BYTE PTR [rdx],cl
   1400086d5:	xor    al,BYTE PTR [rsi]
   1400086d7:	push   rax
   1400086d8:	rex.W pop rbp
   1400086da:	add    BYTE PTR [rax],al
   1400086dc:	movabs al,ds:0x19000a190100007d
   1400086e5:	je     0x1400086f0
   1400086e7:	add    BYTE PTR [rcx],bl
   1400086e9:	or     BYTE PTR fs:[rax],al
   1400086ec:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400086f0:	sbb    DWORD PTR [rsi+rax*1],esi
   1400086f3:	add    BYTE PTR [rcx],bl
   1400086f5:	xor    dl,BYTE PTR [rip+0x72e19e0]        # 0x1472ea0db
   1400086fb:	add    BYTE PTR [rsp+riz*2],bl
   1400086fe:	add    BYTE PTR [rax],r11b
   140008701:	xor    al,0x42
   140008703:	add    BYTE PTR [rbx],cl
   140008705:	add    DWORD PTR [rax+0x0],eax
   140008708:	add    al,0x70
   14000870a:	add    BYTE PTR [rax],al
   14000870c:	pop    rsp
   14000870d:	pop    rsi
   14000870e:	add    BYTE PTR [rax],al
   140008710:	push   0xfffffffff300007e
   140008715:	add    DWORD PTR [rax],eax
	...
   14000871f:	add    BYTE PTR [rcx],al
   140008721:	add    BYTE PTR [rax],al
   140008723:	add    BYTE PTR [rcx],al
   140008725:	add    BYTE PTR [rax],al
   140008727:	add    BYTE PTR [rdi+rax*4],ch
   14000872a:	add    BYTE PTR [rax],al
   14000872c:	add    BYTE PTR [rax],al
   14000872e:	add    BYTE PTR [rax],al
   140008730:	mov    al,0xa0
   140008732:	add    BYTE PTR [rax],al
   140008734:	add    BYTE PTR [rax],al
   140008736:	add    BYTE PTR [rax],al
   140008738:	rex.XB (bad) 
   14000873a:	add    BYTE PTR [rax],al
   14000873c:	cmp    BYTE PTR [rax],al
   14000873e:	add    BYTE PTR [rax],al
   140008740:	fdivr  QWORD PTR [rbx]
   140008742:	add    BYTE PTR [rax],al
   140008744:	(bad)  
   140008745:	(bad)  
   140008746:	(bad)  
   140008747:	call   FWORD PTR [rsi+0x3c]
   14000874a:	add    BYTE PTR [rax],al
   14000874c:	add    BYTE PTR [rax],al
   14000874e:	add    BYTE PTR [rax],al
   140008750:	imul   edi,DWORD PTR [rax+rax*1],0x0
   140008754:	(bad)  
   140008755:	(bad)  
   140008756:	(bad)  
   140008757:	inc    DWORD PTR [rbx+0x61]
   14000875a:	add    BYTE PTR [rax],al
   14000875c:	add    BYTE PTR [rax],al
   14000875e:	add    BYTE PTR [rax],al
   140008760:	sbb    DWORD PTR [rdx],ecx
   140008762:	add    al,BYTE PTR [rax]
   140008764:	or     dh,BYTE PTR [rdx]
   140008766:	(bad)  
   140008767:	push   rax
   140008768:	rex.W pop rbp
   14000876a:	add    BYTE PTR [rax],al
   14000876c:	push   0x1900007e
   140008771:	sub    DWORD PTR [rcx],ecx
   140008773:	add    BYTE PTR [rdi],dl
   140008775:	sbb    eax,DWORD PTR fs:[rax]
   140008778:	(bad)  
   140008779:	push   rsp
   14000877a:	sbb    al,BYTE PTR [rax]
   14000877c:	(bad)  
   14000877d:	xor    al,0x19
   14000877f:	add    BYTE PTR [rdi],dl
   140008781:	add    DWORD PTR [rsi],edx
   140008783:	add    BYTE PTR [rax],dl
   140008785:	jo     0x140008787
   140008787:	add    ah,cl
   140008789:	pop    rbp
   14000878a:	add    BYTE PTR [rax],al
   14000878c:	movabs al,ds:0x1700091701000000
   140008795:	(bad)  
   140008797:	lock adc eax,esp
   14000879a:	(bad)  
   14000879c:	or     eax,0xa700bc0
   1400087a1:	(bad)  
   1400087a2:	or     DWORD PTR [rax+0x8],edx
   1400087a5:	xor    BYTE PTR [rax],al
   1400087a7:	add    BYTE PTR [rcx],bl
   1400087a9:	sub    DWORD PTR [rcx],ecx
   1400087ab:	add    BYTE PTR [rbx],bl
   1400087ad:	hlt    
   1400087ae:	(bad)  
   1400087af:	add    BYTE PTR [rbx],bl
   1400087b1:	je     0x1400087e1
   1400087b3:	add    BYTE PTR [rbx],bl
   1400087b5:	xor    al,0x2d
   1400087b7:	add    BYTE PTR [rbx],bl
   1400087b9:	add    DWORD PTR [rdx],ebp
   1400087bb:	add    BYTE PTR [rax],dl
   1400087bd:	push   rax
   1400087be:	add    BYTE PTR [rax],al
   1400087c0:	int3   
   1400087c1:	pop    rbp
   1400087c2:	add    BYTE PTR [rax],al
   1400087c4:	rex add DWORD PTR [rax],eax
   1400087c7:	add    BYTE PTR [rcx],al
   1400087c9:	or     eax,DWORD PTR [rcx]
   1400087cb:	add    BYTE PTR [rbx],cl
   1400087cd:	loop   0x1400087cf
   1400087cf:	add    BYTE PTR [rcx],al
   1400087d1:	adc    cl,BYTE PTR [rax]
   1400087d3:	add    BYTE PTR [rdx],dl
   1400087d5:	push   rsp
   1400087d6:	or     al,BYTE PTR [rax]
   1400087d8:	adc    dh,BYTE PTR [rcx+rcx*1]
   1400087db:	add    BYTE PTR [rdx],dl
   1400087dd:	xor    cl,BYTE PTR [rsi]
   1400087df:	loopne 0x1400087ed
   1400087e1:	jo     0x1400087ee
   1400087e3:	(bad)  
   1400087e4:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b41587f2
   1400087ea:	or     al,0x0
   1400087ec:	adc    eax,0x15000b64
   1400087f1:	xor    al,0xa
   1400087f3:	add    BYTE PTR [rip+0x1e01172],dl        # 0x141e0996b
   1400087f9:	adc    eax,0x74150008
   1400087fe:	or     BYTE PTR [rax],al
   140008800:	adc    eax,0x15000764
   140008805:	xor    al,0x6
   140008807:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e0993f
   14000880d:	and    eax,DWORD PTR [rsi]
   14000880f:	add    BYTE PTR [rip+0x15001474],dl        # 0x155009c89
   140008815:	xor    al,0x13
   140008817:	add    BYTE PTR [rip+0xffffffffcc500bf2],dl        # 0x10c50940f
   14000881d:	pop    rbp
   14000881e:	add    BYTE PTR [rax],al
   140008820:	js     0x140008822
   140008822:	add    BYTE PTR [rax],al
   140008824:	add    DWORD PTR [rax+rcx*1],edx
   140008827:	add    BYTE PTR [rsp+riz*2],dl
   14000882a:	or     DWORD PTR [rax],eax
   14000882c:	adc    al,0x54
   14000882e:	or     BYTE PTR [rax],al
   140008830:	adc    al,0x34
   140008832:	(bad)  
   140008833:	add    BYTE PTR [rdx+rsi*1],dl
   140008836:	adc    BYTE PTR [rax+0x1],dh
   140008839:	adc    eax,0x54150009
   14000883e:	sub    al,0x0
   140008840:	adc    eax,0x15002b34
   140008845:	add    DWORD PTR [rsi],esp
   140008847:	add    BYTE PTR [rsi],cl
   140008849:	loopne 0x140008857
   14000884b:	jo     0x140008858
   14000884d:	(bad)  
   14000884e:	add    BYTE PTR [rax],al
   140008850:	sbb    DWORD PTR [rbx],esi
   140008852:	or     eax,DWORD PTR [rax]
   140008854:	and    dh,BYTE PTR [rax+rax*2+0x0]
   140008858:	and    ah,BYTE PTR [rdi+rdi*1+0x0]
   14000885c:	and    dh,BYTE PTR [rsi+rdi*1]
   14000885f:	add    BYTE PTR [rdx],ah
   140008861:	add    DWORD PTR [rdx],edi
   140008863:	add    BYTE PTR [rax+rsi*8],dl
   140008866:	adc    ah,al
   140008868:	adc    BYTE PTR [rax+0x0],dl
   14000886b:	add    ah,cl
   14000886d:	pop    rbp
   14000886e:	add    BYTE PTR [rax],al
   140008870:	rol    BYTE PTR [rcx],0x0
   140008873:	add    BYTE PTR [rcx],bl
   140008875:	(bad)  
   140008876:	or     DWORD PTR [rax],eax
   140008878:	adc    eax,0x15004454
   14000887d:	xor    al,0x42
   14000887f:	add    BYTE PTR [rip+0xe003e01],dl        # 0x14e00c686
   140008885:	loopne 0x140008893
   140008887:	jo     0x140008894
   140008889:	(bad)  
   14000888a:	add    BYTE PTR [rax],al
   14000888c:	int3   
   14000888d:	pop    rbp
   14000888e:	add    BYTE PTR [rax],al
   140008890:	loopne 0x140008893
   140008892:	add    BYTE PTR [rax],al
   140008894:	add    DWORD PTR [rbx],edx
   140008896:	add    DWORD PTR [rax],eax
   140008898:	adc    eax,DWORD PTR [rdx+0x0]
   14000889b:	add    BYTE PTR [rcx],al
   14000889d:	or     DWORD PTR [rcx],eax
   14000889f:	add    BYTE PTR [rcx],cl
   1400088a1:	(bad)  
   1400088a2:	add    BYTE PTR [rax],al
   1400088a4:	add    DWORD PTR [rcx],ecx
   1400088a6:	add    DWORD PTR [rax],eax
   1400088a8:	or     DWORD PTR [rdx+0x0],eax
   1400088ab:	add    BYTE PTR [rcx],al
   1400088ad:	or     al,BYTE PTR [rdx]
   1400088af:	add    BYTE PTR [rdx],cl
   1400088b1:	xor    al,BYTE PTR [rsi]
   1400088b3:	xor    BYTE PTR [rcx],cl
   1400088b5:	sbb    DWORD PTR [rdx],ecx
   1400088b7:	add    BYTE PTR [rcx],bl
   1400088b9:	(bad)  
   1400088ba:	or     eax,DWORD PTR [rax]
   1400088bc:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   1400088c0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   1400088c4:	sbb    DWORD PTR [rax+rcx*1],esi
   1400088c7:	add    BYTE PTR [rcx],bl
   1400088c9:	push   rdx
   1400088ca:	adc    eax,0x5b66e0
   1400088cf:	add    BYTE PTR [rcx],al
   1400088d1:	add    BYTE PTR [rax],al
   1400088d3:	add    BYTE PTR [rcx+0x1a000054],ch
   1400088d9:	push   rsi
   1400088da:	add    BYTE PTR [rax],al
   1400088dc:	fs (bad) 
   1400088de:	add    BYTE PTR [rax],al
   1400088e0:	sbb    dl,BYTE PTR [rsi+0x0]
   1400088e3:	add    BYTE PTR [rax],al
   1400088e5:	add    BYTE PTR [rax],al
   1400088e7:	add    BYTE PTR [rcx],al
   1400088e9:	add    BYTE PTR [rax],al
   1400088eb:	add    BYTE PTR [rcx],bl
   1400088ed:	or     eax,0x62040001
   1400088f2:	add    BYTE PTR [rax],al
   1400088f4:	rex.W pop rbp
   1400088f6:	add    BYTE PTR [rax],al
   1400088f8:	cwde   
   1400088f9:	jne    0x1400088fb
	...
   140008903:	add    BYTE PTR [rcx],al
   140008905:	add    BYTE PTR [rax],al
   140008907:	add    BYTE PTR [rcx],al
   140008909:	add    BYTE PTR [rax],al
   14000890b:	add    BYTE PTR [rax],dl
   14000890d:	mov    DWORD PTR [rax],eax
   14000890f:	add    BYTE PTR [rax+0x0],al
	...
   14000891a:	add    BYTE PTR [rax],al
   14000891c:	mov    BYTE PTR [rcx+0x0],ah
   14000891f:	add    BYTE PTR [rax],bh
   140008921:	add    BYTE PTR [rax],al
   140008923:	add    BYTE PTR [rax],al
   140008925:	add    BYTE PTR [rax],al
   140008927:	add    BYTE PTR [rdi+rdx*2+0x0],dl
   14000892b:	add    bh,bh
   14000892d:	(bad)  
   14000892e:	(bad)  
   14000892f:	jmp    QWORD PTR [rcx+0x57]
   140008932:	add    BYTE PTR [rax],al
   140008934:	add    BYTE PTR [rax],al
   140008936:	add    BYTE PTR [rax],al
   140008938:	addr32 push rdi
   14000893a:	add    BYTE PTR [rax],al
   14000893c:	(bad)  
   14000893d:	(bad)  
   14000893e:	(bad)  
   14000893f:	dec    DWORD PTR [rax+0x61]
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    BYTE PTR [rbp+0x1000061],dl
   14000894d:	add    BYTE PTR [rax],al
   14000894f:	add    BYTE PTR [rdx+0x61],bl
   140008955:	add    BYTE PTR [rax],al
   140008957:	add    BYTE PTR [rcx],bl
   140008959:	or     al,BYTE PTR [rdx]
   14000895b:	add    BYTE PTR [rdx],cl
   14000895d:	xor    al,BYTE PTR [rsi]
   14000895f:	push   rax
   140008960:	rex.W pop rbp
   140008962:	add    BYTE PTR [rax],al
   140008964:	cwde   
   140008965:	jne    0x140008967
   140008967:	add    BYTE PTR [rcx],dl
   140008969:	or     al,BYTE PTR [rax+rax*1]
   14000896c:	or     dh,BYTE PTR [rsi+rax*1]
   14000896f:	add    BYTE PTR [rdx],cl
   140008971:	xor    al,BYTE PTR [rsi]
   140008973:	jo     0x1400089db
   140008975:	pop    rbx
   140008976:	add    BYTE PTR [rax],al
   140008978:	add    DWORD PTR [rax],eax
   14000897a:	add    BYTE PTR [rax],al
   14000897c:	mov    ebp,0x2000057
   140008981:	pop    rax
   140008982:	add    BYTE PTR [rax],al
   140008984:	scas   al,BYTE PTR es:[rdi]
   140008985:	(bad)  
   140008986:	add    BYTE PTR [rax],al
   140008988:	add    BYTE PTR [rax],al
   14000898a:	add    BYTE PTR [rax],al
   14000898c:	add    DWORD PTR [rsi],eax
   14000898e:	add    al,BYTE PTR [rax]
   140008990:	(bad)  
   140008991:	xor    al,BYTE PTR [rdx]
   140008993:	push   rax
   140008994:	or     DWORD PTR [rcx+rax*1],eax
   140008997:	add    BYTE PTR [rdx+riz*1],al
   14000899a:	add    BYTE PTR [rax],al
   14000899c:	pop    bx
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	add    DWORD PTR [rax],eax
   1400089a2:	add    BYTE PTR [rax],al
   1400089a4:	in     al,dx
   1400089a5:	pop    rax
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	and    bl,BYTE PTR [rcx+0x0]
   1400089ab:	add    BYTE PTR [rcx],al
   1400089ad:	add    BYTE PTR [rax],al
   1400089af:	add    BYTE PTR [rdx],ah
   1400089b1:	pop    rcx
   1400089b2:	add    BYTE PTR [rax],al
   1400089b4:	or     DWORD PTR [rdx],ecx
   1400089b6:	add    al,0x0
   1400089b8:	or     dh,BYTE PTR [rsi+rax*1]
   1400089bb:	add    BYTE PTR [rdx],cl
   1400089bd:	xor    al,BYTE PTR [rsi]
   1400089bf:	jo     0x140008a27
   1400089c1:	pop    rbx
   1400089c2:	add    BYTE PTR [rax],al
   1400089c4:	add    DWORD PTR [rax],eax
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	std    
   1400089c9:	pop    rcx
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	xor    BYTE PTR [rdx+0x0],bl
   1400089cf:	add    al,dl
   1400089d1:	(bad)  
   1400089d2:	add    BYTE PTR [rax],al
   1400089d4:	xor    BYTE PTR [rdx+0x0],bl
   1400089d7:	add    BYTE PTR [rcx],al
   1400089d9:	or     eax,0x340d0004
   1400089de:	or     DWORD PTR [rax],eax
   1400089e0:	or     eax,0x1500632
   1400089e5:	or     al,0x2
   1400089e7:	add    BYTE PTR [rcx+rax*1],cl
   1400089ea:	adc    DWORD PTR [rax],eax
   1400089ec:	add    BYTE PTR [rax],al
   1400089ee:	add    BYTE PTR [rax],al
   1400089f0:	add    DWORD PTR [rax],eax
	...
   1400089fa:	add    BYTE PTR [rax],al
   1400089fc:	cmp    BYTE PTR [rax+0x0],ah
   140008a02:	add    BYTE PTR [rax],al
   140008a04:	(bad)  
   140008a05:	(bad)  
   140008a06:	(bad)  
   140008a07:	inc    DWORD PTR [rax]
   140008a09:	add    BYTE PTR [rax],al
   140008a0b:	add    BYTE PTR [rax],bl
   140008a0d:	add    BYTE PTR [rax],al
   140008a0f:	add    BYTE PTR [rdx+rdx*2+0x0],ah
	...
   140008a23:	add    ah,al
   140008a25:	push   rdx
   140008a26:	add    BYTE PTR [rax],al
   140008a28:	add    BYTE PTR [rax],al
   140008a2a:	add    BYTE PTR [rax],al
   140008a2c:	mov    al,BYTE PTR [rax]
	...
   140008a3f:	add    BYTE PTR [rbx],al
   140008a41:	add    BYTE PTR [rax],al
   140008a43:	add    BYTE PTR [rax-0x76],ah
   140008a46:	add    BYTE PTR [rax],al
   140008a48:	clc    
   140008a49:	mov    DWORD PTR [rax],eax
   140008a4b:	add    BYTE PTR [rax],bl
   140008a4d:	mov    eax,DWORD PTR [rax]
	...
   140008a63:	add    BYTE PTR [rax-0x60],ah
   140008a66:	add    BYTE PTR [rax],al
   140008a68:	add    BYTE PTR [rax],al
   140008a6a:	add    BYTE PTR [rax],al
   140008a6c:	(bad)  
   140008a6d:	(bad)  
   140008a6e:	(bad)  
   140008a6f:	inc    DWORD PTR [rax]
   140008a71:	add    BYTE PTR [rax],al
   140008a73:	add    BYTE PTR [rax],bl
   140008a75:	add    BYTE PTR [rax],al
   140008a77:	add    BYTE PTR [rdx+rdx*2+0x0],ah
	...
   140008a8b:	add    ah,al
   140008a8d:	push   rdx
   140008a8e:	add    BYTE PTR [rax],al
   140008a90:	add    BYTE PTR [rax],al
   140008a92:	add    BYTE PTR [rax],al
   140008a94:	test   al,0x8a
	...
   140008aa6:	add    BYTE PTR [rax],al
   140008aa8:	add    eax,DWORD PTR [rax]
   140008aaa:	add    BYTE PTR [rax],al
   140008aac:	enter  0x8a,0x0
   140008ab0:	clc    
   140008ab1:	mov    DWORD PTR [rax],eax
   140008ab3:	add    BYTE PTR [rax],bl
   140008ab5:	mov    eax,DWORD PTR [rax]
	...
   140008acb:	add    BYTE PTR [rax+0xa0],cl
   140008ad1:	add    BYTE PTR [rax],al
   140008ad3:	add    bh,bh
   140008ad5:	(bad)  
   140008ad6:	(bad)  
   140008ad7:	inc    DWORD PTR [rax]
   140008ad9:	add    BYTE PTR [rax],al
   140008adb:	add    BYTE PTR [rax],bl
   140008add:	add    BYTE PTR [rax],al
   140008adf:	add    BYTE PTR [rdx+rdx*2+0x0],ah
	...
   140008aef:	add    BYTE PTR [rax],dl
   140008af1:	add    BYTE PTR [rax],al
   140008af3:	add    BYTE PTR [rax+0xa0],dh
   140008af9:	add    BYTE PTR [rax],al
   140008afb:	add    bh,bh
   140008afd:	(bad)  
   140008afe:	(bad)  
   140008aff:	inc    DWORD PTR [rax]
   140008b01:	add    BYTE PTR [rax],al
   140008b03:	add    BYTE PTR [rax],bl
   140008b05:	add    BYTE PTR [rax],al
   140008b07:	add    al,dl
   140008b09:	cmp    BYTE PTR [rax],al
	...
   140008b1b:	add    al,bl
   140008b1d:	movabs al,ds:0xffff000000000000
   140008b26:	(bad)  
   140008b27:	inc    DWORD PTR [rax]
   140008b29:	add    BYTE PTR [rax],al
   140008b2b:	add    BYTE PTR [rax],bl
   140008b2d:	add    BYTE PTR [rax],al
   140008b2f:	add    BYTE PTR [rsi],bl
   140008b31:	push   rdi
	...
   140008b3e:	add    BYTE PTR [rax],al
   140008b40:	add    al,BYTE PTR [rax]
   140008b42:	add    BYTE PTR [rax],al
   140008b44:	lock mov al,BYTE PTR [rax]
   140008b47:	add    BYTE PTR [rax],bl
   140008b49:	mov    eax,DWORD PTR [rax]
	...
   140008b5b:	add    BYTE PTR [rax+rdi*1+0x0],ch
   140008b5f:	add    BYTE PTR [rax],al
   140008b61:	add    BYTE PTR [rax],al
   140008b63:	add    BYTE PTR [rax-0x75],al
	...
   140008b72:	add    BYTE PTR [rax],al
   140008b74:	mov    al,0x8f
	...
   140008b7e:	add    BYTE PTR [rax],al
   140008b80:	not    BYTE PTR [rdx+0x72c00000]
   140008b86:	add    BYTE PTR [rax],al
   140008b88:	mov    eax,0x90
   140008b8d:	add    BYTE PTR [rax],al
   140008b8f:	add    BYTE PTR [rax],al
   140008b91:	add    BYTE PTR [rax],al
   140008b93:	add    ah,ah
   140008b95:	xchg   ebx,eax
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	enter  0x73,0x0
   140008b9c:	sbb    BYTE PTR [rdi+0x0],cl
   140008ba2:	add    BYTE PTR [rax],al
   140008ba4:	add    BYTE PTR [rax],al
   140008ba6:	add    BYTE PTR [rax],al
   140008ba8:	xchg   esp,eax
   140008ba9:	cdq    
   140008baa:	add    BYTE PTR [rax],al
   140008bac:	sub    BYTE PTR [rdx+0x0],dh
   140008baf:	add    BYTE PTR [rax],bl
   140008bb1:	mov    es,WORD PTR [rax]
	...
   140008bbb:	add    ah,al
   140008bbd:	cdq    
   140008bbe:	add    BYTE PTR [rax],al
   140008bc0:	sub    BYTE PTR [rcx+0x0],dh
   140008bc3:	add    al,cl
   140008bc5:	lea    eax,[rax]
	...
   140008bcf:	add    ah,ah
   140008bd1:	cdq    
   140008bd2:	add    BYTE PTR [rax],al
   140008bd4:	fdiv   DWORD PTR [rax+0x0]
   140008bd7:	add    BYTE PTR [rax],cl
   140008bd9:	lea    eax,[rax]
	...
   140008be3:	add    BYTE PTR [rdx+rbx*4],al
   140008be6:	add    BYTE PTR [rax],al
   140008be8:	sbb    BYTE PTR [rax+0x0],dh
   140008beb:	add    BYTE PTR [rax+0x8e],al
   140008bf1:	add    BYTE PTR [rax],al
   140008bf3:	add    BYTE PTR [rax],al
   140008bf5:	add    BYTE PTR [rax],al
   140008bf7:	add    BYTE PTR [rax],dl
   140008bf9:	(bad)  
   140008bfa:	add    BYTE PTR [rax],al
   140008bfc:	nop
   140008bfd:	jno    0x140008bff
   140008bff:	add    al,dh
   140008c01:	mov    WORD PTR [rax],es
	...
   140008c0b:	add    BYTE PTR [rdx],dh
   140008c0d:	(bad)  
   140008c0e:	add    BYTE PTR [rax],al
   140008c10:	add    BYTE PTR [rax+0x0],dh
   140008c13:	add    BYTE PTR [rax-0x71],dl
	...
   140008c1e:	add    BYTE PTR [rax],al
   140008c20:	rex (bad) 
   140008c22:	add    BYTE PTR [rax],al
   140008c24:	(bad)  
   140008c25:	jb     0x140008c27
   140008c27:	add    al,ch
   140008c29:	lea    eax,[rax]
	...
   140008c33:	add    BYTE PTR [rax-0x66],ch
   140008c36:	add    BYTE PTR [rax],al
   140008c38:	clc    
   140008c39:	jo     0x140008c3b
   140008c3b:	add    BYTE PTR [rax-0x71],dh
	...
   140008c46:	add    BYTE PTR [rax],al
   140008c48:	xchg   edx,eax
   140008c49:	(bad)  
   140008c4a:	add    BYTE PTR [rax],al
   140008c4c:	xor    BYTE PTR [rdx+0x0],0x0
   140008c50:	lock mov es,WORD PTR [rax]
	...
   140008c5b:	add    BYTE PTR [rdx+rbx*4+0x72000000],bh
   140008c62:	add    BYTE PTR [rax],al
   140008c64:	nop
   140008c65:	pop    QWORD PTR [rax]
	...
   140008c6f:	add    dl,ah
   140008c71:	(bad)  
   140008c72:	add    BYTE PTR [rax],al
   140008c74:	movabs al,ds:0x8e38000072
   140008c7d:	add    BYTE PTR [rax],al
   140008c7f:	add    BYTE PTR [rax],al
   140008c81:	add    BYTE PTR [rax],al
   140008c83:	add    BYTE PTR [rsi],al
   140008c85:	fwait
   140008c86:	add    BYTE PTR [rax],al
   140008c88:	rex.W jno 0x140008c8b
   140008c8b:	add    BYTE PTR [rax],cl
   140008c8d:	mov    es,WORD PTR [rax]
	...
   140008c97:	add    BYTE PTR [rax],dh
   140008c99:	fwait
   140008c9a:	add    BYTE PTR [rax],al
   140008c9c:	sbb    BYTE PTR [rcx+0x0],dh
   140008c9f:	add    BYTE PTR [rax],ch
   140008ca1:	mov    es,WORD PTR [rax]
	...
   140008cab:	add    BYTE PTR [rdx-0x65],dl
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	cmp    BYTE PTR [rcx+0x0],dh
   140008cb3:	add    BYTE PTR [rax-0x72],dh
	...
   140008cbe:	add    BYTE PTR [rax],al
   140008cc0:	jl     0x140008c5d
   140008cc2:	add    BYTE PTR [rax],al
   140008cc4:	xor    BYTE PTR [rcx+0x0],0x0
   140008cc8:	fmul   DWORD PTR [rsi+0x0]
   140008cce:	add    BYTE PTR [rax],al
   140008cd0:	add    BYTE PTR [rax],al
   140008cd2:	add    BYTE PTR [rax],al
   140008cd4:	movabs al,ds:0x71e800009b
	...
   140008ced:	add    BYTE PTR [rax],al
   140008cef:	add    BYTE PTR [rsi],al
   140008cf1:	add    BYTE PTR [rax],al
   140008cf3:	add    BYTE PTR [rax],al
   140008cf5:	add    BYTE PTR [rax],al
   140008cf7:	add    BYTE PTR [rdx],0x0
   140008cfa:	add    BYTE PTR [rax],al
   140008cfc:	add    BYTE PTR [rax],al
   140008cfe:	add    BYTE PTR [rax+0x0],al
   140008d04:	add    BYTE PTR [rax],al
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	movabs ds:0x8a00000000000095,al
   140008d11:	xchg   ebp,eax
   140008d12:	add    BYTE PTR [rax],al
   140008d14:	add    BYTE PTR [rax],al
   140008d16:	add    BYTE PTR [rax],al
   140008d18:	ins    BYTE PTR es:[rdi],dx
   140008d19:	xchg   ebp,eax
   140008d1a:	add    BYTE PTR [rax],al
   140008d1c:	add    BYTE PTR [rax],al
   140008d1e:	add    BYTE PTR [rax],al
   140008d20:	rex.WR xchg rbp,rax
   140008d22:	add    BYTE PTR [rax],al
   140008d24:	add    BYTE PTR [rax],al
   140008d26:	add    BYTE PTR [rax],al
   140008d28:	xor    al,0x95
   140008d2a:	add    BYTE PTR [rax],al
   140008d2c:	add    BYTE PTR [rax],al
   140008d2e:	add    BYTE PTR [rax],al
   140008d30:	mov    edx,0x95
   140008d35:	add    BYTE PTR [rax],al
   140008d37:	add    dh,ah
   140008d39:	xchg   esp,eax
   140008d3a:	add    BYTE PTR [rax],al
   140008d3c:	add    BYTE PTR [rax],al
   140008d3e:	add    BYTE PTR [rax],al
   140008d40:	rcl    BYTE PTR [rax+rax*1+0x0],cl
   140008d47:	add    ah,cl
   140008d49:	xchg   ebp,eax
   140008d4a:	add    BYTE PTR [rax],al
   140008d4c:	add    BYTE PTR [rax],al
   140008d4e:	add    BYTE PTR [rax],al
   140008d50:	stos   BYTE PTR es:[rdi],al
   140008d51:	xchg   esp,eax
   140008d52:	add    BYTE PTR [rax],al
   140008d54:	add    BYTE PTR [rax],al
   140008d56:	add    BYTE PTR [rax],al
   140008d58:	sub    al,0x96
   140008d5a:	add    BYTE PTR [rax],al
   140008d5c:	add    BYTE PTR [rax],al
   140008d5e:	add    BYTE PTR [rax],al
   140008d60:	ds xchg esi,eax
   140008d62:	add    BYTE PTR [rax],al
   140008d64:	add    BYTE PTR [rax],al
   140008d66:	add    BYTE PTR [rax],al
   140008d68:	push   rsi
   140008d69:	xchg   esi,eax
   140008d6a:	add    BYTE PTR [rax],al
   140008d6c:	add    BYTE PTR [rax],al
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	outs   dx,BYTE PTR ds:[rsi]
   140008d71:	xchg   esi,eax
   140008d72:	add    BYTE PTR [rax],al
   140008d74:	add    BYTE PTR [rax],al
   140008d76:	add    BYTE PTR [rax],al
   140008d78:	adc    BYTE PTR [rsi+0x0],0x0
   140008d7f:	add    BYTE PTR [rsi+rdx*4+0x0],bl
   140008d86:	add    BYTE PTR [rax],al
   140008d88:	rcl    BYTE PTR [rsi+0x0],0x0
   140008d8f:	add    al,bl
   140008d91:	xchg   esi,eax
   140008d92:	add    BYTE PTR [rax],al
   140008d94:	add    BYTE PTR [rax],al
   140008d96:	add    BYTE PTR [rax],al
   140008d98:	(bad)  
   140008d99:	xchg   esi,eax
   140008d9a:	add    BYTE PTR [rax],al
   140008d9c:	add    BYTE PTR [rax],al
   140008d9e:	add    BYTE PTR [rax],al
   140008da0:	test   BYTE PTR [rax+0x0],bl
   140008da6:	add    BYTE PTR [rax],al
   140008da8:	mov    esp,0x94
   140008dad:	add    BYTE PTR [rax],al
   140008daf:	add    BYTE PTR [rsi-0x68],al
   140008db2:	add    BYTE PTR [rax],al
   140008db4:	add    BYTE PTR [rax],al
   140008db6:	add    BYTE PTR [rax],al
   140008db8:	not    BYTE PTR [rbp+0x0]
	...
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	xchg   BYTE PTR [rax+rax*1+0x0],dl
   140008dcf:	add    BYTE PTR [rax],ah
   140008dd1:	xchg   edi,eax
   140008dd2:	add    BYTE PTR [rax],al
   140008dd4:	add    BYTE PTR [rax],al
   140008dd6:	add    BYTE PTR [rax],al
   140008dd8:	cwde   
   140008dd9:	xchg   esp,eax
	...
   140008de6:	add    BYTE PTR [rax],al
   140008de8:	scas   al,BYTE PTR es:[rdi]
   140008de9:	cwde   
   140008dea:	add    BYTE PTR [rax],al
   140008dec:	add    BYTE PTR [rax],al
   140008dee:	add    BYTE PTR [rax],al
   140008df0:	rex.X xchg edi,eax
   140008df2:	add    BYTE PTR [rax],al
   140008df4:	add    BYTE PTR [rax],al
   140008df6:	add    BYTE PTR [rax],al
   140008df8:	push   rax
   140008df9:	cdq    
	...
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	cwde   
   140008e09:	cwde   
	...
   140008e16:	add    BYTE PTR [rax],al
   140008e18:	jo     0x140008dae
	...
   140008e26:	add    BYTE PTR [rax],al
   140008e28:	int3   
   140008e29:	cwde   
	...
   140008e36:	add    BYTE PTR [rax],al
   140008e38:	adc    BYTE PTR [rcx+0x0],bl
   140008e3e:	add    BYTE PTR [rax],al
   140008e40:	ins    BYTE PTR es:[rdi],dx
   140008e41:	cdq    
   140008e42:	add    BYTE PTR [rax],al
   140008e44:	add    BYTE PTR [rax],al
   140008e46:	add    BYTE PTR [rax],al
   140008e48:	cli    
   140008e49:	cwde   
   140008e4a:	add    BYTE PTR [rax],al
   140008e4c:	add    BYTE PTR [rax],al
   140008e4e:	add    BYTE PTR [rax],al
   140008e50:	pop    rsi
   140008e51:	cwde   
   140008e52:	add    BYTE PTR [rax],al
   140008e54:	add    BYTE PTR [rax],al
   140008e56:	add    BYTE PTR [rax],al
   140008e58:	jo     0x140008df2
   140008e5a:	add    BYTE PTR [rax],al
   140008e5c:	add    BYTE PTR [rax],al
   140008e5e:	add    BYTE PTR [rax],al
   140008e60:	sbb    BYTE PTR [rcx+0x0],0x0
	...
   140008e6f:	add    al,ah
   140008e71:	cwde   
	...
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	pushf  
   140008e81:	popf   
   140008e82:	add    BYTE PTR [rax],al
   140008e84:	add    BYTE PTR [rax],al
   140008e86:	add    BYTE PTR [rax],al
   140008e88:	add    BYTE PTR [rbp+0x0],dl
   140008e8e:	add    BYTE PTR [rax],al
   140008e90:	sbb    al,0x95
   140008e92:	add    BYTE PTR [rax],al
   140008e94:	add    BYTE PTR [rax],al
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008e99:	cwde   
   140008e9a:	add    BYTE PTR [rax],al
   140008e9c:	add    BYTE PTR [rax],al
   140008e9e:	add    BYTE PTR [rax],al
   140008ea0:	mov    BYTE PTR [rbp+0x0],bl
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	jo     0x140008e47
   140008eaa:	add    BYTE PTR [rax],al
   140008eac:	add    BYTE PTR [rax],al
   140008eae:	add    BYTE PTR [rax],al
   140008eb0:	push   rsi
   140008eb1:	popf   
   140008eb2:	add    BYTE PTR [rax],al
   140008eb4:	add    BYTE PTR [rax],al
   140008eb6:	add    BYTE PTR [rax],al
   140008eb8:	cmp    al,0x9d
   140008eba:	add    BYTE PTR [rax],al
   140008ebc:	add    BYTE PTR [rax],al
   140008ebe:	add    BYTE PTR [rax],al
   140008ec0:	ficom  WORD PTR [rbp+0x0]
   140008ec6:	add    BYTE PTR [rax],al
   140008ec8:	adc    al,0x96
	...
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	rex cdq 
   140008eda:	add    BYTE PTR [rax],al
   140008edc:	add    BYTE PTR [rax],al
   140008ede:	add    BYTE PTR [rax],al
   140008ee0:	es cdq 
	...
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	repnz xchg edi,eax
   140008ef2:	add    BYTE PTR [rax],al
   140008ef4:	add    BYTE PTR [rax],al
   140008ef6:	add    BYTE PTR [rax],al
   140008ef8:	rcl    BYTE PTR [rdi+0x0],1
   140008efe:	add    BYTE PTR [rax],al
   140008f00:	mov    eax,0x97
   140008f05:	add    BYTE PTR [rax],al
   140008f07:	add    BYTE PTR [rax+0x97],ah
	...
   140008f15:	add    BYTE PTR [rax],al
   140008f17:	add    dh,bh
   140008f19:	xchg   ebx,eax
   140008f1a:	add    BYTE PTR [rax],al
   140008f1c:	add    BYTE PTR [rax],al
   140008f1e:	add    BYTE PTR [rax],al
   140008f20:	pop    rax
   140008f21:	xchg   esp,eax
   140008f22:	add    BYTE PTR [rax],al
   140008f24:	add    BYTE PTR [rax],al
   140008f26:	add    BYTE PTR [rax],al
   140008f28:	(bad)  
   140008f29:	xchg   esp,eax
   140008f2a:	add    BYTE PTR [rax],al
   140008f2c:	add    BYTE PTR [rax],al
   140008f2e:	add    BYTE PTR [rax],al
   140008f30:	sub    al,0x94
   140008f32:	add    BYTE PTR [rax],al
   140008f34:	add    BYTE PTR [rax],al
   140008f36:	add    BYTE PTR [rax],al
   140008f38:	rex.X xchg esp,eax
   140008f3a:	add    BYTE PTR [rax],al
   140008f3c:	add    BYTE PTR [rax],al
   140008f3e:	add    BYTE PTR [rax],al
   140008f40:	out    dx,al
   140008f41:	xchg   ebx,eax
	...
   140008f4e:	add    BYTE PTR [rax],al
   140008f50:	xor    al,0x97
   140008f52:	add    BYTE PTR [rax],al
   140008f54:	add    BYTE PTR [rax],al
   140008f56:	add    BYTE PTR [rax],al
   140008f58:	push   rdx
   140008f59:	xchg   edi,eax
   140008f5a:	add    BYTE PTR [rax],al
   140008f5c:	add    BYTE PTR [rax],al
   140008f5e:	add    BYTE PTR [rax],al
   140008f60:	(bad)  
   140008f61:	xchg   edi,eax
	...
   140008f6e:	add    BYTE PTR [rax],al
   140008f70:	mov    ss,WORD PTR [rdi+0x0]
   140008f76:	add    BYTE PTR [rax],al
   140008f78:	adc    BYTE PTR [rdi+0x0],0x0
   140008f7f:	add    BYTE PTR [rax-0x69],dh
	...
   140008f8e:	add    BYTE PTR [rax],al
   140008f90:	cmp    al,0x98
   140008f92:	add    BYTE PTR [rax],al
   140008f94:	add    BYTE PTR [rax],al
   140008f96:	add    BYTE PTR [rax],al
   140008f98:	and    al,0x98
   140008f9a:	add    BYTE PTR [rax],al
   140008f9c:	add    BYTE PTR [rax],al
   140008f9e:	add    BYTE PTR [rax],al
   140008fa0:	or     BYTE PTR [rax+0x0],bl
	...
   140008fae:	add    BYTE PTR [rax],al
   140008fb0:	add    dl,BYTE PTR [rbx+0x0]
   140008fb6:	add    BYTE PTR [rax],al
   140008fb8:	(bad)  
   140008fb9:	xchg   edx,eax
   140008fba:	add    BYTE PTR [rax],al
   140008fbc:	add    BYTE PTR [rax],al
   140008fbe:	add    BYTE PTR [rax],al
   140008fc0:	jo     0x140008f53
   140008fc2:	add    BYTE PTR [rax],al
   140008fc4:	add    BYTE PTR [rax],al
   140008fc6:	add    BYTE PTR [rax],al
   140008fc8:	enter  0x92,0x0
   140008fcc:	add    BYTE PTR [rax],al
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	mov    esp,0x92
   140008fd5:	add    BYTE PTR [rax],al
   140008fd7:	add    BYTE PTR [rax+0x92],ch
   140008fdd:	add    BYTE PTR [rax],al
   140008fdf:	add    BYTE PTR [rdx],bl
   140008fe1:	xchg   ebx,eax
   140008fe2:	add    BYTE PTR [rax],al
   140008fe4:	add    BYTE PTR [rax],al
   140008fe6:	add    BYTE PTR [rax],al
   140008fe8:	xchg   esi,eax
   140008fe9:	xchg   edx,eax
   140008fea:	add    BYTE PTR [rax],al
   140008fec:	add    BYTE PTR [rax],al
   140008fee:	add    BYTE PTR [rax],al
   140008ff0:	mov    ss,WORD PTR [rdx+0x0]
   140008ff6:	add    BYTE PTR [rax],al
   140008ff8:	rex.X xchg ebx,eax
   140008ffa:	add    BYTE PTR [rax],al
   140008ffc:	add    BYTE PTR [rax],al
   140008ffe:	add    BYTE PTR [rax],al
   140009000:	push   rax
   140009001:	xchg   ebx,eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	jl     0x140008f9c
   14000900a:	add    BYTE PTR [rax],al
   14000900c:	add    BYTE PTR [rax],al
   14000900e:	add    BYTE PTR [rax],al
   140009010:	push   0xffffffffffffff92
   140009012:	add    BYTE PTR [rax],al
   140009014:	add    BYTE PTR [rax],al
   140009016:	add    BYTE PTR [rax],al
   140009018:	pop    rsp
   140009019:	xchg   edx,eax
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    BYTE PTR [rax],al
   14000901e:	add    BYTE PTR [rax],al
   140009020:	pop    rdx
   140009021:	xchg   ebx,eax
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    BYTE PTR [rax],al
   140009028:	rex.WRX xchg rdx,rax
   14000902a:	add    BYTE PTR [rax],al
   14000902c:	add    BYTE PTR [rax],al
   14000902e:	add    BYTE PTR [rax],al
   140009030:	cmp    BYTE PTR [rdx+0x0],dl
   140009036:	add    BYTE PTR [rax],al
   140009038:	sbb    BYTE PTR [rdx+0x0],dl
   14000903e:	add    BYTE PTR [rax],al
   140009040:	or     al,0x92
   140009042:	add    BYTE PTR [rax],al
   140009044:	add    BYTE PTR [rax],al
   140009046:	add    BYTE PTR [rax],al
   140009048:	xor    BYTE PTR [rbx+0x0],dl
   14000904e:	add    BYTE PTR [rax],al
   140009050:	add    dl,BYTE PTR [rdx+0x0]
   140009056:	add    BYTE PTR [rax],al
   140009058:	cmp    BYTE PTR [rbx+0x0],dl
   14000905e:	add    BYTE PTR [rax],al
   140009060:	sahf   
   140009061:	xchg   edx,eax
   140009062:	add    BYTE PTR [rax],al
   140009064:	add    BYTE PTR [rax],al
   140009066:	add    BYTE PTR [rax],al
   140009068:	loop   0x140008ffb
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	retf   0x91
   140009073:	add    BYTE PTR [rax],al
   140009075:	add    BYTE PTR [rax],al
   140009077:	add    BYTE PTR [rcx+rdx*4+0x0],ch
   14000907e:	add    BYTE PTR [rax],al
   140009080:	mov    ss,WORD PTR [rcx+0x0]
   140009086:	add    BYTE PTR [rax],al
   140009088:	mov    ah,0x9d
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	add    BYTE PTR [rax],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	xchg   BYTE PTR [rcx+0x0],dl
   140009096:	add    BYTE PTR [rax],al
   140009098:	jl     0x14000902b
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	add    BYTE PTR [rax],al
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	loopne 0x140009034
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	add    BYTE PTR [rax],al
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	mov    esi,0x9d
	...
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    BYTE PTR [rsi],dl
   1400090b9:	pushf  
   1400090ba:	add    BYTE PTR [rax],al
   1400090bc:	add    BYTE PTR [rax],al
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	sub    bl,BYTE PTR [rax+rax*1+0x0]
   1400090c7:	add    BYTE PTR [rsi],bh
   1400090c9:	pushf  
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	add    BYTE PTR [rax],al
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	push   rsi
   1400090d1:	pushf  
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	outs   dx,BYTE PTR ds:[rsi]
   1400090d9:	pushf  
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	add    BYTE PTR [rax],al
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	mov    BYTE PTR [rax+rax*1+0x0],bl
   1400090e7:	add    BYTE PTR [rsp+rbx*4+0x0],bl
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	mov    dh,0x9c
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	add    BYTE PTR [rax],al
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	(bad)  
   1400090f9:	pushf  
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	fcomp  DWORD PTR [rax+rax*1+0x0]
   140009107:	add    dl,dh
   140009109:	pushf  
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	add    BYTE PTR [rax],al
   14000910e:	add    BYTE PTR [rax],al
   140009110:	or     al,0x9d
   140009112:	add    BYTE PTR [rax],al
   140009114:	add    BYTE PTR [rax],al
   140009116:	add    BYTE PTR [rax],al
   140009118:	cs popf 
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    BYTE PTR [rax],al
   14000911e:	add    BYTE PTR [rax],al
   140009120:	in     al,0x9b
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	rcr    BYTE PTR [rbx+0x0],cl
   14000912e:	add    BYTE PTR [rax],al
   140009130:	(bad)  
   140009131:	fwait
   140009132:	add    BYTE PTR [rax],al
   140009134:	add    BYTE PTR [rax],al
   140009136:	add    BYTE PTR [rax],al
   140009138:	rcl    BYTE PTR [rbx+0x0],1
   14000913e:	add    BYTE PTR [rax],al
   140009140:	mov    dh,0x93
   140009142:	add    BYTE PTR [rax],al
   140009144:	add    BYTE PTR [rax],al
   140009146:	add    BYTE PTR [rax],al
   140009148:	movabs ds:0x8800000000000093,al
   140009151:	xchg   ebx,eax
   140009152:	add    BYTE PTR [rax],al
   140009154:	add    BYTE PTR [rax],al
   140009156:	add    BYTE PTR [rax],al
   140009158:	outs   dx,BYTE PTR ds:[rsi]
   140009159:	xchg   ebx,eax
   14000915a:	add    BYTE PTR [rax],al
   14000915c:	add    BYTE PTR [rax],al
   14000915e:	add    BYTE PTR [rax],al
   140009160:	cli    
   140009161:	fwait
	...
   14000916e:	add    BYTE PTR [rax],al
   140009170:	fiadd  WORD PTR [rbx+rsi*2]
   140009173:	ja     0x1400091e8
   140009175:	movsxd esp,DWORD PTR [rcx+0x6e]
   140009178:	pop    di
   14000917a:	jae    0x14000917c
   14000917c:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   140009183:	movsxd eax,DWORD PTR [rax]
   140009185:	add    BYTE PTR [rsp+rax*1+0x66],cl
   140009189:	jb     0x1400091f0
   14000918b:	add    BYTE PTR gs:[rax],al
   14000918e:	or     al,0x0
   140009190:	(bad)  
   140009191:	(bad)  
   140009192:	xor    BYTE PTR [rbp+0x78],ah
   140009195:	movsxd esp,DWORD PTR [rbp+0x70]
   140009198:	je     0x140009203
   14000919a:	outs   dx,DWORD PTR ds:[rsi]
   14000919b:	outs   dx,BYTE PTR ds:[rsi]
   14000919c:	rex
   14000919d:	rex push rcx
   14000919f:	rex.RB
   1400091a0:	rex.B
   1400091a1:	rex.B
   1400091a2:	rex
   1400091a3:	rex.B
   1400091a4:	rex.RB
   1400091a5:	rex.X push rsi
   1400091a7:	xor    BYTE PTR [rax+0x40],al
   1400091aa:	pop    rdx
   1400091ab:	add    BYTE PTR [rcx],dh
   1400091ad:	add    BYTE PTR [rdi],bh
   1400091af:	ja     0x140009219
   1400091b1:	(bad)  
   1400091b2:	je     0x1400091f4
   1400091b4:	gs js  0x14000921a
   1400091b7:	gs jo  0x14000922e
   1400091ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   1400091c1:	rex.X
   1400091c2:	push   r8
   1400091c4:	rex.RB
   1400091c5:	rex.X
   1400091c6:	rex.R pop rax
   1400091c8:	pop    rdx
   1400091c9:	add    BYTE PTR [rcx],dl
   1400091cb:	add    BYTE PTR [rdi],bh
   1400091cd:	(bad)  
   1400091ce:	xor    DWORD PTR [rbp+0x78],esp
   1400091d1:	movsxd esp,DWORD PTR [rbp+0x70]
   1400091d4:	je     0x14000923f
   1400091d6:	outs   dx,DWORD PTR ds:[rsi]
   1400091d7:	outs   dx,BYTE PTR ds:[rsi]
   1400091d8:	rex
   1400091d9:	rex push rbp
   1400091db:	rex.RB
   1400091dc:	rex.B
   1400091dd:	rex.B
   1400091de:	rex pop rax
   1400091e0:	pop    rdx
   1400091e1:	add    BYTE PTR [rdx],cl
   1400091e3:	add    BYTE PTR [rdi],bh
   1400091e5:	(bad)  
   1400091e6:	xor    BYTE PTR [rbp+0x78],ah
   1400091e9:	movsxd esp,DWORD PTR [rbp+0x70]
   1400091ec:	je     0x140009257
   1400091ee:	outs   dx,DWORD PTR ds:[rsi]
   1400091ef:	outs   dx,BYTE PTR ds:[rsi]
   1400091f0:	rex
   1400091f1:	rex push rcx
   1400091f3:	rex.RB
   1400091f4:	rex.B
   1400091f5:	rex.B
   1400091f6:	rex
   1400091f7:	rex.B
   1400091f8:	rex.RB
   1400091f9:	rex.X push rcx
   1400091fb:	rex.RB
   1400091fc:	rex.X
   1400091fd:	rex.R
   1400091fe:	rex pop rdx
   140009200:	add    BYTE PTR [rax],al
   140009202:	xchg   esp,eax
   140009203:	add    al,0x6d
   140009205:	gs ins DWORD PTR es:[rdi],dx
   140009207:	ins    DWORD PTR es:[rdi],dx
   140009208:	outs   dx,DWORD PTR ds:[rsi]
   140009209:	jbe    0x140009270
   14000920b:	add    BYTE PTR [rdi+0x61635f00],bh
   140009211:	ins    BYTE PTR es:[rdi],dx
   140009212:	ins    BYTE PTR es:[rdi],dx
   140009213:	outs   dx,BYTE PTR ds:[rsi]
   140009214:	gs ja  0x14000927f
   140009217:	add    BYTE PTR [rbx],cl
   140009219:	add    BYTE PTR [rdi],bh
   14000921b:	(bad)  
   14000921c:	xor    BYTE PTR [rbp+0x78],ah
   14000921f:	movsxd esp,DWORD PTR [rbp+0x70]
   140009222:	je     0x14000928d
   140009224:	outs   dx,DWORD PTR ds:[rsi]
   140009225:	outs   dx,BYTE PTR ds:[rsi]
   140009226:	rex
   140009227:	rex push rcx
   140009229:	rex.RB
   14000922a:	rex.B
   14000922b:	rex.B
   14000922c:	rex
   14000922d:	rex.B
   14000922e:	rex.RB
   14000922f:	rex.X push rcx
   140009231:	rex.RB
   140009232:	rex.X
   140009233:	rex.R
   140009234:	rex.W
   140009235:	rex pop rdx
   140009237:	add    BYTE PTR [rbx+0x0],cl
   14000923a:	pop    rdi
   14000923b:	rex.XB js 0x1400092b6
   14000923e:	push   rsp
   14000923f:	push   0x45776f72
   140009244:	js     0x1400092a9
   140009246:	gs jo  0x1400092bd
   140009249:	imul   ebp,DWORD PTR [rdi+0x6e],0x550000
   140009250:	pop    rdi
   140009251:	pop    rax
   140009252:	movsxd esi,DWORD PTR [rax+0x74]
   140009255:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000925e:	pop    rdi
   14000925f:	(bad)  
   140009260:	ins    DWORD PTR es:[rdi],dx
   140009261:	jae    0x1400092ca
   140009263:	pop    rdi
   140009264:	gs js  0x1400092d0
   140009267:	je     0x140009269
   140009269:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000926f:	addr32 gs je 0x1400092e0
   140009273:	(bad)  
   140009274:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000927b:	add    BYTE PTR [rsi+0x735f5f00],cl
   140009281:	gs je  0x1400092e3
   140009284:	(bad)  
   140009285:	jo     0x1400092f7
   140009287:	pop    rdi
   140009288:	je     0x140009303
   14000928a:	jo     0x1400092f1
   14000928c:	add    BYTE PTR [rax],al
   14000928e:	xor    al,BYTE PTR [riz*2+0x746978]
   140009295:	add    BYTE PTR [rsi],cl
   140009297:	add    DWORD PTR [rdi+0x65],ebx
   14000929a:	js     0x140009305
   14000929c:	je     0x14000929e
   14000929e:	rol    DWORD PTR [rax],0x5f
   1400092a1:	movsxd esp,DWORD PTR [rbp+0x78]
   1400092a4:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   1400092ac:	jae    0x140009313
   1400092ae:	je     0x140009325
   1400092b0:	jae    0x140009317
   1400092b2:	jb     0x140009321
   1400092b4:	(bad)  
   1400092b5:	je     0x14000931f
   1400092b7:	gs jb  0x14000932c
   1400092ba:	add    BYTE PTR [rax],al
   1400092bc:	jge    0x1400092bf
   1400092be:	pop    rdi
   1400092bf:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400092c6:	ins    DWORD PTR es:[rdi],dx
   1400092c7:	add    BYTE PTR [rdi+0x0],dl
   1400092ca:	pop    rdi
   1400092cb:	pop    rdi
   1400092cc:	rex.XB pop r15
   1400092ce:	jae    0x140009340
   1400092d0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400092d4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400092db:	ins    BYTE PTR es:[rdi],dx
   1400092dc:	gs jb  0x1400092df
   1400092df:	add    BYTE PTR [rdi],ah
   1400092e1:	add    DWORD PTR [rdi+0x66],ebx
   1400092e4:	ins    DWORD PTR es:[rdi],dx
   1400092e5:	outs   dx,DWORD PTR ds:[rsi]
   1400092e6:	fs add BYTE PTR gs:[rax],al
   1400092ea:	rol    BYTE PTR [rax],cl
   1400092ec:	pop    rdi
   1400092ed:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400092f0:	ins    DWORD PTR es:[rdi],dx
   1400092f1:	outs   dx,DWORD PTR ds:[rsi]
   1400092f2:	fs add BYTE PTR gs:[rax],al
   1400092f6:	ins    DWORD PTR es:[rdi],dx
   1400092f7:	jae    0x14000936f
   1400092f9:	movsxd esi,DWORD PTR [rdx+0x74]
   1400092fc:	cs fs ins BYTE PTR es:[rdi],dx
   1400092ff:	ins    BYTE PTR es:[rdi],dx
   140009300:	add    BYTE PTR [rax],al
   140009302:	adc    al,BYTE PTR [rax]
   140009304:	(bad)  
   140009305:	(bad)  
   140009306:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000930a:	gs pop rdi
   14000930c:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   140009313:	rex.RB
   140009314:	rex.B
   140009315:	rex.B
   140009316:	rex pop rax
   140009318:	pop    rdx
   140009319:	add    BYTE PTR [rbx+0x0],bl
   14000931c:	pop    rdi
   14000931d:	pop    rdi
   14000931e:	rex.XB js 0x140009399
   140009321:	rex.RX jb 0x140009385
   140009324:	ins    DWORD PTR es:[rdi],dx
   140009325:	gs rex.W (bad) 
   140009328:	outs   dx,BYTE PTR ds:[rsi]
   140009329:	fs ins BYTE PTR es:[rdi],dx
   14000932b:	gs jb  0x140009361
   14000932e:	add    BYTE PTR [rax],al
   140009330:	out    0x1,al
   140009332:	pop    rdi
   140009333:	ins    BYTE PTR es:[rdi],dx
   140009334:	outs   dx,DWORD PTR ds:[rsi]
   140009335:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009338:	add    ebx,DWORD PTR [r15+0x75]
   14000933c:	outs   dx,BYTE PTR ds:[rsi]
   14000933d:	ins    BYTE PTR es:[rdi],dx
   14000933e:	outs   dx,DWORD PTR ds:[rsi]
   14000933f:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009342:	jnp    0x140009344
   140009344:	pop    rdi
   140009345:	pop    rdi
   140009346:	fs ins BYTE PTR es:[rdi],dx
   140009348:	ins    BYTE PTR es:[rdi],dx
   140009349:	outs   dx,DWORD PTR ds:[rsi]
   14000934a:	outs   dx,BYTE PTR ds:[rsi]
   14000934b:	gs js  0x1400093b7
   14000934e:	je     0x140009350
   140009350:	nop
   140009351:	add    bl,BYTE PTR [rdi+0x6f]
   140009354:	outs   dx,BYTE PTR ds:[rsi]
   140009355:	gs js  0x1400093c1
   140009358:	je     0x14000935a
   14000935a:	(bad)  
   14000935b:	add    BYTE PTR [rdi],bh
   14000935d:	je     0x1400093c4
   14000935f:	jb     0x1400093ce
   140009361:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140009368:	pop    rcx
   140009369:	pop    r8
   14000936b:	pop    rax
   14000936c:	pop    rdx
   14000936d:	add    BYTE PTR [rax],bh
   14000936f:	add    al,0x52
   140009371:	je     0x1400093df
   140009373:	rex.WB jo 0x1400093ec
   140009376:	xor    al,0x41
   140009378:	fs fs jb 0x1400093e1
   14000937c:	jae    0x1400093f1
   14000937e:	push   rsp
   14000937f:	outs   dx,DWORD PTR ds:[rsi]
   140009380:	push   rbx
   140009381:	je     0x1400093f5
   140009383:	imul   ebp,DWORD PTR [rsi+0x67],0x4400057
   14000938a:	push   rdx
   14000938b:	je     0x1400093f9
   14000938d:	rex.WB jo 0x140009406
   140009390:	ss rex.B
   140009392:	fs fs jb 0x1400093fb
   140009396:	jae    0x14000940b
   140009398:	push   rsp
   140009399:	outs   dx,DWORD PTR ds:[rsi]
   14000939a:	push   rbx
   14000939b:	je     0x14000940f
   14000939d:	imul   ebp,DWORD PTR [rsi+0x67],0x2c60057
   1400093a4:	push   rdx
   1400093a5:	je     0x140009413
   1400093a7:	rex.XB (bad) 
   1400093a9:	jo     0x14000941f
   1400093ab:	jne    0x14000941f
   1400093ad:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400093b0:	outs   dx,BYTE PTR ds:[rsi]
   1400093b1:	je     0x140009418
   1400093b3:	js     0x140009429
   1400093b5:	add    BYTE PTR [rdi+0x4],dh
   1400093b8:	push   rdx
   1400093b9:	je     0x140009427
   1400093bb:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400093bd:	outs   dx,DWORD PTR ds:[rsi]
   1400093be:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400093c2:	jne    0x140009432
   1400093c4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400093c8:	outs   dx,BYTE PTR ds:[rsi]
   1400093c9:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400093cb:	je     0x14000943f
   1400093cd:	jns    0x1400093cf
   1400093cf:	add    BYTE PTR [rbx+0x6c745205],cl
   1400093d5:	push   rsi
   1400093d6:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400093dd:	outs   dx,BYTE PTR ds:[rsi]
   1400093de:	ja     0x140009449
   1400093e0:	outs   dx,BYTE PTR ds:[rsi]
   1400093e1:	add    BYTE PTR fs:[rax],al
   1400093e4:	outs   dx,BYTE PTR ds:[rsi]
   1400093e5:	je     0x14000944b
   1400093e7:	ins    BYTE PTR es:[rdi],dx
   1400093e8:	ins    BYTE PTR es:[rdi],dx
   1400093e9:	cs fs ins BYTE PTR es:[rdi],dx
   1400093ec:	ins    BYTE PTR es:[rdi],dx
   1400093ed:	add    BYTE PTR [rip+0x61725400],al        # 0x1a172e7f3
   1400093f3:	movsxd esp,DWORD PTR [rbp+0x4d]
   1400093f6:	gs jae 0x14000946c
   1400093f9:	(bad)  
   1400093fa:	add    BYTE PTR gs:[eax],al
   1400093fe:	add    al,BYTE PTR [rax]
   140009400:	rex.RXB
   140009401:	gs je  0x140009458
   140009404:	jb     0x140009467
   140009406:	movsxd esp,DWORD PTR [rbp+0x4c]
   140009409:	outs   dx,DWORD PTR ds:[rsi]
   14000940a:	addr32 addr32 gs jb 0x140009457
   14000940f:	(bad)  
   140009410:	outs   dx,BYTE PTR ds:[rsi]
   140009411:	fs ins BYTE PTR es:[rdi],dx
   140009413:	add    BYTE PTR gs:[rax],al
   140009416:	add    DWORD PTR [rax],eax
   140009418:	rex.RXB
   140009419:	gs je  0x140009470
   14000941c:	jb     0x14000947f
   14000941e:	movsxd esp,DWORD PTR [rbp+0x45]
   140009421:	outs   dx,BYTE PTR ds:[rsi]
   140009422:	(bad)  
   140009423:	(bad)  
   140009424:	ins    BYTE PTR es:[rdi],dx
   140009425:	gs rex.WR
   140009427:	gs jbe 0x14000948f
   14000942a:	ins    BYTE PTR es:[rdi],dx
   14000942b:	add    BYTE PTR [rax],al
   14000942d:	add    BYTE PTR [rdi+0x65],al
   140009430:	je     0x140009486
   140009432:	jb     0x140009495
   140009434:	movsxd esp,DWORD PTR [rbp+0x45]
   140009437:	outs   dx,BYTE PTR ds:[rsi]
   140009438:	(bad)  
   140009439:	(bad)  
   14000943a:	ins    BYTE PTR es:[rdi],dx
   14000943b:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000943e:	(bad)  
   14000943f:	addr32 jae 0x140009442
   140009442:	add    eax,DWORD PTR [rax]
   140009444:	push   rdx
   140009445:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   14000944e:	(bad)  
   14000944f:	movsxd esp,DWORD PTR [rbp+0x47]
   140009452:	jne    0x1400094bd
   140009454:	fs jae 0x1400094ae
   140009457:	add    BYTE PTR [rdi],al
   140009459:	add    BYTE PTR [rbp+0x6e],dl
   14000945c:	jb     0x1400094c3
   14000945e:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   140009466:	(bad)  
   140009467:	movsxd esp,DWORD PTR [rbp+0x47]
   14000946a:	jne    0x1400094d5
   14000946c:	fs jae 0x14000946f
   14000946f:	add    BYTE PTR [rdx],cl
   140009471:	add    BYTE PTR [rax+0x65],cl
   140009474:	(bad)  
   140009475:	jo     0x1400094ca
   140009477:	gs je  0x1400094c3
   14000947a:	outs   dx,BYTE PTR ds:[rsi]
   14000947b:	outs   dx,WORD PTR ds:[rsi]
   14000947d:	jb     0x1400094ec
   14000947f:	(bad)  
   140009480:	je     0x1400094eb
   140009482:	outs   dx,DWORD PTR ds:[rsi]
   140009483:	outs   dx,BYTE PTR ds:[rsi]
   140009484:	add    BYTE PTR [rax],al
   140009486:	add    BYTE PTR es:[rbx+0x6f],al
   14000948a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000948c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009494:	rex.RB js 0x140009497
   140009497:	add    BYTE PTR [rdx+0x0],al
   14000949a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000949c:	push   rbp
   14000949d:	outs   dx,BYTE PTR ds:[rsi]
   14000949e:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400094a5:	imul   edi,DWORD PTR [rdx+0x65],0x12a0000
   1400094ac:	rex.WRX
   1400094ad:	fs jb  0x140009503
   1400094b0:	gs jb  0x140009529
   1400094b3:	gs jb  0x1400094f9
   1400094b6:	(bad)  
   1400094b7:	ins    BYTE PTR es:[rdi],dx
   1400094b8:	ins    BYTE PTR es:[rdi],dx
   1400094b9:	xor    al,BYTE PTR [rax]
   1400094bb:	add    BYTE PTR [rax+rax*1+0x4172644e],dl
   1400094c2:	jae    0x14000953d
   1400094c4:	outs   dx,BYTE PTR ds:[rsi]
   1400094c5:	movsxd edx,DWORD PTR [rbx+0x65]
   1400094c8:	jb     0x140009540
   1400094ca:	gs jb  0x140009510
   1400094cd:	(bad)  
   1400094ce:	ins    BYTE PTR es:[rdi],dx
   1400094cf:	ins    BYTE PTR es:[rdi],dx
   1400094d0:	add    BYTE PTR [rax],al
   1400094d2:	sub    eax,DWORD PTR [rcx]
   1400094d4:	rex.WRX
   1400094d5:	fs jb  0x14000952b
   1400094d8:	gs jb  0x140009551
   1400094db:	gs jb  0x140009521
   1400094de:	(bad)  
   1400094df:	ins    BYTE PTR es:[rdi],dx
   1400094e0:	ins    BYTE PTR es:[rdi],dx
   1400094e1:	rex.B ins BYTE PTR es:[rdi],dx
   1400094e3:	ins    BYTE PTR es:[rdi],dx
   1400094e4:	add    BYTE PTR [rax],al
   1400094e6:	pop    QWORD PTR [rax]
   1400094e8:	rex.WRX
   1400094e9:	fs jb  0x140009522
   1400094ec:	xor    al,0x41
   1400094ee:	jae    0x140009569
   1400094f0:	outs   dx,BYTE PTR ds:[rsi]
   1400094f1:	movsxd edx,DWORD PTR [rbx+0x65]
   1400094f4:	jb     0x14000956c
   1400094f6:	gs jb  0x14000953c
   1400094f9:	(bad)  
   1400094fa:	ins    BYTE PTR es:[rdi],dx
   1400094fb:	ins    BYTE PTR es:[rdi],dx
   1400094fc:	rex.B ins BYTE PTR es:[rdi],dx
   1400094fe:	ins    BYTE PTR es:[rdi],dx
   1400094ff:	add    BYTE PTR [rax],bl
   140009501:	add    BYTE PTR [rcx+0x6e],cl
   140009504:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000950c:	rex.XB jb 0x140009578
   14000950f:	je     0x14000957a
   140009511:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009514:	push   rbx
   140009515:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000951a:	outs   dx,BYTE PTR ds:[rsi]
   14000951b:	add    BYTE PTR [rdi],cl
   14000951d:	add    BYTE PTR [rbp+riz*2+0x6c],al
   140009521:	gs je  0x140009589
   140009524:	rex.XB jb 0x140009590
   140009527:	je     0x140009592
   140009529:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000952c:	push   rbx
   14000952d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009532:	outs   dx,BYTE PTR ds:[rsi]
   140009533:	add    dh,ch
   140009535:	add    DWORD PTR [rdx+0x70],edx
   140009538:	movsxd edx,DWORD PTR [rbx+0x65]
   14000953b:	jb     0x1400095b3
   14000953d:	gs jb  0x140009595
   140009540:	jae    0x1400095a7
   140009542:	push   rax
   140009543:	jb     0x1400095b4
   140009545:	je     0x1400095ba
   140009547:	gs jno 0x1400095a1
   14000954a:	add    BYTE PTR [rax],al
   14000954c:	retf   
   14000954d:	add    DWORD PTR [rdx+0x70],edx
   140009550:	movsxd edx,DWORD PTR [rbx+0x65]
   140009553:	jb     0x1400095cb
   140009555:	gs jb  0x1400095a1
   140009558:	outs   dx,BYTE PTR ds:[rsi]
   140009559:	jno    0x14000959f
   14000955b:	gs data16 (bad) 
   14000955e:	jne    0x1400095cc
   140009560:	je     0x1400095b2
   140009562:	jb     0x1400095cd
   140009564:	outs   dx,BYTE PTR ds:[rsi]
   140009565:	movsxd ecx,DWORD PTR [rsi+0x61]
   140009568:	ins    DWORD PTR es:[rdi],dx
   140009569:	gs push rdi
   14000956b:	add    ch,dl
   14000956d:	add    DWORD PTR [rdx+0x70],edx
   140009570:	movsxd edx,DWORD PTR [rbx+0x65]
   140009573:	jb     0x1400095eb
   140009575:	gs jb  0x1400095ca
   140009578:	imul   esi,DWORD PTR gs:[ebx+0x74],0x75417265
   140009581:	je     0x1400095eb
   140009583:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009585:	outs   dx,WORD PTR ds:[rsi]
   140009587:	push   rdi
   140009588:	add    BYTE PTR [rax],al
   14000958a:	fld    DWORD PTR [rcx]
   14000958c:	push   rdx
   14000958d:	jo     0x1400095f2
   14000958f:	push   rbx
   140009590:	gs jb  0x140009609
   140009593:	gs jb  0x1400095e8
   140009596:	imul   esi,DWORD PTR gs:[ebx+0x74],0x66497265
   14000959f:	rex.RB js 0x1400095a2
   1400095a2:	mov    DWORD PTR [rcx],0x53637052
   1400095a8:	gs jb  0x140009621
   1400095ab:	gs jb  0x1400095f7
   1400095ae:	outs   dx,BYTE PTR ds:[rsi]
   1400095af:	jno    0x1400095f3
   1400095b1:	imul   ebp,DWORD PTR [rsi+0x64],0x73676e69
   1400095b8:	add    BYTE PTR [rax],al
   1400095ba:	mov    es,WORD PTR [rcx]
   1400095bc:	push   rdx
   1400095bd:	jo     0x140009622
   1400095bf:	rex.RB jo 0x140009614
   1400095c2:	imul   esi,DWORD PTR gs:[ebx+0x74],0x577265
   1400095cb:	add    bl,dl
   1400095cd:	add    DWORD PTR [rdx+0x70],edx
   1400095d0:	movsxd edx,DWORD PTR [rbx+0x65]
   1400095d3:	jb     0x14000964b
   1400095d5:	gs jb  0x140009624
   1400095d8:	imul   esi,DWORD PTR [rbx+0x74],0x11006e65
   1400095df:	add    BYTE PTR [rbp+0x6e],al
   1400095e2:	je     0x140009649
   1400095e4:	jb     0x140009629
   1400095e6:	jb     0x140009651
   1400095e8:	je     0x140009653
   1400095ea:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400095ed:	push   rbx
   1400095ee:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400095f3:	outs   dx,BYTE PTR ds:[rsi]
   1400095f4:	add    BYTE PTR [rax],al
   1400095f6:	mov    ah,0x1
   1400095f8:	push   rdx
   1400095f9:	jo     0x14000965e
   1400095fb:	rex.WRB
   1400095fc:	ins    DWORD PTR es:[edi],dx
   1400095fe:	je     0x140009653
   140009600:	je     0x140009671
   140009602:	jo     0x140009657
   140009604:	gs jb  0x14000967d
   140009607:	gs jb  0x140009656
   14000960a:	imul   esi,DWORD PTR [rbx+0x74],0x6e696e65
   140009611:	add    BYTE PTR [eax],al
   140009614:	sbb    eax,0x61654c00
   140009619:	jbe    0x140009680
   14000961b:	rex.XB jb 0x140009687
   14000961e:	je     0x140009689
   140009620:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009623:	push   rbx
   140009624:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009629:	outs   dx,BYTE PTR ds:[rsi]
   14000962a:	add    BYTE PTR [rax],al
   14000962c:	nop
   14000962d:	add    DWORD PTR [rdx+0x70],edx
   140009630:	movsxd eax,DWORD PTR [rbp+0x70]
   140009633:	push   rbp
   140009634:	outs   dx,BYTE PTR ds:[rsi]
   140009635:	jb     0x14000969c
   140009637:	imul   esi,DWORD PTR [ebx+0x74],0x85007265
   14000963f:	add    DWORD PTR [rdx+0x70],edx
   140009642:	movsxd eax,DWORD PTR [rdx+0x69]
   140009645:	outs   dx,BYTE PTR ds:[rsi]
   140009646:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74636556
   14000964e:	outs   dx,DWORD PTR ds:[rsi]
   14000964f:	jb     0x140009697
   140009651:	jb     0x1400096b8
   140009653:	add    BYTE PTR gs:[rax],al
   140009656:	fadd   QWORD PTR [rcx]
   140009658:	push   rdx
   140009659:	jo     0x1400096be
   14000965b:	push   rbx
   14000965c:	gs jb  0x1400096d5
   14000965f:	gs jb  0x1400096b7
   140009662:	outs   dx,BYTE PTR ds:[rsi]
   140009663:	jb     0x1400096ca
   140009665:	imul   esi,DWORD PTR [ebx+0x74],0x66497265
   14000966d:	add    BYTE PTR [rdx+rax*1],cl
   140009670:	push   rdx
   140009671:	jo     0x1400096d6
   140009673:	push   rbx
   140009674:	je     0x1400096e8
   140009676:	imul   ebp,DWORD PTR [rsi+0x67],0x65657246
   14000967d:	push   rdi
   14000967e:	add    BYTE PTR [rax],al
   140009680:	jae    0x140009683
   140009682:	push   rdx
   140009683:	jo     0x1400096e8
   140009685:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x49676e69
   14000968d:	outs   dx,BYTE PTR ds:[rsi]
   14000968e:	jno    0x1400096d1
   140009690:	jne    0x140009706
   140009692:	push   0x65696c43
   140009697:	outs   dx,BYTE PTR ds:[rsi]
   140009698:	je     0x1400096f1
   14000969a:	add    BYTE PTR [rax],al
   14000969c:	fiadd  DWORD PTR [rcx]
   14000969e:	push   rdx
   14000969f:	jo     0x140009704
   1400096a1:	push   rbx
   1400096a2:	gs jb  0x14000971b
   1400096a5:	gs jb  0x1400096fb
   1400096a8:	jne    0x14000970c
   1400096aa:	jae    0x14000970f
   1400096ac:	jb     0x140009717
   1400096ae:	(bad)  
   1400096af:	rex.RX outs dx,DWORD PTR gs:[rsi]
   1400096b2:	jb     0x140009702
   1400096b4:	outs   dx,DWORD PTR ds:[rsi]
   1400096b5:	je     0x140009720
   1400096b7:	imul   sp,WORD PTR [rbx+0x61],0x6974
   1400096bd:	outs   dx,DWORD PTR ds:[rsi]
   1400096be:	outs   dx,BYTE PTR ds:[rsi]
   1400096bf:	add    BYTE PTR [rbp+0x1],ah
   1400096c2:	push   rdx
   1400096c3:	jo     0x140009728
   1400096c5:	rex.B jae 0x140009741
   1400096c8:	outs   dx,BYTE PTR ds:[rsi]
   1400096c9:	movsxd eax,DWORD PTR [rbx+0x6f]
   1400096cc:	ins    DWORD PTR es:[rdi],dx
   1400096cd:	jo     0x14000973b
   1400096cf:	gs je  0x140009737
   1400096d2:	rex.XB (bad) 
   1400096d4:	ins    BYTE PTR es:[rdi],dx
   1400096d5:	ins    BYTE PTR es:[rdi],dx
   1400096d6:	add    BYTE PTR [rax],al
   1400096d8:	fiadd  WORD PTR [rcx]
   1400096da:	push   rdx
   1400096db:	jo     0x140009740
   1400096dd:	push   rbx
   1400096de:	gs jb  0x140009757
   1400096e1:	gs jb  0x140009739
   1400096e4:	outs   dx,BYTE PTR ds:[rsi]
   1400096e5:	jae    0x14000975c
   1400096e7:	(bad)  
   1400096e9:	movsxd esi,DWORD PTR [rdx+0x69]
   1400096ec:	(bad)  
   1400096ed:	rex.RX outs dx,DWORD PTR gs:[rsi]
   1400096f0:	jb     0x140009740
   1400096f2:	outs   dx,DWORD PTR ds:[rsi]
   1400096f3:	je     0x14000975e
   1400096f5:	imul   sp,WORD PTR [rbx+0x61],0x6974
   1400096fb:	outs   dx,DWORD PTR ds:[rsi]
   1400096fc:	outs   dx,BYTE PTR ds:[rsi]
   1400096fd:	add    BYTE PTR [rsi+0x0],bl
   140009700:	rex.WB pop r15
   140009702:	push   rdx
   140009703:	jo     0x140009768
   140009705:	push   rbx
   140009706:	gs jb  0x14000977f
   140009709:	gs jb  0x140009755
   14000970c:	outs   dx,BYTE PTR ds:[rsi]
   14000970d:	jno    0x140009761
   14000970f:	gs ins DWORD PTR es:[rdi],dx
   140009711:	outs   dx,DWORD PTR ds:[rsi]
   140009712:	je     0x140009779
   140009714:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009716:	outs   dx,BYTE PTR ds:[rsi]
   140009717:	outs   dx,BYTE PTR ds:[rsi]
   140009718:	rex.B
   140009719:	fs fs jb 0x140009782
   14000971d:	jae    0x140009792
   14000971f:	add    BYTE PTR [rax],cl
   140009721:	add    BYTE PTR [rbx+0x6f],al
   140009724:	rex.XB jb 0x14000978c
   140009727:	(bad)  
   140009728:	je     0x14000978f
   14000972a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000972c:	jae    0x1400097a2
   14000972e:	(bad)  
   14000972f:	outs   dx,BYTE PTR ds:[rsi]
   140009730:	movsxd esp,DWORD PTR [rbp+0x0]
   140009733:	add    BYTE PTR [rcx],al
   140009735:	add    BYTE PTR [rdi+0x70],cl
   140009738:	outs   dx,BYTE PTR gs:[rsi]
   14000973a:	push   rsp
   14000973b:	jb     0x14000979e
   14000973d:	movsxd esp,DWORD PTR [rbp+0x57]
   140009740:	add    BYTE PTR [rax],al
   140009742:	add    eax,0x74654700
   140009747:	rex.WR (bad) 
   140009749:	jae    0x1400097bf
   14000974b:	rex.RB jb 0x1400097c0
   14000974e:	outs   dx,DWORD PTR ds:[rsi]
   14000974f:	jb     0x140009751
   140009751:	add    BYTE PTR [rdx],al
   140009753:	add    BYTE PTR [rax+0x72],dl
   140009756:	outs   dx,DWORD PTR ds:[rsi]
   140009757:	movsxd esp,DWORD PTR [rbp+0x73]
   14000975a:	jae    0x1400097b0
   14000975c:	jb     0x1400097bf
   14000975e:	movsxd esp,DWORD PTR [rbp+0x0]
   140009761:	add    BYTE PTR [rax],al
   140009763:	add    BYTE PTR [rbx+0x6c],al
   140009766:	outs   dx,DWORD PTR ds:[rsi]
   140009767:	jae    0x1400097ce
   140009769:	push   rsp
   14000976a:	jb     0x1400097cd
   14000976c:	movsxd esp,DWORD PTR [rbp+0x0]
   14000976f:	add    BYTE PTR [rax],al
   140009771:	add    BYTE PTR [rbx+0x6f],al
   140009774:	outs   dx,BYTE PTR ds:[rsi]
   140009775:	je     0x1400097e9
   140009777:	outs   dx,DWORD PTR ds:[rsi]
   140009778:	ins    BYTE PTR es:[rdi],dx
   140009779:	push   rsp
   14000977a:	jb     0x1400097dd
   14000977c:	movsxd esp,DWORD PTR [rbp+0x57]
   14000977f:	add    BYTE PTR [rdi],al
   140009781:	add    BYTE PTR [rbx+0x74],dl
   140009784:	(bad)  
   140009785:	jb     0x1400097fb
   140009787:	push   rsp
   140009788:	jb     0x1400097eb
   14000978a:	movsxd esp,DWORD PTR [rbp+0x57]
   14000978d:	add    BYTE PTR [rcx],al
   14000978f:	add    BYTE PTR [rbp+0x6e],al
   140009792:	(bad)  
   140009793:	(bad)  
   140009794:	ins    BYTE PTR es:[rdi],dx
   140009795:	gs push rsp
   140009797:	jb     0x1400097fa
   140009799:	movsxd esp,DWORD PTR [rbp+0x45]
   14000979c:	js     0x1400097d0
   14000979e:	add    BYTE PTR [rax],al
   1400097a0:	(bad)  
   1400097a1:	add    BYTE PTR [rbx+0x6c],al
   1400097a4:	outs   dx,DWORD PTR ds:[rsi]
   1400097a5:	jae    0x14000980c
   1400097a7:	push   rsp
   1400097a8:	push   0x64616572
   1400097ad:	jo     0x14000981e
   1400097af:	outs   dx,DWORD PTR ds:[rsi]
   1400097b0:	ins    BYTE PTR es:[rdi],dx
   1400097b1:	push   rsp
   1400097b2:	imul   ebp,DWORD PTR [rbp+0x65],0xc000072
   1400097b9:	add    BYTE PTR [rbx+0x72],al
   1400097bc:	gs (bad) 
   1400097be:	je     0x140009825
   1400097c0:	push   rsp
   1400097c1:	push   0x64616572
   1400097c6:	jo     0x140009837
   1400097c8:	outs   dx,DWORD PTR ds:[rsi]
   1400097c9:	ins    BYTE PTR es:[rdi],dx
   1400097ca:	push   rsp
   1400097cb:	imul   ebp,DWORD PTR [rbp+0x65],0x220072
   1400097d2:	push   rdi
   1400097d3:	(bad)  
   1400097d4:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x72685472
   1400097dc:	gs (bad) 
   1400097de:	fs jo  0x140009850
   1400097e1:	outs   dx,DWORD PTR ds:[rsi]
   1400097e2:	ins    BYTE PTR es:[rdi],dx
   1400097e3:	push   rsp
   1400097e4:	imul   ebp,DWORD PTR [rbp+0x65],0x6c614372
   1400097eb:	ins    BYTE PTR es:[rdi],dx
   1400097ec:	(bad)  
   1400097ee:	movsxd ebp,DWORD PTR [rbx+0x73]
   1400097f1:	add    BYTE PTR [rdx],bl
   1400097f3:	add    BYTE PTR [rbx+0x65],dl
   1400097f6:	je     0x14000984c
   1400097f8:	push   0x64616572
   1400097fd:	jo     0x14000986e
   1400097ff:	outs   dx,DWORD PTR ds:[rsi]
   140009800:	ins    BYTE PTR es:[rdi],dx
   140009801:	push   rsp
   140009802:	imul   ebp,DWORD PTR [rbp+0x65],0x16000072
   140009809:	add    BYTE PTR [rcx+0x6c],al
   14000980c:	ins    BYTE PTR es:[rdi],dx
   14000980d:	outs   dx,DWORD PTR ds:[rsi]
   14000980e:	movsxd esp,DWORD PTR [rcx+0x74]
   140009811:	rex.B outs dx,BYTE PTR gs:[rsi]
   140009814:	rex.WB outs dx,BYTE PTR fs:[rsi]
   140009817:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000981f:	push   rbx
   140009820:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6843001b
   140009828:	movsxd ebp,DWORD PTR gs:[rbx+0x54]
   14000982c:	outs   dx,DWORD PTR ds:[rsi]
   14000982d:	imul   esp,DWORD PTR [rbp+0x6e],0x4d
   140009831:	gs ins DWORD PTR es:[rdi],dx
   140009833:	(bad)  
   140009834:	gs jb  0x1400098aa
   140009837:	push   0x7069
   14000983c:	sub    al,0x0
   14000983e:	rex.RX jb 0x1400098a6
   140009841:	gs push rbx
   140009843:	imul   esp,DWORD PTR [rax+rax*1-0x61],0x63705201
   14000984b:	rex.WB ins DWORD PTR es:[rdi],dx
   14000984d:	jo     0x1400098b4
   14000984f:	jb     0x1400098c4
   140009851:	outs   dx,DWORD PTR ds:[rsi]
   140009852:	outs   dx,BYTE PTR ds:[rsi]
   140009853:	(bad)  
   140009854:	je     0x1400098bb
   140009856:	rex.XB ins BYTE PTR es:[rdi],dx
   140009858:	imul   esp,DWORD PTR [rbp+0x6e],0x32000074
   14000985f:	add    BYTE PTR [rdi+0x70],cl
   140009862:	outs   dx,BYTE PTR gs:[rsi]
   140009864:	push   rsp
   140009865:	push   0x64616572
   14000986a:	push   rsp
   14000986b:	outs   dx,DWORD PTR ds:[rsi]
   14000986c:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140009870:	adc    BYTE PTR [rax],al
   140009872:	rex.RXB
   140009873:	gs je  0x1400098b9
   140009876:	jne    0x1400098ea
   140009878:	jb     0x1400098df
   14000987a:	outs   dx,BYTE PTR ds:[rsi]
   14000987b:	je     0x1400098d1
   14000987d:	push   0x64616572
   140009882:	add    BYTE PTR [rax],al
   140009884:	(bad)
   140009888:	movsxd edx,DWORD PTR [rdx+0x65]
   14000988b:	jbe    0x1400098f2
   14000988d:	jb     0x140009903
   14000988f:	push   rsp
   140009890:	outs   dx,DWORD PTR ds:[rsi]
   140009891:	push   rbx
   140009892:	gs ins BYTE PTR es:[rdi],dx
   140009894:	data16 rex.RB js 0x140009898
   140009898:	add    BYTE PTR [rax],al
   14000989a:	rex.XB ins BYTE PTR es:[rdi],dx
   14000989c:	outs   dx,DWORD PTR ds:[rsi]
   14000989d:	jae    0x140009904
   14000989f:	rex.W (bad) 
   1400098a1:	outs   dx,BYTE PTR ds:[rsi]
   1400098a2:	fs ins BYTE PTR es:[rdi],dx
   1400098a4:	add    BYTE PTR gs:[rip+0x656c5300],ch        # 0x1a56cebab
   1400098ab:	gs jo  0x1400098ae
   1400098ae:	lldt   WORD PTR [rbx+0x65]
   1400098b2:	je     0x140009909
   1400098b4:	outs   dx,BYTE PTR ds:[rsi]
   1400098b5:	push   0x6c646e61
   1400098ba:	gs fs rex.RB js 0x140009922
   1400098bf:	gs jo  0x140009936
   1400098c2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400098c9:	gs jb  0x1400098cc
   1400098cc:	adc    eax,DWORD PTR [rax]
   1400098ce:	rex.RXB
   1400098cf:	gs je  0x14000991f
   1400098d2:	outs   dx,DWORD PTR ds:[rsi]
   1400098d3:	fs jne 0x140009942
   1400098d6:	gs rex.W (bad) 
   1400098d9:	outs   dx,BYTE PTR ds:[rsi]
   1400098da:	fs ins BYTE PTR es:[rdi],dx
   1400098dc:	gs push rdi
   1400098de:	add    BYTE PTR [rax],al
   1400098e0:	add    BYTE PTR [rax],al
   1400098e2:	push   rcx
   1400098e3:	jne    0x14000994a
   1400098e5:	jb     0x140009960
   1400098e7:	push   rax
   1400098e8:	gs jb  0x140009951
   1400098eb:	outs   dx,DWORD PTR ds:[rsi]
   1400098ec:	jb     0x14000995b
   1400098ee:	(bad)  
   1400098ef:	outs   dx,BYTE PTR ds:[rsi]
   1400098f0:	movsxd esp,DWORD PTR [rbp+0x43]
   1400098f3:	outs   dx,DWORD PTR ds:[rsi]
   1400098f4:	jne    0x140009964
   1400098f6:	je     0x14000995d
   1400098f8:	jb     0x1400098fa
   1400098fa:	or     eax,0x74654700
   1400098ff:	rex.XB jne 0x140009974
   140009902:	jb     0x140009969
   140009904:	outs   dx,BYTE PTR ds:[rsi]
   140009905:	je     0x140009957
   140009907:	jb     0x140009978
   140009909:	movsxd esp,DWORD PTR [rbp+0x73]
   14000990c:	jae    0x140009957
   14000990e:	add    BYTE PTR fs:[rcx],dl
   140009911:	add    BYTE PTR [rdi+0x65],al
   140009914:	je     0x140009959
   140009916:	jne    0x14000998a
   140009918:	jb     0x14000997f
   14000991a:	outs   dx,BYTE PTR ds:[rsi]
   14000991b:	je     0x140009971
   14000991d:	push   0x64616572
   140009922:	rex.WB
   140009923:	add    BYTE PTR fs:[rax],al
   140009926:	adc    al,0x0
   140009928:	rex.RXB
   140009929:	gs je  0x14000997f
   14000992c:	jns    0x1400099a1
   14000992e:	je     0x140009995
   140009930:	ins    DWORD PTR es:[rdi],dx
   140009931:	push   rsp
   140009932:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140009939:	ins    BYTE PTR es:[rdi],dx
   14000993a:	gs push rsp
   14000993c:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140009943:	gs je  0x14000999a
   140009946:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000994d:	je     0x14000994f
   14000994f:	add    BYTE PTR [rcx],dl
   140009951:	add    BYTE PTR [rbp+0x6e],dl
   140009954:	push   0x6c646e61
   140009959:	gs fs rex.RB js 0x1400099c1
   14000995e:	gs jo  0x1400099d5
   140009961:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009968:	gs jb  0x14000996b
   14000996b:	add    BYTE PTR [rax+rax*1],cl
   14000996e:	rex.RXB
   14000996f:	gs je  0x1400099b5
   140009972:	jne    0x1400099e6
   140009974:	jb     0x1400099db
   140009976:	outs   dx,BYTE PTR ds:[rsi]
   140009977:	je     0x1400099c9
   140009979:	jb     0x1400099ea
   14000997b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000997e:	jae    0x140009980
   140009980:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   140009985:	ins    DWORD PTR es:[rdi],dx
   140009986:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000998d:	outs   dx,DWORD PTR ds:[rsi]
   14000998e:	movsxd esp,DWORD PTR [rbp+0x73]
   140009991:	jae    0x140009993
   140009993:	add    BYTE PTR [rcx+0x70],ah
   140009996:	imul   ebp,DWORD PTR [rip+0x772d736d],0x652d6e69        # 0x1b72e0d0d
   1400099a0:	jbe    0x140009a07
   1400099a2:	outs   dx,BYTE PTR ds:[rsi]
   1400099a3:	je     0x140009a0e
   1400099a5:	outs   dx,BYTE PTR ds:[rsi]
   1400099a6:	addr32 sub eax,0x73616c63
   1400099ac:	jae    0x140009a17
   1400099ae:	movsxd esi,DWORD PTR [rax+0x72]
   1400099b1:	outs   dx,DWORD PTR ds:[rsi]
   1400099b2:	jbe    0x140009a1d
   1400099b4:	fs gs jb 0x1400099e5
   1400099b8:	ins    BYTE PTR es:[rdi],dx
   1400099b9:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30c6f0
   1400099bf:	fs ins BYTE PTR es:[rdi],dx
   1400099c1:	ins    BYTE PTR es:[rdi],dx
   1400099c2:	add    BYTE PTR [rax],al
   1400099c4:	(bad)  
   1400099c5:	jo     0x140009a30
   1400099c7:	sub    eax,0x772d736d
   1400099cc:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400099d3:	sub    eax,0x70616568
   1400099d8:	sub    eax,0x322d316c
   1400099dd:	sub    eax,0x6c642e30
   1400099e2:	ins    BYTE PTR es:[rdi],dx
   1400099e3:	add    BYTE PTR [rcx+0x70],ah
   1400099e6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0d5d
   1400099f0:	outs   dx,DWORD PTR ds:[rsi]
   1400099f1:	jb     0x140009a58
   1400099f3:	sub    eax,0x2d6d6f63
   1400099f8:	ins    BYTE PTR es:[rdi],dx
   1400099f9:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31c730
   1400099ff:	fs ins BYTE PTR es:[rdi],dx
   140009a01:	ins    BYTE PTR es:[rdi],dx
   140009a02:	add    BYTE PTR [rax],al
   140009a04:	push   rdx
   140009a05:	push   rax
   140009a06:	rex.XB push r10
   140009a08:	push   rsp
   140009a09:	xor    al,0x2e
   140009a0b:	fs ins BYTE PTR es:[rdi],dx
   140009a0d:	ins    BYTE PTR es:[rdi],dx
   140009a0e:	add    BYTE PTR [rax],al
   140009a10:	(bad)  
   140009a11:	jo     0x140009a7c
   140009a13:	sub    eax,0x772d736d
   140009a18:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009a1f:	sub    eax,0x636e7973
   140009a24:	push   0x2d316c2d
   140009a29:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64c85f
   140009a2f:	ins    BYTE PTR es:[rdi],dx
   140009a30:	add    BYTE PTR [rax],al
   140009a32:	rex.WRXB
   140009a33:	rex.WR
   140009a34:	rex.RB
   140009a35:	push   r13
   140009a37:	push   rsp
   140009a38:	xor    esi,DWORD PTR [rdx]
   140009a3a:	cs fs ins BYTE PTR es:[rdi],dx
   140009a3d:	ins    BYTE PTR es:[rdi],dx
   140009a3e:	add    BYTE PTR [rax],al
   140009a40:	(bad)  
   140009a41:	jo     0x140009aac
   140009a43:	sub    eax,0x772d736d
   140009a48:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   140009a4f:	je     0x140009aba
   140009a51:	outs   dx,BYTE PTR ds:[rsi]
   140009a52:	addr32 sub eax,0x736e6f63
   140009a58:	jne    0x140009ac7
   140009a5a:	gs jb  0x140009a8a
   140009a5d:	ins    BYTE PTR es:[rdi],dx
   140009a5e:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30c795
   140009a64:	fs ins BYTE PTR es:[rdi],dx
   140009a66:	ins    BYTE PTR es:[rdi],dx
   140009a67:	add    BYTE PTR [rcx+0x70],ah
   140009a6a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0de1
   140009a74:	outs   dx,DWORD PTR ds:[rsi]
   140009a75:	jb     0x140009adc
   140009a77:	sub    eax,0x6f727265
   140009a7c:	jb     0x140009ae6
   140009a7e:	(bad)  
   140009a7f:	outs   dx,BYTE PTR ds:[rsi]
   140009a80:	fs ins BYTE PTR es:[rdi],dx
   140009a82:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140009a89:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64c8c0
   140009a8f:	ins    BYTE PTR es:[rdi],dx
   140009a90:	add    BYTE PTR [rax],al
   140009a92:	(bad)  
   140009a93:	jo     0x140009afe
   140009a95:	sub    eax,0x772d736d
   140009a9a:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   140009aa1:	je     0x140009b0c
   140009aa3:	outs   dx,BYTE PTR ds:[rsi]
   140009aa4:	addr32 sub eax,0x746e6f63
   140009aaa:	jb     0x140009b1b
   140009aac:	ins    BYTE PTR es:[rdi],dx
   140009aad:	ins    BYTE PTR es:[rdi],dx
   140009aae:	gs jb  0x140009ade
   140009ab1:	ins    BYTE PTR es:[rdi],dx
   140009ab2:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30c7e9
   140009ab8:	fs ins BYTE PTR es:[rdi],dx
   140009aba:	ins    BYTE PTR es:[rdi],dx
   140009abb:	add    BYTE PTR [rcx+0x70],ah
   140009abe:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0e35
   140009ac8:	outs   dx,DWORD PTR ds:[rsi]
   140009ac9:	jb     0x140009b30
   140009acb:	sub    eax,0x65726874
   140009ad0:	(bad)  
   140009ad1:	fs jo  0x140009b43
   140009ad4:	outs   dx,DWORD PTR ds:[rsi]
   140009ad5:	ins    BYTE PTR es:[rdi],dx
   140009ad6:	sub    eax,0x322d316c
   140009adb:	sub    eax,0x6c642e30
   140009ae0:	ins    BYTE PTR es:[rdi],dx
   140009ae1:	add    BYTE PTR [rcx+0x70],ah
   140009ae4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x732d6e69        # 0x1b72e0e5b
   140009aee:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009af2:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x65736162
   140009afa:	sub    eax,0x322d316c
   140009aff:	sub    eax,0x6c642e30
   140009b04:	ins    BYTE PTR es:[rdi],dx
   140009b05:	add    BYTE PTR [rcx+0x70],ah
   140009b08:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0e7f
   140009b12:	outs   dx,DWORD PTR ds:[rsi]
   140009b13:	jb     0x140009b7a
   140009b15:	sub    eax,0x636f7270
   140009b1a:	gs jae 0x140009b90
   140009b1d:	je     0x140009b87
   140009b1f:	jb     0x140009b86
   140009b21:	(bad)  
   140009b22:	fs jae 0x140009b52
   140009b25:	ins    BYTE PTR es:[rdi],dx
   140009b26:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32c85d
   140009b2c:	fs ins BYTE PTR es:[rdi],dx
   140009b2e:	ins    BYTE PTR es:[rdi],dx
   140009b2f:	add    BYTE PTR [rcx+0x70],ah
   140009b32:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0ea9
   140009b3c:	outs   dx,DWORD PTR ds:[rsi]
   140009b3d:	jb     0x140009ba4
   140009b3f:	sub    eax,0x646e6168
   140009b44:	ins    BYTE PTR es:[rdi],dx
   140009b45:	gs sub eax,0x312d316c
   140009b4b:	sub    eax,0x6c642e30
   140009b50:	ins    BYTE PTR es:[rdi],dx
   140009b51:	add    BYTE PTR [rcx+0x70],ah
   140009b54:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0ecb
   140009b5e:	outs   dx,DWORD PTR ds:[rsi]
   140009b5f:	jb     0x140009bc6
   140009b61:	sub    eax,0x7262696c
   140009b66:	(bad)  
   140009b67:	jb     0x140009be2
   140009b69:	ins    BYTE PTR es:[rdi],dx
   140009b6a:	outs   dx,DWORD PTR ds:[rsi]
   140009b6b:	(bad)  
   140009b6c:	fs gs jb 0x140009b9d
   140009b70:	ins    BYTE PTR es:[rdi],dx
   140009b71:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30c8a9
   140009b77:	fs ins BYTE PTR es:[rdi],dx
   140009b79:	ins    BYTE PTR es:[rdi],dx
   140009b7a:	add    BYTE PTR [rax],al
   140009b7c:	(bad)  
   140009b7d:	jo     0x140009be8
   140009b7f:	sub    eax,0x772d736d
   140009b84:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009b8b:	sub    eax,0x666f7270
   140009b90:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140009b98:	sub    eax,0x6c642e30
   140009b9d:	ins    BYTE PTR es:[rdi],dx
   140009b9e:	add    BYTE PTR [rax],al
   140009ba0:	(bad)  
   140009ba1:	jo     0x140009c0c
   140009ba3:	sub    eax,0x772d736d
   140009ba8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009baf:	sub    eax,0x69737973
   140009bb4:	outs   dx,BYTE PTR ds:[rsi]
   140009bb5:	outs   dx,WORD PTR ds:[rsi]
   140009bb7:	sub    eax,0x322d316c
   140009bbc:	sub    eax,0x6c642e31
   140009bc1:	ins    BYTE PTR es:[rdi],dx
   140009bc2:	add    BYTE PTR [rax],al
   140009bc4:	stos   DWORD PTR es:[rdi],eax
   140009bc5:	add    edx,DWORD PTR [rdx+0x74]
   140009bc8:	ins    BYTE PTR es:[rdi],dx
   140009bc9:	rex.RX jb 0x140009c31
   140009bcc:	gs rex.W
   140009bce:	gs (bad) 
   140009bd0:	jo     0x140009bd2
   140009bd2:	stos   BYTE PTR es:[rdi],al
   140009bd3:	add    dl,BYTE PTR [rdx+0x74]
   140009bd6:	ins    BYTE PTR es:[rdi],dx
   140009bd7:	rex.B ins BYTE PTR es:[rdi],dx
   140009bd9:	ins    BYTE PTR es:[rdi],dx
   140009bda:	outs   dx,DWORD PTR ds:[rsi]
   140009bdb:	movsxd esp,DWORD PTR [rcx+0x74]
   140009bde:	gs rex.W
   140009be0:	gs (bad) 
   140009be2:	jo     0x140009be4
   140009be4:	push   rbp
   140009be5:	(bad)  
   140009be6:	pop    rdx
   140009be7:	ja     0x140009c2a
   140009be9:	ins    BYTE PTR es:[rdi],dx
   140009bea:	jo     0x140009c4f
   140009bec:	rex.XB (bad) 
   140009bee:	outs   dx,BYTE PTR ds:[rsi]
   140009bef:	movsxd esp,DWORD PTR [rbp+0x6c]
   140009bf2:	rex.WRB
   140009bf3:	gs jae 0x140009c69
   140009bf6:	(bad)  
   140009bf7:	add    BYTE PTR gs:[ecx+0x6],ch
   140009bfc:	pop    rdx
   140009bfd:	ja     0x140009c40
   140009bff:	ins    BYTE PTR es:[rdi],dx
   140009c00:	jo     0x140009c65
   140009c02:	push   rbx
   140009c03:	outs   dx,BYTE PTR gs:[rsi]
   140009c05:	fs push rdi
   140009c07:	(bad)  
   140009c08:	imul   esi,DWORD PTR [rdx+rdx*2+0x65],0x76696563
   140009c10:	gs push rax
   140009c12:	outs   dx,DWORD PTR ds:[rsi]
   140009c13:	jb     0x140009c89
   140009c15:	add    BYTE PTR [rsi+0x6],dl
   140009c18:	pop    rdx
   140009c19:	ja     0x140009c5c
   140009c1b:	ins    BYTE PTR es:[rdi],dx
   140009c1c:	jo     0x140009c81
   140009c1e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009c20:	outs   dx,BYTE PTR ds:[rsi]
   140009c21:	outs   dx,BYTE PTR ds:[rsi]
   140009c22:	movsxd esi,DWORD PTR gs:[rax+rdx*2+0x6f]
   140009c27:	jb     0x140009c9d
   140009c29:	add    BYTE PTR [rbp+0x6c745205],cl
   140009c2f:	push   rdi
   140009c30:	(bad)  
   140009c31:	imul   esi,DWORD PTR [rdi+rcx*2+0x6e],0x72646441
   140009c39:	gs jae 0x140009caf
   140009c3c:	add    BYTE PTR [rax],al
   140009c3e:	fild   WORD PTR [rip+0x6c417054]        # 0x1ac420c98
   140009c44:	ins    BYTE PTR es:[rdi],dx
   140009c45:	outs   dx,DWORD PTR ds:[rsi]
   140009c46:	movsxd eax,DWORD PTR [rcx+0x6c]
   140009c49:	jo     0x140009cae
   140009c4b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009c4d:	ins    DWORD PTR es:[rdi],dx
   140009c4e:	jo     0x140009cbc
   140009c50:	gs je  0x140009cbc
   140009c53:	outs   dx,DWORD PTR ds:[rsi]
   140009c54:	outs   dx,BYTE PTR ds:[rsi]
   140009c55:	add    BYTE PTR [rsi],cl
   140009c57:	add    al,0x52
   140009c59:	je     0x140009cc7
   140009c5b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009c5d:	imul   esi,DWORD PTR [rbp+rdx*2+0x6e],0x646f6369
   140009c65:	gs push rbx
   140009c67:	je     0x140009cdb
   140009c69:	imul   ebp,DWORD PTR [rsi+0x67],0x80000
   140009c70:	rex.B ins BYTE PTR es:[rdi],dx
   140009c72:	jo     0x140009cd7
   140009c74:	rex.RXB
   140009c75:	gs je  0x140009cc5
   140009c78:	gs jae 0x140009cee
   140009c7b:	(bad)  
   140009c7c:	addr32 gs rex.B je 0x140009cf5
   140009c81:	jb     0x140009cec
   140009c83:	(bad)  
   140009c84:	jne    0x140009cfa
   140009c86:	add    BYTE PTR gs:[rsi+0x6c745205],cl
   140009c8d:	push   rdi
   140009c8e:	(bad)  
   140009c8f:	imul   esp,DWORD PTR [rbp+0x41],0x64
   140009c93:	fs jb  0x140009cfb
   140009c96:	jae    0x140009d0b
   140009c98:	rex.B ins BYTE PTR es:[rdi],dx
   140009c9a:	ins    BYTE PTR es:[rdi],dx
   140009c9b:	add    BYTE PTR [rdi],dl
   140009c9d:	(bad)  
   140009c9e:	push   rsp
   140009c9f:	jo     0x140009cf8
   140009ca1:	(bad)  
   140009ca2:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x706c4172
   140009caa:	movsxd eax,DWORD PTR [rbx+0x6f]
   140009cad:	ins    DWORD PTR es:[rdi],dx
   140009cae:	jo     0x140009d1c
   140009cb0:	gs je  0x140009d1c
   140009cb3:	outs   dx,DWORD PTR ds:[rsi]
   140009cb4:	outs   dx,BYTE PTR ds:[rsi]
   140009cb5:	add    BYTE PTR [rcx+0x6],ah
   140009cb8:	pop    rdx
   140009cb9:	ja     0x140009cfc
   140009cbb:	ins    BYTE PTR es:[rdi],dx
   140009cbc:	jo     0x140009d21
   140009cbe:	imul   r14d,DWORD PTR [rbx+0x63],0x656e6e6f
   140009cc6:	movsxd esi,DWORD PTR [rax+rdx*2+0x6f]
   140009cca:	jb     0x140009d40
   140009ccc:	add    BYTE PTR [rax],al
   140009cce:	ja     0x140009cd6
   140009cd0:	pop    rdx
   140009cd1:	ja     0x140009d16
   140009cd3:	ins    BYTE PTR es:[rdi],dx
   140009cd4:	outs   dx,DWORD PTR ds:[rsi]
   140009cd5:	jae    0x140009d3c
   140009cd7:	add    dh,bh
   140009cd9:	add    eax,0x65527054
   140009cde:	ins    BYTE PTR es:[rdi],dx
   140009cdf:	gs (bad) 
   140009ce1:	jae    0x140009d48
   140009ce3:	rex.B ins BYTE PTR es:[rdi],dx
   140009ce5:	jo     0x140009d4a
   140009ce7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140009ce9:	ins    DWORD PTR es:[rdi],dx
   140009cea:	jo     0x140009d58
   140009cec:	gs je  0x140009d58
   140009cef:	outs   dx,DWORD PTR ds:[rsi]
   140009cf0:	outs   dx,BYTE PTR ds:[rsi]
   140009cf1:	add    BYTE PTR [rsi+0x6],ah
   140009cf4:	pop    rdx
   140009cf5:	ja     0x140009d38
   140009cf7:	ins    BYTE PTR es:[rdi],dx
   140009cf8:	jo     0x140009d5d
   140009cfa:	push   rcx
   140009cfb:	jne    0x140009d62
   140009cfd:	jb     0x140009d78
   140009cff:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009d01:	outs   dx,WORD PTR ds:[rsi]
   140009d03:	jb     0x140009d72
   140009d05:	(bad)  
   140009d06:	je     0x140009d71
   140009d08:	outs   dx,DWORD PTR ds:[rsi]
   140009d09:	outs   dx,BYTE PTR ds:[rsi]
   140009d0a:	add    BYTE PTR [rax],al
   140009d0c:	or     eax,DWORD PTR [rax]
   140009d0e:	rex.B ins BYTE PTR es:[rdi],dx
   140009d10:	jo     0x140009d75
   140009d12:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009d14:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009d1c:	rex.WRB
   140009d1d:	gs jae 0x140009d93
   140009d20:	(bad)  
   140009d21:	addr32 gs rex.B je 0x140009d9a
   140009d26:	jb     0x140009d91
   140009d28:	(bad)  
   140009d29:	jne    0x140009d9f
   140009d2b:	add    BYTE PTR gs:[rax],al
   140009d2e:	xchg   ecx,eax
   140009d2f:	or     BYTE PTR [rsi+0x44],dh
   140009d32:	(bad)  
   140009d33:	addr32 push rax
   140009d35:	jb     0x140009da0
   140009d37:	outs   dx,BYTE PTR ds:[rsi]
   140009d38:	je     0x140009d7f
   140009d3a:	js     0x140009d3c
   140009d3c:	and    al,0x0
   140009d3e:	push   rdx
   140009d3f:	gs ins BYTE PTR es:[rdi],dx
   140009d41:	gs (bad) 
   140009d43:	jae    0x140009daa
   140009d45:	push   rbx
   140009d46:	push   rdx
   140009d47:	push   rdi
   140009d48:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009d4a:	movsxd ebp,DWORD PTR [rbx+0x45]
   140009d4d:	js     0x140009db2
   140009d4f:	ins    BYTE PTR es:[rdi],dx
   140009d50:	jne    0x140009dc5
   140009d52:	imul   esi,DWORD PTR [rsi+0x65],0x41000000
   140009d59:	movsxd esi,DWORD PTR [rcx+0x75]
   140009d5c:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   140009d63:	outs   dx,DWORD PTR ds:[rsi]
   140009d64:	movsxd ebp,DWORD PTR [rbx+0x45]
   140009d67:	js     0x140009dcc
   140009d69:	ins    BYTE PTR es:[rdi],dx
   140009d6a:	jne    0x140009ddf
   140009d6c:	imul   esi,DWORD PTR [rsi+0x65],0x52002500
   140009d73:	gs ins BYTE PTR es:[rdi],dx
   140009d75:	gs (bad) 
   140009d77:	jae    0x140009dde
   140009d79:	push   rbx
   140009d7a:	push   rdx
   140009d7b:	push   rdi
   140009d7c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009d7e:	movsxd ebp,DWORD PTR [rbx+0x53]
   140009d81:	push   0x64657261
   140009d86:	add    BYTE PTR [rax],al
   140009d88:	sbb    eax,DWORD PTR [rax]
   140009d8a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009d8c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009d94:	push   rbx
   140009d95:	push   rdx
   140009d96:	push   rdi
   140009d97:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009d99:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009d9c:	add    DWORD PTR [rax],eax
   140009d9e:	movsxd esi,DWORD PTR [r9+0x75]
   140009da2:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   140009da9:	outs   dx,DWORD PTR ds:[rsi]
   140009daa:	movsxd ebp,DWORD PTR [rbx+0x53]
   140009dad:	push   0x64657261
   140009db2:	add    BYTE PTR [rax],al
   140009db4:	xchg   edx,eax
   140009db5:	add    al,0x6d
   140009db7:	gs ins DWORD PTR es:[rdi],dx
   140009db9:	movsxd esi,DWORD PTR [rax+0x79]
   140009dbc:	add    BYTE PTR [rax],al
   140009dbe:	xchg   esi,eax
   140009dbf:	add    al,0x6d
   140009dc1:	gs ins DWORD PTR es:[rdi],dx
   140009dc3:	jae    0x140009e2a
   140009dc5:	je     0x140009dc7
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	jo     0x14000a077
   14000a002:	add    BYTE PTR [rax+0x1],al
	...
   14000a00d:	add    BYTE PTR [rax],al
   14000a00f:	add    BYTE PTR [rcx],al
   14000a011:	add    BYTE PTR [rax],al
   14000a013:	add    BYTE PTR [rax],al
   14000a015:	add    BYTE PTR [rax],al
   14000a017:	add    BYTE PTR [rdx],dh
   14000a019:	movabs ds:0x5dcd00002b992ddf,al
   14000a022:	and    dl,dl
   14000a024:	data16 (bad) 
   14000a026:	(bad)  
   14000a027:	inc    DWORD PTR [rax]
   14000a029:	add    BYTE PTR [rax],al
   14000a02b:	add    BYTE PTR [rax],al
   14000a02d:	add    BYTE PTR [rax],al
   14000a02f:	add    BYTE PTR [rax],dh
   14000a031:	movabs al,ds:0x7590000000014000
   14000a03a:	add    BYTE PTR [rax+0x1],al
	...
   14000a045:	add    BYTE PTR [rax],al
   14000a047:	add    BYTE PTR [rsi],ch
   14000a049:	(bad)  
   14000a04a:	push   r14
   14000a04c:	ins    BYTE PTR es:[rdi],dx
   14000a04d:	outs   dx,DWORD PTR ds:[rsi]
   14000a04e:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000a056:	jb     0x14000a098
   14000a058:	jae    0x14000a0ce
   14000a05a:	fs rex
   14000a05c:	add    BYTE PTR [rax],al
   14000a05f:	add    BYTE PTR [rax+0x1400075],dl
	...
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    BYTE PTR [rsi],ch
   14000a071:	(bad)  
   14000a072:	push   r14
   14000a074:	ins    BYTE PTR es:[rdi],dx
   14000a075:	outs   dx,BYTE PTR gs:[rsi]
   14000a077:	addr32 je 0x14000a0e2
   14000a07a:	pop    rdi
   14000a07b:	gs jb  0x14000a0f0
   14000a07e:	outs   dx,DWORD PTR ds:[rsi]
   14000a07f:	jb     0x14000a0c1
   14000a081:	jae    0x14000a0f7
   14000a083:	fs rex
   14000a085:	add    BYTE PTR [rax],al
   14000a088:	nop
   14000a089:	jne    0x14000a08b
   14000a08b:	rex add DWORD PTR [rax],eax
	...
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	cs (bad) 
   14000a09a:	push   r14
   14000a09c:	outs   dx,DWORD PTR ds:[rsi]
   14000a09d:	jne    0x14000a113
   14000a09f:	pop    rdi
   14000a0a0:	outs   dx,DWORD PTR ds:[rsi]
   14000a0a1:	pop    di
   14000a0a3:	jb     0x14000a106
   14000a0a5:	outs   dx,BYTE PTR ds:[rsi]
   14000a0a6:	addr32 gs rex jae 0x14000a11f
   14000a0ab:	fs rex
   14000a0ad:	add    BYTE PTR [rax],al
   14000a0b0:	nop
   14000a0b1:	jne    0x14000a0b3
   14000a0b3:	rex add DWORD PTR [rax],eax
	...
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	cs (bad) 
   14000a0c2:	push   r14
   14000a0c4:	(bad)
   14000a0c9:	ins    BYTE PTR es:[rdi],dx
   14000a0ca:	ins    BYTE PTR es:[rdi],dx
   14000a0cb:	outs   dx,DWORD PTR ds:[rsi]
   14000a0cc:	movsxd eax,DWORD PTR [rax+0x73]
   14000a0cf:	je     0x14000a135
   14000a0d1:	rex
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d5:	add    BYTE PTR [rax],al
   14000a0d7:	add    BYTE PTR [rax+0x1400075],dl
	...
   14000a0e5:	add    BYTE PTR [rax],al
   14000a0e7:	add    BYTE PTR [rsi],ch
   14000a0e9:	(bad)  
   14000a0ea:	push   r14
   14000a0ec:	gs js  0x14000a152
   14000a0ef:	gs jo  0x14000a166
   14000a0f2:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	push   0xffffffff86000010
   14000b005:	adc    BYTE PTR [rax],al
   14000b007:	add    BYTE PTR [rax],dl
   14000b009:	(bad)  
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	mov    WORD PTR [rax],ss
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	rcl    BYTE PTR [rax],0x0
   14000b013:	add    BYTE PTR [rax],bl
   14000b015:	(bad)  
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	enter  0x10,0x0
   14000b01c:	cmp    eax,0x20000011
   14000b021:	(bad)  
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	adc    DWORD PTR [rax],r8d
   14000b027:	add    ch,ch
   14000b029:	adc    DWORD PTR [rax],eax
   14000b02b:	add    BYTE PTR [rax],ch
   14000b02d:	(bad)  
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	add    BYTE PTR [rdx],dl
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	jg     0x14000b048
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	xor    BYTE PTR [rdx+0x12880000],al
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	movabs ds:0xb000008240000017,eax
   14000b049:	(bad)  
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	push   rax
   14000b04d:	sbb    BYTE PTR [rax],al
   14000b04f:	add    al,dh
   14000b051:	(bad)  
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	(bad)  
   14000b055:	sbb    BYTE PTR [rax],al
   14000b057:	add    ah,bh
   14000b059:	sbb    BYTE PTR [rax],al
   14000b05b:	add    al,dh
   14000b05d:	(bad)  
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	adc    BYTE PTR [rcx],bl
   14000b062:	add    BYTE PTR [rax],al
   14000b064:	pop    rbx
   14000b065:	sbb    DWORD PTR [rax],eax
   14000b067:	add    BYTE PTR [rbx+rax*4],al
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	jo     0x14000b087
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	(bad)
   14000b073:	add    BYTE PTR [rbx+rax*4],al
   14000b076:	add    BYTE PTR [rax],al
   14000b078:	lock sbb DWORD PTR [rax],eax
   14000b07b:	add    BYTE PTR [rax],dh
   14000b07d:	sbb    al,BYTE PTR [rax]
   14000b07f:	add    BYTE PTR [rax],bl
   14000b081:	(bad)  
   14000b082:	add    BYTE PTR [rax],al
   14000b084:	cmp    BYTE PTR [rdx],bl
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	jae    0x14000b0a4
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	sbb    BYTE PTR [rdx+0x1a7c0000],al
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	js     0x14000b0b1
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	or     al,0x83
   14000b09a:	add    BYTE PTR [rax],al
   14000b09c:	sbb    BYTE PTR [rbx],0x0
   14000b09f:	add    BYTE PTR [rdi+0x1c00001b],ch
   14000b0a5:	add    DWORD PTR [rax],0x0
   14000b0a8:	mov    eax,0xcd00001b
   14000b0ad:	sbb    al,0x0
   14000b0af:	add    BYTE PTR [rax],ch
   14000b0b1:	add    DWORD PTR [rax],0x0
   14000b0b4:	(bad)  
   14000b0b5:	sbb    al,0x0
   14000b0b7:	add    BYTE PTR [rdi],ah
   14000b0b9:	and    BYTE PTR [rax],al
   14000b0bb:	add    BYTE PTR [rax-0x7d],dh
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	xor    BYTE PTR [rax],ah
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	push   rax
   14000b0c5:	and    DWORD PTR [rax],eax
   14000b0c7:	add    al,dh
   14000b0c9:	(bad)  
   14000b0ca:	add    BYTE PTR [rax],al
   14000b0cc:	pop    rax
   14000b0cd:	and    DWORD PTR [rax],eax
   14000b0cf:	add    BYTE PTR [rbp-0x77ffffdd],dh
   14000b0d5:	add    DWORD PTR [rax],0x0
   14000b0d8:	shl    BYTE PTR [rbx],0x0
   14000b0db:	add    BYTE PTR [rcx+0x10000024],cl
   14000b0e1:	(bad)  
   14000b0e2:	add    BYTE PTR [rax],al
   14000b0e4:	nop
   14000b0e5:	and    al,0x0
   14000b0e7:	add    BYTE PTR [rsi+riz*1+0x0],dh
   14000b0eb:	add    BYTE PTR [rax+0x7c000083],ah
   14000b0f1:	add    BYTE PTR es:[rax],al
   14000b0f4:	mul    DWORD PTR [rsi]
   14000b0f6:	add    BYTE PTR [rax],al
   14000b0f8:	lock (bad) 
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	add    BYTE PTR [rdi],ah
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	sub    QWORD PTR [rax],rax
   14000b103:	add    BYTE PTR [rax-0x7c],dl
   14000b106:	add    BYTE PTR [rax],al
   14000b108:	push   rax
   14000b109:	sub    DWORD PTR [rax],eax
   14000b10b:	add    BYTE PTR [rax-0x17ffffd6],al
   14000b111:	test   BYTE PTR [rax],al
   14000b113:	add    BYTE PTR [rax+0x7500002a],dl
   14000b119:	sub    eax,DWORD PTR [rax]
   14000b11b:	add    BYTE PTR [rax],dh
   14000b11d:	(bad)  
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	sub    BYTE PTR [rbx],0x0
   14000b123:	add    BYTE PTR [rip+0xfffffffff800002d],dl        # 0x13800b156
   14000b129:	test   BYTE PTR [rax],al
   14000b12b:	add    BYTE PTR [rbp*1+0x2f4b0000],bl
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	adc    BYTE PTR [rbp+0x2f600000],al
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b13d:	(bad)  
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	sub    al,0x85
   14000b142:	add    BYTE PTR [rax],al
   14000b144:	mov    al,0x2f
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	cdq    
   14000b149:	xor    DWORD PTR [rax],eax
   14000b14b:	add    BYTE PTR [rax*4+0x31a00000],dh
   14000b152:	add    BYTE PTR [rax],al
   14000b154:	(bad)  
   14000b155:	xor    eax,DWORD PTR [rax]
   14000b157:	add    BYTE PTR [rax-0x7b],dl
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	lock xor eax,DWORD PTR [rax]
   14000b15f:	add    BYTE PTR [rdx+0x35],cl
   14000b162:	add    BYTE PTR [rax],al
   14000b164:	or     al,0x83
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	push   rax
   14000b169:	xor    eax,0x35990000
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	sbb    al,0x83
   14000b172:	add    BYTE PTR [rax],al
   14000b174:	mov    al,0x35
   14000b176:	add    BYTE PTR [rax],al
   14000b178:	sub    eax,0x68000036
   14000b17d:	test   DWORD PTR [rax],eax
   14000b17f:	add    BYTE PTR [rax+0x36],dl
   14000b182:	add    BYTE PTR [rax],al
   14000b184:	(bad)  
   14000b185:	add    BYTE PTR ss:[rax],al
   14000b188:	sub    al,0x85
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	push   0x2000036
   14000b191:	(bad)  
   14000b192:	add    BYTE PTR [rax],al
   14000b194:	xor    BYTE PTR [rdx+0x37080000],al
   14000b19a:	add    BYTE PTR [rax],al
   14000b19c:	sbb    BYTE PTR [rax],bh
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	loopne 0x14000b127
   14000b1a2:	add    BYTE PTR [rax],al
   14000b1a4:	and    BYTE PTR [rax],bh
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	xor    DWORD PTR [rax],edi
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	sub    al,0x85
   14000b1ae:	add    BYTE PTR [rax],al
   14000b1b0:	cmp    BYTE PTR [rax],bh
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	cmp    BYTE PTR gs:[rax],al
   14000b1b7:	add    al,bh
   14000b1b9:	test   DWORD PTR [rax],eax
   14000b1bb:	add    BYTE PTR [rax-0x35ffffc8],dl
   14000b1c1:	cmp    BYTE PTR [rax],al
   14000b1c3:	add    BYTE PTR [rbx+rax*4],bl
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	sar    BYTE PTR [rax],1
   14000b1ca:	add    BYTE PTR [rax],al
   14000b1cc:	repnz cmp BYTE PTR [rax],al
   14000b1cf:	add    BYTE PTR [rbx+rax*4],al
   14000b1d2:	add    BYTE PTR [rax],al
   14000b1d4:	clc    
   14000b1d5:	cmp    BYTE PTR [rax],al
   14000b1d7:	add    BYTE PTR [rdx+rdi*1],ch
   14000b1da:	add    BYTE PTR [rax],al
   14000b1dc:	add    BYTE PTR [rsi+0x3a340000],al
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	cmp    eax,DWORD PTR fs:[rax]
   14000b1e7:	add    al,ah
   14000b1e9:	xchg   BYTE PTR [rax],al
   14000b1eb:	add    BYTE PTR [rbx+rdi*1+0x0],ch
   14000b1ef:	add    bl,dl
   14000b1f1:	cmp    eax,DWORD PTR [rax]
   14000b1f3:	add    al,dh
   14000b1f5:	(bad)  
   14000b1f6:	add    BYTE PTR [rax],al
   14000b1f8:	fdivr  QWORD PTR [rbx]
   14000b1fa:	add    BYTE PTR [rax],al
   14000b1fc:	(bad)  
   14000b1fd:	cmp    eax,0x86f80000
   14000b202:	add    BYTE PTR [rax],al
   14000b204:	push   0xffffffffc800003d
   14000b209:	add    BYTE PTR ds:[rax],al
   14000b20c:	jo     0x14000b195
   14000b20e:	add    BYTE PTR [rax],al
   14000b210:	sar    BYTE PTR [rsi],1
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	push   rcx
   14000b215:	(bad)  
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	xor    BYTE PTR [rdx+0x3f580000],al
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	pop    QWORD PTR [rax+0x0]
   14000b223:	add    BYTE PTR [rax-0x67ffff79],dl
   14000b229:	add    BYTE PTR [rax],al
   14000b22c:	rol    DWORD PTR [rdx+0x0],cl
   14000b22f:	add    BYTE PTR [rax-0x13ffff79],ch
   14000b235:	rex.X add BYTE PTR [rax],al
   14000b238:	push   rcx
   14000b239:	rex.XB add BYTE PTR [r8],al
   14000b23c:	enter  0x87,0x0
   14000b240:	pop    rax
   14000b241:	rex.XB add BYTE PTR [r8],al
   14000b244:	mov    DWORD PTR [rbx+0x0],eax
   14000b247:	add    BYTE PTR [rbx+rax*4],al
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	nop
   14000b24d:	rex.XB add BYTE PTR [r8],al
   14000b250:	(bad)  
   14000b251:	rex.XB add BYTE PTR [r8],al
   14000b254:	add    al,0x83
   14000b256:	add    BYTE PTR [rax],al
   14000b258:	fadd   QWORD PTR [rbx+0x0]
   14000b25b:	add    cl,dh
   14000b25d:	add    BYTE PTR [rax],r8b
   14000b260:	rol    BYTE PTR [rdi+0x44f80000],1
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	fadd   QWORD PTR [rbp+0x0]
   14000b26b:	add    ah,ah
   14000b26d:	xchg   DWORD PTR [rax],eax
   14000b26f:	add    ah,ah
   14000b271:	add    BYTE PTR [r8],r8b
   14000b274:	test   eax,0xf8000046
   14000b279:	xchg   DWORD PTR [rax],eax
   14000b27b:	add    BYTE PTR [rax+0x2a000046],dh
   14000b281:	rex.RXB add BYTE PTR [r8],r8b
   14000b284:	sbb    al,0x83
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	xor    BYTE PTR [rdi+0x0],al
   14000b28b:	add    BYTE PTR [rdi+0x48],ah
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	or     al,0x88
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	jo     0x14000b2de
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	movabs ds:0xac00008824000049,eax
   14000b2a1:	rex.WB add BYTE PTR [r8],al
   14000b2a4:	lock rex.WX add BYTE PTR [rax],al
   14000b2a8:	cmp    BYTE PTR [rax+0x4af80000],cl
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	out    0x4c,eax
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	push   rax
   14000b2b5:	mov    BYTE PTR [rax],al
   14000b2b7:	add    al,dh
   14000b2b9:	rex.WR add BYTE PTR [rax],r8b
   14000b2bc:	rex.X
   14000b2bd:	rex.WRB add BYTE PTR [r8],r8b
   14000b2c0:	add    al,0x83
   14000b2c2:	add    BYTE PTR [rax],al
   14000b2c4:	rex.W
   14000b2c5:	rex.WRB add BYTE PTR [r8],r8b
   14000b2c8:	push   rcx
   14000b2c9:	rex.WRX add BYTE PTR [rax],r8b
   14000b2cc:	or     al,0x83
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	(bad)  
   14000b2d1:	rex.WRX add BYTE PTR [rax],r8b
   14000b2d4:	or     dl,BYTE PTR [rax+0x0]
   14000b2d7:	add    BYTE PTR [rax+rcx*4+0x0],dh
   14000b2db:	add    BYTE PTR [rax],dl
   14000b2dd:	push   rax
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	cmp    edx,DWORD PTR [rcx+0x0]
   14000b2e3:	add    al,dh
   14000b2e5:	(bad)  
   14000b2e6:	add    BYTE PTR [rax],al
   14000b2e8:	rex.R push rcx
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	jo     0x14000b33f
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	xchg   esp,eax
   14000b2f1:	mov    BYTE PTR [rax],al
   14000b2f3:	add    BYTE PTR [rax+0x51],bh
   14000b2f6:	add    BYTE PTR [rax],al
   14000b2f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b2f9:	push   rcx
   14000b2fa:	add    BYTE PTR [rax],al
   14000b2fc:	add    al,0x83
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	lods   al,BYTE PTR ds:[rsi]
   14000b301:	push   rcx
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	cmp    al,0x52
   14000b306:	add    BYTE PTR [rax],al
   14000b308:	pushf  
   14000b309:	mov    BYTE PTR [rax],al
   14000b30b:	add    BYTE PTR [rdx+rdx*2+0x0],al
   14000b30f:	add    BYTE PTR [rdx+rdx*2+0x0],bl
   14000b313:	add    BYTE PTR [rax+rcx*4+0x52640000],ah
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	test   DWORD PTR [rdx+0x0],edx
   14000b31f:	add    BYTE PTR [rbx+rax*4],al
   14000b322:	add    BYTE PTR [rax],al
   14000b324:	mov    WORD PTR [rdx+0x0],ss
   14000b327:	add    BYTE PTR [rbx-0x53ffffae],bh
   14000b32d:	mov    BYTE PTR [rax],al
   14000b32f:	add    al,dl
   14000b331:	push   rdx
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	call   QWORD PTR [rdx+0x0]
   14000b337:	add    BYTE PTR [rbx+rax*4],bl
   14000b33a:	add    BYTE PTR [rax],al
   14000b33c:	or     BYTE PTR [rbx+0x0],dl
   14000b33f:	add    BYTE PTR [rbx],ch
   14000b341:	push   rbx
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	and    BYTE PTR [rdx+0x53340000],al
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	push   rdi
   14000b34d:	push   rbx
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	and    BYTE PTR [rdx+0x53600000],al
   14000b356:	add    BYTE PTR [rax],al
   14000b358:	(bad)  
   14000b359:	push   rsp
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	sub    al,0x85
   14000b35e:	add    BYTE PTR [rax],al
   14000b360:	rex push rsp
   14000b362:	add    BYTE PTR [rax],al
   14000b364:	mov    DWORD PTR [rax+rax*1+0x0],edx
   14000b368:	adc    BYTE PTR [rdx+0x54900000],al
   14000b36e:	add    BYTE PTR [rax],al
   14000b370:	(bad)  
   14000b371:	push   rsi
   14000b372:	add    BYTE PTR [rax],al
   14000b374:	mov    ah,0x88
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	jo     0x14000b3d0
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	(bad)  
   14000b37d:	push   rsi
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	sub    al,0x85
   14000b382:	add    BYTE PTR [rax],al
   14000b384:	movabs al,ds:0xe8000056be000056
   14000b38d:	mov    BYTE PTR [rax],al
   14000b38f:	add    al,dl
   14000b391:	push   rsi
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	add    BYTE PTR [rdi+0x0],dl
   14000b397:	add    BYTE PTR [rbx+rax*4],bl
   14000b39a:	add    BYTE PTR [rax],al
   14000b39c:	push   rsp
   14000b39d:	push   rdi
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	jae    0x14000b3f9
   14000b3a2:	add    BYTE PTR [rax],al
   14000b3a4:	in     al,dx
   14000b3a5:	mov    BYTE PTR [rax],al
   14000b3a7:	add    BYTE PTR [rdi+rdx*2+0x0],bh
   14000b3ab:	add    BYTE PTR [rdx],bl
   14000b3ad:	pop    rax
   14000b3ae:	add    BYTE PTR [rax],al
   14000b3b0:	push   0x20000089
   14000b3b5:	pop    rax
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	(bad)  
   14000b3b9:	pop    rax
   14000b3ba:	add    BYTE PTR [rax],al
   14000b3bc:	sub    al,0x85
   14000b3be:	add    BYTE PTR [rax],al
   14000b3c0:	jo     0x14000b41a
   14000b3c2:	add    BYTE PTR [rax],al
   14000b3c4:	test   eax,0x2c000058
   14000b3c9:	test   DWORD PTR [rax],eax
   14000b3cb:	add    BYTE PTR [rax-0x37ffffa8],dh
   14000b3d1:	pop    rax
   14000b3d2:	add    BYTE PTR [rax],al
   14000b3d4:	sub    al,0x85
   14000b3d6:	add    BYTE PTR [rax],al
   14000b3d8:	fcomp  QWORD PTR [rax+0x0]
   14000b3db:	add    BYTE PTR [rax],dh
   14000b3dd:	pop    rcx
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	xchg   esp,eax
   14000b3e1:	mov    DWORD PTR [rax],eax
   14000b3e3:	add    BYTE PTR [rax],bh
   14000b3e5:	pop    rcx
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	jge    0x14000b443
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	add    al,0x83
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	lock pop rcx
   14000b3f2:	add    BYTE PTR [rax],al
   14000b3f4:	cmp    eax,0xb400005a
   14000b3f9:	mov    DWORD PTR [rax],eax
   14000b3fb:	add    BYTE PTR [rdx+rbx*2+0x5b540000],al
   14000b402:	add    BYTE PTR [rax],al
   14000b404:	fmul   DWORD PTR [rcx+0x5b8c0000]
   14000b40a:	add    BYTE PTR [rax],al
   14000b40c:	rcr    BYTE PTR [rbx+0x0],0x0
   14000b410:	add    al,0x83
   14000b412:	add    BYTE PTR [rax],al
   14000b414:	rcr    BYTE PTR [rbx+0x0],1
   14000b417:	add    BYTE PTR [rcx+0x5d],al
   14000b41a:	add    BYTE PTR [rax],al
   14000b41c:	in     al,0x89
   14000b41e:	add    BYTE PTR [rax],al
   14000b420:	int3   
   14000b421:	pop    rbp
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	jmp    0x16c00b486
   14000b429:	test   DWORD PTR [rax],eax
   14000b42b:	add    al,dh
   14000b42d:	pop    rbp
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	push   rbx
   14000b431:	pop    rsi
   14000b432:	add    BYTE PTR [rax],al
   14000b434:	add    al,0x83
   14000b436:	add    BYTE PTR [rax],al
   14000b438:	pop    rsp
   14000b439:	pop    rsi
   14000b43a:	add    BYTE PTR [rax],al
   14000b43c:	jmp    0x14000b49c
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	loopne 0x14000b3c8
   14000b442:	add    BYTE PTR [rax],al
   14000b444:	and    BYTE PTR [rdi+0x0],bl
   14000b447:	add    BYTE PTR [rdx],ah
   14000b449:	pop    rdi
   14000b44a:	add    BYTE PTR [rax],al
   14000b44c:	lock mov DWORD PTR [rax],eax
   14000b44f:	add    BYTE PTR [rdx+0x5f],al
   14000b452:	add    BYTE PTR [rax],al
   14000b454:	xchg   esi,eax
   14000b455:	pop    rdi
   14000b456:	add    BYTE PTR [rax],al
   14000b458:	loopne 0x14000b3dc
   14000b45a:	add    BYTE PTR [rax],al
   14000b45c:	(bad)  
   14000b45d:	pop    rdi
   14000b45e:	add    BYTE PTR [rax],al
   14000b460:	and    eax,0x40000060
   14000b465:	test   BYTE PTR [rax],al
   14000b467:	add    BYTE PTR [rbx],ch
   14000b469:	(bad)  
   14000b46a:	add    BYTE PTR [rax],al
   14000b46c:	jl     0x14000b4ce
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	fadd   DWORD PTR [rax+rax*1+0x608200]
   14000b477:	add    BYTE PTR [rdx-0x2fffffa0],ah
   14000b47d:	test   DWORD PTR [rax],eax
   14000b47f:	add    BYTE PTR [rax+0x15000060],ch
   14000b485:	(bad)  
   14000b486:	add    BYTE PTR [rax],al
   14000b488:	rol    BYTE PTR [rsi+0x61150000],1
   14000b48e:	add    BYTE PTR [rax],al
   14000b490:	cmp    eax,0xd0000061
   14000b495:	xchg   BYTE PTR [rax],al
   14000b497:	add    BYTE PTR [rbx+0x61],al
   14000b49a:	add    BYTE PTR [rax],al
   14000b49c:	pop    rsi
   14000b49d:	(bad)  
   14000b49e:	add    BYTE PTR [rax],al
   14000b4a0:	(bad)  
   14000b4a1:	xchg   DWORD PTR [rax],eax
   14000b4a3:	add    BYTE PTR [rcx+riz*2+0x0],ah
   14000b4a7:	add    BYTE PTR [rdx-0x73ffff9f],al
   14000b4ad:	mov    DWORD PTR [rax],eax
   14000b4af:	add    BYTE PTR [rax-0x57ffff9f],cl
   14000b4b5:	(bad)  
   14000b4b6:	add    BYTE PTR [rax],al
   14000b4b8:	pop    rax
   14000b4b9:	mov    DWORD PTR [rax],eax
   14000b4bb:	add    BYTE PTR [rsi-0x36ffff9f],ch
   14000b4c1:	(bad)  
   14000b4c2:	add    BYTE PTR [rax],al
   14000b4c4:	mov    WORD PTR [rcx+0x61d00000],cs
   14000b4ca:	add    BYTE PTR [rax],al
   14000b4cc:	lock (bad) 
   14000b4ce:	add    BYTE PTR [rax],al
   14000b4d0:	mov    WORD PTR [rcx+0x62000000],cs
   14000b4d6:	add    BYTE PTR [rax],al
   14000b4d8:	adc    eax,0x2c000062
   14000b4dd:	test   DWORD PTR [rax],eax
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    al,BYTE PTR [rax]
   14000c010:	adc    BYTE PTR [rax],al
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	and    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax+0x18],al
   14000c01c:	cmp    BYTE PTR [rax],al
   14000c01e:	add    BYTE PTR [rax+0x0],al
	...
   14000c02c:	add    BYTE PTR [rax],al
   14000c02e:	add    DWORD PTR [rax],eax
   14000c030:	add    DWORD PTR [rax],eax
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	push   rax
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rax],0x0
	...
   14000c046:	add    DWORD PTR [rax],eax
   14000c048:	add    DWORD PTR [rax],eax
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	push   0x800000
	...
   14000c05d:	add    BYTE PTR [rcx],al
   14000c05f:	add    BYTE PTR [rcx],cl
   14000c061:	add    al,0x0
   14000c063:	add    BYTE PTR [rax+0x0],al
	...
   14000c075:	add    BYTE PTR [rcx],al
   14000c077:	add    BYTE PTR [rcx],cl
   14000c079:	add    al,0x0
   14000c07b:	add    BYTE PTR [rax+0x38000000],dl
   14000c081:	ret    
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	xchg   esp,eax
   14000c085:	add    eax,DWORD PTR [rax]
	...
   14000c08f:	add    BYTE PTR [rax-0x6cffff40],ah
   14000c095:	add    al,BYTE PTR [rax]
	...
   14000c09f:	add    BYTE PTR [rdi+rdi*1],bh
   14000c0a2:	js     0x14000c111
   14000c0a4:	ins    BYTE PTR es:[rdi],dx
   14000c0a5:	and    BYTE PTR [rsi+0x65],dh
   14000c0a8:	jb     0x14000c11d
   14000c0aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c0b1:	xor    BYTE PTR [rdx],ah
   14000c0b3:	and    BYTE PTR [rbp+0x6e],ah
   14000c0b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c0b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c0c0:	rex.RX sub eax,0x73202238
   14000c0c6:	je     0x14000c129
   14000c0c8:	outs   dx,BYTE PTR ds:[rsi]
   14000c0c9:	fs (bad) 
   14000c0cb:	ins    BYTE PTR es:[rdi],dx
   14000c0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000c0cd:	outs   dx,BYTE PTR ds:[rsi]
   14000c0ce:	gs cmp eax,0x73657922
   14000c0d4:	and    bh,BYTE PTR [rdi]
   14000c0d6:	ds or  eax,0x2d213c0a
   14000c0dc:	sub    eax,0x706f4320
   14000c0e1:	jns    0x14000c155
   14000c0e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c0ea:	sub    DWORD PTR [rax],esp
   14000c0ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c0f4:	je     0x14000c116
   14000c0f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c0f8:	jb     0x14000c16a
   14000c0fa:	outs   dx,DWORD PTR ds:[rsi]
   14000c0fb:	jb     0x14000c15e
   14000c0fd:	je     0x14000c168
   14000c0ff:	outs   dx,DWORD PTR ds:[rsi]
   14000c100:	outs   dx,BYTE PTR ds:[rsi]
   14000c101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0dff34
   14000c107:	cmp    al,0x61
   14000c109:	jae    0x14000c17e
   14000c10b:	gs ins DWORD PTR es:[rdi],dx
   14000c10d:	(bad)  
   14000c10e:	ins    BYTE PTR es:[rdi],dx
   14000c10f:	jns    0x14000c131
   14000c111:	js     0x14000c180
   14000c113:	ins    BYTE PTR es:[rdi],dx
   14000c114:	outs   dx,BYTE PTR ds:[rsi]
   14000c115:	jae    0x14000c154
   14000c117:	and    dh,BYTE PTR [rbp+0x72]
   14000c11a:	outs   dx,BYTE PTR ds:[rsi]
   14000c11b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c11e:	push   0x73616d65
   14000c123:	sub    eax,0x7263696d
   14000c128:	outs   dx,DWORD PTR ds:[rsi]
   14000c129:	jae    0x14000c19a
   14000c12b:	data16 je 0x14000c15b
   14000c12e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c131:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c134:	ins    DWORD PTR es:[rdi],dx
   14000c135:	cs jbe 0x14000c169
   14000c138:	and    ah,BYTE PTR [rax]
   14000c13a:	and    BYTE PTR [rax+0x6d],bh
   14000c13d:	ins    BYTE PTR es:[rdi],dx
   14000c13e:	outs   dx,BYTE PTR ds:[rsi]
   14000c13f:	jae    0x14000c17b
   14000c141:	(bad)  
   14000c142:	jae    0x14000c1b1
   14000c144:	jbe    0x14000c179
   14000c146:	cmp    eax,0x6e727522
   14000c14b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c14e:	push   0x73616d65
   14000c153:	sub    eax,0x7263696d
   14000c158:	outs   dx,DWORD PTR ds:[rsi]
   14000c159:	jae    0x14000c1ca
   14000c15b:	data16 je 0x14000c18b
   14000c15e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c161:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c164:	ins    DWORD PTR es:[rdi],dx
   14000c165:	cs jbe 0x14000c19b
   14000c168:	and    ah,BYTE PTR [rax]
   14000c16a:	ins    DWORD PTR es:[rdi],dx
   14000c16b:	(bad)  
   14000c16c:	outs   dx,BYTE PTR ds:[rsi]
   14000c16d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c174:	jb     0x14000c1e9
   14000c176:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c17d:	xor    BYTE PTR [rdx],ah
   14000c17f:	ds or  eax,0x73613c0a
   14000c185:	jae    0x14000c1ec
   14000c187:	ins    DWORD PTR es:[rdi],dx
   14000c188:	(bad)  
   14000c189:	ins    BYTE PTR es:[rdi],dx
   14000c18a:	jns    0x14000c1d5
   14000c18c:	fs outs dx,BYTE PTR gs:[rsi]
   14000c18f:	je     0x14000c1fa
   14000c191:	je     0x14000c20c
   14000c193:	or     eax,0x2020200a
   14000c198:	and    BYTE PTR [rsi+0x61],ch
   14000c19b:	ins    DWORD PTR es:[rdi],dx
   14000c19c:	gs cmp eax,0x63694d22
   14000c1a2:	jb     0x14000c213
   14000c1a4:	jae    0x14000c215
   14000c1a6:	data16 je 0x14000c1d7
   14000c1a9:	push   rdi
   14000c1aa:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c1b1:	rex.WRX
   14000c1b2:	gs je  0x14000c1e3
   14000c1b5:	rex.WRX
   14000c1b6:	gs je  0x14000c1fe
   14000c1b9:	jbe    0x14000c22f
   14000c1bb:	rex.RX ja 0x14000c222
   14000c1be:	jb     0x14000c1e2
   14000c1c0:	or     eax,0x2020200a
   14000c1c5:	and    BYTE PTR [rax+0x72],dh
   14000c1c8:	outs   dx,DWORD PTR ds:[rsi]
   14000c1c9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c1cc:	jae    0x14000c23d
   14000c1ce:	jb     0x14000c211
   14000c1d0:	jb     0x14000c235
   14000c1d2:	push   0x63657469
   14000c1d7:	je     0x14000c24e
   14000c1d9:	jb     0x14000c240
   14000c1db:	cmp    eax,0x646d6122
   14000c1e0:	ss xor al,0x22
   14000c1e3:	or     eax,0x2020200a
   14000c1e8:	and    BYTE PTR [rsi+0x65],dh
   14000c1eb:	jb     0x14000c260
   14000c1ed:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000c1f4:	xor    DWORD PTR [rsi],ebp
   14000c1f6:	xor    BYTE PTR [rsi],ch
   14000c1f8:	xor    BYTE PTR [rdx],ah
   14000c1fa:	or     eax,0x2020200a
   14000c1ff:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c203:	gs cmp eax,0x6e697722
   14000c209:	xor    esi,DWORD PTR [rdx]
   14000c20b:	and    ch,BYTE PTR [rdi]
   14000c20d:	ds or  eax,0x65643c0a
   14000c213:	jae    0x14000c278
   14000c215:	jb     0x14000c280
   14000c217:	jo     0x14000c28d
   14000c219:	imul   ebp,DWORD PTR [rdi+0x6e],0x74654e3e
   14000c220:	rex.RB jbe 0x14000c297
   14000c223:	rex.RX ja 0x14000c28a
   14000c226:	jb     0x14000c264
   14000c228:	(bad)  
   14000c229:	fs gs jae 0x14000c290
   14000c22d:	jb     0x14000c298
   14000c22f:	jo     0x14000c2a5
   14000c231:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000c238:	je     0x14000c2ac
   14000c23a:	jne    0x14000c2af
   14000c23c:	je     0x14000c287
   14000c23e:	outs   dx,BYTE PTR ds:[rsi]
   14000c23f:	outs   dx,WORD PTR ds:[rsi]
   14000c241:	and    BYTE PTR [rax+0x6d],bh
   14000c244:	ins    BYTE PTR es:[rdi],dx
   14000c245:	outs   dx,BYTE PTR ds:[rsi]
   14000c246:	jae    0x14000c285
   14000c248:	and    dh,BYTE PTR [rbp+0x72]
   14000c24b:	outs   dx,BYTE PTR ds:[rsi]
   14000c24c:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c24f:	push   0x73616d65
   14000c254:	sub    eax,0x7263696d
   14000c259:	outs   dx,DWORD PTR ds:[rsi]
   14000c25a:	jae    0x14000c2cb
   14000c25c:	data16 je 0x14000c28c
   14000c25f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c262:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c265:	ins    DWORD PTR es:[rdi],dx
   14000c266:	cs jbe 0x14000c29c
   14000c269:	and    bh,BYTE PTR [rsi]
   14000c26b:	or     eax,0x2020200a
   14000c270:	and    BYTE PTR [rbx+rsi*2],bh
   14000c273:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c277:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c27f:	and    BYTE PTR [rax],ah
   14000c281:	and    BYTE PTR [rax],ah
   14000c283:	and    BYTE PTR [rax],ah
   14000c285:	cmp    al,0x72
   14000c287:	gs jno 0x14000c2ff
   14000c28a:	gs jae 0x14000c301
   14000c28d:	gs fs push rax
   14000c290:	jb     0x14000c2fb
   14000c292:	jbe    0x14000c2fd
   14000c294:	ins    BYTE PTR es:[rdi],dx
   14000c295:	gs addr32 gs jae 0x14000c2d8
   14000c29a:	or     eax,0x2020200a
   14000c29f:	and    BYTE PTR [rax],ah
   14000c2a1:	and    BYTE PTR [rax],ah
   14000c2a3:	and    BYTE PTR [rax],ah
   14000c2a5:	and    BYTE PTR [rax],ah
   14000c2a7:	and    BYTE PTR [rdx+rsi*2],bh
   14000c2aa:	gs jno 0x14000c322
   14000c2ad:	gs jae 0x14000c324
   14000c2b0:	gs fs rex.RB js 0x14000c31a
   14000c2b5:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c2b8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c2bf:	ins    BYTE PTR es:[rdi],dx
   14000c2c0:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c2c4:	gs ins BYTE PTR es:[rdi],dx
   14000c2c6:	cmp    eax,0x49736122
   14000c2cb:	outs   dx,BYTE PTR ds:[rsi]
   14000c2cc:	jbe    0x14000c33d
   14000c2ce:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c2d2:	and    BYTE PTR [rbp+0x69],dh
   14000c2d5:	movsxd esp,DWORD PTR [r11+0x65]
   14000c2d9:	jae    0x14000c34e
   14000c2db:	cmp    eax,0x6c616622
   14000c2e0:	jae    0x14000c347
   14000c2e2:	and    ch,BYTE PTR [rdi]
   14000c2e4:	ds or  eax,0x2020200a
   14000c2ea:	and    BYTE PTR [rax],ah
   14000c2ec:	and    BYTE PTR [rax],ah
   14000c2ee:	and    BYTE PTR [rdi+rbp*1],bh
   14000c2f1:	jb     0x14000c358
   14000c2f3:	jno    0x14000c36a
   14000c2f5:	gs jae 0x14000c36c
   14000c2f8:	gs fs push rax
   14000c2fb:	jb     0x14000c366
   14000c2fd:	jbe    0x14000c368
   14000c2ff:	ins    BYTE PTR es:[rdi],dx
   14000c300:	gs addr32 gs jae 0x14000c343
   14000c305:	or     eax,0x2020200a
   14000c30a:	and    BYTE PTR [rdi+rbp*1],bh
   14000c30d:	jae    0x14000c374
   14000c30f:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c312:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000c31a:	je     0x14000c38e
   14000c31c:	jne    0x14000c391
   14000c31e:	je     0x14000c369
   14000c320:	outs   dx,BYTE PTR ds:[rsi]
   14000c321:	outs   dx,WORD PTR ds:[rsi]
   14000c323:	ds or  eax,0x612f3c0a
   14000c329:	jae    0x14000c39e
   14000c32b:	gs ins DWORD PTR es:[rdi],dx
   14000c32d:	(bad)  
   14000c32e:	ins    BYTE PTR es:[rdi],dx
   14000c32f:	jns    0x14000c36f
   14000c331:	or     eax,0xa
   14000c336:	add    BYTE PTR [rax],al
   14000c338:	xchg   esp,eax
   14000c339:	add    esi,DWORD PTR [rax+rax*1]
   14000c33c:	add    BYTE PTR [rax],al
   14000c33e:	push   rsi
   14000c33f:	add    BYTE PTR [rbx+0x0],dl
   14000c342:	pop    rdi
   14000c343:	add    BYTE PTR [rsi+0x0],dl
   14000c346:	add    BYTE PTR [r10+0x0],r10b
   14000c34a:	push   rbx
   14000c34b:	add    BYTE PTR [rcx+0x0],cl
   14000c34e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c352:	pop    rdi
   14000c353:	add    BYTE PTR [rcx+0x0],cl
   14000c356:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c35a:	rex.WRXB add BYTE PTR [r8],r8b
   14000c35d:	add    BYTE PTR [rax],al
   14000c35f:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c365:	add    BYTE PTR [rcx],al
   14000c367:	add    BYTE PTR [rax],al
   14000c369:	add    BYTE PTR [rdx],cl
   14000c36b:	add    BYTE PTR [rax],al
   14000c36d:	add    BYTE PTR [rax],bpl
   14000c370:	add    BYTE PTR [rax],al
   14000c372:	or     al,BYTE PTR [rax]
   14000c374:	add    BYTE PTR [rax+0x0],al
   14000c377:	sub    BYTE PTR [rdi],bh
   14000c379:	add    BYTE PTR [rax],al
   14000c37b:	add    BYTE PTR [rax],al
   14000c37d:	add    BYTE PTR [rax],al
   14000c37f:	add    BYTE PTR [rax+rax*1],al
   14000c382:	add    al,0x0
   14000c384:	add    DWORD PTR [rax],eax
	...
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	repnz add al,BYTE PTR [rax]
   14000c397:	add    BYTE PTR [rcx],al
   14000c399:	add    BYTE PTR [rbx+0x0],dl
   14000c39c:	je     0x14000c39e
   14000c39e:	jb     0x14000c3a0
   14000c3a0:	imul   eax,DWORD PTR [rax],0x67006e
   14000c3a6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c3aa:	ins    BYTE PTR es:[rdi],dx
   14000c3ab:	add    BYTE PTR [rbp+0x0],ah
   14000c3ae:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c3b2:	data16 add BYTE PTR [rdi+0x0],ch
   14000c3b6:	add    BYTE PTR [rax],al
   14000c3b8:	(bad)  
   14000c3b9:	add    al,BYTE PTR [rax]
   14000c3bb:	add    BYTE PTR [rcx],al
   14000c3bd:	add    BYTE PTR [rax],dh
   14000c3bf:	add    BYTE PTR [rax+rax*1],dh
   14000c3c2:	xor    BYTE PTR [rax],al
   14000c3c4:	cmp    DWORD PTR [rax],eax
   14000c3c6:	xor    BYTE PTR [rax],al
   14000c3c8:	xor    al,0x0
   14000c3ca:	rex.X add BYTE PTR [rax],sil
   14000c3cd:	add    BYTE PTR [rax],al
   14000c3cf:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c3d3:	add    BYTE PTR [rcx],al
   14000c3d5:	add    BYTE PTR [rbx+0x0],al
   14000c3d8:	outs   dx,DWORD PTR ds:[rsi]
   14000c3d9:	add    BYTE PTR [rbp+0x0],ch
   14000c3dc:	jo     0x14000c3de
   14000c3de:	(bad)  
   14000c3df:	add    BYTE PTR [rsi+0x0],ch
   14000c3e2:	jns    0x14000c3e4
   14000c3e4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c3e8:	ins    DWORD PTR es:[rdi],dx
   14000c3e9:	add    BYTE PTR [rbp+0x0],ah
   14000c3ec:	add    BYTE PTR [rax],al
   14000c3ee:	add    BYTE PTR [rax],al
   14000c3f0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c3f4:	movsxd eax,DWORD PTR [rax]
   14000c3f6:	jb     0x14000c3f8
   14000c3f8:	outs   dx,DWORD PTR ds:[rsi]
   14000c3f9:	add    BYTE PTR [rbx+0x0],dh
   14000c3fc:	outs   dx,DWORD PTR ds:[rsi]
   14000c3fd:	add    BYTE PTR [rsi+0x0],ah
   14000c400:	je     0x14000c402
   14000c402:	and    BYTE PTR [rax],al
   14000c404:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c408:	jb     0x14000c40a
   14000c40a:	jo     0x14000c40c
   14000c40c:	outs   dx,DWORD PTR ds:[rsi]
   14000c40d:	add    BYTE PTR [rdx+0x0],dh
   14000c410:	(bad)  
   14000c411:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c415:	add    BYTE PTR [rdi+0x0],ch
   14000c418:	outs   dx,BYTE PTR ds:[rsi]
   14000c419:	add    BYTE PTR [rax],al
   14000c41b:	add    BYTE PTR [rax+0x0],cl
   14000c41e:	adc    BYTE PTR [rax],al
   14000c420:	add    DWORD PTR [rax],eax
   14000c422:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c426:	ins    BYTE PTR es:[rdi],dx
   14000c427:	add    BYTE PTR [rbp+0x0],ah
   14000c42a:	add    BYTE PTR [rbp+0x0],r12b
   14000c42e:	jae    0x14000c430
   14000c430:	movsxd eax,DWORD PTR [rax]
   14000c432:	jb     0x14000c434
   14000c434:	imul   eax,DWORD PTR [rax],0x740070
   14000c43a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c440:	add    BYTE PTR [rax],al
   14000c442:	add    BYTE PTR [rax],al
   14000c444:	add    BYTE PTR [r14+0x0],r14b
   14000c448:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c44c:	je     0x14000c44e
   14000c44e:	and    BYTE PTR [rax],al
   14000c450:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000c454:	jb     0x14000c456
   14000c456:	ja     0x14000c458
   14000c458:	(bad)  
   14000c459:	add    BYTE PTR [rdx+0x0],dh
   14000c45c:	add    BYTE PTR fs:[rbp+0x0],ah
   14000c460:	jb     0x14000c462
   14000c462:	add    BYTE PTR [rax],al
   14000c464:	data16 add BYTE PTR [rbx],ah
   14000c467:	add    BYTE PTR [rcx],al
   14000c469:	add    BYTE PTR [rsi+0x0],al
   14000c46c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c472:	push   rsi
   14000c473:	add    BYTE PTR [rbp+0x0],ah
   14000c476:	jb     0x14000c478
   14000c478:	jae    0x14000c47a
   14000c47a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c480:	add    BYTE PTR [rax],al
   14000c482:	add    BYTE PTR [rax],al
   14000c484:	xor    DWORD PTR [rax],eax
   14000c486:	xor    BYTE PTR [rax],al
   14000c488:	add    BYTE PTR cs:[rax],dh
   14000c48b:	add    BYTE PTR [rsi],ch
   14000c48d:	add    BYTE PTR [rcx],dh
   14000c48f:	add    BYTE PTR [rax],dh
   14000c491:	add    BYTE PTR [rdx],dh
   14000c493:	add    BYTE PTR [rax+rax*1],dh
   14000c496:	xor    BYTE PTR [rax],al
   14000c498:	add    BYTE PTR cs:[rcx],dh
   14000c49b:	add    BYTE PTR [rsi],dh
   14000c49d:	add    BYTE PTR [rbx],dh
   14000c49f:	add    BYTE PTR [rax],bh
   14000c4a1:	add    BYTE PTR [rax+rax*1],dh
   14000c4a4:	and    BYTE PTR [rax],al
   14000c4a6:	sub    BYTE PTR [rax],al
   14000c4a8:	je     0x14000c4aa
   14000c4aa:	push   0x2e003100
   14000c4af:	add    BYTE PTR [rcx],dh
   14000c4b1:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f4b7
   14000c4b7:	add    BYTE PTR [rax],dh
   14000c4b9:	add    BYTE PTR [rcx],bh
   14000c4bb:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f5c1
   14000c4c1:	add    BYTE PTR [rax],dh
   14000c4c3:	add    BYTE PTR [rax],dh
   14000c4c5:	add    BYTE PTR [rcx],ch
   14000c4c7:	add    BYTE PTR [rax],al
   14000c4c9:	add    BYTE PTR [rax],al
   14000c4cb:	add    BYTE PTR [rsi],bh
   14000c4cd:	add    BYTE PTR [rdi],cl
   14000c4cf:	add    BYTE PTR [rcx],al
   14000c4d1:	add    BYTE PTR [rcx+0x0],cl
   14000c4d4:	outs   dx,BYTE PTR ds:[rsi]
   14000c4d5:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000c4d9:	add    BYTE PTR [rdx+0x0],dh
   14000c4dc:	outs   dx,BYTE PTR ds:[rsi]
   14000c4dd:	add    BYTE PTR [rcx+0x0],ah
   14000c4e0:	ins    BYTE PTR es:[rdi],dx
   14000c4e1:	add    BYTE PTR [rsi+0x0],cl
   14000c4e4:	(bad)  
   14000c4e5:	add    BYTE PTR [rbp+0x0],ch
   14000c4e8:	add    BYTE PTR gs:[rax],al
   14000c4eb:	add    BYTE PTR [rsi+0x0],cl
   14000c4ee:	add    BYTE PTR gs:[rax+rax*1+0x45],dh
   14000c4f3:	add    BYTE PTR [rsi+0x0],dh
   14000c4f6:	je     0x14000c4f8
   14000c4f8:	rex.RX add BYTE PTR [rdi+0x0],r14b
   14000c4fc:	add    BYTE PTR fs:[rdx+0x0],dh
   14000c500:	add    BYTE PTR cs:[rbp+0x0],al
   14000c504:	pop    rax
   14000c505:	add    BYTE PTR [rbp+0x0],al
   14000c508:	add    BYTE PTR [rax],al
   14000c50a:	add    BYTE PTR [rax],al
   14000c50c:	add    BYTE PTR [rax],0x2e
   14000c50f:	add    BYTE PTR [rcx],al
   14000c511:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c515:	add    BYTE PTR [rdi+0x0],ah
   14000c518:	(bad)  
   14000c519:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c51d:	add    BYTE PTR [rdi+0x0],ch
   14000c520:	jo     0x14000c522
   14000c522:	jns    0x14000c524
   14000c524:	jb     0x14000c526
   14000c526:	imul   eax,DWORD PTR [rax],0x680067
   14000c52c:	je     0x14000c52e
   14000c52e:	add    BYTE PTR [rax],al
   14000c530:	test   eax,0x4d002000
   14000c535:	add    BYTE PTR [rcx+0x0],ch
   14000c538:	movsxd eax,DWORD PTR [rax]
   14000c53a:	jb     0x14000c53c
   14000c53c:	outs   dx,DWORD PTR ds:[rsi]
   14000c53d:	add    BYTE PTR [rbx+0x0],dh
   14000c540:	outs   dx,DWORD PTR ds:[rsi]
   14000c541:	add    BYTE PTR [rsi+0x0],ah
   14000c544:	je     0x14000c546
   14000c546:	and    BYTE PTR [rax],al
   14000c548:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c54c:	jb     0x14000c54e
   14000c54e:	jo     0x14000c550
   14000c550:	outs   dx,DWORD PTR ds:[rsi]
   14000c551:	add    BYTE PTR [rdx+0x0],dh
   14000c554:	(bad)  
   14000c555:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c559:	add    BYTE PTR [rdi+0x0],ch
   14000c55c:	outs   dx,BYTE PTR ds:[rsi]
   14000c55d:	add    BYTE PTR [rsi],ch
   14000c55f:	add    BYTE PTR [rax],ah
   14000c561:	add    BYTE PTR [rcx+0x0],al
   14000c564:	ins    BYTE PTR es:[rdi],dx
   14000c565:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c569:	add    BYTE PTR [rdx+0x0],dh
   14000c56c:	imul   eax,DWORD PTR [rax],0x680067
   14000c572:	je     0x14000c574
   14000c574:	jae    0x14000c576
   14000c576:	and    BYTE PTR [rax],al
   14000c578:	jb     0x14000c57a
   14000c57a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c57e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c582:	jbe    0x14000c584
   14000c584:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c589:	add    BYTE PTR [rax],al
   14000c58b:	add    BYTE PTR [rsi+0x0],al
   14000c58e:	sldt   WORD PTR [rcx]
   14000c591:	add    BYTE PTR [rdi+0x0],cl
   14000c594:	jb     0x14000c596
   14000c596:	imul   eax,DWORD PTR [rax],0x690067
   14000c59c:	outs   dx,BYTE PTR ds:[rsi]
   14000c59d:	add    BYTE PTR [rcx+0x0],ah
   14000c5a0:	ins    BYTE PTR es:[rdi],dx
   14000c5a1:	add    BYTE PTR [rsi+0x0],al
   14000c5a4:	imul   eax,DWORD PTR [rax],0x65006c
   14000c5aa:	outs   dx,BYTE PTR ds:[rsi]
   14000c5ab:	add    BYTE PTR [rcx+0x0],ah
   14000c5ae:	ins    DWORD PTR es:[rdi],dx
   14000c5af:	add    BYTE PTR [rbp+0x0],ah
   14000c5b2:	add    BYTE PTR [rax],al
   14000c5b4:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   14000c5b8:	je     0x14000c5ba
   14000c5ba:	add    BYTE PTR [r14+0x0],r14b
   14000c5be:	je     0x14000c5c0
   14000c5c0:	rex.RX add BYTE PTR [rdi+0x0],r14b
   14000c5c4:	add    BYTE PTR fs:[rdx+0x0],dh
   14000c5c8:	add    BYTE PTR cs:[rbp+0x0],al
   14000c5cc:	pop    rax
   14000c5cd:	add    BYTE PTR [rbp+0x0],al
   14000c5d0:	add    BYTE PTR [rax],al
   14000c5d2:	add    BYTE PTR [rax],al
   14000c5d4:	push   0x0
   14000c5d6:	and    eax,0x50000100
   14000c5db:	add    BYTE PTR [rdx+0x0],dh
   14000c5de:	outs   dx,DWORD PTR ds:[rsi]
   14000c5df:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c5e3:	add    BYTE PTR [rbx+0x0],ah
   14000c5e6:	je     0x14000c5e8
   14000c5e8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c5ec:	ins    DWORD PTR es:[rdi],dx
   14000c5ed:	add    BYTE PTR [rbp+0x0],ah
   14000c5f0:	add    BYTE PTR [rax],al
   14000c5f2:	add    BYTE PTR [rax],al
   14000c5f4:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c5f8:	movsxd eax,DWORD PTR [rax]
   14000c5fa:	jb     0x14000c5fc
   14000c5fc:	outs   dx,DWORD PTR ds:[rsi]
   14000c5fd:	add    BYTE PTR [rbx+0x0],dh
   14000c600:	outs   dx,DWORD PTR ds:[rsi]
   14000c601:	add    BYTE PTR [rsi+0x0],ah
   14000c604:	je     0x14000c606
   14000c606:	scas   al,BYTE PTR es:[rdi]
   14000c607:	add    BYTE PTR [rax],ah
   14000c609:	add    BYTE PTR [rdi+0x0],dl
   14000c60c:	imul   eax,DWORD PTR [rax],0x64006e
   14000c612:	outs   dx,DWORD PTR ds:[rsi]
   14000c613:	add    BYTE PTR [rdi+0x0],dh
   14000c616:	jae    0x14000c618
   14000c618:	scas   al,BYTE PTR es:[rdi]
   14000c619:	add    BYTE PTR [rax],ah
   14000c61b:	add    BYTE PTR [rdi+0x0],cl
   14000c61e:	jo     0x14000c620
   14000c620:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c624:	(bad)  
   14000c625:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c629:	add    BYTE PTR [rsi+0x0],ch
   14000c62c:	add    BYTE PTR [eax],ah
   14000c62f:	add    BYTE PTR [rbx+0x0],dl
   14000c632:	jns    0x14000c634
   14000c634:	jae    0x14000c636
   14000c636:	je     0x14000c638
   14000c638:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c63c:	add    BYTE PTR [rax],al
   14000c63e:	add    BYTE PTR [rax],al
   14000c640:	rex.RX add BYTE PTR [rcx],r10b
   14000c643:	add    BYTE PTR [rcx],al
   14000c645:	add    BYTE PTR [rax+0x0],dl
   14000c648:	jb     0x14000c64a
   14000c64a:	outs   dx,DWORD PTR ds:[rsi]
   14000c64b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c64f:	add    BYTE PTR [rbx+0x0],ah
   14000c652:	je     0x14000c654
   14000c654:	push   rsi
   14000c655:	add    BYTE PTR [rbp+0x0],ah
   14000c658:	jb     0x14000c65a
   14000c65a:	jae    0x14000c65c
   14000c65c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c662:	add    BYTE PTR [rax],al
   14000c664:	xor    DWORD PTR [rax],eax
   14000c666:	xor    BYTE PTR [rax],al
   14000c668:	add    BYTE PTR cs:[rax],dh
   14000c66b:	add    BYTE PTR [rsi],ch
   14000c66d:	add    BYTE PTR [rcx],dh
   14000c66f:	add    BYTE PTR [rax],dh
   14000c671:	add    BYTE PTR [rdx],dh
   14000c673:	add    BYTE PTR [rax+rax*1],dh
   14000c676:	xor    BYTE PTR [rax],al
   14000c678:	add    BYTE PTR cs:[rcx],dh
   14000c67b:	add    BYTE PTR [rsi],dh
   14000c67d:	add    BYTE PTR [rbx],dh
   14000c67f:	add    BYTE PTR [rax],bh
   14000c681:	add    BYTE PTR [rax+rax*1],dh
   14000c684:	add    BYTE PTR [rax],al
   14000c686:	add    BYTE PTR [rax],al
   14000c688:	add    BYTE PTR [rax],r8b
   14000c68b:	add    BYTE PTR [rcx],al
   14000c68d:	add    BYTE PTR [rsi+0x0],dl
   14000c690:	(bad)  
   14000c691:	add    BYTE PTR [rdx+0x0],dh
   14000c694:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c698:	ins    BYTE PTR es:[rdi],dx
   14000c699:	add    BYTE PTR [rbp+0x0],ah
   14000c69c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c6a0:	data16 add BYTE PTR [rdi+0x0],ch
   14000c6a4:	add    BYTE PTR [rax],al
   14000c6a6:	add    BYTE PTR [rax],al
   14000c6a8:	and    al,0x0
   14000c6aa:	add    al,0x0
   14000c6ac:	add    BYTE PTR [rax],al
   14000c6ae:	push   rsp
   14000c6af:	add    BYTE PTR [rdx+0x0],dh
   14000c6b2:	(bad)  
   14000c6b3:	add    BYTE PTR [rsi+0x0],ch
   14000c6b6:	jae    0x14000c6b8
   14000c6b8:	ins    BYTE PTR es:[rdi],dx
   14000c6b9:	add    BYTE PTR [rcx+0x0],ah
   14000c6bc:	je     0x14000c6be
   14000c6be:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c6c4:	add    BYTE PTR [rax],al
   14000c6c6:	add    BYTE PTR [rax],al
   14000c6c8:	or     DWORD PTR [rax+rsi*4],eax
   14000c6cb:	add    al,0x0
   14000c6cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],dh
   14000d003:	add    BYTE PTR [rax-0x80000000],cl
   14000d009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d00a:	mov    BYTE PTR [rax+rbx*4-0x575b5f5c],ah
   14000d011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d012:	shl    BYTE PTR [rax+rcx*8-0x775a7f5c],0xa5
   14000d01a:	nop
   14000d01b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d01c:	shl    BYTE PTR [rbp-0x5a2f5a38],0xd8
   14000d023:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d024:	loopne 0x14000cfcb
   14000d026:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d028:	clc    
   14000d029:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d02a:	add    BYTE PTR [rsi-0x59cf59f0],ah
   14000d030:	js     0x14000cfd8
   14000d032:	mov    BYTE PTR [rsi-0x59675970],ah
   14000d038:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14000d041:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d042:	cmp    BYTE PTR [rdi-0x58b758c0],ah
   14000d048:	push   rax
   14000d049:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d04a:	mov    BYTE PTR [rdi-0x58375868],ah
   14000d050:	fsub   DWORD PTR [rdi-0x58175820]
   14000d056:	adc    BYTE PTR [rax-0x57cf57e0],ch
   14000d05c:	jo     0x14000d006
   14000d05e:	sub    BYTE PTR [rax-0x57375770],0x8
   14000d065:	test   eax,0xa928a918
   14000d06a:	pop    rax
   14000d06b:	test   eax,0xaa58aa50
   14000d070:	(bad)  
   14000d071:	stos   BYTE PTR es:[rdi],al
   14000d072:	push   0xffffffff88aa78aa
   14000d077:	stos   BYTE PTR es:[rdi],al
   14000d078:	cwde   
   14000d079:	stos   BYTE PTR es:[rdi],al
   14000d07a:	loopne 0x14000d026
   14000d07c:	add    BYTE PTR [rbx-0x509f50b8],ch
   14000d082:	push   0xaf70af
   14000d087:	add    BYTE PTR [rax],al
   14000d089:	movabs al,ds:0xa000000000180000
   14000d092:	xor    BYTE PTR [rax-0x5f9f5fc8],ah
   14000d098:	mov    BYTE PTR [rax-0x5f275f50],ah
	...
