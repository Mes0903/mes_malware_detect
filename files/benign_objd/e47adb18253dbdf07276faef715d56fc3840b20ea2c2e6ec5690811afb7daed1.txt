
e47adb18253dbdf07276faef715d56fc3840b20ea2c2e6ec5690811afb7daed1.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x4399]        # 0x1400053a0
   140001007:	jmp    0x140004ac8
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x4369]        # 0x140005380
   140001017:	jmp    0x140004ac8
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x4339]        # 0x140005360
   140001027:	jmp    0x140004ac8
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	rex push rbx
   140001032:	sub    rsp,0x20
   140001036:	mov    eax,DWORD PTR [rip+0xc43c]        # 0x14000d478
   14000103c:	lea    rbx,[rip+0xc43d]        # 0x14000d480
   140001043:	test   al,0x1
   140001045:	jne    0x140001079
   140001047:	and    QWORD PTR [rip+0xc439],0x0        # 0x14000d488
   14000104f:	lea    rcx,[rip+0x436a]        # 0x1400053c0
   140001056:	or     eax,0x1
   140001059:	mov    QWORD PTR [rip+0xc2c8],rbx        # 0x14000d328
   140001060:	mov    DWORD PTR [rip+0xc412],eax        # 0x14000d478
   140001066:	lea    rax,[rip+0x790b]        # 0x140008978
   14000106d:	mov    QWORD PTR [rip+0xc40c],rax        # 0x14000d480
   140001074:	call   0x140004ac8
   140001079:	test   rbx,rbx
   14000107c:	setne  BYTE PTR [rip+0xc3d5]        # 0x14000d458
   140001083:	add    rsp,0x20
   140001087:	pop    rbx
   140001088:	ret    
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	lea    rcx,[rip+0x4349]        # 0x1400053e0
   140001097:	jmp    0x140004ac8
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	sub    rsp,0x28
   1400010a4:	xor    edx,edx
   1400010a6:	lea    rcx,[rip+0xc303]        # 0x14000d3b0
   1400010ad:	lea    r8d,[rdx+0x28]
   1400010b1:	call   0x1400051ba
   1400010b6:	cmp    BYTE PTR [rip+0xc377],0x0        # 0x14000d434
   1400010bd:	jne    0x140001133
   1400010bf:	mov    eax,DWORD PTR [rip+0xc3db]        # 0x14000d4a0
   1400010c5:	lea    rcx,[rip+0xc3c4]        # 0x14000d490
   1400010cc:	test   al,0x1
   1400010ce:	jne    0x1400010e5
   1400010d0:	or     eax,0x1
   1400010d3:	mov    QWORD PTR [rip+0xc3b6],rcx        # 0x14000d490
   1400010da:	mov    DWORD PTR [rip+0xc3c0],eax        # 0x14000d4a0
   1400010e0:	mov    rax,rcx
   1400010e3:	jmp    0x1400010ec
   1400010e5:	mov    rax,QWORD PTR [rip+0xc3ac]        # 0x14000d498
   1400010ec:	mov    QWORD PTR [rip+0xc2e5],rcx        # 0x14000d3d8
   1400010f3:	lea    rcx,[rip+0xc2de]        # 0x14000d3d8
   1400010fa:	mov    QWORD PTR [rip+0xc2df],rax        # 0x14000d3e0
   140001101:	mov    QWORD PTR [rax],rcx
   140001104:	mov    QWORD PTR [rip+0xc38d],rcx        # 0x14000d498
   14000110b:	lea    rcx,[rip+0x325e]        # 0x140004370
   140001112:	call   QWORD PTR [rip+0x5fc8]        # 0x1400070e0
   140001118:	lea    rcx,[rip+0x3291]        # 0x1400043b0
   14000111f:	mov    QWORD PTR [rip+0xc2c2],rax        # 0x14000d3e8
   140001126:	call   QWORD PTR [rip+0x5fb4]        # 0x1400070e0
   14000112c:	mov    QWORD PTR [rip+0xc2bd],rax        # 0x14000d3f0
   140001133:	and    QWORD PTR [rip+0xc2c5],0x0        # 0x14000d400
   14000113b:	and    QWORD PTR [rip+0xc2c5],0x0        # 0x14000d408
   140001143:	add    rsp,0x28
   140001147:	ret    
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	int3   
   140001151:	int3   
   140001152:	int3   
   140001153:	int3   
   140001154:	int3   
   140001155:	int3   
   140001156:	int3   
   140001157:	int3   
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	rex push rbx
   140001162:	sub    rsp,0x20
   140001166:	lea    rax,[rip+0x779b]        # 0x140008908
   14000116d:	mov    rbx,rcx
   140001170:	mov    QWORD PTR [rcx],rax
   140001173:	test   dl,0x1
   140001176:	je     0x14000117e
   140001178:	call   QWORD PTR [rip+0x605a]        # 0x1400071d8
   14000117e:	mov    rax,rbx
   140001181:	add    rsp,0x20
   140001185:	pop    rbx
   140001186:	ret    
   140001187:	int3   
   140001188:	int3   
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	mov    DWORD PTR [rdx],r8d
   140001193:	mov    rax,rdx
   140001196:	mov    QWORD PTR [rdx+0x8],rcx
   14000119a:	ret    
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	int3   
   1400011a1:	int3   
   1400011a2:	int3   
   1400011a3:	int3   
   1400011a4:	int3   
   1400011a5:	int3   
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400011b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400011ba:	mov    QWORD PTR [rsp+0x18],rdi
   1400011bf:	push   r14
   1400011c1:	sub    rsp,0x30
   1400011c5:	mov    rax,QWORD PTR [rcx]
   1400011c8:	mov    rsi,rcx
   1400011cb:	mov    r14,r8
   1400011ce:	mov    edi,edx
   1400011d0:	mov    rbx,QWORD PTR [rax+0x18]
   1400011d4:	mov    rcx,rbx
   1400011d7:	call   QWORD PTR [rip+0x614b]        # 0x140007328
   1400011dd:	mov    r8d,edi
   1400011e0:	lea    rdx,[rsp+0x20]
   1400011e5:	mov    rcx,rsi
   1400011e8:	call   rbx
   1400011ea:	mov    rcx,QWORD PTR [r14+0x8]
   1400011ee:	cmp    QWORD PTR [rax+0x8],rcx
   1400011f2:	jne    0x140001202
   1400011f4:	mov    ecx,DWORD PTR [r14]
   1400011f7:	cmp    DWORD PTR [rax],ecx
   1400011f9:	jne    0x140001202
   1400011fb:	mov    eax,0x1
   140001200:	jmp    0x140001204
   140001202:	xor    eax,eax
   140001204:	mov    rbx,QWORD PTR [rsp+0x40]
   140001209:	mov    rsi,QWORD PTR [rsp+0x48]
   14000120e:	mov    rdi,QWORD PTR [rsp+0x50]
   140001213:	add    rsp,0x30
   140001217:	pop    r14
   140001219:	ret    
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	cmp    rcx,QWORD PTR [rdx+0x8]
   140001224:	jne    0x140001231
   140001226:	cmp    DWORD PTR [rdx],r8d
   140001229:	jne    0x140001231
   14000122b:	mov    eax,0x1
   140001230:	ret    
   140001231:	xor    eax,eax
   140001233:	ret    
   140001234:	int3   
   140001235:	int3   
   140001236:	int3   
   140001237:	int3   
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	lea    rax,[rip+0x75a1]        # 0x1400087e8
   140001247:	ret    
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    QWORD PTR [rsp+0x8],rbx
   140001255:	push   rdi
   140001256:	sub    rsp,0x30
   14000125a:	xor    ebx,ebx
   14000125c:	mov    ecx,r8d
   14000125f:	mov    DWORD PTR [rsp+0x20],ebx
   140001263:	mov    rdi,rdx
   140001266:	call   0x14000448c
   14000126b:	test   rax,rax
   14000126e:	mov    QWORD PTR [rdi+0x18],0xf
   140001276:	mov    QWORD PTR [rdi+0x10],rbx
   14000127a:	lea    rdx,[rip+0x756f]        # 0x1400087f0
   140001281:	cmovne rdx,rax
   140001285:	mov    BYTE PTR [rdi],bl
   140001287:	cmp    BYTE PTR [rdx],bl
   140001289:	je     0x14000129a
   14000128b:	or     rax,0xffffffffffffffff
   14000128f:	inc    rax
   140001292:	cmp    BYTE PTR [rdx+rax*1],bl
   140001295:	jne    0x14000128f
   140001297:	mov    rbx,rax
   14000129a:	mov    r8,rbx
   14000129d:	mov    rcx,rdi
   1400012a0:	call   0x140001448
   1400012a5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012aa:	mov    rax,rdi
   1400012ad:	add    rsp,0x30
   1400012b1:	pop    rdi
   1400012b2:	ret    
   1400012b3:	int3   
   1400012b4:	int3   
   1400012b5:	int3   
   1400012b6:	int3   
   1400012b7:	int3   
   1400012b8:	int3   
   1400012b9:	int3   
   1400012ba:	int3   
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	lea    rax,[rip+0x7539]        # 0x140008800
   1400012c7:	ret    
   1400012c8:	int3   
   1400012c9:	int3   
   1400012ca:	int3   
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	rex push rbx
   1400012d2:	sub    rsp,0x30
   1400012d6:	xor    eax,eax
   1400012d8:	mov    rbx,rdx
   1400012db:	mov    DWORD PTR [rsp+0x20],eax
   1400012df:	cmp    r8d,0x1
   1400012e3:	jne    0x140001308
   1400012e5:	mov    QWORD PTR [rdx+0x18],0xf
   1400012ed:	lea    r8d,[rax+0x15]
   1400012f1:	mov    QWORD PTR [rdx+0x10],rax
   1400012f5:	mov    rcx,rbx
   1400012f8:	mov    BYTE PTR [rdx],al
   1400012fa:	lea    rdx,[rip+0x750f]        # 0x140008810
   140001301:	call   0x140001448
   140001306:	jmp    0x14000130d
   140001308:	call   0x140001250
   14000130d:	mov    rax,rbx
   140001310:	add    rsp,0x30
   140001314:	pop    rbx
   140001315:	ret    
   140001316:	int3   
   140001317:	int3   
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	lea    rax,[rip+0x7501]        # 0x140008828
   140001327:	ret    
   140001328:	int3   
   140001329:	int3   
   14000132a:	int3   
   14000132b:	int3   
   14000132c:	int3   
   14000132d:	int3   
   14000132e:	int3   
   14000132f:	int3   
   140001330:	mov    QWORD PTR [rsp+0x8],rbx
   140001335:	push   rdi
   140001336:	sub    rsp,0x30
   14000133a:	xor    ebx,ebx
   14000133c:	mov    ecx,r8d
   14000133f:	mov    DWORD PTR [rsp+0x20],ebx
   140001343:	mov    rdi,rdx
   140001346:	call   0x1400044bc
   14000134b:	test   rax,rax
   14000134e:	mov    QWORD PTR [rdi+0x18],0xf
   140001356:	mov    QWORD PTR [rdi+0x10],rbx
   14000135a:	lea    rdx,[rip+0x748f]        # 0x1400087f0
   140001361:	cmovne rdx,rax
   140001365:	mov    BYTE PTR [rdi],bl
   140001367:	cmp    BYTE PTR [rdx],bl
   140001369:	je     0x14000137a
   14000136b:	or     rax,0xffffffffffffffff
   14000136f:	inc    rax
   140001372:	cmp    BYTE PTR [rdx+rax*1],bl
   140001375:	jne    0x14000136f
   140001377:	mov    rbx,rax
   14000137a:	mov    r8,rbx
   14000137d:	mov    rcx,rdi
   140001380:	call   0x140001448
   140001385:	mov    rbx,QWORD PTR [rsp+0x40]
   14000138a:	mov    rax,rdi
   14000138d:	add    rsp,0x30
   140001391:	pop    rdi
   140001392:	ret    
   140001393:	int3   
   140001394:	int3   
   140001395:	int3   
   140001396:	int3   
   140001397:	int3   
   140001398:	int3   
   140001399:	int3   
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013a5:	push   rdi
   1400013a6:	sub    rsp,0x20
   1400013aa:	mov    ecx,r8d
   1400013ad:	mov    edi,r8d
   1400013b0:	mov    rbx,rdx
   1400013b3:	call   0x14000448c
   1400013b8:	test   rax,rax
   1400013bb:	mov    DWORD PTR [rbx],edi
   1400013bd:	lea    rax,[rip+0xac74]        # 0x14000c038
   1400013c4:	jne    0x1400013cd
   1400013c6:	lea    rax,[rip+0xac5b]        # 0x14000c028
   1400013cd:	mov    QWORD PTR [rbx+0x8],rax
   1400013d1:	mov    rax,rbx
   1400013d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400013d9:	add    rsp,0x20
   1400013dd:	pop    rdi
   1400013de:	ret    
   1400013df:	int3   
   1400013e0:	int3   
   1400013e1:	int3   
   1400013e2:	int3   
   1400013e3:	int3   
   1400013e4:	int3   
   1400013e5:	int3   
   1400013e6:	int3   
   1400013e7:	int3   
   1400013e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400013ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400013f2:	push   rdi
   1400013f3:	sub    rsp,0x20
   1400013f7:	mov    rdi,r8
   1400013fa:	mov    rbx,rcx
   1400013fd:	test   dl,dl
   1400013ff:	je     0x140001421
   140001401:	cmp    QWORD PTR [rcx+0x18],0x10
   140001406:	jb     0x140001421
   140001408:	mov    rsi,QWORD PTR [rcx]
   14000140b:	test   r8,r8
   14000140e:	je     0x140001418
   140001410:	mov    rdx,rsi
   140001413:	call   0x140004b7c
   140001418:	mov    rcx,rsi
   14000141b:	call   QWORD PTR [rip+0x5db7]        # 0x1400071d8
   140001421:	mov    rsi,QWORD PTR [rsp+0x38]
   140001426:	mov    QWORD PTR [rbx+0x18],0xf
   14000142e:	mov    QWORD PTR [rbx+0x10],rdi
   140001432:	mov    BYTE PTR [rdi+rbx*1],0x0
   140001436:	mov    rbx,QWORD PTR [rsp+0x30]
   14000143b:	add    rsp,0x20
   14000143f:	pop    rdi
   140001440:	ret    
   140001441:	int3   
   140001442:	int3   
   140001443:	int3   
   140001444:	int3   
   140001445:	int3   
   140001446:	int3   
   140001447:	int3   
   140001448:	mov    QWORD PTR [rsp+0x8],rbx
   14000144d:	mov    QWORD PTR [rsp+0x10],rsi
   140001452:	push   rdi
   140001453:	sub    rsp,0x20
   140001457:	mov    rdi,r8
   14000145a:	mov    rsi,rdx
   14000145d:	mov    rbx,rcx
   140001460:	test   rdx,rdx
   140001463:	je     0x1400014b1
   140001465:	cmp    QWORD PTR [rcx+0x18],0x10
   14000146a:	jb     0x140001471
   14000146c:	mov    rax,QWORD PTR [rcx]
   14000146f:	jmp    0x140001474
   140001471:	mov    rax,rcx
   140001474:	cmp    rdx,rax
   140001477:	jb     0x1400014b1
   140001479:	cmp    QWORD PTR [rcx+0x18],0x10
   14000147e:	jb     0x140001483
   140001480:	mov    rcx,QWORD PTR [rcx]
   140001483:	add    rcx,QWORD PTR [rbx+0x10]
   140001487:	cmp    rcx,rdx
   14000148a:	jbe    0x1400014b1
   14000148c:	cmp    QWORD PTR [rbx+0x18],0x10
   140001491:	jb     0x140001498
   140001493:	mov    rax,QWORD PTR [rbx]
   140001496:	jmp    0x14000149b
   140001498:	mov    rax,rbx
   14000149b:	sub    rsi,rax
   14000149e:	mov    r9,r8
   1400014a1:	mov    r8,rsi
   1400014a4:	mov    rdx,rbx
   1400014a7:	mov    rcx,rbx
   1400014aa:	call   0x140001564
   1400014af:	jmp    0x14000152b
   1400014b1:	cmp    r8,0xfffffffffffffffe
   1400014b5:	ja     0x14000153b
   1400014bb:	cmp    QWORD PTR [rbx+0x18],r8
   1400014bf:	jae    0x1400014d2
   1400014c1:	mov    r8,QWORD PTR [rbx+0x10]
   1400014c5:	mov    rdx,rdi
   1400014c8:	mov    rcx,rbx
   1400014cb:	call   0x14000172c
   1400014d0:	jmp    0x1400014ed
   1400014d2:	test   r8,r8
   1400014d5:	jne    0x1400014ed
   1400014d7:	and    QWORD PTR [rbx+0x10],r8
   1400014db:	cmp    QWORD PTR [rbx+0x18],0x10
   1400014e0:	jb     0x1400014e7
   1400014e2:	mov    rax,QWORD PTR [rbx]
   1400014e5:	jmp    0x1400014ea
   1400014e7:	mov    rax,rbx
   1400014ea:	mov    BYTE PTR [rax],0x0
   1400014ed:	test   rdi,rdi
   1400014f0:	je     0x140001528
   1400014f2:	cmp    QWORD PTR [rbx+0x18],0x10
   1400014f7:	jb     0x1400014fe
   1400014f9:	mov    rcx,QWORD PTR [rbx]
   1400014fc:	jmp    0x140001501
   1400014fe:	mov    rcx,rbx
   140001501:	test   rdi,rdi
   140001504:	je     0x140001511
   140001506:	mov    r8,rdi
   140001509:	mov    rdx,rsi
   14000150c:	call   0x140004b7c
   140001511:	cmp    QWORD PTR [rbx+0x18],0x10
   140001516:	mov    QWORD PTR [rbx+0x10],rdi
   14000151a:	jb     0x140001521
   14000151c:	mov    rax,QWORD PTR [rbx]
   14000151f:	jmp    0x140001524
   140001521:	mov    rax,rbx
   140001524:	mov    BYTE PTR [rax+rdi*1],0x0
   140001528:	mov    rax,rbx
   14000152b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001530:	mov    rsi,QWORD PTR [rsp+0x38]
   140001535:	add    rsp,0x20
   140001539:	pop    rdi
   14000153a:	ret    
   14000153b:	mov    rcx,rbx
   14000153e:	call   0x140001678
   140001543:	int3   
   140001544:	int3   
   140001545:	int3   
   140001546:	int3   
   140001547:	int3   
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	sub    rsp,0x28
   140001550:	lea    rcx,[rip+0x72d9]        # 0x140008830
   140001557:	call   0x1400045ec
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	int3   
   140001561:	int3   
   140001562:	int3   
   140001563:	int3   
   140001564:	mov    QWORD PTR [rsp+0x8],rbx
   140001569:	mov    QWORD PTR [rsp+0x10],rbp
   14000156e:	mov    QWORD PTR [rsp+0x18],rsi
   140001573:	push   rdi
   140001574:	sub    rsp,0x20
   140001578:	mov    rdi,QWORD PTR [rdx+0x10]
   14000157c:	mov    rbp,r8
   14000157f:	mov    rsi,rdx
   140001582:	mov    rbx,rcx
   140001585:	cmp    rdi,r8
   140001588:	jb     0x140001660
   14000158e:	sub    rdi,r8
   140001591:	cmp    r9,rdi
   140001594:	cmovb  rdi,r9
   140001598:	cmp    rcx,rdx
   14000159b:	jne    0x1400015c9
   14000159d:	lea    rax,[rdi+r8*1]
   1400015a1:	cmp    QWORD PTR [rcx+0x10],rax
   1400015a5:	jb     0x140001666
   1400015ab:	cmp    QWORD PTR [rcx+0x18],0x10
   1400015b0:	mov    QWORD PTR [rcx+0x10],rax
   1400015b4:	jb     0x1400015b9
   1400015b6:	mov    rcx,QWORD PTR [rcx]
   1400015b9:	mov    BYTE PTR [rcx+rax*1],0x0
   1400015bd:	xor    edx,edx
   1400015bf:	mov    rcx,rbx
   1400015c2:	call   0x140001690
   1400015c7:	jmp    0x140001648
   1400015c9:	cmp    rdi,0xfffffffffffffffe
   1400015cd:	ja     0x14000166c
   1400015d3:	cmp    QWORD PTR [rcx+0x18],rdi
   1400015d7:	jae    0x1400015e7
   1400015d9:	mov    r8,QWORD PTR [rcx+0x10]
   1400015dd:	mov    rdx,rdi
   1400015e0:	call   0x14000172c
   1400015e5:	jmp    0x140001602
   1400015e7:	test   rdi,rdi
   1400015ea:	jne    0x140001607
   1400015ec:	and    QWORD PTR [rcx+0x10],rdi
   1400015f0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400015f5:	jb     0x1400015fc
   1400015f7:	mov    rax,QWORD PTR [rcx]
   1400015fa:	jmp    0x1400015ff
   1400015fc:	mov    rax,rcx
   1400015ff:	mov    BYTE PTR [rax],0x0
   140001602:	test   rdi,rdi
   140001605:	je     0x140001648
   140001607:	cmp    QWORD PTR [rsi+0x18],0x10
   14000160c:	jb     0x140001611
   14000160e:	mov    rsi,QWORD PTR [rsi]
   140001611:	cmp    QWORD PTR [rbx+0x18],0x10
   140001616:	jb     0x14000161d
   140001618:	mov    rcx,QWORD PTR [rbx]
   14000161b:	jmp    0x140001620
   14000161d:	mov    rcx,rbx
   140001620:	test   rdi,rdi
   140001623:	je     0x140001631
   140001625:	lea    rdx,[rsi+rbp*1]
   140001629:	mov    r8,rdi
   14000162c:	call   0x140004b7c
   140001631:	cmp    QWORD PTR [rbx+0x18],0x10
   140001636:	mov    QWORD PTR [rbx+0x10],rdi
   14000163a:	jb     0x140001641
   14000163c:	mov    rax,QWORD PTR [rbx]
   14000163f:	jmp    0x140001644
   140001641:	mov    rax,rbx
   140001644:	mov    BYTE PTR [rax+rdi*1],0x0
   140001648:	mov    rbp,QWORD PTR [rsp+0x38]
   14000164d:	mov    rax,rbx
   140001650:	mov    rbx,QWORD PTR [rsp+0x30]
   140001655:	mov    rsi,QWORD PTR [rsp+0x40]
   14000165a:	add    rsp,0x20
   14000165e:	pop    rdi
   14000165f:	ret    
   140001660:	call   0x14000154c
   140001665:	int3   
   140001666:	call   0x14000154c
   14000166b:	int3   
   14000166c:	call   0x140001678
   140001671:	int3   
   140001672:	int3   
   140001673:	int3   
   140001674:	int3   
   140001675:	int3   
   140001676:	int3   
   140001677:	int3   
   140001678:	sub    rsp,0x28
   14000167c:	lea    rcx,[rip+0x71c5]        # 0x140008848
   140001683:	call   0x1400045c0
   140001688:	int3   
   140001689:	int3   
   14000168a:	int3   
   14000168b:	int3   
   14000168c:	int3   
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	mov    QWORD PTR [rsp+0x8],rbx
   140001695:	push   rdi
   140001696:	sub    rsp,0x20
   14000169a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000169e:	mov    rbx,rcx
   1400016a1:	cmp    rdi,rdx
   1400016a4:	jb     0x14000171f
   1400016a6:	mov    rax,rdi
   1400016a9:	sub    rax,rdx
   1400016ac:	cmp    rax,r8
   1400016af:	ja     0x1400016ca
   1400016b1:	cmp    QWORD PTR [rcx+0x18],0x10
   1400016b6:	mov    QWORD PTR [rcx+0x10],rdx
   1400016ba:	jb     0x1400016c1
   1400016bc:	mov    rax,QWORD PTR [rcx]
   1400016bf:	jmp    0x1400016c4
   1400016c1:	mov    rax,rcx
   1400016c4:	mov    BYTE PTR [rax+rdx*1],0x0
   1400016c8:	jmp    0x140001711
   1400016ca:	test   r8,r8
   1400016cd:	je     0x140001711
   1400016cf:	cmp    QWORD PTR [rcx+0x18],0x10
   1400016d4:	jb     0x1400016db
   1400016d6:	mov    rax,QWORD PTR [rcx]
   1400016d9:	jmp    0x1400016de
   1400016db:	mov    rax,rcx
   1400016de:	sub    rdi,r8
   1400016e1:	lea    rcx,[rax+rdx*1]
   1400016e5:	mov    rax,rdi
   1400016e8:	sub    rax,rdx
   1400016eb:	je     0x1400016fa
   1400016ed:	lea    rdx,[rcx+r8*1]
   1400016f1:	mov    r8,rax
   1400016f4:	call   QWORD PTR [rip+0x5abe]        # 0x1400071b8
   1400016fa:	cmp    QWORD PTR [rbx+0x18],0x10
   1400016ff:	mov    QWORD PTR [rbx+0x10],rdi
   140001703:	jb     0x14000170a
   140001705:	mov    rax,QWORD PTR [rbx]
   140001708:	jmp    0x14000170d
   14000170a:	mov    rax,rbx
   14000170d:	mov    BYTE PTR [rax+rdi*1],0x0
   140001711:	mov    rax,rbx
   140001714:	mov    rbx,QWORD PTR [rsp+0x30]
   140001719:	add    rsp,0x20
   14000171d:	pop    rdi
   14000171e:	ret    
   14000171f:	call   0x14000154c
   140001724:	int3   
   140001725:	int3   
   140001726:	int3   
   140001727:	int3   
   140001728:	int3   
   140001729:	int3   
   14000172a:	int3   
   14000172b:	int3   
   14000172c:	mov    rax,rsp
   14000172f:	mov    QWORD PTR [rax+0x18],r8
   140001733:	mov    QWORD PTR [rax+0x10],rdx
   140001737:	mov    QWORD PTR [rax+0x8],rcx
   14000173b:	push   rbx
   14000173c:	push   rsi
   14000173d:	push   rdi
   14000173e:	push   r14
   140001740:	sub    rsp,0x38
   140001744:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000174c:	mov    rsi,r8
   14000174f:	mov    rbx,rcx
   140001752:	mov    rdi,rdx
   140001755:	or     rdi,0xf
   140001759:	mov    r9,0xfffffffffffffffe
   140001760:	cmp    rdi,r9
   140001763:	jbe    0x14000176a
   140001765:	mov    rdi,rdx
   140001768:	jmp    0x14000179b
   14000176a:	mov    r8,QWORD PTR [rcx+0x18]
   14000176e:	mov    rcx,r8
   140001771:	shr    rcx,1
   140001774:	movabs rax,0xaaaaaaaaaaaaaaab
   14000177e:	mul    rdi
   140001781:	shr    rdx,1
   140001784:	cmp    rcx,rdx
   140001787:	jbe    0x14000179b
   140001789:	mov    rax,r9
   14000178c:	sub    rax,rcx
   14000178f:	cmp    r8,rax
   140001792:	lea    rdi,[rcx+r8*1]
   140001796:	jbe    0x14000179b
   140001798:	mov    rdi,r9
   14000179b:	lea    rcx,[rdi+0x1]
   14000179f:	xor    r14d,r14d
   1400017a2:	test   rcx,rcx
   1400017a5:	je     0x1400017bd
   1400017a7:	cmp    rcx,0xffffffffffffffff
   1400017ab:	ja     0x1400017b7
   1400017ad:	call   0x1400036c4
   1400017b2:	mov    r14,rax
   1400017b5:	jmp    0x1400017bd
   1400017b7:	call   0x140004598
   1400017bc:	nop
   1400017bd:	jmp    0x1400017d3
   1400017bf:	mov    rbx,QWORD PTR [rsp+0x60]
   1400017c4:	mov    rsi,QWORD PTR [rsp+0x70]
   1400017c9:	mov    rdi,QWORD PTR [rsp+0x68]
   1400017ce:	mov    r14,QWORD PTR [rsp+0x78]
   1400017d3:	test   rsi,rsi
   1400017d6:	je     0x1400017f7
   1400017d8:	cmp    QWORD PTR [rbx+0x18],0x10
   1400017dd:	jb     0x1400017e4
   1400017df:	mov    rdx,QWORD PTR [rbx]
   1400017e2:	jmp    0x1400017e7
   1400017e4:	mov    rdx,rbx
   1400017e7:	test   rsi,rsi
   1400017ea:	je     0x1400017f7
   1400017ec:	mov    r8,rsi
   1400017ef:	mov    rcx,r14
   1400017f2:	call   0x140004b7c
   1400017f7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400017fc:	jb     0x140001807
   1400017fe:	mov    rcx,QWORD PTR [rbx]
   140001801:	call   QWORD PTR [rip+0x59d1]        # 0x1400071d8
   140001807:	mov    BYTE PTR [rbx],0x0
   14000180a:	mov    QWORD PTR [rbx],r14
   14000180d:	mov    QWORD PTR [rbx+0x18],rdi
   140001811:	mov    QWORD PTR [rbx+0x10],rsi
   140001815:	cmp    rdi,0x10
   140001819:	jb     0x14000181e
   14000181b:	mov    rbx,r14
   14000181e:	mov    BYTE PTR [rbx+rsi*1],0x0
   140001822:	add    rsp,0x38
   140001826:	pop    r14
   140001828:	pop    rdi
   140001829:	pop    rsi
   14000182a:	pop    rbx
   14000182b:	ret    
   14000182c:	int3   
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	int3   
   140001831:	int3   
   140001832:	int3   
   140001833:	int3   
   140001834:	int3   
   140001835:	int3   
   140001836:	int3   
   140001837:	int3   
   140001838:	int3   
   140001839:	int3   
   14000183a:	int3   
   14000183b:	int3   
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	mov    eax,DWORD PTR [rip+0xbada]        # 0x14000d320
   140001846:	ret    
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	lea    rax,[rip+0x9511]        # 0x14000ad68
   140001857:	ret    
   140001858:	int3   
   140001859:	int3   
   14000185a:	int3   
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	lea    rax,[rip+0x9511]        # 0x14000ad78
   140001867:	ret    
   140001868:	int3   
   140001869:	int3   
   14000186a:	int3   
   14000186b:	int3   
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	lea    rax,[rip+0x9509]        # 0x14000ad80
   140001877:	ret    
   140001878:	int3   
   140001879:	int3   
   14000187a:	int3   
   14000187b:	int3   
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	lea    rax,[rip+0xba91]        # 0x14000d318
   140001887:	ret    
   140001888:	int3   
   140001889:	int3   
   14000188a:	int3   
   14000188b:	int3   
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	mov    QWORD PTR [rsp+0x8],rbx
   140001895:	push   rdi
   140001896:	sub    rsp,0x20
   14000189a:	mov    rdi,rcx
   14000189d:	mov    rbx,rdx
   1400018a0:	mov    rcx,rdx
   1400018a3:	call   QWORD PTR [rip+0x584f]        # 0x1400070f8
   1400018a9:	mov    QWORD PTR [rdi],rbx
   1400018ac:	mov    rax,rdi
   1400018af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018b4:	add    rsp,0x20
   1400018b8:	pop    rdi
   1400018b9:	ret    
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018c5:	push   rdi
   1400018c6:	sub    rsp,0x20
   1400018ca:	mov    rdi,rcx
   1400018cd:	mov    rbx,rdx
   1400018d0:	mov    rcx,rdx
   1400018d3:	call   QWORD PTR [rip+0x5817]        # 0x1400070f0
   1400018d9:	mov    QWORD PTR [rdi],rbx
   1400018dc:	mov    rax,rdi
   1400018df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400018e4:	add    rsp,0x20
   1400018e8:	pop    rdi
   1400018e9:	ret    
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400018fa:	mov    QWORD PTR [rsp+0x10],rdx
   1400018ff:	push   rsi
   140001900:	push   rdi
   140001901:	push   r12
   140001903:	push   r13
   140001905:	push   r14
   140001907:	sub    rsp,0x20
   14000190b:	mov    bpl,r8b
   14000190e:	lea    rsi,[rip+0x945b]        # 0x14000ad70
   140001915:	mov    r14,rcx
   140001918:	lea    r13,[rip+0x9461]        # 0x14000ad80
   14000191f:	lea    r12,[rip+0xffffffffffffff1a]        # 0x140001840
   140001926:	cmp    rsi,r13
   140001929:	jae    0x1400019e7
   14000192f:	cmp    QWORD PTR [rsi],0x0
   140001933:	je     0x1400019da
   140001939:	mov    rax,QWORD PTR [r14]
   14000193c:	cmp    QWORD PTR [rax+0x18],r12
   140001940:	jne    0x14000194a
   140001942:	mov    eax,DWORD PTR [rip+0xb9d8]        # 0x14000d320
   140001948:	jmp    0x14000194c
   14000194a:	xor    eax,eax
   14000194c:	test   eax,eax
   14000194e:	je     0x140001959
   140001950:	test   bpl,bpl
   140001953:	je     0x1400019e3
   140001959:	mov    rax,QWORD PTR [rsi]
   14000195c:	mov    rcx,QWORD PTR [rax+0x18]
   140001960:	mov    rax,QWORD PTR [rcx]
   140001963:	test   rax,rax
   140001966:	je     0x1400019da
   140001968:	lea    rdx,[rip+0xb9a9]        # 0x14000d318
   14000196f:	lea    rcx,[rsp+0x58]
   140001974:	call   0x140001890
   140001979:	mov    rax,QWORD PTR [rsi]
   14000197c:	mov    rcx,QWORD PTR [rax+0x18]
   140001980:	mov    rbx,QWORD PTR [rcx]
   140001983:	test   rbx,rbx
   140001986:	jne    0x14000199f
   140001988:	mov    rcx,QWORD PTR [rsp+0x58]
   14000198d:	test   rcx,rcx
   140001990:	je     0x1400019da
   140001992:	call   QWORD PTR [rip+0x5768]        # 0x140007100
   140001998:	and    QWORD PTR [rsp+0x58],rbx
   14000199d:	jmp    0x1400019da
   14000199f:	and    QWORD PTR [rcx],0x0
   1400019a3:	mov    rcx,QWORD PTR [rsp+0x58]
   1400019a8:	test   rcx,rcx
   1400019ab:	je     0x1400019b9
   1400019ad:	call   QWORD PTR [rip+0x574d]        # 0x140007100
   1400019b3:	and    QWORD PTR [rsp+0x58],0x0
   1400019b9:	mov    rcx,rbx
   1400019bc:	call   QWORD PTR [rip+0x5726]        # 0x1400070e8
   1400019c2:	mov    rdi,rax
   1400019c5:	mov    rcx,QWORD PTR [rax]
   1400019c8:	mov    rbx,QWORD PTR [rcx+0x10]
   1400019cc:	mov    rcx,rbx
   1400019cf:	call   QWORD PTR [rip+0x5953]        # 0x140007328
   1400019d5:	mov    rcx,rdi
   1400019d8:	call   rbx
   1400019da:	add    rsi,0x8
   1400019de:	jmp    0x140001926
   1400019e3:	xor    al,al
   1400019e5:	jmp    0x1400019ff
   1400019e7:	mov    rax,QWORD PTR [r14]
   1400019ea:	cmp    QWORD PTR [rax+0x18],r12
   1400019ee:	jne    0x1400019f8
   1400019f0:	mov    eax,DWORD PTR [rip+0xb92a]        # 0x14000d320
   1400019f6:	jmp    0x1400019fa
   1400019f8:	xor    eax,eax
   1400019fa:	test   eax,eax
   1400019fc:	sete   al
   1400019ff:	mov    rbx,QWORD PTR [rsp+0x50]
   140001a04:	mov    rbp,QWORD PTR [rsp+0x60]
   140001a09:	add    rsp,0x20
   140001a0d:	pop    r14
   140001a0f:	pop    r13
   140001a11:	pop    r12
   140001a13:	pop    rdi
   140001a14:	pop    rsi
   140001a15:	ret    
   140001a16:	int3   
   140001a17:	int3   
   140001a18:	int3   
   140001a19:	int3   
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	mov    rax,rsp
   140001a1f:	mov    QWORD PTR [rax+0x10],rbx
   140001a23:	mov    QWORD PTR [rax+0x20],rsi
   140001a27:	mov    QWORD PTR [rax+0x18],r8
   140001a2b:	mov    QWORD PTR [rax+0x8],rcx
   140001a2f:	push   rbp
   140001a30:	push   rdi
   140001a31:	push   r14
   140001a33:	mov    rbp,rsp
   140001a36:	sub    rsp,0x20
   140001a3a:	and    QWORD PTR [rbp+0x30],0x0
   140001a3f:	mov    rdi,r9
   140001a42:	mov    r14,QWORD PTR [rbp+0x40]
   140001a46:	mov    rsi,rdx
   140001a49:	and    QWORD PTR [r14],0x0
   140001a4d:	mov    rax,QWORD PTR [r9+0x18]
   140001a51:	mov    rcx,QWORD PTR [rax]
   140001a54:	test   rcx,rcx
   140001a57:	je     0x140001ac7
   140001a59:	lea    rdx,[rip+0xb8b8]        # 0x14000d318
   140001a60:	lea    rcx,[rbp+0x20]
   140001a64:	call   0x1400018c0
   140001a69:	mov    rax,QWORD PTR [rdi+0x18]
   140001a6d:	mov    rcx,QWORD PTR [rax]
   140001a70:	test   rcx,rcx
   140001a73:	je     0x140001ab8
   140001a75:	call   QWORD PTR [rip+0x566d]        # 0x1400070e8
   140001a7b:	mov    QWORD PTR [rbp+0x30],rax
   140001a7f:	mov    rdi,rax
   140001a82:	mov    rcx,QWORD PTR [rax]
   140001a85:	mov    rbx,QWORD PTR [rcx]
   140001a88:	mov    rcx,rbx
   140001a8b:	call   QWORD PTR [rip+0x5897]        # 0x140007328
   140001a91:	mov    r8,r14
   140001a94:	lea    rdx,[rip+0x71f5]        # 0x140008c90
   140001a9b:	mov    rcx,rdi
   140001a9e:	call   rbx
   140001aa0:	mov    rcx,QWORD PTR [rbp+0x20]
   140001aa4:	mov    ebx,eax
   140001aa6:	test   rcx,rcx
   140001aa9:	je     0x140001ab1
   140001aab:	call   QWORD PTR [rip+0x5657]        # 0x140007108
   140001ab1:	mov    eax,ebx
   140001ab3:	jmp    0x140001b97
   140001ab8:	mov    rcx,QWORD PTR [rbp+0x20]
   140001abc:	test   rcx,rcx
   140001abf:	je     0x140001ac7
   140001ac1:	call   QWORD PTR [rip+0x5641]        # 0x140007108
   140001ac7:	mov    rbx,QWORD PTR [rdi]
   140001aca:	mov    rcx,rbx
   140001acd:	call   QWORD PTR [rip+0x5855]        # 0x140007328
   140001ad3:	lea    r9,[rbp+0x30]
   140001ad7:	mov    rdx,rdi
   140001ada:	lea    r8,[rip+0x71af]        # 0x140008c90
   140001ae1:	mov    rcx,rsi
   140001ae4:	call   rbx
   140001ae6:	test   eax,eax
   140001ae8:	js     0x140001b97
   140001aee:	test   BYTE PTR [rsi],0x4
   140001af1:	jne    0x140001b8e
   140001af7:	lea    rdx,[rip+0xb81a]        # 0x14000d318
   140001afe:	xor    esi,esi
   140001b00:	lea    rcx,[rbp+0x40]
   140001b04:	call   0x140001890
   140001b09:	mov    rax,QWORD PTR [rdi+0x18]
   140001b0d:	mov    rcx,QWORD PTR [rax]
   140001b10:	test   rcx,rcx
   140001b13:	jne    0x140001b28
   140001b15:	mov    rcx,QWORD PTR [rbp+0x30]
   140001b19:	call   QWORD PTR [rip+0x55c1]        # 0x1400070e0
   140001b1f:	mov    rcx,QWORD PTR [rdi+0x18]
   140001b23:	mov    QWORD PTR [rcx],rax
   140001b26:	jmp    0x140001b46
   140001b28:	call   QWORD PTR [rip+0x55ba]        # 0x1400070e8
   140001b2e:	mov    rsi,rax
   140001b31:	mov    rcx,QWORD PTR [rax]
   140001b34:	mov    rbx,QWORD PTR [rcx+0x8]
   140001b38:	mov    rcx,rbx
   140001b3b:	call   QWORD PTR [rip+0x57e7]        # 0x140007328
   140001b41:	mov    rcx,rsi
   140001b44:	call   rbx
   140001b46:	mov    rcx,QWORD PTR [rbp+0x40]
   140001b4a:	test   rcx,rcx
   140001b4d:	je     0x140001b55
   140001b4f:	call   QWORD PTR [rip+0x55ab]        # 0x140007100
   140001b55:	test   rsi,rsi
   140001b58:	je     0x140001b8e
   140001b5a:	mov    rdi,QWORD PTR [rbp+0x30]
   140001b5e:	mov    rax,QWORD PTR [rdi]
   140001b61:	mov    rbx,QWORD PTR [rax+0x10]
   140001b65:	mov    rcx,rbx
   140001b68:	call   QWORD PTR [rip+0x57ba]        # 0x140007328
   140001b6e:	mov    rcx,rdi
   140001b71:	call   rbx
   140001b73:	mov    rdi,QWORD PTR [rbp+0x30]
   140001b77:	mov    rax,QWORD PTR [rdi]
   140001b7a:	mov    rbx,QWORD PTR [rax+0x10]
   140001b7e:	mov    rcx,rbx
   140001b81:	call   QWORD PTR [rip+0x57a1]        # 0x140007328
   140001b87:	mov    rcx,rdi
   140001b8a:	call   rbx
   140001b8c:	jmp    0x140001b92
   140001b8e:	mov    rsi,QWORD PTR [rbp+0x30]
   140001b92:	mov    QWORD PTR [r14],rsi
   140001b95:	xor    eax,eax
   140001b97:	mov    rbx,QWORD PTR [rsp+0x48]
   140001b9c:	mov    rsi,QWORD PTR [rsp+0x58]
   140001ba1:	add    rsp,0x20
   140001ba5:	pop    r14
   140001ba7:	pop    rdi
   140001ba8:	pop    rbp
   140001ba9:	ret    
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140001bb5:	mov    QWORD PTR [rsp+0x10],rbp
   140001bba:	mov    QWORD PTR [rsp+0x18],rsi
   140001bbf:	push   rdi
   140001bc0:	push   r12
   140001bc2:	push   r13
   140001bc4:	push   r14
   140001bc6:	push   r15
   140001bc8:	sub    rsp,0x20
   140001bcc:	xor    r13d,r13d
   140001bcf:	lea    r14,[rip+0x919a]        # 0x14000ad70
   140001bd6:	lea    rax,[rip+0x919b]        # 0x14000ad78
   140001bdd:	mov    r12,rcx
   140001be0:	lea    rsi,[rip+0x9198]        # 0x14000ad7f
   140001be7:	mov    edi,r13d
   140001bea:	sub    rsi,r14
   140001bed:	mov    ebp,r13d
   140001bf0:	shr    rsi,0x3
   140001bf4:	mov    edx,r13d
   140001bf7:	cmp    r14,rax
   140001bfa:	mov    rax,r14
   140001bfd:	cmova  rsi,r13
   140001c01:	test   rsi,rsi
   140001c04:	je     0x140001ce9
   140001c0a:	cmp    QWORD PTR [rax],r13
   140001c0d:	je     0x140001c11
   140001c0f:	inc    ebp
   140001c11:	add    rax,0x8
   140001c15:	inc    rdx
   140001c18:	cmp    rdx,rsi
   140001c1b:	jb     0x140001c0a
   140001c1d:	test   ebp,ebp
   140001c1f:	je     0x140001ce9
   140001c25:	mov    ecx,ebp
   140001c27:	mov    eax,0x4
   140001c2c:	mul    rcx
   140001c2f:	mov    rcx,0xffffffffffffffff
   140001c36:	cmovo  rax,rcx
   140001c3a:	mov    rcx,rax
   140001c3d:	call   QWORD PTR [rip+0x559d]        # 0x1400071e0
   140001c43:	mov    r15,rax
   140001c46:	test   rax,rax
   140001c49:	jne    0x140001c55
   140001c4b:	mov    edi,0x8007000e
   140001c50:	jmp    0x140001cd8
   140001c55:	mov    r9d,r13d
   140001c58:	mov    r8,r13
   140001c5b:	mov    rdx,r14
   140001c5e:	test   rsi,rsi
   140001c61:	je     0x140001c88
   140001c63:	mov    rax,QWORD PTR [rdx]
   140001c66:	test   rax,rax
   140001c69:	je     0x140001c7c
   140001c6b:	mov    rax,QWORD PTR [rax+0x18]
   140001c6f:	mov    ecx,r9d
   140001c72:	inc    r9d
   140001c75:	mov    eax,DWORD PTR [rax+0x8]
   140001c78:	mov    DWORD PTR [r15+rcx*4],eax
   140001c7c:	add    rdx,0x8
   140001c80:	inc    r8
   140001c83:	cmp    r8,rsi
   140001c86:	jb     0x140001c63
   140001c88:	mov    rax,QWORD PTR [r12]
   140001c8c:	mov    rbx,QWORD PTR [rax+0x58]
   140001c90:	mov    rcx,rbx
   140001c93:	call   QWORD PTR [rip+0x568f]        # 0x140007328
   140001c99:	mov    r9d,ebp
   140001c9c:	mov    r8,r15
   140001c9f:	xor    edx,edx
   140001ca1:	mov    rcx,r12
   140001ca4:	call   rbx
   140001ca6:	mov    edi,eax
   140001ca8:	mov    r9d,r13d
   140001cab:	mov    r8,r13
   140001cae:	test   rsi,rsi
   140001cb1:	je     0x140001cd8
   140001cb3:	mov    rdx,QWORD PTR [r14]
   140001cb6:	test   rdx,rdx
   140001cb9:	je     0x140001ccc
   140001cbb:	mov    rdx,QWORD PTR [rdx+0x18]
   140001cbf:	mov    ecx,r9d
   140001cc2:	inc    r9d
   140001cc5:	mov    eax,DWORD PTR [r15+rcx*4]
   140001cc9:	mov    DWORD PTR [rdx+0x8],eax
   140001ccc:	add    r14,0x8
   140001cd0:	inc    r8
   140001cd3:	cmp    r8,rsi
   140001cd6:	jb     0x140001cb3
   140001cd8:	mov    rcx,r15
   140001cdb:	call   QWORD PTR [rip+0x54f7]        # 0x1400071d8
   140001ce1:	test   edi,edi
   140001ce3:	js     0x140001d75
   140001ce9:	lea    rbx,[rip+0x9090]        # 0x14000ad80
   140001cf0:	lea    rcx,[rip+0x9089]        # 0x14000ad80
   140001cf7:	mov    rax,rbx
   140001cfa:	cmp    rbx,rcx
   140001cfd:	jae    0x140001d75
   140001cff:	cmp    QWORD PTR [rax],r13
   140001d02:	jne    0x140001d0d
   140001d04:	add    rax,0x8
   140001d08:	cmp    rax,rcx
   140001d0b:	jmp    0x140001cfd
   140001d0d:	mov    rax,QWORD PTR [rax]
   140001d10:	lea    rdx,[rip+0xb99]        # 0x1400028b0
   140001d17:	mov    rcx,QWORD PTR [rax+0x18]
   140001d1b:	mov    rax,QWORD PTR [r12]
   140001d1f:	cmp    QWORD PTR [rax+0x48],rdx
   140001d23:	jne    0x140001d66
   140001d25:	mov    rcx,QWORD PTR [rcx+0x8]
   140001d29:	call   QWORD PTR [rip+0x5431]        # 0x140007160
   140001d2f:	lea    rcx,[rip+0x9051]        # 0x14000ad87
   140001d36:	mov    edi,r13d
   140001d39:	sub    rcx,rbx
   140001d3c:	mov    rdx,r13
   140001d3f:	shr    rcx,0x3
   140001d43:	test   rcx,rcx
   140001d46:	je     0x140001d75
   140001d48:	mov    rax,QWORD PTR [rbx]
   140001d4b:	test   rax,rax
   140001d4e:	je     0x140001d58
   140001d50:	mov    rax,QWORD PTR [rax+0x18]
   140001d54:	mov    QWORD PTR [rax+0x8],r13
   140001d58:	add    rbx,0x8
   140001d5c:	inc    rdx
   140001d5f:	cmp    rdx,rcx
   140001d62:	jb     0x140001d48
   140001d64:	jmp    0x140001d75
   140001d66:	mov    edi,0x80004001
   140001d6b:	xor    edx,edx
   140001d6d:	mov    ecx,edi
   140001d6f:	call   QWORD PTR [rip+0x53c3]        # 0x140007138
   140001d75:	xor    r8d,r8d
   140001d78:	mov    rcx,r12
   140001d7b:	call   0x1400018f0
   140001d80:	mov    rbx,QWORD PTR [rsp+0x50]
   140001d85:	mov    eax,edi
   140001d87:	mov    rbp,QWORD PTR [rsp+0x58]
   140001d8c:	mov    rsi,QWORD PTR [rsp+0x60]
   140001d91:	add    rsp,0x20
   140001d95:	pop    r15
   140001d97:	pop    r14
   140001d99:	pop    r13
   140001d9b:	pop    r12
   140001d9d:	pop    rdi
   140001d9e:	ret    
   140001d9f:	int3   
   140001da0:	int3   
   140001da1:	int3   
   140001da2:	int3   
   140001da3:	int3   
   140001da4:	int3   
   140001da5:	int3   
   140001da6:	int3   
   140001da7:	int3   
   140001da8:	sub    rsp,0x38
   140001dac:	and    QWORD PTR [rsp+0x20],0x0
   140001db2:	movzx  r9d,dx
   140001db6:	mov    edx,0x2b
   140001dbb:	call   QWORD PTR [rip+0x523f]        # 0x140007000
   140001dc1:	add    rsp,0x38
   140001dc5:	ret    
   140001dc6:	int3   
   140001dc7:	int3   
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	mov    r11,rsp
   140001dcf:	mov    DWORD PTR [r11+0x20],r9d
   140001dd3:	sub    rsp,0x48
   140001dd7:	and    QWORD PTR [r11-0x18],0x0
   140001ddc:	lea    rax,[r11+0x20]
   140001de0:	movzx  r9d,dx
   140001de4:	mov    edx,0x2b
   140001de9:	mov    QWORD PTR [r11-0x20],0x4
   140001df1:	mov    QWORD PTR [r11-0x28],rax
   140001df5:	call   QWORD PTR [rip+0x5205]        # 0x140007000
   140001dfb:	add    rsp,0x48
   140001dff:	ret    
   140001e00:	int3   
   140001e01:	int3   
   140001e02:	int3   
   140001e03:	int3   
   140001e04:	int3   
   140001e05:	int3   
   140001e06:	int3   
   140001e07:	int3   
   140001e08:	int3   
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	mov    QWORD PTR [rsp+0x8],rbx
   140001e15:	mov    QWORD PTR [rsp+0x10],rsi
   140001e1a:	push   rdi
   140001e1b:	sub    rsp,0x20
   140001e1f:	and    DWORD PTR [r8],0x0
   140001e23:	mov    rbx,rdx
   140001e26:	sub    ecx,0x4
   140001e29:	je     0x140001e40
   140001e2b:	cmp    ecx,0x1
   140001e2e:	je     0x140001e37
   140001e30:	mov    eax,0x57
   140001e35:	jmp    0x140001e7f
   140001e37:	xor    edi,edi
   140001e39:	xor    eax,eax
   140001e3b:	xor    sil,sil
   140001e3e:	jmp    0x140001e61
   140001e40:	mov    rcx,r9
   140001e43:	call   QWORD PTR [rip+0x51bf]        # 0x140007008
   140001e49:	mov    rcx,rax
   140001e4c:	mov    rdi,rax
   140001e4f:	call   QWORD PTR [rip+0x51bb]        # 0x140007010
   140001e55:	mov    rcx,rdi
   140001e58:	mov    sil,al
   140001e5b:	call   QWORD PTR [rip+0x51b7]        # 0x140007018
   140001e61:	test   BYTE PTR [rbx+0x1a],0x2
   140001e65:	je     0x140001e72
   140001e67:	mov    rcx,QWORD PTR [rbx+0x10]
   140001e6b:	test   rcx,rcx
   140001e6e:	cmovne rbx,rcx
   140001e72:	mov    QWORD PTR [rbx+0x10],rdi
   140001e76:	mov    BYTE PTR [rbx+0x19],sil
   140001e7a:	mov    DWORD PTR [rbx+0x1c],eax
   140001e7d:	xor    eax,eax
   140001e7f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e84:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e89:	add    rsp,0x20
   140001e8d:	pop    rdi
   140001e8e:	ret    
   140001e8f:	int3   
   140001e90:	int3   
   140001e91:	int3   
   140001e92:	int3   
   140001e93:	int3   
   140001e94:	int3   
   140001e95:	int3   
   140001e96:	int3   
   140001e97:	int3   
   140001e98:	int3   
   140001e99:	int3   
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	rex push rbx
   140001ea2:	sub    rsp,0x20
   140001ea6:	lea    rax,[rip+0x6cdb]        # 0x140008b88
   140001ead:	mov    rbx,rcx
   140001eb0:	mov    QWORD PTR [rcx],rax
   140001eb3:	lea    rax,[rip+0x6ca6]        # 0x140008b60
   140001eba:	mov    QWORD PTR [rcx+0x8],rax
   140001ebe:	mov    DWORD PTR [rcx+0x14],0xc0000001
   140001ec5:	test   dl,0x1
   140001ec8:	je     0x140001ed0
   140001eca:	call   QWORD PTR [rip+0x5308]        # 0x1400071d8
   140001ed0:	mov    rax,rbx
   140001ed3:	add    rsp,0x20
   140001ed7:	pop    rbx
   140001ed8:	ret    
   140001ed9:	int3   
   140001eda:	int3   
   140001edb:	int3   
   140001edc:	int3   
   140001edd:	int3   
   140001ede:	int3   
   140001edf:	int3   
   140001ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ee5:	mov    QWORD PTR [rsp+0x10],rsi
   140001eea:	push   rdi
   140001eeb:	sub    rsp,0x40
   140001eef:	mov    rbx,r9
   140001ef2:	mov    rdi,r8
   140001ef5:	mov    esi,edx
   140001ef7:	mov    rcx,QWORD PTR [rip+0xa122]        # 0x14000c020
   140001efe:	lea    rax,[rip+0xa11b]        # 0x14000c020
   140001f05:	cmp    rcx,rax
   140001f08:	je     0x140001f25
   140001f0a:	test   BYTE PTR [rcx+0x1c],0x4
   140001f0e:	je     0x140001f25
   140001f10:	mov    rcx,QWORD PTR [rcx+0x10]
   140001f14:	lea    r8,[rip+0x6dd5]        # 0x140008cf0
   140001f1b:	mov    edx,0xa
   140001f20:	call   0x140001da8
   140001f25:	mov    rax,QWORD PTR [rsp+0x88]
   140001f2d:	mov    r8,rbx
   140001f30:	mov    r9d,DWORD PTR [rsp+0x70]
   140001f35:	mov    rdx,rdi
   140001f38:	mov    QWORD PTR [rsp+0x30],rax
   140001f3d:	mov    ecx,esi
   140001f3f:	mov    rax,QWORD PTR [rsp+0x80]
   140001f47:	mov    QWORD PTR [rsp+0x28],rax
   140001f4c:	mov    rax,QWORD PTR [rsp+0x78]
   140001f51:	mov    QWORD PTR [rsp+0x20],rax
   140001f56:	call   0x14000382c
   140001f5b:	mov    rbx,QWORD PTR [rsp+0x50]
   140001f60:	mov    rsi,QWORD PTR [rsp+0x58]
   140001f65:	add    rsp,0x40
   140001f69:	pop    rdi
   140001f6a:	ret    
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	int3   
   140001f71:	int3   
   140001f72:	int3   
   140001f73:	int3   
   140001f74:	mov    QWORD PTR [rsp+0x8],rbx
   140001f79:	push   rdi
   140001f7a:	sub    rsp,0x30
   140001f7e:	xor    edi,edi
   140001f80:	test   rdx,rdx
   140001f83:	je     0x140001f8a
   140001f85:	cmp    WORD PTR [rdx],di
   140001f88:	jne    0x140001f8d
   140001f8a:	mov    rdx,rdi
   140001f8d:	mov    r9,rdx
   140001f90:	mov    DWORD PTR [rsp+0x28],0x1
   140001f98:	mov    r8,rcx
   140001f9b:	mov    QWORD PTR [rsp+0x20],rdi
   140001fa0:	xor    edx,edx
   140001fa2:	xor    ecx,ecx
   140001fa4:	call   QWORD PTR [rip+0x5176]        # 0x140007120
   140001faa:	mov    rbx,rax
   140001fad:	call   QWORD PTR [rip+0x511d]        # 0x1400070d0
   140001fb3:	or     rdx,0xffffffffffffffff
   140001fb7:	mov    rcx,rax
   140001fba:	mov    r8,rdx
   140001fbd:	call   QWORD PTR [rip+0x5115]        # 0x1400070d8
   140001fc3:	cmp    rbx,0x20
   140001fc7:	mov    rbx,QWORD PTR [rsp+0x40]
   140001fcc:	seta   al
   140001fcf:	add    rsp,0x30
   140001fd3:	pop    rdi
   140001fd4:	ret    
   140001fd5:	int3   
   140001fd6:	int3   
   140001fd7:	int3   
   140001fd8:	int3   
   140001fd9:	int3   
   140001fda:	int3   
   140001fdb:	int3   
   140001fdc:	int3   
   140001fdd:	int3   
   140001fde:	int3   
   140001fdf:	int3   
   140001fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140001fe5:	mov    QWORD PTR [rsp+0x10],rsi
   140001fea:	push   rdi
   140001feb:	sub    rsp,0x30
   140001fef:	xor    esi,esi
   140001ff1:	mov    rcx,r8
   140001ff4:	mov    edi,esi
   140001ff6:	mov    rbx,r8
   140001ff9:	call   QWORD PTR [rip+0x51c9]        # 0x1400071c8
   140001fff:	test   eax,eax
   140002001:	jne    0x14000207f
   140002003:	lea    edx,[rsi+0x2c]
   140002006:	mov    rcx,rbx
   140002009:	call   QWORD PTR [rip+0x51c1]        # 0x1400071d0
   14000200f:	test   rax,rax
   140002012:	je     0x14000201b
   140002014:	mov    WORD PTR [rax],si
   140002017:	lea    rdi,[rax+0x2]
   14000201b:	or     rax,0xffffffffffffffff
   14000201f:	inc    rax
   140002022:	cmp    WORD PTR [rbx+rax*2],si
   140002026:	jne    0x14000201f
   140002028:	test   rax,rax
   14000202b:	je     0x140002155
   140002031:	mov    rdx,rdi
   140002034:	mov    rcx,rbx
   140002037:	call   0x140001f74
   14000203c:	test   al,al
   14000203e:	jne    0x140002155
   140002044:	mov    rcx,QWORD PTR [rip+0x9fd5]        # 0x14000c020
   14000204b:	lea    rax,[rip+0x9fce]        # 0x14000c020
   140002052:	cmp    rcx,rax
   140002055:	je     0x140002155
   14000205b:	test   BYTE PTR [rcx+0x1c],0x2
   14000205f:	je     0x140002155
   140002065:	mov    rcx,QWORD PTR [rcx+0x10]
   140002069:	lea    r8,[rip+0x6c80]        # 0x140008cf0
   140002070:	mov    edx,0xb
   140002075:	call   0x140001da8
   14000207a:	jmp    0x140002155
   14000207f:	sub    eax,0x2
   140002082:	je     0x1400020a4
   140002084:	sub    eax,0x3
   140002087:	je     0x14000209b
   140002089:	cmp    eax,0x1
   14000208c:	jne    0x140002155
   140002092:	lea    rbx,[rip+0x6b57]        # 0x140008bf0
   140002099:	jmp    0x1400020ab
   14000209b:	lea    rbx,[rip+0x6b36]        # 0x140008bd8
   1400020a2:	jmp    0x1400020ab
   1400020a4:	lea    rbx,[rip+0x6b1d]        # 0x140008bc8
   1400020ab:	lea    rcx,[rsp+0x20]
   1400020b0:	mov    QWORD PTR [rsp+0x20],rsi
   1400020b5:	call   0x140003d78
   1400020ba:	mov    edi,eax
   1400020bc:	test   eax,eax
   1400020be:	jns    0x140002105
   1400020c0:	mov    rcx,QWORD PTR [rip+0x9f59]        # 0x14000c020
   1400020c7:	lea    rax,[rip+0x9f52]        # 0x14000c020
   1400020ce:	cmp    rcx,rax
   1400020d1:	je     0x1400020f1
   1400020d3:	test   BYTE PTR [rcx+0x1c],0x1
   1400020d7:	je     0x1400020f1
   1400020d9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400020dd:	lea    r8,[rip+0x6c0c]        # 0x140008cf0
   1400020e4:	mov    edx,0xc
   1400020e9:	mov    r9d,edi
   1400020ec:	call   0x140001dcc
   1400020f1:	mov    rcx,QWORD PTR [rsp+0x20]
   1400020f6:	test   rcx,rcx
   1400020f9:	je     0x140002101
   1400020fb:	call   QWORD PTR [rip+0x50d7]        # 0x1400071d8
   140002101:	mov    eax,edi
   140002103:	jmp    0x140002157
   140002105:	mov    rdx,rbx
   140002108:	mov    rbx,QWORD PTR [rsp+0x20]
   14000210d:	mov    rcx,rbx
   140002110:	call   0x140001f74
   140002115:	test   al,al
   140002117:	jne    0x140002147
   140002119:	mov    rcx,QWORD PTR [rip+0x9f00]        # 0x14000c020
   140002120:	lea    rax,[rip+0x9ef9]        # 0x14000c020
   140002127:	cmp    rcx,rax
   14000212a:	je     0x140002147
   14000212c:	test   BYTE PTR [rcx+0x1c],0x2
   140002130:	je     0x140002147
   140002132:	mov    rcx,QWORD PTR [rcx+0x10]
   140002136:	lea    r8,[rip+0x6bb3]        # 0x140008cf0
   14000213d:	mov    edx,0xd
   140002142:	call   0x140001da8
   140002147:	test   rbx,rbx
   14000214a:	je     0x140002155
   14000214c:	mov    rcx,rbx
   14000214f:	call   QWORD PTR [rip+0x5083]        # 0x1400071d8
   140002155:	xor    eax,eax
   140002157:	mov    rbx,QWORD PTR [rsp+0x40]
   14000215c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002161:	add    rsp,0x30
   140002165:	pop    rdi
   140002166:	ret    
   140002167:	int3   
   140002168:	int3   
   140002169:	int3   
   14000216a:	int3   
   14000216b:	int3   
   14000216c:	int3   
   14000216d:	int3   
   14000216e:	int3   
   14000216f:	int3   
   140002170:	mov    rcx,QWORD PTR [rip+0xb1c9]        # 0x14000d340
   140002177:	rex.W jmp QWORD PTR [rip+0x4f4a]        # 0x1400070c8
   14000217e:	int3   
   14000217f:	int3   
   140002180:	int3   
   140002181:	int3   
   140002182:	int3   
   140002183:	int3   
   140002184:	mov    QWORD PTR [rsp+0x8],rbx
   140002189:	push   rdi
   14000218a:	sub    rsp,0x20
   14000218e:	mov    eax,DWORD PTR [rip+0xb2e4]        # 0x14000d478
   140002194:	lea    rdi,[rip+0xb2e5]        # 0x14000d480
   14000219b:	xor    ebx,ebx
   14000219d:	test   al,0x1
   14000219f:	jne    0x1400021d2
   1400021a1:	or     eax,0x1
   1400021a4:	mov    QWORD PTR [rip+0xb17d],rdi        # 0x14000d328
   1400021ab:	mov    DWORD PTR [rip+0xb2c7],eax        # 0x14000d478
   1400021b1:	lea    rcx,[rip+0x3208]        # 0x1400053c0
   1400021b8:	lea    rax,[rip+0x67b9]        # 0x140008978
   1400021bf:	mov    QWORD PTR [rip+0xb2c2],rbx        # 0x14000d488
   1400021c6:	mov    QWORD PTR [rip+0xb2b3],rax        # 0x14000d480
   1400021cd:	call   0x140004ac8
   1400021d2:	cmp    QWORD PTR [rip+0xb2af],rbx        # 0x14000d488
   1400021d9:	jne    0x14000220b
   1400021db:	lea    rax,[rip+0x67fe]        # 0x1400089e0
   1400021e2:	mov    BYTE PTR [rip+0xb280],bl        # 0x14000d468
   1400021e8:	mov    QWORD PTR [rip+0xb271],rax        # 0x14000d460
   1400021ef:	lea    rax,[rip+0xffffffffffffff7a]        # 0x140002170
   1400021f6:	mov    QWORD PTR [rip+0xb273],rax        # 0x14000d470
   1400021fd:	lea    rax,[rip+0xb25c]        # 0x14000d460
   140002204:	mov    QWORD PTR [rip+0xb27d],rax        # 0x14000d488
   14000220b:	mov    rcx,rdi
   14000220e:	call   0x140002c5c
   140002213:	test   eax,eax
   140002215:	js     0x140002291
   140002217:	mov    rcx,QWORD PTR [rip+0x9e02]        # 0x14000c020
   14000221e:	lea    rbx,[rip+0x9dfb]        # 0x14000c020
   140002225:	cmp    rcx,rbx
   140002228:	je     0x140002245
   14000222a:	test   BYTE PTR [rcx+0x1c],0x4
   14000222e:	je     0x140002245
   140002230:	mov    rcx,QWORD PTR [rcx+0x10]
   140002234:	lea    r8,[rip+0x6ab5]        # 0x140008cf0
   14000223b:	mov    edx,0xe
   140002240:	call   0x140001da8
   140002245:	mov    rcx,QWORD PTR [rip+0xb0f4]        # 0x14000d340
   14000224c:	call   QWORD PTR [rip+0x4e6e]        # 0x1400070c0
   140002252:	mov    rcx,QWORD PTR [rip+0xb0e7]        # 0x14000d340
   140002259:	or     edx,0xffffffff
   14000225c:	call   QWORD PTR [rip+0x4e56]        # 0x1400070b8
   140002262:	mov    rcx,QWORD PTR [rip+0x9db7]        # 0x14000c020
   140002269:	cmp    rcx,rbx
   14000226c:	je     0x140002289
   14000226e:	test   BYTE PTR [rcx+0x1c],0x4
   140002272:	je     0x140002289
   140002274:	mov    rcx,QWORD PTR [rcx+0x10]
   140002278:	lea    r8,[rip+0x6a71]        # 0x140008cf0
   14000227f:	mov    edx,0xf
   140002284:	call   0x140001da8
   140002289:	mov    rcx,rdi
   14000228c:	call   0x140001bb0
   140002291:	mov    rbx,QWORD PTR [rsp+0x30]
   140002296:	add    rsp,0x20
   14000229a:	pop    rdi
   14000229b:	ret    
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	int3   
   1400022a1:	int3   
   1400022a2:	int3   
   1400022a3:	int3   
   1400022a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400022a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400022ae:	mov    QWORD PTR [rsp+0x18],rdi
   1400022b3:	push   r14
   1400022b5:	sub    rsp,0x50
   1400022b9:	mov    QWORD PTR [rip+0xb090],rcx        # 0x14000d350
   1400022c0:	xor    esi,esi
   1400022c2:	mov    QWORD PTR [rip+0xb0a3],0x1        # 0x14000d370
   1400022cd:	lea    rax,[rip+0x6a2c]        # 0x140008d00
   1400022d4:	mov    QWORD PTR [rip+0xb08d],rsi        # 0x14000d368
   1400022db:	lea    rbx,[rip+0xb076]        # 0x14000d358
   1400022e2:	mov    QWORD PTR [rip+0xb06f],rsi        # 0x14000d358
   1400022e9:	mov    QWORD PTR [rip+0xb090],rax        # 0x14000d380
   1400022f0:	lea    rdi,[rip+0xb089]        # 0x14000d380
   1400022f7:	mov    QWORD PTR [rip+0x9d22],rbx        # 0x14000c020
   1400022fe:	mov    r8,QWORD PTR [rdi]
   140002301:	lea    rax,[rbx+0x8]
   140002305:	mov    QWORD PTR [rsp+0x38],rax
   14000230a:	lea    rcx,[rip+0xfffffffffffffaff]        # 0x140001e10
   140002311:	mov    QWORD PTR [rsp+0x30],rsi
   140002316:	lea    rax,[rsp+0x40]
   14000231b:	mov    QWORD PTR [rsp+0x40],r8
   140002320:	lea    rdi,[rdi+0x8]
   140002324:	mov    QWORD PTR [rsp+0x48],rsi
   140002329:	mov    r9d,0x1
   14000232f:	mov    QWORD PTR [rsp+0x28],rsi
   140002334:	mov    rdx,rbx
   140002337:	mov    QWORD PTR [rsp+0x20],rax
   14000233c:	mov    QWORD PTR [rbx+0x20],r8
   140002340:	call   QWORD PTR [rip+0x4cda]        # 0x140007020
   140002346:	mov    rbx,QWORD PTR [rbx]
   140002349:	test   rbx,rbx
   14000234c:	jne    0x1400022fe
   14000234e:	mov    rcx,QWORD PTR [rip+0x9ccb]        # 0x14000c020
   140002355:	lea    rdi,[rip+0x9cc4]        # 0x14000c020
   14000235c:	lea    r14,[rip+0x698d]        # 0x140008cf0
   140002363:	cmp    rcx,rdi
   140002366:	je     0x14000237d
   140002368:	test   BYTE PTR [rcx+0x1c],0x4
   14000236c:	je     0x14000237d
   14000236e:	mov    rcx,QWORD PTR [rcx+0x10]
   140002372:	lea    edx,[rbx+0x10]
   140002375:	mov    r8,r14
   140002378:	call   0x140001da8
   14000237d:	xor    r9d,r9d
   140002380:	xor    r8d,r8d
   140002383:	xor    edx,edx
   140002385:	xor    ecx,ecx
   140002387:	call   QWORD PTR [rip+0x4d23]        # 0x1400070b0
   14000238d:	mov    QWORD PTR [rip+0xafac],rax        # 0x14000d340
   140002394:	test   rax,rax
   140002397:	jne    0x1400023dd
   140002399:	call   QWORD PTR [rip+0x4d71]        # 0x140007110
   14000239f:	mov    rbx,QWORD PTR [rip+0x9c7a]        # 0x14000c020
   1400023a6:	cmp    rbx,rdi
   1400023a9:	je     0x14000248d
   1400023af:	test   BYTE PTR [rbx+0x1c],0x1
   1400023b3:	je     0x140002441
   1400023b9:	movzx  r9d,ax
   1400023bd:	mov    edx,0x11
   1400023c2:	or     r9d,0x80070000
   1400023c9:	test   eax,eax
   1400023cb:	cmovle r9d,eax
   1400023cf:	mov    rcx,QWORD PTR [rbx+0x10]
   1400023d3:	mov    r8,r14
   1400023d6:	call   0x140001dcc
   1400023db:	jmp    0x14000243a
   1400023dd:	mov    ecx,0x1
   1400023e2:	call   QWORD PTR [rip+0x4d60]        # 0x140007148
   1400023e8:	test   eax,eax
   1400023ea:	jns    0x14000240c
   1400023ec:	mov    rbx,QWORD PTR [rip+0x9c2d]        # 0x14000c020
   1400023f3:	cmp    rbx,rdi
   1400023f6:	je     0x14000248d
   1400023fc:	test   BYTE PTR [rbx+0x1c],0x1
   140002400:	je     0x140002441
   140002402:	mov    edx,0x12
   140002407:	mov    r9d,eax
   14000240a:	jmp    0x1400023cf
   14000240c:	mov    rcx,QWORD PTR [rip+0x9c0d]        # 0x14000c020
   140002413:	cmp    rcx,rdi
   140002416:	je     0x14000242f
   140002418:	test   BYTE PTR [rcx+0x1c],0x4
   14000241c:	je     0x14000242f
   14000241e:	mov    rcx,QWORD PTR [rcx+0x10]
   140002422:	mov    edx,0x13
   140002427:	mov    r8,r14
   14000242a:	call   0x140001da8
   14000242f:	call   0x140002184
   140002434:	call   QWORD PTR [rip+0x4d16]        # 0x140007150
   14000243a:	mov    rbx,QWORD PTR [rip+0x9bdf]        # 0x14000c020
   140002441:	cmp    rbx,rdi
   140002444:	je     0x14000248d
   140002446:	test   BYTE PTR [rbx+0x1c],0x4
   14000244a:	je     0x140002464
   14000244c:	mov    rcx,QWORD PTR [rbx+0x10]
   140002450:	mov    edx,0x14
   140002455:	mov    r8,r14
   140002458:	call   0x140001da8
   14000245d:	mov    rbx,QWORD PTR [rip+0x9bbc]        # 0x14000c020
   140002464:	cmp    rbx,rdi
   140002467:	je     0x14000248d
   140002469:	jmp    0x140002481
   14000246b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000246f:	test   rcx,rcx
   140002472:	je     0x14000247e
   140002474:	call   QWORD PTR [rip+0x4bae]        # 0x140007028
   14000247a:	mov    QWORD PTR [rbx+0x8],rsi
   14000247e:	mov    rbx,QWORD PTR [rbx]
   140002481:	test   rbx,rbx
   140002484:	jne    0x14000246b
   140002486:	mov    QWORD PTR [rip+0x9b93],rdi        # 0x14000c020
   14000248d:	mov    rbx,QWORD PTR [rsp+0x60]
   140002492:	xor    eax,eax
   140002494:	mov    rsi,QWORD PTR [rsp+0x68]
   140002499:	mov    rdi,QWORD PTR [rsp+0x70]
   14000249e:	add    rsp,0x50
   1400024a2:	pop    r14
   1400024a4:	ret    
   1400024a5:	int3   
   1400024a6:	int3   
   1400024a7:	int3   
   1400024a8:	int3   
   1400024a9:	int3   
   1400024aa:	int3   
   1400024ab:	int3   
   1400024ac:	sub    rsp,0x28
   1400024b0:	mov    rcx,QWORD PTR [rcx]
   1400024b3:	test   rcx,rcx
   1400024b6:	je     0x1400024be
   1400024b8:	call   QWORD PTR [rip+0x4d1a]        # 0x1400071d8
   1400024be:	add    rsp,0x28
   1400024c2:	ret    
   1400024c3:	int3   
   1400024c4:	int3   
   1400024c5:	int3   
   1400024c6:	int3   
   1400024c7:	int3   
   1400024c8:	int3   
   1400024c9:	int3   
   1400024ca:	int3   
   1400024cb:	int3   
   1400024cc:	int3   
   1400024cd:	int3   
   1400024ce:	int3   
   1400024cf:	int3   
   1400024d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400024da:	push   rdi
   1400024db:	sub    rsp,0x20
   1400024df:	xor    esi,esi
   1400024e1:	mov    rdi,rcx
   1400024e4:	mov    QWORD PTR [r8],rsi
   1400024e7:	cmp    DWORD PTR [rdx],esi
   1400024e9:	jne    0x140002514
   1400024eb:	mov    eax,DWORD PTR [rip+0x67e3]        # 0x140008cd4
   1400024f1:	cmp    DWORD PTR [rdx+0x4],eax
   1400024f4:	jne    0x140002514
   1400024f6:	mov    eax,DWORD PTR [rip+0x67dc]        # 0x140008cd8
   1400024fc:	cmp    DWORD PTR [rdx+0x8],eax
   1400024ff:	jne    0x140002514
   140002501:	mov    eax,DWORD PTR [rip+0x67d5]        # 0x140008cdc
   140002507:	cmp    DWORD PTR [rdx+0xc],eax
   14000250a:	jne    0x140002514
   14000250c:	mov    QWORD PTR [r8],rcx
   14000250f:	mov    rax,QWORD PTR [rcx]
   140002512:	jmp    0x140002578
   140002514:	cmp    DWORD PTR [rdx],0x94f35585
   14000251a:	jne    0x140002542
   14000251c:	mov    eax,DWORD PTR [rip+0x6792]        # 0x140008cb4
   140002522:	cmp    DWORD PTR [rdx+0x4],eax
   140002525:	jne    0x140002542
   140002527:	mov    eax,DWORD PTR [rip+0x678b]        # 0x140008cb8
   14000252d:	cmp    DWORD PTR [rdx+0x8],eax
   140002530:	jne    0x140002542
   140002532:	mov    eax,DWORD PTR [rip+0x6784]        # 0x140008cbc
   140002538:	cmp    DWORD PTR [rdx+0xc],eax
   14000253b:	jne    0x140002542
   14000253d:	mov    QWORD PTR [r8],rcx
   140002540:	jmp    0x140002572
   140002542:	cmp    DWORD PTR [rdx],0x53e31837
   140002548:	jne    0x14000258c
   14000254a:	mov    eax,DWORD PTR [rip+0x6754]        # 0x140008ca4
   140002550:	cmp    DWORD PTR [rdx+0x4],eax
   140002553:	jne    0x14000258c
   140002555:	mov    eax,DWORD PTR [rip+0x674d]        # 0x140008ca8
   14000255b:	cmp    DWORD PTR [rdx+0x8],eax
   14000255e:	jne    0x14000258c
   140002560:	mov    eax,DWORD PTR [rip+0x6746]        # 0x140008cac
   140002566:	cmp    DWORD PTR [rdx+0xc],eax
   140002569:	jne    0x14000258c
   14000256b:	lea    rax,[rcx+0x8]
   14000256f:	mov    QWORD PTR [r8],rax
   140002572:	mov    rdi,QWORD PTR [r8]
   140002575:	mov    rax,QWORD PTR [rdi]
   140002578:	mov    rbx,QWORD PTR [rax+0x8]
   14000257c:	mov    rcx,rbx
   14000257f:	call   QWORD PTR [rip+0x4da3]        # 0x140007328
   140002585:	mov    rcx,rdi
   140002588:	call   rbx
   14000258a:	jmp    0x140002591
   14000258c:	mov    esi,0x80004002
   140002591:	mov    rbx,QWORD PTR [rsp+0x30]
   140002596:	mov    eax,esi
   140002598:	mov    rsi,QWORD PTR [rsp+0x38]
   14000259d:	add    rsp,0x20
   1400025a1:	pop    rdi
   1400025a2:	ret    
   1400025a3:	int3   
   1400025a4:	int3   
   1400025a5:	int3   
   1400025a6:	int3   
   1400025a7:	int3   
   1400025a8:	int3   
   1400025a9:	int3   
   1400025aa:	int3   
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    eax,0x1
   1400025b5:	lock xadd DWORD PTR [rcx+0x14],eax
   1400025ba:	inc    eax
   1400025bc:	ret    
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	int3   
   1400025c1:	int3   
   1400025c2:	int3   
   1400025c3:	int3   
   1400025c4:	int3   
   1400025c5:	int3   
   1400025c6:	int3   
   1400025c7:	int3   
   1400025c8:	int3   
   1400025c9:	int3   
   1400025ca:	int3   
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400025da:	push   rdi
   1400025db:	sub    rsp,0x20
   1400025df:	mov    rsi,rcx
   1400025e2:	or     edi,0xffffffff
   1400025e5:	lock xadd DWORD PTR [rcx+0x14],edi
   1400025ea:	sub    edi,0x1
   1400025ed:	jne    0x14000262d
   1400025ef:	test   rcx,rcx
   1400025f2:	je     0x14000260c
   1400025f4:	mov    rax,QWORD PTR [rcx]
   1400025f7:	mov    rbx,QWORD PTR [rax+0x20]
   1400025fb:	mov    rcx,rbx
   1400025fe:	call   QWORD PTR [rip+0x4d24]        # 0x140007328
   140002604:	lea    edx,[rdi+0x1]
   140002607:	mov    rcx,rsi
   14000260a:	call   rbx
   14000260c:	mov    rsi,QWORD PTR [rip+0xad15]        # 0x14000d328
   140002613:	test   rsi,rsi
   140002616:	je     0x14000262d
   140002618:	mov    rdx,QWORD PTR [rsi]
   14000261b:	mov    rbx,QWORD PTR [rdx+0x10]
   14000261f:	mov    rcx,rbx
   140002622:	call   QWORD PTR [rip+0x4d00]        # 0x140007328
   140002628:	mov    rcx,rsi
   14000262b:	call   rbx
   14000262d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002632:	mov    eax,edi
   140002634:	mov    rsi,QWORD PTR [rsp+0x38]
   140002639:	add    rsp,0x20
   14000263d:	pop    rdi
   14000263e:	ret    
   14000263f:	int3   
   140002640:	int3   
   140002641:	int3   
   140002642:	int3   
   140002643:	int3   
   140002644:	int3   
   140002645:	int3   
   140002646:	int3   
   140002647:	int3   
   140002648:	int3   
   140002649:	int3   
   14000264a:	int3   
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	mov    rax,rsp
   140002653:	mov    QWORD PTR [rax+0x8],rbx
   140002657:	mov    QWORD PTR [rax+0x10],rsi
   14000265b:	mov    QWORD PTR [rax+0x18],rdi
   14000265f:	mov    QWORD PTR [rax+0x20],r14
   140002663:	push   r15
   140002665:	sub    rsp,0x30
   140002669:	mov    rdi,QWORD PTR [rsp+0x60]
   14000266e:	xor    ebx,ebx
   140002670:	xor    esi,esi
   140002672:	mov    r14,r9
   140002675:	mov    r15,r8
   140002678:	cmp    DWORD PTR [rsp+0x68],ebx
   14000267c:	jbe    0x1400026b9
   14000267e:	test   ebx,ebx
   140002680:	js     0x1400026c5
   140002682:	mov    rdx,QWORD PTR [r14]
   140002685:	lea    rax,[rdi+rsi*4]
   140002689:	mov    r9d,0x5
   14000268f:	mov    ecx,esi
   140002691:	shl    rcx,0x4
   140002695:	add    rcx,r15
   140002698:	mov    QWORD PTR [rsp+0x20],rax
   14000269d:	lea    r8d,[r9-0x1]
   1400026a1:	call   QWORD PTR [rip+0x4c61]        # 0x140007308
   1400026a7:	inc    esi
   1400026a9:	add    r14,0x8
   1400026ad:	mov    ebx,eax
   1400026af:	cmp    esi,DWORD PTR [rsp+0x68]
   1400026b3:	jb     0x14000267e
   1400026b5:	test   eax,eax
   1400026b7:	js     0x1400026c5
   1400026b9:	call   QWORD PTR [rip+0x4c51]        # 0x140007310
   1400026bf:	mov    ebx,eax
   1400026c1:	test   eax,eax
   1400026c3:	jns    0x1400026de
   1400026c5:	test   esi,esi
   1400026c7:	je     0x1400026de
   1400026c9:	mov    ecx,DWORD PTR [rdi]
   1400026cb:	call   QWORD PTR [rip+0x4c1f]        # 0x1400072f0
   1400026d1:	and    DWORD PTR [rdi],0x0
   1400026d4:	lea    rdi,[rdi+0x4]
   1400026d8:	sub    rsi,0x1
   1400026dc:	jne    0x1400026c9
   1400026de:	mov    rsi,QWORD PTR [rsp+0x48]
   1400026e3:	mov    eax,ebx
   1400026e5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400026ea:	mov    rdi,QWORD PTR [rsp+0x50]
   1400026ef:	mov    r14,QWORD PTR [rsp+0x58]
   1400026f4:	add    rsp,0x30
   1400026f8:	pop    r15
   1400026fa:	ret    
   1400026fb:	int3   
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	int3   
   140002701:	int3   
   140002702:	int3   
   140002703:	int3   
   140002704:	int3   
   140002705:	int3   
   140002706:	int3   
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	mov    QWORD PTR [rsp+0x8],rbx
   140002715:	mov    QWORD PTR [rsp+0x10],rsi
   14000271a:	push   rdi
   14000271b:	sub    rsp,0x20
   14000271f:	xor    eax,eax
   140002721:	xor    edi,edi
   140002723:	mov    esi,r9d
   140002726:	mov    rbx,r8
   140002729:	test   r9d,r9d
   14000272c:	je     0x14000274f
   14000272e:	test   eax,eax
   140002730:	js     0x14000274f
   140002732:	mov    ecx,DWORD PTR [rbx]
   140002734:	test   ecx,ecx
   140002736:	je     0x140002745
   140002738:	call   QWORD PTR [rip+0x4bb2]        # 0x1400072f0
   14000273e:	test   eax,eax
   140002740:	js     0x140002745
   140002742:	and    DWORD PTR [rbx],0x0
   140002745:	inc    edi
   140002747:	add    rbx,0x4
   14000274b:	cmp    edi,esi
   14000274d:	jb     0x14000272e
   14000274f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002754:	mov    rsi,QWORD PTR [rsp+0x38]
   140002759:	add    rsp,0x20
   14000275d:	pop    rdi
   14000275e:	ret    
   14000275f:	int3   
   140002760:	int3   
   140002761:	int3   
   140002762:	int3   
   140002763:	int3   
   140002764:	int3   
   140002765:	int3   
   140002766:	int3   
   140002767:	int3   
   140002768:	int3   
   140002769:	int3   
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	mov    rax,rsp
   140002773:	mov    QWORD PTR [rax+0x8],rbx
   140002777:	mov    QWORD PTR [rax+0x10],rbp
   14000277b:	mov    QWORD PTR [rax+0x18],rsi
   14000277f:	mov    QWORD PTR [rax+0x20],rdi
   140002783:	push   r13
   140002785:	push   r14
   140002787:	push   r15
   140002789:	sub    rsp,0x20
   14000278d:	mov    ebx,DWORD PTR [rsp+0x60]
   140002791:	mov    edi,0x8
   140002796:	mov    eax,edi
   140002798:	mov    r13,r9
   14000279b:	mul    rbx
   14000279e:	lea    r14,[rdi-0x9]
   1400027a2:	mov    rsi,r8
   1400027a5:	cmovo  rax,r14
   1400027a9:	mov    rcx,rax
   1400027ac:	call   QWORD PTR [rip+0x4a2e]        # 0x1400071e0
   1400027b2:	mov    rbp,rax
   1400027b5:	mov    eax,edi
   1400027b7:	mul    rbx
   1400027ba:	cmovo  rax,r14
   1400027be:	mov    rcx,rax
   1400027c1:	call   QWORD PTR [rip+0x4a19]        # 0x1400071e0
   1400027c7:	xor    r9d,r9d
   1400027ca:	mov    r14,rax
   1400027cd:	mov    ebx,r9d
   1400027d0:	test   rbp,rbp
   1400027d3:	je     0x140002866
   1400027d9:	test   rax,rax
   1400027dc:	je     0x140002866
   1400027e2:	mov    edi,r9d
   1400027e5:	cmp    DWORD PTR [rsp+0x60],r9d
   1400027ea:	jbe    0x140002834
   1400027ec:	mov    r15,rbp
   1400027ef:	sub    r15,rsi
   1400027f2:	test   ebx,ebx
   1400027f4:	js     0x14000284a
   1400027f6:	lea    rax,[rip+0xb83]        # 0x140003380
   1400027fd:	or     rdx,0xffffffffffffffff
   140002801:	mov    QWORD PTR [r15+rsi*1],rax
   140002805:	lea    r8,[r14+rdi*8]
   140002809:	mov    rcx,QWORD PTR [rsi]
   14000280c:	inc    rdx
   14000280f:	cmp    WORD PTR [rcx+rdx*2],r9w
   140002814:	jne    0x14000280c
   140002816:	call   QWORD PTR [rip+0x4954]        # 0x140007170
   14000281c:	inc    edi
   14000281e:	add    rsi,0x8
   140002822:	mov    ebx,eax
   140002824:	mov    r9d,0x0
   14000282a:	cmp    edi,DWORD PTR [rsp+0x60]
   14000282e:	jb     0x1400027f2
   140002830:	test   eax,eax
   140002832:	js     0x14000284a
   140002834:	mov    r8d,DWORD PTR [rsp+0x60]
   140002839:	mov    r9,r13
   14000283c:	mov    rdx,rbp
   14000283f:	mov    rcx,r14
   140002842:	call   QWORD PTR [rip+0x4910]        # 0x140007158
   140002848:	mov    ebx,eax
   14000284a:	test   edi,edi
   14000284c:	je     0x14000286b
   14000284e:	mov    rsi,r14
   140002851:	mov    rcx,QWORD PTR [rsi]
   140002854:	call   QWORD PTR [rip+0x4936]        # 0x140007190
   14000285a:	lea    rsi,[rsi+0x8]
   14000285e:	sub    rdi,0x1
   140002862:	jne    0x140002851
   140002864:	jmp    0x14000286b
   140002866:	mov    ebx,0x8007000e
   14000286b:	mov    rcx,rbp
   14000286e:	call   QWORD PTR [rip+0x4964]        # 0x1400071d8
   140002874:	mov    rcx,r14
   140002877:	call   QWORD PTR [rip+0x495b]        # 0x1400071d8
   14000287d:	mov    rbp,QWORD PTR [rsp+0x48]
   140002882:	mov    eax,ebx
   140002884:	mov    rbx,QWORD PTR [rsp+0x40]
   140002889:	mov    rsi,QWORD PTR [rsp+0x50]
   14000288e:	mov    rdi,QWORD PTR [rsp+0x58]
   140002893:	add    rsp,0x20
   140002897:	pop    r15
   140002899:	pop    r14
   14000289b:	pop    r13
   14000289d:	ret    
   14000289e:	int3   
   14000289f:	int3   
   1400028a0:	int3   
   1400028a1:	int3   
   1400028a2:	int3   
   1400028a3:	int3   
   1400028a4:	int3   
   1400028a5:	int3   
   1400028a6:	int3   
   1400028a7:	int3   
   1400028a8:	int3   
   1400028a9:	int3   
   1400028aa:	int3   
   1400028ab:	int3   
   1400028ac:	int3   
   1400028ad:	int3   
   1400028ae:	int3   
   1400028af:	int3   
   1400028b0:	sub    rsp,0x28
   1400028b4:	mov    rcx,r8
   1400028b7:	call   QWORD PTR [rip+0x48a3]        # 0x140007160
   1400028bd:	xor    eax,eax
   1400028bf:	add    rsp,0x28
   1400028c3:	ret    
   1400028c4:	int3   
   1400028c5:	int3   
   1400028c6:	int3   
   1400028c7:	int3   
   1400028c8:	int3   
   1400028c9:	int3   
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	rex.W jmp QWORD PTR [rip+0x4a21]        # 0x1400072f8
   1400028d7:	int3   
   1400028d8:	int3   
   1400028d9:	int3   
   1400028da:	int3   
   1400028db:	int3   
   1400028dc:	int3   
   1400028dd:	int3   
   1400028de:	int3   
   1400028df:	int3   
   1400028e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400028ea:	push   rdi
   1400028eb:	sub    rsp,0x20
   1400028ef:	mov    rdi,rcx
   1400028f2:	call   QWORD PTR [rip+0x4a08]        # 0x140007300
   1400028f8:	mov    esi,eax
   1400028fa:	test   eax,eax
   1400028fc:	jne    0x140002917
   1400028fe:	mov    rdi,QWORD PTR [rdi+0x8]
   140002902:	mov    rdx,QWORD PTR [rdi]
   140002905:	mov    rbx,QWORD PTR [rdx+0x8]
   140002909:	mov    rcx,rbx
   14000290c:	call   QWORD PTR [rip+0x4a16]        # 0x140007328
   140002912:	mov    rcx,rdi
   140002915:	call   rbx
   140002917:	mov    rbx,QWORD PTR [rsp+0x30]
   14000291c:	mov    eax,esi
   14000291e:	mov    rsi,QWORD PTR [rsp+0x38]
   140002923:	add    rsp,0x20
   140002927:	pop    rdi
   140002928:	ret    
   140002929:	int3   
   14000292a:	int3   
   14000292b:	int3   
   14000292c:	int3   
   14000292d:	int3   
   14000292e:	int3   
   14000292f:	int3   
   140002930:	xor    eax,eax
   140002932:	ret    
   140002933:	int3   
   140002934:	int3   
   140002935:	int3   
   140002936:	int3   
   140002937:	int3   
   140002938:	int3   
   140002939:	int3   
   14000293a:	int3   
   14000293b:	int3   
   14000293c:	mov    QWORD PTR [rsp+0x8],rbx
   140002941:	mov    QWORD PTR [rsp+0x10],rsi
   140002946:	push   rdi
   140002947:	sub    rsp,0x20
   14000294b:	mov    rsi,QWORD PTR [rcx+0x8]
   14000294f:	lea    rax,[rip+0x6122]        # 0x140008a78
   140002956:	mov    QWORD PTR [rcx],rax
   140002959:	mov    rdi,rcx
   14000295c:	test   rsi,rsi
   14000295f:	je     0x140002985
   140002961:	cmp    BYTE PTR [rsi+0x8],0x0
   140002965:	je     0x140002980
   140002967:	mov    rax,QWORD PTR [rsi]
   14000296a:	mov    rbx,QWORD PTR [rax]
   14000296d:	mov    rcx,rbx
   140002970:	call   QWORD PTR [rip+0x49b2]        # 0x140007328
   140002976:	mov    edx,0x1
   14000297b:	mov    rcx,rsi
   14000297e:	call   rbx
   140002980:	and    QWORD PTR [rdi+0x8],0x0
   140002985:	lea    rax,[rip+0x6084]        # 0x140008a10
   14000298c:	mov    r8b,0x1
   14000298f:	mov    rcx,rdi
   140002992:	mov    QWORD PTR [rdi],rax
   140002995:	call   0x1400018f0
   14000299a:	and    QWORD PTR [rip+0xa986],0x0        # 0x14000d328
   1400029a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029a7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400029ac:	mov    BYTE PTR [rip+0xaaa5],0x0        # 0x14000d458
   1400029b3:	add    rsp,0x20
   1400029b7:	pop    rdi
   1400029b8:	ret    
   1400029b9:	int3   
   1400029ba:	int3   
   1400029bb:	int3   
   1400029bc:	int3   
   1400029bd:	int3   
   1400029be:	int3   
   1400029bf:	int3   
   1400029c0:	mov    eax,0x1
   1400029c5:	lock xadd DWORD PTR [rip+0xa953],eax        # 0x14000d320
   1400029cd:	inc    eax
   1400029cf:	ret    
   1400029d0:	int3   
   1400029d1:	int3   
   1400029d2:	int3   
   1400029d3:	int3   
   1400029d4:	int3   
   1400029d5:	int3   
   1400029d6:	int3   
   1400029d7:	int3   
   1400029d8:	int3   
   1400029d9:	int3   
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	or     eax,0xffffffff
   1400029e3:	lock xadd DWORD PTR [rip+0xa935],eax        # 0x14000d320
   1400029eb:	dec    eax
   1400029ed:	ret    
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	int3   
   1400029f1:	int3   
   1400029f2:	int3   
   1400029f3:	int3   
   1400029f4:	int3   
   1400029f5:	int3   
   1400029f6:	int3   
   1400029f7:	int3   
   1400029f8:	int3   
   1400029f9:	int3   
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	sub    rsp,0x28
   140002a04:	xor    edx,edx
   140002a06:	mov    ecx,0x80004001
   140002a0b:	call   QWORD PTR [rip+0x4727]        # 0x140007138
   140002a11:	mov    eax,0x80004001
   140002a16:	add    rsp,0x28
   140002a1a:	ret    
   140002a1b:	int3   
   140002a1c:	int3   
   140002a1d:	int3   
   140002a1e:	int3   
   140002a1f:	int3   
   140002a20:	int3   
   140002a21:	int3   
   140002a22:	int3   
   140002a23:	int3   
   140002a24:	int3   
   140002a25:	int3   
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	rex push rbx
   140002a32:	sub    rsp,0x20
   140002a36:	mov    DWORD PTR [rcx+0x14],0xc0000001
   140002a3d:	mov    rbx,rcx
   140002a40:	test   dl,0x1
   140002a43:	je     0x140002a4b
   140002a45:	call   QWORD PTR [rip+0x478d]        # 0x1400071d8
   140002a4b:	mov    rax,rbx
   140002a4e:	add    rsp,0x20
   140002a52:	pop    rbx
   140002a53:	ret    
   140002a54:	int3   
   140002a55:	int3   
   140002a56:	int3   
   140002a57:	int3   
   140002a58:	int3   
   140002a59:	int3   
   140002a5a:	int3   
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	mov    QWORD PTR [rsp+0x8],rbx
   140002a65:	push   rdi
   140002a66:	sub    rsp,0x20
   140002a6a:	mov    ebx,edx
   140002a6c:	mov    rdi,rcx
   140002a6f:	call   0x14000293c
   140002a74:	test   bl,0x1
   140002a77:	je     0x140002a82
   140002a79:	mov    rcx,rdi
   140002a7c:	call   QWORD PTR [rip+0x4756]        # 0x1400071d8
   140002a82:	mov    rax,rdi
   140002a85:	mov    rbx,QWORD PTR [rsp+0x30]
   140002a8a:	add    rsp,0x20
   140002a8e:	pop    rdi
   140002a8f:	ret    
   140002a90:	int3   
   140002a91:	int3   
   140002a92:	int3   
   140002a93:	int3   
   140002a94:	int3   
   140002a95:	int3   
   140002a96:	int3   
   140002a97:	int3   
   140002a98:	int3   
   140002a99:	int3   
   140002a9a:	int3   
   140002a9b:	int3   
   140002a9c:	int3   
   140002a9d:	int3   
   140002a9e:	int3   
   140002a9f:	int3   
   140002aa0:	mov    QWORD PTR [rsp+0x8],rbx
   140002aa5:	push   rdi
   140002aa6:	sub    rsp,0x20
   140002aaa:	lea    rax,[rip+0x5f5f]        # 0x140008a10
   140002ab1:	mov    r8b,0x1
   140002ab4:	mov    QWORD PTR [rcx],rax
   140002ab7:	mov    ebx,edx
   140002ab9:	mov    rdi,rcx
   140002abc:	call   0x1400018f0
   140002ac1:	and    QWORD PTR [rip+0xa85f],0x0        # 0x14000d328
   140002ac9:	mov    BYTE PTR [rip+0xa988],0x0        # 0x14000d458
   140002ad0:	test   bl,0x1
   140002ad3:	je     0x140002ade
   140002ad5:	mov    rcx,rdi
   140002ad8:	call   QWORD PTR [rip+0x46fa]        # 0x1400071d8
   140002ade:	mov    rax,rdi
   140002ae1:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ae6:	add    rsp,0x20
   140002aea:	pop    rdi
   140002aeb:	ret    
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	int3   
   140002af1:	int3   
   140002af2:	int3   
   140002af3:	int3   
   140002af4:	int3   
   140002af5:	int3   
   140002af6:	int3   
   140002af7:	int3   
   140002af8:	int3   
   140002af9:	int3   
   140002afa:	int3   
   140002afb:	int3   
   140002afc:	int3   
   140002afd:	int3   
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	rex push rbx
   140002b02:	sub    rsp,0x20
   140002b06:	lea    rax,[rip+0x5eeb]        # 0x1400089f8
   140002b0d:	mov    rbx,rcx
   140002b10:	mov    QWORD PTR [rcx],rax
   140002b13:	test   dl,0x1
   140002b16:	je     0x140002b1e
   140002b18:	call   QWORD PTR [rip+0x46ba]        # 0x1400071d8
   140002b1e:	mov    rax,rbx
   140002b21:	add    rsp,0x20
   140002b25:	pop    rbx
   140002b26:	ret    
   140002b27:	int3   
   140002b28:	int3   
   140002b29:	int3   
   140002b2a:	int3   
   140002b2b:	int3   
   140002b2c:	int3   
   140002b2d:	int3   
   140002b2e:	int3   
   140002b2f:	int3   
   140002b30:	mov    rax,rsp
   140002b33:	mov    QWORD PTR [rax+0x8],rbx
   140002b37:	mov    QWORD PTR [rax+0x10],rbp
   140002b3b:	mov    QWORD PTR [rax+0x18],rsi
   140002b3f:	mov    QWORD PTR [rax+0x20],rdi
   140002b43:	push   r14
   140002b45:	sub    rsp,0x30
   140002b49:	and    QWORD PTR [rax-0x18],0x0
   140002b4e:	mov    r14,rcx
   140002b51:	mov    ecx,0x18
   140002b56:	mov    rsi,r9
   140002b59:	mov    rbp,r8
   140002b5c:	call   QWORD PTR [rip+0x467e]        # 0x1400071e0
   140002b62:	mov    rbx,rax
   140002b65:	test   rax,rax
   140002b68:	je     0x140002c33
   140002b6e:	lea    rdi,[rip+0x5dcb]        # 0x140008940
   140002b75:	mov    DWORD PTR [rax+0xc],0x1
   140002b7c:	mov    rcx,QWORD PTR [rdi+0x8]
   140002b80:	mov    DWORD PTR [rax+0x14],0x4
   140002b87:	mov    QWORD PTR [rax],rdi
   140002b8a:	call   QWORD PTR [rip+0x4798]        # 0x140007328
   140002b90:	mov    rcx,rbx
   140002b93:	call   QWORD PTR [rdi+0x8]
   140002b96:	mov    rax,QWORD PTR [rbx]
   140002b99:	mov    QWORD PTR [rsp+0x20],rbx
   140002b9e:	mov    rdi,QWORD PTR [rax+0x10]
   140002ba2:	mov    rcx,rdi
   140002ba5:	call   QWORD PTR [rip+0x477d]        # 0x140007328
   140002bab:	mov    rcx,rbx
   140002bae:	call   rdi
   140002bb0:	mov    eax,DWORD PTR [r14]
   140002bb3:	mov    DWORD PTR [rbx+0x14],eax
   140002bb6:	mov    rax,QWORD PTR [rbx]
   140002bb9:	mov    rdi,QWORD PTR [rax]
   140002bbc:	mov    rcx,rdi
   140002bbf:	call   QWORD PTR [rip+0x4763]        # 0x140007328
   140002bc5:	mov    r8,rsi
   140002bc8:	mov    rdx,rbp
   140002bcb:	mov    rcx,rbx
   140002bce:	call   rdi
   140002bd0:	test   BYTE PTR [r14],0x1
   140002bd4:	mov    esi,eax
   140002bd6:	je     0x140002c17
   140002bd8:	test   eax,eax
   140002bda:	js     0x140002c13
   140002bdc:	test   BYTE PTR [r14],0x4
   140002be0:	je     0x140002c0f
   140002be2:	mov    rax,QWORD PTR [rip+0xa73f]        # 0x14000d328
   140002be9:	mov    rcx,QWORD PTR [rax]
   140002bec:	lea    rax,[rip+0xfffffffffffffcdd]        # 0x1400028d0
   140002bf3:	cmp    QWORD PTR [rcx+0x8],rax
   140002bf7:	jne    0x140002c01
   140002bf9:	call   QWORD PTR [rip+0x46f9]        # 0x1400072f8
   140002bff:	jmp    0x140002c17
   140002c01:	lock inc DWORD PTR [rip+0xa718]        # 0x14000d320
   140002c08:	mov    rbx,QWORD PTR [rsp+0x20]
   140002c0d:	jmp    0x140002c17
   140002c0f:	xor    ebx,ebx
   140002c11:	jmp    0x140002c17
   140002c13:	and    DWORD PTR [rbx+0x14],0xfffffffa
   140002c17:	test   rbx,rbx
   140002c1a:	je     0x140002c38
   140002c1c:	mov    rax,QWORD PTR [rbx]
   140002c1f:	mov    rdi,QWORD PTR [rax+0x10]
   140002c23:	mov    rcx,rdi
   140002c26:	call   QWORD PTR [rip+0x46fc]        # 0x140007328
   140002c2c:	mov    rcx,rbx
   140002c2f:	call   rdi
   140002c31:	jmp    0x140002c38
   140002c33:	mov    esi,0x8007000e
   140002c38:	mov    rbx,QWORD PTR [rsp+0x40]
   140002c3d:	mov    eax,esi
   140002c3f:	mov    rsi,QWORD PTR [rsp+0x50]
   140002c44:	mov    rbp,QWORD PTR [rsp+0x48]
   140002c49:	mov    rdi,QWORD PTR [rsp+0x58]
   140002c4e:	add    rsp,0x30
   140002c52:	pop    r14
   140002c54:	ret    
   140002c55:	int3   
   140002c56:	int3   
   140002c57:	int3   
   140002c58:	int3   
   140002c59:	int3   
   140002c5a:	int3   
   140002c5b:	int3   
   140002c5c:	mov    QWORD PTR [rsp+0x10],rdx
   140002c61:	mov    QWORD PTR [rsp+0x8],rcx
   140002c66:	push   rbx
   140002c67:	push   rbp
   140002c68:	push   rsi
   140002c69:	push   rdi
   140002c6a:	push   r12
   140002c6c:	push   r13
   140002c6e:	push   r14
   140002c70:	push   r15
   140002c72:	sub    rsp,0x48
   140002c76:	xor    ebx,ebx
   140002c78:	lea    r14,[rip+0x80f1]        # 0x14000ad70
   140002c7f:	lea    rax,[rip+0x80f2]        # 0x14000ad78
   140002c86:	mov    r13,rcx
   140002c89:	lea    rbp,[rip+0x80ef]        # 0x14000ad7f
   140002c90:	mov    esi,ebx
   140002c92:	sub    rbp,r14
   140002c95:	mov    r12d,ebx
   140002c98:	shr    rbp,0x3
   140002c9c:	mov    edx,ebx
   140002c9e:	cmp    r14,rax
   140002ca1:	mov    r15d,0x8007000e
   140002ca7:	mov    rax,r14
   140002caa:	cmova  rbp,rbx
   140002cae:	or     rdi,0xffffffffffffffff
   140002cb2:	test   rbp,rbp
   140002cb5:	je     0x140002f18
   140002cbb:	cmp    QWORD PTR [rax],rbx
   140002cbe:	je     0x140002cc3
   140002cc0:	inc    r12d
   140002cc3:	add    rax,0x8
   140002cc7:	inc    rdx
   140002cca:	cmp    rdx,rbp
   140002ccd:	jb     0x140002cbb
   140002ccf:	test   r12d,r12d
   140002cd2:	je     0x140002f18
   140002cd8:	mov    ebx,r12d
   140002cdb:	mov    eax,0x4
   140002ce0:	mul    rbx
   140002ce3:	cmovo  rax,rdi
   140002ce7:	mov    rcx,rax
   140002cea:	call   QWORD PTR [rip+0x44f0]        # 0x1400071e0
   140002cf0:	mov    QWORD PTR [rsp+0xa0],rax
   140002cf8:	mov    eax,0x8
   140002cfd:	mul    rbx
   140002d00:	cmovo  rax,rdi
   140002d04:	mov    rcx,rax
   140002d07:	call   QWORD PTR [rip+0x44d3]        # 0x1400071e0
   140002d0d:	mov    r13,rax
   140002d10:	mov    QWORD PTR [rsp+0xa8],rax
   140002d18:	mov    eax,0x10
   140002d1d:	mul    rbx
   140002d20:	cmovo  rax,rdi
   140002d24:	mov    rcx,rax
   140002d27:	call   QWORD PTR [rip+0x44b3]        # 0x1400071e0
   140002d2d:	mov    rdx,QWORD PTR [rsp+0xa0]
   140002d35:	xor    ebx,ebx
   140002d37:	mov    QWORD PTR [rsp+0x30],rax
   140002d3c:	mov    rcx,rax
   140002d3f:	test   rdx,rdx
   140002d42:	je     0x140002edf
   140002d48:	test   r13,r13
   140002d4b:	je     0x140002edf
   140002d51:	test   rax,rax
   140002d54:	je     0x140002edf
   140002d5a:	lea    rax,[rip+0x8017]        # 0x14000ad78
   140002d61:	mov    edi,ebx
   140002d63:	mov    r15,r14
   140002d66:	cmp    r14,rax
   140002d69:	jae    0x140002e28
   140002d6f:	lea    rdx,[rip+0x8002]        # 0x14000ad78
   140002d76:	test   esi,esi
   140002d78:	js     0x140002ea8
   140002d7e:	mov    r13,QWORD PTR [r15]
   140002d81:	test   r13,r13
   140002d84:	je     0x140002df5
   140002d86:	mov    DWORD PTR [rsp+0x98],0x2
   140002d91:	mov    QWORD PTR [rsp+0x38],rbx
   140002d96:	mov    rbx,QWORD PTR [r13+0x0]
   140002d9a:	mov    rcx,rbx
   140002d9d:	call   QWORD PTR [rip+0x4585]        # 0x140007328
   140002da3:	lea    r9,[rsp+0x38]
   140002da8:	mov    rdx,r13
   140002dab:	lea    r8,[rip+0x5f0e]        # 0x140008cc0
   140002db2:	lea    rcx,[rsp+0x98]
   140002dba:	call   rbx
   140002dbc:	mov    r13,QWORD PTR [rsp+0xa8]
   140002dc4:	xor    ebx,ebx
   140002dc6:	mov    esi,eax
   140002dc8:	test   eax,eax
   140002dca:	js     0x140002dff
   140002dcc:	mov    rcx,QWORD PTR [rsp+0x38]
   140002dd1:	mov    r8d,edi
   140002dd4:	mov    QWORD PTR [r13+r8*8+0x0],rcx
   140002dd9:	add    r8,r8
   140002ddc:	mov    rcx,QWORD PTR [r15]
   140002ddf:	inc    edi
   140002de1:	mov    rdx,QWORD PTR [rcx+0x8]
   140002de5:	mov    rcx,QWORD PTR [rsp+0x30]
   140002dea:	movups xmm0,XMMWORD PTR [rdx]
   140002ded:	movdqu XMMWORD PTR [rcx+r8*8],xmm0
   140002df3:	jmp    0x140002e04
   140002df5:	mov    r13,QWORD PTR [rsp+0xa8]
   140002dfd:	jmp    0x140002e0b
   140002dff:	mov    rcx,QWORD PTR [rsp+0x30]
   140002e04:	lea    rdx,[rip+0x7f6d]        # 0x14000ad78
   140002e0b:	add    r15,0x8
   140002e0f:	cmp    r15,rdx
   140002e12:	jb     0x140002d76
   140002e18:	test   esi,esi
   140002e1a:	js     0x140002ea8
   140002e20:	mov    rdx,QWORD PTR [rsp+0xa0]
   140002e28:	mov    r10,QWORD PTR [rsp+0x90]
   140002e30:	lea    r8,[rip+0xfffffffffffff819]        # 0x140002650
   140002e37:	mov    rax,QWORD PTR [r10]
   140002e3a:	cmp    QWORD PTR [rax+0x50],r8
   140002e3e:	jne    0x140002e5e
   140002e40:	mov    r8,rcx
   140002e43:	mov    DWORD PTR [rsp+0x28],r12d
   140002e48:	mov    QWORD PTR [rsp+0x20],rdx
   140002e4d:	mov    r9,r13
   140002e50:	xor    edx,edx
   140002e52:	mov    rcx,r10
   140002e55:	call   0x140002650
   140002e5a:	mov    esi,eax
   140002e5c:	jmp    0x140002e6d
   140002e5e:	mov    esi,0x80004001
   140002e63:	xor    edx,edx
   140002e65:	mov    ecx,esi
   140002e67:	call   QWORD PTR [rip+0x42cb]        # 0x140007138
   140002e6d:	mov    r15,QWORD PTR [rsp+0xa0]
   140002e75:	test   esi,esi
   140002e77:	js     0x140002eb0
   140002e79:	mov    edi,ebx
   140002e7b:	mov    rdx,rbx
   140002e7e:	test   rbp,rbp
   140002e81:	je     0x140002eb0
   140002e83:	mov    rcx,QWORD PTR [r14]
   140002e86:	test   rcx,rcx
   140002e89:	je     0x140002e9a
   140002e8b:	mov    rcx,QWORD PTR [rcx+0x18]
   140002e8f:	mov    eax,edi
   140002e91:	inc    edi
   140002e93:	mov    eax,DWORD PTR [r15+rax*4]
   140002e97:	mov    DWORD PTR [rcx+0x8],eax
   140002e9a:	add    r14,0x8
   140002e9e:	inc    rdx
   140002ea1:	cmp    rdx,rbp
   140002ea4:	jb     0x140002e83
   140002ea6:	jmp    0x140002eb0
   140002ea8:	mov    r15,QWORD PTR [rsp+0xa0]
   140002eb0:	test   edi,edi
   140002eb2:	je     0x140002ee5
   140002eb4:	mov    r14,r13
   140002eb7:	mov    ebp,edi
   140002eb9:	mov    rdi,QWORD PTR [r14]
   140002ebc:	mov    rax,QWORD PTR [rdi]
   140002ebf:	mov    rbx,QWORD PTR [rax+0x10]
   140002ec3:	mov    rcx,rbx
   140002ec6:	call   QWORD PTR [rip+0x445c]        # 0x140007328
   140002ecc:	mov    rcx,rdi
   140002ecf:	call   rbx
   140002ed1:	lea    r14,[r14+0x8]
   140002ed5:	sub    rbp,0x1
   140002ed9:	jne    0x140002eb9
   140002edb:	xor    ebx,ebx
   140002edd:	jmp    0x140002ee5
   140002edf:	mov    esi,r15d
   140002ee2:	mov    r15,rdx
   140002ee5:	mov    rcx,r15
   140002ee8:	call   QWORD PTR [rip+0x42ea]        # 0x1400071d8
   140002eee:	mov    rcx,QWORD PTR [rsp+0x30]
   140002ef3:	call   QWORD PTR [rip+0x42df]        # 0x1400071d8
   140002ef9:	mov    rcx,r13
   140002efc:	call   QWORD PTR [rip+0x42d6]        # 0x1400071d8
   140002f02:	test   esi,esi
   140002f04:	js     0x14000304d
   140002f0a:	mov    r13,QWORD PTR [rsp+0x90]
   140002f12:	mov    r15d,0x8007000e
   140002f18:	lea    r14,[rip+0x7e61]        # 0x14000ad80
   140002f1f:	mov    eax,ebx
   140002f21:	lea    rcx,[rip+0x7e58]        # 0x14000ad80
   140002f28:	mov    rdx,rbx
   140002f2b:	lea    rdi,[rip+0x7e55]        # 0x14000ad87
   140002f32:	sub    rdi,r14
   140002f35:	shr    rdi,0x3
   140002f39:	cmp    r14,rcx
   140002f3c:	mov    rcx,r14
   140002f3f:	cmova  rdi,rbx
   140002f43:	test   rdi,rdi
   140002f46:	je     0x14000304d
   140002f4c:	cmp    QWORD PTR [rcx],rbx
   140002f4f:	je     0x140002f53
   140002f51:	inc    eax
   140002f53:	add    rcx,0x8
   140002f57:	inc    rdx
   140002f5a:	cmp    rdx,rdi
   140002f5d:	jb     0x140002f4c
   140002f5f:	test   eax,eax
   140002f61:	je     0x14000304d
   140002f67:	mov    ecx,eax
   140002f69:	mov    eax,0x8
   140002f6e:	mul    rcx
   140002f71:	mov    rcx,0xffffffffffffffff
   140002f78:	cmovo  rax,rcx
   140002f7c:	mov    rcx,rax
   140002f7f:	call   QWORD PTR [rip+0x425b]        # 0x1400071e0
   140002f85:	test   rax,rax
   140002f88:	mov    r12,rax
   140002f8b:	cmove  esi,r15d
   140002f8f:	test   esi,esi
   140002f91:	js     0x140003044
   140002f97:	mov    QWORD PTR [rsp+0x98],rbx
   140002f9f:	mov    esi,ebx
   140002fa1:	mov    rbp,rbx
   140002fa4:	mov    r15,r14
   140002fa7:	test   rdi,rdi
   140002faa:	je     0x140002fd9
   140002fac:	mov    rbx,QWORD PTR [r15]
   140002faf:	test   rbx,rbx
   140002fb2:	je     0x140002fcb
   140002fb4:	mov    rbx,QWORD PTR [rbx+0x8]
   140002fb8:	mov    rcx,rbx
   140002fbb:	call   QWORD PTR [rip+0x4367]        # 0x140007328
   140002fc1:	call   rbx
   140002fc3:	mov    ecx,esi
   140002fc5:	inc    esi
   140002fc7:	mov    QWORD PTR [r12+rcx*8],rax
   140002fcb:	add    r15,0x8
   140002fcf:	inc    rbp
   140002fd2:	cmp    rbp,rdi
   140002fd5:	jb     0x140002fac
   140002fd7:	xor    ebx,ebx
   140002fd9:	mov    rax,QWORD PTR [r13+0x0]
   140002fdd:	lea    rcx,[rip+0xfffffffffffff78c]        # 0x140002770
   140002fe4:	xor    edx,edx
   140002fe6:	cmp    QWORD PTR [rax+0x40],rcx
   140002fea:	jne    0x140003007
   140002fec:	lea    r9,[rsp+0x98]
   140002ff4:	mov    DWORD PTR [rsp+0x20],esi
   140002ff8:	mov    r8,r12
   140002ffb:	mov    rcx,r13
   140002ffe:	call   0x140002770
   140003003:	mov    esi,eax
   140003005:	jmp    0x140003014
   140003007:	mov    esi,0x80004001
   14000300c:	mov    ecx,esi
   14000300e:	call   QWORD PTR [rip+0x4124]        # 0x140007138
   140003014:	test   esi,esi
   140003016:	js     0x140003044
   140003018:	mov    rdx,rbx
   14000301b:	test   rdi,rdi
   14000301e:	je     0x140003044
   140003020:	mov    rcx,QWORD PTR [r14]
   140003023:	test   rcx,rcx
   140003026:	je     0x140003038
   140003028:	mov    rcx,QWORD PTR [rcx+0x18]
   14000302c:	mov    rax,QWORD PTR [rsp+0x98]
   140003034:	mov    QWORD PTR [rcx+0x8],rax
   140003038:	add    r14,0x8
   14000303c:	inc    rdx
   14000303f:	cmp    rdx,rdi
   140003042:	jb     0x140003020
   140003044:	mov    rcx,r12
   140003047:	call   QWORD PTR [rip+0x418b]        # 0x1400071d8
   14000304d:	mov    eax,esi
   14000304f:	add    rsp,0x48
   140003053:	pop    r15
   140003055:	pop    r14
   140003057:	pop    r13
   140003059:	pop    r12
   14000305b:	pop    rdi
   14000305c:	pop    rsi
   14000305d:	pop    rbp
   14000305e:	pop    rbx
   14000305f:	ret    
   140003060:	int3   
   140003061:	int3   
   140003062:	int3   
   140003063:	int3   
   140003064:	int3   
   140003065:	int3   
   140003066:	int3   
   140003067:	int3   
   140003068:	int3   
   140003069:	int3   
   14000306a:	int3   
   14000306b:	int3   
   14000306c:	int3   
   14000306d:	int3   
   14000306e:	int3   
   14000306f:	int3   
   140003070:	mov    QWORD PTR [rsp+0x8],rbx
   140003075:	mov    QWORD PTR [rsp+0x18],rbp
   14000307a:	push   rsi
   14000307b:	push   rdi
   14000307c:	push   r14
   14000307e:	sub    rsp,0x20
   140003082:	and    QWORD PTR [r9],0x0
   140003086:	mov    r14,r9
   140003089:	mov    rbp,r8
   14000308c:	test   rdx,rdx
   14000308f:	je     0x1400030a4
   140003091:	mov    ebx,0x80040110
   140003096:	xor    edx,edx
   140003098:	mov    ecx,ebx
   14000309a:	call   QWORD PTR [rip+0x4098]        # 0x140007138
   1400030a0:	mov    eax,ebx
   1400030a2:	jmp    0x140003102
   1400030a4:	and    QWORD PTR [rsp+0x48],0x0
   1400030aa:	lea    rcx,[rsp+0x48]
   1400030af:	call   0x1400034d0
   1400030b4:	mov    esi,eax
   1400030b6:	test   eax,eax
   1400030b8:	js     0x1400030db
   1400030ba:	mov    rbx,QWORD PTR [rsp+0x48]
   1400030bf:	mov    rax,QWORD PTR [rbx]
   1400030c2:	mov    rdi,QWORD PTR [rax]
   1400030c5:	mov    rcx,rdi
   1400030c8:	call   QWORD PTR [rip+0x425a]        # 0x140007328
   1400030ce:	mov    r8,r14
   1400030d1:	mov    rdx,rbp
   1400030d4:	mov    rcx,rbx
   1400030d7:	call   rdi
   1400030d9:	mov    esi,eax
   1400030db:	mov    rdi,QWORD PTR [rsp+0x48]
   1400030e0:	test   rdi,rdi
   1400030e3:	je     0x140003100
   1400030e5:	and    QWORD PTR [rsp+0x48],0x0
   1400030eb:	mov    rdx,QWORD PTR [rdi]
   1400030ee:	mov    rbx,QWORD PTR [rdx+0x10]
   1400030f2:	mov    rcx,rbx
   1400030f5:	call   QWORD PTR [rip+0x422d]        # 0x140007328
   1400030fb:	mov    rcx,rdi
   1400030fe:	call   rbx
   140003100:	mov    eax,esi
   140003102:	mov    rbx,QWORD PTR [rsp+0x40]
   140003107:	mov    rbp,QWORD PTR [rsp+0x50]
   14000310c:	add    rsp,0x20
   140003110:	pop    r14
   140003112:	pop    rdi
   140003113:	pop    rsi
   140003114:	ret    
   140003115:	int3   
   140003116:	int3   
   140003117:	int3   
   140003118:	int3   
   140003119:	int3   
   14000311a:	int3   
   14000311b:	int3   
   14000311c:	int3   
   14000311d:	int3   
   14000311e:	int3   
   14000311f:	int3   
   140003120:	rex push rbx
   140003122:	sub    rsp,0x20
   140003126:	mov    ebx,0x1
   14000312b:	lock xadd DWORD PTR [rcx+0xc],ebx
   140003130:	inc    ebx
   140003132:	test   BYTE PTR [rcx+0x14],0x6
   140003136:	jne    0x140003163
   140003138:	cmp    ebx,0x2
   14000313b:	jne    0x140003163
   14000313d:	mov    rax,QWORD PTR [rip+0xa1e4]        # 0x14000d328
   140003144:	mov    rcx,QWORD PTR [rax]
   140003147:	lea    rax,[rip+0xfffffffffffff782]        # 0x1400028d0
   14000314e:	cmp    QWORD PTR [rcx+0x8],rax
   140003152:	jne    0x14000315c
   140003154:	call   QWORD PTR [rip+0x419e]        # 0x1400072f8
   14000315a:	jmp    0x140003163
   14000315c:	lock inc DWORD PTR [rip+0xa1bd]        # 0x14000d320
   140003163:	mov    eax,ebx
   140003165:	add    rsp,0x20
   140003169:	pop    rbx
   14000316a:	ret    
   14000316b:	int3   
   14000316c:	int3   
   14000316d:	int3   
   14000316e:	int3   
   14000316f:	int3   
   140003170:	int3   
   140003171:	int3   
   140003172:	int3   
   140003173:	int3   
   140003174:	int3   
   140003175:	int3   
   140003176:	int3   
   140003177:	int3   
   140003178:	int3   
   140003179:	int3   
   14000317a:	int3   
   14000317b:	int3   
   14000317c:	int3   
   14000317d:	int3   
   14000317e:	int3   
   14000317f:	int3   
   140003180:	mov    QWORD PTR [rsp+0x8],rbx
   140003185:	mov    QWORD PTR [rsp+0x10],rsi
   14000318a:	mov    QWORD PTR [rsp+0x18],rdi
   14000318f:	push   r14
   140003191:	sub    rsp,0x20
   140003195:	mov    r14,rcx
   140003198:	or     esi,0xffffffff
   14000319b:	lock xadd DWORD PTR [rcx+0xc],esi
   1400031a0:	sub    esi,0x1
   1400031a3:	jne    0x1400031de
   1400031a5:	mov    eax,DWORD PTR [rcx+0x14]
   1400031a8:	and    eax,0x5
   1400031ab:	cmp    al,0x5
   1400031ad:	mov    rax,QWORD PTR [rcx]
   1400031b0:	sete   dil
   1400031b4:	mov    rbx,QWORD PTR [rax+0x28]
   1400031b8:	mov    rcx,rbx
   1400031bb:	call   QWORD PTR [rip+0x4167]        # 0x140007328
   1400031c1:	lea    edx,[rsi+0x1]
   1400031c4:	mov    rcx,r14
   1400031c7:	call   rbx
   1400031c9:	test   dil,dil
   1400031cc:	je     0x140003205
   1400031ce:	mov    rdi,QWORD PTR [rip+0xa153]        # 0x14000d328
   1400031d5:	mov    rax,QWORD PTR [rdi]
   1400031d8:	mov    rbx,QWORD PTR [rax+0x10]
   1400031dc:	jmp    0x1400031f7
   1400031de:	test   BYTE PTR [rcx+0x14],0x6
   1400031e2:	jne    0x140003205
   1400031e4:	cmp    esi,0x1
   1400031e7:	jne    0x140003205
   1400031e9:	mov    rdi,QWORD PTR [rip+0xa138]        # 0x14000d328
   1400031f0:	mov    rdx,QWORD PTR [rdi]
   1400031f3:	mov    rbx,QWORD PTR [rdx+0x10]
   1400031f7:	mov    rcx,rbx
   1400031fa:	call   QWORD PTR [rip+0x4128]        # 0x140007328
   140003200:	mov    rcx,rdi
   140003203:	call   rbx
   140003205:	mov    rbx,QWORD PTR [rsp+0x30]
   14000320a:	mov    eax,esi
   14000320c:	mov    rsi,QWORD PTR [rsp+0x38]
   140003211:	mov    rdi,QWORD PTR [rsp+0x40]
   140003216:	add    rsp,0x20
   14000321a:	pop    r14
   14000321c:	ret    
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	int3   
   140003221:	int3   
   140003222:	int3   
   140003223:	int3   
   140003224:	int3   
   140003225:	int3   
   140003226:	int3   
   140003227:	int3   
   140003228:	int3   
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	mov    QWORD PTR [rsp+0x8],rbx
   140003235:	mov    QWORD PTR [rsp+0x10],rsi
   14000323a:	push   rdi
   14000323b:	sub    rsp,0x20
   14000323f:	xor    edi,edi
   140003241:	mov    rsi,rcx
   140003244:	mov    QWORD PTR [r8],rdi
   140003247:	cmp    DWORD PTR [rdx],edi
   140003249:	jne    0x14000326c
   14000324b:	mov    eax,DWORD PTR [rip+0x5a83]        # 0x140008cd4
   140003251:	cmp    DWORD PTR [rdx+0x4],eax
   140003254:	jne    0x14000326c
   140003256:	mov    eax,DWORD PTR [rip+0x5a7c]        # 0x140008cd8
   14000325c:	cmp    DWORD PTR [rdx+0x8],eax
   14000325f:	jne    0x14000326c
   140003261:	mov    eax,DWORD PTR [rip+0x5a75]        # 0x140008cdc
   140003267:	cmp    DWORD PTR [rdx+0xc],eax
   14000326a:	je     0x140003292
   14000326c:	cmp    DWORD PTR [rdx],0x1
   14000326f:	jne    0x1400032ac
   140003271:	mov    eax,DWORD PTR [rip+0x5a4d]        # 0x140008cc4
   140003277:	cmp    DWORD PTR [rdx+0x4],eax
   14000327a:	jne    0x1400032ac
   14000327c:	mov    eax,DWORD PTR [rip+0x5a46]        # 0x140008cc8
   140003282:	cmp    DWORD PTR [rdx+0x8],eax
   140003285:	jne    0x1400032ac
   140003287:	mov    eax,DWORD PTR [rip+0x5a3f]        # 0x140008ccc
   14000328d:	cmp    DWORD PTR [rdx+0xc],eax
   140003290:	jne    0x1400032ac
   140003292:	mov    QWORD PTR [r8],rcx
   140003295:	mov    rax,QWORD PTR [rcx]
   140003298:	mov    rbx,QWORD PTR [rax+0x8]
   14000329c:	mov    rcx,rbx
   14000329f:	call   QWORD PTR [rip+0x4083]        # 0x140007328
   1400032a5:	mov    rcx,rsi
   1400032a8:	call   rbx
   1400032aa:	jmp    0x1400032b1
   1400032ac:	mov    edi,0x80004002
   1400032b1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032b6:	mov    eax,edi
   1400032b8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400032bd:	add    rsp,0x20
   1400032c1:	pop    rdi
   1400032c2:	ret    
   1400032c3:	int3   
   1400032c4:	int3   
   1400032c5:	int3   
   1400032c6:	int3   
   1400032c7:	int3   
   1400032c8:	int3   
   1400032c9:	int3   
   1400032ca:	int3   
   1400032cb:	int3   
   1400032cc:	int3   
   1400032cd:	int3   
   1400032ce:	int3   
   1400032cf:	int3   
   1400032d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400032d5:	push   rdi
   1400032d6:	sub    rsp,0x20
   1400032da:	mov    rdi,QWORD PTR [rip+0xa047]        # 0x14000d328
   1400032e1:	test   rdi,rdi
   1400032e4:	jne    0x1400032f9
   1400032e6:	mov    ebx,0x80004005
   1400032eb:	xor    edx,edx
   1400032ed:	mov    ecx,ebx
   1400032ef:	call   QWORD PTR [rip+0x3e43]        # 0x140007138
   1400032f5:	mov    eax,ebx
   1400032f7:	jmp    0x140003332
   1400032f9:	mov    rax,QWORD PTR [rdi]
   1400032fc:	test   edx,edx
   1400032fe:	je     0x14000331e
   140003300:	lea    rcx,[rip+0xfffffffffffff5c9]        # 0x1400028d0
   140003307:	cmp    QWORD PTR [rax+0x8],rcx
   14000330b:	jne    0x140003315
   14000330d:	call   QWORD PTR [rip+0x3fe5]        # 0x1400072f8
   140003313:	jmp    0x140003330
   140003315:	lock inc DWORD PTR [rip+0xa004]        # 0x14000d320
   14000331c:	jmp    0x140003330
   14000331e:	mov    rbx,QWORD PTR [rax+0x10]
   140003322:	mov    rcx,rbx
   140003325:	call   QWORD PTR [rip+0x3ffd]        # 0x140007328
   14000332b:	mov    rcx,rdi
   14000332e:	call   rbx
   140003330:	xor    eax,eax
   140003332:	mov    rbx,QWORD PTR [rsp+0x30]
   140003337:	add    rsp,0x20
   14000333b:	pop    rdi
   14000333c:	ret    
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	int3   
   140003341:	int3   
   140003342:	int3   
   140003343:	int3   
   140003344:	int3   
   140003345:	int3   
   140003346:	int3   
   140003347:	int3   
   140003348:	int3   
   140003349:	int3   
   14000334a:	int3   
   14000334b:	int3   
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	rex push rbx
   140003352:	sub    rsp,0x20
   140003356:	mov    rbx,QWORD PTR [rcx+0x10]
   14000335a:	mov    rcx,rbx
   14000335d:	call   QWORD PTR [rip+0x3fc5]        # 0x140007328
   140003363:	mov    rax,rbx
   140003366:	add    rsp,0x20
   14000336a:	pop    rbx
   14000336b:	rex.W jmp rax
   14000336e:	int3   
   14000336f:	int3   
   140003370:	int3   
   140003371:	int3   
   140003372:	int3   
   140003373:	int3   
   140003374:	int3   
   140003375:	int3   
   140003376:	int3   
   140003377:	int3   
   140003378:	int3   
   140003379:	int3   
   14000337a:	int3   
   14000337b:	int3   
   14000337c:	int3   
   14000337d:	int3   
   14000337e:	int3   
   14000337f:	int3   
   140003380:	mov    QWORD PTR [rsp+0x18],rbx
   140003385:	mov    QWORD PTR [rsp+0x20],rbp
   14000338a:	push   rsi
   14000338b:	push   rdi
   14000338c:	push   r14
   14000338e:	sub    rsp,0x70
   140003392:	mov    rax,QWORD PTR [rip+0x8c6f]        # 0x14000c008
   140003399:	xor    rax,rsp
   14000339c:	mov    QWORD PTR [rsp+0x60],rax
   1400033a1:	and    QWORD PTR [rdx],0x0
   1400033a5:	mov    rsi,rdx
   1400033a8:	mov    rbx,rcx
   1400033ab:	call   QWORD PTR [rip+0x3dcf]        # 0x140007180
   1400033b1:	test   eax,eax
   1400033b3:	jne    0x140003467
   1400033b9:	lea    rdx,[rsp+0x34]
   1400033be:	mov    rcx,rbx
   1400033c1:	call   QWORD PTR [rip+0x3dc1]        # 0x140007188
   1400033c7:	test   eax,eax
   1400033c9:	js     0x140003467
   1400033cf:	cmp    DWORD PTR [rsp+0x34],0x1
   1400033d4:	je     0x140003467
   1400033da:	xor    edx,edx
   1400033dc:	mov    rcx,rbx
   1400033df:	call   QWORD PTR [rip+0x3d93]        # 0x140007178
   1400033e5:	mov    rbp,rax
   1400033e8:	lea    rdi,[rip+0x7991]        # 0x14000ad80
   1400033ef:	lea    r14,[rip+0x798a]        # 0x14000ad80
   1400033f6:	cmp    rdi,r14
   1400033f9:	jae    0x140003456
   1400033fb:	mov    rbx,QWORD PTR [rdi]
   1400033fe:	test   rbx,rbx
   140003401:	je     0x140003432
   140003403:	mov    rbx,QWORD PTR [rbx+0x8]
   140003407:	mov    rcx,rbx
   14000340a:	call   QWORD PTR [rip+0x3f18]        # 0x140007328
   140003410:	call   rbx
   140003412:	mov    rcx,rbp
   140003415:	sub    rax,rbp
   140003418:	movzx  edx,WORD PTR [rcx]
   14000341b:	movzx  r8d,WORD PTR [rcx+rax*1]
   140003420:	sub    edx,r8d
   140003423:	jne    0x14000342e
   140003425:	add    rcx,0x2
   140003429:	test   r8d,r8d
   14000342c:	jne    0x140003418
   14000342e:	test   edx,edx
   140003430:	je     0x140003438
   140003432:	add    rdi,0x8
   140003436:	jmp    0x1400033f6
   140003438:	mov    r9,QWORD PTR [rdi]
   14000343b:	lea    rdx,[rsp+0x30]
   140003440:	mov    DWORD PTR [rsp+0x30],0x2
   140003448:	mov    QWORD PTR [rsp+0x20],rsi
   14000344d:	call   0x140001a1c
   140003452:	mov    ebx,eax
   140003454:	jmp    0x1400034a4
   140003456:	mov    ebx,0x80040111
   14000345b:	xor    edx,edx
   14000345d:	mov    ecx,ebx
   14000345f:	call   QWORD PTR [rip+0x3cd3]        # 0x140007138
   140003465:	jmp    0x1400034a4
   140003467:	movups xmm0,XMMWORD PTR [rip+0x57fa]        # 0x140008c68
   14000346e:	mov    ebx,0x80070057
   140003473:	lea    r8,[rsp+0x38]
   140003478:	movups xmm1,XMMWORD PTR [rip+0x57f9]        # 0x140008c78
   14000347f:	mov    edx,0x13
   140003484:	mov    ecx,ebx
   140003486:	movups XMMWORD PTR [rsp+0x38],xmm0
   14000348b:	movsd  xmm0,QWORD PTR [rip+0x57f5]        # 0x140008c88
   140003493:	movsd  QWORD PTR [rsp+0x58],xmm0
   140003499:	movups XMMWORD PTR [rsp+0x48],xmm1
   14000349e:	call   QWORD PTR [rip+0x3c8c]        # 0x140007130
   1400034a4:	mov    eax,ebx
   1400034a6:	mov    rcx,QWORD PTR [rsp+0x60]
   1400034ab:	xor    rcx,rsp
   1400034ae:	call   0x140004a00
   1400034b3:	lea    r11,[rsp+0x70]
   1400034b8:	mov    rbx,QWORD PTR [r11+0x30]
   1400034bc:	mov    rbp,QWORD PTR [r11+0x38]
   1400034c0:	mov    rsp,r11
   1400034c3:	pop    r14
   1400034c5:	pop    rdi
   1400034c6:	pop    rsi
   1400034c7:	ret    
   1400034c8:	int3   
   1400034c9:	int3   
   1400034ca:	int3   
   1400034cb:	int3   
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400034d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400034da:	push   rdi
   1400034db:	sub    rsp,0x20
   1400034df:	and    QWORD PTR [rcx],0x0
   1400034e3:	mov    rsi,rcx
   1400034e6:	mov    ecx,0x18
   1400034eb:	call   QWORD PTR [rip+0x3cef]        # 0x1400071e0
   1400034f1:	mov    rbx,rax
   1400034f4:	test   rax,rax
   1400034f7:	je     0x140003595
   1400034fd:	mov    DWORD PTR [rax+0x14],0x1
   140003504:	lea    rax,[rip+0x55fd]        # 0x140008b08
   14000350b:	mov    QWORD PTR [rbx],rax
   14000350e:	lea    rax,[rip+0x55cb]        # 0x140008ae0
   140003515:	mov    QWORD PTR [rbx+0x8],rax
   140003519:	mov    rax,QWORD PTR [rip+0x9e08]        # 0x14000d328
   140003520:	test   rax,rax
   140003523:	je     0x140003544
   140003525:	mov    rax,QWORD PTR [rax]
   140003528:	lea    rcx,[rip+0xfffffffffffff3a1]        # 0x1400028d0
   14000352f:	cmp    QWORD PTR [rax+0x8],rcx
   140003533:	jne    0x14000353d
   140003535:	call   QWORD PTR [rip+0x3dbd]        # 0x1400072f8
   14000353b:	jmp    0x140003544
   14000353d:	lock inc DWORD PTR [rip+0x9ddc]        # 0x14000d320
   140003544:	lea    rax,[rip+0x563d]        # 0x140008b88
   14000354b:	mov    QWORD PTR [rbx],rax
   14000354e:	lea    rax,[rip+0x560b]        # 0x140008b60
   140003555:	mov    QWORD PTR [rbx+0x8],rax
   140003559:	mov    rax,QWORD PTR [rbx]
   14000355c:	mov    rdi,QWORD PTR [rax]
   14000355f:	mov    rcx,rdi
   140003562:	call   QWORD PTR [rip+0x3dc0]        # 0x140007328
   140003568:	mov    r8,rsi
   14000356b:	lea    rdx,[rip+0x575e]        # 0x140008cd0
   140003572:	mov    rcx,rbx
   140003575:	call   rdi
   140003577:	mov    esi,eax
   140003579:	test   rbx,rbx
   14000357c:	je     0x14000359a
   14000357e:	mov    rcx,QWORD PTR [rbx]
   140003581:	mov    rdi,QWORD PTR [rcx+0x10]
   140003585:	mov    rcx,rdi
   140003588:	call   QWORD PTR [rip+0x3d9a]        # 0x140007328
   14000358e:	mov    rcx,rbx
   140003591:	call   rdi
   140003593:	jmp    0x14000359a
   140003595:	mov    esi,0x8007000e
   14000359a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000359f:	mov    eax,esi
   1400035a1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400035a6:	add    rsp,0x20
   1400035aa:	pop    rdi
   1400035ab:	ret    
   1400035ac:	int3   
   1400035ad:	int3   
   1400035ae:	int3   
   1400035af:	int3   
   1400035b0:	int3   
   1400035b1:	int3   
   1400035b2:	int3   
   1400035b3:	int3   
   1400035b4:	int3   
   1400035b5:	int3   
   1400035b6:	int3   
   1400035b7:	int3   
   1400035b8:	int3   
   1400035b9:	int3   
   1400035ba:	int3   
   1400035bb:	int3   
   1400035bc:	int3   
   1400035bd:	int3   
   1400035be:	int3   
   1400035bf:	int3   
   1400035c0:	rex push rbx
   1400035c2:	sub    rsp,0x20
   1400035c6:	mov    DWORD PTR [rcx+0xc],0xc0000001
   1400035cd:	mov    rbx,rcx
   1400035d0:	test   dl,0x1
   1400035d3:	je     0x1400035db
   1400035d5:	call   QWORD PTR [rip+0x3bfd]        # 0x1400071d8
   1400035db:	mov    rax,rbx
   1400035de:	add    rsp,0x20
   1400035e2:	pop    rbx
   1400035e3:	ret    
   1400035e4:	int3   
   1400035e5:	int3   
   1400035e6:	int3   
   1400035e7:	int3   
   1400035e8:	int3   
   1400035e9:	int3   
   1400035ea:	int3   
   1400035eb:	int3   
   1400035ec:	int3   
   1400035ed:	int3   
   1400035ee:	int3   
   1400035ef:	int3   
   1400035f0:	sub    rcx,0x8
   1400035f4:	jmp    0x1400025b0
   1400035f9:	int3   
   1400035fa:	int3   
   1400035fb:	int3   
   1400035fc:	int3   
   1400035fd:	int3   
   1400035fe:	int3   
   1400035ff:	int3   
   140003600:	sub    rcx,0x8
   140003604:	jmp    0x1400024d0
   140003609:	int3   
   14000360a:	int3   
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	sub    rcx,0x8
   140003614:	jmp    0x1400025d0
   140003619:	int3   
   14000361a:	int3   
   14000361b:	int3   
   14000361c:	int3   
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	rex push rbx
   140003622:	sub    rsp,0x20
   140003626:	lea    rax,[rip+0x56e3]        # 0x140008d10
   14000362d:	mov    r8d,0x1
   140003633:	lea    rdx,[rsp+0x30]
   140003638:	mov    QWORD PTR [rsp+0x30],rax
   14000363d:	mov    rbx,rcx
   140003640:	call   QWORD PTR [rip+0x3c72]        # 0x1400072b8
   140003646:	lea    rax,[rip+0x556b]        # 0x140008bb8
   14000364d:	mov    QWORD PTR [rbx],rax
   140003650:	mov    rax,rbx
   140003653:	add    rsp,0x20
   140003657:	pop    rbx
   140003658:	ret    
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	lea    rax,[rip+0x5551]        # 0x140008bb8
   140003667:	mov    QWORD PTR [rcx],rax
   14000366a:	rex.W jmp QWORD PTR [rip+0x3b7f]        # 0x1400071f0
   140003671:	int3   
   140003672:	int3   
   140003673:	int3   
   140003674:	int3   
   140003675:	int3   
   140003676:	int3   
   140003677:	int3   
   140003678:	int3   
   140003679:	int3   
   14000367a:	int3   
   14000367b:	int3   
   14000367c:	int3   
   14000367d:	int3   
   14000367e:	int3   
   14000367f:	int3   
   140003680:	mov    QWORD PTR [rsp+0x8],rbx
   140003685:	push   rdi
   140003686:	sub    rsp,0x20
   14000368a:	lea    rax,[rip+0x5527]        # 0x140008bb8
   140003691:	mov    ebx,edx
   140003693:	mov    QWORD PTR [rcx],rax
   140003696:	mov    rdi,rcx
   140003699:	call   QWORD PTR [rip+0x3b51]        # 0x1400071f0
   14000369f:	test   bl,0x1
   1400036a2:	je     0x1400036ad
   1400036a4:	mov    rcx,rdi
   1400036a7:	call   QWORD PTR [rip+0x3b2b]        # 0x1400071d8
   1400036ad:	mov    rax,rdi
   1400036b0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400036b5:	add    rsp,0x20
   1400036b9:	pop    rdi
   1400036ba:	ret    
   1400036bb:	int3   
   1400036bc:	int3   
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	int3   
   1400036c1:	int3   
   1400036c2:	int3   
   1400036c3:	int3   
   1400036c4:	sub    rsp,0x48
   1400036c8:	call   QWORD PTR [rip+0x3b12]        # 0x1400071e0
   1400036ce:	test   rax,rax
   1400036d1:	je     0x1400036d8
   1400036d3:	add    rsp,0x48
   1400036d7:	ret    
   1400036d8:	lea    rcx,[rsp+0x20]
   1400036dd:	call   0x140003620
   1400036e2:	lea    rdx,[rip+0x765f]        # 0x14000ad48
   1400036e9:	lea    rcx,[rsp+0x20]
   1400036ee:	call   0x140004b64
   1400036f3:	int3   
   1400036f4:	int3   
   1400036f5:	int3   
   1400036f6:	int3   
   1400036f7:	int3   
   1400036f8:	int3   
   1400036f9:	int3   
   1400036fa:	int3   
   1400036fb:	int3   
   1400036fc:	rex push rbx
   1400036fe:	sub    rsp,0x20
   140003702:	mov    rbx,rcx
   140003705:	call   QWORD PTR [rip+0x3ba5]        # 0x1400072b0
   14000370b:	lea    rax,[rip+0x54a6]        # 0x140008bb8
   140003712:	mov    QWORD PTR [rbx],rax
   140003715:	mov    rax,rbx
   140003718:	add    rsp,0x20
   14000371c:	pop    rbx
   14000371d:	ret    
   14000371e:	int3   
   14000371f:	int3   
   140003720:	int3   
   140003721:	int3   
   140003722:	int3   
   140003723:	int3   
   140003724:	rex.W jmp QWORD PTR [rip+0x3aad]        # 0x1400071d8
   14000372b:	int3   
   14000372c:	int3   
   14000372d:	int3   
   14000372e:	int3   
   14000372f:	int3   
   140003730:	int3   
   140003731:	int3   
   140003732:	int3   
   140003733:	int3   
   140003734:	rex push rdi
   140003736:	sub    rsp,0x60
   14000373a:	mov    rax,QWORD PTR [rsp+0x90]
   140003742:	or     rdx,0xffffffffffffffff
   140003746:	xor    r11d,r11d
   140003749:	mov    r10,rcx
   14000374c:	mov    r8d,0xe
   140003752:	test   rax,rax
   140003755:	je     0x140003779
   140003757:	cmp    WORD PTR [rax],r11w
   14000375b:	jne    0x140003762
   14000375d:	mov    ecx,r8d
   140003760:	jmp    0x14000377e
   140003762:	mov    rcx,rdx
   140003765:	inc    rcx
   140003768:	cmp    WORD PTR [rax+rcx*2],r11w
   14000376d:	jne    0x140003765
   14000376f:	lea    rcx,[rcx*2+0x2]
   140003777:	jmp    0x14000377e
   140003779:	mov    ecx,0xa
   14000377e:	lea    rdi,[rip+0x559b]        # 0x140008d20
   140003785:	test   rax,rax
   140003788:	je     0x140003794
   14000378a:	cmp    WORD PTR [rax],r11w
   14000378e:	cmove  rax,rdi
   140003792:	jmp    0x14000379b
   140003794:	lea    rax,[rip+0x5595]        # 0x140008d30
   14000379b:	test   r9,r9
   14000379e:	je     0x1400037ba
   1400037a0:	cmp    WORD PTR [r9],r11w
   1400037a4:	je     0x1400037c0
   1400037a6:	inc    rdx
   1400037a9:	cmp    WORD PTR [r9+rdx*2],r11w
   1400037ae:	jne    0x1400037a6
   1400037b0:	lea    r8,[rdx*2+0x2]
   1400037b8:	jmp    0x1400037c0
   1400037ba:	mov    r8d,0xa
   1400037c0:	test   r9,r9
   1400037c3:	je     0x1400037cf
   1400037c5:	cmp    WORD PTR [r9],r11w
   1400037c9:	cmove  r9,rdi
   1400037cd:	jmp    0x1400037d6
   1400037cf:	lea    r9,[rip+0x555a]        # 0x140008d30
   1400037d6:	mov    QWORD PTR [rsp+0x50],r11
   1400037db:	mov    edx,0x2b
   1400037e0:	mov    QWORD PTR [rsp+0x48],0x4
   1400037e9:	lea    r11,[rsp+0x98]
   1400037f1:	mov    QWORD PTR [rsp+0x40],r11
   1400037f6:	mov    QWORD PTR [rsp+0x38],rcx
   1400037fb:	mov    rcx,r10
   1400037fe:	mov    QWORD PTR [rsp+0x30],rax
   140003803:	mov    QWORD PTR [rsp+0x28],r8
   140003808:	lea    r8,[rip+0x5881]        # 0x140009090
   14000380f:	mov    QWORD PTR [rsp+0x20],r9
   140003814:	movzx  r9d,dx
   140003818:	call   QWORD PTR [rip+0x37e2]        # 0x140007000
   14000381e:	add    rsp,0x60
   140003822:	pop    rdi
   140003823:	ret    
   140003824:	int3   
   140003825:	int3   
   140003826:	int3   
   140003827:	int3   
   140003828:	int3   
   140003829:	int3   
   14000382a:	int3   
   14000382b:	int3   
   14000382c:	mov    rax,rsp
   14000382f:	push   rbp
   140003830:	push   rsi
   140003831:	push   rdi
   140003832:	push   r12
   140003834:	push   r13
   140003836:	push   r14
   140003838:	push   r15
   14000383a:	lea    rbp,[rax-0x68]
   14000383e:	sub    rsp,0x130
   140003845:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   14000384d:	mov    QWORD PTR [rax+0x20],rbx
   140003851:	mov    rax,QWORD PTR [rip+0x87b0]        # 0x14000c008
   140003858:	xor    rax,rsp
   14000385b:	mov    QWORD PTR [rbp+0x28],rax
   14000385f:	mov    QWORD PTR [rbp-0x18],r8
   140003863:	mov    QWORD PTR [rbp-0x20],rdx
   140003867:	mov    r13d,ecx
   14000386a:	mov    rax,QWORD PTR [rbp+0x90]
   140003871:	mov    QWORD PTR [rbp-0x50],rax
   140003875:	mov    rax,QWORD PTR [rbp+0x98]
   14000387c:	mov    QWORD PTR [rbp-0x40],rax
   140003880:	mov    r12,QWORD PTR [rbp+0xa0]
   140003887:	xor    ebx,ebx
   140003889:	mov    DWORD PTR [rbp-0x60],ebx
   14000388c:	mov    QWORD PTR [rbp-0x68],rbx
   140003890:	mov    QWORD PTR [rbp-0x58],rbx
   140003894:	xor    eax,eax
   140003896:	mov    QWORD PTR [rbp-0x2c],rax
   14000389a:	mov    DWORD PTR [rbp-0x30],ebx
   14000389d:	mov    esi,ebx
   14000389f:	mov    QWORD PTR [rbp-0x70],rbx
   1400038a3:	mov    edi,ebx
   1400038a5:	mov    QWORD PTR [rbp-0x80],rbx
   1400038a9:	mov    QWORD PTR [rbp-0x10],rbx
   1400038ad:	mov    r14d,ebx
   1400038b0:	mov    QWORD PTR [rbp-0x78],rbx
   1400038b4:	movups xmm0,XMMWORD PTR [rip+0x5485]        # 0x140008d40
   1400038bb:	movups XMMWORD PTR [rbp+0x0],xmm0
   1400038bf:	movups xmm1,XMMWORD PTR [rip+0x548a]        # 0x140008d50
   1400038c6:	movups XMMWORD PTR [rbp+0x10],xmm1
   1400038ca:	movzx  eax,WORD PTR [rip+0x548f]        # 0x140008d60
   1400038d1:	mov    WORD PTR [rbp+0x20],ax
   1400038d5:	lea    rax,[rip+0x8744]        # 0x14000c020
   1400038dc:	mov    rcx,QWORD PTR [rip+0x873d]        # 0x14000c020
   1400038e3:	cmp    rcx,rax
   1400038e6:	je     0x140003904
   1400038e8:	test   BYTE PTR [rcx+0x1c],0x4
   1400038ec:	je     0x140003904
   1400038ee:	mov    DWORD PTR [rsp+0x28],r9d
   1400038f3:	mov    QWORD PTR [rsp+0x20],r8
   1400038f8:	mov    r9,rdx
   1400038fb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400038ff:	call   0x140003734
   140003904:	lea    rax,[rbp-0x68]
   140003908:	mov    QWORD PTR [rsp+0x20],rax
   14000390d:	lea    r9,[rip+0x5754]        # 0x140009068
   140003914:	xor    edx,edx
   140003916:	lea    r8d,[rdx+0x4]
   14000391a:	lea    rcx,[rip+0x575f]        # 0x140009080
   140003921:	call   QWORD PTR [rip+0x39f1]        # 0x140007318
   140003927:	mov    r15d,eax
   14000392a:	test   eax,eax
   14000392c:	js     0x140003b62
   140003932:	mov    rbx,QWORD PTR [rbp-0x68]
   140003936:	mov    rax,QWORD PTR [rbx]
   140003939:	mov    r15,QWORD PTR [rax+0x18]
   14000393d:	mov    rcx,r15
   140003940:	call   QWORD PTR [rip+0x39e2]        # 0x140007328
   140003946:	lea    rdx,[rbp-0x58]
   14000394a:	mov    rcx,rbx
   14000394d:	call   r15
   140003950:	mov    r15d,eax
   140003953:	xor    ecx,ecx
   140003955:	test   eax,eax
   140003957:	js     0x140003b62
   14000395d:	or     rax,0xffffffffffffffff
   140003961:	inc    rax
   140003964:	cmp    WORD PTR [r12+rax*2],cx
   140003969:	jne    0x140003961
   14000396b:	lea    rcx,[rbp-0x80]
   14000396f:	test   rax,rax
   140003972:	je     0x1400039a3
   140003974:	mov    r8,r12
   140003977:	cmp    r13d,0x4
   14000397b:	jne    0x140003992
   14000397d:	mov    rbx,QWORD PTR [rbp-0x50]
   140003981:	mov    r9,rbx
   140003984:	lea    rdx,[rip+0x53e5]        # 0x140008d70
   14000398b:	call   0x14000400c
   140003990:	jmp    0x1400039b3
   140003992:	mov    r9d,r13d
   140003995:	lea    rdx,[rip+0x5484]        # 0x140008e20
   14000399c:	call   0x14000400c
   1400039a1:	jmp    0x1400039af
   1400039a3:	lea    rdx,[rip+0x56ce]        # 0x140009078
   1400039aa:	call   0x14000400c
   1400039af:	mov    rbx,QWORD PTR [rbp-0x50]
   1400039b3:	mov    r15d,eax
   1400039b6:	xor    r12d,r12d
   1400039b9:	test   eax,eax
   1400039bb:	js     0x140003b5e
   1400039c1:	lea    eax,[r13-0x4]
   1400039c5:	cmp    eax,0x2
   1400039c8:	jbe    0x1400039d7
   1400039ca:	cmp    r13d,0x2
   1400039ce:	lea    rdx,[rip+0x56a3]        # 0x140009078
   1400039d5:	jne    0x1400039de
   1400039d7:	lea    rdx,[rip+0x54f2]        # 0x140008ed0
   1400039de:	lea    rcx,[rbp-0x78]
   1400039e2:	call   0x14000400c
   1400039e7:	mov    r15d,eax
   1400039ea:	mov    rdi,QWORD PTR [rbp-0x80]
   1400039ee:	mov    r14,QWORD PTR [rbp-0x78]
   1400039f2:	test   eax,eax
   1400039f4:	js     0x140003b62
   1400039fa:	mov    QWORD PTR [rsp+0x38],rdi
   1400039ff:	mov    rax,QWORD PTR [rbp-0x18]
   140003a03:	mov    QWORD PTR [rsp+0x30],rax
   140003a08:	mov    rax,QWORD PTR [rbp-0x20]
   140003a0c:	mov    QWORD PTR [rsp+0x28],rax
   140003a11:	mov    rax,QWORD PTR [rbp-0x40]
   140003a15:	mov    QWORD PTR [rsp+0x20],rax
   140003a1a:	mov    r9,rbx
   140003a1d:	mov    r8,r14
   140003a20:	lea    rdx,[rip+0x54c9]        # 0x140008ef0
   140003a27:	lea    rcx,[rbp-0x70]
   140003a2b:	call   0x14000400c
   140003a30:	mov    r15d,eax
   140003a33:	test   eax,eax
   140003a35:	jns    0x140003a71
   140003a37:	mov    rcx,QWORD PTR [rip+0x85e2]        # 0x14000c020
   140003a3e:	lea    rax,[rip+0x85db]        # 0x14000c020
   140003a45:	cmp    rcx,rax
   140003a48:	je     0x140003a68
   140003a4a:	test   BYTE PTR [rcx+0x1c],0x1
   140003a4e:	je     0x140003a68
   140003a50:	mov    edx,0x2c
   140003a55:	mov    r9d,r15d
   140003a58:	lea    r8,[rip+0x5631]        # 0x140009090
   140003a5f:	mov    rcx,QWORD PTR [rcx+0x10]
   140003a63:	call   0x140001dcc
   140003a68:	mov    rsi,QWORD PTR [rbp-0x70]
   140003a6c:	jmp    0x140003b62
   140003a71:	movsd  xmm0,QWORD PTR [rbp-0x30]
   140003a76:	movsd  QWORD PTR [rbp-0x40],xmm0
   140003a7b:	mov    eax,DWORD PTR [rbp-0x28]
   140003a7e:	mov    DWORD PTR [rbp-0x38],eax
   140003a81:	mov    rbx,QWORD PTR [rbp-0x58]
   140003a85:	mov    rax,QWORD PTR [rbx]
   140003a88:	mov    r15,QWORD PTR [rax+0x40]
   140003a8c:	mov    rcx,r15
   140003a8f:	call   QWORD PTR [rip+0x3893]        # 0x140007328
   140003a95:	lea    rax,[rbp-0x60]
   140003a99:	mov    QWORD PTR [rsp+0x78],rax
   140003a9e:	mov    DWORD PTR [rsp+0x70],r12d
   140003aa3:	mov    QWORD PTR [rsp+0x68],r12
   140003aa8:	mov    QWORD PTR [rsp+0x60],r12
   140003aad:	mov    QWORD PTR [rsp+0x58],r12
   140003ab2:	mov    DWORD PTR [rsp+0x50],r12d
   140003ab7:	mov    DWORD PTR [rsp+0x48],r12d
   140003abc:	lea    rax,[rbp-0x40]
   140003ac0:	mov    QWORD PTR [rsp+0x40],rax
   140003ac5:	mov    QWORD PTR [rsp+0x38],r12
   140003aca:	mov    QWORD PTR [rsp+0x30],r12
   140003acf:	mov    rsi,QWORD PTR [rbp-0x70]
   140003ad3:	mov    QWORD PTR [rsp+0x28],rsi
   140003ad8:	mov    DWORD PTR [rsp+0x20],0x1
   140003ae0:	xor    r9d,r9d
   140003ae3:	lea    r8,[rbp+0x0]
   140003ae7:	lea    rdx,[rip+0x5552]        # 0x140009040
   140003aee:	mov    rcx,rbx
   140003af1:	call   r15
   140003af4:	mov    r15d,eax
   140003af7:	test   eax,eax
   140003af9:	jns    0x140003b2e
   140003afb:	mov    rcx,QWORD PTR [rip+0x851e]        # 0x14000c020
   140003b02:	lea    rax,[rip+0x8517]        # 0x14000c020
   140003b09:	cmp    rcx,rax
   140003b0c:	je     0x140003b62
   140003b0e:	test   BYTE PTR [rcx+0x1c],0x1
   140003b12:	je     0x140003b62
   140003b14:	mov    edx,0x2d
   140003b19:	mov    r9d,r15d
   140003b1c:	lea    r8,[rip+0x556d]        # 0x140009090
   140003b23:	mov    rcx,QWORD PTR [rcx+0x10]
   140003b27:	call   0x140001dcc
   140003b2c:	jmp    0x140003b62
   140003b2e:	mov    rcx,QWORD PTR [rip+0x84eb]        # 0x14000c020
   140003b35:	lea    rax,[rip+0x84e4]        # 0x14000c020
   140003b3c:	cmp    rcx,rax
   140003b3f:	je     0x140003b62
   140003b41:	test   BYTE PTR [rcx+0x1c],0x4
   140003b45:	je     0x140003b62
   140003b47:	mov    edx,0x2e
   140003b4c:	lea    r8,[rip+0x553d]        # 0x140009090
   140003b53:	mov    rcx,QWORD PTR [rcx+0x10]
   140003b57:	call   0x140001da8
   140003b5c:	jmp    0x140003b62
   140003b5e:	mov    rdi,QWORD PTR [rbp-0x80]
   140003b62:	test   r14,r14
   140003b65:	je     0x140003b71
   140003b67:	mov    rcx,r14
   140003b6a:	call   QWORD PTR [rip+0x3668]        # 0x1400071d8
   140003b70:	nop
   140003b71:	test   rdi,rdi
   140003b74:	je     0x140003b80
   140003b76:	mov    rcx,rdi
   140003b79:	call   QWORD PTR [rip+0x3659]        # 0x1400071d8
   140003b7f:	nop
   140003b80:	test   rsi,rsi
   140003b83:	je     0x140003b8f
   140003b85:	mov    rcx,rsi
   140003b88:	call   QWORD PTR [rip+0x364a]        # 0x1400071d8
   140003b8e:	nop
   140003b8f:	mov    rbx,QWORD PTR [rbp-0x58]
   140003b93:	test   rbx,rbx
   140003b96:	je     0x140003bae
   140003b98:	mov    rax,QWORD PTR [rbx]
   140003b9b:	mov    rdi,QWORD PTR [rax+0x10]
   140003b9f:	mov    rcx,rdi
   140003ba2:	call   QWORD PTR [rip+0x3780]        # 0x140007328
   140003ba8:	mov    rcx,rbx
   140003bab:	call   rdi
   140003bad:	nop
   140003bae:	mov    rbx,QWORD PTR [rbp-0x68]
   140003bb2:	test   rbx,rbx
   140003bb5:	je     0x140003bcc
   140003bb7:	mov    rax,QWORD PTR [rbx]
   140003bba:	mov    rdi,QWORD PTR [rax+0x10]
   140003bbe:	mov    rcx,rdi
   140003bc1:	call   QWORD PTR [rip+0x3761]        # 0x140007328
   140003bc7:	mov    rcx,rbx
   140003bca:	call   rdi
   140003bcc:	mov    eax,r15d
   140003bcf:	mov    rcx,QWORD PTR [rbp+0x28]
   140003bd3:	xor    rcx,rsp
   140003bd6:	call   0x140004a00
   140003bdb:	mov    rbx,QWORD PTR [rsp+0x188]
   140003be3:	add    rsp,0x130
   140003bea:	pop    r15
   140003bec:	pop    r14
   140003bee:	pop    r13
   140003bf0:	pop    r12
   140003bf2:	pop    rdi
   140003bf3:	pop    rsi
   140003bf4:	pop    rbp
   140003bf5:	ret    
   140003bf6:	int3   
   140003bf7:	int3   
   140003bf8:	int3   
   140003bf9:	int3   
   140003bfa:	int3   
   140003bfb:	int3   
   140003bfc:	mov    QWORD PTR [rsp+0x8],rbx
   140003c01:	push   rdi
   140003c02:	sub    rsp,0x20
   140003c06:	mov    rdi,QWORD PTR [rcx]
   140003c09:	test   rdi,rdi
   140003c0c:	je     0x140003c23
   140003c0e:	mov    rax,QWORD PTR [rdi]
   140003c11:	mov    rbx,QWORD PTR [rax+0x10]
   140003c15:	mov    rcx,rbx
   140003c18:	call   QWORD PTR [rip+0x370a]        # 0x140007328
   140003c1e:	mov    rcx,rdi
   140003c21:	call   rbx
   140003c23:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c28:	add    rsp,0x20
   140003c2c:	pop    rdi
   140003c2d:	ret    
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	int3   
   140003c31:	int3   
   140003c32:	int3   
   140003c33:	int3   
   140003c34:	sub    rsp,0x58
   140003c38:	xor    r11d,r11d
   140003c3b:	test   r9,r9
   140003c3e:	je     0x140003c64
   140003c40:	cmp    WORD PTR [r9],r11w
   140003c44:	jne    0x140003c4c
   140003c46:	lea    eax,[r11+0xe]
   140003c4a:	jmp    0x140003c69
   140003c4c:	or     rax,0xffffffffffffffff
   140003c50:	inc    rax
   140003c53:	cmp    WORD PTR [r9+rax*2],r11w
   140003c58:	jne    0x140003c50
   140003c5a:	lea    rax,[rax*2+0x2]
   140003c62:	jmp    0x140003c69
   140003c64:	mov    eax,0xa
   140003c69:	test   r9,r9
   140003c6c:	je     0x140003c7f
   140003c6e:	cmp    WORD PTR [r9],r11w
   140003c72:	lea    r10,[rip+0x50a7]        # 0x140008d20
   140003c79:	cmove  r9,r10
   140003c7d:	jmp    0x140003c86
   140003c7f:	lea    r9,[rip+0x50aa]        # 0x140008d30
   140003c86:	mov    QWORD PTR [rsp+0x40],r11
   140003c8b:	lea    r10,[rsp+0x80]
   140003c93:	mov    QWORD PTR [rsp+0x38],0x4
   140003c9c:	mov    QWORD PTR [rsp+0x30],r10
   140003ca1:	mov    QWORD PTR [rsp+0x28],rax
   140003ca6:	mov    QWORD PTR [rsp+0x20],r9
   140003cab:	movzx  r9d,dx
   140003caf:	mov    edx,0x2b
   140003cb4:	call   QWORD PTR [rip+0x3346]        # 0x140007000
   140003cba:	add    rsp,0x58
   140003cbe:	ret    
   140003cbf:	int3   
   140003cc0:	int3   
   140003cc1:	int3   
   140003cc2:	int3   
   140003cc3:	int3   
   140003cc4:	int3   
   140003cc5:	int3   
   140003cc6:	int3   
   140003cc7:	int3   
   140003cc8:	mov    QWORD PTR [rsp+0x8],rbx
   140003ccd:	mov    QWORD PTR [rsp+0x10],rsi
   140003cd2:	push   rdi
   140003cd3:	sub    rsp,0x30
   140003cd7:	mov    ebx,DWORD PTR [rdx]
   140003cd9:	lea    rcx,[rip+0x4f30]        # 0x140008c10
   140003ce0:	mov    rdi,r8
   140003ce3:	mov    rsi,rdx
   140003ce6:	mov    rdx,rdi
   140003ce9:	mov    r8d,ebx
   140003cec:	call   QWORD PTR [rip+0x33a6]        # 0x140007098
   140003cf2:	xor    edx,edx
   140003cf4:	mov    r9d,eax
   140003cf7:	test   eax,eax
   140003cf9:	jne    0x140003d3f
   140003cfb:	call   0x140004338
   140003d00:	mov    ebx,eax
   140003d02:	mov    rcx,QWORD PTR [rip+0x8317]        # 0x14000c020
   140003d09:	lea    rax,[rip+0x8310]        # 0x14000c020
   140003d10:	cmp    rcx,rax
   140003d13:	je     0x140003d3b
   140003d15:	test   BYTE PTR [rcx+0x1c],0x1
   140003d19:	je     0x140003d3b
   140003d1b:	mov    rcx,QWORD PTR [rcx+0x10]
   140003d1f:	lea    r9,[rip+0x4eea]        # 0x140008c10
   140003d26:	mov    edx,0x36
   140003d2b:	mov    DWORD PTR [rsp+0x20],ebx
   140003d2f:	lea    r8,[rip+0x536a]        # 0x1400090a0
   140003d36:	call   0x140003c34
   140003d3b:	mov    eax,ebx
   140003d3d:	jmp    0x140003d61
   140003d3f:	cmp    r9d,ebx
   140003d42:	ja     0x140003d55
   140003d44:	lea    eax,[r9-0x1]
   140003d48:	cmp    WORD PTR [rdi+rax*2],dx
   140003d4c:	je     0x140003d5c
   140003d4e:	mov    eax,0x8000ffff
   140003d53:	jmp    0x140003d61
   140003d55:	test   ebx,ebx
   140003d57:	je     0x140003d5c
   140003d59:	mov    WORD PTR [rdi],dx
   140003d5c:	mov    QWORD PTR [rsi],r9
   140003d5f:	xor    eax,eax
   140003d61:	mov    rbx,QWORD PTR [rsp+0x40]
   140003d66:	mov    rsi,QWORD PTR [rsp+0x48]
   140003d6b:	add    rsp,0x30
   140003d6f:	pop    rdi
   140003d70:	ret    
   140003d71:	int3   
   140003d72:	int3   
   140003d73:	int3   
   140003d74:	int3   
   140003d75:	int3   
   140003d76:	int3   
   140003d77:	int3   
   140003d78:	mov    QWORD PTR [rsp+0x10],rbx
   140003d7d:	mov    QWORD PTR [rsp+0x18],rsi
   140003d82:	mov    QWORD PTR [rsp+0x20],rdi
   140003d87:	push   r14
   140003d89:	sub    rsp,0x250
   140003d90:	mov    rax,QWORD PTR [rip+0x8271]        # 0x14000c008
   140003d97:	xor    rax,rsp
   140003d9a:	mov    QWORD PTR [rsp+0x240],rax
   140003da2:	mov    ebx,0x104
   140003da7:	lea    r8,[rsp+0x30]
   140003dac:	lea    rdx,[rsp+0x20]
   140003db1:	mov    QWORD PTR [rsp+0x20],rbx
   140003db6:	mov    r14,rcx
   140003db9:	call   0x140003cc8
   140003dbe:	test   eax,eax
   140003dc0:	js     0x140003e47
   140003dc6:	mov    rdi,QWORD PTR [rsp+0x20]
   140003dcb:	cmp    rdi,rbx
   140003dce:	ja     0x140003ddf
   140003dd0:	lea    rdx,[rsp+0x30]
   140003dd5:	mov    rcx,r14
   140003dd8:	call   0x1400042ac
   140003ddd:	jmp    0x140003e47
   140003ddf:	mov    rsi,rdi
   140003de2:	and    QWORD PTR [rsp+0x28],0x0
   140003de8:	lea    rcx,[rsp+0x28]
   140003ded:	mov    rdx,rdi
   140003df0:	call   0x140003e78
   140003df5:	mov    rbx,QWORD PTR [rsp+0x28]
   140003dfa:	mov    edi,eax
   140003dfc:	test   eax,eax
   140003dfe:	js     0x140003e37
   140003e00:	mov    r8,rbx
   140003e03:	lea    rdx,[rsp+0x20]
   140003e08:	call   0x140003cc8
   140003e0d:	mov    edi,eax
   140003e0f:	test   eax,eax
   140003e11:	js     0x140003e37
   140003e13:	mov    rdi,QWORD PTR [rsp+0x20]
   140003e18:	cmp    rdi,rsi
   140003e1b:	jbe    0x140003e30
   140003e1d:	mov    rsi,rdi
   140003e20:	test   rbx,rbx
   140003e23:	je     0x140003de2
   140003e25:	mov    rcx,rbx
   140003e28:	call   QWORD PTR [rip+0x33aa]        # 0x1400071d8
   140003e2e:	jmp    0x140003de2
   140003e30:	mov    QWORD PTR [r14],rbx
   140003e33:	xor    eax,eax
   140003e35:	jmp    0x140003e47
   140003e37:	test   rbx,rbx
   140003e3a:	je     0x140003e45
   140003e3c:	mov    rcx,rbx
   140003e3f:	call   QWORD PTR [rip+0x3393]        # 0x1400071d8
   140003e45:	mov    eax,edi
   140003e47:	mov    rcx,QWORD PTR [rsp+0x240]
   140003e4f:	xor    rcx,rsp
   140003e52:	call   0x140004a00
   140003e57:	lea    r11,[rsp+0x250]
   140003e5f:	mov    rbx,QWORD PTR [r11+0x18]
   140003e63:	mov    rsi,QWORD PTR [r11+0x20]
   140003e67:	mov    rdi,QWORD PTR [r11+0x28]
   140003e6b:	mov    rsp,r11
   140003e6e:	pop    r14
   140003e70:	ret    
   140003e71:	int3   
   140003e72:	int3   
   140003e73:	int3   
   140003e74:	int3   
   140003e75:	int3   
   140003e76:	int3   
   140003e77:	int3   
   140003e78:	rex push rbx
   140003e7a:	sub    rsp,0x20
   140003e7e:	mov    rbx,rcx
   140003e81:	lea    rcx,[rdx+rdx*1]
   140003e85:	mov    rax,rcx
   140003e88:	shr    rax,1
   140003e8b:	cmp    rax,rdx
   140003e8e:	je     0x140003e97
   140003e90:	mov    eax,0x80070057
   140003e95:	jmp    0x140003eac
   140003e97:	call   QWORD PTR [rip+0x3343]        # 0x1400071e0
   140003e9d:	mov    QWORD PTR [rbx],rax
   140003ea0:	neg    rax
   140003ea3:	sbb    eax,eax
   140003ea5:	not    eax
   140003ea7:	and    eax,0x8007000e
   140003eac:	add    rsp,0x20
   140003eb0:	pop    rbx
   140003eb1:	ret    
   140003eb2:	int3   
   140003eb3:	int3   
   140003eb4:	int3   
   140003eb5:	int3   
   140003eb6:	int3   
   140003eb7:	int3   
   140003eb8:	mov    rax,rsp
   140003ebb:	mov    QWORD PTR [rax+0x8],rbx
   140003ebf:	mov    QWORD PTR [rax+0x10],rbp
   140003ec3:	mov    QWORD PTR [rax+0x18],rsi
   140003ec7:	mov    QWORD PTR [rax+0x20],rdi
   140003ecb:	push   r12
   140003ecd:	push   r14
   140003ecf:	push   r15
   140003ed1:	sub    rsp,0x20
   140003ed5:	xor    ebx,ebx
   140003ed7:	lea    rax,[rdx-0x1]
   140003edb:	cmp    rax,0x7ffffffe
   140003ee1:	mov    r14,rcx
   140003ee4:	mov    edi,ebx
   140003ee6:	mov    ecx,0x80070057
   140003eeb:	cmova  edi,ecx
   140003eee:	mov    r12,r9
   140003ef1:	mov    r15,r8
   140003ef4:	mov    rbp,rdx
   140003ef7:	test   edi,edi
   140003ef9:	js     0x140003f35
   140003efb:	mov    r9,QWORD PTR [rsp+0x60]
   140003f00:	lea    rsi,[rdx-0x1]
   140003f04:	mov    rdx,rsi
   140003f07:	mov    r8,r12
   140003f0a:	mov    rcx,r14
   140003f0d:	mov    edi,ebx
   140003f0f:	call   QWORD PTR [rip+0x328b]        # 0x1400071a0
   140003f15:	test   eax,eax
   140003f17:	js     0x140003f29
   140003f19:	cdqe   
   140003f1b:	cmp    rax,rsi
   140003f1e:	ja     0x140003f29
   140003f20:	jne    0x140003f3e
   140003f22:	mov    WORD PTR [r14+rsi*2],bx
   140003f27:	jmp    0x140003f3e
   140003f29:	mov    WORD PTR [r14+rsi*2],bx
   140003f2e:	mov    edi,0x8007007a
   140003f33:	jmp    0x140003f3e
   140003f35:	test   rdx,rdx
   140003f38:	je     0x140003f3e
   140003f3a:	mov    WORD PTR [r14],bx
   140003f3e:	mov    QWORD PTR [r15],rbx
   140003f41:	test   edi,edi
   140003f43:	jns    0x140003f7c
   140003f45:	cmp    edi,0x8007007a
   140003f4b:	je     0x140003f51
   140003f4d:	mov    ebx,edi
   140003f4f:	jmp    0x140003f7c
   140003f51:	mov    rdx,QWORD PTR [rsp+0x60]
   140003f56:	mov    rcx,r12
   140003f59:	call   QWORD PTR [rip+0x3251]        # 0x1400071b0
   140003f5f:	test   eax,eax
   140003f61:	jns    0x140003f6a
   140003f63:	mov    ebx,0x80004005
   140003f68:	jmp    0x140003f7c
   140003f6a:	cdqe   
   140003f6c:	inc    rax
   140003f6f:	cmp    rax,rbp
   140003f72:	jbe    0x140003f63
   140003f74:	mov    QWORD PTR [r15],rax
   140003f77:	mov    ebx,0x8007007a
   140003f7c:	mov    rbp,QWORD PTR [rsp+0x48]
   140003f81:	mov    eax,ebx
   140003f83:	mov    rbx,QWORD PTR [rsp+0x40]
   140003f88:	mov    rsi,QWORD PTR [rsp+0x50]
   140003f8d:	mov    rdi,QWORD PTR [rsp+0x58]
   140003f92:	add    rsp,0x20
   140003f96:	pop    r15
   140003f98:	pop    r14
   140003f9a:	pop    r12
   140003f9c:	ret    
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	int3   
   140003fa1:	int3   
   140003fa2:	int3   
   140003fa3:	int3   
   140003fa4:	mov    rax,rsp
   140003fa7:	mov    QWORD PTR [rax+0x10],rbx
   140003fab:	push   rdi
   140003fac:	sub    rsp,0x30
   140003fb0:	and    QWORD PTR [rcx],0x0
   140003fb4:	mov    r9,r8
   140003fb7:	and    QWORD PTR [rax+0x8],0x0
   140003fbc:	mov    r8,rdx
   140003fbf:	and    QWORD PTR [rax+0x20],0x0
   140003fc4:	lea    rdx,[rax+0x8]
   140003fc8:	mov    rdi,rcx
   140003fcb:	lea    rcx,[rax+0x20]
   140003fcf:	call   0x140004034
   140003fd4:	mov    ebx,eax
   140003fd6:	test   eax,eax
   140003fd8:	jns    0x140003fe1
   140003fda:	mov    rcx,QWORD PTR [rsp+0x40]
   140003fdf:	jmp    0x140003fed
   140003fe1:	mov    rax,QWORD PTR [rsp+0x40]
   140003fe6:	xor    ecx,ecx
   140003fe8:	mov    QWORD PTR [rdi],rax
   140003feb:	xor    ebx,ebx
   140003fed:	test   rcx,rcx
   140003ff0:	je     0x140003ff8
   140003ff2:	call   QWORD PTR [rip+0x31e0]        # 0x1400071d8
   140003ff8:	mov    eax,ebx
   140003ffa:	mov    rbx,QWORD PTR [rsp+0x48]
   140003fff:	add    rsp,0x30
   140004003:	pop    rdi
   140004004:	ret    
   140004005:	int3   
   140004006:	int3   
   140004007:	int3   
   140004008:	int3   
   140004009:	int3   
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	mov    rax,rsp
   14000400f:	mov    QWORD PTR [rax+0x10],rdx
   140004013:	mov    QWORD PTR [rax+0x18],r8
   140004017:	mov    QWORD PTR [rax+0x20],r9
   14000401b:	sub    rsp,0x28
   14000401f:	lea    r8,[rax+0x18]
   140004023:	call   0x140003fa4
   140004028:	add    rsp,0x28
   14000402c:	ret    
   14000402d:	int3   
   14000402e:	int3   
   14000402f:	int3   
   140004030:	int3   
   140004031:	int3   
   140004032:	int3   
   140004033:	int3   
   140004034:	rex push rbx
   140004036:	push   rbp
   140004037:	push   rsi
   140004038:	push   rdi
   140004039:	push   r12
   14000403b:	push   r14
   14000403d:	push   r15
   14000403f:	sub    rsp,0x260
   140004046:	mov    rax,QWORD PTR [rip+0x7fbb]        # 0x14000c008
   14000404d:	xor    rax,rsp
   140004050:	mov    QWORD PTR [rsp+0x250],rax
   140004058:	mov    rsi,QWORD PTR [rcx]
   14000405b:	xor    ebx,ebx
   14000405d:	mov    r12,r9
   140004060:	mov    QWORD PTR [rsp+0x20],r9
   140004065:	mov    rbp,r8
   140004068:	mov    r9,r8
   14000406b:	lea    r8,[rsp+0x30]
   140004070:	mov    r15,rdx
   140004073:	mov    r14,rcx
   140004076:	mov    QWORD PTR [rsp+0x30],rbx
   14000407b:	cmp    QWORD PTR [rdx],rbx
   14000407e:	jne    0x14000410b
   140004084:	mov    esi,0x104
   140004089:	lea    rcx,[rsp+0x40]
   14000408e:	mov    edx,esi
   140004090:	call   0x140003eb8
   140004095:	test   eax,eax
   140004097:	js     0x140004121
   14000409d:	or     rdi,0xffffffffffffffff
   1400040a1:	lea    rax,[rsp+0x40]
   1400040a6:	mov    rsi,rdi
   1400040a9:	inc    rsi
   1400040ac:	cmp    WORD PTR [rax+rsi*2],bx
   1400040b0:	jne    0x1400040a9
   1400040b2:	mov    rcx,QWORD PTR [r15]
   1400040b5:	inc    rsi
   1400040b8:	call   QWORD PTR [rip+0x311a]        # 0x1400071d8
   1400040be:	mov    eax,0x2
   1400040c3:	mul    rsi
   1400040c6:	cmovo  rax,rdi
   1400040ca:	mov    rcx,rax
   1400040cd:	call   QWORD PTR [rip+0x310d]        # 0x1400071e0
   1400040d3:	mov    QWORD PTR [r15],rax
   1400040d6:	test   rax,rax
   1400040d9:	je     0x140004197
   1400040df:	lea    r8,[rsi+rsi*1]
   1400040e3:	mov    rcx,rax
   1400040e6:	lea    rdx,[rsp+0x40]
   1400040eb:	call   0x140004b7c
   1400040f0:	lea    rax,[rsp+0x40]
   1400040f5:	inc    rdi
   1400040f8:	cmp    WORD PTR [rax+rdi*2],bx
   1400040fc:	jne    0x1400040f5
   1400040fe:	inc    rdi
   140004101:	mov    QWORD PTR [r14],rdi
   140004104:	xor    eax,eax
   140004106:	jmp    0x1400041a3
   14000410b:	mov    rcx,QWORD PTR [r15]
   14000410e:	mov    rdx,rsi
   140004111:	call   0x140003eb8
   140004116:	cmp    eax,0x8007007a
   14000411b:	jne    0x1400041a3
   140004121:	or     rdi,0xffffffffffffffff
   140004125:	cmp    rsi,QWORD PTR [rsp+0x30]
   14000412a:	jae    0x140004133
   14000412c:	mov    rsi,QWORD PTR [rsp+0x30]
   140004131:	jmp    0x14000413a
   140004133:	lea    rsi,[rsi+rsi*2]
   140004137:	shr    rsi,1
   14000413a:	cmp    rsi,0x7fffffff
   140004141:	ja     0x14000419e
   140004143:	mov    rcx,QWORD PTR [r15]
   140004146:	call   QWORD PTR [rip+0x308c]        # 0x1400071d8
   14000414c:	mov    eax,0x2
   140004151:	mul    rsi
   140004154:	cmovo  rax,rdi
   140004158:	mov    rcx,rax
   14000415b:	call   QWORD PTR [rip+0x307f]        # 0x1400071e0
   140004161:	mov    QWORD PTR [r15],rax
   140004164:	test   rax,rax
   140004167:	je     0x140004194
   140004169:	mov    QWORD PTR [r14],rsi
   14000416c:	lea    r8,[rsp+0x30]
   140004171:	mov    rcx,QWORD PTR [r15]
   140004174:	mov    r9,rbp
   140004177:	mov    rdx,rsi
   14000417a:	mov    QWORD PTR [rsp+0x20],r12
   14000417f:	call   0x140003eb8
   140004184:	cmp    eax,0x8007007a
   140004189:	je     0x140004125
   14000418b:	test   eax,eax
   14000418d:	cmovs  ebx,eax
   140004190:	mov    eax,ebx
   140004192:	jmp    0x1400041a3
   140004194:	mov    QWORD PTR [r14],rbx
   140004197:	mov    eax,0x8007000e
   14000419c:	jmp    0x1400041a3
   14000419e:	mov    eax,0x8007007a
   1400041a3:	mov    rcx,QWORD PTR [rsp+0x250]
   1400041ab:	xor    rcx,rsp
   1400041ae:	call   0x140004a00
   1400041b3:	add    rsp,0x260
   1400041ba:	pop    r15
   1400041bc:	pop    r14
   1400041be:	pop    r12
   1400041c0:	pop    rdi
   1400041c1:	pop    rsi
   1400041c2:	pop    rbp
   1400041c3:	pop    rbx
   1400041c4:	ret    
   1400041c5:	int3   
   1400041c6:	int3   
   1400041c7:	int3   
   1400041c8:	int3   
   1400041c9:	int3   
   1400041ca:	int3   
   1400041cb:	int3   
   1400041cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400041d1:	push   rdi
   1400041d2:	sub    rsp,0x30
   1400041d6:	and    DWORD PTR [rsp+0x20],0x0
   1400041db:	lea    r9,[rip+0x8b06]        # 0x14000cce8
   1400041e2:	lea    r8,[rip+0x8a8f]        # 0x14000cc78
   1400041e9:	xor    edx,edx
   1400041eb:	mov    rbx,rcx
   1400041ee:	call   0x1400051ae
   1400041f3:	mov    rdi,rax
   1400041f6:	test   rax,rax
   1400041f9:	je     0x14000421c
   1400041fb:	mov    rcx,QWORD PTR [rax]
   1400041fe:	mov    rbx,QWORD PTR [rcx+0x10]
   140004202:	mov    rcx,rbx
   140004205:	call   QWORD PTR [rip+0x311d]        # 0x140007328
   14000420b:	mov    rcx,rdi
   14000420e:	call   rbx
   140004210:	test   eax,eax
   140004212:	mov    ecx,0x8000ffff
   140004217:	cmovns eax,ecx
   14000421a:	jmp    0x14000429a
   14000421c:	and    DWORD PTR [rsp+0x20],0x0
   140004221:	lea    r9,[rip+0x8a70]        # 0x14000cc98
   140004228:	lea    r8,[rip+0x8a49]        # 0x14000cc78
   14000422f:	xor    edx,edx
   140004231:	mov    rcx,rbx
   140004234:	call   0x1400051ae
   140004239:	test   rax,rax
   14000423c:	je     0x140004245
   14000423e:	mov    eax,0x8007000e
   140004243:	jmp    0x14000429a
   140004245:	and    DWORD PTR [rsp+0x20],0x0
   14000424a:	lea    r9,[rip+0x8a6f]        # 0x14000ccc0
   140004251:	lea    r8,[rip+0x8a20]        # 0x14000cc78
   140004258:	xor    edx,edx
   14000425a:	mov    rcx,rbx
   14000425d:	call   0x1400051ae
   140004262:	test   rax,rax
   140004265:	je     0x14000426e
   140004267:	mov    eax,0x80070585
   14000426c:	jmp    0x14000429a
   14000426e:	and    DWORD PTR [rsp+0x20],0x0
   140004273:	lea    r9,[rip+0x8aa6]        # 0x14000cd20
   14000427a:	lea    r8,[rip+0x89f7]        # 0x14000cc78
   140004281:	xor    edx,edx
   140004283:	mov    rcx,rbx
   140004286:	call   0x1400051ae
   14000428b:	neg    rax
   14000428e:	sbb    eax,eax
   140004290:	and    eax,0x6c052
   140004295:	add    eax,0x80004005
   14000429a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000429f:	add    rsp,0x30
   1400042a3:	pop    rdi
   1400042a4:	ret    
   1400042a5:	int3   
   1400042a6:	int3   
   1400042a7:	int3   
   1400042a8:	int3   
   1400042a9:	int3   
   1400042aa:	int3   
   1400042ab:	int3   
   1400042ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400042b1:	mov    QWORD PTR [rsp+0x10],rbp
   1400042b6:	push   rsi
   1400042b7:	push   rdi
   1400042b8:	push   r14
   1400042ba:	sub    rsp,0x20
   1400042be:	or     rbx,0xffffffffffffffff
   1400042c2:	mov    rsi,rdx
   1400042c5:	xor    ebp,ebp
   1400042c7:	mov    r14,rcx
   1400042ca:	inc    rbx
   1400042cd:	cmp    WORD PTR [rdx+rbx*2],bp
   1400042d1:	jne    0x1400042ca
   1400042d3:	inc    rbx
   1400042d6:	mov    QWORD PTR [rsp+0x50],rbp
   1400042db:	mov    rdx,rbx
   1400042de:	lea    rcx,[rsp+0x50]
   1400042e3:	call   0x140003e78
   1400042e8:	mov    edi,eax
   1400042ea:	test   eax,eax
   1400042ec:	jns    0x1400042f5
   1400042ee:	mov    rcx,QWORD PTR [rsp+0x50]
   1400042f3:	jmp    0x140004312
   1400042f5:	lea    r8,[rbx+rbx*1]
   1400042f9:	mov    rdx,rsi
   1400042fc:	mov    rbx,QWORD PTR [rsp+0x50]
   140004301:	mov    rcx,rbx
   140004304:	call   QWORD PTR [rip+0x2eae]        # 0x1400071b8
   14000430a:	mov    rcx,rbp
   14000430d:	mov    QWORD PTR [r14],rbx
   140004310:	mov    edi,ebp
   140004312:	test   rcx,rcx
   140004315:	je     0x14000431d
   140004317:	call   QWORD PTR [rip+0x2ebb]        # 0x1400071d8
   14000431d:	mov    rbx,QWORD PTR [rsp+0x40]
   140004322:	mov    eax,edi
   140004324:	mov    rbp,QWORD PTR [rsp+0x48]
   140004329:	add    rsp,0x20
   14000432d:	pop    r14
   14000432f:	pop    rdi
   140004330:	pop    rsi
   140004331:	ret    
   140004332:	int3   
   140004333:	int3   
   140004334:	int3   
   140004335:	int3   
   140004336:	int3   
   140004337:	int3   
   140004338:	sub    rsp,0x28
   14000433c:	call   QWORD PTR [rip+0x2dce]        # 0x140007110
   140004342:	movzx  ecx,ax
   140004345:	or     ecx,0x80070000
   14000434b:	test   eax,eax
   14000434d:	cmovle ecx,eax
   140004350:	mov    eax,0x80004005
   140004355:	test   ecx,ecx
   140004357:	cmovns ecx,eax
   14000435a:	mov    eax,ecx
   14000435c:	add    rsp,0x28
   140004360:	ret    
   140004361:	int3   
   140004362:	int3   
   140004363:	int3   
   140004364:	int3   
   140004365:	int3   
   140004366:	int3   
   140004367:	int3   
   140004368:	int3   
   140004369:	int3   
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	rex push rbx
   140004372:	sub    rsp,0x20
   140004376:	lea    rbx,[rcx-0x28]
   14000437a:	cmp    BYTE PTR [rbx+0x48],0x0
   14000437e:	je     0x140004387
   140004380:	mov    eax,0x80070057
   140004385:	jmp    0x14000439f
   140004387:	mov    rdx,rbx
   14000438a:	mov    BYTE PTR [rbx+0x48],0x1
   14000438e:	call   0x14000441c
   140004393:	test   eax,eax
   140004395:	jns    0x14000439d
   140004397:	mov    BYTE PTR [rbx+0x48],0x0
   14000439b:	jmp    0x14000439f
   14000439d:	xor    eax,eax
   14000439f:	add    rsp,0x20
   1400043a3:	pop    rbx
   1400043a4:	ret    
   1400043a5:	int3   
   1400043a6:	int3   
   1400043a7:	int3   
   1400043a8:	int3   
   1400043a9:	int3   
   1400043aa:	int3   
   1400043ab:	int3   
   1400043ac:	int3   
   1400043ad:	int3   
   1400043ae:	int3   
   1400043af:	int3   
   1400043b0:	rex push rbx
   1400043b2:	sub    rsp,0x20
   1400043b6:	lea    rbx,[rcx-0x28]
   1400043ba:	cmp    BYTE PTR [rbx+0x48],0x0
   1400043be:	je     0x1400043e4
   1400043c0:	mov    BYTE PTR [rbx+0x48],0x0
   1400043c4:	cmp    DWORD PTR [rbx+0xc],0xf12192e
   1400043cb:	je     0x1400043d6
   1400043cd:	mov    rcx,rbx
   1400043d0:	call   QWORD PTR [rip+0x2cd2]        # 0x1400070a8
   1400043d6:	xor    edx,edx
   1400043d8:	mov    rcx,rbx
   1400043db:	lea    r8d,[rdx+0x28]
   1400043df:	call   0x1400051ba
   1400043e4:	add    rsp,0x20
   1400043e8:	pop    rbx
   1400043e9:	ret    
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	int3   
   1400043ed:	int3   
   1400043ee:	int3   
   1400043ef:	int3   
   1400043f0:	sub    rsp,0x28
   1400043f4:	test   rcx,rcx
   1400043f7:	je     0x140004400
   1400043f9:	mov    DWORD PTR [rcx+0xc],0xf12192e
   140004400:	and    DWORD PTR [rcx+0xc],0x0
   140004404:	xor    edx,edx
   140004406:	call   QWORD PTR [rip+0x2c94]        # 0x1400070a0
   14000440c:	xor    eax,eax
   14000440e:	add    rsp,0x28
   140004412:	ret    
   140004413:	int3   
   140004414:	int3   
   140004415:	int3   
   140004416:	int3   
   140004417:	int3   
   140004418:	int3   
   140004419:	int3   
   14000441a:	int3   
   14000441b:	int3   
   14000441c:	mov    QWORD PTR [rsp+0x8],rcx
   140004421:	push   rbx
   140004422:	sub    rsp,0x30
   140004426:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000442f:	mov    rcx,rdx
   140004432:	call   0x1400043f0
   140004437:	mov    ebx,eax
   140004439:	jmp    0x140004445
   14000443b:	mov    ebx,DWORD PTR [rsp+0x40]
   14000443f:	jmp    0x140004449
   140004441:	mov    ebx,DWORD PTR [rsp+0x40]
   140004445:	test   ebx,ebx
   140004447:	jns    0x14000447e
   140004449:	lea    rax,[rip+0x7bd0]        # 0x14000c020
   140004450:	mov    rcx,QWORD PTR [rip+0x7bc9]        # 0x14000c020
   140004457:	cmp    rcx,rax
   14000445a:	je     0x14000447a
   14000445c:	test   BYTE PTR [rcx+0x1c],0x1
   140004460:	je     0x14000447a
   140004462:	mov    edx,0xa
   140004467:	mov    r9d,ebx
   14000446a:	lea    r8,[rip+0x4c3f]        # 0x1400090b0
   140004471:	mov    rcx,QWORD PTR [rcx+0x10]
   140004475:	call   0x140001dcc
   14000447a:	mov    eax,ebx
   14000447c:	jmp    0x140004480
   14000447e:	xor    eax,eax
   140004480:	add    rsp,0x30
   140004484:	pop    rbx
   140004485:	ret    
   140004486:	int3   
   140004487:	int3   
   140004488:	int3   
   140004489:	int3   
   14000448a:	int3   
   14000448b:	int3   
   14000448c:	cmp    QWORD PTR [rip+0x3934],0x0        # 0x140007dc8
   140004494:	lea    rax,[rip+0x3925]        # 0x140007dc0
   14000449b:	je     0x1400044ac
   14000449d:	cmp    DWORD PTR [rax],ecx
   14000449f:	je     0x1400044af
   1400044a1:	add    rax,0x10
   1400044a5:	cmp    QWORD PTR [rax+0x8],0x0
   1400044aa:	jne    0x14000449d
   1400044ac:	xor    eax,eax
   1400044ae:	ret    
   1400044af:	mov    rax,QWORD PTR [rax+0x8]
   1400044b3:	ret    
   1400044b4:	int3   
   1400044b5:	int3   
   1400044b6:	int3   
   1400044b7:	int3   
   1400044b8:	int3   
   1400044b9:	int3   
   1400044ba:	int3   
   1400044bb:	int3   
   1400044bc:	cmp    QWORD PTR [rip+0x3014],0x0        # 0x1400074d8
   1400044c4:	lea    rax,[rip+0x3005]        # 0x1400074d0
   1400044cb:	je     0x1400044dc
   1400044cd:	cmp    DWORD PTR [rax],ecx
   1400044cf:	je     0x1400044df
   1400044d1:	add    rax,0x10
   1400044d5:	cmp    QWORD PTR [rax+0x8],0x0
   1400044da:	jne    0x1400044cd
   1400044dc:	xor    eax,eax
   1400044de:	ret    
   1400044df:	mov    rax,QWORD PTR [rax+0x8]
   1400044e3:	ret    
   1400044e4:	int3   
   1400044e5:	int3   
   1400044e6:	int3   
   1400044e7:	int3   
   1400044e8:	int3   
   1400044e9:	int3   
   1400044ea:	int3   
   1400044eb:	int3   
   1400044ec:	mov    QWORD PTR [rsp+0x8],rcx
   1400044f1:	push   rbx
   1400044f2:	sub    rsp,0x20
   1400044f6:	mov    QWORD PTR [rsp+0x30],rdx
   1400044fb:	mov    rbx,rcx
   1400044fe:	lea    rdx,[rsp+0x30]
   140004503:	call   0x140004b9a
   140004508:	lea    rax,[rip+0x42b1]        # 0x1400087c0
   14000450f:	mov    QWORD PTR [rbx],rax
   140004512:	mov    rax,rbx
   140004515:	add    rsp,0x20
   140004519:	pop    rbx
   14000451a:	ret    
   14000451b:	int3   
   14000451c:	int3   
   14000451d:	int3   
   14000451e:	int3   
   14000451f:	int3   
   140004520:	int3   
   140004521:	int3   
   140004522:	int3   
   140004523:	int3   
   140004524:	rex push rbx
   140004526:	sub    rsp,0x20
   14000452a:	mov    rbx,rcx
   14000452d:	call   0x140004b58
   140004532:	lea    rax,[rip+0x4287]        # 0x1400087c0
   140004539:	mov    QWORD PTR [rbx],rax
   14000453c:	mov    rax,rbx
   14000453f:	add    rsp,0x20
   140004543:	pop    rbx
   140004544:	ret    
   140004545:	int3   
   140004546:	int3   
   140004547:	int3   
   140004548:	int3   
   140004549:	int3   
   14000454a:	int3   
   14000454b:	int3   
   14000454c:	jmp    0x140004b4c
   140004551:	int3   
   140004552:	int3   
   140004553:	int3   
   140004554:	int3   
   140004555:	int3   
   140004556:	int3   
   140004557:	int3   
   140004558:	int3   
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	mov    QWORD PTR [rsp+0x8],rbx
   140004565:	push   rdi
   140004566:	sub    rsp,0x20
   14000456a:	mov    ebx,edx
   14000456c:	mov    rdi,rcx
   14000456f:	call   0x140004b4c
   140004574:	test   bl,0x1
   140004577:	je     0x140004581
   140004579:	mov    rcx,rdi
   14000457c:	call   0x140003724
   140004581:	mov    rax,rdi
   140004584:	mov    rbx,QWORD PTR [rsp+0x30]
   140004589:	add    rsp,0x20
   14000458d:	pop    rdi
   14000458e:	ret    
   14000458f:	int3   
   140004590:	int3   
   140004591:	int3   
   140004592:	int3   
   140004593:	int3   
   140004594:	int3   
   140004595:	int3   
   140004596:	int3   
   140004597:	int3   
   140004598:	sub    rsp,0x48
   14000459c:	lea    rcx,[rsp+0x20]
   1400045a1:	call   0x140003620
   1400045a6:	lea    rdx,[rip+0x679b]        # 0x14000ad48
   1400045ad:	lea    rcx,[rsp+0x20]
   1400045b2:	call   0x140004b64
   1400045b7:	int3   
   1400045b8:	int3   
   1400045b9:	int3   
   1400045ba:	int3   
   1400045bb:	int3   
   1400045bc:	int3   
   1400045bd:	int3   
   1400045be:	int3   
   1400045bf:	int3   
   1400045c0:	sub    rsp,0x48
   1400045c4:	mov    rdx,rcx
   1400045c7:	lea    rcx,[rsp+0x20]
   1400045cc:	call   0x1400044ec
   1400045d1:	lea    rdx,[rip+0x6638]        # 0x14000ac10
   1400045d8:	lea    rcx,[rsp+0x20]
   1400045dd:	call   0x140004b64
   1400045e2:	int3   
   1400045e3:	int3   
   1400045e4:	int3   
   1400045e5:	int3   
   1400045e6:	int3   
   1400045e7:	int3   
   1400045e8:	int3   
   1400045e9:	int3   
   1400045ea:	int3   
   1400045eb:	int3   
   1400045ec:	sub    rsp,0x48
   1400045f0:	mov    rdx,rcx
   1400045f3:	lea    rcx,[rsp+0x20]
   1400045f8:	call   0x1400044ec
   1400045fd:	lea    rdx,[rip+0x6674]        # 0x14000ac78
   140004604:	lea    rcx,[rsp+0x20]
   140004609:	call   0x140004b64
   14000460e:	int3   
   14000460f:	int3   
   140004610:	int3   
   140004611:	int3   
   140004612:	int3   
   140004613:	int3   
   140004614:	int3   
   140004615:	int3   
   140004616:	int3   
   140004617:	int3   
   140004618:	int3   
   140004619:	int3   
   14000461a:	int3   
   14000461b:	int3   
   14000461c:	int3   
   14000461d:	int3   
   14000461e:	int3   
   14000461f:	int3   
   140004620:	sub    rsp,0x28
   140004624:	mov    eax,0x5a4d
   140004629:	cmp    WORD PTR [rip+0xffffffffffffb9d0],ax        # 0x140000000
   140004630:	je     0x140004636
   140004632:	xor    eax,eax
   140004634:	jmp    0x140004685
   140004636:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb9ff]        # 0x14000003c
   14000463d:	lea    rax,[rip+0xffffffffffffb9bc]        # 0x140000000
   140004644:	add    rcx,rax
   140004647:	cmp    DWORD PTR [rcx],0x4550
   14000464d:	jne    0x140004632
   14000464f:	movzx  eax,WORD PTR [rcx+0x18]
   140004653:	cmp    eax,0x10b
   140004658:	je     0x140004674
   14000465a:	cmp    eax,0x20b
   14000465f:	jne    0x140004632
   140004661:	xor    eax,eax
   140004663:	cmp    DWORD PTR [rcx+0x84],0xe
   14000466a:	jbe    0x140004685
   14000466c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004672:	jmp    0x140004682
   140004674:	xor    eax,eax
   140004676:	cmp    DWORD PTR [rcx+0x74],0xe
   14000467a:	jbe    0x140004685
   14000467c:	cmp    DWORD PTR [rcx+0xe8],eax
   140004682:	setne  al
   140004685:	mov    ecx,0x2
   14000468a:	mov    DWORD PTR [rip+0x86f8],eax        # 0x14000cd88
   140004690:	call   0x140004c78
   140004695:	mov    ecx,eax
   140004697:	call   QWORD PTR [rip+0x2bd3]        # 0x140007270
   14000469d:	mov    rcx,QWORD PTR [rip+0x2b8c]        # 0x140007230
   1400046a4:	or     rax,0xffffffffffffffff
   1400046a8:	mov    QWORD PTR [rip+0x8e09],rax        # 0x14000d4b8
   1400046af:	mov    QWORD PTR [rip+0x8e0a],rax        # 0x14000d4c0
   1400046b6:	mov    eax,DWORD PTR [rip+0x86e0]        # 0x14000cd9c
   1400046bc:	mov    DWORD PTR [rcx],eax
   1400046be:	mov    rcx,QWORD PTR [rip+0x2b63]        # 0x140007228
   1400046c5:	mov    eax,DWORD PTR [rip+0x86c5]        # 0x14000cd90
   1400046cb:	mov    DWORD PTR [rcx],eax
   1400046cd:	call   0x140002930
   1400046d2:	cmp    DWORD PTR [rip+0x7927],0x0        # 0x14000c000
   1400046d9:	jne    0x1400046e8
   1400046db:	lea    rcx,[rip+0xffffffffffffe24e]        # 0x140002930
   1400046e2:	call   QWORD PTR [rip+0x2b68]        # 0x140007250
   1400046e8:	xor    eax,eax
   1400046ea:	add    rsp,0x28
   1400046ee:	ret    
   1400046ef:	int3   
   1400046f0:	int3   
   1400046f1:	int3   
   1400046f2:	int3   
   1400046f3:	int3   
   1400046f4:	int3   
   1400046f5:	int3   
   1400046f6:	int3   
   1400046f7:	int3   
   1400046f8:	int3   
   1400046f9:	int3   
   1400046fa:	int3   
   1400046fb:	int3   
   1400046fc:	int3   
   1400046fd:	int3   
   1400046fe:	int3   
   1400046ff:	int3   
   140004700:	sub    rsp,0x38
   140004704:	mov    eax,DWORD PTR [rip+0x868e]        # 0x14000cd98
   14000470a:	lea    r8,[rip+0x866f]        # 0x14000cd80
   140004711:	mov    r9d,DWORD PTR [rip+0x867c]        # 0x14000cd94
   140004718:	lea    rdx,[rip+0x8659]        # 0x14000cd78
   14000471f:	mov    DWORD PTR [rip+0x8667],eax        # 0x14000cd8c
   140004725:	lea    rcx,[rip+0x8644]        # 0x14000cd70
   14000472c:	lea    rax,[rip+0x8659]        # 0x14000cd8c
   140004733:	mov    QWORD PTR [rsp+0x20],rax
   140004738:	call   QWORD PTR [rip+0x2b3a]        # 0x140007278
   14000473e:	mov    DWORD PTR [rip+0x8630],eax        # 0x14000cd74
   140004744:	add    rsp,0x38
   140004748:	ret    
   140004749:	int3   
   14000474a:	int3   
   14000474b:	int3   
   14000474c:	int3   
   14000474d:	int3   
   14000474e:	int3   
   14000474f:	int3   
   140004750:	mov    QWORD PTR [rsp+0x8],rbx
   140004755:	mov    QWORD PTR [rsp+0x10],rsi
   14000475a:	mov    QWORD PTR [rsp+0x18],rdi
   14000475f:	push   r12
   140004761:	push   r14
   140004763:	push   r15
   140004765:	sub    rsp,0xb0
   14000476c:	xor    r15d,r15d
   14000476f:	mov    DWORD PTR [rsp+0x20],r15d
   140004774:	lea    rcx,[rsp+0x40]
   140004779:	call   QWORD PTR [rip+0x28c1]        # 0x140007040
   14000477f:	nop
   140004780:	mov    rax,QWORD PTR gs:0x30
   140004789:	mov    rbx,QWORD PTR [rax+0x8]
   14000478d:	mov    r14d,r15d
   140004790:	xor    eax,eax
   140004792:	lock cmpxchg QWORD PTR [rip+0x8d0d],rbx        # 0x14000d4a8
   14000479b:	je     0x1400047b9
   14000479d:	cmp    rax,rbx
   1400047a0:	jne    0x1400047ac
   1400047a2:	mov    edi,0x1
   1400047a7:	mov    r14d,edi
   1400047aa:	jmp    0x1400047be
   1400047ac:	mov    ecx,0x3e8
   1400047b1:	call   QWORD PTR [rip+0x2881]        # 0x140007038
   1400047b7:	jmp    0x140004790
   1400047b9:	mov    edi,0x1
   1400047be:	mov    eax,DWORD PTR [rip+0x8cec]        # 0x14000d4b0
   1400047c4:	cmp    eax,edi
   1400047c6:	jne    0x1400047d6
   1400047c8:	mov    esi,0x1f
   1400047cd:	mov    ecx,esi
   1400047cf:	call   0x140004cc4
   1400047d4:	jmp    0x140004847
   1400047d6:	mov    eax,DWORD PTR [rip+0x8cd4]        # 0x14000d4b0
   1400047dc:	test   eax,eax
   1400047de:	jne    0x14000483c
   1400047e0:	mov    DWORD PTR [rip+0x8cca],edi        # 0x14000d4b0
   1400047e6:	lea    r12,[rip+0x2bab]        # 0x140007398
   1400047ed:	lea    rbx,[rip+0x2b8c]        # 0x140007380
   1400047f4:	mov    QWORD PTR [rsp+0x30],rbx
   1400047f9:	mov    eax,r15d
   1400047fc:	mov    DWORD PTR [rsp+0x24],eax
   140004800:	cmp    rbx,r12
   140004803:	jae    0x14000482e
   140004805:	test   eax,eax
   140004807:	jne    0x140004832
   140004809:	mov    rsi,QWORD PTR [rbx]
   14000480c:	test   rsi,rsi
   14000480f:	je     0x140004823
   140004811:	mov    rcx,rsi
   140004814:	mov    rax,QWORD PTR [rip+0x2b0d]        # 0x140007328
   14000481b:	call   rax
   14000481d:	call   rsi
   14000481f:	mov    DWORD PTR [rsp+0x24],eax
   140004823:	add    rbx,0x8
   140004827:	mov    QWORD PTR [rsp+0x30],rbx
   14000482c:	jmp    0x140004800
   14000482e:	test   eax,eax
   140004830:	je     0x140004842
   140004832:	mov    eax,0xff
   140004837:	jmp    0x1400049a3
   14000483c:	mov    DWORD PTR [rip+0x852a],edi        # 0x14000cd6c
   140004842:	mov    esi,0x1f
   140004847:	mov    eax,DWORD PTR [rip+0x8c63]        # 0x14000d4b0
   14000484d:	cmp    eax,edi
   14000484f:	jne    0x14000486e
   140004851:	lea    rdx,[rip+0x2b20]        # 0x140007378
   140004858:	lea    rcx,[rip+0x2ad9]        # 0x140007338
   14000485f:	call   0x140004e8a
   140004864:	mov    DWORD PTR [rip+0x8c42],0x2        # 0x14000d4b0
   14000486e:	test   r14d,r14d
   140004871:	jne    0x14000487d
   140004873:	mov    rax,r15
   140004876:	xchg   QWORD PTR [rip+0x8c2b],rax        # 0x14000d4a8
   14000487d:	cmp    QWORD PTR [rip+0x8c44],r15        # 0x14000d4c8
   140004884:	je     0x1400048b4
   140004886:	lea    rcx,[rip+0x8c3b]        # 0x14000d4c8
   14000488d:	call   0x140004d20
   140004892:	test   eax,eax
   140004894:	je     0x1400048b4
   140004896:	mov    rbx,QWORD PTR [rip+0x8c2b]        # 0x14000d4c8
   14000489d:	mov    rcx,rbx
   1400048a0:	mov    rax,QWORD PTR [rip+0x2a81]        # 0x140007328
   1400048a7:	call   rax
   1400048a9:	xor    r8d,r8d
   1400048ac:	lea    edx,[r8+0x2]
   1400048b0:	xor    ecx,ecx
   1400048b2:	call   rbx
   1400048b4:	mov    rax,QWORD PTR [rip+0x297d]        # 0x140007238
   1400048bb:	mov    rdx,QWORD PTR [rax]
   1400048be:	test   rdx,rdx
   1400048c1:	jne    0x1400048cd
   1400048c3:	mov    eax,0xff
   1400048c8:	jmp    0x1400049a3
   1400048cd:	mov    QWORD PTR [rsp+0x28],rdx
   1400048d2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400048d6:	cmp    WORD PTR [rdx],0x20
   1400048da:	ja     0x140004954
   1400048dc:	cmp    WORD PTR [rdx],r15w
   1400048e0:	je     0x1400048e6
   1400048e2:	test   ecx,ecx
   1400048e4:	jne    0x140004954
   1400048e6:	movzx  eax,WORD PTR [rdx]
   1400048e9:	sub    ax,di
   1400048ec:	cmp    ax,si
   1400048ef:	ja     0x1400048fc
   1400048f1:	add    rdx,0x2
   1400048f5:	mov    QWORD PTR [rsp+0x28],rdx
   1400048fa:	jmp    0x1400048e6
   1400048fc:	mov    ecx,DWORD PTR [rsp+0x7c]
   140004900:	movzx  eax,WORD PTR [rsp+0x80]
   140004908:	mov    r9d,0xa
   14000490e:	and    cl,dil
   140004911:	cmovne r9d,eax
   140004915:	mov    r8,rdx
   140004918:	xor    edx,edx
   14000491a:	lea    rcx,[rip+0xffffffffffffb6df]        # 0x140000000
   140004921:	call   0x1400022a4
   140004926:	mov    DWORD PTR [rip+0x843c],eax        # 0x14000cd68
   14000492c:	cmp    DWORD PTR [rip+0x8455],r15d        # 0x14000cd88
   140004933:	jne    0x14000493d
   140004935:	mov    ecx,eax
   140004937:	call   QWORD PTR [rip+0x292b]        # 0x140007268
   14000493d:	cmp    DWORD PTR [rip+0x8428],r15d        # 0x14000cd6c
   140004944:	jne    0x140004952
   140004946:	call   QWORD PTR [rip+0x290c]        # 0x140007258
   14000494c:	mov    eax,DWORD PTR [rip+0x8416]        # 0x14000cd68
   140004952:	jmp    0x1400049a3
   140004954:	cmp    WORD PTR [rdx],0x22
   140004958:	jne    0x140004968
   14000495a:	mov    eax,r15d
   14000495d:	test   ecx,ecx
   14000495f:	sete   al
   140004962:	mov    ecx,eax
   140004964:	mov    DWORD PTR [rsp+0x20],eax
   140004968:	add    rdx,0x2
   14000496c:	mov    QWORD PTR [rsp+0x28],rdx
   140004971:	jmp    0x1400048d6
   140004976:	mov    DWORD PTR [rip+0x83ec],eax        # 0x14000cd68
   14000497c:	cmp    DWORD PTR [rip+0x8405],0x0        # 0x14000cd88
   140004983:	jne    0x14000498e
   140004985:	mov    ecx,eax
   140004987:	call   QWORD PTR [rip+0x28d3]        # 0x140007260
   14000498d:	int3   
   14000498e:	cmp    DWORD PTR [rip+0x83d7],0x0        # 0x14000cd6c
   140004995:	jne    0x1400049a3
   140004997:	call   QWORD PTR [rip+0x28bb]        # 0x140007258
   14000499d:	mov    eax,DWORD PTR [rip+0x83c5]        # 0x14000cd68
   1400049a3:	lea    r11,[rsp+0xb0]
   1400049ab:	mov    rbx,QWORD PTR [r11+0x20]
   1400049af:	mov    rsi,QWORD PTR [r11+0x28]
   1400049b3:	mov    rdi,QWORD PTR [r11+0x30]
   1400049b7:	mov    rsp,r11
   1400049ba:	pop    r15
   1400049bc:	pop    r14
   1400049be:	pop    r12
   1400049c0:	ret    
   1400049c1:	int3   
   1400049c2:	int3   
   1400049c3:	int3   
   1400049c4:	int3   
   1400049c5:	int3   
   1400049c6:	int3   
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	sub    rsp,0x28
   1400049d4:	call   0x140004db4
   1400049d9:	add    rsp,0x28
   1400049dd:	jmp    0x140004750
   1400049e2:	int3   
   1400049e3:	int3   
   1400049e4:	int3   
   1400049e5:	int3   
   1400049e6:	int3   
   1400049e7:	int3   
   1400049e8:	int3   
   1400049e9:	int3   
   1400049ea:	int3   
   1400049eb:	int3   
   1400049ec:	int3   
   1400049ed:	int3   
   1400049ee:	int3   
   1400049ef:	int3   
   1400049f0:	int3   
   1400049f1:	int3   
   1400049f2:	int3   
   1400049f3:	int3   
   1400049f4:	int3   
   1400049f5:	int3   
   1400049f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004a00:	cmp    rcx,QWORD PTR [rip+0x7601]        # 0x14000c008
   140004a07:	jne    0x140004a19
   140004a09:	rol    rcx,0x10
   140004a0d:	test   cx,0xffff
   140004a12:	jne    0x140004a15
   140004a14:	ret    
   140004a15:	ror    rcx,0x10
   140004a19:	jmp    0x140004ee0
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	int3   
   140004a21:	int3   
   140004a22:	int3   
   140004a23:	int3   
   140004a24:	mov    QWORD PTR [rsp+0x8],rbx
   140004a29:	push   rdi
   140004a2a:	sub    rsp,0x20
   140004a2e:	mov    rdi,rcx
   140004a31:	mov    rax,QWORD PTR [rip+0x8a88]        # 0x14000d4c0
   140004a38:	mov    QWORD PTR [rsp+0x38],rax
   140004a3d:	cmp    rax,0xffffffffffffffff
   140004a41:	jne    0x140004a5a
   140004a43:	mov    rbx,QWORD PTR [rip+0x27be]        # 0x140007208
   140004a4a:	mov    rcx,rbx
   140004a4d:	call   QWORD PTR [rip+0x28d5]        # 0x140007328
   140004a53:	mov    rcx,rdi
   140004a56:	call   rbx
   140004a58:	jmp    0x140004ab7
   140004a5a:	mov    ecx,0x8
   140004a5f:	call   0x140005058
   140004a64:	nop
   140004a65:	mov    rax,QWORD PTR [rip+0x8a54]        # 0x14000d4c0
   140004a6c:	mov    QWORD PTR [rsp+0x38],rax
   140004a71:	mov    rax,QWORD PTR [rip+0x8a40]        # 0x14000d4b8
   140004a78:	mov    QWORD PTR [rsp+0x40],rax
   140004a7d:	lea    r8,[rsp+0x40]
   140004a82:	lea    rdx,[rsp+0x38]
   140004a87:	mov    rcx,rdi
   140004a8a:	call   0x140005070
   140004a8f:	mov    rbx,rax
   140004a92:	mov    rdx,QWORD PTR [rsp+0x38]
   140004a97:	mov    QWORD PTR [rip+0x8a22],rdx        # 0x14000d4c0
   140004a9e:	mov    rdx,QWORD PTR [rsp+0x40]
   140004aa3:	mov    QWORD PTR [rip+0x8a0e],rdx        # 0x14000d4b8
   140004aaa:	mov    ecx,0x8
   140004aaf:	call   0x140005064
   140004ab4:	mov    rax,rbx
   140004ab7:	mov    rbx,QWORD PTR [rsp+0x30]
   140004abc:	add    rsp,0x20
   140004ac0:	pop    rdi
   140004ac1:	ret    
   140004ac2:	int3   
   140004ac3:	int3   
   140004ac4:	int3   
   140004ac5:	int3   
   140004ac6:	int3   
   140004ac7:	int3   
   140004ac8:	sub    rsp,0x28
   140004acc:	call   0x140004a24
   140004ad1:	neg    rax
   140004ad4:	sbb    eax,eax
   140004ad6:	neg    eax
   140004ad8:	dec    eax
   140004ada:	add    rsp,0x28
   140004ade:	ret    
   140004adf:	int3   
   140004ae0:	int3   
   140004ae1:	int3   
   140004ae2:	int3   
   140004ae3:	int3   
   140004ae4:	int3   
   140004ae5:	int3   
   140004ae6:	int3   
   140004ae7:	int3   
   140004ae8:	int3   
   140004ae9:	int3   
   140004aea:	int3   
   140004aeb:	int3   
   140004aec:	int3   
   140004aed:	int3   
   140004aee:	int3   
   140004aef:	int3   
   140004af0:	jmp    QWORD PTR [rip+0x26ca]        # 0x1400071c0
   140004af6:	int3   
   140004af7:	int3   
   140004af8:	int3   
   140004af9:	int3   
   140004afa:	int3   
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	mov    QWORD PTR [rsp+0x8],rbx
   140004b05:	push   rdi
   140004b06:	sub    rsp,0x20
   140004b0a:	mov    ebx,edx
   140004b0c:	mov    rdi,rcx
   140004b0f:	call   QWORD PTR [rip+0x26eb]        # 0x140007200
   140004b15:	test   bl,0x1
   140004b18:	je     0x140004b22
   140004b1a:	mov    rcx,rdi
   140004b1d:	call   0x140003724
   140004b22:	mov    rax,rdi
   140004b25:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b2a:	add    rsp,0x20
   140004b2e:	pop    rdi
   140004b2f:	ret    
   140004b30:	int3   
   140004b31:	int3   
   140004b32:	int3   
   140004b33:	int3   
   140004b34:	int3   
   140004b35:	int3   
   140004b36:	int3   
   140004b37:	int3   
   140004b38:	int3   
   140004b39:	int3   
   140004b3a:	int3   
   140004b3b:	int3   
   140004b3c:	int3   
   140004b3d:	int3   
   140004b3e:	int3   
   140004b3f:	int3   
   140004b40:	jmp    QWORD PTR [rip+0x26a2]        # 0x1400071e8
   140004b46:	int3   
   140004b47:	int3   
   140004b48:	int3   
   140004b49:	int3   
   140004b4a:	int3   
   140004b4b:	int3   
   140004b4c:	jmp    QWORD PTR [rip+0x269e]        # 0x1400071f0
   140004b52:	int3   
   140004b53:	int3   
   140004b54:	int3   
   140004b55:	int3   
   140004b56:	int3   
   140004b57:	int3   
   140004b58:	jmp    QWORD PTR [rip+0x2752]        # 0x1400072b0
   140004b5e:	int3   
   140004b5f:	int3   
   140004b60:	int3   
   140004b61:	int3   
   140004b62:	int3   
   140004b63:	int3   
   140004b64:	jmp    QWORD PTR [rip+0x273e]        # 0x1400072a8
   140004b6a:	int3   
   140004b6b:	int3   
   140004b6c:	int3   
   140004b6d:	int3   
   140004b6e:	int3   
   140004b6f:	int3   
   140004b70:	jmp    QWORD PTR [rip+0x272a]        # 0x1400072a0
   140004b76:	int3   
   140004b77:	int3   
   140004b78:	int3   
   140004b79:	int3   
   140004b7a:	int3   
   140004b7b:	int3   
   140004b7c:	jmp    QWORD PTR [rip+0x2716]        # 0x140007298
   140004b82:	int3   
   140004b83:	int3   
   140004b84:	int3   
   140004b85:	int3   
   140004b86:	int3   
   140004b87:	int3   
   140004b88:	int3   
   140004b89:	int3   
   140004b8a:	int3   
   140004b8b:	int3   
   140004b8c:	int3   
   140004b8d:	int3   
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	ret    0x0
   140004b93:	int3   
   140004b94:	int3   
   140004b95:	int3   
   140004b96:	int3   
   140004b97:	int3   
   140004b98:	int3   
   140004b99:	int3   
   140004b9a:	jmp    QWORD PTR [rip+0x26f0]        # 0x140007290
   140004ba0:	int3   
   140004ba1:	int3   
   140004ba2:	int3   
   140004ba3:	int3   
   140004ba4:	int3   
   140004ba5:	int3   
   140004ba6:	int3   
   140004ba7:	int3   
   140004ba8:	int3   
   140004ba9:	int3   
   140004baa:	int3   
   140004bab:	int3   
   140004bac:	int3   
   140004bad:	int3   
   140004bae:	int3   
   140004baf:	int3   
   140004bb0:	sub    rsp,0x28
   140004bb4:	mov    rax,QWORD PTR [rcx]
   140004bb7:	cmp    DWORD PTR [rax],0xe06d7363
   140004bbd:	jne    0x140004be2
   140004bbf:	cmp    DWORD PTR [rax+0x18],0x4
   140004bc3:	jne    0x140004be2
   140004bc5:	mov    ecx,DWORD PTR [rax+0x20]
   140004bc8:	lea    eax,[rcx-0x19930520]
   140004bce:	cmp    eax,0x2
   140004bd1:	jbe    0x140004bdb
   140004bd3:	cmp    ecx,0x1994000
   140004bd9:	jne    0x140004be2
   140004bdb:	call   QWORD PTR [rip+0x2617]        # 0x1400071f8
   140004be1:	int3   
   140004be2:	xor    eax,eax
   140004be4:	add    rsp,0x28
   140004be8:	ret    
   140004be9:	int3   
   140004bea:	int3   
   140004beb:	int3   
   140004bec:	int3   
   140004bed:	int3   
   140004bee:	int3   
   140004bef:	int3   
   140004bf0:	sub    rsp,0x28
   140004bf4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140004bb0
   140004bfb:	call   QWORD PTR [rip+0x2447]        # 0x140007048
   140004c01:	xor    eax,eax
   140004c03:	add    rsp,0x28
   140004c07:	ret    
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	jmp    QWORD PTR [rip+0x2674]        # 0x140007288
   140004c14:	int3   
   140004c15:	int3   
   140004c16:	int3   
   140004c17:	int3   
   140004c18:	int3   
   140004c19:	int3   
   140004c1a:	int3   
   140004c1b:	int3   
   140004c1c:	sub    rsp,0x18
   140004c20:	xor    edx,edx
   140004c22:	lea    rax,[rcx-0x1]
   140004c26:	cmp    rax,0xfffffffffffffffd
   140004c2a:	ja     0x140004c68
   140004c2c:	mov    eax,0x5a4d
   140004c31:	cmp    WORD PTR [rcx],ax
   140004c34:	jne    0x140004c60
   140004c36:	cmp    DWORD PTR [rcx+0x3c],edx
   140004c39:	jl     0x140004c60
   140004c3b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140004c42:	jae    0x140004c60
   140004c44:	movsxd rax,DWORD PTR [rcx+0x3c]
   140004c48:	add    rax,rcx
   140004c4b:	mov    QWORD PTR [rsp],rax
   140004c4f:	cmp    DWORD PTR [rax],0x4550
   140004c55:	cmovne rax,rdx
   140004c59:	mov    rdx,rax
   140004c5c:	mov    QWORD PTR [rsp],rax
   140004c60:	jmp    0x140004c68
   140004c62:	xor    edx,edx
   140004c64:	mov    QWORD PTR [rsp],rdx
   140004c68:	mov    rax,rdx
   140004c6b:	add    rsp,0x18
   140004c6f:	ret    
   140004c70:	int3   
   140004c71:	int3   
   140004c72:	int3   
   140004c73:	int3   
   140004c74:	int3   
   140004c75:	int3   
   140004c76:	int3   
   140004c77:	int3   
   140004c78:	rex push rbx
   140004c7a:	sub    rsp,0x20
   140004c7e:	mov    ebx,ecx
   140004c80:	xor    ecx,ecx
   140004c82:	call   QWORD PTR [rip+0x23c8]        # 0x140007050
   140004c88:	test   rax,rax
   140004c8b:	je     0x140004cb5
   140004c8d:	mov    rcx,rax
   140004c90:	call   0x140004c1c
   140004c95:	test   rax,rax
   140004c98:	je     0x140004cb5
   140004c9a:	mov    ecx,0x2
   140004c9f:	cmp    WORD PTR [rax+0x5c],cx
   140004ca3:	jne    0x140004ca9
   140004ca5:	mov    eax,ecx
   140004ca7:	jmp    0x140004cb7
   140004ca9:	cmp    WORD PTR [rax+0x5c],0x3
   140004cae:	mov    eax,0x1
   140004cb3:	je     0x140004cb7
   140004cb5:	mov    eax,ebx
   140004cb7:	add    rsp,0x20
   140004cbb:	pop    rbx
   140004cbc:	ret    
   140004cbd:	int3   
   140004cbe:	int3   
   140004cbf:	int3   
   140004cc0:	int3   
   140004cc1:	int3   
   140004cc2:	int3   
   140004cc3:	int3   
   140004cc4:	jmp    QWORD PTR [rip+0x25b6]        # 0x140007280
   140004cca:	int3   
   140004ccb:	int3   
   140004ccc:	int3   
   140004ccd:	int3   
   140004cce:	int3   
   140004ccf:	int3   
   140004cd0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004cd4:	xor    r9d,r9d
   140004cd7:	add    r8,rcx
   140004cda:	mov    r10,rdx
   140004cdd:	movzx  eax,WORD PTR [r8+0x14]
   140004ce2:	movzx  r11d,WORD PTR [r8+0x6]
   140004ce7:	add    rax,0x18
   140004ceb:	add    rax,r8
   140004cee:	test   r11d,r11d
   140004cf1:	je     0x140004d11
   140004cf3:	mov    edx,DWORD PTR [rax+0xc]
   140004cf6:	cmp    r10,rdx
   140004cf9:	jb     0x140004d05
   140004cfb:	mov    ecx,DWORD PTR [rax+0x8]
   140004cfe:	add    ecx,edx
   140004d00:	cmp    r10,rcx
   140004d03:	jb     0x140004d13
   140004d05:	inc    r9d
   140004d08:	add    rax,0x28
   140004d0c:	cmp    r9d,r11d
   140004d0f:	jb     0x140004cf3
   140004d11:	xor    eax,eax
   140004d13:	ret    
   140004d14:	int3   
   140004d15:	int3   
   140004d16:	int3   
   140004d17:	int3   
   140004d18:	int3   
   140004d19:	int3   
   140004d1a:	int3   
   140004d1b:	int3   
   140004d1c:	int3   
   140004d1d:	int3   
   140004d1e:	int3   
   140004d1f:	int3   
   140004d20:	mov    QWORD PTR [rsp+0x8],rbx
   140004d25:	push   rdi
   140004d26:	sub    rsp,0x20
   140004d2a:	mov    rbx,rcx
   140004d2d:	lea    rdi,[rip+0xffffffffffffb2cc]        # 0x140000000
   140004d34:	mov    rcx,rdi
   140004d37:	call   0x140004d80
   140004d3c:	test   eax,eax
   140004d3e:	je     0x140004d62
   140004d40:	sub    rbx,rdi
   140004d43:	mov    rdx,rbx
   140004d46:	mov    rcx,rdi
   140004d49:	call   0x140004cd0
   140004d4e:	test   rax,rax
   140004d51:	je     0x140004d62
   140004d53:	mov    eax,DWORD PTR [rax+0x24]
   140004d56:	shr    eax,0x1f
   140004d59:	not    eax
   140004d5b:	and    eax,0x1
   140004d5e:	jmp    0x140004d62
   140004d60:	xor    eax,eax
   140004d62:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d67:	add    rsp,0x20
   140004d6b:	pop    rdi
   140004d6c:	ret    
   140004d6d:	int3   
   140004d6e:	int3   
   140004d6f:	int3   
   140004d70:	int3   
   140004d71:	int3   
   140004d72:	int3   
   140004d73:	int3   
   140004d74:	int3   
   140004d75:	int3   
   140004d76:	int3   
   140004d77:	int3   
   140004d78:	int3   
   140004d79:	int3   
   140004d7a:	int3   
   140004d7b:	int3   
   140004d7c:	int3   
   140004d7d:	int3   
   140004d7e:	int3   
   140004d7f:	int3   
   140004d80:	mov    rax,rcx
   140004d83:	mov    ecx,0x5a4d
   140004d88:	cmp    WORD PTR [rax],cx
   140004d8b:	je     0x140004d90
   140004d8d:	xor    eax,eax
   140004d8f:	ret    
   140004d90:	movsxd rcx,DWORD PTR [rax+0x3c]
   140004d94:	add    rcx,rax
   140004d97:	xor    eax,eax
   140004d99:	cmp    DWORD PTR [rcx],0x4550
   140004d9f:	jne    0x140004dad
   140004da1:	mov    edx,0x20b
   140004da6:	cmp    WORD PTR [rcx+0x18],dx
   140004daa:	sete   al
   140004dad:	ret    
   140004dae:	int3   
   140004daf:	int3   
   140004db0:	int3   
   140004db1:	int3   
   140004db2:	int3   
   140004db3:	int3   
   140004db4:	mov    QWORD PTR [rsp+0x20],rbx
   140004db9:	push   rbp
   140004dba:	mov    rbp,rsp
   140004dbd:	sub    rsp,0x20
   140004dc1:	and    QWORD PTR [rbp+0x18],0x0
   140004dc6:	movabs rbx,0x2b992ddfa232
   140004dd0:	mov    rax,QWORD PTR [rip+0x7231]        # 0x14000c008
   140004dd7:	cmp    rax,rbx
   140004dda:	jne    0x140004e6f
   140004de0:	lea    rcx,[rbp+0x18]
   140004de4:	call   QWORD PTR [rip+0x2286]        # 0x140007070
   140004dea:	mov    rax,QWORD PTR [rbp+0x18]
   140004dee:	mov    QWORD PTR [rbp+0x10],rax
   140004df2:	call   QWORD PTR [rip+0x2268]        # 0x140007060
   140004df8:	mov    eax,eax
   140004dfa:	xor    QWORD PTR [rbp+0x10],rax
   140004dfe:	call   QWORD PTR [rip+0x2264]        # 0x140007068
   140004e04:	mov    eax,eax
   140004e06:	xor    QWORD PTR [rbp+0x10],rax
   140004e0a:	call   QWORD PTR [rip+0x2268]        # 0x140007078
   140004e10:	mov    eax,eax
   140004e12:	shl    rax,0x18
   140004e16:	xor    QWORD PTR [rbp+0x10],rax
   140004e1a:	call   QWORD PTR [rip+0x2258]        # 0x140007078
   140004e20:	mov    eax,eax
   140004e22:	lea    rcx,[rbp+0x10]
   140004e26:	xor    rax,QWORD PTR [rbp+0x10]
   140004e2a:	xor    rax,rcx
   140004e2d:	lea    rcx,[rbp+0x20]
   140004e31:	mov    QWORD PTR [rbp+0x10],rax
   140004e35:	call   QWORD PTR [rip+0x221d]        # 0x140007058
   140004e3b:	mov    eax,DWORD PTR [rbp+0x20]
   140004e3e:	movabs rcx,0xffffffffffff
   140004e48:	shl    rax,0x20
   140004e4c:	xor    rax,QWORD PTR [rbp+0x20]
   140004e50:	xor    rax,QWORD PTR [rbp+0x10]
   140004e54:	and    rax,rcx
   140004e57:	movabs rcx,0x2b992ddfa233
   140004e61:	cmp    rax,rbx
   140004e64:	cmove  rax,rcx
   140004e68:	mov    QWORD PTR [rip+0x7199],rax        # 0x14000c008
   140004e6f:	mov    rbx,QWORD PTR [rsp+0x48]
   140004e74:	not    rax
   140004e77:	mov    QWORD PTR [rip+0x7192],rax        # 0x14000c010
   140004e7e:	add    rsp,0x20
   140004e82:	pop    rbp
   140004e83:	ret    
   140004e84:	int3   
   140004e85:	int3   
   140004e86:	int3   
   140004e87:	int3   
   140004e88:	int3   
   140004e89:	int3   
   140004e8a:	jmp    QWORD PTR [rip+0x23b8]        # 0x140007248
   140004e90:	int3   
   140004e91:	int3   
   140004e92:	int3   
   140004e93:	int3   
   140004e94:	int3   
   140004e95:	int3   
   140004e96:	jmp    QWORD PTR [rip+0x23a4]        # 0x140007240
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	int3   
   140004ea1:	int3   
   140004ea2:	int3   
   140004ea3:	int3   
   140004ea4:	rex push rbx
   140004ea6:	sub    rsp,0x20
   140004eaa:	mov    rbx,rcx
   140004ead:	xor    ecx,ecx
   140004eaf:	call   QWORD PTR [rip+0x2193]        # 0x140007048
   140004eb5:	mov    rcx,rbx
   140004eb8:	call   QWORD PTR [rip+0x21c2]        # 0x140007080
   140004ebe:	call   QWORD PTR [rip+0x220c]        # 0x1400070d0
   140004ec4:	mov    rcx,rax
   140004ec7:	mov    edx,0xc0000409
   140004ecc:	add    rsp,0x20
   140004ed0:	pop    rbx
   140004ed1:	rex.W jmp QWORD PTR [rip+0x21b0]        # 0x140007088
   140004ed8:	int3   
   140004ed9:	int3   
   140004eda:	int3   
   140004edb:	int3   
   140004edc:	int3   
   140004edd:	int3   
   140004ede:	int3   
   140004edf:	int3   
   140004ee0:	mov    QWORD PTR [rsp+0x8],rcx
   140004ee5:	sub    rsp,0x88
   140004eec:	lea    rcx,[rip+0x7f4d]        # 0x14000ce40
   140004ef3:	call   QWORD PTR [rip+0x23e7]        # 0x1400072e0
   140004ef9:	mov    rax,QWORD PTR [rip+0x8038]        # 0x14000cf38
   140004f00:	mov    QWORD PTR [rsp+0x48],rax
   140004f05:	xor    r8d,r8d
   140004f08:	lea    rdx,[rsp+0x50]
   140004f0d:	mov    rcx,QWORD PTR [rsp+0x48]
   140004f12:	call   QWORD PTR [rip+0x23b8]        # 0x1400072d0
   140004f18:	mov    QWORD PTR [rsp+0x40],rax
   140004f1d:	cmp    QWORD PTR [rsp+0x40],0x0
   140004f23:	je     0x140004f67
   140004f25:	mov    QWORD PTR [rsp+0x38],0x0
   140004f2e:	lea    rax,[rsp+0x58]
   140004f33:	mov    QWORD PTR [rsp+0x30],rax
   140004f38:	lea    rax,[rsp+0x60]
   140004f3d:	mov    QWORD PTR [rsp+0x28],rax
   140004f42:	lea    rax,[rip+0x7ef7]        # 0x14000ce40
   140004f49:	mov    QWORD PTR [rsp+0x20],rax
   140004f4e:	mov    r9,QWORD PTR [rsp+0x40]
   140004f53:	mov    r8,QWORD PTR [rsp+0x48]
   140004f58:	mov    rdx,QWORD PTR [rsp+0x50]
   140004f5d:	xor    ecx,ecx
   140004f5f:	call   QWORD PTR [rip+0x2373]        # 0x1400072d8
   140004f65:	jmp    0x140004f8a
   140004f67:	mov    rax,QWORD PTR [rip+0x7f6a]        # 0x14000ced8
   140004f6e:	mov    rax,QWORD PTR [rax]
   140004f71:	mov    QWORD PTR [rip+0x7fc0],rax        # 0x14000cf38
   140004f78:	mov    rax,QWORD PTR [rip+0x7f59]        # 0x14000ced8
   140004f7f:	add    rax,0x8
   140004f83:	mov    QWORD PTR [rip+0x7f4e],rax        # 0x14000ced8
   140004f8a:	mov    rax,QWORD PTR [rip+0x7fa7]        # 0x14000cf38
   140004f91:	mov    QWORD PTR [rip+0x7e18],rax        # 0x14000cdb0
   140004f98:	mov    rax,QWORD PTR [rsp+0x90]
   140004fa0:	mov    QWORD PTR [rip+0x7f19],rax        # 0x14000cec0
   140004fa7:	mov    DWORD PTR [rip+0x7def],0xc0000409        # 0x14000cda0
   140004fb1:	mov    DWORD PTR [rip+0x7de9],0x1        # 0x14000cda4
   140004fbb:	mov    DWORD PTR [rip+0x7df3],0x3        # 0x14000cdb8
   140004fc5:	mov    eax,0x8
   140004fca:	imul   rax,rax,0x0
   140004fce:	lea    rcx,[rip+0x7deb]        # 0x14000cdc0
   140004fd5:	mov    QWORD PTR [rcx+rax*1],0x2
   140004fdd:	mov    eax,0x8
   140004fe2:	imul   rax,rax,0x1
   140004fe6:	lea    rcx,[rip+0x7dd3]        # 0x14000cdc0
   140004fed:	mov    rdx,QWORD PTR [rip+0x7014]        # 0x14000c008
   140004ff4:	mov    QWORD PTR [rcx+rax*1],rdx
   140004ff8:	mov    eax,0x8
   140004ffd:	imul   rax,rax,0x2
   140005001:	lea    rcx,[rip+0x7db8]        # 0x14000cdc0
   140005008:	mov    rdx,QWORD PTR [rip+0x7001]        # 0x14000c010
   14000500f:	mov    QWORD PTR [rcx+rax*1],rdx
   140005013:	mov    eax,0x8
   140005018:	imul   rax,rax,0x0
   14000501c:	mov    rcx,QWORD PTR [rip+0x6fe5]        # 0x14000c008
   140005023:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005028:	mov    eax,0x8
   14000502d:	imul   rax,rax,0x1
   140005031:	mov    rcx,QWORD PTR [rip+0x6fd8]        # 0x14000c010
   140005038:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000503d:	lea    rcx,[rip+0x3794]        # 0x1400087d8
   140005044:	call   0x140004ea4
   140005049:	add    rsp,0x88
   140005050:	ret    
   140005051:	int3   
   140005052:	int3   
   140005053:	int3   
   140005054:	int3   
   140005055:	int3   
   140005056:	int3   
   140005057:	int3   
   140005058:	jmp    QWORD PTR [rip+0x21c2]        # 0x140007220
   14000505e:	int3   
   14000505f:	int3   
   140005060:	int3   
   140005061:	int3   
   140005062:	int3   
   140005063:	int3   
   140005064:	jmp    QWORD PTR [rip+0x21ae]        # 0x140007218
   14000506a:	int3   
   14000506b:	int3   
   14000506c:	int3   
   14000506d:	int3   
   14000506e:	int3   
   14000506f:	int3   
   140005070:	jmp    QWORD PTR [rip+0x219a]        # 0x140007210
   140005076:	int3   
   140005077:	int3   
   140005078:	int3   
   140005079:	int3   
   14000507a:	int3   
   14000507b:	int3   
   14000507c:	int3   
   14000507d:	int3   
   14000507e:	int3   
   14000507f:	int3   
   140005080:	int3   
   140005081:	int3   
   140005082:	int3   
   140005083:	int3   
   140005084:	int3   
   140005085:	int3   
   140005086:	int3   
   140005087:	int3   
   140005088:	sub    rsp,0x28
   14000508c:	mov    r8,QWORD PTR [r9+0x38]
   140005090:	mov    rcx,rdx
   140005093:	mov    rdx,r9
   140005096:	call   0x1400050ac
   14000509b:	mov    eax,0x1
   1400050a0:	add    rsp,0x28
   1400050a4:	ret    
   1400050a5:	int3   
   1400050a6:	int3   
   1400050a7:	int3   
   1400050a8:	int3   
   1400050a9:	int3   
   1400050aa:	int3   
   1400050ab:	int3   
   1400050ac:	rex push rbx
   1400050ae:	sub    rsp,0x20
   1400050b2:	mov    r11d,DWORD PTR [r8]
   1400050b5:	mov    rbx,rdx
   1400050b8:	and    r11d,0xfffffff8
   1400050bc:	mov    r9,rcx
   1400050bf:	test   BYTE PTR [r8],0x4
   1400050c3:	mov    r10,rcx
   1400050c6:	je     0x1400050db
   1400050c8:	mov    eax,DWORD PTR [r8+0x8]
   1400050cc:	movsxd r10,DWORD PTR [r8+0x4]
   1400050d0:	neg    eax
   1400050d2:	add    r10,rcx
   1400050d5:	movsxd rcx,eax
   1400050d8:	and    r10,rcx
   1400050db:	movsxd rax,r11d
   1400050de:	mov    rdx,QWORD PTR [rax+r10*1]
   1400050e2:	mov    rax,QWORD PTR [rbx+0x10]
   1400050e6:	mov    ecx,DWORD PTR [rax+0x8]
   1400050e9:	add    rcx,QWORD PTR [rbx+0x8]
   1400050ed:	test   BYTE PTR [rcx+0x3],0xf
   1400050f1:	je     0x1400050ff
   1400050f3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400050f7:	and    eax,0xfffffff0
   1400050fa:	cdqe   
   1400050fc:	add    r9,rax
   1400050ff:	xor    r9,rdx
   140005102:	mov    rcx,r9
   140005105:	add    rsp,0x20
   140005109:	pop    rbx
   14000510a:	jmp    0x140004a00
   14000510f:	int3   
   140005110:	int3   
   140005111:	int3   
   140005112:	int3   
   140005113:	int3   
   140005114:	int3   
   140005115:	int3   
   140005116:	int3   
   140005117:	int3   
   140005118:	mov    rax,rsp
   14000511b:	mov    QWORD PTR [rax+0x8],rbx
   14000511f:	mov    QWORD PTR [rax+0x10],rbp
   140005123:	mov    QWORD PTR [rax+0x18],rsi
   140005127:	mov    QWORD PTR [rax+0x20],rdi
   14000512b:	push   r14
   14000512d:	sub    rsp,0x20
   140005131:	mov    rbx,QWORD PTR [r9+0x38]
   140005135:	mov    rsi,rdx
   140005138:	mov    r14,r8
   14000513b:	mov    rbp,rcx
   14000513e:	mov    rdx,r9
   140005141:	mov    rcx,rsi
   140005144:	mov    rdi,r9
   140005147:	lea    r8,[rbx+0x4]
   14000514b:	call   0x1400050ac
   140005150:	mov    r11d,DWORD PTR [rbx+0x4]
   140005154:	mov    r8d,0x1
   14000515a:	mov    r10d,DWORD PTR [rbp+0x4]
   14000515e:	mov    eax,r11d
   140005161:	and    eax,r8d
   140005164:	and    r11d,0x2
   140005168:	and    r10b,0x66
   14000516c:	cmove  r11d,eax
   140005170:	test   r11d,r11d
   140005173:	je     0x140005189
   140005175:	mov    r9,rdi
   140005178:	mov    r8,r14
   14000517b:	mov    rdx,rsi
   14000517e:	mov    rcx,rbp
   140005181:	call   0x140004b70
   140005186:	mov    r8d,eax
   140005189:	mov    rbx,QWORD PTR [rsp+0x30]
   14000518e:	mov    eax,r8d
   140005191:	mov    rbp,QWORD PTR [rsp+0x38]
   140005196:	mov    rsi,QWORD PTR [rsp+0x40]
   14000519b:	mov    rdi,QWORD PTR [rsp+0x48]
   1400051a0:	add    rsp,0x20
   1400051a4:	pop    r14
   1400051a6:	ret    
   1400051a7:	int3   
   1400051a8:	int3   
   1400051a9:	int3   
   1400051aa:	int3   
   1400051ab:	int3   
   1400051ac:	int3   
   1400051ad:	int3   
   1400051ae:	jmp    QWORD PTR [rip+0x1ff4]        # 0x1400071a8
   1400051b4:	int3   
   1400051b5:	int3   
   1400051b6:	int3   
   1400051b7:	int3   
   1400051b8:	int3   
   1400051b9:	int3   
   1400051ba:	jmp    QWORD PTR [rip+0x2100]        # 0x1400072c0
   1400051c0:	int3   
   1400051c1:	int3   
   1400051c2:	int3   
   1400051c3:	int3   
   1400051c4:	int3   
   1400051c5:	int3   
   1400051c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400051d0:	jmp    rax
   1400051d2:	int3   
   1400051d3:	int3   
   1400051d4:	int3   
   1400051d5:	int3   
   1400051d6:	int3   
   1400051d7:	int3   
   1400051d8:	int3   
   1400051d9:	int3   
   1400051da:	int3   
   1400051db:	int3   
   1400051dc:	int3   
   1400051dd:	int3   
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	int3   
   1400051e1:	int3   
   1400051e2:	int3   
   1400051e3:	int3   
   1400051e4:	int3   
   1400051e5:	int3   
   1400051e6:	mov    QWORD PTR [rsp+0x10],rdx
   1400051eb:	push   rbp
   1400051ec:	sub    rsp,0x20
   1400051f0:	mov    rbp,rdx
   1400051f3:	mov    rcx,QWORD PTR [rbp+0x68]
   1400051f7:	mov    QWORD PTR [rbp+0x68],rcx
   1400051fb:	xor    eax,eax
   1400051fd:	add    rcx,0x1
   140005201:	je     0x140005215
   140005203:	cmp    rcx,0xffffffffffffffff
   140005207:	ja     0x140005210
   140005209:	call   0x1400036c4
   14000520e:	jmp    0x140005215
   140005210:	call   0x140004598
   140005215:	mov    QWORD PTR [rbp+0x78],rax
   140005219:	lea    rax,[rip+0xffffffffffffc59f]        # 0x1400017bf
   140005220:	add    rsp,0x20
   140005224:	pop    rbp
   140005225:	ret    
   140005226:	int3   
   140005227:	mov    QWORD PTR [rsp+0x10],rdx
   14000522c:	push   rbp
   14000522d:	sub    rsp,0x20
   140005231:	mov    rbp,rdx
   140005234:	xor    r8d,r8d
   140005237:	mov    dl,0x1
   140005239:	mov    rcx,QWORD PTR [rbp+0x60]
   14000523d:	call   0x1400013e8
   140005242:	xor    edx,edx
   140005244:	xor    ecx,ecx
   140005246:	call   0x140004b64
   14000524b:	nop
   14000524c:	int3   
   14000524d:	int3   
   14000524e:	int3   
   14000524f:	int3   
   140005250:	int3   
   140005251:	int3   
   140005252:	lea    rcx,[rdx+0x98]
   140005259:	jmp    0x140003bfc
   14000525e:	lea    rcx,[rdx+0xa8]
   140005265:	jmp    0x140003bfc
   14000526a:	lea    rcx,[rdx+0x90]
   140005271:	jmp    0x1400024ac
   140005276:	lea    rcx,[rdx+0x80]
   14000527d:	jmp    0x1400024ac
   140005282:	lea    rcx,[rdx+0x88]
   140005289:	jmp    0x1400024ac
   14000528e:	int3   
   14000528f:	int3   
   140005290:	int3   
   140005291:	int3   
   140005292:	int3   
   140005293:	int3   
   140005294:	mov    QWORD PTR [rsp+0x10],rdx
   140005299:	push   rbp
   14000529a:	sub    rsp,0x20
   14000529e:	mov    rbp,rdx
   1400052a1:	mov    rcx,QWORD PTR [rbp+0x28]
   1400052a5:	call   0x1400041cc
   1400052aa:	mov    DWORD PTR [rbp+0x40],eax
   1400052ad:	lea    rax,[rip+0xfffffffffffff18d]        # 0x140004441
   1400052b4:	add    rsp,0x20
   1400052b8:	pop    rbp
   1400052b9:	ret    
   1400052ba:	int3   
   1400052bb:	mov    QWORD PTR [rsp+0x10],rdx
   1400052c0:	push   rbp
   1400052c1:	sub    rsp,0x20
   1400052c5:	mov    rbp,rdx
   1400052c8:	mov    DWORD PTR [rbp+0x40],0x80004005
   1400052cf:	lea    rax,[rip+0xfffffffffffff165]        # 0x14000443b
   1400052d6:	add    rsp,0x20
   1400052da:	pop    rbp
   1400052db:	ret    
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	int3   
   1400052e1:	int3   
   1400052e2:	int3   
   1400052e3:	rex push rbp
   1400052e5:	sub    rsp,0x20
   1400052e9:	mov    rbp,rdx
   1400052ec:	mov    rax,QWORD PTR [rcx]
   1400052ef:	mov    rdx,rcx
   1400052f2:	mov    ecx,DWORD PTR [rax]
   1400052f4:	call   0x140004c0e
   1400052f9:	nop
   1400052fa:	add    rsp,0x20
   1400052fe:	pop    rbp
   1400052ff:	ret    
   140005300:	int3   
   140005301:	int3   
   140005302:	int3   
   140005303:	int3   
   140005304:	int3   
   140005305:	int3   
   140005306:	int3   
   140005307:	rex push rbp
   140005309:	sub    rsp,0x20
   14000530d:	mov    rbp,rdx
   140005310:	mov    ecx,0x8
   140005315:	call   0x140005064
   14000531a:	nop
   14000531b:	add    rsp,0x20
   14000531f:	pop    rbp
   140005320:	ret    
   140005321:	int3   
   140005322:	int3   
   140005323:	int3   
   140005324:	int3   
   140005325:	int3   
   140005326:	int3   
   140005327:	int3   
   140005328:	int3   
   140005329:	int3   
   14000532a:	int3   
   14000532b:	int3   
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	rex push rbp
   140005332:	sub    rsp,0x20
   140005336:	mov    rbp,rdx
   140005339:	mov    rax,QWORD PTR [rcx]
   14000533c:	xor    ecx,ecx
   14000533e:	cmp    DWORD PTR [rax],0xc0000005
   140005344:	sete   cl
   140005347:	mov    eax,ecx
   140005349:	add    rsp,0x20
   14000534d:	pop    rbp
   14000534e:	ret    
   14000534f:	int3   
   140005350:	int3   
   140005351:	int3   
   140005352:	int3   
   140005353:	int3   
   140005354:	int3   
   140005355:	int3   
   140005356:	int3   
   140005357:	int3   
   140005358:	int3   
   140005359:	int3   
   14000535a:	int3   
   14000535b:	int3   
   14000535c:	int3   
   14000535d:	int3   
   14000535e:	int3   
   14000535f:	int3   
   140005360:	lea    rax,[rip+0x35a1]        # 0x140008908
   140005367:	mov    QWORD PTR [rip+0x6cba],rax        # 0x14000c028
   14000536e:	ret    
   14000536f:	int3   
   140005370:	int3   
   140005371:	int3   
   140005372:	int3   
   140005373:	int3   
   140005374:	int3   
   140005375:	int3   
   140005376:	int3   
   140005377:	int3   
   140005378:	int3   
   140005379:	int3   
   14000537a:	int3   
   14000537b:	int3   
   14000537c:	int3   
   14000537d:	int3   
   14000537e:	int3   
   14000537f:	int3   
   140005380:	lea    rax,[rip+0x3581]        # 0x140008908
   140005387:	mov    QWORD PTR [rip+0x6ca2],rax        # 0x14000c030
   14000538e:	ret    
   14000538f:	int3   
   140005390:	int3   
   140005391:	int3   
   140005392:	int3   
   140005393:	int3   
   140005394:	int3   
   140005395:	int3   
   140005396:	int3   
   140005397:	int3   
   140005398:	int3   
   140005399:	int3   
   14000539a:	int3   
   14000539b:	int3   
   14000539c:	int3   
   14000539d:	int3   
   14000539e:	int3   
   14000539f:	int3   
   1400053a0:	lea    rax,[rip+0x3561]        # 0x140008908
   1400053a7:	mov    QWORD PTR [rip+0x6c8a],rax        # 0x14000c038
   1400053ae:	ret    
   1400053af:	int3   
   1400053b0:	int3   
   1400053b1:	int3   
   1400053b2:	int3   
   1400053b3:	int3   
   1400053b4:	int3   
   1400053b5:	int3   
   1400053b6:	int3   
   1400053b7:	int3   
   1400053b8:	int3   
   1400053b9:	int3   
   1400053ba:	int3   
   1400053bb:	int3   
   1400053bc:	int3   
   1400053bd:	int3   
   1400053be:	int3   
   1400053bf:	int3   
   1400053c0:	lea    rcx,[rip+0x80b9]        # 0x14000d480
   1400053c7:	jmp    0x14000293c
   1400053cc:	int3   
   1400053cd:	int3   
   1400053ce:	int3   
   1400053cf:	int3   
   1400053d0:	int3   
   1400053d1:	int3   
   1400053d2:	int3   
   1400053d3:	int3   
   1400053d4:	int3   
   1400053d5:	int3   
   1400053d6:	int3   
   1400053d7:	int3   
   1400053d8:	int3   
   1400053d9:	int3   
   1400053da:	int3   
   1400053db:	int3   
   1400053dc:	int3   
   1400053dd:	int3   
   1400053de:	int3   
   1400053df:	int3   
   1400053e0:	sub    rsp,0x28
   1400053e4:	mov    rax,QWORD PTR [rip+0x7fb5]        # 0x14000d3a0
   1400053eb:	test   rax,rax
   1400053ee:	je     0x1400053fd
   1400053f0:	mov    rcx,QWORD PTR [rip+0x7fa9]        # 0x14000d3a0
   1400053f7:	call   QWORD PTR [rip+0x1c93]        # 0x140007090
   1400053fd:	add    rsp,0x28
   140005401:	ret    

Disassembly of section .imrsiv:

0000000140006000 <.imrsiv>:
   140006000:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	js     0x140006fb3
   140007002:	add    BYTE PTR [rax],al
   140007004:	add    BYTE PTR [rax],al
   140007006:	add    BYTE PTR [rax],al
   140007008:	mov    BYTE PTR [rcx+0x0],dh
   14000700e:	add    BYTE PTR [rax],al
   140007010:	movabs al,ds:0xb6000000000000b1
   140007019:	mov    cl,0x0
   14000701b:	add    BYTE PTR [rax],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    ah,cl
   140007021:	mov    cl,0x0
   140007023:	add    BYTE PTR [rax],al
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    dl,ah
   140007029:	mov    cl,0x0
	...
   140007037:	add    BYTE PTR [rsi+0xb7],dl
   14000703d:	add    BYTE PTR [rax],al
   14000703f:	add    BYTE PTR [rsi+0xb7],bl
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    BYTE PTR [rax+0xb7],dh
   14000704d:	add    BYTE PTR [rax],al
   14000704f:	add    dh,cl
   140007051:	mov    bh,0x0
   140007053:	add    BYTE PTR [rax],al
   140007055:	add    BYTE PTR [rax],al
   140007057:	add    dl,ah
   140007059:	mov    bh,0x0
   14000705b:	add    BYTE PTR [rax],al
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	add    ah,bh
   140007061:	mov    bh,0x0
   140007063:	add    BYTE PTR [rax],al
   140007065:	add    BYTE PTR [rax],al
   140007067:	add    BYTE PTR [rdx],dl
   140007069:	mov    eax,0x0
   14000706e:	add    BYTE PTR [rax],al
   140007070:	sub    BYTE PTR [rax+0x0],bh
   140007076:	add    BYTE PTR [rax],al
   140007078:	rex.X mov eax,0x0
   14000707e:	add    BYTE PTR [rax],al
   140007080:	push   rdx
   140007081:	mov    eax,0x0
   140007086:	add    BYTE PTR [rax],al
   140007088:	outs   dx,BYTE PTR ds:[rsi]
   140007089:	mov    eax,0x0
   14000708e:	add    BYTE PTR [rax],al
   140007090:	(bad)  
   140007091:	mov    eax,0x0
   140007096:	add    BYTE PTR [rax],al
   140007098:	nop
   140007099:	mov    eax,0x0
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	lods   al,BYTE PTR ds:[rsi]
   1400070a1:	mov    eax,0x0
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	(bad)  
   1400070a9:	mov    eax,0x0
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	cld    
   1400070b1:	mov    dl,0x0
   1400070b3:	add    BYTE PTR [rax],al
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    dh,ah
   1400070b9:	mov    dl,0x0
   1400070bb:	add    BYTE PTR [rax],al
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    al,bl
   1400070c1:	mov    dl,0x0
   1400070c3:	add    BYTE PTR [rax],al
   1400070c5:	add    BYTE PTR [rax],al
   1400070c7:	add    ah,cl
   1400070c9:	mov    dl,0x0
   1400070cb:	add    BYTE PTR [rax],al
   1400070cd:	add    BYTE PTR [rax],al
   1400070cf:	add    BYTE PTR [rax+0xb2],bh
   1400070d5:	add    BYTE PTR [rax],al
   1400070d7:	add    BYTE PTR [rdx+rsi*4+0x0],bl
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	mov    WORD PTR [rdx+0x0],?
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	jl     0x14000709c
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	fs mov dl,0x0
   1400070f3:	add    BYTE PTR [rax],al
   1400070f5:	add    BYTE PTR [rax],al
   1400070f7:	add    BYTE PTR [rdx-0x4e],cl
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	add    BYTE PTR [rax],al
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	xor    BYTE PTR [rdx+0x0],dh
   140007106:	add    BYTE PTR [rax],al
   140007108:	sbb    BYTE PTR [rdx+0x0],dh
   14000710e:	add    BYTE PTR [rax],al
   140007110:	or     BYTE PTR [rdx+0x0],dh
	...
   14000711e:	add    BYTE PTR [rax],al
   140007120:	test   al,0xb6
	...
   14000712e:	add    BYTE PTR [rax],al
   140007130:	rex.RX mov dil,0x0
   140007133:	add    BYTE PTR [rax],al
   140007135:	add    BYTE PTR [rax],al
   140007137:	add    BYTE PTR [rdx-0x49],bl
	...
   140007146:	add    BYTE PTR [rax],al
   140007148:	xor    dh,BYTE PTR [rbp+0x0]
   14000714e:	add    BYTE PTR [rax],al
   140007150:	rex.X mov bpl,0x0
   140007153:	add    BYTE PTR [rax],al
   140007155:	add    BYTE PTR [rax],al
   140007157:	add    BYTE PTR [rbp+rsi*4+0x0],dl
   14000715b:	add    BYTE PTR [rax],al
   14000715d:	add    BYTE PTR [rax],al
   14000715f:	add    BYTE PTR [rbp+rsi*4+0x0],dh
	...
   14000716f:	add    BYTE PTR [rbp+rsi*4+0x0],dh
   140007176:	add    BYTE PTR [rax],al
   140007178:	loopne 0x14000712f
   14000717a:	add    BYTE PTR [rax],al
   14000717c:	add    BYTE PTR [rax],al
   14000717e:	add    BYTE PTR [rax],al
   140007180:	cld    
   140007181:	mov    ch,0x0
   140007183:	add    BYTE PTR [rax],al
   140007185:	add    BYTE PTR [rax],al
   140007187:	add    BYTE PTR [rsi+rsi*4],dl
   14000718a:	add    BYTE PTR [rax],al
   14000718c:	add    BYTE PTR [rax],al
   14000718e:	add    BYTE PTR [rax],al
   140007190:	retf   0xb5
	...
   14000719f:	add    ah,ch
   1400071a1:	mov    eax,0x0
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	sbb    al,0xb9
   1400071aa:	add    BYTE PTR [rax],al
   1400071ac:	add    BYTE PTR [rax],al
   1400071ae:	add    BYTE PTR [rax],al
   1400071b0:	(bad)  
   1400071b1:	mov    ecx,0x0
   1400071b6:	add    BYTE PTR [rax],al
   1400071b8:	sbb    dh,BYTE PTR [rbx+0x0]
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	and    al,0xb3
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	add    BYTE PTR [rax],al
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	xor    BYTE PTR [rbx+0x0],dh
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	cmp    BYTE PTR [rbx+0x0],dh
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	rex.X mov bl,0x0
   1400071db:	add    BYTE PTR [rax],al
   1400071dd:	add    BYTE PTR [rax],al
   1400071df:	add    BYTE PTR [rdx-0x4d],cl
   1400071e2:	add    BYTE PTR [rax],al
   1400071e4:	add    BYTE PTR [rax],al
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	push   rsp
   1400071e9:	mov    bl,0x0
   1400071eb:	add    BYTE PTR [rax],al
   1400071ed:	add    BYTE PTR [rax],al
   1400071ef:	add    BYTE PTR [rdx-0x4d],dh
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	add    BYTE PTR [rax],al
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	(bad)  
   1400071f9:	mov    ch,0x0
   1400071fb:	add    BYTE PTR [rax],al
   1400071fd:	add    BYTE PTR [rax],al
   1400071ff:	add    BYTE PTR [rsi],al
   140007201:	mov    ch,0x0
   140007203:	add    BYTE PTR [rax],al
   140007205:	add    BYTE PTR [rax],al
   140007207:	add    ah,bh
   140007209:	mov    ah,0x0
   14000720b:	add    BYTE PTR [rax],al
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    dh,ch
   140007211:	mov    ah,0x0
   140007213:	add    BYTE PTR [rax],al
   140007215:	add    BYTE PTR [rax],al
   140007217:	add    ah,ah
   140007219:	mov    ah,0x0
   14000721b:	add    BYTE PTR [rax],al
   14000721d:	add    BYTE PTR [rax],al
   14000721f:	add    ah,bl
   140007221:	mov    ah,0x0
   140007223:	add    BYTE PTR [rax],al
   140007225:	add    BYTE PTR [rax],al
   140007227:	add    ah,al
   140007229:	mov    ah,0x0
   14000722b:	add    BYTE PTR [rax],al
   14000722d:	add    BYTE PTR [rax],al
   14000722f:	add    BYTE PTR [rdx+0xb4],bh
   140007235:	add    BYTE PTR [rax],al
   140007237:	add    BYTE PTR [rax+0xb4],dh
   14000723d:	add    BYTE PTR [rax],al
   14000723f:	add    BYTE PTR [rax+0xb4],bl
   140007245:	add    BYTE PTR [rax],al
   140007247:	add    BYTE PTR [rsp+rsi*4+0x0],cl
   14000724e:	add    BYTE PTR [rax],al
   140007250:	js     0x140007206
   140007252:	add    BYTE PTR [rax],al
   140007254:	add    BYTE PTR [rax],al
   140007256:	add    BYTE PTR [rax],al
   140007258:	outs   dx,BYTE PTR ds:[rsi]
   140007259:	mov    ah,0x0
   14000725b:	add    BYTE PTR [rax],al
   14000725d:	add    BYTE PTR [rax],al
   14000725f:	add    BYTE PTR [rsi-0x4c],ah
   140007262:	add    BYTE PTR [rax],al
   140007264:	add    BYTE PTR [rax],al
   140007266:	add    BYTE PTR [rax],al
   140007268:	pop    rsi
   140007269:	mov    ah,0x0
   14000726b:	add    BYTE PTR [rax],al
   14000726d:	add    BYTE PTR [rax],al
   14000726f:	add    BYTE PTR [rsp+rsi*4+0x0],cl
   140007273:	add    BYTE PTR [rax],al
   140007275:	add    BYTE PTR [rax],al
   140007277:	add    BYTE PTR [rdx],bh
   140007279:	mov    ah,0x0
   14000727b:	add    BYTE PTR [rax],al
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    BYTE PTR [rsp+rsi*4],ch
   140007282:	add    BYTE PTR [rax],al
   140007284:	add    BYTE PTR [rax],al
   140007286:	add    BYTE PTR [rax],al
   140007288:	(bad)  
   140007289:	mov    ah,0x0
   14000728b:	add    BYTE PTR [rax],al
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    dh,bh
   140007291:	mov    bl,0x0
   140007293:	add    BYTE PTR [rax],al
   140007295:	add    BYTE PTR [rax],al
   140007297:	add    ah,dh
   140007299:	mov    bl,0x0
   14000729b:	add    BYTE PTR [rax],al
   14000729d:	add    BYTE PTR [rax],al
   14000729f:	add    dh,bl
   1400072a1:	mov    bl,0x0
   1400072a3:	add    BYTE PTR [rax],al
   1400072a5:	add    BYTE PTR [rax],al
   1400072a7:	add    al,cl
   1400072a9:	mov    bl,0x0
   1400072ab:	add    BYTE PTR [rax],al
   1400072ad:	add    BYTE PTR [rax],al
   1400072af:	add    BYTE PTR [rdx+0xb3],ch
   1400072b5:	add    BYTE PTR [rax],al
   1400072b7:	add    BYTE PTR [rdx+0xb3],cl
   1400072bd:	add    BYTE PTR [rax],al
   1400072bf:	add    BYTE PTR [rsi],ch
   1400072c1:	mov    ecx,0x0
	...
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	jo     0x140007288
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	add    BYTE PTR [rax],al
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	mov    dh,BYTE PTR [rsi+0x0]
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	pop    rsp
   1400072e1:	mov    dh,0x0
	...
   1400072ef:	add    ah,al
   1400072f1:	mov    dh,0x0
   1400072f3:	add    BYTE PTR [rax],al
   1400072f5:	add    BYTE PTR [rax],al
   1400072f7:	add    dl,bl
   1400072f9:	mov    dh,0x0
   1400072fb:	add    BYTE PTR [rax],al
   1400072fd:	add    BYTE PTR [rax],al
   1400072ff:	add    dl,dh
   140007301:	mov    dh,0x0
   140007303:	add    BYTE PTR [rax],al
   140007305:	add    BYTE PTR [rax],al
   140007307:	add    BYTE PTR [rdi+rsi*4],cl
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	add    BYTE PTR [rax],al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	and    al,0xb7
   140007312:	add    BYTE PTR [rax],al
   140007314:	add    BYTE PTR [rax],al
   140007316:	add    BYTE PTR [rax],al
   140007318:	cli    
   140007319:	mov    eax,0x0
	...
   140007326:	add    BYTE PTR [rax],al
   140007328:	nop
   140007329:	rex.WXB add BYTE PTR [r8+0x1],al
   14000732d:	add    BYTE PTR [rax],al
   14000732f:	add    al,dl
   140007331:	push   rcx
   140007332:	add    BYTE PTR [rax+0x1],al
	...
   140007341:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140007345:	add    BYTE PTR [rax],al
   140007347:	add    BYTE PTR [rax],al
   140007349:	adc    BYTE PTR [rax],al
   14000734b:	rex add DWORD PTR [rax],eax
   14000734e:	add    BYTE PTR [rax],al
   140007350:	adc    BYTE PTR [rax],dl
   140007352:	add    BYTE PTR [rax+0x1],al
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    BYTE PTR [rax],ah
   140007359:	adc    BYTE PTR [rax],al
   14000735b:	rex add DWORD PTR [rax],eax
   14000735e:	add    BYTE PTR [rax],al
   140007360:	xor    BYTE PTR [rax],dl
   140007362:	add    BYTE PTR [rax+0x1],al
   140007365:	add    BYTE PTR [rax],al
   140007367:	add    BYTE PTR [rax+0x1400010],dl
   14000736d:	add    BYTE PTR [rax],al
   14000736f:	add    BYTE PTR [rax+0x1400010],ah
	...
   140007385:	add    BYTE PTR [rax],al
   140007387:	add    BYTE PTR [rax],ah
   140007389:	rex.RX add BYTE PTR [rax+0x1],r8b
   14000738d:	add    BYTE PTR [rax],al
   14000738f:	add    al,dh
   140007391:	rex.WXB add BYTE PTR [r8+0x1],al
	...
   1400073a1:	adc    BYTE PTR [rax],al
   1400073a3:	add    BYTE PTR [rax],dl
   1400073a5:	adc    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rax],ah
   1400073a9:	adc    BYTE PTR [rax],al
   1400073ab:	add    BYTE PTR [rax],dh
   1400073ad:	adc    BYTE PTR [rax],al
   1400073af:	add    BYTE PTR [rax-0x5ffffff0],dl
   1400073b5:	adc    BYTE PTR [rax],al
   1400073b7:	add    BYTE PTR [rax+0x11],ah
   1400073ba:	add    BYTE PTR [rax],al
   1400073bc:	nop
   1400073bd:	adc    DWORD PTR [rax],eax
   1400073bf:	add    BYTE PTR [rax+0x20000011],dh
   1400073c5:	adc    al,BYTE PTR [rax]
   1400073c7:	add    BYTE PTR [rax+0x12],al
   1400073ca:	add    BYTE PTR [rax],al
   1400073cc:	push   rax
   1400073cd:	adc    al,BYTE PTR [rax]
   1400073cf:	add    al,al
   1400073d1:	adc    al,BYTE PTR [rax]
   1400073d3:	add    al,dl
   1400073d5:	adc    al,BYTE PTR [rax]
   1400073d7:	add    BYTE PTR [rax],ah
   1400073d9:	adc    eax,DWORD PTR [rax]
   1400073db:	add    BYTE PTR [rax],dh
   1400073dd:	adc    eax,DWORD PTR [rax]
   1400073df:	add    BYTE PTR [rax+0x40000013],ah
   1400073e5:	sbb    BYTE PTR [rax],al
   1400073e7:	add    BYTE PTR [rax+0x18],dl
   1400073ea:	add    BYTE PTR [rax],al
   1400073ec:	(bad)  
   1400073ed:	sbb    BYTE PTR [rax],al
   1400073ef:	add    BYTE PTR [rax+0x18],dh
   1400073f2:	add    BYTE PTR [rax],al
   1400073f4:	sbb    BYTE PTR [rax],0x0
   1400073f7:	add    BYTE PTR [rax],dl
   1400073f9:	(bad)  
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	movabs al,ds:0xe000001ee000001e
   140007405:	(bad)  
   140007406:	add    BYTE PTR [rax],al
   140007408:	jo     0x14000742b
   14000740a:	add    BYTE PTR [rax],al
   14000740c:	shl    BYTE PTR [rax+rax*1],1
   14000740f:	add    BYTE PTR [rax-0x2fffffdb],dh
   140007415:	and    eax,0x26500000
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	adc    BYTE PTR [rdi],ah
   14000741e:	add    BYTE PTR [rax],al
   140007420:	jo     0x140007449
   140007422:	add    BYTE PTR [rax],al
   140007424:	mov    al,0x28
   140007426:	add    BYTE PTR [rax],al
   140007428:	shr    BYTE PTR [rax],1
   14000742a:	add    BYTE PTR [rax],al
   14000742c:	loopne 0x140007456
   14000742e:	add    BYTE PTR [rax],al
   140007430:	xor    BYTE PTR [rcx],ch
   140007432:	add    BYTE PTR [rax],al
   140007434:	shr    BYTE PTR [rcx],0x0
   140007437:	add    al,ah
   140007439:	sub    DWORD PTR [rax],eax
   14000743b:	add    BYTE PTR [rax],al
   14000743d:	sub    al,BYTE PTR [rax]
   14000743f:	add    BYTE PTR [rax],dh
   140007441:	sub    al,BYTE PTR [rax]
   140007443:	add    BYTE PTR [rax+0x2a],ah
   140007446:	add    BYTE PTR [rax],al
   140007448:	movabs al,ds:0x3000002b0000002a
   140007451:	sub    eax,DWORD PTR [rax]
   140007453:	add    BYTE PTR [rax+0x30],dh
   140007456:	add    BYTE PTR [rax],al
   140007458:	and    BYTE PTR [rcx],dh
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	xor    BYTE PTR [rcx],0x0
   14000745f:	add    BYTE PTR [rax],dh
   140007461:	xor    al,BYTE PTR [rax]
   140007463:	add    al,dl
   140007465:	xor    al,BYTE PTR [rax]
   140007467:	add    BYTE PTR [rax+0x33],dl
   14000746a:	add    BYTE PTR [rax],al
   14000746c:	xor    BYTE PTR [rbx],0x0
   14000746f:	add    al,al
   140007471:	xor    eax,0x35f00000
   140007476:	add    BYTE PTR [rax],al
   140007478:	add    BYTE PTR [rsi],dh
   14000747a:	add    BYTE PTR [rax],al
   14000747c:	adc    BYTE PTR [rsi],dh
   14000747e:	add    BYTE PTR [rax],al
   140007480:	xor    BYTE PTR [rsi],0x0
   140007483:	add    BYTE PTR [rax+0x43],dh
   140007486:	add    BYTE PTR [rax],al
   140007488:	mov    al,0x43
   14000748a:	add    BYTE PTR [rax],al
   14000748c:	(bad)  
   14000748d:	add    BYTE PTR [r8],r8b
   140007490:	and    BYTE PTR [rsi+0x0],al
   140007493:	add    BYTE PTR [rax],al
   140007495:	rex.RXB add BYTE PTR [r8],r8b
   140007498:	ror    BYTE PTR [rcx+0x0],1
   14000749b:	add    al,dh
   14000749d:	rex.WX add BYTE PTR [rax],al
   1400074a0:	add    BYTE PTR [rbx+0x0],cl
   1400074a3:	add    BYTE PTR [rax+0x4b],al
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	nop
   1400074a9:	rex.WXB add BYTE PTR [r8],al
   1400074ac:	mov    al,0x4b
   1400074ae:	add    BYTE PTR [rax],al
   1400074b0:	lock rex.WXB add BYTE PTR [r8],al
   1400074b4:	loopne 0x140007504
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	(bad)  
   1400074b9:	push   rbx
   1400074ba:	add    BYTE PTR [rax],al
   1400074bc:	adc    BYTE PTR [rbx+0x0],0x0
   1400074c0:	movabs al,ds:0xe0000053c0000053
   1400074c9:	push   rbx
   1400074ca:	add    BYTE PTR [rax],al
   1400074cc:	add    BYTE PTR [rax],al
   1400074ce:	add    BYTE PTR [rax],al
   1400074d0:	add    eax,0x0
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rax+0x1400079],al
   1400074dd:	add    BYTE PTR [rax],al
   1400074df:	add    BYTE PTR [rdi+0x0],dh
   1400074e5:	add    BYTE PTR [rax],al
   1400074e7:	add    BYTE PTR [rax+0x1400079],bl
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    BYTE PTR [rax+rax*1],dl
   1400074f2:	add    BYTE PTR [rax],al
   1400074f4:	add    BYTE PTR [rax],al
   1400074f6:	add    BYTE PTR [rax],al
   1400074f8:	test   al,0x79
   1400074fa:	add    BYTE PTR [rax+0x1],al
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rdi+0x0],ch
   140007502:	add    BYTE PTR [rax],al
   140007504:	add    BYTE PTR [rax],al
   140007506:	add    BYTE PTR [rax],al
   140007508:	mov    eax,0x1400079
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rdx+0x0],ch
   140007515:	add    BYTE PTR [rax],al
   140007517:	add    al,dl
   140007519:	jns    0x14000751b
   14000751b:	rex add DWORD PTR [rax],eax
   14000751e:	add    BYTE PTR [rax],al
   140007520:	mov    es,WORD PTR [rax]
   140007522:	add    BYTE PTR [rax],al
   140007524:	add    BYTE PTR [rax],al
   140007526:	add    BYTE PTR [rax],al
   140007528:	sar    BYTE PTR [rcx+0x0],1
   14000752b:	rex add DWORD PTR [rax],eax
   14000752e:	add    BYTE PTR [rax],al
   140007530:	push   rdx
   140007531:	add    BYTE PTR [rax],al
   140007533:	add    BYTE PTR [rax],al
   140007535:	add    BYTE PTR [rax],al
   140007537:	add    BYTE PTR [rax+0x1400079],al
   14000753d:	add    BYTE PTR [rax],al
   14000753f:	add    bl,dh
   140007541:	add    eax,DWORD PTR [rax]
   140007543:	add    BYTE PTR [rax],al
   140007545:	add    BYTE PTR [rax],al
   140007547:	add    al,ch
   140007549:	jns    0x14000754b
   14000754b:	rex add DWORD PTR [rax],eax
   14000754e:	add    BYTE PTR [rax],al
   140007550:	hlt    
   140007551:	add    eax,DWORD PTR [rax]
   140007553:	add    BYTE PTR [rax],al
   140007555:	add    BYTE PTR [rax],al
   140007557:	add    al,ch
   140007559:	jns    0x14000755b
   14000755b:	rex add DWORD PTR [rax],eax
   14000755e:	add    BYTE PTR [rax],al
   140007560:	cmc    
   140007561:	add    eax,DWORD PTR [rax]
   140007563:	add    BYTE PTR [rax],al
   140007565:	add    BYTE PTR [rax],al
   140007567:	add    al,ch
   140007569:	jns    0x14000756b
   14000756b:	rex add DWORD PTR [rax],eax
   14000756e:	add    BYTE PTR [rax],al
   140007570:	adc    BYTE PTR [rax],al
   140007572:	add    BYTE PTR [rax],al
   140007574:	add    BYTE PTR [rax],al
   140007576:	add    BYTE PTR [rax],al
   140007578:	cmp    BYTE PTR [rcx+0x0],0x40
   14000757c:	add    DWORD PTR [rax],eax
   14000757e:	add    BYTE PTR [rax],al
   140007580:	(bad)  
   140007581:	add    BYTE PTR [rax],al
   140007583:	add    BYTE PTR [rax],al
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    BYTE PTR [rax+0x1400079],ch
   14000758d:	add    BYTE PTR [rax],al
   14000758f:	add    BYTE PTR [rcx+rcx*1+0x0],ah
   140007593:	add    BYTE PTR [rax],al
   140007595:	add    BYTE PTR [rax],al
   140007597:	add    al,dl
   140007599:	jns    0x14000759b
   14000759b:	rex add DWORD PTR [rax],eax
   14000759e:	add    BYTE PTR [rax],al
   1400075a0:	xchg   ecx,eax
   1400075a1:	add    BYTE PTR [rax],al
   1400075a3:	add    BYTE PTR [rax],al
   1400075a5:	add    BYTE PTR [rax],al
   1400075a7:	add    al,bh
   1400075a9:	jns    0x1400075ab
   1400075ab:	rex add DWORD PTR [rax],eax
   1400075ae:	add    BYTE PTR [rax],al
   1400075b0:	or     eax,DWORD PTR [rcx]
   1400075b2:	add    BYTE PTR [rax],al
   1400075b4:	add    BYTE PTR [rax],al
   1400075b6:	add    BYTE PTR [rax],al
   1400075b8:	adc    BYTE PTR [rdx+0x0],bh
   1400075bb:	rex add DWORD PTR [rax],eax
   1400075be:	add    BYTE PTR [rax],al
   1400075c0:	jo     0x1400075c2
   1400075c2:	add    BYTE PTR [rax],al
   1400075c4:	add    BYTE PTR [rax],al
   1400075c6:	add    BYTE PTR [rax],al
   1400075c8:	sub    BYTE PTR [rdx+0x0],bh
   1400075cb:	rex add DWORD PTR [rax],eax
   1400075ce:	add    BYTE PTR [rax],al
   1400075d0:	push   rax
   1400075d1:	add    BYTE PTR [rax],al
   1400075d3:	add    BYTE PTR [rax],al
   1400075d5:	add    BYTE PTR [rax],al
   1400075d7:	add    BYTE PTR [rax+0x1400079],bl
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rdx],al
   1400075e1:	add    BYTE PTR [rax],al
   1400075e3:	add    BYTE PTR [rax],al
   1400075e5:	add    BYTE PTR [rax],al
   1400075e7:	add    BYTE PTR [rax+0x7a],al
   1400075ea:	add    BYTE PTR [rax+0x1],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rdi],ah
   1400075f1:	add    BYTE PTR [rax],al
   1400075f3:	add    BYTE PTR [rax],al
   1400075f5:	add    BYTE PTR [rax],al
   1400075f7:	add    BYTE PTR [rax],ch
   1400075f9:	jp     0x1400075fb
   1400075fb:	rex add DWORD PTR [rax],eax
   1400075fe:	add    BYTE PTR [rax],al
   140007600:	or     al,0x0
   140007602:	add    BYTE PTR [rax],al
   140007604:	add    BYTE PTR [rax],al
   140007606:	add    BYTE PTR [rax],al
   140007608:	cmp    BYTE PTR [rcx+0x0],0x40
   14000760c:	add    DWORD PTR [rax],eax
   14000760e:	add    BYTE PTR [rax],al
   140007610:	sldt   WORD PTR [rax]
   140007613:	add    BYTE PTR [rax],al
   140007615:	add    BYTE PTR [rax],al
   140007617:	add    BYTE PTR [rax+0x1400079],ch
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    BYTE PTR [rcx],al
   140007621:	add    BYTE PTR [rax],al
   140007623:	add    BYTE PTR [rax],al
   140007625:	add    BYTE PTR [rax],al
   140007627:	add    BYTE PTR [rax+0x7a],ah
   14000762a:	add    BYTE PTR [rax+0x1],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rsi],al
   140007631:	add    BYTE PTR [rax],al
   140007633:	add    BYTE PTR [rax],al
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    BYTE PTR [rax],dl
   140007639:	jp     0x14000763b
   14000763b:	rex add DWORD PTR [rax],eax
   14000763e:	add    BYTE PTR [rax],al
   140007640:	jnp    0x140007642
   140007642:	add    BYTE PTR [rax],al
   140007644:	add    BYTE PTR [rax],al
   140007646:	add    BYTE PTR [rax],al
   140007648:	adc    BYTE PTR [rdx+0x0],bh
   14000764b:	rex add DWORD PTR [rax],eax
   14000764e:	add    BYTE PTR [rax],al
   140007650:	and    DWORD PTR [rax],eax
   140007652:	add    BYTE PTR [rax],al
   140007654:	add    BYTE PTR [rax],al
   140007656:	add    BYTE PTR [rax],al
   140007658:	js     0x1400076d4
   14000765a:	add    BYTE PTR [rax+0x1],al
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    ah,dl
   140007661:	add    BYTE PTR [rax],al
   140007663:	add    BYTE PTR [rax],al
   140007665:	add    BYTE PTR [rax],al
   140007667:	add    BYTE PTR [rax+0x7a],bh
   14000766a:	add    BYTE PTR [rax+0x1],al
   14000766d:	add    BYTE PTR [rax],al
   14000766f:	add    BYTE PTR [rbx+0x0],al
   140007675:	add    BYTE PTR [rax],al
   140007677:	add    BYTE PTR [rax],dl
   140007679:	jp     0x14000767b
   14000767b:	rex add DWORD PTR [rax],eax
   14000767e:	add    BYTE PTR [rax],al
   140007680:	out    0x3,al
   140007682:	add    BYTE PTR [rax],al
   140007684:	add    BYTE PTR [rax],al
   140007686:	add    BYTE PTR [rax],al
   140007688:	cmp    BYTE PTR [rcx+0x0],0x40
   14000768c:	add    DWORD PTR [rax],eax
   14000768e:	add    BYTE PTR [rax],al
   140007690:	or     BYTE PTR [rax],al
   140007692:	add    BYTE PTR [rax],al
   140007694:	add    BYTE PTR [rax],al
   140007696:	add    BYTE PTR [rax],al
   140007698:	nop
   140007699:	jp     0x14000769b
   14000769b:	rex add DWORD PTR [rax],eax
   14000769e:	add    BYTE PTR [rax],al
   1400076a0:	adc    eax,0x0
   1400076a5:	add    BYTE PTR [rax],al
   1400076a7:	add    BYTE PTR [rax+0x140007a],ch
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rcx],dl
   1400076b1:	add    BYTE PTR [rax],al
   1400076b3:	add    BYTE PTR [rax],al
   1400076b5:	add    BYTE PTR [rax],al
   1400076b7:	add    al,cl
   1400076b9:	jp     0x1400076bb
   1400076bb:	rex add DWORD PTR [rax],eax
   1400076be:	add    BYTE PTR [rax],al
   1400076c0:	outs   dx,BYTE PTR ds:[rsi]
   1400076c1:	add    BYTE PTR [rax],al
   1400076c3:	add    BYTE PTR [rax],al
   1400076c5:	add    BYTE PTR [rax],al
   1400076c7:	add    al,ch
   1400076c9:	jns    0x1400076cb
   1400076cb:	rex add DWORD PTR [rax],eax
   1400076ce:	add    BYTE PTR [rax],al
   1400076d0:	(bad)  
   1400076d1:	or     DWORD PTR [rax],eax
   1400076d3:	add    BYTE PTR [rax],al
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    al,dl
   1400076d9:	jns    0x1400076db
   1400076db:	rex add DWORD PTR [rax],eax
   1400076de:	add    BYTE PTR [rax],al
   1400076e0:	jrcxz  0x1400076e5
   1400076e2:	add    BYTE PTR [rax],al
   1400076e4:	add    BYTE PTR [rax],al
   1400076e6:	add    BYTE PTR [rax],al
   1400076e8:	loopne 0x140007764
   1400076ea:	add    BYTE PTR [rax+0x1],al
   1400076ed:	add    BYTE PTR [rax],al
   1400076ef:	add    BYTE PTR [rsi],cl
   1400076f1:	add    BYTE PTR [rax],al
   1400076f3:	add    BYTE PTR [rax],al
   1400076f5:	add    BYTE PTR [rax],al
   1400076f7:	add    BYTE PTR [rax+0x140007a],dl
   1400076fd:	add    BYTE PTR [rax],al
   1400076ff:	add    BYTE PTR [rbx],al
   140007701:	add    BYTE PTR [rax],al
   140007703:	add    BYTE PTR [rax],al
   140007705:	add    BYTE PTR [rax],al
   140007707:	add    BYTE PTR [rax+0x7a],al
   14000770a:	add    BYTE PTR [rax+0x1],al
   14000770d:	add    BYTE PTR [rax],al
   14000770f:	add    BYTE PTR [rsi],bl
   140007711:	add    BYTE PTR [rax],al
   140007713:	add    BYTE PTR [rax],al
   140007715:	add    BYTE PTR [rax],al
   140007717:	add    al,ch
   140007719:	jns    0x14000771b
   14000771b:	rex add DWORD PTR [rax],eax
   14000771e:	add    BYTE PTR [rax],al
   140007720:	(bad)  
   140007721:	add    al,0x0
   140007723:	add    BYTE PTR [rax],al
   140007725:	add    BYTE PTR [rax],al
   140007727:	add    BYTE PTR [rax+0x140007a],ch
   14000772d:	add    BYTE PTR [rax],al
   14000772f:	add    BYTE PTR [rcx],bl
   140007731:	add    BYTE PTR [rax],al
   140007733:	add    BYTE PTR [rax],al
   140007735:	add    BYTE PTR [rax],al
   140007737:	add    al,ch
   140007739:	jns    0x14000773b
   14000773b:	rex add DWORD PTR [rax],eax
   14000773e:	add    BYTE PTR [rax],al
   140007740:	and    BYTE PTR [rax],al
   140007742:	add    BYTE PTR [rax],al
   140007744:	add    BYTE PTR [rax],al
   140007746:	add    BYTE PTR [rax],al
   140007748:	cmp    BYTE PTR [rcx+0x0],0x40
   14000774c:	add    DWORD PTR [rax],eax
   14000774e:	add    BYTE PTR [rax],al
   140007750:	add    al,0x0
   140007752:	add    BYTE PTR [rax],al
   140007754:	add    BYTE PTR [rax],al
   140007756:	add    BYTE PTR [rax],al
   140007758:	clc    
   140007759:	jp     0x14000775b
   14000775b:	rex add DWORD PTR [rax],eax
   14000775e:	add    BYTE PTR [rax],al
   140007760:	sbb    eax,0x0
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    al,ch
   140007769:	jns    0x14000776b
   14000776b:	rex add DWORD PTR [rax],eax
   14000776e:	add    BYTE PTR [rax],al
   140007770:	adc    eax,DWORD PTR [rax]
   140007772:	add    BYTE PTR [rax],al
   140007774:	add    BYTE PTR [rax],al
   140007776:	add    BYTE PTR [rax],al
   140007778:	cmp    BYTE PTR [rcx+0x0],0x40
   14000777c:	add    DWORD PTR [rax],eax
   14000777e:	add    BYTE PTR [rax],al
   140007780:	sbb    eax,0x27
   140007785:	add    BYTE PTR [rax],al
   140007787:	add    BYTE PTR [rax],dl
   140007789:	jnp    0x14000778b
   14000778b:	rex add DWORD PTR [rax],eax
   14000778e:	add    BYTE PTR [rax],al
   140007790:	rex (bad) 
   140007792:	add    BYTE PTR [rax],al
   140007794:	add    BYTE PTR [rax],al
   140007796:	add    BYTE PTR [rax],al
   140007798:	sub    BYTE PTR [rbx+0x0],bh
   14000779b:	rex add DWORD PTR [rax],eax
   14000779e:	add    BYTE PTR [rax],al
   1400077a0:	rex.B (bad) 
   1400077a2:	add    BYTE PTR [rax],al
   1400077a4:	add    BYTE PTR [rax],al
   1400077a6:	add    BYTE PTR [rax],al
   1400077a8:	cmp    BYTE PTR [rbx+0x0],bh
   1400077ab:	rex add DWORD PTR [rax],eax
   1400077ae:	add    BYTE PTR [rax],al
   1400077b0:	(bad)  
   1400077b1:	(bad)  
   1400077b2:	add    BYTE PTR [rax],al
   1400077b4:	add    BYTE PTR [rax],al
   1400077b6:	add    BYTE PTR [rax],al
   1400077b8:	push   rax
   1400077b9:	jnp    0x1400077bb
   1400077bb:	rex add DWORD PTR [rax],eax
   1400077be:	add    BYTE PTR [rax],al
   1400077c0:	xor    eax,0x27
   1400077c5:	add    BYTE PTR [rax],al
   1400077c7:	add    BYTE PTR [rax+0x7b],dh
   1400077ca:	add    BYTE PTR [rax+0x1],al
   1400077cd:	add    BYTE PTR [rax],al
   1400077cf:	add    BYTE PTR [rcx],bl
   1400077d1:	(bad)  
   1400077d2:	add    BYTE PTR [rax],al
   1400077d4:	add    BYTE PTR [rax],al
   1400077d6:	add    BYTE PTR [rax],al
   1400077d8:	nop
   1400077d9:	jnp    0x1400077db
   1400077db:	rex add DWORD PTR [rax],eax
   1400077de:	add    BYTE PTR [rax],al
   1400077e0:	rex.RB (bad) 
   1400077e2:	add    BYTE PTR [rax],al
   1400077e4:	add    BYTE PTR [rax],al
   1400077e6:	add    BYTE PTR [rax],al
   1400077e8:	test   al,0x7b
   1400077ea:	add    BYTE PTR [rax+0x1],al
   1400077ed:	add    BYTE PTR [rax],al
   1400077ef:	add    BYTE PTR [rbp+0x27],cl
   1400077f2:	add    BYTE PTR [rax],al
   1400077f4:	add    BYTE PTR [rax],al
   1400077f6:	add    BYTE PTR [rax],al
   1400077f8:	sar    BYTE PTR [rbx+0x0],0x40
   1400077fc:	add    DWORD PTR [rax],eax
   1400077fe:	add    BYTE PTR [rax],al
   140007800:	rex.RX (bad) 
   140007802:	add    BYTE PTR [rax],al
   140007804:	add    BYTE PTR [rax],al
   140007806:	add    BYTE PTR [rax],al
   140007808:	fdivr  DWORD PTR [rbx+0x0]
   14000780b:	rex add DWORD PTR [rax],eax
   14000780e:	add    BYTE PTR [rax],al
   140007810:	(bad)  
   140007811:	(bad)  
   140007812:	add    BYTE PTR [rax],al
   140007814:	add    BYTE PTR [rax],al
   140007816:	add    BYTE PTR [rax],al
   140007818:	lock jnp 0x14000781b
   14000781b:	rex add DWORD PTR [rax],eax
   14000781e:	add    BYTE PTR [rax],al
   140007820:	(bad)  
   140007821:	(bad)  
   140007822:	add    BYTE PTR [rax],al
   140007824:	add    BYTE PTR [rax],al
   140007826:	add    BYTE PTR [rax],al
   140007828:	adc    BYTE PTR [rax+rax*1+0x40],bh
   14000782c:	add    DWORD PTR [rax],eax
   14000782e:	add    BYTE PTR [rax],al
   140007830:	push   rcx
   140007831:	(bad)  
   140007832:	add    BYTE PTR [rax],al
   140007834:	add    BYTE PTR [rax],al
   140007836:	add    BYTE PTR [rax],al
   140007838:	and    BYTE PTR [rax+rax*1+0x40],bh
   14000783c:	add    DWORD PTR [rax],eax
   14000783e:	add    BYTE PTR [rax],al
   140007840:	xor    al,0x27
   140007842:	add    BYTE PTR [rax],al
   140007844:	add    BYTE PTR [rax],al
   140007846:	add    BYTE PTR [rax],al
   140007848:	cmp    BYTE PTR [rax+rax*1+0x40],bh
   14000784c:	add    DWORD PTR [rax],eax
   14000784e:	add    BYTE PTR [rax],al
   140007850:	adc    al,0x27
   140007852:	add    BYTE PTR [rax],al
   140007854:	add    BYTE PTR [rax],al
   140007856:	add    BYTE PTR [rax],al
   140007858:	push   rax
   140007859:	jl     0x14000785b
   14000785b:	rex add DWORD PTR [rax],eax
   14000785e:	add    BYTE PTR [rax],al
   140007860:	es (bad) 
   140007862:	add    BYTE PTR [rax],al
   140007864:	add    BYTE PTR [rax],al
   140007866:	add    BYTE PTR [rax],al
   140007868:	(bad)  
   140007869:	jl     0x14000786b
   14000786b:	rex add DWORD PTR [rax],eax
   14000786e:	add    BYTE PTR [rax],al
   140007870:	rex.W (bad) 
   140007872:	add    BYTE PTR [rax],al
   140007874:	add    BYTE PTR [rax],al
   140007876:	add    BYTE PTR [rax],al
   140007878:	js     0x1400078f6
   14000787a:	add    BYTE PTR [rax+0x1],al
   14000787d:	add    BYTE PTR [rax],al
   14000787f:	add    BYTE PTR [rax],ch
   140007881:	(bad)  
   140007882:	add    BYTE PTR [rax],al
   140007884:	add    BYTE PTR [rax],al
   140007886:	add    BYTE PTR [rax],al
   140007888:	nop
   140007889:	jl     0x14000788b
   14000788b:	rex add DWORD PTR [rax],eax
   14000788e:	add    BYTE PTR [rax],al
   140007890:	cmp    BYTE PTR [rdi],ah
   140007892:	add    BYTE PTR [rax],al
   140007894:	add    BYTE PTR [rax],al
   140007896:	add    BYTE PTR [rax],al
   140007898:	test   al,0x7c
   14000789a:	add    BYTE PTR [rax+0x1],al
   14000789d:	add    BYTE PTR [rax],al
   14000789f:	add    BYTE PTR [rdi+0x27],cl
   1400078a2:	add    BYTE PTR [rax],al
   1400078a4:	add    BYTE PTR [rax],al
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	mov    eax,0x140007c
   1400078ad:	add    BYTE PTR [rax],al
   1400078af:	add    BYTE PTR [rdx+0x27],al
   1400078b2:	add    BYTE PTR [rax],al
   1400078b4:	add    BYTE PTR [rax],al
   1400078b6:	add    BYTE PTR [rax],al
   1400078b8:	sar    BYTE PTR [rax+rax*1+0x40],1
   1400078bc:	add    DWORD PTR [rax],eax
   1400078be:	add    BYTE PTR [rax],al
   1400078c0:	rex.R (bad) 
   1400078c2:	add    BYTE PTR [rax],al
   1400078c4:	add    BYTE PTR [rax],al
   1400078c6:	add    BYTE PTR [rax],al
   1400078c8:	loopne 0x140007946
   1400078ca:	add    BYTE PTR [rax+0x1],al
   1400078cd:	add    BYTE PTR [rax],al
   1400078cf:	add    BYTE PTR [rbx+0x27],al
   1400078d2:	add    BYTE PTR [rax],al
   1400078d4:	add    BYTE PTR [rax],al
   1400078d6:	add    BYTE PTR [rax],al
   1400078d8:	lock jl 0x1400078db
   1400078db:	rex add DWORD PTR [rax],eax
   1400078de:	add    BYTE PTR [rax],al
   1400078e0:	rex.RXB (bad) 
   1400078e2:	add    BYTE PTR [rax],al
   1400078e4:	add    BYTE PTR [rax],al
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	or     BYTE PTR [rbp+0x0],bh
   1400078eb:	rex add DWORD PTR [rax],eax
   1400078ee:	add    BYTE PTR [rax],al
   1400078f0:	cmp    ah,BYTE PTR [rdi]
   1400078f2:	add    BYTE PTR [rax],al
   1400078f4:	add    BYTE PTR [rax],al
   1400078f6:	add    BYTE PTR [rax],al
   1400078f8:	sbb    BYTE PTR [rbp+0x0],bh
   1400078fb:	rex add DWORD PTR [rax],eax
   1400078fe:	add    BYTE PTR [rax],al
   140007900:	rex.WB (bad) 
   140007902:	add    BYTE PTR [rax],al
   140007904:	add    BYTE PTR [rax],al
   140007906:	add    BYTE PTR [rax],al
   140007908:	xor    BYTE PTR [rbp+0x0],bh
   14000790b:	rex add DWORD PTR [rax],eax
   14000790e:	add    BYTE PTR [rax],al
   140007910:	ss (bad) 
   140007912:	add    BYTE PTR [rax],al
   140007914:	add    BYTE PTR [rax],al
   140007916:	add    BYTE PTR [rax],al
   140007918:	rex jge 0x14000791b
   14000791b:	rex add DWORD PTR [rax],eax
   14000791e:	add    BYTE PTR [rax],al
   140007920:	cmp    eax,0x27
   140007925:	add    BYTE PTR [rax],al
   140007927:	add    BYTE PTR [rax+0x7d],dl
   14000792a:	add    BYTE PTR [rax+0x1],al
   14000792d:	add    BYTE PTR [rax],al
   14000792f:	add    BYTE PTR [rbx],bh
   140007931:	(bad)  
   140007932:	add    BYTE PTR [rax],al
   140007934:	add    BYTE PTR [rax],al
   140007936:	add    BYTE PTR [rax],al
   140007938:	push   0x140007d
   14000793d:	add    BYTE PTR [rax],al
   14000793f:	add    BYTE PTR [rcx],bh
   140007941:	(bad)  
   140007942:	add    BYTE PTR [rax],al
   140007944:	add    BYTE PTR [rax],al
   140007946:	add    BYTE PTR [rax],al
   140007948:	cmp    BYTE PTR [rbp+0x0],0x40
   14000794c:	add    DWORD PTR [rax],eax
   14000794e:	add    BYTE PTR [rax],al
   140007950:	rex.WR (bad) 
   140007952:	add    BYTE PTR [rax],al
   140007954:	add    BYTE PTR [rax],al
   140007956:	add    BYTE PTR [rax],al
   140007958:	cwde   
   140007959:	jge    0x14000795b
   14000795b:	rex add DWORD PTR [rax],eax
   14000795e:	add    BYTE PTR [rax],al
   140007960:	xor    esp,DWORD PTR [rdi]
   140007962:	add    BYTE PTR [rax],al
   140007964:	add    BYTE PTR [rax],al
   140007966:	add    BYTE PTR [rax],al
   140007968:	test   al,0x7d
   14000796a:	add    BYTE PTR [rax+0x1],al
	...
   14000797d:	add    BYTE PTR [rax],al
   14000797f:	add    BYTE PTR [rax+0x65],dh
   140007982:	jb     0x1400079f1
   140007984:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   14000798b:	fs outs dx,BYTE PTR gs:[rsi]
   14000798e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140007995:	add    BYTE PTR [rax],al
   140007997:	add    BYTE PTR [rsi+0x69],ah
   14000799a:	ins    BYTE PTR es:[rdi],dx
   14000799b:	and    BYTE PTR gs:[rbp+0x78],ah
   14000799f:	imul   esi,DWORD PTR [rbx+0x74],0x73
   1400079a6:	add    BYTE PTR [rax],al
   1400079a8:	outs   dx,BYTE PTR ds:[rsi]
   1400079a9:	outs   dx,DWORD PTR ds:[rsi]
   1400079aa:	and    BYTE PTR [rbx+0x75],dh
   1400079ad:	movsxd ebp,DWORD PTR [rax+0x20]
   1400079b0:	fs gs jbe 0x140007a1d
   1400079b4:	movsxd esp,DWORD PTR [rbp+0x0]
   1400079b7:	add    BYTE PTR [rsi+0x69],ah
   1400079ba:	ins    BYTE PTR es:[rdi],dx
   1400079bb:	outs   dx,BYTE PTR gs:[rsi]
   1400079bd:	(bad)  
   1400079be:	ins    DWORD PTR es:[rdi],dx
   1400079bf:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   1400079c4:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400079c8:	add    BYTE PTR [eax],al
   1400079cb:	add    BYTE PTR [rax],al
   1400079cd:	add    BYTE PTR [rax],al
   1400079cf:	add    BYTE PTR [rbp+riz*2+0x76],ah
   1400079d3:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   1400079da:	jb     0x140007a41
   1400079dc:	jae    0x140007a4d
   1400079de:	jne    0x140007a52
   1400079e0:	movsxd esp,DWORD PTR [rbp+0x20]
   1400079e3:	(bad)  
   1400079e4:	jne    0x140007a59
   1400079e6:	jns    0x1400079e8
   1400079e8:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   1400079ef:	jb     0x1400079f1
   1400079f1:	add    BYTE PTR [rax],al
   1400079f3:	add    BYTE PTR [rax],al
   1400079f5:	add    BYTE PTR [rax],al
   1400079f7:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   1400079fb:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140007a00:	jns    0x140007a22
   140007a02:	outs   dx,BYTE PTR ds:[rsi]
   140007a03:	outs   dx,DWORD PTR ds:[rsi]
   140007a04:	je     0x140007a26
   140007a06:	gs ins DWORD PTR es:[rdi],dx
   140007a08:	jo     0x140007a7e
   140007a0a:	jns    0x140007a0c
   140007a0c:	add    BYTE PTR [rax],al
   140007a0e:	add    BYTE PTR [rax],al
   140007a10:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140007a17:	and    BYTE PTR [rcx+0x72],ah
   140007a1a:	addr32 jne 0x140007a8a
   140007a1d:	outs   dx,BYTE PTR gs:[rsi]
   140007a1f:	je     0x140007a21
   140007a21:	add    BYTE PTR [rax],al
   140007a23:	add    BYTE PTR [rax],al
   140007a25:	add    BYTE PTR [rax],al
   140007a27:	add    BYTE PTR [rsi+0x6f],ch
   140007a2a:	and    BYTE PTR [rbx+0x70],dh
   140007a2d:	(bad)  
   140007a2e:	movsxd esp,DWORD PTR [rbp+0x20]
   140007a31:	outs   dx,DWORD PTR ds:[rsi]
   140007a32:	outs   dx,BYTE PTR ds:[rsi]
   140007a33:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140007a37:	imul   esp,DWORD PTR [rbx+0x65],0x0
   140007a3e:	add    BYTE PTR [rax],al
   140007a40:	outs   dx,BYTE PTR ds:[rsi]
   140007a41:	outs   dx,DWORD PTR ds:[rsi]
   140007a42:	and    BYTE PTR [rbx+0x75],dh
   140007a45:	movsxd ebp,DWORD PTR [rax+0x20]
   140007a48:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   140007a4f:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140007a53:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140007a58:	jns    0x140007a5a
   140007a5a:	add    BYTE PTR [rax],al
   140007a5c:	add    BYTE PTR [rax],al
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	data16 jne 0x140007ad1
   140007a63:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140007a67:	outs   dx,BYTE PTR ds:[rsi]
   140007a68:	and    BYTE PTR [rsi+0x6f],ch
   140007a6b:	je     0x140007a8d
   140007a6d:	jae    0x140007ae4
   140007a6f:	jo     0x140007ae1
   140007a71:	outs   dx,DWORD PTR ds:[rsi]
   140007a72:	jb     0x140007ae8
   140007a74:	gs add BYTE PTR fs:[rax],al
   140007a78:	outs   dx,BYTE PTR ds:[rsi]
   140007a79:	outs   dx,DWORD PTR ds:[rsi]
   140007a7a:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   140007a7e:	imul   esp,DWORD PTR [rax],0x61
   140007a81:	jbe    0x140007ae4
   140007a83:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140007a8b:	add    BYTE PTR [rax],al
   140007a8d:	add    BYTE PTR [rax],al
   140007a8f:	add    BYTE PTR [rsi+0x6f],ch
   140007a92:	je     0x140007ab4
   140007a94:	outs   dx,BYTE PTR gs:[rsi]
   140007a96:	outs   dx,DWORD PTR ds:[rsi]
   140007a97:	jne    0x140007b00
   140007a99:	push   0x6d656d20
   140007a9e:	outs   dx,DWORD PTR ds:[rsi]
   140007a9f:	jb     0x140007b1a
   140007aa1:	add    BYTE PTR [rax],al
   140007aa3:	add    BYTE PTR [rax],al
   140007aa5:	add    BYTE PTR [rax],al
   140007aa7:	add    BYTE PTR [rdx+0x65],dh
   140007aaa:	jae    0x140007b1b
   140007aac:	jne    0x140007b20
   140007aae:	movsxd esp,DWORD PTR [rbp+0x20]
   140007ab1:	jne    0x140007b21
   140007ab3:	(bad)  
   140007ab4:	jbe    0x140007b17
   140007ab6:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   140007abe:	jb     0x140007b39
   140007ac0:	and    BYTE PTR [rcx+0x67],ah
   140007ac3:	(bad)  
   140007ac4:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   140007acb:	jae    0x140007b40
   140007acd:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140007ad1:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   140007ad8:	imul   eax,DWORD PTR [rax],0x0
   140007adb:	add    BYTE PTR [rax],al
   140007add:	add    BYTE PTR [rax],al
   140007adf:	add    BYTE PTR [rdi+0x70],ch
   140007ae2:	gs jb  0x140007b46
   140007ae5:	je     0x140007b50
   140007ae7:	outs   dx,DWORD PTR ds:[rsi]
   140007ae8:	outs   dx,BYTE PTR ds:[rsi]
   140007ae9:	and    BYTE PTR [rbx+0x61],ah
   140007aec:	outs   dx,BYTE PTR ds:[rsi]
   140007aed:	movsxd esp,DWORD PTR [rbp+0x6c]
   140007af0:	gs add BYTE PTR fs:[rax],al
   140007af4:	add    BYTE PTR [rax],al
   140007af6:	add    BYTE PTR [rax],al
   140007af8:	je     0x140007b69
   140007afa:	outs   dx,DWORD PTR ds:[rsi]
   140007afb:	and    BYTE PTR [rbp+0x61],ch
   140007afe:	outs   dx,BYTE PTR ds:[rsi]
   140007aff:	jns    0x140007b21
   140007b01:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140007b08:	jo     0x140007b6f
   140007b0a:	outs   dx,BYTE PTR ds:[rsi]
   140007b0b:	add    BYTE PTR [rax],al
   140007b0d:	add    BYTE PTR [rax],al
   140007b0f:	add    BYTE PTR [rax+0x65],dh
   140007b12:	jb     0x140007b81
   140007b14:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   140007b1b:	fs outs dx,BYTE PTR gs:[rsi]
   140007b1e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140007b25:	add    BYTE PTR [rax],al
   140007b27:	add    BYTE PTR [rcx+0x64],ah
   140007b2a:	fs jb  0x140007b92
   140007b2d:	jae    0x140007ba2
   140007b2f:	pop    rdi
   140007b30:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   140007b37:	add    BYTE PTR [rcx+0x64],ah
   140007b3a:	fs jb  0x140007ba2
   140007b3d:	jae    0x140007bb2
   140007b3f:	pop    rdi
   140007b40:	outs   dx,BYTE PTR ds:[rsi]
   140007b41:	outs   dx,DWORD PTR ds:[rsi]
   140007b42:	je     0x140007ba3
   140007b44:	(bad)  
   140007b45:	jbe    0x140007ba8
   140007b47:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140007b4f:	add    BYTE PTR [rcx+0x64],ah
   140007b52:	fs jb  0x140007bba
   140007b55:	jae    0x140007bca
   140007b57:	pop    rdi
   140007b58:	data16 (bad) 
   140007b5a:	ins    DWORD PTR es:[rdi],dx
   140007b5b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   140007b63:	jae    0x140007bda
   140007b65:	jo     0x140007bd7
   140007b67:	outs   dx,DWORD PTR ds:[rsi]
   140007b68:	jb     0x140007bde
   140007b6a:	gs add BYTE PTR fs:[rax],al
   140007b6e:	add    BYTE PTR [rax],al
   140007b70:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007b73:	outs   dx,BYTE PTR ds:[rsi]
   140007b74:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007b79:	outs   dx,BYTE PTR ds:[rsi]
   140007b7a:	pop    rdi
   140007b7b:	(bad)  
   140007b7c:	ins    BYTE PTR es:[rdi],dx
   140007b7d:	jb     0x140007be4
   140007b7f:	(bad)  
   140007b80:	fs jns 0x140007be2
   140007b83:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140007b8a:	jb     0x140007bf1
   140007b8c:	jae    0x140007c01
   140007b8e:	add    BYTE PTR [rax],al
   140007b90:	(bad)
   140007b95:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   140007b9d:	jb     0x140007c08
   140007b9f:	jo     0x140007c15
   140007ba1:	outs   dx,DWORD PTR ds:[rsi]
   140007ba2:	jb     0x140007ba4
   140007ba4:	add    BYTE PTR [rax],al
   140007ba6:	add    BYTE PTR [rax],al
   140007ba8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007bab:	outs   dx,BYTE PTR ds:[rsi]
   140007bac:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007bb1:	outs   dx,BYTE PTR ds:[rsi]
   140007bb2:	pop    rdi
   140007bb3:	(bad)  
   140007bb4:	(bad)  
   140007bb5:	outs   dx,DWORD PTR ds:[rsi]
   140007bb6:	jb     0x140007c2c
   140007bb8:	gs add BYTE PTR fs:[rax],al
   140007bbc:	add    BYTE PTR [rax],al
   140007bbe:	add    BYTE PTR [rax],al
   140007bc0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007bc3:	outs   dx,BYTE PTR ds:[rsi]
   140007bc4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007bc9:	outs   dx,BYTE PTR ds:[rsi]
   140007bca:	pop    rdi
   140007bcb:	jb     0x140007c32
   140007bcd:	data16 jne 0x140007c43
   140007bd0:	gs add BYTE PTR fs:[rax],al
   140007bd4:	add    BYTE PTR [rax],al
   140007bd6:	add    BYTE PTR [rax],al
   140007bd8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007bdb:	outs   dx,BYTE PTR ds:[rsi]
   140007bdc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007be1:	outs   dx,BYTE PTR ds:[rsi]
   140007be2:	pop    rdi
   140007be3:	jb     0x140007c4a
   140007be5:	jae    0x140007c4c
   140007be7:	je     0x140007be9
   140007be9:	add    BYTE PTR [rax],al
   140007beb:	add    BYTE PTR [rax],al
   140007bed:	add    BYTE PTR [rax],al
   140007bef:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140007bf3:	je     0x140007c5e
   140007bf5:	outs   dx,BYTE PTR ds:[rsi]
   140007bf6:	(bad)  
   140007bf7:	je     0x140007c62
   140007bf9:	outs   dx,DWORD PTR ds:[rsi]
   140007bfa:	outs   dx,BYTE PTR ds:[rsi]
   140007bfb:	pop    rdi
   140007bfc:	(bad)  
   140007bfd:	fs fs jb 0x140007c66
   140007c01:	jae    0x140007c76
   140007c03:	pop    rdi
   140007c04:	jb     0x140007c6b
   140007c06:	jno    0x140007c7d
   140007c08:	imul   esi,DWORD PTR [rdx+0x65],0x64
   140007c0f:	add    BYTE PTR [rdx+0x61],ah
   140007c12:	fs pop rdi
   140007c14:	(bad)  
   140007c15:	fs fs jb 0x140007c7e
   140007c19:	jae    0x140007c8e
   140007c1b:	add    BYTE PTR [rax],al
   140007c1d:	add    BYTE PTR [rax],al
   140007c1f:	add    BYTE PTR [rax+0x6f],ch
   140007c22:	jae    0x140007c98
   140007c24:	pop    rdi
   140007c25:	jne    0x140007c95
   140007c27:	jb     0x140007c8e
   140007c29:	(bad)  
   140007c2a:	movsxd ebp,DWORD PTR [rax+0x61]
   140007c2d:	(bad)  
   140007c2e:	ins    BYTE PTR es:[rdi],dx
   140007c2f:	add    BYTE PTR gs:[rax],al
   140007c32:	add    BYTE PTR [rax],al
   140007c34:	add    BYTE PTR [rax],al
   140007c36:	add    BYTE PTR [rax],al
   140007c38:	outs   dx,DWORD PTR ds:[rsi]
   140007c39:	jo     0x140007ca0
   140007c3b:	jb     0x140007c9e
   140007c3d:	je     0x140007ca8
   140007c3f:	outs   dx,DWORD PTR ds:[rsi]
   140007c40:	outs   dx,BYTE PTR ds:[rsi]
   140007c41:	pop    rdi
   140007c42:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140007c49:	jb     0x140007cb0
   140007c4b:	jae    0x140007cc0
   140007c4d:	add    BYTE PTR [rax],al
   140007c4f:	add    BYTE PTR [rcx+0x6e],ch
   140007c52:	je     0x140007cb9
   140007c54:	jb     0x140007cc8
   140007c56:	jne    0x140007cc8
   140007c58:	je     0x140007cbf
   140007c5a:	add    BYTE PTR fs:[rax],al
   140007c5d:	add    BYTE PTR [rax],al
   140007c5f:	add    BYTE PTR [rcx+0x6e],ch
   140007c62:	jbe    0x140007cc5
   140007c64:	ins    BYTE PTR es:[rdi],dx
   140007c65:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   140007c6d:	outs   dx,BYTE PTR gs:[rsi]
   140007c6f:	je     0x140007c71
   140007c71:	add    BYTE PTR [rax],al
   140007c73:	add    BYTE PTR [rax],al
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    BYTE PTR [rcx+0x6c],ah
   140007c7a:	jb     0x140007ce1
   140007c7c:	(bad)  
   140007c7d:	fs jns 0x140007cdf
   140007c80:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007c83:	outs   dx,BYTE PTR ds:[rsi]
   140007c84:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140007c89:	add    BYTE PTR [rax],al
   140007c8b:	add    BYTE PTR [rax],al
   140007c8d:	add    BYTE PTR [rax],al
   140007c8f:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140007c93:	pop    rdi
   140007c94:	ins    DWORD PTR es:[rdi],dx
   140007c95:	(bad)  
   140007c96:	outs   dx,BYTE PTR ds:[rsi]
   140007c97:	jns    0x140007cf8
   140007c99:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   140007ca0:	jo     0x140007d07
   140007ca2:	outs   dx,BYTE PTR ds:[rsi]
   140007ca3:	add    BYTE PTR [rax],al
   140007ca5:	add    BYTE PTR [rax],al
   140007ca7:	add    BYTE PTR [rbp+0x65],ch
   140007caa:	jae    0x140007d1f
   140007cac:	(bad)  
   140007cad:	addr32 gs pop rdi
   140007cb0:	jae    0x140007d1b
   140007cb2:	jp     0x140007d19
   140007cb4:	add    BYTE PTR [rax],al
   140007cb6:	add    BYTE PTR [rax],al
   140007cb8:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   140007cbf:	gs pop rdi
   140007cc1:	je     0x140007d32
   140007cc3:	outs   dx,DWORD PTR ds:[rsi]
   140007cc4:	pop    rdi
   140007cc5:	ins    BYTE PTR es:[rdi],dx
   140007cc6:	outs   dx,DWORD PTR ds:[rsi]
   140007cc7:	outs   dx,BYTE PTR ds:[rsi]
   140007cc8:	add    BYTE PTR [eax],al
   140007ccb:	add    BYTE PTR [rax],al
   140007ccd:	add    BYTE PTR [rax],al
   140007ccf:	add    BYTE PTR [rsi+0x65],ch
   140007cd2:	je     0x140007d4b
   140007cd4:	outs   dx,DWORD PTR ds:[rsi]
   140007cd5:	jb     0x140007d42
   140007cd7:	pop    rdi
   140007cd8:	outs   dx,DWORD PTR fs:[rsi]
   140007cda:	ja     0x140007d4a
   140007cdc:	add    BYTE PTR [rax],al
   140007cde:	add    BYTE PTR [rax],al
   140007ce0:	outs   dx,BYTE PTR ds:[rsi]
   140007ce1:	gs je  0x140007d5b
   140007ce4:	outs   dx,DWORD PTR ds:[rsi]
   140007ce5:	jb     0x140007d52
   140007ce7:	pop    rdi
   140007ce8:	jb     0x140007d4f
   140007cea:	jae    0x140007d51
   140007cec:	je     0x140007cee
   140007cee:	add    BYTE PTR [rax],al
   140007cf0:	outs   dx,BYTE PTR ds:[rsi]
   140007cf1:	gs je  0x140007d6b
   140007cf4:	outs   dx,DWORD PTR ds:[rsi]
   140007cf5:	jb     0x140007d62
   140007cf7:	pop    rdi
   140007cf8:	jne    0x140007d68
   140007cfa:	jb     0x140007d61
   140007cfc:	(bad)  
   140007cfd:	movsxd ebp,DWORD PTR [rax+0x61]
   140007d00:	(bad)  
   140007d01:	ins    BYTE PTR es:[rdi],dx
   140007d02:	add    BYTE PTR gs:[rax],al
   140007d05:	add    BYTE PTR [rax],al
   140007d07:	add    BYTE PTR [rsi+0x6f],ch
   140007d0a:	pop    rdi
   140007d0b:	(bad)  
   140007d0c:	jne    0x140007d74
   140007d0e:	data16 gs jb 0x140007d71
   140007d12:	jae    0x140007d84
   140007d14:	(bad)  
   140007d15:	movsxd esp,DWORD PTR [rbp+0x0]
   140007d18:	outs   dx,BYTE PTR ds:[rsi]
   140007d19:	outs   dx,DWORD PTR ds:[rsi]
   140007d1a:	pop    rdi
   140007d1b:	jo     0x140007d8f
   140007d1d:	outs   dx,DWORD PTR ds:[rsi]
   140007d1e:	je     0x140007d8f
   140007d20:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140007d23:	pop    rdi
   140007d24:	outs   dx,DWORD PTR ds:[rsi]
   140007d25:	jo     0x140007d9b
   140007d27:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	outs   dx,BYTE PTR ds:[rsi]
   140007d31:	outs   dx,DWORD PTR ds:[rsi]
   140007d32:	je     0x140007d93
   140007d34:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007d37:	outs   dx,BYTE PTR ds:[rsi]
   140007d38:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140007d3d:	add    BYTE PTR [rax],al
   140007d3f:	add    BYTE PTR [rsi+0x6f],ch
   140007d42:	je     0x140007da3
   140007d44:	(bad)  
   140007d45:	pop    rdi
   140007d46:	jae    0x140007db7
   140007d48:	movsxd ebp,DWORD PTR [rbx+0x65]
   140007d4b:	je     0x140007d4d
   140007d4d:	add    BYTE PTR [rax],al
   140007d4f:	add    BYTE PTR [rdi+0x70],ch
   140007d52:	gs jb  0x140007db6
   140007d55:	je     0x140007dc0
   140007d57:	outs   dx,DWORD PTR ds:[rsi]
   140007d58:	outs   dx,BYTE PTR ds:[rsi]
   140007d59:	pop    rdi
   140007d5a:	outs   dx,BYTE PTR ds:[rsi]
   140007d5b:	outs   dx,DWORD PTR ds:[rsi]
   140007d5c:	je     0x140007dbd
   140007d5e:	jae    0x140007dd5
   140007d60:	jo     0x140007dd2
   140007d62:	outs   dx,DWORD PTR ds:[rsi]
   140007d63:	jb     0x140007dd9
   140007d65:	gs add BYTE PTR fs:[rax+0x72],dh
   140007d6a:	outs   dx,DWORD PTR ds:[rsi]
   140007d6b:	je     0x140007ddc
   140007d6d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140007d70:	pop    rdi
   140007d71:	outs   dx,BYTE PTR ds:[rsi]
   140007d72:	outs   dx,DWORD PTR ds:[rsi]
   140007d73:	je     0x140007dd4
   140007d75:	jae    0x140007dec
   140007d77:	jo     0x140007de9
   140007d79:	outs   dx,DWORD PTR ds:[rsi]
   140007d7a:	jb     0x140007df0
   140007d7c:	gs add BYTE PTR fs:[rax],al
   140007d80:	ja     0x140007df4
   140007d82:	outs   dx,DWORD PTR ds:[rsi]
   140007d83:	outs   dx,BYTE PTR ds:[rsi]
   140007d84:	addr32 pop rdi
   140007d86:	jo     0x140007dfa
   140007d88:	outs   dx,DWORD PTR ds:[rsi]
   140007d89:	je     0x140007dfa
   140007d8b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140007d8e:	pop    rdi
   140007d8f:	je     0x140007e0a
   140007d91:	jo     0x140007df8
   140007d93:	add    BYTE PTR [rax],al
   140007d95:	add    BYTE PTR [rax],al
   140007d97:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   140007d9b:	gs fs pop rdi
   140007d9e:	outs   dx,DWORD PTR ds:[rsi]
   140007d9f:	jne    0x140007e15
   140007da1:	add    BYTE PTR [rax],al
   140007da3:	add    BYTE PTR [rax],al
   140007da5:	add    BYTE PTR [rax],al
   140007da7:	add    BYTE PTR [rdi+0x70],ch
   140007daa:	gs jb  0x140007e0e
   140007dad:	je     0x140007e18
   140007daf:	outs   dx,DWORD PTR ds:[rsi]
   140007db0:	outs   dx,BYTE PTR ds:[rsi]
   140007db1:	pop    rdi
   140007db2:	ja     0x140007e23
   140007db4:	jne    0x140007e22
   140007db6:	fs pop rdi
   140007db8:	(bad)  
   140007db9:	ins    BYTE PTR es:[rdi],dx
   140007dba:	outs   dx,DWORD PTR ds:[rsi]
   140007dbb:	movsxd ebp,DWORD PTR [rbx+0x0]
   140007dbe:	add    BYTE PTR [rax],al
   140007dc0:	data16 add BYTE PTR [rax],al
   140007dc3:	add    BYTE PTR [rax],al
   140007dc5:	add    BYTE PTR [rax],al
   140007dc7:	add    BYTE PTR [rax+0x1400082],dh
   140007dcd:	add    BYTE PTR [rax],al
   140007dcf:	add    BYTE PTR [rax+rax*1+0x0],ah
   140007dd3:	add    BYTE PTR [rax],al
   140007dd5:	add    BYTE PTR [rax],al
   140007dd7:	add    al,dl
   140007dd9:	(bad)  
   140007dda:	add    BYTE PTR [rax+0x1],al
   140007ddd:	add    BYTE PTR [rax],al
   140007ddf:	add    BYTE PTR [rbp+0x0],ah
   140007de2:	add    BYTE PTR [rax],al
   140007de4:	add    BYTE PTR [rax],al
   140007de6:	add    BYTE PTR [rax],al
   140007de8:	loopne 0x140007d6c
   140007dea:	add    BYTE PTR [rax+0x1],al
   140007ded:	add    BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rcx+0x0],dh
   140007df2:	add    BYTE PTR [rax],al
   140007df4:	add    BYTE PTR [rax],al
   140007df6:	add    BYTE PTR [rax],al
   140007df8:	clc    
   140007df9:	(bad)  
   140007dfa:	add    BYTE PTR [rax+0x1],al
   140007dfd:	add    BYTE PTR [rax],al
   140007dff:	add    BYTE PTR [rdi],al
   140007e01:	add    BYTE PTR [rax],al
   140007e03:	add    BYTE PTR [rax],al
   140007e05:	add    BYTE PTR [rax],al
   140007e07:	add    BYTE PTR [rax],dl
   140007e09:	add    DWORD PTR [rax],0x40
   140007e0c:	add    DWORD PTR [rax],eax
   140007e0e:	add    BYTE PTR [rax],al
   140007e10:	and    DWORD PTR [rax],eax
   140007e12:	add    BYTE PTR [rax],al
   140007e14:	add    BYTE PTR [rax],al
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	sub    BYTE PTR [rbx+0x14000],al
   140007e1e:	add    BYTE PTR [rax],al
   140007e20:	(bad)  
   140007e21:	add    BYTE PTR [rax],al
   140007e23:	add    BYTE PTR [rax],al
   140007e25:	add    BYTE PTR [rax],al
   140007e27:	add    BYTE PTR [rax-0x7d],al
   140007e2a:	add    BYTE PTR [rax+0x1],al
   140007e2d:	add    BYTE PTR [rax],al
   140007e2f:	add    BYTE PTR [rcx],cl
   140007e31:	add    BYTE PTR [rax],al
   140007e33:	add    BYTE PTR [rax],al
   140007e35:	add    BYTE PTR [rax],al
   140007e37:	add    BYTE PTR [rax-0x7d],dl
   140007e3a:	add    BYTE PTR [rax+0x1],al
   140007e3d:	add    BYTE PTR [rax],al
   140007e3f:	add    BYTE PTR [rax+0x0],ch
   140007e42:	add    BYTE PTR [rax],al
   140007e44:	add    BYTE PTR [rax],al
   140007e46:	add    BYTE PTR [rax],al
   140007e48:	push   0x1400083
   140007e4d:	add    BYTE PTR [rax],al
   140007e4f:	add    BYTE PTR [rax],ah
   140007e51:	add    BYTE PTR [rax],al
   140007e53:	add    BYTE PTR [rax],al
   140007e55:	add    BYTE PTR [rax],al
   140007e57:	add    BYTE PTR [rax-0x7d],bh
   140007e5a:	add    BYTE PTR [rax+0x1],al
   140007e5d:	add    BYTE PTR [rax],al
   140007e5f:	add    BYTE PTR [rdx+0x0],ch
   140007e62:	add    BYTE PTR [rax],al
   140007e64:	add    BYTE PTR [rax],al
   140007e66:	add    BYTE PTR [rax],al
   140007e68:	mov    BYTE PTR [rbx+0x14000],al
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	add    BYTE PTR [eax],al
   140007e73:	add    BYTE PTR [rax],al
   140007e75:	add    BYTE PTR [rax],al
   140007e77:	add    BYTE PTR [rax+0x1400083],ah
   140007e7d:	add    BYTE PTR [rax],al
   140007e7f:	add    BYTE PTR [rbx+0x0],ch
   140007e82:	add    BYTE PTR [rax],al
   140007e84:	add    BYTE PTR [rax],al
   140007e86:	add    BYTE PTR [rax],al
   140007e88:	rol    BYTE PTR [rbx+0x14000],0x0
   140007e8f:	add    BYTE PTR [rax+rax*1+0x0],ch
   140007e93:	add    BYTE PTR [rax],al
   140007e95:	add    BYTE PTR [rax],al
   140007e97:	add    al,bl
   140007e99:	add    DWORD PTR [rax],0x40
   140007e9c:	add    DWORD PTR [rax],eax
   140007e9e:	add    BYTE PTR [rax],al
   140007ea0:	adc    al,BYTE PTR [rax]
   140007ea2:	add    BYTE PTR [rax],al
   140007ea4:	add    BYTE PTR [rax],al
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	enter  0x7a,0x40
   140007eac:	add    DWORD PTR [rax],eax
   140007eae:	add    BYTE PTR [rax],al
   140007eb0:	ins    DWORD PTR es:[rdi],dx
   140007eb1:	add    BYTE PTR [rax],al
   140007eb3:	add    BYTE PTR [rax],al
   140007eb5:	add    BYTE PTR [rax],al
   140007eb7:	add    al,dh
   140007eb9:	add    DWORD PTR [rax],0x40
   140007ebc:	add    DWORD PTR [rax],eax
   140007ebe:	add    BYTE PTR [rax],al
   140007ec0:	adc    BYTE PTR [rax],al
   140007ec2:	add    BYTE PTR [rax],al
   140007ec4:	add    BYTE PTR [rax],al
   140007ec6:	add    BYTE PTR [rax],al
   140007ec8:	sar    BYTE PTR [rcx+0x0],1
   140007ecb:	rex add DWORD PTR [rax],eax
   140007ece:	add    BYTE PTR [rax],al
   140007ed0:	sub    DWORD PTR [rax],eax
   140007ed2:	add    BYTE PTR [rax],al
   140007ed4:	add    BYTE PTR [rax],al
   140007ed6:	add    BYTE PTR [rax],al
   140007ed8:	clc    
   140007ed9:	jns    0x140007edb
   140007edb:	rex add DWORD PTR [rax],eax
   140007ede:	add    BYTE PTR [rax],al
   140007ee0:	or     BYTE PTR [rax],al
   140007ee2:	add    BYTE PTR [rax],al
   140007ee4:	add    BYTE PTR [rax],al
   140007ee6:	add    BYTE PTR [rax],al
   140007ee8:	adc    BYTE PTR [rax+rax*1+0x140],al
   140007eef:	add    BYTE PTR [rcx],dl
   140007ef1:	add    BYTE PTR [rax],al
   140007ef3:	add    BYTE PTR [rax],al
   140007ef5:	add    BYTE PTR [rax],al
   140007ef7:	add    BYTE PTR [rax+0x1400079],bl
   140007efd:	add    BYTE PTR [rax],al
   140007eff:	add    BYTE PTR [rbx],bl
   140007f01:	add    BYTE PTR [rax],al
   140007f03:	add    BYTE PTR [rax],al
   140007f05:	add    BYTE PTR [rax],al
   140007f07:	add    BYTE PTR [rax],ch
   140007f09:	test   BYTE PTR [rax],al
   140007f0b:	rex add DWORD PTR [rax],eax
   140007f0e:	add    BYTE PTR [rax],al
   140007f10:	add    BYTE PTR es:[rax],al
   140007f13:	add    BYTE PTR [rax],al
   140007f15:	add    BYTE PTR [rax],al
   140007f17:	add    BYTE PTR [rax+0x1400079],bh
   140007f1d:	add    BYTE PTR [rax],al
   140007f1f:	add    BYTE PTR [rax],ch
   140007f21:	add    BYTE PTR [rax],al
   140007f23:	add    BYTE PTR [rax],al
   140007f25:	add    BYTE PTR [rax],al
   140007f27:	add    BYTE PTR [rax+0x7a],ah
   140007f2a:	add    BYTE PTR [rax+0x1],al
   140007f2d:	add    BYTE PTR [rax],al
   140007f2f:	add    BYTE PTR [rsi+0x0],ch
   140007f32:	add    BYTE PTR [rax],al
   140007f34:	add    BYTE PTR [rax],al
   140007f36:	add    BYTE PTR [rax],al
   140007f38:	cmp    BYTE PTR [rax+rax*1+0x140],al
   140007f3f:	add    BYTE PTR [rdi+0x0],ch
   140007f42:	add    BYTE PTR [rax],al
   140007f44:	add    BYTE PTR [rax],al
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	push   rax
   140007f49:	test   BYTE PTR [rax],al
   140007f4b:	rex add DWORD PTR [rax],eax
   140007f4e:	add    BYTE PTR [rax],al
   140007f50:	sub    al,BYTE PTR [rax]
   140007f52:	add    BYTE PTR [rax],al
   140007f54:	add    BYTE PTR [rax],al
   140007f56:	add    BYTE PTR [rax],al
   140007f58:	push   0x1400084
   140007f5d:	add    BYTE PTR [rax],al
   140007f5f:	add    BYTE PTR [rcx],bl
   140007f61:	add    BYTE PTR [rax],al
   140007f63:	add    BYTE PTR [rax],al
   140007f65:	add    BYTE PTR [rax],al
   140007f67:	add    BYTE PTR [rax+0x1400084],al
   140007f6d:	add    BYTE PTR [rax],al
   140007f6f:	add    BYTE PTR [rax+rax*1],al
   140007f72:	add    BYTE PTR [rax],al
   140007f74:	add    BYTE PTR [rax],al
   140007f76:	add    BYTE PTR [rax],al
   140007f78:	push   rax
   140007f79:	jl     0x140007f7b
   140007f7b:	rex add DWORD PTR [rax],eax
   140007f7e:	add    BYTE PTR [rax],al
   140007f80:	(bad)  
   140007f81:	add    BYTE PTR [rax],al
   140007f83:	add    BYTE PTR [rax],al
   140007f85:	add    BYTE PTR [rax],al
   140007f87:	add    BYTE PTR [rax],dl
   140007f89:	jp     0x140007f8b
   140007f8b:	rex add DWORD PTR [rax],eax
   140007f8e:	add    BYTE PTR [rax],al
   140007f90:	sbb    eax,0x0
   140007f95:	add    BYTE PTR [rax],al
   140007f97:	add    BYTE PTR [rax+0x1400084],ch
   140007f9d:	add    BYTE PTR [rax],al
   140007f9f:	add    BYTE PTR [rip+0x0],al        # 0x140007fa5
   140007fa5:	add    BYTE PTR [rax],al
   140007fa7:	add    al,ch
   140007fa9:	jns    0x140007fab
   140007fab:	rex add DWORD PTR [rax],eax
   140007fae:	add    BYTE PTR [rax],al
   140007fb0:	adc    eax,0x0
   140007fb5:	add    BYTE PTR [rax],al
   140007fb7:	add    BYTE PTR [rax+0x1400084],bh
   140007fbd:	add    BYTE PTR [rax],al
   140007fbf:	add    BYTE PTR [rbx+0x0],dh
   140007fc2:	add    BYTE PTR [rax],al
   140007fc4:	add    BYTE PTR [rax],al
   140007fc6:	add    BYTE PTR [rax],al
   140007fc8:	enter  0x84,0x40
   140007fcc:	add    DWORD PTR [rax],eax
   140007fce:	add    BYTE PTR [rax],al
   140007fd0:	je     0x140007fd2
   140007fd2:	add    BYTE PTR [rax],al
   140007fd4:	add    BYTE PTR [rax],al
   140007fd6:	add    BYTE PTR [rax],al
   140007fd8:	fadd   DWORD PTR [rax+rax*1+0x140]
   140007fdf:	add    BYTE PTR [rbp+0x0],dh
   140007fe2:	add    BYTE PTR [rax],al
   140007fe4:	add    BYTE PTR [rax],al
   140007fe6:	add    BYTE PTR [rax],al
   140007fe8:	call   0x141408071
   140007fed:	add    BYTE PTR [rax],al
   140007fef:	add    BYTE PTR [rsi+0x0],dh
   140007ff2:	add    BYTE PTR [rax],al
   140007ff4:	add    BYTE PTR [rax],al
   140007ff6:	add    BYTE PTR [rax],al
   140007ff8:	clc    
   140007ff9:	test   BYTE PTR [rax],al
   140007ffb:	rex add DWORD PTR [rax],eax
   140007ffe:	add    BYTE PTR [rax],al
   140008000:	ja     0x140008002
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	adc    BYTE PTR [rbp+0x14000],al
   14000800e:	add    BYTE PTR [rax],al
   140008010:	or     al,BYTE PTR [rax]
   140008012:	add    BYTE PTR [rax],al
   140008014:	add    BYTE PTR [rax],al
   140008016:	add    BYTE PTR [rax],al
   140008018:	and    BYTE PTR [rbp+0x14000],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	jns    0x140008022
   140008022:	add    BYTE PTR [rax],al
   140008024:	add    BYTE PTR [rax],al
   140008026:	add    BYTE PTR [rax],al
   140008028:	cmp    BYTE PTR [rbp+0x14000],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	(bad)  
   140008031:	add    BYTE PTR [rax],al
   140008033:	add    BYTE PTR [rax],al
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rax+0x7a],bh
   14000803a:	add    BYTE PTR [rax+0x1],al
   14000803d:	add    BYTE PTR [rax],al
   14000803f:	add    BYTE PTR [rax+0x0],bh
   140008042:	add    BYTE PTR [rax],al
   140008044:	add    BYTE PTR [rax],al
   140008046:	add    BYTE PTR [rax],al
   140008048:	rex test DWORD PTR [rax],eax
   14000804b:	rex add DWORD PTR [rax],eax
   14000804e:	add    BYTE PTR [rax],al
   140008050:	jp     0x140008052
   140008052:	add    BYTE PTR [rax],al
   140008054:	add    BYTE PTR [rax],al
   140008056:	add    BYTE PTR [rax],al
   140008058:	pop    rax
   140008059:	test   DWORD PTR [rax],eax
   14000805b:	rex add DWORD PTR [rax],eax
   14000805e:	add    BYTE PTR [rax],al
   140008060:	jnp    0x140008062
   140008062:	add    BYTE PTR [rax],al
   140008064:	add    BYTE PTR [rax],al
   140008066:	add    BYTE PTR [rax],al
   140008068:	push   0x1400085
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    BYTE PTR [rax+rax*1],bl
   140008072:	add    BYTE PTR [rax],al
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rax],al
   140008078:	sub    BYTE PTR [rdx+0x0],bh
   14000807b:	rex add DWORD PTR [rax],eax
   14000807e:	add    BYTE PTR [rax],al
   140008080:	jl     0x140008082
   140008082:	add    BYTE PTR [rax],al
   140008084:	add    BYTE PTR [rax],al
   140008086:	add    BYTE PTR [rax],al
   140008088:	add    BYTE PTR [rbp+0x14000],0x0
   14000808f:	add    BYTE PTR [rsi],al
   140008091:	add    BYTE PTR [rax],al
   140008093:	add    BYTE PTR [rax],al
   140008095:	add    BYTE PTR [rax],al
   140008097:	add    BYTE PTR [rax+0x1400085],bl
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    BYTE PTR [rbx],dl
   1400080a1:	add    BYTE PTR [rax],al
   1400080a3:	add    BYTE PTR [rax],al
   1400080a5:	add    BYTE PTR [rax],al
   1400080a7:	add    BYTE PTR [rax+0x1400079],ch
   1400080ad:	add    BYTE PTR [rax],al
   1400080af:	add    BYTE PTR [rdx],al
   1400080b1:	add    BYTE PTR [rax],al
   1400080b3:	add    BYTE PTR [rax],al
   1400080b5:	add    BYTE PTR [rax],al
   1400080b7:	add    BYTE PTR [rax+0x7a],al
   1400080ba:	add    BYTE PTR [rax+0x1],al
   1400080bd:	add    BYTE PTR [rax],al
   1400080bf:	add    BYTE PTR [rbx],al
   1400080c1:	add    BYTE PTR [rax],al
   1400080c3:	add    BYTE PTR [rax],al
   1400080c5:	add    BYTE PTR [rax],al
   1400080c7:	add    BYTE PTR [rax+0x1400085],bh
   1400080cd:	add    BYTE PTR [rax],al
   1400080cf:	add    BYTE PTR [rax+rax*1],dl
   1400080d2:	add    BYTE PTR [rax],al
   1400080d4:	add    BYTE PTR [rax],al
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	enter  0x85,0x40
   1400080dc:	add    DWORD PTR [rax],eax
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	add    BYTE PTR [rax],0x0
   1400080e3:	add    BYTE PTR [rax],al
   1400080e5:	add    BYTE PTR [rax],al
   1400080e7:	add    al,bl
   1400080e9:	test   DWORD PTR [rax],eax
   1400080eb:	rex add DWORD PTR [rax],eax
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	jge    0x1400080f2
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	add    BYTE PTR [rax],al
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	call   0x141408182
   1400080fd:	add    BYTE PTR [rax],al
   1400080ff:	add    BYTE PTR [rsi+0x0],bh
   140008102:	add    BYTE PTR [rax],al
   140008104:	add    BYTE PTR [rax],al
   140008106:	add    BYTE PTR [rax],al
   140008108:	clc    
   140008109:	test   DWORD PTR [rax],eax
   14000810b:	rex add DWORD PTR [rax],eax
   14000810e:	add    BYTE PTR [rax],al
   140008110:	or     al,0x0
   140008112:	add    BYTE PTR [rax],al
   140008114:	add    BYTE PTR [rax],al
   140008116:	add    BYTE PTR [rax],al
   140008118:	nop
   140008119:	jp     0x14000811b
   14000811b:	rex add DWORD PTR [rax],eax
   14000811e:	add    BYTE PTR [rax],al
   140008120:	add    DWORD PTR [rax],0x0
   140008126:	add    BYTE PTR [rax],al
   140008128:	or     BYTE PTR [rsi+0x14000],al
   14000812e:	add    BYTE PTR [rax],al
   140008130:	imul   eax,DWORD PTR [rax],0x0
   140008136:	add    BYTE PTR [rax],al
   140008138:	loopne 0x1400081b4
   14000813a:	add    BYTE PTR [rax+0x1],al
   14000813d:	add    BYTE PTR [rax],al
   14000813f:	add    BYTE PTR [rax+0x0],dh
   140008142:	add    BYTE PTR [rax],al
   140008144:	add    BYTE PTR [rax],al
   140008146:	add    BYTE PTR [rax],al
   140008148:	sbb    BYTE PTR [rsi+0x14000],al
   14000814e:	add    BYTE PTR [rax],al
   140008150:	add    DWORD PTR [rax],eax
   140008152:	add    BYTE PTR [rax],al
   140008154:	add    BYTE PTR [rax],al
   140008156:	add    BYTE PTR [rax],al
   140008158:	xor    BYTE PTR [rsi+0x14000],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	(bad)  
   140008161:	add    BYTE PTR [rax],al
   140008163:	add    BYTE PTR [rax],al
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    BYTE PTR [rax-0x7a],cl
   14000816a:	add    BYTE PTR [rax+0x1],al
   14000816d:	add    BYTE PTR [rax],al
   14000816f:	add    BYTE PTR [rax+rax*1+0x0],cl
   140008176:	add    BYTE PTR [rax],al
   140008178:	(bad)  
   140008179:	xchg   BYTE PTR [rax],al
   14000817b:	rex add DWORD PTR [rax],eax
   14000817e:	add    BYTE PTR [rax],al
   140008180:	test   DWORD PTR [rax],eax
   140008182:	add    BYTE PTR [rax],al
   140008184:	add    BYTE PTR [rax],al
   140008186:	add    BYTE PTR [rax],al
   140008188:	js     0x140008110
   14000818a:	add    BYTE PTR [rax+0x1],al
   14000818d:	add    BYTE PTR [rax],al
   14000818f:	add    BYTE PTR [rip+0x0],cl        # 0x140008195
   140008195:	add    BYTE PTR [rax],al
   140008197:	add    BYTE PTR [rax+0x1400079],al
   14000819d:	add    BYTE PTR [rax],al
   14000819f:	add    BYTE PTR [rsi+0x0],al
   1400081a5:	add    BYTE PTR [rax],al
   1400081a7:	add    BYTE PTR [rax+0x1400086],cl
   1400081ad:	add    BYTE PTR [rax],al
   1400081af:	add    BYTE PTR [rdi+0x0],al
   1400081b5:	add    BYTE PTR [rax],al
   1400081b7:	add    BYTE PTR [rax+0x1400086],bl
   1400081bd:	add    BYTE PTR [rax],al
   1400081bf:	add    BYTE PTR [rsi],bl
   1400081c1:	add    BYTE PTR [rax],al
   1400081c3:	add    BYTE PTR [rax],al
   1400081c5:	add    BYTE PTR [rax],al
   1400081c7:	add    BYTE PTR [rax+0x1400086],dh
   1400081cd:	add    BYTE PTR [rax],al
   1400081cf:	add    BYTE PTR [rax+rax*1],ah
   1400081d2:	add    BYTE PTR [rax],al
   1400081d4:	add    BYTE PTR [rax],al
   1400081d6:	add    BYTE PTR [rax],al
   1400081d8:	enter  0x86,0x40
   1400081dc:	add    DWORD PTR [rax],eax
   1400081de:	add    BYTE PTR [rax],al
   1400081e0:	or     eax,DWORD PTR [rax]
   1400081e2:	add    BYTE PTR [rax],al
   1400081e4:	add    BYTE PTR [rax],al
   1400081e6:	add    BYTE PTR [rax],al
   1400081e8:	test   al,0x7a
   1400081ea:	add    BYTE PTR [rax+0x1],al
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    BYTE PTR [rdx],ah
   1400081f1:	add    BYTE PTR [rax],al
   1400081f3:	add    BYTE PTR [rax],al
   1400081f5:	add    BYTE PTR [rax],al
   1400081f7:	add    al,ch
   1400081f9:	xchg   BYTE PTR [rax],al
   1400081fb:	rex add DWORD PTR [rax],eax
   1400081fe:	add    BYTE PTR [rax],al
   140008200:	jg     0x140008202
   140008202:	add    BYTE PTR [rax],al
   140008204:	add    BYTE PTR [rax],al
   140008206:	add    BYTE PTR [rax],al
   140008208:	add    BYTE PTR [rdi+0x14000],al
   14000820e:	add    BYTE PTR [rax],al
   140008210:	mov    DWORD PTR [rax],eax
   140008212:	add    BYTE PTR [rax],al
   140008214:	add    BYTE PTR [rax],al
   140008216:	add    BYTE PTR [rax],al
   140008218:	sbb    BYTE PTR [rdi+0x14000],al
   14000821e:	add    BYTE PTR [rax],al
   140008220:	mov    eax,DWORD PTR [rax]
   140008222:	add    BYTE PTR [rax],al
   140008224:	add    BYTE PTR [rax],al
   140008226:	add    BYTE PTR [rax],al
   140008228:	sub    BYTE PTR [rdi+0x14000],al
   14000822e:	add    BYTE PTR [rax],al
   140008230:	mov    al,BYTE PTR [rax]
   140008232:	add    BYTE PTR [rax],al
   140008234:	add    BYTE PTR [rax],al
   140008236:	add    BYTE PTR [rax],al
   140008238:	cmp    BYTE PTR [rdi+0x14000],al
   14000823e:	add    BYTE PTR [rax],al
   140008240:	(bad)  
   140008241:	add    BYTE PTR [rax],al
   140008243:	add    BYTE PTR [rax],al
   140008245:	add    BYTE PTR [rax],al
   140008247:	add    BYTE PTR [rax-0x79],cl
   14000824a:	add    BYTE PTR [rax+0x1],al
   14000824d:	add    BYTE PTR [rax],al
   14000824f:	add    BYTE PTR [rax],bl
   140008251:	add    BYTE PTR [rax],al
   140008253:	add    BYTE PTR [rax],al
   140008255:	add    BYTE PTR [rax],al
   140008257:	add    al,bh
   140008259:	jp     0x14000825b
   14000825b:	rex add DWORD PTR [rax],eax
   14000825e:	add    BYTE PTR [rax],al
   140008260:	(bad)  
   140008261:	add    BYTE PTR [rax],al
   140008263:	add    BYTE PTR [rax],al
   140008265:	add    BYTE PTR [rax],al
   140008267:	add    BYTE PTR [rax-0x79],ch
   14000826a:	add    BYTE PTR [rax+0x1],al
   14000826d:	add    BYTE PTR [rax],al
   14000826f:	add    BYTE PTR [rdx+0x0],dh
   140008272:	add    BYTE PTR [rax],al
   140008274:	add    BYTE PTR [rax],al
   140008276:	add    BYTE PTR [rax],al
   140008278:	js     0x140008201
   14000827a:	add    BYTE PTR [rax+0x1],al
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    BYTE PTR [rax+rax*1+0x0],al
   140008286:	add    BYTE PTR [rax],al
   140008288:	cwde   
   140008289:	xchg   DWORD PTR [rax],eax
   14000828b:	rex add DWORD PTR [rax],eax
   14000828e:	add    BYTE PTR [rax],al
   140008290:	mov    BYTE PTR [rax],al
   140008292:	add    BYTE PTR [rax],al
   140008294:	add    BYTE PTR [rax],al
   140008296:	add    BYTE PTR [rax],al
   140008298:	test   al,0x87
   14000829a:	add    BYTE PTR [rax+0x1],al
	...
   1400082ad:	add    BYTE PTR [rax],al
   1400082af:	add    BYTE PTR [rcx+0x64],ah
   1400082b2:	fs jb  0x14000831a
   1400082b5:	jae    0x14000832a
   1400082b7:	and    BYTE PTR [rsi+0x61],ah
   1400082ba:	ins    DWORD PTR es:[rdi],dx
   1400082bb:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   1400082c3:	jae    0x14000833a
   1400082c5:	jo     0x140008337
   1400082c7:	outs   dx,DWORD PTR ds:[rsi]
   1400082c8:	jb     0x14000833e
   1400082ca:	gs add BYTE PTR fs:[rax],al
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	(bad)  
   1400082d1:	fs fs jb 0x14000833a
   1400082d5:	jae    0x14000834a
   1400082d7:	and    BYTE PTR [rcx+0x6e],ch
   1400082da:	and    BYTE PTR [rbp+0x73],dh
   1400082dd:	add    BYTE PTR gs:[rax],al
   1400082e0:	(bad)  
   1400082e1:	fs fs jb 0x14000834a
   1400082e5:	jae    0x14000835a
   1400082e7:	and    BYTE PTR [rsi+0x6f],ch
   1400082ea:	je     0x14000830c
   1400082ec:	(bad)  
   1400082ed:	jbe    0x140008350
   1400082ef:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400082f7:	add    BYTE PTR [rcx+0x6c],ah
   1400082fa:	jb     0x140008361
   1400082fc:	(bad)  
   1400082fd:	fs jns 0x140008320
   140008300:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008303:	outs   dx,BYTE PTR ds:[rsi]
   140008304:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140008309:	add    BYTE PTR [rax],al
   14000830b:	add    BYTE PTR [rax],al
   14000830d:	add    BYTE PTR [rax],al
   14000830f:	add    BYTE PTR [rcx+0x72],ah
   140008312:	addr32 jne 0x140008382
   140008315:	outs   dx,BYTE PTR gs:[rsi]
   140008317:	je     0x140008339
   140008319:	ins    BYTE PTR es:[rdi],dx
   14000831a:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   140008321:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008325:	add    BYTE PTR [eax],al
   140008328:	(bad)  
   140008329:	jb     0x140008392
   14000832b:	jne    0x14000839a
   14000832d:	outs   dx,BYTE PTR gs:[rsi]
   14000832f:	je     0x140008351
   140008331:	outs   dx,DWORD PTR ds:[rsi]
   140008332:	jne    0x1400083a8
   140008334:	and    BYTE PTR [rdi+0x66],ch
   140008337:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   14000833b:	(bad)  
   14000833c:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   140008343:	and    BYTE PTR [rcx+0x64],ah
   140008346:	fs jb  0x1400083ae
   140008349:	jae    0x1400083be
   14000834b:	add    BYTE PTR [rax],al
   14000834d:	add    BYTE PTR [rax],al
   14000834f:	add    BYTE PTR [rdx+0x61],ah
   140008352:	and    BYTE PTR fs:[rsi+0x69],ah
   140008356:	ins    BYTE PTR es:[rdi],dx
   140008357:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   14000835c:	movsxd esi,DWORD PTR [rdx+0x69]
   14000835f:	jo     0x1400083d5
   140008361:	outs   dx,DWORD PTR ds:[rsi]
   140008362:	jb     0x140008364
   140008364:	add    BYTE PTR [rax],al
   140008366:	add    BYTE PTR [rax],al
   140008368:	(bad)
   14000836d:	gs jae 0x1400083e3
   140008370:	(bad)  
   140008371:	add    BYTE PTR gs:[eax],al
   140008375:	add    BYTE PTR [rax],al
   140008377:	add    BYTE PTR [rdx+0x72],ah
   14000837a:	outs   dx,DWORD PTR ds:[rsi]
   14000837b:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14000837f:	jo     0x1400083ea
   140008381:	jo     0x1400083e8
   140008383:	add    BYTE PTR [rax],al
   140008385:	add    BYTE PTR [rax],al
   140008387:	add    BYTE PTR [rbx+0x6f],ah
   14000838a:	outs   dx,BYTE PTR ds:[rsi]
   14000838b:	outs   dx,BYTE PTR ds:[rsi]
   14000838c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008391:	outs   dx,BYTE PTR ds:[rsi]
   140008392:	and    BYTE PTR [rcx+0x62],ah
   140008395:	outs   dx,DWORD PTR ds:[rsi]
   140008396:	jb     0x14000840c
   140008398:	gs add BYTE PTR fs:[rax],al
   14000839c:	add    BYTE PTR [rax],al
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400083a3:	outs   dx,BYTE PTR ds:[rsi]
   1400083a4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400083a9:	outs   dx,BYTE PTR ds:[rsi]
   1400083aa:	and    BYTE PTR [rcx+0x6c],ah
   1400083ad:	jb     0x140008414
   1400083af:	(bad)  
   1400083b0:	fs jns 0x1400083d3
   1400083b3:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   1400083ba:	jb     0x140008421
   1400083bc:	jae    0x140008431
   1400083be:	add    BYTE PTR [rax],al
   1400083c0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400083c3:	outs   dx,BYTE PTR ds:[rsi]
   1400083c4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400083c9:	outs   dx,BYTE PTR ds:[rsi]
   1400083ca:	and    BYTE PTR [rdx+0x65],dh
   1400083cd:	data16 jne 0x140008443
   1400083d0:	gs add BYTE PTR fs:[rax],al
   1400083d4:	add    BYTE PTR [rax],al
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400083db:	outs   dx,BYTE PTR ds:[rsi]
   1400083dc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400083e1:	outs   dx,BYTE PTR ds:[rsi]
   1400083e2:	and    BYTE PTR [rdx+0x65],dh
   1400083e5:	jae    0x14000844c
   1400083e7:	je     0x1400083e9
   1400083e9:	add    BYTE PTR [rax],al
   1400083eb:	add    BYTE PTR [rax],al
   1400083ed:	add    BYTE PTR [rax],al
   1400083ef:	add    BYTE PTR [rbp+riz*2+0x73],ah
   1400083f3:	je     0x14000845e
   1400083f5:	outs   dx,BYTE PTR ds:[rsi]
   1400083f6:	(bad)  
   1400083f7:	je     0x140008462
   1400083f9:	outs   dx,DWORD PTR ds:[rsi]
   1400083fa:	outs   dx,BYTE PTR ds:[rsi]
   1400083fb:	and    BYTE PTR [rcx+0x64],ah
   1400083fe:	fs jb  0x140008466
   140008401:	jae    0x140008476
   140008403:	and    BYTE PTR [rdx+0x65],dh
   140008406:	jno    0x14000847d
   140008408:	imul   esi,DWORD PTR [rdx+0x65],0x64
   14000840f:	add    BYTE PTR [rbp+0x78],ah
   140008412:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   140008416:	(bad)  
   140008417:	(bad)  
   140008418:	ins    BYTE PTR es:[rdi],dx
   140008419:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000841d:	jb     0x14000848c
   14000841f:	(bad)  
   140008420:	je     0x140008442
   140008422:	gs jb  0x140008497
   140008425:	outs   dx,DWORD PTR ds:[rsi]
   140008426:	jb     0x140008428
   140008428:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   14000842f:	outs   dx,DWORD PTR ds:[rsi]
   140008430:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140008434:	add    BYTE PTR gs:[eax],al
   140008438:	push   0x2074736f
   14000843d:	jne    0x1400084ad
   14000843f:	jb     0x1400084a6
   140008441:	(bad)  
   140008442:	movsxd ebp,DWORD PTR [rax+0x61]
   140008445:	(bad)  
   140008446:	ins    BYTE PTR es:[rdi],dx
   140008447:	add    BYTE PTR gs:[rax],al
   14000844a:	add    BYTE PTR [rax],al
   14000844c:	add    BYTE PTR [rax],al
   14000844e:	add    BYTE PTR [rax],al
   140008450:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   140008458:	gs jb  0x14000847b
   14000845b:	jb     0x1400084c2
   14000845d:	ins    DWORD PTR es:[rdi],dx
   14000845e:	outs   dx,DWORD PTR ds:[rsi]
   14000845f:	jbe    0x1400084c6
   140008461:	add    BYTE PTR fs:[rax],al
   140008464:	add    BYTE PTR [rax],al
   140008466:	add    BYTE PTR [rax],al
   140008468:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   140008470:	(bad)  
   140008471:	jns    0x1400084e7
   140008473:	and    BYTE PTR gs:[rbx+0x65],dh
   140008477:	jno    0x1400084ee
   140008479:	outs   dx,BYTE PTR gs:[rsi]
   14000847b:	movsxd esp,DWORD PTR [rbp+0x0]
   14000847e:	add    BYTE PTR [rax],al
   140008480:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   140008487:	jo     0x1400084fb
   140008489:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   140008490:	and    BYTE PTR [rbx+0x6f],ah
   140008493:	outs   dx,BYTE PTR ds:[rsi]
   140008494:	je     0x140008508
   140008496:	outs   dx,DWORD PTR ds:[rsi]
   140008497:	ins    BYTE PTR es:[rdi],dx
   140008498:	and    BYTE PTR [rdi+0x70],ch
   14000849b:	gs jb  0x1400084ff
   14000849e:	je     0x140008509
   1400084a0:	outs   dx,DWORD PTR ds:[rsi]
   1400084a1:	outs   dx,BYTE PTR ds:[rsi]
   1400084a2:	add    BYTE PTR [rax],al
   1400084a4:	add    BYTE PTR [rax],al
   1400084a6:	add    BYTE PTR [rax],al
   1400084a8:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400084af:	and    BYTE PTR [rbx+0x65],dh
   1400084b2:	imul   eax,DWORD PTR gs:[rax],0x0
   1400084b6:	add    BYTE PTR [rax],al
   1400084b8:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   1400084bf:	jb     0x140008526
   1400084c1:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400084c5:	jns    0x1400084c7
   1400084c7:	add    BYTE PTR [rbp+0x65],ch
   1400084ca:	jae    0x14000853f
   1400084cc:	(bad)  
   1400084cd:	and    BYTE PTR gs:[ebx+0x69],dh
   1400084d2:	jp     0x140008539
   1400084d4:	add    BYTE PTR [rax],al
   1400084d6:	add    BYTE PTR [rax],al
   1400084d8:	outs   dx,BYTE PTR ds:[rsi]
   1400084d9:	gs je  0x140008553
   1400084dc:	outs   dx,DWORD PTR ds:[rsi]
   1400084dd:	jb     0x14000854a
   1400084df:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   1400084e3:	outs   dx,BYTE PTR ds:[rsi]
   1400084e4:	add    BYTE PTR [rax],al
   1400084e6:	add    BYTE PTR [rax],al
   1400084e8:	outs   dx,BYTE PTR ds:[rsi]
   1400084e9:	gs je  0x140008563
   1400084ec:	outs   dx,DWORD PTR ds:[rsi]
   1400084ed:	jb     0x14000855a
   1400084ef:	and    BYTE PTR [rdx+0x65],dh
   1400084f2:	jae    0x140008559
   1400084f4:	je     0x1400084f6
   1400084f6:	add    BYTE PTR [rax],al
   1400084f8:	outs   dx,BYTE PTR ds:[rsi]
   1400084f9:	gs je  0x140008573
   1400084fc:	outs   dx,DWORD PTR ds:[rsi]
   1400084fd:	jb     0x14000856a
   1400084ff:	and    BYTE PTR [rbp+0x6e],dh
   140008502:	jb     0x140008569
   140008504:	(bad)  
   140008505:	movsxd ebp,DWORD PTR [rax+0x61]
   140008508:	(bad)  
   140008509:	ins    BYTE PTR es:[rdi],dx
   14000850a:	add    BYTE PTR gs:[rax],al
   14000850d:	add    BYTE PTR [rax],al
   14000850f:	add    BYTE PTR [rsi+0x6f],ch
   140008512:	and    BYTE PTR [rdx+0x75],ah
   140008515:	data16 data16 gs jb 0x14000853a
   14000851a:	jae    0x14000858c
   14000851c:	(bad)  
   14000851d:	movsxd esp,DWORD PTR [rbp+0x0]
   140008520:	outs   dx,BYTE PTR ds:[rsi]
   140008521:	outs   dx,DWORD PTR ds:[rsi]
   140008522:	and    BYTE PTR [rbx+0x68],ah
   140008525:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   14000852d:	gs jae 0x1400085a3
	...
   140008538:	outs   dx,BYTE PTR ds:[rsi]
   140008539:	outs   dx,DWORD PTR ds:[rsi]
   14000853a:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14000853e:	imul   eax,DWORD PTR [rax],0x6e
   140008541:	outs   dx,DWORD PTR ds:[rsi]
   140008542:	and    BYTE PTR [rbp+0x65],ch
   140008545:	jae    0x1400085ba
   140008547:	(bad)  
   140008548:	and    BYTE PTR gs:[ecx+0x76],ah
   14000854d:	(bad)  
   14000854e:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140008556:	add    BYTE PTR [rax],al
   140008558:	outs   dx,BYTE PTR ds:[rsi]
   140008559:	outs   dx,DWORD PTR ds:[rsi]
   14000855a:	and    BYTE PTR [rbp+0x65],ch
   14000855d:	jae    0x1400085d2
   14000855f:	(bad)  
   140008560:	add    BYTE PTR gs:[eax],al
   140008564:	add    BYTE PTR [rax],al
   140008566:	add    BYTE PTR [rax],al
   140008568:	outs   dx,BYTE PTR ds:[rsi]
   140008569:	outs   dx,DWORD PTR ds:[rsi]
   14000856a:	and    BYTE PTR [rax+0x72],dh
   14000856d:	outs   dx,DWORD PTR ds:[rsi]
   14000856e:	je     0x1400085df
   140008570:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008573:	and    BYTE PTR [rdi+0x70],ch
   140008576:	je     0x1400085e1
   140008578:	outs   dx,DWORD PTR ds:[rsi]
   140008579:	outs   dx,BYTE PTR ds:[rsi]
   14000857a:	add    BYTE PTR [rax],al
   14000857c:	add    BYTE PTR [rax],al
   14000857e:	add    BYTE PTR [rax],al
   140008580:	outs   dx,BYTE PTR ds:[rsi]
   140008581:	outs   dx,DWORD PTR ds:[rsi]
   140008582:	and    BYTE PTR [rbx+0x74],dh
   140008585:	jb     0x1400085ec
   140008587:	(bad)  
   140008588:	ins    DWORD PTR es:[rdi],dx
   140008589:	and    BYTE PTR [rdx+0x65],dh
   14000858c:	jae    0x1400085fd
   14000858e:	jne    0x140008602
   140008590:	movsxd esp,DWORD PTR [rbp+0x73]
   140008593:	add    BYTE PTR [rax],al
   140008595:	add    BYTE PTR [rax],al
   140008597:	add    BYTE PTR [rsi+0x6f],ch
   14000859a:	and    BYTE PTR [rbx+0x75],dh
   14000859d:	movsxd ebp,DWORD PTR [rax+0x20]
   1400085a0:	fs gs jbe 0x14000860d
   1400085a4:	movsxd esp,DWORD PTR [rbp+0x20]
   1400085a7:	outs   dx,DWORD PTR ds:[rsi]
   1400085a8:	jb     0x1400085ca
   1400085aa:	(bad)  
   1400085ab:	fs fs jb 0x140008614
   1400085af:	jae    0x140008624
   1400085b1:	add    BYTE PTR [rax],al
   1400085b3:	add    BYTE PTR [rax],al
   1400085b5:	add    BYTE PTR [rax],al
   1400085b7:	add    BYTE PTR [rsi+0x6f],ch
   1400085ba:	and    BYTE PTR [rbx+0x75],dh
   1400085bd:	movsxd ebp,DWORD PTR [rax+0x20]
   1400085c0:	jo     0x140008634
   1400085c2:	outs   dx,DWORD PTR ds:[rsi]
   1400085c3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400085c6:	jae    0x1400085c8
   1400085c8:	outs   dx,BYTE PTR ds:[rsi]
   1400085c9:	outs   dx,DWORD PTR ds:[rsi]
   1400085ca:	je     0x1400085ec
   1400085cc:	(bad)  
   1400085cd:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   1400085d1:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400085d6:	jns    0x1400085d8
   1400085d8:	outs   dx,BYTE PTR ds:[rsi]
   1400085d9:	outs   dx,DWORD PTR ds:[rsi]
   1400085da:	je     0x1400085fc
   1400085dc:	(bad)  
   1400085dd:	and    BYTE PTR [rbx+0x6f],dh
   1400085e0:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400085e3:	je     0x1400085e5
   1400085e5:	add    BYTE PTR [rax],al
   1400085e7:	add    BYTE PTR [rsi+0x6f],ch
   1400085ea:	je     0x14000860c
   1400085ec:	(bad)  
   1400085ed:	and    BYTE PTR [rbx+0x74],dh
   1400085f0:	jb     0x140008657
   1400085f2:	(bad)  
   1400085f3:	ins    DWORD PTR es:[rdi],dx
   1400085f4:	add    BYTE PTR [rax],al
   1400085f6:	add    BYTE PTR [rax],al
   1400085f8:	outs   dx,BYTE PTR ds:[rsi]
   1400085f9:	outs   dx,DWORD PTR ds:[rsi]
   1400085fa:	je     0x14000861c
   1400085fc:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400085ff:	outs   dx,BYTE PTR ds:[rsi]
   140008600:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140008605:	add    BYTE PTR [rax],al
   140008607:	add    BYTE PTR [rsi+0x6f],ch
   14000860a:	je     0x14000862c
   14000860c:	jae    0x140008683
   14000860e:	jo     0x140008680
   140008610:	outs   dx,DWORD PTR ds:[rsi]
   140008611:	jb     0x140008687
   140008613:	gs add BYTE PTR fs:[rax],al
   140008617:	add    BYTE PTR [rdi+0x70],ch
   14000861a:	gs jb  0x14000867e
   14000861d:	je     0x140008688
   14000861f:	outs   dx,DWORD PTR ds:[rsi]
   140008620:	outs   dx,BYTE PTR ds:[rsi]
   140008621:	and    BYTE PTR [rcx+0x6e],ch
   140008624:	and    BYTE PTR [rax+0x72],dh
   140008627:	outs   dx,DWORD PTR ds:[rsi]
   140008628:	addr32 jb 0x140008690
   14000862b:	jae    0x1400086a0
   14000862d:	add    BYTE PTR [rax],al
   14000862f:	add    BYTE PTR [rdi+0x70],ch
   140008632:	gs jb  0x140008696
   140008635:	je     0x1400086a0
   140008637:	outs   dx,DWORD PTR ds:[rsi]
   140008638:	outs   dx,BYTE PTR ds:[rsi]
   140008639:	and    BYTE PTR [rsi+0x6f],ch
   14000863c:	je     0x14000865e
   14000863e:	jo     0x1400086a5
   140008640:	jb     0x1400086af
   140008642:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   14000864a:	gs jb  0x1400086ae
   14000864d:	je     0x1400086b8
   14000864f:	outs   dx,DWORD PTR ds:[rsi]
   140008650:	outs   dx,BYTE PTR ds:[rsi]
   140008651:	and    BYTE PTR [rsi+0x6f],ch
   140008654:	je     0x140008676
   140008656:	jae    0x1400086cd
   140008658:	jo     0x1400086ca
   14000865a:	outs   dx,DWORD PTR ds:[rsi]
   14000865b:	jb     0x1400086d1
   14000865d:	gs add BYTE PTR fs:[rdi+0x70],ch
   140008662:	gs jb  0x1400086c6
   140008665:	je     0x1400086d0
   140008667:	outs   dx,DWORD PTR ds:[rsi]
   140008668:	outs   dx,BYTE PTR ds:[rsi]
   140008669:	and    BYTE PTR [rdi+0x6f],dh
   14000866c:	jne    0x1400086da
   14000866e:	and    BYTE PTR fs:[rdx+0x6c],ah
   140008672:	outs   dx,DWORD PTR ds:[rsi]
   140008673:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008676:	add    BYTE PTR [rax],al
   140008678:	outs   dx,DWORD PTR ds:[rsi]
   140008679:	ja     0x1400086e9
   14000867b:	gs jb  0x14000869e
   14000867e:	fs gs (bad) 
   140008681:	add    BYTE PTR fs:[rax],al
   140008684:	add    BYTE PTR [rax],al
   140008686:	add    BYTE PTR [rax],al
   140008688:	jo     0x1400086fc
   14000868a:	outs   dx,DWORD PTR ds:[rsi]
   14000868b:	je     0x1400086fc
   14000868d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140008690:	and    BYTE PTR [rbp+0x72],ah
   140008693:	jb     0x140008704
   140008695:	jb     0x140008697
   140008697:	add    BYTE PTR [rax+0x72],dh
   14000869a:	outs   dx,DWORD PTR ds:[rsi]
   14000869b:	je     0x14000870c
   14000869d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400086a0:	and    BYTE PTR [rsi+0x6f],ch
   1400086a3:	je     0x1400086c5
   1400086a5:	jae    0x14000871c
   1400086a7:	jo     0x140008719
   1400086a9:	outs   dx,DWORD PTR ds:[rsi]
   1400086aa:	jb     0x140008720
   1400086ac:	gs add BYTE PTR fs:[rax],al
   1400086b0:	jb     0x140008717
   1400086b2:	(bad)  
   1400086b3:	and    BYTE PTR fs:[rdi+0x6e],ch
   1400086b7:	ins    BYTE PTR es:[rdi],dx
   1400086b8:	jns    0x1400086da
   1400086ba:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   1400086c1:	jae    0x140008737
   1400086c3:	gs ins DWORD PTR es:[rdi],dx
   1400086c5:	add    BYTE PTR [rax],al
   1400086c7:	add    BYTE PTR [rdx+0x65],dh
   1400086ca:	jae    0x14000873b
   1400086cc:	jne    0x140008740
   1400086ce:	movsxd esp,DWORD PTR [rbp+0x20]
   1400086d1:	fs gs (bad) 
   1400086d4:	fs ins BYTE PTR es:[rdi],dx
   1400086d6:	outs   dx,DWORD PTR ds:[rsi]
   1400086d7:	movsxd ebp,DWORD PTR [rbx+0x20]
   1400086da:	ja     0x14000874b
   1400086dc:	jne    0x14000874a
   1400086de:	and    BYTE PTR fs:[rdi+0x63],ch
   1400086e2:	movsxd esi,DWORD PTR [rbp+0x72]
   1400086e5:	add    BYTE PTR [rax],al
   1400086e7:	add    BYTE PTR [rdx+0x65],dh
   1400086ea:	jae    0x140008761
   1400086ec:	ins    BYTE PTR es:[rdi],dx
   1400086ed:	je     0x14000870f
   1400086ef:	outs   dx,DWORD PTR ds:[rsi]
   1400086f0:	jne    0x140008766
   1400086f2:	and    BYTE PTR [rdi+0x66],ch
   1400086f5:	and    BYTE PTR [rdx+0x61],dh
   1400086f8:	outs   dx,BYTE PTR ds:[rsi]
   1400086f9:	add    BYTE PTR gs:[eax],al
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    BYTE PTR [rbx+0x74],dh
   140008702:	(bad)  
   140008703:	je     0x14000876a
   140008705:	and    BYTE PTR [rsi+0x6f],ch
   140008708:	je     0x14000872a
   14000870a:	jb     0x140008771
   14000870c:	movsxd ebp,DWORD PTR [rdi+0x76]
   14000870f:	gs jb  0x140008773
   140008712:	(bad)  
   140008713:	ins    BYTE PTR es:[rdi],dx
   140008714:	add    BYTE PTR gs:[rax],al
   140008717:	add    BYTE PTR [rbx+0x74],dh
   14000871a:	jb     0x140008781
   14000871c:	(bad)  
   14000871d:	ins    DWORD PTR es:[rdi],dx
   14000871e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   140008722:	outs   dx,DWORD PTR gs:[rsi]
   140008724:	jne    0x14000879a
   140008726:	add    BYTE PTR [rax],al
   140008728:	je     0x14000878f
   14000872a:	js     0x1400087a0
   14000872c:	and    BYTE PTR [rsi+0x69],ah
   14000872f:	ins    BYTE PTR es:[rdi],dx
   140008730:	and    BYTE PTR gs:[rdx+0x75],ah
   140008734:	jae    0x1400087af
   140008736:	add    BYTE PTR [rax],al
   140008738:	je     0x1400087a3
   14000873a:	ins    DWORD PTR es:[rdi],dx
   14000873b:	gs and BYTE PTR fs:[rdi+0x75],ch
   140008740:	je     0x140008742
   140008742:	add    BYTE PTR [rax],al
   140008744:	add    BYTE PTR [rax],al
   140008746:	add    BYTE PTR [rax],al
   140008748:	je     0x1400087b9
   14000874a:	outs   dx,DWORD PTR ds:[rsi]
   14000874b:	and    BYTE PTR [rbp+0x61],ch
   14000874e:	outs   dx,BYTE PTR ds:[rsi]
   14000874f:	jns    0x140008771
   140008751:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140008758:	jo     0x1400087bf
   14000875a:	outs   dx,BYTE PTR ds:[rsi]
   14000875b:	and    BYTE PTR [rcx+0x6e],ch
   14000875e:	and    BYTE PTR [rbx+0x79],dh
   140008761:	jae    0x1400087d7
   140008763:	gs ins DWORD PTR es:[rdi],dx
   140008765:	add    BYTE PTR [rax],al
   140008767:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   14000876b:	and    BYTE PTR [rbp+0x61],ch
   14000876e:	outs   dx,BYTE PTR ds:[rsi]
   14000876f:	jns    0x140008791
   140008771:	ins    BYTE PTR es:[rdi],dx
   140008772:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   140008779:	outs   dx,DWORD PTR ds:[rsi]
   14000877a:	outs   dx,DWORD PTR ds:[rsi]
   14000877b:	and    BYTE PTR [rbp+0x61],ch
   14000877e:	outs   dx,BYTE PTR ds:[rsi]
   14000877f:	jns    0x1400087a1
   140008781:	jae    0x1400087fc
   140008783:	ins    DWORD PTR es:[rdi],dx
   140008784:	(bad)  
   140008785:	outs   dx,DWORD PTR ds:[rsi]
   140008786:	ins    BYTE PTR es:[rdi],dx
   140008787:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   14000878e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140008792:	gs ins BYTE PTR es:[rdi],dx
   140008794:	jae    0x140008796
   140008796:	add    BYTE PTR [rax],al
   140008798:	jbe    0x1400087fb
   14000879a:	ins    BYTE PTR es:[rdi],dx
   14000879b:	jne    0x140008802
   14000879d:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   1400087a1:	and    BYTE PTR [rcx+riz*2+0x72],ch
   1400087a5:	add    BYTE PTR gs:[edi+0x72],dh
   1400087aa:	outs   dx,DWORD PTR ds:[rsi]
   1400087ab:	outs   dx,BYTE PTR ds:[rsi]
   1400087ac:	and    BYTE PTR [eax+0x72],dh
   1400087b0:	outs   dx,DWORD PTR ds:[rsi]
   1400087b1:	je     0x140008822
   1400087b3:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400087b6:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400087ba:	add    BYTE PTR gs:[rax],al
   1400087bd:	add    BYTE PTR [rax],al
   1400087bf:	add    BYTE PTR [rax+0x45],ah
   1400087c2:	add    BYTE PTR [rax+0x1],al
   1400087c5:	add    BYTE PTR [rax],al
   1400087c7:	add    BYTE PTR [rax+0x4b],al
   1400087ca:	add    BYTE PTR [rax+0x1],al
   1400087cd:	add    BYTE PTR [rax],al
   1400087cf:	add    BYTE PTR [rax],al
   1400087d1:	rex.WXB add BYTE PTR [r8+0x1],al
   1400087d5:	add    BYTE PTR [rax],al
   1400087d7:	add    BYTE PTR [rax+0x14000cd],ah
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rax-0x32],al
   1400087e2:	add    BYTE PTR [rax+0x1],al
   1400087e5:	add    BYTE PTR [rax],al
   1400087e7:	add    BYTE PTR [rdi+0x65],ah
   1400087ea:	outs   dx,BYTE PTR ds:[rsi]
   1400087eb:	gs jb  0x140008857
   1400087ee:	movsxd eax,DWORD PTR [rax]
   1400087f0:	jne    0x140008860
   1400087f2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400087f6:	outs   dx,BYTE PTR ds:[rsi]
   1400087f7:	and    BYTE PTR [rbp+0x72],ah
   1400087fa:	jb     0x14000886b
   1400087fc:	jb     0x1400087fe
   1400087fe:	add    BYTE PTR [rax],al
   140008800:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   140008807:	ins    DWORD PTR es:[rdi],dx
	...
   140008810:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   140008817:	ins    DWORD PTR es:[rdi],dx
   140008818:	and    BYTE PTR [rbx+0x74],dh
   14000881b:	jb     0x140008882
   14000881d:	(bad)  
   14000881e:	ins    DWORD PTR es:[rdi],dx
   14000881f:	and    BYTE PTR [rbp+0x72],ah
   140008822:	jb     0x140008893
   140008824:	jb     0x140008826
   140008826:	add    BYTE PTR [rax],al
   140008828:	jae    0x1400088a3
   14000882a:	jae    0x1400088a0
   14000882c:	gs ins DWORD PTR es:[rdi],dx
   14000882e:	add    BYTE PTR [rax],al
   140008830:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140008837:	and    BYTE PTR [rbx+0x74],dh
   14000883a:	jb     0x1400088a5
   14000883c:	outs   dx,BYTE PTR ds:[rsi]
   14000883d:	and    BYTE PTR [eax+0x6f],dh
   140008841:	jae    0x1400088ac
   140008843:	je     0x1400088ae
   140008845:	outs   dx,DWORD PTR ds:[rsi]
   140008846:	outs   dx,BYTE PTR ds:[rsi]
   140008847:	add    BYTE PTR [rbx+0x74],dh
   14000884a:	jb     0x1400088b5
   14000884c:	outs   dx,BYTE PTR ds:[rsi]
   14000884d:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   140008852:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140008856:	add    BYTE PTR [eax+0x1400092],bh
   14000885d:	add    BYTE PTR [rax],al
   14000885f:	add    BYTE PTR [rax+0x11],ah
   140008862:	add    BYTE PTR [rax+0x1],al
   140008865:	add    BYTE PTR [rax],al
   140008867:	add    BYTE PTR [rax+0x12],al
   14000886a:	add    BYTE PTR [rax+0x1],al
   14000886d:	add    BYTE PTR [rax],al
   14000886f:	add    BYTE PTR [rax+0x12],dl
   140008872:	add    BYTE PTR [rax+0x1],al
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rax+0x1400011],dl
   14000887d:	add    BYTE PTR [rax],al
   14000887f:	add    BYTE PTR [rax],ah
   140008881:	adc    al,BYTE PTR [rax]
   140008883:	rex add DWORD PTR [rax],eax
   140008886:	add    BYTE PTR [rax],al
   140008888:	mov    al,0x11
   14000888a:	add    BYTE PTR [rax+0x1],al
   14000888d:	add    BYTE PTR [rax],al
   14000888f:	add    al,dl
   140008891:	xchg   ebx,eax
   140008892:	add    BYTE PTR [rax+0x1],al
   140008895:	add    BYTE PTR [rax],al
   140008897:	add    BYTE PTR [rax+0x11],ah
   14000889a:	add    BYTE PTR [rax+0x1],al
   14000889d:	add    BYTE PTR [rax],al
   14000889f:	add    BYTE PTR [rax],ah
   1400088a1:	adc    eax,DWORD PTR [rax]
   1400088a3:	rex add DWORD PTR [rax],eax
   1400088a6:	add    BYTE PTR [rax],al
   1400088a8:	xor    BYTE PTR [rbx],dl
   1400088aa:	add    BYTE PTR [rax+0x1],al
   1400088ad:	add    BYTE PTR [rax],al
   1400088af:	add    BYTE PTR [rax+0x1400013],ah
   1400088b5:	add    BYTE PTR [rax],al
   1400088b7:	add    BYTE PTR [rax],ah
   1400088b9:	adc    al,BYTE PTR [rax]
   1400088bb:	rex add DWORD PTR [rax],eax
   1400088be:	add    BYTE PTR [rax],al
   1400088c0:	mov    al,0x11
   1400088c2:	add    BYTE PTR [rax+0x1],al
   1400088c5:	add    BYTE PTR [rax],al
   1400088c7:	add    BYTE PTR [rax-0x6d],bl
   1400088ca:	add    BYTE PTR [rax+0x1],al
   1400088cd:	add    BYTE PTR [rax],al
   1400088cf:	add    BYTE PTR [rax+0x11],ah
   1400088d2:	add    BYTE PTR [rax+0x1],al
   1400088d5:	add    BYTE PTR [rax],al
   1400088d7:	add    al,al
   1400088d9:	adc    al,BYTE PTR [rax]
   1400088db:	rex add DWORD PTR [rax],eax
   1400088de:	add    BYTE PTR [rax],al
   1400088e0:	rcl    BYTE PTR [rdx],1
   1400088e2:	add    BYTE PTR [rax+0x1],al
   1400088e5:	add    BYTE PTR [rax],al
   1400088e7:	add    BYTE PTR [rax+0x1400011],dl
   1400088ed:	add    BYTE PTR [rax],al
   1400088ef:	add    BYTE PTR [rax],ah
   1400088f1:	adc    al,BYTE PTR [rax]
   1400088f3:	rex add DWORD PTR [rax],eax
   1400088f6:	add    BYTE PTR [rax],al
   1400088f8:	mov    al,0x11
   1400088fa:	add    BYTE PTR [rax+0x1],al
   1400088fd:	add    BYTE PTR [rax],al
   1400088ff:	add    BYTE PTR [rax],dh
   140008901:	xchg   ebx,eax
   140008902:	add    BYTE PTR [rax+0x1],al
   140008905:	add    BYTE PTR [rax],al
   140008907:	add    BYTE PTR [rax+0x11],ah
   14000890a:	add    BYTE PTR [rax+0x1],al
   14000890d:	add    BYTE PTR [rax],al
   14000890f:	add    al,dh
   140008911:	rex.WX add BYTE PTR [rax+0x1],al
   140008915:	add    BYTE PTR [rax],al
   140008917:	add    al,dh
   140008919:	rex.WX add BYTE PTR [rax+0x1],al
   14000891d:	add    BYTE PTR [rax],al
   14000891f:	add    BYTE PTR [rax+0x1400011],dl
   140008925:	add    BYTE PTR [rax],al
   140008927:	add    BYTE PTR [rax],ah
   140008929:	adc    al,BYTE PTR [rax]
   14000892b:	rex add DWORD PTR [rax],eax
   14000892e:	add    BYTE PTR [rax],al
   140008930:	mov    al,0x11
   140008932:	add    BYTE PTR [rax+0x1],al
   140008935:	add    BYTE PTR [rax],al
   140008937:	add    BYTE PTR [rax],dl
   140008939:	movabs ds:0x3230000000014000,al
   140008942:	add    BYTE PTR [rax+0x1],al
   140008945:	add    BYTE PTR [rax],al
   140008947:	add    BYTE PTR [rax],ah
   140008949:	xor    DWORD PTR [rax],eax
   14000894b:	rex add DWORD PTR [rax],eax
   14000894e:	add    BYTE PTR [rax],al
   140008950:	xor    BYTE PTR [rcx],0x0
   140008953:	rex add DWORD PTR [rax],eax
   140008956:	add    BYTE PTR [rax],al
   140008958:	jo     0x14000898a
   14000895a:	add    BYTE PTR [rax+0x1],al
   14000895d:	add    BYTE PTR [rax],al
   14000895f:	add    al,dl
   140008961:	xor    al,BYTE PTR [rax]
   140008963:	rex add DWORD PTR [rax],eax
   140008966:	add    BYTE PTR [rax],al
   140008968:	shl    BYTE PTR [rip+0x14000],0x0        # 0x14001c96f
   14000896f:	add    al,ch
   140008971:	movabs eax,ds:0x2a60000000014000
   14000897a:	add    BYTE PTR [rax+0x1],al
   14000897d:	add    BYTE PTR [rax],al
   14000897f:	add    al,dl
   140008981:	sub    BYTE PTR [rax],al
   140008983:	rex add DWORD PTR [rax],eax
   140008986:	add    BYTE PTR [rax],al
   140008988:	loopne 0x1400089b2
   14000898a:	add    BYTE PTR [rax+0x1],al
   14000898d:	add    BYTE PTR [rax],al
   14000898f:	add    BYTE PTR [rax],dh
   140008991:	sub    DWORD PTR [rax],eax
   140008993:	rex add DWORD PTR [rax],eax
   140008996:	add    BYTE PTR [rax],al
   140008998:	push   rax
   140008999:	sbb    BYTE PTR [rax],al
   14000899b:	rex add DWORD PTR [rax],eax
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	(bad)  
   1400089a1:	sbb    BYTE PTR [rax],al
   1400089a3:	rex add DWORD PTR [rax],eax
   1400089a6:	add    BYTE PTR [rax],al
   1400089a8:	jo     0x1400089c2
   1400089aa:	add    BYTE PTR [rax+0x1],al
   1400089ad:	add    BYTE PTR [rax],al
   1400089af:	add    BYTE PTR [rax+0x1400018],al
   1400089b5:	add    BYTE PTR [rax],al
   1400089b7:	add    BYTE PTR [rax+0x27],dh
   1400089ba:	add    BYTE PTR [rax+0x1],al
   1400089bd:	add    BYTE PTR [rax],al
   1400089bf:	add    BYTE PTR [rax+0x1400028],dh
   1400089c5:	add    BYTE PTR [rax],al
   1400089c7:	add    BYTE PTR [rax+0x26],dl
   1400089ca:	add    BYTE PTR [rax+0x1],al
   1400089cd:	add    BYTE PTR [rax],al
   1400089cf:	add    BYTE PTR [rax],dl
   1400089d1:	(bad)  
   1400089d2:	add    BYTE PTR [rax+0x1],al
   1400089d5:	add    BYTE PTR [rax],al
   1400089d7:	add    BYTE PTR [rax-0x5f],cl
   1400089da:	add    BYTE PTR [rax+0x1],al
   1400089dd:	add    BYTE PTR [rax],al
   1400089df:	add    BYTE PTR [rax],al
   1400089e1:	sub    eax,DWORD PTR [rax]
   1400089e3:	rex add DWORD PTR [rax],eax
   1400089e6:	add    BYTE PTR [rax],al
   1400089e8:	push   rax
   1400089e9:	xor    eax,DWORD PTR [rax]
   1400089eb:	rex add DWORD PTR [rax],eax
   1400089ee:	add    BYTE PTR [rax],al
   1400089f0:	jo     0x140008993
   1400089f2:	add    BYTE PTR [rax+0x1],al
   1400089f5:	add    BYTE PTR [rax],al
   1400089f7:	add    BYTE PTR [rax],al
   1400089f9:	sub    eax,DWORD PTR [rax]
   1400089fb:	rex add DWORD PTR [rax],eax
   1400089fe:	add    BYTE PTR [rax],al
   140008a00:	lock rex.WX add BYTE PTR [rax+0x1],al
   140008a05:	add    BYTE PTR [rax],al
   140008a07:	add    BYTE PTR [rax+0x14000a1],bl
   140008a0d:	add    BYTE PTR [rax],al
   140008a0f:	add    BYTE PTR [rax+0x140002a],ah
   140008a15:	add    BYTE PTR [rax],al
   140008a17:	add    al,al
   140008a19:	sub    DWORD PTR [rax],eax
   140008a1b:	rex add DWORD PTR [rax],eax
   140008a1e:	add    BYTE PTR [rax],al
   140008a20:	loopne 0x140008a4b
   140008a22:	add    BYTE PTR [rax+0x1],al
   140008a25:	add    BYTE PTR [rax],al
   140008a27:	add    BYTE PTR [rax+0x18],al
   140008a2a:	add    BYTE PTR [rax+0x1],al
   140008a2d:	add    BYTE PTR [rax],al
   140008a2f:	add    BYTE PTR [rax+0x18],dl
   140008a32:	add    BYTE PTR [rax+0x1],al
   140008a35:	add    BYTE PTR [rax],al
   140008a37:	add    BYTE PTR [rax+0x18],ah
   140008a3a:	add    BYTE PTR [rax+0x1],al
   140008a3d:	add    BYTE PTR [rax],al
   140008a3f:	add    BYTE PTR [rax+0x18],dh
   140008a42:	add    BYTE PTR [rax+0x1],al
   140008a45:	add    BYTE PTR [rax],al
   140008a47:	add    BYTE PTR [rax+0x1400018],al
   140008a4d:	add    BYTE PTR [rax],al
   140008a4f:	add    BYTE PTR [rax],al
   140008a51:	sub    al,BYTE PTR [rax]
   140008a53:	rex add DWORD PTR [rax],eax
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	add    BYTE PTR [rdx],ch
   140008a5a:	add    BYTE PTR [rax+0x1],al
   140008a5d:	add    BYTE PTR [rax],al
   140008a5f:	add    BYTE PTR [rax],al
   140008a61:	sub    al,BYTE PTR [rax]
   140008a63:	rex add DWORD PTR [rax],eax
   140008a66:	add    BYTE PTR [rax],al
   140008a68:	add    BYTE PTR [rdx],ch
   140008a6a:	add    BYTE PTR [rax+0x1],al
   140008a6d:	add    BYTE PTR [rax],al
   140008a6f:	add    al,al
   140008a71:	movabs eax,ds:0x2a60000000014000
   140008a7a:	add    BYTE PTR [rax+0x1],al
   140008a7d:	add    BYTE PTR [rax],al
   140008a7f:	add    al,al
   140008a81:	sub    DWORD PTR [rax],eax
   140008a83:	rex add DWORD PTR [rax],eax
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	loopne 0x140008ab3
   140008a8a:	add    BYTE PTR [rax+0x1],al
   140008a8d:	add    BYTE PTR [rax],al
   140008a8f:	add    BYTE PTR [rax],dh
   140008a91:	sub    DWORD PTR [rax],eax
   140008a93:	rex add DWORD PTR [rax],eax
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	push   rax
   140008a99:	sbb    BYTE PTR [rax],al
   140008a9b:	rex add DWORD PTR [rax],eax
   140008a9e:	add    BYTE PTR [rax],al
   140008aa0:	(bad)  
   140008aa1:	sbb    BYTE PTR [rax],al
   140008aa3:	rex add DWORD PTR [rax],eax
   140008aa6:	add    BYTE PTR [rax],al
   140008aa8:	jo     0x140008ac2
   140008aaa:	add    BYTE PTR [rax+0x1],al
   140008aad:	add    BYTE PTR [rax],al
   140008aaf:	add    BYTE PTR [rax+0x1400018],al
   140008ab5:	add    BYTE PTR [rax],al
   140008ab7:	add    BYTE PTR [rax],al
   140008ab9:	sub    al,BYTE PTR [rax]
   140008abb:	rex add DWORD PTR [rax],eax
   140008abe:	add    BYTE PTR [rax],al
   140008ac0:	add    BYTE PTR [rdx],ch
   140008ac2:	add    BYTE PTR [rax+0x1],al
   140008ac5:	add    BYTE PTR [rax],al
   140008ac7:	add    BYTE PTR [rax],al
   140008ac9:	sub    al,BYTE PTR [rax]
   140008acb:	rex add DWORD PTR [rax],eax
   140008ace:	add    BYTE PTR [rax],al
   140008ad0:	add    BYTE PTR [rdx],ch
   140008ad2:	add    BYTE PTR [rax+0x1],al
   140008ad5:	add    BYTE PTR [rax],al
   140008ad7:	add    BYTE PTR [rax],bh
   140008ad9:	movabs ds:0x3600000000014000,al
   140008ae2:	add    BYTE PTR [rax+0x1],al
   140008ae5:	add    BYTE PTR [rax],al
   140008ae7:	add    al,dh
   140008ae9:	xor    eax,0x14000
   140008aee:	add    BYTE PTR [rax],al
   140008af0:	adc    BYTE PTR [rsi],dh
   140008af2:	add    BYTE PTR [rax+0x1],al
   140008af5:	add    BYTE PTR [rax],al
   140008af7:	add    al,dh
   140008af9:	rex.WX add BYTE PTR [rax+0x1],al
   140008afd:	add    BYTE PTR [rax],al
   140008aff:	add    BYTE PTR [rax-0x5e],ah
   140008b02:	add    BYTE PTR [rax+0x1],al
   140008b05:	add    BYTE PTR [rax],al
   140008b07:	add    al,dl
   140008b09:	and    al,0x0
   140008b0b:	rex add DWORD PTR [rax],eax
   140008b0e:	add    BYTE PTR [rax],al
   140008b10:	mov    al,0x25
   140008b12:	add    BYTE PTR [rax+0x1],al
   140008b15:	add    BYTE PTR [rax],al
   140008b17:	add    al,dl
   140008b19:	and    eax,0x14000
   140008b1e:	add    BYTE PTR [rax],al
   140008b20:	lock rex.WX add BYTE PTR [rax+0x1],al
   140008b25:	add    BYTE PTR [rax],al
   140008b27:	add    BYTE PTR [rax],dh
   140008b29:	sub    al,BYTE PTR [rax]
   140008b2b:	rex add DWORD PTR [rax],eax
   140008b2e:	add    BYTE PTR [rax],al
   140008b30:	xor    BYTE PTR [rbx],ch
   140008b32:	add    BYTE PTR [rax+0x1],al
   140008b35:	add    BYTE PTR [rax],al
   140008b37:	add    al,ah
   140008b39:	mov    WORD PTR [rax],es
   140008b3b:	rex add DWORD PTR [rax],eax
	...
   140008b46:	add    BYTE PTR [rax],al
   140008b48:	xor    bl,dl
   140008b4a:	add    BYTE PTR [rax+0x1],al
	...
   140008b55:	add    BYTE PTR [rax],al
   140008b57:	add    BYTE PTR [rax+0x14000a2],cl
   140008b5d:	add    BYTE PTR [rax],al
   140008b5f:	add    BYTE PTR [rax],al
   140008b61:	add    BYTE PTR ss:[rax+0x1],al
   140008b65:	add    BYTE PTR [rax],al
   140008b67:	add    al,dh
   140008b69:	xor    eax,0x14000
   140008b6e:	add    BYTE PTR [rax],al
   140008b70:	adc    BYTE PTR [rsi],dh
   140008b72:	add    BYTE PTR [rax+0x1],al
   140008b75:	add    BYTE PTR [rax],al
   140008b77:	add    al,ah
   140008b79:	(bad)  
   140008b7a:	add    BYTE PTR [rax+0x1],al
   140008b7d:	add    BYTE PTR [rax],al
   140008b7f:	add    BYTE PTR [rax+0x14000a2],dh
   140008b85:	add    BYTE PTR [rax],al
   140008b87:	add    al,dl
   140008b89:	and    al,0x0
   140008b8b:	rex add DWORD PTR [rax],eax
   140008b8e:	add    BYTE PTR [rax],al
   140008b90:	mov    al,0x25
   140008b92:	add    BYTE PTR [rax+0x1],al
   140008b95:	add    BYTE PTR [rax],al
   140008b97:	add    al,dl
   140008b99:	and    eax,0x14000
   140008b9e:	add    BYTE PTR [rax],al
   140008ba0:	loopne 0x140008bc0
   140008ba2:	add    BYTE PTR [rax+0x1],al
   140008ba5:	add    BYTE PTR [rax],al
   140008ba7:	add    BYTE PTR [rax+0x140001e],ah
   140008bad:	add    BYTE PTR [rax],al
   140008baf:	add    BYTE PTR [rax+0x14000a3],al
   140008bb5:	add    BYTE PTR [rax],al
   140008bb7:	add    BYTE PTR [rax+0x1400036],al
   140008bbd:	add    BYTE PTR [rax],al
   140008bbf:	add    BYTE PTR [rax+0x4b],al
   140008bc2:	add    BYTE PTR [rax+0x1],al
   140008bc5:	add    BYTE PTR [rax],al
   140008bc7:	add    BYTE PTR [rdi],ch
   140008bc9:	add    BYTE PTR [rdx+0x0],dl
   140008bcc:	add    BYTE PTR gs:[rdx+0x0],ah
   140008bd0:	outs   dx,DWORD PTR ds:[rsi]
   140008bd1:	add    BYTE PTR [rdi+0x0],ch
   140008bd4:	je     0x140008bd6
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	(bad)  
   140008bd9:	add    BYTE PTR [rsi+0x0],al
   140008bdc:	jne    0x140008bde
   140008bde:	ins    BYTE PTR es:[rdi],dx
   140008bdf:	add    BYTE PTR [rax+rax*1+0x53],ch
   140008be3:	add    BYTE PTR [rbx+0x0],ah
   140008be6:	(bad)  
   140008be7:	add    BYTE PTR [rsi+0x0],ch
   140008bea:	add    BYTE PTR [rax],al
   140008bec:	add    BYTE PTR [rax],al
   140008bee:	add    BYTE PTR [rax],al
   140008bf0:	(bad)  
   140008bf1:	add    BYTE PTR [rbx+0x0],al
   140008bf4:	(bad)  
   140008bf5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140008bf9:	add    BYTE PTR [rcx+0x0],ch
   140008bfc:	jae    0x140008bfe
   140008bfe:	je     0x140008c00
   140008c00:	outs   dx,DWORD PTR ds:[rsi]
   140008c01:	add    BYTE PTR [rbx+0x0],dl
   140008c04:	movsxd eax,DWORD PTR [rax]
   140008c06:	(bad)  
   140008c07:	add    BYTE PTR [rsi+0x0],ch
   140008c0a:	add    BYTE PTR [rax],al
   140008c0c:	add    BYTE PTR [rax],al
   140008c0e:	add    BYTE PTR [rax],al
   140008c10:	and    eax,0x72005000
   140008c15:	add    BYTE PTR [rdi+0x0],ch
   140008c18:	add    BYTE PTR [edx+0x0],dh
   140008c1c:	(bad)  
   140008c1d:	add    BYTE PTR [rbp+0x0],ch
   140008c20:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140008c24:	ins    BYTE PTR es:[rdi],dx
   140008c25:	add    BYTE PTR [rbp+0x0],ah
   140008c28:	jae    0x140008c2a
   140008c2a:	and    eax,0x57005c00
   140008c2f:	add    BYTE PTR [rcx+0x0],ch
   140008c32:	outs   dx,BYTE PTR ds:[rsi]
   140008c33:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140008c37:	add    BYTE PTR [rdi+0x0],dh
   140008c3a:	jae    0x140008c3c
   140008c3c:	and    BYTE PTR [rax],al
   140008c3e:	add    BYTE PTR [rbp+0x0],r12b
   140008c42:	data16 add BYTE PTR [rbp+0x0],ah
   140008c46:	outs   dx,BYTE PTR ds:[rsi]
   140008c47:	add    BYTE PTR [rax+rax*1+0x65],ah
   140008c4b:	add    BYTE PTR [rdx+0x0],dh
   140008c4e:	pop    rsp
   140008c4f:	add    BYTE PTR [rbp+0x0],cl
   140008c52:	push   rbx
   140008c53:	add    BYTE PTR [rcx+0x0],al
   140008c56:	push   rbx
   140008c57:	add    BYTE PTR [rbx+0x0],al
   140008c5a:	jne    0x140008c5c
   140008c5c:	imul   eax,DWORD PTR [rax],0x65002e
   140008c62:	js     0x140008c64
   140008c64:	add    BYTE PTR gs:[rax],al
   140008c67:	add    BYTE PTR [rax+0x0],dh
   140008c6a:	add    BYTE PTR [r11+0x0],spl
   140008c6e:	je     0x140008c70
   140008c70:	imul   eax,DWORD PTR [rax],0x610076
   140008c76:	je     0x140008c78
   140008c78:	imul   eax,DWORD PTR [rax],0x6c0062
   140008c7e:	add    BYTE PTR gs:[rbx+0x0],al
   140008c82:	ins    BYTE PTR es:[rdi],dx
   140008c83:	add    BYTE PTR [rcx+0x0],ah
   140008c86:	jae    0x140008c88
   140008c88:	jae    0x140008c8a
   140008c8a:	rex.WB add BYTE PTR [r8+rax*1+0x0],spl
   140008c8f:	add    BYTE PTR [rip+0x0],dh        # 0x140008c95
   140008c95:	add    BYTE PTR [rax],al
   140008c97:	add    al,al
   140008c99:	add    BYTE PTR [rax],al
   140008c9b:	add    BYTE PTR [rax],al
   140008c9d:	add    BYTE PTR [rax],al
   140008c9f:	rex.RX (bad) 
   140008ca1:	sbb    bl,ah
   140008ca3:	push   rbx
   140008ca4:	add    BYTE PTR [rsi-0x7f],ah
   140008ca7:	rex.WX xchg rbx,rax
   140008ca9:	xchg   ebp,eax
   140008caa:	jne    0x140008c7b
   140008cac:	(bad)  
   140008cad:	je     0x140008d1e
   140008caf:	xchg   esp,eax
   140008cb0:	test   DWORD PTR [rbp-0xd],edx
   140008cb3:	xchg   esp,eax
   140008cb4:	xlat   BYTE PTR ds:[rbx]
   140008cb5:	(bad)
   140008cb8:	mov    edx,0xae45a771
   140008cbd:	jbe    0x140008ca1
   140008cbf:	loop   0x140008cc2
   140008cc1:	add    BYTE PTR [rax],al
   140008cc3:	add    BYTE PTR [rax],al
   140008cc5:	add    BYTE PTR [rax],al
   140008cc7:	add    al,al
   140008cc9:	add    BYTE PTR [rax],al
   140008ccb:	add    BYTE PTR [rax],al
   140008ccd:	add    BYTE PTR [rax],al
   140008ccf:	rex.RX add BYTE PTR [rax],r8b
   140008cd2:	add    BYTE PTR [rax],al
   140008cd4:	add    BYTE PTR [rax],al
   140008cd6:	add    BYTE PTR [rax],al
   140008cd8:	rol    BYTE PTR [rax],0x0
   140008cdb:	add    BYTE PTR [rax],al
   140008cdd:	add    BYTE PTR [rax],al
   140008cdf:	rex.RX adc DWORD PTR [rbp-0x59],r9d
   140008ce3:	std    
   140008ce4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008ce5:	(bad)  
   140008ce6:	ja     0x140008d2d
   140008ce8:	lahf   
   140008ce9:	jae    0x140008cc2
   140008ceb:	retf   0x8685
   140008cee:	loope  0x140008cfd
   140008cf0:	ins    BYTE PTR es:[rdi],dx
   140008cf1:	cwde   
   140008cf2:	pop    rdx
   140008cf3:	js     0x140008c83
   140008cf5:	(bad)  
   140008cf6:	leave  
   140008cf7:	rex.WX mov bl,0x70
   140008cfa:	outs   dx,DWORD PTR ds:[rsi]
   140008cfb:	lahf   
   140008cfc:	adc    eax,0xba7cb4
	...
   140008d0d:	add    BYTE PTR [rax],al
   140008d0f:	add    BYTE PTR [rdx+0x61],ah
   140008d12:	and    BYTE PTR fs:[rcx+0x6c],ah
   140008d16:	ins    BYTE PTR es:[rdi],dx
   140008d17:	outs   dx,DWORD PTR ds:[rsi]
   140008d18:	movsxd esp,DWORD PTR [rcx+0x74]
   140008d1b:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0000
   140008d22:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140008d26:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   140008d2b:	add    BYTE PTR [rax],al
   140008d2d:	add    BYTE PTR [rax],al
   140008d2f:	add    BYTE PTR [rsi+0x0],cl
   140008d32:	push   rbp
   140008d33:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   140008d3f:	add    BYTE PTR [rdi+0x0],dl
   140008d42:	imul   eax,DWORD PTR [rax],0x64006e
   140008d48:	outs   dx,DWORD PTR ds:[rsi]
   140008d49:	add    BYTE PTR [rdi+0x0],dh
   140008d4c:	jae    0x140008d4e
   140008d4e:	add    BYTE PTR cs:[rax+rax*1+0x65],al
   140008d53:	add    BYTE PTR [rsi+0x0],ah
   140008d56:	add    BYTE PTR gs:[rsi+0x0],ch
   140008d5a:	add    BYTE PTR fs:[rbp+0x0],ah
   140008d5e:	jb     0x140008d60
	...
   140008d70:	cmp    al,0x0
   140008d72:	(bad)  
   140008d73:	add    BYTE PTR [rbx+0x0],ah
   140008d76:	je     0x140008d78
   140008d78:	imul   eax,DWORD PTR [rax],0x6e006f
   140008d7e:	jae    0x140008d80
   140008d80:	add    BYTE PTR ds:[rax+rax*1],bh
   140008d84:	(bad)  
   140008d85:	add    BYTE PTR [rbx+0x0],ah
   140008d88:	je     0x140008d8a
   140008d8a:	imul   eax,DWORD PTR [rax],0x6e006f
   140008d90:	and    BYTE PTR [rax],al
   140008d92:	movsxd eax,DWORD PTR [rax]
   140008d94:	outs   dx,DWORD PTR ds:[rsi]
   140008d95:	add    BYTE PTR [rsi+0x0],ch
   140008d98:	je     0x140008d9a
   140008d9a:	add    BYTE PTR gs:[rsi+0x0],ch
   140008d9e:	je     0x140008da0
   140008da0:	cmp    eax,0x25002200
   140008da5:	add    BYTE PTR [rbx+0x0],dh
   140008da8:	and    al,BYTE PTR [rax]
   140008daa:	and    BYTE PTR [rax],al
   140008dac:	(bad)  
   140008dad:	add    BYTE PTR [rdx+0x0],dh
   140008db0:	add    BYTE PTR [ebp+0x0],dh
   140008db4:	ins    DWORD PTR es:[rdi],dx
   140008db5:	add    BYTE PTR [rbp+0x0],ah
   140008db8:	outs   dx,BYTE PTR ds:[rsi]
   140008db9:	add    BYTE PTR [rax+rax*1+0x73],dh
   140008dbd:	add    BYTE PTR [rip+0x25002200],bh        # 0x16500afc3
   140008dc3:	add    BYTE PTR [rbx+0x0],dh
   140008dc6:	and    al,BYTE PTR [rax]
   140008dc8:	and    BYTE PTR [rax],al
   140008dca:	(bad)  
   140008dcb:	add    BYTE PTR [rbx+0x0],ah
   140008dce:	je     0x140008dd0
   140008dd0:	imul   eax,DWORD PTR [rax],0x610076
   140008dd6:	je     0x140008dd8
   140008dd8:	imul   eax,DWORD PTR [rax],0x6e006f
   140008dde:	push   rsp
   140008ddf:	add    BYTE PTR [rcx+0x0],bh
   140008de2:	jo     0x140008de4
   140008de4:	add    BYTE PTR gs:[rip+0x42002200],bh        # 0x18200afeb
   140008deb:	add    BYTE PTR [rcx+0x0],ah
   140008dee:	movsxd eax,DWORD PTR [rax]
   140008df0:	imul   eax,DWORD PTR [rax],0x67
   140008df3:	add    BYTE PTR [rdx+0x0],dh
   140008df6:	outs   dx,DWORD PTR ds:[rsi]
   140008df7:	add    BYTE PTR [rbp+0x0],dh
   140008dfa:	outs   dx,BYTE PTR ds:[rsi]
   140008dfb:	add    BYTE PTR [rax+rax*1+0x22],ah
   140008dff:	add    BYTE PTR [rdi],ch
   140008e01:	add    BYTE PTR [rsi],bh
   140008e03:	add    BYTE PTR [rax+rax*1],bh
   140008e06:	(bad)  
   140008e07:	add    BYTE PTR [rcx+0x0],ah
   140008e0a:	movsxd eax,DWORD PTR [rax]
   140008e0c:	je     0x140008e0e
   140008e0e:	imul   eax,DWORD PTR [rax],0x6e006f
   140008e14:	jae    0x140008e16
   140008e16:	add    BYTE PTR ds:[rax],al
   140008e19:	add    BYTE PTR [rax],al
   140008e1b:	add    BYTE PTR [rax],al
   140008e1d:	add    BYTE PTR [rax],al
   140008e1f:	add    BYTE PTR [rax+rax*1],bh
   140008e22:	(bad)  
   140008e23:	add    BYTE PTR [rbx+0x0],ah
   140008e26:	je     0x140008e28
   140008e28:	imul   eax,DWORD PTR [rax],0x6e006f
   140008e2e:	jae    0x140008e30
   140008e30:	add    BYTE PTR ds:[rax+rax*1],bh
   140008e34:	(bad)  
   140008e35:	add    BYTE PTR [rbx+0x0],ah
   140008e38:	je     0x140008e3a
   140008e3a:	imul   eax,DWORD PTR [rax],0x6e006f
   140008e40:	and    BYTE PTR [rax],al
   140008e42:	movsxd eax,DWORD PTR [rax]
   140008e44:	outs   dx,DWORD PTR ds:[rsi]
   140008e45:	add    BYTE PTR [rsi+0x0],ch
   140008e48:	je     0x140008e4a
   140008e4a:	add    BYTE PTR gs:[rsi+0x0],ch
   140008e4e:	je     0x140008e50
   140008e50:	cmp    eax,0x25002200
   140008e55:	add    BYTE PTR [rbx+0x0],dh
   140008e58:	and    al,BYTE PTR [rax]
   140008e5a:	and    BYTE PTR [rax],al
   140008e5c:	(bad)  
   140008e5d:	add    BYTE PTR [rdx+0x0],dh
   140008e60:	add    BYTE PTR [ebp+0x0],dh
   140008e64:	ins    DWORD PTR es:[rdi],dx
   140008e65:	add    BYTE PTR [rbp+0x0],ah
   140008e68:	outs   dx,BYTE PTR ds:[rsi]
   140008e69:	add    BYTE PTR [rax+rax*1+0x73],dh
   140008e6d:	add    BYTE PTR [rip+0x25002200],bh        # 0x16500b073
   140008e73:	add    BYTE PTR [rax+rax*1+0x22],ah
   140008e77:	add    BYTE PTR [rax],ah
   140008e79:	add    BYTE PTR [rcx+0x0],ah
   140008e7c:	movsxd eax,DWORD PTR [rax]
   140008e7e:	je     0x140008e80
   140008e80:	imul   eax,DWORD PTR [rax],0x610076
   140008e86:	je     0x140008e88
   140008e88:	imul   eax,DWORD PTR [rax],0x6e006f
   140008e8e:	push   rsp
   140008e8f:	add    BYTE PTR [rcx+0x0],bh
   140008e92:	jo     0x140008e94
   140008e94:	add    BYTE PTR gs:[rip+0x42002200],bh        # 0x18200b09b
   140008e9b:	add    BYTE PTR [rcx+0x0],ah
   140008e9e:	movsxd eax,DWORD PTR [rax]
   140008ea0:	imul   eax,DWORD PTR [rax],0x67
   140008ea3:	add    BYTE PTR [rdx+0x0],dh
   140008ea6:	outs   dx,DWORD PTR ds:[rsi]
   140008ea7:	add    BYTE PTR [rbp+0x0],dh
   140008eaa:	outs   dx,BYTE PTR ds:[rsi]
   140008eab:	add    BYTE PTR [rax+rax*1+0x22],ah
   140008eaf:	add    BYTE PTR [rdi],ch
   140008eb1:	add    BYTE PTR [rsi],bh
   140008eb3:	add    BYTE PTR [rax+rax*1],bh
   140008eb6:	(bad)  
   140008eb7:	add    BYTE PTR [rcx+0x0],ah
   140008eba:	movsxd eax,DWORD PTR [rax]
   140008ebc:	je     0x140008ebe
   140008ebe:	imul   eax,DWORD PTR [rax],0x6e006f
   140008ec4:	jae    0x140008ec6
   140008ec6:	add    BYTE PTR ds:[rax],al
   140008ec9:	add    BYTE PTR [rax],al
   140008ecb:	add    BYTE PTR [rax],al
   140008ecd:	add    BYTE PTR [rax],al
   140008ecf:	add    BYTE PTR [rax+rax*1+0x75],ah
   140008ed3:	add    BYTE PTR [rdx+0x0],dh
   140008ed6:	(bad)  
   140008ed7:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008edb:	add    BYTE PTR [rdi+0x0],ch
   140008ede:	outs   dx,BYTE PTR ds:[rsi]
   140008edf:	add    BYTE PTR [rip+0x6c002200],bh        # 0x1ac00b0e5
   140008ee5:	add    BYTE PTR [rdi+0x0],ch
   140008ee8:	outs   dx,BYTE PTR ds:[rsi]
   140008ee9:	add    BYTE PTR [rdi+0x0],ah
   140008eec:	and    al,BYTE PTR [rax]
   140008eee:	add    BYTE PTR [rax],al
   140008ef0:	cmp    al,0x0
   140008ef2:	je     0x140008ef4
   140008ef4:	outs   dx,DWORD PTR ds:[rsi]
   140008ef5:	add    BYTE PTR [rcx+0x0],ah
   140008ef8:	jae    0x140008efa
   140008efa:	je     0x140008efc
   140008efc:	and    BYTE PTR [rax],al
   140008efe:	and    eax,0x20007300
   140008f03:	add    BYTE PTR [rax+rax*1+0x61],ch
   140008f07:	add    BYTE PTR [rbp+0x0],dh
   140008f0a:	outs   dx,BYTE PTR ds:[rsi]
   140008f0b:	add    BYTE PTR [rbx+0x0],ah
   140008f0e:	push   0x22003d00
   140008f13:	add    BYTE PTR [rip+0x2c007300],ah        # 0x16c010219
   140008f19:	add    BYTE PTR [rip+0x22007300],ah        # 0x16201021f
   140008f1f:	add    BYTE PTR [rax],ah
   140008f21:	add    BYTE PTR [rcx+0x0],ah
   140008f24:	movsxd eax,DWORD PTR [rax]
   140008f26:	je     0x140008f28
   140008f28:	imul   eax,DWORD PTR [rax],0x610076
   140008f2e:	je     0x140008f30
   140008f30:	imul   eax,DWORD PTR [rax],0x6e006f
   140008f36:	push   rsp
   140008f37:	add    BYTE PTR [rcx+0x0],bh
   140008f3a:	jo     0x140008f3c
   140008f3c:	add    BYTE PTR gs:[rip+0x42002200],bh        # 0x18200b143
   140008f43:	add    BYTE PTR [rcx+0x0],ah
   140008f46:	movsxd eax,DWORD PTR [rax]
   140008f48:	imul   eax,DWORD PTR [rax],0x67
   140008f4b:	add    BYTE PTR [rdx+0x0],dh
   140008f4e:	outs   dx,DWORD PTR ds:[rsi]
   140008f4f:	add    BYTE PTR [rbp+0x0],dh
   140008f52:	outs   dx,BYTE PTR ds:[rsi]
   140008f53:	add    BYTE PTR [rax+rax*1+0x22],ah
   140008f57:	add    BYTE PTR [rsi],bh
   140008f59:	add    BYTE PTR [rax+rax*1],bh
   140008f5c:	jbe    0x140008f5e
   140008f5e:	imul   eax,DWORD PTR [rax],0x750073
   140008f64:	(bad)  
   140008f65:	add    BYTE PTR [rax+rax*1+0x3e],ch
   140008f69:	add    BYTE PTR [rax+rax*1],bh
   140008f6c:	(bad)  
   140008f6d:	add    BYTE PTR [rcx+0x0],ch
   140008f70:	outs   dx,BYTE PTR ds:[rsi]
   140008f71:	add    BYTE PTR [rax+rax*1+0x69],ah
   140008f75:	add    BYTE PTR [rsi+0x0],ch
   140008f78:	add    BYTE PTR [eax],ah
   140008f7b:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008f7f:	add    BYTE PTR [rbp+0x0],ch
   140008f82:	jo     0x140008f84
   140008f84:	ins    BYTE PTR es:[rdi],dx
   140008f85:	add    BYTE PTR [rcx+0x0],ah
   140008f88:	je     0x140008f8a
   140008f8a:	add    BYTE PTR gs:[rip+0x54002200],bh        # 0x19400b191
   140008f91:	add    BYTE PTR [rdi+0x0],ch
   140008f94:	(bad)  
   140008f95:	add    BYTE PTR [rbx+0x0],dh
   140008f98:	je     0x140008f9a
   140008f9a:	rex.RXB add BYTE PTR [r13+0x0],r12b
   140008f9e:	outs   dx,BYTE PTR ds:[rsi]
   140008f9f:	add    BYTE PTR [rbp+0x0],ah
   140008fa2:	jb     0x140008fa4
   140008fa4:	imul   eax,DWORD PTR [rax],0x220063
   140008faa:	add    BYTE PTR ds:[rax+rax*1],bh
   140008fae:	je     0x140008fb0
   140008fb0:	add    BYTE PTR gs:[rax+0x0],bh
   140008fb4:	je     0x140008fb6
   140008fb6:	and    BYTE PTR [rax],al
   140008fb8:	imul   eax,DWORD PTR [rax],0x3d0064
   140008fbe:	and    al,BYTE PTR [rax]
   140008fc0:	xor    DWORD PTR [rax],eax
   140008fc2:	and    al,BYTE PTR [rax]
   140008fc4:	add    BYTE PTR ds:[rip+0x3c007300],ah        # 0x17c0102cb
   140008fcb:	add    BYTE PTR [rdi],ch
   140008fcd:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008fd1:	add    BYTE PTR [rax+0x0],bh
   140008fd4:	je     0x140008fd6
   140008fd6:	add    BYTE PTR ds:[rax+rax*1],bh
   140008fda:	je     0x140008fdc
   140008fdc:	add    BYTE PTR gs:[rax+0x0],bh
   140008fe0:	je     0x140008fe2
   140008fe2:	and    BYTE PTR [rax],al
   140008fe4:	imul   eax,DWORD PTR [rax],0x3d0064
   140008fea:	and    al,BYTE PTR [rax]
   140008fec:	xor    al,BYTE PTR [rax]
   140008fee:	and    al,BYTE PTR [rax]
   140008ff0:	add    BYTE PTR ds:[rip+0x3c007300],ah        # 0x17c0102f7
   140008ff7:	add    BYTE PTR [rdi],ch
   140008ff9:	add    BYTE PTR [rax+rax*1+0x65],dh
   140008ffd:	add    BYTE PTR [rax+0x0],bh
   140009000:	je     0x140009002
   140009002:	add    BYTE PTR ds:[rax+rax*1],bh
   140009006:	(bad)  
   140009007:	add    BYTE PTR [rdx+0x0],ah
   14000900a:	imul   eax,DWORD PTR [rax],0x64006e
   140009010:	imul   eax,DWORD PTR [rax],0x67006e
   140009016:	add    BYTE PTR ds:[rax+rax*1],bh
   14000901a:	(bad)  
   14000901b:	add    BYTE PTR [rsi+0x0],dh
   14000901e:	imul   eax,DWORD PTR [rax],0x750073
   140009024:	(bad)  
   140009025:	add    BYTE PTR [rax+rax*1+0x3e],ch
   140009029:	add    BYTE PTR [rip+0x3c007300],ah        # 0x17c01032f
   14000902f:	add    BYTE PTR [rdi],ch
   140009031:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140009035:	add    BYTE PTR [rcx+0x0],ah
   140009038:	jae    0x14000903a
   14000903a:	je     0x14000903c
   14000903c:	add    BYTE PTR ds:[rax],al
   14000903f:	add    BYTE PTR [rsi+0x0],cl
   140009042:	outs   dx,DWORD PTR ds:[rsi]
   140009043:	add    BYTE PTR [rsi+0x0],ch
   140009046:	rex.WB add BYTE PTR [r13+0x0],bpl
   14000904a:	ins    DWORD PTR es:[rdi],dx
   14000904b:	add    BYTE PTR [rbp+0x0],ah
   14000904e:	jb     0x140009050
   140009050:	jae    0x140009052
   140009052:	imul   eax,DWORD PTR [rax],0x650076
   140009058:	push   rax
   140009059:	add    BYTE PTR [rcx+0x0],ah
   14000905c:	movsxd eax,DWORD PTR [rax]
   14000905e:	imul   eax,DWORD PTR [rax],0x61
   140009061:	add    BYTE PTR [rdi+0x0],ah
   140009064:	add    BYTE PTR gs:[rax],al
   140009067:	add    bl,cl
   140009069:	rex.RB movabs al,ds:0xe22f8447bab9b39f
   140009073:	stos   DWORD PTR es:[rdi],eax
   140009074:	rex.RB (bad) 
   140009076:	sub    ecx,DWORD PTR [rax+rax*1]
   140009079:	add    BYTE PTR [rax],al
   14000907b:	add    BYTE PTR [rax],al
   14000907d:	add    BYTE PTR [rax],al
   14000907f:	add    cl,bh
   140009081:	adc    DWORD PTR [rdx+0x66da10c],0xde298740
   14000908b:	outs   dx,BYTE PTR ds:[rsi]
   14000908c:	imul   esp,DWORD PTR [rcx+0x58],0x1c
   140009090:	push   0xffffffff90183cab
   140009095:	mov    edx,0x5a960a9d
   14000909a:	rex.WXB sub rbx,QWORD PTR [r9+0x3ac1eda8]
   1400090a1:	int    0xd7
   1400090a3:	or     eax,0xb4a08c45
   1400090a8:	in     eax,dx
   1400090a9:	add    eax,0x6281e14e
   1400090ae:	xchg   esp,eax
   1400090af:	rex.WRX cmp rax,0x18071afd
   1400090b5:	mov    dh,0x67
   1400090b7:	mov    eax,esi
   1400090b9:	mov    eax,0x9ff3bde5
   1400090be:	(bad)  
   1400090bf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400090c0:	and    al,BYTE PTR [rip+0x41993]        # 0x14004aa59
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	adc    BYTE PTR [rdi+0x20000],ah
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	xor    BYTE PTR [rdi+0x80000],ah
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	and    BYTE PTR [rdi+0x200000],0x0
   1400090df:	add    BYTE PTR [rax],al
   1400090e1:	add    BYTE PTR [rax],al
   1400090e3:	add    BYTE PTR [rcx],al
   1400090e5:	add    BYTE PTR [rax],al
   1400090e7:	add    BYTE PTR [rdx],ah
   1400090e9:	add    eax,0x51993
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	cmp    al,0xa9
	...
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	or     eax,DWORD PTR [rax]
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	jo     0x1400090ab
   140009102:	add    BYTE PTR [rax],al
   140009104:	clc    
   140009105:	add    BYTE PTR [rax],al
   140009107:	add    BYTE PTR [rax],al
   140009109:	add    BYTE PTR [rax],al
   14000910b:	add    BYTE PTR [rcx],al
   14000910d:	add    BYTE PTR [rax],al
   14000910f:	add    BYTE PTR [rdx],ah
   140009111:	add    eax,0x21993
   140009116:	add    BYTE PTR [rax],al
   140009118:	fs stos BYTE PTR es:[rdi],al
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    DWORD PTR [rax],eax
   14000911e:	add    BYTE PTR [rax],al
   140009120:	je     0x1400090cc
   140009122:	add    BYTE PTR [rax],al
   140009124:	or     BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	mov    al,0xaa
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	and    BYTE PTR [rax],al
   14000912e:	add    BYTE PTR [rax],al
   140009130:	add    BYTE PTR [rax],al
   140009132:	add    BYTE PTR [rax],al
   140009134:	add    DWORD PTR [rax],eax
	...
   140009142:	add    BYTE PTR [rax],al
   140009144:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009145:	cmp    DWORD PTR [rdi+0x55],ebx
   14000914b:	add    BYTE PTR [rdx],al
   14000914d:	add    BYTE PTR [rax],al
   14000914f:	add    BYTE PTR [rax+rax*1],ah
   140009152:	add    BYTE PTR [rax],al
   140009154:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009155:	movabs ds:0x7da40000,eax
   14000915e:	add    BYTE PTR [rax],al
   140009160:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009161:	cmp    DWORD PTR [rdi+0x55],ebx
   140009167:	add    BYTE PTR [rip+0xffffffffb4000000],cl        # 0xf400916d
   14000916d:	add    al,BYTE PTR [rax]
   14000916f:	add    ah,bl
   140009171:	movabs ds:0x7ddc0000,eax
	...
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	movabs al,ds:0x0
	...
   1400091f5:	add    BYTE PTR [rax],al
   1400091f7:	add    BYTE PTR [rax],cl
   1400091f9:	rol    BYTE PTR [rax],0x40
   1400091fc:	add    DWORD PTR [rax],eax
	...
   14000920e:	add    BYTE PTR [rax],al
   140009210:	sub    BYTE PTR [rbx+0x0],dh
   140009213:	rex add DWORD PTR [rax],eax
   140009216:	add    BYTE PTR [rax],al
   140009218:	xor    BYTE PTR [rbx+0x0],dh
   14000921b:	rex add DWORD PTR [rax],eax
   14000921e:	add    BYTE PTR [rax],al
   140009220:	movabs al,ds:0x4b00000001400073
	...
   140009231:	xor    eax,0x0
	...
   140009246:	add    BYTE PTR [rax],al
   140009248:	add    DWORD PTR [rax],eax
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	adc    BYTE PTR [rbx+0x0],0x0
   140009253:	add    BYTE PTR [rax],al
   140009255:	add    BYTE PTR [rax],al
   140009257:	add    BYTE PTR [rax],al
   140009259:	rol    DWORD PTR [rax],0x0
	...
   140009264:	(bad)  
   140009265:	(bad)  
   140009266:	(bad)  
   140009267:	inc    DWORD PTR [rax]
   140009269:	add    BYTE PTR [rax],al
   14000926b:	add    BYTE PTR [rax+0x0],al
   14000926e:	add    BYTE PTR [rax],al
   140009270:	rex xchg edx,eax
	...
   140009286:	add    BYTE PTR [rax],al
   140009288:	add    eax,DWORD PTR [rax]
   14000928a:	add    BYTE PTR [rax],al
   14000928c:	cwde   
   14000928d:	xchg   edx,eax
	...
   140009296:	add    BYTE PTR [rax],al
   140009298:	nop
   140009299:	xchg   ebx,eax
   14000929a:	add    BYTE PTR [rax],al
   14000929c:	loopne 0x140009230
   14000929e:	add    BYTE PTR [rax],al
   1400092a0:	pop    rax
   1400092a1:	xchg   edx,eax
	...
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	add    DWORD PTR [rax],eax
	...
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	xor    cl,al
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	adc    BYTE PTR [rax+rax*1+0x92b800],dl
	...
   1400092df:	add    BYTE PTR [rax],dh
   1400092e1:	rol    DWORD PTR [rax],0x0
   1400092e4:	add    DWORD PTR [rax],eax
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	add    BYTE PTR [rax],al
   1400092ea:	add    BYTE PTR [rax],al
   1400092ec:	(bad)  
   1400092ed:	(bad)  
   1400092ee:	(bad)  
   1400092ef:	inc    DWORD PTR [rax]
   1400092f1:	add    BYTE PTR [rax],al
   1400092f3:	add    BYTE PTR [rax+0x0],al
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	adc    BYTE PTR [rax+rax*1+0x0],dl
	...
   140009307:	add    BYTE PTR [rax+0x20000c0],dl
   14000930d:	add    BYTE PTR [rax],al
   14000930f:	add    BYTE PTR [rax],al
   140009311:	add    BYTE PTR [rax],al
   140009313:	add    bh,bh
   140009315:	(bad)  
   140009316:	(bad)  
   140009317:	inc    DWORD PTR [rax]
   140009319:	add    BYTE PTR [rax],al
   14000931b:	add    BYTE PTR [rax+0x0],al
   14000931e:	add    BYTE PTR [rax],al
   140009320:	mov    eax,0x93
	...
   14000932d:	add    BYTE PTR [rax],al
   14000932f:	add    BYTE PTR [rcx],al
	...
   14000933d:	rol    DWORD PTR [rax],0x0
   140009340:	rex xchg edx,eax
   140009342:	add    BYTE PTR [rax],al
   140009344:	xor    BYTE PTR [rbx+0x0],dl
	...
   140009356:	add    BYTE PTR [rax],al
   140009358:	add    DWORD PTR [rax],eax
	...
   140009362:	add    BYTE PTR [rax],al
   140009364:	nop
   140009365:	rol    BYTE PTR [rax],0x0
   140009368:	mov    eax,0x58000093
   14000936d:	xchg   ebx,eax
	...
   14000937e:	add    BYTE PTR [rax],al
   140009380:	pop    rax
   140009381:	xchg   edx,eax
	...
   14000938e:	add    BYTE PTR [rax],al
   140009390:	enter  0xc0,0x0
   140009394:	add    al,BYTE PTR [rax]
   140009396:	add    BYTE PTR [rax],al
   140009398:	add    BYTE PTR [rax],al
   14000939a:	add    BYTE PTR [rax],al
   14000939c:	(bad)  
   14000939d:	(bad)  
   14000939e:	(bad)  
   14000939f:	inc    DWORD PTR [rax]
   1400093a1:	add    BYTE PTR [rax],al
   1400093a3:	add    BYTE PTR [rax+0x0],al
   1400093a6:	add    BYTE PTR [rax],al
   1400093a8:	adc    BYTE PTR [rdx+0x0],0x0
	...
   1400093bf:	add    BYTE PTR [rbx],al
   1400093c1:	add    BYTE PTR [rax],al
   1400093c3:	add    BYTE PTR [rax],ch
   1400093c5:	xchg   esp,eax
	...
   1400093ce:	add    BYTE PTR [rax],al
   1400093d0:	add    DWORD PTR [rax],eax
	...
   1400093da:	add    BYTE PTR [rax],al
   1400093dc:	enter  0xc0,0x0
   1400093e0:	adc    BYTE PTR [rdx-0x6c300000],0x0
	...
   1400093f7:	add    al,ah
   1400093f9:	xchg   edx,eax
   1400093fa:	add    BYTE PTR [rax],al
   1400093fc:	pop    rax
   1400093fd:	xchg   edx,eax
	...
   140009416:	add    BYTE PTR [rax],al
   140009418:	add    al,BYTE PTR [rax]
   14000941a:	add    BYTE PTR [rax],al
   14000941c:	clc    
   14000941d:	xchg   ebx,eax
	...
   140009426:	add    BYTE PTR [rax],al
   140009428:	or     BYTE PTR [rbx-0x6d200000],dl
   14000942e:	add    BYTE PTR [rax],al
   140009430:	pop    rax
   140009431:	xchg   edx,eax
	...
   140009446:	add    BYTE PTR [rax],al
   140009448:	mov    BYTE PTR [rax-0x67500000],bl
	...
   14000945e:	add    BYTE PTR [rax],al
   140009460:	mov    al,0x98
	...
   14000946e:	add    BYTE PTR [rax],al
   140009470:	fcomp  DWORD PTR [rax-0x67000000]
   140009476:	add    BYTE PTR [rax],al
   140009478:	sub    BYTE PTR [rcx-0x66b00000],bl
   14000947e:	add    BYTE PTR [rax],al
   140009480:	push   rax
   140009481:	sahf   
	...
   14000949e:	add    BYTE PTR [rax],al
   1400094a0:	add    BYTE PTR [rcx-0x66d80000],bl
   1400094a6:	add    BYTE PTR [rax],al
   1400094a8:	push   rax
   1400094a9:	cdq    
   1400094aa:	add    BYTE PTR [rax],al
   1400094ac:	push   rax
   1400094ad:	sahf   
	...
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	sub    BYTE PTR [rcx-0x66b00000],bl
   1400094ce:	add    BYTE PTR [rax],al
   1400094d0:	push   rax
   1400094d1:	sahf   
	...
   1400094e6:	add    BYTE PTR [rax],al
   1400094e8:	push   rax
   1400094e9:	cdq    
   1400094ea:	add    BYTE PTR [rax],al
   1400094ec:	push   rax
   1400094ed:	sahf   
	...
   1400094fe:	add    BYTE PTR [rax],al
   140009500:	js     0x14000949b
   140009502:	add    BYTE PTR [rax],al
   140009504:	enter  0x99,0x0
   140009508:	rex (bad) 
   14000950a:	add    BYTE PTR [rax],al
   14000950c:	nop
   14000950d:	(bad)  
   14000950e:	add    BYTE PTR [rax],al
   140009510:	js     0x1400094b0
   140009512:	add    BYTE PTR [rax],al
   140009514:	and    BYTE PTR [rax-0x65e80000],ah
   14000951a:	add    BYTE PTR [rax],al
   14000951c:	(bad)  
   14000951d:	popf   
   14000951e:	add    BYTE PTR [rax],al
   140009520:	cmp    BYTE PTR [rbp-0x62f00000],bl
   140009526:	add    BYTE PTR [rax],al
   140009528:	movabs al,ds:0x99
	...
   14000955d:	add    BYTE PTR [rax],al
   14000955f:	add    al,cl
   140009561:	cdq    
   140009562:	add    BYTE PTR [rax],al
   140009564:	rex (bad) 
   140009566:	add    BYTE PTR [rax],al
   140009568:	nop
   140009569:	(bad)  
   14000956a:	add    BYTE PTR [rax],al
   14000956c:	js     0x14000950c
   14000956e:	add    BYTE PTR [rax],al
   140009570:	and    BYTE PTR [rax-0x65e80000],ah
   140009576:	add    BYTE PTR [rax],al
   140009578:	(bad)  
   140009579:	popf   
   14000957a:	add    BYTE PTR [rax],al
   14000957c:	cmp    BYTE PTR [rbp-0x62f00000],bl
   140009582:	add    BYTE PTR [rax],al
   140009584:	movabs al,ds:0x99
	...
   1400095b5:	add    BYTE PTR [rax],al
   1400095b7:	add    al,dh
   1400095b9:	cdq    
	...
   1400095ce:	add    BYTE PTR [rax],al
   1400095d0:	rex (bad) 
   1400095d2:	add    BYTE PTR [rax],al
   1400095d4:	nop
   1400095d5:	(bad)  
   1400095d6:	add    BYTE PTR [rax],al
   1400095d8:	js     0x140009578
   1400095da:	add    BYTE PTR [rax],al
   1400095dc:	and    BYTE PTR [rax-0x65e80000],ah
   1400095e2:	add    BYTE PTR [rax],al
   1400095e4:	(bad)  
   1400095e5:	popf   
   1400095e6:	add    BYTE PTR [rax],al
   1400095e8:	cmp    BYTE PTR [rbp-0x62f00000],bl
	...
   140009616:	add    BYTE PTR [rax],al
   140009618:	push   0xffffffffd800009a
   14000961d:	popf   
	...
   14000962e:	add    BYTE PTR [rax],al
   140009630:	nop
   140009631:	(bad)  
   140009632:	add    BYTE PTR [rax],al
   140009634:	js     0x1400095d4
   140009636:	add    BYTE PTR [rax],al
   140009638:	and    BYTE PTR [rax+0x0],ah
	...
   14000964e:	add    BYTE PTR [rax],al
   140009650:	mov    eax,0xe000009a
   140009655:	(bad)  
   140009656:	add    BYTE PTR [rax],al
   140009658:	test   al,0x9b
   14000965a:	add    BYTE PTR [rax],al
   14000965c:	jo     0x1400095fa
   14000965e:	add    BYTE PTR [rax],al
   140009660:	rcr    BYTE PTR [rax+rax*1+0x9c4800],0x0
   140009668:	and    BYTE PTR [rax+rax*1+0x9bf800],bl
   14000966f:	add    al,dl
   140009671:	fwait
   140009672:	add    BYTE PTR [rax],al
   140009674:	sbb    BYTE PTR [rbx-0x64a80000],0x0
   14000967b:	add    BYTE PTR [rax],dh
   14000967d:	fwait
   14000967e:	add    BYTE PTR [rax],al
   140009680:	or     BYTE PTR [rbx+0x0],bl
	...
   1400096be:	add    BYTE PTR [rax],al
   1400096c0:	loopne 0x14000965c
   1400096c2:	add    BYTE PTR [rax],al
   1400096c4:	test   al,0x9b
   1400096c6:	add    BYTE PTR [rax],al
   1400096c8:	jo     0x140009666
   1400096ca:	add    BYTE PTR [rax],al
   1400096cc:	rcr    BYTE PTR [rax+rax*1+0x9c4800],0x0
   1400096d4:	and    BYTE PTR [rax+rax*1+0x9bf800],bl
   1400096db:	add    al,dl
   1400096dd:	fwait
   1400096de:	add    BYTE PTR [rax],al
   1400096e0:	sbb    BYTE PTR [rbx-0x64a80000],0x0
   1400096e7:	add    BYTE PTR [rax],dh
   1400096e9:	fwait
   1400096ea:	add    BYTE PTR [rax],al
   1400096ec:	or     BYTE PTR [rbx+0x0],bl
	...
   14000972e:	add    BYTE PTR [rax],al
   140009730:	test   al,0x9b
   140009732:	add    BYTE PTR [rax],al
   140009734:	jo     0x1400096d2
   140009736:	add    BYTE PTR [rax],al
   140009738:	rcr    BYTE PTR [rax+rax*1+0x9c4800],0x0
   140009740:	and    BYTE PTR [rax+rax*1+0x9bf800],bl
   140009747:	add    al,dl
   140009749:	fwait
   14000974a:	add    BYTE PTR [rax],al
   14000974c:	sbb    BYTE PTR [rbx-0x64a80000],0x0
   140009753:	add    BYTE PTR [rax],dh
   140009755:	fwait
   140009756:	add    BYTE PTR [rax],al
   140009758:	or     BYTE PTR [rbx+0x0],bl
	...
   14000978e:	add    BYTE PTR [rax],al
   140009790:	jo     0x14000972e
   140009792:	add    BYTE PTR [rax],al
   140009794:	rcr    BYTE PTR [rax+rax*1+0x9c4800],0x0
   14000979c:	and    BYTE PTR [rax+rax*1+0x9bf800],bl
   1400097a3:	add    al,dl
   1400097a5:	fwait
	...
   1400097c6:	add    BYTE PTR [rax],al
   1400097c8:	cwde   
   1400097c9:	pushf  
   1400097ca:	add    BYTE PTR [rax],al
   1400097cc:	call   0x16000986d
   1400097d1:	movabs al,ds:0x0
	...
   1400097e6:	add    BYTE PTR [rax],al
   1400097e8:	rcr    BYTE PTR [rax+rax*1+0xa02000],0x0
	...
   140009800:	call   0x1600098a1
   140009805:	movabs al,ds:0x0
	...
   140009816:	add    BYTE PTR [rax],al
   140009818:	mov    BYTE PTR [rbp+0x0],bl
	...
   140009826:	add    BYTE PTR [rax],al
   140009828:	mov    al,0x9d
	...
   140009836:	add    BYTE PTR [rax],al
   140009838:	add    BYTE PTR [rsi-0x62280000],bl
	...
   14000984e:	add    BYTE PTR [rax],al
   140009850:	sub    BYTE PTR [rsi+0x0],bl
	...
   14000985e:	add    BYTE PTR [rax],al
   140009860:	push   rax
   140009861:	sahf   
	...
   14000986e:	add    BYTE PTR [rax],al
   140009870:	js     0x140009810
   140009872:	add    BYTE PTR [rax],al
   140009874:	and    BYTE PTR [rax+0x0],ah
	...
   140009886:	add    BYTE PTR [rax],al
   140009888:	jo     0x14000984b
   14000988a:	add    BYTE PTR [rax],al
   14000988c:	add    DWORD PTR [rax],eax
   14000988e:	add    BYTE PTR [rax],al
   140009890:	add    BYTE PTR [rax],al
   140009892:	add    BYTE PTR [rax],al
   140009894:	(bad)  
   140009895:	(bad)  
   140009896:	(bad)  
   140009897:	inc    DWORD PTR [rax]
   140009899:	add    BYTE PTR [rax],al
   14000989b:	add    BYTE PTR [rax+0x0],al
   14000989e:	add    BYTE PTR [rax],al
   1400098a0:	movabs al,ds:0x9e
	...
   1400098b1:	ret    0x0
	...
   1400098bc:	(bad)  
   1400098bd:	(bad)  
   1400098be:	(bad)  
   1400098bf:	inc    DWORD PTR [rax]
   1400098c1:	add    BYTE PTR [rax],al
   1400098c3:	add    BYTE PTR [rax+0x0],al
   1400098c6:	add    BYTE PTR [rax],al
   1400098c8:	mov    eax,0x9e
	...
   1400098d5:	add    BYTE PTR [rax],al
   1400098d7:	add    BYTE PTR [rax+0x40000c3],dh
   1400098dd:	add    BYTE PTR [rax],al
   1400098df:	add    BYTE PTR [rax],al
   1400098e1:	add    BYTE PTR [rax],al
   1400098e3:	add    bh,bh
   1400098e5:	(bad)  
   1400098e6:	(bad)  
   1400098e7:	inc    DWORD PTR [rax]
   1400098e9:	add    BYTE PTR [rax],al
   1400098eb:	add    BYTE PTR [rax+0x0],al
   1400098ee:	add    BYTE PTR [rax],al
   1400098f0:	sbb    BYTE PTR [rdi+0x0],bl
	...
   1400098fe:	add    BYTE PTR [rax],al
   140009900:	add    dl,0x0
   140009903:	add    BYTE PTR [rbx],al
   140009905:	add    BYTE PTR [rax],al
   140009907:	add    BYTE PTR [rax],al
   140009909:	add    BYTE PTR [rax],al
   14000990b:	add    bh,bh
   14000990d:	(bad)  
   14000990e:	(bad)  
   14000990f:	inc    DWORD PTR [rax]
   140009911:	add    BYTE PTR [rax],al
   140009913:	add    BYTE PTR [rax+0x0],al
   140009916:	add    BYTE PTR [rax],al
   140009918:	rcr    BYTE PTR [rsi+0x0],1
	...
   140009926:	add    BYTE PTR [rax],al
   140009928:	loopne 0x1400098ec
   14000992a:	add    BYTE PTR [rax],al
   14000992c:	add    al,BYTE PTR [rax]
   14000992e:	add    BYTE PTR [rax],al
   140009930:	add    BYTE PTR [rax],al
   140009932:	add    BYTE PTR [rax],al
   140009934:	(bad)  
   140009935:	(bad)  
   140009936:	(bad)  
   140009937:	inc    DWORD PTR [rax]
   140009939:	add    BYTE PTR [rax],al
   14000993b:	add    BYTE PTR [rax+0x0],al
   14000993e:	add    BYTE PTR [rax],al
   140009940:	call   0x1400099e3
	...
   14000994d:	add    BYTE PTR [rax],al
   14000994f:	add    BYTE PTR [rax-0x3d],dl
   140009952:	add    BYTE PTR [rax],al
   140009954:	add    DWORD PTR [rax],eax
   140009956:	add    BYTE PTR [rax],al
   140009958:	add    BYTE PTR [rax],al
   14000995a:	add    BYTE PTR [rax],al
   14000995c:	(bad)  
   14000995d:	(bad)  
   14000995e:	(bad)  
   14000995f:	inc    DWORD PTR [rax]
   140009961:	add    BYTE PTR [rax],al
   140009963:	add    BYTE PTR [rax+0x0],al
   140009966:	add    BYTE PTR [rax],al
   140009968:	add    BYTE PTR [rdi+0x0],bl
	...
   140009976:	add    BYTE PTR [rax],al
   140009978:	(bad)  
   140009979:	mov    BYTE PTR [rax],0x0
   14000997c:	or     al,BYTE PTR [rax]
   14000997e:	add    BYTE PTR [rax],al
   140009980:	add    BYTE PTR [rax],al
   140009982:	add    BYTE PTR [rax],al
   140009984:	(bad)  
   140009985:	(bad)  
   140009986:	(bad)  
   140009987:	inc    DWORD PTR [rax]
   140009989:	add    BYTE PTR [rax],al
   14000998b:	add    BYTE PTR [rax+0x0],al
   14000998e:	add    BYTE PTR [rax],al
   140009990:	test   al,0x9f
	...
   14000999e:	add    BYTE PTR [rax],al
   1400099a0:	push   rax
   1400099a1:	(bad)  
   1400099a2:	add    BYTE PTR [rax],al
   1400099a4:	add    BYTE PTR [rax],al
   1400099a6:	add    BYTE PTR [rax],al
   1400099a8:	adc    DWORD PTR [rax],eax
   1400099aa:	add    BYTE PTR [rax],al
   1400099ac:	(bad)  
   1400099ad:	(bad)  
   1400099ae:	(bad)  
   1400099af:	inc    DWORD PTR [rax]
   1400099b1:	add    BYTE PTR [rax],al
   1400099b3:	add    BYTE PTR [rbp+0x0],cl
   1400099b6:	add    BYTE PTR [rax],al
   1400099b8:	rex.W lahf 
	...
   1400099c6:	add    BYTE PTR [rax],al
   1400099c8:	lock ret 
   1400099ca:	add    BYTE PTR [rax],al
   1400099cc:	or     DWORD PTR [rax],eax
   1400099ce:	add    BYTE PTR [rax],al
   1400099d0:	add    BYTE PTR [rax],al
   1400099d2:	add    BYTE PTR [rax],al
   1400099d4:	(bad)  
   1400099d5:	(bad)  
   1400099d6:	(bad)  
   1400099d7:	inc    DWORD PTR [rax]
   1400099d9:	add    BYTE PTR [rax],al
   1400099db:	add    BYTE PTR [rax+0x0],al
   1400099de:	add    BYTE PTR [rax],al
   1400099e0:	xor    BYTE PTR [rdi+0x0],bl
	...
   1400099ee:	add    BYTE PTR [rax],al
   1400099f0:	push   rax
   1400099f1:	(bad)  
	...
   1400099fa:	add    BYTE PTR [rax],al
   1400099fc:	(bad)  
   1400099fd:	(bad)  
   1400099fe:	(bad)  
   1400099ff:	inc    DWORD PTR [rax]
   140009a01:	add    BYTE PTR [rax],al
   140009a03:	add    BYTE PTR [rax+0x0],al
   140009a06:	add    BYTE PTR [rax],al
   140009a08:	rex.W lahf 
	...
   140009a16:	add    BYTE PTR [rax],al
   140009a18:	push   rax
   140009a19:	(bad)
   140009a1c:	add    DWORD PTR [rax],eax
   140009a1e:	add    BYTE PTR [rax],al
   140009a20:	or     BYTE PTR [rax],al
   140009a22:	add    BYTE PTR [rax],al
   140009a24:	(bad)  
   140009a25:	(bad)  
   140009a26:	(bad)  
   140009a27:	inc    DWORD PTR [rax]
   140009a29:	add    BYTE PTR [rax],al
   140009a2b:	add    BYTE PTR [rax+0x0],al
   140009a2e:	add    BYTE PTR [rax],al
   140009a30:	js     0x1400099d1
	...
   140009a3e:	add    BYTE PTR [rax],al
   140009a40:	nop
   140009a41:	(bad)  
   140009a42:	add    BYTE PTR [rax],al
   140009a44:	(bad)  
   140009a45:	add    BYTE PTR [rax],al
   140009a47:	add    BYTE PTR [rax],al
   140009a49:	add    BYTE PTR [rax],al
   140009a4b:	add    bh,bh
   140009a4d:	(bad)  
   140009a4e:	(bad)  
   140009a4f:	inc    DWORD PTR [rax]
   140009a51:	add    BYTE PTR [rax],al
   140009a53:	add    BYTE PTR [rax+0x0],al
   140009a56:	add    BYTE PTR [rax],al
   140009a58:	(bad)  
   140009a59:	lahf   
	...
   140009a66:	add    BYTE PTR [rax],al
   140009a68:	push   rax
   140009a69:	(bad)
   140009a6c:	add    DWORD PTR [rax],eax
   140009a6e:	add    BYTE PTR [rax],al
   140009a70:	add    BYTE PTR [rax],al
   140009a72:	add    BYTE PTR [rax],al
   140009a74:	(bad)  
   140009a75:	(bad)  
   140009a76:	(bad)  
   140009a77:	inc    DWORD PTR [rax]
   140009a79:	add    BYTE PTR [rax],al
   140009a7b:	add    BYTE PTR [rax+0x0],al
   140009a7e:	add    BYTE PTR [rax],al
   140009a80:	js     0x140009a21
	...
   140009a8e:	add    BYTE PTR [rax],al
   140009a90:	movabs al,ds:0x20000c5
   140009a99:	add    BYTE PTR [rax],al
   140009a9b:	add    bh,bh
   140009a9d:	(bad)  
   140009a9e:	(bad)  
   140009a9f:	inc    DWORD PTR [rax]
   140009aa1:	add    BYTE PTR [rax],al
   140009aa3:	add    BYTE PTR [rax+0x0],al
   140009aa6:	add    BYTE PTR [rax],al
   140009aa8:	nop
   140009aa9:	lahf   
	...
   140009ab6:	add    BYTE PTR [rax],al
   140009ab8:	nop
   140009ab9:	retf   0x0
   140009abc:	or     al,0x0
   140009abe:	add    BYTE PTR [rax],al
   140009ac0:	add    BYTE PTR [rax],al
   140009ac2:	add    BYTE PTR [rax],al
   140009ac4:	(bad)  
   140009ac5:	(bad)  
   140009ac6:	(bad)  
   140009ac7:	inc    DWORD PTR [rax]
   140009ac9:	add    BYTE PTR [rax],al
   140009acb:	add    BYTE PTR [rax+0x0],al
   140009ace:	add    BYTE PTR [rax],al
   140009ad0:	jo     0x140009a72
	...
   140009ade:	add    BYTE PTR [rax],al
   140009ae0:	mov    al,0xc6
   140009ae2:	add    BYTE PTR [rax],al
   140009ae4:	or     eax,DWORD PTR [rax]
   140009ae6:	add    BYTE PTR [rax],al
   140009ae8:	add    BYTE PTR [rax],al
   140009aea:	add    BYTE PTR [rax],al
   140009aec:	(bad)  
   140009aed:	(bad)  
   140009aee:	(bad)  
   140009aef:	inc    DWORD PTR [rax]
   140009af1:	add    BYTE PTR [rax],al
   140009af3:	add    BYTE PTR [rax+0x0],al
   140009af6:	add    BYTE PTR [rax],al
   140009af8:	rcr    BYTE PTR [rdi+0x0],0x0
	...
   140009b07:	add    BYTE PTR [rax],dl
   140009b09:	retf   
   140009b0a:	add    BYTE PTR [rax],al
   140009b0c:	add    BYTE PTR [rax],al
   140009b0e:	add    BYTE PTR [rax],al
   140009b10:	adc    al,BYTE PTR [rax]
   140009b12:	add    BYTE PTR [rax],al
   140009b14:	(bad)  
   140009b15:	(bad)  
   140009b16:	(bad)  
   140009b17:	inc    DWORD PTR [rax]
   140009b19:	add    BYTE PTR [rax],al
   140009b1b:	add    BYTE PTR [rax+0x0],al
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	mov    eax,0xa0
	...
   140009b2d:	add    BYTE PTR [rax],al
   140009b2f:	add    BYTE PTR [rax-0x35],dl
   140009b32:	add    BYTE PTR [rax],al
   140009b34:	add    BYTE PTR [rax],al
   140009b36:	add    BYTE PTR [rax],al
   140009b38:	adc    DWORD PTR [rax],eax
   140009b3a:	add    BYTE PTR [rax],al
   140009b3c:	(bad)  
   140009b3d:	(bad)  
   140009b3e:	(bad)  
   140009b3f:	inc    DWORD PTR [rax]
   140009b41:	add    BYTE PTR [rax],al
   140009b43:	add    BYTE PTR [rbp+0x0],cl
   140009b46:	add    BYTE PTR [rax],al
   140009b48:	shl    BYTE PTR [rax+0x0],1
	...
   140009b56:	add    BYTE PTR [rax],al
   140009b58:	nop
   140009b59:	retf   
   140009b5a:	add    BYTE PTR [rax],al
   140009b5c:	add    BYTE PTR [rax],al
   140009b5e:	add    BYTE PTR [rax],al
   140009b60:	adc    BYTE PTR [rax],al
   140009b62:	add    BYTE PTR [rax],al
   140009b64:	(bad)  
   140009b65:	(bad)  
   140009b66:	(bad)  
   140009b67:	inc    DWORD PTR [rax]
   140009b69:	add    BYTE PTR [rax],al
   140009b6b:	add    BYTE PTR [rbp+0x0],cl
   140009b6e:	add    BYTE PTR [rax],al
   140009b70:	call   0x140009c15
	...
   140009b7d:	add    BYTE PTR [rax],al
   140009b7f:	add    al,dl
   140009b81:	retf   
   140009b82:	add    BYTE PTR [rax],al
   140009b84:	add    DWORD PTR [rax],eax
   140009b86:	add    BYTE PTR [rax],al
   140009b88:	adc    BYTE PTR [rax],al
   140009b8a:	add    BYTE PTR [rax],al
   140009b8c:	(bad)  
   140009b8d:	(bad)  
   140009b8e:	(bad)  
   140009b8f:	inc    DWORD PTR [rax]
   140009b91:	add    BYTE PTR [rax],al
   140009b93:	add    BYTE PTR [rax+0x0],al
   140009b96:	add    BYTE PTR [rax],al
   140009b98:	add    BYTE PTR [rcx+0x0],ah
	...
   140009ba6:	add    BYTE PTR [rax],al
   140009ba8:	add    bh,0x0
   140009bab:	add    BYTE PTR [rdx],cl
   140009bad:	add    BYTE PTR [rax],al
   140009baf:	add    BYTE PTR [rax],al
   140009bb1:	add    BYTE PTR [rax],al
   140009bb3:	add    bh,bh
   140009bb5:	(bad)  
   140009bb6:	(bad)  
   140009bb7:	inc    DWORD PTR [rax]
   140009bb9:	add    BYTE PTR [rax],al
   140009bbb:	add    BYTE PTR [rax+0x0],al
   140009bbe:	add    BYTE PTR [rax],al
   140009bc0:	fcomp  DWORD PTR [rdi+0x0]
	...
   140009bce:	add    BYTE PTR [rax],al
   140009bd0:	jo     0x140009b9c
   140009bd2:	add    BYTE PTR [rax],al
   140009bd4:	add    BYTE PTR [rax],al
   140009bd6:	add    BYTE PTR [rax],al
   140009bd8:	or     BYTE PTR [rax],al
   140009bda:	add    BYTE PTR [rax],al
   140009bdc:	(bad)  
   140009bdd:	(bad)  
   140009bde:	(bad)  
   140009bdf:	inc    DWORD PTR [rax]
   140009be1:	add    BYTE PTR [rax],al
   140009be3:	add    BYTE PTR [rdx+0x0],al
   140009be6:	add    BYTE PTR [rax],al
   140009be8:	pop    rax
   140009be9:	movabs al,ds:0x0
   140009bf2:	add    BYTE PTR [rax],al
   140009bf4:	add    BYTE PTR [rax],al
   140009bf6:	add    BYTE PTR [rax],al
   140009bf8:	fmul   st,st(2)
   140009bfa:	add    BYTE PTR [rax],al
   140009bfc:	add    DWORD PTR [rax],eax
   140009bfe:	add    BYTE PTR [rax],al
   140009c00:	or     BYTE PTR [rax],al
   140009c02:	add    BYTE PTR [rax],al
   140009c04:	(bad)  
   140009c05:	(bad)  
   140009c06:	(bad)  
   140009c07:	inc    DWORD PTR [rax]
   140009c09:	add    BYTE PTR [rax],al
   140009c0b:	add    BYTE PTR [rax+0x0],al
   140009c0e:	add    BYTE PTR [rax],al
   140009c10:	movabs al,ds:0xa0
   140009c19:	add    BYTE PTR [rax],al
   140009c1b:	add    BYTE PTR [rax],al
   140009c1d:	add    BYTE PTR [rax],al
   140009c1f:	add    BYTE PTR [rax+0x20000c9],ah
   140009c25:	add    BYTE PTR [rax],al
   140009c27:	add    BYTE PTR [rax],cl
   140009c29:	add    BYTE PTR [rax],al
   140009c2b:	add    bh,bh
   140009c2d:	(bad)  
   140009c2e:	(bad)  
   140009c2f:	inc    DWORD PTR [rax]
   140009c31:	add    BYTE PTR [rax],al
   140009c33:	add    BYTE PTR [rax+0x0],al
   140009c36:	add    BYTE PTR [rax],al
   140009c38:	or     BYTE PTR [rax+0x0],ah
	...
   140009c46:	add    BYTE PTR [rax],al
   140009c48:	jo     0x140009c14
	...
   140009c52:	add    BYTE PTR [rax],al
   140009c54:	(bad)  
   140009c55:	(bad)  
   140009c56:	(bad)  
   140009c57:	inc    DWORD PTR [rax]
   140009c59:	add    BYTE PTR [rax],al
   140009c5b:	add    BYTE PTR [rdx+0x0],al
   140009c5e:	add    BYTE PTR [rax],al
   140009c60:	pop    rax
   140009c61:	movabs al,ds:0x0
   140009c6a:	add    BYTE PTR [rax],al
   140009c6c:	add    BYTE PTR [rax],al
   140009c6e:	add    BYTE PTR [rax],al
   140009c70:	nop
   140009c71:	enter  0x0,0x5
   140009c75:	add    BYTE PTR [rax],al
   140009c77:	add    BYTE PTR [rax],al
   140009c79:	add    BYTE PTR [rax],al
   140009c7b:	add    bh,bh
   140009c7d:	(bad)  
   140009c7e:	(bad)  
   140009c7f:	inc    DWORD PTR [rax]
   140009c81:	add    BYTE PTR [rax],al
   140009c83:	add    BYTE PTR [rax+0x0],al
   140009c86:	add    BYTE PTR [rax],al
   140009c88:	lock lahf 
	...
   140009c96:	add    BYTE PTR [rax],al
   140009c98:	movabs al,ds:0x20000c9
   140009ca1:	add    BYTE PTR [rax],al
   140009ca3:	add    bh,bh
   140009ca5:	(bad)  
   140009ca6:	(bad)  
   140009ca7:	inc    DWORD PTR [rax]
   140009ca9:	add    BYTE PTR [rax],al
   140009cab:	add    BYTE PTR [rax+0x0],al
   140009cae:	add    BYTE PTR [rax],al
   140009cb0:	or     BYTE PTR [rax+0x0],ah
	...
   140009cbe:	add    BYTE PTR [rax],al
   140009cc0:	mov    al,0xca
   140009cc2:	add    BYTE PTR [rax],al
   140009cc4:	add    DWORD PTR [rax],eax
   140009cc6:	add    BYTE PTR [rax],al
   140009cc8:	add    BYTE PTR [rax],al
   140009cca:	add    BYTE PTR [rax],al
   140009ccc:	(bad)  
   140009ccd:	(bad)  
   140009cce:	(bad)  
   140009ccf:	inc    DWORD PTR [rax]
   140009cd1:	add    BYTE PTR [rax],al
   140009cd3:	add    BYTE PTR [rax+0x0],al
   140009cd6:	add    BYTE PTR [rax],al
   140009cd8:	mov    BYTE PTR [rax+0x0],ah
	...
   140009ce6:	add    BYTE PTR [rax],al
   140009ce8:	fmul   st,st(2)
   140009cea:	add    BYTE PTR [rax],al
   140009cec:	add    DWORD PTR [rax],eax
   140009cee:	add    BYTE PTR [rax],al
   140009cf0:	add    BYTE PTR [rax],al
   140009cf2:	add    BYTE PTR [rax],al
   140009cf4:	(bad)  
   140009cf5:	(bad)  
   140009cf6:	(bad)  
   140009cf7:	inc    DWORD PTR [rax]
   140009cf9:	add    BYTE PTR [rax],al
   140009cfb:	add    BYTE PTR [rax+0x0],al
   140009cfe:	add    BYTE PTR [rax],al
   140009d00:	movabs al,ds:0xa0
   140009d09:	add    BYTE PTR [rax],al
   140009d0b:	add    BYTE PTR [rax],al
   140009d0d:	add    BYTE PTR [rax],al
   140009d0f:	add    BYTE PTR [rax],dl
   140009d11:	retf   
   140009d12:	add    BYTE PTR [rax],al
   140009d14:	add    BYTE PTR [rax],al
   140009d16:	add    BYTE PTR [rax],al
   140009d18:	or     al,BYTE PTR [rax]
   140009d1a:	add    BYTE PTR [rax],al
   140009d1c:	(bad)  
   140009d1d:	(bad)  
   140009d1e:	(bad)  
   140009d1f:	inc    DWORD PTR [rax]
   140009d21:	add    BYTE PTR [rax],al
   140009d23:	add    BYTE PTR [rax+0x0],al
   140009d26:	add    BYTE PTR [rax],al
   140009d28:	mov    eax,0xa0
	...
   140009d35:	add    BYTE PTR [rax],al
   140009d37:	add    BYTE PTR [rax-0x35],dl
   140009d3a:	add    BYTE PTR [rax],al
   140009d3c:	add    BYTE PTR [rax],al
   140009d3e:	add    BYTE PTR [rax],al
   140009d40:	or     DWORD PTR [rax],eax
   140009d42:	add    BYTE PTR [rax],al
   140009d44:	(bad)  
   140009d45:	(bad)  
   140009d46:	(bad)  
   140009d47:	inc    DWORD PTR [rax]
   140009d49:	add    BYTE PTR [rax],al
   140009d4b:	add    BYTE PTR [rbp+0x0],cl
   140009d4e:	add    BYTE PTR [rax],al
   140009d50:	shl    BYTE PTR [rax+0x0],1
	...
   140009d5e:	add    BYTE PTR [rax],al
   140009d60:	nop
   140009d61:	retf   
   140009d62:	add    BYTE PTR [rax],al
   140009d64:	add    BYTE PTR [rax],al
   140009d66:	add    BYTE PTR [rax],al
   140009d68:	or     BYTE PTR [rax],al
   140009d6a:	add    BYTE PTR [rax],al
   140009d6c:	(bad)  
   140009d6d:	(bad)  
   140009d6e:	(bad)  
   140009d6f:	inc    DWORD PTR [rax]
   140009d71:	add    BYTE PTR [rax],al
   140009d73:	add    BYTE PTR [rbp+0x0],cl
   140009d76:	add    BYTE PTR [rax],al
   140009d78:	call   0x140009e1d
	...
   140009d85:	add    BYTE PTR [rax],al
   140009d87:	add    BYTE PTR [rax],dl
   140009d89:	retf   
	...
   140009d92:	add    BYTE PTR [rax],al
   140009d94:	(bad)  
   140009d95:	(bad)  
   140009d96:	(bad)  
   140009d97:	inc    DWORD PTR [rax]
   140009d99:	add    BYTE PTR [rax],al
   140009d9b:	add    BYTE PTR [rax+0x0],al
   140009d9e:	add    BYTE PTR [rax],al
   140009da0:	mov    eax,0xa0
	...
   140009dad:	add    BYTE PTR [rax],al
   140009daf:	add    BYTE PTR [rax-0x35],dl
	...
   140009dba:	add    BYTE PTR [rax],al
   140009dbc:	(bad)  
   140009dbd:	(bad)  
   140009dbe:	(bad)  
   140009dbf:	inc    DWORD PTR [rax]
   140009dc1:	add    BYTE PTR [rax],al
   140009dc3:	add    BYTE PTR [rax+0x0],al
   140009dc6:	add    BYTE PTR [rax],al
   140009dc8:	shl    BYTE PTR [rax+0x0],1
	...
   140009dd6:	add    BYTE PTR [rax],al
   140009dd8:	nop
   140009dd9:	retf   
	...
   140009de2:	add    BYTE PTR [rax],al
   140009de4:	(bad)  
   140009de5:	(bad)  
   140009de6:	(bad)  
   140009de7:	inc    DWORD PTR [rax]
   140009de9:	add    BYTE PTR [rax],al
   140009deb:	add    BYTE PTR [rbp+0x0],cl
   140009dee:	add    BYTE PTR [rax],al
   140009df0:	call   0x140009e95
	...
   140009dfd:	add    BYTE PTR [rax],al
   140009dff:	add    al,dl
   140009e01:	retf   
   140009e02:	add    BYTE PTR [rax],al
   140009e04:	add    DWORD PTR [rax],eax
   140009e06:	add    BYTE PTR [rax],al
   140009e08:	add    BYTE PTR [rax],al
   140009e0a:	add    BYTE PTR [rax],al
   140009e0c:	(bad)  
   140009e0d:	(bad)  
   140009e0e:	(bad)  
   140009e0f:	inc    DWORD PTR [rax]
   140009e11:	add    BYTE PTR [rax],al
   140009e13:	add    BYTE PTR [rax+0x0],al
   140009e16:	add    BYTE PTR [rax],al
   140009e18:	add    BYTE PTR [rcx+0x0],ah
	...
   140009e26:	add    BYTE PTR [rax],al
   140009e28:	nop
   140009e29:	retf   
	...
   140009e32:	add    BYTE PTR [rax],al
   140009e34:	(bad)  
   140009e35:	(bad)  
   140009e36:	(bad)  
   140009e37:	inc    DWORD PTR [rax]
   140009e39:	add    BYTE PTR [rax],al
   140009e3b:	add    BYTE PTR [rax+0x0],al
   140009e3e:	add    BYTE PTR [rax],al
   140009e40:	call   0x140009ee5
	...
   140009e4d:	add    BYTE PTR [rax],al
   140009e4f:	add    BYTE PTR [rax],bl
   140009e51:	int3   
	...
   140009e5a:	add    BYTE PTR [rax],al
   140009e5c:	(bad)  
   140009e5d:	(bad)  
   140009e5e:	(bad)  
   140009e5f:	inc    DWORD PTR [rax]
   140009e61:	add    BYTE PTR [rax],al
   140009e63:	add    BYTE PTR [rax+0x0],al
   140009e66:	add    BYTE PTR [rax],al
   140009e68:	sbb    BYTE PTR [rcx+0x0],ah
	...
   140009e76:	add    BYTE PTR [rax],al
   140009e78:	push   rax
   140009e79:	int3   
   140009e7a:	add    BYTE PTR [rax],al
   140009e7c:	add    DWORD PTR [rax],eax
   140009e7e:	add    BYTE PTR [rax],al
   140009e80:	add    BYTE PTR [rax],al
   140009e82:	add    BYTE PTR [rax],al
   140009e84:	(bad)  
   140009e85:	(bad)  
   140009e86:	(bad)  
   140009e87:	inc    DWORD PTR [rax]
   140009e89:	add    BYTE PTR [rax],al
   140009e8b:	add    BYTE PTR [rax+0x0],al
   140009e8e:	add    BYTE PTR [rax],al
   140009e90:	xor    BYTE PTR [rcx+0x0],ah
	...
   140009ea6:	add    BYTE PTR [rax],al
   140009ea8:	add    al,BYTE PTR [rax]
   140009eaa:	add    BYTE PTR [rax],al
   140009eac:	xchg   rsp,rax
	...
   140009ebe:	add    BYTE PTR [rax],al
   140009ec0:	add    DWORD PTR [rax],eax
   140009ec2:	add    BYTE PTR [rax],al
   140009ec4:	(bad)  
   140009ec5:	xchg   esp,eax
	...
   140009ed6:	add    BYTE PTR [rax],al
   140009ed8:	add    al,0x0
   140009eda:	add    BYTE PTR [rax],al
   140009edc:	movabs al,ds:0x94
	...
   140009eed:	add    BYTE PTR [rax],al
   140009eef:	add    BYTE PTR [rbx],al
   140009ef1:	add    BYTE PTR [rax],al
   140009ef3:	add    al,cl
   140009ef5:	xchg   esp,eax
	...
   140009f06:	add    BYTE PTR [rax],al
   140009f08:	add    al,BYTE PTR [rax]
   140009f0a:	add    BYTE PTR [rax],al
   140009f0c:	call   0x140009fa5
	...
   140009f1d:	add    BYTE PTR [rax],al
   140009f1f:	add    BYTE PTR [rip+0x70000000],al        # 0x1b0009f25
   140009f25:	xchg   esp,eax
	...
   140009f32:	add    BYTE PTR [rax],al
   140009f34:	add    DWORD PTR [rax],eax
   140009f36:	add    BYTE PTR [rax],al
   140009f38:	or     al,BYTE PTR [rax]
   140009f3a:	add    BYTE PTR [rax],al
   140009f3c:	(bad)  
   140009f3d:	xchg   ebp,eax
	...
   140009f4e:	add    BYTE PTR [rax],al
   140009f50:	add    DWORD PTR [rax],eax
   140009f52:	add    BYTE PTR [rax],al
   140009f54:	mov    eax,0x95
	...
   140009f61:	add    BYTE PTR [rax],al
   140009f63:	add    BYTE PTR [rcx],al
   140009f65:	add    BYTE PTR [rax],al
   140009f67:	add    BYTE PTR [rax],cl
   140009f69:	add    BYTE PTR [rax],al
   140009f6b:	add    al,dl
   140009f6d:	xchg   ebp,eax
	...
   140009f7e:	add    BYTE PTR [rax],al
   140009f80:	add    al,BYTE PTR [rax]
   140009f82:	add    BYTE PTR [rax],al
   140009f84:	sbb    BYTE PTR [rsi+0x0],dl
	...
   140009f96:	add    BYTE PTR [rax],al
   140009f98:	add    eax,DWORD PTR [rax]
   140009f9a:	add    BYTE PTR [rax],al
   140009f9c:	xor    BYTE PTR [rsi+0x0],dl
	...
   140009faa:	add    BYTE PTR [rax],al
   140009fac:	add    DWORD PTR [rax],eax
   140009fae:	add    BYTE PTR [rax],al
   140009fb0:	or     eax,DWORD PTR [rax]
   140009fb2:	add    BYTE PTR [rax],al
   140009fb4:	add    BYTE PTR [rbp+0x0],dl
	...
   140009fc2:	add    BYTE PTR [rax],al
   140009fc4:	add    DWORD PTR [rax],eax
   140009fc6:	add    BYTE PTR [rax],al
   140009fc8:	or     al,0x0
   140009fca:	add    BYTE PTR [rax],al
   140009fcc:	rcl    BYTE PTR [rsi+0x0],0x0
	...
   140009fdb:	add    BYTE PTR [rcx],al
   140009fdd:	add    BYTE PTR [rax],al
   140009fdf:	add    BYTE PTR [rbx],cl
   140009fe1:	add    BYTE PTR [rax],al
   140009fe3:	add    BYTE PTR [rax],dh
   140009fe5:	xchg   edi,eax
	...
   140009ff2:	add    BYTE PTR [rax],al
   140009ff4:	add    eax,0x6000000
   140009ff9:	add    BYTE PTR [rax],al
   140009ffb:	add    BYTE PTR [rax+0x97],dl
	...
   14000a00d:	add    BYTE PTR [rax],al
   14000a00f:	add    BYTE PTR [rbx],al
   14000a011:	add    BYTE PTR [rax],al
   14000a013:	add    al,cl
   14000a015:	xchg   edi,eax
	...
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	jo     0x140009fec
	...
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	(bad)  
   14000a02d:	(bad)  
   14000a02e:	(bad)  
   14000a02f:	inc    DWORD PTR [rax]
   14000a031:	add    BYTE PTR [rax],al
   14000a033:	add    BYTE PTR [rax+0x0],al
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	pop    rax
   14000a039:	movabs al,ds:0x0
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	add    BYTE PTR [rax],al
   14000a046:	add    BYTE PTR [rax],al
   14000a048:	and    BYTE PTR [rax+0x0],ah
	...
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	add    DWORD PTR [rax],eax
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	rex.W movabs al,ds:0x0
   14000a06e:	add    BYTE PTR [rax],al
   14000a070:	add    BYTE PTR [rax],al
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	add    DWORD PTR [rax],eax
   14000a076:	add    BYTE PTR [rax],al
   14000a078:	or     eax,0x50000000
   14000a07d:	xchg   esi,eax
	...
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	add    al,BYTE PTR [rax]
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	call   0x14000a130
	...
   14000a0a5:	add    BYTE PTR [rax],al
   14000a0a7:	add    BYTE PTR [rdx],al
   14000a0a9:	add    BYTE PTR [rax],al
   14000a0ab:	add    BYTE PTR [rax],al
   14000a0ad:	cwde   
	...
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	add    DWORD PTR [rax],eax
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	sbb    BYTE PTR [rax+0x0],bl
	...
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	add    DWORD PTR [rax],eax
   14000a0da:	add    BYTE PTR [rax],al
   14000a0dc:	sub    BYTE PTR [rax+0x0],bl
	...
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	add    DWORD PTR [rax],eax
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	push   rax
   14000a0f5:	cwde   
	...
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	add    al,BYTE PTR [rax]
   14000a10a:	add    BYTE PTR [rax],al
   14000a10c:	cmp    BYTE PTR [rax+0x0],bl
	...
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	add    DWORD PTR [rax],eax
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	(bad)  
   14000a125:	cwde   
	...
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	add    al,BYTE PTR [rax]
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	jo     0x14000a0d6
	...
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	add    DWORD PTR [rax],eax
	...
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	jo     0x14000a117
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	movabs al,ds:0xa14800009e
	...
   14000a16d:	add    BYTE PTR [rax],al
   14000a16f:	add    BYTE PTR [rcx],al
	...
   14000a17d:	ret    0x0
   14000a180:	mov    eax,0x7000009e
   14000a185:	movabs eax,ds:0x0
	...
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	add    DWORD PTR [rax],eax
	...
   14000a1a2:	add    BYTE PTR [rax],al
   14000a1a4:	push   rax
   14000a1a5:	ret    
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	add    BYTE PTR [rdi-0x5e680000],bl
	...
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	add    DWORD PTR [rax],eax
	...
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	loopne 0x14000a190
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	call   0x10000a273
   14000a1d5:	movabs eax,ds:0x0
	...
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	add    DWORD PTR [rax],eax
	...
   14000a1f2:	add    BYTE PTR [rax],al
   14000a1f4:	mov    al,0xc3
   14000a1f6:	add    BYTE PTR [rax],al
   14000a1f8:	sbb    BYTE PTR [rdi-0x5e180000],bl
	...
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	add    DWORD PTR [rax],eax
	...
   14000a21a:	add    BYTE PTR [rax],al
   14000a21c:	(bad)  
   14000a21d:	mov    BYTE PTR [rax],0x0
   14000a220:	test   al,0x9f
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	adc    BYTE PTR [rdx+0x0],ah
	...
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	add    DWORD PTR [rax],eax
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	or     BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	add    BYTE PTR [rax],al
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	mov    al,0xc6
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	rcr    BYTE PTR [rdi-0x5dc80000],0x0
	...
   14000a25f:	add    BYTE PTR [rcx],al
	...
   14000a269:	add    BYTE PTR [rax],al
   14000a26b:	add    BYTE PTR [rax-0x3fffff3a],dh
   14000a271:	lahf   
   14000a272:	add    BYTE PTR [rax],al
   14000a274:	(bad)  
   14000a275:	movabs ds:0x0,al
	...
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	add    DWORD PTR [rax],eax
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	or     BYTE PTR [rax],al
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	add    BYTE PTR [rax],al
   14000a292:	add    BYTE PTR [rax],al
   14000a294:	nop
   14000a295:	retf   0x0
   14000a298:	jo     0x14000a23a
   14000a29a:	add    BYTE PTR [rax],al
   14000a29c:	mov    BYTE PTR [rdx+0x0],ah
	...
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	add    DWORD PTR [rax],eax
	...
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	nop
   14000a2bd:	retf   0x0
   14000a2c0:	jo     0x14000a262
   14000a2c2:	add    BYTE PTR [rax],al
   14000a2c4:	mov    al,0xa2
	...
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	add    DWORD PTR [rax],eax
   14000a2e2:	add    BYTE PTR [rax],al
   14000a2e4:	pop    rax
   14000a2e5:	movabs ds:0x0,eax
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	or     BYTE PTR [rbx-0x5cd00000],ah
	...
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	cwde   
   14000a309:	int3   
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	add    DWORD PTR [rax],eax
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	add    BYTE PTR [rax],al
   14000a312:	add    BYTE PTR [rax],al
   14000a314:	(bad)  
   14000a315:	(bad)  
   14000a316:	(bad)  
   14000a317:	inc    DWORD PTR [rax]
   14000a319:	add    BYTE PTR [rax],al
   14000a31b:	add    BYTE PTR [rax+0x0],al
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	push   0xa3
	...
   14000a32d:	add    BYTE PTR [rax],al
   14000a32f:	add    BYTE PTR [rax-0x34],bh
	...
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	(bad)  
   14000a33d:	(bad)  
   14000a33e:	(bad)  
   14000a33f:	inc    DWORD PTR [rax]
   14000a341:	add    BYTE PTR [rax],al
   14000a343:	add    BYTE PTR [rax+0x0],al
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	fsub   DWORD PTR [rdx+0x0]
	...
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	xor    BYTE PTR [rbx+0x0],ah
	...
   14000a36e:	add    BYTE PTR [rax],al
   14000a370:	add    al,BYTE PTR [rax]
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	lock movabs ds:0x0,al
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	add    DWORD PTR [rax],eax
	...
   14000a38a:	add    BYTE PTR [rax],al
   14000a38c:	cwde   
   14000a38d:	int3   
   14000a38e:	add    BYTE PTR [rax],al
   14000a390:	push   0xffffffff800000a3
   14000a395:	movabs ds:0x0,eax
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	add    BYTE PTR [rax],al
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	push   rdx
   14000a3a5:	push   rbx
   14000a3a6:	rex.R push rbx
   14000a3a8:	jb     0x14000a3db
   14000a3aa:	neg    DWORD PTR [rcx]
   14000a3ac:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a3ad:	ret    0x4713
   14000a3b0:	(bad)  
   14000a3b1:	icebp  
   14000a3b2:	sub    al,0xe0
   14000a3b4:	(bad)  
   14000a3b5:	ins    DWORD PTR es:[rdi],dx
   14000a3b6:	repz (bad) 
   14000a3b8:	add    DWORD PTR [rax],eax
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	rex.WRB jo 0x14000a414
   14000a3bf:	js     0x14000a414
   14000a3c1:	jb     0x14000a439
   14000a3c3:	cs jo  0x14000a42a
   14000a3c6:	(bad)  
	...
   14000a3db:	add    BYTE PTR [rdi+0x43],al
   14000a3de:	push   rsp
   14000a3df:	rex.WR add BYTE PTR [rax],r10b
   14000a3e2:	add    BYTE PTR [rax],al
   14000a3e4:	add    QWORD PTR [rax],rax
   14000a3e7:	add    BYTE PTR [rsi],ch
   14000a3e9:	je     0x14000a450
   14000a3eb:	js     0x14000a461
   14000a3ed:	and    al,0x64
   14000a3ef:	imul   eax,DWORD PTR [rax],0x50000000
   14000a3f5:	adc    DWORD PTR [rax],eax
   14000a3f7:	add    BYTE PTR [rax+0x40],dh
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	cs je  0x14000a464
   14000a3ff:	js     0x14000a475
   14000a401:	and    al,0x6d
   14000a403:	outs   dx,BYTE PTR ds:[rsi]
   14000a404:	add    BYTE PTR [rax],al
   14000a406:	add    BYTE PTR [rax],al
   14000a408:	rcl    BYTE PTR [rcx+0x0],0x0
   14000a40c:	adc    al,BYTE PTR [rax]
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	cs je  0x14000a478
   14000a413:	js     0x14000a489
   14000a415:	and    al,0x6d
   14000a417:	outs   dx,BYTE PTR ds:[rsi]
   14000a418:	and    al,0x30
   14000a41a:	xor    BYTE PTR [rax],al
   14000a41c:	loopne 0x14000a46f
   14000a41e:	add    BYTE PTR [rax],al
   14000a420:	jo     0x14000a423
   14000a422:	add    BYTE PTR [rax],al
   14000a424:	cs je  0x14000a48c
   14000a427:	js     0x14000a49d
   14000a429:	and    al,0x78
   14000a42b:	add    BYTE PTR [rax+0x53],dl
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	mov    dl,0x0
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	cs je  0x14000a49c
   14000a437:	js     0x14000a4ad
   14000a439:	and    al,0x79
   14000a43b:	add    BYTE PTR fs:[rax],al
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	add    BYTE PTR [rax+0x0],ah
   14000a443:	add    BYTE PTR [rax+rax*1],al
   14000a446:	add    BYTE PTR [rax],al
   14000a448:	imul   ebp,DWORD PTR cs:[rbp+0x72],0x766973
   14000a450:	add    BYTE PTR [rax+0x0],dh
   14000a453:	add    BYTE PTR [rax],ch
   14000a455:	add    eax,DWORD PTR [rax]
   14000a457:	add    BYTE PTR [rsi],ch
   14000a459:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   14000a461:	add    BYTE PTR [rax],al
   14000a463:	add    BYTE PTR [rax],ch
   14000a465:	jae    0x14000a467
   14000a467:	add    BYTE PTR [rax],dl
   14000a469:	add    BYTE PTR [rax],al
   14000a46b:	add    BYTE PTR [rsi],ch
   14000a46d:	xor    BYTE PTR [rax],dh
   14000a46f:	movsxd esp,DWORD PTR [rsi+0x67]
   14000a472:	add    BYTE PTR [rax],al
   14000a474:	cmp    BYTE PTR [rbx+0x0],dh
   14000a477:	add    BYTE PTR [rax],cl
   14000a479:	add    BYTE PTR [rax],al
   14000a47b:	add    BYTE PTR [rsi],ch
   14000a47d:	rex.XB push r10
   14000a47f:	push   rsp
   14000a480:	and    al,0x58
   14000a482:	rex.XB
   14000a483:	add    BYTE PTR [r8],al
   14000a486:	add    BYTE PTR [rax],al
   14000a488:	rex jae 0x14000a48b
   14000a48b:	add    BYTE PTR [rax],cl
   14000a48d:	add    BYTE PTR [rax],al
   14000a48f:	add    BYTE PTR [rsi],ch
   14000a491:	rex.XB push r10
   14000a493:	push   rsp
   14000a494:	and    al,0x58
   14000a496:	rex.XB
   14000a497:	rex.B
   14000a498:	add    BYTE PTR [r8],al
   14000a49b:	add    BYTE PTR [rax+0x73],cl
   14000a49e:	add    BYTE PTR [rax],al
   14000a4a0:	xor    BYTE PTR [rax],al
   14000a4a2:	add    BYTE PTR [rax],al
   14000a4a4:	cs rex.XB push r10
   14000a4a7:	push   rsp
   14000a4a8:	and    al,0x58
   14000a4aa:	rex.XB push r13
   14000a4ac:	add    BYTE PTR [rax],al
   14000a4ae:	add    BYTE PTR [rax],al
   14000a4b0:	js     0x14000a525
   14000a4b2:	add    BYTE PTR [rax],al
   14000a4b4:	or     BYTE PTR [rax],al
   14000a4b6:	add    BYTE PTR [rax],al
   14000a4b8:	cs rex.XB push r10
   14000a4bb:	push   rsp
   14000a4bc:	and    al,0x58
   14000a4be:	rex.XB pop r10
   14000a4c0:	add    BYTE PTR [rax],al
   14000a4c2:	add    BYTE PTR [rax],al
   14000a4c4:	xor    BYTE PTR [rbx+0x0],0x0
   14000a4c8:	or     BYTE PTR [rax],al
   14000a4ca:	add    BYTE PTR [rax],al
   14000a4cc:	cs rex.XB push r10
   14000a4cf:	push   rsp
   14000a4d0:	and    al,0x58
   14000a4d2:	rex.WB
   14000a4d3:	add    BYTE PTR [r8],al
   14000a4d6:	add    BYTE PTR [rax],al
   14000a4d8:	mov    BYTE PTR [rbx+0x0],dh
   14000a4db:	add    BYTE PTR [rax],cl
   14000a4dd:	add    BYTE PTR [rax],al
   14000a4df:	add    BYTE PTR [rsi],ch
   14000a4e1:	rex.XB push r10
   14000a4e3:	push   rsp
   14000a4e4:	and    al,0x58
   14000a4e6:	rex.WB
   14000a4e7:	rex.B
   14000a4e8:	add    BYTE PTR [r8],al
   14000a4eb:	add    BYTE PTR [rax+0x8000073],dl
   14000a4f1:	add    BYTE PTR [rax],al
   14000a4f3:	add    BYTE PTR [rsi],ch
   14000a4f5:	rex.XB push r10
   14000a4f7:	push   rsp
   14000a4f8:	and    al,0x58
   14000a4fa:	rex.WB pop r9
   14000a4fc:	add    BYTE PTR [rax],al
   14000a4fe:	add    BYTE PTR [rax],al
   14000a500:	cwde   
   14000a501:	jae    0x14000a503
   14000a503:	add    BYTE PTR [rax],cl
   14000a505:	add    BYTE PTR [rax],al
   14000a507:	add    BYTE PTR [rsi],ch
   14000a509:	rex.XB push r10
   14000a50b:	push   rsp
   14000a50c:	and    al,0x58
   14000a50e:	rex.WB pop r10
   14000a510:	add    BYTE PTR [rax],al
   14000a512:	add    BYTE PTR [rax],al
   14000a514:	movabs al,ds:0x2e0000012c000073
   14000a51d:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14000a525:	add    BYTE PTR [rax],al
   14000a527:	add    al,dl
   14000a529:	je     0x14000a52b
   14000a52b:	add    BYTE PTR [rax+0x1d],dh
   14000a52e:	add    BYTE PTR [rax],al
   14000a530:	cs jb  0x14000a597
   14000a533:	(bad)  
   14000a534:	je     0x14000a597
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	rex xchg edx,eax
   14000a53a:	add    BYTE PTR [rax],al
   14000a53c:	adc    DWORD PTR fs:[rax],eax
   14000a53f:	add    BYTE PTR [rsi],ch
   14000a541:	jb     0x14000a5a7
   14000a543:	(bad)  
   14000a544:	je     0x14000a5a7
   14000a546:	and    al,0x72
   14000a548:	add    BYTE PTR [rax],al
   14000a54a:	add    BYTE PTR [rax],al
   14000a54c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a54d:	movabs ds:0x722e000002ec0000,eax
   14000a556:	fs (bad) 
   14000a558:	je     0x14000a5bb
   14000a55a:	and    al,0x7a
   14000a55c:	jp     0x14000a5d8
   14000a55e:	fs (bad) 
   14000a560:	add    BYTE PTR [eax],al
   14000a563:	add    BYTE PTR [rax+0x540000a6],dl
   14000a569:	add    eax,0x782e0000
   14000a56e:	fs (bad) 
   14000a570:	je     0x14000a5d3
   14000a572:	add    BYTE PTR [rax],al
   14000a574:	call   0x1bc00a624
   14000a579:	add    DWORD PTR [rax],eax
   14000a57b:	add    BYTE PTR [rsi],ch
   14000a57d:	js     0x14000a5e3
   14000a57f:	(bad)  
   14000a580:	je     0x14000a5e3
   14000a582:	and    al,0x78
   14000a584:	add    BYTE PTR [rax],al
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	push   0x80000ad
   14000a58d:	add    BYTE PTR [rax],al
   14000a58f:	add    BYTE PTR [rbp+0x69],ch
   14000a592:	outs   dx,BYTE PTR ds:[rsi]
   14000a593:	push   r12
   14000a595:	rex.WR and al,0x5f
   14000a598:	pop    rdi
   14000a599:	(bad)  
   14000a59a:	add    BYTE PTR [rax],al
   14000a59c:	jo     0x14000a54b
   14000a59e:	add    BYTE PTR [rax],al
   14000a5a0:	or     BYTE PTR [rax],al
   14000a5a2:	add    BYTE PTR [rax],al
   14000a5a4:	ins    DWORD PTR es:[rdi],dx
   14000a5a5:	imul   ebp,DWORD PTR [rsi+0x41],0x5f244c54
   14000a5ac:	pop    rdi
   14000a5ad:	data16 add BYTE PTR [rax],al
   14000a5b0:	js     0x14000a55f
   14000a5b2:	add    BYTE PTR [rax],al
   14000a5b4:	or     BYTE PTR [rax],al
   14000a5b6:	add    BYTE PTR [rax],al
   14000a5b8:	ins    DWORD PTR es:[rdi],dx
   14000a5b9:	imul   ebp,DWORD PTR [rsi+0x41],0x5f244c54
   14000a5c0:	pop    rdi
   14000a5c1:	ins    DWORD PTR es:[rdi],dx
   14000a5c2:	add    BYTE PTR [rax],al
   14000a5c4:	sub    BYTE PTR [rbp+0x80000],0x0
   14000a5cb:	add    BYTE PTR [rbp+0x69],ch
   14000a5ce:	outs   dx,BYTE PTR ds:[rsi]
   14000a5cf:	push   r12
   14000a5d1:	rex.WR and al,0x5f
   14000a5d4:	pop    rdi
   14000a5d5:	jp     0x14000a5d7
   14000a5d7:	add    BYTE PTR [rax-0x4bffff53],cl
   14000a5dd:	add    BYTE PTR [rax],al
   14000a5df:	add    BYTE PTR [rsi],ch
   14000a5e1:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000a5e9:	add    BYTE PTR [rax],al
   14000a5eb:	add    BYTE PTR [rsi+rbp*4],bh
   14000a5ee:	add    BYTE PTR [rax],al
   14000a5f0:	adc    al,0x0
   14000a5f2:	add    BYTE PTR [rax],al
   14000a5f4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000a5fd:	add    BYTE PTR [rax],al
   14000a5ff:	add    BYTE PTR [rax-0x52],dl
   14000a602:	add    BYTE PTR [rax],al
   14000a604:	sub    BYTE PTR [rbx],al
   14000a606:	add    BYTE PTR [rax],al
   14000a608:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   14000a611:	add    BYTE PTR [rax],al
   14000a613:	add    BYTE PTR [rax-0x4f],bh
   14000a616:	add    BYTE PTR [rax],al
   14000a618:	rol    BYTE PTR [rdi],0x0
   14000a61b:	add    BYTE PTR [rsi],ch
   14000a61d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000a625:	add    BYTE PTR [rax],al
   14000a627:	add    BYTE PTR [rax],al
   14000a629:	rol    BYTE PTR [rax],0x0
   14000a62c:	add    BYTE PTR [rax],al
   14000a62f:	add    BYTE PTR [rsi],ch
   14000a631:	fs (bad) 
   14000a633:	je     0x14000a696
   14000a635:	add    BYTE PTR [rax],al
   14000a637:	add    BYTE PTR [rax-0x40],al
   14000a63a:	add    BYTE PTR [rax],al
   14000a63c:	or     ecx,DWORD PTR [rip+0x642e0000]        # 0x1a42ea642
   14000a642:	(bad)  
   14000a643:	je     0x14000a6a6
   14000a645:	and    al,0x72
   14000a647:	add    BYTE PTR [rax-0x33],dl
   14000a64a:	add    BYTE PTR [rax],al
   14000a64c:	add    BYTE PTR [rdi],0x0
   14000a64f:	add    BYTE PTR [rsi],ch
   14000a651:	(bad)  
   14000a653:	jae    0x14000a655
   14000a655:	add    BYTE PTR [rax],al
   14000a657:	add    BYTE PTR [rax],al
   14000a659:	loopne 0x14000a65b
   14000a65b:	add    BYTE PTR [rax],ch
   14000a65d:	add    eax,0x702e0000
   14000a662:	fs (bad) 
   14000a664:	je     0x14000a6c7
   14000a666:	add    BYTE PTR [rax],al
   14000a668:	add    al,dh
   14000a66a:	add    BYTE PTR [rax],al
   14000a66c:	movabs al,ds:0x637273722e000000
   14000a675:	and    al,0x30
   14000a677:	xor    DWORD PTR [rax],eax
   14000a679:	add    BYTE PTR [rax],al
   14000a67b:	add    BYTE PTR [rax+0x300000f0],ah
   14000a681:	or     al,0x0
   14000a683:	add    BYTE PTR [rsi],ch
   14000a685:	jb     0x14000a6fa
   14000a687:	jb     0x14000a6ec
   14000a689:	and    al,0x30
   14000a68b:	xor    al,BYTE PTR [rax]
   14000a68d:	add    BYTE PTR [rax],al
   14000a68f:	add    BYTE PTR [rcx],al
   14000a691:	(bad)  
   14000a692:	add    al,BYTE PTR [rax]
   14000a694:	(bad)  
   14000a695:	xor    al,BYTE PTR [rdx]
   14000a697:	xor    BYTE PTR [rcx],al
   14000a699:	adc    eax,0x74150008
   14000a69e:	or     al,BYTE PTR [rax]
   14000a6a0:	adc    eax,0x15000964
   14000a6a5:	xor    al,0x8
   14000a6a7:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0b7ff
   14000a6ad:	or     al,BYTE PTR [rax+rax*1]
   14000a6b0:	or     dh,BYTE PTR [rax+rcx*1]
   14000a6b3:	add    BYTE PTR [rdx],cl
   14000a6b5:	push   rdx
   14000a6b6:	(bad)  
   14000a6b7:	jo     0x14000a6ba
   14000a6b9:	(bad)  
   14000a6ba:	add    al,BYTE PTR [rax]
   14000a6bc:	(bad)  
   14000a6bd:	push   rdx
   14000a6be:	add    dh,BYTE PTR [rax]
   14000a6c0:	add    DWORD PTR [rdx],ecx
   14000a6c2:	add    al,0x0
   14000a6c4:	or     dh,BYTE PTR [rsi+rax*1]
   14000a6c7:	add    BYTE PTR [rdx],cl
   14000a6c9:	xor    al,BYTE PTR [rsi]
   14000a6cb:	jo     0x14000a6ce
   14000a6cd:	clts   
   14000a6cf:	add    BYTE PTR [rdi],cl
   14000a6d1:	fs (bad) 
   14000a6d3:	add    BYTE PTR [rdi],cl
   14000a6d5:	xor    al,0x6
   14000a6d7:	add    BYTE PTR [rdi],cl
   14000a6d9:	xor    cl,BYTE PTR [rbx]
   14000a6db:	jo     0x14000a6de
   14000a6dd:	add    al,0x1
   14000a6df:	add    BYTE PTR [rdx+rax*2],al
   14000a6e2:	add    BYTE PTR [rax],al
   14000a6e4:	add    DWORD PTR [rax+rcx*1],edx
   14000a6e7:	add    BYTE PTR [rsp+riz*2],dl
   14000a6ea:	or     BYTE PTR [rax],al
   14000a6ec:	adc    al,0x54
   14000a6ee:	(bad)  
   14000a6ef:	add    BYTE PTR [rsp+rsi*1],dl
   14000a6f2:	(bad)  
   14000a6f3:	add    BYTE PTR [rdx+rsi*1],dl
   14000a6f6:	adc    BYTE PTR [rax+0x19],dh
   14000a6f9:	and    BYTE PTR [rip+0x14621800],al        # 0x15462beff
   14000a6ff:	loopne 0x14000a713
   14000a701:	jo     0x14000a714
   14000a703:	(bad)  
   14000a704:	adc    BYTE PTR [rax],dh
   14000a706:	add    BYTE PTR [rax],al
   14000a708:	jo     0x14000a755
   14000a70a:	add    BYTE PTR [rax],al
   14000a70c:	rcl    BYTE PTR [rax-0x10000],0xff
   14000a713:	inc    DWORD PTR [rax]
   14000a715:	add    BYTE PTR [rax],al
   14000a717:	add    bh,bh
   14000a719:	(bad)  
   14000a71a:	(bad)  
   14000a71b:	inc    DWORD PTR [rax]
   14000a71d:	add    BYTE PTR [rax],al
   14000a71f:	add    BYTE PTR [rcx],al
   14000a721:	add    BYTE PTR [rax],al
   14000a723:	add    BYTE PTR [rax],al
   14000a725:	add    BYTE PTR [rax],al
   14000a727:	add    BYTE PTR [rcx],al
	...
   14000a735:	add    BYTE PTR [rax],al
   14000a737:	add    BYTE PTR [rbx],al
   14000a739:	add    BYTE PTR [rax],al
   14000a73b:	add    BYTE PTR [rcx],al
   14000a73d:	add    BYTE PTR [rax],al
   14000a73f:	add    BYTE PTR [rax-0x59],bl
   14000a742:	add    BYTE PTR [rax],al
   14000a744:	add    al,BYTE PTR [rax]
   14000a746:	add    BYTE PTR [rax],al
   14000a748:	add    al,BYTE PTR [rax]
   14000a74a:	add    BYTE PTR [rax],al
   14000a74c:	add    eax,DWORD PTR [rax]
   14000a74e:	add    BYTE PTR [rax],al
   14000a750:	add    DWORD PTR [rax],eax
   14000a752:	add    BYTE PTR [rax],al
   14000a754:	ins    BYTE PTR es:[rdi],dx
   14000a755:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a756:	add    BYTE PTR [rax],al
   14000a758:	add    BYTE PTR [rax],al
	...
   14000a763:	add    dh,ah
   14000a765:	push   rcx
   14000a766:	add    BYTE PTR [rax],al
   14000a768:	cmp    BYTE PTR [rax],al
   14000a76a:	add    BYTE PTR [rax],al
   14000a76c:	add    BYTE PTR [rax],al
	...
   14000a777:	add    BYTE PTR [rdi],ah
   14000a779:	push   rdx
   14000a77a:	add    BYTE PTR [rax],al
   14000a77c:	cmp    BYTE PTR [rax],al
   14000a77e:	add    BYTE PTR [rax],al
   14000a780:	sub    al,0x17
   14000a782:	add    BYTE PTR [rax],al
   14000a784:	(bad)  
   14000a785:	(bad)  
   14000a786:	(bad)  
   14000a787:	call   FWORD PTR [rbx+0x17]
   14000a78d:	add    BYTE PTR [rax],al
   14000a78f:	add    BYTE PTR [rbp-0xffffe9],bh
   14000a795:	(bad)  
   14000a796:	(bad)  
   14000a797:	jmp    rsi
   14000a799:	push   rcx
   14000a79a:	add    BYTE PTR [rax],al
   14000a79c:	add    BYTE PTR [rax],al
   14000a79e:	add    BYTE PTR [rax],al
   14000a7a0:	repz push rcx
   14000a7a2:	add    BYTE PTR [rax],al
   14000a7a4:	add    DWORD PTR [rax],eax
   14000a7a6:	add    BYTE PTR [rax],al
   14000a7a8:	sti    
   14000a7a9:	push   rcx
   14000a7aa:	add    BYTE PTR [rax],al
   14000a7ac:	add    al,BYTE PTR [rax]
   14000a7ae:	add    BYTE PTR [rax],al
   14000a7b0:	sbb    DWORD PTR [rdx+0x0],edx
   14000a7b3:	add    BYTE PTR [rax],al
   14000a7b5:	add    BYTE PTR [rax],al
   14000a7b7:	add    BYTE PTR [rdx+rdx*2],dh
   14000a7ba:	add    BYTE PTR [rax],al
   14000a7bc:	add    eax,DWORD PTR [rax]
   14000a7be:	add    BYTE PTR [rax],al
   14000a7c0:	sbb    DWORD PTR [rdx],ecx
   14000a7c2:	add    al,BYTE PTR [rax]
   14000a7c4:	or     dh,BYTE PTR [rdx]
   14000a7c6:	(bad)  
   14000a7c7:	push   rax
   14000a7c8:	jo     0x14000a815
   14000a7ca:	add    BYTE PTR [rax],al
   14000a7cc:	rcl    BYTE PTR [rax+0x1b010000],0xa
   14000a7d3:	add    BYTE PTR [rbx],bl
   14000a7d5:	push   rsp
   14000a7d6:	or     al,0x0
   14000a7d8:	sbb    esi,DWORD PTR [rdx+rcx*1]
   14000a7db:	add    BYTE PTR [rbx],bl
   14000a7dd:	xor    dl,BYTE PTR [rdi]
   14000a7df:	loopne 0x14000a7f6
   14000a7e1:	rcl    BYTE PTR [rbx],1
   14000a7e3:	rcl    BYTE PTR [rcx],0x70
   14000a7e6:	adc    BYTE PTR [rax+0x1],ah
   14000a7e9:	(bad)  
   14000a7ea:	or     BYTE PTR [rax],al
   14000a7ec:	(bad)  
   14000a7ed:	or     eax,DWORD PTR fs:[rax]
   14000a7f0:	(bad)  
   14000a7f1:	xor    al,0x9
   14000a7f3:	add    BYTE PTR [rsi],bl
   14000a7f5:	xor    dl,BYTE PTR [rdi]
   14000a7f7:	loopne 0x14000a80e
   14000a7f9:	jo     0x14000a80f
   14000a7fb:	push   rax
   14000a7fc:	add    DWORD PTR [rsp+rcx*1],ebx
   14000a7ff:	add    BYTE PTR [rsp+riz*2],bl
   14000a802:	or     al,0x0
   14000a804:	sbb    al,0x54
   14000a806:	or     eax,DWORD PTR [rax]
   14000a808:	sbb    al,0x34
   14000a80a:	or     al,BYTE PTR [rax]
   14000a80c:	sbb    al,0x32
   14000a80e:	sbb    al,dh
   14000a810:	(bad)  
   14000a811:	loopne 0x14000a827
   14000a813:	rcl    BYTE PTR [rdx],1
   14000a815:	rcl    BYTE PTR [rax],0x70
   14000a818:	add    DWORD PTR [rcx+rax*1],eax
   14000a81b:	add    BYTE PTR [rdx+riz*2],al
   14000a81e:	add    BYTE PTR [rax],al
   14000a820:	add    DWORD PTR [rbx],ecx
   14000a822:	add    DWORD PTR [rax],eax
   14000a824:	or     eax,DWORD PTR [rdx+0xf010000]
   14000a82a:	(bad)  
   14000a82b:	add    BYTE PTR [rdi],cl
   14000a82d:	or     eax,DWORD PTR fs:[rax]
   14000a830:	sysenter 
   14000a832:	or     al,BYTE PTR [rax]
   14000a834:	(bad)  
   14000a836:	or     esi,DWORD PTR [rax+0x1]
   14000a839:	clts   
   14000a83b:	add    BYTE PTR [rdi],cl
   14000a83d:	or     DWORD PTR fs:[rax],eax
   14000a840:	sysenter 
   14000a842:	or     BYTE PTR [rax],al
   14000a844:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000a847:	jo     0x14000a84a
   14000a849:	adc    eax,0x74150008
   14000a84e:	(bad)  
   14000a84f:	add    BYTE PTR [rip+0x15000d64],dl        # 0x15500b5b9
   14000a855:	xor    al,0xc
   14000a857:	add    BYTE PTR [rip+0x1e01192],dl        # 0x141e0b9ef
   14000a85d:	sbb    DWORD PTR [rdx],ecx
   14000a85f:	add    BYTE PTR [rcx],bl
   14000a861:	in     al,0xb
   14000a863:	add    BYTE PTR [rcx],bl
   14000a865:	je     0x14000a871
   14000a867:	add    BYTE PTR [rcx],bl
   14000a869:	or     DWORD PTR fs:[rax],eax
   14000a86c:	sbb    DWORD PTR [rax+rcx*1],esi
   14000a86f:	add    BYTE PTR [rcx],bl
   14000a871:	push   rdx
   14000a872:	adc    eax,0xc1d01f0
   14000a877:	add    BYTE PTR [rip+0x1d000b74],bl        # 0x15d00b3f1
   14000a87d:	or     al,BYTE PTR fs:[rax]
   14000a880:	sbb    eax,0x1d000954
   14000a885:	xor    al,0x8
   14000a887:	add    BYTE PTR [rip+0x17f01932],bl        # 0x157f0c1bf
   14000a88d:	loopne 0x14000a8a4
   14000a88f:	rol    BYTE PTR [rcx],1
   14000a891:	sbb    DWORD PTR [rdx],ecx
   14000a893:	add    BYTE PTR [rcx],bl
   14000a895:	je     0x14000a8a2
   14000a897:	add    BYTE PTR [rcx],bl
   14000a899:	or     al,BYTE PTR fs:[rax]
   14000a89c:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14000a8a0:	sbb    DWORD PTR [rax+rcx*1],esi
   14000a8a3:	add    BYTE PTR [rcx],bl
   14000a8a5:	push   rdx
   14000a8a6:	adc    eax,0x91a01e0
   14000a8ab:	add    BYTE PTR [rdx],bl
   14000a8ad:	(bad)  
   14000a8ae:	(bad)  
   14000a8af:	lock adc al,0xe0
   14000a8b2:	adc    dl,al
   14000a8b4:	adc    al,al
   14000a8b6:	(bad)  
   14000a8b7:	jo     0x14000a8c6
   14000a8b9:	(bad)  
   14000a8ba:	or     al,0x50
   14000a8bc:	or     esi,DWORD PTR [rax]
   14000a8be:	add    BYTE PTR [rax],al
   14000a8c0:	add    DWORD PTR [rdx],edx
   14000a8c2:	or     BYTE PTR [rax],al
   14000a8c4:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   14000a8c8:	adc    dh,BYTE PTR [rax+rcx*1]
   14000a8cb:	add    BYTE PTR [rdx],dl
   14000a8cd:	xor    cl,BYTE PTR [rsi]
   14000a8cf:	loopne 0x14000a8dd
   14000a8d1:	jo     0x14000a8de
   14000a8d3:	(bad)  
   14000a8d4:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415a8e2
   14000a8da:	or     BYTE PTR [rax],al
   14000a8dc:	adc    eax,0x15000764
   14000a8e1:	xor    al,0x6
   14000a8e3:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e0ba1b
   14000a8e9:	and    DWORD PTR [rax],ecx
   14000a8eb:	add    BYTE PTR [rdx],dl
   14000a8ed:	push   rsp
   14000a8ee:	adc    eax,0x14341200
   14000a8f3:	add    BYTE PTR [rdx],dl
   14000a8f5:	ror    BYTE PTR [rsi],cl
   14000a8f7:	loopne 0x14000a905
   14000a8f9:	jo     0x14000a906
   14000a8fb:	(bad)  
   14000a8fc:	mov    BYTE PTR [rax+0x0],dl
   14000a8ff:	add    BYTE PTR [rax+0x0],ah
   14000a902:	add    BYTE PTR [rax],al
   14000a904:	add    DWORD PTR [rcx+rax*1],eax
   14000a907:	add    BYTE PTR [rdx+rax*4],al
   14000a90a:	add    BYTE PTR [rax],al
   14000a90c:	add    DWORD PTR [rsi],eax
   14000a90e:	add    al,BYTE PTR [rax]
   14000a910:	(bad)  
   14000a911:	mov    dl,0x2
   14000a913:	jo     0x14000a92e
   14000a915:	xor    ecx,DWORD PTR [rbx]
   14000a917:	add    BYTE PTR [rip+0x19003134],ah        # 0x15900da51
   14000a91d:	add    DWORD PTR [rsi],esp
   14000a91f:	add    BYTE PTR [rsi],cl
   14000a921:	lock or al,0xe0
   14000a924:	or     dl,al
   14000a926:	or     al,al
   14000a928:	(bad)  
   14000a929:	jo     0x14000a930
   14000a92b:	(bad)  
   14000a92c:	add    al,0x50
   14000a92e:	add    BYTE PTR [rax],al
   14000a930:	sbb    BYTE PTR [rcx+0x0],dl
   14000a933:	add    al,ch
   14000a935:	nop
   14000a936:	add    BYTE PTR [rax],al
   14000a938:	sub    al,BYTE PTR [rcx]
   14000a93a:	add    BYTE PTR [rax],al
   14000a93c:	(bad)  
   14000a93d:	(bad)  
   14000a93e:	(bad)  
   14000a93f:	call   QWORD PTR [rdx+0x52]
   14000a942:	add    BYTE PTR [rax],al
   14000a944:	add    BYTE PTR [rax],al
   14000a946:	add    BYTE PTR [rax],al
   14000a948:	pop    rsi
   14000a949:	push   rdx
   14000a94a:	add    BYTE PTR [rax],al
   14000a94c:	add    DWORD PTR [rax],eax
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	push   0x52
   14000a952:	add    BYTE PTR [rax],al
   14000a954:	add    al,BYTE PTR [rax]
   14000a956:	add    BYTE PTR [rax],al
   14000a958:	jbe    0x14000a9ac
   14000a95a:	add    BYTE PTR [rax],al
   14000a95c:	add    eax,DWORD PTR [rax]
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	(bad)  
   14000a961:	push   rdx
	...
   14000a96e:	add    BYTE PTR [rax],al
   14000a970:	sub    al,0x38
   14000a972:	add    BYTE PTR [rax],al
   14000a974:	(bad)  
   14000a975:	(bad)  
   14000a976:	(bad)  
   14000a977:	call   QWORD PTR [rax+0x38]
   14000a97d:	add    BYTE PTR [rax],al
   14000a97f:	add    BYTE PTR [rax+rdi*1+0x10000],dl
   14000a986:	add    BYTE PTR [rax],al
   14000a988:	movabs ds:0xa900000002000038,eax
   14000a991:	cmp    BYTE PTR [rax],al
   14000a993:	add    BYTE PTR [rbx],al
   14000a995:	add    BYTE PTR [rax],al
   14000a997:	add    BYTE PTR [rax+rdi*1+0x40000],dh
   14000a99e:	add    BYTE PTR [rax],al
   14000a9a0:	(bad)  
   14000a9a1:	cmp    eax,DWORD PTR [rax]
   14000a9a3:	add    BYTE PTR [rbx],al
   14000a9a5:	add    BYTE PTR [rax],al
   14000a9a7:	add    BYTE PTR [rcx+0x3b],dh
   14000a9aa:	add    BYTE PTR [rax],al
   14000a9ac:	add    al,BYTE PTR [rax]
   14000a9ae:	add    BYTE PTR [rax],al
   14000a9b0:	cmp    BYTE PTR [rbx],0x0
   14000a9b3:	add    BYTE PTR [rcx],al
   14000a9b5:	add    BYTE PTR [rax],al
   14000a9b7:	add    BYTE PTR [rdi+0x3b],cl
   14000a9bd:	add    BYTE PTR [rax],al
   14000a9bf:	add    BYTE PTR [rsi-0xffffc5],ch
   14000a9c5:	(bad)  
   14000a9c6:	(bad)  
   14000a9c7:	inc    DWORD PTR [rcx]
   14000a9c9:	add    al,0x1
   14000a9cb:	add    BYTE PTR [rdx+riz*4],al
   14000a9ce:	add    BYTE PTR [rax],al
   14000a9d0:	sbb    DWORD PTR [rdx],ebp
   14000a9d2:	or     DWORD PTR [rax],eax
   14000a9d4:	sbb    BYTE PTR [rdi+rcx*2+0x0],dh
   14000a9d8:	sbb    BYTE PTR [rsi+rcx*2+0x0],ah
   14000a9dc:	sbb    BYTE PTR [rcx*2+0x4a011800],dh
   14000a9e3:	add    BYTE PTR [rcx],dl
   14000a9e5:	loopne 0x14000a9e7
   14000a9e7:	add    BYTE PTR [rax+0x40000050],cl
   14000a9ed:	add    al,BYTE PTR [rax]
   14000a9ef:	add    BYTE PTR [rcx],al
   14000a9f1:	sbb    eax,0x741d000c
   14000a9f6:	or     eax,DWORD PTR [rax]
   14000a9f8:	sbb    eax,0x1d000a64
   14000a9fd:	push   rsp
   14000a9fe:	or     DWORD PTR [rax],eax
   14000aa00:	sbb    eax,0x1d000834
   14000aa05:	xor    bl,BYTE PTR [rcx]
   14000aa07:	lock (bad) 
   14000aa09:	loopne 0x14000aa20
   14000aa0b:	rol    BYTE PTR [rcx],0xc
   14000aa0e:	add    al,0x0
   14000aa10:	or     al,0x34
   14000aa12:	or     DWORD PTR [rax],eax
   14000aa14:	or     al,0x52
   14000aa16:	or     BYTE PTR [rax+0x1],dh
   14000aa19:	adc    eax,DWORD PTR [rcx]
   14000aa1b:	add    BYTE PTR [rbx],dl
   14000aa1d:	rex.X add BYTE PTR [rax],al
   14000aa20:	sbb    DWORD PTR [rcx+rcx*1],esp
   14000aa23:	add    BYTE PTR [rdx],dl
   14000aa25:	add    DWORD PTR [rax+rax*1+0xb],ecx
   14000aa29:	lock or eax,esp
   14000aa2c:	(bad)  
   14000aa2d:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14360aea4
   14000aa34:	add    dh,BYTE PTR [rax]
   14000aa36:	add    BYTE PTR [rax],al
   14000aa38:	mov    BYTE PTR [rax+0x0],dl
   14000aa3b:	add    BYTE PTR [rax+0x2],dl
   14000aa3e:	add    BYTE PTR [rax],al
   14000aa40:	add    DWORD PTR [rdx],edx
   14000aa42:	or     BYTE PTR [rax],al
   14000aa44:	adc    dl,BYTE PTR [rcx+rcx*1+0x0]
   14000aa48:	adc    dh,BYTE PTR [rax+rcx*1]
   14000aa4b:	add    BYTE PTR [rdx],dl
   14000aa4d:	xor    cl,BYTE PTR [rsi]
   14000aa4f:	loopne 0x14000aa5d
   14000aa51:	jo     0x14000aa5e
   14000aa53:	(bad)  
   14000aa54:	sbb    DWORD PTR [rbx],edx
   14000aa56:	add    al,BYTE PTR [rax]
   14000aa58:	or     dl,BYTE PTR [rdx+0x6]
   14000aa5b:	xor    BYTE PTR [rax+0x4b],dh
   14000aa5e:	add    BYTE PTR [rax],al
   14000aa60:	adc    BYTE PTR [rcx-0x10000],dl
   14000aa66:	(bad)  
   14000aa67:	inc    DWORD PTR [rax]
   14000aa69:	add    BYTE PTR [rax],al
   14000aa6b:	add    bh,bh
   14000aa6d:	(bad)  
   14000aa6e:	(bad)  
   14000aa6f:	inc    DWORD PTR [rax]
	...
   14000aa79:	add    BYTE PTR [rax],al
   14000aa7b:	add    BYTE PTR [rcx],al
   14000aa7d:	add    BYTE PTR [rax],al
   14000aa7f:	add    BYTE PTR [rdx],al
   14000aa81:	add    BYTE PTR [rax],al
   14000aa83:	add    BYTE PTR [rax+0x90000aa],cl
   14000aa89:	add    BYTE PTR [rax],al
   14000aa8b:	add    BYTE PTR [rax-0x34],bh
   14000aa8e:	add    BYTE PTR [rax],al
   14000aa90:	sub    BYTE PTR [rax],al
   14000aa92:	add    BYTE PTR [rax],al
   14000aa94:	xchg   esp,eax
   14000aa95:	push   rdx
   14000aa96:	add    BYTE PTR [rax],al
   14000aa98:	cmp    BYTE PTR [rax],al
   14000aa9a:	add    BYTE PTR [rax],al
   14000aa9c:	add    BYTE PTR [rax],al
	...
   14000aaa7:	add    BYTE PTR [rbx+0x38000052],bh
   14000aaad:	add    BYTE PTR [rax],al
   14000aaaf:	add    BYTE PTR [rsp+rax*2],bl
   14000aab2:	add    BYTE PTR [rax],al
   14000aab4:	(bad)  
   14000aab5:	(bad)  
   14000aab6:	(bad)  
   14000aab7:	jmp    FWORD PTR [rdi]
   14000aab9:	add    BYTE PTR [rax],r8b
   14000aabc:	add    BYTE PTR [rax],al
   14000aabe:	add    BYTE PTR [rax],al
   14000aac0:	cmp    DWORD PTR [rax+rax*1+0x0],eax
   14000aac4:	(bad)  
   14000aac5:	(bad)  
   14000aac6:	(bad)  
   14000aac7:	call   QWORD PTR [rdx+rdx*2+0x0]
   14000aace:	add    BYTE PTR [rax],al
   14000aad0:	movabs eax,ds:0xad00000001000052
   14000aad9:	push   rdx
   14000aada:	add    BYTE PTR [rax],al
   14000aadc:	add    BYTE PTR [rax],al
   14000aade:	add    BYTE PTR [rax],al
   14000aae0:	enter  0x52,0x0
   14000aae4:	add    DWORD PTR [rax],eax
   14000aae6:	add    BYTE PTR [rax],al
   14000aae8:	iret   
   14000aae9:	push   rdx
   14000aaea:	add    BYTE PTR [rax],al
   14000aaec:	add    BYTE PTR [rax],al
   14000aaee:	add    BYTE PTR [rax],al
   14000aaf0:	sbb    DWORD PTR [rdx],ecx
   14000aaf2:	add    al,BYTE PTR [rax]
   14000aaf4:	or     dh,BYTE PTR [rdx]
   14000aaf6:	(bad)  
   14000aaf7:	push   rax
   14000aaf8:	jo     0x14000ab45
   14000aafa:	add    BYTE PTR [rax],al
   14000aafc:	adc    BYTE PTR [rcx+0xa010000],dl
   14000ab02:	add    al,BYTE PTR [rax]
   14000ab04:	or     dh,BYTE PTR [rdx]
   14000ab06:	(bad)  
   14000ab07:	xor    BYTE PTR [rcx],cl
   14000ab09:	sbb    al,0xb
   14000ab0b:	add    BYTE PTR [rsp+rsi*2],bl
   14000ab0e:	sbb    al,0x0
   14000ab10:	sbb    al,0x64
   14000ab12:	sbb    eax,DWORD PTR [rax]
   14000ab14:	sbb    al,0x34
   14000ab16:	sbb    al,BYTE PTR [rax]
   14000ab18:	sbb    al,0x1
   14000ab1a:	(bad)  
   14000ab1b:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0bf11
   14000ab21:	rol    BYTE PTR [rax],0x0
   14000ab24:	xchg   esi,eax
   14000ab25:	rex.WRX add BYTE PTR [rax],r8b
   14000ab28:	add    DWORD PTR [rax],eax
   14000ab2a:	add    BYTE PTR [rax],al
   14000ab2c:	add    BYTE PTR [rdi+0x0],0x0
   14000ab30:	jbe    0x14000ab7b
   14000ab32:	add    BYTE PTR [rax],al
   14000ab34:	jrcxz  0x14000ab88
   14000ab36:	add    BYTE PTR [rax],al
   14000ab38:	jbe    0x14000ab83
   14000ab3a:	add    BYTE PTR [rax],al
   14000ab3c:	add    BYTE PTR [rax],al
   14000ab3e:	add    BYTE PTR [rax],al
   14000ab40:	add    DWORD PTR [rax],eax
   14000ab42:	add    BYTE PTR [rax],al
   14000ab44:	adc    DWORD PTR [rdx],ecx
   14000ab46:	add    al,0x0
   14000ab48:	or     dh,BYTE PTR [rsi+rax*1]
   14000ab4b:	add    BYTE PTR [rdx],cl
   14000ab4d:	xor    al,BYTE PTR [rsi]
   14000ab4f:	jo     0x14000aae7
   14000ab51:	rex.WRX add BYTE PTR [rax],r8b
   14000ab54:	add    DWORD PTR [rax],eax
   14000ab56:	add    BYTE PTR [rax],al
   14000ab58:	rex.WX add BYTE PTR gs:[rax],al
   14000ab5c:	stos   BYTE PTR es:[rdi],al
   14000ab5d:	rex.WX add BYTE PTR [rax],al
   14000ab60:	(bad)  
   14000ab61:	push   rbx
   14000ab62:	add    BYTE PTR [rax],al
   14000ab64:	add    BYTE PTR [rax],al
   14000ab66:	add    BYTE PTR [rax],al
   14000ab68:	or     DWORD PTR [rcx+rax*1],eax
   14000ab6b:	add    BYTE PTR [rdx+riz*1],al
   14000ab6e:	add    BYTE PTR [rax],al
   14000ab70:	xchg   esi,eax
   14000ab71:	rex.WRX add BYTE PTR [rax],r8b
   14000ab74:	add    DWORD PTR [rax],eax
   14000ab76:	add    BYTE PTR [rax],al
   14000ab78:	sub    al,0x4c
   14000ab7a:	add    BYTE PTR [rax],al
   14000ab7c:	(bad)  
   14000ab7d:	rex.WR add BYTE PTR [rax],r8b
   14000ab80:	add    DWORD PTR [rax],eax
   14000ab82:	add    BYTE PTR [rax],al
   14000ab84:	(bad)  
   14000ab85:	rex.WR add BYTE PTR [rax],r8b
   14000ab88:	or     DWORD PTR [rdx],ecx
   14000ab8a:	add    al,0x0
   14000ab8c:	or     dh,BYTE PTR [rsi+rax*1]
   14000ab8f:	add    BYTE PTR [rdx],cl
   14000ab91:	xor    al,BYTE PTR [rsi]
   14000ab93:	jo     0x14000ab2b
   14000ab95:	rex.WRX add BYTE PTR [rax],r8b
   14000ab98:	add    DWORD PTR [rax],eax
   14000ab9a:	add    BYTE PTR [rax],al
   14000ab9c:	sub    eax,0x6000004d
   14000aba1:	rex.WRB add BYTE PTR [r8],r8b
   14000aba4:	xor    BYTE PTR [rbx+0x0],dl
   14000aba7:	add    BYTE PTR [rax+0x4d],ah
   14000abaa:	add    BYTE PTR [rax],al
   14000abac:	add    DWORD PTR [rsi],eax
   14000abae:	add    al,BYTE PTR [rax]
   14000abb0:	(bad)  
   14000abb1:	xor    al,BYTE PTR [rdx]
   14000abb3:	push   rax
   14000abb4:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dabbe
   14000abba:	or     DWORD PTR [rax],eax
   14000abbc:	or     eax,0x1500632
   14000abc1:	or     al,0x2
   14000abc3:	add    BYTE PTR [rcx+rax*1],cl
   14000abc6:	adc    DWORD PTR [rax],eax
   14000abc8:	add    DWORD PTR [rax],eax
   14000abca:	add    BYTE PTR [rax],al
   14000abcc:	add    DWORD PTR [rcx],ebx
   14000abce:	or     al,BYTE PTR [rax]
   14000abd0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14000abd4:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   14000abd8:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000abdc:	sbb    DWORD PTR [rsi+rax*1],esi
   14000abdf:	add    BYTE PTR [rcx],bl
   14000abe1:	xor    dl,BYTE PTR [rip+0xe0]        # 0x14000acc7
   14000abe7:	add    BYTE PTR [rax],al
   14000abe9:	add    BYTE PTR [rax],al
   14000abeb:	add    BYTE PTR [rax-0x40],al
   14000abee:	add    BYTE PTR [rax],al
   14000abf0:	add    BYTE PTR [rax],al
   14000abf2:	add    BYTE PTR [rax],al
   14000abf4:	(bad)  
   14000abf5:	(bad)  
   14000abf6:	(bad)  
   14000abf7:	inc    DWORD PTR [rax]
   14000abf9:	add    BYTE PTR [rax],al
   14000abfb:	add    BYTE PTR [rax],bl
   14000abfd:	add    BYTE PTR [rax],al
   14000abff:	add    BYTE PTR [rax*2+0x0],ah
	...
   14000ac12:	add    BYTE PTR [rax],al
   14000ac14:	rex.WR
   14000ac15:	add    BYTE PTR [r8],r8b
   14000ac18:	add    BYTE PTR [rax],al
   14000ac1a:	add    BYTE PTR [rax],al
   14000ac1c:	xor    BYTE PTR [rax+rax*1+0x0],ch
	...
   14000ac2f:	add    BYTE PTR [rbx],al
   14000ac31:	add    BYTE PTR [rax],al
   14000ac33:	add    BYTE PTR [rax-0x54],dl
   14000ac36:	add    BYTE PTR [rax],al
   14000ac38:	call   0x12000ace8
   14000ac3d:	lods   al,BYTE PTR ds:[rsi]
	...
   14000ac52:	add    BYTE PTR [rax],al
   14000ac54:	push   0xc0
   14000ac59:	add    BYTE PTR [rax],al
   14000ac5b:	add    bh,bh
   14000ac5d:	(bad)  
   14000ac5e:	(bad)  
   14000ac5f:	inc    DWORD PTR [rax]
   14000ac61:	add    BYTE PTR [rax],al
   14000ac63:	add    BYTE PTR [rax],bl
   14000ac65:	add    BYTE PTR [rax],al
   14000ac67:	add    BYTE PTR [rax*2+0x0],ah
	...
   14000ac7a:	add    BYTE PTR [rax],al
   14000ac7c:	rex.WR
   14000ac7d:	add    BYTE PTR [r8],r8b
   14000ac80:	add    BYTE PTR [rax],al
   14000ac82:	add    BYTE PTR [rax],al
   14000ac84:	cwde   
   14000ac85:	lods   al,BYTE PTR ds:[rsi]
	...
   14000ac96:	add    BYTE PTR [rax],al
   14000ac98:	add    eax,DWORD PTR [rax]
   14000ac9a:	add    BYTE PTR [rax],al
   14000ac9c:	mov    eax,0xe80000ac
   14000aca1:	stos   DWORD PTR es:[rdi],eax
   14000aca2:	add    BYTE PTR [rax],al
   14000aca4:	loopne 0x14000ac52
	...
   14000acba:	add    BYTE PTR [rax],al
   14000acbc:	ror    ah,0x0
   14000acbf:	add    BYTE PTR [rax],al
   14000acc1:	add    BYTE PTR [rax],al
   14000acc3:	add    bh,bh
   14000acc5:	(bad)  
   14000acc6:	(bad)  
   14000acc7:	inc    DWORD PTR [rax]
   14000acc9:	add    BYTE PTR [rax],al
   14000accb:	add    BYTE PTR [rax],bl
   14000accd:	add    BYTE PTR [rax],al
   14000accf:	add    BYTE PTR [rax*2+0x0],ah
	...
   14000ace2:	add    BYTE PTR [rax],al
   14000ace4:	js     0x14000acb2
   14000ace6:	add    BYTE PTR [rax],al
   14000ace8:	add    BYTE PTR [rax],al
   14000acea:	add    BYTE PTR [rax],al
   14000acec:	(bad)  
   14000aced:	(bad)  
   14000acee:	(bad)  
   14000acef:	inc    DWORD PTR [rax]
   14000acf1:	add    BYTE PTR [rax],al
   14000acf3:	add    BYTE PTR [rax],bl
   14000acf5:	add    BYTE PTR [rax],al
   14000acf7:	add    BYTE PTR [rax+0x4b],bl
	...
   14000ad06:	add    BYTE PTR [rax],al
   14000ad08:	add    al,BYTE PTR [rax]
   14000ad0a:	add    BYTE PTR [rax],al
   14000ad0c:	and    BYTE PTR [rbp-0x53200000],ch
	...
   14000ad1e:	add    BYTE PTR [rax],al
   14000ad20:	adc    BYTE PTR [rax],al
   14000ad22:	add    BYTE PTR [rax],al
   14000ad24:	cwde   
   14000ad25:	int3   
   14000ad26:	add    BYTE PTR [rax],al
   14000ad28:	add    BYTE PTR [rax],al
   14000ad2a:	add    BYTE PTR [rax],al
   14000ad2c:	(bad)  
   14000ad2d:	(bad)  
   14000ad2e:	(bad)  
   14000ad2f:	inc    DWORD PTR [rax]
   14000ad31:	add    BYTE PTR [rax],al
   14000ad33:	add    BYTE PTR [rax],bl
   14000ad35:	add    BYTE PTR [rax],al
   14000ad37:	add    ah,bh
   14000ad39:	add    BYTE PTR ss:[rax],al
	...
   14000ad4c:	(bad)  
   14000ad4d:	add    BYTE PTR ss:[rax],al
   14000ad50:	add    BYTE PTR [rax],al
   14000ad52:	add    BYTE PTR [rax],al
   14000ad54:	or     BYTE PTR [rbp+0x0],ch
	...
   14000ad6e:	add    BYTE PTR [rax],al
   14000ad70:	xor    BYTE PTR [rbx+0x14000],cl
	...
   14000ad86:	add    BYTE PTR [rax],al
   14000ad88:	push   rax
   14000ad89:	scas   al,BYTE PTR es:[rdi]
	...
   14000ad92:	add    BYTE PTR [rax],al
   14000ad94:	cli    
   14000ad95:	mov    cl,0x0
   14000ad97:	add    BYTE PTR [rax],al
   14000ad99:	jo     0x14000ad9b
   14000ad9b:	add    BYTE PTR [rax+0xae],cl
   14000ada1:	add    BYTE PTR [rax],al
   14000ada3:	add    BYTE PTR [rax],al
   14000ada5:	add    BYTE PTR [rax],al
   14000ada7:	add    BYTE PTR [rbx+rsi*4],cl
   14000adaa:	add    BYTE PTR [rax],al
   14000adac:	cmp    BYTE PTR [rax+0x0],dh
   14000adaf:	add    al,dh
   14000adb1:	scas   eax,DWORD PTR es:[rdi]
	...
   14000adba:	add    BYTE PTR [rax],al
   14000adbc:	shl    BYTE PTR [rax+rax*1+0x71a000],1
   14000adc3:	add    BYTE PTR [rax+0xaf],bl
   14000adc9:	add    BYTE PTR [rax],al
   14000adcb:	add    BYTE PTR [rax],al
   14000adcd:	add    BYTE PTR [rax],al
   14000adcf:	add    BYTE PTR [rdx+0x480000b5],dl
   14000add5:	jno    0x14000add7
   14000add7:	add    al,al
   14000add9:	scas   eax,DWORD PTR es:[rdi]
	...
   14000ade2:	add    BYTE PTR [rax],al
   14000ade4:	xor    al,0xb6
   14000ade6:	add    BYTE PTR [rax],al
   14000ade8:	jo     0x14000ae5b
   14000adea:	add    BYTE PTR [rax],al
   14000adec:	and    BYTE PTR [rcx+0x0],dh
   14000adf2:	add    BYTE PTR [rax],al
   14000adf4:	add    BYTE PTR [rax],al
   14000adf6:	add    BYTE PTR [rax],al
   14000adf8:	sahf   
   14000adf9:	mov    dh,0x0
   14000adfb:	add    al,dl
   14000adfd:	jb     0x14000adff
   14000adff:	add    BYTE PTR [rax-0x51],dh
	...
   14000ae0a:	add    BYTE PTR [rax],al
   14000ae0c:	mov    eax,0x200000b6
   14000ae11:	jno    0x14000ae13
   14000ae13:	add    BYTE PTR [rax-0x4f],al
	...
   14000ae1e:	add    BYTE PTR [rax],al
   14000ae20:	cmp    al,0xb7
   14000ae22:	add    BYTE PTR [rax],al
   14000ae24:	lock jb 0x14000ae27
   14000ae27:	add    BYTE PTR [rax+0xaf],al
   14000ae2d:	add    BYTE PTR [rax],al
   14000ae2f:	add    BYTE PTR [rax],al
   14000ae31:	add    BYTE PTR [rax],al
   14000ae33:	add    BYTE PTR [rsi-0x49],ch
   14000ae36:	add    BYTE PTR [rax],al
   14000ae38:	xor    BYTE PTR [rcx+0x0],dh
	...
   14000ae4f:	add    BYTE PTR [rax-0x4f],bh
   14000ae52:	add    BYTE PTR [rax],al
   14000ae54:	add    BYTE PTR [rax],al
   14000ae56:	add    BYTE PTR [rax],al
   14000ae58:	mov    BYTE PTR [rcx+0x0],dh
   14000ae5e:	add    BYTE PTR [rax],al
   14000ae60:	movabs al,ds:0xb6000000000000b1
   14000ae69:	mov    cl,0x0
   14000ae6b:	add    BYTE PTR [rax],al
   14000ae6d:	add    BYTE PTR [rax],al
   14000ae6f:	add    ah,cl
   14000ae71:	mov    cl,0x0
   14000ae73:	add    BYTE PTR [rax],al
   14000ae75:	add    BYTE PTR [rax],al
   14000ae77:	add    dl,ah
   14000ae79:	mov    cl,0x0
	...
   14000ae87:	add    BYTE PTR [rsi+0xb7],dl
   14000ae8d:	add    BYTE PTR [rax],al
   14000ae8f:	add    BYTE PTR [rsi+0xb7],bl
   14000ae95:	add    BYTE PTR [rax],al
   14000ae97:	add    BYTE PTR [rax+0xb7],dh
   14000ae9d:	add    BYTE PTR [rax],al
   14000ae9f:	add    dh,cl
   14000aea1:	mov    bh,0x0
   14000aea3:	add    BYTE PTR [rax],al
   14000aea5:	add    BYTE PTR [rax],al
   14000aea7:	add    dl,ah
   14000aea9:	mov    bh,0x0
   14000aeab:	add    BYTE PTR [rax],al
   14000aead:	add    BYTE PTR [rax],al
   14000aeaf:	add    ah,bh
   14000aeb1:	mov    bh,0x0
   14000aeb3:	add    BYTE PTR [rax],al
   14000aeb5:	add    BYTE PTR [rax],al
   14000aeb7:	add    BYTE PTR [rdx],dl
   14000aeb9:	mov    eax,0x0
   14000aebe:	add    BYTE PTR [rax],al
   14000aec0:	sub    BYTE PTR [rax+0x0],bh
   14000aec6:	add    BYTE PTR [rax],al
   14000aec8:	rex.X mov eax,0x0
   14000aece:	add    BYTE PTR [rax],al
   14000aed0:	push   rdx
   14000aed1:	mov    eax,0x0
   14000aed6:	add    BYTE PTR [rax],al
   14000aed8:	outs   dx,BYTE PTR ds:[rsi]
   14000aed9:	mov    eax,0x0
   14000aede:	add    BYTE PTR [rax],al
   14000aee0:	(bad)  
   14000aee1:	mov    eax,0x0
   14000aee6:	add    BYTE PTR [rax],al
   14000aee8:	nop
   14000aee9:	mov    eax,0x0
   14000aeee:	add    BYTE PTR [rax],al
   14000aef0:	lods   al,BYTE PTR ds:[rsi]
   14000aef1:	mov    eax,0x0
   14000aef6:	add    BYTE PTR [rax],al
   14000aef8:	(bad)  
   14000aef9:	mov    eax,0x0
   14000aefe:	add    BYTE PTR [rax],al
   14000af00:	cld    
   14000af01:	mov    dl,0x0
   14000af03:	add    BYTE PTR [rax],al
   14000af05:	add    BYTE PTR [rax],al
   14000af07:	add    dh,ah
   14000af09:	mov    dl,0x0
   14000af0b:	add    BYTE PTR [rax],al
   14000af0d:	add    BYTE PTR [rax],al
   14000af0f:	add    al,bl
   14000af11:	mov    dl,0x0
   14000af13:	add    BYTE PTR [rax],al
   14000af15:	add    BYTE PTR [rax],al
   14000af17:	add    ah,cl
   14000af19:	mov    dl,0x0
   14000af1b:	add    BYTE PTR [rax],al
   14000af1d:	add    BYTE PTR [rax],al
   14000af1f:	add    BYTE PTR [rax+0xb2],bh
   14000af25:	add    BYTE PTR [rax],al
   14000af27:	add    BYTE PTR [rdx+rsi*4+0x0],bl
   14000af2e:	add    BYTE PTR [rax],al
   14000af30:	mov    WORD PTR [rdx+0x0],?
   14000af36:	add    BYTE PTR [rax],al
   14000af38:	jl     0x14000aeec
   14000af3a:	add    BYTE PTR [rax],al
   14000af3c:	add    BYTE PTR [rax],al
   14000af3e:	add    BYTE PTR [rax],al
   14000af40:	fs mov dl,0x0
   14000af43:	add    BYTE PTR [rax],al
   14000af45:	add    BYTE PTR [rax],al
   14000af47:	add    BYTE PTR [rdx-0x4e],cl
   14000af4a:	add    BYTE PTR [rax],al
   14000af4c:	add    BYTE PTR [rax],al
   14000af4e:	add    BYTE PTR [rax],al
   14000af50:	xor    BYTE PTR [rdx+0x0],dh
   14000af56:	add    BYTE PTR [rax],al
   14000af58:	sbb    BYTE PTR [rdx+0x0],dh
   14000af5e:	add    BYTE PTR [rax],al
   14000af60:	or     BYTE PTR [rdx+0x0],dh
	...
   14000af6e:	add    BYTE PTR [rax],al
   14000af70:	test   al,0xb6
	...
   14000af7e:	add    BYTE PTR [rax],al
   14000af80:	rex.RX mov dil,0x0
   14000af83:	add    BYTE PTR [rax],al
   14000af85:	add    BYTE PTR [rax],al
   14000af87:	add    BYTE PTR [rdx-0x49],bl
	...
   14000af96:	add    BYTE PTR [rax],al
   14000af98:	xor    dh,BYTE PTR [rbp+0x0]
   14000af9e:	add    BYTE PTR [rax],al
   14000afa0:	rex.X mov bpl,0x0
   14000afa3:	add    BYTE PTR [rax],al
   14000afa5:	add    BYTE PTR [rax],al
   14000afa7:	add    BYTE PTR [rbp+rsi*4+0x0],dl
   14000afab:	add    BYTE PTR [rax],al
   14000afad:	add    BYTE PTR [rax],al
   14000afaf:	add    BYTE PTR [rbp+rsi*4+0x0],dh
	...
   14000afbf:	add    BYTE PTR [rbp+rsi*4+0x0],dh
   14000afc6:	add    BYTE PTR [rax],al
   14000afc8:	loopne 0x14000af7f
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	add    BYTE PTR [rax],al
   14000afce:	add    BYTE PTR [rax],al
   14000afd0:	cld    
   14000afd1:	mov    ch,0x0
   14000afd3:	add    BYTE PTR [rax],al
   14000afd5:	add    BYTE PTR [rax],al
   14000afd7:	add    BYTE PTR [rsi+rsi*4],dl
   14000afda:	add    BYTE PTR [rax],al
   14000afdc:	add    BYTE PTR [rax],al
   14000afde:	add    BYTE PTR [rax],al
   14000afe0:	retf   0xb5
	...
   14000afef:	add    ah,ch
   14000aff1:	mov    eax,0x0
   14000aff6:	add    BYTE PTR [rax],al
   14000aff8:	sbb    al,0xb9
   14000affa:	add    BYTE PTR [rax],al
   14000affc:	add    BYTE PTR [rax],al
   14000affe:	add    BYTE PTR [rax],al
   14000b000:	(bad)  
   14000b001:	mov    ecx,0x0
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	sbb    dh,BYTE PTR [rbx+0x0]
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	and    al,0xb3
   14000b012:	add    BYTE PTR [rax],al
   14000b014:	add    BYTE PTR [rax],al
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	xor    BYTE PTR [rbx+0x0],dh
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	cmp    BYTE PTR [rbx+0x0],dh
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	rex.X mov bl,0x0
   14000b02b:	add    BYTE PTR [rax],al
   14000b02d:	add    BYTE PTR [rax],al
   14000b02f:	add    BYTE PTR [rdx-0x4d],cl
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	add    BYTE PTR [rax],al
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	push   rsp
   14000b039:	mov    bl,0x0
   14000b03b:	add    BYTE PTR [rax],al
   14000b03d:	add    BYTE PTR [rax],al
   14000b03f:	add    BYTE PTR [rdx-0x4d],dh
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	add    BYTE PTR [rax],al
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	(bad)  
   14000b049:	mov    ch,0x0
   14000b04b:	add    BYTE PTR [rax],al
   14000b04d:	add    BYTE PTR [rax],al
   14000b04f:	add    BYTE PTR [rsi],al
   14000b051:	mov    ch,0x0
   14000b053:	add    BYTE PTR [rax],al
   14000b055:	add    BYTE PTR [rax],al
   14000b057:	add    ah,bh
   14000b059:	mov    ah,0x0
   14000b05b:	add    BYTE PTR [rax],al
   14000b05d:	add    BYTE PTR [rax],al
   14000b05f:	add    dh,ch
   14000b061:	mov    ah,0x0
   14000b063:	add    BYTE PTR [rax],al
   14000b065:	add    BYTE PTR [rax],al
   14000b067:	add    ah,ah
   14000b069:	mov    ah,0x0
   14000b06b:	add    BYTE PTR [rax],al
   14000b06d:	add    BYTE PTR [rax],al
   14000b06f:	add    ah,bl
   14000b071:	mov    ah,0x0
   14000b073:	add    BYTE PTR [rax],al
   14000b075:	add    BYTE PTR [rax],al
   14000b077:	add    ah,al
   14000b079:	mov    ah,0x0
   14000b07b:	add    BYTE PTR [rax],al
   14000b07d:	add    BYTE PTR [rax],al
   14000b07f:	add    BYTE PTR [rdx+0xb4],bh
   14000b085:	add    BYTE PTR [rax],al
   14000b087:	add    BYTE PTR [rax+0xb4],dh
   14000b08d:	add    BYTE PTR [rax],al
   14000b08f:	add    BYTE PTR [rax+0xb4],bl
   14000b095:	add    BYTE PTR [rax],al
   14000b097:	add    BYTE PTR [rsp+rsi*4+0x0],cl
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	js     0x14000b056
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	add    BYTE PTR [rax],al
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	outs   dx,BYTE PTR ds:[rsi]
   14000b0a9:	mov    ah,0x0
   14000b0ab:	add    BYTE PTR [rax],al
   14000b0ad:	add    BYTE PTR [rax],al
   14000b0af:	add    BYTE PTR [rsi-0x4c],ah
   14000b0b2:	add    BYTE PTR [rax],al
   14000b0b4:	add    BYTE PTR [rax],al
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	pop    rsi
   14000b0b9:	mov    ah,0x0
   14000b0bb:	add    BYTE PTR [rax],al
   14000b0bd:	add    BYTE PTR [rax],al
   14000b0bf:	add    BYTE PTR [rsp+rsi*4+0x0],cl
   14000b0c3:	add    BYTE PTR [rax],al
   14000b0c5:	add    BYTE PTR [rax],al
   14000b0c7:	add    BYTE PTR [rdx],bh
   14000b0c9:	mov    ah,0x0
   14000b0cb:	add    BYTE PTR [rax],al
   14000b0cd:	add    BYTE PTR [rax],al
   14000b0cf:	add    BYTE PTR [rsp+rsi*4],ch
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	add    BYTE PTR [rax],al
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	(bad)  
   14000b0d9:	mov    ah,0x0
   14000b0db:	add    BYTE PTR [rax],al
   14000b0dd:	add    BYTE PTR [rax],al
   14000b0df:	add    dh,bh
   14000b0e1:	mov    bl,0x0
   14000b0e3:	add    BYTE PTR [rax],al
   14000b0e5:	add    BYTE PTR [rax],al
   14000b0e7:	add    ah,dh
   14000b0e9:	mov    bl,0x0
   14000b0eb:	add    BYTE PTR [rax],al
   14000b0ed:	add    BYTE PTR [rax],al
   14000b0ef:	add    dh,bl
   14000b0f1:	mov    bl,0x0
   14000b0f3:	add    BYTE PTR [rax],al
   14000b0f5:	add    BYTE PTR [rax],al
   14000b0f7:	add    al,cl
   14000b0f9:	mov    bl,0x0
   14000b0fb:	add    BYTE PTR [rax],al
   14000b0fd:	add    BYTE PTR [rax],al
   14000b0ff:	add    BYTE PTR [rdx+0xb3],ch
   14000b105:	add    BYTE PTR [rax],al
   14000b107:	add    BYTE PTR [rdx+0xb3],cl
   14000b10d:	add    BYTE PTR [rax],al
   14000b10f:	add    BYTE PTR [rsi],ch
   14000b111:	mov    ecx,0x0
	...
   14000b11e:	add    BYTE PTR [rax],al
   14000b120:	jo     0x14000b0d8
   14000b122:	add    BYTE PTR [rax],al
   14000b124:	add    BYTE PTR [rax],al
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	mov    dh,BYTE PTR [rsi+0x0]
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	pop    rsp
   14000b131:	mov    dh,0x0
	...
   14000b13f:	add    ah,al
   14000b141:	mov    dh,0x0
   14000b143:	add    BYTE PTR [rax],al
   14000b145:	add    BYTE PTR [rax],al
   14000b147:	add    dl,bl
   14000b149:	mov    dh,0x0
   14000b14b:	add    BYTE PTR [rax],al
   14000b14d:	add    BYTE PTR [rax],al
   14000b14f:	add    dl,dh
   14000b151:	mov    dh,0x0
   14000b153:	add    BYTE PTR [rax],al
   14000b155:	add    BYTE PTR [rax],al
   14000b157:	add    BYTE PTR [rdi+rsi*4],cl
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	add    BYTE PTR [rax],al
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	and    al,0xb7
   14000b162:	add    BYTE PTR [rax],al
   14000b164:	add    BYTE PTR [rax],al
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	cli    
   14000b169:	mov    eax,0x0
	...
   14000b176:	add    BYTE PTR [rax],al
   14000b178:	and    BYTE PTR [rbx],al
   14000b17a:	push   rsp
   14000b17b:	jb     0x14000b1de
   14000b17d:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000b180:	gs jae 0x14000b1f6
   14000b183:	(bad)  
   14000b184:	add    BYTE PTR gs:[eax],al
   14000b188:	jb     0x14000b18b
   14000b18a:	rex.RXB
   14000b18b:	gs je  0x14000b1e2
   14000b18e:	jb     0x14000b1f1
   14000b190:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000b193:	outs   dx,DWORD PTR ds:[rsi]
   14000b194:	addr32 addr32 gs jb 0x14000b1e1
   14000b199:	(bad)  
   14000b19a:	outs   dx,BYTE PTR ds:[rsi]
   14000b19b:	fs ins BYTE PTR es:[rdi],dx
   14000b19d:	add    BYTE PTR gs:[rax],al
   14000b1a0:	jno    0x14000b1a3
   14000b1a2:	rex.RXB
   14000b1a3:	gs je  0x14000b1fa
   14000b1a6:	jb     0x14000b209
   14000b1a8:	movsxd esp,DWORD PTR [rbp+0x45]
   14000b1ab:	outs   dx,BYTE PTR ds:[rsi]
   14000b1ac:	(bad)  
   14000b1ad:	(bad)  
   14000b1ae:	ins    BYTE PTR es:[rdi],dx
   14000b1af:	gs rex.WR
   14000b1b1:	gs jbe 0x14000b219
   14000b1b4:	ins    BYTE PTR es:[rdi],dx
   14000b1b5:	add    BYTE PTR [rax+0x1],dh
   14000b1b8:	rex.RXB
   14000b1b9:	gs je  0x14000b210
   14000b1bc:	jb     0x14000b21f
   14000b1be:	movsxd esp,DWORD PTR [rbp+0x45]
   14000b1c1:	outs   dx,BYTE PTR ds:[rsi]
   14000b1c2:	(bad)  
   14000b1c3:	(bad)  
   14000b1c4:	ins    BYTE PTR es:[rdi],dx
   14000b1c5:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000b1c8:	(bad)  
   14000b1c9:	addr32 jae 0x14000b1cc
   14000b1cc:	scas   eax,DWORD PTR es:[rdi]
   14000b1cd:	add    dl,BYTE PTR [rdx+0x65]
   14000b1d0:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   14000b1d8:	(bad)  
   14000b1d9:	movsxd esp,DWORD PTR [rbp+0x47]
   14000b1dc:	jne    0x14000b247
   14000b1de:	fs jae 0x14000b238
   14000b1e1:	add    BYTE PTR [rip+0x726e5503],ch        # 0x1b26f06ea
   14000b1e7:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   14000b1f0:	(bad)  
   14000b1f1:	movsxd esp,DWORD PTR [rbp+0x47]
   14000b1f4:	jne    0x14000b25f
   14000b1f6:	fs jae 0x14000b1f9
   14000b1f9:	add    BYTE PTR [rcx+0x44],al
   14000b1fc:	push   rsi
   14000b1fd:	push   r8
   14000b1ff:	xor    rsi,QWORD PTR [r10]
   14000b202:	cs fs ins BYTE PTR es:[rdi],dx
   14000b205:	ins    BYTE PTR es:[rdi],dx
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	push   rdi
   14000b209:	add    al,BYTE PTR [rdi+0x65]
   14000b20c:	je     0x14000b25a
   14000b20e:	(bad)  
   14000b20f:	jae    0x14000b285
   14000b211:	rex.RB jb 0x14000b286
   14000b214:	outs   dx,DWORD PTR ds:[rsi]
   14000b215:	jb     0x14000b217
   14000b217:	add    BYTE PTR [rsp+rax*1+0x656c6552],bl
   14000b21e:	(bad)  
   14000b21f:	jae    0x14000b286
   14000b221:	push   rbx
   14000b222:	push   rdx
   14000b223:	push   rdi
   14000b224:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b226:	movsxd ebp,DWORD PTR [rbx+0x53]
   14000b229:	push   0x64657261
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	fwait
   14000b231:	add    al,0x52
   14000b233:	gs ins BYTE PTR es:[rdi],dx
   14000b235:	gs (bad) 
   14000b237:	jae    0x14000b29e
   14000b239:	push   rbx
   14000b23a:	push   rdx
   14000b23b:	push   rdi
   14000b23c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b23e:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000b241:	js     0x14000b2a6
   14000b243:	ins    BYTE PTR es:[rdi],dx
   14000b244:	jne    0x14000b2b9
   14000b246:	imul   esi,DWORD PTR [rsi+0x65],0x41000000
   14000b24d:	movsxd esi,DWORD PTR [rcx+0x75]
   14000b250:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14000b257:	outs   dx,DWORD PTR ds:[rsi]
   14000b258:	movsxd ebp,DWORD PTR [rbx+0x45]
   14000b25b:	js     0x14000b2c0
   14000b25d:	ins    BYTE PTR es:[rdi],dx
   14000b25e:	jne    0x14000b2d3
   14000b260:	imul   esi,DWORD PTR [rsi+0x65],0x41000100
   14000b267:	movsxd esi,DWORD PTR [rcx+0x75]
   14000b26a:	imul   esi,DWORD PTR [rdx+0x65],0x4c575253
   14000b271:	outs   dx,DWORD PTR ds:[rsi]
   14000b272:	movsxd ebp,DWORD PTR [rbx+0x53]
   14000b275:	push   0x64657261
   14000b27a:	add    BYTE PTR [rax],al
   14000b27c:	inc    BYTE PTR [rax]
   14000b27e:	rex.R
   14000b27f:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
   14000b283:	gs push rax
   14000b285:	outs   dx,DWORD PTR ds:[rsi]
   14000b286:	imul   ebp,DWORD PTR [rsi+0x74],0x25007265
   14000b28d:	add    DWORD PTR [rbp+0x6e],eax
   14000b290:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000b293:	gs push rax
   14000b295:	outs   dx,DWORD PTR ds:[rsi]
   14000b296:	imul   ebp,DWORD PTR [rsi+0x74],0x37007265
   14000b29d:	add    eax,0x50746553
   14000b2a2:	jb     0x14000b313
   14000b2a4:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b2a7:	jae    0x14000b300
   14000b2a9:	outs   dx,DWORD PTR ds:[rsi]
   14000b2aa:	jb     0x14000b317
   14000b2ac:	imul   ebp,DWORD PTR [rsi+0x67],0x53746553
   14000b2b3:	imul   edi,DWORD PTR [rdx+0x65],0x2100000
   14000b2ba:	rex.RXB
   14000b2bb:	gs je  0x14000b301
   14000b2be:	jne    0x14000b332
   14000b2c0:	jb     0x14000b327
   14000b2c2:	outs   dx,BYTE PTR ds:[rsi]
   14000b2c3:	je     0x14000b315
   14000b2c5:	jb     0x14000b336
   14000b2c7:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b2ca:	jae    0x14000b2cc
   14000b2cc:	or     BYTE PTR [rip+0x45746553],al        # 0x185751825
   14000b2d2:	jbe    0x14000b339
   14000b2d4:	outs   dx,BYTE PTR ds:[rsi]
   14000b2d5:	je     0x14000b2d7
   14000b2d7:	add    BYTE PTR [rdi+0x73655204],ch
   14000b2dd:	gs je  0x14000b325
   14000b2e0:	jbe    0x14000b347
   14000b2e2:	outs   dx,BYTE PTR ds:[rsi]
   14000b2e3:	je     0x14000b2e5
   14000b2e5:	add    al,cl
   14000b2e7:	add    eax,0x74696157
   14000b2ec:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000b2ee:	jb     0x14000b343
   14000b2f0:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14000b2f7:	push   0x65
   14000b2f9:	movsxd esi,DWORD PTR [rax+rax*1-0x4c]
   14000b2fd:	add    BYTE PTR [rbx+0x72],al
   14000b300:	gs (bad) 
   14000b302:	je     0x14000b369
   14000b304:	rex.RB jbe 0x14000b36c
   14000b307:	outs   dx,BYTE PTR ds:[rsi]
   14000b308:	je     0x14000b361
   14000b30a:	add    BYTE PTR [rax],al
   14000b30c:	rex.WXB
   14000b30d:	rex.RB push r10
   14000b30f:	rex.WRX
   14000b310:	rex.RB
   14000b311:	xor    r14,QWORD PTR [rdx]
   14000b314:	cs fs ins BYTE PTR es:[rdi],dx
   14000b317:	ins    BYTE PTR es:[rdi],dx
   14000b318:	add    BYTE PTR [rax],al
   14000b31a:	xchg   esp,eax
   14000b31b:	add    al,0x6d
   14000b31d:	gs ins DWORD PTR es:[rdi],dx
   14000b31f:	ins    DWORD PTR es:[rdi],dx
   14000b320:	outs   dx,DWORD PTR ds:[rsi]
   14000b321:	jbe    0x14000b388
   14000b323:	add    BYTE PTR [rsi+0x75705f02],bl
   14000b329:	jb     0x14000b390
   14000b32b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b32e:	ins    BYTE PTR es:[rdi],dx
   14000b32f:	add    BYTE PTR [rip+0x74775f04],al        # 0x1b4781239
   14000b335:	outs   dx,DWORD PTR ds:[rsi]
   14000b336:	imul   eax,DWORD PTR [rax],0x63770501
   14000b33c:	jae    0x14000b3a1
   14000b33e:	push   0x4c000072
   14000b343:	add    al,0x66
   14000b345:	jb     0x14000b3ac
   14000b347:	add    BYTE PTR gs:[rax],al
   14000b34a:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000b351:	movsxd eax,DWORD PTR [rax]
   14000b353:	add    BYTE PTR [rcx],dh
   14000b355:	add    BYTE PTR [rdi],bh
   14000b357:	ja     0x14000b3c1
   14000b359:	(bad)  
   14000b35a:	je     0x14000b39c
   14000b35c:	gs js  0x14000b3c2
   14000b35f:	gs jo  0x14000b3d6
   14000b362:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000b369:	rex.X
   14000b36a:	push   r8
   14000b36c:	rex.RB
   14000b36d:	rex.X
   14000b36e:	rex.R pop rax
   14000b370:	pop    rdx
   14000b371:	add    BYTE PTR [rcx],dl
   14000b373:	add    BYTE PTR [rdi],bh
   14000b375:	(bad)  
   14000b376:	xor    DWORD PTR [rbp+0x78],esp
   14000b379:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b37c:	je     0x14000b3e7
   14000b37e:	outs   dx,DWORD PTR ds:[rsi]
   14000b37f:	outs   dx,BYTE PTR ds:[rsi]
   14000b380:	rex
   14000b381:	rex push rbp
   14000b383:	rex.RB
   14000b384:	rex.B
   14000b385:	rex.B
   14000b386:	rex pop rax
   14000b388:	pop    rdx
   14000b389:	add    BYTE PTR [rbx],cl
   14000b38b:	add    BYTE PTR [rdi],bh
   14000b38d:	(bad)  
   14000b38e:	xor    BYTE PTR [rbp+0x78],ah
   14000b391:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b394:	je     0x14000b3ff
   14000b396:	outs   dx,DWORD PTR ds:[rsi]
   14000b397:	outs   dx,BYTE PTR ds:[rsi]
   14000b398:	rex
   14000b399:	rex push rcx
   14000b39b:	rex.RB
   14000b39c:	rex.B
   14000b39d:	rex.B
   14000b39e:	rex
   14000b39f:	rex.B
   14000b3a0:	rex.RB
   14000b3a1:	rex.X push rcx
   14000b3a3:	rex.RB
   14000b3a4:	rex.X
   14000b3a5:	rex.R
   14000b3a6:	rex.W
   14000b3a7:	rex pop rdx
   14000b3a9:	add    BYTE PTR [rax+rax*1],cl
   14000b3ac:	(bad)  
   14000b3ad:	(bad)  
   14000b3ae:	xor    BYTE PTR [rbp+0x78],ah
   14000b3b1:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b3b4:	je     0x14000b41f
   14000b3b6:	outs   dx,DWORD PTR ds:[rsi]
   14000b3b7:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b8:	rex
   14000b3b9:	rex push rcx
   14000b3bb:	rex.RB
   14000b3bc:	rex.B
   14000b3bd:	rex.B
   14000b3be:	rex
   14000b3bf:	rex.B
   14000b3c0:	rex.RB
   14000b3c1:	rex.X push rsi
   14000b3c3:	xor    BYTE PTR [rax+0x40],al
   14000b3c6:	pop    rdx
   14000b3c7:	add    BYTE PTR [rbx+0x0],cl
   14000b3ca:	pop    rdi
   14000b3cb:	rex.XB js 0x14000b446
   14000b3ce:	push   rsp
   14000b3cf:	push   0x45776f72
   14000b3d4:	js     0x14000b439
   14000b3d6:	gs jo  0x14000b44d
   14000b3d9:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   14000b3e0:	pop    rdi
   14000b3e1:	pop    rdi
   14000b3e2:	rex.XB js 0x14000b45d
   14000b3e5:	rex.RX jb 0x14000b449
   14000b3e8:	ins    DWORD PTR es:[rdi],dx
   14000b3e9:	gs rex.W (bad) 
   14000b3ec:	outs   dx,BYTE PTR ds:[rsi]
   14000b3ed:	fs ins BYTE PTR es:[rdi],dx
   14000b3ef:	gs jb  0x14000b425
   14000b3f2:	add    BYTE PTR [rax],al
   14000b3f4:	xchg   edx,eax
   14000b3f5:	add    al,0x6d
   14000b3f7:	gs ins DWORD PTR es:[rdi],dx
   14000b3f9:	movsxd esi,DWORD PTR [rax+0x79]
   14000b3fc:	add    BYTE PTR [rax],al
   14000b3fe:	or     al,BYTE PTR [rax]
   14000b400:	(bad)  
   14000b401:	(bad)  
   14000b402:	xor    BYTE PTR [rbp+0x78],ah
   14000b405:	movsxd esp,DWORD PTR [rbp+0x70]
   14000b408:	je     0x14000b473
   14000b40a:	outs   dx,DWORD PTR ds:[rsi]
   14000b40b:	outs   dx,BYTE PTR ds:[rsi]
   14000b40c:	rex
   14000b40d:	rex push rcx
   14000b40f:	rex.RB
   14000b410:	rex.B
   14000b411:	rex.B
   14000b412:	rex
   14000b413:	rex.B
   14000b414:	rex.RB
   14000b415:	rex.X push rcx
   14000b417:	rex.RB
   14000b418:	rex.X
   14000b419:	rex.R
   14000b41a:	rex pop rdx
   14000b41c:	add    BYTE PTR [rax],al
   14000b41e:	push   rbp
   14000b41f:	add    BYTE PTR [rdi+0x58],bl
   14000b422:	movsxd esi,DWORD PTR [rax+0x74]
   14000b425:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000b42e:	pop    rdi
   14000b42f:	(bad)  
   14000b430:	ins    DWORD PTR es:[rdi],dx
   14000b431:	jae    0x14000b49a
   14000b433:	pop    rdi
   14000b434:	gs js  0x14000b4a0
   14000b437:	je     0x14000b439
   14000b439:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000b43f:	addr32 gs je 0x14000b4b0
   14000b443:	(bad)  
   14000b444:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000b44b:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000b451:	gs je  0x14000b4b3
   14000b454:	(bad)  
   14000b455:	jo     0x14000b4c7
   14000b457:	pop    rdi
   14000b458:	je     0x14000b4d3
   14000b45a:	jo     0x14000b4c1
   14000b45c:	add    BYTE PTR [rax],al
   14000b45e:	xor    al,BYTE PTR [riz*2+0x746978]
   14000b465:	add    BYTE PTR [rsi],cl
   14000b467:	add    DWORD PTR [rdi+0x65],ebx
   14000b46a:	js     0x14000b4d5
   14000b46c:	je     0x14000b46e
   14000b46e:	rol    DWORD PTR [rax],0x5f
   14000b471:	movsxd esp,DWORD PTR [rbp+0x78]
   14000b474:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000b47c:	jae    0x14000b4e3
   14000b47e:	je     0x14000b4f5
   14000b480:	jae    0x14000b4e7
   14000b482:	jb     0x14000b4f1
   14000b484:	(bad)  
   14000b485:	je     0x14000b4ef
   14000b487:	gs jb  0x14000b4fc
   14000b48a:	add    BYTE PTR [rax],al
   14000b48c:	jge    0x14000b48f
   14000b48e:	pop    rdi
   14000b48f:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000b496:	ins    DWORD PTR es:[rdi],dx
   14000b497:	add    BYTE PTR [rdi+0x0],dl
   14000b49a:	pop    rdi
   14000b49b:	pop    rdi
   14000b49c:	rex.XB pop r15
   14000b49e:	jae    0x14000b510
   14000b4a0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000b4a4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000b4ab:	ins    BYTE PTR es:[rdi],dx
   14000b4ac:	gs jb  0x14000b4af
   14000b4af:	add    BYTE PTR [rdx+0x63775f03],al
   14000b4b5:	ins    DWORD PTR es:[rdi],dx
   14000b4b6:	fs ins BYTE PTR es:[rdi],dx
   14000b4b8:	outs   dx,BYTE PTR ds:[rsi]
   14000b4b9:	add    BYTE PTR [rdi],ah
   14000b4bb:	add    DWORD PTR [rdi+0x66],ebx
   14000b4be:	ins    DWORD PTR es:[rdi],dx
   14000b4bf:	outs   dx,DWORD PTR ds:[rsi]
   14000b4c0:	fs add BYTE PTR gs:[rax],al
   14000b4c4:	rol    BYTE PTR [rax],cl
   14000b4c6:	pop    rdi
   14000b4c7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b4ca:	ins    DWORD PTR es:[rdi],dx
   14000b4cb:	outs   dx,DWORD PTR ds:[rsi]
   14000b4cc:	fs add BYTE PTR gs:[rax],al
   14000b4d0:	ins    DWORD PTR es:[rdi],dx
   14000b4d1:	jae    0x14000b549
   14000b4d3:	movsxd esi,DWORD PTR [rdx+0x74]
   14000b4d6:	cs fs ins BYTE PTR es:[rdi],dx
   14000b4d9:	ins    BYTE PTR es:[rdi],dx
   14000b4da:	add    BYTE PTR [rax],al
   14000b4dc:	out    0x1,al
   14000b4de:	pop    rdi
   14000b4df:	ins    BYTE PTR es:[rdi],dx
   14000b4e0:	outs   dx,DWORD PTR ds:[rsi]
   14000b4e1:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b4e4:	add    ebx,DWORD PTR [r15+0x75]
   14000b4e8:	outs   dx,BYTE PTR ds:[rsi]
   14000b4e9:	ins    BYTE PTR es:[rdi],dx
   14000b4ea:	outs   dx,DWORD PTR ds:[rsi]
   14000b4eb:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b4ee:	jnp    0x14000b4f0
   14000b4f0:	pop    rdi
   14000b4f1:	pop    rdi
   14000b4f2:	fs ins BYTE PTR es:[rdi],dx
   14000b4f4:	ins    BYTE PTR es:[rdi],dx
   14000b4f5:	outs   dx,DWORD PTR ds:[rsi]
   14000b4f6:	outs   dx,BYTE PTR ds:[rsi]
   14000b4f7:	gs js  0x14000b563
   14000b4fa:	je     0x14000b4fc
   14000b4fc:	nop
   14000b4fd:	add    bl,BYTE PTR [rdi+0x6f]
   14000b500:	outs   dx,BYTE PTR ds:[rsi]
   14000b501:	gs js  0x14000b56d
   14000b504:	je     0x14000b506
   14000b506:	adc    al,BYTE PTR [rax]
   14000b508:	(bad)  
   14000b509:	(bad)  
   14000b50a:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000b50e:	gs pop rdi
   14000b510:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000b517:	rex.RB
   14000b518:	rex.B
   14000b519:	rex.B
   14000b51a:	rex pop rax
   14000b51c:	pop    rdx
   14000b51d:	add    BYTE PTR [rdi],ch
   14000b51f:	add    BYTE PTR [rdi],bh
   14000b521:	je     0x14000b588
   14000b523:	jb     0x14000b592
   14000b525:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000b52c:	pop    rcx
   14000b52d:	pop    r8
   14000b52f:	pop    rax
   14000b530:	pop    rdx
   14000b531:	add    BYTE PTR [rbx],al
   14000b533:	add    BYTE PTR [rdx+0x6f],dl
   14000b536:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b538:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b540:	add    BYTE PTR [rax],al
   14000b542:	(bad)  
   14000b543:	add    BYTE PTR [rdx+0x6f],dl
   14000b546:	push   rbp
   14000b547:	outs   dx,BYTE PTR ds:[rsi]
   14000b548:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000b54f:	imul   edi,DWORD PTR [rdx+0x65],0x40000
   14000b556:	push   rdx
   14000b557:	outs   dx,DWORD PTR ds:[rsi]
   14000b558:	push   rdx
   14000b559:	imul   esi,DWORD PTR gs:[ebx+0x74],0x63417265
   14000b562:	je     0x14000b5cd
   14000b564:	jbe    0x14000b5c7
   14000b566:	je     0x14000b5d1
   14000b568:	outs   dx,DWORD PTR ds:[rsi]
   14000b569:	outs   dx,BYTE PTR ds:[rsi]
   14000b56a:	rex.RX (bad) 
   14000b56c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000b570:	imul   esp,DWORD PTR [rbp+0x73],0x52000600
   14000b577:	outs   dx,DWORD PTR ds:[rsi]
   14000b578:	push   rdx
   14000b579:	gs jbe 0x14000b5eb
   14000b57c:	imul   esp,DWORD PTR [rbp+0x41],0x63
   14000b580:	je     0x14000b5eb
   14000b582:	jbe    0x14000b5e5
   14000b584:	je     0x14000b5ef
   14000b586:	outs   dx,DWORD PTR ds:[rsi]
   14000b587:	outs   dx,BYTE PTR ds:[rsi]
   14000b588:	rex.RX (bad) 
   14000b58a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000b58e:	imul   esp,DWORD PTR [rbp+0x73],0x69706100
   14000b595:	sub    eax,0x772d736d
   14000b59a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b5a1:	sub    eax,0x726e6977
   14000b5a6:	je     0x14000b5d5
   14000b5a8:	ins    BYTE PTR es:[rdi],dx
   14000b5a9:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30e2e0
   14000b5af:	fs ins BYTE PTR es:[rdi],dx
   14000b5b1:	ins    BYTE PTR es:[rdi],dx
   14000b5b2:	add    BYTE PTR [rax],al
   14000b5b4:	or     al,BYTE PTR [rax]
   14000b5b6:	push   rdi
   14000b5b7:	imul   ebp,DWORD PTR [rsi+0x64],0x4373776f
   14000b5be:	jb     0x14000b625
   14000b5c0:	(bad)  
   14000b5c1:	je     0x14000b628
   14000b5c3:	push   rbx
   14000b5c4:	je     0x14000b638
   14000b5c6:	imul   ebp,DWORD PTR [rsi+0x67],0x57000c00
   14000b5cd:	imul   ebp,DWORD PTR [rsi+0x64],0x4473776f
   14000b5d4:	gs ins BYTE PTR es:[rdi],dx
   14000b5d6:	gs je  0x14000b63e
   14000b5d9:	push   rbx
   14000b5da:	je     0x14000b64e
   14000b5dc:	imul   ebp,DWORD PTR [rsi+0x67],0x57001000
   14000b5e3:	imul   ebp,DWORD PTR [rsi+0x64],0x4773776f
   14000b5ea:	gs je  0x14000b640
   14000b5ed:	je     0x14000b661
   14000b5ef:	imul   ebp,DWORD PTR [rsi+0x67],0x42776152
   14000b5f6:	jne    0x14000b65e
   14000b5f8:	data16 gs jb 0x14000b5fc
   14000b5fc:	adc    al,BYTE PTR [rax]
   14000b5fe:	push   rdi
   14000b5ff:	imul   ebp,DWORD PTR [rsi+0x64],0x4973776f
   14000b606:	jae    0x14000b65b
   14000b608:	je     0x14000b67c
   14000b60a:	imul   ebp,DWORD PTR [rsi+0x67],0x74706d45
   14000b611:	jns    0x14000b613
   14000b613:	add    BYTE PTR [rsi],dl
   14000b615:	add    BYTE PTR [rdi+0x69],dl
   14000b618:	outs   dx,BYTE PTR ds:[rsi]
   14000b619:	outs   dx,DWORD PTR fs:[rsi]
   14000b61b:	ja     0x14000b690
   14000b61d:	push   rbx
   14000b61e:	je     0x14000b692
   14000b620:	imul   ebp,DWORD PTR [rsi+0x67],0x45736148
   14000b627:	ins    DWORD PTR es:[rdi],dx
   14000b628:	(bad)  
   14000b629:	gs fs fs gs fs rex.WRX jne 0x14000b69d
   14000b631:	ins    BYTE PTR es:[rdi],dx
   14000b632:	add    BYTE PTR [rax],al
   14000b634:	(bad)  
   14000b635:	jo     0x14000b6a0
   14000b637:	sub    eax,0x772d736d
   14000b63c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b643:	sub    eax,0x726e6977
   14000b648:	je     0x14000b677
   14000b64a:	jae    0x14000b6c0
   14000b64c:	jb     0x14000b6b7
   14000b64e:	outs   dx,BYTE PTR ds:[rsi]
   14000b64f:	addr32 sub eax,0x312d316c
   14000b655:	sub    eax,0x6c642e30
   14000b65a:	ins    BYTE PTR es:[rdi],dx
   14000b65b:	add    dh,al
   14000b65d:	add    dl,BYTE PTR [rdx+0x74]
   14000b660:	ins    BYTE PTR es:[rdi],dx
   14000b661:	rex.XB (bad) 
   14000b663:	jo     0x14000b6d9
   14000b665:	jne    0x14000b6d9
   14000b667:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000b66a:	outs   dx,BYTE PTR ds:[rsi]
   14000b66b:	je     0x14000b6d2
   14000b66d:	js     0x14000b6e3
   14000b66f:	add    BYTE PTR [rdi+0x4],dh
   14000b672:	push   rdx
   14000b673:	je     0x14000b6e1
   14000b675:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b677:	outs   dx,DWORD PTR ds:[rsi]
   14000b678:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000b67c:	jne    0x14000b6ec
   14000b67e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000b682:	outs   dx,BYTE PTR ds:[rsi]
   14000b683:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b685:	je     0x14000b6f9
   14000b687:	jns    0x14000b689
   14000b689:	add    BYTE PTR [rbx+0x6c745205],cl
   14000b68f:	push   rsi
   14000b690:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000b697:	outs   dx,BYTE PTR ds:[rsi]
   14000b698:	ja     0x14000b703
   14000b69a:	outs   dx,BYTE PTR ds:[rsi]
   14000b69b:	add    BYTE PTR fs:[rax],al
   14000b69e:	outs   dx,BYTE PTR ds:[rsi]
   14000b69f:	je     0x14000b705
   14000b6a1:	ins    BYTE PTR es:[rdi],dx
   14000b6a2:	ins    BYTE PTR es:[rdi],dx
   14000b6a3:	cs fs ins BYTE PTR es:[rdi],dx
   14000b6a6:	ins    BYTE PTR es:[rdi],dx
   14000b6a7:	add    BYTE PTR [rsi+0x65685301],dh
   14000b6ad:	ins    BYTE PTR es:[rdi],dx
   14000b6ae:	ins    BYTE PTR es:[rdi],dx
   14000b6af:	rex.RB js 0x14000b717
   14000b6b2:	movsxd esi,DWORD PTR [rbp+0x74]
   14000b6b5:	gs push rdi
   14000b6b7:	add    BYTE PTR [rbx+0x48],dl
   14000b6ba:	rex.RB
   14000b6bb:	rex.WR
   14000b6bc:	xor    r14,QWORD PTR [rdx]
   14000b6bf:	cs fs ins BYTE PTR es:[rdi],dx
   14000b6c2:	ins    BYTE PTR es:[rdi],dx
   14000b6c3:	add    BYTE PTR [rdx+0x526f4300],al
   14000b6c9:	gs jbe 0x14000b73b
   14000b6cc:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000b6d0:	(bad)  
   14000b6d1:	jae    0x14000b746
   14000b6d3:	rex.WRXB (bad) 
   14000b6d5:	push   0x65
   14000b6d7:	movsxd esi,DWORD PTR [rax+rax*1+0x21]
   14000b6db:	add    BYTE PTR [rbx+0x6f],al
   14000b6de:	rex.B
   14000b6df:	fs fs push rdx
   14000b6e2:	gs push bx
   14000b6e5:	gs jb  0x14000b75e
   14000b6e8:	gs jb  0x14000b73b
   14000b6eb:	jb     0x14000b75c
   14000b6ed:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b6f0:	jae    0x14000b6f2
   14000b6f2:	jle    0x14000b6f4
   14000b6f4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b6f6:	push   rdx
   14000b6f7:	gs ins BYTE PTR es:[rdi],dx
   14000b6f9:	gs (bad) 
   14000b6fb:	jae    0x14000b762
   14000b6fd:	push   rbx
   14000b6fe:	gs jb  0x14000b777
   14000b701:	gs jb  0x14000b754
   14000b704:	jb     0x14000b775
   14000b706:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b709:	jae    0x14000b70b
   14000b70b:	add    BYTE PTR [rsi+0x0],dh
   14000b70e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b710:	push   rdx
   14000b711:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14000b71a:	(bad)  
   14000b71b:	jae    0x14000b790
   14000b71d:	rex.WRXB (bad) 
   14000b71f:	push   0x65
   14000b721:	movsxd esi,DWORD PTR [rax+rax*1+0x7f]
   14000b725:	add    BYTE PTR [rbx+0x6f],al
   14000b728:	push   rdx
   14000b729:	gs jae 0x14000b7a1
   14000b72c:	ins    DWORD PTR es:[rdi],dx
   14000b72d:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000b730:	(bad)  
   14000b731:	jae    0x14000b7a6
   14000b733:	rex.WRXB (bad) 
   14000b735:	push   0x65
   14000b737:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000b73b:	add    BYTE PTR [rdi+0x6c],ch
   14000b73e:	xor    esi,DWORD PTR gs:[rdx]
   14000b741:	cs fs ins BYTE PTR es:[rdi],dx
   14000b744:	ins    BYTE PTR es:[rdi],dx
   14000b745:	add    BYTE PTR [rip+0x4f6f5200],al        # 0x18f70094b
   14000b74b:	jb     0x14000b7b6
   14000b74d:	imul   ebp,DWORD PTR [esi+0x61],0x72456574
   14000b755:	jb     0x14000b7c6
   14000b757:	jb     0x14000b7b0
   14000b759:	add    BYTE PTR [rax+rax*1],al
   14000b75c:	push   rdx
   14000b75d:	outs   dx,DWORD PTR ds:[rsi]
   14000b75e:	rex.WRXB jb 0x14000b7ca
   14000b761:	imul   ebp,DWORD PTR [esi+0x61],0x72456574
   14000b769:	jb     0x14000b7da
   14000b76b:	jb     0x14000b76d
   14000b76d:	add    BYTE PTR [rcx+0x70],ah
   14000b770:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e2ae7
   14000b77a:	outs   dx,DWORD PTR ds:[rsi]
   14000b77b:	jb     0x14000b7e2
   14000b77d:	sub    eax,0x726e6977
   14000b782:	je     0x14000b7b1
   14000b784:	gs jb  0x14000b7f9
   14000b787:	outs   dx,DWORD PTR ds:[rsi]
   14000b788:	jb     0x14000b7b7
   14000b78a:	ins    BYTE PTR es:[rdi],dx
   14000b78b:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30e4c2
   14000b791:	fs ins BYTE PTR es:[rdi],dx
   14000b793:	ins    BYTE PTR es:[rdi],dx
   14000b794:	add    BYTE PTR [rax],al
   14000b796:	ins    DWORD PTR es:[rdi],dx
   14000b797:	add    eax,0x65656c53
   14000b79c:	jo     0x14000b79e
   14000b79e:	mov    DWORD PTR [rdx],0x53746547
   14000b7a4:	je     0x14000b807
   14000b7a6:	jb     0x14000b81c
   14000b7a8:	jne    0x14000b81a
   14000b7aa:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b7ac:	outs   dx,WORD PTR ds:[rsi]
   14000b7ae:	push   rdi
   14000b7af:	add    BYTE PTR [rsi+0x5],bl
   14000b7b2:	push   rbx
   14000b7b3:	gs je  0x14000b80b
   14000b7b6:	outs   dx,BYTE PTR ds:[rsi]
   14000b7b7:	push   0x6c646e61
   14000b7bc:	gs fs rex.RB js 0x14000b824
   14000b7c1:	gs jo  0x14000b838
   14000b7c4:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b7cb:	gs jb  0x14000b7ce
   14000b7ce:	outs   dx,BYTE PTR ds:[rsi]
   14000b7cf:	add    al,BYTE PTR [rdi+0x65]
   14000b7d2:	je     0x14000b821
   14000b7d4:	outs   dx,DWORD PTR ds:[rsi]
   14000b7d5:	fs jne 0x14000b844
   14000b7d8:	gs rex.W (bad) 
   14000b7db:	outs   dx,BYTE PTR ds:[rsi]
   14000b7dc:	fs ins BYTE PTR es:[rdi],dx
   14000b7de:	gs push rdi
   14000b7e0:	add    BYTE PTR [rax],al
   14000b7e2:	ss add al,0x51
   14000b7e5:	jne    0x14000b84c
   14000b7e7:	jb     0x14000b862
   14000b7e9:	push   rax
   14000b7ea:	gs jb  0x14000b853
   14000b7ed:	outs   dx,DWORD PTR ds:[rsi]
   14000b7ee:	jb     0x14000b85d
   14000b7f0:	(bad)  
   14000b7f1:	outs   dx,BYTE PTR ds:[rsi]
   14000b7f2:	movsxd esp,DWORD PTR [rbp+0x43]
   14000b7f5:	outs   dx,DWORD PTR ds:[rsi]
   14000b7f6:	jne    0x14000b866
   14000b7f8:	je     0x14000b85f
   14000b7fa:	jb     0x14000b7fc
   14000b7fc:	adc    DWORD PTR [rdx],eax
   14000b7fe:	rex.RXB
   14000b7ff:	gs je  0x14000b845
   14000b802:	jne    0x14000b876
   14000b804:	jb     0x14000b86b
   14000b806:	outs   dx,BYTE PTR ds:[rsi]
   14000b807:	je     0x14000b859
   14000b809:	jb     0x14000b87a
   14000b80b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b80e:	jae    0x14000b859
   14000b810:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b465ff19
   14000b817:	rex.XB jne 0x14000b88c
   14000b81a:	jb     0x14000b881
   14000b81c:	outs   dx,BYTE PTR ds:[rsi]
   14000b81d:	je     0x14000b873
   14000b81f:	push   0x64616572
   14000b824:	rex.WB
   14000b825:	add    BYTE PTR fs:[rax],al
   14000b828:	loopne 0x14000b82c
   14000b82a:	rex.RXB
   14000b82b:	gs je  0x14000b881
   14000b82e:	jns    0x14000b8a3
   14000b830:	je     0x14000b897
   14000b832:	ins    DWORD PTR es:[rdi],dx
   14000b833:	push   rsp
   14000b834:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000b83b:	ins    BYTE PTR es:[rdi],dx
   14000b83c:	gs push rsp
   14000b83e:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000b845:	gs je  0x14000b89c
   14000b848:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000b84f:	je     0x14000b851
   14000b851:	add    BYTE PTR [rsi+0x686e5505],bl
   14000b857:	(bad)  
   14000b858:	outs   dx,BYTE PTR ds:[rsi]
   14000b859:	fs ins BYTE PTR es:[rdi],dx
   14000b85b:	gs fs rex.RB js 0x14000b8c3
   14000b860:	gs jo  0x14000b8d7
   14000b863:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b86a:	gs jb  0x14000b86d
   14000b86d:	add    BYTE PTR [rbp+rax*1+0x54],bh
   14000b871:	gs jb  0x14000b8e1
   14000b874:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000b87b:	outs   dx,DWORD PTR ds:[rsi]
   14000b87c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b87f:	jae    0x14000b881
   14000b881:	add    BYTE PTR [rbp+0x0],bh
   14000b884:	rex.XB ins BYTE PTR es:[rdi],dx
   14000b886:	outs   dx,DWORD PTR ds:[rsi]
   14000b887:	jae    0x14000b8ee
   14000b889:	rex.W (bad) 
   14000b88b:	outs   dx,BYTE PTR ds:[rsi]
   14000b88c:	fs ins BYTE PTR es:[rdi],dx
   14000b88e:	add    BYTE PTR gs:[rbx+0x1],bl
   14000b892:	rex.RB js 0x14000b905
   14000b895:	(bad)  
   14000b896:	outs   dx,BYTE PTR ds:[rsi]
   14000b897:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000b89a:	jbe    0x14000b905
   14000b89c:	jb     0x14000b90d
   14000b89e:	outs   dx,BYTE PTR ds:[rsi]
   14000b89f:	ins    DWORD PTR es:[rdi],dx
   14000b8a0:	outs   dx,BYTE PTR gs:[rsi]
   14000b8a2:	je     0x14000b8f7
   14000b8a4:	je     0x14000b918
   14000b8a6:	imul   ebp,DWORD PTR [rsi+0x67],0x55005773
   14000b8ad:	add    ecx,DWORD PTR [rcx+0x6e]
   14000b8b0:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b8b8:	rex.XB jb 0x14000b924
   14000b8bb:	je     0x14000b926
   14000b8bd:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b8c0:	push   rbx
   14000b8c1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b8c6:	outs   dx,BYTE PTR ds:[rsi]
   14000b8c7:	rex.B outs dx,BYTE PTR ds:[rsi]
   14000b8c9:	fs push rbx
   14000b8cb:	jo     0x14000b936
   14000b8cd:	outs   dx,BYTE PTR ds:[rsi]
   14000b8ce:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b8d0:	jne    0x14000b940
   14000b8d2:	je     0x14000b8d4
   14000b8d4:	add    eax,0x6c654401
   14000b8d9:	gs je  0x14000b941
   14000b8dc:	rex.XB jb 0x14000b948
   14000b8df:	je     0x14000b94a
   14000b8e1:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b8e4:	push   rbx
   14000b8e5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000b8ea:	outs   dx,BYTE PTR ds:[rsi]
   14000b8eb:	add    BYTE PTR [rcx+0x3],ch
   14000b8ee:	pop    rdi
   14000b8ef:	jbe    0x14000b964
   14000b8f1:	outs   dx,BYTE PTR ds:[rsi]
   14000b8f2:	ja     0x14000b964
   14000b8f4:	jb     0x14000b95f
   14000b8f6:	outs   dx,BYTE PTR ds:[rsi]
   14000b8f7:	je     0x14000b95f
   14000b8f9:	add    BYTE PTR [rbx],ch
   14000b8fb:	add    BYTE PTR [rbx+0x6f],al
   14000b8fe:	rex.XB jb 0x14000b966
   14000b901:	(bad)  
   14000b902:	je     0x14000b969
   14000b904:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b906:	jae    0x14000b97c
   14000b908:	(bad)  
   14000b909:	outs   dx,BYTE PTR ds:[rsi]
   14000b90a:	movsxd esp,DWORD PTR [rbp+0x0]
   14000b90d:	add    BYTE PTR [rax+0x3],ah
   14000b910:	pop    rdi
   14000b911:	jbe    0x14000b986
   14000b913:	movsxd esi,DWORD PTR [rdi+0x70]
   14000b916:	jb     0x14000b981
   14000b918:	outs   dx,BYTE PTR ds:[rsi]
   14000b919:	je     0x14000b981
   14000b91b:	add    BYTE PTR [rax+0x0],ch
   14000b91e:	pop    rdi
   14000b91f:	pop    rdi
   14000b920:	push   rdx
   14000b921:	push   rsp
   14000b922:	rex.R jns 0x14000b993
   14000b925:	(bad)  
   14000b926:	ins    DWORD PTR es:[rdi],dx
   14000b927:	imul   esp,DWORD PTR [rbx+0x43],0x747361
   14000b92e:	xchg   esi,eax
   14000b92f:	add    al,0x6d
   14000b931:	gs ins DWORD PTR es:[rdi],dx
   14000b933:	jae    0x14000b99a
   14000b935:	je     0x14000b937
	...

Disassembly of section .data:

000000014000c000 <.data>:
   14000c000:	add    DWORD PTR [rax],eax
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	add    BYTE PTR [rax],al
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	int    0x5d
   14000c012:	and    dl,dl
   14000c014:	data16 (bad) 
   14000c016:	(bad)  
   14000c017:	inc    DWORD PTR [rax]
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax],al
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rax],ah
   14000c021:	rol    BYTE PTR [rax],0x40
   14000c024:	add    DWORD PTR [rax],eax
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	cwde   
   14000c029:	mov    BYTE PTR [rax],al
   14000c02b:	rex add DWORD PTR [rax],eax
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	ror    BYTE PTR [rax+0x14000],1
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	(bad)  
   14000c039:	mov    BYTE PTR [rax],al
   14000c03b:	rex add DWORD PTR [rax],eax
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c04e:	add    BYTE PTR [rax],al
   14000c050:	cs (bad) 
   14000c052:	push   r14
   14000c054:	ins    BYTE PTR es:[rdi],dx
   14000c055:	outs   dx,DWORD PTR ds:[rsi]
   14000c056:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14000c05e:	jb     0x14000c0a0
   14000c060:	jae    0x14000c0d6
   14000c062:	fs rex
   14000c064:	add    BYTE PTR [rax],al
   14000c067:	add    al,dl
   14000c069:	xchg   DWORD PTR [rax],eax
   14000c06b:	rex add DWORD PTR [rax],eax
	...
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	cs (bad) 
   14000c07a:	push   r14
   14000c07c:	ins    BYTE PTR es:[rdi],dx
   14000c07d:	outs   dx,BYTE PTR gs:[rsi]
   14000c07f:	addr32 je 0x14000c0ea
   14000c082:	pop    rdi
   14000c083:	gs jb  0x14000c0f8
   14000c086:	outs   dx,DWORD PTR ds:[rsi]
   14000c087:	jb     0x14000c0c9
   14000c089:	jae    0x14000c0ff
   14000c08b:	fs rex
   14000c08d:	add    BYTE PTR [rax],al
   14000c090:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	cs (bad) 
   14000c0a2:	push   r14
   14000c0a4:	pop    rdi
   14000c0a5:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000c0a7:	jae    0x14000c11d
   14000c0a9:	jb     0x14000c110
   14000c0ab:	(bad)  
   14000c0ac:	ins    DWORD PTR es:[rdi],dx
   14000c0ad:	pop    rdi
   14000c0ae:	gs jb  0x14000c123
   14000c0b1:	outs   dx,DWORD PTR ds:[rsi]
   14000c0b2:	jb     0x14000c113
   14000c0b4:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c0b7:	outs   dx,DWORD PTR gs:[esi]
   14000c0ba:	jb     0x14000c135
   14000c0bc:	rex jae 0x14000c133
   14000c0bf:	fs rex
   14000c0c1:	add    BYTE PTR [rax],al
   14000c0c4:	add    BYTE PTR [rax],al
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c0d6:	add    BYTE PTR [rax],al
   14000c0d8:	cs (bad) 
   14000c0da:	push   r14
   14000c0dc:	pop    rdi
   14000c0dd:	push   rbx
   14000c0de:	jns    0x14000c153
   14000c0e0:	je     0x14000c147
   14000c0e2:	ins    DWORD PTR es:[rdi],dx
   14000c0e3:	pop    rdi
   14000c0e4:	gs jb  0x14000c159
   14000c0e7:	outs   dx,DWORD PTR ds:[rsi]
   14000c0e8:	jb     0x14000c149
   14000c0ea:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c0ed:	outs   dx,DWORD PTR gs:[esi]
   14000c0f0:	jb     0x14000c16b
   14000c0f2:	rex jae 0x14000c169
   14000c0f5:	fs rex
   14000c0f7:	add    BYTE PTR [rax],al
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	add    BYTE PTR [rax],al
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	cs (bad) 
   14000c112:	push   r14
   14000c114:	gs jb  0x14000c189
   14000c117:	outs   dx,DWORD PTR ds:[rsi]
   14000c118:	jb     0x14000c179
   14000c11a:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c11d:	outs   dx,DWORD PTR gs:[esi]
   14000c120:	jb     0x14000c19b
   14000c122:	rex jae 0x14000c199
   14000c125:	fs rex
   14000c127:	add    BYTE PTR [rax],al
   14000c12a:	add    BYTE PTR [rax],al
   14000c12c:	add    BYTE PTR [rax],al
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	cs (bad) 
   14000c142:	push   r14
   14000c144:	pop    rdi
   14000c145:	rex.RXB
   14000c146:	outs   dx,BYTE PTR gs:[rsi]
   14000c148:	gs jb  0x14000c1b4
   14000c14b:	movsxd ebx,DWORD PTR [rdi+0x65]
   14000c14e:	jb     0x14000c1c2
   14000c150:	outs   dx,DWORD PTR ds:[rsi]
   14000c151:	jb     0x14000c1b2
   14000c153:	movsxd esp,DWORD PTR [rcx+0x74]
   14000c156:	outs   dx,DWORD PTR gs:[esi]
   14000c159:	jb     0x14000c1d4
   14000c15b:	rex jae 0x14000c1d2
   14000c15e:	fs rex
   14000c160:	add    BYTE PTR [rax],al
	...
   14000c16f:	add    al,dl
   14000c171:	xchg   DWORD PTR [rax],eax
   14000c173:	rex add DWORD PTR [rax],eax
	...
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	cs (bad) 
   14000c182:	push   r14
   14000c184:	(bad)  
   14000c185:	and    al,0x47
   14000c187:	outs   dx,BYTE PTR gs:[rsi]
   14000c189:	gs jb  0x14000c1f5
   14000c18c:	movsxd edx,DWORD PTR [rdx+0x65]
   14000c18f:	ins    BYTE PTR es:[rdi],dx
   14000c190:	gs (bad) 
   14000c192:	jae    0x14000c1f9
   14000c194:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000c196:	je     0x14000c201
   14000c198:	imul   sp,WORD PTR [rbp+0x72],0x5040
   14000c19e:	ss pop r8
   14000c1a1:	pop    rax
   14000c1a2:	pop    rdx
   14000c1a3:	rex (bad) 
   14000c1a5:	and    al,0x4f
   14000c1a7:	jne    0x14000c21d
   14000c1a9:	rex.WRXB
   14000c1aa:	push   ax
   14000c1ac:	jb     0x14000c21d
   14000c1ae:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000c1b1:	fs jne 0x14000c220
   14000c1b4:	gs rex.X (bad) 
   14000c1b7:	jae    0x14000c21e
   14000c1b9:	rex push rsi
   14000c1bb:	(bad)  
   14000c1bc:	and    al,0x44
   14000c1be:	gs data16 (bad) 
   14000c1c1:	jne    0x14000c22f
   14000c1c3:	je     0x14000c212
   14000c1c5:	outs   dx,DWORD PTR ds:[rsi]
   14000c1c6:	fs jne 0x14000c235
   14000c1c9:	gs and al,0x30
   14000c1cd:	xor    DWORD PTR [rax+0x44],eax
   14000c1d0:	gs je  0x14000c234
   14000c1d3:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c1db:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c1e3:	je     0x14000c225
   14000c1e5:	rex
   14000c1e6:	rex
   14000c1e7:	rex.R
   14000c1e8:	gs je  0x14000c24c
   14000c1eb:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c1f3:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c1fb:	je     0x14000c23d
   14000c1fd:	add    BYTE PTR [rax],al
   14000c200:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c20e:	add    BYTE PTR [rax],al
   14000c210:	cs (bad) 
   14000c212:	push   r14
   14000c214:	push   rdx
   14000c215:	gs ins BYTE PTR es:[rdi],dx
   14000c217:	gs (bad) 
   14000c219:	jae    0x14000c280
   14000c21b:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000c21d:	je     0x14000c288
   14000c21f:	imul   sp,WORD PTR [rbp+0x72],0x3f40
   14000c225:	and    al,0x4f
   14000c227:	jne    0x14000c29d
   14000c229:	rex.WRXB
   14000c22a:	push   ax
   14000c22c:	jb     0x14000c29d
   14000c22e:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000c231:	fs jne 0x14000c2a0
   14000c234:	gs rex.X (bad) 
   14000c237:	jae    0x14000c29e
   14000c239:	rex push rsi
   14000c23b:	(bad)  
   14000c23c:	and    al,0x44
   14000c23e:	gs data16 (bad) 
   14000c241:	jne    0x14000c2af
   14000c243:	je     0x14000c292
   14000c245:	outs   dx,DWORD PTR ds:[rsi]
   14000c246:	fs jne 0x14000c2b5
   14000c249:	gs and al,0x30
   14000c24d:	xor    DWORD PTR [rax+0x44],eax
   14000c250:	gs je  0x14000c2b4
   14000c253:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c25b:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c263:	je     0x14000c2a5
   14000c265:	rex
   14000c266:	rex
   14000c267:	rex.R
   14000c268:	gs je  0x14000c2cc
   14000c26b:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c273:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c27b:	je     0x14000c2bd
   14000c27d:	add    BYTE PTR [rax],al
   14000c280:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c28e:	add    BYTE PTR [rax],al
   14000c290:	cs (bad) 
   14000c292:	push   r14
   14000c294:	(bad)  
   14000c295:	and    al,0x4d
   14000c297:	outs   dx,DWORD PTR ds:[rsi]
   14000c298:	fs jne 0x14000c307
   14000c29b:	gs and al,0x30
   14000c29f:	xor    DWORD PTR [rsi+0x3f],edx
   14000c2a2:	and    al,0x44
   14000c2a4:	gs data16 (bad) 
   14000c2a7:	jne    0x14000c315
   14000c2a9:	je     0x14000c2f8
   14000c2ab:	outs   dx,DWORD PTR ds:[rsi]
   14000c2ac:	fs jne 0x14000c31b
   14000c2af:	gs and al,0x30
   14000c2b3:	xor    DWORD PTR [rax+0x44],eax
   14000c2b6:	gs je  0x14000c31a
   14000c2b9:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c2c1:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c2c9:	je     0x14000c30b
   14000c2cb:	rex
   14000c2cc:	rex push rdi
   14000c2ce:	push   rdx
   14000c2cf:	rex.WR
   14000c2d0:	rex
   14000c2d1:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c2d9:	je     0x14000c31b
   14000c2db:	add    BYTE PTR [rax],al
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c2ee:	add    BYTE PTR [rax],al
   14000c2f0:	cs (bad) 
   14000c2f2:	push   r14
   14000c2f4:	(bad)  
   14000c2f5:	and    al,0x4f
   14000c2f7:	jne    0x14000c36d
   14000c2f9:	rex.WRXB
   14000c2fa:	push   ax
   14000c2fc:	jb     0x14000c36d
   14000c2fe:	movsxd ecx,DWORD PTR [rbp+0x6f]
   14000c301:	fs jne 0x14000c370
   14000c304:	gs rex.X (bad) 
   14000c307:	jae    0x14000c36e
   14000c309:	rex push rsi
   14000c30b:	(bad)  
   14000c30c:	and    al,0x44
   14000c30e:	gs data16 (bad) 
   14000c311:	jne    0x14000c37f
   14000c313:	je     0x14000c362
   14000c315:	outs   dx,DWORD PTR ds:[rsi]
   14000c316:	fs jne 0x14000c385
   14000c319:	gs and al,0x30
   14000c31d:	xor    DWORD PTR [rax+0x44],eax
   14000c320:	gs je  0x14000c384
   14000c323:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c32b:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c333:	je     0x14000c375
   14000c335:	rex
   14000c336:	rex
   14000c337:	rex.R
   14000c338:	gs je  0x14000c39c
   14000c33b:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c343:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c34b:	je     0x14000c38d
   14000c34d:	add    BYTE PTR [rax],al
   14000c350:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c35e:	add    BYTE PTR [rax],al
   14000c360:	cs (bad) 
   14000c362:	push   r14
   14000c364:	(bad)  
   14000c365:	and    al,0x4d
   14000c367:	outs   dx,DWORD PTR ds:[rsi]
   14000c368:	fs jne 0x14000c3d7
   14000c36b:	gs and al,0x30
   14000c36f:	xor    BYTE PTR [rsi+0x3f],dl
   14000c372:	and    al,0x44
   14000c374:	gs data16 (bad) 
   14000c377:	jne    0x14000c3e5
   14000c379:	je     0x14000c3c8
   14000c37b:	outs   dx,DWORD PTR ds:[rsi]
   14000c37c:	fs jne 0x14000c3eb
   14000c37f:	gs and al,0x30
   14000c383:	xor    DWORD PTR [rax+0x44],eax
   14000c386:	gs je  0x14000c3ea
   14000c389:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c391:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c399:	je     0x14000c3db
   14000c39b:	rex
   14000c39c:	rex push rdi
   14000c39e:	push   rdx
   14000c39f:	rex.WR
   14000c3a0:	rex
   14000c3a1:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c3a9:	je     0x14000c3eb
   14000c3ab:	add    BYTE PTR [rax],al
   14000c3ae:	add    BYTE PTR [rax],al
   14000c3b0:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	cs (bad) 
   14000c3c2:	push   r14
   14000c3c4:	(bad)  
   14000c3c5:	and    al,0x44
   14000c3c7:	gs data16 (bad) 
   14000c3ca:	jne    0x14000c438
   14000c3cc:	je     0x14000c41b
   14000c3ce:	outs   dx,DWORD PTR ds:[rsi]
   14000c3cf:	fs jne 0x14000c43e
   14000c3d2:	gs and al,0x30
   14000c3d6:	xor    DWORD PTR [rax+0x44],eax
   14000c3d9:	gs je  0x14000c43d
   14000c3dc:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c3e4:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c3ec:	je     0x14000c42e
   14000c3ee:	add    al,dl
   14000c3f1:	xchg   DWORD PTR [rax],eax
   14000c3f3:	rex add DWORD PTR [rax],eax
	...
   14000c3fe:	add    BYTE PTR [rax],al
   14000c400:	cs (bad) 
   14000c402:	push   r14
   14000c404:	(bad)  
   14000c405:	and    al,0x43
   14000c407:	ins    BYTE PTR es:[rdi],dx
   14000c408:	(bad)  
   14000c409:	jae    0x14000c47e
   14000c40b:	rex.RX (bad) 
   14000c40d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000c411:	jns    0x14000c453
   14000c413:	push   rsi
   14000c414:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000c41d:	ins    BYTE PTR es:[rdi],dx
   14000c41e:	jae    0x14000c460
   14000c420:	push   rdi
   14000c421:	push   rdx
   14000c422:	rex.WR
   14000c423:	rex
   14000c424:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c42c:	je     0x14000c46e
   14000c42e:	rex push rsi
   14000c430:	xor    DWORD PTR [rdx],esi
   14000c432:	xor    esi,DWORD PTR [rax+rax*2]
   14000c435:	push   rsi
   14000c436:	xor    DWORD PTR [rdx],esi
   14000c438:	xor    esi,DWORD PTR [rax+rax*2]
   14000c43b:	and    al,0x30
   14000c43d:	rex.B
   14000c43e:	rex
   14000c43f:	rex push rdi
   14000c441:	push   rdx
   14000c442:	rex.WR
   14000c443:	rex
   14000c444:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c44c:	je     0x14000c48e
   14000c44e:	add    al,dl
   14000c451:	xchg   DWORD PTR [rax],eax
   14000c453:	rex add DWORD PTR [rax],eax
	...
   14000c45e:	add    BYTE PTR [rax],al
   14000c460:	cs (bad) 
   14000c462:	push   r14
   14000c464:	rex.RX (bad) 
   14000c466:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000c46a:	jns    0x14000c4ae
   14000c46c:	(bad)  
   14000c46d:	jae    0x14000c4d4
   14000c46f:	rex
   14000c470:	rex.R
   14000c471:	gs je  0x14000c4d5
   14000c474:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c47c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c484:	je     0x14000c4c6
   14000c486:	add    BYTE PTR [rax],al
   14000c489:	add    BYTE PTR [rax],al
   14000c48b:	add    BYTE PTR [rax],al
   14000c48d:	add    BYTE PTR [rax],al
   14000c48f:	add    al,dl
   14000c491:	xchg   DWORD PTR [rax],eax
   14000c493:	rex add DWORD PTR [rax],eax
	...
   14000c49e:	add    BYTE PTR [rax],al
   14000c4a0:	cs (bad) 
   14000c4a2:	push   r14
   14000c4a4:	(bad)  
   14000c4a5:	and    al,0x52
   14000c4a7:	jne    0x14000c517
   14000c4a9:	je     0x14000c514
   14000c4ab:	ins    DWORD PTR es:[rdi],dx
   14000c4ac:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000c4af:	(bad)  
   14000c4b0:	jae    0x14000c525
   14000c4b2:	rex push rbp
   14000c4b4:	(bad)  
   14000c4b5:	and    al,0x49
   14000c4b7:	outs   dx,BYTE PTR ds:[rsi]
   14000c4b8:	je     0x14000c51f
   14000c4ba:	jb     0x14000c522
   14000c4bc:	(bad)  
   14000c4bd:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000c4c0:	imul   esi,DWORD PTR [rbx+0x74],0x43495540
   14000c4c7:	ins    BYTE PTR es:[rdi],dx
   14000c4c8:	(bad)  
   14000c4c9:	jae    0x14000c53e
   14000c4cb:	rex.RX (bad) 
   14000c4cd:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000c4d1:	jns    0x14000c513
   14000c4d3:	rex push rsi
   14000c4d5:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000c4de:	ins    BYTE PTR es:[rdi],dx
   14000c4df:	jae    0x14000c521
   14000c4e1:	push   rdi
   14000c4e2:	push   rdx
   14000c4e3:	rex.WR
   14000c4e4:	rex
   14000c4e5:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c4ed:	je     0x14000c52f
   14000c4ef:	rex
   14000c4f0:	rex
   14000c4f1:	rex.R
   14000c4f2:	gs je  0x14000c556
   14000c4f5:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c4fd:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c505:	je     0x14000c547
   14000c507:	rex push rbp
   14000c509:	(bad)  
   14000c50a:	and    al,0x52
   14000c50c:	jne    0x14000c57c
   14000c50e:	je     0x14000c579
   14000c510:	ins    DWORD PTR es:[rdi],dx
   14000c511:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000c514:	(bad)  
   14000c515:	jae    0x14000c58a
   14000c517:	rex.RX ins BYTE PTR es:[rdi],dx
   14000c519:	(bad)  
   14000c51a:	addr32 jae 0x14000c55d
   14000c51d:	and    al,0x30
   14000c51f:	xor    eax,0x40343340
   14000c524:	and    al,0x30
   14000c526:	rex.B
   14000c527:	and    al,0x30
   14000c52a:	rex.B
   14000c52b:	and    al,0x30
   14000c52e:	rex.B
   14000c52f:	rex
   14000c530:	rex
   14000c531:	rex.R
   14000c532:	gs je  0x14000c596
   14000c535:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c53d:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c545:	je     0x14000c587
   14000c547:	add    BYTE PTR [rax],al
   14000c54a:	add    BYTE PTR [rax],al
   14000c54c:	add    BYTE PTR [rax],al
   14000c54e:	add    BYTE PTR [rax],al
   14000c550:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c55e:	add    BYTE PTR [rax],al
   14000c560:	cs (bad) 
   14000c562:	push   r14
   14000c564:	(bad)  
   14000c565:	and    al,0x52
   14000c567:	jne    0x14000c5d7
   14000c569:	je     0x14000c5d4
   14000c56b:	ins    DWORD PTR es:[rdi],dx
   14000c56c:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000c56f:	(bad)  
   14000c570:	jae    0x14000c5e5
   14000c572:	rex.X (bad) 
   14000c574:	jae    0x14000c5db
   14000c576:	push   rsp
   14000c577:	and    al,0x30
   14000c57a:	xor    eax,0x74654440
   14000c57f:	(bad)  
   14000c580:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c588:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c590:	je     0x14000c5d2
   14000c592:	add    BYTE PTR [rax],al
	...
   14000c59d:	add    BYTE PTR [rax],al
   14000c59f:	add    al,dl
   14000c5a1:	xchg   DWORD PTR [rax],eax
   14000c5a3:	rex add DWORD PTR [rax],eax
	...
   14000c5ae:	add    BYTE PTR [rax],al
   14000c5b0:	cs (bad) 
   14000c5b2:	push   r13
   14000c5b4:	(bad)  
   14000c5b5:	and    al,0x49
   14000c5b7:	ins    DWORD PTR es:[rdi],dx
   14000c5b8:	jo     0x14000c626
   14000c5ba:	gs ins DWORD PTR es:[rdi],dx
   14000c5bc:	outs   dx,BYTE PTR gs:[rsi]
   14000c5be:	je     0x14000c633
   14000c5c0:	rex.W
   14000c5c1:	gs ins BYTE PTR es:[rdi],dx
   14000c5c3:	jo     0x14000c62a
   14000c5c5:	jb     0x14000c607
   14000c5c7:	push   rbp
   14000c5c8:	(bad)  
   14000c5c9:	and    al,0x52
   14000c5cb:	jne    0x14000c63b
   14000c5cd:	je     0x14000c638
   14000c5cf:	ins    DWORD PTR es:[rdi],dx
   14000c5d0:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000c5d3:	(bad)  
   14000c5d4:	jae    0x14000c649
   14000c5d6:	rex.RX ins BYTE PTR es:[rdi],dx
   14000c5d8:	(bad)  
   14000c5d9:	addr32 jae 0x14000c61c
   14000c5dc:	and    al,0x30
   14000c5de:	xor    eax,0x4c525740
   14000c5e3:	rex
   14000c5e4:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c5ec:	je     0x14000c62e
   14000c5ee:	rex push rbp
   14000c5f0:	(bad)  
   14000c5f1:	and    al,0x49
   14000c5f3:	outs   dx,BYTE PTR ds:[rsi]
   14000c5f4:	je     0x14000c65b
   14000c5f6:	jb     0x14000c65e
   14000c5f8:	(bad)  
   14000c5f9:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000c5fc:	imul   esi,DWORD PTR [rbx+0x74],0x43495540
   14000c603:	ins    BYTE PTR es:[rdi],dx
   14000c604:	(bad)  
   14000c605:	jae    0x14000c67a
   14000c607:	rex.RX (bad) 
   14000c609:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000c60d:	jns    0x14000c64f
   14000c60f:	rex push rsi
   14000c611:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000c61a:	ins    BYTE PTR es:[rdi],dx
   14000c61b:	jae    0x14000c65d
   14000c61d:	push   rdi
   14000c61e:	push   rdx
   14000c61f:	rex.WR
   14000c620:	rex
   14000c621:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c629:	je     0x14000c66b
   14000c62b:	rex
   14000c62c:	rex
   14000c62d:	rex.R
   14000c62e:	gs je  0x14000c692
   14000c631:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x24403332
   14000c639:	xor    BYTE PTR [rcx+0x40],al
   14000c63c:	and    al,0x30
   14000c63e:	rex.B
   14000c63f:	rex
   14000c640:	rex
   14000c641:	rex.R
   14000c642:	gs je  0x14000c6a6
   14000c645:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c64d:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c655:	je     0x14000c697
   14000c657:	add    BYTE PTR [rax],al
   14000c65a:	add    BYTE PTR [rax],al
   14000c65c:	add    BYTE PTR [rax],al
   14000c65e:	add    BYTE PTR [rax],al
   14000c660:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c66e:	add    BYTE PTR [rax],al
   14000c670:	cs (bad) 
   14000c672:	push   r14
   14000c674:	(bad)  
   14000c675:	and    al,0x53
   14000c677:	imul   ebp,DWORD PTR [rbp+0x70],0x6c43656c
   14000c67e:	(bad)  
   14000c67f:	jae    0x14000c6f4
   14000c681:	rex.RX (bad) 
   14000c683:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000c687:	jns    0x14000c6c9
   14000c689:	push   rsi
   14000c68a:	rex.XB
   14000c68b:	rex.WRB jo 0x14000c6e3
   14000c68e:	js     0x14000c6d8
   14000c690:	outs   dx,DWORD PTR ds:[rsi]
   14000c691:	jae    0x14000c707
   14000c693:	rex
   14000c694:	and    al,0x30
   14000c697:	rex.B
   14000c698:	rex
   14000c699:	rex push rdi
   14000c69b:	push   rdx
   14000c69c:	rex.WR
   14000c69d:	rex
   14000c69e:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c6a6:	je     0x14000c6e8
   14000c6a8:	add    BYTE PTR [rax],al
   14000c6ab:	add    BYTE PTR [rax],al
   14000c6ad:	add    BYTE PTR [rax],al
   14000c6af:	add    al,dl
   14000c6b1:	xchg   DWORD PTR [rax],eax
   14000c6b3:	rex add DWORD PTR [rax],eax
	...
   14000c6be:	add    BYTE PTR [rax],al
   14000c6c0:	cs (bad) 
   14000c6c2:	push   r14
   14000c6c4:	(bad)  
   14000c6c5:	and    al,0x52
   14000c6c7:	jne    0x14000c737
   14000c6c9:	je     0x14000c734
   14000c6cb:	ins    DWORD PTR es:[rdi],dx
   14000c6cc:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000c6cf:	(bad)  
   14000c6d0:	jae    0x14000c745
   14000c6d2:	rex push rbp
   14000c6d4:	(bad)  
   14000c6d5:	and    al,0x52
   14000c6d7:	jne    0x14000c747
   14000c6d9:	je     0x14000c744
   14000c6db:	ins    DWORD PTR es:[rdi],dx
   14000c6dc:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000c6df:	(bad)  
   14000c6e0:	jae    0x14000c755
   14000c6e2:	rex.RX ins BYTE PTR es:[rdi],dx
   14000c6e4:	(bad)  
   14000c6e5:	addr32 jae 0x14000c728
   14000c6e8:	and    al,0x30
   14000c6ea:	xor    DWORD PTR [rax+0x57],eax
   14000c6ed:	push   rdx
   14000c6ee:	rex.WR
   14000c6ef:	rex
   14000c6f0:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c6f8:	je     0x14000c73a
   14000c6fa:	rex push rbp
   14000c6fc:	rex.WB
   14000c6fd:	rex.WRB jo 0x14000c745
   14000c700:	jbe    0x14000c767
   14000c702:	outs   dx,BYTE PTR ds:[rsi]
   14000c703:	je     0x14000c74d
   14000c705:	(bad)  
   14000c706:	outs   dx,BYTE PTR ds:[rsi]
   14000c707:	fs ins BYTE PTR es:[rdi],dx
   14000c709:	gs jb  0x14000c74c
   14000c70c:	rex push rbp
   14000c70e:	rex.WB
   14000c70f:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000c711:	je     0x14000c77c
   14000c713:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000c719:	outs   dx,DWORD PTR ds:[rsi]
   14000c71a:	outs   dx,BYTE PTR ds:[rsi]
   14000c71b:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000c720:	(bad)  
   14000c721:	je     0x14000c78c
   14000c723:	outs   dx,DWORD PTR ds:[rsi]
   14000c724:	outs   dx,BYTE PTR ds:[rsi]
   14000c725:	rex.XB (bad) 
   14000c727:	ins    BYTE PTR es:[rdi],dx
   14000c728:	ins    BYTE PTR es:[rdi],dx
   14000c729:	(bad)  
   14000c72b:	movsxd ebp,DWORD PTR [rbx+0x40]
   14000c72e:	rex push rsi
   14000c730:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000c739:	ins    BYTE PTR es:[rdi],dx
   14000c73a:	jae    0x14000c77c
   14000c73c:	xor    dh,BYTE PTR [rbx]
   14000c73e:	rex push rsi
   14000c740:	ss (bad) 
   14000c742:	xor    dh,BYTE PTR [rbx]
   14000c744:	rex push rsi
   14000c746:	ss (bad) 
   14000c748:	xor    dh,BYTE PTR [rbx]
   14000c74a:	rex push rsi
   14000c74c:	ss (bad) 
   14000c74e:	xor    dh,BYTE PTR [rbx]
   14000c750:	rex push rsi
   14000c752:	ss (bad) 
   14000c754:	xor    dh,BYTE PTR [rbx]
   14000c756:	rex push rsi
   14000c758:	ss (bad) 
   14000c75a:	xor    dh,BYTE PTR [rbx]
   14000c75c:	rex push rsi
   14000c75e:	ss (bad) 
   14000c760:	xor    dh,BYTE PTR [rbx]
   14000c762:	rex
   14000c763:	rex push rdi
   14000c765:	push   rdx
   14000c766:	rex.WR
   14000c767:	rex
   14000c768:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c770:	je     0x14000c7b2
   14000c772:	add    BYTE PTR [rax],al
	...
   14000c77d:	add    BYTE PTR [rax],al
   14000c77f:	add    al,dl
   14000c781:	xchg   DWORD PTR [rax],eax
   14000c783:	rex add DWORD PTR [rax],eax
	...
   14000c78e:	add    BYTE PTR [rax],al
   14000c790:	cs (bad) 
   14000c792:	push   r14
   14000c794:	(bad)  
   14000c795:	and    al,0x52
   14000c797:	jne    0x14000c807
   14000c799:	je     0x14000c804
   14000c79b:	ins    DWORD PTR es:[rdi],dx
   14000c79c:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000c79f:	(bad)  
   14000c7a0:	jae    0x14000c815
   14000c7a2:	rex push rbp
   14000c7a4:	(bad)  
   14000c7a5:	and    al,0x49
   14000c7a7:	outs   dx,BYTE PTR ds:[rsi]
   14000c7a8:	je     0x14000c80f
   14000c7aa:	jb     0x14000c812
   14000c7ac:	(bad)  
   14000c7ad:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000c7b0:	imul   esi,DWORD PTR [rbx+0x74],0x4d495540
   14000c7b7:	jo     0x14000c7fe
   14000c7b9:	jbe    0x14000c820
   14000c7bb:	outs   dx,BYTE PTR ds:[rsi]
   14000c7bc:	je     0x14000c806
   14000c7be:	(bad)  
   14000c7bf:	outs   dx,BYTE PTR ds:[rsi]
   14000c7c0:	fs ins BYTE PTR es:[rdi],dx
   14000c7c2:	gs jb  0x14000c805
   14000c7c5:	rex push rbp
   14000c7c7:	(bad)  
   14000c7c8:	and    al,0x49
   14000c7ca:	outs   dx,BYTE PTR ds:[rsi]
   14000c7cb:	je     0x14000c832
   14000c7cd:	jb     0x14000c835
   14000c7cf:	(bad)  
   14000c7d0:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000c7d3:	imul   esi,DWORD PTR [rbx+0x74],0x4e495540
   14000c7da:	outs   dx,DWORD PTR ds:[rsi]
   14000c7db:	je     0x14000c846
   14000c7dd:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000c7e3:	outs   dx,DWORD PTR ds:[rsi]
   14000c7e4:	outs   dx,BYTE PTR ds:[rsi]
   14000c7e5:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000c7ea:	(bad)  
   14000c7eb:	je     0x14000c856
   14000c7ed:	outs   dx,DWORD PTR ds:[rsi]
   14000c7ee:	outs   dx,BYTE PTR ds:[rsi]
   14000c7ef:	rex.XB (bad) 
   14000c7f1:	ins    BYTE PTR es:[rdi],dx
   14000c7f2:	ins    BYTE PTR es:[rdi],dx
   14000c7f3:	(bad)  
   14000c7f5:	movsxd ebp,DWORD PTR [rbx+0x40]
   14000c7f8:	rex push rsi
   14000c7fa:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000c803:	ins    BYTE PTR es:[rdi],dx
   14000c804:	jae    0x14000c846
   14000c806:	push   rdi
   14000c807:	push   rdx
   14000c808:	rex.WR
   14000c809:	rex
   14000c80a:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c812:	je     0x14000c854
   14000c814:	rex
   14000c815:	rex
   14000c816:	rex.R
   14000c817:	gs je  0x14000c87b
   14000c81a:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c822:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c82a:	je     0x14000c86c
   14000c82c:	rex
   14000c82d:	rex
   14000c82e:	rex.R
   14000c82f:	gs je  0x14000c893
   14000c832:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c83a:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c842:	je     0x14000c884
   14000c844:	rex push rbp
   14000c846:	(bad)  
   14000c847:	and    al,0x52
   14000c849:	jne    0x14000c8b9
   14000c84b:	je     0x14000c8b6
   14000c84d:	ins    DWORD PTR es:[rdi],dx
   14000c84e:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000c851:	(bad)  
   14000c852:	jae    0x14000c8c7
   14000c854:	rex.RX ins BYTE PTR es:[rdi],dx
   14000c856:	(bad)  
   14000c857:	addr32 jae 0x14000c89a
   14000c85a:	and    al,0x30
   14000c85c:	xor    DWORD PTR [rax+0x33],eax
   14000c85f:	xor    al,0x40
   14000c861:	and    al,0x30
   14000c863:	xor    BYTE PTR [rax+rsi*1],ah
   14000c866:	rex.B
   14000c867:	and    al,0x30
   14000c86a:	rex.B
   14000c86b:	rex
   14000c86c:	rex
   14000c86d:	rex.R
   14000c86e:	gs je  0x14000c8d2
   14000c871:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c879:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c881:	je     0x14000c8c3
   14000c883:	add    BYTE PTR [rax],al
	...
   14000c88e:	add    BYTE PTR [rax],al
   14000c890:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000c89e:	add    BYTE PTR [rax],al
   14000c8a0:	cs (bad) 
   14000c8a2:	push   r13
   14000c8a4:	(bad)  
   14000c8a5:	and    al,0x49
   14000c8a7:	ins    DWORD PTR es:[rdi],dx
   14000c8a8:	jo     0x14000c916
   14000c8aa:	gs ins DWORD PTR es:[rdi],dx
   14000c8ac:	outs   dx,BYTE PTR gs:[rsi]
   14000c8ae:	je     0x14000c923
   14000c8b0:	rex.W
   14000c8b1:	gs ins BYTE PTR es:[rdi],dx
   14000c8b3:	jo     0x14000c91a
   14000c8b5:	jb     0x14000c8f7
   14000c8b7:	push   rbp
   14000c8b8:	(bad)  
   14000c8b9:	and    al,0x52
   14000c8bb:	jne    0x14000c92b
   14000c8bd:	je     0x14000c928
   14000c8bf:	ins    DWORD PTR es:[rdi],dx
   14000c8c0:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000c8c3:	(bad)  
   14000c8c4:	jae    0x14000c939
   14000c8c6:	rex.RX ins BYTE PTR es:[rdi],dx
   14000c8c8:	(bad)  
   14000c8c9:	addr32 jae 0x14000c90c
   14000c8cc:	and    al,0x30
   14000c8ce:	xor    DWORD PTR [rax+0x57],eax
   14000c8d1:	push   rdx
   14000c8d2:	rex.WR
   14000c8d3:	rex
   14000c8d4:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c8dc:	je     0x14000c91e
   14000c8de:	rex push rbp
   14000c8e0:	(bad)  
   14000c8e1:	and    al,0x49
   14000c8e3:	outs   dx,BYTE PTR ds:[rsi]
   14000c8e4:	je     0x14000c94b
   14000c8e6:	jb     0x14000c94e
   14000c8e8:	(bad)  
   14000c8e9:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000c8ec:	imul   esi,DWORD PTR [rbx+0x74],0x4d495540
   14000c8f3:	jo     0x14000c93a
   14000c8f5:	jbe    0x14000c95c
   14000c8f7:	outs   dx,BYTE PTR ds:[rsi]
   14000c8f8:	je     0x14000c942
   14000c8fa:	(bad)  
   14000c8fb:	outs   dx,BYTE PTR ds:[rsi]
   14000c8fc:	fs ins BYTE PTR es:[rdi],dx
   14000c8fe:	gs jb  0x14000c941
   14000c901:	rex push rbp
   14000c903:	(bad)  
   14000c904:	and    al,0x49
   14000c906:	outs   dx,BYTE PTR ds:[rsi]
   14000c907:	je     0x14000c96e
   14000c909:	jb     0x14000c971
   14000c90b:	(bad)  
   14000c90c:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000c90f:	imul   esi,DWORD PTR [rbx+0x74],0x4e495540
   14000c916:	outs   dx,DWORD PTR ds:[rsi]
   14000c917:	je     0x14000c982
   14000c919:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000c91f:	outs   dx,DWORD PTR ds:[rsi]
   14000c920:	outs   dx,BYTE PTR ds:[rsi]
   14000c921:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000c926:	(bad)  
   14000c927:	je     0x14000c992
   14000c929:	outs   dx,DWORD PTR ds:[rsi]
   14000c92a:	outs   dx,BYTE PTR ds:[rsi]
   14000c92b:	rex.XB (bad) 
   14000c92d:	ins    BYTE PTR es:[rdi],dx
   14000c92e:	ins    BYTE PTR es:[rdi],dx
   14000c92f:	(bad)  
   14000c931:	movsxd ebp,DWORD PTR [rbx+0x40]
   14000c934:	rex push rsi
   14000c936:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000c93f:	ins    BYTE PTR es:[rdi],dx
   14000c940:	jae    0x14000c982
   14000c942:	push   rdi
   14000c943:	push   rdx
   14000c944:	rex.WR
   14000c945:	rex
   14000c946:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c94e:	je     0x14000c990
   14000c950:	rex
   14000c951:	rex
   14000c952:	rex.R
   14000c953:	gs je  0x14000c9b7
   14000c956:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c95e:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c966:	je     0x14000c9a8
   14000c968:	rex
   14000c969:	rex
   14000c96a:	rex.R
   14000c96b:	gs je  0x14000c9cf
   14000c96e:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x24403332
   14000c976:	xor    BYTE PTR [rcx+0x40],al
   14000c979:	and    al,0x30
   14000c97b:	rex.B
   14000c97c:	rex
   14000c97d:	rex
   14000c97e:	rex.R
   14000c97f:	gs je  0x14000c9e3
   14000c982:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000c98a:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c992:	je     0x14000c9d4
   14000c994:	add    BYTE PTR [rax],al
	...
   14000c99f:	add    al,dl
   14000c9a1:	xchg   DWORD PTR [rax],eax
   14000c9a3:	rex add DWORD PTR [rax],eax
	...
   14000c9ae:	add    BYTE PTR [rax],al
   14000c9b0:	cs (bad) 
   14000c9b2:	push   r13
   14000c9b4:	(bad)  
   14000c9b5:	and    al,0x49
   14000c9b7:	ins    DWORD PTR es:[rdi],dx
   14000c9b8:	jo     0x14000ca26
   14000c9ba:	gs ins DWORD PTR es:[rdi],dx
   14000c9bc:	outs   dx,BYTE PTR gs:[rsi]
   14000c9be:	je     0x14000ca33
   14000c9c0:	rex.W
   14000c9c1:	gs ins BYTE PTR es:[rdi],dx
   14000c9c3:	jo     0x14000ca2a
   14000c9c5:	jb     0x14000ca07
   14000c9c7:	push   rbp
   14000c9c8:	(bad)  
   14000c9c9:	and    al,0x52
   14000c9cb:	jne    0x14000ca3b
   14000c9cd:	je     0x14000ca38
   14000c9cf:	ins    DWORD PTR es:[rdi],dx
   14000c9d0:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000c9d3:	(bad)  
   14000c9d4:	jae    0x14000ca49
   14000c9d6:	rex.RX ins BYTE PTR es:[rdi],dx
   14000c9d8:	(bad)  
   14000c9d9:	addr32 jae 0x14000ca1c
   14000c9dc:	and    al,0x30
   14000c9de:	xor    DWORD PTR [rax+0x57],eax
   14000c9e1:	push   rdx
   14000c9e2:	rex.WR
   14000c9e3:	rex
   14000c9e4:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c9ec:	je     0x14000ca2e
   14000c9ee:	rex push rbp
   14000c9f0:	(bad)  
   14000c9f1:	and    al,0x49
   14000c9f3:	outs   dx,BYTE PTR ds:[rsi]
   14000c9f4:	je     0x14000ca5b
   14000c9f6:	jb     0x14000ca5e
   14000c9f8:	(bad)  
   14000c9f9:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000c9fc:	imul   esi,DWORD PTR [rbx+0x74],0x4e495540
   14000ca03:	outs   dx,DWORD PTR ds:[rsi]
   14000ca04:	je     0x14000ca6f
   14000ca06:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000ca0c:	outs   dx,DWORD PTR ds:[rsi]
   14000ca0d:	outs   dx,BYTE PTR ds:[rsi]
   14000ca0e:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000ca13:	(bad)  
   14000ca14:	je     0x14000ca7f
   14000ca16:	outs   dx,DWORD PTR ds:[rsi]
   14000ca17:	outs   dx,BYTE PTR ds:[rsi]
   14000ca18:	rex.XB (bad) 
   14000ca1a:	ins    BYTE PTR es:[rdi],dx
   14000ca1b:	ins    BYTE PTR es:[rdi],dx
   14000ca1c:	(bad)  
   14000ca1e:	movsxd ebp,DWORD PTR [rbx+0x40]
   14000ca21:	rex push rsi
   14000ca23:	imul   r13,QWORD PTR [rax+r8*2+0x44],0x69617465
   14000ca2c:	ins    BYTE PTR es:[rdi],dx
   14000ca2d:	jae    0x14000ca6f
   14000ca2f:	push   rdi
   14000ca30:	push   rdx
   14000ca31:	rex.WR
   14000ca32:	rex
   14000ca33:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000ca3b:	je     0x14000ca7d
   14000ca3d:	rex
   14000ca3e:	rex
   14000ca3f:	rex.R
   14000ca40:	gs je  0x14000caa4
   14000ca43:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x24403332
   14000ca4b:	xor    BYTE PTR [rax],dh
   14000ca4d:	and    al,0x30
   14000ca4f:	rex.B
   14000ca50:	rex
   14000ca51:	rex
   14000ca52:	rex.R
   14000ca53:	gs je  0x14000cab7
   14000ca56:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000ca5e:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000ca66:	je     0x14000caa8
   14000ca68:	add    BYTE PTR [rax],al
   14000ca6b:	add    BYTE PTR [rax],al
   14000ca6d:	add    BYTE PTR [rax],al
   14000ca6f:	add    al,dl
   14000ca71:	xchg   DWORD PTR [rax],eax
   14000ca73:	rex add DWORD PTR [rax],eax
	...
   14000ca7e:	add    BYTE PTR [rax],al
   14000ca80:	cs (bad) 
   14000ca82:	push   r13
   14000ca84:	rex.WB push r13
   14000ca86:	outs   dx,BYTE PTR ds:[rsi]
   14000ca87:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000ca8b:	outs   dx,BYTE PTR ds:[rsi]
   14000ca8c:	rex
   14000ca8d:	add    BYTE PTR [rax],al
   14000ca90:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000ca9e:	add    BYTE PTR [rax],al
   14000caa0:	cs (bad) 
   14000caa2:	push   r14
   14000caa4:	rex.XB
   14000caa5:	rex.WRB jo 0x14000cafd
   14000caa8:	js     0x14000caf2
   14000caaa:	outs   dx,DWORD PTR ds:[rsi]
   14000caab:	jae    0x14000cb21
   14000caad:	rex
   14000caae:	add    al,dl
   14000cab1:	xchg   DWORD PTR [rax],eax
   14000cab3:	rex add DWORD PTR [rax],eax
	...
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	cs (bad) 
   14000cac2:	push   r13
   14000cac4:	rex.WB
   14000cac5:	rex.WRB jo 0x14000cb0d
   14000cac8:	jbe    0x14000cb2f
   14000caca:	outs   dx,BYTE PTR ds:[rsi]
   14000cacb:	je     0x14000cb15
   14000cacd:	(bad)  
   14000cace:	outs   dx,BYTE PTR ds:[rsi]
   14000cacf:	fs ins BYTE PTR es:[rdi],dx
   14000cad1:	gs jb  0x14000cb14
   14000cad4:	add    BYTE PTR [rax],al
   14000cad7:	add    al,dl
   14000cad9:	xchg   DWORD PTR [rax],eax
   14000cadb:	rex add DWORD PTR [rax],eax
	...
   14000cae6:	add    BYTE PTR [rax],al
   14000cae8:	cs (bad) 
   14000caea:	push   r13
   14000caec:	rex.WB
   14000caed:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000caef:	je     0x14000cb5a
   14000caf1:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000caf7:	outs   dx,DWORD PTR ds:[rsi]
   14000caf8:	outs   dx,BYTE PTR ds:[rsi]
   14000caf9:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000cafe:	(bad)  
   14000caff:	je     0x14000cb6a
   14000cb01:	outs   dx,DWORD PTR ds:[rsi]
   14000cb02:	outs   dx,BYTE PTR ds:[rsi]
   14000cb03:	rex.XB (bad) 
   14000cb05:	ins    BYTE PTR es:[rdi],dx
   14000cb06:	ins    BYTE PTR es:[rdi],dx
   14000cb07:	(bad)  
   14000cb09:	movsxd ebp,DWORD PTR [rbx+0x40]
   14000cb0c:	add    BYTE PTR [rax],al
   14000cb0f:	add    al,dl
   14000cb11:	xchg   DWORD PTR [rax],eax
   14000cb13:	rex add DWORD PTR [rax],eax
	...
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	cs (bad) 
   14000cb22:	push   r14
   14000cb24:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000cb26:	outs   dx,BYTE PTR ds:[rsi]
   14000cb27:	je     0x14000cb7e
   14000cb29:	jae    0x14000cb90
   14000cb2b:	rex.WRX
   14000cb2c:	gs ja  0x14000cb84
   14000cb2f:	jae    0x14000cb96
   14000cb31:	rex.WRB (bad) 
   14000cb33:	imul   esp,DWORD PTR [rbp+0x40],0x44
   14000cb37:	gs je  0x14000cb9b
   14000cb3a:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000cb42:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000cb4a:	je     0x14000cb8c
   14000cb4c:	add    BYTE PTR [rax],al
   14000cb4f:	add    al,dl
   14000cb51:	xchg   DWORD PTR [rax],eax
   14000cb53:	rex add DWORD PTR [rax],eax
	...
   14000cb5e:	add    BYTE PTR [rax],al
   14000cb60:	cs (bad) 
   14000cb62:	push   r13
   14000cb64:	(bad)  
   14000cb65:	and    al,0x52
   14000cb67:	jne    0x14000cbd7
   14000cb69:	je     0x14000cbd4
   14000cb6b:	ins    DWORD PTR es:[rdi],dx
   14000cb6c:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000cb6f:	(bad)  
   14000cb70:	jae    0x14000cbe5
   14000cb72:	rex.RX ins BYTE PTR es:[rdi],dx
   14000cb74:	(bad)  
   14000cb75:	addr32 jae 0x14000cbb8
   14000cb78:	and    al,0x30
   14000cb7a:	xor    eax,DWORD PTR [rax+0x57]
   14000cb7d:	push   rdx
   14000cb7e:	rex.WR
   14000cb7f:	rex
   14000cb80:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000cb88:	je     0x14000cbca
   14000cb8a:	add    BYTE PTR [rax],al
   14000cb8d:	add    BYTE PTR [rax],al
   14000cb8f:	add    al,dl
   14000cb91:	xchg   DWORD PTR [rax],eax
   14000cb93:	rex add DWORD PTR [rax],eax
	...
   14000cb9e:	add    BYTE PTR [rax],al
   14000cba0:	cs (bad) 
   14000cba2:	push   r14
   14000cba4:	push   rdx
   14000cba5:	jne    0x14000cc15
   14000cba7:	je     0x14000cc12
   14000cba9:	ins    DWORD PTR es:[rdi],dx
   14000cbaa:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000cbad:	(bad)  
   14000cbae:	jae    0x14000cc23
   14000cbb0:	rex.X (bad) 
   14000cbb2:	jae    0x14000cc19
   14000cbb4:	rex
   14000cbb5:	rex.R
   14000cbb6:	gs je  0x14000cc1a
   14000cbb9:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000cbc1:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000cbc9:	je     0x14000cc0b
   14000cbcb:	add    BYTE PTR [rax],al
   14000cbce:	add    BYTE PTR [rax],al
   14000cbd0:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000cbde:	add    BYTE PTR [rax],al
   14000cbe0:	cs (bad) 
   14000cbe2:	push   r14
   14000cbe4:	(bad)  
   14000cbe5:	and    al,0x52
   14000cbe7:	jne    0x14000cc57
   14000cbe9:	je     0x14000cc54
   14000cbeb:	ins    DWORD PTR es:[rdi],dx
   14000cbec:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000cbef:	(bad)  
   14000cbf0:	jae    0x14000cc65
   14000cbf2:	rex.X (bad) 
   14000cbf4:	jae    0x14000cc5b
   14000cbf6:	push   rsp
   14000cbf7:	and    al,0x30
   14000cbfa:	xor    DWORD PTR [rax+0x44],eax
   14000cbfd:	gs je  0x14000cc61
   14000cc00:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000cc08:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000cc10:	je     0x14000cc52
   14000cc12:	add    BYTE PTR [rax],al
   14000cc15:	add    BYTE PTR [rax],al
   14000cc17:	add    al,dl
   14000cc19:	xchg   DWORD PTR [rax],eax
   14000cc1b:	rex add DWORD PTR [rax],eax
	...
   14000cc26:	add    BYTE PTR [rax],al
   14000cc28:	cs (bad) 
   14000cc2a:	push   r14
   14000cc2c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000cc2e:	fs jne 0x14000cc9d
   14000cc31:	gs rex.X (bad) 
   14000cc34:	jae    0x14000cc9b
   14000cc36:	rex
   14000cc37:	rex.R
   14000cc38:	gs je  0x14000cc9c
   14000cc3b:	imul   ebp,DWORD PTR [rbx+rsi*2+0x40],0x404c5257
   14000cc43:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000cc4b:	je     0x14000cc8d
   14000cc4d:	add    BYTE PTR [rax],al
   14000cc50:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000cc5e:	add    BYTE PTR [rax],al
   14000cc60:	cs (bad) 
   14000cc62:	push   r13
   14000cc64:	rex.WB
   14000cc65:	rex.XB ins BYTE PTR es:[rdi],dx
   14000cc67:	(bad)  
   14000cc68:	jae    0x14000ccdd
   14000cc6a:	rex.RX (bad) 
   14000cc6c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000cc70:	jns    0x14000ccb2
   14000cc72:	add    BYTE PTR [rax],al
   14000cc75:	add    BYTE PTR [rax],al
   14000cc77:	add    al,dl
   14000cc79:	xchg   DWORD PTR [rax],eax
   14000cc7b:	rex add DWORD PTR [rax],eax
	...
   14000cc86:	add    BYTE PTR [rax],al
   14000cc88:	cs (bad) 
   14000cc8a:	push   r14
   14000cc8c:	gs js  0x14000ccf2
   14000cc8f:	gs jo  0x14000cd06
   14000cc92:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0004040
   14000cc99:	xchg   DWORD PTR [rax],eax
   14000cc9b:	rex add DWORD PTR [rax],eax
	...
   14000cca6:	add    BYTE PTR [rax],al
   14000cca8:	cs (bad) 
   14000ccaa:	push   r14
   14000ccac:	(bad)
   14000ccb1:	ins    BYTE PTR es:[rdi],dx
   14000ccb2:	ins    BYTE PTR es:[rdi],dx
   14000ccb3:	outs   dx,DWORD PTR ds:[rsi]
   14000ccb4:	movsxd eax,DWORD PTR [rax+0x73]
   14000ccb7:	je     0x14000cd1d
   14000ccb9:	rex
   14000ccba:	add    BYTE PTR [rax],al
   14000ccbd:	add    BYTE PTR [rax],al
   14000ccbf:	add    al,dl
   14000ccc1:	xchg   DWORD PTR [rax],eax
   14000ccc3:	rex add DWORD PTR [rax],eax
	...
   14000ccce:	add    BYTE PTR [rax],al
   14000ccd0:	cs (bad) 
   14000ccd2:	push   r14
   14000ccd4:	outs   dx,DWORD PTR ds:[rsi]
   14000ccd5:	jne    0x14000cd4b
   14000ccd7:	pop    rdi
   14000ccd8:	outs   dx,DWORD PTR ds:[rsi]
   14000ccd9:	pop    di
   14000ccdb:	jb     0x14000cd3e
   14000ccdd:	outs   dx,BYTE PTR ds:[rsi]
   14000ccde:	addr32 gs rex jae 0x14000cd57
   14000cce3:	fs rex
   14000cce5:	add    BYTE PTR [rax],al
   14000cce8:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000ccf6:	add    BYTE PTR [rax],al
   14000ccf8:	cs (bad) 
   14000ccfa:	push   r14
   14000ccfc:	rex.XB
   14000ccfd:	rex.W push rdx
   14000ccff:	gs jae 0x14000cd77
   14000cd02:	ins    BYTE PTR es:[rdi],dx
   14000cd03:	je     0x14000cd4a
   14000cd05:	js     0x14000cd6a
   14000cd07:	gs jo  0x14000cd7e
   14000cd0a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d6f4340
   14000cd11:	ins    DWORD PTR es:[rdi],dx
   14000cd12:	outs   dx,DWORD PTR ds:[rsi]
   14000cd13:	outs   dx,BYTE PTR ds:[rsi]
   14000cd14:	push   rbp
   14000cd15:	je     0x14000cd80
   14000cd17:	ins    BYTE PTR es:[rdi],dx
   14000cd18:	rex
   14000cd19:	add    BYTE PTR [rax],al
   14000cd1c:	add    BYTE PTR [rax],al
   14000cd1e:	add    BYTE PTR [rax],al
   14000cd20:	rol    BYTE PTR [rdi+0x14000],1
	...
   14000cd2e:	add    BYTE PTR [rax],al
   14000cd30:	cs (bad) 
   14000cd32:	push   r14
   14000cd34:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000cd3b:	pop    rdi
   14000cd3c:	(bad)  
   14000cd3d:	jb     0x14000cda6
   14000cd3f:	jne    0x14000cdae
   14000cd41:	outs   dx,BYTE PTR gs:[rsi]
   14000cd43:	je     0x14000cd85
   14000cd45:	jae    0x14000cdbb
   14000cd47:	fs rex
   14000cd49:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000e000 <.pdata>:
   14000e000:	xor    BYTE PTR [rax],dl
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	mov    DWORD PTR [rax],edx
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	nop
   14000e009:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e00a:	add    BYTE PTR [rax],al
   14000e00c:	movabs al,ds:0xdc00001148000010
   14000e015:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e016:	add    BYTE PTR [rax],al
   14000e018:	(bad)  
   14000e019:	adc    DWORD PTR [rax],eax
   14000e01b:	add    BYTE PTR [rdi-0x6fffffef],al
   14000e021:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e022:	add    BYTE PTR [rax],al
   14000e024:	mov    al,0x11
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	sbb    dl,BYTE PTR [rdx]
   14000e02a:	add    BYTE PTR [rax],al
   14000e02c:	cwde   
   14000e02d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	push   rax
   14000e031:	adc    al,BYTE PTR [rax]
   14000e033:	add    BYTE PTR [rbx-0x53ffffee],dh
   14000e039:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e03a:	add    BYTE PTR [rax],al
   14000e03c:	rcl    BYTE PTR [rdx],1
   14000e03e:	add    BYTE PTR [rax],al
   14000e040:	(bad)  
   14000e041:	adc    eax,DWORD PTR [rax]
   14000e043:	add    BYTE PTR [rax+0x300000a6],bh
   14000e049:	adc    eax,DWORD PTR [rax]
   14000e04b:	add    BYTE PTR [rbx-0x53ffffed],dl
   14000e051:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e052:	add    BYTE PTR [rax],al
   14000e054:	movabs al,ds:0xc0000013df000013
   14000e05d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e05e:	add    BYTE PTR [rax],al
   14000e060:	call   0x18100e078
   14000e065:	adc    al,0x0
   14000e067:	add    ah,cl
   14000e069:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e06a:	add    BYTE PTR [rax],al
   14000e06c:	rex.W adc al,0x0
   14000e06f:	add    BYTE PTR [rbp+rdx*1+0x0],al
   14000e073:	add    ah,cl
   14000e075:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e076:	add    BYTE PTR [rax],al
   14000e078:	rex.WR adc rax,0x155d0000
   14000e07e:	add    BYTE PTR [rax],al
   14000e080:	fsub   QWORD PTR [rsi+0x15640000]
   14000e086:	add    BYTE PTR [rax],al
   14000e088:	jb     0x14000e0a0
   14000e08a:	add    BYTE PTR [rax],al
   14000e08c:	in     al,0xa6
   14000e08e:	add    BYTE PTR [rax],al
   14000e090:	js     0x14000e0a8
   14000e092:	add    BYTE PTR [rax],al
   14000e094:	mov    DWORD PTR [rsi],edx
   14000e096:	add    BYTE PTR [rax],al
   14000e098:	fsub   QWORD PTR [rsi+0x16900000]
   14000e09e:	add    BYTE PTR [rax],al
   14000e0a0:	and    eax,0xc0000017
   14000e0a5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e0a6:	add    BYTE PTR [rax],al
   14000e0a8:	sub    al,0x17
   14000e0aa:	add    BYTE PTR [rax],al
   14000e0ac:	sub    al,0x18
   14000e0ae:	add    BYTE PTR [rax],al
   14000e0b0:	clc    
   14000e0b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e0b2:	add    BYTE PTR [rax],al
   14000e0b4:	nop
   14000e0b5:	sbb    BYTE PTR [rax],al
   14000e0b7:	add    BYTE PTR [rdx-0x3fffffe8],bh
   14000e0bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e0be:	add    BYTE PTR [rax],al
   14000e0c0:	rcr    BYTE PTR [rax],0x0
   14000e0c3:	add    dl,ch
   14000e0c5:	sbb    BYTE PTR [rax],al
   14000e0c7:	add    al,al
   14000e0c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e0ca:	add    BYTE PTR [rax],al
   14000e0cc:	lock sbb BYTE PTR [rax],al
   14000e0cf:	add    BYTE PTR [rsi],dl
   14000e0d1:	sbb    al,BYTE PTR [rax]
   14000e0d3:	add    al,dl
   14000e0d5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	sbb    al,0x1a
   14000e0da:	add    BYTE PTR [rax],al
   14000e0dc:	stos   BYTE PTR es:[rdi],al
   14000e0dd:	sbb    eax,DWORD PTR [rax]
   14000e0df:	add    al,ch
   14000e0e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e0e2:	add    BYTE PTR [rax],al
   14000e0e4:	mov    al,0x1b
   14000e0e6:	add    BYTE PTR [rax],al
   14000e0e8:	lahf   
   14000e0e9:	sbb    eax,0xa7fc0000
   14000e0ee:	add    BYTE PTR [rax],al
   14000e0f0:	test   al,0x1d
   14000e0f2:	add    BYTE PTR [rax],al
   14000e0f4:	(bad)  
   14000e0f5:	sbb    eax,0xa8180000
   14000e0fa:	add    BYTE PTR [rax],al
   14000e0fc:	int3   
   14000e0fd:	sbb    eax,0x1e000000
   14000e102:	add    BYTE PTR [rax],al
   14000e104:	and    BYTE PTR [rax+0x1e100000],ch
   14000e10a:	add    BYTE PTR [rax],al
   14000e10c:	(bad)  
   14000e10d:	(bad)  
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	int3   
   14000e111:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e112:	add    BYTE PTR [rax],al
   14000e114:	movabs al,ds:0x9000001ed900001e
   14000e11d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e11e:	add    BYTE PTR [rax],al
   14000e120:	loopne 0x14000e140
   14000e122:	add    BYTE PTR [rax],al
   14000e124:	imul   ebx,DWORD PTR [rdi],0x0
   14000e127:	add    BYTE PTR [rax],ch
   14000e129:	test   al,0x0
   14000e12b:	add    BYTE PTR [rdi+rbx*1+0x0],dh
   14000e12f:	add    ch,dl
   14000e131:	(bad)  
   14000e132:	add    BYTE PTR [rax],al
   14000e134:	lods   al,BYTE PTR ds:[rsi]
   14000e135:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e136:	add    BYTE PTR [rax],al
   14000e138:	loopne 0x14000e159
   14000e13a:	add    BYTE PTR [rax],al
   14000e13c:	and    DWORD PTR [eax],eax
   14000e13f:	add    BYTE PTR [rax],bh
   14000e141:	test   al,0x0
   14000e143:	add    BYTE PTR [rcx+riz*1+0x229c0000],al
   14000e14a:	add    BYTE PTR [rax],al
   14000e14c:	shl    BYTE PTR [rsi+0x22a40000],0x0
   14000e153:	add    BYTE PTR [rbp+0x48000024],ah
   14000e159:	test   al,0x0
   14000e15b:	add    BYTE PTR [rsp+0x24c30000],ch
   14000e162:	add    BYTE PTR [rax],al
   14000e164:	fsub   QWORD PTR [rsi+0x24d00000]
   14000e16a:	add    BYTE PTR [rax],al
   14000e16c:	movabs ds:0xd00000a6cc000025,eax
   14000e175:	and    eax,0x263f0000
   14000e17a:	add    BYTE PTR [rax],al
   14000e17c:	int3   
   14000e17d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e17e:	add    BYTE PTR [rax],al
   14000e180:	push   rax
   14000e181:	add    BYTE PTR es:[rax],al
   14000e184:	sti    
   14000e185:	add    BYTE PTR es:[rax],al
   14000e188:	pop    rsp
   14000e189:	test   al,0x0
   14000e18b:	add    BYTE PTR [rax],dl
   14000e18d:	(bad)  
   14000e18e:	add    BYTE PTR [rax],al
   14000e190:	pop    rdi
   14000e191:	(bad)  
   14000e192:	add    BYTE PTR [rax],al
   14000e194:	int3   
   14000e195:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e196:	add    BYTE PTR [rax],al
   14000e198:	jo     0x14000e1c1
   14000e19a:	add    BYTE PTR [rax],al
   14000e19c:	sahf   
   14000e19d:	sub    BYTE PTR [rax],al
   14000e19f:	add    BYTE PTR [rax+rbp*4+0x0],dh
   14000e1a3:	add    BYTE PTR [rax-0x3bffffd8],dh
   14000e1a9:	sub    BYTE PTR [rax],al
   14000e1ab:	add    ah,bl
   14000e1ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1ae:	add    BYTE PTR [rax],al
   14000e1b0:	loopne 0x14000e1da
   14000e1b2:	add    BYTE PTR [rax],al
   14000e1b4:	sub    DWORD PTR [rcx],ebp
   14000e1b6:	add    BYTE PTR [rax],al
   14000e1b8:	int3   
   14000e1b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1ba:	add    BYTE PTR [rax],al
   14000e1bc:	cmp    al,0x29
   14000e1be:	add    BYTE PTR [rax],al
   14000e1c0:	mov    ecx,0xcc000029
   14000e1c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1c6:	add    BYTE PTR [rax],al
   14000e1c8:	add    BYTE PTR [rdx],ch
   14000e1ca:	add    BYTE PTR [rax],al
   14000e1cc:	sbb    ebp,DWORD PTR [rdx]
   14000e1ce:	add    BYTE PTR [rax],al
   14000e1d0:	fsub   QWORD PTR [rsi+0x2a300000]
   14000e1d6:	add    BYTE PTR [rax],al
   14000e1d8:	push   rsp
   14000e1d9:	sub    al,BYTE PTR [rax]
   14000e1db:	add    BYTE PTR [rax+0x600000a6],dl
   14000e1e1:	sub    al,BYTE PTR [rax]
   14000e1e3:	add    BYTE PTR [rax-0x3fffffd6],dl
   14000e1e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1ea:	add    BYTE PTR [rax],al
   14000e1ec:	movabs al,ds:0xc000002aec00002a
   14000e1f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e1f6:	add    BYTE PTR [rax],al
   14000e1f8:	add    BYTE PTR [rbx],ch
   14000e1fa:	add    BYTE PTR [rax],al
   14000e1fc:	(bad)  
   14000e1fd:	sub    eax,DWORD PTR [rax]
   14000e1ff:	add    BYTE PTR [rax+0x300000a6],dl
   14000e205:	sub    eax,DWORD PTR [rax]
   14000e207:	add    BYTE PTR [rbp+0x2c],dl
   14000e20a:	add    BYTE PTR [rax],al
   14000e20c:	nop
   14000e20d:	test   al,0x0
   14000e20f:	add    BYTE PTR [rsp+rbp*1+0x0],bl
   14000e213:	add    BYTE PTR [rax+0x30],ah
   14000e216:	add    BYTE PTR [rax],al
   14000e218:	test   al,0xa8
   14000e21a:	add    BYTE PTR [rax],al
   14000e21c:	jo     0x14000e24e
   14000e21e:	add    BYTE PTR [rax],al
   14000e220:	adc    eax,0xc0000031
   14000e225:	test   al,0x0
   14000e227:	add    BYTE PTR [rax],ah
   14000e229:	xor    DWORD PTR [rax],eax
   14000e22b:	add    BYTE PTR [rbx+0x31],ch
   14000e22e:	add    BYTE PTR [rax],al
   14000e230:	nop
   14000e231:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e232:	add    BYTE PTR [rax],al
   14000e234:	xor    BYTE PTR [rcx],0x0
   14000e237:	add    BYTE PTR [rip+0xffffffffd4000032],bl        # 0x11400e26f
   14000e23d:	test   al,0x0
   14000e23f:	add    BYTE PTR [rax],dh
   14000e241:	xor    al,BYTE PTR [rax]
   14000e243:	add    bl,al
   14000e245:	xor    al,BYTE PTR [rax]
   14000e247:	add    ah,cl
   14000e249:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e24a:	add    BYTE PTR [rax],al
   14000e24c:	shl    BYTE PTR [rdx],1
   14000e24e:	add    BYTE PTR [rax],al
   14000e250:	cmp    eax,0xc0000033
   14000e255:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e256:	add    BYTE PTR [rax],al
   14000e258:	push   rax
   14000e259:	xor    eax,DWORD PTR [rax]
   14000e25b:	add    BYTE PTR [rsi+0x33],ch
   14000e25e:	add    BYTE PTR [rax],al
   14000e260:	nop
   14000e261:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e262:	add    BYTE PTR [rax],al
   14000e264:	xor    BYTE PTR [rbx],0x0
   14000e267:	add    al,cl
   14000e269:	xor    al,0x0
   14000e26b:	add    al,ch
   14000e26d:	test   al,0x0
   14000e26f:	add    al,dl
   14000e271:	xor    al,0x0
   14000e273:	add    BYTE PTR [rbp+rsi*1-0x59340000],ch
   14000e27a:	add    BYTE PTR [rax],al
   14000e27c:	shl    BYTE PTR [rip+0x35e40000],0x0        # 0x175e4e283
   14000e283:	add    BYTE PTR [rax+0x200000a6],dl
   14000e289:	add    BYTE PTR ss:[rax],al
   14000e28c:	pop    rcx
   14000e28d:	add    BYTE PTR ss:[rax],al
   14000e290:	nop
   14000e291:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e292:	add    BYTE PTR [rax],al
   14000e294:	xor    BYTE PTR [rsi],0x0
   14000e297:	add    BYTE PTR [rbx-0x3fffffca],bh
   14000e29d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e29e:	add    BYTE PTR [rax],al
   14000e2a0:	(bad)  
   14000e2a1:	add    BYTE PTR ss:[rax],al
   14000e2a4:	hlt    
   14000e2a5:	add    BYTE PTR ss:[rax],al
   14000e2a8:	add    al,0xa9
   14000e2aa:	add    BYTE PTR [rax],al
   14000e2ac:	cld    
   14000e2ad:	add    BYTE PTR ss:[rax],al
   14000e2b0:	(bad)  
   14000e2b1:	(bad)  
   14000e2b2:	add    BYTE PTR [rax],al
   14000e2b4:	nop
   14000e2b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e2b6:	add    BYTE PTR [rax],al
   14000e2b8:	xor    al,0x37
   14000e2ba:	add    BYTE PTR [rax],al
   14000e2bc:	and    al,0x38
   14000e2be:	add    BYTE PTR [rax],al
   14000e2c0:	or     al,0xa9
   14000e2c2:	add    BYTE PTR [rax],al
   14000e2c4:	sub    al,0x38
   14000e2c6:	add    BYTE PTR [rax],al
   14000e2c8:	idiv   BYTE PTR [rbx]
   14000e2ca:	add    BYTE PTR [rax],al
   14000e2cc:	adc    al,0xa9
   14000e2ce:	add    BYTE PTR [rax],al
   14000e2d0:	cld    
   14000e2d1:	cmp    eax,DWORD PTR [rax]
   14000e2d3:	add    BYTE PTR [rsi],ch
   14000e2d5:	cmp    al,0x0
   14000e2d7:	add    al,al
   14000e2d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e2da:	add    BYTE PTR [rax],al
   14000e2dc:	xor    al,0x3c
   14000e2de:	add    BYTE PTR [rax],al
   14000e2e0:	mov    edi,0xc800003c
   14000e2e5:	test   eax,0x3cc80000
   14000e2ea:	add    BYTE PTR [rax],al
   14000e2ec:	jno    0x14000e32b
   14000e2ee:	add    BYTE PTR [rax],al
   14000e2f0:	cmp    BYTE PTR [rax+0x3d780000],ch
   14000e2f6:	add    BYTE PTR [rax],al
   14000e2f8:	jno    0x14000e338
   14000e2fa:	add    BYTE PTR [rax],al
   14000e2fc:	shr    BYTE PTR [rcx+0x3e780000],1
   14000e302:	add    BYTE PTR [rax],al
   14000e304:	mov    dl,0x3e
   14000e306:	add    BYTE PTR [rax],al
   14000e308:	nop
   14000e309:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e30a:	add    BYTE PTR [rax],al
   14000e30c:	mov    eax,0x9d00003e
   14000e311:	(bad)  
   14000e312:	add    BYTE PTR [rax],al
   14000e314:	lock test eax,0x3fa40000
   14000e31a:	add    BYTE PTR [rax],al
   14000e31c:	add    eax,0xc000040
   14000e321:	stos   BYTE PTR es:[rdi],al
   14000e322:	add    BYTE PTR [rax],al
   14000e324:	or     al,0x40
   14000e326:	add    BYTE PTR [rax],al
   14000e328:	sub    eax,0x18000040
   14000e32d:	stos   BYTE PTR es:[rdi],al
   14000e32e:	add    BYTE PTR [rax],al
   14000e330:	xor    al,0x40
   14000e332:	add    BYTE PTR [rax],al
   14000e334:	(bad)
   14000e337:	add    BYTE PTR [rax],ah
   14000e339:	stos   BYTE PTR es:[rdi],al
   14000e33a:	add    BYTE PTR [rax],al
   14000e33c:	int3   
   14000e33d:	add    BYTE PTR [r8],al
   14000e340:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e341:	rex.X add BYTE PTR [rax],al
   14000e344:	lods   al,BYTE PTR ds:[rsi]
   14000e345:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e346:	add    BYTE PTR [rax],al
   14000e348:	lods   al,BYTE PTR ds:[rsi]
   14000e349:	rex.X add BYTE PTR [rax],al
   14000e34c:	xor    al,BYTE PTR [rbx+0x0]
   14000e34f:	add    BYTE PTR [rax-0x56],al
   14000e352:	add    BYTE PTR [rax],al
   14000e354:	cmp    BYTE PTR [rbx+0x0],al
   14000e357:	add    BYTE PTR [rcx+0x43],ah
   14000e35a:	add    BYTE PTR [rax],al
   14000e35c:	fsub   QWORD PTR [rsi+0x43700000]
   14000e362:	add    BYTE PTR [rax],al
   14000e364:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e365:	rex.XB add BYTE PTR [r8],al
   14000e368:	nop
   14000e369:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e36a:	add    BYTE PTR [rax],al
   14000e36c:	mov    al,0x43
   14000e36e:	add    BYTE PTR [rax],al
   14000e370:	(bad)  
   14000e371:	rex.XB add BYTE PTR [r8],al
   14000e374:	nop
   14000e375:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e376:	add    BYTE PTR [rax],al
   14000e378:	lock rex.XB add BYTE PTR [r8],al
   14000e37c:	adc    eax,DWORD PTR [rax+rax*1+0x0]
   14000e380:	fsub   QWORD PTR [rsi+0x441c0000]
   14000e386:	add    BYTE PTR [rax],al
   14000e388:	xchg   BYTE PTR [rax+rax*1+0x0],al
   14000e38c:	push   rsp
   14000e38d:	stos   BYTE PTR es:[rdi],al
   14000e38e:	add    BYTE PTR [rax],al
   14000e390:	in     al,dx
   14000e391:	add    BYTE PTR [rax],r8b
   14000e394:	sbb    eax,DWORD PTR [rbp+0x0]
   14000e397:	add    BYTE PTR [rax],al
   14000e399:	stos   DWORD PTR es:[rdi],eax
   14000e39a:	add    BYTE PTR [rax],al
   14000e39c:	and    al,0x45
   14000e39e:	add    BYTE PTR [rax],al
   14000e3a0:	rex.RB
   14000e3a1:	add    BYTE PTR [r8],r8b
   14000e3a4:	nop
   14000e3a5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e3a6:	add    BYTE PTR [rax],al
   14000e3a8:	(bad)  
   14000e3a9:	add    BYTE PTR [r8],r8b
   14000e3ac:	pop    QWORD PTR [rbp+0x0]
   14000e3af:	add    al,al
   14000e3b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e3b2:	add    BYTE PTR [rax],al
   14000e3b4:	cwde   
   14000e3b5:	add    BYTE PTR [r8],r8b
   14000e3b8:	mov    eax,0x4000045
   14000e3bd:	test   eax,0x45c00000
   14000e3c2:	add    BYTE PTR [rax],al
   14000e3c4:	jrcxz  0x14000e40b
   14000e3c6:	add    BYTE PTR [rax],al
   14000e3c8:	add    al,0xa9
   14000e3ca:	add    BYTE PTR [rax],al
   14000e3cc:	in     al,dx
   14000e3cd:	add    BYTE PTR [r8],r8b
   14000e3d0:	cmovbe eax,DWORD PTR [rax]
   14000e3d3:	add    BYTE PTR [rcx+rbp*4],al
   14000e3d6:	add    BYTE PTR [rax],al
   14000e3d8:	and    BYTE PTR [rsi+0x0],al
   14000e3db:	add    bh,ch
   14000e3dd:	rex.RX add BYTE PTR [rax],r8b
   14000e3e0:	fsub   QWORD PTR [rsi+0x47000000]
   14000e3e6:	add    BYTE PTR [rax],al
   14000e3e8:	rex.WB
   14000e3e9:	rex.RXB add BYTE PTR [r8],r8b
   14000e3ec:	sbb    BYTE PTR [rax+0x47500000],ch
   14000e3f2:	add    BYTE PTR [rax],al
   14000e3f4:	ror    DWORD PTR [rcx+0x0],0x0
   14000e3f8:	or     BYTE PTR [rbx+0x49d00000],ch
   14000e3fe:	add    BYTE PTR [rax],al
   14000e400:	loop   0x14000e44b
   14000e402:	add    BYTE PTR [rax],al
   14000e404:	fsub   QWORD PTR [rsi+0x4a000000]
   14000e40a:	add    BYTE PTR [rax],al
   14000e40c:	(bad)  
   14000e40d:	rex.WX add BYTE PTR [rax],al
   14000e410:	rex stos DWORD PTR es:[rdi],eax
   14000e412:	add    BYTE PTR [rax],al
   14000e414:	and    al,0x4a
   14000e416:	add    BYTE PTR [rax],al
   14000e418:	ret    0x4a
   14000e41b:	add    BYTE PTR [rbx+rbp*4+0x0],al
   14000e41f:	add    al,cl
   14000e421:	rex.WX add BYTE PTR [rax],al
   14000e424:	fisttp WORD PTR [rdx+0x0]
   14000e427:	add    ah,bl
   14000e429:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e42a:	add    BYTE PTR [rax],al
   14000e42c:	add    BYTE PTR [rbx+0x0],cl
   14000e42f:	add    BYTE PTR [rax],dh
   14000e431:	rex.WXB add BYTE PTR [r8],al
   14000e434:	shl    BYTE PTR [rsi+0x4bb00000],0x0
   14000e43b:	add    cl,ch
   14000e43d:	rex.WXB add BYTE PTR [r8],al
   14000e440:	fsub   QWORD PTR [rsi+0x4bf00000]
   14000e446:	add    BYTE PTR [rax],al
   14000e448:	or     BYTE PTR [rax+rax*1+0x0],cl
   14000e44c:	fsub   QWORD PTR [rsi+0x4c1c0000]
   14000e452:	add    BYTE PTR [rax],al
   14000e454:	jo     0x14000e4a2
   14000e456:	add    BYTE PTR [rax],al
   14000e458:	push   0x780000ab
   14000e45d:	rex.WR add BYTE PTR [rax],r8b
   14000e460:	mov    ebp,0x9000004c
   14000e465:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e466:	add    BYTE PTR [rax],al
   14000e468:	and    BYTE PTR [rbp+0x0],cl
   14000e46b:	add    BYTE PTR [rbp+0x4d],ch
   14000e46e:	add    BYTE PTR [rax],al
   14000e470:	mov    BYTE PTR [rbx+0x4db40000],ch
   14000e476:	add    BYTE PTR [rax],al
   14000e478:	test   BYTE PTR [rsi+0x0],cl
   14000e47b:	add    BYTE PTR [rbx+rbp*4+0x4ea40000],dh
   14000e482:	add    BYTE PTR [rax],al
   14000e484:	fmul   DWORD PTR [rsi+0x0]
   14000e487:	add    BYTE PTR [rax-0x1fffff5a],dl
   14000e48d:	rex.WRX add BYTE PTR [rax],r8b
   14000e490:	push   rcx
   14000e491:	push   rax
   14000e492:	add    BYTE PTR [rax],al
   14000e494:	shr    BYTE PTR [rbx+0x50880000],0x0
   14000e49b:	add    BYTE PTR [rbp-0x23ffffb0],ah
   14000e4a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e4a2:	add    BYTE PTR [rax],al
   14000e4a4:	lods   al,BYTE PTR ds:[rsi]
   14000e4a5:	push   rax
   14000e4a6:	add    BYTE PTR [rax],al
   14000e4a8:	sqrtps xmm0,XMMWORD PTR [rax]
   14000e4ab:	add    BYTE PTR [rax+0x180000a6],dl
   14000e4b1:	push   rcx
   14000e4b2:	add    BYTE PTR [rax],al
   14000e4b4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e4b5:	push   rcx
   14000e4b6:	add    BYTE PTR [rax],al
   14000e4b8:	int3   
   14000e4b9:	stos   DWORD PTR es:[rdi],eax
   14000e4ba:	add    BYTE PTR [rax],al
   14000e4bc:	rcl    BYTE PTR [rcx+0x0],1
   14000e4bf:	add    dl,dl
   14000e4c1:	push   rcx
   14000e4c2:	add    BYTE PTR [rax],al
   14000e4c4:	enter  0xab,0x0
   14000e4c8:	out    0x51,al
   14000e4ca:	add    BYTE PTR [rax],al
   14000e4cc:	(bad)  
   14000e4cd:	push   rdx
   14000e4ce:	add    BYTE PTR [rax],al
   14000e4d0:	shl    BYTE PTR [rdi+0x52270000],0x0
   14000e4d7:	add    BYTE PTR [rdx+rdx*2+0x0],cl
   14000e4db:	add    al,al
   14000e4dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e4de:	add    BYTE PTR [rax],al
   14000e4e0:	xchg   esp,eax
   14000e4e1:	push   rdx
   14000e4e2:	add    BYTE PTR [rax],al
   14000e4e4:	mov    ebx,0xf0000052
   14000e4e9:	stos   BYTE PTR es:[rdi],al
   14000e4ea:	add    BYTE PTR [rax],al
   14000e4ec:	mov    ebx,0xdd000052
   14000e4f1:	push   rdx
   14000e4f2:	add    BYTE PTR [rax],al
   14000e4f4:	lock stos BYTE PTR es:[rdi],al
   14000e4f6:	add    BYTE PTR [rax],al
   14000e4f8:	jrcxz  0x14000e54c
   14000e4fa:	add    BYTE PTR [rax],al
   14000e4fc:	add    DWORD PTR [rbx+0x0],edx
   14000e4ff:	add    BYTE PTR [rbx+rbp*4+0x53070000],ch
   14000e506:	add    BYTE PTR [rax],al
   14000e508:	and    dl,BYTE PTR [rbx+0x0]
   14000e50b:	add    BYTE PTR [rbx+rbp*4+0x53300000],ch
   14000e512:	add    BYTE PTR [rax],al
   14000e514:	push   rax
   14000e515:	push   rbx
   14000e516:	add    BYTE PTR [rax],al
   14000e518:	lods   al,BYTE PTR ds:[rsi]
   14000e519:	stos   DWORD PTR es:[rdi],eax
   14000e51a:	add    BYTE PTR [rax],al
   14000e51c:	loopne 0x14000e571
   14000e51e:	add    BYTE PTR [rax],al
   14000e520:	add    dl,BYTE PTR [rax+rax*1+0x0]
   14000e524:	.byte 0xdc
   14000e525:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
	...

Disassembly of section .rsrc:

000000014000f000 <.rsrc>:
	...
   14000f00c:	add    BYTE PTR [rax],al
   14000f00e:	add    al,BYTE PTR [rax]
   14000f010:	adc    BYTE PTR [rax],al
   14000f012:	add    BYTE PTR [rax],al
   14000f014:	and    BYTE PTR [rax],al
   14000f016:	add    BYTE PTR [rax+0x18],al
   14000f01c:	cmp    BYTE PTR [rax],al
   14000f01e:	add    BYTE PTR [rax+0x0],al
	...
   14000f02c:	add    BYTE PTR [rax],al
   14000f02e:	add    DWORD PTR [rax],eax
   14000f030:	add    DWORD PTR [rax],eax
   14000f032:	add    BYTE PTR [rax],al
   14000f034:	push   rax
   14000f035:	add    BYTE PTR [rax],al
   14000f037:	add    BYTE PTR [rax],0x0
	...
   14000f046:	add    DWORD PTR [rax],eax
   14000f048:	add    DWORD PTR [rax],eax
   14000f04a:	add    BYTE PTR [rax],al
   14000f04c:	push   0x800000
	...
   14000f05d:	add    BYTE PTR [rcx],al
   14000f05f:	add    BYTE PTR [rcx],cl
   14000f061:	add    al,0x0
   14000f063:	add    BYTE PTR [rax+0x0],al
	...
   14000f075:	add    BYTE PTR [rcx],al
   14000f077:	add    BYTE PTR [rcx],cl
   14000f079:	add    al,0x0
   14000f07b:	add    BYTE PTR [rax+0x48000000],dl
   14000f081:	stc    
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	mov    BYTE PTR [rbx],al
	...
   14000f08e:	add    BYTE PTR [rax],al
   14000f090:	movabs al,ds:0x8a70000f0
   14000f099:	add    BYTE PTR [rax],al
   14000f09b:	add    BYTE PTR [rax],al
   14000f09d:	add    BYTE PTR [rax],al
   14000f09f:	add    BYTE PTR [rdi+rdi*1],bh
   14000f0a2:	js     0x14000f111
   14000f0a4:	ins    BYTE PTR es:[rdi],dx
   14000f0a5:	and    BYTE PTR [rsi+0x65],dh
   14000f0a8:	jb     0x14000f11d
   14000f0aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f0b1:	xor    BYTE PTR [rdx],ah
   14000f0b3:	and    BYTE PTR [rbp+0x6e],ah
   14000f0b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000f0b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000f0c0:	rex.RX sub eax,0x73202238
   14000f0c6:	je     0x14000f129
   14000f0c8:	outs   dx,BYTE PTR ds:[rsi]
   14000f0c9:	fs (bad) 
   14000f0cb:	ins    BYTE PTR es:[rdi],dx
   14000f0cc:	outs   dx,DWORD PTR ds:[rsi]
   14000f0cd:	outs   dx,BYTE PTR ds:[rsi]
   14000f0ce:	gs cmp eax,0x73657922
   14000f0d4:	and    bh,BYTE PTR [rdi]
   14000f0d6:	ds or  eax,0x2d213c0a
   14000f0dc:	sub    eax,0x706f4320
   14000f0e1:	jns    0x14000f155
   14000f0e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000f0ea:	sub    DWORD PTR [rax],esp
   14000f0ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000f0f4:	je     0x14000f116
   14000f0f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f0f8:	jb     0x14000f16a
   14000f0fa:	outs   dx,DWORD PTR ds:[rsi]
   14000f0fb:	jb     0x14000f15e
   14000f0fd:	je     0x14000f168
   14000f0ff:	outs   dx,DWORD PTR ds:[rsi]
   14000f100:	outs   dx,BYTE PTR ds:[rsi]
   14000f101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e2f34
   14000f107:	cmp    al,0x61
   14000f109:	jae    0x14000f17e
   14000f10b:	gs ins DWORD PTR es:[rdi],dx
   14000f10d:	(bad)  
   14000f10e:	ins    BYTE PTR es:[rdi],dx
   14000f10f:	jns    0x14000f131
   14000f111:	js     0x14000f180
   14000f113:	ins    BYTE PTR es:[rdi],dx
   14000f114:	outs   dx,BYTE PTR ds:[rsi]
   14000f115:	jae    0x14000f154
   14000f117:	and    dh,BYTE PTR [rbp+0x72]
   14000f11a:	outs   dx,BYTE PTR ds:[rsi]
   14000f11b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f11e:	push   0x73616d65
   14000f123:	sub    eax,0x7263696d
   14000f128:	outs   dx,DWORD PTR ds:[rsi]
   14000f129:	jae    0x14000f19a
   14000f12b:	data16 je 0x14000f15b
   14000f12e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f131:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f134:	ins    DWORD PTR es:[rdi],dx
   14000f135:	cs jbe 0x14000f169
   14000f138:	and    ah,BYTE PTR [rax]
   14000f13a:	ins    DWORD PTR es:[rdi],dx
   14000f13b:	(bad)  
   14000f13c:	outs   dx,BYTE PTR ds:[rsi]
   14000f13d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000f144:	jb     0x14000f1b9
   14000f146:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f14d:	xor    BYTE PTR [rdx],ah
   14000f14f:	ds or  eax,0x73613c0a
   14000f155:	jae    0x14000f1bc
   14000f157:	ins    DWORD PTR es:[rdi],dx
   14000f158:	(bad)  
   14000f159:	ins    BYTE PTR es:[rdi],dx
   14000f15a:	jns    0x14000f1a5
   14000f15c:	fs outs dx,BYTE PTR gs:[rsi]
   14000f15f:	je     0x14000f1ca
   14000f161:	je     0x14000f1dc
   14000f163:	or     eax,0x2020200a
   14000f168:	and    BYTE PTR [rsi+0x61],ch
   14000f16b:	ins    DWORD PTR es:[rdi],dx
   14000f16c:	gs cmp eax,0x63694d22
   14000f172:	jb     0x14000f1e3
   14000f174:	jae    0x14000f1e5
   14000f176:	data16 je 0x14000f1a7
   14000f179:	push   rdi
   14000f17a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000f181:	push   rdi
   14000f182:	fs push rbp
   14000f184:	js     0x14000f1ce
   14000f186:	outs   dx,DWORD PTR ds:[rsi]
   14000f187:	jae    0x14000f1fd
   14000f189:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160211199
   14000f18f:	and    BYTE PTR [rax+0x72],dh
   14000f192:	outs   dx,DWORD PTR ds:[rsi]
   14000f193:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f196:	jae    0x14000f207
   14000f198:	jb     0x14000f1db
   14000f19a:	jb     0x14000f1ff
   14000f19c:	push   0x63657469
   14000f1a1:	je     0x14000f218
   14000f1a3:	jb     0x14000f20a
   14000f1a5:	cmp    eax,0x646d6122
   14000f1aa:	ss xor al,0x22
   14000f1ad:	or     eax,0x2020200a
   14000f1b2:	and    BYTE PTR [rsi+0x65],dh
   14000f1b5:	jb     0x14000f22a
   14000f1b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000f1be:	xor    BYTE PTR [rsi],ch
   14000f1c0:	xor    BYTE PTR [rsi],ch
   14000f1c2:	xor    BYTE PTR [rdx],ah
   14000f1c4:	or     eax,0x2020200a
   14000f1c9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000f1cd:	gs cmp eax,0x6e697722
   14000f1d3:	xor    esi,DWORD PTR [rdx]
   14000f1d5:	and    ch,BYTE PTR [rdi]
   14000f1d7:	ds or  eax,0x65643c0a
   14000f1dd:	jae    0x14000f242
   14000f1df:	jb     0x14000f24a
   14000f1e1:	jo     0x14000f257
   14000f1e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x5564573e
   14000f1ea:	js     0x14000f23f
   14000f1ec:	jb     0x14000f264
   14000f1ee:	cmp    al,0x2f
   14000f1f0:	fs gs jae 0x14000f257
   14000f1f4:	jb     0x14000f25f
   14000f1f6:	jo     0x14000f26c
   14000f1f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000f1ff:	fs gs jo 0x14000f268
   14000f203:	outs   dx,BYTE PTR ds:[rsi]
   14000f204:	fs outs dx,BYTE PTR gs:[rsi]
   14000f207:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000f20a:	or     eax,0x2020200a
   14000f20f:	and    BYTE PTR [rsp+riz*2],bh
   14000f212:	gs jo  0x14000f27a
   14000f215:	outs   dx,BYTE PTR ds:[rsi]
   14000f216:	fs outs dx,BYTE PTR gs:[rsi]
   14000f219:	je     0x14000f25c
   14000f21b:	jae    0x14000f290
   14000f21d:	gs ins DWORD PTR es:[rdi],dx
   14000f21f:	(bad)  
   14000f220:	ins    BYTE PTR es:[rdi],dx
   14000f221:	jns    0x14000f261
   14000f223:	or     eax,0x2020200a
   14000f228:	and    BYTE PTR [rax],ah
   14000f22a:	and    BYTE PTR [rax],ah
   14000f22c:	and    BYTE PTR [rcx+riz*2],bh
   14000f22f:	jae    0x14000f2a4
   14000f231:	gs ins DWORD PTR es:[rdi],dx
   14000f233:	(bad)  
   14000f234:	ins    BYTE PTR es:[rdi],dx
   14000f235:	jns    0x14000f280
   14000f237:	fs outs dx,BYTE PTR gs:[rsi]
   14000f23a:	je     0x14000f2a5
   14000f23c:	je     0x14000f2b7
   14000f23e:	or     eax,0x2020200a
   14000f243:	and    BYTE PTR [rax],ah
   14000f245:	and    BYTE PTR [rax],ah
   14000f247:	and    BYTE PTR [rax],ah
   14000f249:	and    BYTE PTR [rax],ah
   14000f24b:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000f24f:	gs cmp eax,0x6e697722
   14000f255:	xor    esi,DWORD PTR [rdx]
   14000f257:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160211267
   14000f25d:	and    BYTE PTR [rax],ah
   14000f25f:	and    BYTE PTR [rax],ah
   14000f261:	and    BYTE PTR [rax],ah
   14000f263:	and    BYTE PTR [rax],ah
   14000f265:	and    BYTE PTR [rsi+0x61],ch
   14000f268:	ins    DWORD PTR es:[rdi],dx
   14000f269:	gs cmp eax,0x63694d22
   14000f26f:	jb     0x14000f2e0
   14000f271:	jae    0x14000f2e2
   14000f273:	data16 je 0x14000f2a4
   14000f276:	push   rdi
   14000f277:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000f27e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000f280:	ins    DWORD PTR es:[rdi],dx
   14000f281:	ins    DWORD PTR es:[rdi],dx
   14000f282:	outs   dx,DWORD PTR ds:[rsi]
   14000f283:	outs   dx,BYTE PTR ds:[rsi]
   14000f284:	sub    eax,0x746e6f43
   14000f289:	jb     0x14000f2fa
   14000f28b:	ins    BYTE PTR es:[rdi],dx
   14000f28c:	jae    0x14000f2b0
   14000f28e:	or     eax,0x2020200a
   14000f293:	and    BYTE PTR [rax],ah
   14000f295:	and    BYTE PTR [rax],ah
   14000f297:	and    BYTE PTR [rax],ah
   14000f299:	and    BYTE PTR [rax],ah
   14000f29b:	and    BYTE PTR [rsi+0x65],dh
   14000f29e:	jb     0x14000f313
   14000f2a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000f2a7:	xor    BYTE PTR [rsi],ch
   14000f2a9:	xor    BYTE PTR [rsi],ch
   14000f2ab:	xor    BYTE PTR [rdx],ah
   14000f2ad:	or     eax,0x2020200a
   14000f2b2:	and    BYTE PTR [rax],ah
   14000f2b4:	and    BYTE PTR [rax],ah
   14000f2b6:	and    BYTE PTR [rax],ah
   14000f2b8:	and    BYTE PTR [rax],ah
   14000f2ba:	and    BYTE PTR [rax+0x72],dh
   14000f2bd:	outs   dx,DWORD PTR ds:[rsi]
   14000f2be:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f2c1:	jae    0x14000f332
   14000f2c3:	jb     0x14000f306
   14000f2c5:	jb     0x14000f32a
   14000f2c7:	push   0x63657469
   14000f2cc:	je     0x14000f343
   14000f2ce:	jb     0x14000f335
   14000f2d0:	cmp    eax,0xd222a22
   14000f2d5:	or     ah,BYTE PTR [rax]
   14000f2d7:	and    BYTE PTR [rax],ah
   14000f2d9:	and    BYTE PTR [rax],ah
   14000f2db:	and    BYTE PTR [rax],ah
   14000f2dd:	and    BYTE PTR [rax],ah
   14000f2df:	and    BYTE PTR [rax],ah
   14000f2e1:	and    BYTE PTR [rax+0x75],dh
   14000f2e4:	(bad)  
   14000f2e5:	ins    BYTE PTR es:[rdi],dx
   14000f2e6:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000f2ed:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000f2f1:	and    dh,BYTE PTR [rsi]
   14000f2f3:	xor    eax,0x36623539
   14000f2f8:	xor    al,0x31
   14000f2fa:	xor    al,0x34
   14000f2fc:	movsxd esp,DWORD PTR [rbx+0x66]
   14000f2ff:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000f303:	or     eax,0x2020200a
   14000f308:	and    BYTE PTR [rax],ah
   14000f30a:	and    BYTE PTR [rax],ah
   14000f30c:	and    BYTE PTR [rax],ah
   14000f30e:	and    BYTE PTR [rax],ah
   14000f310:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000f314:	addr32 jne 0x14000f378
   14000f317:	addr32 gs cmp eax,0xd222a22
   14000f31e:	or     ah,BYTE PTR [rax]
   14000f320:	and    BYTE PTR [rax],ah
   14000f322:	and    BYTE PTR [rax],ah
   14000f324:	and    BYTE PTR [rax],ah
   14000f326:	and    BYTE PTR [rdi],ch
   14000f328:	ds or  eax,0x2020200a
   14000f32e:	and    BYTE PTR [rdi+rbp*1],bh
   14000f331:	fs gs jo 0x14000f39a
   14000f335:	outs   dx,BYTE PTR ds:[rsi]
   14000f336:	fs outs dx,BYTE PTR gs:[rsi]
   14000f339:	je     0x14000f37c
   14000f33b:	jae    0x14000f3b0
   14000f33d:	gs ins DWORD PTR es:[rdi],dx
   14000f33f:	(bad)  
   14000f340:	ins    BYTE PTR es:[rdi],dx
   14000f341:	jns    0x14000f381
   14000f343:	or     eax,0x642f3c0a
   14000f348:	gs jo  0x14000f3b0
   14000f34b:	outs   dx,BYTE PTR ds:[rsi]
   14000f34c:	fs outs dx,BYTE PTR gs:[rsi]
   14000f34f:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000f352:	or     eax,0x72743c0a
   14000f357:	jne    0x14000f3cc
   14000f359:	je     0x14000f3a4
   14000f35b:	outs   dx,BYTE PTR ds:[rsi]
   14000f35c:	outs   dx,WORD PTR ds:[rsi]
   14000f35e:	and    BYTE PTR [rax+0x6d],bh
   14000f361:	ins    BYTE PTR es:[rdi],dx
   14000f362:	outs   dx,BYTE PTR ds:[rsi]
   14000f363:	jae    0x14000f3a2
   14000f365:	and    dh,BYTE PTR [rbp+0x72]
   14000f368:	outs   dx,BYTE PTR ds:[rsi]
   14000f369:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f36c:	push   0x73616d65
   14000f371:	sub    eax,0x7263696d
   14000f376:	outs   dx,DWORD PTR ds:[rsi]
   14000f377:	jae    0x14000f3e8
   14000f379:	data16 je 0x14000f3a9
   14000f37c:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f37f:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f382:	ins    DWORD PTR es:[rdi],dx
   14000f383:	cs jbe 0x14000f3b9
   14000f386:	and    bh,BYTE PTR [rsi]
   14000f388:	or     eax,0x2020200a
   14000f38d:	and    BYTE PTR [rbx+rsi*2],bh
   14000f390:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000f394:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000f39c:	and    BYTE PTR [rax],ah
   14000f39e:	and    BYTE PTR [rax],ah
   14000f3a0:	and    BYTE PTR [rax],ah
   14000f3a2:	cmp    al,0x72
   14000f3a4:	gs jno 0x14000f41c
   14000f3a7:	gs jae 0x14000f41e
   14000f3aa:	gs fs push rax
   14000f3ad:	jb     0x14000f418
   14000f3af:	jbe    0x14000f41a
   14000f3b1:	ins    BYTE PTR es:[rdi],dx
   14000f3b2:	gs addr32 gs jae 0x14000f3f5
   14000f3b7:	or     eax,0x2020200a
   14000f3bc:	and    BYTE PTR [rax],ah
   14000f3be:	and    BYTE PTR [rax],ah
   14000f3c0:	and    BYTE PTR [rax],ah
   14000f3c2:	and    BYTE PTR [rax],ah
   14000f3c4:	and    BYTE PTR [rdx+rsi*2],bh
   14000f3c7:	gs jno 0x14000f43f
   14000f3ca:	gs jae 0x14000f441
   14000f3cd:	gs fs rex.RB js 0x14000f437
   14000f3d2:	movsxd esi,DWORD PTR [rbp+0x74]
   14000f3d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000f3dc:	ins    BYTE PTR es:[rdi],dx
   14000f3dd:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000f3e1:	gs ins BYTE PTR es:[rdi],dx
   14000f3e3:	cmp    eax,0x49736122
   14000f3e8:	outs   dx,BYTE PTR ds:[rsi]
   14000f3e9:	jbe    0x14000f45a
   14000f3eb:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000f3ef:	and    BYTE PTR [rbp+0x69],dh
   14000f3f2:	movsxd esp,DWORD PTR [r11+0x65]
   14000f3f6:	jae    0x14000f46b
   14000f3f8:	cmp    eax,0x6c616622
   14000f3fd:	jae    0x14000f464
   14000f3ff:	and    ch,BYTE PTR [rdi]
   14000f401:	ds or  eax,0x2020200a
   14000f407:	and    BYTE PTR [rax],ah
   14000f409:	and    BYTE PTR [rax],ah
   14000f40b:	and    BYTE PTR [rdi+rbp*1],bh
   14000f40e:	jb     0x14000f475
   14000f410:	jno    0x14000f487
   14000f412:	gs jae 0x14000f489
   14000f415:	gs fs push rax
   14000f418:	jb     0x14000f483
   14000f41a:	jbe    0x14000f485
   14000f41c:	ins    BYTE PTR es:[rdi],dx
   14000f41d:	gs addr32 gs jae 0x14000f460
   14000f422:	or     eax,0x2020200a
   14000f427:	and    BYTE PTR [rdi+rbp*1],bh
   14000f42a:	jae    0x14000f491
   14000f42c:	movsxd esi,DWORD PTR [rbp+0x72]
   14000f42f:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000f437:	je     0x14000f4ab
   14000f439:	jne    0x14000f4ae
   14000f43b:	je     0x14000f486
   14000f43d:	outs   dx,BYTE PTR ds:[rsi]
   14000f43e:	outs   dx,WORD PTR ds:[rsi]
   14000f440:	ds or  eax,0x70613c0a
   14000f446:	jo     0x14000f4b4
   14000f448:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f44f:	and    BYTE PTR [rax+0x6d],bh
   14000f452:	ins    BYTE PTR es:[rdi],dx
   14000f453:	outs   dx,BYTE PTR ds:[rsi]
   14000f454:	jae    0x14000f493
   14000f456:	and    dh,BYTE PTR [rbp+0x72]
   14000f459:	outs   dx,BYTE PTR ds:[rsi]
   14000f45a:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f45d:	push   0x73616d65
   14000f462:	sub    eax,0x7263696d
   14000f467:	outs   dx,DWORD PTR ds:[rsi]
   14000f468:	jae    0x14000f4d9
   14000f46a:	data16 je 0x14000f49a
   14000f46d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f470:	cmp    ah,BYTE PTR [rcx+0x73]
   14000f473:	ins    DWORD PTR es:[rdi],dx
   14000f474:	cs jbe 0x14000f4aa
   14000f477:	and    bh,BYTE PTR [rsi]
   14000f479:	or     eax,0x2020200a
   14000f47e:	and    BYTE PTR [rdi+rsi*2],bh
   14000f481:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   14000f488:	gs je  0x14000f4ff
   14000f48b:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000f492:	and    BYTE PTR [rax],ah
   14000f494:	and    BYTE PTR [rax],ah
   14000f496:	and    BYTE PTR [rax],ah
   14000f498:	and    BYTE PTR [rax],ah
   14000f49a:	cmp    al,0x64
   14000f49c:	jo     0x14000f507
   14000f49e:	rex.B ja 0x14000f502
   14000f4a1:	jb     0x14000f508
   14000f4a3:	and    BYTE PTR [rax],ah
   14000f4a5:	js     0x14000f514
   14000f4a7:	ins    BYTE PTR es:[rdi],dx
   14000f4a8:	outs   dx,BYTE PTR ds:[rsi]
   14000f4a9:	jae    0x14000f4e8
   14000f4ab:	and    ch,BYTE PTR [rax+0x74]
   14000f4ae:	je     0x14000f520
   14000f4b0:	cmp    ch,BYTE PTR [rdi]
   14000f4b2:	(bad)  
   14000f4b3:	jae    0x14000f518
   14000f4b5:	push   0x73616d65
   14000f4ba:	cs ins DWORD PTR es:[rdi],dx
   14000f4bc:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000f4c3:	je     0x14000f4f3
   14000f4c5:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f4c8:	(bad)  
   14000f4c9:	push   rbx
   14000f4ca:	rex.WRB
   14000f4cb:	rex.WB (bad) 
   14000f4cd:	xor    dh,BYTE PTR [rax]
   14000f4cf:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a4c04
   14000f4d5:	outs   dx,DWORD PTR fs:[rsi]
   14000f4d7:	ja     0x14000f54c
   14000f4d9:	push   rbx
   14000f4da:	gs je  0x14000f551
   14000f4dd:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   14000f4e4:	jb     0x14000f55b
   14000f4e6:	gs cmp al,0x2f
   14000f4e9:	fs jo  0x14000f555
   14000f4ec:	rex.B ja 0x14000f550
   14000f4ef:	jb     0x14000f556
   14000f4f1:	ds or  eax,0x2020200a
   14000f4f7:	and    BYTE PTR [rdi+rbp*1],bh
   14000f4fa:	ja     0x14000f565
   14000f4fc:	outs   dx,BYTE PTR ds:[rsi]
   14000f4fd:	outs   dx,DWORD PTR fs:[rsi]
   14000f4ff:	ja     0x14000f574
   14000f501:	push   rbx
   14000f502:	gs je  0x14000f579
   14000f505:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000f50c:	cmp    al,0x2f
   14000f50e:	(bad)  
   14000f50f:	jo     0x14000f581
   14000f511:	ins    BYTE PTR es:[rdi],dx
   14000f512:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f519:	ds or  eax,0x2020200a
   14000f51f:	and    BYTE PTR [rbx+riz*2],bh
   14000f522:	outs   dx,DWORD PTR ds:[rsi]
   14000f523:	ins    DWORD PTR es:[rdi],dx
   14000f524:	jo     0x14000f587
   14000f526:	je     0x14000f591
   14000f528:	(bad)  
   14000f529:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   14000f531:	ins    BYTE PTR es:[rdi],dx
   14000f532:	outs   dx,BYTE PTR ds:[rsi]
   14000f533:	jae    0x14000f572
   14000f535:	and    dh,BYTE PTR [rbp+0x72]
   14000f538:	outs   dx,BYTE PTR ds:[rsi]
   14000f539:	cmp    dh,BYTE PTR [rbx+0x63]
   14000f53c:	push   0x73616d65
   14000f541:	sub    eax,0x7263696d
   14000f546:	outs   dx,DWORD PTR ds:[rsi]
   14000f547:	jae    0x14000f5b8
   14000f549:	data16 je 0x14000f579
   14000f54c:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f54f:	cmp    ah,BYTE PTR [rbx+0x6f]
   14000f552:	ins    DWORD PTR es:[rdi],dx
   14000f553:	jo     0x14000f5b6
   14000f555:	je     0x14000f5c0
   14000f557:	(bad)  
   14000f558:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   14000f560:	and    bh,BYTE PTR [rsi]
   14000f562:	and    BYTE PTR [rip+0x2020200a],cl        # 0x160211572
   14000f568:	and    BYTE PTR [rax],ah
   14000f56a:	and    BYTE PTR [rax],ah
   14000f56c:	and    BYTE PTR [rcx+riz*2],bh
   14000f56f:	jo     0x14000f5e1
   14000f571:	ins    BYTE PTR es:[rdi],dx
   14000f572:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f579:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x16021158a
   14000f580:	and    BYTE PTR [rax],ah
   14000f582:	and    BYTE PTR [rax],ah
   14000f584:	and    BYTE PTR [rax],ah
   14000f586:	and    BYTE PTR [rax],ah
   14000f588:	and    BYTE PTR [rcx+riz*1],bh
   14000f58b:	sub    eax,0x6968542d
   14000f590:	jae    0x14000f5b2
   14000f592:	rex.WB
   14000f593:	and    BYTE PTR fs:[rsi+0x61],dh
   14000f597:	ins    BYTE PTR es:[rdi],dx
   14000f598:	jne    0x14000f5ff
   14000f59a:	and    BYTE PTR [rcx+0x6e],ch
   14000f59d:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   14000f5a5:	je     0x14000f60f
   14000f5a7:	and    BYTE PTR gs:[rcx+0x70],ah
   14000f5ab:	jo     0x14000f619
   14000f5ad:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f5b4:	and    BYTE PTR [rbx+0x75],dh
   14000f5b7:	jo     0x14000f629
   14000f5b9:	outs   dx,DWORD PTR ds:[rsi]
   14000f5ba:	jb     0x14000f630
   14000f5bc:	jae    0x14000f5de
   14000f5be:	push   rdi
   14000f5bf:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   14000f5c6:	push   rsi
   14000f5c7:	imul   esi,DWORD PTR [rbx+0x74],0x65532f61
   14000f5ce:	jb     0x14000f646
   14000f5d0:	gs jb  0x14000f5f3
   14000f5d3:	xor    dh,BYTE PTR [rax]
   14000f5d5:	xor    BYTE PTR [rax],bh
   14000f5d7:	and    BYTE PTR [rsi+0x75],ah
   14000f5da:	outs   dx,BYTE PTR ds:[rsi]
   14000f5db:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000f5df:	outs   dx,BYTE PTR ds:[rsi]
   14000f5e0:	(bad)  
   14000f5e1:	ins    BYTE PTR es:[rdi],dx
   14000f5e2:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0xd3e2d2d
   14000f5ea:	or     ah,BYTE PTR [rax]
   14000f5ec:	and    BYTE PTR [rax],ah
   14000f5ee:	and    BYTE PTR [rax],ah
   14000f5f0:	and    BYTE PTR [rax],ah
   14000f5f2:	and    BYTE PTR [rax],ah
   14000f5f4:	and    BYTE PTR [rax],ah
   14000f5f6:	and    BYTE PTR [rbx+rsi*2],bh
   14000f5f9:	jne    0x14000f66b
   14000f5fb:	jo     0x14000f66c
   14000f5fd:	jb     0x14000f673
   14000f5ff:	gs fs rex.WRXB push r11
   14000f603:	and    BYTE PTR [rcx+0x64],cl
   14000f606:	cmp    eax,0x32657b22
   14000f60b:	xor    BYTE PTR [rcx],dh
   14000f60d:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   14000f614:	xor    al,0x36
   14000f616:	sub    eax,0x35633334
   14000f61b:	sub    eax,0x65663561
   14000f620:	sub    eax,0x64383030
   14000f625:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   14000f62c:	xor    BYTE PTR [rbp+0x22],bh
   14000f62f:	(bad)  
   14000f630:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x160211641
   14000f637:	and    BYTE PTR [rax],ah
   14000f639:	and    BYTE PTR [rax],ah
   14000f63b:	and    BYTE PTR [rax],ah
   14000f63d:	and    BYTE PTR [rax],ah
   14000f63f:	and    BYTE PTR [rcx+riz*1],bh
   14000f642:	sub    eax,0x6968542d
   14000f647:	jae    0x14000f669
   14000f649:	rex.WB
   14000f64a:	and    BYTE PTR fs:[rsi+0x61],dh
   14000f64e:	ins    BYTE PTR es:[rdi],dx
   14000f64f:	jne    0x14000f6b6
   14000f651:	and    BYTE PTR [rcx+0x6e],ch
   14000f654:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   14000f65c:	je     0x14000f6c6
   14000f65e:	and    BYTE PTR gs:[rcx+0x70],ah
   14000f662:	jo     0x14000f6d0
   14000f664:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f66b:	and    BYTE PTR [rbx+0x75],dh
   14000f66e:	jo     0x14000f6e0
   14000f670:	outs   dx,DWORD PTR ds:[rsi]
   14000f671:	jb     0x14000f6e7
   14000f673:	jae    0x14000f695
   14000f675:	push   rdi
   14000f676:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   14000f67d:	(bad)  
   14000f67e:	(bad)  
   14000f67f:	push   rbx
   14000f680:	gs jb  0x14000f6f9
   14000f683:	gs jb  0x14000f6a6
   14000f686:	xor    dh,BYTE PTR [rax]
   14000f688:	xor    BYTE PTR [rax],bh
   14000f68a:	and    BYTE PTR [rdx+0x32],dl
   14000f68d:	and    BYTE PTR [rsi+0x75],ah
   14000f690:	outs   dx,BYTE PTR ds:[rsi]
   14000f691:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000f695:	outs   dx,BYTE PTR ds:[rsi]
   14000f696:	(bad)  
   14000f697:	ins    BYTE PTR es:[rdi],dx
   14000f698:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0xa0d3e2d
   14000f6a0:	and    BYTE PTR [rax],ah
   14000f6a2:	and    BYTE PTR [rax],ah
   14000f6a4:	and    BYTE PTR [rax],ah
   14000f6a6:	and    BYTE PTR [rax],ah
   14000f6a8:	and    BYTE PTR [rax],ah
   14000f6aa:	and    BYTE PTR [rax],ah
   14000f6ac:	cmp    al,0x73
   14000f6ae:	jne    0x14000f720
   14000f6b0:	jo     0x14000f721
   14000f6b2:	jb     0x14000f728
   14000f6b4:	gs fs rex.WRXB push r11
   14000f6b8:	and    BYTE PTR [rcx+0x64],cl
   14000f6bb:	cmp    eax,0x35337b22
   14000f6c0:	xor    DWORD PTR [rbx],esi
   14000f6c2:	cmp    BYTE PTR [rdx+0x39],ah
   14000f6c5:	(bad)  
   14000f6c6:	sub    eax,0x36396435
   14000f6cb:	sub    eax,0x64626634
   14000f6d0:	sub    eax,0x64326538
   14000f6d5:	sub    eax,0x34343261
   14000f6da:	xor    BYTE PTR [rdx],dh
   14000f6dc:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a1343048
   14000f6e2:	jge    0x14000f706
   14000f6e4:	(bad)  
   14000f6e5:	ds or  eax,0x2020200a
   14000f6eb:	and    BYTE PTR [rax],ah
   14000f6ed:	and    BYTE PTR [rax],ah
   14000f6ef:	and    BYTE PTR [rax],ah
   14000f6f1:	and    BYTE PTR [rax],ah
   14000f6f3:	and    BYTE PTR [rcx+riz*1],bh
   14000f6f6:	sub    eax,0x6968542d
   14000f6fb:	jae    0x14000f71d
   14000f6fd:	rex.WB
   14000f6fe:	and    BYTE PTR fs:[rsi+0x61],dh
   14000f702:	ins    BYTE PTR es:[rdi],dx
   14000f703:	jne    0x14000f76a
   14000f705:	and    BYTE PTR [rcx+0x6e],ch
   14000f708:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   14000f710:	je     0x14000f77a
   14000f712:	and    BYTE PTR gs:[rcx+0x70],ah
   14000f716:	jo     0x14000f784
   14000f718:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f71f:	and    BYTE PTR [rbx+0x75],dh
   14000f722:	jo     0x14000f794
   14000f724:	outs   dx,DWORD PTR ds:[rsi]
   14000f725:	jb     0x14000f79b
   14000f727:	jae    0x14000f749
   14000f729:	push   rdi
   14000f72a:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   14000f731:	cmp    BYTE PTR [rdi],ch
   14000f733:	push   rbx
   14000f734:	gs jb  0x14000f7ad
   14000f737:	gs jb  0x14000f75a
   14000f73a:	xor    dh,BYTE PTR [rax]
   14000f73c:	xor    DWORD PTR [rdx],esi
   14000f73e:	and    BYTE PTR [rsi+0x75],ah
   14000f741:	outs   dx,BYTE PTR ds:[rsi]
   14000f742:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000f746:	outs   dx,BYTE PTR ds:[rsi]
   14000f747:	(bad)  
   14000f748:	ins    BYTE PTR es:[rdi],dx
   14000f749:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0xa0d3e2d
   14000f751:	and    BYTE PTR [rax],ah
   14000f753:	and    BYTE PTR [rax],ah
   14000f755:	and    BYTE PTR [rax],ah
   14000f757:	and    BYTE PTR [rax],ah
   14000f759:	and    BYTE PTR [rax],ah
   14000f75b:	and    BYTE PTR [rax],ah
   14000f75d:	cmp    al,0x73
   14000f75f:	jne    0x14000f7d1
   14000f761:	jo     0x14000f7d2
   14000f763:	jb     0x14000f7d9
   14000f765:	gs fs rex.WRXB push r11
   14000f769:	and    BYTE PTR [rcx+0x64],cl
   14000f76c:	cmp    eax,0x61347b22
   14000f771:	xor    ah,BYTE PTR [rsi+0x32]
   14000f774:	cmp    BYTE PTR [rbp+0x33],ah
   14000f777:	sub    eax,0x39623335
   14000f77c:	sub    eax,0x31343434
   14000f781:	sub    eax,0x63396162
   14000f786:	sub    eax,0x64393664
   14000f78b:	xor    al,0x61
   14000f78d:	xor    al,0x61
   14000f78f:	ss xor edi,DWORD PTR gs:[rax]
   14000f793:	jge    0x14000f7b7
   14000f795:	(bad)  
   14000f796:	ds or  eax,0x2020200a
   14000f79c:	and    BYTE PTR [rcx],cl
   14000f79e:	and    BYTE PTR [rax],ah
   14000f7a0:	and    BYTE PTR [rax],ah
   14000f7a2:	cmp    al,0x21
   14000f7a4:	sub    eax,0x6854202d
   14000f7a9:	imul   esi,DWORD PTR [rbx+0x20],0x76206449
   14000f7b0:	(bad)  
   14000f7b1:	ins    BYTE PTR es:[rdi],dx
   14000f7b2:	jne    0x14000f819
   14000f7b4:	and    BYTE PTR [rcx+0x6e],ch
   14000f7b7:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   14000f7bf:	je     0x14000f829
   14000f7c1:	and    BYTE PTR gs:[rcx+0x70],ah
   14000f7c5:	jo     0x14000f833
   14000f7c7:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f7ce:	and    BYTE PTR [rbx+0x75],dh
   14000f7d1:	jo     0x14000f843
   14000f7d3:	outs   dx,DWORD PTR ds:[rsi]
   14000f7d4:	jb     0x14000f84a
   14000f7d6:	jae    0x14000f7f8
   14000f7d8:	push   rdi
   14000f7d9:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   14000f7e0:	rex.X ins BYTE PTR es:[rdi],dx
   14000f7e2:	jne    0x14000f849
   14000f7e4:	(bad)  
   14000f7e5:	push   rbx
   14000f7e6:	gs jb  0x14000f85f
   14000f7e9:	gs jb  0x14000f80c
   14000f7ec:	xor    dh,BYTE PTR [rax]
   14000f7ee:	xor    DWORD PTR [rdx],esi
   14000f7f0:	and    BYTE PTR [rdx+0x32],dl
   14000f7f3:	and    BYTE PTR [rsi+0x75],ah
   14000f7f6:	outs   dx,BYTE PTR ds:[rsi]
   14000f7f7:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000f7fb:	outs   dx,BYTE PTR ds:[rsi]
   14000f7fc:	(bad)  
   14000f7fd:	ins    BYTE PTR es:[rdi],dx
   14000f7fe:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x20203e2d
   14000f806:	and    BYTE PTR [rax],ah
   14000f808:	and    BYTE PTR [rax],ah
   14000f80a:	and    BYTE PTR [rax],ah
   14000f80c:	and    BYTE PTR [rax],ah
   14000f80e:	and    BYTE PTR [rax],ah
   14000f810:	or     eax,0x2020200a
   14000f815:	and    BYTE PTR [rcx],cl
   14000f817:	and    BYTE PTR [rax],ah
   14000f819:	and    BYTE PTR [rax],ah
   14000f81b:	cmp    al,0x73
   14000f81d:	jne    0x14000f88f
   14000f81f:	jo     0x14000f890
   14000f821:	jb     0x14000f897
   14000f823:	gs fs rex.WRXB push r11
   14000f827:	and    BYTE PTR [rcx+0x64],cl
   14000f82a:	cmp    eax,0x66317b22
   14000f82f:	ss (bad) 
   14000f831:	movsxd esi,DWORD PTR ss:[rdi]
   14000f834:	ss sub eax,0x31653038
   14000f83a:	sub    eax,0x39333234
   14000f83f:	sub    eax,0x62623539
   14000f844:	sub    eax,0x30643338
   14000f849:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   14000f850:	cmp    BYTE PTR [rbp+0x22],bh
   14000f853:	(bad)  
   14000f854:	ds or  eax,0x2020200a
   14000f85a:	and    BYTE PTR [rcx],cl
   14000f85c:	and    BYTE PTR [rax],ah
   14000f85e:	and    BYTE PTR [rax],ah
   14000f860:	cmp    al,0x21
   14000f862:	sub    eax,0x6854202d
   14000f867:	imul   esi,DWORD PTR [rbx+0x20],0x76206449
   14000f86e:	(bad)  
   14000f86f:	ins    BYTE PTR es:[rdi],dx
   14000f870:	jne    0x14000f8d7
   14000f872:	and    BYTE PTR [rcx+0x6e],ch
   14000f875:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   14000f87d:	je     0x14000f8e7
   14000f87f:	and    BYTE PTR gs:[rcx+0x70],ah
   14000f883:	jo     0x14000f8f1
   14000f885:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f88c:	and    BYTE PTR [rbx+0x75],dh
   14000f88f:	jo     0x14000f901
   14000f891:	outs   dx,DWORD PTR ds:[rsi]
   14000f892:	jb     0x14000f908
   14000f894:	jae    0x14000f8b6
   14000f896:	push   rdi
   14000f897:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   14000f89e:	push   rsp
   14000f89f:	push   0x68736572
   14000f8a4:	outs   dx,DWORD PTR ds:[rsi]
   14000f8a5:	ins    BYTE PTR es:[rdi],dx
   14000f8a6:	and    BYTE PTR fs:[rsi+0x75],ah
   14000f8aa:	outs   dx,BYTE PTR ds:[rsi]
   14000f8ab:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000f8af:	outs   dx,BYTE PTR ds:[rsi]
   14000f8b0:	(bad)  
   14000f8b1:	ins    BYTE PTR es:[rdi],dx
   14000f8b2:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x20203e2d
   14000f8ba:	and    BYTE PTR [rax],ah
   14000f8bc:	and    BYTE PTR [rax],ah
   14000f8be:	and    BYTE PTR [rax],ah
   14000f8c0:	and    BYTE PTR [rax],ah
   14000f8c2:	and    BYTE PTR [rax],ah
   14000f8c4:	or     eax,0x2020200a
   14000f8c9:	and    BYTE PTR [rcx],cl
   14000f8cb:	and    BYTE PTR [rax],ah
   14000f8cd:	and    BYTE PTR [rax],ah
   14000f8cf:	cmp    al,0x73
   14000f8d1:	jne    0x14000f943
   14000f8d3:	jo     0x14000f944
   14000f8d5:	jb     0x14000f94b
   14000f8d7:	gs fs rex.WRXB push r11
   14000f8db:	and    BYTE PTR [rcx+0x64],cl
   14000f8de:	cmp    eax,0x65387b22
   14000f8e3:	xor    BYTE PTR [rsi+0x37],ah
   14000f8e6:	(bad)  
   14000f8e7:	xor    DWORD PTR [rdx],esi
   14000f8e9:	sub    eax,0x33626662
   14000f8ee:	sub    eax,0x38656634
   14000f8f3:	sub    eax,0x35613962
   14000f8f8:	sub    eax,0x64663834
   14000f8fd:	xor    eax,0x35316130
   14000f902:	(bad)  
   14000f903:	cmp    DWORD PTR [rcx+0x7d],esp
   14000f906:	and    ch,BYTE PTR [rdi]
   14000f908:	ds or  eax,0x2020200a
   14000f90e:	and    BYTE PTR [rax],ah
   14000f910:	and    BYTE PTR [rax],ah
   14000f912:	and    BYTE PTR [rdi+rbp*1],bh
   14000f915:	(bad)  
   14000f916:	jo     0x14000f988
   14000f918:	ins    BYTE PTR es:[rdi],dx
   14000f919:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000f920:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x160211931
   14000f927:	and    BYTE PTR [rdi+rbp*1],bh
   14000f92a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f92d:	jo     0x14000f990
   14000f92f:	je     0x14000f99a
   14000f931:	(bad)  
   14000f932:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0xa0d3e79
   14000f93a:	cmp    al,0x2f
   14000f93c:	(bad)  
   14000f93d:	jae    0x14000f9b2
   14000f93f:	gs ins DWORD PTR es:[rdi],dx
   14000f941:	(bad)  
   14000f942:	ins    BYTE PTR es:[rdi],dx
   14000f943:	jns    0x14000f983
   14000f945:	or     eax,0x388000a
   14000f94a:	xor    al,0x0
   14000f94c:	add    BYTE PTR [rax],al
   14000f94e:	push   rsi
   14000f94f:	add    BYTE PTR [rbx+0x0],dl
   14000f952:	pop    rdi
   14000f953:	add    BYTE PTR [rsi+0x0],dl
   14000f956:	add    BYTE PTR [r10+0x0],r10b
   14000f95a:	push   rbx
   14000f95b:	add    BYTE PTR [rcx+0x0],cl
   14000f95e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000f962:	pop    rdi
   14000f963:	add    BYTE PTR [rcx+0x0],cl
   14000f966:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000f96a:	rex.WRXB add BYTE PTR [r8],r8b
   14000f96d:	add    BYTE PTR [rax],al
   14000f96f:	add    BYTE PTR [rbp+0xfeef04],bh
   14000f975:	add    BYTE PTR [rcx],al
   14000f977:	add    BYTE PTR [rax],cl
   14000f979:	add    BYTE PTR [rax+rax*1],al
   14000f97c:	add    BYTE PTR [rax+0x0],al
   14000f97f:	sub    BYTE PTR [rax],cl
   14000f981:	add    BYTE PTR [rax+rax*1],al
   14000f984:	add    BYTE PTR [rax+0x0],al
   14000f987:	sub    BYTE PTR [rdi],bh
   14000f989:	add    BYTE PTR [rax],al
   14000f98b:	add    BYTE PTR [rax],al
   14000f98d:	add    BYTE PTR [rax],al
   14000f98f:	add    BYTE PTR [rax+rax*1],al
   14000f992:	add    al,0x0
   14000f994:	add    al,BYTE PTR [rax]
	...
   14000f9a2:	add    BYTE PTR [rax],al
   14000f9a4:	call   0x14100f9ab
   14000f9a9:	add    BYTE PTR [rbx+0x0],dl
   14000f9ac:	je     0x14000f9ae
   14000f9ae:	jb     0x14000f9b0
   14000f9b0:	imul   eax,DWORD PTR [rax],0x67006e
   14000f9b6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000f9ba:	ins    BYTE PTR es:[rdi],dx
   14000f9bb:	add    BYTE PTR [rbp+0x0],ah
   14000f9be:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000f9c2:	data16 add BYTE PTR [rdi+0x0],ch
   14000f9c6:	add    BYTE PTR [rax],al
   14000f9c8:	(bad)
   14000f9cc:	add    DWORD PTR [rax],eax
   14000f9ce:	xor    BYTE PTR [rax],al
   14000f9d0:	xor    al,0x0
   14000f9d2:	xor    BYTE PTR [rax],al
   14000f9d4:	cmp    DWORD PTR [rax],eax
   14000f9d6:	xor    BYTE PTR [rax],al
   14000f9d8:	xor    al,0x0
   14000f9da:	rex.X add BYTE PTR [rax],sil
   14000f9dd:	add    BYTE PTR [rax],al
   14000f9df:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000f9e3:	add    BYTE PTR [rcx],al
   14000f9e5:	add    BYTE PTR [rbx+0x0],al
   14000f9e8:	outs   dx,DWORD PTR ds:[rsi]
   14000f9e9:	add    BYTE PTR [rbp+0x0],ch
   14000f9ec:	jo     0x14000f9ee
   14000f9ee:	(bad)  
   14000f9ef:	add    BYTE PTR [rsi+0x0],ch
   14000f9f2:	jns    0x14000f9f4
   14000f9f4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000f9f8:	ins    DWORD PTR es:[rdi],dx
   14000f9f9:	add    BYTE PTR [rbp+0x0],ah
   14000f9fc:	add    BYTE PTR [rax],al
   14000f9fe:	add    BYTE PTR [rax],al
   14000fa00:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000fa04:	movsxd eax,DWORD PTR [rax]
   14000fa06:	jb     0x14000fa08
   14000fa08:	outs   dx,DWORD PTR ds:[rsi]
   14000fa09:	add    BYTE PTR [rbx+0x0],dh
   14000fa0c:	outs   dx,DWORD PTR ds:[rsi]
   14000fa0d:	add    BYTE PTR [rsi+0x0],ah
   14000fa10:	je     0x14000fa12
   14000fa12:	and    BYTE PTR [rax],al
   14000fa14:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000fa18:	jb     0x14000fa1a
   14000fa1a:	jo     0x14000fa1c
   14000fa1c:	outs   dx,DWORD PTR ds:[rsi]
   14000fa1d:	add    BYTE PTR [rdx+0x0],dh
   14000fa20:	(bad)  
   14000fa21:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000fa25:	add    BYTE PTR [rdi+0x0],ch
   14000fa28:	outs   dx,BYTE PTR ds:[rsi]
   14000fa29:	add    BYTE PTR [rax],al
   14000fa2b:	add    BYTE PTR [rax+rax*1+0x16],dl
   14000fa2f:	add    BYTE PTR [rcx],al
   14000fa31:	add    BYTE PTR [rsi+0x0],al
   14000fa34:	imul   eax,DWORD PTR [rax],0x65006c
   14000fa3a:	add    BYTE PTR [rbp+0x0],r12b
   14000fa3e:	jae    0x14000fa40
   14000fa40:	movsxd eax,DWORD PTR [rax]
   14000fa42:	jb     0x14000fa44
   14000fa44:	imul   eax,DWORD PTR [rax],0x740070
   14000fa4a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000fa50:	add    BYTE PTR [rax],al
   14000fa52:	add    BYTE PTR [rax],al
   14000fa54:	push   rdi
   14000fa55:	add    BYTE PTR [rax+rax*1+0x20],al
   14000fa59:	add    BYTE PTR [rbp+0x0],ch
   14000fa5c:	outs   dx,DWORD PTR ds:[rsi]
   14000fa5d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000fa61:	add    BYTE PTR [rdx+0x0],dh
   14000fa64:	outs   dx,BYTE PTR ds:[rsi]
   14000fa65:	add    BYTE PTR [rax],ah
   14000fa67:	add    BYTE PTR [rax+0x0],ch
   14000fa6a:	outs   dx,DWORD PTR ds:[rsi]
   14000fa6b:	add    BYTE PTR [rbx+0x0],dh
   14000fa6e:	je     0x14000fa70
   14000fa70:	and    BYTE PTR [rax],al
   14000fa72:	jae    0x14000fa74
   14000fa74:	add    BYTE PTR gs:[rdx+0x0],dh
   14000fa78:	jbe    0x14000fa7a
   14000fa7a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000fa7e:	add    BYTE PTR [rax],al
   14000fa80:	add    BYTE PTR fs:[rdx],ah
   14000fa83:	add    BYTE PTR [rcx],al
   14000fa85:	add    BYTE PTR [rsi+0x0],al
   14000fa88:	imul   eax,DWORD PTR [rax],0x65006c
   14000fa8e:	push   rsi
   14000fa8f:	add    BYTE PTR [rbp+0x0],ah
   14000fa92:	jb     0x14000fa94
   14000fa94:	jae    0x14000fa96
   14000fa96:	imul   eax,DWORD PTR [rax],0x6e006f
   14000fa9c:	add    BYTE PTR [rax],al
   14000fa9e:	add    BYTE PTR [rax],al
   14000faa0:	xor    al,0x0
   14000faa2:	add    BYTE PTR cs:[rax],bh
   14000faa5:	add    BYTE PTR [rsi],ch
   14000faa7:	add    BYTE PTR [rcx],dh
   14000faa9:	add    BYTE PTR [rax],dh
   14000faab:	add    BYTE PTR [rdx],dh
   14000faad:	add    BYTE PTR [rax+rax*1],dh
   14000fab0:	xor    BYTE PTR [rax],al
   14000fab2:	add    BYTE PTR cs:[rcx],dh
   14000fab5:	add    BYTE PTR [rsi],dh
   14000fab7:	add    BYTE PTR [rbx],dh
   14000fab9:	add    BYTE PTR [rax],bh
   14000fabb:	add    BYTE PTR [rax+rax*1],dh
   14000fabe:	and    BYTE PTR [rax],al
   14000fac0:	sub    BYTE PTR [rax],al
   14000fac2:	je     0x14000fac4
   14000fac4:	push   0x2e003100
   14000fac9:	add    BYTE PTR [rcx],dh
   14000facb:	add    BYTE PTR [rip+0x37003000],dh        # 0x177012ad1
   14000fad1:	add    BYTE PTR [rax],dh
   14000fad3:	add    BYTE PTR [rcx],bh
   14000fad5:	add    BYTE PTR [rip+0x37003100],ch        # 0x177012bdb
   14000fadb:	add    BYTE PTR [rax],dh
   14000fadd:	add    BYTE PTR [rax],dh
   14000fadf:	add    BYTE PTR [rcx],ch
   14000fae1:	add    BYTE PTR [rax],al
   14000fae3:	add    BYTE PTR [rax],bh
   14000fae5:	add    BYTE PTR [rax+rax*1],cl
   14000fae8:	add    DWORD PTR [rax],eax
   14000faea:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000faee:	je     0x14000faf0
   14000faf0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000faf4:	outs   dx,BYTE PTR ds:[rsi]
   14000faf5:	add    BYTE PTR [rcx+0x0],ah
   14000faf8:	ins    BYTE PTR es:[rdi],dx
   14000faf9:	add    BYTE PTR [rsi+0x0],cl
   14000fafc:	(bad)  
   14000fafd:	add    BYTE PTR [rbp+0x0],ch
   14000fb00:	add    BYTE PTR gs:[rax],al
   14000fb03:	add    BYTE PTR [rbp+0x0],cl
   14000fb06:	jo     0x14000fb08
   14000fb08:	push   rbp
   14000fb09:	add    BYTE PTR [rax+0x0],bh
   14000fb0c:	push   rbx
   14000fb0d:	add    BYTE PTR [rdx+0x0],dh
   14000fb10:	jbe    0x14000fb12
   14000fb12:	add    BYTE PTR cs:[rbp+0x0],ah
   14000fb16:	js     0x14000fb18
   14000fb18:	add    BYTE PTR gs:[rax],al
   14000fb1b:	add    BYTE PTR [rax+0x1002e00],al
   14000fb21:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000fb25:	add    BYTE PTR [rdi+0x0],ah
   14000fb28:	(bad)  
   14000fb29:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000fb2d:	add    BYTE PTR [rdi+0x0],ch
   14000fb30:	jo     0x14000fb32
   14000fb32:	jns    0x14000fb34
   14000fb34:	jb     0x14000fb36
   14000fb36:	imul   eax,DWORD PTR [rax],0x680067
   14000fb3c:	je     0x14000fb3e
   14000fb3e:	add    BYTE PTR [rax],al
   14000fb40:	test   eax,0x4d002000
   14000fb45:	add    BYTE PTR [rcx+0x0],ch
   14000fb48:	movsxd eax,DWORD PTR [rax]
   14000fb4a:	jb     0x14000fb4c
   14000fb4c:	outs   dx,DWORD PTR ds:[rsi]
   14000fb4d:	add    BYTE PTR [rbx+0x0],dh
   14000fb50:	outs   dx,DWORD PTR ds:[rsi]
   14000fb51:	add    BYTE PTR [rsi+0x0],ah
   14000fb54:	je     0x14000fb56
   14000fb56:	and    BYTE PTR [rax],al
   14000fb58:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000fb5c:	jb     0x14000fb5e
   14000fb5e:	jo     0x14000fb60
   14000fb60:	outs   dx,DWORD PTR ds:[rsi]
   14000fb61:	add    BYTE PTR [rdx+0x0],dh
   14000fb64:	(bad)  
   14000fb65:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000fb69:	add    BYTE PTR [rdi+0x0],ch
   14000fb6c:	outs   dx,BYTE PTR ds:[rsi]
   14000fb6d:	add    BYTE PTR [rsi],ch
   14000fb6f:	add    BYTE PTR [rax],ah
   14000fb71:	add    BYTE PTR [rcx+0x0],al
   14000fb74:	ins    BYTE PTR es:[rdi],dx
   14000fb75:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000fb79:	add    BYTE PTR [rdx+0x0],dh
   14000fb7c:	imul   eax,DWORD PTR [rax],0x680067
   14000fb82:	je     0x14000fb84
   14000fb84:	jae    0x14000fb86
   14000fb86:	and    BYTE PTR [rax],al
   14000fb88:	jb     0x14000fb8a
   14000fb8a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000fb8e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000fb92:	jbe    0x14000fb94
   14000fb94:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000fb99:	add    BYTE PTR [rax],al
   14000fb9b:	add    BYTE PTR [rax+0x0],al
   14000fb9e:	or     al,0x0
   14000fba0:	add    DWORD PTR [rax],eax
   14000fba2:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000fba6:	imul   eax,DWORD PTR [rax],0x690067
   14000fbac:	outs   dx,BYTE PTR ds:[rsi]
   14000fbad:	add    BYTE PTR [rcx+0x0],ah
   14000fbb0:	ins    BYTE PTR es:[rdi],dx
   14000fbb1:	add    BYTE PTR [rsi+0x0],al
   14000fbb4:	imul   eax,DWORD PTR [rax],0x65006c
   14000fbba:	outs   dx,BYTE PTR ds:[rsi]
   14000fbbb:	add    BYTE PTR [rcx+0x0],ah
   14000fbbe:	ins    DWORD PTR es:[rdi],dx
   14000fbbf:	add    BYTE PTR [rbp+0x0],ah
   14000fbc2:	add    BYTE PTR [rax],al
   14000fbc4:	rex.WRB add BYTE PTR [r8+0x0],r14b
   14000fbc8:	push   rbp
   14000fbc9:	add    BYTE PTR [rax+0x0],bh
   14000fbcc:	push   rbx
   14000fbcd:	add    BYTE PTR [rdx+0x0],dh
   14000fbd0:	jbe    0x14000fbd2
   14000fbd2:	add    BYTE PTR cs:[rbp+0x0],ah
   14000fbd6:	js     0x14000fbd8
   14000fbd8:	add    BYTE PTR gs:[rax],al
   14000fbdb:	add    BYTE PTR [rdx+0x0],ch
   14000fbde:	and    eax,0x50000100
   14000fbe3:	add    BYTE PTR [rdx+0x0],dh
   14000fbe6:	outs   dx,DWORD PTR ds:[rsi]
   14000fbe7:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000fbeb:	add    BYTE PTR [rbx+0x0],ah
   14000fbee:	je     0x14000fbf0
   14000fbf0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000fbf4:	ins    DWORD PTR es:[rdi],dx
   14000fbf5:	add    BYTE PTR [rbp+0x0],ah
   14000fbf8:	add    BYTE PTR [rax],al
   14000fbfa:	add    BYTE PTR [rax],al
   14000fbfc:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000fc00:	movsxd eax,DWORD PTR [rax]
   14000fc02:	jb     0x14000fc04
   14000fc04:	outs   dx,DWORD PTR ds:[rsi]
   14000fc05:	add    BYTE PTR [rbx+0x0],dh
   14000fc08:	outs   dx,DWORD PTR ds:[rsi]
   14000fc09:	add    BYTE PTR [rsi+0x0],ah
   14000fc0c:	je     0x14000fc0e
   14000fc0e:	scas   al,BYTE PTR es:[rdi]
   14000fc0f:	add    BYTE PTR [rax],ah
   14000fc11:	add    BYTE PTR [rdi+0x0],dl
   14000fc14:	imul   eax,DWORD PTR [rax],0x64006e
   14000fc1a:	outs   dx,DWORD PTR ds:[rsi]
   14000fc1b:	add    BYTE PTR [rdi+0x0],dh
   14000fc1e:	jae    0x14000fc20
   14000fc20:	scas   al,BYTE PTR es:[rdi]
   14000fc21:	add    BYTE PTR [rax],ah
   14000fc23:	add    BYTE PTR [rdi+0x0],cl
   14000fc26:	jo     0x14000fc28
   14000fc28:	add    BYTE PTR gs:[rdx+0x0],dh
   14000fc2c:	(bad)  
   14000fc2d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000fc31:	add    BYTE PTR [rsi+0x0],ch
   14000fc34:	add    BYTE PTR [eax],ah
   14000fc37:	add    BYTE PTR [rbx+0x0],dl
   14000fc3a:	jns    0x14000fc3c
   14000fc3c:	jae    0x14000fc3e
   14000fc3e:	je     0x14000fc40
   14000fc40:	add    BYTE PTR gs:[rbp+0x0],ch
   14000fc44:	add    BYTE PTR [rax],al
   14000fc46:	add    BYTE PTR [rax],al
   14000fc48:	add    BYTE PTR [rax],r10b
   14000fc4b:	add    BYTE PTR [rcx],al
   14000fc4d:	add    BYTE PTR [rax+0x0],dl
   14000fc50:	jb     0x14000fc52
   14000fc52:	outs   dx,DWORD PTR ds:[rsi]
   14000fc53:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000fc57:	add    BYTE PTR [rbx+0x0],ah
   14000fc5a:	je     0x14000fc5c
   14000fc5c:	push   rsi
   14000fc5d:	add    BYTE PTR [rbp+0x0],ah
   14000fc60:	jb     0x14000fc62
   14000fc62:	jae    0x14000fc64
   14000fc64:	imul   eax,DWORD PTR [rax],0x6e006f
   14000fc6a:	add    BYTE PTR [rax],al
   14000fc6c:	xor    al,0x0
   14000fc6e:	add    BYTE PTR cs:[rax],bh
   14000fc71:	add    BYTE PTR [rsi],ch
   14000fc73:	add    BYTE PTR [rcx],dh
   14000fc75:	add    BYTE PTR [rax],dh
   14000fc77:	add    BYTE PTR [rdx],dh
   14000fc79:	add    BYTE PTR [rax+rax*1],dh
   14000fc7c:	xor    BYTE PTR [rax],al
   14000fc7e:	add    BYTE PTR cs:[rcx],dh
   14000fc81:	add    BYTE PTR [rsi],dh
   14000fc83:	add    BYTE PTR [rbx],dh
   14000fc85:	add    BYTE PTR [rax],bh
   14000fc87:	add    BYTE PTR [rax+rax*1],dh
   14000fc8a:	add    BYTE PTR [rax],al
   14000fc8c:	add    BYTE PTR [rax],r8b
   14000fc8f:	add    BYTE PTR [rcx],al
   14000fc91:	add    BYTE PTR [rsi+0x0],dl
   14000fc94:	(bad)  
   14000fc95:	add    BYTE PTR [rdx+0x0],dh
   14000fc98:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000fc9c:	ins    BYTE PTR es:[rdi],dx
   14000fc9d:	add    BYTE PTR [rbp+0x0],ah
   14000fca0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000fca4:	data16 add BYTE PTR [rdi+0x0],ch
   14000fca8:	add    BYTE PTR [rax],al
   14000fcaa:	add    BYTE PTR [rax],al
   14000fcac:	and    al,0x0
   14000fcae:	add    al,0x0
   14000fcb0:	add    BYTE PTR [rax],al
   14000fcb2:	push   rsp
   14000fcb3:	add    BYTE PTR [rdx+0x0],dh
   14000fcb6:	(bad)  
   14000fcb7:	add    BYTE PTR [rsi+0x0],ch
   14000fcba:	jae    0x14000fcbc
   14000fcbc:	ins    BYTE PTR es:[rdi],dx
   14000fcbd:	add    BYTE PTR [rcx+0x0],ah
   14000fcc0:	je     0x14000fcc2
   14000fcc2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000fcc8:	add    BYTE PTR [rax],al
   14000fcca:	add    BYTE PTR [rax],al
   14000fccc:	or     DWORD PTR [rax+rsi*4],eax
   14000fccf:	.byte 0x4

Disassembly of section .reloc:

0000000140010000 <.reloc>:
   140010000:	add    BYTE PTR [rax+0x0],dh
   140010003:	add    ah,bh
   140010005:	add    BYTE PTR [rax],al
   140010007:	add    BYTE PTR [rax],ch
   140010009:	movabs ds:0xa350a348a340a330,eax
   140010012:	pop    rax
   140010013:	movabs ds:0xa388a370a368a360,eax
   14001001c:	nop
   14001001d:	movabs ds:0xa508a4f8a4e8a4d8,eax
   140010026:	sbb    BYTE PTR [rbp-0x5ac75ad8],ah
   14001002c:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001002e:	pop    rax
   14001002f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010030:	push   0xffffffff88a578a5
   140010035:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010036:	cwde   
   140010037:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010038:	test   al,0xa5
   14001003a:	mov    eax,0xd8a5c8a5
   14001003f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010040:	call   0x148a6f8ea
   140010045:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010046:	sbb    BYTE PTR [rsi-0x59c759d8],ah
   14001004c:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001004e:	pop    rax
   14001004f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010050:	push   0xffffffff88a678a6
   140010055:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010056:	cwde   
   140010057:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010058:	test   al,0xa6
   14001005a:	mov    eax,0xd8a6c8a6
   14001005f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010060:	call   0x148a7f90b
   140010065:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010066:	sbb    BYTE PTR [rdi-0x58c758d8],ah
   14001006c:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001006e:	pop    rax
   14001006f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010070:	push   0xffffffff88a778a7
   140010075:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010076:	cwde   
   140010077:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010078:	test   al,0xa7
   14001007a:	mov    eax,0xd8a7c8a7
   14001007f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010080:	call   0x148a8f92c
   140010085:	test   al,0x18
   140010087:	test   al,0x28
   140010089:	test   al,0x38
   14001008b:	test   al,0x48
   14001008d:	test   al,0x58
   14001008f:	test   al,0x68
   140010091:	test   al,0x78
   140010093:	test   al,0x88
   140010095:	test   al,0x98
   140010097:	test   al,0xa8
   140010099:	test   al,0xb8
   14001009b:	test   al,0xc8
   14001009d:	test   al,0xd8
   14001009f:	test   al,0xe8
   1400100a1:	test   al,0xf8
   1400100a3:	test   al,0x8
   1400100a5:	test   eax,0xa928a918
   1400100aa:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   1400100b0:	push   0xffffffffd8adc8a9
   1400100b5:	lods   eax,DWORD PTR ds:[rsi]
   1400100b6:	call   0x148aef968
   1400100bb:	scas   al,BYTE PTR es:[rdi]
   1400100bc:	sbb    BYTE PTR [rsi-0x51c751d8],ch
   1400100c2:	rex.W scas al,BYTE PTR es:[rdi]
   1400100c4:	pop    rax
   1400100c5:	scas   al,BYTE PTR es:[rdi]
   1400100c6:	push   0xffffffff88ae78ae
   1400100cb:	scas   al,BYTE PTR es:[rdi]
   1400100cc:	cwde   
   1400100cd:	scas   al,BYTE PTR es:[rdi]
   1400100ce:	test   al,0xae
   1400100d0:	mov    eax,0xd8aec8ae
   1400100d5:	scas   al,BYTE PTR es:[rdi]
   1400100d6:	call   0x148aff989
   1400100db:	scas   eax,DWORD PTR es:[rdi]
   1400100dc:	sbb    BYTE PTR [rdi-0x50c750d8],ch
   1400100e2:	scas   rax,QWORD PTR es:[rdi]
   1400100e4:	pop    rax
   1400100e5:	scas   eax,DWORD PTR es:[rdi]
   1400100e6:	push   0xffffffff88af78af
   1400100eb:	scas   eax,DWORD PTR es:[rdi]
   1400100ec:	cwde   
   1400100ed:	scas   eax,DWORD PTR es:[rdi]
   1400100ee:	test   al,0xaf
   1400100f0:	mov    eax,0xd8afc8af
   1400100f5:	scas   eax,DWORD PTR es:[rdi]
   1400100f6:	call   0x140b0f9aa
   1400100fb:	add    BYTE PTR [rax],al
   1400100fd:	add    BYTE PTR [rax],0x0
   140010100:	rex add DWORD PTR [rax],eax
   140010103:	add    BYTE PTR [rax],cl
   140010105:	movabs al,ds:0xa048a038a028a018
   14001010e:	pop    rax
   14001010f:	movabs al,ds:0xa098a088a078a068
   140010118:	test   al,0xa0
   14001011a:	mov    eax,0xd8a0c8a0
   14001011f:	movabs al,ds:0xa118a108a0f8a0e8
   140010128:	sub    BYTE PTR [rcx-0x5eb75ec8],ah
   14001012e:	pop    rax
   14001012f:	movabs eax,ds:0xa198a188a178a168
   140010138:	test   al,0xa1
   14001013a:	mov    eax,0xd8a1c8a1
   14001013f:	movabs eax,ds:0xa218a208a1f8a1e8
   140010148:	sub    BYTE PTR [rdx-0x5db75dc8],ah
   14001014e:	pop    rax
   14001014f:	movabs ds:0xa298a288a278a268,al
   140010158:	shl    BYTE PTR [rdi-0x582f5838],0xd8
   14001015f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010160:	loopne 0x140010109
   140010162:	pop    rax
   140010163:	test   al,0x60
   140010165:	test   al,0x68
   140010167:	test   al,0x70
   140010169:	test   al,0x78
   14001016b:	test   al,0x80
   14001016d:	test   al,0x88
   14001016f:	test   al,0x90
   140010171:	test   al,0x98
   140010173:	test   al,0xa0
   140010175:	test   al,0xa8
   140010177:	test   al,0xb0
   140010179:	test   al,0xb8
   14001017b:	test   al,0xc0
   14001017d:	test   al,0xc8
   14001017f:	test   al,0xd0
   140010181:	test   al,0xd8
   140010183:	test   al,0xe0
   140010185:	test   al,0xe8
   140010187:	test   al,0xf0
   140010189:	test   al,0xf8
   14001018b:	test   al,0x0
   14001018d:	test   eax,0xa910a908
   140010192:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   140010198:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14001019e:	test   rax,0xffffffffa958a950
   1400101a4:	(bad)  
   1400101a5:	test   eax,0xa970a968
   1400101aa:	js     0x140010155
   1400101ac:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400101b3:	test   eax,0xa9a8a9a0
   1400101b8:	mov    al,0xa9
   1400101ba:	mov    eax,0xc8a9c0a9
   1400101bf:	test   eax,0xa9d8a9d0
   1400101c4:	loopne 0x14001016f
   1400101c6:	call   0x138aaf274
   1400101cb:	test   eax,0xaa08aa00
   1400101d0:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400101d6:	sub    BYTE PTR [rdx-0x55c755d0],ch
   1400101dc:	stos   BYTE PTR es:[rdi],al
   1400101de:	rex.W stos BYTE PTR es:[rdi],al
   1400101e0:	push   rax
   1400101e1:	stos   BYTE PTR es:[rdi],al
   1400101e2:	pop    rax
   1400101e3:	stos   BYTE PTR es:[rdi],al
   1400101e4:	(bad)  
   1400101e5:	stos   BYTE PTR es:[rdi],al
   1400101e6:	push   0x78aa70aa
   1400101eb:	stos   BYTE PTR es:[rdi],al
   1400101ec:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400101f3:	stos   BYTE PTR es:[rdi],al
   1400101f4:	movabs al,ds:0xc0aab8aab0aaa8aa
   1400101fd:	stos   BYTE PTR es:[rdi],al
   1400101fe:	enter  0xd0aa,0xaa
   140010202:	fsubr  DWORD PTR [rdx-0x55175520]
   140010208:	lock stos BYTE PTR es:[rdi],al
   14001020a:	clc    
   14001020b:	stos   BYTE PTR es:[rdi],al
   14001020c:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140010212:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   140010218:	xor    BYTE PTR [rbx-0x54b754c8],ch
   14001021e:	pop    rax
   14001021f:	stos   DWORD PTR es:[rdi],eax
   140010220:	(bad)  
   140010221:	stos   DWORD PTR es:[rdi],eax
   140010222:	push   0x78ab70ab
   140010227:	stos   DWORD PTR es:[rdi],eax
   140010228:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14001022f:	stos   DWORD PTR es:[rdi],eax
   140010230:	movabs al,ds:0xc0abb8abb0aba8ab
   140010239:	stos   DWORD PTR es:[rdi],eax
   14001023a:	add    BYTE PTR [rax],al
   14001023c:	add    BYTE PTR [rax+0x100000],dl
   140010242:	add    BYTE PTR [rax],al
   140010244:	clc    
   140010245:	movabs eax,ds:0xa000a220a218a210
   14001024e:	add    BYTE PTR [rax],al
   140010250:	or     al,0x0
   140010252:	add    BYTE PTR [rax],al
   140010254:	jo     0x140010203
   140010256:	add    BYTE PTR [rax],al
   140010258:	add    al,al
   14001025a:	add    BYTE PTR [rax],al
   14001025c:	pop    rsp
   14001025d:	add    BYTE PTR [rax],al
   14001025f:	add    BYTE PTR [rax],ah
   140010261:	movabs al,ds:0xa040a038a030a028
   14001026a:	push   0xffffffffc8a090a0
   14001026f:	movabs al,ds:0xa200a170a130a100
   140010278:	and    BYTE PTR [rdx-0x5caf5d20],0xb0
   14001027f:	movabs ds:0xa550a490a450a3f0,eax
   140010288:	movabs al,ds:0x90a780a6b0a660a5
   140010291:	test   al,0xa0
   140010293:	test   eax,0xaa90aa70
   140010298:	mov    al,0xaa
   14001029a:	fsubr  DWORD PTR [rdx-0x54af54f0]
   1400102a0:	nop
   1400102a1:	stos   DWORD PTR es:[rdi],eax
   1400102a2:	shr    BYTE PTR [rbx-0x53af53e8],1
   1400102a8:	js     0x140010256
   1400102aa:	cwde   
   1400102ab:	lods   al,BYTE PTR ds:[rsi]
   1400102ac:	shr    BYTE PTR [rax+rbp*8+0xad20ac],0x0
