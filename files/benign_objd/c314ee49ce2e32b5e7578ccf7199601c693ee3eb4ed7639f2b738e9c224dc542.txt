
c314ee49ce2e32b5e7578ccf7199601c693ee3eb4ed7639f2b738e9c224dc542.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x8],rcx
   14000100d:	push   rbp
   14000100e:	push   rbx
   14000100f:	push   rsi
   140001010:	push   rdi
   140001011:	push   r12
   140001013:	push   r13
   140001015:	push   r14
   140001017:	push   r15
   140001019:	mov    rbp,rsp
   14000101c:	sub    rsp,0x68
   140001020:	xor    r12d,r12d
   140001023:	mov    r14d,0x200
   140001029:	mov    QWORD PTR [rcx],r12
   14000102c:	mov    r15d,r12d
   14000102f:	xor    ecx,ecx
   140001031:	mov    QWORD PTR [rbp-0x28],r12
   140001035:	mov    ebx,r12d
   140001038:	mov    r13d,r12d
   14000103b:	lea    edx,[r12+0x44]
   140001040:	mov    DWORD PTR [rbp+0x60],edx
   140001043:	call   QWORD PTR [rip+0x6057]        # 0x1400070a0
   140001049:	mov    rsi,rax
   14000104c:	test   rax,rax
   14000104f:	jne    0x14000105b
   140001051:	mov    edi,0xc0000017
   140001056:	jmp    0x140001409
   14000105b:	xor    edx,edx
   14000105d:	lea    r9,[rbp+0x60]
   140001061:	mov    r8,rax
   140001064:	lea    ecx,[rdx+0x16]
   140001067:	call   QWORD PTR [rip+0x5f93]        # 0x140007000
   14000106d:	test   eax,eax
   14000106f:	jne    0x140001087
   140001071:	call   QWORD PTR [rip+0x6031]        # 0x1400070a8
   140001077:	movzx  edi,ax
   14000107a:	or     edi,0xc0070000
   140001080:	test   eax,eax
   140001082:	cmovle edi,eax
   140001085:	jmp    0x140001091
   140001087:	mov    QWORD PTR [rbp-0x28],rsi
   14000108b:	mov    edi,r12d
   14000108e:	mov    rsi,r12
   140001091:	test   rsi,rsi
   140001094:	je     0x14000109f
   140001096:	mov    rcx,rsi
   140001099:	call   QWORD PTR [rip+0x6011]        # 0x1400070b0
   14000109f:	test   edi,edi
   1400010a1:	jne    0x1400013a3
   1400010a7:	add    r14d,r14d
   1400010aa:	test   r13,r13
   1400010ad:	je     0x1400010b8
   1400010af:	mov    rcx,r13
   1400010b2:	call   QWORD PTR [rip+0x5ff8]        # 0x1400070b0
   1400010b8:	mov    edx,r14d
   1400010bb:	mov    ecx,0x40
   1400010c0:	shl    rdx,0x2
   1400010c4:	call   QWORD PTR [rip+0x5fd6]        # 0x1400070a0
   1400010ca:	mov    r13,rax
   1400010cd:	test   rax,rax
   1400010d0:	je     0x14000139e
   1400010d6:	mov    edx,r14d
   1400010d9:	lea    r8,[rbp-0x38]
   1400010dd:	shl    edx,0x2
   1400010e0:	mov    rcx,rax
   1400010e3:	call   QWORD PTR [rip+0x5fcf]        # 0x1400070b8
   1400010e9:	test   eax,eax
   1400010eb:	je     0x140001388
   1400010f1:	mov    eax,DWORD PTR [rbp-0x38]
   1400010f4:	shr    eax,0x2
   1400010f7:	mov    DWORD PTR [rbp-0x34],eax
   1400010fa:	cmp    r14d,eax
   1400010fd:	jne    0x140001108
   1400010ff:	cmp    r14d,0x186a0
   140001106:	jb     0x1400010a7
   140001108:	mov    DWORD PTR [rbp+0x58],r12d
   14000110c:	mov    edi,0xc0000001
   140001111:	mov    r14d,r12d
   140001114:	test   eax,eax
   140001116:	je     0x1400013a3
   14000111c:	mov    rsi,r13
   14000111f:	mov    QWORD PTR [rbp-0x20],r13
   140001123:	test   r15,r15
   140001126:	je     0x140001131
   140001128:	mov    rcx,r15
   14000112b:	call   QWORD PTR [rip+0x5f8f]        # 0x1400070c0
   140001131:	mov    r8d,DWORD PTR [rsi]
   140001134:	xor    edx,edx
   140001136:	mov    ecx,0x400
   14000113b:	mov    QWORD PTR [rbp-0x30],r12
   14000113f:	mov    r15,r12
   140001142:	call   QWORD PTR [rip+0x5fc0]        # 0x140007108
   140001148:	mov    r12,rax
   14000114b:	test   rax,rax
   14000114e:	jne    0x140001168
   140001150:	call   QWORD PTR [rip+0x5f52]        # 0x1400070a8
   140001156:	movzx  esi,ax
   140001159:	or     esi,0x80070000
   14000115f:	test   eax,eax
   140001161:	cmovle esi,eax
   140001164:	test   esi,esi
   140001166:	js     0x1400011ac
   140001168:	lea    rdx,[rbp-0x30]
   14000116c:	mov    rcx,r12
   14000116f:	call   0x1400046f8
   140001174:	mov    esi,eax
   140001176:	test   eax,eax
   140001178:	js     0x140001183
   14000117a:	mov    r15,QWORD PTR [rbp-0x30]
   14000117e:	xor    r14d,r14d
   140001181:	jmp    0x140001187
   140001183:	mov    r14,QWORD PTR [rbp-0x30]
   140001187:	test   r12,r12
   14000118a:	je     0x140001195
   14000118c:	mov    rcx,r12
   14000118f:	call   QWORD PTR [rip+0x5f2b]        # 0x1400070c0
   140001195:	xor    r12d,r12d
   140001198:	test   r14,r14
   14000119b:	je     0x1400011a6
   14000119d:	mov    rcx,r14
   1400011a0:	call   QWORD PTR [rip+0x5f1a]        # 0x1400070c0
   1400011a6:	mov    r14d,DWORD PTR [rbp+0x58]
   1400011aa:	jmp    0x1400011af
   1400011ac:	xor    r12d,r12d
   1400011af:	test   esi,esi
   1400011b1:	jne    0x14000124b
   1400011b7:	lea    rax,[rbp+0x50]
   1400011bb:	mov    DWORD PTR [rbp+0x50],r12d
   1400011bf:	xor    r9d,r9d
   1400011c2:	mov    QWORD PTR [rsp+0x20],rax
   1400011c7:	xor    r8d,r8d
   1400011ca:	lea    edx,[rsi+0x1]
   1400011cd:	mov    rcx,r15
   1400011d0:	call   QWORD PTR [rip+0x5e4a]        # 0x140007020
   1400011d6:	test   eax,eax
   1400011d8:	jne    0x1400011e5
   1400011da:	call   QWORD PTR [rip+0x5ec8]        # 0x1400070a8
   1400011e0:	cmp    eax,0x7a
   1400011e3:	jne    0x14000124b
   1400011e5:	mov    edx,DWORD PTR [rbp+0x50]
   1400011e8:	xor    ecx,ecx
   1400011ea:	call   QWORD PTR [rip+0x5eb0]        # 0x1400070a0
   1400011f0:	mov    rsi,rax
   1400011f3:	test   rax,rax
   1400011f6:	jne    0x140001203
   1400011f8:	lea    ecx,[rax+0xe]
   1400011fb:	call   QWORD PTR [rip+0x5f0f]        # 0x140007110
   140001201:	jmp    0x14000124b
   140001203:	mov    r9d,DWORD PTR [rbp+0x50]
   140001207:	lea    rax,[rbp+0x50]
   14000120b:	mov    r8,rsi
   14000120e:	mov    QWORD PTR [rsp+0x20],rax
   140001213:	mov    edx,0x1
   140001218:	mov    rcx,r15
   14000121b:	call   QWORD PTR [rip+0x5dff]        # 0x140007020
   140001221:	test   eax,eax
   140001223:	je     0x140001242
   140001225:	mov    rdx,QWORD PTR [rsi]
   140001228:	mov    rcx,QWORD PTR [rbp-0x28]
   14000122c:	call   QWORD PTR [rip+0x5e5e]        # 0x140007090
   140001232:	test   eax,eax
   140001234:	jne    0x140001242
   140001236:	mov    rcx,r15
   140001239:	call   QWORD PTR [rip+0x5e81]        # 0x1400070c0
   14000123f:	mov    r15,r12
   140001242:	mov    rcx,rsi
   140001245:	call   QWORD PTR [rip+0x5e65]        # 0x1400070b0
   14000124b:	test   r15,r15
   14000124e:	je     0x140001343
   140001254:	test   rbx,rbx
   140001257:	je     0x14000129a
   140001259:	cmp    BYTE PTR [rbx+0x8],r12b
   14000125d:	je     0x140001284
   14000125f:	cmp    QWORD PTR [rbx],r12
   140001262:	jne    0x14000126a
   140001264:	cmp    QWORD PTR [rbx+0x10],r12
   140001268:	je     0x140001284
   14000126a:	mov    r9d,0x8
   140001270:	mov    r8,rbx
   140001273:	mov    rcx,0xfffffffffffffffe
   14000127a:	lea    edx,[r9-0x3]
   14000127e:	call   QWORD PTR [rip+0x6104]        # 0x140007388
   140001284:	mov    rcx,QWORD PTR [rbx]
   140001287:	test   rcx,rcx
   14000128a:	je     0x140001292
   14000128c:	call   QWORD PTR [rip+0x60ee]        # 0x140007380
   140001292:	mov    rcx,rbx
   140001295:	call   0x140005588
   14000129a:	mov    ecx,0x20
   14000129f:	call   0x140005548
   1400012a4:	mov    QWORD PTR [rbp+0x58],rax
   1400012a8:	mov    rbx,rax
   1400012ab:	test   rax,rax
   1400012ae:	je     0x140001334
   1400012b4:	mov    rdi,0xfffffffffffffffe
   1400012bb:	mov    QWORD PTR [rax],r12
   1400012be:	mov    rcx,rdi
   1400012c1:	mov    BYTE PTR [rax+0x8],r12b
   1400012c5:	mov    r9,rax
   1400012c8:	mov    QWORD PTR [rax+0x10],r15
   1400012cc:	mov    r8b,0x1
   1400012cf:	mov    DWORD PTR [rax+0x18],0xc0000001
   1400012d6:	mov    edx,0x1c
   1400012db:	call   QWORD PTR [rip+0x60b7]        # 0x140007398
   1400012e1:	cmp    eax,0xc000007c
   1400012e6:	jne    0x1400012f4
   1400012e8:	mov    QWORD PTR [rbx],r12
   1400012eb:	mov    eax,r12d
   1400012ee:	mov    BYTE PTR [rbx+0x8],0x1
   1400012f2:	jmp    0x14000131b
   1400012f4:	test   eax,eax
   1400012f6:	js     0x14000132f
   1400012f8:	mov    r9d,0x8
   1400012fe:	mov    BYTE PTR [rbx+0x8],0x1
   140001302:	lea    r8,[rbp-0x18]
   140001306:	mov    QWORD PTR [rbp-0x18],r12
   14000130a:	mov    rcx,rdi
   14000130d:	lea    edx,[r9-0x3]
   140001311:	call   QWORD PTR [rip+0x6071]        # 0x140007388
   140001317:	test   eax,eax
   140001319:	js     0x14000132f
   14000131b:	cmp    QWORD PTR [rbx],r12
   14000131e:	jne    0x140001326
   140001320:	cmp    QWORD PTR [rbx+0x10],r12
   140001324:	je     0x14000132f
   140001326:	mov    rcx,QWORD PTR [rbx+0x10]
   14000132a:	call   0x1400045d4
   14000132f:	mov    DWORD PTR [rbx+0x18],eax
   140001332:	jmp    0x140001337
   140001334:	mov    rbx,r12
   140001337:	test   rbx,rbx
   14000133a:	je     0x140001381
   14000133c:	mov    edi,DWORD PTR [rbx+0x18]
   14000133f:	test   edi,edi
   140001341:	jns    0x140001364
   140001343:	mov    rsi,QWORD PTR [rbp-0x20]
   140001347:	inc    r14d
   14000134a:	add    rsi,0x4
   14000134e:	mov    DWORD PTR [rbp+0x58],r14d
   140001352:	mov    QWORD PTR [rbp-0x20],rsi
   140001356:	cmp    r14d,DWORD PTR [rbp-0x34]
   14000135a:	jb     0x140001123
   140001360:	test   edi,edi
   140001362:	js     0x140001371
   140001364:	mov    rax,QWORD PTR [rbp+0x48]
   140001368:	mov    edi,r12d
   14000136b:	mov    QWORD PTR [rax],rbx
   14000136e:	mov    rbx,r12
   140001371:	test   r15,r15
   140001374:	je     0x1400013a3
   140001376:	mov    rcx,r15
   140001379:	call   QWORD PTR [rip+0x5d41]        # 0x1400070c0
   14000137f:	jmp    0x1400013a3
   140001381:	mov    edi,0xc0000017
   140001386:	jmp    0x140001371
   140001388:	call   QWORD PTR [rip+0x5d1a]        # 0x1400070a8
   14000138e:	movzx  edi,ax
   140001391:	or     edi,0xc0070000
   140001397:	test   eax,eax
   140001399:	cmovle edi,eax
   14000139c:	jmp    0x1400013a3
   14000139e:	mov    edi,0xc0000017
   1400013a3:	mov    rax,QWORD PTR [rbp-0x28]
   1400013a7:	test   rax,rax
   1400013aa:	je     0x1400013b5
   1400013ac:	mov    rcx,rax
   1400013af:	call   QWORD PTR [rip+0x5cfb]        # 0x1400070b0
   1400013b5:	test   rbx,rbx
   1400013b8:	je     0x1400013fb
   1400013ba:	cmp    BYTE PTR [rbx+0x8],r12b
   1400013be:	je     0x1400013e5
   1400013c0:	cmp    QWORD PTR [rbx],r12
   1400013c3:	jne    0x1400013cb
   1400013c5:	cmp    QWORD PTR [rbx+0x10],r12
   1400013c9:	je     0x1400013e5
   1400013cb:	mov    r9d,0x8
   1400013d1:	mov    r8,rbx
   1400013d4:	mov    rcx,0xfffffffffffffffe
   1400013db:	lea    edx,[r9-0x3]
   1400013df:	call   QWORD PTR [rip+0x5fa3]        # 0x140007388
   1400013e5:	mov    rcx,QWORD PTR [rbx]
   1400013e8:	test   rcx,rcx
   1400013eb:	je     0x1400013f3
   1400013ed:	call   QWORD PTR [rip+0x5f8d]        # 0x140007380
   1400013f3:	mov    rcx,rbx
   1400013f6:	call   0x140005588
   1400013fb:	test   r13,r13
   1400013fe:	je     0x140001409
   140001400:	mov    rcx,r13
   140001403:	call   QWORD PTR [rip+0x5ca7]        # 0x1400070b0
   140001409:	mov    eax,edi
   14000140b:	add    rsp,0x68
   14000140f:	pop    r15
   140001411:	pop    r14
   140001413:	pop    r13
   140001415:	pop    r12
   140001417:	pop    rdi
   140001418:	pop    rsi
   140001419:	pop    rbx
   14000141a:	pop    rbp
   14000141b:	ret    
   14000141c:	int3   
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	int3   
   140001421:	int3   
   140001422:	int3   
   140001423:	int3   
   140001424:	mov    QWORD PTR [rsp+0x8],rbx
   140001429:	push   rdi
   14000142a:	sub    rsp,0x20
   14000142e:	mov    rcx,QWORD PTR [rip+0x91a3]        # 0x14000a5d8
   140001435:	mov    edi,0xfffffff5
   14000143a:	mov    edx,edi
   14000143c:	mov    r8d,0x2710
   140001442:	call   0x140005524
   140001447:	mov    rcx,QWORD PTR [rip+0x918a]        # 0x14000a5d8
   14000144e:	mov    r8d,0x275e
   140001454:	mov    edx,edi
   140001456:	call   0x140005524
   14000145b:	lea    rbx,[rip+0x603e]        # 0x1400074a0
   140001462:	mov    ecx,edi
   140001464:	mov    rdx,rbx
   140001467:	lea    r8,[rip+0x5fb2]        # 0x140007420
   14000146e:	call   0x14000533c
   140001473:	lea    r8,[rip+0x6036]        # 0x1400074b0
   14000147a:	mov    rdx,rbx
   14000147d:	mov    ecx,edi
   14000147f:	call   0x14000533c
   140001484:	lea    r8,[rip+0x60a5]        # 0x140007530
   14000148b:	mov    rdx,rbx
   14000148e:	mov    ecx,edi
   140001490:	call   0x14000533c
   140001495:	lea    r8,[rip+0x6114]        # 0x1400075b0
   14000149c:	mov    rdx,rbx
   14000149f:	mov    ecx,edi
   1400014a1:	call   0x14000533c
   1400014a6:	lea    r8,[rip+0x6183]        # 0x140007630
   1400014ad:	mov    rdx,rbx
   1400014b0:	mov    ecx,edi
   1400014b2:	call   0x14000533c
   1400014b7:	lea    r8,[rip+0x61f2]        # 0x1400076b0
   1400014be:	mov    rdx,rbx
   1400014c1:	mov    ecx,edi
   1400014c3:	call   0x14000533c
   1400014c8:	lea    r8,[rip+0x6261]        # 0x140007730
   1400014cf:	mov    rdx,rbx
   1400014d2:	mov    ecx,edi
   1400014d4:	call   0x14000533c
   1400014d9:	lea    r8,[rip+0x62d0]        # 0x1400077b0
   1400014e0:	mov    rdx,rbx
   1400014e3:	mov    ecx,edi
   1400014e5:	call   0x14000533c
   1400014ea:	lea    r8,[rip+0x62f7]        # 0x1400077e8
   1400014f1:	mov    rdx,rbx
   1400014f4:	mov    ecx,edi
   1400014f6:	call   0x14000533c
   1400014fb:	lea    r8,[rip+0x6306]        # 0x140007808
   140001502:	mov    rdx,rbx
   140001505:	mov    ecx,edi
   140001507:	call   0x14000533c
   14000150c:	or     ecx,0xffffffff
   14000150f:	call   QWORD PTR [rip+0x5df3]        # 0x140007308
   140001515:	int3   
   140001516:	int3   
   140001517:	int3   
   140001518:	int3   
   140001519:	int3   
   14000151a:	int3   
   14000151b:	int3   
   14000151c:	mov    r11,rsp
   14000151f:	mov    QWORD PTR [r11+0x10],rbx
   140001523:	push   rbp
   140001524:	push   rsi
   140001525:	push   rdi
   140001526:	push   r14
   140001528:	push   r15
   14000152a:	sub    rsp,0x260
   140001531:	mov    rax,QWORD PTR [rip+0x8ad0]        # 0x14000a008
   140001538:	xor    rax,rsp
   14000153b:	mov    QWORD PTR [rsp+0x250],rax
   140001543:	xor    r14d,r14d
   140001546:	mov    eax,ecx
   140001548:	and    eax,0x1fff0000
   14000154d:	mov    WORD PTR [r8+0x204],r14w
   140001555:	mov    WORD PTR [r11-0x42],r14w
   14000155a:	mov    rbp,r8
   14000155d:	mov    edi,ecx
   14000155f:	cmp    eax,0x70000
   140001564:	jne    0x140001569
   140001566:	movzx  edi,cx
   140001569:	lea    rcx,[rip+0x62b8]        # 0x140007828
   140001570:	call   QWORD PTR [rip+0x5b52]        # 0x1400070c8
   140001576:	mov    rsi,rax
   140001579:	mov    r15d,0x103
   14000157f:	test   rax,rax
   140001582:	jne    0x1400015a0
   140001584:	call   QWORD PTR [rip+0x5b1e]        # 0x1400070a8
   14000158a:	movzx  ebx,ax
   14000158d:	or     ebx,0x80070000
   140001593:	test   eax,eax
   140001595:	cmovle ebx,eax
   140001598:	test   ebx,ebx
   14000159a:	js     0x140001648
   1400015a0:	mov    QWORD PTR [rsp+0x30],r14
   1400015a5:	lea    rax,[rsp+0x40]
   1400015aa:	mov    DWORD PTR [rsp+0x28],r15d
   1400015af:	xor    r9d,r9d
   1400015b2:	mov    r8d,edi
   1400015b5:	mov    QWORD PTR [rsp+0x20],rax
   1400015ba:	xor    edx,edx
   1400015bc:	mov    ecx,0x1200
   1400015c1:	call   QWORD PTR [rip+0x5b09]        # 0x1400070d0
   1400015c7:	test   eax,eax
   1400015c9:	je     0x140001630
   1400015cb:	mov    ebx,r14d
   1400015ce:	lea    rax,[rsp+0x40]
   1400015d3:	mov    r8d,0x102
   1400015d9:	mov    QWORD PTR [rsp+0x30],rax
   1400015de:	lea    r9,[rip+0x625b]        # 0x140007840
   1400015e5:	mov    DWORD PTR [rsp+0x28],edi
   1400015e9:	mov    rdx,r15
   1400015ec:	mov    rcx,rbp
   1400015ef:	mov    DWORD PTR [rsp+0x20],edi
   1400015f3:	call   QWORD PTR [rip+0x5cff]        # 0x1400072f8
   1400015f9:	test   rsi,rsi
   1400015fc:	je     0x140001607
   1400015fe:	mov    rcx,rsi
   140001601:	call   QWORD PTR [rip+0x5ad1]        # 0x1400070d8
   140001607:	mov    eax,ebx
   140001609:	mov    rcx,QWORD PTR [rsp+0x250]
   140001611:	xor    rcx,rsp
   140001614:	call   0x1400058e0
   140001619:	mov    rbx,QWORD PTR [rsp+0x298]
   140001621:	add    rsp,0x260
   140001628:	pop    r15
   14000162a:	pop    r14
   14000162c:	pop    rdi
   14000162d:	pop    rsi
   14000162e:	pop    rbp
   14000162f:	ret    
   140001630:	call   QWORD PTR [rip+0x5a72]        # 0x1400070a8
   140001636:	movzx  ebx,ax
   140001639:	or     ebx,0x80070000
   14000163f:	test   eax,eax
   140001641:	cmovle ebx,eax
   140001644:	test   ebx,ebx
   140001646:	jns    0x1400015ce
   140001648:	cmp    bx,0x13d
   14000164d:	jne    0x140001693
   14000164f:	mov    QWORD PTR [rsp+0x30],r14
   140001654:	lea    rax,[rsp+0x40]
   140001659:	mov    DWORD PTR [rsp+0x28],r15d
   14000165e:	xor    r9d,r9d
   140001661:	mov    r8d,edi
   140001664:	mov    QWORD PTR [rsp+0x20],rax
   140001669:	mov    rdx,rsi
   14000166c:	mov    ecx,0xa00
   140001671:	call   QWORD PTR [rip+0x5a59]        # 0x1400070d0
   140001677:	test   eax,eax
   140001679:	jne    0x1400015cb
   14000167f:	call   QWORD PTR [rip+0x5a23]        # 0x1400070a8
   140001685:	movzx  ebx,ax
   140001688:	or     ebx,0x80070000
   14000168e:	test   eax,eax
   140001690:	cmovle ebx,eax
   140001693:	test   ebx,ebx
   140001695:	jns    0x1400015ce
   14000169b:	mov    DWORD PTR [rsp+0x28],edi
   14000169f:	lea    r9,[rip+0x61b2]        # 0x140007858
   1400016a6:	mov    r8d,0x102
   1400016ac:	mov    DWORD PTR [rsp+0x20],edi
   1400016b0:	mov    rdx,r15
   1400016b3:	mov    rcx,rbp
   1400016b6:	call   QWORD PTR [rip+0x5c3c]        # 0x1400072f8
   1400016bc:	jmp    0x1400015f9
   1400016c1:	int3   
   1400016c2:	int3   
   1400016c3:	int3   
   1400016c4:	int3   
   1400016c5:	int3   
   1400016c6:	int3   
   1400016c7:	int3   
   1400016c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400016cd:	push   rbp
   1400016ce:	mov    rbp,rsp
   1400016d1:	sub    rsp,0x70
   1400016d5:	mov    rax,QWORD PTR [rip+0x892c]        # 0x14000a008
   1400016dc:	xor    rax,rsp
   1400016df:	mov    QWORD PTR [rbp-0x10],rax
   1400016e3:	mov    QWORD PTR [rbp-0x30],rdx
   1400016e7:	mov    r8d,ecx
   1400016ea:	mov    rcx,QWORD PTR [rip+0x8ee7]        # 0x14000a5d8
   1400016f1:	mov    ebx,0xfffffff5
   1400016f6:	mov    edx,ebx
   1400016f8:	call   0x140005524
   1400016fd:	mov    eax,DWORD PTR [rbp-0x2c]
   140001700:	cmp    eax,0x7fffffff
   140001705:	jne    0x140001715
   140001707:	cmp    DWORD PTR [rbp-0x30],0xffffffff
   14000170b:	jne    0x14000172e
   14000170d:	mov    r8d,0x2711
   140001713:	jmp    0x14000178a
   140001715:	test   eax,eax
   140001717:	jne    0x14000172e
   140001719:	cmp    DWORD PTR [rbp-0x30],eax
   14000171c:	jne    0x14000172e
   14000171e:	lea    rdx,[rip+0x6143]        # 0x140007868
   140001725:	mov    ecx,ebx
   140001727:	call   0x14000533c
   14000172c:	jmp    0x140001798
   14000172e:	lea    rdx,[rbp-0x28]
   140001732:	lea    rcx,[rbp-0x30]
   140001736:	call   QWORD PTR [rip+0x59a4]        # 0x1400070e0
   14000173c:	lea    rdx,[rbp-0x20]
   140001740:	lea    rcx,[rbp-0x28]
   140001744:	call   QWORD PTR [rip+0x599e]        # 0x1400070e8
   14000174a:	movzx  ecx,WORD PTR [rbp-0x16]
   14000174e:	movzx  edx,WORD PTR [rbp-0x18]
   140001752:	movzx  eax,WORD PTR [rbp-0x14]
   140001756:	movzx  r10d,WORD PTR [rbp-0x20]
   14000175b:	movzx  r9d,WORD PTR [rbp-0x1a]
   140001760:	movzx  r8d,WORD PTR [rbp-0x1e]
   140001765:	mov    DWORD PTR [rsp+0x38],eax
   140001769:	mov    DWORD PTR [rsp+0x30],ecx
   14000176d:	mov    ecx,ebx
   14000176f:	mov    DWORD PTR [rsp+0x28],edx
   140001773:	lea    rdx,[rip+0x60f6]        # 0x140007870
   14000177a:	mov    DWORD PTR [rsp+0x20],r10d
   14000177f:	call   0x14000533c
   140001784:	mov    r8d,0x2712
   14000178a:	mov    rcx,QWORD PTR [rip+0x8e47]        # 0x14000a5d8
   140001791:	mov    edx,ebx
   140001793:	call   0x140005524
   140001798:	mov    rcx,QWORD PTR [rbp-0x10]
   14000179c:	xor    rcx,rsp
   14000179f:	call   0x1400058e0
   1400017a4:	mov    rbx,QWORD PTR [rsp+0x80]
   1400017ac:	add    rsp,0x70
   1400017b0:	pop    rbp
   1400017b1:	ret    
   1400017b2:	int3   
   1400017b3:	int3   
   1400017b4:	int3   
   1400017b5:	int3   
   1400017b6:	int3   
   1400017b7:	int3   
   1400017b8:	mov    r9d,ecx
   1400017bb:	test   ecx,ecx
   1400017bd:	jg     0x140001855
   1400017c3:	je     0x14000184c
   1400017c9:	cmp    ecx,0xffffff73
   1400017cf:	je     0x140001843
   1400017d1:	cmp    ecx,0xffffff74
   1400017d7:	je     0x14000183a
   1400017d9:	cmp    ecx,0xffffff7b
   1400017df:	je     0x14000182e
   1400017e1:	cmp    ecx,0xffffff7c
   1400017e7:	je     0x140001822
   1400017e9:	cmp    ecx,0xffffff7e
   1400017ef:	je     0x140001816
   1400017f1:	cmp    ecx,0xffffff7f
   1400017f7:	je     0x14000180a
   1400017f9:	cmp    ecx,0xffffff80
   1400017fc:	jne    0x140001873
   1400017fe:	lea    rdx,[rip+0x6173]        # 0x140007978
   140001805:	jmp    0x1400018be
   14000180a:	lea    rdx,[rip+0x618f]        # 0x1400079a0
   140001811:	jmp    0x1400018be
   140001816:	lea    rdx,[rip+0x61ab]        # 0x1400079c8
   14000181d:	jmp    0x1400018be
   140001822:	lea    rdx,[rip+0x61bf]        # 0x1400079e8
   140001829:	jmp    0x1400018be
   14000182e:	lea    rdx,[rip+0x62a3]        # 0x140007ad8
   140001835:	jmp    0x1400018be
   14000183a:	lea    rdx,[rip+0x6207]        # 0x140007a48
   140001841:	jmp    0x1400018be
   140001843:	lea    rdx,[rip+0x625e]        # 0x140007aa8
   14000184a:	jmp    0x1400018be
   14000184c:	lea    rdx,[rip+0x60ad]        # 0x140007900
   140001853:	jmp    0x1400018be
   140001855:	sub    ecx,0x1
   140001858:	je     0x1400018b7
   14000185a:	sub    ecx,0x2
   14000185d:	je     0x1400018ae
   14000185f:	sub    ecx,0xe
   140001862:	je     0x1400018a5
   140001864:	sub    ecx,0x1
   140001867:	je     0x14000189c
   140001869:	sub    ecx,0x5
   14000186c:	je     0x140001893
   14000186e:	cmp    ecx,0x1
   140001871:	je     0x14000188a
   140001873:	mov    rcx,QWORD PTR [rip+0x8d5e]        # 0x14000a5d8
   14000187a:	mov    edx,0xfffffff5
   14000187f:	mov    r8d,0x2714
   140001885:	jmp    0x140005524
   14000188a:	lea    rdx,[rip+0x61d7]        # 0x140007a68
   140001891:	jmp    0x1400018be
   140001893:	lea    rdx,[rip+0x617e]        # 0x140007a18
   14000189a:	jmp    0x1400018be
   14000189c:	lea    rdx,[rip+0x629d]        # 0x140007b40
   1400018a3:	jmp    0x1400018be
   1400018a5:	lea    rdx,[rip+0x625c]        # 0x140007b08
   1400018ac:	jmp    0x1400018be
   1400018ae:	lea    rdx,[rip+0x6093]        # 0x140007948
   1400018b5:	jmp    0x1400018be
   1400018b7:	lea    rdx,[rip+0x605a]        # 0x140007918
   1400018be:	mov    ecx,0xfffffff5
   1400018c3:	jmp    0x14000533c
   1400018c8:	int3   
   1400018c9:	int3   
   1400018ca:	int3   
   1400018cb:	int3   
   1400018cc:	int3   
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	cmp    ecx,0x8
   1400018d3:	ja     0x14000192d
   1400018d5:	je     0x140001925
   1400018d7:	sub    ecx,0x2
   1400018da:	je     0x14000191d
   1400018dc:	sub    ecx,0x1
   1400018df:	je     0x140001915
   1400018e1:	sub    ecx,0x1
   1400018e4:	je     0x14000190d
   1400018e6:	sub    ecx,0x1
   1400018e9:	je     0x140001905
   1400018eb:	sub    ecx,0x1
   1400018ee:	je     0x1400018fd
   1400018f0:	cmp    ecx,0x1
   1400018f3:	jne    0x140001946
   1400018f5:	lea    rax,[rip+0x6304]        # 0x140007c00
   1400018fc:	ret    
   1400018fd:	lea    rax,[rip+0x62ec]        # 0x140007bf0
   140001904:	ret    
   140001905:	lea    rax,[rip+0x62d4]        # 0x140007be0
   14000190c:	ret    
   14000190d:	lea    rax,[rip+0x62bc]        # 0x140007bd0
   140001914:	ret    
   140001915:	lea    rax,[rip+0x62a4]        # 0x140007bc0
   14000191c:	ret    
   14000191d:	lea    rax,[rip+0x6284]        # 0x140007ba8
   140001924:	ret    
   140001925:	lea    rax,[rip+0x62e4]        # 0x140007c10
   14000192c:	ret    
   14000192d:	sub    ecx,0x9
   140001930:	je     0x140001969
   140001932:	sub    ecx,0x1
   140001935:	je     0x140001961
   140001937:	sub    ecx,0x1
   14000193a:	je     0x140001959
   14000193c:	sub    ecx,0x1
   14000193f:	je     0x140001951
   140001941:	cmp    ecx,0x1
   140001944:	je     0x140001949
   140001946:	xor    eax,eax
   140001948:	ret    
   140001949:	lea    rax,[rip+0x6388]        # 0x140007cd8
   140001950:	ret    
   140001951:	lea    rax,[rip+0x6350]        # 0x140007ca8
   140001958:	ret    
   140001959:	lea    rax,[rip+0x6320]        # 0x140007c80
   140001960:	ret    
   140001961:	lea    rax,[rip+0x62f0]        # 0x140007c58
   140001968:	ret    
   140001969:	lea    rax,[rip+0x62c8]        # 0x140007c38
   140001970:	ret    
   140001971:	int3   
   140001972:	int3   
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	int3   
   140001977:	int3   
   140001978:	rex push rbx
   14000197a:	sub    rsp,0x20
   14000197e:	mov    ebx,ecx
   140001980:	mov    ecx,edx
   140001982:	call   QWORD PTR [rip+0x5680]        # 0x140007008
   140001988:	mov    rcx,QWORD PTR [rip+0x8c49]        # 0x14000a5d8
   14000198f:	mov    r8d,ebx
   140001992:	mov    r9d,eax
   140001995:	mov    edx,0xfffffff5
   14000199a:	add    rsp,0x20
   14000199e:	pop    rbx
   14000199f:	jmp    0x140005524
   1400019a4:	int3   
   1400019a5:	int3   
   1400019a6:	int3   
   1400019a7:	int3   
   1400019a8:	int3   
   1400019a9:	int3   
   1400019aa:	int3   
   1400019ab:	int3   
   1400019ac:	mov    rax,rsp
   1400019af:	mov    DWORD PTR [rax+0x8],ecx
   1400019b2:	mov    QWORD PTR [rax+0x10],rdx
   1400019b6:	mov    QWORD PTR [rax+0x18],r8
   1400019ba:	mov    QWORD PTR [rax+0x20],r9
   1400019be:	sub    rsp,0x38
   1400019c2:	mov    r8d,ecx
   1400019c5:	lea    r9,[rax+0x10]
   1400019c9:	mov    rcx,QWORD PTR [rip+0x8c08]        # 0x14000a5d8
   1400019d0:	mov    edx,0xfffffff5
   1400019d5:	call   0x1400053f0
   1400019da:	add    rsp,0x38
   1400019de:	ret    
   1400019df:	int3   
   1400019e0:	int3   
   1400019e1:	int3   
   1400019e2:	int3   
   1400019e3:	int3   
   1400019e4:	int3   
   1400019e5:	int3   
   1400019e6:	int3   
   1400019e7:	int3   
   1400019e8:	mov    rax,rsp
   1400019eb:	mov    QWORD PTR [rax+0x8],rbx
   1400019ef:	mov    QWORD PTR [rax+0x10],rsi
   1400019f3:	push   rdi
   1400019f4:	sub    rsp,0x30
   1400019f8:	mov    ebx,r8d
   1400019fb:	mov    r9,rcx
   1400019fe:	mov    rcx,QWORD PTR [rip+0x8bd3]        # 0x14000a5d8
   140001a05:	mov    edi,0xfffffff5
   140001a0a:	mov    DWORD PTR [rax-0x10],ebx
   140001a0d:	mov    r8d,0x271e
   140001a13:	mov    QWORD PTR [rax-0x18],rdx
   140001a17:	mov    edx,edi
   140001a19:	call   0x140005524
   140001a1e:	lea    rsi,[rip+0x62e3]        # 0x140007d08
   140001a25:	test   ebx,ebx
   140001a27:	jns    0x140001a3e
   140001a29:	lea    r8,[rip+0x62c8]        # 0x140007cf8
   140001a30:	mov    rdx,rsi
   140001a33:	mov    ecx,edi
   140001a35:	call   0x14000533c
   140001a3a:	btr    ebx,0x1f
   140001a3e:	bt     ebx,0x1e
   140001a42:	jae    0x140001a59
   140001a44:	lea    r8,[rip+0x62cd]        # 0x140007d18
   140001a4b:	mov    rdx,rsi
   140001a4e:	mov    ecx,edi
   140001a50:	call   0x14000533c
   140001a55:	btr    ebx,0x1e
   140001a59:	bt     ebx,0x1d
   140001a5d:	jae    0x140001a74
   140001a5f:	lea    r8,[rip+0x62c2]        # 0x140007d28
   140001a66:	mov    rdx,rsi
   140001a69:	mov    ecx,edi
   140001a6b:	call   0x14000533c
   140001a70:	btr    ebx,0x1d
   140001a74:	bt     ebx,0x1c
   140001a78:	jae    0x140001a8f
   140001a7a:	lea    r8,[rip+0x62b7]        # 0x140007d38
   140001a81:	mov    rdx,rsi
   140001a84:	mov    ecx,edi
   140001a86:	call   0x14000533c
   140001a8b:	btr    ebx,0x1c
   140001a8f:	bt     ebx,0x1b
   140001a93:	jae    0x140001aaa
   140001a95:	lea    r8,[rip+0x62a8]        # 0x140007d44
   140001a9c:	mov    rdx,rsi
   140001a9f:	mov    ecx,edi
   140001aa1:	call   0x14000533c
   140001aa6:	btr    ebx,0x1b
   140001aaa:	bt     ebx,0x1a
   140001aae:	jae    0x140001ac5
   140001ab0:	lea    r8,[rip+0x6299]        # 0x140007d50
   140001ab7:	mov    rdx,rsi
   140001aba:	mov    ecx,edi
   140001abc:	call   0x14000533c
   140001ac1:	btr    ebx,0x1a
   140001ac5:	bt     ebx,0x19
   140001ac9:	jae    0x140001ae0
   140001acb:	lea    r8,[rip+0x628e]        # 0x140007d60
   140001ad2:	mov    rdx,rsi
   140001ad5:	mov    ecx,edi
   140001ad7:	call   0x14000533c
   140001adc:	btr    ebx,0x19
   140001ae0:	bt     ebx,0x18
   140001ae4:	jae    0x140001afb
   140001ae6:	lea    r8,[rip+0x6283]        # 0x140007d70
   140001aed:	mov    rdx,rsi
   140001af0:	mov    ecx,edi
   140001af2:	call   0x14000533c
   140001af7:	btr    ebx,0x18
   140001afb:	bt     ebx,0x17
   140001aff:	jae    0x140001b16
   140001b01:	lea    r8,[rip+0x6270]        # 0x140007d78
   140001b08:	mov    rdx,rsi
   140001b0b:	mov    ecx,edi
   140001b0d:	call   0x14000533c
   140001b12:	btr    ebx,0x17
   140001b16:	bt     ebx,0x16
   140001b1a:	jae    0x140001b31
   140001b1c:	lea    r8,[rip+0x6265]        # 0x140007d88
   140001b23:	mov    rdx,rsi
   140001b26:	mov    ecx,edi
   140001b28:	call   0x14000533c
   140001b2d:	btr    ebx,0x16
   140001b31:	bt     ebx,0x15
   140001b35:	jae    0x140001b4c
   140001b37:	lea    r8,[rip+0x6252]        # 0x140007d90
   140001b3e:	mov    rdx,rsi
   140001b41:	mov    ecx,edi
   140001b43:	call   0x14000533c
   140001b48:	btr    ebx,0x15
   140001b4c:	bt     ebx,0x14
   140001b50:	jae    0x140001b67
   140001b52:	lea    r8,[rip+0x6247]        # 0x140007da0
   140001b59:	mov    rdx,rsi
   140001b5c:	mov    ecx,edi
   140001b5e:	call   0x14000533c
   140001b63:	btr    ebx,0x14
   140001b67:	bt     ebx,0x12
   140001b6b:	jae    0x140001b82
   140001b6d:	lea    r8,[rip+0x623c]        # 0x140007db0
   140001b74:	mov    rdx,rsi
   140001b77:	mov    ecx,edi
   140001b79:	call   0x14000533c
   140001b7e:	btr    ebx,0x12
   140001b82:	bt     ebx,0x10
   140001b86:	jae    0x140001b9d
   140001b88:	lea    r8,[rip+0x6231]        # 0x140007dc0
   140001b8f:	mov    rdx,rsi
   140001b92:	mov    ecx,edi
   140001b94:	call   0x14000533c
   140001b99:	btr    ebx,0x10
   140001b9d:	test   bl,0x1
   140001ba0:	je     0x140001bb6
   140001ba2:	lea    r8,[rip+0x622f]        # 0x140007dd8
   140001ba9:	mov    rdx,rsi
   140001bac:	mov    ecx,edi
   140001bae:	call   0x14000533c
   140001bb3:	and    ebx,0xfffffffe
   140001bb6:	test   ebx,ebx
   140001bb8:	je     0x140001bcb
   140001bba:	mov    r8d,ebx
   140001bbd:	lea    rdx,[rip+0x6224]        # 0x140007de8
   140001bc4:	mov    ecx,edi
   140001bc6:	call   0x14000533c
   140001bcb:	lea    rdx,[rip+0x621e]        # 0x140007df0
   140001bd2:	mov    ecx,edi
   140001bd4:	mov    rbx,QWORD PTR [rsp+0x40]
   140001bd9:	mov    rsi,QWORD PTR [rsp+0x48]
   140001bde:	add    rsp,0x30
   140001be2:	pop    rdi
   140001be3:	jmp    0x14000533c
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	rex push rbx
   140001bf2:	sub    rsp,0x20
   140001bf6:	mov    ebx,ecx
   140001bf8:	mov    edx,0xfffffff5
   140001bfd:	mov    rcx,QWORD PTR [rip+0x89d4]        # 0x14000a5d8
   140001c04:	mov    r8d,0x2746
   140001c0a:	call   0x140005524
   140001c0f:	test   bl,0x1
   140001c12:	je     0x140001c2f
   140001c14:	lea    r8,[rip+0x62bd]        # 0x140007ed8
   140001c1b:	mov    ecx,0xfffffff5
   140001c20:	lea    rdx,[rip+0x61e1]        # 0x140007e08
   140001c27:	call   0x14000533c
   140001c2c:	and    ebx,0xfffffffe
   140001c2f:	test   ebx,ebx
   140001c31:	je     0x140001c47
   140001c33:	mov    r8d,ebx
   140001c36:	lea    rdx,[rip+0x61ab]        # 0x140007de8
   140001c3d:	mov    ecx,0xfffffff5
   140001c42:	call   0x14000533c
   140001c47:	lea    rdx,[rip+0x61a2]        # 0x140007df0
   140001c4e:	mov    ecx,0xfffffff5
   140001c53:	add    rsp,0x20
   140001c57:	pop    rbx
   140001c58:	jmp    0x14000533c
   140001c5d:	int3   
   140001c5e:	int3   
   140001c5f:	int3   
   140001c60:	int3   
   140001c61:	int3   
   140001c62:	int3   
   140001c63:	int3   
   140001c64:	mov    rax,rsp
   140001c67:	mov    QWORD PTR [rax+0x10],rbx
   140001c6b:	mov    QWORD PTR [rax+0x18],rsi
   140001c6f:	mov    QWORD PTR [rax+0x20],rdi
   140001c73:	push   rbp
   140001c74:	push   r12
   140001c76:	push   r13
   140001c78:	push   r14
   140001c7a:	push   r15
   140001c7c:	lea    rbp,[rax-0x5f]
   140001c80:	sub    rsp,0xd0
   140001c87:	mov    rax,QWORD PTR [rip+0x837a]        # 0x14000a008
   140001c8e:	xor    rax,rsp
   140001c91:	mov    QWORD PTR [rbp+0x27],rax
   140001c95:	mov    r9,QWORD PTR [rcx]
   140001c98:	mov    rbx,rcx
   140001c9b:	mov    rcx,QWORD PTR [rip+0x8936]        # 0x14000a5d8
   140001ca2:	mov    r13d,0xfffffff5
   140001ca8:	add    r9,0x8
   140001cac:	mov    edx,r13d
   140001caf:	mov    r8d,0x271f
   140001cb5:	call   0x140005524
   140001cba:	mov    r9,QWORD PTR [rbx+0x8]
   140001cbe:	mov    r8d,0x2720
   140001cc4:	mov    rcx,QWORD PTR [rip+0x890d]        # 0x14000a5d8
   140001ccb:	add    r9,0x8
   140001ccf:	mov    edx,r13d
   140001cd2:	call   0x140005524
   140001cd7:	mov    r9,QWORD PTR [rbx+0x10]
   140001cdb:	mov    r8d,0x2721
   140001ce1:	mov    rcx,QWORD PTR [rip+0x88f0]        # 0x14000a5d8
   140001ce8:	add    r9,0x8
   140001cec:	mov    edx,r13d
   140001cef:	call   0x140005524
   140001cf4:	mov    rcx,QWORD PTR [rip+0x88dd]        # 0x14000a5d8
   140001cfb:	lea    r9,[rbx+0x18]
   140001cff:	mov    r8d,0x2722
   140001d05:	mov    edx,r13d
   140001d08:	call   0x140005524
   140001d0d:	mov    rcx,QWORD PTR [rip+0x88c4]        # 0x14000a5d8
   140001d14:	lea    r9,[rbx+0x28]
   140001d18:	mov    r8d,0x2723
   140001d1e:	mov    edx,r13d
   140001d21:	call   0x140005524
   140001d26:	mov    rcx,QWORD PTR [rip+0x88ab]        # 0x14000a5d8
   140001d2d:	lea    r9,[rbx+0x38]
   140001d31:	mov    r8d,0x2724
   140001d37:	mov    edx,r13d
   140001d3a:	call   0x140005524
   140001d3f:	mov    r8d,DWORD PTR [rbx+0x58]
   140001d43:	lea    rdx,[rip+0x61a6]        # 0x140007ef0
   140001d4a:	lea    rcx,[rip+0x6623]        # 0x140008374
   140001d51:	call   0x1400019e8
   140001d56:	mov    r9d,DWORD PTR [rbx+0x48]
   140001d5a:	mov    r8d,0x2725
   140001d60:	mov    rcx,QWORD PTR [rip+0x8871]        # 0x14000a5d8
   140001d67:	mov    edx,r13d
   140001d6a:	call   0x140005524
   140001d6f:	mov    ecx,DWORD PTR [rbx+0x48]
   140001d72:	call   0x1400017b8
   140001d77:	mov    r9d,DWORD PTR [rbx+0x4c]
   140001d7b:	mov    r8d,0x27ee
   140001d81:	mov    rcx,QWORD PTR [rip+0x8850]        # 0x14000a5d8
   140001d88:	mov    edx,r13d
   140001d8b:	call   0x140005524
   140001d90:	xor    edi,edi
   140001d92:	lea    r15d,[rdi+0x1]
   140001d96:	cmp    DWORD PTR [rbx+0x4c],edi
   140001d99:	jbe    0x140001dbb
   140001d9b:	mov    rax,QWORD PTR [rbx+0x50]
   140001d9f:	lea    rdx,[rip+0x6162]        # 0x140007f08
   140001da6:	mov    ecx,r13d
   140001da9:	movzx  r8d,BYTE PTR [rdi+rax*1]
   140001dae:	call   0x14000533c
   140001db3:	add    edi,r15d
   140001db6:	cmp    edi,DWORD PTR [rbx+0x4c]
   140001db9:	jb     0x140001d9b
   140001dbb:	lea    rdx,[rip+0x6152]        # 0x140007f14
   140001dc2:	mov    ecx,r13d
   140001dc5:	call   0x14000533c
   140001dca:	mov    rdx,QWORD PTR [rbx+0x68]
   140001dce:	mov    ecx,0x2727
   140001dd3:	call   0x1400016c8
   140001dd8:	mov    rdx,QWORD PTR [rbx+0x70]
   140001ddc:	mov    ecx,0x2728
   140001de1:	call   0x1400016c8
   140001de6:	mov    rdx,QWORD PTR [rbx+0x78]
   140001dea:	mov    ecx,0x2729
   140001def:	call   0x1400016c8
   140001df4:	mov    rcx,QWORD PTR [rbx+0x80]
   140001dfb:	mov    r8d,r15d
   140001dfe:	test   rcx,rcx
   140001e01:	jns    0x140001e09
   140001e03:	neg    rcx
   140001e06:	xor    r8d,r8d
   140001e09:	movabs rax,0x1ca213d840baf7d5
   140001e13:	imul   rcx
   140001e16:	mov    r9,rdx
   140001e19:	sar    r9,0x1a
   140001e1d:	mov    rax,r9
   140001e20:	shr    rax,0x3f
   140001e24:	add    r9,rax
   140001e27:	imul   rax,r9,0x23c34600
   140001e2e:	sub    rcx,rax
   140001e31:	movabs rax,0xd6bf94d5e57a42bd
   140001e3b:	imul   rcx
   140001e3e:	add    rdx,rcx
   140001e41:	mov    ecx,r13d
   140001e44:	sar    rdx,0x17
   140001e48:	mov    rax,rdx
   140001e4b:	shr    rax,0x3f
   140001e4f:	add    rdx,rax
   140001e52:	neg    r8d
   140001e55:	mov    QWORD PTR [rsp+0x20],rdx
   140001e5a:	lea    rdx,[rip+0x5a4f]        # 0x1400078b0
   140001e61:	sbb    r8d,r8d
   140001e64:	and    r8d,0xfffffffe
   140001e68:	add    r8d,0x2d
   140001e6c:	call   0x14000533c
   140001e71:	mov    rcx,QWORD PTR [rip+0x8760]        # 0x14000a5d8
   140001e78:	mov    r8d,0x2713
   140001e7e:	mov    edx,r13d
   140001e81:	call   0x140005524
   140001e86:	mov    r9d,DWORD PTR [rbx+0x88]
   140001e8d:	mov    r8d,0x272a
   140001e93:	mov    rcx,QWORD PTR [rip+0x873e]        # 0x14000a5d8
   140001e9a:	mov    edx,r13d
   140001e9d:	call   0x140005524
   140001ea2:	movups xmm0,XMMWORD PTR [rip+0x5ccf]        # 0x140007b78
   140001ea9:	mov    edi,DWORD PTR [rbx+0x88]
   140001eaf:	xor    r14d,r14d
   140001eb2:	mov    al,BYTE PTR [rip+0x5cd0]        # 0x140007b88
   140001eb8:	mov    rsi,QWORD PTR [rbx+0x90]
   140001ebf:	mov    BYTE PTR [rbp-0x59],al
   140001ec2:	movups XMMWORD PTR [rbp-0x69],xmm0
   140001ec6:	test   edi,edi
   140001ec8:	je     0x140001fef
   140001ece:	lea    r12d,[r14+0x10]
   140001ed2:	cmp    edi,r12d
   140001ed5:	lea    r8,[rip+0x5cb4]        # 0x140007b90
   140001edc:	mov    ebx,edi
   140001ede:	lea    rcx,[rbp-0x49]
   140001ee2:	mov    r9d,r14d
   140001ee5:	mov    edx,0x64
   140001eea:	cmova  ebx,r12d
   140001eee:	call   QWORD PTR [rip+0x53fc]        # 0x1400072f0
   140001ef4:	xor    r9d,r9d
   140001ef7:	mov    r8b,0x6
   140001efa:	test   ebx,ebx
   140001efc:	je     0x140001f55
   140001efe:	mov    r10,rsi
   140001f01:	movzx  edx,BYTE PTR [r10]
   140001f05:	movsx  rcx,r8b
   140001f09:	mov    eax,edx
   140001f0b:	shr    rax,0x4
   140001f0f:	add    r8b,r15b
   140001f12:	and    edx,0xf
   140001f15:	mov    al,BYTE PTR [rbp+rax*1-0x69]
   140001f19:	mov    BYTE PTR [rbp+rcx*1-0x49],al
   140001f1d:	mov    al,BYTE PTR [rbp+rdx*1-0x69]
   140001f21:	movsx  rcx,r8b
   140001f25:	add    r8b,r15b
   140001f28:	mov    BYTE PTR [rbp+rcx*1-0x49],al
   140001f2c:	movsx  rax,r8b
   140001f30:	add    r8b,r15b
   140001f33:	cmp    r9d,0x7
   140001f37:	jne    0x140001f40
   140001f39:	mov    BYTE PTR [rbp+rax*1-0x49],0x3a
   140001f3e:	jmp    0x140001f45
   140001f40:	mov    BYTE PTR [rbp+rax*1-0x49],0x20
   140001f45:	add    r9d,r15d
   140001f48:	add    r10,r15
   140001f4b:	cmp    r9d,ebx
   140001f4e:	jb     0x140001f01
   140001f50:	cmp    r9d,r12d
   140001f53:	jae    0x140001f84
   140001f55:	mov    ecx,r12d
   140001f58:	sub    ecx,r9d
   140001f5b:	movsx  rax,r8b
   140001f5f:	add    r8b,r15b
   140001f62:	mov    BYTE PTR [rbp+rax*1-0x49],0x20
   140001f67:	movsx  rax,r8b
   140001f6b:	add    r8b,r15b
   140001f6e:	mov    BYTE PTR [rbp+rax*1-0x49],0x20
   140001f73:	movsx  rax,r8b
   140001f77:	add    r8b,r15b
   140001f7a:	mov    BYTE PTR [rbp+rax*1-0x49],0x20
   140001f7f:	sub    rcx,r15
   140001f82:	jne    0x140001f5b
   140001f84:	movsx  rax,r8b
   140001f88:	add    r8b,r15b
   140001f8b:	mov    BYTE PTR [rbp+rax*1-0x49],0x20
   140001f90:	test   ebx,ebx
   140001f92:	je     0x140001fbd
   140001f94:	mov    rcx,rsi
   140001f97:	mov    r9d,ebx
   140001f9a:	mov    dl,BYTE PTR [rcx]
   140001f9c:	lea    eax,[rdx-0x20]
   140001f9f:	cmp    al,0x5e
   140001fa1:	movsx  rax,r8b
   140001fa5:	ja     0x140001fad
   140001fa7:	mov    BYTE PTR [rbp+rax*1-0x49],dl
   140001fab:	jmp    0x140001fb2
   140001fad:	mov    BYTE PTR [rbp+rax*1-0x49],0x2e
   140001fb2:	add    r8b,r15b
   140001fb5:	add    rcx,r15
   140001fb8:	sub    r9,r15
   140001fbb:	jne    0x140001f9a
   140001fbd:	movsx  rax,r8b
   140001fc1:	cmp    rax,0x64
   140001fc5:	jae    0x14000201c
   140001fc7:	lea    r8,[rbp-0x49]
   140001fcb:	mov    BYTE PTR [rbp+rax*1-0x49],0x0
   140001fd0:	lea    rdx,[rip+0x5bc1]        # 0x140007b98
   140001fd7:	mov    ecx,r13d
   140001fda:	call   0x14000533c
   140001fdf:	mov    eax,ebx
   140001fe1:	add    r14d,ebx
   140001fe4:	add    rsi,rax
   140001fe7:	sub    edi,ebx
   140001fe9:	jne    0x140001ed2
   140001fef:	mov    rcx,QWORD PTR [rbp+0x27]
   140001ff3:	xor    rcx,rsp
   140001ff6:	call   0x1400058e0
   140001ffb:	lea    r11,[rsp+0xd0]
   140002003:	mov    rbx,QWORD PTR [r11+0x38]
   140002007:	mov    rsi,QWORD PTR [r11+0x40]
   14000200b:	mov    rdi,QWORD PTR [r11+0x48]
   14000200f:	mov    rsp,r11
   140002012:	pop    r15
   140002014:	pop    r14
   140002016:	pop    r13
   140002018:	pop    r12
   14000201a:	pop    rbp
   14000201b:	ret    
   14000201c:	call   0x140005ab8
   140002021:	int3   
   140002022:	int3   
   140002023:	int3   
   140002024:	int3   
   140002025:	int3   
   140002026:	int3   
   140002027:	int3   
   140002028:	mov    rax,rsp
   14000202b:	mov    QWORD PTR [rax+0x10],rbx
   14000202f:	mov    QWORD PTR [rax+0x8],rcx
   140002033:	push   rbp
   140002034:	push   rsi
   140002035:	push   rdi
   140002036:	push   r12
   140002038:	push   r13
   14000203a:	push   r14
   14000203c:	push   r15
   14000203e:	sub    rsp,0x50
   140002042:	and    DWORD PTR [rax+0x20],0x0
   140002046:	mov    r15,r9
   140002049:	mov    rbx,r8
   14000204c:	mov    r13d,edx
   14000204f:	mov    r12d,0x70
   140002055:	test   r9,r9
   140002058:	je     0x14000207a
   14000205a:	movzx  eax,WORD PTR [r9+0x20]
   14000205f:	movzx  r10d,WORD PTR [r9+0x30]
   140002064:	movzx  r12d,WORD PTR [r9]
   140002068:	add    r10d,eax
   14000206b:	movzx  eax,WORD PTR [r9+0x10]
   140002070:	add    r12d,0x70
   140002074:	add    r10d,eax
   140002077:	add    r12d,r10d
   14000207a:	mov    edx,r12d
   14000207d:	mov    ecx,0x40
   140002082:	call   QWORD PTR [rip+0x5018]        # 0x1400070a0
   140002088:	mov    rbp,rax
   14000208b:	test   rax,rax
   14000208e:	jne    0x14000209a
   140002090:	mov    ebx,0xc0000017
   140002095:	jmp    0x1400022d2
   14000209a:	mov    DWORD PTR [rax],0xf
   1400020a0:	mov    rax,QWORD PTR [rbx]
   1400020a3:	mov    QWORD PTR [rbp+0x4],rax
   1400020a7:	test   r15,r15
   1400020aa:	je     0x140002229
   1400020b0:	and    DWORD PTR [rbp+0xc],0x0
   1400020b4:	lea    r14,[rbp+0x10]
   1400020b8:	movups xmm0,XMMWORD PTR [r15]
   1400020bc:	lea    rcx,[rbp+0x70]
   1400020c0:	movups XMMWORD PTR [r14],xmm0
   1400020c4:	movups xmm1,XMMWORD PTR [r15+0x10]
   1400020c9:	movups XMMWORD PTR [r14+0x10],xmm1
   1400020ce:	movups xmm0,XMMWORD PTR [r15+0x20]
   1400020d3:	movups XMMWORD PTR [r14+0x20],xmm0
   1400020d8:	movups xmm1,XMMWORD PTR [r15+0x30]
   1400020dd:	movups XMMWORD PTR [r14+0x30],xmm1
   1400020e2:	movups xmm0,XMMWORD PTR [r15+0x40]
   1400020e7:	movups XMMWORD PTR [r14+0x40],xmm0
   1400020ec:	movups xmm1,XMMWORD PTR [r15+0x50]
   1400020f1:	movups XMMWORD PTR [r14+0x50],xmm1
   1400020f6:	mov    QWORD PTR [rbp+0x18],rcx
   1400020fa:	movzx  eax,WORD PTR [r15]
   1400020fe:	mov    WORD PTR [rbp+0x12],ax
   140002102:	mov    WORD PTR [r14],ax
   140002106:	movzx  r8d,WORD PTR [r15]
   14000210a:	mov    rdx,QWORD PTR [r15+0x8]
   14000210e:	call   0x140005fd6
   140002113:	movzx  ecx,WORD PTR [r15]
   140002117:	add    rcx,0x70
   14000211b:	add    rcx,rbp
   14000211e:	mov    QWORD PTR [rbp+0x28],rcx
   140002122:	movzx  eax,WORD PTR [r15+0x10]
   140002127:	mov    WORD PTR [rbp+0x22],ax
   14000212b:	mov    WORD PTR [rbp+0x20],ax
   14000212f:	movzx  r8d,WORD PTR [r15+0x10]
   140002134:	mov    rdx,QWORD PTR [r15+0x18]
   140002138:	call   0x140005fd6
   14000213d:	movzx  eax,WORD PTR [r15+0x10]
   140002142:	movzx  ecx,WORD PTR [r15]
   140002146:	add    rax,rbp
   140002149:	add    rcx,0x70
   14000214d:	add    rcx,rax
   140002150:	mov    QWORD PTR [rbp+0x38],rcx
   140002154:	movzx  eax,WORD PTR [r15+0x20]
   140002159:	mov    WORD PTR [rbp+0x32],ax
   14000215d:	mov    WORD PTR [rbp+0x30],ax
   140002161:	movzx  r8d,WORD PTR [r15+0x20]
   140002166:	mov    rdx,QWORD PTR [r15+0x28]
   14000216a:	call   0x140005fd6
   14000216f:	movzx  edx,WORD PTR [r15+0x20]
   140002174:	movzx  ecx,WORD PTR [r15+0x10]
   140002179:	add    rdx,rbp
   14000217c:	movzx  eax,WORD PTR [r15]
   140002180:	add    rcx,rdx
   140002183:	add    rax,0x70
   140002187:	add    rcx,rax
   14000218a:	mov    QWORD PTR [rbp+0x48],rcx
   14000218e:	movzx  eax,WORD PTR [r15+0x30]
   140002193:	mov    WORD PTR [rbp+0x42],ax
   140002197:	mov    WORD PTR [rbp+0x40],ax
   14000219b:	movzx  r8d,WORD PTR [r15+0x30]
   1400021a0:	mov    rdx,QWORD PTR [r15+0x38]
   1400021a4:	call   0x140005fd6
   1400021a9:	mov    rcx,QWORD PTR [rip+0x8428]        # 0x14000a5d8
   1400021b0:	mov    r15d,0xfffffff5
   1400021b6:	mov    edx,r15d
   1400021b9:	mov    r8d,0x272b
   1400021bf:	call   0x140005524
   1400021c4:	mov    rcx,QWORD PTR [rip+0x840d]        # 0x14000a5d8
   1400021cb:	mov    r9,r14
   1400021ce:	mov    r8d,0x272c
   1400021d4:	mov    edx,r15d
   1400021d7:	call   0x140005524
   1400021dc:	mov    rcx,QWORD PTR [rip+0x83f5]        # 0x14000a5d8
   1400021e3:	lea    r9,[rbp+0x20]
   1400021e7:	mov    r8d,0x272d
   1400021ed:	mov    edx,r15d
   1400021f0:	call   0x140005524
   1400021f5:	mov    rcx,QWORD PTR [rip+0x83dc]        # 0x14000a5d8
   1400021fc:	lea    r9,[rbp+0x30]
   140002200:	mov    r8d,0x272e
   140002206:	mov    edx,r15d
   140002209:	call   0x140005524
   14000220e:	lea    r9,[rbp+0x40]
   140002212:	mov    r8d,0x272f
   140002218:	mov    edx,r15d
   14000221b:	mov    rcx,QWORD PTR [rip+0x83b6]        # 0x14000a5d8
   140002222:	call   0x140005524
   140002227:	jmp    0x14000224b
   140002229:	mov    rcx,QWORD PTR [rip+0x83a8]        # 0x14000a5d8
   140002230:	mov    r15d,0xfffffff5
   140002236:	mov    edx,r15d
   140002239:	mov    r8d,0x2730
   14000223f:	call   0x140005524
   140002244:	mov    DWORD PTR [rbp+0xc],0x1
   14000224b:	mov    rcx,QWORD PTR [rsp+0x90]
   140002253:	lea    rax,[rsp+0xa8]
   14000225b:	mov    QWORD PTR [rsp+0x30],rax
   140002260:	mov    r9d,r12d
   140002263:	lea    rax,[rsp+0x40]
   140002268:	mov    r8,rbp
   14000226b:	mov    QWORD PTR [rsp+0x28],rax
   140002270:	mov    edx,r13d
   140002273:	lea    rax,[rsp+0x48]
   140002278:	mov    QWORD PTR [rsp+0x20],rax
   14000227d:	call   0x140004fb0
   140002282:	mov    ebx,eax
   140002284:	test   eax,eax
   140002286:	jns    0x140002296
   140002288:	mov    edx,eax
   14000228a:	mov    ecx,0x2716
   14000228f:	call   0x140001978
   140002294:	jmp    0x1400022c9
   140002296:	mov    edx,DWORD PTR [rsp+0xa8]
   14000229d:	test   edx,edx
   14000229f:	jns    0x1400022b4
   1400022a1:	mov    ecx,0x2717
   1400022a6:	call   0x140001978
   1400022ab:	mov    ebx,DWORD PTR [rsp+0xa8]
   1400022b2:	jmp    0x1400022c9
   1400022b4:	mov    rcx,QWORD PTR [rip+0x831d]        # 0x14000a5d8
   1400022bb:	mov    r8d,0x2731
   1400022c1:	mov    edx,r15d
   1400022c4:	call   0x140005524
   1400022c9:	mov    rcx,rbp
   1400022cc:	call   QWORD PTR [rip+0x4dde]        # 0x1400070b0
   1400022d2:	mov    eax,ebx
   1400022d4:	mov    rbx,QWORD PTR [rsp+0x98]
   1400022dc:	add    rsp,0x50
   1400022e0:	pop    r15
   1400022e2:	pop    r14
   1400022e4:	pop    r13
   1400022e6:	pop    r12
   1400022e8:	pop    rdi
   1400022e9:	pop    rsi
   1400022ea:	pop    rbp
   1400022eb:	ret    
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	int3   
   1400022f1:	int3   
   1400022f2:	int3   
   1400022f3:	int3   
   1400022f4:	rex push rbp
   1400022f6:	push   rbx
   1400022f7:	push   rsi
   1400022f8:	push   rdi
   1400022f9:	push   r14
   1400022fb:	mov    rbp,rsp
   1400022fe:	sub    rsp,0x70
   140002302:	mov    rax,QWORD PTR [rip+0x7cff]        # 0x14000a008
   140002309:	xor    rax,rsp
   14000230c:	mov    QWORD PTR [rbp-0x10],rax
   140002310:	mov    rax,QWORD PTR [r8]
   140002313:	mov    r9d,0xc
   140002319:	and    QWORD PTR [rbp-0x30],0x0
   14000231e:	lea    r8,[rbp-0x20]
   140002322:	mov    QWORD PTR [rbp-0x1c],rax
   140002326:	lea    rax,[rbp-0x28]
   14000232a:	mov    QWORD PTR [rsp+0x30],rax
   14000232f:	lea    rax,[rbp-0x24]
   140002333:	mov    QWORD PTR [rsp+0x28],rax
   140002338:	lea    rax,[rbp-0x30]
   14000233c:	mov    QWORD PTR [rsp+0x20],rax
   140002341:	mov    DWORD PTR [rbp-0x20],0xe
   140002348:	call   0x140004fb0
   14000234d:	mov    edi,eax
   14000234f:	test   eax,eax
   140002351:	jns    0x140002361
   140002353:	mov    edx,eax
   140002355:	mov    ecx,0x271a
   14000235a:	call   0x140001978
   14000235f:	jmp    0x140002375
   140002361:	mov    edx,DWORD PTR [rbp-0x28]
   140002364:	test   edx,edx
   140002366:	jns    0x14000237e
   140002368:	mov    ecx,0x271b
   14000236d:	call   0x140001978
   140002372:	mov    edi,DWORD PTR [rbp-0x28]
   140002375:	mov    rcx,QWORD PTR [rbp-0x30]
   140002379:	jmp    0x1400024a9
   14000237e:	mov    rax,QWORD PTR [rbp-0x30]
   140002382:	mov    r14d,0xfffffff5
   140002388:	mov    rcx,QWORD PTR [rip+0x8249]        # 0x14000a5d8
   14000238f:	mov    r8d,0x2737
   140002395:	mov    edx,r14d
   140002398:	mov    r9d,DWORD PTR [rax+0x4]
   14000239c:	call   0x140005524
   1400023a1:	mov    rcx,QWORD PTR [rbp-0x30]
   1400023a5:	xor    esi,esi
   1400023a7:	cmp    DWORD PTR [rcx+0x4],esi
   1400023aa:	jbe    0x1400024a9
   1400023b0:	lea    rax,[rcx+0x18]
   1400023b4:	mov    r9d,esi
   1400023b7:	add    rcx,0x8
   1400023bb:	lea    rbx,[rsi+rsi*2]
   1400023bf:	shl    rbx,0x5
   1400023c3:	mov    r8d,0x2738
   1400023c9:	add    rcx,rbx
   1400023cc:	add    rax,rbx
   1400023cf:	mov    QWORD PTR [rsp+0x28],rax
   1400023d4:	mov    edx,r14d
   1400023d7:	mov    QWORD PTR [rsp+0x20],rcx
   1400023dc:	mov    rcx,QWORD PTR [rip+0x81f5]        # 0x14000a5d8
   1400023e3:	call   0x140005524
   1400023e8:	mov    rcx,QWORD PTR [rbp-0x30]
   1400023ec:	mov    r8d,0x2739
   1400023f2:	mov    edx,r14d
   1400023f5:	lea    rax,[rcx+0x38]
   1400023f9:	lea    r9,[rcx+0x28]
   1400023fd:	add    rax,rbx
   140002400:	mov    rcx,QWORD PTR [rip+0x81d1]        # 0x14000a5d8
   140002407:	add    r9,rbx
   14000240a:	mov    QWORD PTR [rsp+0x20],rax
   14000240f:	call   0x140005524
   140002414:	mov    rcx,QWORD PTR [rip+0x81bd]        # 0x14000a5d8
   14000241b:	mov    r8d,0x273a
   140002421:	mov    edx,r14d
   140002424:	call   0x140005524
   140002429:	mov    rax,QWORD PTR [rbp-0x30]
   14000242d:	mov    ecx,DWORD PTR [rbx+rax*1+0x60]
   140002431:	call   0x1400017b8
   140002436:	mov    rax,QWORD PTR [rbp-0x30]
   14000243a:	lea    rdx,[rip+0x5ad7]        # 0x140007f18
   140002441:	lea    rcx,[rip+0x5ad4]        # 0x140007f1c
   140002448:	mov    r8d,DWORD PTR [rbx+rax*1+0x64]
   14000244d:	call   0x1400019e8
   140002452:	mov    rdx,QWORD PTR [rbp-0x30]
   140002456:	mov    ecx,0x2734
   14000245b:	mov    rdx,QWORD PTR [rbx+rdx*1+0x48]
   140002460:	call   0x1400016c8
   140002465:	mov    rdx,QWORD PTR [rbp-0x30]
   140002469:	mov    ecx,0x2735
   14000246e:	mov    rdx,QWORD PTR [rbx+rdx*1+0x50]
   140002473:	call   0x1400016c8
   140002478:	mov    rdx,QWORD PTR [rbp-0x30]
   14000247c:	mov    ecx,0x2736
   140002481:	mov    rdx,QWORD PTR [rbx+rdx*1+0x58]
   140002486:	call   0x1400016c8
   14000248b:	lea    rdx,[rip+0x5a82]        # 0x140007f14
   140002492:	mov    ecx,r14d
   140002495:	call   0x14000533c
   14000249a:	mov    rcx,QWORD PTR [rbp-0x30]
   14000249e:	inc    esi
   1400024a0:	cmp    esi,DWORD PTR [rcx+0x4]
   1400024a3:	jb     0x1400023b0
   1400024a9:	test   rcx,rcx
   1400024ac:	je     0x1400024b3
   1400024ae:	call   0x140004da0
   1400024b3:	mov    eax,edi
   1400024b5:	mov    rcx,QWORD PTR [rbp-0x10]
   1400024b9:	xor    rcx,rsp
   1400024bc:	call   0x1400058e0
   1400024c1:	add    rsp,0x70
   1400024c5:	pop    r14
   1400024c7:	pop    rdi
   1400024c8:	pop    rsi
   1400024c9:	pop    rbx
   1400024ca:	pop    rbp
   1400024cb:	ret    
   1400024cc:	int3   
   1400024cd:	int3   
   1400024ce:	int3   
   1400024cf:	int3   
   1400024d0:	int3   
   1400024d1:	int3   
   1400024d2:	int3   
   1400024d3:	int3   
   1400024d4:	rex push rbp
   1400024d6:	push   rbx
   1400024d7:	push   rsi
   1400024d8:	push   rdi
   1400024d9:	push   r14
   1400024db:	mov    rbp,rsp
   1400024de:	sub    rsp,0x70
   1400024e2:	mov    rax,QWORD PTR [rip+0x7b1f]        # 0x14000a008
   1400024e9:	xor    rax,rsp
   1400024ec:	mov    QWORD PTR [rbp-0x10],rax
   1400024f0:	mov    rax,QWORD PTR [r8]
   1400024f3:	mov    r9d,0xc
   1400024f9:	and    QWORD PTR [rbp-0x30],0x0
   1400024fe:	lea    r8,[rbp-0x20]
   140002502:	mov    QWORD PTR [rbp-0x1c],rax
   140002506:	lea    rax,[rbp-0x28]
   14000250a:	mov    QWORD PTR [rsp+0x30],rax
   14000250f:	lea    rax,[rbp-0x24]
   140002513:	mov    QWORD PTR [rsp+0x28],rax
   140002518:	lea    rax,[rbp-0x30]
   14000251c:	mov    QWORD PTR [rsp+0x20],rax
   140002521:	mov    DWORD PTR [rbp-0x20],0x14
   140002528:	call   0x140004fb0
   14000252d:	mov    edi,eax
   14000252f:	test   eax,eax
   140002531:	jns    0x140002566
   140002533:	cmp    eax,0xc000000d
   140002538:	je     0x140002548
   14000253a:	mov    edx,eax
   14000253c:	mov    ecx,0x271a
   140002541:	call   0x140001978
   140002546:	jmp    0x14000257a
   140002548:	mov    rcx,QWORD PTR [rip+0x8089]        # 0x14000a5d8
   14000254f:	mov    edx,0xfffffff5
   140002554:	mov    r8d,0x2742
   14000255a:	mov    edi,0xc00000bb
   14000255f:	call   0x140005524
   140002564:	jmp    0x14000257a
   140002566:	mov    edx,DWORD PTR [rbp-0x28]
   140002569:	test   edx,edx
   14000256b:	jns    0x140002583
   14000256d:	mov    ecx,0x271b
   140002572:	call   0x140001978
   140002577:	mov    edi,DWORD PTR [rbp-0x28]
   14000257a:	mov    rcx,QWORD PTR [rbp-0x30]
   14000257e:	jmp    0x1400026ee
   140002583:	mov    rax,QWORD PTR [rbp-0x30]
   140002587:	mov    esi,0xfffffff5
   14000258c:	mov    rcx,QWORD PTR [rip+0x8045]        # 0x14000a5d8
   140002593:	mov    r8d,0x2737
   140002599:	mov    edx,esi
   14000259b:	mov    r9d,DWORD PTR [rax+0x4]
   14000259f:	call   0x140005524
   1400025a4:	mov    rcx,QWORD PTR [rbp-0x30]
   1400025a8:	xor    r14d,r14d
   1400025ab:	cmp    DWORD PTR [rcx+0x4],r14d
   1400025af:	jbe    0x1400026ee
   1400025b5:	mov    eax,r14d
   1400025b8:	mov    r9d,r14d
   1400025bb:	imul   rbx,rax,0x68
   1400025bf:	lea    rax,[rcx+0x18]
   1400025c3:	mov    r8d,0x2738
   1400025c9:	add    rcx,0x8
   1400025cd:	add    rax,rbx
   1400025d0:	add    rcx,rbx
   1400025d3:	mov    QWORD PTR [rsp+0x28],rax
   1400025d8:	mov    QWORD PTR [rsp+0x20],rcx
   1400025dd:	mov    edx,esi
   1400025df:	mov    rcx,QWORD PTR [rip+0x7ff2]        # 0x14000a5d8
   1400025e6:	call   0x140005524
   1400025eb:	mov    rcx,QWORD PTR [rbp-0x30]
   1400025ef:	mov    r8d,0x2739
   1400025f5:	mov    edx,esi
   1400025f7:	lea    rax,[rcx+0x38]
   1400025fb:	lea    r9,[rcx+0x28]
   1400025ff:	add    rax,rbx
   140002602:	mov    rcx,QWORD PTR [rip+0x7fcf]        # 0x14000a5d8
   140002609:	add    r9,rbx
   14000260c:	mov    QWORD PTR [rsp+0x20],rax
   140002611:	call   0x140005524
   140002616:	mov    rcx,QWORD PTR [rip+0x7fbb]        # 0x14000a5d8
   14000261d:	mov    r8d,0x273a
   140002623:	mov    edx,esi
   140002625:	call   0x140005524
   14000262a:	mov    rax,QWORD PTR [rbp-0x30]
   14000262e:	mov    ecx,DWORD PTR [rbx+rax*1+0x60]
   140002632:	call   0x1400017b8
   140002637:	mov    rax,QWORD PTR [rbp-0x30]
   14000263b:	lea    rdx,[rip+0x5d32]        # 0x140008374
   140002642:	lea    rcx,[rip+0x58d3]        # 0x140007f1c
   140002649:	mov    r8d,DWORD PTR [rbx+rax*1+0x64]
   14000264e:	call   0x1400019e8
   140002653:	mov    rdx,QWORD PTR [rbp-0x30]
   140002657:	mov    ecx,0x2734
   14000265c:	mov    rdx,QWORD PTR [rbx+rdx*1+0x48]
   140002661:	call   0x1400016c8
   140002666:	mov    rdx,QWORD PTR [rbp-0x30]
   14000266a:	mov    ecx,0x2735
   14000266f:	mov    rdx,QWORD PTR [rbx+rdx*1+0x50]
   140002674:	call   0x1400016c8
   140002679:	mov    rdx,QWORD PTR [rbp-0x30]
   14000267d:	mov    ecx,0x2736
   140002682:	mov    rdx,QWORD PTR [rbx+rdx*1+0x58]
   140002687:	call   0x1400016c8
   14000268c:	mov    rcx,QWORD PTR [rip+0x7f45]        # 0x14000a5d8
   140002693:	mov    r8d,0x273b
   140002699:	mov    edx,esi
   14000269b:	call   0x140005524
   1400026a0:	mov    rax,QWORD PTR [rbp-0x30]
   1400026a4:	mov    ecx,DWORD PTR [rbx+rax*1+0x68]
   1400026a8:	call   0x1400017b8
   1400026ad:	mov    rax,QWORD PTR [rbp-0x30]
   1400026b1:	mov    r9d,DWORD PTR [rbx+rax*1+0x6c]
   1400026b6:	test   r9d,r9d
   1400026b9:	je     0x1400026cf
   1400026bb:	mov    rcx,QWORD PTR [rip+0x7f16]        # 0x14000a5d8
   1400026c2:	mov    r8d,0x273c
   1400026c8:	mov    edx,esi
   1400026ca:	call   0x140005524
   1400026cf:	lea    rdx,[rip+0x583e]        # 0x140007f14
   1400026d6:	mov    ecx,esi
   1400026d8:	call   0x14000533c
   1400026dd:	mov    rcx,QWORD PTR [rbp-0x30]
   1400026e1:	inc    r14d
   1400026e4:	cmp    r14d,DWORD PTR [rcx+0x4]
   1400026e8:	jb     0x1400025b5
   1400026ee:	test   rcx,rcx
   1400026f1:	je     0x1400026f8
   1400026f3:	call   0x140004da0
   1400026f8:	mov    eax,edi
   1400026fa:	mov    rcx,QWORD PTR [rbp-0x10]
   1400026fe:	xor    rcx,rsp
   140002701:	call   0x1400058e0
   140002706:	add    rsp,0x70
   14000270a:	pop    r14
   14000270c:	pop    rdi
   14000270d:	pop    rsi
   14000270e:	pop    rbx
   14000270f:	pop    rbp
   140002710:	ret    
   140002711:	int3   
   140002712:	int3   
   140002713:	int3   
   140002714:	int3   
   140002715:	int3   
   140002716:	int3   
   140002717:	int3   
   140002718:	mov    QWORD PTR [rsp+0x20],rbx
   14000271d:	push   rbp
   14000271e:	push   rsi
   14000271f:	push   rdi
   140002720:	push   r12
   140002722:	push   r13
   140002724:	push   r14
   140002726:	push   r15
   140002728:	mov    rbp,rsp
   14000272b:	sub    rsp,0x70
   14000272f:	mov    rax,QWORD PTR [rip+0x78d2]        # 0x14000a008
   140002736:	xor    rax,rsp
   140002739:	mov    QWORD PTR [rbp-0x10],rax
   14000273d:	mov    rax,QWORD PTR [r8]
   140002740:	mov    r9d,0xc
   140002746:	and    QWORD PTR [rbp-0x30],0x0
   14000274b:	lea    r8,[rbp-0x20]
   14000274f:	mov    QWORD PTR [rbp-0x1c],rax
   140002753:	lea    rax,[rbp-0x28]
   140002757:	mov    QWORD PTR [rsp+0x30],rax
   14000275c:	lea    rax,[rbp-0x24]
   140002760:	mov    QWORD PTR [rsp+0x28],rax
   140002765:	lea    rax,[rbp-0x30]
   140002769:	mov    QWORD PTR [rsp+0x20],rax
   14000276e:	mov    DWORD PTR [rbp-0x20],0x19
   140002775:	call   0x140004fb0
   14000277a:	mov    esi,eax
   14000277c:	test   eax,eax
   14000277e:	jns    0x1400027b3
   140002780:	cmp    eax,0xc000000d
   140002785:	je     0x140002795
   140002787:	mov    edx,eax
   140002789:	mov    ecx,0x271a
   14000278e:	call   0x140001978
   140002793:	jmp    0x1400027c7
   140002795:	mov    rcx,QWORD PTR [rip+0x7e3c]        # 0x14000a5d8
   14000279c:	mov    edx,0xfffffff5
   1400027a1:	mov    r8d,0x2743
   1400027a7:	mov    esi,0xc00000bb
   1400027ac:	call   0x140005524
   1400027b1:	jmp    0x1400027c7
   1400027b3:	mov    edx,DWORD PTR [rbp-0x28]
   1400027b6:	test   edx,edx
   1400027b8:	jns    0x1400027d0
   1400027ba:	mov    ecx,0x271b
   1400027bf:	call   0x140001978
   1400027c4:	mov    esi,DWORD PTR [rbp-0x28]
   1400027c7:	mov    rcx,QWORD PTR [rbp-0x30]
   1400027cb:	jmp    0x140002ac2
   1400027d0:	mov    rax,QWORD PTR [rbp-0x30]
   1400027d4:	mov    edi,0xfffffff5
   1400027d9:	mov    rcx,QWORD PTR [rip+0x7df8]        # 0x14000a5d8
   1400027e0:	mov    r8d,0x2737
   1400027e6:	mov    edx,edi
   1400027e8:	mov    r9d,DWORD PTR [rax+0x4]
   1400027ec:	call   0x140005524
   1400027f1:	mov    rcx,QWORD PTR [rbp-0x30]
   1400027f5:	xor    r14d,r14d
   1400027f8:	cmp    DWORD PTR [rcx+0x4],r14d
   1400027fc:	jbe    0x140002ac2
   140002802:	lea    r13,[rip+0x5b6b]        # 0x140008374
   140002809:	lea    r12,[rip+0x55f8]        # 0x140007e08
   140002810:	lea    rax,[rcx+0x18]
   140002814:	mov    r15d,r14d
   140002817:	add    rcx,0x8
   14000281b:	shl    r15,0x7
   14000281f:	add    rcx,r15
   140002822:	add    rax,r15
   140002825:	mov    QWORD PTR [rsp+0x28],rax
   14000282a:	mov    r9d,r14d
   14000282d:	mov    QWORD PTR [rsp+0x20],rcx
   140002832:	mov    r8d,0x2738
   140002838:	mov    rcx,QWORD PTR [rip+0x7d99]        # 0x14000a5d8
   14000283f:	mov    edx,edi
   140002841:	call   0x140005524
   140002846:	mov    rcx,QWORD PTR [rbp-0x30]
   14000284a:	mov    r8d,0x2739
   140002850:	mov    edx,edi
   140002852:	lea    rax,[rcx+0x38]
   140002856:	lea    r9,[rcx+0x28]
   14000285a:	add    rax,r15
   14000285d:	mov    rcx,QWORD PTR [rip+0x7d74]        # 0x14000a5d8
   140002864:	add    r9,r15
   140002867:	mov    QWORD PTR [rsp+0x20],rax
   14000286c:	call   0x140005524
   140002871:	mov    rcx,QWORD PTR [rip+0x7d60]        # 0x14000a5d8
   140002878:	mov    r8d,0x273a
   14000287e:	mov    edx,edi
   140002880:	call   0x140005524
   140002885:	mov    rax,QWORD PTR [rbp-0x30]
   140002889:	mov    ecx,DWORD PTR [r15+rax*1+0x60]
   14000288e:	call   0x1400017b8
   140002893:	mov    rax,QWORD PTR [rbp-0x30]
   140002897:	lea    rcx,[rip+0x567e]        # 0x140007f1c
   14000289e:	mov    rdx,r13
   1400028a1:	mov    r8d,DWORD PTR [r15+rax*1+0x64]
   1400028a6:	call   0x1400019e8
   1400028ab:	mov    rdx,QWORD PTR [rbp-0x30]
   1400028af:	mov    ecx,0x2734
   1400028b4:	mov    rdx,QWORD PTR [r15+rdx*1+0x48]
   1400028b9:	call   0x1400016c8
   1400028be:	mov    rdx,QWORD PTR [rbp-0x30]
   1400028c2:	mov    ecx,0x2735
   1400028c7:	mov    rdx,QWORD PTR [r15+rdx*1+0x50]
   1400028cc:	call   0x1400016c8
   1400028d1:	mov    rdx,QWORD PTR [rbp-0x30]
   1400028d5:	mov    ecx,0x2736
   1400028da:	mov    rdx,QWORD PTR [r15+rdx*1+0x58]
   1400028df:	call   0x1400016c8
   1400028e4:	mov    rcx,QWORD PTR [rip+0x7ced]        # 0x14000a5d8
   1400028eb:	mov    r8d,0x273b
   1400028f1:	mov    edx,edi
   1400028f3:	call   0x140005524
   1400028f8:	mov    rax,QWORD PTR [rbp-0x30]
   1400028fc:	mov    ecx,DWORD PTR [r15+rax*1+0x68]
   140002901:	call   0x1400017b8
   140002906:	mov    rax,QWORD PTR [rbp-0x30]
   14000290a:	mov    r9d,DWORD PTR [r15+rax*1+0x6c]
   14000290f:	test   r9d,r9d
   140002912:	je     0x14000292c
   140002914:	mov    rcx,QWORD PTR [rip+0x7cbd]        # 0x14000a5d8
   14000291b:	mov    r8d,0x273c
   140002921:	mov    edx,edi
   140002923:	call   0x140005524
   140002928:	mov    rax,QWORD PTR [rbp-0x30]
   14000292c:	mov    ebx,DWORD PTR [r15+rax*1+0x70]
   140002931:	lea    r9,[rip+0x55e4]        # 0x140007f1c
   140002938:	mov    rcx,QWORD PTR [rip+0x7c99]        # 0x14000a5d8
   14000293f:	mov    r8d,0x2744
   140002945:	mov    DWORD PTR [rsp+0x28],ebx
   140002949:	mov    edx,edi
   14000294b:	mov    QWORD PTR [rsp+0x20],r13
   140002950:	call   0x140005524
   140002955:	test   ebx,ebx
   140002957:	je     0x140002a84
   14000295d:	mov    rcx,QWORD PTR [rip+0x7c74]        # 0x14000a5d8
   140002964:	mov    r8d,0x2746
   14000296a:	mov    edx,edi
   14000296c:	call   0x140005524
   140002971:	test   bl,0x1
   140002974:	je     0x14000298a
   140002976:	lea    r8,[rip+0x547b]        # 0x140007df8
   14000297d:	mov    rdx,r12
   140002980:	mov    ecx,edi
   140002982:	call   0x14000533c
   140002987:	and    ebx,0xfffffffe
   14000298a:	test   bl,0x2
   14000298d:	je     0x1400029a3
   14000298f:	lea    r8,[rip+0x5482]        # 0x140007e18
   140002996:	mov    rdx,r12
   140002999:	mov    ecx,edi
   14000299b:	call   0x14000533c
   1400029a0:	and    ebx,0xfffffffd
   1400029a3:	test   bl,0x4
   1400029a6:	je     0x1400029bc
   1400029a8:	lea    r8,[rip+0x5481]        # 0x140007e30
   1400029af:	mov    rdx,r12
   1400029b2:	mov    ecx,edi
   1400029b4:	call   0x14000533c
   1400029b9:	and    ebx,0xfffffffb
   1400029bc:	test   bl,0x8
   1400029bf:	je     0x1400029d5
   1400029c1:	lea    r8,[rip+0x5470]        # 0x140007e38
   1400029c8:	mov    rdx,r12
   1400029cb:	mov    ecx,edi
   1400029cd:	call   0x14000533c
   1400029d2:	and    ebx,0xfffffff7
   1400029d5:	test   bl,0x10
   1400029d8:	je     0x1400029ee
   1400029da:	lea    r8,[rip+0x545f]        # 0x140007e40
   1400029e1:	mov    rdx,r12
   1400029e4:	mov    ecx,edi
   1400029e6:	call   0x14000533c
   1400029eb:	and    ebx,0xffffffef
   1400029ee:	test   bl,0x20
   1400029f1:	je     0x140002a07
   1400029f3:	lea    r8,[rip+0x545e]        # 0x140007e58
   1400029fa:	mov    rdx,r12
   1400029fd:	mov    ecx,edi
   1400029ff:	call   0x14000533c
   140002a04:	and    ebx,0xffffffdf
   140002a07:	test   bl,0x40
   140002a0a:	je     0x140002a20
   140002a0c:	lea    r8,[rip+0x5455]        # 0x140007e68
   140002a13:	mov    rdx,r12
   140002a16:	mov    ecx,edi
   140002a18:	call   0x14000533c
   140002a1d:	and    ebx,0xffffffbf
   140002a20:	test   bl,bl
   140002a22:	jns    0x140002a39
   140002a24:	lea    r8,[rip+0x544d]        # 0x140007e78
   140002a2b:	mov    rdx,r12
   140002a2e:	mov    ecx,edi
   140002a30:	call   0x14000533c
   140002a35:	btr    ebx,0x7
   140002a39:	bt     ebx,0x8
   140002a3d:	jae    0x140002a54
   140002a3f:	lea    r8,[rip+0x544a]        # 0x140007e90
   140002a46:	mov    rdx,r12
   140002a49:	mov    ecx,edi
   140002a4b:	call   0x14000533c
   140002a50:	btr    ebx,0x8
   140002a54:	bt     ebx,0x9
   140002a58:	jae    0x140002a6f
   140002a5a:	lea    r8,[rip+0x5447]        # 0x140007ea8
   140002a61:	mov    rdx,r12
   140002a64:	mov    ecx,edi
   140002a66:	call   0x14000533c
   140002a6b:	btr    ebx,0x9
   140002a6f:	test   ebx,ebx
   140002a71:	je     0x140002a84
   140002a73:	mov    r8d,ebx
   140002a76:	lea    rdx,[rip+0x536b]        # 0x140007de8
   140002a7d:	mov    ecx,edi
   140002a7f:	call   0x14000533c
   140002a84:	lea    rdx,[rip+0x5365]        # 0x140007df0
   140002a8b:	mov    ecx,edi
   140002a8d:	call   0x14000533c
   140002a92:	mov    r9,QWORD PTR [rbp-0x30]
   140002a96:	mov    r8d,0x2745
   140002a9c:	mov    rcx,QWORD PTR [rip+0x7b35]        # 0x14000a5d8
   140002aa3:	add    r9,0x78
   140002aa7:	add    r9,r15
   140002aaa:	mov    edx,edi
   140002aac:	call   0x140005524
   140002ab1:	mov    rcx,QWORD PTR [rbp-0x30]
   140002ab5:	inc    r14d
   140002ab8:	cmp    r14d,DWORD PTR [rcx+0x4]
   140002abc:	jb     0x140002810
   140002ac2:	test   rcx,rcx
   140002ac5:	je     0x140002acc
   140002ac7:	call   0x140004da0
   140002acc:	mov    eax,esi
   140002ace:	mov    rcx,QWORD PTR [rbp-0x10]
   140002ad2:	xor    rcx,rsp
   140002ad5:	call   0x1400058e0
   140002ada:	mov    rbx,QWORD PTR [rsp+0xc8]
   140002ae2:	add    rsp,0x70
   140002ae6:	pop    r15
   140002ae8:	pop    r14
   140002aea:	pop    r13
   140002aec:	pop    r12
   140002aee:	pop    rdi
   140002aef:	pop    rsi
   140002af0:	pop    rbp
   140002af1:	ret    
   140002af2:	int3   
   140002af3:	int3   
   140002af4:	int3   
   140002af5:	int3   
   140002af6:	int3   
   140002af7:	int3   
   140002af8:	mov    QWORD PTR [rsp+0x8],rbx
   140002afd:	push   rdi
   140002afe:	sub    rsp,0x50
   140002b02:	and    QWORD PTR [rsp+0x68],0x0
   140002b08:	lea    rdx,[rsp+0x68]
   140002b0d:	mov    rdi,rcx
   140002b10:	call   0x140004b58
   140002b15:	mov    ebx,eax
   140002b17:	test   eax,eax
   140002b19:	jns    0x140002b3b
   140002b1b:	mov    ecx,eax
   140002b1d:	call   QWORD PTR [rip+0x44e5]        # 0x140007008
   140002b23:	mov    r8d,DWORD PTR [rdi]
   140002b26:	mov    ecx,0x2748
   140002b2b:	mov    edx,DWORD PTR [rdi+0x4]
   140002b2e:	mov    r9d,eax
   140002b31:	call   0x1400019ac
   140002b36:	jmp    0x140002bd9
   140002b3b:	mov    rax,QWORD PTR [rsp+0x68]
   140002b40:	mov    ecx,DWORD PTR [rax+0x40]
   140002b43:	call   0x1400018d0
   140002b48:	mov    rcx,QWORD PTR [rip+0x7a89]        # 0x14000a5d8
   140002b4f:	mov    edx,0xfffffff5
   140002b54:	mov    r8d,0x2747
   140002b5a:	mov    rdi,rax
   140002b5d:	call   0x140005524
   140002b62:	mov    r8,QWORD PTR [rsp+0x68]
   140002b67:	test   rdi,rdi
   140002b6a:	je     0x140002b95
   140002b6c:	mov    QWORD PTR [rsp+0x40],rdi
   140002b71:	lea    rdx,[r8+0x30]
   140002b75:	mov    QWORD PTR [rsp+0x38],rdx
   140002b7a:	lea    r9,[r8+0x10]
   140002b7e:	lea    r10,[r8+0x20]
   140002b82:	mov    QWORD PTR [rsp+0x30],r9
   140002b87:	mov    QWORD PTR [rsp+0x28],r10
   140002b8c:	lea    rdx,[rip+0x538d]        # 0x140007f20
   140002b93:	jmp    0x140002bbf
   140002b95:	mov    eax,DWORD PTR [r8+0x40]
   140002b99:	lea    rdx,[r8+0x10]
   140002b9d:	mov    DWORD PTR [rsp+0x40],eax
   140002ba1:	lea    rcx,[r8+0x30]
   140002ba5:	mov    QWORD PTR [rsp+0x38],rcx
   140002baa:	lea    r9,[r8+0x20]
   140002bae:	mov    QWORD PTR [rsp+0x30],rdx
   140002bb3:	lea    rdx,[rip+0x53a6]        # 0x140007f60
   140002bba:	mov    QWORD PTR [rsp+0x28],r9
   140002bbf:	mov    eax,DWORD PTR [r8+0x4]
   140002bc3:	mov    ecx,0xfffffff5
   140002bc8:	mov    r9d,DWORD PTR [r8+0x8]
   140002bcc:	mov    r8d,DWORD PTR [r8+0x44]
   140002bd0:	mov    DWORD PTR [rsp+0x20],eax
   140002bd4:	call   0x14000533c
   140002bd9:	mov    rcx,QWORD PTR [rsp+0x68]
   140002bde:	test   rcx,rcx
   140002be1:	je     0x140002be8
   140002be3:	call   0x140004da0
   140002be8:	mov    eax,ebx
   140002bea:	mov    rbx,QWORD PTR [rsp+0x60]
   140002bef:	add    rsp,0x50
   140002bf3:	pop    rdi
   140002bf4:	ret    
   140002bf5:	int3   
   140002bf6:	int3   
   140002bf7:	int3   
   140002bf8:	int3   
   140002bf9:	int3   
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	mov    QWORD PTR [rsp+0x20],rbx
   140002c01:	push   rbp
   140002c02:	push   rsi
   140002c03:	push   rdi
   140002c04:	push   r12
   140002c06:	push   r13
   140002c08:	push   r14
   140002c0a:	push   r15
   140002c0c:	mov    rbp,rsp
   140002c0f:	sub    rsp,0x80
   140002c16:	mov    rax,QWORD PTR [rip+0x73eb]        # 0x14000a008
   140002c1d:	xor    rax,rsp
   140002c20:	mov    QWORD PTR [rbp-0x8],rax
   140002c24:	xor    eax,eax
   140002c26:	mov    DWORD PTR [rbp-0x18],0x21
   140002c2d:	mov    QWORD PTR [rbp-0x2e],rax
   140002c31:	xor    r13d,r13d
   140002c34:	mov    DWORD PTR [rbp-0x26],eax
   140002c37:	mov    WORD PTR [rbp-0x22],ax
   140002c3b:	mov    rax,QWORD PTR [r8]
   140002c3e:	lea    r8,[rbp-0x18]
   140002c42:	mov    QWORD PTR [rbp-0x10],rax
   140002c46:	lea    r9d,[r13+0x10]
   140002c4a:	lea    rax,[rbp-0x38]
   140002c4e:	mov    QWORD PTR [rbp-0x40],r13
   140002c52:	mov    QWORD PTR [rsp+0x30],rax
   140002c57:	lea    rax,[rbp-0x20]
   140002c5b:	mov    QWORD PTR [rsp+0x28],rax
   140002c60:	lea    rax,[rbp-0x40]
   140002c64:	mov    QWORD PTR [rsp+0x20],rax
   140002c69:	mov    WORD PTR [rbp-0x30],r13w
   140002c6e:	call   0x140004fb0
   140002c73:	mov    DWORD PTR [rbp-0x34],eax
   140002c76:	mov    edi,eax
   140002c78:	test   eax,eax
   140002c7a:	jns    0x140002c8a
   140002c7c:	mov    edx,eax
   140002c7e:	mov    ecx,0x271a
   140002c83:	call   0x140001978
   140002c88:	jmp    0x140002c9e
   140002c8a:	mov    edx,DWORD PTR [rbp-0x38]
   140002c8d:	test   edx,edx
   140002c8f:	jns    0x140002ca7
   140002c91:	mov    ecx,0x271b
   140002c96:	call   0x140001978
   140002c9b:	mov    edi,DWORD PTR [rbp-0x38]
   140002c9e:	mov    rcx,QWORD PTR [rbp-0x40]
   140002ca2:	jmp    0x140002ed2
   140002ca7:	mov    rax,QWORD PTR [rbp-0x40]
   140002cab:	mov    r12d,0xfffffff5
   140002cb1:	mov    rcx,QWORD PTR [rip+0x7920]        # 0x14000a5d8
   140002cb8:	mov    r8d,0x2737
   140002cbe:	mov    edx,r12d
   140002cc1:	mov    r9d,DWORD PTR [rax+0x4]
   140002cc5:	call   0x140005524
   140002cca:	mov    rcx,QWORD PTR [rbp-0x40]
   140002cce:	mov    esi,r13d
   140002cd1:	cmp    DWORD PTR [rcx+0x4],r13d
   140002cd5:	jbe    0x140002ed2
   140002cdb:	lea    r15,[rip+0x5692]        # 0x140008374
   140002ce2:	mov    rcx,QWORD PTR [rcx+0x8]
   140002ce6:	mov    r9d,esi
   140002ce9:	mov    ebx,esi
   140002ceb:	mov    r8d,0x2738
   140002cf1:	shl    rbx,0x6
   140002cf5:	mov    edx,r12d
   140002cf8:	add    rcx,rbx
   140002cfb:	lea    rax,[rcx+0x10]
   140002cff:	mov    QWORD PTR [rsp+0x28],rax
   140002d04:	mov    QWORD PTR [rsp+0x20],rcx
   140002d09:	mov    rcx,QWORD PTR [rip+0x78c8]        # 0x14000a5d8
   140002d10:	call   0x140005524
   140002d15:	mov    rax,QWORD PTR [rbp-0x40]
   140002d19:	lea    r9,[rip+0x51fc]        # 0x140007f1c
   140002d20:	mov    r8d,0x2744
   140002d26:	mov    edx,r12d
   140002d29:	mov    rcx,QWORD PTR [rax+0x8]
   140002d2d:	mov    r14d,DWORD PTR [rcx+rbx*1+0x20]
   140002d32:	mov    rcx,QWORD PTR [rip+0x789f]        # 0x14000a5d8
   140002d39:	mov    DWORD PTR [rsp+0x28],r14d
   140002d3e:	mov    QWORD PTR [rsp+0x20],r15
   140002d43:	call   0x140005524
   140002d48:	test   r14d,r14d
   140002d4b:	jne    0x140002d5e
   140002d4d:	lea    rdx,[rip+0x509c]        # 0x140007df0
   140002d54:	mov    ecx,r12d
   140002d57:	call   0x14000533c
   140002d5c:	jmp    0x140002d66
   140002d5e:	mov    ecx,r14d
   140002d61:	call   0x140001bf0
   140002d66:	mov    rax,QWORD PTR [rbp-0x40]
   140002d6a:	mov    r8d,0x2760
   140002d70:	mov    edx,r12d
   140002d73:	mov    rcx,QWORD PTR [rax+0x8]
   140002d77:	mov    r9d,DWORD PTR [rcx+rbx*1+0x24]
   140002d7c:	mov    rcx,QWORD PTR [rip+0x7855]        # 0x14000a5d8
   140002d83:	call   0x140005524
   140002d88:	mov    rax,QWORD PTR [rbp-0x40]
   140002d8c:	mov    ecx,0x2735
   140002d91:	mov    rdx,QWORD PTR [rax+0x8]
   140002d95:	mov    rdx,QWORD PTR [rdx+rbx*1+0x28]
   140002d9a:	call   0x1400016c8
   140002d9f:	mov    rcx,QWORD PTR [rbp-0x40]
   140002da3:	mov    r14d,r13d
   140002da6:	mov    rax,QWORD PTR [rcx+0x8]
   140002daa:	cmp    DWORD PTR [rax+rbx*1+0x30],r13d
   140002daf:	jbe    0x140002ec4
   140002db5:	lea    rdi,[rip+0x55b8]        # 0x140008374
   140002dbc:	lea    rdx,[rip+0x502d]        # 0x140007df0
   140002dc3:	mov    ecx,r12d
   140002dc6:	call   0x14000533c
   140002dcb:	mov    rax,QWORD PTR [rbp-0x40]
   140002dcf:	mov    r8d,0x2739
   140002dd5:	mov    r15d,r14d
   140002dd8:	mov    edx,r12d
   140002ddb:	shl    r15,0x5
   140002ddf:	mov    rcx,QWORD PTR [rax+0x8]
   140002de3:	lea    rax,[rbp-0x30]
   140002de7:	mov    QWORD PTR [rsp+0x20],rax
   140002dec:	mov    r9,QWORD PTR [rcx+rbx*1+0x38]
   140002df1:	mov    rcx,QWORD PTR [rip+0x77e0]        # 0x14000a5d8
   140002df8:	add    r9,r15
   140002dfb:	call   0x140005524
   140002e00:	mov    rax,QWORD PTR [rbp-0x40]
   140002e04:	lea    r9,[rip+0x5111]        # 0x140007f1c
   140002e0b:	mov    edx,0xfffffff5
   140002e10:	mov    r8d,0x2744
   140002e16:	mov    rcx,QWORD PTR [rax+0x8]
   140002e1a:	mov    rax,QWORD PTR [rcx+rbx*1+0x38]
   140002e1f:	mov    rcx,QWORD PTR [rip+0x77b2]        # 0x14000a5d8
   140002e26:	mov    r12d,DWORD PTR [rax+r15*1+0x10]
   140002e2b:	mov    DWORD PTR [rsp+0x28],r12d
   140002e30:	mov    QWORD PTR [rsp+0x20],rdi
   140002e35:	call   0x140005524
   140002e3a:	test   r12d,r12d
   140002e3d:	jne    0x140002e56
   140002e3f:	mov    r12d,0xfffffff5
   140002e45:	lea    rdx,[rip+0x4fa4]        # 0x140007df0
   140002e4c:	mov    ecx,r12d
   140002e4f:	call   0x14000533c
   140002e54:	jmp    0x140002e64
   140002e56:	mov    ecx,r12d
   140002e59:	call   0x140001bf0
   140002e5e:	mov    r12d,0xfffffff5
   140002e64:	mov    rax,QWORD PTR [rbp-0x40]
   140002e68:	mov    r8d,0x2760
   140002e6e:	mov    edx,r12d
   140002e71:	mov    rcx,QWORD PTR [rax+0x8]
   140002e75:	mov    rax,QWORD PTR [rcx+rbx*1+0x38]
   140002e7a:	mov    rcx,QWORD PTR [rip+0x7757]        # 0x14000a5d8
   140002e81:	mov    r9d,DWORD PTR [rax+r15*1+0x14]
   140002e86:	call   0x140005524
   140002e8b:	mov    rax,QWORD PTR [rbp-0x40]
   140002e8f:	mov    rcx,QWORD PTR [rax+0x8]
   140002e93:	mov    rdx,QWORD PTR [rcx+rbx*1+0x38]
   140002e98:	mov    ecx,0x2735
   140002e9d:	mov    rdx,QWORD PTR [rdx+r15*1+0x18]
   140002ea2:	call   0x1400016c8
   140002ea7:	mov    rcx,QWORD PTR [rbp-0x40]
   140002eab:	inc    r14d
   140002eae:	mov    rax,QWORD PTR [rcx+0x8]
   140002eb2:	cmp    r14d,DWORD PTR [rax+rbx*1+0x30]
   140002eb7:	jb     0x140002dbc
   140002ebd:	lea    r15,[rip+0x54b0]        # 0x140008374
   140002ec4:	inc    esi
   140002ec6:	cmp    esi,DWORD PTR [rcx+0x4]
   140002ec9:	jb     0x140002ce2
   140002ecf:	mov    edi,DWORD PTR [rbp-0x34]
   140002ed2:	test   rcx,rcx
   140002ed5:	je     0x140002edc
   140002ed7:	call   0x140004da0
   140002edc:	mov    eax,edi
   140002ede:	mov    rcx,QWORD PTR [rbp-0x8]
   140002ee2:	xor    rcx,rsp
   140002ee5:	call   0x1400058e0
   140002eea:	mov    rbx,QWORD PTR [rsp+0xd8]
   140002ef2:	add    rsp,0x80
   140002ef9:	pop    r15
   140002efb:	pop    r14
   140002efd:	pop    r13
   140002eff:	pop    r12
   140002f01:	pop    rdi
   140002f02:	pop    rsi
   140002f03:	pop    rbp
   140002f04:	ret    
   140002f05:	int3   
   140002f06:	int3   
   140002f07:	int3   
   140002f08:	int3   
   140002f09:	int3   
   140002f0a:	int3   
   140002f0b:	int3   
   140002f0c:	mov    QWORD PTR [rsp+0x8],rbx
   140002f11:	mov    QWORD PTR [rsp+0x10],rsi
   140002f16:	mov    QWORD PTR [rsp+0x18],rdi
   140002f1b:	push   rbp
   140002f1c:	push   r12
   140002f1e:	push   r13
   140002f20:	push   r14
   140002f22:	push   r15
   140002f24:	mov    rbp,rsp
   140002f27:	sub    rsp,0x60
   140002f2b:	xor    esi,esi
   140002f2d:	xor    eax,eax
   140002f2f:	mov    WORD PTR [rbp-0x10],si
   140002f33:	mov    r14,r9
   140002f36:	mov    QWORD PTR [rbp-0xe],rax
   140002f3a:	mov    r15,r8
   140002f3d:	mov    DWORD PTR [rbp-0x6],eax
   140002f40:	mov    r12d,edx
   140002f43:	mov    WORD PTR [rbp-0x2],ax
   140002f47:	mov    r13,rcx
   140002f4a:	mov    QWORD PTR [rbp-0x18],rsi
   140002f4e:	mov    DWORD PTR [rbp-0x20],esi
   140002f51:	test   r9,r9
   140002f54:	jne    0x140002f6c
   140002f56:	mov    ebx,0xc000000d
   140002f5b:	mov    edx,ebx
   140002f5d:	mov    ecx,0x274a
   140002f62:	call   0x140001978
   140002f67:	jmp    0x140003063
   140002f6c:	mov    rdx,r9
   140002f6f:	lea    rcx,[rbp-0x10]
   140002f73:	call   QWORD PTR [rip+0x4417]        # 0x140007390
   140002f79:	mov    ebx,eax
   140002f7b:	test   eax,eax
   140002f7d:	jns    0x140002f83
   140002f7f:	mov    edx,eax
   140002f81:	jmp    0x140002f5d
   140002f83:	movzx  esi,WORD PTR [rbp-0xe]
   140002f87:	mov    ecx,0x40
   140002f8c:	add    esi,ecx
   140002f8e:	mov    edx,esi
   140002f90:	call   QWORD PTR [rip+0x410a]        # 0x1400070a0
   140002f96:	mov    rdi,rax
   140002f99:	test   rax,rax
   140002f9c:	jne    0x140002fa8
   140002f9e:	mov    ebx,0xc0000017
   140002fa3:	jmp    0x140003063
   140002fa8:	mov    DWORD PTR [rax],0x8
   140002fae:	lea    rbx,[rdi+0x40]
   140002fb2:	mov    rax,QWORD PTR [r15]
   140002fb5:	mov    rcx,rbx
   140002fb8:	mov    QWORD PTR [rdi+0x4],rax
   140002fbc:	movzx  r8d,WORD PTR [rbp-0xe]
   140002fc1:	mov    rdx,QWORD PTR [rbp-0x8]
   140002fc5:	call   0x140005fd6
   140002fca:	mov    QWORD PTR [rdi+0x18],rbx
   140002fce:	mov    r9d,esi
   140002fd1:	movzx  eax,WORD PTR [rbp-0x10]
   140002fd5:	mov    r8,rdi
   140002fd8:	mov    WORD PTR [rdi+0x10],ax
   140002fdc:	mov    edx,r12d
   140002fdf:	movzx  eax,WORD PTR [rbp-0xe]
   140002fe3:	mov    rcx,r13
   140002fe6:	mov    WORD PTR [rdi+0x12],ax
   140002fea:	mov    eax,DWORD PTR [rbp+0x50]
   140002fed:	mov    DWORD PTR [rdi+0x20],eax
   140002ff0:	mov    eax,DWORD PTR [rbp+0x58]
   140002ff3:	mov    DWORD PTR [rdi+0x24],eax
   140002ff6:	lea    rax,[rbp+0x48]
   140002ffa:	mov    QWORD PTR [rsp+0x30],rax
   140002fff:	lea    rax,[rbp-0x20]
   140003003:	mov    QWORD PTR [rsp+0x28],rax
   140003008:	lea    rax,[rbp-0x18]
   14000300c:	mov    QWORD PTR [rsp+0x20],rax
   140003011:	call   0x140004fb0
   140003016:	mov    ebx,eax
   140003018:	test   eax,eax
   14000301a:	jns    0x14000302a
   14000301c:	mov    edx,eax
   14000301e:	mov    ecx,0x274b
   140003023:	call   0x140001978
   140003028:	jmp    0x14000305a
   14000302a:	mov    edx,DWORD PTR [rbp+0x48]
   14000302d:	test   edx,edx
   14000302f:	jns    0x140003040
   140003031:	mov    ecx,0x274c
   140003036:	call   0x140001978
   14000303b:	mov    ebx,DWORD PTR [rbp+0x48]
   14000303e:	jmp    0x14000305a
   140003040:	mov    rcx,QWORD PTR [rip+0x7591]        # 0x14000a5d8
   140003047:	mov    r9,r14
   14000304a:	mov    edx,0xfffffff5
   14000304f:	mov    r8d,0x274d
   140003055:	call   0x140005524
   14000305a:	mov    rcx,rdi
   14000305d:	call   QWORD PTR [rip+0x404d]        # 0x1400070b0
   140003063:	mov    rcx,QWORD PTR [rbp-0x18]
   140003067:	test   rcx,rcx
   14000306a:	je     0x140003071
   14000306c:	call   0x140004da0
   140003071:	lea    r11,[rsp+0x60]
   140003076:	mov    eax,ebx
   140003078:	mov    rbx,QWORD PTR [r11+0x30]
   14000307c:	mov    rsi,QWORD PTR [r11+0x38]
   140003080:	mov    rdi,QWORD PTR [r11+0x40]
   140003084:	mov    rsp,r11
   140003087:	pop    r15
   140003089:	pop    r14
   14000308b:	pop    r13
   14000308d:	pop    r12
   14000308f:	pop    rbp
   140003090:	ret    
   140003091:	int3   
   140003092:	int3   
   140003093:	int3   
   140003094:	int3   
   140003095:	int3   
   140003096:	int3   
   140003097:	int3   
   140003098:	rex push rbp
   14000309a:	push   rbx
   14000309b:	push   rsi
   14000309c:	push   rdi
   14000309d:	push   r12
   14000309f:	push   r13
   1400030a1:	push   r14
   1400030a3:	push   r15
   1400030a5:	lea    rbp,[rsp-0x28]
   1400030aa:	sub    rsp,0x128
   1400030b1:	mov    rax,QWORD PTR [rip+0x6f50]        # 0x14000a008
   1400030b8:	xor    rax,rsp
   1400030bb:	mov    QWORD PTR [rbp+0x10],rax
   1400030bf:	xor    eax,eax
   1400030c1:	xor    r13d,r13d
   1400030c4:	mov    rsi,r9
   1400030c7:	mov    QWORD PTR [rsp+0x5a],rax
   1400030cc:	mov    rbx,r8
   1400030cf:	mov    DWORD PTR [rsp+0x62],eax
   1400030d3:	mov    WORD PTR [rsp+0x66],ax
   1400030d8:	mov    r12d,edx
   1400030db:	mov    QWORD PTR [rsp+0x6a],rax
   1400030e0:	mov    r15,rcx
   1400030e3:	mov    DWORD PTR [rsp+0x72],eax
   1400030e7:	xor    r9d,r9d
   1400030ea:	mov    WORD PTR [rsp+0x76],ax
   1400030ef:	xor    r8d,r8d
   1400030f2:	lea    rax,[rsp+0x78]
   1400030f7:	mov    QWORD PTR [rsp+0x78],r13
   1400030fc:	mov    QWORD PTR [rsp+0x28],rax
   140003101:	mov    rdx,rbx
   140003104:	mov    rcx,rsi
   140003107:	mov    DWORD PTR [rsp+0x20],0x40000010
   14000310f:	mov    WORD PTR [rsp+0x58],r13w
   140003115:	mov    WORD PTR [rsp+0x68],r13w
   14000311b:	mov    QWORD PTR [rsp+0x48],r13
   140003120:	mov    DWORD PTR [rsp+0x50],r13d
   140003125:	call   QWORD PTR [rip+0x411d]        # 0x140007248
   14000312b:	test   eax,eax
   14000312d:	je     0x14000314e
   14000312f:	movzx  ebx,ax
   140003132:	mov    ecx,0x275f
   140003137:	or     ebx,0x80070000
   14000313d:	test   eax,eax
   14000313f:	cmovle ebx,eax
   140003142:	mov    edx,ebx
   140003144:	call   0x140001978
   140003149:	jmp    0x140003349
   14000314e:	mov    rdx,rbx
   140003151:	lea    rcx,[rsp+0x58]
   140003156:	call   QWORD PTR [rip+0x41f4]        # 0x140007350
   14000315c:	mov    rdx,rsi
   14000315f:	lea    rcx,[rsp+0x68]
   140003164:	call   QWORD PTR [rip+0x41e6]        # 0x140007350
   14000316a:	movzx  ecx,WORD PTR [rsp+0x6a]
   14000316f:	movzx  r14d,WORD PTR [rsp+0x5a]
   140003175:	add    ecx,0x30
   140003178:	add    r14d,ecx
   14000317b:	mov    ecx,0x40
   140003180:	mov    edx,r14d
   140003183:	call   QWORD PTR [rip+0x3f17]        # 0x1400070a0
   140003189:	mov    rdi,rax
   14000318c:	test   rax,rax
   14000318f:	jne    0x14000319b
   140003191:	mov    ebx,0xc0000017
   140003196:	jmp    0x140003349
   14000319b:	mov    DWORD PTR [rax],0x1b
   1400031a1:	lea    rbx,[rax+0x30]
   1400031a5:	movzx  r8d,WORD PTR [rsp+0x5a]
   1400031ab:	mov    rcx,rbx
   1400031ae:	mov    rdx,QWORD PTR [rsp+0x60]
   1400031b3:	call   0x140005fd6
   1400031b8:	mov    QWORD PTR [rdi+0x10],rbx
   1400031bc:	movzx  eax,WORD PTR [rsp+0x58]
   1400031c1:	mov    WORD PTR [rdi+0x8],ax
   1400031c5:	movzx  eax,WORD PTR [rsp+0x5a]
   1400031ca:	mov    WORD PTR [rdi+0xa],ax
   1400031ce:	movzx  eax,WORD PTR [rsp+0x5a]
   1400031d3:	movzx  r8d,WORD PTR [rsp+0x6a]
   1400031d9:	add    rbx,rax
   1400031dc:	mov    rdx,QWORD PTR [rsp+0x70]
   1400031e1:	mov    rcx,rbx
   1400031e4:	call   0x140005fd6
   1400031e9:	mov    QWORD PTR [rdi+0x20],rbx
   1400031ed:	lea    rcx,[rbp-0x6e]
   1400031f1:	movzx  eax,WORD PTR [rsp+0x68]
   1400031f6:	xor    ebx,ebx
   1400031f8:	mov    WORD PTR [rdi+0x18],ax
   1400031fc:	xor    edx,edx
   1400031fe:	movzx  eax,WORD PTR [rsp+0x6a]
   140003203:	mov    WORD PTR [rdi+0x1a],ax
   140003207:	lea    r8d,[rbx+0x7e]
   14000320b:	mov    WORD PTR [rbp-0x70],bx
   14000320f:	call   0x140005fe2
   140003214:	lea    r9,[rsp+0x40]
   140003219:	mov    WORD PTR [rsp+0x40],bx
   14000321e:	lea    r8,[rbp-0x6c]
   140003222:	mov    DWORD PTR [rbp-0x80],ebx
   140003225:	xor    edx,edx
   140003227:	mov    rcx,rsi
   14000322a:	call   QWORD PTR [rip+0x4138]        # 0x140007368
   140003230:	test   eax,eax
   140003232:	jns    0x140003259
   140003234:	lea    r9,[rsp+0x40]
   140003239:	mov    rcx,rsi
   14000323c:	lea    r8,[rbp-0x80]
   140003240:	lea    rdx,[rbp-0x68]
   140003244:	call   QWORD PTR [rip+0x40fe]        # 0x140007348
   14000324a:	xor    esi,esi
   14000324c:	test   eax,eax
   14000324e:	jns    0x14000325b
   140003250:	mov    DWORD PTR [rdi+0x28],0x2
   140003257:	jmp    0x140003262
   140003259:	xor    esi,esi
   14000325b:	mov    DWORD PTR [rdi+0x28],0x1
   140003262:	mov    rax,QWORD PTR [rsp+0x78]
   140003267:	mov    r9d,r14d
   14000326a:	mov    r8,rdi
   14000326d:	mov    edx,r12d
   140003270:	mov    ecx,DWORD PTR [rax+0x38]
   140003273:	lea    rax,[rsp+0x44]
   140003278:	mov    QWORD PTR [rsp+0x30],rax
   14000327d:	lea    rax,[rsp+0x50]
   140003282:	mov    QWORD PTR [rsp+0x28],rax
   140003287:	lea    rax,[rsp+0x48]
   14000328c:	mov    DWORD PTR [rdi+0x2c],ecx
   14000328f:	mov    rcx,r15
   140003292:	mov    QWORD PTR [rsp+0x20],rax
   140003297:	call   0x140004fb0
   14000329c:	mov    ebx,eax
   14000329e:	test   eax,eax
   1400032a0:	js     0x1400032f6
   1400032a2:	mov    edx,DWORD PTR [rsp+0x44]
   1400032a6:	test   edx,edx
   1400032a8:	js     0x14000330c
   1400032aa:	mov    rcx,QWORD PTR [rsp+0x48]
   1400032af:	test   rcx,rcx
   1400032b2:	je     0x1400032be
   1400032b4:	call   0x140004da0
   1400032b9:	mov    QWORD PTR [rsp+0x48],rsi
   1400032be:	lea    rax,[rsp+0x44]
   1400032c3:	mov    DWORD PTR [rdi+0x2c],esi
   1400032c6:	mov    QWORD PTR [rsp+0x30],rax
   1400032cb:	mov    r9d,r14d
   1400032ce:	lea    rax,[rsp+0x50]
   1400032d3:	mov    r8,rdi
   1400032d6:	mov    QWORD PTR [rsp+0x28],rax
   1400032db:	mov    edx,r12d
   1400032de:	lea    rax,[rsp+0x48]
   1400032e3:	mov    rcx,r15
   1400032e6:	mov    QWORD PTR [rsp+0x20],rax
   1400032eb:	call   0x140004fb0
   1400032f0:	mov    ebx,eax
   1400032f2:	test   eax,eax
   1400032f4:	jns    0x140003304
   1400032f6:	mov    edx,eax
   1400032f8:	mov    ecx,0x274e
   1400032fd:	call   0x140001978
   140003302:	jmp    0x140003340
   140003304:	mov    edx,DWORD PTR [rsp+0x44]
   140003308:	test   edx,edx
   14000330a:	jns    0x14000331c
   14000330c:	mov    ecx,0x274f
   140003311:	call   0x140001978
   140003316:	mov    ebx,DWORD PTR [rsp+0x44]
   14000331a:	jmp    0x140003340
   14000331c:	mov    rcx,QWORD PTR [rip+0x72b5]        # 0x14000a5d8
   140003323:	lea    rax,[rdi+0x18]
   140003327:	lea    r9,[rdi+0x8]
   14000332b:	mov    QWORD PTR [rsp+0x20],rax
   140003330:	mov    edx,0xfffffff5
   140003335:	mov    r8d,0x2750
   14000333b:	call   0x140005524
   140003340:	mov    rcx,rdi
   140003343:	call   QWORD PTR [rip+0x3d67]        # 0x1400070b0
   140003349:	mov    rcx,QWORD PTR [rsp+0x48]
   14000334e:	test   rcx,rcx
   140003351:	je     0x140003358
   140003353:	call   0x140004da0
   140003358:	mov    rcx,QWORD PTR [rsp+0x78]
   14000335d:	test   rcx,rcx
   140003360:	je     0x140003368
   140003362:	call   QWORD PTR [rip+0x3fd0]        # 0x140007338
   140003368:	mov    eax,ebx
   14000336a:	mov    rcx,QWORD PTR [rbp+0x10]
   14000336e:	xor    rcx,rsp
   140003371:	call   0x1400058e0
   140003376:	add    rsp,0x128
   14000337d:	pop    r15
   14000337f:	pop    r14
   140003381:	pop    r13
   140003383:	pop    r12
   140003385:	pop    rdi
   140003386:	pop    rsi
   140003387:	pop    rbx
   140003388:	pop    rbp
   140003389:	ret    
   14000338a:	int3   
   14000338b:	int3   
   14000338c:	int3   
   14000338d:	int3   
   14000338e:	int3   
   14000338f:	int3   
   140003390:	mov    QWORD PTR [rsp+0x8],rbx
   140003395:	mov    QWORD PTR [rsp+0x10],rsi
   14000339a:	push   rdi
   14000339b:	sub    rsp,0x20
   14000339f:	mov    ebx,ecx
   1400033a1:	mov    edi,0xfffffff5
   1400033a6:	mov    rcx,QWORD PTR [rip+0x722b]        # 0x14000a5d8
   1400033ad:	mov    edx,edi
   1400033af:	mov    r8d,0x2746
   1400033b5:	call   0x140005524
   1400033ba:	lea    rsi,[rip+0x4a47]        # 0x140007e08
   1400033c1:	test   bl,0x1
   1400033c4:	je     0x1400033da
   1400033c6:	lea    r8,[rip+0x4cbb]        # 0x140008088
   1400033cd:	mov    rdx,rsi
   1400033d0:	mov    ecx,edi
   1400033d2:	call   0x14000533c
   1400033d7:	and    ebx,0xfffffffe
   1400033da:	test   bl,0x4
   1400033dd:	je     0x1400033f3
   1400033df:	lea    r8,[rip+0x4caa]        # 0x140008090
   1400033e6:	mov    rdx,rsi
   1400033e9:	mov    ecx,edi
   1400033eb:	call   0x14000533c
   1400033f0:	and    ebx,0xfffffffb
   1400033f3:	test   bl,0x8
   1400033f6:	je     0x14000340c
   1400033f8:	lea    r8,[rip+0x4c99]        # 0x140008098
   1400033ff:	mov    rdx,rsi
   140003402:	mov    ecx,edi
   140003404:	call   0x14000533c
   140003409:	and    ebx,0xfffffff7
   14000340c:	test   bl,0x10
   14000340f:	je     0x140003425
   140003411:	lea    r8,[rip+0x4c8c]        # 0x1400080a4
   140003418:	mov    rdx,rsi
   14000341b:	mov    ecx,edi
   14000341d:	call   0x14000533c
   140003422:	and    ebx,0xffffffef
   140003425:	test   bl,0x20
   140003428:	je     0x14000343e
   14000342a:	lea    r8,[rip+0x4c7f]        # 0x1400080b0
   140003431:	mov    rdx,rsi
   140003434:	mov    ecx,edi
   140003436:	call   0x14000533c
   14000343b:	and    ebx,0xffffffdf
   14000343e:	test   bl,0x40
   140003441:	je     0x140003457
   140003443:	lea    r8,[rip+0x4c6e]        # 0x1400080b8
   14000344a:	mov    rdx,rsi
   14000344d:	mov    ecx,edi
   14000344f:	call   0x14000533c
   140003454:	and    ebx,0xffffffbf
   140003457:	test   bl,bl
   140003459:	jns    0x140003470
   14000345b:	lea    r8,[rip+0x4c6e]        # 0x1400080d0
   140003462:	mov    rdx,rsi
   140003465:	mov    ecx,edi
   140003467:	call   0x14000533c
   14000346c:	btr    ebx,0x7
   140003470:	bt     ebx,0x8
   140003474:	jae    0x14000348b
   140003476:	lea    r8,[rip+0x4c73]        # 0x1400080f0
   14000347d:	mov    rdx,rsi
   140003480:	mov    ecx,edi
   140003482:	call   0x14000533c
   140003487:	btr    ebx,0x8
   14000348b:	bt     ebx,0x9
   14000348f:	jae    0x1400034a6
   140003491:	lea    r8,[rip+0x4c70]        # 0x140008108
   140003498:	mov    rdx,rsi
   14000349b:	mov    ecx,edi
   14000349d:	call   0x14000533c
   1400034a2:	btr    ebx,0x9
   1400034a6:	bt     ebx,0xa
   1400034aa:	jae    0x1400034c1
   1400034ac:	lea    r8,[rip+0x4c6d]        # 0x140008120
   1400034b3:	mov    rdx,rsi
   1400034b6:	mov    ecx,edi
   1400034b8:	call   0x14000533c
   1400034bd:	btr    ebx,0xa
   1400034c1:	bt     ebx,0xb
   1400034c5:	jae    0x1400034dc
   1400034c7:	lea    r8,[rip+0x4c62]        # 0x140008130
   1400034ce:	mov    rdx,rsi
   1400034d1:	mov    ecx,edi
   1400034d3:	call   0x14000533c
   1400034d8:	btr    ebx,0xb
   1400034dc:	bt     ebx,0xc
   1400034e0:	jae    0x1400034f7
   1400034e2:	lea    r8,[rip+0x4c67]        # 0x140008150
   1400034e9:	mov    rdx,rsi
   1400034ec:	mov    ecx,edi
   1400034ee:	call   0x14000533c
   1400034f3:	btr    ebx,0xc
   1400034f7:	bt     ebx,0xd
   1400034fb:	jae    0x140003512
   1400034fd:	lea    r8,[rip+0x4c64]        # 0x140008168
   140003504:	mov    rdx,rsi
   140003507:	mov    ecx,edi
   140003509:	call   0x14000533c
   14000350e:	btr    ebx,0xd
   140003512:	bt     ebx,0xe
   140003516:	jae    0x14000352d
   140003518:	lea    r8,[rip+0x4c51]        # 0x140008170
   14000351f:	mov    rdx,rsi
   140003522:	mov    ecx,edi
   140003524:	call   0x14000533c
   140003529:	btr    ebx,0xe
   14000352d:	test   ebx,0xfffff
   140003533:	je     0x14000354c
   140003535:	lea    r8,[rip+0x4c44]        # 0x140008180
   14000353c:	mov    rdx,rsi
   14000353f:	mov    ecx,edi
   140003541:	call   0x14000533c
   140003546:	and    ebx,0xfff00000
   14000354c:	bt     ebx,0x1d
   140003550:	jae    0x140003567
   140003552:	lea    r8,[rip+0x4c37]        # 0x140008190
   140003559:	mov    rdx,rsi
   14000355c:	mov    ecx,edi
   14000355e:	call   0x14000533c
   140003563:	btr    ebx,0x1d
   140003567:	bt     ebx,0x1e
   14000356b:	jae    0x140003582
   14000356d:	lea    r8,[rip+0x4c2c]        # 0x1400081a0
   140003574:	mov    rdx,rsi
   140003577:	mov    ecx,edi
   140003579:	call   0x14000533c
   14000357e:	btr    ebx,0x1e
   140003582:	test   ebx,ebx
   140003584:	jns    0x14000359d
   140003586:	lea    r8,[rip+0x4c2b]        # 0x1400081b8
   14000358d:	mov    rdx,rsi
   140003590:	mov    ecx,edi
   140003592:	call   0x14000533c
   140003597:	btr    ebx,0x1f
   14000359b:	test   ebx,ebx
   14000359d:	je     0x1400035b0
   14000359f:	mov    r8d,ebx
   1400035a2:	lea    rdx,[rip+0x483f]        # 0x140007de8
   1400035a9:	mov    ecx,edi
   1400035ab:	call   0x14000533c
   1400035b0:	lea    rdx,[rip+0x4839]        # 0x140007df0
   1400035b7:	mov    ecx,edi
   1400035b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035be:	mov    rsi,QWORD PTR [rsp+0x38]
   1400035c3:	add    rsp,0x20
   1400035c7:	pop    rdi
   1400035c8:	jmp    0x14000533c
   1400035cd:	int3   
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	int3   
   1400035d1:	int3   
   1400035d2:	int3   
   1400035d3:	int3   
   1400035d4:	mov    r11,rsp
   1400035d7:	mov    QWORD PTR [r11+0x8],rbx
   1400035db:	mov    QWORD PTR [r11+0x10],rsi
   1400035df:	push   rbp
   1400035e0:	push   rdi
   1400035e1:	push   r12
   1400035e3:	push   r14
   1400035e5:	push   r15
   1400035e7:	mov    rbp,rsp
   1400035ea:	sub    rsp,0x50
   1400035ee:	and    QWORD PTR [rbp-0x8],0x0
   1400035f3:	lea    rax,[rbp+0x40]
   1400035f7:	and    DWORD PTR [rbp+0x48],0x0
   1400035fb:	lea    r8,[rbp-0x10]
   1400035ff:	mov    QWORD PTR [r11-0x48],rax
   140003603:	mov    r9d,0x4
   140003609:	lea    rax,[rbp+0x48]
   14000360d:	mov    DWORD PTR [rbp-0x10],0x1c
   140003614:	mov    QWORD PTR [r11-0x50],rax
   140003618:	lea    rax,[rbp-0x8]
   14000361c:	mov    QWORD PTR [r11-0x58],rax
   140003620:	call   0x140004fb0
   140003625:	mov    DWORD PTR [rbp-0xc],eax
   140003628:	mov    edi,eax
   14000362a:	test   eax,eax
   14000362c:	jns    0x14000363c
   14000362e:	mov    edx,eax
   140003630:	mov    ecx,0x2751
   140003635:	call   0x140001978
   14000363a:	jmp    0x140003650
   14000363c:	mov    edx,DWORD PTR [rbp+0x40]
   14000363f:	test   edx,edx
   140003641:	jns    0x140003659
   140003643:	mov    ecx,0x2752
   140003648:	call   0x140001978
   14000364d:	mov    edi,DWORD PTR [rbp+0x40]
   140003650:	mov    rcx,QWORD PTR [rbp-0x8]
   140003654:	jmp    0x140003967
   140003659:	mov    rcx,QWORD PTR [rip+0x6f78]        # 0x14000a5d8
   140003660:	mov    r12d,0xfffffff5
   140003666:	mov    edx,r12d
   140003669:	mov    r8d,0x2753
   14000366f:	call   0x140005524
   140003674:	mov    rax,QWORD PTR [rbp-0x8]
   140003678:	mov    r8d,0x2757
   14000367e:	mov    rcx,QWORD PTR [rip+0x6f53]        # 0x14000a5d8
   140003685:	mov    edx,r12d
   140003688:	mov    r9d,DWORD PTR [rax+0x4]
   14000368c:	call   0x140005524
   140003691:	mov    rcx,QWORD PTR [rbp-0x8]
   140003695:	xor    esi,esi
   140003697:	cmp    DWORD PTR [rcx+0x4],esi
   14000369a:	jbe    0x140003967
   1400036a0:	lea    rdi,[rip+0x4ccd]        # 0x140008374
   1400036a7:	mov    r15,QWORD PTR [rcx+0x8]
   1400036ab:	lea    r14,[rsi+rsi*8]
   1400036af:	mov    rcx,QWORD PTR [rip+0x6f22]        # 0x14000a5d8
   1400036b6:	lea    rax,[r14+0x1]
   1400036ba:	mov    r9d,esi
   1400036bd:	mov    r8d,0x2758
   1400036c3:	mov    edx,r12d
   1400036c6:	lea    rax,[r15+rax*8]
   1400036ca:	mov    QWORD PTR [rsp+0x20],rax
   1400036cf:	call   0x140005524
   1400036d4:	mov    rcx,QWORD PTR [rip+0x6efd]        # 0x14000a5d8
   1400036db:	lea    r9,[r14+0x3]
   1400036df:	lea    r9,[r15+r9*8]
   1400036e3:	mov    r8d,0x2759
   1400036e9:	mov    edx,r12d
   1400036ec:	call   0x140005524
   1400036f1:	mov    rcx,QWORD PTR [rip+0x6ee0]        # 0x14000a5d8
   1400036f8:	lea    r9,[r14+0x7]
   1400036fc:	lea    r9,[r15+r9*8]
   140003700:	mov    r8d,0x275a
   140003706:	mov    edx,r12d
   140003709:	call   0x140005524
   14000370e:	mov    ebx,DWORD PTR [r15+r14*8+0x2c]
   140003713:	lea    r9,[rip+0x4802]        # 0x140007f1c
   14000371a:	mov    rcx,QWORD PTR [rip+0x6eb7]        # 0x14000a5d8
   140003721:	mov    r8d,0x275b
   140003727:	mov    DWORD PTR [rsp+0x28],ebx
   14000372b:	mov    edx,r12d
   14000372e:	mov    QWORD PTR [rsp+0x20],rdi
   140003733:	call   0x140005524
   140003738:	test   ebx,ebx
   14000373a:	je     0x140003827
   140003740:	mov    rcx,QWORD PTR [rip+0x6e91]        # 0x14000a5d8
   140003747:	mov    r8d,0x2746
   14000374d:	mov    edx,r12d
   140003750:	call   0x140005524
   140003755:	test   bl,bl
   140003757:	jns    0x140003773
   140003759:	lea    r8,[rip+0x4850]        # 0x140007fb0
   140003760:	mov    ecx,r12d
   140003763:	lea    rdx,[rip+0x469e]        # 0x140007e08
   14000376a:	call   0x14000533c
   14000376f:	btr    ebx,0x7
   140003773:	bt     ebx,0x13
   140003777:	jae    0x140003793
   140003779:	lea    r8,[rip+0x4850]        # 0x140007fd0
   140003780:	mov    ecx,r12d
   140003783:	lea    rdx,[rip+0x467e]        # 0x140007e08
   14000378a:	call   0x14000533c
   14000378f:	btr    ebx,0x13
   140003793:	bt     ebx,0x15
   140003797:	jae    0x1400037b3
   140003799:	lea    r8,[rip+0x4850]        # 0x140007ff0
   1400037a0:	mov    ecx,r12d
   1400037a3:	lea    rdx,[rip+0x465e]        # 0x140007e08
   1400037aa:	call   0x14000533c
   1400037af:	btr    ebx,0x15
   1400037b3:	bt     ebx,0xc
   1400037b7:	jae    0x1400037d3
   1400037b9:	lea    r8,[rip+0x4850]        # 0x140008010
   1400037c0:	mov    ecx,r12d
   1400037c3:	lea    rdx,[rip+0x463e]        # 0x140007e08
   1400037ca:	call   0x14000533c
   1400037cf:	btr    ebx,0xc
   1400037d3:	bt     ebx,0x12
   1400037d7:	jae    0x1400037f3
   1400037d9:	lea    r8,[rip+0x4858]        # 0x140008038
   1400037e0:	mov    ecx,r12d
   1400037e3:	lea    rdx,[rip+0x461e]        # 0x140007e08
   1400037ea:	call   0x14000533c
   1400037ef:	btr    ebx,0x12
   1400037f3:	test   bl,0x1
   1400037f6:	je     0x140003811
   1400037f8:	lea    r8,[rip+0x4861]        # 0x140008060
   1400037ff:	mov    ecx,r12d
   140003802:	lea    rdx,[rip+0x45ff]        # 0x140007e08
   140003809:	call   0x14000533c
   14000380e:	and    ebx,0xfffffffe
   140003811:	test   ebx,ebx
   140003813:	je     0x140003827
   140003815:	mov    r8d,ebx
   140003818:	lea    rdx,[rip+0x45c9]        # 0x140007de8
   14000381f:	mov    ecx,r12d
   140003822:	call   0x14000533c
   140003827:	lea    rdx,[rip+0x45c2]        # 0x140007df0
   14000382e:	mov    ecx,r12d
   140003831:	call   0x14000533c
   140003836:	mov    ebx,DWORD PTR [r15+r14*8+0x30]
   14000383b:	lea    r9,[rip+0x46da]        # 0x140007f1c
   140003842:	mov    rcx,QWORD PTR [rip+0x6d8f]        # 0x14000a5d8
   140003849:	mov    r8d,0x275c
   14000384f:	mov    DWORD PTR [rsp+0x28],ebx
   140003853:	mov    edx,r12d
   140003856:	mov    QWORD PTR [rsp+0x20],rdi
   14000385b:	call   0x140005524
   140003860:	test   ebx,ebx
   140003862:	jne    0x140003875
   140003864:	lea    rdx,[rip+0x4585]        # 0x140007df0
   14000386b:	mov    ecx,r12d
   14000386e:	call   0x14000533c
   140003873:	jmp    0x14000387c
   140003875:	mov    ecx,ebx
   140003877:	call   0x140003390
   14000387c:	mov    ebx,DWORD PTR [r15+r14*8+0x34]
   140003881:	lea    r9,[rip+0x4694]        # 0x140007f1c
   140003888:	mov    rcx,QWORD PTR [rip+0x6d49]        # 0x14000a5d8
   14000388f:	mov    r8d,0x275d
   140003895:	mov    DWORD PTR [rsp+0x28],ebx
   140003899:	mov    edx,r12d
   14000389c:	mov    QWORD PTR [rsp+0x20],rdi
   1400038a1:	call   0x140005524
   1400038a6:	test   ebx,ebx
   1400038a8:	je     0x140003937
   1400038ae:	mov    rcx,QWORD PTR [rip+0x6d23]        # 0x14000a5d8
   1400038b5:	mov    r8d,0x2746
   1400038bb:	mov    edx,r12d
   1400038be:	call   0x140005524
   1400038c3:	test   ebx,ebx
   1400038c5:	jns    0x1400038e1
   1400038c7:	lea    r8,[rip+0x4902]        # 0x1400081d0
   1400038ce:	mov    ecx,r12d
   1400038d1:	lea    rdx,[rip+0x4530]        # 0x140007e08
   1400038d8:	call   0x14000533c
   1400038dd:	btr    ebx,0x1f
   1400038e1:	bt     ebx,0x1e
   1400038e5:	jae    0x140003901
   1400038e7:	lea    r8,[rip+0x48f2]        # 0x1400081e0
   1400038ee:	mov    ecx,r12d
   1400038f1:	lea    rdx,[rip+0x4510]        # 0x140007e08
   1400038f8:	call   0x14000533c
   1400038fd:	btr    ebx,0x1e
   140003901:	bt     ebx,0x1d
   140003905:	jae    0x140003921
   140003907:	lea    r8,[rip+0x48e2]        # 0x1400081f0
   14000390e:	mov    ecx,r12d
   140003911:	lea    rdx,[rip+0x44f0]        # 0x140007e08
   140003918:	call   0x14000533c
   14000391d:	btr    ebx,0x1d
   140003921:	test   ebx,ebx
   140003923:	je     0x140003937
   140003925:	mov    r8d,ebx
   140003928:	lea    rdx,[rip+0x44b9]        # 0x140007de8
   14000392f:	mov    ecx,r12d
   140003932:	call   0x14000533c
   140003937:	lea    rdx,[rip+0x44b2]        # 0x140007df0
   14000393e:	mov    ecx,r12d
   140003941:	call   0x14000533c
   140003946:	lea    rdx,[rip+0x44a3]        # 0x140007df0
   14000394d:	mov    ecx,r12d
   140003950:	call   0x14000533c
   140003955:	mov    rcx,QWORD PTR [rbp-0x8]
   140003959:	inc    esi
   14000395b:	cmp    esi,DWORD PTR [rcx+0x4]
   14000395e:	jb     0x1400036a7
   140003964:	mov    edi,DWORD PTR [rbp-0xc]
   140003967:	test   rcx,rcx
   14000396a:	je     0x140003971
   14000396c:	call   0x140004da0
   140003971:	lea    r11,[rsp+0x50]
   140003976:	mov    eax,edi
   140003978:	mov    rbx,QWORD PTR [r11+0x30]
   14000397c:	mov    rsi,QWORD PTR [r11+0x38]
   140003980:	mov    rsp,r11
   140003983:	pop    r15
   140003985:	pop    r14
   140003987:	pop    r12
   140003989:	pop    rdi
   14000398a:	pop    rbp
   14000398b:	ret    
   14000398c:	int3   
   14000398d:	int3   
   14000398e:	int3   
   14000398f:	int3   
   140003990:	int3   
   140003991:	int3   
   140003992:	int3   
   140003993:	int3   
   140003994:	mov    r11,rsp
   140003997:	push   rbx
   140003998:	sub    rsp,0x70
   14000399c:	mov    rax,QWORD PTR [rip+0x6665]        # 0x14000a008
   1400039a3:	xor    rax,rsp
   1400039a6:	mov    QWORD PTR [rsp+0x68],rax
   1400039ab:	mov    rax,QWORD PTR [r8]
   1400039ae:	mov    r9d,0xc
   1400039b4:	and    QWORD PTR [r11-0x30],0x0
   1400039b9:	lea    r8,[r11-0x20]
   1400039bd:	mov    DWORD PTR [rsp+0x58],0x4
   1400039c5:	mov    QWORD PTR [r11-0x1c],rax
   1400039c9:	lea    rax,[r11-0x38]
   1400039cd:	mov    QWORD PTR [r11-0x48],rax
   1400039d1:	lea    rax,[r11-0x28]
   1400039d5:	mov    QWORD PTR [r11-0x50],rax
   1400039d9:	lea    rax,[r11-0x30]
   1400039dd:	mov    QWORD PTR [r11-0x58],rax
   1400039e1:	call   0x140004fb0
   1400039e6:	mov    ebx,eax
   1400039e8:	test   eax,eax
   1400039ea:	jns    0x1400039fa
   1400039ec:	mov    edx,eax
   1400039ee:	mov    ecx,0x271c
   1400039f3:	call   0x140001978
   1400039f8:	jmp    0x140003a33
   1400039fa:	mov    edx,DWORD PTR [rsp+0x40]
   1400039fe:	test   edx,edx
   140003a00:	jns    0x140003a12
   140003a02:	mov    ecx,0x271d
   140003a07:	call   0x140001978
   140003a0c:	mov    ebx,DWORD PTR [rsp+0x40]
   140003a10:	jmp    0x140003a33
   140003a12:	mov    rcx,QWORD PTR [rip+0x6bbf]        # 0x14000a5d8
   140003a19:	mov    edx,0xfffffff5
   140003a1e:	mov    r8d,0x273d
   140003a24:	call   0x140005524
   140003a29:	mov    rcx,QWORD PTR [rsp+0x48]
   140003a2e:	call   0x140001c64
   140003a33:	mov    rcx,QWORD PTR [rsp+0x48]
   140003a38:	test   rcx,rcx
   140003a3b:	je     0x140003a42
   140003a3d:	call   0x140004da0
   140003a42:	mov    eax,ebx
   140003a44:	mov    rcx,QWORD PTR [rsp+0x68]
   140003a49:	xor    rcx,rsp
   140003a4c:	call   0x1400058e0
   140003a51:	add    rsp,0x70
   140003a55:	pop    rbx
   140003a56:	ret    
   140003a57:	int3   
   140003a58:	int3   
   140003a59:	int3   
   140003a5a:	int3   
   140003a5b:	int3   
   140003a5c:	int3   
   140003a5d:	int3   
   140003a5e:	int3   
   140003a5f:	int3   
   140003a60:	mov    rax,rsp
   140003a63:	mov    QWORD PTR [rax+0x8],rbx
   140003a67:	mov    QWORD PTR [rax+0x18],rsi
   140003a6b:	mov    QWORD PTR [rax+0x20],rdi
   140003a6f:	push   rbp
   140003a70:	push   r12
   140003a72:	push   r13
   140003a74:	push   r14
   140003a76:	push   r15
   140003a78:	lea    rbp,[rax-0x228]
   140003a7f:	sub    rsp,0x300
   140003a86:	mov    rax,QWORD PTR [rip+0x657b]        # 0x14000a008
   140003a8d:	xor    rax,rsp
   140003a90:	mov    QWORD PTR [rbp+0x1f0],rax
   140003a97:	xor    r13d,r13d
   140003a9a:	mov    DWORD PTR [rsp+0x5c],0x40
   140003aa2:	mov    edi,0x1
   140003aa7:	mov    QWORD PTR [rsp+0x48],r13
   140003aac:	mov    r14,rdx
   140003aaf:	mov    QWORD PTR [rbp-0x80],r13
   140003ab3:	mov    esi,ecx
   140003ab5:	mov    QWORD PTR [rbp-0x78],r13
   140003ab9:	xor    edx,edx
   140003abb:	mov    QWORD PTR [rsp+0x60],r13
   140003ac0:	lea    r8d,[rdi+0x33]
   140003ac4:	mov    DWORD PTR [rsp+0x58],r13d
   140003ac9:	lea    rcx,[rbp-0x5c]
   140003acd:	mov    QWORD PTR [rsp+0x70],r13
   140003ad2:	mov    ebx,edi
   140003ad4:	mov    DWORD PTR [rsp+0x54],r13d
   140003ad9:	mov    r15d,r13d
   140003adc:	mov    DWORD PTR [rbp-0x60],r13d
   140003ae0:	call   0x140005fe2
   140003ae5:	and    QWORD PTR [rbp-0x70],r13
   140003ae9:	mov    r12b,r13b
   140003aec:	xor    ecx,ecx
   140003aee:	mov    DWORD PTR [rsp+0x68],r12d
   140003af3:	mov    QWORD PTR [rsp+0x78],r13
   140003af8:	mov    BYTE PTR [rsp+0x40],r13b
   140003afd:	call   QWORD PTR [rip+0x35ed]        # 0x1400070f0
   140003b03:	mov    QWORD PTR [rip+0x6ace],rax        # 0x14000a5d8
   140003b0a:	test   rax,rax
   140003b0d:	jne    0x140003b3d
   140003b0f:	call   QWORD PTR [rip+0x3593]        # 0x1400070a8
   140003b15:	lea    ecx,[rdi+0x1]
   140003b18:	mov    ebx,eax
   140003b1a:	call   0x140005f18
   140003b1f:	mov    rcx,rax
   140003b22:	lea    rdx,[rip+0x46e7]        # 0x140008210
   140003b29:	mov    r8d,ebx
   140003b2c:	call   QWORD PTR [rip+0x37b6]        # 0x1400072e8
   140003b32:	call   QWORD PTR [rip+0x3570]        # 0x1400070a8
   140003b38:	jmp    0x1400042a1
   140003b3d:	call   0x14000512c
   140003b42:	test   eax,eax
   140003b44:	jne    0x140003b4e
   140003b46:	or     eax,0xffffffff
   140003b49:	jmp    0x1400042a1
   140003b4e:	sub    esi,ebx
   140003b50:	je     0x140003dc1
   140003b56:	mov    r13d,0x2
   140003b5c:	mov    r12d,ebx
   140003b5f:	lea    rdx,[rip+0x470a]        # 0x140008270
   140003b66:	mov    rcx,QWORD PTR [r14+r12*8]
   140003b6a:	call   QWORD PTR [rip+0x3770]        # 0x1400072e0
   140003b70:	test   eax,eax
   140003b72:	jne    0x140003b9c
   140003b74:	cmp    esi,0x1
   140003b77:	jle    0x140003b9c
   140003b79:	lea    r12d,[rax+0x1]
   140003b7d:	xor    edx,edx
   140003b7f:	add    ebx,r12d
   140003b82:	lea    r8d,[rax+0x10]
   140003b86:	mov    rcx,QWORD PTR [r14+rbx*8]
   140003b8a:	call   QWORD PTR [rip+0x3730]        # 0x1400072c0
   140003b90:	mov    DWORD PTR [rsp+0x4c],eax
   140003b94:	sub    esi,r13d
   140003b97:	jmp    0x140003d5c
   140003b9c:	mov    rcx,QWORD PTR [r14+r12*8]
   140003ba0:	lea    rdx,[rip+0x46d1]        # 0x140008278
   140003ba7:	call   QWORD PTR [rip+0x3733]        # 0x1400072e0
   140003bad:	test   eax,eax
   140003baf:	jne    0x140003bd3
   140003bb1:	cmp    esi,0x1
   140003bb4:	jle    0x140003bd3
   140003bb6:	lea    r12d,[rax+0x1]
   140003bba:	xor    edx,edx
   140003bbc:	add    ebx,r12d
   140003bbf:	lea    r8d,[rax+0x10]
   140003bc3:	mov    rcx,QWORD PTR [r14+rbx*8]
   140003bc7:	call   QWORD PTR [rip+0x36f3]        # 0x1400072c0
   140003bcd:	mov    DWORD PTR [rsp+0x48],eax
   140003bd1:	jmp    0x140003b94
   140003bd3:	mov    rcx,QWORD PTR [r14+r12*8]
   140003bd7:	lea    rdx,[rip+0x46a2]        # 0x140008280
   140003bde:	call   QWORD PTR [rip+0x36fc]        # 0x1400072e0
   140003be4:	test   eax,eax
   140003be6:	jne    0x140003c14
   140003be8:	mov    eax,0x1
   140003bed:	cmp    esi,eax
   140003bef:	jle    0x140003c14
   140003bf1:	add    ebx,eax
   140003bf3:	lea    r8d,[rax+0xf]
   140003bf7:	xor    edx,edx
   140003bf9:	mov    rcx,QWORD PTR [r14+rbx*8]
   140003bfd:	call   QWORD PTR [rip+0x369d]        # 0x1400072a0
   140003c03:	mov    DWORD PTR [rsp+0x58],eax
   140003c07:	sub    esi,r13d
   140003c0a:	mov    ecx,0x1
   140003c0f:	jmp    0x140003da1
   140003c14:	mov    rcx,QWORD PTR [r14+r12*8]
   140003c18:	lea    rdx,[rip+0x4679]        # 0x140008298
   140003c1f:	call   QWORD PTR [rip+0x36bb]        # 0x1400072e0
   140003c25:	test   eax,eax
   140003c27:	jne    0x140003c4a
   140003c29:	mov    eax,0x1
   140003c2e:	cmp    esi,eax
   140003c30:	jle    0x140003c4a
   140003c32:	add    ebx,eax
   140003c34:	lea    r8d,[rax+0xf]
   140003c38:	xor    edx,edx
   140003c3a:	mov    rcx,QWORD PTR [r14+rbx*8]
   140003c3e:	call   QWORD PTR [rip+0x365c]        # 0x1400072a0
   140003c44:	mov    DWORD PTR [rsp+0x5c],eax
   140003c48:	jmp    0x140003c07
   140003c4a:	mov    rcx,QWORD PTR [r14+r12*8]
   140003c4e:	lea    rdx,[rip+0x4663]        # 0x1400082b8
   140003c55:	call   QWORD PTR [rip+0x3685]        # 0x1400072e0
   140003c5b:	test   eax,eax
   140003c5d:	jne    0x140003c74
   140003c5f:	lea    r12d,[rax+0x1]
   140003c63:	sub    esi,r12d
   140003c66:	mov    edi,r12d
   140003c69:	add    ebx,r12d
   140003c6c:	mov    ecx,r12d
   140003c6f:	jmp    0x140003da3
   140003c74:	mov    rcx,QWORD PTR [r14+r12*8]
   140003c78:	lea    rdx,[rip+0x4649]        # 0x1400082c8
   140003c7f:	call   QWORD PTR [rip+0x365b]        # 0x1400072e0
   140003c85:	test   eax,eax
   140003c87:	jne    0x140003c97
   140003c89:	lea    ecx,[rax+0x1]
   140003c8c:	sub    esi,ecx
   140003c8e:	add    ebx,ecx
   140003c90:	xor    edi,edi
   140003c92:	jmp    0x140003da3
   140003c97:	mov    rcx,QWORD PTR [r14+r12*8]
   140003c9b:	lea    rdx,[rip+0x462e]        # 0x1400082d0
   140003ca2:	call   QWORD PTR [rip+0x3638]        # 0x1400072e0
   140003ca8:	test   eax,eax
   140003caa:	jne    0x140003cb4
   140003cac:	mov    edi,r13d
   140003caf:	jmp    0x140003d9a
   140003cb4:	mov    rcx,QWORD PTR [r14+r12*8]
   140003cb8:	lea    rdx,[rip+0x4621]        # 0x1400082e0
   140003cbf:	call   QWORD PTR [rip+0x361b]        # 0x1400072e0
   140003cc5:	test   eax,eax
   140003cc7:	jne    0x140003cd1
   140003cc9:	lea    edi,[rax+0x3]
   140003ccc:	jmp    0x140003d9a
   140003cd1:	mov    rcx,QWORD PTR [r14+r12*8]
   140003cd5:	lea    rdx,[rip+0x461c]        # 0x1400082f8
   140003cdc:	call   QWORD PTR [rip+0x35fe]        # 0x1400072e0
   140003ce2:	test   eax,eax
   140003ce4:	jne    0x140003cee
   140003ce6:	lea    edi,[rax+0x4]
   140003ce9:	jmp    0x140003d9a
   140003cee:	mov    rcx,QWORD PTR [r14+r12*8]
   140003cf2:	lea    rdx,[rip+0x4617]        # 0x140008310
   140003cf9:	call   QWORD PTR [rip+0x35e1]        # 0x1400072e0
   140003cff:	test   eax,eax
   140003d01:	jne    0x140003d1f
   140003d03:	lea    ecx,[rax+0x1]
   140003d06:	cmp    esi,ecx
   140003d08:	jle    0x140003d1f
   140003d0a:	add    ebx,ecx
   140003d0c:	lea    edi,[rcx+0x4]
   140003d0f:	sub    esi,r13d
   140003d12:	mov    rax,QWORD PTR [r14+rbx*8]
   140003d16:	mov    QWORD PTR [rbp-0x80],rax
   140003d1a:	jmp    0x140003da1
   140003d1f:	mov    rcx,QWORD PTR [r14+r12*8]
   140003d23:	lea    rdx,[rip+0x45ee]        # 0x140008318
   140003d2a:	call   QWORD PTR [rip+0x35b0]        # 0x1400072e0
   140003d30:	test   eax,eax
   140003d32:	jne    0x140003d64
   140003d34:	cmp    esi,r13d
   140003d37:	jle    0x140003d64
   140003d39:	lea    r12d,[rax+0x1]
   140003d3d:	add    ebx,r12d
   140003d40:	lea    edi,[r12+0x5]
   140003d45:	mov    rax,QWORD PTR [r14+rbx*8]
   140003d49:	add    ebx,r12d
   140003d4c:	mov    QWORD PTR [rbp-0x78],rax
   140003d50:	sub    esi,0x3
   140003d53:	mov    rax,QWORD PTR [r14+rbx*8]
   140003d57:	mov    QWORD PTR [rsp+0x60],rax
   140003d5c:	add    ebx,r12d
   140003d5f:	mov    ecx,r12d
   140003d62:	jmp    0x140003da3
   140003d64:	mov    rcx,QWORD PTR [r14+r12*8]
   140003d68:	lea    rdx,[rip+0x45c1]        # 0x140008330
   140003d6f:	call   QWORD PTR [rip+0x356b]        # 0x1400072e0
   140003d75:	test   eax,eax
   140003d77:	jne    0x140003d7e
   140003d79:	lea    edi,[rax+0x7]
   140003d7c:	jmp    0x140003d9a
   140003d7e:	mov    rcx,QWORD PTR [r14+r12*8]
   140003d82:	lea    rdx,[rip+0x45bf]        # 0x140008348
   140003d89:	call   QWORD PTR [rip+0x3551]        # 0x1400072e0
   140003d8f:	test   eax,eax
   140003d91:	jne    0x140003e17
   140003d97:	lea    edi,[rax+0x8]
   140003d9a:	mov    ecx,0x1
   140003d9f:	sub    esi,ecx
   140003da1:	add    ebx,ecx
   140003da3:	test   esi,esi
   140003da5:	jne    0x140003b5c
   140003dab:	mov    r12d,DWORD PTR [rsp+0x68]
   140003db0:	lea    eax,[rdi-0x6]
   140003db3:	cmp    eax,r13d
   140003db6:	movzx  r12d,r12b
   140003dba:	mov    r13b,r15b
   140003dbd:	cmovbe r12d,ecx
   140003dc1:	call   QWORD PTR [rip+0x3331]        # 0x1400070f8
   140003dc7:	mov    esi,0x1
   140003dcc:	lea    r9,[rsp+0x78]
   140003dd1:	mov    ebx,0x2000000
   140003dd6:	mov    rcx,rax
   140003dd9:	mov    r8d,esi
   140003ddc:	mov    edx,ebx
   140003dde:	call   QWORD PTR [rip+0x322c]        # 0x140007010
   140003de4:	mov    r14d,0xfffffff5
   140003dea:	test   eax,eax
   140003dec:	jne    0x140003e37
   140003dee:	call   QWORD PTR [rip+0x32b4]        # 0x1400070a8
   140003df4:	cmp    eax,0x3f0
   140003df9:	jne    0x140003e60
   140003dfb:	call   QWORD PTR [rip+0x32ff]        # 0x140007100
   140003e01:	lea    r8,[rsp+0x78]
   140003e06:	mov    edx,ebx
   140003e08:	mov    rcx,rax
   140003e0b:	call   QWORD PTR [rip+0x3207]        # 0x140007018
   140003e11:	test   eax,eax
   140003e13:	jne    0x140003e3a
   140003e15:	jmp    0x140003e60
   140003e17:	mov    ecx,ebx
   140003e19:	lea    rdx,[rip+0x4540]        # 0x140008360
   140003e20:	mov    rcx,QWORD PTR [r14+rcx*8]
   140003e24:	call   QWORD PTR [rip+0x34b6]        # 0x1400072e0
   140003e2a:	test   eax,eax
   140003e2c:	je     0x1400042d1
   140003e32:	jmp    0x1400042d7
   140003e37:	mov    r13b,sil
   140003e3a:	mov    rcx,QWORD PTR [rsp+0x78]
   140003e3f:	lea    rax,[rbp-0x68]
   140003e43:	mov    r9d,0x38
   140003e49:	mov    QWORD PTR [rsp+0x20],rax
   140003e4e:	lea    r8,[rbp-0x60]
   140003e52:	lea    edx,[r9-0x2e]
   140003e56:	call   QWORD PTR [rip+0x31c4]        # 0x140007020
   140003e5c:	test   eax,eax
   140003e5e:	jne    0x140003e79
   140003e60:	call   QWORD PTR [rip+0x3242]        # 0x1400070a8
   140003e66:	movzx  ebx,ax
   140003e69:	or     ebx,0x80070000
   140003e6f:	test   eax,eax
   140003e71:	cmovle ebx,eax
   140003e74:	jmp    0x1400041f6
   140003e79:	mov    eax,DWORD PTR [rbp-0x58]
   140003e7c:	mov    r8d,0x273e
   140003e82:	mov    r9d,DWORD PTR [rbp-0x54]
   140003e86:	mov    edx,r14d
   140003e89:	mov    rcx,QWORD PTR [rip+0x6748]        # 0x14000a5d8
   140003e90:	mov    DWORD PTR [rsp+0x20],eax
   140003e94:	call   0x140005524
   140003e99:	mov    r9d,DWORD PTR [rsp+0x4c]
   140003e9e:	mov    eax,r9d
   140003ea1:	mov    ecx,DWORD PTR [rsp+0x48]
   140003ea5:	or     eax,ecx
   140003ea7:	je     0x140003eb4
   140003ea9:	cmp    DWORD PTR [rbp-0x58],ecx
   140003eac:	jne    0x140003ebd
   140003eae:	cmp    DWORD PTR [rbp-0x54],r9d
   140003eb2:	jne    0x140003ebd
   140003eb4:	test   r12b,r12b
   140003eb7:	je     0x140003f5d
   140003ebd:	test   r12b,r12b
   140003ec0:	jne    0x140003edb
   140003ec2:	mov    DWORD PTR [rsp+0x20],ecx
   140003ec6:	mov    r8d,0x273f
   140003ecc:	mov    rcx,QWORD PTR [rip+0x6705]        # 0x14000a5d8
   140003ed3:	mov    edx,r14d
   140003ed6:	call   0x140005524
   140003edb:	lea    r9,[rsp+0x40]
   140003ee0:	mov    r8b,r13b
   140003ee3:	mov    dl,sil
   140003ee6:	mov    ecx,0x7
   140003eeb:	call   QWORD PTR [rip+0x3467]        # 0x140007358
   140003ef1:	mov    r14d,0xc0000061
   140003ef7:	mov    ebx,eax
   140003ef9:	cmp    eax,r14d
   140003efc:	jne    0x140003f55
   140003efe:	lea    r9,[rsp+0x40]
   140003f03:	mov    r8b,r13b
   140003f06:	mov    dl,sil
   140003f09:	mov    ecx,0x14
   140003f0e:	call   QWORD PTR [rip+0x3444]        # 0x140007358
   140003f14:	mov    ecx,0x80000000
   140003f19:	mov    ebx,eax
   140003f1b:	add    eax,ecx
   140003f1d:	test   ecx,eax
   140003f1f:	jne    0x140003f2a
   140003f21:	cmp    ebx,r14d
   140003f24:	jne    0x1400041f6
   140003f2a:	lea    rcx,[rbp-0x70]
   140003f2e:	call   0x140001008
   140003f33:	mov    ebx,eax
   140003f35:	test   eax,eax
   140003f37:	jns    0x140003f5d
   140003f39:	mov    rcx,QWORD PTR [rip+0x6698]        # 0x14000a5d8
   140003f40:	mov    edx,0xfffffff5
   140003f45:	mov    r8d,0x2740
   140003f4b:	call   0x140005524
   140003f50:	jmp    0x1400041f6
   140003f55:	test   eax,eax
   140003f57:	js     0x1400041f6
   140003f5d:	lea    r8,[rsp+0x54]
   140003f62:	lea    rdx,[rsp+0x70]
   140003f67:	call   0x1400044e4
   140003f6c:	mov    r15,QWORD PTR [rsp+0x70]
   140003f71:	mov    ebx,eax
   140003f73:	test   eax,eax
   140003f75:	js     0x1400041f6
   140003f7b:	mov    esi,DWORD PTR [rsp+0x54]
   140003f7f:	mov    r14,QWORD PTR [rbp-0x80]
   140003f83:	mov    r12,QWORD PTR [rbp-0x78]
   140003f87:	mov    r13,QWORD PTR [rsp+0x60]
   140003f8c:	test   edi,edi
   140003f8e:	je     0x1400041df
   140003f94:	sub    edi,0x1
   140003f97:	je     0x140004197
   140003f9d:	sub    edi,0x1
   140003fa0:	je     0x140004183
   140003fa6:	sub    edi,0x1
   140003fa9:	je     0x1400040eb
   140003faf:	sub    edi,0x1
   140003fb2:	je     0x1400040d7
   140003fb8:	sub    edi,0x1
   140003fbb:	je     0x140003fe3
   140003fbd:	sub    edi,0x1
   140003fc0:	jne    0x140004019
   140003fc2:	mov    r9,r13
   140003fc5:	mov    r8,r12
   140003fc8:	mov    edx,esi
   140003fca:	mov    rcx,r15
   140003fcd:	call   0x140003098
   140003fd2:	mov    ebx,eax
   140003fd4:	test   eax,eax
   140003fd6:	js     0x1400041f6
   140003fdc:	mov    edi,0x7
   140003fe1:	jmp    0x140003f8c
   140003fe3:	mov    eax,DWORD PTR [rsp+0x5c]
   140003fe7:	lea    r8,[rsp+0x48]
   140003fec:	mov    DWORD PTR [rsp+0x28],eax
   140003ff0:	mov    r9,r14
   140003ff3:	mov    eax,DWORD PTR [rsp+0x58]
   140003ff7:	mov    edx,esi
   140003ff9:	mov    rcx,r15
   140003ffc:	mov    DWORD PTR [rsp+0x20],eax
   140004000:	call   0x140002f0c
   140004005:	mov    ebx,eax
   140004007:	test   eax,eax
   140004009:	js     0x1400041f6
   14000400f:	mov    edi,0x1
   140004014:	jmp    0x140003f8c
   140004019:	sub    edi,0x1
   14000401c:	je     0x1400040c8
   140004022:	cmp    edi,0x1
   140004025:	jne    0x1400041f4
   14000402b:	and    QWORD PTR [rsp+0x60],0x0
   140004031:	lea    rax,[rsp+0x58]
   140004036:	and    DWORD PTR [rsp+0x68],0x0
   14000403b:	lea    r9d,[rdi+0x3]
   14000403f:	mov    QWORD PTR [rsp+0x30],rax
   140004044:	lea    r8,[rsp+0x5c]
   140004049:	lea    rax,[rsp+0x68]
   14000404e:	mov    DWORD PTR [rsp+0x5c],0x1d
   140004056:	mov    QWORD PTR [rsp+0x28],rax
   14000405b:	mov    edx,esi
   14000405d:	lea    rax,[rsp+0x60]
   140004062:	mov    rcx,r15
   140004065:	mov    QWORD PTR [rsp+0x20],rax
   14000406a:	call   0x140004fb0
   14000406f:	mov    ebx,eax
   140004071:	test   eax,eax
   140004073:	jns    0x140004083
   140004075:	mov    edx,eax
   140004077:	mov    ecx,0x2754
   14000407c:	call   0x140001978
   140004081:	jmp    0x1400040b2
   140004083:	mov    edx,DWORD PTR [rsp+0x58]
   140004087:	test   edx,edx
   140004089:	jns    0x14000409b
   14000408b:	mov    ecx,0x2755
   140004090:	call   0x140001978
   140004095:	mov    ebx,DWORD PTR [rsp+0x58]
   140004099:	jmp    0x1400040b2
   14000409b:	mov    rcx,QWORD PTR [rip+0x6536]        # 0x14000a5d8
   1400040a2:	mov    edx,0xfffffff5
   1400040a7:	mov    r8d,0x2756
   1400040ad:	call   0x140005524
   1400040b2:	mov    rcx,QWORD PTR [rsp+0x60]
   1400040b7:	test   rcx,rcx
   1400040ba:	je     0x1400040c1
   1400040bc:	call   0x140004da0
   1400040c1:	test   ebx,ebx
   1400040c3:	jmp    0x1400041f2
   1400040c8:	mov    edx,esi
   1400040ca:	mov    rcx,r15
   1400040cd:	call   0x1400035d4
   1400040d2:	jmp    0x1400041ee
   1400040d7:	lea    r8,[rsp+0x48]
   1400040dc:	mov    edx,esi
   1400040de:	mov    rcx,r15
   1400040e1:	call   0x140002bfc
   1400040e6:	jmp    0x1400041ee
   1400040eb:	and    QWORD PTR [rsp+0x60],0x0
   1400040f1:	and    DWORD PTR [rsp+0x54],0x0
   1400040f6:	cmp    DWORD PTR [rsp+0x4c],0x0
   1400040fb:	jne    0x140004172
   1400040fd:	cmp    DWORD PTR [rsp+0x48],0x0
   140004102:	jne    0x140004172
   140004104:	lea    rdx,[rsp+0x60]
   140004109:	lea    rcx,[rsp+0x54]
   14000410e:	call   QWORD PTR [rip+0x3014]        # 0x140007128
   140004114:	mov    ebx,eax
   140004116:	test   eax,eax
   140004118:	jns    0x140004128
   14000411a:	mov    edx,eax
   14000411c:	mov    ecx,0x2749
   140004121:	call   0x140001978
   140004126:	jmp    0x1400040c1
   140004128:	xor    edi,edi
   14000412a:	cmp    DWORD PTR [rsp+0x54],edi
   14000412e:	jbe    0x1400040c1
   140004130:	lea    r15d,[rdi+0x1]
   140004134:	mov    r8d,edi
   140004137:	lea    rdx,[rip+0x3e62]        # 0x140007fa0
   14000413e:	mov    ecx,0xfffffff5
   140004143:	call   0x14000533c
   140004148:	mov    rax,QWORD PTR [rsp+0x60]
   14000414d:	lea    rcx,[rax+rdi*8]
   140004151:	call   0x140002af8
   140004156:	test   ebx,ebx
   140004158:	js     0x14000415f
   14000415a:	test   eax,eax
   14000415c:	cmovs  ebx,eax
   14000415f:	add    edi,r15d
   140004162:	cmp    edi,DWORD PTR [rsp+0x54]
   140004166:	jb     0x140004134
   140004168:	mov    r15,QWORD PTR [rsp+0x70]
   14000416d:	jmp    0x1400040c1
   140004172:	lea    rcx,[rsp+0x48]
   140004177:	call   0x140002af8
   14000417c:	mov    ebx,eax
   14000417e:	jmp    0x1400040c1
   140004183:	xor    r9d,r9d
   140004186:	lea    r8,[rsp+0x48]
   14000418b:	mov    edx,esi
   14000418d:	mov    rcx,r15
   140004190:	call   0x140002028
   140004195:	jmp    0x1400041ee
   140004197:	lea    r8,[rsp+0x48]
   14000419c:	mov    edx,esi
   14000419e:	mov    rcx,r15
   1400041a1:	call   0x140002718
   1400041a6:	mov    edi,0xc00000bb
   1400041ab:	mov    ebx,eax
   1400041ad:	cmp    eax,edi
   1400041af:	jne    0x1400040c1
   1400041b5:	lea    r8,[rsp+0x48]
   1400041ba:	mov    edx,esi
   1400041bc:	mov    rcx,r15
   1400041bf:	call   0x1400024d4
   1400041c4:	mov    ebx,eax
   1400041c6:	cmp    eax,edi
   1400041c8:	jne    0x1400040c1
   1400041ce:	lea    r8,[rsp+0x48]
   1400041d3:	mov    edx,esi
   1400041d5:	mov    rcx,r15
   1400041d8:	call   0x1400022f4
   1400041dd:	jmp    0x14000417c
   1400041df:	lea    r8,[rsp+0x48]
   1400041e4:	mov    edx,esi
   1400041e6:	mov    rcx,r15
   1400041e9:	call   0x140003994
   1400041ee:	test   eax,eax
   1400041f0:	mov    ebx,eax
   1400041f2:	js     0x1400041f6
   1400041f4:	xor    ebx,ebx
   1400041f6:	mov    rcx,QWORD PTR [rsp+0x78]
   1400041fb:	test   rcx,rcx
   1400041fe:	je     0x140004206
   140004200:	call   QWORD PTR [rip+0x2eba]        # 0x1400070c0
   140004206:	test   r15,r15
   140004209:	je     0x140004213
   14000420b:	mov    rcx,r15
   14000420e:	call   0x140004f00
   140004213:	mov    rdi,QWORD PTR [rbp-0x70]
   140004217:	xor    r15d,r15d
   14000421a:	test   rdi,rdi
   14000421d:	je     0x140004260
   14000421f:	cmp    BYTE PTR [rdi+0x8],r15b
   140004223:	je     0x14000424a
   140004225:	cmp    QWORD PTR [rdi],r15
   140004228:	jne    0x140004230
   14000422a:	cmp    QWORD PTR [rdi+0x10],r15
   14000422e:	je     0x14000424a
   140004230:	mov    r9d,0x8
   140004236:	mov    r8,rdi
   140004239:	mov    rcx,0xfffffffffffffffe
   140004240:	lea    edx,[r9-0x3]
   140004244:	call   QWORD PTR [rip+0x313e]        # 0x140007388
   14000424a:	mov    rcx,QWORD PTR [rdi]
   14000424d:	test   rcx,rcx
   140004250:	je     0x140004258
   140004252:	call   QWORD PTR [rip+0x3128]        # 0x140007380
   140004258:	mov    rcx,rdi
   14000425b:	call   0x140005588
   140004260:	test   ebx,ebx
   140004262:	js     0x140004268
   140004264:	xor    eax,eax
   140004266:	jmp    0x1400042a1
   140004268:	lea    r8,[rbp-0x20]
   14000426c:	mov    ecx,ebx
   14000426e:	call   0x14000151c
   140004273:	mov    rcx,QWORD PTR [rip+0x635e]        # 0x14000a5d8
   14000427a:	lea    r9,[rbp-0x20]
   14000427e:	mov    edx,0xfffffff5
   140004283:	mov    r8d,0x2741
   140004289:	call   0x140005524
   14000428e:	mov    eax,ebx
   140004290:	and    eax,0x1fff0000
   140004295:	cmp    eax,0x70000
   14000429a:	movzx  eax,bx
   14000429d:	je     0x1400042a1
   14000429f:	mov    eax,ebx
   1400042a1:	mov    rcx,QWORD PTR [rbp+0x1f0]
   1400042a8:	xor    rcx,rsp
   1400042ab:	call   0x1400058e0
   1400042b0:	lea    r11,[rsp+0x300]
   1400042b8:	mov    rbx,QWORD PTR [r11+0x30]
   1400042bc:	mov    rsi,QWORD PTR [r11+0x40]
   1400042c0:	mov    rdi,QWORD PTR [r11+0x48]
   1400042c4:	mov    rsp,r11
   1400042c7:	pop    r15
   1400042c9:	pop    r14
   1400042cb:	pop    r13
   1400042cd:	pop    r12
   1400042cf:	pop    rbp
   1400042d0:	ret    
   1400042d1:	call   0x140001424
   1400042d6:	int3   
   1400042d7:	call   0x140001424
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	int3   
   1400042e1:	int3   
   1400042e2:	int3   
   1400042e3:	int3   
   1400042e4:	mov    QWORD PTR [rsp+0x18],rbx
   1400042e9:	push   rbp
   1400042ea:	push   rsi
   1400042eb:	push   rdi
   1400042ec:	push   r14
   1400042ee:	push   r15
   1400042f0:	lea    rbp,[rsp-0x37]
   1400042f5:	sub    rsp,0xb0
   1400042fc:	mov    rax,QWORD PTR [rip+0x5d05]        # 0x14000a008
   140004303:	xor    rax,rsp
   140004306:	mov    QWORD PTR [rbp+0x27],rax
   14000430a:	xor    esi,esi
   14000430c:	lea    rax,[rbp-0x49]
   140004310:	and    DWORD PTR [rbp-0x49],esi
   140004313:	mov    rdi,rdx
   140004316:	xor    ebx,ebx
   140004318:	mov    QWORD PTR [rsp+0x20],rax
   14000431d:	and    QWORD PTR [rdx],rbx
   140004320:	xor    r9d,r9d
   140004323:	lea    r14d,[rsi+0x2]
   140004327:	xor    r8d,r8d
   14000432a:	mov    edx,r14d
   14000432d:	mov    r15,rcx
   140004330:	call   QWORD PTR [rip+0x2cea]        # 0x140007020
   140004336:	test   eax,eax
   140004338:	jne    0x14000436b
   14000433a:	call   QWORD PTR [rip+0x2d68]        # 0x1400070a8
   140004340:	cmp    eax,0x7a
   140004343:	jne    0x1400044a5
   140004349:	mov    ecx,DWORD PTR [rbp-0x49]
   14000434c:	call   0x140005548
   140004351:	mov    rbx,rax
   140004354:	test   rax,rax
   140004357:	je     0x1400044a5
   14000435d:	mov    r8d,DWORD PTR [rbp-0x49]
   140004361:	xor    edx,edx
   140004363:	mov    rcx,rax
   140004366:	call   0x140005fe2
   14000436b:	mov    r9d,DWORD PTR [rbp-0x49]
   14000436f:	lea    rax,[rbp-0x49]
   140004373:	mov    r8,rbx
   140004376:	mov    QWORD PTR [rsp+0x20],rax
   14000437b:	mov    edx,r14d
   14000437e:	mov    rcx,r15
   140004381:	call   QWORD PTR [rip+0x2c99]        # 0x140007020
   140004387:	test   eax,eax
   140004389:	je     0x140004494
   14000438f:	xor    eax,eax
   140004391:	cmp    DWORD PTR [rbx],eax
   140004393:	jbe    0x1400043fb
   140004395:	lea    rcx,[rbx+0x10]
   140004399:	test   DWORD PTR [rcx],0xc0000000
   14000439f:	jne    0x1400043ad
   1400043a1:	inc    eax
   1400043a3:	add    rcx,0x10
   1400043a7:	cmp    eax,DWORD PTR [rbx]
   1400043a9:	jb     0x140004399
   1400043ab:	jmp    0x1400043fb
   1400043ad:	mov    r14d,eax
   1400043b0:	add    r14,r14
   1400043b3:	mov    rcx,QWORD PTR [rbx+r14*8+0x8]
   1400043b8:	call   QWORD PTR [rip+0x2c7a]        # 0x140007038
   1400043be:	mov    ecx,eax
   1400043c0:	mov    DWORD PTR [rbp-0x49],eax
   1400043c3:	call   0x140005548
   1400043c8:	mov    QWORD PTR [rdi],rax
   1400043cb:	test   rax,rax
   1400043ce:	je     0x140004494
   1400043d4:	mov    r8d,DWORD PTR [rbp-0x49]
   1400043d8:	xor    edx,edx
   1400043da:	mov    rcx,rax
   1400043dd:	call   0x140005fe2
   1400043e2:	mov    r8,QWORD PTR [rbx+r14*8+0x8]
   1400043e7:	mov    rdx,QWORD PTR [rdi]
   1400043ea:	mov    ecx,DWORD PTR [rbp-0x49]
   1400043ed:	call   QWORD PTR [rip+0x2c4d]        # 0x140007040
   1400043f3:	test   eax,eax
   1400043f5:	je     0x140004494
   1400043fb:	cmp    QWORD PTR [rdi],rsi
   1400043fe:	jne    0x14000448f
   140004404:	xor    edx,edx
   140004406:	mov    BYTE PTR [rbp-0x39],sil
   14000440a:	lea    rcx,[rbp-0x38]
   14000440e:	lea    r8d,[rdx+0x53]
   140004412:	call   0x140005fe2
   140004417:	mov    r9d,0x54
   14000441d:	lea    rax,[rbp-0x45]
   140004421:	lea    r8,[rbp-0x39]
   140004425:	mov    QWORD PTR [rsp+0x20],rax
   14000442a:	mov    rcx,r15
   14000442d:	lea    edx,[r9-0x53]
   140004431:	call   QWORD PTR [rip+0x2be9]        # 0x140007020
   140004437:	test   eax,eax
   140004439:	je     0x140004494
   14000443b:	mov    rcx,QWORD PTR [rbp-0x39]
   14000443f:	call   QWORD PTR [rip+0x2c03]        # 0x140007048
   140004445:	test   eax,eax
   140004447:	je     0x140004494
   140004449:	mov    rcx,QWORD PTR [rbp-0x39]
   14000444d:	call   QWORD PTR [rip+0x2bfd]        # 0x140007050
   140004453:	mov    cl,BYTE PTR [rax]
   140004455:	call   QWORD PTR [rip+0x2bfd]        # 0x140007058
   14000445b:	mov    ecx,eax
   14000445d:	mov    DWORD PTR [rbp-0x49],eax
   140004460:	call   0x140005548
   140004465:	mov    QWORD PTR [rdi],rax
   140004468:	test   rax,rax
   14000446b:	je     0x140004494
   14000446d:	mov    r8d,DWORD PTR [rbp-0x49]
   140004471:	xor    edx,edx
   140004473:	mov    rcx,rax
   140004476:	call   0x140005fe2
   14000447b:	mov    r8,QWORD PTR [rbp-0x39]
   14000447f:	mov    rdx,QWORD PTR [rdi]
   140004482:	mov    ecx,DWORD PTR [rbp-0x49]
   140004485:	call   QWORD PTR [rip+0x2bb5]        # 0x140007040
   14000448b:	test   eax,eax
   14000448d:	je     0x140004494
   14000448f:	mov    esi,0x1
   140004494:	test   rbx,rbx
   140004497:	je     0x1400044a1
   140004499:	mov    rcx,rbx
   14000449c:	call   0x140005588
   1400044a1:	test   esi,esi
   1400044a3:	jne    0x1400044b6
   1400044a5:	mov    rcx,QWORD PTR [rdi]
   1400044a8:	test   rcx,rcx
   1400044ab:	je     0x1400044b6
   1400044ad:	call   0x140005588
   1400044b2:	and    QWORD PTR [rdi],0x0
   1400044b6:	mov    eax,esi
   1400044b8:	mov    rcx,QWORD PTR [rbp+0x27]
   1400044bc:	xor    rcx,rsp
   1400044bf:	call   0x1400058e0
   1400044c4:	mov    rbx,QWORD PTR [rsp+0xf0]
   1400044cc:	add    rsp,0xb0
   1400044d3:	pop    r15
   1400044d5:	pop    r14
   1400044d7:	pop    rdi
   1400044d8:	pop    rsi
   1400044d9:	pop    rbp
   1400044da:	ret    
   1400044db:	int3   
   1400044dc:	int3   
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	int3   
   1400044e1:	int3   
   1400044e2:	int3   
   1400044e3:	int3   
   1400044e4:	mov    QWORD PTR [rsp+0x8],rcx
   1400044e9:	push   rbp
   1400044ea:	push   rbx
   1400044eb:	push   rsi
   1400044ec:	push   rdi
   1400044ed:	push   r14
   1400044ef:	mov    rbp,rsp
   1400044f2:	sub    rsp,0x30
   1400044f6:	xor    r14d,r14d
   1400044f9:	lea    r9,[rbp+0x30]
   1400044fd:	xor    eax,eax
   1400044ff:	mov    QWORD PTR [rdx],r14
   140004502:	mov    QWORD PTR [rbp-0xe],rax
   140004506:	mov    rdi,r8
   140004509:	mov    DWORD PTR [rbp-0x6],eax
   14000450c:	mov    rsi,rdx
   14000450f:	mov    WORD PTR [rbp-0x2],ax
   140004513:	lea    ebx,[r14+0x7]
   140004517:	or     eax,0xffffffff
   14000451a:	mov    BYTE PTR [rbp+0x30],r14b
   14000451e:	mov    DWORD PTR [r8],eax
   140004521:	mov    ecx,ebx
   140004523:	mov    r8b,0x1
   140004526:	mov    WORD PTR [rbp-0x10],r14w
   14000452b:	mov    dl,r8b
   14000452e:	mov    DWORD PTR [rbp+0x40],r14d
   140004532:	mov    QWORD PTR [rbp+0x48],r14
   140004536:	mov    DWORD PTR [rbp+0x38],eax
   140004539:	call   QWORD PTR [rip+0x2e19]        # 0x140007358
   14000453f:	cmp    eax,0xc000007c
   140004544:	jne    0x140004557
   140004546:	lea    r9,[rbp+0x30]
   14000454a:	xor    r8d,r8d
   14000454d:	mov    dl,0x1
   14000454f:	mov    ecx,ebx
   140004551:	call   QWORD PTR [rip+0x2e01]        # 0x140007358
   140004557:	test   eax,eax
   140004559:	js     0x14000457f
   14000455b:	lea    rdx,[rip+0x3e16]        # 0x140008378
   140004562:	lea    rcx,[rbp-0x10]
   140004566:	call   QWORD PTR [rip+0x2df4]        # 0x140007360
   14000456c:	lea    r8,[rbp+0x40]
   140004570:	lea    rdx,[rbp+0x48]
   140004574:	lea    rcx,[rbp-0x10]
   140004578:	call   0x140004c18
   14000457d:	jmp    0x140004588
   14000457f:	lea    rcx,[rbp+0x48]
   140004583:	call   0x140004e50
   140004588:	lea    rdx,[rip+0x3dd9]        # 0x140008368
   14000458f:	mov    ebx,eax
   140004591:	lea    rcx,[rbp-0x10]
   140004595:	call   QWORD PTR [rip+0x2dc5]        # 0x140007360
   14000459b:	test   ebx,ebx
   14000459d:	js     0x1400045b2
   14000459f:	mov    rcx,QWORD PTR [rbp+0x48]
   1400045a3:	lea    r8,[rbp+0x38]
   1400045a7:	lea    rdx,[rbp-0x10]
   1400045ab:	call   0x140004cdc
   1400045b0:	mov    ebx,eax
   1400045b2:	mov    eax,DWORD PTR [rbp+0x38]
   1400045b5:	mov    DWORD PTR [rdi],eax
   1400045b7:	mov    rax,QWORD PTR [rbp+0x48]
   1400045bb:	mov    QWORD PTR [rsi],rax
   1400045be:	mov    eax,ebx
   1400045c0:	add    rsp,0x30
   1400045c4:	pop    r14
   1400045c6:	pop    rdi
   1400045c7:	pop    rsi
   1400045c8:	pop    rbx
   1400045c9:	pop    rbp
   1400045ca:	ret    
   1400045cb:	int3   
   1400045cc:	int3   
   1400045cd:	int3   
   1400045ce:	int3   
   1400045cf:	int3   
   1400045d0:	int3   
   1400045d1:	int3   
   1400045d2:	int3   
   1400045d3:	int3   
   1400045d4:	mov    r11,rsp
   1400045d7:	mov    QWORD PTR [r11+0x10],rbx
   1400045db:	mov    QWORD PTR [r11+0x18],rdi
   1400045df:	push   rbp
   1400045e0:	lea    rbp,[r11-0x5f]
   1400045e4:	sub    rsp,0x90
   1400045eb:	mov    rax,QWORD PTR [rip+0x5a16]        # 0x14000a008
   1400045f2:	xor    rax,rsp
   1400045f5:	mov    QWORD PTR [rbp+0x4f],rax
   1400045f9:	and    QWORD PTR [rbp-0x9],0x0
   1400045fe:	mov    rbx,rcx
   140004601:	and    QWORD PTR [rbp-0x1],0x0
   140004606:	test   rcx,rcx
   140004609:	je     0x1400046a2
   14000460f:	mov    r9d,0x4
   140004615:	lea    rax,[rbp+0xb]
   140004619:	lea    r8,[rbp+0x7]
   14000461d:	mov    QWORD PTR [r11-0x78],rax
   140004621:	lea    edx,[r9+0x4]
   140004625:	call   QWORD PTR [rip+0x2d45]        # 0x140007370
   14000462b:	mov    edi,eax
   14000462d:	test   eax,eax
   14000462f:	js     0x1400046bf
   140004635:	cmp    DWORD PTR [rbp+0x7],0x1
   140004639:	jne    0x14000469e
   14000463b:	and    QWORD PTR [rbp+0x17],0x0
   140004640:	lea    rax,[rbp+0x3f]
   140004644:	and    DWORD PTR [rbp+0x27],0x0
   140004648:	lea    r8,[rbp+0xf]
   14000464c:	and    QWORD PTR [rbp+0x1f],0x0
   140004651:	mov    edx,0xc
   140004656:	and    QWORD PTR [rbp+0x2f],0x0
   14000465b:	xor    r9d,r9d
   14000465e:	mov    QWORD PTR [rbp+0x37],rax
   140004662:	lea    rax,[rbp-0x1]
   140004666:	mov    QWORD PTR [rsp+0x28],rax
   14000466b:	lea    ecx,[rdx-0xa]
   14000466e:	mov    DWORD PTR [rbp+0xf],0x30
   140004675:	mov    DWORD PTR [rbp+0x43],ecx
   140004678:	mov    DWORD PTR [rsp+0x20],ecx
   14000467c:	mov    rcx,rbx
   14000467f:	mov    DWORD PTR [rbp+0x3f],edx
   140004682:	mov    WORD PTR [rbp+0x47],0x1
   140004688:	call   QWORD PTR [rip+0x2cea]        # 0x140007378
   14000468e:	mov    edi,eax
   140004690:	test   eax,eax
   140004692:	js     0x1400046bf
   140004694:	mov    rax,QWORD PTR [rbp-0x1]
   140004698:	mov    QWORD PTR [rbp-0x9],rax
   14000469c:	jmp    0x1400046a2
   14000469e:	mov    QWORD PTR [rbp-0x9],rbx
   1400046a2:	mov    r9d,0x8
   1400046a8:	lea    r8,[rbp-0x9]
   1400046ac:	mov    rcx,0xfffffffffffffffe
   1400046b3:	lea    edx,[r9-0x3]
   1400046b7:	call   QWORD PTR [rip+0x2ccb]        # 0x140007388
   1400046bd:	mov    edi,eax
   1400046bf:	mov    rcx,QWORD PTR [rbp-0x1]
   1400046c3:	test   rcx,rcx
   1400046c6:	je     0x1400046ce
   1400046c8:	call   QWORD PTR [rip+0x2cb2]        # 0x140007380
   1400046ce:	mov    eax,edi
   1400046d0:	mov    rcx,QWORD PTR [rbp+0x4f]
   1400046d4:	xor    rcx,rsp
   1400046d7:	call   0x1400058e0
   1400046dc:	lea    r11,[rsp+0x90]
   1400046e4:	mov    rbx,QWORD PTR [r11+0x18]
   1400046e8:	mov    rdi,QWORD PTR [r11+0x20]
   1400046ec:	mov    rsp,r11
   1400046ef:	pop    rbp
   1400046f0:	ret    
   1400046f1:	int3   
   1400046f2:	int3   
   1400046f3:	int3   
   1400046f4:	int3   
   1400046f5:	int3   
   1400046f6:	int3   
   1400046f7:	int3   
   1400046f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400046fd:	mov    QWORD PTR [rsp+0x10],rsi
   140004702:	push   rbp
   140004703:	push   rdi
   140004704:	push   r12
   140004706:	push   r14
   140004708:	push   r15
   14000470a:	lea    rbp,[rsp-0x37]
   14000470f:	sub    rsp,0xd0
   140004716:	and    QWORD PTR [rbp-0x61],0x0
   14000471b:	mov    r12,rdx
   14000471e:	and    QWORD PTR [rbp-0x69],0x0
   140004723:	xor    edx,edx
   140004725:	and    QWORD PTR [rbp-0x51],0x0
   14000472a:	mov    r15,rcx
   14000472d:	lea    rcx,[rbp-0x28]
   140004731:	mov    BYTE PTR [rbp-0x29],0x0
   140004735:	lea    r8d,[rdx+0x27]
   140004739:	call   0x140005fe2
   14000473e:	xor    edi,edi
   140004740:	lea    r8,[rbp-0x61]
   140004744:	and    DWORD PTR [rbp+0x77],edi
   140004747:	xor    r14d,r14d
   14000474a:	and    DWORD PTR [rbp+0x7f],edi
   14000474d:	mov    rcx,r15
   140004750:	and    QWORD PTR [rbp-0x41],rdi
   140004754:	xor    sil,sil
   140004757:	and    QWORD PTR [rbp-0x49],rdi
   14000475b:	lea    edx,[rdi+0xe]
   14000475e:	mov    QWORD PTR [rbp-0x39],r14
   140004762:	call   QWORD PTR [rip+0x28b0]        # 0x140007018
   140004768:	test   eax,eax
   14000476a:	jne    0x140004a70
   140004770:	call   QWORD PTR [rip+0x2932]        # 0x1400070a8
   140004776:	movzx  ebx,ax
   140004779:	or     ebx,0x80070000
   14000477f:	test   eax,eax
   140004781:	cmovle ebx,eax
   140004784:	test   ebx,ebx
   140004786:	jns    0x140004a70
   14000478c:	cmp    bx,0x5
   140004790:	jne    0x140004a6c
   140004796:	lea    r8,[rbp-0x69]
   14000479a:	mov    edx,0x60000
   14000479f:	mov    rcx,r15
   1400047a2:	call   QWORD PTR [rip+0x2870]        # 0x140007018
   1400047a8:	test   eax,eax
   1400047aa:	jne    0x1400047cb
   1400047ac:	call   QWORD PTR [rip+0x28f6]        # 0x1400070a8
   1400047b2:	movzx  ebx,ax
   1400047b5:	mov    esi,0x80070000
   1400047ba:	or     ebx,esi
   1400047bc:	test   eax,eax
   1400047be:	cmovle ebx,eax
   1400047c1:	test   ebx,ebx
   1400047c3:	js     0x140004add
   1400047c9:	jmp    0x1400047d0
   1400047cb:	mov    esi,0x80070000
   1400047d0:	mov    ecx,0x400
   1400047d5:	mov    DWORD PTR [rbp+0x77],ecx
   1400047d8:	call   0x140005548
   1400047dd:	mov    rcx,rax
   1400047e0:	mov    rdi,rax
   1400047e3:	neg    rcx
   1400047e6:	sbb    ebx,ebx
   1400047e8:	not    ebx
   1400047ea:	and    ebx,0x8007000e
   1400047f0:	jl     0x140004add
   1400047f6:	mov    r9d,DWORD PTR [rbp+0x77]
   1400047fa:	lea    rax,[rbp+0x77]
   1400047fe:	mov    rcx,QWORD PTR [rbp-0x69]
   140004802:	mov    r8,rdi
   140004805:	mov    edx,0x4
   14000480a:	mov    QWORD PTR [rsp+0x20],rax
   14000480f:	call   QWORD PTR [rip+0x284b]        # 0x140007060
   140004815:	test   eax,eax
   140004817:	jne    0x140004894
   140004819:	call   QWORD PTR [rip+0x2889]        # 0x1400070a8
   14000481f:	movzx  ebx,ax
   140004822:	or     ebx,esi
   140004824:	test   eax,eax
   140004826:	cmovle ebx,eax
   140004829:	test   ebx,ebx
   14000482b:	jns    0x140004894
   14000482d:	cmp    bx,0x7a
   140004831:	jne    0x14000488c
   140004833:	mov    rcx,rdi
   140004836:	call   0x140005588
   14000483b:	mov    ecx,DWORD PTR [rbp+0x77]
   14000483e:	call   0x140005548
   140004843:	mov    rdi,rax
   140004846:	neg    rax
   140004849:	sbb    ebx,ebx
   14000484b:	not    ebx
   14000484d:	and    ebx,0x8007000e
   140004853:	jl     0x140004add
   140004859:	mov    r9d,DWORD PTR [rbp+0x77]
   14000485d:	lea    rax,[rbp+0x77]
   140004861:	mov    rcx,QWORD PTR [rbp-0x69]
   140004865:	mov    r8,rdi
   140004868:	mov    edx,0x4
   14000486d:	mov    QWORD PTR [rsp+0x20],rax
   140004872:	call   QWORD PTR [rip+0x27e8]        # 0x140007060
   140004878:	test   eax,eax
   14000487a:	jne    0x140004894
   14000487c:	call   QWORD PTR [rip+0x2826]        # 0x1400070a8
   140004882:	movzx  ebx,ax
   140004885:	or     ebx,esi
   140004887:	test   eax,eax
   140004889:	cmovle ebx,eax
   14000488c:	test   ebx,ebx
   14000488e:	js     0x140004add
   140004894:	lea    r9,[rbp-0x31]
   140004898:	mov    rcx,rdi
   14000489b:	lea    r8,[rbp-0x41]
   14000489f:	lea    rdx,[rbp+0x7f]
   1400048a3:	call   QWORD PTR [rip+0x27bf]        # 0x140007068
   1400048a9:	test   eax,eax
   1400048ab:	jne    0x1400048c5
   1400048ad:	call   QWORD PTR [rip+0x27f5]        # 0x1400070a8
   1400048b3:	movzx  ebx,ax
   1400048b6:	or     ebx,esi
   1400048b8:	test   eax,eax
   1400048ba:	cmovle ebx,eax
   1400048bd:	test   ebx,ebx
   1400048bf:	js     0x140004add
   1400048c5:	xor    ebx,ebx
   1400048c7:	and    QWORD PTR [rbp-0x59],rbx
   1400048cb:	call   QWORD PTR [rip+0x2827]        # 0x1400070f8
   1400048d1:	lea    r9,[rbp-0x59]
   1400048d5:	mov    edx,0x2000000
   1400048da:	mov    rcx,rax
   1400048dd:	lea    r8d,[rbx+0x1]
   1400048e1:	call   QWORD PTR [rip+0x2729]        # 0x140007010
   1400048e7:	test   eax,eax
   1400048e9:	jne    0x140004914
   1400048eb:	call   QWORD PTR [rip+0x27b7]        # 0x1400070a8
   1400048f1:	cmp    eax,0x3f0
   1400048f6:	jne    0x140004927
   1400048f8:	call   QWORD PTR [rip+0x2802]        # 0x140007100
   1400048fe:	lea    r8,[rbp-0x59]
   140004902:	mov    edx,0x2000000
   140004907:	mov    rcx,rax
   14000490a:	call   QWORD PTR [rip+0x2708]        # 0x140007018
   140004910:	test   eax,eax
   140004912:	je     0x140004927
   140004914:	mov    rcx,QWORD PTR [rbp-0x59]
   140004918:	lea    rdx,[rbp-0x39]
   14000491c:	call   0x1400042e4
   140004921:	mov    r14,QWORD PTR [rbp-0x39]
   140004925:	mov    ebx,eax
   140004927:	mov    rcx,QWORD PTR [rbp-0x59]
   14000492b:	test   rcx,rcx
   14000492e:	je     0x140004936
   140004930:	call   QWORD PTR [rip+0x278a]        # 0x1400070c0
   140004936:	neg    ebx
   140004938:	sbb    ebx,ebx
   14000493a:	not    ebx
   14000493c:	and    ebx,0xc000009a
   140004942:	jl     0x140004add
   140004948:	mov    eax,DWORD PTR [rbp+0x7f]
   14000494b:	lea    rcx,[rbp+0x3]
   14000494f:	neg    eax
   140004951:	sbb    rbx,rbx
   140004954:	xor    edx,edx
   140004956:	and    rbx,QWORD PTR [rbp-0x41]
   14000495a:	lea    r8d,[rdx+0x2c]
   14000495e:	call   0x140005fe2
   140004963:	and    DWORD PTR [rbp+0x7],0x0
   140004967:	lea    rcx,[rbp+0xf]
   14000496b:	mov    rdx,r14
   14000496e:	mov    DWORD PTR [rbp-0x1],0xf01ff
   140004975:	mov    DWORD PTR [rbp+0x3],0x1
   14000497c:	call   QWORD PTR [rip+0x26a6]        # 0x140007028
   140004982:	lea    r9,[rbp-0x49]
   140004986:	mov    r8,rbx
   140004989:	lea    rdx,[rbp-0x1]
   14000498d:	mov    ecx,0x1
   140004992:	call   QWORD PTR [rip+0x2698]        # 0x140007030
   140004998:	test   eax,eax
   14000499a:	jne    0x1400049b4
   14000499c:	call   QWORD PTR [rip+0x2706]        # 0x1400070a8
   1400049a2:	movzx  ebx,ax
   1400049a5:	or     ebx,esi
   1400049a7:	test   eax,eax
   1400049a9:	cmovle ebx,eax
   1400049ac:	test   ebx,ebx
   1400049ae:	js     0x140004add
   1400049b4:	mov    edx,0x1
   1400049b9:	lea    rcx,[rbp-0x29]
   1400049bd:	call   QWORD PTR [rip+0x26ad]        # 0x140007070
   1400049c3:	test   eax,eax
   1400049c5:	jne    0x1400049df
   1400049c7:	call   QWORD PTR [rip+0x26db]        # 0x1400070a8
   1400049cd:	movzx  ebx,ax
   1400049d0:	or     ebx,esi
   1400049d2:	test   eax,eax
   1400049d4:	cmovle ebx,eax
   1400049d7:	test   ebx,ebx
   1400049d9:	js     0x140004add
   1400049df:	mov    r8,QWORD PTR [rbp-0x49]
   1400049e3:	lea    rcx,[rbp-0x29]
   1400049e7:	xor    r9d,r9d
   1400049ea:	lea    edx,[r9+0x1]
   1400049ee:	call   QWORD PTR [rip+0x2684]        # 0x140007078
   1400049f4:	test   eax,eax
   1400049f6:	jne    0x140004a10
   1400049f8:	call   QWORD PTR [rip+0x26aa]        # 0x1400070a8
   1400049fe:	movzx  ebx,ax
   140004a01:	or     ebx,esi
   140004a03:	test   eax,eax
   140004a05:	cmovle ebx,eax
   140004a08:	test   ebx,ebx
   140004a0a:	js     0x140004add
   140004a10:	mov    rcx,QWORD PTR [rbp-0x69]
   140004a14:	lea    r8,[rbp-0x29]
   140004a18:	mov    edx,0x4
   140004a1d:	call   QWORD PTR [rip+0x265d]        # 0x140007080
   140004a23:	test   eax,eax
   140004a25:	jne    0x140004a3f
   140004a27:	call   QWORD PTR [rip+0x267b]        # 0x1400070a8
   140004a2d:	movzx  ebx,ax
   140004a30:	or     ebx,esi
   140004a32:	test   eax,eax
   140004a34:	cmovle ebx,eax
   140004a37:	test   ebx,ebx
   140004a39:	js     0x140004add
   140004a3f:	lea    r8,[rbp-0x61]
   140004a43:	mov    edx,0xe
   140004a48:	mov    rcx,r15
   140004a4b:	mov    sil,0x1
   140004a4e:	call   QWORD PTR [rip+0x25c4]        # 0x140007018
   140004a54:	test   eax,eax
   140004a56:	jne    0x140004a70
   140004a58:	call   QWORD PTR [rip+0x264a]        # 0x1400070a8
   140004a5e:	movzx  ebx,ax
   140004a61:	or     ebx,0x80070000
   140004a67:	test   eax,eax
   140004a69:	cmovle ebx,eax
   140004a6c:	test   ebx,ebx
   140004a6e:	js     0x140004ac6
   140004a70:	mov    rcx,QWORD PTR [rbp-0x61]
   140004a74:	lea    rax,[rbp-0x51]
   140004a78:	mov    QWORD PTR [rsp+0x28],rax
   140004a7d:	mov    r9d,0x2
   140004a83:	xor    r8d,r8d
   140004a86:	mov    DWORD PTR [rsp+0x20],0x1
   140004a8e:	mov    edx,0x2000000
   140004a93:	call   QWORD PTR [rip+0x25ef]        # 0x140007088
   140004a99:	test   eax,eax
   140004a9b:	je     0x140004aa1
   140004a9d:	xor    ebx,ebx
   140004a9f:	jmp    0x140004ab9
   140004aa1:	call   QWORD PTR [rip+0x2601]        # 0x1400070a8
   140004aa7:	movzx  ebx,ax
   140004aaa:	or     ebx,0x80070000
   140004ab0:	test   eax,eax
   140004ab2:	cmovle ebx,eax
   140004ab5:	test   ebx,ebx
   140004ab7:	js     0x140004ac6
   140004ab9:	mov    rax,QWORD PTR [rbp-0x51]
   140004abd:	and    QWORD PTR [rbp-0x51],0x0
   140004ac2:	mov    QWORD PTR [r12],rax
   140004ac6:	test   sil,sil
   140004ac9:	je     0x140004add
   140004acb:	mov    rcx,QWORD PTR [rbp-0x69]
   140004acf:	mov    r8,rdi
   140004ad2:	mov    edx,0x4
   140004ad7:	call   QWORD PTR [rip+0x25a3]        # 0x140007080
   140004add:	mov    rcx,QWORD PTR [rbp-0x69]
   140004ae1:	test   rcx,rcx
   140004ae4:	je     0x140004aec
   140004ae6:	call   QWORD PTR [rip+0x25d4]        # 0x1400070c0
   140004aec:	mov    rcx,QWORD PTR [rbp-0x51]
   140004af0:	test   rcx,rcx
   140004af3:	je     0x140004afb
   140004af5:	call   QWORD PTR [rip+0x25c5]        # 0x1400070c0
   140004afb:	mov    rcx,QWORD PTR [rbp-0x61]
   140004aff:	test   rcx,rcx
   140004b02:	je     0x140004b0a
   140004b04:	call   QWORD PTR [rip+0x25b6]        # 0x1400070c0
   140004b0a:	test   rdi,rdi
   140004b0d:	je     0x140004b17
   140004b0f:	mov    rcx,rdi
   140004b12:	call   0x140005588
   140004b17:	mov    rcx,QWORD PTR [rbp-0x49]
   140004b1b:	test   rcx,rcx
   140004b1e:	je     0x140004b26
   140004b20:	call   QWORD PTR [rip+0x258a]        # 0x1400070b0
   140004b26:	test   r14,r14
   140004b29:	je     0x140004b33
   140004b2b:	mov    rcx,r14
   140004b2e:	call   0x140005588
   140004b33:	lea    r11,[rsp+0xd0]
   140004b3b:	mov    eax,ebx
   140004b3d:	mov    rbx,QWORD PTR [r11+0x30]
   140004b41:	mov    rsi,QWORD PTR [r11+0x38]
   140004b45:	mov    rsp,r11
   140004b48:	pop    r15
   140004b4a:	pop    r14
   140004b4c:	pop    r12
   140004b4e:	pop    rdi
   140004b4f:	pop    rbp
   140004b50:	ret    
   140004b51:	int3   
   140004b52:	int3   
   140004b53:	int3   
   140004b54:	int3   
   140004b55:	int3   
   140004b56:	int3   
   140004b57:	int3   
   140004b58:	mov    rax,rsp
   140004b5b:	mov    QWORD PTR [rax+0x8],rbx
   140004b5f:	mov    QWORD PTR [rax+0x10],rbp
   140004b63:	mov    QWORD PTR [rax+0x18],rsi
   140004b67:	mov    QWORD PTR [rax+0x20],rdi
   140004b6b:	push   r14
   140004b6d:	sub    rsp,0x20
   140004b71:	mov    r14,rcx
   140004b74:	mov    rbp,rdx
   140004b77:	lea    rcx,[rip+0x380a]        # 0x140008388
   140004b7e:	call   QWORD PTR [rip+0x2544]        # 0x1400070c8
   140004b84:	mov    rdi,rax
   140004b87:	test   rax,rax
   140004b8a:	jne    0x140004ba4
   140004b8c:	call   QWORD PTR [rip+0x2516]        # 0x1400070a8
   140004b92:	movzx  ebx,ax
   140004b95:	or     ebx,0x80070000
   140004b9b:	test   eax,eax
   140004b9d:	cmovle ebx,eax
   140004ba0:	test   ebx,ebx
   140004ba2:	js     0x140004bf5
   140004ba4:	lea    rdx,[rip+0x37f5]        # 0x1400083a0
   140004bab:	mov    rcx,rdi
   140004bae:	call   QWORD PTR [rip+0x2564]        # 0x140007118
   140004bb4:	mov    rsi,rax
   140004bb7:	test   rax,rax
   140004bba:	jne    0x140004bd4
   140004bbc:	call   QWORD PTR [rip+0x24e6]        # 0x1400070a8
   140004bc2:	movzx  ebx,ax
   140004bc5:	or     ebx,0x80070000
   140004bcb:	test   eax,eax
   140004bcd:	cmovle ebx,eax
   140004bd0:	test   ebx,ebx
   140004bd2:	js     0x140004be7
   140004bd4:	mov    rcx,rsi
   140004bd7:	call   QWORD PTR [rip+0x27cb]        # 0x1400073a8
   140004bdd:	mov    rdx,rbp
   140004be0:	mov    rcx,r14
   140004be3:	call   rsi
   140004be5:	mov    ebx,eax
   140004be7:	test   rdi,rdi
   140004bea:	je     0x140004bf5
   140004bec:	mov    rcx,rdi
   140004bef:	call   QWORD PTR [rip+0x24e3]        # 0x1400070d8
   140004bf5:	mov    rbp,QWORD PTR [rsp+0x38]
   140004bfa:	mov    eax,ebx
   140004bfc:	mov    rbx,QWORD PTR [rsp+0x30]
   140004c01:	mov    rsi,QWORD PTR [rsp+0x40]
   140004c06:	mov    rdi,QWORD PTR [rsp+0x48]
   140004c0b:	add    rsp,0x20
   140004c0f:	pop    r14
   140004c11:	ret    
   140004c12:	int3   
   140004c13:	int3   
   140004c14:	int3   
   140004c15:	int3   
   140004c16:	int3   
   140004c17:	int3   
   140004c18:	mov    QWORD PTR [rsp+0x8],rbx
   140004c1d:	mov    QWORD PTR [rsp+0x10],rbp
   140004c22:	mov    QWORD PTR [rsp+0x18],rsi
   140004c27:	push   rdi
   140004c28:	push   r14
   140004c2a:	push   r15
   140004c2c:	sub    rsp,0x20
   140004c30:	mov    r15,rcx
   140004c33:	mov    rbp,r8
   140004c36:	lea    rcx,[rip+0x374b]        # 0x140008388
   140004c3d:	mov    r14,rdx
   140004c40:	call   QWORD PTR [rip+0x2482]        # 0x1400070c8
   140004c46:	mov    rdi,rax
   140004c49:	test   rax,rax
   140004c4c:	jne    0x140004c66
   140004c4e:	call   QWORD PTR [rip+0x2454]        # 0x1400070a8
   140004c54:	movzx  ebx,ax
   140004c57:	or     ebx,0x80070000
   140004c5d:	test   eax,eax
   140004c5f:	cmovle ebx,eax
   140004c62:	test   ebx,ebx
   140004c64:	js     0x140004cba
   140004c66:	lea    rdx,[rip+0x374b]        # 0x1400083b8
   140004c6d:	mov    rcx,rdi
   140004c70:	call   QWORD PTR [rip+0x24a2]        # 0x140007118
   140004c76:	mov    rsi,rax
   140004c79:	test   rax,rax
   140004c7c:	jne    0x140004c96
   140004c7e:	call   QWORD PTR [rip+0x2424]        # 0x1400070a8
   140004c84:	movzx  ebx,ax
   140004c87:	or     ebx,0x80070000
   140004c8d:	test   eax,eax
   140004c8f:	cmovle ebx,eax
   140004c92:	test   ebx,ebx
   140004c94:	js     0x140004cac
   140004c96:	mov    rcx,rsi
   140004c99:	call   QWORD PTR [rip+0x2709]        # 0x1400073a8
   140004c9f:	mov    r8,rbp
   140004ca2:	mov    rdx,r14
   140004ca5:	mov    rcx,r15
   140004ca8:	call   rsi
   140004caa:	mov    ebx,eax
   140004cac:	test   rdi,rdi
   140004caf:	je     0x140004cba
   140004cb1:	mov    rcx,rdi
   140004cb4:	call   QWORD PTR [rip+0x241e]        # 0x1400070d8
   140004cba:	mov    rbp,QWORD PTR [rsp+0x48]
   140004cbf:	mov    eax,ebx
   140004cc1:	mov    rbx,QWORD PTR [rsp+0x40]
   140004cc6:	mov    rsi,QWORD PTR [rsp+0x50]
   140004ccb:	add    rsp,0x20
   140004ccf:	pop    r15
   140004cd1:	pop    r14
   140004cd3:	pop    rdi
   140004cd4:	ret    
   140004cd5:	int3   
   140004cd6:	int3   
   140004cd7:	int3   
   140004cd8:	int3   
   140004cd9:	int3   
   140004cda:	int3   
   140004cdb:	int3   
   140004cdc:	mov    QWORD PTR [rsp+0x8],rbx
   140004ce1:	mov    QWORD PTR [rsp+0x10],rbp
   140004ce6:	mov    QWORD PTR [rsp+0x18],rsi
   140004ceb:	push   rdi
   140004cec:	push   r14
   140004cee:	push   r15
   140004cf0:	sub    rsp,0x20
   140004cf4:	mov    r15,rcx
   140004cf7:	mov    rbp,r8
   140004cfa:	lea    rcx,[rip+0x3687]        # 0x140008388
   140004d01:	mov    r14,rdx
   140004d04:	call   QWORD PTR [rip+0x23be]        # 0x1400070c8
   140004d0a:	mov    rdi,rax
   140004d0d:	test   rax,rax
   140004d10:	jne    0x140004d2a
   140004d12:	call   QWORD PTR [rip+0x2390]        # 0x1400070a8
   140004d18:	movzx  ebx,ax
   140004d1b:	or     ebx,0x80070000
   140004d21:	test   eax,eax
   140004d23:	cmovle ebx,eax
   140004d26:	test   ebx,ebx
   140004d28:	js     0x140004d7e
   140004d2a:	lea    rdx,[rip+0x369f]        # 0x1400083d0
   140004d31:	mov    rcx,rdi
   140004d34:	call   QWORD PTR [rip+0x23de]        # 0x140007118
   140004d3a:	mov    rsi,rax
   140004d3d:	test   rax,rax
   140004d40:	jne    0x140004d5a
   140004d42:	call   QWORD PTR [rip+0x2360]        # 0x1400070a8
   140004d48:	movzx  ebx,ax
   140004d4b:	or     ebx,0x80070000
   140004d51:	test   eax,eax
   140004d53:	cmovle ebx,eax
   140004d56:	test   ebx,ebx
   140004d58:	js     0x140004d70
   140004d5a:	mov    rcx,rsi
   140004d5d:	call   QWORD PTR [rip+0x2645]        # 0x1400073a8
   140004d63:	mov    r8,rbp
   140004d66:	mov    rdx,r14
   140004d69:	mov    rcx,r15
   140004d6c:	call   rsi
   140004d6e:	mov    ebx,eax
   140004d70:	test   rdi,rdi
   140004d73:	je     0x140004d7e
   140004d75:	mov    rcx,rdi
   140004d78:	call   QWORD PTR [rip+0x235a]        # 0x1400070d8
   140004d7e:	mov    rbp,QWORD PTR [rsp+0x48]
   140004d83:	mov    eax,ebx
   140004d85:	mov    rbx,QWORD PTR [rsp+0x40]
   140004d8a:	mov    rsi,QWORD PTR [rsp+0x50]
   140004d8f:	add    rsp,0x20
   140004d93:	pop    r15
   140004d95:	pop    r14
   140004d97:	pop    rdi
   140004d98:	ret    
   140004d99:	int3   
   140004d9a:	int3   
   140004d9b:	int3   
   140004d9c:	int3   
   140004d9d:	int3   
   140004d9e:	int3   
   140004d9f:	int3   
   140004da0:	mov    QWORD PTR [rsp+0x8],rbx
   140004da5:	mov    QWORD PTR [rsp+0x10],rbp
   140004daa:	mov    QWORD PTR [rsp+0x18],rsi
   140004daf:	push   rdi
   140004db0:	sub    rsp,0x20
   140004db4:	mov    rbp,rcx
   140004db7:	lea    rcx,[rip+0x35ca]        # 0x140008388
   140004dbe:	call   QWORD PTR [rip+0x2304]        # 0x1400070c8
   140004dc4:	mov    rdi,rax
   140004dc7:	test   rax,rax
   140004dca:	jne    0x140004de4
   140004dcc:	call   QWORD PTR [rip+0x22d6]        # 0x1400070a8
   140004dd2:	movzx  ebx,ax
   140004dd5:	or     ebx,0x80070000
   140004ddb:	test   eax,eax
   140004ddd:	cmovle ebx,eax
   140004de0:	test   ebx,ebx
   140004de2:	js     0x140004e32
   140004de4:	lea    rdx,[rip+0x3605]        # 0x1400083f0
   140004deb:	mov    rcx,rdi
   140004dee:	call   QWORD PTR [rip+0x2324]        # 0x140007118
   140004df4:	mov    rsi,rax
   140004df7:	test   rax,rax
   140004dfa:	jne    0x140004e14
   140004dfc:	call   QWORD PTR [rip+0x22a6]        # 0x1400070a8
   140004e02:	movzx  ebx,ax
   140004e05:	or     ebx,0x80070000
   140004e0b:	test   eax,eax
   140004e0d:	cmovle ebx,eax
   140004e10:	test   ebx,ebx
   140004e12:	js     0x140004e24
   140004e14:	mov    rcx,rsi
   140004e17:	call   QWORD PTR [rip+0x258b]        # 0x1400073a8
   140004e1d:	mov    rcx,rbp
   140004e20:	call   rsi
   140004e22:	mov    ebx,eax
   140004e24:	test   rdi,rdi
   140004e27:	je     0x140004e32
   140004e29:	mov    rcx,rdi
   140004e2c:	call   QWORD PTR [rip+0x22a6]        # 0x1400070d8
   140004e32:	mov    rbp,QWORD PTR [rsp+0x38]
   140004e37:	mov    eax,ebx
   140004e39:	mov    rbx,QWORD PTR [rsp+0x30]
   140004e3e:	mov    rsi,QWORD PTR [rsp+0x40]
   140004e43:	add    rsp,0x20
   140004e47:	pop    rdi
   140004e48:	ret    
   140004e49:	int3   
   140004e4a:	int3   
   140004e4b:	int3   
   140004e4c:	int3   
   140004e4d:	int3   
   140004e4e:	int3   
   140004e4f:	int3   
   140004e50:	mov    QWORD PTR [rsp+0x8],rbx
   140004e55:	mov    QWORD PTR [rsp+0x10],rbp
   140004e5a:	mov    QWORD PTR [rsp+0x18],rsi
   140004e5f:	push   rdi
   140004e60:	sub    rsp,0x20
   140004e64:	mov    rbp,rcx
   140004e67:	lea    rcx,[rip+0x351a]        # 0x140008388
   140004e6e:	call   QWORD PTR [rip+0x2254]        # 0x1400070c8
   140004e74:	mov    rdi,rax
   140004e77:	test   rax,rax
   140004e7a:	jne    0x140004e94
   140004e7c:	call   QWORD PTR [rip+0x2226]        # 0x1400070a8
   140004e82:	movzx  ebx,ax
   140004e85:	or     ebx,0x80070000
   140004e8b:	test   eax,eax
   140004e8d:	cmovle ebx,eax
   140004e90:	test   ebx,ebx
   140004e92:	js     0x140004ee2
   140004e94:	lea    rdx,[rip+0x356d]        # 0x140008408
   140004e9b:	mov    rcx,rdi
   140004e9e:	call   QWORD PTR [rip+0x2274]        # 0x140007118
   140004ea4:	mov    rsi,rax
   140004ea7:	test   rax,rax
   140004eaa:	jne    0x140004ec4
   140004eac:	call   QWORD PTR [rip+0x21f6]        # 0x1400070a8
   140004eb2:	movzx  ebx,ax
   140004eb5:	or     ebx,0x80070000
   140004ebb:	test   eax,eax
   140004ebd:	cmovle ebx,eax
   140004ec0:	test   ebx,ebx
   140004ec2:	js     0x140004ed4
   140004ec4:	mov    rcx,rsi
   140004ec7:	call   QWORD PTR [rip+0x24db]        # 0x1400073a8
   140004ecd:	mov    rcx,rbp
   140004ed0:	call   rsi
   140004ed2:	mov    ebx,eax
   140004ed4:	test   rdi,rdi
   140004ed7:	je     0x140004ee2
   140004ed9:	mov    rcx,rdi
   140004edc:	call   QWORD PTR [rip+0x21f6]        # 0x1400070d8
   140004ee2:	mov    rbp,QWORD PTR [rsp+0x38]
   140004ee7:	mov    eax,ebx
   140004ee9:	mov    rbx,QWORD PTR [rsp+0x30]
   140004eee:	mov    rsi,QWORD PTR [rsp+0x40]
   140004ef3:	add    rsp,0x20
   140004ef7:	pop    rdi
   140004ef8:	ret    
   140004ef9:	int3   
   140004efa:	int3   
   140004efb:	int3   
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	int3   
   140004eff:	int3   
   140004f00:	mov    QWORD PTR [rsp+0x8],rbx
   140004f05:	mov    QWORD PTR [rsp+0x10],rbp
   140004f0a:	mov    QWORD PTR [rsp+0x18],rsi
   140004f0f:	push   rdi
   140004f10:	sub    rsp,0x20
   140004f14:	mov    rbp,rcx
   140004f17:	lea    rcx,[rip+0x346a]        # 0x140008388
   140004f1e:	call   QWORD PTR [rip+0x21a4]        # 0x1400070c8
   140004f24:	mov    rdi,rax
   140004f27:	test   rax,rax
   140004f2a:	jne    0x140004f44
   140004f2c:	call   QWORD PTR [rip+0x2176]        # 0x1400070a8
   140004f32:	movzx  ebx,ax
   140004f35:	or     ebx,0x80070000
   140004f3b:	test   eax,eax
   140004f3d:	cmovle ebx,eax
   140004f40:	test   ebx,ebx
   140004f42:	js     0x140004f92
   140004f44:	lea    rdx,[rip+0x34d5]        # 0x140008420
   140004f4b:	mov    rcx,rdi
   140004f4e:	call   QWORD PTR [rip+0x21c4]        # 0x140007118
   140004f54:	mov    rsi,rax
   140004f57:	test   rax,rax
   140004f5a:	jne    0x140004f74
   140004f5c:	call   QWORD PTR [rip+0x2146]        # 0x1400070a8
   140004f62:	movzx  ebx,ax
   140004f65:	or     ebx,0x80070000
   140004f6b:	test   eax,eax
   140004f6d:	cmovle ebx,eax
   140004f70:	test   ebx,ebx
   140004f72:	js     0x140004f84
   140004f74:	mov    rcx,rsi
   140004f77:	call   QWORD PTR [rip+0x242b]        # 0x1400073a8
   140004f7d:	mov    rcx,rbp
   140004f80:	call   rsi
   140004f82:	mov    ebx,eax
   140004f84:	test   rdi,rdi
   140004f87:	je     0x140004f92
   140004f89:	mov    rcx,rdi
   140004f8c:	call   QWORD PTR [rip+0x2146]        # 0x1400070d8
   140004f92:	mov    rbp,QWORD PTR [rsp+0x38]
   140004f97:	mov    eax,ebx
   140004f99:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f9e:	mov    rsi,QWORD PTR [rsp+0x40]
   140004fa3:	add    rsp,0x20
   140004fa7:	pop    rdi
   140004fa8:	ret    
   140004fa9:	int3   
   140004faa:	int3   
   140004fab:	int3   
   140004fac:	int3   
   140004fad:	int3   
   140004fae:	int3   
   140004faf:	int3   
   140004fb0:	mov    rax,rsp
   140004fb3:	mov    QWORD PTR [rax+0x8],rbx
   140004fb7:	mov    QWORD PTR [rax+0x10],rbp
   140004fbb:	mov    QWORD PTR [rax+0x18],rsi
   140004fbf:	mov    QWORD PTR [rax+0x20],rdi
   140004fc3:	push   r12
   140004fc5:	push   r14
   140004fc7:	push   r15
   140004fc9:	sub    rsp,0x40
   140004fcd:	mov    r12,rcx
   140004fd0:	mov    ebp,r9d
   140004fd3:	lea    rcx,[rip+0x33ae]        # 0x140008388
   140004fda:	mov    r14,r8
   140004fdd:	mov    r15d,edx
   140004fe0:	call   QWORD PTR [rip+0x20e2]        # 0x1400070c8
   140004fe6:	mov    rdi,rax
   140004fe9:	test   rax,rax
   140004fec:	jne    0x140005006
   140004fee:	call   QWORD PTR [rip+0x20b4]        # 0x1400070a8
   140004ff4:	movzx  ebx,ax
   140004ff7:	or     ebx,0x80070000
   140004ffd:	test   eax,eax
   140004fff:	cmovle ebx,eax
   140005002:	test   ebx,ebx
   140005004:	js     0x140005084
   140005006:	lea    rdx,[rip+0x3433]        # 0x140008440
   14000500d:	mov    rcx,rdi
   140005010:	call   QWORD PTR [rip+0x2102]        # 0x140007118
   140005016:	mov    rsi,rax
   140005019:	test   rax,rax
   14000501c:	jne    0x140005036
   14000501e:	call   QWORD PTR [rip+0x2084]        # 0x1400070a8
   140005024:	movzx  ebx,ax
   140005027:	or     ebx,0x80070000
   14000502d:	test   eax,eax
   14000502f:	cmovle ebx,eax
   140005032:	test   ebx,ebx
   140005034:	js     0x140005076
   140005036:	mov    rcx,rsi
   140005039:	call   QWORD PTR [rip+0x2369]        # 0x1400073a8
   14000503f:	mov    rax,QWORD PTR [rsp+0x90]
   140005047:	mov    r9d,ebp
   14000504a:	mov    QWORD PTR [rsp+0x30],rax
   14000504f:	mov    r8,r14
   140005052:	mov    rax,QWORD PTR [rsp+0x88]
   14000505a:	mov    edx,r15d
   14000505d:	mov    QWORD PTR [rsp+0x28],rax
   140005062:	mov    rcx,r12
   140005065:	mov    rax,QWORD PTR [rsp+0x80]
   14000506d:	mov    QWORD PTR [rsp+0x20],rax
   140005072:	call   rsi
   140005074:	mov    ebx,eax
   140005076:	test   rdi,rdi
   140005079:	je     0x140005084
   14000507b:	mov    rcx,rdi
   14000507e:	call   QWORD PTR [rip+0x2054]        # 0x1400070d8
   140005084:	mov    rbp,QWORD PTR [rsp+0x68]
   140005089:	mov    eax,ebx
   14000508b:	mov    rbx,QWORD PTR [rsp+0x60]
   140005090:	mov    rsi,QWORD PTR [rsp+0x70]
   140005095:	mov    rdi,QWORD PTR [rsp+0x78]
   14000509a:	add    rsp,0x40
   14000509e:	pop    r15
   1400050a0:	pop    r14
   1400050a2:	pop    r12
   1400050a4:	ret    
   1400050a5:	int3   
   1400050a6:	int3   
   1400050a7:	int3   
   1400050a8:	int3   
   1400050a9:	int3   
   1400050aa:	int3   
   1400050ab:	int3   
   1400050ac:	mov    QWORD PTR [rsp+0x18],r8
   1400050b1:	mov    QWORD PTR [rsp+0x20],r9
   1400050b6:	push   rbx
   1400050b7:	push   rbp
   1400050b8:	push   rsi
   1400050b9:	push   rdi
   1400050ba:	sub    rsp,0x28
   1400050be:	xor    ebp,ebp
   1400050c0:	lea    rax,[rdx-0x1]
   1400050c4:	cmp    rax,0x7ffffffe
   1400050ca:	mov    rsi,rcx
   1400050cd:	mov    edi,ebp
   1400050cf:	mov    ecx,0x80070057
   1400050d4:	cmova  edi,ecx
   1400050d7:	test   edi,edi
   1400050d9:	js     0x140005110
   1400050db:	lea    rbx,[rdx-0x1]
   1400050df:	mov    rcx,rsi
   1400050e2:	mov    rdx,rbx
   1400050e5:	lea    r9,[rsp+0x68]
   1400050ea:	mov    edi,ebp
   1400050ec:	call   QWORD PTR [rip+0x2226]        # 0x140007318
   1400050f2:	test   eax,eax
   1400050f4:	js     0x140005105
   1400050f6:	cdqe   
   1400050f8:	cmp    rax,rbx
   1400050fb:	ja     0x140005105
   1400050fd:	jne    0x140005118
   1400050ff:	mov    WORD PTR [rsi+rbx*2],bp
   140005103:	jmp    0x140005118
   140005105:	mov    WORD PTR [rsi+rbx*2],bp
   140005109:	mov    edi,0x8007007a
   14000510e:	jmp    0x140005118
   140005110:	test   rdx,rdx
   140005113:	je     0x140005118
   140005115:	mov    WORD PTR [rsi],bp
   140005118:	mov    eax,edi
   14000511a:	add    rsp,0x28
   14000511e:	pop    rdi
   14000511f:	pop    rsi
   140005120:	pop    rbp
   140005121:	pop    rbx
   140005122:	ret    
   140005123:	int3   
   140005124:	int3   
   140005125:	int3   
   140005126:	int3   
   140005127:	int3   
   140005128:	int3   
   140005129:	int3   
   14000512a:	int3   
   14000512b:	int3   
   14000512c:	mov    QWORD PTR [rsp+0x8],rbx
   140005131:	push   rdi
   140005132:	sub    rsp,0xb0
   140005139:	mov    rax,QWORD PTR [rip+0x4ec8]        # 0x14000a008
   140005140:	xor    rax,rsp
   140005143:	mov    QWORD PTR [rsp+0xa0],rax
   14000514b:	xor    edi,edi
   14000514d:	lea    rcx,[rsp+0x22]
   140005152:	xor    edx,edx
   140005154:	mov    WORD PTR [rsp+0x20],di
   140005159:	lea    r8d,[rdi+0x7e]
   14000515d:	call   0x140005fe2
   140005162:	call   QWORD PTR [rip+0x1fd0]        # 0x140007138
   140005168:	mov    r9d,eax
   14000516b:	lea    r8,[rip+0x32ee]        # 0x140008460
   140005172:	lea    edx,[rdi+0x40]
   140005175:	lea    rcx,[rsp+0x20]
   14000517a:	call   0x1400050ac
   14000517f:	mov    ebx,eax
   140005181:	test   eax,eax
   140005183:	jns    0x1400051a4
   140005185:	lea    ecx,[rdi+0x2]
   140005188:	call   0x140005f18
   14000518d:	mov    rcx,rax
   140005190:	lea    rdx,[rip+0x32d9]        # 0x140008470
   140005197:	mov    r8d,ebx
   14000519a:	call   QWORD PTR [rip+0x2148]        # 0x1400072e8
   1400051a0:	xor    eax,eax
   1400051a2:	jmp    0x1400051be
   1400051a4:	lea    rdx,[rsp+0x20]
   1400051a9:	xor    ecx,ecx
   1400051ab:	call   QWORD PTR [rip+0x20ff]        # 0x1400072b0
   1400051b1:	xor    ecx,ecx
   1400051b3:	call   QWORD PTR [rip+0x1fe7]        # 0x1400071a0
   1400051b9:	mov    eax,0x1
   1400051be:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400051c6:	xor    rcx,rsp
   1400051c9:	call   0x1400058e0
   1400051ce:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400051d6:	add    rsp,0xb0
   1400051dd:	pop    rdi
   1400051de:	ret    
   1400051df:	int3   
   1400051e0:	int3   
   1400051e1:	int3   
   1400051e2:	int3   
   1400051e3:	int3   
   1400051e4:	int3   
   1400051e5:	int3   
   1400051e6:	int3   
   1400051e7:	int3   
   1400051e8:	test   rdx,rdx
   1400051eb:	je     0x140005335
   1400051f1:	mov    QWORD PTR [rsp+0x8],rbx
   1400051f6:	mov    QWORD PTR [rsp+0x18],rbp
   1400051fb:	push   rsi
   1400051fc:	push   rdi
   1400051fd:	push   r14
   1400051ff:	sub    rsp,0x40
   140005203:	and    DWORD PTR [rsp+0x68],0x0
   140005208:	mov    rsi,rdx
   14000520b:	mov    r14d,ecx
   14000520e:	call   QWORD PTR [rip+0x1f24]        # 0x140007138
   140005214:	and    QWORD PTR [rsp+0x38],0x0
   14000521a:	or     rdi,0xffffffffffffffff
   14000521e:	and    QWORD PTR [rsp+0x30],0x0
   140005224:	mov    r9d,edi
   140005227:	and    DWORD PTR [rsp+0x28],0x0
   14000522c:	mov    ecx,eax
   14000522e:	and    QWORD PTR [rsp+0x20],0x0
   140005234:	mov    r8,rsi
   140005237:	xor    edx,edx
   140005239:	mov    ebp,eax
   14000523b:	call   QWORD PTR [rip+0x1fcf]        # 0x140007210
   140005241:	mov    DWORD PTR [rsp+0x68],eax
   140005245:	test   eax,eax
   140005247:	jne    0x140005271
   140005249:	call   QWORD PTR [rip+0x1e59]        # 0x1400070a8
   14000524f:	lea    ecx,[rdi+0x3]
   140005252:	mov    ebx,eax
   140005254:	call   0x140005f18
   140005259:	mov    rcx,rax
   14000525c:	lea    rdx,[rip+0x327d]        # 0x1400084e0
   140005263:	mov    r8d,ebx
   140005266:	call   QWORD PTR [rip+0x207c]        # 0x1400072e8
   14000526c:	jmp    0x140005323
   140005271:	mov    ebx,eax
   140005273:	call   QWORD PTR [rip+0x1f07]        # 0x140007180
   140005279:	mov    r8d,ebx
   14000527c:	xor    edx,edx
   14000527e:	mov    rcx,rax
   140005281:	call   QWORD PTR [rip+0x1ee9]        # 0x140007170
   140005287:	mov    rbx,rax
   14000528a:	test   rax,rax
   14000528d:	jne    0x1400052b2
   14000528f:	lea    ecx,[rax+0x2]
   140005292:	call   0x140005f18
   140005297:	mov    r9d,DWORD PTR [rsp+0x68]
   14000529c:	lea    r8d,[rbx+0x8]
   1400052a0:	mov    rcx,rax
   1400052a3:	lea    rdx,[rip+0x32b6]        # 0x140008560
   1400052aa:	call   QWORD PTR [rip+0x2038]        # 0x1400072e8
   1400052b0:	jmp    0x140005323
   1400052b2:	and    QWORD PTR [rsp+0x38],0x0
   1400052b8:	mov    r9d,edi
   1400052bb:	and    QWORD PTR [rsp+0x30],0x0
   1400052c1:	mov    r8,rsi
   1400052c4:	mov    eax,DWORD PTR [rsp+0x68]
   1400052c8:	xor    edx,edx
   1400052ca:	mov    DWORD PTR [rsp+0x28],eax
   1400052ce:	mov    ecx,ebp
   1400052d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400052d5:	call   QWORD PTR [rip+0x1f35]        # 0x140007210
   1400052db:	mov    DWORD PTR [rsp+0x68],eax
   1400052df:	test   eax,eax
   1400052e1:	je     0x14000530f
   1400052e3:	inc    rdi
   1400052e6:	cmp    BYTE PTR [rbx+rdi*1],0x0
   1400052ea:	jne    0x1400052e3
   1400052ec:	mov    ecx,r14d
   1400052ef:	call   QWORD PTR [rip+0x1ebb]        # 0x1400071b0
   1400052f5:	and    QWORD PTR [rsp+0x20],0x0
   1400052fb:	lea    r9,[rsp+0x68]
   140005300:	mov    rcx,rax
   140005303:	mov    r8d,edi
   140005306:	mov    rdx,rbx
   140005309:	call   QWORD PTR [rip+0x1e51]        # 0x140007160
   14000530f:	call   QWORD PTR [rip+0x1e6b]        # 0x140007180
   140005315:	mov    r8,rbx
   140005318:	xor    edx,edx
   14000531a:	mov    rcx,rax
   14000531d:	call   QWORD PTR [rip+0x1e55]        # 0x140007178
   140005323:	mov    rbx,QWORD PTR [rsp+0x60]
   140005328:	mov    rbp,QWORD PTR [rsp+0x70]
   14000532d:	add    rsp,0x40
   140005331:	pop    r14
   140005333:	pop    rdi
   140005334:	pop    rsi
   140005335:	ret    
   140005336:	int3   
   140005337:	int3   
   140005338:	int3   
   140005339:	int3   
   14000533a:	int3   
   14000533b:	int3   
   14000533c:	mov    rax,rsp
   14000533f:	mov    QWORD PTR [rax+0x10],rdx
   140005343:	mov    QWORD PTR [rax+0x18],r8
   140005347:	mov    QWORD PTR [rax+0x20],r9
   14000534b:	push   rbx
   14000534c:	push   rbp
   14000534d:	push   rsi
   14000534e:	push   rdi
   14000534f:	push   r14
   140005351:	sub    rsp,0x30
   140005355:	mov    rsi,rdx
   140005358:	lea    r14,[rax+0x18]
   14000535c:	mov    edi,ecx
   14000535e:	xor    ebp,ebp
   140005360:	mov    edx,0x4000
   140005365:	lea    ecx,[rbp+0x40]
   140005368:	call   QWORD PTR [rip+0x1d32]        # 0x1400070a0
   14000536e:	mov    rbx,rax
   140005371:	test   rax,rax
   140005374:	je     0x1400053dc
   140005376:	mov    r8,rsi
   140005379:	mov    r9,r14
   14000537c:	mov    esi,0x1fff
   140005381:	mov    rcx,rax
   140005384:	mov    edx,esi
   140005386:	call   QWORD PTR [rip+0x1f8c]        # 0x140007318
   14000538c:	test   eax,eax
   14000538e:	js     0x1400053ac
   140005390:	cdqe   
   140005392:	cmp    rax,rsi
   140005395:	ja     0x1400053ac
   140005397:	jne    0x1400053a0
   140005399:	mov    WORD PTR [rbx+0x3ffe],bp
   1400053a0:	mov    rdx,rbx
   1400053a3:	mov    ecx,edi
   1400053a5:	call   0x1400051e8
   1400053aa:	jmp    0x1400053d3
   1400053ac:	mov    ecx,0x2
   1400053b1:	mov    WORD PTR [rbx+0x3ffe],bp
   1400053b8:	call   0x140005f18
   1400053bd:	mov    rcx,rax
   1400053c0:	lea    rdx,[rip+0x3209]        # 0x1400085d0
   1400053c7:	mov    r8d,0x8007007a
   1400053cd:	call   QWORD PTR [rip+0x1f15]        # 0x1400072e8
   1400053d3:	mov    rcx,rbx
   1400053d6:	call   QWORD PTR [rip+0x1cd4]        # 0x1400070b0
   1400053dc:	add    rsp,0x30
   1400053e0:	pop    r14
   1400053e2:	pop    rdi
   1400053e3:	pop    rsi
   1400053e4:	pop    rbp
   1400053e5:	pop    rbx
   1400053e6:	ret    
   1400053e7:	int3   
   1400053e8:	int3   
   1400053e9:	int3   
   1400053ea:	int3   
   1400053eb:	int3   
   1400053ec:	int3   
   1400053ed:	int3   
   1400053ee:	int3   
   1400053ef:	int3   
   1400053f0:	mov    rax,rsp
   1400053f3:	mov    QWORD PTR [rax+0x8],rbx
   1400053f7:	mov    QWORD PTR [rax+0x10],rbp
   1400053fb:	mov    QWORD PTR [rax+0x18],rsi
   1400053ff:	mov    QWORD PTR [rax+0x20],rdi
   140005403:	push   r12
   140005405:	push   r14
   140005407:	push   r15
   140005409:	sub    rsp,0x20
   14000540d:	mov    ebx,edx
   14000540f:	mov    r14,rcx
   140005412:	mov    edi,0x4000
   140005417:	mov    ecx,0x40
   14000541c:	mov    edx,edi
   14000541e:	mov    r15,r9
   140005421:	mov    ebp,r8d
   140005424:	call   QWORD PTR [rip+0x1c76]        # 0x1400070a0
   14000542a:	xor    r12d,r12d
   14000542d:	mov    rsi,rax
   140005430:	test   rax,rax
   140005433:	je     0x1400054fe
   140005439:	mov    edx,edi
   14000543b:	lea    ecx,[r12+0x40]
   140005440:	call   QWORD PTR [rip+0x1c5a]        # 0x1400070a0
   140005446:	mov    rdi,rax
   140005449:	test   rax,rax
   14000544c:	je     0x1400054e7
   140005452:	mov    r9d,0x2000
   140005458:	mov    r8,rsi
   14000545b:	mov    edx,ebp
   14000545d:	mov    rcx,r14
   140005460:	call   QWORD PTR [rip+0x1d2a]        # 0x140007190
   140005466:	test   eax,eax
   140005468:	jne    0x140005488
   14000546a:	call   QWORD PTR [rip+0x1c38]        # 0x1400070a8
   140005470:	lea    ecx,[r12+0x2]
   140005475:	mov    ebx,eax
   140005477:	call   0x140005f18
   14000547c:	mov    r8d,ebx
   14000547f:	lea    rdx,[rip+0x319a]        # 0x140008620
   140005486:	jmp    0x1400054de
   140005488:	mov    ebp,0x1fff
   14000548d:	mov    r9,r15
   140005490:	mov    edx,ebp
   140005492:	mov    r8,rsi
   140005495:	mov    rcx,rdi
   140005498:	call   QWORD PTR [rip+0x1e7a]        # 0x140007318
   14000549e:	test   eax,eax
   1400054a0:	js     0x1400054bf
   1400054a2:	cdqe   
   1400054a4:	cmp    rax,rbp
   1400054a7:	ja     0x1400054bf
   1400054a9:	jne    0x1400054b3
   1400054ab:	mov    WORD PTR [rdi+0x3ffe],r12w
   1400054b3:	mov    rdx,rdi
   1400054b6:	mov    ecx,ebx
   1400054b8:	call   0x1400051e8
   1400054bd:	jmp    0x1400054e7
   1400054bf:	mov    ecx,0x2
   1400054c4:	mov    WORD PTR [rdi+0x3ffe],r12w
   1400054cc:	call   0x140005f18
   1400054d1:	mov    r8d,0x8007007a
   1400054d7:	lea    rdx,[rip+0x30f2]        # 0x1400085d0
   1400054de:	mov    rcx,rax
   1400054e1:	call   QWORD PTR [rip+0x1e01]        # 0x1400072e8
   1400054e7:	mov    rcx,rsi
   1400054ea:	call   QWORD PTR [rip+0x1bc0]        # 0x1400070b0
   1400054f0:	test   rdi,rdi
   1400054f3:	je     0x1400054fe
   1400054f5:	mov    rcx,rdi
   1400054f8:	call   QWORD PTR [rip+0x1bb2]        # 0x1400070b0
   1400054fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140005503:	mov    rbp,QWORD PTR [rsp+0x48]
   140005508:	mov    rsi,QWORD PTR [rsp+0x50]
   14000550d:	mov    rdi,QWORD PTR [rsp+0x58]
   140005512:	add    rsp,0x20
   140005516:	pop    r15
   140005518:	pop    r14
   14000551a:	pop    r12
   14000551c:	ret    
   14000551d:	int3   
   14000551e:	int3   
   14000551f:	int3   
   140005520:	int3   
   140005521:	int3   
   140005522:	int3   
   140005523:	int3   
   140005524:	mov    DWORD PTR [rsp+0x18],r8d
   140005529:	mov    QWORD PTR [rsp+0x20],r9
   14000552e:	sub    rsp,0x38
   140005532:	lea    r9,[rsp+0x58]
   140005537:	call   0x1400053f0
   14000553c:	add    rsp,0x38
   140005540:	ret    
   140005541:	int3   
   140005542:	int3   
   140005543:	int3   
   140005544:	int3   
   140005545:	int3   
   140005546:	int3   
   140005547:	int3   
   140005548:	mov    QWORD PTR [rsp+0x8],rbx
   14000554d:	push   rdi
   14000554e:	sub    rsp,0x20
   140005552:	mov    rdi,rcx
   140005555:	jmp    0x140005566
   140005557:	mov    rcx,rdi
   14000555a:	call   0x140005bc2
   14000555f:	test   eax,eax
   140005561:	je     0x140005573
   140005563:	mov    rcx,rdi
   140005566:	call   0x140005bb6
   14000556b:	mov    rbx,rax
   14000556e:	test   rax,rax
   140005571:	je     0x140005557
   140005573:	mov    rax,rbx
   140005576:	mov    rbx,QWORD PTR [rsp+0x30]
   14000557b:	add    rsp,0x20
   14000557f:	pop    rdi
   140005580:	ret    
   140005581:	int3   
   140005582:	int3   
   140005583:	int3   
   140005584:	int3   
   140005585:	int3   
   140005586:	int3   
   140005587:	int3   
   140005588:	jmp    0x140005bce
   14000558d:	int3   
   14000558e:	int3   
   14000558f:	int3   
   140005590:	int3   
   140005591:	int3   
   140005592:	int3   
   140005593:	int3   
   140005594:	int3   
   140005595:	int3   
   140005596:	int3   
   140005597:	int3   
   140005598:	int3   
   140005599:	int3   
   14000559a:	int3   
   14000559b:	int3   
   14000559c:	int3   
   14000559d:	int3   
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	sub    rsp,0x28
   1400055a4:	mov    eax,0x5a4d
   1400055a9:	cmp    WORD PTR [rip+0xffffffffffffaa50],ax        # 0x140000000
   1400055b0:	je     0x1400055b6
   1400055b2:	xor    eax,eax
   1400055b4:	jmp    0x140005605
   1400055b6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffaa7f]        # 0x14000003c
   1400055bd:	lea    rax,[rip+0xffffffffffffaa3c]        # 0x140000000
   1400055c4:	add    rcx,rax
   1400055c7:	cmp    DWORD PTR [rcx],0x4550
   1400055cd:	jne    0x1400055b2
   1400055cf:	movzx  eax,WORD PTR [rcx+0x18]
   1400055d3:	cmp    eax,0x10b
   1400055d8:	je     0x1400055f4
   1400055da:	cmp    eax,0x20b
   1400055df:	jne    0x1400055b2
   1400055e1:	xor    eax,eax
   1400055e3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400055ea:	jbe    0x140005605
   1400055ec:	cmp    DWORD PTR [rcx+0xf8],eax
   1400055f2:	jmp    0x140005602
   1400055f4:	xor    eax,eax
   1400055f6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400055fa:	jbe    0x140005605
   1400055fc:	cmp    DWORD PTR [rcx+0xe8],eax
   140005602:	setne  al
   140005605:	mov    ecx,0x1
   14000560a:	mov    DWORD PTR [rip+0x4a30],eax        # 0x14000a040
   140005610:	call   0x140005ca8
   140005615:	mov    ecx,eax
   140005617:	call   QWORD PTR [rip+0x1cf3]        # 0x140007310
   14000561d:	mov    rcx,QWORD PTR [rip+0x1cdc]        # 0x140007300
   140005624:	or     rax,0xffffffffffffffff
   140005628:	mov    QWORD PTR [rip+0x4fb1],rax        # 0x14000a5e0
   14000562f:	mov    QWORD PTR [rip+0x4fb2],rax        # 0x14000a5e8
   140005636:	mov    eax,DWORD PTR [rip+0x4f90]        # 0x14000a5cc
   14000563c:	mov    DWORD PTR [rcx],eax
   14000563e:	mov    rcx,QWORD PTR [rip+0x1c8b]        # 0x1400072d0
   140005645:	mov    eax,DWORD PTR [rip+0x4f75]        # 0x14000a5c0
   14000564b:	mov    DWORD PTR [rcx],eax
   14000564d:	call   0x140005d00
   140005652:	cmp    DWORD PTR [rip+0x49a7],0x0        # 0x14000a000
   140005659:	jne    0x140005668
   14000565b:	lea    rcx,[rip+0x86e]        # 0x140005ed0
   140005662:	call   QWORD PTR [rip+0x1bf0]        # 0x140007258
   140005668:	xor    eax,eax
   14000566a:	add    rsp,0x28
   14000566e:	ret    
   14000566f:	int3   
   140005670:	int3   
   140005671:	int3   
   140005672:	int3   
   140005673:	int3   
   140005674:	int3   
   140005675:	int3   
   140005676:	int3   
   140005677:	int3   
   140005678:	int3   
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	sub    rsp,0x38
   140005684:	mov    eax,DWORD PTR [rip+0x4f3e]        # 0x14000a5c8
   14000568a:	lea    r8,[rip+0x49a7]        # 0x14000a038
   140005691:	mov    r9d,DWORD PTR [rip+0x4f2c]        # 0x14000a5c4
   140005698:	lea    rdx,[rip+0x4991]        # 0x14000a030
   14000569f:	mov    DWORD PTR [rip+0x499f],eax        # 0x14000a044
   1400056a5:	lea    rcx,[rip+0x497c]        # 0x14000a028
   1400056ac:	lea    rax,[rip+0x4991]        # 0x14000a044
   1400056b3:	mov    QWORD PTR [rsp+0x20],rax
   1400056b8:	call   QWORD PTR [rip+0x1bb2]        # 0x140007270
   1400056be:	mov    DWORD PTR [rip+0x4968],eax        # 0x14000a02c
   1400056c4:	add    rsp,0x38
   1400056c8:	ret    
   1400056c9:	int3   
   1400056ca:	int3   
   1400056cb:	int3   
   1400056cc:	int3   
   1400056cd:	int3   
   1400056ce:	int3   
   1400056cf:	int3   
   1400056d0:	mov    rax,rsp
   1400056d3:	mov    QWORD PTR [rax+0x8],rbx
   1400056d7:	mov    QWORD PTR [rax+0x10],rsi
   1400056db:	mov    QWORD PTR [rax+0x18],rdi
   1400056df:	mov    QWORD PTR [rax+0x20],r12
   1400056e3:	push   r14
   1400056e5:	sub    rsp,0x30
   1400056e9:	mov    rax,QWORD PTR gs:0x30
   1400056f2:	mov    rbx,QWORD PTR [rax+0x8]
   1400056f6:	xor    r14d,r14d
   1400056f9:	xor    eax,eax
   1400056fb:	lock cmpxchg QWORD PTR [rip+0x4eec],rbx        # 0x14000a5f0
   140005704:	je     0x140005722
   140005706:	cmp    rax,rbx
   140005709:	jne    0x140005715
   14000570b:	mov    ebx,0x1
   140005710:	mov    r14d,ebx
   140005713:	jmp    0x140005727
   140005715:	mov    ecx,0x3e8
   14000571a:	call   QWORD PTR [rip+0x1b00]        # 0x140007220
   140005720:	jmp    0x1400056f9
   140005722:	mov    ebx,0x1
   140005727:	mov    eax,DWORD PTR [rip+0x4ecb]        # 0x14000a5f8
   14000572d:	cmp    eax,ebx
   14000572f:	jne    0x14000573d
   140005731:	mov    ecx,0x1f
   140005736:	call   0x140005cf4
   14000573b:	jmp    0x1400057a6
   14000573d:	mov    eax,DWORD PTR [rip+0x4eb5]        # 0x14000a5f8
   140005743:	test   eax,eax
   140005745:	jne    0x1400057a0
   140005747:	mov    DWORD PTR [rip+0x4eab],ebx        # 0x14000a5f8
   14000574d:	lea    r12,[rip+0x1c94]        # 0x1400073e8
   140005754:	lea    rdi,[rip+0x1c75]        # 0x1400073d0
   14000575b:	mov    QWORD PTR [rsp+0x28],rdi
   140005760:	mov    DWORD PTR [rsp+0x20],eax
   140005764:	cmp    rdi,r12
   140005767:	jae    0x140005792
   140005769:	test   eax,eax
   14000576b:	jne    0x140005796
   14000576d:	mov    rsi,QWORD PTR [rdi]
   140005770:	test   rsi,rsi
   140005773:	je     0x140005787
   140005775:	mov    rcx,rsi
   140005778:	mov    rax,QWORD PTR [rip+0x1c29]        # 0x1400073a8
   14000577f:	call   rax
   140005781:	call   rsi
   140005783:	mov    DWORD PTR [rsp+0x20],eax
   140005787:	add    rdi,0x8
   14000578b:	mov    QWORD PTR [rsp+0x28],rdi
   140005790:	jmp    0x140005764
   140005792:	test   eax,eax
   140005794:	je     0x1400057a6
   140005796:	mov    eax,0xff
   14000579b:	jmp    0x140005887
   1400057a0:	mov    DWORD PTR [rip+0x487e],ebx        # 0x14000a024
   1400057a6:	mov    eax,DWORD PTR [rip+0x4e4c]        # 0x14000a5f8
   1400057ac:	cmp    eax,ebx
   1400057ae:	jne    0x1400057cd
   1400057b0:	lea    rdx,[rip+0x1c11]        # 0x1400073c8
   1400057b7:	lea    rcx,[rip+0x1bfa]        # 0x1400073b8
   1400057be:	call   0x140005eda
   1400057c3:	mov    DWORD PTR [rip+0x4e2b],0x2        # 0x14000a5f8
   1400057cd:	test   r14d,r14d
   1400057d0:	jne    0x1400057db
   1400057d2:	xor    eax,eax
   1400057d4:	xchg   QWORD PTR [rip+0x4e15],rax        # 0x14000a5f0
   1400057db:	cmp    QWORD PTR [rip+0x4e1d],0x0        # 0x14000a600
   1400057e3:	je     0x140005813
   1400057e5:	lea    rcx,[rip+0x4e14]        # 0x14000a600
   1400057ec:	call   0x140005d60
   1400057f1:	test   eax,eax
   1400057f3:	je     0x140005813
   1400057f5:	mov    rbx,QWORD PTR [rip+0x4e04]        # 0x14000a600
   1400057fc:	mov    rcx,rbx
   1400057ff:	mov    rax,QWORD PTR [rip+0x1ba2]        # 0x1400073a8
   140005806:	call   rax
   140005808:	xor    r8d,r8d
   14000580b:	lea    edx,[r8+0x2]
   14000580f:	xor    ecx,ecx
   140005811:	call   rbx
   140005813:	mov    r8,QWORD PTR [rip+0x481e]        # 0x14000a038
   14000581a:	mov    rdx,QWORD PTR [rip+0x480f]        # 0x14000a030
   140005821:	mov    ecx,DWORD PTR [rip+0x4801]        # 0x14000a028
   140005827:	call   0x140003a60
   14000582c:	mov    DWORD PTR [rip+0x47ee],eax        # 0x14000a020
   140005832:	cmp    DWORD PTR [rip+0x4807],0x0        # 0x14000a040
   140005839:	jne    0x140005843
   14000583b:	mov    ecx,eax
   14000583d:	call   QWORD PTR [rip+0x1ac5]        # 0x140007308
   140005843:	cmp    DWORD PTR [rip+0x47da],0x0        # 0x14000a024
   14000584a:	jne    0x140005858
   14000584c:	call   QWORD PTR [rip+0x1a0e]        # 0x140007260
   140005852:	mov    eax,DWORD PTR [rip+0x47c8]        # 0x14000a020
   140005858:	jmp    0x140005887
   14000585a:	mov    DWORD PTR [rip+0x47c0],eax        # 0x14000a020
   140005860:	cmp    DWORD PTR [rip+0x47d9],0x0        # 0x14000a040
   140005867:	jne    0x140005872
   140005869:	mov    ecx,eax
   14000586b:	call   QWORD PTR [rip+0x19f7]        # 0x140007268
   140005871:	int3   
   140005872:	cmp    DWORD PTR [rip+0x47ab],0x0        # 0x14000a024
   140005879:	jne    0x140005887
   14000587b:	call   QWORD PTR [rip+0x19df]        # 0x140007260
   140005881:	mov    eax,DWORD PTR [rip+0x4799]        # 0x14000a020
   140005887:	mov    rbx,QWORD PTR [rsp+0x40]
   14000588c:	mov    rsi,QWORD PTR [rsp+0x48]
   140005891:	mov    rdi,QWORD PTR [rsp+0x50]
   140005896:	mov    r12,QWORD PTR [rsp+0x58]
   14000589b:	add    rsp,0x30
   14000589f:	pop    r14
   1400058a1:	ret    
   1400058a2:	int3   
   1400058a3:	int3   
   1400058a4:	int3   
   1400058a5:	int3   
   1400058a6:	int3   
   1400058a7:	int3   
   1400058a8:	int3   
   1400058a9:	int3   
   1400058aa:	int3   
   1400058ab:	int3   
   1400058ac:	int3   
   1400058ad:	int3   
   1400058ae:	int3   
   1400058af:	int3   
   1400058b0:	sub    rsp,0x28
   1400058b4:	call   0x140005df4
   1400058b9:	add    rsp,0x28
   1400058bd:	jmp    0x1400056d0
   1400058c2:	int3   
   1400058c3:	int3   
   1400058c4:	int3   
   1400058c5:	int3   
   1400058c6:	int3   
   1400058c7:	int3   
   1400058c8:	int3   
   1400058c9:	int3   
   1400058ca:	int3   
   1400058cb:	int3   
   1400058cc:	int3   
   1400058cd:	int3   
   1400058ce:	int3   
   1400058cf:	int3   
   1400058d0:	int3   
   1400058d1:	int3   
   1400058d2:	int3   
   1400058d3:	int3   
   1400058d4:	int3   
   1400058d5:	int3   
   1400058d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400058e0:	cmp    rcx,QWORD PTR [rip+0x4721]        # 0x14000a008
   1400058e7:	jne    0x1400058f9
   1400058e9:	rol    rcx,0x10
   1400058ed:	test   cx,0xffff
   1400058f2:	jne    0x1400058f5
   1400058f4:	ret    
   1400058f5:	ror    rcx,0x10
   1400058f9:	jmp    0x140005940
   1400058fe:	int3   
   1400058ff:	int3   
   140005900:	int3   
   140005901:	int3   
   140005902:	int3   
   140005903:	int3   
   140005904:	rex push rbx
   140005906:	sub    rsp,0x20
   14000590a:	mov    rbx,rcx
   14000590d:	xor    ecx,ecx
   14000590f:	call   QWORD PTR [rip+0x183b]        # 0x140007150
   140005915:	mov    rcx,rbx
   140005918:	call   QWORD PTR [rip+0x182a]        # 0x140007148
   14000591e:	call   QWORD PTR [rip+0x17dc]        # 0x140007100
   140005924:	mov    rcx,rax
   140005927:	mov    edx,0xc0000409
   14000592c:	add    rsp,0x20
   140005930:	pop    rbx
   140005931:	rex.W jmp QWORD PTR [rip+0x1890]        # 0x1400071c8
   140005938:	int3   
   140005939:	int3   
   14000593a:	int3   
   14000593b:	int3   
   14000593c:	int3   
   14000593d:	int3   
   14000593e:	int3   
   14000593f:	int3   
   140005940:	mov    QWORD PTR [rsp+0x8],rcx
   140005945:	sub    rsp,0x88
   14000594c:	lea    rcx,[rip+0x479d]        # 0x14000a0f0
   140005953:	call   QWORD PTR [rip+0x18a7]        # 0x140007200
   140005959:	mov    rax,QWORD PTR [rip+0x4888]        # 0x14000a1e8
   140005960:	mov    QWORD PTR [rsp+0x48],rax
   140005965:	xor    r8d,r8d
   140005968:	lea    rdx,[rsp+0x50]
   14000596d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005972:	call   QWORD PTR [rip+0x1878]        # 0x1400071f0
   140005978:	mov    QWORD PTR [rsp+0x40],rax
   14000597d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005983:	je     0x1400059c7
   140005985:	mov    QWORD PTR [rsp+0x38],0x0
   14000598e:	lea    rax,[rsp+0x58]
   140005993:	mov    QWORD PTR [rsp+0x30],rax
   140005998:	lea    rax,[rsp+0x60]
   14000599d:	mov    QWORD PTR [rsp+0x28],rax
   1400059a2:	lea    rax,[rip+0x4747]        # 0x14000a0f0
   1400059a9:	mov    QWORD PTR [rsp+0x20],rax
   1400059ae:	mov    r9,QWORD PTR [rsp+0x40]
   1400059b3:	mov    r8,QWORD PTR [rsp+0x48]
   1400059b8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400059bd:	xor    ecx,ecx
   1400059bf:	call   QWORD PTR [rip+0x1833]        # 0x1400071f8
   1400059c5:	jmp    0x1400059ea
   1400059c7:	mov    rax,QWORD PTR [rip+0x47ba]        # 0x14000a188
   1400059ce:	mov    rax,QWORD PTR [rax]
   1400059d1:	mov    QWORD PTR [rip+0x4810],rax        # 0x14000a1e8
   1400059d8:	mov    rax,QWORD PTR [rip+0x47a9]        # 0x14000a188
   1400059df:	add    rax,0x8
   1400059e3:	mov    QWORD PTR [rip+0x479e],rax        # 0x14000a188
   1400059ea:	mov    rax,QWORD PTR [rip+0x47f7]        # 0x14000a1e8
   1400059f1:	mov    QWORD PTR [rip+0x4668],rax        # 0x14000a060
   1400059f8:	mov    rax,QWORD PTR [rsp+0x90]
   140005a00:	mov    QWORD PTR [rip+0x4769],rax        # 0x14000a170
   140005a07:	mov    DWORD PTR [rip+0x463f],0xc0000409        # 0x14000a050
   140005a11:	mov    DWORD PTR [rip+0x4639],0x1        # 0x14000a054
   140005a1b:	mov    DWORD PTR [rip+0x4643],0x3        # 0x14000a068
   140005a25:	mov    eax,0x8
   140005a2a:	imul   rax,rax,0x0
   140005a2e:	lea    rcx,[rip+0x463b]        # 0x14000a070
   140005a35:	mov    QWORD PTR [rcx+rax*1],0x2
   140005a3d:	mov    eax,0x8
   140005a42:	imul   rax,rax,0x1
   140005a46:	lea    rcx,[rip+0x4623]        # 0x14000a070
   140005a4d:	mov    rdx,QWORD PTR [rip+0x45b4]        # 0x14000a008
   140005a54:	mov    QWORD PTR [rcx+rax*1],rdx
   140005a58:	mov    eax,0x8
   140005a5d:	imul   rax,rax,0x2
   140005a61:	lea    rcx,[rip+0x4608]        # 0x14000a070
   140005a68:	mov    rdx,QWORD PTR [rip+0x45a1]        # 0x14000a010
   140005a6f:	mov    QWORD PTR [rcx+rax*1],rdx
   140005a73:	mov    eax,0x8
   140005a78:	imul   rax,rax,0x0
   140005a7c:	mov    rcx,QWORD PTR [rip+0x4585]        # 0x14000a008
   140005a83:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005a88:	mov    eax,0x8
   140005a8d:	imul   rax,rax,0x1
   140005a91:	mov    rcx,QWORD PTR [rip+0x4578]        # 0x14000a010
   140005a98:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005a9d:	lea    rcx,[rip+0x196c]        # 0x140007410
   140005aa4:	call   0x140005904
   140005aa9:	add    rsp,0x88
   140005ab0:	ret    
   140005ab1:	int3   
   140005ab2:	int3   
   140005ab3:	int3   
   140005ab4:	int3   
   140005ab5:	int3   
   140005ab6:	int3   
   140005ab7:	int3   
   140005ab8:	sub    rsp,0x78
   140005abc:	lea    rcx,[rip+0x462d]        # 0x14000a0f0
   140005ac3:	call   QWORD PTR [rip+0x1737]        # 0x140007200
   140005ac9:	mov    rax,QWORD PTR [rip+0x4718]        # 0x14000a1e8
   140005ad0:	mov    QWORD PTR [rsp+0x48],rax
   140005ad5:	xor    r8d,r8d
   140005ad8:	lea    rdx,[rsp+0x50]
   140005add:	mov    rcx,QWORD PTR [rsp+0x48]
   140005ae2:	call   QWORD PTR [rip+0x1708]        # 0x1400071f0
   140005ae8:	mov    QWORD PTR [rsp+0x40],rax
   140005aed:	cmp    QWORD PTR [rsp+0x40],0x0
   140005af3:	je     0x140005b37
   140005af5:	mov    QWORD PTR [rsp+0x38],0x0
   140005afe:	lea    rax,[rsp+0x58]
   140005b03:	mov    QWORD PTR [rsp+0x30],rax
   140005b08:	lea    rax,[rsp+0x60]
   140005b0d:	mov    QWORD PTR [rsp+0x28],rax
   140005b12:	lea    rax,[rip+0x45d7]        # 0x14000a0f0
   140005b19:	mov    QWORD PTR [rsp+0x20],rax
   140005b1e:	mov    r9,QWORD PTR [rsp+0x40]
   140005b23:	mov    r8,QWORD PTR [rsp+0x48]
   140005b28:	mov    rdx,QWORD PTR [rsp+0x50]
   140005b2d:	xor    ecx,ecx
   140005b2f:	call   QWORD PTR [rip+0x16c3]        # 0x1400071f8
   140005b35:	jmp    0x140005b5a
   140005b37:	mov    rax,QWORD PTR [rip+0x464a]        # 0x14000a188
   140005b3e:	mov    rax,QWORD PTR [rax]
   140005b41:	mov    QWORD PTR [rip+0x46a0],rax        # 0x14000a1e8
   140005b48:	mov    rax,QWORD PTR [rip+0x4639]        # 0x14000a188
   140005b4f:	add    rax,0x8
   140005b53:	mov    QWORD PTR [rip+0x462e],rax        # 0x14000a188
   140005b5a:	mov    rax,QWORD PTR [rip+0x4687]        # 0x14000a1e8
   140005b61:	mov    QWORD PTR [rip+0x44f8],rax        # 0x14000a060
   140005b68:	mov    DWORD PTR [rip+0x44de],0xc0000409        # 0x14000a050
   140005b72:	mov    DWORD PTR [rip+0x44d8],0x1        # 0x14000a054
   140005b7c:	mov    DWORD PTR [rip+0x44e2],0x1        # 0x14000a068
   140005b86:	mov    eax,0x8
   140005b8b:	imul   rax,rax,0x0
   140005b8f:	lea    rcx,[rip+0x44da]        # 0x14000a070
   140005b96:	mov    QWORD PTR [rcx+rax*1],0x8
   140005b9e:	lea    rcx,[rip+0x186b]        # 0x140007410
   140005ba5:	call   0x140005904
   140005baa:	add    rsp,0x78
   140005bae:	ret    
   140005baf:	int3   
   140005bb0:	int3   
   140005bb1:	int3   
   140005bb2:	int3   
   140005bb3:	int3   
   140005bb4:	int3   
   140005bb5:	int3   
   140005bb6:	jmp    QWORD PTR [rip+0x16dc]        # 0x140007298
   140005bbc:	int3   
   140005bbd:	int3   
   140005bbe:	int3   
   140005bbf:	int3   
   140005bc0:	int3   
   140005bc1:	int3   
   140005bc2:	jmp    QWORD PTR [rip+0x16c8]        # 0x140007290
   140005bc8:	int3   
   140005bc9:	int3   
   140005bca:	int3   
   140005bcb:	int3   
   140005bcc:	int3   
   140005bcd:	int3   
   140005bce:	jmp    QWORD PTR [rip+0x16b4]        # 0x140007288
   140005bd4:	int3   
   140005bd5:	int3   
   140005bd6:	int3   
   140005bd7:	int3   
   140005bd8:	int3   
   140005bd9:	int3   
   140005bda:	int3   
   140005bdb:	int3   
   140005bdc:	int3   
   140005bdd:	int3   
   140005bde:	int3   
   140005bdf:	int3   
   140005be0:	sub    rsp,0x28
   140005be4:	mov    rax,QWORD PTR [rcx]
   140005be7:	cmp    DWORD PTR [rax],0xe06d7363
   140005bed:	jne    0x140005c12
   140005bef:	cmp    DWORD PTR [rax+0x18],0x4
   140005bf3:	jne    0x140005c12
   140005bf5:	mov    ecx,DWORD PTR [rax+0x20]
   140005bf8:	lea    eax,[rcx-0x19930520]
   140005bfe:	cmp    eax,0x2
   140005c01:	jbe    0x140005c0b
   140005c03:	cmp    ecx,0x1994000
   140005c09:	jne    0x140005c12
   140005c0b:	call   QWORD PTR [rip+0x16b7]        # 0x1400072c8
   140005c11:	int3   
   140005c12:	xor    eax,eax
   140005c14:	add    rsp,0x28
   140005c18:	ret    
   140005c19:	int3   
   140005c1a:	int3   
   140005c1b:	int3   
   140005c1c:	int3   
   140005c1d:	int3   
   140005c1e:	int3   
   140005c1f:	int3   
   140005c20:	sub    rsp,0x28
   140005c24:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005be0
   140005c2b:	call   QWORD PTR [rip+0x151f]        # 0x140007150
   140005c31:	xor    eax,eax
   140005c33:	add    rsp,0x28
   140005c37:	ret    
   140005c38:	int3   
   140005c39:	int3   
   140005c3a:	int3   
   140005c3b:	int3   
   140005c3c:	int3   
   140005c3d:	int3   
   140005c3e:	jmp    QWORD PTR [rip+0x163c]        # 0x140007280
   140005c44:	int3   
   140005c45:	int3   
   140005c46:	int3   
   140005c47:	int3   
   140005c48:	int3   
   140005c49:	int3   
   140005c4a:	int3   
   140005c4b:	int3   
   140005c4c:	sub    rsp,0x18
   140005c50:	xor    edx,edx
   140005c52:	lea    rax,[rcx-0x1]
   140005c56:	cmp    rax,0xfffffffffffffffd
   140005c5a:	ja     0x140005c98
   140005c5c:	mov    eax,0x5a4d
   140005c61:	cmp    WORD PTR [rcx],ax
   140005c64:	jne    0x140005c90
   140005c66:	cmp    DWORD PTR [rcx+0x3c],edx
   140005c69:	jl     0x140005c90
   140005c6b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005c72:	jae    0x140005c90
   140005c74:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005c78:	add    rax,rcx
   140005c7b:	mov    QWORD PTR [rsp],rax
   140005c7f:	cmp    DWORD PTR [rax],0x4550
   140005c85:	cmovne rax,rdx
   140005c89:	mov    rdx,rax
   140005c8c:	mov    QWORD PTR [rsp],rax
   140005c90:	jmp    0x140005c98
   140005c92:	xor    edx,edx
   140005c94:	mov    QWORD PTR [rsp],rdx
   140005c98:	mov    rax,rdx
   140005c9b:	add    rsp,0x18
   140005c9f:	ret    
   140005ca0:	int3   
   140005ca1:	int3   
   140005ca2:	int3   
   140005ca3:	int3   
   140005ca4:	int3   
   140005ca5:	int3   
   140005ca6:	int3   
   140005ca7:	int3   
   140005ca8:	rex push rbx
   140005caa:	sub    rsp,0x20
   140005cae:	mov    ebx,ecx
   140005cb0:	xor    ecx,ecx
   140005cb2:	call   QWORD PTR [rip+0x1438]        # 0x1400070f0
   140005cb8:	test   rax,rax
   140005cbb:	je     0x140005ce5
   140005cbd:	mov    rcx,rax
   140005cc0:	call   0x140005c4c
   140005cc5:	test   rax,rax
   140005cc8:	je     0x140005ce5
   140005cca:	mov    ecx,0x2
   140005ccf:	cmp    WORD PTR [rax+0x5c],cx
   140005cd3:	jne    0x140005cd9
   140005cd5:	mov    eax,ecx
   140005cd7:	jmp    0x140005ce7
   140005cd9:	cmp    WORD PTR [rax+0x5c],0x3
   140005cde:	mov    eax,0x1
   140005ce3:	je     0x140005ce7
   140005ce5:	mov    eax,ebx
   140005ce7:	add    rsp,0x20
   140005ceb:	pop    rbx
   140005cec:	ret    
   140005ced:	int3   
   140005cee:	int3   
   140005cef:	int3   
   140005cf0:	int3   
   140005cf1:	int3   
   140005cf2:	int3   
   140005cf3:	int3   
   140005cf4:	jmp    QWORD PTR [rip+0x15de]        # 0x1400072d8
   140005cfa:	int3   
   140005cfb:	int3   
   140005cfc:	int3   
   140005cfd:	int3   
   140005cfe:	int3   
   140005cff:	int3   
   140005d00:	xor    eax,eax
   140005d02:	ret    
   140005d03:	int3   
   140005d04:	int3   
   140005d05:	int3   
   140005d06:	int3   
   140005d07:	int3   
   140005d08:	int3   
   140005d09:	int3   
   140005d0a:	int3   
   140005d0b:	int3   
   140005d0c:	int3   
   140005d0d:	int3   
   140005d0e:	int3   
   140005d0f:	int3   
   140005d10:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005d14:	xor    r9d,r9d
   140005d17:	add    r8,rcx
   140005d1a:	mov    r10,rdx
   140005d1d:	movzx  eax,WORD PTR [r8+0x14]
   140005d22:	movzx  r11d,WORD PTR [r8+0x6]
   140005d27:	add    rax,0x18
   140005d2b:	add    rax,r8
   140005d2e:	test   r11d,r11d
   140005d31:	je     0x140005d51
   140005d33:	mov    edx,DWORD PTR [rax+0xc]
   140005d36:	cmp    r10,rdx
   140005d39:	jb     0x140005d45
   140005d3b:	mov    ecx,DWORD PTR [rax+0x8]
   140005d3e:	add    ecx,edx
   140005d40:	cmp    r10,rcx
   140005d43:	jb     0x140005d53
   140005d45:	inc    r9d
   140005d48:	add    rax,0x28
   140005d4c:	cmp    r9d,r11d
   140005d4f:	jb     0x140005d33
   140005d51:	xor    eax,eax
   140005d53:	ret    
   140005d54:	int3   
   140005d55:	int3   
   140005d56:	int3   
   140005d57:	int3   
   140005d58:	int3   
   140005d59:	int3   
   140005d5a:	int3   
   140005d5b:	int3   
   140005d5c:	int3   
   140005d5d:	int3   
   140005d5e:	int3   
   140005d5f:	int3   
   140005d60:	mov    QWORD PTR [rsp+0x8],rbx
   140005d65:	push   rdi
   140005d66:	sub    rsp,0x20
   140005d6a:	mov    rbx,rcx
   140005d6d:	lea    rdi,[rip+0xffffffffffffa28c]        # 0x140000000
   140005d74:	mov    rcx,rdi
   140005d77:	call   0x140005dc0
   140005d7c:	test   eax,eax
   140005d7e:	je     0x140005da2
   140005d80:	sub    rbx,rdi
   140005d83:	mov    rdx,rbx
   140005d86:	mov    rcx,rdi
   140005d89:	call   0x140005d10
   140005d8e:	test   rax,rax
   140005d91:	je     0x140005da2
   140005d93:	mov    eax,DWORD PTR [rax+0x24]
   140005d96:	shr    eax,0x1f
   140005d99:	not    eax
   140005d9b:	and    eax,0x1
   140005d9e:	jmp    0x140005da2
   140005da0:	xor    eax,eax
   140005da2:	mov    rbx,QWORD PTR [rsp+0x30]
   140005da7:	add    rsp,0x20
   140005dab:	pop    rdi
   140005dac:	ret    
   140005dad:	int3   
   140005dae:	int3   
   140005daf:	int3   
   140005db0:	int3   
   140005db1:	int3   
   140005db2:	int3   
   140005db3:	int3   
   140005db4:	int3   
   140005db5:	int3   
   140005db6:	int3   
   140005db7:	int3   
   140005db8:	int3   
   140005db9:	int3   
   140005dba:	int3   
   140005dbb:	int3   
   140005dbc:	int3   
   140005dbd:	int3   
   140005dbe:	int3   
   140005dbf:	int3   
   140005dc0:	mov    rax,rcx
   140005dc3:	mov    ecx,0x5a4d
   140005dc8:	cmp    WORD PTR [rax],cx
   140005dcb:	je     0x140005dd0
   140005dcd:	xor    eax,eax
   140005dcf:	ret    
   140005dd0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005dd4:	add    rcx,rax
   140005dd7:	xor    eax,eax
   140005dd9:	cmp    DWORD PTR [rcx],0x4550
   140005ddf:	jne    0x140005ded
   140005de1:	mov    edx,0x20b
   140005de6:	cmp    WORD PTR [rcx+0x18],dx
   140005dea:	sete   al
   140005ded:	ret    
   140005dee:	int3   
   140005def:	int3   
   140005df0:	int3   
   140005df1:	int3   
   140005df2:	int3   
   140005df3:	int3   
   140005df4:	mov    QWORD PTR [rsp+0x20],rbx
   140005df9:	push   rbp
   140005dfa:	mov    rbp,rsp
   140005dfd:	sub    rsp,0x20
   140005e01:	and    QWORD PTR [rbp+0x18],0x0
   140005e06:	movabs rbx,0x2b992ddfa232
   140005e10:	mov    rax,QWORD PTR [rip+0x41f1]        # 0x14000a008
   140005e17:	cmp    rax,rbx
   140005e1a:	jne    0x140005eaf
   140005e20:	lea    rcx,[rbp+0x18]
   140005e24:	call   QWORD PTR [rip+0x140e]        # 0x140007238
   140005e2a:	mov    rax,QWORD PTR [rbp+0x18]
   140005e2e:	mov    QWORD PTR [rbp+0x10],rax
   140005e32:	call   QWORD PTR [rip+0x1398]        # 0x1400071d0
   140005e38:	mov    eax,eax
   140005e3a:	xor    QWORD PTR [rbp+0x10],rax
   140005e3e:	call   QWORD PTR [rip+0x137c]        # 0x1400071c0
   140005e44:	mov    eax,eax
   140005e46:	xor    QWORD PTR [rbp+0x10],rax
   140005e4a:	call   QWORD PTR [rip+0x13e0]        # 0x140007230
   140005e50:	mov    eax,eax
   140005e52:	shl    rax,0x18
   140005e56:	xor    QWORD PTR [rbp+0x10],rax
   140005e5a:	call   QWORD PTR [rip+0x13d0]        # 0x140007230
   140005e60:	mov    eax,eax
   140005e62:	lea    rcx,[rbp+0x10]
   140005e66:	xor    rax,QWORD PTR [rbp+0x10]
   140005e6a:	xor    rax,rcx
   140005e6d:	lea    rcx,[rbp+0x20]
   140005e71:	mov    QWORD PTR [rbp+0x10],rax
   140005e75:	call   QWORD PTR [rip+0x1365]        # 0x1400071e0
   140005e7b:	mov    eax,DWORD PTR [rbp+0x20]
   140005e7e:	movabs rcx,0xffffffffffff
   140005e88:	shl    rax,0x20
   140005e8c:	xor    rax,QWORD PTR [rbp+0x20]
   140005e90:	xor    rax,QWORD PTR [rbp+0x10]
   140005e94:	and    rax,rcx
   140005e97:	movabs rcx,0x2b992ddfa233
   140005ea1:	cmp    rax,rbx
   140005ea4:	cmove  rax,rcx
   140005ea8:	mov    QWORD PTR [rip+0x4159],rax        # 0x14000a008
   140005eaf:	mov    rbx,QWORD PTR [rsp+0x48]
   140005eb4:	not    rax
   140005eb7:	mov    QWORD PTR [rip+0x4152],rax        # 0x14000a010
   140005ebe:	add    rsp,0x20
   140005ec2:	pop    rbp
   140005ec3:	ret    
   140005ec4:	int3   
   140005ec5:	int3   
   140005ec6:	int3   
   140005ec7:	int3   
   140005ec8:	int3   
   140005ec9:	int3   
   140005eca:	int3   
   140005ecb:	int3   
   140005ecc:	int3   
   140005ecd:	int3   
   140005ece:	int3   
   140005ecf:	int3   
   140005ed0:	xor    eax,eax
   140005ed2:	ret    
   140005ed3:	int3   
   140005ed4:	int3   
   140005ed5:	int3   
   140005ed6:	int3   
   140005ed7:	int3   
   140005ed8:	int3   
   140005ed9:	int3   
   140005eda:	jmp    QWORD PTR [rip+0x1398]        # 0x140007278
   140005ee0:	int3   
   140005ee1:	int3   
   140005ee2:	int3   
   140005ee3:	int3   
   140005ee4:	int3   
   140005ee5:	int3   
   140005ee6:	jmp    QWORD PTR [rip+0x13bc]        # 0x1400072a8
   140005eec:	int3   
   140005eed:	int3   
   140005eee:	int3   
   140005eef:	int3   
   140005ef0:	int3   
   140005ef1:	int3   
   140005ef2:	int3   
   140005ef3:	int3   
   140005ef4:	int3   
   140005ef5:	int3   
   140005ef6:	int3   
   140005ef7:	int3   
   140005ef8:	int3   
   140005ef9:	int3   
   140005efa:	int3   
   140005efb:	int3   
   140005efc:	int3   
   140005efd:	int3   
   140005efe:	int3   
   140005eff:	int3   
   140005f00:	ret    0x0
   140005f03:	int3   
   140005f04:	int3   
   140005f05:	int3   
   140005f06:	int3   
   140005f07:	int3   
   140005f08:	int3   
   140005f09:	int3   
   140005f0a:	int3   
   140005f0b:	int3   
   140005f0c:	int3   
   140005f0d:	int3   
   140005f0e:	int3   
   140005f0f:	int3   
   140005f10:	int3   
   140005f11:	int3   
   140005f12:	int3   
   140005f13:	int3   
   140005f14:	int3   
   140005f15:	int3   
   140005f16:	int3   
   140005f17:	int3   
   140005f18:	rex push rbx
   140005f1a:	sub    rsp,0x20
   140005f1e:	mov    ebx,ecx
   140005f20:	call   0x140005f3c
   140005f25:	lea    rdx,[rbx+rbx*2]
   140005f29:	shl    rdx,0x4
   140005f2d:	add    rax,rdx
   140005f30:	add    rsp,0x20
   140005f34:	pop    rbx
   140005f35:	ret    
   140005f36:	int3   
   140005f37:	int3   
   140005f38:	int3   
   140005f39:	int3   
   140005f3a:	int3   
   140005f3b:	int3   
   140005f3c:	jmp    QWORD PTR [rip+0x13de]        # 0x140007320
   140005f42:	int3   
   140005f43:	int3   
   140005f44:	int3   
   140005f45:	int3   
   140005f46:	int3   
   140005f47:	int3   
   140005f48:	sub    rsp,0x28
   140005f4c:	mov    r8,QWORD PTR [r9+0x38]
   140005f50:	mov    rcx,rdx
   140005f53:	mov    rdx,r9
   140005f56:	call   0x140005f6c
   140005f5b:	mov    eax,0x1
   140005f60:	add    rsp,0x28
   140005f64:	ret    
   140005f65:	int3   
   140005f66:	int3   
   140005f67:	int3   
   140005f68:	int3   
   140005f69:	int3   
   140005f6a:	int3   
   140005f6b:	int3   
   140005f6c:	rex push rbx
   140005f6e:	sub    rsp,0x20
   140005f72:	mov    r11d,DWORD PTR [r8]
   140005f75:	mov    rbx,rdx
   140005f78:	and    r11d,0xfffffff8
   140005f7c:	mov    r9,rcx
   140005f7f:	test   BYTE PTR [r8],0x4
   140005f83:	mov    r10,rcx
   140005f86:	je     0x140005f9b
   140005f88:	mov    eax,DWORD PTR [r8+0x8]
   140005f8c:	movsxd r10,DWORD PTR [r8+0x4]
   140005f90:	neg    eax
   140005f92:	add    r10,rcx
   140005f95:	movsxd rcx,eax
   140005f98:	and    r10,rcx
   140005f9b:	movsxd rax,r11d
   140005f9e:	mov    rdx,QWORD PTR [rax+r10*1]
   140005fa2:	mov    rax,QWORD PTR [rbx+0x10]
   140005fa6:	mov    ecx,DWORD PTR [rax+0x8]
   140005fa9:	add    rcx,QWORD PTR [rbx+0x8]
   140005fad:	test   BYTE PTR [rcx+0x3],0xf
   140005fb1:	je     0x140005fbf
   140005fb3:	movzx  eax,BYTE PTR [rcx+0x3]
   140005fb7:	and    eax,0xfffffff0
   140005fba:	cdqe   
   140005fbc:	add    r9,rax
   140005fbf:	xor    r9,rdx
   140005fc2:	mov    rcx,r9
   140005fc5:	add    rsp,0x20
   140005fc9:	pop    rbx
   140005fca:	jmp    0x1400058e0
   140005fcf:	int3   
   140005fd0:	int3   
   140005fd1:	int3   
   140005fd2:	int3   
   140005fd3:	int3   
   140005fd4:	int3   
   140005fd5:	int3   
   140005fd6:	jmp    QWORD PTR [rip+0x12dc]        # 0x1400072b8
   140005fdc:	int3   
   140005fdd:	int3   
   140005fde:	int3   
   140005fdf:	int3   
   140005fe0:	int3   
   140005fe1:	int3   
   140005fe2:	jmp    QWORD PTR [rip+0x1340]        # 0x140007328
   140005fe8:	int3   
   140005fe9:	int3   
   140005fea:	int3   
   140005feb:	int3   
   140005fec:	int3   
   140005fed:	int3   
   140005fee:	int3   
   140005fef:	int3   
   140005ff0:	int3   
   140005ff1:	int3   
   140005ff2:	int3   
   140005ff3:	int3   
   140005ff4:	int3   
   140005ff5:	int3   
   140005ff6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006000:	jmp    rax
   140006002:	int3   
   140006003:	int3   
   140006004:	int3   
   140006005:	int3   
   140006006:	int3   
   140006007:	int3   
   140006008:	int3   
   140006009:	int3   
   14000600a:	int3   
   14000600b:	int3   
   14000600c:	int3   
   14000600d:	int3   
   14000600e:	int3   
   14000600f:	int3   
   140006010:	int3   
   140006011:	int3   
   140006012:	int3   
   140006013:	int3   
   140006014:	int3   
   140006015:	int3   
   140006016:	rex push rbp
   140006018:	sub    rsp,0x20
   14000601c:	mov    rbp,rdx
   14000601f:	mov    rax,QWORD PTR [rcx]
   140006022:	mov    rdx,rcx
   140006025:	mov    ecx,DWORD PTR [rax]
   140006027:	call   0x140005c3e
   14000602c:	nop
   14000602d:	add    rsp,0x20
   140006031:	pop    rbp
   140006032:	ret    
   140006033:	int3   
   140006034:	int3   
   140006035:	int3   
   140006036:	int3   
   140006037:	int3   
   140006038:	int3   
   140006039:	int3   
   14000603a:	int3   
   14000603b:	int3   
   14000603c:	int3   
   14000603d:	int3   
   14000603e:	int3   
   14000603f:	int3   
   140006040:	rex push rbp
   140006042:	sub    rsp,0x20
   140006046:	mov    rbp,rdx
   140006049:	mov    rax,QWORD PTR [rcx]
   14000604c:	xor    ecx,ecx
   14000604e:	cmp    DWORD PTR [rax],0xc0000005
   140006054:	sete   cl
   140006057:	mov    eax,ecx
   140006059:	add    rsp,0x20
   14000605d:	pop    rbp
   14000605e:	ret    
   14000605f:	int3   

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	and    BYTE PTR [rbx+0x0],dl
   140007006:	add    BYTE PTR [rax],al
   140007008:	ss xchg ebx,eax
   14000700a:	add    BYTE PTR [rax],al
   14000700c:	add    BYTE PTR [rax],al
   14000700e:	add    BYTE PTR [rax],al
   140007010:	rex.WRX xchg rbx,rax
   140007012:	add    BYTE PTR [rax],al
   140007014:	add    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax],al
   140007018:	(bad)  
   140007019:	xchg   ebx,eax
   14000701a:	add    BYTE PTR [rax],al
   14000701c:	add    BYTE PTR [rax],al
   14000701e:	add    BYTE PTR [rax],al
   140007020:	je     0x140006fb5
   140007022:	add    BYTE PTR [rax],al
   140007024:	add    BYTE PTR [rax],al
   140007026:	add    BYTE PTR [rax],al
   140007028:	mov    dl,BYTE PTR [rbx+0x0]
   14000702e:	add    BYTE PTR [rax],al
   140007030:	movabs ds:0xb600000000000093,al
   140007039:	xchg   ebx,eax
   14000703a:	add    BYTE PTR [rax],al
   14000703c:	add    BYTE PTR [rax],al
   14000703e:	add    BYTE PTR [rax],al
   140007040:	(bad)  
   140007041:	xchg   ebx,eax
   140007042:	add    BYTE PTR [rax],al
   140007044:	add    BYTE PTR [rax],al
   140007046:	add    BYTE PTR [rax],al
   140007048:	rcl    BYTE PTR [rbx+0x0],1
   14000704e:	add    BYTE PTR [rax],al
   140007050:	ficom  WORD PTR [rbx+0x0]
   140007056:	add    BYTE PTR [rax],al
   140007058:	clc    
   140007059:	xchg   ebx,eax
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	add    BYTE PTR [rax],al
   14000705e:	add    BYTE PTR [rax],al
   140007060:	adc    BYTE PTR [rax+rax*1+0x0],dl
   140007067:	add    BYTE PTR [rdx],ch
   140007069:	xchg   esp,eax
   14000706a:	add    BYTE PTR [rax],al
   14000706c:	add    BYTE PTR [rax],al
   14000706e:	add    BYTE PTR [rax],al
   140007070:	rex.RX xchg esp,eax
   140007072:	add    BYTE PTR [rax],al
   140007074:	add    BYTE PTR [rax],al
   140007076:	add    BYTE PTR [rax],al
   140007078:	xchg   sp,ax
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	add    BYTE PTR [rax],al
   14000707e:	add    BYTE PTR [rax],al
   140007080:	(bad)  
   140007081:	xchg   esp,eax
   140007082:	add    BYTE PTR [rax],al
   140007084:	add    BYTE PTR [rax],al
   140007086:	add    BYTE PTR [rax],al
   140007088:	pushf  
   140007089:	xchg   esp,eax
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	add    BYTE PTR [rax],al
   14000708e:	add    BYTE PTR [rax],al
   140007090:	mov    al,0x94
	...
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	retf   0x94
   1400070a3:	add    BYTE PTR [rax],al
   1400070a5:	add    BYTE PTR [rax],al
   1400070a7:	add    al,bl
   1400070a9:	xchg   esp,eax
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    BYTE PTR [rax],al
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	call   0x140007149
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    ah,dh
   1400070b9:	xchg   esp,eax
   1400070ba:	add    BYTE PTR [rax],al
   1400070bc:	add    BYTE PTR [rax],al
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	or     BYTE PTR [rbp+0x0],dl
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	(bad)  
   1400070c9:	xchg   ebp,eax
   1400070ca:	add    BYTE PTR [rax],al
   1400070cc:	add    BYTE PTR [rax],al
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	es xchg ebp,eax
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	add    BYTE PTR [rax],al
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	cmp    BYTE PTR [rbp+0x0],dl
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	rex.RX xchg ebp,eax
   1400070e2:	add    BYTE PTR [rax],al
   1400070e4:	add    BYTE PTR [rax],al
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	(bad)  
   1400070e9:	xchg   ebp,eax
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	js     0x140007087
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	add    BYTE PTR [rax],al
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	mov    WORD PTR [rbp+0x0],ss
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	movabs al,ds:0xb400000000000095
   140007109:	xchg   ebp,eax
   14000710a:	add    BYTE PTR [rax],al
   14000710c:	add    BYTE PTR [rax],al
   14000710e:	add    BYTE PTR [rax],al
   140007110:	ret    0x95
   140007113:	add    BYTE PTR [rax],al
   140007115:	add    BYTE PTR [rax],al
   140007117:	add    dl,dl
   140007119:	xchg   ebp,eax
	...
   140007126:	add    BYTE PTR [rax],al
   140007128:	and    BYTE PTR [rdi+0x0],dl
	...
   140007136:	add    BYTE PTR [rax],al
   140007138:	fcomp  DWORD PTR [rax+0x0]
	...
   140007146:	add    BYTE PTR [rax],al
   140007148:	stos   BYTE PTR es:[rdi],al
   140007149:	xchg   edi,eax
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	add    BYTE PTR [rax],al
   14000714e:	add    BYTE PTR [rax],al
   140007150:	(bad)  
   140007151:	xchg   edi,eax
	...
   14000715e:	add    BYTE PTR [rax],al
   140007160:	mov    dh,0x98
	...
   14000716e:	add    BYTE PTR [rax],al
   140007170:	push   0x98
   140007175:	add    BYTE PTR [rax],al
   140007177:	add    BYTE PTR [rax+rbx*4+0x0],dh
   14000717b:	add    BYTE PTR [rax],al
   14000717d:	add    BYTE PTR [rax],al
   14000717f:	add    BYTE PTR [rax+0x98],al
	...
   14000718d:	add    BYTE PTR [rax],al
   14000718f:	add    BYTE PTR [rax+0x98],ch
	...
   14000719d:	add    BYTE PTR [rax],al
   14000719f:	add    BYTE PTR [rdx+0x98],dl
	...
   1400071ad:	add    BYTE PTR [rax],al
   1400071af:	add    dh,ch
   1400071b1:	cwde   
	...
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	sub    BYTE PTR [rax+0x0],bl
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	in     al,0x97
   1400071ca:	add    BYTE PTR [rax],al
   1400071cc:	add    BYTE PTR [rax],al
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	adc    bl,BYTE PTR [rax+0x0]
	...
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	clc    
   1400071e1:	xchg   edi,eax
	...
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	jl     0x140007189
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	add    BYTE PTR [rax],al
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	xchg   esi,eax
   1400071f9:	xchg   edi,eax
   1400071fa:	add    BYTE PTR [rax],al
   1400071fc:	add    BYTE PTR [rax],al
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	push   0x97
	...
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    dl,al
   140007211:	cwde   
	...
   14000721e:	add    BYTE PTR [rax],al
   140007220:	(bad)  
   140007221:	xchg   edi,eax
	...
   14000722e:	add    BYTE PTR [rax],al
   140007230:	pop    rax
   140007231:	cwde   
   140007232:	add    BYTE PTR [rax],al
   140007234:	add    BYTE PTR [rax],al
   140007236:	add    BYTE PTR [rax],al
   140007238:	ds cwde 
	...
   140007246:	add    BYTE PTR [rax],al
   140007248:	cmp    al,0x97
	...
   140007256:	add    BYTE PTR [rax],al
   140007258:	mov    dl,0x96
   14000725a:	add    BYTE PTR [rax],al
   14000725c:	add    BYTE PTR [rax],al
   14000725e:	add    BYTE PTR [rax],al
   140007260:	test   al,0x96
   140007262:	add    BYTE PTR [rax],al
   140007264:	add    BYTE PTR [rax],al
   140007266:	add    BYTE PTR [rax],al
   140007268:	movabs al,ds:0x7c00000000000096
   140007271:	xchg   esi,eax
   140007272:	add    BYTE PTR [rax],al
   140007274:	add    BYTE PTR [rax],al
   140007276:	add    BYTE PTR [rax],al
   140007278:	(bad)  
   140007279:	xchg   esi,eax
   14000727a:	add    BYTE PTR [rax],al
   14000727c:	add    BYTE PTR [rax],al
   14000727e:	add    BYTE PTR [rax],al
   140007280:	(bad)  
   140007281:	xchg   esi,eax
   140007282:	add    BYTE PTR [rax],al
   140007284:	add    BYTE PTR [rax],al
   140007286:	add    BYTE PTR [rax],al
   140007288:	pop    rax
   140007289:	xchg   esi,eax
   14000728a:	add    BYTE PTR [rax],al
   14000728c:	add    BYTE PTR [rax],al
   14000728e:	add    BYTE PTR [rax],al
   140007290:	rex.WR xchg rsi,rax
   140007292:	add    BYTE PTR [rax],al
   140007294:	add    BYTE PTR [rax],al
   140007296:	add    BYTE PTR [rax],al
   140007298:	rex.X xchg esi,eax
   14000729a:	add    BYTE PTR [rax],al
   14000729c:	add    BYTE PTR [rax],al
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	cmp    BYTE PTR [rsi+0x0],dl
   1400072a6:	add    BYTE PTR [rax],al
   1400072a8:	rcl    BYTE PTR [rsi+0x0],cl
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	sub    al,0x9c
   1400072b2:	add    BYTE PTR [rax],al
   1400072b4:	add    BYTE PTR [rax],al
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	cmp    bl,BYTE PTR [rax+rax*1+0x0]
   1400072bf:	add    BYTE PTR [rsi],ch
   1400072c1:	xchg   esi,eax
   1400072c2:	add    BYTE PTR [rax],al
   1400072c4:	add    BYTE PTR [rax],al
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	or     al,0x97
   1400072ca:	add    BYTE PTR [rax],al
   1400072cc:	add    BYTE PTR [rax],al
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	hlt    
   1400072d1:	xchg   esi,eax
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	add    BYTE PTR [rax],al
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	outs   dx,BYTE PTR ds:[rsi]
   1400072d9:	xchg   esi,eax
   1400072da:	add    BYTE PTR [rax],al
   1400072dc:	add    BYTE PTR [rax],al
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	and    dl,BYTE PTR [rsi+0x0]
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	(bad)  
   1400072e9:	xchg   esi,eax
   1400072ea:	add    BYTE PTR [rax],al
   1400072ec:	add    BYTE PTR [rax],al
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	or     dl,BYTE PTR [rsi+0x0]
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	cli    
   1400072f9:	xchg   ebp,eax
   1400072fa:	add    BYTE PTR [rax],al
   1400072fc:	add    BYTE PTR [rax],al
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	(bad)  
   140007301:	xchg   esi,eax
   140007302:	add    BYTE PTR [rax],al
   140007304:	add    BYTE PTR [rax],al
   140007306:	add    BYTE PTR [rax],al
   140007308:	repnz xchg ebp,eax
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	add    BYTE PTR [rax],al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	mov    ss,WORD PTR [rsi+0x0]
   140007316:	add    BYTE PTR [rax],al
   140007318:	(bad)  
   140007319:	pushf  
   14000731a:	add    BYTE PTR [rax],al
   14000731c:	add    BYTE PTR [rax],al
   14000731e:	add    BYTE PTR [rax],al
   140007320:	adc    BYTE PTR [rax+rax*1+0x0],bl
   140007327:	add    BYTE PTR [rsp+rbx*4+0x0],al
	...
   140007337:	add    BYTE PTR [rdi+rdx*4+0x0],cl
	...
   140007347:	add    BYTE PTR [rsi-0x65],bh
   14000734a:	add    BYTE PTR [rax],al
   14000734c:	add    BYTE PTR [rax],al
   14000734e:	add    BYTE PTR [rax],al
   140007350:	(bad)  
   140007351:	fwait
   140007352:	add    BYTE PTR [rax],al
   140007354:	add    BYTE PTR [rax],al
   140007356:	add    BYTE PTR [rax],al
   140007358:	mov    dl,0x9b
   14000735a:	add    BYTE PTR [rax],al
   14000735c:	add    BYTE PTR [rax],al
   14000735e:	add    BYTE PTR [rax],al
   140007360:	enter  0x9b,0x0
   140007364:	add    BYTE PTR [rax],al
   140007366:	add    BYTE PTR [rax],al
   140007368:	(bad)  
   140007369:	fwait
   14000736a:	add    BYTE PTR [rax],al
   14000736c:	add    BYTE PTR [rax],al
   14000736e:	add    BYTE PTR [rax],al
   140007370:	fcomp  DWORD PTR [rbx+0x0]
   140007376:	add    BYTE PTR [rax],al
   140007378:	repnz fwait
   14000737a:	add    BYTE PTR [rax],al
   14000737c:	add    BYTE PTR [rax],al
   14000737e:	add    BYTE PTR [rax],al
   140007380:	sub    bl,BYTE PTR [rbx+0x0]
   140007386:	add    BYTE PTR [rax],al
   140007388:	adc    BYTE PTR [rbx+0x0],bl
   14000738e:	add    BYTE PTR [rax],al
   140007390:	rex.W
   140007391:	fwait
   140007392:	add    BYTE PTR [rax],al
   140007394:	add    BYTE PTR [rax],al
   140007396:	add    BYTE PTR [rax],al
   140007398:	xor    al,0x9b
	...
   1400073a6:	add    BYTE PTR [rax],al
   1400073a8:	add    BYTE PTR [rdi+0x0],bl
   1400073ab:	rex add DWORD PTR [rax],eax
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	add    BYTE PTR [rax+0x0],ah
   1400073b3:	rex add DWORD PTR [rax],eax
	...
   1400073be:	add    BYTE PTR [rax],al
   1400073c0:	adc    BYTE PTR [rsi+0x0],0x40
   1400073c4:	add    DWORD PTR [rax],eax
	...
   1400073d6:	add    BYTE PTR [rax],al
   1400073d8:	movabs al,ds:0x2000000001400055
   1400073e1:	pop    rsp
   1400073e2:	add    BYTE PTR [rax+0x1],al
	...
   1400073ed:	add    BYTE PTR [rax],al
   1400073ef:	add    BYTE PTR [rax-0x7fffffab],ah
   1400073f5:	push   rsi
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	mov    al,0x58
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	rex pop rcx
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	loopne 0x14000745d
   140007402:	add    BYTE PTR [rax],al
   140007404:	and    BYTE PTR [rax+rax*1+0x0],bl
   140007408:	rcr    BYTE PTR [rsi+0x0],1
   14000740b:	add    BYTE PTR [rax],al
   14000740d:	pop    rdi
   14000740e:	add    BYTE PTR [rax],al
   140007410:	push   rax
   140007411:	movabs al,ds:0xa0f0000000014000
   14000741a:	add    BYTE PTR [rax+0x1],al
   14000741d:	add    BYTE PTR [rax],al
   14000741f:	add    BYTE PTR [rax],ah
   140007421:	add    BYTE PTR [rax],ah
   140007423:	add    BYTE PTR [rbx+0x0],bl
   140007426:	je     0x140007428
   140007428:	imul   eax,DWORD PTR [rax],0x6b0063
   14000742e:	add    BYTE PTR gs:[rax+rax*1+0x73],dh
   140007433:	add    BYTE PTR [rbp+0x0],bl
   140007436:	and    BYTE PTR [rax],al
   140007438:	pop    rbx
   140007439:	add    BYTE PTR [rip+0x68006c00],ch        # 0x1a800e03f
   14000743f:	add    BYTE PTR [rax],ah
   140007441:	add    BYTE PTR [rax+rax*1],bh
   140007444:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140007448:	add    BYTE PTR [edi+0x0],ch
   14000744c:	outs   dx,BYTE PTR ds:[rsi]
   14000744d:	add    BYTE PTR [rcx+0x0],cl
   140007450:	add    BYTE PTR fs:[rsi],ch
   140007453:	add    BYTE PTR [rax+0x0],cl
   140007456:	imul   eax,DWORD PTR [rax],0x680067
   14000745c:	push   rax
   14000745d:	add    BYTE PTR [rcx+0x0],ah
   140007460:	jb     0x140007462
   140007462:	je     0x140007464
   140007464:	add    BYTE PTR ds:[rbp+0x0],bl
   140007468:	and    BYTE PTR [rax],al
   14000746a:	pop    rbx
   14000746b:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a900e071
   140007471:	add    BYTE PTR [rax],ah
   140007473:	add    BYTE PTR [rax+rax*1],bh
   140007476:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000747a:	add    BYTE PTR [edi+0x0],ch
   14000747e:	outs   dx,BYTE PTR ds:[rsi]
   14000747f:	add    BYTE PTR [rcx+0x0],cl
   140007482:	add    BYTE PTR fs:[rsi],ch
   140007485:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140007489:	add    BYTE PTR [rdi+0x0],dh
   14000748c:	push   rax
   14000748d:	add    BYTE PTR [rcx+0x0],ah
   140007490:	jb     0x140007492
   140007492:	je     0x140007494
   140007494:	add    BYTE PTR ds:[rbp+0x0],bl
   140007498:	or     eax,0xa00
   14000749d:	add    BYTE PTR [rax],al
   14000749f:	add    BYTE PTR [rip+0x7300],ah        # 0x14000e7a5
	...
   1400074ad:	add    BYTE PTR [rax],al
   1400074af:	add    BYTE PTR [rax],ah
   1400074b1:	add    BYTE PTR [rax],ah
   1400074b3:	add    BYTE PTR [rax+rax*1+0x67],dh
   1400074b7:	add    BYTE PTR [rax+rax*1+0x20],dh
   1400074bb:	add    BYTE PTR [rbx+0x0],bl
   1400074be:	sub    eax,0x68006c00
   1400074c3:	add    BYTE PTR [rax],ah
   1400074c5:	add    BYTE PTR [rax+rax*1],bh
   1400074c8:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400074cc:	add    BYTE PTR [edi+0x0],ch
   1400074d0:	outs   dx,BYTE PTR ds:[rsi]
   1400074d1:	add    BYTE PTR [rcx+0x0],cl
   1400074d4:	add    BYTE PTR fs:[rsi],ch
   1400074d7:	add    BYTE PTR [rax+0x0],cl
   1400074da:	imul   eax,DWORD PTR [rax],0x680067
   1400074e0:	push   rax
   1400074e1:	add    BYTE PTR [rcx+0x0],ah
   1400074e4:	jb     0x1400074e6
   1400074e6:	je     0x1400074e8
   1400074e8:	add    BYTE PTR ds:[rbp+0x0],bl
   1400074ec:	and    BYTE PTR [rax],al
   1400074ee:	pop    rbx
   1400074ef:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a900e0f5
   1400074f5:	add    BYTE PTR [rax],ah
   1400074f7:	add    BYTE PTR [rax+rax*1],bh
   1400074fa:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400074fe:	add    BYTE PTR [edi+0x0],ch
   140007502:	outs   dx,BYTE PTR ds:[rsi]
   140007503:	add    BYTE PTR [rcx+0x0],cl
   140007506:	add    BYTE PTR fs:[rsi],ch
   140007509:	add    BYTE PTR [rax+rax*1+0x6f],cl
   14000750d:	add    BYTE PTR [rdi+0x0],dh
   140007510:	push   rax
   140007511:	add    BYTE PTR [rcx+0x0],ah
   140007514:	jb     0x140007516
   140007516:	je     0x140007518
   140007518:	add    BYTE PTR ds:[rbp+0x0],bl
   14000751c:	or     eax,0xa00
	...
   14000752d:	add    BYTE PTR [rax],al
   14000752f:	add    BYTE PTR [rax],ah
   140007531:	add    BYTE PTR [rax],ah
   140007533:	add    BYTE PTR [rax+0x0],dh
   140007536:	jne    0x140007538
   140007538:	jb     0x14000753a
   14000753a:	add    BYTE PTR [ebp+0x0],ah
   14000753e:	and    BYTE PTR [rax],al
   140007540:	pop    rbx
   140007541:	add    BYTE PTR [rip+0x68006c00],ch        # 0x1a800e147
   140007547:	add    BYTE PTR [rax],ah
   140007549:	add    BYTE PTR [rax+rax*1],bh
   14000754c:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140007550:	add    BYTE PTR [edi+0x0],ch
   140007554:	outs   dx,BYTE PTR ds:[rsi]
   140007555:	add    BYTE PTR [rcx+0x0],cl
   140007558:	add    BYTE PTR fs:[rsi],ch
   14000755b:	add    BYTE PTR [rax+0x0],cl
   14000755e:	imul   eax,DWORD PTR [rax],0x680067
   140007564:	push   rax
   140007565:	add    BYTE PTR [rcx+0x0],ah
   140007568:	jb     0x14000756a
   14000756a:	je     0x14000756c
   14000756c:	add    BYTE PTR ds:[rbp+0x0],bl
   140007570:	and    BYTE PTR [rax],al
   140007572:	pop    rbx
   140007573:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a900e179
   140007579:	add    BYTE PTR [rax],ah
   14000757b:	add    BYTE PTR [rax+rax*1],bh
   14000757e:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140007582:	add    BYTE PTR [edi+0x0],ch
   140007586:	outs   dx,BYTE PTR ds:[rsi]
   140007587:	add    BYTE PTR [rcx+0x0],cl
   14000758a:	add    BYTE PTR fs:[rsi],ch
   14000758d:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140007591:	add    BYTE PTR [rdi+0x0],dh
   140007594:	push   rax
   140007595:	add    BYTE PTR [rcx+0x0],ah
   140007598:	jb     0x14000759a
   14000759a:	je     0x14000759c
   14000759c:	add    BYTE PTR ds:[rbp+0x0],bl
   1400075a0:	or     eax,0xa00
	...
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    BYTE PTR [rax],ah
   1400075b1:	add    BYTE PTR [rax],ah
   1400075b3:	add    BYTE PTR [rbx+0x0],dh
   1400075b6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400075ba:	jae    0x1400075bc
   1400075bc:	imul   eax,DWORD PTR [rax],0x6e006f
   1400075c2:	jae    0x1400075c4
   1400075c4:	and    BYTE PTR [rax],al
   1400075c6:	pop    rbx
   1400075c7:	add    BYTE PTR [rip+0x68006c00],ch        # 0x1a800e1cd
   1400075cd:	add    BYTE PTR [rax],ah
   1400075cf:	add    BYTE PTR [rax+rax*1],bh
   1400075d2:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400075d6:	add    BYTE PTR [edi+0x0],ch
   1400075da:	outs   dx,BYTE PTR ds:[rsi]
   1400075db:	add    BYTE PTR [rcx+0x0],cl
   1400075de:	add    BYTE PTR fs:[rsi],ch
   1400075e1:	add    BYTE PTR [rax+0x0],cl
   1400075e4:	imul   eax,DWORD PTR [rax],0x680067
   1400075ea:	push   rax
   1400075eb:	add    BYTE PTR [rcx+0x0],ah
   1400075ee:	jb     0x1400075f0
   1400075f0:	je     0x1400075f2
   1400075f2:	add    BYTE PTR ds:[rbp+0x0],bl
   1400075f6:	and    BYTE PTR [rax],al
   1400075f8:	pop    rbx
   1400075f9:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a900e1ff
   1400075ff:	add    BYTE PTR [rax],ah
   140007601:	add    BYTE PTR [rax+rax*1],bh
   140007604:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140007608:	add    BYTE PTR [edi+0x0],ch
   14000760c:	outs   dx,BYTE PTR ds:[rsi]
   14000760d:	add    BYTE PTR [rcx+0x0],cl
   140007610:	add    BYTE PTR fs:[rsi],ch
   140007613:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140007617:	add    BYTE PTR [rdi+0x0],dh
   14000761a:	push   rax
   14000761b:	add    BYTE PTR [rcx+0x0],ah
   14000761e:	jb     0x140007620
   140007620:	je     0x140007622
   140007622:	add    BYTE PTR ds:[rbp+0x0],bl
   140007626:	or     eax,0xa00
   14000762b:	add    BYTE PTR [rax],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rax],ah
   140007631:	add    BYTE PTR [rax],ah
   140007633:	add    BYTE PTR [rbx+0x0],ch
   140007636:	movsxd eax,DWORD PTR [rax]
   140007638:	add    BYTE PTR fs:[rdi+0x0],bl
   14000763c:	movsxd eax,DWORD PTR [rax]
   14000763e:	(bad)  
   14000763f:	add    BYTE PTR [rbx+0x0],ah
   140007642:	push   0x20006500
   140007647:	add    BYTE PTR [rbx+0x0],bl
   14000764a:	sub    eax,0x68006c00
   14000764f:	add    BYTE PTR [rax],ah
   140007651:	add    BYTE PTR [rax+rax*1],bh
   140007654:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140007658:	add    BYTE PTR [edi+0x0],ch
   14000765c:	outs   dx,BYTE PTR ds:[rsi]
   14000765d:	add    BYTE PTR [rcx+0x0],cl
   140007660:	add    BYTE PTR fs:[rsi],ch
   140007663:	add    BYTE PTR [rax+0x0],cl
   140007666:	imul   eax,DWORD PTR [rax],0x680067
   14000766c:	push   rax
   14000766d:	add    BYTE PTR [rcx+0x0],ah
   140007670:	jb     0x140007672
   140007672:	je     0x140007674
   140007674:	add    BYTE PTR ds:[rbp+0x0],bl
   140007678:	and    BYTE PTR [rax],al
   14000767a:	pop    rbx
   14000767b:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a900e281
   140007681:	add    BYTE PTR [rax],ah
   140007683:	add    BYTE PTR [rax+rax*1],bh
   140007686:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000768a:	add    BYTE PTR [edi+0x0],ch
   14000768e:	outs   dx,BYTE PTR ds:[rsi]
   14000768f:	add    BYTE PTR [rcx+0x0],cl
   140007692:	add    BYTE PTR fs:[rsi],ch
   140007695:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140007699:	add    BYTE PTR [rdi+0x0],dh
   14000769c:	push   rax
   14000769d:	add    BYTE PTR [rcx+0x0],ah
   1400076a0:	jb     0x1400076a2
   1400076a2:	je     0x1400076a4
   1400076a4:	add    BYTE PTR ds:[rbp+0x0],bl
   1400076a8:	or     eax,0xa00
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rax],ah
   1400076b1:	add    BYTE PTR [rax],ah
   1400076b3:	add    BYTE PTR [rdi+0x0],ah
   1400076b6:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   1400076bb:	add    BYTE PTR [rax+rax*1],bh
   1400076be:	push   rbx
   1400076bf:	add    BYTE PTR [rax+0x0],dl
   1400076c2:	rex.WRX add BYTE PTR [rsi],r15b
   1400076c5:	add    BYTE PTR [rax],ah
   1400076c7:	add    BYTE PTR [rbx+0x0],bl
   1400076ca:	sub    eax,0x68006c00
   1400076cf:	add    BYTE PTR [rax],ah
   1400076d1:	add    BYTE PTR [rax+rax*1],bh
   1400076d4:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400076d8:	add    BYTE PTR [edi+0x0],ch
   1400076dc:	outs   dx,BYTE PTR ds:[rsi]
   1400076dd:	add    BYTE PTR [rcx+0x0],cl
   1400076e0:	add    BYTE PTR fs:[rsi],ch
   1400076e3:	add    BYTE PTR [rax+0x0],cl
   1400076e6:	imul   eax,DWORD PTR [rax],0x680067
   1400076ec:	push   rax
   1400076ed:	add    BYTE PTR [rcx+0x0],ah
   1400076f0:	jb     0x1400076f2
   1400076f2:	je     0x1400076f4
   1400076f4:	add    BYTE PTR ds:[rbp+0x0],bl
   1400076f8:	and    BYTE PTR [rax],al
   1400076fa:	pop    rbx
   1400076fb:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a900e301
   140007701:	add    BYTE PTR [rax],ah
   140007703:	add    BYTE PTR [rax+rax*1],bh
   140007706:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14000770a:	add    BYTE PTR [edi+0x0],ch
   14000770e:	outs   dx,BYTE PTR ds:[rsi]
   14000770f:	add    BYTE PTR [rcx+0x0],cl
   140007712:	add    BYTE PTR fs:[rsi],ch
   140007715:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140007719:	add    BYTE PTR [rdi+0x0],dh
   14000771c:	push   rax
   14000771d:	add    BYTE PTR [rcx+0x0],ah
   140007720:	jb     0x140007722
   140007722:	je     0x140007724
   140007724:	add    BYTE PTR ds:[rbp+0x0],bl
   140007728:	or     eax,0xa00
   14000772d:	add    BYTE PTR [rax],al
   14000772f:	add    BYTE PTR [rax],ah
   140007731:	add    BYTE PTR [rax],ah
   140007733:	add    BYTE PTR [rax],ah
   140007735:	add    BYTE PTR [rax],ah
   140007737:	add    BYTE PTR [rax],ah
   140007739:	add    BYTE PTR [rax],ah
   14000773b:	add    BYTE PTR [rax],ah
   14000773d:	add    BYTE PTR [rax],ah
   14000773f:	add    BYTE PTR [rax],ah
   140007741:	add    BYTE PTR [rax],ah
   140007743:	add    BYTE PTR [rax],ah
   140007745:	add    BYTE PTR [rax],ah
   140007747:	add    BYTE PTR [rbx+0x0],bl
   14000774a:	sub    eax,0x64006b00
   14000774f:	add    BYTE PTR [rbx+0x0],ah
   140007752:	outs   dx,DWORD PTR ds:[rsi]
   140007753:	add    BYTE PTR [rax+0x0],dh
   140007756:	je     0x140007758
   140007758:	imul   eax,DWORD PTR [rax],0x6e006f
   14000775e:	jae    0x140007760
   140007760:	and    BYTE PTR [rax],al
   140007762:	cmp    al,0x0
   140007764:	outs   dx,DWORD PTR ds:[rsi]
   140007765:	add    BYTE PTR [rax+0x0],dh
   140007768:	je     0x14000776a
   14000776a:	imul   eax,DWORD PTR [rax],0x6e006f
   140007770:	jae    0x140007772
   140007772:	add    BYTE PTR ds:[rbp+0x0],bl
   140007776:	and    BYTE PTR [rax],al
   140007778:	pop    rbx
   140007779:	add    BYTE PTR [rip+0x61006300],ch        # 0x1a100da7f
   14000777f:	add    BYTE PTR [rbx+0x0],ah
   140007782:	push   0x6f006500
   140007787:	add    BYTE PTR [rax+0x0],dh
   14000778a:	je     0x14000778c
   14000778c:	imul   eax,DWORD PTR [rax],0x6e006f
   140007792:	jae    0x140007794
   140007794:	and    BYTE PTR [rax],al
   140007796:	cmp    al,0x0
   140007798:	outs   dx,DWORD PTR ds:[rsi]
   140007799:	add    BYTE PTR [rax+0x0],dh
   14000779c:	je     0x14000779e
   14000779e:	imul   eax,DWORD PTR [rax],0x6e006f
   1400077a4:	jae    0x1400077a6
   1400077a6:	add    BYTE PTR ds:[rbp+0x0],bl
   1400077aa:	or     eax,0xa00
   1400077af:	add    BYTE PTR [rax],ah
   1400077b1:	add    BYTE PTR [rax],ah
   1400077b3:	add    BYTE PTR [rcx+0x0],ah
   1400077b6:	add    BYTE PTR fs:[rax+rax*1+0x5f],ah
   1400077bb:	add    BYTE PTR [rdx+0x0],ah
   1400077be:	imul   eax,DWORD PTR [rax],0x64006e
   1400077c4:	and    BYTE PTR [rax],al
   1400077c6:	cmp    al,0x0
   1400077c8:	add    BYTE PTR [rdi+0x0],r9b
   1400077cc:	rex.WRB add BYTE PTR [r9+0x0],r8b
   1400077d0:	rex.WB add BYTE PTR [r14+0x0],cl
   1400077d4:	add    BYTE PTR ds:[rax],ah
   1400077d7:	add    BYTE PTR [rax+rax*1],bh
   1400077da:	add    BYTE PTR [rbx+0x0],r8b
   1400077de:	add    BYTE PTR ds:[rip+0xa00],cl        # 0x1400081e5
   1400077e5:	add    BYTE PTR [rax],al
   1400077e7:	add    BYTE PTR [rax],ah
   1400077e9:	add    BYTE PTR [rax],ah
   1400077eb:	add    BYTE PTR [rcx+0x0],dh
   1400077ee:	jne    0x1400077f0
   1400077f0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400077f4:	jns    0x1400077f6
   1400077f6:	pop    rdi
   1400077f7:	add    BYTE PTR [rdx+0x0],ah
   1400077fa:	imul   eax,DWORD PTR [rax],0x64006e
   140007800:	or     eax,0xa00
   140007805:	add    BYTE PTR [rax],al
   140007807:	add    BYTE PTR [rax],ah
   140007809:	add    BYTE PTR [rax],ah
   14000780b:	add    BYTE PTR [rax+0x0],dh
   14000780e:	jne    0x140007810
   140007810:	jb     0x140007812
   140007812:	add    BYTE PTR [ebp+0x0],ah
   140007816:	pop    rdi
   140007817:	add    BYTE PTR [rdx+0x0],ah
   14000781a:	imul   eax,DWORD PTR [rax],0x64006e
   140007820:	or     eax,0xa00
   140007825:	add    BYTE PTR [rax],al
   140007827:	add    BYTE PTR [rsi+0x0],ch
   14000782a:	je     0x14000782c
   14000782c:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   140007831:	add    BYTE PTR [rsi],ch
   140007833:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140007837:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000783b:	add    BYTE PTR [rax],al
   14000783d:	add    BYTE PTR [rax],al
   14000783f:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b8009b45
   140007845:	add    BYTE PTR [rdi],ch
   140007847:	add    BYTE PTR [rip+0x3a006400],ah        # 0x17a00dc4d
   14000784d:	add    BYTE PTR [rax],ah
   14000784f:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b300ef55
   140007855:	add    BYTE PTR [rax],al
   140007857:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b8009b5d
   14000785d:	add    BYTE PTR [rdi],ch
   14000785f:	add    BYTE PTR [rip+0x6400],ah        # 0x14000dc65
   140007865:	add    BYTE PTR [rax],al
   140007867:	add    BYTE PTR [rax],dh
   140007869:	add    BYTE PTR [rip+0xa00],cl        # 0x14000826f
   14000786f:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1a400e475
   140007875:	add    BYTE PTR [rdi],ch
   140007877:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1a400e47d
   14000787d:	add    BYTE PTR [rdi],ch
   14000787f:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1a400e485
   140007885:	add    BYTE PTR [rax],ah
   140007887:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1a400e48d
   14000788d:	add    BYTE PTR [rdx],bh
   14000788f:	add    BYTE PTR [rip+0x2e003200],ah        # 0x16e00aa95
   140007895:	add    BYTE PTR [rdx],dh
   140007897:	add    BYTE PTR [rax+rax*1+0x64],ch
   14000789b:	add    BYTE PTR [rdx],bh
   14000789d:	add    BYTE PTR [rip+0x2e003200],ah        # 0x16e00aaa3
   1400078a3:	add    BYTE PTR [rdx],dh
   1400078a5:	add    BYTE PTR [rax+rax*1+0x64],ch
   1400078a9:	add    BYTE PTR [rax],ah
   1400078ab:	add    BYTE PTR [rax],al
   1400078ad:	add    BYTE PTR [rax],al
   1400078af:	add    BYTE PTR [rax+rax*1+0x69],dl
   1400078b3:	add    BYTE PTR [rbp+0x0],ch
   1400078b6:	add    BYTE PTR gs:[rbx+0x0],dl
   1400078ba:	imul   eax,DWORD PTR [rax],0x65
   1400078bd:	add    BYTE PTR [rdi+0x0],dh
   1400078c0:	and    BYTE PTR [rax],al
   1400078c2:	and    BYTE PTR [rax],al
   1400078c4:	and    BYTE PTR [rax],al
   1400078c6:	and    BYTE PTR [rax],al
   1400078c8:	and    BYTE PTR [rax],al
   1400078ca:	and    BYTE PTR [rax],al
   1400078cc:	and    BYTE PTR [rax],al
   1400078ce:	and    BYTE PTR [rax],al
   1400078d0:	and    BYTE PTR [rax],al
   1400078d2:	and    BYTE PTR [rax],al
   1400078d4:	and    BYTE PTR [rax],al
   1400078d6:	cmp    al,BYTE PTR [rax]
   1400078d8:	and    BYTE PTR [rax],al
   1400078da:	and    BYTE PTR [rax],al
   1400078dc:	and    eax,0x20006300
   1400078e1:	add    BYTE PTR [rip+0x36004900],ah        # 0x17600c1e7
   1400078e7:	add    BYTE PTR [rax+rax*1],dh
   1400078ea:	add    BYTE PTR fs:[rdx],bh
   1400078ed:	add    BYTE PTR [rip+0x32003000],ah        # 0x17200a8f3
   1400078f3:	add    BYTE PTR [rcx+0x0],cl
   1400078f6:	add    BYTE PTR ss:[rax+rax*1],dh
   1400078fa:	add    BYTE PTR fs:[rax],ah
   1400078fd:	add    BYTE PTR [rax],al
   1400078ff:	add    BYTE PTR [rsi+0x0],cl
   140007902:	push   rbp
   140007903:	add    BYTE PTR [rax+rax*1+0x4c],cl
   140007907:	add    BYTE PTR [rax],ah
   140007909:	add    BYTE PTR [rbx+0x0],al
   14000790c:	push   rbx
   14000790d:	add    BYTE PTR [rip+0xa00],cl        # 0x140008313
   140007913:	add    BYTE PTR [rax],al
   140007915:	add    BYTE PTR [rax],al
   140007917:	add    BYTE PTR [rbx+0x0],cl
   14000791a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000791e:	(bad)  
   14000791f:	add    BYTE PTR [rbp+0x0],ah
   140007922:	jb     0x140007924
   140007924:	outs   dx,DWORD PTR ds:[rsi]
   140007925:	add    BYTE PTR [rbx+0x0],dh
   140007928:	and    BYTE PTR [rax],al
   14000792a:	add    BYTE PTR [rbp+0x0],r8b
   14000792e:	push   rbx
   14000792f:	add    BYTE PTR [rip+0x42004300],ch        # 0x18200bc35
   140007935:	add    BYTE PTR [rbx+0x0],al
   140007938:	sub    eax,0x52004300
   14000793d:	add    BYTE PTR [rbx+0x0],al
   140007940:	or     eax,0xa00
   140007945:	add    BYTE PTR [rax],al
   140007947:	add    BYTE PTR [rbx+0x0],cl
   14000794a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000794e:	(bad)  
   14000794f:	add    BYTE PTR [rbp+0x0],ah
   140007952:	jb     0x140007954
   140007954:	outs   dx,DWORD PTR ds:[rsi]
   140007955:	add    BYTE PTR [rbx+0x0],dh
   140007958:	and    BYTE PTR [rax],al
   14000795a:	add    BYTE PTR [rbp+0x0],r8b
   14000795e:	push   rbx
   14000795f:	add    BYTE PTR [rip+0x42004300],ch        # 0x18200bc65
   140007965:	add    BYTE PTR [rbx+0x0],al
   140007968:	sub    eax,0x44004d00
   14000796d:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a008673
   140007973:	add    BYTE PTR [rax],al
   140007975:	add    BYTE PTR [rax],al
   140007977:	add    BYTE PTR [rdx+0x0],dl
   14000797a:	push   rbx
   14000797b:	add    BYTE PTR [rcx+0x0],al
   14000797e:	add    BYTE PTR [rbx+0x0],r10b
   140007982:	rex.WB add BYTE PTR [r8],spl
   140007985:	add    BYTE PTR [rdx+0x0],dl
   140007988:	add    BYTE PTR [r8+r8*1],sil
   14000798c:	sub    eax,0x44004d00
   140007991:	add    BYTE PTR [rax+rax*1],dh
   140007994:	or     eax,0xa00
   140007999:	add    BYTE PTR [rax],al
   14000799b:	add    BYTE PTR [rax],al
   14000799d:	add    BYTE PTR [rax],al
   14000799f:	add    BYTE PTR [rdx+0x0],dl
   1400079a2:	push   rbx
   1400079a3:	add    BYTE PTR [rcx+0x0],al
   1400079a6:	add    BYTE PTR [rbx+0x0],r10b
   1400079aa:	rex.WB add BYTE PTR [r8],spl
   1400079ad:	add    BYTE PTR [rdx+0x0],dl
   1400079b0:	add    BYTE PTR [r8+r8*1],sil
   1400079b4:	sub    eax,0x4c005000
   1400079b9:	add    BYTE PTR [rcx+0x0],al
   1400079bc:	rex.WB add BYTE PTR [r14+0x0],cl
   1400079c0:	or     eax,0xa00
   1400079c5:	add    BYTE PTR [rax],al
   1400079c7:	add    BYTE PTR [rdx+0x0],dl
   1400079ca:	push   rbx
   1400079cb:	add    BYTE PTR [rcx+0x0],al
   1400079ce:	add    BYTE PTR [rbx+0x0],r10b
   1400079d2:	rex.WB add BYTE PTR [r8],spl
   1400079d5:	add    BYTE PTR [rdx+0x0],dl
   1400079d8:	add    BYTE PTR [r8+r8*1],sil
   1400079dc:	sub    eax,0x4d004c00
   1400079e1:	add    BYTE PTR [rip+0xa00],cl        # 0x1400083e7
   1400079e7:	add    BYTE PTR [rbx+0x0],cl
   1400079ea:	add    BYTE PTR gs:[rdx+0x0],dh
   1400079ee:	(bad)  
   1400079ef:	add    BYTE PTR [rbp+0x0],ah
   1400079f2:	jb     0x1400079f4
   1400079f4:	outs   dx,DWORD PTR ds:[rsi]
   1400079f5:	add    BYTE PTR [rbx+0x0],dh
   1400079f8:	and    BYTE PTR [rax],al
   1400079fa:	add    BYTE PTR [rbp+0x0],r8b
   1400079fe:	push   rbx
   1400079ff:	add    BYTE PTR [rip+0x6c005000],ch        # 0x1ac00ca05
   140007a05:	add    BYTE PTR [rcx+0x0],ah
   140007a08:	imul   eax,DWORD PTR [rax],0xd006e
   140007a0e:	or     al,BYTE PTR [rax]
	...
   140007a18:	push   rdx
   140007a19:	add    BYTE PTR [rbx+0x0],dl
   140007a1c:	add    BYTE PTR [r8+rax*1+0x53],al
   140007a21:	add    BYTE PTR [rcx+0x0],cl
   140007a24:	and    BYTE PTR [rax],al
   140007a26:	push   rdx
   140007a27:	add    BYTE PTR [rbx+0x0],al
   140007a2a:	xor    al,0x0
   140007a2c:	sub    eax,0x4d004800
   140007a31:	add    BYTE PTR [rcx+0x0],al
   140007a34:	rex.XB add BYTE PTR [r8],bpl
   140007a37:	add    BYTE PTR [rsi+0x0],cl
   140007a3a:	push   rsp
   140007a3b:	add    BYTE PTR [rcx],ch
   140007a3d:	add    BYTE PTR [rip+0xa00],cl        # 0x140008443
   140007a43:	add    BYTE PTR [rax],al
   140007a45:	add    BYTE PTR [rax],al
   140007a47:	add    BYTE PTR [rdx+0x0],dl
   140007a4a:	push   rbx
   140007a4b:	add    BYTE PTR [rcx+0x0],al
   140007a4e:	add    BYTE PTR [rbx+0x0],r10b
   140007a52:	rex.WB add BYTE PTR [r8],spl
   140007a55:	add    BYTE PTR [rdx+0x0],dl
   140007a58:	add    BYTE PTR [r8+r8*1],sil
   140007a5c:	or     eax,0xa00
   140007a61:	add    BYTE PTR [rax],al
   140007a63:	add    BYTE PTR [rax],al
   140007a65:	add    BYTE PTR [rax],al
   140007a67:	add    BYTE PTR [rdx+0x0],dl
   140007a6a:	push   rbx
   140007a6b:	add    BYTE PTR [rcx+0x0],al
   140007a6e:	add    BYTE PTR [rbx+0x0],r10b
   140007a72:	rex.WB add BYTE PTR [r8],spl
   140007a75:	add    BYTE PTR [rdx+0x0],dl
   140007a78:	add    BYTE PTR [r8+r8*1],sil
   140007a7c:	sub    eax,0x4d004800
   140007a81:	add    BYTE PTR [rcx+0x0],al
   140007a84:	rex.XB add BYTE PTR [r8],bpl
   140007a87:	add    BYTE PTR [rsi+0x0],cl
   140007a8a:	push   rsp
   140007a8b:	add    BYTE PTR [rcx],ch
   140007a8d:	add    BYTE PTR [rax],ch
   140007a8f:	add    BYTE PTR [rbp+0x0],al
   140007a92:	js     0x140007a94
   140007a94:	jo     0x140007a96
   140007a96:	outs   dx,DWORD PTR ds:[rsi]
   140007a97:	add    BYTE PTR [rdx+0x0],dh
   140007a9a:	je     0x140007a9c
   140007a9c:	sub    DWORD PTR [rax],eax
   140007a9e:	or     eax,0xa00
   140007aa3:	add    BYTE PTR [rax],al
   140007aa5:	add    BYTE PTR [rax],al
   140007aa7:	add    BYTE PTR [rdx+0x0],dl
   140007aaa:	push   rbx
   140007aab:	add    BYTE PTR [rcx+0x0],al
   140007aae:	add    BYTE PTR [rbx+0x0],r10b
   140007ab2:	rex.WB add BYTE PTR [r8],spl
   140007ab5:	add    BYTE PTR [rdx+0x0],dl
   140007ab8:	add    BYTE PTR [r8+r8*1],sil
   140007abc:	sub    BYTE PTR [rax],al
   140007abe:	add    BYTE PTR [r8+0x0],r15b
   140007ac2:	jo     0x140007ac4
   140007ac4:	outs   dx,DWORD PTR ds:[rsi]
   140007ac5:	add    BYTE PTR [rdx+0x0],dh
   140007ac8:	je     0x140007aca
   140007aca:	sub    DWORD PTR [rax],eax
   140007acc:	or     eax,0xa00
   140007ad1:	add    BYTE PTR [rax],al
   140007ad3:	add    BYTE PTR [rax],al
   140007ad5:	add    BYTE PTR [rax],al
   140007ad7:	add    BYTE PTR [rdx+0x0],dl
   140007ada:	push   rbx
   140007adb:	add    BYTE PTR [rcx+0x0],al
   140007ade:	add    BYTE PTR [rbx+0x0],r10b
   140007ae2:	rex.WB add BYTE PTR [r8],spl
   140007ae5:	add    BYTE PTR [rdx+0x0],dl
   140007ae8:	add    BYTE PTR [r8+r8*1],sil
   140007aec:	sub    eax,0x4d004800
   140007af1:	add    BYTE PTR [rcx+0x0],al
   140007af4:	rex.XB add BYTE PTR [r8],bpl
   140007af7:	add    BYTE PTR [rdi+0x0],cl
   140007afa:	ins    BYTE PTR es:[rdi],dx
   140007afb:	add    BYTE PTR [rax+rax*1+0x29],ah
   140007aff:	add    BYTE PTR [rip+0xa00],cl        # 0x140008505
   140007b05:	add    BYTE PTR [rax],al
   140007b07:	add    BYTE PTR [rcx+0x0],al
   140007b0a:	add    BYTE PTR [r11+0x0],r10b
   140007b0e:	sub    eax,0x32003100
   140007b13:	add    BYTE PTR [rax],bh
   140007b15:	add    BYTE PTR [rip+0x54004300],ch        # 0x19400be1b
   140007b1b:	add    BYTE PTR [rbx+0x0],dl
   140007b1e:	sub    eax,0x4d004800
   140007b23:	add    BYTE PTR [rcx+0x0],al
   140007b26:	rex.XB add BYTE PTR [rip+0x48005300],bpl        # 0x18800ce2d
   140007b2d:	add    BYTE PTR [rcx+0x0],al
   140007b30:	xor    DWORD PTR [rax],eax
   140007b32:	sub    eax,0x36003900
   140007b37:	add    BYTE PTR [rip+0xa00],cl        # 0x14000853d
   140007b3d:	add    BYTE PTR [rax],al
   140007b3f:	add    BYTE PTR [rcx+0x0],al
   140007b42:	add    BYTE PTR [r11+0x0],r10b
   140007b46:	sub    eax,0x35003200
   140007b4b:	add    BYTE PTR [rsi],dh
   140007b4d:	add    BYTE PTR [rip+0x54004300],ch        # 0x19400be53
   140007b53:	add    BYTE PTR [rbx+0x0],dl
   140007b56:	sub    eax,0x4d004800
   140007b5b:	add    BYTE PTR [rcx+0x0],al
   140007b5e:	rex.XB add BYTE PTR [rip+0x48005300],bpl        # 0x18800ce65
   140007b65:	add    BYTE PTR [rcx+0x0],al
   140007b68:	xor    DWORD PTR [rax],eax
   140007b6a:	sub    eax,0x36003900
   140007b6f:	add    BYTE PTR [rip+0xa00],cl        # 0x140008575
   140007b75:	add    BYTE PTR [rax],al
   140007b77:	add    BYTE PTR [rax],dh
   140007b79:	xor    DWORD PTR [rdx],esi
   140007b7b:	xor    esi,DWORD PTR [rsi*1+0x39383736]
   140007b82:	(bad)  
   140007b83:	(bad)
	...
   140007b90:	and    eax,0x78342e34
   140007b95:	and    BYTE PTR [rax],ah
   140007b97:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b300e39d
   140007b9d:	add    BYTE PTR [rdx],cl
	...
   140007ba7:	add    BYTE PTR [rcx+0x0],cl
   140007baa:	outs   dx,BYTE PTR ds:[rsi]
   140007bab:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007baf:	add    BYTE PTR [rdx+0x0],dh
   140007bb2:	(bad)  
   140007bb3:	add    BYTE PTR [rbx+0x0],ah
   140007bb6:	je     0x140007bb8
   140007bb8:	imul   eax,DWORD PTR [rax],0x650076
   140007bbe:	add    BYTE PTR [rax],al
   140007bc0:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140007bc4:	je     0x140007bc6
   140007bc6:	ja     0x140007bc8
   140007bc8:	outs   dx,DWORD PTR ds:[rsi]
   140007bc9:	add    BYTE PTR [rdx+0x0],dh
   140007bcc:	imul   eax,DWORD PTR [rax],0x0
   140007bcf:	add    BYTE PTR [rdx+0x0],al
   140007bd2:	(bad)  
   140007bd3:	add    BYTE PTR [rax+rax*1+0x63],dh
   140007bd7:	add    BYTE PTR [rax+0x0],ch
   140007bda:	add    BYTE PTR [rax],al
   140007bdc:	add    BYTE PTR [rax],al
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	push   rbx
   140007be1:	add    BYTE PTR [rbp+0x0],ah
   140007be4:	jb     0x140007be6
   140007be6:	jbe    0x140007be8
   140007be8:	imul   eax,DWORD PTR [rax],0x650063
   140007bee:	add    BYTE PTR [rax],al
   140007bf0:	push   rax
   140007bf1:	add    BYTE PTR [rdx+0x0],dh
   140007bf4:	outs   dx,DWORD PTR ds:[rsi]
   140007bf5:	add    BYTE PTR [rax+0x0],bh
   140007bf8:	jns    0x140007bfa
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	add    BYTE PTR [rax],al
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	push   rbp
   140007c01:	add    BYTE PTR [rsi+0x0],ch
   140007c04:	ins    BYTE PTR es:[rdi],dx
   140007c05:	add    BYTE PTR [rdi+0x0],ch
   140007c08:	movsxd eax,DWORD PTR [rax]
   140007c0a:	imul   eax,DWORD PTR [rax],0x0
   140007c0d:	add    BYTE PTR [rax],al
   140007c0f:	add    BYTE PTR [rsi+0x0],cl
   140007c12:	add    BYTE PTR gs:[rax+rax*1+0x77],dh
   140007c17:	add    BYTE PTR [rdi+0x0],ch
   140007c1a:	jb     0x140007c1c
   140007c1c:	imul   eax,DWORD PTR [rax],0x43
   140007c1f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140007c23:	add    BYTE PTR [rcx+0x0],ah
   140007c26:	jb     0x140007c28
   140007c28:	je     0x140007c2a
   140007c2a:	add    BYTE PTR gs:[rax+0x0],bh
   140007c2e:	je     0x140007c30
	...
   140007c38:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140007c3c:	ja     0x140007c3e
   140007c3e:	rex.XB add BYTE PTR [r10+0x0],sil
   140007c42:	add    BYTE PTR gs:[rax+rax*1+0x65],ah
   140007c47:	add    BYTE PTR [rsi+0x0],ch
   140007c4a:	je     0x140007c4c
   140007c4c:	imul   eax,DWORD PTR [rax],0x6c0061
   140007c52:	jae    0x140007c54
   140007c54:	add    BYTE PTR [rax],al
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	push   rdx
   140007c59:	add    BYTE PTR [rbp+0x0],ah
   140007c5c:	ins    DWORD PTR es:[rdi],dx
   140007c5d:	add    BYTE PTR [rdi+0x0],ch
   140007c60:	je     0x140007c62
   140007c62:	add    BYTE PTR gs:[rcx+0x0],cl
   140007c66:	outs   dx,BYTE PTR ds:[rsi]
   140007c67:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007c6b:	add    BYTE PTR [rdx+0x0],dh
   140007c6e:	(bad)  
   140007c6f:	add    BYTE PTR [rbx+0x0],ah
   140007c72:	je     0x140007c74
   140007c74:	imul   eax,DWORD PTR [rax],0x650076
   140007c7a:	add    BYTE PTR [rax],al
   140007c7c:	add    BYTE PTR [rax],al
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	rex.XB add BYTE PTR [r9+0x0],spl
   140007c84:	movsxd eax,DWORD PTR [rax]
   140007c86:	push   0x64006500
   140007c8b:	add    BYTE PTR [rcx+0x0],cl
   140007c8e:	outs   dx,BYTE PTR ds:[rsi]
   140007c8f:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007c93:	add    BYTE PTR [rdx+0x0],dh
   140007c96:	(bad)  
   140007c97:	add    BYTE PTR [rbx+0x0],ah
   140007c9a:	je     0x140007c9c
   140007c9c:	imul   eax,DWORD PTR [rax],0x650076
   140007ca2:	add    BYTE PTR [rax],al
   140007ca4:	add    BYTE PTR [rax],al
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	rex.XB add BYTE PTR [r9+0x0],spl
   140007cac:	movsxd eax,DWORD PTR [rax]
   140007cae:	push   0x64006500
   140007cb3:	add    BYTE PTR [rdx+0x0],dl
   140007cb6:	add    BYTE PTR gs:[rbp+0x0],ch
   140007cba:	outs   dx,DWORD PTR ds:[rsi]
   140007cbb:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007cbf:	add    BYTE PTR [rcx+0x0],cl
   140007cc2:	outs   dx,BYTE PTR ds:[rsi]
   140007cc3:	add    BYTE PTR [rax+rax*1+0x65],dh
   140007cc7:	add    BYTE PTR [rdx+0x0],dh
   140007cca:	(bad)  
   140007ccb:	add    BYTE PTR [rbx+0x0],ah
   140007cce:	je     0x140007cd0
   140007cd0:	imul   eax,DWORD PTR [rax],0x650076
   140007cd6:	add    BYTE PTR [rax],al
   140007cd8:	rex.XB add BYTE PTR [r9+0x0],spl
   140007cdc:	movsxd eax,DWORD PTR [rax]
   140007cde:	push   0x64006500
   140007ce3:	add    BYTE PTR [rbp+0x0],dl
   140007ce6:	outs   dx,BYTE PTR ds:[rsi]
   140007ce7:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140007ceb:	add    BYTE PTR [rbx+0x0],ah
   140007cee:	imul   eax,DWORD PTR [rax],0x0
   140007cf1:	add    BYTE PTR [rax],al
   140007cf3:	add    BYTE PTR [rax],al
   140007cf5:	add    BYTE PTR [rax],al
   140007cf7:	add    BYTE PTR [rdx+0x65],dh
   140007cfa:	jae    0x140007d61
   140007cfc:	jb     0x140007d74
   140007cfe:	gs add BYTE PTR fs:[rax],al
   140007d02:	add    BYTE PTR [rax],al
   140007d04:	add    BYTE PTR [rax],al
   140007d06:	add    BYTE PTR [rax],al
   140007d08:	and    eax,0x73006800
   140007d0d:	add    BYTE PTR [rax],ah
	...
   140007d17:	add    BYTE PTR [rsi+0x6f],ah
   140007d1a:	jb     0x140007d93
   140007d1c:	(bad)  
   140007d1d:	jb     0x140007d83
   140007d1f:	(bad)  
   140007d20:	(bad)  
   140007d21:	ins    BYTE PTR es:[rdi],dx
   140007d22:	add    BYTE PTR gs:[rax],al
   140007d25:	add    BYTE PTR [rax],al
   140007d27:	add    BYTE PTR [rsi+0x6f],ah
   140007d2a:	jb     0x140007da3
   140007d2c:	(bad)  
   140007d2d:	jb     0x140007d93
   140007d2f:	gs add BYTE PTR fs:[rax],al
   140007d33:	add    BYTE PTR [rax],al
   140007d35:	add    BYTE PTR [rax],al
   140007d37:	add    BYTE PTR [rax+0x72],dh
   140007d3a:	outs   dx,DWORD PTR ds:[rsi]
   140007d3b:	js     0x140007da6
   140007d3d:	(bad)  
   140007d3e:	(bad)  
   140007d3f:	ins    BYTE PTR es:[rdi],dx
   140007d40:	add    BYTE PTR gs:[rax],al
   140007d43:	add    BYTE PTR [rax+0x72],dh
   140007d46:	outs   dx,DWORD PTR ds:[rsi]
   140007d47:	js     0x140007dc2
   140007d49:	add    BYTE PTR [rax],al
   140007d4b:	add    BYTE PTR [rax],al
   140007d4d:	add    BYTE PTR [rax],al
   140007d4f:	add    BYTE PTR [rbp+0x61],ch
   140007d52:	jns    0x140007db3
   140007d54:	jo     0x140007dc5
   140007d56:	jae    0x140007dcc
   140007d58:	fs (bad) 
   140007d5a:	je     0x140007dc1
   140007d5c:	add    BYTE PTR [rax],al
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	jo     0x140007dd1
   140007d62:	jae    0x140007dd8
   140007d64:	fs (bad) 
   140007d66:	je     0x140007dcd
   140007d68:	add    BYTE PTR fs:[rax],al
   140007d6b:	add    BYTE PTR [rax],al
   140007d6d:	add    BYTE PTR [rax],al
   140007d6f:	add    BYTE PTR [rcx+0x6e],ch
   140007d72:	jbe    0x140007dd5
   140007d74:	ins    BYTE PTR es:[rdi],dx
   140007d75:	imul   esp,DWORD PTR [rax+rax*1+0x72],0x77656e65
   140007d7d:	(bad)  
   140007d7e:	(bad)  
   140007d7f:	ins    BYTE PTR es:[rdi],dx
   140007d80:	add    BYTE PTR gs:[rax],al
   140007d83:	add    BYTE PTR [rax],al
   140007d85:	add    BYTE PTR [rax],al
   140007d87:	add    BYTE PTR [rcx+0x6e],ch
   140007d8a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x7270006c
   140007d92:	gs pop rdi
   140007d94:	(bad)  
   140007d95:	jne    0x140007e0b
   140007d97:	push   0x746e65
   140007d9c:	add    BYTE PTR [rax],al
   140007d9e:	add    BYTE PTR [rax],al
   140007da0:	push   0x75615f77
   140007da5:	je     0x140007e0f
   140007da7:	outs   dx,BYTE PTR gs:[rsi]
   140007da9:	je     0x140007dab
   140007dab:	add    BYTE PTR [rax],al
   140007dad:	add    BYTE PTR [rax],al
   140007daf:	add    BYTE PTR [rdi+0x6b],ch
   140007db2:	pop    rdi
   140007db3:	(bad)  
   140007db4:	jae    0x140007e15
   140007db6:	fs gs ins BYTE PTR es:[rdi],dx
   140007db9:	gs addr32 (bad) 
   140007dbc:	je     0x140007e23
   140007dbe:	add    BYTE PTR [rax],al
   140007dc0:	outs   dx,BYTE PTR ds:[rsi]
   140007dc1:	(bad)  
   140007dc2:	ins    DWORD PTR es:[rdi],dx
   140007dc3:	gs pop rdi
   140007dc5:	movsxd esp,DWORD PTR [rcx+0x6e]
   140007dc8:	outs   dx,DWORD PTR ds:[rsi]
   140007dc9:	outs   dx,BYTE PTR ds:[rsi]
   140007dca:	imul   esp,DWORD PTR [rbx+0x61],0x657a696c
   140007dd1:	add    BYTE PTR [rax],al
   140007dd3:	add    BYTE PTR [rax],al
   140007dd5:	add    BYTE PTR [rax],al
   140007dd7:	add    BYTE PTR [rdx+0x65],dh
   140007dda:	jae    0x140007e41
   140007ddc:	jb     0x140007e54
   140007dde:	gs xor DWORD PTR fs:[rax],eax
   140007de2:	add    BYTE PTR [rax],al
   140007de4:	add    BYTE PTR [rax],al
   140007de6:	add    BYTE PTR [rax],al
   140007de8:	and    eax,0x78002300
   140007ded:	add    BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rip+0xa00],cl        # 0x1400087f5
   140007df5:	add    BYTE PTR [rax],al
   140007df7:	add    BYTE PTR [rax+0x0],dl
   140007dfa:	push   rdx
   140007dfb:	add    BYTE PTR [rcx+0x0],cl
   140007dfe:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140007e02:	push   rdx
   140007e03:	add    BYTE PTR [rcx+0x0],bl
   140007e06:	add    BYTE PTR [rax],al
   140007e08:	and    eax,0x73007700
   140007e0d:	add    BYTE PTR [rax],ah
	...
   140007e17:	add    BYTE PTR [rax+rax*1+0x45],al
   140007e1b:	add    BYTE PTR [rax+rax*1+0x45],cl
   140007e1f:	add    BYTE PTR [rdi+0x0],al
   140007e22:	add    BYTE PTR [r8+rax*1+0x49],dl
   140007e27:	add    BYTE PTR [rdi+0x0],cl
   140007e2a:	rex.WRX add BYTE PTR [rax],r8b
   140007e2d:	add    BYTE PTR [rax],al
   140007e2f:	add    BYTE PTR [rbx+0x0],dl
   140007e32:	xor    al,0x0
   140007e34:	push   rbp
   140007e35:	add    BYTE PTR [rax],al
   140007e37:	add    BYTE PTR [rcx+0x0],al
   140007e3a:	push   rbx
   140007e3b:	add    BYTE PTR [rbx+0x0],al
   140007e3e:	add    BYTE PTR [rax],al
   140007e40:	add    BYTE PTR [r14+0x0],r9b
   140007e44:	rex.XB add BYTE PTR [rip+0x4e004900],bpl        # 0x18e00c74b
   140007e4b:	add    BYTE PTR [rip+0x4b005300],ch        # 0x18b00d151
   140007e51:	add    BYTE PTR [rbp+0x0],al
   140007e54:	pop    rcx
   140007e55:	add    BYTE PTR [rax],al
   140007e57:	add    BYTE PTR [rax+0x0],bl
   140007e5a:	xor    eax,0x39003000
	...
   140007e67:	add    BYTE PTR [rsi+0x0],al
   140007e6a:	add    BYTE PTR [r11+0x0],dl
   140007e6e:	push   rsp
	...
   140007e77:	add    BYTE PTR [rbx+0x0],al
   140007e7a:	rex.WRXB add BYTE PTR [r13+0x0],r9b
   140007e7e:	push   rax
   140007e7f:	add    BYTE PTR [rdi+0x0],cl
   140007e82:	push   rbp
   140007e83:	add    BYTE PTR [rsi+0x0],cl
   140007e86:	add    BYTE PTR [rax],r8b
   140007e89:	add    BYTE PTR [rax],al
   140007e8b:	add    BYTE PTR [rax],al
   140007e8d:	add    BYTE PTR [rax],al
   140007e8f:	add    BYTE PTR [rax+0x0],cl
   140007e92:	push   rbp
   140007e93:	add    BYTE PTR [rdx+0x0],al
   140007e96:	sub    eax,0x52005000
   140007e9b:	add    BYTE PTR [rcx+0x0],cl
   140007e9e:	rex.WRB add BYTE PTR [r9+0x0],r8b
   140007ea2:	push   rdx
   140007ea3:	add    BYTE PTR [rcx+0x0],bl
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	add    BYTE PTR [rcx+0x0],r9b
   140007eac:	push   rbx
   140007ead:	add    BYTE PTR [rcx+0x0],al
   140007eb0:	add    BYTE PTR [rax+r8*1+0x45],cl
   140007eb5:	add    BYTE PTR [rip+0x47005400],ch        # 0x18700d2bb
   140007ebb:	add    BYTE PTR [rax+rax*1+0x2d],dl
   140007ebf:	add    BYTE PTR [rax+rax*1+0x45],al
   140007ec3:	add    BYTE PTR [rax+rax*1+0x45],cl
   140007ec7:	add    BYTE PTR [rdi+0x0],al
   140007eca:	add    BYTE PTR [r8+rax*1+0x49],dl
   140007ecf:	add    BYTE PTR [rdi+0x0],cl
   140007ed2:	rex.WRX add BYTE PTR [rax],r8b
   140007ed5:	add    BYTE PTR [rax],al
   140007ed7:	add    BYTE PTR [rsi+0x0],cl
   140007eda:	add    BYTE PTR gs:[rdi+0x0],ah
   140007ede:	(bad)  
   140007edf:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007ee3:	add    BYTE PTR [rsi+0x0],dh
   140007ee6:	add    BYTE PTR gs:[rax],al
   140007ee9:	add    BYTE PTR [rax],al
   140007eeb:	add    BYTE PTR [rax],al
   140007eed:	add    BYTE PTR [rax],al
   140007eef:	add    BYTE PTR [rax],ah
   140007ef1:	add    BYTE PTR [rax],ah
   140007ef3:	add    BYTE PTR [rax],ah
   140007ef5:	add    BYTE PTR [rax],ah
   140007ef7:	add    BYTE PTR [rax],ah
   140007ef9:	add    BYTE PTR [rax],ah
   140007efb:	add    BYTE PTR [rax],ah
   140007efd:	add    BYTE PTR [rdx],bh
	...
   140007f07:	add    BYTE PTR [rip+0x32003000],ah        # 0x17200af0d
   140007f0d:	add    BYTE PTR [rax+0x0],bh
   140007f10:	and    BYTE PTR [rax],al
   140007f12:	add    BYTE PTR [rax],al
   140007f14:	or     al,BYTE PTR [rax]
   140007f16:	add    BYTE PTR [rax],al
   140007f18:	cmp    al,BYTE PTR [rax]
   140007f1a:	add    BYTE PTR [rax],al
   140007f1c:	or     DWORD PTR [rax],eax
   140007f1e:	add    BYTE PTR [rax],al
   140007f20:	and    BYTE PTR [rax],al
   140007f22:	and    eax,0x20006400
   140007f27:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b800a22d
   140007f2d:	add    BYTE PTR [rdx],bh
   140007f2f:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b800a235
   140007f35:	add    BYTE PTR [rax],ah
   140007f37:	add    BYTE PTR [rip+0x5a007700],ah        # 0x19a00f63d
   140007f3d:	add    BYTE PTR [rax+rax*1+0x25],bl
   140007f41:	add    BYTE PTR [rdi+0x0],dh
   140007f44:	pop    rdx
   140007f45:	add    BYTE PTR [rax],ah
   140007f47:	add    BYTE PTR [rip+0x5a007700],ah        # 0x19a00f64d
   140007f4d:	add    BYTE PTR [rdx],bh
   140007f4f:	add    BYTE PTR [rip+0x73007700],ah        # 0x1b300f655
   140007f55:	add    BYTE PTR [rip+0xa00],cl        # 0x14000895b
   140007f5b:	add    BYTE PTR [rax],al
   140007f5d:	add    BYTE PTR [rax],al
   140007f5f:	add    BYTE PTR [rax],ah
   140007f61:	add    BYTE PTR [rip+0x20006400],ah        # 0x16000e367
   140007f67:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b800a26d
   140007f6d:	add    BYTE PTR [rdx],bh
   140007f6f:	add    BYTE PTR [rip+0x78002300],ah        # 0x1b800a275
   140007f75:	add    BYTE PTR [rax],ah
   140007f77:	add    BYTE PTR [rip+0x5a007700],ah        # 0x19a00f67d
   140007f7d:	add    BYTE PTR [rax+rax*1+0x25],bl
   140007f81:	add    BYTE PTR [rdi+0x0],dh
   140007f84:	pop    rdx
   140007f85:	add    BYTE PTR [rax],ah
   140007f87:	add    BYTE PTR [rip+0x5a007700],ah        # 0x19a00f68d
   140007f8d:	add    BYTE PTR [rdx],bh
   140007f8f:	add    BYTE PTR [rax],ch
   140007f91:	add    BYTE PTR [rip+0x29006400],ah        # 0x16900e397
   140007f97:	add    BYTE PTR [rip+0xa00],cl        # 0x14000899d
   140007f9d:	add    BYTE PTR [rax],al
   140007f9f:	add    BYTE PTR [rbx+0x0],bl
   140007fa2:	and    eax,0x5d006400
   140007fa7:	add    BYTE PTR [rax],ah
   140007fa9:	add    BYTE PTR [rax],al
   140007fab:	add    BYTE PTR [rax],al
   140007fad:	add    BYTE PTR [rax],al
   140007faf:	add    BYTE PTR [rax+0x0],dl
   140007fb2:	add    BYTE PTR [rbx+0x0],r8b
   140007fb6:	pop    rdi
   140007fb7:	add    BYTE PTR [rdx+0x0],dl
   140007fba:	add    BYTE PTR [r9+0x0],r10b
   140007fbe:	push   rbp
   140007fbf:	add    BYTE PTR [rcx+0x0],cl
   140007fc2:	push   rdx
   140007fc3:	add    BYTE PTR [rbp+0x0],al
   140007fc6:	add    BYTE PTR [rax],r8b
   140007fc9:	add    BYTE PTR [rax],al
   140007fcb:	add    BYTE PTR [rax],al
   140007fcd:	add    BYTE PTR [rax],al
   140007fcf:	add    BYTE PTR [rax+rax*1+0x53],al
   140007fd3:	add    BYTE PTR [rdi+0x0],bl
   140007fd6:	add    BYTE PTR ss:[rdi+0x0],bl
   140007fda:	push   rdx
   140007fdb:	add    BYTE PTR [rbp+0x0],al
   140007fde:	push   rcx
   140007fdf:	add    BYTE PTR [rbp+0x0],dl
   140007fe2:	rex.WB add BYTE PTR [r10+0x0],dl
   140007fe6:	add    BYTE PTR [r8+rax*1+0x0],r8b
   140007feb:	add    BYTE PTR [rax],al
   140007fed:	add    BYTE PTR [rax],al
   140007fef:	add    BYTE PTR [rax+rax*1+0x53],al
   140007ff3:	add    BYTE PTR [rdi+0x0],bl
   140007ff6:	cmp    BYTE PTR [rax],al
   140007ff8:	pop    rdi
   140007ff9:	add    BYTE PTR [rdx+0x0],dl
   140007ffc:	add    BYTE PTR [r9+0x0],r10b
   140008000:	push   rbp
   140008001:	add    BYTE PTR [rcx+0x0],cl
   140008004:	push   rdx
   140008005:	add    BYTE PTR [rbp+0x0],al
   140008008:	add    BYTE PTR [rax],r8b
   14000800b:	add    BYTE PTR [rax],al
   14000800d:	add    BYTE PTR [rax],al
   14000800f:	add    BYTE PTR [rdi+0x0],dl
   140008012:	push   rdx
   140008013:	add    BYTE PTR [rcx+0x0],cl
   140008016:	push   rsp
   140008017:	add    BYTE PTR [rcx+0x0],al
   14000801a:	add    BYTE PTR [rax+r8*1+0x45],cl
   14000801f:	add    BYTE PTR [rdi+0x0],bl
   140008022:	push   rdx
   140008023:	add    BYTE PTR [rbp+0x0],al
   140008026:	push   rcx
   140008027:	add    BYTE PTR [rbp+0x0],dl
   14000802a:	rex.WB add BYTE PTR [r10+0x0],dl
   14000802e:	add    BYTE PTR [r8+rax*1+0x0],r8b
   140008033:	add    BYTE PTR [rax],al
   140008035:	add    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rsi+0x0],cl
   14000803a:	add    BYTE PTR [r8+0x0],r11b
   14000803e:	push   rsp
   14000803f:	add    BYTE PTR [rbx+0x0],al
   140008042:	rex.WR add BYTE PTR [rdi+0x0],r9b
   140008046:	push   rbx
   140008047:	add    BYTE PTR [rbp+0x0],al
   14000804a:	push   rbx
   14000804b:	add    BYTE PTR [rax+rax*1+0x5f],dl
   14000804f:	add    BYTE PTR [rbx+0x0],dl
   140008052:	rex.WB add BYTE PTR [r8+rax*1+0x45],dl
	...
   14000805f:	add    BYTE PTR [rsi+0x0],al
   140008062:	rex.WRXB add BYTE PTR [r10+0x0],r10b
   140008066:	rex.XB add BYTE PTR [r13+0x0],al
   14000806a:	pop    rdi
   14000806b:	add    BYTE PTR [rdx+0x0],dl
   14000806e:	add    BYTE PTR [r8+rax*1+0x49],r8b
   140008073:	add    BYTE PTR [rbx+0x0],dl
   140008076:	rex.XB add BYTE PTR [r15+0x0],cl
   14000807a:	push   rsi
   14000807b:	add    BYTE PTR [rbp+0x0],al
   14000807e:	push   rdx
   14000807f:	add    BYTE PTR [rcx+0x0],bl
   140008082:	add    BYTE PTR [rax],al
   140008084:	add    BYTE PTR [rax],al
   140008086:	add    BYTE PTR [rax],al
   140008088:	push   rax
   140008089:	add    BYTE PTR [rax+rax*1+0x43],al
   14000808d:	add    BYTE PTR [rax],al
   14000808f:	add    BYTE PTR [rdi+0x0],al
   140008092:	rex.XB add BYTE PTR [r8],al
   140008095:	add    BYTE PTR [rax],al
   140008097:	add    BYTE PTR [rax+rax*1+0x44],cl
   14000809b:	add    BYTE PTR [rcx+0x0],al
   14000809e:	push   rax
   14000809f:	add    BYTE PTR [rax],al
   1400080a1:	add    BYTE PTR [rax],al
   1400080a3:	add    BYTE PTR [rax+rax*1+0x53],al
	...
   1400080af:	add    BYTE PTR [rbx+0x0],cl
   1400080b2:	add    BYTE PTR [rbx+0x0],r8b
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	push   rsp
   1400080b9:	add    BYTE PTR [rcx+0x0],cl
   1400080bc:	rex.WRB add BYTE PTR [r13+0x0],r8b
   1400080c0:	push   rbx
   1400080c1:	add    BYTE PTR [rbp+0x0],al
   1400080c4:	push   rdx
   1400080c5:	add    BYTE PTR [rsi+0x0],dl
	...
   1400080d0:	add    BYTE PTR [r8+r8*1+0x4f],cl
   1400080d5:	add    BYTE PTR [rbx+0x0],dl
   1400080d8:	add    BYTE PTR [r11+0x0],r10b
   1400080dc:	push   rsp
   1400080dd:	add    BYTE PTR [rdi+0x0],bl
   1400080e0:	push   rbx
   1400080e1:	add    BYTE PTR [rcx+0x0],cl
   1400080e4:	push   rsp
   1400080e5:	add    BYTE PTR [rbp+0x0],al
	...
   1400080f0:	push   rdi
   1400080f1:	add    BYTE PTR [rdx+0x0],dl
   1400080f4:	rex.WB add BYTE PTR [r8+rax*1+0x41],dl
   1400080f9:	add    BYTE PTR [rdx+0x0],al
   1400080fc:	rex.WR add BYTE PTR [rbp+0x0],r8b
	...
   140008108:	add    BYTE PTR [r8+r8*1+0x49],r10b
   14000810d:	add    BYTE PTR [rbp+0x0],cl
   140008110:	add    BYTE PTR [r11+0x0],r10b
   140008114:	add    BYTE PTR [r10+0x0],r10b
   140008118:	push   rsi
   140008119:	add    BYTE PTR [rax],al
   14000811b:	add    BYTE PTR [rax],al
   14000811d:	add    BYTE PTR [rax],al
   14000811f:	add    BYTE PTR [rsi+0x0],cl
   140008122:	add    BYTE PTR [rsi+0x0],r9b
   140008126:	rex.XB add BYTE PTR [r8],al
   140008129:	add    BYTE PTR [rax],al
   14000812b:	add    BYTE PTR [rax],al
   14000812d:	add    BYTE PTR [rax],al
   14000812f:	add    BYTE PTR [rax+0x0],dl
   140008132:	add    BYTE PTR [r10+0x0],dl
   140008136:	push   rsp
   140008137:	add    BYTE PTR [rcx+0x0],cl
   14000813a:	add    BYTE PTR [r8+rax*1+0x5f],cl
   14000813f:	add    BYTE PTR [rbx+0x0],dl
   140008142:	add    BYTE PTR [r11+0x0],r8b
   140008146:	push   rdx
   140008147:	add    BYTE PTR [rbp+0x0],al
   14000814a:	push   rsp
   14000814b:	add    BYTE PTR [rax],al
   14000814d:	add    BYTE PTR [rax],al
   14000814f:	add    BYTE PTR [rsi+0x0],al
   140008152:	push   rbp
   140008153:	add    BYTE PTR [rax+rax*1+0x4c],cl
   140008157:	add    BYTE PTR [rdi+0x0],bl
   14000815a:	push   rbx
   14000815b:	add    BYTE PTR [rbp+0x0],al
   14000815e:	rex.XB add BYTE PTR [r10+0x0],dl
   140008162:	add    BYTE PTR [r8+rax*1+0x0],r10b
   140008167:	add    BYTE PTR [rdi+0x0],dl
   14000816a:	push   rbx
   14000816b:	add    BYTE PTR [rax],al
   14000816d:	add    BYTE PTR [rax],al
   14000816f:	add    BYTE PTR [rax+rax*1+0x53],al
   140008173:	add    BYTE PTR [rdi+0x0],bl
   140008176:	cmp    BYTE PTR [rax],al
	...
   140008180:	push   rax
   140008181:	add    BYTE PTR [rcx+0x0],cl
   140008184:	rex.WRX add BYTE PTR [rdi+0x0],r8b
	...
   140008190:	add    BYTE PTR [rsi+0x0],r9b
   140008194:	push   rbx
   140008195:	add    BYTE PTR [rdi+0x0],bl
   140008198:	add    BYTE PTR [rbx+0x0],r8b
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	add    BYTE PTR [rsi+0x0],r9b
   1400081a4:	push   rbx
   1400081a5:	add    BYTE PTR [rdi+0x0],bl
   1400081a8:	add    BYTE PTR [rdi+0x0],r9b
   1400081ac:	rex.WRB add BYTE PTR [r9+0x0],r8b
   1400081b0:	rex.WB add BYTE PTR [r14+0x0],cl
   1400081b4:	add    BYTE PTR [rax],al
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	add    BYTE PTR [rsi+0x0],r9b
   1400081bc:	push   rbx
   1400081bd:	add    BYTE PTR [rdi+0x0],bl
   1400081c0:	rex.RX add BYTE PTR [rdi+0x0],r9b
   1400081c4:	push   rdx
   1400081c5:	add    BYTE PTR [rbp+0x0],al
   1400081c8:	push   rbx
   1400081c9:	add    BYTE PTR [rax+rax*1+0x0],dl
   1400081cd:	add    BYTE PTR [rax],al
   1400081cf:	add    BYTE PTR [rax+rax*1+0x4f],cl
   1400081d3:	add    BYTE PTR [rbx+0x0],al
   1400081d6:	add    BYTE PTR [r8+rax*1+0x0],cl
   1400081db:	add    BYTE PTR [rax],al
   1400081dd:	add    BYTE PTR [rax],al
   1400081df:	add    BYTE PTR [rsi+0x0],cl
   1400081e2:	rex.WRXB add BYTE PTR [r15+0x0],r11b
   1400081e6:	push   rsp
   1400081e7:	add    BYTE PTR [rbx+0x0],al
   1400081ea:	push   rax
   1400081eb:	add    BYTE PTR [rax],al
   1400081ed:	add    BYTE PTR [rax],al
   1400081ef:	add    BYTE PTR [rsi+0x0],cl
   1400081f2:	add    BYTE PTR [r15+0x0],r8b
   1400081f6:	add    BYTE PTR [r8+rax*1+0x49],dl
   1400081fb:	add    BYTE PTR [rsi+0x0],dl
   1400081fe:	add    BYTE PTR [r8],r8b
	...
   14000820d:	add    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rbp+0x0],al
   140008212:	jb     0x140008214
   140008214:	jb     0x140008216
   140008216:	outs   dx,DWORD PTR ds:[rsi]
   140008217:	add    BYTE PTR [rdx+0x0],dh
   14000821a:	and    BYTE PTR [rax],al
   14000821c:	imul   eax,DWORD PTR [rax],0x69006e
   140008222:	je     0x140008224
   140008224:	imul   eax,DWORD PTR [rax],0x6c0061
   14000822a:	imul   eax,DWORD PTR [rax],0x69007a
   140008230:	outs   dx,BYTE PTR ds:[rsi]
   140008231:	add    BYTE PTR [rdi+0x0],ah
   140008234:	and    BYTE PTR [rax],al
   140008236:	ins    BYTE PTR es:[rdi],dx
   140008237:	add    BYTE PTR [rdi+0x0],ch
   14000823a:	movsxd eax,DWORD PTR [rax]
   14000823c:	(bad)  
   14000823d:	add    BYTE PTR [rax+rax*1+0x69],ch
   140008241:	add    BYTE PTR [rdx+0x0],bh
   140008244:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140008249:	add    BYTE PTR [rdi+0x0],ch
   14000824c:	jne    0x14000824e
   14000824e:	je     0x140008250
   140008250:	jo     0x140008252
   140008252:	jne    0x140008254
   140008254:	je     0x140008256
   140008256:	cmp    al,BYTE PTR [rax]
   140008258:	and    BYTE PTR [rax],al
   14000825a:	xor    BYTE PTR [rax],al
   14000825c:	js     0x14000825e
   14000825e:	and    eax,0x38003000
   140008263:	add    BYTE PTR [rax+0x0],bh
   140008266:	or     al,BYTE PTR [rax]
	...
   140008270:	sub    eax,0x68006c00
   140008275:	add    BYTE PTR [rax],al
   140008277:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a900ee7d
   14000827d:	add    BYTE PTR [rax],al
   14000827f:	add    BYTE PTR [rip+0x64006b00],ch        # 0x1a400ed85
   140008285:	add    BYTE PTR [rbx+0x0],ah
   140008288:	outs   dx,DWORD PTR ds:[rsi]
   140008289:	add    BYTE PTR [rax+0x0],dh
   14000828c:	je     0x14000828e
   14000828e:	imul   eax,DWORD PTR [rax],0x6e006f
   140008294:	jae    0x140008296
   140008296:	add    BYTE PTR [rax],al
   140008298:	sub    eax,0x61006300
   14000829d:	add    BYTE PTR [rbx+0x0],ah
   1400082a0:	push   0x6f006500
   1400082a5:	add    BYTE PTR [rax+0x0],dh
   1400082a8:	je     0x1400082aa
   1400082aa:	imul   eax,DWORD PTR [rax],0x6e006f
   1400082b0:	jae    0x1400082b2
   1400082b2:	add    BYTE PTR [rax],al
   1400082b4:	add    BYTE PTR [rax],al
   1400082b6:	add    BYTE PTR [rax],al
   1400082b8:	je     0x1400082ba
   1400082ba:	imul   eax,DWORD PTR [rax],0x6b0063
   1400082c0:	add    BYTE PTR gs:[rax+rax*1+0x73],dh
   1400082c5:	add    BYTE PTR [rax],al
   1400082c7:	add    BYTE PTR [rax+rax*1+0x67],dh
   1400082cb:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400082cf:	add    BYTE PTR [rax+0x0],dh
   1400082d2:	jne    0x1400082d4
   1400082d4:	jb     0x1400082d6
   1400082d6:	add    BYTE PTR [ebp+0x0],ah
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	add    BYTE PTR [rax],al
   1400082de:	add    BYTE PTR [rax],al
   1400082e0:	jae    0x1400082e2
   1400082e2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400082e6:	jae    0x1400082e8
   1400082e8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400082ee:	jae    0x1400082f0
	...
   1400082f8:	imul   eax,DWORD PTR [rax],0x63
   1400082fb:	add    BYTE PTR [rax+rax*1+0x5f],ah
   1400082ff:	add    BYTE PTR [rbx+0x0],ah
   140008302:	(bad)  
   140008303:	add    BYTE PTR [rbx+0x0],ah
   140008306:	push   0x6500
   14000830b:	add    BYTE PTR [rax],al
   14000830d:	add    BYTE PTR [rax],al
   14000830f:	add    BYTE PTR [rdi+0x0],ah
   140008312:	add    BYTE PTR gs:[rax+rax*1+0x0],dh
   140008317:	add    BYTE PTR [rcx+0x0],ah
   14000831a:	add    BYTE PTR fs:[rax+rax*1+0x5f],ah
   14000831f:	add    BYTE PTR [rdx+0x0],ah
   140008322:	imul   eax,DWORD PTR [rax],0x64006e
	...
   140008330:	jno    0x140008332
   140008332:	jne    0x140008334
   140008334:	add    BYTE PTR gs:[rdx+0x0],dh
   140008338:	jns    0x14000833a
   14000833a:	pop    rdi
   14000833b:	add    BYTE PTR [rdx+0x0],ah
   14000833e:	imul   eax,DWORD PTR [rax],0x64006e
   140008344:	add    BYTE PTR [rax],al
   140008346:	add    BYTE PTR [rax],al
   140008348:	jo     0x14000834a
   14000834a:	jne    0x14000834c
   14000834c:	jb     0x14000834e
   14000834e:	add    BYTE PTR [ebp+0x0],ah
   140008352:	pop    rdi
   140008353:	add    BYTE PTR [rdx+0x0],ah
   140008356:	imul   eax,DWORD PTR [rax],0x64006e
   14000835c:	add    BYTE PTR [rax],al
   14000835e:	add    BYTE PTR [rax],al
   140008360:	sub    eax,0x6800
   140008365:	add    BYTE PTR [rax],al
   140008367:	add    BYTE PTR [rbx+0x65],cl
   14000836a:	jb     0x1400083ce
   14000836c:	gs jb  0x1400083de
   14000836f:	jae    0x140008371
   140008371:	add    BYTE PTR [rax],al
   140008373:	add    BYTE PTR [rax],al
   140008375:	add    BYTE PTR [rax],al
   140008377:	add    BYTE PTR [rdi+0x69],dl
   14000837a:	outs   dx,BYTE PTR ds:[rsi]
   14000837b:	ins    BYTE PTR es:[rdi],dx
   14000837c:	outs   dx,DWORD PTR ds:[rsi]
   14000837d:	outs   dx,DWORD PTR ds:[esi]
   14000837f:	outs   dx,BYTE PTR ds:[rsi]
	...
   140008388:	jae    0x14000838a
   14000838a:	add    BYTE PTR gs:[rbx+0x0],ah
   14000838e:	jne    0x140008390
   140008390:	jb     0x140008392
   140008392:	xor    eax,DWORD PTR [rax]
   140008394:	xor    al,BYTE PTR [rax]
   140008396:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000839b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000839f:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   1400083a3:	rex.RXB
   1400083a4:	gs je  0x1400083f3
   1400083a7:	outs   dx,DWORD PTR ds:[rsi]
   1400083a8:	outs   dx,DWORD PTR ds:[esi]
   1400083aa:	outs   dx,BYTE PTR ds:[rsi]
   1400083ab:	push   rbx
   1400083ac:	gs jae 0x140008422
   1400083af:	imul   ebp,DWORD PTR [rdi+0x6e],0x61746144
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	rex.WR jae 0x14000841c
   1400083bb:	push   rdx
   1400083bc:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6f4c7265
   1400083c5:	outs   dx,DWORD PTR ds:[esi]
   1400083c7:	outs   dx,BYTE PTR ds:[rsi]
   1400083c8:	push   rax
   1400083c9:	jb     0x14000843a
   1400083cb:	movsxd esp,DWORD PTR [rbp+0x73]
   1400083ce:	jae    0x1400083d0
   1400083d0:	rex.WR jae 0x140008434
   1400083d3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400083d5:	outs   dx,DWORD PTR ds:[rsi]
   1400083d6:	imul   esi,DWORD PTR [rbp+0x70],0x41
   1400083da:	jne    0x140008450
   1400083dc:	push   0x69746e65
   1400083e1:	movsxd esp,DWORD PTR [rcx+0x74]
   1400083e4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6b636150
   1400083eb:	(bad)  
   1400083ec:	add    BYTE PTR gs:[eax],al
   1400083f0:	rex.WR jae 0x140008454
   1400083f3:	rex.RX jb 0x14000845b
   1400083f6:	gs push rdx
   1400083f8:	gs je  0x140008470
   1400083fb:	jb     0x14000846b
   1400083fd:	rex.X jne 0x140008466
   140008400:	data16 gs jb 0x140008404
   140008404:	add    BYTE PTR [rax],al
   140008406:	add    BYTE PTR [rax],al
   140008408:	rex.WR jae 0x14000846c
   14000840b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000840d:	outs   dx,BYTE PTR ds:[rsi]
   14000840e:	outs   dx,BYTE PTR ds:[rsi]
   14000840f:	movsxd esi,DWORD PTR gs:[rbp+rdx*2+0x6e]
   140008414:	je     0x140008488
   140008416:	jne    0x14000848b
   140008418:	je     0x14000847f
   14000841a:	add    BYTE PTR fs:[rax],al
   14000841d:	add    BYTE PTR [rax],al
   14000841f:	add    BYTE PTR [rbx+rsi*2+0x61],cl
   140008423:	rex.R
   140008424:	gs jb  0x14000848c
   140008427:	imul   esi,DWORD PTR [ebx+0x74],0x6f4c7265
   14000842f:	outs   dx,DWORD PTR ds:[esi]
   140008431:	outs   dx,BYTE PTR ds:[rsi]
   140008432:	push   rax
   140008433:	jb     0x1400084a4
   140008435:	movsxd esp,DWORD PTR [rbp+0x73]
   140008438:	jae    0x14000843a
   14000843a:	add    BYTE PTR [rax],al
   14000843c:	add    BYTE PTR [rax],al
   14000843e:	add    BYTE PTR [rax],al
   140008440:	rex.WR jae 0x1400084a4
   140008443:	rex.XB (bad) 
   140008445:	ins    BYTE PTR es:[rdi],dx
   140008446:	ins    BYTE PTR es:[rdi],dx
   140008447:	rex.B jne 0x1400084be
   14000844a:	push   0x69746e65
   14000844f:	movsxd esp,DWORD PTR [rcx+0x74]
   140008452:	imul   ebp,DWORD PTR [rdi+0x6e],0x6b636150
   140008459:	(bad)  
   14000845a:	add    BYTE PTR gs:[eax],al
   14000845e:	add    BYTE PTR [rax],al
   140008460:	add    BYTE PTR cs:[rip+0x6400],ah        # 0x14000e867
	...
   14000846f:	add    BYTE PTR [rbp+0x0],al
   140008472:	jb     0x140008474
   140008474:	jb     0x140008476
   140008476:	outs   dx,DWORD PTR ds:[rsi]
   140008477:	add    BYTE PTR [rdx+0x0],dh
   14000847a:	sub    BYTE PTR [rax],al
   14000847c:	and    eax,0x78002300
   140008481:	add    BYTE PTR [rcx],ch
   140008483:	add    BYTE PTR [rdx],bh
   140008485:	add    BYTE PTR [rax],ah
   140008487:	add    BYTE PTR [rsi+0x0],ah
   14000848a:	(bad)  
   14000848b:	add    BYTE PTR [rcx+0x0],ch
   14000848e:	ins    BYTE PTR es:[rdi],dx
   14000848f:	add    BYTE PTR [rbp+0x0],ah
   140008492:	add    BYTE PTR fs:[rax],ah
   140008495:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140008499:	add    BYTE PTR [rax],ah
   14000849b:	add    BYTE PTR [rbx+0x0],ah
   14000849e:	outs   dx,DWORD PTR ds:[rsi]
   14000849f:	add    BYTE PTR [rsi+0x0],ch
   1400084a2:	jae    0x1400084a4
   1400084a4:	je     0x1400084a6
   1400084a6:	jb     0x1400084a8
   1400084a8:	jne    0x1400084aa
   1400084aa:	movsxd eax,DWORD PTR [rax]
   1400084ac:	je     0x1400084ae
   1400084ae:	and    BYTE PTR [rax],al
   1400084b0:	outs   dx,DWORD PTR ds:[rsi]
   1400084b1:	add    BYTE PTR [rbp+0x0],dh
   1400084b4:	je     0x1400084b6
   1400084b6:	jo     0x1400084b8
   1400084b8:	jne    0x1400084ba
   1400084ba:	je     0x1400084bc
   1400084bc:	and    BYTE PTR [rax],al
   1400084be:	movsxd eax,DWORD PTR [rax]
   1400084c0:	outs   dx,DWORD PTR ds:[rsi]
   1400084c1:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400084c5:	add    BYTE PTR [rax],ah
   1400084c7:	add    BYTE PTR [rax+0x0],dh
   1400084ca:	(bad)  
   1400084cb:	add    BYTE PTR [rdi+0x0],ah
   1400084ce:	add    BYTE PTR gs:[rsi],ch
   1400084d1:	add    BYTE PTR [rdx],cl
	...
   1400084df:	add    BYTE PTR [rbp+0x0],al
   1400084e2:	jb     0x1400084e4
   1400084e4:	jb     0x1400084e6
   1400084e6:	outs   dx,DWORD PTR ds:[rsi]
   1400084e7:	add    BYTE PTR [rdx+0x0],dh
   1400084ea:	sub    BYTE PTR [rax],al
   1400084ec:	and    eax,0x78002300
   1400084f1:	add    BYTE PTR [rcx],ch
   1400084f3:	add    BYTE PTR [rdx],bh
   1400084f5:	add    BYTE PTR [rax],ah
   1400084f7:	add    BYTE PTR [rbx+0x0],dh
   1400084fa:	je     0x1400084fc
   1400084fc:	(bad)  
   1400084fd:	add    BYTE PTR [rdx+0x0],dh
   140008500:	je     0x140008502
   140008502:	and    BYTE PTR [rax],al
   140008504:	outs   dx,DWORD PTR ds:[rsi]
   140008505:	add    BYTE PTR [rsi+0x0],ah
   140008508:	and    BYTE PTR [rax],al
   14000850a:	movsxd eax,DWORD PTR [rax]
   14000850c:	outs   dx,DWORD PTR ds:[rsi]
   14000850d:	add    BYTE PTR [rsi+0x0],ch
   140008510:	jbe    0x140008512
   140008512:	add    BYTE PTR gs:[rdx+0x0],dh
   140008516:	jae    0x140008518
   140008518:	imul   eax,DWORD PTR [rax],0x6e006f
   14000851e:	and    BYTE PTR [rax],al
   140008520:	je     0x140008522
   140008522:	outs   dx,DWORD PTR ds:[rsi]
   140008523:	add    BYTE PTR [rax],ah
   140008525:	add    BYTE PTR [rbp+0x0],ch
   140008528:	jne    0x14000852a
   14000852a:	ins    BYTE PTR es:[rdi],dx
   14000852b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000852f:	add    BYTE PTR [rdx+0x0],ah
   140008532:	jns    0x140008534
   140008534:	je     0x140008536
   140008536:	add    BYTE PTR gs:[rax],ah
   140008539:	add    BYTE PTR [rbx+0x0],dh
   14000853c:	je     0x14000853e
   14000853e:	jb     0x140008540
   140008540:	imul   eax,DWORD PTR [rax],0x67006e
   140008546:	and    BYTE PTR [rax],al
   140008548:	data16 add BYTE PTR [rcx+0x0],ah
   14000854c:	imul   eax,DWORD PTR [rax],0x65006c
   140008552:	add    BYTE PTR fs:[rsi],ch
   140008555:	add    BYTE PTR [rdx],cl
	...
   14000855f:	add    BYTE PTR [rbp+0x0],al
   140008562:	jb     0x140008564
   140008564:	jb     0x140008566
   140008566:	outs   dx,DWORD PTR ds:[rsi]
   140008567:	add    BYTE PTR [rdx+0x0],dh
   14000856a:	sub    BYTE PTR [rax],al
   14000856c:	and    eax,0x78002300
   140008571:	add    BYTE PTR [rcx],ch
   140008573:	add    BYTE PTR [rdx],bh
   140008575:	add    BYTE PTR [rax],ah
   140008577:	add    BYTE PTR [rbp+0x0],ch
   14000857a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000857e:	outs   dx,DWORD PTR ds:[rsi]
   14000857f:	add    BYTE PTR [rdx+0x0],dh
   140008582:	jns    0x140008584
   140008584:	and    BYTE PTR [rax],al
   140008586:	(bad)  
   140008587:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000858b:	add    BYTE PTR [rdi+0x0],ch
   14000858e:	movsxd eax,DWORD PTR [rax]
   140008590:	(bad)  
   140008591:	add    BYTE PTR [rax+rax*1+0x69],dh
   140008595:	add    BYTE PTR [rdi+0x0],ch
   140008598:	outs   dx,BYTE PTR ds:[rsi]
   140008599:	add    BYTE PTR [rax],ah
   14000859b:	add    BYTE PTR [rax],ch
   14000859d:	add    BYTE PTR [rip+0x64006c00],ah        # 0x1a400f1a3
   1400085a3:	add    BYTE PTR [rax],ah
   1400085a5:	add    BYTE PTR [rdx+0x0],ah
   1400085a8:	jns    0x1400085aa
   1400085aa:	je     0x1400085ac
   1400085ac:	add    BYTE PTR gs:[rbx+0x0],dh
   1400085b0:	sub    DWORD PTR [rax],eax
   1400085b2:	and    BYTE PTR [rax],al
   1400085b4:	data16 add BYTE PTR [rcx+0x0],ah
   1400085b8:	imul   eax,DWORD PTR [rax],0x65006c
   1400085be:	add    BYTE PTR fs:[rsi],ch
   1400085c1:	add    BYTE PTR [rdx],cl
	...
   1400085cf:	add    BYTE PTR [rbp+0x0],al
   1400085d2:	jb     0x1400085d4
   1400085d4:	jb     0x1400085d6
   1400085d6:	outs   dx,DWORD PTR ds:[rsi]
   1400085d7:	add    BYTE PTR [rdx+0x0],dh
   1400085da:	sub    BYTE PTR [rax],al
   1400085dc:	and    eax,0x78002300
   1400085e1:	add    BYTE PTR [rcx],ch
   1400085e3:	add    BYTE PTR [rdx],bh
   1400085e5:	add    BYTE PTR [rax],ah
   1400085e7:	add    BYTE PTR [rbx+0x0],dh
   1400085ea:	je     0x1400085ec
   1400085ec:	jb     0x1400085ee
   1400085ee:	imul   eax,DWORD PTR [rax],0x67006e
   1400085f4:	and    BYTE PTR [rax],al
   1400085f6:	movsxd eax,DWORD PTR [rax]
   1400085f8:	outs   dx,DWORD PTR ds:[rsi]
   1400085f9:	add    BYTE PTR [rbp+0x0],ch
   1400085fc:	jo     0x1400085fe
   1400085fe:	outs   dx,DWORD PTR ds:[rsi]
   1400085ff:	add    BYTE PTR [rbx+0x0],dh
   140008602:	imul   eax,DWORD PTR [rax],0x690074
   140008608:	outs   dx,DWORD PTR ds:[rsi]
   140008609:	add    BYTE PTR [rsi+0x0],ch
   14000860c:	and    BYTE PTR [rax],al
   14000860e:	data16 add BYTE PTR [rcx+0x0],ah
   140008612:	imul   eax,DWORD PTR [rax],0x65006c
   140008618:	add    BYTE PTR fs:[rsi],ch
   14000861b:	add    BYTE PTR [rdx],cl
   14000861d:	add    BYTE PTR [rax],al
   14000861f:	add    BYTE PTR [rbp+0x0],al
   140008622:	jb     0x140008624
   140008624:	jb     0x140008626
   140008626:	outs   dx,DWORD PTR ds:[rsi]
   140008627:	add    BYTE PTR [rdx+0x0],dh
   14000862a:	and    BYTE PTR [rax],al
   14000862c:	ins    BYTE PTR es:[rdi],dx
   14000862d:	add    BYTE PTR [rdi+0x0],ch
   140008630:	(bad)  
   140008631:	add    BYTE PTR [rax+rax*1+0x69],ah
   140008635:	add    BYTE PTR [rsi+0x0],ch
   140008638:	add    BYTE PTR [eax],ah
   14000863b:	add    BYTE PTR [rdx+0x0],dh
   14000863e:	add    BYTE PTR gs:[rbx+0x0],dh
   140008642:	outs   dx,DWORD PTR ds:[rsi]
   140008643:	add    BYTE PTR [rbp+0x0],dh
   140008646:	jb     0x140008648
   140008648:	movsxd eax,DWORD PTR [rax]
   14000864a:	add    BYTE PTR gs:[rdx],bh
   14000864d:	add    BYTE PTR [rax],ah
   14000864f:	add    BYTE PTR [rax],dh
   140008651:	add    BYTE PTR [rax+0x0],bh
   140008654:	and    eax,0x38003000
   140008659:	add    BYTE PTR [rax+0x0],bh
   14000865c:	or     al,BYTE PTR [rax]
   14000865e:	add    BYTE PTR [rax],al
   140008660:	add    BYTE PTR [rax],al
   140008662:	add    BYTE PTR [rax],al
   140008664:	lea    edi,[rcx]
   140008666:	lahf   
   140008667:	push   rbp
   140008668:	add    BYTE PTR [rax],al
   14000866a:	add    BYTE PTR [rax],al
   14000866c:	add    al,BYTE PTR [rax]
   14000866e:	add    BYTE PTR [rax],al
   140008670:	and    al,BYTE PTR [rax]
   140008672:	add    BYTE PTR [rax],al
   140008674:	(bad)  
   140008675:	xchg   DWORD PTR [rax],eax
   140008677:	add    BYTE PTR [rax+0x6d],ah
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	add    BYTE PTR [rax],al
   14000867e:	add    BYTE PTR [rax],al
   140008680:	lea    edi,[rcx]
   140008682:	lahf   
   140008683:	push   rbp
   140008684:	add    BYTE PTR [rax],al
   140008686:	add    BYTE PTR [rax],al
   140008688:	or     eax,0xe0000000
   14000868d:	add    DWORD PTR [rax],eax
   14000868f:	add    BYTE PTR [rax-0x67ffff79],bl
   140008695:	ins    DWORD PTR es:[rdi],dx
	...
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	movabs al,ds:0x0
	...
   140008715:	add    BYTE PTR [rax],al
   140008717:	add    BYTE PTR [rax],cl
   140008719:	movabs al,ds:0x14000
	...
   14000872e:	add    BYTE PTR [rax],al
   140008730:	test   al,0x73
   140008732:	add    BYTE PTR [rax+0x1],al
   140008735:	add    BYTE PTR [rax],al
   140008737:	add    BYTE PTR [rax+0x1400073],dh
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    al,dh
   140008741:	jae    0x140008743
   140008743:	rex add DWORD PTR [rax],eax
   140008746:	add    BYTE PTR [rax],al
   140008748:	or     BYTE PTR [rax],al
   14000874a:	add    BYTE PTR [rax],al
   14000874c:	add    BYTE PTR [rax],al
   14000874e:	add    BYTE PTR [rax],al
   140008750:	add    BYTE PTR [rip+0x0],dh        # 0x140008756
	...
   14000875e:	add    BYTE PTR [rax],al
   140008760:	push   rdx
   140008761:	push   rbx
   140008762:	rex.R push rbx
   140008764:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008765:	scas   al,BYTE PTR es:[rdi]
   140008766:	(bad)  
   140008767:	es ins DWORD PTR es:[rdi],dx
   140008769:	(bad)  
   14000876a:	addr32 rex.RX (bad) 
   14000876d:	mov    BYTE PTR [rdi-0x7e902fef],dl
   140008773:	nop
   140008774:	add    DWORD PTR [rax],eax
   140008776:	add    BYTE PTR [rax],al
   140008778:	imul   ebp,DWORD PTR [rcx+rbp*2+0x73],0x74
   14000877d:	cs jo  0x1400087e4
   140008780:	(bad)  
	...
   140008795:	add    BYTE PTR [rax],al
   140008797:	add    BYTE PTR [rdi+0x43],al
   14000879a:	push   rsp
   14000879b:	rex.WR add BYTE PTR [rax],r10b
   14000879e:	add    BYTE PTR [rax],al
   1400087a0:	call   0x16e0087f4
   1400087a5:	je     0x14000880c
   1400087a7:	js     0x14000881d
   1400087a9:	and    al,0x6d
   1400087ab:	outs   dx,BYTE PTR ds:[rsi]
   1400087ac:	add    BYTE PTR [rax],al
   1400087ae:	add    BYTE PTR [rax],al
   1400087b0:	lock pop rdi
   1400087b2:	add    BYTE PTR [rax],al
   1400087b4:	adc    al,BYTE PTR [rax]
   1400087b6:	add    BYTE PTR [rax],al
   1400087b8:	cs je  0x140008820
   1400087bb:	js     0x140008831
   1400087bd:	and    al,0x6d
   1400087bf:	outs   dx,BYTE PTR ds:[rsi]
   1400087c0:	and    al,0x30
   1400087c2:	xor    BYTE PTR [rax],al
   1400087c4:	adc    BYTE PTR [rax+0x0],ah
   1400087c7:	add    BYTE PTR [rax+0x0],dl
   1400087ca:	add    BYTE PTR [rax],al
   1400087cc:	cs je  0x140008834
   1400087cf:	js     0x140008845
   1400087d1:	and    al,0x78
   1400087d3:	add    BYTE PTR [rax],al
   1400087d5:	jo     0x1400087d7
   1400087d7:	add    BYTE PTR [rax+0x2e000003],ch
   1400087dd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   1400087e5:	add    BYTE PTR [rax],al
   1400087e7:	add    BYTE PTR [rax+0x10000073],ch
   1400087ed:	add    BYTE PTR [rax],al
   1400087ef:	add    BYTE PTR [rsi],ch
   1400087f1:	xor    BYTE PTR [rax],dh
   1400087f3:	movsxd esp,DWORD PTR [rsi+0x67]
   1400087f6:	add    BYTE PTR [rax],al
   1400087f8:	mov    eax,0x8000073
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    BYTE PTR [rsi],ch
   140008801:	rex.XB push r10
   140008803:	push   rsp
   140008804:	and    al,0x58
   140008806:	rex.XB
   140008807:	add    BYTE PTR [r8],al
   14000880a:	add    BYTE PTR [rax],al
   14000880c:	shl    BYTE PTR [rbx+0x0],0x0
   140008810:	or     BYTE PTR [rax],al
   140008812:	add    BYTE PTR [rax],al
   140008814:	cs rex.XB push r10
   140008817:	push   rsp
   140008818:	and    al,0x58
   14000881a:	rex.XB
   14000881b:	rex.B
   14000881c:	add    BYTE PTR [r8],al
   14000881f:	add    al,cl
   140008821:	jae    0x140008823
   140008823:	add    BYTE PTR [rax],cl
   140008825:	add    BYTE PTR [rax],al
   140008827:	add    BYTE PTR [rsi],ch
   140008829:	rex.XB push r10
   14000882b:	push   rsp
   14000882c:	and    al,0x58
   14000882e:	rex.XB pop r10
   140008830:	add    BYTE PTR [rax],al
   140008832:	add    BYTE PTR [rax],al
   140008834:	shl    BYTE PTR [rbx+0x0],1
   140008837:	add    BYTE PTR [rax],cl
   140008839:	add    BYTE PTR [rax],al
   14000883b:	add    BYTE PTR [rsi],ch
   14000883d:	rex.XB push r10
   14000883f:	push   rsp
   140008840:	and    al,0x58
   140008842:	rex.WB
   140008843:	add    BYTE PTR [r8],al
   140008846:	add    BYTE PTR [rax],al
   140008848:	fdiv   DWORD PTR [rbx+0x0]
   14000884b:	add    BYTE PTR [rax],cl
   14000884d:	add    BYTE PTR [rax],al
   14000884f:	add    BYTE PTR [rsi],ch
   140008851:	rex.XB push r10
   140008853:	push   rsp
   140008854:	and    al,0x58
   140008856:	rex.WB
   140008857:	rex.B
   140008858:	add    BYTE PTR [r8],al
   14000885b:	add    al,ah
   14000885d:	jae    0x14000885f
   14000885f:	add    BYTE PTR [rax],cl
   140008861:	add    BYTE PTR [rax],al
   140008863:	add    BYTE PTR [rsi],ch
   140008865:	rex.XB push r10
   140008867:	push   rsp
   140008868:	and    al,0x58
   14000886a:	rex.WB pop r9
   14000886c:	add    BYTE PTR [rax],al
   14000886e:	add    BYTE PTR [rax],al
   140008870:	call   0x1480088e8
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rsi],ch
   140008879:	rex.XB push r10
   14000887b:	push   rsp
   14000887c:	and    al,0x58
   14000887e:	rex.WB pop r10
   140008880:	add    BYTE PTR [rax],al
   140008882:	add    BYTE PTR [rax],al
   140008884:	lock jae 0x140008887
   140008887:	add    BYTE PTR [rax],ah
   140008889:	add    BYTE PTR [rax],al
   14000888b:	add    BYTE PTR [rsi],ch
   14000888d:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140008895:	add    BYTE PTR [rax],al
   140008897:	add    BYTE PTR [rax],dl
   140008899:	je     0x14000889b
   14000889b:	add    BYTE PTR [rax+0x13],dl
   14000889e:	add    BYTE PTR [rax],al
   1400088a0:	cs jb  0x140008907
   1400088a3:	(bad)  
   1400088a4:	je     0x140008907
   1400088a6:	add    BYTE PTR [rax],al
   1400088a8:	(bad)  
   1400088a9:	xchg   DWORD PTR [rax],eax
   1400088ab:	add    BYTE PTR [rax],bl
   1400088ad:	add    al,BYTE PTR [rax]
   1400088af:	add    BYTE PTR [rsi],ch
   1400088b1:	jb     0x140008917
   1400088b3:	(bad)  
   1400088b4:	je     0x140008917
   1400088b6:	and    al,0x7a
   1400088b8:	jp     0x140008934
   1400088ba:	fs (bad) 
   1400088bc:	add    BYTE PTR [eax],al
   1400088bf:	add    BYTE PTR [rax-0x77],bh
   1400088c2:	add    BYTE PTR [rax],al
   1400088c4:	pop    rsp
   1400088c5:	add    al,0x0
   1400088c7:	add    BYTE PTR [rsi],ch
   1400088c9:	js     0x14000892f
   1400088cb:	(bad)  
   1400088cc:	je     0x14000892f
   1400088ce:	add    BYTE PTR [rax],al
   1400088d0:	(bad)  
   1400088d1:	lea    eax,[rax]
   1400088d3:	add    BYTE PTR [rax+0x2e000001],dl
   1400088d9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   1400088e1:	add    BYTE PTR [rax],al
   1400088e3:	add    BYTE PTR [rdi+rcx*4+0x0],ah
   1400088e7:	add    BYTE PTR [rax+rax*1],dl
   1400088ea:	add    BYTE PTR [rax],al
   1400088ec:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   1400088f5:	add    BYTE PTR [rax],al
   1400088f7:	add    BYTE PTR [rax-0x71],bh
   1400088fa:	add    BYTE PTR [rax],al
   1400088fc:	test   al,0x3
   1400088fe:	add    BYTE PTR [rax],al
   140008900:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140008909:	add    BYTE PTR [rax],al
   14000890b:	add    BYTE PTR [rax],ah
   14000890d:	xchg   ebx,eax
   14000890e:	add    BYTE PTR [rax],al
   140008910:	or     DWORD PTR cs:[rax],eax
   140008913:	add    BYTE PTR [rsi],ch
   140008915:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000891d:	add    BYTE PTR [rax],al
   14000891f:	add    BYTE PTR [rax],al
   140008921:	movabs al,ds:0x642e000000200000
   14000892a:	(bad)  
   14000892b:	je     0x14000898e
   14000892d:	add    BYTE PTR [rax],al
   14000892f:	add    BYTE PTR [rax],ah
   140008931:	movabs al,ds:0x622e000005e80000
   14000893a:	jae    0x1400089af
   14000893c:	add    BYTE PTR [rax],al
   14000893e:	add    BYTE PTR [rax],al
   140008940:	add    BYTE PTR [rax+0x2c40000],dh
   140008946:	add    BYTE PTR [rax],al
   140008948:	cs jo  0x1400089af
   14000894b:	(bad)  
   14000894c:	je     0x1400089af
   14000894e:	add    BYTE PTR [rax],al
   140008950:	add    al,al
   140008952:	add    BYTE PTR [rax],al
   140008954:	test   al,0x0
   140008956:	add    BYTE PTR [rax],al
   140008958:	cs jb  0x1400089ce
   14000895b:	jb     0x1400089c0
   14000895d:	and    al,0x30
   14000895f:	xor    DWORD PTR [rax],eax
   140008961:	add    BYTE PTR [rax],al
   140008963:	add    BYTE PTR [rax-0x7fffff40],dh
   140008969:	add    al,0x0
   14000896b:	add    BYTE PTR [rsi],ch
   14000896d:	jb     0x1400089e2
   14000896f:	jb     0x1400089d4
   140008971:	and    al,0x30
   140008973:	xor    al,BYTE PTR [rax]
   140008975:	add    BYTE PTR [rax],al
   140008977:	add    BYTE PTR [rcx],al
   140008979:	sbb    BYTE PTR [rcx],cl
   14000897b:	add    BYTE PTR [rax],bl
   14000897d:	ret    0xf011
   140008980:	pavgb  mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c09557
   140008987:	jo     0x140008991
   140008989:	(bad)  
   14000898a:	(bad)  
   14000898b:	xor    BYTE PTR [rsi],al
   14000898d:	push   rax
   14000898e:	add    BYTE PTR [rax],al
   140008990:	add    DWORD PTR [rdx],ecx
   140008992:	add    al,0x0
   140008994:	or     dh,BYTE PTR [rsi+rax*1]
   140008997:	add    BYTE PTR [rdx],cl
   140008999:	xor    al,BYTE PTR [rsi]
   14000899b:	jo     0x1400089b6
   14000899d:	(bad)  
   14000899e:	or     DWORD PTR [rax],eax
   1400089a0:	adc    eax,0x15005334
   1400089a5:	add    DWORD PTR [rax+rax*1+0xe],ecx
   1400089a9:	lock or al,0xe0
   1400089ac:	or     dh,BYTE PTR [rax+0x9]
   1400089af:	(bad)  
   1400089b0:	or     BYTE PTR [rax+0x0],dl
   1400089b3:	add    BYTE PTR [rax+0x5f],cl
   1400089b6:	add    BYTE PTR [rax],al
   1400089b8:	push   rax
   1400089b9:	add    al,BYTE PTR [rax]
   1400089bb:	add    BYTE PTR [rcx],bl
   1400089bd:	sbb    eax,DWORD PTR [rax+rax*1]
   1400089c0:	or     eax,0xd001034
   1400089c5:	rol    BYTE PTR [rsi],cl
   1400089c7:	push   rax
   1400089c8:	rex.W pop rdi
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	(bad)  
   1400089cd:	add    BYTE PTR [rax],al
   1400089cf:	add    BYTE PTR [rcx],al
   1400089d1:	(bad)  
   1400089d2:	add    al,BYTE PTR [rax]
   1400089d4:	(bad)  
   1400089d5:	xor    al,BYTE PTR [rdx]
   1400089d7:	xor    BYTE PTR [rcx],al
   1400089d9:	(bad)  
   1400089da:	add    DWORD PTR [rax],eax
   1400089dc:	(bad)  
   1400089dd:	(bad)  
   1400089de:	add    BYTE PTR [rax],al
   1400089e0:	add    DWORD PTR [rax],edx
   1400089e2:	(bad)  
   1400089e3:	add    BYTE PTR [rax],dl
   1400089e5:	or     DWORD PTR fs:[rax],eax
   1400089e8:	adc    BYTE PTR [rax+rcx*1],dh
   1400089eb:	add    BYTE PTR [rax],dl
   1400089ed:	push   rdx
   1400089ee:	or     al,0x70
   1400089f0:	add    DWORD PTR [rsi],eax
   1400089f2:	add    al,BYTE PTR [rax]
   1400089f4:	(bad)  
   1400089f5:	xor    al,BYTE PTR [rdx]
   1400089f7:	xor    BYTE PTR [rcx],bl
   1400089f9:	xor    DWORD PTR [rip+0x23742300],ecx        # 0x16374acff
   1400089ff:	add    BYTE PTR [rbx],ah
   140008a01:	and    al,BYTE PTR fs:[rax]
   140008a04:	and    esi,DWORD PTR [rcx+riz*1]
   140008a07:	add    BYTE PTR [rbx],ah
   140008a09:	add    DWORD PTR [rdx],ebx
   140008a0b:	add    BYTE PTR [rax],bl
   140008a0d:	lock (bad) 
   140008a0f:	loopne 0x140008a25
   140008a11:	rcl    BYTE PTR [rdx],1
   140008a13:	rcl    BYTE PTR [rax],0x50
   140008a16:	add    BYTE PTR [rax],al
   140008a18:	rex.W pop rdi
   140008a1a:	add    BYTE PTR [rax],al
   140008a1c:	rol    BYTE PTR [rax],0x0
   140008a1f:	add    BYTE PTR [rcx],al
   140008a21:	sbb    cl,BYTE PTR [rdx]
   140008a23:	add    BYTE PTR [rdx],bl
   140008a25:	xor    al,0x13
   140008a27:	add    BYTE PTR [rdx],bl
   140008a29:	xchg   edx,eax
   140008a2a:	(bad)  
   140008a2b:	lock adc al,0xe0
   140008a2e:	adc    dl,al
   140008a30:	adc    al,al
   140008a32:	(bad)  
   140008a33:	jo     0x140008a42
   140008a35:	(bad)  
   140008a36:	or     al,0x50
   140008a38:	sbb    DWORD PTR [rsi+rax*1],ebx
   140008a3b:	add    BYTE PTR [rsi],cl
   140008a3d:	rol    BYTE PTR [rdi],cl
   140008a3f:	loopne 0x140008a46
   140008a41:	jo     0x140008a47
   140008a43:	(bad)  
   140008a44:	add    esi,DWORD PTR [rax]
   140008a46:	add    dl,BYTE PTR [rax+0x48]
   140008a49:	pop    rdi
   140008a4a:	add    BYTE PTR [rax],al
   140008a4c:	(bad)  
   140008a4d:	add    BYTE PTR [rax],al
   140008a4f:	add    BYTE PTR [rcx],bl
   140008a51:	sbb    al,0x6
   140008a53:	add    BYTE PTR [rsi],cl
   140008a55:	rol    BYTE PTR [rdi],cl
   140008a57:	loopne 0x140008a5e
   140008a59:	jo     0x140008a5f
   140008a5b:	(bad)  
   140008a5c:	add    esi,DWORD PTR [rax]
   140008a5e:	add    dl,BYTE PTR [rax+0x48]
   140008a61:	pop    rdi
   140008a62:	add    BYTE PTR [rax],al
   140008a64:	(bad)  
   140008a65:	add    BYTE PTR [rax],al
   140008a67:	add    BYTE PTR [rcx],bl
   140008a69:	and    eax,0x3417000a
   140008a6e:	sbb    DWORD PTR [rax],eax
   140008a70:	(bad)  
   140008a71:	rcl    BYTE PTR [rax],cl
   140008a73:	lock (bad) 
   140008a75:	loopne 0x140008a83
   140008a77:	ror    BYTE PTR [rdx],1
   140008a79:	ror    BYTE PTR [rax],0x70
   140008a7c:	(bad)  
   140008a7d:	(bad)  
   140008a7e:	(bad)  
   140008a7f:	push   rax
   140008a80:	rex.W pop rdi
   140008a82:	add    BYTE PTR [rax],al
   140008a84:	(bad)  
   140008a85:	add    BYTE PTR [rax],al
   140008a87:	add    BYTE PTR [rcx],al
   140008a89:	or     al,BYTE PTR [rax+rax*1]
   140008a8c:	or     dh,BYTE PTR [rsp+rcx*1]
   140008a8f:	add    BYTE PTR [rdx],cl
   140008a91:	xchg   edx,eax
   140008a92:	(bad)  
   140008a93:	jo     0x140008aae
   140008a95:	sub    BYTE PTR [rdx],cl
   140008a97:	add    BYTE PTR [rdx],bl
   140008a99:	xor    al,0x1b
   140008a9b:	add    BYTE PTR [rdx],bl
   140008a9d:	repnz adc al,dh
   140008aa0:	(bad)  
   140008aa1:	loopne 0x140008aaf
   140008aa3:	ror    BYTE PTR [rdx],1
   140008aa5:	ror    BYTE PTR [rax],0x70
   140008aa8:	(bad)  
   140008aa9:	(bad)  
   140008aaa:	(bad)  
   140008aab:	push   rax
   140008aac:	rex.W pop rdi
   140008aae:	add    BYTE PTR [rax],al
   140008ab0:	js     0x140008ab2
   140008ab2:	add    BYTE PTR [rax],al
   140008ab4:	add    DWORD PTR [rdi],ebx
   140008ab6:	or     al,0x0
   140008ab8:	(bad)  
   140008ab9:	je     0x140008acf
   140008abb:	add    BYTE PTR [rdi],bl
   140008abd:	adc    eax,DWORD PTR fs:[rax]
   140008ac0:	(bad)  
   140008ac1:	xor    al,0x12
   140008ac3:	add    BYTE PTR [rdi],bl
   140008ac5:	mov    dl,0x18
   140008ac7:	lock (bad) 
   140008ac9:	loopne 0x140008adf
   140008acb:	rcl    BYTE PTR [rdx],1
   140008acd:	rcl    BYTE PTR [rax],0x50
   140008ad0:	sbb    DWORD PTR [rdi],esp
   140008ad2:	or     al,BYTE PTR [rax]
   140008ad4:	sbb    DWORD PTR [rcx],eax
   140008ad6:	and    eax,0xbf00d00
   140008adb:	loopne 0x140008ae6
   140008add:	rol    BYTE PTR [rdi],1
   140008adf:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143608f56
   140008ae6:	add    dl,BYTE PTR [rax+0x48]
   140008ae9:	pop    rdi
   140008aea:	add    BYTE PTR [rax],al
   140008aec:	adc    BYTE PTR [rcx],al
   140008aee:	add    BYTE PTR [rax],al
   140008af0:	add    DWORD PTR [rdi],ecx
   140008af2:	(bad)  
   140008af3:	add    BYTE PTR [rdi],cl
   140008af5:	fs (bad) 
   140008af7:	add    BYTE PTR [rdi],cl
   140008af9:	xor    al,0x6
   140008afb:	add    BYTE PTR [rdi],cl
   140008afd:	xor    cl,BYTE PTR [rbx]
   140008aff:	jo     0x140008b02
   140008b01:	sbb    cl,BYTE PTR [rdx]
   140008b03:	add    BYTE PTR [rdx],bl
   140008b05:	adc    DWORD PTR fs:[rax],eax
   140008b08:	sbb    dh,BYTE PTR [rax+rdx*1]
   140008b0b:	add    BYTE PTR [rdx],bl
   140008b0d:	xchg   edx,eax
   140008b0e:	adc    esi,eax
   140008b10:	adc    eax,esp
   140008b12:	xadd   BYTE PTR [rip+0x19500c70],cl        # 0x159509789
   140008b19:	(bad)  
   140008b1a:	add    al,BYTE PTR [rax]
   140008b1c:	or     dl,dl
   140008b1e:	add    al,0x30
   140008b20:	rex.W pop rdi
   140008b22:	add    BYTE PTR [rax],al
   140008b24:	push   0x19000000
   140008b29:	(bad)  
   140008b2a:	or     eax,0x69742600
   140008b2f:	add    BYTE PTR [rsi],ah
   140008b31:	fs push 0x66342600
   140008b37:	add    BYTE PTR [rsi],ah
   140008b39:	add    DWORD PTR [rax+0x0],esp
   140008b3c:	sbb    al,dh
   140008b3e:	(bad)  
   140008b3f:	loopne 0x140008b55
   140008b41:	rcl    BYTE PTR [rdx],1
   140008b43:	rcl    BYTE PTR [rax],0x50
   140008b46:	add    BYTE PTR [rax],al
   140008b48:	rex.W pop rdi
   140008b4a:	add    BYTE PTR [rax],al
   140008b4c:	lock add al,BYTE PTR [rax]
   140008b4f:	add    BYTE PTR [rcx],bl
   140008b51:	or     DWORD PTR es:[rax],eax
   140008b54:	sbb    BYTE PTR [rsi+rbx*1],dh
   140008b57:	add    BYTE PTR [rax],bl
   140008b59:	add    DWORD PTR [rsi],edx
   140008b5b:	add    BYTE PTR [rax+rsi*8],cl
   140008b5e:	or     ah,al
   140008b60:	or     BYTE PTR [rax+0x7],dh
   140008b63:	(bad)  
   140008b64:	(bad)  
   140008b65:	push   rax
   140008b66:	add    BYTE PTR [rax],al
   140008b68:	rex.W pop rdi
   140008b6a:	add    BYTE PTR [rax],al
   140008b6c:	movabs al,ds:0x1200061201000000
   140008b75:	push   rdx
   140008b76:	or     esp,eax
   140008b78:	or     DWORD PTR [rax+0x8],esi
   140008b7b:	(bad)  
   140008b7c:	(bad)  
   140008b7d:	xor    BYTE PTR [rsi],al
   140008b7f:	push   rax
   140008b80:	sbb    DWORD PTR [rip+0x74170007],esp        # 0x1b4178b8d
   140008b86:	(bad)  
   140008b87:	add    BYTE PTR [rdi],dl
   140008b89:	xor    al,0x15
   140008b8b:	add    BYTE PTR [rdi],dl
   140008b8d:	add    DWORD PTR [rdx],edx
   140008b8f:	add    BYTE PTR [rax+rdx*2],cl
   140008b92:	add    BYTE PTR [rax],al
   140008b94:	rex.W pop rdi
   140008b96:	add    BYTE PTR [rax],al
   140008b98:	mov    BYTE PTR [rax],al
   140008b9a:	add    BYTE PTR [rax],al
   140008b9c:	add    DWORD PTR [rsi],ebx
   140008b9e:	or     eax,DWORD PTR [rax]
   140008ba0:	(bad)  
   140008ba1:	and    DWORD PTR fs:[rax],eax
   140008ba4:	(bad)  
   140008ba5:	xor    al,0x20
   140008ba7:	add    BYTE PTR [rsi],bl
   140008ba9:	add    DWORD PTR [rdx],ebx
   140008bab:	add    BYTE PTR [rdx],dl
   140008bad:	lock adc al,ah
   140008bb0:	(bad)  
   140008bb1:	ror    BYTE PTR [rax+rsi*2],0xb
   140008bb5:	push   rax
   140008bb6:	add    BYTE PTR [rax],al
   140008bb8:	add    DWORD PTR [rcx],ebx
   140008bba:	or     al,BYTE PTR [rax]
   140008bbc:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140008bc0:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140008bc4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140008bc8:	sbb    DWORD PTR [rsi+rax*1],esi
   140008bcb:	add    BYTE PTR [rcx],bl
   140008bcd:	xor    dl,BYTE PTR [rip+0xa1801e0]        # 0x14a188db3
   140008bd3:	add    BYTE PTR [rax],bl
   140008bd5:	or     al,BYTE PTR fs:[rax]
   140008bd8:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140008bdc:	sbb    BYTE PTR [rax+rcx*1],dh
   140008bdf:	add    BYTE PTR [rax],bl
   140008be1:	xor    dl,BYTE PTR [rax+rsi*8]
   140008be4:	adc    ah,al
   140008be6:	adc    BYTE PTR [rax+0x1],dh
   140008be9:	sbb    BYTE PTR [rdx],cl
   140008beb:	add    BYTE PTR [rax],bl
   140008bed:	or     al,BYTE PTR fs:[rax]
   140008bf0:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140008bf4:	sbb    BYTE PTR [rax+rcx*1],dh
   140008bf7:	add    BYTE PTR [rax],bl
   140008bf9:	xor    dl,BYTE PTR [rax+rsi*8]
   140008bfc:	adc    ah,al
   140008bfe:	adc    BYTE PTR [rax+0x1],dh
   140008c01:	adc    al,0x8
   140008c03:	add    BYTE PTR [rsp+riz*2],dl
   140008c06:	or     BYTE PTR [rax],al
   140008c08:	adc    al,0x54
   140008c0a:	(bad)  
   140008c0b:	add    BYTE PTR [rsp+rsi*1],dl
   140008c0e:	(bad)  
   140008c0f:	add    BYTE PTR [rdx+rsi*1],dl
   140008c12:	adc    BYTE PTR [rax+0x1],dh
   140008c15:	adc    al,0x8
   140008c17:	add    BYTE PTR [rsp+riz*2],dl
   140008c1a:	or     BYTE PTR [rax],al
   140008c1c:	adc    al,0x54
   140008c1e:	(bad)  
   140008c1f:	add    BYTE PTR [rsp+rsi*1],dl
   140008c22:	(bad)  
   140008c23:	add    BYTE PTR [rdx+rsi*1],dl
   140008c26:	adc    BYTE PTR [rax+0x1],dh
   140008c29:	adc    al,0x8
   140008c2b:	add    BYTE PTR [rsp+riz*2],dl
   140008c2e:	or     BYTE PTR [rax],al
   140008c30:	adc    al,0x54
   140008c32:	(bad)  
   140008c33:	add    BYTE PTR [rsp+rsi*1],dl
   140008c36:	(bad)  
   140008c37:	add    BYTE PTR [rdx+rsi*1],dl
   140008c3a:	adc    BYTE PTR [rax+0x1],dh
   140008c3d:	sbb    eax,0x741d000c
   140008c42:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d009aad
   140008c49:	push   rsp
   140008c4a:	or     eax,0xc341d00
   140008c4f:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f0a5c7
   140008c55:	loopne 0x140008c6c
   140008c57:	rol    BYTE PTR [rcx],0x12
   140008c5a:	add    eax,0xe421200
   140008c5f:	jo     0x140008c6e
   140008c61:	(bad)  
   140008c62:	or     al,0x50
   140008c64:	or     esi,DWORD PTR [rax]
   140008c66:	add    BYTE PTR [rax],al
   140008c68:	sbb    DWORD PTR [rdi],ebx
   140008c6a:	add    eax,0x18340d00
   140008c6f:	add    BYTE PTR [rip+0x6001601],cl        # 0x14600a276
   140008c75:	jo     0x140008c77
   140008c77:	add    BYTE PTR [rax+0x5f],cl
   140008c7a:	add    BYTE PTR [rax],al
   140008c7c:	movabs al,ds:0x1b00081b01000000
   140008c85:	push   rsp
   140008c86:	(bad)  
   140008c87:	add    BYTE PTR [rbx],bl
   140008c89:	xor    al,0xc
   140008c8b:	add    BYTE PTR [rbx],bl
   140008c8d:	jb     0x140008ca6
   140008c8f:	loopne 0x140008ca6
   140008c91:	jo     0x140008ca7
   140008c93:	(bad)  
   140008c94:	add    DWORD PTR [rcx],ebx
   140008c96:	(bad)  
   140008c97:	add    BYTE PTR [rcx],bl
   140008c99:	push   rdx
   140008c9a:	adc    eax,0x127013e0
   140008c9f:	(bad)  
   140008ca0:	adc    DWORD PTR [rax+0x10],edx
   140008ca3:	xor    BYTE PTR [rcx],al
   140008ca5:	sbb    eax,0x741d000c
   140008caa:	or     eax,DWORD PTR [rax]
   140008cac:	sbb    eax,0x1d000a64
   140008cb1:	push   rsp
   140008cb2:	or     DWORD PTR [rax],eax
   140008cb4:	sbb    eax,0x1d000834
   140008cb9:	xor    bl,BYTE PTR [rcx]
   140008cbb:	lock (bad) 
   140008cbd:	loopne 0x140008cd4
   140008cbf:	rol    BYTE PTR [rcx],0xe
   140008cc2:	add    DWORD PTR [rax],eax
   140008cc4:	(bad)  
   140008cc5:	(bad)  
   140008cc6:	add    BYTE PTR [rax],al
   140008cc8:	add    DWORD PTR [rdx],ecx
   140008cca:	add    al,0x0
   140008ccc:	or     dh,BYTE PTR [rsi+rax*1]
   140008ccf:	add    BYTE PTR [rdx],cl
   140008cd1:	xor    al,BYTE PTR [rsi]
   140008cd3:	jo     0x140008cd6
   140008cd5:	add    al,0x1
   140008cd7:	add    BYTE PTR [rdx+rax*2],al
   140008cda:	add    BYTE PTR [rax],al
   140008cdc:	add    DWORD PTR [rcx+rax*1],eax
   140008cdf:	add    BYTE PTR [rdx+riz*2],al
   140008ce2:	add    BYTE PTR [rax],al
   140008ce4:	or     DWORD PTR [rcx],ebx
   140008ce6:	or     al,BYTE PTR [rax]
   140008ce8:	sbb    esp,eax
   140008cea:	or     eax,DWORD PTR [rax]
   140008cec:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140008cf0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140008cf4:	sbb    DWORD PTR [rax+rcx*1],esi
   140008cf7:	add    BYTE PTR [rcx],bl
   140008cf9:	push   rdx
   140008cfa:	adc    eax,0x5ee6e0
   140008cff:	add    BYTE PTR [rcx],al
   140008d01:	add    BYTE PTR [rax],al
   140008d03:	add    cl,ch
   140008d05:	push   rsi
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	pop    rdx
   140008d09:	pop    rax
   140008d0a:	add    BYTE PTR [rax],al
   140008d0c:	(bad)  
   140008d0d:	(bad)  
   140008d0e:	add    BYTE PTR [rax],al
   140008d10:	pop    rdx
   140008d11:	pop    rax
   140008d12:	add    BYTE PTR [rax],al
   140008d14:	add    DWORD PTR [rsi],eax
   140008d16:	add    al,BYTE PTR [rax]
   140008d18:	(bad)  
   140008d19:	xor    al,BYTE PTR [rdx]
   140008d1b:	push   rax
   140008d1c:	add    DWORD PTR [rcx+rax*1],eax
   140008d1f:	add    BYTE PTR [rdx+rax*2],al
   140008d22:	add    BYTE PTR [rax],al
   140008d24:	add    BYTE PTR [rax],al
   140008d26:	add    BYTE PTR [rax],al
   140008d28:	add    DWORD PTR [rax],eax
   140008d2a:	add    BYTE PTR [rax],al
   140008d2c:	add    DWORD PTR [rcx+rax*1],eax
   140008d2f:	add    BYTE PTR [rdx+riz*8],al
   140008d32:	add    BYTE PTR [rax],al
   140008d34:	add    DWORD PTR [rsi],eax
   140008d36:	add    al,BYTE PTR [rax]
   140008d38:	(bad)  
   140008d39:	xor    al,BYTE PTR [rdx]
   140008d3b:	xor    BYTE PTR [rcx],al
   140008d3d:	or     al,0x2
   140008d3f:	add    BYTE PTR [rcx+rax*1],cl
   140008d42:	adc    DWORD PTR [rax],eax
   140008d44:	add    DWORD PTR [rcx+rax*1],eax
   140008d47:	add    BYTE PTR [rdx+rax*2],al
   140008d4a:	add    BYTE PTR [rax],al
   140008d4c:	add    DWORD PTR [rcx+rax*1],eax
   140008d4f:	add    BYTE PTR [rdx+rax*2],al
   140008d52:	add    BYTE PTR [rax],al
   140008d54:	or     DWORD PTR [rcx+rax*1],eax
   140008d57:	add    BYTE PTR [rdx+riz*1],al
   140008d5a:	add    BYTE PTR [rax],al
   140008d5c:	out    0x5e,al
   140008d5e:	add    BYTE PTR [rax],al
   140008d60:	add    DWORD PTR [rax],eax
   140008d62:	add    BYTE PTR [rax],al
   140008d64:	pop    rsp
   140008d65:	pop    rsp
   140008d66:	add    BYTE PTR [rax],al
   140008d68:	xchg   edx,eax
   140008d69:	pop    rsp
   140008d6a:	add    BYTE PTR [rax],al
   140008d6c:	add    DWORD PTR [rax],eax
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	xchg   edx,eax
   140008d71:	pop    rsp
   140008d72:	add    BYTE PTR [rax],al
   140008d74:	add    DWORD PTR [rsi],eax
   140008d76:	add    al,BYTE PTR [rax]
   140008d78:	(bad)  
   140008d79:	xor    al,BYTE PTR [rdx]
   140008d7b:	xor    BYTE PTR [rcx],cl
   140008d7d:	or     al,BYTE PTR [rax+rax*1]
   140008d80:	or     dh,BYTE PTR [rsi+rax*1]
   140008d83:	add    BYTE PTR [rdx],cl
   140008d85:	xor    al,BYTE PTR [rsi]
   140008d87:	jo     0x140008d6f
   140008d89:	pop    rsi
   140008d8a:	add    BYTE PTR [rax],al
   140008d8c:	add    DWORD PTR [rax],eax
   140008d8e:	add    BYTE PTR [rax],al
   140008d90:	ins    DWORD PTR es:[rdi],dx
   140008d91:	pop    rbp
   140008d92:	add    BYTE PTR [rax],al
   140008d94:	movabs al,ds:0xa00000604000005d
   140008d9d:	pop    rbp
   140008d9e:	add    BYTE PTR [rax],al
   140008da0:	add    DWORD PTR [rsi],eax
   140008da2:	add    al,BYTE PTR [rax]
   140008da4:	(bad)  
   140008da5:	xor    al,BYTE PTR [rdx]
   140008da7:	push   rax
   140008da8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d8db2
   140008dae:	or     DWORD PTR [rax],eax
   140008db0:	or     eax,0x500632
   140008db5:	add    BYTE PTR [rax],al
   140008db7:	add    BYTE PTR [rcx],al
   140008db9:	add    BYTE PTR [rax],al
   140008dbb:	add    BYTE PTR [rcx],al
   140008dbd:	(bad)  
   140008dbe:	add    al,BYTE PTR [rax]
   140008dc0:	(bad)  
   140008dc1:	xor    al,BYTE PTR [rdx]
   140008dc3:	xor    BYTE PTR [rcx],al
   140008dc5:	(bad)  
   140008dc6:	add    al,BYTE PTR [rax]
   140008dc8:	(bad)  
   140008dc9:	xor    al,BYTE PTR [rdx]
   140008dcb:	xor    BYTE PTR [rcx],al
   140008dcd:	add    al,0x1
   140008dcf:	add    BYTE PTR [rdx+rax*2],al
   140008dd2:	add    BYTE PTR [rax],al
   140008dd4:	js     0x140008d65
	...
   140008dde:	add    BYTE PTR [rax],al
   140008de0:	mov    esp,0x94
   140008de5:	jo     0x140008de7
   140008de7:	add    BYTE PTR [rax],bl
   140008de9:	nop
	...
   140008df2:	add    BYTE PTR [rax],al
   140008df4:	in     al,0x95
   140008df6:	add    BYTE PTR [rax],al
   140008df8:	movabs al,ds:0x91d0000070
	...
   140008e09:	xchg   edi,eax
   140008e0a:	add    BYTE PTR [rax],al
   140008e0c:	pop    rax
   140008e0d:	jb     0x140008e0f
   140008e0f:	add    BYTE PTR [rax+0x90],ah
   140008e15:	add    BYTE PTR [rax],al
   140008e17:	add    BYTE PTR [rax],al
   140008e19:	add    BYTE PTR [rax],al
   140008e1b:	add    dh,bh
   140008e1d:	cwde   
   140008e1e:	add    BYTE PTR [rax],al
   140008e20:	sub    BYTE PTR [rcx+0x0],dh
   140008e23:	add    al,al
   140008e25:	xchg   ecx,eax
	...
   140008e2e:	add    BYTE PTR [rax],al
   140008e30:	or     bl,BYTE PTR [rcx+0x72480000]
   140008e36:	add    BYTE PTR [rax],al
   140008e38:	mov    al,0x92
	...
   140008e42:	add    BYTE PTR [rax],al
   140008e44:	sbb    BYTE PTR [rcx+0x73380000],bl
   140008e4a:	add    BYTE PTR [rax],al
   140008e4c:	cwde   
   140008e4d:	xchg   ecx,eax
	...
   140008e56:	add    BYTE PTR [rax],al
   140008e58:	es cdq 
   140008e5a:	add    BYTE PTR [rax],al
   140008e5c:	and    BYTE PTR [rdx+0x0],dh
   140008e5f:	add    BYTE PTR [rax-0x6f],ch
	...
   140008e6a:	add    BYTE PTR [rax],al
   140008e6c:	cqo    
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	lock jno 0x140008e73
   140008e73:	add    al,al
   140008e75:	nop
	...
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	outs   dx,BYTE PTR ds:[rsi]
   140008e81:	cdq    
   140008e82:	add    BYTE PTR [rax],al
   140008e84:	rex.W jno 0x140008e87
   140008e87:	add    BYTE PTR [rax],bh
   140008e89:	xchg   ecx,eax
	...
   140008e92:	add    BYTE PTR [rax],al
   140008e94:	cwde   
   140008e95:	cdq    
   140008e96:	add    BYTE PTR [rax],al
   140008e98:	shl    BYTE PTR [rcx+0x0],0x0
   140008e9c:	pop    rax
   140008e9d:	xchg   ecx,eax
	...
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	ret    0x99
   140008eab:	add    al,ah
   140008ead:	jno    0x140008eaf
   140008eaf:	add    BYTE PTR [rax+0x91],ch
   140008eb5:	add    BYTE PTR [rax],al
   140008eb7:	add    BYTE PTR [rax],al
   140008eb9:	add    BYTE PTR [rax],al
   140008ebb:	add    dh,ah
   140008ebd:	cdq    
   140008ebe:	add    BYTE PTR [rax],al
   140008ec0:	xor    BYTE PTR [rdx+0x0],dh
   140008ec3:	add    al,ch
   140008ec5:	nop
	...
   140008ece:	add    BYTE PTR [rax],al
   140008ed0:	or     bl,BYTE PTR [rdx+0x71700000]
   140008ed6:	add    BYTE PTR [rax],al
   140008ed8:	sbb    BYTE PTR [rcx+0x0],dl
   140008ede:	add    BYTE PTR [rax],al
   140008ee0:	add    BYTE PTR [rax],al
   140008ee2:	add    BYTE PTR [rax],al
   140008ee4:	sub    bl,BYTE PTR [rdx+0x71a00000]
   140008eea:	add    BYTE PTR [rax],al
   140008eec:	or     BYTE PTR [rcx+0x0],dl
   140008ef2:	add    BYTE PTR [rax],al
   140008ef4:	add    BYTE PTR [rax],al
   140008ef6:	add    BYTE PTR [rax],al
   140008ef8:	push   rdx
   140008ef9:	(bad)  
   140008efa:	add    BYTE PTR [rax],al
   140008efc:	nop
   140008efd:	jno    0x140008eff
   140008eff:	add    al,bl
   140008f01:	nop
	...
   140008f0a:	add    BYTE PTR [rax],al
   140008f0c:	jl     0x140008ea8
   140008f0e:	add    BYTE PTR [rax],al
   140008f10:	(bad)  
   140008f11:	jno    0x140008f13
   140008f13:	add    BYTE PTR [rax+0x91],cl
   140008f19:	add    BYTE PTR [rax],al
   140008f1b:	add    BYTE PTR [rax],al
   140008f1d:	add    BYTE PTR [rax],al
   140008f1f:	add    BYTE PTR [rdx+rbx*4+0x72100000],bl
   140008f26:	add    BYTE PTR [rax],al
   140008f28:	mov    al,0x90
	...
   140008f32:	add    BYTE PTR [rax],al
   140008f34:	mov    esi,0x3800009a
   140008f39:	jno    0x140008f3b
   140008f3b:	add    BYTE PTR [rax],ch
   140008f3d:	xchg   ecx,eax
	...
   140008f46:	add    BYTE PTR [rax],al
   140008f48:	loop   0x140008ee4
   140008f4a:	add    BYTE PTR [rax],al
   140008f4c:	mov    al,0x71
   140008f4e:	add    BYTE PTR [rax],al
   140008f50:	rcl    BYTE PTR [rdx+0x0],0x0
   140008f57:	add    BYTE PTR [rax],al
   140008f59:	add    BYTE PTR [rax],al
   140008f5b:	add    BYTE PTR [rsi],al
   140008f5d:	pushf  
   140008f5e:	add    BYTE PTR [rax],al
   140008f60:	rex.W jae 0x140008f63
	...
   140008f77:	add    BYTE PTR [rax],ah
   140008f79:	xchg   ebx,eax
   140008f7a:	add    BYTE PTR [rax],al
   140008f7c:	add    BYTE PTR [rax],al
   140008f7e:	add    BYTE PTR [rax],al
   140008f80:	ss xchg ebx,eax
   140008f82:	add    BYTE PTR [rax],al
   140008f84:	add    BYTE PTR [rax],al
   140008f86:	add    BYTE PTR [rax],al
   140008f88:	rex.WRX xchg rbx,rax
   140008f8a:	add    BYTE PTR [rax],al
   140008f8c:	add    BYTE PTR [rax],al
   140008f8e:	add    BYTE PTR [rax],al
   140008f90:	(bad)  
   140008f91:	xchg   ebx,eax
   140008f92:	add    BYTE PTR [rax],al
   140008f94:	add    BYTE PTR [rax],al
   140008f96:	add    BYTE PTR [rax],al
   140008f98:	je     0x140008f2d
   140008f9a:	add    BYTE PTR [rax],al
   140008f9c:	add    BYTE PTR [rax],al
   140008f9e:	add    BYTE PTR [rax],al
   140008fa0:	mov    dl,BYTE PTR [rbx+0x0]
   140008fa6:	add    BYTE PTR [rax],al
   140008fa8:	movabs ds:0xb600000000000093,al
   140008fb1:	xchg   ebx,eax
   140008fb2:	add    BYTE PTR [rax],al
   140008fb4:	add    BYTE PTR [rax],al
   140008fb6:	add    BYTE PTR [rax],al
   140008fb8:	(bad)  
   140008fb9:	xchg   ebx,eax
   140008fba:	add    BYTE PTR [rax],al
   140008fbc:	add    BYTE PTR [rax],al
   140008fbe:	add    BYTE PTR [rax],al
   140008fc0:	rcl    BYTE PTR [rbx+0x0],1
   140008fc6:	add    BYTE PTR [rax],al
   140008fc8:	ficom  WORD PTR [rbx+0x0]
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	clc    
   140008fd1:	xchg   ebx,eax
   140008fd2:	add    BYTE PTR [rax],al
   140008fd4:	add    BYTE PTR [rax],al
   140008fd6:	add    BYTE PTR [rax],al
   140008fd8:	adc    BYTE PTR [rax+rax*1+0x0],dl
   140008fdf:	add    BYTE PTR [rdx],ch
   140008fe1:	xchg   esp,eax
   140008fe2:	add    BYTE PTR [rax],al
   140008fe4:	add    BYTE PTR [rax],al
   140008fe6:	add    BYTE PTR [rax],al
   140008fe8:	rex.RX xchg esp,eax
   140008fea:	add    BYTE PTR [rax],al
   140008fec:	add    BYTE PTR [rax],al
   140008fee:	add    BYTE PTR [rax],al
   140008ff0:	xchg   sp,ax
   140008ff2:	add    BYTE PTR [rax],al
   140008ff4:	add    BYTE PTR [rax],al
   140008ff6:	add    BYTE PTR [rax],al
   140008ff8:	(bad)  
   140008ff9:	xchg   esp,eax
   140008ffa:	add    BYTE PTR [rax],al
   140008ffc:	add    BYTE PTR [rax],al
   140008ffe:	add    BYTE PTR [rax],al
   140009000:	pushf  
   140009001:	xchg   esp,eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	mov    al,0x94
	...
   140009016:	add    BYTE PTR [rax],al
   140009018:	retf   0x94
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    al,bl
   140009021:	xchg   esp,eax
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    BYTE PTR [rax],al
   140009028:	call   0x1400090c1
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    ah,dh
   140009031:	xchg   esp,eax
   140009032:	add    BYTE PTR [rax],al
   140009034:	add    BYTE PTR [rax],al
   140009036:	add    BYTE PTR [rax],al
   140009038:	or     BYTE PTR [rbp+0x0],dl
   14000903e:	add    BYTE PTR [rax],al
   140009040:	(bad)  
   140009041:	xchg   ebp,eax
   140009042:	add    BYTE PTR [rax],al
   140009044:	add    BYTE PTR [rax],al
   140009046:	add    BYTE PTR [rax],al
   140009048:	es xchg ebp,eax
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    BYTE PTR [rax],al
   140009050:	cmp    BYTE PTR [rbp+0x0],dl
   140009056:	add    BYTE PTR [rax],al
   140009058:	rex.RX xchg ebp,eax
   14000905a:	add    BYTE PTR [rax],al
   14000905c:	add    BYTE PTR [rax],al
   14000905e:	add    BYTE PTR [rax],al
   140009060:	(bad)  
   140009061:	xchg   ebp,eax
   140009062:	add    BYTE PTR [rax],al
   140009064:	add    BYTE PTR [rax],al
   140009066:	add    BYTE PTR [rax],al
   140009068:	js     0x140008fff
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	mov    WORD PTR [rbp+0x0],ss
   140009076:	add    BYTE PTR [rax],al
   140009078:	movabs al,ds:0xb400000000000095
   140009081:	xchg   ebp,eax
   140009082:	add    BYTE PTR [rax],al
   140009084:	add    BYTE PTR [rax],al
   140009086:	add    BYTE PTR [rax],al
   140009088:	ret    0x95
   14000908b:	add    BYTE PTR [rax],al
   14000908d:	add    BYTE PTR [rax],al
   14000908f:	add    dl,dl
   140009091:	xchg   ebp,eax
	...
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	and    BYTE PTR [rdi+0x0],dl
	...
   1400090ae:	add    BYTE PTR [rax],al
   1400090b0:	fcomp  DWORD PTR [rax+0x0]
	...
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	stos   BYTE PTR es:[rdi],al
   1400090c1:	xchg   edi,eax
   1400090c2:	add    BYTE PTR [rax],al
   1400090c4:	add    BYTE PTR [rax],al
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	(bad)  
   1400090c9:	xchg   edi,eax
	...
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	mov    dh,0x98
	...
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	push   0x98
   1400090ed:	add    BYTE PTR [rax],al
   1400090ef:	add    BYTE PTR [rax+rbx*4+0x0],dh
   1400090f3:	add    BYTE PTR [rax],al
   1400090f5:	add    BYTE PTR [rax],al
   1400090f7:	add    BYTE PTR [rax+0x98],al
	...
   140009105:	add    BYTE PTR [rax],al
   140009107:	add    BYTE PTR [rax+0x98],ch
	...
   140009115:	add    BYTE PTR [rax],al
   140009117:	add    BYTE PTR [rdx+0x98],dl
	...
   140009125:	add    BYTE PTR [rax],al
   140009127:	add    dh,ch
   140009129:	cwde   
	...
   140009136:	add    BYTE PTR [rax],al
   140009138:	sub    BYTE PTR [rax+0x0],bl
   14000913e:	add    BYTE PTR [rax],al
   140009140:	in     al,0x97
   140009142:	add    BYTE PTR [rax],al
   140009144:	add    BYTE PTR [rax],al
   140009146:	add    BYTE PTR [rax],al
   140009148:	adc    bl,BYTE PTR [rax+0x0]
	...
   140009156:	add    BYTE PTR [rax],al
   140009158:	clc    
   140009159:	xchg   edi,eax
	...
   140009166:	add    BYTE PTR [rax],al
   140009168:	jl     0x140009101
   14000916a:	add    BYTE PTR [rax],al
   14000916c:	add    BYTE PTR [rax],al
   14000916e:	add    BYTE PTR [rax],al
   140009170:	xchg   esi,eax
   140009171:	xchg   edi,eax
   140009172:	add    BYTE PTR [rax],al
   140009174:	add    BYTE PTR [rax],al
   140009176:	add    BYTE PTR [rax],al
   140009178:	push   0x97
	...
   140009185:	add    BYTE PTR [rax],al
   140009187:	add    dl,al
   140009189:	cwde   
	...
   140009196:	add    BYTE PTR [rax],al
   140009198:	(bad)  
   140009199:	xchg   edi,eax
	...
   1400091a6:	add    BYTE PTR [rax],al
   1400091a8:	pop    rax
   1400091a9:	cwde   
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	ds cwde 
	...
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	cmp    al,0x97
	...
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	mov    dl,0x96
   1400091d2:	add    BYTE PTR [rax],al
   1400091d4:	add    BYTE PTR [rax],al
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	test   al,0x96
   1400091da:	add    BYTE PTR [rax],al
   1400091dc:	add    BYTE PTR [rax],al
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	movabs al,ds:0x7c00000000000096
   1400091e9:	xchg   esi,eax
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	add    BYTE PTR [rax],al
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	(bad)  
   1400091f1:	xchg   esi,eax
   1400091f2:	add    BYTE PTR [rax],al
   1400091f4:	add    BYTE PTR [rax],al
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	(bad)  
   1400091f9:	xchg   esi,eax
   1400091fa:	add    BYTE PTR [rax],al
   1400091fc:	add    BYTE PTR [rax],al
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	pop    rax
   140009201:	xchg   esi,eax
   140009202:	add    BYTE PTR [rax],al
   140009204:	add    BYTE PTR [rax],al
   140009206:	add    BYTE PTR [rax],al
   140009208:	rex.WR xchg rsi,rax
   14000920a:	add    BYTE PTR [rax],al
   14000920c:	add    BYTE PTR [rax],al
   14000920e:	add    BYTE PTR [rax],al
   140009210:	rex.X xchg esi,eax
   140009212:	add    BYTE PTR [rax],al
   140009214:	add    BYTE PTR [rax],al
   140009216:	add    BYTE PTR [rax],al
   140009218:	cmp    BYTE PTR [rsi+0x0],dl
   14000921e:	add    BYTE PTR [rax],al
   140009220:	rcl    BYTE PTR [rsi+0x0],cl
   140009226:	add    BYTE PTR [rax],al
   140009228:	sub    al,0x9c
   14000922a:	add    BYTE PTR [rax],al
   14000922c:	add    BYTE PTR [rax],al
   14000922e:	add    BYTE PTR [rax],al
   140009230:	cmp    bl,BYTE PTR [rax+rax*1+0x0]
   140009237:	add    BYTE PTR [rsi],ch
   140009239:	xchg   esi,eax
   14000923a:	add    BYTE PTR [rax],al
   14000923c:	add    BYTE PTR [rax],al
   14000923e:	add    BYTE PTR [rax],al
   140009240:	or     al,0x97
   140009242:	add    BYTE PTR [rax],al
   140009244:	add    BYTE PTR [rax],al
   140009246:	add    BYTE PTR [rax],al
   140009248:	hlt    
   140009249:	xchg   esi,eax
   14000924a:	add    BYTE PTR [rax],al
   14000924c:	add    BYTE PTR [rax],al
   14000924e:	add    BYTE PTR [rax],al
   140009250:	outs   dx,BYTE PTR ds:[rsi]
   140009251:	xchg   esi,eax
   140009252:	add    BYTE PTR [rax],al
   140009254:	add    BYTE PTR [rax],al
   140009256:	add    BYTE PTR [rax],al
   140009258:	and    dl,BYTE PTR [rsi+0x0]
   14000925e:	add    BYTE PTR [rax],al
   140009260:	(bad)  
   140009261:	xchg   esi,eax
   140009262:	add    BYTE PTR [rax],al
   140009264:	add    BYTE PTR [rax],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	or     dl,BYTE PTR [rsi+0x0]
   14000926e:	add    BYTE PTR [rax],al
   140009270:	cli    
   140009271:	xchg   ebp,eax
   140009272:	add    BYTE PTR [rax],al
   140009274:	add    BYTE PTR [rax],al
   140009276:	add    BYTE PTR [rax],al
   140009278:	(bad)  
   140009279:	xchg   esi,eax
   14000927a:	add    BYTE PTR [rax],al
   14000927c:	add    BYTE PTR [rax],al
   14000927e:	add    BYTE PTR [rax],al
   140009280:	repnz xchg ebp,eax
   140009282:	add    BYTE PTR [rax],al
   140009284:	add    BYTE PTR [rax],al
   140009286:	add    BYTE PTR [rax],al
   140009288:	mov    ss,WORD PTR [rsi+0x0]
   14000928e:	add    BYTE PTR [rax],al
   140009290:	(bad)  
   140009291:	pushf  
   140009292:	add    BYTE PTR [rax],al
   140009294:	add    BYTE PTR [rax],al
   140009296:	add    BYTE PTR [rax],al
   140009298:	adc    BYTE PTR [rax+rax*1+0x0],bl
   14000929f:	add    BYTE PTR [rsp+rbx*4+0x0],al
	...
   1400092af:	add    BYTE PTR [rdi+rdx*4+0x0],cl
	...
   1400092bf:	add    BYTE PTR [rsi-0x65],bh
   1400092c2:	add    BYTE PTR [rax],al
   1400092c4:	add    BYTE PTR [rax],al
   1400092c6:	add    BYTE PTR [rax],al
   1400092c8:	(bad)  
   1400092c9:	fwait
   1400092ca:	add    BYTE PTR [rax],al
   1400092cc:	add    BYTE PTR [rax],al
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	mov    dl,0x9b
   1400092d2:	add    BYTE PTR [rax],al
   1400092d4:	add    BYTE PTR [rax],al
   1400092d6:	add    BYTE PTR [rax],al
   1400092d8:	enter  0x9b,0x0
   1400092dc:	add    BYTE PTR [rax],al
   1400092de:	add    BYTE PTR [rax],al
   1400092e0:	(bad)  
   1400092e1:	fwait
   1400092e2:	add    BYTE PTR [rax],al
   1400092e4:	add    BYTE PTR [rax],al
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	fcomp  DWORD PTR [rbx+0x0]
   1400092ee:	add    BYTE PTR [rax],al
   1400092f0:	repnz fwait
   1400092f2:	add    BYTE PTR [rax],al
   1400092f4:	add    BYTE PTR [rax],al
   1400092f6:	add    BYTE PTR [rax],al
   1400092f8:	sub    bl,BYTE PTR [rbx+0x0]
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	adc    BYTE PTR [rbx+0x0],bl
   140009306:	add    BYTE PTR [rax],al
   140009308:	rex.W
   140009309:	fwait
   14000930a:	add    BYTE PTR [rax],al
   14000930c:	add    BYTE PTR [rax],al
   14000930e:	add    BYTE PTR [rax],al
   140009310:	xor    al,0x9b
	...
   14000931e:	add    BYTE PTR [rax],al
   140009320:	xchg   edx,eax
   140009321:	add    BYTE PTR [rbx+0x72],al
   140009324:	gs (bad) 
   140009326:	je     0x14000938d
   140009328:	push   rdi
   140009329:	gs ins BYTE PTR es:[rdi],dx
   14000932b:	ins    BYTE PTR es:[rdi],dx
   14000932c:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   14000932e:	outs   dx,DWORD PTR ds:[rsi]
   14000932f:	ja     0x14000939f
   140009331:	push   rbx
   140009332:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x734c01d3
   14000933a:	(bad)  
   14000933b:	rex.WRX je 0x140009391
   14000933e:	je     0x1400093a1
   140009340:	je     0x1400093b7
   140009342:	jae    0x140009398
   140009344:	outs   dx,DWORD PTR ds:[rsi]
   140009345:	push   rdi
   140009346:	imul   ebp,DWORD PTR [rsi+0x45],0x726f7272
   14000934d:	add    BYTE PTR [rax],bl
   14000934f:	add    cl,BYTE PTR [rdi+0x70]
   140009352:	outs   dx,BYTE PTR gs:[rsi]
   140009354:	push   rsp
   140009355:	push   0x64616572
   14000935a:	push   rsp
   14000935b:	outs   dx,DWORD PTR ds:[rsi]
   14000935c:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140009360:	adc    eax,DWORD PTR [rdx]
   140009362:	rex.WRXB jo 0x1400093ca
   140009365:	outs   dx,BYTE PTR ds:[rsi]
   140009366:	push   rax
   140009367:	jb     0x1400093d8
   140009369:	movsxd esp,DWORD PTR [rbp+0x73]
   14000936c:	jae    0x1400093c2
   14000936e:	outs   dx,DWORD PTR ds:[rsi]
   14000936f:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140009373:	add    BYTE PTR [rdi+0x1],ch
   140009376:	rex.RXB
   140009377:	gs je  0x1400093ce
   14000937a:	outs   dx,DWORD PTR ds:[rsi]
   14000937b:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14000937f:	outs   dx,BYTE PTR ds:[rsi]
   140009380:	outs   dx,WORD PTR ds:[rsi]
   140009382:	jb     0x1400093f1
   140009384:	(bad)  
   140009385:	je     0x1400093f0
   140009387:	outs   dx,DWORD PTR ds:[rsi]
   140009388:	outs   dx,BYTE PTR ds:[rsi]
   140009389:	add    BYTE PTR [rax+0x0],bl
   14000938c:	rex.X jne 0x1400093f8
   14000938f:	ins    BYTE PTR es:[rdi],dx
   140009390:	fs push rsp
   140009392:	jb     0x140009409
   140009394:	jae    0x14000940a
   140009396:	gs gs push rdi
   140009399:	imul   esi,DWORD PTR [rax+rbp*2+0x53],0x576469
   1400093a1:	add    al,dl
   1400093a3:	add    dl,BYTE PTR [rbx+0x65]
   1400093a6:	je     0x1400093ed
   1400093a8:	outs   dx,BYTE PTR ds:[rsi]
   1400093a9:	je     0x14000941d
   1400093ab:	imul   esp,DWORD PTR [rbp+0x73],0x63416e49
   1400093b2:	ins    BYTE PTR es:[rdi],dx
   1400093b3:	push   rdi
   1400093b4:	add    BYTE PTR [rax],al
   1400093b6:	rex.WX add QWORD PTR [rdi+0x65],rax
   1400093ba:	je     0x140009408
   1400093bc:	outs   dx,BYTE PTR gs:[rsi]
   1400093be:	addr32 je 0x140009429
   1400093c1:	push   rbx
   1400093c2:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6f430085
   1400093ca:	jo     0x140009445
   1400093cc:	push   rbx
   1400093cd:	imul   esp,DWORD PTR [rax+rax*1-0x64],0x56734901
   1400093d5:	(bad)  
   1400093d6:	ins    BYTE PTR es:[rdi],dx
   1400093d7:	imul   esp,DWORD PTR [rbx+rdx*2+0x69],0x6c000064
   1400093df:	add    DWORD PTR [rdi+0x65],eax
   1400093e2:	je     0x140009437
   1400093e4:	imul   esp,DWORD PTR [rbx+rdx*2+0x75],0x74754162
   1400093ec:	push   0x7469726f
   1400093f1:	jns    0x140009436
   1400093f3:	outs   dx,DWORD PTR ds:[rsi]
   1400093f4:	jne    0x140009464
   1400093f6:	je     0x1400093f8
   1400093f8:	push   0x1
   1400093fa:	rex.RXB
   1400093fb:	gs je  0x140009451
   1400093fe:	imul   esp,DWORD PTR [rsp+rcx*2+0x65],0x6874676e
   140009406:	push   rdx
   140009407:	gs jno 0x14000947f
   14000940a:	imul   esi,DWORD PTR [rdx+0x65],0x49000064
   140009411:	add    DWORD PTR [rdi+0x65],eax
   140009414:	je     0x140009461
   140009416:	gs jb  0x140009487
   140009419:	gs ins BYTE PTR es:[rdi],dx
   14000941b:	rex.WRXB (bad) 
   14000941d:	push   0x65
   14000941f:	movsxd esi,DWORD PTR [rbx+rdx*2+0x65]
   140009423:	movsxd esi,DWORD PTR [rbp+0x72]
   140009426:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x6547015c
   14000942e:	je     0x140009483
   140009430:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009434:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000943c:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   140009443:	movsxd ebp,DWORD PTR [rax+rax*1-0x73]
   140009447:	add    DWORD PTR [rcx+0x6e],ecx
   14000944a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009452:	push   rbx
   140009453:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009457:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000945f:	imul   esi,DWORD PTR [rax+0x74],0x726f
   140009466:	loopne 0x14000946a
   140009468:	push   rbx
   140009469:	gs je  0x1400094bf
   14000946c:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140009470:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   140009478:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   14000947f:	movsxd ebp,DWORD PTR [rax+rax*1-0x29]
   140009483:	add    dl,BYTE PTR [rbx+0x65]
   140009486:	je     0x1400094d3
   140009488:	gs jb  0x1400094f9
   14000948b:	gs ins BYTE PTR es:[rdi],dx
   14000948d:	rex.WRXB (bad) 
   14000948f:	push   0x65
   140009491:	movsxd esi,DWORD PTR [rbx+rdx*2+0x65]
   140009495:	movsxd esi,DWORD PTR [rbp+0x72]
   140009498:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x754400ef
   1400094a0:	jo     0x14000950e
   1400094a2:	imul   esp,DWORD PTR [rbx+0x61],0x6f546574
   1400094a9:	imul   esp,DWORD PTR [rbp+0x6e],0x45
   1400094ad:	js     0x1400094af
   1400094af:	add    BYTE PTR [rax],bl
   1400094b1:	add    DWORD PTR [rbp+0x71],eax
   1400094b4:	jne    0x140009517
   1400094b6:	ins    BYTE PTR es:[rdi],dx
   1400094b7:	push   rbx
   1400094b8:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x41564441
   1400094c0:	push   rax
   1400094c1:	xor    rsi,QWORD PTR [r10]
   1400094c4:	cs fs ins BYTE PTR es:[rdi],dx
   1400094c7:	ins    BYTE PTR es:[rdi],dx
   1400094c8:	add    BYTE PTR [rax],al
   1400094ca:	mov    ch,0x3
   1400094cc:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400094ce:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400094d1:	rex.B ins BYTE PTR es:[rdi],dx
   1400094d3:	ins    BYTE PTR es:[rdi],dx
   1400094d4:	outs   dx,DWORD PTR ds:[rsi]
   1400094d5:	movsxd eax,DWORD PTR [rax]
   1400094d7:	add    BYTE PTR [rdi+0x2],dl
   1400094da:	rex.RXB
   1400094db:	gs je  0x14000952a
   1400094de:	(bad)  
   1400094df:	jae    0x140009555
   1400094e1:	rex.RB jb 0x140009556
   1400094e4:	outs   dx,DWORD PTR ds:[rsi]
   1400094e5:	jb     0x1400094e7
   1400094e7:	add    BYTE PTR [rcx+0x636f4c03],bh
   1400094ed:	(bad)  
   1400094ee:	ins    BYTE PTR es:[rdi],dx
   1400094ef:	rex.RX jb 0x140009557
   1400094f2:	add    BYTE PTR gs:[rbp+0x32334b03],al
   1400094f9:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400094fb:	jne    0x14000956a
   1400094fd:	push   rax
   1400094fe:	jb     0x14000956f
   140009500:	movsxd esp,DWORD PTR [rbp+0x73]
   140009503:	jae    0x14000956a
   140009505:	jae    0x140009507
   140009507:	add    BYTE PTR [rbp+0x0],bh
   14000950a:	rex.XB ins BYTE PTR es:[rdi],dx
   14000950c:	outs   dx,DWORD PTR ds:[rsi]
   14000950d:	jae    0x140009574
   14000950f:	rex.W (bad) 
   140009511:	outs   dx,BYTE PTR ds:[rsi]
   140009512:	fs ins BYTE PTR es:[rdi],dx
   140009514:	add    BYTE PTR gs:[rdi+0x616f4c03],ch
   14000951b:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140009524:	add    BYTE PTR [rax],al
   140009526:	movabs al,ds:0x4d74616d726f4601
   14000952f:	gs jae 0x1400095a5
   140009532:	(bad)  
   140009533:	addr32 gs push rdi
   140009536:	add    BYTE PTR [rax],al
   140009538:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009539:	add    DWORD PTR [rsi+0x72],eax
   14000953c:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140009546:	(bad)
   14000954b:	gs push rsp
   14000954d:	imul   ebp,DWORD PTR [rbp+0x65],0x6f4c6f54
   140009554:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009557:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   140009560:	movsxd eax,DWORD PTR [rcx]
   140009562:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   14000956b:	outs   dx,DWORD PTR ds:[rsi]
   14000956c:	push   rbx
   14000956d:	jns    0x1400095e2
   14000956f:	je     0x1400095d6
   140009571:	ins    DWORD PTR es:[rdi],dx
   140009572:	push   rsp
   140009573:	imul   ebp,DWORD PTR [rbp+0x65],0x26e0000
   14000957a:	rex.RXB
   14000957b:	gs je  0x1400095cb
   14000957e:	outs   dx,DWORD PTR ds:[rsi]
   14000957f:	fs jne 0x1400095ee
   140009582:	gs rex.W (bad) 
   140009585:	outs   dx,BYTE PTR ds:[rsi]
   140009586:	fs ins BYTE PTR es:[rdi],dx
   140009588:	gs push rdi
   14000958a:	add    BYTE PTR [rax],al
   14000958c:	adc    al,0x2
   14000958e:	rex.RXB
   14000958f:	gs je  0x1400095d5
   140009592:	jne    0x140009606
   140009594:	jb     0x1400095fb
   140009596:	outs   dx,BYTE PTR ds:[rsi]
   140009597:	je     0x1400095ed
   140009599:	push   0x64616572
   14000959e:	add    BYTE PTR [rax],al
   1400095a0:	adc    BYTE PTR [rdx],al
   1400095a2:	rex.RXB
   1400095a3:	gs je  0x1400095e9
   1400095a6:	jne    0x14000961a
   1400095a8:	jb     0x14000960f
   1400095aa:	outs   dx,BYTE PTR ds:[rsi]
   1400095ab:	je     0x1400095fd
   1400095ad:	jb     0x14000961e
   1400095af:	movsxd esp,DWORD PTR [rbp+0x73]
   1400095b2:	jae    0x1400095b4
   1400095b4:	test   BYTE PTR [rbx],0x4f
   1400095b7:	jo     0x14000961e
   1400095b9:	outs   dx,BYTE PTR ds:[rsi]
   1400095ba:	push   rax
   1400095bb:	jb     0x14000962c
   1400095bd:	movsxd esp,DWORD PTR [rbp+0x73]
   1400095c0:	jae    0x1400095c2
   1400095c2:	and    eax,DWORD PTR [rip+0x4c746553]        # 0x18c74fb1b
   1400095c8:	(bad)  
   1400095c9:	jae    0x14000963f
   1400095cb:	rex.RB jb 0x140009640
   1400095ce:	outs   dx,DWORD PTR ds:[rsi]
   1400095cf:	jb     0x1400095d1
   1400095d1:	add    BYTE PTR [rbp+0x74654702],ah
   1400095d7:	push   rax
   1400095d8:	jb     0x140009649
   1400095da:	movsxd eax,DWORD PTR [rcx+0x64]
   1400095dd:	fs jb  0x140009645
   1400095e0:	jae    0x140009655
   1400095e2:	add    BYTE PTR [rax],al
   1400095e4:	rex.WXB
   1400095e5:	rex.RB push r10
   1400095e7:	rex.WRX
   1400095e8:	rex.RB
   1400095e9:	xor    r14,QWORD PTR [rdx]
   1400095ec:	cs fs ins BYTE PTR es:[rdi],dx
   1400095ef:	ins    BYTE PTR es:[rdi],dx
   1400095f0:	add    BYTE PTR [rax],al
   1400095f2:	xor    al,BYTE PTR [riz*2+0x746978]
   1400095f9:	add    bh,dl
   1400095fb:	add    bl,BYTE PTR [rdi+0x73]
   1400095fe:	outs   dx,BYTE PTR ds:[rsi]
   1400095ff:	ja     0x140009671
   140009601:	jb     0x14000966c
   140009603:	outs   dx,BYTE PTR ds:[rsi]
   140009604:	je     0x14000966c
   140009606:	pop    rdi
   140009607:	jae    0x140009609
   140009609:	add    BYTE PTR [rcx+0x72707304],bh
   14000960f:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   140009616:	push   rbp
   140009617:	add    al,0x66
   140009619:	ja     0x14000968b
   14000961b:	jb     0x140009686
   14000961d:	outs   dx,BYTE PTR ds:[rsi]
   14000961e:	je     0x140009686
   140009620:	add    BYTE PTR [rax],al
   140009622:	mov    al,BYTE PTR [rbx]
   140009624:	pop    rdi
   140009625:	ja     0x14000968a
   140009627:	jae    0x140009692
   140009629:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000962c:	add    BYTE PTR [rax],al
   14000962e:	sbb    BYTE PTR [rip+0x74736377],al        # 0x1b473f9ab
   140009634:	outs   dx,DWORD PTR ds:[rsi]
   140009635:	ins    BYTE PTR es:[rdi],dx
   140009636:	add    BYTE PTR [rax],al
   140009638:	sbb    eax,DWORD PTR [rip+0x74736377]        # 0x1b473f9b5
   14000963e:	outs   dx,DWORD PTR ds:[rsi]
   14000963f:	jne    0x1400096ad
   140009641:	add    BYTE PTR [rsi+0x6c616d04],al
   140009647:	ins    BYTE PTR es:[rdi],dx
   140009648:	outs   dx,DWORD PTR ds:[rsi]
   140009649:	movsxd eax,DWORD PTR [rax]
   14000964b:	add    BYTE PTR [rdi+0x61635f00],bh
   140009651:	ins    BYTE PTR es:[rdi],dx
   140009652:	ins    BYTE PTR es:[rdi],dx
   140009653:	outs   dx,BYTE PTR ds:[rsi]
   140009654:	gs ja  0x1400096bf
   140009657:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000965b:	jb     0x1400096c2
   14000965d:	add    BYTE PTR gs:[rax],al
   140009660:	push   rbp
   140009661:	add    BYTE PTR [rdi+0x58],bl
   140009664:	movsxd esi,DWORD PTR [rax+0x74]
   140009667:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140009670:	pop    rdi
   140009671:	(bad)  
   140009672:	ins    DWORD PTR es:[rdi],dx
   140009673:	jae    0x1400096dc
   140009675:	pop    rdi
   140009676:	gs js  0x1400096e2
   140009679:	je     0x14000967b
   14000967b:	add    BYTE PTR [rbp+0x775f5f00],bl
   140009681:	addr32 gs je 0x1400096f2
   140009685:	(bad)  
   140009686:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000968d:	add    BYTE PTR [rsi+0x735f5f00],cl
   140009693:	gs je  0x1400096f5
   140009696:	(bad)  
   140009697:	jo     0x140009709
   140009699:	pop    rdi
   14000969a:	je     0x140009715
   14000969c:	jo     0x140009703
   14000969e:	add    BYTE PTR [rax],al
   1400096a0:	(bad)  
   1400096a1:	add    DWORD PTR [rdi+0x65],ebx
   1400096a4:	js     0x14000970f
   1400096a6:	je     0x1400096a8
   1400096a8:	rol    DWORD PTR [rax],0x5f
   1400096ab:	movsxd esp,DWORD PTR [rbp+0x78]
   1400096ae:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   1400096b6:	jae    0x14000971d
   1400096b8:	je     0x14000972f
   1400096ba:	jae    0x140009721
   1400096bc:	jb     0x14000972b
   1400096be:	(bad)  
   1400096bf:	je     0x140009729
   1400096c1:	gs jb  0x140009736
   1400096c4:	add    BYTE PTR [rax],al
   1400096c6:	jge    0x1400096c9
   1400096c8:	pop    rdi
   1400096c9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400096d0:	ins    DWORD PTR es:[rdi],dx
   1400096d1:	add    BYTE PTR [rdi+0x0],dl
   1400096d4:	pop    rdi
   1400096d5:	pop    rdi
   1400096d6:	rex.XB pop r15
   1400096d8:	jae    0x14000974a
   1400096da:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400096de:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400096e5:	ins    BYTE PTR es:[rdi],dx
   1400096e6:	gs jb  0x1400096e9
   1400096e9:	add    BYTE PTR [rdi],ah
   1400096eb:	add    DWORD PTR [rdi+0x66],ebx
   1400096ee:	ins    DWORD PTR es:[rdi],dx
   1400096ef:	outs   dx,DWORD PTR ds:[rsi]
   1400096f0:	fs add BYTE PTR gs:[rax],al
   1400096f4:	rol    BYTE PTR [rax],cl
   1400096f6:	pop    rdi
   1400096f7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400096fa:	ins    DWORD PTR es:[rdi],dx
   1400096fb:	outs   dx,DWORD PTR ds:[rsi]
   1400096fc:	fs add BYTE PTR gs:[rax],al
   140009700:	ins    DWORD PTR es:[rdi],dx
   140009701:	jae    0x140009779
   140009703:	movsxd esi,DWORD PTR [rdx+0x74]
   140009706:	cs fs ins BYTE PTR es:[rdi],dx
   140009709:	ins    BYTE PTR es:[rdi],dx
   14000970a:	add    BYTE PTR [rax],al
   14000970c:	(bad)  
   14000970d:	add    BYTE PTR [rdi],bh
   14000970f:	je     0x140009776
   140009711:	jb     0x140009780
   140009713:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000971a:	pop    rcx
   14000971b:	pop    r8
   14000971d:	pop    rax
   14000971e:	pop    rdx
   14000971f:	add    BYTE PTR [rip+0x61734c00],ah        # 0x1a173e325
   140009725:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009727:	jne    0x140009796
   140009729:	gs jb  0x14000978d
   14000972c:	je     0x140009793
   14000972e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009730:	outs   dx,DWORD PTR ds:[esi]
   140009732:	outs   dx,BYTE PTR ds:[rsi]
   140009733:	push   rbx
   140009734:	gs jae 0x1400097aa
   140009737:	imul   ebp,DWORD PTR [rdi+0x6e],0x120073
   14000973e:	rex.R jae 0x140009788
   140009741:	gs je  0x140009788
   140009744:	movsxd ecx,DWORD PTR [rsi+0x61]
   140009747:	ins    DWORD PTR es:[rdi],dx
   140009748:	gs push rdi
   14000974a:	add    BYTE PTR [rax],al
   14000974c:	add    DWORD PTR [rax],eax
   14000974e:	rex.WRX
   14000974f:	gs je  0x140009793
   140009752:	jo     0x1400097bd
   140009754:	rex.X jne 0x1400097bd
   140009757:	data16 gs jb 0x1400097a1
   14000975b:	jb     0x1400097c2
   14000975d:	add    BYTE PTR gs:[rax],al
   140009760:	sub    eax,0x656c5300
   140009765:	gs jo  0x140009768
   140009768:	add    al,BYTE PTR [rax]
   14000976a:	push   rdx
   14000976b:	je     0x1400097d9
   14000976d:	rex.XB (bad) 
   14000976f:	jo     0x1400097e5
   140009771:	jne    0x1400097e5
   140009773:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140009776:	outs   dx,BYTE PTR ds:[rsi]
   140009777:	je     0x1400097de
   140009779:	js     0x1400097ef
   14000977b:	add    BYTE PTR [rcx],cl
   14000977d:	add    BYTE PTR [rdx+0x74],dl
   140009780:	ins    BYTE PTR es:[rdi],dx
   140009781:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140009783:	outs   dx,DWORD PTR ds:[rsi]
   140009784:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140009788:	jne    0x1400097f8
   14000978a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000978e:	outs   dx,BYTE PTR ds:[rsi]
   14000978f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009791:	je     0x140009805
   140009793:	jns    0x140009795
   140009795:	add    BYTE PTR [rdi],cl
   140009797:	add    BYTE PTR [rdx+0x74],dl
   14000979a:	ins    BYTE PTR es:[rdi],dx
   14000979b:	push   rsi
   14000979c:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400097a3:	outs   dx,BYTE PTR ds:[rsi]
   1400097a4:	ja     0x14000980f
   1400097a6:	outs   dx,BYTE PTR ds:[rsi]
   1400097a7:	add    BYTE PTR fs:[rax],al
   1400097aa:	adc    DWORD PTR [rax],eax
   1400097ac:	push   rbp
   1400097ad:	outs   dx,BYTE PTR ds:[rsi]
   1400097ae:	push   0x6c646e61
   1400097b3:	gs fs rex.RB js 0x14000981b
   1400097b8:	gs jo  0x14000982f
   1400097bb:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400097c2:	gs jb  0x1400097c5
   1400097c5:	add    BYTE PTR [rdi],cl
   1400097c7:	add    BYTE PTR [rbx+0x65],dl
   1400097ca:	je     0x140009821
   1400097cc:	outs   dx,BYTE PTR ds:[rsi]
   1400097cd:	push   0x6c646e61
   1400097d2:	gs fs rex.RB js 0x14000983a
   1400097d7:	gs jo  0x14000984e
   1400097da:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400097e1:	gs jb  0x1400097e4
   1400097e4:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   1400097e9:	ins    DWORD PTR es:[rdi],dx
   1400097ea:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400097f1:	outs   dx,DWORD PTR ds:[rsi]
   1400097f2:	movsxd esp,DWORD PTR [rbp+0x73]
   1400097f5:	jae    0x1400097f7
   1400097f7:	add    BYTE PTR [rax],al
   1400097f9:	add    BYTE PTR [rcx+0x75],dl
   1400097fc:	gs jb  0x140009878
   1400097ff:	push   rax
   140009800:	gs jb  0x140009869
   140009803:	outs   dx,DWORD PTR ds:[rsi]
   140009804:	jb     0x140009873
   140009806:	(bad)  
   140009807:	outs   dx,BYTE PTR ds:[rsi]
   140009808:	movsxd esp,DWORD PTR [rbp+0x43]
   14000980b:	outs   dx,DWORD PTR ds:[rsi]
   14000980c:	jne    0x14000987c
   14000980e:	je     0x140009875
   140009810:	jb     0x140009812
   140009812:	or     eax,0x74654700
   140009817:	rex.XB jne 0x14000988c
   14000981a:	jb     0x140009881
   14000981c:	outs   dx,BYTE PTR ds:[rsi]
   14000981d:	je     0x14000986f
   14000981f:	jb     0x140009890
   140009821:	movsxd esp,DWORD PTR [rbp+0x73]
   140009824:	jae    0x14000986f
   140009826:	add    BYTE PTR fs:[rcx],dl
   140009829:	add    BYTE PTR [rdi+0x65],al
   14000982c:	je     0x140009871
   14000982e:	jne    0x1400098a2
   140009830:	jb     0x140009897
   140009832:	outs   dx,BYTE PTR ds:[rsi]
   140009833:	je     0x140009889
   140009835:	push   0x64616572
   14000983a:	rex.WB
   14000983b:	add    BYTE PTR fs:[rax],al
   14000983e:	adc    al,0x0
   140009840:	rex.RXB
   140009841:	gs je  0x140009897
   140009844:	jns    0x1400098b9
   140009846:	je     0x1400098ad
   140009848:	ins    DWORD PTR es:[rdi],dx
   140009849:	push   rsp
   14000984a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140009851:	ins    BYTE PTR es:[rdi],dx
   140009852:	gs push rsp
   140009854:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000985b:	gs je  0x1400098b2
   14000985e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140009865:	je     0x140009867
   140009867:	add    BYTE PTR [rdx],al
   140009869:	add    BYTE PTR [rax+0x65],cl
   14000986c:	(bad)  
   14000986d:	jo     0x1400098b0
   14000986f:	ins    BYTE PTR es:[rdi],dx
   140009870:	ins    BYTE PTR es:[rdi],dx
   140009871:	outs   dx,DWORD PTR ds:[rsi]
   140009872:	movsxd eax,DWORD PTR [rax]
   140009874:	(bad)  
   140009875:	add    BYTE PTR [rax+0x65],cl
   140009878:	(bad)  
   140009879:	jo     0x1400098c1
   14000987b:	jb     0x1400098e2
   14000987d:	add    BYTE PTR gs:[rax],al
   140009880:	add    BYTE PTR [rax],al
   140009882:	rex.RXB
   140009883:	gs je  0x1400098d6
   140009886:	jb     0x1400098f7
   140009888:	movsxd esp,DWORD PTR [rbp+0x73]
   14000988b:	jae    0x1400098d5
   14000988d:	gs (bad) 
   14000988f:	jo     0x140009891
   140009891:	add    BYTE PTR [rdx],bh
   140009893:	add    BYTE PTR [rbx+0x65],dl
   140009896:	je     0x1400098ec
   140009898:	push   0x64616572
   14000989d:	push   rbp
   14000989e:	rex.WB
   14000989f:	rex.WR (bad) 
   1400098a1:	outs   dx,BYTE PTR ds:[rsi]
   1400098a2:	addr32 jne 0x140009906
   1400098a5:	add    BYTE PTR gs:[ebx],bl
   1400098a9:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   1400098ad:	fs push rbx
   1400098af:	je     0x140009923
   1400098b1:	imul   ebp,DWORD PTR [rsi+0x67],0x590057
   1400098b8:	push   rdi
   1400098b9:	jb     0x140009924
   1400098bb:	je     0x140009922
   1400098bd:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x69570007
   1400098c6:	fs gs rex.XB push 0x6f547261
   1400098ce:	rex.WRB jne 0x14000993d
   1400098d1:	je     0x14000993c
   1400098d3:	rex.X jns 0x14000994a
   1400098d6:	add    BYTE PTR gs:[rbx],al
   1400098d9:	add    BYTE PTR [rdi+0x65],al
   1400098dc:	je     0x140009921
   1400098de:	outs   dx,DWORD PTR ds:[rsi]
   1400098df:	outs   dx,BYTE PTR ds:[rsi]
   1400098e0:	jae    0x140009951
   1400098e2:	ins    BYTE PTR es:[rdi],dx
   1400098e3:	gs rex.WRXB jne 0x14000995b
   1400098e7:	jo     0x14000995e
   1400098e9:	je     0x14000992e
   1400098eb:	push   rax
   1400098ec:	add    BYTE PTR [rax],al
   1400098ee:	or     al,0x0
   1400098f0:	rex.RXB
   1400098f1:	gs je  0x140009947
   1400098f4:	je     0x14000995a
   1400098f6:	rex.W (bad) 
   1400098f8:	outs   dx,BYTE PTR ds:[rsi]
   1400098f9:	fs ins BYTE PTR es:[rdi],dx
   1400098fb:	add    BYTE PTR gs:[rax],al
   1400098fe:	push   rbx
   1400098ff:	jae    0x140009971
   140009901:	imul   eax,DWORD PTR [rbx+0x6c],0x6c642e69
   140009908:	ins    BYTE PTR es:[rdi],dx
   140009909:	add    BYTE PTR [rdi+rbp*2+0x67],ch
   14000990d:	outs   dx,DWORD PTR ds:[rsi]
   14000990e:	outs   dx,BYTE PTR ds:[rsi]
   14000990f:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2e]
   140009913:	fs ins BYTE PTR es:[rdi],dx
   140009915:	ins    BYTE PTR es:[rdi],dx
   140009916:	add    BYTE PTR [rax],al
   140009918:	outs   dx,BYTE PTR ds:[rsi]
   140009919:	gs je  0x140009991
   14000991c:	je     0x140009987
   14000991e:	ins    BYTE PTR es:[rdi],dx
   14000991f:	jae    0x14000994f
   140009921:	fs ins BYTE PTR es:[rdi],dx
   140009923:	ins    BYTE PTR es:[rdi],dx
   140009924:	add    BYTE PTR [rax],al
   140009926:	(bad)  
   140009927:	jo     0x140009992
   140009929:	sub    eax,0x772d736d
   14000992e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009935:	sub    eax,0x636e7973
   14000993a:	push   0x2d316c2d
   14000993f:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64c775
   140009945:	ins    BYTE PTR es:[rdi],dx
   140009946:	add    BYTE PTR [rax],al
   140009948:	(bad)  
   140009949:	jo     0x1400099b4
   14000994b:	sub    eax,0x772d736d
   140009950:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009957:	sub    eax,0x736c7472
   14000995c:	jne    0x1400099ce
   14000995e:	jo     0x1400099cf
   140009960:	jb     0x1400099d6
   140009962:	sub    eax,0x322d316c
   140009967:	sub    eax,0x6c642e30
   14000996c:	ins    BYTE PTR es:[rdi],dx
   14000996d:	add    BYTE PTR [rcx+0x70],ah
   140009970:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0ce7
   14000997a:	outs   dx,DWORD PTR ds:[rsi]
   14000997b:	jb     0x1400099e2
   14000997d:	sub    eax,0x6f727265
   140009982:	jb     0x1400099ec
   140009984:	(bad)  
   140009985:	outs   dx,BYTE PTR ds:[rsi]
   140009986:	fs ins BYTE PTR es:[rdi],dx
   140009988:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000998f:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64c7c6
   140009995:	ins    BYTE PTR es:[rdi],dx
   140009996:	add    BYTE PTR [rax],al
   140009998:	(bad)  
   140009999:	jo     0x140009a04
   14000999b:	sub    eax,0x772d736d
   1400099a0:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400099a7:	sub    eax,0x636f7270
   1400099ac:	gs jae 0x140009a22
   1400099af:	je     0x140009a19
   1400099b1:	jb     0x140009a18
   1400099b3:	(bad)  
   1400099b4:	fs jae 0x1400099e4
   1400099b7:	ins    BYTE PTR es:[rdi],dx
   1400099b8:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32c6ef
   1400099be:	fs ins BYTE PTR es:[rdi],dx
   1400099c0:	ins    BYTE PTR es:[rdi],dx
   1400099c1:	add    BYTE PTR [rcx+0x70],ah
   1400099c4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0d3b
   1400099ce:	outs   dx,DWORD PTR ds:[rsi]
   1400099cf:	jb     0x140009a36
   1400099d1:	sub    eax,0x666f7270
   1400099d6:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   1400099de:	sub    eax,0x6c642e30
   1400099e3:	ins    BYTE PTR es:[rdi],dx
   1400099e4:	add    BYTE PTR [rax],al
   1400099e6:	(bad)  
   1400099e7:	jo     0x140009a52
   1400099e9:	sub    eax,0x772d736d
   1400099ee:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400099f5:	sub    eax,0x69737973
   1400099fa:	outs   dx,BYTE PTR ds:[rsi]
   1400099fb:	outs   dx,WORD PTR ds:[rsi]
   1400099fd:	sub    eax,0x322d316c
   140009a02:	sub    eax,0x6c642e31
   140009a07:	ins    BYTE PTR es:[rdi],dx
   140009a08:	add    BYTE PTR [rax],al
   140009a0a:	(bad)  
   140009a0b:	jo     0x140009a76
   140009a0d:	sub    eax,0x772d736d
   140009a12:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009a19:	sub    eax,0x70616568
   140009a1e:	sub    eax,0x322d316c
   140009a23:	sub    eax,0x6c642e30
   140009a28:	ins    BYTE PTR es:[rdi],dx
   140009a29:	add    BYTE PTR [rcx+0x70],ah
   140009a2c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0da3
   140009a36:	outs   dx,DWORD PTR ds:[rsi]
   140009a37:	jb     0x140009a9e
   140009a39:	sub    eax,0x61636f6c
   140009a3e:	ins    BYTE PTR es:[rdi],dx
   140009a3f:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   140009a46:	sub    eax,0x322d316c
   140009a4b:	sub    eax,0x6c642e31
   140009a50:	ins    BYTE PTR es:[rdi],dx
   140009a51:	add    BYTE PTR [rcx+0x70],ah
   140009a54:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0dcb
   140009a5e:	outs   dx,DWORD PTR ds:[rsi]
   140009a5f:	jb     0x140009ac6
   140009a61:	sub    eax,0x7262696c
   140009a66:	(bad)  
   140009a67:	jb     0x140009ae2
   140009a69:	ins    BYTE PTR es:[rdi],dx
   140009a6a:	outs   dx,DWORD PTR ds:[rsi]
   140009a6b:	(bad)  
   140009a6c:	fs gs jb 0x140009a9d
   140009a70:	ins    BYTE PTR es:[rdi],dx
   140009a71:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30c7a9
   140009a77:	fs ins BYTE PTR es:[rdi],dx
   140009a79:	ins    BYTE PTR es:[rdi],dx
   140009a7a:	add    BYTE PTR [rax],al
   140009a7c:	(bad)  
   140009a7d:	jo     0x140009ae8
   140009a7f:	sub    eax,0x772d736d
   140009a84:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009a8b:	sub    eax,0x656c6966
   140009a90:	sub    eax,0x322d316c
   140009a95:	sub    eax,0x6c642e31
   140009a9a:	ins    BYTE PTR es:[rdi],dx
   140009a9b:	add    BYTE PTR [rcx+0x70],ah
   140009a9e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0e15
   140009aa8:	outs   dx,DWORD PTR ds:[rsi]
   140009aa9:	jb     0x140009b10
   140009aab:	sub    eax,0x69727473
   140009ab0:	outs   dx,BYTE PTR ds:[rsi]
   140009ab1:	addr32 sub eax,0x312d316c
   140009ab7:	sub    eax,0x6c642e30
   140009abc:	ins    BYTE PTR es:[rdi],dx
   140009abd:	add    BYTE PTR [rcx+0x70],ah
   140009ac0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e0e37
   140009aca:	outs   dx,DWORD PTR ds:[rsi]
   140009acb:	jb     0x140009b32
   140009acd:	sub    eax,0x736e6f63
   140009ad2:	outs   dx,DWORD PTR ds:[rsi]
   140009ad3:	ins    BYTE PTR es:[rdi],dx
   140009ad4:	gs sub eax,0x312d316c
   140009ada:	sub    eax,0x6c642e30
   140009adf:	ins    BYTE PTR es:[rdi],dx
   140009ae0:	add    BYTE PTR [rax],al
   140009ae2:	(bad)  
   140009ae3:	jo     0x140009b4e
   140009ae5:	sub    eax,0x772d736d
   140009aea:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140009af1:	sub    eax,0x636f7270
   140009af6:	gs jae 0x140009b6c
   140009af9:	outs   dx,BYTE PTR gs:[rsi]
   140009afb:	jbe    0x140009b66
   140009afd:	jb     0x140009b6e
   140009aff:	outs   dx,BYTE PTR ds:[rsi]
   140009b00:	ins    DWORD PTR es:[rdi],dx
   140009b01:	outs   dx,BYTE PTR gs:[rsi]
   140009b03:	je     0x140009b32
   140009b05:	ins    BYTE PTR es:[rdi],dx
   140009b06:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30c83e
   140009b0c:	fs ins BYTE PTR es:[rdi],dx
   140009b0e:	ins    BYTE PTR es:[rdi],dx
   140009b0f:	add    BYTE PTR [rdx+rax*1],ah
   140009b12:	rex.WRX je 0x140009b68
   140009b15:	gs je  0x140009b61
   140009b18:	outs   dx,BYTE PTR ds:[rsi]
   140009b19:	outs   dx,WORD PTR ds:[rsi]
   140009b1b:	jb     0x140009b8a
   140009b1d:	(bad)  
   140009b1e:	je     0x140009b89
   140009b20:	outs   dx,DWORD PTR ds:[rsi]
   140009b21:	outs   dx,BYTE PTR ds:[rsi]
   140009b22:	push   rsp
   140009b23:	push   0x64616572
   140009b28:	add    BYTE PTR [rax],al
   140009b2a:	out    dx,al
   140009b2b:	add    BYTE PTR [rsi+0x74],cl
   140009b2e:	rex.XB ins BYTE PTR es:[rdi],dx
   140009b30:	outs   dx,DWORD PTR ds:[rsi]
   140009b31:	jae    0x140009b98
   140009b33:	add    BYTE PTR [rsi+0x4f744e01],dl
   140009b39:	jo     0x140009ba0
   140009b3b:	outs   dx,BYTE PTR ds:[rsi]
   140009b3c:	push   rsp
   140009b3d:	push   0x64616572
   140009b42:	push   rsp
   140009b43:	outs   dx,DWORD PTR ds:[rsi]
   140009b44:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140009b48:	(bad)  
   140009b4a:	push   rdx
   140009b4b:	je     0x140009bb9
   140009b4d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009b4f:	imul   esi,DWORD PTR [rbp+rdx*2+0x6e],0x646f6369
   140009b57:	gs push rbx
   140009b59:	je     0x140009bcd
   140009b5b:	imul   ebp,DWORD PTR [rsi+0x67],0x7845
   140009b62:	cmp    eax,DWORD PTR [rdx+rdx*2]
   140009b65:	je     0x140009bd3
   140009b67:	rex.WB jo 0x140009be0
   140009b6a:	xor    al,0x53
   140009b6c:	je     0x140009be0
   140009b6e:	imul   ebp,DWORD PTR [rsi+0x67],0x64416f54
   140009b75:	fs jb  0x140009bdd
   140009b78:	jae    0x140009bed
   140009b7a:	rex.RB js 0x140009bd4
   140009b7d:	add    BYTE PTR [rbx+0x4],al
   140009b80:	push   rdx
   140009b81:	je     0x140009bef
   140009b83:	rex.WB jo 0x140009bfc
   140009b86:	ss push rbx
   140009b88:	je     0x140009bfc
   140009b8a:	imul   ebp,DWORD PTR [rsi+0x67],0x64416f54
   140009b91:	fs jb  0x140009bf9
   140009b94:	jae    0x140009c09
   140009b96:	rex.RB js 0x140009bf0
   140009b99:	add    BYTE PTR [rsi],cl
   140009b9b:	add    al,0x52
   140009b9d:	je     0x140009c0b
   140009b9f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009ba1:	imul   esi,DWORD PTR [rbp+rdx*2+0x6e],0x646f6369
   140009ba9:	gs push rbx
   140009bab:	je     0x140009c1f
   140009bad:	imul   ebp,DWORD PTR [rsi+0x67],0x2a50000
   140009bb4:	push   rdx
   140009bb5:	je     0x140009c23
   140009bb7:	rex.B
   140009bb8:	fs push 0x75
   140009bbb:	jae    0x140009c31
   140009bbd:	push   rax
   140009bbe:	jb     0x140009c29
   140009bc0:	jbe    0x140009c2b
   140009bc2:	ins    BYTE PTR es:[rdi],dx
   140009bc3:	gs add BYTE PTR gs:[eax],al
   140009bc8:	or     eax,DWORD PTR [rdx+rdx*2]
   140009bcb:	je     0x140009c39
   140009bcd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009bcf:	imul   esi,DWORD PTR [rbx+rdx*2+0x74],0x676e6972
   140009bd7:	add    BYTE PTR [rcx+rax*1+0x7551744e],bh
   140009bde:	gs jb  0x140009c5a
   140009be1:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140009be3:	outs   dx,WORD PTR ds:[rsi]
   140009be5:	jb     0x140009c54
   140009be7:	(bad)  
   140009be8:	je     0x140009c53
   140009bea:	outs   dx,DWORD PTR ds:[rsi]
   140009beb:	outs   dx,BYTE PTR ds:[rsi]
   140009bec:	push   rsp
   140009bed:	outs   dx,DWORD PTR ds:[rsi]
   140009bee:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140009bf2:	(bad)  
   140009bf3:	add    DWORD PTR [rsi+0x74],ecx
   140009bf6:	rex.R jne 0x140009c69
   140009bf9:	ins    BYTE PTR es:[rdi],dx
   140009bfa:	imul   esp,DWORD PTR [rbx+0x61],0x6f546574
   140009c01:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140009c05:	add    BYTE PTR [rsi+0x74],ch
   140009c08:	fs ins BYTE PTR es:[rdi],dx
   140009c0a:	ins    BYTE PTR es:[rdi],dx
   140009c0b:	cs fs ins BYTE PTR es:[rdi],dx
   140009c0e:	ins    BYTE PTR es:[rdi],dx
   140009c0f:	add    BYTE PTR [rcx+0x695f5f00],al
   140009c15:	outs   dx,DWORD PTR ds:[rsi]
   140009c16:	(bad)  
   140009c17:	pop    rdi
   140009c18:	data16 jne 0x140009c89
   140009c1b:	movsxd eax,DWORD PTR [rax]
   140009c1d:	add    BYTE PTR [rcx+0x3],ch
   140009c20:	pop    rdi
   140009c21:	jbe    0x140009c96
   140009c23:	outs   dx,BYTE PTR ds:[rsi]
   140009c24:	ja     0x140009c96
   140009c26:	jb     0x140009c91
   140009c28:	outs   dx,BYTE PTR ds:[rsi]
   140009c29:	je     0x140009c91
   140009c2b:	add    dl,ch
   140009c2d:	add    ebx,DWORD PTR [rdi+0x77]
   140009c30:	jae    0x140009c97
   140009c32:	je     0x140009ca0
   140009c34:	outs   dx,DWORD PTR ds:[rsi]
   140009c35:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009c38:	add    BYTE PTR gs:[rdx+0x6d656d04],dl
   140009c3f:	movsxd esi,DWORD PTR [rax+0x79]
   140009c42:	add    BYTE PTR [rax],al
   140009c44:	xchg   esi,eax
   140009c45:	add    al,0x6d
   140009c47:	gs ins DWORD PTR es:[rdi],dx
   140009c49:	jae    0x140009cb0
   140009c4b:	je     0x140009c4d
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	add    DWORD PTR [rax],eax
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	int    0x5d
   14000a012:	and    dl,dl
   14000a014:	data16 (bad) 
   14000a016:	(bad)  
   14000a017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	or     BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	sbb    al,0x14
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	js     0x14000af93
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	and    al,0x14
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	(bad)  
   14000b011:	adc    eax,0x89900000
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	sbb    al,0x15
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	rcl    DWORD PTR [rsi],0x0
   14000b01f:	add    BYTE PTR [rcx+rcx*4+0x16c80000],bl
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	mov    dl,0x17
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	mov    esp,0x78000089
   14000b031:	sbb    DWORD PTR [rax],eax
   14000b033:	add    BYTE PTR [rcx+rbx*1-0x76300000],ah
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	lods   al,BYTE PTR ds:[rsi]
   14000b03d:	sbb    DWORD PTR [rax],eax
   14000b03f:	add    bh,bl
   14000b041:	sbb    DWORD PTR [rax],eax
   14000b043:	add    al,bl
   14000b045:	mov    DWORD PTR [rax],eax
   14000b047:	add    al,ch
   14000b049:	sbb    DWORD PTR [rax],eax
   14000b04b:	add    al,ch
   14000b04d:	sbb    eax,DWORD PTR [rax]
   14000b04f:	add    al,ah
   14000b051:	mov    DWORD PTR [rax],eax
   14000b053:	add    al,dh
   14000b055:	sbb    eax,DWORD PTR [rax]
   14000b057:	add    BYTE PTR [rbp+0x1c],bl
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	lock mov DWORD PTR [rax],eax
   14000b05f:	add    BYTE PTR [rsp+rbx*1+0x0],ah
   14000b063:	add    BYTE PTR [rdx],ah
   14000b065:	and    BYTE PTR [rax],al
   14000b067:	add    al,bh
   14000b069:	mov    DWORD PTR [rax],eax
   14000b06b:	add    BYTE PTR [rax],ch
   14000b06d:	and    BYTE PTR [rax],al
   14000b06f:	add    ah,ch
   14000b071:	and    al,BYTE PTR [rax]
   14000b073:	add    BYTE PTR [rax],ah
   14000b075:	mov    al,BYTE PTR [rax]
   14000b077:	add    ah,dh
   14000b079:	and    al,BYTE PTR [rax]
   14000b07b:	add    ah,cl
   14000b07d:	and    al,0x0
   14000b07f:	add    BYTE PTR [rax],bh
   14000b081:	mov    al,BYTE PTR [rax]
   14000b083:	add    ah,dl
   14000b085:	and    al,0x0
   14000b087:	add    BYTE PTR [rcx],dl
   14000b089:	(bad)  
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	push   rax
   14000b08d:	mov    al,BYTE PTR [rax]
   14000b08f:	add    BYTE PTR [rax],bl
   14000b091:	(bad)  
   14000b092:	add    BYTE PTR [rax],al
   14000b094:	repnz sub al,BYTE PTR [rax]
   14000b097:	add    BYTE PTR [rax-0x76],ch
   14000b09a:	add    BYTE PTR [rax],al
   14000b09c:	clc    
   14000b09d:	sub    al,BYTE PTR [rax]
   14000b09f:	add    ch,dh
   14000b0a1:	sub    eax,DWORD PTR [rax]
   14000b0a3:	add    BYTE PTR [rax-0x3ffff76],cl
   14000b0a9:	sub    eax,DWORD PTR [rax]
   14000b0ab:	add    BYTE PTR [rip+0xffffffff9400002f],al        # 0xd400b0e0
   14000b0b1:	mov    al,BYTE PTR [rax]
   14000b0b3:	add    BYTE PTR [rdi+rbp*1],cl
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	xchg   ecx,eax
   14000b0b9:	xor    BYTE PTR [rax],al
   14000b0bb:	add    BYTE PTR [rdx+rcx*4+0x30980000],dh
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	mov    dh,BYTE PTR [rbx]
   14000b0c6:	add    BYTE PTR [rax],al
   14000b0c8:	ror    BYTE PTR [rdx+0x33900000],1
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	int    0x35
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	lock mov al,BYTE PTR [rax]
   14000b0d7:	add    ah,dl
   14000b0d9:	xor    eax,0x398c0000
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	add    BYTE PTR [rbx+0x39940000],cl
   14000b0e6:	add    BYTE PTR [rax],al
   14000b0e8:	push   rdi
   14000b0e9:	cmp    al,BYTE PTR [rax]
   14000b0eb:	add    BYTE PTR [rax],bl
   14000b0ed:	mov    eax,DWORD PTR [rax]
   14000b0ef:	add    BYTE PTR [rax+0x3a],ah
   14000b0f2:	add    BYTE PTR [rax],al
   14000b0f4:	fld    QWORD PTR [rdx+0x0]
   14000b0f7:	add    BYTE PTR [rax],ch
   14000b0f9:	mov    eax,DWORD PTR [rax]
   14000b0fb:	add    ah,ah
   14000b0fd:	rex.X add BYTE PTR [rax],al
   14000b100:	fild   DWORD PTR [rax+rax*1+0x0]
   14000b104:	push   rax
   14000b105:	mov    eax,DWORD PTR [rax]
   14000b107:	add    ah,ah
   14000b109:	add    BYTE PTR [rax],r8b
   14000b10c:	retf   
   14000b10d:	add    BYTE PTR [r8],r8b
   14000b110:	jo     0x14000b09d
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	(bad)  
   14000b115:	add    BYTE PTR [r8],r8b
   14000b118:	icebp  
   14000b119:	rex.RX add BYTE PTR [rax],r8b
   14000b11c:	or     BYTE PTR [rbx+0x46f80000],0x0
   14000b123:	add    BYTE PTR [rcx+0x4b],dl
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	pushf  
   14000b129:	mov    eax,DWORD PTR [rax]
   14000b12b:	add    BYTE PTR [rax+0x4b],bl
   14000b12e:	add    BYTE PTR [rax],al
   14000b130:	adc    cl,BYTE PTR [rax+rax*1+0x0]
   14000b134:	mov    eax,0x1800008b
   14000b139:	rex.WR add BYTE PTR [rax],r8b
   14000b13c:	(bad)  
   14000b13d:	rex.WR add BYTE PTR [rax],r8b
   14000b140:	ror    BYTE PTR [rbx+0x4cdc0000],1
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	cdq    
   14000b149:	rex.WRB add BYTE PTR [r8],r8b
   14000b14c:	call   0xe000b1dc
   14000b151:	rex.WRB add BYTE PTR [r8],r8b
   14000b154:	rex.WB
   14000b155:	rex.WRX add BYTE PTR [rax],r8b
   14000b158:	add    BYTE PTR [rax+rax*1+0x4e5000],cl
   14000b15f:	add    cl,bh
   14000b161:	rex.WRX add BYTE PTR [rax],r8b
   14000b164:	adc    al,0x8c
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	add    BYTE PTR [rdi+0x0],cl
   14000b16b:	add    BYTE PTR [rcx+0x2800004f],ch
   14000b171:	mov    WORD PTR [rax],es
   14000b173:	add    BYTE PTR [rax-0x5affffb1],dh
   14000b179:	push   rax
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	cmp    al,0x8c
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	lods   al,BYTE PTR ds:[rsi]
   14000b181:	push   rax
   14000b182:	add    BYTE PTR [rax],al
   14000b184:	and    edx,DWORD PTR [rcx+0x0]
   14000b187:	add    BYTE PTR [rax-0x74],bl
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	sub    al,0x51
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	fist   WORD PTR [rcx+0x0]
   14000b193:	add    BYTE PTR [rax-0x74],ch
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	call   0x17600b1ee
   14000b19d:	push   rbx
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	or     BYTE PTR [rax+rax*1+0x533c00],0x0
   14000b1a8:	out    0x53,eax
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	xchg   esp,eax
   14000b1ad:	mov    WORD PTR [rax],es
   14000b1af:	add    al,dh
   14000b1b1:	push   rbx
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	sbb    eax,0xa4000055
   14000b1b9:	mov    WORD PTR [rax],es
   14000b1bb:	add    BYTE PTR [rdx*2+0x55410000],ah
   14000b1c2:	add    BYTE PTR [rax],al
   14000b1c4:	ror    BYTE PTR [rax+rax*1+0x554800],0x0
   14000b1cc:	adc    DWORD PTR [rbp+0x0],0x8cc800
   14000b1d3:	add    BYTE PTR [rax+0x6f000055],ah
   14000b1d9:	push   rsi
   14000b1da:	add    BYTE PTR [rax],al
   14000b1dc:	(bad)  
   14000b1dd:	mov    WORD PTR [rax],es
   14000b1df:	add    BYTE PTR [rax-0x36ffffaa],al
   14000b1e5:	push   rsi
   14000b1e6:	add    BYTE PTR [rax],al
   14000b1e8:	fmul   QWORD PTR [rax+rax*1+0x56d000]
   14000b1ef:	add    BYTE PTR [rdx-0x1bffffa8],ah
   14000b1f5:	mov    WORD PTR [rax],es
   14000b1f7:	add    BYTE PTR [rax-0x3dffffa8],dh
   14000b1fd:	pop    rax
   14000b1fe:	add    BYTE PTR [rax],al
   14000b200:	sbb    al,0x8d
   14000b202:	add    BYTE PTR [rax],al
   14000b204:	loopne 0x14000b25e
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	(bad)  
   14000b209:	pop    rax
   14000b20a:	add    BYTE PTR [rax],al
   14000b20c:	sub    BYTE PTR [rbp+0x59040000],cl
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	cmp    BYTE PTR [rcx+0x0],bl
   14000b217:	add    BYTE PTR [rcx*4+0x59400000],dh
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	mov    cl,0x5a
   14000b222:	add    BYTE PTR [rax],al
   14000b224:	cmp    al,0x8d
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	mov    eax,0xaf00005a
   14000b22d:	pop    rbx
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	sub    al,0x8d
   14000b232:	add    BYTE PTR [rax],al
   14000b234:	loopne 0x14000b291
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	sbb    DWORD PTR [rax+rax*1+0x0],ebx
   14000b23c:	lea    r8d,[rax]
   14000b23f:	add    BYTE PTR [rax],ah
   14000b241:	pop    rsp
   14000b242:	add    BYTE PTR [rax],al
   14000b244:	cmp    BYTE PTR [rax+rax*1+0x0],bl
   14000b248:	lea    r8,[rax]
   14000b24b:	add    BYTE PTR [rsp+rbx*2+0x0],cl
   14000b24f:	add    BYTE PTR [rax+0x5400005c],ah
   14000b255:	lea    eax,[rax]
   14000b257:	add    BYTE PTR [rax-0x12ffffa4],ch
   14000b25d:	pop    rsp
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	je     0x14000b1ef
   14000b262:	add    BYTE PTR [rax],al
   14000b264:	(bad)  
   14000b265:	pop    rbp
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	lods   eax,DWORD PTR ds:[rsi]
   14000b269:	pop    rbp
   14000b26a:	add    BYTE PTR [rax],al
   14000b26c:	jl     0x14000b1fb
   14000b26e:	add    BYTE PTR [rax],al
   14000b270:	hlt    
   14000b271:	pop    rbp
   14000b272:	add    BYTE PTR [rax],al
   14000b274:	(bad)  
   14000b275:	pop    rsi
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	test   al,0x8d
   14000b27a:	add    BYTE PTR [rax],al
   14000b27c:	sbb    BYTE PTR [rdi+0x0],bl
   14000b27f:	add    BYTE PTR [rsi],dh
   14000b281:	pop    rdi
   14000b282:	add    BYTE PTR [rax],al
   14000b284:	mov    esp,0x4800008d
   14000b289:	pop    rdi
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	gs pop rdi
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	int3   
   14000b291:	lea    eax,[rax]
   14000b293:	add    BYTE PTR [rdi+rbx*2+0x0],ch
   14000b297:	add    bh,cl
   14000b299:	pop    rdi
   14000b29a:	add    BYTE PTR [rax],al
   14000b29c:	(bad)  
   14000b29d:	lea    eax,[rax]
   14000b29f:	add    BYTE PTR [rax],al
   14000b2a1:	(bad)  
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	add    ah,BYTE PTR [rax+0x0]
   14000b2a7:	add    BYTE PTR [rax+0x1600008d],bh
   14000b2ad:	(bad)  
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	xor    al,0x60
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	adc    al,0x8d
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	rex (bad) 
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	(bad)  
   14000b2bd:	(bad)  
   14000b2be:	add    BYTE PTR [rax],al
   14000b2c0:	.byte 0xa0
   14000b2c1:	lea    eax,[rax]
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    DWORD PTR [rax],eax
   14000c00e:	add    DWORD PTR [rax],eax
   14000c010:	movabs al,ds:0x1080000020800000
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax],bh
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rax],0x0
	...
   14000c02e:	add    DWORD PTR [rax],eax
   14000c030:	add    DWORD PTR [rax],eax
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	push   rax
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rax],0x0
	...
   14000c046:	add    DWORD PTR [rax],eax
   14000c048:	add    DWORD PTR [rax],eax
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	push   0x800000
	...
   14000c05d:	add    BYTE PTR [rcx],al
   14000c05f:	add    BYTE PTR [rcx],cl
   14000c061:	add    al,0x0
   14000c063:	add    BYTE PTR [rax+0x0],al
	...
   14000c075:	add    BYTE PTR [rcx],al
   14000c077:	add    BYTE PTR [rcx],cl
   14000c079:	add    al,0x0
   14000c07b:	add    BYTE PTR [rax+0x68000000],dl
   14000c081:	(bad)  
   14000c082:	add    BYTE PTR [rax],al
   14000c084:	enter  0x0,0x0
	...
   14000c090:	mov    al,0xc0
   14000c092:	add    BYTE PTR [rax],al
   14000c094:	mov    ah,0x3
	...
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	add    eax,DWORD PTR [rax]
   14000c0a2:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c0a6:	rex.WB add BYTE PTR [r8],al
   14000c0a9:	add    BYTE PTR [rax],al
   14000c0ab:	add    BYTE PTR [rax],al
   14000c0ad:	add    BYTE PTR [rax],al
   14000c0af:	add    BYTE PTR [rbx+rax*1+0x34],dh
   14000c0b6:	push   rsi
   14000c0b7:	add    BYTE PTR [rbx+0x0],dl
   14000c0ba:	pop    rdi
   14000c0bb:	add    BYTE PTR [rsi+0x0],dl
   14000c0be:	add    BYTE PTR [r10+0x0],r10b
   14000c0c2:	push   rbx
   14000c0c3:	add    BYTE PTR [rcx+0x0],cl
   14000c0c6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c0ca:	pop    rdi
   14000c0cb:	add    BYTE PTR [rcx+0x0],cl
   14000c0ce:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c0d2:	rex.WRXB add BYTE PTR [r8],r8b
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c0dd:	add    BYTE PTR [rcx],al
   14000c0df:	add    BYTE PTR [rax],al
   14000c0e1:	add    BYTE PTR [rdx],cl
   14000c0e3:	add    BYTE PTR [rax],al
   14000c0e5:	add    BYTE PTR [rax],bpl
   14000c0e8:	add    BYTE PTR [rax],al
   14000c0ea:	or     al,BYTE PTR [rax]
   14000c0ec:	add    BYTE PTR [rax+0x0],al
   14000c0ef:	sub    BYTE PTR [rdi],bh
   14000c0f1:	add    BYTE PTR [rax],al
   14000c0f3:	add    BYTE PTR [rax],al
   14000c0f5:	add    BYTE PTR [rax],al
   14000c0f7:	add    BYTE PTR [rax+rax*1],al
   14000c0fa:	add    al,0x0
   14000c0fc:	add    al,BYTE PTR [rax]
	...
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	adc    al,BYTE PTR [rbx]
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	add    DWORD PTR [rax],eax
   14000c112:	push   rbx
   14000c113:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000c117:	add    BYTE PTR [rcx+0x0],ch
   14000c11a:	outs   dx,BYTE PTR ds:[rsi]
   14000c11b:	add    BYTE PTR [rdi+0x0],ah
   14000c11e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c122:	ins    BYTE PTR es:[rdi],dx
   14000c123:	add    BYTE PTR [rbp+0x0],ah
   14000c126:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c12a:	data16 add BYTE PTR [rdi+0x0],ch
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	out    dx,al
   14000c131:	add    al,BYTE PTR [rax]
   14000c133:	add    BYTE PTR [rcx],al
   14000c135:	add    BYTE PTR [rax],dh
   14000c137:	add    BYTE PTR [rax+rax*1],dh
   14000c13a:	xor    BYTE PTR [rax],al
   14000c13c:	cmp    DWORD PTR [rax],eax
   14000c13e:	xor    BYTE PTR [rax],al
   14000c140:	xor    al,0x0
   14000c142:	rex.X add BYTE PTR [rax],sil
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c14b:	add    BYTE PTR [rcx],al
   14000c14d:	add    BYTE PTR [rbx+0x0],al
   14000c150:	outs   dx,DWORD PTR ds:[rsi]
   14000c151:	add    BYTE PTR [rbp+0x0],ch
   14000c154:	jo     0x14000c156
   14000c156:	(bad)  
   14000c157:	add    BYTE PTR [rsi+0x0],ch
   14000c15a:	jns    0x14000c15c
   14000c15c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c160:	ins    DWORD PTR es:[rdi],dx
   14000c161:	add    BYTE PTR [rbp+0x0],ah
   14000c164:	add    BYTE PTR [rax],al
   14000c166:	add    BYTE PTR [rax],al
   14000c168:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c16c:	movsxd eax,DWORD PTR [rax]
   14000c16e:	jb     0x14000c170
   14000c170:	outs   dx,DWORD PTR ds:[rsi]
   14000c171:	add    BYTE PTR [rbx+0x0],dh
   14000c174:	outs   dx,DWORD PTR ds:[rsi]
   14000c175:	add    BYTE PTR [rsi+0x0],ah
   14000c178:	je     0x14000c17a
   14000c17a:	and    BYTE PTR [rax],al
   14000c17c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c180:	jb     0x14000c182
   14000c182:	jo     0x14000c184
   14000c184:	outs   dx,DWORD PTR ds:[rsi]
   14000c185:	add    BYTE PTR [rdx+0x0],dh
   14000c188:	(bad)  
   14000c189:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c18d:	add    BYTE PTR [rdi+0x0],ch
   14000c190:	outs   dx,BYTE PTR ds:[rsi]
   14000c191:	add    BYTE PTR [rax],al
   14000c193:	add    BYTE PTR [rax+0x1002c00],al
   14000c199:	add    BYTE PTR [rsi+0x0],al
   14000c19c:	imul   eax,DWORD PTR [rax],0x65006c
   14000c1a2:	add    BYTE PTR [rbp+0x0],r12b
   14000c1a6:	jae    0x14000c1a8
   14000c1a8:	movsxd eax,DWORD PTR [rax]
   14000c1aa:	jb     0x14000c1ac
   14000c1ac:	imul   eax,DWORD PTR [rax],0x740070
   14000c1b2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c1b8:	add    BYTE PTR [rax],al
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	push   rsp
   14000c1bd:	add    BYTE PTR [rdi+0x0],ch
   14000c1c0:	outs   dx,DWORD PTR ds:[rsi]
   14000c1c1:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c1c5:	add    BYTE PTR [rsi+0x0],ah
   14000c1c8:	outs   dx,DWORD PTR ds:[rsi]
   14000c1c9:	add    BYTE PTR [rdx+0x0],dh
   14000c1cc:	and    BYTE PTR [rax],al
   14000c1ce:	ins    DWORD PTR es:[rdi],dx
   14000c1cf:	add    BYTE PTR [rcx+0x0],ah
   14000c1d2:	outs   dx,BYTE PTR ds:[rsi]
   14000c1d3:	add    BYTE PTR [rcx+0x0],ah
   14000c1d6:	add    BYTE PTR [ecx+0x0],ch
   14000c1da:	outs   dx,BYTE PTR ds:[rsi]
   14000c1db:	add    BYTE PTR [rdi+0x0],ah
   14000c1de:	and    BYTE PTR [rax],al
   14000c1e0:	je     0x14000c1e2
   14000c1e2:	push   0x20006500
   14000c1e7:	add    BYTE PTR [rbx+0x0],cl
   14000c1ea:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c1ee:	(bad)  
   14000c1ef:	add    BYTE PTR [rbp+0x0],ah
   14000c1f2:	jb     0x14000c1f4
   14000c1f4:	outs   dx,DWORD PTR ds:[rsi]
   14000c1f5:	add    BYTE PTR [rbx+0x0],dh
   14000c1f8:	and    BYTE PTR [rax],al
   14000c1fa:	je     0x14000c1fc
   14000c1fc:	imul   eax,DWORD PTR [rax],0x6b0063
   14000c202:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   14000c207:	add    BYTE PTR [rbx+0x0],ah
   14000c20a:	(bad)  
   14000c20b:	add    BYTE PTR [rbx+0x0],ah
   14000c20e:	push   0x6500
   14000c213:	add    BYTE PTR [rsi+0x0],ah
   14000c216:	and    eax,DWORD PTR [rax]
   14000c218:	add    DWORD PTR [rax],eax
   14000c21a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c21e:	ins    BYTE PTR es:[rdi],dx
   14000c21f:	add    BYTE PTR [rbp+0x0],ah
   14000c222:	push   rsi
   14000c223:	add    BYTE PTR [rbp+0x0],ah
   14000c226:	jb     0x14000c228
   14000c228:	jae    0x14000c22a
   14000c22a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c230:	add    BYTE PTR [rax],al
   14000c232:	add    BYTE PTR [rax],al
   14000c234:	xor    DWORD PTR [rax],eax
   14000c236:	xor    BYTE PTR [rax],al
   14000c238:	add    BYTE PTR cs:[rax],dh
   14000c23b:	add    BYTE PTR [rsi],ch
   14000c23d:	add    BYTE PTR [rcx],dh
   14000c23f:	add    BYTE PTR [rax],dh
   14000c241:	add    BYTE PTR [rdx],dh
   14000c243:	add    BYTE PTR [rax+rax*1],dh
   14000c246:	xor    BYTE PTR [rax],al
   14000c248:	add    BYTE PTR cs:[rcx],dh
   14000c24b:	add    BYTE PTR [rsi],dh
   14000c24d:	add    BYTE PTR [rbx],dh
   14000c24f:	add    BYTE PTR [rax],bh
   14000c251:	add    BYTE PTR [rax+rax*1],dh
   14000c254:	and    BYTE PTR [rax],al
   14000c256:	sub    BYTE PTR [rax],al
   14000c258:	je     0x14000c25a
   14000c25a:	push   0x2e003100
   14000c25f:	add    BYTE PTR [rcx],dh
   14000c261:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f267
   14000c267:	add    BYTE PTR [rax],dh
   14000c269:	add    BYTE PTR [rcx],bh
   14000c26b:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f371
   14000c271:	add    BYTE PTR [rax],dh
   14000c273:	add    BYTE PTR [rax],dh
   14000c275:	add    BYTE PTR [rcx],ch
   14000c277:	add    BYTE PTR [rax],al
   14000c279:	add    BYTE PTR [rax],al
   14000c27b:	add    BYTE PTR [rax+rax*1],dh
   14000c27e:	or     al,BYTE PTR [rax]
   14000c280:	add    DWORD PTR [rax],eax
   14000c282:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c286:	je     0x14000c288
   14000c288:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c28c:	outs   dx,BYTE PTR ds:[rsi]
   14000c28d:	add    BYTE PTR [rcx+0x0],ah
   14000c290:	ins    BYTE PTR es:[rdi],dx
   14000c291:	add    BYTE PTR [rsi+0x0],cl
   14000c294:	(bad)  
   14000c295:	add    BYTE PTR [rbp+0x0],ch
   14000c298:	add    BYTE PTR gs:[rax],al
   14000c29b:	add    BYTE PTR [rbx+0x0],ch
   14000c29e:	ins    BYTE PTR es:[rdi],dx
   14000c29f:	add    BYTE PTR [rcx+0x0],ch
   14000c2a2:	jae    0x14000c2a4
   14000c2a4:	je     0x14000c2a6
   14000c2a6:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c2aa:	js     0x14000c2ac
   14000c2ac:	add    BYTE PTR gs:[rax],al
   14000c2af:	add    BYTE PTR [rax+0x1002e00],al
   14000c2b5:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c2b9:	add    BYTE PTR [rdi+0x0],ah
   14000c2bc:	(bad)  
   14000c2bd:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c2c1:	add    BYTE PTR [rdi+0x0],ch
   14000c2c4:	jo     0x14000c2c6
   14000c2c6:	jns    0x14000c2c8
   14000c2c8:	jb     0x14000c2ca
   14000c2ca:	imul   eax,DWORD PTR [rax],0x680067
   14000c2d0:	je     0x14000c2d2
   14000c2d2:	add    BYTE PTR [rax],al
   14000c2d4:	test   eax,0x4d002000
   14000c2d9:	add    BYTE PTR [rcx+0x0],ch
   14000c2dc:	movsxd eax,DWORD PTR [rax]
   14000c2de:	jb     0x14000c2e0
   14000c2e0:	outs   dx,DWORD PTR ds:[rsi]
   14000c2e1:	add    BYTE PTR [rbx+0x0],dh
   14000c2e4:	outs   dx,DWORD PTR ds:[rsi]
   14000c2e5:	add    BYTE PTR [rsi+0x0],ah
   14000c2e8:	je     0x14000c2ea
   14000c2ea:	and    BYTE PTR [rax],al
   14000c2ec:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c2f0:	jb     0x14000c2f2
   14000c2f2:	jo     0x14000c2f4
   14000c2f4:	outs   dx,DWORD PTR ds:[rsi]
   14000c2f5:	add    BYTE PTR [rdx+0x0],dh
   14000c2f8:	(bad)  
   14000c2f9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c2fd:	add    BYTE PTR [rdi+0x0],ch
   14000c300:	outs   dx,BYTE PTR ds:[rsi]
   14000c301:	add    BYTE PTR [rsi],ch
   14000c303:	add    BYTE PTR [rax],ah
   14000c305:	add    BYTE PTR [rcx+0x0],al
   14000c308:	ins    BYTE PTR es:[rdi],dx
   14000c309:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c30d:	add    BYTE PTR [rdx+0x0],dh
   14000c310:	imul   eax,DWORD PTR [rax],0x680067
   14000c316:	je     0x14000c318
   14000c318:	jae    0x14000c31a
   14000c31a:	and    BYTE PTR [rax],al
   14000c31c:	jb     0x14000c31e
   14000c31e:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c322:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c326:	jbe    0x14000c328
   14000c328:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c32d:	add    BYTE PTR [rax],al
   14000c32f:	add    BYTE PTR [rax+rax*1],bh
   14000c332:	or     al,BYTE PTR [rax]
   14000c334:	add    DWORD PTR [rax],eax
   14000c336:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000c33a:	imul   eax,DWORD PTR [rax],0x690067
   14000c340:	outs   dx,BYTE PTR ds:[rsi]
   14000c341:	add    BYTE PTR [rcx+0x0],ah
   14000c344:	ins    BYTE PTR es:[rdi],dx
   14000c345:	add    BYTE PTR [rsi+0x0],al
   14000c348:	imul   eax,DWORD PTR [rax],0x65006c
   14000c34e:	outs   dx,BYTE PTR ds:[rsi]
   14000c34f:	add    BYTE PTR [rcx+0x0],ah
   14000c352:	ins    DWORD PTR es:[rdi],dx
   14000c353:	add    BYTE PTR [rbp+0x0],ah
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	imul   eax,DWORD PTR [rax],0x6c
   14000c35b:	add    BYTE PTR [rcx+0x0],ch
   14000c35e:	jae    0x14000c360
   14000c360:	je     0x14000c362
   14000c362:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c366:	js     0x14000c368
   14000c368:	add    BYTE PTR gs:[rax],al
   14000c36b:	add    BYTE PTR [rdx+0x0],ch
   14000c36e:	and    eax,0x50000100
   14000c373:	add    BYTE PTR [rdx+0x0],dh
   14000c376:	outs   dx,DWORD PTR ds:[rsi]
   14000c377:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c37b:	add    BYTE PTR [rbx+0x0],ah
   14000c37e:	je     0x14000c380
   14000c380:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c384:	ins    DWORD PTR es:[rdi],dx
   14000c385:	add    BYTE PTR [rbp+0x0],ah
   14000c388:	add    BYTE PTR [rax],al
   14000c38a:	add    BYTE PTR [rax],al
   14000c38c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c390:	movsxd eax,DWORD PTR [rax]
   14000c392:	jb     0x14000c394
   14000c394:	outs   dx,DWORD PTR ds:[rsi]
   14000c395:	add    BYTE PTR [rbx+0x0],dh
   14000c398:	outs   dx,DWORD PTR ds:[rsi]
   14000c399:	add    BYTE PTR [rsi+0x0],ah
   14000c39c:	je     0x14000c39e
   14000c39e:	scas   al,BYTE PTR es:[rdi]
   14000c39f:	add    BYTE PTR [rax],ah
   14000c3a1:	add    BYTE PTR [rdi+0x0],dl
   14000c3a4:	imul   eax,DWORD PTR [rax],0x64006e
   14000c3aa:	outs   dx,DWORD PTR ds:[rsi]
   14000c3ab:	add    BYTE PTR [rdi+0x0],dh
   14000c3ae:	jae    0x14000c3b0
   14000c3b0:	scas   al,BYTE PTR es:[rdi]
   14000c3b1:	add    BYTE PTR [rax],ah
   14000c3b3:	add    BYTE PTR [rdi+0x0],cl
   14000c3b6:	jo     0x14000c3b8
   14000c3b8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c3bc:	(bad)  
   14000c3bd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c3c1:	add    BYTE PTR [rsi+0x0],ch
   14000c3c4:	add    BYTE PTR [eax],ah
   14000c3c7:	add    BYTE PTR [rbx+0x0],dl
   14000c3ca:	jns    0x14000c3cc
   14000c3cc:	jae    0x14000c3ce
   14000c3ce:	je     0x14000c3d0
   14000c3d0:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c3d4:	add    BYTE PTR [rax],al
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	rex.RX add BYTE PTR [rcx],r10b
   14000c3db:	add    BYTE PTR [rcx],al
   14000c3dd:	add    BYTE PTR [rax+0x0],dl
   14000c3e0:	jb     0x14000c3e2
   14000c3e2:	outs   dx,DWORD PTR ds:[rsi]
   14000c3e3:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c3e7:	add    BYTE PTR [rbx+0x0],ah
   14000c3ea:	je     0x14000c3ec
   14000c3ec:	push   rsi
   14000c3ed:	add    BYTE PTR [rbp+0x0],ah
   14000c3f0:	jb     0x14000c3f2
   14000c3f2:	jae    0x14000c3f4
   14000c3f4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c3fa:	add    BYTE PTR [rax],al
   14000c3fc:	xor    DWORD PTR [rax],eax
   14000c3fe:	xor    BYTE PTR [rax],al
   14000c400:	add    BYTE PTR cs:[rax],dh
   14000c403:	add    BYTE PTR [rsi],ch
   14000c405:	add    BYTE PTR [rcx],dh
   14000c407:	add    BYTE PTR [rax],dh
   14000c409:	add    BYTE PTR [rdx],dh
   14000c40b:	add    BYTE PTR [rax+rax*1],dh
   14000c40e:	xor    BYTE PTR [rax],al
   14000c410:	add    BYTE PTR cs:[rcx],dh
   14000c413:	add    BYTE PTR [rsi],dh
   14000c415:	add    BYTE PTR [rbx],dh
   14000c417:	add    BYTE PTR [rax],bh
   14000c419:	add    BYTE PTR [rax+rax*1],dh
   14000c41c:	add    BYTE PTR [rax],al
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	add    BYTE PTR [rax],r8b
   14000c423:	add    BYTE PTR [rcx],al
   14000c425:	add    BYTE PTR [rsi+0x0],dl
   14000c428:	(bad)  
   14000c429:	add    BYTE PTR [rdx+0x0],dh
   14000c42c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c430:	ins    BYTE PTR es:[rdi],dx
   14000c431:	add    BYTE PTR [rbp+0x0],ah
   14000c434:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c438:	data16 add BYTE PTR [rdi+0x0],ch
   14000c43c:	add    BYTE PTR [rax],al
   14000c43e:	add    BYTE PTR [rax],al
   14000c440:	and    al,0x0
   14000c442:	add    al,0x0
   14000c444:	add    BYTE PTR [rax],al
   14000c446:	push   rsp
   14000c447:	add    BYTE PTR [rdx+0x0],dh
   14000c44a:	(bad)  
   14000c44b:	add    BYTE PTR [rsi+0x0],ch
   14000c44e:	jae    0x14000c450
   14000c450:	ins    BYTE PTR es:[rdi],dx
   14000c451:	add    BYTE PTR [rcx+0x0],ah
   14000c454:	je     0x14000c456
   14000c456:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c45c:	add    BYTE PTR [rax],al
   14000c45e:	add    BYTE PTR [rax],al
   14000c460:	or     DWORD PTR [rax+rsi*4],eax
   14000c463:	add    al,0x0
   14000c465:	add    BYTE PTR [rax],al
   14000c467:	add    ch,cl
   14000c469:	dec    ch
   14000c46b:	dec    al
   14000c46d:	add    BYTE PTR [rax],al
   14000c46f:	add    BYTE PTR [rax],al
   14000c471:	add    BYTE PTR [rcx],al
   14000c473:	add    BYTE PTR [rax],al
   14000c475:	add    BYTE PTR [rax],al
   14000c477:	add    BYTE PTR [rcx],dl
   14000c479:	add    BYTE PTR [rax],al
   14000c47b:	add    BYTE PTR [rax],al
   14000c47d:	add    BYTE PTR [rax],al
   14000c47f:	add    BYTE PTR [rdx],al
   14000c481:	add    BYTE PTR [rax],al
   14000c483:	add    BYTE PTR [rcx-0x28],bl
   14000c486:	(bad)  
   14000c487:	sub    BYTE PTR [rbp-0x5981b245],0x14
   14000c48e:	sbb    DWORD PTR [rbp-0x51],ebp
   14000c491:	(bad)  [rsi+rdx*2]
   14000c494:	jl     0x14000c48c
   14000c496:	ss pushf 
   14000c498:	jne    0x14000c47c
   14000c49a:	jns    0x14000c4e2
   14000c49c:	pop    rsi
   14000c49d:	xor    eax,0x796e2f9b
   14000c4a2:	rcr    cl,cl
	...
   14000c4bc:	mov    BYTE PTR [rax],al
   14000c4be:	add    BYTE PTR [rax],al
   14000c4c0:	(bad)  
   14000c4c1:	add    BYTE PTR [rax],al
   14000c4c3:	add    BYTE PTR [rax+0x4000000],bl
   14000c4c9:	add    BYTE PTR [rax],al
   14000c4cb:	add    BYTE PTR [rax+0xe000000],ah
   14000c4d1:	add    BYTE PTR [rax],al
   14000c4d3:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000c4e1:	add    BYTE PTR [rax],al
   14000c4e3:	add    BYTE PTR [rax+0xc000000],bh
   14000c4e9:	add    BYTE PTR [rax],al
   14000c4eb:	add    BYTE PTR [rax],al
   14000c4ed:	add    BYTE PTR [rax],al
   14000c4ef:	add    BYTE PTR [rbp+0x0],cl
   14000c4f2:	push   rbp
   14000c4f3:	add    BYTE PTR [rcx+0x0],cl
	...
   14000c4fe:	add    BYTE PTR [rax],al
   14000c500:	adc    BYTE PTR [rax],al
   14000c502:	add    BYTE PTR [rax],al
   14000c504:	add    BYTE PTR [rax],al
   14000c506:	add    BYTE PTR [rax],al
   14000c508:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c50c:	rex.WB add BYTE PTR [r8],al
	...
   14000c517:	add    BYTE PTR [rsi],al
   14000c519:	add    BYTE PTR [rax],al
   14000c51b:	add    BYTE PTR [rax],dl
   14000c51d:	add    BYTE PTR [rax],al
   14000c51f:	add    BYTE PTR [rbp+0x0],ah
   14000c522:	outs   dx,BYTE PTR ds:[rsi]
   14000c523:	add    BYTE PTR [rip+0x53005500],ch        # 0x193011a29
   14000c529:	add    BYTE PTR [rax],al
   14000c52b:	add    BYTE PTR [rax],al
   14000c52d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000d000 <.reloc>:
   14000d000:	add    BYTE PTR [rax+0x0],dh
   14000d003:	add    BYTE PTR [rax],bl
   14000d005:	add    BYTE PTR [rax],al
   14000d007:	add    BYTE PTR [rax-0x3f5c4f5d],ch
   14000d00d:	movabs ds:0xa418a410a3e0a3d8,eax
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	add    BYTE PTR [rax+0x100000],al
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	sbb    BYTE PTR [rdi-0x58c758d0],ah
   14000d026:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
