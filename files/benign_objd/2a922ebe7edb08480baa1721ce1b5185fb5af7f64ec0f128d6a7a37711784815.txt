
2a922ebe7edb08480baa1721ce1b5185fb5af7f64ec0f128d6a7a37711784815.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x25179]        # 0x140026180
   140001007:	jmp    0x140013788
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x25159]        # 0x140026170
   140001017:	jmp    0x140013788
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x25139]        # 0x140026160
   140001027:	jmp    0x140013788
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	lea    rdx,[rip+0x2e061]        # 0x14002f09c
   14000103b:	lea    rcx,[rip+0x392a6]        # 0x14003a2e8
   140001042:	xor    r9d,r9d
   140001045:	or     r8,0xffffffffffffffff
   140001049:	call   0x14000fb80
   14000104e:	lea    rcx,[rip+0x2513b]        # 0x140026190
   140001055:	add    rsp,0x28
   140001059:	jmp    0x140013788
   14000105e:	int3   
   14000105f:	int3   
   140001060:	sub    rsp,0x28
   140001064:	lea    rcx,[rip+0x391e5]        # 0x14003a250
   14000106b:	call   0x1400241f0
   140001070:	lea    rcx,[rip+0x25181]        # 0x1400261f8
   140001077:	add    rsp,0x28
   14000107b:	jmp    0x140013788
   140001080:	ret    0x0
   140001083:	int3   
   140001084:	int3   
   140001085:	int3   
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	rex push rbx
   140001092:	sub    rsp,0x20
   140001096:	lea    rax,[rip+0x263d3]        # 0x140027470
   14000109d:	mov    rbx,rcx
   1400010a0:	mov    QWORD PTR [rcx],rax
   1400010a3:	test   dl,0x1
   1400010a6:	je     0x1400010ad
   1400010a8:	call   0x1400137cc
   1400010ad:	mov    rax,rbx
   1400010b0:	add    rsp,0x20
   1400010b4:	pop    rbx
   1400010b5:	ret    
   1400010b6:	int3   
   1400010b7:	int3   
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	mov    DWORD PTR [rdx],r8d
   1400010c3:	mov    QWORD PTR [rdx+0x8],rcx
   1400010c7:	mov    rax,rdx
   1400010ca:	ret    
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	rex push rbx
   1400010d2:	sub    rsp,0x30
   1400010d6:	mov    rax,QWORD PTR [rcx]
   1400010d9:	mov    rbx,r8
   1400010dc:	mov    r8d,edx
   1400010df:	lea    rdx,[rsp+0x20]
   1400010e4:	call   QWORD PTR [rax+0x18]
   1400010e7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400010eb:	cmp    QWORD PTR [rax+0x8],rcx
   1400010ef:	jne    0x1400010ff
   1400010f1:	mov    ecx,DWORD PTR [rbx]
   1400010f3:	cmp    DWORD PTR [rax],ecx
   1400010f5:	jne    0x1400010ff
   1400010f7:	mov    al,0x1
   1400010f9:	add    rsp,0x30
   1400010fd:	pop    rbx
   1400010fe:	ret    
   1400010ff:	xor    al,al
   140001101:	add    rsp,0x30
   140001105:	pop    rbx
   140001106:	ret    
   140001107:	int3   
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	cmp    rcx,QWORD PTR [rdx+0x8]
   140001114:	jne    0x14000111e
   140001116:	cmp    DWORD PTR [rdx],r8d
   140001119:	jne    0x14000111e
   14000111b:	mov    al,0x1
   14000111d:	ret    
   14000111e:	xor    al,al
   140001120:	ret    
   140001121:	int3   
   140001122:	int3   
   140001123:	int3   
   140001124:	int3   
   140001125:	int3   
   140001126:	int3   
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	lea    rax,[rip+0x2da61]        # 0x14002eb98
   140001137:	ret    
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	mov    QWORD PTR [rsp+0x8],rbx
   140001145:	push   rdi
   140001146:	sub    rsp,0x30
   14000114a:	xor    ebx,ebx
   14000114c:	mov    ecx,r8d
   14000114f:	mov    rdi,rdx
   140001152:	mov    DWORD PTR [rsp+0x20],ebx
   140001156:	call   0x140012e64
   14000115b:	mov    QWORD PTR [rdi+0x18],0xf
   140001163:	test   rax,rax
   140001166:	mov    QWORD PTR [rdi+0x10],rbx
   14000116a:	lea    rdx,[rip+0x2da2f]        # 0x14002eba0
   140001171:	cmovne rdx,rax
   140001175:	mov    BYTE PTR [rdi],bl
   140001177:	cmp    BYTE PTR [rdx],bl
   140001179:	je     0x140001189
   14000117b:	or     rbx,0xffffffffffffffff
   14000117f:	nop
   140001180:	inc    rbx
   140001183:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140001187:	jne    0x140001180
   140001189:	mov    r8,rbx
   14000118c:	mov    rcx,rdi
   14000118f:	call   0x1400021a0
   140001194:	mov    rbx,QWORD PTR [rsp+0x40]
   140001199:	mov    rax,rdi
   14000119c:	add    rsp,0x30
   1400011a0:	pop    rdi
   1400011a1:	ret    
   1400011a2:	int3   
   1400011a3:	int3   
   1400011a4:	int3   
   1400011a5:	int3   
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	lea    rax,[rip+0x2d9f9]        # 0x14002ebb0
   1400011b7:	ret    
   1400011b8:	int3   
   1400011b9:	int3   
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	rex push rbx
   1400011c2:	sub    rsp,0x30
   1400011c6:	xor    eax,eax
   1400011c8:	mov    rbx,rdx
   1400011cb:	mov    DWORD PTR [rsp+0x20],eax
   1400011cf:	cmp    r8d,0x1
   1400011d3:	jne    0x1400011ff
   1400011d5:	mov    QWORD PTR [rdx+0x18],0xf
   1400011dd:	mov    QWORD PTR [rdx+0x10],rax
   1400011e1:	mov    BYTE PTR [rdx],al
   1400011e3:	lea    rdx,[rip+0x2d9d6]        # 0x14002ebc0
   1400011ea:	lea    r8d,[rax+0x15]
   1400011ee:	mov    rcx,rbx
   1400011f1:	call   0x1400021a0
   1400011f6:	mov    rax,rbx
   1400011f9:	add    rsp,0x30
   1400011fd:	pop    rbx
   1400011fe:	ret    
   1400011ff:	call   0x140001140
   140001204:	mov    rax,rbx
   140001207:	add    rsp,0x30
   14000120b:	pop    rbx
   14000120c:	ret    
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	lea    rax,[rip+0x2d9c1]        # 0x14002ebd8
   140001217:	ret    
   140001218:	int3   
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	mov    QWORD PTR [rsp+0x8],rbx
   140001225:	push   rdi
   140001226:	sub    rsp,0x30
   14000122a:	xor    ebx,ebx
   14000122c:	mov    ecx,r8d
   14000122f:	mov    rdi,rdx
   140001232:	mov    DWORD PTR [rsp+0x20],ebx
   140001236:	call   0x140012e8c
   14000123b:	mov    QWORD PTR [rdi+0x18],0xf
   140001243:	test   rax,rax
   140001246:	mov    QWORD PTR [rdi+0x10],rbx
   14000124a:	lea    rdx,[rip+0x2d94f]        # 0x14002eba0
   140001251:	cmovne rdx,rax
   140001255:	mov    BYTE PTR [rdi],bl
   140001257:	cmp    BYTE PTR [rdx],bl
   140001259:	je     0x140001269
   14000125b:	or     rbx,0xffffffffffffffff
   14000125f:	nop
   140001260:	inc    rbx
   140001263:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140001267:	jne    0x140001260
   140001269:	mov    r8,rbx
   14000126c:	mov    rcx,rdi
   14000126f:	call   0x1400021a0
   140001274:	mov    rbx,QWORD PTR [rsp+0x40]
   140001279:	mov    rax,rdi
   14000127c:	add    rsp,0x30
   140001280:	pop    rdi
   140001281:	ret    
   140001282:	int3   
   140001283:	int3   
   140001284:	int3   
   140001285:	int3   
   140001286:	int3   
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	mov    QWORD PTR [rsp+0x8],rbx
   140001295:	push   rdi
   140001296:	sub    rsp,0x20
   14000129a:	mov    ecx,r8d
   14000129d:	mov    edi,r8d
   1400012a0:	mov    rbx,rdx
   1400012a3:	call   0x140012e64
   1400012a8:	mov    DWORD PTR [rbx],edi
   1400012aa:	test   rax,rax
   1400012ad:	lea    rax,[rip+0x37634]        # 0x1400388e8
   1400012b4:	jne    0x1400012bd
   1400012b6:	lea    rax,[rip+0x3761b]        # 0x1400388d8
   1400012bd:	mov    QWORD PTR [rbx+0x8],rax
   1400012c1:	mov    rax,rbx
   1400012c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012c9:	add    rsp,0x20
   1400012cd:	pop    rdi
   1400012ce:	ret    
   1400012cf:	int3   
   1400012d0:	mov    rcx,QWORD PTR [rcx]
   1400012d3:	rex.W jmp QWORD PTR [rip+0x25d5e]        # 0x140027038
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	mov    rax,rsp
   1400012e3:	push   rdi
   1400012e4:	push   r12
   1400012e6:	push   r13
   1400012e8:	push   r14
   1400012ea:	push   r15
   1400012ec:	sub    rsp,0x8a0
   1400012f3:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   1400012fc:	mov    QWORD PTR [rax+0x10],rbx
   140001300:	mov    QWORD PTR [rax+0x18],rsi
   140001304:	mov    rax,QWORD PTR [rip+0x35d05]        # 0x140037010
   14000130b:	xor    rax,rsp
   14000130e:	mov    QWORD PTR [rsp+0x890],rax
   140001316:	mov    r14,rcx
   140001319:	test   rcx,rcx
   14000131c:	jne    0x140001326
   14000131e:	lea    eax,[rcx+0x8]
   140001321:	jmp    0x1400015b3
   140001326:	mov    QWORD PTR [rsp+0x48],rcx
   14000132b:	xor    edi,edi
   14000132d:	cmp    DWORD PTR [rcx+0x1c],edi
   140001330:	jne    0x140001338
   140001332:	mov    rsi,QWORD PTR [rcx+0x48]
   140001336:	jmp    0x14000133b
   140001338:	mov    rsi,rdi
   14000133b:	mov    QWORD PTR [rsp+0x40],rsi
   140001340:	mov    r13,QWORD PTR [rcx+0x10]
   140001344:	mov    QWORD PTR [rsp+0x58],r13
   140001349:	mov    r12d,DWORD PTR [rcx]
   14000134c:	mov    DWORD PTR [rsp+0x3c],r12d
   140001351:	mov    r15,QWORD PTR [rcx+0xe0]
   140001358:	mov    QWORD PTR [rsp+0x50],r15
   14000135d:	nop    DWORD PTR [rax]
   140001360:	xor    edx,edx
   140001362:	mov    rcx,r13
   140001365:	call   QWORD PTR [rip+0x25e45]        # 0x1400271b0
   14000136b:	cmp    eax,0x102
   140001370:	jne    0x1400015b1
   140001376:	mov    DWORD PTR [rsp+0x34],edi
   14000137a:	mov    DWORD PTR [rsp+0x30],edi
   14000137e:	mov    QWORD PTR [rsp+0x70],0x0
   140001387:	mov    QWORD PTR [rsp+0x78],0x0
   140001390:	xor    edx,edx
   140001392:	mov    r8d,0x400
   140001398:	lea    rcx,[rsp+0x80]
   1400013a0:	call   0x140014d80
   1400013a5:	mov    QWORD PTR [rsp+0x480],0x0
   1400013b1:	mov    DWORD PTR [rsp+0x488],edi
   1400013b8:	xor    edx,edx
   1400013ba:	mov    r8d,0x400
   1400013c0:	lea    rcx,[rsp+0x48c]
   1400013c8:	call   0x140014d80
   1400013cd:	xor    edx,edx
   1400013cf:	mov    rcx,rsi
   1400013d2:	call   QWORD PTR [rip+0x25dc8]        # 0x1400271a0
   1400013d8:	test   r12d,r12d
   1400013db:	je     0x140001463
   1400013e1:	test   r15,r15
   1400013e4:	je     0x140001463
   1400013e6:	mov    DWORD PTR [rsp+0x38],edi
   1400013ea:	lea    rdx,[rsp+0x38]
   1400013ef:	mov    rcx,rsi
   1400013f2:	call   r15
   1400013f5:	test   eax,eax
   1400013f7:	je     0x140001463
   1400013f9:	cmp    r12d,DWORD PTR [rsp+0x38]
   1400013fe:	je     0x140001463
   140001400:	mov    eax,DWORD PTR [rsp+0x70]
   140001404:	mov    DWORD PTR [rsp+0x480],eax
   14000140b:	mov    DWORD PTR [rsp+0x484],0xfffffffa
   140001416:	mov    QWORD PTR [rsp+0x20],rdi
   14000141b:	lea    r9,[rsp+0x34]
   140001420:	mov    r8d,0x410
   140001426:	lea    rdx,[rsp+0x70]
   14000142b:	mov    rcx,rsi
   14000142e:	call   QWORD PTR [rip+0x25c14]        # 0x140027048
   140001434:	mov    QWORD PTR [rsp+0x20],rdi
   140001439:	lea    r9,[rsp+0x30]
   14000143e:	mov    r8d,0x40c
   140001444:	lea    rdx,[rsp+0x480]
   14000144c:	mov    rcx,rsi
   14000144f:	call   QWORD PTR [rip+0x25d13]        # 0x140027168
   140001455:	mov    rcx,rsi
   140001458:	call   QWORD PTR [rip+0x25bfa]        # 0x140027058
   14000145e:	jmp    0x140001360
   140001463:	mov    QWORD PTR [rsp+0x20],rdi
   140001468:	lea    r9,[rsp+0x34]
   14000146d:	mov    r8d,0x410
   140001473:	lea    rdx,[rsp+0x70]
   140001478:	mov    rcx,rsi
   14000147b:	call   QWORD PTR [rip+0x25bc7]        # 0x140027048
   140001481:	test   eax,eax
   140001483:	je     0x140001455
   140001485:	mov    eax,DWORD PTR [rsp+0x70]
   140001489:	cmp    DWORD PTR [rsp+0x34],0x410
   140001491:	jne    0x14000159a
   140001497:	test   eax,eax
   140001499:	je     0x14000153d
   14000149f:	cmp    eax,0x3
   1400014a2:	je     0x140001540
   1400014a8:	cmp    DWORD PTR [rsp+0x7c],0x400
   1400014b0:	ja     0x14000153d
   1400014b6:	mov    edx,eax
   1400014b8:	mov    rcx,r14
   1400014bb:	call   0x140001f10
   1400014c0:	test   rax,rax
   1400014c3:	jne    0x1400014dd
   1400014c5:	mov    eax,DWORD PTR [rsp+0x70]
   1400014c9:	mov    DWORD PTR [rsp+0x480],eax
   1400014d0:	mov    DWORD PTR [rsp+0x484],0xffffffff
   1400014db:	jmp    0x14000150d
   1400014dd:	mov    r8,r14
   1400014e0:	lea    rdx,[rsp+0x480]
   1400014e8:	lea    rcx,[rsp+0x70]
   1400014ed:	call   rax
   1400014ef:	nop
   1400014f0:	jmp    0x14000150d
   1400014f2:	xor    edi,edi
   1400014f4:	mov    r14,QWORD PTR [rsp+0x48]
   1400014f9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400014fe:	mov    r13,QWORD PTR [rsp+0x58]
   140001503:	mov    r12d,DWORD PTR [rsp+0x3c]
   140001508:	mov    r15,QWORD PTR [rsp+0x50]
   14000150d:	mov    QWORD PTR [rsp+0x20],rdi
   140001512:	lea    r9,[rsp+0x30]
   140001517:	mov    r8d,0x40c
   14000151d:	lea    rdx,[rsp+0x480]
   140001525:	mov    rcx,rsi
   140001528:	call   QWORD PTR [rip+0x25c3a]        # 0x140027168
   14000152e:	lea    rcx,[r14+0x20]
   140001532:	call   QWORD PTR [rip+0x25b00]        # 0x140027038
   140001538:	jmp    0x140001455
   14000153d:	cmp    eax,0x3
   140001540:	sete   bl
   140001543:	mov    DWORD PTR [rsp+0x480],eax
   14000154a:	mov    eax,0xfffffffb
   14000154f:	test   bl,bl
   140001551:	cmovne eax,edi
   140001554:	mov    DWORD PTR [rsp+0x484],eax
   14000155b:	mov    QWORD PTR [rsp+0x20],rdi
   140001560:	lea    r9,[rsp+0x30]
   140001565:	mov    r8d,0x40c
   14000156b:	lea    rdx,[rsp+0x480]
   140001573:	mov    rcx,rsi
   140001576:	call   QWORD PTR [rip+0x25bec]        # 0x140027168
   14000157c:	mov    rcx,rsi
   14000157f:	call   QWORD PTR [rip+0x25ad3]        # 0x140027058
   140001585:	test   bl,bl
   140001587:	je     0x140001360
   14000158d:	cmp    BYTE PTR [r14+0x18],0x0
   140001592:	jne    0x140001360
   140001598:	jmp    0x1400015b1
   14000159a:	mov    DWORD PTR [rsp+0x480],eax
   1400015a1:	mov    DWORD PTR [rsp+0x484],0xfffffffe
   1400015ac:	jmp    0x140001434
   1400015b1:	xor    eax,eax
   1400015b3:	mov    rcx,QWORD PTR [rsp+0x890]
   1400015bb:	xor    rcx,rsp
   1400015be:	call   0x1400130a0
   1400015c3:	lea    r11,[rsp+0x8a0]
   1400015cb:	mov    rbx,QWORD PTR [r11+0x38]
   1400015cf:	mov    rsi,QWORD PTR [r11+0x40]
   1400015d3:	mov    rsp,r11
   1400015d6:	pop    r15
   1400015d8:	pop    r14
   1400015da:	pop    r13
   1400015dc:	pop    r12
   1400015de:	pop    rdi
   1400015df:	ret    
   1400015e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400015e5:	push   r14
   1400015e7:	sub    rsp,0x30
   1400015eb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400015f4:	mov    QWORD PTR [rsp+0x48],rbx
   1400015f9:	mov    QWORD PTR [rsp+0x50],rsi
   1400015fe:	mov    QWORD PTR [rsp+0x58],rdi
   140001603:	mov    rsi,r8
   140001606:	mov    rdi,rcx
   140001609:	xor    ebx,ebx
   14000160b:	mov    QWORD PTR [rcx+0x60],rbx
   14000160f:	mov    QWORD PTR [rcx+0x68],rbx
   140001613:	call   0x140003050
   140001618:	mov    QWORD PTR [rdi+0x60],rax
   14000161c:	mov    QWORD PTR [rdi+0x88],0x7
   140001627:	mov    QWORD PTR [rdi+0x80],rbx
   14000162e:	mov    WORD PTR [rdi+0x70],bx
   140001632:	mov    QWORD PTR [rdi+0xa8],0x7
   14000163d:	mov    QWORD PTR [rdi+0xa0],rbx
   140001644:	mov    WORD PTR [rdi+0x90],bx
   14000164b:	mov    QWORD PTR [rdi+0xc8],0x7
   140001656:	mov    QWORD PTR [rdi+0xc0],rbx
   14000165d:	mov    WORD PTR [rdi+0xb0],bx
   140001664:	mov    QWORD PTR [rdi+0x8],rbx
   140001668:	mov    QWORD PTR [rdi+0x10],rbx
   14000166c:	mov    DWORD PTR [rdi+0x1c],0x1
   140001673:	mov    QWORD PTR [rdi+0x48],rbx
   140001677:	mov    QWORD PTR [rdi+0x50],rbx
   14000167b:	mov    QWORD PTR [rdi+0x58],rbx
   14000167f:	mov    DWORD PTR [rdi],ebx
   140001681:	mov    BYTE PTR [rdi+0x18],bl
   140001684:	mov    BYTE PTR [rdi+0xd0],bl
   14000168a:	mov    QWORD PTR [rdi+0xd8],rbx
   140001691:	mov    QWORD PTR [rdi+0xe0],rbx
   140001698:	lea    rcx,[rdi+0x20]
   14000169c:	call   QWORD PTR [rip+0x25a3e]        # 0x1400270e0
   1400016a2:	test   rsi,rsi
   1400016a5:	je     0x1400016c9
   1400016a7:	cmp    WORD PTR [rsi],bx
   1400016aa:	je     0x1400016ba
   1400016ac:	or     rbx,0xffffffffffffffff
   1400016b0:	inc    rbx
   1400016b3:	cmp    WORD PTR [rsi+rbx*2],0x0
   1400016b8:	jne    0x1400016b0
   1400016ba:	mov    r8,rbx
   1400016bd:	mov    rdx,rsi
   1400016c0:	lea    rcx,[rdi+0x70]
   1400016c4:	call   0x1400025a0
   1400016c9:	call   0x140005c80
   1400016ce:	cmp    eax,0x68
   1400016d1:	jl     0x140001716
   1400016d3:	lea    rcx,[rip+0x2d506]        # 0x14002ebe0
   1400016da:	call   QWORD PTR [rip+0x25ab8]        # 0x140027198
   1400016e0:	mov    rbx,rax
   1400016e3:	test   rax,rax
   1400016e6:	je     0x140001716
   1400016e8:	lea    rdx,[rip+0x2d511]        # 0x14002ec00
   1400016ef:	mov    rcx,rax
   1400016f2:	call   QWORD PTR [rip+0x25978]        # 0x140027070
   1400016f8:	mov    QWORD PTR [rdi+0xd8],rax
   1400016ff:	lea    rdx,[rip+0x2d51a]        # 0x14002ec20
   140001706:	mov    rcx,rbx
   140001709:	call   QWORD PTR [rip+0x25961]        # 0x140027070
   14000170f:	mov    QWORD PTR [rdi+0xe0],rax
   140001716:	mov    rax,rdi
   140001719:	mov    rbx,QWORD PTR [rsp+0x48]
   14000171e:	mov    rsi,QWORD PTR [rsp+0x50]
   140001723:	mov    rdi,QWORD PTR [rsp+0x58]
   140001728:	add    rsp,0x30
   14000172c:	pop    r14
   14000172e:	ret    
   14000172f:	int3   
   140001730:	rex push rbx
   140001732:	sub    rsp,0x20
   140001736:	mov    r8,QWORD PTR [rcx]
   140001739:	lea    rdx,[rsp+0x30]
   14000173e:	mov    rbx,rcx
   140001741:	mov    r9,r8
   140001744:	mov    r8,QWORD PTR [r8]
   140001747:	call   0x140002680
   14000174c:	mov    rcx,QWORD PTR [rbx]
   14000174f:	add    rsp,0x20
   140001753:	pop    rbx
   140001754:	jmp    0x1400137cc
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	mov    QWORD PTR [rsp+0x8],rcx
   140001765:	push   rdi
   140001766:	sub    rsp,0x30
   14000176a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001773:	mov    QWORD PTR [rsp+0x48],rbx
   140001778:	mov    rbx,rcx
   14000177b:	call   0x140001a60
   140001780:	mov    rcx,QWORD PTR [rbx+0x48]
   140001784:	test   rcx,rcx
   140001787:	je     0x14000178f
   140001789:	call   QWORD PTR [rip+0x25911]        # 0x1400270a0
   14000178f:	mov    rcx,QWORD PTR [rbx+0x50]
   140001793:	test   rcx,rcx
   140001796:	je     0x14000179e
   140001798:	call   QWORD PTR [rip+0x25902]        # 0x1400270a0
   14000179e:	mov    rcx,QWORD PTR [rbx+0x10]
   1400017a2:	test   rcx,rcx
   1400017a5:	je     0x1400017ad
   1400017a7:	call   QWORD PTR [rip+0x258f3]        # 0x1400270a0
   1400017ad:	mov    rcx,QWORD PTR [rbx+0x58]
   1400017b1:	test   rcx,rcx
   1400017b4:	je     0x1400017bc
   1400017b6:	call   QWORD PTR [rip+0x258e4]        # 0x1400270a0
   1400017bc:	mov    rcx,QWORD PTR [rbx+0x8]
   1400017c0:	test   rcx,rcx
   1400017c3:	je     0x1400017cb
   1400017c5:	call   QWORD PTR [rip+0x258d5]        # 0x1400270a0
   1400017cb:	lea    rcx,[rbx+0x20]
   1400017cf:	call   QWORD PTR [rip+0x258c3]        # 0x140027098
   1400017d5:	nop
   1400017d6:	cmp    QWORD PTR [rbx+0xc8],0x8
   1400017de:	jb     0x1400017ec
   1400017e0:	mov    rcx,QWORD PTR [rbx+0xb0]
   1400017e7:	call   0x1400137cc
   1400017ec:	mov    QWORD PTR [rbx+0xc8],0x7
   1400017f7:	xor    edi,edi
   1400017f9:	mov    QWORD PTR [rbx+0xc0],rdi
   140001800:	mov    WORD PTR [rbx+0xb0],di
   140001807:	cmp    QWORD PTR [rbx+0xa8],0x8
   14000180f:	jb     0x14000181d
   140001811:	mov    rcx,QWORD PTR [rbx+0x90]
   140001818:	call   0x1400137cc
   14000181d:	mov    QWORD PTR [rbx+0xa8],0x7
   140001828:	mov    QWORD PTR [rbx+0xa0],rdi
   14000182f:	mov    WORD PTR [rbx+0x90],di
   140001836:	cmp    QWORD PTR [rbx+0x88],0x8
   14000183e:	jb     0x140001849
   140001840:	mov    rcx,QWORD PTR [rbx+0x70]
   140001844:	call   0x1400137cc
   140001849:	mov    QWORD PTR [rbx+0x88],0x7
   140001854:	mov    QWORD PTR [rbx+0x80],rdi
   14000185b:	mov    WORD PTR [rbx+0x70],di
   14000185f:	mov    r8,QWORD PTR [rbx+0x60]
   140001863:	mov    r9,r8
   140001866:	mov    r8,QWORD PTR [r8]
   140001869:	lea    rdx,[rsp+0x40]
   14000186e:	lea    rcx,[rbx+0x60]
   140001872:	call   0x140002680
   140001877:	mov    rcx,QWORD PTR [rbx+0x60]
   14000187b:	mov    rbx,QWORD PTR [rsp+0x48]
   140001880:	add    rsp,0x30
   140001884:	pop    rdi
   140001885:	jmp    0x1400137cc
   14000188a:	int3   
   14000188b:	int3   
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	mov    r11,rsp
   140001893:	push   rdi
   140001894:	sub    rsp,0x90
   14000189b:	mov    QWORD PTR [r11-0x40],0xfffffffffffffffe
   1400018a3:	mov    QWORD PTR [r11+0x10],rbx
   1400018a7:	mov    rax,QWORD PTR [rip+0x35762]        # 0x140037010
   1400018ae:	xor    rax,rsp
   1400018b1:	mov    QWORD PTR [rsp+0x80],rax
   1400018b9:	mov    rbx,rcx
   1400018bc:	xor    edi,edi
   1400018be:	mov    DWORD PTR [rsp+0x40],edi
   1400018c2:	xor    eax,eax
   1400018c4:	mov    QWORD PTR [r11-0x50],rax
   1400018c8:	mov    QWORD PTR [r11-0x48],rax
   1400018cc:	call   QWORD PTR [rip+0x257d6]        # 0x1400270a8
   1400018d2:	mov    ecx,DWORD PTR [rbx+0x1c]
   1400018d5:	test   ecx,ecx
   1400018d7:	je     0x140001947
   1400018d9:	dec    ecx
   1400018db:	je     0x1400018e5
   1400018dd:	lea    eax,[rdi+0x8]
   1400018e0:	jmp    0x140001a38
   1400018e5:	lea    rdx,[rbx+0x70]
   1400018e9:	lea    rcx,[rsp+0x60]
   1400018ee:	call   0x140001bb0
   1400018f3:	nop
   1400018f4:	lea    rcx,[rsp+0x60]
   1400018f9:	cmp    QWORD PTR [rsp+0x78],0x8
   1400018ff:	cmovae rcx,QWORD PTR [rsp+0x60]
   140001905:	xor    edx,edx
   140001907:	call   QWORD PTR [rip+0x25863]        # 0x140027170
   14000190d:	nop
   14000190e:	test   eax,eax
   140001910:	jne    0x14000192e
   140001912:	cmp    QWORD PTR [rsp+0x78],0x8
   140001918:	jb     0x140001924
   14000191a:	mov    rcx,QWORD PTR [rsp+0x60]
   14000191f:	call   0x1400137cc
   140001924:	mov    eax,0x4
   140001929:	jmp    0x140001a38
   14000192e:	cmp    QWORD PTR [rsp+0x78],0x8
   140001934:	jb     0x140001940
   140001936:	mov    rcx,QWORD PTR [rsp+0x60]
   14000193b:	call   0x1400137cc
   140001940:	xor    eax,eax
   140001942:	jmp    0x140001a38
   140001947:	mov    BYTE PTR [rbx+0x18],dil
   14000194b:	xor    r9d,r9d
   14000194e:	xor    r8d,r8d
   140001951:	lea    edx,[r9+0x1]
   140001955:	xor    ecx,ecx
   140001957:	call   QWORD PTR [rip+0x256d3]        # 0x140027030
   14000195d:	mov    QWORD PTR [rbx+0x10],rax
   140001961:	test   rax,rax
   140001964:	jne    0x140001970
   140001966:	mov    eax,0x2
   14000196b:	jmp    0x140001a38
   140001970:	lea    rdx,[rbx+0x70]
   140001974:	lea    rcx,[rsp+0x60]
   140001979:	call   0x140001bb0
   14000197e:	nop
   14000197f:	lea    rcx,[rbx+0xb0]
   140001986:	lea    rax,[rsp+0x60]
   14000198b:	cmp    rcx,rax
   14000198e:	je     0x1400019a1
   140001990:	or     r9,0xffffffffffffffff
   140001994:	xor    r8d,r8d
   140001997:	lea    rdx,[rsp+0x60]
   14000199c:	call   0x1400024a0
   1400019a1:	lea    rcx,[rsp+0x60]
   1400019a6:	cmp    QWORD PTR [rsp+0x78],0x8
   1400019ac:	cmovae rcx,QWORD PTR [rsp+0x60]
   1400019b2:	mov    QWORD PTR [rsp+0x38],rdi
   1400019b7:	mov    DWORD PTR [rsp+0x30],0x3e8
   1400019bf:	mov    DWORD PTR [rsp+0x28],edi
   1400019c3:	mov    DWORD PTR [rsp+0x20],edi
   1400019c7:	mov    edx,0x80003
   1400019cc:	mov    r9d,0x1
   1400019d2:	lea    r8d,[r9+0xd]
   1400019d6:	call   QWORD PTR [rip+0x257b4]        # 0x140027190
   1400019dc:	mov    QWORD PTR [rbx+0x48],rax
   1400019e0:	mov    rcx,QWORD PTR [rsp+0x48]
   1400019e5:	test   rcx,rcx
   1400019e8:	je     0x1400019f5
   1400019ea:	call   QWORD PTR [rip+0x256c0]        # 0x1400270b0
   1400019f0:	mov    QWORD PTR [rsp+0x48],rdi
   1400019f5:	cmp    QWORD PTR [rbx+0x48],0xffffffffffffffff
   1400019fa:	jne    0x140001a0e
   1400019fc:	call   QWORD PTR [rip+0x2565e]        # 0x140027060
   140001a02:	cmp    eax,0x5
   140001a05:	sete   dil
   140001a09:	add    edi,0x2
   140001a0c:	jmp    0x140001a24
   140001a0e:	mov    DWORD PTR [rbx],edi
   140001a10:	mov    rcx,QWORD PTR [rbx+0x10]
   140001a14:	call   QWORD PTR [rip+0x25666]        # 0x140027080
   140001a1a:	mov    rcx,rbx
   140001a1d:	call   0x1400012e0
   140001a22:	mov    edi,eax
   140001a24:	cmp    QWORD PTR [rsp+0x78],0x8
   140001a2a:	jb     0x140001a36
   140001a2c:	mov    rcx,QWORD PTR [rsp+0x60]
   140001a31:	call   0x1400137cc
   140001a36:	mov    eax,edi
   140001a38:	mov    rcx,QWORD PTR [rsp+0x80]
   140001a40:	xor    rcx,rsp
   140001a43:	call   0x1400130a0
   140001a48:	mov    rbx,QWORD PTR [rsp+0xa8]
   140001a50:	add    rsp,0x90
   140001a57:	pop    rdi
   140001a58:	ret    
   140001a59:	int3   
   140001a5a:	int3   
   140001a5b:	int3   
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	rex push rbx
   140001a62:	sub    rsp,0x890
   140001a69:	mov    rax,QWORD PTR [rip+0x355a0]        # 0x140037010
   140001a70:	xor    rax,rsp
   140001a73:	mov    QWORD PTR [rsp+0x880],rax
   140001a7b:	cmp    DWORD PTR [rcx+0x1c],0x1
   140001a7f:	mov    rbx,rcx
   140001a82:	je     0x140001b88
   140001a88:	mov    QWORD PTR [rsp+0x8a8],rdi
   140001a90:	xor    edi,edi
   140001a92:	lea    rcx,[rsp+0x70]
   140001a97:	xor    edx,edx
   140001a99:	mov    r8d,0x400
   140001a9f:	mov    DWORD PTR [rsp+0x50],edi
   140001aa3:	mov    QWORD PTR [rsp+0x60],rdi
   140001aa8:	mov    QWORD PTR [rsp+0x68],rdi
   140001aad:	call   0x140014d80
   140001ab2:	lea    rcx,[rsp+0x47c]
   140001aba:	xor    edx,edx
   140001abc:	mov    r8d,0x400
   140001ac2:	mov    QWORD PTR [rsp+0x470],rdi
   140001aca:	mov    DWORD PTR [rsp+0x478],edi
   140001ad1:	call   0x140014d80
   140001ad6:	mov    rcx,QWORD PTR [rbx+0x10]
   140001ada:	call   QWORD PTR [rip+0x256c8]        # 0x1400271a8
   140001ae0:	lea    rcx,[rsp+0x60]
   140001ae5:	xor    edx,edx
   140001ae7:	mov    r8d,0x410
   140001aed:	mov    DWORD PTR [rsp+0x50],edi
   140001af1:	call   0x140014d80
   140001af6:	lea    r9d,[rdi+0x8]
   140001afa:	lea    rcx,[rsp+0x70]
   140001aff:	mov    r8,rbx
   140001b02:	mov    edx,0x400
   140001b07:	mov    DWORD PTR [rsp+0x60],edi
   140001b0b:	mov    DWORD PTR [rsp+0x64],0x1
   140001b13:	mov    DWORD PTR [rsp+0x68],0x1
   140001b1b:	mov    DWORD PTR [rsp+0x6c],0x8
   140001b23:	call   0x1400137d4
   140001b28:	lea    rdx,[rbx+0xb0]
   140001b2f:	cmp    QWORD PTR [rdx+0x18],0x8
   140001b34:	jb     0x140001b39
   140001b36:	mov    rdx,QWORD PTR [rdx]
   140001b39:	lea    rax,[rsp+0x50]
   140001b3e:	mov    DWORD PTR [rsp+0x38],edi
   140001b42:	lea    r8,[rsp+0x60]
   140001b47:	mov    QWORD PTR [rsp+0x30],rax
   140001b4c:	lea    rax,[rsp+0x470]
   140001b54:	mov    QWORD PTR [rsp+0x20],rax
   140001b59:	call   0x140001c50
   140001b5e:	mov    rcx,QWORD PTR [rbx+0x58]
   140001b62:	test   rcx,rcx
   140001b65:	je     0x140001b80
   140001b67:	mov    edx,0x7d0
   140001b6c:	call   QWORD PTR [rip+0x2563e]        # 0x1400271b0
   140001b72:	mov    rcx,QWORD PTR [rbx+0x58]
   140001b76:	call   QWORD PTR [rip+0x25524]        # 0x1400270a0
   140001b7c:	mov    QWORD PTR [rbx+0x58],rdi
   140001b80:	mov    rdi,QWORD PTR [rsp+0x8a8]
   140001b88:	xor    eax,eax
   140001b8a:	mov    rcx,QWORD PTR [rsp+0x880]
   140001b92:	xor    rcx,rsp
   140001b95:	call   0x1400130a0
   140001b9a:	add    rsp,0x890
   140001ba1:	pop    rbx
   140001ba2:	ret    
   140001ba3:	int3   
   140001ba4:	int3   
   140001ba5:	int3   
   140001ba6:	int3   
   140001ba7:	int3   
   140001ba8:	int3   
   140001ba9:	int3   
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	mov    QWORD PTR [rsp+0x8],rcx
   140001bb5:	push   rdi
   140001bb6:	sub    rsp,0x30
   140001bba:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001bc3:	mov    QWORD PTR [rsp+0x48],rbx
   140001bc8:	mov    rbx,rdx
   140001bcb:	mov    rdi,rcx
   140001bce:	xor    eax,eax
   140001bd0:	mov    DWORD PTR [rsp+0x20],eax
   140001bd4:	mov    QWORD PTR [rcx+0x18],0x7
   140001bdc:	mov    QWORD PTR [rcx+0x10],rax
   140001be0:	mov    WORD PTR [rcx],ax
   140001be3:	lea    r8d,[rax+0x12]
   140001be7:	lea    rdx,[rip+0x2d052]        # 0x14002ec40
   140001bee:	call   0x1400025a0
   140001bf3:	mov    DWORD PTR [rsp+0x20],0x1
   140001bfb:	or     r9,0xffffffffffffffff
   140001bff:	xor    r8d,r8d
   140001c02:	mov    rdx,rbx
   140001c05:	mov    rcx,rdi
   140001c08:	call   0x1400023b0
   140001c0d:	mov    rax,rdi
   140001c10:	mov    rbx,QWORD PTR [rsp+0x48]
   140001c15:	add    rsp,0x30
   140001c19:	pop    rdi
   140001c1a:	ret    
   140001c1b:	int3   
   140001c1c:	int3   
   140001c1d:	int3   
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	rex push rbx
   140001c22:	sub    rsp,0x30
   140001c26:	mov    rbx,rdx
   140001c29:	lea    rdx,[rcx+0x70]
   140001c2d:	mov    DWORD PTR [rsp+0x20],0x0
   140001c35:	mov    rcx,rbx
   140001c38:	call   0x140001bb0
   140001c3d:	mov    rax,rbx
   140001c40:	add    rsp,0x30
   140001c44:	pop    rbx
   140001c45:	ret    
   140001c46:	int3   
   140001c47:	int3   
   140001c48:	int3   
   140001c49:	int3   
   140001c4a:	int3   
   140001c4b:	int3   
   140001c4c:	int3   
   140001c4d:	int3   
   140001c4e:	int3   
   140001c4f:	int3   
   140001c50:	mov    QWORD PTR [rsp+0x10],rbx
   140001c55:	mov    QWORD PTR [rsp+0x18],rbp
   140001c5a:	mov    DWORD PTR [rsp+0x20],r9d
   140001c5f:	push   rsi
   140001c60:	sub    rsp,0x40
   140001c64:	xor    ebx,ebx
   140001c66:	mov    rbp,r8
   140001c69:	mov    rsi,rdx
   140001c6c:	test   rdx,rdx
   140001c6f:	je     0x140001d98
   140001c75:	xor    ecx,ecx
   140001c77:	mov    QWORD PTR [rsp+0x50],rdi
   140001c7c:	call   QWORD PTR [rip+0x253e6]        # 0x140027068
   140001c82:	mov    QWORD PTR [rsp+0x30],rbx
   140001c87:	lea    r8d,[rbx+0x3]
   140001c8b:	xor    r9d,r9d
   140001c8e:	mov    edx,0xc0000000
   140001c93:	mov    rcx,rsi
   140001c96:	mov    DWORD PTR [rsp+0x28],0x190000
   140001c9e:	mov    DWORD PTR [rsp+0x20],0x3
   140001ca6:	call   QWORD PTR [rip+0x253a4]        # 0x140027050
   140001cac:	mov    rdi,rax
   140001caf:	cmp    rax,0xffffffffffffffff
   140001cb3:	jne    0x140001d11
   140001cb5:	call   QWORD PTR [rip+0x253a5]        # 0x140027060
   140001cbb:	cmp    eax,0xe7
   140001cc0:	jne    0x140001d81
   140001cc6:	mov    edx,DWORD PTR [rsp+0x88]
   140001ccd:	mov    rcx,rsi
   140001cd0:	call   QWORD PTR [rip+0x2549a]        # 0x140027170
   140001cd6:	test   eax,eax
   140001cd8:	je     0x140001d81
   140001cde:	mov    QWORD PTR [rsp+0x30],rbx
   140001ce3:	lea    r8d,[rbx+0x3]
   140001ce7:	xor    r9d,r9d
   140001cea:	mov    edx,0xc0000000
   140001cef:	mov    rcx,rsi
   140001cf2:	mov    DWORD PTR [rsp+0x28],0x190000
   140001cfa:	mov    DWORD PTR [rsp+0x20],0x3
   140001d02:	call   QWORD PTR [rip+0x25348]        # 0x140027050
   140001d08:	mov    rdi,rax
   140001d0b:	cmp    rax,0xffffffffffffffff
   140001d0f:	je     0x140001d81
   140001d11:	mov    rcx,rdi
   140001d14:	call   QWORD PTR [rip+0x2536e]        # 0x140027088
   140001d1a:	cmp    eax,0x3
   140001d1d:	jne    0x140001d72
   140001d1f:	lea    rdx,[rsp+0x68]
   140001d24:	xor    r9d,r9d
   140001d27:	xor    r8d,r8d
   140001d2a:	mov    rcx,rdi
   140001d2d:	mov    DWORD PTR [rsp+0x68],0x2
   140001d35:	call   QWORD PTR [rip+0x25355]        # 0x140027090
   140001d3b:	test   eax,eax
   140001d3d:	je     0x140001d72
   140001d3f:	mov    rax,QWORD PTR [rsp+0x80]
   140001d47:	mov    r9,QWORD PTR [rsp+0x70]
   140001d4c:	mov    QWORD PTR [rsp+0x30],rbx
   140001d51:	mov    QWORD PTR [rsp+0x28],rax
   140001d56:	mov    r8d,0x410
   140001d5c:	mov    rdx,rbp
   140001d5f:	mov    rcx,rdi
   140001d62:	mov    DWORD PTR [rsp+0x20],0x40c
   140001d6a:	call   QWORD PTR [rip+0x252d0]        # 0x140027040
   140001d70:	mov    ebx,eax
   140001d72:	cmp    rdi,0xffffffffffffffff
   140001d76:	je     0x140001d81
   140001d78:	mov    rcx,rdi
   140001d7b:	call   QWORD PTR [rip+0x2531f]        # 0x1400270a0
   140001d81:	mov    eax,ebx
   140001d83:	mov    rdi,QWORD PTR [rsp+0x50]
   140001d88:	mov    rbx,QWORD PTR [rsp+0x58]
   140001d8d:	mov    rbp,QWORD PTR [rsp+0x60]
   140001d92:	add    rsp,0x40
   140001d96:	pop    rsi
   140001d97:	ret    
   140001d98:	mov    rbp,QWORD PTR [rsp+0x60]
   140001d9d:	mov    eax,ebx
   140001d9f:	mov    rbx,QWORD PTR [rsp+0x58]
   140001da4:	add    rsp,0x40
   140001da8:	pop    rsi
   140001da9:	ret    
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	rex push rbx
   140001db2:	push   rbp
   140001db3:	push   rsi
   140001db4:	push   rdi
   140001db5:	push   r14
   140001db7:	sub    rsp,0x90
   140001dbe:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140001dc7:	mov    rax,QWORD PTR [rip+0x35242]        # 0x140037010
   140001dce:	xor    rax,rsp
   140001dd1:	mov    QWORD PTR [rsp+0x88],rax
   140001dd9:	mov    rbp,r8
   140001ddc:	mov    rsi,rdx
   140001ddf:	mov    rdi,rcx
   140001de2:	lea    rbx,[rcx+0x20]
   140001de6:	mov    QWORD PTR [rsp+0x60],rbx
   140001deb:	mov    rcx,rbx
   140001dee:	call   QWORD PTR [rip+0x25284]        # 0x140027078
   140001df4:	nop
   140001df5:	lea    rdx,[rsp+0x68]
   140001dfa:	mov    rcx,rdi
   140001dfd:	call   0x140001c20
   140001e02:	nop
   140001e03:	xor    r14d,r14d
   140001e06:	cmp    QWORD PTR [rsp+0x78],r14
   140001e0b:	jne    0x140001e16
   140001e0d:	lea    edi,[r14+0x9]
   140001e11:	jmp    0x140001eaf
   140001e16:	cmp    DWORD PTR [rsi+0xc],0x400
   140001e1d:	jbe    0x140001e29
   140001e1f:	mov    edi,0x8
   140001e24:	jmp    0x140001eaf
   140001e29:	cmp    QWORD PTR [rdi+0x8],r14
   140001e2d:	jne    0x140001e58
   140001e2f:	lea    r8,[rdi+0x70]
   140001e33:	cmp    QWORD PTR [r8+0x18],0x8
   140001e38:	jb     0x140001e3d
   140001e3a:	mov    r8,QWORD PTR [r8]
   140001e3d:	mov    edx,0x1
   140001e42:	xor    ecx,ecx
   140001e44:	call   QWORD PTR [rip+0x254ee]        # 0x140027338
   140001e4a:	mov    QWORD PTR [rdi+0x8],rax
   140001e4e:	test   rax,rax
   140001e51:	jne    0x140001e58
   140001e53:	lea    edi,[rax+0x9]
   140001e56:	jmp    0x140001eaf
   140001e58:	mov    DWORD PTR [rsp+0x50],r14d
   140001e5d:	lea    rdx,[rsp+0x68]
   140001e62:	cmp    QWORD PTR [rsp+0x80],0x8
   140001e6b:	cmovae rdx,QWORD PTR [rsp+0x68]
   140001e71:	mov    DWORD PTR [rsp+0x38],0x7530
   140001e79:	lea    rax,[rsp+0x50]
   140001e7e:	mov    QWORD PTR [rsp+0x30],rax
   140001e83:	mov    QWORD PTR [rsp+0x20],rbp
   140001e88:	mov    r8,rsi
   140001e8b:	call   0x140001c50
   140001e90:	test   eax,eax
   140001e92:	jne    0x140001eac
   140001e94:	call   QWORD PTR [rip+0x251c6]        # 0x140027060
   140001e9a:	cmp    eax,0x5b4
   140001e9f:	jne    0x140001e1f
   140001ea5:	mov    edi,0xa
   140001eaa:	jmp    0x140001eaf
   140001eac:	mov    edi,r14d
   140001eaf:	cmp    QWORD PTR [rsp+0x80],0x8
   140001eb8:	jb     0x140001ec4
   140001eba:	mov    rcx,QWORD PTR [rsp+0x68]
   140001ebf:	call   0x1400137cc
   140001ec4:	mov    QWORD PTR [rsp+0x80],0x7
   140001ed0:	mov    QWORD PTR [rsp+0x78],r14
   140001ed5:	mov    WORD PTR [rsp+0x68],r14w
   140001edb:	mov    rcx,rbx
   140001ede:	call   QWORD PTR [rip+0x25154]        # 0x140027038
   140001ee4:	mov    eax,edi
   140001ee6:	mov    rcx,QWORD PTR [rsp+0x88]
   140001eee:	xor    rcx,rsp
   140001ef1:	call   0x1400130a0
   140001ef6:	add    rsp,0x90
   140001efd:	pop    r14
   140001eff:	pop    rdi
   140001f00:	pop    rsi
   140001f01:	pop    rbp
   140001f02:	pop    rbx
   140001f03:	ret    
   140001f04:	int3   
   140001f05:	int3   
   140001f06:	int3   
   140001f07:	int3   
   140001f08:	int3   
   140001f09:	int3   
   140001f0a:	int3   
   140001f0b:	int3   
   140001f0c:	int3   
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	mov    QWORD PTR [rsp+0x18],rbx
   140001f15:	mov    DWORD PTR [rsp+0x10],edx
   140001f19:	push   rdi
   140001f1a:	sub    rsp,0x30
   140001f1e:	mov    rdi,rcx
   140001f21:	add    rcx,0x20
   140001f25:	call   QWORD PTR [rip+0x2514d]        # 0x140027078
   140001f2b:	mov    r8,QWORD PTR [rdi+0x60]
   140001f2f:	mov    ecx,DWORD PTR [rsp+0x48]
   140001f33:	mov    rax,QWORD PTR [r8+0x8]
   140001f37:	mov    rdx,r8
   140001f3a:	cmp    BYTE PTR [rax+0x19],0x0
   140001f3e:	jne    0x140001f57
   140001f40:	cmp    DWORD PTR [rax+0x20],ecx
   140001f43:	jae    0x140001f4b
   140001f45:	mov    rax,QWORD PTR [rax+0x10]
   140001f49:	jmp    0x140001f51
   140001f4b:	mov    rdx,rax
   140001f4e:	mov    rax,QWORD PTR [rax]
   140001f51:	cmp    BYTE PTR [rax+0x19],0x0
   140001f55:	je     0x140001f40
   140001f57:	cmp    rdx,r8
   140001f5a:	je     0x140001f66
   140001f5c:	mov    QWORD PTR [rsp+0x40],rdx
   140001f61:	cmp    ecx,DWORD PTR [rdx+0x20]
   140001f64:	jae    0x140001f6b
   140001f66:	mov    QWORD PTR [rsp+0x40],r8
   140001f6b:	lea    rdx,[rsp+0x40]
   140001f70:	cmp    QWORD PTR [rdx],r8
   140001f73:	je     0x140001fe9
   140001f75:	mov    rax,QWORD PTR [r8+0x8]
   140001f79:	mov    rbx,r8
   140001f7c:	cmp    BYTE PTR [rax+0x19],0x0
   140001f80:	jne    0x140001f99
   140001f82:	cmp    DWORD PTR [rax+0x20],ecx
   140001f85:	jae    0x140001f8d
   140001f87:	mov    rax,QWORD PTR [rax+0x10]
   140001f8b:	jmp    0x140001f93
   140001f8d:	mov    rbx,rax
   140001f90:	mov    rax,QWORD PTR [rax]
   140001f93:	cmp    BYTE PTR [rax+0x19],0x0
   140001f97:	je     0x140001f82
   140001f99:	cmp    rbx,r8
   140001f9c:	je     0x140001fa3
   140001f9e:	cmp    ecx,DWORD PTR [rbx+0x20]
   140001fa1:	jae    0x140001fda
   140001fa3:	lea    rax,[rsp+0x48]
   140001fa8:	lea    r8,[rsp+0x40]
   140001fad:	lea    rcx,[rdi+0x60]
   140001fb1:	mov    QWORD PTR [rsp+0x40],rax
   140001fb6:	call   0x1400031d0
   140001fbb:	lea    rdx,[rsp+0x40]
   140001fc0:	lea    rcx,[rdi+0x60]
   140001fc4:	lea    r9,[rax+0x20]
   140001fc8:	mov    r8,rbx
   140001fcb:	mov    QWORD PTR [rsp+0x20],rax
   140001fd0:	call   0x140003210
   140001fd5:	mov    rbx,QWORD PTR [rsp+0x40]
   140001fda:	mov    rax,QWORD PTR [rbx+0x28]
   140001fde:	mov    rbx,QWORD PTR [rsp+0x50]
   140001fe3:	add    rsp,0x30
   140001fe7:	pop    rdi
   140001fe8:	ret    
   140001fe9:	xor    eax,eax
   140001feb:	mov    rbx,QWORD PTR [rsp+0x50]
   140001ff0:	add    rsp,0x30
   140001ff4:	pop    rdi
   140001ff5:	ret    
   140001ff6:	int3   
   140001ff7:	int3   
   140001ff8:	int3   
   140001ff9:	int3   
   140001ffa:	int3   
   140001ffb:	int3   
   140001ffc:	int3   
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	rex push rbx
   140002002:	sub    rsp,0x20
   140002006:	cmp    QWORD PTR [rcx+0x18],0x10
   14000200b:	mov    rbx,rcx
   14000200e:	jb     0x140002018
   140002010:	mov    rcx,QWORD PTR [rcx]
   140002013:	call   0x1400137cc
   140002018:	mov    QWORD PTR [rbx+0x18],0xf
   140002020:	mov    QWORD PTR [rbx+0x10],0x0
   140002028:	mov    BYTE PTR [rbx],0x0
   14000202b:	add    rsp,0x20
   14000202f:	pop    rbx
   140002030:	ret    
   140002031:	int3   
   140002032:	int3   
   140002033:	int3   
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	rex push rbx
   140002042:	sub    rsp,0x20
   140002046:	cmp    QWORD PTR [rcx+0x18],0x8
   14000204b:	mov    rbx,rcx
   14000204e:	jb     0x140002058
   140002050:	mov    rcx,QWORD PTR [rcx]
   140002053:	call   0x1400137cc
   140002058:	xor    eax,eax
   14000205a:	mov    QWORD PTR [rbx+0x18],0x7
   140002062:	mov    QWORD PTR [rbx+0x10],rax
   140002066:	mov    WORD PTR [rbx],ax
   140002069:	add    rsp,0x20
   14000206d:	pop    rbx
   14000206e:	ret    
   14000206f:	int3   
   140002070:	mov    QWORD PTR [rsp+0x8],rbx
   140002075:	mov    QWORD PTR [rsp+0x10],rbp
   14000207a:	mov    QWORD PTR [rsp+0x18],rsi
   14000207f:	push   rdi
   140002080:	sub    rsp,0x20
   140002084:	mov    rdi,QWORD PTR [rdx+0x10]
   140002088:	mov    rbp,r8
   14000208b:	mov    rsi,rdx
   14000208e:	mov    rbx,rcx
   140002091:	cmp    rdi,r8
   140002094:	jb     0x140002174
   14000209a:	sub    rdi,r8
   14000209d:	cmp    r9,rdi
   1400020a0:	cmovb  rdi,r9
   1400020a4:	cmp    rcx,rdx
   1400020a7:	jne    0x1400020d8
   1400020a9:	lea    rax,[rdi+r8*1]
   1400020ad:	cmp    QWORD PTR [rcx+0x10],rax
   1400020b1:	jb     0x140002181
   1400020b7:	cmp    QWORD PTR [rcx+0x18],0x10
   1400020bc:	mov    QWORD PTR [rcx+0x10],rax
   1400020c0:	jb     0x1400020c5
   1400020c2:	mov    rcx,QWORD PTR [rcx]
   1400020c5:	mov    BYTE PTR [rcx+rax*1],0x0
   1400020c9:	xor    edx,edx
   1400020cb:	mov    rcx,rbx
   1400020ce:	call   0x1400022e0
   1400020d3:	jmp    0x14000215c
   1400020d8:	cmp    rdi,0xfffffffffffffffe
   1400020dc:	ja     0x14000218e
   1400020e2:	mov    rax,QWORD PTR [rcx+0x18]
   1400020e6:	cmp    rax,rdi
   1400020e9:	jae    0x140002112
   1400020eb:	mov    r8,QWORD PTR [rcx+0x10]
   1400020ef:	mov    rdx,rdi
   1400020f2:	call   0x1400027b0
   1400020f7:	test   rdi,rdi
   1400020fa:	je     0x14000215c
   1400020fc:	cmp    QWORD PTR [rsi+0x18],0x10
   140002101:	jb     0x140002106
   140002103:	mov    rsi,QWORD PTR [rsi]
   140002106:	cmp    QWORD PTR [rbx+0x18],0x10
   14000210b:	jb     0x140002131
   14000210d:	mov    rcx,QWORD PTR [rbx]
   140002110:	jmp    0x140002134
   140002112:	test   rdi,rdi
   140002115:	jne    0x1400020fc
   140002117:	mov    QWORD PTR [rcx+0x10],rdi
   14000211b:	cmp    rax,0x10
   14000211f:	jb     0x140002129
   140002121:	mov    rax,QWORD PTR [rcx]
   140002124:	mov    BYTE PTR [rax],dil
   140002127:	jmp    0x14000215c
   140002129:	mov    rax,rcx
   14000212c:	mov    BYTE PTR [rcx],0x0
   14000212f:	jmp    0x14000215c
   140002131:	mov    rcx,rbx
   140002134:	test   rdi,rdi
   140002137:	je     0x140002145
   140002139:	lea    rdx,[rsi+rbp*1]
   14000213d:	mov    r8,rdi
   140002140:	call   0x1400130d0
   140002145:	cmp    QWORD PTR [rbx+0x18],0x10
   14000214a:	mov    QWORD PTR [rbx+0x10],rdi
   14000214e:	jb     0x140002155
   140002150:	mov    rax,QWORD PTR [rbx]
   140002153:	jmp    0x140002158
   140002155:	mov    rax,rbx
   140002158:	mov    BYTE PTR [rax+rdi*1],0x0
   14000215c:	mov    rbp,QWORD PTR [rsp+0x38]
   140002161:	mov    rsi,QWORD PTR [rsp+0x40]
   140002166:	mov    rax,rbx
   140002169:	mov    rbx,QWORD PTR [rsp+0x30]
   14000216e:	add    rsp,0x20
   140002172:	pop    rdi
   140002173:	ret    
   140002174:	lea    rcx,[rip+0x2cb05]        # 0x14002ec80
   14000217b:	call   0x140013044
   140002180:	int3   
   140002181:	lea    rcx,[rip+0x2caf8]        # 0x14002ec80
   140002188:	call   0x140013044
   14000218d:	int3   
   14000218e:	lea    rcx,[rip+0x2cadb]        # 0x14002ec70
   140002195:	call   0x14001300c
   14000219a:	int3   
   14000219b:	int3   
   14000219c:	int3   
   14000219d:	int3   
   14000219e:	int3   
   14000219f:	int3   
   1400021a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400021a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400021aa:	push   rdi
   1400021ab:	sub    rsp,0x20
   1400021af:	mov    rdi,r8
   1400021b2:	mov    rsi,rdx
   1400021b5:	mov    rbx,rcx
   1400021b8:	test   rdx,rdx
   1400021bb:	je     0x140002217
   1400021bd:	mov    rdx,QWORD PTR [rcx+0x18]
   1400021c1:	cmp    rdx,0x10
   1400021c5:	jb     0x1400021cc
   1400021c7:	mov    rax,QWORD PTR [rcx]
   1400021ca:	jmp    0x1400021cf
   1400021cc:	mov    rax,rcx
   1400021cf:	cmp    rsi,rax
   1400021d2:	jb     0x140002217
   1400021d4:	cmp    rdx,0x10
   1400021d8:	jb     0x1400021dd
   1400021da:	mov    rcx,QWORD PTR [rcx]
   1400021dd:	add    rcx,QWORD PTR [rbx+0x10]
   1400021e1:	cmp    rcx,rsi
   1400021e4:	jbe    0x140002217
   1400021e6:	cmp    rdx,0x10
   1400021ea:	jb     0x1400021f1
   1400021ec:	mov    rax,QWORD PTR [rbx]
   1400021ef:	jmp    0x1400021f4
   1400021f1:	mov    rax,rbx
   1400021f4:	sub    rsi,rax
   1400021f7:	mov    r9,r8
   1400021fa:	mov    rdx,rbx
   1400021fd:	mov    r8,rsi
   140002200:	mov    rcx,rbx
   140002203:	mov    rbx,QWORD PTR [rsp+0x30]
   140002208:	mov    rsi,QWORD PTR [rsp+0x38]
   14000220d:	add    rsp,0x20
   140002211:	pop    rdi
   140002212:	jmp    0x140002070
   140002217:	cmp    r8,0xfffffffffffffffe
   14000221b:	ja     0x1400022c5
   140002221:	mov    rax,QWORD PTR [rbx+0x18]
   140002225:	cmp    rax,r8
   140002228:	jae    0x14000224a
   14000222a:	mov    r8,QWORD PTR [rbx+0x10]
   14000222e:	mov    rdx,rdi
   140002231:	mov    rcx,rbx
   140002234:	call   0x1400027b0
   140002239:	test   rdi,rdi
   14000223c:	je     0x1400022b2
   14000223e:	cmp    QWORD PTR [rbx+0x18],0x10
   140002243:	jb     0x140002288
   140002245:	mov    rcx,QWORD PTR [rbx]
   140002248:	jmp    0x14000228b
   14000224a:	test   r8,r8
   14000224d:	jne    0x140002239
   14000224f:	mov    QWORD PTR [rbx+0x10],r8
   140002253:	cmp    rax,0x10
   140002257:	jb     0x140002272
   140002259:	mov    rax,QWORD PTR [rbx]
   14000225c:	mov    BYTE PTR [rax],r8b
   14000225f:	mov    rax,rbx
   140002262:	mov    rbx,QWORD PTR [rsp+0x30]
   140002267:	mov    rsi,QWORD PTR [rsp+0x38]
   14000226c:	add    rsp,0x20
   140002270:	pop    rdi
   140002271:	ret    
   140002272:	mov    rax,rbx
   140002275:	mov    BYTE PTR [rbx],0x0
   140002278:	mov    rbx,QWORD PTR [rsp+0x30]
   14000227d:	mov    rsi,QWORD PTR [rsp+0x38]
   140002282:	add    rsp,0x20
   140002286:	pop    rdi
   140002287:	ret    
   140002288:	mov    rcx,rbx
   14000228b:	test   rdi,rdi
   14000228e:	je     0x14000229b
   140002290:	mov    r8,rdi
   140002293:	mov    rdx,rsi
   140002296:	call   0x1400130d0
   14000229b:	cmp    QWORD PTR [rbx+0x18],0x10
   1400022a0:	mov    QWORD PTR [rbx+0x10],rdi
   1400022a4:	jb     0x1400022ab
   1400022a6:	mov    rax,QWORD PTR [rbx]
   1400022a9:	jmp    0x1400022ae
   1400022ab:	mov    rax,rbx
   1400022ae:	mov    BYTE PTR [rax+rdi*1],0x0
   1400022b2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400022b7:	mov    rax,rbx
   1400022ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400022bf:	add    rsp,0x20
   1400022c3:	pop    rdi
   1400022c4:	ret    
   1400022c5:	lea    rcx,[rip+0x2c9a4]        # 0x14002ec70
   1400022cc:	call   0x14001300c
   1400022d1:	int3   
   1400022d2:	int3   
   1400022d3:	int3   
   1400022d4:	int3   
   1400022d5:	int3   
   1400022d6:	int3   
   1400022d7:	int3   
   1400022d8:	int3   
   1400022d9:	int3   
   1400022da:	int3   
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400022e5:	push   rdi
   1400022e6:	sub    rsp,0x20
   1400022ea:	mov    rdi,QWORD PTR [rcx+0x10]
   1400022ee:	mov    rbx,rcx
   1400022f1:	cmp    rdi,rdx
   1400022f4:	jb     0x14000239e
   1400022fa:	mov    rax,rdi
   1400022fd:	sub    rax,rdx
   140002300:	cmp    rax,r8
   140002303:	ja     0x14000233a
   140002305:	cmp    QWORD PTR [rcx+0x18],0x10
   14000230a:	mov    QWORD PTR [rcx+0x10],rdx
   14000230e:	jb     0x140002325
   140002310:	mov    rax,QWORD PTR [rcx]
   140002313:	mov    BYTE PTR [rax+rdx*1],0x0
   140002317:	mov    rax,rcx
   14000231a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000231f:	add    rsp,0x20
   140002323:	pop    rdi
   140002324:	ret    
   140002325:	mov    rax,rcx
   140002328:	mov    BYTE PTR [rcx+rdx*1],0x0
   14000232c:	mov    rax,rbx
   14000232f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002334:	add    rsp,0x20
   140002338:	pop    rdi
   140002339:	ret    
   14000233a:	test   r8,r8
   14000233d:	je     0x140002390
   14000233f:	cmp    QWORD PTR [rcx+0x18],0x10
   140002344:	jb     0x14000234b
   140002346:	mov    rax,QWORD PTR [rcx]
   140002349:	jmp    0x14000234e
   14000234b:	mov    rax,rcx
   14000234e:	sub    rdi,r8
   140002351:	lea    rcx,[rax+rdx*1]
   140002355:	mov    rax,rdi
   140002358:	sub    rax,rdx
   14000235b:	je     0x140002369
   14000235d:	lea    rdx,[rcx+r8*1]
   140002361:	mov    r8,rax
   140002364:	call   0x1400130d0
   140002369:	cmp    QWORD PTR [rbx+0x18],0x10
   14000236e:	mov    QWORD PTR [rbx+0x10],rdi
   140002372:	jb     0x140002389
   140002374:	mov    rax,QWORD PTR [rbx]
   140002377:	mov    BYTE PTR [rax+rdi*1],0x0
   14000237b:	mov    rax,rbx
   14000237e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002383:	add    rsp,0x20
   140002387:	pop    rdi
   140002388:	ret    
   140002389:	mov    rax,rbx
   14000238c:	mov    BYTE PTR [rbx+rdi*1],0x0
   140002390:	mov    rax,rbx
   140002393:	mov    rbx,QWORD PTR [rsp+0x30]
   140002398:	add    rsp,0x20
   14000239c:	pop    rdi
   14000239d:	ret    
   14000239e:	lea    rcx,[rip+0x2c8db]        # 0x14002ec80
   1400023a5:	call   0x140013044
   1400023aa:	int3   
   1400023ab:	int3   
   1400023ac:	int3   
   1400023ad:	int3   
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400023b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400023ba:	mov    QWORD PTR [rsp+0x20],rdi
   1400023bf:	push   r14
   1400023c1:	sub    rsp,0x20
   1400023c5:	mov    rax,QWORD PTR [rdx+0x10]
   1400023c9:	mov    rdi,r9
   1400023cc:	mov    r14,r8
   1400023cf:	mov    rsi,rdx
   1400023d2:	mov    rbx,rcx
   1400023d5:	cmp    rax,r8
   1400023d8:	jb     0x140002483
   1400023de:	mov    rcx,QWORD PTR [rcx+0x10]
   1400023e2:	sub    rax,r8
   1400023e5:	cmp    rax,r9
   1400023e8:	cmovb  rdi,rax
   1400023ec:	or     rax,0xffffffffffffffff
   1400023f0:	sub    rax,rcx
   1400023f3:	cmp    rax,rdi
   1400023f6:	jbe    0x140002490
   1400023fc:	test   rdi,rdi
   1400023ff:	je     0x14000246a
   140002401:	mov    QWORD PTR [rsp+0x30],rbp
   140002406:	lea    rbp,[rcx+rdi*1]
   14000240a:	mov    rcx,rbx
   14000240d:	mov    rdx,rbp
   140002410:	call   0x140002950
   140002415:	test   al,al
   140002417:	je     0x140002465
   140002419:	cmp    QWORD PTR [rsi+0x18],0x8
   14000241e:	jb     0x140002423
   140002420:	mov    rsi,QWORD PTR [rsi]
   140002423:	cmp    QWORD PTR [rbx+0x18],0x8
   140002428:	jb     0x14000242f
   14000242a:	mov    rcx,QWORD PTR [rbx]
   14000242d:	jmp    0x140002432
   14000242f:	mov    rcx,rbx
   140002432:	test   rdi,rdi
   140002435:	je     0x14000244c
   140002437:	mov    rax,QWORD PTR [rbx+0x10]
   14000243b:	lea    r8,[rdi+rdi*1]
   14000243f:	lea    rdx,[rsi+r14*2]
   140002443:	lea    rcx,[rcx+rax*2]
   140002447:	call   0x1400130d0
   14000244c:	cmp    QWORD PTR [rbx+0x18],0x8
   140002451:	mov    QWORD PTR [rbx+0x10],rbp
   140002455:	jb     0x14000245c
   140002457:	mov    rax,QWORD PTR [rbx]
   14000245a:	jmp    0x14000245f
   14000245c:	mov    rax,rbx
   14000245f:	xor    ecx,ecx
   140002461:	mov    WORD PTR [rax+rbp*2],cx
   140002465:	mov    rbp,QWORD PTR [rsp+0x30]
   14000246a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000246f:	mov    rdi,QWORD PTR [rsp+0x48]
   140002474:	mov    rax,rbx
   140002477:	mov    rbx,QWORD PTR [rsp+0x38]
   14000247c:	add    rsp,0x20
   140002480:	pop    r14
   140002482:	ret    
   140002483:	lea    rcx,[rip+0x2c7f6]        # 0x14002ec80
   14000248a:	call   0x140013044
   14000248f:	int3   
   140002490:	lea    rcx,[rip+0x2c7d9]        # 0x14002ec70
   140002497:	call   0x14001300c
   14000249c:	int3   
   14000249d:	int3   
   14000249e:	int3   
   14000249f:	int3   
   1400024a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400024aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400024af:	push   rdi
   1400024b0:	sub    rsp,0x20
   1400024b4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400024b8:	mov    rbp,r8
   1400024bb:	mov    rsi,rdx
   1400024be:	mov    rbx,rcx
   1400024c1:	cmp    rdi,r8
   1400024c4:	jb     0x140002580
   1400024ca:	sub    rdi,r8
   1400024cd:	cmp    r9,rdi
   1400024d0:	cmovb  rdi,r9
   1400024d4:	cmp    rcx,rdx
   1400024d7:	jne    0x140002518
   1400024d9:	lea    rax,[rdi+r8*1]
   1400024dd:	cmp    QWORD PTR [rcx+0x10],rax
   1400024e1:	jb     0x14000258d
   1400024e7:	cmp    QWORD PTR [rcx+0x18],0x8
   1400024ec:	mov    QWORD PTR [rcx+0x10],rax
   1400024f0:	jb     0x140002505
   1400024f2:	mov    rdx,QWORD PTR [rcx]
   1400024f5:	xor    ecx,ecx
   1400024f7:	mov    WORD PTR [rdx+rax*2],cx
   1400024fb:	mov    rcx,rbx
   1400024fe:	call   0x1400028c0
   140002503:	jmp    0x140002568
   140002505:	mov    rdx,rcx
   140002508:	xor    ecx,ecx
   14000250a:	mov    WORD PTR [rdx+rax*2],cx
   14000250e:	mov    rcx,rbx
   140002511:	call   0x1400028c0
   140002516:	jmp    0x140002568
   140002518:	mov    rdx,rdi
   14000251b:	call   0x140002950
   140002520:	test   al,al
   140002522:	je     0x140002568
   140002524:	cmp    QWORD PTR [rsi+0x18],0x8
   140002529:	jb     0x14000252e
   14000252b:	mov    rsi,QWORD PTR [rsi]
   14000252e:	cmp    QWORD PTR [rbx+0x18],0x8
   140002533:	jb     0x14000253a
   140002535:	mov    rcx,QWORD PTR [rbx]
   140002538:	jmp    0x14000253d
   14000253a:	mov    rcx,rbx
   14000253d:	test   rdi,rdi
   140002540:	je     0x14000254f
   140002542:	lea    r8,[rdi+rdi*1]
   140002546:	lea    rdx,[rsi+rbp*2]
   14000254a:	call   0x1400130d0
   14000254f:	cmp    QWORD PTR [rbx+0x18],0x8
   140002554:	mov    QWORD PTR [rbx+0x10],rdi
   140002558:	jb     0x14000255f
   14000255a:	mov    rax,QWORD PTR [rbx]
   14000255d:	jmp    0x140002562
   14000255f:	mov    rax,rbx
   140002562:	xor    ecx,ecx
   140002564:	mov    WORD PTR [rax+rdi*2],cx
   140002568:	mov    rbp,QWORD PTR [rsp+0x38]
   14000256d:	mov    rsi,QWORD PTR [rsp+0x40]
   140002572:	mov    rax,rbx
   140002575:	mov    rbx,QWORD PTR [rsp+0x30]
   14000257a:	add    rsp,0x20
   14000257e:	pop    rdi
   14000257f:	ret    
   140002580:	lea    rcx,[rip+0x2c6f9]        # 0x14002ec80
   140002587:	call   0x140013044
   14000258c:	int3   
   14000258d:	lea    rcx,[rip+0x2c6ec]        # 0x14002ec80
   140002594:	call   0x140013044
   140002599:	int3   
   14000259a:	int3   
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400025a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400025aa:	push   rdi
   1400025ab:	sub    rsp,0x20
   1400025af:	mov    rsi,r8
   1400025b2:	mov    rdi,rdx
   1400025b5:	mov    rbx,rcx
   1400025b8:	test   rdx,rdx
   1400025bb:	je     0x14000261e
   1400025bd:	mov    rdx,QWORD PTR [rcx+0x18]
   1400025c1:	cmp    rdx,0x8
   1400025c5:	jb     0x1400025cc
   1400025c7:	mov    rax,QWORD PTR [rcx]
   1400025ca:	jmp    0x1400025cf
   1400025cc:	mov    rax,rcx
   1400025cf:	cmp    rdi,rax
   1400025d2:	jb     0x14000261e
   1400025d4:	cmp    rdx,0x8
   1400025d8:	jb     0x1400025dd
   1400025da:	mov    rcx,QWORD PTR [rcx]
   1400025dd:	mov    rax,QWORD PTR [rbx+0x10]
   1400025e1:	lea    rcx,[rcx+rax*2]
   1400025e5:	cmp    rcx,rdi
   1400025e8:	jbe    0x14000261e
   1400025ea:	cmp    rdx,0x8
   1400025ee:	jb     0x1400025f5
   1400025f0:	mov    rax,QWORD PTR [rbx]
   1400025f3:	jmp    0x1400025f8
   1400025f5:	mov    rax,rbx
   1400025f8:	sub    rdi,rax
   1400025fb:	mov    r9,r8
   1400025fe:	mov    rdx,rbx
   140002601:	sar    rdi,1
   140002604:	mov    rcx,rbx
   140002607:	mov    r8,rdi
   14000260a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000260f:	mov    rsi,QWORD PTR [rsp+0x38]
   140002614:	add    rsp,0x20
   140002618:	pop    rdi
   140002619:	jmp    0x1400024a0
   14000261e:	mov    rdx,r8
   140002621:	mov    rcx,rbx
   140002624:	call   0x140002950
   140002629:	test   al,al
   14000262b:	je     0x140002666
   14000262d:	cmp    QWORD PTR [rbx+0x18],0x8
   140002632:	jb     0x140002639
   140002634:	mov    rcx,QWORD PTR [rbx]
   140002637:	jmp    0x14000263c
   140002639:	mov    rcx,rbx
   14000263c:	test   rsi,rsi
   14000263f:	je     0x14000264d
   140002641:	lea    r8,[rsi+rsi*1]
   140002645:	mov    rdx,rdi
   140002648:	call   0x1400130d0
   14000264d:	cmp    QWORD PTR [rbx+0x18],0x8
   140002652:	mov    QWORD PTR [rbx+0x10],rsi
   140002656:	jb     0x14000265d
   140002658:	mov    rax,QWORD PTR [rbx]
   14000265b:	jmp    0x140002660
   14000265d:	mov    rax,rbx
   140002660:	xor    ecx,ecx
   140002662:	mov    WORD PTR [rax+rsi*2],cx
   140002666:	mov    rsi,QWORD PTR [rsp+0x38]
   14000266b:	mov    rax,rbx
   14000266e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002673:	add    rsp,0x20
   140002677:	pop    rdi
   140002678:	ret    
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	mov    QWORD PTR [rsp+0x20],r9
   140002685:	mov    QWORD PTR [rsp+0x18],r8
   14000268a:	push   rsi
   14000268b:	push   rdi
   14000268c:	push   r14
   14000268e:	sub    rsp,0x20
   140002692:	mov    rdi,QWORD PTR [rcx]
   140002695:	mov    r14,rdx
   140002698:	mov    rsi,rcx
   14000269b:	cmp    r8,QWORD PTR [rdi]
   14000269e:	jne    0x140002716
   1400026a0:	cmp    r9,rdi
   1400026a3:	jne    0x140002716
   1400026a5:	mov    rdi,QWORD PTR [rdi+0x8]
   1400026a9:	mov    QWORD PTR [rsp+0x48],rbx
   1400026ae:	cmp    BYTE PTR [rdi+0x19],0x0
   1400026b2:	mov    rbx,rdi
   1400026b5:	jne    0x1400026e0
   1400026b7:	nop    WORD PTR [rax+rax*1+0x0]
   1400026c0:	mov    rdx,QWORD PTR [rbx+0x10]
   1400026c4:	mov    rcx,rsi
   1400026c7:	call   0x140002f40
   1400026cc:	mov    rbx,QWORD PTR [rbx]
   1400026cf:	mov    rcx,rdi
   1400026d2:	call   0x1400137cc
   1400026d7:	cmp    BYTE PTR [rbx+0x19],0x0
   1400026db:	mov    rdi,rbx
   1400026de:	je     0x1400026c0
   1400026e0:	mov    rax,QWORD PTR [rsi]
   1400026e3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400026e8:	mov    QWORD PTR [rax+0x8],rax
   1400026ec:	mov    rax,QWORD PTR [rsi]
   1400026ef:	mov    QWORD PTR [rax],rax
   1400026f2:	mov    rax,QWORD PTR [rsi]
   1400026f5:	mov    QWORD PTR [rax+0x10],rax
   1400026f9:	mov    rax,QWORD PTR [rsi]
   1400026fc:	mov    QWORD PTR [rsi+0x8],0x0
   140002704:	mov    rcx,QWORD PTR [rax]
   140002707:	mov    rax,r14
   14000270a:	mov    QWORD PTR [r14],rcx
   14000270d:	add    rsp,0x20
   140002711:	pop    r14
   140002713:	pop    rdi
   140002714:	pop    rsi
   140002715:	ret    
   140002716:	cmp    r8,r9
   140002719:	je     0x140002799
   14000271b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002720:	cmp    BYTE PTR [r8+0x19],0x0
   140002725:	mov    rax,r8
   140002728:	jne    0x14000277d
   14000272a:	mov    rdx,QWORD PTR [r8+0x10]
   14000272e:	cmp    BYTE PTR [rdx+0x19],0x0
   140002732:	jne    0x140002753
   140002734:	mov    rcx,QWORD PTR [rdx]
   140002737:	cmp    BYTE PTR [rcx+0x19],0x0
   14000273b:	jne    0x14000274c
   14000273d:	nop    DWORD PTR [rax]
   140002740:	mov    rdx,rcx
   140002743:	mov    rcx,QWORD PTR [rcx]
   140002746:	cmp    BYTE PTR [rcx+0x19],0x0
   14000274a:	je     0x140002740
   14000274c:	mov    QWORD PTR [rsp+0x50],rdx
   140002751:	jmp    0x14000277d
   140002753:	mov    rcx,QWORD PTR [r8+0x8]
   140002757:	cmp    BYTE PTR [rcx+0x19],0x0
   14000275b:	jne    0x140002778
   14000275d:	nop    DWORD PTR [rax]
   140002760:	cmp    r8,QWORD PTR [rcx+0x10]
   140002764:	jne    0x140002778
   140002766:	mov    QWORD PTR [rsp+0x50],rcx
   14000276b:	mov    r8,rcx
   14000276e:	mov    rcx,QWORD PTR [rcx+0x8]
   140002772:	cmp    BYTE PTR [rcx+0x19],0x0
   140002776:	je     0x140002760
   140002778:	mov    QWORD PTR [rsp+0x50],rcx
   14000277d:	lea    rdx,[rsp+0x40]
   140002782:	mov    r8,rax
   140002785:	mov    rcx,rsi
   140002788:	call   0x1400029d0
   14000278d:	mov    r8,QWORD PTR [rsp+0x50]
   140002792:	cmp    r8,QWORD PTR [rsp+0x58]
   140002797:	jne    0x140002720
   140002799:	mov    QWORD PTR [r14],r8
   14000279c:	mov    rax,r14
   14000279f:	add    rsp,0x20
   1400027a3:	pop    r14
   1400027a5:	pop    rdi
   1400027a6:	pop    rsi
   1400027a7:	ret    
   1400027a8:	int3   
   1400027a9:	int3   
   1400027aa:	int3   
   1400027ab:	int3   
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	mov    QWORD PTR [rsp+0x18],r8
   1400027b5:	mov    QWORD PTR [rsp+0x10],rdx
   1400027ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400027bf:	push   rbx
   1400027c0:	push   rsi
   1400027c1:	push   rdi
   1400027c2:	push   r14
   1400027c4:	sub    rsp,0x38
   1400027c8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400027d1:	mov    rsi,r8
   1400027d4:	mov    rbx,rcx
   1400027d7:	mov    rdi,rdx
   1400027da:	or     rdi,0xf
   1400027de:	cmp    rdi,0xfffffffffffffffe
   1400027e2:	jbe    0x1400027e9
   1400027e4:	mov    rdi,rdx
   1400027e7:	jmp    0x14000281e
   1400027e9:	mov    r8,QWORD PTR [rcx+0x18]
   1400027ed:	mov    rcx,r8
   1400027f0:	shr    rcx,1
   1400027f3:	movabs rax,0xaaaaaaaaaaaaaaab
   1400027fd:	mul    rdi
   140002800:	shr    rdx,1
   140002803:	cmp    rcx,rdx
   140002806:	jbe    0x14000281e
   140002808:	mov    rdi,0xfffffffffffffffe
   14000280f:	mov    rax,rdi
   140002812:	sub    rax,rcx
   140002815:	cmp    r8,rax
   140002818:	ja     0x14000281e
   14000281a:	lea    rdi,[rcx+r8*1]
   14000281e:	lea    rcx,[rdi+0x1]
   140002822:	xor    r14d,r14d
   140002825:	test   rcx,rcx
   140002828:	je     0x140002843
   14000282a:	cmp    rcx,0xffffffffffffffff
   14000282e:	ja     0x14000283d
   140002830:	call   0x1400138b8
   140002835:	mov    r14,rax
   140002838:	test   rax,rax
   14000283b:	jne    0x140002843
   14000283d:	call   0x140012fc8
   140002842:	nop
   140002843:	jmp    0x140002859
   140002845:	mov    rbx,QWORD PTR [rsp+0x60]
   14000284a:	mov    rsi,QWORD PTR [rsp+0x70]
   14000284f:	mov    rdi,QWORD PTR [rsp+0x68]
   140002854:	mov    r14,QWORD PTR [rsp+0x78]
   140002859:	test   rsi,rsi
   14000285c:	je     0x14000287d
   14000285e:	cmp    QWORD PTR [rbx+0x18],0x10
   140002863:	jb     0x14000286a
   140002865:	mov    rdx,QWORD PTR [rbx]
   140002868:	jmp    0x14000286d
   14000286a:	mov    rdx,rbx
   14000286d:	test   rsi,rsi
   140002870:	je     0x14000287d
   140002872:	mov    r8,rsi
   140002875:	mov    rcx,r14
   140002878:	call   0x1400130d0
   14000287d:	cmp    QWORD PTR [rbx+0x18],0x10
   140002882:	jb     0x14000288c
   140002884:	mov    rcx,QWORD PTR [rbx]
   140002887:	call   0x1400137cc
   14000288c:	mov    BYTE PTR [rbx],0x0
   14000288f:	mov    QWORD PTR [rbx],r14
   140002892:	mov    QWORD PTR [rbx+0x18],rdi
   140002896:	mov    QWORD PTR [rbx+0x10],rsi
   14000289a:	cmp    rdi,0x10
   14000289e:	jb     0x1400028a3
   1400028a0:	mov    rbx,r14
   1400028a3:	mov    BYTE PTR [rbx+rsi*1],0x0
   1400028a7:	add    rsp,0x38
   1400028ab:	pop    r14
   1400028ad:	pop    rdi
   1400028ae:	pop    rsi
   1400028af:	pop    rbx
   1400028b0:	ret    
   1400028b1:	int3   
   1400028b2:	int3   
   1400028b3:	int3   
   1400028b4:	int3   
   1400028b5:	int3   
   1400028b6:	int3   
   1400028b7:	int3   
   1400028b8:	int3   
   1400028b9:	int3   
   1400028ba:	int3   
   1400028bb:	int3   
   1400028bc:	int3   
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028c5:	push   rdi
   1400028c6:	sub    rsp,0x20
   1400028ca:	mov    rdi,QWORD PTR [rcx+0x10]
   1400028ce:	mov    rax,r8
   1400028d1:	mov    rbx,rcx
   1400028d4:	cmp    rdi,r8
   1400028d7:	ja     0x1400028fa
   1400028d9:	xor    eax,eax
   1400028db:	cmp    QWORD PTR [rcx+0x18],0x8
   1400028e0:	mov    QWORD PTR [rcx+0x10],rax
   1400028e4:	jb     0x1400028e9
   1400028e6:	mov    rcx,QWORD PTR [rcx]
   1400028e9:	mov    WORD PTR [rcx],ax
   1400028ec:	mov    rax,rbx
   1400028ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028f4:	add    rsp,0x20
   1400028f8:	pop    rdi
   1400028f9:	ret    
   1400028fa:	test   rax,rax
   1400028fd:	je     0x140002934
   1400028ff:	cmp    QWORD PTR [rcx+0x18],0x8
   140002904:	jb     0x140002909
   140002906:	mov    rcx,QWORD PTR [rcx]
   140002909:	sub    rdi,rax
   14000290c:	je     0x14000291b
   14000290e:	lea    r8,[rdi+rdi*1]
   140002912:	lea    rdx,[rcx+rax*2]
   140002916:	call   0x1400130d0
   14000291b:	cmp    QWORD PTR [rbx+0x18],0x8
   140002920:	mov    QWORD PTR [rbx+0x10],rdi
   140002924:	jb     0x14000292b
   140002926:	mov    rcx,QWORD PTR [rbx]
   140002929:	jmp    0x14000292e
   14000292b:	mov    rcx,rbx
   14000292e:	xor    eax,eax
   140002930:	mov    WORD PTR [rcx+rdi*2],ax
   140002934:	mov    rax,rbx
   140002937:	mov    rbx,QWORD PTR [rsp+0x30]
   14000293c:	add    rsp,0x20
   140002940:	pop    rdi
   140002941:	ret    
   140002942:	int3   
   140002943:	int3   
   140002944:	int3   
   140002945:	int3   
   140002946:	int3   
   140002947:	int3   
   140002948:	int3   
   140002949:	int3   
   14000294a:	int3   
   14000294b:	int3   
   14000294c:	int3   
   14000294d:	int3   
   14000294e:	int3   
   14000294f:	int3   
   140002950:	rex push rdi
   140002952:	sub    rsp,0x20
   140002956:	movabs rax,0x7ffffffffffffffe
   140002960:	mov    rdi,rdx
   140002963:	cmp    rdx,rax
   140002966:	ja     0x1400029b8
   140002968:	mov    rax,QWORD PTR [rcx+0x18]
   14000296c:	mov    QWORD PTR [rsp+0x30],rbx
   140002971:	xor    ebx,ebx
   140002973:	cmp    rax,rdx
   140002976:	jae    0x140002992
   140002978:	mov    r8,QWORD PTR [rcx+0x10]
   14000297c:	call   0x140002e20
   140002981:	mov    rbx,QWORD PTR [rsp+0x30]
   140002986:	test   rdi,rdi
   140002989:	setne  al
   14000298c:	add    rsp,0x20
   140002990:	pop    rdi
   140002991:	ret    
   140002992:	test   rdx,rdx
   140002995:	jne    0x1400029a7
   140002997:	mov    QWORD PTR [rcx+0x10],rbx
   14000299b:	cmp    rax,0x8
   14000299f:	jb     0x1400029a4
   1400029a1:	mov    rcx,QWORD PTR [rcx]
   1400029a4:	mov    WORD PTR [rcx],bx
   1400029a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029ac:	test   rdi,rdi
   1400029af:	setne  al
   1400029b2:	add    rsp,0x20
   1400029b6:	pop    rdi
   1400029b7:	ret    
   1400029b8:	lea    rcx,[rip+0x2c2b1]        # 0x14002ec70
   1400029bf:	call   0x14001300c
   1400029c4:	int3   
   1400029c5:	int3   
   1400029c6:	int3   
   1400029c7:	int3   
   1400029c8:	int3   
   1400029c9:	int3   
   1400029ca:	int3   
   1400029cb:	int3   
   1400029cc:	int3   
   1400029cd:	int3   
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	mov    QWORD PTR [rsp+0x18],r8
   1400029d5:	push   rsi
   1400029d6:	push   r15
   1400029d8:	sub    rsp,0x28
   1400029dc:	cmp    BYTE PTR [r8+0x19],0x0
   1400029e1:	mov    QWORD PTR [rsp+0x20],r14
   1400029e6:	mov    r15,rdx
   1400029e9:	mov    r14,r8
   1400029ec:	mov    rsi,rcx
   1400029ef:	jne    0x140002a50
   1400029f1:	mov    rax,QWORD PTR [r8+0x10]
   1400029f5:	cmp    BYTE PTR [rax+0x19],0x0
   1400029f9:	jne    0x140002a23
   1400029fb:	mov    r8,rax
   1400029fe:	mov    rax,QWORD PTR [rax]
   140002a01:	cmp    BYTE PTR [rax+0x19],0x0
   140002a05:	jne    0x140002a1c
   140002a07:	nop    WORD PTR [rax+rax*1+0x0]
   140002a10:	mov    r8,rax
   140002a13:	mov    rax,QWORD PTR [rax]
   140002a16:	cmp    BYTE PTR [rax+0x19],0x0
   140002a1a:	je     0x140002a10
   140002a1c:	mov    QWORD PTR [rsp+0x50],r8
   140002a21:	jmp    0x140002a50
   140002a23:	mov    rax,QWORD PTR [r8+0x8]
   140002a27:	cmp    BYTE PTR [rax+0x19],0x0
   140002a2b:	jne    0x140002a48
   140002a2d:	nop    DWORD PTR [rax]
   140002a30:	cmp    r8,QWORD PTR [rax+0x10]
   140002a34:	jne    0x140002a48
   140002a36:	mov    QWORD PTR [rsp+0x50],rax
   140002a3b:	mov    r8,rax
   140002a3e:	mov    rax,QWORD PTR [rax+0x8]
   140002a42:	cmp    BYTE PTR [rax+0x19],0x0
   140002a46:	je     0x140002a30
   140002a48:	mov    r8,rax
   140002a4b:	mov    QWORD PTR [rsp+0x50],rax
   140002a50:	mov    rcx,QWORD PTR [r14]
   140002a53:	mov    QWORD PTR [rsp+0x40],rbx
   140002a58:	mov    QWORD PTR [rsp+0x48],rdi
   140002a5d:	cmp    BYTE PTR [rcx+0x19],0x0
   140002a61:	je     0x140002a69
   140002a63:	mov    rdi,QWORD PTR [r14+0x10]
   140002a67:	jmp    0x140002a85
   140002a69:	mov    rax,QWORD PTR [r14+0x10]
   140002a6d:	cmp    BYTE PTR [rax+0x19],0x0
   140002a71:	je     0x140002a78
   140002a73:	mov    rdi,rcx
   140002a76:	jmp    0x140002a85
   140002a78:	mov    rdi,QWORD PTR [r8+0x10]
   140002a7c:	cmp    r8,r14
   140002a7f:	jne    0x140002b23
   140002a85:	cmp    BYTE PTR [rdi+0x19],0x0
   140002a89:	mov    rbx,QWORD PTR [r14+0x8]
   140002a8d:	jne    0x140002a93
   140002a8f:	mov    QWORD PTR [rdi+0x8],rbx
   140002a93:	mov    rax,QWORD PTR [rsi]
   140002a96:	cmp    QWORD PTR [rax+0x8],r14
   140002a9a:	jne    0x140002aa2
   140002a9c:	mov    QWORD PTR [rax+0x8],rdi
   140002aa0:	jmp    0x140002ab0
   140002aa2:	cmp    QWORD PTR [rbx],r14
   140002aa5:	jne    0x140002aac
   140002aa7:	mov    QWORD PTR [rbx],rdi
   140002aaa:	jmp    0x140002ab0
   140002aac:	mov    QWORD PTR [rbx+0x10],rdi
   140002ab0:	mov    rdx,QWORD PTR [rsi]
   140002ab3:	cmp    QWORD PTR [rdx],r14
   140002ab6:	jne    0x140002adf
   140002ab8:	cmp    BYTE PTR [rdi+0x19],0x0
   140002abc:	je     0x140002ac3
   140002abe:	mov    rcx,rbx
   140002ac1:	jmp    0x140002adc
   140002ac3:	mov    rax,QWORD PTR [rdi]
   140002ac6:	mov    rcx,rdi
   140002ac9:	cmp    BYTE PTR [rax+0x19],0x0
   140002acd:	jne    0x140002adc
   140002acf:	nop
   140002ad0:	mov    rcx,rax
   140002ad3:	mov    rax,QWORD PTR [rax]
   140002ad6:	cmp    BYTE PTR [rax+0x19],0x0
   140002ada:	je     0x140002ad0
   140002adc:	mov    QWORD PTR [rdx],rcx
   140002adf:	mov    rdx,QWORD PTR [rsi]
   140002ae2:	cmp    QWORD PTR [rdx+0x10],r14
   140002ae6:	jne    0x140002b94
   140002aec:	cmp    BYTE PTR [rdi+0x19],0x0
   140002af0:	je     0x140002afe
   140002af2:	mov    rcx,rbx
   140002af5:	mov    QWORD PTR [rdx+0x10],rbx
   140002af9:	jmp    0x140002b94
   140002afe:	mov    rax,QWORD PTR [rdi+0x10]
   140002b02:	mov    rcx,rdi
   140002b05:	cmp    BYTE PTR [rax+0x19],0x0
   140002b09:	jne    0x140002b1d
   140002b0b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002b10:	mov    rcx,rax
   140002b13:	mov    rax,QWORD PTR [rax+0x10]
   140002b17:	cmp    BYTE PTR [rax+0x19],0x0
   140002b1b:	je     0x140002b10
   140002b1d:	mov    QWORD PTR [rdx+0x10],rcx
   140002b21:	jmp    0x140002b94
   140002b23:	mov    QWORD PTR [rcx+0x8],r8
   140002b27:	mov    rax,QWORD PTR [r14]
   140002b2a:	mov    QWORD PTR [r8],rax
   140002b2d:	cmp    r8,QWORD PTR [r14+0x10]
   140002b31:	jne    0x140002b38
   140002b33:	mov    rbx,r8
   140002b36:	jmp    0x140002b59
   140002b38:	cmp    BYTE PTR [rdi+0x19],0x0
   140002b3c:	mov    rbx,QWORD PTR [r8+0x8]
   140002b40:	jne    0x140002b46
   140002b42:	mov    QWORD PTR [rdi+0x8],rbx
   140002b46:	mov    QWORD PTR [rbx],rdi
   140002b49:	mov    rax,QWORD PTR [r14+0x10]
   140002b4d:	mov    QWORD PTR [r8+0x10],rax
   140002b51:	mov    rax,QWORD PTR [r14+0x10]
   140002b55:	mov    QWORD PTR [rax+0x8],r8
   140002b59:	mov    rax,QWORD PTR [rsi]
   140002b5c:	cmp    QWORD PTR [rax+0x8],r14
   140002b60:	jne    0x140002b68
   140002b62:	mov    QWORD PTR [rax+0x8],r8
   140002b66:	jmp    0x140002b7a
   140002b68:	mov    rax,QWORD PTR [r14+0x8]
   140002b6c:	cmp    QWORD PTR [rax],r14
   140002b6f:	jne    0x140002b76
   140002b71:	mov    QWORD PTR [rax],r8
   140002b74:	jmp    0x140002b7a
   140002b76:	mov    QWORD PTR [rax+0x10],r8
   140002b7a:	mov    rax,QWORD PTR [r14+0x8]
   140002b7e:	mov    QWORD PTR [r8+0x8],rax
   140002b82:	movzx  eax,BYTE PTR [r14+0x18]
   140002b87:	movzx  ecx,BYTE PTR [r8+0x18]
   140002b8c:	mov    BYTE PTR [r8+0x18],al
   140002b90:	mov    BYTE PTR [r14+0x18],cl
   140002b94:	cmp    BYTE PTR [r14+0x18],0x1
   140002b99:	jne    0x140002de6
   140002b9f:	mov    rax,QWORD PTR [rsi]
   140002ba2:	cmp    rdi,QWORD PTR [rax+0x8]
   140002ba6:	je     0x140002de2
   140002bac:	nop    DWORD PTR [rax+0x0]
   140002bb0:	cmp    BYTE PTR [rdi+0x18],0x1
   140002bb4:	jne    0x140002de2
   140002bba:	mov    rcx,QWORD PTR [rbx]
   140002bbd:	cmp    rdi,rcx
   140002bc0:	jne    0x140002cb5
   140002bc6:	mov    rcx,QWORD PTR [rbx+0x10]
   140002bca:	cmp    BYTE PTR [rcx+0x18],0x0
   140002bce:	jne    0x140002c24
   140002bd0:	mov    BYTE PTR [rcx+0x18],0x1
   140002bd4:	mov    rcx,QWORD PTR [rbx+0x10]
   140002bd8:	mov    BYTE PTR [rbx+0x18],0x0
   140002bdc:	mov    rax,QWORD PTR [rcx]
   140002bdf:	mov    QWORD PTR [rbx+0x10],rax
   140002be3:	mov    rax,QWORD PTR [rcx]
   140002be6:	cmp    BYTE PTR [rax+0x19],0x0
   140002bea:	jne    0x140002bf0
   140002bec:	mov    QWORD PTR [rax+0x8],rbx
   140002bf0:	mov    rax,QWORD PTR [rbx+0x8]
   140002bf4:	mov    QWORD PTR [rcx+0x8],rax
   140002bf8:	mov    rax,QWORD PTR [rsi]
   140002bfb:	cmp    rbx,QWORD PTR [rax+0x8]
   140002bff:	jne    0x140002c07
   140002c01:	mov    QWORD PTR [rax+0x8],rcx
   140002c05:	jmp    0x140002c19
   140002c07:	mov    rax,QWORD PTR [rbx+0x8]
   140002c0b:	cmp    rbx,QWORD PTR [rax]
   140002c0e:	jne    0x140002c15
   140002c10:	mov    QWORD PTR [rax],rcx
   140002c13:	jmp    0x140002c19
   140002c15:	mov    QWORD PTR [rax+0x10],rcx
   140002c19:	mov    QWORD PTR [rcx],rbx
   140002c1c:	mov    QWORD PTR [rbx+0x8],rcx
   140002c20:	mov    rcx,QWORD PTR [rbx+0x10]
   140002c24:	cmp    BYTE PTR [rcx+0x19],0x0
   140002c28:	jne    0x140002d2d
   140002c2e:	mov    rax,QWORD PTR [rcx]
   140002c31:	cmp    BYTE PTR [rax+0x18],0x1
   140002c35:	jne    0x140002c45
   140002c37:	mov    rax,QWORD PTR [rcx+0x10]
   140002c3b:	cmp    BYTE PTR [rax+0x18],0x1
   140002c3f:	je     0x140002d29
   140002c45:	mov    rax,QWORD PTR [rcx+0x10]
   140002c49:	cmp    BYTE PTR [rax+0x18],0x1
   140002c4d:	jne    0x140002c69
   140002c4f:	mov    rax,QWORD PTR [rcx]
   140002c52:	mov    rdx,rcx
   140002c55:	mov    BYTE PTR [rax+0x18],0x1
   140002c59:	mov    BYTE PTR [rcx+0x18],0x0
   140002c5d:	mov    rcx,rsi
   140002c60:	call   0x140002ff0
   140002c65:	mov    rcx,QWORD PTR [rbx+0x10]
   140002c69:	movzx  eax,BYTE PTR [rbx+0x18]
   140002c6d:	mov    BYTE PTR [rcx+0x18],al
   140002c70:	mov    BYTE PTR [rbx+0x18],0x1
   140002c74:	mov    rax,QWORD PTR [rcx+0x10]
   140002c78:	mov    BYTE PTR [rax+0x18],0x1
   140002c7c:	mov    rcx,QWORD PTR [rbx+0x10]
   140002c80:	mov    rax,QWORD PTR [rcx]
   140002c83:	mov    QWORD PTR [rbx+0x10],rax
   140002c87:	mov    rax,QWORD PTR [rcx]
   140002c8a:	cmp    BYTE PTR [rax+0x19],0x0
   140002c8e:	jne    0x140002c94
   140002c90:	mov    QWORD PTR [rax+0x8],rbx
   140002c94:	mov    rax,QWORD PTR [rbx+0x8]
   140002c98:	mov    QWORD PTR [rcx+0x8],rax
   140002c9c:	mov    rax,QWORD PTR [rsi]
   140002c9f:	cmp    rbx,QWORD PTR [rax+0x8]
   140002ca3:	jne    0x140002d46
   140002ca9:	mov    QWORD PTR [rax+0x8],rcx
   140002cad:	mov    QWORD PTR [rcx],rbx
   140002cb0:	jmp    0x140002dde
   140002cb5:	cmp    BYTE PTR [rcx+0x18],0x0
   140002cb9:	jne    0x140002d10
   140002cbb:	mov    BYTE PTR [rcx+0x18],0x1
   140002cbf:	mov    rcx,QWORD PTR [rbx]
   140002cc2:	mov    BYTE PTR [rbx+0x18],0x0
   140002cc6:	mov    rax,QWORD PTR [rcx+0x10]
   140002cca:	mov    QWORD PTR [rbx],rax
   140002ccd:	mov    rax,QWORD PTR [rcx+0x10]
   140002cd1:	cmp    BYTE PTR [rax+0x19],0x0
   140002cd5:	jne    0x140002cdb
   140002cd7:	mov    QWORD PTR [rax+0x8],rbx
   140002cdb:	mov    rax,QWORD PTR [rbx+0x8]
   140002cdf:	mov    QWORD PTR [rcx+0x8],rax
   140002ce3:	mov    rax,QWORD PTR [rsi]
   140002ce6:	cmp    rbx,QWORD PTR [rax+0x8]
   140002cea:	jne    0x140002cf2
   140002cec:	mov    QWORD PTR [rax+0x8],rcx
   140002cf0:	jmp    0x140002d05
   140002cf2:	mov    rax,QWORD PTR [rbx+0x8]
   140002cf6:	cmp    rbx,QWORD PTR [rax+0x10]
   140002cfa:	jne    0x140002d02
   140002cfc:	mov    QWORD PTR [rax+0x10],rcx
   140002d00:	jmp    0x140002d05
   140002d02:	mov    QWORD PTR [rax],rcx
   140002d05:	mov    QWORD PTR [rcx+0x10],rbx
   140002d09:	mov    QWORD PTR [rbx+0x8],rcx
   140002d0d:	mov    rcx,QWORD PTR [rbx]
   140002d10:	cmp    BYTE PTR [rcx+0x19],0x0
   140002d14:	jne    0x140002d2d
   140002d16:	mov    rax,QWORD PTR [rcx+0x10]
   140002d1a:	cmp    BYTE PTR [rax+0x18],0x1
   140002d1e:	jne    0x140002d63
   140002d20:	mov    rax,QWORD PTR [rcx]
   140002d23:	cmp    BYTE PTR [rax+0x18],0x1
   140002d27:	jne    0x140002d63
   140002d29:	mov    BYTE PTR [rcx+0x18],0x0
   140002d2d:	mov    rax,QWORD PTR [rsi]
   140002d30:	mov    rdi,rbx
   140002d33:	mov    rbx,QWORD PTR [rbx+0x8]
   140002d37:	cmp    rdi,QWORD PTR [rax+0x8]
   140002d3b:	jne    0x140002bb0
   140002d41:	jmp    0x140002de2
   140002d46:	mov    rax,QWORD PTR [rbx+0x8]
   140002d4a:	cmp    rbx,QWORD PTR [rax]
   140002d4d:	jne    0x140002d5a
   140002d4f:	mov    QWORD PTR [rax],rcx
   140002d52:	mov    QWORD PTR [rcx],rbx
   140002d55:	jmp    0x140002dde
   140002d5a:	mov    QWORD PTR [rax+0x10],rcx
   140002d5e:	mov    QWORD PTR [rcx],rbx
   140002d61:	jmp    0x140002dde
   140002d63:	mov    rax,QWORD PTR [rcx]
   140002d66:	cmp    BYTE PTR [rax+0x18],0x1
   140002d6a:	jne    0x140002d86
   140002d6c:	mov    rax,QWORD PTR [rcx+0x10]
   140002d70:	mov    rdx,rcx
   140002d73:	mov    BYTE PTR [rax+0x18],0x1
   140002d77:	mov    BYTE PTR [rcx+0x18],0x0
   140002d7b:	mov    rcx,rsi
   140002d7e:	call   0x140002f90
   140002d83:	mov    rcx,QWORD PTR [rbx]
   140002d86:	movzx  eax,BYTE PTR [rbx+0x18]
   140002d8a:	mov    BYTE PTR [rcx+0x18],al
   140002d8d:	mov    BYTE PTR [rbx+0x18],0x1
   140002d91:	mov    rax,QWORD PTR [rcx]
   140002d94:	mov    BYTE PTR [rax+0x18],0x1
   140002d98:	mov    rcx,QWORD PTR [rbx]
   140002d9b:	mov    rax,QWORD PTR [rcx+0x10]
   140002d9f:	mov    QWORD PTR [rbx],rax
   140002da2:	mov    rax,QWORD PTR [rcx+0x10]
   140002da6:	cmp    BYTE PTR [rax+0x19],0x0
   140002daa:	jne    0x140002db0
   140002dac:	mov    QWORD PTR [rax+0x8],rbx
   140002db0:	mov    rax,QWORD PTR [rbx+0x8]
   140002db4:	mov    QWORD PTR [rcx+0x8],rax
   140002db8:	mov    rax,QWORD PTR [rsi]
   140002dbb:	cmp    rbx,QWORD PTR [rax+0x8]
   140002dbf:	jne    0x140002dc7
   140002dc1:	mov    QWORD PTR [rax+0x8],rcx
   140002dc5:	jmp    0x140002dda
   140002dc7:	mov    rax,QWORD PTR [rbx+0x8]
   140002dcb:	cmp    rbx,QWORD PTR [rax+0x10]
   140002dcf:	jne    0x140002dd7
   140002dd1:	mov    QWORD PTR [rax+0x10],rcx
   140002dd5:	jmp    0x140002dda
   140002dd7:	mov    QWORD PTR [rax],rcx
   140002dda:	mov    QWORD PTR [rcx+0x10],rbx
   140002dde:	mov    QWORD PTR [rbx+0x8],rcx
   140002de2:	mov    BYTE PTR [rdi+0x18],0x1
   140002de6:	mov    rcx,r14
   140002de9:	call   0x1400137cc
   140002dee:	mov    rax,QWORD PTR [rsi+0x8]
   140002df2:	mov    r14,QWORD PTR [rsp+0x20]
   140002df7:	mov    rdi,QWORD PTR [rsp+0x48]
   140002dfc:	mov    rbx,QWORD PTR [rsp+0x40]
   140002e01:	test   rax,rax
   140002e04:	je     0x140002e0d
   140002e06:	dec    rax
   140002e09:	mov    QWORD PTR [rsi+0x8],rax
   140002e0d:	mov    rax,QWORD PTR [rsp+0x50]
   140002e12:	mov    QWORD PTR [r15],rax
   140002e15:	mov    rax,r15
   140002e18:	add    rsp,0x28
   140002e1c:	pop    r15
   140002e1e:	pop    rsi
   140002e1f:	ret    
   140002e20:	mov    QWORD PTR [rsp+0x18],r8
   140002e25:	mov    QWORD PTR [rsp+0x10],rdx
   140002e2a:	mov    QWORD PTR [rsp+0x8],rcx
   140002e2f:	push   rbx
   140002e30:	push   rsi
   140002e31:	push   rdi
   140002e32:	push   r14
   140002e34:	push   r15
   140002e36:	sub    rsp,0x30
   140002e3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002e43:	mov    rsi,r8
   140002e46:	mov    rbx,rcx
   140002e49:	mov    rdi,rdx
   140002e4c:	or     rdi,0x7
   140002e50:	movabs r9,0x7ffffffffffffffe
   140002e5a:	cmp    rdi,r9
   140002e5d:	jbe    0x140002e64
   140002e5f:	mov    rdi,rdx
   140002e62:	jmp    0x140002e95
   140002e64:	mov    r8,QWORD PTR [rcx+0x18]
   140002e68:	mov    rcx,r8
   140002e6b:	shr    rcx,1
   140002e6e:	movabs rax,0xaaaaaaaaaaaaaaab
   140002e78:	mul    rdi
   140002e7b:	shr    rdx,1
   140002e7e:	cmp    rcx,rdx
   140002e81:	jbe    0x140002e95
   140002e83:	mov    rax,r9
   140002e86:	sub    rax,rcx
   140002e89:	cmp    r8,rax
   140002e8c:	lea    rdi,[rcx+r8*1]
   140002e90:	jbe    0x140002e95
   140002e92:	mov    rdi,r9
   140002e95:	lea    rcx,[rdi+0x1]
   140002e99:	xor    r15d,r15d
   140002e9c:	mov    r14d,r15d
   140002e9f:	test   rcx,rcx
   140002ea2:	je     0x140002ec9
   140002ea4:	movabs rax,0x7fffffffffffffff
   140002eae:	cmp    rcx,rax
   140002eb1:	ja     0x140002ec3
   140002eb3:	add    rcx,rcx
   140002eb6:	call   0x1400138b8
   140002ebb:	mov    r14,rax
   140002ebe:	test   rax,rax
   140002ec1:	jne    0x140002ec9
   140002ec3:	call   0x140012fc8
   140002ec8:	nop
   140002ec9:	jmp    0x140002ee2
   140002ecb:	xor    r15d,r15d
   140002ece:	mov    rbx,QWORD PTR [rsp+0x60]
   140002ed3:	mov    rsi,QWORD PTR [rsp+0x70]
   140002ed8:	mov    rdi,QWORD PTR [rsp+0x68]
   140002edd:	mov    r14,QWORD PTR [rsp+0x78]
   140002ee2:	test   rsi,rsi
   140002ee5:	je     0x140002f07
   140002ee7:	cmp    QWORD PTR [rbx+0x18],0x8
   140002eec:	jb     0x140002ef3
   140002eee:	mov    rdx,QWORD PTR [rbx]
   140002ef1:	jmp    0x140002ef6
   140002ef3:	mov    rdx,rbx
   140002ef6:	test   rsi,rsi
   140002ef9:	je     0x140002f07
   140002efb:	lea    r8,[rsi+rsi*1]
   140002eff:	mov    rcx,r14
   140002f02:	call   0x1400130d0
   140002f07:	cmp    QWORD PTR [rbx+0x18],0x8
   140002f0c:	jb     0x140002f16
   140002f0e:	mov    rcx,QWORD PTR [rbx]
   140002f11:	call   0x1400137cc
   140002f16:	mov    QWORD PTR [rbx],r14
   140002f19:	mov    QWORD PTR [rbx+0x18],rdi
   140002f1d:	mov    QWORD PTR [rbx+0x10],rsi
   140002f21:	cmp    rdi,0x8
   140002f25:	jb     0x140002f2a
   140002f27:	mov    rbx,r14
   140002f2a:	mov    WORD PTR [rbx+rsi*2],r15w
   140002f2f:	add    rsp,0x30
   140002f33:	pop    r15
   140002f35:	pop    r14
   140002f37:	pop    rdi
   140002f38:	pop    rsi
   140002f39:	pop    rbx
   140002f3a:	ret    
   140002f3b:	int3   
   140002f3c:	int3   
   140002f3d:	int3   
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	mov    QWORD PTR [rsp+0x8],rbx
   140002f45:	mov    QWORD PTR [rsp+0x10],rsi
   140002f4a:	push   rdi
   140002f4b:	sub    rsp,0x20
   140002f4f:	cmp    BYTE PTR [rdx+0x19],0x0
   140002f53:	mov    rdi,rdx
   140002f56:	mov    rsi,rcx
   140002f59:	mov    rbx,rdx
   140002f5c:	jne    0x140002f80
   140002f5e:	xchg   ax,ax
   140002f60:	mov    rdx,QWORD PTR [rbx+0x10]
   140002f64:	mov    rcx,rsi
   140002f67:	call   0x140002f40
   140002f6c:	mov    rbx,QWORD PTR [rbx]
   140002f6f:	mov    rcx,rdi
   140002f72:	call   0x1400137cc
   140002f77:	cmp    BYTE PTR [rbx+0x19],0x0
   140002f7b:	mov    rdi,rbx
   140002f7e:	je     0x140002f60
   140002f80:	mov    rbx,QWORD PTR [rsp+0x30]
   140002f85:	mov    rsi,QWORD PTR [rsp+0x38]
   140002f8a:	add    rsp,0x20
   140002f8e:	pop    rdi
   140002f8f:	ret    
   140002f90:	mov    r8,QWORD PTR [rdx+0x10]
   140002f94:	mov    rax,QWORD PTR [r8]
   140002f97:	mov    QWORD PTR [rdx+0x10],rax
   140002f9b:	mov    rax,QWORD PTR [r8]
   140002f9e:	cmp    BYTE PTR [rax+0x19],0x0
   140002fa2:	jne    0x140002fa8
   140002fa4:	mov    QWORD PTR [rax+0x8],rdx
   140002fa8:	mov    rax,QWORD PTR [rdx+0x8]
   140002fac:	mov    QWORD PTR [r8+0x8],rax
   140002fb0:	mov    rax,QWORD PTR [rcx]
   140002fb3:	cmp    rdx,QWORD PTR [rax+0x8]
   140002fb7:	jne    0x140002fc5
   140002fb9:	mov    QWORD PTR [rax+0x8],r8
   140002fbd:	mov    QWORD PTR [r8],rdx
   140002fc0:	mov    QWORD PTR [rdx+0x8],r8
   140002fc4:	ret    
   140002fc5:	mov    rax,QWORD PTR [rdx+0x8]
   140002fc9:	cmp    rdx,QWORD PTR [rax]
   140002fcc:	jne    0x140002fd9
   140002fce:	mov    QWORD PTR [rax],r8
   140002fd1:	mov    QWORD PTR [r8],rdx
   140002fd4:	mov    QWORD PTR [rdx+0x8],r8
   140002fd8:	ret    
   140002fd9:	mov    QWORD PTR [rax+0x10],r8
   140002fdd:	mov    QWORD PTR [r8],rdx
   140002fe0:	mov    QWORD PTR [rdx+0x8],r8
   140002fe4:	ret    
   140002fe5:	int3   
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	mov    r8,QWORD PTR [rdx]
   140002ff3:	mov    rax,QWORD PTR [r8+0x10]
   140002ff7:	mov    QWORD PTR [rdx],rax
   140002ffa:	mov    rax,QWORD PTR [r8+0x10]
   140002ffe:	cmp    BYTE PTR [rax+0x19],0x0
   140003002:	jne    0x140003008
   140003004:	mov    QWORD PTR [rax+0x8],rdx
   140003008:	mov    rax,QWORD PTR [rdx+0x8]
   14000300c:	mov    QWORD PTR [r8+0x8],rax
   140003010:	mov    rax,QWORD PTR [rcx]
   140003013:	cmp    rdx,QWORD PTR [rax+0x8]
   140003017:	jne    0x140003026
   140003019:	mov    QWORD PTR [rax+0x8],r8
   14000301d:	mov    QWORD PTR [r8+0x10],rdx
   140003021:	mov    QWORD PTR [rdx+0x8],r8
   140003025:	ret    
   140003026:	mov    rax,QWORD PTR [rdx+0x8]
   14000302a:	cmp    rdx,QWORD PTR [rax+0x10]
   14000302e:	jne    0x14000303d
   140003030:	mov    QWORD PTR [rax+0x10],r8
   140003034:	mov    QWORD PTR [r8+0x10],rdx
   140003038:	mov    QWORD PTR [rdx+0x8],r8
   14000303c:	ret    
   14000303d:	mov    QWORD PTR [rax],r8
   140003040:	mov    QWORD PTR [r8+0x10],rdx
   140003044:	mov    QWORD PTR [rdx+0x8],r8
   140003048:	ret    
   140003049:	int3   
   14000304a:	int3   
   14000304b:	int3   
   14000304c:	int3   
   14000304d:	int3   
   14000304e:	int3   
   14000304f:	int3   
   140003050:	sub    rsp,0x28
   140003054:	mov    ecx,0x30
   140003059:	call   0x1400138b8
   14000305e:	test   rax,rax
   140003061:	je     0x140003089
   140003063:	lea    rcx,[rax+0x8]
   140003067:	mov    QWORD PTR [rax],rax
   14000306a:	test   rcx,rcx
   14000306d:	je     0x140003072
   14000306f:	mov    QWORD PTR [rcx],rax
   140003072:	lea    rcx,[rax+0x10]
   140003076:	test   rcx,rcx
   140003079:	je     0x14000307e
   14000307b:	mov    QWORD PTR [rcx],rax
   14000307e:	mov    WORD PTR [rax+0x18],0x101
   140003084:	add    rsp,0x28
   140003088:	ret    
   140003089:	call   0x140012fc8
   14000308e:	int3   
   14000308f:	int3   
   140003090:	rex push rdi
   140003092:	sub    rsp,0x40
   140003096:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000309f:	mov    QWORD PTR [rsp+0x58],rbx
   1400030a4:	mov    r11,r9
   1400030a7:	mov    rdi,rdx
   1400030aa:	mov    r10,QWORD PTR [rcx]
   1400030ad:	mov    rax,QWORD PTR [r10+0x8]
   1400030b1:	mov    r9,r10
   1400030b4:	mov    r8b,0x1
   1400030b7:	cmp    BYTE PTR [rax+0x19],0x0
   1400030bb:	jne    0x1400030de
   1400030bd:	mov    edx,DWORD PTR [r11]
   1400030c0:	mov    r9,rax
   1400030c3:	cmp    edx,DWORD PTR [rax+0x20]
   1400030c6:	setb   r8b
   1400030ca:	test   r8b,r8b
   1400030cd:	je     0x1400030d4
   1400030cf:	mov    rax,QWORD PTR [rax]
   1400030d2:	jmp    0x1400030d8
   1400030d4:	mov    rax,QWORD PTR [rax+0x10]
   1400030d8:	cmp    BYTE PTR [rax+0x19],0x0
   1400030dc:	je     0x1400030c0
   1400030de:	mov    rbx,r9
   1400030e1:	test   r8b,r8b
   1400030e4:	je     0x14000317a
   1400030ea:	cmp    r9,QWORD PTR [r10]
   1400030ed:	jne    0x140003118
   1400030ef:	mov    rax,QWORD PTR [rsp+0x70]
   1400030f4:	mov    QWORD PTR [rsp+0x28],rax
   1400030f9:	mov    r8b,0x1
   1400030fc:	lea    rdx,[rsp+0x50]
   140003101:	call   0x1400034b0
   140003106:	mov    rax,QWORD PTR [rax]
   140003109:	mov    QWORD PTR [rdi],rax
   14000310c:	mov    BYTE PTR [rdi+0x8],0x1
   140003110:	mov    rax,rdi
   140003113:	jmp    0x1400031b9
   140003118:	cmp    BYTE PTR [r9+0x19],0x0
   14000311d:	je     0x140003125
   14000311f:	mov    rbx,QWORD PTR [r9+0x10]
   140003123:	jmp    0x14000317a
   140003125:	mov    rax,QWORD PTR [r9]
   140003128:	cmp    BYTE PTR [rax+0x19],0x0
   14000312c:	jne    0x14000314f
   14000312e:	mov    rbx,rax
   140003131:	mov    rax,QWORD PTR [rax+0x10]
   140003135:	cmp    BYTE PTR [rax+0x19],0x0
   140003139:	jne    0x14000317a
   14000313b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003140:	mov    rbx,rax
   140003143:	mov    rax,QWORD PTR [rax+0x10]
   140003147:	cmp    BYTE PTR [rax+0x19],0x0
   14000314b:	je     0x140003140
   14000314d:	jmp    0x14000317a
   14000314f:	mov    rax,QWORD PTR [r9+0x8]
   140003153:	cmp    BYTE PTR [rax+0x19],0x0
   140003157:	jne    0x140003172
   140003159:	nop    DWORD PTR [rax+0x0]
   140003160:	cmp    rbx,QWORD PTR [rax]
   140003163:	jne    0x140003172
   140003165:	mov    rbx,rax
   140003168:	mov    rax,QWORD PTR [rax+0x8]
   14000316c:	cmp    BYTE PTR [rax+0x19],0x0
   140003170:	je     0x140003160
   140003172:	cmp    BYTE PTR [rbx+0x19],0x0
   140003176:	cmove  rbx,rax
   14000317a:	mov    eax,DWORD PTR [r11]
   14000317d:	cmp    DWORD PTR [rbx+0x20],eax
   140003180:	jae    0x1400031a5
   140003182:	mov    rax,QWORD PTR [rsp+0x70]
   140003187:	mov    QWORD PTR [rsp+0x28],rax
   14000318c:	lea    rdx,[rsp+0x50]
   140003191:	call   0x1400034b0
   140003196:	mov    rax,QWORD PTR [rax]
   140003199:	mov    QWORD PTR [rdi],rax
   14000319c:	mov    BYTE PTR [rdi+0x8],0x1
   1400031a0:	mov    rax,rdi
   1400031a3:	jmp    0x1400031b9
   1400031a5:	mov    rcx,QWORD PTR [rsp+0x70]
   1400031aa:	call   0x1400137cc
   1400031af:	mov    QWORD PTR [rdi],rbx
   1400031b2:	mov    BYTE PTR [rdi+0x8],0x0
   1400031b6:	mov    rax,rdi
   1400031b9:	mov    rbx,QWORD PTR [rsp+0x58]
   1400031be:	add    rsp,0x40
   1400031c2:	pop    rdi
   1400031c3:	ret    
   1400031c4:	int3   
   1400031c5:	int3   
   1400031c6:	int3   
   1400031c7:	int3   
   1400031c8:	int3   
   1400031c9:	int3   
   1400031ca:	int3   
   1400031cb:	int3   
   1400031cc:	int3   
   1400031cd:	int3   
   1400031ce:	int3   
   1400031cf:	int3   
   1400031d0:	rex push rbx
   1400031d2:	sub    rsp,0x20
   1400031d6:	mov    rbx,r8
   1400031d9:	call   0x140003460
   1400031de:	lea    r9,[rax+0x20]
   1400031e2:	mov    WORD PTR [rax+0x18],0x0
   1400031e8:	test   r9,r9
   1400031eb:	je     0x1400031fd
   1400031ed:	mov    rcx,QWORD PTR [rbx]
   1400031f0:	mov    edx,DWORD PTR [rcx]
   1400031f2:	mov    QWORD PTR [r9+0x8],0x0
   1400031fa:	mov    DWORD PTR [r9],edx
   1400031fd:	add    rsp,0x20
   140003201:	pop    rbx
   140003202:	ret    
   140003203:	int3   
   140003204:	int3   
   140003205:	int3   
   140003206:	int3   
   140003207:	int3   
   140003208:	int3   
   140003209:	int3   
   14000320a:	int3   
   14000320b:	int3   
   14000320c:	int3   
   14000320d:	int3   
   14000320e:	int3   
   14000320f:	int3   
   140003210:	rex push rdi
   140003212:	sub    rsp,0x50
   140003216:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000321f:	mov    QWORD PTR [rsp+0x60],rbx
   140003224:	mov    QWORD PTR [rsp+0x68],rsi
   140003229:	mov    rsi,r9
   14000322c:	mov    rbx,rdx
   14000322f:	mov    r10,rcx
   140003232:	cmp    QWORD PTR [rcx+0x8],0x0
   140003237:	jne    0x140003259
   140003239:	mov    rax,QWORD PTR [rsp+0x80]
   140003241:	mov    QWORD PTR [rsp+0x28],rax
   140003246:	mov    r9,QWORD PTR [rcx]
   140003249:	mov    r8b,0x1
   14000324c:	call   0x1400034b0
   140003251:	mov    rax,rbx
   140003254:	jmp    0x140003449
   140003259:	mov    rcx,QWORD PTR [rcx]
   14000325c:	cmp    r8,QWORD PTR [rcx]
   14000325f:	jne    0x140003291
   140003261:	mov    eax,DWORD PTR [r8+0x20]
   140003265:	cmp    DWORD PTR [r9],eax
   140003268:	jae    0x140003423
   14000326e:	mov    rax,QWORD PTR [rsp+0x80]
   140003276:	mov    QWORD PTR [rsp+0x28],rax
   14000327b:	mov    r9,r8
   14000327e:	mov    r8b,0x1
   140003281:	mov    rcx,r10
   140003284:	call   0x1400034b0
   140003289:	mov    rax,rbx
   14000328c:	jmp    0x140003449
   140003291:	cmp    r8,rcx
   140003294:	jne    0x1400032c6
   140003296:	mov    r9,QWORD PTR [rcx+0x10]
   14000329a:	mov    eax,DWORD PTR [rsi]
   14000329c:	cmp    DWORD PTR [r9+0x20],eax
   1400032a0:	jae    0x140003423
   1400032a6:	mov    rax,QWORD PTR [rsp+0x80]
   1400032ae:	mov    QWORD PTR [rsp+0x28],rax
   1400032b3:	xor    r8d,r8d
   1400032b6:	mov    rcx,r10
   1400032b9:	call   0x1400034b0
   1400032be:	mov    rax,rbx
   1400032c1:	jmp    0x140003449
   1400032c6:	mov    edi,DWORD PTR [r9]
   1400032c9:	mov    r11d,DWORD PTR [r8+0x20]
   1400032cd:	cmp    r11d,edi
   1400032d0:	jbe    0x140003386
   1400032d6:	mov    rax,r8
   1400032d9:	cmp    BYTE PTR [r8+0x19],0x0
   1400032de:	je     0x1400032e6
   1400032e0:	mov    r9,QWORD PTR [r8+0x10]
   1400032e4:	jmp    0x14000333d
   1400032e6:	mov    r9,QWORD PTR [r8]
   1400032e9:	cmp    BYTE PTR [r9+0x19],0x0
   1400032ee:	jne    0x14000330f
   1400032f0:	mov    rax,QWORD PTR [r9+0x10]
   1400032f4:	cmp    BYTE PTR [rax+0x19],0x0
   1400032f8:	jne    0x14000333d
   1400032fa:	nop    WORD PTR [rax+rax*1+0x0]
   140003300:	mov    r9,rax
   140003303:	mov    rax,QWORD PTR [rax+0x10]
   140003307:	cmp    BYTE PTR [rax+0x19],0x0
   14000330b:	je     0x140003300
   14000330d:	jmp    0x14000333d
   14000330f:	mov    rdx,QWORD PTR [r8+0x8]
   140003313:	cmp    BYTE PTR [rdx+0x19],0x0
   140003317:	jne    0x140003332
   140003319:	nop    DWORD PTR [rax+0x0]
   140003320:	cmp    rax,QWORD PTR [rdx]
   140003323:	jne    0x140003332
   140003325:	mov    rax,rdx
   140003328:	mov    rdx,QWORD PTR [rdx+0x8]
   14000332c:	cmp    BYTE PTR [rdx+0x19],0x0
   140003330:	je     0x140003320
   140003332:	mov    r9,rax
   140003335:	cmp    BYTE PTR [rax+0x19],0x0
   140003339:	cmove  r9,rdx
   14000333d:	cmp    DWORD PTR [r9+0x20],edi
   140003341:	jae    0x140003383
   140003343:	mov    rax,QWORD PTR [r9+0x10]
   140003347:	mov    rdx,rbx
   14000334a:	mov    rcx,r10
   14000334d:	cmp    BYTE PTR [rax+0x19],0x0
   140003351:	mov    rax,QWORD PTR [rsp+0x80]
   140003359:	mov    QWORD PTR [rsp+0x28],rax
   14000335e:	je     0x140003370
   140003360:	xor    r8d,r8d
   140003363:	call   0x1400034b0
   140003368:	mov    rax,rbx
   14000336b:	jmp    0x140003449
   140003370:	mov    r9,r8
   140003373:	mov    r8b,0x1
   140003376:	call   0x1400034b0
   14000337b:	mov    rax,rbx
   14000337e:	jmp    0x140003449
   140003383:	cmp    r11d,edi
   140003386:	jae    0x140003423
   14000338c:	mov    r9,r8
   14000338f:	cmp    BYTE PTR [r8+0x19],0x0
   140003394:	jne    0x1400033de
   140003396:	mov    rax,QWORD PTR [r8+0x10]
   14000339a:	cmp    BYTE PTR [rax+0x19],0x0
   14000339e:	jne    0x1400033be
   1400033a0:	mov    r9,rax
   1400033a3:	mov    rax,QWORD PTR [rax]
   1400033a6:	cmp    BYTE PTR [rax+0x19],0x0
   1400033aa:	jne    0x1400033de
   1400033ac:	nop    DWORD PTR [rax+0x0]
   1400033b0:	mov    r9,rax
   1400033b3:	mov    rax,QWORD PTR [rax]
   1400033b6:	cmp    BYTE PTR [rax+0x19],0x0
   1400033ba:	je     0x1400033b0
   1400033bc:	jmp    0x1400033de
   1400033be:	mov    rax,QWORD PTR [r8+0x8]
   1400033c2:	cmp    BYTE PTR [rax+0x19],0x0
   1400033c6:	jne    0x1400033db
   1400033c8:	cmp    r9,QWORD PTR [rax+0x10]
   1400033cc:	jne    0x1400033db
   1400033ce:	mov    r9,rax
   1400033d1:	mov    rax,QWORD PTR [rax+0x8]
   1400033d5:	cmp    BYTE PTR [rax+0x19],0x0
   1400033d9:	je     0x1400033c8
   1400033db:	mov    r9,rax
   1400033de:	cmp    r9,rcx
   1400033e1:	je     0x1400033e9
   1400033e3:	cmp    edi,DWORD PTR [r9+0x20]
   1400033e7:	jae    0x140003423
   1400033e9:	mov    rax,QWORD PTR [r8+0x10]
   1400033ed:	mov    rdx,rbx
   1400033f0:	mov    rcx,r10
   1400033f3:	cmp    BYTE PTR [rax+0x19],0x0
   1400033f7:	mov    rax,QWORD PTR [rsp+0x80]
   1400033ff:	mov    QWORD PTR [rsp+0x28],rax
   140003404:	je     0x140003416
   140003406:	mov    r9,r8
   140003409:	xor    r8d,r8d
   14000340c:	call   0x1400034b0
   140003411:	mov    rax,rbx
   140003414:	jmp    0x140003449
   140003416:	mov    r8b,0x1
   140003419:	call   0x1400034b0
   14000341e:	mov    rax,rbx
   140003421:	jmp    0x140003449
   140003423:	mov    rax,QWORD PTR [rsp+0x80]
   14000342b:	mov    QWORD PTR [rsp+0x20],rax
   140003430:	mov    r9,rsi
   140003433:	lea    rdx,[rsp+0x38]
   140003438:	mov    rcx,r10
   14000343b:	call   0x140003090
   140003440:	mov    rcx,QWORD PTR [rax]
   140003443:	mov    QWORD PTR [rbx],rcx
   140003446:	mov    rax,rbx
   140003449:	mov    rbx,QWORD PTR [rsp+0x60]
   14000344e:	mov    rsi,QWORD PTR [rsp+0x68]
   140003453:	add    rsp,0x50
   140003457:	pop    rdi
   140003458:	ret    
   140003459:	int3   
   14000345a:	int3   
   14000345b:	int3   
   14000345c:	int3   
   14000345d:	int3   
   14000345e:	int3   
   14000345f:	int3   
   140003460:	rex push rbx
   140003462:	sub    rsp,0x20
   140003466:	mov    rbx,rcx
   140003469:	mov    ecx,0x30
   14000346e:	call   0x1400138b8
   140003473:	mov    rdx,rax
   140003476:	test   rax,rax
   140003479:	je     0x1400034a8
   14000347b:	mov    rax,QWORD PTR [rbx]
   14000347e:	lea    rcx,[rdx+0x8]
   140003482:	mov    QWORD PTR [rdx],rax
   140003485:	test   rcx,rcx
   140003488:	je     0x140003490
   14000348a:	mov    rax,QWORD PTR [rbx]
   14000348d:	mov    QWORD PTR [rcx],rax
   140003490:	lea    rcx,[rdx+0x10]
   140003494:	test   rcx,rcx
   140003497:	je     0x14000349f
   140003499:	mov    rax,QWORD PTR [rbx]
   14000349c:	mov    QWORD PTR [rcx],rax
   14000349f:	mov    rax,rdx
   1400034a2:	add    rsp,0x20
   1400034a6:	pop    rbx
   1400034a7:	ret    
   1400034a8:	call   0x140012fc8
   1400034ad:	int3   
   1400034ae:	int3   
   1400034af:	int3   
   1400034b0:	rex push rbx
   1400034b2:	sub    rsp,0x20
   1400034b6:	mov    rax,QWORD PTR [rcx+0x8]
   1400034ba:	mov    r10,rcx
   1400034bd:	movabs rcx,0x555555555555554
   1400034c7:	mov    rbx,rdx
   1400034ca:	cmp    rax,rcx
   1400034cd:	jae    0x140003738
   1400034d3:	mov    r11,QWORD PTR [rsp+0x58]
   1400034d8:	inc    rax
   1400034db:	mov    QWORD PTR [r10+0x8],rax
   1400034df:	mov    QWORD PTR [r11+0x8],r9
   1400034e3:	mov    rax,QWORD PTR [r10]
   1400034e6:	cmp    r9,rax
   1400034e9:	jne    0x1400034fa
   1400034eb:	mov    QWORD PTR [rax+0x8],r11
   1400034ef:	mov    rax,QWORD PTR [r10]
   1400034f2:	mov    QWORD PTR [rax],r11
   1400034f5:	mov    rax,QWORD PTR [r10]
   1400034f8:	jmp    0x14000351c
   1400034fa:	test   r8b,r8b
   1400034fd:	je     0x14000350f
   1400034ff:	mov    QWORD PTR [r9],r11
   140003502:	mov    rax,QWORD PTR [r10]
   140003505:	cmp    r9,QWORD PTR [rax]
   140003508:	jne    0x140003520
   14000350a:	mov    QWORD PTR [rax],r11
   14000350d:	jmp    0x140003520
   14000350f:	mov    QWORD PTR [r9+0x10],r11
   140003513:	mov    rax,QWORD PTR [r10]
   140003516:	cmp    r9,QWORD PTR [rax+0x10]
   14000351a:	jne    0x140003520
   14000351c:	mov    QWORD PTR [rax+0x10],r11
   140003520:	mov    rcx,QWORD PTR [r11+0x8]
   140003524:	mov    rax,r11
   140003527:	cmp    BYTE PTR [rcx+0x18],0x0
   14000352b:	jne    0x140003721
   140003531:	mov    rcx,QWORD PTR [rax+0x8]
   140003535:	mov    r8,QWORD PTR [rcx+0x8]
   140003539:	mov    rdx,QWORD PTR [r8]
   14000353c:	cmp    rcx,rdx
   14000353f:	jne    0x140003636
   140003545:	mov    rdx,QWORD PTR [r8+0x10]
   140003549:	cmp    BYTE PTR [rdx+0x18],0x0
   14000354d:	jne    0x140003570
   14000354f:	mov    BYTE PTR [rcx+0x18],0x1
   140003553:	mov    BYTE PTR [rdx+0x18],0x1
   140003557:	mov    rcx,QWORD PTR [rax+0x8]
   14000355b:	mov    rdx,QWORD PTR [rcx+0x8]
   14000355f:	mov    BYTE PTR [rdx+0x18],0x0
   140003563:	mov    rcx,QWORD PTR [rax+0x8]
   140003567:	mov    rax,QWORD PTR [rcx+0x8]
   14000356b:	jmp    0x140003713
   140003570:	cmp    rax,QWORD PTR [rcx+0x10]
   140003574:	jne    0x1400035c1
   140003576:	mov    rdx,QWORD PTR [rcx+0x10]
   14000357a:	mov    rax,rcx
   14000357d:	mov    rcx,QWORD PTR [rdx]
   140003580:	mov    QWORD PTR [rax+0x10],rcx
   140003584:	mov    rcx,QWORD PTR [rdx]
   140003587:	cmp    BYTE PTR [rcx+0x19],0x0
   14000358b:	jne    0x140003591
   14000358d:	mov    QWORD PTR [rcx+0x8],rax
   140003591:	mov    rcx,QWORD PTR [rax+0x8]
   140003595:	mov    QWORD PTR [rdx+0x8],rcx
   140003599:	mov    rcx,QWORD PTR [r10]
   14000359c:	cmp    rax,QWORD PTR [rcx+0x8]
   1400035a0:	jne    0x1400035a8
   1400035a2:	mov    QWORD PTR [rcx+0x8],rdx
   1400035a6:	jmp    0x1400035ba
   1400035a8:	mov    rcx,QWORD PTR [rax+0x8]
   1400035ac:	cmp    rax,QWORD PTR [rcx]
   1400035af:	jne    0x1400035b6
   1400035b1:	mov    QWORD PTR [rcx],rdx
   1400035b4:	jmp    0x1400035ba
   1400035b6:	mov    QWORD PTR [rcx+0x10],rdx
   1400035ba:	mov    QWORD PTR [rdx],rax
   1400035bd:	mov    QWORD PTR [rax+0x8],rdx
   1400035c1:	mov    rcx,QWORD PTR [rax+0x8]
   1400035c5:	mov    BYTE PTR [rcx+0x18],0x1
   1400035c9:	mov    rcx,QWORD PTR [rax+0x8]
   1400035cd:	mov    rdx,QWORD PTR [rcx+0x8]
   1400035d1:	mov    BYTE PTR [rdx+0x18],0x0
   1400035d5:	mov    rcx,QWORD PTR [rax+0x8]
   1400035d9:	mov    rdx,QWORD PTR [rcx+0x8]
   1400035dd:	mov    r8,QWORD PTR [rdx]
   1400035e0:	mov    rcx,QWORD PTR [r8+0x10]
   1400035e4:	mov    QWORD PTR [rdx],rcx
   1400035e7:	mov    rcx,QWORD PTR [r8+0x10]
   1400035eb:	cmp    BYTE PTR [rcx+0x19],0x0
   1400035ef:	jne    0x1400035f5
   1400035f1:	mov    QWORD PTR [rcx+0x8],rdx
   1400035f5:	mov    rcx,QWORD PTR [rdx+0x8]
   1400035f9:	mov    QWORD PTR [r8+0x8],rcx
   1400035fd:	mov    rcx,QWORD PTR [r10]
   140003600:	cmp    rdx,QWORD PTR [rcx+0x8]
   140003604:	jne    0x140003613
   140003606:	mov    QWORD PTR [rcx+0x8],r8
   14000360a:	mov    QWORD PTR [r8+0x10],rdx
   14000360e:	jmp    0x14000370f
   140003613:	mov    rcx,QWORD PTR [rdx+0x8]
   140003617:	cmp    rdx,QWORD PTR [rcx+0x10]
   14000361b:	jne    0x14000362a
   14000361d:	mov    QWORD PTR [rcx+0x10],r8
   140003621:	mov    QWORD PTR [r8+0x10],rdx
   140003625:	jmp    0x14000370f
   14000362a:	mov    QWORD PTR [rcx],r8
   14000362d:	mov    QWORD PTR [r8+0x10],rdx
   140003631:	jmp    0x14000370f
   140003636:	cmp    BYTE PTR [rdx+0x18],0x0
   14000363a:	jne    0x14000365d
   14000363c:	mov    BYTE PTR [rcx+0x18],0x1
   140003640:	mov    BYTE PTR [rdx+0x18],0x1
   140003644:	mov    rcx,QWORD PTR [rax+0x8]
   140003648:	mov    rdx,QWORD PTR [rcx+0x8]
   14000364c:	mov    BYTE PTR [rdx+0x18],0x0
   140003650:	mov    rcx,QWORD PTR [rax+0x8]
   140003654:	mov    rax,QWORD PTR [rcx+0x8]
   140003658:	jmp    0x140003713
   14000365d:	cmp    rax,QWORD PTR [rcx]
   140003660:	jne    0x1400036af
   140003662:	mov    rdx,QWORD PTR [rcx]
   140003665:	mov    rax,rcx
   140003668:	mov    rcx,QWORD PTR [rdx+0x10]
   14000366c:	mov    QWORD PTR [rax],rcx
   14000366f:	mov    rcx,QWORD PTR [rdx+0x10]
   140003673:	cmp    BYTE PTR [rcx+0x19],0x0
   140003677:	jne    0x14000367d
   140003679:	mov    QWORD PTR [rcx+0x8],rax
   14000367d:	mov    rcx,QWORD PTR [rax+0x8]
   140003681:	mov    QWORD PTR [rdx+0x8],rcx
   140003685:	mov    rcx,QWORD PTR [r10]
   140003688:	cmp    rax,QWORD PTR [rcx+0x8]
   14000368c:	jne    0x140003694
   14000368e:	mov    QWORD PTR [rcx+0x8],rdx
   140003692:	jmp    0x1400036a7
   140003694:	mov    rcx,QWORD PTR [rax+0x8]
   140003698:	cmp    rax,QWORD PTR [rcx+0x10]
   14000369c:	jne    0x1400036a4
   14000369e:	mov    QWORD PTR [rcx+0x10],rdx
   1400036a2:	jmp    0x1400036a7
   1400036a4:	mov    QWORD PTR [rcx],rdx
   1400036a7:	mov    QWORD PTR [rdx+0x10],rax
   1400036ab:	mov    QWORD PTR [rax+0x8],rdx
   1400036af:	mov    rcx,QWORD PTR [rax+0x8]
   1400036b3:	mov    BYTE PTR [rcx+0x18],0x1
   1400036b7:	mov    rcx,QWORD PTR [rax+0x8]
   1400036bb:	mov    rdx,QWORD PTR [rcx+0x8]
   1400036bf:	mov    BYTE PTR [rdx+0x18],0x0
   1400036c3:	mov    rcx,QWORD PTR [rax+0x8]
   1400036c7:	mov    rdx,QWORD PTR [rcx+0x8]
   1400036cb:	mov    r8,QWORD PTR [rdx+0x10]
   1400036cf:	mov    rcx,QWORD PTR [r8]
   1400036d2:	mov    QWORD PTR [rdx+0x10],rcx
   1400036d6:	mov    rcx,QWORD PTR [r8]
   1400036d9:	cmp    BYTE PTR [rcx+0x19],0x0
   1400036dd:	jne    0x1400036e3
   1400036df:	mov    QWORD PTR [rcx+0x8],rdx
   1400036e3:	mov    rcx,QWORD PTR [rdx+0x8]
   1400036e7:	mov    QWORD PTR [r8+0x8],rcx
   1400036eb:	mov    rcx,QWORD PTR [r10]
   1400036ee:	cmp    rdx,QWORD PTR [rcx+0x8]
   1400036f2:	jne    0x1400036fa
   1400036f4:	mov    QWORD PTR [rcx+0x8],r8
   1400036f8:	jmp    0x14000370c
   1400036fa:	mov    rcx,QWORD PTR [rdx+0x8]
   1400036fe:	cmp    rdx,QWORD PTR [rcx]
   140003701:	jne    0x140003708
   140003703:	mov    QWORD PTR [rcx],r8
   140003706:	jmp    0x14000370c
   140003708:	mov    QWORD PTR [rcx+0x10],r8
   14000370c:	mov    QWORD PTR [r8],rdx
   14000370f:	mov    QWORD PTR [rdx+0x8],r8
   140003713:	mov    rcx,QWORD PTR [rax+0x8]
   140003717:	cmp    BYTE PTR [rcx+0x18],0x0
   14000371b:	je     0x140003531
   140003721:	mov    rax,QWORD PTR [r10]
   140003724:	mov    QWORD PTR [rbx],r11
   140003727:	mov    rcx,QWORD PTR [rax+0x8]
   14000372b:	mov    rax,rbx
   14000372e:	mov    BYTE PTR [rcx+0x18],0x1
   140003732:	add    rsp,0x20
   140003736:	pop    rbx
   140003737:	ret    
   140003738:	mov    rcx,QWORD PTR [rsp+0x58]
   14000373d:	call   0x1400137cc
   140003742:	lea    rcx,[rip+0x2b54f]        # 0x14002ec98
   140003749:	call   0x14001300c
   14000374e:	int3   
   14000374f:	int3   
   140003750:	rex push rbx
   140003752:	sub    rsp,0x20
   140003756:	mov    rbx,rcx
   140003759:	mov    rcx,QWORD PTR [rcx+0x20]
   14000375d:	mov    QWORD PTR [rbx+0x20],0x0
   140003765:	test   rcx,rcx
   140003768:	je     0x14000376f
   14000376a:	call   0x140013924
   14000376f:	mov    rcx,QWORD PTR [rbx+0x20]
   140003773:	call   0x1400137cc
   140003778:	mov    rcx,QWORD PTR [rbx+0x10]
   14000377c:	mov    QWORD PTR [rbx+0x10],0x0
   140003784:	test   rcx,rcx
   140003787:	je     0x14000378e
   140003789:	call   0x140013924
   14000378e:	mov    rcx,QWORD PTR [rbx+0x10]
   140003792:	add    rsp,0x20
   140003796:	pop    rbx
   140003797:	jmp    0x1400137cc
   14000379c:	int3   
   14000379d:	int3   
   14000379e:	int3   
   14000379f:	int3   
   1400037a0:	mov    rax,rsp
   1400037a3:	mov    QWORD PTR [rax+0x8],rcx
   1400037a7:	push   rdi
   1400037a8:	sub    rsp,0x60
   1400037ac:	mov    QWORD PTR [rax-0x40],0xfffffffffffffffe
   1400037b4:	mov    QWORD PTR [rax+0x10],rbx
   1400037b8:	mov    QWORD PTR [rax+0x18],rsi
   1400037bc:	mov    rbx,r8
   1400037bf:	mov    rsi,rcx
   1400037c2:	xor    edi,edi
   1400037c4:	mov    DWORD PTR [rsp+0x20],edi
   1400037c8:	mov    DWORD PTR [rax-0x38],edi
   1400037cb:	mov    QWORD PTR [rax-0x30],rdi
   1400037cf:	mov    QWORD PTR [rax-0x28],rdi
   1400037d3:	mov    QWORD PTR [rax-0x20],rdi
   1400037d7:	mov    QWORD PTR [rax-0x18],rdi
   1400037db:	mov    QWORD PTR [rax-0x10],rdi
   1400037df:	or     r8,0xffffffffffffffff
   1400037e3:	lea    rcx,[rax-0x38]
   1400037e7:	call   0x140010560
   1400037ec:	nop
   1400037ed:	mov    rdx,rbx
   1400037f0:	lea    rcx,[rsp+0x30]
   1400037f5:	call   0x14000fdb0
   1400037fa:	mov    DWORD PTR [rsi],edi
   1400037fc:	mov    QWORD PTR [rsi+0x8],rdi
   140003800:	mov    QWORD PTR [rsi+0x10],rdi
   140003804:	mov    QWORD PTR [rsi+0x18],rdi
   140003808:	mov    QWORD PTR [rsi+0x20],rdi
   14000380c:	mov    QWORD PTR [rsi+0x28],rdi
   140003810:	or     r8,0xffffffffffffffff
   140003814:	mov    rdx,rax
   140003817:	mov    rcx,rsi
   14000381a:	call   0x140010560
   14000381f:	nop
   140003820:	mov    rax,QWORD PTR [rsp+0x50]
   140003825:	mov    ecx,edi
   140003827:	mov    QWORD PTR [rsp+0x50],rcx
   14000382c:	test   rax,rax
   14000382f:	je     0x14000383e
   140003831:	mov    rcx,rax
   140003834:	call   0x140013924
   140003839:	mov    rcx,QWORD PTR [rsp+0x50]
   14000383e:	call   0x1400137cc
   140003843:	mov    rcx,QWORD PTR [rsp+0x40]
   140003848:	mov    QWORD PTR [rsp+0x40],rdi
   14000384d:	test   rcx,rcx
   140003850:	je     0x14000385c
   140003852:	call   0x140013924
   140003857:	mov    rdi,QWORD PTR [rsp+0x40]
   14000385c:	mov    rcx,rdi
   14000385f:	call   0x1400137cc
   140003864:	mov    rax,rsi
   140003867:	mov    rbx,QWORD PTR [rsp+0x78]
   14000386c:	mov    rsi,QWORD PTR [rsp+0x80]
   140003874:	add    rsp,0x60
   140003878:	pop    rdi
   140003879:	ret    
   14000387a:	int3   
   14000387b:	int3   
   14000387c:	int3   
   14000387d:	int3   
   14000387e:	int3   
   14000387f:	int3   
   140003880:	rex push rbx
   140003882:	sub    rsp,0x30
   140003886:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000388f:	mov    rbx,rcx
   140003892:	lea    rax,[rip+0x23cf7]        # 0x140027590
   140003899:	mov    QWORD PTR [rcx],rax
   14000389c:	add    rcx,0x8
   1400038a0:	mov    QWORD PTR [rsp+0x40],rcx
   1400038a5:	xor    eax,eax
   1400038a7:	mov    DWORD PTR [rcx],eax
   1400038a9:	mov    QWORD PTR [rcx+0x8],rax
   1400038ad:	mov    QWORD PTR [rcx+0x10],rax
   1400038b1:	mov    QWORD PTR [rcx+0x18],rax
   1400038b5:	mov    QWORD PTR [rcx+0x20],rax
   1400038b9:	mov    QWORD PTR [rcx+0x28],rax
   1400038bd:	add    rdx,0x8
   1400038c1:	or     r8,0xffffffffffffffff
   1400038c5:	call   0x140010560
   1400038ca:	nop
   1400038cb:	mov    rax,rbx
   1400038ce:	add    rsp,0x30
   1400038d2:	pop    rbx
   1400038d3:	ret    
   1400038d4:	int3   
   1400038d5:	int3   
   1400038d6:	int3   
   1400038d7:	int3   
   1400038d8:	int3   
   1400038d9:	int3   
   1400038da:	int3   
   1400038db:	int3   
   1400038dc:	int3   
   1400038dd:	int3   
   1400038de:	int3   
   1400038df:	int3   
   1400038e0:	rex push rbx
   1400038e2:	sub    rsp,0x20
   1400038e6:	mov    rbx,rcx
   1400038e9:	lea    rax,[rip+0x23ca0]        # 0x140027590
   1400038f0:	mov    QWORD PTR [rcx],rax
   1400038f3:	mov    rcx,QWORD PTR [rcx+0x28]
   1400038f7:	mov    QWORD PTR [rbx+0x28],0x0
   1400038ff:	test   rcx,rcx
   140003902:	je     0x140003909
   140003904:	call   0x140013924
   140003909:	mov    rcx,QWORD PTR [rbx+0x28]
   14000390d:	call   0x1400137cc
   140003912:	mov    rcx,QWORD PTR [rbx+0x18]
   140003916:	mov    QWORD PTR [rbx+0x18],0x0
   14000391e:	test   rcx,rcx
   140003921:	je     0x140003928
   140003923:	call   0x140013924
   140003928:	mov    rcx,QWORD PTR [rbx+0x18]
   14000392c:	add    rsp,0x20
   140003930:	pop    rbx
   140003931:	jmp    0x1400137cc
   140003936:	int3   
   140003937:	int3   
   140003938:	int3   
   140003939:	int3   
   14000393a:	int3   
   14000393b:	int3   
   14000393c:	int3   
   14000393d:	int3   
   14000393e:	int3   
   14000393f:	int3   
   140003940:	mov    QWORD PTR [rsp+0x8],rbx
   140003945:	push   rdi
   140003946:	sub    rsp,0x20
   14000394a:	mov    rbx,rcx
   14000394d:	lea    rax,[rip+0x23c3c]        # 0x140027590
   140003954:	mov    edi,edx
   140003956:	mov    QWORD PTR [rcx],rax
   140003959:	mov    rcx,QWORD PTR [rcx+0x28]
   14000395d:	mov    QWORD PTR [rbx+0x28],0x0
   140003965:	test   rcx,rcx
   140003968:	je     0x14000396f
   14000396a:	call   0x140013924
   14000396f:	mov    rcx,QWORD PTR [rbx+0x28]
   140003973:	call   0x1400137cc
   140003978:	mov    rcx,QWORD PTR [rbx+0x18]
   14000397c:	mov    QWORD PTR [rbx+0x18],0x0
   140003984:	test   rcx,rcx
   140003987:	je     0x14000398e
   140003989:	call   0x140013924
   14000398e:	mov    rcx,QWORD PTR [rbx+0x18]
   140003992:	call   0x1400137cc
   140003997:	test   dil,0x1
   14000399b:	je     0x1400039a5
   14000399d:	mov    rcx,rbx
   1400039a0:	call   0x1400137cc
   1400039a5:	mov    rax,rbx
   1400039a8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039ad:	add    rsp,0x20
   1400039b1:	pop    rdi
   1400039b2:	ret    
   1400039b3:	int3   
   1400039b4:	int3   
   1400039b5:	int3   
   1400039b6:	int3   
   1400039b7:	int3   
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	rex push rbx
   1400039c2:	sub    rsp,0x20
   1400039c6:	mov    r8,QWORD PTR [rcx]
   1400039c9:	lea    rdx,[rsp+0x30]
   1400039ce:	mov    rbx,rcx
   1400039d1:	mov    r9,r8
   1400039d4:	mov    r8,QWORD PTR [r8]
   1400039d7:	call   0x140004990
   1400039dc:	mov    rcx,QWORD PTR [rbx]
   1400039df:	add    rsp,0x20
   1400039e3:	pop    rbx
   1400039e4:	jmp    0x1400137cc
   1400039e9:	int3   
   1400039ea:	int3   
   1400039eb:	int3   
   1400039ec:	int3   
   1400039ed:	int3   
   1400039ee:	int3   
   1400039ef:	int3   
   1400039f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400039f5:	push   rbx
   1400039f6:	sub    rsp,0x30
   1400039fa:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003a03:	mov    rbx,rdx
   140003a06:	xor    eax,eax
   140003a08:	mov    DWORD PTR [rsp+0x20],eax
   140003a0c:	mov    DWORD PTR [rdx],eax
   140003a0e:	mov    QWORD PTR [rdx+0x8],rax
   140003a12:	mov    QWORD PTR [rdx+0x10],rax
   140003a16:	mov    QWORD PTR [rdx+0x18],rax
   140003a1a:	mov    QWORD PTR [rdx+0x20],rax
   140003a1e:	mov    QWORD PTR [rdx+0x28],rax
   140003a22:	or     r8,0xffffffffffffffff
   140003a26:	mov    rdx,rcx
   140003a29:	mov    rcx,rbx
   140003a2c:	call   0x140010560
   140003a31:	nop
   140003a32:	mov    rax,rbx
   140003a35:	add    rsp,0x30
   140003a39:	pop    rbx
   140003a3a:	ret    
   140003a3b:	int3   
   140003a3c:	int3   
   140003a3d:	int3   
   140003a3e:	int3   
   140003a3f:	int3   
   140003a40:	mov    QWORD PTR [rsp+0x10],rdx
   140003a45:	push   rdi
   140003a46:	sub    rsp,0x30
   140003a4a:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003a53:	mov    QWORD PTR [rsp+0x40],rbx
   140003a58:	mov    QWORD PTR [rsp+0x50],rsi
   140003a5d:	mov    rdi,rdx
   140003a60:	mov    rsi,rcx
   140003a63:	xor    eax,eax
   140003a65:	mov    DWORD PTR [rsp+0x20],eax
   140003a69:	mov    DWORD PTR [rdx],eax
   140003a6b:	mov    QWORD PTR [rdx+0x8],rax
   140003a6f:	mov    QWORD PTR [rdx+0x10],rax
   140003a73:	mov    QWORD PTR [rdx+0x18],rax
   140003a77:	mov    QWORD PTR [rdx+0x20],rax
   140003a7b:	mov    QWORD PTR [rdx+0x28],rax
   140003a7f:	mov    DWORD PTR [rsp+0x20],0x1
   140003a87:	call   0x140011320
   140003a8c:	mov    rax,QWORD PTR [rsi+0x38]
   140003a90:	lea    rcx,[rax+rax*4]
   140003a94:	lea    rdx,[rcx*4+0x1]
   140003a9c:	add    rdx,QWORD PTR [rsi+0x8]
   140003aa0:	mov    rcx,rdi
   140003aa3:	call   0x1400115d0
   140003aa8:	mov    rcx,rsi
   140003aab:	call   0x140011320
   140003ab0:	cmp    QWORD PTR [rsi+0x8],0x0
   140003ab5:	jbe    0x140003adc
   140003ab7:	mov    rdx,rsi
   140003aba:	mov    rcx,rdi
   140003abd:	cmp    DWORD PTR [rsi+0x40],0x0
   140003ac1:	je     0x140003aca
   140003ac3:	call   0x140004180
   140003ac8:	jmp    0x140003acf
   140003aca:	call   0x14000fdb0
   140003acf:	mov    edx,0x3f
   140003ad4:	mov    rcx,rdi
   140003ad7:	call   0x140010210
   140003adc:	mov    rax,QWORD PTR [rsi+0x30]
   140003ae0:	mov    rbx,QWORD PTR [rax]
   140003ae3:	cmp    rbx,rax
   140003ae6:	je     0x140003b9b
   140003aec:	nop    DWORD PTR [rax+0x0]
   140003af0:	cmp    rbx,QWORD PTR [rax]
   140003af3:	je     0x140003b02
   140003af5:	mov    edx,0x26
   140003afa:	mov    rcx,rdi
   140003afd:	call   0x140010210
   140003b02:	lea    rdx,[rbx+0x20]
   140003b06:	mov    rcx,rdi
   140003b09:	cmp    DWORD PTR [rsi+0x40],0x0
   140003b0d:	je     0x140003b16
   140003b0f:	call   0x140004180
   140003b14:	jmp    0x140003b1b
   140003b16:	call   0x14000fdb0
   140003b1b:	mov    edx,0x3d
   140003b20:	mov    rcx,rdi
   140003b23:	call   0x140010210
   140003b28:	lea    rdx,[rbx+0x50]
   140003b2c:	mov    rcx,rdi
   140003b2f:	cmp    DWORD PTR [rsi+0x40],0x0
   140003b33:	je     0x140003b3c
   140003b35:	call   0x140004180
   140003b3a:	jmp    0x140003b41
   140003b3c:	call   0x14000fdb0
   140003b41:	cmp    BYTE PTR [rbx+0x19],0x0
   140003b45:	jne    0x140003b8e
   140003b47:	mov    rax,QWORD PTR [rbx+0x10]
   140003b4b:	cmp    BYTE PTR [rax+0x19],0x0
   140003b4f:	jne    0x140003b6e
   140003b51:	mov    rbx,rax
   140003b54:	mov    rax,QWORD PTR [rax]
   140003b57:	cmp    BYTE PTR [rax+0x19],0x0
   140003b5b:	jne    0x140003b8e
   140003b5d:	nop    DWORD PTR [rax]
   140003b60:	mov    rbx,rax
   140003b63:	mov    rax,QWORD PTR [rax]
   140003b66:	cmp    BYTE PTR [rax+0x19],0x0
   140003b6a:	je     0x140003b60
   140003b6c:	jmp    0x140003b8e
   140003b6e:	mov    rax,QWORD PTR [rbx+0x8]
   140003b72:	cmp    BYTE PTR [rax+0x19],0x0
   140003b76:	jne    0x140003b8b
   140003b78:	cmp    rbx,QWORD PTR [rax+0x10]
   140003b7c:	jne    0x140003b8b
   140003b7e:	mov    rbx,rax
   140003b81:	mov    rax,QWORD PTR [rax+0x8]
   140003b85:	cmp    BYTE PTR [rax+0x19],0x0
   140003b89:	je     0x140003b78
   140003b8b:	mov    rbx,rax
   140003b8e:	mov    rax,QWORD PTR [rsi+0x30]
   140003b92:	cmp    rbx,rax
   140003b95:	jne    0x140003af0
   140003b9b:	mov    rax,rdi
   140003b9e:	mov    rbx,QWORD PTR [rsp+0x40]
   140003ba3:	mov    rsi,QWORD PTR [rsp+0x50]
   140003ba8:	add    rsp,0x30
   140003bac:	pop    rdi
   140003bad:	ret    
   140003bae:	int3   
   140003baf:	int3   
   140003bb0:	mov    rax,rsp
   140003bb3:	push   rbp
   140003bb4:	push   r14
   140003bb6:	push   r15
   140003bb8:	mov    rbp,rsp
   140003bbb:	sub    rsp,0x60
   140003bbf:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   140003bc7:	mov    QWORD PTR [rax+0x8],rbx
   140003bcb:	mov    QWORD PTR [rax+0x10],rsi
   140003bcf:	mov    QWORD PTR [rax+0x18],rdi
   140003bd3:	mov    rsi,rdx
   140003bd6:	mov    r15,rcx
   140003bd9:	mov    edx,0x3f
   140003bde:	xor    r8d,r8d
   140003be1:	mov    rcx,rsi
   140003be4:	call   0x140011230
   140003be9:	mov    r14,rax
   140003bec:	xor    ebx,ebx
   140003bee:	mov    DWORD PTR [rbp-0x38],ebx
   140003bf1:	mov    QWORD PTR [rbp-0x30],rbx
   140003bf5:	mov    QWORD PTR [rbp-0x28],rbx
   140003bf9:	mov    QWORD PTR [rbp-0x20],rbx
   140003bfd:	cmp    rax,0xffffffffffffffff
   140003c01:	je     0x140003db4
   140003c07:	mov    QWORD PTR [rbp-0x18],rbx
   140003c0b:	mov    QWORD PTR [rbp-0x10],rbx
   140003c0f:	or     r8,0xffffffffffffffff
   140003c13:	mov    rdx,rsi
   140003c16:	lea    rcx,[rbp-0x38]
   140003c1a:	call   0x140010560
   140003c1f:	nop
   140003c20:	lea    rcx,[rbp-0x38]
   140003c24:	call   0x140011370
   140003c29:	nop
   140003c2a:	mov    r9,r14
   140003c2d:	xor    r8d,r8d
   140003c30:	lea    rdx,[rbp-0x38]
   140003c34:	mov    rcx,r15
   140003c37:	call   0x140004370
   140003c3c:	or     r8,0xffffffffffffffff
   140003c40:	mov    rdx,rax
   140003c43:	mov    rcx,r15
   140003c46:	call   0x140010560
   140003c4b:	nop
   140003c4c:	mov    rax,QWORD PTR [rbp-0x18]
   140003c50:	mov    ecx,ebx
   140003c52:	mov    QWORD PTR [rbp-0x18],rbx
   140003c56:	test   rax,rax
   140003c59:	je     0x140003c67
   140003c5b:	mov    rcx,rax
   140003c5e:	call   0x140013924
   140003c63:	mov    rcx,QWORD PTR [rbp-0x18]
   140003c67:	call   0x1400137cc
   140003c6c:	mov    rax,QWORD PTR [rbp-0x28]
   140003c70:	mov    rcx,rbx
   140003c73:	mov    QWORD PTR [rbp-0x28],rbx
   140003c77:	test   rax,rax
   140003c7a:	je     0x140003c88
   140003c7c:	mov    rcx,rax
   140003c7f:	call   0x140013924
   140003c84:	mov    rcx,QWORD PTR [rbp-0x28]
   140003c88:	call   0x1400137cc
   140003c8d:	xor    r9d,r9d
   140003c90:	or     r8,0xffffffffffffffff
   140003c94:	lea    rdx,[rip+0x2b015]        # 0x14002ecb0
   140003c9b:	lea    rcx,[rbp-0x38]
   140003c9f:	call   0x14000fb80
   140003ca4:	nop
   140003ca5:	lea    r8,[r14+0x1]
   140003ca9:	lea    rdx,[rbp-0x38]
   140003cad:	mov    rcx,rsi
   140003cb0:	call   0x140010f80
   140003cb5:	mov    rdi,rax
   140003cb8:	mov    rax,QWORD PTR [rbp-0x18]
   140003cbc:	mov    rcx,rbx
   140003cbf:	mov    QWORD PTR [rbp-0x18],rbx
   140003cc3:	test   rax,rax
   140003cc6:	je     0x140003cd4
   140003cc8:	mov    rcx,rax
   140003ccb:	call   0x140013924
   140003cd0:	mov    rcx,QWORD PTR [rbp-0x18]
   140003cd4:	call   0x1400137cc
   140003cd9:	mov    rax,QWORD PTR [rbp-0x28]
   140003cdd:	mov    rcx,rbx
   140003ce0:	mov    QWORD PTR [rbp-0x28],rbx
   140003ce4:	test   rax,rax
   140003ce7:	je     0x140003cf5
   140003ce9:	mov    rcx,rax
   140003cec:	call   0x140013924
   140003cf1:	mov    rcx,QWORD PTR [rbp-0x28]
   140003cf5:	call   0x1400137cc
   140003cfa:	cmp    rdi,0xffffffffffffffff
   140003cfe:	je     0x140003d9c
   140003d04:	nop    DWORD PTR [rax+0x0]
   140003d08:	nop    DWORD PTR [rax+rax*1+0x0]
   140003d10:	lea    r8,[r14+0x1]
   140003d14:	mov    r9,rdi
   140003d17:	mov    rdx,rsi
   140003d1a:	mov    rcx,r15
   140003d1d:	call   0x140003e60
   140003d22:	mov    r14,rdi
   140003d25:	xor    r9d,r9d
   140003d28:	or     r8,0xffffffffffffffff
   140003d2c:	lea    rdx,[rip+0x2af7d]        # 0x14002ecb0
   140003d33:	lea    rcx,[rbp-0x38]
   140003d37:	call   0x14000fb80
   140003d3c:	nop
   140003d3d:	lea    r8,[rdi+0x1]
   140003d41:	lea    rdx,[rbp-0x38]
   140003d45:	mov    rcx,rsi
   140003d48:	call   0x140010f80
   140003d4d:	mov    rdi,rax
   140003d50:	mov    rax,QWORD PTR [rbp-0x18]
   140003d54:	mov    rcx,rbx
   140003d57:	mov    QWORD PTR [rbp-0x18],rbx
   140003d5b:	test   rax,rax
   140003d5e:	je     0x140003d6c
   140003d60:	mov    rcx,rax
   140003d63:	call   0x140013924
   140003d68:	mov    rcx,QWORD PTR [rbp-0x18]
   140003d6c:	call   0x1400137cc
   140003d71:	mov    rax,QWORD PTR [rbp-0x28]
   140003d75:	mov    rcx,rbx
   140003d78:	mov    QWORD PTR [rbp-0x28],rbx
   140003d7c:	test   rax,rax
   140003d7f:	je     0x140003d8d
   140003d81:	mov    rcx,rax
   140003d84:	call   0x140013924
   140003d89:	mov    rcx,QWORD PTR [rbp-0x28]
   140003d8d:	call   0x1400137cc
   140003d92:	cmp    rdi,0xffffffffffffffff
   140003d96:	jne    0x140003d10
   140003d9c:	lea    r8,[r14+0x1]
   140003da0:	or     r9,0xffffffffffffffff
   140003da4:	mov    rdx,rsi
   140003da7:	mov    rcx,r15
   140003daa:	call   0x140003e60
   140003daf:	jmp    0x140003e39
   140003db4:	mov    QWORD PTR [rbp-0x18],rbx
   140003db8:	mov    QWORD PTR [rbp-0x10],rbx
   140003dbc:	or     r8,0xffffffffffffffff
   140003dc0:	mov    rdx,rsi
   140003dc3:	lea    rcx,[rbp-0x38]
   140003dc7:	call   0x140010560
   140003dcc:	nop
   140003dcd:	lea    rcx,[rbp-0x38]
   140003dd1:	call   0x140011370
   140003dd6:	nop
   140003dd7:	or     r9,0xffffffffffffffff
   140003ddb:	xor    r8d,r8d
   140003dde:	lea    rdx,[rbp-0x38]
   140003de2:	mov    rcx,r15
   140003de5:	call   0x140004370
   140003dea:	or     r8,0xffffffffffffffff
   140003dee:	mov    rdx,rax
   140003df1:	mov    rcx,r15
   140003df4:	call   0x140010560
   140003df9:	nop
   140003dfa:	mov    rax,QWORD PTR [rbp-0x18]
   140003dfe:	mov    rcx,rbx
   140003e01:	mov    QWORD PTR [rbp-0x18],rbx
   140003e05:	test   rax,rax
   140003e08:	je     0x140003e16
   140003e0a:	mov    rcx,rax
   140003e0d:	call   0x140013924
   140003e12:	mov    rcx,QWORD PTR [rbp-0x18]
   140003e16:	call   0x1400137cc
   140003e1b:	mov    rcx,QWORD PTR [rbp-0x28]
   140003e1f:	mov    QWORD PTR [rbp-0x28],rbx
   140003e23:	test   rcx,rcx
   140003e26:	je     0x140003e31
   140003e28:	call   0x140013924
   140003e2d:	mov    rbx,QWORD PTR [rbp-0x28]
   140003e31:	mov    rcx,rbx
   140003e34:	call   0x1400137cc
   140003e39:	lea    r11,[rsp+0x60]
   140003e3e:	mov    rbx,QWORD PTR [r11+0x20]
   140003e42:	mov    rsi,QWORD PTR [r11+0x28]
   140003e46:	mov    rdi,QWORD PTR [r11+0x30]
   140003e4a:	mov    rsp,r11
   140003e4d:	pop    r15
   140003e4f:	pop    r14
   140003e51:	pop    rbp
   140003e52:	ret    
   140003e53:	int3   
   140003e54:	int3   
   140003e55:	int3   
   140003e56:	int3   
   140003e57:	int3   
   140003e58:	int3   
   140003e59:	int3   
   140003e5a:	int3   
   140003e5b:	int3   
   140003e5c:	int3   
   140003e5d:	int3   
   140003e5e:	int3   
   140003e5f:	int3   
   140003e60:	mov    rax,rsp
   140003e63:	push   rbp
   140003e64:	push   r14
   140003e66:	push   r15
   140003e68:	lea    rbp,[rax-0x5f]
   140003e6c:	sub    rsp,0xc0
   140003e73:	mov    QWORD PTR [rbp+0x37],0xfffffffffffffffe
   140003e7b:	mov    QWORD PTR [rax+0x8],rbx
   140003e7f:	mov    QWORD PTR [rax+0x10],rsi
   140003e83:	mov    QWORD PTR [rax+0x18],rdi
   140003e87:	mov    QWORD PTR [rax+0x20],r13
   140003e8b:	mov    rdi,r9
   140003e8e:	mov    r15,r8
   140003e91:	mov    rsi,rdx
   140003e94:	mov    r13,rcx
   140003e97:	cmp    r9,0xffffffffffffffff
   140003e9b:	jne    0x140003ea9
   140003e9d:	mov    rcx,rdx
   140003ea0:	call   0x140011320
   140003ea5:	mov    rdi,QWORD PTR [rsi+0x8]
   140003ea9:	cmp    rdi,r15
   140003eac:	je     0x140004155
   140003eb2:	mov    rcx,rsi
   140003eb5:	call   0x140011320
   140003eba:	cmp    r15,QWORD PTR [rsi+0x8]
   140003ebe:	jae    0x140004155
   140003ec4:	xor    ebx,ebx
   140003ec6:	mov    DWORD PTR [rbp+0x7],ebx
   140003ec9:	mov    QWORD PTR [rbp+0xf],rbx
   140003ecd:	mov    QWORD PTR [rbp+0x17],rbx
   140003ed1:	mov    QWORD PTR [rbp+0x1f],rbx
   140003ed5:	mov    QWORD PTR [rbp+0x27],rbx
   140003ed9:	mov    QWORD PTR [rbp+0x2f],rbx
   140003edd:	mov    DWORD PTR [rbp-0x29],ebx
   140003ee0:	mov    QWORD PTR [rbp-0x21],rbx
   140003ee4:	mov    QWORD PTR [rbp-0x19],rbx
   140003ee8:	mov    QWORD PTR [rbp-0x11],rbx
   140003eec:	mov    QWORD PTR [rbp-0x9],rbx
   140003ef0:	mov    QWORD PTR [rbp-0x1],rbx
   140003ef4:	xor    r9d,r9d
   140003ef7:	or     r8,0xffffffffffffffff
   140003efb:	lea    rdx,[rip+0x2adb2]        # 0x14002ecb4
   140003f02:	lea    rcx,[rbp-0x59]
   140003f06:	call   0x14000fb80
   140003f0b:	nop
   140003f0c:	mov    r8,r15
   140003f0f:	lea    rdx,[rbp-0x59]
   140003f13:	mov    rcx,rsi
   140003f16:	call   0x140010f80
   140003f1b:	mov    r14,rax
   140003f1e:	mov    rax,QWORD PTR [rbp-0x39]
   140003f22:	mov    ecx,ebx
   140003f24:	mov    QWORD PTR [rbp-0x39],rbx
   140003f28:	test   rax,rax
   140003f2b:	je     0x140003f39
   140003f2d:	mov    rcx,rax
   140003f30:	call   0x140013924
   140003f35:	mov    rcx,QWORD PTR [rbp-0x39]
   140003f39:	call   0x1400137cc
   140003f3e:	mov    rax,QWORD PTR [rbp-0x49]
   140003f42:	mov    rcx,rbx
   140003f45:	mov    QWORD PTR [rbp-0x49],rbx
   140003f49:	test   rax,rax
   140003f4c:	je     0x140003f5a
   140003f4e:	mov    rcx,rax
   140003f51:	call   0x140013924
   140003f56:	mov    rcx,QWORD PTR [rbp-0x49]
   140003f5a:	call   0x1400137cc
   140003f5f:	cmp    r14,rdi
   140003f62:	cmovae r14,rdi
   140003f66:	cmp    r15,r14
   140003f69:	jae    0x1400040d3
   140003f6f:	mov    DWORD PTR [rbp-0x59],ebx
   140003f72:	mov    QWORD PTR [rbp-0x51],rbx
   140003f76:	mov    QWORD PTR [rbp-0x49],rbx
   140003f7a:	mov    QWORD PTR [rbp-0x41],rbx
   140003f7e:	mov    QWORD PTR [rbp-0x39],rbx
   140003f82:	mov    QWORD PTR [rbp-0x31],rbx
   140003f86:	or     r8,0xffffffffffffffff
   140003f8a:	mov    rdx,rsi
   140003f8d:	lea    rcx,[rbp-0x59]
   140003f91:	call   0x140010560
   140003f96:	nop
   140003f97:	lea    rcx,[rbp-0x59]
   140003f9b:	call   0x140011370
   140003fa0:	nop
   140003fa1:	mov    r9,r14
   140003fa4:	mov    r8,r15
   140003fa7:	lea    rdx,[rbp-0x59]
   140003fab:	lea    rcx,[rbp+0x7]
   140003faf:	call   0x140004370
   140003fb4:	or     r8,0xffffffffffffffff
   140003fb8:	mov    rdx,rax
   140003fbb:	lea    rcx,[rbp+0x7]
   140003fbf:	call   0x140010560
   140003fc4:	nop
   140003fc5:	mov    rax,QWORD PTR [rbp-0x39]
   140003fc9:	mov    rcx,rbx
   140003fcc:	mov    QWORD PTR [rbp-0x39],rbx
   140003fd0:	test   rax,rax
   140003fd3:	je     0x140003fe1
   140003fd5:	mov    rcx,rax
   140003fd8:	call   0x140013924
   140003fdd:	mov    rcx,QWORD PTR [rbp-0x39]
   140003fe1:	call   0x1400137cc
   140003fe6:	mov    rax,QWORD PTR [rbp-0x49]
   140003fea:	mov    rcx,rbx
   140003fed:	mov    QWORD PTR [rbp-0x49],rbx
   140003ff1:	test   rax,rax
   140003ff4:	je     0x140004002
   140003ff6:	mov    rcx,rax
   140003ff9:	call   0x140013924
   140003ffe:	mov    rcx,QWORD PTR [rbp-0x49]
   140004002:	call   0x1400137cc
   140004007:	cmp    r14,0xffffffffffffffff
   14000400b:	je     0x1400040b5
   140004011:	inc    r14
   140004014:	cmp    r14,rdi
   140004017:	jae    0x1400040b5
   14000401d:	mov    DWORD PTR [rbp-0x59],ebx
   140004020:	mov    QWORD PTR [rbp-0x51],rbx
   140004024:	mov    QWORD PTR [rbp-0x49],rbx
   140004028:	mov    QWORD PTR [rbp-0x41],rbx
   14000402c:	mov    QWORD PTR [rbp-0x39],rbx
   140004030:	mov    QWORD PTR [rbp-0x31],rbx
   140004034:	or     r8,0xffffffffffffffff
   140004038:	mov    rdx,rsi
   14000403b:	lea    rcx,[rbp-0x59]
   14000403f:	call   0x140010560
   140004044:	nop
   140004045:	lea    rcx,[rbp-0x59]
   140004049:	call   0x140011370
   14000404e:	nop
   14000404f:	mov    r9,rdi
   140004052:	mov    r8,r14
   140004055:	lea    rdx,[rbp-0x59]
   140004059:	lea    rcx,[rbp-0x29]
   14000405d:	call   0x140004370
   140004062:	or     r8,0xffffffffffffffff
   140004066:	mov    rdx,rax
   140004069:	lea    rcx,[rbp-0x29]
   14000406d:	call   0x140010560
   140004072:	nop
   140004073:	mov    rax,QWORD PTR [rbp-0x39]
   140004077:	mov    rcx,rbx
   14000407a:	mov    QWORD PTR [rbp-0x39],rbx
   14000407e:	test   rax,rax
   140004081:	je     0x14000408f
   140004083:	mov    rcx,rax
   140004086:	call   0x140013924
   14000408b:	mov    rcx,QWORD PTR [rbp-0x39]
   14000408f:	call   0x1400137cc
   140004094:	mov    rax,QWORD PTR [rbp-0x49]
   140004098:	mov    rcx,rbx
   14000409b:	mov    QWORD PTR [rbp-0x49],rbx
   14000409f:	test   rax,rax
   1400040a2:	je     0x1400040b0
   1400040a4:	mov    rcx,rax
   1400040a7:	call   0x140013924
   1400040ac:	mov    rcx,QWORD PTR [rbp-0x49]
   1400040b0:	call   0x1400137cc
   1400040b5:	lea    rcx,[r13+0x30]
   1400040b9:	lea    rdx,[rbp+0x7]
   1400040bd:	call   0x1400047c0
   1400040c2:	or     r8,0xffffffffffffffff
   1400040c6:	lea    rdx,[rbp-0x29]
   1400040ca:	mov    rcx,rax
   1400040cd:	call   0x140010560
   1400040d2:	nop
   1400040d3:	mov    rax,QWORD PTR [rbp-0x9]
   1400040d7:	mov    rcx,rbx
   1400040da:	mov    QWORD PTR [rbp-0x9],rbx
   1400040de:	test   rax,rax
   1400040e1:	je     0x1400040ef
   1400040e3:	mov    rcx,rax
   1400040e6:	call   0x140013924
   1400040eb:	mov    rcx,QWORD PTR [rbp-0x9]
   1400040ef:	call   0x1400137cc
   1400040f4:	mov    rax,QWORD PTR [rbp-0x19]
   1400040f8:	mov    rcx,rbx
   1400040fb:	mov    QWORD PTR [rbp-0x19],rbx
   1400040ff:	test   rax,rax
   140004102:	je     0x140004110
   140004104:	mov    rcx,rax
   140004107:	call   0x140013924
   14000410c:	mov    rcx,QWORD PTR [rbp-0x19]
   140004110:	call   0x1400137cc
   140004115:	nop
   140004116:	mov    rax,QWORD PTR [rbp+0x27]
   14000411a:	mov    rcx,rbx
   14000411d:	mov    QWORD PTR [rbp+0x27],rbx
   140004121:	test   rax,rax
   140004124:	je     0x140004132
   140004126:	mov    rcx,rax
   140004129:	call   0x140013924
   14000412e:	mov    rcx,QWORD PTR [rbp+0x27]
   140004132:	call   0x1400137cc
   140004137:	mov    rcx,QWORD PTR [rbp+0x17]
   14000413b:	mov    QWORD PTR [rbp+0x17],rbx
   14000413f:	test   rcx,rcx
   140004142:	je     0x14000414d
   140004144:	call   0x140013924
   140004149:	mov    rbx,QWORD PTR [rbp+0x17]
   14000414d:	mov    rcx,rbx
   140004150:	call   0x1400137cc
   140004155:	lea    r11,[rsp+0xc0]
   14000415d:	mov    rbx,QWORD PTR [r11+0x20]
   140004161:	mov    rsi,QWORD PTR [r11+0x28]
   140004165:	mov    rdi,QWORD PTR [r11+0x30]
   140004169:	mov    r13,QWORD PTR [r11+0x38]
   14000416d:	mov    rsp,r11
   140004170:	pop    r15
   140004172:	pop    r14
   140004174:	pop    rbp
   140004175:	ret    
   140004176:	int3   
   140004177:	int3   
   140004178:	int3   
   140004179:	int3   
   14000417a:	int3   
   14000417b:	int3   
   14000417c:	int3   
   14000417d:	int3   
   14000417e:	int3   
   14000417f:	int3   
   140004180:	mov    rax,rsp
   140004183:	push   rbp
   140004184:	push   r14
   140004186:	push   r15
   140004188:	lea    rbp,[rax-0x5f]
   14000418c:	sub    rsp,0xc0
   140004193:	mov    QWORD PTR [rbp+0x7],0xfffffffffffffffe
   14000419b:	mov    QWORD PTR [rax+0x8],rbx
   14000419f:	mov    QWORD PTR [rax+0x10],rsi
   1400041a3:	mov    QWORD PTR [rax+0x18],rdi
   1400041a7:	mov    QWORD PTR [rax+0x20],r12
   1400041ab:	mov    r14,rcx
   1400041ae:	xor    edi,edi
   1400041b0:	mov    DWORD PTR [rbp-0x59],edi
   1400041b3:	mov    QWORD PTR [rbp-0x51],rdi
   1400041b7:	mov    QWORD PTR [rbp-0x49],rdi
   1400041bb:	mov    QWORD PTR [rbp-0x41],rdi
   1400041bf:	mov    QWORD PTR [rbp-0x39],rdi
   1400041c3:	mov    QWORD PTR [rbp-0x31],rdi
   1400041c7:	or     r8,0xffffffffffffffff
   1400041cb:	lea    rcx,[rbp-0x59]
   1400041cf:	call   0x140010560
   1400041d4:	nop
   1400041d5:	lea    rcx,[rbp-0x59]
   1400041d9:	call   0x140011370
   1400041de:	nop
   1400041df:	lea    rcx,[rbp-0x59]
   1400041e3:	call   0x140011370
   1400041e8:	mov    rbx,QWORD PTR [rbp-0x51]
   1400041ec:	mov    rcx,r14
   1400041ef:	call   0x140011320
   1400041f4:	lea    rdx,[rbx+rbx*2]
   1400041f8:	shr    rdx,1
   1400041fb:	add    rdx,QWORD PTR [r14+0x8]
   1400041ff:	mov    rcx,r14
   140004202:	call   0x1400115d0
   140004207:	lea    rcx,[rbp-0x59]
   14000420b:	call   0x140011370
   140004210:	mov    rsi,rax
   140004213:	lea    r15,[rax+rbx*1]
   140004217:	cmp    rax,r15
   14000421a:	je     0x1400042fe
   140004220:	lea    r12,[rip+0x2aab9]        # 0x14002ece0
   140004227:	nop    WORD PTR [rax+rax*1+0x0]
   140004230:	movsx  ebx,BYTE PTR [rsi]
   140004233:	movzx  edx,bl
   140004236:	and    dl,0x7
   140004239:	mov    ecx,0x7
   14000423e:	sub    cl,dl
   140004240:	mov    edx,0x1
   140004245:	shl    edx,cl
   140004247:	mov    eax,ebx
   140004249:	sar    eax,0x3
   14000424c:	and    eax,0x1f
   14000424f:	test   BYTE PTR [rax+r12*1],dl
   140004253:	je     0x140004265
   140004255:	movsx  edx,bl
   140004258:	mov    rcx,r14
   14000425b:	call   0x140010210
   140004260:	jmp    0x1400042f2
   140004265:	mov    DWORD PTR [rbp-0x29],edi
   140004268:	mov    QWORD PTR [rbp-0x21],rdi
   14000426c:	mov    QWORD PTR [rbp-0x19],rdi
   140004270:	mov    QWORD PTR [rbp-0x11],rdi
   140004274:	mov    QWORD PTR [rbp-0x9],rdi
   140004278:	mov    QWORD PTR [rbp-0x1],rdi
   14000427c:	xor    r9d,r9d
   14000427f:	or     r8,0xffffffffffffffff
   140004283:	lea    rdx,[rip+0x2aa2e]        # 0x14002ecb8
   14000428a:	lea    rcx,[rbp+0xf]
   14000428e:	call   0x14000fb80
   140004293:	movzx  r8d,bl
   140004297:	mov    rdx,rax
   14000429a:	lea    rcx,[rbp-0x29]
   14000429e:	call   0x140011fa0
   1400042a3:	lea    rdx,[rbp-0x29]
   1400042a7:	mov    rcx,r14
   1400042aa:	call   0x14000fdb0
   1400042af:	nop
   1400042b0:	mov    rax,QWORD PTR [rbp-0x9]
   1400042b4:	mov    rcx,rdi
   1400042b7:	mov    QWORD PTR [rbp-0x9],rcx
   1400042bb:	test   rax,rax
   1400042be:	je     0x1400042cc
   1400042c0:	mov    rcx,rax
   1400042c3:	call   0x140013924
   1400042c8:	mov    rcx,QWORD PTR [rbp-0x9]
   1400042cc:	call   0x1400137cc
   1400042d1:	mov    rax,QWORD PTR [rbp-0x19]
   1400042d5:	mov    rcx,rdi
   1400042d8:	mov    QWORD PTR [rbp-0x19],rcx
   1400042dc:	test   rax,rax
   1400042df:	je     0x1400042ed
   1400042e1:	mov    rcx,rax
   1400042e4:	call   0x140013924
   1400042e9:	mov    rcx,QWORD PTR [rbp-0x19]
   1400042ed:	call   0x1400137cc
   1400042f2:	inc    rsi
   1400042f5:	cmp    rsi,r15
   1400042f8:	jne    0x140004230
   1400042fe:	mov    rax,QWORD PTR [rbp-0x39]
   140004302:	mov    rcx,rdi
   140004305:	mov    QWORD PTR [rbp-0x39],rcx
   140004309:	test   rax,rax
   14000430c:	je     0x14000431a
   14000430e:	mov    rcx,rax
   140004311:	call   0x140013924
   140004316:	mov    rcx,QWORD PTR [rbp-0x39]
   14000431a:	call   0x1400137cc
   14000431f:	mov    rcx,QWORD PTR [rbp-0x49]
   140004323:	mov    QWORD PTR [rbp-0x49],rdi
   140004327:	test   rcx,rcx
   14000432a:	je     0x140004335
   14000432c:	call   0x140013924
   140004331:	mov    rdi,QWORD PTR [rbp-0x49]
   140004335:	mov    rcx,rdi
   140004338:	call   0x1400137cc
   14000433d:	mov    rax,r14
   140004340:	lea    r11,[rsp+0xc0]
   140004348:	mov    rbx,QWORD PTR [r11+0x20]
   14000434c:	mov    rsi,QWORD PTR [r11+0x28]
   140004350:	mov    rdi,QWORD PTR [r11+0x30]
   140004354:	mov    r12,QWORD PTR [r11+0x38]
   140004358:	mov    rsp,r11
   14000435b:	pop    r15
   14000435d:	pop    r14
   14000435f:	pop    rbp
   140004360:	ret    
   140004361:	int3   
   140004362:	int3   
   140004363:	int3   
   140004364:	int3   
   140004365:	int3   
   140004366:	int3   
   140004367:	int3   
   140004368:	int3   
   140004369:	int3   
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	rex push rbp
   140004372:	push   rbx
   140004373:	push   rsi
   140004374:	push   rdi
   140004375:	push   r12
   140004377:	push   r13
   140004379:	push   r14
   14000437b:	push   r15
   14000437d:	lea    rbp,[rsp-0x1f]
   140004382:	sub    rsp,0xc8
   140004389:	mov    QWORD PTR [rbp-0x21],0xfffffffffffffffe
   140004391:	mov    rax,QWORD PTR [rip+0x32c78]        # 0x140037010
   140004398:	xor    rax,rsp
   14000439b:	mov    QWORD PTR [rbp+0x7],rax
   14000439f:	mov    r13,r9
   1400043a2:	mov    rdi,r8
   1400043a5:	mov    rbx,rdx
   1400043a8:	mov    r14,rcx
   1400043ab:	mov    QWORD PTR [rbp-0x59],rcx
   1400043af:	mov    rcx,rdx
   1400043b2:	call   0x140011370
   1400043b7:	mov    r15,rax
   1400043ba:	mov    rcx,rbx
   1400043bd:	call   0x140011370
   1400043c2:	mov    r12,QWORD PTR [rbx+0x8]
   1400043c6:	cmp    r13,0xffffffffffffffff
   1400043ca:	cmove  r13,r12
   1400043ce:	cmp    rdi,r13
   1400043d1:	jae    0x1400045ef
   1400043d7:	mov    QWORD PTR [rbp-0x1],0xf
   1400043df:	xor    ebx,ebx
   1400043e1:	mov    QWORD PTR [rbp-0x9],rbx
   1400043e5:	mov    BYTE PTR [rbp-0x19],bl
   1400043e8:	mov    rax,r13
   1400043eb:	cmp    r13,r12
   1400043ee:	cmova  rax,r12
   1400043f2:	sub    rax,rdi
   1400043f5:	lea    rsi,[rax+rax*2]
   1400043f9:	shr    rsi,1
   1400043fc:	cmp    rsi,0xf
   140004400:	je     0x140004463
   140004402:	cmp    rsi,0xfffffffffffffffe
   140004406:	jbe    0x140004415
   140004408:	lea    rcx,[rip+0x2a861]        # 0x14002ec70
   14000440f:	call   0x14001300c
   140004414:	int3   
   140004415:	cmp    rsi,0xf
   140004419:	jbe    0x14000442c
   14000441b:	xor    r8d,r8d
   14000441e:	mov    rdx,rsi
   140004421:	lea    rcx,[rbp-0x19]
   140004425:	call   0x1400027b0
   14000442a:	jmp    0x140004449
   14000442c:	cmp    rsi,0x10
   140004430:	jae    0x14000443c
   140004432:	mov    QWORD PTR [rbp-0x1],0xf
   14000443a:	jmp    0x140004441
   14000443c:	test   rsi,rsi
   14000443f:	jne    0x14000444e
   140004441:	mov    BYTE PTR [rbp-0x19],0x0
   140004445:	mov    QWORD PTR [rbp-0x9],rbx
   140004449:	test   rsi,rsi
   14000444c:	je     0x140004463
   14000444e:	mov    QWORD PTR [rbp-0x9],rbx
   140004452:	lea    rax,[rbp-0x19]
   140004456:	cmp    QWORD PTR [rbp-0x1],0x10
   14000445b:	cmovae rax,QWORD PTR [rbp-0x19]
   140004460:	mov    BYTE PTR [rax],0x0
   140004463:	cmp    rdi,0xffffffffffffffff
   140004467:	je     0x140004566
   14000446d:	lea    rsi,[rdi+0x2]
   140004471:	lea    r14,[rdi+0x1]
   140004475:	cmp    rdi,r13
   140004478:	jae    0x140004562
   14000447e:	movzx  r8d,BYTE PTR [rdi+r15*1]
   140004483:	cmp    r8b,0x25
   140004487:	jne    0x140004546
   14000448d:	mov    DWORD PTR [rsp+0x20],ebx
   140004491:	mov    QWORD PTR [rsp+0x28],rbx
   140004496:	mov    QWORD PTR [rbp-0x79],rbx
   14000449a:	mov    QWORD PTR [rbp-0x71],rbx
   14000449e:	mov    QWORD PTR [rbp-0x69],rbx
   1400044a2:	mov    QWORD PTR [rbp-0x61],rbx
   1400044a6:	mov    edx,0x25
   1400044ab:	lea    rcx,[rsp+0x20]
   1400044b0:	call   0x140010210
   1400044b5:	cmp    r14,r12
   1400044b8:	jae    0x1400044ca
   1400044ba:	movsx  edx,BYTE PTR [rdi+r15*1+0x1]
   1400044c0:	lea    rcx,[rsp+0x20]
   1400044c5:	call   0x140010210
   1400044ca:	cmp    rsi,r12
   1400044cd:	jae    0x1400044df
   1400044cf:	movsx  edx,BYTE PTR [rdi+r15*1+0x2]
   1400044d5:	lea    rcx,[rsp+0x20]
   1400044da:	call   0x140010210
   1400044df:	lea    rcx,[rsp+0x20]
   1400044e4:	call   0x140004620
   1400044e9:	movzx  r8d,al
   1400044ed:	lea    rcx,[rbp-0x19]
   1400044f1:	call   0x1400048a0
   1400044f6:	add    rdi,0x3
   1400044fa:	add    r14,0x3
   1400044fe:	add    rsi,0x3
   140004502:	mov    rax,QWORD PTR [rbp-0x69]
   140004506:	mov    rcx,rbx
   140004509:	mov    QWORD PTR [rbp-0x69],rbx
   14000450d:	test   rax,rax
   140004510:	je     0x14000451e
   140004512:	mov    rcx,rax
   140004515:	call   0x140013924
   14000451a:	mov    rcx,QWORD PTR [rbp-0x69]
   14000451e:	call   0x1400137cc
   140004523:	mov    rax,QWORD PTR [rbp-0x79]
   140004527:	mov    rcx,rbx
   14000452a:	mov    QWORD PTR [rbp-0x79],rbx
   14000452e:	test   rax,rax
   140004531:	je     0x14000453f
   140004533:	mov    rcx,rax
   140004536:	call   0x140013924
   14000453b:	mov    rcx,QWORD PTR [rbp-0x79]
   14000453f:	call   0x1400137cc
   140004544:	jmp    0x140004558
   140004546:	lea    rcx,[rbp-0x19]
   14000454a:	call   0x1400048a0
   14000454f:	inc    rdi
   140004552:	inc    r14
   140004555:	inc    rsi
   140004558:	cmp    rdi,0xffffffffffffffff
   14000455c:	jne    0x140004475
   140004562:	mov    r14,QWORD PTR [rbp-0x59]
   140004566:	lea    rdx,[rbp-0x19]
   14000456a:	cmp    QWORD PTR [rbp-0x1],0x10
   14000456f:	cmovae rdx,QWORD PTR [rbp-0x19]
   140004574:	mov    r9d,0x2
   14000457a:	or     r8,0xffffffffffffffff
   14000457e:	lea    rcx,[rbp-0x51]
   140004582:	call   0x14000fb80
   140004587:	nop
   140004588:	lea    rcx,[rbp-0x51]
   14000458c:	call   0x140011370
   140004591:	nop
   140004592:	lea    rdx,[rbp-0x51]
   140004596:	mov    rcx,r14
   140004599:	call   0x14000fdb0
   14000459e:	nop
   14000459f:	mov    rax,QWORD PTR [rbp-0x31]
   1400045a3:	mov    rcx,rbx
   1400045a6:	mov    QWORD PTR [rbp-0x31],rbx
   1400045aa:	test   rax,rax
   1400045ad:	je     0x1400045bb
   1400045af:	mov    rcx,rax
   1400045b2:	call   0x140013924
   1400045b7:	mov    rcx,QWORD PTR [rbp-0x31]
   1400045bb:	call   0x1400137cc
   1400045c0:	mov    rcx,QWORD PTR [rbp-0x41]
   1400045c4:	mov    QWORD PTR [rbp-0x41],rbx
   1400045c8:	test   rcx,rcx
   1400045cb:	je     0x1400045d6
   1400045cd:	call   0x140013924
   1400045d2:	mov    rbx,QWORD PTR [rbp-0x41]
   1400045d6:	mov    rcx,rbx
   1400045d9:	call   0x1400137cc
   1400045de:	nop
   1400045df:	cmp    QWORD PTR [rbp-0x1],0x10
   1400045e4:	jb     0x1400045ef
   1400045e6:	mov    rcx,QWORD PTR [rbp-0x19]
   1400045ea:	call   0x1400137cc
   1400045ef:	mov    rax,r14
   1400045f2:	mov    rcx,QWORD PTR [rbp+0x7]
   1400045f6:	xor    rcx,rsp
   1400045f9:	call   0x1400130a0
   1400045fe:	add    rsp,0xc8
   140004605:	pop    r15
   140004607:	pop    r14
   140004609:	pop    r13
   14000460b:	pop    r12
   14000460d:	pop    rdi
   14000460e:	pop    rsi
   14000460f:	pop    rbx
   140004610:	pop    rbp
   140004611:	ret    
   140004612:	int3   
   140004613:	int3   
   140004614:	int3   
   140004615:	int3   
   140004616:	int3   
   140004617:	int3   
   140004618:	int3   
   140004619:	int3   
   14000461a:	int3   
   14000461b:	int3   
   14000461c:	int3   
   14000461d:	int3   
   14000461e:	int3   
   14000461f:	int3   
   140004620:	rex push rbx
   140004622:	sub    rsp,0xc0
   140004629:	mov    QWORD PTR [rsp+0x58],0xfffffffffffffffe
   140004632:	mov    rbx,rcx
   140004635:	call   0x140011320
   14000463a:	cmp    QWORD PTR [rbx+0x8],0x3
   14000463f:	jne    0x1400046f9
   140004645:	mov    edx,0x2
   14000464a:	mov    rcx,rbx
   14000464d:	call   0x14000fbd0
   140004652:	cmp    ax,0x41
   140004656:	jb     0x14000466b
   140004658:	mov    edx,0x2
   14000465d:	mov    rcx,rbx
   140004660:	call   0x14000fbd0
   140004665:	cmp    ax,0x46
   140004669:	jbe    0x1400046b7
   14000466b:	mov    edx,0x2
   140004670:	mov    rcx,rbx
   140004673:	call   0x14000fbd0
   140004678:	cmp    ax,0x61
   14000467c:	jb     0x140004691
   14000467e:	mov    edx,0x2
   140004683:	mov    rcx,rbx
   140004686:	call   0x14000fbd0
   14000468b:	cmp    ax,0x66
   14000468f:	jbe    0x1400046b7
   140004691:	mov    edx,0x2
   140004696:	mov    rcx,rbx
   140004699:	call   0x14000fbd0
   14000469e:	cmp    ax,0x30
   1400046a2:	jb     0x1400046f9
   1400046a4:	mov    edx,0x2
   1400046a9:	mov    rcx,rbx
   1400046ac:	call   0x14000fbd0
   1400046b1:	cmp    ax,0x39
   1400046b5:	ja     0x1400046f9
   1400046b7:	xor    r9d,r9d
   1400046ba:	or     r8,0xffffffffffffffff
   1400046be:	lea    rdx,[rip+0x2a5fb]        # 0x14002ecc0
   1400046c5:	lea    rcx,[rsp+0x60]
   1400046ca:	call   0x14000fb80
   1400046cf:	lea    r8,[rsp+0xd0]
   1400046d7:	mov    rdx,rax
   1400046da:	mov    rcx,rbx
   1400046dd:	call   0x140012020
   1400046e2:	cmp    eax,0x1
   1400046e5:	jne    0x1400046f9
   1400046e7:	mov    eax,DWORD PTR [rsp+0xd0]
   1400046ee:	cmp    eax,0xff
   1400046f3:	jbe    0x140004782
   1400046f9:	xor    r9d,r9d
   1400046fc:	or     r8,0xffffffffffffffff
   140004700:	lea    rdx,[rip+0x2a5c1]        # 0x14002ecc8
   140004707:	lea    rcx,[rsp+0x60]
   14000470c:	call   0x14000fb80
   140004711:	nop
   140004712:	mov    r8,rbx
   140004715:	mov    rdx,rax
   140004718:	lea    rcx,[rsp+0x90]
   140004720:	call   0x1400037a0
   140004725:	nop
   140004726:	lea    rcx,[rip+0x22e63]        # 0x140027590
   14000472d:	mov    QWORD PTR [rsp+0x20],rcx
   140004732:	lea    rcx,[rsp+0x28]
   140004737:	mov    QWORD PTR [rsp+0xd8],rcx
   14000473f:	xor    ecx,ecx
   140004741:	mov    DWORD PTR [rsp+0x28],ecx
   140004745:	mov    QWORD PTR [rsp+0x30],rcx
   14000474a:	mov    QWORD PTR [rsp+0x38],rcx
   14000474f:	mov    QWORD PTR [rsp+0x40],rcx
   140004754:	mov    QWORD PTR [rsp+0x48],rcx
   140004759:	mov    QWORD PTR [rsp+0x50],rcx
   14000475e:	or     r8,0xffffffffffffffff
   140004762:	mov    rdx,rax
   140004765:	lea    rcx,[rsp+0x28]
   14000476a:	call   0x140010560
   14000476f:	nop
   140004770:	lea    rdx,[rip+0x30df1]        # 0x140035568
   140004777:	lea    rcx,[rsp+0x20]
   14000477c:	call   0x14001436c
   140004781:	nop
   140004782:	add    rsp,0xc0
   140004789:	pop    rbx
   14000478a:	ret    
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	rex push rbx
   140004792:	sub    rsp,0x20
   140004796:	mov    rbx,rcx
   140004799:	mov    rcx,QWORD PTR [rcx]
   14000479c:	mov    QWORD PTR [rbx],0x0
   1400047a3:	test   rcx,rcx
   1400047a6:	je     0x1400047ad
   1400047a8:	call   0x140013924
   1400047ad:	mov    rcx,QWORD PTR [rbx]
   1400047b0:	add    rsp,0x20
   1400047b4:	pop    rbx
   1400047b5:	jmp    0x1400137cc
   1400047ba:	int3   
   1400047bb:	int3   
   1400047bc:	int3   
   1400047bd:	int3   
   1400047be:	int3   
   1400047bf:	int3   
   1400047c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400047c5:	mov    QWORD PTR [rsp+0x18],rsi
   1400047ca:	mov    QWORD PTR [rsp+0x20],rdi
   1400047cf:	push   r14
   1400047d1:	sub    rsp,0x30
   1400047d5:	mov    rbx,QWORD PTR [rcx]
   1400047d8:	mov    rsi,rdx
   1400047db:	mov    r14,rcx
   1400047de:	mov    rdi,QWORD PTR [rbx+0x8]
   1400047e2:	cmp    BYTE PTR [rdi+0x19],0x0
   1400047e6:	jne    0x140004819
   1400047e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400047f0:	lea    rcx,[rdi+0x20]
   1400047f4:	xor    r9d,r9d
   1400047f7:	xor    r8d,r8d
   1400047fa:	mov    rdx,rsi
   1400047fd:	call   0x1400108a0
   140004802:	test   ax,ax
   140004805:	jns    0x14000480d
   140004807:	mov    rdi,QWORD PTR [rdi+0x10]
   14000480b:	jmp    0x140004813
   14000480d:	mov    rbx,rdi
   140004810:	mov    rdi,QWORD PTR [rdi]
   140004813:	cmp    BYTE PTR [rdi+0x19],0x0
   140004817:	je     0x1400047f0
   140004819:	cmp    rbx,QWORD PTR [r14]
   14000481c:	je     0x14000483b
   14000481e:	lea    rdx,[rbx+0x20]
   140004822:	xor    r9d,r9d
   140004825:	xor    r8d,r8d
   140004828:	mov    rcx,rsi
   14000482b:	call   0x1400108a0
   140004830:	test   ax,ax
   140004833:	js     0x14000483b
   140004835:	lea    rax,[rbx+0x50]
   140004839:	jmp    0x14000486f
   14000483b:	lea    r8,[rsp+0x40]
   140004840:	mov    rcx,r14
   140004843:	mov    QWORD PTR [rsp+0x40],rsi
   140004848:	call   0x140005120
   14000484d:	lea    rdx,[rsp+0x40]
   140004852:	mov    r8,rbx
   140004855:	lea    r9,[rax+0x20]
   140004859:	mov    rcx,r14
   14000485c:	mov    QWORD PTR [rsp+0x20],rax
   140004861:	call   0x1400051d0
   140004866:	mov    rax,QWORD PTR [rsp+0x40]
   14000486b:	add    rax,0x50
   14000486f:	mov    rbx,QWORD PTR [rsp+0x48]
   140004874:	mov    rsi,QWORD PTR [rsp+0x50]
   140004879:	mov    rdi,QWORD PTR [rsp+0x58]
   14000487e:	add    rsp,0x30
   140004882:	pop    r14
   140004884:	ret    
   140004885:	int3   
   140004886:	int3   
   140004887:	int3   
   140004888:	int3   
   140004889:	int3   
   14000488a:	int3   
   14000488b:	int3   
   14000488c:	int3   
   14000488d:	int3   
   14000488e:	int3   
   14000488f:	int3   
   140004890:	mov    rcx,QWORD PTR [rcx]
   140004893:	jmp    0x1400137cc
   140004898:	int3   
   140004899:	int3   
   14000489a:	int3   
   14000489b:	int3   
   14000489c:	int3   
   14000489d:	int3   
   14000489e:	int3   
   14000489f:	int3   
   1400048a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400048a5:	push   rsi
   1400048a6:	sub    rsp,0x20
   1400048aa:	or     rax,0xffffffffffffffff
   1400048ae:	movzx  esi,r8b
   1400048b2:	mov    r8,QWORD PTR [rcx+0x10]
   1400048b6:	sub    rax,r8
   1400048b9:	mov    rbx,rcx
   1400048bc:	cmp    rax,0x1
   1400048c0:	jbe    0x140004971
   1400048c6:	mov    QWORD PTR [rsp+0x30],rdi
   1400048cb:	lea    rdi,[r8+0x1]
   1400048cf:	cmp    rdi,0xfffffffffffffffe
   1400048d3:	ja     0x14000497e
   1400048d9:	mov    rax,QWORD PTR [rcx+0x18]
   1400048dd:	cmp    rax,rdi
   1400048e0:	jae    0x1400048ff
   1400048e2:	mov    rdx,rdi
   1400048e5:	call   0x1400027b0
   1400048ea:	test   rdi,rdi
   1400048ed:	je     0x14000495e
   1400048ef:	cmp    QWORD PTR [rbx+0x18],0x10
   1400048f4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400048f8:	jb     0x140004940
   1400048fa:	mov    rax,QWORD PTR [rbx]
   1400048fd:	jmp    0x140004943
   1400048ff:	test   rdi,rdi
   140004902:	jne    0x1400048ef
   140004904:	mov    QWORD PTR [rcx+0x10],rdi
   140004908:	cmp    rax,0x10
   14000490c:	jb     0x140004927
   14000490e:	mov    rax,QWORD PTR [rcx]
   140004911:	mov    BYTE PTR [rax],dil
   140004914:	mov    rdi,QWORD PTR [rsp+0x30]
   140004919:	mov    rax,rbx
   14000491c:	mov    rbx,QWORD PTR [rsp+0x38]
   140004921:	add    rsp,0x20
   140004925:	pop    rsi
   140004926:	ret    
   140004927:	mov    rdi,QWORD PTR [rsp+0x30]
   14000492c:	mov    rax,rcx
   14000492f:	mov    BYTE PTR [rcx],0x0
   140004932:	mov    rax,rbx
   140004935:	mov    rbx,QWORD PTR [rsp+0x38]
   14000493a:	add    rsp,0x20
   14000493e:	pop    rsi
   14000493f:	ret    
   140004940:	mov    rax,rbx
   140004943:	mov    BYTE PTR [rax+rcx*1],sil
   140004947:	cmp    QWORD PTR [rbx+0x18],0x10
   14000494c:	mov    QWORD PTR [rbx+0x10],rdi
   140004950:	jb     0x140004957
   140004952:	mov    rax,QWORD PTR [rbx]
   140004955:	jmp    0x14000495a
   140004957:	mov    rax,rbx
   14000495a:	mov    BYTE PTR [rax+rdi*1],0x0
   14000495e:	mov    rdi,QWORD PTR [rsp+0x30]
   140004963:	mov    rax,rbx
   140004966:	mov    rbx,QWORD PTR [rsp+0x38]
   14000496b:	add    rsp,0x20
   14000496f:	pop    rsi
   140004970:	ret    
   140004971:	lea    rcx,[rip+0x2a2f8]        # 0x14002ec70
   140004978:	call   0x14001300c
   14000497d:	int3   
   14000497e:	lea    rcx,[rip+0x2a2eb]        # 0x14002ec70
   140004985:	call   0x14001300c
   14000498a:	int3   
   14000498b:	int3   
   14000498c:	int3   
   14000498d:	int3   
   14000498e:	int3   
   14000498f:	int3   
   140004990:	mov    QWORD PTR [rsp+0x10],rbx
   140004995:	mov    QWORD PTR [rsp+0x20],r9
   14000499a:	mov    QWORD PTR [rsp+0x18],r8
   14000499f:	push   rdi
   1400049a0:	sub    rsp,0x20
   1400049a4:	mov    rdi,rdx
   1400049a7:	mov    rdx,QWORD PTR [rcx]
   1400049aa:	mov    rbx,rcx
   1400049ad:	cmp    r8,QWORD PTR [rdx]
   1400049b0:	jne    0x1400049f3
   1400049b2:	cmp    r9,rdx
   1400049b5:	jne    0x1400049f3
   1400049b7:	mov    rdx,QWORD PTR [rdx+0x8]
   1400049bb:	call   0x140004f50
   1400049c0:	mov    rax,QWORD PTR [rbx]
   1400049c3:	mov    QWORD PTR [rax+0x8],rax
   1400049c7:	mov    rax,QWORD PTR [rbx]
   1400049ca:	mov    QWORD PTR [rax],rax
   1400049cd:	mov    rax,QWORD PTR [rbx]
   1400049d0:	mov    QWORD PTR [rax+0x10],rax
   1400049d4:	mov    rax,QWORD PTR [rbx]
   1400049d7:	mov    QWORD PTR [rbx+0x8],0x0
   1400049df:	mov    rcx,QWORD PTR [rax]
   1400049e2:	mov    rax,rdi
   1400049e5:	mov    QWORD PTR [rdi],rcx
   1400049e8:	mov    rbx,QWORD PTR [rsp+0x38]
   1400049ed:	add    rsp,0x20
   1400049f1:	pop    rdi
   1400049f2:	ret    
   1400049f3:	cmp    r8,r9
   1400049f6:	je     0x140004a79
   1400049fc:	nop    DWORD PTR [rax+0x0]
   140004a00:	cmp    BYTE PTR [r8+0x19],0x0
   140004a05:	mov    rax,r8
   140004a08:	jne    0x140004a5d
   140004a0a:	mov    rdx,QWORD PTR [r8+0x10]
   140004a0e:	cmp    BYTE PTR [rdx+0x19],0x0
   140004a12:	jne    0x140004a33
   140004a14:	mov    rcx,QWORD PTR [rdx]
   140004a17:	cmp    BYTE PTR [rcx+0x19],0x0
   140004a1b:	jne    0x140004a2c
   140004a1d:	nop    DWORD PTR [rax]
   140004a20:	mov    rdx,rcx
   140004a23:	mov    rcx,QWORD PTR [rcx]
   140004a26:	cmp    BYTE PTR [rcx+0x19],0x0
   140004a2a:	je     0x140004a20
   140004a2c:	mov    QWORD PTR [rsp+0x40],rdx
   140004a31:	jmp    0x140004a5d
   140004a33:	mov    rcx,QWORD PTR [r8+0x8]
   140004a37:	cmp    BYTE PTR [rcx+0x19],0x0
   140004a3b:	jne    0x140004a58
   140004a3d:	nop    DWORD PTR [rax]
   140004a40:	cmp    r8,QWORD PTR [rcx+0x10]
   140004a44:	jne    0x140004a58
   140004a46:	mov    QWORD PTR [rsp+0x40],rcx
   140004a4b:	mov    r8,rcx
   140004a4e:	mov    rcx,QWORD PTR [rcx+0x8]
   140004a52:	cmp    BYTE PTR [rcx+0x19],0x0
   140004a56:	je     0x140004a40
   140004a58:	mov    QWORD PTR [rsp+0x40],rcx
   140004a5d:	lea    rdx,[rsp+0x30]
   140004a62:	mov    r8,rax
   140004a65:	mov    rcx,rbx
   140004a68:	call   0x140004a90
   140004a6d:	mov    r8,QWORD PTR [rsp+0x40]
   140004a72:	cmp    r8,QWORD PTR [rsp+0x48]
   140004a77:	jne    0x140004a00
   140004a79:	mov    rbx,QWORD PTR [rsp+0x38]
   140004a7e:	mov    QWORD PTR [rdi],r8
   140004a81:	mov    rax,rdi
   140004a84:	add    rsp,0x20
   140004a88:	pop    rdi
   140004a89:	ret    
   140004a8a:	int3   
   140004a8b:	int3   
   140004a8c:	int3   
   140004a8d:	int3   
   140004a8e:	int3   
   140004a8f:	int3   
   140004a90:	mov    QWORD PTR [rsp+0x18],r8
   140004a95:	push   r14
   140004a97:	push   r15
   140004a99:	sub    rsp,0x28
   140004a9d:	cmp    BYTE PTR [r8+0x19],0x0
   140004aa2:	mov    QWORD PTR [rsp+0x40],rbx
   140004aa7:	mov    QWORD PTR [rsp+0x48],rsi
   140004aac:	mov    rsi,r8
   140004aaf:	mov    r15,rdx
   140004ab2:	mov    r14,rcx
   140004ab5:	jne    0x140004b10
   140004ab7:	mov    rax,QWORD PTR [r8+0x10]
   140004abb:	cmp    BYTE PTR [rax+0x19],0x0
   140004abf:	jne    0x140004ae3
   140004ac1:	mov    r8,rax
   140004ac4:	mov    rax,QWORD PTR [rax]
   140004ac7:	cmp    BYTE PTR [rax+0x19],0x0
   140004acb:	jne    0x140004adc
   140004acd:	nop    DWORD PTR [rax]
   140004ad0:	mov    r8,rax
   140004ad3:	mov    rax,QWORD PTR [rax]
   140004ad6:	cmp    BYTE PTR [rax+0x19],0x0
   140004ada:	je     0x140004ad0
   140004adc:	mov    QWORD PTR [rsp+0x50],r8
   140004ae1:	jmp    0x140004b10
   140004ae3:	mov    rax,QWORD PTR [r8+0x8]
   140004ae7:	cmp    BYTE PTR [rax+0x19],0x0
   140004aeb:	jne    0x140004b08
   140004aed:	nop    DWORD PTR [rax]
   140004af0:	cmp    r8,QWORD PTR [rax+0x10]
   140004af4:	jne    0x140004b08
   140004af6:	mov    QWORD PTR [rsp+0x50],rax
   140004afb:	mov    r8,rax
   140004afe:	mov    rax,QWORD PTR [rax+0x8]
   140004b02:	cmp    BYTE PTR [rax+0x19],0x0
   140004b06:	je     0x140004af0
   140004b08:	mov    r8,rax
   140004b0b:	mov    QWORD PTR [rsp+0x50],rax
   140004b10:	mov    rcx,QWORD PTR [rsi]
   140004b13:	mov    QWORD PTR [rsp+0x20],rdi
   140004b18:	cmp    BYTE PTR [rcx+0x19],0x0
   140004b1c:	je     0x140004b24
   140004b1e:	mov    rdi,QWORD PTR [rsi+0x10]
   140004b22:	jmp    0x140004b40
   140004b24:	mov    rax,QWORD PTR [rsi+0x10]
   140004b28:	cmp    BYTE PTR [rax+0x19],0x0
   140004b2c:	je     0x140004b33
   140004b2e:	mov    rdi,rcx
   140004b31:	jmp    0x140004b40
   140004b33:	mov    rdi,QWORD PTR [r8+0x10]
   140004b37:	cmp    r8,rsi
   140004b3a:	jne    0x140004be3
   140004b40:	cmp    BYTE PTR [rdi+0x19],0x0
   140004b44:	mov    rbx,QWORD PTR [rsi+0x8]
   140004b48:	jne    0x140004b4e
   140004b4a:	mov    QWORD PTR [rdi+0x8],rbx
   140004b4e:	mov    rax,QWORD PTR [r14]
   140004b51:	cmp    QWORD PTR [rax+0x8],rsi
   140004b55:	jne    0x140004b5d
   140004b57:	mov    QWORD PTR [rax+0x8],rdi
   140004b5b:	jmp    0x140004b6b
   140004b5d:	cmp    QWORD PTR [rbx],rsi
   140004b60:	jne    0x140004b67
   140004b62:	mov    QWORD PTR [rbx],rdi
   140004b65:	jmp    0x140004b6b
   140004b67:	mov    QWORD PTR [rbx+0x10],rdi
   140004b6b:	mov    rdx,QWORD PTR [r14]
   140004b6e:	cmp    QWORD PTR [rdx],rsi
   140004b71:	jne    0x140004b9f
   140004b73:	cmp    BYTE PTR [rdi+0x19],0x0
   140004b77:	je     0x140004b7e
   140004b79:	mov    rcx,rbx
   140004b7c:	jmp    0x140004b9c
   140004b7e:	mov    rax,QWORD PTR [rdi]
   140004b81:	mov    rcx,rdi
   140004b84:	cmp    BYTE PTR [rax+0x19],0x0
   140004b88:	jne    0x140004b9c
   140004b8a:	nop    WORD PTR [rax+rax*1+0x0]
   140004b90:	mov    rcx,rax
   140004b93:	mov    rax,QWORD PTR [rax]
   140004b96:	cmp    BYTE PTR [rax+0x19],0x0
   140004b9a:	je     0x140004b90
   140004b9c:	mov    QWORD PTR [rdx],rcx
   140004b9f:	mov    rdx,QWORD PTR [r14]
   140004ba2:	cmp    QWORD PTR [rdx+0x10],rsi
   140004ba6:	jne    0x140004c52
   140004bac:	cmp    BYTE PTR [rdi+0x19],0x0
   140004bb0:	je     0x140004bbe
   140004bb2:	mov    rcx,rbx
   140004bb5:	mov    QWORD PTR [rdx+0x10],rbx
   140004bb9:	jmp    0x140004c52
   140004bbe:	mov    rax,QWORD PTR [rdi+0x10]
   140004bc2:	mov    rcx,rdi
   140004bc5:	cmp    BYTE PTR [rax+0x19],0x0
   140004bc9:	jne    0x140004bdd
   140004bcb:	nop    DWORD PTR [rax+rax*1+0x0]
   140004bd0:	mov    rcx,rax
   140004bd3:	mov    rax,QWORD PTR [rax+0x10]
   140004bd7:	cmp    BYTE PTR [rax+0x19],0x0
   140004bdb:	je     0x140004bd0
   140004bdd:	mov    QWORD PTR [rdx+0x10],rcx
   140004be1:	jmp    0x140004c52
   140004be3:	mov    QWORD PTR [rcx+0x8],r8
   140004be7:	mov    rax,QWORD PTR [rsi]
   140004bea:	mov    QWORD PTR [r8],rax
   140004bed:	cmp    r8,QWORD PTR [rsi+0x10]
   140004bf1:	jne    0x140004bf8
   140004bf3:	mov    rbx,r8
   140004bf6:	jmp    0x140004c19
   140004bf8:	cmp    BYTE PTR [rdi+0x19],0x0
   140004bfc:	mov    rbx,QWORD PTR [r8+0x8]
   140004c00:	jne    0x140004c06
   140004c02:	mov    QWORD PTR [rdi+0x8],rbx
   140004c06:	mov    QWORD PTR [rbx],rdi
   140004c09:	mov    rax,QWORD PTR [rsi+0x10]
   140004c0d:	mov    QWORD PTR [r8+0x10],rax
   140004c11:	mov    rax,QWORD PTR [rsi+0x10]
   140004c15:	mov    QWORD PTR [rax+0x8],r8
   140004c19:	mov    rax,QWORD PTR [r14]
   140004c1c:	cmp    QWORD PTR [rax+0x8],rsi
   140004c20:	jne    0x140004c28
   140004c22:	mov    QWORD PTR [rax+0x8],r8
   140004c26:	jmp    0x140004c3a
   140004c28:	mov    rax,QWORD PTR [rsi+0x8]
   140004c2c:	cmp    QWORD PTR [rax],rsi
   140004c2f:	jne    0x140004c36
   140004c31:	mov    QWORD PTR [rax],r8
   140004c34:	jmp    0x140004c3a
   140004c36:	mov    QWORD PTR [rax+0x10],r8
   140004c3a:	mov    rax,QWORD PTR [rsi+0x8]
   140004c3e:	mov    QWORD PTR [r8+0x8],rax
   140004c42:	movzx  eax,BYTE PTR [rsi+0x18]
   140004c46:	movzx  ecx,BYTE PTR [r8+0x18]
   140004c4b:	mov    BYTE PTR [r8+0x18],al
   140004c4f:	mov    BYTE PTR [rsi+0x18],cl
   140004c52:	cmp    BYTE PTR [rsi+0x18],0x1
   140004c56:	jne    0x140004ea6
   140004c5c:	mov    rax,QWORD PTR [r14]
   140004c5f:	cmp    rdi,QWORD PTR [rax+0x8]
   140004c63:	je     0x140004ea2
   140004c69:	nop    DWORD PTR [rax+0x0]
   140004c70:	cmp    BYTE PTR [rdi+0x18],0x1
   140004c74:	jne    0x140004ea2
   140004c7a:	mov    rcx,QWORD PTR [rbx]
   140004c7d:	cmp    rdi,rcx
   140004c80:	jne    0x140004d75
   140004c86:	mov    rcx,QWORD PTR [rbx+0x10]
   140004c8a:	cmp    BYTE PTR [rcx+0x18],0x0
   140004c8e:	jne    0x140004ce4
   140004c90:	mov    BYTE PTR [rcx+0x18],0x1
   140004c94:	mov    rcx,QWORD PTR [rbx+0x10]
   140004c98:	mov    BYTE PTR [rbx+0x18],0x0
   140004c9c:	mov    rax,QWORD PTR [rcx]
   140004c9f:	mov    QWORD PTR [rbx+0x10],rax
   140004ca3:	mov    rax,QWORD PTR [rcx]
   140004ca6:	cmp    BYTE PTR [rax+0x19],0x0
   140004caa:	jne    0x140004cb0
   140004cac:	mov    QWORD PTR [rax+0x8],rbx
   140004cb0:	mov    rax,QWORD PTR [rbx+0x8]
   140004cb4:	mov    QWORD PTR [rcx+0x8],rax
   140004cb8:	mov    rax,QWORD PTR [r14]
   140004cbb:	cmp    rbx,QWORD PTR [rax+0x8]
   140004cbf:	jne    0x140004cc7
   140004cc1:	mov    QWORD PTR [rax+0x8],rcx
   140004cc5:	jmp    0x140004cd9
   140004cc7:	mov    rax,QWORD PTR [rbx+0x8]
   140004ccb:	cmp    rbx,QWORD PTR [rax]
   140004cce:	jne    0x140004cd5
   140004cd0:	mov    QWORD PTR [rax],rcx
   140004cd3:	jmp    0x140004cd9
   140004cd5:	mov    QWORD PTR [rax+0x10],rcx
   140004cd9:	mov    QWORD PTR [rcx],rbx
   140004cdc:	mov    QWORD PTR [rbx+0x8],rcx
   140004ce0:	mov    rcx,QWORD PTR [rbx+0x10]
   140004ce4:	cmp    BYTE PTR [rcx+0x19],0x0
   140004ce8:	jne    0x140004ded
   140004cee:	mov    rax,QWORD PTR [rcx]
   140004cf1:	cmp    BYTE PTR [rax+0x18],0x1
   140004cf5:	jne    0x140004d05
   140004cf7:	mov    rax,QWORD PTR [rcx+0x10]
   140004cfb:	cmp    BYTE PTR [rax+0x18],0x1
   140004cff:	je     0x140004de9
   140004d05:	mov    rax,QWORD PTR [rcx+0x10]
   140004d09:	cmp    BYTE PTR [rax+0x18],0x1
   140004d0d:	jne    0x140004d29
   140004d0f:	mov    rax,QWORD PTR [rcx]
   140004d12:	mov    rdx,rcx
   140004d15:	mov    BYTE PTR [rax+0x18],0x1
   140004d19:	mov    BYTE PTR [rcx+0x18],0x0
   140004d1d:	mov    rcx,r14
   140004d20:	call   0x140002ff0
   140004d25:	mov    rcx,QWORD PTR [rbx+0x10]
   140004d29:	movzx  eax,BYTE PTR [rbx+0x18]
   140004d2d:	mov    BYTE PTR [rcx+0x18],al
   140004d30:	mov    BYTE PTR [rbx+0x18],0x1
   140004d34:	mov    rax,QWORD PTR [rcx+0x10]
   140004d38:	mov    BYTE PTR [rax+0x18],0x1
   140004d3c:	mov    rcx,QWORD PTR [rbx+0x10]
   140004d40:	mov    rax,QWORD PTR [rcx]
   140004d43:	mov    QWORD PTR [rbx+0x10],rax
   140004d47:	mov    rax,QWORD PTR [rcx]
   140004d4a:	cmp    BYTE PTR [rax+0x19],0x0
   140004d4e:	jne    0x140004d54
   140004d50:	mov    QWORD PTR [rax+0x8],rbx
   140004d54:	mov    rax,QWORD PTR [rbx+0x8]
   140004d58:	mov    QWORD PTR [rcx+0x8],rax
   140004d5c:	mov    rax,QWORD PTR [r14]
   140004d5f:	cmp    rbx,QWORD PTR [rax+0x8]
   140004d63:	jne    0x140004e06
   140004d69:	mov    QWORD PTR [rax+0x8],rcx
   140004d6d:	mov    QWORD PTR [rcx],rbx
   140004d70:	jmp    0x140004e9e
   140004d75:	cmp    BYTE PTR [rcx+0x18],0x0
   140004d79:	jne    0x140004dd0
   140004d7b:	mov    BYTE PTR [rcx+0x18],0x1
   140004d7f:	mov    rcx,QWORD PTR [rbx]
   140004d82:	mov    BYTE PTR [rbx+0x18],0x0
   140004d86:	mov    rax,QWORD PTR [rcx+0x10]
   140004d8a:	mov    QWORD PTR [rbx],rax
   140004d8d:	mov    rax,QWORD PTR [rcx+0x10]
   140004d91:	cmp    BYTE PTR [rax+0x19],0x0
   140004d95:	jne    0x140004d9b
   140004d97:	mov    QWORD PTR [rax+0x8],rbx
   140004d9b:	mov    rax,QWORD PTR [rbx+0x8]
   140004d9f:	mov    QWORD PTR [rcx+0x8],rax
   140004da3:	mov    rax,QWORD PTR [r14]
   140004da6:	cmp    rbx,QWORD PTR [rax+0x8]
   140004daa:	jne    0x140004db2
   140004dac:	mov    QWORD PTR [rax+0x8],rcx
   140004db0:	jmp    0x140004dc5
   140004db2:	mov    rax,QWORD PTR [rbx+0x8]
   140004db6:	cmp    rbx,QWORD PTR [rax+0x10]
   140004dba:	jne    0x140004dc2
   140004dbc:	mov    QWORD PTR [rax+0x10],rcx
   140004dc0:	jmp    0x140004dc5
   140004dc2:	mov    QWORD PTR [rax],rcx
   140004dc5:	mov    QWORD PTR [rcx+0x10],rbx
   140004dc9:	mov    QWORD PTR [rbx+0x8],rcx
   140004dcd:	mov    rcx,QWORD PTR [rbx]
   140004dd0:	cmp    BYTE PTR [rcx+0x19],0x0
   140004dd4:	jne    0x140004ded
   140004dd6:	mov    rax,QWORD PTR [rcx+0x10]
   140004dda:	cmp    BYTE PTR [rax+0x18],0x1
   140004dde:	jne    0x140004e23
   140004de0:	mov    rax,QWORD PTR [rcx]
   140004de3:	cmp    BYTE PTR [rax+0x18],0x1
   140004de7:	jne    0x140004e23
   140004de9:	mov    BYTE PTR [rcx+0x18],0x0
   140004ded:	mov    rax,QWORD PTR [r14]
   140004df0:	mov    rdi,rbx
   140004df3:	mov    rbx,QWORD PTR [rbx+0x8]
   140004df7:	cmp    rdi,QWORD PTR [rax+0x8]
   140004dfb:	jne    0x140004c70
   140004e01:	jmp    0x140004ea2
   140004e06:	mov    rax,QWORD PTR [rbx+0x8]
   140004e0a:	cmp    rbx,QWORD PTR [rax]
   140004e0d:	jne    0x140004e1a
   140004e0f:	mov    QWORD PTR [rax],rcx
   140004e12:	mov    QWORD PTR [rcx],rbx
   140004e15:	jmp    0x140004e9e
   140004e1a:	mov    QWORD PTR [rax+0x10],rcx
   140004e1e:	mov    QWORD PTR [rcx],rbx
   140004e21:	jmp    0x140004e9e
   140004e23:	mov    rax,QWORD PTR [rcx]
   140004e26:	cmp    BYTE PTR [rax+0x18],0x1
   140004e2a:	jne    0x140004e46
   140004e2c:	mov    rax,QWORD PTR [rcx+0x10]
   140004e30:	mov    rdx,rcx
   140004e33:	mov    BYTE PTR [rax+0x18],0x1
   140004e37:	mov    BYTE PTR [rcx+0x18],0x0
   140004e3b:	mov    rcx,r14
   140004e3e:	call   0x140002f90
   140004e43:	mov    rcx,QWORD PTR [rbx]
   140004e46:	movzx  eax,BYTE PTR [rbx+0x18]
   140004e4a:	mov    BYTE PTR [rcx+0x18],al
   140004e4d:	mov    BYTE PTR [rbx+0x18],0x1
   140004e51:	mov    rax,QWORD PTR [rcx]
   140004e54:	mov    BYTE PTR [rax+0x18],0x1
   140004e58:	mov    rcx,QWORD PTR [rbx]
   140004e5b:	mov    rax,QWORD PTR [rcx+0x10]
   140004e5f:	mov    QWORD PTR [rbx],rax
   140004e62:	mov    rax,QWORD PTR [rcx+0x10]
   140004e66:	cmp    BYTE PTR [rax+0x19],0x0
   140004e6a:	jne    0x140004e70
   140004e6c:	mov    QWORD PTR [rax+0x8],rbx
   140004e70:	mov    rax,QWORD PTR [rbx+0x8]
   140004e74:	mov    QWORD PTR [rcx+0x8],rax
   140004e78:	mov    rax,QWORD PTR [r14]
   140004e7b:	cmp    rbx,QWORD PTR [rax+0x8]
   140004e7f:	jne    0x140004e87
   140004e81:	mov    QWORD PTR [rax+0x8],rcx
   140004e85:	jmp    0x140004e9a
   140004e87:	mov    rax,QWORD PTR [rbx+0x8]
   140004e8b:	cmp    rbx,QWORD PTR [rax+0x10]
   140004e8f:	jne    0x140004e97
   140004e91:	mov    QWORD PTR [rax+0x10],rcx
   140004e95:	jmp    0x140004e9a
   140004e97:	mov    QWORD PTR [rax],rcx
   140004e9a:	mov    QWORD PTR [rcx+0x10],rbx
   140004e9e:	mov    QWORD PTR [rbx+0x8],rcx
   140004ea2:	mov    BYTE PTR [rdi+0x18],0x1
   140004ea6:	mov    rcx,QWORD PTR [rsi+0x70]
   140004eaa:	mov    rdi,QWORD PTR [rsp+0x20]
   140004eaf:	xor    ebx,ebx
   140004eb1:	mov    QWORD PTR [rsi+0x70],rbx
   140004eb5:	test   rcx,rcx
   140004eb8:	je     0x140004ebf
   140004eba:	call   0x140013924
   140004ebf:	mov    rcx,QWORD PTR [rsi+0x70]
   140004ec3:	call   0x1400137cc
   140004ec8:	mov    rcx,QWORD PTR [rsi+0x60]
   140004ecc:	mov    QWORD PTR [rsi+0x60],rbx
   140004ed0:	test   rcx,rcx
   140004ed3:	je     0x140004eda
   140004ed5:	call   0x140013924
   140004eda:	mov    rcx,QWORD PTR [rsi+0x60]
   140004ede:	call   0x1400137cc
   140004ee3:	mov    rcx,QWORD PTR [rsi+0x40]
   140004ee7:	mov    QWORD PTR [rsi+0x40],rbx
   140004eeb:	test   rcx,rcx
   140004eee:	je     0x140004ef5
   140004ef0:	call   0x140013924
   140004ef5:	mov    rcx,QWORD PTR [rsi+0x40]
   140004ef9:	call   0x1400137cc
   140004efe:	mov    rcx,QWORD PTR [rsi+0x30]
   140004f02:	mov    QWORD PTR [rsi+0x30],rbx
   140004f06:	mov    rbx,QWORD PTR [rsp+0x40]
   140004f0b:	test   rcx,rcx
   140004f0e:	je     0x140004f15
   140004f10:	call   0x140013924
   140004f15:	mov    rcx,QWORD PTR [rsi+0x30]
   140004f19:	call   0x1400137cc
   140004f1e:	mov    rcx,rsi
   140004f21:	call   0x1400137cc
   140004f26:	mov    rax,QWORD PTR [r14+0x8]
   140004f2a:	mov    rsi,QWORD PTR [rsp+0x48]
   140004f2f:	test   rax,rax
   140004f32:	je     0x140004f3b
   140004f34:	dec    rax
   140004f37:	mov    QWORD PTR [r14+0x8],rax
   140004f3b:	mov    rax,QWORD PTR [rsp+0x50]
   140004f40:	mov    QWORD PTR [r15],rax
   140004f43:	mov    rax,r15
   140004f46:	add    rsp,0x28
   140004f4a:	pop    r15
   140004f4c:	pop    r14
   140004f4e:	ret    
   140004f4f:	int3   
   140004f50:	mov    QWORD PTR [rsp+0x10],rbx
   140004f55:	mov    QWORD PTR [rsp+0x18],rsi
   140004f5a:	push   rdi
   140004f5b:	sub    rsp,0x20
   140004f5f:	cmp    BYTE PTR [rdx+0x19],0x0
   140004f63:	mov    rbx,rdx
   140004f66:	mov    rsi,rcx
   140004f69:	mov    rdi,rdx
   140004f6c:	jne    0x140005015
   140004f72:	mov    QWORD PTR [rsp+0x30],rbp
   140004f77:	xor    ebp,ebp
   140004f79:	nop    DWORD PTR [rax+0x0]
   140004f80:	mov    rdx,QWORD PTR [rdi+0x10]
   140004f84:	mov    rcx,rsi
   140004f87:	call   0x140004f50
   140004f8c:	mov    rcx,QWORD PTR [rbx+0x70]
   140004f90:	mov    rdi,QWORD PTR [rdi]
   140004f93:	mov    QWORD PTR [rbx+0x70],rbp
   140004f97:	test   rcx,rcx
   140004f9a:	je     0x140004fa1
   140004f9c:	call   0x140013924
   140004fa1:	mov    rcx,QWORD PTR [rbx+0x70]
   140004fa5:	call   0x1400137cc
   140004faa:	mov    rcx,QWORD PTR [rbx+0x60]
   140004fae:	mov    QWORD PTR [rbx+0x60],rbp
   140004fb2:	test   rcx,rcx
   140004fb5:	je     0x140004fbc
   140004fb7:	call   0x140013924
   140004fbc:	mov    rcx,QWORD PTR [rbx+0x60]
   140004fc0:	call   0x1400137cc
   140004fc5:	mov    rcx,QWORD PTR [rbx+0x40]
   140004fc9:	mov    QWORD PTR [rbx+0x40],rbp
   140004fcd:	test   rcx,rcx
   140004fd0:	je     0x140004fd7
   140004fd2:	call   0x140013924
   140004fd7:	mov    rcx,QWORD PTR [rbx+0x40]
   140004fdb:	call   0x1400137cc
   140004fe0:	mov    rcx,QWORD PTR [rbx+0x30]
   140004fe4:	mov    QWORD PTR [rbx+0x30],rbp
   140004fe8:	test   rcx,rcx
   140004feb:	je     0x140004ff2
   140004fed:	call   0x140013924
   140004ff2:	mov    rcx,QWORD PTR [rbx+0x30]
   140004ff6:	call   0x1400137cc
   140004ffb:	mov    rcx,rbx
   140004ffe:	call   0x1400137cc
   140005003:	mov    rbx,rdi
   140005006:	cmp    BYTE PTR [rdi+0x19],bpl
   14000500a:	je     0x140004f80
   140005010:	mov    rbp,QWORD PTR [rsp+0x30]
   140005015:	mov    rbx,QWORD PTR [rsp+0x38]
   14000501a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000501f:	add    rsp,0x20
   140005023:	pop    rdi
   140005024:	ret    
   140005025:	int3   
   140005026:	int3   
   140005027:	int3   
   140005028:	int3   
   140005029:	int3   
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	sub    rsp,0x28
   140005034:	mov    ecx,0x80
   140005039:	call   0x1400138b8
   14000503e:	test   rax,rax
   140005041:	je     0x140005069
   140005043:	lea    rcx,[rax+0x8]
   140005047:	mov    QWORD PTR [rax],rax
   14000504a:	test   rcx,rcx
   14000504d:	je     0x140005052
   14000504f:	mov    QWORD PTR [rcx],rax
   140005052:	lea    rcx,[rax+0x10]
   140005056:	test   rcx,rcx
   140005059:	je     0x14000505e
   14000505b:	mov    QWORD PTR [rcx],rax
   14000505e:	mov    WORD PTR [rax+0x18],0x101
   140005064:	add    rsp,0x28
   140005068:	ret    
   140005069:	call   0x140012fc8
   14000506e:	int3   
   14000506f:	int3   
   140005070:	mov    QWORD PTR [rsp+0x8],rbx
   140005075:	mov    QWORD PTR [rsp+0x10],rsi
   14000507a:	push   rdi
   14000507b:	sub    rsp,0x20
   14000507f:	mov    rbx,QWORD PTR [rcx]
   140005082:	mov    rdi,rdx
   140005085:	mov    rdx,QWORD PTR [rdx]
   140005088:	mov    rdx,QWORD PTR [rdx+0x8]
   14000508c:	movzx  r9d,r8b
   140005090:	mov    r8,rbx
   140005093:	mov    rsi,rcx
   140005096:	call   0x1400054b0
   14000509b:	mov    QWORD PTR [rbx+0x8],rax
   14000509f:	mov    rax,QWORD PTR [rdi+0x8]
   1400050a3:	mov    rdx,QWORD PTR [rsi]
   1400050a6:	mov    QWORD PTR [rsi+0x8],rax
   1400050aa:	mov    rcx,QWORD PTR [rdx+0x8]
   1400050ae:	cmp    BYTE PTR [rcx+0x19],0x0
   1400050b2:	jne    0x140005101
   1400050b4:	mov    rax,QWORD PTR [rcx]
   1400050b7:	cmp    BYTE PTR [rax+0x19],0x0
   1400050bb:	jne    0x1400050cc
   1400050bd:	nop    DWORD PTR [rax]
   1400050c0:	mov    rcx,rax
   1400050c3:	mov    rax,QWORD PTR [rax]
   1400050c6:	cmp    BYTE PTR [rax+0x19],0x0
   1400050ca:	je     0x1400050c0
   1400050cc:	mov    QWORD PTR [rdx],rcx
   1400050cf:	mov    rdx,QWORD PTR [rsi]
   1400050d2:	mov    rcx,QWORD PTR [rdx+0x8]
   1400050d6:	mov    rax,QWORD PTR [rcx+0x10]
   1400050da:	cmp    BYTE PTR [rax+0x19],0x0
   1400050de:	jne    0x1400050ed
   1400050e0:	mov    rcx,rax
   1400050e3:	mov    rax,QWORD PTR [rax+0x10]
   1400050e7:	cmp    BYTE PTR [rax+0x19],0x0
   1400050eb:	je     0x1400050e0
   1400050ed:	mov    QWORD PTR [rdx+0x10],rcx
   1400050f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400050f6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400050fb:	add    rsp,0x20
   1400050ff:	pop    rdi
   140005100:	ret    
   140005101:	mov    rbx,QWORD PTR [rsp+0x30]
   140005106:	mov    QWORD PTR [rdx],rdx
   140005109:	mov    rax,QWORD PTR [rsi]
   14000510c:	mov    rsi,QWORD PTR [rsp+0x38]
   140005111:	mov    QWORD PTR [rax+0x10],rax
   140005115:	add    rsp,0x20
   140005119:	pop    rdi
   14000511a:	ret    
   14000511b:	int3   
   14000511c:	int3   
   14000511d:	int3   
   14000511e:	int3   
   14000511f:	int3   
   140005120:	mov    QWORD PTR [rsp+0x20],r9
   140005125:	mov    QWORD PTR [rsp+0x10],rdx
   14000512a:	push   rdi
   14000512b:	sub    rsp,0x40
   14000512f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005138:	mov    QWORD PTR [rsp+0x50],rbx
   14000513d:	mov    QWORD PTR [rsp+0x60],rsi
   140005142:	mov    rsi,r8
   140005145:	call   0x140005550
   14000514a:	mov    rdi,rax
   14000514d:	mov    QWORD PTR [rsp+0x68],rax
   140005152:	mov    WORD PTR [rax+0x18],0x0
   140005158:	lea    rbx,[rax+0x20]
   14000515c:	mov    QWORD PTR [rsp+0x58],rbx
   140005161:	mov    QWORD PTR [rsp+0x28],rbx
   140005166:	test   rbx,rbx
   140005169:	je     0x1400051af
   14000516b:	mov    rdx,QWORD PTR [rsi]
   14000516e:	mov    QWORD PTR [rsp+0x30],rbx
   140005173:	xor    esi,esi
   140005175:	mov    DWORD PTR [rbx],esi
   140005177:	mov    QWORD PTR [rbx+0x8],rsi
   14000517b:	mov    QWORD PTR [rbx+0x10],rsi
   14000517f:	mov    QWORD PTR [rbx+0x18],rsi
   140005183:	mov    QWORD PTR [rbx+0x20],rsi
   140005187:	mov    QWORD PTR [rbx+0x28],rsi
   14000518b:	or     r8,0xffffffffffffffff
   14000518f:	mov    rcx,rbx
   140005192:	call   0x140010560
   140005197:	nop
   140005198:	mov    DWORD PTR [rbx+0x30],esi
   14000519b:	mov    QWORD PTR [rbx+0x38],rsi
   14000519f:	mov    QWORD PTR [rbx+0x40],rsi
   1400051a3:	mov    QWORD PTR [rbx+0x48],rsi
   1400051a7:	mov    QWORD PTR [rbx+0x50],rsi
   1400051ab:	mov    QWORD PTR [rbx+0x58],rsi
   1400051af:	mov    rax,rdi
   1400051b2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400051b7:	mov    rsi,QWORD PTR [rsp+0x60]
   1400051bc:	add    rsp,0x40
   1400051c0:	pop    rdi
   1400051c1:	ret    
   1400051c2:	int3   
   1400051c3:	int3   
   1400051c4:	int3   
   1400051c5:	int3   
   1400051c6:	int3   
   1400051c7:	int3   
   1400051c8:	int3   
   1400051c9:	int3   
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	int3   
   1400051cd:	int3   
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	mov    QWORD PTR [rsp+0x18],r8
   1400051d5:	push   r14
   1400051d7:	sub    rsp,0x50
   1400051db:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400051e4:	mov    QWORD PTR [rsp+0x60],rbx
   1400051e9:	mov    QWORD PTR [rsp+0x68],rsi
   1400051ee:	mov    QWORD PTR [rsp+0x78],rdi
   1400051f3:	mov    r14,r9
   1400051f6:	mov    rdi,rdx
   1400051f9:	mov    rsi,rcx
   1400051fc:	cmp    QWORD PTR [rcx+0x8],0x0
   140005201:	jne    0x140005223
   140005203:	mov    rax,QWORD PTR [rsp+0x80]
   14000520b:	mov    QWORD PTR [rsp+0x28],rax
   140005210:	mov    r9,QWORD PTR [rcx]
   140005213:	mov    r8b,0x1
   140005216:	call   0x1400055a0
   14000521b:	mov    rax,rdi
   14000521e:	jmp    0x14000548f
   140005223:	mov    rax,QWORD PTR [rcx]
   140005226:	xor    r9d,r9d
   140005229:	cmp    r8,QWORD PTR [rax]
   14000522c:	jne    0x14000526e
   14000522e:	lea    rdx,[r8+0x20]
   140005232:	xor    r8d,r8d
   140005235:	mov    rcx,r14
   140005238:	call   0x1400108a0
   14000523d:	test   ax,ax
   140005240:	jns    0x140005469
   140005246:	mov    rax,QWORD PTR [rsp+0x80]
   14000524e:	mov    QWORD PTR [rsp+0x28],rax
   140005253:	mov    r9,QWORD PTR [rsp+0x70]
   140005258:	mov    r8b,0x1
   14000525b:	mov    rdx,rdi
   14000525e:	mov    rcx,rsi
   140005261:	call   0x1400055a0
   140005266:	mov    rax,rdi
   140005269:	jmp    0x14000548f
   14000526e:	cmp    r8,rax
   140005271:	jne    0x1400052b9
   140005273:	mov    rcx,QWORD PTR [rax+0x10]
   140005277:	add    rcx,0x20
   14000527b:	xor    r8d,r8d
   14000527e:	mov    rdx,r14
   140005281:	call   0x1400108a0
   140005286:	test   ax,ax
   140005289:	jns    0x140005469
   14000528f:	mov    r9,QWORD PTR [rsi]
   140005292:	mov    rax,QWORD PTR [rsp+0x80]
   14000529a:	mov    QWORD PTR [rsp+0x28],rax
   14000529f:	mov    r9,QWORD PTR [r9+0x10]
   1400052a3:	xor    r8d,r8d
   1400052a6:	mov    rdx,rdi
   1400052a9:	mov    rcx,rsi
   1400052ac:	call   0x1400055a0
   1400052b1:	mov    rax,rdi
   1400052b4:	jmp    0x14000548f
   1400052b9:	lea    rdx,[r8+0x20]
   1400052bd:	xor    r8d,r8d
   1400052c0:	mov    rcx,r14
   1400052c3:	call   0x1400108a0
   1400052c8:	test   ax,ax
   1400052cb:	jns    0x140005399
   1400052d1:	mov    rax,QWORD PTR [rsp+0x70]
   1400052d6:	cmp    BYTE PTR [rax+0x19],0x0
   1400052da:	je     0x1400052e2
   1400052dc:	mov    rbx,QWORD PTR [rax+0x10]
   1400052e0:	jmp    0x14000533d
   1400052e2:	mov    rbx,QWORD PTR [rax]
   1400052e5:	cmp    BYTE PTR [rbx+0x19],0x0
   1400052e9:	jne    0x14000530f
   1400052eb:	mov    rax,QWORD PTR [rbx+0x10]
   1400052ef:	cmp    BYTE PTR [rax+0x19],0x0
   1400052f3:	jne    0x14000533d
   1400052f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005300:	mov    rbx,rax
   140005303:	mov    rax,QWORD PTR [rax+0x10]
   140005307:	cmp    BYTE PTR [rax+0x19],0x0
   14000530b:	je     0x140005300
   14000530d:	jmp    0x14000533d
   14000530f:	mov    rcx,QWORD PTR [rax+0x8]
   140005313:	cmp    BYTE PTR [rcx+0x19],0x0
   140005317:	jne    0x140005332
   140005319:	nop    DWORD PTR [rax+0x0]
   140005320:	cmp    rax,QWORD PTR [rcx]
   140005323:	jne    0x140005332
   140005325:	mov    rax,rcx
   140005328:	mov    rcx,QWORD PTR [rcx+0x8]
   14000532c:	cmp    BYTE PTR [rcx+0x19],0x0
   140005330:	je     0x140005320
   140005332:	mov    rbx,rax
   140005335:	cmp    BYTE PTR [rax+0x19],0x0
   140005339:	cmove  rbx,rcx
   14000533d:	lea    rcx,[rbx+0x20]
   140005341:	xor    r9d,r9d
   140005344:	xor    r8d,r8d
   140005347:	mov    rdx,r14
   14000534a:	call   0x1400108a0
   14000534f:	test   ax,ax
   140005352:	jns    0x140005399
   140005354:	mov    rax,QWORD PTR [rbx+0x10]
   140005358:	mov    rdx,rdi
   14000535b:	mov    rcx,rsi
   14000535e:	cmp    BYTE PTR [rax+0x19],0x0
   140005362:	mov    rax,QWORD PTR [rsp+0x80]
   14000536a:	mov    QWORD PTR [rsp+0x28],rax
   14000536f:	je     0x140005384
   140005371:	mov    r9,rbx
   140005374:	xor    r8d,r8d
   140005377:	call   0x1400055a0
   14000537c:	mov    rax,rdi
   14000537f:	jmp    0x14000548f
   140005384:	mov    r9,QWORD PTR [rsp+0x70]
   140005389:	mov    r8b,0x1
   14000538c:	call   0x1400055a0
   140005391:	mov    rax,rdi
   140005394:	jmp    0x14000548f
   140005399:	mov    rcx,QWORD PTR [rsp+0x70]
   14000539e:	add    rcx,0x20
   1400053a2:	xor    r9d,r9d
   1400053a5:	xor    r8d,r8d
   1400053a8:	mov    rdx,r14
   1400053ab:	call   0x1400108a0
   1400053b0:	test   ax,ax
   1400053b3:	jns    0x140005469
   1400053b9:	mov    r9,QWORD PTR [rsp+0x70]
   1400053be:	mov    rbx,r9
   1400053c1:	cmp    BYTE PTR [r9+0x19],0x0
   1400053c6:	jne    0x14000540e
   1400053c8:	mov    rax,QWORD PTR [r9+0x10]
   1400053cc:	cmp    BYTE PTR [rax+0x19],0x0
   1400053d0:	jne    0x1400053ee
   1400053d2:	mov    rbx,rax
   1400053d5:	mov    rax,QWORD PTR [rax]
   1400053d8:	cmp    BYTE PTR [rax+0x19],0x0
   1400053dc:	jne    0x14000540e
   1400053de:	xchg   ax,ax
   1400053e0:	mov    rbx,rax
   1400053e3:	mov    rax,QWORD PTR [rax]
   1400053e6:	cmp    BYTE PTR [rax+0x19],0x0
   1400053ea:	je     0x1400053e0
   1400053ec:	jmp    0x14000540e
   1400053ee:	mov    rax,QWORD PTR [r9+0x8]
   1400053f2:	cmp    BYTE PTR [rax+0x19],0x0
   1400053f6:	jne    0x14000540b
   1400053f8:	cmp    rbx,QWORD PTR [rax+0x10]
   1400053fc:	jne    0x14000540b
   1400053fe:	mov    rbx,rax
   140005401:	mov    rax,QWORD PTR [rax+0x8]
   140005405:	cmp    BYTE PTR [rax+0x19],0x0
   140005409:	je     0x1400053f8
   14000540b:	mov    rbx,rax
   14000540e:	cmp    rbx,QWORD PTR [rsi]
   140005411:	je     0x14000542f
   140005413:	lea    rdx,[rbx+0x20]
   140005417:	xor    r9d,r9d
   14000541a:	xor    r8d,r8d
   14000541d:	mov    rcx,r14
   140005420:	call   0x1400108a0
   140005425:	test   ax,ax
   140005428:	jns    0x140005469
   14000542a:	mov    r9,QWORD PTR [rsp+0x70]
   14000542f:	mov    rax,QWORD PTR [r9+0x10]
   140005433:	mov    rdx,rdi
   140005436:	mov    rcx,rsi
   140005439:	cmp    BYTE PTR [rax+0x19],0x0
   14000543d:	mov    rax,QWORD PTR [rsp+0x80]
   140005445:	mov    QWORD PTR [rsp+0x28],rax
   14000544a:	je     0x140005459
   14000544c:	xor    r8d,r8d
   14000544f:	call   0x1400055a0
   140005454:	mov    rax,rdi
   140005457:	jmp    0x14000548f
   140005459:	mov    r9,rbx
   14000545c:	mov    r8b,0x1
   14000545f:	call   0x1400055a0
   140005464:	mov    rax,rdi
   140005467:	jmp    0x14000548f
   140005469:	mov    rax,QWORD PTR [rsp+0x80]
   140005471:	mov    QWORD PTR [rsp+0x20],rax
   140005476:	mov    r9,r14
   140005479:	lea    rdx,[rsp+0x38]
   14000547e:	mov    rcx,rsi
   140005481:	call   0x140005850
   140005486:	mov    rcx,QWORD PTR [rax]
   140005489:	mov    QWORD PTR [rdi],rcx
   14000548c:	mov    rax,rdi
   14000548f:	mov    rbx,QWORD PTR [rsp+0x60]
   140005494:	mov    rsi,QWORD PTR [rsp+0x68]
   140005499:	mov    rdi,QWORD PTR [rsp+0x78]
   14000549e:	add    rsp,0x50
   1400054a2:	pop    r14
   1400054a4:	ret    
   1400054a5:	int3   
   1400054a6:	int3   
   1400054a7:	int3   
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	mov    BYTE PTR [rsp+0x20],r9b
   1400054b5:	mov    QWORD PTR [rsp+0x18],r8
   1400054ba:	mov    QWORD PTR [rsp+0x10],rdx
   1400054bf:	mov    QWORD PTR [rsp+0x8],rcx
   1400054c4:	push   rbx
   1400054c5:	push   rsi
   1400054c6:	push   rdi
   1400054c7:	sub    rsp,0x30
   1400054cb:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400054d4:	mov    rsi,rcx
   1400054d7:	mov    rdi,QWORD PTR [rcx]
   1400054da:	cmp    BYTE PTR [rdx+0x19],0x0
   1400054de:	jne    0x140005543
   1400054e0:	add    rdx,0x20
   1400054e4:	call   0x140005ab0
   1400054e9:	mov    rbx,rax
   1400054ec:	mov    rax,QWORD PTR [rsp+0x60]
   1400054f1:	mov    QWORD PTR [rbx+0x8],rax
   1400054f5:	mov    rcx,QWORD PTR [rsp+0x58]
   1400054fa:	movzx  eax,BYTE PTR [rcx+0x18]
   1400054fe:	mov    BYTE PTR [rbx+0x18],al
   140005501:	cmp    BYTE PTR [rdi+0x19],0x0
   140005505:	cmovne rdi,rbx
   140005509:	mov    QWORD PTR [rsp+0x20],rdi
   14000550e:	movzx  r9d,BYTE PTR [rsp+0x68]
   140005514:	mov    r8,rbx
   140005517:	mov    rdx,QWORD PTR [rcx]
   14000551a:	mov    rcx,rsi
   14000551d:	call   0x1400054b0
   140005522:	mov    QWORD PTR [rbx],rax
   140005525:	movzx  r9d,BYTE PTR [rsp+0x68]
   14000552b:	mov    r8,rbx
   14000552e:	mov    rdx,QWORD PTR [rsp+0x58]
   140005533:	mov    rdx,QWORD PTR [rdx+0x10]
   140005537:	mov    rcx,rsi
   14000553a:	call   0x1400054b0
   14000553f:	mov    QWORD PTR [rbx+0x10],rax
   140005543:	mov    rax,rdi
   140005546:	add    rsp,0x30
   14000554a:	pop    rdi
   14000554b:	pop    rsi
   14000554c:	pop    rbx
   14000554d:	ret    
   14000554e:	int3   
   14000554f:	int3   
   140005550:	rex push rbx
   140005552:	sub    rsp,0x20
   140005556:	mov    rbx,rcx
   140005559:	mov    ecx,0x80
   14000555e:	call   0x1400138b8
   140005563:	mov    rdx,rax
   140005566:	test   rax,rax
   140005569:	je     0x140005598
   14000556b:	mov    rax,QWORD PTR [rbx]
   14000556e:	lea    rcx,[rdx+0x8]
   140005572:	mov    QWORD PTR [rdx],rax
   140005575:	test   rcx,rcx
   140005578:	je     0x140005580
   14000557a:	mov    rax,QWORD PTR [rbx]
   14000557d:	mov    QWORD PTR [rcx],rax
   140005580:	lea    rcx,[rdx+0x10]
   140005584:	test   rcx,rcx
   140005587:	je     0x14000558f
   140005589:	mov    rax,QWORD PTR [rbx]
   14000558c:	mov    QWORD PTR [rcx],rax
   14000558f:	mov    rax,rdx
   140005592:	add    rsp,0x20
   140005596:	pop    rbx
   140005597:	ret    
   140005598:	call   0x140012fc8
   14000559d:	int3   
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	rex push rbx
   1400055a2:	sub    rsp,0x20
   1400055a6:	mov    rax,QWORD PTR [rcx+0x8]
   1400055aa:	mov    r10,rcx
   1400055ad:	movabs rcx,0x1fffffffffffffe
   1400055b7:	mov    rbx,rdx
   1400055ba:	cmp    rax,rcx
   1400055bd:	jae    0x140005828
   1400055c3:	mov    r11,QWORD PTR [rsp+0x58]
   1400055c8:	inc    rax
   1400055cb:	mov    QWORD PTR [r10+0x8],rax
   1400055cf:	mov    QWORD PTR [r11+0x8],r9
   1400055d3:	mov    rax,QWORD PTR [r10]
   1400055d6:	cmp    r9,rax
   1400055d9:	jne    0x1400055ea
   1400055db:	mov    QWORD PTR [rax+0x8],r11
   1400055df:	mov    rax,QWORD PTR [r10]
   1400055e2:	mov    QWORD PTR [rax],r11
   1400055e5:	mov    rax,QWORD PTR [r10]
   1400055e8:	jmp    0x14000560c
   1400055ea:	test   r8b,r8b
   1400055ed:	je     0x1400055ff
   1400055ef:	mov    QWORD PTR [r9],r11
   1400055f2:	mov    rax,QWORD PTR [r10]
   1400055f5:	cmp    r9,QWORD PTR [rax]
   1400055f8:	jne    0x140005610
   1400055fa:	mov    QWORD PTR [rax],r11
   1400055fd:	jmp    0x140005610
   1400055ff:	mov    QWORD PTR [r9+0x10],r11
   140005603:	mov    rax,QWORD PTR [r10]
   140005606:	cmp    r9,QWORD PTR [rax+0x10]
   14000560a:	jne    0x140005610
   14000560c:	mov    QWORD PTR [rax+0x10],r11
   140005610:	mov    rcx,QWORD PTR [r11+0x8]
   140005614:	mov    rax,r11
   140005617:	cmp    BYTE PTR [rcx+0x18],0x0
   14000561b:	jne    0x140005811
   140005621:	mov    rcx,QWORD PTR [rax+0x8]
   140005625:	mov    r8,QWORD PTR [rcx+0x8]
   140005629:	mov    rdx,QWORD PTR [r8]
   14000562c:	cmp    rcx,rdx
   14000562f:	jne    0x140005726
   140005635:	mov    rdx,QWORD PTR [r8+0x10]
   140005639:	cmp    BYTE PTR [rdx+0x18],0x0
   14000563d:	jne    0x140005660
   14000563f:	mov    BYTE PTR [rcx+0x18],0x1
   140005643:	mov    BYTE PTR [rdx+0x18],0x1
   140005647:	mov    rcx,QWORD PTR [rax+0x8]
   14000564b:	mov    rdx,QWORD PTR [rcx+0x8]
   14000564f:	mov    BYTE PTR [rdx+0x18],0x0
   140005653:	mov    rcx,QWORD PTR [rax+0x8]
   140005657:	mov    rax,QWORD PTR [rcx+0x8]
   14000565b:	jmp    0x140005803
   140005660:	cmp    rax,QWORD PTR [rcx+0x10]
   140005664:	jne    0x1400056b1
   140005666:	mov    rdx,QWORD PTR [rcx+0x10]
   14000566a:	mov    rax,rcx
   14000566d:	mov    rcx,QWORD PTR [rdx]
   140005670:	mov    QWORD PTR [rax+0x10],rcx
   140005674:	mov    rcx,QWORD PTR [rdx]
   140005677:	cmp    BYTE PTR [rcx+0x19],0x0
   14000567b:	jne    0x140005681
   14000567d:	mov    QWORD PTR [rcx+0x8],rax
   140005681:	mov    rcx,QWORD PTR [rax+0x8]
   140005685:	mov    QWORD PTR [rdx+0x8],rcx
   140005689:	mov    rcx,QWORD PTR [r10]
   14000568c:	cmp    rax,QWORD PTR [rcx+0x8]
   140005690:	jne    0x140005698
   140005692:	mov    QWORD PTR [rcx+0x8],rdx
   140005696:	jmp    0x1400056aa
   140005698:	mov    rcx,QWORD PTR [rax+0x8]
   14000569c:	cmp    rax,QWORD PTR [rcx]
   14000569f:	jne    0x1400056a6
   1400056a1:	mov    QWORD PTR [rcx],rdx
   1400056a4:	jmp    0x1400056aa
   1400056a6:	mov    QWORD PTR [rcx+0x10],rdx
   1400056aa:	mov    QWORD PTR [rdx],rax
   1400056ad:	mov    QWORD PTR [rax+0x8],rdx
   1400056b1:	mov    rcx,QWORD PTR [rax+0x8]
   1400056b5:	mov    BYTE PTR [rcx+0x18],0x1
   1400056b9:	mov    rcx,QWORD PTR [rax+0x8]
   1400056bd:	mov    rdx,QWORD PTR [rcx+0x8]
   1400056c1:	mov    BYTE PTR [rdx+0x18],0x0
   1400056c5:	mov    rcx,QWORD PTR [rax+0x8]
   1400056c9:	mov    rdx,QWORD PTR [rcx+0x8]
   1400056cd:	mov    r8,QWORD PTR [rdx]
   1400056d0:	mov    rcx,QWORD PTR [r8+0x10]
   1400056d4:	mov    QWORD PTR [rdx],rcx
   1400056d7:	mov    rcx,QWORD PTR [r8+0x10]
   1400056db:	cmp    BYTE PTR [rcx+0x19],0x0
   1400056df:	jne    0x1400056e5
   1400056e1:	mov    QWORD PTR [rcx+0x8],rdx
   1400056e5:	mov    rcx,QWORD PTR [rdx+0x8]
   1400056e9:	mov    QWORD PTR [r8+0x8],rcx
   1400056ed:	mov    rcx,QWORD PTR [r10]
   1400056f0:	cmp    rdx,QWORD PTR [rcx+0x8]
   1400056f4:	jne    0x140005703
   1400056f6:	mov    QWORD PTR [rcx+0x8],r8
   1400056fa:	mov    QWORD PTR [r8+0x10],rdx
   1400056fe:	jmp    0x1400057ff
   140005703:	mov    rcx,QWORD PTR [rdx+0x8]
   140005707:	cmp    rdx,QWORD PTR [rcx+0x10]
   14000570b:	jne    0x14000571a
   14000570d:	mov    QWORD PTR [rcx+0x10],r8
   140005711:	mov    QWORD PTR [r8+0x10],rdx
   140005715:	jmp    0x1400057ff
   14000571a:	mov    QWORD PTR [rcx],r8
   14000571d:	mov    QWORD PTR [r8+0x10],rdx
   140005721:	jmp    0x1400057ff
   140005726:	cmp    BYTE PTR [rdx+0x18],0x0
   14000572a:	jne    0x14000574d
   14000572c:	mov    BYTE PTR [rcx+0x18],0x1
   140005730:	mov    BYTE PTR [rdx+0x18],0x1
   140005734:	mov    rcx,QWORD PTR [rax+0x8]
   140005738:	mov    rdx,QWORD PTR [rcx+0x8]
   14000573c:	mov    BYTE PTR [rdx+0x18],0x0
   140005740:	mov    rcx,QWORD PTR [rax+0x8]
   140005744:	mov    rax,QWORD PTR [rcx+0x8]
   140005748:	jmp    0x140005803
   14000574d:	cmp    rax,QWORD PTR [rcx]
   140005750:	jne    0x14000579f
   140005752:	mov    rdx,QWORD PTR [rcx]
   140005755:	mov    rax,rcx
   140005758:	mov    rcx,QWORD PTR [rdx+0x10]
   14000575c:	mov    QWORD PTR [rax],rcx
   14000575f:	mov    rcx,QWORD PTR [rdx+0x10]
   140005763:	cmp    BYTE PTR [rcx+0x19],0x0
   140005767:	jne    0x14000576d
   140005769:	mov    QWORD PTR [rcx+0x8],rax
   14000576d:	mov    rcx,QWORD PTR [rax+0x8]
   140005771:	mov    QWORD PTR [rdx+0x8],rcx
   140005775:	mov    rcx,QWORD PTR [r10]
   140005778:	cmp    rax,QWORD PTR [rcx+0x8]
   14000577c:	jne    0x140005784
   14000577e:	mov    QWORD PTR [rcx+0x8],rdx
   140005782:	jmp    0x140005797
   140005784:	mov    rcx,QWORD PTR [rax+0x8]
   140005788:	cmp    rax,QWORD PTR [rcx+0x10]
   14000578c:	jne    0x140005794
   14000578e:	mov    QWORD PTR [rcx+0x10],rdx
   140005792:	jmp    0x140005797
   140005794:	mov    QWORD PTR [rcx],rdx
   140005797:	mov    QWORD PTR [rdx+0x10],rax
   14000579b:	mov    QWORD PTR [rax+0x8],rdx
   14000579f:	mov    rcx,QWORD PTR [rax+0x8]
   1400057a3:	mov    BYTE PTR [rcx+0x18],0x1
   1400057a7:	mov    rcx,QWORD PTR [rax+0x8]
   1400057ab:	mov    rdx,QWORD PTR [rcx+0x8]
   1400057af:	mov    BYTE PTR [rdx+0x18],0x0
   1400057b3:	mov    rcx,QWORD PTR [rax+0x8]
   1400057b7:	mov    rdx,QWORD PTR [rcx+0x8]
   1400057bb:	mov    r8,QWORD PTR [rdx+0x10]
   1400057bf:	mov    rcx,QWORD PTR [r8]
   1400057c2:	mov    QWORD PTR [rdx+0x10],rcx
   1400057c6:	mov    rcx,QWORD PTR [r8]
   1400057c9:	cmp    BYTE PTR [rcx+0x19],0x0
   1400057cd:	jne    0x1400057d3
   1400057cf:	mov    QWORD PTR [rcx+0x8],rdx
   1400057d3:	mov    rcx,QWORD PTR [rdx+0x8]
   1400057d7:	mov    QWORD PTR [r8+0x8],rcx
   1400057db:	mov    rcx,QWORD PTR [r10]
   1400057de:	cmp    rdx,QWORD PTR [rcx+0x8]
   1400057e2:	jne    0x1400057ea
   1400057e4:	mov    QWORD PTR [rcx+0x8],r8
   1400057e8:	jmp    0x1400057fc
   1400057ea:	mov    rcx,QWORD PTR [rdx+0x8]
   1400057ee:	cmp    rdx,QWORD PTR [rcx]
   1400057f1:	jne    0x1400057f8
   1400057f3:	mov    QWORD PTR [rcx],r8
   1400057f6:	jmp    0x1400057fc
   1400057f8:	mov    QWORD PTR [rcx+0x10],r8
   1400057fc:	mov    QWORD PTR [r8],rdx
   1400057ff:	mov    QWORD PTR [rdx+0x8],r8
   140005803:	mov    rcx,QWORD PTR [rax+0x8]
   140005807:	cmp    BYTE PTR [rcx+0x18],0x0
   14000580b:	je     0x140005621
   140005811:	mov    rax,QWORD PTR [r10]
   140005814:	mov    QWORD PTR [rbx],r11
   140005817:	mov    rcx,QWORD PTR [rax+0x8]
   14000581b:	mov    rax,rbx
   14000581e:	mov    BYTE PTR [rcx+0x18],0x1
   140005822:	add    rsp,0x20
   140005826:	pop    rbx
   140005827:	ret    
   140005828:	mov    rbx,QWORD PTR [rsp+0x58]
   14000582d:	lea    rcx,[rbx+0x20]
   140005831:	call   0x140005a20
   140005836:	mov    rcx,rbx
   140005839:	call   0x1400137cc
   14000583e:	lea    rcx,[rip+0x29453]        # 0x14002ec98
   140005845:	call   0x14001300c
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	rex push rdi
   140005852:	push   r12
   140005854:	push   r13
   140005856:	push   r14
   140005858:	push   r15
   14000585a:	sub    rsp,0x40
   14000585e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140005867:	mov    QWORD PTR [rsp+0x78],rbx
   14000586c:	mov    QWORD PTR [rsp+0x80],rsi
   140005874:	mov    r15,r9
   140005877:	mov    r14,rdx
   14000587a:	mov    r12,rcx
   14000587d:	xor    r13b,r13b
   140005880:	mov    rsi,QWORD PTR [rcx]
   140005883:	mov    rbx,QWORD PTR [rsi+0x8]
   140005887:	mov    dil,0x1
   14000588a:	nop    WORD PTR [rax+rax*1+0x0]
   140005890:	cmp    BYTE PTR [rbx+0x19],0x0
   140005894:	jne    0x1400058dc
   140005896:	mov    rsi,rbx
   140005899:	xor    r9d,r9d
   14000589c:	xor    r8d,r8d
   14000589f:	test   r13b,r13b
   1400058a2:	je     0x1400058b9
   1400058a4:	lea    rcx,[rbx+0x20]
   1400058a8:	mov    rdx,r15
   1400058ab:	call   0x1400108a0
   1400058b0:	test   ax,ax
   1400058b3:	setns  dil
   1400058b7:	jmp    0x1400058cc
   1400058b9:	lea    rdx,[rbx+0x20]
   1400058bd:	mov    rcx,r15
   1400058c0:	call   0x1400108a0
   1400058c5:	test   ax,ax
   1400058c8:	sets   dil
   1400058cc:	test   dil,dil
   1400058cf:	je     0x1400058d6
   1400058d1:	mov    rbx,QWORD PTR [rbx]
   1400058d4:	jmp    0x140005890
   1400058d6:	mov    rbx,QWORD PTR [rbx+0x10]
   1400058da:	jmp    0x140005890
   1400058dc:	mov    rbx,rsi
   1400058df:	test   dil,dil
   1400058e2:	je     0x14000598a
   1400058e8:	mov    rax,QWORD PTR [r12]
   1400058ec:	cmp    rsi,QWORD PTR [rax]
   1400058ef:	jne    0x140005924
   1400058f1:	mov    rax,QWORD PTR [rsp+0x90]
   1400058f9:	mov    QWORD PTR [rsp+0x28],rax
   1400058fe:	mov    r9,rsi
   140005901:	mov    r8b,0x1
   140005904:	lea    rdx,[rsp+0x70]
   140005909:	mov    rcx,r12
   14000590c:	call   0x1400055a0
   140005911:	mov    rax,QWORD PTR [rax]
   140005914:	mov    QWORD PTR [r14],rax
   140005917:	mov    BYTE PTR [r14+0x8],0x1
   14000591c:	mov    rax,r14
   14000591f:	jmp    0x1400059f6
   140005924:	cmp    BYTE PTR [rsi+0x19],0x0
   140005928:	je     0x140005930
   14000592a:	mov    rbx,QWORD PTR [rsi+0x10]
   14000592e:	jmp    0x14000598a
   140005930:	mov    rax,QWORD PTR [rsi]
   140005933:	cmp    BYTE PTR [rax+0x19],0x0
   140005937:	jne    0x14000595f
   140005939:	mov    rbx,rax
   14000593c:	mov    rax,QWORD PTR [rax+0x10]
   140005940:	cmp    BYTE PTR [rax+0x19],0x0
   140005944:	jne    0x14000598a
   140005946:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005950:	mov    rbx,rax
   140005953:	mov    rax,QWORD PTR [rax+0x10]
   140005957:	cmp    BYTE PTR [rax+0x19],0x0
   14000595b:	je     0x140005950
   14000595d:	jmp    0x14000598a
   14000595f:	mov    rax,QWORD PTR [rsi+0x8]
   140005963:	cmp    BYTE PTR [rax+0x19],0x0
   140005967:	jne    0x140005982
   140005969:	nop    DWORD PTR [rax+0x0]
   140005970:	cmp    rbx,QWORD PTR [rax]
   140005973:	jne    0x140005982
   140005975:	mov    rbx,rax
   140005978:	mov    rax,QWORD PTR [rax+0x8]
   14000597c:	cmp    BYTE PTR [rax+0x19],0x0
   140005980:	je     0x140005970
   140005982:	cmp    BYTE PTR [rbx+0x19],0x0
   140005986:	cmove  rbx,rax
   14000598a:	lea    rcx,[rbx+0x20]
   14000598e:	xor    r9d,r9d
   140005991:	xor    r8d,r8d
   140005994:	mov    rdx,r15
   140005997:	call   0x1400108a0
   14000599c:	test   ax,ax
   14000599f:	jns    0x1400059d2
   1400059a1:	mov    rax,QWORD PTR [rsp+0x90]
   1400059a9:	mov    QWORD PTR [rsp+0x28],rax
   1400059ae:	mov    r9,rsi
   1400059b1:	movzx  r8d,dil
   1400059b5:	lea    rdx,[rsp+0x70]
   1400059ba:	mov    rcx,r12
   1400059bd:	call   0x1400055a0
   1400059c2:	mov    rax,QWORD PTR [rax]
   1400059c5:	mov    QWORD PTR [r14],rax
   1400059c8:	mov    BYTE PTR [r14+0x8],0x1
   1400059cd:	mov    rax,r14
   1400059d0:	jmp    0x1400059f6
   1400059d2:	mov    rdi,QWORD PTR [rsp+0x90]
   1400059da:	lea    rcx,[rdi+0x20]
   1400059de:	call   0x140005a20
   1400059e3:	mov    rcx,rdi
   1400059e6:	call   0x1400137cc
   1400059eb:	mov    QWORD PTR [r14],rbx
   1400059ee:	mov    BYTE PTR [r14+0x8],0x0
   1400059f3:	mov    rax,r14
   1400059f6:	mov    rbx,QWORD PTR [rsp+0x78]
   1400059fb:	mov    rsi,QWORD PTR [rsp+0x80]
   140005a03:	add    rsp,0x40
   140005a07:	pop    r15
   140005a09:	pop    r14
   140005a0b:	pop    r13
   140005a0d:	pop    r12
   140005a0f:	pop    rdi
   140005a10:	ret    
   140005a11:	int3   
   140005a12:	int3   
   140005a13:	int3   
   140005a14:	int3   
   140005a15:	int3   
   140005a16:	int3   
   140005a17:	int3   
   140005a18:	int3   
   140005a19:	int3   
   140005a1a:	int3   
   140005a1b:	int3   
   140005a1c:	int3   
   140005a1d:	int3   
   140005a1e:	int3   
   140005a1f:	int3   
   140005a20:	mov    QWORD PTR [rsp+0x8],rbx
   140005a25:	push   rdi
   140005a26:	sub    rsp,0x20
   140005a2a:	mov    rbx,rcx
   140005a2d:	mov    rcx,QWORD PTR [rcx+0x50]
   140005a31:	xor    edi,edi
   140005a33:	mov    QWORD PTR [rbx+0x50],rdi
   140005a37:	test   rcx,rcx
   140005a3a:	je     0x140005a41
   140005a3c:	call   0x140013924
   140005a41:	mov    rcx,QWORD PTR [rbx+0x50]
   140005a45:	call   0x1400137cc
   140005a4a:	mov    rcx,QWORD PTR [rbx+0x40]
   140005a4e:	mov    QWORD PTR [rbx+0x40],rdi
   140005a52:	test   rcx,rcx
   140005a55:	je     0x140005a5c
   140005a57:	call   0x140013924
   140005a5c:	mov    rcx,QWORD PTR [rbx+0x40]
   140005a60:	call   0x1400137cc
   140005a65:	mov    rcx,QWORD PTR [rbx+0x20]
   140005a69:	mov    QWORD PTR [rbx+0x20],rdi
   140005a6d:	test   rcx,rcx
   140005a70:	je     0x140005a77
   140005a72:	call   0x140013924
   140005a77:	mov    rcx,QWORD PTR [rbx+0x20]
   140005a7b:	call   0x1400137cc
   140005a80:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a84:	mov    QWORD PTR [rbx+0x10],rdi
   140005a88:	test   rcx,rcx
   140005a8b:	je     0x140005a92
   140005a8d:	call   0x140013924
   140005a92:	mov    rcx,QWORD PTR [rbx+0x10]
   140005a96:	mov    rbx,QWORD PTR [rsp+0x30]
   140005a9b:	add    rsp,0x20
   140005a9f:	pop    rdi
   140005aa0:	jmp    0x1400137cc
   140005aa5:	int3   
   140005aa6:	int3   
   140005aa7:	int3   
   140005aa8:	int3   
   140005aa9:	int3   
   140005aaa:	int3   
   140005aab:	int3   
   140005aac:	int3   
   140005aad:	int3   
   140005aae:	int3   
   140005aaf:	int3   
   140005ab0:	rex push rdi
   140005ab2:	sub    rsp,0x30
   140005ab6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005abf:	mov    QWORD PTR [rsp+0x40],rbx
   140005ac4:	mov    rdi,rdx
   140005ac7:	call   0x140005550
   140005acc:	mov    rbx,rax
   140005acf:	mov    QWORD PTR [rsp+0x50],rax
   140005ad4:	mov    WORD PTR [rax+0x18],0x0
   140005ada:	lea    rcx,[rax+0x20]
   140005ade:	mov    QWORD PTR [rsp+0x58],rcx
   140005ae3:	mov    QWORD PTR [rsp+0x28],rcx
   140005ae8:	test   rcx,rcx
   140005aeb:	je     0x140005af6
   140005aed:	mov    rdx,rdi
   140005af0:	call   0x140005b10
   140005af5:	nop
   140005af6:	mov    rax,rbx
   140005af9:	mov    rbx,QWORD PTR [rsp+0x40]
   140005afe:	add    rsp,0x30
   140005b02:	pop    rdi
   140005b03:	ret    
   140005b04:	int3   
   140005b05:	int3   
   140005b06:	int3   
   140005b07:	int3   
   140005b08:	int3   
   140005b09:	int3   
   140005b0a:	int3   
   140005b0b:	int3   
   140005b0c:	int3   
   140005b0d:	int3   
   140005b0e:	int3   
   140005b0f:	int3   
   140005b10:	mov    QWORD PTR [rsp+0x8],rcx
   140005b15:	push   rdi
   140005b16:	sub    rsp,0x30
   140005b1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005b23:	mov    QWORD PTR [rsp+0x50],rbx
   140005b28:	mov    QWORD PTR [rsp+0x58],rsi
   140005b2d:	mov    rbx,rdx
   140005b30:	mov    rdi,rcx
   140005b33:	mov    QWORD PTR [rsp+0x48],rcx
   140005b38:	xor    esi,esi
   140005b3a:	mov    DWORD PTR [rcx],esi
   140005b3c:	mov    QWORD PTR [rcx+0x8],rsi
   140005b40:	mov    QWORD PTR [rcx+0x10],rsi
   140005b44:	mov    QWORD PTR [rcx+0x18],rsi
   140005b48:	mov    QWORD PTR [rcx+0x20],rsi
   140005b4c:	mov    QWORD PTR [rcx+0x28],rsi
   140005b50:	or     r8,0xffffffffffffffff
   140005b54:	call   0x140010560
   140005b59:	nop
   140005b5a:	lea    rcx,[rdi+0x30]
   140005b5e:	mov    QWORD PTR [rsp+0x48],rcx
   140005b63:	mov    DWORD PTR [rcx],esi
   140005b65:	mov    QWORD PTR [rcx+0x8],rsi
   140005b69:	mov    QWORD PTR [rcx+0x10],rsi
   140005b6d:	mov    QWORD PTR [rcx+0x18],rsi
   140005b71:	mov    QWORD PTR [rcx+0x20],rsi
   140005b75:	mov    QWORD PTR [rcx+0x28],rsi
   140005b79:	lea    rdx,[rbx+0x30]
   140005b7d:	or     r8,0xffffffffffffffff
   140005b81:	call   0x140010560
   140005b86:	nop
   140005b87:	mov    rax,rdi
   140005b8a:	mov    rbx,QWORD PTR [rsp+0x50]
   140005b8f:	mov    rsi,QWORD PTR [rsp+0x58]
   140005b94:	add    rsp,0x30
   140005b98:	pop    rdi
   140005b99:	ret    
   140005b9a:	int3   
   140005b9b:	int3   
   140005b9c:	int3   
   140005b9d:	int3   
   140005b9e:	int3   
   140005b9f:	int3   
   140005ba0:	mov    QWORD PTR [rsp+0x18],rbx
   140005ba5:	mov    QWORD PTR [rsp+0x20],rsi
   140005baa:	push   rdi
   140005bab:	sub    rsp,0x150
   140005bb2:	mov    rax,QWORD PTR [rip+0x31457]        # 0x140037010
   140005bb9:	xor    rax,rsp
   140005bbc:	mov    QWORD PTR [rsp+0x140],rax
   140005bc4:	xor    esi,esi
   140005bc6:	movzx  ebx,cx
   140005bc9:	movzx  edi,dx
   140005bcc:	lea    rcx,[rsp+0x36]
   140005bd1:	xor    edx,edx
   140005bd3:	mov    r8d,0xfe
   140005bd9:	mov    QWORD PTR [rsp+0x20],0x11c
   140005be2:	mov    QWORD PTR [rsp+0x28],rsi
   140005be7:	mov    DWORD PTR [rsp+0x30],esi
   140005beb:	mov    WORD PTR [rsp+0x34],si
   140005bf0:	call   0x140014d80
   140005bf5:	lea    edx,[rsi+0x2]
   140005bf8:	mov    r8b,0x3
   140005bfb:	xor    ecx,ecx
   140005bfd:	mov    QWORD PTR [rsp+0x134],rsi
   140005c05:	call   QWORD PTR [rip+0x214b5]        # 0x1400270c0
   140005c0b:	lea    edx,[rsi+0x1]
   140005c0e:	mov    r8b,0x3
   140005c11:	mov    rcx,rax
   140005c14:	call   QWORD PTR [rip+0x214a6]        # 0x1400270c0
   140005c1a:	lea    edx,[rsi+0x20]
   140005c1d:	mov    r8b,0x3
   140005c20:	mov    rcx,rax
   140005c23:	call   QWORD PTR [rip+0x21497]        # 0x1400270c0
   140005c29:	lea    edx,[rsi+0x23]
   140005c2c:	lea    rcx,[rsp+0x20]
   140005c31:	mov    r8,rax
   140005c34:	mov    DWORD PTR [rsp+0x24],ebx
   140005c38:	mov    DWORD PTR [rsp+0x28],edi
   140005c3c:	mov    WORD PTR [rsp+0x134],si
   140005c44:	call   QWORD PTR [rip+0x2147e]        # 0x1400270c8
   140005c4a:	test   eax,eax
   140005c4c:	setne  al
   140005c4f:	mov    rcx,QWORD PTR [rsp+0x140]
   140005c57:	xor    rcx,rsp
   140005c5a:	call   0x1400130a0
   140005c5f:	lea    r11,[rsp+0x150]
   140005c67:	mov    rbx,QWORD PTR [r11+0x20]
   140005c6b:	mov    rsi,QWORD PTR [r11+0x28]
   140005c6f:	mov    rsp,r11
   140005c72:	pop    rdi
   140005c73:	ret    
   140005c74:	int3   
   140005c75:	int3   
   140005c76:	int3   
   140005c77:	int3   
   140005c78:	int3   
   140005c79:	int3   
   140005c7a:	int3   
   140005c7b:	int3   
   140005c7c:	int3   
   140005c7d:	int3   
   140005c7e:	int3   
   140005c7f:	int3   
   140005c80:	rex push rbx
   140005c82:	sub    rsp,0x20
   140005c86:	mov    ebx,DWORD PTR [rip+0x34628]        # 0x14003a2b4
   140005c8c:	test   ebx,ebx
   140005c8e:	jne    0x140005dcb
   140005c94:	lea    edx,[rbx+0x4]
   140005c97:	lea    ecx,[rbx+0x6]
   140005c9a:	call   0x140005ba0
   140005c9f:	test   al,al
   140005ca1:	je     0x140005cb6
   140005ca3:	mov    ebx,0x6d
   140005ca8:	mov    DWORD PTR [rip+0x34606],ebx        # 0x14003a2b4
   140005cae:	mov    eax,ebx
   140005cb0:	add    rsp,0x20
   140005cb4:	pop    rbx
   140005cb5:	ret    
   140005cb6:	mov    edx,0x3
   140005cbb:	lea    ecx,[rdx+0x3]
   140005cbe:	call   0x140005ba0
   140005cc3:	test   al,al
   140005cc5:	je     0x140005cda
   140005cc7:	mov    ebx,0x6b
   140005ccc:	mov    DWORD PTR [rip+0x345e2],ebx        # 0x14003a2b4
   140005cd2:	mov    eax,ebx
   140005cd4:	add    rsp,0x20
   140005cd8:	pop    rbx
   140005cd9:	ret    
   140005cda:	mov    edx,0x2
   140005cdf:	lea    ecx,[rdx+0x4]
   140005ce2:	call   0x140005ba0
   140005ce7:	test   al,al
   140005ce9:	je     0x140005cfe
   140005ceb:	mov    ebx,0x6a
   140005cf0:	mov    DWORD PTR [rip+0x345be],ebx        # 0x14003a2b4
   140005cf6:	mov    eax,ebx
   140005cf8:	add    rsp,0x20
   140005cfc:	pop    rbx
   140005cfd:	ret    
   140005cfe:	mov    ebx,0x1
   140005d03:	mov    edx,ebx
   140005d05:	lea    ecx,[rbx+0x5]
   140005d08:	call   0x140005ba0
   140005d0d:	test   al,al
   140005d0f:	je     0x140005d24
   140005d11:	mov    ebx,0x69
   140005d16:	mov    DWORD PTR [rip+0x34598],ebx        # 0x14003a2b4
   140005d1c:	mov    eax,ebx
   140005d1e:	add    rsp,0x20
   140005d22:	pop    rbx
   140005d23:	ret    
   140005d24:	xor    edx,edx
   140005d26:	lea    ecx,[rdx+0x6]
   140005d29:	call   0x140005ba0
   140005d2e:	test   al,al
   140005d30:	je     0x140005d45
   140005d32:	mov    ebx,0x68
   140005d37:	mov    DWORD PTR [rip+0x34577],ebx        # 0x14003a2b4
   140005d3d:	mov    eax,ebx
   140005d3f:	add    rsp,0x20
   140005d43:	pop    rbx
   140005d44:	ret    
   140005d45:	mov    edx,0x3
   140005d4a:	lea    ecx,[rdx+0x2]
   140005d4d:	call   0x140005ba0
   140005d52:	test   al,al
   140005d54:	je     0x140005d69
   140005d56:	mov    ebx,0x67
   140005d5b:	mov    DWORD PTR [rip+0x34553],ebx        # 0x14003a2b4
   140005d61:	mov    eax,ebx
   140005d63:	add    rsp,0x20
   140005d67:	pop    rbx
   140005d68:	ret    
   140005d69:	mov    edx,0x2
   140005d6e:	lea    ecx,[rdx+0x3]
   140005d71:	call   0x140005ba0
   140005d76:	test   al,al
   140005d78:	je     0x140005d8d
   140005d7a:	mov    ebx,0x66
   140005d7f:	mov    DWORD PTR [rip+0x3452f],ebx        # 0x14003a2b4
   140005d85:	mov    eax,ebx
   140005d87:	add    rsp,0x20
   140005d8b:	pop    rbx
   140005d8c:	ret    
   140005d8d:	mov    edx,ebx
   140005d8f:	mov    ecx,0x5
   140005d94:	call   0x140005ba0
   140005d99:	test   al,al
   140005d9b:	je     0x140005db0
   140005d9d:	mov    ebx,0x65
   140005da2:	mov    DWORD PTR [rip+0x3450c],ebx        # 0x14003a2b4
   140005da8:	mov    eax,ebx
   140005daa:	add    rsp,0x20
   140005dae:	pop    rbx
   140005daf:	ret    
   140005db0:	xor    edx,edx
   140005db2:	mov    cx,0x5
   140005db6:	call   0x140005ba0
   140005dbb:	mov    ecx,0x64
   140005dc0:	test   al,al
   140005dc2:	cmovne ebx,ecx
   140005dc5:	mov    DWORD PTR [rip+0x344e9],ebx        # 0x14003a2b4
   140005dcb:	mov    eax,ebx
   140005dcd:	add    rsp,0x20
   140005dd1:	pop    rbx
   140005dd2:	ret    
   140005dd3:	int3   
   140005dd4:	int3   
   140005dd5:	int3   
   140005dd6:	int3   
   140005dd7:	int3   
   140005dd8:	int3   
   140005dd9:	int3   
   140005dda:	int3   
   140005ddb:	int3   
   140005ddc:	int3   
   140005ddd:	int3   
   140005dde:	int3   
   140005ddf:	int3   
   140005de0:	cmp    DWORD PTR [rcx+0x8],0x0
   140005de4:	je     0x140005df5
   140005de6:	mov    DWORD PTR [rcx+0x8],0x0
   140005ded:	mov    rcx,QWORD PTR [rcx]
   140005df0:	jmp    0x1400126f0
   140005df5:	ret    
   140005df6:	int3   
   140005df7:	int3   
   140005df8:	int3   
   140005df9:	int3   
   140005dfa:	int3   
   140005dfb:	int3   
   140005dfc:	int3   
   140005dfd:	int3   
   140005dfe:	int3   
   140005dff:	int3   
   140005e00:	mov    QWORD PTR [rsp+0x8],rcx
   140005e05:	push   rdi
   140005e06:	sub    rsp,0x30
   140005e0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005e13:	mov    QWORD PTR [rsp+0x48],rbx
   140005e18:	mov    rbx,rcx
   140005e1b:	lea    rax,[rip+0x28f46]        # 0x14002ed68
   140005e22:	mov    QWORD PTR [rcx],rax
   140005e25:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   140005e2a:	je     0x140005e6b
   140005e2c:	add    rcx,0x48
   140005e30:	call   0x1400126b0
   140005e35:	mov    rcx,QWORD PTR [rbx+0x8]
   140005e39:	cmp    rcx,0xffffffffffffffff
   140005e3d:	je     0x140005e61
   140005e3f:	call   QWORD PTR [rip+0x212cb]        # 0x140027110
   140005e45:	mov    rcx,QWORD PTR [rbx+0x8]
   140005e49:	call   QWORD PTR [rip+0x21209]        # 0x140027058
   140005e4f:	mov    rcx,QWORD PTR [rbx+0x8]
   140005e53:	call   QWORD PTR [rip+0x21247]        # 0x1400270a0
   140005e59:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   140005e61:	lea    rcx,[rbx+0x48]
   140005e65:	call   0x1400126f0
   140005e6a:	nop
   140005e6b:	lea    rcx,[rbx+0x48]
   140005e6f:	call   0x140012580
   140005e74:	nop
   140005e75:	mov    rcx,QWORD PTR [rbx+0x38]
   140005e79:	xor    edi,edi
   140005e7b:	mov    QWORD PTR [rbx+0x38],rdi
   140005e7f:	test   rcx,rcx
   140005e82:	je     0x140005e89
   140005e84:	call   0x140013924
   140005e89:	mov    rcx,QWORD PTR [rbx+0x38]
   140005e8d:	call   0x1400137cc
   140005e92:	mov    rcx,QWORD PTR [rbx+0x28]
   140005e96:	mov    QWORD PTR [rbx+0x28],rdi
   140005e9a:	test   rcx,rcx
   140005e9d:	je     0x140005ea4
   140005e9f:	call   0x140013924
   140005ea4:	mov    rcx,QWORD PTR [rbx+0x28]
   140005ea8:	mov    rbx,QWORD PTR [rsp+0x48]
   140005ead:	add    rsp,0x30
   140005eb1:	pop    rdi
   140005eb2:	jmp    0x1400137cc
   140005eb7:	int3   
   140005eb8:	int3   
   140005eb9:	int3   
   140005eba:	int3   
   140005ebb:	int3   
   140005ebc:	int3   
   140005ebd:	int3   
   140005ebe:	int3   
   140005ebf:	int3   
   140005ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ec5:	push   rdi
   140005ec6:	sub    rsp,0x20
   140005eca:	mov    ebx,edx
   140005ecc:	mov    rdi,rcx
   140005ecf:	call   0x140005e00
   140005ed4:	test   bl,0x1
   140005ed7:	je     0x140005ee1
   140005ed9:	mov    rcx,rdi
   140005edc:	call   0x1400137cc
   140005ee1:	mov    rax,rdi
   140005ee4:	mov    rbx,QWORD PTR [rsp+0x30]
   140005ee9:	add    rsp,0x20
   140005eed:	pop    rdi
   140005eee:	ret    
   140005eef:	int3   
   140005ef0:	jmp    0x140005e00
   140005ef5:	int3   
   140005ef6:	int3   
   140005ef7:	int3   
   140005ef8:	int3   
   140005ef9:	int3   
   140005efa:	int3   
   140005efb:	int3   
   140005efc:	int3   
   140005efd:	int3   
   140005efe:	int3   
   140005eff:	int3   
   140005f00:	rex.W jmp QWORD PTR [rip+0x212b9]        # 0x1400271c0
   140005f07:	int3   
   140005f08:	int3   
   140005f09:	int3   
   140005f0a:	int3   
   140005f0b:	int3   
   140005f0c:	int3   
   140005f0d:	int3   
   140005f0e:	int3   
   140005f0f:	int3   
   140005f10:	mov    QWORD PTR [rsp+0x8],rcx
   140005f15:	push   rdi
   140005f16:	sub    rsp,0x30
   140005f1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005f23:	mov    QWORD PTR [rsp+0x48],rbx
   140005f28:	mov    QWORD PTR [rsp+0x50],rsi
   140005f2d:	mov    rdi,rdx
   140005f30:	mov    rsi,rcx
   140005f33:	call   0x140007960
   140005f38:	lea    rax,[rip+0x28e59]        # 0x14002ed98
   140005f3f:	mov    QWORD PTR [rsi],rax
   140005f42:	lea    rcx,[rsi+0x58]
   140005f46:	call   0x1400123b0
   140005f4b:	nop
   140005f4c:	lea    rax,[rip+0x28ddd]        # 0x14002ed30
   140005f53:	mov    QWORD PTR [rsi],rax
   140005f56:	lea    rax,[rip+0x28e73]        # 0x14002edd0
   140005f5d:	mov    QWORD PTR [rsi+0x58],rax
   140005f61:	mov    rax,QWORD PTR [rsp+0x60]
   140005f66:	mov    QWORD PTR [rsi+0x80],rax
   140005f6d:	lea    rbx,[rsi+0x88]
   140005f74:	mov    QWORD PTR [rsp+0x60],rbx
   140005f79:	mov    r9d,0x2
   140005f7f:	or     r8,0xffffffffffffffff
   140005f83:	mov    rdx,rdi
   140005f86:	mov    rcx,rbx
   140005f89:	call   0x14000fb80
   140005f8e:	nop
   140005f8f:	mov    rcx,rbx
   140005f92:	call   0x140011370
   140005f97:	nop
   140005f98:	mov    rax,QWORD PTR [rsp+0x68]
   140005f9d:	mov    QWORD PTR [rsi+0xb8],rax
   140005fa4:	mov    rax,rsi
   140005fa7:	mov    rbx,QWORD PTR [rsp+0x48]
   140005fac:	mov    rsi,QWORD PTR [rsp+0x50]
   140005fb1:	add    rsp,0x30
   140005fb5:	pop    rdi
   140005fb6:	ret    
   140005fb7:	int3   
   140005fb8:	int3   
   140005fb9:	int3   
   140005fba:	int3   
   140005fbb:	int3   
   140005fbc:	int3   
   140005fbd:	int3   
   140005fbe:	int3   
   140005fbf:	int3   
   140005fc0:	add    rcx,0x88
   140005fc7:	jmp    0x140011370
   140005fcc:	int3   
   140005fcd:	int3   
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	sub    rsp,0x38
   140005fd4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005fdd:	add    rcx,0xffffffffffffffa8
   140005fe1:	call   0x140008910
   140005fe6:	nop
   140005fe7:	add    rsp,0x38
   140005feb:	ret    
   140005fec:	int3   
   140005fed:	int3   
   140005fee:	int3   
   140005fef:	int3   
   140005ff0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ff5:	push   rdi
   140005ff6:	sub    rsp,0x20
   140005ffa:	mov    ebx,edx
   140005ffc:	mov    rdi,rcx
   140005fff:	call   0x140006020
   140006004:	test   bl,0x1
   140006007:	je     0x140006011
   140006009:	mov    rcx,rdi
   14000600c:	call   0x1400137cc
   140006011:	mov    rax,rdi
   140006014:	mov    rbx,QWORD PTR [rsp+0x30]
   140006019:	add    rsp,0x20
   14000601d:	pop    rdi
   14000601e:	ret    
   14000601f:	int3   
   140006020:	mov    QWORD PTR [rsp+0x8],rcx
   140006025:	push   rbx
   140006026:	sub    rsp,0x30
   14000602a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006033:	mov    rbx,rcx
   140006036:	mov    rcx,QWORD PTR [rcx+0xa8]
   14000603d:	mov    QWORD PTR [rbx+0xa8],0x0
   140006048:	test   rcx,rcx
   14000604b:	je     0x140006052
   14000604d:	call   0x140013924
   140006052:	mov    rcx,QWORD PTR [rbx+0xa8]
   140006059:	call   0x1400137cc
   14000605e:	mov    rcx,QWORD PTR [rbx+0x98]
   140006065:	mov    QWORD PTR [rbx+0x98],0x0
   140006070:	test   rcx,rcx
   140006073:	je     0x14000607a
   140006075:	call   0x140013924
   14000607a:	mov    rcx,QWORD PTR [rbx+0x98]
   140006081:	call   0x1400137cc
   140006086:	lea    rcx,[rbx+0x58]
   14000608a:	call   0x1400123e0
   14000608f:	nop
   140006090:	mov    rcx,rbx
   140006093:	add    rsp,0x30
   140006097:	pop    rbx
   140006098:	jmp    0x140005e00
   14000609d:	int3   
   14000609e:	int3   
   14000609f:	int3   
   1400060a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400060a5:	push   rdi
   1400060a6:	sub    rsp,0x30
   1400060aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400060b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400060b8:	mov    QWORD PTR [rsp+0x50],rsi
   1400060bd:	mov    edi,edx
   1400060bf:	mov    rsi,rcx
   1400060c2:	lea    rax,[rip+0x28d3f]        # 0x14002ee08
   1400060c9:	mov    QWORD PTR [rcx],rax
   1400060cc:	call   0x140006400
   1400060d1:	nop
   1400060d2:	mov    r8,QWORD PTR [rsi+0x88]
   1400060d9:	mov    r9,r8
   1400060dc:	mov    r8,QWORD PTR [r8]
   1400060df:	lea    rdx,[rsp+0x40]
   1400060e4:	lea    rcx,[rsi+0x88]
   1400060eb:	call   0x140002680
   1400060f0:	mov    rcx,QWORD PTR [rsi+0x88]
   1400060f7:	call   0x1400137cc
   1400060fc:	nop
   1400060fd:	mov    rcx,rsi
   140006100:	call   0x140008dd0
   140006105:	test   dil,0x1
   140006109:	je     0x140006113
   14000610b:	mov    rcx,rsi
   14000610e:	call   0x1400137cc
   140006113:	mov    rax,rsi
   140006116:	mov    rbx,QWORD PTR [rsp+0x48]
   14000611b:	mov    rsi,QWORD PTR [rsp+0x50]
   140006120:	add    rsp,0x30
   140006124:	pop    rdi
   140006125:	ret    
   140006126:	int3   
   140006127:	int3   
   140006128:	int3   
   140006129:	int3   
   14000612a:	int3   
   14000612b:	int3   
   14000612c:	int3   
   14000612d:	int3   
   14000612e:	int3   
   14000612f:	int3   
   140006130:	mov    rax,rsp
   140006133:	push   rsi
   140006134:	push   rdi
   140006135:	push   r14
   140006137:	sub    rsp,0x80
   14000613e:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   140006146:	mov    QWORD PTR [rax+0x10],rbx
   14000614a:	mov    QWORD PTR [rax+0x18],rbp
   14000614e:	mov    rbp,r8
   140006151:	mov    r14,rdx
   140006154:	mov    rsi,rcx
   140006157:	xor    ebx,ebx
   140006159:	mov    DWORD PTR [rax-0x50],ebx
   14000615c:	mov    QWORD PTR [rax-0x48],rbx
   140006160:	mov    QWORD PTR [rax-0x40],rbx
   140006164:	mov    QWORD PTR [rax-0x38],rbx
   140006168:	mov    QWORD PTR [rax-0x30],rbx
   14000616c:	mov    QWORD PTR [rax-0x28],rbx
   140006170:	lea    rdx,[rcx+0x10]
   140006174:	or     r8,0xffffffffffffffff
   140006178:	lea    rcx,[rax-0x50]
   14000617c:	call   0x140010560
   140006181:	nop
   140006182:	lea    rcx,[rsp+0x48]
   140006187:	call   0x140011370
   14000618c:	nop
   14000618d:	mov    ecx,0xc0
   140006192:	call   0x1400138b8
   140006197:	mov    rdi,rax
   14000619a:	mov    QWORD PTR [rsp+0xa0],rax
   1400061a2:	test   rax,rax
   1400061a5:	je     0x1400061d8
   1400061a7:	lea    rcx,[rsp+0x48]
   1400061ac:	call   0x140011370
   1400061b1:	mov    rcx,QWORD PTR [rsi+0x98]
   1400061b8:	mov    QWORD PTR [rsp+0x28],rcx
   1400061bd:	mov    QWORD PTR [rsp+0x20],rsi
   1400061c2:	mov    r9,rbp
   1400061c5:	mov    r8,r14
   1400061c8:	mov    rdx,rax
   1400061cb:	mov    rcx,rdi
   1400061ce:	call   0x140005f10
   1400061d3:	mov    rdi,rax
   1400061d6:	jmp    0x1400061db
   1400061d8:	mov    rdi,rbx
   1400061db:	mov    QWORD PTR [rsp+0xa0],rdi
   1400061e3:	lea    rcx,[rsi+0x88]
   1400061ea:	movzx  eax,BYTE PTR [rip+0x3412b]        # 0x14003a31c
   1400061f1:	mov    BYTE PTR [rsp+0x20],al
   1400061f5:	lea    r9,[rsp+0xa0]
   1400061fd:	lea    rdx,[rsp+0x38]
   140006202:	call   0x1400070c0
   140006207:	mov    rcx,rsi
   14000620a:	call   0x140006280
   14000620f:	lea    rcx,[rdi+0x58]
   140006213:	mov    rax,QWORD PTR [rcx]
   140006216:	call   QWORD PTR [rax+0x20]
   140006219:	nop
   14000621a:	mov    rax,QWORD PTR [rsp+0x68]
   14000621f:	mov    rcx,rbx
   140006222:	mov    QWORD PTR [rsp+0x68],rbx
   140006227:	test   rax,rax
   14000622a:	je     0x140006239
   14000622c:	mov    rcx,rax
   14000622f:	call   0x140013924
   140006234:	mov    rcx,QWORD PTR [rsp+0x68]
   140006239:	call   0x1400137cc
   14000623e:	mov    rcx,QWORD PTR [rsp+0x58]
   140006243:	mov    QWORD PTR [rsp+0x58],rbx
   140006248:	test   rcx,rcx
   14000624b:	je     0x140006257
   14000624d:	call   0x140013924
   140006252:	mov    rbx,QWORD PTR [rsp+0x58]
   140006257:	mov    rcx,rbx
   14000625a:	call   0x1400137cc
   14000625f:	xor    eax,eax
   140006261:	lea    r11,[rsp+0x80]
   140006269:	mov    rbx,QWORD PTR [r11+0x28]
   14000626d:	mov    rbp,QWORD PTR [r11+0x30]
   140006271:	mov    rsp,r11
   140006274:	pop    r14
   140006276:	pop    rdi
   140006277:	pop    rsi
   140006278:	ret    
   140006279:	int3   
   14000627a:	int3   
   14000627b:	int3   
   14000627c:	int3   
   14000627d:	int3   
   14000627e:	int3   
   14000627f:	int3   
   140006280:	mov    rax,rsp
   140006283:	push   rsi
   140006284:	push   rdi
   140006285:	push   r14
   140006287:	sub    rsp,0x60
   14000628b:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140006293:	mov    QWORD PTR [rax+0x10],rbx
   140006297:	mov    QWORD PTR [rax+0x18],rbp
   14000629b:	mov    rbp,rcx
   14000629e:	mov    rsi,QWORD PTR [rcx+0x80]
   1400062a5:	add    rsi,0x8
   1400062a9:	mov    QWORD PTR [rax-0x30],rsi
   1400062ad:	mov    rcx,rsi
   1400062b0:	call   0x1400126b0
   1400062b5:	mov    DWORD PTR [rsp+0x50],0x1
   1400062bd:	lea    rdx,[rbp+0x88]
   1400062c4:	lea    rcx,[rsp+0x38]
   1400062c9:	call   0x140006f70
   1400062ce:	nop
   1400062cf:	mov    r8,QWORD PTR [rsp+0x38]
   1400062d4:	mov    rbx,QWORD PTR [r8]
   1400062d7:	cmp    rbx,r8
   1400062da:	je     0x1400063bc
   1400062e0:	xor    r14d,r14d
   1400062e3:	nop    DWORD PTR [rax+0x0]
   1400062e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400062f0:	mov    rax,QWORD PTR [rbx+0x20]
   1400062f4:	mov    rcx,QWORD PTR [rax+0x8]
   1400062f8:	cmp    rcx,0xffffffffffffffff
   1400062fc:	je     0x14000631a
   1400062fe:	mov    QWORD PTR [rsp+0x28],r14
   140006303:	mov    QWORD PTR [rsp+0x20],r14
   140006308:	xor    r9d,r9d
   14000630b:	xor    r8d,r8d
   14000630e:	xor    edx,edx
   140006310:	call   QWORD PTR [rip+0x20de2]        # 0x1400270f8
   140006316:	test   eax,eax
   140006318:	jne    0x140006359
   14000631a:	mov    rcx,QWORD PTR [rbx+0x20]
   14000631e:	add    rcx,0x58
   140006322:	mov    rax,QWORD PTR [rcx]
   140006325:	call   QWORD PTR [rax+0x10]
   140006328:	mov    rcx,QWORD PTR [rbx+0x20]
   14000632c:	add    rcx,0x58
   140006330:	mov    rax,QWORD PTR [rcx]
   140006333:	call   QWORD PTR [rax+0x28]
   140006336:	lea    rdx,[rbx+0x20]
   14000633a:	lea    rcx,[rbp+0x88]
   140006341:	call   0x140006e00
   140006346:	mov    rcx,QWORD PTR [rbx+0x20]
   14000634a:	test   rcx,rcx
   14000634d:	je     0x140006359
   14000634f:	mov    rax,QWORD PTR [rcx]
   140006352:	mov    edx,0x1
   140006357:	call   QWORD PTR [rax]
   140006359:	cmp    BYTE PTR [rbx+0x19],r14b
   14000635d:	jne    0x1400063ae
   14000635f:	mov    rax,QWORD PTR [rbx+0x10]
   140006363:	cmp    BYTE PTR [rax+0x19],r14b
   140006367:	jne    0x14000638e
   140006369:	mov    rbx,rax
   14000636c:	mov    rax,QWORD PTR [rax]
   14000636f:	cmp    BYTE PTR [rax+0x19],r14b
   140006373:	jne    0x1400063ae
   140006375:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140006380:	mov    rbx,rax
   140006383:	mov    rax,QWORD PTR [rax]
   140006386:	cmp    BYTE PTR [rax+0x19],r14b
   14000638a:	je     0x140006380
   14000638c:	jmp    0x1400063ae
   14000638e:	mov    rax,QWORD PTR [rbx+0x8]
   140006392:	cmp    BYTE PTR [rax+0x19],r14b
   140006396:	jne    0x1400063ab
   140006398:	cmp    rbx,QWORD PTR [rax+0x10]
   14000639c:	jne    0x1400063ab
   14000639e:	mov    rbx,rax
   1400063a1:	mov    rax,QWORD PTR [rax+0x8]
   1400063a5:	cmp    BYTE PTR [rax+0x19],r14b
   1400063a9:	je     0x140006398
   1400063ab:	mov    rbx,rax
   1400063ae:	mov    r8,QWORD PTR [rsp+0x38]
   1400063b3:	cmp    rbx,r8
   1400063b6:	jne    0x1400062f0
   1400063bc:	mov    r9,r8
   1400063bf:	mov    r8,QWORD PTR [r8]
   1400063c2:	lea    rdx,[rsp+0x80]
   1400063ca:	lea    rcx,[rsp+0x38]
   1400063cf:	call   0x140002680
   1400063d4:	mov    rcx,QWORD PTR [rsp+0x38]
   1400063d9:	call   0x1400137cc
   1400063de:	nop
   1400063df:	mov    rcx,rsi
   1400063e2:	call   0x1400126f0
   1400063e7:	lea    r11,[rsp+0x60]
   1400063ec:	mov    rbx,QWORD PTR [r11+0x28]
   1400063f0:	mov    rbp,QWORD PTR [r11+0x30]
   1400063f4:	mov    rsp,r11
   1400063f7:	pop    r14
   1400063f9:	pop    rdi
   1400063fa:	pop    rsi
   1400063fb:	ret    
   1400063fc:	int3   
   1400063fd:	int3   
   1400063fe:	int3   
   1400063ff:	int3   
   140006400:	rex push rdi
   140006402:	sub    rsp,0x40
   140006406:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000640f:	mov    QWORD PTR [rsp+0x58],rbx
   140006414:	mov    QWORD PTR [rsp+0x60],rbp
   140006419:	mov    QWORD PTR [rsp+0x68],rsi
   14000641e:	mov    rdi,rcx
   140006421:	mov    rbp,QWORD PTR [rcx+0x80]
   140006428:	add    rbp,0x8
   14000642c:	mov    QWORD PTR [rsp+0x28],rbp
   140006431:	mov    rcx,rbp
   140006434:	call   0x1400126b0
   140006439:	mov    DWORD PTR [rsp+0x30],0x1
   140006441:	cmp    QWORD PTR [rdi+0x90],0x0
   140006449:	jbe    0x1400064a7
   14000644b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006450:	mov    rbx,QWORD PTR [rdi+0x88]
   140006457:	mov    rbx,QWORD PTR [rbx]
   14000645a:	mov    rcx,QWORD PTR [rbx+0x20]
   14000645e:	add    rcx,0x58
   140006462:	mov    rax,QWORD PTR [rcx]
   140006465:	call   QWORD PTR [rax+0x10]
   140006468:	mov    rcx,QWORD PTR [rbx+0x20]
   14000646c:	add    rcx,0x58
   140006470:	mov    rax,QWORD PTR [rcx]
   140006473:	call   QWORD PTR [rax+0x28]
   140006476:	mov    rcx,QWORD PTR [rbx+0x20]
   14000647a:	test   rcx,rcx
   14000647d:	je     0x140006489
   14000647f:	mov    rax,QWORD PTR [rcx]
   140006482:	mov    edx,0x1
   140006487:	call   QWORD PTR [rax]
   140006489:	mov    r8,rbx
   14000648c:	lea    rdx,[rsp+0x50]
   140006491:	lea    rcx,[rdi+0x88]
   140006498:	call   0x1400029d0
   14000649d:	cmp    QWORD PTR [rdi+0x90],0x0
   1400064a5:	ja     0x140006450
   1400064a7:	mov    rcx,QWORD PTR [rdi+0xa0]
   1400064ae:	test   rcx,rcx
   1400064b1:	je     0x140006539
   1400064b7:	mov    rax,QWORD PTR [rcx]
   1400064ba:	call   QWORD PTR [rax+0x10]
   1400064bd:	mov    eax,DWORD PTR [rip+0x33f3d]        # 0x14003a400
   1400064c3:	test   al,0x1
   1400064c5:	jne    0x1400064e2
   1400064c7:	or     eax,0x1
   1400064ca:	mov    DWORD PTR [rip+0x33f30],eax        # 0x14003a400
   1400064d0:	call   0x1400091f0
   1400064d5:	lea    rcx,[rip+0x1fd14]        # 0x1400261f0
   1400064dc:	call   0x140013788
   1400064e1:	nop
   1400064e2:	lea    rcx,[rip+0x33ea7]        # 0x14003a390
   1400064e9:	call   QWORD PTR [rip+0x20c59]        # 0x140027148
   1400064ef:	lea    rcx,[rip+0x33ea2]        # 0x14003a398
   1400064f6:	call   QWORD PTR [rip+0x20c4c]        # 0x140027148
   1400064fc:	lea    rcx,[rip+0x33e9d]        # 0x14003a3a0
   140006503:	call   QWORD PTR [rip+0x20c3f]        # 0x140027148
   140006509:	lea    rcx,[rip+0x33e98]        # 0x14003a3a8
   140006510:	call   QWORD PTR [rip+0x20c32]        # 0x140027148
   140006516:	mov    rcx,QWORD PTR [rdi+0xa0]
   14000651d:	mov    rax,QWORD PTR [rcx]
   140006520:	call   QWORD PTR [rax+0x28]
   140006523:	mov    rcx,QWORD PTR [rdi+0xa0]
   14000652a:	test   rcx,rcx
   14000652d:	je     0x140006539
   14000652f:	mov    rax,QWORD PTR [rcx]
   140006532:	mov    edx,0x1
   140006537:	call   QWORD PTR [rax]
   140006539:	mov    QWORD PTR [rdi+0xa0],0x0
   140006544:	mov    rcx,rbp
   140006547:	mov    rbx,QWORD PTR [rsp+0x58]
   14000654c:	mov    rbp,QWORD PTR [rsp+0x60]
   140006551:	mov    rsi,QWORD PTR [rsp+0x68]
   140006556:	add    rsp,0x40
   14000655a:	pop    rdi
   14000655b:	jmp    0x1400126f0
   140006560:	rex push rbp
   140006562:	push   rsi
   140006563:	push   rdi
   140006564:	push   r14
   140006566:	push   r15
   140006568:	lea    rbp,[rsp-0xb0]
   140006570:	sub    rsp,0x1b0
   140006577:	mov    QWORD PTR [rbp+0x70],0xfffffffffffffffe
   14000657f:	mov    QWORD PTR [rsp+0x1f0],rbx
   140006587:	mov    r15,r8
   14000658a:	mov    r14,rdx
   14000658d:	mov    rdi,rcx
   140006590:	mov    r8d,DWORD PTR [rdx+0x10]
   140006594:	xor    r9d,r9d
   140006597:	mov    rdx,QWORD PTR [rdx+0x18]
   14000659b:	lea    rcx,[rsp+0x30]
   1400065a0:	call   0x14000fb80
   1400065a5:	mov    rbx,rax
   1400065a8:	xor    esi,esi
   1400065aa:	mov    DWORD PTR [rbp-0x20],esi
   1400065ad:	mov    QWORD PTR [rbp-0x18],rsi
   1400065b1:	mov    QWORD PTR [rbp-0x10],rsi
   1400065b5:	mov    QWORD PTR [rbp-0x8],rsi
   1400065b9:	mov    QWORD PTR [rbp+0x0],rsi
   1400065bd:	mov    QWORD PTR [rbp+0x8],rsi
   1400065c1:	mov    QWORD PTR [rbp+0x10],rsi
   1400065c5:	mov    QWORD PTR [rbp+0x18],rsi
   1400065c9:	call   0x140005030
   1400065ce:	mov    QWORD PTR [rbp+0x10],rax
   1400065d2:	mov    DWORD PTR [rbp+0x20],0x1
   1400065d9:	mov    rdx,rbx
   1400065dc:	lea    rcx,[rbp-0x20]
   1400065e0:	call   0x140003bb0
   1400065e5:	nop
   1400065e6:	mov    rax,QWORD PTR [rsp+0x50]
   1400065eb:	mov    ecx,esi
   1400065ed:	mov    QWORD PTR [rsp+0x50],rcx
   1400065f2:	test   rax,rax
   1400065f5:	je     0x140006604
   1400065f7:	mov    rcx,rax
   1400065fa:	call   0x140013924
   1400065ff:	mov    rcx,QWORD PTR [rsp+0x50]
   140006604:	call   0x1400137cc
   140006609:	mov    rax,QWORD PTR [rsp+0x40]
   14000660e:	mov    rcx,rsi
   140006611:	mov    QWORD PTR [rsp+0x40],rcx
   140006616:	test   rax,rax
   140006619:	je     0x140006628
   14000661b:	mov    rcx,rax
   14000661e:	call   0x140013924
   140006623:	mov    rcx,QWORD PTR [rsp+0x40]
   140006628:	call   0x1400137cc
   14000662d:	lea    rdx,[rbp+0x40]
   140006631:	lea    rcx,[rbp-0x20]
   140006635:	call   0x1400039f0
   14000663a:	nop
   14000663b:	cmp    QWORD PTR [rdi+0x80],0x0
   140006643:	je     0x140006d34
   140006649:	mov    DWORD PTR [rsp+0x60],esi
   14000664d:	mov    QWORD PTR [rsp+0x68],rsi
   140006652:	mov    QWORD PTR [rsp+0x70],rsi
   140006657:	mov    QWORD PTR [rsp+0x78],rsi
   14000665c:	mov    QWORD PTR [rbp-0x80],rsi
   140006660:	mov    QWORD PTR [rbp-0x78],rsi
   140006664:	mov    QWORD PTR [rbp-0x70],rsi
   140006668:	mov    QWORD PTR [rbp-0x68],rsi
   14000666c:	call   0x140005030
   140006671:	mov    QWORD PTR [rbp-0x70],rax
   140006675:	mov    DWORD PTR [rbp-0x60],0x1
   14000667c:	xor    r9d,r9d
   14000667f:	or     r8,0xffffffffffffffff
   140006683:	lea    rdx,[rip+0x2878e]        # 0x14002ee18
   14000668a:	lea    rcx,[rsp+0x30]
   14000668f:	call   0x14000fb80
   140006694:	nop
   140006695:	or     r8,0xffffffffffffffff
   140006699:	lea    rdx,[rsp+0x30]
   14000669e:	lea    rcx,[rsp+0x60]
   1400066a3:	call   0x140010560
   1400066a8:	nop
   1400066a9:	mov    rax,QWORD PTR [rsp+0x50]
   1400066ae:	mov    rcx,rsi
   1400066b1:	mov    QWORD PTR [rsp+0x50],rcx
   1400066b6:	test   rax,rax
   1400066b9:	je     0x1400066c8
   1400066bb:	mov    rcx,rax
   1400066be:	call   0x140013924
   1400066c3:	mov    rcx,QWORD PTR [rsp+0x50]
   1400066c8:	call   0x1400137cc
   1400066cd:	mov    rax,QWORD PTR [rsp+0x40]
   1400066d2:	mov    rcx,rsi
   1400066d5:	mov    QWORD PTR [rsp+0x40],rcx
   1400066da:	test   rax,rax
   1400066dd:	je     0x1400066ec
   1400066df:	mov    rcx,rax
   1400066e2:	call   0x140013924
   1400066e7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400066ec:	call   0x1400137cc
   1400066f1:	mov    QWORD PTR [rsp+0x20],rsi
   1400066f6:	mov    QWORD PTR [rsp+0x28],rsi
   1400066fb:	call   0x140005030
   140006700:	mov    QWORD PTR [rsp+0x20],rax
   140006705:	mov    eax,DWORD PTR [rip+0x33cf5]        # 0x14003a400
   14000670b:	test   al,0x1
   14000670d:	jne    0x14000672a
   14000670f:	or     eax,0x1
   140006712:	mov    DWORD PTR [rip+0x33ce8],eax        # 0x14003a400
   140006718:	call   0x1400091f0
   14000671d:	lea    rcx,[rip+0x1facc]        # 0x1400261f0
   140006724:	call   0x140013788
   140006729:	nop
   14000672a:	lea    rcx,[rip+0x33c7f]        # 0x14003a3b0
   140006731:	call   QWORD PTR [rip+0x20941]        # 0x140027078
   140006737:	nop    WORD PTR [rax+rax*1+0x0]
   140006740:	mov    eax,DWORD PTR [rip+0x33cba]        # 0x14003a400
   140006746:	test   al,0x1
   140006748:	jne    0x14000676b
   14000674a:	or     eax,0x1
   14000674d:	mov    DWORD PTR [rip+0x33cad],eax        # 0x14003a400
   140006753:	call   0x1400091f0
   140006758:	lea    rcx,[rip+0x1fa91]        # 0x1400261f0
   14000675f:	call   0x140013788
   140006764:	nop
   140006765:	mov    eax,DWORD PTR [rip+0x33c95]        # 0x14003a400
   14000676b:	cmp    QWORD PTR [rip+0x33c05],0x0        # 0x14003a378
   140006773:	je     0x1400067ae
   140006775:	test   al,0x1
   140006777:	jne    0x140006794
   140006779:	or     eax,0x1
   14000677c:	mov    DWORD PTR [rip+0x33c7e],eax        # 0x14003a400
   140006782:	call   0x1400091f0
   140006787:	lea    rcx,[rip+0x1fa62]        # 0x1400261f0
   14000678e:	call   0x140013788
   140006793:	nop
   140006794:	or     r8d,0xffffffff
   140006798:	lea    rdx,[rip+0x33c11]        # 0x14003a3b0
   14000679f:	lea    rcx,[rip+0x33bea]        # 0x14003a390
   1400067a6:	call   QWORD PTR [rip+0x2092c]        # 0x1400270d8
   1400067ac:	jmp    0x140006740
   1400067ae:	lea    rax,[rbp+0x30]
   1400067b2:	mov    QWORD PTR [rbp+0xe0],rax
   1400067b9:	lea    rax,[rsp+0x30]
   1400067be:	mov    QWORD PTR [rbp+0xe8],rax
   1400067c5:	lea    rdx,[rbp+0x10]
   1400067c9:	lea    rcx,[rbp+0x30]
   1400067cd:	call   0x140006f10
   1400067d2:	nop
   1400067d3:	mov    DWORD PTR [rsp+0x30],esi
   1400067d7:	mov    QWORD PTR [rsp+0x38],rsi
   1400067dc:	mov    QWORD PTR [rsp+0x40],rsi
   1400067e1:	mov    QWORD PTR [rsp+0x48],rsi
   1400067e6:	mov    QWORD PTR [rsp+0x50],rsi
   1400067eb:	mov    QWORD PTR [rsp+0x58],rsi
   1400067f0:	or     r8,0xffffffffffffffff
   1400067f4:	lea    rdx,[rbp+0x40]
   1400067f8:	lea    rcx,[rsp+0x30]
   1400067fd:	call   0x140010560
   140006802:	nop
   140006803:	mov    eax,DWORD PTR [rip+0x33bf7]        # 0x14003a400
   140006809:	test   al,0x1
   14000680b:	jne    0x140006828
   14000680d:	or     eax,0x1
   140006810:	mov    DWORD PTR [rip+0x33bea],eax        # 0x14003a400
   140006816:	call   0x1400091f0
   14000681b:	lea    rcx,[rip+0x1f9ce]        # 0x1400261f0
   140006822:	call   0x140013788
   140006827:	nop
   140006828:	lea    r8,[rbp+0x30]
   14000682c:	lea    rdx,[rsp+0x30]
   140006831:	lea    rcx,[rip+0x33b08]        # 0x14003a340
   140006838:	call   0x14000eef0
   14000683d:	mov    eax,DWORD PTR [rip+0x33bbd]        # 0x14003a400
   140006843:	test   al,0x1
   140006845:	jne    0x140006862
   140006847:	or     eax,0x1
   14000684a:	mov    DWORD PTR [rip+0x33bb0],eax        # 0x14003a400
   140006850:	call   0x1400091f0
   140006855:	lea    rcx,[rip+0x1f994]        # 0x1400261f0
   14000685c:	call   0x140013788
   140006861:	nop
   140006862:	lea    rcx,[rip+0x33b47]        # 0x14003a3b0
   140006869:	call   QWORD PTR [rip+0x207c9]        # 0x140027038
   14000686f:	mov    eax,DWORD PTR [rip+0x33b8b]        # 0x14003a400
   140006875:	test   al,0x1
   140006877:	jne    0x140006894
   140006879:	or     eax,0x1
   14000687c:	mov    DWORD PTR [rip+0x33b7e],eax        # 0x14003a400
   140006882:	call   0x1400091f0
   140006887:	lea    rcx,[rip+0x1f962]        # 0x1400261f0
   14000688e:	call   0x140013788
   140006893:	nop
   140006894:	lea    rcx,[rip+0x33b3d]        # 0x14003a3d8
   14000689b:	call   QWORD PTR [rip+0x207d7]        # 0x140027078
   1400068a1:	mov    eax,DWORD PTR [rip+0x33b59]        # 0x14003a400
   1400068a7:	test   al,0x1
   1400068a9:	jne    0x1400068cc
   1400068ab:	or     eax,0x1
   1400068ae:	mov    DWORD PTR [rip+0x33b4c],eax        # 0x14003a400
   1400068b4:	call   0x1400091f0
   1400068b9:	lea    rcx,[rip+0x1f930]        # 0x1400261f0
   1400068c0:	call   0x140013788
   1400068c5:	nop
   1400068c6:	mov    eax,DWORD PTR [rip+0x33b34]        # 0x14003a400
   1400068cc:	cmp    QWORD PTR [rip+0x33ab4],0x0        # 0x14003a388
   1400068d4:	jne    0x14000690f
   1400068d6:	test   al,0x1
   1400068d8:	jne    0x1400068f5
   1400068da:	or     eax,0x1
   1400068dd:	mov    DWORD PTR [rip+0x33b1d],eax        # 0x14003a400
   1400068e3:	call   0x1400091f0
   1400068e8:	lea    rcx,[rip+0x1f901]        # 0x1400261f0
   1400068ef:	call   0x140013788
   1400068f4:	nop
   1400068f5:	or     r8d,0xffffffff
   1400068f9:	lea    rdx,[rip+0x33ad8]        # 0x14003a3d8
   140006900:	lea    rcx,[rip+0x33aa1]        # 0x14003a3a8
   140006907:	call   QWORD PTR [rip+0x207cb]        # 0x1400270d8
   14000690d:	jmp    0x1400068a1
   14000690f:	test   al,0x1
   140006911:	jne    0x14000692e
   140006913:	or     eax,0x1
   140006916:	mov    DWORD PTR [rip+0x33ae4],eax        # 0x14003a400
   14000691c:	call   0x1400091f0
   140006921:	lea    rcx,[rip+0x1f8c8]        # 0x1400261f0
   140006928:	call   0x140013788
   14000692d:	nop
   14000692e:	mov    rdx,QWORD PTR [rsp+0x20]
   140006933:	mov    rdx,QWORD PTR [rdx+0x8]
   140006937:	lea    rcx,[rsp+0x20]
   14000693c:	call   0x140004f50
   140006941:	mov    rax,QWORD PTR [rsp+0x20]
   140006946:	mov    QWORD PTR [rax+0x8],rax
   14000694a:	mov    rax,QWORD PTR [rsp+0x20]
   14000694f:	mov    QWORD PTR [rax],rax
   140006952:	mov    rax,QWORD PTR [rsp+0x20]
   140006957:	mov    QWORD PTR [rax+0x10],rax
   14000695b:	mov    QWORD PTR [rsp+0x28],rsi
   140006960:	xor    eax,eax
   140006962:	movzx  r8d,al
   140006966:	lea    rdx,[rip+0x33a13]        # 0x14003a380
   14000696d:	lea    rcx,[rsp+0x20]
   140006972:	call   0x140005070
   140006977:	mov    rdx,QWORD PTR [rip+0x33a02]        # 0x14003a380
   14000697e:	mov    rdx,QWORD PTR [rdx+0x8]
   140006982:	lea    rcx,[rip+0x339f7]        # 0x14003a380
   140006989:	call   0x140004f50
   14000698e:	mov    rax,QWORD PTR [rip+0x339eb]        # 0x14003a380
   140006995:	mov    QWORD PTR [rax+0x8],rax
   140006999:	mov    rax,QWORD PTR [rip+0x339e0]        # 0x14003a380
   1400069a0:	mov    QWORD PTR [rax],rax
   1400069a3:	mov    rax,QWORD PTR [rip+0x339d6]        # 0x14003a380
   1400069aa:	mov    QWORD PTR [rax+0x10],rax
   1400069ae:	mov    QWORD PTR [rip+0x339d3],rsi        # 0x14003a388
   1400069b5:	lea    rcx,[rip+0x339e4]        # 0x14003a3a0
   1400069bc:	call   QWORD PTR [rip+0x2078e]        # 0x140027150
   1400069c2:	mov    eax,DWORD PTR [rip+0x33a38]        # 0x14003a400
   1400069c8:	test   al,0x1
   1400069ca:	jne    0x1400069e7
   1400069cc:	or     eax,0x1
   1400069cf:	mov    DWORD PTR [rip+0x33a2b],eax        # 0x14003a400
   1400069d5:	call   0x1400091f0
   1400069da:	lea    rcx,[rip+0x1f80f]        # 0x1400261f0
   1400069e1:	call   0x140013788
   1400069e6:	nop
   1400069e7:	lea    rcx,[rip+0x339ea]        # 0x14003a3d8
   1400069ee:	call   QWORD PTR [rip+0x20644]        # 0x140027038
   1400069f4:	mov    rdx,QWORD PTR [rbp-0x70]
   1400069f8:	mov    rdx,QWORD PTR [rdx+0x8]
   1400069fc:	lea    rcx,[rbp-0x70]
   140006a00:	call   0x140004f50
   140006a05:	mov    rax,QWORD PTR [rbp-0x70]
   140006a09:	mov    QWORD PTR [rax+0x8],rax
   140006a0d:	mov    rax,QWORD PTR [rbp-0x70]
   140006a11:	mov    QWORD PTR [rax],rax
   140006a14:	mov    rax,QWORD PTR [rbp-0x70]
   140006a18:	mov    QWORD PTR [rax+0x10],rax
   140006a1c:	mov    QWORD PTR [rbp-0x68],rsi
   140006a20:	xor    eax,eax
   140006a22:	movzx  r8d,al
   140006a26:	lea    rdx,[rsp+0x20]
   140006a2b:	lea    rcx,[rbp-0x70]
   140006a2f:	call   0x140005070
   140006a34:	lea    rdx,[rsp+0x30]
   140006a39:	lea    rcx,[rsp+0x60]
   140006a3e:	call   0x140003a40
   140006a43:	nop
   140006a44:	mov    DWORD PTR [rbp-0x50],esi
   140006a47:	mov    QWORD PTR [rbp-0x48],rsi
   140006a4b:	mov    QWORD PTR [rbp-0x40],rsi
   140006a4f:	mov    QWORD PTR [rbp-0x38],rsi
   140006a53:	mov    QWORD PTR [rbp-0x30],rsi
   140006a57:	mov    QWORD PTR [rbp-0x28],rsi
   140006a5b:	or     r8,0xffffffffffffffff
   140006a5f:	mov    rdx,rax
   140006a62:	lea    rcx,[rbp-0x50]
   140006a66:	call   0x140010560
   140006a6b:	nop
   140006a6c:	lea    rcx,[rbp-0x50]
   140006a70:	call   0x140011370
   140006a75:	nop
   140006a76:	mov    rax,QWORD PTR [rsp+0x50]
   140006a7b:	mov    rcx,rsi
   140006a7e:	mov    QWORD PTR [rsp+0x50],rcx
   140006a83:	test   rax,rax
   140006a86:	je     0x140006a95
   140006a88:	mov    rcx,rax
   140006a8b:	call   0x140013924
   140006a90:	mov    rcx,QWORD PTR [rsp+0x50]
   140006a95:	call   0x1400137cc
   140006a9a:	mov    rax,QWORD PTR [rsp+0x40]
   140006a9f:	mov    rcx,rsi
   140006aa2:	mov    QWORD PTR [rsp+0x40],rcx
   140006aa7:	test   rax,rax
   140006aaa:	je     0x140006ab9
   140006aac:	mov    rcx,rax
   140006aaf:	call   0x140013924
   140006ab4:	mov    rcx,QWORD PTR [rsp+0x40]
   140006ab9:	call   0x1400137cc
   140006abe:	lea    rcx,[rbp-0x50]
   140006ac2:	call   0x140011370
   140006ac7:	mov    rbx,QWORD PTR [rbp-0x48]
   140006acb:	cmp    rbx,0x10000000
   140006ad2:	jb     0x140006b0a
   140006ad4:	lea    rax,[rip+0x20ab5]        # 0x140027590
   140006adb:	mov    QWORD PTR [rbp+0x78],rax
   140006adf:	xor    r9d,r9d
   140006ae2:	or     r8,0xffffffffffffffff
   140006ae6:	lea    rdx,[rip+0x28343]        # 0x14002ee30
   140006aed:	lea    rcx,[rbp+0x80]
   140006af4:	call   0x14000fb80
   140006af9:	lea    rdx,[rip+0x2ea68]        # 0x140035568
   140006b00:	lea    rcx,[rbp+0x78]
   140006b04:	call   0x14001436c
   140006b09:	int3   
   140006b0a:	lea    rcx,[rbp-0x50]
   140006b0e:	call   0x140011370
   140006b13:	mov    r9d,ebx
   140006b16:	mov    r8,rax
   140006b19:	mov    edx,DWORD PTR [r14+0x8]
   140006b1d:	mov    rcx,r15
   140006b20:	call   0x1400076f0
   140006b25:	nop
   140006b26:	mov    rax,QWORD PTR [rbp-0x30]
   140006b2a:	mov    rcx,rsi
   140006b2d:	mov    QWORD PTR [rbp-0x30],rcx
   140006b31:	test   rax,rax
   140006b34:	je     0x140006b42
   140006b36:	mov    rcx,rax
   140006b39:	call   0x140013924
   140006b3e:	mov    rcx,QWORD PTR [rbp-0x30]
   140006b42:	call   0x1400137cc
   140006b47:	mov    rax,QWORD PTR [rbp-0x40]
   140006b4b:	mov    rcx,rsi
   140006b4e:	mov    QWORD PTR [rbp-0x40],rcx
   140006b52:	test   rax,rax
   140006b55:	je     0x140006b63
   140006b57:	mov    rcx,rax
   140006b5a:	call   0x140013924
   140006b5f:	mov    rcx,QWORD PTR [rbp-0x40]
   140006b63:	call   0x1400137cc
   140006b68:	nop
   140006b69:	mov    rdi,QWORD PTR [rsp+0x20]
   140006b6e:	mov    rbx,QWORD PTR [rdi]
   140006b71:	cmp    rbx,rbx
   140006b74:	jne    0x140006ba5
   140006b76:	mov    rdx,QWORD PTR [rdi+0x8]
   140006b7a:	lea    rcx,[rsp+0x20]
   140006b7f:	call   0x140004f50
   140006b84:	mov    rax,QWORD PTR [rsp+0x20]
   140006b89:	mov    QWORD PTR [rax+0x8],rax
   140006b8d:	mov    rax,QWORD PTR [rsp+0x20]
   140006b92:	mov    QWORD PTR [rax],rax
   140006b95:	mov    rax,QWORD PTR [rsp+0x20]
   140006b9a:	mov    QWORD PTR [rax+0x10],rax
   140006b9e:	mov    QWORD PTR [rsp+0x28],rsi
   140006ba3:	jmp    0x140006c14
   140006ba5:	cmp    rbx,rdi
   140006ba8:	je     0x140006c19
   140006baa:	nop    WORD PTR [rax+rax*1+0x0]
   140006bb0:	mov    r8,rbx
   140006bb3:	cmp    BYTE PTR [rbx+0x19],0x0
   140006bb7:	jne    0x140006bfe
   140006bb9:	mov    rax,QWORD PTR [rbx+0x10]
   140006bbd:	cmp    BYTE PTR [rax+0x19],0x0
   140006bc1:	jne    0x140006bde
   140006bc3:	mov    rbx,rax
   140006bc6:	mov    rax,QWORD PTR [rax]
   140006bc9:	cmp    BYTE PTR [rax+0x19],0x0
   140006bcd:	jne    0x140006bfe
   140006bcf:	nop
   140006bd0:	mov    rbx,rax
   140006bd3:	mov    rax,QWORD PTR [rax]
   140006bd6:	cmp    BYTE PTR [rax+0x19],0x0
   140006bda:	je     0x140006bd0
   140006bdc:	jmp    0x140006bfe
   140006bde:	mov    rax,QWORD PTR [rbx+0x8]
   140006be2:	cmp    BYTE PTR [rax+0x19],0x0
   140006be6:	jne    0x140006bfb
   140006be8:	cmp    rbx,QWORD PTR [rax+0x10]
   140006bec:	jne    0x140006bfb
   140006bee:	mov    rbx,rax
   140006bf1:	mov    rax,QWORD PTR [rax+0x8]
   140006bf5:	cmp    BYTE PTR [rax+0x19],0x0
   140006bf9:	je     0x140006be8
   140006bfb:	mov    rbx,rax
   140006bfe:	lea    rdx,[rbp+0xe0]
   140006c05:	lea    rcx,[rsp+0x20]
   140006c0a:	call   0x140004a90
   140006c0f:	cmp    rbx,rdi
   140006c12:	jne    0x140006bb0
   140006c14:	mov    rdi,QWORD PTR [rsp+0x20]
   140006c19:	mov    rcx,rdi
   140006c1c:	call   0x1400137cc
   140006c21:	nop
   140006c22:	mov    r8,QWORD PTR [rbp-0x70]
   140006c26:	mov    r9,r8
   140006c29:	mov    r8,QWORD PTR [r8]
   140006c2c:	lea    rdx,[rbp+0xe0]
   140006c33:	lea    rcx,[rbp-0x70]
   140006c37:	call   0x140004990
   140006c3c:	mov    rcx,QWORD PTR [rbp-0x70]
   140006c40:	call   0x1400137cc
   140006c45:	mov    rax,QWORD PTR [rbp-0x80]
   140006c49:	mov    rcx,rsi
   140006c4c:	mov    QWORD PTR [rbp-0x80],rcx
   140006c50:	test   rax,rax
   140006c53:	je     0x140006c61
   140006c55:	mov    rcx,rax
   140006c58:	call   0x140013924
   140006c5d:	mov    rcx,QWORD PTR [rbp-0x80]
   140006c61:	call   0x1400137cc
   140006c66:	mov    rax,QWORD PTR [rsp+0x70]
   140006c6b:	mov    rcx,rsi
   140006c6e:	mov    QWORD PTR [rsp+0x70],rcx
   140006c73:	test   rax,rax
   140006c76:	je     0x140006c85
   140006c78:	mov    rcx,rax
   140006c7b:	call   0x140013924
   140006c80:	mov    rcx,QWORD PTR [rsp+0x70]
   140006c85:	call   0x1400137cc
   140006c8a:	nop
   140006c8b:	mov    rax,QWORD PTR [rbp+0x60]
   140006c8f:	mov    rcx,rsi
   140006c92:	mov    QWORD PTR [rbp+0x60],rcx
   140006c96:	test   rax,rax
   140006c99:	je     0x140006ca7
   140006c9b:	mov    rcx,rax
   140006c9e:	call   0x140013924
   140006ca3:	mov    rcx,QWORD PTR [rbp+0x60]
   140006ca7:	call   0x1400137cc
   140006cac:	mov    rax,QWORD PTR [rbp+0x50]
   140006cb0:	mov    rcx,rsi
   140006cb3:	mov    QWORD PTR [rbp+0x50],rcx
   140006cb7:	test   rax,rax
   140006cba:	je     0x140006cc8
   140006cbc:	mov    rcx,rax
   140006cbf:	call   0x140013924
   140006cc4:	mov    rcx,QWORD PTR [rbp+0x50]
   140006cc8:	call   0x1400137cc
   140006ccd:	nop
   140006cce:	mov    r8,QWORD PTR [rbp+0x10]
   140006cd2:	mov    r9,r8
   140006cd5:	mov    r8,QWORD PTR [r8]
   140006cd8:	lea    rdx,[rbp+0xe0]
   140006cdf:	lea    rcx,[rbp+0x10]
   140006ce3:	call   0x140004990
   140006ce8:	mov    rcx,QWORD PTR [rbp+0x10]
   140006cec:	call   0x1400137cc
   140006cf1:	mov    rax,QWORD PTR [rbp+0x0]
   140006cf5:	mov    rcx,rsi
   140006cf8:	mov    QWORD PTR [rbp+0x0],rcx
   140006cfc:	test   rax,rax
   140006cff:	je     0x140006d0d
   140006d01:	mov    rcx,rax
   140006d04:	call   0x140013924
   140006d09:	mov    rcx,QWORD PTR [rbp+0x0]
   140006d0d:	call   0x1400137cc
   140006d12:	mov    rcx,QWORD PTR [rbp-0x10]
   140006d16:	mov    QWORD PTR [rbp-0x10],rsi
   140006d1a:	test   rcx,rcx
   140006d1d:	je     0x140006d28
   140006d1f:	call   0x140013924
   140006d24:	mov    rsi,QWORD PTR [rbp-0x10]
   140006d28:	mov    rcx,rsi
   140006d2b:	call   0x1400137cc
   140006d30:	xor    eax,eax
   140006d32:	jmp    0x140006d6a
   140006d34:	lea    rax,[rip+0x20855]        # 0x140027590
   140006d3b:	mov    QWORD PTR [rbp+0x78],rax
   140006d3f:	xor    r9d,r9d
   140006d42:	or     r8,0xffffffffffffffff
   140006d46:	lea    rdx,[rip+0x280fb]        # 0x14002ee48
   140006d4d:	lea    rcx,[rbp+0x80]
   140006d54:	call   0x14000fb80
   140006d59:	lea    rdx,[rip+0x2e808]        # 0x140035568
   140006d60:	lea    rcx,[rbp+0x78]
   140006d64:	call   0x14001436c
   140006d69:	nop
   140006d6a:	mov    rbx,QWORD PTR [rsp+0x1f0]
   140006d72:	add    rsp,0x1b0
   140006d79:	pop    r15
   140006d7b:	pop    r14
   140006d7d:	pop    rdi
   140006d7e:	pop    rsi
   140006d7f:	pop    rbp
   140006d80:	ret    
   140006d81:	int3   
   140006d82:	int3   
   140006d83:	int3   
   140006d84:	int3   
   140006d85:	int3   
   140006d86:	int3   
   140006d87:	int3   
   140006d88:	int3   
   140006d89:	int3   
   140006d8a:	int3   
   140006d8b:	int3   
   140006d8c:	int3   
   140006d8d:	int3   
   140006d8e:	int3   
   140006d8f:	int3   
   140006d90:	mov    QWORD PTR [rsp+0x10],rbx
   140006d95:	push   rdi
   140006d96:	sub    rsp,0x20
   140006d9a:	mov    r8,QWORD PTR [rcx+0x30]
   140006d9e:	mov    rdi,rcx
   140006da1:	lea    rdx,[rsp+0x30]
   140006da6:	mov    r9,r8
   140006da9:	mov    r8,QWORD PTR [r8]
   140006dac:	add    rcx,0x30
   140006db0:	call   0x140004990
   140006db5:	mov    rcx,QWORD PTR [rdi+0x30]
   140006db9:	call   0x1400137cc
   140006dbe:	mov    rcx,QWORD PTR [rdi+0x20]
   140006dc2:	xor    ebx,ebx
   140006dc4:	mov    QWORD PTR [rdi+0x20],rbx
   140006dc8:	test   rcx,rcx
   140006dcb:	je     0x140006dd2
   140006dcd:	call   0x140013924
   140006dd2:	mov    rcx,QWORD PTR [rdi+0x20]
   140006dd6:	call   0x1400137cc
   140006ddb:	mov    rcx,QWORD PTR [rdi+0x10]
   140006ddf:	mov    QWORD PTR [rdi+0x10],rbx
   140006de3:	test   rcx,rcx
   140006de6:	je     0x140006ded
   140006de8:	call   0x140013924
   140006ded:	mov    rcx,QWORD PTR [rdi+0x10]
   140006df1:	mov    rbx,QWORD PTR [rsp+0x38]
   140006df6:	add    rsp,0x20
   140006dfa:	pop    rdi
   140006dfb:	jmp    0x1400137cc
   140006e00:	mov    QWORD PTR [rsp+0x10],rbx
   140006e05:	mov    QWORD PTR [rsp+0x18],rsi
   140006e0a:	push   rdi
   140006e0b:	sub    rsp,0x20
   140006e0f:	mov    rdi,QWORD PTR [rcx]
   140006e12:	mov    r11,rdx
   140006e15:	mov    rsi,rcx
   140006e18:	mov    rax,QWORD PTR [rdi+0x8]
   140006e1c:	mov    r9,rdi
   140006e1f:	cmp    BYTE PTR [rax+0x19],0x0
   140006e23:	mov    r8,rax
   140006e26:	jne    0x140006e5a
   140006e28:	mov    r10,QWORD PTR [rdx]
   140006e2b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006e30:	mov    rdx,QWORD PTR [r8+0x20]
   140006e34:	cmp    rdx,r10
   140006e37:	jae    0x140006e3f
   140006e39:	mov    r8,QWORD PTR [r8+0x10]
   140006e3d:	jmp    0x140006e53
   140006e3f:	cmp    BYTE PTR [r9+0x19],0x0
   140006e44:	je     0x140006e4d
   140006e46:	cmp    r10,rdx
   140006e49:	cmovb  r9,r8
   140006e4d:	mov    rdi,r8
   140006e50:	mov    r8,QWORD PTR [r8]
   140006e53:	cmp    BYTE PTR [r8+0x19],0x0
   140006e58:	je     0x140006e30
   140006e5a:	cmp    BYTE PTR [r9+0x19],0x0
   140006e5f:	jne    0x140006e64
   140006e61:	mov    rax,QWORD PTR [r9]
   140006e64:	cmp    BYTE PTR [rax+0x19],0x0
   140006e68:	jne    0x140006e88
   140006e6a:	mov    rcx,QWORD PTR [r11]
   140006e6d:	nop    DWORD PTR [rax]
   140006e70:	cmp    rcx,QWORD PTR [rax+0x20]
   140006e74:	jae    0x140006e7e
   140006e76:	mov    r9,rax
   140006e79:	mov    rax,QWORD PTR [rax]
   140006e7c:	jmp    0x140006e82
   140006e7e:	mov    rax,QWORD PTR [rax+0x10]
   140006e82:	cmp    BYTE PTR [rax+0x19],0x0
   140006e86:	je     0x140006e70
   140006e88:	xor    ebx,ebx
   140006e8a:	mov    rax,rdi
   140006e8d:	cmp    rdi,r9
   140006e90:	je     0x140006eeb
   140006e92:	inc    rbx
   140006e95:	cmp    BYTE PTR [rax+0x19],0x0
   140006e99:	jne    0x140006ee6
   140006e9b:	mov    rcx,QWORD PTR [rax+0x10]
   140006e9f:	cmp    BYTE PTR [rcx+0x19],0x0
   140006ea3:	jne    0x140006ebf
   140006ea5:	mov    rax,rcx
   140006ea8:	mov    rcx,QWORD PTR [rcx]
   140006eab:	cmp    BYTE PTR [rcx+0x19],0x0
   140006eaf:	jne    0x140006ee6
   140006eb1:	mov    rax,rcx
   140006eb4:	mov    rcx,QWORD PTR [rcx]
   140006eb7:	cmp    BYTE PTR [rcx+0x19],0x0
   140006ebb:	je     0x140006eb1
   140006ebd:	jmp    0x140006ee6
   140006ebf:	mov    rcx,QWORD PTR [rax+0x8]
   140006ec3:	cmp    BYTE PTR [rcx+0x19],0x0
   140006ec7:	jne    0x140006ee3
   140006ec9:	nop    DWORD PTR [rax+0x0]
   140006ed0:	cmp    rax,QWORD PTR [rcx+0x10]
   140006ed4:	jne    0x140006ee3
   140006ed6:	mov    rax,rcx
   140006ed9:	mov    rcx,QWORD PTR [rcx+0x8]
   140006edd:	cmp    BYTE PTR [rcx+0x19],0x0
   140006ee1:	je     0x140006ed0
   140006ee3:	mov    rax,rcx
   140006ee6:	cmp    rax,r9
   140006ee9:	jne    0x140006e92
   140006eeb:	lea    rdx,[rsp+0x30]
   140006ef0:	mov    r8,rdi
   140006ef3:	mov    rcx,rsi
   140006ef6:	call   0x140002680
   140006efb:	mov    rsi,QWORD PTR [rsp+0x40]
   140006f00:	mov    rax,rbx
   140006f03:	mov    rbx,QWORD PTR [rsp+0x38]
   140006f08:	add    rsp,0x20
   140006f0c:	pop    rdi
   140006f0d:	ret    
   140006f0e:	int3   
   140006f0f:	int3   
   140006f10:	mov    QWORD PTR [rsp+0x18],r8
   140006f15:	mov    QWORD PTR [rsp+0x8],rcx
   140006f1a:	push   rdi
   140006f1b:	sub    rsp,0x30
   140006f1f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006f28:	mov    QWORD PTR [rsp+0x48],rbx
   140006f2d:	mov    rdi,rdx
   140006f30:	mov    rbx,rcx
   140006f33:	xor    eax,eax
   140006f35:	mov    QWORD PTR [rcx],rax
   140006f38:	mov    QWORD PTR [rcx+0x8],rax
   140006f3c:	call   0x140005030
   140006f41:	mov    QWORD PTR [rbx],rax
   140006f44:	xor    eax,eax
   140006f46:	movzx  r8d,al
   140006f4a:	mov    rdx,rdi
   140006f4d:	mov    rcx,rbx
   140006f50:	call   0x140005070
   140006f55:	nop
   140006f56:	mov    rax,rbx
   140006f59:	mov    rbx,QWORD PTR [rsp+0x48]
   140006f5e:	add    rsp,0x30
   140006f62:	pop    rdi
   140006f63:	ret    
   140006f64:	int3   
   140006f65:	int3   
   140006f66:	int3   
   140006f67:	int3   
   140006f68:	int3   
   140006f69:	int3   
   140006f6a:	int3   
   140006f6b:	int3   
   140006f6c:	int3   
   140006f6d:	int3   
   140006f6e:	int3   
   140006f6f:	int3   
   140006f70:	mov    QWORD PTR [rsp+0x18],r8
   140006f75:	mov    QWORD PTR [rsp+0x8],rcx
   140006f7a:	push   rdi
   140006f7b:	sub    rsp,0x30
   140006f7f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006f88:	mov    QWORD PTR [rsp+0x48],rbx
   140006f8d:	mov    rdi,rdx
   140006f90:	mov    rbx,rcx
   140006f93:	xor    eax,eax
   140006f95:	mov    QWORD PTR [rcx],rax
   140006f98:	mov    QWORD PTR [rcx+0x8],rax
   140006f9c:	call   0x140006fd0
   140006fa1:	mov    QWORD PTR [rbx],rax
   140006fa4:	xor    eax,eax
   140006fa6:	movzx  r8d,al
   140006faa:	mov    rdx,rdi
   140006fad:	mov    rcx,rbx
   140006fb0:	call   0x140007010
   140006fb5:	nop
   140006fb6:	mov    rax,rbx
   140006fb9:	mov    rbx,QWORD PTR [rsp+0x48]
   140006fbe:	add    rsp,0x30
   140006fc2:	pop    rdi
   140006fc3:	ret    
   140006fc4:	int3   
   140006fc5:	int3   
   140006fc6:	int3   
   140006fc7:	int3   
   140006fc8:	int3   
   140006fc9:	int3   
   140006fca:	int3   
   140006fcb:	int3   
   140006fcc:	int3   
   140006fcd:	int3   
   140006fce:	int3   
   140006fcf:	int3   
   140006fd0:	sub    rsp,0x28
   140006fd4:	mov    ecx,0x28
   140006fd9:	call   0x1400138b8
   140006fde:	test   rax,rax
   140006fe1:	je     0x140007009
   140006fe3:	lea    rcx,[rax+0x8]
   140006fe7:	mov    QWORD PTR [rax],rax
   140006fea:	test   rcx,rcx
   140006fed:	je     0x140006ff2
   140006fef:	mov    QWORD PTR [rcx],rax
   140006ff2:	lea    rcx,[rax+0x10]
   140006ff6:	test   rcx,rcx
   140006ff9:	je     0x140006ffe
   140006ffb:	mov    QWORD PTR [rcx],rax
   140006ffe:	mov    WORD PTR [rax+0x18],0x101
   140007004:	add    rsp,0x28
   140007008:	ret    
   140007009:	call   0x140012fc8
   14000700e:	int3   
   14000700f:	int3   
   140007010:	mov    QWORD PTR [rsp+0x8],rbx
   140007015:	mov    QWORD PTR [rsp+0x10],rsi
   14000701a:	push   rdi
   14000701b:	sub    rsp,0x20
   14000701f:	mov    rbx,QWORD PTR [rcx]
   140007022:	mov    rdi,rdx
   140007025:	mov    rdx,QWORD PTR [rdx]
   140007028:	mov    rdx,QWORD PTR [rdx+0x8]
   14000702c:	movzx  r9d,r8b
   140007030:	mov    r8,rbx
   140007033:	mov    rsi,rcx
   140007036:	call   0x140007210
   14000703b:	mov    QWORD PTR [rbx+0x8],rax
   14000703f:	mov    rax,QWORD PTR [rdi+0x8]
   140007043:	mov    rdx,QWORD PTR [rsi]
   140007046:	mov    QWORD PTR [rsi+0x8],rax
   14000704a:	mov    rcx,QWORD PTR [rdx+0x8]
   14000704e:	cmp    BYTE PTR [rcx+0x19],0x0
   140007052:	jne    0x1400070a1
   140007054:	mov    rax,QWORD PTR [rcx]
   140007057:	cmp    BYTE PTR [rax+0x19],0x0
   14000705b:	jne    0x14000706c
   14000705d:	nop    DWORD PTR [rax]
   140007060:	mov    rcx,rax
   140007063:	mov    rax,QWORD PTR [rax]
   140007066:	cmp    BYTE PTR [rax+0x19],0x0
   14000706a:	je     0x140007060
   14000706c:	mov    QWORD PTR [rdx],rcx
   14000706f:	mov    rdx,QWORD PTR [rsi]
   140007072:	mov    rcx,QWORD PTR [rdx+0x8]
   140007076:	mov    rax,QWORD PTR [rcx+0x10]
   14000707a:	cmp    BYTE PTR [rax+0x19],0x0
   14000707e:	jne    0x14000708d
   140007080:	mov    rcx,rax
   140007083:	mov    rax,QWORD PTR [rax+0x10]
   140007087:	cmp    BYTE PTR [rax+0x19],0x0
   14000708b:	je     0x140007080
   14000708d:	mov    QWORD PTR [rdx+0x10],rcx
   140007091:	mov    rbx,QWORD PTR [rsp+0x30]
   140007096:	mov    rsi,QWORD PTR [rsp+0x38]
   14000709b:	add    rsp,0x20
   14000709f:	pop    rdi
   1400070a0:	ret    
   1400070a1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400070a6:	mov    QWORD PTR [rdx],rdx
   1400070a9:	mov    rax,QWORD PTR [rsi]
   1400070ac:	mov    rsi,QWORD PTR [rsp+0x38]
   1400070b1:	mov    QWORD PTR [rax+0x10],rax
   1400070b5:	add    rsp,0x20
   1400070b9:	pop    rdi
   1400070ba:	ret    
   1400070bb:	int3   
   1400070bc:	int3   
   1400070bd:	int3   
   1400070be:	int3   
   1400070bf:	int3   
   1400070c0:	rex push rdi
   1400070c2:	sub    rsp,0x40
   1400070c6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400070cf:	mov    QWORD PTR [rsp+0x58],rbx
   1400070d4:	mov    r11,r9
   1400070d7:	mov    rbx,rdx
   1400070da:	mov    rdi,rcx
   1400070dd:	mov    r10,QWORD PTR [rcx]
   1400070e0:	mov    rax,QWORD PTR [r10+0x8]
   1400070e4:	mov    r9,r10
   1400070e7:	mov    r8b,0x1
   1400070ea:	cmp    BYTE PTR [rax+0x19],0x0
   1400070ee:	jne    0x14000711f
   1400070f0:	mov    rdx,QWORD PTR [r11]
   1400070f3:	nop    DWORD PTR [rax+0x0]
   1400070f7:	nop    WORD PTR [rax+rax*1+0x0]
   140007100:	mov    r9,rax
   140007103:	cmp    rdx,QWORD PTR [rax+0x20]
   140007107:	setb   r8b
   14000710b:	test   r8b,r8b
   14000710e:	je     0x140007115
   140007110:	mov    rax,QWORD PTR [rax]
   140007113:	jmp    0x140007119
   140007115:	mov    rax,QWORD PTR [rax+0x10]
   140007119:	cmp    BYTE PTR [rax+0x19],0x0
   14000711d:	je     0x140007100
   14000711f:	mov    rax,r9
   140007122:	test   r8b,r8b
   140007125:	je     0x1400071ba
   14000712b:	cmp    r9,QWORD PTR [r10]
   14000712e:	jne    0x14000715d
   140007130:	movzx  eax,BYTE PTR [rsp+0x70]
   140007135:	mov    BYTE PTR [rsp+0x28],al
   140007139:	mov    QWORD PTR [rsp+0x20],r11
   14000713e:	mov    r8b,0x1
   140007141:	lea    rdx,[rsp+0x50]
   140007146:	call   0x1400072b0
   14000714b:	mov    rax,QWORD PTR [rax]
   14000714e:	mov    QWORD PTR [rbx],rax
   140007151:	mov    BYTE PTR [rbx+0x8],0x1
   140007155:	mov    rax,rbx
   140007158:	jmp    0x1400071f7
   14000715d:	cmp    BYTE PTR [r9+0x19],0x0
   140007162:	je     0x14000716a
   140007164:	mov    rax,QWORD PTR [r9+0x10]
   140007168:	jmp    0x1400071ba
   14000716a:	mov    rcx,QWORD PTR [r9]
   14000716d:	cmp    BYTE PTR [rcx+0x19],0x0
   140007171:	jne    0x14000718f
   140007173:	mov    rax,rcx
   140007176:	mov    rcx,QWORD PTR [rcx+0x10]
   14000717a:	cmp    BYTE PTR [rcx+0x19],0x0
   14000717e:	jne    0x1400071ba
   140007180:	mov    rax,rcx
   140007183:	mov    rcx,QWORD PTR [rcx+0x10]
   140007187:	cmp    BYTE PTR [rcx+0x19],0x0
   14000718b:	je     0x140007180
   14000718d:	jmp    0x1400071ba
   14000718f:	mov    rcx,QWORD PTR [r9+0x8]
   140007193:	cmp    BYTE PTR [rcx+0x19],0x0
   140007197:	jne    0x1400071b2
   140007199:	nop    DWORD PTR [rax+0x0]
   1400071a0:	cmp    rax,QWORD PTR [rcx]
   1400071a3:	jne    0x1400071b2
   1400071a5:	mov    rax,rcx
   1400071a8:	mov    rcx,QWORD PTR [rcx+0x8]
   1400071ac:	cmp    BYTE PTR [rcx+0x19],0x0
   1400071b0:	je     0x1400071a0
   1400071b2:	cmp    BYTE PTR [rax+0x19],0x0
   1400071b6:	cmove  rax,rcx
   1400071ba:	mov    rcx,QWORD PTR [r11]
   1400071bd:	cmp    QWORD PTR [rax+0x20],rcx
   1400071c1:	jae    0x1400071ed
   1400071c3:	movzx  eax,BYTE PTR [rsp+0x70]
   1400071c8:	mov    BYTE PTR [rsp+0x28],al
   1400071cc:	mov    QWORD PTR [rsp+0x20],r11
   1400071d1:	lea    rdx,[rsp+0x50]
   1400071d6:	mov    rcx,rdi
   1400071d9:	call   0x1400072b0
   1400071de:	mov    rax,QWORD PTR [rax]
   1400071e1:	mov    QWORD PTR [rbx],rax
   1400071e4:	mov    BYTE PTR [rbx+0x8],0x1
   1400071e8:	mov    rax,rbx
   1400071eb:	jmp    0x1400071f7
   1400071ed:	mov    QWORD PTR [rbx],rax
   1400071f0:	mov    BYTE PTR [rbx+0x8],0x0
   1400071f4:	mov    rax,rbx
   1400071f7:	mov    rbx,QWORD PTR [rsp+0x58]
   1400071fc:	add    rsp,0x40
   140007200:	pop    rdi
   140007201:	ret    
   140007202:	int3   
   140007203:	int3   
   140007204:	int3   
   140007205:	int3   
   140007206:	int3   
   140007207:	int3   
   140007208:	int3   
   140007209:	int3   
   14000720a:	int3   
   14000720b:	int3   
   14000720c:	int3   
   14000720d:	int3   
   14000720e:	int3   
   14000720f:	int3   
   140007210:	mov    BYTE PTR [rsp+0x20],r9b
   140007215:	mov    QWORD PTR [rsp+0x18],r8
   14000721a:	mov    QWORD PTR [rsp+0x10],rdx
   14000721f:	mov    QWORD PTR [rsp+0x8],rcx
   140007224:	push   rbx
   140007225:	push   rsi
   140007226:	push   rdi
   140007227:	sub    rsp,0x30
   14000722b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140007234:	mov    rsi,rcx
   140007237:	mov    rdi,QWORD PTR [rcx]
   14000723a:	cmp    BYTE PTR [rdx+0x19],0x0
   14000723e:	jne    0x1400072a3
   140007240:	add    rdx,0x20
   140007244:	call   0x140007580
   140007249:	mov    rbx,rax
   14000724c:	mov    rax,QWORD PTR [rsp+0x60]
   140007251:	mov    QWORD PTR [rbx+0x8],rax
   140007255:	mov    rcx,QWORD PTR [rsp+0x58]
   14000725a:	movzx  eax,BYTE PTR [rcx+0x18]
   14000725e:	mov    BYTE PTR [rbx+0x18],al
   140007261:	cmp    BYTE PTR [rdi+0x19],0x0
   140007265:	cmovne rdi,rbx
   140007269:	mov    QWORD PTR [rsp+0x20],rdi
   14000726e:	movzx  r9d,BYTE PTR [rsp+0x68]
   140007274:	mov    r8,rbx
   140007277:	mov    rdx,QWORD PTR [rcx]
   14000727a:	mov    rcx,rsi
   14000727d:	call   0x140007210
   140007282:	mov    QWORD PTR [rbx],rax
   140007285:	movzx  r9d,BYTE PTR [rsp+0x68]
   14000728b:	mov    r8,rbx
   14000728e:	mov    rdx,QWORD PTR [rsp+0x58]
   140007293:	mov    rdx,QWORD PTR [rdx+0x10]
   140007297:	mov    rcx,rsi
   14000729a:	call   0x140007210
   14000729f:	mov    QWORD PTR [rbx+0x10],rax
   1400072a3:	mov    rax,rdi
   1400072a6:	add    rsp,0x30
   1400072aa:	pop    rdi
   1400072ab:	pop    rsi
   1400072ac:	pop    rbx
   1400072ad:	ret    
   1400072ae:	int3   
   1400072af:	int3   
   1400072b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400072b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400072ba:	mov    QWORD PTR [rsp+0x18],rdi
   1400072bf:	push   r14
   1400072c1:	sub    rsp,0x20
   1400072c5:	movabs rax,0x666666666666665
   1400072cf:	mov    rdi,r9
   1400072d2:	movzx  esi,r8b
   1400072d6:	mov    r14,rdx
   1400072d9:	mov    rbx,rcx
   1400072dc:	cmp    QWORD PTR [rcx+0x8],rax
   1400072e0:	jae    0x140007567
   1400072e6:	mov    rdx,QWORD PTR [rsp+0x50]
   1400072eb:	call   0x140007580
   1400072f0:	inc    QWORD PTR [rbx+0x8]
   1400072f4:	mov    QWORD PTR [rax+0x8],rdi
   1400072f8:	mov    rcx,QWORD PTR [rbx]
   1400072fb:	mov    r9,rax
   1400072fe:	cmp    rdi,rcx
   140007301:	jne    0x140007316
   140007303:	mov    QWORD PTR [rcx+0x8],rax
   140007307:	mov    rcx,QWORD PTR [rbx]
   14000730a:	mov    QWORD PTR [rcx],rax
   14000730d:	mov    rcx,QWORD PTR [rbx]
   140007310:	mov    QWORD PTR [rcx+0x10],rax
   140007314:	jmp    0x14000733c
   140007316:	test   sil,sil
   140007319:	je     0x14000732b
   14000731b:	mov    QWORD PTR [rdi],rax
   14000731e:	mov    rax,QWORD PTR [rbx]
   140007321:	cmp    rdi,QWORD PTR [rax]
   140007324:	jne    0x14000733c
   140007326:	mov    QWORD PTR [rax],r9
   140007329:	jmp    0x14000733c
   14000732b:	mov    QWORD PTR [rdi+0x10],rax
   14000732f:	mov    rax,QWORD PTR [rbx]
   140007332:	cmp    rdi,QWORD PTR [rax+0x10]
   140007336:	jne    0x14000733c
   140007338:	mov    QWORD PTR [rax+0x10],r9
   14000733c:	mov    rcx,QWORD PTR [r9+0x8]
   140007340:	mov    rax,r9
   140007343:	cmp    BYTE PTR [rcx+0x18],0x0
   140007347:	jne    0x140007540
   14000734d:	nop    DWORD PTR [rax]
   140007350:	mov    rcx,QWORD PTR [rax+0x8]
   140007354:	mov    r8,QWORD PTR [rcx+0x8]
   140007358:	mov    rdx,QWORD PTR [r8]
   14000735b:	cmp    rcx,rdx
   14000735e:	jne    0x140007455
   140007364:	mov    rdx,QWORD PTR [r8+0x10]
   140007368:	cmp    BYTE PTR [rdx+0x18],0x0
   14000736c:	jne    0x14000738f
   14000736e:	mov    BYTE PTR [rcx+0x18],0x1
   140007372:	mov    BYTE PTR [rdx+0x18],0x1
   140007376:	mov    rcx,QWORD PTR [rax+0x8]
   14000737a:	mov    rdx,QWORD PTR [rcx+0x8]
   14000737e:	mov    BYTE PTR [rdx+0x18],0x0
   140007382:	mov    rcx,QWORD PTR [rax+0x8]
   140007386:	mov    rax,QWORD PTR [rcx+0x8]
   14000738a:	jmp    0x140007532
   14000738f:	cmp    rax,QWORD PTR [rcx+0x10]
   140007393:	jne    0x1400073e0
   140007395:	mov    rdx,QWORD PTR [rcx+0x10]
   140007399:	mov    rax,rcx
   14000739c:	mov    rcx,QWORD PTR [rdx]
   14000739f:	mov    QWORD PTR [rax+0x10],rcx
   1400073a3:	mov    rcx,QWORD PTR [rdx]
   1400073a6:	cmp    BYTE PTR [rcx+0x19],0x0
   1400073aa:	jne    0x1400073b0
   1400073ac:	mov    QWORD PTR [rcx+0x8],rax
   1400073b0:	mov    rcx,QWORD PTR [rax+0x8]
   1400073b4:	mov    QWORD PTR [rdx+0x8],rcx
   1400073b8:	mov    rcx,QWORD PTR [rbx]
   1400073bb:	cmp    rax,QWORD PTR [rcx+0x8]
   1400073bf:	jne    0x1400073c7
   1400073c1:	mov    QWORD PTR [rcx+0x8],rdx
   1400073c5:	jmp    0x1400073d9
   1400073c7:	mov    rcx,QWORD PTR [rax+0x8]
   1400073cb:	cmp    rax,QWORD PTR [rcx]
   1400073ce:	jne    0x1400073d5
   1400073d0:	mov    QWORD PTR [rcx],rdx
   1400073d3:	jmp    0x1400073d9
   1400073d5:	mov    QWORD PTR [rcx+0x10],rdx
   1400073d9:	mov    QWORD PTR [rdx],rax
   1400073dc:	mov    QWORD PTR [rax+0x8],rdx
   1400073e0:	mov    rcx,QWORD PTR [rax+0x8]
   1400073e4:	mov    BYTE PTR [rcx+0x18],0x1
   1400073e8:	mov    rcx,QWORD PTR [rax+0x8]
   1400073ec:	mov    rdx,QWORD PTR [rcx+0x8]
   1400073f0:	mov    BYTE PTR [rdx+0x18],0x0
   1400073f4:	mov    rcx,QWORD PTR [rax+0x8]
   1400073f8:	mov    rdx,QWORD PTR [rcx+0x8]
   1400073fc:	mov    r8,QWORD PTR [rdx]
   1400073ff:	mov    rcx,QWORD PTR [r8+0x10]
   140007403:	mov    QWORD PTR [rdx],rcx
   140007406:	mov    rcx,QWORD PTR [r8+0x10]
   14000740a:	cmp    BYTE PTR [rcx+0x19],0x0
   14000740e:	jne    0x140007414
   140007410:	mov    QWORD PTR [rcx+0x8],rdx
   140007414:	mov    rcx,QWORD PTR [rdx+0x8]
   140007418:	mov    QWORD PTR [r8+0x8],rcx
   14000741c:	mov    rcx,QWORD PTR [rbx]
   14000741f:	cmp    rdx,QWORD PTR [rcx+0x8]
   140007423:	jne    0x140007432
   140007425:	mov    QWORD PTR [rcx+0x8],r8
   140007429:	mov    QWORD PTR [r8+0x10],rdx
   14000742d:	jmp    0x14000752e
   140007432:	mov    rcx,QWORD PTR [rdx+0x8]
   140007436:	cmp    rdx,QWORD PTR [rcx+0x10]
   14000743a:	jne    0x140007449
   14000743c:	mov    QWORD PTR [rcx+0x10],r8
   140007440:	mov    QWORD PTR [r8+0x10],rdx
   140007444:	jmp    0x14000752e
   140007449:	mov    QWORD PTR [rcx],r8
   14000744c:	mov    QWORD PTR [r8+0x10],rdx
   140007450:	jmp    0x14000752e
   140007455:	cmp    BYTE PTR [rdx+0x18],0x0
   140007459:	jne    0x14000747c
   14000745b:	mov    BYTE PTR [rcx+0x18],0x1
   14000745f:	mov    BYTE PTR [rdx+0x18],0x1
   140007463:	mov    rcx,QWORD PTR [rax+0x8]
   140007467:	mov    rdx,QWORD PTR [rcx+0x8]
   14000746b:	mov    BYTE PTR [rdx+0x18],0x0
   14000746f:	mov    rcx,QWORD PTR [rax+0x8]
   140007473:	mov    rax,QWORD PTR [rcx+0x8]
   140007477:	jmp    0x140007532
   14000747c:	cmp    rax,QWORD PTR [rcx]
   14000747f:	jne    0x1400074ce
   140007481:	mov    rdx,QWORD PTR [rcx]
   140007484:	mov    rax,rcx
   140007487:	mov    rcx,QWORD PTR [rdx+0x10]
   14000748b:	mov    QWORD PTR [rax],rcx
   14000748e:	mov    rcx,QWORD PTR [rdx+0x10]
   140007492:	cmp    BYTE PTR [rcx+0x19],0x0
   140007496:	jne    0x14000749c
   140007498:	mov    QWORD PTR [rcx+0x8],rax
   14000749c:	mov    rcx,QWORD PTR [rax+0x8]
   1400074a0:	mov    QWORD PTR [rdx+0x8],rcx
   1400074a4:	mov    rcx,QWORD PTR [rbx]
   1400074a7:	cmp    rax,QWORD PTR [rcx+0x8]
   1400074ab:	jne    0x1400074b3
   1400074ad:	mov    QWORD PTR [rcx+0x8],rdx
   1400074b1:	jmp    0x1400074c6
   1400074b3:	mov    rcx,QWORD PTR [rax+0x8]
   1400074b7:	cmp    rax,QWORD PTR [rcx+0x10]
   1400074bb:	jne    0x1400074c3
   1400074bd:	mov    QWORD PTR [rcx+0x10],rdx
   1400074c1:	jmp    0x1400074c6
   1400074c3:	mov    QWORD PTR [rcx],rdx
   1400074c6:	mov    QWORD PTR [rdx+0x10],rax
   1400074ca:	mov    QWORD PTR [rax+0x8],rdx
   1400074ce:	mov    rcx,QWORD PTR [rax+0x8]
   1400074d2:	mov    BYTE PTR [rcx+0x18],0x1
   1400074d6:	mov    rcx,QWORD PTR [rax+0x8]
   1400074da:	mov    rdx,QWORD PTR [rcx+0x8]
   1400074de:	mov    BYTE PTR [rdx+0x18],0x0
   1400074e2:	mov    rcx,QWORD PTR [rax+0x8]
   1400074e6:	mov    rdx,QWORD PTR [rcx+0x8]
   1400074ea:	mov    r8,QWORD PTR [rdx+0x10]
   1400074ee:	mov    rcx,QWORD PTR [r8]
   1400074f1:	mov    QWORD PTR [rdx+0x10],rcx
   1400074f5:	mov    rcx,QWORD PTR [r8]
   1400074f8:	cmp    BYTE PTR [rcx+0x19],0x0
   1400074fc:	jne    0x140007502
   1400074fe:	mov    QWORD PTR [rcx+0x8],rdx
   140007502:	mov    rcx,QWORD PTR [rdx+0x8]
   140007506:	mov    QWORD PTR [r8+0x8],rcx
   14000750a:	mov    rcx,QWORD PTR [rbx]
   14000750d:	cmp    rdx,QWORD PTR [rcx+0x8]
   140007511:	jne    0x140007519
   140007513:	mov    QWORD PTR [rcx+0x8],r8
   140007517:	jmp    0x14000752b
   140007519:	mov    rcx,QWORD PTR [rdx+0x8]
   14000751d:	cmp    rdx,QWORD PTR [rcx]
   140007520:	jne    0x140007527
   140007522:	mov    QWORD PTR [rcx],r8
   140007525:	jmp    0x14000752b
   140007527:	mov    QWORD PTR [rcx+0x10],r8
   14000752b:	mov    QWORD PTR [r8],rdx
   14000752e:	mov    QWORD PTR [rdx+0x8],r8
   140007532:	mov    rcx,QWORD PTR [rax+0x8]
   140007536:	cmp    BYTE PTR [rcx+0x18],0x0
   14000753a:	je     0x140007350
   140007540:	mov    rax,QWORD PTR [rbx]
   140007543:	mov    rsi,QWORD PTR [rsp+0x38]
   140007548:	mov    rdi,QWORD PTR [rsp+0x40]
   14000754d:	mov    rcx,QWORD PTR [rax+0x8]
   140007551:	mov    rbx,QWORD PTR [rsp+0x30]
   140007556:	mov    QWORD PTR [r14],r9
   140007559:	mov    BYTE PTR [rcx+0x18],0x1
   14000755d:	mov    rax,r14
   140007560:	add    rsp,0x20
   140007564:	pop    r14
   140007566:	ret    
   140007567:	lea    rcx,[rip+0x2772a]        # 0x14002ec98
   14000756e:	call   0x14001300c
   140007573:	int3   
   140007574:	int3   
   140007575:	int3   
   140007576:	int3   
   140007577:	int3   
   140007578:	int3   
   140007579:	int3   
   14000757a:	int3   
   14000757b:	int3   
   14000757c:	int3   
   14000757d:	int3   
   14000757e:	int3   
   14000757f:	int3   
   140007580:	rex push rbx
   140007582:	sub    rsp,0x20
   140007586:	mov    rbx,rdx
   140007589:	call   0x1400075b0
   14000758e:	lea    r8,[rax+0x20]
   140007592:	mov    WORD PTR [rax+0x18],0x0
   140007598:	test   r8,r8
   14000759b:	je     0x1400075a3
   14000759d:	mov    rcx,QWORD PTR [rbx]
   1400075a0:	mov    QWORD PTR [r8],rcx
   1400075a3:	add    rsp,0x20
   1400075a7:	pop    rbx
   1400075a8:	ret    
   1400075a9:	int3   
   1400075aa:	int3   
   1400075ab:	int3   
   1400075ac:	int3   
   1400075ad:	int3   
   1400075ae:	int3   
   1400075af:	int3   
   1400075b0:	rex push rbx
   1400075b2:	sub    rsp,0x20
   1400075b6:	mov    rbx,rcx
   1400075b9:	mov    ecx,0x28
   1400075be:	call   0x1400138b8
   1400075c3:	mov    rdx,rax
   1400075c6:	test   rax,rax
   1400075c9:	je     0x1400075f8
   1400075cb:	mov    rax,QWORD PTR [rbx]
   1400075ce:	lea    rcx,[rdx+0x8]
   1400075d2:	mov    QWORD PTR [rdx],rax
   1400075d5:	test   rcx,rcx
   1400075d8:	je     0x1400075e0
   1400075da:	mov    rax,QWORD PTR [rbx]
   1400075dd:	mov    QWORD PTR [rcx],rax
   1400075e0:	lea    rcx,[rdx+0x10]
   1400075e4:	test   rcx,rcx
   1400075e7:	je     0x1400075ef
   1400075e9:	mov    rax,QWORD PTR [rbx]
   1400075ec:	mov    QWORD PTR [rcx],rax
   1400075ef:	mov    rax,rdx
   1400075f2:	add    rsp,0x20
   1400075f6:	pop    rbx
   1400075f7:	ret    
   1400075f8:	call   0x140012fc8
   1400075fd:	int3   
   1400075fe:	int3   
   1400075ff:	int3   
   140007600:	sub    rcx,0x58
   140007604:	jmp    0x140005ff0
   140007609:	int3   
   14000760a:	int3   
   14000760b:	int3   
   14000760c:	int3   
   14000760d:	int3   
   14000760e:	int3   
   14000760f:	int3   
   140007610:	mov    QWORD PTR [rsp+0x8],rbx
   140007615:	push   rdi
   140007616:	sub    rsp,0x20
   14000761a:	lea    rax,[rip+0x2784f]        # 0x14002ee70
   140007621:	mov    rdi,rcx
   140007624:	mov    ebx,edx
   140007626:	mov    QWORD PTR [rcx],rax
   140007629:	mov    rcx,QWORD PTR [rcx+0x18]
   14000762d:	call   0x1400137cc
   140007632:	test   bl,0x1
   140007635:	je     0x14000763f
   140007637:	mov    rcx,rdi
   14000763a:	call   0x1400137cc
   14000763f:	mov    rax,rdi
   140007642:	mov    rbx,QWORD PTR [rsp+0x30]
   140007647:	add    rsp,0x20
   14000764b:	pop    rdi
   14000764c:	ret    
   14000764d:	int3   
   14000764e:	int3   
   14000764f:	int3   
   140007650:	lea    rax,[rip+0x27819]        # 0x14002ee70
   140007657:	mov    QWORD PTR [rcx],rax
   14000765a:	mov    rcx,QWORD PTR [rcx+0x18]
   14000765e:	jmp    0x1400137cc
   140007663:	int3   
   140007664:	int3   
   140007665:	int3   
   140007666:	int3   
   140007667:	int3   
   140007668:	int3   
   140007669:	int3   
   14000766a:	int3   
   14000766b:	int3   
   14000766c:	int3   
   14000766d:	int3   
   14000766e:	int3   
   14000766f:	int3   
   140007670:	mov    QWORD PTR [rsp+0x8],rbx
   140007675:	mov    QWORD PTR [rsp+0x10],rbp
   14000767a:	mov    QWORD PTR [rsp+0x18],rsi
   14000767f:	mov    QWORD PTR [rsp+0x20],rdi
   140007684:	push   r14
   140007686:	sub    rsp,0x20
   14000768a:	mov    esi,DWORD PTR [rsp+0x50]
   14000768e:	mov    rbx,rcx
   140007691:	mov    DWORD PTR [rcx+0x8],edx
   140007694:	mov    DWORD PTR [rcx+0xc],r8d
   140007698:	mov    ecx,esi
   14000769a:	mov    r14,r9
   14000769d:	call   0x14001307c
   1400076a2:	mov    rcx,QWORD PTR [rbx+0x18]
   1400076a6:	mov    rdi,rax
   1400076a9:	cmp    rax,rcx
   1400076ac:	je     0x1400076b3
   1400076ae:	call   0x1400137cc
   1400076b3:	mov    QWORD PTR [rbx+0x18],rdi
   1400076b7:	mov    rcx,rdi
   1400076ba:	test   rdi,rdi
   1400076bd:	je     0x1400076cd
   1400076bf:	mov    r8,rsi
   1400076c2:	mov    rdx,r14
   1400076c5:	call   0x1400130d0
   1400076ca:	mov    DWORD PTR [rbx+0x10],esi
   1400076cd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400076d2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400076d7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400076dc:	mov    rdi,QWORD PTR [rsp+0x48]
   1400076e1:	add    rsp,0x20
   1400076e5:	pop    r14
   1400076e7:	ret    
   1400076e8:	int3   
   1400076e9:	int3   
   1400076ea:	int3   
   1400076eb:	int3   
   1400076ec:	int3   
   1400076ed:	int3   
   1400076ee:	int3   
   1400076ef:	int3   
   1400076f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400076f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400076fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400076ff:	mov    QWORD PTR [rsp+0x20],rdi
   140007704:	push   r14
   140007706:	sub    rsp,0x20
   14000770a:	mov    esi,r9d
   14000770d:	mov    r14,r8
   140007710:	mov    ebx,edx
   140007712:	mov    rdi,rcx
   140007715:	call   QWORD PTR [rip+0x1f98d]        # 0x1400270a8
   14000771b:	mov    ecx,esi
   14000771d:	mov    DWORD PTR [rdi+0xc],eax
   140007720:	mov    DWORD PTR [rdi+0x8],ebx
   140007723:	call   0x14001307c
   140007728:	mov    rcx,QWORD PTR [rdi+0x18]
   14000772c:	mov    rbx,rax
   14000772f:	cmp    rax,rcx
   140007732:	je     0x140007739
   140007734:	call   0x1400137cc
   140007739:	mov    QWORD PTR [rdi+0x18],rbx
   14000773d:	mov    rcx,rbx
   140007740:	test   rbx,rbx
   140007743:	je     0x140007753
   140007745:	mov    r8,rsi
   140007748:	mov    rdx,r14
   14000774b:	call   0x1400130d0
   140007750:	mov    DWORD PTR [rdi+0x10],esi
   140007753:	mov    rbx,QWORD PTR [rsp+0x30]
   140007758:	mov    rbp,QWORD PTR [rsp+0x38]
   14000775d:	mov    rsi,QWORD PTR [rsp+0x40]
   140007762:	mov    rdi,QWORD PTR [rsp+0x48]
   140007767:	add    rsp,0x20
   14000776b:	pop    r14
   14000776d:	ret    
   14000776e:	int3   
   14000776f:	int3   
   140007770:	rex push rdi
   140007772:	sub    rsp,0x60
   140007776:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000777f:	mov    QWORD PTR [rsp+0x78],rbx
   140007784:	mov    rdi,rcx
   140007787:	xor    r9d,r9d
   14000778a:	or     r8,0xffffffffffffffff
   14000778e:	lea    rdx,[rip+0x276eb]        # 0x14002ee80
   140007795:	lea    rcx,[rsp+0x28]
   14000779a:	call   0x14000fb80
   14000779f:	nop
   1400077a0:	lea    rax,[rip+0x1fde9]        # 0x140027590
   1400077a7:	mov    QWORD PTR [rdi],rax
   1400077aa:	lea    rcx,[rdi+0x8]
   1400077ae:	mov    QWORD PTR [rsp+0x70],rcx
   1400077b3:	xor    ebx,ebx
   1400077b5:	mov    DWORD PTR [rcx],ebx
   1400077b7:	mov    QWORD PTR [rcx+0x8],rbx
   1400077bb:	mov    QWORD PTR [rcx+0x10],rbx
   1400077bf:	mov    QWORD PTR [rcx+0x18],rbx
   1400077c3:	mov    QWORD PTR [rcx+0x20],rbx
   1400077c7:	mov    QWORD PTR [rcx+0x28],rbx
   1400077cb:	or     r8,0xffffffffffffffff
   1400077cf:	lea    rdx,[rsp+0x28]
   1400077d4:	call   0x140010560
   1400077d9:	nop
   1400077da:	lea    rax,[rip+0x277a7]        # 0x14002ef88
   1400077e1:	mov    QWORD PTR [rdi],rax
   1400077e4:	mov    rax,QWORD PTR [rsp+0x48]
   1400077e9:	mov    ecx,ebx
   1400077eb:	mov    QWORD PTR [rsp+0x48],rbx
   1400077f0:	test   rax,rax
   1400077f3:	je     0x140007802
   1400077f5:	mov    rcx,rax
   1400077f8:	call   0x140013924
   1400077fd:	mov    rcx,QWORD PTR [rsp+0x48]
   140007802:	call   0x1400137cc
   140007807:	mov    rcx,QWORD PTR [rsp+0x38]
   14000780c:	mov    QWORD PTR [rsp+0x38],rbx
   140007811:	test   rcx,rcx
   140007814:	je     0x140007820
   140007816:	call   0x140013924
   14000781b:	mov    rbx,QWORD PTR [rsp+0x38]
   140007820:	mov    rcx,rbx
   140007823:	call   0x1400137cc
   140007828:	lea    rax,[rip+0x27771]        # 0x14002efa0
   14000782f:	mov    QWORD PTR [rdi],rax
   140007832:	mov    rax,rdi
   140007835:	mov    rbx,QWORD PTR [rsp+0x78]
   14000783a:	add    rsp,0x60
   14000783e:	pop    rdi
   14000783f:	ret    
   140007840:	mov    QWORD PTR [rsp+0x8],rbx
   140007845:	push   rdi
   140007846:	sub    rsp,0x20
   14000784a:	mov    ebx,edx
   14000784c:	mov    rdi,rcx
   14000784f:	call   0x140012580
   140007854:	test   bl,0x1
   140007857:	je     0x140007861
   140007859:	mov    rcx,rdi
   14000785c:	call   0x1400137cc
   140007861:	mov    rax,rdi
   140007864:	mov    rbx,QWORD PTR [rsp+0x30]
   140007869:	add    rsp,0x20
   14000786d:	pop    rdi
   14000786e:	ret    
   14000786f:	int3   
   140007870:	lea    rax,[rip+0x27701]        # 0x14002ef78
   140007877:	mov    QWORD PTR [rcx],rax
   14000787a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000787e:	test   rcx,rcx
   140007881:	je     0x14000788a
   140007883:	rex.W jmp QWORD PTR [rip+0x1f826]        # 0x1400270b0
   14000788a:	ret    
   14000788b:	int3   
   14000788c:	int3   
   14000788d:	int3   
   14000788e:	int3   
   14000788f:	int3   
   140007890:	mov    QWORD PTR [rsp+0x8],rbx
   140007895:	push   rdi
   140007896:	sub    rsp,0x20
   14000789a:	lea    rax,[rip+0x276d7]        # 0x14002ef78
   1400078a1:	mov    rbx,rcx
   1400078a4:	mov    edi,edx
   1400078a6:	mov    QWORD PTR [rcx],rax
   1400078a9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400078ad:	test   rcx,rcx
   1400078b0:	je     0x1400078b8
   1400078b2:	call   QWORD PTR [rip+0x1f7f8]        # 0x1400270b0
   1400078b8:	test   dil,0x1
   1400078bc:	je     0x1400078c6
   1400078be:	mov    rcx,rbx
   1400078c1:	call   0x1400137cc
   1400078c6:	mov    rax,rbx
   1400078c9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078ce:	add    rsp,0x20
   1400078d2:	pop    rdi
   1400078d3:	ret    
   1400078d4:	int3   
   1400078d5:	int3   
   1400078d6:	int3   
   1400078d7:	int3   
   1400078d8:	int3   
   1400078d9:	int3   
   1400078da:	int3   
   1400078db:	int3   
   1400078dc:	int3   
   1400078dd:	int3   
   1400078de:	int3   
   1400078df:	int3   
   1400078e0:	mov    rcx,QWORD PTR [rcx]
   1400078e3:	cmp    rcx,0xffffffffffffffff
   1400078e7:	je     0x1400078f0
   1400078e9:	rex.W jmp QWORD PTR [rip+0x1f7b0]        # 0x1400270a0
   1400078f0:	ret    
   1400078f1:	int3   
   1400078f2:	int3   
   1400078f3:	int3   
   1400078f4:	int3   
   1400078f5:	int3   
   1400078f6:	int3   
   1400078f7:	int3   
   1400078f8:	int3   
   1400078f9:	int3   
   1400078fa:	int3   
   1400078fb:	int3   
   1400078fc:	int3   
   1400078fd:	int3   
   1400078fe:	int3   
   1400078ff:	int3   
   140007900:	rex push rbx
   140007902:	sub    rsp,0x30
   140007906:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000790f:	mov    rbx,rcx
   140007912:	lea    rax,[rip+0x1fc77]        # 0x140027590
   140007919:	mov    QWORD PTR [rcx],rax
   14000791c:	add    rcx,0x8
   140007920:	mov    QWORD PTR [rsp+0x40],rcx
   140007925:	xor    eax,eax
   140007927:	mov    DWORD PTR [rcx],eax
   140007929:	mov    QWORD PTR [rcx+0x8],rax
   14000792d:	mov    QWORD PTR [rcx+0x10],rax
   140007931:	mov    QWORD PTR [rcx+0x18],rax
   140007935:	mov    QWORD PTR [rcx+0x20],rax
   140007939:	mov    QWORD PTR [rcx+0x28],rax
   14000793d:	add    rdx,0x8
   140007941:	or     r8,0xffffffffffffffff
   140007945:	call   0x140010560
   14000794a:	nop
   14000794b:	lea    rax,[rip+0x27636]        # 0x14002ef88
   140007952:	mov    QWORD PTR [rbx],rax
   140007955:	mov    rax,rbx
   140007958:	add    rsp,0x30
   14000795c:	pop    rbx
   14000795d:	ret    
   14000795e:	int3   
   14000795f:	int3   
   140007960:	mov    rax,rsp
   140007963:	mov    QWORD PTR [rax+0x8],rcx
   140007967:	push   r14
   140007969:	sub    rsp,0x60
   14000796d:	mov    QWORD PTR [rax-0x48],0xfffffffffffffffe
   140007975:	mov    QWORD PTR [rax+0x10],rbx
   140007979:	mov    QWORD PTR [rax+0x18],rsi
   14000797d:	mov    QWORD PTR [rax+0x20],rdi
   140007981:	mov    rdi,rdx
   140007984:	mov    r14,rcx
   140007987:	lea    rax,[rip+0x273da]        # 0x14002ed68
   14000798e:	mov    QWORD PTR [rcx],rax
   140007991:	mov    QWORD PTR [rcx+0x8],r8
   140007995:	mov    QWORD PTR [rcx+0x10],r9
   140007999:	xor    r9d,r9d
   14000799c:	or     r8,0xffffffffffffffff
   1400079a0:	lea    rdx,[rip+0x274f1]        # 0x14002ee98
   1400079a7:	add    rcx,0x18
   1400079ab:	call   0x14000fb80
   1400079b0:	nop
   1400079b1:	lea    rcx,[r14+0x48]
   1400079b5:	lea    rax,[rip+0x1ff84]        # 0x140027940
   1400079bc:	mov    QWORD PTR [rcx],rax
   1400079bf:	xor    esi,esi
   1400079c1:	mov    QWORD PTR [rcx+0x8],rsi
   1400079c5:	call   0x140012790
   1400079ca:	nop
   1400079cb:	xor    r9d,r9d
   1400079ce:	or     r8,0xffffffffffffffff
   1400079d2:	mov    rdx,rdi
   1400079d5:	lea    rcx,[rsp+0x28]
   1400079da:	call   0x14000fb80
   1400079df:	nop
   1400079e0:	lea    rdx,[rsp+0x28]
   1400079e5:	lea    rcx,[r14+0x18]
   1400079e9:	call   0x14000fdb0
   1400079ee:	nop
   1400079ef:	mov    rax,QWORD PTR [rsp+0x48]
   1400079f4:	mov    ecx,esi
   1400079f6:	mov    QWORD PTR [rsp+0x48],rcx
   1400079fb:	test   rax,rax
   1400079fe:	je     0x140007a0d
   140007a00:	mov    rcx,rax
   140007a03:	call   0x140013924
   140007a08:	mov    rcx,QWORD PTR [rsp+0x48]
   140007a0d:	call   0x1400137cc
   140007a12:	mov    rcx,QWORD PTR [rsp+0x38]
   140007a17:	mov    QWORD PTR [rsp+0x38],rsi
   140007a1c:	test   rcx,rcx
   140007a1f:	je     0x140007a2b
   140007a21:	call   0x140013924
   140007a26:	mov    rsi,QWORD PTR [rsp+0x38]
   140007a2b:	mov    rcx,rsi
   140007a2e:	call   0x1400137cc
   140007a33:	nop
   140007a34:	mov    rax,r14
   140007a37:	lea    r11,[rsp+0x60]
   140007a3c:	mov    rbx,QWORD PTR [r11+0x18]
   140007a40:	mov    rsi,QWORD PTR [r11+0x20]
   140007a44:	mov    rdi,QWORD PTR [r11+0x28]
   140007a48:	mov    rsp,r11
   140007a4b:	pop    r14
   140007a4d:	ret    
   140007a4e:	int3   
   140007a4f:	int3   
   140007a50:	rex push rbp
   140007a52:	push   rsi
   140007a53:	push   rdi
   140007a54:	push   r14
   140007a56:	push   r15
   140007a58:	lea    rbp,[rsp-0x50]
   140007a5d:	sub    rsp,0x150
   140007a64:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140007a6c:	mov    QWORD PTR [rsp+0x188],rbx
   140007a74:	mov    esi,r8d
   140007a77:	mov    r14,rdx
   140007a7a:	mov    rdi,rcx
   140007a7d:	xor    r15d,r15d
   140007a80:	mov    DWORD PTR [rbp+0x80],r15d
   140007a87:	xor    eax,eax
   140007a89:	mov    QWORD PTR [rbp-0x80],rax
   140007a8d:	mov    QWORD PTR [rbp-0x78],rax
   140007a91:	mov    QWORD PTR [rbp-0x70],rax
   140007a95:	mov    QWORD PTR [rbp-0x68],rax
   140007a99:	xor    r9d,r9d
   140007a9c:	xor    r8d,r8d
   140007a9f:	lea    edx,[rax+0x1]
   140007aa2:	xor    ecx,ecx
   140007aa4:	call   QWORD PTR [rip+0x1f586]        # 0x140027030
   140007aaa:	mov    rbx,rax
   140007aad:	mov    QWORD PTR [rbp+0x98],rax
   140007ab4:	mov    QWORD PTR [rbp-0x68],rax
   140007ab8:	mov    QWORD PTR [rsp+0x70],rax
   140007abd:	mov    rax,QWORD PTR [rdi+0x10]
   140007ac1:	mov    rcx,QWORD PTR [rax+0x28]
   140007ac5:	mov    QWORD PTR [rsp+0x78],rcx
   140007aca:	cmp    rbx,0xffffffffffffffff
   140007ace:	jne    0x140007b50
   140007ad4:	xor    r9d,r9d
   140007ad7:	or     r8,rbx
   140007ada:	lea    rdx,[rip+0x273c7]        # 0x14002eea8
   140007ae1:	lea    rcx,[rbp-0x60]
   140007ae5:	call   0x14000fb80
   140007aea:	nop
   140007aeb:	lea    rax,[rip+0x1fa9e]        # 0x140027590
   140007af2:	mov    QWORD PTR [rsp+0x30],rax
   140007af7:	lea    rax,[rsp+0x38]
   140007afc:	mov    QWORD PTR [rsp+0x68],rax
   140007b01:	mov    DWORD PTR [rsp+0x38],r15d
   140007b06:	mov    QWORD PTR [rsp+0x40],r15
   140007b0b:	mov    QWORD PTR [rsp+0x48],r15
   140007b10:	mov    QWORD PTR [rsp+0x50],r15
   140007b15:	mov    QWORD PTR [rsp+0x58],r15
   140007b1a:	mov    QWORD PTR [rsp+0x60],r15
   140007b1f:	or     r8,rbx
   140007b22:	lea    rdx,[rbp-0x60]
   140007b26:	lea    rcx,[rsp+0x38]
   140007b2b:	call   0x140010560
   140007b30:	nop
   140007b31:	lea    rax,[rip+0x27450]        # 0x14002ef88
   140007b38:	mov    QWORD PTR [rsp+0x30],rax
   140007b3d:	lea    rdx,[rip+0x2daa4]        # 0x1400355e8
   140007b44:	lea    rcx,[rsp+0x30]
   140007b49:	call   0x14001436c
   140007b4e:	nop
   140007b4f:	nop
   140007b50:	lea    rax,[rbp-0x80]
   140007b54:	mov    QWORD PTR [rsp+0x20],rax
   140007b59:	lea    r9,[rbp+0x80]
   140007b60:	mov    r8d,esi
   140007b63:	mov    rdx,r14
   140007b66:	mov    rcx,QWORD PTR [rdi+0x8]
   140007b6a:	call   QWORD PTR [rip+0x1f4d8]        # 0x140027048
   140007b70:	test   eax,eax
   140007b72:	jne    0x140007db3
   140007b78:	call   QWORD PTR [rip+0x1f4e2]        # 0x140027060
   140007b7e:	cmp    eax,0x3e5
   140007b83:	jne    0x140007d17
   140007b89:	xor    r9d,r9d
   140007b8c:	xor    r8d,r8d
   140007b8f:	lea    rdx,[rsp+0x70]
   140007b94:	lea    ecx,[r9+0x2]
   140007b98:	call   QWORD PTR [rip+0x1f582]        # 0x140027120
   140007b9e:	test   eax,eax
   140007ba0:	je     0x140007c16
   140007ba2:	nop    DWORD PTR [rax+0x0]
   140007ba6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007bb0:	xor    r9d,r9d
   140007bb3:	xor    r8d,r8d
   140007bb6:	lea    rdx,[rsp+0x70]
   140007bbb:	lea    ecx,[r9+0x2]
   140007bbf:	call   QWORD PTR [rip+0x1f55b]        # 0x140027120
   140007bc5:	cmp    eax,0x1
   140007bc8:	je     0x140007c16
   140007bca:	xor    r9d,r9d
   140007bcd:	xor    r8d,r8d
   140007bd0:	xor    edx,edx
   140007bd2:	lea    rcx,[rbp-0x60]
   140007bd6:	call   QWORD PTR [rip+0x1f78c]        # 0x140027368
   140007bdc:	test   eax,eax
   140007bde:	je     0x140007bfd
   140007be0:	cmp    eax,0xffffffff
   140007be3:	je     0x140007db3
   140007be9:	lea    rcx,[rbp-0x60]
   140007bed:	call   QWORD PTR [rip+0x1f765]        # 0x140027358
   140007bf3:	lea    rcx,[rbp-0x60]
   140007bf7:	call   QWORD PTR [rip+0x1f763]        # 0x140027360
   140007bfd:	xor    r9d,r9d
   140007c00:	xor    r8d,r8d
   140007c03:	lea    rdx,[rsp+0x70]
   140007c08:	lea    ecx,[r9+0x2]
   140007c0c:	call   QWORD PTR [rip+0x1f50e]        # 0x140027120
   140007c12:	test   eax,eax
   140007c14:	jne    0x140007bb0
   140007c16:	or     r9d,0xffffffff
   140007c1a:	xor    r8d,r8d
   140007c1d:	lea    rdx,[rsp+0x70]
   140007c22:	lea    ecx,[r8+0x2]
   140007c26:	call   QWORD PTR [rip+0x1f4f4]        # 0x140027120
   140007c2c:	test   eax,eax
   140007c2e:	je     0x140007c52
   140007c30:	dec    eax
   140007c32:	jne    0x140007b50
   140007c38:	lea    rcx,[rbp+0x10]
   140007c3c:	call   0x140007770
   140007c41:	lea    rdx,[rip+0x2d9c0]        # 0x140035608
   140007c48:	lea    rcx,[rbp+0x10]
   140007c4c:	call   0x14001436c
   140007c51:	int3   
   140007c52:	mov    r9d,0x1
   140007c58:	lea    r8,[rbp+0x80]
   140007c5f:	lea    rdx,[rbp-0x80]
   140007c63:	mov    rcx,QWORD PTR [rdi+0x8]
   140007c67:	call   QWORD PTR [rip+0x1f49b]        # 0x140027108
   140007c6d:	test   eax,eax
   140007c6f:	jne    0x140007db3
   140007c75:	call   QWORD PTR [rip+0x1f3e5]        # 0x140027060
   140007c7b:	cmp    eax,0x6d
   140007c7e:	jne    0x140007c9a
   140007c80:	lea    rcx,[rbp-0x28]
   140007c84:	call   0x140007770
   140007c89:	lea    rdx,[rip+0x2d978]        # 0x140035608
   140007c90:	lea    rcx,[rbp-0x28]
   140007c94:	call   0x14001436c
   140007c99:	int3   
   140007c9a:	xor    r9d,r9d
   140007c9d:	or     r8,0xffffffffffffffff
   140007ca1:	lea    rdx,[rip+0x27220]        # 0x14002eec8
   140007ca8:	lea    rcx,[rbp-0x60]
   140007cac:	call   0x14000fb80
   140007cb1:	nop
   140007cb2:	lea    rax,[rip+0x1f8d7]        # 0x140027590
   140007cb9:	mov    QWORD PTR [rsp+0x30],rax
   140007cbe:	lea    rax,[rsp+0x38]
   140007cc3:	mov    QWORD PTR [rsp+0x68],rax
   140007cc8:	mov    DWORD PTR [rsp+0x38],r15d
   140007ccd:	mov    QWORD PTR [rsp+0x40],r15
   140007cd2:	mov    QWORD PTR [rsp+0x48],r15
   140007cd7:	mov    QWORD PTR [rsp+0x50],r15
   140007cdc:	mov    QWORD PTR [rsp+0x58],r15
   140007ce1:	mov    QWORD PTR [rsp+0x60],r15
   140007ce6:	or     r8,0xffffffffffffffff
   140007cea:	lea    rdx,[rbp-0x60]
   140007cee:	lea    rcx,[rsp+0x38]
   140007cf3:	call   0x140010560
   140007cf8:	nop
   140007cf9:	lea    rax,[rip+0x27288]        # 0x14002ef88
   140007d00:	mov    QWORD PTR [rsp+0x30],rax
   140007d05:	lea    rdx,[rip+0x2d8dc]        # 0x1400355e8
   140007d0c:	lea    rcx,[rsp+0x30]
   140007d11:	call   0x14001436c
   140007d16:	nop
   140007d17:	cmp    eax,0x6d
   140007d1a:	jne    0x140007d36
   140007d1c:	lea    rcx,[rbp-0x28]
   140007d20:	call   0x140007770
   140007d25:	lea    rdx,[rip+0x2d8dc]        # 0x140035608
   140007d2c:	lea    rcx,[rbp-0x28]
   140007d30:	call   0x14001436c
   140007d35:	int3   
   140007d36:	xor    r9d,r9d
   140007d39:	or     r8,0xffffffffffffffff
   140007d3d:	lea    rdx,[rip+0x2719c]        # 0x14002eee0
   140007d44:	lea    rcx,[rbp-0x60]
   140007d48:	call   0x14000fb80
   140007d4d:	nop
   140007d4e:	lea    rax,[rip+0x1f83b]        # 0x140027590
   140007d55:	mov    QWORD PTR [rsp+0x30],rax
   140007d5a:	lea    rax,[rsp+0x38]
   140007d5f:	mov    QWORD PTR [rsp+0x68],rax
   140007d64:	mov    DWORD PTR [rsp+0x38],r15d
   140007d69:	mov    QWORD PTR [rsp+0x40],r15
   140007d6e:	mov    QWORD PTR [rsp+0x48],r15
   140007d73:	mov    QWORD PTR [rsp+0x50],r15
   140007d78:	mov    QWORD PTR [rsp+0x58],r15
   140007d7d:	mov    QWORD PTR [rsp+0x60],r15
   140007d82:	or     r8,0xffffffffffffffff
   140007d86:	lea    rdx,[rbp-0x60]
   140007d8a:	lea    rcx,[rsp+0x38]
   140007d8f:	call   0x140010560
   140007d94:	nop
   140007d95:	lea    rax,[rip+0x271ec]        # 0x14002ef88
   140007d9c:	mov    QWORD PTR [rsp+0x30],rax
   140007da1:	lea    rdx,[rip+0x2d840]        # 0x1400355e8
   140007da8:	lea    rcx,[rsp+0x30]
   140007dad:	call   0x14001436c
   140007db2:	nop
   140007db3:	mov    rcx,rbx
   140007db6:	call   QWORD PTR [rip+0x1f2e4]        # 0x1400270a0
   140007dbc:	mov    rbx,QWORD PTR [rsp+0x188]
   140007dc4:	add    rsp,0x150
   140007dcb:	pop    r15
   140007dcd:	pop    r14
   140007dcf:	pop    rdi
   140007dd0:	pop    rsi
   140007dd1:	pop    rbp
   140007dd2:	ret    
   140007dd3:	int3   
   140007dd4:	int3   
   140007dd5:	int3   
   140007dd6:	int3   
   140007dd7:	int3   
   140007dd8:	int3   
   140007dd9:	int3   
   140007dda:	int3   
   140007ddb:	int3   
   140007ddc:	int3   
   140007ddd:	int3   
   140007dde:	int3   
   140007ddf:	int3   
   140007de0:	rex push rbx
   140007de2:	sub    rsp,0x30
   140007de6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007def:	mov    rbx,rcx
   140007df2:	lea    rax,[rip+0x1f797]        # 0x140027590
   140007df9:	mov    QWORD PTR [rcx],rax
   140007dfc:	add    rcx,0x8
   140007e00:	mov    QWORD PTR [rsp+0x40],rcx
   140007e05:	xor    eax,eax
   140007e07:	mov    DWORD PTR [rcx],eax
   140007e09:	mov    QWORD PTR [rcx+0x8],rax
   140007e0d:	mov    QWORD PTR [rcx+0x10],rax
   140007e11:	mov    QWORD PTR [rcx+0x18],rax
   140007e15:	mov    QWORD PTR [rcx+0x20],rax
   140007e19:	mov    QWORD PTR [rcx+0x28],rax
   140007e1d:	add    rdx,0x8
   140007e21:	or     r8,0xffffffffffffffff
   140007e25:	call   0x140010560
   140007e2a:	nop
   140007e2b:	lea    rax,[rip+0x2716e]        # 0x14002efa0
   140007e32:	mov    QWORD PTR [rbx],rax
   140007e35:	mov    rax,rbx
   140007e38:	add    rsp,0x30
   140007e3c:	pop    rbx
   140007e3d:	ret    
   140007e3e:	int3   
   140007e3f:	int3   
   140007e40:	rex push rbp
   140007e42:	push   rsi
   140007e43:	push   rdi
   140007e44:	push   r14
   140007e46:	push   r15
   140007e48:	lea    rbp,[rsp-0x50]
   140007e4d:	sub    rsp,0x150
   140007e54:	mov    QWORD PTR [rbp-0x60],0xfffffffffffffffe
   140007e5c:	mov    QWORD PTR [rsp+0x188],rbx
   140007e64:	mov    esi,r8d
   140007e67:	mov    r14,rdx
   140007e6a:	mov    rdi,rcx
   140007e6d:	xor    r15d,r15d
   140007e70:	mov    DWORD PTR [rbp+0x80],r15d
   140007e77:	xor    eax,eax
   140007e79:	mov    QWORD PTR [rsp+0x70],rax
   140007e7e:	mov    QWORD PTR [rsp+0x78],rax
   140007e83:	mov    QWORD PTR [rbp-0x80],rax
   140007e87:	mov    QWORD PTR [rbp-0x78],rax
   140007e8b:	xor    r9d,r9d
   140007e8e:	xor    r8d,r8d
   140007e91:	lea    edx,[rax+0x1]
   140007e94:	xor    ecx,ecx
   140007e96:	call   QWORD PTR [rip+0x1f194]        # 0x140027030
   140007e9c:	mov    rbx,rax
   140007e9f:	mov    QWORD PTR [rbp+0x98],rax
   140007ea6:	mov    QWORD PTR [rbp-0x78],rax
   140007eaa:	mov    QWORD PTR [rbp-0x70],rax
   140007eae:	mov    rax,QWORD PTR [rdi+0x10]
   140007eb2:	mov    rcx,QWORD PTR [rax+0x28]
   140007eb6:	mov    QWORD PTR [rbp-0x68],rcx
   140007eba:	cmp    rbx,0xffffffffffffffff
   140007ebe:	jne    0x140007f40
   140007ec4:	xor    r9d,r9d
   140007ec7:	or     r8,rbx
   140007eca:	lea    rdx,[rip+0x26fd7]        # 0x14002eea8
   140007ed1:	lea    rcx,[rbp-0x58]
   140007ed5:	call   0x14000fb80
   140007eda:	nop
   140007edb:	lea    rax,[rip+0x1f6ae]        # 0x140027590
   140007ee2:	mov    QWORD PTR [rsp+0x30],rax
   140007ee7:	lea    rax,[rsp+0x38]
   140007eec:	mov    QWORD PTR [rsp+0x68],rax
   140007ef1:	mov    DWORD PTR [rsp+0x38],r15d
   140007ef6:	mov    QWORD PTR [rsp+0x40],r15
   140007efb:	mov    QWORD PTR [rsp+0x48],r15
   140007f00:	mov    QWORD PTR [rsp+0x50],r15
   140007f05:	mov    QWORD PTR [rsp+0x58],r15
   140007f0a:	mov    QWORD PTR [rsp+0x60],r15
   140007f0f:	or     r8,rbx
   140007f12:	lea    rdx,[rbp-0x58]
   140007f16:	lea    rcx,[rsp+0x38]
   140007f1b:	call   0x140010560
   140007f20:	nop
   140007f21:	lea    rax,[rip+0x27060]        # 0x14002ef88
   140007f28:	mov    QWORD PTR [rsp+0x30],rax
   140007f2d:	lea    rdx,[rip+0x2d6b4]        # 0x1400355e8
   140007f34:	lea    rcx,[rsp+0x30]
   140007f39:	call   0x14001436c
   140007f3e:	nop
   140007f3f:	nop
   140007f40:	lea    rax,[rsp+0x70]
   140007f45:	mov    QWORD PTR [rsp+0x20],rax
   140007f4a:	lea    r9,[rbp+0x80]
   140007f51:	mov    r8d,esi
   140007f54:	mov    rdx,r14
   140007f57:	mov    rcx,QWORD PTR [rdi+0x8]
   140007f5b:	call   QWORD PTR [rip+0x1f0e7]        # 0x140027048
   140007f61:	test   eax,eax
   140007f63:	jne    0x140008113
   140007f69:	call   QWORD PTR [rip+0x1f0f1]        # 0x140027060
   140007f6f:	cmp    eax,0x3e5
   140007f74:	jne    0x140008077
   140007f7a:	or     r9d,0xffffffff
   140007f7e:	xor    r8d,r8d
   140007f81:	lea    rdx,[rbp-0x70]
   140007f85:	lea    ecx,[r8+0x2]
   140007f89:	call   QWORD PTR [rip+0x1f191]        # 0x140027120
   140007f8f:	test   eax,eax
   140007f91:	je     0x140007fb1
   140007f93:	dec    eax
   140007f95:	jne    0x140007f40
   140007f97:	lea    rcx,[rbp+0x10]
   140007f9b:	call   0x140007770
   140007fa0:	lea    rdx,[rip+0x2d661]        # 0x140035608
   140007fa7:	lea    rcx,[rbp+0x10]
   140007fab:	call   0x14001436c
   140007fb0:	int3   
   140007fb1:	mov    r9d,0x1
   140007fb7:	lea    r8,[rbp+0x80]
   140007fbe:	lea    rdx,[rsp+0x70]
   140007fc3:	mov    rcx,QWORD PTR [rdi+0x8]
   140007fc7:	call   QWORD PTR [rip+0x1f13b]        # 0x140027108
   140007fcd:	test   eax,eax
   140007fcf:	jne    0x140008113
   140007fd5:	call   QWORD PTR [rip+0x1f085]        # 0x140027060
   140007fdb:	cmp    eax,0x6d
   140007fde:	jne    0x140007ffa
   140007fe0:	lea    rcx,[rbp-0x28]
   140007fe4:	call   0x140007770
   140007fe9:	lea    rdx,[rip+0x2d618]        # 0x140035608
   140007ff0:	lea    rcx,[rbp-0x28]
   140007ff4:	call   0x14001436c
   140007ff9:	int3   
   140007ffa:	xor    r9d,r9d
   140007ffd:	or     r8,0xffffffffffffffff
   140008001:	lea    rdx,[rip+0x26ec0]        # 0x14002eec8
   140008008:	lea    rcx,[rbp-0x58]
   14000800c:	call   0x14000fb80
   140008011:	nop
   140008012:	lea    rax,[rip+0x1f577]        # 0x140027590
   140008019:	mov    QWORD PTR [rsp+0x30],rax
   14000801e:	lea    rax,[rsp+0x38]
   140008023:	mov    QWORD PTR [rsp+0x68],rax
   140008028:	mov    DWORD PTR [rsp+0x38],r15d
   14000802d:	mov    QWORD PTR [rsp+0x40],r15
   140008032:	mov    QWORD PTR [rsp+0x48],r15
   140008037:	mov    QWORD PTR [rsp+0x50],r15
   14000803c:	mov    QWORD PTR [rsp+0x58],r15
   140008041:	mov    QWORD PTR [rsp+0x60],r15
   140008046:	or     r8,0xffffffffffffffff
   14000804a:	lea    rdx,[rbp-0x58]
   14000804e:	lea    rcx,[rsp+0x38]
   140008053:	call   0x140010560
   140008058:	nop
   140008059:	lea    rax,[rip+0x26f28]        # 0x14002ef88
   140008060:	mov    QWORD PTR [rsp+0x30],rax
   140008065:	lea    rdx,[rip+0x2d57c]        # 0x1400355e8
   14000806c:	lea    rcx,[rsp+0x30]
   140008071:	call   0x14001436c
   140008076:	nop
   140008077:	cmp    eax,0x6d
   14000807a:	jne    0x140008096
   14000807c:	lea    rcx,[rbp-0x28]
   140008080:	call   0x140007770
   140008085:	lea    rdx,[rip+0x2d57c]        # 0x140035608
   14000808c:	lea    rcx,[rbp-0x28]
   140008090:	call   0x14001436c
   140008095:	int3   
   140008096:	xor    r9d,r9d
   140008099:	or     r8,0xffffffffffffffff
   14000809d:	lea    rdx,[rip+0x26e3c]        # 0x14002eee0
   1400080a4:	lea    rcx,[rbp-0x58]
   1400080a8:	call   0x14000fb80
   1400080ad:	nop
   1400080ae:	lea    rax,[rip+0x1f4db]        # 0x140027590
   1400080b5:	mov    QWORD PTR [rsp+0x30],rax
   1400080ba:	lea    rax,[rsp+0x38]
   1400080bf:	mov    QWORD PTR [rsp+0x68],rax
   1400080c4:	mov    DWORD PTR [rsp+0x38],r15d
   1400080c9:	mov    QWORD PTR [rsp+0x40],r15
   1400080ce:	mov    QWORD PTR [rsp+0x48],r15
   1400080d3:	mov    QWORD PTR [rsp+0x50],r15
   1400080d8:	mov    QWORD PTR [rsp+0x58],r15
   1400080dd:	mov    QWORD PTR [rsp+0x60],r15
   1400080e2:	or     r8,0xffffffffffffffff
   1400080e6:	lea    rdx,[rbp-0x58]
   1400080ea:	lea    rcx,[rsp+0x38]
   1400080ef:	call   0x140010560
   1400080f4:	nop
   1400080f5:	lea    rax,[rip+0x26e8c]        # 0x14002ef88
   1400080fc:	mov    QWORD PTR [rsp+0x30],rax
   140008101:	lea    rdx,[rip+0x2d4e0]        # 0x1400355e8
   140008108:	lea    rcx,[rsp+0x30]
   14000810d:	call   0x14001436c
   140008112:	nop
   140008113:	mov    rcx,rbx
   140008116:	call   QWORD PTR [rip+0x1ef84]        # 0x1400270a0
   14000811c:	mov    rbx,QWORD PTR [rsp+0x188]
   140008124:	add    rsp,0x150
   14000812b:	pop    r15
   14000812d:	pop    r14
   14000812f:	pop    rdi
   140008130:	pop    rsi
   140008131:	pop    rbp
   140008132:	ret    
   140008133:	int3   
   140008134:	int3   
   140008135:	int3   
   140008136:	int3   
   140008137:	int3   
   140008138:	int3   
   140008139:	int3   
   14000813a:	int3   
   14000813b:	int3   
   14000813c:	int3   
   14000813d:	int3   
   14000813e:	int3   
   14000813f:	int3   
   140008140:	rex push rbx
   140008142:	sub    rsp,0x20
   140008146:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   14000814b:	mov    rbx,rcx
   14000814e:	je     0x140008198
   140008150:	add    rcx,0x48
   140008154:	mov    QWORD PTR [rsp+0x30],rdi
   140008159:	call   0x1400126b0
   14000815e:	mov    rcx,QWORD PTR [rbx+0x8]
   140008162:	cmp    rcx,0xffffffffffffffff
   140008166:	je     0x14000818a
   140008168:	call   QWORD PTR [rip+0x1efa2]        # 0x140027110
   14000816e:	mov    rcx,QWORD PTR [rbx+0x8]
   140008172:	call   QWORD PTR [rip+0x1eee0]        # 0x140027058
   140008178:	mov    rcx,QWORD PTR [rbx+0x8]
   14000817c:	call   QWORD PTR [rip+0x1ef1e]        # 0x1400270a0
   140008182:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
   14000818a:	lea    rcx,[rbx+0x48]
   14000818e:	call   0x1400126f0
   140008193:	mov    rdi,QWORD PTR [rsp+0x30]
   140008198:	add    rsp,0x20
   14000819c:	pop    rbx
   14000819d:	ret    
   14000819e:	int3   
   14000819f:	int3   
   1400081a0:	rex push rbp
   1400081a2:	push   rsi
   1400081a3:	push   rdi
   1400081a4:	push   r14
   1400081a6:	push   r15
   1400081a8:	lea    rbp,[rsp-0x37]
   1400081ad:	sub    rsp,0xe0
   1400081b4:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   1400081bc:	mov    QWORD PTR [rsp+0x118],rbx
   1400081c4:	mov    esi,r8d
   1400081c7:	mov    r14,rdx
   1400081ca:	mov    rdi,rcx
   1400081cd:	cmp    QWORD PTR [rcx+0x8],0xffffffffffffffff
   1400081d2:	jne    0x1400081ee
   1400081d4:	lea    rcx,[rbp-0x79]
   1400081d8:	call   0x140007770
   1400081dd:	lea    rdx,[rip+0x2d424]        # 0x140035608
   1400081e4:	lea    rcx,[rbp-0x79]
   1400081e8:	call   0x14001436c
   1400081ed:	int3   
   1400081ee:	xor    r15d,r15d
   1400081f1:	mov    DWORD PTR [rbp+0x67],r15d
   1400081f5:	xor    eax,eax
   1400081f7:	mov    QWORD PTR [rbp-0x39],rax
   1400081fb:	mov    QWORD PTR [rbp-0x31],rax
   1400081ff:	mov    QWORD PTR [rbp-0x29],rax
   140008203:	mov    QWORD PTR [rbp-0x21],rax
   140008207:	xor    r9d,r9d
   14000820a:	xor    r8d,r8d
   14000820d:	lea    edx,[rax+0x1]
   140008210:	xor    ecx,ecx
   140008212:	call   QWORD PTR [rip+0x1ee18]        # 0x140027030
   140008218:	mov    rbx,rax
   14000821b:	mov    QWORD PTR [rbp+0x7f],rax
   14000821f:	mov    QWORD PTR [rbp-0x21],rax
   140008223:	mov    QWORD PTR [rbp-0x19],rax
   140008227:	mov    rax,QWORD PTR [rdi+0x10]
   14000822b:	mov    rcx,QWORD PTR [rax+0x28]
   14000822f:	mov    QWORD PTR [rbp-0x11],rcx
   140008233:	cmp    rbx,0xffffffffffffffff
   140008237:	jne    0x1400082b0
   140008239:	xor    r9d,r9d
   14000823c:	or     r8,rbx
   14000823f:	lea    rdx,[rip+0x26c62]        # 0x14002eea8
   140008246:	lea    rcx,[rbp-0x1]
   14000824a:	call   0x14000fb80
   14000824f:	nop
   140008250:	lea    rax,[rip+0x1f339]        # 0x140027590
   140008257:	mov    QWORD PTR [rbp-0x79],rax
   14000825b:	lea    rax,[rbp-0x71]
   14000825f:	mov    QWORD PTR [rbp-0x41],rax
   140008263:	mov    DWORD PTR [rbp-0x71],r15d
   140008267:	mov    QWORD PTR [rbp-0x69],r15
   14000826b:	mov    QWORD PTR [rbp-0x61],r15
   14000826f:	mov    QWORD PTR [rbp-0x59],r15
   140008273:	mov    QWORD PTR [rbp-0x51],r15
   140008277:	mov    QWORD PTR [rbp-0x49],r15
   14000827b:	or     r8,rbx
   14000827e:	lea    rdx,[rbp-0x1]
   140008282:	lea    rcx,[rbp-0x71]
   140008286:	call   0x140010560
   14000828b:	nop
   14000828c:	lea    rax,[rip+0x26cf5]        # 0x14002ef88
   140008293:	mov    QWORD PTR [rbp-0x79],rax
   140008297:	lea    rdx,[rip+0x2d34a]        # 0x1400355e8
   14000829e:	lea    rcx,[rbp-0x79]
   1400082a2:	call   0x14001436c
   1400082a7:	nop
   1400082a8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400082b0:	lea    rax,[rbp-0x39]
   1400082b4:	mov    QWORD PTR [rsp+0x20],rax
   1400082b9:	lea    r9,[rbp+0x67]
   1400082bd:	mov    r8d,esi
   1400082c0:	mov    rdx,r14
   1400082c3:	mov    rcx,QWORD PTR [rdi+0x8]
   1400082c7:	call   QWORD PTR [rip+0x1ee9b]        # 0x140027168
   1400082cd:	test   eax,eax
   1400082cf:	jne    0x1400083db
   1400082d5:	call   QWORD PTR [rip+0x1ed85]        # 0x140027060
   1400082db:	cmp    eax,0x3e5
   1400082e0:	jne    0x140008336
   1400082e2:	or     r9d,0xffffffff
   1400082e6:	xor    r8d,r8d
   1400082e9:	lea    rdx,[rbp-0x19]
   1400082ed:	lea    ecx,[r8+0x2]
   1400082f1:	call   QWORD PTR [rip+0x1ee29]        # 0x140027120
   1400082f7:	test   eax,eax
   1400082f9:	je     0x140008319
   1400082fb:	dec    eax
   1400082fd:	jne    0x1400082b0
   1400082ff:	lea    rcx,[rbp-0x79]
   140008303:	call   0x140007770
   140008308:	lea    rdx,[rip+0x2d2f9]        # 0x140035608
   14000830f:	lea    rcx,[rbp-0x79]
   140008313:	call   0x14001436c
   140008318:	int3   
   140008319:	mov    r9d,0x1
   14000831f:	lea    r8,[rbp+0x67]
   140008323:	lea    rdx,[rbp-0x39]
   140008327:	mov    rcx,QWORD PTR [rdi+0x8]
   14000832b:	call   QWORD PTR [rip+0x1edd7]        # 0x140027108
   140008331:	jmp    0x1400083db
   140008336:	call   QWORD PTR [rip+0x1ed24]        # 0x140027060
   14000833c:	cmp    eax,0xe8
   140008341:	je     0x1400083c1
   140008343:	call   QWORD PTR [rip+0x1ed17]        # 0x140027060
   140008349:	cmp    eax,0xe9
   14000834e:	je     0x1400083c1
   140008350:	xor    r9d,r9d
   140008353:	or     r8,0xffffffffffffffff
   140008357:	lea    rdx,[rip+0x26b92]        # 0x14002eef0
   14000835e:	lea    rcx,[rbp-0x1]
   140008362:	call   0x14000fb80
   140008367:	nop
   140008368:	lea    rax,[rip+0x1f221]        # 0x140027590
   14000836f:	mov    QWORD PTR [rbp-0x79],rax
   140008373:	lea    rax,[rbp-0x71]
   140008377:	mov    QWORD PTR [rbp-0x41],rax
   14000837b:	mov    DWORD PTR [rbp-0x71],r15d
   14000837f:	mov    QWORD PTR [rbp-0x69],r15
   140008383:	mov    QWORD PTR [rbp-0x61],r15
   140008387:	mov    QWORD PTR [rbp-0x59],r15
   14000838b:	mov    QWORD PTR [rbp-0x51],r15
   14000838f:	mov    QWORD PTR [rbp-0x49],r15
   140008393:	or     r8,0xffffffffffffffff
   140008397:	lea    rdx,[rbp-0x1]
   14000839b:	lea    rcx,[rbp-0x71]
   14000839f:	call   0x140010560
   1400083a4:	nop
   1400083a5:	lea    rax,[rip+0x26bdc]        # 0x14002ef88
   1400083ac:	mov    QWORD PTR [rbp-0x79],rax
   1400083b0:	lea    rdx,[rip+0x2d231]        # 0x1400355e8
   1400083b7:	lea    rcx,[rbp-0x79]
   1400083bb:	call   0x14001436c
   1400083c0:	nop
   1400083c1:	lea    rcx,[rbp-0x79]
   1400083c5:	call   0x140007770
   1400083ca:	lea    rdx,[rip+0x2d237]        # 0x140035608
   1400083d1:	lea    rcx,[rbp-0x79]
   1400083d5:	call   0x14001436c
   1400083da:	nop
   1400083db:	mov    rcx,rbx
   1400083de:	call   QWORD PTR [rip+0x1ecbc]        # 0x1400270a0
   1400083e4:	mov    rbx,QWORD PTR [rsp+0x118]
   1400083ec:	add    rsp,0xe0
   1400083f3:	pop    r15
   1400083f5:	pop    r14
   1400083f7:	pop    rdi
   1400083f8:	pop    rsi
   1400083f9:	pop    rbp
   1400083fa:	ret    
   1400083fb:	int3   
   1400083fc:	int3   
   1400083fd:	int3   
   1400083fe:	int3   
   1400083ff:	int3   
   140008400:	mov    QWORD PTR [rsp+0x8],rbx
   140008405:	push   rdi
   140008406:	sub    rsp,0x20
   14000840a:	mov    rbx,rdx
   14000840d:	lea    rdx,[rsp+0x38]
   140008412:	mov    r8d,0x4
   140008418:	mov    rdi,rcx
   14000841b:	mov    DWORD PTR [rsp+0x38],0xfffe00ff
   140008423:	call   0x1400081a0
   140008428:	lea    rdx,[rsp+0x38]
   14000842d:	mov    r8d,0x4
   140008433:	mov    rcx,rdi
   140008436:	mov    DWORD PTR [rsp+0x38],0x10000
   14000843e:	call   0x1400081a0
   140008443:	mov    eax,DWORD PTR [rbx+0xc]
   140008446:	lea    rdx,[rsp+0x38]
   14000844b:	mov    r8d,0x4
   140008451:	mov    rcx,rdi
   140008454:	mov    DWORD PTR [rsp+0x38],eax
   140008458:	call   0x1400081a0
   14000845d:	mov    eax,DWORD PTR [rbx+0x8]
   140008460:	lea    rdx,[rsp+0x38]
   140008465:	mov    r8d,0x4
   14000846b:	mov    rcx,rdi
   14000846e:	mov    DWORD PTR [rsp+0x38],eax
   140008472:	call   0x1400081a0
   140008477:	mov    eax,DWORD PTR [rbx+0x10]
   14000847a:	lea    rdx,[rsp+0x38]
   14000847f:	mov    r8d,0x4
   140008485:	mov    rcx,rdi
   140008488:	mov    DWORD PTR [rsp+0x38],eax
   14000848c:	call   0x1400081a0
   140008491:	mov    r8d,DWORD PTR [rbx+0x10]
   140008495:	mov    rdx,QWORD PTR [rbx+0x18]
   140008499:	mov    rcx,rdi
   14000849c:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084a1:	add    rsp,0x20
   1400084a5:	pop    rdi
   1400084a6:	jmp    0x1400081a0
   1400084ab:	int3   
   1400084ac:	int3   
   1400084ad:	int3   
   1400084ae:	int3   
   1400084af:	int3   
   1400084b0:	rex push rbp
   1400084b2:	push   rsi
   1400084b3:	push   rdi
   1400084b4:	push   r14
   1400084b6:	push   r15
   1400084b8:	lea    rbp,[rsp-0x37]
   1400084bd:	sub    rsp,0xb0
   1400084c4:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   1400084cc:	mov    QWORD PTR [rsp+0xe0],rbx
   1400084d4:	mov    r15,rdx
   1400084d7:	mov    r14,rcx
   1400084da:	xor    ebx,ebx
   1400084dc:	mov    DWORD PTR [rbp+0x77],ebx
   1400084df:	lea    r8d,[rbx+0x4]
   1400084e3:	lea    rdx,[rbp+0x77]
   1400084e7:	call   0x140007a50
   1400084ec:	mov    DWORD PTR [rbp+0x7f],ebx
   1400084ef:	lea    r8d,[rbx+0x4]
   1400084f3:	lea    rdx,[rbp+0x7f]
   1400084f7:	mov    rcx,r14
   1400084fa:	call   0x140007a50
   1400084ff:	mov    DWORD PTR [rbp-0x41],ebx
   140008502:	lea    r8d,[rbx+0x4]
   140008506:	lea    rdx,[rbp-0x41]
   14000850a:	mov    rcx,r14
   14000850d:	call   0x140007a50
   140008512:	mov    DWORD PTR [rbp-0x49],ebx
   140008515:	lea    r8d,[rbx+0x4]
   140008519:	lea    rdx,[rbp-0x49]
   14000851d:	mov    rcx,r14
   140008520:	call   0x140007a50
   140008525:	mov    DWORD PTR [rbp-0x45],ebx
   140008528:	lea    r8d,[rbx+0x4]
   14000852c:	lea    rdx,[rbp-0x45]
   140008530:	mov    rcx,r14
   140008533:	call   0x140007a50
   140008538:	cmp    DWORD PTR [rbp+0x77],0xfffe00ff
   14000853f:	je     0x1400085b1
   140008541:	xor    r9d,r9d
   140008544:	or     r8,0xffffffffffffffff
   140008548:	lea    rdx,[rip+0x269b9]        # 0x14002ef08
   14000854f:	lea    rcx,[rbp+0x7]
   140008553:	call   0x14000fb80
   140008558:	nop
   140008559:	lea    rax,[rip+0x1f030]        # 0x140027590
   140008560:	mov    QWORD PTR [rbp-0x39],rax
   140008564:	lea    rax,[rbp-0x31]
   140008568:	mov    QWORD PTR [rbp+0x77],rax
   14000856c:	mov    DWORD PTR [rbp-0x31],ebx
   14000856f:	mov    QWORD PTR [rbp-0x29],rbx
   140008573:	mov    QWORD PTR [rbp-0x21],rbx
   140008577:	mov    QWORD PTR [rbp-0x19],rbx
   14000857b:	mov    QWORD PTR [rbp-0x11],rbx
   14000857f:	mov    QWORD PTR [rbp-0x9],rbx
   140008583:	or     r8,0xffffffffffffffff
   140008587:	lea    rdx,[rbp+0x7]
   14000858b:	lea    rcx,[rbp-0x31]
   14000858f:	call   0x140010560
   140008594:	nop
   140008595:	lea    rax,[rip+0x269ec]        # 0x14002ef88
   14000859c:	mov    QWORD PTR [rbp-0x39],rax
   1400085a0:	lea    rdx,[rip+0x2d041]        # 0x1400355e8
   1400085a7:	lea    rcx,[rbp-0x39]
   1400085ab:	call   0x14001436c
   1400085b0:	nop
   1400085b1:	cmp    DWORD PTR [rbp+0x7f],0x10000
   1400085b8:	je     0x14000862a
   1400085ba:	xor    r9d,r9d
   1400085bd:	or     r8,0xffffffffffffffff
   1400085c1:	lea    rdx,[rip+0x26958]        # 0x14002ef20
   1400085c8:	lea    rcx,[rbp+0x7]
   1400085cc:	call   0x14000fb80
   1400085d1:	nop
   1400085d2:	lea    rax,[rip+0x1efb7]        # 0x140027590
   1400085d9:	mov    QWORD PTR [rbp-0x39],rax
   1400085dd:	lea    rax,[rbp-0x31]
   1400085e1:	mov    QWORD PTR [rbp+0x77],rax
   1400085e5:	mov    DWORD PTR [rbp-0x31],ebx
   1400085e8:	mov    QWORD PTR [rbp-0x29],rbx
   1400085ec:	mov    QWORD PTR [rbp-0x21],rbx
   1400085f0:	mov    QWORD PTR [rbp-0x19],rbx
   1400085f4:	mov    QWORD PTR [rbp-0x11],rbx
   1400085f8:	mov    QWORD PTR [rbp-0x9],rbx
   1400085fc:	or     r8,0xffffffffffffffff
   140008600:	lea    rdx,[rbp+0x7]
   140008604:	lea    rcx,[rbp-0x31]
   140008608:	call   0x140010560
   14000860d:	nop
   14000860e:	lea    rax,[rip+0x26973]        # 0x14002ef88
   140008615:	mov    QWORD PTR [rbp-0x39],rax
   140008619:	lea    rdx,[rip+0x2cfc8]        # 0x1400355e8
   140008620:	lea    rcx,[rbp-0x39]
   140008624:	call   0x14001436c
   140008629:	nop
   14000862a:	mov    edi,DWORD PTR [rbp-0x45]
   14000862d:	lea    eax,[rdi-0x1]
   140008630:	cmp    eax,0x7ffffffd
   140008635:	ja     0x1400086be
   14000863b:	lea    esi,[rdi+0x1]
   14000863e:	mov    ecx,esi
   140008640:	call   0x14001307c
   140008645:	mov    rbx,rax
   140008648:	mov    QWORD PTR [rbp+0x77],rax
   14000864c:	test   esi,esi
   14000864e:	je     0x140008688
   140008650:	test   rax,rax
   140008653:	jne    0x140008688
   140008655:	lea    rax,[rip+0x1ef34]        # 0x140027590
   14000865c:	mov    QWORD PTR [rbp-0x39],rax
   140008660:	xor    r9d,r9d
   140008663:	or     r8,0xffffffffffffffff
   140008667:	lea    rdx,[rip+0x268ca]        # 0x14002ef38
   14000866e:	lea    rcx,[rbp-0x31]
   140008672:	call   0x14000fb80
   140008677:	lea    rdx,[rip+0x2ceea]        # 0x140035568
   14000867e:	lea    rcx,[rbp-0x39]
   140008682:	call   0x14001436c
   140008687:	nop
   140008688:	mov    r8d,edi
   14000868b:	mov    rdx,rax
   14000868e:	mov    rcx,r14
   140008691:	call   0x140007a50
   140008696:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000869a:	mov    DWORD PTR [rsp+0x20],esi
   14000869e:	mov    r9,rbx
   1400086a1:	mov    r8d,DWORD PTR [rbp-0x41]
   1400086a5:	mov    edx,DWORD PTR [rbp-0x49]
   1400086a8:	mov    rcx,r15
   1400086ab:	call   0x140007670
   1400086b0:	nop
   1400086b1:	test   rbx,rbx
   1400086b4:	je     0x1400086be
   1400086b6:	mov    rcx,rbx
   1400086b9:	call   0x140013924
   1400086be:	mov    rbx,QWORD PTR [rsp+0xe0]
   1400086c6:	add    rsp,0xb0
   1400086cd:	pop    r15
   1400086cf:	pop    r14
   1400086d1:	pop    rdi
   1400086d2:	pop    rsi
   1400086d3:	pop    rbp
   1400086d4:	ret    
   1400086d5:	int3   
   1400086d6:	int3   
   1400086d7:	int3   
   1400086d8:	int3   
   1400086d9:	int3   
   1400086da:	int3   
   1400086db:	int3   
   1400086dc:	int3   
   1400086dd:	int3   
   1400086de:	int3   
   1400086df:	int3   
   1400086e0:	rex push rbp
   1400086e2:	push   rsi
   1400086e3:	push   rdi
   1400086e4:	push   r14
   1400086e6:	push   r15
   1400086e8:	lea    rbp,[rsp-0x37]
   1400086ed:	sub    rsp,0xb0
   1400086f4:	mov    QWORD PTR [rbp-0x1],0xfffffffffffffffe
   1400086fc:	mov    QWORD PTR [rsp+0xe0],rbx
   140008704:	mov    r15,rdx
   140008707:	mov    r14,rcx
   14000870a:	xor    ebx,ebx
   14000870c:	mov    DWORD PTR [rbp+0x77],ebx
   14000870f:	lea    r8d,[rbx+0x4]
   140008713:	lea    rdx,[rbp+0x77]
   140008717:	call   0x140007e40
   14000871c:	mov    DWORD PTR [rbp+0x7f],ebx
   14000871f:	lea    r8d,[rbx+0x4]
   140008723:	lea    rdx,[rbp+0x7f]
   140008727:	mov    rcx,r14
   14000872a:	call   0x140007e40
   14000872f:	mov    DWORD PTR [rbp-0x41],ebx
   140008732:	lea    r8d,[rbx+0x4]
   140008736:	lea    rdx,[rbp-0x41]
   14000873a:	mov    rcx,r14
   14000873d:	call   0x140007e40
   140008742:	mov    DWORD PTR [rbp-0x49],ebx
   140008745:	lea    r8d,[rbx+0x4]
   140008749:	lea    rdx,[rbp-0x49]
   14000874d:	mov    rcx,r14
   140008750:	call   0x140007e40
   140008755:	mov    DWORD PTR [rbp-0x45],ebx
   140008758:	lea    r8d,[rbx+0x4]
   14000875c:	lea    rdx,[rbp-0x45]
   140008760:	mov    rcx,r14
   140008763:	call   0x140007e40
   140008768:	cmp    DWORD PTR [rbp+0x77],0xfffe00ff
   14000876f:	je     0x1400087e1
   140008771:	xor    r9d,r9d
   140008774:	or     r8,0xffffffffffffffff
   140008778:	lea    rdx,[rip+0x26789]        # 0x14002ef08
   14000877f:	lea    rcx,[rbp+0x7]
   140008783:	call   0x14000fb80
   140008788:	nop
   140008789:	lea    rax,[rip+0x1ee00]        # 0x140027590
   140008790:	mov    QWORD PTR [rbp-0x39],rax
   140008794:	lea    rax,[rbp-0x31]
   140008798:	mov    QWORD PTR [rbp+0x77],rax
   14000879c:	mov    DWORD PTR [rbp-0x31],ebx
   14000879f:	mov    QWORD PTR [rbp-0x29],rbx
   1400087a3:	mov    QWORD PTR [rbp-0x21],rbx
   1400087a7:	mov    QWORD PTR [rbp-0x19],rbx
   1400087ab:	mov    QWORD PTR [rbp-0x11],rbx
   1400087af:	mov    QWORD PTR [rbp-0x9],rbx
   1400087b3:	or     r8,0xffffffffffffffff
   1400087b7:	lea    rdx,[rbp+0x7]
   1400087bb:	lea    rcx,[rbp-0x31]
   1400087bf:	call   0x140010560
   1400087c4:	nop
   1400087c5:	lea    rax,[rip+0x267bc]        # 0x14002ef88
   1400087cc:	mov    QWORD PTR [rbp-0x39],rax
   1400087d0:	lea    rdx,[rip+0x2ce11]        # 0x1400355e8
   1400087d7:	lea    rcx,[rbp-0x39]
   1400087db:	call   0x14001436c
   1400087e0:	nop
   1400087e1:	cmp    DWORD PTR [rbp+0x7f],0x10000
   1400087e8:	je     0x14000885a
   1400087ea:	xor    r9d,r9d
   1400087ed:	or     r8,0xffffffffffffffff
   1400087f1:	lea    rdx,[rip+0x26728]        # 0x14002ef20
   1400087f8:	lea    rcx,[rbp+0x7]
   1400087fc:	call   0x14000fb80
   140008801:	nop
   140008802:	lea    rax,[rip+0x1ed87]        # 0x140027590
   140008809:	mov    QWORD PTR [rbp-0x39],rax
   14000880d:	lea    rax,[rbp-0x31]
   140008811:	mov    QWORD PTR [rbp+0x77],rax
   140008815:	mov    DWORD PTR [rbp-0x31],ebx
   140008818:	mov    QWORD PTR [rbp-0x29],rbx
   14000881c:	mov    QWORD PTR [rbp-0x21],rbx
   140008820:	mov    QWORD PTR [rbp-0x19],rbx
   140008824:	mov    QWORD PTR [rbp-0x11],rbx
   140008828:	mov    QWORD PTR [rbp-0x9],rbx
   14000882c:	or     r8,0xffffffffffffffff
   140008830:	lea    rdx,[rbp+0x7]
   140008834:	lea    rcx,[rbp-0x31]
   140008838:	call   0x140010560
   14000883d:	nop
   14000883e:	lea    rax,[rip+0x26743]        # 0x14002ef88
   140008845:	mov    QWORD PTR [rbp-0x39],rax
   140008849:	lea    rdx,[rip+0x2cd98]        # 0x1400355e8
   140008850:	lea    rcx,[rbp-0x39]
   140008854:	call   0x14001436c
   140008859:	nop
   14000885a:	mov    edi,DWORD PTR [rbp-0x45]
   14000885d:	lea    eax,[rdi-0x1]
   140008860:	cmp    eax,0x7ffffffd
   140008865:	ja     0x1400088ee
   14000886b:	lea    esi,[rdi+0x1]
   14000886e:	mov    ecx,esi
   140008870:	call   0x14001307c
   140008875:	mov    rbx,rax
   140008878:	mov    QWORD PTR [rbp+0x77],rax
   14000887c:	test   esi,esi
   14000887e:	je     0x1400088b8
   140008880:	test   rax,rax
   140008883:	jne    0x1400088b8
   140008885:	lea    rax,[rip+0x1ed04]        # 0x140027590
   14000888c:	mov    QWORD PTR [rbp-0x39],rax
   140008890:	xor    r9d,r9d
   140008893:	or     r8,0xffffffffffffffff
   140008897:	lea    rdx,[rip+0x2669a]        # 0x14002ef38
   14000889e:	lea    rcx,[rbp-0x31]
   1400088a2:	call   0x14000fb80
   1400088a7:	lea    rdx,[rip+0x2ccba]        # 0x140035568
   1400088ae:	lea    rcx,[rbp-0x39]
   1400088b2:	call   0x14001436c
   1400088b7:	nop
   1400088b8:	mov    r8d,edi
   1400088bb:	mov    rdx,rax
   1400088be:	mov    rcx,r14
   1400088c1:	call   0x140007e40
   1400088c6:	mov    BYTE PTR [rdi+rbx*1],0x0
   1400088ca:	mov    DWORD PTR [rsp+0x20],esi
   1400088ce:	mov    r9,rbx
   1400088d1:	mov    r8d,DWORD PTR [rbp-0x41]
   1400088d5:	mov    edx,DWORD PTR [rbp-0x49]
   1400088d8:	mov    rcx,r15
   1400088db:	call   0x140007670
   1400088e0:	nop
   1400088e1:	test   rbx,rbx
   1400088e4:	je     0x1400088ee
   1400088e6:	mov    rcx,rbx
   1400088e9:	call   0x140013924
   1400088ee:	mov    rbx,QWORD PTR [rsp+0xe0]
   1400088f6:	add    rsp,0xb0
   1400088fd:	pop    r15
   1400088ff:	pop    r14
   140008901:	pop    rdi
   140008902:	pop    rsi
   140008903:	pop    rbp
   140008904:	ret    
   140008905:	int3   
   140008906:	int3   
   140008907:	int3   
   140008908:	int3   
   140008909:	int3   
   14000890a:	int3   
   14000890b:	int3   
   14000890c:	int3   
   14000890d:	int3   
   14000890e:	int3   
   14000890f:	int3   
   140008910:	mov    rax,rsp
   140008913:	mov    QWORD PTR [rax+0x8],rcx
   140008917:	push   rdi
   140008918:	sub    rsp,0xb0
   14000891f:	mov    QWORD PTR [rax-0x20],0xfffffffffffffffe
   140008927:	mov    QWORD PTR [rax+0x10],rbx
   14000892b:	mov    QWORD PTR [rax+0x18],rsi
   14000892f:	mov    rbx,rcx
   140008932:	lea    rsi,[rip+0x26537]        # 0x14002ee70
   140008939:	xor    edi,edi
   14000893b:	nop    DWORD PTR [rax+rax*1+0x0]
   140008940:	mov    rax,QWORD PTR [rbx+0x10]
   140008944:	cmp    DWORD PTR [rax],0x0
   140008947:	jne    0x1400089d9
   14000894d:	mov    QWORD PTR [rsp+0x40],rsi
   140008952:	mov    DWORD PTR [rsp+0x48],edi
   140008956:	call   QWORD PTR [rip+0x1e74c]        # 0x1400270a8
   14000895c:	mov    DWORD PTR [rsp+0x4c],eax
   140008960:	mov    DWORD PTR [rsp+0x50],edi
   140008964:	mov    QWORD PTR [rsp+0x58],rdi
   140008969:	mov    QWORD PTR [rsp+0x20],rsi
   14000896e:	mov    DWORD PTR [rsp+0x28],edi
   140008972:	call   QWORD PTR [rip+0x1e730]        # 0x1400270a8
   140008978:	mov    DWORD PTR [rsp+0x2c],eax
   14000897c:	mov    DWORD PTR [rsp+0x30],edi
   140008980:	mov    QWORD PTR [rsp+0x38],rdi
   140008985:	mov    rax,QWORD PTR [rbx]
   140008988:	lea    rdx,[rsp+0x40]
   14000898d:	mov    rcx,rbx
   140008990:	call   QWORD PTR [rax+0x18]
   140008993:	mov    rax,QWORD PTR [rbx]
   140008996:	lea    r8,[rsp+0x20]
   14000899b:	lea    rdx,[rsp+0x40]
   1400089a0:	mov    rcx,rbx
   1400089a3:	call   QWORD PTR [rax+0x28]
   1400089a6:	mov    rax,QWORD PTR [rbx]
   1400089a9:	lea    rdx,[rsp+0x20]
   1400089ae:	mov    rcx,rbx
   1400089b1:	call   QWORD PTR [rax+0x8]
   1400089b4:	nop
   1400089b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400089ba:	mov    rcx,QWORD PTR [rsp+0x38]
   1400089bf:	call   0x1400137cc
   1400089c4:	nop
   1400089c5:	mov    QWORD PTR [rsp+0x40],rsi
   1400089ca:	mov    rcx,QWORD PTR [rsp+0x58]
   1400089cf:	call   0x1400137cc
   1400089d4:	jmp    0x140008940
   1400089d9:	lea    r11,[rsp+0xb0]
   1400089e1:	mov    rbx,QWORD PTR [r11+0x18]
   1400089e5:	mov    rsi,QWORD PTR [r11+0x20]
   1400089e9:	mov    rsp,r11
   1400089ec:	pop    rdi
   1400089ed:	ret    
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400089f5:	push   rdi
   1400089f6:	sub    rsp,0x20
   1400089fa:	mov    ebx,edx
   1400089fc:	mov    rdi,rcx
   1400089ff:	call   0x140008dd0
   140008a04:	test   bl,0x1
   140008a07:	je     0x140008a11
   140008a09:	mov    rcx,rdi
   140008a0c:	call   0x1400137cc
   140008a11:	mov    rax,rdi
   140008a14:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a19:	add    rsp,0x20
   140008a1d:	pop    rdi
   140008a1e:	ret    
   140008a1f:	int3   
   140008a20:	rex push rbp
   140008a22:	push   rsi
   140008a23:	push   rdi
   140008a24:	push   r12
   140008a26:	push   r13
   140008a28:	push   r14
   140008a2a:	push   r15
   140008a2c:	lea    rbp,[rsp-0x10]
   140008a31:	sub    rsp,0x110
   140008a38:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   140008a40:	mov    QWORD PTR [rsp+0x150],rbx
   140008a48:	mov    rdi,rcx
   140008a4b:	xor    r13d,r13d
   140008a4e:	mov    r14d,r13d
   140008a51:	xor    eax,eax
   140008a53:	mov    QWORD PTR [rbp-0x48],rax
   140008a57:	mov    QWORD PTR [rbp-0x40],rax
   140008a5b:	mov    QWORD PTR [rbp-0x38],rax
   140008a5f:	mov    QWORD PTR [rbp-0x30],rax
   140008a63:	xor    r9d,r9d
   140008a66:	xor    r8d,r8d
   140008a69:	lea    edx,[rax+0x1]
   140008a6c:	xor    ecx,ecx
   140008a6e:	call   QWORD PTR [rip+0x1e5bc]        # 0x140027030
   140008a74:	mov    rbx,rax
   140008a77:	mov    QWORD PTR [rbp+0x60],rax
   140008a7b:	mov    QWORD PTR [rbp-0x30],rax
   140008a7f:	mov    QWORD PTR [rbp-0x58],rax
   140008a83:	cmp    rax,0xffffffffffffffff
   140008a87:	jne    0x140008b05
   140008a89:	xor    r9d,r9d
   140008a8c:	or     r8,rax
   140008a8f:	lea    rdx,[rip+0x26412]        # 0x14002eea8
   140008a96:	lea    rcx,[rsp+0x78]
   140008a9b:	call   0x14000fb80
   140008aa0:	nop
   140008aa1:	lea    rax,[rip+0x1eae8]        # 0x140027590
   140008aa8:	mov    QWORD PTR [rsp+0x40],rax
   140008aad:	lea    rax,[rsp+0x48]
   140008ab2:	mov    QWORD PTR [rbp+0x58],rax
   140008ab6:	mov    DWORD PTR [rsp+0x48],r13d
   140008abb:	mov    QWORD PTR [rsp+0x50],r13
   140008ac0:	mov    QWORD PTR [rsp+0x58],r13
   140008ac5:	mov    QWORD PTR [rsp+0x60],r13
   140008aca:	mov    QWORD PTR [rsp+0x68],r13
   140008acf:	mov    QWORD PTR [rsp+0x70],r13
   140008ad4:	or     r8,rbx
   140008ad7:	lea    rdx,[rsp+0x78]
   140008adc:	lea    rcx,[rsp+0x48]
   140008ae1:	call   0x140010560
   140008ae6:	nop
   140008ae7:	lea    rax,[rip+0x2649a]        # 0x14002ef88
   140008aee:	mov    QWORD PTR [rsp+0x40],rax
   140008af3:	lea    rdx,[rip+0x2caee]        # 0x1400355e8
   140008afa:	lea    rcx,[rsp+0x40]
   140008aff:	call   0x14001436c
   140008b04:	nop
   140008b05:	lea    rcx,[rbp-0x10]
   140008b09:	call   0x1400128b0
   140008b0e:	mov    r15,rax
   140008b11:	lea    rax,[rip+0x26460]        # 0x14002ef78
   140008b18:	mov    QWORD PTR [rbp-0x28],rax
   140008b1c:	mov    QWORD PTR [rbp-0x20],r15
   140008b20:	mov    DWORD PTR [rsp+0x78],r13d
   140008b25:	mov    QWORD PTR [rbp-0x80],r13
   140008b29:	mov    QWORD PTR [rbp-0x78],r13
   140008b2d:	mov    QWORD PTR [rbp-0x70],r13
   140008b31:	mov    QWORD PTR [rbp-0x68],r13
   140008b35:	mov    QWORD PTR [rbp-0x60],r13
   140008b39:	or     r8,0xffffffffffffffff
   140008b3d:	lea    rdx,[rdi+0x10]
   140008b41:	lea    rcx,[rsp+0x78]
   140008b46:	call   0x140010560
   140008b4b:	nop
   140008b4c:	lea    rcx,[rsp+0x78]
   140008b51:	call   0x1400112c0
   140008b56:	nop
   140008b57:	lea    rcx,[rsp+0x78]
   140008b5c:	call   0x1400112c0
   140008b61:	lea    rcx,[rbp-0x10]
   140008b65:	mov    QWORD PTR [rsp+0x38],rcx
   140008b6a:	mov    DWORD PTR [rsp+0x30],r13d
   140008b6f:	mov    DWORD PTR [rsp+0x28],0x1000
   140008b77:	mov    DWORD PTR [rsp+0x20],0x1000
   140008b7f:	mov    edx,0x40000003
   140008b84:	mov    r9d,0xff
   140008b8a:	mov    r8d,0xe
   140008b90:	mov    rcx,rax
   140008b93:	call   QWORD PTR [rip+0x1e57f]        # 0x140027118
   140008b99:	mov    QWORD PTR [rdi+0x78],rax
   140008b9d:	mov    rax,QWORD PTR [rbp-0x68]
   140008ba1:	mov    rcx,r13
   140008ba4:	mov    QWORD PTR [rbp-0x68],rcx
   140008ba8:	test   rax,rax
   140008bab:	je     0x140008bb9
   140008bad:	mov    rcx,rax
   140008bb0:	call   0x140013924
   140008bb5:	mov    rcx,QWORD PTR [rbp-0x68]
   140008bb9:	call   0x1400137cc
   140008bbe:	mov    rax,QWORD PTR [rbp-0x78]
   140008bc2:	mov    rcx,r13
   140008bc5:	mov    QWORD PTR [rbp-0x78],rcx
   140008bc9:	test   rax,rax
   140008bcc:	je     0x140008bda
   140008bce:	mov    rcx,rax
   140008bd1:	call   0x140013924
   140008bd6:	mov    rcx,QWORD PTR [rbp-0x78]
   140008bda:	call   0x1400137cc
   140008bdf:	xor    r9d,r9d
   140008be2:	or     r8,0xffffffffffffffff
   140008be6:	lea    rcx,[rsp+0x78]
   140008beb:	cmp    QWORD PTR [rdi+0x78],r8
   140008bef:	je     0x140008d43
   140008bf5:	lea    rdx,[rip+0x2627c]        # 0x14002ee78
   140008bfc:	call   0x14000fb80
   140008c01:	lea    rcx,[rdi+0x40]
   140008c05:	lea    r8,[rbp+0x58]
   140008c09:	mov    rdx,rax
   140008c0c:	call   0x140012020
   140008c11:	lea    rdx,[rbp-0x48]
   140008c15:	mov    rcx,QWORD PTR [rdi+0x78]
   140008c19:	call   QWORD PTR [rip+0x1e581]        # 0x1400271a0
   140008c1f:	call   QWORD PTR [rip+0x1e43b]        # 0x140027060
   140008c25:	mov    esi,eax
   140008c27:	mov    r8d,DWORD PTR [rbp+0x58]
   140008c2b:	xor    edx,edx
   140008c2d:	mov    ecx,0x100000
   140008c32:	call   QWORD PTR [rip+0x1e4c8]        # 0x140027100
   140008c38:	mov    QWORD PTR [rdi+0x70],rax
   140008c3c:	mov    QWORD PTR [rbp-0x50],rax
   140008c40:	cmp    esi,0x217
   140008c46:	je     0x140008cb4
   140008c48:	cmp    esi,0x3e5
   140008c4e:	jne    0x140008cc5
   140008c50:	or     r9d,0xffffffff
   140008c54:	xor    r8d,r8d
   140008c57:	lea    rdx,[rbp-0x58]
   140008c5b:	lea    ecx,[r8+0x2]
   140008c5f:	call   QWORD PTR [rip+0x1e4bb]        # 0x140027120
   140008c65:	test   eax,eax
   140008c67:	je     0x140008c73
   140008c69:	dec    eax
   140008c6b:	jne    0x140008c8e
   140008c6d:	lea    r14d,[rax+0x1]
   140008c71:	jmp    0x140008c8e
   140008c73:	mov    rax,QWORD PTR [rdi]
   140008c76:	mov    r8,QWORD PTR [rdi+0x8]
   140008c7a:	mov    rdx,QWORD PTR [rdi+0x78]
   140008c7e:	mov    rcx,rdi
   140008c81:	call   QWORD PTR [rax+0x8]
   140008c84:	mov    rcx,QWORD PTR [rbp-0x58]
   140008c88:	call   QWORD PTR [rip+0x1e3f2]        # 0x140027080
   140008c8e:	test   r14d,r14d
   140008c91:	je     0x140008b20
   140008c97:	test   r15,r15
   140008c9a:	je     0x140008ca6
   140008c9c:	mov    rcx,r15
   140008c9f:	call   QWORD PTR [rip+0x1e40b]        # 0x1400270b0
   140008ca5:	nop
   140008ca6:	mov    rcx,rbx
   140008ca9:	call   QWORD PTR [rip+0x1e3f1]        # 0x1400270a0
   140008caf:	jmp    0x140008db5
   140008cb4:	mov    rax,QWORD PTR [rdi]
   140008cb7:	mov    r8,QWORD PTR [rdi+0x8]
   140008cbb:	mov    rdx,QWORD PTR [rdi+0x78]
   140008cbf:	mov    rcx,rdi
   140008cc2:	call   QWORD PTR [rax+0x8]
   140008cc5:	xor    r9d,r9d
   140008cc8:	or     r8,0xffffffffffffffff
   140008ccc:	lea    rdx,[rip+0x261d5]        # 0x14002eea8
   140008cd3:	lea    rcx,[rsp+0x78]
   140008cd8:	call   0x14000fb80
   140008cdd:	nop
   140008cde:	lea    rax,[rip+0x1e8ab]        # 0x140027590
   140008ce5:	mov    QWORD PTR [rsp+0x40],rax
   140008cea:	lea    rax,[rsp+0x48]
   140008cef:	mov    QWORD PTR [rbp+0x68],rax
   140008cf3:	mov    DWORD PTR [rsp+0x48],r13d
   140008cf8:	mov    QWORD PTR [rsp+0x50],r13
   140008cfd:	mov    QWORD PTR [rsp+0x58],r13
   140008d02:	mov    QWORD PTR [rsp+0x60],r13
   140008d07:	mov    QWORD PTR [rsp+0x68],r13
   140008d0c:	mov    QWORD PTR [rsp+0x70],r13
   140008d11:	or     r8,0xffffffffffffffff
   140008d15:	lea    rdx,[rsp+0x78]
   140008d1a:	lea    rcx,[rsp+0x48]
   140008d1f:	call   0x140010560
   140008d24:	nop
   140008d25:	lea    rax,[rip+0x2625c]        # 0x14002ef88
   140008d2c:	mov    QWORD PTR [rsp+0x40],rax
   140008d31:	lea    rdx,[rip+0x2c8b0]        # 0x1400355e8
   140008d38:	lea    rcx,[rsp+0x40]
   140008d3d:	call   0x14001436c
   140008d42:	nop
   140008d43:	lea    rdx,[rip+0x2615e]        # 0x14002eea8
   140008d4a:	call   0x14000fb80
   140008d4f:	nop
   140008d50:	lea    rax,[rip+0x1e839]        # 0x140027590
   140008d57:	mov    QWORD PTR [rsp+0x40],rax
   140008d5c:	lea    rax,[rsp+0x48]
   140008d61:	mov    QWORD PTR [rbp+0x68],rax
   140008d65:	mov    DWORD PTR [rsp+0x48],r13d
   140008d6a:	mov    QWORD PTR [rsp+0x50],r13
   140008d6f:	mov    QWORD PTR [rsp+0x58],r13
   140008d74:	mov    QWORD PTR [rsp+0x60],r13
   140008d79:	mov    QWORD PTR [rsp+0x68],r13
   140008d7e:	mov    QWORD PTR [rsp+0x70],r13
   140008d83:	or     r8,0xffffffffffffffff
   140008d87:	lea    rdx,[rsp+0x78]
   140008d8c:	lea    rcx,[rsp+0x48]
   140008d91:	call   0x140010560
   140008d96:	nop
   140008d97:	lea    rax,[rip+0x261ea]        # 0x14002ef88
   140008d9e:	mov    QWORD PTR [rsp+0x40],rax
   140008da3:	lea    rdx,[rip+0x2c83e]        # 0x1400355e8
   140008daa:	lea    rcx,[rsp+0x40]
   140008daf:	call   0x14001436c
   140008db4:	nop
   140008db5:	mov    rbx,QWORD PTR [rsp+0x150]
   140008dbd:	add    rsp,0x110
   140008dc4:	pop    r15
   140008dc6:	pop    r14
   140008dc8:	pop    r13
   140008dca:	pop    r12
   140008dcc:	pop    rdi
   140008dcd:	pop    rsi
   140008dce:	pop    rbp
   140008dcf:	ret    
   140008dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140008dd5:	push   rdi
   140008dd6:	sub    rsp,0x20
   140008dda:	lea    rax,[rip+0x2617f]        # 0x14002ef60
   140008de1:	mov    rbx,rcx
   140008de4:	xor    edi,edi
   140008de6:	mov    QWORD PTR [rcx],rax
   140008de9:	mov    rcx,QWORD PTR [rcx+0x70]
   140008ded:	test   rcx,rcx
   140008df0:	je     0x140008dfc
   140008df2:	call   QWORD PTR [rip+0x1e2a8]        # 0x1400270a0
   140008df8:	mov    QWORD PTR [rbx+0x70],rdi
   140008dfc:	mov    rcx,QWORD PTR [rbx+0x78]
   140008e00:	test   rcx,rcx
   140008e03:	je     0x140008e19
   140008e05:	call   QWORD PTR [rip+0x1e24d]        # 0x140027058
   140008e0b:	mov    rcx,QWORD PTR [rbx+0x78]
   140008e0f:	call   QWORD PTR [rip+0x1e28b]        # 0x1400270a0
   140008e15:	mov    QWORD PTR [rbx+0x78],rdi
   140008e19:	mov    rcx,QWORD PTR [rbx+0x60]
   140008e1d:	mov    QWORD PTR [rbx+0x60],rdi
   140008e21:	test   rcx,rcx
   140008e24:	je     0x140008e2b
   140008e26:	call   0x140013924
   140008e2b:	mov    rcx,QWORD PTR [rbx+0x60]
   140008e2f:	call   0x1400137cc
   140008e34:	mov    rcx,QWORD PTR [rbx+0x50]
   140008e38:	mov    QWORD PTR [rbx+0x50],rdi
   140008e3c:	test   rcx,rcx
   140008e3f:	je     0x140008e46
   140008e41:	call   0x140013924
   140008e46:	mov    rcx,QWORD PTR [rbx+0x50]
   140008e4a:	call   0x1400137cc
   140008e4f:	mov    rcx,QWORD PTR [rbx+0x30]
   140008e53:	mov    QWORD PTR [rbx+0x30],rdi
   140008e57:	test   rcx,rcx
   140008e5a:	je     0x140008e61
   140008e5c:	call   0x140013924
   140008e61:	mov    rcx,QWORD PTR [rbx+0x30]
   140008e65:	call   0x1400137cc
   140008e6a:	mov    rcx,QWORD PTR [rbx+0x20]
   140008e6e:	mov    QWORD PTR [rbx+0x20],rdi
   140008e72:	test   rcx,rcx
   140008e75:	je     0x140008e7c
   140008e77:	call   0x140013924
   140008e7c:	mov    rcx,QWORD PTR [rbx+0x20]
   140008e80:	mov    rbx,QWORD PTR [rsp+0x30]
   140008e85:	add    rsp,0x20
   140008e89:	pop    rdi
   140008e8a:	jmp    0x1400137cc
   140008e8f:	int3   
   140008e90:	mov    rcx,QWORD PTR [rcx]
   140008e93:	test   rcx,rcx
   140008e96:	jne    0x140013924
   140008e9c:	ret    
   140008e9d:	int3   
   140008e9e:	int3   
   140008e9f:	int3   
   140008ea0:	test   rdx,rdx
   140008ea3:	je     0x140008efb
   140008ea5:	mov    QWORD PTR [rsp+0x10],rsi
   140008eaa:	push   rdi
   140008eab:	sub    rsp,0x20
   140008eaf:	mov    QWORD PTR [rsp+0x30],rbx
   140008eb4:	xor    ebx,ebx
   140008eb6:	mov    rdi,rdx
   140008eb9:	mov    rsi,rcx
   140008ebc:	cmp    DWORD PTR [rdx],ebx
   140008ebe:	jbe    0x140008ee0
   140008ec0:	mov    eax,ebx
   140008ec2:	inc    rax
   140008ec5:	add    rax,rax
   140008ec8:	mov    rdx,QWORD PTR [rdi+rax*8]
   140008ecc:	test   rdx,rdx
   140008ecf:	je     0x140008eda
   140008ed1:	mov    rax,QWORD PTR [rsi]
   140008ed4:	mov    rcx,rsi
   140008ed7:	call   QWORD PTR [rax+0x10]
   140008eda:	inc    ebx
   140008edc:	cmp    ebx,DWORD PTR [rdi]
   140008ede:	jb     0x140008ec0
   140008ee0:	mov    rax,QWORD PTR [rsi]
   140008ee3:	mov    rdx,rdi
   140008ee6:	mov    rcx,rsi
   140008ee9:	call   QWORD PTR [rax+0x10]
   140008eec:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ef1:	mov    rsi,QWORD PTR [rsp+0x38]
   140008ef6:	add    rsp,0x20
   140008efa:	pop    rdi
   140008efb:	ret    
   140008efc:	int3   
   140008efd:	int3   
   140008efe:	int3   
   140008eff:	int3   
   140008f00:	rex push rbx
   140008f02:	sub    rsp,0x20
   140008f06:	lea    rax,[rip+0x263bb]        # 0x14002f2c8
   140008f0d:	mov    rbx,rcx
   140008f10:	mov    QWORD PTR [rcx],rax
   140008f13:	test   dl,0x1
   140008f16:	je     0x140008f1d
   140008f18:	call   0x1400137cc
   140008f1d:	mov    rax,rbx
   140008f20:	add    rsp,0x20
   140008f24:	pop    rbx
   140008f25:	ret    
   140008f26:	int3   
   140008f27:	int3   
   140008f28:	int3   
   140008f29:	int3   
   140008f2a:	int3   
   140008f2b:	int3   
   140008f2c:	int3   
   140008f2d:	int3   
   140008f2e:	int3   
   140008f2f:	int3   
   140008f30:	mov    eax,edx
   140008f32:	mov    r9,rcx
   140008f35:	mov    rdx,r8
   140008f38:	mov    ecx,eax
   140008f3a:	rex.WB jmp QWORD PTR [r9+0x8]
   140008f3e:	int3   
   140008f3f:	int3   
   140008f40:	mov    rax,rcx
   140008f43:	mov    rcx,rdx
   140008f46:	rex.W jmp QWORD PTR [rax+0x10]
   140008f4a:	int3   
   140008f4b:	int3   
   140008f4c:	int3   
   140008f4d:	int3   
   140008f4e:	int3   
   140008f4f:	int3   
   140008f50:	rex push rbx
   140008f52:	sub    rsp,0x30
   140008f56:	mov    rbx,rdx
   140008f59:	test   rcx,rcx
   140008f5c:	je     0x140008fa5
   140008f5e:	xor    eax,eax
   140008f60:	test   rdx,rdx
   140008f63:	je     0x140008f75
   140008f65:	cmp    BYTE PTR [rcx],0x0
   140008f68:	je     0x140008f75
   140008f6a:	inc    rax
   140008f6d:	inc    rcx
   140008f70:	cmp    rax,rdx
   140008f73:	jb     0x140008f65
   140008f75:	cmp    rax,rdx
   140008f78:	jne    0x140008fc9
   140008f7a:	lea    rdx,[rip+0x2602f]        # 0x14002efb0
   140008f81:	lea    rcx,[rip+0x26048]        # 0x14002efd0
   140008f88:	xor    r9d,r9d
   140008f8b:	xor    r8d,r8d
   140008f8e:	mov    QWORD PTR [rsp+0x20],0x0
   140008f97:	call   0x140001080
   140008f9c:	mov    rax,rbx
   140008f9f:	add    rsp,0x30
   140008fa3:	pop    rbx
   140008fa4:	ret    
   140008fa5:	lea    rdx,[rip+0x26004]        # 0x14002efb0
   140008fac:	lea    rcx,[rip+0x26055]        # 0x14002f008
   140008fb3:	xor    r9d,r9d
   140008fb6:	xor    r8d,r8d
   140008fb9:	mov    QWORD PTR [rsp+0x20],0x0
   140008fc2:	call   0x140001080
   140008fc7:	xor    eax,eax
   140008fc9:	add    rsp,0x30
   140008fcd:	pop    rbx
   140008fce:	ret    
   140008fcf:	int3   
   140008fd0:	sub    rsp,0x38
   140008fd4:	test   rcx,rcx
   140008fd7:	je     0x140009035
   140008fd9:	test   r8,r8
   140008fdc:	je     0x140009032
   140008fde:	mov    edx,0x7fffffff
   140008fe3:	sub    r8,rcx
   140008fe6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008ff0:	movzx  eax,BYTE PTR [r8+rcx*1]
   140008ff5:	lea    rcx,[rcx+0x1]
   140008ff9:	mov    BYTE PTR [rcx-0x1],al
   140008ffc:	test   al,al
   140008ffe:	je     0x140009005
   140009000:	dec    rdx
   140009003:	jne    0x140008ff0
   140009005:	test   rdx,rdx
   140009008:	jne    0x14000902b
   14000900a:	mov    BYTE PTR [rcx-0x1],dl
   14000900d:	mov    QWORD PTR [rsp+0x20],rdx
   140009012:	lea    rdx,[rip+0x2600f]        # 0x14002f028
   140009019:	lea    rcx,[rip+0x26028]        # 0x14002f048
   140009020:	xor    r9d,r9d
   140009023:	xor    r8d,r8d
   140009026:	call   0x140001080
   14000902b:	xor    eax,eax
   14000902d:	add    rsp,0x38
   140009031:	ret    
   140009032:	mov    BYTE PTR [rcx],0x0
   140009035:	lea    rdx,[rip+0x25fec]        # 0x14002f028
   14000903c:	lea    rcx,[rip+0x25fc5]        # 0x14002f008
   140009043:	xor    r9d,r9d
   140009046:	xor    r8d,r8d
   140009049:	mov    QWORD PTR [rsp+0x20],0x0
   140009052:	call   0x140001080
   140009057:	or     eax,0xffffffff
   14000905a:	add    rsp,0x38
   14000905e:	ret    
   14000905f:	int3   
   140009060:	sub    rsp,0x38
   140009064:	test   r9,r9
   140009067:	jne    0x140009073
   140009069:	test   rcx,rcx
   14000906c:	jne    0x14000907c
   14000906e:	jmp    0x1400090f7
   140009073:	test   rcx,rcx
   140009076:	je     0x1400090f7
   14000907c:	test   r8,r8
   14000907f:	je     0x1400090ef
   140009081:	test   r9,r9
   140009084:	jne    0x140009090
   140009086:	mov    BYTE PTR [rcx],r9b
   140009089:	xor    eax,eax
   14000908b:	add    rsp,0x38
   14000908f:	ret    
   140009090:	mov    edx,0x104
   140009095:	sub    r8,rcx
   140009098:	nop    DWORD PTR [rax+rax*1+0x0]
   1400090a0:	movzx  eax,BYTE PTR [r8+rcx*1]
   1400090a5:	lea    rcx,[rcx+0x1]
   1400090a9:	mov    BYTE PTR [rcx-0x1],al
   1400090ac:	test   al,al
   1400090ae:	je     0x1400090ba
   1400090b0:	dec    rdx
   1400090b3:	je     0x1400090ba
   1400090b5:	dec    r9
   1400090b8:	jne    0x1400090a0
   1400090ba:	test   r9,r9
   1400090bd:	jne    0x1400090c2
   1400090bf:	mov    BYTE PTR [rcx],r9b
   1400090c2:	test   rdx,rdx
   1400090c5:	jne    0x1400090e8
   1400090c7:	mov    BYTE PTR [rcx-0x1],dl
   1400090ca:	mov    QWORD PTR [rsp+0x20],rdx
   1400090cf:	lea    rdx,[rip+0x25fa2]        # 0x14002f078
   1400090d6:	lea    rcx,[rip+0x25f6b]        # 0x14002f048
   1400090dd:	xor    r9d,r9d
   1400090e0:	xor    r8d,r8d
   1400090e3:	call   0x140001080
   1400090e8:	xor    eax,eax
   1400090ea:	add    rsp,0x38
   1400090ee:	ret    
   1400090ef:	test   rcx,rcx
   1400090f2:	je     0x1400090f7
   1400090f4:	mov    BYTE PTR [rcx],0x0
   1400090f7:	lea    rdx,[rip+0x25f2a]        # 0x14002f028
   1400090fe:	lea    rcx,[rip+0x25f03]        # 0x14002f008
   140009105:	xor    r9d,r9d
   140009108:	xor    r8d,r8d
   14000910b:	mov    QWORD PTR [rsp+0x20],0x0
   140009114:	call   0x140001080
   140009119:	or     eax,0xffffffff
   14000911c:	add    rsp,0x38
   140009120:	ret    
   140009121:	int3   
   140009122:	int3   
   140009123:	int3   
   140009124:	int3   
   140009125:	int3   
   140009126:	int3   
   140009127:	int3   
   140009128:	int3   
   140009129:	int3   
   14000912a:	int3   
   14000912b:	int3   
   14000912c:	int3   
   14000912d:	int3   
   14000912e:	int3   
   14000912f:	int3   
   140009130:	sub    rsp,0x38
   140009134:	test   rcx,rcx
   140009137:	je     0x140009185
   140009139:	xor    eax,eax
   14000913b:	nop    DWORD PTR [rax+rax*1+0x0]
   140009140:	cmp    BYTE PTR [rax+rcx*1],0x0
   140009144:	je     0x140009151
   140009146:	inc    rax
   140009149:	cmp    rax,0x7fffffff
   14000914f:	jb     0x140009140
   140009151:	cmp    rax,0x7fffffff
   140009157:	jne    0x1400091a9
   140009159:	lea    rdx,[rip+0x25e50]        # 0x14002efb0
   140009160:	lea    rcx,[rip+0x25e69]        # 0x14002efd0
   140009167:	xor    r9d,r9d
   14000916a:	xor    r8d,r8d
   14000916d:	mov    QWORD PTR [rsp+0x20],0x0
   140009176:	call   0x140001080
   14000917b:	mov    eax,0x7fffffff
   140009180:	add    rsp,0x38
   140009184:	ret    
   140009185:	lea    rdx,[rip+0x25e24]        # 0x14002efb0
   14000918c:	lea    rcx,[rip+0x25e75]        # 0x14002f008
   140009193:	xor    r9d,r9d
   140009196:	xor    r8d,r8d
   140009199:	mov    QWORD PTR [rsp+0x20],0x0
   1400091a2:	call   0x140001080
   1400091a7:	xor    eax,eax
   1400091a9:	add    rsp,0x38
   1400091ad:	ret    
   1400091ae:	int3   
   1400091af:	int3   
   1400091b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400091b5:	push   rdi
   1400091b6:	sub    rsp,0x20
   1400091ba:	mov    rdi,rcx
   1400091bd:	call   0x140009130
   1400091c2:	lea    rcx,[rax+0x2]
   1400091c6:	call   0x14001396c
   1400091cb:	mov    rbx,rax
   1400091ce:	test   rax,rax
   1400091d1:	je     0x1400091e1
   1400091d3:	mov    r8,rdi
   1400091d6:	mov    rcx,rax
   1400091d9:	call   0x140008fd0
   1400091de:	mov    rax,rbx
   1400091e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400091e6:	add    rsp,0x20
   1400091ea:	pop    rdi
   1400091eb:	ret    
   1400091ec:	int3   
   1400091ed:	int3   
   1400091ee:	int3   
   1400091ef:	int3   
   1400091f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400091f5:	push   rdi
   1400091f6:	sub    rsp,0x30
   1400091fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009203:	mov    QWORD PTR [rsp+0x48],rbx
   140009208:	lea    rdi,[rip+0x31131]        # 0x14003a340
   14000920f:	mov    QWORD PTR [rsp+0x40],rdi
   140009214:	xor    ebx,ebx
   140009216:	mov    DWORD PTR [rip+0x31124],ebx        # 0x14003a340
   14000921c:	mov    QWORD PTR [rip+0x31125],rbx        # 0x14003a348
   140009223:	mov    QWORD PTR [rip+0x31126],rbx        # 0x14003a350
   14000922a:	mov    QWORD PTR [rip+0x31127],rbx        # 0x14003a358
   140009231:	mov    QWORD PTR [rip+0x31128],rbx        # 0x14003a360
   140009238:	mov    QWORD PTR [rip+0x31129],rbx        # 0x14003a368
   14000923f:	mov    QWORD PTR [rip+0x3112a],rbx        # 0x14003a370
   140009246:	mov    QWORD PTR [rip+0x3112b],rbx        # 0x14003a378
   14000924d:	call   0x140005030
   140009252:	mov    QWORD PTR [rip+0x31117],rax        # 0x14003a370
   140009259:	mov    QWORD PTR [rip+0x31120],rbx        # 0x14003a380
   140009260:	mov    QWORD PTR [rip+0x31121],rbx        # 0x14003a388
   140009267:	call   0x140005030
   14000926c:	mov    QWORD PTR [rip+0x3110d],rax        # 0x14003a380
   140009273:	lea    rcx,[rip+0x31116]        # 0x14003a390
   14000927a:	call   QWORD PTR [rip+0x1deb8]        # 0x140027138
   140009280:	lea    rcx,[rip+0x31111]        # 0x14003a398
   140009287:	call   QWORD PTR [rip+0x1deab]        # 0x140027138
   14000928d:	lea    rcx,[rip+0x3110c]        # 0x14003a3a0
   140009294:	call   QWORD PTR [rip+0x1de9e]        # 0x140027138
   14000929a:	lea    rcx,[rip+0x31107]        # 0x14003a3a8
   1400092a1:	call   QWORD PTR [rip+0x1de91]        # 0x140027138
   1400092a7:	lea    rcx,[rip+0x31102]        # 0x14003a3b0
   1400092ae:	call   QWORD PTR [rip+0x1de2c]        # 0x1400270e0
   1400092b4:	lea    rcx,[rip+0x3111d]        # 0x14003a3d8
   1400092bb:	call   QWORD PTR [rip+0x1de1f]        # 0x1400270e0
   1400092c1:	mov    rcx,rdi
   1400092c4:	call   0x140010830
   1400092c9:	mov    rdx,QWORD PTR [rip+0x310a0]        # 0x14003a370
   1400092d0:	mov    rdx,QWORD PTR [rdx+0x8]
   1400092d4:	lea    rcx,[rip+0x31095]        # 0x14003a370
   1400092db:	call   0x140004f50
   1400092e0:	mov    rax,QWORD PTR [rip+0x31089]        # 0x14003a370
   1400092e7:	mov    QWORD PTR [rax+0x8],rax
   1400092eb:	mov    rax,QWORD PTR [rip+0x3107e]        # 0x14003a370
   1400092f2:	mov    QWORD PTR [rax],rax
   1400092f5:	mov    rax,QWORD PTR [rip+0x31074]        # 0x14003a370
   1400092fc:	mov    QWORD PTR [rax+0x10],rax
   140009300:	mov    QWORD PTR [rip+0x31071],rbx        # 0x14003a378
   140009307:	mov    rdx,QWORD PTR [rip+0x31072]        # 0x14003a380
   14000930e:	mov    rdx,QWORD PTR [rdx+0x8]
   140009312:	lea    rcx,[rip+0x31067]        # 0x14003a380
   140009319:	call   0x140004f50
   14000931e:	mov    rcx,QWORD PTR [rip+0x3105b]        # 0x14003a380
   140009325:	mov    QWORD PTR [rcx+0x8],rcx
   140009329:	mov    rcx,QWORD PTR [rip+0x31050]        # 0x14003a380
   140009330:	mov    QWORD PTR [rcx],rcx
   140009333:	mov    rcx,QWORD PTR [rip+0x31046]        # 0x14003a380
   14000933a:	mov    QWORD PTR [rcx+0x10],rcx
   14000933e:	mov    QWORD PTR [rip+0x31043],rbx        # 0x14003a388
   140009345:	mov    rax,rdi
   140009348:	mov    rbx,QWORD PTR [rsp+0x48]
   14000934d:	add    rsp,0x30
   140009351:	pop    rdi
   140009352:	ret    
   140009353:	int3   
   140009354:	int3   
   140009355:	int3   
   140009356:	int3   
   140009357:	int3   
   140009358:	int3   
   140009359:	int3   
   14000935a:	int3   
   14000935b:	int3   
   14000935c:	int3   
   14000935d:	int3   
   14000935e:	int3   
   14000935f:	int3   
   140009360:	mov    QWORD PTR [rsp+0x8],rcx
   140009365:	push   rdi
   140009366:	sub    rsp,0x30
   14000936a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009373:	mov    QWORD PTR [rsp+0x48],rbx
   140009378:	mov    rbx,rdx
   14000937b:	mov    rdi,rcx
   14000937e:	call   0x1400123b0
   140009383:	nop
   140009384:	lea    rax,[rip+0x25ecd]        # 0x14002f258
   14000938b:	mov    QWORD PTR [rdi],rax
   14000938e:	xor    eax,eax
   140009390:	mov    DWORD PTR [rdi+0x28],eax
   140009393:	mov    QWORD PTR [rdi+0x30],rax
   140009397:	mov    QWORD PTR [rdi+0x38],rax
   14000939b:	mov    DWORD PTR [rdi+0x40],0x1
   1400093a2:	mov    DWORD PTR [rdi+0x68],eax
   1400093a5:	mov    QWORD PTR [rdi+0x70],rbx
   1400093a9:	mov    QWORD PTR [rdi+0x78],rax
   1400093ad:	mov    QWORD PTR [rdi+0x80],rax
   1400093b4:	mov    QWORD PTR [rdi+0x90],rax
   1400093bb:	mov    QWORD PTR [rdi+0x98],rax
   1400093c2:	call   0x140005030
   1400093c7:	mov    QWORD PTR [rdi+0x90],rax
   1400093ce:	mov    rax,rdi
   1400093d1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400093d6:	add    rsp,0x30
   1400093da:	pop    rdi
   1400093db:	ret    
   1400093dc:	int3   
   1400093dd:	int3   
   1400093de:	int3   
   1400093df:	int3   
   1400093e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400093e5:	mov    QWORD PTR [rsp+0x18],rsi
   1400093ea:	push   rdi
   1400093eb:	sub    rsp,0x20
   1400093ef:	lea    rax,[rip+0x25e62]        # 0x14002f258
   1400093f6:	mov    edi,edx
   1400093f8:	mov    rsi,rcx
   1400093fb:	mov    QWORD PTR [rcx],rax
   1400093fe:	mov    r8,QWORD PTR [rcx+0x90]
   140009405:	lea    rdx,[rsp+0x30]
   14000940a:	mov    r9,r8
   14000940d:	mov    r8,QWORD PTR [r8]
   140009410:	add    rcx,0x90
   140009417:	call   0x140004990
   14000941c:	mov    rcx,QWORD PTR [rsi+0x90]
   140009423:	call   0x1400137cc
   140009428:	mov    rcx,rsi
   14000942b:	call   0x1400123e0
   140009430:	test   dil,0x1
   140009434:	je     0x14000943e
   140009436:	mov    rcx,rsi
   140009439:	call   0x1400137cc
   14000943e:	mov    rbx,QWORD PTR [rsp+0x38]
   140009443:	mov    rax,rsi
   140009446:	mov    rsi,QWORD PTR [rsp+0x40]
   14000944b:	add    rsp,0x20
   14000944f:	pop    rdi
   140009450:	ret    
   140009451:	int3   
   140009452:	int3   
   140009453:	int3   
   140009454:	int3   
   140009455:	int3   
   140009456:	int3   
   140009457:	int3   
   140009458:	int3   
   140009459:	int3   
   14000945a:	int3   
   14000945b:	int3   
   14000945c:	int3   
   14000945d:	int3   
   14000945e:	int3   
   14000945f:	int3   
   140009460:	rex push rdi
   140009462:	sub    rsp,0x20
   140009466:	cmp    DWORD PTR [rcx+0x68],0x0
   14000946a:	mov    rdi,rcx
   14000946d:	jne    0x140009566
   140009473:	lea    rcx,[rip+0x25c26]        # 0x14002f0a0
   14000947a:	mov    QWORD PTR [rsp+0x38],rsi
   14000947f:	call   QWORD PTR [rip+0x1dcbb]        # 0x140027140
   140009485:	mov    ecx,0x18
   14000948a:	mov    QWORD PTR [rdi+0x30],rax
   14000948e:	call   0x1400138b8
   140009493:	mov    rsi,rax
   140009496:	test   rax,rax
   140009499:	je     0x1400094de
   14000949b:	mov    rcx,QWORD PTR [rdi+0x30]
   14000949f:	lea    rdx,[rip+0x25c0a]        # 0x14002f0b0
   1400094a6:	mov    QWORD PTR [rsp+0x30],rbx
   1400094ab:	call   QWORD PTR [rip+0x1dbbf]        # 0x140027070
   1400094b1:	mov    rcx,QWORD PTR [rdi+0x30]
   1400094b5:	lea    rdx,[rip+0x25c04]        # 0x14002f0c0
   1400094bc:	mov    rbx,rax
   1400094bf:	call   QWORD PTR [rip+0x1dbab]        # 0x140027070
   1400094c5:	lea    rcx,[rip+0x25dd4]        # 0x14002f2a0
   1400094cc:	mov    QWORD PTR [rsi+0x10],rbx
   1400094d0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400094d5:	mov    QWORD PTR [rsi],rcx
   1400094d8:	mov    QWORD PTR [rsi+0x8],rax
   1400094dc:	jmp    0x1400094e0
   1400094de:	xor    esi,esi
   1400094e0:	mov    rcx,QWORD PTR [rdi+0x30]
   1400094e4:	lea    rdx,[rip+0x25bed]        # 0x14002f0d8
   1400094eb:	mov    QWORD PTR [rdi+0x38],rsi
   1400094ef:	call   QWORD PTR [rip+0x1db7b]        # 0x140027070
   1400094f5:	mov    rcx,QWORD PTR [rdi+0x30]
   1400094f9:	lea    rdx,[rip+0x25be8]        # 0x14002f0e8
   140009500:	mov    QWORD PTR [rdi+0x48],rax
   140009504:	call   QWORD PTR [rip+0x1db66]        # 0x140027070
   14000950a:	mov    rcx,QWORD PTR [rdi+0x30]
   14000950e:	lea    rdx,[rip+0x25beb]        # 0x14002f100
   140009515:	mov    QWORD PTR [rdi+0x50],rax
   140009519:	call   QWORD PTR [rip+0x1db51]        # 0x140027070
   14000951f:	mov    rcx,QWORD PTR [rdi+0x30]
   140009523:	lea    rdx,[rip+0x25be6]        # 0x14002f110
   14000952a:	mov    QWORD PTR [rdi+0x58],rax
   14000952e:	call   QWORD PTR [rip+0x1db3c]        # 0x140027070
   140009534:	mov    rsi,QWORD PTR [rsp+0x38]
   140009539:	mov    QWORD PTR [rdi+0x60],rax
   14000953d:	mov    rax,QWORD PTR [rdi+0x48]
   140009541:	test   rax,rax
   140009544:	je     0x140009566
   140009546:	cmp    QWORD PTR [rdi+0x50],0x0
   14000954b:	je     0x140009566
   14000954d:	cmp    QWORD PTR [rdi+0x58],0x0
   140009552:	je     0x140009566
   140009554:	xor    ecx,ecx
   140009556:	call   rax
   140009558:	mov    DWORD PTR [rdi+0x28],eax
   14000955b:	test   eax,eax
   14000955d:	js     0x140009566
   14000955f:	mov    DWORD PTR [rdi+0x68],0x1
   140009566:	add    rsp,0x20
   14000956a:	pop    rdi
   14000956b:	ret    
   14000956c:	int3   
   14000956d:	int3   
   14000956e:	int3   
   14000956f:	int3   
   140009570:	mov    QWORD PTR [rsp+0x8],rcx
   140009575:	push   rbx
   140009576:	push   rsi
   140009577:	push   rdi
   140009578:	push   r12
   14000957a:	push   r14
   14000957c:	push   r15
   14000957e:	sub    rsp,0x118
   140009585:	mov    QWORD PTR [rsp+0x100],0xfffffffffffffffe
   140009591:	mov    r15,rcx
   140009594:	xor    r14d,r14d
   140009597:	lea    r12,[rip+0x30dd2]        # 0x14003a370
   14000959e:	xchg   ax,ax
   1400095a0:	mov    rax,QWORD PTR [r15]
   1400095a3:	mov    rcx,r15
   1400095a6:	call   QWORD PTR [rax+0x18]
   1400095a9:	test   eax,eax
   1400095ab:	jne    0x140009f31
   1400095b1:	mov    DWORD PTR [rsp+0x60],r14d
   1400095b6:	mov    QWORD PTR [rsp+0x68],r14
   1400095bb:	mov    QWORD PTR [rsp+0x70],r14
   1400095c0:	mov    QWORD PTR [rsp+0x78],r14
   1400095c5:	mov    QWORD PTR [rsp+0x80],r14
   1400095cd:	mov    QWORD PTR [rsp+0x88],r14
   1400095d5:	mov    QWORD PTR [rsp+0x30],r14
   1400095da:	mov    QWORD PTR [rsp+0x38],r14
   1400095df:	call   0x140005030
   1400095e4:	mov    QWORD PTR [rsp+0x30],rax
   1400095e9:	mov    eax,DWORD PTR [rip+0x30e11]        # 0x14003a400
   1400095ef:	test   al,0x1
   1400095f1:	jne    0x14000960e
   1400095f3:	or     eax,0x1
   1400095f6:	mov    DWORD PTR [rip+0x30e04],eax        # 0x14003a400
   1400095fc:	call   0x1400091f0
   140009601:	lea    rcx,[rip+0x1cbe8]        # 0x1400261f0
   140009608:	call   0x140013788
   14000960d:	nop
   14000960e:	lea    rcx,[rip+0x30d9b]        # 0x14003a3b0
   140009615:	call   QWORD PTR [rip+0x1da5d]        # 0x140027078
   14000961b:	nop    DWORD PTR [rax+rax*1+0x0]
   140009620:	mov    eax,DWORD PTR [rip+0x30dda]        # 0x14003a400
   140009626:	test   al,0x1
   140009628:	jne    0x140009645
   14000962a:	or     eax,0x1
   14000962d:	mov    DWORD PTR [rip+0x30dcd],eax        # 0x14003a400
   140009633:	call   0x1400091f0
   140009638:	lea    rcx,[rip+0x1cbb1]        # 0x1400261f0
   14000963f:	call   0x140013788
   140009644:	nop
   140009645:	cmp    QWORD PTR [rip+0x30d2b],0x0        # 0x14003a378
   14000964d:	jne    0x14000969b
   14000964f:	mov    rax,QWORD PTR [r15]
   140009652:	mov    rcx,r15
   140009655:	call   QWORD PTR [rax+0x18]
   140009658:	test   eax,eax
   14000965a:	jne    0x14000969b
   14000965c:	mov    eax,DWORD PTR [rip+0x30d9e]        # 0x14003a400
   140009662:	test   al,0x1
   140009664:	jne    0x140009681
   140009666:	or     eax,0x1
   140009669:	mov    DWORD PTR [rip+0x30d91],eax        # 0x14003a400
   14000966f:	call   0x1400091f0
   140009674:	lea    rcx,[rip+0x1cb75]        # 0x1400261f0
   14000967b:	call   0x140013788
   140009680:	nop
   140009681:	or     r8d,0xffffffff
   140009685:	lea    rdx,[rip+0x30d24]        # 0x14003a3b0
   14000968c:	lea    rcx,[rip+0x30d05]        # 0x14003a398
   140009693:	call   QWORD PTR [rip+0x1da3f]        # 0x1400270d8
   140009699:	jmp    0x140009620
   14000969b:	mov    rax,QWORD PTR [r15]
   14000969e:	mov    rcx,r15
   1400096a1:	call   QWORD PTR [rax+0x18]
   1400096a4:	test   eax,eax
   1400096a6:	mov    eax,DWORD PTR [rip+0x30d54]        # 0x14003a400
   1400096ac:	jne    0x140009e01
   1400096b2:	test   al,0x1
   1400096b4:	jne    0x1400096d1
   1400096b6:	or     eax,0x1
   1400096b9:	mov    DWORD PTR [rip+0x30d41],eax        # 0x14003a400
   1400096bf:	call   0x1400091f0
   1400096c4:	lea    rcx,[rip+0x1cb25]        # 0x1400261f0
   1400096cb:	call   0x140013788
   1400096d0:	nop
   1400096d1:	lea    rbx,[r15+0x90]
   1400096d8:	or     r8,0xffffffffffffffff
   1400096dc:	lea    rdx,[rip+0x30c5d]        # 0x14003a340
   1400096e3:	lea    rcx,[rsp+0x60]
   1400096e8:	call   0x140010560
   1400096ed:	lea    rcx,[rip+0x30c4c]        # 0x14003a340
   1400096f4:	call   0x140010830
   1400096f9:	cmp    rbx,r12
   1400096fc:	je     0x140009736
   1400096fe:	mov    rdx,QWORD PTR [rbx]
   140009701:	mov    rdx,QWORD PTR [rdx+0x8]
   140009705:	mov    rcx,rbx
   140009708:	call   0x140004f50
   14000970d:	mov    rax,QWORD PTR [rbx]
   140009710:	mov    QWORD PTR [rax+0x8],rax
   140009714:	mov    rax,QWORD PTR [rbx]
   140009717:	mov    QWORD PTR [rax],rax
   14000971a:	mov    rax,QWORD PTR [rbx]
   14000971d:	mov    QWORD PTR [rax+0x10],rax
   140009721:	mov    QWORD PTR [rbx+0x8],r14
   140009725:	xor    eax,eax
   140009727:	movzx  r8d,al
   14000972b:	mov    rdx,r12
   14000972e:	mov    rcx,rbx
   140009731:	call   0x140005070
   140009736:	mov    rdx,QWORD PTR [rip+0x30c33]        # 0x14003a370
   14000973d:	mov    rdx,QWORD PTR [rdx+0x8]
   140009741:	mov    rcx,r12
   140009744:	call   0x140004f50
   140009749:	mov    rax,QWORD PTR [rip+0x30c20]        # 0x14003a370
   140009750:	mov    QWORD PTR [rax+0x8],rax
   140009754:	mov    rax,QWORD PTR [rip+0x30c15]        # 0x14003a370
   14000975b:	mov    QWORD PTR [rax],rax
   14000975e:	mov    rax,QWORD PTR [rip+0x30c0b]        # 0x14003a370
   140009765:	mov    QWORD PTR [rax+0x10],rax
   140009769:	mov    QWORD PTR [rip+0x30c08],r14        # 0x14003a378
   140009770:	lea    rcx,[rip+0x30c19]        # 0x14003a390
   140009777:	call   QWORD PTR [rip+0x1d9d3]        # 0x140027150
   14000977d:	mov    eax,DWORD PTR [rip+0x30c7d]        # 0x14003a400
   140009783:	test   al,0x1
   140009785:	jne    0x1400097a2
   140009787:	or     eax,0x1
   14000978a:	mov    DWORD PTR [rip+0x30c70],eax        # 0x14003a400
   140009790:	call   0x1400091f0
   140009795:	lea    rcx,[rip+0x1ca54]        # 0x1400261f0
   14000979c:	call   0x140013788
   1400097a1:	nop
   1400097a2:	lea    rcx,[rip+0x30c07]        # 0x14003a3b0
   1400097a9:	call   QWORD PTR [rip+0x1d889]        # 0x140027038
   1400097af:	nop
   1400097b0:	mov    rcx,r15
   1400097b3:	call   0x140009460
   1400097b8:	mov    rcx,r15
   1400097bb:	call   0x140009fe0
   1400097c0:	lea    rax,[rsp+0x90]
   1400097c8:	mov    QWORD PTR [rsp+0x158],rax
   1400097d0:	mov    DWORD PTR [rsp+0x90],r14d
   1400097d8:	mov    QWORD PTR [rsp+0x98],r14
   1400097e0:	mov    QWORD PTR [rsp+0xa0],r14
   1400097e8:	mov    QWORD PTR [rsp+0xa8],r14
   1400097f0:	mov    QWORD PTR [rsp+0xb0],r14
   1400097f8:	mov    QWORD PTR [rsp+0xb8],r14
   140009800:	or     r8,0xffffffffffffffff
   140009804:	lea    rdx,[rsp+0x60]
   140009809:	lea    rcx,[rsp+0x90]
   140009811:	call   0x140010560
   140009816:	nop
   140009817:	lea    r8,[rsp+0x90]
   14000981f:	lea    rdx,[rsp+0x40]
   140009824:	mov    rcx,r15
   140009827:	call   0x14000a180
   14000982c:	mov    rbx,rax
   14000982f:	lea    rax,[rsp+0x30]
   140009834:	cmp    rax,rbx
   140009837:	je     0x14000988d
   140009839:	mov    rdx,QWORD PTR [rsp+0x30]
   14000983e:	mov    rdx,QWORD PTR [rdx+0x8]
   140009842:	lea    rcx,[rsp+0x30]
   140009847:	call   0x140004f50
   14000984c:	mov    rax,QWORD PTR [rsp+0x30]
   140009851:	mov    QWORD PTR [rax+0x8],rax
   140009855:	mov    rax,QWORD PTR [rsp+0x30]
   14000985a:	mov    QWORD PTR [rax],rax
   14000985d:	mov    rax,QWORD PTR [rsp+0x30]
   140009862:	mov    QWORD PTR [rax+0x10],rax
   140009866:	mov    QWORD PTR [rsp+0x38],r14
   14000986b:	mov    rcx,QWORD PTR [rsp+0x30]
   140009870:	mov    rax,QWORD PTR [rbx]
   140009873:	mov    QWORD PTR [rsp+0x30],rax
   140009878:	mov    QWORD PTR [rbx],rcx
   14000987b:	mov    rcx,QWORD PTR [rsp+0x38]
   140009880:	mov    rax,QWORD PTR [rbx+0x8]
   140009884:	mov    QWORD PTR [rsp+0x38],rax
   140009889:	mov    QWORD PTR [rbx+0x8],rcx
   14000988d:	mov    rdi,QWORD PTR [rsp+0x40]
   140009892:	mov    rbx,QWORD PTR [rdi]
   140009895:	cmp    rbx,rbx
   140009898:	jne    0x1400098c9
   14000989a:	mov    rdx,QWORD PTR [rdi+0x8]
   14000989e:	lea    rcx,[rsp+0x40]
   1400098a3:	call   0x140004f50
   1400098a8:	mov    rax,QWORD PTR [rsp+0x40]
   1400098ad:	mov    QWORD PTR [rax+0x8],rax
   1400098b1:	mov    rax,QWORD PTR [rsp+0x40]
   1400098b6:	mov    QWORD PTR [rax],rax
   1400098b9:	mov    rax,QWORD PTR [rsp+0x40]
   1400098be:	mov    QWORD PTR [rax+0x10],rax
   1400098c2:	mov    QWORD PTR [rsp+0x48],r14
   1400098c7:	jmp    0x140009935
   1400098c9:	cmp    rbx,rdi
   1400098cc:	je     0x14000993a
   1400098ce:	xchg   ax,ax
   1400098d0:	mov    r8,rbx
   1400098d3:	cmp    BYTE PTR [rbx+0x19],0x0
   1400098d7:	jne    0x14000991e
   1400098d9:	mov    rax,QWORD PTR [rbx+0x10]
   1400098dd:	cmp    BYTE PTR [rax+0x19],0x0
   1400098e1:	jne    0x1400098fe
   1400098e3:	mov    rbx,rax
   1400098e6:	mov    rax,QWORD PTR [rax]
   1400098e9:	cmp    BYTE PTR [rax+0x19],0x0
   1400098ed:	jne    0x14000991e
   1400098ef:	nop
   1400098f0:	mov    rbx,rax
   1400098f3:	mov    rax,QWORD PTR [rax]
   1400098f6:	cmp    BYTE PTR [rax+0x19],0x0
   1400098fa:	je     0x1400098f0
   1400098fc:	jmp    0x14000991e
   1400098fe:	mov    rax,QWORD PTR [rbx+0x8]
   140009902:	cmp    BYTE PTR [rax+0x19],0x0
   140009906:	jne    0x14000991b
   140009908:	cmp    rbx,QWORD PTR [rax+0x10]
   14000990c:	jne    0x14000991b
   14000990e:	mov    rbx,rax
   140009911:	mov    rax,QWORD PTR [rax+0x8]
   140009915:	cmp    BYTE PTR [rax+0x19],0x0
   140009919:	je     0x140009908
   14000991b:	mov    rbx,rax
   14000991e:	lea    rdx,[rsp+0x168]
   140009926:	lea    rcx,[rsp+0x40]
   14000992b:	call   0x140004a90
   140009930:	cmp    rbx,rdi
   140009933:	jne    0x1400098d0
   140009935:	mov    rdi,QWORD PTR [rsp+0x40]
   14000993a:	mov    rcx,rdi
   14000993d:	call   0x1400137cc
   140009942:	nop
   140009943:	jmp    0x140009957
   140009945:	xor    r14d,r14d
   140009948:	lea    r12,[rip+0x30a21]        # 0x14003a370
   14000994f:	mov    r15,QWORD PTR [rsp+0x150]
   140009957:	mov    ebx,DWORD PTR [r15+0x28]
   14000995b:	mov    DWORD PTR [rsp+0xc0],r14d
   140009963:	mov    QWORD PTR [rsp+0xc8],r14
   14000996b:	mov    QWORD PTR [rsp+0xd0],r14
   140009973:	mov    QWORD PTR [rsp+0xd8],r14
   14000997b:	mov    QWORD PTR [rsp+0xe0],r14
   140009983:	mov    QWORD PTR [rsp+0xe8],r14
   14000998b:	xor    r9d,r9d
   14000998e:	or     r8,0xffffffffffffffff
   140009992:	lea    rdx,[rip+0x256ff]        # 0x14002f098
   140009999:	lea    rcx,[rsp+0x90]
   1400099a1:	call   0x14000fb80
   1400099a6:	mov    r8d,ebx
   1400099a9:	mov    rdx,rax
   1400099ac:	lea    rcx,[rsp+0xc0]
   1400099b4:	call   0x140011fa0
   1400099b9:	xor    r9d,r9d
   1400099bc:	or     r8,0xffffffffffffffff
   1400099c0:	lea    rdx,[rip+0x2575d]        # 0x14002f124
   1400099c7:	lea    rcx,[rsp+0x90]
   1400099cf:	call   0x14000fb80
   1400099d4:	mov    rsi,rax
   1400099d7:	mov    rax,QWORD PTR [rsp+0x30]
   1400099dc:	mov    rdi,QWORD PTR [rax+0x8]
   1400099e0:	mov    rbx,rax
   1400099e3:	cmp    BYTE PTR [rdi+0x19],0x0
   1400099e7:	jne    0x140009a1e
   1400099e9:	nop    DWORD PTR [rax+0x0]
   1400099f0:	lea    rcx,[rdi+0x20]
   1400099f4:	xor    r9d,r9d
   1400099f7:	xor    r8d,r8d
   1400099fa:	mov    rdx,rsi
   1400099fd:	call   0x1400108a0
   140009a02:	test   ax,ax
   140009a05:	jns    0x140009a0d
   140009a07:	mov    rdi,QWORD PTR [rdi+0x10]
   140009a0b:	jmp    0x140009a13
   140009a0d:	mov    rbx,rdi
   140009a10:	mov    rdi,QWORD PTR [rdi]
   140009a13:	cmp    BYTE PTR [rdi+0x19],0x0
   140009a17:	je     0x1400099f0
   140009a19:	mov    rax,QWORD PTR [rsp+0x30]
   140009a1e:	cmp    rbx,rax
   140009a21:	je     0x140009a3a
   140009a23:	lea    rdx,[rbx+0x20]
   140009a27:	xor    r9d,r9d
   140009a2a:	xor    r8d,r8d
   140009a2d:	mov    rcx,rsi
   140009a30:	call   0x1400108a0
   140009a35:	test   ax,ax
   140009a38:	jns    0x140009a7a
   140009a3a:	mov    QWORD PTR [rsp+0x158],rsi
   140009a42:	lea    r8,[rsp+0x158]
   140009a4a:	lea    rcx,[rsp+0x30]
   140009a4f:	call   0x140005120
   140009a54:	lea    r9,[rax+0x20]
   140009a58:	mov    QWORD PTR [rsp+0x20],rax
   140009a5d:	mov    r8,rbx
   140009a60:	lea    rdx,[rsp+0x160]
   140009a68:	lea    rcx,[rsp+0x30]
   140009a6d:	call   0x1400051d0
   140009a72:	mov    rbx,QWORD PTR [rsp+0x160]
   140009a7a:	lea    rcx,[rbx+0x50]
   140009a7e:	or     r8,0xffffffffffffffff
   140009a82:	lea    rdx,[rsp+0xc0]
   140009a8a:	call   0x140010560
   140009a8f:	nop
   140009a90:	mov    rax,QWORD PTR [rsp+0xb0]
   140009a98:	mov    rcx,r14
   140009a9b:	mov    QWORD PTR [rsp+0xb0],rcx
   140009aa3:	test   rax,rax
   140009aa6:	je     0x140009ab8
   140009aa8:	mov    rcx,rax
   140009aab:	call   0x140013924
   140009ab0:	mov    rcx,QWORD PTR [rsp+0xb0]
   140009ab8:	call   0x1400137cc
   140009abd:	mov    rax,QWORD PTR [rsp+0xa0]
   140009ac5:	mov    rcx,r14
   140009ac8:	mov    QWORD PTR [rsp+0xa0],rcx
   140009ad0:	test   rax,rax
   140009ad3:	je     0x140009ae5
   140009ad5:	mov    rcx,rax
   140009ad8:	call   0x140013924
   140009add:	mov    rcx,QWORD PTR [rsp+0xa0]
   140009ae5:	call   0x1400137cc
   140009aea:	mov    eax,DWORD PTR [rip+0x30910]        # 0x14003a400
   140009af0:	test   al,0x1
   140009af2:	jne    0x140009b0f
   140009af4:	or     eax,0x1
   140009af7:	mov    DWORD PTR [rip+0x30903],eax        # 0x14003a400
   140009afd:	call   0x1400091f0
   140009b02:	lea    rcx,[rip+0x1c6e7]        # 0x1400261f0
   140009b09:	call   0x140013788
   140009b0e:	nop
   140009b0f:	lea    rcx,[rip+0x308c2]        # 0x14003a3d8
   140009b16:	call   QWORD PTR [rip+0x1d55c]        # 0x140027078
   140009b1c:	nop    DWORD PTR [rax+0x0]
   140009b20:	mov    eax,DWORD PTR [rip+0x308da]        # 0x14003a400
   140009b26:	test   al,0x1
   140009b28:	jne    0x140009b4b
   140009b2a:	or     eax,0x1
   140009b2d:	mov    DWORD PTR [rip+0x308cd],eax        # 0x14003a400
   140009b33:	call   0x1400091f0
   140009b38:	lea    rcx,[rip+0x1c6b1]        # 0x1400261f0
   140009b3f:	call   0x140013788
   140009b44:	nop
   140009b45:	mov    eax,DWORD PTR [rip+0x308b5]        # 0x14003a400
   140009b4b:	cmp    QWORD PTR [rip+0x30835],0x0        # 0x14003a388
   140009b53:	je     0x140009b8e
   140009b55:	test   al,0x1
   140009b57:	jne    0x140009b74
   140009b59:	or     eax,0x1
   140009b5c:	mov    DWORD PTR [rip+0x3089e],eax        # 0x14003a400
   140009b62:	call   0x1400091f0
   140009b67:	lea    rcx,[rip+0x1c682]        # 0x1400261f0
   140009b6e:	call   0x140013788
   140009b73:	nop
   140009b74:	or     r8d,0xffffffff
   140009b78:	lea    rdx,[rip+0x30859]        # 0x14003a3d8
   140009b7f:	lea    rcx,[rip+0x3081a]        # 0x14003a3a0
   140009b86:	call   QWORD PTR [rip+0x1d54c]        # 0x1400270d8
   140009b8c:	jmp    0x140009b20
   140009b8e:	lea    rax,[rsp+0x50]
   140009b93:	mov    QWORD PTR [rsp+0x158],rax
   140009b9b:	lea    rdx,[rsp+0x30]
   140009ba0:	lea    rcx,[rsp+0x50]
   140009ba5:	call   0x140006f10
   140009baa:	lea    rax,[rsp+0x50]
   140009baf:	mov    QWORD PTR [rsp+0xf0],rax
   140009bb7:	mov    eax,DWORD PTR [rip+0x30843]        # 0x14003a400
   140009bbd:	test   al,0x1
   140009bbf:	jne    0x140009bdc
   140009bc1:	or     eax,0x1
   140009bc4:	mov    DWORD PTR [rip+0x30836],eax        # 0x14003a400
   140009bca:	call   0x1400091f0
   140009bcf:	lea    rcx,[rip+0x1c61a]        # 0x1400261f0
   140009bd6:	call   0x140013788
   140009bdb:	nop
   140009bdc:	mov    rdx,QWORD PTR [rip+0x3079d]        # 0x14003a380
   140009be3:	mov    rdx,QWORD PTR [rdx+0x8]
   140009be7:	lea    rcx,[rip+0x30792]        # 0x14003a380
   140009bee:	call   0x140004f50
   140009bf3:	mov    rax,QWORD PTR [rip+0x30786]        # 0x14003a380
   140009bfa:	mov    QWORD PTR [rax+0x8],rax
   140009bfe:	mov    rax,QWORD PTR [rip+0x3077b]        # 0x14003a380
   140009c05:	mov    QWORD PTR [rax],rax
   140009c08:	mov    rax,QWORD PTR [rip+0x30771]        # 0x14003a380
   140009c0f:	mov    QWORD PTR [rax+0x10],rax
   140009c13:	mov    QWORD PTR [rip+0x3076e],r14        # 0x14003a388
   140009c1a:	xor    eax,eax
   140009c1c:	movzx  r8d,al
   140009c20:	lea    rdx,[rsp+0x50]
   140009c25:	lea    rcx,[rip+0x30754]        # 0x14003a380
   140009c2c:	call   0x140005070
   140009c31:	lea    rcx,[rip+0x30770]        # 0x14003a3a8
   140009c38:	call   QWORD PTR [rip+0x1d512]        # 0x140027150
   140009c3e:	nop
   140009c3f:	mov    r8,QWORD PTR [rsp+0x50]
   140009c44:	mov    r9,r8
   140009c47:	mov    r8,QWORD PTR [r8]
   140009c4a:	lea    rdx,[rsp+0xf8]
   140009c52:	lea    rcx,[rsp+0x50]
   140009c57:	call   0x140004990
   140009c5c:	mov    rcx,QWORD PTR [rsp+0x50]
   140009c61:	call   0x1400137cc
   140009c66:	mov    eax,DWORD PTR [rip+0x30794]        # 0x14003a400
   140009c6c:	test   al,0x1
   140009c6e:	jne    0x140009c8b
   140009c70:	or     eax,0x1
   140009c73:	mov    DWORD PTR [rip+0x30787],eax        # 0x14003a400
   140009c79:	call   0x1400091f0
   140009c7e:	lea    rcx,[rip+0x1c56b]        # 0x1400261f0
   140009c85:	call   0x140013788
   140009c8a:	nop
   140009c8b:	lea    rcx,[rip+0x30746]        # 0x14003a3d8
   140009c92:	call   QWORD PTR [rip+0x1d3a0]        # 0x140027038
   140009c98:	nop
   140009c99:	mov    rax,QWORD PTR [rsp+0xe0]
   140009ca1:	mov    rcx,r14
   140009ca4:	mov    QWORD PTR [rsp+0xe0],rcx
   140009cac:	test   rax,rax
   140009caf:	je     0x140009cc1
   140009cb1:	mov    rcx,rax
   140009cb4:	call   0x140013924
   140009cb9:	mov    rcx,QWORD PTR [rsp+0xe0]
   140009cc1:	call   0x1400137cc
   140009cc6:	mov    rax,QWORD PTR [rsp+0xd0]
   140009cce:	mov    rcx,r14
   140009cd1:	mov    QWORD PTR [rsp+0xd0],rcx
   140009cd9:	test   rax,rax
   140009cdc:	je     0x140009cee
   140009cde:	mov    rcx,rax
   140009ce1:	call   0x140013924
   140009ce6:	mov    rcx,QWORD PTR [rsp+0xd0]
   140009cee:	call   0x1400137cc
   140009cf3:	nop
   140009cf4:	mov    rdi,QWORD PTR [rsp+0x30]
   140009cf9:	mov    rbx,QWORD PTR [rdi]
   140009cfc:	cmp    rbx,rbx
   140009cff:	jne    0x140009d30
   140009d01:	mov    rdx,QWORD PTR [rdi+0x8]
   140009d05:	lea    rcx,[rsp+0x30]
   140009d0a:	call   0x140004f50
   140009d0f:	mov    rax,QWORD PTR [rsp+0x30]
   140009d14:	mov    QWORD PTR [rax+0x8],rax
   140009d18:	mov    rax,QWORD PTR [rsp+0x30]
   140009d1d:	mov    QWORD PTR [rax],rax
   140009d20:	mov    rax,QWORD PTR [rsp+0x30]
   140009d25:	mov    QWORD PTR [rax+0x10],rax
   140009d29:	mov    QWORD PTR [rsp+0x38],r14
   140009d2e:	jmp    0x140009d9d
   140009d30:	cmp    rbx,rdi
   140009d33:	je     0x140009da2
   140009d35:	mov    r8,rbx
   140009d38:	cmp    BYTE PTR [rbx+0x19],0x0
   140009d3c:	jne    0x140009d86
   140009d3e:	mov    rax,QWORD PTR [rbx+0x10]
   140009d42:	cmp    BYTE PTR [rax+0x19],0x0
   140009d46:	jne    0x140009d62
   140009d48:	mov    rbx,rax
   140009d4b:	mov    rax,QWORD PTR [rax]
   140009d4e:	cmp    BYTE PTR [rax+0x19],0x0
   140009d52:	jne    0x140009d86
   140009d54:	mov    rbx,rax
   140009d57:	mov    rax,QWORD PTR [rax]
   140009d5a:	cmp    BYTE PTR [rax+0x19],0x0
   140009d5e:	je     0x140009d54
   140009d60:	jmp    0x140009d86
   140009d62:	mov    rax,QWORD PTR [rbx+0x8]
   140009d66:	cmp    BYTE PTR [rax+0x19],0x0
   140009d6a:	jne    0x140009d83
   140009d6c:	nop    DWORD PTR [rax+0x0]
   140009d70:	cmp    rbx,QWORD PTR [rax+0x10]
   140009d74:	jne    0x140009d83
   140009d76:	mov    rbx,rax
   140009d79:	mov    rax,QWORD PTR [rax+0x8]
   140009d7d:	cmp    BYTE PTR [rax+0x19],0x0
   140009d81:	je     0x140009d70
   140009d83:	mov    rbx,rax
   140009d86:	lea    rdx,[rsp+0x108]
   140009d8e:	lea    rcx,[rsp+0x30]
   140009d93:	call   0x140004a90
   140009d98:	cmp    rbx,rdi
   140009d9b:	jne    0x140009d35
   140009d9d:	mov    rdi,QWORD PTR [rsp+0x30]
   140009da2:	mov    rcx,rdi
   140009da5:	call   0x1400137cc
   140009daa:	nop
   140009dab:	mov    rax,QWORD PTR [rsp+0x80]
   140009db3:	mov    rcx,r14
   140009db6:	mov    QWORD PTR [rsp+0x80],rcx
   140009dbe:	test   rax,rax
   140009dc1:	je     0x140009dd3
   140009dc3:	mov    rcx,rax
   140009dc6:	call   0x140013924
   140009dcb:	mov    rcx,QWORD PTR [rsp+0x80]
   140009dd3:	call   0x1400137cc
   140009dd8:	mov    rax,QWORD PTR [rsp+0x70]
   140009ddd:	mov    rcx,r14
   140009de0:	mov    QWORD PTR [rsp+0x70],rcx
   140009de5:	test   rax,rax
   140009de8:	je     0x140009df7
   140009dea:	mov    rcx,rax
   140009ded:	call   0x140013924
   140009df2:	mov    rcx,QWORD PTR [rsp+0x70]
   140009df7:	call   0x1400137cc
   140009dfc:	jmp    0x1400095a0
   140009e01:	test   al,0x1
   140009e03:	jne    0x140009e20
   140009e05:	or     eax,0x1
   140009e08:	mov    DWORD PTR [rip+0x305f2],eax        # 0x14003a400
   140009e0e:	call   0x1400091f0
   140009e13:	lea    rcx,[rip+0x1c3d6]        # 0x1400261f0
   140009e1a:	call   0x140013788
   140009e1f:	nop
   140009e20:	lea    rcx,[rip+0x30589]        # 0x14003a3b0
   140009e27:	call   QWORD PTR [rip+0x1d20b]        # 0x140027038
   140009e2d:	nop
   140009e2e:	mov    rdi,QWORD PTR [rsp+0x30]
   140009e33:	mov    rbx,QWORD PTR [rdi]
   140009e36:	cmp    rbx,rbx
   140009e39:	jne    0x140009e6a
   140009e3b:	mov    rdx,QWORD PTR [rdi+0x8]
   140009e3f:	lea    rcx,[rsp+0x30]
   140009e44:	call   0x140004f50
   140009e49:	mov    rax,QWORD PTR [rsp+0x30]
   140009e4e:	mov    QWORD PTR [rax+0x8],rax
   140009e52:	mov    rax,QWORD PTR [rsp+0x30]
   140009e57:	mov    QWORD PTR [rax],rax
   140009e5a:	mov    rax,QWORD PTR [rsp+0x30]
   140009e5f:	mov    QWORD PTR [rax+0x10],rax
   140009e63:	mov    QWORD PTR [rsp+0x38],r14
   140009e68:	jmp    0x140009ed5
   140009e6a:	cmp    rbx,rdi
   140009e6d:	je     0x140009eda
   140009e6f:	nop
   140009e70:	mov    r8,rbx
   140009e73:	cmp    BYTE PTR [rbx+0x19],0x0
   140009e77:	jne    0x140009ebe
   140009e79:	mov    rax,QWORD PTR [rbx+0x10]
   140009e7d:	cmp    BYTE PTR [rax+0x19],0x0
   140009e81:	jne    0x140009e9e
   140009e83:	mov    rbx,rax
   140009e86:	mov    rax,QWORD PTR [rax]
   140009e89:	cmp    BYTE PTR [rax+0x19],0x0
   140009e8d:	jne    0x140009ebe
   140009e8f:	nop
   140009e90:	mov    rbx,rax
   140009e93:	mov    rax,QWORD PTR [rax]
   140009e96:	cmp    BYTE PTR [rax+0x19],0x0
   140009e9a:	je     0x140009e90
   140009e9c:	jmp    0x140009ebe
   140009e9e:	mov    rax,QWORD PTR [rbx+0x8]
   140009ea2:	cmp    BYTE PTR [rax+0x19],0x0
   140009ea6:	jne    0x140009ebb
   140009ea8:	cmp    rbx,QWORD PTR [rax+0x10]
   140009eac:	jne    0x140009ebb
   140009eae:	mov    rbx,rax
   140009eb1:	mov    rax,QWORD PTR [rax+0x8]
   140009eb5:	cmp    BYTE PTR [rax+0x19],0x0
   140009eb9:	je     0x140009ea8
   140009ebb:	mov    rbx,rax
   140009ebe:	lea    rdx,[rsp+0x150]
   140009ec6:	lea    rcx,[rsp+0x30]
   140009ecb:	call   0x140004a90
   140009ed0:	cmp    rbx,rdi
   140009ed3:	jne    0x140009e70
   140009ed5:	mov    rdi,QWORD PTR [rsp+0x30]
   140009eda:	mov    rcx,rdi
   140009edd:	call   0x1400137cc
   140009ee2:	nop
   140009ee3:	mov    rax,QWORD PTR [rsp+0x80]
   140009eeb:	mov    rcx,r14
   140009eee:	mov    QWORD PTR [rsp+0x80],rcx
   140009ef6:	test   rax,rax
   140009ef9:	je     0x140009f0b
   140009efb:	mov    rcx,rax
   140009efe:	call   0x140013924
   140009f03:	mov    rcx,QWORD PTR [rsp+0x80]
   140009f0b:	call   0x1400137cc
   140009f10:	mov    rcx,QWORD PTR [rsp+0x70]
   140009f15:	mov    QWORD PTR [rsp+0x70],r14
   140009f1a:	test   rcx,rcx
   140009f1d:	je     0x140009f29
   140009f1f:	call   0x140013924
   140009f24:	mov    r14,QWORD PTR [rsp+0x70]
   140009f29:	mov    rcx,r14
   140009f2c:	call   0x1400137cc
   140009f31:	mov    rcx,r15
   140009f34:	add    rsp,0x118
   140009f3b:	pop    r15
   140009f3d:	pop    r14
   140009f3f:	pop    r12
   140009f41:	pop    rdi
   140009f42:	pop    rsi
   140009f43:	pop    rbx
   140009f44:	jmp    0x140009f50
   140009f49:	int3   
   140009f4a:	int3   
   140009f4b:	int3   
   140009f4c:	int3   
   140009f4d:	int3   
   140009f4e:	int3   
   140009f4f:	int3   
   140009f50:	mov    QWORD PTR [rsp+0x8],rbx
   140009f55:	push   rdi
   140009f56:	sub    rsp,0x20
   140009f5a:	xor    edi,edi
   140009f5c:	mov    rbx,rcx
   140009f5f:	cmp    DWORD PTR [rcx+0x40],edi
   140009f62:	je     0x140009f79
   140009f64:	mov    rcx,QWORD PTR [rcx+0x38]
   140009f68:	test   rcx,rcx
   140009f6b:	je     0x140009f79
   140009f6d:	mov    rax,QWORD PTR [rcx]
   140009f70:	lea    edx,[rdi+0x1]
   140009f73:	call   QWORD PTR [rax]
   140009f75:	mov    QWORD PTR [rbx+0x38],rdi
   140009f79:	mov    rcx,QWORD PTR [rbx+0x78]
   140009f7d:	test   rcx,rcx
   140009f80:	je     0x140009fa1
   140009f82:	mov    rax,QWORD PTR [rcx]
   140009f85:	xor    r9d,r9d
   140009f88:	xor    r8d,r8d
   140009f8b:	xor    edx,edx
   140009f8d:	call   QWORD PTR [rax+0x88]
   140009f93:	mov    rcx,QWORD PTR [rbx+0x78]
   140009f97:	mov    rax,QWORD PTR [rcx]
   140009f9a:	call   QWORD PTR [rax+0x10]
   140009f9d:	mov    QWORD PTR [rbx+0x78],rdi
   140009fa1:	cmp    QWORD PTR [rbx+0x48],rdi
   140009fa5:	je     0x140009fc0
   140009fa7:	mov    rax,QWORD PTR [rbx+0x50]
   140009fab:	test   rax,rax
   140009fae:	je     0x140009fc0
   140009fb0:	cmp    QWORD PTR [rbx+0x58],rdi
   140009fb4:	je     0x140009fc0
   140009fb6:	cmp    DWORD PTR [rbx+0x68],edi
   140009fb9:	je     0x140009fc0
   140009fbb:	mov    DWORD PTR [rbx+0x68],edi
   140009fbe:	call   rax
   140009fc0:	mov    rcx,QWORD PTR [rbx+0x30]
   140009fc4:	test   rcx,rcx
   140009fc7:	je     0x140009fd3
   140009fc9:	call   QWORD PTR [rip+0x1d159]        # 0x140027128
   140009fcf:	mov    QWORD PTR [rbx+0x30],rdi
   140009fd3:	mov    rbx,QWORD PTR [rsp+0x30]
   140009fd8:	add    rsp,0x20
   140009fdc:	pop    rdi
   140009fdd:	ret    
   140009fde:	int3   
   140009fdf:	int3   
   140009fe0:	rex push rbp
   140009fe2:	push   rsi
   140009fe3:	push   rdi
   140009fe4:	push   r14
   140009fe6:	push   r15
   140009fe8:	sub    rsp,0xa0
   140009fef:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140009ff8:	mov    QWORD PTR [rsp+0xe0],rbx
   14000a000:	mov    rsi,rcx
   14000a003:	lea    r14,[rcx+0x78]
   14000a007:	mov    rcx,QWORD PTR [r14]
   14000a00a:	xor    ebp,ebp
   14000a00c:	test   rcx,rcx
   14000a00f:	je     0x14000a02e
   14000a011:	mov    rax,QWORD PTR [rcx]
   14000a014:	xor    r9d,r9d
   14000a017:	xor    r8d,r8d
   14000a01a:	xor    edx,edx
   14000a01c:	call   QWORD PTR [rax+0x88]
   14000a022:	mov    rcx,QWORD PTR [r14]
   14000a025:	mov    rax,QWORD PTR [rcx]
   14000a028:	call   QWORD PTR [rax+0x10]
   14000a02b:	mov    QWORD PTR [r14],rbp
   14000a02e:	mov    DWORD PTR [rsp+0xd0],ebp
   14000a035:	xor    r9d,r9d
   14000a038:	or     r8,0xffffffffffffffff
   14000a03c:	lea    rdx,[rip+0x250e9]        # 0x14002f12c
   14000a043:	lea    rcx,[rsp+0x38]
   14000a048:	call   0x14000fb80
   14000a04d:	mov    r15,rax
   14000a050:	mov    rdi,QWORD PTR [rsi+0x90]
   14000a057:	mov    rbx,QWORD PTR [rdi+0x8]
   14000a05b:	cmp    BYTE PTR [rbx+0x19],0x0
   14000a05f:	jne    0x14000a08a
   14000a061:	lea    rcx,[rbx+0x20]
   14000a065:	xor    r9d,r9d
   14000a068:	xor    r8d,r8d
   14000a06b:	mov    rdx,r15
   14000a06e:	call   0x1400108a0
   14000a073:	test   ax,ax
   14000a076:	jns    0x14000a07e
   14000a078:	mov    rbx,QWORD PTR [rbx+0x10]
   14000a07c:	jmp    0x14000a084
   14000a07e:	mov    rdi,rbx
   14000a081:	mov    rbx,QWORD PTR [rbx]
   14000a084:	cmp    BYTE PTR [rbx+0x19],0x0
   14000a088:	je     0x14000a061
   14000a08a:	cmp    rdi,QWORD PTR [rsi+0x90]
   14000a091:	je     0x14000a0b4
   14000a093:	lea    rdx,[rdi+0x20]
   14000a097:	xor    r9d,r9d
   14000a09a:	xor    r8d,r8d
   14000a09d:	mov    rcx,r15
   14000a0a0:	call   0x1400108a0
   14000a0a5:	test   ax,ax
   14000a0a8:	js     0x14000a0b4
   14000a0aa:	mov    QWORD PTR [rsp+0xd8],rdi
   14000a0b2:	jmp    0x14000a0c3
   14000a0b4:	mov    rax,QWORD PTR [rsi+0x90]
   14000a0bb:	mov    QWORD PTR [rsp+0xd8],rax
   14000a0c3:	lea    rbx,[rsp+0xd8]
   14000a0cb:	mov    rbx,QWORD PTR [rbx]
   14000a0ce:	mov    rax,QWORD PTR [rsp+0x58]
   14000a0d3:	mov    rcx,rbp
   14000a0d6:	mov    QWORD PTR [rsp+0x58],rcx
   14000a0db:	test   rax,rax
   14000a0de:	je     0x14000a0ed
   14000a0e0:	mov    rcx,rax
   14000a0e3:	call   0x140013924
   14000a0e8:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a0ed:	call   0x1400137cc
   14000a0f2:	mov    rcx,QWORD PTR [rsp+0x48]
   14000a0f7:	mov    QWORD PTR [rsp+0x48],rbp
   14000a0fc:	test   rcx,rcx
   14000a0ff:	je     0x14000a10b
   14000a101:	call   0x140013924
   14000a106:	mov    rbp,QWORD PTR [rsp+0x48]
   14000a10b:	mov    rcx,rbp
   14000a10e:	call   0x1400137cc
   14000a113:	cmp    rbx,QWORD PTR [rsi+0x90]
   14000a11a:	je     0x14000a148
   14000a11c:	xor    r9d,r9d
   14000a11f:	or     r8,0xffffffffffffffff
   14000a123:	lea    rdx,[rip+0x2500a]        # 0x14002f134
   14000a12a:	lea    rcx,[rsp+0x68]
   14000a12f:	call   0x14000fb80
   14000a134:	lea    rcx,[rbx+0x50]
   14000a138:	lea    r8,[rsp+0xd0]
   14000a140:	mov    rdx,rax
   14000a143:	call   0x140012020
   14000a148:	mov    ecx,DWORD PTR [rsp+0xd0]
   14000a14f:	mov    QWORD PTR [rsp+0x20],r14
   14000a154:	mov    r9d,0x63
   14000a15a:	xor    r8d,r8d
   14000a15d:	xor    edx,edx
   14000a15f:	call   QWORD PTR [rsi+0x58]
   14000a162:	mov    DWORD PTR [rsi+0x28],eax
   14000a165:	mov    rax,QWORD PTR [r14]
   14000a168:	mov    rbx,QWORD PTR [rsp+0xe0]
   14000a170:	add    rsp,0xa0
   14000a177:	pop    r15
   14000a179:	pop    r14
   14000a17b:	pop    rdi
   14000a17c:	pop    rsi
   14000a17d:	pop    rbp
   14000a17e:	ret    
   14000a17f:	int3   
   14000a180:	mov    QWORD PTR [rsp+0x18],r8
   14000a185:	push   rbp
   14000a186:	push   rsi
   14000a187:	push   rdi
   14000a188:	push   r14
   14000a18a:	push   r15
   14000a18c:	lea    rbp,[rsp-0x37]
   14000a191:	sub    rsp,0xa0
   14000a198:	mov    QWORD PTR [rbp+0x2f],0xfffffffffffffffe
   14000a1a0:	mov    QWORD PTR [rsp+0xd0],rbx
   14000a1a8:	mov    rsi,r8
   14000a1ab:	mov    r14,rdx
   14000a1ae:	mov    rbx,rcx
   14000a1b1:	xor    r15d,r15d
   14000a1b4:	mov    DWORD PTR [rbp-0x9],r15d
   14000a1b8:	xor    r9d,r9d
   14000a1bb:	or     r8,0xffffffffffffffff
   14000a1bf:	lea    rdx,[rip+0x24f72]        # 0x14002f138
   14000a1c6:	lea    rcx,[rbp-0x39]
   14000a1ca:	call   0x14000fb80
   14000a1cf:	nop
   14000a1d0:	xor    r9d,r9d
   14000a1d3:	xor    r8d,r8d
   14000a1d6:	mov    rdx,rax
   14000a1d9:	mov    rcx,rsi
   14000a1dc:	call   0x1400108a0
   14000a1e1:	test   ax,ax
   14000a1e4:	sete   dil
   14000a1e8:	mov    rax,QWORD PTR [rbp-0x19]
   14000a1ec:	mov    ecx,r15d
   14000a1ef:	mov    QWORD PTR [rbp-0x19],rcx
   14000a1f3:	test   rax,rax
   14000a1f6:	je     0x14000a204
   14000a1f8:	mov    rcx,rax
   14000a1fb:	call   0x140013924
   14000a200:	mov    rcx,QWORD PTR [rbp-0x19]
   14000a204:	call   0x1400137cc
   14000a209:	mov    rax,QWORD PTR [rbp-0x29]
   14000a20d:	mov    rcx,r15
   14000a210:	mov    QWORD PTR [rbp-0x29],rcx
   14000a214:	test   rax,rax
   14000a217:	je     0x14000a225
   14000a219:	mov    rcx,rax
   14000a21c:	call   0x140013924
   14000a221:	mov    rcx,QWORD PTR [rbp-0x29]
   14000a225:	call   0x1400137cc
   14000a22a:	test   dil,dil
   14000a22d:	je     0x14000a276
   14000a22f:	mov    rdx,r14
   14000a232:	mov    rcx,rbx
   14000a235:	call   0x14000a590
   14000a23a:	nop
   14000a23b:	mov    rcx,QWORD PTR [rsi+0x20]
   14000a23f:	mov    QWORD PTR [rsi+0x20],r15
   14000a243:	test   rcx,rcx
   14000a246:	je     0x14000a24d
   14000a248:	call   0x140013924
   14000a24d:	mov    rcx,QWORD PTR [rsi+0x20]
   14000a251:	call   0x1400137cc
   14000a256:	mov    rcx,QWORD PTR [rsi+0x10]
   14000a25a:	mov    QWORD PTR [rsi+0x10],r15
   14000a25e:	test   rcx,rcx
   14000a261:	je     0x14000a268
   14000a263:	call   0x140013924
   14000a268:	mov    rcx,QWORD PTR [rsi+0x10]
   14000a26c:	call   0x1400137cc
   14000a271:	jmp    0x14000a575
   14000a276:	xor    r9d,r9d
   14000a279:	or     r8,0xffffffffffffffff
   14000a27d:	lea    rdx,[rip+0x24ec4]        # 0x14002f148
   14000a284:	lea    rcx,[rbp-0x39]
   14000a288:	call   0x14000fb80
   14000a28d:	nop
   14000a28e:	xor    r9d,r9d
   14000a291:	xor    r8d,r8d
   14000a294:	mov    rdx,rax
   14000a297:	mov    rcx,rsi
   14000a29a:	call   0x1400108a0
   14000a29f:	test   ax,ax
   14000a2a2:	sete   dil
   14000a2a6:	mov    rax,QWORD PTR [rbp-0x19]
   14000a2aa:	mov    rcx,r15
   14000a2ad:	mov    QWORD PTR [rbp-0x19],rcx
   14000a2b1:	test   rax,rax
   14000a2b4:	je     0x14000a2c2
   14000a2b6:	mov    rcx,rax
   14000a2b9:	call   0x140013924
   14000a2be:	mov    rcx,QWORD PTR [rbp-0x19]
   14000a2c2:	call   0x1400137cc
   14000a2c7:	mov    rax,QWORD PTR [rbp-0x29]
   14000a2cb:	mov    rcx,r15
   14000a2ce:	mov    QWORD PTR [rbp-0x29],rcx
   14000a2d2:	test   rax,rax
   14000a2d5:	je     0x14000a2e3
   14000a2d7:	mov    rcx,rax
   14000a2da:	call   0x140013924
   14000a2df:	mov    rcx,QWORD PTR [rbp-0x29]
   14000a2e3:	call   0x1400137cc
   14000a2e8:	test   dil,dil
   14000a2eb:	je     0x14000a334
   14000a2ed:	mov    rdx,r14
   14000a2f0:	mov    rcx,rbx
   14000a2f3:	call   0x14000c3b0
   14000a2f8:	nop
   14000a2f9:	mov    rcx,QWORD PTR [rsi+0x20]
   14000a2fd:	mov    QWORD PTR [rsi+0x20],r15
   14000a301:	test   rcx,rcx
   14000a304:	je     0x14000a30b
   14000a306:	call   0x140013924
   14000a30b:	mov    rcx,QWORD PTR [rsi+0x20]
   14000a30f:	call   0x1400137cc
   14000a314:	mov    rcx,QWORD PTR [rsi+0x10]
   14000a318:	mov    QWORD PTR [rsi+0x10],r15
   14000a31c:	test   rcx,rcx
   14000a31f:	je     0x14000a326
   14000a321:	call   0x140013924
   14000a326:	mov    rcx,QWORD PTR [rsi+0x10]
   14000a32a:	call   0x1400137cc
   14000a32f:	jmp    0x14000a575
   14000a334:	xor    r9d,r9d
   14000a337:	or     r8,0xffffffffffffffff
   14000a33b:	lea    rdx,[rip+0x24e16]        # 0x14002f158
   14000a342:	lea    rcx,[rbp-0x39]
   14000a346:	call   0x14000fb80
   14000a34b:	nop
   14000a34c:	xor    r9d,r9d
   14000a34f:	xor    r8d,r8d
   14000a352:	mov    rdx,rax
   14000a355:	mov    rcx,rsi
   14000a358:	call   0x1400108a0
   14000a35d:	test   ax,ax
   14000a360:	sete   dil
   14000a364:	mov    rax,QWORD PTR [rbp-0x19]
   14000a368:	mov    rcx,r15
   14000a36b:	mov    QWORD PTR [rbp-0x19],rcx
   14000a36f:	test   rax,rax
   14000a372:	je     0x14000a380
   14000a374:	mov    rcx,rax
   14000a377:	call   0x140013924
   14000a37c:	mov    rcx,QWORD PTR [rbp-0x19]
   14000a380:	call   0x1400137cc
   14000a385:	mov    rax,QWORD PTR [rbp-0x29]
   14000a389:	mov    rcx,r15
   14000a38c:	mov    QWORD PTR [rbp-0x29],rcx
   14000a390:	test   rax,rax
   14000a393:	je     0x14000a3a1
   14000a395:	mov    rcx,rax
   14000a398:	call   0x140013924
   14000a39d:	mov    rcx,QWORD PTR [rbp-0x29]
   14000a3a1:	call   0x1400137cc
   14000a3a6:	test   dil,dil
   14000a3a9:	je     0x14000a3bb
   14000a3ab:	mov    rdx,r14
   14000a3ae:	mov    rcx,rbx
   14000a3b1:	call   0x14000bdf0
   14000a3b6:	jmp    0x14000a56d
   14000a3bb:	mov    QWORD PTR [rbp-0x49],r15
   14000a3bf:	mov    QWORD PTR [rbp-0x41],r15
   14000a3c3:	call   0x140005030
   14000a3c8:	mov    QWORD PTR [rbp-0x49],rax
   14000a3cc:	xor    r9d,r9d
   14000a3cf:	or     r8,0xffffffffffffffff
   14000a3d3:	lea    rdx,[rip+0x24d96]        # 0x14002f170
   14000a3da:	lea    rcx,[rbp-0x1]
   14000a3de:	call   0x14000fb80
   14000a3e3:	mov    rbx,rax
   14000a3e6:	xor    r9d,r9d
   14000a3e9:	or     r8,0xffffffffffffffff
   14000a3ed:	lea    rdx,[rip+0x24d30]        # 0x14002f124
   14000a3f4:	lea    rcx,[rbp-0x39]
   14000a3f8:	call   0x14000fb80
   14000a3fd:	nop
   14000a3fe:	mov    rdx,rax
   14000a401:	lea    rcx,[rbp-0x49]
   14000a405:	call   0x1400047c0
   14000a40a:	or     r8,0xffffffffffffffff
   14000a40e:	mov    rdx,rbx
   14000a411:	mov    rcx,rax
   14000a414:	call   0x140010560
   14000a419:	nop
   14000a41a:	mov    rax,QWORD PTR [rbp-0x19]
   14000a41e:	mov    rcx,r15
   14000a421:	mov    QWORD PTR [rbp-0x19],rcx
   14000a425:	test   rax,rax
   14000a428:	je     0x14000a436
   14000a42a:	mov    rcx,rax
   14000a42d:	call   0x140013924
   14000a432:	mov    rcx,QWORD PTR [rbp-0x19]
   14000a436:	call   0x1400137cc
   14000a43b:	mov    rax,QWORD PTR [rbp-0x29]
   14000a43f:	mov    rcx,r15
   14000a442:	mov    QWORD PTR [rbp-0x29],rcx
   14000a446:	test   rax,rax
   14000a449:	je     0x14000a457
   14000a44b:	mov    rcx,rax
   14000a44e:	call   0x140013924
   14000a453:	mov    rcx,QWORD PTR [rbp-0x29]
   14000a457:	call   0x1400137cc
   14000a45c:	nop
   14000a45d:	mov    rax,QWORD PTR [rbp+0x1f]
   14000a461:	mov    rcx,r15
   14000a464:	mov    QWORD PTR [rbp+0x1f],rcx
   14000a468:	test   rax,rax
   14000a46b:	je     0x14000a479
   14000a46d:	mov    rcx,rax
   14000a470:	call   0x140013924
   14000a475:	mov    rcx,QWORD PTR [rbp+0x1f]
   14000a479:	call   0x1400137cc
   14000a47e:	mov    rax,QWORD PTR [rbp+0xf]
   14000a482:	mov    rcx,r15
   14000a485:	mov    QWORD PTR [rbp+0xf],rcx
   14000a489:	test   rax,rax
   14000a48c:	je     0x14000a49a
   14000a48e:	mov    rcx,rax
   14000a491:	call   0x140013924
   14000a496:	mov    rcx,QWORD PTR [rbp+0xf]
   14000a49a:	call   0x1400137cc
   14000a49f:	mov    QWORD PTR [r14],r15
   14000a4a2:	mov    QWORD PTR [r14+0x8],r15
   14000a4a6:	call   0x140005030
   14000a4ab:	mov    rdi,rax
   14000a4ae:	mov    rax,QWORD PTR [rbp-0x49]
   14000a4b2:	mov    QWORD PTR [r14],rax
   14000a4b5:	mov    QWORD PTR [rbp-0x49],rdi
   14000a4b9:	mov    rcx,QWORD PTR [r14+0x8]
   14000a4bd:	mov    rax,QWORD PTR [rbp-0x41]
   14000a4c1:	mov    QWORD PTR [r14+0x8],rax
   14000a4c5:	mov    QWORD PTR [rbp-0x41],rcx
   14000a4c9:	mov    rbx,QWORD PTR [rdi]
   14000a4cc:	cmp    rbx,rbx
   14000a4cf:	jne    0x14000a4fb
   14000a4d1:	mov    rdx,QWORD PTR [rdi+0x8]
   14000a4d5:	lea    rcx,[rbp-0x49]
   14000a4d9:	call   0x140004f50
   14000a4de:	mov    rax,QWORD PTR [rbp-0x49]
   14000a4e2:	mov    QWORD PTR [rax+0x8],rax
   14000a4e6:	mov    rax,QWORD PTR [rbp-0x49]
   14000a4ea:	mov    QWORD PTR [rax],rax
   14000a4ed:	mov    rax,QWORD PTR [rbp-0x49]
   14000a4f1:	mov    QWORD PTR [rax+0x10],rax
   14000a4f5:	mov    QWORD PTR [rbp-0x41],r15
   14000a4f9:	jmp    0x14000a560
   14000a4fb:	cmp    rbx,rdi
   14000a4fe:	je     0x14000a564
   14000a500:	mov    r8,rbx
   14000a503:	cmp    BYTE PTR [rbx+0x19],0x0
   14000a507:	jne    0x14000a54e
   14000a509:	mov    rax,QWORD PTR [rbx+0x10]
   14000a50d:	cmp    BYTE PTR [rax+0x19],0x0
   14000a511:	jne    0x14000a52e
   14000a513:	mov    rbx,rax
   14000a516:	mov    rax,QWORD PTR [rax]
   14000a519:	cmp    BYTE PTR [rax+0x19],0x0
   14000a51d:	jne    0x14000a54e
   14000a51f:	nop
   14000a520:	mov    rbx,rax
   14000a523:	mov    rax,QWORD PTR [rax]
   14000a526:	cmp    BYTE PTR [rax+0x19],0x0
   14000a52a:	je     0x14000a520
   14000a52c:	jmp    0x14000a54e
   14000a52e:	mov    rax,QWORD PTR [rbx+0x8]
   14000a532:	cmp    BYTE PTR [rax+0x19],0x0
   14000a536:	jne    0x14000a54b
   14000a538:	cmp    rbx,QWORD PTR [rax+0x10]
   14000a53c:	jne    0x14000a54b
   14000a53e:	mov    rbx,rax
   14000a541:	mov    rax,QWORD PTR [rax+0x8]
   14000a545:	cmp    BYTE PTR [rax+0x19],0x0
   14000a549:	je     0x14000a538
   14000a54b:	mov    rbx,rax
   14000a54e:	lea    rdx,[rbp+0x7f]
   14000a552:	lea    rcx,[rbp-0x49]
   14000a556:	call   0x140004a90
   14000a55b:	cmp    rbx,rdi
   14000a55e:	jne    0x14000a500
   14000a560:	mov    rdi,QWORD PTR [rbp-0x49]
   14000a564:	mov    rcx,rdi
   14000a567:	call   0x1400137cc
   14000a56c:	nop
   14000a56d:	mov    rcx,rsi
   14000a570:	call   0x140003750
   14000a575:	mov    rax,r14
   14000a578:	mov    rbx,QWORD PTR [rsp+0xd0]
   14000a580:	add    rsp,0xa0
   14000a587:	pop    r15
   14000a589:	pop    r14
   14000a58b:	pop    rdi
   14000a58c:	pop    rsi
   14000a58d:	pop    rbp
   14000a58e:	ret    
   14000a58f:	int3   
   14000a590:	rex push rdi
   14000a592:	push   r12
   14000a594:	push   r13
   14000a596:	push   r14
   14000a598:	push   r15
   14000a59a:	mov    eax,0x1b420
   14000a59f:	call   0x14001ab40
   14000a5a4:	sub    rsp,rax
   14000a5a7:	mov    QWORD PTR [rsp+0x438],0xfffffffffffffffe
   14000a5b3:	mov    QWORD PTR [rsp+0x1b460],rbx
   14000a5bb:	mov    QWORD PTR [rsp+0x1b468],rsi
   14000a5c3:	mov    rax,QWORD PTR [rip+0x2ca46]        # 0x140037010
   14000a5ca:	xor    rax,rsp
   14000a5cd:	mov    QWORD PTR [rsp+0x1b410],rax
   14000a5d5:	mov    rbx,rdx
   14000a5d8:	mov    QWORD PTR [rsp+0x60],rdx
   14000a5dd:	mov    rsi,rcx
   14000a5e0:	mov    QWORD PTR [rsp+0x2d8],rcx
   14000a5e8:	mov    QWORD PTR [rsp+0x268],rdx
   14000a5f0:	xor    edi,edi
   14000a5f2:	mov    DWORD PTR [rsp+0xd8],edi
   14000a5f9:	mov    r13d,edi
   14000a5fc:	mov    QWORD PTR [rdx],rdi
   14000a5ff:	mov    QWORD PTR [rdx+0x8],rdi
   14000a603:	call   0x140005030
   14000a608:	mov    QWORD PTR [rbx],rax
   14000a60b:	mov    DWORD PTR [rsp+0xd8],0x1
   14000a616:	cmp    QWORD PTR [rsi+0x48],rdi
   14000a61a:	je     0x14000a628
   14000a61c:	cmp    QWORD PTR [rsi+0x50],rdi
   14000a620:	je     0x14000a628
   14000a622:	cmp    QWORD PTR [rsi+0x58],rdi
   14000a626:	jne    0x14000a62f
   14000a628:	mov    DWORD PTR [rsi+0x28],0x80040102
   14000a62f:	xor    r9d,r9d
   14000a632:	or     r8,0xffffffffffffffff
   14000a636:	lea    rdx,[rip+0x24b43]        # 0x14002f180
   14000a63d:	lea    rcx,[rsp+0x2e0]
   14000a645:	call   0x14000fb80
   14000a64a:	mov    r12,rax
   14000a64d:	lea    r15,[rsi+0x90]
   14000a654:	mov    r14,QWORD PTR [r15]
   14000a657:	mov    rbx,QWORD PTR [r14+0x8]
   14000a65b:	cmp    BYTE PTR [rbx+0x19],0x0
   14000a65f:	jne    0x14000a68a
   14000a661:	lea    rcx,[rbx+0x20]
   14000a665:	xor    r9d,r9d
   14000a668:	xor    r8d,r8d
   14000a66b:	mov    rdx,r12
   14000a66e:	call   0x1400108a0
   14000a673:	test   ax,ax
   14000a676:	jns    0x14000a67e
   14000a678:	mov    rbx,QWORD PTR [rbx+0x10]
   14000a67c:	jmp    0x14000a684
   14000a67e:	mov    r14,rbx
   14000a681:	mov    rbx,QWORD PTR [rbx]
   14000a684:	cmp    BYTE PTR [rbx+0x19],0x0
   14000a688:	je     0x14000a661
   14000a68a:	cmp    r14,QWORD PTR [r15]
   14000a68d:	je     0x14000a6b8
   14000a68f:	lea    rdx,[r14+0x20]
   14000a693:	xor    r9d,r9d
   14000a696:	xor    r8d,r8d
   14000a699:	mov    rcx,r12
   14000a69c:	call   0x1400108a0
   14000a6a1:	test   ax,ax
   14000a6a4:	js     0x14000a6b8
   14000a6a6:	mov    QWORD PTR [rsp+0x288],r14
   14000a6ae:	lea    rbx,[rsp+0x288]
   14000a6b6:	jmp    0x14000a6cb
   14000a6b8:	mov    rax,QWORD PTR [r15]
   14000a6bb:	mov    QWORD PTR [rsp+0x2a8],rax
   14000a6c3:	lea    rbx,[rsp+0x2a8]
   14000a6cb:	mov    rbx,QWORD PTR [rbx]
   14000a6ce:	mov    rax,QWORD PTR [rsp+0x300]
   14000a6d6:	mov    rcx,rdi
   14000a6d9:	mov    QWORD PTR [rsp+0x300],rcx
   14000a6e1:	test   rax,rax
   14000a6e4:	je     0x14000a6f6
   14000a6e6:	mov    rcx,rax
   14000a6e9:	call   0x140013924
   14000a6ee:	mov    rcx,QWORD PTR [rsp+0x300]
   14000a6f6:	call   0x1400137cc
   14000a6fb:	mov    rax,QWORD PTR [rsp+0x2f0]
   14000a703:	mov    rcx,rdi
   14000a706:	mov    QWORD PTR [rsp+0x2f0],rcx
   14000a70e:	test   rax,rax
   14000a711:	je     0x14000a723
   14000a713:	mov    rcx,rax
   14000a716:	call   0x140013924
   14000a71b:	mov    rcx,QWORD PTR [rsp+0x2f0]
   14000a723:	call   0x1400137cc
   14000a728:	cmp    rbx,QWORD PTR [r15]
   14000a72b:	je     0x14000a75c
   14000a72d:	xor    r9d,r9d
   14000a730:	or     r8,0xffffffffffffffff
   14000a734:	lea    rdx,[rip+0x2473d]        # 0x14002ee78
   14000a73b:	lea    rcx,[rsp+0x4f8]
   14000a743:	call   0x14000fb80
   14000a748:	lea    rcx,[rbx+0x50]
   14000a74c:	lea    r8,[rsp+0xf0]
   14000a754:	mov    rdx,rax
   14000a757:	call   0x140012020
   14000a75c:	mov    eax,DWORD PTR [rsp+0xf0]
   14000a763:	mov    DWORD PTR [rsi+0x80],eax
   14000a769:	xor    r9d,r9d
   14000a76c:	or     r8,0xffffffffffffffff
   14000a770:	lea    rdx,[rip+0x249b5]        # 0x14002f12c
   14000a777:	lea    rcx,[rsp+0x370]
   14000a77f:	call   0x14000fb80
   14000a784:	mov    r12,rax
   14000a787:	mov    r14,QWORD PTR [r15]
   14000a78a:	mov    rbx,QWORD PTR [r14+0x8]
   14000a78e:	cmp    BYTE PTR [rbx+0x19],0x0
   14000a792:	jne    0x14000a7c9
   14000a794:	nop    DWORD PTR [rax+0x0]
   14000a798:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a7a0:	lea    rcx,[rbx+0x20]
   14000a7a4:	xor    r9d,r9d
   14000a7a7:	xor    r8d,r8d
   14000a7aa:	mov    rdx,r12
   14000a7ad:	call   0x1400108a0
   14000a7b2:	test   ax,ax
   14000a7b5:	jns    0x14000a7bd
   14000a7b7:	mov    rbx,QWORD PTR [rbx+0x10]
   14000a7bb:	jmp    0x14000a7c3
   14000a7bd:	mov    r14,rbx
   14000a7c0:	mov    rbx,QWORD PTR [rbx]
   14000a7c3:	cmp    BYTE PTR [rbx+0x19],0x0
   14000a7c7:	je     0x14000a7a0
   14000a7c9:	cmp    r14,QWORD PTR [r15]
   14000a7cc:	je     0x14000a7f7
   14000a7ce:	lea    rdx,[r14+0x20]
   14000a7d2:	xor    r9d,r9d
   14000a7d5:	xor    r8d,r8d
   14000a7d8:	mov    rcx,r12
   14000a7db:	call   0x1400108a0
   14000a7e0:	test   ax,ax
   14000a7e3:	js     0x14000a7f7
   14000a7e5:	mov    QWORD PTR [rsp+0x2d0],r14
   14000a7ed:	lea    rbx,[rsp+0x2d0]
   14000a7f5:	jmp    0x14000a80a
   14000a7f7:	mov    rax,QWORD PTR [r15]
   14000a7fa:	mov    QWORD PTR [rsp+0x2b0],rax
   14000a802:	lea    rbx,[rsp+0x2b0]
   14000a80a:	mov    rbx,QWORD PTR [rbx]
   14000a80d:	mov    rax,QWORD PTR [rsp+0x390]
   14000a815:	mov    rcx,rdi
   14000a818:	mov    QWORD PTR [rsp+0x390],rcx
   14000a820:	test   rax,rax
   14000a823:	je     0x14000a835
   14000a825:	mov    rcx,rax
   14000a828:	call   0x140013924
   14000a82d:	mov    rcx,QWORD PTR [rsp+0x390]
   14000a835:	call   0x1400137cc
   14000a83a:	mov    rax,QWORD PTR [rsp+0x380]
   14000a842:	mov    rcx,rdi
   14000a845:	mov    QWORD PTR [rsp+0x380],rcx
   14000a84d:	test   rax,rax
   14000a850:	je     0x14000a862
   14000a852:	mov    rcx,rax
   14000a855:	call   0x140013924
   14000a85a:	mov    rcx,QWORD PTR [rsp+0x380]
   14000a862:	call   0x1400137cc
   14000a867:	mov    eax,edi
   14000a869:	mov    DWORD PTR [rsp+0x90],eax
   14000a870:	cmp    rbx,QWORD PTR [r15]
   14000a873:	je     0x14000a8ab
   14000a875:	xor    r9d,r9d
   14000a878:	or     r8,0xffffffffffffffff
   14000a87c:	lea    rdx,[rip+0x248b1]        # 0x14002f134
   14000a883:	lea    rcx,[rsp+0x4c8]
   14000a88b:	call   0x14000fb80
   14000a890:	lea    rcx,[rbx+0x50]
   14000a894:	lea    r8,[rsp+0x90]
   14000a89c:	mov    rdx,rax
   14000a89f:	call   0x140012020
   14000a8a4:	mov    eax,DWORD PTR [rsp+0x90]
   14000a8ab:	mov    r12d,eax
   14000a8ae:	mov    QWORD PTR [rsp+0xe8],r12
   14000a8b6:	mov    rcx,QWORD PTR [rsi+0x78]
   14000a8ba:	test   rcx,rcx
   14000a8bd:	je     0x14000bc69
   14000a8c3:	mov    QWORD PTR [rsp+0xa8],rdi
   14000a8cb:	mov    rax,QWORD PTR [rcx]
   14000a8ce:	lea    r8,[rsp+0xa8]
   14000a8d6:	xor    edx,edx
   14000a8d8:	call   QWORD PTR [rax+0x20]
   14000a8db:	mov    DWORD PTR [rsi+0x28],eax
   14000a8de:	test   eax,eax
   14000a8e0:	js     0x14000bc69
   14000a8e6:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000a8ee:	mov    rax,QWORD PTR [rcx]
   14000a8f1:	xor    r8d,r8d
   14000a8f4:	lea    rdx,[rip+0x249e5]        # 0x14002f2e0
   14000a8fb:	call   QWORD PTR [rax+0x38]
   14000a8fe:	mov    DWORD PTR [rsi+0x28],eax
   14000a901:	test   eax,eax
   14000a903:	js     0x14000bc4f
   14000a909:	mov    QWORD PTR [rsp+0x98],rdi
   14000a911:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000a919:	mov    rax,QWORD PTR [rcx]
   14000a91c:	lea    r9,[rsp+0x98]
   14000a924:	xor    r8d,r8d
   14000a927:	lea    edx,[r8+0x1]
   14000a92b:	call   QWORD PTR [rax+0x98]
   14000a931:	mov    DWORD PTR [rsi+0x28],eax
   14000a934:	mov    rdx,QWORD PTR [rsp+0x98]
   14000a93c:	test   rdx,rdx
   14000a93f:	je     0x14000bc4f
   14000a945:	cmp    DWORD PTR [rdx],0x0
   14000a948:	je     0x14000a96c
   14000a94a:	test   eax,eax
   14000a94c:	js     0x14000a96c
   14000a94e:	cmp    eax,0x40380
   14000a953:	je     0x14000a96c
   14000a955:	mov    rax,QWORD PTR [rdx+0x10]
   14000a959:	movzx  ecx,WORD PTR [rax+0x8]
   14000a95d:	test   ecx,ecx
   14000a95f:	jne    0x14000a96c
   14000a961:	mov    rcx,QWORD PTR [rsi+0x38]
   14000a965:	call   0x140008ea0
   14000a96a:	jmp    0x14000a909
   14000a96c:	test   rdx,rdx
   14000a96f:	je     0x14000bc4f
   14000a975:	cmp    DWORD PTR [rdx],0x0
   14000a978:	je     0x14000bc4f
   14000a97e:	mov    rax,QWORD PTR [rdx+0x10]
   14000a982:	mov    r8d,DWORD PTR [rax+0x20]
   14000a986:	mov    r9,QWORD PTR [rax+0x28]
   14000a98a:	mov    QWORD PTR [rsp+0x80],rdi
   14000a992:	mov    rcx,QWORD PTR [rsi+0x78]
   14000a996:	mov    rax,QWORD PTR [rcx]
   14000a999:	movsxd rdx,r12d
   14000a99c:	lea    r10,[rsp+0x80]
   14000a9a4:	mov    QWORD PTR [rsp+0x30],r10
   14000a9a9:	mov    DWORD PTR [rsp+0x28],0x4
   14000a9b1:	mov    QWORD PTR [rsp+0x20],rdi
   14000a9b6:	call   QWORD PTR [rax+0x28]
   14000a9b9:	mov    DWORD PTR [rsi+0x28],eax
   14000a9bc:	test   eax,eax
   14000a9be:	js     0x14000bc32
   14000a9c4:	mov    QWORD PTR [rsp+0xa0],rdi
   14000a9cc:	xor    r9d,r9d
   14000a9cf:	or     r8,0xffffffffffffffff
   14000a9d3:	lea    rdx,[rip+0x247ae]        # 0x14002f188
   14000a9da:	lea    rcx,[rsp+0x3a0]
   14000a9e2:	call   0x14000fb80
   14000a9e7:	nop
   14000a9e8:	mov    r8,rax
   14000a9eb:	lea    rdx,[rsp+0x440]
   14000a9f3:	mov    rcx,r15
   14000a9f6:	call   0x14000f0a0
   14000a9fb:	mov    rbx,QWORD PTR [rax]
   14000a9fe:	mov    rax,QWORD PTR [rsp+0x3c0]
   14000aa06:	mov    rcx,rdi
   14000aa09:	mov    QWORD PTR [rsp+0x3c0],rcx
   14000aa11:	test   rax,rax
   14000aa14:	je     0x14000aa26
   14000aa16:	mov    rcx,rax
   14000aa19:	call   0x140013924
   14000aa1e:	mov    rcx,QWORD PTR [rsp+0x3c0]
   14000aa26:	call   0x1400137cc
   14000aa2b:	mov    rax,QWORD PTR [rsp+0x3b0]
   14000aa33:	mov    rcx,rdi
   14000aa36:	mov    QWORD PTR [rsp+0x3b0],rcx
   14000aa3e:	test   rax,rax
   14000aa41:	je     0x14000aa53
   14000aa43:	mov    rcx,rax
   14000aa46:	call   0x140013924
   14000aa4b:	mov    rcx,QWORD PTR [rsp+0x3b0]
   14000aa53:	call   0x1400137cc
   14000aa58:	cmp    rbx,QWORD PTR [r15]
   14000aa5b:	je     0x14000ab24
   14000aa61:	xor    r9d,r9d
   14000aa64:	or     r8,0xffffffffffffffff
   14000aa68:	lea    rdx,[rip+0x246c5]        # 0x14002f134
   14000aa6f:	lea    rcx,[rsp+0x468]
   14000aa77:	call   0x14000fb80
   14000aa7c:	lea    rcx,[rbx+0x50]
   14000aa80:	lea    r8,[rsp+0xa0]
   14000aa88:	mov    rdx,rax
   14000aa8b:	call   0x1400120c0
   14000aa90:	cmp    QWORD PTR [rsp+0xa0],0x0
   14000aa99:	je     0x14000ab2c
   14000aa9f:	mov    DWORD PTR [rsp+0xe0],edi
   14000aaa6:	mov    QWORD PTR [rsp+0x100],rdi
   14000aaae:	mov    rcx,QWORD PTR [rsp+0x80]
   14000aab6:	mov    rax,QWORD PTR [rcx]
   14000aab9:	lea    rdx,[rsp+0x100]
   14000aac1:	mov    QWORD PTR [rsp+0x20],rdx
   14000aac6:	lea    r9,[rsp+0xe0]
   14000aace:	xor    r8d,r8d
   14000aad1:	lea    rdx,[rip+0x247b8]        # 0x14002f290
   14000aad8:	call   QWORD PTR [rax+0x28]
   14000aadb:	mov    DWORD PTR [rsi+0x28],eax
   14000aade:	mov    rdx,QWORD PTR [rsp+0x100]
   14000aae6:	test   rdx,rdx
   14000aae9:	je     0x14000ab16
   14000aaeb:	test   eax,eax
   14000aaed:	jne    0x14000ab0c
   14000aaef:	mov    eax,DWORD PTR [rdx+0x8]
   14000aaf2:	shl    eax,0xa
   14000aaf5:	mov    ecx,eax
   14000aaf7:	test   eax,eax
   14000aaf9:	je     0x14000ab0c
   14000aafb:	cmp    QWORD PTR [rsp+0xa0],rcx
   14000ab03:	jb     0x14000ab0c
   14000ab05:	mov    DWORD PTR [rsi+0x28],0x8004666d
   14000ab0c:	mov    rcx,QWORD PTR [rsi+0x38]
   14000ab10:	mov    rax,QWORD PTR [rcx]
   14000ab13:	call   QWORD PTR [rax+0x10]
   14000ab16:	cmp    DWORD PTR [rsi+0x28],0x8004010f
   14000ab1d:	jne    0x14000ab2c
   14000ab1f:	mov    DWORD PTR [rsi+0x28],edi
   14000ab22:	jmp    0x14000ab2c
   14000ab24:	mov    QWORD PTR [rsp+0xa0],rdi
   14000ab2c:	cmp    DWORD PTR [rsi+0x28],0x0
   14000ab30:	jl     0x14000bc18
   14000ab36:	mov    rcx,QWORD PTR [rsp+0x80]
   14000ab3e:	mov    rax,QWORD PTR [rcx]
   14000ab41:	lea    rdx,[rsp+0x138]
   14000ab49:	mov    QWORD PTR [rsp+0x20],rdx
   14000ab4e:	lea    r9,[rsp+0xf4]
   14000ab56:	xor    r8d,r8d
   14000ab59:	lea    rdx,[rip+0x24758]        # 0x14002f2b8
   14000ab60:	call   QWORD PTR [rax+0x28]
   14000ab63:	mov    DWORD PTR [rsi+0x28],eax
   14000ab66:	test   eax,eax
   14000ab68:	js     0x14000bc18
   14000ab6e:	cmp    eax,0x40380
   14000ab73:	je     0x14000bbff
   14000ab79:	cmp    DWORD PTR [rsp+0xf4],0x1
   14000ab81:	jne    0x14000bbff
   14000ab87:	mov    rax,QWORD PTR [rsp+0x138]
   14000ab8f:	mov    edx,DWORD PTR [rax+0x8]
   14000ab92:	mov    r8,QWORD PTR [rax+0x10]
   14000ab96:	mov    QWORD PTR [rsp+0xb0],rdi
   14000ab9e:	mov    DWORD PTR [rsp+0xfc],edi
   14000aba5:	mov    rcx,QWORD PTR [rsp+0x80]
   14000abad:	mov    rax,QWORD PTR [rcx]
   14000abb0:	lea    r9,[rsp+0xb0]
   14000abb8:	mov    QWORD PTR [rsp+0x30],r9
   14000abbd:	lea    r9,[rsp+0xfc]
   14000abc5:	mov    QWORD PTR [rsp+0x28],r9
   14000abca:	mov    DWORD PTR [rsp+0x20],0x10
   14000abd2:	xor    r9d,r9d
   14000abd5:	call   QWORD PTR [rax+0x88]
   14000abdb:	mov    DWORD PTR [rsi+0x28],eax
   14000abde:	test   eax,eax
   14000abe0:	js     0x14000bbff
   14000abe6:	mov    QWORD PTR [rsp+0x68],rdi
   14000abeb:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000abf3:	mov    rax,QWORD PTR [rcx]
   14000abf6:	lea    r9,[rsp+0x68]
   14000abfb:	xor    r8d,r8d
   14000abfe:	xor    edx,edx
   14000ac00:	call   QWORD PTR [rax+0x98]
   14000ac06:	mov    DWORD PTR [rsi+0x28],eax
   14000ac09:	test   eax,eax
   14000ac0b:	js     0x14000bbe5
   14000ac11:	mov    QWORD PTR [rsp+0xc0],rdi
   14000ac19:	mov    rcx,QWORD PTR [rsi+0x78]
   14000ac1d:	mov    rax,QWORD PTR [rcx]
   14000ac20:	mov    r9d,edi
   14000ac23:	cmp    DWORD PTR [rsi+0x80],edi
   14000ac29:	setne  r9b
   14000ac2d:	lea    rdx,[rsp+0xc0]
   14000ac35:	mov    QWORD PTR [rsp+0x20],rdx
   14000ac3a:	xor    r8d,r8d
   14000ac3d:	xor    edx,edx
   14000ac3f:	call   QWORD PTR [rax+0x30]
   14000ac42:	mov    DWORD PTR [rsi+0x28],eax
   14000ac45:	test   eax,eax
   14000ac47:	js     0x14000ba59
   14000ac4d:	mov    rdx,r15
   14000ac50:	lea    rcx,[rsp+0x448]
   14000ac58:	call   0x140006f10
   14000ac5d:	mov    r9d,edi
   14000ac60:	cmp    DWORD PTR [rsi+0x80],edi
   14000ac66:	sete   r9b
   14000ac6a:	lea    rax,[rsp+0x448]
   14000ac72:	mov    QWORD PTR [rsp+0x20],rax
   14000ac77:	mov    r8,QWORD PTR [rsp+0x68]
   14000ac7c:	mov    rdx,QWORD PTR [rsp+0xc0]
   14000ac84:	mov    rcx,rsi
   14000ac87:	call   0x14000d080
   14000ac8c:	test   eax,eax
   14000ac8e:	je     0x14000ba3d
   14000ac94:	mov    QWORD PTR [rsp+0x78],rdi
   14000ac99:	xor    r9d,r9d
   14000ac9c:	or     r8,0xffffffffffffffff
   14000aca0:	lea    rdx,[rip+0x244f9]        # 0x14002f1a0
   14000aca7:	lea    rcx,[rsp+0x400]
   14000acaf:	call   0x14000fb80
   14000acb4:	nop
   14000acb5:	mov    r8,rax
   14000acb8:	lea    rdx,[rsp+0x458]
   14000acc0:	mov    rcx,r15
   14000acc3:	call   0x14000f0a0
   14000acc8:	mov    rbx,QWORD PTR [rax]
   14000accb:	mov    rax,QWORD PTR [rsp+0x420]
   14000acd3:	mov    rcx,rdi
   14000acd6:	mov    QWORD PTR [rsp+0x420],rcx
   14000acde:	test   rax,rax
   14000ace1:	je     0x14000acf3
   14000ace3:	mov    rcx,rax
   14000ace6:	call   0x140013924
   14000aceb:	mov    rcx,QWORD PTR [rsp+0x420]
   14000acf3:	call   0x1400137cc
   14000acf8:	mov    rax,QWORD PTR [rsp+0x410]
   14000ad00:	mov    rcx,rdi
   14000ad03:	mov    QWORD PTR [rsp+0x410],rcx
   14000ad0b:	test   rax,rax
   14000ad0e:	je     0x14000ad20
   14000ad10:	mov    rcx,rax
   14000ad13:	call   0x140013924
   14000ad18:	mov    rcx,QWORD PTR [rsp+0x410]
   14000ad20:	call   0x1400137cc
   14000ad25:	cmp    rbx,QWORD PTR [r15]
   14000ad28:	je     0x14000afb8
   14000ad2e:	mov    DWORD PTR [rsp+0x1a8],edi
   14000ad35:	mov    QWORD PTR [rsp+0x1b0],rdi
   14000ad3d:	mov    QWORD PTR [rsp+0x1b8],rdi
   14000ad45:	mov    QWORD PTR [rsp+0x1c0],rdi
   14000ad4d:	mov    QWORD PTR [rsp+0x1c8],rdi
   14000ad55:	mov    QWORD PTR [rsp+0x1d0],rdi
   14000ad5d:	lea    rdx,[rbx+0x50]
   14000ad61:	or     r8,0xffffffffffffffff
   14000ad65:	lea    rcx,[rsp+0x1a8]
   14000ad6d:	call   0x140010560
   14000ad72:	nop
   14000ad73:	lea    rcx,[rsp+0x1a8]
   14000ad7b:	call   0x140011320
   14000ad80:	cmp    QWORD PTR [rsp+0x1b0],0x0
   14000ad89:	je     0x14000af5e
   14000ad8f:	xor    eax,eax
   14000ad91:	mov    QWORD PTR [rsp+0x124],rax
   14000ad99:	mov    QWORD PTR [rsp+0x12c],rax
   14000ada1:	mov    DWORD PTR [rsp+0x134],eax
   14000ada8:	mov    DWORD PTR [rsp+0x120],0x1000001f
   14000adb3:	lea    rcx,[rsp+0x1a8]
   14000adbb:	call   0x140011320
   14000adc0:	mov    QWORD PTR [rsp+0x128],rax
   14000adc8:	mov    rcx,QWORD PTR [rsp+0x68]
   14000adcd:	mov    rax,QWORD PTR [rcx]
   14000add0:	lea    r9,[rsp+0xc8]
   14000add8:	lea    r8,[rsp+0x120]
   14000ade0:	mov    edx,0x1
   14000ade5:	call   QWORD PTR [rax+0x40]
   14000ade8:	mov    DWORD PTR [rsi+0x28],eax
   14000adeb:	mov    r8,QWORD PTR [rsp+0xc8]
   14000adf3:	test   eax,eax
   14000adf5:	js     0x14000af4b
   14000adfb:	test   r8,r8
   14000adfe:	je     0x14000af5e
   14000ae04:	mov    edx,edi
   14000ae06:	cmp    edx,DWORD PTR [r8]
   14000ae09:	jae    0x14000af4b
   14000ae0f:	mov    eax,edx
   14000ae11:	lea    rcx,[rax+rax*2]
   14000ae15:	movsd  xmm0,QWORD PTR [r8+rcx*4+0x4]
   14000ae1c:	movsd  QWORD PTR [rsp+0x2b8],xmm0
   14000ae25:	cmp    DWORD PTR [r8+rcx*4+0xc],0x80040103
   14000ae2e:	jne    0x14000af44
   14000ae34:	mov    DWORD PTR [rsp+0x120],0x1000001e
   14000ae3f:	mov    DWORD PTR [rsp+0x148],edi
   14000ae46:	mov    QWORD PTR [rsp+0x150],rdi
   14000ae4e:	mov    QWORD PTR [rsp+0x158],rdi
   14000ae56:	mov    QWORD PTR [rsp+0x160],rdi
   14000ae5e:	mov    QWORD PTR [rsp+0x168],rdi
   14000ae66:	mov    QWORD PTR [rsp+0x170],rdi
   14000ae6e:	or     r8,0xffffffffffffffff
   14000ae72:	lea    rdx,[rsp+0x1a8]
   14000ae7a:	lea    rcx,[rsp+0x148]
   14000ae82:	call   0x140010560
   14000ae87:	nop
   14000ae88:	lea    rcx,[rsp+0x148]
   14000ae90:	call   0x140011370
   14000ae95:	nop
   14000ae96:	lea    rcx,[rsp+0x148]
   14000ae9e:	call   0x140011370
   14000aea3:	cmp    QWORD PTR [rsp+0x150],0x0
   14000aeac:	je     0x14000aee0
   14000aeae:	lea    rcx,[rsp+0x148]
   14000aeb6:	call   0x140011370
   14000aebb:	mov    QWORD PTR [rsp+0x128],rax
   14000aec3:	mov    rcx,QWORD PTR [rsp+0x68]
   14000aec8:	mov    rax,QWORD PTR [rcx]
   14000aecb:	xor    r9d,r9d
   14000aece:	lea    r8,[rsp+0x120]
   14000aed6:	lea    edx,[r9+0x1]
   14000aeda:	call   QWORD PTR [rax+0x40]
   14000aedd:	mov    DWORD PTR [rsi+0x28],eax
   14000aee0:	mov    rax,QWORD PTR [rsp+0x168]
   14000aee8:	mov    rcx,rdi
   14000aeeb:	mov    QWORD PTR [rsp+0x168],rcx
   14000aef3:	test   rax,rax
   14000aef6:	je     0x14000af08
   14000aef8:	mov    rcx,rax
   14000aefb:	call   0x140013924
   14000af00:	mov    rcx,QWORD PTR [rsp+0x168]
   14000af08:	call   0x1400137cc
   14000af0d:	mov    rax,QWORD PTR [rsp+0x158]
   14000af15:	mov    rcx,rdi
   14000af18:	mov    QWORD PTR [rsp+0x158],rcx
   14000af20:	test   rax,rax
   14000af23:	je     0x14000af35
   14000af25:	mov    rcx,rax
   14000af28:	call   0x140013924
   14000af2d:	mov    rcx,QWORD PTR [rsp+0x158]
   14000af35:	call   0x1400137cc
   14000af3a:	mov    r8,QWORD PTR [rsp+0xc8]
   14000af42:	jmp    0x14000af4b
   14000af44:	inc    edx
   14000af46:	jmp    0x14000ae06
   14000af4b:	test   r8,r8
   14000af4e:	je     0x14000af5e
   14000af50:	mov    rcx,QWORD PTR [rsi+0x38]
   14000af54:	mov    rax,QWORD PTR [rcx]
   14000af57:	mov    rdx,r8
   14000af5a:	call   QWORD PTR [rax+0x10]
   14000af5d:	nop
   14000af5e:	mov    rax,QWORD PTR [rsp+0x1c8]
   14000af66:	mov    rcx,rdi
   14000af69:	mov    QWORD PTR [rsp+0x1c8],rcx
   14000af71:	test   rax,rax
   14000af74:	je     0x14000af86
   14000af76:	mov    rcx,rax
   14000af79:	call   0x140013924
   14000af7e:	mov    rcx,QWORD PTR [rsp+0x1c8]
   14000af86:	call   0x1400137cc
   14000af8b:	mov    rax,QWORD PTR [rsp+0x1b8]
   14000af93:	mov    rcx,rdi
   14000af96:	mov    QWORD PTR [rsp+0x1b8],rcx
   14000af9e:	test   rax,rax
   14000afa1:	je     0x14000afb3
   14000afa3:	mov    rcx,rax
   14000afa6:	call   0x140013924
   14000afab:	mov    rcx,QWORD PTR [rsp+0x1b8]
   14000afb3:	call   0x1400137cc
   14000afb8:	xor    r9d,r9d
   14000afbb:	or     r8,0xffffffffffffffff
   14000afbf:	lea    rdx,[rip+0x241e2]        # 0x14002f1a8
   14000afc6:	lea    rcx,[rsp+0x3d0]
   14000afce:	call   0x14000fb80
   14000afd3:	nop
   14000afd4:	mov    r8,rax
   14000afd7:	lea    rdx,[rsp+0x460]
   14000afdf:	lea    rcx,[rsi+0x90]
   14000afe6:	call   0x14000f0a0
   14000afeb:	mov    rbx,QWORD PTR [rax]
   14000afee:	mov    rax,QWORD PTR [rsp+0x3f0]
   14000aff6:	mov    rcx,rdi
   14000aff9:	mov    QWORD PTR [rsp+0x3f0],rcx
   14000b001:	test   rax,rax
   14000b004:	je     0x14000b016
   14000b006:	mov    rcx,rax
   14000b009:	call   0x140013924
   14000b00e:	mov    rcx,QWORD PTR [rsp+0x3f0]
   14000b016:	call   0x1400137cc
   14000b01b:	mov    rax,QWORD PTR [rsp+0x3e0]
   14000b023:	mov    rcx,rdi
   14000b026:	mov    QWORD PTR [rsp+0x3e0],rcx
   14000b02e:	test   rax,rax
   14000b031:	je     0x14000b043
   14000b033:	mov    rcx,rax
   14000b036:	call   0x140013924
   14000b03b:	mov    rcx,QWORD PTR [rsp+0x3e0]
   14000b043:	call   0x1400137cc
   14000b048:	cmp    rbx,QWORD PTR [rsi+0x90]
   14000b04f:	je     0x14000b2e2
   14000b055:	mov    DWORD PTR [rsp+0x1d8],edi
   14000b05c:	mov    QWORD PTR [rsp+0x1e0],rdi
   14000b064:	mov    QWORD PTR [rsp+0x1e8],rdi
   14000b06c:	mov    QWORD PTR [rsp+0x1f0],rdi
   14000b074:	mov    QWORD PTR [rsp+0x1f8],rdi
   14000b07c:	mov    QWORD PTR [rsp+0x200],rdi
   14000b084:	lea    rdx,[rbx+0x50]
   14000b088:	or     r8,0xffffffffffffffff
   14000b08c:	lea    rcx,[rsp+0x1d8]
   14000b094:	call   0x140010560
   14000b099:	nop
   14000b09a:	lea    rcx,[rsp+0x1d8]
   14000b0a2:	call   0x140011320
   14000b0a7:	cmp    QWORD PTR [rsp+0x1e0],0x0
   14000b0b0:	je     0x14000b288
   14000b0b6:	xor    eax,eax
   14000b0b8:	mov    QWORD PTR [rsp+0x10c],rax
   14000b0c0:	mov    QWORD PTR [rsp+0x114],rax
   14000b0c8:	mov    DWORD PTR [rsp+0x11c],eax
   14000b0cf:	mov    DWORD PTR [rsp+0x108],0x37001f
   14000b0da:	lea    rcx,[rsp+0x1d8]
   14000b0e2:	call   0x140011320
   14000b0e7:	mov    QWORD PTR [rsp+0x110],rax
   14000b0ef:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b0f4:	mov    rax,QWORD PTR [rcx]
   14000b0f7:	lea    r9,[rsp+0xd0]
   14000b0ff:	lea    r8,[rsp+0x108]
   14000b107:	mov    edx,0x1
   14000b10c:	call   QWORD PTR [rax+0x40]
   14000b10f:	mov    DWORD PTR [rsi+0x28],eax
   14000b112:	mov    r8,QWORD PTR [rsp+0xd0]
   14000b11a:	test   eax,eax
   14000b11c:	js     0x14000b275
   14000b122:	test   r8,r8
   14000b125:	je     0x14000b288
   14000b12b:	mov    edx,edi
   14000b12d:	nop    DWORD PTR [rax]
   14000b130:	cmp    edx,DWORD PTR [r8]
   14000b133:	jae    0x14000b275
   14000b139:	mov    eax,edx
   14000b13b:	lea    rcx,[rax+rax*2]
   14000b13f:	movsd  xmm0,QWORD PTR [r8+rcx*4+0x4]
   14000b146:	movsd  QWORD PTR [rsp+0x2b8],xmm0
   14000b14f:	cmp    DWORD PTR [r8+rcx*4+0xc],0x80040103
   14000b158:	jne    0x14000b26e
   14000b15e:	mov    DWORD PTR [rsp+0x108],0x37001e
   14000b169:	mov    DWORD PTR [rsp+0x178],edi
   14000b170:	mov    QWORD PTR [rsp+0x180],rdi
   14000b178:	mov    QWORD PTR [rsp+0x188],rdi
   14000b180:	mov    QWORD PTR [rsp+0x190],rdi
   14000b188:	mov    QWORD PTR [rsp+0x198],rdi
   14000b190:	mov    QWORD PTR [rsp+0x1a0],rdi
   14000b198:	or     r8,0xffffffffffffffff
   14000b19c:	lea    rdx,[rsp+0x1d8]
   14000b1a4:	lea    rcx,[rsp+0x178]
   14000b1ac:	call   0x140010560
   14000b1b1:	nop
   14000b1b2:	lea    rcx,[rsp+0x178]
   14000b1ba:	call   0x140011370
   14000b1bf:	nop
   14000b1c0:	lea    rcx,[rsp+0x178]
   14000b1c8:	call   0x140011370
   14000b1cd:	cmp    QWORD PTR [rsp+0x180],0x0
   14000b1d6:	je     0x14000b20a
   14000b1d8:	lea    rcx,[rsp+0x178]
   14000b1e0:	call   0x140011370
   14000b1e5:	mov    QWORD PTR [rsp+0x110],rax
   14000b1ed:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b1f2:	mov    rax,QWORD PTR [rcx]
   14000b1f5:	xor    r9d,r9d
   14000b1f8:	lea    r8,[rsp+0x108]
   14000b200:	lea    edx,[r9+0x1]
   14000b204:	call   QWORD PTR [rax+0x40]
   14000b207:	mov    DWORD PTR [rsi+0x28],eax
   14000b20a:	mov    rax,QWORD PTR [rsp+0x198]
   14000b212:	mov    rcx,rdi
   14000b215:	mov    QWORD PTR [rsp+0x198],rcx
   14000b21d:	test   rax,rax
   14000b220:	je     0x14000b232
   14000b222:	mov    rcx,rax
   14000b225:	call   0x140013924
   14000b22a:	mov    rcx,QWORD PTR [rsp+0x198]
   14000b232:	call   0x1400137cc
   14000b237:	mov    rax,QWORD PTR [rsp+0x188]
   14000b23f:	mov    rcx,rdi
   14000b242:	mov    QWORD PTR [rsp+0x188],rcx
   14000b24a:	test   rax,rax
   14000b24d:	je     0x14000b25f
   14000b24f:	mov    rcx,rax
   14000b252:	call   0x140013924
   14000b257:	mov    rcx,QWORD PTR [rsp+0x188]
   14000b25f:	call   0x1400137cc
   14000b264:	mov    r8,QWORD PTR [rsp+0xd0]
   14000b26c:	jmp    0x14000b275
   14000b26e:	inc    edx
   14000b270:	jmp    0x14000b130
   14000b275:	test   r8,r8
   14000b278:	je     0x14000b288
   14000b27a:	mov    rcx,QWORD PTR [rsi+0x38]
   14000b27e:	mov    rax,QWORD PTR [rcx]
   14000b281:	mov    rdx,r8
   14000b284:	call   QWORD PTR [rax+0x10]
   14000b287:	nop
   14000b288:	mov    rax,QWORD PTR [rsp+0x1f8]
   14000b290:	mov    rcx,rdi
   14000b293:	mov    QWORD PTR [rsp+0x1f8],rcx
   14000b29b:	test   rax,rax
   14000b29e:	je     0x14000b2b0
   14000b2a0:	mov    rcx,rax
   14000b2a3:	call   0x140013924
   14000b2a8:	mov    rcx,QWORD PTR [rsp+0x1f8]
   14000b2b0:	call   0x1400137cc
   14000b2b5:	mov    rax,QWORD PTR [rsp+0x1e8]
   14000b2bd:	mov    rcx,rdi
   14000b2c0:	mov    QWORD PTR [rsp+0x1e8],rcx
   14000b2c8:	test   rax,rax
   14000b2cb:	je     0x14000b2dd
   14000b2cd:	mov    rcx,rax
   14000b2d0:	call   0x140013924
   14000b2d5:	mov    rcx,QWORD PTR [rsp+0x1e8]
   14000b2dd:	call   0x1400137cc
   14000b2e2:	mov    DWORD PTR [rsp+0x208],edi
   14000b2e9:	mov    QWORD PTR [rsp+0x210],rdi
   14000b2f1:	mov    QWORD PTR [rsp+0x218],rdi
   14000b2f9:	mov    QWORD PTR [rsp+0x220],rdi
   14000b301:	mov    QWORD PTR [rsp+0x228],rdi
   14000b309:	mov    QWORD PTR [rsp+0x230],rdi
   14000b311:	xor    r9d,r9d
   14000b314:	or     r8,0xffffffffffffffff
   14000b318:	lea    rdx,[rip+0x23e91]        # 0x14002f1b0
   14000b31f:	lea    rcx,[rsp+0x310]
   14000b327:	call   0x14000fb80
   14000b32c:	nop
   14000b32d:	mov    r8,rax
   14000b330:	lea    rdx,[rsp+0x430]
   14000b338:	lea    rcx,[rsi+0x90]
   14000b33f:	call   0x14000f0a0
   14000b344:	mov    rbx,QWORD PTR [rax]
   14000b347:	mov    rax,QWORD PTR [rsp+0x330]
   14000b34f:	mov    rcx,rdi
   14000b352:	mov    QWORD PTR [rsp+0x330],rcx
   14000b35a:	test   rax,rax
   14000b35d:	je     0x14000b36f
   14000b35f:	mov    rcx,rax
   14000b362:	call   0x140013924
   14000b367:	mov    rcx,QWORD PTR [rsp+0x330]
   14000b36f:	call   0x1400137cc
   14000b374:	mov    rax,QWORD PTR [rsp+0x320]
   14000b37c:	mov    rcx,rdi
   14000b37f:	mov    QWORD PTR [rsp+0x320],rcx
   14000b387:	test   rax,rax
   14000b38a:	je     0x14000b39c
   14000b38c:	mov    rcx,rax
   14000b38f:	call   0x140013924
   14000b394:	mov    rcx,QWORD PTR [rsp+0x320]
   14000b39c:	call   0x1400137cc
   14000b3a1:	cmp    rbx,QWORD PTR [rsi+0x90]
   14000b3a8:	je     0x14000b3bf
   14000b3aa:	lea    rdx,[rbx+0x50]
   14000b3ae:	or     r8,0xffffffffffffffff
   14000b3b2:	lea    rcx,[rsp+0x208]
   14000b3ba:	call   0x140010560
   14000b3bf:	lea    rcx,[rsp+0x208]
   14000b3c7:	call   0x140011320
   14000b3cc:	cmp    QWORD PTR [rsp+0x210],0x0
   14000b3d5:	je     0x14000b940
   14000b3db:	lea    rcx,[rsp+0x208]
   14000b3e3:	call   0x140011320
   14000b3e8:	mov    r8,rax
   14000b3eb:	mov    edx,0xcbe8
   14000b3f0:	lea    rcx,[rsp+0x1c40]
   14000b3f8:	call   0x140014134
   14000b3fd:	lea    r8,[rsp+0x2c8]
   14000b405:	lea    rdx,[rip+0x23db0]        # 0x14002f1bc
   14000b40c:	lea    rcx,[rsp+0x1c40]
   14000b414:	call   0x140013fec
   14000b419:	mov    DWORD PTR [rsp+0xf8],edi
   14000b420:	mov    r15d,0x80044005
   14000b426:	mov    r13,rax
   14000b429:	cmp    edi,0xc8
   14000b42f:	jge    0x14000b938
   14000b435:	test   rax,rax
   14000b438:	je     0x14000b938
   14000b43e:	mov    QWORD PTR [rsp+0x88],rdi
   14000b446:	mov    rcx,QWORD PTR [rsi+0x70]
   14000b44a:	test   rcx,rcx
   14000b44d:	je     0x14000b45f
   14000b44f:	mov    rax,QWORD PTR [rcx]
   14000b452:	mov    rdx,r13
   14000b455:	call   QWORD PTR [rax]
   14000b457:	test   al,al
   14000b459:	je     0x14000b91d
   14000b45f:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b464:	mov    rax,QWORD PTR [rcx]
   14000b467:	lea    rdx,[rsp+0x88]
   14000b46f:	mov    QWORD PTR [rsp+0x20],rdx
   14000b474:	lea    r9,[rsp+0xf8]
   14000b47c:	xor    r8d,r8d
   14000b47f:	xor    edx,edx
   14000b481:	call   QWORD PTR [rax+0x80]
   14000b487:	mov    DWORD PTR [rsi+0x28],eax
   14000b48a:	test   eax,eax
   14000b48c:	js     0x14000b91d
   14000b492:	xor    eax,eax
   14000b494:	mov    QWORD PTR [rsp+0x7f0],rax
   14000b49c:	mov    QWORD PTR [rsp+0x7f8],rax
   14000b4a4:	mov    QWORD PTR [rsp+0x800],rax
   14000b4ac:	mov    QWORD PTR [rsp+0x808],rax
   14000b4b4:	mov    QWORD PTR [rsp+0x810],rax
   14000b4bc:	mov    QWORD PTR [rsp+0x818],rax
   14000b4c4:	mov    QWORD PTR [rsp+0x820],rax
   14000b4cc:	mov    QWORD PTR [rsp+0x828],rax
   14000b4d4:	mov    QWORD PTR [rsp+0x830],rax
   14000b4dc:	mov    DWORD PTR [rsp+0x7f0],0x37050003
   14000b4e7:	mov    DWORD PTR [rsp+0x7f8],0x1
   14000b4f2:	mov    QWORD PTR [rsp+0x810],rdi
   14000b4fa:	mov    QWORD PTR [rsp+0x828],rdi
   14000b502:	mov    QWORD PTR [rsp+0x40],0x100
   14000b50b:	lea    rax,[rsp+0xa40]
   14000b513:	mov    QWORD PTR [rsp+0x38],rax
   14000b518:	mov    QWORD PTR [rsp+0x30],0x100
   14000b521:	lea    rax,[rsp+0x840]
   14000b529:	mov    QWORD PTR [rsp+0x28],rax
   14000b52e:	mov    QWORD PTR [rsp+0x20],rdi
   14000b533:	xor    r9d,r9d
   14000b536:	xor    r8d,r8d
   14000b539:	xor    edx,edx
   14000b53b:	mov    rcx,r13
   14000b53e:	call   0x140013a24
   14000b543:	lea    r8,[rsp+0xa40]
   14000b54b:	mov    edx,0x100
   14000b550:	lea    rcx,[rsp+0x840]
   14000b558:	call   0x1400140ac
   14000b55d:	mov    DWORD PTR [rsp+0x808],0x3704001f
   14000b568:	lea    rax,[rsp+0x840]
   14000b570:	mov    QWORD PTR [rsp+0x810],rax
   14000b578:	mov    QWORD PTR [rsp+0x530],rdi
   14000b580:	xor    edx,edx
   14000b582:	mov    r8d,0x2b0
   14000b588:	lea    rcx,[rsp+0x538]
   14000b590:	call   0x140014d80
   14000b595:	mov    DWORD PTR [rsp+0x20],0x200
   14000b59d:	mov    r9d,0x2b8
   14000b5a3:	lea    r8,[rsp+0x530]
   14000b5ab:	mov    edx,0xd0
   14000b5b0:	mov    rcx,r13
   14000b5b3:	call   QWORD PTR [rip+0x1bd8f]        # 0x140027348
   14000b5b9:	test   rax,rax
   14000b5bc:	je     0x14000b5d9
   14000b5be:	mov    DWORD PTR [rsp+0x820],0x3001001f
   14000b5c9:	lea    rax,[rsp+0x540]
   14000b5d1:	mov    QWORD PTR [rsp+0x828],rax
   14000b5d9:	mov    rcx,QWORD PTR [rsp+0x88]
   14000b5e1:	mov    rax,QWORD PTR [rcx]
   14000b5e4:	lea    r9,[rsp+0xb8]
   14000b5ec:	lea    r8,[rsp+0x7f0]
   14000b5f4:	mov    edx,0x3
   14000b5f9:	call   QWORD PTR [rax+0x40]
   14000b5fc:	mov    DWORD PTR [rsi+0x28],eax
   14000b5ff:	test   eax,eax
   14000b601:	js     0x14000b7ac
   14000b607:	cmp    QWORD PTR [rsp+0xb8],0x0
   14000b610:	je     0x14000b7c6
   14000b616:	mov    edx,edi
   14000b618:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b620:	mov    r8,QWORD PTR [rsp+0xb8]
   14000b628:	cmp    edx,DWORD PTR [r8]
   14000b62b:	jae    0x14000b7a6
   14000b631:	mov    eax,edx
   14000b633:	lea    rcx,[rax+rax*2]
   14000b637:	movsd  xmm0,QWORD PTR [r8+rcx*4+0x4]
   14000b63e:	movsd  QWORD PTR [rsp+0x2b8],xmm0
   14000b647:	cmp    DWORD PTR [r8+rcx*4+0xc],0x80040103
   14000b650:	jne    0x14000b79f
   14000b656:	mov    r15,rdi
   14000b659:	mov    r12,rdi
   14000b65c:	mov    ebx,edi
   14000b65e:	mov    r14d,edi
   14000b661:	mov    r8,QWORD PTR [rsp+0x810]
   14000b669:	test   r8,r8
   14000b66c:	je     0x14000b6de
   14000b66e:	mov    DWORD PTR [rsp+0x808],0x3704001e
   14000b679:	mov    QWORD PTR [rsp+0x38],rdi
   14000b67e:	mov    QWORD PTR [rsp+0x30],rdi
   14000b683:	mov    DWORD PTR [rsp+0x28],edi
   14000b687:	mov    QWORD PTR [rsp+0x20],rdi
   14000b68c:	or     r9d,0xffffffff
   14000b690:	xor    edx,edx
   14000b692:	xor    ecx,ecx
   14000b694:	call   QWORD PTR [rip+0x1ba96]        # 0x140027130
   14000b69a:	movsxd rbx,eax
   14000b69d:	test   eax,eax
   14000b69f:	je     0x14000b6de
   14000b6a1:	mov    rcx,rbx
   14000b6a4:	call   0x14001396c
   14000b6a9:	mov    r15,rax
   14000b6ac:	mov    QWORD PTR [rsp+0x38],rdi
   14000b6b1:	mov    QWORD PTR [rsp+0x30],rdi
   14000b6b6:	mov    DWORD PTR [rsp+0x28],ebx
   14000b6ba:	mov    QWORD PTR [rsp+0x20],rax
   14000b6bf:	mov    r9d,ebx
   14000b6c2:	mov    r8,QWORD PTR [rsp+0x810]
   14000b6ca:	xor    edx,edx
   14000b6cc:	xor    ecx,ecx
   14000b6ce:	call   QWORD PTR [rip+0x1ba5c]        # 0x140027130
   14000b6d4:	mov    ebx,eax
   14000b6d6:	mov    QWORD PTR [rsp+0x810],r15
   14000b6de:	mov    r8,QWORD PTR [rsp+0x828]
   14000b6e6:	test   r8,r8
   14000b6e9:	je     0x14000b75d
   14000b6eb:	mov    DWORD PTR [rsp+0x820],0x3001001e
   14000b6f6:	mov    QWORD PTR [rsp+0x38],rdi
   14000b6fb:	mov    QWORD PTR [rsp+0x30],rdi
   14000b700:	mov    DWORD PTR [rsp+0x28],edi
   14000b704:	mov    QWORD PTR [rsp+0x20],rdi
   14000b709:	or     r9d,0xffffffff
   14000b70d:	xor    edx,edx
   14000b70f:	xor    ecx,ecx
   14000b711:	call   QWORD PTR [rip+0x1ba19]        # 0x140027130
   14000b717:	movsxd r14,eax
   14000b71a:	test   eax,eax
   14000b71c:	je     0x14000b75d
   14000b71e:	mov    rcx,r14
   14000b721:	call   0x14001396c
   14000b726:	mov    r12,rax
   14000b729:	mov    QWORD PTR [rsp+0x38],rdi
   14000b72e:	mov    QWORD PTR [rsp+0x30],rdi
   14000b733:	mov    DWORD PTR [rsp+0x28],r14d
   14000b738:	mov    QWORD PTR [rsp+0x20],rax
   14000b73d:	mov    r9d,r14d
   14000b740:	mov    r8,QWORD PTR [rsp+0x828]
   14000b748:	xor    edx,edx
   14000b74a:	xor    ecx,ecx
   14000b74c:	call   QWORD PTR [rip+0x1b9de]        # 0x140027130
   14000b752:	mov    r14d,eax
   14000b755:	mov    QWORD PTR [rsp+0x828],r12
   14000b75d:	test   ebx,ebx
   14000b75f:	je     0x14000b783
   14000b761:	test   r14d,r14d
   14000b764:	je     0x14000b783
   14000b766:	mov    rcx,QWORD PTR [rsp+0x88]
   14000b76e:	mov    rax,QWORD PTR [rcx]
   14000b771:	xor    r9d,r9d
   14000b774:	lea    r8,[rsp+0x7f0]
   14000b77c:	lea    edx,[r9+0x3]
   14000b780:	call   QWORD PTR [rax+0x40]
   14000b783:	test   r15,r15
   14000b786:	je     0x14000b790
   14000b788:	mov    rcx,r15
   14000b78b:	call   0x14001392c
   14000b790:	test   r12,r12
   14000b793:	je     0x14000b7a6
   14000b795:	mov    rcx,r12
   14000b798:	call   0x14001392c
   14000b79d:	jmp    0x14000b7a6
   14000b79f:	inc    edx
   14000b7a1:	jmp    0x14000b620
   14000b7a6:	mov    r15d,0x80044005
   14000b7ac:	mov    r8,QWORD PTR [rsp+0xb8]
   14000b7b4:	test   r8,r8
   14000b7b7:	je     0x14000b7c6
   14000b7b9:	mov    rcx,QWORD PTR [rsi+0x38]
   14000b7bd:	mov    rax,QWORD PTR [rcx]
   14000b7c0:	mov    rdx,r8
   14000b7c3:	call   QWORD PTR [rax+0x10]
   14000b7c6:	mov    rcx,QWORD PTR [rsp+0x88]
   14000b7ce:	mov    rax,QWORD PTR [rcx]
   14000b7d1:	lea    rdx,[rsp+0x78]
   14000b7d6:	mov    QWORD PTR [rsp+0x28],rdx
   14000b7db:	mov    DWORD PTR [rsp+0x20],0x3
   14000b7e3:	mov    r9d,0x1
   14000b7e9:	lea    r8,[rip+0x1bc68]        # 0x140027458
   14000b7f0:	mov    edx,0x37010102
   14000b7f5:	call   QWORD PTR [rax+0x38]
   14000b7f8:	mov    DWORD PTR [rsi+0x28],eax
   14000b7fb:	test   eax,eax
   14000b7fd:	js     0x14000b8ff
   14000b803:	mov    QWORD PTR [rsp+0x30],rdi
   14000b808:	mov    DWORD PTR [rsp+0x28],0x80
   14000b810:	mov    DWORD PTR [rsp+0x20],0x3
   14000b818:	xor    r9d,r9d
   14000b81b:	mov    edx,0x80000000
   14000b820:	lea    r8d,[r9+0x1]
   14000b824:	mov    rcx,r13
   14000b827:	call   QWORD PTR [rip+0x1b823]        # 0x140027050
   14000b82d:	mov    r14,rax
   14000b830:	cmp    rax,0xffffffffffffffff
   14000b834:	jne    0x14000b83f
   14000b836:	mov    DWORD PTR [rsi+0x28],r15d
   14000b83a:	jmp    0x14000b8e2
   14000b83f:	mov    DWORD PTR [rsp+0x70],edi
   14000b843:	mov    DWORD PTR [rsp+0x94],edi
   14000b84a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b850:	mov    QWORD PTR [rsp+0x20],rdi
   14000b855:	lea    r9,[rsp+0x70]
   14000b85a:	mov    r8d,0x1000
   14000b860:	lea    rdx,[rsp+0xc40]
   14000b868:	mov    rcx,r14
   14000b86b:	call   QWORD PTR [rip+0x1b7d7]        # 0x140027048
   14000b871:	test   eax,eax
   14000b873:	je     0x14000b8d9
   14000b875:	cmp    DWORD PTR [rsp+0x70],0x0
   14000b87a:	je     0x14000b8d9
   14000b87c:	lea    rbx,[rsp+0xc40]
   14000b884:	nop    DWORD PTR [rax+0x0]
   14000b888:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b890:	mov    rcx,QWORD PTR [rsp+0x78]
   14000b895:	mov    rax,QWORD PTR [rcx]
   14000b898:	lea    r9,[rsp+0x94]
   14000b8a0:	mov    r8d,DWORD PTR [rsp+0x70]
   14000b8a5:	mov    rdx,rbx
   14000b8a8:	call   QWORD PTR [rax+0x20]
   14000b8ab:	mov    edx,DWORD PTR [rsp+0x94]
   14000b8b2:	test   edx,edx
   14000b8b4:	cmove  eax,r15d
   14000b8b8:	mov    DWORD PTR [rsi+0x28],eax
   14000b8bb:	test   eax,eax
   14000b8bd:	js     0x14000b8d0
   14000b8bf:	mov    ecx,DWORD PTR [rsp+0x70]
   14000b8c3:	sub    ecx,edx
   14000b8c5:	mov    DWORD PTR [rsp+0x70],ecx
   14000b8c9:	add    rbx,rdx
   14000b8cc:	test   ecx,ecx
   14000b8ce:	jne    0x14000b890
   14000b8d0:	cmp    eax,0x0
   14000b8d3:	jge    0x14000b850
   14000b8d9:	mov    rcx,r14
   14000b8dc:	call   QWORD PTR [rip+0x1b7be]        # 0x1400270a0
   14000b8e2:	mov    rcx,QWORD PTR [rsp+0x78]
   14000b8e7:	mov    rax,QWORD PTR [rcx]
   14000b8ea:	xor    edx,edx
   14000b8ec:	call   QWORD PTR [rax+0x40]
   14000b8ef:	mov    rcx,QWORD PTR [rsp+0x78]
   14000b8f4:	mov    rax,QWORD PTR [rcx]
   14000b8f7:	call   QWORD PTR [rax+0x10]
   14000b8fa:	mov    QWORD PTR [rsp+0x78],rdi
   14000b8ff:	mov    rcx,QWORD PTR [rsp+0x88]
   14000b907:	mov    rax,QWORD PTR [rcx]
   14000b90a:	xor    edx,edx
   14000b90c:	call   QWORD PTR [rax+0x20]
   14000b90f:	mov    rcx,QWORD PTR [rsp+0x88]
   14000b917:	mov    rax,QWORD PTR [rcx]
   14000b91a:	call   QWORD PTR [rax+0x10]
   14000b91d:	lea    r8,[rsp+0x2c8]
   14000b925:	lea    rdx,[rip+0x23890]        # 0x14002f1bc
   14000b92c:	xor    ecx,ecx
   14000b92e:	call   0x140013fec
   14000b933:	jmp    0x14000b426
   14000b938:	mov    r12,QWORD PTR [rsp+0xe8]
   14000b940:	xor    eax,eax
   14000b942:	mov    QWORD PTR [rsp+0x274],rax
   14000b94a:	mov    QWORD PTR [rsp+0x27c],rax
   14000b952:	mov    DWORD PTR [rsp+0x284],eax
   14000b959:	mov    DWORD PTR [rsp+0x270],0x1a001e
   14000b964:	lea    rbx,[rip+0x23855]        # 0x14002f1c0
   14000b96b:	mov    QWORD PTR [rsp+0x278],rbx
   14000b973:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b978:	mov    rax,QWORD PTR [rcx]
   14000b97b:	xor    r9d,r9d
   14000b97e:	lea    r8,[rsp+0x270]
   14000b986:	lea    edx,[r9+0x1]
   14000b98a:	call   QWORD PTR [rax+0x40]
   14000b98d:	mov    DWORD PTR [rsi+0x28],eax
   14000b990:	mov    rax,QWORD PTR [rsp+0x228]
   14000b998:	mov    rcx,rdi
   14000b99b:	mov    QWORD PTR [rsp+0x228],rcx
   14000b9a3:	test   rax,rax
   14000b9a6:	je     0x14000b9b8
   14000b9a8:	mov    rcx,rax
   14000b9ab:	call   0x140013924
   14000b9b0:	mov    rcx,QWORD PTR [rsp+0x228]
   14000b9b8:	call   0x1400137cc
   14000b9bd:	mov    rax,QWORD PTR [rsp+0x218]
   14000b9c5:	mov    rcx,rdi
   14000b9c8:	mov    QWORD PTR [rsp+0x218],rcx
   14000b9d0:	test   rax,rax
   14000b9d3:	je     0x14000b9e5
   14000b9d5:	mov    rcx,rax
   14000b9d8:	call   0x140013924
   14000b9dd:	mov    rcx,QWORD PTR [rsp+0x218]
   14000b9e5:	call   0x1400137cc
   14000b9ea:	nop
   14000b9eb:	mov    r15,QWORD PTR [rsp+0x60]
   14000b9f0:	jmp    0x14000ba13
   14000b9f2:	xor    edi,edi
   14000b9f4:	lea    rbx,[rip+0x237c5]        # 0x14002f1c0
   14000b9fb:	mov    rsi,QWORD PTR [rsp+0x2d8]
   14000ba03:	mov    r15,QWORD PTR [rsp+0x268]
   14000ba0b:	mov    r12,QWORD PTR [rsp+0xe8]
   14000ba13:	mov    rax,QWORD PTR [rsp+0x78]
   14000ba18:	test   rax,rax
   14000ba1b:	je     0x14000ba35
   14000ba1d:	mov    rcx,QWORD PTR [rsp+0x78]
   14000ba22:	mov    rax,QWORD PTR [rcx]
   14000ba25:	xor    edx,edx
   14000ba27:	call   QWORD PTR [rax+0x40]
   14000ba2a:	mov    rcx,QWORD PTR [rsp+0x78]
   14000ba2f:	mov    rax,QWORD PTR [rcx]
   14000ba32:	call   QWORD PTR [rax+0x10]
   14000ba35:	mov    r13d,0x1
   14000ba3b:	jmp    0x14000ba49
   14000ba3d:	lea    rbx,[rip+0x2377c]        # 0x14002f1c0
   14000ba44:	mov    r15,QWORD PTR [rsp+0x60]
   14000ba49:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000ba51:	mov    rax,QWORD PTR [rcx]
   14000ba54:	call   QWORD PTR [rax+0x10]
   14000ba57:	jmp    0x14000ba65
   14000ba59:	lea    rbx,[rip+0x23760]        # 0x14002f1c0
   14000ba60:	mov    r15,QWORD PTR [rsp+0x60]
   14000ba65:	cmp    DWORD PTR [rsi+0x28],0x0
   14000ba69:	jl     0x14000bbea
   14000ba6f:	cmp    DWORD PTR [rsi+0x80],0x0
   14000ba76:	jne    0x14000bb1c
   14000ba7c:	mov    ecx,0x8
   14000ba81:	call   0x1400138b8
   14000ba86:	mov    r14,rax
   14000ba89:	mov    rcx,QWORD PTR [rsi+0x78]
   14000ba8d:	mov    r10,QWORD PTR [rcx]
   14000ba90:	mov    r9,rax
   14000ba93:	mov    r8,QWORD PTR [rsp+0x68]
   14000ba98:	xor    edx,edx
   14000ba9a:	call   QWORD PTR [r10+0xa8]
   14000baa1:	mov    DWORD PTR [rsi+0x28],eax
   14000baa4:	test   eax,eax
   14000baa6:	js     0x14000bb14
   14000baa8:	mov    rcx,QWORD PTR [rsp+0x68]
   14000baad:	test   rcx,rcx
   14000bab0:	je     0x14000bab8
   14000bab2:	mov    rax,QWORD PTR [rcx]
   14000bab5:	call   QWORD PTR [rax+0x10]
   14000bab8:	mov    rcx,QWORD PTR [rsi+0x78]
   14000babc:	mov    r10,QWORD PTR [rcx]
   14000babf:	mov    QWORD PTR [rsp+0x58],rbx
   14000bac4:	mov    DWORD PTR [rsp+0x50],0x1
   14000bacc:	mov    DWORD PTR [rsp+0x48],0x8
   14000bad4:	mov    DWORD PTR [rsp+0x40],edi
   14000bad8:	mov    DWORD PTR [rsp+0x38],0x2
   14000bae0:	mov    QWORD PTR [rsp+0x30],rdi
   14000bae5:	mov    rax,QWORD PTR [r14]
   14000bae8:	mov    QWORD PTR [rsp+0x28],rax
   14000baed:	mov    QWORD PTR [rsp+0x20],rdi
   14000baf2:	mov    r9,QWORD PTR [rsp+0xb0]
   14000bafa:	mov    r8,QWORD PTR [rsp+0x80]
   14000bb02:	mov    rdx,r12
   14000bb05:	call   QWORD PTR [r10+0xa0]
   14000bb0c:	mov    DWORD PTR [rsi+0x28],eax
   14000bb0f:	jmp    0x14000bbea
   14000bb14:	mov    r13d,edi
   14000bb17:	jmp    0x14000bbea
   14000bb1c:	mov    rcx,QWORD PTR [rsp+0x80]
   14000bb24:	mov    rax,QWORD PTR [rcx]
   14000bb27:	lea    rdx,[rsp+0x140]
   14000bb2f:	mov    QWORD PTR [rsp+0x20],rdx
   14000bb34:	lea    r9,[rsp+0xdc]
   14000bb3c:	xor    r8d,r8d
   14000bb3f:	lea    rdx,[rip+0x23742]        # 0x14002f288
   14000bb46:	call   QWORD PTR [rax+0x28]
   14000bb49:	mov    DWORD PTR [rsi+0x28],eax
   14000bb4c:	test   eax,eax
   14000bb4e:	js     0x14000bbc5
   14000bb50:	cmp    eax,0x40380
   14000bb55:	je     0x14000bbb3
   14000bb57:	cmp    DWORD PTR [rsp+0xdc],0x1
   14000bb5f:	jne    0x14000bbb3
   14000bb61:	xor    eax,eax
   14000bb63:	mov    QWORD PTR [rsp+0x294],rax
   14000bb6b:	mov    QWORD PTR [rsp+0x29c],rax
   14000bb73:	mov    DWORD PTR [rsp+0x2a4],eax
   14000bb7a:	mov    DWORD PTR [rsp+0x290],0xe0a0102
   14000bb85:	mov    rax,QWORD PTR [rsp+0x140]
   14000bb8d:	movups xmm0,XMMWORD PTR [rax+0x8]
   14000bb91:	movups XMMWORD PTR [rsp+0x298],xmm0
   14000bb99:	mov    rcx,QWORD PTR [rsp+0x68]
   14000bb9e:	mov    rax,QWORD PTR [rcx]
   14000bba1:	xor    r9d,r9d
   14000bba4:	lea    r8,[rsp+0x290]
   14000bbac:	lea    edx,[r9+0x1]
   14000bbb0:	call   QWORD PTR [rax+0x40]
   14000bbb3:	mov    rcx,QWORD PTR [rsi+0x38]
   14000bbb7:	mov    rax,QWORD PTR [rcx]
   14000bbba:	mov    rdx,QWORD PTR [rsp+0x140]
   14000bbc2:	call   QWORD PTR [rax+0x10]
   14000bbc5:	mov    rcx,QWORD PTR [rsp+0x68]
   14000bbca:	mov    rax,QWORD PTR [rcx]
   14000bbcd:	mov    edx,0x1
   14000bbd2:	call   QWORD PTR [rax+0xa0]
   14000bbd8:	mov    rcx,QWORD PTR [rsp+0x68]
   14000bbdd:	mov    rax,QWORD PTR [rcx]
   14000bbe0:	call   QWORD PTR [rax+0x10]
   14000bbe3:	jmp    0x14000bbea
   14000bbe5:	mov    r15,QWORD PTR [rsp+0x60]
   14000bbea:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000bbf2:	test   rcx,rcx
   14000bbf5:	je     0x14000bc04
   14000bbf7:	mov    rax,QWORD PTR [rcx]
   14000bbfa:	call   QWORD PTR [rax+0x10]
   14000bbfd:	jmp    0x14000bc04
   14000bbff:	mov    r15,QWORD PTR [rsp+0x60]
   14000bc04:	mov    rcx,QWORD PTR [rsi+0x38]
   14000bc08:	mov    rax,QWORD PTR [rcx]
   14000bc0b:	mov    rdx,QWORD PTR [rsp+0x138]
   14000bc13:	call   QWORD PTR [rax+0x10]
   14000bc16:	jmp    0x14000bc1d
   14000bc18:	mov    r15,QWORD PTR [rsp+0x60]
   14000bc1d:	mov    rcx,QWORD PTR [rsp+0x80]
   14000bc25:	test   rcx,rcx
   14000bc28:	je     0x14000bc37
   14000bc2a:	mov    rax,QWORD PTR [rcx]
   14000bc2d:	call   QWORD PTR [rax+0x10]
   14000bc30:	jmp    0x14000bc37
   14000bc32:	mov    r15,QWORD PTR [rsp+0x60]
   14000bc37:	mov    rdx,QWORD PTR [rsp+0x98]
   14000bc3f:	test   rdx,rdx
   14000bc42:	je     0x14000bc54
   14000bc44:	mov    rcx,QWORD PTR [rsi+0x38]
   14000bc48:	call   0x140008ea0
   14000bc4d:	jmp    0x14000bc54
   14000bc4f:	mov    r15,QWORD PTR [rsp+0x60]
   14000bc54:	mov    rcx,QWORD PTR [rsp+0xa8]
   14000bc5c:	test   rcx,rcx
   14000bc5f:	je     0x14000bc6e
   14000bc61:	mov    rax,QWORD PTR [rcx]
   14000bc64:	call   QWORD PTR [rax+0x10]
   14000bc67:	jmp    0x14000bc6e
   14000bc69:	mov    r15,QWORD PTR [rsp+0x60]
   14000bc6e:	mov    DWORD PTR [rsp+0x238],edi
   14000bc75:	mov    QWORD PTR [rsp+0x240],rdi
   14000bc7d:	mov    QWORD PTR [rsp+0x248],rdi
   14000bc85:	mov    QWORD PTR [rsp+0x250],rdi
   14000bc8d:	mov    QWORD PTR [rsp+0x258],rdi
   14000bc95:	mov    QWORD PTR [rsp+0x260],rdi
   14000bc9d:	xor    r9d,r9d
   14000bca0:	or     r8,0xffffffffffffffff
   14000bca4:	lea    rdx,[rip+0x231cd]        # 0x14002ee78
   14000bcab:	lea    rcx,[rsp+0x498]
   14000bcb3:	call   0x14000fb80
   14000bcb8:	mov    r8d,r13d
   14000bcbb:	mov    rdx,rax
   14000bcbe:	lea    rcx,[rsp+0x238]
   14000bcc6:	call   0x140011fa0
   14000bccb:	xor    r9d,r9d
   14000bcce:	or     r8,0xffffffffffffffff
   14000bcd2:	lea    rdx,[rip+0x234f3]        # 0x14002f1cc
   14000bcd9:	lea    rcx,[rsp+0x340]
   14000bce1:	call   0x14000fb80
   14000bce6:	nop
   14000bce7:	mov    rdx,rax
   14000bcea:	mov    rcx,r15
   14000bced:	call   0x1400047c0
   14000bcf2:	or     r8,0xffffffffffffffff
   14000bcf6:	lea    rdx,[rsp+0x238]
   14000bcfe:	mov    rcx,rax
   14000bd01:	call   0x140010560
   14000bd06:	nop
   14000bd07:	mov    rax,QWORD PTR [rsp+0x360]
   14000bd0f:	mov    rcx,rdi
   14000bd12:	mov    QWORD PTR [rsp+0x360],rcx
   14000bd1a:	test   rax,rax
   14000bd1d:	je     0x14000bd2f
   14000bd1f:	mov    rcx,rax
   14000bd22:	call   0x140013924
   14000bd27:	mov    rcx,QWORD PTR [rsp+0x360]
   14000bd2f:	call   0x1400137cc
   14000bd34:	mov    rax,QWORD PTR [rsp+0x350]
   14000bd3c:	mov    rcx,rdi
   14000bd3f:	mov    QWORD PTR [rsp+0x350],rcx
   14000bd47:	test   rax,rax
   14000bd4a:	je     0x14000bd5c
   14000bd4c:	mov    rcx,rax
   14000bd4f:	call   0x140013924
   14000bd54:	mov    rcx,QWORD PTR [rsp+0x350]
   14000bd5c:	call   0x1400137cc
   14000bd61:	nop
   14000bd62:	mov    rax,QWORD PTR [rsp+0x258]
   14000bd6a:	mov    rcx,rdi
   14000bd6d:	mov    QWORD PTR [rsp+0x258],rcx
   14000bd75:	test   rax,rax
   14000bd78:	je     0x14000bd8a
   14000bd7a:	mov    rcx,rax
   14000bd7d:	call   0x140013924
   14000bd82:	mov    rcx,QWORD PTR [rsp+0x258]
   14000bd8a:	call   0x1400137cc
   14000bd8f:	mov    rcx,QWORD PTR [rsp+0x248]
   14000bd97:	mov    QWORD PTR [rsp+0x248],rdi
   14000bd9f:	test   rcx,rcx
   14000bda2:	je     0x14000bdb1
   14000bda4:	call   0x140013924
   14000bda9:	mov    rdi,QWORD PTR [rsp+0x248]
   14000bdb1:	mov    rcx,rdi
   14000bdb4:	call   0x1400137cc
   14000bdb9:	mov    rax,r15
   14000bdbc:	mov    rcx,QWORD PTR [rsp+0x1b410]
   14000bdc4:	xor    rcx,rsp
   14000bdc7:	call   0x1400130a0
   14000bdcc:	lea    r11,[rsp+0x1b420]
   14000bdd4:	mov    rbx,QWORD PTR [r11+0x40]
   14000bdd8:	mov    rsi,QWORD PTR [r11+0x48]
   14000bddc:	mov    rsp,r11
   14000bddf:	pop    r15
   14000bde1:	pop    r14
   14000bde3:	pop    r13
   14000bde5:	pop    r12
   14000bde7:	pop    rdi
   14000bde8:	ret    
   14000bde9:	int3   
   14000bdea:	int3   
   14000bdeb:	int3   
   14000bdec:	int3   
   14000bded:	int3   
   14000bdee:	int3   
   14000bdef:	int3   
   14000bdf0:	mov    r11,rsp
   14000bdf3:	push   rdi
   14000bdf4:	push   r12
   14000bdf6:	push   r13
   14000bdf8:	push   r14
   14000bdfa:	push   r15
   14000bdfc:	sub    rsp,0x130
   14000be03:	mov    QWORD PTR [r11-0x80],0xfffffffffffffffe
   14000be0b:	mov    QWORD PTR [r11+0x18],rbx
   14000be0f:	mov    QWORD PTR [r11+0x20],rsi
   14000be13:	mov    rax,QWORD PTR [rip+0x2b1f6]        # 0x140037010
   14000be1a:	xor    rax,rsp
   14000be1d:	mov    QWORD PTR [rsp+0x128],rax
   14000be25:	mov    r12,rdx
   14000be28:	mov    r15,rcx
   14000be2b:	mov    QWORD PTR [r11-0x88],rdx
   14000be32:	xor    edi,edi
   14000be34:	mov    DWORD PTR [rsp+0x38],edi
   14000be38:	mov    DWORD PTR [rsp+0x70],edi
   14000be3c:	mov    QWORD PTR [rsp+0x78],rdi
   14000be41:	mov    QWORD PTR [r11-0xd8],rdi
   14000be48:	mov    QWORD PTR [r11-0xd0],rdi
   14000be4f:	mov    QWORD PTR [r11-0xc8],rdi
   14000be56:	mov    QWORD PTR [r11-0xc0],rdi
   14000be5d:	lea    rcx,[rsp+0x70]
   14000be62:	call   0x140011370
   14000be67:	nop
   14000be68:	mov    QWORD PTR [r12],rdi
   14000be6c:	mov    QWORD PTR [r12+0x8],rdi
   14000be71:	call   0x140005030
   14000be76:	mov    QWORD PTR [r12],rax
   14000be7a:	mov    r13d,0x1
   14000be80:	mov    DWORD PTR [rsp+0x38],r13d
   14000be85:	xor    r9d,r9d
   14000be88:	or     r8,0xffffffffffffffff
   14000be8c:	lea    rdx,[rip+0x23345]        # 0x14002f1d8
   14000be93:	lea    rcx,[rsp+0x40]
   14000be98:	call   0x14000fb80
   14000be9d:	mov    r14,rax
   14000bea0:	mov    rsi,QWORD PTR [r15+0x90]
   14000bea7:	mov    rbx,QWORD PTR [rsi+0x8]
   14000beab:	cmp    BYTE PTR [rbx+0x19],dil
   14000beaf:	jne    0x14000beda
   14000beb1:	lea    rcx,[rbx+0x20]
   14000beb5:	xor    r9d,r9d
   14000beb8:	xor    r8d,r8d
   14000bebb:	mov    rdx,r14
   14000bebe:	call   0x1400108a0
   14000bec3:	test   ax,ax
   14000bec6:	jns    0x14000bece
   14000bec8:	mov    rbx,QWORD PTR [rbx+0x10]
   14000becc:	jmp    0x14000bed4
   14000bece:	mov    rsi,rbx
   14000bed1:	mov    rbx,QWORD PTR [rbx]
   14000bed4:	cmp    BYTE PTR [rbx+0x19],0x0
   14000bed8:	je     0x14000beb1
   14000beda:	cmp    rsi,QWORD PTR [r15+0x90]
   14000bee1:	je     0x14000bf01
   14000bee3:	lea    rdx,[rsi+0x20]
   14000bee7:	xor    r9d,r9d
   14000beea:	xor    r8d,r8d
   14000beed:	mov    rcx,r14
   14000bef0:	call   0x1400108a0
   14000bef5:	test   ax,ax
   14000bef8:	js     0x14000bf01
   14000befa:	mov    QWORD PTR [rsp+0x20],rsi
   14000beff:	jmp    0x14000bf0d
   14000bf01:	mov    rax,QWORD PTR [r15+0x90]
   14000bf08:	mov    QWORD PTR [rsp+0x20],rax
   14000bf0d:	lea    rbx,[rsp+0x20]
   14000bf12:	mov    rbx,QWORD PTR [rbx]
   14000bf15:	mov    rax,QWORD PTR [rsp+0x60]
   14000bf1a:	mov    rcx,rdi
   14000bf1d:	mov    QWORD PTR [rsp+0x60],rcx
   14000bf22:	test   rax,rax
   14000bf25:	je     0x14000bf34
   14000bf27:	mov    rcx,rax
   14000bf2a:	call   0x140013924
   14000bf2f:	mov    rcx,QWORD PTR [rsp+0x60]
   14000bf34:	call   0x1400137cc
   14000bf39:	mov    rax,QWORD PTR [rsp+0x50]
   14000bf3e:	mov    rcx,rdi
   14000bf41:	mov    QWORD PTR [rsp+0x50],rcx
   14000bf46:	test   rax,rax
   14000bf49:	je     0x14000bf58
   14000bf4b:	mov    rcx,rax
   14000bf4e:	call   0x140013924
   14000bf53:	mov    rcx,QWORD PTR [rsp+0x50]
   14000bf58:	call   0x1400137cc
   14000bf5d:	cmp    rbx,QWORD PTR [r15+0x90]
   14000bf64:	je     0x14000c02f
   14000bf6a:	mov    DWORD PTR [rsp+0xf8],edi
   14000bf71:	mov    QWORD PTR [rsp+0x100],rdi
   14000bf79:	mov    QWORD PTR [rsp+0x108],rdi
   14000bf81:	mov    QWORD PTR [rsp+0x110],rdi
   14000bf89:	mov    QWORD PTR [rsp+0x118],rdi
   14000bf91:	mov    QWORD PTR [rsp+0x120],rdi
   14000bf99:	lea    rdx,[rbx+0x50]
   14000bf9d:	or     r8,0xffffffffffffffff
   14000bfa1:	lea    rcx,[rsp+0xf8]
   14000bfa9:	call   0x140010560
   14000bfae:	nop
   14000bfaf:	lea    rcx,[rsp+0xf8]
   14000bfb7:	call   0x140011370
   14000bfbc:	nop
   14000bfbd:	or     r8,0xffffffffffffffff
   14000bfc1:	lea    rdx,[rsp+0xf8]
   14000bfc9:	lea    rcx,[rsp+0x70]
   14000bfce:	call   0x140010560
   14000bfd3:	nop
   14000bfd4:	mov    rax,QWORD PTR [rsp+0x118]
   14000bfdc:	mov    rcx,rdi
   14000bfdf:	mov    QWORD PTR [rsp+0x118],rcx
   14000bfe7:	test   rax,rax
   14000bfea:	je     0x14000bffc
   14000bfec:	mov    rcx,rax
   14000bfef:	call   0x140013924
   14000bff4:	mov    rcx,QWORD PTR [rsp+0x118]
   14000bffc:	call   0x1400137cc
   14000c001:	mov    rax,QWORD PTR [rsp+0x108]
   14000c009:	mov    rcx,rdi
   14000c00c:	mov    QWORD PTR [rsp+0x108],rcx
   14000c014:	test   rax,rax
   14000c017:	je     0x14000c029
   14000c019:	mov    rcx,rax
   14000c01c:	call   0x140013924
   14000c021:	mov    rcx,QWORD PTR [rsp+0x108]
   14000c029:	call   0x1400137cc
   14000c02e:	nop
   14000c02f:	mov    QWORD PTR [rsp+0x30],rdi
   14000c034:	mov    QWORD PTR [rsp+0x20],rdi
   14000c039:	lea    rdx,[rsp+0x20]
   14000c03e:	xor    ecx,ecx
   14000c040:	call   QWORD PTR [r15+0x60]
   14000c044:	test   eax,eax
   14000c046:	js     0x14000c1ea
   14000c04c:	mov    rcx,QWORD PTR [rsp+0x20]
   14000c051:	test   rcx,rcx
   14000c054:	je     0x14000c1ea
   14000c05a:	mov    QWORD PTR [rsp+0x28],rdi
   14000c05f:	mov    rax,QWORD PTR [rcx]
   14000c062:	lea    r8,[rsp+0x28]
   14000c067:	xor    edx,edx
   14000c069:	call   QWORD PTR [rax+0x20]
   14000c06c:	test   eax,eax
   14000c06e:	js     0x14000c1ea
   14000c074:	mov    rcx,QWORD PTR [rsp+0x28]
   14000c079:	test   rcx,rcx
   14000c07c:	je     0x14000c1ea
   14000c082:	mov    DWORD PTR [rsp+0xe0],0x3d04000b
   14000c08d:	mov    WORD PTR [rsp+0xe8],r13w
   14000c096:	mov    DWORD PTR [rsp+0xf8],0x4
   14000c0a1:	mov    DWORD PTR [rsp+0x100],0x4
   14000c0ac:	mov    DWORD PTR [rsp+0x104],0x3d04000b
   14000c0b7:	lea    rax,[rsp+0xe0]
   14000c0bf:	mov    QWORD PTR [rsp+0x108],rax
   14000c0c7:	mov    rax,QWORD PTR [rcx]
   14000c0ca:	mov    r8d,0x2
   14000c0d0:	lea    rdx,[rsp+0xf8]
   14000c0d8:	call   QWORD PTR [rax+0x70]
   14000c0db:	test   eax,eax
   14000c0dd:	js     0x14000c1ea
   14000c0e3:	mov    rcx,QWORD PTR [rsp+0x28]
   14000c0e8:	mov    rax,QWORD PTR [rcx]
   14000c0eb:	xor    r9d,r9d
   14000c0ee:	xor    r8d,r8d
   14000c0f1:	lea    rdx,[rsp+0xf8]
   14000c0f9:	call   QWORD PTR [rax+0x68]
   14000c0fc:	test   eax,eax
   14000c0fe:	js     0x14000c1ea
   14000c104:	mov    rcx,QWORD PTR [rsp+0x28]
   14000c109:	mov    rax,QWORD PTR [rcx]
   14000c10c:	lea    r9,[rsp+0x30]
   14000c111:	xor    r8d,r8d
   14000c114:	mov    edx,r13d
   14000c117:	call   QWORD PTR [rax+0x98]
   14000c11d:	test   eax,eax
   14000c11f:	js     0x14000c1ea
   14000c125:	mov    rax,QWORD PTR [rsp+0x30]
   14000c12a:	test   rax,rax
   14000c12d:	je     0x14000c1ea
   14000c133:	cmp    DWORD PTR [rax],0x0
   14000c136:	jbe    0x14000c1ea
   14000c13c:	mov    rax,QWORD PTR [rax+0x10]
   14000c140:	mov    rcx,QWORD PTR [rax+0x8]
   14000c144:	test   rcx,rcx
   14000c147:	je     0x14000c1ea
   14000c14d:	mov    edx,0x100
   14000c152:	call   0x140008f50
   14000c157:	test   rax,rax
   14000c15a:	je     0x14000c1ea
   14000c160:	mov    rax,QWORD PTR [rsp+0x30]
   14000c165:	mov    rcx,QWORD PTR [rax+0x10]
   14000c169:	mov    r9d,0x2
   14000c16f:	or     r8,0xffffffffffffffff
   14000c173:	mov    rdx,QWORD PTR [rcx+0x8]
   14000c177:	lea    rcx,[rsp+0x40]
   14000c17c:	call   0x14000fb80
   14000c181:	nop
   14000c182:	lea    rcx,[rsp+0x40]
   14000c187:	call   0x140011370
   14000c18c:	nop
   14000c18d:	or     r8,0xffffffffffffffff
   14000c191:	lea    rdx,[rsp+0x40]
   14000c196:	lea    rcx,[rsp+0x70]
   14000c19b:	call   0x140010560
   14000c1a0:	nop
   14000c1a1:	mov    rax,QWORD PTR [rsp+0x60]
   14000c1a6:	mov    rcx,rdi
   14000c1a9:	mov    QWORD PTR [rsp+0x60],rcx
   14000c1ae:	test   rax,rax
   14000c1b1:	je     0x14000c1c0
   14000c1b3:	mov    rcx,rax
   14000c1b6:	call   0x140013924
   14000c1bb:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c1c0:	call   0x1400137cc
   14000c1c5:	mov    rax,QWORD PTR [rsp+0x50]
   14000c1ca:	mov    rcx,rdi
   14000c1cd:	mov    QWORD PTR [rsp+0x50],rcx
   14000c1d2:	test   rax,rax
   14000c1d5:	je     0x14000c1e4
   14000c1d7:	mov    rcx,rax
   14000c1da:	call   0x140013924
   14000c1df:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c1e4:	call   0x1400137cc
   14000c1e9:	nop
   14000c1ea:	jmp    0x14000c1f6
   14000c1ec:	xor    edi,edi
   14000c1ee:	mov    r12,QWORD PTR [rsp+0xd0]
   14000c1f6:	mov    DWORD PTR [rsp+0xa0],edi
   14000c1fd:	mov    QWORD PTR [rsp+0xa8],rdi
   14000c205:	mov    QWORD PTR [rsp+0xb0],rdi
   14000c20d:	mov    QWORD PTR [rsp+0xb8],rdi
   14000c215:	mov    QWORD PTR [rsp+0xc0],rdi
   14000c21d:	mov    QWORD PTR [rsp+0xc8],rdi
   14000c225:	or     r8,0xffffffffffffffff
   14000c229:	lea    rdx,[rsp+0x70]
   14000c22e:	lea    rcx,[rsp+0xa0]
   14000c236:	call   0x140010560
   14000c23b:	nop
   14000c23c:	xor    r9d,r9d
   14000c23f:	or     r8,0xffffffffffffffff
   14000c243:	lea    rdx,[rip+0x22f8e]        # 0x14002f1d8
   14000c24a:	lea    rcx,[rsp+0x40]
   14000c24f:	call   0x14000fb80
   14000c254:	nop
   14000c255:	mov    rdx,rax
   14000c258:	mov    rcx,r12
   14000c25b:	call   0x1400047c0
   14000c260:	or     r8,0xffffffffffffffff
   14000c264:	lea    rdx,[rsp+0xa0]
   14000c26c:	mov    rcx,rax
   14000c26f:	call   0x140010560
   14000c274:	nop
   14000c275:	mov    rax,QWORD PTR [rsp+0x60]
   14000c27a:	mov    rcx,rdi
   14000c27d:	mov    QWORD PTR [rsp+0x60],rcx
   14000c282:	test   rax,rax
   14000c285:	je     0x14000c294
   14000c287:	mov    rcx,rax
   14000c28a:	call   0x140013924
   14000c28f:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c294:	call   0x1400137cc
   14000c299:	mov    rax,QWORD PTR [rsp+0x50]
   14000c29e:	mov    rcx,rdi
   14000c2a1:	mov    QWORD PTR [rsp+0x50],rcx
   14000c2a6:	test   rax,rax
   14000c2a9:	je     0x14000c2b8
   14000c2ab:	mov    rcx,rax
   14000c2ae:	call   0x140013924
   14000c2b3:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c2b8:	call   0x1400137cc
   14000c2bd:	nop
   14000c2be:	mov    rax,QWORD PTR [rsp+0xc0]
   14000c2c6:	mov    rcx,rdi
   14000c2c9:	mov    QWORD PTR [rsp+0xc0],rcx
   14000c2d1:	test   rax,rax
   14000c2d4:	je     0x14000c2e6
   14000c2d6:	mov    rcx,rax
   14000c2d9:	call   0x140013924
   14000c2de:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000c2e6:	call   0x1400137cc
   14000c2eb:	mov    rax,QWORD PTR [rsp+0xb0]
   14000c2f3:	mov    rcx,rdi
   14000c2f6:	mov    QWORD PTR [rsp+0xb0],rcx
   14000c2fe:	test   rax,rax
   14000c301:	je     0x14000c313
   14000c303:	mov    rcx,rax
   14000c306:	call   0x140013924
   14000c30b:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000c313:	call   0x1400137cc
   14000c318:	nop
   14000c319:	mov    rax,QWORD PTR [rsp+0x90]
   14000c321:	mov    rcx,rdi
   14000c324:	mov    QWORD PTR [rsp+0x90],rcx
   14000c32c:	test   rax,rax
   14000c32f:	je     0x14000c341
   14000c331:	mov    rcx,rax
   14000c334:	call   0x140013924
   14000c339:	mov    rcx,QWORD PTR [rsp+0x90]
   14000c341:	call   0x1400137cc
   14000c346:	mov    rcx,QWORD PTR [rsp+0x80]
   14000c34e:	mov    QWORD PTR [rsp+0x80],rdi
   14000c356:	test   rcx,rcx
   14000c359:	je     0x14000c368
   14000c35b:	call   0x140013924
   14000c360:	mov    rdi,QWORD PTR [rsp+0x80]
   14000c368:	mov    rcx,rdi
   14000c36b:	call   0x1400137cc
   14000c370:	mov    rax,r12
   14000c373:	mov    rcx,QWORD PTR [rsp+0x128]
   14000c37b:	xor    rcx,rsp
   14000c37e:	call   0x1400130a0
   14000c383:	lea    r11,[rsp+0x130]
   14000c38b:	mov    rbx,QWORD PTR [r11+0x40]
   14000c38f:	mov    rsi,QWORD PTR [r11+0x48]
   14000c393:	mov    rsp,r11
   14000c396:	pop    r15
   14000c398:	pop    r14
   14000c39a:	pop    r13
   14000c39c:	pop    r12
   14000c39e:	pop    rdi
   14000c39f:	ret    
   14000c3a0:	int3   
   14000c3a1:	int3   
   14000c3a2:	int3   
   14000c3a3:	int3   
   14000c3a4:	int3   
   14000c3a5:	int3   
   14000c3a6:	int3   
   14000c3a7:	int3   
   14000c3a8:	int3   
   14000c3a9:	int3   
   14000c3aa:	int3   
   14000c3ab:	int3   
   14000c3ac:	int3   
   14000c3ad:	int3   
   14000c3ae:	int3   
   14000c3af:	int3   
   14000c3b0:	rex push rbp
   14000c3b2:	push   rsi
   14000c3b3:	push   rdi
   14000c3b4:	push   r12
   14000c3b6:	push   r13
   14000c3b8:	push   r14
   14000c3ba:	push   r15
   14000c3bc:	lea    rbp,[rsp-0x10]
   14000c3c1:	sub    rsp,0x110
   14000c3c8:	mov    QWORD PTR [rbp+0x8],0xfffffffffffffffe
   14000c3d0:	mov    QWORD PTR [rsp+0x158],rbx
   14000c3d8:	mov    r15,rdx
   14000c3db:	mov    rsi,rcx
   14000c3de:	xor    r12d,r12d
   14000c3e1:	mov    DWORD PTR [rbp+0x0],r12d
   14000c3e5:	mov    r13d,r12d
   14000c3e8:	mov    QWORD PTR [rbp+0x68],r12
   14000c3ec:	mov    QWORD PTR [rbp-0x48],r12
   14000c3f0:	mov    QWORD PTR [rbp-0x40],r12
   14000c3f4:	mov    QWORD PTR [rsp+0x78],r12
   14000c3f9:	mov    QWORD PTR [rbp-0x80],r12
   14000c3fd:	call   0x140005030
   14000c402:	mov    QWORD PTR [rsp+0x78],rax
   14000c407:	xor    r9d,r9d
   14000c40a:	or     r8,0xffffffffffffffff
   14000c40e:	lea    rdx,[rip+0x22d17]        # 0x14002f12c
   14000c415:	lea    rcx,[rsp+0x48]
   14000c41a:	call   0x14000fb80
   14000c41f:	mov    r14,rax
   14000c422:	mov    rdi,QWORD PTR [rsi+0x90]
   14000c429:	mov    rbx,QWORD PTR [rdi+0x8]
   14000c42d:	cmp    BYTE PTR [rbx+0x19],r12b
   14000c431:	jne    0x14000c45c
   14000c433:	lea    rcx,[rbx+0x20]
   14000c437:	xor    r9d,r9d
   14000c43a:	xor    r8d,r8d
   14000c43d:	mov    rdx,r14
   14000c440:	call   0x1400108a0
   14000c445:	test   ax,ax
   14000c448:	jns    0x14000c450
   14000c44a:	mov    rbx,QWORD PTR [rbx+0x10]
   14000c44e:	jmp    0x14000c456
   14000c450:	mov    rdi,rbx
   14000c453:	mov    rbx,QWORD PTR [rbx]
   14000c456:	cmp    BYTE PTR [rbx+0x19],0x0
   14000c45a:	je     0x14000c433
   14000c45c:	cmp    rdi,QWORD PTR [rsi+0x90]
   14000c463:	je     0x14000c483
   14000c465:	lea    rdx,[rdi+0x20]
   14000c469:	xor    r9d,r9d
   14000c46c:	xor    r8d,r8d
   14000c46f:	mov    rcx,r14
   14000c472:	call   0x1400108a0
   14000c477:	test   ax,ax
   14000c47a:	js     0x14000c483
   14000c47c:	mov    QWORD PTR [rsp+0x40],rdi
   14000c481:	jmp    0x14000c48f
   14000c483:	mov    rax,QWORD PTR [rsi+0x90]
   14000c48a:	mov    QWORD PTR [rsp+0x40],rax
   14000c48f:	lea    rbx,[rsp+0x40]
   14000c494:	mov    rbx,QWORD PTR [rbx]
   14000c497:	mov    rax,QWORD PTR [rsp+0x68]
   14000c49c:	mov    rcx,r12
   14000c49f:	mov    QWORD PTR [rsp+0x68],rcx
   14000c4a4:	test   rax,rax
   14000c4a7:	je     0x14000c4b6
   14000c4a9:	mov    rcx,rax
   14000c4ac:	call   0x140013924
   14000c4b1:	mov    rcx,QWORD PTR [rsp+0x68]
   14000c4b6:	call   0x1400137cc
   14000c4bb:	mov    rax,QWORD PTR [rsp+0x58]
   14000c4c0:	mov    rcx,r12
   14000c4c3:	mov    QWORD PTR [rsp+0x58],rcx
   14000c4c8:	test   rax,rax
   14000c4cb:	je     0x14000c4da
   14000c4cd:	mov    rcx,rax
   14000c4d0:	call   0x140013924
   14000c4d5:	mov    rcx,QWORD PTR [rsp+0x58]
   14000c4da:	call   0x1400137cc
   14000c4df:	mov    eax,r12d
   14000c4e2:	mov    DWORD PTR [rbp+0x50],eax
   14000c4e5:	cmp    rbx,QWORD PTR [rsi+0x90]
   14000c4ec:	je     0x14000c518
   14000c4ee:	xor    r9d,r9d
   14000c4f1:	or     r8,0xffffffffffffffff
   14000c4f5:	lea    rdx,[rip+0x2297c]        # 0x14002ee78
   14000c4fc:	lea    rcx,[rbp-0x78]
   14000c500:	call   0x14000fb80
   14000c505:	lea    rcx,[rbx+0x50]
   14000c509:	lea    r8,[rbp+0x50]
   14000c50d:	mov    rdx,rax
   14000c510:	call   0x140012020
   14000c515:	mov    eax,DWORD PTR [rbp+0x50]
   14000c518:	mov    r12d,eax
   14000c51b:	xor    r9d,r9d
   14000c51e:	or     r8,0xffffffffffffffff
   14000c522:	lea    rdx,[rip+0x22cbf]        # 0x14002f1e8
   14000c529:	lea    rcx,[rsp+0x48]
   14000c52e:	call   0x14000fb80
   14000c533:	mov    r14,rax
   14000c536:	mov    rdi,QWORD PTR [rsi+0x90]
   14000c53d:	mov    rbx,QWORD PTR [rdi+0x8]
   14000c541:	cmp    BYTE PTR [rbx+0x19],0x0
   14000c545:	jne    0x14000c579
   14000c547:	nop    WORD PTR [rax+rax*1+0x0]
   14000c550:	lea    rcx,[rbx+0x20]
   14000c554:	xor    r9d,r9d
   14000c557:	xor    r8d,r8d
   14000c55a:	mov    rdx,r14
   14000c55d:	call   0x1400108a0
   14000c562:	test   ax,ax
   14000c565:	jns    0x14000c56d
   14000c567:	mov    rbx,QWORD PTR [rbx+0x10]
   14000c56b:	jmp    0x14000c573
   14000c56d:	mov    rdi,rbx
   14000c570:	mov    rbx,QWORD PTR [rbx]
   14000c573:	cmp    BYTE PTR [rbx+0x19],0x0
   14000c577:	je     0x14000c550
   14000c579:	cmp    rdi,QWORD PTR [rsi+0x90]
   14000c580:	je     0x14000c5a0
   14000c582:	lea    rdx,[rdi+0x20]
   14000c586:	xor    r9d,r9d
   14000c589:	xor    r8d,r8d
   14000c58c:	mov    rcx,r14
   14000c58f:	call   0x1400108a0
   14000c594:	test   ax,ax
   14000c597:	js     0x14000c5a0
   14000c599:	mov    QWORD PTR [rsp+0x40],rdi
   14000c59e:	jmp    0x14000c5ac
   14000c5a0:	mov    rax,QWORD PTR [rsi+0x90]
   14000c5a7:	mov    QWORD PTR [rsp+0x40],rax
   14000c5ac:	lea    rbx,[rsp+0x40]
   14000c5b1:	mov    rbx,QWORD PTR [rbx]
   14000c5b4:	mov    rax,QWORD PTR [rsp+0x68]
   14000c5b9:	xor    edi,edi
   14000c5bb:	mov    ecx,edi
   14000c5bd:	mov    QWORD PTR [rsp+0x68],rcx
   14000c5c2:	test   rax,rax
   14000c5c5:	je     0x14000c5d4
   14000c5c7:	mov    rcx,rax
   14000c5ca:	call   0x140013924
   14000c5cf:	mov    rcx,QWORD PTR [rsp+0x68]
   14000c5d4:	call   0x1400137cc
   14000c5d9:	mov    rax,QWORD PTR [rsp+0x58]
   14000c5de:	mov    rcx,rdi
   14000c5e1:	mov    QWORD PTR [rsp+0x58],rcx
   14000c5e6:	test   rax,rax
   14000c5e9:	je     0x14000c5f8
   14000c5eb:	mov    rcx,rax
   14000c5ee:	call   0x140013924
   14000c5f3:	mov    rcx,QWORD PTR [rsp+0x58]
   14000c5f8:	call   0x1400137cc
   14000c5fd:	cmp    rbx,QWORD PTR [rsi+0x90]
   14000c604:	je     0x14000c68b
   14000c60a:	mov    DWORD PTR [rbp-0x30],edi
   14000c60d:	mov    QWORD PTR [rbp-0x28],rdi
   14000c611:	mov    QWORD PTR [rbp-0x20],rdi
   14000c615:	mov    QWORD PTR [rbp-0x18],rdi
   14000c619:	mov    QWORD PTR [rbp-0x10],rdi
   14000c61d:	mov    QWORD PTR [rbp-0x8],rdi
   14000c621:	lea    rdx,[rbx+0x50]
   14000c625:	or     r8,0xffffffffffffffff
   14000c629:	lea    rcx,[rbp-0x30]
   14000c62d:	call   0x140010560
   14000c632:	nop
   14000c633:	lea    rcx,[rbp-0x30]
   14000c637:	call   0x140011370
   14000c63c:	nop
   14000c63d:	lea    rcx,[rbp-0x30]
   14000c641:	call   0x140011370
   14000c646:	mov    r13,rax
   14000c649:	mov    rdx,QWORD PTR [rbp-0x10]
   14000c64d:	mov    rcx,rdi
   14000c650:	mov    QWORD PTR [rbp-0x10],rcx
   14000c654:	test   rdx,rdx
   14000c657:	je     0x14000c665
   14000c659:	mov    rcx,rdx
   14000c65c:	call   0x140013924
   14000c661:	mov    rcx,QWORD PTR [rbp-0x10]
   14000c665:	call   0x1400137cc
   14000c66a:	mov    rax,QWORD PTR [rbp-0x20]
   14000c66e:	mov    rcx,rdi
   14000c671:	mov    QWORD PTR [rbp-0x20],rcx
   14000c675:	test   rax,rax
   14000c678:	je     0x14000c686
   14000c67a:	mov    rcx,rax
   14000c67d:	call   0x140013924
   14000c682:	mov    rcx,QWORD PTR [rbp-0x20]
   14000c686:	call   0x1400137cc
   14000c68b:	xor    r9d,r9d
   14000c68e:	or     r8,0xffffffffffffffff
   14000c692:	lea    rdx,[rip+0x22b57]        # 0x14002f1f0
   14000c699:	lea    rcx,[rbp-0x78]
   14000c69d:	call   0x14000fb80
   14000c6a2:	mov    r14,rax
   14000c6a5:	mov    rdi,QWORD PTR [rsi+0x90]
   14000c6ac:	mov    rbx,QWORD PTR [rdi+0x8]
   14000c6b0:	cmp    BYTE PTR [rbx+0x19],0x0
   14000c6b4:	jne    0x14000c6e9
   14000c6b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c6c0:	lea    rcx,[rbx+0x20]
   14000c6c4:	xor    r9d,r9d
   14000c6c7:	xor    r8d,r8d
   14000c6ca:	mov    rdx,r14
   14000c6cd:	call   0x1400108a0
   14000c6d2:	test   ax,ax
   14000c6d5:	jns    0x14000c6dd
   14000c6d7:	mov    rbx,QWORD PTR [rbx+0x10]
   14000c6db:	jmp    0x14000c6e3
   14000c6dd:	mov    rdi,rbx
   14000c6e0:	mov    rbx,QWORD PTR [rbx]
   14000c6e3:	cmp    BYTE PTR [rbx+0x19],0x0
   14000c6e7:	je     0x14000c6c0
   14000c6e9:	cmp    rdi,QWORD PTR [rsi+0x90]
   14000c6f0:	je     0x14000c710
   14000c6f2:	lea    rdx,[rdi+0x20]
   14000c6f6:	xor    r9d,r9d
   14000c6f9:	xor    r8d,r8d
   14000c6fc:	mov    rcx,r14
   14000c6ff:	call   0x1400108a0
   14000c704:	test   ax,ax
   14000c707:	js     0x14000c710
   14000c709:	mov    QWORD PTR [rsp+0x40],rdi
   14000c70e:	jmp    0x14000c71c
   14000c710:	mov    rax,QWORD PTR [rsi+0x90]
   14000c717:	mov    QWORD PTR [rsp+0x40],rax
   14000c71c:	lea    rbx,[rsp+0x40]
   14000c721:	mov    rbx,QWORD PTR [rbx]
   14000c724:	mov    rax,QWORD PTR [rbp-0x58]
   14000c728:	xor    r14d,r14d
   14000c72b:	mov    ecx,r14d
   14000c72e:	mov    QWORD PTR [rbp-0x58],rcx
   14000c732:	test   rax,rax
   14000c735:	je     0x14000c743
   14000c737:	mov    rcx,rax
   14000c73a:	call   0x140013924
   14000c73f:	mov    rcx,QWORD PTR [rbp-0x58]
   14000c743:	call   0x1400137cc
   14000c748:	mov    rax,QWORD PTR [rbp-0x68]
   14000c74c:	mov    rcx,r14
   14000c74f:	mov    QWORD PTR [rbp-0x68],rcx
   14000c753:	test   rax,rax
   14000c756:	je     0x14000c764
   14000c758:	mov    rcx,rax
   14000c75b:	call   0x140013924
   14000c760:	mov    rcx,QWORD PTR [rbp-0x68]
   14000c764:	call   0x1400137cc
   14000c769:	cmp    rbx,QWORD PTR [rsi+0x90]
   14000c770:	je     0x14000c82f
   14000c776:	mov    DWORD PTR [rsp+0x48],r14d
   14000c77b:	mov    QWORD PTR [rsp+0x50],r14
   14000c780:	mov    QWORD PTR [rsp+0x58],r14
   14000c785:	mov    QWORD PTR [rsp+0x60],r14
   14000c78a:	mov    QWORD PTR [rsp+0x68],r14
   14000c78f:	mov    QWORD PTR [rsp+0x70],r14
   14000c794:	lea    rdx,[rbx+0x50]
   14000c798:	or     r8,0xffffffffffffffff
   14000c79c:	lea    rcx,[rsp+0x48]
   14000c7a1:	call   0x140010560
   14000c7a6:	nop
   14000c7a7:	lea    rcx,[rsp+0x48]
   14000c7ac:	call   0x140011370
   14000c7b1:	nop
   14000c7b2:	lea    rcx,[rsp+0x48]
   14000c7b7:	call   0x140011370
   14000c7bc:	mov    rdi,rax
   14000c7bf:	mov    rcx,rax
   14000c7c2:	call   0x140009130
   14000c7c7:	lea    rcx,[rax+0x2]
   14000c7cb:	call   0x14001396c
   14000c7d0:	mov    rbx,rax
   14000c7d3:	test   rax,rax
   14000c7d6:	je     0x14000c7e3
   14000c7d8:	mov    r8,rdi
   14000c7db:	mov    rcx,rax
   14000c7de:	call   0x140008fd0
   14000c7e3:	mov    QWORD PTR [rbp+0x68],rbx
   14000c7e7:	mov    rax,QWORD PTR [rsp+0x68]
   14000c7ec:	mov    rcx,r14
   14000c7ef:	mov    QWORD PTR [rsp+0x68],rcx
   14000c7f4:	test   rax,rax
   14000c7f7:	je     0x14000c806
   14000c7f9:	mov    rcx,rax
   14000c7fc:	call   0x140013924
   14000c801:	mov    rcx,QWORD PTR [rsp+0x68]
   14000c806:	call   0x1400137cc
   14000c80b:	mov    rax,QWORD PTR [rsp+0x58]
   14000c810:	mov    rcx,r14
   14000c813:	mov    QWORD PTR [rsp+0x58],rcx
   14000c818:	test   rax,rax
   14000c81b:	je     0x14000c82a
   14000c81d:	mov    rcx,rax
   14000c820:	call   0x140013924
   14000c825:	mov    rcx,QWORD PTR [rsp+0x58]
   14000c82a:	call   0x1400137cc
   14000c82f:	xor    r9d,r9d
   14000c832:	or     r8,0xffffffffffffffff
   14000c836:	lea    rdx,[rip+0x229b7]        # 0x14002f1f4
   14000c83d:	lea    rcx,[rbp-0x78]
   14000c841:	call   0x14000fb80
   14000c846:	mov    r14,rax
   14000c849:	mov    rdi,QWORD PTR [rsi+0x90]
   14000c850:	mov    rbx,QWORD PTR [rdi+0x8]
   14000c854:	cmp    BYTE PTR [rbx+0x19],0x0
   14000c858:	jne    0x14000c889
   14000c85a:	nop    WORD PTR [rax+rax*1+0x0]
   14000c860:	lea    rcx,[rbx+0x20]
   14000c864:	xor    r9d,r9d
   14000c867:	xor    r8d,r8d
   14000c86a:	mov    rdx,r14
   14000c86d:	call   0x1400108a0
   14000c872:	test   ax,ax
   14000c875:	jns    0x14000c87d
   14000c877:	mov    rbx,QWORD PTR [rbx+0x10]
   14000c87b:	jmp    0x14000c883
   14000c87d:	mov    rdi,rbx
   14000c880:	mov    rbx,QWORD PTR [rbx]
   14000c883:	cmp    BYTE PTR [rbx+0x19],0x0
   14000c887:	je     0x14000c860
   14000c889:	cmp    rdi,QWORD PTR [rsi+0x90]
   14000c890:	je     0x14000c8b0
   14000c892:	lea    rdx,[rdi+0x20]
   14000c896:	xor    r9d,r9d
   14000c899:	xor    r8d,r8d
   14000c89c:	mov    rcx,r14
   14000c89f:	call   0x1400108a0
   14000c8a4:	test   ax,ax
   14000c8a7:	js     0x14000c8b0
   14000c8a9:	mov    QWORD PTR [rsp+0x40],rdi
   14000c8ae:	jmp    0x14000c8bc
   14000c8b0:	mov    rax,QWORD PTR [rsi+0x90]
   14000c8b7:	mov    QWORD PTR [rsp+0x40],rax
   14000c8bc:	lea    rbx,[rsp+0x40]
   14000c8c1:	mov    rbx,QWORD PTR [rbx]
   14000c8c4:	mov    rax,QWORD PTR [rbp-0x58]
   14000c8c8:	xor    r14d,r14d
   14000c8cb:	mov    ecx,r14d
   14000c8ce:	mov    QWORD PTR [rbp-0x58],rcx
   14000c8d2:	test   rax,rax
   14000c8d5:	je     0x14000c8e3
   14000c8d7:	mov    rcx,rax
   14000c8da:	call   0x140013924
   14000c8df:	mov    rcx,QWORD PTR [rbp-0x58]
   14000c8e3:	call   0x1400137cc
   14000c8e8:	mov    rax,QWORD PTR [rbp-0x68]
   14000c8ec:	mov    rcx,r14
   14000c8ef:	mov    QWORD PTR [rbp-0x68],rcx
   14000c8f3:	test   rax,rax
   14000c8f6:	je     0x14000c904
   14000c8f8:	mov    rcx,rax
   14000c8fb:	call   0x140013924
   14000c900:	mov    rcx,QWORD PTR [rbp-0x68]
   14000c904:	call   0x1400137cc
   14000c909:	cmp    rbx,QWORD PTR [rsi+0x90]
   14000c910:	je     0x14000c9cf
   14000c916:	mov    DWORD PTR [rsp+0x48],r14d
   14000c91b:	mov    QWORD PTR [rsp+0x50],r14
   14000c920:	mov    QWORD PTR [rsp+0x58],r14
   14000c925:	mov    QWORD PTR [rsp+0x60],r14
   14000c92a:	mov    QWORD PTR [rsp+0x68],r14
   14000c92f:	mov    QWORD PTR [rsp+0x70],r14
   14000c934:	lea    rdx,[rbx+0x50]
   14000c938:	or     r8,0xffffffffffffffff
   14000c93c:	lea    rcx,[rsp+0x48]
   14000c941:	call   0x140010560
   14000c946:	nop
   14000c947:	lea    rcx,[rsp+0x48]
   14000c94c:	call   0x140011370
   14000c951:	nop
   14000c952:	lea    rcx,[rsp+0x48]
   14000c957:	call   0x140011370
   14000c95c:	mov    rdi,rax
   14000c95f:	mov    rcx,rax
   14000c962:	call   0x140009130
   14000c967:	lea    rcx,[rax+0x2]
   14000c96b:	call   0x14001396c
   14000c970:	mov    rbx,rax
   14000c973:	test   rax,rax
   14000c976:	je     0x14000c983
   14000c978:	mov    r8,rdi
   14000c97b:	mov    rcx,rax
   14000c97e:	call   0x140008fd0
   14000c983:	mov    QWORD PTR [rbp-0x48],rbx
   14000c987:	mov    rax,QWORD PTR [rsp+0x68]
   14000c98c:	mov    rcx,r14
   14000c98f:	mov    QWORD PTR [rsp+0x68],rcx
   14000c994:	test   rax,rax
   14000c997:	je     0x14000c9a6
   14000c999:	mov    rcx,rax
   14000c99c:	call   0x140013924
   14000c9a1:	mov    rcx,QWORD PTR [rsp+0x68]
   14000c9a6:	call   0x1400137cc
   14000c9ab:	mov    rax,QWORD PTR [rsp+0x58]
   14000c9b0:	mov    rcx,r14
   14000c9b3:	mov    QWORD PTR [rsp+0x58],rcx
   14000c9b8:	test   rax,rax
   14000c9bb:	je     0x14000c9ca
   14000c9bd:	mov    rcx,rax
   14000c9c0:	call   0x140013924
   14000c9c5:	mov    rcx,QWORD PTR [rsp+0x58]
   14000c9ca:	call   0x1400137cc
   14000c9cf:	xor    r9d,r9d
   14000c9d2:	or     r8,0xffffffffffffffff
   14000c9d6:	lea    rdx,[rip+0x2281b]        # 0x14002f1f8
   14000c9dd:	lea    rcx,[rbp-0x78]
   14000c9e1:	call   0x14000fb80
   14000c9e6:	mov    r14,rax
   14000c9e9:	mov    rdi,QWORD PTR [rsi+0x90]
   14000c9f0:	mov    rbx,QWORD PTR [rdi+0x8]
   14000c9f4:	cmp    BYTE PTR [rbx+0x19],0x0
   14000c9f8:	jne    0x14000ca29
   14000c9fa:	nop    WORD PTR [rax+rax*1+0x0]
   14000ca00:	lea    rcx,[rbx+0x20]
   14000ca04:	xor    r9d,r9d
   14000ca07:	xor    r8d,r8d
   14000ca0a:	mov    rdx,r14
   14000ca0d:	call   0x1400108a0
   14000ca12:	test   ax,ax
   14000ca15:	jns    0x14000ca1d
   14000ca17:	mov    rbx,QWORD PTR [rbx+0x10]
   14000ca1b:	jmp    0x14000ca23
   14000ca1d:	mov    rdi,rbx
   14000ca20:	mov    rbx,QWORD PTR [rbx]
   14000ca23:	cmp    BYTE PTR [rbx+0x19],0x0
   14000ca27:	je     0x14000ca00
   14000ca29:	cmp    rdi,QWORD PTR [rsi+0x90]
   14000ca30:	je     0x14000ca50
   14000ca32:	lea    rdx,[rdi+0x20]
   14000ca36:	xor    r9d,r9d
   14000ca39:	xor    r8d,r8d
   14000ca3c:	mov    rcx,r14
   14000ca3f:	call   0x1400108a0
   14000ca44:	test   ax,ax
   14000ca47:	js     0x14000ca50
   14000ca49:	mov    QWORD PTR [rsp+0x40],rdi
   14000ca4e:	jmp    0x14000ca5c
   14000ca50:	mov    rax,QWORD PTR [rsi+0x90]
   14000ca57:	mov    QWORD PTR [rsp+0x40],rax
   14000ca5c:	lea    rbx,[rsp+0x40]
   14000ca61:	mov    rbx,QWORD PTR [rbx]
   14000ca64:	mov    rax,QWORD PTR [rbp-0x58]
   14000ca68:	xor    r14d,r14d
   14000ca6b:	mov    ecx,r14d
   14000ca6e:	mov    QWORD PTR [rbp-0x58],rcx
   14000ca72:	test   rax,rax
   14000ca75:	je     0x14000ca83
   14000ca77:	mov    rcx,rax
   14000ca7a:	call   0x140013924
   14000ca7f:	mov    rcx,QWORD PTR [rbp-0x58]
   14000ca83:	call   0x1400137cc
   14000ca88:	mov    rax,QWORD PTR [rbp-0x68]
   14000ca8c:	mov    rcx,r14
   14000ca8f:	mov    QWORD PTR [rbp-0x68],rcx
   14000ca93:	test   rax,rax
   14000ca96:	je     0x14000caa4
   14000ca98:	mov    rcx,rax
   14000ca9b:	call   0x140013924
   14000caa0:	mov    rcx,QWORD PTR [rbp-0x68]
   14000caa4:	call   0x1400137cc
   14000caa9:	cmp    rbx,QWORD PTR [rsi+0x90]
   14000cab0:	je     0x14000cb6f
   14000cab6:	mov    DWORD PTR [rsp+0x48],r14d
   14000cabb:	mov    QWORD PTR [rsp+0x50],r14
   14000cac0:	mov    QWORD PTR [rsp+0x58],r14
   14000cac5:	mov    QWORD PTR [rsp+0x60],r14
   14000caca:	mov    QWORD PTR [rsp+0x68],r14
   14000cacf:	mov    QWORD PTR [rsp+0x70],r14
   14000cad4:	lea    rdx,[rbx+0x50]
   14000cad8:	or     r8,0xffffffffffffffff
   14000cadc:	lea    rcx,[rsp+0x48]
   14000cae1:	call   0x140010560
   14000cae6:	nop
   14000cae7:	lea    rcx,[rsp+0x48]
   14000caec:	call   0x140011370
   14000caf1:	nop
   14000caf2:	lea    rcx,[rsp+0x48]
   14000caf7:	call   0x140011370
   14000cafc:	mov    rdi,rax
   14000caff:	mov    rcx,rax
   14000cb02:	call   0x140009130
   14000cb07:	lea    rcx,[rax+0x2]
   14000cb0b:	call   0x14001396c
   14000cb10:	mov    rbx,rax
   14000cb13:	test   rax,rax
   14000cb16:	je     0x14000cb23
   14000cb18:	mov    r8,rdi
   14000cb1b:	mov    rcx,rax
   14000cb1e:	call   0x140008fd0
   14000cb23:	mov    QWORD PTR [rbp-0x40],rbx
   14000cb27:	mov    rax,QWORD PTR [rsp+0x68]
   14000cb2c:	mov    rcx,r14
   14000cb2f:	mov    QWORD PTR [rsp+0x68],rcx
   14000cb34:	test   rax,rax
   14000cb37:	je     0x14000cb46
   14000cb39:	mov    rcx,rax
   14000cb3c:	call   0x140013924
   14000cb41:	mov    rcx,QWORD PTR [rsp+0x68]
   14000cb46:	call   0x1400137cc
   14000cb4b:	mov    rax,QWORD PTR [rsp+0x58]
   14000cb50:	mov    rcx,r14
   14000cb53:	mov    QWORD PTR [rsp+0x58],rcx
   14000cb58:	test   rax,rax
   14000cb5b:	je     0x14000cb6a
   14000cb5d:	mov    rcx,rax
   14000cb60:	call   0x140013924
   14000cb65:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cb6a:	call   0x1400137cc
   14000cb6f:	xor    r9d,r9d
   14000cb72:	or     r8,0xffffffffffffffff
   14000cb76:	lea    rdx,[rip+0x22683]        # 0x14002f200
   14000cb7d:	lea    rcx,[rbp-0x78]
   14000cb81:	call   0x14000fb80
   14000cb86:	mov    r14,rax
   14000cb89:	mov    rdi,QWORD PTR [rsi+0x90]
   14000cb90:	mov    rbx,QWORD PTR [rdi+0x8]
   14000cb94:	cmp    BYTE PTR [rbx+0x19],0x0
   14000cb98:	jne    0x14000cbc9
   14000cb9a:	nop    WORD PTR [rax+rax*1+0x0]
   14000cba0:	lea    rcx,[rbx+0x20]
   14000cba4:	xor    r9d,r9d
   14000cba7:	xor    r8d,r8d
   14000cbaa:	mov    rdx,r14
   14000cbad:	call   0x1400108a0
   14000cbb2:	test   ax,ax
   14000cbb5:	jns    0x14000cbbd
   14000cbb7:	mov    rbx,QWORD PTR [rbx+0x10]
   14000cbbb:	jmp    0x14000cbc3
   14000cbbd:	mov    rdi,rbx
   14000cbc0:	mov    rbx,QWORD PTR [rbx]
   14000cbc3:	cmp    BYTE PTR [rbx+0x19],0x0
   14000cbc7:	je     0x14000cba0
   14000cbc9:	cmp    rdi,QWORD PTR [rsi+0x90]
   14000cbd0:	je     0x14000cbf0
   14000cbd2:	lea    rdx,[rdi+0x20]
   14000cbd6:	xor    r9d,r9d
   14000cbd9:	xor    r8d,r8d
   14000cbdc:	mov    rcx,r14
   14000cbdf:	call   0x1400108a0
   14000cbe4:	test   ax,ax
   14000cbe7:	js     0x14000cbf0
   14000cbe9:	mov    QWORD PTR [rsp+0x40],rdi
   14000cbee:	jmp    0x14000cbfc
   14000cbf0:	mov    rax,QWORD PTR [rsi+0x90]
   14000cbf7:	mov    QWORD PTR [rsp+0x40],rax
   14000cbfc:	lea    rbx,[rsp+0x40]
   14000cc01:	mov    rbx,QWORD PTR [rbx]
   14000cc04:	mov    rax,QWORD PTR [rbp-0x58]
   14000cc08:	xor    edi,edi
   14000cc0a:	mov    ecx,edi
   14000cc0c:	mov    QWORD PTR [rbp-0x58],rcx
   14000cc10:	test   rax,rax
   14000cc13:	je     0x14000cc21
   14000cc15:	mov    rcx,rax
   14000cc18:	call   0x140013924
   14000cc1d:	mov    rcx,QWORD PTR [rbp-0x58]
   14000cc21:	call   0x1400137cc
   14000cc26:	mov    rax,QWORD PTR [rbp-0x68]
   14000cc2a:	mov    rcx,rdi
   14000cc2d:	mov    QWORD PTR [rbp-0x68],rcx
   14000cc31:	test   rax,rax
   14000cc34:	je     0x14000cc42
   14000cc36:	mov    rcx,rax
   14000cc39:	call   0x140013924
   14000cc3e:	mov    rcx,QWORD PTR [rbp-0x68]
   14000cc42:	call   0x1400137cc
   14000cc47:	cmp    rbx,QWORD PTR [rsi+0x90]
   14000cc4e:	je     0x14000cc78
   14000cc50:	xor    r9d,r9d
   14000cc53:	or     r8,0xffffffffffffffff
   14000cc57:	lea    rdx,[rip+0x2221a]        # 0x14002ee78
   14000cc5e:	lea    rcx,[rsp+0x48]
   14000cc63:	call   0x14000fb80
   14000cc68:	lea    rcx,[rbx+0x50]
   14000cc6c:	lea    r8,[rbp+0x60]
   14000cc70:	mov    rdx,rax
   14000cc73:	call   0x140012020
   14000cc78:	mov    QWORD PTR [rbp-0x38],rdi
   14000cc7c:	mov    rcx,QWORD PTR [rsi+0x78]
   14000cc80:	mov    rax,QWORD PTR [rcx]
   14000cc83:	mov    r9d,edi
   14000cc86:	cmp    DWORD PTR [rsi+0x80],edi
   14000cc8c:	setne  r9b
   14000cc90:	lea    rdx,[rbp-0x38]
   14000cc94:	mov    QWORD PTR [rsp+0x20],rdx
   14000cc99:	xor    r8d,r8d
   14000cc9c:	xor    edx,edx
   14000cc9e:	call   QWORD PTR [rax+0x30]
   14000cca1:	mov    DWORD PTR [rsi+0x28],eax
   14000cca4:	test   eax,eax
   14000cca6:	js     0x14000cff3
   14000ccac:	lea    r8,[rbp-0x40]
   14000ccb0:	cmp    QWORD PTR [rbp-0x40],rdi
   14000ccb4:	cmove  r8,rdi
   14000ccb8:	lea    rdx,[rbp-0x48]
   14000ccbc:	cmp    QWORD PTR [rbp-0x48],rdi
   14000ccc0:	cmove  rdx,rdi
   14000ccc4:	lea    rcx,[rbp+0x68]
   14000ccc8:	cmp    QWORD PTR [rbp+0x68],rdi
   14000cccc:	cmove  rcx,rdi
   14000ccd0:	mov    eax,DWORD PTR [rbp+0x60]
   14000ccd3:	mov    DWORD PTR [rsp+0x38],eax
   14000ccd7:	mov    QWORD PTR [rsp+0x30],r8
   14000ccdc:	mov    QWORD PTR [rsp+0x28],rdx
   14000cce1:	mov    QWORD PTR [rsp+0x20],rcx
   14000cce6:	mov    r9,r13
   14000cce9:	mov    r8,r12
   14000ccec:	mov    rdx,QWORD PTR [rbp-0x38]
   14000ccf0:	mov    rcx,rsi
   14000ccf3:	call   0x14000de10
   14000ccf8:	mov    rcx,QWORD PTR [rbp-0x38]
   14000ccfc:	mov    rax,QWORD PTR [rcx]
   14000ccff:	call   QWORD PTR [rax+0x10]
   14000cd02:	mov    rdx,QWORD PTR [rbp+0x68]
   14000cd06:	test   rdx,rdx
   14000cd09:	je     0x14000cde7
   14000cd0f:	xor    r9d,r9d
   14000cd12:	or     r8,0xffffffffffffffff
   14000cd16:	lea    rcx,[rsp+0x48]
   14000cd1b:	call   0x14000fb80
   14000cd20:	nop
   14000cd21:	xor    r9d,r9d
   14000cd24:	or     r8,0xffffffffffffffff
   14000cd28:	lea    rdx,[rip+0x224c1]        # 0x14002f1f0
   14000cd2f:	lea    rcx,[rbp-0x78]
   14000cd33:	call   0x14000fb80
   14000cd38:	nop
   14000cd39:	mov    rdx,rax
   14000cd3c:	lea    rcx,[rsp+0x78]
   14000cd41:	call   0x1400047c0
   14000cd46:	or     r8,0xffffffffffffffff
   14000cd4a:	lea    rdx,[rsp+0x48]
   14000cd4f:	mov    rcx,rax
   14000cd52:	call   0x140010560
   14000cd57:	nop
   14000cd58:	mov    rax,QWORD PTR [rbp-0x58]
   14000cd5c:	mov    rcx,rdi
   14000cd5f:	mov    QWORD PTR [rbp-0x58],rcx
   14000cd63:	test   rax,rax
   14000cd66:	je     0x14000cd74
   14000cd68:	mov    rcx,rax
   14000cd6b:	call   0x140013924
   14000cd70:	mov    rcx,QWORD PTR [rbp-0x58]
   14000cd74:	call   0x1400137cc
   14000cd79:	mov    rax,QWORD PTR [rbp-0x68]
   14000cd7d:	mov    rcx,rdi
   14000cd80:	mov    QWORD PTR [rbp-0x68],rcx
   14000cd84:	test   rax,rax
   14000cd87:	je     0x14000cd95
   14000cd89:	mov    rcx,rax
   14000cd8c:	call   0x140013924
   14000cd91:	mov    rcx,QWORD PTR [rbp-0x68]
   14000cd95:	call   0x1400137cc
   14000cd9a:	nop
   14000cd9b:	mov    rax,QWORD PTR [rsp+0x68]
   14000cda0:	mov    rcx,rdi
   14000cda3:	mov    QWORD PTR [rsp+0x68],rcx
   14000cda8:	test   rax,rax
   14000cdab:	je     0x14000cdba
   14000cdad:	mov    rcx,rax
   14000cdb0:	call   0x140013924
   14000cdb5:	mov    rcx,QWORD PTR [rsp+0x68]
   14000cdba:	call   0x1400137cc
   14000cdbf:	mov    rax,QWORD PTR [rsp+0x58]
   14000cdc4:	mov    rcx,rdi
   14000cdc7:	mov    QWORD PTR [rsp+0x58],rcx
   14000cdcc:	test   rax,rax
   14000cdcf:	je     0x14000cdde
   14000cdd1:	mov    rcx,rax
   14000cdd4:	call   0x140013924
   14000cdd9:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cdde:	call   0x1400137cc
   14000cde3:	mov    rdx,QWORD PTR [rbp+0x68]
   14000cde7:	mov    rax,QWORD PTR [rbp-0x48]
   14000cdeb:	test   rax,rax
   14000cdee:	je     0x14000ced3
   14000cdf4:	xor    r9d,r9d
   14000cdf7:	or     r8,0xffffffffffffffff
   14000cdfb:	mov    rdx,rax
   14000cdfe:	lea    rcx,[rsp+0x48]
   14000ce03:	call   0x14000fb80
   14000ce08:	nop
   14000ce09:	xor    r9d,r9d
   14000ce0c:	or     r8,0xffffffffffffffff
   14000ce10:	lea    rdx,[rip+0x223dd]        # 0x14002f1f4
   14000ce17:	lea    rcx,[rbp-0x78]
   14000ce1b:	call   0x14000fb80
   14000ce20:	nop
   14000ce21:	mov    rdx,rax
   14000ce24:	lea    rcx,[rsp+0x78]
   14000ce29:	call   0x1400047c0
   14000ce2e:	or     r8,0xffffffffffffffff
   14000ce32:	lea    rdx,[rsp+0x48]
   14000ce37:	mov    rcx,rax
   14000ce3a:	call   0x140010560
   14000ce3f:	nop
   14000ce40:	mov    rax,QWORD PTR [rbp-0x58]
   14000ce44:	mov    rcx,rdi
   14000ce47:	mov    QWORD PTR [rbp-0x58],rcx
   14000ce4b:	test   rax,rax
   14000ce4e:	je     0x14000ce5c
   14000ce50:	mov    rcx,rax
   14000ce53:	call   0x140013924
   14000ce58:	mov    rcx,QWORD PTR [rbp-0x58]
   14000ce5c:	call   0x1400137cc
   14000ce61:	mov    rax,QWORD PTR [rbp-0x68]
   14000ce65:	mov    rcx,rdi
   14000ce68:	mov    QWORD PTR [rbp-0x68],rcx
   14000ce6c:	test   rax,rax
   14000ce6f:	je     0x14000ce7d
   14000ce71:	mov    rcx,rax
   14000ce74:	call   0x140013924
   14000ce79:	mov    rcx,QWORD PTR [rbp-0x68]
   14000ce7d:	call   0x1400137cc
   14000ce82:	nop
   14000ce83:	mov    rax,QWORD PTR [rsp+0x68]
   14000ce88:	mov    rcx,rdi
   14000ce8b:	mov    QWORD PTR [rsp+0x68],rcx
   14000ce90:	test   rax,rax
   14000ce93:	je     0x14000cea2
   14000ce95:	mov    rcx,rax
   14000ce98:	call   0x140013924
   14000ce9d:	mov    rcx,QWORD PTR [rsp+0x68]
   14000cea2:	call   0x1400137cc
   14000cea7:	mov    rax,QWORD PTR [rsp+0x58]
   14000ceac:	mov    rcx,rdi
   14000ceaf:	mov    QWORD PTR [rsp+0x58],rcx
   14000ceb4:	test   rax,rax
   14000ceb7:	je     0x14000cec6
   14000ceb9:	mov    rcx,rax
   14000cebc:	call   0x140013924
   14000cec1:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cec6:	call   0x1400137cc
   14000cecb:	mov    rdx,QWORD PTR [rbp+0x68]
   14000cecf:	mov    rax,QWORD PTR [rbp-0x48]
   14000ced3:	mov    rcx,QWORD PTR [rbp-0x40]
   14000ced7:	test   rcx,rcx
   14000ceda:	je     0x14000cfc3
   14000cee0:	xor    r9d,r9d
   14000cee3:	or     r8,0xffffffffffffffff
   14000cee7:	mov    rdx,rcx
   14000ceea:	lea    rcx,[rsp+0x48]
   14000ceef:	call   0x14000fb80
   14000cef4:	nop
   14000cef5:	xor    r9d,r9d
   14000cef8:	or     r8,0xffffffffffffffff
   14000cefc:	lea    rdx,[rip+0x222f5]        # 0x14002f1f8
   14000cf03:	lea    rcx,[rbp-0x78]
   14000cf07:	call   0x14000fb80
   14000cf0c:	nop
   14000cf0d:	mov    rdx,rax
   14000cf10:	lea    rcx,[rsp+0x78]
   14000cf15:	call   0x1400047c0
   14000cf1a:	or     r8,0xffffffffffffffff
   14000cf1e:	lea    rdx,[rsp+0x48]
   14000cf23:	mov    rcx,rax
   14000cf26:	call   0x140010560
   14000cf2b:	nop
   14000cf2c:	mov    rax,QWORD PTR [rbp-0x58]
   14000cf30:	mov    rcx,rdi
   14000cf33:	mov    QWORD PTR [rbp-0x58],rcx
   14000cf37:	test   rax,rax
   14000cf3a:	je     0x14000cf48
   14000cf3c:	mov    rcx,rax
   14000cf3f:	call   0x140013924
   14000cf44:	mov    rcx,QWORD PTR [rbp-0x58]
   14000cf48:	call   0x1400137cc
   14000cf4d:	mov    rax,QWORD PTR [rbp-0x68]
   14000cf51:	mov    rcx,rdi
   14000cf54:	mov    QWORD PTR [rbp-0x68],rcx
   14000cf58:	test   rax,rax
   14000cf5b:	je     0x14000cf69
   14000cf5d:	mov    rcx,rax
   14000cf60:	call   0x140013924
   14000cf65:	mov    rcx,QWORD PTR [rbp-0x68]
   14000cf69:	call   0x1400137cc
   14000cf6e:	nop
   14000cf6f:	mov    rax,QWORD PTR [rsp+0x68]
   14000cf74:	mov    rcx,rdi
   14000cf77:	mov    QWORD PTR [rsp+0x68],rcx
   14000cf7c:	test   rax,rax
   14000cf7f:	je     0x14000cf8e
   14000cf81:	mov    rcx,rax
   14000cf84:	call   0x140013924
   14000cf89:	mov    rcx,QWORD PTR [rsp+0x68]
   14000cf8e:	call   0x1400137cc
   14000cf93:	mov    rax,QWORD PTR [rsp+0x58]
   14000cf98:	mov    rcx,rdi
   14000cf9b:	mov    QWORD PTR [rsp+0x58],rcx
   14000cfa0:	test   rax,rax
   14000cfa3:	je     0x14000cfb2
   14000cfa5:	mov    rcx,rax
   14000cfa8:	call   0x140013924
   14000cfad:	mov    rcx,QWORD PTR [rsp+0x58]
   14000cfb2:	call   0x1400137cc
   14000cfb7:	mov    rdx,QWORD PTR [rbp+0x68]
   14000cfbb:	mov    rax,QWORD PTR [rbp-0x48]
   14000cfbf:	mov    rcx,QWORD PTR [rbp-0x40]
   14000cfc3:	test   rdx,rdx
   14000cfc6:	je     0x14000cfd8
   14000cfc8:	mov    rcx,rdx
   14000cfcb:	call   0x14001392c
   14000cfd0:	mov    rax,QWORD PTR [rbp-0x48]
   14000cfd4:	mov    rcx,QWORD PTR [rbp-0x40]
   14000cfd8:	test   rax,rax
   14000cfdb:	je     0x14000cfe9
   14000cfdd:	mov    rcx,rax
   14000cfe0:	call   0x14001392c
   14000cfe5:	mov    rcx,QWORD PTR [rbp-0x40]
   14000cfe9:	test   rcx,rcx
   14000cfec:	je     0x14000cff3
   14000cfee:	call   0x14001392c
   14000cff3:	mov    QWORD PTR [r15],rdi
   14000cff6:	mov    QWORD PTR [r15+0x8],rdi
   14000cffa:	call   0x140005030
   14000cfff:	mov    rdx,rax
   14000d002:	mov    rax,QWORD PTR [rsp+0x78]
   14000d007:	mov    QWORD PTR [r15],rax
   14000d00a:	mov    rax,QWORD PTR [rbp-0x80]
   14000d00e:	mov    rcx,QWORD PTR [r15+0x8]
   14000d012:	mov    QWORD PTR [rbp-0x80],rcx
   14000d016:	mov    QWORD PTR [r15+0x8],rax
   14000d01a:	mov    QWORD PTR [rsp+0x78],rdx
   14000d01f:	mov    rdx,QWORD PTR [rdx+0x8]
   14000d023:	lea    rcx,[rsp+0x78]
   14000d028:	call   0x140004f50
   14000d02d:	mov    rax,QWORD PTR [rsp+0x78]
   14000d032:	mov    QWORD PTR [rax+0x8],rax
   14000d036:	mov    rax,QWORD PTR [rsp+0x78]
   14000d03b:	mov    QWORD PTR [rax],rax
   14000d03e:	mov    rax,QWORD PTR [rsp+0x78]
   14000d043:	mov    QWORD PTR [rax+0x10],rax
   14000d047:	mov    QWORD PTR [rbp-0x80],rdi
   14000d04b:	mov    rcx,QWORD PTR [rsp+0x78]
   14000d050:	call   0x1400137cc
   14000d055:	mov    rax,r15
   14000d058:	mov    rbx,QWORD PTR [rsp+0x158]
   14000d060:	add    rsp,0x110
   14000d067:	pop    r15
   14000d069:	pop    r14
   14000d06b:	pop    r13
   14000d06d:	pop    r12
   14000d06f:	pop    rdi
   14000d070:	pop    rsi
   14000d071:	pop    rbp
   14000d072:	ret    
   14000d073:	int3   
   14000d074:	int3   
   14000d075:	int3   
   14000d076:	int3   
   14000d077:	int3   
   14000d078:	int3   
   14000d079:	int3   
   14000d07a:	int3   
   14000d07b:	int3   
   14000d07c:	int3   
   14000d07d:	int3   
   14000d07e:	int3   
   14000d07f:	int3   
   14000d080:	mov    DWORD PTR [rsp+0x20],r9d
   14000d085:	mov    QWORD PTR [rsp+0x18],r8
   14000d08a:	mov    QWORD PTR [rsp+0x10],rdx
   14000d08f:	mov    QWORD PTR [rsp+0x8],rcx
   14000d094:	push   rbp
   14000d095:	push   rbx
   14000d096:	push   rsi
   14000d097:	push   rdi
   14000d098:	push   r12
   14000d09a:	push   r13
   14000d09c:	push   r14
   14000d09e:	push   r15
   14000d0a0:	lea    rbp,[rsp-0x17]
   14000d0a5:	sub    rsp,0xd8
   14000d0ac:	mov    QWORD PTR [rbp+0x7],0xfffffffffffffffe
   14000d0b4:	xor    edi,edi
   14000d0b6:	lea    r13d,[rdi+0x1]
   14000d0ba:	mov    QWORD PTR [rbp-0x31],rdi
   14000d0be:	mov    QWORD PTR [rbp-0x39],rdi
   14000d0c2:	mov    QWORD PTR [rbp-0x41],rdi
   14000d0c6:	mov    DWORD PTR [rbp-0x49],edi
   14000d0c9:	xor    r9d,r9d
   14000d0cc:	or     r8,0xffffffffffffffff
   14000d0d0:	lea    rdx,[rip+0x22055]        # 0x14002f12c
   14000d0d7:	lea    rcx,[rbp-0x79]
   14000d0db:	call   0x14000fb80
   14000d0e0:	mov    r15,rax
   14000d0e3:	mov    r14,QWORD PTR [rbp+0x7f]
   14000d0e7:	mov    rsi,QWORD PTR [r14]
   14000d0ea:	mov    rbx,QWORD PTR [rsi+0x8]
   14000d0ee:	cmp    BYTE PTR [rbx+0x19],dil
   14000d0f2:	jne    0x14000d129
   14000d0f4:	nop    DWORD PTR [rax+0x0]
   14000d0f8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d100:	lea    rcx,[rbx+0x20]
   14000d104:	xor    r9d,r9d
   14000d107:	xor    r8d,r8d
   14000d10a:	mov    rdx,r15
   14000d10d:	call   0x1400108a0
   14000d112:	test   ax,ax
   14000d115:	jns    0x14000d11d
   14000d117:	mov    rbx,QWORD PTR [rbx+0x10]
   14000d11b:	jmp    0x14000d123
   14000d11d:	mov    rsi,rbx
   14000d120:	mov    rbx,QWORD PTR [rbx]
   14000d123:	cmp    BYTE PTR [rbx+0x19],0x0
   14000d127:	je     0x14000d100
   14000d129:	cmp    rsi,QWORD PTR [r14]
   14000d12c:	je     0x14000d14c
   14000d12e:	lea    rdx,[rsi+0x20]
   14000d132:	xor    r9d,r9d
   14000d135:	xor    r8d,r8d
   14000d138:	mov    rcx,r15
   14000d13b:	call   0x1400108a0
   14000d140:	test   ax,ax
   14000d143:	js     0x14000d14c
   14000d145:	mov    QWORD PTR [rsp+0x40],rsi
   14000d14a:	jmp    0x14000d154
   14000d14c:	mov    rax,QWORD PTR [r14]
   14000d14f:	mov    QWORD PTR [rsp+0x40],rax
   14000d154:	lea    rbx,[rsp+0x40]
   14000d159:	mov    rbx,QWORD PTR [rbx]
   14000d15c:	mov    rax,QWORD PTR [rbp-0x59]
   14000d160:	mov    rcx,rdi
   14000d163:	mov    QWORD PTR [rbp-0x59],rcx
   14000d167:	test   rax,rax
   14000d16a:	je     0x14000d178
   14000d16c:	mov    rcx,rax
   14000d16f:	call   0x140013924
   14000d174:	mov    rcx,QWORD PTR [rbp-0x59]
   14000d178:	call   0x1400137cc
   14000d17d:	mov    rax,QWORD PTR [rbp-0x69]
   14000d181:	mov    rcx,rdi
   14000d184:	mov    QWORD PTR [rbp-0x69],rcx
   14000d188:	test   rax,rax
   14000d18b:	je     0x14000d199
   14000d18d:	mov    rcx,rax
   14000d190:	call   0x140013924
   14000d195:	mov    rcx,QWORD PTR [rbp-0x69]
   14000d199:	call   0x1400137cc
   14000d19e:	cmp    rbx,QWORD PTR [r14]
   14000d1a1:	je     0x14000d1ca
   14000d1a3:	xor    r9d,r9d
   14000d1a6:	or     r8,0xffffffffffffffff
   14000d1aa:	lea    rdx,[rip+0x21f83]        # 0x14002f134
   14000d1b1:	lea    rcx,[rbp-0x29]
   14000d1b5:	call   0x14000fb80
   14000d1ba:	lea    rcx,[rbx+0x50]
   14000d1be:	lea    r8,[rbp-0x49]
   14000d1c2:	mov    rdx,rax
   14000d1c5:	call   0x140012020
   14000d1ca:	mov    r12d,DWORD PTR [rbp-0x49]
   14000d1ce:	xor    r9d,r9d
   14000d1d1:	or     r8,0xffffffffffffffff
   14000d1d5:	lea    rdx,[rip+0x22014]        # 0x14002f1f0
   14000d1dc:	lea    rcx,[rbp-0x29]
   14000d1e0:	call   0x14000fb80
   14000d1e5:	mov    r15,rax
   14000d1e8:	mov    rsi,QWORD PTR [r14]
   14000d1eb:	mov    rbx,QWORD PTR [rsi+0x8]
   14000d1ef:	cmp    BYTE PTR [rbx+0x19],0x0
   14000d1f3:	jne    0x14000d229
   14000d1f5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000d200:	lea    rcx,[rbx+0x20]
   14000d204:	xor    r9d,r9d
   14000d207:	xor    r8d,r8d
   14000d20a:	mov    rdx,r15
   14000d20d:	call   0x1400108a0
   14000d212:	test   ax,ax
   14000d215:	jns    0x14000d21d
   14000d217:	mov    rbx,QWORD PTR [rbx+0x10]
   14000d21b:	jmp    0x14000d223
   14000d21d:	mov    rsi,rbx
   14000d220:	mov    rbx,QWORD PTR [rbx]
   14000d223:	cmp    BYTE PTR [rbx+0x19],0x0
   14000d227:	je     0x14000d200
   14000d229:	cmp    rsi,QWORD PTR [r14]
   14000d22c:	je     0x14000d24c
   14000d22e:	lea    rdx,[rsi+0x20]
   14000d232:	xor    r9d,r9d
   14000d235:	xor    r8d,r8d
   14000d238:	mov    rcx,r15
   14000d23b:	call   0x1400108a0
   14000d240:	test   ax,ax
   14000d243:	js     0x14000d24c
   14000d245:	mov    QWORD PTR [rsp+0x40],rsi
   14000d24a:	jmp    0x14000d254
   14000d24c:	mov    rax,QWORD PTR [r14]
   14000d24f:	mov    QWORD PTR [rsp+0x40],rax
   14000d254:	lea    rbx,[rsp+0x40]
   14000d259:	mov    rbx,QWORD PTR [rbx]
   14000d25c:	mov    rax,QWORD PTR [rbp-0x9]
   14000d260:	mov    rcx,rdi
   14000d263:	mov    QWORD PTR [rbp-0x9],rcx
   14000d267:	test   rax,rax
   14000d26a:	je     0x14000d278
   14000d26c:	mov    rcx,rax
   14000d26f:	call   0x140013924
   14000d274:	mov    rcx,QWORD PTR [rbp-0x9]
   14000d278:	call   0x1400137cc
   14000d27d:	mov    rax,QWORD PTR [rbp-0x19]
   14000d281:	mov    rcx,rdi
   14000d284:	mov    QWORD PTR [rbp-0x19],rcx
   14000d288:	test   rax,rax
   14000d28b:	je     0x14000d299
   14000d28d:	mov    rcx,rax
   14000d290:	call   0x140013924
   14000d295:	mov    rcx,QWORD PTR [rbp-0x19]
   14000d299:	call   0x1400137cc
   14000d29e:	cmp    rbx,QWORD PTR [r14]
   14000d2a1:	je     0x14000d350
   14000d2a7:	mov    DWORD PTR [rbp-0x79],edi
   14000d2aa:	mov    QWORD PTR [rbp-0x71],rdi
   14000d2ae:	mov    QWORD PTR [rbp-0x69],rdi
   14000d2b2:	mov    QWORD PTR [rbp-0x61],rdi
   14000d2b6:	mov    QWORD PTR [rbp-0x59],rdi
   14000d2ba:	mov    QWORD PTR [rbp-0x51],rdi
   14000d2be:	lea    rdx,[rbx+0x50]
   14000d2c2:	or     r8,0xffffffffffffffff
   14000d2c6:	lea    rcx,[rbp-0x79]
   14000d2ca:	call   0x140010560
   14000d2cf:	nop
   14000d2d0:	lea    rcx,[rbp-0x79]
   14000d2d4:	call   0x140011370
   14000d2d9:	nop
   14000d2da:	lea    rcx,[rbp-0x79]
   14000d2de:	call   0x140011370
   14000d2e3:	mov    rsi,rax
   14000d2e6:	mov    rcx,rax
   14000d2e9:	call   0x140009130
   14000d2ee:	lea    rcx,[rax+0x2]
   14000d2f2:	call   0x14001396c
   14000d2f7:	mov    rbx,rax
   14000d2fa:	test   rax,rax
   14000d2fd:	je     0x14000d30a
   14000d2ff:	mov    r8,rsi
   14000d302:	mov    rcx,rax
   14000d305:	call   0x140008fd0
   14000d30a:	mov    QWORD PTR [rbp-0x31],rbx
   14000d30e:	mov    rax,QWORD PTR [rbp-0x59]
   14000d312:	mov    rcx,rdi
   14000d315:	mov    QWORD PTR [rbp-0x59],rcx
   14000d319:	test   rax,rax
   14000d31c:	je     0x14000d32a
   14000d31e:	mov    rcx,rax
   14000d321:	call   0x140013924
   14000d326:	mov    rcx,QWORD PTR [rbp-0x59]
   14000d32a:	call   0x1400137cc
   14000d32f:	mov    rax,QWORD PTR [rbp-0x69]
   14000d333:	mov    rcx,rdi
   14000d336:	mov    QWORD PTR [rbp-0x69],rcx
   14000d33a:	test   rax,rax
   14000d33d:	je     0x14000d34b
   14000d33f:	mov    rcx,rax
   14000d342:	call   0x140013924
   14000d347:	mov    rcx,QWORD PTR [rbp-0x69]
   14000d34b:	call   0x1400137cc
   14000d350:	xor    r9d,r9d
   14000d353:	or     r8,0xffffffffffffffff
   14000d357:	lea    rdx,[rip+0x21e96]        # 0x14002f1f4
   14000d35e:	lea    rcx,[rbp-0x29]
   14000d362:	call   0x14000fb80
   14000d367:	mov    r15,rax
   14000d36a:	mov    rsi,QWORD PTR [r14]
   14000d36d:	mov    rbx,QWORD PTR [rsi+0x8]
   14000d371:	cmp    BYTE PTR [rbx+0x19],0x0
   14000d375:	jne    0x14000d3a9
   14000d377:	nop    WORD PTR [rax+rax*1+0x0]
   14000d380:	lea    rcx,[rbx+0x20]
   14000d384:	xor    r9d,r9d
   14000d387:	xor    r8d,r8d
   14000d38a:	mov    rdx,r15
   14000d38d:	call   0x1400108a0
   14000d392:	test   ax,ax
   14000d395:	jns    0x14000d39d
   14000d397:	mov    rbx,QWORD PTR [rbx+0x10]
   14000d39b:	jmp    0x14000d3a3
   14000d39d:	mov    rsi,rbx
   14000d3a0:	mov    rbx,QWORD PTR [rbx]
   14000d3a3:	cmp    BYTE PTR [rbx+0x19],0x0
   14000d3a7:	je     0x14000d380
   14000d3a9:	cmp    rsi,QWORD PTR [r14]
   14000d3ac:	je     0x14000d3cc
   14000d3ae:	lea    rdx,[rsi+0x20]
   14000d3b2:	xor    r9d,r9d
   14000d3b5:	xor    r8d,r8d
   14000d3b8:	mov    rcx,r15
   14000d3bb:	call   0x1400108a0
   14000d3c0:	test   ax,ax
   14000d3c3:	js     0x14000d3cc
   14000d3c5:	mov    QWORD PTR [rsp+0x40],rsi
   14000d3ca:	jmp    0x14000d3d4
   14000d3cc:	mov    rax,QWORD PTR [r14]
   14000d3cf:	mov    QWORD PTR [rsp+0x40],rax
   14000d3d4:	lea    rbx,[rsp+0x40]
   14000d3d9:	mov    rbx,QWORD PTR [rbx]
   14000d3dc:	mov    rax,QWORD PTR [rbp-0x9]
   14000d3e0:	mov    rcx,rdi
   14000d3e3:	mov    QWORD PTR [rbp-0x9],rcx
   14000d3e7:	test   rax,rax
   14000d3ea:	je     0x14000d3f8
   14000d3ec:	mov    rcx,rax
   14000d3ef:	call   0x140013924
   14000d3f4:	mov    rcx,QWORD PTR [rbp-0x9]
   14000d3f8:	call   0x1400137cc
   14000d3fd:	mov    rax,QWORD PTR [rbp-0x19]
   14000d401:	mov    rcx,rdi
   14000d404:	mov    QWORD PTR [rbp-0x19],rcx
   14000d408:	test   rax,rax
   14000d40b:	je     0x14000d419
   14000d40d:	mov    rcx,rax
   14000d410:	call   0x140013924
   14000d415:	mov    rcx,QWORD PTR [rbp-0x19]
   14000d419:	call   0x1400137cc
   14000d41e:	cmp    rbx,QWORD PTR [r14]
   14000d421:	je     0x14000d4d0
   14000d427:	mov    DWORD PTR [rbp-0x79],edi
   14000d42a:	mov    QWORD PTR [rbp-0x71],rdi
   14000d42e:	mov    QWORD PTR [rbp-0x69],rdi
   14000d432:	mov    QWORD PTR [rbp-0x61],rdi
   14000d436:	mov    QWORD PTR [rbp-0x59],rdi
   14000d43a:	mov    QWORD PTR [rbp-0x51],rdi
   14000d43e:	lea    rdx,[rbx+0x50]
   14000d442:	or     r8,0xffffffffffffffff
   14000d446:	lea    rcx,[rbp-0x79]
   14000d44a:	call   0x140010560
   14000d44f:	nop
   14000d450:	lea    rcx,[rbp-0x79]
   14000d454:	call   0x140011370
   14000d459:	nop
   14000d45a:	lea    rcx,[rbp-0x79]
   14000d45e:	call   0x140011370
   14000d463:	mov    rsi,rax
   14000d466:	mov    rcx,rax
   14000d469:	call   0x140009130
   14000d46e:	lea    rcx,[rax+0x2]
   14000d472:	call   0x14001396c
   14000d477:	mov    rbx,rax
   14000d47a:	test   rax,rax
   14000d47d:	je     0x14000d48a
   14000d47f:	mov    r8,rsi
   14000d482:	mov    rcx,rax
   14000d485:	call   0x140008fd0
   14000d48a:	mov    QWORD PTR [rbp-0x39],rbx
   14000d48e:	mov    rax,QWORD PTR [rbp-0x59]
   14000d492:	mov    rcx,rdi
   14000d495:	mov    QWORD PTR [rbp-0x59],rcx
   14000d499:	test   rax,rax
   14000d49c:	je     0x14000d4aa
   14000d49e:	mov    rcx,rax
   14000d4a1:	call   0x140013924
   14000d4a6:	mov    rcx,QWORD PTR [rbp-0x59]
   14000d4aa:	call   0x1400137cc
   14000d4af:	mov    rax,QWORD PTR [rbp-0x69]
   14000d4b3:	mov    rcx,rdi
   14000d4b6:	mov    QWORD PTR [rbp-0x69],rcx
   14000d4ba:	test   rax,rax
   14000d4bd:	je     0x14000d4cb
   14000d4bf:	mov    rcx,rax
   14000d4c2:	call   0x140013924
   14000d4c7:	mov    rcx,QWORD PTR [rbp-0x69]
   14000d4cb:	call   0x1400137cc
   14000d4d0:	xor    r9d,r9d
   14000d4d3:	or     r8,0xffffffffffffffff
   14000d4d7:	lea    rdx,[rip+0x21d1a]        # 0x14002f1f8
   14000d4de:	lea    rcx,[rbp-0x29]
   14000d4e2:	call   0x14000fb80
   14000d4e7:	mov    r15,rax
   14000d4ea:	mov    rsi,QWORD PTR [r14]
   14000d4ed:	mov    rbx,QWORD PTR [rsi+0x8]
   14000d4f1:	cmp    BYTE PTR [rbx+0x19],0x0
   14000d4f5:	jne    0x14000d529
   14000d4f7:	nop    WORD PTR [rax+rax*1+0x0]
   14000d500:	lea    rcx,[rbx+0x20]
   14000d504:	xor    r9d,r9d
   14000d507:	xor    r8d,r8d
   14000d50a:	mov    rdx,r15
   14000d50d:	call   0x1400108a0
   14000d512:	test   ax,ax
   14000d515:	jns    0x14000d51d
   14000d517:	mov    rbx,QWORD PTR [rbx+0x10]
   14000d51b:	jmp    0x14000d523
   14000d51d:	mov    rsi,rbx
   14000d520:	mov    rbx,QWORD PTR [rbx]
   14000d523:	cmp    BYTE PTR [rbx+0x19],0x0
   14000d527:	je     0x14000d500
   14000d529:	cmp    rsi,QWORD PTR [r14]
   14000d52c:	je     0x14000d54c
   14000d52e:	lea    rdx,[rsi+0x20]
   14000d532:	xor    r9d,r9d
   14000d535:	xor    r8d,r8d
   14000d538:	mov    rcx,r15
   14000d53b:	call   0x1400108a0
   14000d540:	test   ax,ax
   14000d543:	js     0x14000d54c
   14000d545:	mov    QWORD PTR [rsp+0x40],rsi
   14000d54a:	jmp    0x14000d554
   14000d54c:	mov    rax,QWORD PTR [r14]
   14000d54f:	mov    QWORD PTR [rsp+0x40],rax
   14000d554:	lea    rbx,[rsp+0x40]
   14000d559:	mov    rbx,QWORD PTR [rbx]
   14000d55c:	mov    rax,QWORD PTR [rbp-0x9]
   14000d560:	mov    rcx,rdi
   14000d563:	mov    QWORD PTR [rbp-0x9],rcx
   14000d567:	test   rax,rax
   14000d56a:	je     0x14000d578
   14000d56c:	mov    rcx,rax
   14000d56f:	call   0x140013924
   14000d574:	mov    rcx,QWORD PTR [rbp-0x9]
   14000d578:	call   0x1400137cc
   14000d57d:	mov    rax,QWORD PTR [rbp-0x19]
   14000d581:	mov    rcx,rdi
   14000d584:	mov    QWORD PTR [rbp-0x19],rcx
   14000d588:	test   rax,rax
   14000d58b:	je     0x14000d599
   14000d58d:	mov    rcx,rax
   14000d590:	call   0x140013924
   14000d595:	mov    rcx,QWORD PTR [rbp-0x19]
   14000d599:	call   0x1400137cc
   14000d59e:	cmp    rbx,QWORD PTR [r14]
   14000d5a1:	je     0x14000d650
   14000d5a7:	mov    DWORD PTR [rbp-0x79],edi
   14000d5aa:	mov    QWORD PTR [rbp-0x71],rdi
   14000d5ae:	mov    QWORD PTR [rbp-0x69],rdi
   14000d5b2:	mov    QWORD PTR [rbp-0x61],rdi
   14000d5b6:	mov    QWORD PTR [rbp-0x59],rdi
   14000d5ba:	mov    QWORD PTR [rbp-0x51],rdi
   14000d5be:	lea    rdx,[rbx+0x50]
   14000d5c2:	or     r8,0xffffffffffffffff
   14000d5c6:	lea    rcx,[rbp-0x79]
   14000d5ca:	call   0x140010560
   14000d5cf:	nop
   14000d5d0:	lea    rcx,[rbp-0x79]
   14000d5d4:	call   0x140011370
   14000d5d9:	nop
   14000d5da:	lea    rcx,[rbp-0x79]
   14000d5de:	call   0x140011370
   14000d5e3:	mov    rsi,rax
   14000d5e6:	mov    rcx,rax
   14000d5e9:	call   0x140009130
   14000d5ee:	lea    rcx,[rax+0x2]
   14000d5f2:	call   0x14001396c
   14000d5f7:	mov    rbx,rax
   14000d5fa:	test   rax,rax
   14000d5fd:	je     0x14000d60a
   14000d5ff:	mov    r8,rsi
   14000d602:	mov    rcx,rax
   14000d605:	call   0x140008fd0
   14000d60a:	mov    QWORD PTR [rbp-0x41],rbx
   14000d60e:	mov    rax,QWORD PTR [rbp-0x59]
   14000d612:	mov    rcx,rdi
   14000d615:	mov    QWORD PTR [rbp-0x59],rcx
   14000d619:	test   rax,rax
   14000d61c:	je     0x14000d62a
   14000d61e:	mov    rcx,rax
   14000d621:	call   0x140013924
   14000d626:	mov    rcx,QWORD PTR [rbp-0x59]
   14000d62a:	call   0x1400137cc
   14000d62f:	mov    rax,QWORD PTR [rbp-0x69]
   14000d633:	mov    rcx,rdi
   14000d636:	mov    QWORD PTR [rbp-0x69],rcx
   14000d63a:	test   rax,rax
   14000d63d:	je     0x14000d64b
   14000d63f:	mov    rcx,rax
   14000d642:	call   0x140013924
   14000d647:	mov    rcx,QWORD PTR [rbp-0x69]
   14000d64b:	call   0x1400137cc
   14000d650:	mov    eax,DWORD PTR [rbp+0x77]
   14000d653:	mov    DWORD PTR [rsp+0x30],eax
   14000d657:	lea    rax,[rbp-0x41]
   14000d65b:	mov    QWORD PTR [rsp+0x28],rax
   14000d660:	lea    rax,[rbp-0x39]
   14000d664:	mov    QWORD PTR [rsp+0x20],rax
   14000d669:	lea    r9,[rbp-0x31]
   14000d66d:	mov    r8,r12
   14000d670:	mov    rdx,QWORD PTR [rbp+0x67]
   14000d674:	mov    rsi,QWORD PTR [rbp+0x5f]
   14000d678:	mov    rcx,rsi
   14000d67b:	call   0x14000d750
   14000d680:	mov    rbx,rax
   14000d683:	test   rax,rax
   14000d686:	je     0x14000d6ee
   14000d688:	mov    rax,QWORD PTR [rbp+0x6f]
   14000d68c:	mov    r9,QWORD PTR [rax]
   14000d68f:	mov    r8,rbx
   14000d692:	mov    edx,0x2
   14000d697:	mov    rcx,rax
   14000d69a:	call   QWORD PTR [r9+0x98]
   14000d6a1:	mov    DWORD PTR [rsi+0x28],eax
   14000d6a4:	test   eax,eax
   14000d6a6:	cmovns r13d,r13d
   14000d6aa:	mov    rsi,QWORD PTR [rsi+0x38]
   14000d6ae:	cmp    DWORD PTR [rbx],0x0
   14000d6b1:	jbe    0x14000d6e0
   14000d6b3:	nop    DWORD PTR [rax+0x0]
   14000d6b7:	nop    WORD PTR [rax+rax*1+0x0]
   14000d6c0:	mov    eax,edi
   14000d6c2:	inc    rax
   14000d6c5:	add    rax,rax
   14000d6c8:	mov    rdx,QWORD PTR [rbx+rax*8]
   14000d6cc:	test   rdx,rdx
   14000d6cf:	je     0x14000d6da
   14000d6d1:	mov    rax,QWORD PTR [rsi]
   14000d6d4:	mov    rcx,rsi
   14000d6d7:	call   QWORD PTR [rax+0x10]
   14000d6da:	inc    edi
   14000d6dc:	cmp    edi,DWORD PTR [rbx]
   14000d6de:	jb     0x14000d6c0
   14000d6e0:	mov    rax,QWORD PTR [rsi]
   14000d6e3:	mov    rdx,rbx
   14000d6e6:	mov    rcx,rsi
   14000d6e9:	call   QWORD PTR [rax+0x10]
   14000d6ec:	jmp    0x14000d6f1
   14000d6ee:	mov    r13d,edi
   14000d6f1:	mov    rcx,QWORD PTR [rbp-0x31]
   14000d6f5:	test   rcx,rcx
   14000d6f8:	je     0x14000d6ff
   14000d6fa:	call   0x14001392c
   14000d6ff:	mov    rcx,QWORD PTR [rbp-0x39]
   14000d703:	test   rcx,rcx
   14000d706:	je     0x14000d70d
   14000d708:	call   0x14001392c
   14000d70d:	mov    rcx,QWORD PTR [rbp-0x41]
   14000d711:	test   rcx,rcx
   14000d714:	je     0x14000d71c
   14000d716:	call   0x14001392c
   14000d71b:	nop
   14000d71c:	mov    r8,QWORD PTR [r14]
   14000d71f:	mov    r9,r8
   14000d722:	mov    r8,QWORD PTR [r8]
   14000d725:	lea    rdx,[rbp+0x7f]
   14000d729:	mov    rcx,r14
   14000d72c:	call   0x140004990
   14000d731:	mov    rcx,QWORD PTR [r14]
   14000d734:	call   0x1400137cc
   14000d739:	mov    eax,r13d
   14000d73c:	add    rsp,0xd8
   14000d743:	pop    r15
   14000d745:	pop    r14
   14000d747:	pop    r13
   14000d749:	pop    r12
   14000d74b:	pop    rdi
   14000d74c:	pop    rsi
   14000d74d:	pop    rbx
   14000d74e:	pop    rbp
   14000d74f:	ret    
   14000d750:	mov    rax,rsp
   14000d753:	mov    QWORD PTR [rax+0x8],rbx
   14000d757:	mov    QWORD PTR [rax+0x10],rbp
   14000d75b:	mov    QWORD PTR [rax+0x18],rsi
   14000d75f:	push   rdi
   14000d760:	push   r12
   14000d762:	push   r13
   14000d764:	push   r14
   14000d766:	push   r15
   14000d768:	sub    rsp,0x40
   14000d76c:	xor    ebx,ebx
   14000d76e:	mov    rbp,r9
   14000d771:	mov    r13,r8
   14000d774:	mov    r12,rdx
   14000d777:	mov    r14,rcx
   14000d77a:	mov    edi,0x104
   14000d77f:	mov    QWORD PTR [rax+0x20],rbx
   14000d783:	mov    QWORD PTR [rax-0x38],rbx
   14000d787:	mov    QWORD PTR [rax-0x30],rbx
   14000d78b:	test   r9,r9
   14000d78e:	je     0x14000d82e
   14000d794:	mov    rax,QWORD PTR [r9]
   14000d797:	test   rax,rax
   14000d79a:	je     0x14000d82e
   14000d7a0:	mov    ecx,ebx
   14000d7a2:	cmp    BYTE PTR [rax],bl
   14000d7a4:	je     0x14000d7de
   14000d7a6:	cmp    BYTE PTR [rax+0x1],bl
   14000d7a9:	je     0x14000d7db
   14000d7ab:	cmp    BYTE PTR [rax+0x2],bl
   14000d7ae:	je     0x14000d7d5
   14000d7b0:	cmp    BYTE PTR [rax+0x3],bl
   14000d7b3:	je     0x14000d7cf
   14000d7b5:	cmp    BYTE PTR [rax+0x4],bl
   14000d7b8:	je     0x14000d7c9
   14000d7ba:	add    rcx,0x5
   14000d7be:	add    rax,0x5
   14000d7c2:	cmp    rcx,rdi
   14000d7c5:	jb     0x14000d7a2
   14000d7c7:	jmp    0x14000d7de
   14000d7c9:	add    rcx,0x4
   14000d7cd:	jmp    0x14000d7de
   14000d7cf:	add    rcx,0x3
   14000d7d3:	jmp    0x14000d7de
   14000d7d5:	add    rcx,0x2
   14000d7d9:	jmp    0x14000d7de
   14000d7db:	inc    rcx
   14000d7de:	cmp    rcx,rdi
   14000d7e1:	jne    0x14000d804
   14000d7e3:	lea    rdx,[rip+0x217c6]        # 0x14002efb0
   14000d7ea:	lea    rcx,[rip+0x217df]        # 0x14002efd0
   14000d7f1:	xor    r9d,r9d
   14000d7f4:	xor    r8d,r8d
   14000d7f7:	mov    QWORD PTR [rsp+0x20],rbx
   14000d7fc:	call   0x140001080
   14000d801:	mov    rcx,rdi
   14000d804:	lea    rsi,[rcx+0x1]
   14000d808:	mov    rcx,rsi
   14000d80b:	call   0x14001307c
   14000d810:	mov    QWORD PTR [rsp+0x88],rax
   14000d818:	test   rax,rax
   14000d81b:	je     0x14000d836
   14000d81d:	mov    r8,QWORD PTR [rbp+0x0]
   14000d821:	mov    r9,rsi
   14000d824:	mov    rcx,rax
   14000d827:	call   0x140009060
   14000d82c:	jmp    0x14000d836
   14000d82e:	mov    QWORD PTR [rsp+0x88],rbx
   14000d836:	mov    r15,QWORD PTR [rsp+0x90]
   14000d83e:	test   r15,r15
   14000d841:	je     0x14000d8de
   14000d847:	mov    rax,QWORD PTR [r15]
   14000d84a:	test   rax,rax
   14000d84d:	je     0x14000d8de
   14000d853:	mov    rcx,rbx
   14000d856:	cmp    BYTE PTR [rax],bl
   14000d858:	je     0x14000d892
   14000d85a:	cmp    BYTE PTR [rax+0x1],bl
   14000d85d:	je     0x14000d88f
   14000d85f:	cmp    BYTE PTR [rax+0x2],bl
   14000d862:	je     0x14000d889
   14000d864:	cmp    BYTE PTR [rax+0x3],bl
   14000d867:	je     0x14000d883
   14000d869:	cmp    BYTE PTR [rax+0x4],bl
   14000d86c:	je     0x14000d87d
   14000d86e:	add    rcx,0x5
   14000d872:	add    rax,0x5
   14000d876:	cmp    rcx,rdi
   14000d879:	jb     0x14000d856
   14000d87b:	jmp    0x14000d892
   14000d87d:	add    rcx,0x4
   14000d881:	jmp    0x14000d892
   14000d883:	add    rcx,0x3
   14000d887:	jmp    0x14000d892
   14000d889:	add    rcx,0x2
   14000d88d:	jmp    0x14000d892
   14000d88f:	inc    rcx
   14000d892:	cmp    rcx,rdi
   14000d895:	jne    0x14000d8b8
   14000d897:	lea    rdx,[rip+0x21712]        # 0x14002efb0
   14000d89e:	lea    rcx,[rip+0x2172b]        # 0x14002efd0
   14000d8a5:	xor    r9d,r9d
   14000d8a8:	xor    r8d,r8d
   14000d8ab:	mov    QWORD PTR [rsp+0x20],rbx
   14000d8b0:	call   0x140001080
   14000d8b5:	mov    rcx,rdi
   14000d8b8:	lea    rsi,[rcx+0x1]
   14000d8bc:	mov    rcx,rsi
   14000d8bf:	call   0x14001307c
   14000d8c4:	mov    QWORD PTR [rsp+0x30],rax
   14000d8c9:	test   rax,rax
   14000d8cc:	je     0x14000d8e3
   14000d8ce:	mov    r8,QWORD PTR [r15]
   14000d8d1:	mov    r9,rsi
   14000d8d4:	mov    rcx,rax
   14000d8d7:	call   0x140009060
   14000d8dc:	jmp    0x14000d8e3
   14000d8de:	mov    QWORD PTR [rsp+0x30],rbx
   14000d8e3:	mov    rsi,QWORD PTR [rsp+0x98]
   14000d8eb:	test   rsi,rsi
   14000d8ee:	je     0x14000d98b
   14000d8f4:	mov    rax,QWORD PTR [rsi]
   14000d8f7:	test   rax,rax
   14000d8fa:	je     0x14000d98b
   14000d900:	mov    rcx,rbx
   14000d903:	cmp    BYTE PTR [rax],bl
   14000d905:	je     0x14000d93f
   14000d907:	cmp    BYTE PTR [rax+0x1],bl
   14000d90a:	je     0x14000d93c
   14000d90c:	cmp    BYTE PTR [rax+0x2],bl
   14000d90f:	je     0x14000d936
   14000d911:	cmp    BYTE PTR [rax+0x3],bl
   14000d914:	je     0x14000d930
   14000d916:	cmp    BYTE PTR [rax+0x4],bl
   14000d919:	je     0x14000d92a
   14000d91b:	add    rcx,0x5
   14000d91f:	add    rax,0x5
   14000d923:	cmp    rcx,rdi
   14000d926:	jb     0x14000d903
   14000d928:	jmp    0x14000d93f
   14000d92a:	add    rcx,0x4
   14000d92e:	jmp    0x14000d93f
   14000d930:	add    rcx,0x3
   14000d934:	jmp    0x14000d93f
   14000d936:	add    rcx,0x2
   14000d93a:	jmp    0x14000d93f
   14000d93c:	inc    rcx
   14000d93f:	cmp    rcx,rdi
   14000d942:	jne    0x14000d964
   14000d944:	lea    rdx,[rip+0x21665]        # 0x14002efb0
   14000d94b:	lea    rcx,[rip+0x2167e]        # 0x14002efd0
   14000d952:	xor    r9d,r9d
   14000d955:	xor    r8d,r8d
   14000d958:	mov    QWORD PTR [rsp+0x20],rbx
   14000d95d:	call   0x140001080
   14000d962:	jmp    0x14000d967
   14000d964:	mov    rdi,rcx
   14000d967:	lea    rcx,[rdi+0x1]
   14000d96b:	call   0x14001307c
   14000d970:	mov    QWORD PTR [rsp+0x38],rax
   14000d975:	test   rax,rax
   14000d978:	je     0x14000d990
   14000d97a:	mov    r8,QWORD PTR [rsi]
   14000d97d:	lea    r9,[rdi+0x1]
   14000d981:	mov    rcx,rax
   14000d984:	call   0x140009060
   14000d989:	jmp    0x14000d990
   14000d98b:	mov    QWORD PTR [rsp+0x38],rbx
   14000d990:	mov    r9,r15
   14000d993:	mov    r8,rbp
   14000d996:	mov    rcx,r14
   14000d999:	mov    QWORD PTR [rsp+0x20],rsi
   14000d99e:	call   0x14000db70
   14000d9a3:	lea    r9,[rsp+0x30]
   14000d9a8:	mov    rsi,rax
   14000d9ab:	lea    rax,[rsp+0x38]
   14000d9b0:	lea    r8,[rsp+0x88]
   14000d9b8:	mov    rcx,r14
   14000d9bb:	mov    QWORD PTR [rsp+0x20],rax
   14000d9c0:	call   0x14000db70
   14000d9c5:	mov    rdi,rax
   14000d9c8:	test   rsi,rsi
   14000d9cb:	je     0x14000dadb
   14000d9d1:	test   rax,rax
   14000d9d4:	je     0x14000da9c
   14000d9da:	mov    ebx,DWORD PTR [rsp+0xa0]
   14000d9e1:	mov    r10,QWORD PTR [r12]
   14000d9e5:	movsxd rbp,r13d
   14000d9e8:	mov    ecx,ebx
   14000d9ea:	mov    rdx,rbp
   14000d9ed:	mov    QWORD PTR [rsp+0x20],rsi
   14000d9f2:	neg    ecx
   14000d9f4:	mov    rcx,r12
   14000d9f7:	sbb    r8d,r8d
   14000d9fa:	xor    r9d,r9d
   14000d9fd:	and    r8d,0x8
   14000da01:	call   QWORD PTR [r10+0xa0]
   14000da08:	mov    DWORD PTR [r14+0x28],eax
   14000da0c:	test   eax,eax
   14000da0e:	jns    0x14000da58
   14000da10:	test   ebx,ebx
   14000da12:	jne    0x14000da34
   14000da14:	mov    rax,QWORD PTR [r12]
   14000da18:	lea    r8d,[rbx+0x8]
   14000da1c:	xor    r9d,r9d
   14000da1f:	mov    rdx,rbp
   14000da22:	mov    rcx,r12
   14000da25:	mov    QWORD PTR [rsp+0x20],rsi
   14000da2a:	call   QWORD PTR [rax+0xa0]
   14000da30:	mov    DWORD PTR [r14+0x28],eax
   14000da34:	cmp    DWORD PTR [r14+0x28],0x0
   14000da39:	jge    0x14000da58
   14000da3b:	mov    rcx,QWORD PTR [r14+0x38]
   14000da3f:	mov    rdx,rsi
   14000da42:	call   0x140008ea0
   14000da47:	mov    rcx,QWORD PTR [r14+0x38]
   14000da4b:	mov    rdx,rdi
   14000da4e:	call   0x140008ea0
   14000da53:	jmp    0x14000db4c
   14000da58:	mov    rcx,QWORD PTR [r14+0x38]
   14000da5c:	mov    rdx,rdi
   14000da5f:	call   0x140008ea0
   14000da64:	mov    rcx,QWORD PTR [rsp+0x88]
   14000da6c:	test   rcx,rcx
   14000da6f:	je     0x14000da76
   14000da71:	call   0x14001392c
   14000da76:	mov    rcx,QWORD PTR [rsp+0x30]
   14000da7b:	test   rcx,rcx
   14000da7e:	je     0x14000da85
   14000da80:	call   0x14001392c
   14000da85:	mov    rcx,QWORD PTR [rsp+0x38]
   14000da8a:	test   rcx,rcx
   14000da8d:	je     0x14000da94
   14000da8f:	call   0x14001392c
   14000da94:	mov    rax,rsi
   14000da97:	jmp    0x14000db4e
   14000da9c:	mov    rdi,QWORD PTR [r14+0x38]
   14000daa0:	cmp    DWORD PTR [rsi],ebx
   14000daa2:	jbe    0x14000dad0
   14000daa4:	nop    DWORD PTR [rax+0x0]
   14000daa8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000dab0:	mov    eax,ebx
   14000dab2:	inc    rax
   14000dab5:	add    rax,rax
   14000dab8:	mov    rdx,QWORD PTR [rsi+rax*8]
   14000dabc:	test   rdx,rdx
   14000dabf:	je     0x14000daca
   14000dac1:	mov    rax,QWORD PTR [rdi]
   14000dac4:	mov    rcx,rdi
   14000dac7:	call   QWORD PTR [rax+0x10]
   14000daca:	inc    ebx
   14000dacc:	cmp    ebx,DWORD PTR [rsi]
   14000dace:	jb     0x14000dab0
   14000dad0:	mov    rax,QWORD PTR [rdi]
   14000dad3:	mov    rdx,rsi
   14000dad6:	mov    rcx,rdi
   14000dad9:	jmp    0x14000db19
   14000dadb:	test   rax,rax
   14000dade:	je     0x14000db1c
   14000dae0:	mov    rsi,QWORD PTR [r14+0x38]
   14000dae4:	cmp    DWORD PTR [rax],ebx
   14000dae6:	jbe    0x14000db10
   14000dae8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000daf0:	mov    eax,ebx
   14000daf2:	inc    rax
   14000daf5:	add    rax,rax
   14000daf8:	mov    rdx,QWORD PTR [rdi+rax*8]
   14000dafc:	test   rdx,rdx
   14000daff:	je     0x14000db0a
   14000db01:	mov    rax,QWORD PTR [rsi]
   14000db04:	mov    rcx,rsi
   14000db07:	call   QWORD PTR [rax+0x10]
   14000db0a:	inc    ebx
   14000db0c:	cmp    ebx,DWORD PTR [rdi]
   14000db0e:	jb     0x14000daf0
   14000db10:	mov    rax,QWORD PTR [rsi]
   14000db13:	mov    rdx,rdi
   14000db16:	mov    rcx,rsi
   14000db19:	call   QWORD PTR [rax+0x10]
   14000db1c:	mov    rcx,QWORD PTR [rsp+0x88]
   14000db24:	test   rcx,rcx
   14000db27:	je     0x14000db2e
   14000db29:	call   0x1400137cc
   14000db2e:	mov    rcx,QWORD PTR [rsp+0x30]
   14000db33:	test   rcx,rcx
   14000db36:	je     0x14000db3d
   14000db38:	call   0x1400137cc
   14000db3d:	mov    rcx,QWORD PTR [rsp+0x38]
   14000db42:	test   rcx,rcx
   14000db45:	je     0x14000db4c
   14000db47:	call   0x1400137cc
   14000db4c:	xor    eax,eax
   14000db4e:	mov    rbx,QWORD PTR [rsp+0x70]
   14000db53:	mov    rbp,QWORD PTR [rsp+0x78]
   14000db58:	mov    rsi,QWORD PTR [rsp+0x80]
   14000db60:	add    rsp,0x40
   14000db64:	pop    r15
   14000db66:	pop    r14
   14000db68:	pop    r13
   14000db6a:	pop    r12
   14000db6c:	pop    rdi
   14000db6d:	ret    
   14000db6e:	int3   
   14000db6f:	int3   
   14000db70:	rex push rbx
   14000db72:	push   rbp
   14000db73:	push   r12
   14000db75:	push   r13
   14000db77:	sub    rsp,0x78
   14000db7b:	mov    rax,QWORD PTR [rip+0x2948e]        # 0x140037010
   14000db82:	xor    rax,rsp
   14000db85:	mov    QWORD PTR [rsp+0x50],rax
   14000db8a:	mov    rax,QWORD PTR [rsp+0xc0]
   14000db92:	xor    r13d,r13d
   14000db95:	mov    r12d,0x3
   14000db9b:	mov    QWORD PTR [rsp+0x38],r8
   14000dba0:	mov    rbp,rcx
   14000dba3:	mov    QWORD PTR [rsp+0x40],r9
   14000dba8:	mov    QWORD PTR [rsp+0x48],rax
   14000dbad:	mov    r10d,r13d
   14000dbb0:	mov    ebx,r13d
   14000dbb3:	lea    rdx,[rsp+0x38]
   14000dbb8:	mov    r8d,r12d
   14000dbbb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000dbc0:	mov    rcx,QWORD PTR [rdx]
   14000dbc3:	test   rcx,rcx
   14000dbc6:	je     0x14000dbf5
   14000dbc8:	mov    rcx,QWORD PTR [rcx]
   14000dbcb:	inc    r10d
   14000dbce:	test   rcx,rcx
   14000dbd1:	je     0x14000dbf5
   14000dbd3:	movzx  eax,BYTE PTR [rcx]
   14000dbd6:	inc    ebx
   14000dbd8:	test   al,al
   14000dbda:	je     0x14000dbf5
   14000dbdc:	nop    DWORD PTR [rax+0x0]
   14000dbe0:	cmp    al,0x3b
   14000dbe2:	je     0x14000dbe8
   14000dbe4:	cmp    al,0xa
   14000dbe6:	jne    0x14000dbea
   14000dbe8:	inc    ebx
   14000dbea:	movzx  eax,BYTE PTR [rcx+0x1]
   14000dbee:	inc    rcx
   14000dbf1:	test   al,al
   14000dbf3:	jne    0x14000dbe0
   14000dbf5:	add    rdx,0x8
   14000dbf9:	dec    r8
   14000dbfc:	jne    0x14000dbc0
   14000dbfe:	test   r10d,r10d
   14000dc01:	jne    0x14000dc0a
   14000dc03:	xor    eax,eax
   14000dc05:	jmp    0x14000ddea
   14000dc0a:	mov    rcx,QWORD PTR [rbp+0x38]
   14000dc0e:	mov    QWORD PTR [rsp+0x70],rdi
   14000dc13:	mov    edi,ebx
   14000dc15:	mov    rax,QWORD PTR [rcx]
   14000dc18:	shl    edi,0x4
   14000dc1b:	lea    r8,[rsp+0x30]
   14000dc20:	add    edi,0x8
   14000dc23:	mov    edx,edi
   14000dc25:	call   QWORD PTR [rax+0x8]
   14000dc28:	mov    DWORD PTR [rbp+0x28],eax
   14000dc2b:	test   eax,eax
   14000dc2d:	jns    0x14000dc36
   14000dc2f:	xor    eax,eax
   14000dc31:	jmp    0x14000dde5
   14000dc36:	mov    rcx,QWORD PTR [rsp+0x30]
   14000dc3b:	mov    QWORD PTR [rsp+0xa8],rsi
   14000dc43:	mov    r8d,edi
   14000dc46:	xor    edx,edx
   14000dc48:	mov    QWORD PTR [rsp+0x68],r14
   14000dc4d:	mov    QWORD PTR [rsp+0x60],r15
   14000dc52:	call   0x140014d80
   14000dc57:	mov    rax,QWORD PTR [rsp+0x30]
   14000dc5c:	mov    esi,r13d
   14000dc5f:	lea    r14,[rip+0x215da]        # 0x14002f240
   14000dc66:	lea    r15,[rsp+0x38]
   14000dc6b:	mov    DWORD PTR [rax],ebx
   14000dc6d:	nop    DWORD PTR [rax]
   14000dc70:	mov    rbx,QWORD PTR [r15]
   14000dc73:	test   rbx,rbx
   14000dc76:	je     0x14000ddbd
   14000dc7c:	mov    rbx,QWORD PTR [rbx]
   14000dc7f:	test   rbx,rbx
   14000dc82:	je     0x14000ddbd
   14000dc88:	nop    DWORD PTR [rax+rax*1+0x0]
   14000dc90:	mov    rax,QWORD PTR [rip+0x2c629]        # 0x14003a2c0
   14000dc97:	test   rbx,rbx
   14000dc9a:	lea    rcx,[rip+0xffffffffffff33df]        # 0x140001080
   14000dca1:	cmovne rax,r13
   14000dca5:	mov    QWORD PTR [rip+0x2c614],rax        # 0x14003a2c0
   14000dcac:	call   0x140013fb0
   14000dcb1:	lea    r8,[rip+0x2c608]        # 0x14003a2c0
   14000dcb8:	lea    rdx,[rip+0x21551]        # 0x14002f210
   14000dcbf:	mov    rcx,rbx
   14000dcc2:	call   0x140013cd4
   14000dcc7:	mov    rdi,rax
   14000dcca:	test   rax,rax
   14000dccd:	je     0x14000ddbd
   14000dcd3:	mov    rcx,rax
   14000dcd6:	mov    rdx,r13
   14000dcd9:	nop    DWORD PTR [rax+0x0]
   14000dce0:	cmp    BYTE PTR [rcx],r13b
   14000dce3:	je     0x14000dd25
   14000dce5:	cmp    BYTE PTR [rcx+0x1],r13b
   14000dce9:	je     0x14000dd22
   14000dceb:	cmp    BYTE PTR [rcx+0x2],r13b
   14000dcef:	je     0x14000dd1c
   14000dcf1:	cmp    BYTE PTR [rcx+0x3],r13b
   14000dcf5:	je     0x14000dd16
   14000dcf7:	cmp    BYTE PTR [rcx+0x4],r13b
   14000dcfb:	je     0x14000dd10
   14000dcfd:	add    rdx,0x5
   14000dd01:	add    rcx,0x5
   14000dd05:	cmp    rdx,0x104
   14000dd0c:	jb     0x14000dce0
   14000dd0e:	jmp    0x14000dd25
   14000dd10:	add    rdx,0x4
   14000dd14:	jmp    0x14000dd25
   14000dd16:	add    rdx,0x3
   14000dd1a:	jmp    0x14000dd25
   14000dd1c:	add    rdx,0x2
   14000dd20:	jmp    0x14000dd25
   14000dd22:	inc    rdx
   14000dd25:	cmp    rdx,0x104
   14000dd2c:	jne    0x14000dd4e
   14000dd2e:	lea    rdx,[rip+0x2127b]        # 0x14002efb0
   14000dd35:	lea    rcx,[rip+0x21294]        # 0x14002efd0
   14000dd3c:	xor    r9d,r9d
   14000dd3f:	xor    r8d,r8d
   14000dd42:	mov    QWORD PTR [rsp+0x20],r13
   14000dd47:	call   0x140001080
   14000dd4c:	jmp    0x14000dd57
   14000dd4e:	cmp    rdx,0x140
   14000dd55:	ja     0x14000ddb5
   14000dd57:	mov    rax,QWORD PTR [rsp+0x30]
   14000dd5c:	mov    ecx,esi
   14000dd5e:	mov    edx,0x30
   14000dd63:	add    rcx,rcx
   14000dd66:	lea    rbx,[rax+rcx*8]
   14000dd6a:	mov    DWORD PTR [rax+rcx*8+0x8],r13d
   14000dd6f:	mov    DWORD PTR [rax+rcx*8+0xc],0x2
   14000dd77:	mov    rcx,QWORD PTR [rbp+0x38]
   14000dd7b:	lea    r8,[rbx+0x10]
   14000dd7f:	mov    rax,QWORD PTR [rcx]
   14000dd82:	call   QWORD PTR [rax+0x8]
   14000dd85:	mov    DWORD PTR [rbp+0x28],eax
   14000dd88:	test   eax,eax
   14000dd8a:	js     0x14000ddb3
   14000dd8c:	mov    rax,QWORD PTR [rbx+0x10]
   14000dd90:	mov    DWORD PTR [rax],0x3001001e
   14000dd96:	mov    rax,QWORD PTR [rbx+0x10]
   14000dd9a:	mov    QWORD PTR [rax+0x8],rdi
   14000dd9e:	mov    rax,QWORD PTR [rbx+0x10]
   14000dda2:	mov    DWORD PTR [rax+0x18],0xc150003
   14000dda9:	mov    rcx,QWORD PTR [rbx+0x10]
   14000ddad:	mov    eax,DWORD PTR [r14]
   14000ddb0:	mov    DWORD PTR [rcx+0x20],eax
   14000ddb3:	inc    esi
   14000ddb5:	mov    rbx,r13
   14000ddb8:	jmp    0x14000dc90
   14000ddbd:	add    r15,0x8
   14000ddc1:	add    r14,0x4
   14000ddc5:	dec    r12
   14000ddc8:	jne    0x14000dc70
   14000ddce:	mov    rax,QWORD PTR [rsp+0x30]
   14000ddd3:	mov    r15,QWORD PTR [rsp+0x60]
   14000ddd8:	mov    r14,QWORD PTR [rsp+0x68]
   14000dddd:	mov    rsi,QWORD PTR [rsp+0xa8]
   14000dde5:	mov    rdi,QWORD PTR [rsp+0x70]
   14000ddea:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ddef:	xor    rcx,rsp
   14000ddf2:	call   0x1400130a0
   14000ddf7:	add    rsp,0x78
   14000ddfb:	pop    r13
   14000ddfd:	pop    r12
   14000ddff:	pop    rbp
   14000de00:	pop    rbx
   14000de01:	ret    
   14000de02:	int3   
   14000de03:	int3   
   14000de04:	int3   
   14000de05:	int3   
   14000de06:	int3   
   14000de07:	int3   
   14000de08:	int3   
   14000de09:	int3   
   14000de0a:	int3   
   14000de0b:	int3   
   14000de0c:	int3   
   14000de0d:	int3   
   14000de0e:	int3   
   14000de0f:	int3   
   14000de10:	rex push rbp
   14000de12:	push   rsi
   14000de13:	push   r12
   14000de15:	push   r13
   14000de17:	push   r14
   14000de19:	push   r15
   14000de1b:	sub    rsp,0x118
   14000de22:	mov    rax,QWORD PTR [rip+0x291e7]        # 0x140037010
   14000de29:	xor    rax,rsp
   14000de2c:	mov    QWORD PTR [rsp+0xf0],rax
   14000de34:	mov    r12,QWORD PTR [rsp+0x170]
   14000de3c:	mov    r15,QWORD PTR [rsp+0x180]
   14000de44:	mov    rbp,QWORD PTR [rsp+0x178]
   14000de4c:	mov    r13,r9
   14000de4f:	mov    DWORD PTR [rsp+0x30],0x1
   14000de57:	mov    r9,r12
   14000de5a:	mov    QWORD PTR [rsp+0x28],r15
   14000de5f:	mov    r14,rdx
   14000de62:	mov    rsi,rcx
   14000de65:	mov    QWORD PTR [rsp+0x48],r8
   14000de6a:	mov    QWORD PTR [rsp+0x20],rbp
   14000de6f:	call   0x14000d750
   14000de74:	mov    QWORD PTR [rsp+0x40],rax
   14000de79:	test   rax,rax
   14000de7c:	je     0x14000dfcd
   14000de82:	mov    QWORD PTR [rsp+0x110],rbx
   14000de8a:	xor    ebx,ebx
   14000de8c:	mov    QWORD PTR [rsp+0x108],rdi
   14000de94:	cmp    DWORD PTR [rsp+0x188],ebx
   14000de9b:	jne    0x14000dea5
   14000de9d:	mov    r8,rax
   14000dea0:	jmp    0x14000df67
   14000dea5:	lea    rdi,[rip+0x2136c]        # 0x14002f218
   14000deac:	test   r13,r13
   14000deaf:	lea    rcx,[rsp+0x58]
   14000deb4:	cmovne rdi,r13
   14000deb8:	mov    r8d,0x80
   14000debe:	xor    edx,edx
   14000dec0:	mov    DWORD PTR [rsp+0x50],ebx
   14000dec4:	call   0x140014d80
   14000dec9:	mov    DWORD PTR [rsp+0x60],0x21
   14000ded1:	mov    QWORD PTR [rsp+0x98],rdi
   14000ded9:	mov    ecx,ebx
   14000dedb:	test   r12,r12
   14000dede:	je     0x14000def0
   14000dee0:	mov    DWORD PTR [rsp+0xe0],0x1
   14000deeb:	mov    ecx,0x1
   14000def0:	test   rbp,rbp
   14000def3:	je     0x14000df05
   14000def5:	movsxd rax,ecx
   14000def8:	inc    ecx
   14000defa:	mov    DWORD PTR [rsp+rax*4+0xe0],0x2
   14000df05:	test   r15,r15
   14000df08:	je     0x14000df1a
   14000df0a:	movsxd rax,ecx
   14000df0d:	inc    ecx
   14000df0f:	mov    DWORD PTR [rsp+rax*4+0xe0],0x3
   14000df1a:	lea    rax,[rsp+0xe0]
   14000df22:	mov    DWORD PTR [rsp+0xb0],ecx
   14000df29:	lea    r9,[rsp+0x40]
   14000df2e:	mov    QWORD PTR [rsp+0xc0],rax
   14000df36:	mov    rax,QWORD PTR [r14]
   14000df39:	lea    r8,[rsp+0x50]
   14000df3e:	lea    rdx,[rsp+0x48]
   14000df43:	mov    rcx,r14
   14000df46:	mov    DWORD PTR [rsp+0xb4],ebx
   14000df4d:	mov    QWORD PTR [rsp+0xb8],rbx
   14000df55:	call   QWORD PTR [rax+0xa8]
   14000df5b:	mov    DWORD PTR [rsi+0x28],eax
   14000df5e:	test   eax,eax
   14000df60:	js     0x14000df7f
   14000df62:	mov    r8,QWORD PTR [rsp+0x40]
   14000df67:	mov    r9,r12
   14000df6a:	mov    rdx,r14
   14000df6d:	mov    rcx,rsi
   14000df70:	mov    QWORD PTR [rsp+0x28],r15
   14000df75:	mov    QWORD PTR [rsp+0x20],rbp
   14000df7a:	call   0x14000dff0
   14000df7f:	mov    rdi,QWORD PTR [rsp+0x40]
   14000df84:	mov    rsi,QWORD PTR [rsi+0x38]
   14000df88:	test   rdi,rdi
   14000df8b:	je     0x14000dfbd
   14000df8d:	cmp    DWORD PTR [rdi],ebx
   14000df8f:	jbe    0x14000dfb1
   14000df91:	mov    eax,ebx
   14000df93:	inc    rax
   14000df96:	add    rax,rax
   14000df99:	mov    rdx,QWORD PTR [rdi+rax*8]
   14000df9d:	test   rdx,rdx
   14000dfa0:	je     0x14000dfab
   14000dfa2:	mov    rax,QWORD PTR [rsi]
   14000dfa5:	mov    rcx,rsi
   14000dfa8:	call   QWORD PTR [rax+0x10]
   14000dfab:	inc    ebx
   14000dfad:	cmp    ebx,DWORD PTR [rdi]
   14000dfaf:	jb     0x14000df91
   14000dfb1:	mov    rax,QWORD PTR [rsi]
   14000dfb4:	mov    rdx,rdi
   14000dfb7:	mov    rcx,rsi
   14000dfba:	call   QWORD PTR [rax+0x10]
   14000dfbd:	mov    rbx,QWORD PTR [rsp+0x110]
   14000dfc5:	mov    rdi,QWORD PTR [rsp+0x108]
   14000dfcd:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000dfd5:	xor    rcx,rsp
   14000dfd8:	call   0x1400130a0
   14000dfdd:	add    rsp,0x118
   14000dfe4:	pop    r15
   14000dfe6:	pop    r14
   14000dfe8:	pop    r13
   14000dfea:	pop    r12
   14000dfec:	pop    rsi
   14000dfed:	pop    rbp
   14000dfee:	ret    
   14000dfef:	int3   
   14000dff0:	test   r8,r8
   14000dff3:	je     0x14000e443
   14000dff9:	mov    rax,rsp
   14000dffc:	push   rbp
   14000dffd:	push   r14
   14000dfff:	push   r15
   14000e001:	lea    rbp,[rax-0x38]
   14000e005:	sub    rsp,0x120
   14000e00c:	mov    QWORD PTR [rbp+0x10],0xfffffffffffffffe
   14000e014:	mov    QWORD PTR [rax+0x8],rbx
   14000e018:	mov    QWORD PTR [rax+0x10],rsi
   14000e01c:	mov    QWORD PTR [rax+0x18],rdi
   14000e020:	mov    QWORD PTR [rax+0x20],r12
   14000e024:	mov    r14,r9
   14000e027:	mov    rsi,r8
   14000e02a:	mov    r15,rdx
   14000e02d:	mov    r12,rcx
   14000e030:	xor    ebx,ebx
   14000e032:	mov    DWORD PTR [rbp-0x80],ebx
   14000e035:	mov    QWORD PTR [rbp-0x78],rbx
   14000e039:	mov    QWORD PTR [rbp-0x70],rbx
   14000e03d:	mov    QWORD PTR [rbp-0x68],rbx
   14000e041:	mov    QWORD PTR [rbp-0x60],rbx
   14000e045:	mov    QWORD PTR [rbp-0x58],rbx
   14000e049:	lea    rcx,[rbp-0x80]
   14000e04d:	call   0x140011370
   14000e052:	nop
   14000e053:	mov    DWORD PTR [rsp+0x20],ebx
   14000e057:	mov    QWORD PTR [rsp+0x28],rbx
   14000e05c:	mov    QWORD PTR [rsp+0x30],rbx
   14000e061:	mov    QWORD PTR [rsp+0x38],rbx
   14000e066:	mov    QWORD PTR [rsp+0x40],rbx
   14000e06b:	mov    QWORD PTR [rsp+0x48],rbx
   14000e070:	lea    rcx,[rsp+0x20]
   14000e075:	call   0x140011370
   14000e07a:	nop
   14000e07b:	mov    DWORD PTR [rbp-0x20],ebx
   14000e07e:	mov    QWORD PTR [rbp-0x18],rbx
   14000e082:	mov    QWORD PTR [rbp-0x10],rbx
   14000e086:	mov    QWORD PTR [rbp-0x8],rbx
   14000e08a:	mov    QWORD PTR [rbp+0x0],rbx
   14000e08e:	mov    QWORD PTR [rbp+0x8],rbx
   14000e092:	lea    rcx,[rbp-0x20]
   14000e096:	call   0x140011370
   14000e09b:	nop
   14000e09c:	mov    edi,ebx
   14000e09e:	cmp    DWORD PTR [rsi],ebx
   14000e0a0:	jle    0x14000e2a7
   14000e0a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e0b0:	mov    DWORD PTR [rbp-0x50],ebx
   14000e0b3:	mov    QWORD PTR [rbp-0x48],rbx
   14000e0b7:	mov    QWORD PTR [rbp-0x40],rbx
   14000e0bb:	mov    QWORD PTR [rbp-0x38],rbx
   14000e0bf:	mov    QWORD PTR [rbp-0x30],rbx
   14000e0c3:	mov    QWORD PTR [rbp-0x28],rbx
   14000e0c7:	lea    rcx,[rbp-0x50]
   14000e0cb:	call   0x140011370
   14000e0d0:	nop
   14000e0d1:	movsxd rax,edi
   14000e0d4:	shl    rax,0x4
   14000e0d8:	lea    r8,[rsi+0x8]
   14000e0dc:	add    r8,rax
   14000e0df:	lea    r9,[rbp-0x50]
   14000e0e3:	mov    rdx,r15
   14000e0e6:	mov    rcx,r12
   14000e0e9:	call   0x14000e450
   14000e0ee:	dec    eax
   14000e0f0:	je     0x14000e1cf
   14000e0f6:	dec    eax
   14000e0f8:	je     0x14000e191
   14000e0fe:	dec    eax
   14000e100:	jne    0x14000e25b
   14000e106:	lea    rcx,[rsp+0x20]
   14000e10b:	call   0x140011370
   14000e110:	cmp    QWORD PTR [rsp+0x28],0x0
   14000e116:	je     0x14000e187
   14000e118:	xor    r9d,r9d
   14000e11b:	or     r8,0xffffffffffffffff
   14000e11f:	lea    rdx,[rip+0x21102]        # 0x14002f228
   14000e126:	lea    rcx,[rsp+0x50]
   14000e12b:	call   0x14000fb80
   14000e130:	nop
   14000e131:	mov    rdx,rax
   14000e134:	lea    rcx,[rsp+0x20]
   14000e139:	call   0x14000fdb0
   14000e13e:	nop
   14000e13f:	mov    rax,QWORD PTR [rsp+0x70]
   14000e144:	test   rax,rax
   14000e147:	mov    QWORD PTR [rsp+0x70],rbx
   14000e14c:	mov    rcx,rbx
   14000e14f:	je     0x14000e15e
   14000e151:	mov    rcx,rax
   14000e154:	call   0x140013924
   14000e159:	mov    rcx,QWORD PTR [rsp+0x70]
   14000e15e:	call   0x1400137cc
   14000e163:	mov    rax,QWORD PTR [rsp+0x60]
   14000e168:	test   rax,rax
   14000e16b:	mov    QWORD PTR [rsp+0x60],rbx
   14000e170:	mov    rcx,rbx
   14000e173:	je     0x14000e182
   14000e175:	mov    rcx,rax
   14000e178:	call   0x140013924
   14000e17d:	mov    rcx,QWORD PTR [rsp+0x60]
   14000e182:	call   0x1400137cc
   14000e187:	lea    rcx,[rsp+0x20]
   14000e18c:	jmp    0x14000e251
   14000e191:	lea    rcx,[rsp+0x20]
   14000e196:	call   0x140011370
   14000e19b:	cmp    QWORD PTR [rsp+0x28],0x0
   14000e1a1:	je     0x14000e187
   14000e1a3:	xor    r9d,r9d
   14000e1a6:	or     r8,0xffffffffffffffff
   14000e1aa:	lea    rdx,[rip+0x21077]        # 0x14002f228
   14000e1b1:	lea    rcx,[rsp+0x50]
   14000e1b6:	call   0x14000fb80
   14000e1bb:	nop
   14000e1bc:	mov    rdx,rax
   14000e1bf:	lea    rcx,[rsp+0x20]
   14000e1c4:	call   0x14000fdb0
   14000e1c9:	nop
   14000e1ca:	jmp    0x14000e13f
   14000e1cf:	lea    rcx,[rbp-0x80]
   14000e1d3:	call   0x140011370
   14000e1d8:	cmp    QWORD PTR [rbp-0x78],0x0
   14000e1dd:	je     0x14000e24d
   14000e1df:	xor    r9d,r9d
   14000e1e2:	or     r8,0xffffffffffffffff
   14000e1e6:	lea    rdx,[rip+0x2103b]        # 0x14002f228
   14000e1ed:	lea    rcx,[rsp+0x50]
   14000e1f2:	call   0x14000fb80
   14000e1f7:	nop
   14000e1f8:	mov    rdx,rax
   14000e1fb:	lea    rcx,[rbp-0x80]
   14000e1ff:	call   0x14000fdb0
   14000e204:	nop
   14000e205:	mov    rax,QWORD PTR [rsp+0x70]
   14000e20a:	mov    rcx,rbx
   14000e20d:	mov    QWORD PTR [rsp+0x70],rbx
   14000e212:	test   rax,rax
   14000e215:	je     0x14000e224
   14000e217:	mov    rcx,rax
   14000e21a:	call   0x140013924
   14000e21f:	mov    rcx,QWORD PTR [rsp+0x70]
   14000e224:	call   0x1400137cc
   14000e229:	mov    rax,QWORD PTR [rsp+0x60]
   14000e22e:	mov    rcx,rbx
   14000e231:	mov    QWORD PTR [rsp+0x60],rbx
   14000e236:	test   rax,rax
   14000e239:	je     0x14000e248
   14000e23b:	mov    rcx,rax
   14000e23e:	call   0x140013924
   14000e243:	mov    rcx,QWORD PTR [rsp+0x60]
   14000e248:	call   0x1400137cc
   14000e24d:	lea    rcx,[rbp-0x80]
   14000e251:	lea    rdx,[rbp-0x50]
   14000e255:	call   0x14000fdb0
   14000e25a:	nop
   14000e25b:	mov    rax,QWORD PTR [rbp-0x30]
   14000e25f:	mov    rcx,rbx
   14000e262:	mov    QWORD PTR [rbp-0x30],rbx
   14000e266:	test   rax,rax
   14000e269:	je     0x14000e277
   14000e26b:	mov    rcx,rax
   14000e26e:	call   0x140013924
   14000e273:	mov    rcx,QWORD PTR [rbp-0x30]
   14000e277:	call   0x1400137cc
   14000e27c:	mov    rax,QWORD PTR [rbp-0x40]
   14000e280:	mov    rcx,rbx
   14000e283:	mov    QWORD PTR [rbp-0x40],rbx
   14000e287:	test   rax,rax
   14000e28a:	je     0x14000e298
   14000e28c:	mov    rcx,rax
   14000e28f:	call   0x140013924
   14000e294:	mov    rcx,QWORD PTR [rbp-0x40]
   14000e298:	call   0x1400137cc
   14000e29d:	inc    edi
   14000e29f:	cmp    edi,DWORD PTR [rsi]
   14000e2a1:	jl     0x14000e0b0
   14000e2a7:	test   r14,r14
   14000e2aa:	je     0x14000e2df
   14000e2ac:	lea    rcx,[rbp-0x80]
   14000e2b0:	call   0x140011370
   14000e2b5:	mov    rsi,rax
   14000e2b8:	mov    rcx,rax
   14000e2bb:	call   0x140009130
   14000e2c0:	lea    rcx,[rax+0x2]
   14000e2c4:	call   0x14001396c
   14000e2c9:	mov    rdi,rax
   14000e2cc:	test   rax,rax
   14000e2cf:	je     0x14000e2dc
   14000e2d1:	mov    r8,rsi
   14000e2d4:	mov    rcx,rax
   14000e2d7:	call   0x140008fd0
   14000e2dc:	mov    QWORD PTR [r14],rdi
   14000e2df:	mov    rsi,QWORD PTR [rbp+0x60]
   14000e2e3:	test   rsi,rsi
   14000e2e6:	je     0x14000e31c
   14000e2e8:	lea    rcx,[rsp+0x20]
   14000e2ed:	call   0x140011370
   14000e2f2:	mov    r14,rax
   14000e2f5:	mov    rcx,rax
   14000e2f8:	call   0x140009130
   14000e2fd:	lea    rcx,[rax+0x2]
   14000e301:	call   0x14001396c
   14000e306:	mov    rdi,rax
   14000e309:	test   rax,rax
   14000e30c:	je     0x14000e319
   14000e30e:	mov    r8,r14
   14000e311:	mov    rcx,rax
   14000e314:	call   0x140008fd0
   14000e319:	mov    QWORD PTR [rsi],rdi
   14000e31c:	mov    rsi,QWORD PTR [rbp+0x68]
   14000e320:	test   rsi,rsi
   14000e323:	je     0x14000e358
   14000e325:	lea    rcx,[rbp-0x20]
   14000e329:	call   0x140011370
   14000e32e:	mov    r14,rax
   14000e331:	mov    rcx,rax
   14000e334:	call   0x140009130
   14000e339:	lea    rcx,[rax+0x2]
   14000e33d:	call   0x14001396c
   14000e342:	mov    rdi,rax
   14000e345:	test   rax,rax
   14000e348:	je     0x14000e355
   14000e34a:	mov    r8,r14
   14000e34d:	mov    rcx,rax
   14000e350:	call   0x140008fd0
   14000e355:	mov    QWORD PTR [rsi],rdi
   14000e358:	mov    rax,QWORD PTR [rbp+0x0]
   14000e35c:	mov    rcx,rbx
   14000e35f:	mov    QWORD PTR [rbp+0x0],rbx
   14000e363:	test   rax,rax
   14000e366:	je     0x14000e374
   14000e368:	mov    rcx,rax
   14000e36b:	call   0x140013924
   14000e370:	mov    rcx,QWORD PTR [rbp+0x0]
   14000e374:	call   0x1400137cc
   14000e379:	mov    rax,QWORD PTR [rbp-0x10]
   14000e37d:	mov    rcx,rbx
   14000e380:	mov    QWORD PTR [rbp-0x10],rbx
   14000e384:	test   rax,rax
   14000e387:	je     0x14000e395
   14000e389:	mov    rcx,rax
   14000e38c:	call   0x140013924
   14000e391:	mov    rcx,QWORD PTR [rbp-0x10]
   14000e395:	call   0x1400137cc
   14000e39a:	nop
   14000e39b:	mov    rax,QWORD PTR [rsp+0x40]
   14000e3a0:	mov    rcx,rbx
   14000e3a3:	mov    QWORD PTR [rsp+0x40],rbx
   14000e3a8:	test   rax,rax
   14000e3ab:	je     0x14000e3ba
   14000e3ad:	mov    rcx,rax
   14000e3b0:	call   0x140013924
   14000e3b5:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e3ba:	call   0x1400137cc
   14000e3bf:	mov    rax,QWORD PTR [rsp+0x30]
   14000e3c4:	mov    rcx,rbx
   14000e3c7:	mov    QWORD PTR [rsp+0x30],rbx
   14000e3cc:	test   rax,rax
   14000e3cf:	je     0x14000e3de
   14000e3d1:	mov    rcx,rax
   14000e3d4:	call   0x140013924
   14000e3d9:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e3de:	call   0x1400137cc
   14000e3e3:	nop
   14000e3e4:	mov    rax,QWORD PTR [rbp-0x60]
   14000e3e8:	mov    rcx,rbx
   14000e3eb:	mov    QWORD PTR [rbp-0x60],rbx
   14000e3ef:	test   rax,rax
   14000e3f2:	je     0x14000e400
   14000e3f4:	mov    rcx,rax
   14000e3f7:	call   0x140013924
   14000e3fc:	mov    rcx,QWORD PTR [rbp-0x60]
   14000e400:	call   0x1400137cc
   14000e405:	mov    rcx,QWORD PTR [rbp-0x70]
   14000e409:	mov    QWORD PTR [rbp-0x70],rbx
   14000e40d:	test   rcx,rcx
   14000e410:	je     0x14000e41b
   14000e412:	call   0x140013924
   14000e417:	mov    rbx,QWORD PTR [rbp-0x70]
   14000e41b:	mov    rcx,rbx
   14000e41e:	call   0x1400137cc
   14000e423:	lea    r11,[rsp+0x120]
   14000e42b:	mov    rbx,QWORD PTR [r11+0x20]
   14000e42f:	mov    rsi,QWORD PTR [r11+0x28]
   14000e433:	mov    rdi,QWORD PTR [r11+0x30]
   14000e437:	mov    r12,QWORD PTR [r11+0x38]
   14000e43b:	mov    rsp,r11
   14000e43e:	pop    r15
   14000e440:	pop    r14
   14000e442:	pop    rbp
   14000e443:	ret    
   14000e444:	int3   
   14000e445:	int3   
   14000e446:	int3   
   14000e447:	int3   
   14000e448:	int3   
   14000e449:	int3   
   14000e44a:	int3   
   14000e44b:	int3   
   14000e44c:	int3   
   14000e44d:	int3   
   14000e44e:	int3   
   14000e44f:	int3   
   14000e450:	mov    rax,rsp
   14000e453:	mov    QWORD PTR [rax+0x18],r8
   14000e457:	mov    QWORD PTR [rax+0x10],rdx
   14000e45b:	mov    QWORD PTR [rax+0x8],rcx
   14000e45f:	push   rbp
   14000e460:	push   rsi
   14000e461:	push   rdi
   14000e462:	push   r12
   14000e464:	push   r13
   14000e466:	push   r14
   14000e468:	push   r15
   14000e46a:	lea    rbp,[rax-0x5f]
   14000e46e:	sub    rsp,0xa0
   14000e475:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   14000e47d:	mov    QWORD PTR [rax+0x20],rbx
   14000e481:	mov    r14,r9
   14000e484:	mov    rdi,QWORD PTR [r8+0x8]
   14000e488:	xor    ebx,ebx
   14000e48a:	mov    r15d,ebx
   14000e48d:	mov    r12d,ebx
   14000e490:	mov    esi,ebx
   14000e492:	mov    DWORD PTR [rbp-0x51],0xffffffff
   14000e499:	or     r13d,0xffffffff
   14000e49d:	mov    QWORD PTR [rbp-0x59],rbx
   14000e4a1:	mov    DWORD PTR [rbp-0x19],ebx
   14000e4a4:	mov    QWORD PTR [rbp-0x11],rbx
   14000e4a8:	mov    QWORD PTR [rbp-0x9],rbx
   14000e4ac:	mov    QWORD PTR [rbp-0x1],rbx
   14000e4b0:	mov    QWORD PTR [rbp+0x7],rbx
   14000e4b4:	mov    QWORD PTR [rbp+0xf],rbx
   14000e4b8:	lea    rcx,[rbp-0x19]
   14000e4bc:	call   0x140011370
   14000e4c1:	nop
   14000e4c2:	test   rdi,rdi
   14000e4c5:	je     0x14000e6b7
   14000e4cb:	mov    edx,ebx
   14000e4cd:	mov    r10,QWORD PTR [rbp+0x77]
   14000e4d1:	movsxd r8,DWORD PTR [r10+0x4]
   14000e4d5:	lea    rax,[rdi+0x8]
   14000e4d9:	nop    DWORD PTR [rax+0x0]
   14000e4e0:	cmp    rdx,r8
   14000e4e3:	jge    0x14000e532
   14000e4e5:	mov    ecx,DWORD PTR [rax-0x8]
   14000e4e8:	cmp    ecx,0xc150003
   14000e4ee:	je     0x14000e524
   14000e4f0:	cmp    ecx,0xffe0003
   14000e4f6:	je     0x14000e51f
   14000e4f8:	cmp    ecx,0x3001001e
   14000e4fe:	je     0x14000e51a
   14000e500:	cmp    ecx,0x3002001e
   14000e506:	je     0x14000e515
   14000e508:	cmp    ecx,0x3003001e
   14000e50e:	jne    0x14000e529
   14000e510:	mov    r12,QWORD PTR [rax]
   14000e513:	jmp    0x14000e529
   14000e515:	mov    rsi,QWORD PTR [rax]
   14000e518:	jmp    0x14000e529
   14000e51a:	mov    r15,QWORD PTR [rax]
   14000e51d:	jmp    0x14000e529
   14000e51f:	mov    r13d,DWORD PTR [rax]
   14000e522:	jmp    0x14000e529
   14000e524:	mov    ecx,DWORD PTR [rax]
   14000e526:	mov    DWORD PTR [rbp-0x51],ecx
   14000e529:	inc    rdx
   14000e52c:	add    rax,0x18
   14000e530:	jmp    0x14000e4e0
   14000e532:	cmp    r13d,0x8
   14000e536:	jne    0x14000e561
   14000e538:	mov    rax,QWORD PTR [rbp+0x67]
   14000e53c:	cmp    DWORD PTR [rax+0x84],0x19
   14000e543:	jge    0x14000e6b7
   14000e549:	lea    r9,[rbp-0x19]
   14000e54d:	mov    r8,r10
   14000e550:	mov    rdx,QWORD PTR [rbp+0x6f]
   14000e554:	mov    rcx,rax
   14000e557:	call   0x14000e820
   14000e55c:	jmp    0x14000e6b7
   14000e561:	test   rsi,rsi
   14000e564:	je     0x14000e5ce
   14000e566:	mov    rcx,rbx
   14000e569:	lea    rdx,[rip+0x20cbc]        # 0x14002f22c
   14000e570:	movzx  eax,BYTE PTR [rsi+rcx*1]
   14000e574:	inc    rcx
   14000e577:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   14000e57b:	jne    0x14000e588
   14000e57d:	cmp    rcx,0x5
   14000e581:	jne    0x14000e570
   14000e583:	mov    r15,r12
   14000e586:	jmp    0x14000e5ce
   14000e588:	movzx  eax,BYTE PTR [rsi]
   14000e58b:	cmp    al,BYTE PTR [rip+0x20ca3]        # 0x14002f234
   14000e591:	jne    0x14000e5ce
   14000e593:	movzx  eax,BYTE PTR [rsi+0x1]
   14000e597:	cmp    al,BYTE PTR [rip+0x20c98]        # 0x14002f235
   14000e59d:	jne    0x14000e5ce
   14000e59f:	movzx  eax,BYTE PTR [rsi+0x2]
   14000e5a3:	cmp    al,BYTE PTR [rip+0x20c8d]        # 0x14002f236
   14000e5a9:	jne    0x14000e5ce
   14000e5ab:	test   r12,r12
   14000e5ae:	cmove  r12,r15
   14000e5b2:	lea    r8,[rbp-0x59]
   14000e5b6:	mov    rdx,r12
   14000e5b9:	mov    rcx,QWORD PTR [rbp+0x67]
   14000e5bd:	call   0x14000ea40
   14000e5c2:	test   eax,eax
   14000e5c4:	mov    rsi,QWORD PTR [rbp-0x59]
   14000e5c8:	cmovne r15,rsi
   14000e5cc:	jmp    0x14000e5d2
   14000e5ce:	mov    rsi,QWORD PTR [rbp-0x59]
   14000e5d2:	test   r15,r15
   14000e5d5:	je     0x14000e6bb
   14000e5db:	mov    rcx,r14
   14000e5de:	call   0x140011370
   14000e5e3:	cmp    QWORD PTR [r14+0x8],0x0
   14000e5e8:	je     0x14000e650
   14000e5ea:	xor    r9d,r9d
   14000e5ed:	or     r8,0xffffffffffffffff
   14000e5f1:	lea    rdx,[rip+0x20c30]        # 0x14002f228
   14000e5f8:	lea    rcx,[rbp-0x49]
   14000e5fc:	call   0x14000fb80
   14000e601:	nop
   14000e602:	mov    rdx,rax
   14000e605:	mov    rcx,r14
   14000e608:	call   0x14000fdb0
   14000e60d:	nop
   14000e60e:	mov    rax,QWORD PTR [rbp-0x29]
   14000e612:	mov    rcx,rbx
   14000e615:	mov    QWORD PTR [rbp-0x29],rbx
   14000e619:	test   rax,rax
   14000e61c:	je     0x14000e62a
   14000e61e:	mov    rcx,rax
   14000e621:	call   0x140013924
   14000e626:	mov    rcx,QWORD PTR [rbp-0x29]
   14000e62a:	call   0x1400137cc
   14000e62f:	mov    rax,QWORD PTR [rbp-0x39]
   14000e633:	mov    rcx,rbx
   14000e636:	mov    QWORD PTR [rbp-0x39],rbx
   14000e63a:	test   rax,rax
   14000e63d:	je     0x14000e64b
   14000e63f:	mov    rcx,rax
   14000e642:	call   0x140013924
   14000e647:	mov    rcx,QWORD PTR [rbp-0x39]
   14000e64b:	call   0x1400137cc
   14000e650:	xor    r9d,r9d
   14000e653:	or     r8,0xffffffffffffffff
   14000e657:	mov    rdx,r15
   14000e65a:	lea    rcx,[rbp-0x49]
   14000e65e:	call   0x14000fb80
   14000e663:	nop
   14000e664:	mov    rdx,rax
   14000e667:	mov    rcx,r14
   14000e66a:	call   0x14000fdb0
   14000e66f:	nop
   14000e670:	mov    rax,QWORD PTR [rbp-0x29]
   14000e674:	mov    rcx,rbx
   14000e677:	mov    QWORD PTR [rbp-0x29],rbx
   14000e67b:	test   rax,rax
   14000e67e:	je     0x14000e68c
   14000e680:	mov    rcx,rax
   14000e683:	call   0x140013924
   14000e688:	mov    rcx,QWORD PTR [rbp-0x29]
   14000e68c:	call   0x1400137cc
   14000e691:	mov    rax,QWORD PTR [rbp-0x39]
   14000e695:	mov    rcx,rbx
   14000e698:	mov    QWORD PTR [rbp-0x39],rbx
   14000e69c:	test   rax,rax
   14000e69f:	je     0x14000e6ad
   14000e6a1:	mov    rcx,rax
   14000e6a4:	call   0x140013924
   14000e6a9:	mov    rcx,QWORD PTR [rbp-0x39]
   14000e6ad:	call   0x1400137cc
   14000e6b2:	jmp    0x14000e7b4
   14000e6b7:	mov    rsi,QWORD PTR [rbp-0x59]
   14000e6bb:	xor    r9d,r9d
   14000e6be:	or     r8,0xffffffffffffffff
   14000e6c2:	xor    edx,edx
   14000e6c4:	lea    rcx,[rbp-0x49]
   14000e6c8:	call   0x14000fb80
   14000e6cd:	nop
   14000e6ce:	xor    r9d,r9d
   14000e6d1:	xor    r8d,r8d
   14000e6d4:	lea    rdx,[rbp-0x49]
   14000e6d8:	lea    rcx,[rbp-0x19]
   14000e6dc:	call   0x1400108a0
   14000e6e1:	test   ax,ax
   14000e6e4:	setne  dil
   14000e6e8:	mov    rax,QWORD PTR [rbp-0x29]
   14000e6ec:	mov    rcx,rbx
   14000e6ef:	mov    QWORD PTR [rbp-0x29],rbx
   14000e6f3:	test   rax,rax
   14000e6f6:	je     0x14000e704
   14000e6f8:	mov    rcx,rax
   14000e6fb:	call   0x140013924
   14000e700:	mov    rcx,QWORD PTR [rbp-0x29]
   14000e704:	call   0x1400137cc
   14000e709:	mov    rax,QWORD PTR [rbp-0x39]
   14000e70d:	mov    rcx,rbx
   14000e710:	mov    QWORD PTR [rbp-0x39],rbx
   14000e714:	test   rax,rax
   14000e717:	je     0x14000e725
   14000e719:	mov    rcx,rax
   14000e71c:	call   0x140013924
   14000e721:	mov    rcx,QWORD PTR [rbp-0x39]
   14000e725:	call   0x1400137cc
   14000e72a:	test   dil,dil
   14000e72d:	je     0x14000e7b4
   14000e733:	mov    rcx,r14
   14000e736:	call   0x140011370
   14000e73b:	cmp    QWORD PTR [r14+0x8],0x0
   14000e740:	je     0x14000e7a8
   14000e742:	xor    r9d,r9d
   14000e745:	or     r8,0xffffffffffffffff
   14000e749:	lea    rdx,[rip+0x20ad8]        # 0x14002f228
   14000e750:	lea    rcx,[rbp-0x49]
   14000e754:	call   0x14000fb80
   14000e759:	nop
   14000e75a:	mov    rdx,rax
   14000e75d:	mov    rcx,r14
   14000e760:	call   0x14000fdb0
   14000e765:	nop
   14000e766:	mov    rax,QWORD PTR [rbp-0x29]
   14000e76a:	mov    rcx,rbx
   14000e76d:	mov    QWORD PTR [rbp-0x29],rbx
   14000e771:	test   rax,rax
   14000e774:	je     0x14000e782
   14000e776:	mov    rcx,rax
   14000e779:	call   0x140013924
   14000e77e:	mov    rcx,QWORD PTR [rbp-0x29]
   14000e782:	call   0x1400137cc
   14000e787:	mov    rax,QWORD PTR [rbp-0x39]
   14000e78b:	mov    rcx,rbx
   14000e78e:	mov    QWORD PTR [rbp-0x39],rbx
   14000e792:	test   rax,rax
   14000e795:	je     0x14000e7a3
   14000e797:	mov    rcx,rax
   14000e79a:	call   0x140013924
   14000e79f:	mov    rcx,QWORD PTR [rbp-0x39]
   14000e7a3:	call   0x1400137cc
   14000e7a8:	lea    rdx,[rbp-0x19]
   14000e7ac:	mov    rcx,r14
   14000e7af:	call   0x14000fdb0
   14000e7b4:	test   rsi,rsi
   14000e7b7:	je     0x14000e7c2
   14000e7b9:	mov    rcx,rsi
   14000e7bc:	call   0x14001392c
   14000e7c1:	nop
   14000e7c2:	mov    rax,QWORD PTR [rbp+0x7]
   14000e7c6:	mov    rcx,rbx
   14000e7c9:	mov    QWORD PTR [rbp+0x7],rbx
   14000e7cd:	test   rax,rax
   14000e7d0:	je     0x14000e7de
   14000e7d2:	mov    rcx,rax
   14000e7d5:	call   0x140013924
   14000e7da:	mov    rcx,QWORD PTR [rbp+0x7]
   14000e7de:	call   0x1400137cc
   14000e7e3:	mov    rcx,QWORD PTR [rbp-0x9]
   14000e7e7:	mov    QWORD PTR [rbp-0x9],rbx
   14000e7eb:	test   rcx,rcx
   14000e7ee:	je     0x14000e7f9
   14000e7f0:	call   0x140013924
   14000e7f5:	mov    rbx,QWORD PTR [rbp-0x9]
   14000e7f9:	mov    rcx,rbx
   14000e7fc:	call   0x1400137cc
   14000e801:	mov    eax,DWORD PTR [rbp-0x51]
   14000e804:	mov    rbx,QWORD PTR [rsp+0xf8]
   14000e80c:	add    rsp,0xa0
   14000e813:	pop    r15
   14000e815:	pop    r14
   14000e817:	pop    r13
   14000e819:	pop    r12
   14000e81b:	pop    rdi
   14000e81c:	pop    rsi
   14000e81d:	pop    rbp
   14000e81e:	ret    
   14000e81f:	int3   
   14000e820:	push   r12
   14000e822:	push   r13
   14000e824:	push   r14
   14000e826:	push   r15
   14000e828:	sub    rsp,0x68
   14000e82c:	inc    DWORD PTR [rcx+0x84]
   14000e832:	mov    r11d,DWORD PTR [r8+0x4]
   14000e836:	xor    r13d,r13d
   14000e839:	mov    r12,r9
   14000e83c:	mov    r15,rdx
   14000e83f:	mov    r14,rcx
   14000e842:	mov    r10d,r13d
   14000e845:	test   r11d,r11d
   14000e848:	je     0x14000ea2b
   14000e84e:	mov    r8,QWORD PTR [r8+0x8]
   14000e852:	nop    DWORD PTR [rax+0x0]
   14000e856:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e860:	mov    eax,r10d
   14000e863:	lea    rcx,[rax+rax*2]
   14000e867:	cmp    DWORD PTR [r8+rcx*8],0xfff0102
   14000e86f:	lea    rax,[r8+rcx*8]
   14000e873:	je     0x14000e88a
   14000e875:	inc    r10d
   14000e878:	cmp    r10d,r11d
   14000e87b:	jb     0x14000e860
   14000e87d:	add    rsp,0x68
   14000e881:	pop    r15
   14000e883:	pop    r14
   14000e885:	pop    r13
   14000e887:	pop    r12
   14000e889:	ret    
   14000e88a:	lea    rcx,[rax+0x8]
   14000e88e:	test   rcx,rcx
   14000e891:	je     0x14000ea2b
   14000e897:	mov    rax,QWORD PTR [rdx]
   14000e89a:	mov    DWORD PTR [rsp+0x90],r13d
   14000e8a2:	mov    r8,QWORD PTR [rcx+0x8]
   14000e8a6:	lea    rdx,[rsp+0xa0]
   14000e8ae:	xor    r9d,r9d
   14000e8b1:	mov    QWORD PTR [rsp+0x30],rdx
   14000e8b6:	lea    rdx,[rsp+0x90]
   14000e8be:	mov    QWORD PTR [rsp+0x28],rdx
   14000e8c3:	mov    edx,DWORD PTR [rcx]
   14000e8c5:	mov    rcx,r15
   14000e8c8:	mov    DWORD PTR [rsp+0x20],r13d
   14000e8cd:	call   QWORD PTR [rax+0x70]
   14000e8d0:	test   eax,eax
   14000e8d2:	js     0x14000ea2b
   14000e8d8:	cmp    DWORD PTR [rsp+0x90],0x8
   14000e8e0:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000e8e8:	jne    0x14000e908
   14000e8ea:	mov    QWORD PTR [rsp+0x48],r13
   14000e8ef:	mov    rax,QWORD PTR [rcx]
   14000e8f2:	lea    r8,[rsp+0x48]
   14000e8f7:	xor    edx,edx
   14000e8f9:	call   QWORD PTR [rax+0x70]
   14000e8fc:	test   eax,eax
   14000e8fe:	jns    0x14000e91b
   14000e900:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000e908:	mov    rax,QWORD PTR [rcx]
   14000e90b:	call   QWORD PTR [rax+0x10]
   14000e90e:	add    rsp,0x68
   14000e912:	pop    r15
   14000e914:	pop    r14
   14000e916:	pop    r13
   14000e918:	pop    r12
   14000e91a:	ret    
   14000e91b:	mov    QWORD PTR [rsp+0x98],rbx
   14000e923:	mov    QWORD PTR [rsp+0x58],rsi
   14000e928:	mov    QWORD PTR [rsp+0x50],rdi
   14000e92d:	mov    QWORD PTR [rsp+0x60],rbp
   14000e932:	nop    DWORD PTR [rax+0x0]
   14000e936:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e940:	mov    rcx,QWORD PTR [rsp+0x48]
   14000e945:	xor    r8d,r8d
   14000e948:	mov    QWORD PTR [rsp+0x40],r13
   14000e94d:	mov    rax,QWORD PTR [rcx]
   14000e950:	lea    r9,[rsp+0x40]
   14000e955:	lea    edx,[r8+0x64]
   14000e959:	call   QWORD PTR [rax+0x98]
   14000e95f:	test   eax,eax
   14000e961:	js     0x14000e9f4
   14000e967:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e96c:	mov    ebp,DWORD PTR [rbx]
   14000e96e:	test   ebp,ebp
   14000e970:	je     0x14000e9a7
   14000e972:	mov    edi,r13d
   14000e975:	jle    0x14000e9a7
   14000e977:	nop    WORD PTR [rax+rax*1+0x0]
   14000e980:	movsxd rax,edi
   14000e983:	lea    r8,[rbx+0x8]
   14000e987:	mov    r9,r12
   14000e98a:	shl    rax,0x4
   14000e98e:	mov    rdx,r15
   14000e991:	mov    rcx,r14
   14000e994:	add    r8,rax
   14000e997:	call   0x14000e450
   14000e99c:	inc    edi
   14000e99e:	cmp    edi,DWORD PTR [rbx]
   14000e9a0:	jl     0x14000e980
   14000e9a2:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e9a7:	mov    rsi,QWORD PTR [r14+0x38]
   14000e9ab:	test   rbx,rbx
   14000e9ae:	je     0x14000e9ec
   14000e9b0:	mov    edi,r13d
   14000e9b3:	cmp    DWORD PTR [rbx],r13d
   14000e9b6:	jbe    0x14000e9e0
   14000e9b8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e9c0:	mov    eax,edi
   14000e9c2:	inc    rax
   14000e9c5:	add    rax,rax
   14000e9c8:	mov    rdx,QWORD PTR [rbx+rax*8]
   14000e9cc:	test   rdx,rdx
   14000e9cf:	je     0x14000e9da
   14000e9d1:	mov    rax,QWORD PTR [rsi]
   14000e9d4:	mov    rcx,rsi
   14000e9d7:	call   QWORD PTR [rax+0x10]
   14000e9da:	inc    edi
   14000e9dc:	cmp    edi,DWORD PTR [rbx]
   14000e9de:	jb     0x14000e9c0
   14000e9e0:	mov    rax,QWORD PTR [rsi]
   14000e9e3:	mov    rdx,rbx
   14000e9e6:	mov    rcx,rsi
   14000e9e9:	call   QWORD PTR [rax+0x10]
   14000e9ec:	test   ebp,ebp
   14000e9ee:	jne    0x14000e940
   14000e9f4:	mov    rcx,QWORD PTR [rsp+0x48]
   14000e9f9:	mov    rax,QWORD PTR [rcx]
   14000e9fc:	call   QWORD PTR [rax+0x10]
   14000e9ff:	mov    rcx,QWORD PTR [rsp+0xa0]
   14000ea07:	mov    rax,QWORD PTR [rcx]
   14000ea0a:	call   QWORD PTR [rax+0x10]
   14000ea0d:	dec    DWORD PTR [r14+0x84]
   14000ea14:	mov    rdi,QWORD PTR [rsp+0x50]
   14000ea19:	mov    rsi,QWORD PTR [rsp+0x58]
   14000ea1e:	mov    rbp,QWORD PTR [rsp+0x60]
   14000ea23:	mov    rbx,QWORD PTR [rsp+0x98]
   14000ea2b:	add    rsp,0x68
   14000ea2f:	pop    r15
   14000ea31:	pop    r14
   14000ea33:	pop    r13
   14000ea35:	pop    r12
   14000ea37:	ret    
   14000ea38:	int3   
   14000ea39:	int3   
   14000ea3a:	int3   
   14000ea3b:	int3   
   14000ea3c:	int3   
   14000ea3d:	int3   
   14000ea3e:	int3   
   14000ea3f:	int3   
   14000ea40:	mov    QWORD PTR [rsp+0x10],rdx
   14000ea45:	push   rbp
   14000ea46:	push   rbx
   14000ea47:	push   rsi
   14000ea48:	push   rdi
   14000ea49:	push   r12
   14000ea4b:	push   r14
   14000ea4d:	push   r15
   14000ea4f:	lea    rbp,[rsp-0x27]
   14000ea54:	sub    rsp,0x100
   14000ea5b:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   14000ea63:	mov    r12,r8
   14000ea66:	mov    rdi,rcx
   14000ea69:	xor    esi,esi
   14000ea6b:	mov    DWORD PTR [rbp+0x67],esi
   14000ea6e:	xor    r9d,r9d
   14000ea71:	or     r8,0xffffffffffffffff
   14000ea75:	lea    rdx,[rip+0x206b0]        # 0x14002f12c
   14000ea7c:	lea    rcx,[rbp-0x49]
   14000ea80:	call   0x14000fb80
   14000ea85:	mov    r15,rax
   14000ea88:	mov    r14,QWORD PTR [rdi+0x90]
   14000ea8f:	mov    rbx,QWORD PTR [r14+0x8]
   14000ea93:	cmp    BYTE PTR [rbx+0x19],sil
   14000ea97:	jne    0x14000eac9
   14000ea99:	nop    DWORD PTR [rax+0x0]
   14000eaa0:	lea    rcx,[rbx+0x20]
   14000eaa4:	xor    r9d,r9d
   14000eaa7:	xor    r8d,r8d
   14000eaaa:	mov    rdx,r15
   14000eaad:	call   0x1400108a0
   14000eab2:	test   ax,ax
   14000eab5:	jns    0x14000eabd
   14000eab7:	mov    rbx,QWORD PTR [rbx+0x10]
   14000eabb:	jmp    0x14000eac3
   14000eabd:	mov    r14,rbx
   14000eac0:	mov    rbx,QWORD PTR [rbx]
   14000eac3:	cmp    BYTE PTR [rbx+0x19],0x0
   14000eac7:	je     0x14000eaa0
   14000eac9:	cmp    r14,QWORD PTR [rdi+0x90]
   14000ead0:	je     0x14000eaef
   14000ead2:	lea    rdx,[r14+0x20]
   14000ead6:	xor    r9d,r9d
   14000ead9:	xor    r8d,r8d
   14000eadc:	mov    rcx,r15
   14000eadf:	call   0x1400108a0
   14000eae4:	test   ax,ax
   14000eae7:	js     0x14000eaef
   14000eae9:	mov    QWORD PTR [rbp+0x7f],r14
   14000eaed:	jmp    0x14000eafa
   14000eaef:	mov    rax,QWORD PTR [rdi+0x90]
   14000eaf6:	mov    QWORD PTR [rbp+0x7f],rax
   14000eafa:	lea    rbx,[rbp+0x7f]
   14000eafe:	mov    rbx,QWORD PTR [rbx]
   14000eb01:	mov    rax,QWORD PTR [rbp-0x29]
   14000eb05:	mov    rcx,rsi
   14000eb08:	mov    QWORD PTR [rbp-0x29],rcx
   14000eb0c:	test   rax,rax
   14000eb0f:	je     0x14000eb1d
   14000eb11:	mov    rcx,rax
   14000eb14:	call   0x140013924
   14000eb19:	mov    rcx,QWORD PTR [rbp-0x29]
   14000eb1d:	call   0x1400137cc
   14000eb22:	mov    rax,QWORD PTR [rbp-0x39]
   14000eb26:	mov    rcx,rsi
   14000eb29:	mov    QWORD PTR [rbp-0x39],rcx
   14000eb2d:	test   rax,rax
   14000eb30:	je     0x14000eb3e
   14000eb32:	mov    rcx,rax
   14000eb35:	call   0x140013924
   14000eb3a:	mov    rcx,QWORD PTR [rbp-0x39]
   14000eb3e:	call   0x1400137cc
   14000eb43:	cmp    rbx,QWORD PTR [rdi+0x90]
   14000eb4a:	je     0x14000eb73
   14000eb4c:	xor    r9d,r9d
   14000eb4f:	or     r8,0xffffffffffffffff
   14000eb53:	lea    rdx,[rip+0x205da]        # 0x14002f134
   14000eb5a:	lea    rcx,[rbp-0x11]
   14000eb5e:	call   0x14000fb80
   14000eb63:	lea    rcx,[rbx+0x50]
   14000eb67:	lea    r8,[rbp+0x67]
   14000eb6b:	mov    rdx,rax
   14000eb6e:	call   0x140012020
   14000eb73:	mov    ebx,DWORD PTR [rbp+0x67]
   14000eb76:	cmp    QWORD PTR [rdi+0x48],0x0
   14000eb7b:	je     0x14000eecd
   14000eb81:	cmp    QWORD PTR [rdi+0x50],0x0
   14000eb86:	je     0x14000eecd
   14000eb8c:	cmp    QWORD PTR [rdi+0x58],0x0
   14000eb91:	je     0x14000eecd
   14000eb97:	mov    rcx,QWORD PTR [rdi+0x78]
   14000eb9b:	test   rcx,rcx
   14000eb9e:	je     0x14000eed4
   14000eba4:	mov    QWORD PTR [rsp+0x50],rsi
   14000eba9:	mov    rax,QWORD PTR [rcx]
   14000ebac:	lea    r8,[rsp+0x50]
   14000ebb1:	xor    edx,edx
   14000ebb3:	call   QWORD PTR [rax+0x20]
   14000ebb6:	mov    DWORD PTR [rdi+0x28],eax
   14000ebb9:	test   eax,eax
   14000ebbb:	js     0x14000eec9
   14000ebc1:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ebc6:	mov    rax,QWORD PTR [rcx]
   14000ebc9:	xor    r8d,r8d
   14000ebcc:	lea    rdx,[rip+0x2070d]        # 0x14002f2e0
   14000ebd3:	call   QWORD PTR [rax+0x38]
   14000ebd6:	mov    DWORD PTR [rdi+0x28],eax
   14000ebd9:	test   eax,eax
   14000ebdb:	js     0x14000eebe
   14000ebe1:	mov    QWORD PTR [rsp+0x58],rsi
   14000ebe6:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ebeb:	mov    rax,QWORD PTR [rcx]
   14000ebee:	lea    r9,[rsp+0x58]
   14000ebf3:	xor    r8d,r8d
   14000ebf6:	lea    edx,[r8+0x1]
   14000ebfa:	call   QWORD PTR [rax+0x98]
   14000ec00:	mov    DWORD PTR [rdi+0x28],eax
   14000ec03:	mov    rdx,QWORD PTR [rsp+0x58]
   14000ec08:	test   rdx,rdx
   14000ec0b:	je     0x14000eebe
   14000ec11:	cmp    DWORD PTR [rdx],0x0
   14000ec14:	je     0x14000ec38
   14000ec16:	test   eax,eax
   14000ec18:	js     0x14000ec38
   14000ec1a:	cmp    eax,0x40380
   14000ec1f:	je     0x14000ec38
   14000ec21:	mov    rax,QWORD PTR [rdx+0x10]
   14000ec25:	movzx  ecx,WORD PTR [rax+0x8]
   14000ec29:	test   ecx,ecx
   14000ec2b:	jne    0x14000ec38
   14000ec2d:	mov    rcx,QWORD PTR [rdi+0x38]
   14000ec31:	call   0x140008ea0
   14000ec36:	jmp    0x14000ebe1
   14000ec38:	test   rdx,rdx
   14000ec3b:	je     0x14000eebe
   14000ec41:	cmp    DWORD PTR [rdx],0x0
   14000ec44:	je     0x14000eebe
   14000ec4a:	mov    rax,QWORD PTR [rdx+0x10]
   14000ec4e:	mov    r8d,DWORD PTR [rax+0x20]
   14000ec52:	mov    r9,QWORD PTR [rax+0x28]
   14000ec56:	mov    QWORD PTR [rsp+0x48],rsi
   14000ec5b:	mov    rcx,QWORD PTR [rdi+0x78]
   14000ec5f:	mov    rax,QWORD PTR [rcx]
   14000ec62:	movsxd rdx,ebx
   14000ec65:	lea    r10,[rsp+0x48]
   14000ec6a:	mov    QWORD PTR [rsp+0x30],r10
   14000ec6f:	mov    DWORD PTR [rsp+0x28],0x4
   14000ec77:	mov    QWORD PTR [rsp+0x20],rsi
   14000ec7c:	call   QWORD PTR [rax+0x28]
   14000ec7f:	mov    DWORD PTR [rdi+0x28],eax
   14000ec82:	test   eax,eax
   14000ec84:	js     0x14000eeab
   14000ec8a:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ec8f:	mov    rax,QWORD PTR [rcx]
   14000ec92:	lea    rdx,[rbp-0x51]
   14000ec96:	mov    QWORD PTR [rsp+0x20],rdx
   14000ec9b:	lea    r9,[rbp+0x7f]
   14000ec9f:	xor    r8d,r8d
   14000eca2:	lea    rdx,[rip+0x2058f]        # 0x14002f238
   14000eca9:	call   QWORD PTR [rax+0x28]
   14000ecac:	mov    DWORD PTR [rdi+0x28],eax
   14000ecaf:	test   eax,eax
   14000ecb1:	js     0x14000eea0
   14000ecb7:	cmp    eax,0x40380
   14000ecbc:	je     0x14000ee92
   14000ecc2:	cmp    DWORD PTR [rbp+0x7f],0x1
   14000ecc6:	jne    0x14000ee92
   14000eccc:	mov    rax,QWORD PTR [rbp-0x51]
   14000ecd0:	mov    edx,DWORD PTR [rax+0x8]
   14000ecd3:	mov    r8,QWORD PTR [rax+0x10]
   14000ecd7:	mov    QWORD PTR [rbp-0x61],rsi
   14000ecdb:	mov    DWORD PTR [rbp-0x71],esi
   14000ecde:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ece3:	mov    rax,QWORD PTR [rcx]
   14000ece6:	lea    r9,[rbp-0x61]
   14000ecea:	mov    QWORD PTR [rsp+0x30],r9
   14000ecef:	lea    r9,[rbp-0x71]
   14000ecf3:	mov    QWORD PTR [rsp+0x28],r9
   14000ecf8:	mov    DWORD PTR [rsp+0x20],0x10
   14000ed00:	xor    r9d,r9d
   14000ed03:	call   QWORD PTR [rax+0x88]
   14000ed09:	mov    DWORD PTR [rdi+0x28],eax
   14000ed0c:	test   eax,eax
   14000ed0e:	js     0x14000ee92
   14000ed14:	mov    QWORD PTR [rsp+0x40],rsi
   14000ed19:	mov    rcx,QWORD PTR [rbp-0x61]
   14000ed1d:	mov    rax,QWORD PTR [rcx]
   14000ed20:	lea    r9,[rsp+0x40]
   14000ed25:	xor    r8d,r8d
   14000ed28:	xor    edx,edx
   14000ed2a:	call   QWORD PTR [rax+0x98]
   14000ed30:	mov    DWORD PTR [rdi+0x28],eax
   14000ed33:	test   eax,eax
   14000ed35:	js     0x14000ee88
   14000ed3b:	mov    QWORD PTR [rbp-0x79],rsi
   14000ed3f:	mov    rcx,QWORD PTR [rdi+0x78]
   14000ed43:	mov    rax,QWORD PTR [rcx]
   14000ed46:	mov    r9d,esi
   14000ed49:	cmp    DWORD PTR [rdi+0x80],esi
   14000ed4f:	setne  r9b
   14000ed53:	lea    rdx,[rbp-0x79]
   14000ed57:	mov    QWORD PTR [rsp+0x20],rdx
   14000ed5c:	xor    r8d,r8d
   14000ed5f:	xor    edx,edx
   14000ed61:	call   QWORD PTR [rax+0x30]
   14000ed64:	mov    DWORD PTR [rdi+0x28],eax
   14000ed67:	test   eax,eax
   14000ed69:	js     0x14000ee7d
   14000ed6f:	mov    DWORD PTR [rsp+0x30],0x1
   14000ed77:	mov    QWORD PTR [rsp+0x28],rsi
   14000ed7c:	mov    QWORD PTR [rsp+0x20],rsi
   14000ed81:	lea    r9,[rbp+0x6f]
   14000ed85:	mov    r8,rbx
   14000ed88:	mov    rdx,QWORD PTR [rbp-0x79]
   14000ed8c:	mov    rcx,rdi
   14000ed8f:	call   0x14000d750
   14000ed94:	mov    rbx,rax
   14000ed97:	test   rax,rax
   14000ed9a:	je     0x14000ee73
   14000eda0:	mov    rcx,QWORD PTR [rsp+0x40]
   14000eda5:	mov    rax,QWORD PTR [rcx]
   14000eda8:	mov    r8,rbx
   14000edab:	mov    edx,0x2
   14000edb0:	call   QWORD PTR [rax+0x98]
   14000edb6:	mov    DWORD PTR [rdi+0x28],eax
   14000edb9:	test   eax,eax
   14000edbb:	js     0x14000ee67
   14000edc1:	mov    QWORD PTR [rbp-0x69],rsi
   14000edc5:	mov    rcx,QWORD PTR [rsp+0x40]
   14000edca:	mov    rax,QWORD PTR [rcx]
   14000edcd:	lea    r8,[rbp-0x69]
   14000edd1:	xor    edx,edx
   14000edd3:	call   QWORD PTR [rax+0x90]
   14000edd9:	mov    DWORD PTR [rdi+0x28],eax
   14000eddc:	test   eax,eax
   14000edde:	js     0x14000ee67
   14000ede4:	mov    rcx,QWORD PTR [rbp-0x69]
   14000ede8:	mov    rax,QWORD PTR [rcx]
   14000edeb:	lea    r9,[rbp-0x59]
   14000edef:	xor    r8d,r8d
   14000edf2:	lea    edx,[r8+0x1]
   14000edf6:	call   QWORD PTR [rax+0x98]
   14000edfc:	mov    DWORD PTR [rdi+0x28],eax
   14000edff:	test   eax,eax
   14000ee01:	js     0x14000ee5d
   14000ee03:	mov    r8,QWORD PTR [rbp-0x59]
   14000ee07:	cmp    DWORD PTR [r8],0x1
   14000ee0b:	jne    0x14000ee51
   14000ee0d:	mov    edx,esi
   14000ee0f:	mov    r9d,DWORD PTR [r8+0xc]
   14000ee13:	test   r9d,r9d
   14000ee16:	je     0x14000ee51
   14000ee18:	mov    r10,QWORD PTR [r8+0x10]
   14000ee1c:	nop    DWORD PTR [rax+0x0]
   14000ee20:	mov    eax,edx
   14000ee22:	lea    rcx,[rax+rax*2]
   14000ee26:	lea    rcx,[r10+rcx*8]
   14000ee2a:	cmp    DWORD PTR [rcx],0x39fe001e
   14000ee30:	je     0x14000ee3b
   14000ee32:	inc    edx
   14000ee34:	cmp    edx,r9d
   14000ee37:	jb     0x14000ee20
   14000ee39:	jmp    0x14000ee51
   14000ee3b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000ee3f:	call   0x1400091b0
   14000ee44:	mov    QWORD PTR [r12],rax
   14000ee48:	mov    esi,0x1
   14000ee4d:	mov    r8,QWORD PTR [rbp-0x59]
   14000ee51:	mov    rdx,r8
   14000ee54:	mov    rcx,QWORD PTR [rdi+0x38]
   14000ee58:	call   0x140008ea0
   14000ee5d:	mov    rcx,QWORD PTR [rbp-0x69]
   14000ee61:	mov    rax,QWORD PTR [rcx]
   14000ee64:	call   QWORD PTR [rax+0x10]
   14000ee67:	mov    rdx,rbx
   14000ee6a:	mov    rcx,QWORD PTR [rdi+0x38]
   14000ee6e:	call   0x140008ea0
   14000ee73:	mov    rcx,QWORD PTR [rbp-0x79]
   14000ee77:	mov    rax,QWORD PTR [rcx]
   14000ee7a:	call   QWORD PTR [rax+0x10]
   14000ee7d:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ee82:	mov    rax,QWORD PTR [rcx]
   14000ee85:	call   QWORD PTR [rax+0x10]
   14000ee88:	mov    rcx,QWORD PTR [rbp-0x61]
   14000ee8c:	mov    rax,QWORD PTR [rcx]
   14000ee8f:	call   QWORD PTR [rax+0x10]
   14000ee92:	mov    rcx,QWORD PTR [rdi+0x38]
   14000ee96:	mov    rax,QWORD PTR [rcx]
   14000ee99:	mov    rdx,QWORD PTR [rbp-0x51]
   14000ee9d:	call   QWORD PTR [rax+0x10]
   14000eea0:	mov    rcx,QWORD PTR [rsp+0x48]
   14000eea5:	mov    rax,QWORD PTR [rcx]
   14000eea8:	call   QWORD PTR [rax+0x10]
   14000eeab:	mov    rdx,QWORD PTR [rsp+0x58]
   14000eeb0:	test   rdx,rdx
   14000eeb3:	je     0x14000eebe
   14000eeb5:	mov    rcx,QWORD PTR [rdi+0x38]
   14000eeb9:	call   0x140008ea0
   14000eebe:	mov    rcx,QWORD PTR [rsp+0x50]
   14000eec3:	mov    rdx,QWORD PTR [rcx]
   14000eec6:	call   QWORD PTR [rdx+0x10]
   14000eec9:	mov    eax,esi
   14000eecb:	jmp    0x14000eed6
   14000eecd:	mov    DWORD PTR [rdi+0x28],0x80040102
   14000eed4:	xor    eax,eax
   14000eed6:	add    rsp,0x100
   14000eedd:	pop    r15
   14000eedf:	pop    r14
   14000eee1:	pop    r12
   14000eee3:	pop    rdi
   14000eee4:	pop    rsi
   14000eee5:	pop    rbx
   14000eee6:	pop    rbp
   14000eee7:	ret    
   14000eee8:	int3   
   14000eee9:	int3   
   14000eeea:	int3   
   14000eeeb:	int3   
   14000eeec:	int3   
   14000eeed:	int3   
   14000eeee:	int3   
   14000eeef:	int3   
   14000eef0:	mov    QWORD PTR [rsp+0x18],r8
   14000eef5:	mov    QWORD PTR [rsp+0x10],rdx
   14000eefa:	push   rbp
   14000eefb:	push   rsi
   14000eefc:	push   rdi
   14000eefd:	sub    rsp,0x30
   14000ef01:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ef0a:	mov    QWORD PTR [rsp+0x50],rbx
   14000ef0f:	mov    rdi,r8
   14000ef12:	mov    rbx,rdx
   14000ef15:	mov    rbp,rcx
   14000ef18:	or     r8,0xffffffffffffffff
   14000ef1c:	call   0x140010560
   14000ef21:	lea    rsi,[rbp+0x30]
   14000ef25:	cmp    rsi,rdi
   14000ef28:	je     0x14000ef66
   14000ef2a:	mov    rdx,QWORD PTR [rsi]
   14000ef2d:	mov    rdx,QWORD PTR [rdx+0x8]
   14000ef31:	mov    rcx,rsi
   14000ef34:	call   0x140004f50
   14000ef39:	mov    rax,QWORD PTR [rsi]
   14000ef3c:	mov    QWORD PTR [rax+0x8],rax
   14000ef40:	mov    rax,QWORD PTR [rsi]
   14000ef43:	mov    QWORD PTR [rax],rax
   14000ef46:	mov    rax,QWORD PTR [rsi]
   14000ef49:	mov    QWORD PTR [rax+0x10],rax
   14000ef4d:	mov    QWORD PTR [rsi+0x8],0x0
   14000ef55:	xor    eax,eax
   14000ef57:	movzx  r8d,al
   14000ef5b:	mov    rdx,rdi
   14000ef5e:	mov    rcx,rsi
   14000ef61:	call   0x140005070
   14000ef66:	lea    rcx,[rbp+0x58]
   14000ef6a:	call   QWORD PTR [rip+0x181e0]        # 0x140027150
   14000ef70:	nop
   14000ef71:	mov    rcx,QWORD PTR [rbx+0x20]
   14000ef75:	mov    QWORD PTR [rbx+0x20],0x0
   14000ef7d:	test   rcx,rcx
   14000ef80:	je     0x14000ef87
   14000ef82:	call   0x140013924
   14000ef87:	mov    rcx,QWORD PTR [rbx+0x20]
   14000ef8b:	call   0x1400137cc
   14000ef90:	mov    rcx,QWORD PTR [rbx+0x10]
   14000ef94:	mov    QWORD PTR [rbx+0x10],0x0
   14000ef9c:	test   rcx,rcx
   14000ef9f:	je     0x14000efa6
   14000efa1:	call   0x140013924
   14000efa6:	mov    rcx,QWORD PTR [rbx+0x10]
   14000efaa:	call   0x1400137cc
   14000efaf:	nop
   14000efb0:	mov    r8,QWORD PTR [rdi]
   14000efb3:	mov    r9,r8
   14000efb6:	mov    r8,QWORD PTR [r8]
   14000efb9:	lea    rdx,[rsp+0x60]
   14000efbe:	mov    rcx,rdi
   14000efc1:	call   0x140004990
   14000efc6:	mov    rcx,QWORD PTR [rdi]
   14000efc9:	mov    rbx,QWORD PTR [rsp+0x50]
   14000efce:	add    rsp,0x30
   14000efd2:	pop    rdi
   14000efd3:	pop    rsi
   14000efd4:	pop    rbp
   14000efd5:	jmp    0x1400137cc
   14000efda:	int3   
   14000efdb:	int3   
   14000efdc:	int3   
   14000efdd:	int3   
   14000efde:	int3   
   14000efdf:	int3   
   14000efe0:	mov    QWORD PTR [rsp+0x8],rcx
   14000efe5:	push   rbx
   14000efe6:	sub    rsp,0x20
   14000efea:	mov    r8,QWORD PTR [rip+0x2b38f]        # 0x14003a380
   14000eff1:	lea    rdx,[rsp+0x30]
   14000eff6:	lea    rcx,[rip+0x2b383]        # 0x14003a380
   14000effd:	mov    r9,r8
   14000f000:	mov    r8,QWORD PTR [r8]
   14000f003:	call   0x140004990
   14000f008:	mov    rcx,QWORD PTR [rip+0x2b371]        # 0x14003a380
   14000f00f:	call   0x1400137cc
   14000f014:	mov    r8,QWORD PTR [rip+0x2b355]        # 0x14003a370
   14000f01b:	lea    rdx,[rsp+0x30]
   14000f020:	mov    r9,r8
   14000f023:	mov    r8,QWORD PTR [r8]
   14000f026:	lea    rcx,[rip+0x2b343]        # 0x14003a370
   14000f02d:	call   0x140004990
   14000f032:	mov    rcx,QWORD PTR [rip+0x2b337]        # 0x14003a370
   14000f039:	call   0x1400137cc
   14000f03e:	mov    rax,QWORD PTR [rip+0x2b31b]        # 0x14003a360
   14000f045:	xor    ebx,ebx
   14000f047:	mov    ecx,ebx
   14000f049:	mov    QWORD PTR [rip+0x2b310],rbx        # 0x14003a360
   14000f050:	test   rax,rax
   14000f053:	je     0x14000f064
   14000f055:	mov    rcx,rax
   14000f058:	call   0x140013924
   14000f05d:	mov    rcx,QWORD PTR [rip+0x2b2fc]        # 0x14003a360
   14000f064:	call   0x1400137cc
   14000f069:	mov    rcx,QWORD PTR [rip+0x2b2e0]        # 0x14003a350
   14000f070:	mov    QWORD PTR [rip+0x2b2d9],rbx        # 0x14003a350
   14000f077:	test   rcx,rcx
   14000f07a:	je     0x14000f088
   14000f07c:	call   0x140013924
   14000f081:	mov    rbx,QWORD PTR [rip+0x2b2c8]        # 0x14003a350
   14000f088:	mov    rcx,rbx
   14000f08b:	add    rsp,0x20
   14000f08f:	pop    rbx
   14000f090:	jmp    0x1400137cc
   14000f095:	int3   
   14000f096:	int3   
   14000f097:	int3   
   14000f098:	int3   
   14000f099:	int3   
   14000f09a:	int3   
   14000f09b:	int3   
   14000f09c:	int3   
   14000f09d:	int3   
   14000f09e:	int3   
   14000f09f:	int3   
   14000f0a0:	mov    QWORD PTR [rsp+0x10],rbx
   14000f0a5:	mov    QWORD PTR [rsp+0x18],rbp
   14000f0aa:	push   rsi
   14000f0ab:	push   rdi
   14000f0ac:	push   r14
   14000f0ae:	sub    rsp,0x20
   14000f0b2:	mov    rdi,QWORD PTR [rcx]
   14000f0b5:	mov    rbp,r8
   14000f0b8:	mov    r14,rdx
   14000f0bb:	mov    rbx,QWORD PTR [rdi+0x8]
   14000f0bf:	mov    rsi,rcx
   14000f0c2:	cmp    BYTE PTR [rbx+0x19],0x0
   14000f0c6:	jne    0x14000f0f9
   14000f0c8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f0d0:	lea    rcx,[rbx+0x20]
   14000f0d4:	xor    r9d,r9d
   14000f0d7:	xor    r8d,r8d
   14000f0da:	mov    rdx,rbp
   14000f0dd:	call   0x1400108a0
   14000f0e2:	test   ax,ax
   14000f0e5:	jns    0x14000f0ed
   14000f0e7:	mov    rbx,QWORD PTR [rbx+0x10]
   14000f0eb:	jmp    0x14000f0f3
   14000f0ed:	mov    rdi,rbx
   14000f0f0:	mov    rbx,QWORD PTR [rbx]
   14000f0f3:	cmp    BYTE PTR [rbx+0x19],0x0
   14000f0f7:	je     0x14000f0d0
   14000f0f9:	cmp    rdi,QWORD PTR [rsi]
   14000f0fc:	je     0x14000f11c
   14000f0fe:	lea    rdx,[rdi+0x20]
   14000f102:	xor    r9d,r9d
   14000f105:	xor    r8d,r8d
   14000f108:	mov    rcx,rbp
   14000f10b:	call   0x1400108a0
   14000f110:	test   ax,ax
   14000f113:	js     0x14000f11c
   14000f115:	mov    QWORD PTR [rsp+0x40],rdi
   14000f11a:	jmp    0x14000f124
   14000f11c:	mov    rax,QWORD PTR [rsi]
   14000f11f:	mov    QWORD PTR [rsp+0x40],rax
   14000f124:	mov    rbx,QWORD PTR [rsp+0x48]
   14000f129:	mov    rbp,QWORD PTR [rsp+0x50]
   14000f12e:	lea    rax,[rsp+0x40]
   14000f133:	mov    rax,QWORD PTR [rax]
   14000f136:	mov    QWORD PTR [r14],rax
   14000f139:	mov    rax,r14
   14000f13c:	add    rsp,0x20
   14000f140:	pop    r14
   14000f142:	pop    rdi
   14000f143:	pop    rsi
   14000f144:	ret    
   14000f145:	int3   
   14000f146:	int3   
   14000f147:	int3   
   14000f148:	int3   
   14000f149:	int3   
   14000f14a:	int3   
   14000f14b:	int3   
   14000f14c:	int3   
   14000f14d:	int3   
   14000f14e:	int3   
   14000f14f:	int3   
   14000f150:	mov    QWORD PTR [rsp+0x20],rsi
   14000f155:	push   rbp
   14000f156:	lea    rbp,[rsp-0x190]
   14000f15e:	sub    rsp,0x290
   14000f165:	xor    esi,esi
   14000f167:	mov    QWORD PTR [rsp+0x2a0],rbx
   14000f16f:	lea    rbx,[rip+0x187ca]        # 0x140027940
   14000f176:	lea    rcx,[rbp+0x48]
   14000f17a:	mov    QWORD PTR [rbp+0x48],rbx
   14000f17e:	mov    DWORD PTR [rbp+0x40],esi
   14000f181:	mov    QWORD PTR [rbp+0x50],rsi
   14000f185:	call   0x140012790
   14000f18a:	lea    rcx,[rbp+0x58]
   14000f18e:	mov    QWORD PTR [rbp+0x58],rbx
   14000f192:	mov    QWORD PTR [rbp+0x60],rsi
   14000f196:	call   0x140012790
   14000f19b:	lea    edx,[rsi+0x1]
   14000f19e:	xor    r9d,r9d
   14000f1a1:	xor    r8d,r8d
   14000f1a4:	xor    ecx,ecx
   14000f1a6:	call   QWORD PTR [rip+0x17e84]        # 0x140027030
   14000f1ac:	mov    QWORD PTR [rbp+0x68],rax
   14000f1b0:	call   QWORD PTR [rip+0x17fa2]        # 0x140027158
   14000f1b6:	lea    rcx,[rbp+0x10]
   14000f1ba:	xor    r9d,r9d
   14000f1bd:	or     r8,0xffffffffffffffff
   14000f1c1:	mov    rdx,rax
   14000f1c4:	call   0x14000fb80
   14000f1c9:	lea    rdx,[rip+0x1fb40]        # 0x14002ed10
   14000f1d0:	lea    rcx,[rbp+0xa0]
   14000f1d7:	xor    r9d,r9d
   14000f1da:	or     r8,0xffffffffffffffff
   14000f1de:	call   0x14000fb80
   14000f1e3:	lea    rdx,[rip+0x1fb16]        # 0x14002ed00
   14000f1ea:	lea    rcx,[rbp+0x70]
   14000f1ee:	xor    r9d,r9d
   14000f1f1:	or     r8,0xffffffffffffffff
   14000f1f5:	call   0x14000fb80
   14000f1fa:	lea    rdx,[rbp+0xa0]
   14000f201:	lea    rcx,[rbp+0x10]
   14000f205:	xor    r8d,r8d
   14000f208:	call   0x140010f80
   14000f20d:	mov    rbx,rax
   14000f210:	cmp    rax,0xffffffffffffffff
   14000f214:	je     0x14000f7d6
   14000f21a:	lea    rdx,[rip+0x1faf7]        # 0x14002ed18
   14000f221:	lea    rcx,[rsp+0x50]
   14000f226:	xor    r9d,r9d
   14000f229:	or     r8,0xffffffffffffffff
   14000f22d:	mov    QWORD PTR [rsp+0x2a8],rdi
   14000f235:	mov    QWORD PTR [rsp+0x2b0],r14
   14000f23d:	call   0x14000fb80
   14000f242:	lea    rdx,[rsp+0x50]
   14000f247:	lea    rcx,[rbp+0x10]
   14000f24b:	xor    r8d,r8d
   14000f24e:	call   0x140010f80
   14000f253:	mov    ecx,esi
   14000f255:	mov    rdi,rax
   14000f258:	mov    rax,QWORD PTR [rsp+0x70]
   14000f25d:	mov    QWORD PTR [rsp+0x70],rcx
   14000f262:	test   rax,rax
   14000f265:	je     0x14000f274
   14000f267:	mov    rcx,rax
   14000f26a:	call   0x140013924
   14000f26f:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f274:	call   0x1400137cc
   14000f279:	mov    rax,QWORD PTR [rsp+0x60]
   14000f27e:	mov    rcx,rsi
   14000f281:	mov    QWORD PTR [rsp+0x60],rcx
   14000f286:	test   rax,rax
   14000f289:	je     0x14000f298
   14000f28b:	mov    rcx,rax
   14000f28e:	call   0x140013924
   14000f293:	mov    rcx,QWORD PTR [rsp+0x60]
   14000f298:	call   0x1400137cc
   14000f29d:	mov    r14,rsi
   14000f2a0:	cmp    rdi,0xffffffffffffffff
   14000f2a4:	je     0x14000f3ff
   14000f2aa:	add    rdi,0xa
   14000f2ae:	mov    r9,rbx
   14000f2b1:	lea    rdx,[rbp-0x20]
   14000f2b5:	lea    rcx,[rbp+0x10]
   14000f2b9:	sub    r9,rdi
   14000f2bc:	mov    r8,rdi
   14000f2bf:	mov    DWORD PTR [rsp+0x20],esi
   14000f2c3:	mov    QWORD PTR [rsp+0x28],rsi
   14000f2c8:	mov    QWORD PTR [rsp+0x30],rsi
   14000f2cd:	mov    QWORD PTR [rsp+0x38],rsi
   14000f2d2:	mov    QWORD PTR [rsp+0x40],rsi
   14000f2d7:	mov    QWORD PTR [rsp+0x48],rsi
   14000f2dc:	call   0x140011760
   14000f2e1:	lea    rcx,[rsp+0x20]
   14000f2e6:	mov    rdx,rax
   14000f2e9:	call   0x14000fdb0
   14000f2ee:	mov    rax,QWORD PTR [rbp+0x0]
   14000f2f2:	mov    rcx,rsi
   14000f2f5:	mov    QWORD PTR [rbp+0x0],rcx
   14000f2f9:	test   rax,rax
   14000f2fc:	je     0x14000f30a
   14000f2fe:	mov    rcx,rax
   14000f301:	call   0x140013924
   14000f306:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f30a:	call   0x1400137cc
   14000f30f:	mov    rax,QWORD PTR [rbp-0x10]
   14000f313:	mov    rcx,rsi
   14000f316:	mov    QWORD PTR [rbp-0x10],rcx
   14000f31a:	test   rax,rax
   14000f31d:	je     0x14000f32b
   14000f31f:	mov    rcx,rax
   14000f322:	call   0x140013924
   14000f327:	mov    rcx,QWORD PTR [rbp-0x10]
   14000f32b:	call   0x1400137cc
   14000f330:	lea    rcx,[rsp+0x20]
   14000f335:	call   0x140011320
   14000f33a:	cmp    QWORD PTR [rsp+0x28],rsi
   14000f33f:	je     0x14000f3b7
   14000f341:	mov    ecx,0x18
   14000f346:	call   0x1400138b8
   14000f34b:	lea    rdi,[rip+0x1ffa6]        # 0x14002f2f8
   14000f352:	mov    r14,rax
   14000f355:	test   rax,rax
   14000f358:	je     0x14000f367
   14000f35a:	mov    QWORD PTR [rax],rdi
   14000f35d:	mov    QWORD PTR [rax+0x8],rsi
   14000f361:	mov    BYTE PTR [rax+0x10],sil
   14000f365:	jmp    0x14000f36a
   14000f367:	mov    r14,rsi
   14000f36a:	lea    rcx,[rsp+0x20]
   14000f36f:	call   0x140011320
   14000f374:	mov    rcx,r14
   14000f377:	mov    rdx,rax
   14000f37a:	call   0x14000faa0
   14000f37f:	test   al,al
   14000f381:	jne    0x14000f3b7
   14000f383:	test   r14,r14
   14000f386:	je     0x14000f3b4
   14000f388:	mov    QWORD PTR [r14],rdi
   14000f38b:	mov    rdi,QWORD PTR [r14+0x8]
   14000f38f:	test   rdi,rdi
   14000f392:	je     0x14000f3a8
   14000f394:	mov    rcx,rdi
   14000f397:	call   0x140001760
   14000f39c:	mov    rcx,rdi
   14000f39f:	call   0x1400137cc
   14000f3a4:	mov    QWORD PTR [r14+0x8],rsi
   14000f3a8:	mov    rcx,r14
   14000f3ab:	mov    BYTE PTR [r14+0x10],sil
   14000f3af:	call   0x1400137cc
   14000f3b4:	mov    r14,rsi
   14000f3b7:	mov    rax,QWORD PTR [rsp+0x40]
   14000f3bc:	mov    rcx,rsi
   14000f3bf:	mov    QWORD PTR [rsp+0x40],rcx
   14000f3c4:	test   rax,rax
   14000f3c7:	je     0x14000f3d6
   14000f3c9:	mov    rcx,rax
   14000f3cc:	call   0x140013924
   14000f3d1:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f3d6:	call   0x1400137cc
   14000f3db:	mov    rax,QWORD PTR [rsp+0x30]
   14000f3e0:	mov    rcx,rsi
   14000f3e3:	mov    QWORD PTR [rsp+0x30],rcx
   14000f3e8:	test   rax,rax
   14000f3eb:	je     0x14000f3fa
   14000f3ed:	mov    rcx,rax
   14000f3f0:	call   0x140013924
   14000f3f5:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f3fa:	call   0x1400137cc
   14000f3ff:	add    rbx,0x7
   14000f403:	lea    rdx,[rbp+0x70]
   14000f407:	lea    rcx,[rbp+0x10]
   14000f40b:	mov    r8,rbx
   14000f40e:	call   0x140010f80
   14000f413:	mov    rdi,rax
   14000f416:	cmp    rax,0xffffffffffffffff
   14000f41a:	je     0x14000f7c6
   14000f420:	mov    r9,rax
   14000f423:	lea    rdx,[rbp-0x50]
   14000f427:	lea    rcx,[rbp+0x10]
   14000f42b:	mov    r8,rbx
   14000f42e:	sub    r9,rbx
   14000f431:	mov    DWORD PTR [rsp+0x50],esi
   14000f435:	mov    QWORD PTR [rsp+0x58],rsi
   14000f43a:	mov    QWORD PTR [rsp+0x60],rsi
   14000f43f:	mov    QWORD PTR [rsp+0x68],rsi
   14000f444:	mov    QWORD PTR [rsp+0x70],rsi
   14000f449:	mov    QWORD PTR [rsp+0x78],rsi
   14000f44e:	call   0x140011760
   14000f453:	lea    rcx,[rsp+0x50]
   14000f458:	mov    rdx,rax
   14000f45b:	call   0x14000fdb0
   14000f460:	mov    rax,QWORD PTR [rbp-0x30]
   14000f464:	mov    rcx,rsi
   14000f467:	mov    QWORD PTR [rbp-0x30],rcx
   14000f46b:	test   rax,rax
   14000f46e:	je     0x14000f47c
   14000f470:	mov    rcx,rax
   14000f473:	call   0x140013924
   14000f478:	mov    rcx,QWORD PTR [rbp-0x30]
   14000f47c:	call   0x1400137cc
   14000f481:	mov    rax,QWORD PTR [rbp-0x40]
   14000f485:	mov    rcx,rsi
   14000f488:	mov    QWORD PTR [rbp-0x40],rcx
   14000f48c:	test   rax,rax
   14000f48f:	je     0x14000f49d
   14000f491:	mov    rcx,rax
   14000f494:	call   0x140013924
   14000f499:	mov    rcx,QWORD PTR [rbp-0x40]
   14000f49d:	call   0x1400137cc
   14000f4a2:	lea    r8,[rdi+0x8]
   14000f4a6:	lea    rdx,[rbp-0x20]
   14000f4aa:	lea    rcx,[rbp+0x10]
   14000f4ae:	or     r9,0xffffffffffffffff
   14000f4b2:	call   0x140011760
   14000f4b7:	lea    rdx,[rsp+0x50]
   14000f4bc:	lea    rcx,[rbp-0x80]
   14000f4c0:	or     r8,0xffffffffffffffff
   14000f4c4:	mov    DWORD PTR [rbp-0x80],esi
   14000f4c7:	mov    QWORD PTR [rbp-0x78],rsi
   14000f4cb:	mov    QWORD PTR [rbp-0x70],rsi
   14000f4cf:	mov    QWORD PTR [rbp-0x68],rsi
   14000f4d3:	mov    QWORD PTR [rbp-0x60],rsi
   14000f4d7:	mov    QWORD PTR [rbp-0x58],rsi
   14000f4db:	call   0x140010560
   14000f4e0:	lea    rcx,[rbp-0x80]
   14000f4e4:	call   0x140011370
   14000f4e9:	lea    rdx,[rbp-0x20]
   14000f4ed:	lea    rcx,[rsp+0x20]
   14000f4f2:	or     r8,0xffffffffffffffff
   14000f4f6:	mov    DWORD PTR [rsp+0x20],esi
   14000f4fa:	mov    QWORD PTR [rsp+0x28],rsi
   14000f4ff:	mov    QWORD PTR [rsp+0x30],rsi
   14000f504:	mov    QWORD PTR [rsp+0x38],rsi
   14000f509:	mov    QWORD PTR [rsp+0x40],rsi
   14000f50e:	mov    QWORD PTR [rsp+0x48],rsi
   14000f513:	call   0x140010560
   14000f518:	lea    rcx,[rsp+0x20]
   14000f51d:	call   0x140011370
   14000f522:	lea    rcx,[rsp+0x20]
   14000f527:	call   0x140011370
   14000f52c:	lea    rcx,[rbp-0x80]
   14000f530:	mov    rbx,rax
   14000f533:	call   0x140011370
   14000f538:	lea    rdx,[rip+0x1f959]        # 0x14002ee98
   14000f53f:	mov    rdi,rax
   14000f542:	lea    rax,[rip+0x1fa17]        # 0x14002ef60
   14000f549:	lea    rcx,[rbp+0xf0]
   14000f550:	mov    QWORD PTR [rbp+0xe0],rax
   14000f557:	lea    rax,[rbp+0x40]
   14000f55b:	xor    r9d,r9d
   14000f55e:	or     r8,0xffffffffffffffff
   14000f562:	mov    QWORD PTR [rbp+0xe8],rax
   14000f569:	call   0x14000fb80
   14000f56e:	lea    rcx,[rbp+0x120]
   14000f575:	xor    r9d,r9d
   14000f578:	or     r8,0xffffffffffffffff
   14000f57c:	mov    rdx,rbx
   14000f57f:	call   0x14000fb80
   14000f584:	lea    rcx,[rbp-0x50]
   14000f588:	xor    r9d,r9d
   14000f58b:	or     r8,0xffffffffffffffff
   14000f58f:	mov    rdx,rdi
   14000f592:	call   0x14000fb80
   14000f597:	lea    rdx,[rbp-0x50]
   14000f59b:	lea    rcx,[rbp+0xf0]
   14000f5a2:	call   0x14000fdb0
   14000f5a7:	mov    rax,QWORD PTR [rbp-0x30]
   14000f5ab:	mov    rcx,rsi
   14000f5ae:	mov    QWORD PTR [rbp-0x30],rcx
   14000f5b2:	test   rax,rax
   14000f5b5:	je     0x14000f5c3
   14000f5b7:	mov    rcx,rax
   14000f5ba:	call   0x140013924
   14000f5bf:	mov    rcx,QWORD PTR [rbp-0x30]
   14000f5c3:	call   0x1400137cc
   14000f5c8:	mov    rax,QWORD PTR [rbp-0x40]
   14000f5cc:	mov    rcx,rsi
   14000f5cf:	mov    QWORD PTR [rbp-0x40],rcx
   14000f5d3:	test   rax,rax
   14000f5d6:	je     0x14000f5e4
   14000f5d8:	mov    rcx,rax
   14000f5db:	call   0x140013924
   14000f5e0:	mov    rcx,QWORD PTR [rbp-0x40]
   14000f5e4:	call   0x1400137cc
   14000f5e9:	lea    rax,[rbp+0x40]
   14000f5ed:	lea    rbx,[rip+0x1f814]        # 0x14002ee08
   14000f5f4:	mov    QWORD PTR [rbp+0xe0],rbx
   14000f5fb:	mov    QWORD PTR [rbp+0x160],rax
   14000f602:	mov    QWORD PTR [rbp+0x168],rsi
   14000f609:	mov    QWORD PTR [rbp+0x170],rsi
   14000f610:	call   0x140006fd0
   14000f615:	mov    ecx,0xa0
   14000f61a:	mov    QWORD PTR [rbp+0x168],rax
   14000f621:	mov    QWORD PTR [rbp+0x178],r14
   14000f628:	call   0x1400138b8
   14000f62d:	test   rax,rax
   14000f630:	je     0x14000f646
   14000f632:	mov    rdx,QWORD PTR [rbp+0x178]
   14000f639:	mov    rcx,rax
   14000f63c:	call   0x140009360
   14000f641:	mov    rcx,rax
   14000f644:	jmp    0x14000f649
   14000f646:	mov    rcx,rsi
   14000f649:	mov    QWORD PTR [rbp+0x180],rcx
   14000f650:	test   rcx,rcx
   14000f653:	je     0x14000f65b
   14000f655:	mov    rax,QWORD PTR [rcx]
   14000f658:	call   QWORD PTR [rax+0x20]
   14000f65b:	lea    rcx,[rbp+0xe0]
   14000f662:	call   0x140008a20
   14000f667:	lea    rcx,[rbp+0xe0]
   14000f66e:	mov    QWORD PTR [rbp+0xe0],rbx
   14000f675:	call   0x140006400
   14000f67a:	mov    r8,QWORD PTR [rbp+0x168]
   14000f681:	lea    rdx,[rbp+0xd0]
   14000f688:	mov    r9,r8
   14000f68b:	mov    r8,QWORD PTR [r8]
   14000f68e:	lea    rcx,[rbp+0x168]
   14000f695:	call   0x140002680
   14000f69a:	mov    rcx,QWORD PTR [rbp+0x168]
   14000f6a1:	call   0x1400137cc
   14000f6a6:	lea    rcx,[rbp+0xe0]
   14000f6ad:	call   0x140008dd0
   14000f6b2:	mov    rax,QWORD PTR [rsp+0x40]
   14000f6b7:	mov    rcx,rsi
   14000f6ba:	mov    QWORD PTR [rsp+0x40],rcx
   14000f6bf:	test   rax,rax
   14000f6c2:	je     0x14000f6d1
   14000f6c4:	mov    rcx,rax
   14000f6c7:	call   0x140013924
   14000f6cc:	mov    rcx,QWORD PTR [rsp+0x40]
   14000f6d1:	call   0x1400137cc
   14000f6d6:	mov    rax,QWORD PTR [rsp+0x30]
   14000f6db:	mov    rcx,rsi
   14000f6de:	mov    QWORD PTR [rsp+0x30],rcx
   14000f6e3:	test   rax,rax
   14000f6e6:	je     0x14000f6f5
   14000f6e8:	mov    rcx,rax
   14000f6eb:	call   0x140013924
   14000f6f0:	mov    rcx,QWORD PTR [rsp+0x30]
   14000f6f5:	call   0x1400137cc
   14000f6fa:	mov    rax,QWORD PTR [rbp-0x60]
   14000f6fe:	mov    rcx,rsi
   14000f701:	mov    QWORD PTR [rbp-0x60],rcx
   14000f705:	test   rax,rax
   14000f708:	je     0x14000f716
   14000f70a:	mov    rcx,rax
   14000f70d:	call   0x140013924
   14000f712:	mov    rcx,QWORD PTR [rbp-0x60]
   14000f716:	call   0x1400137cc
   14000f71b:	mov    rax,QWORD PTR [rbp-0x70]
   14000f71f:	mov    rcx,rsi
   14000f722:	mov    QWORD PTR [rbp-0x70],rcx
   14000f726:	test   rax,rax
   14000f729:	je     0x14000f737
   14000f72b:	mov    rcx,rax
   14000f72e:	call   0x140013924
   14000f733:	mov    rcx,QWORD PTR [rbp-0x70]
   14000f737:	call   0x1400137cc
   14000f73c:	mov    rax,QWORD PTR [rbp+0x0]
   14000f740:	mov    rcx,rsi
   14000f743:	mov    QWORD PTR [rbp+0x0],rcx
   14000f747:	test   rax,rax
   14000f74a:	je     0x14000f758
   14000f74c:	mov    rcx,rax
   14000f74f:	call   0x140013924
   14000f754:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f758:	call   0x1400137cc
   14000f75d:	mov    rax,QWORD PTR [rbp-0x10]
   14000f761:	mov    rcx,rsi
   14000f764:	mov    QWORD PTR [rbp-0x10],rcx
   14000f768:	test   rax,rax
   14000f76b:	je     0x14000f779
   14000f76d:	mov    rcx,rax
   14000f770:	call   0x140013924
   14000f775:	mov    rcx,QWORD PTR [rbp-0x10]
   14000f779:	call   0x1400137cc
   14000f77e:	mov    rax,QWORD PTR [rsp+0x70]
   14000f783:	mov    rcx,rsi
   14000f786:	mov    QWORD PTR [rsp+0x70],rcx
   14000f78b:	test   rax,rax
   14000f78e:	je     0x14000f79d
   14000f790:	mov    rcx,rax
   14000f793:	call   0x140013924
   14000f798:	mov    rcx,QWORD PTR [rsp+0x70]
   14000f79d:	call   0x1400137cc
   14000f7a2:	mov    rax,QWORD PTR [rsp+0x60]
   14000f7a7:	mov    rcx,rsi
   14000f7aa:	mov    QWORD PTR [rsp+0x60],rcx
   14000f7af:	test   rax,rax
   14000f7b2:	je     0x14000f7c1
   14000f7b4:	mov    rcx,rax
   14000f7b7:	call   0x140013924
   14000f7bc:	mov    rcx,QWORD PTR [rsp+0x60]
   14000f7c1:	call   0x1400137cc
   14000f7c6:	mov    rdi,QWORD PTR [rsp+0x2a8]
   14000f7ce:	mov    r14,QWORD PTR [rsp+0x2b0]
   14000f7d6:	mov    rax,QWORD PTR [rbp+0x90]
   14000f7dd:	mov    rbx,QWORD PTR [rsp+0x2a0]
   14000f7e5:	mov    rcx,rsi
   14000f7e8:	mov    QWORD PTR [rbp+0x90],rcx
   14000f7ef:	test   rax,rax
   14000f7f2:	je     0x14000f803
   14000f7f4:	mov    rcx,rax
   14000f7f7:	call   0x140013924
   14000f7fc:	mov    rcx,QWORD PTR [rbp+0x90]
   14000f803:	call   0x1400137cc
   14000f808:	mov    rax,QWORD PTR [rbp+0x80]
   14000f80f:	mov    rcx,rsi
   14000f812:	mov    QWORD PTR [rbp+0x80],rcx
   14000f819:	test   rax,rax
   14000f81c:	je     0x14000f82d
   14000f81e:	mov    rcx,rax
   14000f821:	call   0x140013924
   14000f826:	mov    rcx,QWORD PTR [rbp+0x80]
   14000f82d:	call   0x1400137cc
   14000f832:	mov    rax,QWORD PTR [rbp+0xc0]
   14000f839:	mov    rcx,rsi
   14000f83c:	mov    QWORD PTR [rbp+0xc0],rcx
   14000f843:	test   rax,rax
   14000f846:	je     0x14000f857
   14000f848:	mov    rcx,rax
   14000f84b:	call   0x140013924
   14000f850:	mov    rcx,QWORD PTR [rbp+0xc0]
   14000f857:	call   0x1400137cc
   14000f85c:	mov    rax,QWORD PTR [rbp+0xb0]
   14000f863:	mov    rcx,rsi
   14000f866:	mov    QWORD PTR [rbp+0xb0],rcx
   14000f86d:	test   rax,rax
   14000f870:	je     0x14000f881
   14000f872:	mov    rcx,rax
   14000f875:	call   0x140013924
   14000f87a:	mov    rcx,QWORD PTR [rbp+0xb0]
   14000f881:	call   0x1400137cc
   14000f886:	mov    rax,QWORD PTR [rbp+0x30]
   14000f88a:	mov    rcx,rsi
   14000f88d:	mov    QWORD PTR [rbp+0x30],rcx
   14000f891:	test   rax,rax
   14000f894:	je     0x14000f8a2
   14000f896:	mov    rcx,rax
   14000f899:	call   0x140013924
   14000f89e:	mov    rcx,QWORD PTR [rbp+0x30]
   14000f8a2:	call   0x1400137cc
   14000f8a7:	mov    rcx,QWORD PTR [rbp+0x20]
   14000f8ab:	mov    QWORD PTR [rbp+0x20],rsi
   14000f8af:	test   rcx,rcx
   14000f8b2:	je     0x14000f8bd
   14000f8b4:	call   0x140013924
   14000f8b9:	mov    rsi,QWORD PTR [rbp+0x20]
   14000f8bd:	mov    rcx,rsi
   14000f8c0:	call   0x1400137cc
   14000f8c5:	lea    rcx,[rbp+0x58]
   14000f8c9:	call   0x140012580
   14000f8ce:	lea    rcx,[rbp+0x48]
   14000f8d2:	call   0x140012580
   14000f8d7:	mov    rsi,QWORD PTR [rsp+0x2b8]
   14000f8df:	xor    eax,eax
   14000f8e1:	add    rsp,0x290
   14000f8e8:	pop    rbp
   14000f8e9:	ret    
   14000f8ea:	int3   
   14000f8eb:	int3   
   14000f8ec:	int3   
   14000f8ed:	int3   
   14000f8ee:	int3   
   14000f8ef:	int3   
   14000f8f0:	mov    QWORD PTR [rsp+0x18],rbx
   14000f8f5:	mov    QWORD PTR [rsp+0x20],rsi
   14000f8fa:	push   rdi
   14000f8fb:	sub    rsp,0x860
   14000f902:	mov    rax,QWORD PTR [rip+0x27707]        # 0x140037010
   14000f909:	xor    rax,rsp
   14000f90c:	mov    QWORD PTR [rsp+0x850],rax
   14000f914:	mov    rsi,rcx
   14000f917:	mov    rdi,rdx
   14000f91a:	lea    rcx,[rsp+0x30]
   14000f91f:	xor    edx,edx
   14000f921:	mov    r8d,0x410
   14000f927:	mov    ebx,0xfffffff0
   14000f92c:	call   0x140014d80
   14000f931:	mov    DWORD PTR [rsp+0x30],0x6
   14000f939:	mov    DWORD PTR [rsp+0x34],0x1
   14000f941:	mov    DWORD PTR [rsp+0x38],0x1
   14000f949:	test   rdi,rdi
   14000f94c:	je     0x14000f972
   14000f94e:	lea    rcx,[rsp+0x40]
   14000f953:	mov    r9d,0x208
   14000f959:	mov    r8,rdi
   14000f95c:	mov    edx,0x400
   14000f961:	mov    DWORD PTR [rsp+0x3c],0x208
   14000f969:	call   0x1400137d4
   14000f96e:	test   eax,eax
   14000f970:	jne    0x14000f9b7
   14000f972:	xor    eax,eax
   14000f974:	lea    rcx,[rsp+0x44c]
   14000f97c:	xor    edx,edx
   14000f97e:	mov    r8d,0x400
   14000f984:	mov    QWORD PTR [rsp+0x440],rax
   14000f98c:	mov    DWORD PTR [rsp+0x448],eax
   14000f993:	call   0x140014d80
   14000f998:	lea    r8,[rsp+0x440]
   14000f9a0:	lea    rdx,[rsp+0x30]
   14000f9a5:	mov    rcx,rsi
   14000f9a8:	call   0x140001db0
   14000f9ad:	test   eax,eax
   14000f9af:	cmove  ebx,DWORD PTR [rsp+0x444]
   14000f9b7:	mov    eax,ebx
   14000f9b9:	mov    rcx,QWORD PTR [rsp+0x850]
   14000f9c1:	xor    rcx,rsp
   14000f9c4:	call   0x1400130a0
   14000f9c9:	lea    r11,[rsp+0x860]
   14000f9d1:	mov    rbx,QWORD PTR [r11+0x20]
   14000f9d5:	mov    rsi,QWORD PTR [r11+0x28]
   14000f9d9:	mov    rsp,r11
   14000f9dc:	pop    rdi
   14000f9dd:	ret    
   14000f9de:	int3   
   14000f9df:	int3   
   14000f9e0:	mov    QWORD PTR [rsp+0x18],rbx
   14000f9e5:	mov    QWORD PTR [rsp+0x20],rsi
   14000f9ea:	push   rdi
   14000f9eb:	sub    rsp,0x240
   14000f9f2:	mov    rax,QWORD PTR [rip+0x27617]        # 0x140037010
   14000f9f9:	xor    rax,rsp
   14000f9fc:	mov    QWORD PTR [rsp+0x230],rax
   14000fa04:	xor    sil,sil
   14000fa07:	mov    rbx,rdx
   14000fa0a:	mov    rdi,rcx
   14000fa0d:	cmp    BYTE PTR [rcx+0x10],sil
   14000fa11:	je     0x14000fa6c
   14000fa13:	test   rdx,rdx
   14000fa16:	je     0x14000fa6c
   14000fa18:	cmp    WORD PTR [rdx],0x0
   14000fa1c:	je     0x14000fa6c
   14000fa1e:	lea    rcx,[rsp+0x20]
   14000fa23:	xor    edx,edx
   14000fa25:	mov    r8d,0x208
   14000fa2b:	call   0x140014d80
   14000fa30:	lea    rcx,[rsp+0x20]
   14000fa35:	mov    r8,rbx
   14000fa38:	mov    edx,0x104
   14000fa3d:	call   0x140014134
   14000fa42:	test   eax,eax
   14000fa44:	jne    0x14000fa6c
   14000fa46:	mov    rcx,QWORD PTR [rdi+0x8]
   14000fa4a:	test   rcx,rcx
   14000fa4d:	je     0x14000fa6c
   14000fa4f:	lea    rdx,[rsp+0x20]
   14000fa54:	call   0x14000f8f0
   14000fa59:	movzx  ecx,sil
   14000fa5d:	mov    edx,0x1
   14000fa62:	test   eax,eax
   14000fa64:	cmove  ecx,edx
   14000fa67:	movzx  eax,cl
   14000fa6a:	jmp    0x14000fa70
   14000fa6c:	movzx  eax,sil
   14000fa70:	mov    rcx,QWORD PTR [rsp+0x230]
   14000fa78:	xor    rcx,rsp
   14000fa7b:	call   0x1400130a0
   14000fa80:	lea    r11,[rsp+0x240]
   14000fa88:	mov    rbx,QWORD PTR [r11+0x20]
   14000fa8c:	mov    rsi,QWORD PTR [r11+0x28]
   14000fa90:	mov    rsp,r11
   14000fa93:	pop    rdi
   14000fa94:	ret    
   14000fa95:	int3   
   14000fa96:	int3   
   14000fa97:	int3   
   14000fa98:	int3   
   14000fa99:	int3   
   14000fa9a:	int3   
   14000fa9b:	int3   
   14000fa9c:	int3   
   14000fa9d:	int3   
   14000fa9e:	int3   
   14000fa9f:	int3   
   14000faa0:	rex push rdi
   14000faa2:	sub    rsp,0x30
   14000faa6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000faaf:	mov    QWORD PTR [rsp+0x48],rbx
   14000fab4:	mov    rbx,rdx
   14000fab7:	mov    rdi,rcx
   14000faba:	movzx  eax,BYTE PTR [rcx+0x10]
   14000fabe:	test   al,al
   14000fac0:	jne    0x14000fb60
   14000fac6:	test   rdx,rdx
   14000fac9:	je     0x14000fb5e
   14000facf:	cmp    WORD PTR [rdx],0x0
   14000fad3:	je     0x14000fb5e
   14000fad9:	mov    ecx,0xe8
   14000fade:	call   0x1400138b8
   14000fae3:	mov    QWORD PTR [rsp+0x40],rax
   14000fae8:	test   rax,rax
   14000faeb:	je     0x14000faf9
   14000faed:	mov    r8,rbx
   14000faf0:	mov    rcx,rax
   14000faf3:	call   0x1400015e0
   14000faf8:	nop
   14000faf9:	mov    QWORD PTR [rdi+0x8],rax
   14000fafd:	xor    ebx,ebx
   14000faff:	nop
   14000fb00:	mov    rcx,QWORD PTR [rdi+0x8]
   14000fb04:	test   rcx,rcx
   14000fb07:	je     0x14000fb29
   14000fb09:	call   0x140001890
   14000fb0e:	test   eax,eax
   14000fb10:	je     0x14000fb29
   14000fb12:	inc    ebx
   14000fb14:	mov    ecx,0x14
   14000fb19:	call   QWORD PTR [rip+0x17641]        # 0x140027160
   14000fb1f:	cmp    ebx,0x7d0
   14000fb25:	jb     0x14000fb00
   14000fb27:	jmp    0x14000fb37
   14000fb29:	cmp    ebx,0x7d0
   14000fb2f:	jae    0x14000fb37
   14000fb31:	mov    BYTE PTR [rdi+0x10],0x1
   14000fb35:	jmp    0x14000fb58
   14000fb37:	mov    rbx,QWORD PTR [rdi+0x8]
   14000fb3b:	test   rbx,rbx
   14000fb3e:	je     0x14000fb50
   14000fb40:	mov    rcx,rbx
   14000fb43:	call   0x140001760
   14000fb48:	mov    rcx,rbx
   14000fb4b:	call   0x1400137cc
   14000fb50:	mov    QWORD PTR [rdi+0x8],0x0
   14000fb58:	movzx  eax,BYTE PTR [rdi+0x10]
   14000fb5c:	jmp    0x14000fb60
   14000fb5e:	xor    al,al
   14000fb60:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fb65:	add    rsp,0x30
   14000fb69:	pop    rdi
   14000fb6a:	ret    
   14000fb6b:	int3   
   14000fb6c:	int3   
   14000fb6d:	int3   
   14000fb6e:	int3   
   14000fb6f:	int3   
   14000fb70:	lea    rax,[rcx+0x8]
   14000fb74:	ret    
   14000fb75:	int3   
   14000fb76:	int3   
   14000fb77:	int3   
   14000fb78:	int3   
   14000fb79:	int3   
   14000fb7a:	int3   
   14000fb7b:	int3   
   14000fb7c:	int3   
   14000fb7d:	int3   
   14000fb7e:	int3   
   14000fb7f:	int3   
   14000fb80:	mov    QWORD PTR [rsp+0x8],rcx
   14000fb85:	push   rbx
   14000fb86:	sub    rsp,0x30
   14000fb8a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000fb93:	mov    rbx,rcx
   14000fb96:	mov    DWORD PTR [rcx],r9d
   14000fb99:	xor    eax,eax
   14000fb9b:	mov    QWORD PTR [rcx+0x8],rax
   14000fb9f:	mov    QWORD PTR [rcx+0x10],rax
   14000fba3:	mov    QWORD PTR [rcx+0x18],rax
   14000fba7:	mov    QWORD PTR [rcx+0x20],rax
   14000fbab:	mov    QWORD PTR [rcx+0x28],rax
   14000fbaf:	lea    rax,[r8-0x1]
   14000fbb3:	cmp    rax,0xfffffffffffffffd
   14000fbb7:	ja     0x14000fbbd
   14000fbb9:	mov    QWORD PTR [rcx+0x8],r8
   14000fbbd:	call   0x1400106f0
   14000fbc2:	nop
   14000fbc3:	mov    rax,rbx
   14000fbc6:	add    rsp,0x30
   14000fbca:	pop    rbx
   14000fbcb:	ret    
   14000fbcc:	int3   
   14000fbcd:	int3   
   14000fbce:	int3   
   14000fbcf:	int3   
   14000fbd0:	rex push rdi
   14000fbd2:	sub    rsp,0x60
   14000fbd6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000fbdf:	mov    QWORD PTR [rsp+0x78],rbx
   14000fbe4:	mov    rdi,rdx
   14000fbe7:	mov    rbx,rcx
   14000fbea:	mov    eax,DWORD PTR [rcx]
   14000fbec:	cmp    eax,0x3
   14000fbef:	je     0x14000fc14
   14000fbf1:	cmp    eax,0x1
   14000fbf4:	jne    0x14000fc04
   14000fbf6:	cmp    QWORD PTR [rcx+0x10],0x0
   14000fbfb:	je     0x14000fc0e
   14000fbfd:	call   0x1400118f0
   14000fc02:	jmp    0x14000fc0e
   14000fc04:	cmp    eax,0x2
   14000fc07:	jne    0x14000fc0e
   14000fc09:	call   0x140011ec0
   14000fc0e:	mov    DWORD PTR [rbx],0x3
   14000fc14:	cmp    rdi,QWORD PTR [rbx+0x8]
   14000fc18:	jae    0x14000fc24
   14000fc1a:	mov    rax,QWORD PTR [rbx+0x20]
   14000fc1e:	movzx  eax,WORD PTR [rax+rdi*2]
   14000fc22:	jmp    0x14000fc81
   14000fc24:	lea    rax,[rip+0x17965]        # 0x140027590
   14000fc2b:	mov    QWORD PTR [rsp+0x28],rax
   14000fc30:	lea    rax,[rsp+0x30]
   14000fc35:	mov    QWORD PTR [rsp+0x70],rax
   14000fc3a:	xor    eax,eax
   14000fc3c:	mov    DWORD PTR [rsp+0x30],eax
   14000fc40:	mov    QWORD PTR [rsp+0x38],rax
   14000fc45:	mov    QWORD PTR [rsp+0x40],rax
   14000fc4a:	mov    QWORD PTR [rsp+0x48],rax
   14000fc4f:	mov    QWORD PTR [rsp+0x50],rax
   14000fc54:	mov    QWORD PTR [rsp+0x58],rax
   14000fc59:	or     r8,0xffffffffffffffff
   14000fc5d:	lea    rdx,[rip+0x17a3c]        # 0x1400276a0
   14000fc64:	lea    rcx,[rsp+0x30]
   14000fc69:	call   0x1400106f0
   14000fc6e:	nop
   14000fc6f:	lea    rdx,[rip+0x258f2]        # 0x140035568
   14000fc76:	lea    rcx,[rsp+0x28]
   14000fc7b:	call   0x14001436c
   14000fc80:	int3   
   14000fc81:	mov    rbx,QWORD PTR [rsp+0x78]
   14000fc86:	add    rsp,0x60
   14000fc8a:	pop    rdi
   14000fc8b:	ret    
   14000fc8c:	int3   
   14000fc8d:	int3   
   14000fc8e:	int3   
   14000fc8f:	int3   
   14000fc90:	mov    QWORD PTR [rsp+0x18],r8
   14000fc95:	mov    QWORD PTR [rsp+0x10],rdx
   14000fc9a:	mov    QWORD PTR [rsp+0x8],rcx
   14000fc9f:	push   rbx
   14000fca0:	push   rsi
   14000fca1:	push   rdi
   14000fca2:	push   r14
   14000fca4:	push   r15
   14000fca6:	sub    rsp,0x30
   14000fcaa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000fcb3:	mov    rsi,r8
   14000fcb6:	mov    rbx,rcx
   14000fcb9:	mov    rdi,rdx
   14000fcbc:	or     rdi,0x7
   14000fcc0:	movabs r9,0x7ffffffffffffffe
   14000fcca:	cmp    rdi,r9
   14000fccd:	jbe    0x14000fcd4
   14000fccf:	mov    rdi,rdx
   14000fcd2:	jmp    0x14000fd05
   14000fcd4:	mov    r8,QWORD PTR [rcx+0x18]
   14000fcd8:	mov    rcx,r8
   14000fcdb:	shr    rcx,1
   14000fcde:	movabs rax,0xaaaaaaaaaaaaaaab
   14000fce8:	mul    rdi
   14000fceb:	shr    rdx,1
   14000fcee:	cmp    rcx,rdx
   14000fcf1:	jbe    0x14000fd05
   14000fcf3:	mov    rax,r9
   14000fcf6:	sub    rax,rcx
   14000fcf9:	cmp    r8,rax
   14000fcfc:	lea    rdi,[rcx+r8*1]
   14000fd00:	jbe    0x14000fd05
   14000fd02:	mov    rdi,r9
   14000fd05:	lea    rcx,[rdi+0x1]
   14000fd09:	xor    r15d,r15d
   14000fd0c:	mov    r14d,r15d
   14000fd0f:	test   rcx,rcx
   14000fd12:	je     0x14000fd39
   14000fd14:	movabs rax,0x7fffffffffffffff
   14000fd1e:	cmp    rcx,rax
   14000fd21:	ja     0x14000fd33
   14000fd23:	add    rcx,rcx
   14000fd26:	call   0x1400138b8
   14000fd2b:	mov    r14,rax
   14000fd2e:	test   rax,rax
   14000fd31:	jne    0x14000fd39
   14000fd33:	call   0x140012fc8
   14000fd38:	nop
   14000fd39:	jmp    0x14000fd52
   14000fd3b:	xor    r15d,r15d
   14000fd3e:	mov    rbx,QWORD PTR [rsp+0x60]
   14000fd43:	mov    rsi,QWORD PTR [rsp+0x70]
   14000fd48:	mov    rdi,QWORD PTR [rsp+0x68]
   14000fd4d:	mov    r14,QWORD PTR [rsp+0x78]
   14000fd52:	test   rsi,rsi
   14000fd55:	je     0x14000fd77
   14000fd57:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fd5c:	jb     0x14000fd63
   14000fd5e:	mov    rdx,QWORD PTR [rbx]
   14000fd61:	jmp    0x14000fd66
   14000fd63:	mov    rdx,rbx
   14000fd66:	test   rsi,rsi
   14000fd69:	je     0x14000fd77
   14000fd6b:	lea    r8,[rsi+rsi*1]
   14000fd6f:	mov    rcx,r14
   14000fd72:	call   0x1400130d0
   14000fd77:	cmp    QWORD PTR [rbx+0x18],0x8
   14000fd7c:	jb     0x14000fd86
   14000fd7e:	mov    rcx,QWORD PTR [rbx]
   14000fd81:	call   0x1400137cc
   14000fd86:	mov    QWORD PTR [rbx],r14
   14000fd89:	mov    QWORD PTR [rbx+0x18],rdi
   14000fd8d:	mov    QWORD PTR [rbx+0x10],rsi
   14000fd91:	cmp    rdi,0x8
   14000fd95:	jb     0x14000fd9a
   14000fd97:	mov    rbx,r14
   14000fd9a:	mov    WORD PTR [rbx+rsi*2],r15w
   14000fd9f:	add    rsp,0x30
   14000fda3:	pop    r15
   14000fda5:	pop    r14
   14000fda7:	pop    rdi
   14000fda8:	pop    rsi
   14000fda9:	pop    rbx
   14000fdaa:	ret    
   14000fdab:	int3   
   14000fdac:	int3   
   14000fdad:	int3   
   14000fdae:	int3   
   14000fdaf:	int3   
   14000fdb0:	mov    rax,rsp
   14000fdb3:	push   rbp
   14000fdb4:	push   r12
   14000fdb6:	push   r13
   14000fdb8:	push   r14
   14000fdba:	push   r15
   14000fdbc:	mov    rbp,rsp
   14000fdbf:	sub    rsp,0x60
   14000fdc3:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   14000fdcb:	mov    QWORD PTR [rax+0x8],rbx
   14000fdcf:	mov    QWORD PTR [rax+0x10],rsi
   14000fdd3:	mov    QWORD PTR [rax+0x18],rdi
   14000fdd7:	mov    r12,rdx
   14000fdda:	mov    r14,rcx
   14000fddd:	mov    r8,QWORD PTR [rdx+0x8]
   14000fde1:	test   r8,r8
   14000fde4:	je     0x1400101e3
   14000fdea:	mov    rdx,QWORD PTR [rcx+0x8]
   14000fdee:	test   rdx,rdx
   14000fdf1:	jne    0x14000fe04
   14000fdf3:	or     r8,0xffffffffffffffff
   14000fdf7:	mov    rdx,r12
   14000fdfa:	call   0x140010560
   14000fdff:	jmp    0x1400101e6
   14000fe04:	mov    eax,DWORD PTR [rcx]
   14000fe06:	mov    ecx,DWORD PTR [r12]
   14000fe0a:	cmp    eax,ecx
   14000fe0c:	jne    0x14000fedb
   14000fe12:	inc    r8
   14000fe15:	add    rdx,r8
   14000fe18:	cmp    eax,0x3
   14000fe1b:	jne    0x14000fe7a
   14000fe1d:	lea    rcx,[r14+0x20]
   14000fe21:	call   0x1400114c0
   14000fe26:	mov    rsi,QWORD PTR [r12+0x20]
   14000fe2b:	mov    rax,QWORD PTR [r12+0x8]
   14000fe30:	lea    rdi,[rax*2+0x2]
   14000fe38:	mov    rcx,QWORD PTR [r14+0x8]
   14000fe3c:	mov    rax,QWORD PTR [r14+0x20]
   14000fe40:	lea    rbx,[rax+rcx*2]
   14000fe44:	lea    rcx,[rip+0xffffffffffff1235]        # 0x140001080
   14000fe4b:	call   0x140013fb0
   14000fe50:	mov    r9,rdi
   14000fe53:	mov    r8,rsi
   14000fe56:	mov    rdx,rdi
   14000fe59:	mov    rcx,rbx
   14000fe5c:	call   0x1400137d4
   14000fe61:	test   eax,eax
   14000fe63:	je     0x14000fecd
   14000fe65:	mov    rdx,QWORD PTR [r14+0x8]
   14000fe69:	inc    rdx
   14000fe6c:	lea    rcx,[r14+0x20]
   14000fe70:	call   0x1400114c0
   14000fe75:	jmp    0x1400101e3
   14000fe7a:	lea    rcx,[r14+0x10]
   14000fe7e:	call   0x1400113d0
   14000fe83:	mov    rsi,QWORD PTR [r12+0x10]
   14000fe88:	mov    rdi,QWORD PTR [r12+0x8]
   14000fe8d:	mov    rbx,QWORD PTR [r14+0x10]
   14000fe91:	add    rbx,QWORD PTR [r14+0x8]
   14000fe95:	lea    rcx,[rip+0xffffffffffff11e4]        # 0x140001080
   14000fe9c:	call   0x140013fb0
   14000fea1:	lea    r9,[rdi+0x1]
   14000fea5:	mov    r8,rsi
   14000fea8:	lea    rdx,[rdi+0x1]
   14000feac:	mov    rcx,rbx
   14000feaf:	call   0x1400137d4
   14000feb4:	test   eax,eax
   14000feb6:	je     0x14000fecd
   14000feb8:	mov    rdx,QWORD PTR [r14+0x8]
   14000febc:	inc    rdx
   14000febf:	lea    rcx,[r14+0x20]
   14000fec3:	call   0x1400114c0
   14000fec8:	jmp    0x1400101e3
   14000fecd:	mov    rax,QWORD PTR [r12+0x8]
   14000fed2:	add    QWORD PTR [r14+0x8],rax
   14000fed6:	jmp    0x1400101e3
   14000fedb:	dec    eax
   14000fedd:	cmp    eax,0x1
   14000fee0:	ja     0x14000ffdc
   14000fee6:	lea    eax,[rcx-0x1]
   14000fee9:	cmp    eax,0x1
   14000feec:	ja     0x14000ffdc
   14000fef2:	xor    r15d,r15d
   14000fef5:	mov    DWORD PTR [rbp-0x38],r15d
   14000fef9:	mov    QWORD PTR [rbp-0x30],r15
   14000fefd:	mov    QWORD PTR [rbp-0x28],r15
   14000ff01:	mov    QWORD PTR [rbp-0x20],r15
   14000ff05:	mov    QWORD PTR [rbp-0x18],r15
   14000ff09:	mov    QWORD PTR [rbp-0x10],r15
   14000ff0d:	or     r8,0xffffffffffffffff
   14000ff11:	mov    rdx,r12
   14000ff14:	lea    rcx,[rbp-0x38]
   14000ff18:	call   0x140010560
   14000ff1d:	nop
   14000ff1e:	mov    rcx,r14
   14000ff21:	call   0x140011370
   14000ff26:	mov    eax,DWORD PTR [rbp-0x38]
   14000ff29:	cmp    eax,0x2
   14000ff2c:	je     0x14000ff6c
   14000ff2e:	cmp    eax,0x1
   14000ff31:	jne    0x14000ff50
   14000ff33:	mov    rcx,QWORD PTR [rbp-0x28]
   14000ff37:	test   rcx,rcx
   14000ff3a:	je     0x14000ff65
   14000ff3c:	call   0x1400116f0
   14000ff41:	test   eax,eax
   14000ff43:	jne    0x14000ff65
   14000ff45:	lea    rcx,[rbp-0x38]
   14000ff49:	call   0x1400119d0
   14000ff4e:	jmp    0x14000ff65
   14000ff50:	cmp    eax,0x3
   14000ff53:	jne    0x14000ff65
   14000ff55:	cmp    QWORD PTR [rbp-0x18],0x0
   14000ff5a:	je     0x14000ff65
   14000ff5c:	lea    rcx,[rbp-0x38]
   14000ff60:	call   0x140011c60
   14000ff65:	mov    DWORD PTR [rbp-0x38],0x2
   14000ff6c:	mov    rdx,QWORD PTR [r14+0x8]
   14000ff70:	mov    rax,QWORD PTR [rbp-0x30]
   14000ff74:	inc    rax
   14000ff77:	add    rdx,rax
   14000ff7a:	lea    rcx,[r14+0x10]
   14000ff7e:	call   0x1400113d0
   14000ff83:	mov    rsi,QWORD PTR [rbp-0x28]
   14000ff87:	mov    rbx,QWORD PTR [r14+0x10]
   14000ff8b:	mov    rdi,QWORD PTR [rbp-0x30]
   14000ff8f:	add    rbx,QWORD PTR [r14+0x8]
   14000ff93:	lea    rcx,[rip+0xffffffffffff10e6]        # 0x140001080
   14000ff9a:	call   0x140013fb0
   14000ff9f:	lea    r9,[rdi+0x1]
   14000ffa3:	mov    r8,rsi
   14000ffa6:	lea    rdx,[rdi+0x1]
   14000ffaa:	mov    rcx,rbx
   14000ffad:	call   0x1400137d4
   14000ffb2:	test   eax,eax
   14000ffb4:	je     0x14000ffc8
   14000ffb6:	mov    rdx,QWORD PTR [r14+0x8]
   14000ffba:	inc    rdx
   14000ffbd:	lea    rcx,[r14+0x10]
   14000ffc1:	call   0x1400113d0
   14000ffc6:	jmp    0x14000ffd7
   14000ffc8:	mov    rax,QWORD PTR [rbp-0x30]
   14000ffcc:	add    QWORD PTR [r14+0x8],rax
   14000ffd0:	mov    DWORD PTR [r14],0x2
   14000ffd7:	jmp    0x1400101a4
   14000ffdc:	mov    rcx,r14
   14000ffdf:	call   0x140011320
   14000ffe4:	xor    r15d,r15d
   14000ffe7:	mov    DWORD PTR [rbp-0x38],r15d
   14000ffeb:	mov    QWORD PTR [rbp-0x30],r15
   14000ffef:	mov    QWORD PTR [rbp-0x28],r15
   14000fff3:	mov    QWORD PTR [rbp-0x20],r15
   14000fff7:	mov    QWORD PTR [rbp-0x18],r15
   14000fffb:	mov    QWORD PTR [rbp-0x10],r15
   14000ffff:	or     r8,0xffffffffffffffff
   140010003:	lea    rcx,[rbp-0x38]
   140010007:	cmp    DWORD PTR [r12],0x3
   14001000c:	je     0x14001001a
   14001000e:	mov    rdx,QWORD PTR [r12+0x10]
   140010013:	call   0x1400106f0
   140010018:	jmp    0x140010022
   14001001a:	mov    rdx,r12
   14001001d:	call   0x140010560
   140010022:	mov    eax,DWORD PTR [rbp-0x38]
   140010025:	cmp    eax,0x3
   140010028:	je     0x140010056
   14001002a:	cmp    eax,0x1
   14001002d:	jne    0x140010041
   14001002f:	cmp    QWORD PTR [rbp-0x28],0x0
   140010034:	je     0x14001004f
   140010036:	lea    rcx,[rbp-0x38]
   14001003a:	call   0x1400118f0
   14001003f:	jmp    0x14001004f
   140010041:	cmp    eax,0x2
   140010044:	jne    0x14001004f
   140010046:	lea    rcx,[rbp-0x38]
   14001004a:	call   0x140011ec0
   14001004f:	mov    DWORD PTR [rbp-0x38],0x3
   140010056:	mov    rdx,QWORD PTR [r14+0x8]
   14001005a:	mov    rax,QWORD PTR [rbp-0x30]
   14001005e:	inc    rax
   140010061:	add    rdx,rax
   140010064:	lea    rcx,[r14+0x20]
   140010068:	call   0x1400114c0
   14001006d:	mov    ecx,DWORD PTR [rbp-0x38]
   140010070:	cmp    ecx,0x3
   140010073:	je     0x1400100a2
   140010075:	cmp    ecx,0x1
   140010078:	jne    0x14001008c
   14001007a:	cmp    QWORD PTR [rbp-0x28],0x0
   14001007f:	je     0x14001009a
   140010081:	lea    rcx,[rbp-0x38]
   140010085:	call   0x1400118f0
   14001008a:	jmp    0x14001009a
   14001008c:	cmp    ecx,0x2
   14001008f:	jne    0x14001009a
   140010091:	lea    rcx,[rbp-0x38]
   140010095:	call   0x140011ec0
   14001009a:	mov    ecx,0x3
   14001009f:	mov    DWORD PTR [rbp-0x38],ecx
   1400100a2:	mov    r13,QWORD PTR [rbp-0x30]
   1400100a6:	cmp    ecx,0x3
   1400100a9:	je     0x1400100d8
   1400100ab:	cmp    ecx,0x1
   1400100ae:	jne    0x1400100c2
   1400100b0:	cmp    QWORD PTR [rbp-0x28],0x0
   1400100b5:	je     0x1400100d0
   1400100b7:	lea    rcx,[rbp-0x38]
   1400100bb:	call   0x1400118f0
   1400100c0:	jmp    0x1400100d0
   1400100c2:	cmp    ecx,0x2
   1400100c5:	jne    0x1400100d0
   1400100c7:	lea    rcx,[rbp-0x38]
   1400100cb:	call   0x140011ec0
   1400100d0:	mov    ecx,0x3
   1400100d5:	mov    DWORD PTR [rbp-0x38],ecx
   1400100d8:	lea    rsi,[rip+0x28d61]        # 0x140038e40
   1400100df:	mov    rax,QWORD PTR [rbp-0x18]
   1400100e3:	test   rax,rax
   1400100e6:	cmovne rsi,rax
   1400100ea:	cmp    ecx,0x3
   1400100ed:	je     0x14001011b
   1400100ef:	cmp    ecx,0x1
   1400100f2:	jne    0x140010106
   1400100f4:	cmp    QWORD PTR [rbp-0x28],0x0
   1400100f9:	je     0x140010114
   1400100fb:	lea    rcx,[rbp-0x38]
   1400100ff:	call   0x1400118f0
   140010104:	jmp    0x140010114
   140010106:	cmp    ecx,0x2
   140010109:	jne    0x140010114
   14001010b:	lea    rcx,[rbp-0x38]
   14001010f:	call   0x140011ec0
   140010114:	mov    DWORD PTR [rbp-0x38],0x3
   14001011b:	mov    rdi,QWORD PTR [rbp-0x30]
   14001011f:	mov    rcx,QWORD PTR [r14+0x20]
   140010123:	mov    rax,QWORD PTR [r14+0x8]
   140010127:	lea    rbx,[rcx+rax*2]
   14001012b:	lea    rcx,[rip+0xffffffffffff0f4e]        # 0x140001080
   140010132:	call   0x140013fb0
   140010137:	lea    r9,[r13*2+0x2]
   14001013f:	lea    rdx,[rdi*2+0x2]
   140010147:	mov    r8,rsi
   14001014a:	mov    rcx,rbx
   14001014d:	call   0x1400137d4
   140010152:	test   eax,eax
   140010154:	je     0x140010168
   140010156:	mov    rdx,QWORD PTR [r14+0x8]
   14001015a:	inc    rdx
   14001015d:	lea    rcx,[r14+0x20]
   140010161:	call   0x1400114c0
   140010166:	jmp    0x1400101a4
   140010168:	mov    eax,DWORD PTR [rbp-0x38]
   14001016b:	cmp    eax,0x3
   14001016e:	je     0x14001019c
   140010170:	cmp    eax,0x1
   140010173:	jne    0x140010187
   140010175:	cmp    QWORD PTR [rbp-0x28],0x0
   14001017a:	je     0x140010195
   14001017c:	lea    rcx,[rbp-0x38]
   140010180:	call   0x1400118f0
   140010185:	jmp    0x140010195
   140010187:	cmp    eax,0x2
   14001018a:	jne    0x140010195
   14001018c:	lea    rcx,[rbp-0x38]
   140010190:	call   0x140011ec0
   140010195:	mov    DWORD PTR [rbp-0x38],0x3
   14001019c:	mov    rax,QWORD PTR [rbp-0x30]
   1400101a0:	add    QWORD PTR [r14+0x8],rax
   1400101a4:	mov    rax,QWORD PTR [rbp-0x18]
   1400101a8:	mov    rcx,r15
   1400101ab:	test   rax,rax
   1400101ae:	mov    QWORD PTR [rbp-0x18],rcx
   1400101b2:	je     0x1400101c0
   1400101b4:	mov    rcx,rax
   1400101b7:	call   0x140013924
   1400101bc:	mov    rcx,QWORD PTR [rbp-0x18]
   1400101c0:	call   0x1400137cc
   1400101c5:	mov    rcx,QWORD PTR [rbp-0x28]
   1400101c9:	test   rcx,rcx
   1400101cc:	mov    QWORD PTR [rbp-0x28],r15
   1400101d0:	je     0x1400101db
   1400101d2:	call   0x140013924
   1400101d7:	mov    r15,QWORD PTR [rbp-0x28]
   1400101db:	mov    rcx,r15
   1400101de:	call   0x1400137cc
   1400101e3:	mov    rax,r14
   1400101e6:	lea    r11,[rsp+0x60]
   1400101eb:	mov    rbx,QWORD PTR [r11+0x30]
   1400101ef:	mov    rsi,QWORD PTR [r11+0x38]
   1400101f3:	mov    rdi,QWORD PTR [r11+0x40]
   1400101f7:	mov    rsp,r11
   1400101fa:	pop    r15
   1400101fc:	pop    r14
   1400101fe:	pop    r13
   140010200:	pop    r12
   140010202:	pop    rbp
   140010203:	ret    
   140010204:	int3   
   140010205:	int3   
   140010206:	int3   
   140010207:	int3   
   140010208:	int3   
   140010209:	int3   
   14001020a:	int3   
   14001020b:	int3   
   14001020c:	int3   
   14001020d:	int3   
   14001020e:	int3   
   14001020f:	int3   
   140010210:	mov    QWORD PTR [rsp+0x8],rbx
   140010215:	mov    QWORD PTR [rsp+0x10],rsi
   14001021a:	push   rdi
   14001021b:	sub    rsp,0x20
   14001021f:	mov    eax,DWORD PTR [rcx]
   140010221:	movzx  esi,dx
   140010224:	mov    rdi,rcx
   140010227:	cmp    eax,0x3
   14001022a:	je     0x14001024f
   14001022c:	cmp    eax,0x1
   14001022f:	jne    0x14001023f
   140010231:	cmp    QWORD PTR [rcx+0x10],0x0
   140010236:	je     0x140010249
   140010238:	call   0x1400118f0
   14001023d:	jmp    0x140010249
   14001023f:	cmp    eax,0x2
   140010242:	jne    0x140010249
   140010244:	call   0x140011ec0
   140010249:	mov    DWORD PTR [rdi],0x3
   14001024f:	mov    rdx,QWORD PTR [rdi+0x8]
   140010253:	lea    rcx,[rdi+0x20]
   140010257:	add    rdx,0x2
   14001025b:	call   0x1400114c0
   140010260:	mov    rcx,QWORD PTR [rdi+0x8]
   140010264:	mov    rax,QWORD PTR [rdi+0x20]
   140010268:	mov    WORD PTR [rax+rcx*2],si
   14001026c:	mov    rcx,QWORD PTR [rdi+0x8]
   140010270:	mov    rax,QWORD PTR [rdi+0x20]
   140010274:	xor    ebx,ebx
   140010276:	mov    WORD PTR [rax+rcx*2+0x2],bx
   14001027b:	inc    QWORD PTR [rdi+0x8]
   14001027f:	mov    rcx,QWORD PTR [rdi+0x10]
   140010283:	mov    QWORD PTR [rdi+0x18],rbx
   140010287:	mov    QWORD PTR [rdi+0x10],rbx
   14001028b:	test   rcx,rcx
   14001028e:	je     0x140010295
   140010290:	call   0x140013924
   140010295:	mov    rcx,QWORD PTR [rdi+0x10]
   140010299:	test   rcx,rcx
   14001029c:	je     0x1400102a3
   14001029e:	call   0x1400137cc
   1400102a3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400102a8:	mov    QWORD PTR [rdi+0x10],rbx
   1400102ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400102b1:	mov    DWORD PTR [rdi],0x3
   1400102b7:	mov    rax,rdi
   1400102ba:	add    rsp,0x20
   1400102be:	pop    rdi
   1400102bf:	ret    
   1400102c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400102c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400102ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400102cf:	push   rdi
   1400102d0:	sub    rsp,0x20
   1400102d4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400102d8:	mov    rbp,r8
   1400102db:	mov    rsi,rdx
   1400102de:	mov    rbx,rcx
   1400102e1:	cmp    rdi,r8
   1400102e4:	jb     0x1400103dc
   1400102ea:	sub    rdi,r8
   1400102ed:	cmp    r9,rdi
   1400102f0:	cmovb  rdi,r9
   1400102f4:	cmp    rcx,rdx
   1400102f7:	jne    0x14001032f
   1400102f9:	lea    rcx,[rdi+r8*1]
   1400102fd:	cmp    QWORD PTR [rbx+0x10],rcx
   140010301:	jb     0x1400103e9
   140010307:	cmp    QWORD PTR [rbx+0x18],0x8
   14001030c:	mov    QWORD PTR [rbx+0x10],rcx
   140010310:	jb     0x140010317
   140010312:	mov    rdx,QWORD PTR [rbx]
   140010315:	jmp    0x14001031a
   140010317:	mov    rdx,rbx
   14001031a:	xor    eax,eax
   14001031c:	mov    WORD PTR [rdx+rcx*2],ax
   140010320:	xor    edx,edx
   140010322:	mov    rcx,rbx
   140010325:	call   0x140010cc0
   14001032a:	jmp    0x1400103c4
   14001032f:	movabs rax,0x7ffffffffffffffe
   140010339:	cmp    rdi,rax
   14001033c:	ja     0x1400103f6
   140010342:	mov    rcx,QWORD PTR [rcx+0x18]
   140010346:	cmp    rcx,rdi
   140010349:	jae    0x140010375
   14001034b:	mov    r8,QWORD PTR [rbx+0x10]
   14001034f:	mov    rdx,rdi
   140010352:	mov    rcx,rbx
   140010355:	call   0x14000fc90
   14001035a:	test   rdi,rdi
   14001035d:	je     0x1400103c4
   14001035f:	cmp    QWORD PTR [rsi+0x18],0x8
   140010364:	jb     0x140010369
   140010366:	mov    rsi,QWORD PTR [rsi]
   140010369:	cmp    QWORD PTR [rbx+0x18],0x8
   14001036e:	jb     0x140010396
   140010370:	mov    rcx,QWORD PTR [rbx]
   140010373:	jmp    0x140010399
   140010375:	test   rdi,rdi
   140010378:	jne    0x14001035f
   14001037a:	xor    eax,eax
   14001037c:	mov    QWORD PTR [rbx+0x10],rax
   140010380:	cmp    rcx,0x8
   140010384:	jb     0x14001038e
   140010386:	mov    rcx,QWORD PTR [rbx]
   140010389:	mov    WORD PTR [rcx],ax
   14001038c:	jmp    0x1400103c4
   14001038e:	mov    rcx,rbx
   140010391:	mov    WORD PTR [rbx],ax
   140010394:	jmp    0x1400103c4
   140010396:	mov    rcx,rbx
   140010399:	test   rdi,rdi
   14001039c:	je     0x1400103ab
   14001039e:	lea    r8,[rdi+rdi*1]
   1400103a2:	lea    rdx,[rsi+rbp*2]
   1400103a6:	call   0x1400130d0
   1400103ab:	cmp    QWORD PTR [rbx+0x18],0x8
   1400103b0:	mov    QWORD PTR [rbx+0x10],rdi
   1400103b4:	jb     0x1400103bb
   1400103b6:	mov    rcx,QWORD PTR [rbx]
   1400103b9:	jmp    0x1400103be
   1400103bb:	mov    rcx,rbx
   1400103be:	xor    eax,eax
   1400103c0:	mov    WORD PTR [rcx+rdi*2],ax
   1400103c4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400103c9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400103ce:	mov    rax,rbx
   1400103d1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400103d6:	add    rsp,0x20
   1400103da:	pop    rdi
   1400103db:	ret    
   1400103dc:	lea    rcx,[rip+0x1e89d]        # 0x14002ec80
   1400103e3:	call   0x140013044
   1400103e8:	int3   
   1400103e9:	lea    rcx,[rip+0x1e890]        # 0x14002ec80
   1400103f0:	call   0x140013044
   1400103f5:	int3   
   1400103f6:	lea    rcx,[rip+0x1e873]        # 0x14002ec70
   1400103fd:	call   0x14001300c
   140010402:	int3   
   140010403:	int3   
   140010404:	int3   
   140010405:	int3   
   140010406:	int3   
   140010407:	int3   
   140010408:	int3   
   140010409:	int3   
   14001040a:	int3   
   14001040b:	int3   
   14001040c:	int3   
   14001040d:	int3   
   14001040e:	int3   
   14001040f:	int3   
   140010410:	mov    QWORD PTR [rsp+0x8],rbx
   140010415:	mov    QWORD PTR [rsp+0x10],rsi
   14001041a:	push   rdi
   14001041b:	sub    rsp,0x20
   14001041f:	mov    rdi,r8
   140010422:	mov    rsi,rdx
   140010425:	mov    rbx,rcx
   140010428:	test   rdx,rdx
   14001042b:	je     0x14001048e
   14001042d:	mov    rdx,QWORD PTR [rcx+0x18]
   140010431:	cmp    rdx,0x8
   140010435:	jb     0x14001043c
   140010437:	mov    rax,QWORD PTR [rcx]
   14001043a:	jmp    0x14001043f
   14001043c:	mov    rax,rcx
   14001043f:	cmp    rsi,rax
   140010442:	jb     0x14001048e
   140010444:	cmp    rdx,0x8
   140010448:	jb     0x14001044d
   14001044a:	mov    rcx,QWORD PTR [rcx]
   14001044d:	mov    rax,QWORD PTR [rbx+0x10]
   140010451:	lea    rcx,[rcx+rax*2]
   140010455:	cmp    rcx,rsi
   140010458:	jbe    0x14001048e
   14001045a:	cmp    rdx,0x8
   14001045e:	jb     0x140010465
   140010460:	mov    rax,QWORD PTR [rbx]
   140010463:	jmp    0x140010468
   140010465:	mov    rax,rbx
   140010468:	sub    rsi,rax
   14001046b:	mov    r9,r8
   14001046e:	mov    rdx,rbx
   140010471:	sar    rsi,1
   140010474:	mov    rcx,rbx
   140010477:	mov    r8,rsi
   14001047a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001047f:	mov    rsi,QWORD PTR [rsp+0x38]
   140010484:	add    rsp,0x20
   140010488:	pop    rdi
   140010489:	jmp    0x1400102c0
   14001048e:	movabs rax,0x7ffffffffffffffe
   140010498:	cmp    r8,rax
   14001049b:	ja     0x14001054d
   1400104a1:	mov    rcx,QWORD PTR [rbx+0x18]
   1400104a5:	cmp    rcx,r8
   1400104a8:	jae    0x1400104ca
   1400104aa:	mov    r8,QWORD PTR [rbx+0x10]
   1400104ae:	mov    rdx,rdi
   1400104b1:	mov    rcx,rbx
   1400104b4:	call   0x14000fc90
   1400104b9:	test   rdi,rdi
   1400104bc:	je     0x14001053a
   1400104be:	cmp    QWORD PTR [rbx+0x18],0x8
   1400104c3:	jb     0x14001050d
   1400104c5:	mov    rcx,QWORD PTR [rbx]
   1400104c8:	jmp    0x140010510
   1400104ca:	test   r8,r8
   1400104cd:	jne    0x1400104b9
   1400104cf:	xor    eax,eax
   1400104d1:	mov    QWORD PTR [rbx+0x10],rax
   1400104d5:	cmp    rcx,0x8
   1400104d9:	jb     0x1400104f4
   1400104db:	mov    rcx,QWORD PTR [rbx]
   1400104de:	mov    WORD PTR [rcx],ax
   1400104e1:	mov    rax,rbx
   1400104e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400104e9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400104ee:	add    rsp,0x20
   1400104f2:	pop    rdi
   1400104f3:	ret    
   1400104f4:	mov    WORD PTR [rbx],ax
   1400104f7:	mov    rcx,rbx
   1400104fa:	mov    rax,rbx
   1400104fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140010502:	mov    rsi,QWORD PTR [rsp+0x38]
   140010507:	add    rsp,0x20
   14001050b:	pop    rdi
   14001050c:	ret    
   14001050d:	mov    rcx,rbx
   140010510:	test   rdi,rdi
   140010513:	je     0x140010521
   140010515:	lea    r8,[rdi+rdi*1]
   140010519:	mov    rdx,rsi
   14001051c:	call   0x1400130d0
   140010521:	cmp    QWORD PTR [rbx+0x18],0x8
   140010526:	mov    QWORD PTR [rbx+0x10],rdi
   14001052a:	jb     0x140010531
   14001052c:	mov    rcx,QWORD PTR [rbx]
   14001052f:	jmp    0x140010534
   140010531:	mov    rcx,rbx
   140010534:	xor    eax,eax
   140010536:	mov    WORD PTR [rcx+rdi*2],ax
   14001053a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001053f:	mov    rax,rbx
   140010542:	mov    rbx,QWORD PTR [rsp+0x30]
   140010547:	add    rsp,0x20
   14001054b:	pop    rdi
   14001054c:	ret    
   14001054d:	lea    rcx,[rip+0x1e71c]        # 0x14002ec70
   140010554:	call   0x14001300c
   140010559:	int3   
   14001055a:	int3   
   14001055b:	int3   
   14001055c:	int3   
   14001055d:	int3   
   14001055e:	int3   
   14001055f:	int3   
   140010560:	push   r14
   140010562:	push   r15
   140010564:	sub    rsp,0x28
   140010568:	mov    r15,rdx
   14001056b:	mov    r14,rcx
   14001056e:	cmp    rcx,rdx
   140010571:	je     0x1400106e4
   140010577:	call   0x140010830
   14001057c:	mov    eax,DWORD PTR [r15]
   14001057f:	test   eax,eax
   140010581:	jle    0x14001064c
   140010587:	mov    QWORD PTR [rsp+0x40],rbx
   14001058c:	mov    QWORD PTR [rsp+0x48],rbp
   140010591:	mov    QWORD PTR [rsp+0x50],rsi
   140010596:	mov    QWORD PTR [rsp+0x20],rdi
   14001059b:	cmp    eax,0x2
   14001059e:	jle    0x140010669
   1400105a4:	cmp    eax,0x3
   1400105a7:	jne    0x140010638
   1400105ad:	cmp    QWORD PTR [r15+0x20],0x0
   1400105b2:	je     0x140010658
   1400105b8:	mov    rcx,QWORD PTR [r15+0x8]
   1400105bc:	mov    eax,0x2
   1400105c1:	inc    rcx
   1400105c4:	mul    rcx
   1400105c7:	mov    rcx,0xffffffffffffffff
   1400105ce:	cmovo  rax,rcx
   1400105d2:	mov    rcx,rax
   1400105d5:	call   0x14001307c
   1400105da:	mov    r8,QWORD PTR [r15+0x8]
   1400105de:	lea    rcx,[r14+0x20]
   1400105e2:	inc    r8
   1400105e5:	mov    rdx,rax
   1400105e8:	call   0x140011620
   1400105ed:	mov    rax,QWORD PTR [r15+0x8]
   1400105f1:	mov    rdi,QWORD PTR [r15+0x20]
   1400105f5:	mov    rsi,QWORD PTR [r14+0x20]
   1400105f9:	lea    rcx,[rip+0xffffffffffff0a80]        # 0x140001080
   140010600:	lea    rbx,[rax*2+0x2]
   140010608:	call   0x140013fb0
   14001060d:	mov    r9,rbx
   140010610:	mov    r8,rdi
   140010613:	mov    rdx,rbx
   140010616:	mov    rcx,rsi
   140010619:	call   0x1400137d4
   14001061e:	test   eax,eax
   140010620:	je     0x140010658
   140010622:	lea    rcx,[r14+0x20]
   140010626:	xor    r8d,r8d
   140010629:	xor    edx,edx
   14001062b:	call   0x140011620
   140010630:	mov    QWORD PTR [r14+0x8],0x0
   140010638:	mov    rsi,QWORD PTR [rsp+0x50]
   14001063d:	mov    rbp,QWORD PTR [rsp+0x48]
   140010642:	mov    rbx,QWORD PTR [rsp+0x40]
   140010647:	mov    rdi,QWORD PTR [rsp+0x20]
   14001064c:	mov    rax,r14
   14001064f:	add    rsp,0x28
   140010653:	pop    r15
   140010655:	pop    r14
   140010657:	ret    
   140010658:	mov    rax,QWORD PTR [r15+0x8]
   14001065c:	mov    DWORD PTR [r14],0x3
   140010663:	mov    QWORD PTR [r14+0x8],rax
   140010667:	jmp    0x140010638
   140010669:	cmp    QWORD PTR [r15+0x10],0x0
   14001066e:	je     0x1400106d1
   140010670:	mov    rcx,QWORD PTR [r15+0x8]
   140010674:	inc    rcx
   140010677:	call   0x14001307c
   14001067c:	mov    r8,QWORD PTR [r15+0x8]
   140010680:	lea    rcx,[r14+0x10]
   140010684:	inc    r8
   140010687:	mov    rdx,rax
   14001068a:	call   0x140011620
   14001068f:	mov    rdi,QWORD PTR [r15+0x10]
   140010693:	mov    rsi,QWORD PTR [r14+0x10]
   140010697:	mov    rbx,QWORD PTR [r15+0x8]
   14001069b:	lea    rcx,[rip+0xffffffffffff09de]        # 0x140001080
   1400106a2:	call   0x140013fb0
   1400106a7:	lea    r9,[rbx+0x1]
   1400106ab:	lea    rdx,[rbx+0x1]
   1400106af:	mov    r8,rdi
   1400106b2:	mov    rcx,rsi
   1400106b5:	call   0x1400137d4
   1400106ba:	test   eax,eax
   1400106bc:	je     0x1400106d1
   1400106be:	lea    rcx,[r14+0x10]
   1400106c2:	xor    r8d,r8d
   1400106c5:	xor    edx,edx
   1400106c7:	call   0x140011620
   1400106cc:	jmp    0x140010630
   1400106d1:	mov    rax,QWORD PTR [r15+0x8]
   1400106d5:	mov    QWORD PTR [r14+0x8],rax
   1400106d9:	mov    eax,DWORD PTR [r15]
   1400106dc:	mov    DWORD PTR [r14],eax
   1400106df:	jmp    0x140010638
   1400106e4:	mov    rax,rcx
   1400106e7:	add    rsp,0x28
   1400106eb:	pop    r15
   1400106ed:	pop    r14
   1400106ef:	ret    
   1400106f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400106f5:	push   rdi
   1400106f6:	push   r14
   1400106f8:	push   r15
   1400106fa:	sub    rsp,0x20
   1400106fe:	mov    rdi,r8
   140010701:	mov    r15,rdx
   140010704:	mov    rbx,rcx
   140010707:	call   0x140010830
   14001070c:	test   r15,r15
   14001070f:	je     0x14001080f
   140010715:	mov    QWORD PTR [rsp+0x40],rbp
   14001071a:	mov    QWORD PTR [rsp+0x48],rsi
   14001071f:	cmp    rdi,0xffffffffffffffff
   140010723:	jne    0x14001073a
   140010725:	or     rdi,rdi
   140010728:	nop    DWORD PTR [rax+rax*1+0x0]
   140010730:	inc    rdi
   140010733:	cmp    BYTE PTR [r15+rdi*1],0x0
   140010738:	jne    0x140010730
   14001073a:	lea    rcx,[rdi+0x1]
   14001073e:	mov    QWORD PTR [rbx+0x8],rdi
   140010742:	call   0x14001307c
   140010747:	mov    rcx,QWORD PTR [rbx+0x8]
   14001074b:	xor    r14d,r14d
   14001074e:	inc    rcx
   140010751:	mov    rdi,rax
   140010754:	mov    QWORD PTR [rbx+0x18],rcx
   140010758:	mov    rcx,QWORD PTR [rbx+0x10]
   14001075c:	mov    QWORD PTR [rbx+0x10],r14
   140010760:	test   rcx,rcx
   140010763:	je     0x14001076a
   140010765:	call   0x140013924
   14001076a:	mov    rcx,QWORD PTR [rbx+0x10]
   14001076e:	cmp    rdi,rcx
   140010771:	je     0x140010778
   140010773:	call   0x1400137cc
   140010778:	mov    QWORD PTR [rbx+0x10],rdi
   14001077c:	lea    rcx,[rip+0xffffffffffff08fd]        # 0x140001080
   140010783:	mov    rbp,rdi
   140010786:	mov    rdi,QWORD PTR [rbx+0x8]
   14001078a:	call   0x140013fb0
   14001078f:	lea    rdx,[rdi+0x1]
   140010793:	mov    r9,rdi
   140010796:	mov    r8,r15
   140010799:	mov    rcx,rbp
   14001079c:	call   0x1400137d4
   1400107a1:	mov    rsi,QWORD PTR [rsp+0x48]
   1400107a6:	mov    rbp,QWORD PTR [rsp+0x40]
   1400107ab:	mov    rcx,QWORD PTR [rbx+0x10]
   1400107af:	test   eax,eax
   1400107b1:	je     0x1400107ed
   1400107b3:	mov    QWORD PTR [rbx+0x18],r14
   1400107b7:	mov    QWORD PTR [rbx+0x10],r14
   1400107bb:	test   rcx,rcx
   1400107be:	je     0x1400107c5
   1400107c0:	call   0x140013924
   1400107c5:	mov    rcx,QWORD PTR [rbx+0x10]
   1400107c9:	test   rcx,rcx
   1400107cc:	je     0x1400107d3
   1400107ce:	call   0x1400137cc
   1400107d3:	mov    QWORD PTR [rbx+0x10],r14
   1400107d7:	mov    rax,rbx
   1400107da:	mov    QWORD PTR [rbx+0x8],r14
   1400107de:	mov    rbx,QWORD PTR [rsp+0x50]
   1400107e3:	add    rsp,0x20
   1400107e7:	pop    r15
   1400107e9:	pop    r14
   1400107eb:	pop    rdi
   1400107ec:	ret    
   1400107ed:	mov    rax,QWORD PTR [rbx+0x8]
   1400107f1:	mov    BYTE PTR [rcx+rax*1],r14b
   1400107f5:	cmp    DWORD PTR [rbx],r14d
   1400107f8:	jne    0x14001080f
   1400107fa:	mov    rcx,QWORD PTR [rbx+0x10]
   1400107fe:	call   0x140011670
   140010803:	test   eax,eax
   140010805:	setne  r14b
   140010809:	inc    r14d
   14001080c:	mov    DWORD PTR [rbx],r14d
   14001080f:	mov    rax,rbx
   140010812:	mov    rbx,QWORD PTR [rsp+0x50]
   140010817:	add    rsp,0x20
   14001081b:	pop    r15
   14001081d:	pop    r14
   14001081f:	pop    rdi
   140010820:	ret    
   140010821:	int3   
   140010822:	int3   
   140010823:	int3   
   140010824:	int3   
   140010825:	int3   
   140010826:	int3   
   140010827:	int3   
   140010828:	int3   
   140010829:	int3   
   14001082a:	int3   
   14001082b:	int3   
   14001082c:	int3   
   14001082d:	int3   
   14001082e:	int3   
   14001082f:	int3   
   140010830:	mov    QWORD PTR [rsp+0x8],rbx
   140010835:	push   rdi
   140010836:	sub    rsp,0x20
   14001083a:	xor    edi,edi
   14001083c:	mov    rbx,rcx
   14001083f:	mov    QWORD PTR [rcx+0x18],rdi
   140010843:	mov    rcx,QWORD PTR [rcx+0x10]
   140010847:	mov    QWORD PTR [rbx+0x10],rdi
   14001084b:	test   rcx,rcx
   14001084e:	je     0x140010855
   140010850:	call   0x140013924
   140010855:	mov    rcx,QWORD PTR [rbx+0x10]
   140010859:	test   rcx,rcx
   14001085c:	je     0x140010863
   14001085e:	call   0x1400137cc
   140010863:	mov    QWORD PTR [rbx+0x10],rdi
   140010867:	mov    rcx,QWORD PTR [rbx+0x20]
   14001086b:	mov    QWORD PTR [rbx+0x28],rdi
   14001086f:	mov    QWORD PTR [rbx+0x20],rdi
   140010873:	test   rcx,rcx
   140010876:	je     0x14001087d
   140010878:	call   0x140013924
   14001087d:	mov    rcx,QWORD PTR [rbx+0x20]
   140010881:	test   rcx,rcx
   140010884:	je     0x14001088b
   140010886:	call   0x1400137cc
   14001088b:	mov    QWORD PTR [rbx+0x20],rdi
   14001088f:	mov    QWORD PTR [rbx+0x8],rdi
   140010893:	mov    DWORD PTR [rbx],edi
   140010895:	mov    rbx,QWORD PTR [rsp+0x30]
   14001089a:	add    rsp,0x20
   14001089e:	pop    rdi
   14001089f:	ret    
   1400108a0:	mov    QWORD PTR [rsp+0x20],r9
   1400108a5:	mov    QWORD PTR [rsp+0x18],r8
   1400108aa:	mov    QWORD PTR [rsp+0x10],rdx
   1400108af:	push   rbp
   1400108b0:	push   rbx
   1400108b1:	push   rsi
   1400108b2:	push   rdi
   1400108b3:	lea    rbp,[rsp-0x18]
   1400108b8:	sub    rsp,0x118
   1400108bf:	mov    QWORD PTR [rbp+0x0],0xfffffffffffffffe
   1400108c7:	mov    r10,r9
   1400108ca:	mov    r9,r8
   1400108cd:	mov    rsi,rcx
   1400108d0:	mov    rax,QWORD PTR [rcx+0x8]
   1400108d4:	test   rax,rax
   1400108d7:	jne    0x1400108f7
   1400108d9:	cmp    QWORD PTR [rdx+0x8],rax
   1400108dd:	jne    0x1400108e9
   1400108df:	xor    ebx,ebx
   1400108e1:	movzx  eax,bx
   1400108e4:	jmp    0x140010cb1
   1400108e9:	test   rax,rax
   1400108ec:	jne    0x1400108f7
   1400108ee:	or     rax,0xffffffffffffffff
   1400108f2:	jmp    0x140010cb1
   1400108f7:	cmp    QWORD PTR [rdx+0x8],0x0
   1400108fc:	jne    0x140010908
   1400108fe:	mov    eax,0x1
   140010903:	jmp    0x140010cb1
   140010908:	cmp    r8,rax
   14001090b:	je     0x1400108ee
   14001090d:	jbe    0x14001096b
   14001090f:	lea    rax,[rip+0x16c7a]        # 0x140027590
   140010916:	mov    QWORD PTR [rsp+0x20],rax
   14001091b:	lea    rax,[rsp+0x28]
   140010920:	mov    QWORD PTR [rbp+0x40],rax
   140010924:	xor    ebx,ebx
   140010926:	mov    DWORD PTR [rsp+0x28],ebx
   14001092a:	mov    QWORD PTR [rsp+0x30],rbx
   14001092f:	mov    QWORD PTR [rsp+0x38],rbx
   140010934:	mov    QWORD PTR [rsp+0x40],rbx
   140010939:	mov    QWORD PTR [rsp+0x48],rbx
   14001093e:	mov    QWORD PTR [rsp+0x50],rbx
   140010943:	or     r8,0xffffffffffffffff
   140010947:	lea    rdx,[rip+0x16cc2]        # 0x140027610
   14001094e:	lea    rcx,[rsp+0x28]
   140010953:	call   0x1400106f0
   140010958:	nop
   140010959:	lea    rdx,[rip+0x24c08]        # 0x140035568
   140010960:	lea    rcx,[rsp+0x20]
   140010965:	call   0x14001436c
   14001096a:	int3   
   14001096b:	mov    eax,DWORD PTR [rdx]
   14001096d:	xor    ebx,ebx
   14001096f:	or     rdi,0xffffffffffffffff
   140010973:	cmp    DWORD PTR [rcx],eax
   140010975:	je     0x140010c03
   14001097b:	mov    DWORD PTR [rsp+0x20],ebx
   14001097f:	mov    QWORD PTR [rsp+0x28],rbx
   140010984:	mov    QWORD PTR [rsp+0x30],rbx
   140010989:	mov    QWORD PTR [rsp+0x38],rbx
   14001098e:	mov    QWORD PTR [rsp+0x40],rbx
   140010993:	mov    QWORD PTR [rsp+0x48],rbx
   140010998:	mov    r8,rdi
   14001099b:	lea    rcx,[rsp+0x20]
   1400109a0:	call   0x140010560
   1400109a5:	nop
   1400109a6:	mov    ecx,DWORD PTR [rsi]
   1400109a8:	dec    ecx
   1400109aa:	je     0x140010b1c
   1400109b0:	dec    ecx
   1400109b2:	je     0x140010a98
   1400109b8:	dec    ecx
   1400109ba:	je     0x140010a14
   1400109bc:	mov    rax,QWORD PTR [rsp+0x40]
   1400109c1:	mov    ecx,ebx
   1400109c3:	mov    QWORD PTR [rsp+0x40],rbx
   1400109c8:	test   rax,rax
   1400109cb:	je     0x1400109da
   1400109cd:	mov    rcx,rax
   1400109d0:	call   0x140013924
   1400109d5:	mov    rcx,QWORD PTR [rsp+0x40]
   1400109da:	call   0x1400137cc
   1400109df:	mov    rax,QWORD PTR [rsp+0x30]
   1400109e4:	mov    rcx,rbx
   1400109e7:	mov    QWORD PTR [rsp+0x30],rbx
   1400109ec:	test   rax,rax
   1400109ef:	je     0x1400109fe
   1400109f1:	mov    rcx,rax
   1400109f4:	call   0x140013924
   1400109f9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400109fe:	call   0x1400137cc
   140010a03:	mov    rdx,QWORD PTR [rbp+0x48]
   140010a07:	mov    r9,QWORD PTR [rbp+0x50]
   140010a0b:	mov    r10,QWORD PTR [rbp+0x58]
   140010a0f:	jmp    0x140010c03
   140010a14:	mov    eax,DWORD PTR [rsp+0x20]
   140010a18:	cmp    eax,0x1
   140010a1b:	jne    0x140010a2c
   140010a1d:	lea    rcx,[rsp+0x20]
   140010a22:	call   0x1400118f0
   140010a27:	jmp    0x140010b9e
   140010a2c:	cmp    eax,0x2
   140010a2f:	jne    0x140010a40
   140010a31:	lea    rcx,[rsp+0x20]
   140010a36:	call   0x140011ec0
   140010a3b:	jmp    0x140010b9e
   140010a40:	cmp    eax,0x3
   140010a43:	je     0x140010b9e
   140010a49:	lea    rax,[rip+0x16b40]        # 0x140027590
   140010a50:	mov    QWORD PTR [rbp-0x70],rax
   140010a54:	lea    rax,[rbp-0x68]
   140010a58:	mov    QWORD PTR [rbp+0x40],rax
   140010a5c:	mov    DWORD PTR [rbp-0x68],ebx
   140010a5f:	mov    QWORD PTR [rbp-0x60],rbx
   140010a63:	mov    QWORD PTR [rbp-0x58],rbx
   140010a67:	mov    QWORD PTR [rbp-0x50],rbx
   140010a6b:	mov    QWORD PTR [rbp-0x48],rbx
   140010a6f:	mov    QWORD PTR [rbp-0x40],rbx
   140010a73:	mov    r8,rdi
   140010a76:	lea    rdx,[rip+0x16bdb]        # 0x140027658
   140010a7d:	lea    rcx,[rbp-0x68]
   140010a81:	call   0x1400106f0
   140010a86:	nop
   140010a87:	lea    rdx,[rip+0x24ada]        # 0x140035568
   140010a8e:	lea    rcx,[rbp-0x70]
   140010a92:	call   0x14001436c
   140010a97:	int3   
   140010a98:	mov    eax,DWORD PTR [rsp+0x20]
   140010a9c:	cmp    eax,0x1
   140010a9f:	jne    0x140010ab0
   140010aa1:	lea    rcx,[rsp+0x20]
   140010aa6:	call   0x1400119d0
   140010aab:	jmp    0x140010b9e
   140010ab0:	cmp    eax,0x3
   140010ab3:	jne    0x140010ac4
   140010ab5:	lea    rcx,[rsp+0x20]
   140010aba:	call   0x140011c60
   140010abf:	jmp    0x140010b9e
   140010ac4:	cmp    eax,0x2
   140010ac7:	je     0x140010b9e
   140010acd:	lea    rax,[rip+0x16abc]        # 0x140027590
   140010ad4:	mov    QWORD PTR [rbp-0x38],rax
   140010ad8:	lea    rax,[rbp-0x30]
   140010adc:	mov    QWORD PTR [rbp+0x40],rax
   140010ae0:	mov    DWORD PTR [rbp-0x30],ebx
   140010ae3:	mov    QWORD PTR [rbp-0x28],rbx
   140010ae7:	mov    QWORD PTR [rbp-0x20],rbx
   140010aeb:	mov    QWORD PTR [rbp-0x18],rbx
   140010aef:	mov    QWORD PTR [rbp-0x10],rbx
   140010af3:	mov    QWORD PTR [rbp-0x8],rbx
   140010af7:	mov    r8,rdi
   140010afa:	lea    rdx,[rip+0x16b3f]        # 0x140027640
   140010b01:	lea    rcx,[rbp-0x30]
   140010b05:	call   0x1400106f0
   140010b0a:	nop
   140010b0b:	lea    rdx,[rip+0x24a56]        # 0x140035568
   140010b12:	lea    rcx,[rbp-0x38]
   140010b16:	call   0x14001436c
   140010b1b:	int3   
   140010b1c:	mov    eax,DWORD PTR [rsp+0x20]
   140010b20:	cmp    eax,0x2
   140010b23:	jne    0x140010b31
   140010b25:	lea    rcx,[rsp+0x20]
   140010b2a:	call   0x140011d60
   140010b2f:	jmp    0x140010b9e
   140010b31:	cmp    eax,0x3
   140010b34:	jne    0x140010b42
   140010b36:	lea    rcx,[rsp+0x20]
   140010b3b:	call   0x140011b30
   140010b40:	jmp    0x140010b9e
   140010b42:	cmp    eax,0x1
   140010b45:	je     0x140010b9e
   140010b47:	lea    rax,[rip+0x16a42]        # 0x140027590
   140010b4e:	mov    QWORD PTR [rsp+0x58],rax
   140010b53:	lea    rax,[rsp+0x60]
   140010b58:	mov    QWORD PTR [rbp+0x40],rax
   140010b5c:	mov    DWORD PTR [rsp+0x60],ebx
   140010b60:	mov    QWORD PTR [rsp+0x68],rbx
   140010b65:	mov    QWORD PTR [rsp+0x70],rbx
   140010b6a:	mov    QWORD PTR [rsp+0x78],rbx
   140010b6f:	mov    QWORD PTR [rbp-0x80],rbx
   140010b73:	mov    QWORD PTR [rbp-0x78],rbx
   140010b77:	mov    r8,rdi
   140010b7a:	lea    rdx,[rip+0x16aa7]        # 0x140027628
   140010b81:	lea    rcx,[rsp+0x60]
   140010b86:	call   0x1400106f0
   140010b8b:	nop
   140010b8c:	lea    rdx,[rip+0x249d5]        # 0x140035568
   140010b93:	lea    rcx,[rsp+0x58]
   140010b98:	call   0x14001436c
   140010b9d:	int3   
   140010b9e:	mov    r9,QWORD PTR [rbp+0x58]
   140010ba2:	mov    r8,QWORD PTR [rbp+0x50]
   140010ba6:	lea    rdx,[rsp+0x20]
   140010bab:	mov    rcx,rsi
   140010bae:	call   0x1400108a0
   140010bb3:	movzx  edi,ax
   140010bb6:	mov    rdx,QWORD PTR [rsp+0x40]
   140010bbb:	mov    rcx,rbx
   140010bbe:	mov    QWORD PTR [rsp+0x40],rbx
   140010bc3:	test   rdx,rdx
   140010bc6:	je     0x140010bd5
   140010bc8:	mov    rcx,rdx
   140010bcb:	call   0x140013924
   140010bd0:	mov    rcx,QWORD PTR [rsp+0x40]
   140010bd5:	call   0x1400137cc
   140010bda:	mov    rcx,QWORD PTR [rsp+0x30]
   140010bdf:	mov    QWORD PTR [rsp+0x30],rbx
   140010be4:	test   rcx,rcx
   140010be7:	je     0x140010bf3
   140010be9:	call   0x140013924
   140010bee:	mov    rbx,QWORD PTR [rsp+0x30]
   140010bf3:	mov    rcx,rbx
   140010bf6:	call   0x1400137cc
   140010bfb:	movzx  eax,di
   140010bfe:	jmp    0x140010cb1
   140010c03:	mov    r8,QWORD PTR [rsi+0x8]
   140010c07:	sub    r8,r9
   140010c0a:	inc    r8
   140010c0d:	test   r10,r10
   140010c10:	je     0x140010c19
   140010c12:	cmp    r10,r8
   140010c15:	cmovb  r8,r10
   140010c19:	mov    rax,QWORD PTR [rdx+0x8]
   140010c1d:	inc    rax
   140010c20:	cmp    r8,rax
   140010c23:	cmovae r8,rax
   140010c27:	mov    eax,DWORD PTR [rsi]
   140010c29:	test   eax,eax
   140010c2b:	jle    0x140010c5a
   140010c2d:	cmp    eax,0x2
   140010c30:	jle    0x140010c48
   140010c32:	cmp    eax,0x3
   140010c35:	jne    0x140010c5a
   140010c37:	add    r8,r8
   140010c3a:	mov    rax,QWORD PTR [rsi+0x20]
   140010c3e:	lea    rcx,[rax+r9*2]
   140010c42:	mov    rdx,QWORD PTR [rdx+0x20]
   140010c46:	jmp    0x140010c53
   140010c48:	mov    rcx,QWORD PTR [rsi+0x10]
   140010c4c:	add    rcx,r9
   140010c4f:	mov    rdx,QWORD PTR [rdx+0x10]
   140010c53:	call   0x140014ca0
   140010c58:	jmp    0x140010cb1
   140010c5a:	lea    rax,[rip+0x1692f]        # 0x140027590
   140010c61:	mov    QWORD PTR [rsp+0x58],rax
   140010c66:	lea    rax,[rsp+0x60]
   140010c6b:	mov    QWORD PTR [rbp+0x40],rax
   140010c6f:	mov    DWORD PTR [rsp+0x60],ebx
   140010c73:	mov    QWORD PTR [rsp+0x68],rbx
   140010c78:	mov    QWORD PTR [rsp+0x70],rbx
   140010c7d:	mov    QWORD PTR [rsp+0x78],rbx
   140010c82:	mov    QWORD PTR [rbp-0x80],rbx
   140010c86:	mov    QWORD PTR [rbp-0x78],rbx
   140010c8a:	mov    r8,rdi
   140010c8d:	lea    rdx,[rip+0x169dc]        # 0x140027670
   140010c94:	lea    rcx,[rsp+0x60]
   140010c99:	call   0x1400106f0
   140010c9e:	nop
   140010c9f:	lea    rdx,[rip+0x248c2]        # 0x140035568
   140010ca6:	lea    rcx,[rsp+0x58]
   140010cab:	call   0x14001436c
   140010cb0:	int3   
   140010cb1:	add    rsp,0x118
   140010cb8:	pop    rdi
   140010cb9:	pop    rsi
   140010cba:	pop    rbx
   140010cbb:	pop    rbp
   140010cbc:	ret    
   140010cbd:	int3   
   140010cbe:	int3   
   140010cbf:	int3   
   140010cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140010cc5:	push   rdi
   140010cc6:	sub    rsp,0x20
   140010cca:	mov    rdi,QWORD PTR [rcx+0x10]
   140010cce:	mov    r9,r8
   140010cd1:	mov    rbx,rcx
   140010cd4:	cmp    rdi,rdx
   140010cd7:	jb     0x140010d60
   140010cdd:	mov    rax,rdi
   140010ce0:	sub    rax,rdx
   140010ce3:	cmp    rax,r8
   140010ce6:	ja     0x140010d0a
   140010ce8:	cmp    QWORD PTR [rcx+0x18],0x8
   140010ced:	mov    QWORD PTR [rcx+0x10],rdx
   140010cf1:	jb     0x140010cf6
   140010cf3:	mov    rcx,QWORD PTR [rcx]
   140010cf6:	xor    eax,eax
   140010cf8:	mov    WORD PTR [rcx+rdx*2],ax
   140010cfc:	mov    rax,rbx
   140010cff:	mov    rbx,QWORD PTR [rsp+0x30]
   140010d04:	add    rsp,0x20
   140010d08:	pop    rdi
   140010d09:	ret    
   140010d0a:	test   r8,r8
   140010d0d:	je     0x140010d52
   140010d0f:	cmp    QWORD PTR [rcx+0x18],0x8
   140010d14:	jb     0x140010d1b
   140010d16:	mov    rax,QWORD PTR [rcx]
   140010d19:	jmp    0x140010d1e
   140010d1b:	mov    rax,rcx
   140010d1e:	sub    rdi,r8
   140010d21:	lea    rcx,[rax+rdx*2]
   140010d25:	mov    r8,rdi
   140010d28:	sub    r8,rdx
   140010d2b:	je     0x140010d39
   140010d2d:	lea    rdx,[rcx+r9*2]
   140010d31:	add    r8,r8
   140010d34:	call   0x1400130d0
   140010d39:	cmp    QWORD PTR [rbx+0x18],0x8
   140010d3e:	mov    QWORD PTR [rbx+0x10],rdi
   140010d42:	jb     0x140010d49
   140010d44:	mov    rcx,QWORD PTR [rbx]
   140010d47:	jmp    0x140010d4c
   140010d49:	mov    rcx,rbx
   140010d4c:	xor    eax,eax
   140010d4e:	mov    WORD PTR [rcx+rdi*2],ax
   140010d52:	mov    rax,rbx
   140010d55:	mov    rbx,QWORD PTR [rsp+0x30]
   140010d5a:	add    rsp,0x20
   140010d5e:	pop    rdi
   140010d5f:	ret    
   140010d60:	lea    rcx,[rip+0x1df19]        # 0x14002ec80
   140010d67:	call   0x140013044
   140010d6c:	int3   
   140010d6d:	int3   
   140010d6e:	int3   
   140010d6f:	int3   
   140010d70:	rex push rbp
   140010d72:	push   r14
   140010d74:	push   r15
   140010d76:	sub    rsp,0x20
   140010d7a:	mov    rbp,r9
   140010d7d:	mov    r15,rdx
   140010d80:	mov    r14,rcx
   140010d83:	test   r9,r9
   140010d86:	jne    0x140010d9b
   140010d88:	cmp    r8,QWORD PTR [rcx+0x10]
   140010d8c:	ja     0x140010d9b
   140010d8e:	mov    rax,r8
   140010d91:	add    rsp,0x20
   140010d95:	pop    r15
   140010d97:	pop    r14
   140010d99:	pop    rbp
   140010d9a:	ret    
   140010d9b:	mov    QWORD PTR [rsp+0x40],rbx
   140010da0:	mov    rbx,QWORD PTR [rcx+0x10]
   140010da4:	mov    QWORD PTR [rsp+0x48],rsi
   140010da9:	mov    QWORD PTR [rsp+0x50],rdi
   140010dae:	cmp    r8,rbx
   140010db1:	jae    0x140010e34
   140010db7:	sub    rbx,r8
   140010dba:	cmp    r9,rbx
   140010dbd:	ja     0x140010e34
   140010dbf:	mov    eax,0x1
   140010dc4:	sub    rax,r9
   140010dc7:	add    rbx,rax
   140010dca:	cmp    QWORD PTR [rcx+0x18],0x10
   140010dcf:	jb     0x140010dd6
   140010dd1:	mov    rax,QWORD PTR [rcx]
   140010dd4:	jmp    0x140010dd9
   140010dd6:	mov    rax,rcx
   140010dd9:	lea    rsi,[rax+r8*1]
   140010ddd:	nop    DWORD PTR [rax]
   140010de0:	test   rbx,rbx
   140010de3:	je     0x140010e34
   140010de5:	movsx  edx,BYTE PTR [r15]
   140010de9:	mov    r8,rbx
   140010dec:	mov    rcx,rsi
   140010def:	call   0x140014bdc
   140010df4:	mov    rdi,rax
   140010df7:	test   rax,rax
   140010dfa:	je     0x140010e34
   140010dfc:	test   rbp,rbp
   140010dff:	je     0x140010e22
   140010e01:	mov    r8,rbp
   140010e04:	mov    rdx,r15
   140010e07:	mov    rcx,rax
   140010e0a:	call   0x140014ca0
   140010e0f:	test   eax,eax
   140010e11:	je     0x140010e22
   140010e13:	sub    rsi,rdi
   140010e16:	dec    rsi
   140010e19:	add    rbx,rsi
   140010e1c:	lea    rsi,[rdi+0x1]
   140010e20:	jmp    0x140010de0
   140010e22:	cmp    QWORD PTR [r14+0x18],0x10
   140010e27:	jb     0x140010e2c
   140010e29:	mov    r14,QWORD PTR [r14]
   140010e2c:	sub    rdi,r14
   140010e2f:	mov    rax,rdi
   140010e32:	jmp    0x140010e38
   140010e34:	or     rax,0xffffffffffffffff
   140010e38:	mov    rsi,QWORD PTR [rsp+0x48]
   140010e3d:	mov    rbx,QWORD PTR [rsp+0x40]
   140010e42:	mov    rdi,QWORD PTR [rsp+0x50]
   140010e47:	add    rsp,0x20
   140010e4b:	pop    r15
   140010e4d:	pop    r14
   140010e4f:	pop    rbp
   140010e50:	ret    
   140010e51:	int3   
   140010e52:	int3   
   140010e53:	int3   
   140010e54:	int3   
   140010e55:	int3   
   140010e56:	int3   
   140010e57:	int3   
   140010e58:	int3   
   140010e59:	int3   
   140010e5a:	int3   
   140010e5b:	int3   
   140010e5c:	int3   
   140010e5d:	int3   
   140010e5e:	int3   
   140010e5f:	int3   
   140010e60:	mov    QWORD PTR [rsp+0x18],rbx
   140010e65:	push   rsi
   140010e66:	mov    r11,r9
   140010e69:	mov    rsi,rdx
   140010e6c:	mov    rbx,rcx
   140010e6f:	test   r9,r9
   140010e72:	jne    0x140010e84
   140010e74:	cmp    r8,QWORD PTR [rcx+0x10]
   140010e78:	ja     0x140010e84
   140010e7a:	mov    rax,r8
   140010e7d:	mov    rbx,QWORD PTR [rsp+0x20]
   140010e82:	pop    rsi
   140010e83:	ret    
   140010e84:	mov    r10,QWORD PTR [rcx+0x10]
   140010e88:	mov    QWORD PTR [rsp+0x10],rdi
   140010e8d:	mov    QWORD PTR [rsp+0x18],r14
   140010e92:	or     r14,0xffffffffffffffff
   140010e96:	cmp    r8,r10
   140010e99:	jae    0x140010f67
   140010e9f:	sub    r10,r8
   140010ea2:	cmp    r9,r10
   140010ea5:	ja     0x140010f67
   140010eab:	mov    eax,0x1
   140010eb0:	sub    rax,r9
   140010eb3:	add    r10,rax
   140010eb6:	cmp    QWORD PTR [rcx+0x18],0x8
   140010ebb:	jb     0x140010ec2
   140010ebd:	mov    rax,QWORD PTR [rcx]
   140010ec0:	jmp    0x140010ec5
   140010ec2:	mov    rax,rcx
   140010ec5:	lea    rdi,[rax+r8*2]
   140010ec9:	nop    DWORD PTR [rax+0x0]
   140010ed0:	test   r10,r10
   140010ed3:	je     0x140010eee
   140010ed5:	movzx  edx,WORD PTR [rsi]
   140010ed8:	mov    rcx,r10
   140010edb:	mov    rax,rdi
   140010ede:	xchg   ax,ax
   140010ee0:	cmp    WORD PTR [rax],dx
   140010ee3:	je     0x140010ef0
   140010ee5:	add    rax,0x2
   140010ee9:	dec    rcx
   140010eec:	jne    0x140010ee0
   140010eee:	xor    eax,eax
   140010ef0:	test   rax,rax
   140010ef3:	je     0x140010f67
   140010ef5:	test   r11,r11
   140010ef8:	je     0x140010f1a
   140010efa:	mov    rdx,r11
   140010efd:	mov    r8,rsi
   140010f00:	mov    r9,rax
   140010f03:	movzx  ecx,WORD PTR [r8]
   140010f07:	cmp    WORD PTR [r9],cx
   140010f0b:	jne    0x140010f3b
   140010f0d:	add    r9,0x2
   140010f11:	add    r8,0x2
   140010f15:	dec    rdx
   140010f18:	jne    0x140010f03
   140010f1a:	cmp    QWORD PTR [rbx+0x18],0x8
   140010f1f:	jb     0x140010f24
   140010f21:	mov    rbx,QWORD PTR [rbx]
   140010f24:	mov    rdi,QWORD PTR [rsp+0x10]
   140010f29:	mov    r14,QWORD PTR [rsp+0x18]
   140010f2e:	sub    rax,rbx
   140010f31:	sar    rax,1
   140010f34:	mov    rbx,QWORD PTR [rsp+0x20]
   140010f39:	pop    rsi
   140010f3a:	ret    
   140010f3b:	cmp    WORD PTR [r9],cx
   140010f3f:	mov    edx,0x1
   140010f44:	cmovb  edx,r14d
   140010f48:	test   edx,edx
   140010f4a:	je     0x140010f1a
   140010f4c:	mov    rdx,rax
   140010f4f:	mov    rcx,r14
   140010f52:	sub    rdx,rdi
   140010f55:	lea    rdi,[rax+0x2]
   140010f59:	sar    rdx,1
   140010f5c:	sub    rcx,rdx
   140010f5f:	add    r10,rcx
   140010f62:	jmp    0x140010ed0
   140010f67:	mov    rdi,QWORD PTR [rsp+0x10]
   140010f6c:	mov    rbx,QWORD PTR [rsp+0x20]
   140010f71:	mov    rax,r14
   140010f74:	mov    r14,QWORD PTR [rsp+0x18]
   140010f79:	pop    rsi
   140010f7a:	ret    
   140010f7b:	int3   
   140010f7c:	int3   
   140010f7d:	int3   
   140010f7e:	int3   
   140010f7f:	int3   
   140010f80:	rex push rbp
   140010f82:	push   rsi
   140010f83:	push   rdi
   140010f84:	push   r14
   140010f86:	push   r15
   140010f88:	mov    rbp,rsp
   140010f8b:	sub    rsp,0x80
   140010f92:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140010f9a:	mov    QWORD PTR [rsp+0xc8],rbx
   140010fa2:	mov    rax,QWORD PTR [rip+0x26067]        # 0x140037010
   140010fa9:	xor    rax,rsp
   140010fac:	mov    QWORD PTR [rbp-0x8],rax
   140010fb0:	mov    r15,r8
   140010fb3:	mov    r14,rdx
   140010fb6:	mov    rsi,rcx
   140010fb9:	or     rdi,0xffffffffffffffff
   140010fbd:	mov    eax,DWORD PTR [rcx]
   140010fbf:	cmp    eax,DWORD PTR [rdx]
   140010fc1:	jne    0x1400110b7
   140010fc7:	cmp    r8,QWORD PTR [rcx+0x8]
   140010fcb:	jae    0x140011203
   140010fd1:	xor    ebx,ebx
   140010fd3:	mov    QWORD PTR [rbp-0x18],rbx
   140010fd7:	cmp    eax,0x3
   140010fda:	jne    0x140011043
   140010fdc:	mov    rdx,QWORD PTR [rcx+0x20]
   140010fe0:	mov    QWORD PTR [rbp-0x10],0x7
   140010fe8:	mov    WORD PTR [rbp-0x28],bx
   140010fec:	cmp    WORD PTR [rdx],bx
   140010fef:	jne    0x140010ff6
   140010ff1:	mov    r8d,ebx
   140010ff4:	jmp    0x14001100a
   140010ff6:	mov    r8,rdi
   140010ff9:	nop    DWORD PTR [rax+0x0]
   140011000:	inc    r8
   140011003:	cmp    WORD PTR [rdx+r8*2],bx
   140011008:	jne    0x140011000
   14001100a:	lea    rcx,[rbp-0x28]
   14001100e:	call   0x140010410
   140011013:	mov    rdx,QWORD PTR [r14+0x20]
   140011017:	cmp    WORD PTR [rdx],bx
   14001101a:	je     0x14001102a
   14001101c:	mov    rbx,rdi
   14001101f:	nop
   140011020:	inc    rbx
   140011023:	cmp    WORD PTR [rdx+rbx*2],0x0
   140011028:	jne    0x140011020
   14001102a:	mov    r9,rbx
   14001102d:	mov    r8,r15
   140011030:	lea    rcx,[rbp-0x28]
   140011034:	call   0x140010e60
   140011039:	mov    rbx,rax
   14001103c:	cmp    QWORD PTR [rbp-0x10],0x8
   140011041:	jmp    0x1400110a0
   140011043:	mov    rdx,QWORD PTR [rcx+0x10]
   140011047:	mov    QWORD PTR [rbp-0x10],0xf
   14001104f:	mov    BYTE PTR [rbp-0x28],bl
   140011052:	cmp    BYTE PTR [rdx],bl
   140011054:	jne    0x14001105b
   140011056:	mov    r8,rbx
   140011059:	jmp    0x140011069
   14001105b:	mov    r8,rdi
   14001105e:	xchg   ax,ax
   140011060:	inc    r8
   140011063:	cmp    BYTE PTR [rdx+r8*1],bl
   140011067:	jne    0x140011060
   140011069:	lea    rcx,[rbp-0x28]
   14001106d:	call   0x1400021a0
   140011072:	nop
   140011073:	mov    rdx,QWORD PTR [r14+0x10]
   140011077:	cmp    BYTE PTR [rdx],0x0
   14001107a:	je     0x140011089
   14001107c:	mov    rbx,rdi
   14001107f:	nop
   140011080:	inc    rbx
   140011083:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140011087:	jne    0x140011080
   140011089:	mov    r9,rbx
   14001108c:	mov    r8,r15
   14001108f:	lea    rcx,[rbp-0x28]
   140011093:	call   0x140010d70
   140011098:	mov    rbx,rax
   14001109b:	cmp    QWORD PTR [rbp-0x10],0x10
   1400110a0:	jb     0x140011206
   1400110a6:	mov    rcx,QWORD PTR [rbp-0x28]
   1400110aa:	call   0x1400137cc
   1400110af:	mov    rax,rbx
   1400110b2:	jmp    0x140011206
   1400110b7:	xor    ebx,ebx
   1400110b9:	mov    DWORD PTR [rbp-0x60],ebx
   1400110bc:	mov    QWORD PTR [rbp-0x58],rbx
   1400110c0:	mov    QWORD PTR [rbp-0x50],rbx
   1400110c4:	mov    QWORD PTR [rbp-0x48],rbx
   1400110c8:	mov    QWORD PTR [rbp-0x40],rbx
   1400110cc:	mov    QWORD PTR [rbp-0x38],rbx
   1400110d0:	mov    r8,rdi
   1400110d3:	lea    rcx,[rbp-0x60]
   1400110d7:	call   0x140010560
   1400110dc:	nop
   1400110dd:	mov    eax,DWORD PTR [rbp-0x60]
   1400110e0:	cmp    eax,0x3
   1400110e3:	je     0x140011110
   1400110e5:	cmp    eax,0x1
   1400110e8:	jne    0x1400110fb
   1400110ea:	cmp    QWORD PTR [rbp-0x50],rbx
   1400110ee:	je     0x140011109
   1400110f0:	lea    rcx,[rbp-0x60]
   1400110f4:	call   0x1400118f0
   1400110f9:	jmp    0x140011109
   1400110fb:	cmp    eax,0x2
   1400110fe:	jne    0x140011109
   140011100:	lea    rcx,[rbp-0x60]
   140011104:	call   0x140011ec0
   140011109:	mov    DWORD PTR [rbp-0x60],0x3
   140011110:	mov    eax,DWORD PTR [rsi]
   140011112:	cmp    eax,0x3
   140011115:	je     0x140011140
   140011117:	cmp    eax,0x1
   14001111a:	jne    0x14001112d
   14001111c:	cmp    QWORD PTR [rsi+0x10],0x0
   140011121:	je     0x14001113a
   140011123:	mov    rcx,rsi
   140011126:	call   0x1400118f0
   14001112b:	jmp    0x14001113a
   14001112d:	cmp    eax,0x2
   140011130:	jne    0x14001113a
   140011132:	mov    rcx,rsi
   140011135:	call   0x140011ec0
   14001113a:	mov    DWORD PTR [rsi],0x3
   140011140:	mov    rdx,QWORD PTR [rsi+0x20]
   140011144:	mov    QWORD PTR [rbp-0x10],0x7
   14001114c:	mov    QWORD PTR [rbp-0x18],rbx
   140011150:	mov    WORD PTR [rbp-0x28],bx
   140011154:	cmp    WORD PTR [rdx],0x0
   140011158:	jne    0x14001115f
   14001115a:	mov    r8,rbx
   14001115d:	jmp    0x14001116d
   14001115f:	mov    r8,rdi
   140011162:	inc    r8
   140011165:	cmp    WORD PTR [rdx+r8*2],0x0
   14001116b:	jne    0x140011162
   14001116d:	lea    rcx,[rbp-0x28]
   140011171:	call   0x140010410
   140011176:	mov    rsi,QWORD PTR [rbp-0x40]
   14001117a:	cmp    WORD PTR [rsi],0x0
   14001117e:	jne    0x140011185
   140011180:	mov    rdi,rbx
   140011183:	jmp    0x14001118f
   140011185:	inc    rdi
   140011188:	cmp    WORD PTR [rsi+rdi*2],0x0
   14001118d:	jne    0x140011185
   14001118f:	mov    r9,rdi
   140011192:	mov    r8,r15
   140011195:	mov    rdx,rsi
   140011198:	lea    rcx,[rbp-0x28]
   14001119c:	call   0x140010e60
   1400111a1:	mov    rdi,rax
   1400111a4:	cmp    QWORD PTR [rbp-0x10],0x8
   1400111a9:	jb     0x1400111b8
   1400111ab:	mov    rcx,QWORD PTR [rbp-0x28]
   1400111af:	call   0x1400137cc
   1400111b4:	mov    rsi,QWORD PTR [rbp-0x40]
   1400111b8:	mov    QWORD PTR [rbp-0x10],0x7
   1400111c0:	mov    QWORD PTR [rbp-0x18],rbx
   1400111c4:	mov    WORD PTR [rbp-0x28],bx
   1400111c8:	mov    rcx,rbx
   1400111cb:	mov    QWORD PTR [rbp-0x40],rbx
   1400111cf:	test   rsi,rsi
   1400111d2:	je     0x1400111e0
   1400111d4:	mov    rcx,rsi
   1400111d7:	call   0x140013924
   1400111dc:	mov    rcx,QWORD PTR [rbp-0x40]
   1400111e0:	call   0x1400137cc
   1400111e5:	mov    rcx,QWORD PTR [rbp-0x50]
   1400111e9:	mov    QWORD PTR [rbp-0x50],rbx
   1400111ed:	test   rcx,rcx
   1400111f0:	je     0x1400111fb
   1400111f2:	call   0x140013924
   1400111f7:	mov    rbx,QWORD PTR [rbp-0x50]
   1400111fb:	mov    rcx,rbx
   1400111fe:	call   0x1400137cc
   140011203:	mov    rax,rdi
   140011206:	mov    rcx,QWORD PTR [rbp-0x8]
   14001120a:	xor    rcx,rsp
   14001120d:	call   0x1400130a0
   140011212:	mov    rbx,QWORD PTR [rsp+0xc8]
   14001121a:	add    rsp,0x80
   140011221:	pop    r15
   140011223:	pop    r14
   140011225:	pop    rdi
   140011226:	pop    rsi
   140011227:	pop    rbp
   140011228:	ret    
   140011229:	int3   
   14001122a:	int3   
   14001122b:	int3   
   14001122c:	int3   
   14001122d:	int3   
   14001122e:	int3   
   14001122f:	int3   
   140011230:	mov    QWORD PTR [rsp+0x8],rbx
   140011235:	mov    QWORD PTR [rsp+0x10],rbp
   14001123a:	mov    QWORD PTR [rsp+0x18],rsi
   14001123f:	push   rdi
   140011240:	sub    rsp,0x20
   140011244:	or     rbx,0xffffffffffffffff
   140011248:	cmp    QWORD PTR [rcx+0x8],0x0
   14001124d:	mov    rdi,r8
   140011250:	movzx  ebp,dx
   140011253:	mov    rsi,rcx
   140011256:	jbe    0x1400112a6
   140011258:	mov    eax,DWORD PTR [rcx]
   14001125a:	cmp    eax,0x3
   14001125d:	je     0x140011282
   14001125f:	cmp    eax,0x1
   140011262:	jne    0x140011272
   140011264:	cmp    QWORD PTR [rcx+0x10],0x0
   140011269:	je     0x14001127c
   14001126b:	call   0x1400118f0
   140011270:	jmp    0x14001127c
   140011272:	cmp    eax,0x2
   140011275:	jne    0x14001127c
   140011277:	call   0x140011ec0
   14001127c:	mov    DWORD PTR [rsi],0x3
   140011282:	mov    rax,QWORD PTR [rsi+0x8]
   140011286:	cmp    rdi,rax
   140011289:	jae    0x1400112a6
   14001128b:	mov    rcx,QWORD PTR [rsi+0x20]
   14001128f:	nop
   140011290:	cmp    rbx,0xffffffffffffffff
   140011294:	jne    0x1400112a6
   140011296:	cmp    WORD PTR [rcx+rdi*2],bp
   14001129a:	cmove  rbx,rdi
   14001129e:	inc    rdi
   1400112a1:	cmp    rdi,rax
   1400112a4:	jb     0x140011290
   1400112a6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400112ab:	mov    rsi,QWORD PTR [rsp+0x40]
   1400112b0:	mov    rax,rbx
   1400112b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400112b8:	add    rsp,0x20
   1400112bc:	pop    rdi
   1400112bd:	ret    
   1400112be:	int3   
   1400112bf:	int3   
   1400112c0:	rex push rbx
   1400112c2:	sub    rsp,0x20
   1400112c6:	mov    eax,DWORD PTR [rcx]
   1400112c8:	mov    rbx,rcx
   1400112cb:	cmp    eax,0x1
   1400112ce:	je     0x1400112fa
   1400112d0:	cmp    eax,0x2
   1400112d3:	jne    0x1400112e3
   1400112d5:	cmp    QWORD PTR [rcx+0x10],0x0
   1400112da:	je     0x1400112f4
   1400112dc:	call   0x140011d60
   1400112e1:	jmp    0x1400112f4
   1400112e3:	cmp    eax,0x3
   1400112e6:	jne    0x1400112f4
   1400112e8:	cmp    QWORD PTR [rcx+0x20],0x0
   1400112ed:	je     0x1400112f4
   1400112ef:	call   0x140011b30
   1400112f4:	mov    DWORD PTR [rbx],0x1
   1400112fa:	mov    rcx,QWORD PTR [rbx+0x10]
   1400112fe:	lea    rax,[rip+0x27b37]        # 0x140038e3c
   140011305:	test   rcx,rcx
   140011308:	cmovne rax,rcx
   14001130c:	add    rsp,0x20
   140011310:	pop    rbx
   140011311:	ret    
   140011312:	int3   
   140011313:	int3   
   140011314:	int3   
   140011315:	int3   
   140011316:	int3   
   140011317:	int3   
   140011318:	int3   
   140011319:	int3   
   14001131a:	int3   
   14001131b:	int3   
   14001131c:	int3   
   14001131d:	int3   
   14001131e:	int3   
   14001131f:	int3   
   140011320:	rex push rbx
   140011322:	sub    rsp,0x20
   140011326:	mov    eax,DWORD PTR [rcx]
   140011328:	mov    rbx,rcx
   14001132b:	cmp    eax,0x3
   14001132e:	je     0x140011353
   140011330:	cmp    eax,0x1
   140011333:	jne    0x140011343
   140011335:	cmp    QWORD PTR [rcx+0x10],0x0
   14001133a:	je     0x14001134d
   14001133c:	call   0x1400118f0
   140011341:	jmp    0x14001134d
   140011343:	cmp    eax,0x2
   140011346:	jne    0x14001134d
   140011348:	call   0x140011ec0
   14001134d:	mov    DWORD PTR [rbx],0x3
   140011353:	mov    rcx,QWORD PTR [rbx+0x20]
   140011357:	lea    rax,[rip+0x27ae2]        # 0x140038e40
   14001135e:	test   rcx,rcx
   140011361:	cmovne rax,rcx
   140011365:	add    rsp,0x20
   140011369:	pop    rbx
   14001136a:	ret    
   14001136b:	int3   
   14001136c:	int3   
   14001136d:	int3   
   14001136e:	int3   
   14001136f:	int3   
   140011370:	rex push rbx
   140011372:	sub    rsp,0x20
   140011376:	mov    eax,DWORD PTR [rcx]
   140011378:	mov    rbx,rcx
   14001137b:	cmp    eax,0x2
   14001137e:	je     0x1400113b8
   140011380:	cmp    eax,0x1
   140011383:	jne    0x1400113a1
   140011385:	mov    rcx,QWORD PTR [rcx+0x10]
   140011389:	test   rcx,rcx
   14001138c:	je     0x1400113b2
   14001138e:	call   0x1400116f0
   140011393:	test   eax,eax
   140011395:	jne    0x1400113b2
   140011397:	mov    rcx,rbx
   14001139a:	call   0x1400119d0
   14001139f:	jmp    0x1400113b2
   1400113a1:	cmp    eax,0x3
   1400113a4:	jne    0x1400113b2
   1400113a6:	cmp    QWORD PTR [rcx+0x20],0x0
   1400113ab:	je     0x1400113b2
   1400113ad:	call   0x140011c60
   1400113b2:	mov    DWORD PTR [rbx],0x2
   1400113b8:	mov    rcx,QWORD PTR [rbx+0x10]
   1400113bc:	lea    rax,[rip+0x27a79]        # 0x140038e3c
   1400113c3:	test   rcx,rcx
   1400113c6:	cmovne rax,rcx
   1400113ca:	add    rsp,0x20
   1400113ce:	pop    rbx
   1400113cf:	ret    
   1400113d0:	mov    QWORD PTR [rsp+0x10],rsi
   1400113d5:	push   rdi
   1400113d6:	sub    rsp,0x20
   1400113da:	mov    rax,QWORD PTR [rcx+0x8]
   1400113de:	mov    rsi,rdx
   1400113e1:	mov    rdi,rcx
   1400113e4:	cmp    rdx,rax
   1400113e7:	jbe    0x1400114a9
   1400113ed:	add    rax,rax
   1400113f0:	mov    QWORD PTR [rsp+0x30],rbx
   1400113f5:	cmp    rdx,rax
   1400113f8:	cmovbe rsi,rax
   1400113fc:	cmp    QWORD PTR [rcx],0x0
   140011400:	mov    rcx,rsi
   140011403:	je     0x140011467
   140011405:	call   0x14001307c
   14001140a:	mov    r8,rsi
   14001140d:	xor    edx,edx
   14001140f:	mov    rcx,rax
   140011412:	mov    rbx,rax
   140011415:	call   0x140014d80
   14001141a:	mov    r8,QWORD PTR [rdi+0x8]
   14001141e:	mov    rdx,QWORD PTR [rdi]
   140011421:	mov    rcx,rbx
   140011424:	call   0x1400130d0
   140011429:	mov    rcx,QWORD PTR [rdi]
   14001142c:	mov    QWORD PTR [rdi+0x8],rsi
   140011430:	mov    QWORD PTR [rdi],0x0
   140011437:	test   rcx,rcx
   14001143a:	je     0x140011441
   14001143c:	call   0x140013924
   140011441:	mov    rcx,QWORD PTR [rdi]
   140011444:	cmp    rbx,rcx
   140011447:	je     0x14001144e
   140011449:	call   0x1400137cc
   14001144e:	xor    ecx,ecx
   140011450:	mov    QWORD PTR [rdi],rbx
   140011453:	mov    rbx,QWORD PTR [rsp+0x30]
   140011458:	mov    rsi,QWORD PTR [rsp+0x38]
   14001145d:	add    rsp,0x20
   140011461:	pop    rdi
   140011462:	jmp    0x1400137cc
   140011467:	call   0x14001307c
   14001146c:	mov    rcx,QWORD PTR [rdi]
   14001146f:	mov    QWORD PTR [rdi+0x8],rsi
   140011473:	mov    rbx,rax
   140011476:	mov    QWORD PTR [rdi],0x0
   14001147d:	test   rcx,rcx
   140011480:	je     0x140011487
   140011482:	call   0x140013924
   140011487:	mov    rcx,QWORD PTR [rdi]
   14001148a:	cmp    rbx,rcx
   14001148d:	je     0x140011494
   14001148f:	call   0x1400137cc
   140011494:	mov    r8,rsi
   140011497:	xor    edx,edx
   140011499:	mov    rcx,rbx
   14001149c:	mov    QWORD PTR [rdi],rbx
   14001149f:	call   0x140014d80
   1400114a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400114a9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400114ae:	add    rsp,0x20
   1400114b2:	pop    rdi
   1400114b3:	ret    
   1400114b4:	int3   
   1400114b5:	int3   
   1400114b6:	int3   
   1400114b7:	int3   
   1400114b8:	int3   
   1400114b9:	int3   
   1400114ba:	int3   
   1400114bb:	int3   
   1400114bc:	int3   
   1400114bd:	int3   
   1400114be:	int3   
   1400114bf:	int3   
   1400114c0:	mov    QWORD PTR [rsp+0x10],rsi
   1400114c5:	push   rdi
   1400114c6:	sub    rsp,0x20
   1400114ca:	mov    rax,QWORD PTR [rcx+0x8]
   1400114ce:	mov    rsi,rdx
   1400114d1:	mov    rdi,rcx
   1400114d4:	cmp    rdx,rax
   1400114d7:	jbe    0x1400115b8
   1400114dd:	add    rax,rax
   1400114e0:	mov    QWORD PTR [rsp+0x30],rbx
   1400114e5:	cmp    rdx,rax
   1400114e8:	cmovbe rsi,rax
   1400114ec:	cmp    QWORD PTR [rcx],0x0
   1400114f0:	mov    eax,0x2
   1400114f5:	lea    rcx,[rax-0x3]
   1400114f9:	je     0x14001156b
   1400114fb:	mul    rsi
   1400114fe:	cmovo  rax,rcx
   140011502:	mov    rcx,rax
   140011505:	call   0x14001307c
   14001150a:	lea    r8,[rsi+rsi*1]
   14001150e:	xor    edx,edx
   140011510:	mov    rcx,rax
   140011513:	mov    rbx,rax
   140011516:	call   0x140014d80
   14001151b:	mov    r8,QWORD PTR [rdi+0x8]
   14001151f:	mov    rdx,QWORD PTR [rdi]
   140011522:	add    r8,r8
   140011525:	mov    rcx,rbx
   140011528:	call   0x1400130d0
   14001152d:	mov    rcx,QWORD PTR [rdi]
   140011530:	mov    QWORD PTR [rdi+0x8],rsi
   140011534:	mov    QWORD PTR [rdi],0x0
   14001153b:	test   rcx,rcx
   14001153e:	je     0x140011545
   140011540:	call   0x140013924
   140011545:	mov    rcx,QWORD PTR [rdi]
   140011548:	cmp    rbx,rcx
   14001154b:	je     0x140011552
   14001154d:	call   0x1400137cc
   140011552:	xor    ecx,ecx
   140011554:	mov    QWORD PTR [rdi],rbx
   140011557:	mov    rbx,QWORD PTR [rsp+0x30]
   14001155c:	mov    rsi,QWORD PTR [rsp+0x38]
   140011561:	add    rsp,0x20
   140011565:	pop    rdi
   140011566:	jmp    0x1400137cc
   14001156b:	mul    rsi
   14001156e:	cmovo  rax,rcx
   140011572:	mov    rcx,rax
   140011575:	call   0x14001307c
   14001157a:	mov    rcx,QWORD PTR [rdi]
   14001157d:	mov    QWORD PTR [rdi+0x8],rsi
   140011581:	mov    rbx,rax
   140011584:	mov    QWORD PTR [rdi],0x0
   14001158b:	test   rcx,rcx
   14001158e:	je     0x140011595
   140011590:	call   0x140013924
   140011595:	mov    rcx,QWORD PTR [rdi]
   140011598:	cmp    rbx,rcx
   14001159b:	je     0x1400115a2
   14001159d:	call   0x1400137cc
   1400115a2:	lea    r8,[rsi+rsi*1]
   1400115a6:	xor    edx,edx
   1400115a8:	mov    rcx,rbx
   1400115ab:	mov    QWORD PTR [rdi],rbx
   1400115ae:	call   0x140014d80
   1400115b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400115b8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400115bd:	add    rsp,0x20
   1400115c1:	pop    rdi
   1400115c2:	ret    
   1400115c3:	int3   
   1400115c4:	int3   
   1400115c5:	int3   
   1400115c6:	int3   
   1400115c7:	int3   
   1400115c8:	int3   
   1400115c9:	int3   
   1400115ca:	int3   
   1400115cb:	int3   
   1400115cc:	int3   
   1400115cd:	int3   
   1400115ce:	int3   
   1400115cf:	int3   
   1400115d0:	rex push rbx
   1400115d2:	sub    rsp,0x20
   1400115d6:	cmp    QWORD PTR [rcx+0x10],0x0
   1400115db:	mov    rbx,rcx
   1400115de:	jne    0x140011604
   1400115e0:	add    rcx,0x20
   1400115e4:	cmp    QWORD PTR [rcx],0x0
   1400115e8:	jne    0x1400115f3
   1400115ea:	mov    eax,DWORD PTR [rbx]
   1400115ec:	dec    eax
   1400115ee:	cmp    eax,0x1
   1400115f1:	jbe    0x140011604
   1400115f3:	call   0x1400114c0
   1400115f8:	mov    DWORD PTR [rbx],0x3
   1400115fe:	add    rsp,0x20
   140011602:	pop    rbx
   140011603:	ret    
   140011604:	lea    rcx,[rbx+0x10]
   140011608:	add    rsp,0x20
   14001160c:	pop    rbx
   14001160d:	jmp    0x1400113d0
   140011612:	int3   
   140011613:	int3   
   140011614:	int3   
   140011615:	int3   
   140011616:	int3   
   140011617:	int3   
   140011618:	int3   
   140011619:	int3   
   14001161a:	int3   
   14001161b:	int3   
   14001161c:	int3   
   14001161d:	int3   
   14001161e:	int3   
   14001161f:	int3   
   140011620:	mov    QWORD PTR [rsp+0x8],rbx
   140011625:	push   rdi
   140011626:	sub    rsp,0x20
   14001162a:	mov    rbx,rcx
   14001162d:	mov    QWORD PTR [rcx+0x8],r8
   140011631:	mov    rcx,QWORD PTR [rcx]
   140011634:	mov    rdi,rdx
   140011637:	mov    QWORD PTR [rbx],0x0
   14001163e:	test   rcx,rcx
   140011641:	je     0x140011648
   140011643:	call   0x140013924
   140011648:	mov    rcx,QWORD PTR [rbx]
   14001164b:	cmp    rdi,rcx
   14001164e:	je     0x140011655
   140011650:	call   0x1400137cc
   140011655:	mov    QWORD PTR [rbx],rdi
   140011658:	mov    rbx,QWORD PTR [rsp+0x30]
   14001165d:	add    rsp,0x20
   140011661:	pop    rdi
   140011662:	ret    
   140011663:	int3   
   140011664:	int3   
   140011665:	int3   
   140011666:	int3   
   140011667:	int3   
   140011668:	int3   
   140011669:	int3   
   14001166a:	int3   
   14001166b:	int3   
   14001166c:	int3   
   14001166d:	int3   
   14001166e:	int3   
   14001166f:	int3   
   140011670:	mov    r8,rcx
   140011673:	test   rcx,rcx
   140011676:	je     0x1400116e9
   140011678:	movzx  edx,BYTE PTR [rcx]
   14001167b:	xor    r9d,r9d
   14001167e:	xor    eax,eax
   140011680:	mov    r10d,0x1
   140011686:	test   dl,dl
   140011688:	je     0x1400116e9
   14001168a:	nop    WORD PTR [rax+rax*1+0x0]
   140011690:	test   rax,rax
   140011693:	jne    0x1400116b8
   140011695:	test   dl,dl
   140011697:	jns    0x1400116c3
   140011699:	mov    cl,0x40
   14001169b:	test   cl,dl
   14001169d:	je     0x1400116d1
   14001169f:	nop
   1400116a0:	shr    cl,1
   1400116a2:	inc    rax
   1400116a5:	test   dl,cl
   1400116a7:	jne    0x1400116a0
   1400116a9:	lea    rcx,[rax-0x1]
   1400116ad:	cmp    rcx,0x4
   1400116b1:	ja     0x1400116d1
   1400116b3:	mov    r9d,r10d
   1400116b6:	jmp    0x1400116c3
   1400116b8:	and    dl,0xc0
   1400116bb:	cmp    dl,0x80
   1400116be:	jne    0x1400116d1
   1400116c0:	dec    rax
   1400116c3:	movzx  edx,BYTE PTR [r8+0x1]
   1400116c8:	inc    r8
   1400116cb:	test   dl,dl
   1400116cd:	je     0x1400116d4
   1400116cf:	jmp    0x140011690
   1400116d1:	xor    r10d,r10d
   1400116d4:	test   rax,rax
   1400116d7:	jne    0x1400116e9
   1400116d9:	test   r10d,r10d
   1400116dc:	je     0x1400116e9
   1400116de:	test   r9d,r9d
   1400116e1:	je     0x1400116e9
   1400116e3:	mov    eax,0x1
   1400116e8:	ret    
   1400116e9:	xor    eax,eax
   1400116eb:	ret    
   1400116ec:	int3   
   1400116ed:	int3   
   1400116ee:	int3   
   1400116ef:	int3   
   1400116f0:	xor    r10d,r10d
   1400116f3:	mov    r8,rcx
   1400116f6:	test   rcx,rcx
   1400116f9:	je     0x14001175a
   1400116fb:	movzx  edx,BYTE PTR [rcx]
   1400116fe:	lea    r9d,[r10+0x1]
   140011702:	mov    eax,r10d
   140011705:	test   dl,dl
   140011707:	je     0x14001173d
   140011709:	nop    DWORD PTR [rax+0x0]
   140011710:	test   rax,rax
   140011713:	jne    0x140011741
   140011715:	test   dl,dl
   140011717:	jns    0x14001174c
   140011719:	mov    cl,0x40
   14001171b:	test   cl,dl
   14001171d:	je     0x140011733
   14001171f:	nop
   140011720:	shr    cl,1
   140011722:	inc    rax
   140011725:	test   dl,cl
   140011727:	jne    0x140011720
   140011729:	lea    rcx,[rax-0x1]
   14001172d:	cmp    rcx,0x4
   140011731:	jbe    0x14001174c
   140011733:	mov    r9d,r10d
   140011736:	test   rax,rax
   140011739:	cmovne r9d,r10d
   14001173d:	mov    eax,r9d
   140011740:	ret    
   140011741:	and    dl,0xc0
   140011744:	cmp    dl,0x80
   140011747:	jne    0x140011733
   140011749:	dec    rax
   14001174c:	movzx  edx,BYTE PTR [r8+0x1]
   140011751:	inc    r8
   140011754:	test   dl,dl
   140011756:	je     0x140011736
   140011758:	jmp    0x140011710
   14001175a:	mov    eax,r10d
   14001175d:	ret    
   14001175e:	int3   
   14001175f:	int3   
   140011760:	mov    rax,rsp
   140011763:	mov    QWORD PTR [rax+0x10],rdx
   140011767:	push   rdi
   140011768:	push   r12
   14001176a:	push   r13
   14001176c:	push   r14
   14001176e:	push   r15
   140011770:	sub    rsp,0x30
   140011774:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   14001177c:	mov    QWORD PTR [rax+0x8],rbx
   140011780:	mov    QWORD PTR [rax+0x18],rbp
   140011784:	mov    QWORD PTR [rax+0x20],rsi
   140011788:	mov    r14,r9
   14001178b:	mov    r12,r8
   14001178e:	mov    rbp,rdx
   140011791:	mov    rbx,rcx
   140011794:	xor    r13d,r13d
   140011797:	mov    DWORD PTR [rax-0x38],r13d
   14001179b:	mov    DWORD PTR [rdx],r13d
   14001179e:	mov    QWORD PTR [rdx+0x8],r13
   1400117a2:	mov    QWORD PTR [rdx+0x10],r13
   1400117a6:	mov    QWORD PTR [rdx+0x18],r13
   1400117aa:	mov    QWORD PTR [rdx+0x20],r13
   1400117ae:	mov    QWORD PTR [rdx+0x28],r13
   1400117b2:	mov    DWORD PTR [rax-0x38],0x1
   1400117b9:	mov    eax,DWORD PTR [rcx]
   1400117bb:	mov    DWORD PTR [rdx],eax
   1400117bd:	cmp    r9,0xffffffffffffffff
   1400117c1:	je     0x1400117cd
   1400117c3:	lea    rax,[r8+r9*1]
   1400117c7:	cmp    rax,QWORD PTR [rcx+0x8]
   1400117cb:	jbe    0x1400117dd
   1400117cd:	mov    r14,QWORD PTR [rcx+0x8]
   1400117d1:	cmp    r8,r14
   1400117d4:	ja     0x1400118cd
   1400117da:	sub    r14,r8
   1400117dd:	test   r14,r14
   1400117e0:	je     0x1400118cd
   1400117e6:	lea    rdx,[r14+0x1]
   1400117ea:	cmp    DWORD PTR [rcx],0x3
   1400117ed:	jne    0x14001185f
   1400117ef:	lea    rcx,[rbp+0x20]
   1400117f3:	call   0x1400114c0
   1400117f8:	mov    rbx,QWORD PTR [rbx+0x20]
   1400117fc:	mov    rdi,QWORD PTR [rbp+0x20]
   140011800:	lea    rcx,[rip+0xfffffffffffef879]        # 0x140001080
   140011807:	call   0x140013fb0
   14001180c:	lea    r15,[r14+r14*1]
   140011810:	lea    r8,[rbx+r12*2]
   140011814:	lea    rdx,[r15+0x2]
   140011818:	mov    r9,r15
   14001181b:	mov    rcx,rdi
   14001181e:	call   0x1400137d4
   140011823:	test   eax,eax
   140011825:	je     0x140011854
   140011827:	mov    QWORD PTR [rbp+0x28],r13
   14001182b:	mov    rcx,QWORD PTR [rbp+0x20]
   14001182f:	mov    QWORD PTR [rbp+0x20],r13
   140011833:	test   rcx,rcx
   140011836:	je     0x14001183d
   140011838:	call   0x140013924
   14001183d:	mov    rcx,QWORD PTR [rbp+0x20]
   140011841:	test   rcx,rcx
   140011844:	je     0x14001184b
   140011846:	call   0x1400137cc
   14001184b:	mov    QWORD PTR [rbp+0x20],r13
   14001184f:	mov    r14,r13
   140011852:	jmp    0x1400118c9
   140011854:	mov    rax,QWORD PTR [rbp+0x20]
   140011858:	mov    WORD PTR [r15+rax*1],r13w
   14001185d:	jmp    0x1400118c9
   14001185f:	lea    rcx,[rbp+0x10]
   140011863:	call   0x1400113d0
   140011868:	mov    rbx,QWORD PTR [rbx+0x10]
   14001186c:	mov    rdi,QWORD PTR [rbp+0x10]
   140011870:	lea    rcx,[rip+0xfffffffffffef809]        # 0x140001080
   140011877:	call   0x140013fb0
   14001187c:	lea    r8,[rbx+r12*1]
   140011880:	mov    r9,r14
   140011883:	lea    rdx,[r14+0x1]
   140011887:	mov    rcx,rdi
   14001188a:	call   0x1400137d4
   14001188f:	test   eax,eax
   140011891:	je     0x1400118c0
   140011893:	mov    QWORD PTR [rbp+0x18],r13
   140011897:	mov    rcx,QWORD PTR [rbp+0x10]
   14001189b:	mov    QWORD PTR [rbp+0x10],r13
   14001189f:	test   rcx,rcx
   1400118a2:	je     0x1400118a9
   1400118a4:	call   0x140013924
   1400118a9:	mov    rcx,QWORD PTR [rbp+0x10]
   1400118ad:	test   rcx,rcx
   1400118b0:	je     0x1400118b7
   1400118b2:	call   0x1400137cc
   1400118b7:	mov    QWORD PTR [rbp+0x10],r13
   1400118bb:	mov    r14,r13
   1400118be:	jmp    0x1400118c9
   1400118c0:	mov    rax,QWORD PTR [rbp+0x10]
   1400118c4:	mov    BYTE PTR [r14+rax*1],0x0
   1400118c9:	mov    QWORD PTR [rbp+0x8],r14
   1400118cd:	mov    rax,rbp
   1400118d0:	mov    rbx,QWORD PTR [rsp+0x60]
   1400118d5:	mov    rbp,QWORD PTR [rsp+0x70]
   1400118da:	mov    rsi,QWORD PTR [rsp+0x78]
   1400118df:	add    rsp,0x30
   1400118e3:	pop    r15
   1400118e5:	pop    r14
   1400118e7:	pop    r13
   1400118e9:	pop    r12
   1400118eb:	pop    rdi
   1400118ec:	ret    
   1400118ed:	int3   
   1400118ee:	int3   
   1400118ef:	int3   
   1400118f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400118f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400118fa:	push   rsi
   1400118fb:	sub    rsp,0x30
   1400118ff:	mov    r8,QWORD PTR [rcx+0x10]
   140011903:	xor    ebp,ebp
   140011905:	mov    rbx,rcx
   140011908:	or     r9d,0xffffffff
   14001190c:	xor    edx,edx
   14001190e:	xor    ecx,ecx
   140011910:	mov    DWORD PTR [rsp+0x28],ebp
   140011914:	mov    QWORD PTR [rsp+0x20],rbp
   140011919:	call   QWORD PTR [rip+0x158b9]        # 0x1400271d8
   14001191f:	mov    esi,eax
   140011921:	test   eax,eax
   140011923:	je     0x1400119c0
   140011929:	lea    rcx,[rbx+0x20]
   14001192d:	mov    edx,esi
   14001192f:	mov    QWORD PTR [rsp+0x40],rdi
   140011934:	call   0x1400114c0
   140011939:	mov    rcx,QWORD PTR [rbx+0x20]
   14001193d:	mov    r8,QWORD PTR [rbx+0x10]
   140011941:	mov    DWORD PTR [rsp+0x28],esi
   140011945:	mov    QWORD PTR [rsp+0x20],rcx
   14001194a:	or     r9d,0xffffffff
   14001194e:	xor    ecx,ecx
   140011950:	xor    edx,edx
   140011952:	call   QWORD PTR [rip+0x15880]        # 0x1400271d8
   140011958:	test   eax,eax
   14001195a:	je     0x14001198d
   14001195c:	mov    rcx,QWORD PTR [rbx+0x10]
   140011960:	mov    QWORD PTR [rbx+0x18],rbp
   140011964:	mov    QWORD PTR [rbx+0x10],rbp
   140011968:	test   rcx,rcx
   14001196b:	je     0x140011972
   14001196d:	call   0x140013924
   140011972:	mov    rcx,QWORD PTR [rbx+0x10]
   140011976:	test   rcx,rcx
   140011979:	je     0x140011980
   14001197b:	call   0x1400137cc
   140011980:	lea    ecx,[rsi-0x1]
   140011983:	mov    QWORD PTR [rbx+0x10],rbp
   140011987:	mov    QWORD PTR [rbx+0x8],rcx
   14001198b:	jmp    0x1400119b5
   14001198d:	mov    rcx,QWORD PTR [rbx+0x20]
   140011991:	mov    QWORD PTR [rbx+0x28],rbp
   140011995:	mov    QWORD PTR [rbx+0x20],rbp
   140011999:	test   rcx,rcx
   14001199c:	je     0x1400119a3
   14001199e:	call   0x140013924
   1400119a3:	mov    rcx,QWORD PTR [rbx+0x20]
   1400119a7:	test   rcx,rcx
   1400119aa:	je     0x1400119b1
   1400119ac:	call   0x1400137cc
   1400119b1:	mov    QWORD PTR [rbx+0x20],rbp
   1400119b5:	mov    rdi,QWORD PTR [rsp+0x40]
   1400119ba:	mov    DWORD PTR [rbx],0x3
   1400119c0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400119c5:	mov    rbp,QWORD PTR [rsp+0x50]
   1400119ca:	add    rsp,0x30
   1400119ce:	pop    rsi
   1400119cf:	ret    
   1400119d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400119d5:	push   rsi
   1400119d6:	push   rdi
   1400119d7:	push   r15
   1400119d9:	sub    rsp,0x40
   1400119dd:	mov    r8,QWORD PTR [rcx+0x10]
   1400119e1:	xor    r15d,r15d
   1400119e4:	mov    rbx,rcx
   1400119e7:	or     rdi,0xffffffffffffffff
   1400119eb:	xor    edx,edx
   1400119ed:	xor    ecx,ecx
   1400119ef:	mov    r9d,edi
   1400119f2:	mov    DWORD PTR [rsp+0x28],r15d
   1400119f7:	mov    QWORD PTR [rsp+0x20],r15
   1400119fc:	call   QWORD PTR [rip+0x157d6]        # 0x1400271d8
   140011a02:	mov    esi,eax
   140011a04:	test   eax,eax
   140011a06:	je     0x140011b14
   140011a0c:	mov    eax,0x2
   140011a11:	mov    QWORD PTR [rsp+0x60],rbp
   140011a16:	mul    rsi
   140011a19:	cmovo  rax,rdi
   140011a1d:	mov    rcx,rax
   140011a20:	call   0x14001307c
   140011a25:	mov    r8,QWORD PTR [rbx+0x10]
   140011a29:	mov    r9d,edi
   140011a2c:	xor    edx,edx
   140011a2e:	xor    ecx,ecx
   140011a30:	mov    DWORD PTR [rsp+0x28],esi
   140011a34:	mov    rbp,rax
   140011a37:	mov    QWORD PTR [rsp+0x20],rax
   140011a3c:	call   QWORD PTR [rip+0x15796]        # 0x1400271d8
   140011a42:	test   eax,eax
   140011a44:	je     0x140011b07
   140011a4a:	mov    QWORD PTR [rsp+0x38],r15
   140011a4f:	mov    QWORD PTR [rsp+0x30],r15
   140011a54:	mov    r9d,esi
   140011a57:	mov    r8,rbp
   140011a5a:	xor    edx,edx
   140011a5c:	mov    ecx,0xfde9
   140011a61:	mov    DWORD PTR [rsp+0x28],r15d
   140011a66:	mov    QWORD PTR [rsp+0x20],r15
   140011a6b:	call   QWORD PTR [rip+0x156bf]        # 0x140027130
   140011a71:	mov    edi,eax
   140011a73:	test   eax,eax
   140011a75:	je     0x140011b07
   140011a7b:	mov    ecx,edi
   140011a7d:	mov    QWORD PTR [rsp+0x68],r14
   140011a82:	call   0x14001307c
   140011a87:	mov    rcx,QWORD PTR [rbx+0x10]
   140011a8b:	lea    edx,[rdi+0x1]
   140011a8e:	mov    r14,rax
   140011a91:	mov    QWORD PTR [rbx+0x18],rdx
   140011a95:	mov    QWORD PTR [rbx+0x10],r15
   140011a99:	test   rcx,rcx
   140011a9c:	je     0x140011aa3
   140011a9e:	call   0x140013924
   140011aa3:	mov    rcx,QWORD PTR [rbx+0x10]
   140011aa7:	cmp    r14,rcx
   140011aaa:	je     0x140011ab1
   140011aac:	call   0x1400137cc
   140011ab1:	mov    QWORD PTR [rsp+0x38],r15
   140011ab6:	mov    QWORD PTR [rsp+0x30],r15
   140011abb:	mov    r9d,esi
   140011abe:	mov    r8,rbp
   140011ac1:	xor    edx,edx
   140011ac3:	mov    ecx,0xfde9
   140011ac8:	mov    DWORD PTR [rsp+0x28],edi
   140011acc:	mov    QWORD PTR [rbx+0x10],r14
   140011ad0:	mov    QWORD PTR [rsp+0x20],r14
   140011ad5:	call   QWORD PTR [rip+0x15655]        # 0x140027130
   140011adb:	mov    r14,QWORD PTR [rsp+0x68]
   140011ae0:	cmp    eax,edi
   140011ae2:	jne    0x140011b07
   140011ae4:	mov    rax,QWORD PTR [rbx+0x10]
   140011ae8:	lea    ecx,[rdi-0x1]
   140011aeb:	xor    r8d,r8d
   140011aee:	mov    QWORD PTR [rbx+0x8],rcx
   140011af2:	mov    BYTE PTR [rcx+rax*1],r15b
   140011af6:	lea    rcx,[rbx+0x20]
   140011afa:	xor    edx,edx
   140011afc:	mov    DWORD PTR [rbx],0x2
   140011b02:	call   0x140011620
   140011b07:	mov    rcx,rbp
   140011b0a:	call   0x140013924
   140011b0f:	mov    rbp,QWORD PTR [rsp+0x60]
   140011b14:	mov    rbx,QWORD PTR [rsp+0x70]
   140011b19:	add    rsp,0x40
   140011b1d:	pop    r15
   140011b1f:	pop    rdi
   140011b20:	pop    rsi
   140011b21:	ret    
   140011b22:	int3   
   140011b23:	int3   
   140011b24:	int3   
   140011b25:	int3   
   140011b26:	int3   
   140011b27:	int3   
   140011b28:	int3   
   140011b29:	int3   
   140011b2a:	int3   
   140011b2b:	int3   
   140011b2c:	int3   
   140011b2d:	int3   
   140011b2e:	int3   
   140011b2f:	int3   
   140011b30:	mov    QWORD PTR [rsp+0x18],rsi
   140011b35:	mov    QWORD PTR [rsp+0x20],rdi
   140011b3a:	push   r14
   140011b3c:	sub    rsp,0x40
   140011b40:	mov    r8,QWORD PTR [rcx+0x20]
   140011b44:	xor    r14d,r14d
   140011b47:	mov    rdi,rcx
   140011b4a:	mov    QWORD PTR [rsp+0x38],r14
   140011b4f:	mov    QWORD PTR [rsp+0x30],r14
   140011b54:	or     r9d,0xffffffff
   140011b58:	xor    edx,edx
   140011b5a:	xor    ecx,ecx
   140011b5c:	mov    DWORD PTR [rsp+0x28],r14d
   140011b61:	mov    QWORD PTR [rsp+0x20],r14
   140011b66:	call   QWORD PTR [rip+0x155c4]        # 0x140027130
   140011b6c:	mov    esi,eax
   140011b6e:	test   eax,eax
   140011b70:	je     0x140011c44
   140011b76:	mov    ecx,esi
   140011b78:	mov    QWORD PTR [rsp+0x50],rbx
   140011b7d:	mov    QWORD PTR [rsp+0x58],rbp
   140011b82:	call   0x14001307c
   140011b87:	mov    rcx,QWORD PTR [rdi+0x10]
   140011b8b:	mov    rbx,QWORD PTR [rsp+0x50]
   140011b90:	mov    rbp,rax
   140011b93:	mov    QWORD PTR [rdi+0x18],rsi
   140011b97:	mov    QWORD PTR [rdi+0x10],r14
   140011b9b:	test   rcx,rcx
   140011b9e:	je     0x140011ba5
   140011ba0:	call   0x140013924
   140011ba5:	mov    rcx,QWORD PTR [rdi+0x10]
   140011ba9:	cmp    rbp,rcx
   140011bac:	je     0x140011bb3
   140011bae:	call   0x1400137cc
   140011bb3:	mov    QWORD PTR [rsp+0x38],r14
   140011bb8:	mov    QWORD PTR [rdi+0x10],rbp
   140011bbc:	mov    r8,QWORD PTR [rdi+0x20]
   140011bc0:	mov    QWORD PTR [rsp+0x30],r14
   140011bc5:	or     r9d,0xffffffff
   140011bc9:	xor    edx,edx
   140011bcb:	xor    ecx,ecx
   140011bcd:	mov    DWORD PTR [rsp+0x28],esi
   140011bd1:	mov    QWORD PTR [rsp+0x20],rbp
   140011bd6:	call   QWORD PTR [rip+0x15554]        # 0x140027130
   140011bdc:	mov    rbp,QWORD PTR [rsp+0x58]
   140011be1:	cmp    eax,esi
   140011be3:	jne    0x140011c16
   140011be5:	lea    ecx,[rsi-0x1]
   140011be8:	mov    QWORD PTR [rdi+0x8],rcx
   140011bec:	mov    rcx,QWORD PTR [rdi+0x20]
   140011bf0:	mov    QWORD PTR [rdi+0x28],r14
   140011bf4:	mov    QWORD PTR [rdi+0x20],r14
   140011bf8:	test   rcx,rcx
   140011bfb:	je     0x140011c02
   140011bfd:	call   0x140013924
   140011c02:	mov    rcx,QWORD PTR [rdi+0x20]
   140011c06:	test   rcx,rcx
   140011c09:	je     0x140011c10
   140011c0b:	call   0x1400137cc
   140011c10:	mov    QWORD PTR [rdi+0x20],r14
   140011c14:	jmp    0x140011c3e
   140011c16:	mov    rcx,QWORD PTR [rdi+0x10]
   140011c1a:	mov    QWORD PTR [rdi+0x18],r14
   140011c1e:	mov    QWORD PTR [rdi+0x10],r14
   140011c22:	test   rcx,rcx
   140011c25:	je     0x140011c2c
   140011c27:	call   0x140013924
   140011c2c:	mov    rcx,QWORD PTR [rdi+0x10]
   140011c30:	test   rcx,rcx
   140011c33:	je     0x140011c3a
   140011c35:	call   0x1400137cc
   140011c3a:	mov    QWORD PTR [rdi+0x10],r14
   140011c3e:	mov    DWORD PTR [rdi],0x1
   140011c44:	mov    rsi,QWORD PTR [rsp+0x60]
   140011c49:	mov    rdi,QWORD PTR [rsp+0x68]
   140011c4e:	add    rsp,0x40
   140011c52:	pop    r14
   140011c54:	ret    
   140011c55:	int3   
   140011c56:	int3   
   140011c57:	int3   
   140011c58:	int3   
   140011c59:	int3   
   140011c5a:	int3   
   140011c5b:	int3   
   140011c5c:	int3   
   140011c5d:	int3   
   140011c5e:	int3   
   140011c5f:	int3   
   140011c60:	mov    QWORD PTR [rsp+0x10],rbx
   140011c65:	mov    QWORD PTR [rsp+0x18],rbp
   140011c6a:	push   rsi
   140011c6b:	sub    rsp,0x40
   140011c6f:	mov    r8,QWORD PTR [rcx+0x20]
   140011c73:	xor    ebp,ebp
   140011c75:	mov    rbx,rcx
   140011c78:	mov    QWORD PTR [rsp+0x38],rbp
   140011c7d:	mov    QWORD PTR [rsp+0x30],rbp
   140011c82:	or     r9d,0xffffffff
   140011c86:	xor    edx,edx
   140011c88:	mov    ecx,0xfde9
   140011c8d:	mov    DWORD PTR [rsp+0x28],ebp
   140011c91:	mov    QWORD PTR [rsp+0x20],rbp
   140011c96:	call   QWORD PTR [rip+0x15494]        # 0x140027130
   140011c9c:	mov    esi,eax
   140011c9e:	test   eax,eax
   140011ca0:	je     0x140011d4a
   140011ca6:	lea    rcx,[rbx+0x10]
   140011caa:	mov    edx,esi
   140011cac:	mov    QWORD PTR [rsp+0x50],rdi
   140011cb1:	call   0x1400113d0
   140011cb6:	mov    rdx,QWORD PTR [rbx+0x10]
   140011cba:	mov    r8,QWORD PTR [rbx+0x20]
   140011cbe:	mov    QWORD PTR [rsp+0x38],rbp
   140011cc3:	mov    QWORD PTR [rsp+0x30],rbp
   140011cc8:	mov    DWORD PTR [rsp+0x28],esi
   140011ccc:	mov    QWORD PTR [rsp+0x20],rdx
   140011cd1:	or     r9d,0xffffffff
   140011cd5:	mov    ecx,0xfde9
   140011cda:	xor    edx,edx
   140011cdc:	call   QWORD PTR [rip+0x1544e]        # 0x140027130
   140011ce2:	cmp    eax,esi
   140011ce4:	jne    0x140011d17
   140011ce6:	lea    ecx,[rsi-0x1]
   140011ce9:	mov    QWORD PTR [rbx+0x8],rcx
   140011ced:	mov    rcx,QWORD PTR [rbx+0x20]
   140011cf1:	mov    QWORD PTR [rbx+0x28],rbp
   140011cf5:	mov    QWORD PTR [rbx+0x20],rbp
   140011cf9:	test   rcx,rcx
   140011cfc:	je     0x140011d03
   140011cfe:	call   0x140013924
   140011d03:	mov    rcx,QWORD PTR [rbx+0x20]
   140011d07:	test   rcx,rcx
   140011d0a:	je     0x140011d11
   140011d0c:	call   0x1400137cc
   140011d11:	mov    QWORD PTR [rbx+0x20],rbp
   140011d15:	jmp    0x140011d3f
   140011d17:	mov    rcx,QWORD PTR [rbx+0x10]
   140011d1b:	mov    QWORD PTR [rbx+0x18],rbp
   140011d1f:	mov    QWORD PTR [rbx+0x10],rbp
   140011d23:	test   rcx,rcx
   140011d26:	je     0x140011d2d
   140011d28:	call   0x140013924
   140011d2d:	mov    rcx,QWORD PTR [rbx+0x10]
   140011d31:	test   rcx,rcx
   140011d34:	je     0x140011d3b
   140011d36:	call   0x1400137cc
   140011d3b:	mov    QWORD PTR [rbx+0x10],rbp
   140011d3f:	mov    rdi,QWORD PTR [rsp+0x50]
   140011d44:	mov    DWORD PTR [rbx],0x2
   140011d4a:	mov    rbx,QWORD PTR [rsp+0x58]
   140011d4f:	mov    rbp,QWORD PTR [rsp+0x60]
   140011d54:	add    rsp,0x40
   140011d58:	pop    rsi
   140011d59:	ret    
   140011d5a:	int3   
   140011d5b:	int3   
   140011d5c:	int3   
   140011d5d:	int3   
   140011d5e:	int3   
   140011d5f:	int3   
   140011d60:	mov    QWORD PTR [rsp+0x20],rbx
   140011d65:	push   rbp
   140011d66:	push   rdi
   140011d67:	push   r12
   140011d69:	sub    rsp,0x40
   140011d6d:	mov    r8,QWORD PTR [rcx+0x10]
   140011d71:	xor    r12d,r12d
   140011d74:	mov    rdi,rcx
   140011d77:	or     rbx,0xffffffffffffffff
   140011d7b:	xor    edx,edx
   140011d7d:	mov    ecx,0xfde9
   140011d82:	mov    r9d,ebx
   140011d85:	mov    DWORD PTR [rsp+0x28],r12d
   140011d8a:	mov    QWORD PTR [rsp+0x20],r12
   140011d8f:	call   QWORD PTR [rip+0x15443]        # 0x1400271d8
   140011d95:	mov    ebp,eax
   140011d97:	test   eax,eax
   140011d99:	je     0x140011eab
   140011d9f:	mov    eax,0x2
   140011da4:	mov    QWORD PTR [rsp+0x68],r14
   140011da9:	mul    rbp
   140011dac:	cmovo  rax,rbx
   140011db0:	mov    rcx,rax
   140011db3:	call   0x14001307c
   140011db8:	mov    r8,QWORD PTR [rdi+0x10]
   140011dbc:	mov    r9d,ebx
   140011dbf:	xor    edx,edx
   140011dc1:	mov    ecx,0xfde9
   140011dc6:	mov    DWORD PTR [rsp+0x28],ebp
   140011dca:	mov    r14,rax
   140011dcd:	mov    QWORD PTR [rsp+0x20],rax
   140011dd2:	call   QWORD PTR [rip+0x15400]        # 0x1400271d8
   140011dd8:	test   eax,eax
   140011dda:	je     0x140011e9e
   140011de0:	mov    QWORD PTR [rsp+0x38],r12
   140011de5:	mov    QWORD PTR [rsp+0x30],r12
   140011dea:	mov    r9d,ebp
   140011ded:	mov    r8,r14
   140011df0:	xor    edx,edx
   140011df2:	xor    ecx,ecx
   140011df4:	mov    DWORD PTR [rsp+0x28],r12d
   140011df9:	mov    QWORD PTR [rsp+0x60],rsi
   140011dfe:	mov    QWORD PTR [rsp+0x20],r12
   140011e03:	call   QWORD PTR [rip+0x15327]        # 0x140027130
   140011e09:	mov    esi,eax
   140011e0b:	test   eax,eax
   140011e0d:	je     0x140011e99
   140011e13:	mov    ecx,esi
   140011e15:	mov    QWORD PTR [rsp+0x70],r15
   140011e1a:	call   0x14001307c
   140011e1f:	mov    rcx,QWORD PTR [rdi+0x10]
   140011e23:	mov    QWORD PTR [rdi+0x18],rsi
   140011e27:	mov    r15,rax
   140011e2a:	mov    QWORD PTR [rdi+0x10],r12
   140011e2e:	test   rcx,rcx
   140011e31:	je     0x140011e38
   140011e33:	call   0x140013924
   140011e38:	mov    rcx,QWORD PTR [rdi+0x10]
   140011e3c:	cmp    r15,rcx
   140011e3f:	je     0x140011e46
   140011e41:	call   0x1400137cc
   140011e46:	mov    QWORD PTR [rsp+0x38],r12
   140011e4b:	mov    QWORD PTR [rsp+0x30],r12
   140011e50:	mov    r9d,ebp
   140011e53:	mov    r8,r14
   140011e56:	xor    edx,edx
   140011e58:	xor    ecx,ecx
   140011e5a:	mov    DWORD PTR [rsp+0x28],esi
   140011e5e:	mov    QWORD PTR [rdi+0x10],r15
   140011e62:	mov    QWORD PTR [rsp+0x20],r15
   140011e67:	call   QWORD PTR [rip+0x152c3]        # 0x140027130
   140011e6d:	mov    r15,QWORD PTR [rsp+0x70]
   140011e72:	cmp    eax,esi
   140011e74:	jne    0x140011e99
   140011e76:	mov    rax,QWORD PTR [rdi+0x10]
   140011e7a:	lea    ecx,[rsi-0x1]
   140011e7d:	xor    r8d,r8d
   140011e80:	mov    QWORD PTR [rdi+0x8],rcx
   140011e84:	mov    BYTE PTR [rcx+rax*1],r12b
   140011e88:	lea    rcx,[rdi+0x20]
   140011e8c:	xor    edx,edx
   140011e8e:	call   0x140011620
   140011e93:	mov    DWORD PTR [rdi],0x1
   140011e99:	mov    rsi,QWORD PTR [rsp+0x60]
   140011e9e:	mov    rcx,r14
   140011ea1:	call   0x140013924
   140011ea6:	mov    r14,QWORD PTR [rsp+0x68]
   140011eab:	mov    rbx,QWORD PTR [rsp+0x78]
   140011eb0:	add    rsp,0x40
   140011eb4:	pop    r12
   140011eb6:	pop    rdi
   140011eb7:	pop    rbp
   140011eb8:	ret    
   140011eb9:	int3   
   140011eba:	int3   
   140011ebb:	int3   
   140011ebc:	int3   
   140011ebd:	int3   
   140011ebe:	int3   
   140011ebf:	int3   
   140011ec0:	mov    QWORD PTR [rsp+0x18],rbp
   140011ec5:	mov    QWORD PTR [rsp+0x20],rsi
   140011eca:	push   rdi
   140011ecb:	sub    rsp,0x30
   140011ecf:	mov    r8,QWORD PTR [rcx+0x10]
   140011ed3:	xor    ebp,ebp
   140011ed5:	mov    rdi,rcx
   140011ed8:	or     r9d,0xffffffff
   140011edc:	xor    edx,edx
   140011ede:	mov    ecx,0xfde9
   140011ee3:	mov    DWORD PTR [rsp+0x28],ebp
   140011ee7:	mov    QWORD PTR [rsp+0x20],rbp
   140011eec:	call   QWORD PTR [rip+0x152e6]        # 0x1400271d8
   140011ef2:	mov    esi,eax
   140011ef4:	test   eax,eax
   140011ef6:	je     0x140011f81
   140011efc:	mov    QWORD PTR [rsp+0x40],rbx
   140011f01:	lea    ebx,[rax+0x1]
   140011f04:	lea    rcx,[rdi+0x20]
   140011f08:	mov    edx,ebx
   140011f0a:	mov    QWORD PTR [rsp+0x48],r14
   140011f0f:	call   0x1400114c0
   140011f14:	mov    rdx,QWORD PTR [rdi+0x20]
   140011f18:	mov    r8,QWORD PTR [rdi+0x10]
   140011f1c:	mov    DWORD PTR [rsp+0x28],ebx
   140011f20:	mov    QWORD PTR [rsp+0x20],rdx
   140011f25:	or     r9d,0xffffffff
   140011f29:	xor    edx,edx
   140011f2b:	mov    ecx,0xfde9
   140011f30:	call   QWORD PTR [rip+0x152a2]        # 0x1400271d8
   140011f36:	mov    rbx,QWORD PTR [rsp+0x40]
   140011f3b:	test   eax,eax
   140011f3d:	je     0x140011f7c
   140011f3f:	mov    rax,QWORD PTR [rdi+0x20]
   140011f43:	lea    ecx,[rsi-0x1]
   140011f46:	mov    QWORD PTR [rdi+0x8],rcx
   140011f4a:	mov    WORD PTR [rax+rcx*2],bp
   140011f4e:	mov    rcx,QWORD PTR [rdi+0x10]
   140011f52:	mov    QWORD PTR [rdi+0x18],rbp
   140011f56:	mov    QWORD PTR [rdi+0x10],rbp
   140011f5a:	test   rcx,rcx
   140011f5d:	je     0x140011f64
   140011f5f:	call   0x140013924
   140011f64:	mov    rcx,QWORD PTR [rdi+0x10]
   140011f68:	test   rcx,rcx
   140011f6b:	je     0x140011f72
   140011f6d:	call   0x1400137cc
   140011f72:	mov    QWORD PTR [rdi+0x10],rbp
   140011f76:	mov    DWORD PTR [rdi],0x3
   140011f7c:	mov    r14,QWORD PTR [rsp+0x48]
   140011f81:	mov    rbp,QWORD PTR [rsp+0x50]
   140011f86:	mov    rsi,QWORD PTR [rsp+0x58]
   140011f8b:	add    rsp,0x30
   140011f8f:	pop    rdi
   140011f90:	ret    
   140011f91:	int3   
   140011f92:	int3   
   140011f93:	int3   
   140011f94:	int3   
   140011f95:	int3   
   140011f96:	int3   
   140011f97:	int3   
   140011f98:	int3   
   140011f99:	int3   
   140011f9a:	int3   
   140011f9b:	int3   
   140011f9c:	int3   
   140011f9d:	int3   
   140011f9e:	int3   
   140011f9f:	int3   
   140011fa0:	mov    QWORD PTR [rsp+0x10],rdx
   140011fa5:	mov    QWORD PTR [rsp+0x18],r8
   140011faa:	mov    QWORD PTR [rsp+0x20],r9
   140011faf:	push   rbx
   140011fb0:	push   rdi
   140011fb1:	sub    rsp,0x38
   140011fb5:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011fbe:	mov    rdi,rdx
   140011fc1:	mov    rbx,rcx
   140011fc4:	lea    r9,[rsp+0x60]
   140011fc9:	xor    r8d,r8d
   140011fcc:	call   0x140012160
   140011fd1:	mov    rbx,QWORD PTR [rbx+0x8]
   140011fd5:	mov    rcx,QWORD PTR [rdi+0x20]
   140011fd9:	mov    QWORD PTR [rdi+0x20],0x0
   140011fe1:	test   rcx,rcx
   140011fe4:	je     0x140011feb
   140011fe6:	call   0x140013924
   140011feb:	mov    rcx,QWORD PTR [rdi+0x20]
   140011fef:	call   0x1400137cc
   140011ff4:	mov    rcx,QWORD PTR [rdi+0x10]
   140011ff8:	mov    QWORD PTR [rdi+0x10],0x0
   140012000:	test   rcx,rcx
   140012003:	je     0x14001200a
   140012005:	call   0x140013924
   14001200a:	mov    rcx,QWORD PTR [rdi+0x10]
   14001200e:	call   0x1400137cc
   140012013:	mov    rax,rbx
   140012016:	add    rsp,0x38
   14001201a:	pop    rdi
   14001201b:	pop    rbx
   14001201c:	ret    
   14001201d:	int3   
   14001201e:	int3   
   14001201f:	int3   
   140012020:	mov    QWORD PTR [rsp+0x10],rdx
   140012025:	push   rdi
   140012026:	sub    rsp,0x30
   14001202a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012033:	mov    QWORD PTR [rsp+0x40],rbx
   140012038:	mov    QWORD PTR [rsp+0x50],rbp
   14001203d:	mov    QWORD PTR [rsp+0x58],rsi
   140012042:	mov    rsi,r8
   140012045:	mov    rbp,rdx
   140012048:	mov    rdi,rcx
   14001204b:	mov    rcx,rdx
   14001204e:	call   0x140011320
   140012053:	mov    rbx,rax
   140012056:	mov    rcx,rdi
   140012059:	call   0x140011320
   14001205e:	mov    r8,rsi
   140012061:	mov    rdx,rbx
   140012064:	mov    rcx,rax
   140012067:	call   0x140015238
   14001206c:	mov    ebx,eax
   14001206e:	mov    rcx,QWORD PTR [rbp+0x20]
   140012072:	xor    edi,edi
   140012074:	mov    QWORD PTR [rbp+0x20],rdi
   140012078:	test   rcx,rcx
   14001207b:	je     0x140012082
   14001207d:	call   0x140013924
   140012082:	mov    rcx,QWORD PTR [rbp+0x20]
   140012086:	call   0x1400137cc
   14001208b:	mov    rcx,QWORD PTR [rbp+0x10]
   14001208f:	mov    QWORD PTR [rbp+0x10],rdi
   140012093:	test   rcx,rcx
   140012096:	je     0x14001209d
   140012098:	call   0x140013924
   14001209d:	mov    rcx,QWORD PTR [rbp+0x10]
   1400120a1:	call   0x1400137cc
   1400120a6:	mov    eax,ebx
   1400120a8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400120ad:	mov    rbp,QWORD PTR [rsp+0x50]
   1400120b2:	mov    rsi,QWORD PTR [rsp+0x58]
   1400120b7:	add    rsp,0x30
   1400120bb:	pop    rdi
   1400120bc:	ret    
   1400120bd:	int3   
   1400120be:	int3   
   1400120bf:	int3   
   1400120c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400120c5:	push   rdi
   1400120c6:	sub    rsp,0x30
   1400120ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400120d3:	mov    QWORD PTR [rsp+0x40],rbx
   1400120d8:	mov    QWORD PTR [rsp+0x50],rbp
   1400120dd:	mov    QWORD PTR [rsp+0x58],rsi
   1400120e2:	mov    rsi,r8
   1400120e5:	mov    rbp,rdx
   1400120e8:	mov    rdi,rcx
   1400120eb:	mov    rcx,rdx
   1400120ee:	call   0x140011320
   1400120f3:	mov    rbx,rax
   1400120f6:	mov    rcx,rdi
   1400120f9:	call   0x140011320
   1400120fe:	mov    r8,rsi
   140012101:	mov    rdx,rbx
   140012104:	mov    rcx,rax
   140012107:	call   0x140015238
   14001210c:	mov    ebx,eax
   14001210e:	mov    rcx,QWORD PTR [rbp+0x20]
   140012112:	xor    edi,edi
   140012114:	mov    QWORD PTR [rbp+0x20],rdi
   140012118:	test   rcx,rcx
   14001211b:	je     0x140012122
   14001211d:	call   0x140013924
   140012122:	mov    rcx,QWORD PTR [rbp+0x20]
   140012126:	call   0x1400137cc
   14001212b:	mov    rcx,QWORD PTR [rbp+0x10]
   14001212f:	mov    QWORD PTR [rbp+0x10],rdi
   140012133:	test   rcx,rcx
   140012136:	je     0x14001213d
   140012138:	call   0x140013924
   14001213d:	mov    rcx,QWORD PTR [rbp+0x10]
   140012141:	call   0x1400137cc
   140012146:	mov    eax,ebx
   140012148:	mov    rbx,QWORD PTR [rsp+0x40]
   14001214d:	mov    rbp,QWORD PTR [rsp+0x50]
   140012152:	mov    rsi,QWORD PTR [rsp+0x58]
   140012157:	add    rsp,0x30
   14001215b:	pop    rdi
   14001215c:	ret    
   14001215d:	int3   
   14001215e:	int3   
   14001215f:	int3   
   140012160:	mov    QWORD PTR [rsp+0x8],rbx
   140012165:	mov    QWORD PTR [rsp+0x10],rbp
   14001216a:	mov    QWORD PTR [rsp+0x18],rsi
   14001216f:	push   rdi
   140012170:	push   r14
   140012172:	push   r15
   140012174:	sub    rsp,0x30
   140012178:	test   r8,r8
   14001217b:	mov    rsi,rcx
   14001217e:	mov    rdi,r8
   140012181:	mov    eax,0x20
   140012186:	mov    rbp,r9
   140012189:	mov    r14,rdx
   14001218c:	cmove  rdi,rax
   140012190:	xor    r15d,r15d
   140012193:	mov    QWORD PTR [rcx+0x18],r15
   140012197:	mov    rcx,QWORD PTR [rcx+0x10]
   14001219b:	mov    QWORD PTR [rsi+0x10],r15
   14001219f:	test   rcx,rcx
   1400121a2:	je     0x1400121a9
   1400121a4:	call   0x140013924
   1400121a9:	mov    rcx,QWORD PTR [rsi+0x10]
   1400121ad:	test   rcx,rcx
   1400121b0:	je     0x1400121b7
   1400121b2:	call   0x1400137cc
   1400121b7:	mov    QWORD PTR [rsi+0x10],r15
   1400121bb:	mov    rcx,QWORD PTR [rsi+0x20]
   1400121bf:	mov    QWORD PTR [rsi+0x28],r15
   1400121c3:	mov    QWORD PTR [rsi+0x20],r15
   1400121c7:	test   rcx,rcx
   1400121ca:	je     0x1400121d1
   1400121cc:	call   0x140013924
   1400121d1:	mov    rcx,QWORD PTR [rsi+0x20]
   1400121d5:	test   rcx,rcx
   1400121d8:	je     0x1400121df
   1400121da:	call   0x1400137cc
   1400121df:	lea    rcx,[rsi+0x20]
   1400121e3:	mov    rdx,rdi
   1400121e6:	mov    QWORD PTR [rsi+0x20],r15
   1400121ea:	call   0x1400114c0
   1400121ef:	mov    rcx,r14
   1400121f2:	mov    DWORD PTR [rsi],0x3
   1400121f8:	call   0x140011320
   1400121fd:	mov    rcx,QWORD PTR [rsi+0x20]
   140012201:	or     r8,0xffffffffffffffff
   140012205:	mov    rdx,rdi
   140012208:	mov    r9,rax
   14001220b:	mov    QWORD PTR [rsp+0x20],rbp
   140012210:	call   0x140014fac
   140012215:	cmp    eax,0xffffffff
   140012218:	jne    0x14001227c
   14001221a:	nop    WORD PTR [rax+rax*1+0x0]
   140012220:	mov    rcx,QWORD PTR [rsi+0x20]
   140012224:	add    rdi,rdi
   140012227:	mov    QWORD PTR [rsi+0x28],r15
   14001222b:	mov    QWORD PTR [rsi+0x20],r15
   14001222f:	test   rcx,rcx
   140012232:	je     0x140012239
   140012234:	call   0x140013924
   140012239:	mov    rcx,QWORD PTR [rsi+0x20]
   14001223d:	test   rcx,rcx
   140012240:	je     0x140012247
   140012242:	call   0x1400137cc
   140012247:	lea    rcx,[rsi+0x20]
   14001224b:	mov    rdx,rdi
   14001224e:	mov    QWORD PTR [rsi+0x20],r15
   140012252:	call   0x1400114c0
   140012257:	mov    rcx,r14
   14001225a:	call   0x140011320
   14001225f:	mov    rcx,QWORD PTR [rsi+0x20]
   140012263:	or     r8,0xffffffffffffffff
   140012267:	mov    rdx,rdi
   14001226a:	mov    r9,rax
   14001226d:	mov    QWORD PTR [rsp+0x20],rbp
   140012272:	call   0x140014fac
   140012277:	cmp    eax,0xffffffff
   14001227a:	je     0x140012220
   14001227c:	mov    rbx,QWORD PTR [rsp+0x50]
   140012281:	mov    rbp,QWORD PTR [rsp+0x58]
   140012286:	cdqe   
   140012288:	mov    QWORD PTR [rsi+0x8],rax
   14001228c:	mov    rsi,QWORD PTR [rsp+0x60]
   140012291:	add    rsp,0x30
   140012295:	pop    r15
   140012297:	pop    r14
   140012299:	pop    rdi
   14001229a:	ret    
   14001229b:	int3   
   14001229c:	int3   
   14001229d:	int3   
   14001229e:	int3   
   14001229f:	int3   
   1400122a0:	mov    eax,DWORD PTR [rcx+0x8]
   1400122a3:	ret    
   1400122a4:	int3   
   1400122a5:	int3   
   1400122a6:	int3   
   1400122a7:	int3   
   1400122a8:	int3   
   1400122a9:	int3   
   1400122aa:	int3   
   1400122ab:	int3   
   1400122ac:	int3   
   1400122ad:	int3   
   1400122ae:	int3   
   1400122af:	int3   
   1400122b0:	mov    DWORD PTR [rcx+0x8],0x1
   1400122b7:	ret    
   1400122b8:	int3   
   1400122b9:	int3   
   1400122ba:	int3   
   1400122bb:	int3   
   1400122bc:	int3   
   1400122bd:	int3   
   1400122be:	int3   
   1400122bf:	int3   
   1400122c0:	rex push rbx
   1400122c2:	sub    rsp,0x60
   1400122c6:	mov    rax,QWORD PTR [rcx+0x20]
   1400122ca:	mov    rbx,rcx
   1400122cd:	test   rax,rax
   1400122d0:	je     0x140012310
   1400122d2:	mov    rcx,QWORD PTR [rax]
   1400122d5:	test   rcx,rcx
   1400122d8:	je     0x1400122ff
   1400122da:	or     edx,0xffffffff
   1400122dd:	call   QWORD PTR [rip+0x14ecd]        # 0x1400271b0
   1400122e3:	test   eax,eax
   1400122e5:	jne    0x140012316
   1400122e7:	mov    rcx,QWORD PTR [rbx+0x20]
   1400122eb:	mov    rcx,QWORD PTR [rcx]
   1400122ee:	call   QWORD PTR [rip+0x14dac]        # 0x1400270a0
   1400122f4:	mov    rax,QWORD PTR [rbx+0x20]
   1400122f8:	mov    QWORD PTR [rax],0x0
   1400122ff:	mov    rcx,QWORD PTR [rbx+0x20]
   140012303:	call   0x1400137cc
   140012308:	mov    QWORD PTR [rbx+0x20],0x0
   140012310:	add    rsp,0x60
   140012314:	pop    rbx
   140012315:	ret    
   140012316:	lea    rax,[rip+0x15273]        # 0x140027590
   14001231d:	lea    rdx,[rip+0x15524]        # 0x140027848
   140012324:	lea    rcx,[rsp+0x28]
   140012329:	xor    r9d,r9d
   14001232c:	or     r8,0xffffffffffffffff
   140012330:	mov    QWORD PTR [rsp+0x20],rax
   140012335:	call   0x14000fb80
   14001233a:	lea    rdx,[rip+0x23227]        # 0x140035568
   140012341:	lea    rcx,[rsp+0x20]
   140012346:	call   0x14001436c
   14001234b:	int3   
   14001234c:	int3   
   14001234d:	int3   
   14001234e:	int3   
   14001234f:	int3   
   140012350:	rex push rbx
   140012352:	sub    rsp,0x30
   140012356:	mov    rbx,rcx
   140012359:	mov    ecx,0x8
   14001235e:	call   0x1400138b8
   140012363:	xor    edx,edx
   140012365:	test   rax,rax
   140012368:	je     0x14001236f
   14001236a:	mov    QWORD PTR [rax],rdx
   14001236d:	jmp    0x140012372
   14001236f:	mov    rax,rdx
   140012372:	mov    QWORD PTR [rsp+0x28],rdx
   140012377:	mov    DWORD PTR [rsp+0x20],edx
   14001237b:	lea    r8,[rip+0x1e]        # 0x1400123a0
   140012382:	xor    edx,edx
   140012384:	mov    r9,rbx
   140012387:	xor    ecx,ecx
   140012389:	mov    QWORD PTR [rbx+0x20],rax
   14001238d:	call   QWORD PTR [rip+0x14d25]        # 0x1400270b8
   140012393:	mov    rcx,QWORD PTR [rbx+0x20]
   140012397:	mov    QWORD PTR [rcx],rax
   14001239a:	add    rsp,0x30
   14001239e:	pop    rbx
   14001239f:	ret    
   1400123a0:	sub    rsp,0x28
   1400123a4:	call   0x1400124f0
   1400123a9:	xor    eax,eax
   1400123ab:	add    rsp,0x28
   1400123af:	ret    
   1400123b0:	xor    edx,edx
   1400123b2:	lea    rax,[rip+0x15527]        # 0x1400278e0
   1400123b9:	mov    QWORD PTR [rcx],rax
   1400123bc:	mov    rax,rcx
   1400123bf:	mov    DWORD PTR [rcx+0x8],edx
   1400123c2:	mov    QWORD PTR [rcx+0x10],rdx
   1400123c6:	mov    DWORD PTR [rcx+0x18],edx
   1400123c9:	mov    QWORD PTR [rcx+0x20],rdx
   1400123cd:	ret    
   1400123ce:	int3   
   1400123cf:	int3   
   1400123d0:	lea    rax,[rip+0x154e1]        # 0x1400278b8
   1400123d7:	mov    QWORD PTR [rcx],rax
   1400123da:	ret    
   1400123db:	int3   
   1400123dc:	int3   
   1400123dd:	int3   
   1400123de:	int3   
   1400123df:	int3   
   1400123e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400123e5:	push   rbx
   1400123e6:	sub    rsp,0x30
   1400123ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400123f3:	mov    rbx,rcx
   1400123f6:	lea    rax,[rip+0x154e3]        # 0x1400278e0
   1400123fd:	mov    QWORD PTR [rcx],rax
   140012400:	cmp    DWORD PTR [rcx+0x18],0x0
   140012404:	je     0x14001241a
   140012406:	mov    rcx,QWORD PTR [rcx+0x10]
   14001240a:	test   rcx,rcx
   14001240d:	je     0x14001241a
   14001240f:	mov    rax,QWORD PTR [rcx]
   140012412:	mov    edx,0x1
   140012417:	call   QWORD PTR [rax]
   140012419:	nop
   14001241a:	lea    rax,[rip+0x15497]        # 0x1400278b8
   140012421:	mov    QWORD PTR [rbx],rax
   140012424:	add    rsp,0x30
   140012428:	pop    rbx
   140012429:	ret    
   14001242a:	int3   
   14001242b:	int3   
   14001242c:	int3   
   14001242d:	int3   
   14001242e:	int3   
   14001242f:	int3   
   140012430:	rex push rbx
   140012432:	sub    rsp,0x20
   140012436:	lea    rax,[rip+0x1547b]        # 0x1400278b8
   14001243d:	mov    rbx,rcx
   140012440:	mov    QWORD PTR [rcx],rax
   140012443:	test   dl,0x1
   140012446:	je     0x14001244d
   140012448:	call   0x1400137cc
   14001244d:	mov    rax,rbx
   140012450:	add    rsp,0x20
   140012454:	pop    rbx
   140012455:	ret    
   140012456:	int3   
   140012457:	int3   
   140012458:	int3   
   140012459:	int3   
   14001245a:	int3   
   14001245b:	int3   
   14001245c:	int3   
   14001245d:	int3   
   14001245e:	int3   
   14001245f:	int3   
   140012460:	mov    QWORD PTR [rsp+0x8],rcx
   140012465:	push   rdi
   140012466:	sub    rsp,0x30
   14001246a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140012473:	mov    QWORD PTR [rsp+0x48],rbx
   140012478:	mov    edi,edx
   14001247a:	mov    rbx,rcx
   14001247d:	lea    rax,[rip+0x1545c]        # 0x1400278e0
   140012484:	mov    QWORD PTR [rcx],rax
   140012487:	cmp    DWORD PTR [rcx+0x18],0x0
   14001248b:	je     0x1400124a1
   14001248d:	mov    rcx,QWORD PTR [rcx+0x10]
   140012491:	test   rcx,rcx
   140012494:	je     0x1400124a1
   140012496:	mov    rax,QWORD PTR [rcx]
   140012499:	mov    edx,0x1
   14001249e:	call   QWORD PTR [rax]
   1400124a0:	nop
   1400124a1:	lea    rax,[rip+0x15410]        # 0x1400278b8
   1400124a8:	mov    QWORD PTR [rbx],rax
   1400124ab:	test   dil,0x1
   1400124af:	je     0x1400124b9
   1400124b1:	mov    rcx,rbx
   1400124b4:	call   0x1400137cc
   1400124b9:	mov    rax,rbx
   1400124bc:	mov    rbx,QWORD PTR [rsp+0x48]
   1400124c1:	add    rsp,0x30
   1400124c5:	pop    rdi
   1400124c6:	ret    
   1400124c7:	int3   
   1400124c8:	int3   
   1400124c9:	int3   
   1400124ca:	int3   
   1400124cb:	int3   
   1400124cc:	int3   
   1400124cd:	int3   
   1400124ce:	int3   
   1400124cf:	int3   
   1400124d0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400124d4:	test   rcx,rcx
   1400124d7:	je     0x1400124e0
   1400124d9:	mov    rax,QWORD PTR [rcx]
   1400124dc:	rex.W jmp QWORD PTR [rax+0x8]
   1400124e0:	ret    
   1400124e1:	int3   
   1400124e2:	int3   
   1400124e3:	int3   
   1400124e4:	int3   
   1400124e5:	int3   
   1400124e6:	int3   
   1400124e7:	int3   
   1400124e8:	int3   
   1400124e9:	int3   
   1400124ea:	int3   
   1400124eb:	int3   
   1400124ec:	int3   
   1400124ed:	int3   
   1400124ee:	int3   
   1400124ef:	int3   
   1400124f0:	mov    rax,QWORD PTR [rcx]
   1400124f3:	rex.W jmp QWORD PTR [rax+0x8]
   1400124f7:	int3   
   1400124f8:	int3   
   1400124f9:	int3   
   1400124fa:	int3   
   1400124fb:	int3   
   1400124fc:	int3   
   1400124fd:	int3   
   1400124fe:	int3   
   1400124ff:	int3   
   140012500:	rex push rbx
   140012502:	sub    rsp,0x60
   140012506:	xor    r9d,r9d
   140012509:	mov    rbx,rcx
   14001250c:	xor    edx,edx
   14001250e:	lea    r8d,[r9+0x1]
   140012512:	xor    ecx,ecx
   140012514:	call   QWORD PTR [rip+0x14ce6]        # 0x140027200
   14001251a:	mov    QWORD PTR [rbx],rax
   14001251d:	call   QWORD PTR [rip+0x14cbd]        # 0x1400271e0
   140012523:	mov    DWORD PTR [rbx+0x8],eax
   140012526:	cmp    eax,0xffffffff
   140012529:	je     0x14001253e
   14001252b:	lea    rcx,[rbx+0x10]
   14001252f:	call   QWORD PTR [rip+0x14bab]        # 0x1400270e0
   140012535:	mov    rax,rbx
   140012538:	add    rsp,0x60
   14001253c:	pop    rbx
   14001253d:	ret    
   14001253e:	lea    rax,[rip+0x1504b]        # 0x140027590
   140012545:	lea    rdx,[rip+0x153fc]        # 0x140027948
   14001254c:	lea    rcx,[rsp+0x28]
   140012551:	xor    r9d,r9d
   140012554:	or     r8,0xffffffffffffffff
   140012558:	mov    QWORD PTR [rsp+0x20],rax
   14001255d:	call   0x14000fb80
   140012562:	lea    rdx,[rip+0x22fff]        # 0x140035568
   140012569:	lea    rcx,[rsp+0x20]
   14001256e:	call   0x14001436c
   140012573:	int3   
   140012574:	int3   
   140012575:	int3   
   140012576:	int3   
   140012577:	int3   
   140012578:	int3   
   140012579:	int3   
   14001257a:	int3   
   14001257b:	int3   
   14001257c:	int3   
   14001257d:	int3   
   14001257e:	int3   
   14001257f:	int3   
   140012580:	rex push rbx
   140012582:	sub    rsp,0x20
   140012586:	mov    rbx,QWORD PTR [rcx+0x8]
   14001258a:	lea    rax,[rip+0x153af]        # 0x140027940
   140012591:	mov    QWORD PTR [rcx],rax
   140012594:	test   rbx,rbx
   140012597:	je     0x1400125c2
   140012599:	mov    ecx,DWORD PTR [rbx+0x8]
   14001259c:	call   QWORD PTR [rip+0x14c56]        # 0x1400271f8
   1400125a2:	mov    rcx,QWORD PTR [rbx]
   1400125a5:	call   QWORD PTR [rip+0x14af5]        # 0x1400270a0
   1400125ab:	lea    rcx,[rbx+0x10]
   1400125af:	call   QWORD PTR [rip+0x14ae3]        # 0x140027098
   1400125b5:	mov    rcx,rbx
   1400125b8:	add    rsp,0x20
   1400125bc:	pop    rbx
   1400125bd:	jmp    0x1400137cc
   1400125c2:	add    rsp,0x20
   1400125c6:	pop    rbx
   1400125c7:	ret    
   1400125c8:	int3   
   1400125c9:	int3   
   1400125ca:	int3   
   1400125cb:	int3   
   1400125cc:	int3   
   1400125cd:	int3   
   1400125ce:	int3   
   1400125cf:	int3   
   1400125d0:	test   rdx,rdx
   1400125d3:	je     0x1400125fa
   1400125d5:	push   rbx
   1400125d6:	sub    rsp,0x60
   1400125da:	mov    rbx,rcx
   1400125dd:	mov    rcx,rdx
   1400125e0:	call   QWORD PTR [rip+0x14aca]        # 0x1400270b0
   1400125e6:	mov    ecx,DWORD PTR [rbx+0x8]
   1400125e9:	xor    edx,edx
   1400125eb:	call   QWORD PTR [rip+0x14bff]        # 0x1400271f0
   1400125f1:	test   eax,eax
   1400125f3:	je     0x1400125fb
   1400125f5:	add    rsp,0x60
   1400125f9:	pop    rbx
   1400125fa:	ret    
   1400125fb:	lea    rax,[rip+0x14f8e]        # 0x140027590
   140012602:	lea    rdx,[rip+0x153c7]        # 0x1400279d0
   140012609:	lea    rcx,[rsp+0x28]
   14001260e:	xor    r9d,r9d
   140012611:	or     r8,0xffffffffffffffff
   140012615:	mov    QWORD PTR [rsp+0x20],rax
   14001261a:	call   0x14000fb80
   14001261f:	lea    rdx,[rip+0x22f42]        # 0x140035568
   140012626:	lea    rcx,[rsp+0x20]
   14001262b:	call   0x14001436c
   140012630:	int3   
   140012631:	int3   
   140012632:	int3   
   140012633:	int3   
   140012634:	int3   
   140012635:	int3   
   140012636:	int3   
   140012637:	int3   
   140012638:	int3   
   140012639:	int3   
   14001263a:	int3   
   14001263b:	int3   
   14001263c:	int3   
   14001263d:	int3   
   14001263e:	int3   
   14001263f:	int3   
   140012640:	rex push rbx
   140012642:	sub    rsp,0x60
   140012646:	mov    rbx,rcx
   140012649:	mov    ecx,DWORD PTR [rcx+0x8]
   14001264c:	call   QWORD PTR [rip+0x14b96]        # 0x1400271e8
   140012652:	test   rax,rax
   140012655:	je     0x140012671
   140012657:	dec    DWORD PTR [rax]
   140012659:	jne    0x14001266b
   14001265b:	mov    rdx,rax
   14001265e:	mov    rcx,rbx
   140012661:	add    rsp,0x60
   140012665:	pop    rbx
   140012666:	jmp    0x1400125d0
   14001266b:	add    rsp,0x60
   14001266f:	pop    rbx
   140012670:	ret    
   140012671:	lea    rax,[rip+0x14f18]        # 0x140027590
   140012678:	lea    rdx,[rip+0x15319]        # 0x140027998
   14001267f:	lea    rcx,[rsp+0x28]
   140012684:	xor    r9d,r9d
   140012687:	or     r8,0xffffffffffffffff
   14001268b:	mov    QWORD PTR [rsp+0x20],rax
   140012690:	call   0x14000fb80
   140012695:	lea    rdx,[rip+0x22ecc]        # 0x140035568
   14001269c:	lea    rcx,[rsp+0x20]
   1400126a1:	call   0x14001436c
   1400126a6:	int3   
   1400126a7:	int3   
   1400126a8:	int3   
   1400126a9:	int3   
   1400126aa:	int3   
   1400126ab:	int3   
   1400126ac:	int3   
   1400126ad:	int3   
   1400126ae:	int3   
   1400126af:	int3   
   1400126b0:	rex push rbx
   1400126b2:	sub    rsp,0x20
   1400126b6:	mov    rbx,QWORD PTR [rcx+0x8]
   1400126ba:	mov    ecx,DWORD PTR [rbx+0x8]
   1400126bd:	call   QWORD PTR [rip+0x14b25]        # 0x1400271e8
   1400126c3:	test   rax,rax
   1400126c6:	je     0x1400126cd
   1400126c8:	cmp    DWORD PTR [rax],0x0
   1400126cb:	jne    0x1400126d7
   1400126cd:	lea    rcx,[rbx+0x10]
   1400126d1:	call   QWORD PTR [rip+0x149a1]        # 0x140027078
   1400126d7:	mov    rcx,rbx
   1400126da:	call   0x1400127e0
   1400126df:	inc    DWORD PTR [rax]
   1400126e1:	add    rsp,0x20
   1400126e5:	pop    rbx
   1400126e6:	ret    
   1400126e7:	int3   
   1400126e8:	int3   
   1400126e9:	int3   
   1400126ea:	int3   
   1400126eb:	int3   
   1400126ec:	int3   
   1400126ed:	int3   
   1400126ee:	int3   
   1400126ef:	int3   
   1400126f0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400126f4:	jmp    0x140012700
   1400126f9:	int3   
   1400126fa:	int3   
   1400126fb:	int3   
   1400126fc:	int3   
   1400126fd:	int3   
   1400126fe:	int3   
   1400126ff:	int3   
   140012700:	rex push rbx
   140012702:	sub    rsp,0x60
   140012706:	mov    rbx,rcx
   140012709:	mov    ecx,DWORD PTR [rcx+0x8]
   14001270c:	call   QWORD PTR [rip+0x14ad6]        # 0x1400271e8
   140012712:	test   rax,rax
   140012715:	je     0x14001274d
   140012717:	cmp    DWORD PTR [rax],0x0
   14001271a:	jbe    0x14001274d
   14001271c:	mov    rcx,rbx
   14001271f:	call   0x140012640
   140012724:	mov    ecx,DWORD PTR [rbx+0x8]
   140012727:	call   QWORD PTR [rip+0x14abb]        # 0x1400271e8
   14001272d:	test   rax,rax
   140012730:	je     0x140012737
   140012732:	cmp    DWORD PTR [rax],0x0
   140012735:	jne    0x140012747
   140012737:	lea    rcx,[rbx+0x10]
   14001273b:	add    rsp,0x60
   14001273f:	pop    rbx
   140012740:	rex.W jmp QWORD PTR [rip+0x148f1]        # 0x140027038
   140012747:	add    rsp,0x60
   14001274b:	pop    rbx
   14001274c:	ret    
   14001274d:	lea    rax,[rip+0x14e3c]        # 0x140027590
   140012754:	lea    rdx,[rip+0x1520d]        # 0x140027968
   14001275b:	lea    rcx,[rsp+0x28]
   140012760:	xor    r9d,r9d
   140012763:	or     r8,0xffffffffffffffff
   140012767:	mov    QWORD PTR [rsp+0x20],rax
   14001276c:	call   0x14000fb80
   140012771:	lea    rdx,[rip+0x22df0]        # 0x140035568
   140012778:	lea    rcx,[rsp+0x20]
   14001277d:	call   0x14001436c
   140012782:	int3   
   140012783:	int3   
   140012784:	int3   
   140012785:	int3   
   140012786:	int3   
   140012787:	int3   
   140012788:	int3   
   140012789:	int3   
   14001278a:	int3   
   14001278b:	int3   
   14001278c:	int3   
   14001278d:	int3   
   14001278e:	int3   
   14001278f:	int3   
   140012790:	rex push rbx
   140012792:	sub    rsp,0x30
   140012796:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14001279f:	mov    rbx,rcx
   1400127a2:	mov    ecx,0x38
   1400127a7:	call   0x1400138b8
   1400127ac:	mov    QWORD PTR [rsp+0x40],rax
   1400127b1:	test   rax,rax
   1400127b4:	je     0x1400127c5
   1400127b6:	mov    rcx,rax
   1400127b9:	call   0x140012500
   1400127be:	nop
   1400127bf:	mov    QWORD PTR [rbx+0x8],rax
   1400127c3:	jmp    0x1400127cd
   1400127c5:	mov    QWORD PTR [rbx+0x8],0x0
   1400127cd:	add    rsp,0x30
   1400127d1:	pop    rbx
   1400127d2:	ret    
   1400127d3:	int3   
   1400127d4:	int3   
   1400127d5:	int3   
   1400127d6:	int3   
   1400127d7:	int3   
   1400127d8:	int3   
   1400127d9:	int3   
   1400127da:	int3   
   1400127db:	int3   
   1400127dc:	int3   
   1400127dd:	int3   
   1400127de:	int3   
   1400127df:	int3   
   1400127e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400127e5:	push   rdi
   1400127e6:	sub    rsp,0x60
   1400127ea:	mov    rdi,rcx
   1400127ed:	mov    ecx,DWORD PTR [rcx+0x8]
   1400127f0:	call   QWORD PTR [rip+0x149f2]        # 0x1400271e8
   1400127f6:	mov    rbx,rax
   1400127f9:	test   rax,rax
   1400127fc:	jne    0x140012828
   1400127fe:	lea    edx,[rax+0x4]
   140012801:	lea    ecx,[rax+0x40]
   140012804:	call   QWORD PTR [rip+0x148c6]        # 0x1400270d0
   14001280a:	mov    rbx,rax
   14001280d:	test   rax,rax
   140012810:	je     0x140012836
   140012812:	mov    DWORD PTR [rax],0x0
   140012818:	mov    ecx,DWORD PTR [rdi+0x8]
   14001281b:	mov    rdx,rax
   14001281e:	call   QWORD PTR [rip+0x149cc]        # 0x1400271f0
   140012824:	test   eax,eax
   140012826:	je     0x14001286c
   140012828:	mov    rax,rbx
   14001282b:	mov    rbx,QWORD PTR [rsp+0x70]
   140012830:	add    rsp,0x60
   140012834:	pop    rdi
   140012835:	ret    
   140012836:	lea    rax,[rip+0x14d53]        # 0x140027590
   14001283d:	lea    rdx,[rip+0x151a4]        # 0x1400279e8
   140012844:	lea    rcx,[rsp+0x28]
   140012849:	xor    r9d,r9d
   14001284c:	or     r8,0xffffffffffffffff
   140012850:	mov    QWORD PTR [rsp+0x20],rax
   140012855:	call   0x14000fb80
   14001285a:	lea    rdx,[rip+0x22d07]        # 0x140035568
   140012861:	lea    rcx,[rsp+0x20]
   140012866:	call   0x14001436c
   14001286b:	int3   
   14001286c:	lea    rax,[rip+0x14d1d]        # 0x140027590
   140012873:	lea    rdx,[rip+0x15156]        # 0x1400279d0
   14001287a:	lea    rcx,[rsp+0x28]
   14001287f:	xor    r9d,r9d
   140012882:	or     r8,0xffffffffffffffff
   140012886:	mov    QWORD PTR [rsp+0x20],rax
   14001288b:	call   0x14000fb80
   140012890:	lea    rdx,[rip+0x22cd1]        # 0x140035568
   140012897:	lea    rcx,[rsp+0x20]
   14001289c:	call   0x14001436c
   1400128a1:	int3   
   1400128a2:	int3   
   1400128a3:	int3   
   1400128a4:	int3   
   1400128a5:	int3   
   1400128a6:	int3   
   1400128a7:	int3   
   1400128a8:	int3   
   1400128a9:	int3   
   1400128aa:	int3   
   1400128ab:	int3   
   1400128ac:	int3   
   1400128ad:	int3   
   1400128ae:	int3   
   1400128af:	int3   
   1400128b0:	rex push rbx
   1400128b2:	push   rsi
   1400128b3:	push   rdi
   1400128b4:	push   r14
   1400128b6:	push   r15
   1400128b8:	sub    rsp,0x170
   1400128bf:	mov    QWORD PTR [rsp+0xf8],0xfffffffffffffffe
   1400128cb:	mov    r15,rcx
   1400128ce:	xor    esi,esi
   1400128d0:	mov    DWORD PTR [rcx+0x10],esi
   1400128d3:	mov    DWORD PTR [rcx],0x18
   1400128d9:	call   0x140012cd0
   1400128de:	mov    rbx,rax
   1400128e1:	mov    QWORD PTR [rsp+0x1b8],rax
   1400128e9:	lea    edx,[rsi+0x1]
   1400128ec:	mov    rcx,rax
   1400128ef:	call   0x140012d60
   1400128f4:	mov    rdi,rax
   1400128f7:	mov    QWORD PTR [rsp+0xf0],rax
   1400128ff:	lea    rdx,[rsp+0x1a8]
   140012907:	mov    rcx,QWORD PTR [rax]
   14001290a:	call   0x1400242d8
   14001290f:	xor    r9d,r9d
   140012912:	or     r8,0xffffffffffffffff
   140012916:	test   eax,eax
   140012918:	jne    0x140012951
   14001291a:	lea    rax,[rip+0x14c6f]        # 0x140027590
   140012921:	mov    QWORD PTR [rsp+0x100],rax
   140012929:	lea    rdx,[rip+0x15148]        # 0x140027a78
   140012930:	lea    rcx,[rsp+0x108]
   140012938:	call   0x14000fb80
   14001293d:	lea    rdx,[rip+0x22c24]        # 0x140035568
   140012944:	lea    rcx,[rsp+0x100]
   14001294c:	call   0x14001436c
   140012951:	mov    rdx,QWORD PTR [rsp+0x1a8]
   140012959:	lea    rcx,[rsp+0x80]
   140012961:	call   0x14000fb80
   140012966:	nop
   140012967:	mov    rcx,QWORD PTR [rsp+0x1a8]
   14001296f:	call   QWORD PTR [rip+0x1473b]        # 0x1400270b0
   140012975:	mov    r9d,0x1
   14001297b:	or     r8,0xffffffffffffffff
   14001297f:	lea    rdx,[rip+0x150c6]        # 0x140027a4c
   140012986:	lea    rcx,[rsp+0x50]
   14001298b:	call   0x14000fb80
   140012990:	nop
   140012991:	lea    rcx,[rsp+0x50]
   140012996:	call   0x1400112c0
   14001299b:	nop
   14001299c:	lea    rdx,[rsp+0x80]
   1400129a4:	lea    rcx,[rsp+0x50]
   1400129a9:	call   0x14000fdb0
   1400129ae:	xor    r9d,r9d
   1400129b1:	or     r8,0xffffffffffffffff
   1400129b5:	lea    rdx,[rip+0x150f4]        # 0x140027ab0
   1400129bc:	lea    rcx,[rsp+0x20]
   1400129c1:	call   0x14000fb80
   1400129c6:	nop
   1400129c7:	lea    rdx,[rsp+0x20]
   1400129cc:	lea    rcx,[rsp+0x50]
   1400129d1:	call   0x14000fdb0
   1400129d6:	nop
   1400129d7:	mov    rax,QWORD PTR [rsp+0x40]
   1400129dc:	mov    rcx,rsi
   1400129df:	mov    QWORD PTR [rsp+0x40],rcx
   1400129e4:	test   rax,rax
   1400129e7:	je     0x1400129f6
   1400129e9:	mov    rcx,rax
   1400129ec:	call   0x140013924
   1400129f1:	mov    rcx,QWORD PTR [rsp+0x40]
   1400129f6:	call   0x1400137cc
   1400129fb:	mov    rax,QWORD PTR [rsp+0x30]
   140012a00:	mov    rcx,rsi
   140012a03:	mov    QWORD PTR [rsp+0x30],rcx
   140012a08:	test   rax,rax
   140012a0b:	je     0x140012a1a
   140012a0d:	mov    rcx,rax
   140012a10:	call   0x140013924
   140012a15:	mov    rcx,QWORD PTR [rsp+0x30]
   140012a1a:	call   0x1400137cc
   140012a1f:	lea    rdx,[rsp+0x80]
   140012a27:	lea    rcx,[rsp+0x50]
   140012a2c:	call   0x14000fdb0
   140012a31:	xor    r9d,r9d
   140012a34:	or     r8,0xffffffffffffffff
   140012a38:	lea    rdx,[rip+0x15035]        # 0x140027a74
   140012a3f:	lea    rcx,[rsp+0x20]
   140012a44:	call   0x14000fb80
   140012a49:	nop
   140012a4a:	lea    rdx,[rsp+0x20]
   140012a4f:	lea    rcx,[rsp+0x50]
   140012a54:	call   0x14000fdb0
   140012a59:	nop
   140012a5a:	mov    rax,QWORD PTR [rsp+0x40]
   140012a5f:	mov    rcx,rsi
   140012a62:	mov    QWORD PTR [rsp+0x40],rcx
   140012a67:	test   rax,rax
   140012a6a:	je     0x140012a79
   140012a6c:	mov    rcx,rax
   140012a6f:	call   0x140013924
   140012a74:	mov    rcx,QWORD PTR [rsp+0x40]
   140012a79:	call   0x1400137cc
   140012a7e:	mov    rax,QWORD PTR [rsp+0x30]
   140012a83:	mov    rcx,rsi
   140012a86:	mov    QWORD PTR [rsp+0x30],rcx
   140012a8b:	test   rax,rax
   140012a8e:	je     0x140012a9d
   140012a90:	mov    rcx,rax
   140012a93:	call   0x140013924
   140012a98:	mov    rcx,QWORD PTR [rsp+0x30]
   140012a9d:	call   0x1400137cc
   140012aa2:	xor    r9d,r9d
   140012aa5:	or     r8,0xffffffffffffffff
   140012aa9:	lea    rdx,[rip+0x15010]        # 0x140027ac0
   140012ab0:	lea    rcx,[rsp+0x20]
   140012ab5:	call   0x14000fb80
   140012aba:	nop
   140012abb:	lea    rdx,[rsp+0x20]
   140012ac0:	lea    rcx,[rsp+0x50]
   140012ac5:	call   0x14000fdb0
   140012aca:	nop
   140012acb:	mov    rax,QWORD PTR [rsp+0x40]
   140012ad0:	mov    rcx,rsi
   140012ad3:	mov    QWORD PTR [rsp+0x40],rcx
   140012ad8:	test   rax,rax
   140012adb:	je     0x140012aea
   140012add:	mov    rcx,rax
   140012ae0:	call   0x140013924
   140012ae5:	mov    rcx,QWORD PTR [rsp+0x40]
   140012aea:	call   0x1400137cc
   140012aef:	mov    rax,QWORD PTR [rsp+0x30]
   140012af4:	mov    rcx,rsi
   140012af7:	mov    QWORD PTR [rsp+0x30],rcx
   140012afc:	test   rax,rax
   140012aff:	je     0x140012b0e
   140012b01:	mov    rcx,rax
   140012b04:	call   0x140013924
   140012b09:	mov    rcx,QWORD PTR [rsp+0x30]
   140012b0e:	call   0x1400137cc
   140012b13:	lea    rcx,[rsp+0x50]
   140012b18:	call   0x1400112c0
   140012b1d:	lea    r9,[rsp+0x1a0]
   140012b25:	lea    r8,[rsp+0x1b0]
   140012b2d:	mov    edx,0x1
   140012b32:	mov    rcx,rax
   140012b35:	call   0x1400242de
   140012b3a:	test   eax,eax
   140012b3c:	jne    0x140012bea
   140012b42:	xor    r9d,r9d
   140012b45:	or     r8,0xffffffffffffffff
   140012b49:	lea    rdx,[rip+0x14f80]        # 0x140027ad0
   140012b50:	lea    rcx,[rsp+0x20]
   140012b55:	call   0x14000fb80
   140012b5a:	nop
   140012b5b:	lea    r8,[rsp+0x50]
   140012b60:	lea    rdx,[rsp+0x20]
   140012b65:	lea    rcx,[rsp+0x138]
   140012b6d:	call   0x1400037a0
   140012b72:	mov    rdx,rax
   140012b75:	lea    rax,[rip+0x14a14]        # 0x140027590
   140012b7c:	mov    QWORD PTR [rsp+0xb0],rax
   140012b84:	lea    rax,[rsp+0xb8]
   140012b8c:	mov    QWORD PTR [rsp+0xe8],rax
   140012b94:	mov    DWORD PTR [rsp+0xb8],esi
   140012b9b:	mov    QWORD PTR [rsp+0xc0],rsi
   140012ba3:	mov    QWORD PTR [rsp+0xc8],rsi
   140012bab:	mov    QWORD PTR [rsp+0xd0],rsi
   140012bb3:	mov    QWORD PTR [rsp+0xd8],rsi
   140012bbb:	mov    QWORD PTR [rsp+0xe0],rsi
   140012bc3:	or     r8,0xffffffffffffffff
   140012bc7:	lea    rcx,[rsp+0xb8]
   140012bcf:	call   0x140010560
   140012bd4:	nop
   140012bd5:	lea    rdx,[rip+0x2298c]        # 0x140035568
   140012bdc:	lea    rcx,[rsp+0xb0]
   140012be4:	call   0x14001436c
   140012be9:	nop
   140012bea:	mov    r14,QWORD PTR [rsp+0x1b0]
   140012bf2:	mov    QWORD PTR [r15+0x8],r14
   140012bf6:	mov    rax,QWORD PTR [rsp+0x70]
   140012bfb:	mov    rcx,rsi
   140012bfe:	mov    QWORD PTR [rsp+0x70],rcx
   140012c03:	test   rax,rax
   140012c06:	je     0x140012c15
   140012c08:	mov    rcx,rax
   140012c0b:	call   0x140013924
   140012c10:	mov    rcx,QWORD PTR [rsp+0x70]
   140012c15:	call   0x1400137cc
   140012c1a:	mov    rax,QWORD PTR [rsp+0x60]
   140012c1f:	mov    rcx,rsi
   140012c22:	mov    QWORD PTR [rsp+0x60],rcx
   140012c27:	test   rax,rax
   140012c2a:	je     0x140012c39
   140012c2c:	mov    rcx,rax
   140012c2f:	call   0x140013924
   140012c34:	mov    rcx,QWORD PTR [rsp+0x60]
   140012c39:	call   0x1400137cc
   140012c3e:	nop
   140012c3f:	mov    rax,QWORD PTR [rsp+0xa0]
   140012c47:	mov    rcx,rsi
   140012c4a:	mov    QWORD PTR [rsp+0xa0],rcx
   140012c52:	test   rax,rax
   140012c55:	je     0x140012c67
   140012c57:	mov    rcx,rax
   140012c5a:	call   0x140013924
   140012c5f:	mov    rcx,QWORD PTR [rsp+0xa0]
   140012c67:	call   0x1400137cc
   140012c6c:	mov    rcx,QWORD PTR [rsp+0x90]
   140012c74:	mov    QWORD PTR [rsp+0x90],rsi
   140012c7c:	test   rcx,rcx
   140012c7f:	je     0x140012c8e
   140012c81:	call   0x140013924
   140012c86:	mov    rsi,QWORD PTR [rsp+0x90]
   140012c8e:	mov    rcx,rsi
   140012c91:	call   0x1400137cc
   140012c96:	nop
   140012c97:	mov    rcx,rdi
   140012c9a:	call   0x1400137cc
   140012c9f:	nop
   140012ca0:	cmp    rbx,0xffffffffffffffff
   140012ca4:	je     0x140012caf
   140012ca6:	mov    rcx,rbx
   140012ca9:	call   QWORD PTR [rip+0x143f1]        # 0x1400270a0
   140012caf:	mov    rax,r14
   140012cb2:	jmp    0x140012cb6
   140012cb4:	xor    eax,eax
   140012cb6:	add    rsp,0x170
   140012cbd:	pop    r15
   140012cbf:	pop    r14
   140012cc1:	pop    rdi
   140012cc2:	pop    rsi
   140012cc3:	pop    rbx
   140012cc4:	ret    
   140012cc5:	int3   
   140012cc6:	int3   
   140012cc7:	int3   
   140012cc8:	int3   
   140012cc9:	int3   
   140012cca:	int3   
   140012ccb:	int3   
   140012ccc:	int3   
   140012ccd:	int3   
   140012cce:	int3   
   140012ccf:	int3   
   140012cd0:	sub    rsp,0x68
   140012cd4:	call   QWORD PTR [rip+0x1452e]        # 0x140027208
   140012cda:	mov    edx,0x8
   140012cdf:	lea    r9,[rsp+0x70]
   140012ce4:	lea    r8d,[rdx-0x7]
   140012ce8:	mov    rcx,rax
   140012ceb:	call   QWORD PTR [rip+0x14327]        # 0x140027018
   140012cf1:	test   eax,eax
   140012cf3:	jne    0x140012d12
   140012cf5:	call   QWORD PTR [rip+0x144bd]        # 0x1400271b8
   140012cfb:	lea    r8,[rsp+0x70]
   140012d00:	mov    edx,0x8
   140012d05:	mov    rcx,rax
   140012d08:	call   QWORD PTR [rip+0x14302]        # 0x140027010
   140012d0e:	test   eax,eax
   140012d10:	je     0x140012d1c
   140012d12:	mov    rax,QWORD PTR [rsp+0x70]
   140012d17:	add    rsp,0x68
   140012d1b:	ret    
   140012d1c:	lea    rax,[rip+0x1486d]        # 0x140027590
   140012d23:	lea    rdx,[rip+0x14d26]        # 0x140027a50
   140012d2a:	lea    rcx,[rsp+0x28]
   140012d2f:	xor    r9d,r9d
   140012d32:	or     r8,0xffffffffffffffff
   140012d36:	mov    QWORD PTR [rsp+0x20],rax
   140012d3b:	call   0x14000fb80
   140012d40:	lea    rdx,[rip+0x22821]        # 0x140035568
   140012d47:	lea    rcx,[rsp+0x20]
   140012d4c:	call   0x14001436c
   140012d51:	int3   
   140012d52:	int3   
   140012d53:	int3   
   140012d54:	int3   
   140012d55:	int3   
   140012d56:	int3   
   140012d57:	int3   
   140012d58:	int3   
   140012d59:	int3   
   140012d5a:	int3   
   140012d5b:	int3   
   140012d5c:	int3   
   140012d5d:	int3   
   140012d5e:	int3   
   140012d5f:	int3   
   140012d60:	mov    QWORD PTR [rsp+0x10],rsi
   140012d65:	push   rdi
   140012d66:	sub    rsp,0x70
   140012d6a:	lea    rax,[rsp+0x90]
   140012d72:	xor    r9d,r9d
   140012d75:	xor    r8d,r8d
   140012d78:	mov    edi,edx
   140012d7a:	mov    rsi,rcx
   140012d7d:	mov    QWORD PTR [rsp+0x20],rax
   140012d82:	call   QWORD PTR [rip+0x14280]        # 0x140027008
   140012d88:	test   eax,eax
   140012d8a:	jne    0x140012e2c
   140012d90:	call   QWORD PTR [rip+0x142ca]        # 0x140027060
   140012d96:	cmp    eax,0x7a
   140012d99:	jne    0x140012e2c
   140012d9f:	mov    ecx,DWORD PTR [rsp+0x90]
   140012da6:	mov    QWORD PTR [rsp+0x80],rbx
   140012dae:	call   0x14001307c
   140012db3:	mov    r9d,DWORD PTR [rsp+0x90]
   140012dbb:	mov    edx,edi
   140012dbd:	mov    rbx,rax
   140012dc0:	lea    rax,[rsp+0x90]
   140012dc8:	mov    rcx,rsi
   140012dcb:	mov    r8,rbx
   140012dce:	mov    QWORD PTR [rsp+0x20],rax
   140012dd3:	call   QWORD PTR [rip+0x1422f]        # 0x140027008
   140012dd9:	test   eax,eax
   140012ddb:	je     0x140012df6
   140012ddd:	mov    rsi,QWORD PTR [rsp+0x88]
   140012de5:	mov    rax,rbx
   140012de8:	mov    rbx,QWORD PTR [rsp+0x80]
   140012df0:	add    rsp,0x70
   140012df4:	pop    rdi
   140012df5:	ret    
   140012df6:	lea    rax,[rip+0x14793]        # 0x140027590
   140012dfd:	lea    rdx,[rip+0x14c2c]        # 0x140027a30
   140012e04:	lea    rcx,[rsp+0x38]
   140012e09:	xor    r9d,r9d
   140012e0c:	or     r8,0xffffffffffffffff
   140012e10:	mov    QWORD PTR [rsp+0x30],rax
   140012e15:	call   0x14000fb80
   140012e1a:	lea    rdx,[rip+0x22747]        # 0x140035568
   140012e21:	lea    rcx,[rsp+0x30]
   140012e26:	call   0x14001436c
   140012e2b:	int3   
   140012e2c:	lea    rax,[rip+0x1475d]        # 0x140027590
   140012e33:	lea    rdx,[rip+0x14bce]        # 0x140027a08
   140012e3a:	lea    rcx,[rsp+0x38]
   140012e3f:	xor    r9d,r9d
   140012e42:	or     r8,0xffffffffffffffff
   140012e46:	mov    QWORD PTR [rsp+0x30],rax
   140012e4b:	call   0x14000fb80
   140012e50:	lea    rdx,[rip+0x22711]        # 0x140035568
   140012e57:	lea    rcx,[rsp+0x30]
   140012e5c:	call   0x14001436c
   140012e61:	int3   
   140012e62:	int3   
   140012e63:	int3   
   140012e64:	cmp    QWORD PTR [rip+0x1517c],0x0        # 0x140027fe8
   140012e6c:	lea    rax,[rip+0x1516d]        # 0x140027fe0
   140012e73:	je     0x140012e84
   140012e75:	cmp    DWORD PTR [rax],ecx
   140012e77:	je     0x140012e87
   140012e79:	add    rax,0x10
   140012e7d:	cmp    QWORD PTR [rax+0x8],0x0
   140012e82:	jne    0x140012e75
   140012e84:	xor    eax,eax
   140012e86:	ret    
   140012e87:	mov    rax,QWORD PTR [rax+0x8]
   140012e8b:	ret    
   140012e8c:	cmp    QWORD PTR [rip+0x14ca4],0x0        # 0x140027b38
   140012e94:	lea    rax,[rip+0x14c95]        # 0x140027b30
   140012e9b:	je     0x140012eac
   140012e9d:	cmp    DWORD PTR [rax],ecx
   140012e9f:	je     0x140012eaf
   140012ea1:	add    rax,0x10
   140012ea5:	cmp    QWORD PTR [rax+0x8],0x0
   140012eaa:	jne    0x140012e9d
   140012eac:	xor    eax,eax
   140012eae:	ret    
   140012eaf:	mov    rax,QWORD PTR [rax+0x8]
   140012eb3:	ret    
   140012eb4:	rex push rbx
   140012eb6:	sub    rsp,0x20
   140012eba:	mov    rbx,rcx
   140012ebd:	call   0x140015424
   140012ec2:	lea    rax,[rip+0x15f5f]        # 0x140028e28
   140012ec9:	mov    QWORD PTR [rbx],rax
   140012ecc:	mov    rax,rbx
   140012ecf:	add    rsp,0x20
   140012ed3:	pop    rbx
   140012ed4:	ret    
   140012ed5:	int3   
   140012ed6:	int3   
   140012ed7:	int3   
   140012ed8:	rex push rbx
   140012eda:	sub    rsp,0x20
   140012ede:	mov    rbx,rcx
   140012ee1:	call   0x140015424
   140012ee6:	lea    rax,[rip+0x15f7b]        # 0x140028e68
   140012eed:	mov    QWORD PTR [rbx],rax
   140012ef0:	mov    rax,rbx
   140012ef3:	add    rsp,0x20
   140012ef7:	pop    rbx
   140012ef8:	ret    
   140012ef9:	int3   
   140012efa:	int3   
   140012efb:	int3   
   140012efc:	rex push rbx
   140012efe:	sub    rsp,0x20
   140012f02:	mov    rbx,rcx
   140012f05:	call   0x140015424
   140012f0a:	lea    rax,[rip+0x15f3f]        # 0x140028e50
   140012f11:	mov    QWORD PTR [rbx],rax
   140012f14:	mov    rax,rbx
   140012f17:	add    rsp,0x20
   140012f1b:	pop    rbx
   140012f1c:	ret    
   140012f1d:	int3   
   140012f1e:	int3   
   140012f1f:	int3   
   140012f20:	rex push rbx
   140012f22:	sub    rsp,0x20
   140012f26:	mov    rbx,rcx
   140012f29:	call   0x140015424
   140012f2e:	lea    rax,[rip+0x15f4b]        # 0x140028e80
   140012f35:	mov    QWORD PTR [rbx],rax
   140012f38:	mov    rax,rbx
   140012f3b:	add    rsp,0x20
   140012f3f:	pop    rbx
   140012f40:	ret    
   140012f41:	int3   
   140012f42:	int3   
   140012f43:	int3   
   140012f44:	lea    rax,[rip+0x15edd]        # 0x140028e28
   140012f4b:	mov    QWORD PTR [rcx],rax
   140012f4e:	jmp    0x140015450
   140012f53:	int3   
   140012f54:	jmp    0x140015450
   140012f59:	int3   
   140012f5a:	int3   
   140012f5b:	int3   
   140012f5c:	mov    QWORD PTR [rsp+0x8],rbx
   140012f61:	push   rdi
   140012f62:	sub    rsp,0x20
   140012f66:	lea    rax,[rip+0x15ebb]        # 0x140028e28
   140012f6d:	mov    ebx,edx
   140012f6f:	mov    rdi,rcx
   140012f72:	mov    QWORD PTR [rcx],rax
   140012f75:	call   0x140015450
   140012f7a:	test   bl,0x1
   140012f7d:	je     0x140012f87
   140012f7f:	mov    rcx,rdi
   140012f82:	call   0x1400137cc
   140012f87:	mov    rax,rdi
   140012f8a:	mov    rbx,QWORD PTR [rsp+0x30]
   140012f8f:	add    rsp,0x20
   140012f93:	pop    rdi
   140012f94:	ret    
   140012f95:	int3   
   140012f96:	int3   
   140012f97:	int3   
   140012f98:	mov    QWORD PTR [rsp+0x8],rbx
   140012f9d:	push   rdi
   140012f9e:	sub    rsp,0x20
   140012fa2:	mov    ebx,edx
   140012fa4:	mov    rdi,rcx
   140012fa7:	call   0x140015450
   140012fac:	test   bl,0x1
   140012faf:	je     0x140012fb9
   140012fb1:	mov    rcx,rdi
   140012fb4:	call   0x1400137cc
   140012fb9:	mov    rax,rdi
   140012fbc:	mov    rbx,QWORD PTR [rsp+0x30]
   140012fc1:	add    rsp,0x20
   140012fc5:	pop    rdi
   140012fc6:	ret    
   140012fc7:	int3   
   140012fc8:	sub    rsp,0x48
   140012fcc:	lea    rax,[rip+0x15e65]        # 0x140028e38
   140012fd3:	lea    rdx,[rsp+0x50]
   140012fd8:	lea    rcx,[rsp+0x20]
   140012fdd:	mov    r8d,0x1
   140012fe3:	mov    QWORD PTR [rsp+0x50],rax
   140012fe8:	call   0x140015408
   140012fed:	lea    rax,[rip+0x15e34]        # 0x140028e28
   140012ff4:	lea    rdx,[rip+0x22355]        # 0x140035350
   140012ffb:	lea    rcx,[rsp+0x20]
   140013000:	mov    QWORD PTR [rsp+0x20],rax
   140013005:	call   0x14001436c
   14001300a:	int3   
   14001300b:	int3   
   14001300c:	sub    rsp,0x48
   140013010:	mov    QWORD PTR [rsp+0x50],rcx
   140013015:	lea    rdx,[rsp+0x50]
   14001301a:	lea    rcx,[rsp+0x20]
   14001301f:	call   0x1400153d8
   140013024:	lea    rax,[rip+0x15e3d]        # 0x140028e68
   14001302b:	lea    rdx,[rip+0x223ce]        # 0x140035400
   140013032:	lea    rcx,[rsp+0x20]
   140013037:	mov    QWORD PTR [rsp+0x20],rax
   14001303c:	call   0x14001436c
   140013041:	int3   
   140013042:	int3   
   140013043:	int3   
   140013044:	sub    rsp,0x48
   140013048:	mov    QWORD PTR [rsp+0x50],rcx
   14001304d:	lea    rdx,[rsp+0x50]
   140013052:	lea    rcx,[rsp+0x20]
   140013057:	call   0x1400153d8
   14001305c:	lea    rax,[rip+0x15e1d]        # 0x140028e80
   140013063:	lea    rdx,[rip+0x223fe]        # 0x140035468
   14001306a:	lea    rcx,[rsp+0x20]
   14001306f:	mov    QWORD PTR [rsp+0x20],rax
   140013074:	call   0x14001436c
   140013079:	int3   
   14001307a:	int3   
   14001307b:	int3   
   14001307c:	jmp    0x1400138b8
   140013081:	int3   
   140013082:	int3   
   140013083:	int3   
   140013084:	int3   
   140013085:	int3   
   140013086:	int3   
   140013087:	int3   
   140013088:	int3   
   140013089:	int3   
   14001308a:	int3   
   14001308b:	int3   
   14001308c:	int3   
   14001308d:	int3   
   14001308e:	int3   
   14001308f:	int3   
   140013090:	int3   
   140013091:	int3   
   140013092:	int3   
   140013093:	int3   
   140013094:	int3   
   140013095:	int3   
   140013096:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400130a0:	cmp    rcx,QWORD PTR [rip+0x23f69]        # 0x140037010
   1400130a7:	jne    0x1400130ba
   1400130a9:	rol    rcx,0x10
   1400130ad:	test   cx,0xffff
   1400130b2:	jne    0x1400130b6
   1400130b4:	repz ret 
   1400130b6:	ror    rcx,0x10
   1400130ba:	jmp    0x1400155c4
   1400130bf:	int3   
   1400130c0:	int3   
   1400130c1:	int3   
   1400130c2:	int3   
   1400130c3:	int3   
   1400130c4:	int3   
   1400130c5:	int3   
   1400130c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400130d0:	mov    r11,rcx
   1400130d3:	mov    r10,rdx
   1400130d6:	cmp    r8,0x10
   1400130da:	jbe    0x140013199
   1400130e0:	sub    rdx,rcx
   1400130e3:	jae    0x1400130f4
   1400130e5:	mov    rax,r10
   1400130e8:	add    rax,r8
   1400130eb:	cmp    rcx,rax
   1400130ee:	jl     0x14001348a
   1400130f4:	bt     DWORD PTR [rip+0x26308],0x1        # 0x140039404
   1400130fc:	jae    0x140013111
   1400130fe:	push   rdi
   1400130ff:	push   rsi
   140013100:	mov    rdi,rcx
   140013103:	mov    rsi,r10
   140013106:	mov    rcx,r8
   140013109:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001310b:	pop    rsi
   14001310c:	pop    rdi
   14001310d:	mov    rax,r11
   140013110:	ret    
   140013111:	bt     DWORD PTR [rip+0x262eb],0x2        # 0x140039404
   140013119:	jb     0x140013375
   14001311f:	test   cl,0x7
   140013122:	je     0x14001315a
   140013124:	test   cl,0x1
   140013127:	je     0x140013134
   140013129:	mov    al,BYTE PTR [rdx+rcx*1]
   14001312c:	dec    r8
   14001312f:	mov    BYTE PTR [rcx],al
   140013131:	inc    rcx
   140013134:	test   cl,0x2
   140013137:	je     0x140013148
   140013139:	mov    ax,WORD PTR [rdx+rcx*1]
   14001313d:	sub    r8,0x2
   140013141:	mov    WORD PTR [rcx],ax
   140013144:	add    rcx,0x2
   140013148:	test   cl,0x4
   14001314b:	je     0x14001315a
   14001314d:	mov    eax,DWORD PTR [rdx+rcx*1]
   140013150:	sub    r8,0x4
   140013154:	mov    DWORD PTR [rcx],eax
   140013156:	add    rcx,0x4
   14001315a:	mov    r9,r8
   14001315d:	shr    r9,0x5
   140013161:	jne    0x140013340
   140013167:	mov    r9,r8
   14001316a:	shr    r9,0x3
   14001316e:	je     0x140013184
   140013170:	mov    rax,QWORD PTR [rdx+rcx*1]
   140013174:	mov    QWORD PTR [rcx],rax
   140013177:	add    rcx,0x8
   14001317b:	dec    r9
   14001317e:	jne    0x140013170
   140013180:	and    r8,0x7
   140013184:	test   r8,r8
   140013187:	jne    0x140013190
   140013189:	mov    rax,r11
   14001318c:	ret    
   14001318d:	nop    DWORD PTR [rax]
   140013190:	lea    rdx,[rdx+rcx*1]
   140013194:	mov    r10,rcx
   140013197:	jmp    0x14001319c
   140013199:	mov    r10,r11
   14001319c:	lea    r9,[rip+0xfffffffffffece5d]        # 0x140000000
   1400131a3:	mov    eax,DWORD PTR [r9+r8*4+0x131b0]
   1400131ab:	add    rax,r9
   1400131ae:	jmp    rax
   1400131b0:	hlt    
   1400131b1:	xor    DWORD PTR [rcx],eax
   1400131b3:	add    al,bh
   1400131b5:	xor    DWORD PTR [rcx],eax
   1400131b7:	add    BYTE PTR [rbx],al
   1400131b9:	xor    al,BYTE PTR [rcx]
   1400131bb:	add    BYTE PTR [rdi],cl
   1400131bd:	xor    al,BYTE PTR [rcx]
   1400131bf:	add    BYTE PTR [rdx+rsi*1],ah
   1400131c2:	add    DWORD PTR [rax],eax
   1400131c4:	sub    eax,0x3f000132
   1400131c9:	xor    al,BYTE PTR [rcx]
   1400131cb:	add    BYTE PTR [rdx+0x32],dl
   1400131ce:	add    DWORD PTR [rax],eax
   1400131d0:	outs   dx,BYTE PTR ds:[rsi]
   1400131d1:	xor    al,BYTE PTR [rcx]
   1400131d3:	add    BYTE PTR [rax+0x32],bh
   1400131d6:	add    DWORD PTR [rax],eax
   1400131d8:	mov    esi,DWORD PTR [rdx]
   1400131da:	add    DWORD PTR [rax],eax
   1400131dc:	lahf   
   1400131dd:	xor    al,BYTE PTR [rcx]
   1400131df:	add    BYTE PTR [rdx+rsi*1+0x32cd0001],bh
   1400131e6:	add    DWORD PTR [rax],eax
   1400131e8:	out    0x32,eax
   1400131ea:	add    DWORD PTR [rax],eax
   1400131ec:	add    dh,BYTE PTR [rbx]
   1400131ee:	add    DWORD PTR [rax],eax
   1400131f0:	xor    eax,DWORD PTR es:[rcx]
   1400131f3:	add    BYTE PTR [rcx-0x75],cl
   1400131f6:	ret    
   1400131f7:	ret    
   1400131f8:	movzx  rax,BYTE PTR [rdx]
   1400131fc:	mov    BYTE PTR [r10],al
   1400131ff:	mov    rax,r11
   140013202:	ret    
   140013203:	movzx  rax,WORD PTR [rdx]
   140013207:	mov    WORD PTR [r10],ax
   14001320b:	mov    rax,r11
   14001320e:	ret    
   14001320f:	movzx  rax,BYTE PTR [rdx]
   140013213:	movzx  rcx,WORD PTR [rdx+0x1]
   140013218:	mov    BYTE PTR [r10],al
   14001321b:	mov    WORD PTR [r10+0x1],cx
   140013220:	mov    rax,r11
   140013223:	ret    
   140013224:	mov    eax,DWORD PTR [rdx]
   140013226:	mov    DWORD PTR [r10],eax
   140013229:	mov    rax,r11
   14001322c:	ret    
   14001322d:	movzx  rax,BYTE PTR [rdx]
   140013231:	mov    ecx,DWORD PTR [rdx+0x1]
   140013234:	mov    BYTE PTR [r10],al
   140013237:	mov    DWORD PTR [r10+0x1],ecx
   14001323b:	mov    rax,r11
   14001323e:	ret    
   14001323f:	movzx  rax,WORD PTR [rdx]
   140013243:	mov    ecx,DWORD PTR [rdx+0x2]
   140013246:	mov    WORD PTR [r10],ax
   14001324a:	mov    DWORD PTR [r10+0x2],ecx
   14001324e:	mov    rax,r11
   140013251:	ret    
   140013252:	movzx  rax,BYTE PTR [rdx]
   140013256:	movzx  rcx,WORD PTR [rdx+0x1]
   14001325b:	mov    edx,DWORD PTR [rdx+0x3]
   14001325e:	mov    BYTE PTR [r10],al
   140013261:	mov    WORD PTR [r10+0x1],cx
   140013266:	mov    DWORD PTR [r10+0x3],edx
   14001326a:	mov    rax,r11
   14001326d:	ret    
   14001326e:	mov    rax,QWORD PTR [rdx]
   140013271:	mov    QWORD PTR [r10],rax
   140013274:	mov    rax,r11
   140013277:	ret    
   140013278:	movzx  rax,BYTE PTR [rdx]
   14001327c:	mov    rcx,QWORD PTR [rdx+0x1]
   140013280:	mov    BYTE PTR [r10],al
   140013283:	mov    QWORD PTR [r10+0x1],rcx
   140013287:	mov    rax,r11
   14001328a:	ret    
   14001328b:	movzx  rax,WORD PTR [rdx]
   14001328f:	mov    rcx,QWORD PTR [rdx+0x2]
   140013293:	mov    WORD PTR [r10],ax
   140013297:	mov    QWORD PTR [r10+0x2],rcx
   14001329b:	mov    rax,r11
   14001329e:	ret    
   14001329f:	movzx  rax,BYTE PTR [rdx]
   1400132a3:	movzx  rcx,WORD PTR [rdx+0x1]
   1400132a8:	mov    rdx,QWORD PTR [rdx+0x3]
   1400132ac:	mov    BYTE PTR [r10],al
   1400132af:	mov    WORD PTR [r10+0x1],cx
   1400132b4:	mov    QWORD PTR [r10+0x3],rdx
   1400132b8:	mov    rax,r11
   1400132bb:	ret    
   1400132bc:	mov    eax,DWORD PTR [rdx]
   1400132be:	mov    rcx,QWORD PTR [rdx+0x4]
   1400132c2:	mov    DWORD PTR [r10],eax
   1400132c5:	mov    QWORD PTR [r10+0x4],rcx
   1400132c9:	mov    rax,r11
   1400132cc:	ret    
   1400132cd:	movzx  rax,BYTE PTR [rdx]
   1400132d1:	mov    ecx,DWORD PTR [rdx+0x1]
   1400132d4:	mov    rdx,QWORD PTR [rdx+0x5]
   1400132d8:	mov    BYTE PTR [r10],al
   1400132db:	mov    DWORD PTR [r10+0x1],ecx
   1400132df:	mov    QWORD PTR [r10+0x5],rdx
   1400132e3:	mov    rax,r11
   1400132e6:	ret    
   1400132e7:	movzx  rax,WORD PTR [rdx]
   1400132eb:	mov    ecx,DWORD PTR [rdx+0x2]
   1400132ee:	mov    rdx,QWORD PTR [rdx+0x6]
   1400132f2:	mov    WORD PTR [r10],ax
   1400132f6:	mov    DWORD PTR [r10+0x2],ecx
   1400132fa:	mov    QWORD PTR [r10+0x6],rdx
   1400132fe:	mov    rax,r11
   140013301:	ret    
   140013302:	movzx  r8,BYTE PTR [rdx]
   140013306:	movzx  rax,WORD PTR [rdx+0x1]
   14001330b:	mov    ecx,DWORD PTR [rdx+0x3]
   14001330e:	mov    rdx,QWORD PTR [rdx+0x7]
   140013312:	mov    BYTE PTR [r10],r8b
   140013315:	mov    WORD PTR [r10+0x1],ax
   14001331a:	mov    DWORD PTR [r10+0x3],ecx
   14001331e:	mov    QWORD PTR [r10+0x7],rdx
   140013322:	mov    rax,r11
   140013325:	ret    
   140013326:	movdqu xmm0,XMMWORD PTR [rdx]
   14001332a:	movdqu XMMWORD PTR [r10],xmm0
   14001332f:	mov    rax,r11
   140013332:	ret    
   140013333:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013340:	mov    rax,QWORD PTR [rdx+rcx*1]
   140013344:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140013349:	add    rcx,0x20
   14001334d:	mov    QWORD PTR [rcx-0x20],rax
   140013351:	mov    QWORD PTR [rcx-0x18],r10
   140013355:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14001335a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14001335f:	dec    r9
   140013362:	mov    QWORD PTR [rcx-0x10],rax
   140013366:	mov    QWORD PTR [rcx-0x8],r10
   14001336a:	jne    0x140013340
   14001336c:	and    r8,0x1f
   140013370:	jmp    0x140013167
   140013375:	cmp    r8,0x20
   140013379:	jbe    0x140013460
   14001337f:	test   cl,0xf
   140013382:	jne    0x140013392
   140013384:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140013388:	add    rcx,0x10
   14001338c:	sub    r8,0x10
   140013390:	jmp    0x1400133af
   140013392:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140013396:	add    rcx,0x20
   14001339a:	and    cl,0xf0
   14001339d:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   1400133a2:	movups XMMWORD PTR [r11],xmm1
   1400133a6:	mov    rax,rcx
   1400133a9:	sub    rax,r11
   1400133ac:	sub    r8,rax
   1400133af:	mov    r9,r8
   1400133b2:	shr    r9,0x7
   1400133b6:	je     0x14001341e
   1400133b8:	movaps XMMWORD PTR [rcx-0x10],xmm0
   1400133bc:	jmp    0x1400133c8
   1400133be:	xchg   ax,ax
   1400133c0:	movaps XMMWORD PTR [rcx-0x20],xmm0
   1400133c4:	movaps XMMWORD PTR [rcx-0x10],xmm1
   1400133c8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400133cc:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   1400133d1:	add    rcx,0x80
   1400133d8:	movaps XMMWORD PTR [rcx-0x80],xmm0
   1400133dc:	movaps XMMWORD PTR [rcx-0x70],xmm1
   1400133e0:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   1400133e5:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   1400133ea:	dec    r9
   1400133ed:	movaps XMMWORD PTR [rcx-0x60],xmm0
   1400133f1:	movaps XMMWORD PTR [rcx-0x50],xmm1
   1400133f5:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400133fa:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400133ff:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140013403:	movaps XMMWORD PTR [rcx-0x30],xmm1
   140013407:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   14001340c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140013411:	jne    0x1400133c0
   140013413:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140013417:	and    r8,0x7f
   14001341b:	movaps xmm0,xmm1
   14001341e:	mov    r9,r8
   140013421:	shr    r9,0x4
   140013425:	je     0x140013441
   140013427:	nop    WORD PTR [rax+rax*1+0x0]
   140013430:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140013434:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140013438:	add    rcx,0x10
   14001343c:	dec    r9
   14001343f:	jne    0x140013430
   140013441:	and    r8,0xf
   140013445:	je     0x140013454
   140013447:	lea    rax,[r8+rcx*1]
   14001344b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   140013450:	movups XMMWORD PTR [rax-0x10],xmm1
   140013454:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140013458:	mov    rax,r11
   14001345b:	ret    
   14001345c:	nop    DWORD PTR [rax+0x0]
   140013460:	movups xmm0,XMMWORD PTR [r10]
   140013464:	lea    rcx,[r8+rcx*1-0x10]
   140013469:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   14001346d:	movups XMMWORD PTR [r11],xmm0
   140013471:	movups XMMWORD PTR [rcx],xmm1
   140013474:	mov    rax,r11
   140013477:	ret    
   140013478:	nop    DWORD PTR [rax+rax*1+0x0]
   140013480:	data16 data16 xchg ax,ax
   140013484:	data16 data16 xchg ax,ax
   140013488:	xchg   ax,ax
   14001348a:	bt     DWORD PTR [rip+0x25f72],0x2        # 0x140039404
   140013492:	jb     0x140013551
   140013498:	add    rcx,r8
   14001349b:	test   cl,0x7
   14001349e:	je     0x1400134d6
   1400134a0:	test   cl,0x1
   1400134a3:	je     0x1400134b0
   1400134a5:	dec    rcx
   1400134a8:	mov    al,BYTE PTR [rdx+rcx*1]
   1400134ab:	dec    r8
   1400134ae:	mov    BYTE PTR [rcx],al
   1400134b0:	test   cl,0x2
   1400134b3:	je     0x1400134c4
   1400134b5:	sub    rcx,0x2
   1400134b9:	mov    ax,WORD PTR [rdx+rcx*1]
   1400134bd:	sub    r8,0x2
   1400134c1:	mov    WORD PTR [rcx],ax
   1400134c4:	test   cl,0x4
   1400134c7:	je     0x1400134d6
   1400134c9:	sub    rcx,0x4
   1400134cd:	mov    eax,DWORD PTR [rdx+rcx*1]
   1400134d0:	sub    r8,0x4
   1400134d4:	mov    DWORD PTR [rcx],eax
   1400134d6:	mov    r9,r8
   1400134d9:	shr    r9,0x5
   1400134dd:	jne    0x140013520
   1400134df:	mov    r9,r8
   1400134e2:	shr    r9,0x3
   1400134e6:	je     0x1400134fc
   1400134e8:	sub    rcx,0x8
   1400134ec:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400134f0:	dec    r9
   1400134f3:	mov    QWORD PTR [rcx],rax
   1400134f6:	jne    0x1400134e8
   1400134f8:	and    r8,0x7
   1400134fc:	test   r8,r8
   1400134ff:	jne    0x140013510
   140013501:	mov    rax,r11
   140013504:	ret    
   140013505:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013510:	sub    rcx,r8
   140013513:	mov    r10,rcx
   140013516:	lea    rdx,[rdx+rcx*1]
   14001351a:	jmp    0x14001319c
   14001351f:	nop
   140013520:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140013525:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14001352a:	sub    rcx,0x20
   14001352e:	mov    QWORD PTR [rcx+0x18],rax
   140013532:	mov    QWORD PTR [rcx+0x10],r10
   140013536:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14001353b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14001353f:	dec    r9
   140013542:	mov    QWORD PTR [rcx+0x8],rax
   140013546:	mov    QWORD PTR [rcx],r10
   140013549:	jne    0x140013520
   14001354b:	and    r8,0x1f
   14001354f:	jmp    0x1400134df
   140013551:	cmp    r8,0x20
   140013555:	jbe    0x140013460
   14001355b:	add    rcx,r8
   14001355e:	test   cl,0xf
   140013561:	jne    0x140013571
   140013563:	sub    rcx,0x10
   140013567:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14001356b:	sub    r8,0x10
   14001356f:	jmp    0x14001358c
   140013571:	sub    rcx,0x10
   140013575:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140013579:	mov    rax,rcx
   14001357c:	and    cl,0xf0
   14001357f:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140013583:	movups XMMWORD PTR [rax],xmm1
   140013586:	mov    r8,rcx
   140013589:	sub    r8,r11
   14001358c:	mov    r9,r8
   14001358f:	shr    r9,0x7
   140013593:	je     0x1400135fd
   140013595:	movaps XMMWORD PTR [rcx],xmm0
   140013598:	jmp    0x1400135a7
   14001359a:	nop    WORD PTR [rax+rax*1+0x0]
   1400135a0:	movaps XMMWORD PTR [rcx+0x10],xmm0
   1400135a4:	movaps XMMWORD PTR [rcx],xmm1
   1400135a7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   1400135ac:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   1400135b1:	sub    rcx,0x80
   1400135b8:	movaps XMMWORD PTR [rcx+0x70],xmm0
   1400135bc:	movaps XMMWORD PTR [rcx+0x60],xmm1
   1400135c0:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   1400135c5:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   1400135ca:	dec    r9
   1400135cd:	movaps XMMWORD PTR [rcx+0x50],xmm0
   1400135d1:	movaps XMMWORD PTR [rcx+0x40],xmm1
   1400135d5:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   1400135da:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   1400135df:	movaps XMMWORD PTR [rcx+0x30],xmm0
   1400135e3:	movaps XMMWORD PTR [rcx+0x20],xmm1
   1400135e7:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   1400135ec:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   1400135f0:	jne    0x1400135a0
   1400135f2:	movaps XMMWORD PTR [rcx+0x10],xmm0
   1400135f6:	and    r8,0x7f
   1400135fa:	movaps xmm0,xmm1
   1400135fd:	mov    r9,r8
   140013600:	shr    r9,0x4
   140013604:	je     0x140013620
   140013606:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013610:	movaps XMMWORD PTR [rcx],xmm0
   140013613:	sub    rcx,0x10
   140013617:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14001361b:	dec    r9
   14001361e:	jne    0x140013610
   140013620:	and    r8,0xf
   140013624:	je     0x14001362e
   140013626:	movups xmm1,XMMWORD PTR [r10]
   14001362a:	movups XMMWORD PTR [r11],xmm1
   14001362e:	movaps XMMWORD PTR [rcx],xmm0
   140013631:	mov    rax,r11
   140013634:	ret    
   140013635:	int3   
   140013636:	int3   
   140013637:	int3   
   140013638:	rex push rbx
   14001363a:	sub    rsp,0x20
   14001363e:	mov    edx,0x8
   140013643:	lea    ecx,[rdx+0x18]
   140013646:	call   0x140015d14
   14001364b:	mov    rcx,rax
   14001364e:	mov    rbx,rax
   140013651:	call   QWORD PTR [rip+0x13bb9]        # 0x140027210
   140013657:	mov    QWORD PTR [rip+0x27efa],rax        # 0x14003b558
   14001365e:	mov    QWORD PTR [rip+0x27eeb],rax        # 0x14003b550
   140013665:	test   rbx,rbx
   140013668:	jne    0x14001366f
   14001366a:	lea    eax,[rbx+0x18]
   14001366d:	jmp    0x140013675
   14001366f:	and    QWORD PTR [rbx],0x0
   140013673:	xor    eax,eax
   140013675:	add    rsp,0x20
   140013679:	pop    rbx
   14001367a:	ret    
   14001367b:	int3   
   14001367c:	mov    QWORD PTR [rsp+0x8],rbx
   140013681:	mov    QWORD PTR [rsp+0x10],rsi
   140013686:	mov    QWORD PTR [rsp+0x18],rdi
   14001368b:	push   r12
   14001368d:	push   r14
   14001368f:	push   r15
   140013691:	sub    rsp,0x20
   140013695:	mov    r12,rcx
   140013698:	call   0x140015b1c
   14001369d:	nop
   14001369e:	mov    rcx,QWORD PTR [rip+0x27eb3]        # 0x14003b558
   1400136a5:	call   QWORD PTR [rip+0x13a45]        # 0x1400270f0
   1400136ab:	mov    r14,rax
   1400136ae:	mov    rcx,QWORD PTR [rip+0x27e9b]        # 0x14003b550
   1400136b5:	call   QWORD PTR [rip+0x13a35]        # 0x1400270f0
   1400136bb:	mov    rbx,rax
   1400136be:	cmp    rax,r14
   1400136c1:	jb     0x140013762
   1400136c7:	mov    rdi,rax
   1400136ca:	sub    rdi,r14
   1400136cd:	lea    r15,[rdi+0x8]
   1400136d1:	cmp    r15,0x8
   1400136d5:	jb     0x140013762
   1400136db:	mov    rcx,r14
   1400136de:	call   0x140015cd8
   1400136e3:	mov    rsi,rax
   1400136e6:	cmp    rax,r15
   1400136e9:	jae    0x140013740
   1400136eb:	mov    edx,0x1000
   1400136f0:	cmp    rax,rdx
   1400136f3:	cmovb  rdx,rax
   1400136f7:	add    rdx,rax
   1400136fa:	cmp    rdx,rax
   1400136fd:	jb     0x140013710
   1400136ff:	mov    rcx,r14
   140013702:	call   0x140015e10
   140013707:	xor    ebx,ebx
   140013709:	test   rax,rax
   14001370c:	jne    0x140013728
   14001370e:	jmp    0x140013712
   140013710:	xor    ebx,ebx
   140013712:	lea    rdx,[rsi+0x20]
   140013716:	cmp    rdx,rsi
   140013719:	jb     0x140013764
   14001371b:	mov    rcx,r14
   14001371e:	call   0x140015e10
   140013723:	test   rax,rax
   140013726:	je     0x140013764
   140013728:	sar    rdi,0x3
   14001372c:	lea    rbx,[rax+rdi*8]
   140013730:	mov    rcx,rax
   140013733:	call   QWORD PTR [rip+0x13ad7]        # 0x140027210
   140013739:	mov    QWORD PTR [rip+0x27e18],rax        # 0x14003b558
   140013740:	mov    rcx,r12
   140013743:	call   QWORD PTR [rip+0x13ac7]        # 0x140027210
   140013749:	mov    QWORD PTR [rbx],rax
   14001374c:	lea    rcx,[rbx+0x8]
   140013750:	call   QWORD PTR [rip+0x13aba]        # 0x140027210
   140013756:	mov    QWORD PTR [rip+0x27df3],rax        # 0x14003b550
   14001375d:	mov    rbx,r12
   140013760:	jmp    0x140013764
   140013762:	xor    ebx,ebx
   140013764:	call   0x140015b28
   140013769:	mov    rax,rbx
   14001376c:	mov    rbx,QWORD PTR [rsp+0x40]
   140013771:	mov    rsi,QWORD PTR [rsp+0x48]
   140013776:	mov    rdi,QWORD PTR [rsp+0x50]
   14001377b:	add    rsp,0x20
   14001377f:	pop    r15
   140013781:	pop    r14
   140013783:	pop    r12
   140013785:	ret    
   140013786:	int3   
   140013787:	int3   
   140013788:	sub    rsp,0x28
   14001378c:	call   0x14001367c
   140013791:	neg    rax
   140013794:	sbb    eax,eax
   140013796:	neg    eax
   140013798:	dec    eax
   14001379a:	add    rsp,0x28
   14001379e:	ret    
   14001379f:	int3   
   1400137a0:	sub    rsp,0x28
   1400137a4:	mov    rcx,QWORD PTR [rip+0x25cbd]        # 0x140039468
   1400137ab:	call   QWORD PTR [rip+0x1393f]        # 0x1400270f0
   1400137b1:	test   rax,rax
   1400137b4:	je     0x1400137b8
   1400137b6:	call   rax
   1400137b8:	mov    edx,0x1
   1400137bd:	xor    ecx,ecx
   1400137bf:	call   0x1400160fc
   1400137c4:	call   0x140016118
   1400137c9:	int3   
   1400137ca:	int3   
   1400137cb:	int3   
   1400137cc:	jmp    0x14001392c
   1400137d1:	int3   
   1400137d2:	int3   
   1400137d3:	int3   
   1400137d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400137d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400137de:	push   rdi
   1400137df:	sub    rsp,0x20
   1400137e3:	mov    rbx,r9
   1400137e6:	mov    rsi,r8
   1400137e9:	mov    rdi,rdx
   1400137ec:	test   r9,r9
   1400137ef:	jne    0x1400137f5
   1400137f1:	xor    eax,eax
   1400137f3:	jmp    0x14001384b
   1400137f5:	test   rcx,rcx
   1400137f8:	jne    0x14001380f
   1400137fa:	call   0x1400161e8
   1400137ff:	mov    ebx,0x16
   140013804:	mov    DWORD PTR [rax],ebx
   140013806:	call   0x140013f54
   14001380b:	mov    eax,ebx
   14001380d:	jmp    0x14001384b
   14001380f:	test   r8,r8
   140013812:	je     0x140013826
   140013814:	cmp    rdx,rbx
   140013817:	jb     0x140013826
   140013819:	mov    r8,rbx
   14001381c:	mov    rdx,rsi
   14001381f:	call   0x1400130d0
   140013824:	jmp    0x1400137f1
   140013826:	mov    r8,rdx
   140013829:	xor    edx,edx
   14001382b:	call   0x140014d80
   140013830:	test   rsi,rsi
   140013833:	je     0x1400137fa
   140013835:	cmp    rdi,rbx
   140013838:	jae    0x140013846
   14001383a:	call   0x1400161e8
   14001383f:	mov    ebx,0x22
   140013844:	jmp    0x140013804
   140013846:	mov    eax,0x16
   14001384b:	mov    rbx,QWORD PTR [rsp+0x30]
   140013850:	mov    rsi,QWORD PTR [rsp+0x38]
   140013855:	add    rsp,0x20
   140013859:	pop    rdi
   14001385a:	ret    
   14001385b:	int3   
   14001385c:	sub    rsp,0x28
   140013860:	mov    rax,rdx
   140013863:	lea    rdx,[rcx+0x11]
   140013867:	lea    rcx,[rax+0x11]
   14001386b:	call   0x140016270
   140013870:	test   eax,eax
   140013872:	sete   al
   140013875:	add    rsp,0x28
   140013879:	ret    
   14001387a:	int3   
   14001387b:	int3   
   14001387c:	mov    QWORD PTR [rsp+0x8],rbx
   140013881:	push   rdi
   140013882:	sub    rsp,0x20
   140013886:	lea    rax,[rip+0x15613]        # 0x140028ea0
   14001388d:	mov    ebx,edx
   14001388f:	mov    rdi,rcx
   140013892:	mov    QWORD PTR [rcx],rax
   140013895:	call   0x1400162d8
   14001389a:	test   bl,0x1
   14001389d:	je     0x1400138a7
   14001389f:	mov    rcx,rdi
   1400138a2:	call   0x1400137cc
   1400138a7:	mov    rax,rdi
   1400138aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400138af:	add    rsp,0x20
   1400138b3:	pop    rdi
   1400138b4:	ret    
   1400138b5:	int3   
   1400138b6:	int3   
   1400138b7:	int3   
   1400138b8:	rex push rbx
   1400138ba:	sub    rsp,0x40
   1400138be:	mov    rbx,rcx
   1400138c1:	jmp    0x1400138d2
   1400138c3:	mov    rcx,rbx
   1400138c6:	call   0x140016344
   1400138cb:	test   eax,eax
   1400138cd:	je     0x1400138e2
   1400138cf:	mov    rcx,rbx
   1400138d2:	call   0x14001396c
   1400138d7:	test   rax,rax
   1400138da:	je     0x1400138c3
   1400138dc:	add    rsp,0x40
   1400138e0:	pop    rbx
   1400138e1:	ret    
   1400138e2:	lea    rax,[rip+0x1554f]        # 0x140028e38
   1400138e9:	lea    rdx,[rsp+0x58]
   1400138ee:	lea    rcx,[rsp+0x20]
   1400138f3:	mov    r8d,0x1
   1400138f9:	mov    QWORD PTR [rsp+0x58],rax
   1400138fe:	call   0x140015408
   140013903:	lea    rax,[rip+0x1551e]        # 0x140028e28
   14001390a:	lea    rdx,[rip+0x21a3f]        # 0x140035350
   140013911:	lea    rcx,[rsp+0x20]
   140013916:	mov    QWORD PTR [rsp+0x20],rax
   14001391b:	call   0x14001436c
   140013920:	int3   
   140013921:	int3   
   140013922:	int3   
   140013923:	int3   
   140013924:	jmp    0x1400137cc
   140013929:	int3   
   14001392a:	int3   
   14001392b:	int3   
   14001392c:	test   rcx,rcx
   14001392f:	je     0x140013968
   140013931:	push   rbx
   140013932:	sub    rsp,0x20
   140013936:	mov    r8,rcx
   140013939:	mov    rcx,QWORD PTR [rip+0x25b48]        # 0x140039488
   140013940:	xor    edx,edx
   140013942:	call   QWORD PTR [rip+0x138d0]        # 0x140027218
   140013948:	test   eax,eax
   14001394a:	jne    0x140013963
   14001394c:	call   0x1400161e8
   140013951:	mov    rbx,rax
   140013954:	call   QWORD PTR [rip+0x13706]        # 0x140027060
   14001395a:	mov    ecx,eax
   14001395c:	call   0x140016208
   140013961:	mov    DWORD PTR [rbx],eax
   140013963:	add    rsp,0x20
   140013967:	pop    rbx
   140013968:	ret    
   140013969:	int3   
   14001396a:	int3   
   14001396b:	int3   
   14001396c:	mov    QWORD PTR [rsp+0x8],rbx
   140013971:	mov    QWORD PTR [rsp+0x10],rsi
   140013976:	push   rdi
   140013977:	sub    rsp,0x20
   14001397b:	mov    rbx,rcx
   14001397e:	cmp    rcx,0xffffffffffffffe0
   140013982:	ja     0x140013a00
   140013984:	mov    edi,0x1
   140013989:	test   rcx,rcx
   14001398c:	cmovne rdi,rcx
   140013990:	mov    rcx,QWORD PTR [rip+0x25af1]        # 0x140039488
   140013997:	test   rcx,rcx
   14001399a:	jne    0x1400139bc
   14001399c:	call   0x1400163a0
   1400139a1:	mov    ecx,0x1e
   1400139a6:	call   0x140016414
   1400139ab:	mov    ecx,0xff
   1400139b0:	call   0x140015930
   1400139b5:	mov    rcx,QWORD PTR [rip+0x25acc]        # 0x140039488
   1400139bc:	mov    r8,rdi
   1400139bf:	xor    edx,edx
   1400139c1:	call   QWORD PTR [rip+0x13859]        # 0x140027220
   1400139c7:	mov    rsi,rax
   1400139ca:	test   rax,rax
   1400139cd:	jne    0x1400139fb
   1400139cf:	cmp    DWORD PTR [rip+0x260f3],eax        # 0x140039ac8
   1400139d5:	je     0x1400139e5
   1400139d7:	mov    rcx,rbx
   1400139da:	call   0x140016344
   1400139df:	test   eax,eax
   1400139e1:	je     0x1400139f0
   1400139e3:	jmp    0x140013990
   1400139e5:	call   0x1400161e8
   1400139ea:	mov    DWORD PTR [rax],0xc
   1400139f0:	call   0x1400161e8
   1400139f5:	mov    DWORD PTR [rax],0xc
   1400139fb:	mov    rax,rsi
   1400139fe:	jmp    0x140013a12
   140013a00:	call   0x140016344
   140013a05:	call   0x1400161e8
   140013a0a:	mov    DWORD PTR [rax],0xc
   140013a10:	xor    eax,eax
   140013a12:	mov    rbx,QWORD PTR [rsp+0x30]
   140013a17:	mov    rsi,QWORD PTR [rsp+0x38]
   140013a1c:	add    rsp,0x20
   140013a20:	pop    rdi
   140013a21:	ret    
   140013a22:	int3   
   140013a23:	int3   
   140013a24:	mov    QWORD PTR [rsp+0x10],rbx
   140013a29:	mov    QWORD PTR [rsp+0x18],r8
   140013a2e:	push   rbp
   140013a2f:	push   rsi
   140013a30:	push   rdi
   140013a31:	push   r12
   140013a33:	push   r13
   140013a35:	push   r14
   140013a37:	push   r15
   140013a39:	sub    rsp,0x20
   140013a3d:	mov    r14,QWORD PTR [rsp+0x98]
   140013a45:	mov    r15,QWORD PTR [rsp+0x88]
   140013a4d:	mov    rdi,rcx
   140013a50:	xor    ecx,ecx
   140013a52:	mov    r13,r9
   140013a55:	mov    rsi,r8
   140013a58:	mov    r9d,ecx
   140013a5b:	mov    DWORD PTR [rsp+0x60],ecx
   140013a5f:	mov    r12,rdx
   140013a62:	test   rdi,rdi
   140013a65:	je     0x140013a71
   140013a67:	test   rdx,rdx
   140013a6a:	jne    0x140013a7c
   140013a6c:	test   r8,r8
   140013a6f:	je     0x140013a81
   140013a71:	mov    r9d,0x1
   140013a77:	jmp    0x140013c49
   140013a7c:	test   r8,r8
   140013a7f:	je     0x140013a71
   140013a81:	test   r13,r13
   140013a84:	jne    0x140013a92
   140013a86:	cmp    QWORD PTR [rsp+0x80],rcx
   140013a8e:	jne    0x140013a71
   140013a90:	jmp    0x140013a9c
   140013a92:	cmp    QWORD PTR [rsp+0x80],rcx
   140013a9a:	je     0x140013a71
   140013a9c:	test   r15,r15
   140013a9f:	jne    0x140013aad
   140013aa1:	cmp    QWORD PTR [rsp+0x90],rcx
   140013aa9:	jne    0x140013a71
   140013aab:	jmp    0x140013ab7
   140013aad:	cmp    QWORD PTR [rsp+0x90],rcx
   140013ab5:	je     0x140013a71
   140013ab7:	test   r14,r14
   140013aba:	jne    0x140013ac8
   140013abc:	cmp    QWORD PTR [rsp+0xa0],rcx
   140013ac4:	jne    0x140013a71
   140013ac6:	jmp    0x140013ad2
   140013ac8:	cmp    QWORD PTR [rsp+0xa0],rcx
   140013ad0:	je     0x140013a71
   140013ad2:	mov    eax,0x1
   140013ad7:	mov    rbx,rdi
   140013ada:	cmp    WORD PTR [rbx],cx
   140013add:	je     0x140013ae8
   140013adf:	add    rbx,0x2
   140013ae3:	dec    rax
   140013ae6:	jne    0x140013ada
   140013ae8:	cmp    WORD PTR [rbx],0x3a
   140013aec:	jne    0x140013b19
   140013aee:	test   rdx,rdx
   140013af1:	je     0x140013b13
   140013af3:	cmp    r8,0x3
   140013af7:	jb     0x140013c49
   140013afd:	mov    r9d,0x2
   140013b03:	mov    r8,rdi
   140013b06:	mov    rdx,rsi
   140013b09:	mov    rcx,r12
   140013b0c:	call   0x140016684
   140013b11:	xor    ecx,ecx
   140013b13:	lea    rdi,[rbx+0x2]
   140013b17:	jmp    0x140013b21
   140013b19:	test   rdx,rdx
   140013b1c:	je     0x140013b21
   140013b1e:	mov    WORD PTR [rdx],cx
   140013b21:	movzx  eax,WORD PTR [rdi]
   140013b24:	mov    rbp,rcx
   140013b27:	mov    rsi,rcx
   140013b2a:	mov    rbx,rdi
   140013b2d:	test   ax,ax
   140013b30:	je     0x140013b94
   140013b32:	cmp    ax,0x2f
   140013b36:	je     0x140013b49
   140013b38:	cmp    ax,0x5c
   140013b3c:	je     0x140013b49
   140013b3e:	cmp    ax,0x2e
   140013b42:	jne    0x140013b4d
   140013b44:	mov    rsi,rbx
   140013b47:	jmp    0x140013b4d
   140013b49:	lea    rbp,[rbx+0x2]
   140013b4d:	add    rbx,0x2
   140013b51:	movzx  eax,WORD PTR [rbx]
   140013b54:	test   ax,ax
   140013b57:	jne    0x140013b32
   140013b59:	test   rbp,rbp
   140013b5c:	je     0x140013b94
   140013b5e:	test   r13,r13
   140013b61:	je     0x140013b8f
   140013b63:	mov    r9,rbp
   140013b66:	sub    r9,rdi
   140013b69:	sar    r9,1
   140013b6c:	cmp    QWORD PTR [rsp+0x80],r9
   140013b74:	jbe    0x140013c3f
   140013b7a:	mov    rdx,QWORD PTR [rsp+0x80]
   140013b82:	mov    r8,rdi
   140013b85:	mov    rcx,r13
   140013b88:	call   0x140016684
   140013b8d:	xor    ecx,ecx
   140013b8f:	mov    rdi,rbp
   140013b92:	jmp    0x140013b9e
   140013b94:	test   r13,r13
   140013b97:	je     0x140013b9e
   140013b99:	mov    WORD PTR [r13+0x0],cx
   140013b9e:	test   rsi,rsi
   140013ba1:	je     0x140013c02
   140013ba3:	cmp    rsi,rdi
   140013ba6:	jb     0x140013c02
   140013ba8:	test   r15,r15
   140013bab:	je     0x140013bd5
   140013bad:	mov    r9,rsi
   140013bb0:	sub    r9,rdi
   140013bb3:	sar    r9,1
   140013bb6:	cmp    QWORD PTR [rsp+0x90],r9
   140013bbe:	jbe    0x140013c3f
   140013bc0:	mov    rdx,QWORD PTR [rsp+0x90]
   140013bc8:	mov    r8,rdi
   140013bcb:	mov    rcx,r15
   140013bce:	call   0x140016684
   140013bd3:	xor    ecx,ecx
   140013bd5:	test   r14,r14
   140013bd8:	je     0x140013c38
   140013bda:	sub    rbx,rsi
   140013bdd:	sar    rbx,1
   140013be0:	cmp    QWORD PTR [rsp+0xa0],rbx
   140013be8:	jbe    0x140013c3f
   140013bea:	mov    rdx,QWORD PTR [rsp+0xa0]
   140013bf2:	mov    r9,rbx
   140013bf5:	mov    r8,rsi
   140013bf8:	mov    rcx,r14
   140013bfb:	call   0x140016684
   140013c00:	jmp    0x140013c38
   140013c02:	test   r15,r15
   140013c05:	je     0x140013c2f
   140013c07:	sub    rbx,rdi
   140013c0a:	sar    rbx,1
   140013c0d:	cmp    QWORD PTR [rsp+0x90],rbx
   140013c15:	jbe    0x140013c3f
   140013c17:	mov    rdx,QWORD PTR [rsp+0x90]
   140013c1f:	mov    r9,rbx
   140013c22:	mov    r8,rdi
   140013c25:	mov    rcx,r15
   140013c28:	call   0x140016684
   140013c2d:	xor    ecx,ecx
   140013c2f:	test   r14,r14
   140013c32:	je     0x140013c38
   140013c34:	mov    WORD PTR [r14],cx
   140013c38:	xor    eax,eax
   140013c3a:	jmp    0x140013cbf
   140013c3f:	mov    r9d,DWORD PTR [rsp+0x60]
   140013c44:	mov    rsi,QWORD PTR [rsp+0x70]
   140013c49:	test   r12,r12
   140013c4c:	je     0x140013c58
   140013c4e:	test   rsi,rsi
   140013c51:	je     0x140013c58
   140013c53:	mov    WORD PTR [r12],cx
   140013c58:	test   r13,r13
   140013c5b:	je     0x140013c6c
   140013c5d:	cmp    QWORD PTR [rsp+0x80],rcx
   140013c65:	jbe    0x140013c6c
   140013c67:	mov    WORD PTR [r13+0x0],cx
   140013c6c:	test   r15,r15
   140013c6f:	je     0x140013c7f
   140013c71:	cmp    QWORD PTR [rsp+0x90],rcx
   140013c79:	jbe    0x140013c7f
   140013c7b:	mov    WORD PTR [r15],cx
   140013c7f:	test   r14,r14
   140013c82:	je     0x140013c92
   140013c84:	cmp    QWORD PTR [rsp+0xa0],rcx
   140013c8c:	jbe    0x140013c92
   140013c8e:	mov    WORD PTR [r14],cx
   140013c92:	test   rdi,rdi
   140013c95:	jne    0x140013cac
   140013c97:	call   0x1400161e8
   140013c9c:	mov    ebx,0x16
   140013ca1:	mov    DWORD PTR [rax],ebx
   140013ca3:	call   0x140013f54
   140013ca8:	mov    eax,ebx
   140013caa:	jmp    0x140013cbf
   140013cac:	test   r9d,r9d
   140013caf:	jne    0x140013c97
   140013cb1:	call   0x1400161e8
   140013cb6:	mov    ecx,0x22
   140013cbb:	mov    DWORD PTR [rax],ecx
   140013cbd:	mov    eax,ecx
   140013cbf:	mov    rbx,QWORD PTR [rsp+0x68]
   140013cc4:	add    rsp,0x20
   140013cc8:	pop    r15
   140013cca:	pop    r14
   140013ccc:	pop    r13
   140013cce:	pop    r12
   140013cd0:	pop    rdi
   140013cd1:	pop    rsi
   140013cd2:	pop    rbp
   140013cd3:	ret    
   140013cd4:	mov    QWORD PTR [rsp+0x20],rbx
   140013cd9:	push   rdi
   140013cda:	sub    rsp,0x50
   140013cde:	mov    rax,QWORD PTR [rip+0x2332b]        # 0x140037010
   140013ce5:	xor    rax,rsp
   140013ce8:	mov    QWORD PTR [rsp+0x40],rax
   140013ced:	xor    edi,edi
   140013cef:	mov    r11,r8
   140013cf2:	mov    rbx,rdx
   140013cf5:	mov    r10,rcx
   140013cf8:	test   r8,r8
   140013cfb:	jne    0x140013d27
   140013cfd:	call   0x1400161e8
   140013d02:	mov    DWORD PTR [rax],0x16
   140013d08:	call   0x140013f54
   140013d0d:	xor    eax,eax
   140013d0f:	mov    rcx,QWORD PTR [rsp+0x40]
   140013d14:	xor    rcx,rsp
   140013d17:	call   0x1400130a0
   140013d1c:	mov    rbx,QWORD PTR [rsp+0x78]
   140013d21:	add    rsp,0x50
   140013d25:	pop    rdi
   140013d26:	ret    
   140013d27:	test   rdx,rdx
   140013d2a:	je     0x140013cfd
   140013d2c:	test   rcx,rcx
   140013d2f:	jne    0x140013d36
   140013d31:	cmp    QWORD PTR [r8],rdi
   140013d34:	je     0x140013cfd
   140013d36:	mov    rax,rdi
   140013d39:	cmp    rax,0x20
   140013d3d:	jae    0x140013de9
   140013d43:	mov    BYTE PTR [rsp+rax*1+0x20],dil
   140013d48:	inc    rax
   140013d4b:	cmp    rax,0x20
   140013d4f:	jl     0x140013d3d
   140013d51:	movzx  r9d,BYTE PTR [rbx]
   140013d55:	mov    edx,0x1
   140013d5a:	inc    rbx
   140013d5d:	mov    ecx,r9d
   140013d60:	mov    r8d,r9d
   140013d63:	and    ecx,0x7
   140013d66:	shr    r8,0x3
   140013d6a:	shl    dl,cl
   140013d6c:	or     BYTE PTR [rsp+r8*1+0x20],dl
   140013d71:	test   r9b,r9b
   140013d74:	jne    0x140013d51
   140013d76:	test   r10,r10
   140013d79:	jne    0x140013d88
   140013d7b:	mov    r10,QWORD PTR [r11]
   140013d7e:	jmp    0x140013d88
   140013d80:	test   r8b,r8b
   140013d83:	je     0x140013da6
   140013d85:	inc    r10
   140013d88:	movzx  r8d,BYTE PTR [r10]
   140013d8c:	mov    edx,0x1
   140013d91:	mov    ecx,r8d
   140013d94:	mov    eax,r8d
   140013d97:	and    ecx,0x7
   140013d9a:	shr    rax,0x3
   140013d9e:	shl    edx,cl
   140013da0:	test   BYTE PTR [rsp+rax*1+0x20],dl
   140013da4:	jne    0x140013d80
   140013da6:	mov    r9,r10
   140013da9:	jmp    0x140013dca
   140013dab:	movzx  r8d,BYTE PTR [r10]
   140013daf:	mov    edx,0x1
   140013db4:	mov    ecx,r8d
   140013db7:	shr    r8,0x3
   140013dbb:	and    ecx,0x7
   140013dbe:	shl    edx,cl
   140013dc0:	test   BYTE PTR [rsp+r8*1+0x20],dl
   140013dc5:	jne    0x140013dd1
   140013dc7:	inc    r10
   140013dca:	cmp    BYTE PTR [r10],dil
   140013dcd:	jne    0x140013dab
   140013dcf:	jmp    0x140013dd7
   140013dd1:	mov    BYTE PTR [r10],dil
   140013dd4:	inc    r10
   140013dd7:	cmp    r9,r10
   140013dda:	mov    QWORD PTR [r11],r10
   140013ddd:	cmove  r9,rdi
   140013de1:	mov    rax,r9
   140013de4:	jmp    0x140013d0f
   140013de9:	call   0x140015698
   140013dee:	int3   
   140013def:	int3   
   140013df0:	mov    rax,rsp
   140013df3:	mov    QWORD PTR [rax+0x10],rbx
   140013df7:	mov    QWORD PTR [rax+0x18],rsi
   140013dfb:	mov    QWORD PTR [rax+0x20],rdi
   140013dff:	push   rbp
   140013e00:	lea    rbp,[rax-0x4b8]
   140013e07:	sub    rsp,0x5b0
   140013e0e:	mov    rax,QWORD PTR [rip+0x231fb]        # 0x140037010
   140013e15:	xor    rax,rsp
   140013e18:	mov    QWORD PTR [rbp+0x4a0],rax
   140013e1f:	mov    edi,r8d
   140013e22:	mov    esi,edx
   140013e24:	mov    ebx,ecx
   140013e26:	cmp    ecx,0xffffffff
   140013e29:	je     0x140013e30
   140013e2b:	call   0x140016e18
   140013e30:	and    DWORD PTR [rsp+0x30],0x0
   140013e35:	lea    rcx,[rsp+0x34]
   140013e3a:	xor    edx,edx
   140013e3c:	mov    r8d,0x94
   140013e42:	call   0x140014d80
   140013e47:	lea    rax,[rsp+0x30]
   140013e4c:	lea    rcx,[rbp-0x30]
   140013e50:	mov    QWORD PTR [rsp+0x20],rax
   140013e55:	lea    rax,[rbp-0x30]
   140013e59:	mov    QWORD PTR [rsp+0x28],rax
   140013e5e:	call   0x1400167d4
   140013e63:	mov    rax,QWORD PTR [rbp+0x4b8]
   140013e6a:	mov    QWORD PTR [rbp+0xc8],rax
   140013e71:	lea    rax,[rbp+0x4b8]
   140013e78:	mov    DWORD PTR [rsp+0x30],esi
   140013e7c:	add    rax,0x8
   140013e80:	mov    DWORD PTR [rsp+0x34],edi
   140013e84:	mov    QWORD PTR [rbp+0x68],rax
   140013e88:	mov    rax,QWORD PTR [rbp+0x4b8]
   140013e8f:	mov    QWORD PTR [rsp+0x40],rax
   140013e94:	call   QWORD PTR [rip+0x1338e]        # 0x140027228
   140013e9a:	lea    rcx,[rsp+0x20]
   140013e9f:	mov    edi,eax
   140013ea1:	call   0x140016df8
   140013ea6:	test   eax,eax
   140013ea8:	jne    0x140013eba
   140013eaa:	test   edi,edi
   140013eac:	jne    0x140013eba
   140013eae:	cmp    ebx,0xffffffff
   140013eb1:	je     0x140013eba
   140013eb3:	mov    ecx,ebx
   140013eb5:	call   0x140016e18
   140013eba:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140013ec1:	xor    rcx,rsp
   140013ec4:	call   0x1400130a0
   140013ec9:	lea    r11,[rsp+0x5b0]
   140013ed1:	mov    rbx,QWORD PTR [r11+0x18]
   140013ed5:	mov    rsi,QWORD PTR [r11+0x20]
   140013ed9:	mov    rdi,QWORD PTR [r11+0x28]
   140013edd:	mov    rsp,r11
   140013ee0:	pop    rbp
   140013ee1:	ret    
   140013ee2:	int3   
   140013ee3:	int3   
   140013ee4:	mov    QWORD PTR [rip+0x24f7d],rcx        # 0x140038e68
   140013eeb:	ret    
   140013eec:	mov    QWORD PTR [rsp+0x8],rbx
   140013ef1:	mov    QWORD PTR [rsp+0x10],rbp
   140013ef6:	mov    QWORD PTR [rsp+0x18],rsi
   140013efb:	push   rdi
   140013efc:	sub    rsp,0x30
   140013f00:	mov    rbp,rcx
   140013f03:	mov    rcx,QWORD PTR [rip+0x24f5e]        # 0x140038e68
   140013f0a:	mov    ebx,r9d
   140013f0d:	mov    rdi,r8
   140013f10:	mov    rsi,rdx
   140013f13:	call   QWORD PTR [rip+0x131d7]        # 0x1400270f0
   140013f19:	mov    r9d,ebx
   140013f1c:	mov    r8,rdi
   140013f1f:	mov    rdx,rsi
   140013f22:	mov    rcx,rbp
   140013f25:	test   rax,rax
   140013f28:	je     0x140013f41
   140013f2a:	mov    rbx,QWORD PTR [rsp+0x40]
   140013f2f:	mov    rbp,QWORD PTR [rsp+0x48]
   140013f34:	mov    rsi,QWORD PTR [rsp+0x50]
   140013f39:	add    rsp,0x30
   140013f3d:	pop    rdi
   140013f3e:	rex.W jmp rax
   140013f41:	mov    rax,QWORD PTR [rsp+0x60]
   140013f46:	mov    QWORD PTR [rsp+0x20],rax
   140013f4b:	call   0x140013f74
   140013f50:	int3   
   140013f51:	int3   
   140013f52:	int3   
   140013f53:	int3   
   140013f54:	sub    rsp,0x38
   140013f58:	and    QWORD PTR [rsp+0x20],0x0
   140013f5e:	xor    r9d,r9d
   140013f61:	xor    r8d,r8d
   140013f64:	xor    edx,edx
   140013f66:	xor    ecx,ecx
   140013f68:	call   0x140013eec
   140013f6d:	add    rsp,0x38
   140013f71:	ret    
   140013f72:	int3   
   140013f73:	int3   
   140013f74:	sub    rsp,0x28
   140013f78:	mov    ecx,0x17
   140013f7d:	call   0x1400242cc
   140013f82:	test   eax,eax
   140013f84:	je     0x140013f8d
   140013f86:	mov    ecx,0x5
   140013f8b:	int    0x29
   140013f8d:	mov    r8d,0x1
   140013f93:	mov    edx,0xc0000417
   140013f98:	lea    ecx,[r8+0x1]
   140013f9c:	call   0x140013df0
   140013fa1:	mov    ecx,0xc0000417
   140013fa6:	add    rsp,0x28
   140013faa:	jmp    0x140016dd8
   140013faf:	int3   
   140013fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140013fb5:	push   rdi
   140013fb6:	sub    rsp,0x20
   140013fba:	mov    rdi,rcx
   140013fbd:	mov    rcx,QWORD PTR [rip+0x24ea4]        # 0x140038e68
   140013fc4:	call   QWORD PTR [rip+0x13126]        # 0x1400270f0
   140013fca:	mov    rcx,rdi
   140013fcd:	mov    rbx,rax
   140013fd0:	call   QWORD PTR [rip+0x1323a]        # 0x140027210
   140013fd6:	mov    QWORD PTR [rip+0x24e8b],rax        # 0x140038e68
   140013fdd:	mov    rax,rbx
   140013fe0:	mov    rbx,QWORD PTR [rsp+0x30]
   140013fe5:	add    rsp,0x20
   140013fe9:	pop    rdi
   140013fea:	ret    
   140013feb:	int3   
   140013fec:	sub    rsp,0x28
   140013ff0:	xor    r11d,r11d
   140013ff3:	mov    r10,r8
   140013ff6:	mov    r9,rdx
   140013ff9:	test   r8,r8
   140013ffc:	jne    0x140014015
   140013ffe:	call   0x1400161e8
   140014003:	mov    DWORD PTR [rax],0x16
   140014009:	call   0x140013f54
   14001400e:	xor    eax,eax
   140014010:	jmp    0x1400140a6
   140014015:	test   rdx,rdx
   140014018:	je     0x140013ffe
   14001401a:	test   rcx,rcx
   14001401d:	jne    0x140014054
   14001401f:	mov    rcx,QWORD PTR [r8]
   140014022:	test   rcx,rcx
   140014025:	jne    0x140014054
   140014027:	jmp    0x140013ffe
   140014029:	mov    rdx,r9
   14001402c:	cmp    WORD PTR [r9],r11w
   140014030:	je     0x14001404a
   140014032:	movzx  r8d,WORD PTR [r9]
   140014036:	cmp    r8w,ax
   14001403a:	je     0x14001404a
   14001403c:	add    rdx,0x2
   140014040:	movzx  r8d,WORD PTR [rdx]
   140014044:	test   r8w,r8w
   140014048:	jne    0x140014036
   14001404a:	cmp    WORD PTR [rdx],r11w
   14001404e:	je     0x14001405c
   140014050:	add    rcx,0x2
   140014054:	movzx  eax,WORD PTR [rcx]
   140014057:	test   ax,ax
   14001405a:	jne    0x140014029
   14001405c:	mov    rax,rcx
   14001405f:	jmp    0x14001408c
   140014061:	mov    rdx,r9
   140014064:	cmp    WORD PTR [r9],r11w
   140014068:	je     0x140014082
   14001406a:	movzx  r8d,WORD PTR [r9]
   14001406e:	cmp    r8w,WORD PTR [rcx]
   140014072:	je     0x140014082
   140014074:	add    rdx,0x2
   140014078:	movzx  r8d,WORD PTR [rdx]
   14001407c:	test   r8w,r8w
   140014080:	jne    0x14001406e
   140014082:	cmp    WORD PTR [rdx],r11w
   140014086:	jne    0x140014094
   140014088:	add    rcx,0x2
   14001408c:	cmp    WORD PTR [rcx],r11w
   140014090:	jne    0x140014061
   140014092:	jmp    0x14001409c
   140014094:	mov    WORD PTR [rcx],r11w
   140014098:	add    rcx,0x2
   14001409c:	cmp    rax,rcx
   14001409f:	mov    QWORD PTR [r10],rcx
   1400140a2:	cmove  rax,r11
   1400140a6:	add    rsp,0x28
   1400140aa:	ret    
   1400140ab:	int3   
   1400140ac:	rex push rbx
   1400140ae:	sub    rsp,0x20
   1400140b2:	xor    r10d,r10d
   1400140b5:	mov    r9,rcx
   1400140b8:	test   rcx,rcx
   1400140bb:	je     0x1400140cb
   1400140bd:	test   rdx,rdx
   1400140c0:	je     0x1400140cb
   1400140c2:	test   r8,r8
   1400140c5:	jne    0x1400140e4
   1400140c7:	mov    WORD PTR [rcx],r10w
   1400140cb:	call   0x1400161e8
   1400140d0:	mov    ebx,0x16
   1400140d5:	mov    DWORD PTR [rax],ebx
   1400140d7:	call   0x140013f54
   1400140dc:	mov    eax,ebx
   1400140de:	add    rsp,0x20
   1400140e2:	pop    rbx
   1400140e3:	ret    
   1400140e4:	cmp    WORD PTR [rcx],r10w
   1400140e8:	je     0x1400140f3
   1400140ea:	add    rcx,0x2
   1400140ee:	dec    rdx
   1400140f1:	jne    0x1400140e4
   1400140f3:	test   rdx,rdx
   1400140f6:	jne    0x1400140fe
   1400140f8:	mov    WORD PTR [r9],r10w
   1400140fc:	jmp    0x1400140cb
   1400140fe:	sub    rcx,r8
   140014101:	movzx  eax,WORD PTR [r8]
   140014105:	mov    WORD PTR [rcx+r8*1],ax
   14001410a:	lea    r8,[r8+0x2]
   14001410e:	test   ax,ax
   140014111:	je     0x140014118
   140014113:	dec    rdx
   140014116:	jne    0x140014101
   140014118:	test   rdx,rdx
   14001411b:	jne    0x14001412d
   14001411d:	mov    WORD PTR [r9],r10w
   140014121:	call   0x1400161e8
   140014126:	mov    ebx,0x22
   14001412b:	jmp    0x1400140d5
   14001412d:	xor    eax,eax
   14001412f:	jmp    0x1400140de
   140014131:	int3   
   140014132:	int3   
   140014133:	int3   
   140014134:	rex push rbx
   140014136:	sub    rsp,0x20
   14001413a:	xor    r10d,r10d
   14001413d:	test   rcx,rcx
   140014140:	je     0x140014150
   140014142:	test   rdx,rdx
   140014145:	je     0x140014150
   140014147:	test   r8,r8
   14001414a:	jne    0x140014169
   14001414c:	mov    WORD PTR [rcx],r10w
   140014150:	call   0x1400161e8
   140014155:	mov    ebx,0x16
   14001415a:	mov    DWORD PTR [rax],ebx
   14001415c:	call   0x140013f54
   140014161:	mov    eax,ebx
   140014163:	add    rsp,0x20
   140014167:	pop    rbx
   140014168:	ret    
   140014169:	mov    r9,rcx
   14001416c:	sub    r9,r8
   14001416f:	movzx  eax,WORD PTR [r8]
   140014173:	mov    WORD PTR [r9+r8*1],ax
   140014178:	lea    r8,[r8+0x2]
   14001417c:	test   ax,ax
   14001417f:	je     0x140014186
   140014181:	dec    rdx
   140014184:	jne    0x14001416f
   140014186:	test   rdx,rdx
   140014189:	jne    0x14001419b
   14001418b:	mov    WORD PTR [rcx],r10w
   14001418f:	call   0x1400161e8
   140014194:	mov    ebx,0x22
   140014199:	jmp    0x14001415a
   14001419b:	xor    eax,eax
   14001419d:	jmp    0x140014163
   14001419f:	int3   
   1400141a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400141a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400141aa:	push   rdi
   1400141ab:	sub    rsp,0x30
   1400141af:	call   0x140016928
   1400141b4:	movzx  esi,ax
   1400141b7:	mov    ecx,0x2
   1400141bc:	call   0x140017a70
   1400141c1:	mov    eax,0x5a4d
   1400141c6:	lea    rdi,[rip+0xfffffffffffebe33]        # 0x140000000
   1400141cd:	cmp    WORD PTR [rip+0xfffffffffffebe2c],ax        # 0x140000000
   1400141d4:	je     0x1400141da
   1400141d6:	xor    ebx,ebx
   1400141d8:	jmp    0x14001420b
   1400141da:	movsxd rax,DWORD PTR [rip+0xfffffffffffebe5b]        # 0x14000003c
   1400141e1:	add    rax,rdi
   1400141e4:	cmp    DWORD PTR [rax],0x4550
   1400141ea:	jne    0x1400141d6
   1400141ec:	mov    ecx,0x20b
   1400141f1:	cmp    WORD PTR [rax+0x18],cx
   1400141f5:	jne    0x1400141d6
   1400141f7:	xor    ebx,ebx
   1400141f9:	cmp    DWORD PTR [rax+0x84],0xe
   140014200:	jbe    0x14001420b
   140014202:	cmp    DWORD PTR [rax+0xf8],ebx
   140014208:	setne  bl
   14001420b:	mov    DWORD PTR [rsp+0x40],ebx
   14001420f:	call   0x140016380
   140014214:	test   eax,eax
   140014216:	jne    0x14001423a
   140014218:	cmp    DWORD PTR [rip+0x25cbd],0x1        # 0x140039edc
   14001421f:	jne    0x140014226
   140014221:	call   0x1400163a0
   140014226:	mov    ecx,0x1c
   14001422b:	call   0x140016414
   140014230:	mov    ecx,0xff
   140014235:	call   0x140015930
   14001423a:	call   0x1400172dc
   14001423f:	test   eax,eax
   140014241:	jne    0x140014265
   140014243:	cmp    DWORD PTR [rip+0x25c92],0x1        # 0x140039edc
   14001424a:	jne    0x140014251
   14001424c:	call   0x1400163a0
   140014251:	mov    ecx,0x10
   140014256:	call   0x140016414
   14001425b:	mov    ecx,0xff
   140014260:	call   0x140015930
   140014265:	call   0x140017b64
   14001426a:	nop
   14001426b:	call   0x140017380
   140014270:	test   eax,eax
   140014272:	jns    0x14001427e
   140014274:	mov    ecx,0x1b
   140014279:	call   0x14001432c
   14001427e:	call   QWORD PTR [rip+0x12fb4]        # 0x140027238
   140014284:	mov    QWORD PTR [rip+0x272dd],rax        # 0x14003b568
   14001428b:	call   0x140017bd4
   140014290:	mov    QWORD PTR [rip+0x24be1],rax        # 0x140038e78
   140014297:	call   0x1400176b0
   14001429c:	test   eax,eax
   14001429e:	jns    0x1400142aa
   1400142a0:	mov    ecx,0x8
   1400142a5:	call   0x140015948
   1400142aa:	call   0x140017938
   1400142af:	test   eax,eax
   1400142b1:	jns    0x1400142bd
   1400142b3:	mov    ecx,0x9
   1400142b8:	call   0x140015948
   1400142bd:	mov    ecx,0x1
   1400142c2:	call   0x140015990
   1400142c7:	test   eax,eax
   1400142c9:	je     0x1400142d2
   1400142cb:	mov    ecx,eax
   1400142cd:	call   0x140015948
   1400142d2:	call   0x140017c58
   1400142d7:	movzx  r9d,si
   1400142db:	mov    r8,rax
   1400142de:	xor    edx,edx
   1400142e0:	mov    rcx,rdi
   1400142e3:	call   0x14000f150
   1400142e8:	mov    edi,eax
   1400142ea:	mov    DWORD PTR [rsp+0x20],eax
   1400142ee:	test   ebx,ebx
   1400142f0:	jne    0x1400142f9
   1400142f2:	mov    ecx,eax
   1400142f4:	call   0x140015ccc
   1400142f9:	call   0x140015980
   1400142fe:	jmp    0x140014317
   140014300:	mov    edi,eax
   140014302:	cmp    DWORD PTR [rsp+0x40],0x0
   140014307:	jne    0x140014311
   140014309:	mov    ecx,eax
   14001430b:	call   0x140015a28
   140014310:	int3   
   140014311:	call   0x140015970
   140014316:	nop
   140014317:	mov    eax,edi
   140014319:	mov    rbx,QWORD PTR [rsp+0x48]
   14001431e:	mov    rsi,QWORD PTR [rsp+0x50]
   140014323:	add    rsp,0x30
   140014327:	pop    rdi
   140014328:	ret    
   140014329:	int3   
   14001432a:	int3   
   14001432b:	int3   
   14001432c:	rex push rbx
   14001432e:	sub    rsp,0x20
   140014332:	cmp    DWORD PTR [rip+0x25ba3],0x1        # 0x140039edc
   140014339:	mov    ebx,ecx
   14001433b:	jne    0x140014342
   14001433d:	call   0x1400163a0
   140014342:	mov    ecx,ebx
   140014344:	call   0x140016414
   140014349:	mov    ecx,0xff
   14001434e:	add    rsp,0x20
   140014352:	pop    rbx
   140014353:	jmp    0x140015930
   140014358:	sub    rsp,0x28
   14001435c:	call   0x140017ab8
   140014361:	add    rsp,0x28
   140014365:	jmp    0x1400141a0
   14001436a:	int3   
   14001436b:	int3   
   14001436c:	mov    QWORD PTR [rsp+0x10],rbx
   140014371:	mov    QWORD PTR [rsp+0x18],rdi
   140014376:	push   rbp
   140014377:	mov    rbp,rsp
   14001437a:	sub    rsp,0x60
   14001437e:	movaps xmm0,XMMWORD PTR [rip+0x14b2b]        # 0x140028eb0
   140014385:	movaps xmm1,XMMWORD PTR [rip+0x14b34]        # 0x140028ec0
   14001438c:	mov    rbx,rdx
   14001438f:	mov    rdi,rcx
   140014392:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140014396:	movaps xmm0,XMMWORD PTR [rip+0x14b33]        # 0x140028ed0
   14001439d:	movaps XMMWORD PTR [rbp-0x30],xmm1
   1400143a1:	movaps xmm1,XMMWORD PTR [rip+0x14b38]        # 0x140028ee0
   1400143a8:	movaps XMMWORD PTR [rbp-0x20],xmm0
   1400143ac:	movaps XMMWORD PTR [rbp-0x10],xmm1
   1400143b0:	test   rdx,rdx
   1400143b3:	je     0x1400143cb
   1400143b5:	test   BYTE PTR [rdx],0x10
   1400143b8:	je     0x1400143cb
   1400143ba:	mov    rcx,QWORD PTR [rcx]
   1400143bd:	sub    rcx,0x8
   1400143c1:	mov    rax,QWORD PTR [rcx]
   1400143c4:	mov    rbx,QWORD PTR [rax+0x30]
   1400143c8:	call   QWORD PTR [rax+0x40]
   1400143cb:	lea    rdx,[rbp+0x10]
   1400143cf:	mov    rcx,rbx
   1400143d2:	mov    QWORD PTR [rbp-0x18],rdi
   1400143d6:	mov    QWORD PTR [rbp-0x10],rbx
   1400143da:	call   QWORD PTR [rip+0x12e60]        # 0x140027240
   1400143e0:	mov    rdx,rax
   1400143e3:	mov    QWORD PTR [rbp+0x10],rax
   1400143e7:	mov    QWORD PTR [rbp-0x8],rax
   1400143eb:	test   rbx,rbx
   1400143ee:	je     0x14001440b
   1400143f0:	test   BYTE PTR [rbx],0x8
   1400143f3:	mov    ecx,0x1994000
   1400143f8:	je     0x1400143ff
   1400143fa:	mov    DWORD PTR [rbp-0x20],ecx
   1400143fd:	jmp    0x14001440b
   1400143ff:	mov    eax,DWORD PTR [rbp-0x20]
   140014402:	test   rdx,rdx
   140014405:	cmove  eax,ecx
   140014408:	mov    DWORD PTR [rbp-0x20],eax
   14001440b:	mov    r8d,DWORD PTR [rbp-0x28]
   14001440f:	mov    edx,DWORD PTR [rbp-0x3c]
   140014412:	mov    ecx,DWORD PTR [rbp-0x40]
   140014415:	lea    r9,[rbp-0x20]
   140014419:	call   QWORD PTR [rip+0x12cc9]        # 0x1400270e8
   14001441f:	lea    r11,[rsp+0x60]
   140014424:	mov    rbx,QWORD PTR [r11+0x18]
   140014428:	mov    rdi,QWORD PTR [r11+0x20]
   14001442c:	mov    rsp,r11
   14001442f:	pop    rbp
   140014430:	ret    
   140014431:	int3   
   140014432:	int3   
   140014433:	int3   
   140014434:	mov    QWORD PTR [rsp+0x10],rbx
   140014439:	mov    QWORD PTR [rsp+0x18],rbp
   14001443e:	push   rsi
   14001443f:	push   rdi
   140014440:	push   r12
   140014442:	push   r14
   140014444:	push   r15
   140014446:	sub    rsp,0x20
   14001444a:	mov    edi,DWORD PTR [r8+0xc]
   14001444e:	mov    r12,rcx
   140014451:	mov    rcx,r8
   140014454:	mov    rsi,r9
   140014457:	mov    r14,r8
   14001445a:	mov    r15,rdx
   14001445d:	call   0x140019150
   140014462:	mov    r10,QWORD PTR [r12]
   140014466:	mov    QWORD PTR [rsi],r10
   140014469:	mov    ebp,eax
   14001446b:	test   edi,edi
   14001446d:	je     0x1400144e3
   14001446f:	movsxd rax,DWORD PTR [r14+0x10]
   140014473:	dec    edi
   140014475:	lea    rdx,[rdi+rdi*4]
   140014479:	lea    rbx,[rax+rdx*4]
   14001447d:	add    rbx,QWORD PTR [r15+0x8]
   140014481:	cmp    ebp,DWORD PTR [rbx+0x4]
   140014484:	jle    0x14001446b
   140014486:	cmp    ebp,DWORD PTR [rbx+0x8]
   140014489:	jg     0x14001446b
   14001448b:	mov    rcx,QWORD PTR [r15]
   14001448e:	lea    rdx,[rsp+0x50]
   140014493:	xor    r8d,r8d
   140014496:	call   QWORD PTR [rip+0x12dac]        # 0x140027248
   14001449c:	movsxd r8,DWORD PTR [rbx+0x10]
   1400144a0:	mov    r9d,DWORD PTR [rbx+0xc]
   1400144a4:	add    r8,QWORD PTR [rsp+0x50]
   1400144a9:	mov    r10d,DWORD PTR [rax]
   1400144ac:	xor    ecx,ecx
   1400144ae:	test   r9d,r9d
   1400144b1:	je     0x1400144ca
   1400144b3:	lea    rdx,[r8+0xc]
   1400144b7:	movsxd rax,DWORD PTR [rdx]
   1400144ba:	cmp    rax,r10
   1400144bd:	je     0x1400144ca
   1400144bf:	inc    ecx
   1400144c1:	add    rdx,0x14
   1400144c5:	cmp    ecx,r9d
   1400144c8:	jb     0x1400144b7
   1400144ca:	cmp    ecx,r9d
   1400144cd:	jae    0x14001446b
   1400144cf:	mov    rax,QWORD PTR [r12]
   1400144d3:	lea    rcx,[rcx+rcx*4]
   1400144d7:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   1400144dc:	mov    rcx,QWORD PTR [rcx+rax*1]
   1400144e0:	mov    QWORD PTR [rsi],rcx
   1400144e3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400144e8:	mov    rbp,QWORD PTR [rsp+0x60]
   1400144ed:	mov    rax,rsi
   1400144f0:	add    rsp,0x20
   1400144f4:	pop    r15
   1400144f6:	pop    r14
   1400144f8:	pop    r12
   1400144fa:	pop    rdi
   1400144fb:	pop    rsi
   1400144fc:	ret    
   1400144fd:	int3   
   1400144fe:	int3   
   1400144ff:	int3   
   140014500:	mov    rax,rsp
   140014503:	mov    QWORD PTR [rax+0x8],rbx
   140014507:	mov    QWORD PTR [rax+0x10],rbp
   14001450b:	mov    QWORD PTR [rax+0x18],rsi
   14001450f:	mov    QWORD PTR [rax+0x20],rdi
   140014513:	push   r12
   140014515:	push   r14
   140014517:	push   r15
   140014519:	sub    rsp,0x20
   14001451d:	mov    edi,DWORD PTR [rdx+0xc]
   140014520:	mov    rbp,QWORD PTR [rsp+0x70]
   140014525:	mov    rbx,rdx
   140014528:	mov    rcx,rbx
   14001452b:	mov    rdx,rbp
   14001452e:	mov    r12d,r9d
   140014531:	xor    esi,esi
   140014533:	call   0x140019150
   140014538:	mov    r14d,eax
   14001453b:	test   edi,edi
   14001453d:	jne    0x140014544
   14001453f:	call   0x1400191e4
   140014544:	mov    r10,QWORD PTR [rsp+0x68]
   140014549:	mov    r8,QWORD PTR [rsp+0x60]
   14001454e:	mov    edx,edi
   140014550:	or     DWORD PTR [r10],0xffffffff
   140014554:	or     DWORD PTR [r8],0xffffffff
   140014558:	test   edi,edi
   14001455a:	je     0x140014586
   14001455c:	mov    r11,QWORD PTR [rbp+0x8]
   140014560:	movsxd r15,DWORD PTR [rbx+0x10]
   140014564:	lea    r9d,[rdx-0x1]
   140014568:	lea    rcx,[r9+r9*4]
   14001456c:	lea    rax,[r11+rcx*4]
   140014570:	cmp    r14d,DWORD PTR [rax+r15*1+0x4]
   140014575:	jle    0x14001457e
   140014577:	cmp    r14d,DWORD PTR [rax+r15*1+0x8]
   14001457c:	jle    0x140014586
   14001457e:	mov    edx,r9d
   140014581:	test   r9d,r9d
   140014584:	jne    0x140014564
   140014586:	test   edx,edx
   140014588:	je     0x14001459d
   14001458a:	lea    eax,[rdx-0x1]
   14001458d:	lea    rdx,[rax+rax*4]
   140014591:	movsxd rax,DWORD PTR [rbx+0x10]
   140014595:	lea    rsi,[rax+rdx*4]
   140014599:	add    rsi,QWORD PTR [rbp+0x8]
   14001459d:	xor    edx,edx
   14001459f:	test   edi,edi
   1400145a1:	je     0x140014603
   1400145a3:	xor    r9d,r9d
   1400145a6:	movsxd rcx,DWORD PTR [rbx+0x10]
   1400145aa:	add    rcx,r9
   1400145ad:	add    rcx,QWORD PTR [rbp+0x8]
   1400145b1:	test   rsi,rsi
   1400145b4:	je     0x1400145c5
   1400145b6:	mov    eax,DWORD PTR [rsi+0x4]
   1400145b9:	cmp    DWORD PTR [rcx],eax
   1400145bb:	jle    0x1400145df
   1400145bd:	mov    eax,DWORD PTR [rsi+0x8]
   1400145c0:	cmp    DWORD PTR [rcx+0x4],eax
   1400145c3:	jg     0x1400145df
   1400145c5:	cmp    r12d,DWORD PTR [rcx]
   1400145c8:	jl     0x1400145df
   1400145ca:	cmp    r12d,DWORD PTR [rcx+0x4]
   1400145ce:	jg     0x1400145df
   1400145d0:	cmp    DWORD PTR [r8],0xffffffff
   1400145d4:	jne    0x1400145d9
   1400145d6:	mov    DWORD PTR [r8],edx
   1400145d9:	lea    eax,[rdx+0x1]
   1400145dc:	mov    DWORD PTR [r10],eax
   1400145df:	inc    edx
   1400145e1:	add    r9,0x14
   1400145e5:	cmp    edx,edi
   1400145e7:	jb     0x1400145a6
   1400145e9:	mov    eax,DWORD PTR [r8]
   1400145ec:	cmp    eax,0xffffffff
   1400145ef:	je     0x140014603
   1400145f1:	lea    rcx,[rax+rax*4]
   1400145f5:	movsxd rax,DWORD PTR [rbx+0x10]
   1400145f9:	lea    rax,[rax+rcx*4]
   1400145fd:	add    rax,QWORD PTR [rbp+0x8]
   140014601:	jmp    0x14001460d
   140014603:	and    DWORD PTR [r8],0x0
   140014607:	and    DWORD PTR [r10],0x0
   14001460b:	xor    eax,eax
   14001460d:	mov    rbx,QWORD PTR [rsp+0x40]
   140014612:	mov    rbp,QWORD PTR [rsp+0x48]
   140014617:	mov    rsi,QWORD PTR [rsp+0x50]
   14001461c:	mov    rdi,QWORD PTR [rsp+0x58]
   140014621:	add    rsp,0x20
   140014625:	pop    r15
   140014627:	pop    r14
   140014629:	pop    r12
   14001462b:	ret    
   14001462c:	mov    QWORD PTR [rsp+0x8],rbx
   140014631:	mov    QWORD PTR [rsp+0x10],rbp
   140014636:	push   rsi
   140014637:	push   rdi
   140014638:	push   r14
   14001463a:	sub    rsp,0x20
   14001463e:	lea    r9,[rsp+0x50]
   140014643:	mov    rdi,r8
   140014646:	mov    rbp,rdx
   140014649:	call   0x140014434
   14001464e:	mov    rdx,rbp
   140014651:	mov    rcx,rdi
   140014654:	mov    r14,rax
   140014657:	call   0x140019150
   14001465c:	mov    ebx,DWORD PTR [rdi+0xc]
   14001465f:	mov    esi,eax
   140014661:	jmp    0x14001468a
   140014663:	dec    ebx
   140014665:	call   0x140017170
   14001466a:	lea    rdx,[rbx+rbx*4]
   14001466e:	mov    rax,QWORD PTR [rax+0x128]
   140014675:	lea    rcx,[rax+rdx*4]
   140014679:	movsxd rax,DWORD PTR [rdi+0x10]
   14001467d:	add    rcx,rax
   140014680:	cmp    esi,DWORD PTR [rcx+0x4]
   140014683:	jle    0x14001468a
   140014685:	cmp    esi,DWORD PTR [rcx+0x8]
   140014688:	jle    0x140014690
   14001468a:	test   ebx,ebx
   14001468c:	jne    0x140014663
   14001468e:	xor    ecx,ecx
   140014690:	test   rcx,rcx
   140014693:	jne    0x14001469b
   140014695:	or     r9d,0xffffffff
   140014699:	jmp    0x14001469f
   14001469b:	mov    r9d,DWORD PTR [rcx+0x4]
   14001469f:	mov    r8,rdi
   1400146a2:	mov    rdx,rbp
   1400146a5:	mov    rcx,r14
   1400146a8:	call   0x140018bcc
   1400146ad:	mov    rbx,QWORD PTR [rsp+0x40]
   1400146b2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400146b7:	add    rsp,0x20
   1400146bb:	pop    r14
   1400146bd:	pop    rdi
   1400146be:	pop    rsi
   1400146bf:	ret    
   1400146c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400146c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400146ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400146cf:	push   rdi
   1400146d0:	sub    rsp,0x40
   1400146d4:	mov    rsi,r9
   1400146d7:	mov    rbp,r8
   1400146da:	mov    rbx,rdx
   1400146dd:	mov    rdi,rcx
   1400146e0:	call   0x140017170
   1400146e5:	mov    QWORD PTR [rax+0x138],rbx
   1400146ec:	mov    rbx,QWORD PTR [rdi]
   1400146ef:	call   0x140017170
   1400146f4:	mov    rdx,QWORD PTR [rbx+0x38]
   1400146f8:	mov    rcx,QWORD PTR [rsp+0x78]
   1400146fd:	mov    r9,QWORD PTR [rsp+0x70]
   140014702:	mov    DWORD PTR [rsp+0x38],0x1
   14001470a:	mov    QWORD PTR [rax+0x130],rdx
   140014711:	xor    ebx,ebx
   140014713:	mov    QWORD PTR [rsp+0x30],rbx
   140014718:	mov    DWORD PTR [rsp+0x28],ebx
   14001471c:	mov    QWORD PTR [rsp+0x20],rcx
   140014721:	mov    rcx,QWORD PTR [rdi]
   140014724:	mov    r8,rsi
   140014727:	mov    rdx,rbp
   14001472a:	call   0x140018d60
   14001472f:	call   0x140017170
   140014734:	mov    rcx,QWORD PTR [rsp+0x80]
   14001473c:	mov    rbp,QWORD PTR [rsp+0x58]
   140014741:	mov    rsi,QWORD PTR [rsp+0x60]
   140014746:	mov    QWORD PTR [rax+0x138],rbx
   14001474d:	lea    eax,[rbx+0x1]
   140014750:	mov    rbx,QWORD PTR [rsp+0x50]
   140014755:	mov    DWORD PTR [rcx],0x1
   14001475b:	add    rsp,0x40
   14001475f:	pop    rdi
   140014760:	ret    
   140014761:	int3   
   140014762:	int3   
   140014763:	int3   
   140014764:	mov    rax,rsp
   140014767:	mov    QWORD PTR [rax+0x20],r9
   14001476b:	mov    QWORD PTR [rax+0x18],r8
   14001476f:	mov    QWORD PTR [rax+0x10],rdx
   140014773:	mov    QWORD PTR [rax+0x8],rcx
   140014777:	push   rbx
   140014778:	sub    rsp,0x60
   14001477c:	mov    rbx,rcx
   14001477f:	and    DWORD PTR [rax-0x28],0x0
   140014783:	mov    QWORD PTR [rax-0x20],rcx
   140014787:	mov    QWORD PTR [rax-0x18],r8
   14001478b:	call   0x140017170
   140014790:	mov    r8,QWORD PTR [rax+0xe0]
   140014797:	lea    rdx,[rsp+0x48]
   14001479c:	mov    ecx,DWORD PTR [rbx]
   14001479e:	call   r8
   1400147a1:	mov    DWORD PTR [rsp+0x40],0x0
   1400147a9:	jmp    0x1400147ab
   1400147ab:	mov    eax,DWORD PTR [rsp+0x40]
   1400147af:	add    rsp,0x60
   1400147b3:	pop    rbx
   1400147b4:	ret    
   1400147b5:	int3   
   1400147b6:	int3   
   1400147b7:	int3   
   1400147b8:	rex push rbx
   1400147ba:	sub    rsp,0x20
   1400147be:	mov    rbx,rcx
   1400147c1:	mov    QWORD PTR [rcx],rdx
   1400147c4:	call   0x140017170
   1400147c9:	cmp    rbx,QWORD PTR [rax+0x120]
   1400147d0:	jae    0x1400147e0
   1400147d2:	call   0x140017170
   1400147d7:	mov    rcx,QWORD PTR [rax+0x120]
   1400147de:	jmp    0x1400147e2
   1400147e0:	xor    ecx,ecx
   1400147e2:	mov    QWORD PTR [rbx+0x8],rcx
   1400147e6:	call   0x140017170
   1400147eb:	mov    QWORD PTR [rax+0x120],rbx
   1400147f2:	mov    rax,rbx
   1400147f5:	add    rsp,0x20
   1400147f9:	pop    rbx
   1400147fa:	ret    
   1400147fb:	int3   
   1400147fc:	mov    QWORD PTR [rsp+0x8],rbx
   140014801:	push   rdi
   140014802:	sub    rsp,0x20
   140014806:	mov    rdi,rcx
   140014809:	call   0x140017170
   14001480e:	cmp    rdi,QWORD PTR [rax+0x120]
   140014815:	je     0x14001481c
   140014817:	call   0x1400191e4
   14001481c:	call   0x140017170
   140014821:	mov    rbx,QWORD PTR [rax+0x120]
   140014828:	jmp    0x140014833
   14001482a:	cmp    rdi,rbx
   14001482d:	je     0x140014848
   14001482f:	mov    rbx,QWORD PTR [rbx+0x8]
   140014833:	test   rbx,rbx
   140014836:	jne    0x14001482a
   140014838:	call   0x1400191e4
   14001483d:	mov    rbx,QWORD PTR [rsp+0x30]
   140014842:	add    rsp,0x20
   140014846:	pop    rdi
   140014847:	ret    
   140014848:	call   0x140017170
   14001484d:	mov    rcx,QWORD PTR [rbx+0x8]
   140014851:	mov    QWORD PTR [rax+0x120],rcx
   140014858:	jmp    0x14001483d
   14001485a:	int3   
   14001485b:	int3   
   14001485c:	sub    rsp,0x28
   140014860:	call   0x140017170
   140014865:	mov    rax,QWORD PTR [rax+0x128]
   14001486c:	add    rsp,0x28
   140014870:	ret    
   140014871:	int3   
   140014872:	int3   
   140014873:	int3   
   140014874:	sub    rsp,0x28
   140014878:	call   0x140017170
   14001487d:	mov    rax,QWORD PTR [rax+0x130]
   140014884:	add    rsp,0x28
   140014888:	ret    
   140014889:	int3   
   14001488a:	int3   
   14001488b:	int3   
   14001488c:	rex push rbx
   14001488e:	sub    rsp,0x20
   140014892:	mov    rbx,rcx
   140014895:	call   0x140017170
   14001489a:	mov    rdx,QWORD PTR [rax+0x120]
   1400148a1:	jmp    0x1400148ac
   1400148a3:	cmp    QWORD PTR [rdx],rbx
   1400148a6:	je     0x1400148ba
   1400148a8:	mov    rdx,QWORD PTR [rdx+0x8]
   1400148ac:	test   rdx,rdx
   1400148af:	jne    0x1400148a3
   1400148b1:	lea    eax,[rdx+0x1]
   1400148b4:	add    rsp,0x20
   1400148b8:	pop    rbx
   1400148b9:	ret    
   1400148ba:	xor    eax,eax
   1400148bc:	jmp    0x1400148b4
   1400148be:	int3   
   1400148bf:	int3   
   1400148c0:	rex push rbx
   1400148c2:	sub    rsp,0x20
   1400148c6:	mov    rbx,rcx
   1400148c9:	call   0x140017170
   1400148ce:	mov    QWORD PTR [rax+0x128],rbx
   1400148d5:	add    rsp,0x20
   1400148d9:	pop    rbx
   1400148da:	ret    
   1400148db:	int3   
   1400148dc:	rex push rbx
   1400148de:	sub    rsp,0x20
   1400148e2:	mov    rbx,rcx
   1400148e5:	call   0x140017170
   1400148ea:	mov    QWORD PTR [rax+0x130],rbx
   1400148f1:	add    rsp,0x20
   1400148f5:	pop    rbx
   1400148f6:	ret    
   1400148f7:	int3   
   1400148f8:	rex push rbp
   1400148fa:	lea    rbp,[rsp-0x4b0]
   140014902:	sub    rsp,0x5b0
   140014909:	mov    rax,QWORD PTR [rip+0x22700]        # 0x140037010
   140014910:	xor    rax,rsp
   140014913:	mov    QWORD PTR [rbp+0x4a0],rax
   14001491a:	mov    r10,QWORD PTR [rbp+0x4f8]
   140014921:	lea    rax,[rip+0x145c8]        # 0x140028ef0
   140014928:	mov    r11,rcx
   14001492b:	lea    rcx,[rsp+0x30]
   140014930:	movups xmm0,XMMWORD PTR [rax]
   140014933:	movups xmm1,XMMWORD PTR [rax+0x10]
   140014937:	movups XMMWORD PTR [rcx],xmm0
   14001493a:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001493e:	movups XMMWORD PTR [rcx+0x10],xmm1
   140014942:	movups xmm1,XMMWORD PTR [rax+0x30]
   140014946:	movups XMMWORD PTR [rcx+0x20],xmm0
   14001494a:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001494e:	movups XMMWORD PTR [rcx+0x30],xmm1
   140014952:	movups xmm1,XMMWORD PTR [rax+0x50]
   140014956:	movups XMMWORD PTR [rcx+0x40],xmm0
   14001495a:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001495e:	movups XMMWORD PTR [rcx+0x50],xmm1
   140014962:	movups xmm1,XMMWORD PTR [rax+0x80]
   140014969:	movups XMMWORD PTR [rcx+0x60],xmm0
   14001496d:	movups xmm0,XMMWORD PTR [rax+0x70]
   140014971:	mov    rax,QWORD PTR [rax+0x90]
   140014978:	movups XMMWORD PTR [rcx+0x70],xmm0
   14001497c:	movups XMMWORD PTR [rcx+0x80],xmm1
   140014983:	mov    QWORD PTR [rcx+0x90],rax
   14001498a:	mov    rcx,QWORD PTR [r11]
   14001498d:	lea    rax,[rip+0x3fe0]        # 0x140018974
   140014994:	mov    QWORD PTR [rsp+0x50],rax
   140014999:	mov    rax,QWORD PTR [rbp+0x4e0]
   1400149a0:	mov    QWORD PTR [rbp-0x80],rdx
   1400149a4:	mov    rdx,QWORD PTR [r10]
   1400149a7:	mov    QWORD PTR [rsp+0x60],rax
   1400149ac:	movsxd rax,DWORD PTR [rbp+0x4e8]
   1400149b3:	mov    QWORD PTR [rsp+0x68],rax
   1400149b8:	mov    rax,QWORD PTR [rbp+0x4f0]
   1400149bf:	mov    QWORD PTR [rsp+0x70],r8
   1400149c4:	mov    QWORD PTR [rsp+0x78],rax
   1400149c9:	movzx  eax,BYTE PTR [rbp+0x500]
   1400149d0:	mov    QWORD PTR [rsp+0x58],r9
   1400149d5:	mov    QWORD PTR [rbp-0x78],rax
   1400149d9:	mov    rax,QWORD PTR [r10+0x40]
   1400149dd:	lea    r8,[rsp+0x30]
   1400149e2:	mov    QWORD PTR [rsp+0x28],rax
   1400149e7:	lea    rax,[rbp-0x30]
   1400149eb:	xor    r9d,r9d
   1400149ee:	mov    QWORD PTR [rsp+0x20],rax
   1400149f3:	mov    QWORD PTR [rbp-0x70],0x19930520
   1400149fb:	call   QWORD PTR [rip+0x1284f]        # 0x140027250
   140014a01:	mov    rcx,QWORD PTR [rbp+0x4a0]
   140014a08:	xor    rcx,rsp
   140014a0b:	call   0x1400130a0
   140014a10:	add    rsp,0x5b0
   140014a17:	pop    rbp
   140014a18:	ret    
   140014a19:	int3   
   140014a1a:	int3   
   140014a1b:	int3   
   140014a1c:	mov    QWORD PTR [rsp+0x10],rbx
   140014a21:	mov    QWORD PTR [rsp+0x18],rsi
   140014a26:	push   rdi
   140014a27:	sub    rsp,0x40
   140014a2b:	mov    rbx,r9
   140014a2e:	mov    rdi,r8
   140014a31:	mov    rsi,rcx
   140014a34:	mov    QWORD PTR [rsp+0x50],rdx
   140014a39:	call   0x140017170
   140014a3e:	mov    rdx,QWORD PTR [rbx+0x8]
   140014a42:	mov    QWORD PTR [rax+0x128],rdx
   140014a49:	call   0x140017170
   140014a4e:	mov    rdx,QWORD PTR [rsi+0x38]
   140014a52:	mov    QWORD PTR [rax+0x130],rdx
   140014a59:	call   0x140017170
   140014a5e:	mov    rdx,QWORD PTR [rbx+0x38]
   140014a62:	mov    r8d,DWORD PTR [rdx]
   140014a65:	lea    rdx,[rsp+0x50]
   140014a6a:	mov    r9,rbx
   140014a6d:	add    r8,QWORD PTR [rax+0x128]
   140014a74:	xor    eax,eax
   140014a76:	mov    rcx,rsi
   140014a79:	mov    DWORD PTR [rsp+0x38],eax
   140014a7d:	mov    QWORD PTR [rsp+0x30],rax
   140014a82:	mov    DWORD PTR [rsp+0x28],eax
   140014a86:	mov    QWORD PTR [rsp+0x20],r8
   140014a8b:	mov    r8,rdi
   140014a8e:	call   0x140018d60
   140014a93:	mov    rbx,QWORD PTR [rsp+0x58]
   140014a98:	mov    rsi,QWORD PTR [rsp+0x60]
   140014a9d:	add    rsp,0x40
   140014aa1:	pop    rdi
   140014aa2:	ret    
   140014aa3:	int3   
   140014aa4:	jmp    0x140014aac
   140014aa9:	int3   
   140014aaa:	int3   
   140014aab:	int3   
   140014aac:	lea    rax,[rip+0x5245]        # 0x140019cf8
   140014ab3:	lea    rcx,[rip+0x478a]        # 0x140019244
   140014aba:	mov    QWORD PTR [rip+0x22767],rax        # 0x140037228
   140014ac1:	lea    rax,[rip+0x52d0]        # 0x140019d98
   140014ac8:	mov    QWORD PTR [rip+0x22751],rcx        # 0x140037220
   140014acf:	mov    QWORD PTR [rip+0x2275a],rax        # 0x140037230
   140014ad6:	lea    rax,[rip+0x5303]        # 0x140019de0
   140014add:	mov    QWORD PTR [rip+0x22764],rcx        # 0x140037248
   140014ae4:	mov    QWORD PTR [rip+0x2274d],rax        # 0x140037238
   140014aeb:	lea    rax,[rip+0x5376]        # 0x140019e68
   140014af2:	mov    QWORD PTR [rip+0x22747],rax        # 0x140037240
   140014af9:	lea    rax,[rip+0x4768]        # 0x140019268
   140014b00:	mov    QWORD PTR [rip+0x22749],rax        # 0x140037250
   140014b07:	lea    rax,[rip+0x5292]        # 0x140019da0
   140014b0e:	mov    QWORD PTR [rip+0x22743],rax        # 0x140037258
   140014b15:	lea    rax,[rip+0x51e4]        # 0x140019d00
   140014b1c:	mov    QWORD PTR [rip+0x2273d],rax        # 0x140037260
   140014b23:	lea    rax,[rip+0x52be]        # 0x140019de8
   140014b2a:	mov    QWORD PTR [rip+0x22737],rax        # 0x140037268
   140014b31:	ret    
   140014b32:	int3   
   140014b33:	int3   
   140014b34:	rex push rbx
   140014b36:	sub    rsp,0x20
   140014b3a:	mov    rbx,rcx
   140014b3d:	mov    BYTE PTR [rcx+0x18],0x0
   140014b41:	test   rdx,rdx
   140014b44:	jne    0x140014bcc
   140014b4a:	call   0x140017170
   140014b4f:	mov    QWORD PTR [rbx+0x10],rax
   140014b53:	mov    rdx,QWORD PTR [rax+0xc0]
   140014b5a:	mov    QWORD PTR [rbx],rdx
   140014b5d:	mov    rcx,QWORD PTR [rax+0xb8]
   140014b64:	mov    QWORD PTR [rbx+0x8],rcx
   140014b68:	cmp    rdx,QWORD PTR [rip+0x22f11]        # 0x140037a80
   140014b6f:	je     0x140014b87
   140014b71:	mov    eax,DWORD PTR [rax+0xc8]
   140014b77:	test   DWORD PTR [rip+0x2306b],eax        # 0x140037be8
   140014b7d:	jne    0x140014b87
   140014b7f:	call   0x14001a180
   140014b84:	mov    QWORD PTR [rbx],rax
   140014b87:	mov    rax,QWORD PTR [rip+0x22c12]        # 0x1400377a0
   140014b8e:	cmp    QWORD PTR [rbx+0x8],rax
   140014b92:	je     0x140014baf
   140014b94:	mov    rax,QWORD PTR [rbx+0x10]
   140014b98:	mov    ecx,DWORD PTR [rax+0xc8]
   140014b9e:	test   DWORD PTR [rip+0x23044],ecx        # 0x140037be8
   140014ba4:	jne    0x140014baf
   140014ba6:	call   0x14001a578
   140014bab:	mov    QWORD PTR [rbx+0x8],rax
   140014baf:	mov    rcx,QWORD PTR [rbx+0x10]
   140014bb3:	mov    eax,DWORD PTR [rcx+0xc8]
   140014bb9:	test   al,0x2
   140014bbb:	jne    0x140014bd3
   140014bbd:	or     eax,0x2
   140014bc0:	mov    DWORD PTR [rcx+0xc8],eax
   140014bc6:	mov    BYTE PTR [rbx+0x18],0x1
   140014bca:	jmp    0x140014bd3
   140014bcc:	movups xmm0,XMMWORD PTR [rdx]
   140014bcf:	movdqu XMMWORD PTR [rcx],xmm0
   140014bd3:	mov    rax,rbx
   140014bd6:	add    rsp,0x20
   140014bda:	pop    rbx
   140014bdb:	ret    
   140014bdc:	test   r8,r8
   140014bdf:	je     0x140014bed
   140014be1:	cmp    BYTE PTR [rcx],dl
   140014be3:	je     0x140014bed
   140014be5:	inc    rcx
   140014be8:	dec    r8
   140014beb:	jne    0x140014be1
   140014bed:	neg    r8
   140014bf0:	sbb    rax,rax
   140014bf3:	and    rax,rcx
   140014bf6:	ret    
   140014bf7:	int3   
   140014bf8:	mov    rax,rsp
   140014bfb:	mov    QWORD PTR [rax+0x8],rbx
   140014bff:	mov    QWORD PTR [rax+0x10],rbp
   140014c03:	mov    QWORD PTR [rax+0x18],rsi
   140014c07:	mov    QWORD PTR [rax+0x20],rdi
   140014c0b:	push   r14
   140014c0d:	sub    rsp,0x20
   140014c11:	mov    rbx,QWORD PTR [r9+0x38]
   140014c15:	mov    rsi,rdx
   140014c18:	mov    r14,r8
   140014c1b:	mov    rbp,rcx
   140014c1e:	lea    r8,[rbx+0x4]
   140014c22:	mov    rdx,r9
   140014c25:	mov    rcx,rsi
   140014c28:	mov    rdi,r9
   140014c2b:	call   0x140016770
   140014c30:	mov    r11d,DWORD PTR [rbx+0x4]
   140014c34:	mov    r10d,DWORD PTR [rbp+0x4]
   140014c38:	mov    eax,r11d
   140014c3b:	and    r11d,0x2
   140014c3f:	mov    r8d,0x1
   140014c45:	and    eax,r8d
   140014c48:	and    r10b,0x66
   140014c4c:	cmove  r11d,eax
   140014c50:	test   r11d,r11d
   140014c53:	je     0x140014c69
   140014c55:	mov    r9,rdi
   140014c58:	mov    r8,r14
   140014c5b:	mov    rdx,rsi
   140014c5e:	mov    rcx,rbp
   140014c61:	call   0x140014a1c
   140014c66:	mov    r8d,eax
   140014c69:	mov    rbx,QWORD PTR [rsp+0x30]
   140014c6e:	mov    rbp,QWORD PTR [rsp+0x38]
   140014c73:	mov    rsi,QWORD PTR [rsp+0x40]
   140014c78:	mov    rdi,QWORD PTR [rsp+0x48]
   140014c7d:	mov    eax,r8d
   140014c80:	add    rsp,0x20
   140014c84:	pop    r14
   140014c86:	ret    
   140014c87:	int3   
   140014c88:	int3   
   140014c89:	int3   
   140014c8a:	int3   
   140014c8b:	int3   
   140014c8c:	int3   
   140014c8d:	int3   
   140014c8e:	int3   
   140014c8f:	int3   
   140014c90:	int3   
   140014c91:	int3   
   140014c92:	int3   
   140014c93:	int3   
   140014c94:	int3   
   140014c95:	int3   
   140014c96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140014ca0:	sub    rdx,rcx
   140014ca3:	cmp    r8,0x8
   140014ca7:	jb     0x140014ccb
   140014ca9:	test   cl,0x7
   140014cac:	je     0x140014cc2
   140014cae:	xchg   ax,ax
   140014cb0:	mov    al,BYTE PTR [rcx]
   140014cb2:	cmp    al,BYTE PTR [rdx+rcx*1]
   140014cb5:	jne    0x140014ce3
   140014cb7:	inc    rcx
   140014cba:	dec    r8
   140014cbd:	test   cl,0x7
   140014cc0:	jne    0x140014cb0
   140014cc2:	mov    r9,r8
   140014cc5:	shr    r9,0x3
   140014cc9:	jne    0x140014cea
   140014ccb:	test   r8,r8
   140014cce:	je     0x140014cdf
   140014cd0:	mov    al,BYTE PTR [rcx]
   140014cd2:	cmp    al,BYTE PTR [rdx+rcx*1]
   140014cd5:	jne    0x140014ce3
   140014cd7:	inc    rcx
   140014cda:	dec    r8
   140014cdd:	jne    0x140014cd0
   140014cdf:	xor    rax,rax
   140014ce2:	ret    
   140014ce3:	sbb    eax,eax
   140014ce5:	sbb    eax,0xffffffff
   140014ce8:	ret    
   140014ce9:	nop
   140014cea:	shr    r9,0x2
   140014cee:	je     0x140014d27
   140014cf0:	mov    rax,QWORD PTR [rcx]
   140014cf3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140014cf7:	jne    0x140014d54
   140014cf9:	mov    rax,QWORD PTR [rcx+0x8]
   140014cfd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140014d02:	jne    0x140014d50
   140014d04:	mov    rax,QWORD PTR [rcx+0x10]
   140014d08:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   140014d0d:	jne    0x140014d4c
   140014d0f:	mov    rax,QWORD PTR [rcx+0x18]
   140014d13:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140014d18:	jne    0x140014d48
   140014d1a:	add    rcx,0x20
   140014d1e:	dec    r9
   140014d21:	jne    0x140014cf0
   140014d23:	and    r8,0x1f
   140014d27:	mov    r9,r8
   140014d2a:	shr    r9,0x3
   140014d2e:	je     0x140014ccb
   140014d30:	mov    rax,QWORD PTR [rcx]
   140014d33:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140014d37:	jne    0x140014d54
   140014d39:	add    rcx,0x8
   140014d3d:	dec    r9
   140014d40:	jne    0x140014d30
   140014d42:	and    r8,0x7
   140014d46:	jmp    0x140014ccb
   140014d48:	add    rcx,0x8
   140014d4c:	add    rcx,0x8
   140014d50:	add    rcx,0x8
   140014d54:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140014d58:	bswap  rax
   140014d5b:	bswap  rcx
   140014d5e:	cmp    rax,rcx
   140014d61:	sbb    eax,eax
   140014d63:	sbb    eax,0xffffffff
   140014d66:	ret    
   140014d67:	int3   
   140014d68:	int3   
   140014d69:	int3   
   140014d6a:	int3   
   140014d6b:	int3   
   140014d6c:	int3   
   140014d6d:	int3   
   140014d6e:	int3   
   140014d6f:	int3   
   140014d70:	int3   
   140014d71:	int3   
   140014d72:	int3   
   140014d73:	int3   
   140014d74:	int3   
   140014d75:	int3   
   140014d76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140014d80:	mov    r11,rcx
   140014d83:	movzx  edx,dl
   140014d86:	cmp    r8,0x10
   140014d8a:	jb     0x140014eec
   140014d90:	bt     DWORD PTR [rip+0x2466c],0x1        # 0x140039404
   140014d98:	jae    0x140014da8
   140014d9a:	push   rdi
   140014d9b:	mov    rdi,rcx
   140014d9e:	mov    eax,edx
   140014da0:	mov    rcx,r8
   140014da3:	rep stos BYTE PTR es:[rdi],al
   140014da5:	pop    rdi
   140014da6:	jmp    0x140014e15
   140014da8:	movabs r9,0x101010101010101
   140014db2:	imul   rdx,r9
   140014db6:	bt     DWORD PTR [rip+0x24646],0x2        # 0x140039404
   140014dbe:	jb     0x140014e60
   140014dc4:	cmp    r8,0x40
   140014dc8:	jb     0x140014de8
   140014dca:	neg    rcx
   140014dcd:	and    ecx,0x7
   140014dd0:	je     0x140014dd8
   140014dd2:	sub    r8,rcx
   140014dd5:	mov    QWORD PTR [r11],rdx
   140014dd8:	add    rcx,r11
   140014ddb:	mov    r9,r8
   140014dde:	and    r8,0x3f
   140014de2:	shr    r9,0x6
   140014de6:	jne    0x140014e27
   140014de8:	mov    r9,r8
   140014deb:	and    r8,0x7
   140014def:	shr    r9,0x3
   140014df3:	je     0x140014e06
   140014df5:	data16 data16 xchg ax,ax
   140014df9:	nop
   140014dfa:	mov    QWORD PTR [rcx],rdx
   140014dfd:	add    rcx,0x8
   140014e01:	dec    r9
   140014e04:	jne    0x140014dfa
   140014e06:	test   r8,r8
   140014e09:	je     0x140014e15
   140014e0b:	mov    BYTE PTR [rcx],dl
   140014e0d:	inc    rcx
   140014e10:	dec    r8
   140014e13:	jne    0x140014e0b
   140014e15:	mov    rax,r11
   140014e18:	ret    
   140014e19:	nop    DWORD PTR [rax+0x0]
   140014e20:	data16 data16 xchg ax,ax
   140014e24:	data16 xchg ax,ax
   140014e27:	mov    QWORD PTR [rcx],rdx
   140014e2a:	mov    QWORD PTR [rcx+0x8],rdx
   140014e2e:	mov    QWORD PTR [rcx+0x10],rdx
   140014e32:	add    rcx,0x40
   140014e36:	mov    QWORD PTR [rcx-0x28],rdx
   140014e3a:	mov    QWORD PTR [rcx-0x20],rdx
   140014e3e:	dec    r9
   140014e41:	mov    QWORD PTR [rcx-0x18],rdx
   140014e45:	mov    QWORD PTR [rcx-0x10],rdx
   140014e49:	mov    QWORD PTR [rcx-0x8],rdx
   140014e4d:	jne    0x140014e27
   140014e4f:	jmp    0x140014de8
   140014e51:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140014e60:	movq   xmm0,rdx
   140014e65:	punpcklbw xmm0,xmm0
   140014e69:	test   cl,0xf
   140014e6c:	je     0x140014e84
   140014e6e:	movups XMMWORD PTR [rcx],xmm0
   140014e71:	mov    rax,rcx
   140014e74:	and    rax,0xf
   140014e78:	add    rcx,0x10
   140014e7c:	sub    rcx,rax
   140014e7f:	lea    r8,[rax+r8*1-0x10]
   140014e84:	mov    r9,r8
   140014e87:	shr    r9,0x7
   140014e8b:	je     0x140014ebf
   140014e8d:	jmp    0x140014e90
   140014e8f:	nop
   140014e90:	movaps XMMWORD PTR [rcx],xmm0
   140014e93:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140014e97:	add    rcx,0x80
   140014e9e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140014ea2:	movaps XMMWORD PTR [rcx-0x50],xmm0
   140014ea6:	dec    r9
   140014ea9:	movaps XMMWORD PTR [rcx-0x40],xmm0
   140014ead:	movaps XMMWORD PTR [rcx-0x30],xmm0
   140014eb1:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140014eb5:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140014eb9:	jne    0x140014e90
   140014ebb:	and    r8,0x7f
   140014ebf:	mov    r9,r8
   140014ec2:	shr    r9,0x4
   140014ec6:	je     0x140014edc
   140014ec8:	nop    DWORD PTR [rax+rax*1+0x0]
   140014ed0:	movaps XMMWORD PTR [rcx],xmm0
   140014ed3:	add    rcx,0x10
   140014ed7:	dec    r9
   140014eda:	jne    0x140014ed0
   140014edc:	and    r8,0xf
   140014ee0:	je     0x140014ee8
   140014ee2:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   140014ee8:	mov    rax,r11
   140014eeb:	ret    
   140014eec:	movabs r9,0x101010101010101
   140014ef6:	imul   rdx,r9
   140014efa:	lea    r9,[rip+0xfffffffffffeb0ff]        # 0x140000000
   140014f01:	mov    eax,DWORD PTR [r9+r8*4+0x14f15]
   140014f09:	add    r9,rax
   140014f0c:	add    rcx,r8
   140014f0f:	mov    rax,r11
   140014f12:	jmp    r9
   140014f15:	outs   dx,BYTE PTR ds:[rsi]
   140014f16:	rex.WRXB add QWORD PTR [r8],r8
   140014f19:	imul   ecx,DWORD PTR [rdi+0x1],0x0
   140014f1d:	jl     0x140014f6e
   140014f1f:	add    DWORD PTR [rax],eax
   140014f21:	rex.WRXB add QWORD PTR [r8d],r8
   140014f25:	nop
   140014f26:	rex.WRXB add QWORD PTR [r8],r8
   140014f29:	test   DWORD PTR [rdi+0x1],ecx
   140014f2c:	add    BYTE PTR [rcx+0x4f],bh
   140014f2f:	add    DWORD PTR [rax],eax
   140014f31:	rex.WRXB add QWORD PTR fs:[r8],r8
   140014f35:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014f36:	rex.WRXB add QWORD PTR [r8],r8
   140014f39:	popf   
   140014f3a:	rex.WRXB add QWORD PTR [r8],r8
   140014f3d:	xchg   esp,eax
   140014f3e:	rex.WRXB add QWORD PTR [r8],r8
   140014f41:	outs   dx,DWORD PTR ds:[rsi]
   140014f42:	rex.WRXB add QWORD PTR [r8],r8
   140014f45:	mov    WORD PTR [rdi+0x1],cs
   140014f48:	add    BYTE PTR [rcx+0x7500014f],al
   140014f4e:	rex.WRXB add QWORD PTR [r8],r8
   140014f51:	(bad)  
   140014f52:	rex.WRXB add QWORD PTR [r8],r8
   140014f55:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140014f60:	mov    QWORD PTR [rcx-0xf],rdx
   140014f64:	mov    DWORD PTR [rcx-0x7],edx
   140014f67:	mov    WORD PTR [rcx-0x3],dx
   140014f6b:	mov    BYTE PTR [rcx-0x1],dl
   140014f6e:	ret    
   140014f6f:	mov    QWORD PTR [rcx-0xb],rdx
   140014f73:	jmp    0x140014f67
   140014f75:	mov    QWORD PTR [rcx-0xe],rdx
   140014f79:	mov    DWORD PTR [rcx-0x6],edx
   140014f7c:	mov    WORD PTR [rcx-0x2],dx
   140014f80:	ret    
   140014f81:	mov    QWORD PTR [rcx-0xd],rdx
   140014f85:	mov    DWORD PTR [rcx-0x5],edx
   140014f88:	mov    BYTE PTR [rcx-0x1],dl
   140014f8b:	ret    
   140014f8c:	mov    QWORD PTR [rcx-0xc],rdx
   140014f90:	mov    DWORD PTR [rcx-0x4],edx
   140014f93:	ret    
   140014f94:	mov    QWORD PTR [rcx-0xa],rdx
   140014f98:	mov    WORD PTR [rcx-0x2],dx
   140014f9c:	ret    
   140014f9d:	mov    QWORD PTR [rcx-0x9],rdx
   140014fa1:	mov    BYTE PTR [rcx-0x1],dl
   140014fa4:	ret    
   140014fa5:	mov    QWORD PTR [rcx-0x8],rdx
   140014fa9:	ret    
   140014faa:	int3   
   140014fab:	int3   
   140014fac:	sub    rsp,0x38
   140014fb0:	mov    rax,QWORD PTR [rsp+0x60]
   140014fb5:	mov    QWORD PTR [rsp+0x28],rax
   140014fba:	and    QWORD PTR [rsp+0x20],0x0
   140014fc0:	call   0x140014fcc
   140014fc5:	add    rsp,0x38
   140014fc9:	ret    
   140014fca:	int3   
   140014fcb:	int3   
   140014fcc:	mov    QWORD PTR [rsp+0x8],rbx
   140014fd1:	mov    QWORD PTR [rsp+0x10],rbp
   140014fd6:	mov    QWORD PTR [rsp+0x18],rsi
   140014fdb:	push   rdi
   140014fdc:	push   r14
   140014fde:	push   r15
   140014fe0:	sub    rsp,0x30
   140014fe4:	xor    r15d,r15d
   140014fe7:	mov    rbp,r9
   140014fea:	mov    rsi,r8
   140014fed:	mov    rdi,rdx
   140014ff0:	mov    rbx,rcx
   140014ff3:	test   r9,r9
   140014ff6:	je     0x1400150ed
   140014ffc:	test   r8,r8
   140014fff:	jne    0x140015016
   140015001:	test   rcx,rcx
   140015004:	jne    0x14001501f
   140015006:	test   rdx,rdx
   140015009:	jne    0x1400150ed
   14001500f:	xor    eax,eax
   140015011:	jmp    0x140015100
   140015016:	test   rcx,rcx
   140015019:	je     0x1400150ed
   14001501f:	test   rdx,rdx
   140015022:	je     0x1400150ed
   140015028:	cmp    rdx,r8
   14001502b:	jbe    0x14001507d
   14001502d:	call   0x1400161e8
   140015032:	lea    r8,[rsi+0x1]
   140015036:	lea    rcx,[rip+0x5d27]        # 0x14001ad64
   14001503d:	mov    edi,DWORD PTR [rax]
   14001503f:	mov    rax,QWORD PTR [rsp+0x78]
   140015044:	mov    r9,rbp
   140015047:	mov    QWORD PTR [rsp+0x28],rax
   14001504c:	mov    rax,QWORD PTR [rsp+0x70]
   140015051:	mov    rdx,rbx
   140015054:	mov    QWORD PTR [rsp+0x20],rax
   140015059:	call   0x14001511c
   14001505e:	cmp    eax,0xfffffffe
   140015061:	jne    0x1400150d3
   140015063:	call   0x1400161e8
   140015068:	cmp    DWORD PTR [rax],0x22
   14001506b:	jne    0x1400150fd
   140015071:	call   0x1400161e8
   140015076:	mov    DWORD PTR [rax],edi
   140015078:	jmp    0x1400150fd
   14001507d:	call   0x1400161e8
   140015082:	lea    rcx,[rip+0x5cdb]        # 0x14001ad64
   140015089:	mov    r9,rbp
   14001508c:	mov    r14d,DWORD PTR [rax]
   14001508f:	mov    rax,QWORD PTR [rsp+0x78]
   140015094:	mov    r8,rdi
   140015097:	mov    QWORD PTR [rsp+0x28],rax
   14001509c:	mov    rax,QWORD PTR [rsp+0x70]
   1400150a1:	mov    rdx,rbx
   1400150a4:	mov    QWORD PTR [rsp+0x20],rax
   1400150a9:	call   0x14001511c
   1400150ae:	mov    WORD PTR [rbx+rdi*2-0x2],r15w
   1400150b4:	cmp    eax,0xfffffffe
   1400150b7:	jne    0x1400150d3
   1400150b9:	cmp    rsi,0xffffffffffffffff
   1400150bd:	jne    0x1400150d7
   1400150bf:	call   0x1400161e8
   1400150c4:	cmp    DWORD PTR [rax],0x22
   1400150c7:	jne    0x1400150fd
   1400150c9:	call   0x1400161e8
   1400150ce:	mov    DWORD PTR [rax],r14d
   1400150d1:	jmp    0x1400150fd
   1400150d3:	test   eax,eax
   1400150d5:	jns    0x140015100
   1400150d7:	mov    WORD PTR [rbx],r15w
   1400150db:	cmp    eax,0xfffffffe
   1400150de:	jne    0x1400150fd
   1400150e0:	call   0x1400161e8
   1400150e5:	mov    DWORD PTR [rax],0x22
   1400150eb:	jmp    0x1400150f8
   1400150ed:	call   0x1400161e8
   1400150f2:	mov    DWORD PTR [rax],0x16
   1400150f8:	call   0x140013f54
   1400150fd:	or     eax,0xffffffff
   140015100:	mov    rbx,QWORD PTR [rsp+0x50]
   140015105:	mov    rbp,QWORD PTR [rsp+0x58]
   14001510a:	mov    rsi,QWORD PTR [rsp+0x60]
   14001510f:	add    rsp,0x30
   140015113:	pop    r15
   140015115:	pop    r14
   140015117:	pop    rdi
   140015118:	ret    
   140015119:	int3   
   14001511a:	int3   
   14001511b:	int3   
   14001511c:	mov    QWORD PTR [rsp+0x8],rbx
   140015121:	mov    QWORD PTR [rsp+0x10],rsi
   140015126:	mov    QWORD PTR [rsp+0x18],rdi
   14001512b:	push   rbp
   14001512c:	push   r14
   14001512e:	push   r15
   140015130:	mov    rbp,rsp
   140015133:	sub    rsp,0x50
   140015137:	xor    ebx,ebx
   140015139:	mov    r14,r8
   14001513c:	mov    r15,rcx
   14001513f:	mov    rdi,rdx
   140015142:	lea    rcx,[rbp-0x28]
   140015146:	lea    r8d,[rbx+0x28]
   14001514a:	xor    edx,edx
   14001514c:	mov    rsi,r9
   14001514f:	mov    QWORD PTR [rbp-0x30],rbx
   140015153:	call   0x140014d80
   140015158:	test   rsi,rsi
   14001515b:	jne    0x140015175
   14001515d:	call   0x1400161e8
   140015162:	mov    DWORD PTR [rax],0x16
   140015168:	call   0x140013f54
   14001516d:	or     eax,0xffffffff
   140015170:	jmp    0x14001521c
   140015175:	test   r14,r14
   140015178:	je     0x14001517f
   14001517a:	test   rdi,rdi
   14001517d:	je     0x14001515d
   14001517f:	mov    DWORD PTR [rbp-0x18],0x42
   140015186:	mov    QWORD PTR [rbp-0x20],rdi
   14001518a:	mov    QWORD PTR [rbp-0x30],rdi
   14001518e:	cmp    r14,0x3fffffff
   140015195:	jbe    0x1400151a0
   140015197:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   14001519e:	jmp    0x1400151a7
   1400151a0:	lea    eax,[r14+r14*1]
   1400151a4:	mov    DWORD PTR [rbp-0x28],eax
   1400151a7:	mov    r9,QWORD PTR [rbp+0x48]
   1400151ab:	mov    r8,QWORD PTR [rbp+0x40]
   1400151af:	lea    rcx,[rbp-0x30]
   1400151b3:	mov    rdx,rsi
   1400151b6:	call   r15
   1400151b9:	mov    esi,eax
   1400151bb:	test   rdi,rdi
   1400151be:	je     0x14001521c
   1400151c0:	test   eax,eax
   1400151c2:	js     0x14001520d
   1400151c4:	dec    DWORD PTR [rbp-0x28]
   1400151c7:	js     0x1400151dc
   1400151c9:	mov    rax,QWORD PTR [rbp-0x30]
   1400151cd:	mov    BYTE PTR [rax],bl
   1400151cf:	mov    rax,QWORD PTR [rbp-0x30]
   1400151d3:	inc    rax
   1400151d6:	mov    QWORD PTR [rbp-0x30],rax
   1400151da:	jmp    0x1400151f0
   1400151dc:	lea    rdx,[rbp-0x30]
   1400151e0:	xor    ecx,ecx
   1400151e2:	call   0x14001abd8
   1400151e7:	cmp    eax,0xffffffff
   1400151ea:	je     0x14001520d
   1400151ec:	mov    rax,QWORD PTR [rbp-0x30]
   1400151f0:	dec    DWORD PTR [rbp-0x28]
   1400151f3:	js     0x1400151f9
   1400151f5:	mov    BYTE PTR [rax],bl
   1400151f7:	jmp    0x140015209
   1400151f9:	lea    rdx,[rbp-0x30]
   1400151fd:	xor    ecx,ecx
   1400151ff:	call   0x14001abd8
   140015204:	cmp    eax,0xffffffff
   140015207:	je     0x14001520d
   140015209:	mov    eax,esi
   14001520b:	jmp    0x14001521c
   14001520d:	cmp    DWORD PTR [rbp-0x28],ebx
   140015210:	mov    WORD PTR [rdi+r14*2-0x2],bx
   140015216:	setge  bl
   140015219:	lea    eax,[rbx-0x2]
   14001521c:	lea    r11,[rsp+0x50]
   140015221:	mov    rbx,QWORD PTR [r11+0x20]
   140015225:	mov    rsi,QWORD PTR [r11+0x28]
   140015229:	mov    rdi,QWORD PTR [r11+0x30]
   14001522d:	mov    rsp,r11
   140015230:	pop    r15
   140015232:	pop    r14
   140015234:	pop    rbp
   140015235:	ret    
   140015236:	int3   
   140015237:	int3   
   140015238:	mov    r11,rsp
   14001523b:	mov    QWORD PTR [r11+0x10],rdx
   14001523f:	mov    QWORD PTR [r11+0x18],r8
   140015243:	mov    QWORD PTR [r11+0x20],r9
   140015247:	sub    rsp,0x38
   14001524b:	mov    r8,rdx
   14001524e:	lea    rax,[r11+0x18]
   140015252:	mov    rdx,rcx
   140015255:	lea    rcx,[rip+0x6824]        # 0x14001ba80
   14001525c:	xor    r9d,r9d
   14001525f:	mov    QWORD PTR [r11-0x18],rax
   140015263:	call   0x140015270
   140015268:	add    rsp,0x38
   14001526c:	ret    
   14001526d:	int3   
   14001526e:	int3   
   14001526f:	int3   
   140015270:	mov    rax,rsp
   140015273:	mov    QWORD PTR [rax+0x8],rbx
   140015277:	mov    QWORD PTR [rax+0x10],rbp
   14001527b:	mov    QWORD PTR [rax+0x18],rsi
   14001527f:	push   rdi
   140015280:	sub    rsp,0x50
   140015284:	and    QWORD PTR [rax-0x38],0x0
   140015289:	mov    rbx,rdx
   14001528c:	xor    edx,edx
   14001528e:	mov    rdi,r8
   140015291:	mov    rbp,rcx
   140015294:	lea    r8d,[rdx+0x28]
   140015298:	lea    rcx,[rax-0x30]
   14001529c:	mov    rsi,r9
   14001529f:	call   0x140014d80
   1400152a4:	test   rbx,rbx
   1400152a7:	jne    0x1400152be
   1400152a9:	call   0x1400161e8
   1400152ae:	mov    DWORD PTR [rax],0x16
   1400152b4:	call   0x140013f54
   1400152b9:	or     eax,0xffffffff
   1400152bc:	jmp    0x14001530a
   1400152be:	test   rdi,rdi
   1400152c1:	je     0x1400152a9
   1400152c3:	mov    rcx,rbx
   1400152c6:	call   0x14001b978
   1400152cb:	mov    DWORD PTR [rsp+0x38],0x49
   1400152d3:	mov    QWORD PTR [rsp+0x30],rbx
   1400152d8:	mov    QWORD PTR [rsp+0x20],rbx
   1400152dd:	cmp    rax,0x3fffffff
   1400152e3:	jbe    0x1400152ef
   1400152e5:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   1400152ed:	jmp    0x1400152f5
   1400152ef:	add    eax,eax
   1400152f1:	mov    DWORD PTR [rsp+0x28],eax
   1400152f5:	mov    r9,QWORD PTR [rsp+0x80]
   1400152fd:	lea    rcx,[rsp+0x20]
   140015302:	mov    r8,rsi
   140015305:	mov    rdx,rdi
   140015308:	call   rbp
   14001530a:	mov    rbx,QWORD PTR [rsp+0x60]
   14001530f:	mov    rbp,QWORD PTR [rsp+0x68]
   140015314:	mov    rsi,QWORD PTR [rsp+0x70]
   140015319:	add    rsp,0x50
   14001531d:	pop    rdi
   14001531e:	ret    
   14001531f:	int3   
   140015320:	int3   
   140015321:	int3   
   140015322:	int3   
   140015323:	int3   
   140015324:	int3   
   140015325:	int3   
   140015326:	data16 nop WORD PTR [rax+rax*1+0x0]
   140015330:	mov    rax,rcx
   140015333:	neg    rcx
   140015336:	test   rax,0x7
   14001533c:	je     0x14001534d
   14001533e:	xchg   ax,ax
   140015340:	mov    dl,BYTE PTR [rax]
   140015342:	inc    rax
   140015345:	test   dl,dl
   140015347:	je     0x1400153a8
   140015349:	test   al,0x7
   14001534b:	jne    0x140015340
   14001534d:	movabs r8,0x7efefefefefefeff
   140015357:	movabs r11,0x8101010101010100
   140015361:	mov    rdx,QWORD PTR [rax]
   140015364:	mov    r9,r8
   140015367:	add    rax,0x8
   14001536b:	add    r9,rdx
   14001536e:	not    rdx
   140015371:	xor    rdx,r9
   140015374:	and    rdx,r11
   140015377:	je     0x140015361
   140015379:	mov    rdx,QWORD PTR [rax-0x8]
   14001537d:	test   dl,dl
   14001537f:	je     0x1400153d2
   140015381:	test   dh,dh
   140015383:	je     0x1400153cc
   140015385:	shr    rdx,0x10
   140015389:	test   dl,dl
   14001538b:	je     0x1400153c6
   14001538d:	test   dh,dh
   14001538f:	je     0x1400153c0
   140015391:	shr    rdx,0x10
   140015395:	test   dl,dl
   140015397:	je     0x1400153ba
   140015399:	test   dh,dh
   14001539b:	je     0x1400153b4
   14001539d:	shr    edx,0x10
   1400153a0:	test   dl,dl
   1400153a2:	je     0x1400153ae
   1400153a4:	test   dh,dh
   1400153a6:	jne    0x140015361
   1400153a8:	lea    rax,[rcx+rax*1-0x1]
   1400153ad:	ret    
   1400153ae:	lea    rax,[rcx+rax*1-0x2]
   1400153b3:	ret    
   1400153b4:	lea    rax,[rcx+rax*1-0x3]
   1400153b9:	ret    
   1400153ba:	lea    rax,[rcx+rax*1-0x4]
   1400153bf:	ret    
   1400153c0:	lea    rax,[rcx+rax*1-0x5]
   1400153c5:	ret    
   1400153c6:	lea    rax,[rcx+rax*1-0x6]
   1400153cb:	ret    
   1400153cc:	lea    rax,[rcx+rax*1-0x7]
   1400153d1:	ret    
   1400153d2:	lea    rax,[rcx+rax*1-0x8]
   1400153d7:	ret    
   1400153d8:	rex push rbx
   1400153da:	sub    rsp,0x20
   1400153de:	and    QWORD PTR [rcx+0x8],0x0
   1400153e3:	lea    rax,[rip+0x13bae]        # 0x140028f98
   1400153ea:	mov    BYTE PTR [rcx+0x10],0x0
   1400153ee:	mov    QWORD PTR [rcx],rax
   1400153f1:	mov    rdx,QWORD PTR [rdx]
   1400153f4:	mov    rbx,rcx
   1400153f7:	call   0x1400154e0
   1400153fc:	mov    rax,rbx
   1400153ff:	add    rsp,0x20
   140015403:	pop    rbx
   140015404:	ret    
   140015405:	int3   
   140015406:	int3   
   140015407:	int3   
   140015408:	lea    rax,[rip+0x13b89]        # 0x140028f98
   14001540f:	mov    QWORD PTR [rcx],rax
   140015412:	mov    rax,QWORD PTR [rdx]
   140015415:	mov    BYTE PTR [rcx+0x10],0x0
   140015419:	mov    QWORD PTR [rcx+0x8],rax
   14001541d:	mov    rax,rcx
   140015420:	ret    
   140015421:	int3   
   140015422:	int3   
   140015423:	int3   
   140015424:	rex push rbx
   140015426:	sub    rsp,0x20
   14001542a:	and    QWORD PTR [rcx+0x8],0x0
   14001542f:	lea    rax,[rip+0x13b62]        # 0x140028f98
   140015436:	mov    rbx,rcx
   140015439:	mov    QWORD PTR [rcx],rax
   14001543c:	mov    BYTE PTR [rcx+0x10],0x0
   140015440:	call   0x140015460
   140015445:	mov    rax,rbx
   140015448:	add    rsp,0x20
   14001544c:	pop    rbx
   14001544d:	ret    
   14001544e:	int3   
   14001544f:	int3   
   140015450:	lea    rax,[rip+0x13b41]        # 0x140028f98
   140015457:	mov    QWORD PTR [rcx],rax
   14001545a:	jmp    0x14001553c
   14001545f:	int3   
   140015460:	mov    QWORD PTR [rsp+0x8],rbx
   140015465:	push   rdi
   140015466:	sub    rsp,0x20
   14001546a:	mov    rdi,rdx
   14001546d:	mov    rbx,rcx
   140015470:	cmp    rcx,rdx
   140015473:	je     0x140015496
   140015475:	call   0x14001553c
   14001547a:	cmp    BYTE PTR [rdi+0x10],0x0
   14001547e:	je     0x14001548e
   140015480:	mov    rdx,QWORD PTR [rdi+0x8]
   140015484:	mov    rcx,rbx
   140015487:	call   0x1400154e0
   14001548c:	jmp    0x140015496
   14001548e:	mov    rax,QWORD PTR [rdi+0x8]
   140015492:	mov    QWORD PTR [rbx+0x8],rax
   140015496:	mov    rax,rbx
   140015499:	mov    rbx,QWORD PTR [rsp+0x30]
   14001549e:	add    rsp,0x20
   1400154a2:	pop    rdi
   1400154a3:	ret    
   1400154a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400154a9:	push   rdi
   1400154aa:	sub    rsp,0x20
   1400154ae:	lea    rax,[rip+0x13ae3]        # 0x140028f98
   1400154b5:	mov    ebx,edx
   1400154b7:	mov    rdi,rcx
   1400154ba:	mov    QWORD PTR [rcx],rax
   1400154bd:	call   0x14001553c
   1400154c2:	test   bl,0x1
   1400154c5:	je     0x1400154cf
   1400154c7:	mov    rcx,rdi
   1400154ca:	call   0x1400137cc
   1400154cf:	mov    rax,rdi
   1400154d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400154d7:	add    rsp,0x20
   1400154db:	pop    rdi
   1400154dc:	ret    
   1400154dd:	int3   
   1400154de:	int3   
   1400154df:	int3   
   1400154e0:	test   rdx,rdx
   1400154e3:	je     0x140015539
   1400154e5:	mov    QWORD PTR [rsp+0x8],rbx
   1400154ea:	mov    QWORD PTR [rsp+0x10],rsi
   1400154ef:	push   rdi
   1400154f0:	sub    rsp,0x20
   1400154f4:	mov    rsi,rcx
   1400154f7:	mov    rcx,rdx
   1400154fa:	mov    rbx,rdx
   1400154fd:	call   0x140015330
   140015502:	mov    rdi,rax
   140015505:	lea    rcx,[rax+0x1]
   140015509:	call   0x14001396c
   14001550e:	mov    QWORD PTR [rsi+0x8],rax
   140015512:	test   rax,rax
   140015515:	je     0x14001552a
   140015517:	lea    rdx,[rdi+0x1]
   14001551b:	mov    r8,rbx
   14001551e:	mov    rcx,rax
   140015521:	call   0x14001cd84
   140015526:	mov    BYTE PTR [rsi+0x10],0x1
   14001552a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001552f:	mov    rsi,QWORD PTR [rsp+0x38]
   140015534:	add    rsp,0x20
   140015538:	pop    rdi
   140015539:	ret    
   14001553a:	int3   
   14001553b:	int3   
   14001553c:	rex push rbx
   14001553e:	sub    rsp,0x20
   140015542:	cmp    BYTE PTR [rcx+0x10],0x0
   140015546:	mov    rbx,rcx
   140015549:	je     0x140015554
   14001554b:	mov    rcx,QWORD PTR [rcx+0x8]
   14001554f:	call   0x14001392c
   140015554:	and    QWORD PTR [rbx+0x8],0x0
   140015559:	mov    BYTE PTR [rbx+0x10],0x0
   14001555d:	add    rsp,0x20
   140015561:	pop    rbx
   140015562:	ret    
   140015563:	int3   
   140015564:	cmp    QWORD PTR [rcx+0x8],0x0
   140015569:	lea    rax,[rip+0x13a38]        # 0x140028fa8
   140015570:	cmovne rax,QWORD PTR [rcx+0x8]
   140015575:	ret    
   140015576:	int3   
   140015577:	int3   
   140015578:	rex push rbx
   14001557a:	sub    rsp,0x20
   14001557e:	mov    rbx,rcx
   140015581:	call   QWORD PTR [rip+0x11ca1]        # 0x140027228
   140015587:	mov    ecx,0x1
   14001558c:	mov    DWORD PTR [rip+0x23e6e],eax        # 0x140039400
   140015592:	call   0x140016e18
   140015597:	mov    rcx,rbx
   14001559a:	call   0x140016df8
   14001559f:	cmp    DWORD PTR [rip+0x23e5a],0x0        # 0x140039400
   1400155a6:	jne    0x1400155b2
   1400155a8:	mov    ecx,0x1
   1400155ad:	call   0x140016e18
   1400155b2:	mov    ecx,0xc0000409
   1400155b7:	add    rsp,0x20
   1400155bb:	pop    rbx
   1400155bc:	jmp    0x140016dd8
   1400155c1:	int3   
   1400155c2:	int3   
   1400155c3:	int3   
   1400155c4:	mov    QWORD PTR [rsp+0x8],rcx
   1400155c9:	sub    rsp,0x38
   1400155cd:	mov    ecx,0x17
   1400155d2:	call   0x1400242cc
   1400155d7:	test   eax,eax
   1400155d9:	je     0x1400155e2
   1400155db:	mov    ecx,0x2
   1400155e0:	int    0x29
   1400155e2:	lea    rcx,[rip+0x23947]        # 0x140038f30
   1400155e9:	call   0x140016844
   1400155ee:	mov    rax,QWORD PTR [rsp+0x38]
   1400155f3:	mov    QWORD PTR [rip+0x23a2e],rax        # 0x140039028
   1400155fa:	lea    rax,[rsp+0x38]
   1400155ff:	add    rax,0x8
   140015603:	mov    QWORD PTR [rip+0x239be],rax        # 0x140038fc8
   14001560a:	mov    rax,QWORD PTR [rip+0x23a17]        # 0x140039028
   140015611:	mov    QWORD PTR [rip+0x23888],rax        # 0x140038ea0
   140015618:	mov    rax,QWORD PTR [rsp+0x40]
   14001561d:	mov    QWORD PTR [rip+0x2398c],rax        # 0x140038fb0
   140015624:	mov    DWORD PTR [rip+0x23862],0xc0000409        # 0x140038e90
   14001562e:	mov    DWORD PTR [rip+0x2385c],0x1        # 0x140038e94
   140015638:	mov    DWORD PTR [rip+0x23866],0x1        # 0x140038ea8
   140015642:	mov    eax,0x8
   140015647:	imul   rax,rax,0x0
   14001564b:	lea    rcx,[rip+0x2385e]        # 0x140038eb0
   140015652:	mov    QWORD PTR [rcx+rax*1],0x2
   14001565a:	mov    eax,0x8
   14001565f:	imul   rax,rax,0x0
   140015663:	mov    rcx,QWORD PTR [rip+0x219a6]        # 0x140037010
   14001566a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   14001566f:	mov    eax,0x8
   140015674:	imul   rax,rax,0x1
   140015678:	mov    rcx,QWORD PTR [rip+0x21999]        # 0x140037018
   14001567f:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140015684:	lea    rcx,[rip+0x13935]        # 0x140028fc0
   14001568b:	call   0x140015578
   140015690:	add    rsp,0x38
   140015694:	ret    
   140015695:	int3   
   140015696:	int3   
   140015697:	int3   
   140015698:	sub    rsp,0x28
   14001569c:	mov    ecx,0x8
   1400156a1:	call   0x1400156ac
   1400156a6:	add    rsp,0x28
   1400156aa:	ret    
   1400156ab:	int3   
   1400156ac:	mov    DWORD PTR [rsp+0x8],ecx
   1400156b0:	sub    rsp,0x28
   1400156b4:	mov    ecx,0x17
   1400156b9:	call   0x1400242cc
   1400156be:	test   eax,eax
   1400156c0:	je     0x1400156ca
   1400156c2:	mov    eax,DWORD PTR [rsp+0x30]
   1400156c6:	mov    ecx,eax
   1400156c8:	int    0x29
   1400156ca:	lea    rcx,[rip+0x2385f]        # 0x140038f30
   1400156d1:	call   0x1400167d4
   1400156d6:	mov    rax,QWORD PTR [rsp+0x28]
   1400156db:	mov    QWORD PTR [rip+0x23946],rax        # 0x140039028
   1400156e2:	lea    rax,[rsp+0x28]
   1400156e7:	add    rax,0x8
   1400156eb:	mov    QWORD PTR [rip+0x238d6],rax        # 0x140038fc8
   1400156f2:	mov    rax,QWORD PTR [rip+0x2392f]        # 0x140039028
   1400156f9:	mov    QWORD PTR [rip+0x237a0],rax        # 0x140038ea0
   140015700:	mov    DWORD PTR [rip+0x23786],0xc0000409        # 0x140038e90
   14001570a:	mov    DWORD PTR [rip+0x23780],0x1        # 0x140038e94
   140015714:	mov    DWORD PTR [rip+0x2378a],0x1        # 0x140038ea8
   14001571e:	mov    eax,0x8
   140015723:	imul   rax,rax,0x0
   140015727:	lea    rcx,[rip+0x23782]        # 0x140038eb0
   14001572e:	mov    edx,DWORD PTR [rsp+0x30]
   140015732:	mov    QWORD PTR [rcx+rax*1],rdx
   140015736:	lea    rcx,[rip+0x13883]        # 0x140028fc0
   14001573d:	call   0x140015578
   140015742:	add    rsp,0x28
   140015746:	ret    
   140015747:	int3   
   140015748:	mov    QWORD PTR [rsp+0x8],rbx
   14001574d:	mov    QWORD PTR [rsp+0x10],rbp
   140015752:	mov    QWORD PTR [rsp+0x18],rsi
   140015757:	push   rdi
   140015758:	sub    rsp,0x10
   14001575c:	xor    ecx,ecx
   14001575e:	xor    eax,eax
   140015760:	xor    edi,edi
   140015762:	cpuid  
   140015764:	mov    DWORD PTR [rip+0x218b6],0x2        # 0x140037024
   14001576e:	mov    DWORD PTR [rip+0x218a8],0x1        # 0x140037020
   140015778:	mov    r11d,ebx
   14001577b:	mov    ebx,ecx
   14001577d:	mov    r8d,edx
   140015780:	xor    ebx,0x6c65746e
   140015786:	mov    r9d,edx
   140015789:	mov    edx,r11d
   14001578c:	xor    r8d,0x49656e69
   140015793:	xor    edx,0x756e6547
   140015799:	mov    ebp,eax
   14001579b:	or     r8d,ebx
   14001579e:	lea    eax,[rdi+0x1]
   1400157a1:	or     r8d,edx
   1400157a4:	sete   r10b
   1400157a8:	xor    r11d,0x68747541
   1400157af:	xor    r9d,0x69746e65
   1400157b6:	or     r11d,r9d
   1400157b9:	xor    ecx,0x444d4163
   1400157bf:	or     r11d,ecx
   1400157c2:	sete   sil
   1400157c6:	xor    ecx,ecx
   1400157c8:	cpuid  
   1400157ca:	mov    r11d,ecx
   1400157cd:	mov    r9d,eax
   1400157d0:	mov    DWORD PTR [rsp+0x4],ebx
   1400157d4:	mov    DWORD PTR [rsp+0xc],edx
   1400157d8:	test   r10b,r10b
   1400157db:	je     0x14001582c
   1400157dd:	mov    edx,eax
   1400157df:	and    edx,0xfff3ff0
   1400157e5:	cmp    edx,0x106c0
   1400157eb:	je     0x140015818
   1400157ed:	cmp    edx,0x20660
   1400157f3:	je     0x140015818
   1400157f5:	cmp    edx,0x20670
   1400157fb:	je     0x140015818
   1400157fd:	add    edx,0xfffcf9b0
   140015803:	cmp    edx,0x20
   140015806:	ja     0x14001582c
   140015808:	movabs rcx,0x100010001
   140015812:	bt     rcx,rdx
   140015816:	jae    0x14001582c
   140015818:	mov    r8d,DWORD PTR [rip+0x23be5]        # 0x140039404
   14001581f:	or     r8d,0x1
   140015823:	mov    DWORD PTR [rip+0x23bda],r8d        # 0x140039404
   14001582a:	jmp    0x140015833
   14001582c:	mov    r8d,DWORD PTR [rip+0x23bd1]        # 0x140039404
   140015833:	test   sil,sil
   140015836:	je     0x140015853
   140015838:	and    r9d,0xff00f00
   14001583f:	cmp    r9d,0x600f00
   140015846:	jl     0x140015853
   140015848:	or     r8d,0x4
   14001584c:	mov    DWORD PTR [rip+0x23bb1],r8d        # 0x140039404
   140015853:	mov    eax,0x7
   140015858:	cmp    ebp,eax
   14001585a:	jl     0x14001587e
   14001585c:	xor    ecx,ecx
   14001585e:	cpuid  
   140015860:	mov    edi,ebx
   140015862:	mov    DWORD PTR [rsp],eax
   140015865:	mov    DWORD PTR [rsp+0x8],ecx
   140015869:	mov    DWORD PTR [rsp+0xc],edx
   14001586d:	bt     ebx,0x9
   140015871:	jae    0x14001587e
   140015873:	or     r8d,0x2
   140015877:	mov    DWORD PTR [rip+0x23b86],r8d        # 0x140039404
   14001587e:	bt     r11d,0x14
   140015883:	jae    0x1400158d5
   140015885:	mov    DWORD PTR [rip+0x21791],0x2        # 0x140037020
   14001588f:	mov    DWORD PTR [rip+0x2178b],0x6        # 0x140037024
   140015899:	bt     r11d,0x1b
   14001589e:	jae    0x1400158d5
   1400158a0:	bt     r11d,0x1c
   1400158a5:	jae    0x1400158d5
   1400158a7:	mov    DWORD PTR [rip+0x2176f],0x3        # 0x140037020
   1400158b1:	mov    DWORD PTR [rip+0x21769],0xe        # 0x140037024
   1400158bb:	test   dil,0x20
   1400158bf:	je     0x1400158d5
   1400158c1:	mov    DWORD PTR [rip+0x21755],0x5        # 0x140037020
   1400158cb:	mov    DWORD PTR [rip+0x2174f],0x2e        # 0x140037024
   1400158d5:	mov    rbx,QWORD PTR [rsp+0x20]
   1400158da:	mov    rbp,QWORD PTR [rsp+0x28]
   1400158df:	mov    rsi,QWORD PTR [rsp+0x30]
   1400158e4:	xor    eax,eax
   1400158e6:	add    rsp,0x10
   1400158ea:	pop    rdi
   1400158eb:	ret    
   1400158ec:	rex push rbx
   1400158ee:	sub    rsp,0x20
   1400158f2:	mov    ebx,ecx
   1400158f4:	lea    r8,[rsp+0x38]
   1400158f9:	lea    rdx,[rip+0x136d0]        # 0x140028fd0
   140015900:	xor    ecx,ecx
   140015902:	call   QWORD PTR [rip+0x11958]        # 0x140027260
   140015908:	test   eax,eax
   14001590a:	je     0x140015927
   14001590c:	mov    rcx,QWORD PTR [rsp+0x38]
   140015911:	lea    rdx,[rip+0x136d0]        # 0x140028fe8
   140015918:	call   QWORD PTR [rip+0x11752]        # 0x140027070
   14001591e:	test   rax,rax
   140015921:	je     0x140015927
   140015923:	mov    ecx,ebx
   140015925:	call   rax
   140015927:	add    rsp,0x20
   14001592b:	pop    rbx
   14001592c:	ret    
   14001592d:	int3   
   14001592e:	int3   
   14001592f:	int3   
   140015930:	rex push rbx
   140015932:	sub    rsp,0x20
   140015936:	mov    ebx,ecx
   140015938:	call   0x1400158ec
   14001593d:	mov    ecx,ebx
   14001593f:	call   QWORD PTR [rip+0x11913]        # 0x140027258
   140015945:	int3   
   140015946:	int3   
   140015947:	int3   
   140015948:	rex push rbx
   14001594a:	sub    rsp,0x20
   14001594e:	mov    ebx,ecx
   140015950:	call   0x1400163a0
   140015955:	mov    ecx,ebx
   140015957:	call   0x140016414
   14001595c:	xor    r8d,r8d
   14001595f:	mov    ecx,0xff
   140015964:	lea    edx,[r8+0x1]
   140015968:	call   0x140015b34
   14001596d:	int3   
   14001596e:	int3   
   14001596f:	int3   
   140015970:	mov    edx,0x1
   140015975:	xor    ecx,ecx
   140015977:	mov    r8d,edx
   14001597a:	jmp    0x140015b34
   14001597f:	int3   
   140015980:	xor    edx,edx
   140015982:	xor    ecx,ecx
   140015984:	lea    r8d,[rdx+0x1]
   140015988:	jmp    0x140015b34
   14001598d:	int3   
   14001598e:	int3   
   14001598f:	int3   
   140015990:	rex push rbx
   140015992:	sub    rsp,0x20
   140015996:	cmp    QWORD PTR [rip+0x135ea],0x0        # 0x140028f88
   14001599e:	mov    ebx,ecx
   1400159a0:	je     0x1400159ba
   1400159a2:	lea    rcx,[rip+0x135df]        # 0x140028f88
   1400159a9:	call   0x14001d040
   1400159ae:	test   eax,eax
   1400159b0:	je     0x1400159ba
   1400159b2:	mov    ecx,ebx
   1400159b4:	call   QWORD PTR [rip+0x135ce]        # 0x140028f88
   1400159ba:	call   0x140019e7c
   1400159bf:	lea    rdx,[rip+0x11a1a]        # 0x1400273e0
   1400159c6:	lea    rcx,[rip+0x119e3]        # 0x1400273b0
   1400159cd:	call   0x140015ae0
   1400159d2:	test   eax,eax
   1400159d4:	jne    0x140015a20
   1400159d6:	lea    rcx,[rip+0x21bf]        # 0x140017b9c
   1400159dd:	call   0x140013788
   1400159e2:	lea    rdx,[rip+0x119bf]        # 0x1400273a8
   1400159e9:	lea    rcx,[rip+0x11988]        # 0x140027378
   1400159f0:	call   0x140015a80
   1400159f5:	cmp    QWORD PTR [rip+0x25b4b],0x0        # 0x14003b548
   1400159fd:	je     0x140015a1e
   1400159ff:	lea    rcx,[rip+0x25b42]        # 0x14003b548
   140015a06:	call   0x14001d040
   140015a0b:	test   eax,eax
   140015a0d:	je     0x140015a1e
   140015a0f:	xor    r8d,r8d
   140015a12:	xor    ecx,ecx
   140015a14:	lea    edx,[r8+0x2]
   140015a18:	call   QWORD PTR [rip+0x25b2a]        # 0x14003b548
   140015a1e:	xor    eax,eax
   140015a20:	add    rsp,0x20
   140015a24:	pop    rbx
   140015a25:	ret    
   140015a26:	int3   
   140015a27:	int3   
   140015a28:	xor    r8d,r8d
   140015a2b:	lea    edx,[r8+0x1]
   140015a2f:	jmp    0x140015b34
   140015a34:	rex push rbx
   140015a36:	sub    rsp,0x20
   140015a3a:	xor    ecx,ecx
   140015a3c:	call   QWORD PTR [rip+0x117ce]        # 0x140027210
   140015a42:	mov    rcx,rax
   140015a45:	mov    rbx,rax
   140015a48:	call   0x140016378
   140015a4d:	mov    rcx,rbx
   140015a50:	call   0x140013ee4
   140015a55:	mov    rcx,rbx
   140015a58:	call   0x140016170
   140015a5d:	mov    rcx,rbx
   140015a60:	call   0x14001d0d0
   140015a65:	mov    rcx,rbx
   140015a68:	call   0x140019224
   140015a6d:	mov    rcx,rbx
   140015a70:	call   0x14001d324
   140015a75:	add    rsp,0x20
   140015a79:	pop    rbx
   140015a7a:	jmp    0x1400169cc
   140015a7f:	int3   
   140015a80:	mov    QWORD PTR [rsp+0x8],rbx
   140015a85:	mov    QWORD PTR [rsp+0x10],rbp
   140015a8a:	mov    QWORD PTR [rsp+0x18],rsi
   140015a8f:	push   rdi
   140015a90:	sub    rsp,0x20
   140015a94:	xor    ebp,ebp
   140015a96:	mov    rbx,rdx
   140015a99:	mov    rdi,rcx
   140015a9c:	sub    rbx,rcx
   140015a9f:	mov    esi,ebp
   140015aa1:	add    rbx,0x7
   140015aa5:	shr    rbx,0x3
   140015aa9:	cmp    rcx,rdx
   140015aac:	cmova  rbx,rbp
   140015ab0:	test   rbx,rbx
   140015ab3:	je     0x140015acb
   140015ab5:	mov    rax,QWORD PTR [rdi]
   140015ab8:	test   rax,rax
   140015abb:	je     0x140015abf
   140015abd:	call   rax
   140015abf:	inc    rsi
   140015ac2:	add    rdi,0x8
   140015ac6:	cmp    rsi,rbx
   140015ac9:	jb     0x140015ab5
   140015acb:	mov    rbx,QWORD PTR [rsp+0x30]
   140015ad0:	mov    rbp,QWORD PTR [rsp+0x38]
   140015ad5:	mov    rsi,QWORD PTR [rsp+0x40]
   140015ada:	add    rsp,0x20
   140015ade:	pop    rdi
   140015adf:	ret    
   140015ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140015ae5:	push   rdi
   140015ae6:	sub    rsp,0x20
   140015aea:	xor    eax,eax
   140015aec:	mov    rdi,rdx
   140015aef:	mov    rbx,rcx
   140015af2:	cmp    rcx,rdx
   140015af5:	jae    0x140015b0e
   140015af7:	test   eax,eax
   140015af9:	jne    0x140015b0e
   140015afb:	mov    rcx,QWORD PTR [rbx]
   140015afe:	test   rcx,rcx
   140015b01:	je     0x140015b05
   140015b03:	call   rcx
   140015b05:	add    rbx,0x8
   140015b09:	cmp    rbx,rdi
   140015b0c:	jb     0x140015af7
   140015b0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140015b13:	add    rsp,0x20
   140015b17:	pop    rdi
   140015b18:	ret    
   140015b19:	int3   
   140015b1a:	int3   
   140015b1b:	int3   
   140015b1c:	mov    ecx,0x8
   140015b21:	jmp    0x14001cde8
   140015b26:	int3   
   140015b27:	int3   
   140015b28:	mov    ecx,0x8
   140015b2d:	jmp    0x14001cfd8
   140015b32:	int3   
   140015b33:	int3   
   140015b34:	mov    QWORD PTR [rsp+0x8],rbx
   140015b39:	mov    QWORD PTR [rsp+0x10],rsi
   140015b3e:	mov    DWORD PTR [rsp+0x18],r8d
   140015b43:	push   rdi
   140015b44:	push   r12
   140015b46:	push   r13
   140015b48:	push   r14
   140015b4a:	push   r15
   140015b4c:	sub    rsp,0x40
   140015b50:	mov    r14d,r8d
   140015b53:	mov    ebx,edx
   140015b55:	mov    r13d,ecx
   140015b58:	mov    ecx,0x8
   140015b5d:	call   0x14001cde8
   140015b62:	nop
   140015b63:	cmp    DWORD PTR [rip+0x2389e],0x1        # 0x140039408
   140015b6a:	je     0x140015c77
   140015b70:	mov    DWORD PTR [rip+0x238ce],0x1        # 0x140039448
   140015b7a:	mov    BYTE PTR [rip+0x238c3],r14b        # 0x140039444
   140015b81:	test   ebx,ebx
   140015b83:	jne    0x140015c63
   140015b89:	mov    rcx,QWORD PTR [rip+0x259c8]        # 0x14003b558
   140015b90:	call   QWORD PTR [rip+0x1155a]        # 0x1400270f0
   140015b96:	mov    rsi,rax
   140015b99:	mov    QWORD PTR [rsp+0x30],rax
   140015b9e:	test   rax,rax
   140015ba1:	je     0x140015c50
   140015ba7:	mov    rcx,QWORD PTR [rip+0x259a2]        # 0x14003b550
   140015bae:	call   QWORD PTR [rip+0x1153c]        # 0x1400270f0
   140015bb4:	mov    rdi,rax
   140015bb7:	mov    QWORD PTR [rsp+0x20],rax
   140015bbc:	mov    r12,rsi
   140015bbf:	mov    QWORD PTR [rsp+0x28],rsi
   140015bc4:	mov    r15,rax
   140015bc7:	mov    QWORD PTR [rsp+0x38],rax
   140015bcc:	sub    rdi,0x8
   140015bd0:	mov    QWORD PTR [rsp+0x20],rdi
   140015bd5:	cmp    rdi,rsi
   140015bd8:	jb     0x140015c50
   140015bda:	xor    ecx,ecx
   140015bdc:	call   QWORD PTR [rip+0x1162e]        # 0x140027210
   140015be2:	cmp    QWORD PTR [rdi],rax
   140015be5:	jne    0x140015be9
   140015be7:	jmp    0x140015bcc
   140015be9:	cmp    rdi,rsi
   140015bec:	jb     0x140015c50
   140015bee:	mov    rcx,QWORD PTR [rdi]
   140015bf1:	call   QWORD PTR [rip+0x114f9]        # 0x1400270f0
   140015bf7:	mov    rbx,rax
   140015bfa:	xor    ecx,ecx
   140015bfc:	call   QWORD PTR [rip+0x1160e]        # 0x140027210
   140015c02:	mov    QWORD PTR [rdi],rax
   140015c05:	call   rbx
   140015c07:	mov    rcx,QWORD PTR [rip+0x2594a]        # 0x14003b558
   140015c0e:	call   QWORD PTR [rip+0x114dc]        # 0x1400270f0
   140015c14:	mov    rbx,rax
   140015c17:	mov    rcx,QWORD PTR [rip+0x25932]        # 0x14003b550
   140015c1e:	call   QWORD PTR [rip+0x114cc]        # 0x1400270f0
   140015c24:	cmp    r12,rbx
   140015c27:	jne    0x140015c2e
   140015c29:	cmp    r15,rax
   140015c2c:	je     0x140015be7
   140015c2e:	mov    r12,rbx
   140015c31:	mov    QWORD PTR [rsp+0x28],rbx
   140015c36:	mov    rsi,rbx
   140015c39:	mov    QWORD PTR [rsp+0x30],rbx
   140015c3e:	mov    r15,rax
   140015c41:	mov    QWORD PTR [rsp+0x38],rax
   140015c46:	mov    rdi,rax
   140015c49:	mov    QWORD PTR [rsp+0x20],rax
   140015c4e:	jmp    0x140015be7
   140015c50:	lea    rdx,[rip+0x117b1]        # 0x140027408
   140015c57:	lea    rcx,[rip+0x1178a]        # 0x1400273e8
   140015c5e:	call   0x140015a80
   140015c63:	lea    rdx,[rip+0x117ae]        # 0x140027418
   140015c6a:	lea    rcx,[rip+0x1179f]        # 0x140027410
   140015c71:	call   0x140015a80
   140015c76:	nop
   140015c77:	test   r14d,r14d
   140015c7a:	je     0x140015c8b
   140015c7c:	mov    ecx,0x8
   140015c81:	call   0x14001cfd8
   140015c86:	test   r14d,r14d
   140015c89:	jne    0x140015cb1
   140015c8b:	mov    DWORD PTR [rip+0x23773],0x1        # 0x140039408
   140015c95:	mov    ecx,0x8
   140015c9a:	call   0x14001cfd8
   140015c9f:	mov    ecx,r13d
   140015ca2:	call   0x1400158ec
   140015ca7:	mov    ecx,r13d
   140015caa:	call   QWORD PTR [rip+0x115a8]        # 0x140027258
   140015cb0:	int3   
   140015cb1:	mov    rbx,QWORD PTR [rsp+0x70]
   140015cb6:	mov    rsi,QWORD PTR [rsp+0x78]
   140015cbb:	add    rsp,0x40
   140015cbf:	pop    r15
   140015cc1:	pop    r14
   140015cc3:	pop    r13
   140015cc5:	pop    r12
   140015cc7:	pop    rdi
   140015cc8:	ret    
   140015cc9:	int3   
   140015cca:	int3   
   140015ccb:	int3   
   140015ccc:	xor    r8d,r8d
   140015ccf:	xor    edx,edx
   140015cd1:	jmp    0x140015b34
   140015cd6:	int3   
   140015cd7:	int3   
   140015cd8:	sub    rsp,0x28
   140015cdc:	test   rcx,rcx
   140015cdf:	jne    0x140015cfa
   140015ce1:	call   0x1400161e8
   140015ce6:	mov    DWORD PTR [rax],0x16
   140015cec:	call   0x140013f54
   140015cf1:	or     rax,0xffffffffffffffff
   140015cf5:	add    rsp,0x28
   140015cf9:	ret    
   140015cfa:	mov    r8,rcx
   140015cfd:	mov    rcx,QWORD PTR [rip+0x23784]        # 0x140039488
   140015d04:	xor    edx,edx
   140015d06:	add    rsp,0x28
   140015d0a:	rex.W jmp QWORD PTR [rip+0x11557]        # 0x140027268
   140015d11:	int3   
   140015d12:	int3   
   140015d13:	int3   
   140015d14:	mov    rax,rsp
   140015d17:	mov    QWORD PTR [rax+0x8],rbx
   140015d1b:	mov    QWORD PTR [rax+0x10],rbp
   140015d1f:	mov    QWORD PTR [rax+0x18],rsi
   140015d23:	mov    QWORD PTR [rax+0x20],rdi
   140015d27:	push   r14
   140015d29:	sub    rsp,0x20
   140015d2d:	xor    ebx,ebx
   140015d2f:	mov    rsi,rdx
   140015d32:	mov    rbp,rcx
   140015d35:	or     r14d,0xffffffff
   140015d39:	xor    r8d,r8d
   140015d3c:	mov    rdx,rsi
   140015d3f:	mov    rcx,rbp
   140015d42:	call   0x14001d488
   140015d47:	mov    rdi,rax
   140015d4a:	test   rax,rax
   140015d4d:	jne    0x140015d75
   140015d4f:	cmp    DWORD PTR [rip+0x2370b],eax        # 0x140039460
   140015d55:	jbe    0x140015d75
   140015d57:	mov    ecx,ebx
   140015d59:	call   0x140016dd0
   140015d5e:	lea    ecx,[rbx+0x3e8]
   140015d64:	cmp    ecx,DWORD PTR [rip+0x236f6]        # 0x140039460
   140015d6a:	mov    ebx,ecx
   140015d6c:	cmova  ebx,r14d
   140015d70:	cmp    ebx,r14d
   140015d73:	jne    0x140015d39
   140015d75:	mov    rbx,QWORD PTR [rsp+0x30]
   140015d7a:	mov    rbp,QWORD PTR [rsp+0x38]
   140015d7f:	mov    rsi,QWORD PTR [rsp+0x40]
   140015d84:	mov    rax,rdi
   140015d87:	mov    rdi,QWORD PTR [rsp+0x48]
   140015d8c:	add    rsp,0x20
   140015d90:	pop    r14
   140015d92:	ret    
   140015d93:	int3   
   140015d94:	mov    rax,rsp
   140015d97:	mov    QWORD PTR [rax+0x8],rbx
   140015d9b:	mov    QWORD PTR [rax+0x10],rbp
   140015d9f:	mov    QWORD PTR [rax+0x18],rsi
   140015da3:	mov    QWORD PTR [rax+0x20],rdi
   140015da7:	push   r14
   140015da9:	sub    rsp,0x20
   140015dad:	mov    esi,DWORD PTR [rip+0x236ad]        # 0x140039460
   140015db3:	xor    ebx,ebx
   140015db5:	mov    rbp,rcx
   140015db8:	or     r14d,0xffffffff
   140015dbc:	mov    rcx,rbp
   140015dbf:	call   0x14001396c
   140015dc4:	mov    rdi,rax
   140015dc7:	test   rax,rax
   140015dca:	jne    0x140015df0
   140015dcc:	test   esi,esi
   140015dce:	je     0x140015df0
   140015dd0:	mov    ecx,ebx
   140015dd2:	call   0x140016dd0
   140015dd7:	mov    esi,DWORD PTR [rip+0x23683]        # 0x140039460
   140015ddd:	lea    ecx,[rbx+0x3e8]
   140015de3:	cmp    ecx,esi
   140015de5:	mov    ebx,ecx
   140015de7:	cmova  ebx,r14d
   140015deb:	cmp    ebx,r14d
   140015dee:	jne    0x140015dbc
   140015df0:	mov    rbx,QWORD PTR [rsp+0x30]
   140015df5:	mov    rbp,QWORD PTR [rsp+0x38]
   140015dfa:	mov    rsi,QWORD PTR [rsp+0x40]
   140015dff:	mov    rax,rdi
   140015e02:	mov    rdi,QWORD PTR [rsp+0x48]
   140015e07:	add    rsp,0x20
   140015e0b:	pop    r14
   140015e0d:	ret    
   140015e0e:	int3   
   140015e0f:	int3   
   140015e10:	mov    rax,rsp
   140015e13:	mov    QWORD PTR [rax+0x8],rbx
   140015e17:	mov    QWORD PTR [rax+0x10],rbp
   140015e1b:	mov    QWORD PTR [rax+0x18],rsi
   140015e1f:	mov    QWORD PTR [rax+0x20],rdi
   140015e23:	push   r14
   140015e25:	sub    rsp,0x20
   140015e29:	xor    ebx,ebx
   140015e2b:	mov    rsi,rdx
   140015e2e:	mov    rbp,rcx
   140015e31:	or     r14d,0xffffffff
   140015e35:	mov    rdx,rsi
   140015e38:	mov    rcx,rbp
   140015e3b:	call   0x14001d32c
   140015e40:	mov    rdi,rax
   140015e43:	test   rax,rax
   140015e46:	jne    0x140015e73
   140015e48:	test   rsi,rsi
   140015e4b:	je     0x140015e73
   140015e4d:	cmp    DWORD PTR [rip+0x2360d],eax        # 0x140039460
   140015e53:	jbe    0x140015e73
   140015e55:	mov    ecx,ebx
   140015e57:	call   0x140016dd0
   140015e5c:	lea    ecx,[rbx+0x3e8]
   140015e62:	cmp    ecx,DWORD PTR [rip+0x235f8]        # 0x140039460
   140015e68:	mov    ebx,ecx
   140015e6a:	cmova  ebx,r14d
   140015e6e:	cmp    ebx,r14d
   140015e71:	jne    0x140015e35
   140015e73:	mov    rbx,QWORD PTR [rsp+0x30]
   140015e78:	mov    rbp,QWORD PTR [rsp+0x38]
   140015e7d:	mov    rsi,QWORD PTR [rsp+0x40]
   140015e82:	mov    rax,rdi
   140015e85:	mov    rdi,QWORD PTR [rsp+0x48]
   140015e8a:	add    rsp,0x20
   140015e8e:	pop    r14
   140015e90:	ret    
   140015e91:	int3   
   140015e92:	int3   
   140015e93:	int3   
   140015e94:	mov    QWORD PTR [rsp+0x8],rbx
   140015e99:	mov    QWORD PTR [rsp+0x10],rbp
   140015e9e:	mov    QWORD PTR [rsp+0x18],rsi
   140015ea3:	push   rdi
   140015ea4:	push   r14
   140015ea6:	push   r15
   140015ea8:	sub    rsp,0x20
   140015eac:	xor    ebx,ebx
   140015eae:	mov    rsi,r8
   140015eb1:	mov    rbp,rdx
   140015eb4:	or     r15d,0xffffffff
   140015eb8:	mov    r14,rcx
   140015ebb:	mov    r8,rsi
   140015ebe:	mov    rdx,rbp
   140015ec1:	mov    rcx,r14
   140015ec4:	call   0x14001d400
   140015ec9:	mov    rdi,rax
   140015ecc:	test   rax,rax
   140015ecf:	jne    0x140015efc
   140015ed1:	test   rsi,rsi
   140015ed4:	je     0x140015efc
   140015ed6:	cmp    DWORD PTR [rip+0x23584],eax        # 0x140039460
   140015edc:	jbe    0x140015efc
   140015ede:	mov    ecx,ebx
   140015ee0:	call   0x140016dd0
   140015ee5:	lea    ecx,[rbx+0x3e8]
   140015eeb:	cmp    ecx,DWORD PTR [rip+0x2356f]        # 0x140039460
   140015ef1:	mov    ebx,ecx
   140015ef3:	cmova  ebx,r15d
   140015ef7:	cmp    ebx,r15d
   140015efa:	jne    0x140015ebb
   140015efc:	mov    rbx,QWORD PTR [rsp+0x40]
   140015f01:	mov    rbp,QWORD PTR [rsp+0x48]
   140015f06:	mov    rsi,QWORD PTR [rsp+0x50]
   140015f0b:	mov    rax,rdi
   140015f0e:	add    rsp,0x20
   140015f12:	pop    r15
   140015f14:	pop    r14
   140015f16:	pop    rdi
   140015f17:	ret    
   140015f18:	mov    rax,rsp
   140015f1b:	mov    QWORD PTR [rax+0x8],rbx
   140015f1f:	mov    QWORD PTR [rax+0x10],rbp
   140015f23:	mov    QWORD PTR [rax+0x18],rsi
   140015f27:	push   rdi
   140015f28:	push   r12
   140015f2a:	push   r13
   140015f2c:	push   r14
   140015f2e:	push   r15
   140015f30:	sub    rsp,0x40
   140015f34:	mov    r12,QWORD PTR [r9+0x8]
   140015f38:	mov    r15,QWORD PTR [r9]
   140015f3b:	mov    rbx,QWORD PTR [r9+0x38]
   140015f3f:	sub    r15,r12
   140015f42:	test   BYTE PTR [rcx+0x4],0x66
   140015f46:	mov    r14,r9
   140015f49:	mov    r13,rdx
   140015f4c:	mov    rbp,rcx
   140015f4f:	jne    0x140016033
   140015f55:	mov    esi,DWORD PTR [r9+0x48]
   140015f59:	mov    QWORD PTR [rax-0x38],rcx
   140015f5d:	mov    QWORD PTR [rax-0x30],r8
   140015f61:	cmp    esi,DWORD PTR [rbx]
   140015f63:	jae    0x1400160d6
   140015f69:	mov    edi,esi
   140015f6b:	add    rdi,rdi
   140015f6e:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   140015f72:	cmp    r15,rax
   140015f75:	jb     0x140016025
   140015f7b:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   140015f7f:	cmp    r15,rax
   140015f82:	jae    0x140016025
   140015f88:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   140015f8d:	je     0x140016025
   140015f93:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   140015f98:	je     0x140015fb1
   140015f9a:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   140015f9e:	lea    rcx,[rsp+0x30]
   140015fa3:	mov    rdx,r13
   140015fa6:	add    rax,r12
   140015fa9:	call   rax
   140015fab:	test   eax,eax
   140015fad:	js     0x14001602c
   140015faf:	jle    0x140016025
   140015fb1:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140015fb8:	jne    0x140015fe2
   140015fba:	cmp    QWORD PTR [rip+0x13f8e],0x0        # 0x140029f50
   140015fc2:	je     0x140015fe2
   140015fc4:	lea    rcx,[rip+0x13f85]        # 0x140029f50
   140015fcb:	call   0x14001d040
   140015fd0:	test   eax,eax
   140015fd2:	je     0x140015fe2
   140015fd4:	mov    edx,0x1
   140015fd9:	mov    rcx,rbp
   140015fdc:	call   QWORD PTR [rip+0x13f6e]        # 0x140029f50
   140015fe2:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   140015fe6:	mov    r8d,0x1
   140015fec:	mov    rdx,r13
   140015fef:	add    rcx,r12
   140015ff2:	call   0x14001d570
   140015ff7:	mov    rax,QWORD PTR [r14+0x40]
   140015ffb:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   140015fff:	mov    r9d,DWORD PTR [rbp+0x0]
   140016003:	mov    QWORD PTR [rsp+0x28],rax
   140016008:	mov    rax,QWORD PTR [r14+0x28]
   14001600c:	add    rdx,r12
   14001600f:	mov    r8,rbp
   140016012:	mov    rcx,r13
   140016015:	mov    QWORD PTR [rsp+0x20],rax
   14001601a:	call   QWORD PTR [rip+0x11230]        # 0x140027250
   140016020:	call   0x14001d5a0
   140016025:	inc    esi
   140016027:	jmp    0x140015f61
   14001602c:	xor    eax,eax
   14001602e:	jmp    0x1400160db
   140016033:	mov    rsi,QWORD PTR [r9+0x20]
   140016037:	mov    edi,DWORD PTR [r9+0x48]
   14001603b:	sub    rsi,r12
   14001603e:	jmp    0x1400160cc
   140016043:	mov    ecx,edi
   140016045:	add    rcx,rcx
   140016048:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   14001604c:	cmp    r15,rax
   14001604f:	jb     0x1400160ca
   140016051:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   140016055:	cmp    r15,rax
   140016058:	jae    0x1400160ca
   14001605a:	test   BYTE PTR [rbp+0x4],0x20
   14001605e:	je     0x1400160a4
   140016060:	xor    r9d,r9d
   140016063:	test   edx,edx
   140016065:	je     0x14001609f
   140016067:	mov    r8d,r9d
   14001606a:	add    r8,r8
   14001606d:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   140016072:	cmp    rsi,rax
   140016075:	jb     0x140016097
   140016077:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   14001607c:	cmp    rsi,rax
   14001607f:	jae    0x140016097
   140016081:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140016085:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   14001608a:	jne    0x140016097
   14001608c:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   140016090:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   140016095:	je     0x14001609f
   140016097:	inc    r9d
   14001609a:	cmp    r9d,edx
   14001609d:	jb     0x140016067
   14001609f:	cmp    r9d,edx
   1400160a2:	jne    0x1400160d6
   1400160a4:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   1400160a8:	test   eax,eax
   1400160aa:	je     0x1400160b3
   1400160ac:	cmp    rsi,rax
   1400160af:	je     0x1400160d6
   1400160b1:	jmp    0x1400160ca
   1400160b3:	lea    eax,[rdi+0x1]
   1400160b6:	mov    rdx,r13
   1400160b9:	mov    DWORD PTR [r14+0x48],eax
   1400160bd:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   1400160c2:	mov    cl,0x1
   1400160c4:	add    r8,r12
   1400160c7:	call   r8
   1400160ca:	inc    edi
   1400160cc:	mov    edx,DWORD PTR [rbx]
   1400160ce:	cmp    edi,edx
   1400160d0:	jb     0x140016043
   1400160d6:	mov    eax,0x1
   1400160db:	lea    r11,[rsp+0x40]
   1400160e0:	mov    rbx,QWORD PTR [r11+0x30]
   1400160e4:	mov    rbp,QWORD PTR [r11+0x38]
   1400160e8:	mov    rsi,QWORD PTR [r11+0x40]
   1400160ec:	mov    rsp,r11
   1400160ef:	pop    r15
   1400160f1:	pop    r14
   1400160f3:	pop    r13
   1400160f5:	pop    r12
   1400160f7:	pop    rdi
   1400160f8:	ret    
   1400160f9:	int3   
   1400160fa:	int3   
   1400160fb:	int3   
   1400160fc:	mov    eax,DWORD PTR [rip+0x20f26]        # 0x140037028
   140016102:	mov    r8d,edx
   140016105:	and    ecx,edx
   140016107:	not    r8d
   14001610a:	and    r8d,eax
   14001610d:	or     r8d,ecx
   140016110:	mov    DWORD PTR [rip+0x20f11],r8d        # 0x140037028
   140016117:	ret    
   140016118:	sub    rsp,0x28
   14001611c:	call   0x14001d0c0
   140016121:	test   rax,rax
   140016124:	je     0x140016130
   140016126:	mov    ecx,0x16
   14001612b:	call   0x14001d0f0
   140016130:	test   BYTE PTR [rip+0x20ef1],0x2        # 0x140037028
   140016137:	je     0x140016162
   140016139:	mov    ecx,0x17
   14001613e:	call   0x1400242cc
   140016143:	test   eax,eax
   140016145:	je     0x14001614e
   140016147:	mov    ecx,0x7
   14001614c:	int    0x29
   14001614e:	mov    r8d,0x1
   140016154:	mov    edx,0x40000015
   140016159:	lea    ecx,[r8+0x2]
   14001615d:	call   0x140013df0
   140016162:	mov    ecx,0x3
   140016167:	call   0x140015a28
   14001616c:	int3   
   14001616d:	int3   
   14001616e:	int3   
   14001616f:	int3   
   140016170:	mov    QWORD PTR [rip+0x232f1],rcx        # 0x140039468
   140016177:	ret    
   140016178:	sub    rsp,0x28
   14001617c:	call   0x140017194
   140016181:	test   rax,rax
   140016184:	jne    0x14001618f
   140016186:	lea    rax,[rip+0x2100f]        # 0x14003719c
   14001618d:	jmp    0x140016193
   14001618f:	add    rax,0x14
   140016193:	add    rsp,0x28
   140016197:	ret    
   140016198:	mov    QWORD PTR [rsp+0x8],rbx
   14001619d:	push   rdi
   14001619e:	sub    rsp,0x20
   1400161a2:	mov    edi,ecx
   1400161a4:	call   0x140017194
   1400161a9:	test   rax,rax
   1400161ac:	jne    0x1400161b7
   1400161ae:	lea    rax,[rip+0x20fe7]        # 0x14003719c
   1400161b5:	jmp    0x1400161bb
   1400161b7:	add    rax,0x14
   1400161bb:	mov    DWORD PTR [rax],edi
   1400161bd:	call   0x140017194
   1400161c2:	lea    rbx,[rip+0x20fcf]        # 0x140037198
   1400161c9:	test   rax,rax
   1400161cc:	je     0x1400161d2
   1400161ce:	lea    rbx,[rax+0x10]
   1400161d2:	mov    ecx,edi
   1400161d4:	call   0x140016208
   1400161d9:	mov    DWORD PTR [rbx],eax
   1400161db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400161e0:	add    rsp,0x20
   1400161e4:	pop    rdi
   1400161e5:	ret    
   1400161e6:	int3   
   1400161e7:	int3   
   1400161e8:	sub    rsp,0x28
   1400161ec:	call   0x140017194
   1400161f1:	test   rax,rax
   1400161f4:	jne    0x1400161ff
   1400161f6:	lea    rax,[rip+0x20f9b]        # 0x140037198
   1400161fd:	jmp    0x140016203
   1400161ff:	add    rax,0x10
   140016203:	add    rsp,0x28
   140016207:	ret    
   140016208:	lea    r10,[rip+0x20e21]        # 0x140037030
   14001620f:	xor    edx,edx
   140016211:	mov    r8,r10
   140016214:	lea    r9d,[rdx+0x8]
   140016218:	cmp    ecx,DWORD PTR [r8]
   14001621b:	je     0x14001624c
   14001621d:	inc    edx
   14001621f:	add    r8,r9
   140016222:	movsxd rax,edx
   140016225:	cmp    rax,0x2d
   140016229:	jb     0x140016218
   14001622b:	lea    eax,[rcx-0x13]
   14001622e:	cmp    eax,0x11
   140016231:	ja     0x140016239
   140016233:	mov    eax,0xd
   140016238:	ret    
   140016239:	add    ecx,0xffffff44
   14001623f:	mov    eax,0x16
   140016244:	cmp    ecx,0xe
   140016247:	cmovbe eax,r9d
   14001624b:	ret    
   14001624c:	movsxd rax,edx
   14001624f:	mov    eax,DWORD PTR [r10+rax*8+0x4]
   140016254:	ret    
   140016255:	int3   
   140016256:	int3   
   140016257:	int3   
   140016258:	int3   
   140016259:	int3   
   14001625a:	int3   
   14001625b:	int3   
   14001625c:	int3   
   14001625d:	int3   
   14001625e:	int3   
   14001625f:	int3   
   140016260:	int3   
   140016261:	int3   
   140016262:	int3   
   140016263:	int3   
   140016264:	int3   
   140016265:	int3   
   140016266:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016270:	sub    rdx,rcx
   140016273:	test   cl,0x7
   140016276:	je     0x14001628c
   140016278:	movzx  eax,BYTE PTR [rcx]
   14001627b:	cmp    al,BYTE PTR [rcx+rdx*1]
   14001627e:	jne    0x1400162cf
   140016280:	inc    rcx
   140016283:	test   al,al
   140016285:	je     0x1400162cc
   140016287:	test   cl,0x7
   14001628a:	jne    0x140016278
   14001628c:	movabs r11,0x8080808080808080
   140016296:	movabs r10,0xfefefefefefefeff
   1400162a0:	lea    eax,[ecx+edx*1]
   1400162a4:	and    eax,0xfff
   1400162a9:	cmp    eax,0xff8
   1400162ae:	ja     0x140016278
   1400162b0:	mov    rax,QWORD PTR [rcx]
   1400162b3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   1400162b7:	jne    0x140016278
   1400162b9:	lea    r9,[r10+rax*1]
   1400162bd:	not    rax
   1400162c0:	add    rcx,0x8
   1400162c4:	and    rax,r9
   1400162c7:	test   r11,rax
   1400162ca:	je     0x1400162a0
   1400162cc:	xor    eax,eax
   1400162ce:	ret    
   1400162cf:	sbb    rax,rax
   1400162d2:	or     rax,0x1
   1400162d6:	ret    
   1400162d7:	int3   
   1400162d8:	rex push rbx
   1400162da:	sub    rsp,0x30
   1400162de:	mov    rbx,rcx
   1400162e1:	mov    ecx,0xe
   1400162e6:	call   0x14001cde8
   1400162eb:	nop
   1400162ec:	mov    rax,QWORD PTR [rbx+0x8]
   1400162f0:	test   rax,rax
   1400162f3:	je     0x140016334
   1400162f5:	mov    rcx,QWORD PTR [rip+0x2317c]        # 0x140039478
   1400162fc:	lea    rdx,[rip+0x2316d]        # 0x140039470
   140016303:	mov    QWORD PTR [rsp+0x20],rcx
   140016308:	test   rcx,rcx
   14001630b:	je     0x140016326
   14001630d:	cmp    QWORD PTR [rcx],rax
   140016310:	jne    0x140016321
   140016312:	mov    rax,QWORD PTR [rcx+0x8]
   140016316:	mov    QWORD PTR [rdx+0x8],rax
   14001631a:	call   0x14001392c
   14001631f:	jmp    0x140016326
   140016321:	mov    rdx,rcx
   140016324:	jmp    0x140016303
   140016326:	mov    rcx,QWORD PTR [rbx+0x8]
   14001632a:	call   0x14001392c
   14001632f:	and    QWORD PTR [rbx+0x8],0x0
   140016334:	mov    ecx,0xe
   140016339:	call   0x14001cfd8
   14001633e:	add    rsp,0x30
   140016342:	pop    rbx
   140016343:	ret    
   140016344:	rex push rbx
   140016346:	sub    rsp,0x20
   14001634a:	mov    rbx,rcx
   14001634d:	mov    rcx,QWORD PTR [rip+0x2312c]        # 0x140039480
   140016354:	call   QWORD PTR [rip+0x10d96]        # 0x1400270f0
   14001635a:	test   rax,rax
   14001635d:	je     0x14001636f
   14001635f:	mov    rcx,rbx
   140016362:	call   rax
   140016364:	test   eax,eax
   140016366:	je     0x14001636f
   140016368:	mov    eax,0x1
   14001636d:	jmp    0x140016371
   14001636f:	xor    eax,eax
   140016371:	add    rsp,0x20
   140016375:	pop    rbx
   140016376:	ret    
   140016377:	int3   
   140016378:	mov    QWORD PTR [rip+0x23101],rcx        # 0x140039480
   14001637f:	ret    
   140016380:	sub    rsp,0x28
   140016384:	call   QWORD PTR [rip+0x10ee6]        # 0x140027270
   14001638a:	xor    ecx,ecx
   14001638c:	test   rax,rax
   14001638f:	mov    QWORD PTR [rip+0x230f2],rax        # 0x140039488
   140016396:	setne  cl
   140016399:	mov    eax,ecx
   14001639b:	add    rsp,0x28
   14001639f:	ret    
   1400163a0:	sub    rsp,0x28
   1400163a4:	mov    ecx,0x3
   1400163a9:	call   0x140017a78
   1400163ae:	cmp    eax,0x1
   1400163b1:	je     0x1400163ca
   1400163b3:	mov    ecx,0x3
   1400163b8:	call   0x140017a78
   1400163bd:	test   eax,eax
   1400163bf:	jne    0x1400163de
   1400163c1:	cmp    DWORD PTR [rip+0x230c8],0x1        # 0x140039490
   1400163c8:	jne    0x1400163de
   1400163ca:	mov    ecx,0xfc
   1400163cf:	call   0x140016414
   1400163d4:	mov    ecx,0xff
   1400163d9:	call   0x140016414
   1400163de:	add    rsp,0x28
   1400163e2:	ret    
   1400163e3:	int3   
   1400163e4:	lea    r9,[rip+0x12c15]        # 0x140029000
   1400163eb:	xor    edx,edx
   1400163ed:	mov    r8,r9
   1400163f0:	cmp    ecx,DWORD PTR [r8]
   1400163f3:	je     0x140016407
   1400163f5:	inc    edx
   1400163f7:	add    r8,0x10
   1400163fb:	movsxd rax,edx
   1400163fe:	cmp    rax,0x17
   140016402:	jb     0x1400163f0
   140016404:	xor    eax,eax
   140016406:	ret    
   140016407:	movsxd rax,edx
   14001640a:	add    rax,rax
   14001640d:	mov    rax,QWORD PTR [r9+rax*8+0x8]
   140016412:	ret    
   140016413:	int3   
   140016414:	mov    QWORD PTR [rsp+0x10],rbx
   140016419:	mov    QWORD PTR [rsp+0x18],rbp
   14001641e:	mov    QWORD PTR [rsp+0x20],rsi
   140016423:	push   rdi
   140016424:	push   r14
   140016426:	push   r15
   140016428:	sub    rsp,0x250
   14001642f:	mov    rax,QWORD PTR [rip+0x20bda]        # 0x140037010
   140016436:	xor    rax,rsp
   140016439:	mov    QWORD PTR [rsp+0x240],rax
   140016441:	mov    edi,ecx
   140016443:	call   0x1400163e4
   140016448:	xor    esi,esi
   14001644a:	mov    rbx,rax
   14001644d:	test   rax,rax
   140016450:	je     0x1400165ef
   140016456:	lea    ecx,[rsi+0x3]
   140016459:	call   0x140017a78
   14001645e:	cmp    eax,0x1
   140016461:	je     0x140016584
   140016467:	lea    ecx,[rsi+0x3]
   14001646a:	call   0x140017a78
   14001646f:	test   eax,eax
   140016471:	jne    0x140016480
   140016473:	cmp    DWORD PTR [rip+0x23016],0x1        # 0x140039490
   14001647a:	je     0x140016584
   140016480:	cmp    edi,0xfc
   140016486:	je     0x1400165ef
   14001648c:	lea    rbp,[rip+0x2300d]        # 0x1400394a0
   140016493:	mov    r15d,0x314
   140016499:	lea    r8,[rip+0x13600]        # 0x140029aa0
   1400164a0:	mov    rcx,rbp
   1400164a3:	mov    edx,r15d
   1400164a6:	call   0x140014134
   1400164ab:	xor    ecx,ecx
   1400164ad:	test   eax,eax
   1400164af:	jne    0x140016670
   1400164b5:	lea    r14,[rip+0x23016]        # 0x1400394d2
   1400164bc:	mov    r8d,0x104
   1400164c2:	mov    WORD PTR [rip+0x23211],si        # 0x1400396da
   1400164c9:	mov    rdx,r14
   1400164cc:	call   QWORD PTR [rip+0x10dae]        # 0x140027280
   1400164d2:	lea    edi,[r15-0x19]
   1400164d6:	test   eax,eax
   1400164d8:	jne    0x1400164f3
   1400164da:	lea    r8,[rip+0x135f7]        # 0x140029ad8
   1400164e1:	mov    edx,edi
   1400164e3:	mov    rcx,r14
   1400164e6:	call   0x140014134
   1400164eb:	test   eax,eax
   1400164ed:	jne    0x14001661c
   1400164f3:	mov    rcx,r14
   1400164f6:	call   0x14001b978
   1400164fb:	inc    rax
   1400164fe:	cmp    rax,0x3c
   140016502:	jbe    0x14001653d
   140016504:	mov    rcx,r14
   140016507:	call   0x14001b978
   14001650c:	lea    rcx,[rbp-0x44]
   140016510:	lea    r8,[rip+0x135f1]        # 0x140029b08
   140016517:	lea    rcx,[rcx+rax*2]
   14001651b:	mov    r9d,0x3
   140016521:	mov    rax,rcx
   140016524:	sub    rax,r14
   140016527:	sar    rax,1
   14001652a:	sub    rdi,rax
   14001652d:	mov    rdx,rdi
   140016530:	call   0x140016684
   140016535:	test   eax,eax
   140016537:	jne    0x140016631
   14001653d:	lea    r8,[rip+0x135cc]        # 0x140029b10
   140016544:	mov    rdx,r15
   140016547:	mov    rcx,rbp
   14001654a:	call   0x1400140ac
   14001654f:	test   eax,eax
   140016551:	jne    0x14001665b
   140016557:	mov    r8,rbx
   14001655a:	mov    rdx,r15
   14001655d:	mov    rcx,rbp
   140016560:	call   0x1400140ac
   140016565:	test   eax,eax
   140016567:	jne    0x140016646
   14001656d:	lea    rdx,[rip+0x135ac]        # 0x140029b20
   140016574:	mov    r8d,0x12010
   14001657a:	mov    rcx,rbp
   14001657d:	call   0x14001d7b0
   140016582:	jmp    0x1400165ef
   140016584:	mov    ecx,0xfffffff4
   140016589:	call   QWORD PTR [rip+0x10ce9]        # 0x140027278
   14001658f:	mov    rdi,rax
   140016592:	lea    rcx,[rax-0x1]
   140016596:	cmp    rcx,0xfffffffffffffffd
   14001659a:	ja     0x1400165ef
   14001659c:	mov    r8d,esi
   14001659f:	lea    rdx,[rsp+0x40]
   1400165a4:	mov    cl,BYTE PTR [rbx]
   1400165a6:	mov    BYTE PTR [rdx],cl
   1400165a8:	cmp    WORD PTR [rbx],si
   1400165ab:	je     0x1400165c2
   1400165ad:	inc    r8d
   1400165b0:	inc    rdx
   1400165b3:	add    rbx,0x2
   1400165b7:	movsxd rax,r8d
   1400165ba:	cmp    rax,0x1f4
   1400165c0:	jb     0x1400165a4
   1400165c2:	lea    rcx,[rsp+0x40]
   1400165c7:	mov    BYTE PTR [rsp+0x233],sil
   1400165cf:	call   0x140015330
   1400165d4:	lea    r9,[rsp+0x30]
   1400165d9:	lea    rdx,[rsp+0x40]
   1400165de:	mov    rcx,rdi
   1400165e1:	mov    r8,rax
   1400165e4:	mov    QWORD PTR [rsp+0x20],rsi
   1400165e9:	call   QWORD PTR [rip+0x10b79]        # 0x140027168
   1400165ef:	mov    rcx,QWORD PTR [rsp+0x240]
   1400165f7:	xor    rcx,rsp
   1400165fa:	call   0x1400130a0
   1400165ff:	lea    r11,[rsp+0x250]
   140016607:	mov    rbx,QWORD PTR [r11+0x28]
   14001660b:	mov    rbp,QWORD PTR [r11+0x30]
   14001660f:	mov    rsi,QWORD PTR [r11+0x38]
   140016613:	mov    rsp,r11
   140016616:	pop    r15
   140016618:	pop    r14
   14001661a:	pop    rdi
   14001661b:	ret    
   14001661c:	xor    r9d,r9d
   14001661f:	xor    r8d,r8d
   140016622:	xor    edx,edx
   140016624:	xor    ecx,ecx
   140016626:	mov    QWORD PTR [rsp+0x20],rsi
   14001662b:	call   0x140013f74
   140016630:	int3   
   140016631:	xor    r9d,r9d
   140016634:	xor    r8d,r8d
   140016637:	xor    edx,edx
   140016639:	xor    ecx,ecx
   14001663b:	mov    QWORD PTR [rsp+0x20],rsi
   140016640:	call   0x140013f74
   140016645:	int3   
   140016646:	xor    r9d,r9d
   140016649:	xor    r8d,r8d
   14001664c:	xor    edx,edx
   14001664e:	xor    ecx,ecx
   140016650:	mov    QWORD PTR [rsp+0x20],rsi
   140016655:	call   0x140013f74
   14001665a:	int3   
   14001665b:	xor    r9d,r9d
   14001665e:	xor    r8d,r8d
   140016661:	xor    edx,edx
   140016663:	xor    ecx,ecx
   140016665:	mov    QWORD PTR [rsp+0x20],rsi
   14001666a:	call   0x140013f74
   14001666f:	int3   
   140016670:	xor    r9d,r9d
   140016673:	xor    r8d,r8d
   140016676:	xor    edx,edx
   140016678:	mov    QWORD PTR [rsp+0x20],rsi
   14001667d:	call   0x140013f74
   140016682:	int3   
   140016683:	int3   
   140016684:	rex push rbx
   140016686:	sub    rsp,0x20
   14001668a:	xor    ebx,ebx
   14001668c:	test   r9,r9
   14001668f:	jne    0x14001669f
   140016691:	test   rcx,rcx
   140016694:	jne    0x1400166a4
   140016696:	test   rdx,rdx
   140016699:	jne    0x1400166bb
   14001669b:	xor    eax,eax
   14001669d:	jmp    0x1400166ce
   14001669f:	test   rcx,rcx
   1400166a2:	je     0x1400166bb
   1400166a4:	test   rdx,rdx
   1400166a7:	je     0x1400166bb
   1400166a9:	test   r9,r9
   1400166ac:	jne    0x1400166b3
   1400166ae:	mov    WORD PTR [rcx],bx
   1400166b1:	jmp    0x14001669b
   1400166b3:	test   r8,r8
   1400166b6:	jne    0x1400166d4
   1400166b8:	mov    WORD PTR [rcx],bx
   1400166bb:	call   0x1400161e8
   1400166c0:	mov    ebx,0x16
   1400166c5:	mov    DWORD PTR [rax],ebx
   1400166c7:	call   0x140013f54
   1400166cc:	mov    eax,ebx
   1400166ce:	add    rsp,0x20
   1400166d2:	pop    rbx
   1400166d3:	ret    
   1400166d4:	mov    r11,rcx
   1400166d7:	mov    r10,rdx
   1400166da:	cmp    r9,0xffffffffffffffff
   1400166de:	jne    0x1400166fc
   1400166e0:	sub    r11,r8
   1400166e3:	movzx  eax,WORD PTR [r8]
   1400166e7:	mov    WORD PTR [r11+r8*1],ax
   1400166ec:	lea    r8,[r8+0x2]
   1400166f0:	test   ax,ax
   1400166f3:	je     0x140016724
   1400166f5:	dec    r10
   1400166f8:	jne    0x1400166e3
   1400166fa:	jmp    0x140016724
   1400166fc:	sub    r8,rcx
   1400166ff:	movzx  eax,WORD PTR [r8+r11*1]
   140016704:	mov    WORD PTR [r11],ax
   140016708:	lea    r11,[r11+0x2]
   14001670c:	test   ax,ax
   14001670f:	je     0x14001671b
   140016711:	dec    r10
   140016714:	je     0x14001671b
   140016716:	dec    r9
   140016719:	jne    0x1400166ff
   14001671b:	test   r9,r9
   14001671e:	jne    0x140016724
   140016720:	mov    WORD PTR [r11],bx
   140016724:	test   r10,r10
   140016727:	jne    0x14001669b
   14001672d:	cmp    r9,0xffffffffffffffff
   140016731:	jne    0x14001673e
   140016733:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140016738:	lea    eax,[r10+0x50]
   14001673c:	jmp    0x1400166ce
   14001673e:	mov    WORD PTR [rcx],bx
   140016741:	call   0x1400161e8
   140016746:	mov    ebx,0x22
   14001674b:	jmp    0x1400166c5
   140016750:	sub    rsp,0x28
   140016754:	mov    r8,QWORD PTR [r9+0x38]
   140016758:	mov    rcx,rdx
   14001675b:	mov    rdx,r9
   14001675e:	call   0x140016770
   140016763:	mov    eax,0x1
   140016768:	add    rsp,0x28
   14001676c:	ret    
   14001676d:	int3   
   14001676e:	int3   
   14001676f:	int3   
   140016770:	rex push rbx
   140016772:	sub    rsp,0x20
   140016776:	mov    r11d,DWORD PTR [r8]
   140016779:	mov    rbx,rdx
   14001677c:	mov    r9,rcx
   14001677f:	and    r11d,0xfffffff8
   140016783:	test   BYTE PTR [r8],0x4
   140016787:	mov    r10,rcx
   14001678a:	je     0x14001679f
   14001678c:	mov    eax,DWORD PTR [r8+0x8]
   140016790:	movsxd r10,DWORD PTR [r8+0x4]
   140016794:	neg    eax
   140016796:	add    r10,rcx
   140016799:	movsxd rcx,eax
   14001679c:	and    r10,rcx
   14001679f:	movsxd rax,r11d
   1400167a2:	mov    rdx,QWORD PTR [rax+r10*1]
   1400167a6:	mov    rax,QWORD PTR [rbx+0x10]
   1400167aa:	mov    ecx,DWORD PTR [rax+0x8]
   1400167ad:	add    rcx,QWORD PTR [rbx+0x8]
   1400167b1:	test   BYTE PTR [rcx+0x3],0xf
   1400167b5:	je     0x1400167c3
   1400167b7:	movzx  eax,BYTE PTR [rcx+0x3]
   1400167bb:	and    eax,0xfffffff0
   1400167be:	cdqe   
   1400167c0:	add    r9,rax
   1400167c3:	xor    r9,rdx
   1400167c6:	mov    rcx,r9
   1400167c9:	add    rsp,0x20
   1400167cd:	pop    rbx
   1400167ce:	jmp    0x1400130a0
   1400167d3:	int3   
   1400167d4:	mov    QWORD PTR [rsp+0x20],rbx
   1400167d9:	push   rdi
   1400167da:	sub    rsp,0x40
   1400167de:	mov    rbx,rcx
   1400167e1:	call   QWORD PTR [rip+0x10aa1]        # 0x140027288
   1400167e7:	mov    rdi,QWORD PTR [rbx+0xf8]
   1400167ee:	lea    rdx,[rsp+0x50]
   1400167f3:	xor    r8d,r8d
   1400167f6:	mov    rcx,rdi
   1400167f9:	call   QWORD PTR [rip+0x10a49]        # 0x140027248
   1400167ff:	test   rax,rax
   140016802:	je     0x140016836
   140016804:	and    QWORD PTR [rsp+0x38],0x0
   14001680a:	mov    rdx,QWORD PTR [rsp+0x50]
   14001680f:	lea    rcx,[rsp+0x58]
   140016814:	mov    QWORD PTR [rsp+0x30],rcx
   140016819:	lea    rcx,[rsp+0x60]
   14001681e:	mov    r9,rax
   140016821:	mov    QWORD PTR [rsp+0x28],rcx
   140016826:	xor    ecx,ecx
   140016828:	mov    r8,rdi
   14001682b:	mov    QWORD PTR [rsp+0x20],rbx
   140016830:	call   QWORD PTR [rip+0x10a5a]        # 0x140027290
   140016836:	mov    rbx,QWORD PTR [rsp+0x68]
   14001683b:	add    rsp,0x40
   14001683f:	pop    rdi
   140016840:	ret    
   140016841:	int3   
   140016842:	int3   
   140016843:	int3   
   140016844:	rex push rbx
   140016846:	push   rsi
   140016847:	push   rdi
   140016848:	sub    rsp,0x40
   14001684c:	mov    rbx,rcx
   14001684f:	call   QWORD PTR [rip+0x10a33]        # 0x140027288
   140016855:	mov    rsi,QWORD PTR [rbx+0xf8]
   14001685c:	xor    edi,edi
   14001685e:	lea    rdx,[rsp+0x60]
   140016863:	xor    r8d,r8d
   140016866:	mov    rcx,rsi
   140016869:	call   QWORD PTR [rip+0x109d9]        # 0x140027248
   14001686f:	test   rax,rax
   140016872:	je     0x1400168ad
   140016874:	and    QWORD PTR [rsp+0x38],0x0
   14001687a:	mov    rdx,QWORD PTR [rsp+0x60]
   14001687f:	lea    rcx,[rsp+0x68]
   140016884:	mov    QWORD PTR [rsp+0x30],rcx
   140016889:	lea    rcx,[rsp+0x70]
   14001688e:	mov    r9,rax
   140016891:	mov    QWORD PTR [rsp+0x28],rcx
   140016896:	xor    ecx,ecx
   140016898:	mov    r8,rsi
   14001689b:	mov    QWORD PTR [rsp+0x20],rbx
   1400168a0:	call   QWORD PTR [rip+0x109ea]        # 0x140027290
   1400168a6:	inc    edi
   1400168a8:	cmp    edi,0x2
   1400168ab:	jl     0x14001685e
   1400168ad:	add    rsp,0x40
   1400168b1:	pop    rdi
   1400168b2:	pop    rsi
   1400168b3:	pop    rbx
   1400168b4:	ret    
   1400168b5:	int3   
   1400168b6:	int3   
   1400168b7:	int3   
   1400168b8:	mov    rax,QWORD PTR [rip+0x24b81]        # 0x14003b440
   1400168bf:	xor    rax,QWORD PTR [rip+0x2074a]        # 0x140037010
   1400168c6:	je     0x1400168cb
   1400168c8:	rex.W jmp rax
   1400168cb:	rex.W jmp QWORD PTR [rip+0x1090e]        # 0x1400271e0
   1400168d2:	int3   
   1400168d3:	int3   
   1400168d4:	mov    rax,QWORD PTR [rip+0x24b6d]        # 0x14003b448
   1400168db:	xor    rax,QWORD PTR [rip+0x2072e]        # 0x140037010
   1400168e2:	je     0x1400168e7
   1400168e4:	rex.W jmp rax
   1400168e7:	rex.W jmp QWORD PTR [rip+0x1090a]        # 0x1400271f8
   1400168ee:	int3   
   1400168ef:	int3   
   1400168f0:	mov    rax,QWORD PTR [rip+0x24b59]        # 0x14003b450
   1400168f7:	xor    rax,QWORD PTR [rip+0x20712]        # 0x140037010
   1400168fe:	je     0x140016903
   140016900:	rex.W jmp rax
   140016903:	rex.W jmp QWORD PTR [rip+0x108de]        # 0x1400271e8
   14001690a:	int3   
   14001690b:	int3   
   14001690c:	mov    rax,QWORD PTR [rip+0x24b45]        # 0x14003b458
   140016913:	xor    rax,QWORD PTR [rip+0x206f6]        # 0x140037010
   14001691a:	je     0x14001691f
   14001691c:	rex.W jmp rax
   14001691f:	rex.W jmp QWORD PTR [rip+0x108ca]        # 0x1400271f0
   140016926:	int3   
   140016927:	int3   
   140016928:	sub    rsp,0x98
   14001692f:	lea    rcx,[rsp+0x20]
   140016934:	call   QWORD PTR [rip+0x1097e]        # 0x1400272b8
   14001693a:	test   BYTE PTR [rsp+0x5c],0x1
   14001693f:	movzx  ecx,WORD PTR [rsp+0x60]
   140016944:	mov    eax,0xa
   140016949:	cmovne eax,ecx
   14001694c:	add    rsp,0x98
   140016953:	ret    
   140016954:	sub    rsp,0x28
   140016958:	mov    rax,QWORD PTR [rip+0x24b01]        # 0x14003b460
   14001695f:	xor    rax,QWORD PTR [rip+0x206aa]        # 0x140037010
   140016966:	je     0x14001696f
   140016968:	add    rsp,0x28
   14001696c:	rex.W jmp rax
   14001696f:	call   QWORD PTR [rip+0x10933]        # 0x1400272a8
   140016975:	mov    eax,0x1
   14001697a:	add    rsp,0x28
   14001697e:	ret    
   14001697f:	int3   
   140016980:	rex push rbx
   140016982:	sub    rsp,0x20
   140016986:	mov    eax,DWORD PTR [rip+0x20824]        # 0x1400371b0
   14001698c:	xor    ebx,ebx
   14001698e:	test   eax,eax
   140016990:	jns    0x1400169c1
   140016992:	mov    rax,QWORD PTR [rip+0x24b8f]        # 0x14003b528
   140016999:	mov    DWORD PTR [rsp+0x30],ebx
   14001699d:	xor    rax,QWORD PTR [rip+0x2066c]        # 0x140037010
   1400169a4:	je     0x1400169b7
   1400169a6:	lea    rcx,[rsp+0x30]
   1400169ab:	xor    edx,edx
   1400169ad:	call   rax
   1400169af:	cmp    eax,0x7a
   1400169b2:	lea    eax,[rbx+0x1]
   1400169b5:	je     0x1400169b9
   1400169b7:	mov    eax,ebx
   1400169b9:	mov    DWORD PTR [rip+0x207f1],eax        # 0x1400371b0
   1400169bf:	test   eax,eax
   1400169c1:	setg   bl
   1400169c4:	mov    eax,ebx
   1400169c6:	add    rsp,0x20
   1400169ca:	pop    rbx
   1400169cb:	ret    
   1400169cc:	rex push rbx
   1400169ce:	sub    rsp,0x20
   1400169d2:	lea    rcx,[rip+0x18207]        # 0x14002ebe0
   1400169d9:	call   QWORD PTR [rip+0x107b9]        # 0x140027198
   1400169df:	lea    rdx,[rip+0x1318a]        # 0x140029b70
   1400169e6:	mov    rcx,rax
   1400169e9:	mov    rbx,rax
   1400169ec:	call   QWORD PTR [rip+0x1067e]        # 0x140027070
   1400169f2:	lea    rdx,[rip+0x13187]        # 0x140029b80
   1400169f9:	mov    rcx,rbx
   1400169fc:	xor    rax,QWORD PTR [rip+0x2060d]        # 0x140037010
   140016a03:	mov    QWORD PTR [rip+0x24a36],rax        # 0x14003b440
   140016a0a:	call   QWORD PTR [rip+0x10660]        # 0x140027070
   140016a10:	lea    rdx,[rip+0x13171]        # 0x140029b88
   140016a17:	xor    rax,QWORD PTR [rip+0x205f2]        # 0x140037010
   140016a1e:	mov    rcx,rbx
   140016a21:	mov    QWORD PTR [rip+0x24a20],rax        # 0x14003b448
   140016a28:	call   QWORD PTR [rip+0x10642]        # 0x140027070
   140016a2e:	lea    rdx,[rip+0x13163]        # 0x140029b98
   140016a35:	xor    rax,QWORD PTR [rip+0x205d4]        # 0x140037010
   140016a3c:	mov    rcx,rbx
   140016a3f:	mov    QWORD PTR [rip+0x24a0a],rax        # 0x14003b450
   140016a46:	call   QWORD PTR [rip+0x10624]        # 0x140027070
   140016a4c:	lea    rdx,[rip+0x13155]        # 0x140029ba8
   140016a53:	xor    rax,QWORD PTR [rip+0x205b6]        # 0x140037010
   140016a5a:	mov    rcx,rbx
   140016a5d:	mov    QWORD PTR [rip+0x249f4],rax        # 0x14003b458
   140016a64:	call   QWORD PTR [rip+0x10606]        # 0x140027070
   140016a6a:	lea    rdx,[rip+0x13157]        # 0x140029bc8
   140016a71:	xor    rax,QWORD PTR [rip+0x20598]        # 0x140037010
   140016a78:	mov    rcx,rbx
   140016a7b:	mov    QWORD PTR [rip+0x249de],rax        # 0x14003b460
   140016a82:	call   QWORD PTR [rip+0x105e8]        # 0x140027070
   140016a88:	lea    rdx,[rip+0x13149]        # 0x140029bd8
   140016a8f:	xor    rax,QWORD PTR [rip+0x2057a]        # 0x140037010
   140016a96:	mov    rcx,rbx
   140016a99:	mov    QWORD PTR [rip+0x249c8],rax        # 0x14003b468
   140016aa0:	call   QWORD PTR [rip+0x105ca]        # 0x140027070
   140016aa6:	lea    rdx,[rip+0x13143]        # 0x140029bf0
   140016aad:	xor    rax,QWORD PTR [rip+0x2055c]        # 0x140037010
   140016ab4:	mov    rcx,rbx
   140016ab7:	mov    QWORD PTR [rip+0x249b2],rax        # 0x14003b470
   140016abe:	call   QWORD PTR [rip+0x105ac]        # 0x140027070
   140016ac4:	lea    rdx,[rip+0x1313d]        # 0x140029c08
   140016acb:	xor    rax,QWORD PTR [rip+0x2053e]        # 0x140037010
   140016ad2:	mov    rcx,rbx
   140016ad5:	mov    QWORD PTR [rip+0x2499c],rax        # 0x14003b478
   140016adc:	call   QWORD PTR [rip+0x1058e]        # 0x140027070
   140016ae2:	lea    rdx,[rip+0x13137]        # 0x140029c20
   140016ae9:	xor    rax,QWORD PTR [rip+0x20520]        # 0x140037010
   140016af0:	mov    rcx,rbx
   140016af3:	mov    QWORD PTR [rip+0x24986],rax        # 0x14003b480
   140016afa:	call   QWORD PTR [rip+0x10570]        # 0x140027070
   140016b00:	lea    rdx,[rip+0x13131]        # 0x140029c38
   140016b07:	xor    rax,QWORD PTR [rip+0x20502]        # 0x140037010
   140016b0e:	mov    rcx,rbx
   140016b11:	mov    QWORD PTR [rip+0x24970],rax        # 0x14003b488
   140016b18:	call   QWORD PTR [rip+0x10552]        # 0x140027070
   140016b1e:	lea    rdx,[rip+0x13133]        # 0x140029c58
   140016b25:	xor    rax,QWORD PTR [rip+0x204e4]        # 0x140037010
   140016b2c:	mov    rcx,rbx
   140016b2f:	mov    QWORD PTR [rip+0x2495a],rax        # 0x14003b490
   140016b36:	call   QWORD PTR [rip+0x10534]        # 0x140027070
   140016b3c:	lea    rdx,[rip+0x1312d]        # 0x140029c70
   140016b43:	xor    rax,QWORD PTR [rip+0x204c6]        # 0x140037010
   140016b4a:	mov    rcx,rbx
   140016b4d:	mov    QWORD PTR [rip+0x24944],rax        # 0x14003b498
   140016b54:	call   QWORD PTR [rip+0x10516]        # 0x140027070
   140016b5a:	lea    rdx,[rip+0x13127]        # 0x140029c88
   140016b61:	xor    rax,QWORD PTR [rip+0x204a8]        # 0x140037010
   140016b68:	mov    rcx,rbx
   140016b6b:	mov    QWORD PTR [rip+0x2492e],rax        # 0x14003b4a0
   140016b72:	call   QWORD PTR [rip+0x104f8]        # 0x140027070
   140016b78:	lea    rdx,[rip+0x13121]        # 0x140029ca0
   140016b7f:	xor    rax,QWORD PTR [rip+0x2048a]        # 0x140037010
   140016b86:	mov    rcx,rbx
   140016b89:	mov    QWORD PTR [rip+0x24918],rax        # 0x14003b4a8
   140016b90:	call   QWORD PTR [rip+0x104da]        # 0x140027070
   140016b96:	lea    rdx,[rip+0x1311b]        # 0x140029cb8
   140016b9d:	xor    rax,QWORD PTR [rip+0x2046c]        # 0x140037010
   140016ba4:	mov    rcx,rbx
   140016ba7:	mov    QWORD PTR [rip+0x24902],rax        # 0x14003b4b0
   140016bae:	call   QWORD PTR [rip+0x104bc]        # 0x140027070
   140016bb4:	xor    rax,QWORD PTR [rip+0x20455]        # 0x140037010
   140016bbb:	lea    rdx,[rip+0x13116]        # 0x140029cd8
   140016bc2:	mov    rcx,rbx
   140016bc5:	mov    QWORD PTR [rip+0x248ec],rax        # 0x14003b4b8
   140016bcc:	call   QWORD PTR [rip+0x1049e]        # 0x140027070
   140016bd2:	lea    rdx,[rip+0x1311f]        # 0x140029cf8
   140016bd9:	xor    rax,QWORD PTR [rip+0x20430]        # 0x140037010
   140016be0:	mov    rcx,rbx
   140016be3:	mov    QWORD PTR [rip+0x248d6],rax        # 0x14003b4c0
   140016bea:	call   QWORD PTR [rip+0x10480]        # 0x140027070
   140016bf0:	lea    rdx,[rip+0x13121]        # 0x140029d18
   140016bf7:	xor    rax,QWORD PTR [rip+0x20412]        # 0x140037010
   140016bfe:	mov    rcx,rbx
   140016c01:	mov    QWORD PTR [rip+0x248c0],rax        # 0x14003b4c8
   140016c08:	call   QWORD PTR [rip+0x10462]        # 0x140027070
   140016c0e:	lea    rdx,[rip+0x13123]        # 0x140029d38
   140016c15:	xor    rax,QWORD PTR [rip+0x203f4]        # 0x140037010
   140016c1c:	mov    rcx,rbx
   140016c1f:	mov    QWORD PTR [rip+0x248aa],rax        # 0x14003b4d0
   140016c26:	call   QWORD PTR [rip+0x10444]        # 0x140027070
   140016c2c:	lea    rdx,[rip+0x1311d]        # 0x140029d50
   140016c33:	xor    rax,QWORD PTR [rip+0x203d6]        # 0x140037010
   140016c3a:	mov    rcx,rbx
   140016c3d:	mov    QWORD PTR [rip+0x24894],rax        # 0x14003b4d8
   140016c44:	call   QWORD PTR [rip+0x10426]        # 0x140027070
   140016c4a:	lea    rdx,[rip+0x1311f]        # 0x140029d70
   140016c51:	xor    rax,QWORD PTR [rip+0x203b8]        # 0x140037010
   140016c58:	mov    rcx,rbx
   140016c5b:	mov    QWORD PTR [rip+0x2487e],rax        # 0x14003b4e0
   140016c62:	call   QWORD PTR [rip+0x10408]        # 0x140027070
   140016c68:	lea    rdx,[rip+0x13119]        # 0x140029d88
   140016c6f:	xor    rax,QWORD PTR [rip+0x2039a]        # 0x140037010
   140016c76:	mov    rcx,rbx
   140016c79:	mov    QWORD PTR [rip+0x24870],rax        # 0x14003b4f0
   140016c80:	call   QWORD PTR [rip+0x103ea]        # 0x140027070
   140016c86:	lea    rdx,[rip+0x1310b]        # 0x140029d98
   140016c8d:	xor    rax,QWORD PTR [rip+0x2037c]        # 0x140037010
   140016c94:	mov    rcx,rbx
   140016c97:	mov    QWORD PTR [rip+0x2484a],rax        # 0x14003b4e8
   140016c9e:	call   QWORD PTR [rip+0x103cc]        # 0x140027070
   140016ca4:	lea    rdx,[rip+0x130fd]        # 0x140029da8
   140016cab:	xor    rax,QWORD PTR [rip+0x2035e]        # 0x140037010
   140016cb2:	mov    rcx,rbx
   140016cb5:	mov    QWORD PTR [rip+0x2483c],rax        # 0x14003b4f8
   140016cbc:	call   QWORD PTR [rip+0x103ae]        # 0x140027070
   140016cc2:	lea    rdx,[rip+0x130ef]        # 0x140029db8
   140016cc9:	xor    rax,QWORD PTR [rip+0x20340]        # 0x140037010
   140016cd0:	mov    rcx,rbx
   140016cd3:	mov    QWORD PTR [rip+0x24826],rax        # 0x14003b500
   140016cda:	call   QWORD PTR [rip+0x10390]        # 0x140027070
   140016ce0:	lea    rdx,[rip+0x130e1]        # 0x140029dc8
   140016ce7:	xor    rax,QWORD PTR [rip+0x20322]        # 0x140037010
   140016cee:	mov    rcx,rbx
   140016cf1:	mov    QWORD PTR [rip+0x24810],rax        # 0x14003b508
   140016cf8:	call   QWORD PTR [rip+0x10372]        # 0x140027070
   140016cfe:	lea    rdx,[rip+0x130e3]        # 0x140029de8
   140016d05:	xor    rax,QWORD PTR [rip+0x20304]        # 0x140037010
   140016d0c:	mov    rcx,rbx
   140016d0f:	mov    QWORD PTR [rip+0x247fa],rax        # 0x14003b510
   140016d16:	call   QWORD PTR [rip+0x10354]        # 0x140027070
   140016d1c:	lea    rdx,[rip+0x130dd]        # 0x140029e00
   140016d23:	xor    rax,QWORD PTR [rip+0x202e6]        # 0x140037010
   140016d2a:	mov    rcx,rbx
   140016d2d:	mov    QWORD PTR [rip+0x247e4],rax        # 0x14003b518
   140016d34:	call   QWORD PTR [rip+0x10336]        # 0x140027070
   140016d3a:	lea    rdx,[rip+0x130cf]        # 0x140029e10
   140016d41:	xor    rax,QWORD PTR [rip+0x202c8]        # 0x140037010
   140016d48:	mov    rcx,rbx
   140016d4b:	mov    QWORD PTR [rip+0x247ce],rax        # 0x14003b520
   140016d52:	call   QWORD PTR [rip+0x10318]        # 0x140027070
   140016d58:	lea    rdx,[rip+0x130c9]        # 0x140029e28
   140016d5f:	xor    rax,QWORD PTR [rip+0x202aa]        # 0x140037010
   140016d66:	mov    rcx,rbx
   140016d69:	mov    QWORD PTR [rip+0x247b8],rax        # 0x14003b528
   140016d70:	call   QWORD PTR [rip+0x102fa]        # 0x140027070
   140016d76:	lea    rdx,[rip+0x130bb]        # 0x140029e38
   140016d7d:	xor    rax,QWORD PTR [rip+0x2028c]        # 0x140037010
   140016d84:	mov    rcx,rbx
   140016d87:	mov    QWORD PTR [rip+0x247a2],rax        # 0x14003b530
   140016d8e:	call   QWORD PTR [rip+0x102dc]        # 0x140027070
   140016d94:	xor    rax,QWORD PTR [rip+0x20275]        # 0x140037010
   140016d9b:	lea    rdx,[rip+0x130b6]        # 0x140029e58
   140016da2:	mov    rcx,rbx
   140016da5:	mov    QWORD PTR [rip+0x2478c],rax        # 0x14003b538
   140016dac:	call   QWORD PTR [rip+0x102be]        # 0x140027070
   140016db2:	xor    rax,QWORD PTR [rip+0x20257]        # 0x140037010
   140016db9:	mov    QWORD PTR [rip+0x24780],rax        # 0x14003b540
   140016dc0:	add    rsp,0x20
   140016dc4:	pop    rbx
   140016dc5:	ret    
   140016dc6:	int3   
   140016dc7:	int3   
   140016dc8:	rex.W jmp QWORD PTR [rip+0x104d1]        # 0x1400272a0
   140016dcf:	int3   
   140016dd0:	rex.W jmp QWORD PTR [rip+0x10389]        # 0x140027160
   140016dd7:	int3   
   140016dd8:	rex push rbx
   140016dda:	sub    rsp,0x20
   140016dde:	mov    ebx,ecx
   140016de0:	call   QWORD PTR [rip+0x103d2]        # 0x1400271b8
   140016de6:	mov    edx,ebx
   140016de8:	mov    rcx,rax
   140016deb:	add    rsp,0x20
   140016def:	pop    rbx
   140016df0:	rex.W jmp QWORD PTR [rip+0x104b9]        # 0x1400272b0
   140016df7:	int3   
   140016df8:	rex push rbx
   140016dfa:	sub    rsp,0x20
   140016dfe:	mov    rbx,rcx
   140016e01:	xor    ecx,ecx
   140016e03:	call   QWORD PTR [rip+0x10497]        # 0x1400272a0
   140016e09:	mov    rcx,rbx
   140016e0c:	add    rsp,0x20
   140016e10:	pop    rbx
   140016e11:	rex.W jmp QWORD PTR [rip+0x10480]        # 0x140027298
   140016e18:	and    DWORD PTR [rip+0x24605],0x0        # 0x14003b424
   140016e1f:	ret    
   140016e20:	sub    rsp,0x28
   140016e24:	mov    rax,QWORD PTR [rcx]
   140016e27:	cmp    DWORD PTR [rax],0xe06d7363
   140016e2d:	jne    0x140016e4b
   140016e2f:	cmp    DWORD PTR [rax+0x18],0x4
   140016e33:	jne    0x140016e4b
   140016e35:	mov    ecx,DWORD PTR [rax+0x20]
   140016e38:	lea    eax,[rcx-0x19930520]
   140016e3e:	cmp    eax,0x2
   140016e41:	jbe    0x140016e52
   140016e43:	cmp    ecx,0x1994000
   140016e49:	je     0x140016e52
   140016e4b:	xor    eax,eax
   140016e4d:	add    rsp,0x28
   140016e51:	ret    
   140016e52:	call   0x140019204
   140016e57:	int3   
   140016e58:	sub    rsp,0x28
   140016e5c:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140016e20
   140016e63:	call   0x140016dc8
   140016e68:	xor    eax,eax
   140016e6a:	add    rsp,0x28
   140016e6e:	ret    
   140016e6f:	int3   
   140016e70:	mov    QWORD PTR [rsp+0x8],rbx
   140016e75:	mov    QWORD PTR [rsp+0x10],rbp
   140016e7a:	mov    QWORD PTR [rsp+0x18],rsi
   140016e7f:	push   rdi
   140016e80:	sub    rsp,0x20
   140016e84:	mov    rsi,rdx
   140016e87:	mov    edi,ecx
   140016e89:	call   0x140017194
   140016e8e:	xor    r9d,r9d
   140016e91:	mov    rbx,rax
   140016e94:	test   rax,rax
   140016e97:	je     0x140017025
   140016e9d:	mov    rdx,QWORD PTR [rax+0xa0]
   140016ea4:	mov    rcx,rdx
   140016ea7:	cmp    DWORD PTR [rcx],edi
   140016ea9:	je     0x140016ebb
   140016eab:	lea    rax,[rdx+0xc0]
   140016eb2:	add    rcx,0x10
   140016eb6:	cmp    rcx,rax
   140016eb9:	jb     0x140016ea7
   140016ebb:	lea    rax,[rdx+0xc0]
   140016ec2:	cmp    rcx,rax
   140016ec5:	jae    0x140016ecb
   140016ec7:	cmp    DWORD PTR [rcx],edi
   140016ec9:	je     0x140016ece
   140016ecb:	mov    rcx,r9
   140016ece:	test   rcx,rcx
   140016ed1:	je     0x140017025
   140016ed7:	mov    r8,QWORD PTR [rcx+0x8]
   140016edb:	test   r8,r8
   140016ede:	je     0x140017025
   140016ee4:	cmp    r8,0x5
   140016ee8:	jne    0x140016ef7
   140016eea:	mov    QWORD PTR [rcx+0x8],r9
   140016eee:	lea    eax,[r8-0x4]
   140016ef2:	jmp    0x140017027
   140016ef7:	cmp    r8,0x1
   140016efb:	jne    0x140016f05
   140016efd:	or     eax,0xffffffff
   140016f00:	jmp    0x140017027
   140016f05:	mov    rbp,QWORD PTR [rbx+0xa8]
   140016f0c:	mov    QWORD PTR [rbx+0xa8],rsi
   140016f13:	cmp    DWORD PTR [rcx+0x4],0x8
   140016f17:	jne    0x14001700f
   140016f1d:	mov    edx,0x30
   140016f22:	mov    rax,QWORD PTR [rbx+0xa0]
   140016f29:	add    rdx,0x10
   140016f2d:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   140016f32:	cmp    rdx,0xc0
   140016f39:	jl     0x140016f22
   140016f3b:	cmp    DWORD PTR [rcx],0xc000008e
   140016f41:	mov    edi,DWORD PTR [rbx+0xb0]
   140016f47:	jne    0x140016f58
   140016f49:	mov    DWORD PTR [rbx+0xb0],0x83
   140016f53:	jmp    0x140016ff9
   140016f58:	cmp    DWORD PTR [rcx],0xc0000090
   140016f5e:	jne    0x140016f6f
   140016f60:	mov    DWORD PTR [rbx+0xb0],0x81
   140016f6a:	jmp    0x140016ff9
   140016f6f:	cmp    DWORD PTR [rcx],0xc0000091
   140016f75:	jne    0x140016f83
   140016f77:	mov    DWORD PTR [rbx+0xb0],0x84
   140016f81:	jmp    0x140016ff9
   140016f83:	cmp    DWORD PTR [rcx],0xc0000093
   140016f89:	jne    0x140016f97
   140016f8b:	mov    DWORD PTR [rbx+0xb0],0x85
   140016f95:	jmp    0x140016ff9
   140016f97:	cmp    DWORD PTR [rcx],0xc000008d
   140016f9d:	jne    0x140016fab
   140016f9f:	mov    DWORD PTR [rbx+0xb0],0x82
   140016fa9:	jmp    0x140016ff9
   140016fab:	cmp    DWORD PTR [rcx],0xc000008f
   140016fb1:	jne    0x140016fbf
   140016fb3:	mov    DWORD PTR [rbx+0xb0],0x86
   140016fbd:	jmp    0x140016ff9
   140016fbf:	cmp    DWORD PTR [rcx],0xc0000092
   140016fc5:	jne    0x140016fd3
   140016fc7:	mov    DWORD PTR [rbx+0xb0],0x8a
   140016fd1:	jmp    0x140016ff9
   140016fd3:	cmp    DWORD PTR [rcx],0xc00002b5
   140016fd9:	jne    0x140016fe7
   140016fdb:	mov    DWORD PTR [rbx+0xb0],0x8d
   140016fe5:	jmp    0x140016ff9
   140016fe7:	cmp    DWORD PTR [rcx],0xc00002b4
   140016fed:	jne    0x140016ff9
   140016fef:	mov    DWORD PTR [rbx+0xb0],0x8e
   140016ff9:	mov    edx,DWORD PTR [rbx+0xb0]
   140016fff:	mov    ecx,0x8
   140017004:	call   r8
   140017007:	mov    DWORD PTR [rbx+0xb0],edi
   14001700d:	jmp    0x140017019
   14001700f:	mov    QWORD PTR [rcx+0x8],r9
   140017013:	mov    ecx,DWORD PTR [rcx+0x4]
   140017016:	call   r8
   140017019:	mov    QWORD PTR [rbx+0xa8],rbp
   140017020:	jmp    0x140016efd
   140017025:	xor    eax,eax
   140017027:	mov    rbx,QWORD PTR [rsp+0x30]
   14001702c:	mov    rbp,QWORD PTR [rsp+0x38]
   140017031:	mov    rsi,QWORD PTR [rsp+0x40]
   140017036:	add    rsp,0x20
   14001703a:	pop    rdi
   14001703b:	ret    
   14001703c:	test   rcx,rcx
   14001703f:	je     0x14001716e
   140017045:	mov    QWORD PTR [rsp+0x10],rbx
   14001704a:	push   rdi
   14001704b:	sub    rsp,0x20
   14001704f:	mov    rbx,rcx
   140017052:	mov    rcx,QWORD PTR [rcx+0x38]
   140017056:	test   rcx,rcx
   140017059:	je     0x140017060
   14001705b:	call   0x14001392c
   140017060:	mov    rcx,QWORD PTR [rbx+0x48]
   140017064:	test   rcx,rcx
   140017067:	je     0x14001706e
   140017069:	call   0x14001392c
   14001706e:	mov    rcx,QWORD PTR [rbx+0x58]
   140017072:	test   rcx,rcx
   140017075:	je     0x14001707c
   140017077:	call   0x14001392c
   14001707c:	mov    rcx,QWORD PTR [rbx+0x68]
   140017080:	test   rcx,rcx
   140017083:	je     0x14001708a
   140017085:	call   0x14001392c
   14001708a:	mov    rcx,QWORD PTR [rbx+0x70]
   14001708e:	test   rcx,rcx
   140017091:	je     0x140017098
   140017093:	call   0x14001392c
   140017098:	mov    rcx,QWORD PTR [rbx+0x78]
   14001709c:	test   rcx,rcx
   14001709f:	je     0x1400170a6
   1400170a1:	call   0x14001392c
   1400170a6:	mov    rcx,QWORD PTR [rbx+0x80]
   1400170ad:	test   rcx,rcx
   1400170b0:	je     0x1400170b7
   1400170b2:	call   0x14001392c
   1400170b7:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400170be:	lea    rax,[rip+0x12dbb]        # 0x140029e80
   1400170c5:	cmp    rcx,rax
   1400170c8:	je     0x1400170cf
   1400170ca:	call   0x14001392c
   1400170cf:	mov    edi,0xd
   1400170d4:	mov    ecx,edi
   1400170d6:	call   0x14001cde8
   1400170db:	nop
   1400170dc:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400170e3:	mov    QWORD PTR [rsp+0x30],rcx
   1400170e8:	test   rcx,rcx
   1400170eb:	je     0x140017109
   1400170ed:	lock dec DWORD PTR [rcx]
   1400170f0:	jne    0x140017109
   1400170f2:	lea    rax,[rip+0x20387]        # 0x140037480
   1400170f9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400170fe:	cmp    rcx,rax
   140017101:	je     0x140017109
   140017103:	call   0x14001392c
   140017108:	nop
   140017109:	mov    ecx,edi
   14001710b:	call   0x14001cfd8
   140017110:	mov    ecx,0xc
   140017115:	call   0x14001cde8
   14001711a:	nop
   14001711b:	mov    rdi,QWORD PTR [rbx+0xc0]
   140017122:	test   rdi,rdi
   140017125:	je     0x140017152
   140017127:	mov    rcx,rdi
   14001712a:	call   0x14001a0dc
   14001712f:	cmp    rdi,QWORD PTR [rip+0x2094a]        # 0x140037a80
   140017136:	je     0x140017152
   140017138:	lea    rax,[rip+0x20951]        # 0x140037a90
   14001713f:	cmp    rdi,rax
   140017142:	je     0x140017152
   140017144:	cmp    DWORD PTR [rdi],0x0
   140017147:	jne    0x140017152
   140017149:	mov    rcx,rdi
   14001714c:	call   0x140019f44
   140017151:	nop
   140017152:	mov    ecx,0xc
   140017157:	call   0x14001cfd8
   14001715c:	mov    rcx,rbx
   14001715f:	call   0x14001392c
   140017164:	mov    rbx,QWORD PTR [rsp+0x38]
   140017169:	add    rsp,0x20
   14001716d:	pop    rdi
   14001716e:	ret    
   14001716f:	int3   
   140017170:	rex push rbx
   140017172:	sub    rsp,0x20
   140017176:	call   0x140017194
   14001717b:	mov    rbx,rax
   14001717e:	test   rax,rax
   140017181:	jne    0x14001718b
   140017183:	lea    ecx,[rax+0x10]
   140017186:	call   0x140015948
   14001718b:	mov    rax,rbx
   14001718e:	add    rsp,0x20
   140017192:	pop    rbx
   140017193:	ret    
   140017194:	mov    QWORD PTR [rsp+0x8],rbx
   140017199:	push   rdi
   14001719a:	sub    rsp,0x20
   14001719e:	call   QWORD PTR [rip+0xfebc]        # 0x140027060
   1400171a4:	mov    ecx,DWORD PTR [rip+0x2000a]        # 0x1400371b4
   1400171aa:	mov    edi,eax
   1400171ac:	call   0x1400168f0
   1400171b1:	mov    rbx,rax
   1400171b4:	test   rax,rax
   1400171b7:	jne    0x140017200
   1400171b9:	lea    ecx,[rax+0x1]
   1400171bc:	mov    edx,0x478
   1400171c1:	call   0x140015d14
   1400171c6:	mov    rbx,rax
   1400171c9:	test   rax,rax
   1400171cc:	je     0x140017200
   1400171ce:	mov    ecx,DWORD PTR [rip+0x1ffe0]        # 0x1400371b4
   1400171d4:	mov    rdx,rax
   1400171d7:	call   0x14001690c
   1400171dc:	mov    rcx,rbx
   1400171df:	test   eax,eax
   1400171e1:	je     0x1400171f9
   1400171e3:	xor    edx,edx
   1400171e5:	call   0x140017218
   1400171ea:	call   QWORD PTR [rip+0x100d0]        # 0x1400272c0
   1400171f0:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400171f5:	mov    DWORD PTR [rbx],eax
   1400171f7:	jmp    0x140017200
   1400171f9:	call   0x14001392c
   1400171fe:	xor    ebx,ebx
   140017200:	mov    ecx,edi
   140017202:	call   QWORD PTR [rip+0xfe60]        # 0x140027068
   140017208:	mov    rax,rbx
   14001720b:	mov    rbx,QWORD PTR [rsp+0x30]
   140017210:	add    rsp,0x20
   140017214:	pop    rdi
   140017215:	ret    
   140017216:	int3   
   140017217:	int3   
   140017218:	mov    QWORD PTR [rsp+0x8],rbx
   14001721d:	push   rdi
   14001721e:	sub    rsp,0x20
   140017222:	mov    rdi,rdx
   140017225:	mov    rbx,rcx
   140017228:	lea    rax,[rip+0x12c51]        # 0x140029e80
   14001722f:	mov    QWORD PTR [rcx+0xa0],rax
   140017236:	and    DWORD PTR [rcx+0x10],0x0
   14001723a:	mov    DWORD PTR [rcx+0x1c],0x1
   140017241:	mov    DWORD PTR [rcx+0xc8],0x1
   14001724b:	mov    eax,0x43
   140017250:	mov    WORD PTR [rcx+0x164],ax
   140017257:	mov    WORD PTR [rcx+0x26a],ax
   14001725e:	lea    rax,[rip+0x2021b]        # 0x140037480
   140017265:	mov    QWORD PTR [rcx+0xb8],rax
   14001726c:	and    QWORD PTR [rcx+0x470],0x0
   140017274:	mov    ecx,0xd
   140017279:	call   0x14001cde8
   14001727e:	nop
   14001727f:	mov    rax,QWORD PTR [rbx+0xb8]
   140017286:	lock inc DWORD PTR [rax]
   140017289:	mov    ecx,0xd
   14001728e:	call   0x14001cfd8
   140017293:	mov    ecx,0xc
   140017298:	call   0x14001cde8
   14001729d:	nop
   14001729e:	mov    QWORD PTR [rbx+0xc0],rdi
   1400172a5:	test   rdi,rdi
   1400172a8:	jne    0x1400172b8
   1400172aa:	mov    rax,QWORD PTR [rip+0x207cf]        # 0x140037a80
   1400172b1:	mov    QWORD PTR [rbx+0xc0],rax
   1400172b8:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400172bf:	call   0x140019eb8
   1400172c4:	nop
   1400172c5:	mov    ecx,0xc
   1400172ca:	call   0x14001cfd8
   1400172cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400172d4:	add    rsp,0x20
   1400172d8:	pop    rdi
   1400172d9:	ret    
   1400172da:	int3   
   1400172db:	int3   
   1400172dc:	rex push rbx
   1400172de:	sub    rsp,0x20
   1400172e2:	call   0x140015a34
   1400172e7:	call   0x14001cf74
   1400172ec:	test   eax,eax
   1400172ee:	je     0x14001734e
   1400172f0:	lea    rcx,[rip+0xfffffffffffffd45]        # 0x14001703c
   1400172f7:	call   0x1400168b8
   1400172fc:	mov    DWORD PTR [rip+0x1feb2],eax        # 0x1400371b4
   140017302:	cmp    eax,0xffffffff
   140017305:	je     0x14001734e
   140017307:	mov    edx,0x478
   14001730c:	mov    ecx,0x1
   140017311:	call   0x140015d14
   140017316:	mov    rbx,rax
   140017319:	test   rax,rax
   14001731c:	je     0x14001734e
   14001731e:	mov    ecx,DWORD PTR [rip+0x1fe90]        # 0x1400371b4
   140017324:	mov    rdx,rax
   140017327:	call   0x14001690c
   14001732c:	test   eax,eax
   14001732e:	je     0x14001734e
   140017330:	xor    edx,edx
   140017332:	mov    rcx,rbx
   140017335:	call   0x140017218
   14001733a:	call   QWORD PTR [rip+0xff80]        # 0x1400272c0
   140017340:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140017345:	mov    DWORD PTR [rbx],eax
   140017347:	mov    eax,0x1
   14001734c:	jmp    0x140017355
   14001734e:	call   0x14001735c
   140017353:	xor    eax,eax
   140017355:	add    rsp,0x20
   140017359:	pop    rbx
   14001735a:	ret    
   14001735b:	int3   
   14001735c:	sub    rsp,0x28
   140017360:	mov    ecx,DWORD PTR [rip+0x1fe4e]        # 0x1400371b4
   140017366:	cmp    ecx,0xffffffff
   140017369:	je     0x140017377
   14001736b:	call   0x1400168d4
   140017370:	or     DWORD PTR [rip+0x1fe3d],0xffffffff        # 0x1400371b4
   140017377:	add    rsp,0x28
   14001737b:	jmp    0x14001ce2c
   140017380:	mov    rax,rsp
   140017383:	mov    QWORD PTR [rax+0x8],rbx
   140017387:	mov    QWORD PTR [rax+0x10],rsi
   14001738b:	mov    QWORD PTR [rax+0x18],rdi
   14001738f:	mov    QWORD PTR [rax+0x20],r12
   140017393:	push   r13
   140017395:	push   r14
   140017397:	push   r15
   140017399:	sub    rsp,0xc0
   1400173a0:	mov    QWORD PTR [rsp+0x48],rsp
   1400173a5:	mov    ecx,0xb
   1400173aa:	call   0x14001cde8
   1400173af:	nop
   1400173b0:	mov    edi,0x58
   1400173b5:	mov    edx,edi
   1400173b7:	lea    r13d,[rdi-0x38]
   1400173bb:	mov    ecx,r13d
   1400173be:	call   0x140015d14
   1400173c3:	mov    rcx,rax
   1400173c6:	mov    QWORD PTR [rsp+0x28],rax
   1400173cb:	xor    r12d,r12d
   1400173ce:	test   rax,rax
   1400173d1:	jne    0x1400173ec
   1400173d3:	lea    rdx,[rip+0xa]        # 0x1400173e4
   1400173da:	mov    rcx,rsp
   1400173dd:	call   0x14001d540
   1400173e2:	nop
   1400173e3:	nop
   1400173e4:	or     eax,0xffffffff
   1400173e7:	jmp    0x14001768b
   1400173ec:	mov    QWORD PTR [rip+0x226dd],rax        # 0x140039ad0
   1400173f3:	mov    DWORD PTR [rip+0x24026],r13d        # 0x14003b420
   1400173fa:	add    rax,0xb00
   140017400:	cmp    rcx,rax
   140017403:	jae    0x14001743e
   140017405:	mov    WORD PTR [rcx+0x8],0xa00
   14001740b:	or     QWORD PTR [rcx],0xffffffffffffffff
   14001740f:	mov    DWORD PTR [rcx+0xc],r12d
   140017413:	and    BYTE PTR [rcx+0x38],0x80
   140017417:	mov    al,BYTE PTR [rcx+0x38]
   14001741a:	and    al,0x7f
   14001741c:	mov    BYTE PTR [rcx+0x38],al
   14001741f:	mov    WORD PTR [rcx+0x39],0xa0a
   140017425:	mov    DWORD PTR [rcx+0x50],r12d
   140017429:	mov    BYTE PTR [rcx+0x4c],r12b
   14001742d:	add    rcx,rdi
   140017430:	mov    QWORD PTR [rsp+0x28],rcx
   140017435:	mov    rax,QWORD PTR [rip+0x22694]        # 0x140039ad0
   14001743c:	jmp    0x1400173fa
   14001743e:	lea    rcx,[rsp+0x50]
   140017443:	call   QWORD PTR [rip+0xfe6f]        # 0x1400272b8
   140017449:	cmp    WORD PTR [rsp+0x92],r12w
   140017452:	je     0x14001759a
   140017458:	mov    rax,QWORD PTR [rsp+0x98]
   140017460:	test   rax,rax
   140017463:	je     0x14001759a
   140017469:	lea    r14,[rax+0x4]
   14001746d:	mov    QWORD PTR [rsp+0x38],r14
   140017472:	movsxd rsi,DWORD PTR [rax]
   140017475:	add    rsi,r14
   140017478:	mov    QWORD PTR [rsp+0x40],rsi
   14001747d:	mov    r15d,0x800
   140017483:	cmp    DWORD PTR [rax],r15d
   140017486:	cmovl  r15d,DWORD PTR [rax]
   14001748a:	mov    ebx,0x1
   14001748f:	mov    DWORD PTR [rsp+0x30],ebx
   140017493:	cmp    DWORD PTR [rip+0x23f86],r15d        # 0x14003b420
   14001749a:	jge    0x14001750f
   14001749c:	mov    rdx,rdi
   14001749f:	mov    rcx,r13
   1400174a2:	call   0x140015d14
   1400174a7:	mov    rcx,rax
   1400174aa:	mov    QWORD PTR [rsp+0x28],rax
   1400174af:	test   rax,rax
   1400174b2:	jne    0x1400174bd
   1400174b4:	mov    r15d,DWORD PTR [rip+0x23f65]        # 0x14003b420
   1400174bb:	jmp    0x14001750f
   1400174bd:	movsxd rdx,ebx
   1400174c0:	lea    r8,[rip+0x22609]        # 0x140039ad0
   1400174c7:	mov    QWORD PTR [r8+rdx*8],rax
   1400174cb:	add    DWORD PTR [rip+0x23f4e],r13d        # 0x14003b420
   1400174d2:	mov    rax,QWORD PTR [r8+rdx*8]
   1400174d6:	add    rax,0xb00
   1400174dc:	cmp    rcx,rax
   1400174df:	jae    0x14001750b
   1400174e1:	mov    WORD PTR [rcx+0x8],0xa00
   1400174e7:	or     QWORD PTR [rcx],0xffffffffffffffff
   1400174eb:	mov    DWORD PTR [rcx+0xc],r12d
   1400174ef:	and    BYTE PTR [rcx+0x38],0x80
   1400174f3:	mov    WORD PTR [rcx+0x39],0xa0a
   1400174f9:	mov    DWORD PTR [rcx+0x50],r12d
   1400174fd:	mov    BYTE PTR [rcx+0x4c],r12b
   140017501:	add    rcx,rdi
   140017504:	mov    QWORD PTR [rsp+0x28],rcx
   140017509:	jmp    0x1400174d2
   14001750b:	inc    ebx
   14001750d:	jmp    0x14001748f
   14001750f:	mov    edi,r12d
   140017512:	mov    DWORD PTR [rsp+0x20],r12d
   140017517:	lea    r13,[rip+0x225b2]        # 0x140039ad0
   14001751e:	cmp    edi,r15d
   140017521:	jge    0x14001759a
   140017523:	mov    rcx,QWORD PTR [rsi]
   140017526:	lea    rax,[rcx+0x2]
   14001752a:	cmp    rax,0x1
   14001752e:	jbe    0x140017581
   140017530:	test   BYTE PTR [r14],0x1
   140017534:	je     0x140017581
   140017536:	test   BYTE PTR [r14],0x8
   14001753a:	jne    0x140017546
   14001753c:	call   QWORD PTR [rip+0xfb46]        # 0x140027088
   140017542:	test   eax,eax
   140017544:	je     0x140017581
   140017546:	movsxd rcx,edi
   140017549:	mov    rax,rcx
   14001754c:	sar    rax,0x5
   140017550:	and    ecx,0x1f
   140017553:	imul   rbx,rcx,0x58
   140017557:	add    rbx,QWORD PTR [r13+rax*8+0x0]
   14001755c:	mov    QWORD PTR [rsp+0x28],rbx
   140017561:	mov    rax,QWORD PTR [rsi]
   140017564:	mov    QWORD PTR [rbx],rax
   140017567:	mov    al,BYTE PTR [r14]
   14001756a:	mov    BYTE PTR [rbx+0x8],al
   14001756d:	lea    rcx,[rbx+0x10]
   140017571:	xor    r8d,r8d
   140017574:	mov    edx,0xfa0
   140017579:	call   0x140016954
   14001757e:	inc    DWORD PTR [rbx+0xc]
   140017581:	inc    edi
   140017583:	mov    DWORD PTR [rsp+0x20],edi
   140017587:	inc    r14
   14001758a:	mov    QWORD PTR [rsp+0x38],r14
   14001758f:	add    rsi,0x8
   140017593:	mov    QWORD PTR [rsp+0x40],rsi
   140017598:	jmp    0x14001751e
   14001759a:	mov    edi,r12d
   14001759d:	mov    DWORD PTR [rsp+0x20],r12d
   1400175a2:	mov    r15,0xfffffffffffffffe
   1400175a9:	cmp    edi,0x3
   1400175ac:	jge    0x14001767f
   1400175b2:	movsxd rsi,edi
   1400175b5:	imul   rbx,rsi,0x58
   1400175b9:	add    rbx,QWORD PTR [rip+0x22510]        # 0x140039ad0
   1400175c0:	mov    QWORD PTR [rsp+0x28],rbx
   1400175c5:	mov    rax,QWORD PTR [rbx]
   1400175c8:	add    rax,0x2
   1400175cc:	cmp    rax,0x1
   1400175d0:	jbe    0x1400175e2
   1400175d2:	movsx  eax,BYTE PTR [rbx+0x8]
   1400175d6:	bts    eax,0x7
   1400175da:	mov    BYTE PTR [rbx+0x8],al
   1400175dd:	jmp    0x140017674
   1400175e2:	mov    BYTE PTR [rbx+0x8],0x81
   1400175e6:	lea    eax,[rdi-0x1]
   1400175e9:	neg    eax
   1400175eb:	sbb    ecx,ecx
   1400175ed:	add    ecx,0xfffffff5
   1400175f0:	mov    eax,0xfffffff6
   1400175f5:	test   edi,edi
   1400175f7:	cmove  ecx,eax
   1400175fa:	call   QWORD PTR [rip+0xfc78]        # 0x140027278
   140017600:	mov    r14,rax
   140017603:	lea    rcx,[rax+0x1]
   140017607:	cmp    rcx,0x1
   14001760b:	jbe    0x140017653
   14001760d:	mov    rcx,rax
   140017610:	call   QWORD PTR [rip+0xfa72]        # 0x140027088
   140017616:	test   eax,eax
   140017618:	je     0x140017653
   14001761a:	mov    QWORD PTR [rbx],r14
   14001761d:	movzx  eax,al
   140017620:	cmp    eax,0x2
   140017623:	jne    0x14001762e
   140017625:	movsx  eax,BYTE PTR [rbx+0x8]
   140017629:	or     eax,0x40
   14001762c:	jmp    0x14001763a
   14001762e:	cmp    eax,0x3
   140017631:	jne    0x14001763d
   140017633:	movsx  eax,BYTE PTR [rbx+0x8]
   140017637:	or     eax,0x8
   14001763a:	mov    BYTE PTR [rbx+0x8],al
   14001763d:	lea    rcx,[rbx+0x10]
   140017641:	xor    r8d,r8d
   140017644:	mov    edx,0xfa0
   140017649:	call   0x140016954
   14001764e:	inc    DWORD PTR [rbx+0xc]
   140017651:	jmp    0x140017674
   140017653:	movsx  eax,BYTE PTR [rbx+0x8]
   140017657:	or     eax,0x40
   14001765a:	mov    BYTE PTR [rbx+0x8],al
   14001765d:	mov    QWORD PTR [rbx],r15
   140017660:	mov    rax,QWORD PTR [rip+0x22da1]        # 0x14003a408
   140017667:	test   rax,rax
   14001766a:	je     0x140017674
   14001766c:	mov    rax,QWORD PTR [rax+rsi*8]
   140017670:	mov    DWORD PTR [rax+0x1c],r15d
   140017674:	inc    edi
   140017676:	mov    DWORD PTR [rsp+0x20],edi
   14001767a:	jmp    0x1400175a9
   14001767f:	mov    ecx,0xb
   140017684:	call   0x14001cfd8
   140017689:	xor    eax,eax
   14001768b:	lea    r11,[rsp+0xc0]
   140017693:	mov    rbx,QWORD PTR [r11+0x20]
   140017697:	mov    rsi,QWORD PTR [r11+0x28]
   14001769b:	mov    rdi,QWORD PTR [r11+0x30]
   14001769f:	mov    r12,QWORD PTR [r11+0x38]
   1400176a3:	mov    rsp,r11
   1400176a6:	pop    r15
   1400176a8:	pop    r14
   1400176aa:	pop    r13
   1400176ac:	ret    
   1400176ad:	int3   
   1400176ae:	int3   
   1400176af:	int3   
   1400176b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400176b5:	push   rbp
   1400176b6:	push   rsi
   1400176b7:	push   rdi
   1400176b8:	sub    rsp,0x30
   1400176bc:	lea    rdi,[rip+0x2260d]        # 0x140039cd0
   1400176c3:	xor    ebp,ebp
   1400176c5:	mov    r8d,0x104
   1400176cb:	mov    rdx,rdi
   1400176ce:	xor    ecx,ecx
   1400176d0:	mov    WORD PTR [rip+0x22801],bp        # 0x140039ed8
   1400176d7:	call   QWORD PTR [rip+0xfba3]        # 0x140027280
   1400176dd:	mov    rbx,QWORD PTR [rip+0x23e84]        # 0x14003b568
   1400176e4:	mov    QWORD PTR [rip+0x21d4d],rdi        # 0x140039438
   1400176eb:	test   rbx,rbx
   1400176ee:	je     0x1400176f5
   1400176f0:	cmp    WORD PTR [rbx],bp
   1400176f3:	jne    0x1400176f8
   1400176f5:	mov    rbx,rdi
   1400176f8:	lea    rax,[rsp+0x58]
   1400176fd:	lea    r9,[rsp+0x50]
   140017702:	xor    r8d,r8d
   140017705:	xor    edx,edx
   140017707:	mov    rcx,rbx
   14001770a:	mov    QWORD PTR [rsp+0x20],rax
   14001770f:	call   0x1400177a0
   140017714:	movsxd rsi,DWORD PTR [rsp+0x50]
   140017719:	movabs rax,0x1fffffffffffffff
   140017723:	cmp    rsi,rax
   140017726:	jae    0x14001778d
   140017728:	movsxd rax,DWORD PTR [rsp+0x58]
   14001772d:	movabs rcx,0x7fffffffffffffff
   140017737:	cmp    rax,rcx
   14001773a:	jae    0x14001778d
   14001773c:	lea    rcx,[rax+rsi*4]
   140017740:	add    rax,rax
   140017743:	add    rcx,rcx
   140017746:	cmp    rcx,rax
   140017749:	jb     0x14001778d
   14001774b:	call   0x140015d94
   140017750:	mov    rdi,rax
   140017753:	test   rax,rax
   140017756:	je     0x14001778d
   140017758:	lea    r8,[rax+rsi*8]
   14001775c:	lea    rax,[rsp+0x58]
   140017761:	lea    r9,[rsp+0x50]
   140017766:	mov    rdx,rdi
   140017769:	mov    rcx,rbx
   14001776c:	mov    QWORD PTR [rsp+0x20],rax
   140017771:	call   0x1400177a0
   140017776:	mov    eax,DWORD PTR [rsp+0x50]
   14001777a:	mov    QWORD PTR [rip+0x21c97],rdi        # 0x140039418
   140017781:	dec    eax
   140017783:	mov    DWORD PTR [rip+0x21c83],eax        # 0x14003940c
   140017789:	xor    eax,eax
   14001778b:	jmp    0x140017790
   14001778d:	or     eax,0xffffffff
   140017790:	mov    rbx,QWORD PTR [rsp+0x60]
   140017795:	add    rsp,0x30
   140017799:	pop    rdi
   14001779a:	pop    rsi
   14001779b:	pop    rbp
   14001779c:	ret    
   14001779d:	int3   
   14001779e:	int3   
   14001779f:	int3   
   1400177a0:	mov    rax,rsp
   1400177a3:	mov    QWORD PTR [rax+0x8],rbx
   1400177a7:	mov    QWORD PTR [rax+0x10],rsi
   1400177ab:	mov    QWORD PTR [rax+0x18],rdi
   1400177af:	mov    QWORD PTR [rax+0x20],r12
   1400177b3:	push   r15
   1400177b5:	mov    r11,QWORD PTR [rsp+0x30]
   1400177ba:	xor    esi,esi
   1400177bc:	mov    rbx,r9
   1400177bf:	mov    DWORD PTR [r11],esi
   1400177c2:	mov    r10,rdx
   1400177c5:	mov    DWORD PTR [r9],0x1
   1400177cc:	test   rdx,rdx
   1400177cf:	je     0x1400177d8
   1400177d1:	mov    QWORD PTR [rdx],r8
   1400177d4:	add    r10,0x8
   1400177d8:	mov    edx,esi
   1400177da:	mov    r12d,0x22
   1400177e0:	cmp    WORD PTR [rcx],r12w
   1400177e4:	jne    0x1400177f9
   1400177e6:	test   edx,edx
   1400177e8:	mov    eax,esi
   1400177ea:	sete   al
   1400177ed:	add    rcx,0x2
   1400177f1:	mov    edx,eax
   1400177f3:	movzx  eax,r12w
   1400177f7:	jmp    0x140017818
   1400177f9:	inc    DWORD PTR [r11]
   1400177fc:	test   r8,r8
   1400177ff:	je     0x14001780c
   140017801:	movzx  eax,WORD PTR [rcx]
   140017804:	mov    WORD PTR [r8],ax
   140017808:	add    r8,0x2
   14001780c:	movzx  eax,WORD PTR [rcx]
   14001780f:	add    rcx,0x2
   140017813:	test   ax,ax
   140017816:	je     0x140017834
   140017818:	test   edx,edx
   14001781a:	jne    0x1400177e0
   14001781c:	cmp    ax,0x20
   140017820:	je     0x140017828
   140017822:	cmp    ax,0x9
   140017826:	jne    0x1400177e0
   140017828:	test   r8,r8
   14001782b:	je     0x140017838
   14001782d:	mov    WORD PTR [r8-0x2],si
   140017832:	jmp    0x140017838
   140017834:	sub    rcx,0x2
   140017838:	mov    edi,esi
   14001783a:	mov    r15d,0x5c
   140017840:	cmp    WORD PTR [rcx],si
   140017843:	je     0x140017917
   140017849:	cmp    WORD PTR [rcx],0x20
   14001784d:	je     0x140017855
   14001784f:	cmp    WORD PTR [rcx],0x9
   140017853:	jne    0x14001785b
   140017855:	add    rcx,0x2
   140017859:	jmp    0x140017849
   14001785b:	cmp    WORD PTR [rcx],si
   14001785e:	je     0x140017917
   140017864:	test   r10,r10
   140017867:	je     0x140017870
   140017869:	mov    QWORD PTR [r10],r8
   14001786c:	add    r10,0x8
   140017870:	inc    DWORD PTR [rbx]
   140017872:	mov    r9d,0x1
   140017878:	mov    edx,esi
   14001787a:	jmp    0x140017882
   14001787c:	add    rcx,0x2
   140017880:	inc    edx
   140017882:	cmp    WORD PTR [rcx],r15w
   140017886:	je     0x14001787c
   140017888:	cmp    WORD PTR [rcx],r12w
   14001788c:	jne    0x1400178c8
   14001788e:	test   r9b,dl
   140017891:	jne    0x1400178b2
   140017893:	test   edi,edi
   140017895:	je     0x1400178a6
   140017897:	lea    rax,[rcx+0x2]
   14001789b:	cmp    WORD PTR [rax],r12w
   14001789f:	jne    0x1400178a6
   1400178a1:	mov    rcx,rax
   1400178a4:	jmp    0x1400178b2
   1400178a6:	test   edi,edi
   1400178a8:	mov    eax,esi
   1400178aa:	mov    r9d,esi
   1400178ad:	sete   al
   1400178b0:	mov    edi,eax
   1400178b2:	shr    edx,1
   1400178b4:	jmp    0x1400178c8
   1400178b6:	dec    edx
   1400178b8:	test   r8,r8
   1400178bb:	je     0x1400178c5
   1400178bd:	mov    WORD PTR [r8],r15w
   1400178c1:	add    r8,0x2
   1400178c5:	inc    DWORD PTR [r11]
   1400178c8:	test   edx,edx
   1400178ca:	jne    0x1400178b6
   1400178cc:	movzx  eax,WORD PTR [rcx]
   1400178cf:	test   ax,ax
   1400178d2:	je     0x140017902
   1400178d4:	test   edi,edi
   1400178d6:	jne    0x1400178e4
   1400178d8:	cmp    ax,0x20
   1400178dc:	je     0x140017902
   1400178de:	cmp    ax,0x9
   1400178e2:	je     0x140017902
   1400178e4:	test   r9d,r9d
   1400178e7:	je     0x1400178f9
   1400178e9:	test   r8,r8
   1400178ec:	je     0x1400178f6
   1400178ee:	mov    WORD PTR [r8],ax
   1400178f2:	add    r8,0x2
   1400178f6:	inc    DWORD PTR [r11]
   1400178f9:	add    rcx,0x2
   1400178fd:	jmp    0x140017872
   140017902:	test   r8,r8
   140017905:	je     0x14001790f
   140017907:	mov    WORD PTR [r8],si
   14001790b:	add    r8,0x2
   14001790f:	inc    DWORD PTR [r11]
   140017912:	jmp    0x140017840
   140017917:	test   r10,r10
   14001791a:	je     0x14001791f
   14001791c:	mov    QWORD PTR [r10],rsi
   14001791f:	inc    DWORD PTR [rbx]
   140017921:	mov    rsi,QWORD PTR [rsp+0x18]
   140017926:	mov    rdi,QWORD PTR [rsp+0x20]
   14001792b:	mov    rbx,QWORD PTR [rsp+0x10]
   140017930:	mov    r12,QWORD PTR [rsp+0x28]
   140017935:	pop    r15
   140017937:	ret    
   140017938:	mov    rax,rsp
   14001793b:	mov    QWORD PTR [rax+0x8],rbx
   14001793f:	mov    QWORD PTR [rax+0x10],rbp
   140017943:	mov    QWORD PTR [rax+0x18],rsi
   140017947:	mov    QWORD PTR [rax+0x20],rdi
   14001794b:	push   r14
   14001794d:	sub    rsp,0x30
   140017951:	mov    rbx,QWORD PTR [rip+0x21520]        # 0x140038e78
   140017958:	xor    r14d,r14d
   14001795b:	mov    edi,r14d
   14001795e:	test   rbx,rbx
   140017961:	jne    0x140017983
   140017963:	or     eax,0xffffffff
   140017966:	jmp    0x140017a28
   14001796b:	cmp    ax,0x3d
   14001796f:	je     0x140017973
   140017971:	inc    edi
   140017973:	mov    rcx,rbx
   140017976:	call   0x14001b978
   14001797b:	lea    rbx,[rbx+rax*2]
   14001797f:	add    rbx,0x2
   140017983:	movzx  eax,WORD PTR [rbx]
   140017986:	test   ax,ax
   140017989:	jne    0x14001796b
   14001798b:	lea    eax,[rdi+0x1]
   14001798e:	mov    edx,0x8
   140017993:	movsxd rcx,eax
   140017996:	call   0x140015d14
   14001799b:	mov    rdi,rax
   14001799e:	mov    QWORD PTR [rip+0x21a83],rax        # 0x140039428
   1400179a5:	test   rax,rax
   1400179a8:	je     0x140017963
   1400179aa:	mov    rbx,QWORD PTR [rip+0x214c7]        # 0x140038e78
   1400179b1:	cmp    WORD PTR [rbx],r14w
   1400179b5:	je     0x140017a0a
   1400179b7:	mov    rcx,rbx
   1400179ba:	call   0x14001b978
   1400179bf:	cmp    WORD PTR [rbx],0x3d
   1400179c3:	lea    esi,[rax+0x1]
   1400179c6:	je     0x1400179f6
   1400179c8:	movsxd rbp,esi
   1400179cb:	mov    edx,0x2
   1400179d0:	mov    rcx,rbp
   1400179d3:	call   0x140015d14
   1400179d8:	mov    QWORD PTR [rdi],rax
   1400179db:	test   rax,rax
   1400179de:	je     0x140017a43
   1400179e0:	mov    r8,rbx
   1400179e3:	mov    rdx,rbp
   1400179e6:	mov    rcx,rax
   1400179e9:	call   0x140014134
   1400179ee:	test   eax,eax
   1400179f0:	jne    0x140017a5b
   1400179f2:	add    rdi,0x8
   1400179f6:	movsxd rax,esi
   1400179f9:	lea    rbx,[rbx+rax*2]
   1400179fd:	cmp    WORD PTR [rbx],r14w
   140017a01:	jne    0x1400179b7
   140017a03:	mov    rbx,QWORD PTR [rip+0x2146e]        # 0x140038e78
   140017a0a:	mov    rcx,rbx
   140017a0d:	call   0x14001392c
   140017a12:	mov    QWORD PTR [rip+0x2145f],r14        # 0x140038e78
   140017a19:	mov    QWORD PTR [rdi],r14
   140017a1c:	mov    DWORD PTR [rip+0x23b3e],0x1        # 0x14003b564
   140017a26:	xor    eax,eax
   140017a28:	mov    rbx,QWORD PTR [rsp+0x40]
   140017a2d:	mov    rbp,QWORD PTR [rsp+0x48]
   140017a32:	mov    rsi,QWORD PTR [rsp+0x50]
   140017a37:	mov    rdi,QWORD PTR [rsp+0x58]
   140017a3c:	add    rsp,0x30
   140017a40:	pop    r14
   140017a42:	ret    
   140017a43:	mov    rcx,QWORD PTR [rip+0x219de]        # 0x140039428
   140017a4a:	call   0x14001392c
   140017a4f:	mov    QWORD PTR [rip+0x219d2],r14        # 0x140039428
   140017a56:	jmp    0x140017963
   140017a5b:	xor    r9d,r9d
   140017a5e:	xor    r8d,r8d
   140017a61:	xor    edx,edx
   140017a63:	xor    ecx,ecx
   140017a65:	mov    QWORD PTR [rsp+0x20],r14
   140017a6a:	call   0x140013f74
   140017a6f:	int3   
   140017a70:	mov    DWORD PTR [rip+0x21a1a],ecx        # 0x140039490
   140017a76:	ret    
   140017a77:	int3   
   140017a78:	sub    rsp,0x28
   140017a7c:	test   ecx,ecx
   140017a7e:	js     0x140017aa0
   140017a80:	cmp    ecx,0x2
   140017a83:	jle    0x140017a92
   140017a85:	cmp    ecx,0x3
   140017a88:	jne    0x140017aa0
   140017a8a:	mov    eax,DWORD PTR [rip+0x2244c]        # 0x140039edc
   140017a90:	jmp    0x140017ab3
   140017a92:	mov    eax,DWORD PTR [rip+0x22444]        # 0x140039edc
   140017a98:	mov    DWORD PTR [rip+0x2243e],ecx        # 0x140039edc
   140017a9e:	jmp    0x140017ab3
   140017aa0:	call   0x1400161e8
   140017aa5:	mov    DWORD PTR [rax],0x16
   140017aab:	call   0x140013f54
   140017ab0:	or     eax,0xffffffff
   140017ab3:	add    rsp,0x28
   140017ab7:	ret    
   140017ab8:	mov    QWORD PTR [rsp+0x20],rbx
   140017abd:	push   rbp
   140017abe:	mov    rbp,rsp
   140017ac1:	sub    rsp,0x20
   140017ac5:	mov    rax,QWORD PTR [rip+0x1f544]        # 0x140037010
   140017acc:	and    QWORD PTR [rbp+0x18],0x0
   140017ad1:	movabs rbx,0x2b992ddfa232
   140017adb:	cmp    rax,rbx
   140017ade:	jne    0x140017b4f
   140017ae0:	lea    rcx,[rbp+0x18]
   140017ae4:	call   QWORD PTR [rip+0xf7e6]        # 0x1400272d0
   140017aea:	mov    rax,QWORD PTR [rbp+0x18]
   140017aee:	mov    QWORD PTR [rbp+0x10],rax
   140017af2:	call   QWORD PTR [rip+0xf7c8]        # 0x1400272c0
   140017af8:	mov    eax,eax
   140017afa:	xor    QWORD PTR [rbp+0x10],rax
   140017afe:	call   QWORD PTR [rip+0xf5a4]        # 0x1400270a8
   140017b04:	lea    rcx,[rbp+0x20]
   140017b08:	mov    eax,eax
   140017b0a:	xor    QWORD PTR [rbp+0x10],rax
   140017b0e:	call   QWORD PTR [rip+0xf7b4]        # 0x1400272c8
   140017b14:	mov    eax,DWORD PTR [rbp+0x20]
   140017b17:	shl    rax,0x20
   140017b1b:	lea    rcx,[rbp+0x10]
   140017b1f:	xor    rax,QWORD PTR [rbp+0x20]
   140017b23:	xor    rax,QWORD PTR [rbp+0x10]
   140017b27:	xor    rax,rcx
   140017b2a:	movabs rcx,0xffffffffffff
   140017b34:	and    rax,rcx
   140017b37:	movabs rcx,0x2b992ddfa233
   140017b41:	cmp    rax,rbx
   140017b44:	cmove  rax,rcx
   140017b48:	mov    QWORD PTR [rip+0x1f4c1],rax        # 0x140037010
   140017b4f:	mov    rbx,QWORD PTR [rsp+0x48]
   140017b54:	not    rax
   140017b57:	mov    QWORD PTR [rip+0x1f4ba],rax        # 0x140037018
   140017b5e:	add    rsp,0x20
   140017b62:	pop    rbp
   140017b63:	ret    
   140017b64:	mov    QWORD PTR [rsp+0x8],rbx
   140017b69:	push   rdi
   140017b6a:	sub    rsp,0x20
   140017b6e:	lea    rbx,[rip+0x190db]        # 0x140030c50
   140017b75:	lea    rdi,[rip+0x190d4]        # 0x140030c50
   140017b7c:	jmp    0x140017b8c
   140017b7e:	mov    rax,QWORD PTR [rbx]
   140017b81:	test   rax,rax
   140017b84:	je     0x140017b88
   140017b86:	call   rax
   140017b88:	add    rbx,0x8
   140017b8c:	cmp    rbx,rdi
   140017b8f:	jb     0x140017b7e
   140017b91:	mov    rbx,QWORD PTR [rsp+0x30]
   140017b96:	add    rsp,0x20
   140017b9a:	pop    rdi
   140017b9b:	ret    
   140017b9c:	mov    QWORD PTR [rsp+0x8],rbx
   140017ba1:	push   rdi
   140017ba2:	sub    rsp,0x20
   140017ba6:	lea    rbx,[rip+0x190b3]        # 0x140030c60
   140017bad:	lea    rdi,[rip+0x190ac]        # 0x140030c60
   140017bb4:	jmp    0x140017bc4
   140017bb6:	mov    rax,QWORD PTR [rbx]
   140017bb9:	test   rax,rax
   140017bbc:	je     0x140017bc0
   140017bbe:	call   rax
   140017bc0:	add    rbx,0x8
   140017bc4:	cmp    rbx,rdi
   140017bc7:	jb     0x140017bb6
   140017bc9:	mov    rbx,QWORD PTR [rsp+0x30]
   140017bce:	add    rsp,0x20
   140017bd2:	pop    rdi
   140017bd3:	ret    
   140017bd4:	mov    QWORD PTR [rsp+0x8],rbx
   140017bd9:	mov    QWORD PTR [rsp+0x10],rbp
   140017bde:	mov    QWORD PTR [rsp+0x18],rsi
   140017be3:	push   rdi
   140017be4:	sub    rsp,0x20
   140017be8:	call   QWORD PTR [rip+0xf6ea]        # 0x1400272d8
   140017bee:	xor    ebx,ebx
   140017bf0:	mov    rdi,rax
   140017bf3:	test   rax,rax
   140017bf6:	jne    0x140017c07
   140017bf8:	jmp    0x140017c41
   140017bfa:	add    rax,0x2
   140017bfe:	cmp    WORD PTR [rax],bx
   140017c01:	jne    0x140017bfa
   140017c03:	add    rax,0x2
   140017c07:	cmp    WORD PTR [rax],bx
   140017c0a:	jne    0x140017bfa
   140017c0c:	sub    eax,edi
   140017c0e:	add    eax,0x2
   140017c11:	movsxd rbp,eax
   140017c14:	mov    rcx,rbp
   140017c17:	call   0x140015d94
   140017c1c:	mov    rsi,rax
   140017c1f:	test   rax,rax
   140017c22:	je     0x140017c35
   140017c24:	mov    r8,rbp
   140017c27:	mov    rdx,rdi
   140017c2a:	mov    rcx,rax
   140017c2d:	call   0x1400130d0
   140017c32:	mov    rbx,rsi
   140017c35:	mov    rcx,rdi
   140017c38:	call   QWORD PTR [rip+0xf6a2]        # 0x1400272e0
   140017c3e:	mov    rax,rbx
   140017c41:	mov    rbx,QWORD PTR [rsp+0x30]
   140017c46:	mov    rbp,QWORD PTR [rsp+0x38]
   140017c4b:	mov    rsi,QWORD PTR [rsp+0x40]
   140017c50:	add    rsp,0x20
   140017c54:	pop    rdi
   140017c55:	ret    
   140017c56:	int3   
   140017c57:	int3   
   140017c58:	mov    rcx,QWORD PTR [rip+0x23909]        # 0x14003b568
   140017c5f:	xor    r8d,r8d
   140017c62:	lea    rax,[rip+0x16fff]        # 0x14002ec68
   140017c69:	test   rcx,rcx
   140017c6c:	mov    edx,r8d
   140017c6f:	cmove  rcx,rax
   140017c73:	cmp    WORD PTR [rcx],0x20
   140017c77:	ja     0x140017c83
   140017c79:	cmp    WORD PTR [rcx],r8w
   140017c7d:	je     0x140017cab
   140017c7f:	test   edx,edx
   140017c81:	je     0x140017ca3
   140017c83:	cmp    WORD PTR [rcx],0x22
   140017c87:	jne    0x140017c93
   140017c89:	test   edx,edx
   140017c8b:	mov    eax,r8d
   140017c8e:	sete   al
   140017c91:	mov    edx,eax
   140017c93:	add    rcx,0x2
   140017c97:	jmp    0x140017c73
   140017c99:	cmp    ax,0x20
   140017c9d:	ja     0x140017cab
   140017c9f:	add    rcx,0x2
   140017ca3:	movzx  eax,WORD PTR [rcx]
   140017ca6:	test   ax,ax
   140017ca9:	jne    0x140017c99
   140017cab:	mov    rax,rcx
   140017cae:	ret    
   140017caf:	int3   
   140017cb0:	test   rcx,rcx
   140017cb3:	je     0x140017d1d
   140017cb5:	mov    BYTE PTR [rsp+0x10],dl
   140017cb9:	sub    rsp,0x28
   140017cbd:	cmp    DWORD PTR [rcx],0xe06d7363
   140017cc3:	jne    0x140017d19
   140017cc5:	cmp    DWORD PTR [rcx+0x18],0x4
   140017cc9:	jne    0x140017d19
   140017ccb:	mov    eax,DWORD PTR [rcx+0x20]
   140017cce:	sub    eax,0x19930520
   140017cd3:	cmp    eax,0x2
   140017cd6:	ja     0x140017d19
   140017cd8:	mov    rax,QWORD PTR [rcx+0x30]
   140017cdc:	test   rax,rax
   140017cdf:	je     0x140017d19
   140017ce1:	movsxd rdx,DWORD PTR [rax+0x4]
   140017ce5:	test   edx,edx
   140017ce7:	je     0x140017d02
   140017ce9:	mov    rax,rdx
   140017cec:	mov    rdx,QWORD PTR [rcx+0x38]
   140017cf0:	add    rdx,rax
   140017cf3:	mov    rcx,QWORD PTR [rcx+0x28]
   140017cf7:	call   rdx
   140017cf9:	nop
   140017cfa:	jmp    0x140017d19
   140017cfc:	call   0x140019204
   140017d01:	nop
   140017d02:	test   BYTE PTR [rax],0x10
   140017d05:	je     0x140017d19
   140017d07:	mov    rax,QWORD PTR [rcx+0x28]
   140017d0b:	mov    rcx,QWORD PTR [rax]
   140017d0e:	test   rcx,rcx
   140017d11:	je     0x140017d19
   140017d13:	mov    rax,QWORD PTR [rcx]
   140017d16:	call   QWORD PTR [rax+0x10]
   140017d19:	add    rsp,0x28
   140017d1d:	ret    
   140017d1e:	int3   
   140017d1f:	int3   
   140017d20:	rex push rbx
   140017d22:	sub    rsp,0x20
   140017d26:	mov    rbx,rcx
   140017d29:	call   0x140015424
   140017d2e:	lea    rax,[rip+0x1222b]        # 0x140029f60
   140017d35:	mov    QWORD PTR [rbx],rax
   140017d38:	mov    rax,rbx
   140017d3b:	add    rsp,0x20
   140017d3f:	pop    rbx
   140017d40:	ret    
   140017d41:	int3   
   140017d42:	int3   
   140017d43:	int3   
   140017d44:	lea    rax,[rip+0x12215]        # 0x140029f60
   140017d4b:	mov    QWORD PTR [rcx],rax
   140017d4e:	jmp    0x140015450
   140017d53:	int3   
   140017d54:	mov    QWORD PTR [rsp+0x8],rbx
   140017d59:	push   rdi
   140017d5a:	sub    rsp,0x20
   140017d5e:	lea    rax,[rip+0x121fb]        # 0x140029f60
   140017d65:	mov    ebx,edx
   140017d67:	mov    rdi,rcx
   140017d6a:	mov    QWORD PTR [rcx],rax
   140017d6d:	call   0x140015450
   140017d72:	test   bl,0x1
   140017d75:	je     0x140017d7f
   140017d77:	mov    rcx,rdi
   140017d7a:	call   0x1400137cc
   140017d7f:	mov    rax,rdi
   140017d82:	mov    rbx,QWORD PTR [rsp+0x30]
   140017d87:	add    rsp,0x20
   140017d8b:	pop    rdi
   140017d8c:	ret    
   140017d8d:	int3   
   140017d8e:	int3   
   140017d8f:	int3   
   140017d90:	mov    rax,rsp
   140017d93:	mov    QWORD PTR [rax+0x8],rbx
   140017d97:	mov    QWORD PTR [rax+0x18],rbp
   140017d9b:	push   rsi
   140017d9c:	push   rdi
   140017d9d:	push   r12
   140017d9f:	push   r14
   140017da1:	push   r15
   140017da3:	sub    rsp,0x50
   140017da7:	mov    r15,QWORD PTR [rsp+0xa0]
   140017daf:	mov    rbp,r9
   140017db2:	mov    r14,rdx
   140017db5:	mov    r12,r8
   140017db8:	mov    rbx,rcx
   140017dbb:	lea    r9,[rax+0x10]
   140017dbf:	mov    r8,r15
   140017dc2:	mov    rdx,rbp
   140017dc5:	mov    rcx,r14
   140017dc8:	call   0x140014434
   140017dcd:	mov    r9,QWORD PTR [rsp+0xb0]
   140017dd5:	mov    rsi,QWORD PTR [rsp+0xa8]
   140017ddd:	mov    rdi,rax
   140017de0:	test   r9,r9
   140017de3:	je     0x140017df3
   140017de5:	mov    r8,rsi
   140017de8:	mov    rdx,rax
   140017deb:	mov    rcx,rbx
   140017dee:	call   0x14001866c
   140017df3:	call   0x14001485c
   140017df8:	movsxd rcx,DWORD PTR [rsi+0xc]
   140017dfc:	mov    r9,rdi
   140017dff:	add    rax,rcx
   140017e02:	mov    cl,BYTE PTR [rsp+0xd8]
   140017e09:	mov    r8,r12
   140017e0c:	mov    BYTE PTR [rsp+0x40],cl
   140017e10:	mov    rcx,QWORD PTR [rsp+0xb8]
   140017e18:	mov    QWORD PTR [rsp+0x38],rbp
   140017e1d:	mov    edx,DWORD PTR [rcx]
   140017e1f:	mov    QWORD PTR [rsp+0x30],r15
   140017e24:	mov    rcx,r14
   140017e27:	mov    DWORD PTR [rsp+0x28],edx
   140017e2b:	mov    rdx,rbx
   140017e2e:	mov    QWORD PTR [rsp+0x20],rax
   140017e33:	call   0x1400148f8
   140017e38:	lea    r11,[rsp+0x50]
   140017e3d:	mov    rbx,QWORD PTR [r11+0x30]
   140017e41:	mov    rbp,QWORD PTR [r11+0x40]
   140017e45:	mov    rsp,r11
   140017e48:	pop    r15
   140017e4a:	pop    r14
   140017e4c:	pop    r12
   140017e4e:	pop    rdi
   140017e4f:	pop    rsi
   140017e50:	ret    
   140017e51:	int3   
   140017e52:	int3   
   140017e53:	int3   
   140017e54:	mov    QWORD PTR [rsp+0x10],rbx
   140017e59:	mov    QWORD PTR [rsp+0x18],r8
   140017e5e:	push   rbp
   140017e5f:	push   rsi
   140017e60:	push   rdi
   140017e61:	push   r12
   140017e63:	push   r13
   140017e65:	push   r14
   140017e67:	push   r15
   140017e69:	lea    rbp,[rsp-0x7]
   140017e6e:	sub    rsp,0xb0
   140017e75:	mov    rbx,QWORD PTR [rbp+0x67]
   140017e79:	mov    r13,rdx
   140017e7c:	mov    rdi,rcx
   140017e7f:	xor    r12d,r12d
   140017e82:	mov    rdx,r9
   140017e85:	mov    rcx,rbx
   140017e88:	mov    r15,r9
   140017e8b:	mov    r14,r8
   140017e8e:	mov    BYTE PTR [rbp+0x47],r12b
   140017e92:	mov    BYTE PTR [rbp-0x49],r12b
   140017e96:	call   0x140019150
   140017e9b:	lea    r9,[rbp-0x21]
   140017e9f:	mov    r8,rbx
   140017ea2:	mov    rdx,r15
   140017ea5:	mov    rcx,r13
   140017ea8:	mov    esi,eax
   140017eaa:	call   0x140014434
   140017eaf:	mov    r8,rbx
   140017eb2:	mov    rdx,r15
   140017eb5:	mov    rcx,r13
   140017eb8:	call   0x1400190dc
   140017ebd:	mov    r8,rbx
   140017ec0:	mov    rdx,r15
   140017ec3:	cmp    esi,eax
   140017ec5:	jle    0x140017ee6
   140017ec7:	lea    rcx,[rbp-0x21]
   140017ecb:	mov    r9d,esi
   140017ece:	call   0x140019108
   140017ed3:	mov    r9d,esi
   140017ed6:	mov    r8,rbx
   140017ed9:	mov    rdx,r15
   140017edc:	mov    rcx,r13
   140017edf:	call   0x140019114
   140017ee4:	jmp    0x140017ef0
   140017ee6:	mov    rcx,r13
   140017ee9:	call   0x1400190dc
   140017eee:	mov    esi,eax
   140017ef0:	cmp    esi,0xffffffff
   140017ef3:	jl     0x140017efa
   140017ef5:	cmp    esi,DWORD PTR [rbx+0x4]
   140017ef8:	jl     0x140017eff
   140017efa:	call   0x1400191e4
   140017eff:	cmp    DWORD PTR [rdi],0xe06d7363
   140017f05:	jne    0x140018286
   140017f0b:	cmp    DWORD PTR [rdi+0x18],0x4
   140017f0f:	jne    0x14001804c
   140017f15:	mov    eax,DWORD PTR [rdi+0x20]
   140017f18:	sub    eax,0x19930520
   140017f1d:	cmp    eax,0x2
   140017f20:	ja     0x14001804c
   140017f26:	cmp    QWORD PTR [rdi+0x30],r12
   140017f2a:	jne    0x14001804c
   140017f30:	call   0x140017170
   140017f35:	cmp    QWORD PTR [rax+0xf0],r12
   140017f3c:	je     0x14001826b
   140017f42:	call   0x140017170
   140017f47:	mov    rdi,QWORD PTR [rax+0xf0]
   140017f4e:	call   0x140017170
   140017f53:	mov    rcx,QWORD PTR [rdi+0x38]
   140017f57:	mov    r14,QWORD PTR [rax+0xf8]
   140017f5e:	mov    BYTE PTR [rbp+0x47],0x1
   140017f62:	mov    QWORD PTR [rbp+0x57],r14
   140017f66:	call   0x1400148dc
   140017f6b:	mov    edx,0x1
   140017f70:	mov    rcx,rdi
   140017f73:	call   0x14001dc00
   140017f78:	test   eax,eax
   140017f7a:	jne    0x140017f81
   140017f7c:	call   0x1400191e4
   140017f81:	cmp    DWORD PTR [rdi],0xe06d7363
   140017f87:	jne    0x140017fa7
   140017f89:	cmp    DWORD PTR [rdi+0x18],0x4
   140017f8d:	jne    0x140017fa7
   140017f8f:	mov    eax,DWORD PTR [rdi+0x20]
   140017f92:	sub    eax,0x19930520
   140017f97:	cmp    eax,0x2
   140017f9a:	ja     0x140017fa7
   140017f9c:	cmp    QWORD PTR [rdi+0x30],r12
   140017fa0:	jne    0x140017fa7
   140017fa2:	call   0x1400191e4
   140017fa7:	call   0x140017170
   140017fac:	cmp    QWORD PTR [rax+0x108],r12
   140017fb3:	je     0x14001804c
   140017fb9:	call   0x140017170
   140017fbe:	mov    r14,QWORD PTR [rax+0x108]
   140017fc5:	call   0x140017170
   140017fca:	mov    rdx,r14
   140017fcd:	mov    rcx,rdi
   140017fd0:	mov    QWORD PTR [rax+0x108],r12
   140017fd7:	call   0x140018570
   140017fdc:	test   al,al
   140017fde:	jne    0x140018048
   140017fe0:	mov    r15d,r12d
   140017fe3:	cmp    DWORD PTR [r14],r12d
   140017fe6:	jle    0x1400182be
   140017fec:	mov    rsi,r12
   140017fef:	call   0x14001485c
   140017ff4:	movsxd rcx,DWORD PTR [r14+0x4]
   140017ff8:	add    rax,rsi
   140017ffb:	cmp    DWORD PTR [rcx+rax*1+0x4],r12d
   140018000:	je     0x14001801d
   140018002:	call   0x14001485c
   140018007:	movsxd rcx,DWORD PTR [r14+0x4]
   14001800b:	add    rax,rsi
   14001800e:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140018013:	call   0x14001485c
   140018018:	add    rax,rbx
   14001801b:	jmp    0x140018020
   14001801d:	mov    rax,r12
   140018020:	lea    rdx,[rip+0x209b1]        # 0x1400389d8
   140018027:	mov    rcx,rax
   14001802a:	call   0x14001385c
   14001802f:	test   al,al
   140018031:	jne    0x1400182c4
   140018037:	inc    r15d
   14001803a:	add    rsi,0x14
   14001803e:	cmp    r15d,DWORD PTR [r14]
   140018041:	jl     0x140017fef
   140018043:	jmp    0x1400182be
   140018048:	mov    r14,QWORD PTR [rbp+0x57]
   14001804c:	cmp    DWORD PTR [rdi],0xe06d7363
   140018052:	jne    0x140018286
   140018058:	cmp    DWORD PTR [rdi+0x18],0x4
   14001805c:	jne    0x140018286
   140018062:	mov    eax,DWORD PTR [rdi+0x20]
   140018065:	sub    eax,0x19930520
   14001806a:	cmp    eax,0x2
   14001806d:	ja     0x140018286
   140018073:	cmp    DWORD PTR [rbx+0xc],r12d
   140018077:	jbe    0x1400181cb
   14001807d:	mov    r8d,DWORD PTR [rbp+0x77]
   140018081:	lea    rax,[rbp-0x41]
   140018085:	mov    QWORD PTR [rsp+0x30],r15
   14001808a:	mov    QWORD PTR [rsp+0x28],rax
   14001808f:	lea    rax,[rbp-0x45]
   140018093:	mov    r9d,esi
   140018096:	mov    rdx,rbx
   140018099:	mov    rcx,r13
   14001809c:	mov    QWORD PTR [rsp+0x20],rax
   1400180a1:	call   0x140014500
   1400180a6:	mov    ecx,DWORD PTR [rbp-0x45]
   1400180a9:	mov    edx,DWORD PTR [rbp-0x41]
   1400180ac:	cmp    ecx,edx
   1400180ae:	jae    0x1400181cb
   1400180b4:	lea    r14,[rax+0x10]
   1400180b8:	cmp    DWORD PTR [r14-0x10],esi
   1400180bc:	jg     0x1400181ad
   1400180c2:	cmp    esi,DWORD PTR [r14-0xc]
   1400180c6:	jg     0x1400181ad
   1400180cc:	call   0x14001485c
   1400180d1:	movsxd r12,DWORD PTR [r14]
   1400180d4:	add    r12,rax
   1400180d7:	mov    eax,DWORD PTR [r14-0x4]
   1400180db:	mov    DWORD PTR [rbp-0x3d],eax
   1400180de:	test   eax,eax
   1400180e0:	jle    0x1400181a7
   1400180e6:	call   0x140014874
   1400180eb:	mov    rcx,QWORD PTR [rdi+0x30]
   1400180ef:	movsxd rdx,DWORD PTR [rcx+0xc]
   1400180f3:	add    rax,0x4
   1400180f7:	add    rax,rdx
   1400180fa:	mov    QWORD PTR [rbp-0x31],rax
   1400180fe:	call   0x140014874
   140018103:	mov    rcx,QWORD PTR [rdi+0x30]
   140018107:	movsxd rdx,DWORD PTR [rcx+0xc]
   14001810b:	mov    ecx,DWORD PTR [rax+rdx*1]
   14001810e:	mov    DWORD PTR [rbp-0x39],ecx
   140018111:	test   ecx,ecx
   140018113:	jle    0x14001814c
   140018115:	call   0x140014874
   14001811a:	mov    rcx,QWORD PTR [rbp-0x31]
   14001811e:	mov    r8,QWORD PTR [rdi+0x30]
   140018122:	movsxd rcx,DWORD PTR [rcx]
   140018125:	add    rax,rcx
   140018128:	mov    rcx,r12
   14001812b:	mov    rdx,rax
   14001812e:	mov    QWORD PTR [rbp-0x29],rax
   140018132:	call   0x140018f84
   140018137:	test   eax,eax
   140018139:	jne    0x140018157
   14001813b:	mov    eax,DWORD PTR [rbp-0x39]
   14001813e:	add    QWORD PTR [rbp-0x31],0x4
   140018143:	dec    eax
   140018145:	mov    DWORD PTR [rbp-0x39],eax
   140018148:	test   eax,eax
   14001814a:	jg     0x140018115
   14001814c:	mov    eax,DWORD PTR [rbp-0x3d]
   14001814f:	dec    eax
   140018151:	add    r12,0x14
   140018155:	jmp    0x1400180db
   140018157:	mov    al,BYTE PTR [rbp+0x6f]
   14001815a:	mov    r8,QWORD PTR [rbp+0x57]
   14001815e:	mov    r9,r15
   140018161:	mov    BYTE PTR [rsp+0x58],al
   140018165:	mov    al,BYTE PTR [rbp+0x47]
   140018168:	mov    rdx,r13
   14001816b:	mov    BYTE PTR [rsp+0x50],al
   14001816f:	mov    rax,QWORD PTR [rbp+0x7f]
   140018173:	mov    rcx,rdi
   140018176:	mov    QWORD PTR [rsp+0x48],rax
   14001817b:	mov    eax,DWORD PTR [rbp+0x77]
   14001817e:	mov    BYTE PTR [rbp-0x49],0x1
   140018182:	mov    DWORD PTR [rsp+0x40],eax
   140018186:	lea    rax,[r14-0x10]
   14001818a:	mov    QWORD PTR [rsp+0x38],rax
   14001818f:	mov    rax,QWORD PTR [rbp-0x29]
   140018193:	mov    QWORD PTR [rsp+0x30],rax
   140018198:	mov    QWORD PTR [rsp+0x28],r12
   14001819d:	mov    QWORD PTR [rsp+0x20],rbx
   1400181a2:	call   0x140017d90
   1400181a7:	mov    edx,DWORD PTR [rbp-0x41]
   1400181aa:	mov    ecx,DWORD PTR [rbp-0x45]
   1400181ad:	inc    ecx
   1400181af:	add    r14,0x14
   1400181b3:	mov    DWORD PTR [rbp-0x45],ecx
   1400181b6:	cmp    ecx,edx
   1400181b8:	jb     0x1400180b8
   1400181be:	xor    r12d,r12d
   1400181c1:	cmp    BYTE PTR [rbp-0x49],r12b
   1400181c5:	jne    0x140018258
   1400181cb:	mov    eax,DWORD PTR [rbx]
   1400181cd:	and    eax,0x1fffffff
   1400181d2:	cmp    eax,0x19930521
   1400181d7:	jb     0x140018258
   1400181d9:	mov    esi,DWORD PTR [rbx+0x20]
   1400181dc:	test   esi,esi
   1400181de:	je     0x1400181ed
   1400181e0:	movsxd rsi,esi
   1400181e3:	call   0x14001485c
   1400181e8:	add    rax,rsi
   1400181eb:	jmp    0x1400181f0
   1400181ed:	mov    rax,r12
   1400181f0:	test   rax,rax
   1400181f3:	je     0x140018258
   1400181f5:	test   esi,esi
   1400181f7:	je     0x14001820a
   1400181f9:	call   0x14001485c
   1400181fe:	mov    rdx,rax
   140018201:	movsxd rax,DWORD PTR [rbx+0x20]
   140018205:	add    rdx,rax
   140018208:	jmp    0x14001820d
   14001820a:	mov    rdx,r12
   14001820d:	mov    rcx,rdi
   140018210:	call   0x140018570
   140018215:	test   al,al
   140018217:	jne    0x140018258
   140018219:	lea    r9,[rbp+0x47]
   14001821d:	mov    r8,rbx
   140018220:	mov    rdx,r15
   140018223:	mov    rcx,r13
   140018226:	call   0x140014434
   14001822b:	mov    cl,BYTE PTR [rbp+0x6f]
   14001822e:	mov    r8,QWORD PTR [rbp+0x57]
   140018232:	mov    BYTE PTR [rsp+0x40],cl
   140018236:	mov    QWORD PTR [rsp+0x38],r15
   14001823b:	mov    QWORD PTR [rsp+0x30],rbx
   140018240:	or     DWORD PTR [rsp+0x28],0xffffffff
   140018245:	mov    r9,rax
   140018248:	mov    rdx,rdi
   14001824b:	mov    rcx,r13
   14001824e:	mov    QWORD PTR [rsp+0x20],r12
   140018253:	call   0x1400148f8
   140018258:	call   0x140017170
   14001825d:	cmp    QWORD PTR [rax+0x108],r12
   140018264:	je     0x14001826b
   140018266:	call   0x1400191e4
   14001826b:	mov    rbx,QWORD PTR [rsp+0xf8]
   140018273:	add    rsp,0xb0
   14001827a:	pop    r15
   14001827c:	pop    r14
   14001827e:	pop    r13
   140018280:	pop    r12
   140018282:	pop    rdi
   140018283:	pop    rsi
   140018284:	pop    rbp
   140018285:	ret    
   140018286:	cmp    DWORD PTR [rbx+0xc],r12d
   14001828a:	jbe    0x140018258
   14001828c:	cmp    BYTE PTR [rbp+0x6f],r12b
   140018290:	jne    0x140018302
   140018292:	mov    rax,QWORD PTR [rbp+0x7f]
   140018296:	mov    r9,r15
   140018299:	mov    r8,r14
   14001829c:	mov    QWORD PTR [rsp+0x38],rax
   1400182a1:	mov    eax,DWORD PTR [rbp+0x77]
   1400182a4:	mov    rdx,r13
   1400182a7:	mov    DWORD PTR [rsp+0x30],eax
   1400182ab:	mov    rcx,rdi
   1400182ae:	mov    DWORD PTR [rsp+0x28],esi
   1400182b2:	mov    QWORD PTR [rsp+0x20],rbx
   1400182b7:	call   0x140018308
   1400182bc:	jmp    0x140018258
   1400182be:	call   0x140019204
   1400182c3:	int3   
   1400182c4:	mov    dl,0x1
   1400182c6:	mov    rcx,rdi
   1400182c9:	call   0x140017cb0
   1400182ce:	lea    rax,[rip+0x11c9b]        # 0x140029f70
   1400182d5:	lea    rdx,[rbp+0x47]
   1400182d9:	lea    rcx,[rbp-0x19]
   1400182dd:	mov    QWORD PTR [rbp+0x47],rax
   1400182e1:	call   0x1400153d8
   1400182e6:	lea    rax,[rip+0x11c73]        # 0x140029f60
   1400182ed:	lea    rdx,[rip+0x1d1dc]        # 0x1400354d0
   1400182f4:	lea    rcx,[rbp-0x19]
   1400182f8:	mov    QWORD PTR [rbp-0x19],rax
   1400182fc:	call   0x14001436c
   140018301:	int3   
   140018302:	call   0x140019204
   140018307:	int3   
   140018308:	mov    QWORD PTR [rsp+0x10],rbx
   14001830d:	mov    QWORD PTR [rsp+0x18],r8
   140018312:	push   rbp
   140018313:	push   rsi
   140018314:	push   rdi
   140018315:	push   r12
   140018317:	push   r13
   140018319:	push   r14
   14001831b:	push   r15
   14001831d:	sub    rsp,0x70
   140018321:	cmp    DWORD PTR [rcx],0x80000003
   140018327:	mov    r15,r9
   14001832a:	mov    rdi,r8
   14001832d:	mov    r12,rdx
   140018330:	mov    rsi,rcx
   140018333:	je     0x140018555
   140018339:	call   0x140017170
   14001833e:	mov    rbp,QWORD PTR [rsp+0xd0]
   140018346:	cmp    QWORD PTR [rax+0xe0],0x0
   14001834e:	je     0x1400183b1
   140018350:	xor    ecx,ecx
   140018352:	call   QWORD PTR [rip+0xeeb8]        # 0x140027210
   140018358:	mov    rbx,rax
   14001835b:	call   0x140017170
   140018360:	cmp    QWORD PTR [rax+0xe0],rbx
   140018367:	je     0x1400183b1
   140018369:	cmp    DWORD PTR [rsi],0xe0434f4d
   14001836f:	je     0x1400183b1
   140018371:	cmp    DWORD PTR [rsi],0xe0434352
   140018377:	mov    ebx,DWORD PTR [rsp+0xe0]
   14001837e:	je     0x1400183b8
   140018380:	mov    rax,QWORD PTR [rsp+0xe8]
   140018388:	mov    r9,r15
   14001838b:	mov    r8,rdi
   14001838e:	mov    QWORD PTR [rsp+0x30],rax
   140018393:	mov    rdx,r12
   140018396:	mov    rcx,rsi
   140018399:	mov    DWORD PTR [rsp+0x28],ebx
   14001839d:	mov    QWORD PTR [rsp+0x20],rbp
   1400183a2:	call   0x140014764
   1400183a7:	test   eax,eax
   1400183a9:	jne    0x140018555
   1400183af:	jmp    0x1400183b8
   1400183b1:	mov    ebx,DWORD PTR [rsp+0xe0]
   1400183b8:	cmp    DWORD PTR [rbp+0xc],0x0
   1400183bc:	jne    0x1400183c3
   1400183be:	call   0x1400191e4
   1400183c3:	mov    r14d,DWORD PTR [rsp+0xd8]
   1400183cb:	lea    rax,[rsp+0x60]
   1400183d0:	mov    QWORD PTR [rsp+0x30],r15
   1400183d5:	mov    QWORD PTR [rsp+0x28],rax
   1400183da:	lea    rax,[rsp+0xb0]
   1400183e2:	mov    r8d,ebx
   1400183e5:	mov    r9d,r14d
   1400183e8:	mov    rdx,rbp
   1400183eb:	mov    rcx,r12
   1400183ee:	mov    QWORD PTR [rsp+0x20],rax
   1400183f3:	call   0x140014500
   1400183f8:	mov    ecx,DWORD PTR [rsp+0xb0]
   1400183ff:	cmp    ecx,DWORD PTR [rsp+0x60]
   140018403:	jae    0x140018555
   140018409:	lea    rdi,[rax+0xc]
   14001840d:	lea    r13,[rdi-0xc]
   140018411:	cmp    r14d,DWORD PTR [r13+0x0]
   140018415:	jl     0x14001853e
   14001841b:	cmp    r14d,DWORD PTR [rdi-0x8]
   14001841f:	jg     0x14001853e
   140018425:	call   0x14001485c
   14001842a:	movsxd rcx,DWORD PTR [rdi]
   14001842d:	lea    rdx,[rcx+rcx*4]
   140018431:	movsxd rcx,DWORD PTR [rdi+0x4]
   140018435:	lea    rdx,[rcx+rdx*4]
   140018439:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14001843e:	je     0x140018463
   140018440:	call   0x14001485c
   140018445:	movsxd rcx,DWORD PTR [rdi]
   140018448:	lea    rdx,[rcx+rcx*4]
   14001844c:	movsxd rcx,DWORD PTR [rdi+0x4]
   140018450:	lea    rdx,[rcx+rdx*4]
   140018454:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140018459:	call   0x14001485c
   14001845e:	add    rax,rbx
   140018461:	jmp    0x140018465
   140018463:	xor    eax,eax
   140018465:	test   rax,rax
   140018468:	je     0x1400184b4
   14001846a:	call   0x14001485c
   14001846f:	movsxd rcx,DWORD PTR [rdi]
   140018472:	lea    rdx,[rcx+rcx*4]
   140018476:	movsxd rcx,DWORD PTR [rdi+0x4]
   14001847a:	lea    rdx,[rcx+rdx*4]
   14001847e:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   140018483:	je     0x1400184a8
   140018485:	call   0x14001485c
   14001848a:	movsxd rcx,DWORD PTR [rdi]
   14001848d:	lea    rdx,[rcx+rcx*4]
   140018491:	movsxd rcx,DWORD PTR [rdi+0x4]
   140018495:	lea    rdx,[rcx+rdx*4]
   140018499:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14001849e:	call   0x14001485c
   1400184a3:	add    rax,rbx
   1400184a6:	jmp    0x1400184aa
   1400184a8:	xor    eax,eax
   1400184aa:	cmp    BYTE PTR [rax+0x10],0x0
   1400184ae:	jne    0x140018537
   1400184b4:	call   0x14001485c
   1400184b9:	movsxd rcx,DWORD PTR [rdi]
   1400184bc:	lea    rdx,[rcx+rcx*4]
   1400184c0:	movsxd rcx,DWORD PTR [rdi+0x4]
   1400184c4:	lea    rdx,[rcx+rdx*4]
   1400184c8:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   1400184cd:	jne    0x140018537
   1400184cf:	call   0x14001485c
   1400184d4:	mov    ecx,DWORD PTR [rdi]
   1400184d6:	mov    r8,QWORD PTR [rsp+0xc0]
   1400184de:	mov    BYTE PTR [rsp+0x58],0x0
   1400184e3:	mov    BYTE PTR [rsp+0x50],0x1
   1400184e8:	dec    ecx
   1400184ea:	movsxd rcx,ecx
   1400184ed:	mov    r9,r15
   1400184f0:	lea    rdx,[rcx+rcx*4]
   1400184f4:	lea    rcx,[rax+rdx*4]
   1400184f8:	movsxd rax,DWORD PTR [rdi+0x4]
   1400184fc:	mov    rdx,r12
   1400184ff:	add    rcx,rax
   140018502:	mov    rax,QWORD PTR [rsp+0xe8]
   14001850a:	mov    QWORD PTR [rsp+0x48],rax
   14001850f:	mov    eax,DWORD PTR [rsp+0xe0]
   140018516:	mov    DWORD PTR [rsp+0x40],eax
   14001851a:	mov    QWORD PTR [rsp+0x38],r13
   14001851f:	and    QWORD PTR [rsp+0x30],0x0
   140018525:	mov    QWORD PTR [rsp+0x28],rcx
   14001852a:	mov    rcx,rsi
   14001852d:	mov    QWORD PTR [rsp+0x20],rbp
   140018532:	call   0x140017d90
   140018537:	mov    ecx,DWORD PTR [rsp+0xb0]
   14001853e:	inc    ecx
   140018540:	add    rdi,0x14
   140018544:	mov    DWORD PTR [rsp+0xb0],ecx
   14001854b:	cmp    ecx,DWORD PTR [rsp+0x60]
   14001854f:	jb     0x14001840d
   140018555:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001855d:	add    rsp,0x70
   140018561:	pop    r15
   140018563:	pop    r14
   140018565:	pop    r13
   140018567:	pop    r12
   140018569:	pop    rdi
   14001856a:	pop    rsi
   14001856b:	pop    rbp
   14001856c:	ret    
   14001856d:	int3   
   14001856e:	int3   
   14001856f:	int3   
   140018570:	mov    QWORD PTR [rsp+0x8],rbx
   140018575:	mov    QWORD PTR [rsp+0x10],rbp
   14001857a:	mov    QWORD PTR [rsp+0x18],rsi
   14001857f:	push   rdi
   140018580:	push   r12
   140018582:	push   r13
   140018584:	push   r14
   140018586:	push   r15
   140018588:	sub    rsp,0x20
   14001858c:	mov    rsi,rdx
   14001858f:	mov    r13,rcx
   140018592:	test   rdx,rdx
   140018595:	je     0x14001863c
   14001859b:	xor    edi,edi
   14001859d:	xor    r14b,r14b
   1400185a0:	cmp    DWORD PTR [rdx],edi
   1400185a2:	jle    0x14001861c
   1400185a4:	call   0x140014874
   1400185a9:	mov    rdx,rax
   1400185ac:	mov    rax,QWORD PTR [r13+0x30]
   1400185b0:	movsxd r15,DWORD PTR [rax+0xc]
   1400185b4:	add    r15,0x4
   1400185b8:	add    r15,rdx
   1400185bb:	call   0x140014874
   1400185c0:	mov    rdx,rax
   1400185c3:	mov    rax,QWORD PTR [r13+0x30]
   1400185c7:	movsxd rcx,DWORD PTR [rax+0xc]
   1400185cb:	mov    ebp,DWORD PTR [rdx+rcx*1]
   1400185ce:	test   ebp,ebp
   1400185d0:	jle    0x140018616
   1400185d2:	movsxd rax,edi
   1400185d5:	lea    r12,[rax+rax*4]
   1400185d9:	call   0x140014874
   1400185de:	mov    rbx,rax
   1400185e1:	movsxd rax,DWORD PTR [r15]
   1400185e4:	add    rbx,rax
   1400185e7:	call   0x14001485c
   1400185ec:	movsxd rcx,DWORD PTR [rsi+0x4]
   1400185f0:	mov    r8,QWORD PTR [r13+0x30]
   1400185f4:	lea    rax,[rax+r12*4]
   1400185f8:	mov    rdx,rbx
   1400185fb:	add    rcx,rax
   1400185fe:	call   0x140018f84
   140018603:	test   eax,eax
   140018605:	jne    0x140018613
   140018607:	dec    ebp
   140018609:	add    r15,0x4
   14001860d:	test   ebp,ebp
   14001860f:	jg     0x1400185d9
   140018611:	jmp    0x140018616
   140018613:	mov    r14b,0x1
   140018616:	inc    edi
   140018618:	cmp    edi,DWORD PTR [rsi]
   14001861a:	jl     0x1400185a4
   14001861c:	mov    rbx,QWORD PTR [rsp+0x50]
   140018621:	mov    rbp,QWORD PTR [rsp+0x58]
   140018626:	mov    rsi,QWORD PTR [rsp+0x60]
   14001862b:	mov    al,r14b
   14001862e:	add    rsp,0x20
   140018632:	pop    r15
   140018634:	pop    r14
   140018636:	pop    r13
   140018638:	pop    r12
   14001863a:	pop    rdi
   14001863b:	ret    
   14001863c:	call   0x1400191e4
   140018641:	call   0x140019204
   140018646:	int3   
   140018647:	int3   
   140018648:	movsxd rax,DWORD PTR [rdx]
   14001864b:	add    rax,rcx
   14001864e:	cmp    DWORD PTR [rdx+0x4],0x0
   140018652:	jl     0x14001866a
   140018654:	movsxd r9,DWORD PTR [rdx+0x4]
   140018658:	movsxd rdx,DWORD PTR [rdx+0x8]
   14001865c:	mov    rcx,QWORD PTR [r9+rcx*1]
   140018660:	movsxd r8,DWORD PTR [rdx+rcx*1]
   140018664:	add    r8,r9
   140018667:	add    rax,r8
   14001866a:	ret    
   14001866b:	int3   
   14001866c:	mov    QWORD PTR [rsp+0x8],rbx
   140018671:	mov    QWORD PTR [rsp+0x10],rsi
   140018676:	mov    QWORD PTR [rsp+0x18],rdi
   14001867b:	push   r14
   14001867d:	sub    rsp,0x20
   140018681:	mov    rdi,r9
   140018684:	mov    r14,rcx
   140018687:	test   DWORD PTR [r8],0x80000000
   14001868e:	je     0x140018695
   140018690:	mov    rsi,rdx
   140018693:	jmp    0x14001869c
   140018695:	movsxd rsi,DWORD PTR [r8+0x8]
   140018699:	add    rsi,QWORD PTR [rdx]
   14001869c:	call   0x140018724
   1400186a1:	dec    eax
   1400186a3:	je     0x1400186dc
   1400186a5:	dec    eax
   1400186a7:	jne    0x140018704
   1400186a9:	xor    ebx,ebx
   1400186ab:	cmp    DWORD PTR [rdi+0x18],ebx
   1400186ae:	je     0x1400186bf
   1400186b0:	call   0x140014874
   1400186b5:	mov    rbx,rax
   1400186b8:	movsxd rax,DWORD PTR [rdi+0x18]
   1400186bc:	add    rbx,rax
   1400186bf:	lea    rdx,[rdi+0x8]
   1400186c3:	mov    rcx,QWORD PTR [r14+0x28]
   1400186c7:	call   0x140018648
   1400186cc:	mov    rdx,rax
   1400186cf:	mov    r8d,0x1
   1400186d5:	mov    rcx,rsi
   1400186d8:	call   rbx
   1400186da:	jmp    0x140018704
   1400186dc:	xor    ebx,ebx
   1400186de:	cmp    DWORD PTR [rdi+0x18],ebx
   1400186e1:	je     0x1400186ef
   1400186e3:	call   0x140014874
   1400186e8:	movsxd rbx,DWORD PTR [rdi+0x18]
   1400186ec:	add    rbx,rax
   1400186ef:	lea    rdx,[rdi+0x8]
   1400186f3:	mov    rcx,QWORD PTR [r14+0x28]
   1400186f7:	call   0x140018648
   1400186fc:	mov    rdx,rax
   1400186ff:	mov    rcx,rsi
   140018702:	call   rbx
   140018704:	jmp    0x14001870c
   140018706:	call   0x140019204
   14001870b:	nop
   14001870c:	mov    rbx,QWORD PTR [rsp+0x30]
   140018711:	mov    rsi,QWORD PTR [rsp+0x38]
   140018716:	mov    rdi,QWORD PTR [rsp+0x40]
   14001871b:	add    rsp,0x20
   14001871f:	pop    r14
   140018721:	ret    
   140018722:	int3   
   140018723:	int3   
   140018724:	mov    QWORD PTR [rsp+0x8],rbx
   140018729:	mov    QWORD PTR [rsp+0x10],rsi
   14001872e:	mov    QWORD PTR [rsp+0x18],rdi
   140018733:	push   r13
   140018735:	push   r14
   140018737:	push   r15
   140018739:	sub    rsp,0x30
   14001873d:	mov    r14,r9
   140018740:	mov    rbx,r8
   140018743:	mov    rsi,rdx
   140018746:	mov    r13,rcx
   140018749:	xor    edi,edi
   14001874b:	mov    r15d,DWORD PTR [r8+0x4]
   14001874f:	test   r15d,r15d
   140018752:	je     0x140018762
   140018754:	movsxd r15,r15d
   140018757:	call   0x14001485c
   14001875c:	lea    rdx,[r15+rax*1]
   140018760:	jmp    0x140018765
   140018762:	mov    rdx,rdi
   140018765:	test   rdx,rdx
   140018768:	je     0x140018957
   14001876e:	test   r15d,r15d
   140018771:	je     0x140018784
   140018773:	call   0x14001485c
   140018778:	mov    rcx,rax
   14001877b:	movsxd rax,DWORD PTR [rbx+0x4]
   14001877f:	add    rcx,rax
   140018782:	jmp    0x140018787
   140018784:	mov    rcx,rdi
   140018787:	cmp    BYTE PTR [rcx+0x10],dil
   14001878b:	je     0x140018957
   140018791:	cmp    DWORD PTR [rbx+0x8],edi
   140018794:	jne    0x1400187a2
   140018796:	test   DWORD PTR [rbx],0x80000000
   14001879c:	je     0x140018957
   1400187a2:	mov    ecx,DWORD PTR [rbx]
   1400187a4:	test   ecx,ecx
   1400187a6:	js     0x1400187b2
   1400187a8:	movsxd rax,DWORD PTR [rbx+0x8]
   1400187ac:	add    rax,QWORD PTR [rsi]
   1400187af:	mov    rsi,rax
   1400187b2:	test   cl,cl
   1400187b4:	jns    0x14001880d
   1400187b6:	test   BYTE PTR [r14],0x10
   1400187ba:	je     0x14001880d
   1400187bc:	mov    rax,QWORD PTR [rip+0x2171d]        # 0x140039ee0
   1400187c3:	test   rax,rax
   1400187c6:	je     0x14001880d
   1400187c8:	call   rax
   1400187ca:	mov    r15,rax
   1400187cd:	mov    ebx,0x1
   1400187d2:	mov    edx,ebx
   1400187d4:	mov    rcx,rax
   1400187d7:	call   0x14001dc00
   1400187dc:	test   eax,eax
   1400187de:	je     0x140018947
   1400187e4:	mov    edx,ebx
   1400187e6:	mov    rcx,rsi
   1400187e9:	call   0x14001dc00
   1400187ee:	test   eax,eax
   1400187f0:	je     0x140018947
   1400187f6:	mov    QWORD PTR [rsi],r15
   1400187f9:	mov    rcx,r15
   1400187fc:	lea    rdx,[r14+0x8]
   140018800:	call   0x140018648
   140018805:	mov    QWORD PTR [rsi],rax
   140018808:	jmp    0x14001894d
   14001880d:	mov    ebx,0x1
   140018812:	test   cl,0x8
   140018815:	je     0x140018845
   140018817:	mov    edx,ebx
   140018819:	mov    rcx,QWORD PTR [r13+0x28]
   14001881d:	call   0x14001dc00
   140018822:	test   eax,eax
   140018824:	je     0x140018947
   14001882a:	mov    edx,ebx
   14001882c:	mov    rcx,rsi
   14001882f:	call   0x14001dc00
   140018834:	test   eax,eax
   140018836:	je     0x140018947
   14001883c:	mov    rcx,QWORD PTR [r13+0x28]
   140018840:	mov    QWORD PTR [rsi],rcx
   140018843:	jmp    0x1400187fc
   140018845:	test   BYTE PTR [r14],bl
   140018848:	je     0x14001889b
   14001884a:	mov    edx,ebx
   14001884c:	mov    rcx,QWORD PTR [r13+0x28]
   140018850:	call   0x14001dc00
   140018855:	test   eax,eax
   140018857:	je     0x140018947
   14001885d:	mov    edx,ebx
   14001885f:	mov    rcx,rsi
   140018862:	call   0x14001dc00
   140018867:	test   eax,eax
   140018869:	je     0x140018947
   14001886f:	movsxd r8,DWORD PTR [r14+0x14]
   140018873:	mov    rdx,QWORD PTR [r13+0x28]
   140018877:	mov    rcx,rsi
   14001887a:	call   0x1400130d0
   14001887f:	cmp    DWORD PTR [r14+0x14],0x8
   140018884:	jne    0x14001894d
   14001888a:	cmp    QWORD PTR [rsi],rdi
   14001888d:	je     0x14001894d
   140018893:	mov    rcx,QWORD PTR [rsi]
   140018896:	jmp    0x1400187fc
   14001889b:	cmp    DWORD PTR [r14+0x18],edi
   14001889f:	je     0x1400188b2
   1400188a1:	call   0x140014874
   1400188a6:	mov    rcx,rax
   1400188a9:	movsxd rax,DWORD PTR [r14+0x18]
   1400188ad:	add    rcx,rax
   1400188b0:	jmp    0x1400188b5
   1400188b2:	mov    rcx,rdi
   1400188b5:	mov    edx,ebx
   1400188b7:	test   rcx,rcx
   1400188ba:	mov    rcx,QWORD PTR [r13+0x28]
   1400188be:	jne    0x1400188f8
   1400188c0:	call   0x14001dc00
   1400188c5:	test   eax,eax
   1400188c7:	je     0x140018947
   1400188c9:	mov    edx,ebx
   1400188cb:	mov    rcx,rsi
   1400188ce:	call   0x14001dc00
   1400188d3:	test   eax,eax
   1400188d5:	je     0x140018947
   1400188d7:	movsxd rbx,DWORD PTR [r14+0x14]
   1400188db:	lea    rdx,[r14+0x8]
   1400188df:	mov    rcx,QWORD PTR [r13+0x28]
   1400188e3:	call   0x140018648
   1400188e8:	mov    rdx,rax
   1400188eb:	mov    r8,rbx
   1400188ee:	mov    rcx,rsi
   1400188f1:	call   0x1400130d0
   1400188f6:	jmp    0x14001894d
   1400188f8:	call   0x14001dc00
   1400188fd:	test   eax,eax
   1400188ff:	je     0x140018947
   140018901:	mov    edx,ebx
   140018903:	mov    rcx,rsi
   140018906:	call   0x14001dc00
   14001890b:	test   eax,eax
   14001890d:	je     0x140018947
   14001890f:	cmp    DWORD PTR [r14+0x18],edi
   140018913:	je     0x140018926
   140018915:	call   0x140014874
   14001891a:	mov    rcx,rax
   14001891d:	movsxd rax,DWORD PTR [r14+0x18]
   140018921:	add    rcx,rax
   140018924:	jmp    0x140018929
   140018926:	mov    rcx,rdi
   140018929:	call   0x14001dc00
   14001892e:	test   eax,eax
   140018930:	je     0x140018947
   140018932:	mov    al,BYTE PTR [r14]
   140018935:	and    al,0x4
   140018937:	neg    al
   140018939:	sbb    ecx,ecx
   14001893b:	neg    ecx
   14001893d:	add    ecx,ebx
   14001893f:	mov    edi,ecx
   140018941:	mov    DWORD PTR [rsp+0x20],ecx
   140018945:	jmp    0x14001894d
   140018947:	call   0x1400191e4
   14001894c:	nop
   14001894d:	mov    eax,edi
   14001894f:	jmp    0x140018959
   140018951:	call   0x140019204
   140018956:	nop
   140018957:	xor    eax,eax
   140018959:	mov    rbx,QWORD PTR [rsp+0x50]
   14001895e:	mov    rsi,QWORD PTR [rsp+0x58]
   140018963:	mov    rdi,QWORD PTR [rsp+0x60]
   140018968:	add    rsp,0x30
   14001896c:	pop    r15
   14001896e:	pop    r14
   140018970:	pop    r13
   140018972:	ret    
   140018973:	int3   
   140018974:	rex push rbx
   140018976:	push   rsi
   140018977:	push   rdi
   140018978:	push   r12
   14001897a:	push   r13
   14001897c:	push   r14
   14001897e:	push   r15
   140018980:	sub    rsp,0x90
   140018987:	mov    rdi,rcx
   14001898a:	xor    r15d,r15d
   14001898d:	mov    DWORD PTR [rsp+0x20],r15d
   140018992:	and    DWORD PTR [rsp+0xd0],r15d
   14001899a:	and    QWORD PTR [rsp+0x40],r15
   14001899f:	and    QWORD PTR [rsp+0xe8],r15
   1400189a7:	call   0x140017170
   1400189ac:	mov    r13,QWORD PTR [rax+0xf8]
   1400189b3:	mov    QWORD PTR [rsp+0x50],r13
   1400189b8:	call   0x140017170
   1400189bd:	mov    rax,QWORD PTR [rax+0xf0]
   1400189c4:	mov    QWORD PTR [rsp+0xe0],rax
   1400189cc:	mov    rsi,QWORD PTR [rdi+0x50]
   1400189d0:	mov    QWORD PTR [rsp+0xd8],rsi
   1400189d8:	mov    rax,QWORD PTR [rdi+0x48]
   1400189dc:	mov    QWORD PTR [rsp+0x48],rax
   1400189e1:	mov    rbx,QWORD PTR [rdi+0x40]
   1400189e5:	mov    rax,QWORD PTR [rdi+0x30]
   1400189e9:	mov    QWORD PTR [rsp+0x58],rax
   1400189ee:	mov    r14,QWORD PTR [rdi+0x28]
   1400189f2:	mov    QWORD PTR [rsp+0x60],r14
   1400189f7:	call   0x140017170
   1400189fc:	mov    QWORD PTR [rax+0xf0],rsi
   140018a03:	call   0x140017170
   140018a08:	mov    QWORD PTR [rax+0xf8],rbx
   140018a0f:	call   0x140017170
   140018a14:	mov    rdx,QWORD PTR [rax+0xf0]
   140018a1b:	mov    rdx,QWORD PTR [rdx+0x28]
   140018a1f:	lea    rcx,[rsp+0x78]
   140018a24:	call   0x1400147b8
   140018a29:	mov    r12,rax
   140018a2c:	mov    QWORD PTR [rsp+0x38],rax
   140018a31:	cmp    QWORD PTR [rdi+0x58],r15
   140018a35:	je     0x140018a56
   140018a37:	mov    DWORD PTR [rsp+0xd0],0x1
   140018a42:	call   0x140017170
   140018a47:	mov    rcx,QWORD PTR [rax+0x138]
   140018a4e:	mov    QWORD PTR [rsp+0xe8],rcx
   140018a56:	mov    r8d,0x100
   140018a5c:	mov    rdx,r14
   140018a5f:	mov    rcx,QWORD PTR [rsp+0x58]
   140018a64:	call   0x14001dc20
   140018a69:	mov    rbx,rax
   140018a6c:	mov    QWORD PTR [rsp+0x40],rax
   140018a71:	mov    rdi,QWORD PTR [rsp+0xe0]
   140018a79:	jmp    0x140018af6
   140018a7b:	mov    DWORD PTR [rsp+0x20],0x1
   140018a83:	call   0x140017170
   140018a88:	and    DWORD PTR [rax+0x460],0x0
   140018a8f:	mov    rsi,QWORD PTR [rsp+0xd8]
   140018a97:	cmp    DWORD PTR [rsp+0xd0],0x0
   140018a9f:	je     0x140018ac2
   140018aa1:	mov    dl,0x1
   140018aa3:	mov    rcx,rsi
   140018aa6:	call   0x140017cb0
   140018aab:	mov    rax,QWORD PTR [rsp+0xe8]
   140018ab3:	lea    r9,[rax+0x20]
   140018ab7:	mov    r8d,DWORD PTR [rax+0x18]
   140018abb:	mov    edx,DWORD PTR [rax+0x4]
   140018abe:	mov    ecx,DWORD PTR [rax]
   140018ac0:	jmp    0x140018acf
   140018ac2:	lea    r9,[rsi+0x20]
   140018ac6:	mov    r8d,DWORD PTR [rsi+0x18]
   140018aca:	mov    edx,DWORD PTR [rsi+0x4]
   140018acd:	mov    ecx,DWORD PTR [rsi]
   140018acf:	call   QWORD PTR [rip+0xe613]        # 0x1400270e8
   140018ad5:	mov    r15d,DWORD PTR [rsp+0x20]
   140018ada:	mov    rbx,QWORD PTR [rsp+0x40]
   140018adf:	mov    r13,QWORD PTR [rsp+0x50]
   140018ae4:	mov    rdi,QWORD PTR [rsp+0xe0]
   140018aec:	mov    r14,QWORD PTR [rsp+0x60]
   140018af1:	mov    r12,QWORD PTR [rsp+0x38]
   140018af6:	mov    rcx,r12
   140018af9:	call   0x1400147fc
   140018afe:	test   r15d,r15d
   140018b01:	jne    0x140018b35
   140018b03:	cmp    DWORD PTR [rsi],0xe06d7363
   140018b09:	jne    0x140018b35
   140018b0b:	cmp    DWORD PTR [rsi+0x18],0x4
   140018b0f:	jne    0x140018b35
   140018b11:	mov    eax,DWORD PTR [rsi+0x20]
   140018b14:	sub    eax,0x19930520
   140018b19:	cmp    eax,0x2
   140018b1c:	ja     0x140018b35
   140018b1e:	mov    rcx,QWORD PTR [rsi+0x28]
   140018b22:	call   0x14001488c
   140018b27:	test   eax,eax
   140018b29:	je     0x140018b35
   140018b2b:	mov    dl,0x1
   140018b2d:	mov    rcx,rsi
   140018b30:	call   0x140017cb0
   140018b35:	call   0x140017170
   140018b3a:	mov    QWORD PTR [rax+0xf0],rdi
   140018b41:	call   0x140017170
   140018b46:	mov    QWORD PTR [rax+0xf8],r13
   140018b4d:	mov    rax,QWORD PTR [rsp+0x48]
   140018b52:	movsxd rcx,DWORD PTR [rax+0x1c]
   140018b56:	mov    rax,QWORD PTR [r14]
   140018b59:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   140018b61:	mov    rax,rbx
   140018b64:	add    rsp,0x90
   140018b6b:	pop    r15
   140018b6d:	pop    r14
   140018b6f:	pop    r13
   140018b71:	pop    r12
   140018b73:	pop    rdi
   140018b74:	pop    rsi
   140018b75:	pop    rbx
   140018b76:	ret    
   140018b77:	int3   
   140018b78:	sub    rsp,0x28
   140018b7c:	mov    rax,QWORD PTR [rcx]
   140018b7f:	cmp    DWORD PTR [rax],0xe0434352
   140018b85:	je     0x140018b99
   140018b87:	cmp    DWORD PTR [rax],0xe0434f4d
   140018b8d:	je     0x140018b99
   140018b8f:	cmp    DWORD PTR [rax],0xe06d7363
   140018b95:	jne    0x140018bb2
   140018b97:	jmp    0x140018bb9
   140018b99:	call   0x140017170
   140018b9e:	cmp    DWORD PTR [rax+0x100],0x0
   140018ba5:	jle    0x140018bb2
   140018ba7:	call   0x140017170
   140018bac:	dec    DWORD PTR [rax+0x100]
   140018bb2:	xor    eax,eax
   140018bb4:	add    rsp,0x28
   140018bb8:	ret    
   140018bb9:	call   0x140017170
   140018bbe:	and    DWORD PTR [rax+0x100],0x0
   140018bc5:	call   0x140019204
   140018bca:	int3   
   140018bcb:	int3   
   140018bcc:	mov    rax,rsp
   140018bcf:	mov    DWORD PTR [rax+0x20],r9d
   140018bd3:	mov    QWORD PTR [rax+0x18],r8
   140018bd7:	mov    QWORD PTR [rax+0x10],rdx
   140018bdb:	mov    QWORD PTR [rax+0x8],rcx
   140018bdf:	push   rbx
   140018be0:	push   rsi
   140018be1:	push   rdi
   140018be2:	push   r12
   140018be4:	push   r13
   140018be6:	push   r14
   140018be8:	push   r15
   140018bea:	sub    rsp,0x30
   140018bee:	mov    r12d,r9d
   140018bf1:	mov    rsi,r8
   140018bf4:	mov    r13,rdx
   140018bf7:	mov    r15,rcx
   140018bfa:	call   0x14001485c
   140018bff:	mov    QWORD PTR [rsp+0x28],rax
   140018c04:	mov    r8,rsi
   140018c07:	mov    rdx,r13
   140018c0a:	mov    rcx,r15
   140018c0d:	call   0x1400190b4
   140018c12:	mov    edi,eax
   140018c14:	call   0x140017170
   140018c19:	inc    DWORD PTR [rax+0x100]
   140018c1f:	cmp    edi,0xffffffff
   140018c22:	je     0x140018d15
   140018c28:	cmp    edi,r12d
   140018c2b:	jle    0x140018d15
   140018c31:	cmp    edi,0xffffffff
   140018c34:	jle    0x140018c3b
   140018c36:	cmp    edi,DWORD PTR [rsi+0x4]
   140018c39:	jl     0x140018c40
   140018c3b:	call   0x1400191e4
   140018c40:	movsxd r14,edi
   140018c43:	call   0x14001485c
   140018c48:	movsxd rcx,DWORD PTR [rsi+0x8]
   140018c4c:	lea    rax,[rax+r14*8]
   140018c50:	mov    edi,DWORD PTR [rcx+rax*1]
   140018c53:	mov    DWORD PTR [rsp+0x20],edi
   140018c57:	call   0x14001485c
   140018c5c:	movsxd rcx,DWORD PTR [rsi+0x8]
   140018c60:	lea    rax,[rax+r14*8]
   140018c64:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140018c69:	je     0x140018c87
   140018c6b:	call   0x14001485c
   140018c70:	movsxd rcx,DWORD PTR [rsi+0x8]
   140018c74:	lea    rax,[rax+r14*8]
   140018c78:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140018c7d:	call   0x14001485c
   140018c82:	add    rax,rbx
   140018c85:	jmp    0x140018c89
   140018c87:	xor    eax,eax
   140018c89:	test   rax,rax
   140018c8c:	je     0x140018cec
   140018c8e:	mov    r9d,edi
   140018c91:	mov    r8,rsi
   140018c94:	mov    rdx,r13
   140018c97:	mov    rcx,r15
   140018c9a:	call   0x140019108
   140018c9f:	call   0x14001485c
   140018ca4:	movsxd rcx,DWORD PTR [rsi+0x8]
   140018ca8:	lea    rax,[rax+r14*8]
   140018cac:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140018cb1:	je     0x140018ccf
   140018cb3:	call   0x14001485c
   140018cb8:	movsxd rcx,DWORD PTR [rsi+0x8]
   140018cbc:	lea    rax,[rax+r14*8]
   140018cc0:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140018cc5:	call   0x14001485c
   140018cca:	add    rax,rbx
   140018ccd:	jmp    0x140018cd1
   140018ccf:	xor    eax,eax
   140018cd1:	mov    r8d,0x103
   140018cd7:	mov    rdx,r15
   140018cda:	mov    rcx,rax
   140018cdd:	call   0x14001dc20
   140018ce2:	mov    rcx,QWORD PTR [rsp+0x28]
   140018ce7:	call   0x1400148c0
   140018cec:	jmp    0x140018d0c
   140018cee:	mov    r12d,DWORD PTR [rsp+0x88]
   140018cf6:	mov    rsi,QWORD PTR [rsp+0x80]
   140018cfe:	mov    r13,QWORD PTR [rsp+0x78]
   140018d03:	mov    r15,QWORD PTR [rsp+0x70]
   140018d08:	mov    edi,DWORD PTR [rsp+0x20]
   140018d0c:	mov    DWORD PTR [rsp+0x24],edi
   140018d10:	jmp    0x140018c1f
   140018d15:	call   0x140017170
   140018d1a:	cmp    DWORD PTR [rax+0x100],0x0
   140018d21:	jle    0x140018d2e
   140018d23:	call   0x140017170
   140018d28:	dec    DWORD PTR [rax+0x100]
   140018d2e:	cmp    edi,0xffffffff
   140018d31:	je     0x140018d3d
   140018d33:	cmp    edi,r12d
   140018d36:	jle    0x140018d3d
   140018d38:	call   0x1400191e4
   140018d3d:	mov    r9d,edi
   140018d40:	mov    r8,rsi
   140018d43:	mov    rdx,r13
   140018d46:	mov    rcx,r15
   140018d49:	call   0x140019108
   140018d4e:	add    rsp,0x30
   140018d52:	pop    r15
   140018d54:	pop    r14
   140018d56:	pop    r13
   140018d58:	pop    r12
   140018d5a:	pop    rdi
   140018d5b:	pop    rsi
   140018d5c:	pop    rbx
   140018d5d:	ret    
   140018d5e:	int3   
   140018d5f:	int3   
   140018d60:	mov    QWORD PTR [rsp+0x8],rbx
   140018d65:	mov    QWORD PTR [rsp+0x10],rbp
   140018d6a:	mov    QWORD PTR [rsp+0x18],rsi
   140018d6f:	push   rdi
   140018d70:	push   r12
   140018d72:	push   r14
   140018d74:	sub    rsp,0x40
   140018d78:	mov    rbp,r9
   140018d7b:	mov    r14,r8
   140018d7e:	mov    rsi,rdx
   140018d81:	mov    rbx,rcx
   140018d84:	call   0x140017170
   140018d89:	mov    rdi,QWORD PTR [rsp+0x80]
   140018d91:	cmp    DWORD PTR [rax+0x460],0x0
   140018d98:	mov    edx,0x1fffffff
   140018d9d:	mov    r8d,0x80000029
   140018da3:	mov    r9d,0x80000026
   140018da9:	mov    r12d,0x1
   140018daf:	jne    0x140018de9
   140018db1:	cmp    DWORD PTR [rbx],0xe06d7363
   140018db7:	je     0x140018de9
   140018db9:	cmp    DWORD PTR [rbx],r8d
   140018dbc:	jne    0x140018dce
   140018dbe:	cmp    DWORD PTR [rbx+0x18],0xf
   140018dc2:	jne    0x140018dce
   140018dc4:	cmp    QWORD PTR [rbx+0x60],0x19930520
   140018dcc:	je     0x140018de9
   140018dce:	cmp    DWORD PTR [rbx],r9d
   140018dd1:	je     0x140018de9
   140018dd3:	mov    ecx,DWORD PTR [rdi]
   140018dd5:	and    ecx,edx
   140018dd7:	cmp    ecx,0x19930522
   140018ddd:	jb     0x140018de9
   140018ddf:	test   BYTE PTR [rdi+0x24],r12b
   140018de3:	jne    0x140018f68
   140018de9:	mov    eax,DWORD PTR [rbx+0x4]
   140018dec:	test   al,0x66
   140018dee:	je     0x140018e86
   140018df4:	cmp    DWORD PTR [rdi+0x4],0x0
   140018df8:	je     0x140018f68
   140018dfe:	cmp    DWORD PTR [rsp+0x88],0x0
   140018e06:	jne    0x140018f68
   140018e0c:	and    eax,0x20
   140018e0f:	je     0x140018e4f
   140018e11:	cmp    DWORD PTR [rbx],r9d
   140018e14:	jne    0x140018e4f
   140018e16:	mov    r8,QWORD PTR [r14+0xf8]
   140018e1d:	mov    rdx,rbp
   140018e20:	mov    rcx,rdi
   140018e23:	call   0x140019158
   140018e28:	mov    ebx,eax
   140018e2a:	cmp    eax,0xffffffff
   140018e2d:	jl     0x140018e34
   140018e2f:	cmp    eax,DWORD PTR [rdi+0x4]
   140018e32:	jl     0x140018e39
   140018e34:	call   0x1400191e4
   140018e39:	mov    r9d,ebx
   140018e3c:	mov    rcx,rsi
   140018e3f:	mov    rdx,rbp
   140018e42:	mov    r8,rdi
   140018e45:	call   0x140018bcc
   140018e4a:	jmp    0x140018f68
   140018e4f:	test   eax,eax
   140018e51:	je     0x140018e73
   140018e53:	cmp    DWORD PTR [rbx],r8d
   140018e56:	jne    0x140018e73
   140018e58:	mov    esi,DWORD PTR [rbx+0x38]
   140018e5b:	cmp    esi,0xffffffff
   140018e5e:	jl     0x140018e65
   140018e60:	cmp    esi,DWORD PTR [rdi+0x4]
   140018e63:	jl     0x140018e6a
   140018e65:	call   0x1400191e4
   140018e6a:	mov    rcx,QWORD PTR [rbx+0x28]
   140018e6e:	mov    r9d,esi
   140018e71:	jmp    0x140018e3f
   140018e73:	mov    r8,rdi
   140018e76:	mov    rdx,rbp
   140018e79:	mov    rcx,rsi
   140018e7c:	call   0x14001462c
   140018e81:	jmp    0x140018f68
   140018e86:	cmp    DWORD PTR [rdi+0xc],0x0
   140018e8a:	jne    0x140018eba
   140018e8c:	mov    eax,DWORD PTR [rdi]
   140018e8e:	and    eax,edx
   140018e90:	cmp    eax,0x19930521
   140018e95:	jb     0x140018f68
   140018e9b:	cmp    DWORD PTR [rdi+0x20],0x0
   140018e9f:	je     0x140018eaf
   140018ea1:	call   0x14001485c
   140018ea6:	movsxd rcx,DWORD PTR [rdi+0x20]
   140018eaa:	add    rax,rcx
   140018ead:	jmp    0x140018eb1
   140018eaf:	xor    eax,eax
   140018eb1:	test   rax,rax
   140018eb4:	je     0x140018f68
   140018eba:	cmp    DWORD PTR [rbx],0xe06d7363
   140018ec0:	jne    0x140018f2f
   140018ec2:	cmp    DWORD PTR [rbx+0x18],0x3
   140018ec6:	jb     0x140018f2f
   140018ec8:	cmp    DWORD PTR [rbx+0x20],0x19930522
   140018ecf:	jbe    0x140018f2f
   140018ed1:	mov    rax,QWORD PTR [rbx+0x30]
   140018ed5:	cmp    DWORD PTR [rax+0x8],0x0
   140018ed9:	je     0x140018eed
   140018edb:	call   0x140014874
   140018ee0:	mov    rcx,QWORD PTR [rbx+0x30]
   140018ee4:	movsxd r10,DWORD PTR [rcx+0x8]
   140018ee8:	add    r10,rax
   140018eeb:	jmp    0x140018ef0
   140018eed:	xor    r10d,r10d
   140018ef0:	test   r10,r10
   140018ef3:	je     0x140018f2f
   140018ef5:	movzx  eax,BYTE PTR [rsp+0x98]
   140018efd:	mov    r9,rbp
   140018f00:	mov    r8,r14
   140018f03:	mov    DWORD PTR [rsp+0x38],eax
   140018f07:	mov    rax,QWORD PTR [rsp+0x90]
   140018f0f:	mov    rdx,rsi
   140018f12:	mov    QWORD PTR [rsp+0x30],rax
   140018f17:	mov    eax,DWORD PTR [rsp+0x88]
   140018f1e:	mov    rcx,rbx
   140018f21:	mov    DWORD PTR [rsp+0x28],eax
   140018f25:	mov    QWORD PTR [rsp+0x20],rdi
   140018f2a:	call   r10
   140018f2d:	jmp    0x140018f6b
   140018f2f:	mov    rax,QWORD PTR [rsp+0x90]
   140018f37:	mov    r9,rbp
   140018f3a:	mov    r8,r14
   140018f3d:	mov    QWORD PTR [rsp+0x38],rax
   140018f42:	mov    eax,DWORD PTR [rsp+0x88]
   140018f49:	mov    rdx,rsi
   140018f4c:	mov    DWORD PTR [rsp+0x30],eax
   140018f50:	mov    al,BYTE PTR [rsp+0x98]
   140018f57:	mov    rcx,rbx
   140018f5a:	mov    BYTE PTR [rsp+0x28],al
   140018f5e:	mov    QWORD PTR [rsp+0x20],rdi
   140018f63:	call   0x140017e54
   140018f68:	mov    eax,r12d
   140018f6b:	mov    rbx,QWORD PTR [rsp+0x60]
   140018f70:	mov    rbp,QWORD PTR [rsp+0x68]
   140018f75:	mov    rsi,QWORD PTR [rsp+0x70]
   140018f7a:	add    rsp,0x40
   140018f7e:	pop    r14
   140018f80:	pop    r12
   140018f82:	pop    rdi
   140018f83:	ret    
   140018f84:	mov    rax,rsp
   140018f87:	mov    QWORD PTR [rax+0x8],rbx
   140018f8b:	mov    QWORD PTR [rax+0x10],rbp
   140018f8f:	mov    QWORD PTR [rax+0x18],rsi
   140018f93:	mov    QWORD PTR [rax+0x20],rdi
   140018f97:	push   r14
   140018f99:	sub    rsp,0x20
   140018f9d:	mov    esi,DWORD PTR [rcx+0x4]
   140018fa0:	xor    ebx,ebx
   140018fa2:	mov    r14,r8
   140018fa5:	mov    rbp,rdx
   140018fa8:	mov    rdi,rcx
   140018fab:	test   esi,esi
   140018fad:	je     0x140018fbd
   140018faf:	movsxd rsi,esi
   140018fb2:	call   0x14001485c
   140018fb7:	lea    rcx,[rsi+rax*1]
   140018fbb:	jmp    0x140018fc0
   140018fbd:	mov    rcx,rbx
   140018fc0:	test   rcx,rcx
   140018fc3:	je     0x140019091
   140018fc9:	test   esi,esi
   140018fcb:	je     0x140018fdc
   140018fcd:	movsxd rsi,DWORD PTR [rdi+0x4]
   140018fd1:	call   0x14001485c
   140018fd6:	lea    rcx,[rsi+rax*1]
   140018fda:	jmp    0x140018fdf
   140018fdc:	mov    rcx,rbx
   140018fdf:	cmp    BYTE PTR [rcx+0x10],bl
   140018fe2:	je     0x140019091
   140018fe8:	test   BYTE PTR [rdi],0x80
   140018feb:	je     0x140018ff7
   140018fed:	test   BYTE PTR [rbp+0x0],0x10
   140018ff1:	jne    0x140019091
   140018ff7:	test   esi,esi
   140018ff9:	je     0x14001900c
   140018ffb:	call   0x14001485c
   140019000:	mov    rsi,rax
   140019003:	movsxd rax,DWORD PTR [rdi+0x4]
   140019007:	add    rsi,rax
   14001900a:	jmp    0x14001900f
   14001900c:	mov    rsi,rbx
   14001900f:	call   0x140014874
   140019014:	mov    rcx,rax
   140019017:	movsxd rax,DWORD PTR [rbp+0x4]
   14001901b:	add    rcx,rax
   14001901e:	cmp    rsi,rcx
   140019021:	je     0x14001905d
   140019023:	cmp    DWORD PTR [rdi+0x4],ebx
   140019026:	je     0x140019039
   140019028:	call   0x14001485c
   14001902d:	mov    rsi,rax
   140019030:	movsxd rax,DWORD PTR [rdi+0x4]
   140019034:	add    rsi,rax
   140019037:	jmp    0x14001903c
   140019039:	mov    rsi,rbx
   14001903c:	call   0x140014874
   140019041:	movsxd rdx,DWORD PTR [rbp+0x4]
   140019045:	lea    rcx,[rsi+0x10]
   140019049:	add    rdx,0x10
   14001904d:	add    rdx,rax
   140019050:	call   0x140016270
   140019055:	test   eax,eax
   140019057:	je     0x14001905d
   140019059:	xor    eax,eax
   14001905b:	jmp    0x140019096
   14001905d:	mov    al,0x2
   14001905f:	test   BYTE PTR [rbp+0x0],al
   140019062:	je     0x140019069
   140019064:	test   BYTE PTR [rdi],0x8
   140019067:	je     0x14001908d
   140019069:	test   BYTE PTR [r14],0x1
   14001906d:	je     0x140019074
   14001906f:	test   BYTE PTR [rdi],0x1
   140019072:	je     0x14001908d
   140019074:	test   BYTE PTR [r14],0x4
   140019078:	je     0x14001907f
   14001907a:	test   BYTE PTR [rdi],0x4
   14001907d:	je     0x14001908d
   14001907f:	test   BYTE PTR [r14],al
   140019082:	je     0x140019088
   140019084:	test   BYTE PTR [rdi],al
   140019086:	je     0x14001908d
   140019088:	mov    ebx,0x1
   14001908d:	mov    eax,ebx
   14001908f:	jmp    0x140019096
   140019091:	mov    eax,0x1
   140019096:	mov    rbx,QWORD PTR [rsp+0x30]
   14001909b:	mov    rbp,QWORD PTR [rsp+0x38]
   1400190a0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400190a5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400190aa:	add    rsp,0x20
   1400190ae:	pop    r14
   1400190b0:	ret    
   1400190b1:	int3   
   1400190b2:	int3   
   1400190b3:	int3   
   1400190b4:	sub    rsp,0x28
   1400190b8:	movsxd r9,DWORD PTR [r8+0x1c]
   1400190bc:	mov    rax,QWORD PTR [rcx]
   1400190bf:	mov    r10,r8
   1400190c2:	mov    eax,DWORD PTR [r9+rax*1]
   1400190c6:	cmp    eax,0xfffffffe
   1400190c9:	jne    0x1400190d6
   1400190cb:	mov    r8,QWORD PTR [rdx]
   1400190ce:	mov    rcx,r10
   1400190d1:	call   0x140019158
   1400190d6:	add    rsp,0x28
   1400190da:	ret    
   1400190db:	int3   
   1400190dc:	rex push rbx
   1400190de:	sub    rsp,0x20
   1400190e2:	lea    r9,[rsp+0x40]
   1400190e7:	mov    rbx,r8
   1400190ea:	call   0x140014434
   1400190ef:	mov    rcx,QWORD PTR [rax]
   1400190f2:	movsxd rax,DWORD PTR [rbx+0x1c]
   1400190f6:	mov    QWORD PTR [rsp+0x40],rcx
   1400190fb:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   1400190ff:	add    rsp,0x20
   140019103:	pop    rbx
   140019104:	ret    
   140019105:	int3   
   140019106:	int3   
   140019107:	int3   
   140019108:	movsxd rdx,DWORD PTR [r8+0x1c]
   14001910c:	mov    rax,QWORD PTR [rcx]
   14001910f:	mov    DWORD PTR [rdx+rax*1],r9d
   140019113:	ret    
   140019114:	mov    QWORD PTR [rsp+0x8],rbx
   140019119:	push   rdi
   14001911a:	sub    rsp,0x20
   14001911e:	mov    edi,r9d
   140019121:	lea    r9,[rsp+0x40]
   140019126:	mov    rbx,r8
   140019129:	call   0x140014434
   14001912e:	mov    rcx,QWORD PTR [rax]
   140019131:	movsxd rax,DWORD PTR [rbx+0x1c]
   140019135:	mov    QWORD PTR [rsp+0x40],rcx
   14001913a:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14001913e:	jle    0x140019144
   140019140:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   140019144:	mov    rbx,QWORD PTR [rsp+0x30]
   140019149:	add    rsp,0x20
   14001914d:	pop    rdi
   14001914e:	ret    
   14001914f:	int3   
   140019150:	mov    r8,QWORD PTR [rdx]
   140019153:	jmp    0x140019158
   140019158:	mov    QWORD PTR [rsp+0x8],rbx
   14001915d:	mov    QWORD PTR [rsp+0x10],rbp
   140019162:	mov    QWORD PTR [rsp+0x18],rsi
   140019167:	push   rdi
   140019168:	sub    rsp,0x20
   14001916c:	mov    rbp,r8
   14001916f:	mov    rsi,rdx
   140019172:	mov    rbx,rcx
   140019175:	test   rcx,rcx
   140019178:	jne    0x14001917f
   14001917a:	call   0x1400191e4
   14001917f:	movsxd rax,DWORD PTR [rbx+0x18]
   140019183:	mov    edi,DWORD PTR [rbx+0x14]
   140019186:	add    rax,QWORD PTR [rsi+0x8]
   14001918a:	jne    0x140019191
   14001918c:	call   0x1400191e4
   140019191:	xor    r8d,r8d
   140019194:	test   edi,edi
   140019196:	je     0x1400191cc
   140019198:	mov    r9,QWORD PTR [rsi+0x8]
   14001919c:	movsxd r10,DWORD PTR [rbx+0x18]
   1400191a0:	lea    rcx,[r9+r8*8]
   1400191a4:	movsxd rdx,DWORD PTR [rcx+r10*1]
   1400191a8:	add    rdx,r9
   1400191ab:	cmp    rbp,rdx
   1400191ae:	jl     0x1400191b8
   1400191b0:	inc    r8d
   1400191b3:	cmp    r8d,edi
   1400191b6:	jb     0x1400191a0
   1400191b8:	test   r8d,r8d
   1400191bb:	je     0x1400191cc
   1400191bd:	lea    ecx,[r8-0x1]
   1400191c1:	lea    rax,[r9+rcx*8]
   1400191c5:	mov    eax,DWORD PTR [rax+r10*1+0x4]
   1400191ca:	jmp    0x1400191cf
   1400191cc:	or     eax,0xffffffff
   1400191cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400191d4:	mov    rbp,QWORD PTR [rsp+0x38]
   1400191d9:	mov    rsi,QWORD PTR [rsp+0x40]
   1400191de:	add    rsp,0x20
   1400191e2:	pop    rdi
   1400191e3:	ret    
   1400191e4:	sub    rsp,0x28
   1400191e8:	mov    rcx,QWORD PTR [rip+0x20cf9]        # 0x140039ee8
   1400191ef:	call   QWORD PTR [rip+0xdefb]        # 0x1400270f0
   1400191f5:	test   rax,rax
   1400191f8:	je     0x1400191fe
   1400191fa:	call   rax
   1400191fc:	jmp    0x1400191fe
   1400191fe:	call   0x140019204
   140019203:	nop
   140019204:	sub    rsp,0x28
   140019208:	call   0x140017170
   14001920d:	mov    rcx,QWORD PTR [rax+0xd0]
   140019214:	test   rcx,rcx
   140019217:	je     0x14001921d
   140019219:	call   rcx
   14001921b:	jmp    0x14001921d
   14001921d:	call   0x140016118
   140019222:	nop
   140019223:	int3   
   140019224:	sub    rsp,0x28
   140019228:	lea    rcx,[rip+0xffffffffffffffd5]        # 0x140019204
   14001922f:	call   QWORD PTR [rip+0xdfdb]        # 0x140027210
   140019235:	mov    QWORD PTR [rip+0x20cac],rax        # 0x140039ee8
   14001923c:	add    rsp,0x28
   140019240:	ret    
   140019241:	int3   
   140019242:	int3   
   140019243:	int3   
   140019244:	sub    rsp,0x48
   140019248:	mov    eax,DWORD PTR [rsp+0x78]
   14001924c:	and    QWORD PTR [rsp+0x30],0x0
   140019252:	mov    DWORD PTR [rsp+0x28],eax
   140019256:	mov    eax,DWORD PTR [rsp+0x70]
   14001925a:	mov    DWORD PTR [rsp+0x20],eax
   14001925e:	call   0x140019268
   140019263:	add    rsp,0x48
   140019267:	ret    
   140019268:	sub    rsp,0x38
   14001926c:	lea    eax,[r9-0x45]
   140019270:	mov    r10d,0xffffffdf
   140019276:	test   r10d,eax
   140019279:	je     0x1400192c5
   14001927b:	cmp    r9d,0x66
   14001927f:	jne    0x140019297
   140019281:	mov    rax,QWORD PTR [rsp+0x70]
   140019286:	mov    r9d,DWORD PTR [rsp+0x60]
   14001928b:	mov    QWORD PTR [rsp+0x20],rax
   140019290:	call   0x140019af0
   140019295:	jmp    0x1400192e1
   140019297:	lea    eax,[r9-0x41]
   14001929b:	mov    r9d,DWORD PTR [rsp+0x60]
   1400192a0:	test   r10d,eax
   1400192a3:	mov    rax,QWORD PTR [rsp+0x70]
   1400192a8:	mov    QWORD PTR [rsp+0x28],rax
   1400192ad:	mov    eax,DWORD PTR [rsp+0x68]
   1400192b1:	mov    DWORD PTR [rsp+0x20],eax
   1400192b5:	je     0x1400192be
   1400192b7:	call   0x140019bc4
   1400192bc:	jmp    0x1400192e1
   1400192be:	call   0x1400192e8
   1400192c3:	jmp    0x1400192e1
   1400192c5:	mov    rax,QWORD PTR [rsp+0x70]
   1400192ca:	mov    r9d,DWORD PTR [rsp+0x60]
   1400192cf:	mov    QWORD PTR [rsp+0x28],rax
   1400192d4:	mov    eax,DWORD PTR [rsp+0x68]
   1400192d8:	mov    DWORD PTR [rsp+0x20],eax
   1400192dc:	call   0x140019894
   1400192e1:	add    rsp,0x38
   1400192e5:	ret    
   1400192e6:	int3   
   1400192e7:	int3   
   1400192e8:	mov    rax,rsp
   1400192eb:	mov    QWORD PTR [rax+0x8],rbx
   1400192ef:	mov    QWORD PTR [rax+0x10],rbp
   1400192f3:	mov    QWORD PTR [rax+0x18],rsi
   1400192f7:	push   rdi
   1400192f8:	push   r12
   1400192fa:	push   r13
   1400192fc:	push   r14
   1400192fe:	push   r15
   140019300:	sub    rsp,0x50
   140019304:	mov    rdi,rdx
   140019307:	mov    rdx,QWORD PTR [rsp+0xa8]
   14001930f:	mov    r14,rcx
   140019312:	lea    rcx,[rax-0x48]
   140019316:	mov    r15d,0x30
   14001931c:	mov    ebx,r9d
   14001931f:	mov    rsi,r8
   140019322:	mov    r12d,0x3ff
   140019328:	movzx  ebp,r15w
   14001932c:	call   0x140014b34
   140019331:	xor    r9d,r9d
   140019334:	test   ebx,ebx
   140019336:	cmovs  ebx,r9d
   14001933a:	test   rdi,rdi
   14001933d:	jne    0x14001934b
   14001933f:	call   0x1400161e8
   140019344:	mov    ebx,0x16
   140019349:	jmp    0x140019368
   14001934b:	test   rsi,rsi
   14001934e:	je     0x14001933f
   140019350:	lea    eax,[rbx+0xb]
   140019353:	mov    BYTE PTR [rdi],r9b
   140019356:	movsxd rcx,eax
   140019359:	cmp    rsi,rcx
   14001935c:	ja     0x140019377
   14001935e:	call   0x1400161e8
   140019363:	mov    ebx,0x22
   140019368:	mov    DWORD PTR [rax],ebx
   14001936a:	call   0x140013f54
   14001936f:	xor    r9d,r9d
   140019372:	jmp    0x140019665
   140019377:	mov    rax,QWORD PTR [r14]
   14001937a:	mov    ecx,0x7ff
   14001937f:	shr    rax,0x34
   140019383:	and    rax,rcx
   140019386:	cmp    rax,rcx
   140019389:	jne    0x140019421
   14001938f:	mov    QWORD PTR [rsp+0x28],r9
   140019394:	mov    DWORD PTR [rsp+0x20],r9d
   140019399:	lea    r8,[rsi-0x2]
   14001939d:	cmp    rsi,0xffffffffffffffff
   1400193a1:	lea    rdx,[rdi+0x2]
   1400193a5:	mov    r9d,ebx
   1400193a8:	cmove  r8,rsi
   1400193ac:	mov    rcx,r14
   1400193af:	call   0x140019894
   1400193b4:	xor    r9d,r9d
   1400193b7:	mov    ebx,eax
   1400193b9:	test   eax,eax
   1400193bb:	je     0x1400193c5
   1400193bd:	mov    BYTE PTR [rdi],r9b
   1400193c0:	jmp    0x140019665
   1400193c5:	cmp    BYTE PTR [rdi+0x2],0x2d
   1400193c9:	mov    esi,0x1
   1400193ce:	jne    0x1400193d6
   1400193d0:	mov    BYTE PTR [rdi],0x2d
   1400193d3:	add    rdi,rsi
   1400193d6:	mov    ebx,DWORD PTR [rsp+0xa0]
   1400193dd:	mov    BYTE PTR [rdi],r15b
   1400193e0:	mov    edx,0x65
   1400193e5:	mov    eax,ebx
   1400193e7:	neg    eax
   1400193e9:	sbb    cl,cl
   1400193eb:	and    cl,0xe0
   1400193ee:	add    cl,0x78
   1400193f1:	mov    BYTE PTR [rdi+rsi*1],cl
   1400193f4:	lea    rcx,[rsi+0x1]
   1400193f8:	add    rcx,rdi
   1400193fb:	call   0x14001ded8
   140019400:	xor    r9d,r9d
   140019403:	test   rax,rax
   140019406:	je     0x140019662
   14001940c:	neg    ebx
   14001940e:	sbb    cl,cl
   140019410:	and    cl,0xe0
   140019413:	add    cl,0x70
   140019416:	mov    BYTE PTR [rax],cl
   140019418:	mov    BYTE PTR [rax+0x3],r9b
   14001941c:	jmp    0x140019662
   140019421:	movabs rax,0x8000000000000000
   14001942b:	mov    esi,0x1
   140019430:	test   QWORD PTR [r14],rax
   140019433:	je     0x14001943b
   140019435:	mov    BYTE PTR [rdi],0x2d
   140019438:	add    rdi,rsi
   14001943b:	mov    r13d,DWORD PTR [rsp+0xa0]
   140019443:	mov    r10d,r15d
   140019446:	movabs r11,0xfffffffffffff
   140019450:	mov    BYTE PTR [rdi],r10b
   140019453:	add    rdi,rsi
   140019456:	mov    eax,r13d
   140019459:	neg    eax
   14001945b:	mov    eax,r13d
   14001945e:	sbb    cl,cl
   140019460:	and    cl,0xe0
   140019463:	add    cl,0x78
   140019466:	mov    BYTE PTR [rdi],cl
   140019468:	add    rdi,rsi
   14001946b:	neg    eax
   14001946d:	sbb    edx,edx
   14001946f:	movabs rax,0x7ff0000000000000
   140019479:	and    edx,0xffffffe0
   14001947c:	sub    edx,0xffffffd9
   14001947f:	test   QWORD PTR [r14],rax
   140019482:	jne    0x14001949f
   140019484:	mov    BYTE PTR [rdi],r10b
   140019487:	mov    rax,QWORD PTR [r14]
   14001948a:	add    rdi,rsi
   14001948d:	and    rax,r11
   140019490:	neg    rax
   140019493:	sbb    r12,r12
   140019496:	and    r12d,0x3fe
   14001949d:	jmp    0x1400194a5
   14001949f:	mov    BYTE PTR [rdi],0x31
   1400194a2:	add    rdi,rsi
   1400194a5:	mov    r15,rdi
   1400194a8:	add    rdi,rsi
   1400194ab:	test   ebx,ebx
   1400194ad:	jne    0x1400194b4
   1400194af:	mov    BYTE PTR [r15],r9b
   1400194b2:	jmp    0x1400194c8
   1400194b4:	mov    rax,QWORD PTR [rsp+0x30]
   1400194b9:	mov    rcx,QWORD PTR [rax+0xf0]
   1400194c0:	mov    rax,QWORD PTR [rcx]
   1400194c3:	mov    cl,BYTE PTR [rax]
   1400194c5:	mov    BYTE PTR [r15],cl
   1400194c8:	test   QWORD PTR [r14],r11
   1400194cb:	jbe    0x140019559
   1400194d1:	movabs r8,0xf000000000000
   1400194db:	test   ebx,ebx
   1400194dd:	jle    0x14001950c
   1400194df:	mov    rax,QWORD PTR [r14]
   1400194e2:	mov    cl,bpl
   1400194e5:	and    rax,r8
   1400194e8:	and    rax,r11
   1400194eb:	shr    rax,cl
   1400194ee:	add    ax,r10w
   1400194f2:	cmp    ax,0x39
   1400194f6:	jbe    0x1400194fb
   1400194f8:	add    ax,dx
   1400194fb:	mov    BYTE PTR [rdi],al
   1400194fd:	shr    r8,0x4
   140019501:	sub    ebx,esi
   140019503:	add    rdi,rsi
   140019506:	add    bp,0xfffc
   14001950a:	jns    0x1400194db
   14001950c:	test   bp,bp
   14001950f:	js     0x140019559
   140019511:	mov    rax,QWORD PTR [r14]
   140019514:	mov    cl,bpl
   140019517:	and    rax,r8
   14001951a:	and    rax,r11
   14001951d:	shr    rax,cl
   140019520:	cmp    ax,0x8
   140019524:	jbe    0x140019559
   140019526:	lea    rcx,[rdi-0x1]
   14001952a:	mov    al,BYTE PTR [rcx]
   14001952c:	sub    al,0x46
   14001952e:	test   al,0xdf
   140019530:	jne    0x14001953a
   140019532:	mov    BYTE PTR [rcx],r10b
   140019535:	sub    rcx,rsi
   140019538:	jmp    0x14001952a
   14001953a:	cmp    rcx,r15
   14001953d:	je     0x140019553
   14001953f:	mov    al,BYTE PTR [rcx]
   140019541:	cmp    al,0x39
   140019543:	jne    0x14001954c
   140019545:	add    dl,0x3a
   140019548:	mov    BYTE PTR [rcx],dl
   14001954a:	jmp    0x140019559
   14001954c:	add    al,sil
   14001954f:	mov    BYTE PTR [rcx],al
   140019551:	jmp    0x140019559
   140019553:	sub    rcx,rsi
   140019556:	add    BYTE PTR [rcx],sil
   140019559:	test   ebx,ebx
   14001955b:	jle    0x140019575
   14001955d:	mov    r8,rbx
   140019560:	mov    dl,r10b
   140019563:	mov    rcx,rdi
   140019566:	call   0x140014d80
   14001956b:	add    rdi,rbx
   14001956e:	xor    r9d,r9d
   140019571:	lea    r10d,[r9+0x30]
   140019575:	cmp    BYTE PTR [r15],r9b
   140019578:	cmove  rdi,r15
   14001957c:	neg    r13d
   14001957f:	sbb    al,al
   140019581:	and    al,0xe0
   140019583:	add    al,0x70
   140019585:	mov    BYTE PTR [rdi],al
   140019587:	mov    rcx,QWORD PTR [r14]
   14001958a:	add    rdi,rsi
   14001958d:	shr    rcx,0x34
   140019591:	and    ecx,0x7ff
   140019597:	sub    rcx,r12
   14001959a:	js     0x1400195a4
   14001959c:	mov    BYTE PTR [rdi],0x2b
   14001959f:	add    rdi,rsi
   1400195a2:	jmp    0x1400195ad
   1400195a4:	mov    BYTE PTR [rdi],0x2d
   1400195a7:	add    rdi,rsi
   1400195aa:	neg    rcx
   1400195ad:	mov    r8,rdi
   1400195b0:	mov    BYTE PTR [rdi],r10b
   1400195b3:	cmp    rcx,0x3e8
   1400195ba:	jl     0x1400195ef
   1400195bc:	movabs rax,0x20c49ba5e353f7cf
   1400195c6:	imul   rcx
   1400195c9:	sar    rdx,0x7
   1400195cd:	mov    rax,rdx
   1400195d0:	shr    rax,0x3f
   1400195d4:	add    rdx,rax
   1400195d7:	lea    eax,[r10+rdx*1]
   1400195db:	mov    BYTE PTR [rdi],al
   1400195dd:	add    rdi,rsi
   1400195e0:	imul   rax,rdx,0xfffffffffffffc18
   1400195e7:	add    rcx,rax
   1400195ea:	cmp    rdi,r8
   1400195ed:	jne    0x1400195f5
   1400195ef:	cmp    rcx,0x64
   1400195f3:	jl     0x140019623
   1400195f5:	movabs rax,0xa3d70a3d70a3d70b
   1400195ff:	imul   rcx
   140019602:	add    rdx,rcx
   140019605:	sar    rdx,0x6
   140019609:	mov    rax,rdx
   14001960c:	shr    rax,0x3f
   140019610:	add    rdx,rax
   140019613:	lea    eax,[r10+rdx*1]
   140019617:	mov    BYTE PTR [rdi],al
   140019619:	add    rdi,rsi
   14001961c:	imul   rax,rdx,0xffffffffffffff9c
   140019620:	add    rcx,rax
   140019623:	cmp    rdi,r8
   140019626:	jne    0x14001962e
   140019628:	cmp    rcx,0xa
   14001962c:	jl     0x140019659
   14001962e:	movabs rax,0x6666666666666667
   140019638:	imul   rcx
   14001963b:	sar    rdx,0x2
   14001963f:	mov    rax,rdx
   140019642:	shr    rax,0x3f
   140019646:	add    rdx,rax
   140019649:	lea    eax,[r10+rdx*1]
   14001964d:	mov    BYTE PTR [rdi],al
   14001964f:	add    rdi,rsi
   140019652:	imul   rax,rdx,0xfffffffffffffff6
   140019656:	add    rcx,rax
   140019659:	add    cl,r10b
   14001965c:	mov    BYTE PTR [rdi],cl
   14001965e:	mov    BYTE PTR [rdi+0x1],r9b
   140019662:	mov    ebx,r9d
   140019665:	cmp    BYTE PTR [rsp+0x48],r9b
   14001966a:	je     0x140019678
   14001966c:	mov    rcx,QWORD PTR [rsp+0x40]
   140019671:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019678:	lea    r11,[rsp+0x50]
   14001967d:	mov    eax,ebx
   14001967f:	mov    rbx,QWORD PTR [r11+0x30]
   140019683:	mov    rbp,QWORD PTR [r11+0x38]
   140019687:	mov    rsi,QWORD PTR [r11+0x40]
   14001968b:	mov    rsp,r11
   14001968e:	pop    r15
   140019690:	pop    r14
   140019692:	pop    r13
   140019694:	pop    r12
   140019696:	pop    rdi
   140019697:	ret    
   140019698:	mov    rax,rsp
   14001969b:	mov    QWORD PTR [rax+0x8],rbx
   14001969f:	mov    QWORD PTR [rax+0x10],rbp
   1400196a3:	mov    QWORD PTR [rax+0x18],rsi
   1400196a7:	mov    QWORD PTR [rax+0x20],rdi
   1400196ab:	push   r13
   1400196ad:	push   r14
   1400196af:	push   r15
   1400196b1:	sub    rsp,0x50
   1400196b5:	mov    r14,rdx
   1400196b8:	mov    rdx,QWORD PTR [rsp+0xa0]
   1400196c0:	mov    rdi,rcx
   1400196c3:	lea    rcx,[rax-0x38]
   1400196c7:	mov    r13d,r9d
   1400196ca:	movsxd rsi,r8d
   1400196cd:	call   0x140014b34
   1400196d2:	test   rdi,rdi
   1400196d5:	je     0x1400196dc
   1400196d7:	test   r14,r14
   1400196da:	jne    0x1400196e8
   1400196dc:	call   0x1400161e8
   1400196e1:	mov    ebx,0x16
   1400196e6:	jmp    0x140019703
   1400196e8:	xor    eax,eax
   1400196ea:	test   esi,esi
   1400196ec:	cmovg  eax,esi
   1400196ef:	add    eax,0x9
   1400196f2:	cdqe   
   1400196f4:	cmp    r14,rax
   1400196f7:	ja     0x14001970f
   1400196f9:	call   0x1400161e8
   1400196fe:	mov    ebx,0x22
   140019703:	mov    DWORD PTR [rax],ebx
   140019705:	call   0x140013f54
   14001970a:	jmp    0x140019847
   14001970f:	cmp    BYTE PTR [rsp+0x98],0x0
   140019717:	mov    rbp,QWORD PTR [rsp+0x90]
   14001971f:	je     0x140019755
   140019721:	xor    ebx,ebx
   140019723:	cmp    DWORD PTR [rbp+0x0],0x2d
   140019727:	sete   bl
   14001972a:	xor    r15d,r15d
   14001972d:	add    rbx,rdi
   140019730:	test   esi,esi
   140019732:	setg   r15b
   140019736:	test   r15d,r15d
   140019739:	je     0x140019755
   14001973b:	mov    rcx,rbx
   14001973e:	call   0x140015330
   140019743:	movsxd rcx,r15d
   140019746:	mov    rdx,rbx
   140019749:	lea    r8,[rax+0x1]
   14001974d:	add    rcx,rbx
   140019750:	call   0x1400130d0
   140019755:	cmp    DWORD PTR [rbp+0x0],0x2d
   140019759:	mov    rdx,rdi
   14001975c:	jne    0x140019765
   14001975e:	mov    BYTE PTR [rdi],0x2d
   140019761:	lea    rdx,[rdi+0x1]
   140019765:	test   esi,esi
   140019767:	jle    0x140019784
   140019769:	mov    al,BYTE PTR [rdx+0x1]
   14001976c:	mov    BYTE PTR [rdx],al
   14001976e:	mov    rax,QWORD PTR [rsp+0x30]
   140019773:	inc    rdx
   140019776:	mov    rcx,QWORD PTR [rax+0xf0]
   14001977d:	mov    rax,QWORD PTR [rcx]
   140019780:	mov    cl,BYTE PTR [rax]
   140019782:	mov    BYTE PTR [rdx],cl
   140019784:	xor    ecx,ecx
   140019786:	lea    rbx,[rdx+rsi*1]
   14001978a:	lea    r8,[rip+0x107ef]        # 0x140029f80
   140019791:	cmp    BYTE PTR [rsp+0x98],cl
   140019798:	sete   cl
   14001979b:	add    rbx,rcx
   14001979e:	sub    rdi,rbx
   1400197a1:	cmp    r14,0xffffffffffffffff
   1400197a5:	mov    rcx,rbx
   1400197a8:	lea    rdx,[r14+rdi*1]
   1400197ac:	cmove  rdx,r14
   1400197b0:	call   0x14001cd84
   1400197b5:	test   eax,eax
   1400197b7:	jne    0x14001987b
   1400197bd:	lea    rcx,[rbx+0x2]
   1400197c1:	test   r13d,r13d
   1400197c4:	je     0x1400197c9
   1400197c6:	mov    BYTE PTR [rbx],0x45
   1400197c9:	mov    rax,QWORD PTR [rbp+0x10]
   1400197cd:	cmp    BYTE PTR [rax],0x30
   1400197d0:	je     0x140019828
   1400197d2:	mov    r8d,DWORD PTR [rbp+0x4]
   1400197d6:	dec    r8d
   1400197d9:	jns    0x1400197e2
   1400197db:	neg    r8d
   1400197de:	mov    BYTE PTR [rbx+0x1],0x2d
   1400197e2:	cmp    r8d,0x64
   1400197e6:	jl     0x140019803
   1400197e8:	mov    eax,0x51eb851f
   1400197ed:	imul   r8d
   1400197f0:	sar    edx,0x5
   1400197f3:	mov    eax,edx
   1400197f5:	shr    eax,0x1f
   1400197f8:	add    edx,eax
   1400197fa:	add    BYTE PTR [rbx+0x2],dl
   1400197fd:	imul   eax,edx,0xffffff9c
   140019800:	add    r8d,eax
   140019803:	cmp    r8d,0xa
   140019807:	jl     0x140019824
   140019809:	mov    eax,0x66666667
   14001980e:	imul   r8d
   140019811:	sar    edx,0x2
   140019814:	mov    eax,edx
   140019816:	shr    eax,0x1f
   140019819:	add    edx,eax
   14001981b:	add    BYTE PTR [rbx+0x3],dl
   14001981e:	imul   eax,edx,0xfffffff6
   140019821:	add    r8d,eax
   140019824:	add    BYTE PTR [rbx+0x4],r8b
   140019828:	test   BYTE PTR [rip+0x20a05],0x1        # 0x14003a234
   14001982f:	je     0x140019845
   140019831:	cmp    BYTE PTR [rcx],0x30
   140019834:	jne    0x140019845
   140019836:	lea    rdx,[rcx+0x1]
   14001983a:	mov    r8d,0x3
   140019840:	call   0x1400130d0
   140019845:	xor    ebx,ebx
   140019847:	cmp    BYTE PTR [rsp+0x48],0x0
   14001984c:	je     0x14001985a
   14001984e:	mov    rcx,QWORD PTR [rsp+0x40]
   140019853:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001985a:	lea    r11,[rsp+0x50]
   14001985f:	mov    eax,ebx
   140019861:	mov    rbx,QWORD PTR [r11+0x20]
   140019865:	mov    rbp,QWORD PTR [r11+0x28]
   140019869:	mov    rsi,QWORD PTR [r11+0x30]
   14001986d:	mov    rdi,QWORD PTR [r11+0x38]
   140019871:	mov    rsp,r11
   140019874:	pop    r15
   140019876:	pop    r14
   140019878:	pop    r13
   14001987a:	ret    
   14001987b:	and    QWORD PTR [rsp+0x20],0x0
   140019881:	xor    r9d,r9d
   140019884:	xor    r8d,r8d
   140019887:	xor    edx,edx
   140019889:	xor    ecx,ecx
   14001988b:	call   0x140013f74
   140019890:	int3   
   140019891:	int3   
   140019892:	int3   
   140019893:	int3   
   140019894:	rex push rbx
   140019896:	push   rbp
   140019897:	push   rsi
   140019898:	push   rdi
   140019899:	sub    rsp,0x88
   1400198a0:	mov    rax,QWORD PTR [rip+0x1d769]        # 0x140037010
   1400198a7:	xor    rax,rsp
   1400198aa:	mov    QWORD PTR [rsp+0x70],rax
   1400198af:	mov    rcx,QWORD PTR [rcx]
   1400198b2:	mov    rbx,r8
   1400198b5:	mov    rdi,rdx
   1400198b8:	mov    esi,r9d
   1400198bb:	mov    ebp,0x16
   1400198c0:	lea    r8,[rsp+0x58]
   1400198c5:	lea    rdx,[rsp+0x40]
   1400198ca:	mov    r9d,ebp
   1400198cd:	call   0x14001e358
   1400198d2:	test   rdi,rdi
   1400198d5:	jne    0x1400198ea
   1400198d7:	call   0x1400161e8
   1400198dc:	mov    DWORD PTR [rax],ebp
   1400198de:	call   0x140013f54
   1400198e3:	mov    eax,ebp
   1400198e5:	jmp    0x140019972
   1400198ea:	test   rbx,rbx
   1400198ed:	je     0x1400198d7
   1400198ef:	or     rdx,0xffffffffffffffff
   1400198f3:	cmp    rbx,rdx
   1400198f6:	je     0x140019912
   1400198f8:	xor    eax,eax
   1400198fa:	cmp    DWORD PTR [rsp+0x40],0x2d
   1400198ff:	mov    rdx,rbx
   140019902:	sete   al
   140019905:	sub    rdx,rax
   140019908:	xor    eax,eax
   14001990a:	test   esi,esi
   14001990c:	setg   al
   14001990f:	sub    rdx,rax
   140019912:	xor    eax,eax
   140019914:	cmp    DWORD PTR [rsp+0x40],0x2d
   140019919:	lea    r8d,[rsi+0x1]
   14001991d:	sete   al
   140019920:	xor    ecx,ecx
   140019922:	test   esi,esi
   140019924:	setg   cl
   140019927:	add    rax,rdi
   14001992a:	lea    r9,[rsp+0x40]
   14001992f:	add    rcx,rax
   140019932:	call   0x14001e01c
   140019937:	test   eax,eax
   140019939:	je     0x140019940
   14001993b:	mov    BYTE PTR [rdi],0x0
   14001993e:	jmp    0x140019972
   140019940:	mov    rax,QWORD PTR [rsp+0xd8]
   140019948:	mov    r9d,DWORD PTR [rsp+0xd0]
   140019950:	mov    r8d,esi
   140019953:	mov    QWORD PTR [rsp+0x30],rax
   140019958:	lea    rax,[rsp+0x40]
   14001995d:	mov    rdx,rbx
   140019960:	mov    rcx,rdi
   140019963:	mov    BYTE PTR [rsp+0x28],0x0
   140019968:	mov    QWORD PTR [rsp+0x20],rax
   14001996d:	call   0x140019698
   140019972:	mov    rcx,QWORD PTR [rsp+0x70]
   140019977:	xor    rcx,rsp
   14001997a:	call   0x1400130a0
   14001997f:	add    rsp,0x88
   140019986:	pop    rdi
   140019987:	pop    rsi
   140019988:	pop    rbp
   140019989:	pop    rbx
   14001998a:	ret    
   14001998b:	int3   
   14001998c:	mov    rax,rsp
   14001998f:	mov    QWORD PTR [rax+0x8],rbx
   140019993:	mov    QWORD PTR [rax+0x10],rbp
   140019997:	mov    QWORD PTR [rax+0x18],rsi
   14001999b:	mov    QWORD PTR [rax+0x20],rdi
   14001999f:	push   r14
   1400199a1:	sub    rsp,0x40
   1400199a5:	mov    ebx,DWORD PTR [r9+0x4]
   1400199a9:	mov    rsi,rdx
   1400199ac:	mov    rdx,QWORD PTR [rsp+0x78]
   1400199b1:	mov    rdi,rcx
   1400199b4:	lea    rcx,[rax-0x28]
   1400199b8:	mov    rbp,r9
   1400199bb:	dec    ebx
   1400199bd:	mov    r14d,r8d
   1400199c0:	call   0x140014b34
   1400199c5:	test   rdi,rdi
   1400199c8:	je     0x1400199cf
   1400199ca:	test   rsi,rsi
   1400199cd:	jne    0x1400199e5
   1400199cf:	call   0x1400161e8
   1400199d4:	mov    ebx,0x16
   1400199d9:	mov    DWORD PTR [rax],ebx
   1400199db:	call   0x140013f54
   1400199e0:	jmp    0x140019abd
   1400199e5:	cmp    BYTE PTR [rsp+0x70],0x0
   1400199ea:	je     0x140019a06
   1400199ec:	cmp    ebx,r14d
   1400199ef:	jne    0x140019a06
   1400199f1:	xor    eax,eax
   1400199f3:	cmp    DWORD PTR [rbp+0x0],0x2d
   1400199f7:	movsxd rcx,ebx
   1400199fa:	sete   al
   1400199fd:	add    rax,rdi
   140019a00:	mov    WORD PTR [rcx+rax*1],0x30
   140019a06:	cmp    DWORD PTR [rbp+0x0],0x2d
   140019a0a:	jne    0x140019a12
   140019a0c:	mov    BYTE PTR [rdi],0x2d
   140019a0f:	inc    rdi
   140019a12:	cmp    DWORD PTR [rbp+0x4],0x0
   140019a16:	jg     0x140019a38
   140019a18:	mov    rcx,rdi
   140019a1b:	call   0x140015330
   140019a20:	lea    rcx,[rdi+0x1]
   140019a24:	mov    rdx,rdi
   140019a27:	lea    r8,[rax+0x1]
   140019a2b:	call   0x1400130d0
   140019a30:	mov    BYTE PTR [rdi],0x30
   140019a33:	inc    rdi
   140019a36:	jmp    0x140019a3f
   140019a38:	movsxd rax,DWORD PTR [rbp+0x4]
   140019a3c:	add    rdi,rax
   140019a3f:	test   r14d,r14d
   140019a42:	jle    0x140019abb
   140019a44:	mov    rcx,rdi
   140019a47:	lea    rsi,[rdi+0x1]
   140019a4b:	call   0x140015330
   140019a50:	mov    rdx,rdi
   140019a53:	mov    rcx,rsi
   140019a56:	lea    r8,[rax+0x1]
   140019a5a:	call   0x1400130d0
   140019a5f:	mov    rax,QWORD PTR [rsp+0x20]
   140019a64:	mov    rcx,QWORD PTR [rax+0xf0]
   140019a6b:	mov    rax,QWORD PTR [rcx]
   140019a6e:	mov    cl,BYTE PTR [rax]
   140019a70:	mov    BYTE PTR [rdi],cl
   140019a72:	mov    ebx,DWORD PTR [rbp+0x4]
   140019a75:	test   ebx,ebx
   140019a77:	jns    0x140019abb
   140019a79:	neg    ebx
   140019a7b:	cmp    BYTE PTR [rsp+0x70],0x0
   140019a80:	jne    0x140019a8d
   140019a82:	mov    eax,ebx
   140019a84:	mov    ebx,r14d
   140019a87:	cmp    r14d,eax
   140019a8a:	cmovge ebx,eax
   140019a8d:	test   ebx,ebx
   140019a8f:	je     0x140019aab
   140019a91:	mov    rcx,rsi
   140019a94:	call   0x140015330
   140019a99:	movsxd rcx,ebx
   140019a9c:	mov    rdx,rsi
   140019a9f:	lea    r8,[rax+0x1]
   140019aa3:	add    rcx,rsi
   140019aa6:	call   0x1400130d0
   140019aab:	movsxd r8,ebx
   140019aae:	mov    edx,0x30
   140019ab3:	mov    rcx,rsi
   140019ab6:	call   0x140014d80
   140019abb:	xor    ebx,ebx
   140019abd:	cmp    BYTE PTR [rsp+0x38],0x0
   140019ac2:	je     0x140019ad0
   140019ac4:	mov    rcx,QWORD PTR [rsp+0x30]
   140019ac9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019ad0:	mov    rbp,QWORD PTR [rsp+0x58]
   140019ad5:	mov    rsi,QWORD PTR [rsp+0x60]
   140019ada:	mov    rdi,QWORD PTR [rsp+0x68]
   140019adf:	mov    eax,ebx
   140019ae1:	mov    rbx,QWORD PTR [rsp+0x50]
   140019ae6:	add    rsp,0x40
   140019aea:	pop    r14
   140019aec:	ret    
   140019aed:	int3   
   140019aee:	int3   
   140019aef:	int3   
   140019af0:	rex push rbx
   140019af2:	push   rbp
   140019af3:	push   rsi
   140019af4:	push   rdi
   140019af5:	sub    rsp,0x78
   140019af9:	mov    rax,QWORD PTR [rip+0x1d510]        # 0x140037010
   140019b00:	xor    rax,rsp
   140019b03:	mov    QWORD PTR [rsp+0x60],rax
   140019b08:	mov    rcx,QWORD PTR [rcx]
   140019b0b:	mov    rbx,r8
   140019b0e:	mov    rdi,rdx
   140019b11:	mov    esi,r9d
   140019b14:	mov    ebp,0x16
   140019b19:	lea    r8,[rsp+0x48]
   140019b1e:	lea    rdx,[rsp+0x30]
   140019b23:	mov    r9d,ebp
   140019b26:	call   0x14001e358
   140019b2b:	test   rdi,rdi
   140019b2e:	jne    0x140019b40
   140019b30:	call   0x1400161e8
   140019b35:	mov    DWORD PTR [rax],ebp
   140019b37:	call   0x140013f54
   140019b3c:	mov    eax,ebp
   140019b3e:	jmp    0x140019bab
   140019b40:	test   rbx,rbx
   140019b43:	je     0x140019b30
   140019b45:	or     rdx,0xffffffffffffffff
   140019b49:	cmp    rbx,rdx
   140019b4c:	je     0x140019b5e
   140019b4e:	xor    eax,eax
   140019b50:	cmp    DWORD PTR [rsp+0x30],0x2d
   140019b55:	mov    rdx,rbx
   140019b58:	sete   al
   140019b5b:	sub    rdx,rax
   140019b5e:	mov    r8d,DWORD PTR [rsp+0x34]
   140019b63:	xor    ecx,ecx
   140019b65:	lea    r9,[rsp+0x30]
   140019b6a:	add    r8d,esi
   140019b6d:	cmp    DWORD PTR [rsp+0x30],0x2d
   140019b72:	sete   cl
   140019b75:	add    rcx,rdi
   140019b78:	call   0x14001e01c
   140019b7d:	test   eax,eax
   140019b7f:	je     0x140019b86
   140019b81:	mov    BYTE PTR [rdi],0x0
   140019b84:	jmp    0x140019bab
   140019b86:	mov    rax,QWORD PTR [rsp+0xc0]
   140019b8e:	lea    r9,[rsp+0x30]
   140019b93:	mov    r8d,esi
   140019b96:	mov    QWORD PTR [rsp+0x28],rax
   140019b9b:	mov    rdx,rbx
   140019b9e:	mov    rcx,rdi
   140019ba1:	mov    BYTE PTR [rsp+0x20],0x0
   140019ba6:	call   0x14001998c
   140019bab:	mov    rcx,QWORD PTR [rsp+0x60]
   140019bb0:	xor    rcx,rsp
   140019bb3:	call   0x1400130a0
   140019bb8:	add    rsp,0x78
   140019bbc:	pop    rdi
   140019bbd:	pop    rsi
   140019bbe:	pop    rbp
   140019bbf:	pop    rbx
   140019bc0:	ret    
   140019bc1:	int3   
   140019bc2:	int3   
   140019bc3:	int3   
   140019bc4:	rex push rbx
   140019bc6:	push   rbp
   140019bc7:	push   rsi
   140019bc8:	push   rdi
   140019bc9:	push   r14
   140019bcb:	sub    rsp,0x80
   140019bd2:	mov    rax,QWORD PTR [rip+0x1d437]        # 0x140037010
   140019bd9:	xor    rax,rsp
   140019bdc:	mov    QWORD PTR [rsp+0x70],rax
   140019be1:	mov    rcx,QWORD PTR [rcx]
   140019be4:	mov    rdi,r8
   140019be7:	mov    rsi,rdx
   140019bea:	mov    ebp,r9d
   140019bed:	mov    ebx,0x16
   140019bf2:	lea    r8,[rsp+0x58]
   140019bf7:	lea    rdx,[rsp+0x40]
   140019bfc:	mov    r9d,ebx
   140019bff:	call   0x14001e358
   140019c04:	test   rsi,rsi
   140019c07:	jne    0x140019c1c
   140019c09:	call   0x1400161e8
   140019c0e:	mov    DWORD PTR [rax],ebx
   140019c10:	call   0x140013f54
   140019c15:	mov    eax,ebx
   140019c17:	jmp    0x140019cdd
   140019c1c:	test   rdi,rdi
   140019c1f:	je     0x140019c09
   140019c21:	mov    r14d,DWORD PTR [rsp+0x44]
   140019c26:	xor    eax,eax
   140019c28:	dec    r14d
   140019c2b:	cmp    DWORD PTR [rsp+0x40],0x2d
   140019c30:	sete   al
   140019c33:	or     rdx,0xffffffffffffffff
   140019c37:	lea    rbx,[rax+rsi*1]
   140019c3b:	cmp    rdi,rdx
   140019c3e:	je     0x140019c46
   140019c40:	mov    rdx,rdi
   140019c43:	sub    rdx,rax
   140019c46:	lea    r9,[rsp+0x40]
   140019c4b:	mov    r8d,ebp
   140019c4e:	mov    rcx,rbx
   140019c51:	call   0x14001e01c
   140019c56:	test   eax,eax
   140019c58:	je     0x140019c5f
   140019c5a:	mov    BYTE PTR [rsi],0x0
   140019c5d:	jmp    0x140019cdd
   140019c5f:	mov    eax,DWORD PTR [rsp+0x44]
   140019c63:	dec    eax
   140019c65:	cmp    r14d,eax
   140019c68:	setl   cl
   140019c6b:	cmp    eax,0xfffffffc
   140019c6e:	jl     0x140019cab
   140019c70:	cmp    eax,ebp
   140019c72:	jge    0x140019cab
   140019c74:	test   cl,cl
   140019c76:	je     0x140019c84
   140019c78:	mov    al,BYTE PTR [rbx]
   140019c7a:	inc    rbx
   140019c7d:	test   al,al
   140019c7f:	jne    0x140019c78
   140019c81:	mov    BYTE PTR [rbx-0x2],al
   140019c84:	mov    rax,QWORD PTR [rsp+0xd8]
   140019c8c:	lea    r9,[rsp+0x40]
   140019c91:	mov    r8d,ebp
   140019c94:	mov    QWORD PTR [rsp+0x28],rax
   140019c99:	mov    rdx,rdi
   140019c9c:	mov    rcx,rsi
   140019c9f:	mov    BYTE PTR [rsp+0x20],0x1
   140019ca4:	call   0x14001998c
   140019ca9:	jmp    0x140019cdd
   140019cab:	mov    rax,QWORD PTR [rsp+0xd8]
   140019cb3:	mov    r9d,DWORD PTR [rsp+0xd0]
   140019cbb:	mov    r8d,ebp
   140019cbe:	mov    QWORD PTR [rsp+0x30],rax
   140019cc3:	lea    rax,[rsp+0x40]
   140019cc8:	mov    rdx,rdi
   140019ccb:	mov    rcx,rsi
   140019cce:	mov    BYTE PTR [rsp+0x28],0x1
   140019cd3:	mov    QWORD PTR [rsp+0x20],rax
   140019cd8:	call   0x140019698
   140019cdd:	mov    rcx,QWORD PTR [rsp+0x70]
   140019ce2:	xor    rcx,rsp
   140019ce5:	call   0x1400130a0
   140019cea:	add    rsp,0x80
   140019cf1:	pop    r14
   140019cf3:	pop    rdi
   140019cf4:	pop    rsi
   140019cf5:	pop    rbp
   140019cf6:	pop    rbx
   140019cf7:	ret    
   140019cf8:	xor    edx,edx
   140019cfa:	jmp    0x140019d00
   140019cff:	int3   
   140019d00:	rex push rbx
   140019d02:	sub    rsp,0x40
   140019d06:	mov    rbx,rcx
   140019d09:	lea    rcx,[rsp+0x20]
   140019d0e:	call   0x140014b34
   140019d13:	mov    cl,BYTE PTR [rbx]
   140019d15:	mov    r8,QWORD PTR [rsp+0x20]
   140019d1a:	test   cl,cl
   140019d1c:	je     0x140019d37
   140019d1e:	mov    rax,QWORD PTR [r8+0xf0]
   140019d25:	mov    rdx,QWORD PTR [rax]
   140019d28:	mov    al,BYTE PTR [rdx]
   140019d2a:	cmp    cl,al
   140019d2c:	je     0x140019d37
   140019d2e:	inc    rbx
   140019d31:	mov    cl,BYTE PTR [rbx]
   140019d33:	test   cl,cl
   140019d35:	jne    0x140019d2a
   140019d37:	mov    al,BYTE PTR [rbx]
   140019d39:	inc    rbx
   140019d3c:	test   al,al
   140019d3e:	je     0x140019d7d
   140019d40:	jmp    0x140019d4b
   140019d42:	sub    al,0x45
   140019d44:	test   al,0xdf
   140019d46:	je     0x140019d51
   140019d48:	inc    rbx
   140019d4b:	mov    al,BYTE PTR [rbx]
   140019d4d:	test   al,al
   140019d4f:	jne    0x140019d42
   140019d51:	mov    rdx,rbx
   140019d54:	dec    rbx
   140019d57:	cmp    BYTE PTR [rbx],0x30
   140019d5a:	je     0x140019d54
   140019d5c:	mov    rax,QWORD PTR [r8+0xf0]
   140019d63:	mov    rcx,QWORD PTR [rax]
   140019d66:	mov    al,BYTE PTR [rcx]
   140019d68:	cmp    BYTE PTR [rbx],al
   140019d6a:	jne    0x140019d6f
   140019d6c:	dec    rbx
   140019d6f:	mov    al,BYTE PTR [rdx]
   140019d71:	inc    rbx
   140019d74:	inc    rdx
   140019d77:	mov    BYTE PTR [rbx],al
   140019d79:	test   al,al
   140019d7b:	jne    0x140019d6f
   140019d7d:	cmp    BYTE PTR [rsp+0x38],0x0
   140019d82:	je     0x140019d90
   140019d84:	mov    rax,QWORD PTR [rsp+0x30]
   140019d89:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019d90:	add    rsp,0x40
   140019d94:	pop    rbx
   140019d95:	ret    
   140019d96:	int3   
   140019d97:	int3   
   140019d98:	xor    r9d,r9d
   140019d9b:	jmp    0x140019da0
   140019da0:	rex push rbx
   140019da2:	sub    rsp,0x30
   140019da6:	mov    rax,r8
   140019da9:	mov    rbx,rdx
   140019dac:	mov    r8,r9
   140019daf:	mov    rdx,rax
   140019db2:	test   ecx,ecx
   140019db4:	je     0x140019dca
   140019db6:	lea    rcx,[rsp+0x20]
   140019dbb:	call   0x14001e1b8
   140019dc0:	mov    rax,QWORD PTR [rsp+0x20]
   140019dc5:	mov    QWORD PTR [rbx],rax
   140019dc8:	jmp    0x140019dda
   140019dca:	lea    rcx,[rsp+0x40]
   140019dcf:	call   0x14001e280
   140019dd4:	mov    eax,DWORD PTR [rsp+0x40]
   140019dd8:	mov    DWORD PTR [rbx],eax
   140019dda:	add    rsp,0x30
   140019dde:	pop    rbx
   140019ddf:	ret    
   140019de0:	xor    edx,edx
   140019de2:	jmp    0x140019de8
   140019de7:	int3   
   140019de8:	rex push rbx
   140019dea:	sub    rsp,0x40
   140019dee:	mov    rbx,rcx
   140019df1:	lea    rcx,[rsp+0x20]
   140019df6:	call   0x140014b34
   140019dfb:	movsx  ecx,BYTE PTR [rbx]
   140019dfe:	call   0x14001deb8
   140019e03:	cmp    eax,0x65
   140019e06:	je     0x140019e17
   140019e08:	inc    rbx
   140019e0b:	movzx  ecx,BYTE PTR [rbx]
   140019e0e:	call   0x14001dc68
   140019e13:	test   eax,eax
   140019e15:	jne    0x140019e08
   140019e17:	movsx  ecx,BYTE PTR [rbx]
   140019e1a:	call   0x14001deb8
   140019e1f:	cmp    eax,0x78
   140019e22:	jne    0x140019e28
   140019e24:	add    rbx,0x2
   140019e28:	mov    rax,QWORD PTR [rsp+0x20]
   140019e2d:	mov    dl,BYTE PTR [rbx]
   140019e2f:	mov    rcx,QWORD PTR [rax+0xf0]
   140019e36:	mov    rax,QWORD PTR [rcx]
   140019e39:	mov    cl,BYTE PTR [rax]
   140019e3b:	mov    BYTE PTR [rbx],cl
   140019e3d:	inc    rbx
   140019e40:	mov    al,BYTE PTR [rbx]
   140019e42:	mov    BYTE PTR [rbx],dl
   140019e44:	mov    dl,al
   140019e46:	mov    al,BYTE PTR [rbx]
   140019e48:	inc    rbx
   140019e4b:	test   al,al
   140019e4d:	jne    0x140019e40
   140019e4f:	cmp    BYTE PTR [rsp+0x38],al
   140019e53:	je     0x140019e61
   140019e55:	mov    rax,QWORD PTR [rsp+0x30]
   140019e5a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140019e61:	add    rsp,0x40
   140019e65:	pop    rbx
   140019e66:	ret    
   140019e67:	int3   
   140019e68:	movsd  xmm0,QWORD PTR [rcx]
   140019e6c:	xor    eax,eax
   140019e6e:	comisd xmm0,QWORD PTR [rip+0x10112]        # 0x140029f88
   140019e76:	setae  al
   140019e79:	ret    
   140019e7a:	int3   
   140019e7b:	int3   
   140019e7c:	mov    QWORD PTR [rsp+0x8],rbx
   140019e81:	push   rdi
   140019e82:	sub    rsp,0x20
   140019e86:	xor    edi,edi
   140019e88:	lea    rbx,[rip+0x1d391]        # 0x140037220
   140019e8f:	mov    rcx,QWORD PTR [rbx]
   140019e92:	call   QWORD PTR [rip+0xd378]        # 0x140027210
   140019e98:	inc    edi
   140019e9a:	mov    QWORD PTR [rbx],rax
   140019e9d:	movsxd rax,edi
   140019ea0:	lea    rbx,[rbx+0x8]
   140019ea4:	cmp    rax,0xa
   140019ea8:	jb     0x140019e8f
   140019eaa:	mov    rbx,QWORD PTR [rsp+0x30]
   140019eaf:	add    rsp,0x20
   140019eb3:	pop    rdi
   140019eb4:	ret    
   140019eb5:	int3   
   140019eb6:	int3   
   140019eb7:	int3   
   140019eb8:	lock inc DWORD PTR [rcx]
   140019ebb:	mov    rax,QWORD PTR [rcx+0xd8]
   140019ec2:	test   rax,rax
   140019ec5:	je     0x140019eca
   140019ec7:	lock inc DWORD PTR [rax]
   140019eca:	mov    rax,QWORD PTR [rcx+0xe8]
   140019ed1:	test   rax,rax
   140019ed4:	je     0x140019ed9
   140019ed6:	lock inc DWORD PTR [rax]
   140019ed9:	mov    rax,QWORD PTR [rcx+0xe0]
   140019ee0:	test   rax,rax
   140019ee3:	je     0x140019ee8
   140019ee5:	lock inc DWORD PTR [rax]
   140019ee8:	mov    rax,QWORD PTR [rcx+0xf8]
   140019eef:	test   rax,rax
   140019ef2:	je     0x140019ef7
   140019ef4:	lock inc DWORD PTR [rax]
   140019ef7:	lea    rax,[rcx+0x28]
   140019efb:	mov    r8d,0x6
   140019f01:	lea    rdx,[rip+0x1d8ac]        # 0x1400377b4
   140019f08:	cmp    QWORD PTR [rax-0x10],rdx
   140019f0c:	je     0x140019f19
   140019f0e:	mov    rdx,QWORD PTR [rax]
   140019f11:	test   rdx,rdx
   140019f14:	je     0x140019f19
   140019f16:	lock inc DWORD PTR [rdx]
   140019f19:	cmp    QWORD PTR [rax-0x18],0x0
   140019f1e:	je     0x140019f2c
   140019f20:	mov    rdx,QWORD PTR [rax-0x8]
   140019f24:	test   rdx,rdx
   140019f27:	je     0x140019f2c
   140019f29:	lock inc DWORD PTR [rdx]
   140019f2c:	add    rax,0x20
   140019f30:	dec    r8
   140019f33:	jne    0x140019f01
   140019f35:	mov    rax,QWORD PTR [rcx+0x120]
   140019f3c:	lock inc DWORD PTR [rax+0x15c]
   140019f43:	ret    
   140019f44:	mov    QWORD PTR [rsp+0x8],rbx
   140019f49:	mov    QWORD PTR [rsp+0x10],rbp
   140019f4e:	mov    QWORD PTR [rsp+0x18],rsi
   140019f53:	push   rdi
   140019f54:	sub    rsp,0x20
   140019f58:	mov    rax,QWORD PTR [rcx+0xf0]
   140019f5f:	mov    rbx,rcx
   140019f62:	test   rax,rax
   140019f65:	je     0x140019fe0
   140019f67:	lea    rcx,[rip+0x1e472]        # 0x1400383e0
   140019f6e:	cmp    rax,rcx
   140019f71:	je     0x140019fe0
   140019f73:	mov    rax,QWORD PTR [rbx+0xd8]
   140019f7a:	test   rax,rax
   140019f7d:	je     0x140019fe0
   140019f7f:	cmp    DWORD PTR [rax],0x0
   140019f82:	jne    0x140019fe0
   140019f84:	mov    rcx,QWORD PTR [rbx+0xe8]
   140019f8b:	test   rcx,rcx
   140019f8e:	je     0x140019fa6
   140019f90:	cmp    DWORD PTR [rcx],0x0
   140019f93:	jne    0x140019fa6
   140019f95:	call   0x14001392c
   140019f9a:	mov    rcx,QWORD PTR [rbx+0xf0]
   140019fa1:	call   0x14001e41c
   140019fa6:	mov    rcx,QWORD PTR [rbx+0xe0]
   140019fad:	test   rcx,rcx
   140019fb0:	je     0x140019fc8
   140019fb2:	cmp    DWORD PTR [rcx],0x0
   140019fb5:	jne    0x140019fc8
   140019fb7:	call   0x14001392c
   140019fbc:	mov    rcx,QWORD PTR [rbx+0xf0]
   140019fc3:	call   0x14001e528
   140019fc8:	mov    rcx,QWORD PTR [rbx+0xd8]
   140019fcf:	call   0x14001392c
   140019fd4:	mov    rcx,QWORD PTR [rbx+0xf0]
   140019fdb:	call   0x14001392c
   140019fe0:	mov    rax,QWORD PTR [rbx+0xf8]
   140019fe7:	test   rax,rax
   140019fea:	je     0x14001a033
   140019fec:	cmp    DWORD PTR [rax],0x0
   140019fef:	jne    0x14001a033
   140019ff1:	mov    rcx,QWORD PTR [rbx+0x100]
   140019ff8:	sub    rcx,0xfe
   140019fff:	call   0x14001392c
   14001a004:	mov    rcx,QWORD PTR [rbx+0x110]
   14001a00b:	mov    edi,0x80
   14001a010:	sub    rcx,rdi
   14001a013:	call   0x14001392c
   14001a018:	mov    rcx,QWORD PTR [rbx+0x118]
   14001a01f:	sub    rcx,rdi
   14001a022:	call   0x14001392c
   14001a027:	mov    rcx,QWORD PTR [rbx+0xf8]
   14001a02e:	call   0x14001392c
   14001a033:	mov    rcx,QWORD PTR [rbx+0x120]
   14001a03a:	lea    rax,[rip+0x1d77f]        # 0x1400377c0
   14001a041:	cmp    rcx,rax
   14001a044:	je     0x14001a060
   14001a046:	cmp    DWORD PTR [rcx+0x15c],0x0
   14001a04d:	jne    0x14001a060
   14001a04f:	call   0x14001e594
   14001a054:	mov    rcx,QWORD PTR [rbx+0x120]
   14001a05b:	call   0x14001392c
   14001a060:	lea    rsi,[rbx+0x128]
   14001a067:	lea    rdi,[rbx+0x28]
   14001a06b:	mov    ebp,0x6
   14001a070:	lea    rax,[rip+0x1d73d]        # 0x1400377b4
   14001a077:	cmp    QWORD PTR [rdi-0x10],rax
   14001a07b:	je     0x14001a097
   14001a07d:	mov    rcx,QWORD PTR [rdi]
   14001a080:	test   rcx,rcx
   14001a083:	je     0x14001a097
   14001a085:	cmp    DWORD PTR [rcx],0x0
   14001a088:	jne    0x14001a097
   14001a08a:	call   0x14001392c
   14001a08f:	mov    rcx,QWORD PTR [rsi]
   14001a092:	call   0x14001392c
   14001a097:	cmp    QWORD PTR [rdi-0x18],0x0
   14001a09c:	je     0x14001a0b1
   14001a09e:	mov    rcx,QWORD PTR [rdi-0x8]
   14001a0a2:	test   rcx,rcx
   14001a0a5:	je     0x14001a0b1
   14001a0a7:	cmp    DWORD PTR [rcx],0x0
   14001a0aa:	jne    0x14001a0b1
   14001a0ac:	call   0x14001392c
   14001a0b1:	add    rsi,0x8
   14001a0b5:	add    rdi,0x20
   14001a0b9:	dec    rbp
   14001a0bc:	jne    0x14001a070
   14001a0be:	mov    rcx,rbx
   14001a0c1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a0c6:	mov    rbp,QWORD PTR [rsp+0x38]
   14001a0cb:	mov    rsi,QWORD PTR [rsp+0x40]
   14001a0d0:	add    rsp,0x20
   14001a0d4:	pop    rdi
   14001a0d5:	jmp    0x14001392c
   14001a0da:	int3   
   14001a0db:	int3   
   14001a0dc:	test   rcx,rcx
   14001a0df:	je     0x14001a17c
   14001a0e5:	or     r9d,0xffffffff
   14001a0e9:	lock add DWORD PTR [rcx],r9d
   14001a0ed:	mov    rax,QWORD PTR [rcx+0xd8]
   14001a0f4:	test   rax,rax
   14001a0f7:	je     0x14001a0fd
   14001a0f9:	lock add DWORD PTR [rax],r9d
   14001a0fd:	mov    rax,QWORD PTR [rcx+0xe8]
   14001a104:	test   rax,rax
   14001a107:	je     0x14001a10d
   14001a109:	lock add DWORD PTR [rax],r9d
   14001a10d:	mov    rax,QWORD PTR [rcx+0xe0]
   14001a114:	test   rax,rax
   14001a117:	je     0x14001a11d
   14001a119:	lock add DWORD PTR [rax],r9d
   14001a11d:	mov    rax,QWORD PTR [rcx+0xf8]
   14001a124:	test   rax,rax
   14001a127:	je     0x14001a12d
   14001a129:	lock add DWORD PTR [rax],r9d
   14001a12d:	lea    rax,[rcx+0x28]
   14001a131:	mov    r8d,0x6
   14001a137:	lea    rdx,[rip+0x1d676]        # 0x1400377b4
   14001a13e:	cmp    QWORD PTR [rax-0x10],rdx
   14001a142:	je     0x14001a150
   14001a144:	mov    rdx,QWORD PTR [rax]
   14001a147:	test   rdx,rdx
   14001a14a:	je     0x14001a150
   14001a14c:	lock add DWORD PTR [rdx],r9d
   14001a150:	cmp    QWORD PTR [rax-0x18],0x0
   14001a155:	je     0x14001a164
   14001a157:	mov    rdx,QWORD PTR [rax-0x8]
   14001a15b:	test   rdx,rdx
   14001a15e:	je     0x14001a164
   14001a160:	lock add DWORD PTR [rdx],r9d
   14001a164:	add    rax,0x20
   14001a168:	dec    r8
   14001a16b:	jne    0x14001a137
   14001a16d:	mov    rax,QWORD PTR [rcx+0x120]
   14001a174:	lock add DWORD PTR [rax+0x15c],r9d
   14001a17c:	mov    rax,rcx
   14001a17f:	ret    
   14001a180:	rex push rbx
   14001a182:	sub    rsp,0x20
   14001a186:	call   0x140017170
   14001a18b:	mov    rbx,rax
   14001a18e:	mov    ecx,DWORD PTR [rip+0x1da54]        # 0x140037be8
   14001a194:	test   DWORD PTR [rax+0xc8],ecx
   14001a19a:	je     0x14001a1b4
   14001a19c:	cmp    QWORD PTR [rax+0xc0],0x0
   14001a1a4:	je     0x14001a1b4
   14001a1a6:	call   0x140017170
   14001a1ab:	mov    rbx,QWORD PTR [rax+0xc0]
   14001a1b2:	jmp    0x14001a1df
   14001a1b4:	mov    ecx,0xc
   14001a1b9:	call   0x14001cde8
   14001a1be:	nop
   14001a1bf:	lea    rcx,[rbx+0xc0]
   14001a1c6:	mov    rdx,QWORD PTR [rip+0x1d8b3]        # 0x140037a80
   14001a1cd:	call   0x14001a1f8
   14001a1d2:	mov    rbx,rax
   14001a1d5:	mov    ecx,0xc
   14001a1da:	call   0x14001cfd8
   14001a1df:	test   rbx,rbx
   14001a1e2:	jne    0x14001a1ec
   14001a1e4:	lea    ecx,[rbx+0x20]
   14001a1e7:	call   0x140015948
   14001a1ec:	mov    rax,rbx
   14001a1ef:	add    rsp,0x20
   14001a1f3:	pop    rbx
   14001a1f4:	ret    
   14001a1f5:	int3   
   14001a1f6:	int3   
   14001a1f7:	int3   
   14001a1f8:	mov    QWORD PTR [rsp+0x8],rbx
   14001a1fd:	push   rdi
   14001a1fe:	sub    rsp,0x20
   14001a202:	mov    rdi,rdx
   14001a205:	test   rdx,rdx
   14001a208:	je     0x14001a24d
   14001a20a:	test   rcx,rcx
   14001a20d:	je     0x14001a24d
   14001a20f:	mov    rbx,QWORD PTR [rcx]
   14001a212:	cmp    rbx,rdx
   14001a215:	je     0x14001a248
   14001a217:	mov    QWORD PTR [rcx],rdx
   14001a21a:	mov    rcx,rdx
   14001a21d:	call   0x140019eb8
   14001a222:	test   rbx,rbx
   14001a225:	je     0x14001a248
   14001a227:	mov    rcx,rbx
   14001a22a:	call   0x14001a0dc
   14001a22f:	cmp    DWORD PTR [rbx],0x0
   14001a232:	jne    0x14001a248
   14001a234:	lea    rax,[rip+0x1d855]        # 0x140037a90
   14001a23b:	cmp    rbx,rax
   14001a23e:	je     0x14001a248
   14001a240:	mov    rcx,rbx
   14001a243:	call   0x140019f44
   14001a248:	mov    rax,rdi
   14001a24b:	jmp    0x14001a24f
   14001a24d:	xor    eax,eax
   14001a24f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a254:	add    rsp,0x20
   14001a258:	pop    rdi
   14001a259:	ret    
   14001a25a:	int3   
   14001a25b:	int3   
   14001a25c:	sub    rsp,0x28
   14001a260:	cmp    DWORD PTR [rip+0x212f9],0x0        # 0x14003b560
   14001a267:	jne    0x14001a27d
   14001a269:	mov    ecx,0xfffffffd
   14001a26e:	call   0x14001a634
   14001a273:	mov    DWORD PTR [rip+0x212e3],0x1        # 0x14003b560
   14001a27d:	xor    eax,eax
   14001a27f:	add    rsp,0x28
   14001a283:	ret    
   14001a284:	rex push rbx
   14001a286:	sub    rsp,0x40
   14001a28a:	mov    ebx,ecx
   14001a28c:	lea    rcx,[rsp+0x20]
   14001a291:	xor    edx,edx
   14001a293:	call   0x140014b34
   14001a298:	and    DWORD PTR [rip+0x1fc71],0x0        # 0x140039f10
   14001a29f:	cmp    ebx,0xfffffffe
   14001a2a2:	jne    0x14001a2b6
   14001a2a4:	mov    DWORD PTR [rip+0x1fc62],0x1        # 0x140039f10
   14001a2ae:	call   QWORD PTR [rip+0xd044]        # 0x1400272f8
   14001a2b4:	jmp    0x14001a2cb
   14001a2b6:	cmp    ebx,0xfffffffd
   14001a2b9:	jne    0x14001a2cf
   14001a2bb:	mov    DWORD PTR [rip+0x1fc4b],0x1        # 0x140039f10
   14001a2c5:	call   QWORD PTR [rip+0xd025]        # 0x1400272f0
   14001a2cb:	mov    ebx,eax
   14001a2cd:	jmp    0x14001a2e6
   14001a2cf:	cmp    ebx,0xfffffffc
   14001a2d2:	jne    0x14001a2e6
   14001a2d4:	mov    rax,QWORD PTR [rsp+0x20]
   14001a2d9:	mov    DWORD PTR [rip+0x1fc2d],0x1        # 0x140039f10
   14001a2e3:	mov    ebx,DWORD PTR [rax+0x4]
   14001a2e6:	cmp    BYTE PTR [rsp+0x38],0x0
   14001a2eb:	je     0x14001a2f9
   14001a2ed:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a2f2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001a2f9:	mov    eax,ebx
   14001a2fb:	add    rsp,0x40
   14001a2ff:	pop    rbx
   14001a300:	ret    
   14001a301:	int3   
   14001a302:	int3   
   14001a303:	int3   
   14001a304:	mov    QWORD PTR [rsp+0x8],rbx
   14001a309:	mov    QWORD PTR [rsp+0x10],rbp
   14001a30e:	mov    QWORD PTR [rsp+0x18],rsi
   14001a313:	push   rdi
   14001a314:	sub    rsp,0x20
   14001a318:	lea    rbx,[rcx+0x18]
   14001a31c:	mov    rsi,rcx
   14001a31f:	mov    ebp,0x101
   14001a324:	mov    rcx,rbx
   14001a327:	mov    r8d,ebp
   14001a32a:	xor    edx,edx
   14001a32c:	call   0x140014d80
   14001a331:	xor    eax,eax
   14001a333:	lea    rdi,[rsi+0xc]
   14001a337:	mov    QWORD PTR [rsi+0x4],rax
   14001a33b:	mov    QWORD PTR [rsi+0x220],rax
   14001a342:	mov    ecx,0x6
   14001a347:	movzx  eax,ax
   14001a34a:	rep stos WORD PTR es:[rdi],ax
   14001a34d:	lea    rdi,[rip+0x1d12c]        # 0x140037480
   14001a354:	sub    rdi,rsi
   14001a357:	mov    al,BYTE PTR [rdi+rbx*1]
   14001a35a:	mov    BYTE PTR [rbx],al
   14001a35c:	inc    rbx
   14001a35f:	dec    rbp
   14001a362:	jne    0x14001a357
   14001a364:	lea    rcx,[rsi+0x119]
   14001a36b:	mov    edx,0x100
   14001a370:	mov    al,BYTE PTR [rcx+rdi*1]
   14001a373:	mov    BYTE PTR [rcx],al
   14001a375:	inc    rcx
   14001a378:	dec    rdx
   14001a37b:	jne    0x14001a370
   14001a37d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a382:	mov    rbp,QWORD PTR [rsp+0x38]
   14001a387:	mov    rsi,QWORD PTR [rsp+0x40]
   14001a38c:	add    rsp,0x20
   14001a390:	pop    rdi
   14001a391:	ret    
   14001a392:	int3   
   14001a393:	int3   
   14001a394:	mov    QWORD PTR [rsp+0x10],rbx
   14001a399:	mov    QWORD PTR [rsp+0x18],rdi
   14001a39e:	push   rbp
   14001a39f:	lea    rbp,[rsp-0x480]
   14001a3a7:	sub    rsp,0x580
   14001a3ae:	mov    rax,QWORD PTR [rip+0x1cc5b]        # 0x140037010
   14001a3b5:	xor    rax,rsp
   14001a3b8:	mov    QWORD PTR [rbp+0x470],rax
   14001a3bf:	mov    rdi,rcx
   14001a3c2:	mov    ecx,DWORD PTR [rcx+0x4]
   14001a3c5:	lea    rdx,[rsp+0x50]
   14001a3ca:	call   QWORD PTR [rip+0xcf30]        # 0x140027300
   14001a3d0:	mov    ebx,0x100
   14001a3d5:	test   eax,eax
   14001a3d7:	je     0x14001a512
   14001a3dd:	xor    eax,eax
   14001a3df:	lea    rcx,[rsp+0x70]
   14001a3e4:	mov    BYTE PTR [rcx],al
   14001a3e6:	inc    eax
   14001a3e8:	inc    rcx
   14001a3eb:	cmp    eax,ebx
   14001a3ed:	jb     0x14001a3e4
   14001a3ef:	mov    al,BYTE PTR [rsp+0x56]
   14001a3f3:	mov    BYTE PTR [rsp+0x70],0x20
   14001a3f8:	lea    rdx,[rsp+0x56]
   14001a3fd:	jmp    0x14001a421
   14001a3ff:	movzx  r8d,BYTE PTR [rdx+0x1]
   14001a404:	movzx  ecx,al
   14001a407:	jmp    0x14001a416
   14001a409:	cmp    ecx,ebx
   14001a40b:	jae    0x14001a41b
   14001a40d:	mov    eax,ecx
   14001a40f:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   14001a414:	inc    ecx
   14001a416:	cmp    ecx,r8d
   14001a419:	jbe    0x14001a409
   14001a41b:	add    rdx,0x2
   14001a41f:	mov    al,BYTE PTR [rdx]
   14001a421:	test   al,al
   14001a423:	jne    0x14001a3ff
   14001a425:	mov    eax,DWORD PTR [rdi+0x4]
   14001a428:	and    DWORD PTR [rsp+0x30],0x0
   14001a42d:	lea    r8,[rsp+0x70]
   14001a432:	mov    DWORD PTR [rsp+0x28],eax
   14001a436:	lea    rax,[rbp+0x270]
   14001a43d:	mov    r9d,ebx
   14001a440:	mov    edx,0x1
   14001a445:	xor    ecx,ecx
   14001a447:	mov    QWORD PTR [rsp+0x20],rax
   14001a44c:	call   0x14001ee8c
   14001a451:	and    DWORD PTR [rsp+0x40],0x0
   14001a456:	mov    eax,DWORD PTR [rdi+0x4]
   14001a459:	mov    rdx,QWORD PTR [rdi+0x220]
   14001a460:	mov    DWORD PTR [rsp+0x38],eax
   14001a464:	lea    rax,[rbp+0x70]
   14001a468:	mov    DWORD PTR [rsp+0x30],ebx
   14001a46c:	mov    QWORD PTR [rsp+0x28],rax
   14001a471:	lea    r9,[rsp+0x70]
   14001a476:	mov    r8d,ebx
   14001a479:	xor    ecx,ecx
   14001a47b:	mov    DWORD PTR [rsp+0x20],ebx
   14001a47f:	call   0x14001ec7c
   14001a484:	and    DWORD PTR [rsp+0x40],0x0
   14001a489:	mov    eax,DWORD PTR [rdi+0x4]
   14001a48c:	mov    rdx,QWORD PTR [rdi+0x220]
   14001a493:	mov    DWORD PTR [rsp+0x38],eax
   14001a497:	lea    rax,[rbp+0x170]
   14001a49e:	mov    DWORD PTR [rsp+0x30],ebx
   14001a4a2:	mov    QWORD PTR [rsp+0x28],rax
   14001a4a7:	lea    r9,[rsp+0x70]
   14001a4ac:	mov    r8d,0x200
   14001a4b2:	xor    ecx,ecx
   14001a4b4:	mov    DWORD PTR [rsp+0x20],ebx
   14001a4b8:	call   0x14001ec7c
   14001a4bd:	lea    r8,[rbp+0x70]
   14001a4c1:	lea    r9,[rbp+0x170]
   14001a4c8:	sub    r8,rdi
   14001a4cb:	lea    rdx,[rbp+0x270]
   14001a4d2:	lea    rcx,[rdi+0x19]
   14001a4d6:	sub    r9,rdi
   14001a4d9:	test   BYTE PTR [rdx],0x1
   14001a4dc:	je     0x14001a4e8
   14001a4de:	or     BYTE PTR [rcx],0x10
   14001a4e1:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14001a4e6:	jmp    0x14001a4f5
   14001a4e8:	test   BYTE PTR [rdx],0x2
   14001a4eb:	je     0x14001a4fd
   14001a4ed:	or     BYTE PTR [rcx],0x20
   14001a4f0:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   14001a4f5:	mov    BYTE PTR [rcx+0x100],al
   14001a4fb:	jmp    0x14001a504
   14001a4fd:	mov    BYTE PTR [rcx+0x100],0x0
   14001a504:	inc    rcx
   14001a507:	add    rdx,0x2
   14001a50b:	dec    rbx
   14001a50e:	jne    0x14001a4d9
   14001a510:	jmp    0x14001a551
   14001a512:	xor    edx,edx
   14001a514:	lea    rcx,[rdi+0x19]
   14001a518:	lea    r8d,[rdx-0x61]
   14001a51c:	lea    eax,[r8+0x20]
   14001a520:	cmp    eax,0x19
   14001a523:	ja     0x14001a52d
   14001a525:	or     BYTE PTR [rcx],0x10
   14001a528:	lea    eax,[rdx+0x20]
   14001a52b:	jmp    0x14001a539
   14001a52d:	cmp    r8d,0x19
   14001a531:	ja     0x14001a541
   14001a533:	or     BYTE PTR [rcx],0x20
   14001a536:	lea    eax,[rdx-0x20]
   14001a539:	mov    BYTE PTR [rcx+0x100],al
   14001a53f:	jmp    0x14001a548
   14001a541:	mov    BYTE PTR [rcx+0x100],0x0
   14001a548:	inc    edx
   14001a54a:	inc    rcx
   14001a54d:	cmp    edx,ebx
   14001a54f:	jb     0x14001a518
   14001a551:	mov    rcx,QWORD PTR [rbp+0x470]
   14001a558:	xor    rcx,rsp
   14001a55b:	call   0x1400130a0
   14001a560:	lea    r11,[rsp+0x580]
   14001a568:	mov    rbx,QWORD PTR [r11+0x18]
   14001a56c:	mov    rdi,QWORD PTR [r11+0x20]
   14001a570:	mov    rsp,r11
   14001a573:	pop    rbp
   14001a574:	ret    
   14001a575:	int3   
   14001a576:	int3   
   14001a577:	int3   
   14001a578:	mov    QWORD PTR [rsp+0x10],rbx
   14001a57d:	push   rdi
   14001a57e:	sub    rsp,0x20
   14001a582:	call   0x140017170
   14001a587:	mov    rdi,rax
   14001a58a:	mov    ecx,DWORD PTR [rip+0x1d658]        # 0x140037be8
   14001a590:	test   DWORD PTR [rax+0xc8],ecx
   14001a596:	je     0x14001a5ab
   14001a598:	cmp    QWORD PTR [rax+0xc0],0x0
   14001a5a0:	je     0x14001a5ab
   14001a5a2:	mov    rbx,QWORD PTR [rax+0xb8]
   14001a5a9:	jmp    0x14001a617
   14001a5ab:	mov    ecx,0xd
   14001a5b0:	call   0x14001cde8
   14001a5b5:	nop
   14001a5b6:	mov    rbx,QWORD PTR [rdi+0xb8]
   14001a5bd:	mov    QWORD PTR [rsp+0x30],rbx
   14001a5c2:	cmp    rbx,QWORD PTR [rip+0x1d1d7]        # 0x1400377a0
   14001a5c9:	je     0x14001a60d
   14001a5cb:	test   rbx,rbx
   14001a5ce:	je     0x14001a5eb
   14001a5d0:	lock dec DWORD PTR [rbx]
   14001a5d3:	jne    0x14001a5eb
   14001a5d5:	lea    rax,[rip+0x1cea4]        # 0x140037480
   14001a5dc:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a5e1:	cmp    rcx,rax
   14001a5e4:	je     0x14001a5eb
   14001a5e6:	call   0x14001392c
   14001a5eb:	mov    rax,QWORD PTR [rip+0x1d1ae]        # 0x1400377a0
   14001a5f2:	mov    QWORD PTR [rdi+0xb8],rax
   14001a5f9:	mov    rax,QWORD PTR [rip+0x1d1a0]        # 0x1400377a0
   14001a600:	mov    QWORD PTR [rsp+0x30],rax
   14001a605:	lock inc DWORD PTR [rax]
   14001a608:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a60d:	mov    ecx,0xd
   14001a612:	call   0x14001cfd8
   14001a617:	test   rbx,rbx
   14001a61a:	jne    0x14001a624
   14001a61c:	lea    ecx,[rbx+0x20]
   14001a61f:	call   0x140015948
   14001a624:	mov    rax,rbx
   14001a627:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a62c:	add    rsp,0x20
   14001a630:	pop    rdi
   14001a631:	ret    
   14001a632:	int3   
   14001a633:	int3   
   14001a634:	mov    rax,rsp
   14001a637:	mov    QWORD PTR [rax+0x8],rbx
   14001a63b:	mov    QWORD PTR [rax+0x10],rsi
   14001a63f:	mov    QWORD PTR [rax+0x18],rdi
   14001a643:	mov    QWORD PTR [rax+0x20],r14
   14001a647:	push   r15
   14001a649:	sub    rsp,0x30
   14001a64d:	mov    edi,ecx
   14001a64f:	or     r15d,0xffffffff
   14001a653:	call   0x140017170
   14001a658:	mov    rsi,rax
   14001a65b:	call   0x14001a578
   14001a660:	mov    rbx,QWORD PTR [rsi+0xb8]
   14001a667:	mov    ecx,edi
   14001a669:	call   0x14001a284
   14001a66e:	mov    r14d,eax
   14001a671:	cmp    eax,DWORD PTR [rbx+0x4]
   14001a674:	je     0x14001a855
   14001a67a:	mov    ecx,0x228
   14001a67f:	call   0x140015d94
   14001a684:	mov    rbx,rax
   14001a687:	xor    edi,edi
   14001a689:	test   rax,rax
   14001a68c:	je     0x14001a85a
   14001a692:	mov    rax,QWORD PTR [rsi+0xb8]
   14001a699:	mov    rcx,rbx
   14001a69c:	lea    edx,[rdi+0x4]
   14001a69f:	lea    r8d,[rdx+0x7c]
   14001a6a3:	movups xmm0,XMMWORD PTR [rax]
   14001a6a6:	movups XMMWORD PTR [rcx],xmm0
   14001a6a9:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001a6ad:	movups XMMWORD PTR [rcx+0x10],xmm1
   14001a6b1:	movups xmm0,XMMWORD PTR [rax+0x20]
   14001a6b5:	movups XMMWORD PTR [rcx+0x20],xmm0
   14001a6b9:	movups xmm1,XMMWORD PTR [rax+0x30]
   14001a6bd:	movups XMMWORD PTR [rcx+0x30],xmm1
   14001a6c1:	movups xmm0,XMMWORD PTR [rax+0x40]
   14001a6c5:	movups XMMWORD PTR [rcx+0x40],xmm0
   14001a6c9:	movups xmm1,XMMWORD PTR [rax+0x50]
   14001a6cd:	movups XMMWORD PTR [rcx+0x50],xmm1
   14001a6d1:	movups xmm0,XMMWORD PTR [rax+0x60]
   14001a6d5:	movups XMMWORD PTR [rcx+0x60],xmm0
   14001a6d9:	add    rcx,r8
   14001a6dc:	movups xmm1,XMMWORD PTR [rax+0x70]
   14001a6e0:	movups XMMWORD PTR [rcx-0x10],xmm1
   14001a6e4:	add    rax,r8
   14001a6e7:	dec    rdx
   14001a6ea:	jne    0x14001a6a3
   14001a6ec:	movups xmm0,XMMWORD PTR [rax]
   14001a6ef:	movups XMMWORD PTR [rcx],xmm0
   14001a6f2:	movups xmm1,XMMWORD PTR [rax+0x10]
   14001a6f6:	movups XMMWORD PTR [rcx+0x10],xmm1
   14001a6fa:	mov    rax,QWORD PTR [rax+0x20]
   14001a6fe:	mov    QWORD PTR [rcx+0x20],rax
   14001a702:	mov    DWORD PTR [rbx],edi
   14001a704:	mov    rdx,rbx
   14001a707:	mov    ecx,r14d
   14001a70a:	call   0x14001a878
   14001a70f:	mov    r15d,eax
   14001a712:	test   eax,eax
   14001a714:	jne    0x14001a82f
   14001a71a:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001a721:	lea    r14,[rip+0x1cd58]        # 0x140037480
   14001a728:	lock dec DWORD PTR [rcx]
   14001a72b:	jne    0x14001a73e
   14001a72d:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001a734:	cmp    rcx,r14
   14001a737:	je     0x14001a73e
   14001a739:	call   0x14001392c
   14001a73e:	mov    QWORD PTR [rsi+0xb8],rbx
   14001a745:	lock inc DWORD PTR [rbx]
   14001a748:	test   BYTE PTR [rsi+0xc8],0x2
   14001a74f:	jne    0x14001a85a
   14001a755:	test   BYTE PTR [rip+0x1d48c],0x1        # 0x140037be8
   14001a75c:	jne    0x14001a85a
   14001a762:	mov    esi,0xd
   14001a767:	mov    ecx,esi
   14001a769:	call   0x14001cde8
   14001a76e:	nop
   14001a76f:	mov    eax,DWORD PTR [rbx+0x4]
   14001a772:	mov    DWORD PTR [rip+0x1f778],eax        # 0x140039ef0
   14001a778:	mov    eax,DWORD PTR [rbx+0x8]
   14001a77b:	mov    DWORD PTR [rip+0x1f773],eax        # 0x140039ef4
   14001a781:	mov    rax,QWORD PTR [rbx+0x220]
   14001a788:	mov    QWORD PTR [rip+0x1f779],rax        # 0x140039f08
   14001a78f:	mov    edx,edi
   14001a791:	lea    r8,[rip+0xfffffffffffe5868]        # 0x140000000
   14001a798:	mov    DWORD PTR [rsp+0x20],edx
   14001a79c:	cmp    edx,0x5
   14001a79f:	jge    0x14001a7b6
   14001a7a1:	movsxd rcx,edx
   14001a7a4:	movzx  eax,WORD PTR [rbx+rcx*2+0xc]
   14001a7a9:	mov    WORD PTR [r8+rcx*2+0x39ef8],ax
   14001a7b2:	inc    edx
   14001a7b4:	jmp    0x14001a798
   14001a7b6:	mov    edx,edi
   14001a7b8:	mov    DWORD PTR [rsp+0x20],edx
   14001a7bc:	cmp    edx,0x101
   14001a7c2:	jge    0x14001a7d7
   14001a7c4:	movsxd rcx,edx
   14001a7c7:	mov    al,BYTE PTR [rcx+rbx*1+0x18]
   14001a7cb:	mov    BYTE PTR [rcx+r8*1+0x37270],al
   14001a7d3:	inc    edx
   14001a7d5:	jmp    0x14001a7b8
   14001a7d7:	mov    DWORD PTR [rsp+0x20],edi
   14001a7db:	cmp    edi,0x100
   14001a7e1:	jge    0x14001a7f9
   14001a7e3:	movsxd rcx,edi
   14001a7e6:	mov    al,BYTE PTR [rcx+rbx*1+0x119]
   14001a7ed:	mov    BYTE PTR [rcx+r8*1+0x37380],al
   14001a7f5:	inc    edi
   14001a7f7:	jmp    0x14001a7d7
   14001a7f9:	mov    rcx,QWORD PTR [rip+0x1cfa0]        # 0x1400377a0
   14001a800:	or     eax,0xffffffff
   14001a803:	lock xadd DWORD PTR [rcx],eax
   14001a807:	dec    eax
   14001a809:	jne    0x14001a81c
   14001a80b:	mov    rcx,QWORD PTR [rip+0x1cf8e]        # 0x1400377a0
   14001a812:	cmp    rcx,r14
   14001a815:	je     0x14001a81c
   14001a817:	call   0x14001392c
   14001a81c:	mov    QWORD PTR [rip+0x1cf7d],rbx        # 0x1400377a0
   14001a823:	lock inc DWORD PTR [rbx]
   14001a826:	mov    ecx,esi
   14001a828:	call   0x14001cfd8
   14001a82d:	jmp    0x14001a85a
   14001a82f:	cmp    eax,0xffffffff
   14001a832:	jne    0x14001a85a
   14001a834:	lea    r14,[rip+0x1cc45]        # 0x140037480
   14001a83b:	cmp    rbx,r14
   14001a83e:	je     0x14001a848
   14001a840:	mov    rcx,rbx
   14001a843:	call   0x14001392c
   14001a848:	call   0x1400161e8
   14001a84d:	mov    DWORD PTR [rax],0x16
   14001a853:	jmp    0x14001a85a
   14001a855:	xor    edi,edi
   14001a857:	mov    r15d,edi
   14001a85a:	mov    eax,r15d
   14001a85d:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a862:	mov    rsi,QWORD PTR [rsp+0x48]
   14001a867:	mov    rdi,QWORD PTR [rsp+0x50]
   14001a86c:	mov    r14,QWORD PTR [rsp+0x58]
   14001a871:	add    rsp,0x30
   14001a875:	pop    r15
   14001a877:	ret    
   14001a878:	mov    QWORD PTR [rsp+0x18],rbx
   14001a87d:	mov    QWORD PTR [rsp+0x20],rbp
   14001a882:	push   rsi
   14001a883:	push   rdi
   14001a884:	push   r12
   14001a886:	push   r14
   14001a888:	push   r15
   14001a88a:	sub    rsp,0x40
   14001a88e:	mov    rax,QWORD PTR [rip+0x1c77b]        # 0x140037010
   14001a895:	xor    rax,rsp
   14001a898:	mov    QWORD PTR [rsp+0x38],rax
   14001a89d:	mov    rbx,rdx
   14001a8a0:	call   0x14001a284
   14001a8a5:	xor    esi,esi
   14001a8a7:	mov    edi,eax
   14001a8a9:	test   eax,eax
   14001a8ab:	jne    0x14001a8ba
   14001a8ad:	mov    rcx,rbx
   14001a8b0:	call   0x14001a304
   14001a8b5:	jmp    0x14001aafe
   14001a8ba:	lea    r12,[rip+0x1cdef]        # 0x1400376b0
   14001a8c1:	mov    ebp,esi
   14001a8c3:	mov    r15d,0x1
   14001a8c9:	mov    rax,r12
   14001a8cc:	cmp    DWORD PTR [rax],edi
   14001a8ce:	je     0x14001aa0c
   14001a8d4:	add    ebp,r15d
   14001a8d7:	add    rax,0x30
   14001a8db:	cmp    ebp,0x5
   14001a8de:	jb     0x14001a8cc
   14001a8e0:	lea    eax,[rdi-0xfde8]
   14001a8e6:	cmp    eax,r15d
   14001a8e9:	jbe    0x14001aa04
   14001a8ef:	movzx  ecx,di
   14001a8f2:	call   QWORD PTR [rip+0xc9f0]        # 0x1400272e8
   14001a8f8:	test   eax,eax
   14001a8fa:	je     0x14001aa04
   14001a900:	lea    rdx,[rsp+0x20]
   14001a905:	mov    ecx,edi
   14001a907:	call   QWORD PTR [rip+0xc9f3]        # 0x140027300
   14001a90d:	test   eax,eax
   14001a90f:	je     0x14001a9f8
   14001a915:	lea    rcx,[rbx+0x18]
   14001a919:	xor    edx,edx
   14001a91b:	mov    r8d,0x101
   14001a921:	call   0x140014d80
   14001a926:	mov    DWORD PTR [rbx+0x4],edi
   14001a929:	mov    QWORD PTR [rbx+0x220],rsi
   14001a930:	cmp    DWORD PTR [rsp+0x20],r15d
   14001a935:	jbe    0x14001a9e1
   14001a93b:	lea    rdx,[rsp+0x26]
   14001a940:	cmp    BYTE PTR [rsp+0x26],sil
   14001a945:	je     0x14001a980
   14001a947:	cmp    BYTE PTR [rdx+0x1],sil
   14001a94b:	je     0x14001a980
   14001a94d:	movzx  edi,BYTE PTR [rdx+0x1]
   14001a951:	movzx  r8d,BYTE PTR [rdx]
   14001a955:	cmp    r8d,edi
   14001a958:	ja     0x14001a977
   14001a95a:	lea    ecx,[r8+0x1]
   14001a95e:	lea    rax,[rbx+0x18]
   14001a962:	add    rax,rcx
   14001a965:	sub    edi,r8d
   14001a968:	lea    ecx,[r15+rdi*1]
   14001a96c:	or     BYTE PTR [rax],0x4
   14001a96f:	add    rax,r15
   14001a972:	sub    rcx,r15
   14001a975:	jne    0x14001a96c
   14001a977:	add    rdx,0x2
   14001a97b:	cmp    BYTE PTR [rdx],sil
   14001a97e:	jne    0x14001a947
   14001a980:	lea    rax,[rbx+0x1a]
   14001a984:	mov    ecx,0xfe
   14001a989:	or     BYTE PTR [rax],0x8
   14001a98c:	add    rax,r15
   14001a98f:	sub    rcx,r15
   14001a992:	jne    0x14001a989
   14001a994:	mov    ecx,DWORD PTR [rbx+0x4]
   14001a997:	sub    ecx,0x3a4
   14001a99d:	je     0x14001a9cd
   14001a99f:	sub    ecx,0x4
   14001a9a2:	je     0x14001a9c4
   14001a9a4:	sub    ecx,0xd
   14001a9a7:	je     0x14001a9bb
   14001a9a9:	dec    ecx
   14001a9ab:	je     0x14001a9b2
   14001a9ad:	mov    rax,rsi
   14001a9b0:	jmp    0x14001a9d4
   14001a9b2:	mov    rax,QWORD PTR [rip+0xf5ef]        # 0x140029fa8
   14001a9b9:	jmp    0x14001a9d4
   14001a9bb:	mov    rax,QWORD PTR [rip+0xf5de]        # 0x140029fa0
   14001a9c2:	jmp    0x14001a9d4
   14001a9c4:	mov    rax,QWORD PTR [rip+0xf5cd]        # 0x140029f98
   14001a9cb:	jmp    0x14001a9d4
   14001a9cd:	mov    rax,QWORD PTR [rip+0xf5bc]        # 0x140029f90
   14001a9d4:	mov    QWORD PTR [rbx+0x220],rax
   14001a9db:	mov    DWORD PTR [rbx+0x8],r15d
   14001a9df:	jmp    0x14001a9e4
   14001a9e1:	mov    DWORD PTR [rbx+0x8],esi
   14001a9e4:	lea    rdi,[rbx+0xc]
   14001a9e8:	movzx  eax,si
   14001a9eb:	mov    ecx,0x6
   14001a9f0:	rep stos WORD PTR es:[rdi],ax
   14001a9f3:	jmp    0x14001aaf6
   14001a9f8:	cmp    DWORD PTR [rip+0x1f512],esi        # 0x140039f10
   14001a9fe:	jne    0x14001a8ad
   14001aa04:	or     eax,0xffffffff
   14001aa07:	jmp    0x14001ab00
   14001aa0c:	lea    rcx,[rbx+0x18]
   14001aa10:	xor    edx,edx
   14001aa12:	mov    r8d,0x101
   14001aa18:	call   0x140014d80
   14001aa1d:	mov    eax,ebp
   14001aa1f:	lea    r9,[r12+0x10]
   14001aa24:	lea    r11,[rax+rax*2]
   14001aa28:	lea    r14,[rip+0x1cc79]        # 0x1400376a8
   14001aa2f:	mov    ebp,0x4
   14001aa34:	shl    r11,0x4
   14001aa38:	add    r9,r11
   14001aa3b:	mov    rdx,r9
   14001aa3e:	cmp    BYTE PTR [r9],sil
   14001aa41:	je     0x14001aa83
   14001aa43:	cmp    BYTE PTR [rdx+0x1],sil
   14001aa47:	je     0x14001aa83
   14001aa49:	movzx  r8d,BYTE PTR [rdx]
   14001aa4d:	movzx  eax,BYTE PTR [rdx+0x1]
   14001aa51:	cmp    r8d,eax
   14001aa54:	ja     0x14001aa7a
   14001aa56:	lea    r10d,[r8+0x1]
   14001aa5a:	cmp    r10d,0x101
   14001aa61:	jae    0x14001aa7a
   14001aa63:	mov    al,BYTE PTR [r14]
   14001aa66:	add    r8d,r15d
   14001aa69:	or     BYTE PTR [r10+rbx*1+0x18],al
   14001aa6e:	movzx  eax,BYTE PTR [rdx+0x1]
   14001aa72:	add    r10d,r15d
   14001aa75:	cmp    r8d,eax
   14001aa78:	jbe    0x14001aa5a
   14001aa7a:	add    rdx,0x2
   14001aa7e:	cmp    BYTE PTR [rdx],sil
   14001aa81:	jne    0x14001aa43
   14001aa83:	add    r9,0x8
   14001aa87:	add    r14,r15
   14001aa8a:	sub    rbp,r15
   14001aa8d:	jne    0x14001aa3b
   14001aa8f:	mov    DWORD PTR [rbx+0x4],edi
   14001aa92:	mov    DWORD PTR [rbx+0x8],r15d
   14001aa96:	sub    edi,0x3a4
   14001aa9c:	je     0x14001aac7
   14001aa9e:	sub    edi,0x4
   14001aaa1:	je     0x14001aabe
   14001aaa3:	sub    edi,0xd
   14001aaa6:	je     0x14001aab5
   14001aaa8:	dec    edi
   14001aaaa:	jne    0x14001aace
   14001aaac:	mov    rsi,QWORD PTR [rip+0xf4f5]        # 0x140029fa8
   14001aab3:	jmp    0x14001aace
   14001aab5:	mov    rsi,QWORD PTR [rip+0xf4e4]        # 0x140029fa0
   14001aabc:	jmp    0x14001aace
   14001aabe:	mov    rsi,QWORD PTR [rip+0xf4d3]        # 0x140029f98
   14001aac5:	jmp    0x14001aace
   14001aac7:	mov    rsi,QWORD PTR [rip+0xf4c2]        # 0x140029f90
   14001aace:	sub    r11,rbx
   14001aad1:	mov    QWORD PTR [rbx+0x220],rsi
   14001aad8:	lea    rcx,[rbx+0xc]
   14001aadc:	lea    rdi,[r11+r12*1]
   14001aae0:	mov    edx,0x6
   14001aae5:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14001aaea:	mov    WORD PTR [rcx],ax
   14001aaed:	lea    rcx,[rcx+0x2]
   14001aaf1:	sub    rdx,r15
   14001aaf4:	jne    0x14001aae5
   14001aaf6:	mov    rcx,rbx
   14001aaf9:	call   0x14001a394
   14001aafe:	xor    eax,eax
   14001ab00:	mov    rcx,QWORD PTR [rsp+0x38]
   14001ab05:	xor    rcx,rsp
   14001ab08:	call   0x1400130a0
   14001ab0d:	lea    r11,[rsp+0x40]
   14001ab12:	mov    rbx,QWORD PTR [r11+0x40]
   14001ab16:	mov    rbp,QWORD PTR [r11+0x48]
   14001ab1a:	mov    rsp,r11
   14001ab1d:	pop    r15
   14001ab1f:	pop    r14
   14001ab21:	pop    r12
   14001ab23:	pop    rdi
   14001ab24:	pop    rsi
   14001ab25:	ret    
   14001ab26:	int3   
   14001ab27:	int3   
   14001ab28:	int3   
   14001ab29:	int3   
   14001ab2a:	int3   
   14001ab2b:	int3   
   14001ab2c:	int3   
   14001ab2d:	int3   
   14001ab2e:	int3   
   14001ab2f:	int3   
   14001ab30:	int3   
   14001ab31:	int3   
   14001ab32:	int3   
   14001ab33:	int3   
   14001ab34:	int3   
   14001ab35:	int3   
   14001ab36:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001ab40:	sub    rsp,0x10
   14001ab44:	mov    QWORD PTR [rsp],r10
   14001ab48:	mov    QWORD PTR [rsp+0x8],r11
   14001ab4d:	xor    r11,r11
   14001ab50:	lea    r10,[rsp+0x18]
   14001ab55:	sub    r10,rax
   14001ab58:	cmovb  r10,r11
   14001ab5c:	mov    r11,QWORD PTR gs:0x10
   14001ab65:	cmp    r10,r11
   14001ab68:	jae    0x14001ab80
   14001ab6a:	and    r10w,0xf000
   14001ab70:	lea    r11,[r11-0x1000]
   14001ab77:	mov    BYTE PTR [r11],0x0
   14001ab7b:	cmp    r10,r11
   14001ab7e:	jne    0x14001ab70
   14001ab80:	mov    r10,QWORD PTR [rsp]
   14001ab84:	mov    r11,QWORD PTR [rsp+0x8]
   14001ab89:	add    rsp,0x10
   14001ab8d:	ret    
   14001ab8e:	int3   
   14001ab8f:	int3   
   14001ab90:	rex push rdi
   14001ab92:	sub    rsp,0x20
   14001ab96:	lea    rdi,[rip+0x1cef3]        # 0x140037a90
   14001ab9d:	cmp    QWORD PTR [rip+0x1cedc],rdi        # 0x140037a80
   14001aba4:	je     0x14001abd1
   14001aba6:	mov    ecx,0xc
   14001abab:	call   0x14001cde8
   14001abb0:	nop
   14001abb1:	mov    rdx,rdi
   14001abb4:	lea    rcx,[rip+0x1cec5]        # 0x140037a80
   14001abbb:	call   0x14001a1f8
   14001abc0:	mov    QWORD PTR [rip+0x1ceb9],rax        # 0x140037a80
   14001abc7:	mov    ecx,0xc
   14001abcc:	call   0x14001cfd8
   14001abd1:	add    rsp,0x20
   14001abd5:	pop    rdi
   14001abd6:	ret    
   14001abd7:	int3   
   14001abd8:	mov    rax,rsp
   14001abdb:	mov    QWORD PTR [rax+0x10],rbx
   14001abdf:	mov    QWORD PTR [rax+0x18],rbp
   14001abe3:	mov    QWORD PTR [rax+0x20],rsi
   14001abe7:	mov    DWORD PTR [rax+0x8],ecx
   14001abea:	push   rdi
   14001abeb:	sub    rsp,0x20
   14001abef:	mov    rcx,rdx
   14001abf2:	mov    rbx,rdx
   14001abf5:	call   0x14001ef08
   14001abfa:	mov    ecx,DWORD PTR [rbx+0x18]
   14001abfd:	movsxd rsi,eax
   14001ac00:	test   cl,0x82
   14001ac03:	jne    0x14001ac1c
   14001ac05:	call   0x1400161e8
   14001ac0a:	mov    DWORD PTR [rax],0x9
   14001ac10:	or     DWORD PTR [rbx+0x18],0x20
   14001ac14:	or     eax,0xffffffff
   14001ac17:	jmp    0x14001ad4e
   14001ac1c:	test   cl,0x40
   14001ac1f:	je     0x14001ac2e
   14001ac21:	call   0x1400161e8
   14001ac26:	mov    DWORD PTR [rax],0x22
   14001ac2c:	jmp    0x14001ac10
   14001ac2e:	xor    edi,edi
   14001ac30:	test   cl,0x1
   14001ac33:	je     0x14001ac4e
   14001ac35:	mov    DWORD PTR [rbx+0x8],edi
   14001ac38:	test   cl,0x10
   14001ac3b:	je     0x14001acca
   14001ac41:	mov    rax,QWORD PTR [rbx+0x10]
   14001ac45:	and    ecx,0xfffffffe
   14001ac48:	mov    QWORD PTR [rbx],rax
   14001ac4b:	mov    DWORD PTR [rbx+0x18],ecx
   14001ac4e:	mov    eax,DWORD PTR [rbx+0x18]
   14001ac51:	mov    DWORD PTR [rbx+0x8],edi
   14001ac54:	and    eax,0xffffffef
   14001ac57:	or     eax,0x2
   14001ac5a:	mov    DWORD PTR [rbx+0x18],eax
   14001ac5d:	test   eax,0x10c
   14001ac62:	jne    0x14001ac93
   14001ac64:	call   0x14001daec
   14001ac69:	add    rax,0x30
   14001ac6d:	cmp    rbx,rax
   14001ac70:	je     0x14001ac80
   14001ac72:	call   0x14001daec
   14001ac77:	add    rax,0x60
   14001ac7b:	cmp    rbx,rax
   14001ac7e:	jne    0x14001ac8b
   14001ac80:	mov    ecx,esi
   14001ac82:	call   0x14001ef30
   14001ac87:	test   eax,eax
   14001ac89:	jne    0x14001ac93
   14001ac8b:	mov    rcx,rbx
   14001ac8e:	call   0x14001f9e4
   14001ac93:	test   DWORD PTR [rbx+0x18],0x108
   14001ac9a:	je     0x14001ad2b
   14001aca0:	mov    ebp,DWORD PTR [rbx]
   14001aca2:	mov    rdx,QWORD PTR [rbx+0x10]
   14001aca6:	sub    ebp,DWORD PTR [rbx+0x10]
   14001aca9:	lea    rax,[rdx+0x1]
   14001acad:	mov    QWORD PTR [rbx],rax
   14001acb0:	mov    eax,DWORD PTR [rbx+0x24]
   14001acb3:	dec    eax
   14001acb5:	mov    DWORD PTR [rbx+0x8],eax
   14001acb8:	test   ebp,ebp
   14001acba:	jle    0x14001acd5
   14001acbc:	mov    r8d,ebp
   14001acbf:	mov    ecx,esi
   14001acc1:	call   0x14001ef90
   14001acc6:	mov    edi,eax
   14001acc8:	jmp    0x14001ad1f
   14001acca:	or     ecx,0x20
   14001accd:	mov    DWORD PTR [rbx+0x18],ecx
   14001acd0:	jmp    0x14001ac14
   14001acd5:	lea    eax,[rsi+0x2]
   14001acd8:	cmp    eax,0x1
   14001acdb:	jbe    0x14001acfb
   14001acdd:	mov    rcx,rsi
   14001ace0:	mov    rax,rsi
   14001ace3:	lea    r8,[rip+0x1ede6]        # 0x140039ad0
   14001acea:	and    ecx,0x1f
   14001aced:	sar    rax,0x5
   14001acf1:	imul   rdx,rcx,0x58
   14001acf5:	add    rdx,QWORD PTR [r8+rax*8]
   14001acf9:	jmp    0x14001ad02
   14001acfb:	lea    rdx,[rip+0x1c4be]        # 0x1400371c0
   14001ad02:	test   BYTE PTR [rdx+0x8],0x20
   14001ad06:	je     0x14001ad1f
   14001ad08:	xor    edx,edx
   14001ad0a:	mov    ecx,esi
   14001ad0c:	lea    r8d,[rdx+0x2]
   14001ad10:	call   0x14001f868
   14001ad15:	cmp    rax,0xffffffffffffffff
   14001ad19:	je     0x14001ac10
   14001ad1f:	mov    rcx,QWORD PTR [rbx+0x10]
   14001ad23:	mov    al,BYTE PTR [rsp+0x30]
   14001ad27:	mov    BYTE PTR [rcx],al
   14001ad29:	jmp    0x14001ad41
   14001ad2b:	mov    ebp,0x1
   14001ad30:	lea    rdx,[rsp+0x30]
   14001ad35:	mov    ecx,esi
   14001ad37:	mov    r8d,ebp
   14001ad3a:	call   0x14001ef90
   14001ad3f:	mov    edi,eax
   14001ad41:	cmp    edi,ebp
   14001ad43:	jne    0x14001ac10
   14001ad49:	movzx  eax,BYTE PTR [rsp+0x30]
   14001ad4e:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ad53:	mov    rbp,QWORD PTR [rsp+0x40]
   14001ad58:	mov    rsi,QWORD PTR [rsp+0x48]
   14001ad5d:	add    rsp,0x20
   14001ad61:	pop    rdi
   14001ad62:	ret    
   14001ad63:	int3   
   14001ad64:	mov    QWORD PTR [rsp+0x18],rbx
   14001ad69:	push   rbp
   14001ad6a:	push   rsi
   14001ad6b:	push   rdi
   14001ad6c:	push   r12
   14001ad6e:	push   r13
   14001ad70:	push   r14
   14001ad72:	push   r15
   14001ad74:	lea    rbp,[rsp-0x3e0]
   14001ad7c:	sub    rsp,0x4e0
   14001ad83:	mov    rax,QWORD PTR [rip+0x1c286]        # 0x140037010
   14001ad8a:	xor    rax,rsp
   14001ad8d:	mov    QWORD PTR [rbp+0x3d0],rax
   14001ad94:	xor    eax,eax
   14001ad96:	mov    rsi,rcx
   14001ad99:	mov    QWORD PTR [rbp-0x80],rcx
   14001ad9d:	mov    QWORD PTR [rbp-0x78],rdx
   14001ada1:	lea    rcx,[rbp-0x70]
   14001ada5:	mov    rdx,r8
   14001ada8:	mov    r12,r9
   14001adab:	mov    QWORD PTR [rsp+0x50],r9
   14001adb0:	mov    DWORD PTR [rsp+0x78],eax
   14001adb4:	mov    r14d,eax
   14001adb7:	mov    DWORD PTR [rsp+0x5c],eax
   14001adbb:	mov    edi,eax
   14001adbd:	mov    DWORD PTR [rsp+0x44],eax
   14001adc1:	mov    DWORD PTR [rsp+0x48],eax
   14001adc5:	mov    DWORD PTR [rsp+0x74],eax
   14001adc9:	mov    DWORD PTR [rsp+0x70],eax
   14001adcd:	mov    ebx,eax
   14001adcf:	mov    DWORD PTR [rsp+0x58],eax
   14001add3:	call   0x140014b34
   14001add8:	call   0x1400161e8
   14001addd:	xor    r10d,r10d
   14001ade0:	mov    QWORD PTR [rbp-0x48],rax
   14001ade4:	test   rsi,rsi
   14001ade7:	jne    0x14001ae13
   14001ade9:	call   0x1400161e8
   14001adee:	mov    DWORD PTR [rax],0x16
   14001adf4:	call   0x140013f54
   14001adf9:	xor    ecx,ecx
   14001adfb:	cmp    BYTE PTR [rbp-0x58],cl
   14001adfe:	je     0x14001ae0b
   14001ae00:	mov    rax,QWORD PTR [rbp-0x60]
   14001ae04:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001ae0b:	or     eax,0xffffffff
   14001ae0e:	jmp    0x14001b612
   14001ae13:	mov    r8,QWORD PTR [rbp-0x78]
   14001ae17:	test   r8,r8
   14001ae1a:	je     0x14001ade9
   14001ae1c:	movzx  r15d,WORD PTR [r8]
   14001ae20:	mov    edx,r10d
   14001ae23:	mov    r13d,r10d
   14001ae26:	mov    r9d,r10d
   14001ae29:	mov    QWORD PTR [rbp-0x50],r10
   14001ae2d:	mov    DWORD PTR [rsp+0x40],edx
   14001ae31:	test   r15w,r15w
   14001ae35:	je     0x14001b5ff
   14001ae3b:	or     esi,0xffffffff
   14001ae3e:	lea    r11d,[rsi+0x21]
   14001ae42:	add    r8,0x2
   14001ae46:	mov    ecx,0x58
   14001ae4b:	mov    QWORD PTR [rbp-0x78],r8
   14001ae4f:	test   edx,edx
   14001ae51:	js     0x14001b5f0
   14001ae57:	movzx  eax,r15w
   14001ae5b:	sub    ax,r11w
   14001ae5f:	cmp    ax,cx
   14001ae62:	ja     0x14001ae79
   14001ae64:	lea    rcx,[rip+0x13c05]        # 0x14002ea70
   14001ae6b:	movzx  eax,r15w
   14001ae6f:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14001ae74:	and    ecx,0xf
   14001ae77:	jmp    0x14001ae7c
   14001ae79:	mov    ecx,r10d
   14001ae7c:	movsxd rax,ecx
   14001ae7f:	lea    rcx,[rax+rax*8]
   14001ae83:	movsxd rax,r9d
   14001ae86:	add    rcx,rax
   14001ae89:	lea    rax,[rip+0x13be0]        # 0x14002ea70
   14001ae90:	movzx  r9d,BYTE PTR [rcx+rax*1]
   14001ae95:	shr    r9d,0x4
   14001ae99:	mov    DWORD PTR [rsp+0x6c],r9d
   14001ae9e:	cmp    r9d,0x8
   14001aea2:	je     0x14001b824
   14001aea8:	mov    ecx,r9d
   14001aeab:	test   r9d,r9d
   14001aeae:	je     0x14001b6e8
   14001aeb4:	dec    ecx
   14001aeb6:	je     0x14001b7fd
   14001aebc:	dec    ecx
   14001aebe:	je     0x14001b7a2
   14001aec4:	dec    ecx
   14001aec6:	je     0x14001b760
   14001aecc:	dec    ecx
   14001aece:	je     0x14001b753
   14001aed4:	dec    ecx
   14001aed6:	je     0x14001b712
   14001aedc:	dec    ecx
   14001aede:	je     0x14001b63c
   14001aee4:	dec    ecx
   14001aee6:	jne    0x14001b5e2
   14001aeec:	movzx  ecx,r15w
   14001aef0:	cmp    ecx,0x64
   14001aef3:	jg     0x14001b109
   14001aef9:	je     0x14001b21f
   14001aeff:	cmp    ecx,0x41
   14001af02:	je     0x14001b0d1
   14001af08:	cmp    ecx,0x43
   14001af0b:	je     0x14001b05b
   14001af11:	lea    eax,[rcx-0x45]
   14001af14:	test   eax,0xfffffffd
   14001af19:	je     0x14001b0d1
   14001af1f:	cmp    ecx,0x53
   14001af22:	je     0x14001afe5
   14001af28:	mov    eax,0x58
   14001af2d:	cmp    ecx,eax
   14001af2f:	je     0x14001b192
   14001af35:	cmp    ecx,0x5a
   14001af38:	je     0x14001af84
   14001af3a:	cmp    ecx,0x61
   14001af3d:	je     0x14001b0dd
   14001af43:	cmp    ecx,0x63
   14001af46:	je     0x14001b067
   14001af4c:	mov    edi,0x2d
   14001af51:	cmp    DWORD PTR [rsp+0x70],r10d
   14001af56:	jne    0x14001b5a8
   14001af5c:	test   r14b,0x40
   14001af60:	je     0x14001b480
   14001af66:	bt     r14d,0x8
   14001af6b:	jae    0x14001b452
   14001af71:	mov    WORD PTR [rsp+0x60],di
   14001af76:	mov    edi,0x1
   14001af7b:	mov    DWORD PTR [rsp+0x48],edi
   14001af7f:	jmp    0x14001b484
   14001af84:	mov    rax,QWORD PTR [r12]
   14001af88:	add    r12,0x8
   14001af8c:	mov    QWORD PTR [rsp+0x50],r12
   14001af91:	test   rax,rax
   14001af94:	je     0x14001afcb
   14001af96:	mov    rbx,QWORD PTR [rax+0x8]
   14001af9a:	test   rbx,rbx
   14001af9d:	je     0x14001afcb
   14001af9f:	mov    edi,0x2d
   14001afa4:	bt     r14d,0xb
   14001afa9:	jae    0x14001afc0
   14001afab:	movsx  eax,WORD PTR [rax]
   14001afae:	mov    DWORD PTR [rsp+0x58],0x1
   14001afb6:	cdq    
   14001afb7:	sub    eax,edx
   14001afb9:	sar    eax,1
   14001afbb:	mov    r13d,eax
   14001afbe:	jmp    0x14001af51
   14001afc0:	movsx  r13d,WORD PTR [rax]
   14001afc4:	mov    DWORD PTR [rsp+0x58],r10d
   14001afc9:	jmp    0x14001af51
   14001afcb:	mov    rbx,QWORD PTR [rip+0x1d4c6]        # 0x140038498
   14001afd2:	mov    rcx,rbx
   14001afd5:	call   0x140015330
   14001afda:	xor    r10d,r10d
   14001afdd:	mov    r13,rax
   14001afe0:	jmp    0x14001af4c
   14001afe5:	test   r14d,0x830
   14001afec:	jne    0x14001aff1
   14001afee:	or     r14d,r11d
   14001aff1:	cmp    DWORD PTR [rsp+0x44],esi
   14001aff5:	mov    rbx,QWORD PTR [r12]
   14001aff9:	mov    eax,0x7fffffff
   14001affe:	cmove  edi,eax
   14001b001:	add    r12,0x8
   14001b005:	mov    QWORD PTR [rsp+0x50],r12
   14001b00a:	test   r11b,r14b
   14001b00d:	je     0x14001b152
   14001b013:	test   rbx,rbx
   14001b016:	mov    r13d,r10d
   14001b019:	cmove  rbx,QWORD PTR [rip+0x1d477]        # 0x140038498
   14001b021:	mov    rsi,rbx
   14001b024:	test   edi,edi
   14001b026:	jle    0x14001af4c
   14001b02c:	cmp    BYTE PTR [rsi],r10b
   14001b02f:	je     0x14001af4c
   14001b035:	movzx  ecx,BYTE PTR [rsi]
   14001b038:	lea    rdx,[rbp-0x70]
   14001b03c:	call   0x14001fa38
   14001b041:	xor    r10d,r10d
   14001b044:	test   eax,eax
   14001b046:	je     0x14001b04b
   14001b048:	inc    rsi
   14001b04b:	inc    r13d
   14001b04e:	inc    rsi
   14001b051:	cmp    r13d,edi
   14001b054:	jl     0x14001b02c
   14001b056:	jmp    0x14001af4c
   14001b05b:	test   r14d,0x830
   14001b062:	jne    0x14001b067
   14001b064:	or     r14d,r11d
   14001b067:	movzx  eax,WORD PTR [r12]
   14001b06c:	add    r12,0x8
   14001b070:	mov    DWORD PTR [rsp+0x58],0x1
   14001b078:	mov    QWORD PTR [rsp+0x50],r12
   14001b07d:	mov    WORD PTR [rsp+0x64],ax
   14001b082:	test   r11b,r14b
   14001b085:	je     0x14001b0be
   14001b087:	mov    BYTE PTR [rsp+0x68],al
   14001b08b:	mov    rax,QWORD PTR [rbp-0x70]
   14001b08f:	mov    BYTE PTR [rsp+0x69],r10b
   14001b094:	movsxd r8,DWORD PTR [rax+0xd4]
   14001b09b:	lea    r9,[rbp-0x70]
   14001b09f:	lea    rdx,[rsp+0x68]
   14001b0a4:	lea    rcx,[rbp-0x30]
   14001b0a8:	call   0x14001fcd0
   14001b0ad:	xor    r10d,r10d
   14001b0b0:	test   eax,eax
   14001b0b2:	jns    0x14001b0c2
   14001b0b4:	mov    DWORD PTR [rsp+0x70],0x1
   14001b0bc:	jmp    0x14001b0c2
   14001b0be:	mov    WORD PTR [rbp-0x30],ax
   14001b0c2:	lea    rbx,[rbp-0x30]
   14001b0c6:	mov    r13d,0x1
   14001b0cc:	jmp    0x14001af4c
   14001b0d1:	mov    DWORD PTR [rsp+0x74],0x1
   14001b0d9:	add    r15w,r11w
   14001b0dd:	mov    edx,0x67
   14001b0e2:	mov    eax,0x200
   14001b0e7:	or     r14d,0x40
   14001b0eb:	lea    rbx,[rbp-0x30]
   14001b0ef:	mov    esi,eax
   14001b0f1:	test   edi,edi
   14001b0f3:	jns    0x14001b347
   14001b0f9:	mov    r13d,0x6
   14001b0ff:	mov    DWORD PTR [rsp+0x44],r13d
   14001b104:	jmp    0x14001b398
   14001b109:	mov    edx,0x67
   14001b10e:	cmp    ecx,edx
   14001b110:	jle    0x14001b0e2
   14001b112:	cmp    ecx,0x69
   14001b115:	je     0x14001b21f
   14001b11b:	cmp    ecx,0x6e
   14001b11e:	je     0x14001b1dd
   14001b124:	cmp    ecx,0x6f
   14001b127:	je     0x14001b1c8
   14001b12d:	cmp    ecx,0x70
   14001b130:	je     0x14001b188
   14001b132:	cmp    ecx,0x73
   14001b135:	je     0x14001aff1
   14001b13b:	cmp    ecx,0x75
   14001b13e:	je     0x14001b223
   14001b144:	cmp    ecx,0x78
   14001b147:	jne    0x14001af4c
   14001b14d:	lea    eax,[rdx-0x40]
   14001b150:	jmp    0x14001b197
   14001b152:	test   rbx,rbx
   14001b155:	mov    DWORD PTR [rsp+0x58],0x1
   14001b15d:	cmove  rbx,QWORD PTR [rip+0x1d33b]        # 0x1400384a0
   14001b165:	mov    rax,rbx
   14001b168:	jmp    0x14001b176
   14001b16a:	dec    edi
   14001b16c:	cmp    WORD PTR [rax],r10w
   14001b170:	je     0x14001b17a
   14001b172:	add    rax,0x2
   14001b176:	test   edi,edi
   14001b178:	jne    0x14001b16a
   14001b17a:	sub    rax,rbx
   14001b17d:	sar    rax,1
   14001b180:	mov    r13d,eax
   14001b183:	jmp    0x14001af4c
   14001b188:	mov    edi,0x10
   14001b18d:	bts    r14d,0xf
   14001b192:	mov    eax,0x7
   14001b197:	mov    r9d,0x10
   14001b19d:	mov    DWORD PTR [rsp+0x78],eax
   14001b1a1:	mov    esi,0x200
   14001b1a6:	lea    r15d,[r9+0x20]
   14001b1aa:	test   r14b,r14b
   14001b1ad:	jns    0x14001b234
   14001b1b3:	add    ax,0x51
   14001b1b7:	mov    WORD PTR [rsp+0x60],r15w
   14001b1bd:	lea    edx,[r9-0xe]
   14001b1c1:	mov    WORD PTR [rsp+0x62],ax
   14001b1c6:	jmp    0x14001b238
   14001b1c8:	mov    r9d,0x8
   14001b1ce:	test   r14b,r14b
   14001b1d1:	jns    0x14001b229
   14001b1d3:	mov    esi,0x200
   14001b1d8:	or     r14d,esi
   14001b1db:	jmp    0x14001b22e
   14001b1dd:	mov    rdi,QWORD PTR [r12]
   14001b1e1:	add    r12,0x8
   14001b1e5:	mov    QWORD PTR [rsp+0x50],r12
   14001b1ea:	call   0x14001fac4
   14001b1ef:	xor    r10d,r10d
   14001b1f2:	test   eax,eax
   14001b1f4:	je     0x14001b824
   14001b1fa:	mov    eax,DWORD PTR [rsp+0x40]
   14001b1fe:	lea    r11d,[r10+0x20]
   14001b202:	test   r11b,r14b
   14001b205:	je     0x14001b20c
   14001b207:	mov    WORD PTR [rdi],ax
   14001b20a:	jmp    0x14001b20e
   14001b20c:	mov    DWORD PTR [rdi],eax
   14001b20e:	mov    edx,DWORD PTR [rsp+0x40]
   14001b212:	mov    DWORD PTR [rsp+0x70],0x1
   14001b21a:	jmp    0x14001b5b2
   14001b21f:	or     r14d,0x40
   14001b223:	mov    r9d,0xa
   14001b229:	mov    esi,0x200
   14001b22e:	mov    r15d,0x30
   14001b234:	mov    edx,DWORD PTR [rsp+0x48]
   14001b238:	mov    eax,0x8000
   14001b23d:	test   eax,r14d
   14001b240:	je     0x14001b24c
   14001b242:	mov    r8,QWORD PTR [r12]
   14001b246:	add    r12,0x8
   14001b24a:	jmp    0x14001b289
   14001b24c:	bt     r14d,0xc
   14001b251:	jb     0x14001b242
   14001b253:	add    r12,0x8
   14001b257:	test   r11b,r14b
   14001b25a:	je     0x14001b277
   14001b25c:	mov    QWORD PTR [rsp+0x50],r12
   14001b261:	test   r14b,0x40
   14001b265:	je     0x14001b26f
   14001b267:	movsx  r8,WORD PTR [r12-0x8]
   14001b26d:	jmp    0x14001b28e
   14001b26f:	movzx  r8d,WORD PTR [r12-0x8]
   14001b275:	jmp    0x14001b28e
   14001b277:	test   r14b,0x40
   14001b27b:	je     0x14001b284
   14001b27d:	movsxd r8,DWORD PTR [r12-0x8]
   14001b282:	jmp    0x14001b289
   14001b284:	mov    r8d,DWORD PTR [r12-0x8]
   14001b289:	mov    QWORD PTR [rsp+0x50],r12
   14001b28e:	test   r14b,0x40
   14001b292:	je     0x14001b2a1
   14001b294:	test   r8,r8
   14001b297:	jns    0x14001b2a1
   14001b299:	neg    r8
   14001b29c:	bts    r14d,0x8
   14001b2a1:	test   eax,r14d
   14001b2a4:	jne    0x14001b2b0
   14001b2a6:	bt     r14d,0xc
   14001b2ab:	jb     0x14001b2b0
   14001b2ad:	mov    r8d,r8d
   14001b2b0:	test   edi,edi
   14001b2b2:	jns    0x14001b2bb
   14001b2b4:	mov    edi,0x1
   14001b2b9:	jmp    0x14001b2c4
   14001b2bb:	and    r14d,0xfffffff7
   14001b2bf:	cmp    edi,esi
   14001b2c1:	cmovg  edi,esi
   14001b2c4:	mov    r12d,DWORD PTR [rsp+0x78]
   14001b2c9:	mov    rax,r8
   14001b2cc:	lea    rbx,[rbp+0x1cf]
   14001b2d3:	neg    rax
   14001b2d6:	sbb    ecx,ecx
   14001b2d8:	and    ecx,edx
   14001b2da:	mov    DWORD PTR [rsp+0x48],ecx
   14001b2de:	mov    ecx,edi
   14001b2e0:	dec    edi
   14001b2e2:	test   ecx,ecx
   14001b2e4:	jg     0x14001b2eb
   14001b2e6:	test   r8,r8
   14001b2e9:	je     0x14001b30b
   14001b2eb:	xor    edx,edx
   14001b2ed:	mov    rax,r8
   14001b2f0:	movsxd rcx,r9d
   14001b2f3:	div    rcx
   14001b2f6:	mov    r8,rax
   14001b2f9:	lea    eax,[rdx+0x30]
   14001b2fc:	cmp    eax,0x39
   14001b2ff:	jle    0x14001b304
   14001b301:	add    eax,r12d
   14001b304:	mov    BYTE PTR [rbx],al
   14001b306:	dec    rbx
   14001b309:	jmp    0x14001b2de
   14001b30b:	mov    r12,QWORD PTR [rsp+0x50]
   14001b310:	lea    rax,[rbp+0x1cf]
   14001b317:	mov    DWORD PTR [rsp+0x44],edi
   14001b31b:	sub    eax,ebx
   14001b31d:	inc    rbx
   14001b320:	mov    r13d,eax
   14001b323:	test   esi,r14d
   14001b326:	je     0x14001af4c
   14001b32c:	test   eax,eax
   14001b32e:	je     0x14001b339
   14001b330:	cmp    BYTE PTR [rbx],r15b
   14001b333:	je     0x14001af4c
   14001b339:	dec    rbx
   14001b33c:	inc    r13d
   14001b33f:	mov    BYTE PTR [rbx],r15b
   14001b342:	jmp    0x14001af4c
   14001b347:	jne    0x14001b35a
   14001b349:	cmp    r15w,dx
   14001b34d:	jne    0x14001b38e
   14001b34f:	mov    r13d,0x1
   14001b355:	jmp    0x14001b0ff
   14001b35a:	cmp    edi,eax
   14001b35c:	mov    r13d,0xa3
   14001b362:	cmovg  edi,eax
   14001b365:	mov    DWORD PTR [rsp+0x44],edi
   14001b369:	cmp    edi,r13d
   14001b36c:	jle    0x14001b395
   14001b36e:	add    edi,0x15d
   14001b374:	movsxd rcx,edi
   14001b377:	call   0x140015d94
   14001b37c:	mov    QWORD PTR [rbp-0x50],rax
   14001b380:	test   rax,rax
   14001b383:	je     0x14001b0ff
   14001b389:	mov    rbx,rax
   14001b38c:	mov    esi,edi
   14001b38e:	mov    r13d,DWORD PTR [rsp+0x44]
   14001b393:	jmp    0x14001b398
   14001b395:	mov    r13d,edi
   14001b398:	mov    rax,QWORD PTR [r12]
   14001b39c:	mov    rcx,QWORD PTR [rip+0x1bead]        # 0x140037250
   14001b3a3:	add    r12,0x8
   14001b3a7:	mov    QWORD PTR [rsp+0x50],r12
   14001b3ac:	movsx  edi,r15b
   14001b3b0:	movsxd rsi,esi
   14001b3b3:	mov    QWORD PTR [rbp-0x40],rax
   14001b3b7:	call   QWORD PTR [rip+0xbd33]        # 0x1400270f0
   14001b3bd:	lea    rcx,[rbp-0x70]
   14001b3c1:	mov    QWORD PTR [rsp+0x30],rcx
   14001b3c6:	mov    ecx,DWORD PTR [rsp+0x74]
   14001b3ca:	mov    r9d,edi
   14001b3cd:	mov    DWORD PTR [rsp+0x28],ecx
   14001b3d1:	lea    rcx,[rbp-0x40]
   14001b3d5:	mov    r8,rsi
   14001b3d8:	mov    rdx,rbx
   14001b3db:	mov    DWORD PTR [rsp+0x20],r13d
   14001b3e0:	call   rax
   14001b3e2:	mov    edi,r14d
   14001b3e5:	and    edi,0x80
   14001b3eb:	je     0x14001b408
   14001b3ed:	test   r13d,r13d
   14001b3f0:	jne    0x14001b408
   14001b3f2:	mov    rcx,QWORD PTR [rip+0x1be6f]        # 0x140037268
   14001b3f9:	call   QWORD PTR [rip+0xbcf1]        # 0x1400270f0
   14001b3ff:	lea    rdx,[rbp-0x70]
   14001b403:	mov    rcx,rbx
   14001b406:	call   rax
   14001b408:	mov    ecx,0x67
   14001b40d:	cmp    r15w,cx
   14001b411:	jne    0x14001b42d
   14001b413:	test   edi,edi
   14001b415:	jne    0x14001b42d
   14001b417:	mov    rcx,QWORD PTR [rip+0x1be42]        # 0x140037260
   14001b41e:	call   QWORD PTR [rip+0xbccc]        # 0x1400270f0
   14001b424:	lea    rdx,[rbp-0x70]
   14001b428:	mov    rcx,rbx
   14001b42b:	call   rax
   14001b42d:	mov    edi,0x2d
   14001b432:	cmp    BYTE PTR [rbx],dil
   14001b435:	jne    0x14001b43f
   14001b437:	bts    r14d,0x8
   14001b43c:	inc    rbx
   14001b43f:	mov    rcx,rbx
   14001b442:	call   0x140015330
   14001b447:	xor    r10d,r10d
   14001b44a:	mov    r13d,eax
   14001b44d:	jmp    0x14001af51
   14001b452:	test   r14b,0x1
   14001b456:	je     0x14001b467
   14001b458:	mov    eax,0x2b
   14001b45d:	mov    WORD PTR [rsp+0x60],ax
   14001b462:	jmp    0x14001af76
   14001b467:	test   r14b,0x2
   14001b46b:	je     0x14001b480
   14001b46d:	mov    eax,0x20
   14001b472:	mov    WORD PTR [rsp+0x60],ax
   14001b477:	lea    edi,[rax-0x1f]
   14001b47a:	mov    DWORD PTR [rsp+0x48],edi
   14001b47e:	jmp    0x14001b489
   14001b480:	mov    edi,DWORD PTR [rsp+0x48]
   14001b484:	mov    eax,0x20
   14001b489:	mov    r15d,DWORD PTR [rsp+0x5c]
   14001b48e:	mov    rsi,QWORD PTR [rbp-0x80]
   14001b492:	sub    r15d,r13d
   14001b495:	sub    r15d,edi
   14001b498:	test   r14b,0xc
   14001b49c:	jne    0x14001b4b0
   14001b49e:	lea    r9,[rsp+0x40]
   14001b4a3:	mov    ecx,eax
   14001b4a5:	mov    r8,rsi
   14001b4a8:	mov    edx,r15d
   14001b4ab:	call   0x14001b888
   14001b4b0:	mov    rax,QWORD PTR [rbp-0x48]
   14001b4b4:	lea    r9,[rsp+0x40]
   14001b4b9:	lea    rcx,[rsp+0x60]
   14001b4be:	mov    r8,rsi
   14001b4c1:	mov    edx,edi
   14001b4c3:	mov    QWORD PTR [rsp+0x20],rax
   14001b4c8:	call   0x14001b8dc
   14001b4cd:	test   r14b,0x8
   14001b4d1:	je     0x14001b4ee
   14001b4d3:	test   r14b,0x4
   14001b4d7:	jne    0x14001b4ee
   14001b4d9:	lea    r9,[rsp+0x40]
   14001b4de:	mov    ecx,0x30
   14001b4e3:	mov    r8,rsi
   14001b4e6:	mov    edx,r15d
   14001b4e9:	call   0x14001b888
   14001b4ee:	xor    eax,eax
   14001b4f0:	cmp    DWORD PTR [rsp+0x58],eax
   14001b4f4:	jne    0x14001b563
   14001b4f6:	test   r13d,r13d
   14001b4f9:	jle    0x14001b563
   14001b4fb:	mov    rdi,rbx
   14001b4fe:	mov    esi,r13d
   14001b501:	mov    rax,QWORD PTR [rbp-0x70]
   14001b505:	lea    r9,[rbp-0x70]
   14001b509:	lea    rcx,[rsp+0x64]
   14001b50e:	movsxd r8,DWORD PTR [rax+0xd4]
   14001b515:	mov    rdx,rdi
   14001b518:	dec    esi
   14001b51a:	call   0x14001fcd0
   14001b51f:	xor    r10d,r10d
   14001b522:	movsxd r12,eax
   14001b525:	test   eax,eax
   14001b527:	jle    0x14001b551
   14001b529:	mov    rdx,QWORD PTR [rbp-0x80]
   14001b52d:	movzx  ecx,WORD PTR [rsp+0x64]
   14001b532:	lea    r8,[rsp+0x40]
   14001b537:	call   0x14001b850
   14001b53c:	add    rdi,r12
   14001b53f:	xor    r10d,r10d
   14001b542:	test   esi,esi
   14001b544:	jg     0x14001b501
   14001b546:	mov    r12,QWORD PTR [rsp+0x50]
   14001b54b:	mov    rsi,QWORD PTR [rbp-0x80]
   14001b54f:	jmp    0x14001b582
   14001b551:	mov    r12,QWORD PTR [rsp+0x50]
   14001b556:	mov    rsi,QWORD PTR [rbp-0x80]
   14001b55a:	or     edx,0xffffffff
   14001b55d:	mov    DWORD PTR [rsp+0x40],edx
   14001b561:	jmp    0x14001b586
   14001b563:	mov    rax,QWORD PTR [rbp-0x48]
   14001b567:	lea    r9,[rsp+0x40]
   14001b56c:	mov    r8,rsi
   14001b56f:	mov    edx,r13d
   14001b572:	mov    rcx,rbx
   14001b575:	mov    QWORD PTR [rsp+0x20],rax
   14001b57a:	call   0x14001b8dc
   14001b57f:	xor    r10d,r10d
   14001b582:	mov    edx,DWORD PTR [rsp+0x40]
   14001b586:	test   edx,edx
   14001b588:	js     0x14001b5ac
   14001b58a:	test   r14b,0x4
   14001b58e:	je     0x14001b5ac
   14001b590:	lea    r9,[rsp+0x40]
   14001b595:	mov    ecx,0x20
   14001b59a:	mov    r8,rsi
   14001b59d:	mov    edx,r15d
   14001b5a0:	call   0x14001b888
   14001b5a5:	xor    r10d,r10d
   14001b5a8:	mov    edx,DWORD PTR [rsp+0x40]
   14001b5ac:	mov    r11d,0x20
   14001b5b2:	mov    rax,QWORD PTR [rbp-0x50]
   14001b5b6:	test   rax,rax
   14001b5b9:	je     0x14001b5d2
   14001b5bb:	mov    rcx,rax
   14001b5be:	call   0x14001392c
   14001b5c3:	mov    edx,DWORD PTR [rsp+0x40]
   14001b5c7:	xor    r10d,r10d
   14001b5ca:	lea    r11d,[r10+0x20]
   14001b5ce:	mov    QWORD PTR [rbp-0x50],r10
   14001b5d2:	mov    edi,DWORD PTR [rsp+0x44]
   14001b5d6:	or     esi,0xffffffff
   14001b5d9:	mov    r8,QWORD PTR [rbp-0x78]
   14001b5dd:	mov    r9d,DWORD PTR [rsp+0x6c]
   14001b5e2:	movzx  r15d,WORD PTR [r8]
   14001b5e6:	test   r15w,r15w
   14001b5ea:	jne    0x14001ae42
   14001b5f0:	test   r9d,r9d
   14001b5f3:	je     0x14001b5ff
   14001b5f5:	cmp    r9d,0x7
   14001b5f9:	jne    0x14001b824
   14001b5ff:	cmp    BYTE PTR [rbp-0x58],r10b
   14001b603:	je     0x14001b610
   14001b605:	mov    rcx,QWORD PTR [rbp-0x60]
   14001b609:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001b610:	mov    eax,edx
   14001b612:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14001b619:	xor    rcx,rsp
   14001b61c:	call   0x1400130a0
   14001b621:	mov    rbx,QWORD PTR [rsp+0x530]
   14001b629:	add    rsp,0x4e0
   14001b630:	pop    r15
   14001b632:	pop    r14
   14001b634:	pop    r13
   14001b636:	pop    r12
   14001b638:	pop    rdi
   14001b639:	pop    rsi
   14001b63a:	pop    rbp
   14001b63b:	ret    
   14001b63c:	movzx  eax,r15w
   14001b640:	cmp    eax,0x49
   14001b643:	je     0x14001b684
   14001b645:	cmp    eax,0x68
   14001b648:	je     0x14001b67c
   14001b64a:	mov    ecx,0x6c
   14001b64f:	cmp    eax,ecx
   14001b651:	je     0x14001b65f
   14001b653:	cmp    eax,0x77
   14001b656:	jne    0x14001b5e2
   14001b658:	bts    r14d,0xb
   14001b65d:	jmp    0x14001b5e2
   14001b65f:	cmp    WORD PTR [r8],cx
   14001b663:	jne    0x14001b673
   14001b665:	add    r8,0x2
   14001b669:	bts    r14d,0xc
   14001b66e:	jmp    0x14001b5e2
   14001b673:	or     r14d,0x10
   14001b677:	jmp    0x14001b5e2
   14001b67c:	or     r14d,r11d
   14001b67f:	jmp    0x14001b5e2
   14001b684:	movzx  eax,WORD PTR [r8]
   14001b688:	bts    r14d,0xf
   14001b68d:	cmp    ax,0x36
   14001b691:	jne    0x14001b6a9
   14001b693:	cmp    WORD PTR [r8+0x2],0x34
   14001b699:	jne    0x14001b6a9
   14001b69b:	add    r8,0x4
   14001b69f:	bts    r14d,0xf
   14001b6a4:	jmp    0x14001b5e2
   14001b6a9:	cmp    ax,0x33
   14001b6ad:	jne    0x14001b6c5
   14001b6af:	cmp    WORD PTR [r8+0x2],0x32
   14001b6b5:	jne    0x14001b6c5
   14001b6b7:	add    r8,0x4
   14001b6bb:	btr    r14d,0xf
   14001b6c0:	jmp    0x14001b5e2
   14001b6c5:	sub    ax,0x58
   14001b6c9:	cmp    ax,r11w
   14001b6cd:	ja     0x14001b6e3
   14001b6cf:	movabs rcx,0x120821001
   14001b6d9:	bt     rcx,rax
   14001b6dd:	jb     0x14001b5e2
   14001b6e3:	mov    DWORD PTR [rsp+0x6c],r10d
   14001b6e8:	mov    rdx,QWORD PTR [rbp-0x80]
   14001b6ec:	lea    r8,[rsp+0x40]
   14001b6f1:	movzx  ecx,r15w
   14001b6f5:	mov    DWORD PTR [rsp+0x58],0x1
   14001b6fd:	call   0x14001b850
   14001b702:	mov    edx,DWORD PTR [rsp+0x40]
   14001b706:	xor    r10d,r10d
   14001b709:	lea    r11d,[r10+0x20]
   14001b70d:	jmp    0x14001b5d9
   14001b712:	cmp    r15w,0x2a
   14001b717:	jne    0x14001b73d
   14001b719:	mov    edi,DWORD PTR [r12]
   14001b71d:	add    r12,0x8
   14001b721:	mov    QWORD PTR [rsp+0x50],r12
   14001b726:	mov    DWORD PTR [rsp+0x44],edi
   14001b72a:	test   edi,edi
   14001b72c:	jns    0x14001b5e2
   14001b732:	mov    edi,esi
   14001b734:	mov    DWORD PTR [rsp+0x44],esi
   14001b738:	jmp    0x14001b5e2
   14001b73d:	lea    edi,[rdi+rdi*4]
   14001b740:	movzx  eax,r15w
   14001b744:	lea    edi,[rdi-0x18]
   14001b747:	lea    edi,[rax+rdi*2]
   14001b74a:	mov    DWORD PTR [rsp+0x44],edi
   14001b74e:	jmp    0x14001b5e2
   14001b753:	mov    edi,r10d
   14001b756:	mov    DWORD PTR [rsp+0x44],r10d
   14001b75b:	jmp    0x14001b5e2
   14001b760:	cmp    r15w,0x2a
   14001b765:	jne    0x14001b788
   14001b767:	mov    eax,DWORD PTR [r12]
   14001b76b:	add    r12,0x8
   14001b76f:	mov    QWORD PTR [rsp+0x50],r12
   14001b774:	mov    DWORD PTR [rsp+0x5c],eax
   14001b778:	test   eax,eax
   14001b77a:	jns    0x14001b5e2
   14001b780:	or     r14d,0x4
   14001b784:	neg    eax
   14001b786:	jmp    0x14001b799
   14001b788:	mov    eax,DWORD PTR [rsp+0x5c]
   14001b78c:	lea    ecx,[rax+rax*4]
   14001b78f:	movzx  eax,r15w
   14001b793:	lea    eax,[rax+rcx*2]
   14001b796:	add    eax,0xffffffd0
   14001b799:	mov    DWORD PTR [rsp+0x5c],eax
   14001b79d:	jmp    0x14001b5e2
   14001b7a2:	movzx  eax,r15w
   14001b7a6:	cmp    eax,r11d
   14001b7a9:	je     0x14001b7f4
   14001b7ab:	cmp    eax,0x23
   14001b7ae:	je     0x14001b7ea
   14001b7b0:	mov    ecx,0x2b
   14001b7b5:	cmp    eax,ecx
   14001b7b7:	je     0x14001b7e1
   14001b7b9:	mov    ecx,0x2d
   14001b7be:	cmp    eax,ecx
   14001b7c0:	je     0x14001b7d8
   14001b7c2:	mov    ecx,0x30
   14001b7c7:	cmp    eax,ecx
   14001b7c9:	jne    0x14001b5e2
   14001b7cf:	or     r14d,0x8
   14001b7d3:	jmp    0x14001b5e2
   14001b7d8:	or     r14d,0x4
   14001b7dc:	jmp    0x14001b5e2
   14001b7e1:	or     r14d,0x1
   14001b7e5:	jmp    0x14001b5e2
   14001b7ea:	bts    r14d,0x7
   14001b7ef:	jmp    0x14001b5e2
   14001b7f4:	or     r14d,0x2
   14001b7f8:	jmp    0x14001b5e2
   14001b7fd:	mov    DWORD PTR [rsp+0x74],r10d
   14001b802:	mov    DWORD PTR [rsp+0x70],r10d
   14001b807:	mov    DWORD PTR [rsp+0x5c],r10d
   14001b80c:	mov    DWORD PTR [rsp+0x48],r10d
   14001b811:	mov    r14d,r10d
   14001b814:	mov    edi,esi
   14001b816:	mov    DWORD PTR [rsp+0x44],esi
   14001b81a:	mov    DWORD PTR [rsp+0x58],r10d
   14001b81f:	jmp    0x14001b5e2
   14001b824:	call   0x1400161e8
   14001b829:	mov    DWORD PTR [rax],0x16
   14001b82f:	call   0x140013f54
   14001b834:	xor    ecx,ecx
   14001b836:	cmp    BYTE PTR [rbp-0x58],cl
   14001b839:	je     0x14001b846
   14001b83b:	mov    rax,QWORD PTR [rbp-0x60]
   14001b83f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001b846:	mov    eax,esi
   14001b848:	jmp    0x14001b612
   14001b84d:	int3   
   14001b84e:	int3   
   14001b84f:	int3   
   14001b850:	rex push rbx
   14001b852:	sub    rsp,0x20
   14001b856:	test   BYTE PTR [rdx+0x18],0x40
   14001b85a:	mov    rbx,r8
   14001b85d:	je     0x14001b86b
   14001b85f:	cmp    QWORD PTR [rdx+0x10],0x0
   14001b864:	jne    0x14001b86b
   14001b866:	inc    DWORD PTR [r8]
   14001b869:	jmp    0x14001b881
   14001b86b:	call   0x14001fadc
   14001b870:	mov    ecx,0xffff
   14001b875:	cmp    ax,cx
   14001b878:	jne    0x14001b87f
   14001b87a:	or     DWORD PTR [rbx],0xffffffff
   14001b87d:	jmp    0x14001b881
   14001b87f:	inc    DWORD PTR [rbx]
   14001b881:	add    rsp,0x20
   14001b885:	pop    rbx
   14001b886:	ret    
   14001b887:	int3   
   14001b888:	test   edx,edx
   14001b88a:	jle    0x14001b8d8
   14001b88c:	mov    QWORD PTR [rsp+0x8],rbx
   14001b891:	mov    QWORD PTR [rsp+0x10],rbp
   14001b896:	mov    QWORD PTR [rsp+0x18],rsi
   14001b89b:	push   rdi
   14001b89c:	sub    rsp,0x20
   14001b8a0:	mov    rdi,r9
   14001b8a3:	mov    rsi,r8
   14001b8a6:	mov    ebx,edx
   14001b8a8:	movzx  ebp,cx
   14001b8ab:	mov    r8,rdi
   14001b8ae:	mov    rdx,rsi
   14001b8b1:	movzx  ecx,bp
   14001b8b4:	dec    ebx
   14001b8b6:	call   0x14001b850
   14001b8bb:	cmp    DWORD PTR [rdi],0xffffffff
   14001b8be:	je     0x14001b8c4
   14001b8c0:	test   ebx,ebx
   14001b8c2:	jg     0x14001b8ab
   14001b8c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b8c9:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b8ce:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b8d3:	add    rsp,0x20
   14001b8d7:	pop    rdi
   14001b8d8:	ret    
   14001b8d9:	int3   
   14001b8da:	int3   
   14001b8db:	int3   
   14001b8dc:	mov    QWORD PTR [rsp+0x8],rbx
   14001b8e1:	mov    QWORD PTR [rsp+0x10],rbp
   14001b8e6:	mov    QWORD PTR [rsp+0x18],rsi
   14001b8eb:	push   rdi
   14001b8ec:	push   r14
   14001b8ee:	push   r15
   14001b8f0:	sub    rsp,0x20
   14001b8f4:	test   BYTE PTR [r8+0x18],0x40
   14001b8f9:	mov    rbx,QWORD PTR [rsp+0x60]
   14001b8fe:	mov    rdi,r9
   14001b901:	mov    r15d,DWORD PTR [rbx]
   14001b904:	mov    rbp,r8
   14001b907:	mov    esi,edx
   14001b909:	mov    r14,rcx
   14001b90c:	je     0x14001b91a
   14001b90e:	cmp    QWORD PTR [r8+0x10],0x0
   14001b913:	jne    0x14001b91a
   14001b915:	add    DWORD PTR [r9],edx
   14001b918:	jmp    0x14001b95c
   14001b91a:	and    DWORD PTR [rbx],0x0
   14001b91d:	test   edx,edx
   14001b91f:	jle    0x14001b959
   14001b921:	movzx  ecx,WORD PTR [r14]
   14001b925:	mov    r8,rdi
   14001b928:	mov    rdx,rbp
   14001b92b:	dec    esi
   14001b92d:	call   0x14001b850
   14001b932:	cmp    DWORD PTR [rdi],0xffffffff
   14001b935:	lea    r14,[r14+0x2]
   14001b939:	jne    0x14001b950
   14001b93b:	cmp    DWORD PTR [rbx],0x2a
   14001b93e:	jne    0x14001b954
   14001b940:	mov    ecx,0x3f
   14001b945:	mov    r8,rdi
   14001b948:	mov    rdx,rbp
   14001b94b:	call   0x14001b850
   14001b950:	test   esi,esi
   14001b952:	jg     0x14001b921
   14001b954:	cmp    DWORD PTR [rbx],0x0
   14001b957:	jne    0x14001b95c
   14001b959:	mov    DWORD PTR [rbx],r15d
   14001b95c:	mov    rbx,QWORD PTR [rsp+0x40]
   14001b961:	mov    rbp,QWORD PTR [rsp+0x48]
   14001b966:	mov    rsi,QWORD PTR [rsp+0x50]
   14001b96b:	add    rsp,0x20
   14001b96f:	pop    r15
   14001b971:	pop    r14
   14001b973:	pop    rdi
   14001b974:	ret    
   14001b975:	int3   
   14001b976:	int3   
   14001b977:	int3   
   14001b978:	mov    rax,rcx
   14001b97b:	movzx  edx,WORD PTR [rax]
   14001b97e:	add    rax,0x2
   14001b982:	test   dx,dx
   14001b985:	jne    0x14001b97b
   14001b987:	sub    rax,rcx
   14001b98a:	sar    rax,1
   14001b98d:	dec    rax
   14001b990:	ret    
   14001b991:	int3   
   14001b992:	int3   
   14001b993:	int3   
   14001b994:	mov    QWORD PTR [rsp+0x8],rbx
   14001b999:	mov    QWORD PTR [rsp+0x10],rsi
   14001b99e:	push   rdi
   14001b99f:	sub    rsp,0x20
   14001b9a3:	mov    rsi,r9
   14001b9a6:	mov    rdi,r8
   14001b9a9:	mov    rbx,rdx
   14001b9ac:	cmp    rcx,QWORD PTR [rdx]
   14001b9af:	jne    0x14001ba18
   14001b9b1:	cmp    QWORD PTR [r8],r9
   14001b9b4:	jne    0x14001b9f6
   14001b9b6:	mov    rcx,QWORD PTR [rbx]
   14001b9b9:	mov    edx,0x4
   14001b9be:	call   0x140015d14
   14001b9c3:	mov    QWORD PTR [rdi],rax
   14001b9c6:	test   rax,rax
   14001b9c9:	jne    0x14001b9cf
   14001b9cb:	xor    eax,eax
   14001b9cd:	jmp    0x14001ba1d
   14001b9cf:	mov    rax,QWORD PTR [rsp+0x50]
   14001b9d4:	mov    rdx,rsi
   14001b9d7:	mov    DWORD PTR [rax],0x1
   14001b9dd:	mov    r8,QWORD PTR [rbx]
   14001b9e0:	mov    rcx,QWORD PTR [rdi]
   14001b9e3:	add    r8,r8
   14001b9e6:	call   0x1400130d0
   14001b9eb:	mov    rax,QWORD PTR [rbx]
   14001b9ee:	add    rax,rax
   14001b9f1:	mov    QWORD PTR [rbx],rax
   14001b9f4:	jmp    0x14001ba18
   14001b9f6:	mov    rdx,QWORD PTR [rdx]
   14001b9f9:	mov    rcx,QWORD PTR [rdi]
   14001b9fc:	mov    r8d,0x4
   14001ba02:	call   0x140015e94
   14001ba07:	test   rax,rax
   14001ba0a:	je     0x14001b9cb
   14001ba0c:	mov    QWORD PTR [rdi],rax
   14001ba0f:	mov    rcx,QWORD PTR [rbx]
   14001ba12:	add    rcx,rcx
   14001ba15:	mov    QWORD PTR [rbx],rcx
   14001ba18:	mov    eax,0x1
   14001ba1d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ba22:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ba27:	add    rsp,0x20
   14001ba2b:	pop    rdi
   14001ba2c:	ret    
   14001ba2d:	int3   
   14001ba2e:	int3   
   14001ba2f:	int3   
   14001ba30:	mov    QWORD PTR [rsp+0x8],rbx
   14001ba35:	mov    QWORD PTR [rsp+0x10],rsi
   14001ba3a:	push   rdi
   14001ba3b:	sub    rsp,0x20
   14001ba3f:	mov    rsi,rdx
   14001ba42:	mov    rdi,rcx
   14001ba45:	inc    DWORD PTR [rdi]
   14001ba47:	mov    rcx,rsi
   14001ba4a:	call   0x14001fe2c
   14001ba4f:	movzx  ebx,ax
   14001ba52:	mov    eax,0xffff
   14001ba57:	cmp    bx,ax
   14001ba5a:	je     0x14001ba6d
   14001ba5c:	mov    edx,0x8
   14001ba61:	movzx  ecx,bx
   14001ba64:	call   0x140020224
   14001ba69:	test   eax,eax
   14001ba6b:	jne    0x14001ba45
   14001ba6d:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ba72:	movzx  eax,bx
   14001ba75:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ba7a:	add    rsp,0x20
   14001ba7e:	pop    rdi
   14001ba7f:	ret    
   14001ba80:	mov    QWORD PTR [rsp+0x18],rbx
   14001ba85:	push   rbp
   14001ba86:	push   rsi
   14001ba87:	push   rdi
   14001ba88:	push   r12
   14001ba8a:	push   r13
   14001ba8c:	push   r14
   14001ba8e:	push   r15
   14001ba90:	lea    rbp,[rsp-0x2c0]
   14001ba98:	sub    rsp,0x3c0
   14001ba9f:	mov    rax,QWORD PTR [rip+0x1b56a]        # 0x140037010
   14001baa6:	xor    rax,rsp
   14001baa9:	mov    QWORD PTR [rbp+0x2b0],rax
   14001bab0:	xor    r13d,r13d
   14001bab3:	lea    r15,[rbp-0x10]
   14001bab7:	mov    QWORD PTR [rbp-0x40],r9
   14001babb:	mov    eax,r13d
   14001babe:	movzx  edi,r13w
   14001bac2:	mov    rbx,rdx
   14001bac5:	mov    QWORD PTR [rsp+0x68],rdx
   14001baca:	mov    rsi,rcx
   14001bacd:	mov    QWORD PTR [rsp+0x78],rcx
   14001bad2:	mov    DWORD PTR [rbp-0x48],eax
   14001bad5:	mov    DWORD PTR [rsp+0x40],edi
   14001bad9:	mov    QWORD PTR [rbp-0x68],r15
   14001badd:	mov    QWORD PTR [rbp-0x58],0x15e
   14001bae5:	mov    DWORD PTR [rbp-0x70],r13d
   14001bae9:	mov    QWORD PTR [rsp+0x70],r13
   14001baee:	mov    QWORD PTR [rbp-0x80],r13
   14001baf2:	mov    DWORD PTR [rsp+0x50],r13d
   14001baf7:	mov    QWORD PTR [rbp-0x50],r13
   14001bafb:	test   rdx,rdx
   14001bafe:	jne    0x14001bb18
   14001bb00:	call   0x1400161e8
   14001bb05:	mov    DWORD PTR [rax],0x16
   14001bb0b:	call   0x140013f54
   14001bb10:	or     eax,0xffffffff
   14001bb13:	jmp    0x14001cd43
   14001bb18:	test   rcx,rcx
   14001bb1b:	je     0x14001bb00
   14001bb1d:	lea    rcx,[rbp-0x30]
   14001bb21:	mov    rdx,r8
   14001bb24:	call   0x140014b34
   14001bb29:	movzx  eax,WORD PTR [rbx]
   14001bb2c:	mov    BYTE PTR [rsp+0x3c],r13b
   14001bb31:	mov    r14d,r13d
   14001bb34:	mov    DWORD PTR [rsp+0x30],r13d
   14001bb39:	mov    DWORD PTR [rsp+0x48],r13d
   14001bb3e:	mov    r15d,r13d
   14001bb41:	mov    DWORD PTR [rsp+0x38],r13d
   14001bb46:	test   ax,ax
   14001bb49:	je     0x14001cd2e
   14001bb4f:	mov    r15d,0xffff
   14001bb55:	mov    r12d,0x25
   14001bb5b:	mov    edx,0x8
   14001bb60:	movzx  ecx,ax
   14001bb63:	call   0x140020224
   14001bb68:	test   eax,eax
   14001bb6a:	je     0x14001bbbb
   14001bb6c:	lea    rcx,[rsp+0x48]
   14001bb71:	dec    r14d
   14001bb74:	mov    rdx,rsi
   14001bb77:	mov    DWORD PTR [rsp+0x48],r14d
   14001bb7c:	call   0x14001ba30
   14001bb81:	cmp    r15w,ax
   14001bb85:	je     0x14001bb92
   14001bb87:	mov    rdx,rsi
   14001bb8a:	movzx  ecx,ax
   14001bb8d:	call   0x140020024
   14001bb92:	add    rbx,0x2
   14001bb96:	mov    edx,0x8
   14001bb9b:	movzx  ecx,WORD PTR [rbx]
   14001bb9e:	call   0x140020224
   14001bba3:	test   eax,eax
   14001bba5:	jne    0x14001bb92
   14001bba7:	mov    r14d,DWORD PTR [rsp+0x48]
   14001bbac:	mov    QWORD PTR [rsp+0x68],rbx
   14001bbb1:	mov    DWORD PTR [rsp+0x30],r14d
   14001bbb6:	jmp    0x14001cbe1
   14001bbbb:	mov    r10,QWORD PTR [rsp+0x68]
   14001bbc0:	cmp    r12w,WORD PTR [r10]
   14001bbc4:	jne    0x14001cb94
   14001bbca:	cmp    r12w,WORD PTR [r10+0x2]
   14001bbcf:	je     0x14001cb7d
   14001bbd5:	xor    r11d,r11d
   14001bbd8:	movzx  r15d,r13w
   14001bbdc:	mov    edx,r13d
   14001bbdf:	mov    r12,r13
   14001bbe2:	lea    r9d,[r11+0x1]
   14001bbe6:	mov    DWORD PTR [rsp+0x60],r13d
   14001bbeb:	mov    DWORD PTR [rbp-0x78],r15d
   14001bbef:	mov    DWORD PTR [rsp+0x64],r13d
   14001bbf4:	mov    r8d,r13d
   14001bbf7:	mov    DWORD PTR [rsp+0x58],r13d
   14001bbfc:	mov    QWORD PTR [rbp-0x38],r13
   14001bc00:	mov    BYTE PTR [rsp+0x5c],r13b
   14001bc05:	mov    BYTE PTR [rsp+0x4c],r13b
   14001bc0a:	mov    dil,r13b
   14001bc0d:	mov    sil,r13b
   14001bc10:	mov    DWORD PTR [rbp-0x60],r13d
   14001bc14:	mov    r12b,r9b
   14001bc17:	mov    DWORD PTR [rsp+0x44],edx
   14001bc1b:	mov    r14b,r11b
   14001bc1e:	mov    r13d,r11d
   14001bc21:	or     r15d,0xffffffff
   14001bc25:	add    r10,0x2
   14001bc29:	mov    eax,0xff00
   14001bc2e:	movzx  ebx,WORD PTR [r10]
   14001bc32:	mov    QWORD PTR [rsp+0x68],r10
   14001bc37:	test   ax,bx
   14001bc3a:	jne    0x14001bc77
   14001bc3c:	movzx  ecx,bl
   14001bc3f:	call   0x14001dc68
   14001bc44:	mov    r8d,DWORD PTR [rsp+0x58]
   14001bc49:	mov    edx,DWORD PTR [rsp+0x44]
   14001bc4d:	mov    r10,QWORD PTR [rsp+0x68]
   14001bc52:	xor    r11d,r11d
   14001bc55:	lea    r9d,[r11+0x1]
   14001bc59:	test   eax,eax
   14001bc5b:	je     0x14001bc77
   14001bc5d:	lea    edx,[rdx+rdx*4]
   14001bc60:	add    r8d,r9d
   14001bc63:	lea    edx,[rdx-0x18]
   14001bc66:	mov    DWORD PTR [rsp+0x58],r8d
   14001bc6b:	lea    edx,[rbx+rdx*2]
   14001bc6e:	mov    DWORD PTR [rsp+0x44],edx
   14001bc72:	jmp    0x14001bd4c
   14001bc77:	cmp    ebx,0x2a
   14001bc7a:	je     0x14001bd49
   14001bc80:	cmp    ebx,0x46
   14001bc83:	je     0x14001bd4c
   14001bc89:	cmp    ebx,0x49
   14001bc8c:	je     0x14001bcdc
   14001bc8e:	cmp    ebx,0x4c
   14001bc91:	je     0x14001bcd7
   14001bc93:	cmp    ebx,0x4e
   14001bc96:	je     0x14001bd4c
   14001bc9c:	cmp    ebx,0x68
   14001bc9f:	je     0x14001bccf
   14001bca1:	mov    ecx,0x6c
   14001bca6:	cmp    ebx,ecx
   14001bca8:	je     0x14001bcb4
   14001bcaa:	cmp    ebx,0x77
   14001bcad:	je     0x14001bcca
   14001bcaf:	jmp    0x14001bd44
   14001bcb4:	lea    rax,[r10+0x2]
   14001bcb8:	cmp    WORD PTR [rax],cx
   14001bcbb:	jne    0x14001bcc7
   14001bcbd:	mov    r10,rax
   14001bcc0:	mov    QWORD PTR [rsp+0x68],rax
   14001bcc5:	jmp    0x14001bcf9
   14001bcc7:	add    r12b,r9b
   14001bcca:	add    r14b,r9b
   14001bccd:	jmp    0x14001bd4c
   14001bccf:	add    r12b,r15b
   14001bcd2:	add    r14b,r15b
   14001bcd5:	jmp    0x14001bd4c
   14001bcd7:	add    r12b,r9b
   14001bcda:	jmp    0x14001bd4c
   14001bcdc:	movzx  eax,WORD PTR [r10+0x2]
   14001bce1:	cmp    ax,0x36
   14001bce5:	jne    0x14001bd02
   14001bce7:	lea    rcx,[r10+0x4]
   14001bceb:	cmp    WORD PTR [rcx],0x34
   14001bcef:	jne    0x14001bd02
   14001bcf1:	mov    r10,rcx
   14001bcf4:	mov    QWORD PTR [rsp+0x68],rcx
   14001bcf9:	add    r13d,r9d
   14001bcfc:	mov    QWORD PTR [rbp-0x80],r11
   14001bd00:	jmp    0x14001bd4c
   14001bd02:	cmp    ax,0x33
   14001bd06:	jne    0x14001bd1c
   14001bd08:	lea    rcx,[r10+0x4]
   14001bd0c:	cmp    WORD PTR [rcx],0x32
   14001bd10:	jne    0x14001bd1c
   14001bd12:	mov    r10,rcx
   14001bd15:	mov    QWORD PTR [rsp+0x68],rcx
   14001bd1a:	jmp    0x14001bd4c
   14001bd1c:	sub    ax,0x58
   14001bd20:	mov    ecx,0x20
   14001bd25:	cmp    ax,cx
   14001bd28:	ja     0x14001bd3d
   14001bd2a:	movzx  eax,ax
   14001bd2d:	movabs rcx,0x100821001
   14001bd37:	bt     rcx,rax
   14001bd3b:	jb     0x14001bcf9
   14001bd3d:	add    r13d,r9d
   14001bd40:	mov    QWORD PTR [rbp-0x80],r11
   14001bd44:	add    sil,r9b
   14001bd47:	jmp    0x14001bd4c
   14001bd49:	add    dil,r9b
   14001bd4c:	test   sil,sil
   14001bd4f:	je     0x14001bc25
   14001bd55:	mov    r15d,DWORD PTR [rbp-0x78]
   14001bd59:	mov    BYTE PTR [rsp+0x34],dil
   14001bd5e:	mov    edi,DWORD PTR [rsp+0x40]
   14001bd62:	mov    cl,BYTE PTR [rsp+0x34]
   14001bd66:	mov    BYTE PTR [rsp+0x35],r12b
   14001bd6b:	mov    r12,QWORD PTR [rbp-0x38]
   14001bd6f:	mov    DWORD PTR [rsp+0x54],r13d
   14001bd74:	mov    r13d,DWORD PTR [rbp-0x60]
   14001bd78:	test   cl,cl
   14001bd7a:	jne    0x14001bd96
   14001bd7c:	mov    rax,QWORD PTR [rbp-0x40]
   14001bd80:	mov    QWORD PTR [rbp-0x50],rax
   14001bd84:	add    rax,0x8
   14001bd88:	mov    QWORD PTR [rbp-0x40],rax
   14001bd8c:	mov    rax,QWORD PTR [rax-0x8]
   14001bd90:	mov    QWORD PTR [rbp-0x78],rax
   14001bd94:	jmp    0x14001bd9a
   14001bd96:	mov    QWORD PTR [rbp-0x78],r11
   14001bd9a:	mov    bl,r11b
   14001bd9d:	test   r14b,r14b
   14001bda0:	jne    0x14001bdc7
   14001bda2:	movzx  eax,WORD PTR [r10]
   14001bda6:	mov    r9d,0xffef
   14001bdac:	sub    ax,0x43
   14001bdb0:	and    ax,r9w
   14001bdb4:	mov    r9d,0x1
   14001bdba:	neg    ax
   14001bdbd:	sbb    r14b,r14b
   14001bdc0:	and    r14b,0x2
   14001bdc4:	dec    r14b
   14001bdc7:	movzx  esi,WORD PTR [r10]
   14001bdcb:	mov    eax,0x6e
   14001bdd0:	or     esi,0x20
   14001bdd3:	cmp    esi,eax
   14001bdd5:	je     0x14001be3d
   14001bdd7:	cmp    esi,0x63
   14001bdda:	je     0x14001bdfd
   14001bddc:	cmp    esi,0x7b
   14001bddf:	je     0x14001bdfd
   14001bde1:	mov    rdx,QWORD PTR [rsp+0x78]
   14001bde6:	lea    rcx,[rsp+0x48]
   14001bdeb:	call   0x14001ba30
   14001bdf0:	movzx  edi,ax
   14001bdf3:	mov    eax,DWORD PTR [rsp+0x48]
   14001bdf7:	mov    DWORD PTR [rsp+0x30],eax
   14001bdfb:	jmp    0x14001be19
   14001bdfd:	mov    eax,DWORD PTR [rsp+0x30]
   14001be01:	mov    rcx,QWORD PTR [rsp+0x78]
   14001be06:	add    eax,r9d
   14001be09:	mov    DWORD PTR [rsp+0x30],eax
   14001be0d:	mov    DWORD PTR [rsp+0x48],eax
   14001be11:	call   0x14001fe2c
   14001be16:	movzx  edi,ax
   14001be19:	mov    eax,0xffff
   14001be1e:	mov    DWORD PTR [rsp+0x40],edi
   14001be22:	cmp    ax,di
   14001be25:	je     0x14001ccb1
   14001be2b:	mov    edx,DWORD PTR [rsp+0x44]
   14001be2f:	mov    r10,QWORD PTR [rsp+0x68]
   14001be34:	mov    r8d,DWORD PTR [rsp+0x58]
   14001be39:	mov    cl,BYTE PTR [rsp+0x34]
   14001be3d:	test   r8d,r8d
   14001be40:	je     0x14001be4a
   14001be42:	test   edx,edx
   14001be44:	je     0x14001cbee
   14001be4a:	test   cl,cl
   14001be4c:	jne    0x14001be9e
   14001be4e:	lea    eax,[rsi-0x63]
   14001be51:	test   eax,0xffffffe7
   14001be56:	jne    0x14001be9e
   14001be58:	cmp    esi,0x6b
   14001be5b:	je     0x14001be9e
   14001be5d:	mov    r9,QWORD PTR [rbp-0x50]
   14001be61:	mov    rax,QWORD PTR [r9]
   14001be64:	add    r9,0x8
   14001be68:	mov    r12d,DWORD PTR [r9]
   14001be6b:	mov    r11,r9
   14001be6e:	mov    QWORD PTR [rbp-0x50],r9
   14001be72:	add    r9,0x8
   14001be76:	mov    QWORD PTR [rbp-0x78],rax
   14001be7a:	mov    QWORD PTR [rbp-0x40],r9
   14001be7e:	mov    r9d,0x1
   14001be84:	cmp    r12,r9
   14001be87:	jae    0x14001bea8
   14001be89:	test   r14b,r14b
   14001be8c:	jle    0x14001cc16
   14001be92:	xor    r14d,r14d
   14001be95:	mov    WORD PTR [rax],r14w
   14001be99:	jmp    0x14001cc1c
   14001be9e:	mov    r11,QWORD PTR [rbp-0x50]
   14001bea2:	mov    r9d,0x1
   14001bea8:	cmp    esi,0x6f
   14001beab:	jg     0x14001c35f
   14001beb1:	je     0x14001c866
   14001beb7:	cmp    esi,0x63
   14001beba:	je     0x14001c33d
   14001bec0:	cmp    esi,0x64
   14001bec3:	je     0x14001c866
   14001bec9:	jle    0x14001c388
   14001becf:	cmp    esi,0x67
   14001bed2:	jle    0x14001bf34
   14001bed4:	cmp    esi,0x69
   14001bed7:	je     0x14001bf17
   14001bed9:	mov    eax,0x6e
   14001bede:	cmp    esi,eax
   14001bee0:	jne    0x14001c388
   14001bee6:	mov    r14d,DWORD PTR [rsp+0x30]
   14001beeb:	xor    r13d,r13d
   14001beee:	mov    eax,r14d
   14001bef1:	test   cl,cl
   14001bef3:	jne    0x14001c312
   14001bef9:	mov    r12d,DWORD PTR [rsp+0x54]
   14001befe:	test   r12d,r12d
   14001bf01:	je     0x14001cb55
   14001bf07:	mov    rax,QWORD PTR [rbp-0x78]
   14001bf0b:	mov    rcx,QWORD PTR [rbp-0x80]
   14001bf0f:	mov    QWORD PTR [rax],rcx
   14001bf12:	jmp    0x14001c312
   14001bf17:	mov    esi,0x64
   14001bf1c:	mov    eax,0x2d
   14001bf21:	cmp    ax,di
   14001bf24:	jne    0x14001c526
   14001bf2a:	mov    BYTE PTR [rsp+0x4c],r9b
   14001bf2f:	jmp    0x14001c530
   14001bf34:	xor    r13d,r13d
   14001bf37:	mov    ebx,r13d
   14001bf3a:	lea    ecx,[r13+0x2d]
   14001bf3e:	cmp    cx,di
   14001bf41:	jne    0x14001bf4f
   14001bf43:	mov    rax,QWORD PTR [rbp-0x68]
   14001bf47:	mov    rbx,r9
   14001bf4a:	mov    WORD PTR [rax],cx
   14001bf4d:	jmp    0x14001bf59
   14001bf4f:	mov    eax,0x2b
   14001bf54:	cmp    ax,di
   14001bf57:	jne    0x14001bf84
   14001bf59:	mov    r12,QWORD PTR [rsp+0x78]
   14001bf5e:	mov    r15d,DWORD PTR [rsp+0x44]
   14001bf63:	mov    r14d,DWORD PTR [rsp+0x30]
   14001bf68:	mov    rcx,r12
   14001bf6b:	sub    r15d,r9d
   14001bf6e:	add    r14d,r9d
   14001bf71:	call   0x14001fe2c
   14001bf76:	mov    r8d,DWORD PTR [rsp+0x58]
   14001bf7b:	movzx  edi,ax
   14001bf7e:	mov    DWORD PTR [rsp+0x40],edi
   14001bf82:	jmp    0x14001bf93
   14001bf84:	mov    r14d,DWORD PTR [rsp+0x30]
   14001bf89:	mov    r15d,DWORD PTR [rsp+0x44]
   14001bf8e:	mov    r12,QWORD PTR [rsp+0x78]
   14001bf93:	test   r8d,r8d
   14001bf96:	mov    eax,0xffffffff
   14001bf9b:	cmove  r15d,eax
   14001bf9f:	mov    eax,0xff00
   14001bfa4:	test   ax,di
   14001bfa7:	jne    0x14001c01b
   14001bfa9:	mov    esi,0x1
   14001bfae:	movzx  eax,di
   14001bfb1:	movzx  ecx,al
   14001bfb4:	call   0x14001dc68
   14001bfb9:	test   eax,eax
   14001bfbb:	je     0x14001c01b
   14001bfbd:	mov    eax,r15d
   14001bfc0:	sub    r15d,esi
   14001bfc3:	test   eax,eax
   14001bfc5:	je     0x14001c01b
   14001bfc7:	mov    rcx,QWORD PTR [rbp-0x68]
   14001bfcb:	add    DWORD PTR [rsp+0x64],esi
   14001bfcf:	movsx  eax,dil
   14001bfd3:	mov    WORD PTR [rcx+rbx*2],ax
   14001bfd7:	lea    rax,[rbp-0x70]
   14001bfdb:	add    rbx,rsi
   14001bfde:	lea    r9,[rbp-0x10]
   14001bfe2:	lea    r8,[rbp-0x68]
   14001bfe6:	lea    rdx,[rbp-0x58]
   14001bfea:	mov    rcx,rbx
   14001bfed:	mov    QWORD PTR [rsp+0x20],rax
   14001bff2:	call   0x14001b994
   14001bff7:	test   eax,eax
   14001bff9:	je     0x14001cc27
   14001bfff:	mov    rcx,r12
   14001c002:	add    r14d,esi
   14001c005:	call   0x14001fe2c
   14001c00a:	movzx  edi,ax
   14001c00d:	mov    eax,0xff00
   14001c012:	mov    DWORD PTR [rsp+0x40],edi
   14001c016:	test   ax,di
   14001c019:	je     0x14001bfae
   14001c01b:	mov    rax,QWORD PTR [rbp-0x30]
   14001c01f:	mov    edx,0x1
   14001c024:	mov    rcx,QWORD PTR [rax+0xf0]
   14001c02b:	mov    rax,QWORD PTR [rcx+0x58]
   14001c02f:	movzx  esi,WORD PTR [rax]
   14001c032:	movsx  eax,dil
   14001c036:	mov    ecx,esi
   14001c038:	cmp    esi,eax
   14001c03a:	jne    0x14001c103
   14001c040:	mov    eax,r15d
   14001c043:	sub    r15d,edx
   14001c046:	test   eax,eax
   14001c048:	je     0x14001c103
   14001c04e:	mov    rcx,r12
   14001c051:	add    r14d,edx
   14001c054:	call   0x14001fe2c
   14001c059:	lea    r9,[rbp-0x10]
   14001c05d:	lea    r8,[rbp-0x68]
   14001c061:	movzx  edi,ax
   14001c064:	mov    rax,QWORD PTR [rbp-0x68]
   14001c068:	lea    rdx,[rbp-0x58]
   14001c06c:	mov    WORD PTR [rax+rbx*2],si
   14001c070:	lea    rax,[rbp-0x70]
   14001c074:	mov    esi,0x1
   14001c079:	add    rbx,rsi
   14001c07c:	mov    DWORD PTR [rsp+0x40],edi
   14001c080:	mov    QWORD PTR [rsp+0x20],rax
   14001c085:	mov    rcx,rbx
   14001c088:	call   0x14001b994
   14001c08d:	test   eax,eax
   14001c08f:	je     0x14001cc27
   14001c095:	jmp    0x14001c0f6
   14001c097:	movzx  eax,di
   14001c09a:	movzx  ecx,al
   14001c09d:	call   0x14001dc68
   14001c0a2:	test   eax,eax
   14001c0a4:	je     0x14001c100
   14001c0a6:	mov    eax,r15d
   14001c0a9:	sub    r15d,esi
   14001c0ac:	test   eax,eax
   14001c0ae:	je     0x14001c100
   14001c0b0:	mov    rax,QWORD PTR [rbp-0x68]
   14001c0b4:	add    DWORD PTR [rsp+0x64],esi
   14001c0b8:	lea    r9,[rbp-0x10]
   14001c0bc:	mov    WORD PTR [rax+rbx*2],di
   14001c0c0:	lea    rax,[rbp-0x70]
   14001c0c4:	add    rbx,rsi
   14001c0c7:	lea    r8,[rbp-0x68]
   14001c0cb:	lea    rdx,[rbp-0x58]
   14001c0cf:	mov    rcx,rbx
   14001c0d2:	mov    QWORD PTR [rsp+0x20],rax
   14001c0d7:	call   0x14001b994
   14001c0dc:	test   eax,eax
   14001c0de:	je     0x14001cc27
   14001c0e4:	mov    rcx,r12
   14001c0e7:	add    r14d,esi
   14001c0ea:	call   0x14001fe2c
   14001c0ef:	movzx  edi,ax
   14001c0f2:	mov    DWORD PTR [rsp+0x40],edi
   14001c0f6:	mov    eax,0xff00
   14001c0fb:	test   ax,di
   14001c0fe:	je     0x14001c097
   14001c100:	mov    rdx,rsi
   14001c103:	mov    esi,DWORD PTR [rsp+0x64]
   14001c107:	test   esi,esi
   14001c109:	je     0x14001c240
   14001c10f:	lea    eax,[rdi-0x45]
   14001c112:	mov    ecx,0xffdf
   14001c117:	test   cx,ax
   14001c11a:	jne    0x14001c240
   14001c120:	mov    eax,r15d
   14001c123:	sub    r15d,edx
   14001c126:	test   eax,eax
   14001c128:	je     0x14001c240
   14001c12e:	mov    rax,QWORD PTR [rbp-0x68]
   14001c132:	mov    ecx,0x65
   14001c137:	lea    r9,[rbp-0x10]
   14001c13b:	mov    WORD PTR [rax+rbx*2],cx
   14001c13f:	add    rbx,rdx
   14001c142:	lea    rax,[rbp-0x70]
   14001c146:	lea    rdx,[rbp-0x58]
   14001c14a:	lea    r8,[rbp-0x68]
   14001c14e:	mov    rcx,rbx
   14001c151:	mov    QWORD PTR [rsp+0x20],rax
   14001c156:	call   0x14001b994
   14001c15b:	test   eax,eax
   14001c15d:	je     0x14001cc27
   14001c163:	mov    rcx,r12
   14001c166:	inc    r14d
   14001c169:	call   0x14001fe2c
   14001c16e:	mov    ecx,0x2d
   14001c173:	movzx  edi,ax
   14001c176:	mov    DWORD PTR [rsp+0x40],edi
   14001c17a:	cmp    cx,ax
   14001c17d:	jne    0x14001c1b1
   14001c17f:	mov    rax,QWORD PTR [rbp-0x68]
   14001c183:	lea    r9,[rbp-0x10]
   14001c187:	lea    r8,[rbp-0x68]
   14001c18b:	mov    WORD PTR [rax+rbx*2],cx
   14001c18f:	lea    rax,[rbp-0x70]
   14001c193:	inc    rbx
   14001c196:	lea    rdx,[rbp-0x58]
   14001c19a:	mov    rcx,rbx
   14001c19d:	mov    QWORD PTR [rsp+0x20],rax
   14001c1a2:	call   0x14001b994
   14001c1a7:	test   eax,eax
   14001c1a9:	je     0x14001cc27
   14001c1af:	jmp    0x14001c1bb
   14001c1b1:	mov    eax,0x2b
   14001c1b6:	cmp    ax,di
   14001c1b9:	jne    0x14001c236
   14001c1bb:	mov    eax,r15d
   14001c1be:	mov    ecx,0x1
   14001c1c3:	sub    r15d,ecx
   14001c1c6:	test   eax,eax
   14001c1c8:	jne    0x14001c1cf
   14001c1ca:	mov    r15d,r13d
   14001c1cd:	jmp    0x14001c236
   14001c1cf:	add    r14d,ecx
   14001c1d2:	jmp    0x14001c227
   14001c1d4:	movzx  eax,di
   14001c1d7:	movzx  ecx,al
   14001c1da:	call   0x14001dc68
   14001c1df:	test   eax,eax
   14001c1e1:	je     0x14001c240
   14001c1e3:	mov    eax,r15d
   14001c1e6:	mov    ecx,0x1
   14001c1eb:	sub    r15d,ecx
   14001c1ee:	test   eax,eax
   14001c1f0:	je     0x14001c240
   14001c1f2:	mov    rax,QWORD PTR [rbp-0x68]
   14001c1f6:	add    esi,ecx
   14001c1f8:	lea    r9,[rbp-0x10]
   14001c1fc:	mov    WORD PTR [rax+rbx*2],di
   14001c200:	add    rbx,rcx
   14001c203:	lea    rax,[rbp-0x70]
   14001c207:	lea    r8,[rbp-0x68]
   14001c20b:	lea    rdx,[rbp-0x58]
   14001c20f:	mov    rcx,rbx
   14001c212:	mov    QWORD PTR [rsp+0x20],rax
   14001c217:	call   0x14001b994
   14001c21c:	test   eax,eax
   14001c21e:	je     0x14001cc27
   14001c224:	inc    r14d
   14001c227:	mov    rcx,r12
   14001c22a:	call   0x14001fe2c
   14001c22f:	movzx  edi,ax
   14001c232:	mov    DWORD PTR [rsp+0x40],edi
   14001c236:	mov    eax,0xff00
   14001c23b:	test   ax,di
   14001c23e:	je     0x14001c1d4
   14001c240:	mov    eax,0x1
   14001c245:	mov    r15d,0xffff
   14001c24b:	sub    r14d,eax
   14001c24e:	mov    DWORD PTR [rsp+0x30],r14d
   14001c253:	mov    DWORD PTR [rsp+0x48],r14d
   14001c258:	cmp    r15w,di
   14001c25c:	je     0x14001c26e
   14001c25e:	mov    rdx,r12
   14001c261:	movzx  ecx,di
   14001c264:	call   0x140020024
   14001c269:	mov    eax,0x1
   14001c26e:	test   esi,esi
   14001c270:	je     0x14001cc07
   14001c276:	cmp    BYTE PTR [rsp+0x34],r13b
   14001c27b:	jne    0x14001c318
   14001c281:	mov    r13d,DWORD PTR [rsp+0x38]
   14001c286:	mov    r15,QWORD PTR [rbp-0x68]
   14001c28a:	xor    r12d,r12d
   14001c28d:	add    r13d,eax
   14001c290:	mov    rax,QWORD PTR [rbp-0x58]
   14001c294:	mov    WORD PTR [r15+rbx*2],r12w
   14001c299:	lea    rbx,[rax*2+0x2]
   14001c2a1:	mov    DWORD PTR [rsp+0x38],r13d
   14001c2a6:	mov    rcx,rbx
   14001c2a9:	call   0x140015d94
   14001c2ae:	mov    rsi,rax
   14001c2b1:	test   rax,rax
   14001c2b4:	je     0x14001ccc0
   14001c2ba:	lea    rax,[rbx-0x1]
   14001c2be:	mov    r9,r15
   14001c2c1:	mov    r8,rbx
   14001c2c4:	mov    rdx,rsi
   14001c2c7:	xor    ecx,ecx
   14001c2c9:	mov    QWORD PTR [rsp+0x20],rax
   14001c2ce:	call   0x140020848
   14001c2d3:	cmp    eax,0x16
   14001c2d6:	je     0x14001cd6d
   14001c2dc:	cmp    eax,0x22
   14001c2df:	je     0x14001cd6d
   14001c2e5:	mov    rcx,QWORD PTR [rip+0x1af6c]        # 0x140037258
   14001c2ec:	movsx  ebx,BYTE PTR [rsp+0x35]
   14001c2f1:	call   QWORD PTR [rip+0xadf9]        # 0x1400270f0
   14001c2f7:	mov    rdx,QWORD PTR [rbp-0x78]
   14001c2fb:	lea    r9,[rbp-0x30]
   14001c2ff:	lea    ecx,[rbx-0x1]
   14001c302:	mov    r8,rsi
   14001c305:	call   rax
   14001c307:	mov    rcx,rsi
   14001c30a:	call   0x14001392c
   14001c30f:	xor    r13d,r13d
   14001c312:	mov    r15d,0xffff
   14001c318:	mov    rbx,QWORD PTR [rsp+0x68]
   14001c31d:	mov    rsi,QWORD PTR [rsp+0x78]
   14001c322:	mov    eax,0x1
   14001c327:	add    BYTE PTR [rsp+0x3c],al
   14001c32b:	add    rbx,0x2
   14001c32f:	lea    r12d,[rax+0x24]
   14001c333:	mov    QWORD PTR [rsp+0x68],rbx
   14001c338:	jmp    0x14001cbca
   14001c33d:	test   r8d,r8d
   14001c340:	jne    0x14001c34e
   14001c342:	add    edx,r9d
   14001c345:	mov    DWORD PTR [rsp+0x58],r9d
   14001c34a:	mov    DWORD PTR [rsp+0x44],edx
   14001c34e:	test   r14b,r14b
   14001c351:	jle    0x14001c66e
   14001c357:	mov    r13b,r9b
   14001c35a:	jmp    0x14001c66e
   14001c35f:	cmp    esi,0x70
   14001c362:	je     0x14001c850
   14001c368:	cmp    esi,0x73
   14001c36b:	je     0x14001c663
   14001c371:	cmp    esi,0x75
   14001c374:	je     0x14001c866
   14001c37a:	cmp    esi,0x78
   14001c37d:	je     0x14001bf1c
   14001c383:	cmp    esi,0x7b
   14001c386:	je     0x14001c3b5
   14001c388:	mov    r15d,0xffff
   14001c38e:	cmp    WORD PTR [r10],di
   14001c392:	jne    0x14001cc36
   14001c398:	dec    BYTE PTR [rsp+0x3c]
   14001c39c:	mov    r14d,DWORD PTR [rsp+0x30]
   14001c3a1:	xor    r13d,r13d
   14001c3a4:	test   cl,cl
   14001c3a6:	jne    0x14001c318
   14001c3ac:	mov    QWORD PTR [rbp-0x40],r11
   14001c3b0:	jmp    0x14001c318
   14001c3b5:	test   r14b,r14b
   14001c3b8:	movzx  r13d,r13b
   14001c3bc:	mov    eax,0x5e
   14001c3c1:	cmovg  r13d,r9d
   14001c3c5:	add    r10,0x2
   14001c3c9:	mov    DWORD PTR [rbp-0x60],r13d
   14001c3cd:	mov    QWORD PTR [rsp+0x68],r10
   14001c3d2:	cmp    ax,WORD PTR [r10]
   14001c3d6:	jne    0x14001c3e6
   14001c3d8:	add    r10,0x2
   14001c3dc:	mov    BYTE PTR [rsp+0x5c],0xff
   14001c3e1:	mov    QWORD PTR [rsp+0x68],r10
   14001c3e6:	mov    rbx,QWORD PTR [rsp+0x70]
   14001c3eb:	xor    r14d,r14d
   14001c3ee:	test   rbx,rbx
   14001c3f1:	jne    0x14001c415
   14001c3f3:	mov    ecx,0x2000
   14001c3f8:	call   0x140015d94
   14001c3fd:	mov    rbx,rax
   14001c400:	mov    QWORD PTR [rsp+0x70],rax
   14001c405:	test   rax,rax
   14001c408:	je     0x14001cc9b
   14001c40e:	lea    eax,[r14+0x1]
   14001c412:	mov    DWORD PTR [rbp-0x48],eax
   14001c415:	xor    edx,edx
   14001c417:	mov    r8d,0x2000
   14001c41d:	mov    rcx,rbx
   14001c420:	call   0x140014d80
   14001c425:	mov    r10,QWORD PTR [rsp+0x68]
   14001c42a:	mov    edx,0x5d
   14001c42f:	cmp    dx,WORD PTR [r10]
   14001c433:	jne    0x14001c442
   14001c435:	lea    eax,[rdx-0x3d]
   14001c438:	mov    r15d,edx
   14001c43b:	add    r10,0x2
   14001c43f:	mov    BYTE PTR [rbx+0xb],al
   14001c442:	movzx  eax,WORD PTR [r10]
   14001c446:	mov    r9d,0x1
   14001c44c:	cmp    dx,ax
   14001c44f:	je     0x14001c512
   14001c455:	lea    r13d,[r9+0x2c]
   14001c459:	add    r10,0x2
   14001c45d:	cmp    r13w,ax
   14001c461:	jne    0x14001c4df
   14001c463:	test   r15w,r15w
   14001c467:	je     0x14001c4df
   14001c469:	movzx  ecx,WORD PTR [r10]
   14001c46d:	cmp    dx,cx
   14001c470:	je     0x14001c4df
   14001c472:	add    r10,0x2
   14001c476:	mov    QWORD PTR [rsp+0x68],r10
   14001c47b:	cmp    r15w,cx
   14001c47f:	jae    0x14001c487
   14001c481:	movzx  r9d,cx
   14001c485:	jmp    0x14001c48f
   14001c487:	movzx  r9d,r15w
   14001c48b:	movzx  r15d,cx
   14001c48f:	mov    r11d,0x1
   14001c495:	cmp    r15w,r9w
   14001c499:	jae    0x14001c4c8
   14001c49b:	movzx  r10d,r15w
   14001c49f:	movzx  ecx,r15w
   14001c4a3:	mov    r8,r10
   14001c4a6:	mov    edx,r11d
   14001c4a9:	and    ecx,0x7
   14001c4ac:	shr    r8,0x3
   14001c4b0:	add    r15w,r11w
   14001c4b4:	shl    dl,cl
   14001c4b6:	add    r10,r11
   14001c4b9:	or     BYTE PTR [r8+rbx*1],dl
   14001c4bd:	cmp    r15w,r9w
   14001c4c1:	jb     0x14001c49f
   14001c4c3:	mov    r10,QWORD PTR [rsp+0x68]
   14001c4c8:	movzx  r8d,r9w
   14001c4cc:	movzx  eax,r9w
   14001c4d0:	mov    edx,r11d
   14001c4d3:	mov    r9d,0x1
   14001c4d9:	movzx  r15d,r14w
   14001c4dd:	jmp    0x14001c4ed
   14001c4df:	movzx  r15d,ax
   14001c4e3:	movzx  r8d,ax
   14001c4e7:	mov    edx,r9d
   14001c4ea:	movzx  eax,ax
   14001c4ed:	and    eax,0x7
   14001c4f0:	shr    r8,0x3
   14001c4f4:	mov    cl,al
   14001c4f6:	shl    dl,cl
   14001c4f8:	or     BYTE PTR [r8+rbx*1],dl
   14001c4fc:	movzx  eax,WORD PTR [r10]
   14001c500:	mov    edx,0x5d
   14001c505:	cmp    dx,ax
   14001c508:	jne    0x14001c459
   14001c50e:	mov    r13d,DWORD PTR [rbp-0x60]
   14001c512:	cmp    WORD PTR [r10],r14w
   14001c516:	je     0x14001cca1
   14001c51c:	mov    QWORD PTR [rsp+0x68],r10
   14001c521:	jmp    0x14001c66e
   14001c526:	mov    eax,0x2b
   14001c52b:	cmp    ax,di
   14001c52e:	jne    0x14001c541
   14001c530:	sub    edx,r9d
   14001c533:	mov    DWORD PTR [rsp+0x44],edx
   14001c537:	jne    0x14001c5b6
   14001c539:	test   r8d,r8d
   14001c53c:	je     0x14001c5b6
   14001c53e:	mov    bl,r9b
   14001c541:	mov    r15,QWORD PTR [rsp+0x78]
   14001c546:	mov    r14d,DWORD PTR [rsp+0x30]
   14001c54b:	mov    eax,0x30
   14001c550:	cmp    ax,di
   14001c553:	jne    0x14001c8d4
   14001c559:	lea    r12d,[rax-0x2f]
   14001c55d:	mov    rcx,r15
   14001c560:	add    r14d,r12d
   14001c563:	mov    DWORD PTR [rsp+0x30],r14d
   14001c568:	mov    DWORD PTR [rsp+0x48],r14d
   14001c56d:	call   0x14001fe2c
   14001c572:	movzx  edi,ax
   14001c575:	mov    ecx,0xffdf
   14001c57a:	lea    eax,[rdi-0x58]
   14001c57d:	mov    DWORD PTR [rsp+0x40],edi
   14001c581:	test   cx,ax
   14001c584:	je     0x14001c618
   14001c58a:	mov    r13d,r12d
   14001c58d:	cmp    esi,0x78
   14001c590:	je     0x14001c5e1
   14001c592:	mov    r15d,DWORD PTR [rsp+0x44]
   14001c597:	xor    ecx,ecx
   14001c599:	cmp    DWORD PTR [rsp+0x58],ecx
   14001c59d:	je     0x14001c5a7
   14001c59f:	sub    r15d,r12d
   14001c5a2:	jne    0x14001c5a7
   14001c5a4:	add    bl,r12b
   14001c5a7:	mov    r12d,DWORD PTR [rsp+0x54]
   14001c5ac:	mov    esi,0x6f
   14001c5b1:	jmp    0x14001c8e5
   14001c5b6:	mov    r14d,DWORD PTR [rsp+0x30]
   14001c5bb:	mov    r15,QWORD PTR [rsp+0x78]
   14001c5c0:	add    r14d,r9d
   14001c5c3:	mov    rcx,r15
   14001c5c6:	mov    DWORD PTR [rsp+0x30],r14d
   14001c5cb:	mov    DWORD PTR [rsp+0x48],r14d
   14001c5d0:	call   0x14001fe2c
   14001c5d5:	movzx  edi,ax
   14001c5d8:	mov    DWORD PTR [rsp+0x40],edi
   14001c5dc:	jmp    0x14001c54b
   14001c5e1:	sub    r14d,r12d
   14001c5e4:	mov    eax,0xffff
   14001c5e9:	mov    DWORD PTR [rsp+0x30],r14d
   14001c5ee:	mov    DWORD PTR [rsp+0x48],r14d
   14001c5f3:	cmp    ax,di
   14001c5f6:	je     0x14001c603
   14001c5f8:	mov    rdx,r15
   14001c5fb:	movzx  ecx,di
   14001c5fe:	call   0x140020024
   14001c603:	mov    r12d,DWORD PTR [rsp+0x54]
   14001c608:	mov    eax,0x30
   14001c60d:	mov    edi,eax
   14001c60f:	mov    DWORD PTR [rsp+0x40],eax
   14001c613:	jmp    0x14001c8de
   14001c618:	add    r14d,r12d
   14001c61b:	mov    rcx,r15
   14001c61e:	mov    DWORD PTR [rsp+0x30],r14d
   14001c623:	mov    DWORD PTR [rsp+0x48],r14d
   14001c628:	call   0x14001fe2c
   14001c62d:	xor    ecx,ecx
   14001c62f:	movzx  edi,ax
   14001c632:	mov    DWORD PTR [rsp+0x40],edi
   14001c636:	cmp    DWORD PTR [rsp+0x58],ecx
   14001c63a:	je     0x14001c64f
   14001c63c:	mov    eax,DWORD PTR [rsp+0x44]
   14001c640:	sub    eax,0x2
   14001c643:	mov    DWORD PTR [rsp+0x44],eax
   14001c647:	cmp    eax,r12d
   14001c64a:	jge    0x14001c64f
   14001c64c:	add    bl,r12b
   14001c64f:	mov    r12d,DWORD PTR [rsp+0x54]
   14001c654:	mov    r13d,DWORD PTR [rsp+0x64]
   14001c659:	mov    esi,0x78
   14001c65e:	jmp    0x14001c8e0
   14001c663:	movzx  r13d,r13b
   14001c667:	test   r14b,r14b
   14001c66a:	cmovg  r13d,r9d
   14001c66e:	mov    r14d,DWORD PTR [rsp+0x30]
   14001c673:	mov    rbx,QWORD PTR [rbp-0x78]
   14001c677:	mov    edx,0x1
   14001c67c:	sub    r14d,edx
   14001c67f:	mov    eax,0xffff
   14001c684:	mov    DWORD PTR [rsp+0x30],r14d
   14001c689:	mov    DWORD PTR [rsp+0x48],r14d
   14001c68e:	cmp    ax,di
   14001c691:	je     0x14001c6a5
   14001c693:	mov    rdx,QWORD PTR [rsp+0x78]
   14001c698:	movzx  ecx,di
   14001c69b:	call   0x140020024
   14001c6a0:	mov    edx,0x1
   14001c6a5:	cmp    esi,0x63
   14001c6a8:	je     0x14001c6ad
   14001c6aa:	sub    r12,rdx
   14001c6ad:	mov    r15b,BYTE PTR [rsp+0x5c]
   14001c6b2:	xor    r11d,r11d
   14001c6b5:	cmp    DWORD PTR [rsp+0x58],r11d
   14001c6ba:	je     0x14001c6d0
   14001c6bc:	mov    ecx,DWORD PTR [rsp+0x44]
   14001c6c0:	mov    eax,ecx
   14001c6c2:	sub    ecx,edx
   14001c6c4:	mov    DWORD PTR [rsp+0x44],ecx
   14001c6c8:	test   eax,eax
   14001c6ca:	je     0x14001c803
   14001c6d0:	mov    rcx,QWORD PTR [rsp+0x78]
   14001c6d5:	add    r14d,edx
   14001c6d8:	mov    DWORD PTR [rsp+0x30],r14d
   14001c6dd:	mov    DWORD PTR [rsp+0x48],r14d
   14001c6e2:	call   0x14001fe2c
   14001c6e7:	movzx  edi,ax
   14001c6ea:	mov    eax,0xffff
   14001c6ef:	mov    DWORD PTR [rsp+0x40],edi
   14001c6f3:	cmp    ax,di
   14001c6f6:	je     0x14001c7ca
   14001c6fc:	cmp    esi,0x63
   14001c6ff:	je     0x14001c749
   14001c701:	cmp    esi,0x73
   14001c704:	jne    0x14001c71b
   14001c706:	lea    eax,[rdi-0x9]
   14001c709:	cmp    ax,0x4
   14001c70d:	jbe    0x14001c7ca
   14001c713:	lea    eax,[rsi-0x53]
   14001c716:	cmp    di,ax
   14001c719:	jne    0x14001c749
   14001c71b:	cmp    esi,0x7b
   14001c71e:	jne    0x14001c7ca
   14001c724:	mov    rcx,QWORD PTR [rsp+0x70]
   14001c729:	movzx  eax,di
   14001c72c:	movzx  edx,di
   14001c72f:	shr    rax,0x3
   14001c733:	and    edx,0x7
   14001c736:	movsx  ecx,BYTE PTR [rax+rcx*1]
   14001c73a:	movsx  eax,r15b
   14001c73e:	xor    ecx,eax
   14001c740:	bt     ecx,edx
   14001c743:	jae    0x14001c7ca
   14001c749:	xor    r11d,r11d
   14001c74c:	cmp    BYTE PTR [rsp+0x34],r11b
   14001c751:	jne    0x14001c7bc
   14001c753:	test   r12,r12
   14001c756:	je     0x14001cc59
   14001c75c:	test   r13b,r13b
   14001c75f:	je     0x14001c77c
   14001c761:	mov    rcx,QWORD PTR [rbp-0x78]
   14001c765:	lea    edx,[r11+0x1]
   14001c769:	mov    WORD PTR [rcx],di
   14001c76c:	add    rcx,0x2
   14001c770:	sub    r12,rdx
   14001c773:	mov    QWORD PTR [rbp-0x78],rcx
   14001c777:	jmp    0x14001c6b5
   14001c77c:	mov    rdx,QWORD PTR [rbp-0x78]
   14001c780:	lea    rcx,[rbp-0x60]
   14001c784:	movzx  r9d,di
   14001c788:	mov    r8,r12
   14001c78b:	mov    DWORD PTR [rbp-0x60],r11d
   14001c78f:	call   0x140020418
   14001c794:	cmp    eax,0x22
   14001c797:	je     0x14001cc59
   14001c79d:	movsxd rax,DWORD PTR [rbp-0x60]
   14001c7a1:	xor    r11d,r11d
   14001c7a4:	lea    edx,[r11+0x1]
   14001c7a8:	test   eax,eax
   14001c7aa:	jle    0x14001c6b5
   14001c7b0:	add    QWORD PTR [rbp-0x78],rax
   14001c7b4:	sub    r12,rax
   14001c7b7:	jmp    0x14001c6b5
   14001c7bc:	add    rbx,0x2
   14001c7c0:	mov    edx,0x1
   14001c7c5:	jmp    0x14001c6b5
   14001c7ca:	mov    edx,0x1
   14001c7cf:	mov    r15d,0xffff
   14001c7d5:	sub    r14d,edx
   14001c7d8:	mov    DWORD PTR [rsp+0x30],r14d
   14001c7dd:	mov    DWORD PTR [rsp+0x48],r14d
   14001c7e2:	cmp    r15w,di
   14001c7e6:	je     0x14001c7fe
   14001c7e8:	mov    rdx,QWORD PTR [rsp+0x78]
   14001c7ed:	movzx  ecx,di
   14001c7f0:	call   0x140020024
   14001c7f5:	xor    r11d,r11d
   14001c7f8:	lea    edx,[r11+0x1]
   14001c7fc:	jmp    0x14001c809
   14001c7fe:	xor    r11d,r11d
   14001c801:	jmp    0x14001c809
   14001c803:	mov    r15d,0xffff
   14001c809:	mov    rax,QWORD PTR [rbp-0x78]
   14001c80d:	cmp    rbx,rax
   14001c810:	je     0x14001cc07
   14001c816:	cmp    BYTE PTR [rsp+0x34],r11b
   14001c81b:	jne    0x14001cb75
   14001c821:	add    DWORD PTR [rsp+0x38],edx
   14001c825:	cmp    esi,0x63
   14001c828:	je     0x14001c30f
   14001c82e:	mov    r15d,0xffff
   14001c834:	test   r13b,r13b
   14001c837:	je     0x14001c845
   14001c839:	xor    r13d,r13d
   14001c83c:	mov    WORD PTR [rax],r13w
   14001c840:	jmp    0x14001c318
   14001c845:	xor    r13d,r13d
   14001c848:	mov    BYTE PTR [rax],r13b
   14001c84b:	jmp    0x14001c318
   14001c850:	mov    r12d,DWORD PTR [rsp+0x54]
   14001c855:	mov    BYTE PTR [rsp+0x35],r9b
   14001c85a:	add    r12d,r9d
   14001c85d:	xor    r14d,r14d
   14001c860:	mov    QWORD PTR [rbp-0x80],r14
   14001c864:	jmp    0x14001c86b
   14001c866:	mov    r12d,DWORD PTR [rsp+0x54]
   14001c86b:	mov    eax,0x2d
   14001c870:	cmp    ax,di
   14001c873:	jne    0x14001c87c
   14001c875:	mov    BYTE PTR [rsp+0x4c],r9b
   14001c87a:	jmp    0x14001c886
   14001c87c:	mov    eax,0x2b
   14001c881:	cmp    ax,di
   14001c884:	jne    0x14001c8d9
   14001c886:	sub    edx,r9d
   14001c889:	mov    DWORD PTR [rsp+0x44],edx
   14001c88d:	jne    0x14001c8a3
   14001c88f:	test   r8d,r8d
   14001c892:	je     0x14001c8a3
   14001c894:	mov    r13d,DWORD PTR [rsp+0x64]
   14001c899:	mov    bl,r9b
   14001c89c:	mov    r15d,edx
   14001c89f:	xor    ecx,ecx
   14001c8a1:	jmp    0x14001c8e5
   14001c8a3:	mov    r14d,DWORD PTR [rsp+0x30]
   14001c8a8:	mov    rcx,QWORD PTR [rsp+0x78]
   14001c8ad:	add    r14d,r9d
   14001c8b0:	mov    DWORD PTR [rsp+0x30],r14d
   14001c8b5:	mov    DWORD PTR [rsp+0x48],r14d
   14001c8ba:	call   0x14001fe2c
   14001c8bf:	mov    r15d,DWORD PTR [rsp+0x44]
   14001c8c4:	mov    r13d,DWORD PTR [rsp+0x64]
   14001c8c9:	movzx  edi,ax
   14001c8cc:	mov    DWORD PTR [rsp+0x40],edi
   14001c8d0:	xor    ecx,ecx
   14001c8d2:	jmp    0x14001c8ea
   14001c8d4:	mov    r12d,DWORD PTR [rsp+0x54]
   14001c8d9:	mov    r13d,DWORD PTR [rsp+0x64]
   14001c8de:	xor    ecx,ecx
   14001c8e0:	mov    r15d,DWORD PTR [rsp+0x44]
   14001c8e5:	mov    r14d,DWORD PTR [rsp+0x30]
   14001c8ea:	test   r12d,r12d
   14001c8ed:	je     0x14001ca11
   14001c8f3:	test   bl,bl
   14001c8f5:	mov    rbx,QWORD PTR [rbp-0x80]
   14001c8f9:	jne    0x14001c9f7
   14001c8ff:	lea    eax,[rsi-0x70]
   14001c902:	test   eax,0xfffffff7
   14001c907:	mov    eax,0xff00
   14001c90c:	je     0x14001c94c
   14001c90e:	test   ax,di
   14001c911:	jne    0x14001c9cf
   14001c917:	movzx  eax,di
   14001c91a:	movzx  ecx,al
   14001c91d:	call   0x14001dc68
   14001c922:	xor    ecx,ecx
   14001c924:	test   eax,eax
   14001c926:	je     0x14001c9cf
   14001c92c:	cmp    esi,0x6f
   14001c92f:	jne    0x14001c943
   14001c931:	lea    eax,[rcx+0x38]
   14001c934:	cmp    ax,di
   14001c937:	jbe    0x14001c9cf
   14001c93d:	shl    rbx,0x3
   14001c941:	jmp    0x14001c988
   14001c943:	lea    rbx,[rbx+rbx*4]
   14001c947:	add    rbx,rbx
   14001c94a:	jmp    0x14001c988
   14001c94c:	test   ax,di
   14001c94f:	jne    0x14001c9cf
   14001c951:	movzx  eax,di
   14001c954:	movzx  ebx,al
   14001c957:	mov    ecx,ebx
   14001c959:	call   0x14001dce4
   14001c95e:	xor    ecx,ecx
   14001c960:	test   eax,eax
   14001c962:	je     0x14001c9cf
   14001c964:	shl    QWORD PTR [rbp-0x80],0x4
   14001c969:	mov    ecx,ebx
   14001c96b:	call   0x14001dc68
   14001c970:	mov    rbx,QWORD PTR [rbp-0x80]
   14001c974:	test   eax,eax
   14001c976:	jne    0x14001c988
   14001c978:	mov    eax,0xffdf
   14001c97d:	and    di,ax
   14001c980:	sub    di,0x7
   14001c984:	mov    DWORD PTR [rsp+0x40],edi
   14001c988:	movzx  eax,di
   14001c98b:	mov    ecx,0x1
   14001c990:	sub    eax,0x30
   14001c993:	add    r13d,ecx
   14001c996:	cdqe   
   14001c998:	add    rbx,rax
   14001c99b:	xor    eax,eax
   14001c99d:	mov    QWORD PTR [rbp-0x80],rbx
   14001c9a1:	cmp    DWORD PTR [rsp+0x58],eax
   14001c9a5:	je     0x14001c9ac
   14001c9a7:	sub    r15d,ecx
   14001c9aa:	je     0x14001c9f7
   14001c9ac:	add    r14d,ecx
   14001c9af:	mov    rcx,QWORD PTR [rsp+0x78]
   14001c9b4:	mov    DWORD PTR [rsp+0x30],r14d
   14001c9b9:	mov    DWORD PTR [rsp+0x48],r14d
   14001c9be:	call   0x14001fe2c
   14001c9c3:	movzx  edi,ax
   14001c9c6:	mov    DWORD PTR [rsp+0x40],edi
   14001c9ca:	jmp    0x14001c8ff
   14001c9cf:	dec    r14d
   14001c9d2:	mov    eax,0xffff
   14001c9d7:	mov    DWORD PTR [rsp+0x30],r14d
   14001c9dc:	mov    DWORD PTR [rsp+0x48],r14d
   14001c9e1:	cmp    ax,di
   14001c9e4:	je     0x14001c9f3
   14001c9e6:	mov    rdx,QWORD PTR [rsp+0x78]
   14001c9eb:	movzx  ecx,di
   14001c9ee:	call   0x140020024
   14001c9f3:	mov    rbx,QWORD PTR [rbp-0x80]
   14001c9f7:	xor    r11d,r11d
   14001c9fa:	cmp    BYTE PTR [rsp+0x4c],r11b
   14001c9ff:	je     0x14001cb2a
   14001ca05:	neg    rbx
   14001ca08:	mov    QWORD PTR [rbp-0x80],rbx
   14001ca0c:	jmp    0x14001cb2a
   14001ca11:	test   bl,bl
   14001ca13:	mov    ebx,DWORD PTR [rsp+0x60]
   14001ca17:	jne    0x14001cb1a
   14001ca1d:	lea    eax,[rsi-0x70]
   14001ca20:	test   eax,0xfffffff7
   14001ca25:	mov    eax,0xff00
   14001ca2a:	je     0x14001ca68
   14001ca2c:	test   ax,di
   14001ca2f:	jne    0x14001caf2
   14001ca35:	movzx  eax,di
   14001ca38:	movzx  ecx,al
   14001ca3b:	call   0x14001dc68
   14001ca40:	xor    ecx,ecx
   14001ca42:	test   eax,eax
   14001ca44:	je     0x14001caf2
   14001ca4a:	cmp    esi,0x6f
   14001ca4d:	jne    0x14001ca60
   14001ca4f:	lea    eax,[rcx+0x38]
   14001ca52:	cmp    ax,di
   14001ca55:	jbe    0x14001caf2
   14001ca5b:	shl    ebx,0x3
   14001ca5e:	jmp    0x14001caae
   14001ca60:	lea    eax,[rbx+rbx*4]
   14001ca63:	lea    ebx,[rax+rax*1]
   14001ca66:	jmp    0x14001caae
   14001ca68:	test   ax,di
   14001ca6b:	jne    0x14001caf2
   14001ca71:	movzx  eax,di
   14001ca74:	movzx  ebx,al
   14001ca77:	mov    ecx,ebx
   14001ca79:	call   0x14001dce4
   14001ca7e:	xor    ecx,ecx
   14001ca80:	test   eax,eax
   14001ca82:	je     0x14001caf2
   14001ca84:	mov    eax,DWORD PTR [rsp+0x60]
   14001ca88:	mov    ecx,ebx
   14001ca8a:	shl    eax,0x4
   14001ca8d:	mov    DWORD PTR [rsp+0x60],eax
   14001ca91:	call   0x14001dc68
   14001ca96:	mov    ebx,DWORD PTR [rsp+0x60]
   14001ca9a:	test   eax,eax
   14001ca9c:	jne    0x14001caae
   14001ca9e:	mov    eax,0xffdf
   14001caa3:	and    di,ax
   14001caa6:	sub    di,0x7
   14001caaa:	mov    DWORD PTR [rsp+0x40],edi
   14001caae:	movzx  eax,di
   14001cab1:	add    ebx,0xffffffd0
   14001cab4:	mov    ecx,0x1
   14001cab9:	add    ebx,eax
   14001cabb:	xor    eax,eax
   14001cabd:	add    r13d,ecx
   14001cac0:	mov    DWORD PTR [rsp+0x60],ebx
   14001cac4:	cmp    DWORD PTR [rsp+0x58],eax
   14001cac8:	je     0x14001cacf
   14001caca:	sub    r15d,ecx
   14001cacd:	je     0x14001cb1a
   14001cacf:	add    r14d,ecx
   14001cad2:	mov    rcx,QWORD PTR [rsp+0x78]
   14001cad7:	mov    DWORD PTR [rsp+0x30],r14d
   14001cadc:	mov    DWORD PTR [rsp+0x48],r14d
   14001cae1:	call   0x14001fe2c
   14001cae6:	movzx  edi,ax
   14001cae9:	mov    DWORD PTR [rsp+0x40],edi
   14001caed:	jmp    0x14001ca1d
   14001caf2:	dec    r14d
   14001caf5:	mov    eax,0xffff
   14001cafa:	mov    DWORD PTR [rsp+0x30],r14d
   14001caff:	mov    DWORD PTR [rsp+0x48],r14d
   14001cb04:	cmp    ax,di
   14001cb07:	je     0x14001cb16
   14001cb09:	mov    rdx,QWORD PTR [rsp+0x78]
   14001cb0e:	movzx  ecx,di
   14001cb11:	call   0x140020024
   14001cb16:	mov    ebx,DWORD PTR [rsp+0x60]
   14001cb1a:	xor    r11d,r11d
   14001cb1d:	cmp    BYTE PTR [rsp+0x4c],r11b
   14001cb22:	je     0x14001cb2a
   14001cb24:	neg    ebx
   14001cb26:	mov    DWORD PTR [rsp+0x60],ebx
   14001cb2a:	cmp    esi,0x46
   14001cb2d:	cmove  r13d,r11d
   14001cb31:	test   r13d,r13d
   14001cb34:	je     0x14001cc27
   14001cb3a:	xor    r13d,r13d
   14001cb3d:	cmp    BYTE PTR [rsp+0x34],r13b
   14001cb42:	jne    0x14001c312
   14001cb48:	inc    DWORD PTR [rsp+0x38]
   14001cb4c:	mov    eax,DWORD PTR [rsp+0x60]
   14001cb50:	jmp    0x14001befe
   14001cb55:	mov    rcx,QWORD PTR [rbp-0x78]
   14001cb59:	mov    r15d,0xffff
   14001cb5f:	cmp    BYTE PTR [rsp+0x35],r13b
   14001cb64:	je     0x14001cb6d
   14001cb66:	mov    DWORD PTR [rcx],eax
   14001cb68:	jmp    0x14001c318
   14001cb6d:	mov    WORD PTR [rcx],ax
   14001cb70:	jmp    0x14001c318
   14001cb75:	xor    r13d,r13d
   14001cb78:	jmp    0x14001c318
   14001cb7d:	cmp    r12w,WORD PTR [r10]
   14001cb81:	jne    0x14001cb94
   14001cb83:	lea    rax,[r10+0x2]
   14001cb87:	cmp    r12w,WORD PTR [rax]
   14001cb8b:	cmove  r10,rax
   14001cb8f:	mov    QWORD PTR [rsp+0x68],r10
   14001cb94:	inc    r14d
   14001cb97:	mov    rcx,rsi
   14001cb9a:	mov    DWORD PTR [rsp+0x30],r14d
   14001cb9f:	mov    DWORD PTR [rsp+0x48],r14d
   14001cba4:	call   0x14001fe2c
   14001cba9:	mov    rbx,QWORD PTR [rsp+0x68]
   14001cbae:	movzx  edi,ax
   14001cbb1:	movzx  eax,WORD PTR [rbx]
   14001cbb4:	add    rbx,0x2
   14001cbb8:	mov    DWORD PTR [rsp+0x40],edi
   14001cbbc:	mov    QWORD PTR [rsp+0x68],rbx
   14001cbc1:	cmp    ax,di
   14001cbc4:	jne    0x14001cc89
   14001cbca:	cmp    r15w,di
   14001cbce:	jne    0x14001cbe1
   14001cbd0:	cmp    WORD PTR [rbx],r12w
   14001cbd4:	jne    0x14001cc07
   14001cbd6:	mov    eax,0x6e
   14001cbdb:	cmp    WORD PTR [rbx+0x2],ax
   14001cbdf:	jne    0x14001cc07
   14001cbe1:	movzx  eax,WORD PTR [rbx]
   14001cbe4:	test   ax,ax
   14001cbe7:	je     0x14001cc07
   14001cbe9:	jmp    0x14001bb5b
   14001cbee:	mov    r15d,0xffff
   14001cbf4:	cmp    r15w,di
   14001cbf8:	je     0x14001cc07
   14001cbfa:	mov    rdx,QWORD PTR [rsp+0x78]
   14001cbff:	movzx  ecx,di
   14001cc02:	call   0x140020024
   14001cc07:	mov    r13d,DWORD PTR [rsp+0x38]
   14001cc0c:	mov    r12d,DWORD PTR [rsp+0x50]
   14001cc11:	jmp    0x14001ccc6
   14001cc16:	xor    r14d,r14d
   14001cc19:	mov    BYTE PTR [rax],r14b
   14001cc1c:	call   0x1400161e8
   14001cc21:	mov    DWORD PTR [rax],0xc
   14001cc27:	mov    r13d,DWORD PTR [rsp+0x38]
   14001cc2c:	mov    r12d,DWORD PTR [rsp+0x50]
   14001cc31:	jmp    0x14001ccc0
   14001cc36:	cmp    r15w,di
   14001cc3a:	je     0x14001cc49
   14001cc3c:	mov    rdx,QWORD PTR [rsp+0x78]
   14001cc41:	movzx  ecx,di
   14001cc44:	call   0x140020024
   14001cc49:	mov    r13d,DWORD PTR [rsp+0x38]
   14001cc4e:	mov    r12d,0x1
   14001cc54:	mov    r9d,r12d
   14001cc57:	jmp    0x14001cccc
   14001cc59:	call   0x1400161e8
   14001cc5e:	xor    r11d,r11d
   14001cc61:	test   r13b,r13b
   14001cc64:	mov    r13d,DWORD PTR [rsp+0x38]
   14001cc69:	mov    r15d,0xffff
   14001cc6f:	mov    DWORD PTR [rax],0xc
   14001cc75:	mov    r12d,r11d
   14001cc78:	lea    r9d,[r11+0x1]
   14001cc7c:	je     0x14001cc84
   14001cc7e:	mov    WORD PTR [rbx],r11w
   14001cc82:	jmp    0x14001cccc
   14001cc84:	mov    BYTE PTR [rbx],r11b
   14001cc87:	jmp    0x14001cccc
   14001cc89:	cmp    r15w,di
   14001cc8d:	je     0x14001cc07
   14001cc93:	mov    rdx,rsi
   14001cc96:	jmp    0x14001cbff
   14001cc9b:	mov    r9d,0x1
   14001cca1:	mov    r13d,DWORD PTR [rsp+0x38]
   14001cca6:	mov    r12d,r14d
   14001cca9:	mov    r15d,0xffff
   14001ccaf:	jmp    0x14001ccd1
   14001ccb1:	mov    r13d,DWORD PTR [rsp+0x38]
   14001ccb6:	mov    r12d,DWORD PTR [rsp+0x50]
   14001ccbb:	mov    r15d,eax
   14001ccbe:	jmp    0x14001ccc6
   14001ccc0:	mov    r15d,0xffff
   14001ccc6:	mov    r9d,0x1
   14001cccc:	mov    rbx,QWORD PTR [rsp+0x70]
   14001ccd1:	cmp    DWORD PTR [rbp-0x48],r9d
   14001ccd5:	jne    0x14001ccdf
   14001ccd7:	mov    rcx,rbx
   14001ccda:	call   0x14001392c
   14001ccdf:	mov    eax,0x1
   14001cce4:	cmp    DWORD PTR [rbp-0x70],eax
   14001cce7:	jne    0x14001ccf7
   14001cce9:	mov    rcx,QWORD PTR [rbp-0x68]
   14001cced:	call   0x14001392c
   14001ccf2:	mov    eax,0x1
   14001ccf7:	cmp    r15w,di
   14001ccfb:	jne    0x14001cd0f
   14001ccfd:	test   r13d,r13d
   14001cd00:	jne    0x14001cd24
   14001cd02:	mov    al,BYTE PTR [rsp+0x3c]
   14001cd06:	test   al,al
   14001cd08:	jne    0x14001cd24
   14001cd0a:	or     eax,0xffffffff
   14001cd0d:	jmp    0x14001cd31
   14001cd0f:	cmp    r12d,eax
   14001cd12:	jne    0x14001cd29
   14001cd14:	call   0x1400161e8
   14001cd19:	mov    DWORD PTR [rax],0x16
   14001cd1f:	call   0x140013f54
   14001cd24:	mov    eax,r13d
   14001cd27:	jmp    0x14001cd31
   14001cd29:	mov    r15d,DWORD PTR [rsp+0x38]
   14001cd2e:	mov    eax,r15d
   14001cd31:	xor    ecx,ecx
   14001cd33:	cmp    BYTE PTR [rbp-0x18],cl
   14001cd36:	je     0x14001cd43
   14001cd38:	mov    rcx,QWORD PTR [rbp-0x20]
   14001cd3c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001cd43:	mov    rcx,QWORD PTR [rbp+0x2b0]
   14001cd4a:	xor    rcx,rsp
   14001cd4d:	call   0x1400130a0
   14001cd52:	mov    rbx,QWORD PTR [rsp+0x410]
   14001cd5a:	add    rsp,0x3c0
   14001cd61:	pop    r15
   14001cd63:	pop    r14
   14001cd65:	pop    r13
   14001cd67:	pop    r12
   14001cd69:	pop    rdi
   14001cd6a:	pop    rsi
   14001cd6b:	pop    rbp
   14001cd6c:	ret    
   14001cd6d:	xor    r9d,r9d
   14001cd70:	xor    r8d,r8d
   14001cd73:	xor    edx,edx
   14001cd75:	xor    ecx,ecx
   14001cd77:	mov    QWORD PTR [rsp+0x20],r12
   14001cd7c:	call   0x140013f74
   14001cd81:	int3   
   14001cd82:	int3   
   14001cd83:	int3   
   14001cd84:	rex push rbx
   14001cd86:	sub    rsp,0x20
   14001cd8a:	test   rcx,rcx
   14001cd8d:	je     0x14001cd9c
   14001cd8f:	test   rdx,rdx
   14001cd92:	je     0x14001cd9c
   14001cd94:	test   r8,r8
   14001cd97:	jne    0x14001cdb5
   14001cd99:	mov    BYTE PTR [rcx],r8b
   14001cd9c:	call   0x1400161e8
   14001cda1:	mov    ebx,0x16
   14001cda6:	mov    DWORD PTR [rax],ebx
   14001cda8:	call   0x140013f54
   14001cdad:	mov    eax,ebx
   14001cdaf:	add    rsp,0x20
   14001cdb3:	pop    rbx
   14001cdb4:	ret    
   14001cdb5:	mov    r9,rcx
   14001cdb8:	sub    r9,r8
   14001cdbb:	mov    al,BYTE PTR [r8]
   14001cdbe:	mov    BYTE PTR [r9+r8*1],al
   14001cdc2:	inc    r8
   14001cdc5:	test   al,al
   14001cdc7:	je     0x14001cdce
   14001cdc9:	dec    rdx
   14001cdcc:	jne    0x14001cdbb
   14001cdce:	test   rdx,rdx
   14001cdd1:	jne    0x14001cde1
   14001cdd3:	mov    BYTE PTR [rcx],dl
   14001cdd5:	call   0x1400161e8
   14001cdda:	mov    ebx,0x22
   14001cddf:	jmp    0x14001cda6
   14001cde1:	xor    eax,eax
   14001cde3:	jmp    0x14001cdaf
   14001cde5:	int3   
   14001cde6:	int3   
   14001cde7:	int3   
   14001cde8:	mov    QWORD PTR [rsp+0x8],rbx
   14001cded:	push   rdi
   14001cdee:	sub    rsp,0x20
   14001cdf2:	movsxd rbx,ecx
   14001cdf5:	lea    rdi,[rip+0x1ae04]        # 0x140037c00
   14001cdfc:	add    rbx,rbx
   14001cdff:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14001ce04:	jne    0x14001ce17
   14001ce06:	call   0x14001ceb4
   14001ce0b:	test   eax,eax
   14001ce0d:	jne    0x14001ce17
   14001ce0f:	lea    ecx,[rax+0x11]
   14001ce12:	call   0x140015948
   14001ce17:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14001ce1b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce20:	add    rsp,0x20
   14001ce24:	pop    rdi
   14001ce25:	rex.W jmp QWORD PTR [rip+0xa24c]        # 0x140027078
   14001ce2c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ce31:	mov    QWORD PTR [rsp+0x10],rbp
   14001ce36:	mov    QWORD PTR [rsp+0x18],rsi
   14001ce3b:	push   rdi
   14001ce3c:	sub    rsp,0x20
   14001ce40:	mov    edi,0x24
   14001ce45:	lea    rbx,[rip+0x1adb4]        # 0x140037c00
   14001ce4c:	mov    ebp,edi
   14001ce4e:	mov    rsi,QWORD PTR [rbx]
   14001ce51:	test   rsi,rsi
   14001ce54:	je     0x14001ce71
   14001ce56:	cmp    DWORD PTR [rbx+0x8],0x1
   14001ce5a:	je     0x14001ce71
   14001ce5c:	mov    rcx,rsi
   14001ce5f:	call   QWORD PTR [rip+0xa233]        # 0x140027098
   14001ce65:	mov    rcx,rsi
   14001ce68:	call   0x14001392c
   14001ce6d:	and    QWORD PTR [rbx],0x0
   14001ce71:	add    rbx,0x10
   14001ce75:	dec    rbp
   14001ce78:	jne    0x14001ce4e
   14001ce7a:	lea    rbx,[rip+0x1ad87]        # 0x140037c08
   14001ce81:	mov    rcx,QWORD PTR [rbx-0x8]
   14001ce85:	test   rcx,rcx
   14001ce88:	je     0x14001ce95
   14001ce8a:	cmp    DWORD PTR [rbx],0x1
   14001ce8d:	jne    0x14001ce95
   14001ce8f:	call   QWORD PTR [rip+0xa203]        # 0x140027098
   14001ce95:	add    rbx,0x10
   14001ce99:	dec    rdi
   14001ce9c:	jne    0x14001ce81
   14001ce9e:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cea3:	mov    rbp,QWORD PTR [rsp+0x38]
   14001cea8:	mov    rsi,QWORD PTR [rsp+0x40]
   14001cead:	add    rsp,0x20
   14001ceb1:	pop    rdi
   14001ceb2:	ret    
   14001ceb3:	int3   
   14001ceb4:	mov    QWORD PTR [rsp+0x8],rbx
   14001ceb9:	mov    QWORD PTR [rsp+0x10],rdi
   14001cebe:	push   r14
   14001cec0:	sub    rsp,0x20
   14001cec4:	movsxd rbx,ecx
   14001cec7:	cmp    QWORD PTR [rip+0x1c5b9],0x0        # 0x140039488
   14001cecf:	jne    0x14001ceea
   14001ced1:	call   0x1400163a0
   14001ced6:	mov    ecx,0x1e
   14001cedb:	call   0x140016414
   14001cee0:	mov    ecx,0xff
   14001cee5:	call   0x140015930
   14001ceea:	add    rbx,rbx
   14001ceed:	lea    r14,[rip+0x1ad0c]        # 0x140037c00
   14001cef4:	cmp    QWORD PTR [r14+rbx*8],0x0
   14001cef9:	je     0x14001cf02
   14001cefb:	mov    eax,0x1
   14001cf00:	jmp    0x14001cf60
   14001cf02:	mov    ecx,0x28
   14001cf07:	call   0x140015d94
   14001cf0c:	mov    rdi,rax
   14001cf0f:	test   rax,rax
   14001cf12:	jne    0x14001cf23
   14001cf14:	call   0x1400161e8
   14001cf19:	mov    DWORD PTR [rax],0xc
   14001cf1f:	xor    eax,eax
   14001cf21:	jmp    0x14001cf60
   14001cf23:	mov    ecx,0xa
   14001cf28:	call   0x14001cde8
   14001cf2d:	nop
   14001cf2e:	mov    rcx,rdi
   14001cf31:	cmp    QWORD PTR [r14+rbx*8],0x0
   14001cf36:	jne    0x14001cf4b
   14001cf38:	xor    r8d,r8d
   14001cf3b:	mov    edx,0xfa0
   14001cf40:	call   0x140016954
   14001cf45:	mov    QWORD PTR [r14+rbx*8],rdi
   14001cf49:	jmp    0x14001cf51
   14001cf4b:	call   0x14001392c
   14001cf50:	nop
   14001cf51:	mov    rcx,QWORD PTR [rip+0x1ad48]        # 0x140037ca0
   14001cf58:	call   QWORD PTR [rip+0xa0da]        # 0x140027038
   14001cf5e:	jmp    0x14001cefb
   14001cf60:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cf65:	mov    rdi,QWORD PTR [rsp+0x38]
   14001cf6a:	add    rsp,0x20
   14001cf6e:	pop    r14
   14001cf70:	ret    
   14001cf71:	int3   
   14001cf72:	int3   
   14001cf73:	int3   
   14001cf74:	mov    QWORD PTR [rsp+0x8],rbx
   14001cf79:	mov    QWORD PTR [rsp+0x10],rsi
   14001cf7e:	push   rdi
   14001cf7f:	sub    rsp,0x20
   14001cf83:	xor    esi,esi
   14001cf85:	lea    rbx,[rip+0x1ac74]        # 0x140037c00
   14001cf8c:	lea    edi,[rsi+0x24]
   14001cf8f:	cmp    DWORD PTR [rbx+0x8],0x1
   14001cf93:	jne    0x14001cfb9
   14001cf95:	movsxd rax,esi
   14001cf98:	lea    rdx,[rip+0x1cf81]        # 0x140039f20
   14001cf9f:	xor    r8d,r8d
   14001cfa2:	lea    rcx,[rax+rax*4]
   14001cfa6:	inc    esi
   14001cfa8:	lea    rcx,[rdx+rcx*8]
   14001cfac:	mov    edx,0xfa0
   14001cfb1:	mov    QWORD PTR [rbx],rcx
   14001cfb4:	call   0x140016954
   14001cfb9:	add    rbx,0x10
   14001cfbd:	dec    rdi
   14001cfc0:	jne    0x14001cf8f
   14001cfc2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cfc7:	mov    rsi,QWORD PTR [rsp+0x38]
   14001cfcc:	lea    eax,[rdi+0x1]
   14001cfcf:	add    rsp,0x20
   14001cfd3:	pop    rdi
   14001cfd4:	ret    
   14001cfd5:	int3   
   14001cfd6:	int3   
   14001cfd7:	int3   
   14001cfd8:	movsxd rcx,ecx
   14001cfdb:	lea    rax,[rip+0x1ac1e]        # 0x140037c00
   14001cfe2:	add    rcx,rcx
   14001cfe5:	mov    rcx,QWORD PTR [rax+rcx*8]
   14001cfe9:	rex.W jmp QWORD PTR [rip+0xa048]        # 0x140027038
   14001cff0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14001cff4:	xor    r9d,r9d
   14001cff7:	mov    r10,rdx
   14001cffa:	add    r8,rcx
   14001cffd:	movzx  eax,WORD PTR [r8+0x14]
   14001d002:	movzx  r11d,WORD PTR [r8+0x6]
   14001d007:	add    rax,0x18
   14001d00b:	add    rax,r8
   14001d00e:	test   r11d,r11d
   14001d011:	je     0x14001d031
   14001d013:	mov    edx,DWORD PTR [rax+0xc]
   14001d016:	cmp    r10,rdx
   14001d019:	jb     0x14001d025
   14001d01b:	mov    ecx,DWORD PTR [rax+0x8]
   14001d01e:	add    ecx,edx
   14001d020:	cmp    r10,rcx
   14001d023:	jb     0x14001d033
   14001d025:	inc    r9d
   14001d028:	add    rax,0x28
   14001d02c:	cmp    r9d,r11d
   14001d02f:	jb     0x14001d013
   14001d031:	xor    eax,eax
   14001d033:	ret    
   14001d034:	int3   
   14001d035:	int3   
   14001d036:	int3   
   14001d037:	int3   
   14001d038:	int3   
   14001d039:	int3   
   14001d03a:	int3   
   14001d03b:	int3   
   14001d03c:	int3   
   14001d03d:	int3   
   14001d03e:	int3   
   14001d03f:	int3   
   14001d040:	mov    QWORD PTR [rsp+0x8],rbx
   14001d045:	push   rdi
   14001d046:	sub    rsp,0x20
   14001d04a:	mov    rbx,rcx
   14001d04d:	lea    rdi,[rip+0xfffffffffffe2fac]        # 0x140000000
   14001d054:	mov    rcx,rdi
   14001d057:	call   0x14001d090
   14001d05c:	test   eax,eax
   14001d05e:	je     0x14001d082
   14001d060:	sub    rbx,rdi
   14001d063:	mov    rdx,rbx
   14001d066:	mov    rcx,rdi
   14001d069:	call   0x14001cff0
   14001d06e:	test   rax,rax
   14001d071:	je     0x14001d082
   14001d073:	mov    eax,DWORD PTR [rax+0x24]
   14001d076:	shr    eax,0x1f
   14001d079:	not    eax
   14001d07b:	and    eax,0x1
   14001d07e:	jmp    0x14001d082
   14001d080:	xor    eax,eax
   14001d082:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d087:	add    rsp,0x20
   14001d08b:	pop    rdi
   14001d08c:	ret    
   14001d08d:	int3   
   14001d08e:	int3   
   14001d08f:	int3   
   14001d090:	mov    rax,rcx
   14001d093:	mov    ecx,0x5a4d
   14001d098:	cmp    WORD PTR [rax],cx
   14001d09b:	je     0x14001d0a0
   14001d09d:	xor    eax,eax
   14001d09f:	ret    
   14001d0a0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001d0a4:	add    rcx,rax
   14001d0a7:	xor    eax,eax
   14001d0a9:	cmp    DWORD PTR [rcx],0x4550
   14001d0af:	jne    0x14001d0bd
   14001d0b1:	mov    edx,0x20b
   14001d0b6:	cmp    WORD PTR [rcx+0x18],dx
   14001d0ba:	sete   al
   14001d0bd:	ret    
   14001d0be:	int3   
   14001d0bf:	int3   
   14001d0c0:	mov    rcx,QWORD PTR [rip+0x1d099]        # 0x14003a160
   14001d0c7:	rex.W jmp QWORD PTR [rip+0xa022]        # 0x1400270f0
   14001d0ce:	int3   
   14001d0cf:	int3   
   14001d0d0:	mov    QWORD PTR [rip+0x1d079],rcx        # 0x14003a150
   14001d0d7:	mov    QWORD PTR [rip+0x1d07a],rcx        # 0x14003a158
   14001d0de:	mov    QWORD PTR [rip+0x1d07b],rcx        # 0x14003a160
   14001d0e5:	mov    QWORD PTR [rip+0x1d07c],rcx        # 0x14003a168
   14001d0ec:	ret    
   14001d0ed:	int3   
   14001d0ee:	int3   
   14001d0ef:	int3   
   14001d0f0:	mov    QWORD PTR [rsp+0x18],rbx
   14001d0f5:	mov    QWORD PTR [rsp+0x20],rsi
   14001d0fa:	push   rdi
   14001d0fb:	push   r12
   14001d0fd:	push   r13
   14001d0ff:	push   r14
   14001d101:	push   r15
   14001d103:	sub    rsp,0x30
   14001d107:	mov    ebx,ecx
   14001d109:	xor    r13d,r13d
   14001d10c:	and    DWORD PTR [rsp+0x68],r13d
   14001d111:	xor    edi,edi
   14001d113:	mov    DWORD PTR [rsp+0x60],edi
   14001d117:	xor    esi,esi
   14001d119:	mov    edx,ecx
   14001d11b:	sub    edx,0x2
   14001d11e:	je     0x14001d1e8
   14001d124:	sub    edx,0x2
   14001d127:	je     0x14001d18b
   14001d129:	sub    edx,0x2
   14001d12c:	je     0x14001d17b
   14001d12e:	sub    edx,0x2
   14001d131:	je     0x14001d18b
   14001d133:	sub    edx,0x3
   14001d136:	je     0x14001d18b
   14001d138:	sub    edx,0x4
   14001d13b:	je     0x14001d16b
   14001d13d:	sub    edx,0x6
   14001d140:	je     0x14001d158
   14001d142:	dec    edx
   14001d144:	je     0x14001d17b
   14001d146:	call   0x1400161e8
   14001d14b:	mov    DWORD PTR [rax],0x16
   14001d151:	call   0x140013f54
   14001d156:	jmp    0x14001d198
   14001d158:	lea    r14,[rip+0x1cff9]        # 0x14003a158
   14001d15f:	mov    rcx,QWORD PTR [rip+0x1cff2]        # 0x14003a158
   14001d166:	jmp    0x14001d1f6
   14001d16b:	lea    r14,[rip+0x1cff6]        # 0x14003a168
   14001d172:	mov    rcx,QWORD PTR [rip+0x1cfef]        # 0x14003a168
   14001d179:	jmp    0x14001d1f6
   14001d17b:	lea    r14,[rip+0x1cfde]        # 0x14003a160
   14001d182:	mov    rcx,QWORD PTR [rip+0x1cfd7]        # 0x14003a160
   14001d189:	jmp    0x14001d1f6
   14001d18b:	call   0x140017194
   14001d190:	mov    rsi,rax
   14001d193:	test   rax,rax
   14001d196:	jne    0x14001d1a0
   14001d198:	or     eax,0xffffffff
   14001d19b:	jmp    0x14001d30b
   14001d1a0:	mov    rdx,QWORD PTR [rax+0xa0]
   14001d1a7:	mov    rcx,rdx
   14001d1aa:	movsxd r8,DWORD PTR [rip+0xcd8f]        # 0x140029f40
   14001d1b1:	cmp    DWORD PTR [rcx+0x4],ebx
   14001d1b4:	je     0x14001d1c9
   14001d1b6:	add    rcx,0x10
   14001d1ba:	mov    rax,r8
   14001d1bd:	shl    rax,0x4
   14001d1c1:	add    rax,rdx
   14001d1c4:	cmp    rcx,rax
   14001d1c7:	jb     0x14001d1b1
   14001d1c9:	mov    rax,r8
   14001d1cc:	shl    rax,0x4
   14001d1d0:	add    rax,rdx
   14001d1d3:	cmp    rcx,rax
   14001d1d6:	jae    0x14001d1dd
   14001d1d8:	cmp    DWORD PTR [rcx+0x4],ebx
   14001d1db:	je     0x14001d1df
   14001d1dd:	xor    ecx,ecx
   14001d1df:	lea    r14,[rcx+0x8]
   14001d1e3:	mov    r15,QWORD PTR [r14]
   14001d1e6:	jmp    0x14001d208
   14001d1e8:	lea    r14,[rip+0x1cf61]        # 0x14003a150
   14001d1ef:	mov    rcx,QWORD PTR [rip+0x1cf5a]        # 0x14003a150
   14001d1f6:	mov    edi,0x1
   14001d1fb:	mov    DWORD PTR [rsp+0x60],edi
   14001d1ff:	call   QWORD PTR [rip+0x9eeb]        # 0x1400270f0
   14001d205:	mov    r15,rax
   14001d208:	cmp    r15,0x1
   14001d20c:	jne    0x14001d215
   14001d20e:	xor    eax,eax
   14001d210:	jmp    0x14001d30b
   14001d215:	test   r15,r15
   14001d218:	jne    0x14001d224
   14001d21a:	lea    ecx,[r15+0x3]
   14001d21e:	call   0x140015a28
   14001d223:	int3   
   14001d224:	test   edi,edi
   14001d226:	je     0x14001d230
   14001d228:	xor    ecx,ecx
   14001d22a:	call   0x14001cde8
   14001d22f:	nop
   14001d230:	mov    r12d,0x910
   14001d236:	cmp    ebx,0xb
   14001d239:	ja     0x14001d26e
   14001d23b:	bt     r12d,ebx
   14001d23f:	jae    0x14001d26e
   14001d241:	mov    r13,QWORD PTR [rsi+0xa8]
   14001d248:	mov    QWORD PTR [rsp+0x28],r13
   14001d24d:	and    QWORD PTR [rsi+0xa8],0x0
   14001d255:	cmp    ebx,0x8
   14001d258:	jne    0x14001d2ac
   14001d25a:	mov    eax,DWORD PTR [rsi+0xb0]
   14001d260:	mov    DWORD PTR [rsp+0x68],eax
   14001d264:	mov    DWORD PTR [rsi+0xb0],0x8c
   14001d26e:	cmp    ebx,0x8
   14001d271:	jne    0x14001d2ac
   14001d273:	mov    ecx,DWORD PTR [rip+0xcccf]        # 0x140029f48
   14001d279:	mov    edx,ecx
   14001d27b:	mov    DWORD PTR [rsp+0x20],ecx
   14001d27f:	mov    eax,DWORD PTR [rip+0xccc7]        # 0x140029f4c
   14001d285:	add    ecx,eax
   14001d287:	cmp    edx,ecx
   14001d289:	jge    0x14001d2b7
   14001d28b:	movsxd rcx,edx
   14001d28e:	add    rcx,rcx
   14001d291:	mov    rax,QWORD PTR [rsi+0xa0]
   14001d298:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14001d29e:	inc    edx
   14001d2a0:	mov    DWORD PTR [rsp+0x20],edx
   14001d2a4:	mov    ecx,DWORD PTR [rip+0xcc9e]        # 0x140029f48
   14001d2aa:	jmp    0x14001d27f
   14001d2ac:	xor    ecx,ecx
   14001d2ae:	call   QWORD PTR [rip+0x9f5c]        # 0x140027210
   14001d2b4:	mov    QWORD PTR [r14],rax
   14001d2b7:	test   edi,edi
   14001d2b9:	je     0x14001d2c2
   14001d2bb:	xor    ecx,ecx
   14001d2bd:	call   0x14001cfd8
   14001d2c2:	cmp    ebx,0x8
   14001d2c5:	jne    0x14001d2d4
   14001d2c7:	mov    edx,DWORD PTR [rsi+0xb0]
   14001d2cd:	mov    ecx,ebx
   14001d2cf:	call   r15
   14001d2d2:	jmp    0x14001d2d9
   14001d2d4:	mov    ecx,ebx
   14001d2d6:	call   r15
   14001d2d9:	cmp    ebx,0xb
   14001d2dc:	ja     0x14001d20e
   14001d2e2:	bt     r12d,ebx
   14001d2e6:	jae    0x14001d20e
   14001d2ec:	mov    QWORD PTR [rsi+0xa8],r13
   14001d2f3:	cmp    ebx,0x8
   14001d2f6:	jne    0x14001d20e
   14001d2fc:	mov    eax,DWORD PTR [rsp+0x68]
   14001d300:	mov    DWORD PTR [rsi+0xb0],eax
   14001d306:	jmp    0x14001d20e
   14001d30b:	mov    rbx,QWORD PTR [rsp+0x70]
   14001d310:	mov    rsi,QWORD PTR [rsp+0x78]
   14001d315:	add    rsp,0x30
   14001d319:	pop    r15
   14001d31b:	pop    r14
   14001d31d:	pop    r13
   14001d31f:	pop    r12
   14001d321:	pop    rdi
   14001d322:	ret    
   14001d323:	int3   
   14001d324:	mov    QWORD PTR [rip+0x1ce4d],rcx        # 0x14003a178
   14001d32b:	ret    
   14001d32c:	mov    QWORD PTR [rsp+0x8],rbx
   14001d331:	mov    QWORD PTR [rsp+0x10],rsi
   14001d336:	push   rdi
   14001d337:	sub    rsp,0x20
   14001d33b:	mov    rbx,rdx
   14001d33e:	mov    rdi,rcx
   14001d341:	test   rcx,rcx
   14001d344:	jne    0x14001d350
   14001d346:	mov    rcx,rdx
   14001d349:	call   0x14001396c
   14001d34e:	jmp    0x14001d3ba
   14001d350:	test   rdx,rdx
   14001d353:	jne    0x14001d35c
   14001d355:	call   0x14001392c
   14001d35a:	jmp    0x14001d3b8
   14001d35c:	cmp    rdx,0xffffffffffffffe0
   14001d360:	ja     0x14001d3a5
   14001d362:	mov    rcx,QWORD PTR [rip+0x1c11f]        # 0x140039488
   14001d369:	mov    eax,0x1
   14001d36e:	test   rbx,rbx
   14001d371:	cmove  rbx,rax
   14001d375:	mov    r8,rdi
   14001d378:	xor    edx,edx
   14001d37a:	mov    r9,rbx
   14001d37d:	call   QWORD PTR [rip+0x9f8d]        # 0x140027310
   14001d383:	mov    rsi,rax
   14001d386:	test   rax,rax
   14001d389:	jne    0x14001d3fa
   14001d38b:	cmp    DWORD PTR [rip+0x1c737],eax        # 0x140039ac8
   14001d391:	je     0x14001d3e3
   14001d393:	mov    rcx,rbx
   14001d396:	call   0x140016344
   14001d39b:	test   eax,eax
   14001d39d:	je     0x14001d3ca
   14001d39f:	cmp    rbx,0xffffffffffffffe0
   14001d3a3:	jbe    0x14001d362
   14001d3a5:	mov    rcx,rbx
   14001d3a8:	call   0x140016344
   14001d3ad:	call   0x1400161e8
   14001d3b2:	mov    DWORD PTR [rax],0xc
   14001d3b8:	xor    eax,eax
   14001d3ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d3bf:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d3c4:	add    rsp,0x20
   14001d3c8:	pop    rdi
   14001d3c9:	ret    
   14001d3ca:	call   0x1400161e8
   14001d3cf:	mov    rbx,rax
   14001d3d2:	call   QWORD PTR [rip+0x9c88]        # 0x140027060
   14001d3d8:	mov    ecx,eax
   14001d3da:	call   0x140016208
   14001d3df:	mov    DWORD PTR [rbx],eax
   14001d3e1:	jmp    0x14001d3b8
   14001d3e3:	call   0x1400161e8
   14001d3e8:	mov    rbx,rax
   14001d3eb:	call   QWORD PTR [rip+0x9c6f]        # 0x140027060
   14001d3f1:	mov    ecx,eax
   14001d3f3:	call   0x140016208
   14001d3f8:	mov    DWORD PTR [rbx],eax
   14001d3fa:	mov    rax,rsi
   14001d3fd:	jmp    0x14001d3ba
   14001d3ff:	int3   
   14001d400:	mov    QWORD PTR [rsp+0x8],rbx
   14001d405:	mov    QWORD PTR [rsp+0x10],rsi
   14001d40a:	push   rdi
   14001d40b:	sub    rsp,0x20
   14001d40f:	xor    edi,edi
   14001d411:	mov    rbx,rdx
   14001d414:	mov    rsi,rcx
   14001d417:	test   rdx,rdx
   14001d41a:	je     0x14001d439
   14001d41c:	xor    edx,edx
   14001d41e:	lea    rax,[rdi-0x20]
   14001d422:	div    rbx
   14001d425:	cmp    rax,r8
   14001d428:	jae    0x14001d439
   14001d42a:	call   0x1400161e8
   14001d42f:	mov    DWORD PTR [rax],0xc
   14001d435:	xor    eax,eax
   14001d437:	jmp    0x14001d476
   14001d439:	imul   rbx,r8
   14001d43d:	test   rcx,rcx
   14001d440:	je     0x14001d44a
   14001d442:	call   0x140015cd8
   14001d447:	mov    rdi,rax
   14001d44a:	mov    rdx,rbx
   14001d44d:	mov    rcx,rsi
   14001d450:	call   0x14001d32c
   14001d455:	mov    rsi,rax
   14001d458:	test   rax,rax
   14001d45b:	je     0x14001d473
   14001d45d:	cmp    rdi,rbx
   14001d460:	jae    0x14001d473
   14001d462:	sub    rbx,rdi
   14001d465:	lea    rcx,[rdi+rax*1]
   14001d469:	xor    edx,edx
   14001d46b:	mov    r8,rbx
   14001d46e:	call   0x140014d80
   14001d473:	mov    rax,rsi
   14001d476:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d47b:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d480:	add    rsp,0x20
   14001d484:	pop    rdi
   14001d485:	ret    
   14001d486:	int3   
   14001d487:	int3   
   14001d488:	mov    QWORD PTR [rsp+0x8],rbx
   14001d48d:	push   rdi
   14001d48e:	sub    rsp,0x20
   14001d492:	mov    rdi,r8
   14001d495:	mov    rbx,rdx
   14001d498:	test   rcx,rcx
   14001d49b:	je     0x14001d4ba
   14001d49d:	xor    edx,edx
   14001d49f:	lea    rax,[rdx-0x20]
   14001d4a3:	div    rcx
   14001d4a6:	cmp    rax,rbx
   14001d4a9:	jae    0x14001d4ba
   14001d4ab:	call   0x1400161e8
   14001d4b0:	mov    DWORD PTR [rax],0xc
   14001d4b6:	xor    eax,eax
   14001d4b8:	jmp    0x14001d517
   14001d4ba:	imul   rbx,rcx
   14001d4be:	mov    eax,0x1
   14001d4c3:	test   rbx,rbx
   14001d4c6:	cmove  rbx,rax
   14001d4ca:	xor    eax,eax
   14001d4cc:	cmp    rbx,0xffffffffffffffe0
   14001d4d0:	ja     0x14001d4ea
   14001d4d2:	mov    rcx,QWORD PTR [rip+0x1bfaf]        # 0x140039488
   14001d4d9:	lea    edx,[rax+0x8]
   14001d4dc:	mov    r8,rbx
   14001d4df:	call   QWORD PTR [rip+0x9d3b]        # 0x140027220
   14001d4e5:	test   rax,rax
   14001d4e8:	jne    0x14001d517
   14001d4ea:	cmp    DWORD PTR [rip+0x1c5d7],0x0        # 0x140039ac8
   14001d4f1:	je     0x14001d50c
   14001d4f3:	mov    rcx,rbx
   14001d4f6:	call   0x140016344
   14001d4fb:	test   eax,eax
   14001d4fd:	jne    0x14001d4ca
   14001d4ff:	test   rdi,rdi
   14001d502:	je     0x14001d4b6
   14001d504:	mov    DWORD PTR [rdi],0xc
   14001d50a:	jmp    0x14001d4b6
   14001d50c:	test   rdi,rdi
   14001d50f:	je     0x14001d517
   14001d511:	mov    DWORD PTR [rdi],0xc
   14001d517:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d51c:	add    rsp,0x20
   14001d520:	pop    rdi
   14001d521:	ret    
   14001d522:	int3   
   14001d523:	int3   
   14001d524:	int3   
   14001d525:	int3   
   14001d526:	int3   
   14001d527:	int3   
   14001d528:	int3   
   14001d529:	int3   
   14001d52a:	int3   
   14001d52b:	int3   
   14001d52c:	int3   
   14001d52d:	int3   
   14001d52e:	int3   
   14001d52f:	int3   
   14001d530:	int3   
   14001d531:	int3   
   14001d532:	int3   
   14001d533:	int3   
   14001d534:	int3   
   14001d535:	int3   
   14001d536:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001d540:	sub    rsp,0x4d8
   14001d547:	xor    r8,r8
   14001d54a:	xor    r9,r9
   14001d54d:	mov    QWORD PTR [rsp+0x20],rsp
   14001d552:	mov    QWORD PTR [rsp+0x28],r8
   14001d557:	call   0x1400242d2
   14001d55c:	add    rsp,0x4d8
   14001d563:	ret    
   14001d564:	int3   
   14001d565:	int3   
   14001d566:	int3   
   14001d567:	int3   
   14001d568:	int3   
   14001d569:	int3   
   14001d56a:	nop    WORD PTR [rax+rax*1+0x0]
   14001d570:	mov    QWORD PTR [rsp+0x8],rcx
   14001d575:	mov    QWORD PTR [rsp+0x18],rdx
   14001d57a:	mov    DWORD PTR [rsp+0x10],r8d
   14001d57f:	mov    r9,0x19930520
   14001d586:	jmp    0x14001d590
   14001d588:	int3   
   14001d589:	int3   
   14001d58a:	int3   
   14001d58b:	int3   
   14001d58c:	int3   
   14001d58d:	int3   
   14001d58e:	xchg   ax,ax
   14001d590:	ret    
   14001d591:	int3   
   14001d592:	int3   
   14001d593:	int3   
   14001d594:	int3   
   14001d595:	int3   
   14001d596:	int3   
   14001d597:	nop    WORD PTR [rax+rax*1+0x0]
   14001d5a0:	ret    
   14001d5a1:	int3   
   14001d5a2:	int3   
   14001d5a3:	int3   
   14001d5a4:	mov    rax,rsp
   14001d5a7:	mov    QWORD PTR [rax+0x8],rbx
   14001d5ab:	mov    QWORD PTR [rax+0x10],rbp
   14001d5af:	mov    QWORD PTR [rax+0x18],rsi
   14001d5b3:	mov    QWORD PTR [rax+0x20],rdi
   14001d5b7:	push   r14
   14001d5b9:	sub    rsp,0x20
   14001d5bd:	mov    rbp,rcx
   14001d5c0:	xor    edi,edi
   14001d5c2:	mov    esi,0xe3
   14001d5c7:	lea    r14,[rip+0xdca2]        # 0x14002b270
   14001d5ce:	lea    eax,[rsi+rdi*1]
   14001d5d1:	mov    r8d,0x55
   14001d5d7:	mov    rcx,rbp
   14001d5da:	cdq    
   14001d5db:	sub    eax,edx
   14001d5dd:	sar    eax,1
   14001d5df:	movsxd rbx,eax
   14001d5e2:	mov    rdx,rbx
   14001d5e5:	add    rdx,rdx
   14001d5e8:	mov    rdx,QWORD PTR [r14+rdx*8]
   14001d5ec:	call   0x14001d6f4
   14001d5f1:	test   eax,eax
   14001d5f3:	je     0x14001d608
   14001d5f5:	jns    0x14001d5fc
   14001d5f7:	lea    esi,[rbx-0x1]
   14001d5fa:	jmp    0x14001d5ff
   14001d5fc:	lea    edi,[rbx+0x1]
   14001d5ff:	cmp    edi,esi
   14001d601:	jle    0x14001d5ce
   14001d603:	or     eax,0xffffffff
   14001d606:	jmp    0x14001d613
   14001d608:	mov    rax,rbx
   14001d60b:	add    rax,rax
   14001d60e:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14001d613:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d618:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d61d:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d622:	mov    rdi,QWORD PTR [rsp+0x48]
   14001d627:	add    rsp,0x20
   14001d62b:	pop    r14
   14001d62d:	ret    
   14001d62e:	int3   
   14001d62f:	int3   
   14001d630:	sub    rsp,0x28
   14001d634:	test   rcx,rcx
   14001d637:	je     0x14001d65b
   14001d639:	call   0x14001d5a4
   14001d63e:	test   eax,eax
   14001d640:	js     0x14001d65b
   14001d642:	cdqe   
   14001d644:	cmp    rax,0xe4
   14001d64a:	jae    0x14001d65b
   14001d64c:	lea    rcx,[rip+0xcddd]        # 0x14002a430
   14001d653:	add    rax,rax
   14001d656:	mov    eax,DWORD PTR [rcx+rax*8]
   14001d659:	jmp    0x14001d65d
   14001d65b:	xor    eax,eax
   14001d65d:	add    rsp,0x28
   14001d661:	ret    
   14001d662:	int3   
   14001d663:	int3   
   14001d664:	mov    r11,rsp
   14001d667:	mov    QWORD PTR [r11+0x8],rbx
   14001d66b:	mov    QWORD PTR [r11+0x10],rsi
   14001d66f:	push   rdi
   14001d670:	sub    rsp,0x50
   14001d674:	mov    r10,QWORD PTR [rip+0x1dea5]        # 0x14003b520
   14001d67b:	mov    ebx,r9d
   14001d67e:	mov    rdi,r8
   14001d681:	xor    r10,QWORD PTR [rip+0x19988]        # 0x140037010
   14001d688:	mov    esi,edx
   14001d68a:	je     0x14001d6b6
   14001d68c:	xor    eax,eax
   14001d68e:	mov    QWORD PTR [r11-0x18],rax
   14001d692:	mov    QWORD PTR [r11-0x20],rax
   14001d696:	mov    QWORD PTR [r11-0x28],rax
   14001d69a:	mov    eax,DWORD PTR [rsp+0x88]
   14001d6a1:	mov    DWORD PTR [rsp+0x28],eax
   14001d6a5:	mov    rax,QWORD PTR [rsp+0x80]
   14001d6ad:	mov    QWORD PTR [r11-0x38],rax
   14001d6b1:	call   r10
   14001d6b4:	jmp    0x14001d6e3
   14001d6b6:	call   0x14001d630
   14001d6bb:	mov    r9d,ebx
   14001d6be:	mov    r8,rdi
   14001d6c1:	mov    ecx,eax
   14001d6c3:	mov    eax,DWORD PTR [rsp+0x88]
   14001d6ca:	mov    edx,esi
   14001d6cc:	mov    DWORD PTR [rsp+0x28],eax
   14001d6d0:	mov    rax,QWORD PTR [rsp+0x80]
   14001d6d8:	mov    QWORD PTR [rsp+0x20],rax
   14001d6dd:	call   QWORD PTR [rip+0x9c35]        # 0x140027318
   14001d6e3:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d6e8:	mov    rsi,QWORD PTR [rsp+0x68]
   14001d6ed:	add    rsp,0x50
   14001d6f1:	pop    rdi
   14001d6f2:	ret    
   14001d6f3:	int3   
   14001d6f4:	xor    r9d,r9d
   14001d6f7:	mov    r10,rdx
   14001d6fa:	mov    r11,rcx
   14001d6fd:	test   r8,r8
   14001d700:	je     0x14001d745
   14001d702:	sub    r11,rdx
   14001d705:	movzx  ecx,WORD PTR [r11+r10*1]
   14001d70a:	lea    eax,[rcx-0x41]
   14001d70d:	cmp    ax,0x19
   14001d711:	ja     0x14001d717
   14001d713:	add    cx,0x20
   14001d717:	movzx  edx,WORD PTR [r10]
   14001d71b:	lea    eax,[rdx-0x41]
   14001d71e:	cmp    ax,0x19
   14001d722:	ja     0x14001d728
   14001d724:	add    dx,0x20
   14001d728:	add    r10,0x2
   14001d72c:	dec    r8
   14001d72f:	je     0x14001d73b
   14001d731:	test   cx,cx
   14001d734:	je     0x14001d73b
   14001d736:	cmp    cx,dx
   14001d739:	je     0x14001d705
   14001d73b:	movzx  eax,dx
   14001d73e:	movzx  r9d,cx
   14001d742:	sub    r9d,eax
   14001d745:	mov    eax,r9d
   14001d748:	ret    
   14001d749:	int3   
   14001d74a:	int3   
   14001d74b:	int3   
   14001d74c:	int3   
   14001d74d:	int3   
   14001d74e:	int3   
   14001d74f:	int3   
   14001d750:	int3   
   14001d751:	int3   
   14001d752:	int3   
   14001d753:	int3   
   14001d754:	int3   
   14001d755:	int3   
   14001d756:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001d760:	sub    rsp,0x8
   14001d764:	stmxcsr DWORD PTR [rsp]
   14001d768:	mov    eax,DWORD PTR [rsp]
   14001d76b:	add    rsp,0x8
   14001d76f:	ret    
   14001d770:	mov    DWORD PTR [rsp+0x8],ecx
   14001d774:	ldmxcsr DWORD PTR [rsp+0x8]
   14001d779:	ret    
   14001d77a:	stmxcsr DWORD PTR [rsp+0x8]
   14001d77f:	mov    ecx,0xffffffc0
   14001d784:	and    DWORD PTR [rsp+0x8],ecx
   14001d788:	ldmxcsr DWORD PTR [rsp+0x8]
   14001d78d:	ret    
   14001d78e:	ucomisd xmm0,QWORD PTR [rip+0xff8a]        # 0x14002d720
   14001d796:	jae    0x14001d7ac
   14001d798:	ucomisd xmm0,QWORD PTR [rip+0xff88]        # 0x14002d728
   14001d7a0:	jbe    0x14001d7ac
   14001d7a2:	cvtsd2si rcx,xmm0
   14001d7a7:	cvtsi2sd xmm0,rcx
   14001d7ac:	ret    
   14001d7ad:	int3   
   14001d7ae:	int3   
   14001d7af:	int3   
   14001d7b0:	rex push rbx
   14001d7b2:	push   rbp
   14001d7b3:	push   rsi
   14001d7b4:	push   rdi
   14001d7b5:	push   r12
   14001d7b7:	push   r14
   14001d7b9:	push   r15
   14001d7bb:	sub    rsp,0x50
   14001d7bf:	mov    rax,QWORD PTR [rip+0x1984a]        # 0x140037010
   14001d7c6:	xor    rax,rsp
   14001d7c9:	mov    QWORD PTR [rsp+0x48],rax
   14001d7ce:	mov    r15,rcx
   14001d7d1:	xor    ecx,ecx
   14001d7d3:	mov    ebp,r8d
   14001d7d6:	mov    r12,rdx
   14001d7d9:	call   QWORD PTR [rip+0x9a31]        # 0x140027210
   14001d7df:	xor    edi,edi
   14001d7e1:	mov    rsi,rax
   14001d7e4:	call   0x140016980
   14001d7e9:	cmp    QWORD PTR [rip+0x1ca18],rdi        # 0x14003a208
   14001d7f0:	mov    r14d,eax
   14001d7f3:	jne    0x14001d8f1
   14001d7f9:	lea    rcx,[rip+0x10958]        # 0x14002e158
   14001d800:	xor    edx,edx
   14001d802:	mov    r8d,0x800
   14001d808:	call   QWORD PTR [rip+0x9afa]        # 0x140027308
   14001d80e:	mov    rbx,rax
   14001d811:	test   rax,rax
   14001d814:	jne    0x14001d843
   14001d816:	call   QWORD PTR [rip+0x9844]        # 0x140027060
   14001d81c:	cmp    eax,0x57
   14001d81f:	jne    0x14001da05
   14001d825:	lea    rcx,[rip+0x1092c]        # 0x14002e158
   14001d82c:	xor    r8d,r8d
   14001d82f:	xor    edx,edx
   14001d831:	call   QWORD PTR [rip+0x9ad1]        # 0x140027308
   14001d837:	mov    rbx,rax
   14001d83a:	test   rax,rax
   14001d83d:	je     0x14001da05
   14001d843:	lea    rdx,[rip+0x10926]        # 0x14002e170
   14001d84a:	mov    rcx,rbx
   14001d84d:	call   QWORD PTR [rip+0x981d]        # 0x140027070
   14001d853:	test   rax,rax
   14001d856:	je     0x14001da05
   14001d85c:	mov    rcx,rax
   14001d85f:	call   QWORD PTR [rip+0x99ab]        # 0x140027210
   14001d865:	lea    rdx,[rip+0x10914]        # 0x14002e180
   14001d86c:	mov    rcx,rbx
   14001d86f:	mov    QWORD PTR [rip+0x1c992],rax        # 0x14003a208
   14001d876:	call   QWORD PTR [rip+0x97f4]        # 0x140027070
   14001d87c:	mov    rcx,rax
   14001d87f:	call   QWORD PTR [rip+0x998b]        # 0x140027210
   14001d885:	lea    rdx,[rip+0x10904]        # 0x14002e190
   14001d88c:	mov    rcx,rbx
   14001d88f:	mov    QWORD PTR [rip+0x1c97a],rax        # 0x14003a210
   14001d896:	call   QWORD PTR [rip+0x97d4]        # 0x140027070
   14001d89c:	mov    rcx,rax
   14001d89f:	call   QWORD PTR [rip+0x996b]        # 0x140027210
   14001d8a5:	lea    rdx,[rip+0x108fc]        # 0x14002e1a8
   14001d8ac:	mov    rcx,rbx
   14001d8af:	mov    QWORD PTR [rip+0x1c962],rax        # 0x14003a218
   14001d8b6:	call   QWORD PTR [rip+0x97b4]        # 0x140027070
   14001d8bc:	mov    rcx,rax
   14001d8bf:	call   QWORD PTR [rip+0x994b]        # 0x140027210
   14001d8c5:	mov    QWORD PTR [rip+0x1c95c],rax        # 0x14003a228
   14001d8cc:	test   rax,rax
   14001d8cf:	je     0x14001d8f1
   14001d8d1:	lea    rdx,[rip+0x108f0]        # 0x14002e1c8
   14001d8d8:	mov    rcx,rbx
   14001d8db:	call   QWORD PTR [rip+0x978f]        # 0x140027070
   14001d8e1:	mov    rcx,rax
   14001d8e4:	call   QWORD PTR [rip+0x9926]        # 0x140027210
   14001d8ea:	mov    QWORD PTR [rip+0x1c92f],rax        # 0x14003a220
   14001d8f1:	call   QWORD PTR [rip+0x9931]        # 0x140027228
   14001d8f7:	test   eax,eax
   14001d8f9:	je     0x14001d918
   14001d8fb:	test   r15,r15
   14001d8fe:	je     0x14001d909
   14001d900:	mov    rcx,r15
   14001d903:	call   QWORD PTR [rip+0x9a17]        # 0x140027320
   14001d909:	test   r14d,r14d
   14001d90c:	je     0x14001d934
   14001d90e:	mov    eax,0x4
   14001d913:	jmp    0x14001da07
   14001d918:	test   r14d,r14d
   14001d91b:	je     0x14001d934
   14001d91d:	mov    rcx,QWORD PTR [rip+0x1c8e4]        # 0x14003a208
   14001d924:	call   QWORD PTR [rip+0x97c6]        # 0x1400270f0
   14001d92a:	mov    eax,0x3
   14001d92f:	jmp    0x14001da07
   14001d934:	mov    rcx,QWORD PTR [rip+0x1c8e5]        # 0x14003a220
   14001d93b:	cmp    rcx,rsi
   14001d93e:	je     0x14001d9a3
   14001d940:	cmp    QWORD PTR [rip+0x1c8e1],rsi        # 0x14003a228
   14001d947:	je     0x14001d9a3
   14001d949:	call   QWORD PTR [rip+0x97a1]        # 0x1400270f0
   14001d94f:	mov    rcx,QWORD PTR [rip+0x1c8d2]        # 0x14003a228
   14001d956:	mov    rbx,rax
   14001d959:	call   QWORD PTR [rip+0x9791]        # 0x1400270f0
   14001d95f:	mov    r14,rax
   14001d962:	test   rbx,rbx
   14001d965:	je     0x14001d9a3
   14001d967:	test   rax,rax
   14001d96a:	je     0x14001d9a3
   14001d96c:	call   rbx
   14001d96e:	test   rax,rax
   14001d971:	je     0x14001d99d
   14001d973:	lea    rcx,[rsp+0x30]
   14001d978:	mov    r9d,0xc
   14001d97e:	lea    r8,[rsp+0x38]
   14001d983:	mov    QWORD PTR [rsp+0x20],rcx
   14001d988:	lea    edx,[r9-0xb]
   14001d98c:	mov    rcx,rax
   14001d98f:	call   r14
   14001d992:	test   eax,eax
   14001d994:	je     0x14001d99d
   14001d996:	test   BYTE PTR [rsp+0x40],0x1
   14001d99b:	jne    0x14001d9a3
   14001d99d:	bts    ebp,0x15
   14001d9a1:	jmp    0x14001d9e3
   14001d9a3:	mov    rcx,QWORD PTR [rip+0x1c866]        # 0x14003a210
   14001d9aa:	cmp    rcx,rsi
   14001d9ad:	je     0x14001d9e3
   14001d9af:	call   QWORD PTR [rip+0x973b]        # 0x1400270f0
   14001d9b5:	test   rax,rax
   14001d9b8:	je     0x14001d9e3
   14001d9ba:	call   rax
   14001d9bc:	mov    rdi,rax
   14001d9bf:	test   rax,rax
   14001d9c2:	je     0x14001d9e3
   14001d9c4:	mov    rcx,QWORD PTR [rip+0x1c84d]        # 0x14003a218
   14001d9cb:	cmp    rcx,rsi
   14001d9ce:	je     0x14001d9e3
   14001d9d0:	call   QWORD PTR [rip+0x971a]        # 0x1400270f0
   14001d9d6:	test   rax,rax
   14001d9d9:	je     0x14001d9e3
   14001d9db:	mov    rcx,rdi
   14001d9de:	call   rax
   14001d9e0:	mov    rdi,rax
   14001d9e3:	mov    rcx,QWORD PTR [rip+0x1c81e]        # 0x14003a208
   14001d9ea:	call   QWORD PTR [rip+0x9700]        # 0x1400270f0
   14001d9f0:	test   rax,rax
   14001d9f3:	je     0x14001da05
   14001d9f5:	mov    r9d,ebp
   14001d9f8:	mov    r8,r12
   14001d9fb:	mov    rdx,r15
   14001d9fe:	mov    rcx,rdi
   14001da01:	call   rax
   14001da03:	jmp    0x14001da07
   14001da05:	xor    eax,eax
   14001da07:	mov    rcx,QWORD PTR [rsp+0x48]
   14001da0c:	xor    rcx,rsp
   14001da0f:	call   0x1400130a0
   14001da14:	add    rsp,0x50
   14001da18:	pop    r15
   14001da1a:	pop    r14
   14001da1c:	pop    r12
   14001da1e:	pop    rdi
   14001da1f:	pop    rsi
   14001da20:	pop    rbp
   14001da21:	pop    rbx
   14001da22:	ret    
   14001da23:	int3   
   14001da24:	mov    QWORD PTR [rsp+0x8],rbx
   14001da29:	push   rdi
   14001da2a:	sub    rsp,0x20
   14001da2e:	mov    eax,DWORD PTR [rip+0x1c9dc]        # 0x14003a410
   14001da34:	xor    ebx,ebx
   14001da36:	mov    edi,0x14
   14001da3b:	test   eax,eax
   14001da3d:	jne    0x14001da46
   14001da3f:	mov    eax,0x200
   14001da44:	jmp    0x14001da4b
   14001da46:	cmp    eax,edi
   14001da48:	cmovl  eax,edi
   14001da4b:	movsxd rcx,eax
   14001da4e:	mov    edx,0x8
   14001da53:	mov    DWORD PTR [rip+0x1c9b7],eax        # 0x14003a410
   14001da59:	call   0x140015d14
   14001da5e:	mov    QWORD PTR [rip+0x1c9a3],rax        # 0x14003a408
   14001da65:	test   rax,rax
   14001da68:	jne    0x14001da8e
   14001da6a:	lea    edx,[rax+0x8]
   14001da6d:	mov    rcx,rdi
   14001da70:	mov    DWORD PTR [rip+0x1c99a],edi        # 0x14003a410
   14001da76:	call   0x140015d14
   14001da7b:	mov    QWORD PTR [rip+0x1c986],rax        # 0x14003a408
   14001da82:	test   rax,rax
   14001da85:	jne    0x14001da8e
   14001da87:	mov    eax,0x1a
   14001da8c:	jmp    0x14001dab1
   14001da8e:	lea    rcx,[rip+0x1a58b]        # 0x140038020
   14001da95:	mov    QWORD PTR [rbx+rax*1],rcx
   14001da99:	add    rcx,0x30
   14001da9d:	lea    rbx,[rbx+0x8]
   14001daa1:	dec    rdi
   14001daa4:	je     0x14001daaf
   14001daa6:	mov    rax,QWORD PTR [rip+0x1c95b]        # 0x14003a408
   14001daad:	jmp    0x14001da95
   14001daaf:	xor    eax,eax
   14001dab1:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dab6:	add    rsp,0x20
   14001daba:	pop    rdi
   14001dabb:	ret    
   14001dabc:	sub    rsp,0x28
   14001dac0:	call   0x140020930
   14001dac5:	cmp    BYTE PTR [rip+0x1b978],0x0        # 0x140039444
   14001dacc:	je     0x14001dad3
   14001dace:	call   0x140020a24
   14001dad3:	mov    rcx,QWORD PTR [rip+0x1c92e]        # 0x14003a408
   14001dada:	call   0x14001392c
   14001dadf:	and    QWORD PTR [rip+0x1c921],0x0        # 0x14003a408
   14001dae7:	add    rsp,0x28
   14001daeb:	ret    
   14001daec:	lea    rax,[rip+0x1a52d]        # 0x140038020
   14001daf3:	ret    
   14001daf4:	rex push rbx
   14001daf6:	sub    rsp,0x20
   14001dafa:	mov    rbx,rcx
   14001dafd:	lea    rcx,[rip+0x1a51c]        # 0x140038020
   14001db04:	cmp    rbx,rcx
   14001db07:	jb     0x14001db49
   14001db09:	lea    rax,[rip+0x1a8a0]        # 0x1400383b0
   14001db10:	cmp    rbx,rax
   14001db13:	ja     0x14001db49
   14001db15:	mov    rdx,rbx
   14001db18:	movabs rax,0x2aaaaaaaaaaaaaab
   14001db22:	sub    rdx,rcx
   14001db25:	imul   rdx
   14001db28:	sar    rdx,0x3
   14001db2c:	mov    rcx,rdx
   14001db2f:	shr    rcx,0x3f
   14001db33:	add    rcx,rdx
   14001db36:	add    ecx,0x10
   14001db39:	call   0x14001cde8
   14001db3e:	bts    DWORD PTR [rbx+0x18],0xf
   14001db43:	add    rsp,0x20
   14001db47:	pop    rbx
   14001db48:	ret    
   14001db49:	lea    rcx,[rbx+0x30]
   14001db4d:	add    rsp,0x20
   14001db51:	pop    rbx
   14001db52:	rex.W jmp QWORD PTR [rip+0x951f]        # 0x140027078
   14001db59:	int3   
   14001db5a:	int3   
   14001db5b:	int3   
   14001db5c:	rex push rbx
   14001db5e:	sub    rsp,0x20
   14001db62:	mov    rbx,rdx
   14001db65:	cmp    ecx,0x14
   14001db68:	jge    0x14001db7d
   14001db6a:	add    ecx,0x10
   14001db6d:	call   0x14001cde8
   14001db72:	bts    DWORD PTR [rbx+0x18],0xf
   14001db77:	add    rsp,0x20
   14001db7b:	pop    rbx
   14001db7c:	ret    
   14001db7d:	lea    rcx,[rdx+0x30]
   14001db81:	add    rsp,0x20
   14001db85:	pop    rbx
   14001db86:	rex.W jmp QWORD PTR [rip+0x94eb]        # 0x140027078
   14001db8d:	int3   
   14001db8e:	int3   
   14001db8f:	int3   
   14001db90:	lea    rdx,[rip+0x1a489]        # 0x140038020
   14001db97:	cmp    rcx,rdx
   14001db9a:	jb     0x14001dbd3
   14001db9c:	lea    rax,[rip+0x1a80d]        # 0x1400383b0
   14001dba3:	cmp    rcx,rax
   14001dba6:	ja     0x14001dbd3
   14001dba8:	btr    DWORD PTR [rcx+0x18],0xf
   14001dbad:	sub    rcx,rdx
   14001dbb0:	movabs rax,0x2aaaaaaaaaaaaaab
   14001dbba:	imul   rcx
   14001dbbd:	sar    rdx,0x3
   14001dbc1:	mov    rcx,rdx
   14001dbc4:	shr    rcx,0x3f
   14001dbc8:	add    rcx,rdx
   14001dbcb:	add    ecx,0x10
   14001dbce:	jmp    0x14001cfd8
   14001dbd3:	add    rcx,0x30
   14001dbd7:	rex.W jmp QWORD PTR [rip+0x945a]        # 0x140027038
   14001dbde:	int3   
   14001dbdf:	int3   
   14001dbe0:	cmp    ecx,0x14
   14001dbe3:	jge    0x14001dbf2
   14001dbe5:	btr    DWORD PTR [rdx+0x18],0xf
   14001dbea:	add    ecx,0x10
   14001dbed:	jmp    0x14001cfd8
   14001dbf2:	lea    rcx,[rdx+0x30]
   14001dbf6:	rex.W jmp QWORD PTR [rip+0x943b]        # 0x140027038
   14001dbfd:	int3   
   14001dbfe:	int3   
   14001dbff:	int3   
   14001dc00:	neg    rcx
   14001dc03:	sbb    eax,eax
   14001dc05:	and    eax,0x1
   14001dc08:	ret    
   14001dc09:	int3   
   14001dc0a:	int3   
   14001dc0b:	int3   
   14001dc0c:	int3   
   14001dc0d:	int3   
   14001dc0e:	int3   
   14001dc0f:	int3   
   14001dc10:	int3   
   14001dc11:	int3   
   14001dc12:	int3   
   14001dc13:	int3   
   14001dc14:	int3   
   14001dc15:	int3   
   14001dc16:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001dc20:	sub    rsp,0x28
   14001dc24:	mov    QWORD PTR [rsp+0x30],rcx
   14001dc29:	mov    QWORD PTR [rsp+0x38],rdx
   14001dc2e:	mov    DWORD PTR [rsp+0x40],r8d
   14001dc33:	mov    rdx,QWORD PTR [rdx]
   14001dc36:	mov    rax,rcx
   14001dc39:	call   0x14001d570
   14001dc3e:	call   rax
   14001dc40:	call   0x14001d5a0
   14001dc45:	mov    rcx,rax
   14001dc48:	mov    rdx,QWORD PTR [rsp+0x38]
   14001dc4d:	mov    rdx,QWORD PTR [rdx]
   14001dc50:	mov    r8d,0x2
   14001dc56:	call   0x14001d570
   14001dc5b:	add    rsp,0x28
   14001dc5f:	ret    
   14001dc60:	mov    rax,QWORD PTR [rsp]
   14001dc64:	mov    QWORD PTR [rcx],rax
   14001dc67:	ret    
   14001dc68:	rex push rbx
   14001dc6a:	sub    rsp,0x40
   14001dc6e:	cmp    DWORD PTR [rip+0x1c29f],0x0        # 0x140039f14
   14001dc75:	movsxd rbx,ecx
   14001dc78:	jne    0x14001dc8a
   14001dc7a:	mov    rax,QWORD PTR [rip+0x19f17]        # 0x140037b98
   14001dc81:	movzx  eax,WORD PTR [rax+rbx*2]
   14001dc85:	and    eax,0x4
   14001dc88:	jmp    0x14001dcdc
   14001dc8a:	lea    rcx,[rsp+0x20]
   14001dc8f:	xor    edx,edx
   14001dc91:	call   0x140014b34
   14001dc96:	mov    rax,QWORD PTR [rsp+0x20]
   14001dc9b:	cmp    DWORD PTR [rax+0xd4],0x1
   14001dca2:	jle    0x14001dcb9
   14001dca4:	lea    r8,[rsp+0x20]
   14001dca9:	mov    edx,0x4
   14001dcae:	mov    ecx,ebx
   14001dcb0:	call   0x140020acc
   14001dcb5:	mov    ecx,eax
   14001dcb7:	jmp    0x14001dcc7
   14001dcb9:	mov    rax,QWORD PTR [rax+0x108]
   14001dcc0:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001dcc4:	and    ecx,0x4
   14001dcc7:	cmp    BYTE PTR [rsp+0x38],0x0
   14001dccc:	je     0x14001dcda
   14001dcce:	mov    rax,QWORD PTR [rsp+0x30]
   14001dcd3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001dcda:	mov    eax,ecx
   14001dcdc:	add    rsp,0x40
   14001dce0:	pop    rbx
   14001dce1:	ret    
   14001dce2:	int3   
   14001dce3:	int3   
   14001dce4:	rex push rbx
   14001dce6:	sub    rsp,0x40
   14001dcea:	cmp    DWORD PTR [rip+0x1c223],0x0        # 0x140039f14
   14001dcf1:	movsxd rbx,ecx
   14001dcf4:	jne    0x14001dd08
   14001dcf6:	mov    rax,QWORD PTR [rip+0x19e9b]        # 0x140037b98
   14001dcfd:	movzx  eax,WORD PTR [rax+rbx*2]
   14001dd01:	and    eax,0x80
   14001dd06:	jmp    0x14001dd5d
   14001dd08:	lea    rcx,[rsp+0x20]
   14001dd0d:	xor    edx,edx
   14001dd0f:	call   0x140014b34
   14001dd14:	mov    rax,QWORD PTR [rsp+0x20]
   14001dd19:	cmp    DWORD PTR [rax+0xd4],0x1
   14001dd20:	jle    0x14001dd37
   14001dd22:	lea    r8,[rsp+0x20]
   14001dd27:	mov    edx,0x80
   14001dd2c:	mov    ecx,ebx
   14001dd2e:	call   0x140020acc
   14001dd33:	mov    ecx,eax
   14001dd35:	jmp    0x14001dd48
   14001dd37:	mov    rax,QWORD PTR [rax+0x108]
   14001dd3e:	movzx  ecx,WORD PTR [rax+rbx*2]
   14001dd42:	and    ecx,0x80
   14001dd48:	cmp    BYTE PTR [rsp+0x38],0x0
   14001dd4d:	je     0x14001dd5b
   14001dd4f:	mov    rax,QWORD PTR [rsp+0x30]
   14001dd54:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001dd5b:	mov    eax,ecx
   14001dd5d:	add    rsp,0x40
   14001dd61:	pop    rbx
   14001dd62:	ret    
   14001dd63:	int3   
   14001dd64:	mov    QWORD PTR [rsp+0x10],rdi
   14001dd69:	mov    QWORD PTR [rsp+0x20],r14
   14001dd6e:	push   rbp
   14001dd6f:	mov    rbp,rsp
   14001dd72:	sub    rsp,0x70
   14001dd76:	movsxd rdi,ecx
   14001dd79:	lea    rcx,[rbp-0x20]
   14001dd7d:	call   0x140014b34
   14001dd82:	cmp    edi,0x100
   14001dd88:	jae    0x14001dde7
   14001dd8a:	mov    rdx,QWORD PTR [rbp-0x20]
   14001dd8e:	cmp    DWORD PTR [rdx+0xd4],0x1
   14001dd95:	jle    0x14001ddad
   14001dd97:	lea    r8,[rbp-0x20]
   14001dd9b:	mov    edx,0x1
   14001dda0:	mov    ecx,edi
   14001dda2:	call   0x140020acc
   14001dda7:	mov    rdx,QWORD PTR [rbp-0x20]
   14001ddab:	jmp    0x14001ddbb
   14001ddad:	mov    rax,QWORD PTR [rdx+0x108]
   14001ddb4:	movzx  eax,WORD PTR [rax+rdi*2]
   14001ddb8:	and    eax,0x1
   14001ddbb:	test   eax,eax
   14001ddbd:	je     0x14001ddcf
   14001ddbf:	mov    rax,QWORD PTR [rdx+0x110]
   14001ddc6:	movzx  eax,BYTE PTR [rax+rdi*1]
   14001ddca:	jmp    0x14001de93
   14001ddcf:	cmp    BYTE PTR [rbp-0x8],0x0
   14001ddd3:	je     0x14001dde0
   14001ddd5:	mov    rax,QWORD PTR [rbp-0x10]
   14001ddd9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001dde0:	mov    eax,edi
   14001dde2:	jmp    0x14001dea4
   14001dde7:	mov    rax,QWORD PTR [rbp-0x20]
   14001ddeb:	cmp    DWORD PTR [rax+0xd4],0x1
   14001ddf2:	jle    0x14001de1f
   14001ddf4:	mov    r14d,edi
   14001ddf7:	lea    rdx,[rbp-0x20]
   14001ddfb:	sar    r14d,0x8
   14001ddff:	movzx  ecx,r14b
   14001de03:	call   0x14001fa38
   14001de08:	test   eax,eax
   14001de0a:	je     0x14001de1f
   14001de0c:	mov    BYTE PTR [rbp+0x10],r14b
   14001de10:	mov    BYTE PTR [rbp+0x11],dil
   14001de14:	mov    BYTE PTR [rbp+0x12],0x0
   14001de18:	mov    ecx,0x2
   14001de1d:	jmp    0x14001de37
   14001de1f:	call   0x1400161e8
   14001de24:	mov    ecx,0x1
   14001de29:	mov    DWORD PTR [rax],0x2a
   14001de2f:	mov    BYTE PTR [rbp+0x10],dil
   14001de33:	mov    BYTE PTR [rbp+0x11],0x0
   14001de37:	mov    rdx,QWORD PTR [rbp-0x20]
   14001de3b:	mov    DWORD PTR [rsp+0x40],0x1
   14001de43:	lea    r9,[rbp+0x10]
   14001de47:	mov    eax,DWORD PTR [rdx+0x4]
   14001de4a:	mov    rdx,QWORD PTR [rdx+0x138]
   14001de51:	mov    r8d,0x100
   14001de57:	mov    DWORD PTR [rsp+0x38],eax
   14001de5b:	lea    rax,[rbp+0x20]
   14001de5f:	mov    DWORD PTR [rsp+0x30],0x3
   14001de67:	mov    QWORD PTR [rsp+0x28],rax
   14001de6c:	mov    DWORD PTR [rsp+0x20],ecx
   14001de70:	lea    rcx,[rbp-0x20]
   14001de74:	call   0x14001ec7c
   14001de79:	test   eax,eax
   14001de7b:	je     0x14001ddcf
   14001de81:	cmp    eax,0x1
   14001de84:	movzx  eax,BYTE PTR [rbp+0x20]
   14001de88:	je     0x14001de93
   14001de8a:	movzx  ecx,BYTE PTR [rbp+0x21]
   14001de8e:	shl    eax,0x8
   14001de91:	or     eax,ecx
   14001de93:	cmp    BYTE PTR [rbp-0x8],0x0
   14001de97:	je     0x14001dea4
   14001de99:	mov    rcx,QWORD PTR [rbp-0x10]
   14001de9d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001dea4:	lea    r11,[rsp+0x70]
   14001dea9:	mov    rdi,QWORD PTR [r11+0x18]
   14001dead:	mov    r14,QWORD PTR [r11+0x28]
   14001deb1:	mov    rsp,r11
   14001deb4:	pop    rbp
   14001deb5:	ret    
   14001deb6:	int3   
   14001deb7:	int3   
   14001deb8:	cmp    DWORD PTR [rip+0x1c055],0x0        # 0x140039f14
   14001debf:	jne    0x14001decf
   14001dec1:	lea    eax,[rcx-0x41]
   14001dec4:	cmp    eax,0x19
   14001dec7:	ja     0x14001decc
   14001dec9:	add    ecx,0x20
   14001decc:	mov    eax,ecx
   14001dece:	ret    
   14001decf:	xor    edx,edx
   14001ded1:	jmp    0x14001dd64
   14001ded6:	int3   
   14001ded7:	int3   
   14001ded8:	sub    rsp,0x18
   14001dedc:	xor    r8d,r8d
   14001dedf:	mov    r9,rcx
   14001dee2:	test   edx,edx
   14001dee4:	jne    0x14001df2e
   14001dee6:	and    r9d,0xf
   14001deea:	mov    rdx,rcx
   14001deed:	xorps  xmm1,xmm1
   14001def0:	and    rdx,0xfffffffffffffff0
   14001def4:	mov    ecx,r9d
   14001def7:	or     r9d,0xffffffff
   14001defb:	shl    r9d,cl
   14001defe:	movdqa xmm0,XMMWORD PTR [rdx]
   14001df02:	pcmpeqb xmm0,xmm1
   14001df06:	pmovmskb eax,xmm0
   14001df0a:	and    eax,r9d
   14001df0d:	jne    0x14001df23
   14001df0f:	add    rdx,0x10
   14001df13:	movdqa xmm0,XMMWORD PTR [rdx]
   14001df17:	pcmpeqb xmm0,xmm1
   14001df1b:	pmovmskb eax,xmm0
   14001df1f:	test   eax,eax
   14001df21:	je     0x14001df0f
   14001df23:	bsf    eax,eax
   14001df26:	add    rax,rdx
   14001df29:	jmp    0x14001dfd4
   14001df2e:	cmp    DWORD PTR [rip+0x190eb],0x2        # 0x140037020
   14001df35:	jge    0x14001dfd9
   14001df3b:	mov    r10,rcx
   14001df3e:	movzx  eax,dl
   14001df41:	and    r9d,0xf
   14001df45:	and    r10,0xfffffffffffffff0
   14001df49:	mov    ecx,eax
   14001df4b:	xorps  xmm2,xmm2
   14001df4e:	shl    ecx,0x8
   14001df51:	or     ecx,eax
   14001df53:	movd   xmm0,ecx
   14001df57:	mov    ecx,r9d
   14001df5a:	or     r9d,0xffffffff
   14001df5e:	shl    r9d,cl
   14001df61:	pshuflw xmm1,xmm0,0x0
   14001df66:	movdqa xmm0,xmm2
   14001df6a:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14001df6f:	pshufd xmm3,xmm1,0x0
   14001df74:	pmovmskb ecx,xmm0
   14001df78:	movdqa xmm0,xmm3
   14001df7c:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14001df81:	pmovmskb edx,xmm0
   14001df85:	and    edx,r9d
   14001df88:	and    ecx,r9d
   14001df8b:	jne    0x14001dfbb
   14001df8d:	bsr    ecx,edx
   14001df90:	movdqa xmm1,xmm2
   14001df94:	movdqa xmm0,xmm3
   14001df98:	add    rcx,r10
   14001df9b:	test   edx,edx
   14001df9d:	cmovne r8,rcx
   14001dfa1:	add    r10,0x10
   14001dfa5:	pcmpeqb xmm1,XMMWORD PTR [r10]
   14001dfaa:	pcmpeqb xmm0,XMMWORD PTR [r10]
   14001dfaf:	pmovmskb ecx,xmm1
   14001dfb3:	pmovmskb edx,xmm0
   14001dfb7:	test   ecx,ecx
   14001dfb9:	je     0x14001df8d
   14001dfbb:	mov    eax,ecx
   14001dfbd:	neg    eax
   14001dfbf:	and    eax,ecx
   14001dfc1:	dec    eax
   14001dfc3:	and    edx,eax
   14001dfc5:	bsr    ecx,edx
   14001dfc8:	add    rcx,r10
   14001dfcb:	test   edx,edx
   14001dfcd:	cmovne r8,rcx
   14001dfd1:	mov    rax,r8
   14001dfd4:	add    rsp,0x18
   14001dfd8:	ret    
   14001dfd9:	test   cl,0xf
   14001dfdc:	je     0x14001dff7
   14001dfde:	movsx  eax,BYTE PTR [r9]
   14001dfe2:	cmp    eax,edx
   14001dfe4:	cmove  r8,r9
   14001dfe8:	cmp    BYTE PTR [r9],0x0
   14001dfec:	je     0x14001dfd1
   14001dfee:	inc    r9
   14001dff1:	test   r9b,0xf
   14001dff5:	jne    0x14001dfde
   14001dff7:	movzx  eax,dl
   14001dffa:	movd   xmm0,eax
   14001dffe:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14001e005:	jae    0x14001e014
   14001e007:	movsxd r8,ecx
   14001e00a:	add    r8,r9
   14001e00d:	pcmpistri xmm0,XMMWORD PTR [r9],0x40
   14001e014:	je     0x14001dfd1
   14001e016:	add    r9,0x10
   14001e01a:	jmp    0x14001dffe
   14001e01c:	mov    QWORD PTR [rsp+0x8],rbx
   14001e021:	push   rdi
   14001e022:	sub    rsp,0x20
   14001e026:	mov    rbx,rcx
   14001e029:	mov    rcx,QWORD PTR [r9+0x10]
   14001e02d:	xor    r10d,r10d
   14001e030:	test   rbx,rbx
   14001e033:	jne    0x14001e04d
   14001e035:	call   0x1400161e8
   14001e03a:	mov    ebx,0x16
   14001e03f:	mov    DWORD PTR [rax],ebx
   14001e041:	call   0x140013f54
   14001e046:	mov    eax,ebx
   14001e048:	jmp    0x14001e0dc
   14001e04d:	test   rdx,rdx
   14001e050:	je     0x14001e035
   14001e052:	mov    eax,r10d
   14001e055:	test   r8d,r8d
   14001e058:	mov    BYTE PTR [rbx],r10b
   14001e05b:	cmovg  eax,r8d
   14001e05f:	inc    eax
   14001e061:	cdqe   
   14001e063:	cmp    rdx,rax
   14001e066:	ja     0x14001e074
   14001e068:	call   0x1400161e8
   14001e06d:	mov    ebx,0x22
   14001e072:	jmp    0x14001e03f
   14001e074:	lea    rdi,[rbx+0x1]
   14001e078:	mov    BYTE PTR [rbx],0x30
   14001e07b:	mov    rax,rdi
   14001e07e:	jmp    0x14001e09a
   14001e080:	cmp    BYTE PTR [rcx],r10b
   14001e083:	je     0x14001e08d
   14001e085:	movsx  edx,BYTE PTR [rcx]
   14001e088:	inc    rcx
   14001e08b:	jmp    0x14001e092
   14001e08d:	mov    edx,0x30
   14001e092:	mov    BYTE PTR [rax],dl
   14001e094:	inc    rax
   14001e097:	dec    r8d
   14001e09a:	test   r8d,r8d
   14001e09d:	jg     0x14001e080
   14001e09f:	mov    BYTE PTR [rax],r10b
   14001e0a2:	js     0x14001e0b8
   14001e0a4:	cmp    BYTE PTR [rcx],0x35
   14001e0a7:	jl     0x14001e0b8
   14001e0a9:	jmp    0x14001e0ae
   14001e0ab:	mov    BYTE PTR [rax],0x30
   14001e0ae:	dec    rax
   14001e0b1:	cmp    BYTE PTR [rax],0x39
   14001e0b4:	je     0x14001e0ab
   14001e0b6:	inc    BYTE PTR [rax]
   14001e0b8:	cmp    BYTE PTR [rbx],0x31
   14001e0bb:	jne    0x14001e0c3
   14001e0bd:	inc    DWORD PTR [r9+0x4]
   14001e0c1:	jmp    0x14001e0da
   14001e0c3:	mov    rcx,rdi
   14001e0c6:	call   0x140015330
   14001e0cb:	mov    rdx,rdi
   14001e0ce:	mov    rcx,rbx
   14001e0d1:	lea    r8,[rax+0x1]
   14001e0d5:	call   0x1400130d0
   14001e0da:	xor    eax,eax
   14001e0dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e0e1:	add    rsp,0x20
   14001e0e5:	pop    rdi
   14001e0e6:	ret    
   14001e0e7:	int3   
   14001e0e8:	rex push rbx
   14001e0ea:	push   rsi
   14001e0eb:	push   rdi
   14001e0ec:	sub    rsp,0x80
   14001e0f3:	mov    rax,QWORD PTR [rip+0x18f16]        # 0x140037010
   14001e0fa:	xor    rax,rsp
   14001e0fd:	mov    QWORD PTR [rsp+0x78],rax
   14001e102:	mov    rsi,rcx
   14001e105:	mov    rbx,rdx
   14001e108:	lea    rcx,[rsp+0x48]
   14001e10d:	mov    rdx,r8
   14001e110:	mov    rdi,r9
   14001e113:	call   0x140014b34
   14001e118:	lea    rax,[rsp+0x48]
   14001e11d:	lea    rdx,[rsp+0x40]
   14001e122:	mov    QWORD PTR [rsp+0x38],rax
   14001e127:	and    DWORD PTR [rsp+0x30],0x0
   14001e12c:	and    DWORD PTR [rsp+0x28],0x0
   14001e131:	and    DWORD PTR [rsp+0x20],0x0
   14001e136:	lea    rcx,[rsp+0x68]
   14001e13b:	xor    r9d,r9d
   14001e13e:	mov    r8,rbx
   14001e141:	call   0x140021718
   14001e146:	mov    ebx,eax
   14001e148:	test   rdi,rdi
   14001e14b:	je     0x14001e155
   14001e14d:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e152:	mov    QWORD PTR [rdi],rcx
   14001e155:	lea    rcx,[rsp+0x68]
   14001e15a:	mov    rdx,rsi
   14001e15d:	call   0x140021160
   14001e162:	mov    ecx,eax
   14001e164:	mov    eax,0x3
   14001e169:	test   al,bl
   14001e16b:	jne    0x14001e179
   14001e16d:	cmp    ecx,0x1
   14001e170:	je     0x14001e18c
   14001e172:	cmp    ecx,0x2
   14001e175:	jne    0x14001e18a
   14001e177:	jmp    0x14001e17e
   14001e179:	test   bl,0x1
   14001e17c:	je     0x14001e185
   14001e17e:	mov    eax,0x4
   14001e183:	jmp    0x14001e18c
   14001e185:	test   bl,0x2
   14001e188:	jne    0x14001e18c
   14001e18a:	xor    eax,eax
   14001e18c:	cmp    BYTE PTR [rsp+0x60],0x0
   14001e191:	je     0x14001e19f
   14001e193:	mov    rcx,QWORD PTR [rsp+0x58]
   14001e198:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001e19f:	mov    rcx,QWORD PTR [rsp+0x78]
   14001e1a4:	xor    rcx,rsp
   14001e1a7:	call   0x1400130a0
   14001e1ac:	add    rsp,0x80
   14001e1b3:	pop    rdi
   14001e1b4:	pop    rsi
   14001e1b5:	pop    rbx
   14001e1b6:	ret    
   14001e1b7:	int3   
   14001e1b8:	mov    QWORD PTR [rsp+0x18],rbx
   14001e1bd:	push   rdi
   14001e1be:	sub    rsp,0x80
   14001e1c5:	mov    rax,QWORD PTR [rip+0x18e44]        # 0x140037010
   14001e1cc:	xor    rax,rsp
   14001e1cf:	mov    QWORD PTR [rsp+0x78],rax
   14001e1d4:	mov    rdi,rcx
   14001e1d7:	mov    rbx,rdx
   14001e1da:	lea    rcx,[rsp+0x40]
   14001e1df:	mov    rdx,r8
   14001e1e2:	call   0x140014b34
   14001e1e7:	lea    rax,[rsp+0x40]
   14001e1ec:	lea    rdx,[rsp+0x60]
   14001e1f1:	mov    QWORD PTR [rsp+0x38],rax
   14001e1f6:	and    DWORD PTR [rsp+0x30],0x0
   14001e1fb:	and    DWORD PTR [rsp+0x28],0x0
   14001e200:	and    DWORD PTR [rsp+0x20],0x0
   14001e205:	lea    rcx,[rsp+0x68]
   14001e20a:	xor    r9d,r9d
   14001e20d:	mov    r8,rbx
   14001e210:	call   0x140021718
   14001e215:	lea    rcx,[rsp+0x68]
   14001e21a:	mov    rdx,rdi
   14001e21d:	mov    ebx,eax
   14001e21f:	call   0x140020ba8
   14001e224:	mov    ecx,eax
   14001e226:	mov    eax,0x3
   14001e22b:	test   al,bl
   14001e22d:	jne    0x14001e23b
   14001e22f:	cmp    ecx,0x1
   14001e232:	je     0x14001e24e
   14001e234:	cmp    ecx,0x2
   14001e237:	jne    0x14001e24c
   14001e239:	jmp    0x14001e240
   14001e23b:	test   bl,0x1
   14001e23e:	je     0x14001e247
   14001e240:	mov    eax,0x4
   14001e245:	jmp    0x14001e24e
   14001e247:	test   bl,0x2
   14001e24a:	jne    0x14001e24e
   14001e24c:	xor    eax,eax
   14001e24e:	cmp    BYTE PTR [rsp+0x58],0x0
   14001e253:	je     0x14001e261
   14001e255:	mov    rcx,QWORD PTR [rsp+0x50]
   14001e25a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001e261:	mov    rcx,QWORD PTR [rsp+0x78]
   14001e266:	xor    rcx,rsp
   14001e269:	call   0x1400130a0
   14001e26e:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001e276:	add    rsp,0x80
   14001e27d:	pop    rdi
   14001e27e:	ret    
   14001e27f:	int3   
   14001e280:	xor    r9d,r9d
   14001e283:	jmp    0x14001e0e8
   14001e288:	mov    QWORD PTR [rsp+0x8],rbx
   14001e28d:	movzx  r11d,WORD PTR [rdx+0x6]
   14001e292:	mov    r10,rcx
   14001e295:	mov    ecx,DWORD PTR [rdx+0x4]
   14001e298:	movzx  r8d,r11w
   14001e29c:	mov    eax,0x8000
   14001e2a1:	mov    r9d,0x7ff
   14001e2a7:	shr    r8w,0x4
   14001e2ac:	and    r11w,ax
   14001e2b0:	mov    eax,DWORD PTR [rdx]
   14001e2b2:	and    r8w,r9w
   14001e2b6:	and    ecx,0xfffff
   14001e2bc:	mov    ebx,0x80000000
   14001e2c1:	movzx  edx,r8w
   14001e2c5:	test   edx,edx
   14001e2c7:	je     0x14001e2e1
   14001e2c9:	cmp    edx,r9d
   14001e2cc:	je     0x14001e2d9
   14001e2ce:	mov    edx,0x3c00
   14001e2d3:	add    r8w,dx
   14001e2d7:	jmp    0x14001e2fd
   14001e2d9:	mov    r8d,0x7fff
   14001e2df:	jmp    0x14001e2fd
   14001e2e1:	test   ecx,ecx
   14001e2e3:	jne    0x14001e2f2
   14001e2e5:	test   eax,eax
   14001e2e7:	jne    0x14001e2f2
   14001e2e9:	and    DWORD PTR [r10+0x4],eax
   14001e2ed:	and    DWORD PTR [r10],eax
   14001e2f0:	jmp    0x14001e34a
   14001e2f2:	mov    edx,0x3c01
   14001e2f7:	add    r8w,dx
   14001e2fb:	xor    ebx,ebx
   14001e2fd:	mov    r9d,eax
   14001e300:	shl    ecx,0xb
   14001e303:	shl    eax,0xb
   14001e306:	shr    r9d,0x15
   14001e30a:	mov    DWORD PTR [r10],eax
   14001e30d:	or     r9d,ecx
   14001e310:	or     r9d,ebx
   14001e313:	mov    DWORD PTR [r10+0x4],r9d
   14001e317:	test   r9d,r9d
   14001e31a:	js     0x14001e346
   14001e31c:	mov    edx,DWORD PTR [r10]
   14001e31f:	lea    eax,[r9+r9*1]
   14001e323:	mov    ecx,edx
   14001e325:	shr    ecx,0x1f
   14001e328:	mov    r9d,ecx
   14001e32b:	or     r9d,eax
   14001e32e:	lea    eax,[rdx+rdx*1]
   14001e331:	mov    DWORD PTR [r10],eax
   14001e334:	mov    eax,0xffff
   14001e339:	add    r8w,ax
   14001e33d:	test   r9d,r9d
   14001e340:	jns    0x14001e31c
   14001e342:	mov    DWORD PTR [r10+0x4],r9d
   14001e346:	or     r11w,r8w
   14001e34a:	mov    rbx,QWORD PTR [rsp+0x8]
   14001e34f:	mov    WORD PTR [r10+0x8],r11w
   14001e354:	ret    
   14001e355:	int3   
   14001e356:	int3   
   14001e357:	int3   
   14001e358:	rex push rbp
   14001e35a:	push   rbx
   14001e35b:	push   rsi
   14001e35c:	push   rdi
   14001e35d:	lea    rbp,[rsp-0x3f]
   14001e362:	sub    rsp,0x88
   14001e369:	mov    rax,QWORD PTR [rip+0x18ca0]        # 0x140037010
   14001e370:	xor    rax,rsp
   14001e373:	mov    QWORD PTR [rbp+0x27],rax
   14001e377:	mov    rdi,rdx
   14001e37a:	mov    QWORD PTR [rbp-0x19],rcx
   14001e37e:	lea    rdx,[rbp-0x19]
   14001e382:	lea    rcx,[rbp-0x9]
   14001e386:	mov    rbx,r9
   14001e389:	mov    rsi,r8
   14001e38c:	call   0x14001e288
   14001e391:	movzx  eax,WORD PTR [rbp-0x1]
   14001e395:	xor    r8d,r8d
   14001e398:	movsd  xmm0,QWORD PTR [rbp-0x9]
   14001e39d:	movsd  QWORD PTR [rbp-0x19],xmm0
   14001e3a2:	lea    r9,[rbp+0x7]
   14001e3a6:	lea    rcx,[rbp-0x19]
   14001e3aa:	lea    edx,[r8+0x11]
   14001e3ae:	mov    WORD PTR [rbp-0x11],ax
   14001e3b2:	call   0x140021f7c
   14001e3b7:	movsx  ecx,BYTE PTR [rbp+0x9]
   14001e3bb:	mov    DWORD PTR [rdi],ecx
   14001e3bd:	movsx  ecx,WORD PTR [rbp+0x7]
   14001e3c1:	lea    r8,[rbp+0xb]
   14001e3c5:	mov    DWORD PTR [rdi+0x4],ecx
   14001e3c8:	mov    rdx,rbx
   14001e3cb:	mov    rcx,rsi
   14001e3ce:	mov    DWORD PTR [rdi+0x8],eax
   14001e3d1:	call   0x14001cd84
   14001e3d6:	test   eax,eax
   14001e3d8:	jne    0x14001e3f9
   14001e3da:	mov    QWORD PTR [rdi+0x10],rsi
   14001e3de:	mov    rax,rdi
   14001e3e1:	mov    rcx,QWORD PTR [rbp+0x27]
   14001e3e5:	xor    rcx,rsp
   14001e3e8:	call   0x1400130a0
   14001e3ed:	add    rsp,0x88
   14001e3f4:	pop    rdi
   14001e3f5:	pop    rsi
   14001e3f6:	pop    rbx
   14001e3f7:	pop    rbp
   14001e3f8:	ret    
   14001e3f9:	and    QWORD PTR [rsp+0x20],0x0
   14001e3ff:	xor    r9d,r9d
   14001e402:	xor    r8d,r8d
   14001e405:	xor    edx,edx
   14001e407:	xor    ecx,ecx
   14001e409:	call   0x140013f74
   14001e40e:	int3   
   14001e40f:	int3   
   14001e410:	mov    ecx,0x2
   14001e415:	jmp    0x140015948
   14001e41a:	int3   
   14001e41b:	int3   
   14001e41c:	test   rcx,rcx
   14001e41f:	je     0x14001e525
   14001e425:	push   rbx
   14001e426:	sub    rsp,0x20
   14001e42a:	mov    rbx,rcx
   14001e42d:	mov    rcx,QWORD PTR [rcx+0x18]
   14001e431:	cmp    rcx,QWORD PTR [rip+0x19fc0]        # 0x1400383f8
   14001e438:	je     0x14001e43f
   14001e43a:	call   0x14001392c
   14001e43f:	mov    rcx,QWORD PTR [rbx+0x20]
   14001e443:	cmp    rcx,QWORD PTR [rip+0x19fb6]        # 0x140038400
   14001e44a:	je     0x14001e451
   14001e44c:	call   0x14001392c
   14001e451:	mov    rcx,QWORD PTR [rbx+0x28]
   14001e455:	cmp    rcx,QWORD PTR [rip+0x19fac]        # 0x140038408
   14001e45c:	je     0x14001e463
   14001e45e:	call   0x14001392c
   14001e463:	mov    rcx,QWORD PTR [rbx+0x30]
   14001e467:	cmp    rcx,QWORD PTR [rip+0x19fa2]        # 0x140038410
   14001e46e:	je     0x14001e475
   14001e470:	call   0x14001392c
   14001e475:	mov    rcx,QWORD PTR [rbx+0x38]
   14001e479:	cmp    rcx,QWORD PTR [rip+0x19f98]        # 0x140038418
   14001e480:	je     0x14001e487
   14001e482:	call   0x14001392c
   14001e487:	mov    rcx,QWORD PTR [rbx+0x40]
   14001e48b:	cmp    rcx,QWORD PTR [rip+0x19f8e]        # 0x140038420
   14001e492:	je     0x14001e499
   14001e494:	call   0x14001392c
   14001e499:	mov    rcx,QWORD PTR [rbx+0x48]
   14001e49d:	cmp    rcx,QWORD PTR [rip+0x19f84]        # 0x140038428
   14001e4a4:	je     0x14001e4ab
   14001e4a6:	call   0x14001392c
   14001e4ab:	mov    rcx,QWORD PTR [rbx+0x68]
   14001e4af:	cmp    rcx,QWORD PTR [rip+0x19f92]        # 0x140038448
   14001e4b6:	je     0x14001e4bd
   14001e4b8:	call   0x14001392c
   14001e4bd:	mov    rcx,QWORD PTR [rbx+0x70]
   14001e4c1:	cmp    rcx,QWORD PTR [rip+0x19f88]        # 0x140038450
   14001e4c8:	je     0x14001e4cf
   14001e4ca:	call   0x14001392c
   14001e4cf:	mov    rcx,QWORD PTR [rbx+0x78]
   14001e4d3:	cmp    rcx,QWORD PTR [rip+0x19f7e]        # 0x140038458
   14001e4da:	je     0x14001e4e1
   14001e4dc:	call   0x14001392c
   14001e4e1:	mov    rcx,QWORD PTR [rbx+0x80]
   14001e4e8:	cmp    rcx,QWORD PTR [rip+0x19f71]        # 0x140038460
   14001e4ef:	je     0x14001e4f6
   14001e4f1:	call   0x14001392c
   14001e4f6:	mov    rcx,QWORD PTR [rbx+0x88]
   14001e4fd:	cmp    rcx,QWORD PTR [rip+0x19f64]        # 0x140038468
   14001e504:	je     0x14001e50b
   14001e506:	call   0x14001392c
   14001e50b:	mov    rcx,QWORD PTR [rbx+0x90]
   14001e512:	cmp    rcx,QWORD PTR [rip+0x19f57]        # 0x140038470
   14001e519:	je     0x14001e520
   14001e51b:	call   0x14001392c
   14001e520:	add    rsp,0x20
   14001e524:	pop    rbx
   14001e525:	ret    
   14001e526:	int3   
   14001e527:	int3   
   14001e528:	test   rcx,rcx
   14001e52b:	je     0x14001e593
   14001e52d:	push   rbx
   14001e52e:	sub    rsp,0x20
   14001e532:	mov    rbx,rcx
   14001e535:	mov    rcx,QWORD PTR [rcx]
   14001e538:	cmp    rcx,QWORD PTR [rip+0x19ea1]        # 0x1400383e0
   14001e53f:	je     0x14001e546
   14001e541:	call   0x14001392c
   14001e546:	mov    rcx,QWORD PTR [rbx+0x8]
   14001e54a:	cmp    rcx,QWORD PTR [rip+0x19e97]        # 0x1400383e8
   14001e551:	je     0x14001e558
   14001e553:	call   0x14001392c
   14001e558:	mov    rcx,QWORD PTR [rbx+0x10]
   14001e55c:	cmp    rcx,QWORD PTR [rip+0x19e8d]        # 0x1400383f0
   14001e563:	je     0x14001e56a
   14001e565:	call   0x14001392c
   14001e56a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001e56e:	cmp    rcx,QWORD PTR [rip+0x19ec3]        # 0x140038438
   14001e575:	je     0x14001e57c
   14001e577:	call   0x14001392c
   14001e57c:	mov    rcx,QWORD PTR [rbx+0x60]
   14001e580:	cmp    rcx,QWORD PTR [rip+0x19eb9]        # 0x140038440
   14001e587:	je     0x14001e58e
   14001e589:	call   0x14001392c
   14001e58e:	add    rsp,0x20
   14001e592:	pop    rbx
   14001e593:	ret    
   14001e594:	test   rcx,rcx
   14001e597:	je     0x14001e98d
   14001e59d:	push   rbx
   14001e59e:	sub    rsp,0x20
   14001e5a2:	mov    rbx,rcx
   14001e5a5:	mov    rcx,QWORD PTR [rcx+0x8]
   14001e5a9:	call   0x14001392c
   14001e5ae:	mov    rcx,QWORD PTR [rbx+0x10]
   14001e5b2:	call   0x14001392c
   14001e5b7:	mov    rcx,QWORD PTR [rbx+0x18]
   14001e5bb:	call   0x14001392c
   14001e5c0:	mov    rcx,QWORD PTR [rbx+0x20]
   14001e5c4:	call   0x14001392c
   14001e5c9:	mov    rcx,QWORD PTR [rbx+0x28]
   14001e5cd:	call   0x14001392c
   14001e5d2:	mov    rcx,QWORD PTR [rbx+0x30]
   14001e5d6:	call   0x14001392c
   14001e5db:	mov    rcx,QWORD PTR [rbx]
   14001e5de:	call   0x14001392c
   14001e5e3:	mov    rcx,QWORD PTR [rbx+0x40]
   14001e5e7:	call   0x14001392c
   14001e5ec:	mov    rcx,QWORD PTR [rbx+0x48]
   14001e5f0:	call   0x14001392c
   14001e5f5:	mov    rcx,QWORD PTR [rbx+0x50]
   14001e5f9:	call   0x14001392c
   14001e5fe:	mov    rcx,QWORD PTR [rbx+0x58]
   14001e602:	call   0x14001392c
   14001e607:	mov    rcx,QWORD PTR [rbx+0x60]
   14001e60b:	call   0x14001392c
   14001e610:	mov    rcx,QWORD PTR [rbx+0x68]
   14001e614:	call   0x14001392c
   14001e619:	mov    rcx,QWORD PTR [rbx+0x38]
   14001e61d:	call   0x14001392c
   14001e622:	mov    rcx,QWORD PTR [rbx+0x70]
   14001e626:	call   0x14001392c
   14001e62b:	mov    rcx,QWORD PTR [rbx+0x78]
   14001e62f:	call   0x14001392c
   14001e634:	mov    rcx,QWORD PTR [rbx+0x80]
   14001e63b:	call   0x14001392c
   14001e640:	mov    rcx,QWORD PTR [rbx+0x88]
   14001e647:	call   0x14001392c
   14001e64c:	mov    rcx,QWORD PTR [rbx+0x90]
   14001e653:	call   0x14001392c
   14001e658:	mov    rcx,QWORD PTR [rbx+0x98]
   14001e65f:	call   0x14001392c
   14001e664:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001e66b:	call   0x14001392c
   14001e670:	mov    rcx,QWORD PTR [rbx+0xa8]
   14001e677:	call   0x14001392c
   14001e67c:	mov    rcx,QWORD PTR [rbx+0xb0]
   14001e683:	call   0x14001392c
   14001e688:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001e68f:	call   0x14001392c
   14001e694:	mov    rcx,QWORD PTR [rbx+0xc0]
   14001e69b:	call   0x14001392c
   14001e6a0:	mov    rcx,QWORD PTR [rbx+0xc8]
   14001e6a7:	call   0x14001392c
   14001e6ac:	mov    rcx,QWORD PTR [rbx+0xd0]
   14001e6b3:	call   0x14001392c
   14001e6b8:	mov    rcx,QWORD PTR [rbx+0xd8]
   14001e6bf:	call   0x14001392c
   14001e6c4:	mov    rcx,QWORD PTR [rbx+0xe0]
   14001e6cb:	call   0x14001392c
   14001e6d0:	mov    rcx,QWORD PTR [rbx+0xe8]
   14001e6d7:	call   0x14001392c
   14001e6dc:	mov    rcx,QWORD PTR [rbx+0xf0]
   14001e6e3:	call   0x14001392c
   14001e6e8:	mov    rcx,QWORD PTR [rbx+0xf8]
   14001e6ef:	call   0x14001392c
   14001e6f4:	mov    rcx,QWORD PTR [rbx+0x100]
   14001e6fb:	call   0x14001392c
   14001e700:	mov    rcx,QWORD PTR [rbx+0x108]
   14001e707:	call   0x14001392c
   14001e70c:	mov    rcx,QWORD PTR [rbx+0x110]
   14001e713:	call   0x14001392c
   14001e718:	mov    rcx,QWORD PTR [rbx+0x118]
   14001e71f:	call   0x14001392c
   14001e724:	mov    rcx,QWORD PTR [rbx+0x120]
   14001e72b:	call   0x14001392c
   14001e730:	mov    rcx,QWORD PTR [rbx+0x128]
   14001e737:	call   0x14001392c
   14001e73c:	mov    rcx,QWORD PTR [rbx+0x130]
   14001e743:	call   0x14001392c
   14001e748:	mov    rcx,QWORD PTR [rbx+0x138]
   14001e74f:	call   0x14001392c
   14001e754:	mov    rcx,QWORD PTR [rbx+0x140]
   14001e75b:	call   0x14001392c
   14001e760:	mov    rcx,QWORD PTR [rbx+0x148]
   14001e767:	call   0x14001392c
   14001e76c:	mov    rcx,QWORD PTR [rbx+0x150]
   14001e773:	call   0x14001392c
   14001e778:	mov    rcx,QWORD PTR [rbx+0x168]
   14001e77f:	call   0x14001392c
   14001e784:	mov    rcx,QWORD PTR [rbx+0x170]
   14001e78b:	call   0x14001392c
   14001e790:	mov    rcx,QWORD PTR [rbx+0x178]
   14001e797:	call   0x14001392c
   14001e79c:	mov    rcx,QWORD PTR [rbx+0x180]
   14001e7a3:	call   0x14001392c
   14001e7a8:	mov    rcx,QWORD PTR [rbx+0x188]
   14001e7af:	call   0x14001392c
   14001e7b4:	mov    rcx,QWORD PTR [rbx+0x190]
   14001e7bb:	call   0x14001392c
   14001e7c0:	mov    rcx,QWORD PTR [rbx+0x160]
   14001e7c7:	call   0x14001392c
   14001e7cc:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14001e7d3:	call   0x14001392c
   14001e7d8:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14001e7df:	call   0x14001392c
   14001e7e4:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14001e7eb:	call   0x14001392c
   14001e7f0:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14001e7f7:	call   0x14001392c
   14001e7fc:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14001e803:	call   0x14001392c
   14001e808:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14001e80f:	call   0x14001392c
   14001e814:	mov    rcx,QWORD PTR [rbx+0x198]
   14001e81b:	call   0x14001392c
   14001e820:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14001e827:	call   0x14001392c
   14001e82c:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14001e833:	call   0x14001392c
   14001e838:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14001e83f:	call   0x14001392c
   14001e844:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14001e84b:	call   0x14001392c
   14001e850:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14001e857:	call   0x14001392c
   14001e85c:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14001e863:	call   0x14001392c
   14001e868:	mov    rcx,QWORD PTR [rbx+0x200]
   14001e86f:	call   0x14001392c
   14001e874:	mov    rcx,QWORD PTR [rbx+0x208]
   14001e87b:	call   0x14001392c
   14001e880:	mov    rcx,QWORD PTR [rbx+0x210]
   14001e887:	call   0x14001392c
   14001e88c:	mov    rcx,QWORD PTR [rbx+0x218]
   14001e893:	call   0x14001392c
   14001e898:	mov    rcx,QWORD PTR [rbx+0x220]
   14001e89f:	call   0x14001392c
   14001e8a4:	mov    rcx,QWORD PTR [rbx+0x228]
   14001e8ab:	call   0x14001392c
   14001e8b0:	mov    rcx,QWORD PTR [rbx+0x230]
   14001e8b7:	call   0x14001392c
   14001e8bc:	mov    rcx,QWORD PTR [rbx+0x238]
   14001e8c3:	call   0x14001392c
   14001e8c8:	mov    rcx,QWORD PTR [rbx+0x240]
   14001e8cf:	call   0x14001392c
   14001e8d4:	mov    rcx,QWORD PTR [rbx+0x248]
   14001e8db:	call   0x14001392c
   14001e8e0:	mov    rcx,QWORD PTR [rbx+0x250]
   14001e8e7:	call   0x14001392c
   14001e8ec:	mov    rcx,QWORD PTR [rbx+0x258]
   14001e8f3:	call   0x14001392c
   14001e8f8:	mov    rcx,QWORD PTR [rbx+0x260]
   14001e8ff:	call   0x14001392c
   14001e904:	mov    rcx,QWORD PTR [rbx+0x268]
   14001e90b:	call   0x14001392c
   14001e910:	mov    rcx,QWORD PTR [rbx+0x270]
   14001e917:	call   0x14001392c
   14001e91c:	mov    rcx,QWORD PTR [rbx+0x278]
   14001e923:	call   0x14001392c
   14001e928:	mov    rcx,QWORD PTR [rbx+0x280]
   14001e92f:	call   0x14001392c
   14001e934:	mov    rcx,QWORD PTR [rbx+0x288]
   14001e93b:	call   0x14001392c
   14001e940:	mov    rcx,QWORD PTR [rbx+0x290]
   14001e947:	call   0x14001392c
   14001e94c:	mov    rcx,QWORD PTR [rbx+0x298]
   14001e953:	call   0x14001392c
   14001e958:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14001e95f:	call   0x14001392c
   14001e964:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14001e96b:	call   0x14001392c
   14001e970:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14001e977:	call   0x14001392c
   14001e97c:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14001e983:	call   0x14001392c
   14001e988:	add    rsp,0x20
   14001e98c:	pop    rbx
   14001e98d:	ret    
   14001e98e:	int3   
   14001e98f:	int3   
   14001e990:	rex push rbp
   14001e992:	push   r12
   14001e994:	push   r13
   14001e996:	push   r14
   14001e998:	push   r15
   14001e99a:	sub    rsp,0x50
   14001e99e:	lea    rbp,[rsp+0x40]
   14001e9a3:	mov    QWORD PTR [rbp+0x40],rbx
   14001e9a7:	mov    QWORD PTR [rbp+0x48],rsi
   14001e9ab:	mov    QWORD PTR [rbp+0x50],rdi
   14001e9af:	mov    rax,QWORD PTR [rip+0x1865a]        # 0x140037010
   14001e9b6:	xor    rax,rbp
   14001e9b9:	mov    QWORD PTR [rbp+0x8],rax
   14001e9bd:	mov    ebx,DWORD PTR [rbp+0x60]
   14001e9c0:	xor    edi,edi
   14001e9c2:	mov    r12,r9
   14001e9c5:	mov    r13d,r8d
   14001e9c8:	mov    QWORD PTR [rbp+0x0],rdx
   14001e9cc:	test   ebx,ebx
   14001e9ce:	jle    0x14001e9fa
   14001e9d0:	mov    r10d,ebx
   14001e9d3:	mov    rax,r9
   14001e9d6:	dec    r10d
   14001e9d9:	cmp    BYTE PTR [rax],dil
   14001e9dc:	je     0x14001e9ea
   14001e9de:	inc    rax
   14001e9e1:	test   r10d,r10d
   14001e9e4:	jne    0x14001e9d6
   14001e9e6:	or     r10d,0xffffffff
   14001e9ea:	mov    eax,ebx
   14001e9ec:	sub    eax,r10d
   14001e9ef:	dec    eax
   14001e9f1:	cmp    eax,ebx
   14001e9f3:	lea    ebx,[rax+0x1]
   14001e9f6:	jl     0x14001e9fa
   14001e9f8:	mov    ebx,eax
   14001e9fa:	mov    r14d,DWORD PTR [rbp+0x78]
   14001e9fe:	mov    esi,edi
   14001ea00:	test   r14d,r14d
   14001ea03:	jne    0x14001ea0c
   14001ea05:	mov    rax,QWORD PTR [rcx]
   14001ea08:	mov    r14d,DWORD PTR [rax+0x4]
   14001ea0c:	neg    DWORD PTR [rbp+0x80]
   14001ea12:	mov    r9d,ebx
   14001ea15:	mov    r8,r12
   14001ea18:	sbb    edx,edx
   14001ea1a:	mov    ecx,r14d
   14001ea1d:	mov    DWORD PTR [rsp+0x28],edi
   14001ea21:	and    edx,0x8
   14001ea24:	mov    QWORD PTR [rsp+0x20],rdi
   14001ea29:	inc    edx
   14001ea2b:	call   QWORD PTR [rip+0x87a7]        # 0x1400271d8
   14001ea31:	movsxd r15,eax
   14001ea34:	test   eax,eax
   14001ea36:	jne    0x14001ea3f
   14001ea38:	xor    eax,eax
   14001ea3a:	jmp    0x14001ec56
   14001ea3f:	movabs r9,0xffffffffffffff0
   14001ea49:	test   eax,eax
   14001ea4b:	jle    0x14001eabb
   14001ea4d:	xor    edx,edx
   14001ea4f:	lea    rax,[rdx-0x20]
   14001ea53:	div    r15
   14001ea56:	cmp    rax,0x2
   14001ea5a:	jb     0x14001eabb
   14001ea5c:	lea    rcx,[r15+r15*1]
   14001ea60:	lea    rax,[rcx+0x10]
   14001ea64:	cmp    rax,rcx
   14001ea67:	jbe    0x14001eabb
   14001ea69:	lea    rcx,[r15*2+0x10]
   14001ea71:	cmp    rcx,0x400
   14001ea78:	ja     0x14001eaa4
   14001ea7a:	lea    rax,[rcx+0xf]
   14001ea7e:	cmp    rax,rcx
   14001ea81:	ja     0x14001ea86
   14001ea83:	mov    rax,r9
   14001ea86:	and    rax,0xfffffffffffffff0
   14001ea8a:	call   0x14001ab40
   14001ea8f:	sub    rsp,rax
   14001ea92:	lea    rdi,[rsp+0x40]
   14001ea97:	test   rdi,rdi
   14001ea9a:	je     0x14001ea38
   14001ea9c:	mov    DWORD PTR [rdi],0xcccc
   14001eaa2:	jmp    0x14001eab7
   14001eaa4:	call   0x14001396c
   14001eaa9:	mov    rdi,rax
   14001eaac:	test   rax,rax
   14001eaaf:	je     0x14001eabb
   14001eab1:	mov    DWORD PTR [rax],0xdddd
   14001eab7:	add    rdi,0x10
   14001eabb:	test   rdi,rdi
   14001eabe:	je     0x14001ea38
   14001eac4:	mov    r9d,ebx
   14001eac7:	mov    r8,r12
   14001eaca:	mov    edx,0x1
   14001eacf:	mov    ecx,r14d
   14001ead2:	mov    DWORD PTR [rsp+0x28],r15d
   14001ead7:	mov    QWORD PTR [rsp+0x20],rdi
   14001eadc:	call   QWORD PTR [rip+0x86f6]        # 0x1400271d8
   14001eae2:	test   eax,eax
   14001eae4:	je     0x14001ec43
   14001eaea:	mov    r12,QWORD PTR [rbp+0x0]
   14001eaee:	and    DWORD PTR [rsp+0x28],esi
   14001eaf2:	and    QWORD PTR [rsp+0x20],rsi
   14001eaf7:	mov    rcx,r12
   14001eafa:	mov    r9d,r15d
   14001eafd:	mov    r8,rdi
   14001eb00:	mov    edx,r13d
   14001eb03:	call   0x14001d664
   14001eb08:	movsxd rsi,eax
   14001eb0b:	test   eax,eax
   14001eb0d:	je     0x14001ec43
   14001eb13:	mov    r9d,0x400
   14001eb19:	test   r9d,r13d
   14001eb1c:	je     0x14001eb54
   14001eb1e:	mov    ecx,DWORD PTR [rbp+0x70]
   14001eb21:	test   ecx,ecx
   14001eb23:	je     0x14001ec43
   14001eb29:	cmp    esi,ecx
   14001eb2b:	jg     0x14001ec43
   14001eb31:	mov    rax,QWORD PTR [rbp+0x68]
   14001eb35:	mov    DWORD PTR [rsp+0x28],ecx
   14001eb39:	mov    r9d,r15d
   14001eb3c:	mov    r8,rdi
   14001eb3f:	mov    edx,r13d
   14001eb42:	mov    rcx,r12
   14001eb45:	mov    QWORD PTR [rsp+0x20],rax
   14001eb4a:	call   0x14001d664
   14001eb4f:	jmp    0x14001ec43
   14001eb54:	test   eax,eax
   14001eb56:	jle    0x14001ebcf
   14001eb58:	xor    edx,edx
   14001eb5a:	lea    rax,[rdx-0x20]
   14001eb5e:	div    rsi
   14001eb61:	cmp    rax,0x2
   14001eb65:	jb     0x14001ebcf
   14001eb67:	lea    rcx,[rsi+rsi*1]
   14001eb6b:	lea    rax,[rcx+0x10]
   14001eb6f:	cmp    rax,rcx
   14001eb72:	jbe    0x14001ebcf
   14001eb74:	lea    rcx,[rsi*2+0x10]
   14001eb7c:	cmp    rcx,r9
   14001eb7f:	ja     0x14001ebb6
   14001eb81:	lea    rax,[rcx+0xf]
   14001eb85:	cmp    rax,rcx
   14001eb88:	ja     0x14001eb94
   14001eb8a:	movabs rax,0xffffffffffffff0
   14001eb94:	and    rax,0xfffffffffffffff0
   14001eb98:	call   0x14001ab40
   14001eb9d:	sub    rsp,rax
   14001eba0:	lea    rbx,[rsp+0x40]
   14001eba5:	test   rbx,rbx
   14001eba8:	je     0x14001ec43
   14001ebae:	mov    DWORD PTR [rbx],0xcccc
   14001ebb4:	jmp    0x14001ebc9
   14001ebb6:	call   0x14001396c
   14001ebbb:	mov    rbx,rax
   14001ebbe:	test   rax,rax
   14001ebc1:	je     0x14001ebd1
   14001ebc3:	mov    DWORD PTR [rax],0xdddd
   14001ebc9:	add    rbx,0x10
   14001ebcd:	jmp    0x14001ebd1
   14001ebcf:	xor    ebx,ebx
   14001ebd1:	test   rbx,rbx
   14001ebd4:	je     0x14001ec43
   14001ebd6:	mov    r9d,r15d
   14001ebd9:	mov    r8,rdi
   14001ebdc:	mov    edx,r13d
   14001ebdf:	mov    rcx,r12
   14001ebe2:	mov    DWORD PTR [rsp+0x28],esi
   14001ebe6:	mov    QWORD PTR [rsp+0x20],rbx
   14001ebeb:	call   0x14001d664
   14001ebf0:	xor    ecx,ecx
   14001ebf2:	test   eax,eax
   14001ebf4:	je     0x14001ec32
   14001ebf6:	mov    eax,DWORD PTR [rbp+0x70]
   14001ebf9:	xor    edx,edx
   14001ebfb:	mov    QWORD PTR [rsp+0x38],rcx
   14001ec00:	mov    r9d,esi
   14001ec03:	mov    r8,rbx
   14001ec06:	mov    QWORD PTR [rsp+0x30],rcx
   14001ec0b:	test   eax,eax
   14001ec0d:	jne    0x14001ec1a
   14001ec0f:	mov    DWORD PTR [rsp+0x28],ecx
   14001ec13:	mov    QWORD PTR [rsp+0x20],rcx
   14001ec18:	jmp    0x14001ec27
   14001ec1a:	mov    DWORD PTR [rsp+0x28],eax
   14001ec1e:	mov    rax,QWORD PTR [rbp+0x68]
   14001ec22:	mov    QWORD PTR [rsp+0x20],rax
   14001ec27:	mov    ecx,r14d
   14001ec2a:	call   QWORD PTR [rip+0x8500]        # 0x140027130
   14001ec30:	mov    esi,eax
   14001ec32:	lea    rcx,[rbx-0x10]
   14001ec36:	cmp    DWORD PTR [rcx],0xdddd
   14001ec3c:	jne    0x14001ec43
   14001ec3e:	call   0x14001392c
   14001ec43:	lea    rcx,[rdi-0x10]
   14001ec47:	cmp    DWORD PTR [rcx],0xdddd
   14001ec4d:	jne    0x14001ec54
   14001ec4f:	call   0x14001392c
   14001ec54:	mov    eax,esi
   14001ec56:	mov    rcx,QWORD PTR [rbp+0x8]
   14001ec5a:	xor    rcx,rbp
   14001ec5d:	call   0x1400130a0
   14001ec62:	mov    rbx,QWORD PTR [rbp+0x40]
   14001ec66:	mov    rsi,QWORD PTR [rbp+0x48]
   14001ec6a:	mov    rdi,QWORD PTR [rbp+0x50]
   14001ec6e:	lea    rsp,[rbp+0x10]
   14001ec72:	pop    r15
   14001ec74:	pop    r14
   14001ec76:	pop    r13
   14001ec78:	pop    r12
   14001ec7a:	pop    rbp
   14001ec7b:	ret    
   14001ec7c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ec81:	mov    QWORD PTR [rsp+0x10],rsi
   14001ec86:	push   rdi
   14001ec87:	sub    rsp,0x70
   14001ec8b:	mov    rsi,rdx
   14001ec8e:	mov    rdx,rcx
   14001ec91:	lea    rcx,[rsp+0x50]
   14001ec96:	mov    rbx,r9
   14001ec99:	mov    edi,r8d
   14001ec9c:	call   0x140014b34
   14001eca1:	mov    eax,DWORD PTR [rsp+0xc0]
   14001eca8:	lea    rcx,[rsp+0x50]
   14001ecad:	mov    r9,rbx
   14001ecb0:	mov    DWORD PTR [rsp+0x40],eax
   14001ecb4:	mov    eax,DWORD PTR [rsp+0xb8]
   14001ecbb:	mov    r8d,edi
   14001ecbe:	mov    DWORD PTR [rsp+0x38],eax
   14001ecc2:	mov    eax,DWORD PTR [rsp+0xb0]
   14001ecc9:	mov    rdx,rsi
   14001eccc:	mov    DWORD PTR [rsp+0x30],eax
   14001ecd0:	mov    rax,QWORD PTR [rsp+0xa8]
   14001ecd8:	mov    QWORD PTR [rsp+0x28],rax
   14001ecdd:	mov    eax,DWORD PTR [rsp+0xa0]
   14001ece4:	mov    DWORD PTR [rsp+0x20],eax
   14001ece8:	call   0x14001e990
   14001eced:	cmp    BYTE PTR [rsp+0x68],0x0
   14001ecf2:	je     0x14001ed00
   14001ecf4:	mov    rcx,QWORD PTR [rsp+0x60]
   14001ecf9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001ed00:	lea    r11,[rsp+0x70]
   14001ed05:	mov    rbx,QWORD PTR [r11+0x10]
   14001ed09:	mov    rsi,QWORD PTR [r11+0x18]
   14001ed0d:	mov    rsp,r11
   14001ed10:	pop    rdi
   14001ed11:	ret    
   14001ed12:	int3   
   14001ed13:	int3   
   14001ed14:	rex push rbp
   14001ed16:	push   r12
   14001ed18:	push   r13
   14001ed1a:	push   r14
   14001ed1c:	push   r15
   14001ed1e:	sub    rsp,0x40
   14001ed22:	lea    rbp,[rsp+0x30]
   14001ed27:	mov    QWORD PTR [rbp+0x40],rbx
   14001ed2b:	mov    QWORD PTR [rbp+0x48],rsi
   14001ed2f:	mov    QWORD PTR [rbp+0x50],rdi
   14001ed33:	mov    rax,QWORD PTR [rip+0x182d6]        # 0x140037010
   14001ed3a:	xor    rax,rbp
   14001ed3d:	mov    QWORD PTR [rbp+0x0],rax
   14001ed41:	mov    r14d,DWORD PTR [rbp+0x68]
   14001ed45:	xor    edi,edi
   14001ed47:	mov    r15d,r9d
   14001ed4a:	mov    r12,r8
   14001ed4d:	mov    r13d,edx
   14001ed50:	test   r14d,r14d
   14001ed53:	jne    0x14001ed5c
   14001ed55:	mov    rax,QWORD PTR [rcx]
   14001ed58:	mov    r14d,DWORD PTR [rax+0x4]
   14001ed5c:	neg    DWORD PTR [rbp+0x70]
   14001ed5f:	mov    ecx,r14d
   14001ed62:	mov    DWORD PTR [rsp+0x28],edi
   14001ed66:	sbb    edx,edx
   14001ed68:	mov    QWORD PTR [rsp+0x20],rdi
   14001ed6d:	and    edx,0x8
   14001ed70:	inc    edx
   14001ed72:	call   QWORD PTR [rip+0x8460]        # 0x1400271d8
   14001ed78:	movsxd rsi,eax
   14001ed7b:	test   eax,eax
   14001ed7d:	jne    0x14001ed86
   14001ed7f:	xor    eax,eax
   14001ed81:	jmp    0x14001ee64
   14001ed86:	jle    0x14001edff
   14001ed88:	movabs rax,0x7ffffffffffffff0
   14001ed92:	cmp    rsi,rax
   14001ed95:	ja     0x14001edff
   14001ed97:	lea    rcx,[rsi+rsi*1]
   14001ed9b:	lea    rax,[rcx+0x10]
   14001ed9f:	cmp    rax,rcx
   14001eda2:	jbe    0x14001edff
   14001eda4:	lea    rcx,[rsi*2+0x10]
   14001edac:	cmp    rcx,0x400
   14001edb3:	ja     0x14001ede6
   14001edb5:	lea    rax,[rcx+0xf]
   14001edb9:	cmp    rax,rcx
   14001edbc:	ja     0x14001edc8
   14001edbe:	movabs rax,0xffffffffffffff0
   14001edc8:	and    rax,0xfffffffffffffff0
   14001edcc:	call   0x14001ab40
   14001edd1:	sub    rsp,rax
   14001edd4:	lea    rbx,[rsp+0x30]
   14001edd9:	test   rbx,rbx
   14001eddc:	je     0x14001ed7f
   14001edde:	mov    DWORD PTR [rbx],0xcccc
   14001ede4:	jmp    0x14001edf9
   14001ede6:	call   0x14001396c
   14001edeb:	mov    rbx,rax
   14001edee:	test   rax,rax
   14001edf1:	je     0x14001ee02
   14001edf3:	mov    DWORD PTR [rax],0xdddd
   14001edf9:	add    rbx,0x10
   14001edfd:	jmp    0x14001ee02
   14001edff:	mov    rbx,rdi
   14001ee02:	test   rbx,rbx
   14001ee05:	je     0x14001ed7f
   14001ee0b:	mov    r8,rsi
   14001ee0e:	xor    edx,edx
   14001ee10:	mov    rcx,rbx
   14001ee13:	add    r8,r8
   14001ee16:	call   0x140014d80
   14001ee1b:	mov    r9d,r15d
   14001ee1e:	mov    r8,r12
   14001ee21:	mov    edx,0x1
   14001ee26:	mov    ecx,r14d
   14001ee29:	mov    DWORD PTR [rsp+0x28],esi
   14001ee2d:	mov    QWORD PTR [rsp+0x20],rbx
   14001ee32:	call   QWORD PTR [rip+0x83a0]        # 0x1400271d8
   14001ee38:	test   eax,eax
   14001ee3a:	je     0x14001ee51
   14001ee3c:	mov    r9,QWORD PTR [rbp+0x60]
   14001ee40:	mov    r8d,eax
   14001ee43:	mov    rdx,rbx
   14001ee46:	mov    ecx,r13d
   14001ee49:	call   QWORD PTR [rip+0x84d9]        # 0x140027328
   14001ee4f:	mov    edi,eax
   14001ee51:	lea    rcx,[rbx-0x10]
   14001ee55:	cmp    DWORD PTR [rcx],0xdddd
   14001ee5b:	jne    0x14001ee62
   14001ee5d:	call   0x14001392c
   14001ee62:	mov    eax,edi
   14001ee64:	mov    rcx,QWORD PTR [rbp+0x0]
   14001ee68:	xor    rcx,rbp
   14001ee6b:	call   0x1400130a0
   14001ee70:	mov    rbx,QWORD PTR [rbp+0x40]
   14001ee74:	mov    rsi,QWORD PTR [rbp+0x48]
   14001ee78:	mov    rdi,QWORD PTR [rbp+0x50]
   14001ee7c:	lea    rsp,[rbp+0x10]
   14001ee80:	pop    r15
   14001ee82:	pop    r14
   14001ee84:	pop    r13
   14001ee86:	pop    r12
   14001ee88:	pop    rbp
   14001ee89:	ret    
   14001ee8a:	int3   
   14001ee8b:	int3   
   14001ee8c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ee91:	mov    QWORD PTR [rsp+0x10],rsi
   14001ee96:	push   rdi
   14001ee97:	sub    rsp,0x60
   14001ee9b:	mov    esi,edx
   14001ee9d:	mov    rdx,rcx
   14001eea0:	lea    rcx,[rsp+0x40]
   14001eea5:	mov    ebx,r9d
   14001eea8:	mov    rdi,r8
   14001eeab:	call   0x140014b34
   14001eeb0:	mov    eax,DWORD PTR [rsp+0xa0]
   14001eeb7:	lea    rcx,[rsp+0x40]
   14001eebc:	mov    r9d,ebx
   14001eebf:	mov    DWORD PTR [rsp+0x30],eax
   14001eec3:	mov    eax,DWORD PTR [rsp+0x98]
   14001eeca:	mov    r8,rdi
   14001eecd:	mov    DWORD PTR [rsp+0x28],eax
   14001eed1:	mov    rax,QWORD PTR [rsp+0x90]
   14001eed9:	mov    edx,esi
   14001eedb:	mov    QWORD PTR [rsp+0x20],rax
   14001eee0:	call   0x14001ed14
   14001eee5:	cmp    BYTE PTR [rsp+0x58],0x0
   14001eeea:	je     0x14001eef8
   14001eeec:	mov    rcx,QWORD PTR [rsp+0x50]
   14001eef1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001eef8:	mov    rbx,QWORD PTR [rsp+0x70]
   14001eefd:	mov    rsi,QWORD PTR [rsp+0x78]
   14001ef02:	add    rsp,0x60
   14001ef06:	pop    rdi
   14001ef07:	ret    
   14001ef08:	sub    rsp,0x28
   14001ef0c:	test   rcx,rcx
   14001ef0f:	jne    0x14001ef26
   14001ef11:	call   0x1400161e8
   14001ef16:	mov    DWORD PTR [rax],0x16
   14001ef1c:	call   0x140013f54
   14001ef21:	or     eax,0xffffffff
   14001ef24:	jmp    0x14001ef29
   14001ef26:	mov    eax,DWORD PTR [rcx+0x1c]
   14001ef29:	add    rsp,0x28
   14001ef2d:	ret    
   14001ef2e:	int3   
   14001ef2f:	int3   
   14001ef30:	sub    rsp,0x28
   14001ef34:	cmp    ecx,0xfffffffe
   14001ef37:	jne    0x14001ef46
   14001ef39:	call   0x1400161e8
   14001ef3e:	mov    DWORD PTR [rax],0x9
   14001ef44:	jmp    0x14001ef88
   14001ef46:	test   ecx,ecx
   14001ef48:	js     0x14001ef78
   14001ef4a:	cmp    ecx,DWORD PTR [rip+0x1c4d0]        # 0x14003b420
   14001ef50:	jae    0x14001ef78
   14001ef52:	movsxd rcx,ecx
   14001ef55:	lea    rdx,[rip+0x1ab74]        # 0x140039ad0
   14001ef5c:	mov    rax,rcx
   14001ef5f:	and    ecx,0x1f
   14001ef62:	sar    rax,0x5
   14001ef66:	imul   rcx,rcx,0x58
   14001ef6a:	mov    rax,QWORD PTR [rdx+rax*8]
   14001ef6e:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14001ef73:	and    eax,0x40
   14001ef76:	jmp    0x14001ef8a
   14001ef78:	call   0x1400161e8
   14001ef7d:	mov    DWORD PTR [rax],0x9
   14001ef83:	call   0x140013f54
   14001ef88:	xor    eax,eax
   14001ef8a:	add    rsp,0x28
   14001ef8e:	ret    
   14001ef8f:	int3   
   14001ef90:	mov    QWORD PTR [rsp+0x10],rbx
   14001ef95:	mov    DWORD PTR [rsp+0x8],ecx
   14001ef99:	push   rsi
   14001ef9a:	push   rdi
   14001ef9b:	push   r12
   14001ef9d:	push   r14
   14001ef9f:	push   r15
   14001efa1:	sub    rsp,0x20
   14001efa5:	mov    esi,r8d
   14001efa8:	mov    r14,rdx
   14001efab:	movsxd rbx,ecx
   14001efae:	cmp    ebx,0xfffffffe
   14001efb1:	jne    0x14001efcb
   14001efb3:	call   0x140016178
   14001efb8:	and    DWORD PTR [rax],0x0
   14001efbb:	call   0x1400161e8
   14001efc0:	mov    DWORD PTR [rax],0x9
   14001efc6:	jmp    0x14001f05c
   14001efcb:	test   ecx,ecx
   14001efcd:	js     0x14001f044
   14001efcf:	cmp    ebx,DWORD PTR [rip+0x1c44b]        # 0x14003b420
   14001efd5:	jae    0x14001f044
   14001efd7:	mov    rax,rbx
   14001efda:	mov    rdi,rbx
   14001efdd:	sar    rdi,0x5
   14001efe1:	lea    r12,[rip+0x1aae8]        # 0x140039ad0
   14001efe8:	and    eax,0x1f
   14001efeb:	imul   r15,rax,0x58
   14001efef:	mov    rax,QWORD PTR [r12+rdi*8]
   14001eff3:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   14001eff9:	and    ecx,0x1
   14001effc:	je     0x14001f044
   14001effe:	mov    ecx,ebx
   14001f000:	call   0x140022a54
   14001f005:	nop
   14001f006:	mov    rax,QWORD PTR [r12+rdi*8]
   14001f00a:	test   BYTE PTR [rax+r15*1+0x8],0x1
   14001f010:	je     0x14001f023
   14001f012:	mov    r8d,esi
   14001f015:	mov    rdx,r14
   14001f018:	mov    ecx,ebx
   14001f01a:	call   0x14001f074
   14001f01f:	mov    edi,eax
   14001f021:	jmp    0x14001f039
   14001f023:	call   0x1400161e8
   14001f028:	mov    DWORD PTR [rax],0x9
   14001f02e:	call   0x140016178
   14001f033:	and    DWORD PTR [rax],0x0
   14001f036:	or     edi,0xffffffff
   14001f039:	mov    ecx,ebx
   14001f03b:	call   0x140022c0c
   14001f040:	mov    eax,edi
   14001f042:	jmp    0x14001f05f
   14001f044:	call   0x140016178
   14001f049:	and    DWORD PTR [rax],0x0
   14001f04c:	call   0x1400161e8
   14001f051:	mov    DWORD PTR [rax],0x9
   14001f057:	call   0x140013f54
   14001f05c:	or     eax,0xffffffff
   14001f05f:	mov    rbx,QWORD PTR [rsp+0x58]
   14001f064:	add    rsp,0x20
   14001f068:	pop    r15
   14001f06a:	pop    r14
   14001f06c:	pop    r12
   14001f06e:	pop    rdi
   14001f06f:	pop    rsi
   14001f070:	ret    
   14001f071:	int3   
   14001f072:	int3   
   14001f073:	int3   
   14001f074:	mov    QWORD PTR [rsp+0x20],rbx
   14001f079:	push   rbp
   14001f07a:	push   rsi
   14001f07b:	push   rdi
   14001f07c:	push   r12
   14001f07e:	push   r13
   14001f080:	push   r14
   14001f082:	push   r15
   14001f084:	lea    rbp,[rsp-0x1a40]
   14001f08c:	mov    eax,0x1b40
   14001f091:	call   0x14001ab40
   14001f096:	sub    rsp,rax
   14001f099:	mov    rax,QWORD PTR [rip+0x17f70]        # 0x140037010
   14001f0a0:	xor    rax,rsp
   14001f0a3:	mov    QWORD PTR [rbp+0x1a30],rax
   14001f0aa:	xor    r12d,r12d
   14001f0ad:	mov    r15d,r8d
   14001f0b0:	mov    r14,rdx
   14001f0b3:	movsxd rdi,ecx
   14001f0b6:	mov    DWORD PTR [rsp+0x40],r12d
   14001f0bb:	mov    ebx,r12d
   14001f0be:	mov    esi,r12d
   14001f0c1:	test   r8d,r8d
   14001f0c4:	jne    0x14001f0cd
   14001f0c6:	xor    eax,eax
   14001f0c8:	jmp    0x14001f83b
   14001f0cd:	test   rdx,rdx
   14001f0d0:	jne    0x14001f0f2
   14001f0d2:	call   0x140016178
   14001f0d7:	mov    DWORD PTR [rax],r12d
   14001f0da:	call   0x1400161e8
   14001f0df:	mov    DWORD PTR [rax],0x16
   14001f0e5:	call   0x140013f54
   14001f0ea:	or     eax,0xffffffff
   14001f0ed:	jmp    0x14001f83b
   14001f0f2:	mov    rax,rdi
   14001f0f5:	mov    rcx,rdi
   14001f0f8:	lea    rdx,[rip+0x1a9d1]        # 0x140039ad0
   14001f0ff:	sar    rcx,0x5
   14001f103:	and    eax,0x1f
   14001f106:	mov    QWORD PTR [rsp+0x48],rcx
   14001f10b:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14001f10f:	imul   r13,rax,0x58
   14001f113:	mov    r12b,BYTE PTR [r13+rcx*1+0x38]
   14001f118:	mov    QWORD PTR [rsp+0x58],r13
   14001f11d:	add    r12b,r12b
   14001f120:	sar    r12b,1
   14001f123:	lea    eax,[r12-0x1]
   14001f128:	cmp    al,0x1
   14001f12a:	ja     0x14001f140
   14001f12c:	mov    eax,r15d
   14001f12f:	not    eax
   14001f131:	test   al,0x1
   14001f133:	jne    0x14001f140
   14001f135:	call   0x140016178
   14001f13a:	xor    ecx,ecx
   14001f13c:	mov    DWORD PTR [rax],ecx
   14001f13e:	jmp    0x14001f0da
   14001f140:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   14001f146:	je     0x14001f155
   14001f148:	xor    edx,edx
   14001f14a:	mov    ecx,edi
   14001f14c:	lea    r8d,[rdx+0x2]
   14001f150:	call   0x14001f950
   14001f155:	mov    ecx,edi
   14001f157:	call   0x14001ef30
   14001f15c:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f161:	test   eax,eax
   14001f163:	je     0x14001f4a9
   14001f169:	lea    rax,[rip+0x1a960]        # 0x140039ad0
   14001f170:	mov    rax,QWORD PTR [rax+rdi*8]
   14001f174:	test   BYTE PTR [r13+rax*1+0x8],0x80
   14001f17a:	je     0x14001f4a9
   14001f180:	call   0x140017170
   14001f185:	lea    rdx,[rsp+0x64]
   14001f18a:	mov    rcx,QWORD PTR [rax+0xc0]
   14001f191:	xor    eax,eax
   14001f193:	cmp    QWORD PTR [rcx+0x138],rax
   14001f19a:	mov    edi,eax
   14001f19c:	mov    rax,QWORD PTR [rsp+0x48]
   14001f1a1:	lea    rcx,[rip+0x1a928]        # 0x140039ad0
   14001f1a8:	sete   dil
   14001f1ac:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001f1b0:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001f1b5:	call   QWORD PTR [rip+0x8015]        # 0x1400271d0
   14001f1bb:	xor    ecx,ecx
   14001f1bd:	test   eax,eax
   14001f1bf:	je     0x14001f4a4
   14001f1c5:	xor    eax,eax
   14001f1c7:	test   edi,edi
   14001f1c9:	je     0x14001f1d4
   14001f1cb:	test   r12b,r12b
   14001f1ce:	je     0x14001f49d
   14001f1d4:	call   QWORD PTR [rip+0x8156]        # 0x140027330
   14001f1da:	mov    rdi,r14
   14001f1dd:	mov    DWORD PTR [rsp+0x68],eax
   14001f1e1:	xor    eax,eax
   14001f1e3:	movzx  ecx,ax
   14001f1e6:	mov    WORD PTR [rsp+0x44],ax
   14001f1eb:	mov    DWORD PTR [rsp+0x60],eax
   14001f1ef:	test   r15d,r15d
   14001f1f2:	je     0x14001f7fe
   14001f1f8:	mov    r13d,eax
   14001f1fb:	test   r12b,r12b
   14001f1fe:	jne    0x14001f3a7
   14001f204:	mov    cl,BYTE PTR [rdi]
   14001f206:	mov    r13,QWORD PTR [rsp+0x58]
   14001f20b:	lea    rdx,[rip+0x1a8be]        # 0x140039ad0
   14001f212:	cmp    cl,0xa
   14001f215:	sete   al
   14001f218:	xor    r8d,r8d
   14001f21b:	mov    DWORD PTR [rsp+0x64],eax
   14001f21f:	mov    rax,QWORD PTR [rsp+0x48]
   14001f224:	mov    rdx,QWORD PTR [rdx+rax*8]
   14001f228:	cmp    DWORD PTR [r13+rdx*1+0x50],r8d
   14001f22d:	je     0x14001f24e
   14001f22f:	mov    al,BYTE PTR [r13+rdx*1+0x4c]
   14001f234:	mov    BYTE PTR [rsp+0x6d],cl
   14001f238:	mov    BYTE PTR [rsp+0x6c],al
   14001f23c:	mov    DWORD PTR [r13+rdx*1+0x50],r8d
   14001f241:	mov    r8d,0x2
   14001f247:	lea    rdx,[rsp+0x6c]
   14001f24c:	jmp    0x14001f297
   14001f24e:	movsx  ecx,cl
   14001f251:	call   0x14001fa7c
   14001f256:	test   eax,eax
   14001f258:	je     0x14001f28e
   14001f25a:	mov    rax,r15
   14001f25d:	sub    rax,rdi
   14001f260:	add    rax,r14
   14001f263:	cmp    rax,0x1
   14001f267:	jle    0x14001f420
   14001f26d:	lea    rcx,[rsp+0x44]
   14001f272:	mov    r8d,0x2
   14001f278:	mov    rdx,rdi
   14001f27b:	call   0x14001fe24
   14001f280:	cmp    eax,0xffffffff
   14001f283:	je     0x14001f462
   14001f289:	inc    rdi
   14001f28c:	jmp    0x14001f2aa
   14001f28e:	mov    r8d,0x1
   14001f294:	mov    rdx,rdi
   14001f297:	lea    rcx,[rsp+0x44]
   14001f29c:	call   0x14001fe24
   14001f2a1:	cmp    eax,0xffffffff
   14001f2a4:	je     0x14001f462
   14001f2aa:	mov    ecx,DWORD PTR [rsp+0x68]
   14001f2ae:	xor    eax,eax
   14001f2b0:	lea    r8,[rsp+0x44]
   14001f2b5:	mov    QWORD PTR [rsp+0x38],rax
   14001f2ba:	mov    QWORD PTR [rsp+0x30],rax
   14001f2bf:	lea    rax,[rsp+0x6c]
   14001f2c4:	mov    r9d,0x1
   14001f2ca:	xor    edx,edx
   14001f2cc:	mov    DWORD PTR [rsp+0x28],0x5
   14001f2d4:	mov    QWORD PTR [rsp+0x20],rax
   14001f2d9:	inc    rdi
   14001f2dc:	call   QWORD PTR [rip+0x7e4e]        # 0x140027130
   14001f2e2:	mov    r13d,eax
   14001f2e5:	test   eax,eax
   14001f2e7:	je     0x14001f45d
   14001f2ed:	mov    rax,QWORD PTR [rsp+0x48]
   14001f2f2:	lea    rcx,[rip+0x1a7d7]        # 0x140039ad0
   14001f2f9:	lea    r9,[rsp+0x60]
   14001f2fe:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001f302:	xor    eax,eax
   14001f304:	lea    rdx,[rsp+0x6c]
   14001f309:	mov    QWORD PTR [rsp+0x20],rax
   14001f30e:	mov    rax,QWORD PTR [rsp+0x58]
   14001f313:	mov    r8d,r13d
   14001f316:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001f31a:	call   QWORD PTR [rip+0x7e48]        # 0x140027168
   14001f320:	test   eax,eax
   14001f322:	je     0x14001f455
   14001f328:	mov    eax,DWORD PTR [rsp+0x40]
   14001f32c:	mov    ebx,edi
   14001f32e:	sub    ebx,r14d
   14001f331:	add    ebx,eax
   14001f333:	cmp    DWORD PTR [rsp+0x60],r13d
   14001f338:	jl     0x14001f7e3
   14001f33e:	xor    r13d,r13d
   14001f341:	cmp    DWORD PTR [rsp+0x64],r13d
   14001f346:	je     0x14001f3a0
   14001f348:	mov    rax,QWORD PTR [rsp+0x48]
   14001f34d:	lea    r8d,[r13+0x1]
   14001f351:	mov    BYTE PTR [rsp+0x6c],0xd
   14001f356:	lea    rcx,[rip+0x1a773]        # 0x140039ad0
   14001f35d:	mov    QWORD PTR [rsp+0x20],r13
   14001f362:	mov    r13,QWORD PTR [rsp+0x58]
   14001f367:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001f36b:	lea    r9,[rsp+0x60]
   14001f370:	lea    rdx,[rsp+0x6c]
   14001f375:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001f37a:	call   QWORD PTR [rip+0x7de8]        # 0x140027168
   14001f380:	test   eax,eax
   14001f382:	je     0x14001f44b
   14001f388:	cmp    DWORD PTR [rsp+0x60],0x1
   14001f38d:	jl     0x14001f462
   14001f393:	inc    DWORD PTR [rsp+0x40]
   14001f397:	movzx  ecx,WORD PTR [rsp+0x44]
   14001f39c:	inc    ebx
   14001f39e:	jmp    0x14001f40f
   14001f3a0:	movzx  ecx,WORD PTR [rsp+0x44]
   14001f3a5:	jmp    0x14001f40a
   14001f3a7:	lea    eax,[r12-0x1]
   14001f3ac:	cmp    al,0x1
   14001f3ae:	ja     0x14001f3c9
   14001f3b0:	movzx  ecx,WORD PTR [rdi]
   14001f3b3:	xor    eax,eax
   14001f3b5:	cmp    cx,0xa
   14001f3b9:	mov    r13d,eax
   14001f3bc:	mov    WORD PTR [rsp+0x44],cx
   14001f3c1:	sete   r13b
   14001f3c5:	add    rdi,0x2
   14001f3c9:	lea    eax,[r12-0x1]
   14001f3ce:	cmp    al,0x1
   14001f3d0:	ja     0x14001f40a
   14001f3d2:	call   0x140022c38
   14001f3d7:	movzx  ecx,WORD PTR [rsp+0x44]
   14001f3dc:	cmp    ax,cx
   14001f3df:	jne    0x14001f455
   14001f3e1:	add    ebx,0x2
   14001f3e4:	test   r13d,r13d
   14001f3e7:	je     0x14001f40a
   14001f3e9:	mov    eax,0xd
   14001f3ee:	mov    ecx,eax
   14001f3f0:	mov    WORD PTR [rsp+0x44],ax
   14001f3f5:	call   0x140022c38
   14001f3fa:	movzx  ecx,WORD PTR [rsp+0x44]
   14001f3ff:	cmp    ax,cx
   14001f402:	jne    0x14001f455
   14001f404:	inc    ebx
   14001f406:	inc    DWORD PTR [rsp+0x40]
   14001f40a:	mov    r13,QWORD PTR [rsp+0x58]
   14001f40f:	mov    eax,edi
   14001f411:	sub    eax,r14d
   14001f414:	cmp    eax,r15d
   14001f417:	jae    0x14001f462
   14001f419:	xor    eax,eax
   14001f41b:	jmp    0x14001f1f8
   14001f420:	mov    al,BYTE PTR [rdi]
   14001f422:	mov    r15,QWORD PTR [rsp+0x48]
   14001f427:	lea    r12,[rip+0x1a6a2]        # 0x140039ad0
   14001f42e:	mov    rcx,QWORD PTR [r12+r15*8]
   14001f432:	inc    ebx
   14001f434:	mov    rdi,r15
   14001f437:	mov    BYTE PTR [r13+rcx*1+0x4c],al
   14001f43c:	mov    rax,QWORD PTR [r12+r15*8]
   14001f440:	mov    DWORD PTR [r13+rax*1+0x50],0x1
   14001f449:	jmp    0x14001f467
   14001f44b:	call   QWORD PTR [rip+0x7c0f]        # 0x140027060
   14001f451:	mov    esi,eax
   14001f453:	jmp    0x14001f462
   14001f455:	call   QWORD PTR [rip+0x7c05]        # 0x140027060
   14001f45b:	mov    esi,eax
   14001f45d:	mov    r13,QWORD PTR [rsp+0x58]
   14001f462:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f467:	mov    eax,DWORD PTR [rsp+0x40]
   14001f46b:	test   ebx,ebx
   14001f46d:	jne    0x14001f837
   14001f473:	xor    ebx,ebx
   14001f475:	test   esi,esi
   14001f477:	je     0x14001f803
   14001f47d:	cmp    esi,0x5
   14001f480:	jne    0x14001f7f2
   14001f486:	call   0x1400161e8
   14001f48b:	mov    DWORD PTR [rax],0x9
   14001f491:	call   0x140016178
   14001f496:	mov    DWORD PTR [rax],esi
   14001f498:	jmp    0x14001f0ea
   14001f49d:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f4a2:	jmp    0x14001f4ab
   14001f4a4:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f4a9:	xor    eax,eax
   14001f4ab:	lea    r9,[rip+0x1a61e]        # 0x140039ad0
   14001f4b2:	mov    rcx,QWORD PTR [r9+rdi*8]
   14001f4b6:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   14001f4bc:	je     0x14001f7aa
   14001f4c2:	mov    esi,eax
   14001f4c4:	test   r12b,r12b
   14001f4c7:	jne    0x14001f5a5
   14001f4cd:	mov    r12,r14
   14001f4d0:	test   r15d,r15d
   14001f4d3:	je     0x14001f803
   14001f4d9:	mov    edx,0xd
   14001f4de:	jmp    0x14001f4e2
   14001f4e0:	xor    eax,eax
   14001f4e2:	mov    r13d,DWORD PTR [rsp+0x40]
   14001f4e7:	lea    rdi,[rbp+0x630]
   14001f4ee:	mov    rcx,rax
   14001f4f1:	mov    eax,r12d
   14001f4f4:	sub    eax,r14d
   14001f4f7:	cmp    eax,r15d
   14001f4fa:	jae    0x14001f523
   14001f4fc:	mov    al,BYTE PTR [r12]
   14001f500:	inc    r12
   14001f503:	cmp    al,0xa
   14001f505:	jne    0x14001f512
   14001f507:	mov    BYTE PTR [rdi],dl
   14001f509:	inc    r13d
   14001f50c:	inc    rdi
   14001f50f:	inc    rcx
   14001f512:	inc    rcx
   14001f515:	mov    BYTE PTR [rdi],al
   14001f517:	inc    rdi
   14001f51a:	cmp    rcx,0x13ff
   14001f521:	jb     0x14001f4f1
   14001f523:	lea    rax,[rbp+0x630]
   14001f52a:	mov    r8d,edi
   14001f52d:	mov    DWORD PTR [rsp+0x40],r13d
   14001f532:	mov    r13,QWORD PTR [rsp+0x58]
   14001f537:	sub    r8d,eax
   14001f53a:	mov    rax,QWORD PTR [rsp+0x48]
   14001f53f:	mov    rcx,QWORD PTR [r9+rax*8]
   14001f543:	xor    eax,eax
   14001f545:	lea    r9,[rsp+0x50]
   14001f54a:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001f54f:	lea    rdx,[rbp+0x630]
   14001f556:	mov    QWORD PTR [rsp+0x20],rax
   14001f55b:	call   QWORD PTR [rip+0x7c07]        # 0x140027168
   14001f561:	test   eax,eax
   14001f563:	je     0x14001f44b
   14001f569:	add    ebx,DWORD PTR [rsp+0x50]
   14001f56d:	lea    rax,[rbp+0x630]
   14001f574:	sub    rdi,rax
   14001f577:	movsxd rax,DWORD PTR [rsp+0x50]
   14001f57c:	cmp    rax,rdi
   14001f57f:	jl     0x14001f462
   14001f585:	mov    eax,r12d
   14001f588:	mov    edx,0xd
   14001f58d:	lea    r9,[rip+0x1a53c]        # 0x140039ad0
   14001f594:	sub    eax,r14d
   14001f597:	cmp    eax,r15d
   14001f59a:	jb     0x14001f4e0
   14001f5a0:	jmp    0x14001f462
   14001f5a5:	cmp    r12b,0x2
   14001f5a9:	mov    r12,r14
   14001f5ac:	jne    0x14001f692
   14001f5b2:	test   r15d,r15d
   14001f5b5:	je     0x14001f803
   14001f5bb:	mov    edx,0xd
   14001f5c0:	jmp    0x14001f5c4
   14001f5c2:	xor    eax,eax
   14001f5c4:	mov    r13d,DWORD PTR [rsp+0x40]
   14001f5c9:	lea    rdi,[rbp+0x630]
   14001f5d0:	mov    rcx,rax
   14001f5d3:	mov    eax,r12d
   14001f5d6:	sub    eax,r14d
   14001f5d9:	cmp    eax,r15d
   14001f5dc:	jae    0x14001f610
   14001f5de:	movzx  eax,WORD PTR [r12]
   14001f5e3:	add    r12,0x2
   14001f5e7:	cmp    ax,0xa
   14001f5eb:	jne    0x14001f5fc
   14001f5ed:	mov    WORD PTR [rdi],dx
   14001f5f0:	add    r13d,0x2
   14001f5f4:	add    rdi,0x2
   14001f5f8:	add    rcx,0x2
   14001f5fc:	add    rcx,0x2
   14001f600:	mov    WORD PTR [rdi],ax
   14001f603:	add    rdi,0x2
   14001f607:	cmp    rcx,0x13fe
   14001f60e:	jb     0x14001f5d3
   14001f610:	lea    rax,[rbp+0x630]
   14001f617:	mov    r8d,edi
   14001f61a:	mov    DWORD PTR [rsp+0x40],r13d
   14001f61f:	mov    r13,QWORD PTR [rsp+0x58]
   14001f624:	sub    r8d,eax
   14001f627:	mov    rax,QWORD PTR [rsp+0x48]
   14001f62c:	mov    rcx,QWORD PTR [r9+rax*8]
   14001f630:	xor    eax,eax
   14001f632:	lea    r9,[rsp+0x50]
   14001f637:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001f63c:	lea    rdx,[rbp+0x630]
   14001f643:	mov    QWORD PTR [rsp+0x20],rax
   14001f648:	call   QWORD PTR [rip+0x7b1a]        # 0x140027168
   14001f64e:	test   eax,eax
   14001f650:	je     0x14001f44b
   14001f656:	add    ebx,DWORD PTR [rsp+0x50]
   14001f65a:	lea    rax,[rbp+0x630]
   14001f661:	sub    rdi,rax
   14001f664:	movsxd rax,DWORD PTR [rsp+0x50]
   14001f669:	cmp    rax,rdi
   14001f66c:	jl     0x14001f462
   14001f672:	mov    eax,r12d
   14001f675:	mov    edx,0xd
   14001f67a:	lea    r9,[rip+0x1a44f]        # 0x140039ad0
   14001f681:	sub    eax,r14d
   14001f684:	cmp    eax,r15d
   14001f687:	jb     0x14001f5c2
   14001f68d:	jmp    0x14001f462
   14001f692:	test   r15d,r15d
   14001f695:	je     0x14001f803
   14001f69b:	mov    r8d,0xd
   14001f6a1:	jmp    0x14001f6a5
   14001f6a3:	xor    eax,eax
   14001f6a5:	lea    rcx,[rbp-0x80]
   14001f6a9:	mov    rdx,rax
   14001f6ac:	mov    eax,r12d
   14001f6af:	sub    eax,r14d
   14001f6b2:	cmp    eax,r15d
   14001f6b5:	jae    0x14001f6e6
   14001f6b7:	movzx  eax,WORD PTR [r12]
   14001f6bc:	add    r12,0x2
   14001f6c0:	cmp    ax,0xa
   14001f6c4:	jne    0x14001f6d2
   14001f6c6:	mov    WORD PTR [rcx],r8w
   14001f6ca:	add    rcx,0x2
   14001f6ce:	add    rdx,0x2
   14001f6d2:	add    rdx,0x2
   14001f6d6:	mov    WORD PTR [rcx],ax
   14001f6d9:	add    rcx,0x2
   14001f6dd:	cmp    rdx,0x6a8
   14001f6e4:	jb     0x14001f6ac
   14001f6e6:	lea    rax,[rbp-0x80]
   14001f6ea:	xor    edi,edi
   14001f6ec:	lea    r8,[rbp-0x80]
   14001f6f0:	sub    ecx,eax
   14001f6f2:	mov    QWORD PTR [rsp+0x38],rdi
   14001f6f7:	mov    QWORD PTR [rsp+0x30],rdi
   14001f6fc:	mov    eax,ecx
   14001f6fe:	mov    ecx,0xfde9
   14001f703:	mov    DWORD PTR [rsp+0x28],0xd55
   14001f70b:	cdq    
   14001f70c:	sub    eax,edx
   14001f70e:	xor    edx,edx
   14001f710:	sar    eax,1
   14001f712:	mov    r9d,eax
   14001f715:	lea    rax,[rbp+0x630]
   14001f71c:	mov    QWORD PTR [rsp+0x20],rax
   14001f721:	call   QWORD PTR [rip+0x7a09]        # 0x140027130
   14001f727:	mov    r13d,eax
   14001f72a:	test   eax,eax
   14001f72c:	je     0x14001f455
   14001f732:	movsxd rax,edi
   14001f735:	mov    r8d,r13d
   14001f738:	lea    rdx,[rbp+0x630]
   14001f73f:	add    rdx,rax
   14001f742:	mov    rax,QWORD PTR [rsp+0x48]
   14001f747:	lea    rcx,[rip+0x1a382]        # 0x140039ad0
   14001f74e:	mov    rcx,QWORD PTR [rcx+rax*8]
   14001f752:	xor    eax,eax
   14001f754:	lea    r9,[rsp+0x50]
   14001f759:	mov    QWORD PTR [rsp+0x20],rax
   14001f75e:	mov    rax,QWORD PTR [rsp+0x58]
   14001f763:	sub    r8d,edi
   14001f766:	mov    rcx,QWORD PTR [rax+rcx*1]
   14001f76a:	call   QWORD PTR [rip+0x79f8]        # 0x140027168
   14001f770:	test   eax,eax
   14001f772:	je     0x14001f77f
   14001f774:	add    edi,DWORD PTR [rsp+0x50]
   14001f778:	cmp    r13d,edi
   14001f77b:	jg     0x14001f732
   14001f77d:	jmp    0x14001f787
   14001f77f:	call   QWORD PTR [rip+0x78db]        # 0x140027060
   14001f785:	mov    esi,eax
   14001f787:	cmp    r13d,edi
   14001f78a:	jg     0x14001f45d
   14001f790:	mov    ebx,r12d
   14001f793:	mov    r8d,0xd
   14001f799:	sub    ebx,r14d
   14001f79c:	cmp    ebx,r15d
   14001f79f:	jb     0x14001f6a3
   14001f7a5:	jmp    0x14001f45d
   14001f7aa:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14001f7af:	lea    r9,[rsp+0x50]
   14001f7b4:	mov    r8d,r15d
   14001f7b7:	mov    rdx,r14
   14001f7ba:	mov    QWORD PTR [rsp+0x20],rax
   14001f7bf:	call   QWORD PTR [rip+0x79a3]        # 0x140027168
   14001f7c5:	test   eax,eax
   14001f7c7:	je     0x14001f7d4
   14001f7c9:	mov    ebx,DWORD PTR [rsp+0x50]
   14001f7cd:	mov    eax,esi
   14001f7cf:	jmp    0x14001f46b
   14001f7d4:	call   QWORD PTR [rip+0x7886]        # 0x140027060
   14001f7da:	mov    esi,eax
   14001f7dc:	mov    eax,ebx
   14001f7de:	jmp    0x14001f46b
   14001f7e3:	mov    r13,QWORD PTR [rsp+0x58]
   14001f7e8:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f7ed:	jmp    0x14001f46b
   14001f7f2:	mov    ecx,esi
   14001f7f4:	call   0x140016198
   14001f7f9:	jmp    0x14001f0ea
   14001f7fe:	mov    rdi,QWORD PTR [rsp+0x48]
   14001f803:	lea    rax,[rip+0x1a2c6]        # 0x140039ad0
   14001f80a:	mov    rax,QWORD PTR [rax+rdi*8]
   14001f80e:	test   BYTE PTR [r13+rax*1+0x8],0x40
   14001f814:	je     0x14001f820
   14001f816:	cmp    BYTE PTR [r14],0x1a
   14001f81a:	je     0x14001f0c6
   14001f820:	call   0x1400161e8
   14001f825:	mov    DWORD PTR [rax],0x1c
   14001f82b:	call   0x140016178
   14001f830:	mov    DWORD PTR [rax],ebx
   14001f832:	jmp    0x14001f0ea
   14001f837:	sub    ebx,eax
   14001f839:	mov    eax,ebx
   14001f83b:	mov    rcx,QWORD PTR [rbp+0x1a30]
   14001f842:	xor    rcx,rsp
   14001f845:	call   0x1400130a0
   14001f84a:	mov    rbx,QWORD PTR [rsp+0x1b98]
   14001f852:	add    rsp,0x1b40
   14001f859:	pop    r15
   14001f85b:	pop    r14
   14001f85d:	pop    r13
   14001f85f:	pop    r12
   14001f861:	pop    rdi
   14001f862:	pop    rsi
   14001f863:	pop    rbp
   14001f864:	ret    
   14001f865:	int3   
   14001f866:	int3   
   14001f867:	int3   
   14001f868:	mov    QWORD PTR [rsp+0x10],rbx
   14001f86d:	mov    DWORD PTR [rsp+0x8],ecx
   14001f871:	push   rsi
   14001f872:	push   rdi
   14001f873:	push   r12
   14001f875:	push   r14
   14001f877:	push   r15
   14001f879:	sub    rsp,0x20
   14001f87d:	mov    esi,r8d
   14001f880:	mov    r14,rdx
   14001f883:	movsxd rbx,ecx
   14001f886:	cmp    ebx,0xfffffffe
   14001f889:	jne    0x14001f8a3
   14001f88b:	call   0x140016178
   14001f890:	and    DWORD PTR [rax],0x0
   14001f893:	call   0x1400161e8
   14001f898:	mov    DWORD PTR [rax],0x9
   14001f89e:	jmp    0x14001f937
   14001f8a3:	test   ecx,ecx
   14001f8a5:	js     0x14001f91f
   14001f8a7:	cmp    ebx,DWORD PTR [rip+0x1bb73]        # 0x14003b420
   14001f8ad:	jae    0x14001f91f
   14001f8af:	mov    rax,rbx
   14001f8b2:	mov    rdi,rbx
   14001f8b5:	sar    rdi,0x5
   14001f8b9:	lea    r12,[rip+0x1a210]        # 0x140039ad0
   14001f8c0:	and    eax,0x1f
   14001f8c3:	imul   r15,rax,0x58
   14001f8c7:	mov    rax,QWORD PTR [r12+rdi*8]
   14001f8cb:	movsx  ecx,BYTE PTR [rax+r15*1+0x8]
   14001f8d1:	and    ecx,0x1
   14001f8d4:	je     0x14001f91f
   14001f8d6:	mov    ecx,ebx
   14001f8d8:	call   0x140022a54
   14001f8dd:	nop
   14001f8de:	mov    rax,QWORD PTR [r12+rdi*8]
   14001f8e2:	test   BYTE PTR [rax+r15*1+0x8],0x1
   14001f8e8:	je     0x14001f8fc
   14001f8ea:	mov    r8d,esi
   14001f8ed:	mov    rdx,r14
   14001f8f0:	mov    ecx,ebx
   14001f8f2:	call   0x14001f950
   14001f8f7:	mov    rdi,rax
   14001f8fa:	jmp    0x14001f913
   14001f8fc:	call   0x1400161e8
   14001f901:	mov    DWORD PTR [rax],0x9
   14001f907:	call   0x140016178
   14001f90c:	and    DWORD PTR [rax],0x0
   14001f90f:	or     rdi,0xffffffffffffffff
   14001f913:	mov    ecx,ebx
   14001f915:	call   0x140022c0c
   14001f91a:	mov    rax,rdi
   14001f91d:	jmp    0x14001f93b
   14001f91f:	call   0x140016178
   14001f924:	and    DWORD PTR [rax],0x0
   14001f927:	call   0x1400161e8
   14001f92c:	mov    DWORD PTR [rax],0x9
   14001f932:	call   0x140013f54
   14001f937:	or     rax,0xffffffffffffffff
   14001f93b:	mov    rbx,QWORD PTR [rsp+0x58]
   14001f940:	add    rsp,0x20
   14001f944:	pop    r15
   14001f946:	pop    r14
   14001f948:	pop    r12
   14001f94a:	pop    rdi
   14001f94b:	pop    rsi
   14001f94c:	ret    
   14001f94d:	int3   
   14001f94e:	int3   
   14001f94f:	int3   
   14001f950:	mov    QWORD PTR [rsp+0x8],rbx
   14001f955:	mov    QWORD PTR [rsp+0x10],rsi
   14001f95a:	push   rdi
   14001f95b:	sub    rsp,0x20
   14001f95f:	movsxd rbx,ecx
   14001f962:	mov    edi,r8d
   14001f965:	mov    rsi,rdx
   14001f968:	mov    ecx,ebx
   14001f96a:	call   0x140022b98
   14001f96f:	cmp    rax,0xffffffffffffffff
   14001f973:	jne    0x14001f986
   14001f975:	call   0x1400161e8
   14001f97a:	mov    DWORD PTR [rax],0x9
   14001f980:	or     rax,0xffffffffffffffff
   14001f984:	jmp    0x14001f9d3
   14001f986:	lea    r8,[rsp+0x48]
   14001f98b:	mov    r9d,edi
   14001f98e:	mov    rdx,rsi
   14001f991:	mov    rcx,rax
   14001f994:	call   QWORD PTR [rip+0x782e]        # 0x1400271c8
   14001f99a:	test   eax,eax
   14001f99c:	jne    0x14001f9ad
   14001f99e:	call   QWORD PTR [rip+0x76bc]        # 0x140027060
   14001f9a4:	mov    ecx,eax
   14001f9a6:	call   0x140016198
   14001f9ab:	jmp    0x14001f980
   14001f9ad:	mov    rcx,rbx
   14001f9b0:	mov    rax,rbx
   14001f9b3:	lea    rdx,[rip+0x1a116]        # 0x140039ad0
   14001f9ba:	sar    rax,0x5
   14001f9be:	and    ecx,0x1f
   14001f9c1:	mov    rax,QWORD PTR [rdx+rax*8]
   14001f9c5:	imul   rcx,rcx,0x58
   14001f9c9:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14001f9ce:	mov    rax,QWORD PTR [rsp+0x48]
   14001f9d3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f9d8:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f9dd:	add    rsp,0x20
   14001f9e1:	pop    rdi
   14001f9e2:	ret    
   14001f9e3:	int3   
   14001f9e4:	rex push rbx
   14001f9e6:	sub    rsp,0x20
   14001f9ea:	inc    DWORD PTR [rip+0x1a840]        # 0x14003a230
   14001f9f0:	mov    rbx,rcx
   14001f9f3:	mov    ecx,0x1000
   14001f9f8:	call   0x140015d94
   14001f9fd:	mov    QWORD PTR [rbx+0x10],rax
   14001fa01:	test   rax,rax
   14001fa04:	je     0x14001fa13
   14001fa06:	or     DWORD PTR [rbx+0x18],0x8
   14001fa0a:	mov    DWORD PTR [rbx+0x24],0x1000
   14001fa11:	jmp    0x14001fa26
   14001fa13:	or     DWORD PTR [rbx+0x18],0x4
   14001fa17:	lea    rax,[rbx+0x20]
   14001fa1b:	mov    DWORD PTR [rbx+0x24],0x2
   14001fa22:	mov    QWORD PTR [rbx+0x10],rax
   14001fa26:	mov    rax,QWORD PTR [rbx+0x10]
   14001fa2a:	and    DWORD PTR [rbx+0x8],0x0
   14001fa2e:	mov    QWORD PTR [rbx],rax
   14001fa31:	add    rsp,0x20
   14001fa35:	pop    rbx
   14001fa36:	ret    
   14001fa37:	int3   
   14001fa38:	rex push rbx
   14001fa3a:	sub    rsp,0x40
   14001fa3e:	mov    ebx,ecx
   14001fa40:	lea    rcx,[rsp+0x20]
   14001fa45:	call   0x140014b34
   14001fa4a:	mov    rax,QWORD PTR [rsp+0x20]
   14001fa4f:	movzx  edx,bl
   14001fa52:	mov    rcx,QWORD PTR [rax+0x108]
   14001fa59:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001fa5d:	and    eax,0x8000
   14001fa62:	cmp    BYTE PTR [rsp+0x38],0x0
   14001fa67:	je     0x14001fa75
   14001fa69:	mov    rcx,QWORD PTR [rsp+0x30]
   14001fa6e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001fa75:	add    rsp,0x40
   14001fa79:	pop    rbx
   14001fa7a:	ret    
   14001fa7b:	int3   
   14001fa7c:	rex push rbx
   14001fa7e:	sub    rsp,0x40
   14001fa82:	mov    ebx,ecx
   14001fa84:	lea    rcx,[rsp+0x20]
   14001fa89:	xor    edx,edx
   14001fa8b:	call   0x140014b34
   14001fa90:	mov    rax,QWORD PTR [rsp+0x20]
   14001fa95:	movzx  edx,bl
   14001fa98:	mov    rcx,QWORD PTR [rax+0x108]
   14001fa9f:	movzx  eax,WORD PTR [rcx+rdx*2]
   14001faa3:	and    eax,0x8000
   14001faa8:	cmp    BYTE PTR [rsp+0x38],0x0
   14001faad:	je     0x14001fabb
   14001faaf:	mov    rcx,QWORD PTR [rsp+0x30]
   14001fab4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001fabb:	add    rsp,0x40
   14001fabf:	pop    rbx
   14001fac0:	ret    
   14001fac1:	int3   
   14001fac2:	int3   
   14001fac3:	int3   
   14001fac4:	mov    rcx,QWORD PTR [rip+0x17545]        # 0x140037010
   14001facb:	xor    eax,eax
   14001facd:	or     rcx,0x1
   14001fad1:	cmp    QWORD PTR [rip+0x1a768],rcx        # 0x14003a240
   14001fad8:	sete   al
   14001fadb:	ret    
   14001fadc:	mov    QWORD PTR [rsp+0x18],rbx
   14001fae1:	mov    QWORD PTR [rsp+0x20],rbp
   14001fae6:	push   rsi
   14001fae7:	push   rdi
   14001fae8:	push   r14
   14001faea:	sub    rsp,0x40
   14001faee:	mov    rax,QWORD PTR [rip+0x1751b]        # 0x140037010
   14001faf5:	xor    rax,rsp
   14001faf8:	mov    QWORD PTR [rsp+0x30],rax
   14001fafd:	test   BYTE PTR [rdx+0x18],0x40
   14001fb01:	mov    rdi,rdx
   14001fb04:	movzx  esi,cx
   14001fb07:	jne    0x14001fc86
   14001fb0d:	mov    rcx,rdx
   14001fb10:	call   0x14001ef08
   14001fb15:	lea    rbp,[rip+0x176a4]        # 0x1400371c0
   14001fb1c:	lea    r14,[rip+0x19fad]        # 0x140039ad0
   14001fb23:	cmp    eax,0xffffffff
   14001fb26:	je     0x14001fb59
   14001fb28:	mov    rcx,rdi
   14001fb2b:	call   0x14001ef08
   14001fb30:	cmp    eax,0xfffffffe
   14001fb33:	je     0x14001fb59
   14001fb35:	mov    rcx,rdi
   14001fb38:	call   0x14001ef08
   14001fb3d:	mov    rcx,rdi
   14001fb40:	movsxd rbx,eax
   14001fb43:	sar    rbx,0x5
   14001fb47:	call   0x14001ef08
   14001fb4c:	and    eax,0x1f
   14001fb4f:	imul   rcx,rax,0x58
   14001fb53:	add    rcx,QWORD PTR [r14+rbx*8]
   14001fb57:	jmp    0x14001fb5c
   14001fb59:	mov    rcx,rbp
   14001fb5c:	mov    al,BYTE PTR [rcx+0x38]
   14001fb5f:	and    al,0x7f
   14001fb61:	cmp    al,0x2
   14001fb63:	je     0x14001fc6f
   14001fb69:	mov    rcx,rdi
   14001fb6c:	call   0x14001ef08
   14001fb71:	cmp    eax,0xffffffff
   14001fb74:	je     0x14001fba7
   14001fb76:	mov    rcx,rdi
   14001fb79:	call   0x14001ef08
   14001fb7e:	cmp    eax,0xfffffffe
   14001fb81:	je     0x14001fba7
   14001fb83:	mov    rcx,rdi
   14001fb86:	call   0x14001ef08
   14001fb8b:	mov    rcx,rdi
   14001fb8e:	movsxd rbx,eax
   14001fb91:	sar    rbx,0x5
   14001fb95:	call   0x14001ef08
   14001fb9a:	and    eax,0x1f
   14001fb9d:	imul   rcx,rax,0x58
   14001fba1:	add    rcx,QWORD PTR [r14+rbx*8]
   14001fba5:	jmp    0x14001fbaa
   14001fba7:	mov    rcx,rbp
   14001fbaa:	mov    al,BYTE PTR [rcx+0x38]
   14001fbad:	and    al,0x7f
   14001fbaf:	cmp    al,0x1
   14001fbb1:	je     0x14001fc6f
   14001fbb7:	mov    rcx,rdi
   14001fbba:	call   0x14001ef08
   14001fbbf:	cmp    eax,0xffffffff
   14001fbc2:	je     0x14001fbf3
   14001fbc4:	mov    rcx,rdi
   14001fbc7:	call   0x14001ef08
   14001fbcc:	cmp    eax,0xfffffffe
   14001fbcf:	je     0x14001fbf3
   14001fbd1:	mov    rcx,rdi
   14001fbd4:	call   0x14001ef08
   14001fbd9:	mov    rcx,rdi
   14001fbdc:	movsxd rbx,eax
   14001fbdf:	sar    rbx,0x5
   14001fbe3:	call   0x14001ef08
   14001fbe8:	and    eax,0x1f
   14001fbeb:	imul   rbp,rax,0x58
   14001fbef:	add    rbp,QWORD PTR [r14+rbx*8]
   14001fbf3:	test   BYTE PTR [rbp+0x8],0x80
   14001fbf7:	je     0x14001fc86
   14001fbfd:	lea    rdx,[rsp+0x24]
   14001fc02:	lea    rcx,[rsp+0x20]
   14001fc07:	movzx  r9d,si
   14001fc0b:	mov    r8d,0x5
   14001fc11:	call   0x140020418
   14001fc16:	xor    ebx,ebx
   14001fc18:	test   eax,eax
   14001fc1a:	je     0x14001fc26
   14001fc1c:	mov    eax,0xffff
   14001fc21:	jmp    0x14001fcaf
   14001fc26:	cmp    DWORD PTR [rsp+0x20],ebx
   14001fc2a:	jle    0x14001fc6a
   14001fc2c:	lea    r14,[rsp+0x24]
   14001fc31:	dec    DWORD PTR [rdi+0x8]
   14001fc34:	js     0x14001fc4c
   14001fc36:	mov    rcx,QWORD PTR [rdi]
   14001fc39:	mov    al,BYTE PTR [r14]
   14001fc3c:	mov    BYTE PTR [rcx],al
   14001fc3e:	mov    rax,QWORD PTR [rdi]
   14001fc41:	movzx  ecx,BYTE PTR [rax]
   14001fc44:	inc    rax
   14001fc47:	mov    QWORD PTR [rdi],rax
   14001fc4a:	jmp    0x14001fc5a
   14001fc4c:	movsx  ecx,BYTE PTR [r14]
   14001fc50:	mov    rdx,rdi
   14001fc53:	call   0x14001abd8
   14001fc58:	mov    ecx,eax
   14001fc5a:	cmp    ecx,0xffffffff
   14001fc5d:	je     0x14001fc1c
   14001fc5f:	inc    ebx
   14001fc61:	inc    r14
   14001fc64:	cmp    ebx,DWORD PTR [rsp+0x20]
   14001fc68:	jl     0x14001fc31
   14001fc6a:	movzx  eax,si
   14001fc6d:	jmp    0x14001fcaf
   14001fc6f:	movsxd rcx,DWORD PTR [rdi+0x8]
   14001fc73:	add    rcx,0xfffffffffffffffe
   14001fc77:	mov    DWORD PTR [rdi+0x8],ecx
   14001fc7a:	test   ecx,ecx
   14001fc7c:	js     0x14001fca4
   14001fc7e:	mov    rcx,QWORD PTR [rdi]
   14001fc81:	mov    WORD PTR [rcx],si
   14001fc84:	jmp    0x14001fc9b
   14001fc86:	movsxd rax,DWORD PTR [rdi+0x8]
   14001fc8a:	add    rax,0xfffffffffffffffe
   14001fc8e:	mov    DWORD PTR [rdi+0x8],eax
   14001fc91:	test   eax,eax
   14001fc93:	js     0x14001fca4
   14001fc95:	mov    rax,QWORD PTR [rdi]
   14001fc98:	mov    WORD PTR [rax],si
   14001fc9b:	add    QWORD PTR [rdi],0x2
   14001fc9f:	movzx  eax,si
   14001fca2:	jmp    0x14001fcaf
   14001fca4:	mov    rdx,rdi
   14001fca7:	movzx  ecx,si
   14001fcaa:	call   0x140022c94
   14001fcaf:	mov    rcx,QWORD PTR [rsp+0x30]
   14001fcb4:	xor    rcx,rsp
   14001fcb7:	call   0x1400130a0
   14001fcbc:	mov    rbx,QWORD PTR [rsp+0x70]
   14001fcc1:	mov    rbp,QWORD PTR [rsp+0x78]
   14001fcc6:	add    rsp,0x40
   14001fcca:	pop    r14
   14001fccc:	pop    rdi
   14001fccd:	pop    rsi
   14001fcce:	ret    
   14001fccf:	int3   
   14001fcd0:	mov    rax,rsp
   14001fcd3:	mov    QWORD PTR [rax+0x8],rbx
   14001fcd7:	mov    QWORD PTR [rax+0x10],rbp
   14001fcdb:	mov    QWORD PTR [rax+0x18],rsi
   14001fcdf:	mov    QWORD PTR [rax+0x20],rdi
   14001fce3:	push   r14
   14001fce5:	sub    rsp,0x50
   14001fce9:	xor    r14d,r14d
   14001fcec:	mov    rbp,r8
   14001fcef:	mov    rsi,rdx
   14001fcf2:	mov    rdi,rcx
   14001fcf5:	test   rdx,rdx
   14001fcf8:	je     0x14001fd0d
   14001fcfa:	test   r8,r8
   14001fcfd:	je     0x14001fd0d
   14001fcff:	cmp    BYTE PTR [rdx],r14b
   14001fd02:	jne    0x14001fd2a
   14001fd04:	test   rcx,rcx
   14001fd07:	je     0x14001fd0d
   14001fd09:	mov    WORD PTR [rcx],r14w
   14001fd0d:	xor    eax,eax
   14001fd0f:	mov    rbx,QWORD PTR [rsp+0x60]
   14001fd14:	mov    rbp,QWORD PTR [rsp+0x68]
   14001fd19:	mov    rsi,QWORD PTR [rsp+0x70]
   14001fd1e:	mov    rdi,QWORD PTR [rsp+0x78]
   14001fd23:	add    rsp,0x50
   14001fd27:	pop    r14
   14001fd29:	ret    
   14001fd2a:	lea    rcx,[rsp+0x30]
   14001fd2f:	mov    rdx,r9
   14001fd32:	call   0x140014b34
   14001fd37:	mov    rax,QWORD PTR [rsp+0x30]
   14001fd3c:	cmp    QWORD PTR [rax+0x138],r14
   14001fd43:	jne    0x14001fd5a
   14001fd45:	test   rdi,rdi
   14001fd48:	je     0x14001fd50
   14001fd4a:	movzx  eax,BYTE PTR [rsi]
   14001fd4d:	mov    WORD PTR [rdi],ax
   14001fd50:	mov    ebx,0x1
   14001fd55:	jmp    0x14001fe07
   14001fd5a:	movzx  ecx,BYTE PTR [rsi]
   14001fd5d:	lea    rdx,[rsp+0x30]
   14001fd62:	call   0x14001fa38
   14001fd67:	mov    ebx,0x1
   14001fd6c:	test   eax,eax
   14001fd6e:	je     0x14001fdca
   14001fd70:	mov    rcx,QWORD PTR [rsp+0x30]
   14001fd75:	mov    r9d,DWORD PTR [rcx+0xd4]
   14001fd7c:	cmp    r9d,ebx
   14001fd7f:	jle    0x14001fdb0
   14001fd81:	cmp    ebp,r9d
   14001fd84:	jl     0x14001fdb0
   14001fd86:	mov    ecx,DWORD PTR [rcx+0x4]
   14001fd89:	mov    eax,r14d
   14001fd8c:	test   rdi,rdi
   14001fd8f:	setne  al
   14001fd92:	lea    edx,[rbx+0x8]
   14001fd95:	mov    r8,rsi
   14001fd98:	mov    DWORD PTR [rsp+0x28],eax
   14001fd9c:	mov    QWORD PTR [rsp+0x20],rdi
   14001fda1:	call   QWORD PTR [rip+0x7431]        # 0x1400271d8
   14001fda7:	mov    rcx,QWORD PTR [rsp+0x30]
   14001fdac:	test   eax,eax
   14001fdae:	jne    0x14001fdc2
   14001fdb0:	movsxd rax,DWORD PTR [rcx+0xd4]
   14001fdb7:	cmp    rbp,rax
   14001fdba:	jb     0x14001fdf9
   14001fdbc:	cmp    BYTE PTR [rsi+0x1],r14b
   14001fdc0:	je     0x14001fdf9
   14001fdc2:	mov    ebx,DWORD PTR [rcx+0xd4]
   14001fdc8:	jmp    0x14001fe07
   14001fdca:	mov    eax,r14d
   14001fdcd:	test   rdi,rdi
   14001fdd0:	mov    r9d,ebx
   14001fdd3:	setne  al
   14001fdd6:	mov    r8,rsi
   14001fdd9:	mov    edx,0x9
   14001fdde:	mov    DWORD PTR [rsp+0x28],eax
   14001fde2:	mov    rax,QWORD PTR [rsp+0x30]
   14001fde7:	mov    QWORD PTR [rsp+0x20],rdi
   14001fdec:	mov    ecx,DWORD PTR [rax+0x4]
   14001fdef:	call   QWORD PTR [rip+0x73e3]        # 0x1400271d8
   14001fdf5:	test   eax,eax
   14001fdf7:	jne    0x14001fe07
   14001fdf9:	call   0x1400161e8
   14001fdfe:	or     ebx,0xffffffff
   14001fe01:	mov    DWORD PTR [rax],0x2a
   14001fe07:	cmp    BYTE PTR [rsp+0x48],r14b
   14001fe0c:	je     0x14001fe1a
   14001fe0e:	mov    rcx,QWORD PTR [rsp+0x40]
   14001fe13:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001fe1a:	mov    eax,ebx
   14001fe1c:	jmp    0x14001fd0f
   14001fe21:	int3   
   14001fe22:	int3   
   14001fe23:	int3   
   14001fe24:	xor    r9d,r9d
   14001fe27:	jmp    0x14001fcd0
   14001fe2c:	mov    QWORD PTR [rsp+0x18],rbx
   14001fe31:	push   rsi
   14001fe32:	push   rdi
   14001fe33:	push   r14
   14001fe35:	sub    rsp,0x20
   14001fe39:	test   BYTE PTR [rcx+0x18],0x40
   14001fe3d:	mov    rdi,rcx
   14001fe40:	lea    r14,[rip+0x19c89]        # 0x140039ad0
   14001fe47:	lea    rsi,[rip+0x17372]        # 0x1400371c0
   14001fe4e:	jne    0x14001fef8
   14001fe54:	call   0x14001ef08
   14001fe59:	cmp    eax,0xffffffff
   14001fe5c:	je     0x14001fe8f
   14001fe5e:	mov    rcx,rdi
   14001fe61:	call   0x14001ef08
   14001fe66:	cmp    eax,0xfffffffe
   14001fe69:	je     0x14001fe8f
   14001fe6b:	mov    rcx,rdi
   14001fe6e:	call   0x14001ef08
   14001fe73:	mov    rcx,rdi
   14001fe76:	movsxd rbx,eax
   14001fe79:	sar    rbx,0x5
   14001fe7d:	call   0x14001ef08
   14001fe82:	and    eax,0x1f
   14001fe85:	imul   rcx,rax,0x58
   14001fe89:	add    rcx,QWORD PTR [r14+rbx*8]
   14001fe8d:	jmp    0x14001fe92
   14001fe8f:	mov    rcx,rsi
   14001fe92:	test   BYTE PTR [rcx+0x38],0x7f
   14001fe96:	je     0x14001fef8
   14001fe98:	dec    DWORD PTR [rdi+0x8]
   14001fe9b:	js     0x14001feab
   14001fe9d:	mov    rax,QWORD PTR [rdi]
   14001fea0:	movzx  ecx,BYTE PTR [rax]
   14001fea3:	inc    rax
   14001fea6:	mov    QWORD PTR [rdi],rax
   14001fea9:	jmp    0x14001feb5
   14001feab:	mov    rcx,rdi
   14001feae:	call   0x140022e24
   14001feb3:	mov    ecx,eax
   14001feb5:	cmp    ecx,0xffffffff
   14001feb8:	jne    0x14001fec4
   14001feba:	mov    eax,0xffff
   14001febf:	jmp    0x140020013
   14001fec4:	dec    DWORD PTR [rdi+0x8]
   14001fec7:	mov    BYTE PTR [rsp+0x40],cl
   14001fecb:	js     0x14001fedb
   14001fecd:	mov    rax,QWORD PTR [rdi]
   14001fed0:	movzx  ecx,BYTE PTR [rax]
   14001fed3:	inc    rax
   14001fed6:	mov    QWORD PTR [rdi],rax
   14001fed9:	jmp    0x14001fee5
   14001fedb:	mov    rcx,rdi
   14001fede:	call   0x140022e24
   14001fee3:	mov    ecx,eax
   14001fee5:	cmp    ecx,0xffffffff
   14001fee8:	je     0x14001feba
   14001feea:	mov    BYTE PTR [rsp+0x41],cl
   14001feee:	movzx  eax,WORD PTR [rsp+0x40]
   14001fef3:	jmp    0x140020013
   14001fef8:	test   BYTE PTR [rdi+0x18],0x40
   14001fefc:	jne    0x14001ffeb
   14001ff02:	mov    rcx,rdi
   14001ff05:	call   0x14001ef08
   14001ff0a:	cmp    eax,0xffffffff
   14001ff0d:	je     0x14001ff3e
   14001ff0f:	mov    rcx,rdi
   14001ff12:	call   0x14001ef08
   14001ff17:	cmp    eax,0xfffffffe
   14001ff1a:	je     0x14001ff3e
   14001ff1c:	mov    rcx,rdi
   14001ff1f:	call   0x14001ef08
   14001ff24:	mov    rcx,rdi
   14001ff27:	movsxd rbx,eax
   14001ff2a:	sar    rbx,0x5
   14001ff2e:	call   0x14001ef08
   14001ff33:	and    eax,0x1f
   14001ff36:	imul   rsi,rax,0x58
   14001ff3a:	add    rsi,QWORD PTR [r14+rbx*8]
   14001ff3e:	test   BYTE PTR [rsi+0x8],0x80
   14001ff42:	je     0x14001ffeb
   14001ff48:	dec    DWORD PTR [rdi+0x8]
   14001ff4b:	mov    ebx,0x1
   14001ff50:	js     0x14001ff60
   14001ff52:	mov    rax,QWORD PTR [rdi]
   14001ff55:	movzx  ecx,BYTE PTR [rax]
   14001ff58:	inc    rax
   14001ff5b:	mov    QWORD PTR [rdi],rax
   14001ff5e:	jmp    0x14001ff6a
   14001ff60:	mov    rcx,rdi
   14001ff63:	call   0x140022e24
   14001ff68:	mov    ecx,eax
   14001ff6a:	cmp    ecx,0xffffffff
   14001ff6d:	je     0x14001feba
   14001ff73:	mov    BYTE PTR [rsp+0x48],cl
   14001ff77:	movzx  ecx,cl
   14001ff7a:	call   0x14001fa7c
   14001ff7f:	test   eax,eax
   14001ff81:	je     0x14001ffc0
   14001ff83:	dec    DWORD PTR [rdi+0x8]
   14001ff86:	js     0x14001ff96
   14001ff88:	mov    rax,QWORD PTR [rdi]
   14001ff8b:	movzx  ecx,BYTE PTR [rax]
   14001ff8e:	inc    rax
   14001ff91:	mov    QWORD PTR [rdi],rax
   14001ff94:	jmp    0x14001ffa0
   14001ff96:	mov    rcx,rdi
   14001ff99:	call   0x140022e24
   14001ff9e:	mov    ecx,eax
   14001ffa0:	cmp    ecx,0xffffffff
   14001ffa3:	jne    0x14001ffb7
   14001ffa5:	movsx  ecx,BYTE PTR [rsp+0x48]
   14001ffaa:	mov    rdx,rdi
   14001ffad:	call   0x140023070
   14001ffb2:	jmp    0x14001feba
   14001ffb7:	mov    BYTE PTR [rsp+0x49],cl
   14001ffbb:	mov    ebx,0x2
   14001ffc0:	lea    rdx,[rsp+0x48]
   14001ffc5:	lea    rcx,[rsp+0x40]
   14001ffca:	movsxd r8,ebx
   14001ffcd:	call   0x14001fe24
   14001ffd2:	cmp    eax,0xffffffff
   14001ffd5:	jne    0x14001feee
   14001ffdb:	call   0x1400161e8
   14001ffe0:	mov    DWORD PTR [rax],0x2a
   14001ffe6:	jmp    0x14001feba
   14001ffeb:	mov    eax,DWORD PTR [rdi+0x8]
   14001ffee:	mov    ebx,0x2
   14001fff3:	cmp    eax,ebx
   14001fff5:	jl     0x14002000b
   14001fff7:	mov    rcx,QWORD PTR [rdi]
   14001fffa:	add    eax,0xfffffffe
   14001fffd:	mov    DWORD PTR [rdi+0x8],eax
   140020000:	movzx  eax,WORD PTR [rcx]
   140020003:	add    rcx,rbx
   140020006:	mov    QWORD PTR [rdi],rcx
   140020009:	jmp    0x140020013
   14002000b:	mov    rcx,rdi
   14002000e:	call   0x1400230d0
   140020013:	mov    rbx,QWORD PTR [rsp+0x50]
   140020018:	add    rsp,0x20
   14002001c:	pop    r14
   14002001e:	pop    rdi
   14002001f:	pop    rsi
   140020020:	ret    
   140020021:	int3   
   140020022:	int3   
   140020023:	int3   
   140020024:	mov    QWORD PTR [rsp+0x18],rbx
   140020029:	mov    QWORD PTR [rsp+0x20],rbp
   14002002e:	push   rsi
   14002002f:	push   rdi
   140020030:	push   r13
   140020032:	push   r14
   140020034:	push   r15
   140020036:	sub    rsp,0x40
   14002003a:	mov    rax,QWORD PTR [rip+0x16fcf]        # 0x140037010
   140020041:	xor    rax,rsp
   140020044:	mov    QWORD PTR [rsp+0x38],rax
   140020049:	mov    r15d,0xffff
   14002004f:	mov    rdi,rdx
   140020052:	movzx  ebp,cx
   140020055:	mov    WORD PTR [rsp+0x28],cx
   14002005a:	cmp    cx,r15w
   14002005e:	je     0x1400201f5
   140020064:	test   BYTE PTR [rdx+0x18],0x1
   140020068:	mov    esi,0x2
   14002006d:	jne    0x140020083
   14002006f:	test   BYTE PTR [rdx+0x18],0x80
   140020073:	je     0x1400201f5
   140020079:	test   BYTE PTR [rdx+0x18],sil
   14002007d:	jne    0x1400201f5
   140020083:	cmp    QWORD PTR [rdx+0x10],0x0
   140020088:	jne    0x140020092
   14002008a:	mov    rcx,rdx
   14002008d:	call   0x14001f9e4
   140020092:	test   BYTE PTR [rdi+0x18],0x40
   140020096:	jne    0x1400201be
   14002009c:	mov    rcx,rdi
   14002009f:	call   0x14001ef08
   1400200a4:	lea    r14,[rip+0x17115]        # 0x1400371c0
   1400200ab:	lea    r13,[rip+0x19a1e]        # 0x140039ad0
   1400200b2:	cmp    eax,0xffffffff
   1400200b5:	je     0x1400200e9
   1400200b7:	mov    rcx,rdi
   1400200ba:	call   0x14001ef08
   1400200bf:	cmp    eax,0xfffffffe
   1400200c2:	je     0x1400200e9
   1400200c4:	mov    rcx,rdi
   1400200c7:	call   0x14001ef08
   1400200cc:	mov    rcx,rdi
   1400200cf:	movsxd rbx,eax
   1400200d2:	sar    rbx,0x5
   1400200d6:	call   0x14001ef08
   1400200db:	and    eax,0x1f
   1400200de:	imul   rcx,rax,0x58
   1400200e2:	add    rcx,QWORD PTR [r13+rbx*8+0x0]
   1400200e7:	jmp    0x1400200ec
   1400200e9:	mov    rcx,r14
   1400200ec:	test   BYTE PTR [rcx+0x8],0x80
   1400200f0:	je     0x1400201be
   1400200f6:	mov    rcx,rdi
   1400200f9:	call   0x14001ef08
   1400200fe:	cmp    eax,0xffffffff
   140020101:	je     0x140020133
   140020103:	mov    rcx,rdi
   140020106:	call   0x14001ef08
   14002010b:	cmp    eax,0xfffffffe
   14002010e:	je     0x140020133
   140020110:	mov    rcx,rdi
   140020113:	call   0x14001ef08
   140020118:	mov    rcx,rdi
   14002011b:	movsxd rbx,eax
   14002011e:	sar    rbx,0x5
   140020122:	call   0x14001ef08
   140020127:	and    eax,0x1f
   14002012a:	imul   r14,rax,0x58
   14002012e:	add    r14,QWORD PTR [r13+rbx*8+0x0]
   140020133:	test   BYTE PTR [r14+0x38],0x7f
   140020138:	je     0x14002014d
   14002013a:	mov    al,BYTE PTR [rsp+0x29]
   14002013e:	mov    BYTE PTR [rsp+0x30],bpl
   140020143:	mov    DWORD PTR [rsp+0x20],esi
   140020147:	mov    BYTE PTR [rsp+0x31],al
   14002014b:	jmp    0x140020172
   14002014d:	lea    rdx,[rsp+0x30]
   140020152:	lea    rcx,[rsp+0x20]
   140020157:	movzx  r9d,bp
   14002015b:	mov    r8d,0x5
   140020161:	call   0x140020418
   140020166:	test   eax,eax
   140020168:	jne    0x1400201f5
   14002016e:	mov    esi,DWORD PTR [rsp+0x20]
   140020172:	mov    rax,QWORD PTR [rdi+0x10]
   140020176:	movsxd rdx,esi
   140020179:	add    rdx,rax
   14002017c:	cmp    QWORD PTR [rdi],rdx
   14002017f:	jae    0x14002018f
   140020181:	cmp    DWORD PTR [rdi+0x8],0x0
   140020185:	jne    0x1400201f5
   140020187:	cmp    esi,DWORD PTR [rdi+0x24]
   14002018a:	jg     0x1400201f5
   14002018c:	mov    QWORD PTR [rdi],rdx
   14002018f:	lea    eax,[rsi-0x1]
   140020192:	movsxd rdx,eax
   140020195:	test   eax,eax
   140020197:	js     0x1400201ae
   140020199:	dec    QWORD PTR [rdi]
   14002019c:	mov    al,BYTE PTR [rsp+rdx*1+0x30]
   1400201a0:	dec    rdx
   1400201a3:	mov    rcx,QWORD PTR [rdi]
   1400201a6:	mov    BYTE PTR [rcx],al
   1400201a8:	jns    0x140020199
   1400201aa:	mov    esi,DWORD PTR [rsp+0x20]
   1400201ae:	add    DWORD PTR [rdi+0x8],esi
   1400201b1:	and    DWORD PTR [rdi+0x18],0xffffffef
   1400201b5:	or     DWORD PTR [rdi+0x18],0x1
   1400201b9:	movzx  eax,bp
   1400201bc:	jmp    0x1400201f9
   1400201be:	mov    rax,QWORD PTR [rdi+0x10]
   1400201c2:	lea    rcx,[rax+0x2]
   1400201c6:	cmp    QWORD PTR [rdi],rcx
   1400201c9:	jae    0x1400201dd
   1400201cb:	cmp    DWORD PTR [rdi+0x8],0x0
   1400201cf:	jne    0x1400201f5
   1400201d1:	movsxd rax,DWORD PTR [rdi+0x24]
   1400201d5:	cmp    rax,rsi
   1400201d8:	jb     0x1400201f5
   1400201da:	mov    QWORD PTR [rdi],rcx
   1400201dd:	add    QWORD PTR [rdi],0xfffffffffffffffe
   1400201e1:	test   BYTE PTR [rdi+0x18],0x40
   1400201e5:	mov    rax,QWORD PTR [rdi]
   1400201e8:	je     0x14002021f
   1400201ea:	cmp    WORD PTR [rax],bp
   1400201ed:	je     0x1400201ae
   1400201ef:	add    rax,rsi
   1400201f2:	mov    QWORD PTR [rdi],rax
   1400201f5:	movzx  eax,r15w
   1400201f9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400201fe:	xor    rcx,rsp
   140020201:	call   0x1400130a0
   140020206:	lea    r11,[rsp+0x40]
   14002020b:	mov    rbx,QWORD PTR [r11+0x40]
   14002020f:	mov    rbp,QWORD PTR [r11+0x48]
   140020213:	mov    rsp,r11
   140020216:	pop    r15
   140020218:	pop    r14
   14002021a:	pop    r13
   14002021c:	pop    rdi
   14002021d:	pop    rsi
   14002021e:	ret    
   14002021f:	mov    WORD PTR [rax],bp
   140020222:	jmp    0x1400201ae
   140020224:	mov    WORD PTR [rsp+0x8],cx
   140020229:	push   rbx
   14002022a:	sub    rsp,0x20
   14002022e:	mov    eax,0xffff
   140020233:	movzx  ebx,dx
   140020236:	cmp    cx,ax
   140020239:	jne    0x14002023f
   14002023b:	xor    eax,eax
   14002023d:	jmp    0x140020284
   14002023f:	mov    eax,0x100
   140020244:	cmp    cx,ax
   140020247:	jae    0x140020259
   140020249:	mov    rax,QWORD PTR [rip+0x18240]        # 0x140038490
   140020250:	movzx  ecx,cx
   140020253:	movzx  eax,WORD PTR [rax+rcx*2]
   140020257:	jmp    0x14002027f
   140020259:	mov    ecx,0x1
   14002025e:	lea    r9,[rsp+0x40]
   140020263:	lea    rdx,[rsp+0x30]
   140020268:	mov    r8d,ecx
   14002026b:	call   QWORD PTR [rip+0x70b7]        # 0x140027328
   140020271:	xor    ecx,ecx
   140020273:	test   eax,eax
   140020275:	je     0x14002027c
   140020277:	movzx  ecx,WORD PTR [rsp+0x40]
   14002027c:	movzx  eax,cx
   14002027f:	movzx  ecx,bx
   140020282:	and    eax,ecx
   140020284:	add    rsp,0x20
   140020288:	pop    rbx
   140020289:	ret    
   14002028a:	int3   
   14002028b:	int3   
   14002028c:	mov    QWORD PTR [rsp+0x8],rbx
   140020291:	mov    QWORD PTR [rsp+0x18],rsi
   140020296:	mov    WORD PTR [rsp+0x20],r9w
   14002029c:	push   rdi
   14002029d:	sub    rsp,0x60
   1400202a1:	mov    rdi,r8
   1400202a4:	mov    rsi,rdx
   1400202a7:	mov    rbx,rcx
   1400202aa:	test   rdx,rdx
   1400202ad:	jne    0x1400202c2
   1400202af:	test   r8,r8
   1400202b2:	je     0x1400202c2
   1400202b4:	test   rcx,rcx
   1400202b7:	je     0x1400202bb
   1400202b9:	and    DWORD PTR [rcx],edx
   1400202bb:	xor    eax,eax
   1400202bd:	jmp    0x140020357
   1400202c2:	test   rcx,rcx
   1400202c5:	je     0x1400202ca
   1400202c7:	or     DWORD PTR [rcx],0xffffffff
   1400202ca:	cmp    r8,0x7fffffff
   1400202d1:	jbe    0x1400202e6
   1400202d3:	call   0x1400161e8
   1400202d8:	mov    ebx,0x16
   1400202dd:	mov    DWORD PTR [rax],ebx
   1400202df:	call   0x140013f54
   1400202e4:	jmp    0x140020355
   1400202e6:	mov    rdx,QWORD PTR [rsp+0x90]
   1400202ee:	lea    rcx,[rsp+0x40]
   1400202f3:	call   0x140014b34
   1400202f8:	mov    rax,QWORD PTR [rsp+0x40]
   1400202fd:	cmp    QWORD PTR [rax+0x138],0x0
   140020305:	jne    0x140020386
   140020307:	movzx  eax,WORD PTR [rsp+0x88]
   14002030f:	mov    ecx,0xff
   140020314:	cmp    ax,cx
   140020317:	jbe    0x140020369
   140020319:	test   rsi,rsi
   14002031c:	je     0x140020330
   14002031e:	test   rdi,rdi
   140020321:	je     0x140020330
   140020323:	mov    r8,rdi
   140020326:	xor    edx,edx
   140020328:	mov    rcx,rsi
   14002032b:	call   0x140014d80
   140020330:	call   0x1400161e8
   140020335:	mov    DWORD PTR [rax],0x2a
   14002033b:	call   0x1400161e8
   140020340:	mov    ebx,DWORD PTR [rax]
   140020342:	cmp    BYTE PTR [rsp+0x58],0x0
   140020347:	je     0x140020355
   140020349:	mov    rcx,QWORD PTR [rsp+0x50]
   14002034e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140020355:	mov    eax,ebx
   140020357:	lea    r11,[rsp+0x60]
   14002035c:	mov    rbx,QWORD PTR [r11+0x10]
   140020360:	mov    rsi,QWORD PTR [r11+0x20]
   140020364:	mov    rsp,r11
   140020367:	pop    rdi
   140020368:	ret    
   140020369:	test   rsi,rsi
   14002036c:	je     0x140020379
   14002036e:	test   rdi,rdi
   140020371:	je     0x140020400
   140020377:	mov    BYTE PTR [rsi],al
   140020379:	test   rbx,rbx
   14002037c:	je     0x1400203d3
   14002037e:	mov    DWORD PTR [rbx],0x1
   140020384:	jmp    0x1400203d3
   140020386:	and    DWORD PTR [rsp+0x78],0x0
   14002038b:	lea    rcx,[rsp+0x78]
   140020390:	lea    r8,[rsp+0x88]
   140020398:	mov    QWORD PTR [rsp+0x38],rcx
   14002039d:	and    QWORD PTR [rsp+0x30],0x0
   1400203a3:	mov    ecx,DWORD PTR [rax+0x4]
   1400203a6:	mov    r9d,0x1
   1400203ac:	xor    edx,edx
   1400203ae:	mov    DWORD PTR [rsp+0x28],edi
   1400203b2:	mov    QWORD PTR [rsp+0x20],rsi
   1400203b7:	call   QWORD PTR [rip+0x6d73]        # 0x140027130
   1400203bd:	test   eax,eax
   1400203bf:	je     0x1400203da
   1400203c1:	cmp    DWORD PTR [rsp+0x78],0x0
   1400203c6:	jne    0x140020330
   1400203cc:	test   rbx,rbx
   1400203cf:	je     0x1400203d3
   1400203d1:	mov    DWORD PTR [rbx],eax
   1400203d3:	xor    ebx,ebx
   1400203d5:	jmp    0x140020342
   1400203da:	call   QWORD PTR [rip+0x6c80]        # 0x140027060
   1400203e0:	cmp    eax,0x7a
   1400203e3:	jne    0x140020330
   1400203e9:	test   rsi,rsi
   1400203ec:	je     0x140020400
   1400203ee:	test   rdi,rdi
   1400203f1:	je     0x140020400
   1400203f3:	mov    r8,rdi
   1400203f6:	xor    edx,edx
   1400203f8:	mov    rcx,rsi
   1400203fb:	call   0x140014d80
   140020400:	call   0x1400161e8
   140020405:	mov    ebx,0x22
   14002040a:	mov    DWORD PTR [rax],ebx
   14002040c:	call   0x140013f54
   140020411:	jmp    0x140020342
   140020416:	int3   
   140020417:	int3   
   140020418:	sub    rsp,0x38
   14002041c:	and    QWORD PTR [rsp+0x20],0x0
   140020422:	call   0x14002028c
   140020427:	add    rsp,0x38
   14002042b:	ret    
   14002042c:	mov    QWORD PTR [rsp+0x20],rbx
   140020431:	push   rbp
   140020432:	push   rsi
   140020433:	push   rdi
   140020434:	push   r12
   140020436:	push   r13
   140020438:	push   r14
   14002043a:	push   r15
   14002043c:	mov    rbp,rsp
   14002043f:	sub    rsp,0x80
   140020446:	mov    rax,QWORD PTR [rip+0x16bc3]        # 0x140037010
   14002044d:	xor    rax,rsp
   140020450:	mov    QWORD PTR [rbp-0x10],rax
   140020454:	xor    r12d,r12d
   140020457:	mov    rsi,r8
   14002045a:	mov    r14,rdx
   14002045d:	mov    r15,rcx
   140020460:	mov    ebx,r12d
   140020463:	mov    DWORD PTR [rbp-0x40],r12d
   140020467:	test   rcx,rcx
   14002046a:	je     0x140020478
   14002046c:	test   r8,r8
   14002046f:	jne    0x140020478
   140020471:	xor    eax,eax
   140020473:	jmp    0x140020733
   140020478:	test   rdx,rdx
   14002047b:	jne    0x140020496
   14002047d:	call   0x1400161e8
   140020482:	mov    DWORD PTR [rax],0x16
   140020488:	call   0x140013f54
   14002048d:	or     rax,0xffffffffffffffff
   140020491:	jmp    0x140020733
   140020496:	lea    rcx,[rbp-0x38]
   14002049a:	mov    rdx,r9
   14002049d:	call   0x140014b34
   1400204a2:	test   r15,r15
   1400204a5:	je     0x14002068c
   1400204ab:	mov    r13,QWORD PTR [rbp-0x38]
   1400204af:	cmp    QWORD PTR [r13+0x138],r12
   1400204b6:	jne    0x1400204ff
   1400204b8:	test   rsi,rsi
   1400204bb:	je     0x14002071c
   1400204c1:	mov    ecx,0xff
   1400204c6:	cmp    WORD PTR [r14],cx
   1400204ca:	ja     0x1400204f1
   1400204cc:	mov    al,BYTE PTR [r14]
   1400204cf:	mov    BYTE PTR [r15+rbx*1],al
   1400204d3:	movzx  eax,WORD PTR [r14]
   1400204d7:	add    r14,0x2
   1400204db:	test   ax,ax
   1400204de:	je     0x14002071c
   1400204e4:	inc    rbx
   1400204e7:	cmp    rbx,rsi
   1400204ea:	jb     0x1400204c6
   1400204ec:	jmp    0x14002071c
   1400204f1:	call   0x1400161e8
   1400204f6:	or     rbx,0xffffffffffffffff
   1400204fa:	jmp    0x140020716
   1400204ff:	cmp    DWORD PTR [r13+0xd4],0x1
   140020507:	jne    0x140020583
   140020509:	test   rsi,rsi
   14002050c:	je     0x14002053a
   14002050e:	mov    rax,r14
   140020511:	mov    rcx,rsi
   140020514:	cmp    WORD PTR [rax],r12w
   140020518:	je     0x140020523
   14002051a:	add    rax,0x2
   14002051e:	dec    rcx
   140020521:	jne    0x140020514
   140020523:	test   rcx,rcx
   140020526:	je     0x14002053a
   140020528:	cmp    WORD PTR [rax],r12w
   14002052c:	jne    0x14002053a
   14002052e:	mov    rsi,rax
   140020531:	sub    rsi,r14
   140020534:	sar    rsi,1
   140020537:	inc    rsi
   14002053a:	mov    ecx,DWORD PTR [r13+0x4]
   14002053e:	lea    rax,[rbp-0x40]
   140020542:	mov    r9d,esi
   140020545:	mov    QWORD PTR [rsp+0x38],rax
   14002054a:	mov    QWORD PTR [rsp+0x30],r12
   14002054f:	mov    r8,r14
   140020552:	xor    edx,edx
   140020554:	mov    DWORD PTR [rsp+0x28],esi
   140020558:	mov    QWORD PTR [rsp+0x20],r15
   14002055d:	call   QWORD PTR [rip+0x6bcd]        # 0x140027130
   140020563:	movsxd rbx,eax
   140020566:	test   eax,eax
   140020568:	je     0x1400204f1
   14002056a:	cmp    DWORD PTR [rbp-0x40],r12d
   14002056e:	jne    0x1400204f1
   140020570:	cmp    BYTE PTR [r15+rbx*1-0x1],r12b
   140020575:	jne    0x14002071c
   14002057b:	dec    rbx
   14002057e:	jmp    0x14002071c
   140020583:	mov    ecx,DWORD PTR [r13+0x4]
   140020587:	lea    rax,[rbp-0x40]
   14002058b:	or     rbx,0xffffffffffffffff
   14002058f:	mov    QWORD PTR [rsp+0x38],rax
   140020594:	mov    QWORD PTR [rsp+0x30],r12
   140020599:	mov    r9d,ebx
   14002059c:	mov    r8,r14
   14002059f:	xor    edx,edx
   1400205a1:	mov    DWORD PTR [rsp+0x28],esi
   1400205a5:	mov    QWORD PTR [rsp+0x20],r15
   1400205aa:	call   QWORD PTR [rip+0x6b80]        # 0x140027130
   1400205b0:	movsxd rdi,eax
   1400205b3:	test   eax,eax
   1400205b5:	je     0x1400205ca
   1400205b7:	cmp    DWORD PTR [rbp-0x40],r12d
   1400205bb:	jne    0x140020711
   1400205c1:	lea    rbx,[rdi-0x1]
   1400205c5:	jmp    0x14002071c
   1400205ca:	cmp    DWORD PTR [rbp-0x40],r12d
   1400205ce:	jne    0x140020711
   1400205d4:	call   QWORD PTR [rip+0x6a86]        # 0x140027060
   1400205da:	cmp    eax,0x7a
   1400205dd:	jne    0x140020711
   1400205e3:	test   rsi,rsi
   1400205e6:	je     0x14002071f
   1400205ec:	mov    ecx,DWORD PTR [r13+0x4]
   1400205f0:	lea    rax,[rbp-0x40]
   1400205f4:	mov    r9d,0x1
   1400205fa:	mov    QWORD PTR [rsp+0x38],rax
   1400205ff:	mov    eax,DWORD PTR [r13+0xd4]
   140020606:	mov    QWORD PTR [rsp+0x30],r12
   14002060b:	mov    DWORD PTR [rsp+0x28],eax
   14002060f:	lea    rax,[rbp-0x18]
   140020613:	mov    r8,r14
   140020616:	xor    edx,edx
   140020618:	mov    QWORD PTR [rsp+0x20],rax
   14002061d:	call   QWORD PTR [rip+0x6b0d]        # 0x140027130
   140020623:	test   eax,eax
   140020625:	je     0x140020711
   14002062b:	cmp    DWORD PTR [rbp-0x40],r12d
   14002062f:	jne    0x140020711
   140020635:	test   eax,eax
   140020637:	js     0x140020711
   14002063d:	movsxd rdx,eax
   140020640:	cmp    rdx,0x5
   140020644:	ja     0x140020711
   14002064a:	lea    rax,[rdx+rdi*1]
   14002064e:	cmp    rax,rsi
   140020651:	ja     0x14002071f
   140020657:	mov    rcx,r12
   14002065a:	test   rdx,rdx
   14002065d:	jle    0x14002067a
   14002065f:	mov    al,BYTE PTR [rbp+rcx*1-0x18]
   140020663:	mov    BYTE PTR [r15+rdi*1],al
   140020667:	test   al,al
   140020669:	je     0x14002071f
   14002066f:	inc    rcx
   140020672:	inc    rdi
   140020675:	cmp    rcx,rdx
   140020678:	jl     0x14002065f
   14002067a:	add    r14,0x2
   14002067e:	cmp    rdi,rsi
   140020681:	jae    0x14002071f
   140020687:	jmp    0x1400205ec
   14002068c:	mov    rax,QWORD PTR [rbp-0x38]
   140020690:	cmp    QWORD PTR [rax+0x138],r12
   140020697:	jne    0x1400206d2
   140020699:	movzx  eax,WORD PTR [r14]
   14002069d:	mov    rdi,r12
   1400206a0:	test   ax,ax
   1400206a3:	je     0x14002071f
   1400206a5:	mov    ecx,0xff
   1400206aa:	cmp    ax,cx
   1400206ad:	ja     0x1400206c1
   1400206af:	add    r14,0x2
   1400206b3:	inc    rdi
   1400206b6:	movzx  eax,WORD PTR [r14]
   1400206ba:	test   ax,ax
   1400206bd:	jne    0x1400206aa
   1400206bf:	jmp    0x14002071f
   1400206c1:	call   0x1400161e8
   1400206c6:	or     rdi,0xffffffffffffffff
   1400206ca:	mov    DWORD PTR [rax],0x2a
   1400206d0:	jmp    0x14002071f
   1400206d2:	lea    rcx,[rbp-0x40]
   1400206d6:	or     rbx,0xffffffffffffffff
   1400206da:	mov    r8,r14
   1400206dd:	mov    QWORD PTR [rsp+0x38],rcx
   1400206e2:	mov    ecx,DWORD PTR [rax+0x4]
   1400206e5:	mov    QWORD PTR [rsp+0x30],r12
   1400206ea:	mov    r9d,ebx
   1400206ed:	xor    edx,edx
   1400206ef:	mov    DWORD PTR [rsp+0x28],r12d
   1400206f4:	mov    QWORD PTR [rsp+0x20],r12
   1400206f9:	call   QWORD PTR [rip+0x6a31]        # 0x140027130
   1400206ff:	movsxd rdi,eax
   140020702:	test   eax,eax
   140020704:	je     0x140020711
   140020706:	cmp    DWORD PTR [rbp-0x40],r12d
   14002070a:	jne    0x140020711
   14002070c:	dec    rdi
   14002070f:	jmp    0x14002071f
   140020711:	call   0x1400161e8
   140020716:	mov    DWORD PTR [rax],0x2a
   14002071c:	mov    rdi,rbx
   14002071f:	cmp    BYTE PTR [rbp-0x20],r12b
   140020723:	je     0x140020730
   140020725:	mov    rcx,QWORD PTR [rbp-0x28]
   140020729:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140020730:	mov    rax,rdi
   140020733:	mov    rcx,QWORD PTR [rbp-0x10]
   140020737:	xor    rcx,rsp
   14002073a:	call   0x1400130a0
   14002073f:	mov    rbx,QWORD PTR [rsp+0xd8]
   140020747:	add    rsp,0x80
   14002074e:	pop    r15
   140020750:	pop    r14
   140020752:	pop    r13
   140020754:	pop    r12
   140020756:	pop    rdi
   140020757:	pop    rsi
   140020758:	pop    rbp
   140020759:	ret    
   14002075a:	int3   
   14002075b:	int3   
   14002075c:	mov    QWORD PTR [rsp+0x8],rbx
   140020761:	mov    QWORD PTR [rsp+0x10],rsi
   140020766:	mov    QWORD PTR [rsp+0x18],rdi
   14002076b:	push   r14
   14002076d:	sub    rsp,0x20
   140020771:	xor    r14d,r14d
   140020774:	mov    rax,r9
   140020777:	mov    rdi,r8
   14002077a:	mov    rbx,rdx
   14002077d:	mov    rsi,rcx
   140020780:	test   rdx,rdx
   140020783:	je     0x1400207d6
   140020785:	test   r8,r8
   140020788:	je     0x1400207db
   14002078a:	test   rdx,rdx
   14002078d:	je     0x140020792
   14002078f:	mov    BYTE PTR [rdx],r14b
   140020792:	test   rcx,rcx
   140020795:	je     0x14002079a
   140020797:	and    QWORD PTR [rcx],r14
   14002079a:	mov    r8,QWORD PTR [rsp+0x50]
   14002079f:	cmp    r8,rdi
   1400207a2:	cmova  r8,rdi
   1400207a6:	cmp    r8,0x7fffffff
   1400207ad:	ja     0x1400207db
   1400207af:	mov    r9,QWORD PTR [rsp+0x58]
   1400207b4:	mov    rdx,rax
   1400207b7:	mov    rcx,rbx
   1400207ba:	call   0x14002042c
   1400207bf:	cmp    rax,0xffffffffffffffff
   1400207c3:	jne    0x1400207f0
   1400207c5:	test   rbx,rbx
   1400207c8:	je     0x1400207cd
   1400207ca:	mov    BYTE PTR [rbx],r14b
   1400207cd:	call   0x1400161e8
   1400207d2:	mov    eax,DWORD PTR [rax]
   1400207d4:	jmp    0x140020832
   1400207d6:	test   r8,r8
   1400207d9:	je     0x14002078a
   1400207db:	call   0x1400161e8
   1400207e0:	mov    ebx,0x16
   1400207e5:	mov    DWORD PTR [rax],ebx
   1400207e7:	call   0x140013f54
   1400207ec:	mov    eax,ebx
   1400207ee:	jmp    0x140020832
   1400207f0:	inc    rax
   1400207f3:	test   rbx,rbx
   1400207f6:	je     0x140020827
   1400207f8:	cmp    rax,rdi
   1400207fb:	jbe    0x140020822
   1400207fd:	cmp    QWORD PTR [rsp+0x50],0xffffffffffffffff
   140020803:	je     0x140020819
   140020805:	mov    BYTE PTR [rbx],r14b
   140020808:	cmp    rdi,rax
   14002080b:	ja     0x140020819
   14002080d:	call   0x1400161e8
   140020812:	mov    ebx,0x22
   140020817:	jmp    0x1400207e5
   140020819:	mov    rax,rdi
   14002081c:	mov    r14d,0x50
   140020822:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   140020827:	test   rsi,rsi
   14002082a:	je     0x14002082f
   14002082c:	mov    QWORD PTR [rsi],rax
   14002082f:	mov    eax,r14d
   140020832:	mov    rbx,QWORD PTR [rsp+0x30]
   140020837:	mov    rsi,QWORD PTR [rsp+0x38]
   14002083c:	mov    rdi,QWORD PTR [rsp+0x40]
   140020841:	add    rsp,0x20
   140020845:	pop    r14
   140020847:	ret    
   140020848:	sub    rsp,0x38
   14002084c:	mov    rax,QWORD PTR [rsp+0x60]
   140020851:	and    QWORD PTR [rsp+0x28],0x0
   140020857:	mov    QWORD PTR [rsp+0x20],rax
   14002085c:	call   0x14002075c
   140020861:	add    rsp,0x38
   140020865:	ret    
   140020866:	int3   
   140020867:	int3   
   140020868:	rex push rbx
   14002086a:	sub    rsp,0x20
   14002086e:	mov    rbx,rcx
   140020871:	test   rcx,rcx
   140020874:	jne    0x140020880
   140020876:	add    rsp,0x20
   14002087a:	pop    rbx
   14002087b:	jmp    0x14002093c
   140020880:	call   0x1400208b4
   140020885:	test   eax,eax
   140020887:	je     0x14002088e
   140020889:	or     eax,0xffffffff
   14002088c:	jmp    0x1400208ae
   14002088e:	test   DWORD PTR [rbx+0x18],0x4000
   140020895:	je     0x1400208ac
   140020897:	mov    rcx,rbx
   14002089a:	call   0x14001ef08
   14002089f:	mov    ecx,eax
   1400208a1:	call   0x140023264
   1400208a6:	neg    eax
   1400208a8:	sbb    eax,eax
   1400208aa:	jmp    0x1400208ae
   1400208ac:	xor    eax,eax
   1400208ae:	add    rsp,0x20
   1400208b2:	pop    rbx
   1400208b3:	ret    
   1400208b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400208b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400208be:	push   rdi
   1400208bf:	sub    rsp,0x20
   1400208c3:	mov    eax,DWORD PTR [rcx+0x18]
   1400208c6:	xor    esi,esi
   1400208c8:	mov    rbx,rcx
   1400208cb:	and    al,0x3
   1400208cd:	cmp    al,0x2
   1400208cf:	jne    0x140020910
   1400208d1:	test   DWORD PTR [rcx+0x18],0x108
   1400208d8:	je     0x140020910
   1400208da:	mov    edi,DWORD PTR [rcx]
   1400208dc:	sub    edi,DWORD PTR [rcx+0x10]
   1400208df:	test   edi,edi
   1400208e1:	jle    0x140020910
   1400208e3:	call   0x14001ef08
   1400208e8:	mov    rdx,QWORD PTR [rbx+0x10]
   1400208ec:	mov    r8d,edi
   1400208ef:	mov    ecx,eax
   1400208f1:	call   0x14001ef90
   1400208f6:	cmp    eax,edi
   1400208f8:	jne    0x140020909
   1400208fa:	mov    eax,DWORD PTR [rbx+0x18]
   1400208fd:	test   al,al
   1400208ff:	jns    0x140020910
   140020901:	and    eax,0xfffffffd
   140020904:	mov    DWORD PTR [rbx+0x18],eax
   140020907:	jmp    0x140020910
   140020909:	or     DWORD PTR [rbx+0x18],0x20
   14002090d:	or     esi,0xffffffff
   140020910:	mov    rcx,QWORD PTR [rbx+0x10]
   140020914:	and    DWORD PTR [rbx+0x8],0x0
   140020918:	mov    eax,esi
   14002091a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002091f:	mov    QWORD PTR [rbx],rcx
   140020922:	mov    rbx,QWORD PTR [rsp+0x30]
   140020927:	add    rsp,0x20
   14002092b:	pop    rdi
   14002092c:	ret    
   14002092d:	int3   
   14002092e:	int3   
   14002092f:	int3   
   140020930:	mov    ecx,0x1
   140020935:	jmp    0x14002093c
   14002093a:	int3   
   14002093b:	int3   
   14002093c:	mov    QWORD PTR [rsp+0x8],rbx
   140020941:	mov    QWORD PTR [rsp+0x10],rsi
   140020946:	mov    QWORD PTR [rsp+0x18],rdi
   14002094b:	push   r13
   14002094d:	push   r14
   14002094f:	push   r15
   140020951:	sub    rsp,0x30
   140020955:	mov    r14d,ecx
   140020958:	xor    esi,esi
   14002095a:	xor    edi,edi
   14002095c:	lea    ecx,[rsi+0x1]
   14002095f:	call   0x14001cde8
   140020964:	nop
   140020965:	xor    ebx,ebx
   140020967:	or     r13d,0xffffffff
   14002096b:	mov    DWORD PTR [rsp+0x20],ebx
   14002096f:	cmp    ebx,DWORD PTR [rip+0x19a9b]        # 0x14003a410
   140020975:	jge    0x1400209f5
   140020977:	movsxd r15,ebx
   14002097a:	mov    rax,QWORD PTR [rip+0x19a87]        # 0x14003a408
   140020981:	mov    rdx,QWORD PTR [rax+r15*8]
   140020985:	test   rdx,rdx
   140020988:	je     0x1400209ee
   14002098a:	test   BYTE PTR [rdx+0x18],0x83
   14002098e:	je     0x1400209ee
   140020990:	mov    ecx,ebx
   140020992:	call   0x14001db5c
   140020997:	nop
   140020998:	mov    rax,QWORD PTR [rip+0x19a69]        # 0x14003a408
   14002099f:	mov    rcx,QWORD PTR [rax+r15*8]
   1400209a3:	test   BYTE PTR [rcx+0x18],0x83
   1400209a7:	je     0x1400209dc
   1400209a9:	cmp    r14d,0x1
   1400209ad:	jne    0x1400209c1
   1400209af:	call   0x140020868
   1400209b4:	cmp    eax,r13d
   1400209b7:	je     0x1400209dc
   1400209b9:	inc    esi
   1400209bb:	mov    DWORD PTR [rsp+0x24],esi
   1400209bf:	jmp    0x1400209dc
   1400209c1:	test   r14d,r14d
   1400209c4:	jne    0x1400209dc
   1400209c6:	test   BYTE PTR [rcx+0x18],0x2
   1400209ca:	je     0x1400209dc
   1400209cc:	call   0x140020868
   1400209d1:	cmp    eax,r13d
   1400209d4:	cmove  edi,r13d
   1400209d8:	mov    DWORD PTR [rsp+0x28],edi
   1400209dc:	mov    rdx,QWORD PTR [rip+0x19a25]        # 0x14003a408
   1400209e3:	mov    rdx,QWORD PTR [rdx+r15*8]
   1400209e7:	mov    ecx,ebx
   1400209e9:	call   0x14001dbe0
   1400209ee:	inc    ebx
   1400209f0:	jmp    0x14002096b
   1400209f5:	mov    ecx,0x1
   1400209fa:	call   0x14001cfd8
   1400209ff:	cmp    r14d,0x1
   140020a03:	cmove  edi,esi
   140020a06:	mov    eax,edi
   140020a08:	mov    rbx,QWORD PTR [rsp+0x50]
   140020a0d:	mov    rsi,QWORD PTR [rsp+0x58]
   140020a12:	mov    rdi,QWORD PTR [rsp+0x60]
   140020a17:	add    rsp,0x30
   140020a1b:	pop    r15
   140020a1d:	pop    r14
   140020a1f:	pop    r13
   140020a21:	ret    
   140020a22:	int3   
   140020a23:	int3   
   140020a24:	mov    QWORD PTR [rsp+0x8],rbx
   140020a29:	mov    QWORD PTR [rsp+0x10],rsi
   140020a2e:	push   rdi
   140020a2f:	sub    rsp,0x30
   140020a33:	xor    edi,edi
   140020a35:	lea    ecx,[rdi+0x1]
   140020a38:	call   0x14001cde8
   140020a3d:	nop
   140020a3e:	lea    ebx,[rdi+0x3]
   140020a41:	mov    DWORD PTR [rsp+0x20],ebx
   140020a45:	cmp    ebx,DWORD PTR [rip+0x199c5]        # 0x14003a410
   140020a4b:	jge    0x140020ab0
   140020a4d:	movsxd rsi,ebx
   140020a50:	mov    rax,QWORD PTR [rip+0x199b1]        # 0x14003a408
   140020a57:	mov    rcx,QWORD PTR [rax+rsi*8]
   140020a5b:	test   rcx,rcx
   140020a5e:	je     0x140020aac
   140020a60:	test   BYTE PTR [rcx+0x18],0x83
   140020a64:	je     0x140020a76
   140020a66:	call   0x1400233b8
   140020a6b:	cmp    eax,0xffffffff
   140020a6e:	je     0x140020a76
   140020a70:	inc    edi
   140020a72:	mov    DWORD PTR [rsp+0x24],edi
   140020a76:	cmp    ebx,0x14
   140020a79:	jl     0x140020aac
   140020a7b:	mov    rax,QWORD PTR [rip+0x19986]        # 0x14003a408
   140020a82:	mov    rcx,QWORD PTR [rax+rsi*8]
   140020a86:	add    rcx,0x30
   140020a8a:	call   QWORD PTR [rip+0x6608]        # 0x140027098
   140020a90:	mov    rcx,QWORD PTR [rip+0x19971]        # 0x14003a408
   140020a97:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140020a9b:	call   0x14001392c
   140020aa0:	mov    rax,QWORD PTR [rip+0x19961]        # 0x14003a408
   140020aa7:	and    QWORD PTR [rax+rsi*8],0x0
   140020aac:	inc    ebx
   140020aae:	jmp    0x140020a41
   140020ab0:	mov    ecx,0x1
   140020ab5:	call   0x14001cfd8
   140020aba:	mov    eax,edi
   140020abc:	mov    rbx,QWORD PTR [rsp+0x40]
   140020ac1:	mov    rsi,QWORD PTR [rsp+0x48]
   140020ac6:	add    rsp,0x30
   140020aca:	pop    rdi
   140020acb:	ret    
   140020acc:	mov    QWORD PTR [rsp+0x10],rsi
   140020ad1:	push   rbp
   140020ad2:	push   rdi
   140020ad3:	push   r14
   140020ad5:	mov    rbp,rsp
   140020ad8:	sub    rsp,0x60
   140020adc:	movsxd rdi,ecx
   140020adf:	mov    r14d,edx
   140020ae2:	lea    rcx,[rbp-0x20]
   140020ae6:	mov    rdx,r8
   140020ae9:	call   0x140014b34
   140020aee:	lea    eax,[rdi+0x1]
   140020af1:	cmp    eax,0x100
   140020af6:	ja     0x140020b09
   140020af8:	mov    rax,QWORD PTR [rbp-0x20]
   140020afc:	mov    rcx,QWORD PTR [rax+0x108]
   140020b03:	movzx  eax,WORD PTR [rcx+rdi*2]
   140020b07:	jmp    0x140020b82
   140020b09:	mov    esi,edi
   140020b0b:	lea    rdx,[rbp-0x20]
   140020b0f:	sar    esi,0x8
   140020b12:	movzx  ecx,sil
   140020b16:	call   0x14001fa38
   140020b1b:	mov    edx,0x1
   140020b20:	test   eax,eax
   140020b22:	je     0x140020b36
   140020b24:	mov    BYTE PTR [rbp+0x38],sil
   140020b28:	mov    BYTE PTR [rbp+0x39],dil
   140020b2c:	mov    BYTE PTR [rbp+0x3a],0x0
   140020b30:	lea    r9d,[rdx+0x1]
   140020b34:	jmp    0x140020b41
   140020b36:	mov    BYTE PTR [rbp+0x38],dil
   140020b3a:	mov    BYTE PTR [rbp+0x39],0x0
   140020b3e:	mov    r9d,edx
   140020b41:	mov    rax,QWORD PTR [rbp-0x20]
   140020b45:	mov    DWORD PTR [rsp+0x30],edx
   140020b49:	lea    r8,[rbp+0x38]
   140020b4d:	mov    ecx,DWORD PTR [rax+0x4]
   140020b50:	lea    rax,[rbp+0x20]
   140020b54:	mov    DWORD PTR [rsp+0x28],ecx
   140020b58:	lea    rcx,[rbp-0x20]
   140020b5c:	mov    QWORD PTR [rsp+0x20],rax
   140020b61:	call   0x14001ee8c
   140020b66:	test   eax,eax
   140020b68:	jne    0x140020b7e
   140020b6a:	cmp    BYTE PTR [rbp-0x8],al
   140020b6d:	je     0x140020b7a
   140020b6f:	mov    rax,QWORD PTR [rbp-0x10]
   140020b73:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140020b7a:	xor    eax,eax
   140020b7c:	jmp    0x140020b96
   140020b7e:	movzx  eax,WORD PTR [rbp+0x20]
   140020b82:	and    eax,r14d
   140020b85:	cmp    BYTE PTR [rbp-0x8],0x0
   140020b89:	je     0x140020b96
   140020b8b:	mov    rcx,QWORD PTR [rbp-0x10]
   140020b8f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140020b96:	mov    rsi,QWORD PTR [rsp+0x88]
   140020b9e:	add    rsp,0x60
   140020ba2:	pop    r14
   140020ba4:	pop    rdi
   140020ba5:	pop    rbp
   140020ba6:	ret    
   140020ba7:	int3   
   140020ba8:	mov    QWORD PTR [rsp+0x8],rbx
   140020bad:	mov    QWORD PTR [rsp+0x18],rsi
   140020bb2:	mov    QWORD PTR [rsp+0x20],rdi
   140020bb7:	push   rbp
   140020bb8:	push   r12
   140020bba:	push   r13
   140020bbc:	push   r14
   140020bbe:	push   r15
   140020bc0:	mov    rbp,rsp
   140020bc3:	sub    rsp,0x60
   140020bc7:	mov    rax,QWORD PTR [rip+0x16442]        # 0x140037010
   140020bce:	xor    rax,rsp
   140020bd1:	mov    QWORD PTR [rbp-0x8],rax
   140020bd5:	movzx  eax,WORD PTR [rcx+0xa]
   140020bd9:	movzx  r9d,WORD PTR [rcx]
   140020bdd:	xor    ebx,ebx
   140020bdf:	mov    edi,eax
   140020be1:	and    eax,0x8000
   140020be6:	shl    r9d,0x10
   140020bea:	mov    DWORD PTR [rbp-0x3c],eax
   140020bed:	mov    eax,DWORD PTR [rcx+0x6]
   140020bf0:	and    edi,0x7fff
   140020bf6:	mov    DWORD PTR [rbp-0x18],eax
   140020bf9:	mov    eax,DWORD PTR [rcx+0x2]
   140020bfc:	sub    edi,0x3fff
   140020c02:	mov    r12d,0x1f
   140020c08:	mov    QWORD PTR [rbp-0x30],rdx
   140020c0c:	mov    DWORD PTR [rbp-0x28],r9d
   140020c10:	mov    DWORD PTR [rbp-0x14],eax
   140020c13:	mov    DWORD PTR [rbp-0x10],r9d
   140020c17:	lea    esi,[rbx+0x1]
   140020c1a:	lea    r14d,[r12-0x1c]
   140020c1f:	cmp    edi,0xffffc001
   140020c25:	jne    0x140020c50
   140020c27:	mov    r8d,ebx
   140020c2a:	mov    eax,ebx
   140020c2c:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   140020c30:	jne    0x140020c3f
   140020c32:	add    rax,rsi
   140020c35:	cmp    rax,r14
   140020c38:	jl     0x140020c2c
   140020c3a:	jmp    0x1400210f6
   140020c3f:	mov    QWORD PTR [rbp-0x18],rbx
   140020c43:	mov    DWORD PTR [rbp-0x10],ebx
   140020c46:	mov    ebx,0x2
   140020c4b:	jmp    0x1400210f6
   140020c50:	mov    rax,QWORD PTR [rbp-0x18]
   140020c54:	mov    r8d,r12d
   140020c57:	or     r15d,0xffffffff
   140020c5b:	mov    QWORD PTR [rbp-0x20],rax
   140020c5f:	mov    eax,DWORD PTR [rip+0x17873]        # 0x1400384d8
   140020c65:	mov    DWORD PTR [rbp-0x40],edi
   140020c68:	dec    eax
   140020c6a:	mov    r13d,ebx
   140020c6d:	mov    DWORD PTR [rbp-0x38],eax
   140020c70:	inc    eax
   140020c72:	cdq    
   140020c73:	and    edx,r12d
   140020c76:	add    eax,edx
   140020c78:	mov    r10d,eax
   140020c7b:	and    eax,r12d
   140020c7e:	sar    r10d,0x5
   140020c82:	sub    eax,edx
   140020c84:	sub    r8d,eax
   140020c87:	movsxd r11,r10d
   140020c8a:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   140020c8f:	mov    DWORD PTR [rbp-0x24],r8d
   140020c93:	bt     ecx,r8d
   140020c97:	jae    0x140020d3b
   140020c9d:	mov    ecx,r8d
   140020ca0:	mov    eax,r15d
   140020ca3:	movsxd rdx,r10d
   140020ca6:	shl    eax,cl
   140020ca8:	not    eax
   140020caa:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   140020cae:	jne    0x140020cc9
   140020cb0:	lea    eax,[r10+0x1]
   140020cb4:	movsxd rcx,eax
   140020cb7:	jmp    0x140020cc2
   140020cb9:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   140020cbd:	jne    0x140020cc9
   140020cbf:	add    rcx,rsi
   140020cc2:	cmp    rcx,r14
   140020cc5:	jl     0x140020cb9
   140020cc7:	jmp    0x140020d3b
   140020cc9:	mov    eax,DWORD PTR [rbp-0x38]
   140020ccc:	mov    ecx,r12d
   140020ccf:	cdq    
   140020cd0:	and    edx,r12d
   140020cd3:	add    eax,edx
   140020cd5:	mov    r8d,eax
   140020cd8:	and    eax,r12d
   140020cdb:	sub    eax,edx
   140020cdd:	sar    r8d,0x5
   140020ce1:	mov    edx,esi
   140020ce3:	sub    ecx,eax
   140020ce5:	movsxd r11,r8d
   140020ce8:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   140020ced:	shl    edx,cl
   140020cef:	lea    ecx,[rax+rdx*1]
   140020cf2:	cmp    ecx,eax
   140020cf4:	jb     0x140020cfa
   140020cf6:	cmp    ecx,edx
   140020cf8:	jae    0x140020cfd
   140020cfa:	mov    r13d,esi
   140020cfd:	lea    eax,[r8-0x1]
   140020d01:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   140020d06:	movsxd rdx,eax
   140020d09:	test   eax,eax
   140020d0b:	js     0x140020d34
   140020d0d:	test   r13d,r13d
   140020d10:	je     0x140020d34
   140020d12:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140020d16:	mov    r13d,ebx
   140020d19:	lea    r8d,[rax+0x1]
   140020d1d:	cmp    r8d,eax
   140020d20:	jb     0x140020d27
   140020d22:	cmp    r8d,esi
   140020d25:	jae    0x140020d2a
   140020d27:	mov    r13d,esi
   140020d2a:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   140020d2f:	sub    rdx,rsi
   140020d32:	jns    0x140020d0d
   140020d34:	mov    r8d,DWORD PTR [rbp-0x24]
   140020d38:	movsxd r11,r10d
   140020d3b:	mov    ecx,r8d
   140020d3e:	mov    eax,r15d
   140020d41:	shl    eax,cl
   140020d43:	and    DWORD PTR [rbp+r11*4-0x18],eax
   140020d48:	lea    eax,[r10+0x1]
   140020d4c:	movsxd rdx,eax
   140020d4f:	cmp    rdx,r14
   140020d52:	jge    0x140020d71
   140020d54:	lea    rcx,[rbp-0x18]
   140020d58:	mov    r8,r14
   140020d5b:	sub    r8,rdx
   140020d5e:	lea    rcx,[rcx+rdx*4]
   140020d62:	xor    edx,edx
   140020d64:	shl    r8,0x2
   140020d68:	call   0x140014d80
   140020d6d:	mov    r9d,DWORD PTR [rbp-0x28]
   140020d71:	test   r13d,r13d
   140020d74:	je     0x140020d78
   140020d76:	add    edi,esi
   140020d78:	mov    ecx,DWORD PTR [rip+0x17756]        # 0x1400384d4
   140020d7e:	mov    eax,ecx
   140020d80:	sub    eax,DWORD PTR [rip+0x17752]        # 0x1400384d8
   140020d86:	cmp    edi,eax
   140020d88:	jge    0x140020d9e
   140020d8a:	mov    QWORD PTR [rbp-0x18],rbx
   140020d8e:	mov    DWORD PTR [rbp-0x10],ebx
   140020d91:	mov    r8d,ebx
   140020d94:	mov    ebx,0x2
   140020d99:	jmp    0x1400210f2
   140020d9e:	cmp    edi,ecx
   140020da0:	jg     0x140020fd7
   140020da6:	sub    ecx,DWORD PTR [rbp-0x40]
   140020da9:	mov    rax,QWORD PTR [rbp-0x20]
   140020dad:	mov    r10d,r15d
   140020db0:	mov    QWORD PTR [rbp-0x18],rax
   140020db4:	mov    eax,ecx
   140020db6:	mov    DWORD PTR [rbp-0x10],r9d
   140020dba:	cdq    
   140020dbb:	mov    r11,r14
   140020dbe:	mov    r9d,ebx
   140020dc1:	and    edx,r12d
   140020dc4:	lea    r8,[rbp-0x18]
   140020dc8:	add    eax,edx
   140020dca:	mov    r13d,eax
   140020dcd:	and    eax,r12d
   140020dd0:	sub    eax,edx
   140020dd2:	sar    r13d,0x5
   140020dd6:	mov    ecx,eax
   140020dd8:	mov    edi,eax
   140020dda:	mov    eax,0x20
   140020ddf:	shl    r10d,cl
   140020de2:	sub    eax,ecx
   140020de4:	mov    r14d,eax
   140020de7:	not    r10d
   140020dea:	mov    eax,DWORD PTR [r8]
   140020ded:	mov    ecx,edi
   140020def:	mov    edx,eax
   140020df1:	shr    eax,cl
   140020df3:	mov    ecx,r14d
   140020df6:	or     eax,r9d
   140020df9:	and    edx,r10d
   140020dfc:	mov    r9d,edx
   140020dff:	mov    DWORD PTR [r8],eax
   140020e02:	lea    r8,[r8+0x4]
   140020e06:	shl    r9d,cl
   140020e09:	sub    r11,rsi
   140020e0c:	jne    0x140020dea
   140020e0e:	movsxd r10,r13d
   140020e11:	lea    edi,[r11+0x2]
   140020e15:	lea    r14d,[r11+0x3]
   140020e19:	mov    r9,r10
   140020e1c:	mov    r8d,edi
   140020e1f:	neg    r9
   140020e22:	cmp    r8,r10
   140020e25:	jl     0x140020e3c
   140020e27:	mov    rdx,r8
   140020e2a:	shl    rdx,0x2
   140020e2e:	lea    rax,[rdx+r9*4]
   140020e32:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140020e36:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140020e3a:	jmp    0x140020e41
   140020e3c:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140020e41:	sub    r8,rsi
   140020e44:	jns    0x140020e22
   140020e46:	mov    r8d,DWORD PTR [rbp-0x38]
   140020e4a:	mov    r11d,r12d
   140020e4d:	lea    eax,[r8+0x1]
   140020e51:	cdq    
   140020e52:	and    edx,r12d
   140020e55:	add    eax,edx
   140020e57:	mov    r9d,eax
   140020e5a:	and    eax,r12d
   140020e5d:	sub    eax,edx
   140020e5f:	sar    r9d,0x5
   140020e63:	sub    r11d,eax
   140020e66:	movsxd rax,r9d
   140020e69:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   140020e6d:	bt     ecx,r11d
   140020e71:	jae    0x140020f0f
   140020e77:	mov    ecx,r11d
   140020e7a:	mov    eax,r15d
   140020e7d:	movsxd rdx,r9d
   140020e80:	shl    eax,cl
   140020e82:	not    eax
   140020e84:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   140020e88:	jne    0x140020ea3
   140020e8a:	lea    eax,[r9+0x1]
   140020e8e:	movsxd rcx,eax
   140020e91:	jmp    0x140020e9c
   140020e93:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   140020e97:	jne    0x140020ea3
   140020e99:	add    rcx,rsi
   140020e9c:	cmp    rcx,r14
   140020e9f:	jl     0x140020e93
   140020ea1:	jmp    0x140020f0f
   140020ea3:	mov    eax,r8d
   140020ea6:	mov    ecx,r12d
   140020ea9:	cdq    
   140020eaa:	and    edx,r12d
   140020ead:	add    eax,edx
   140020eaf:	mov    r10d,eax
   140020eb2:	and    eax,r12d
   140020eb5:	sub    eax,edx
   140020eb7:	sar    r10d,0x5
   140020ebb:	mov    edx,esi
   140020ebd:	sub    ecx,eax
   140020ebf:	movsxd r13,r10d
   140020ec2:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   140020ec7:	shl    edx,cl
   140020ec9:	mov    ecx,ebx
   140020ecb:	lea    r8d,[rax+rdx*1]
   140020ecf:	cmp    r8d,eax
   140020ed2:	jb     0x140020ed9
   140020ed4:	cmp    r8d,edx
   140020ed7:	jae    0x140020edb
   140020ed9:	mov    ecx,esi
   140020edb:	lea    eax,[r10-0x1]
   140020edf:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   140020ee4:	movsxd rdx,eax
   140020ee7:	test   eax,eax
   140020ee9:	js     0x140020f0f
   140020eeb:	test   ecx,ecx
   140020eed:	je     0x140020f0f
   140020eef:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   140020ef3:	mov    ecx,ebx
   140020ef5:	lea    r8d,[rax+0x1]
   140020ef9:	cmp    r8d,eax
   140020efc:	jb     0x140020f03
   140020efe:	cmp    r8d,esi
   140020f01:	jae    0x140020f05
   140020f03:	mov    ecx,esi
   140020f05:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   140020f0a:	sub    rdx,rsi
   140020f0d:	jns    0x140020eeb
   140020f0f:	mov    ecx,r11d
   140020f12:	mov    eax,r15d
   140020f15:	shl    eax,cl
   140020f17:	movsxd rcx,r9d
   140020f1a:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   140020f1e:	lea    eax,[r9+0x1]
   140020f22:	movsxd rdx,eax
   140020f25:	cmp    rdx,r14
   140020f28:	jge    0x140020f43
   140020f2a:	lea    rcx,[rbp-0x18]
   140020f2e:	mov    r8,r14
   140020f31:	sub    r8,rdx
   140020f34:	lea    rcx,[rcx+rdx*4]
   140020f38:	xor    edx,edx
   140020f3a:	shl    r8,0x2
   140020f3e:	call   0x140014d80
   140020f43:	mov    eax,DWORD PTR [rip+0x17593]        # 0x1400384dc
   140020f49:	mov    r13d,0x20
   140020f4f:	mov    r9d,ebx
   140020f52:	inc    eax
   140020f54:	lea    r8,[rbp-0x18]
   140020f58:	cdq    
   140020f59:	and    edx,r12d
   140020f5c:	add    eax,edx
   140020f5e:	mov    r10d,eax
   140020f61:	and    eax,r12d
   140020f64:	sub    eax,edx
   140020f66:	sar    r10d,0x5
   140020f6a:	mov    ecx,eax
   140020f6c:	mov    r11d,eax
   140020f6f:	shl    r15d,cl
   140020f72:	sub    r13d,eax
   140020f75:	not    r15d
   140020f78:	mov    eax,DWORD PTR [r8]
   140020f7b:	mov    ecx,r11d
   140020f7e:	mov    edx,eax
   140020f80:	shr    eax,cl
   140020f82:	mov    ecx,r13d
   140020f85:	or     eax,r9d
   140020f88:	and    edx,r15d
   140020f8b:	mov    r9d,edx
   140020f8e:	mov    DWORD PTR [r8],eax
   140020f91:	lea    r8,[r8+0x4]
   140020f95:	shl    r9d,cl
   140020f98:	sub    r14,rsi
   140020f9b:	jne    0x140020f78
   140020f9d:	movsxd r10,r10d
   140020fa0:	mov    r8,rdi
   140020fa3:	mov    r9,r10
   140020fa6:	neg    r9
   140020fa9:	cmp    r8,r10
   140020fac:	jl     0x140020fc3
   140020fae:	mov    rdx,r8
   140020fb1:	shl    rdx,0x2
   140020fb5:	lea    rax,[rdx+r9*4]
   140020fb9:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140020fbd:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140020fc1:	jmp    0x140020fc8
   140020fc3:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140020fc8:	sub    r8,rsi
   140020fcb:	jns    0x140020fa9
   140020fcd:	mov    r8d,ebx
   140020fd0:	mov    ebx,edi
   140020fd2:	jmp    0x1400210f2
   140020fd7:	mov    eax,DWORD PTR [rip+0x174ff]        # 0x1400384dc
   140020fdd:	mov    r10d,DWORD PTR [rip+0x174ec]        # 0x1400384d0
   140020fe4:	mov    r13d,0x20
   140020fea:	cdq    
   140020feb:	and    edx,r12d
   140020fee:	add    eax,edx
   140020ff0:	mov    r11d,eax
   140020ff3:	and    eax,r12d
   140020ff6:	sub    eax,edx
   140020ff8:	sar    r11d,0x5
   140020ffc:	mov    ecx,eax
   140020ffe:	shl    r15d,cl
   140021001:	not    r15d
   140021004:	cmp    edi,r10d
   140021007:	jl     0x140021083
   140021009:	mov    QWORD PTR [rbp-0x18],rbx
   14002100d:	bts    DWORD PTR [rbp-0x18],0x1f
   140021012:	mov    DWORD PTR [rbp-0x10],ebx
   140021015:	sub    r13d,eax
   140021018:	mov    edi,eax
   14002101a:	mov    r9d,ebx
   14002101d:	lea    r8,[rbp-0x18]
   140021021:	mov    eax,DWORD PTR [r8]
   140021024:	mov    ecx,edi
   140021026:	mov    edx,r15d
   140021029:	and    edx,eax
   14002102b:	shr    eax,cl
   14002102d:	mov    ecx,r13d
   140021030:	or     eax,r9d
   140021033:	mov    r9d,edx
   140021036:	shl    r9d,cl
   140021039:	mov    DWORD PTR [r8],eax
   14002103c:	lea    r8,[r8+0x4]
   140021040:	sub    r14,rsi
   140021043:	jne    0x140021021
   140021045:	movsxd r9,r11d
   140021048:	lea    edi,[r14+0x2]
   14002104c:	mov    r8,r9
   14002104f:	neg    r8
   140021052:	cmp    rdi,r9
   140021055:	jl     0x14002106c
   140021057:	mov    rdx,rdi
   14002105a:	shl    rdx,0x2
   14002105e:	lea    rax,[rdx+r8*4]
   140021062:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140021066:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002106a:	jmp    0x140021070
   14002106c:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140021070:	sub    rdi,rsi
   140021073:	jns    0x140021052
   140021075:	mov    r8d,DWORD PTR [rip+0x17468]        # 0x1400384e4
   14002107c:	mov    ebx,esi
   14002107e:	add    r8d,r10d
   140021081:	jmp    0x1400210f2
   140021083:	mov    r8d,DWORD PTR [rip+0x1745a]        # 0x1400384e4
   14002108a:	btr    DWORD PTR [rbp-0x18],0x1f
   14002108f:	mov    r10d,ebx
   140021092:	add    r8d,edi
   140021095:	mov    edi,eax
   140021097:	sub    r13d,eax
   14002109a:	lea    r9,[rbp-0x18]
   14002109e:	mov    eax,DWORD PTR [r9]
   1400210a1:	mov    ecx,edi
   1400210a3:	mov    edx,eax
   1400210a5:	shr    eax,cl
   1400210a7:	mov    ecx,r13d
   1400210aa:	or     eax,r10d
   1400210ad:	and    edx,r15d
   1400210b0:	mov    r10d,edx
   1400210b3:	mov    DWORD PTR [r9],eax
   1400210b6:	lea    r9,[r9+0x4]
   1400210ba:	shl    r10d,cl
   1400210bd:	sub    r14,rsi
   1400210c0:	jne    0x14002109e
   1400210c2:	movsxd r10,r11d
   1400210c5:	lea    edi,[r14+0x2]
   1400210c9:	mov    r9,r10
   1400210cc:	neg    r9
   1400210cf:	cmp    rdi,r10
   1400210d2:	jl     0x1400210e9
   1400210d4:	mov    rdx,rdi
   1400210d7:	shl    rdx,0x2
   1400210db:	lea    rax,[rdx+r9*4]
   1400210df:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   1400210e3:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   1400210e7:	jmp    0x1400210ed
   1400210e9:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   1400210ed:	sub    rdi,rsi
   1400210f0:	jns    0x1400210cf
   1400210f2:	mov    rdx,QWORD PTR [rbp-0x30]
   1400210f6:	sub    r12d,DWORD PTR [rip+0x173df]        # 0x1400384dc
   1400210fd:	mov    cl,r12b
   140021100:	shl    r8d,cl
   140021103:	neg    DWORD PTR [rbp-0x3c]
   140021106:	sbb    eax,eax
   140021108:	and    eax,0x80000000
   14002110d:	or     r8d,eax
   140021110:	mov    eax,DWORD PTR [rip+0x173ca]        # 0x1400384e0
   140021116:	or     r8d,DWORD PTR [rbp-0x18]
   14002111a:	cmp    eax,0x40
   14002111d:	jne    0x14002112a
   14002111f:	mov    eax,DWORD PTR [rbp-0x14]
   140021122:	mov    DWORD PTR [rdx+0x4],r8d
   140021126:	mov    DWORD PTR [rdx],eax
   140021128:	jmp    0x140021132
   14002112a:	cmp    eax,0x20
   14002112d:	jne    0x140021132
   14002112f:	mov    DWORD PTR [rdx],r8d
   140021132:	mov    eax,ebx
   140021134:	mov    rcx,QWORD PTR [rbp-0x8]
   140021138:	xor    rcx,rsp
   14002113b:	call   0x1400130a0
   140021140:	lea    r11,[rsp+0x60]
   140021145:	mov    rbx,QWORD PTR [r11+0x30]
   140021149:	mov    rsi,QWORD PTR [r11+0x40]
   14002114d:	mov    rdi,QWORD PTR [r11+0x48]
   140021151:	mov    rsp,r11
   140021154:	pop    r15
   140021156:	pop    r14
   140021158:	pop    r13
   14002115a:	pop    r12
   14002115c:	pop    rbp
   14002115d:	ret    
   14002115e:	int3   
   14002115f:	int3   
   140021160:	mov    QWORD PTR [rsp+0x8],rbx
   140021165:	mov    QWORD PTR [rsp+0x18],rsi
   14002116a:	mov    QWORD PTR [rsp+0x20],rdi
   14002116f:	push   rbp
   140021170:	push   r12
   140021172:	push   r13
   140021174:	push   r14
   140021176:	push   r15
   140021178:	mov    rbp,rsp
   14002117b:	sub    rsp,0x60
   14002117f:	mov    rax,QWORD PTR [rip+0x15e8a]        # 0x140037010
   140021186:	xor    rax,rsp
   140021189:	mov    QWORD PTR [rbp-0x8],rax
   14002118d:	movzx  eax,WORD PTR [rcx+0xa]
   140021191:	movzx  r9d,WORD PTR [rcx]
   140021195:	xor    ebx,ebx
   140021197:	mov    edi,eax
   140021199:	and    eax,0x8000
   14002119e:	shl    r9d,0x10
   1400211a2:	mov    DWORD PTR [rbp-0x3c],eax
   1400211a5:	mov    eax,DWORD PTR [rcx+0x6]
   1400211a8:	and    edi,0x7fff
   1400211ae:	mov    DWORD PTR [rbp-0x18],eax
   1400211b1:	mov    eax,DWORD PTR [rcx+0x2]
   1400211b4:	sub    edi,0x3fff
   1400211ba:	mov    r12d,0x1f
   1400211c0:	mov    QWORD PTR [rbp-0x30],rdx
   1400211c4:	mov    DWORD PTR [rbp-0x28],r9d
   1400211c8:	mov    DWORD PTR [rbp-0x14],eax
   1400211cb:	mov    DWORD PTR [rbp-0x10],r9d
   1400211cf:	lea    esi,[rbx+0x1]
   1400211d2:	lea    r14d,[r12-0x1c]
   1400211d7:	cmp    edi,0xffffc001
   1400211dd:	jne    0x140021208
   1400211df:	mov    r8d,ebx
   1400211e2:	mov    eax,ebx
   1400211e4:	cmp    DWORD PTR [rbp+rax*4-0x18],ebx
   1400211e8:	jne    0x1400211f7
   1400211ea:	add    rax,rsi
   1400211ed:	cmp    rax,r14
   1400211f0:	jl     0x1400211e4
   1400211f2:	jmp    0x1400216ae
   1400211f7:	mov    QWORD PTR [rbp-0x18],rbx
   1400211fb:	mov    DWORD PTR [rbp-0x10],ebx
   1400211fe:	mov    ebx,0x2
   140021203:	jmp    0x1400216ae
   140021208:	mov    rax,QWORD PTR [rbp-0x18]
   14002120c:	mov    r8d,r12d
   14002120f:	or     r15d,0xffffffff
   140021213:	mov    QWORD PTR [rbp-0x20],rax
   140021217:	mov    eax,DWORD PTR [rip+0x172d3]        # 0x1400384f0
   14002121d:	mov    DWORD PTR [rbp-0x40],edi
   140021220:	dec    eax
   140021222:	mov    r13d,ebx
   140021225:	mov    DWORD PTR [rbp-0x38],eax
   140021228:	inc    eax
   14002122a:	cdq    
   14002122b:	and    edx,r12d
   14002122e:	add    eax,edx
   140021230:	mov    r10d,eax
   140021233:	and    eax,r12d
   140021236:	sar    r10d,0x5
   14002123a:	sub    eax,edx
   14002123c:	sub    r8d,eax
   14002123f:	movsxd r11,r10d
   140021242:	mov    ecx,DWORD PTR [rbp+r11*4-0x18]
   140021247:	mov    DWORD PTR [rbp-0x24],r8d
   14002124b:	bt     ecx,r8d
   14002124f:	jae    0x1400212f3
   140021255:	mov    ecx,r8d
   140021258:	mov    eax,r15d
   14002125b:	movsxd rdx,r10d
   14002125e:	shl    eax,cl
   140021260:	not    eax
   140021262:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   140021266:	jne    0x140021281
   140021268:	lea    eax,[r10+0x1]
   14002126c:	movsxd rcx,eax
   14002126f:	jmp    0x14002127a
   140021271:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   140021275:	jne    0x140021281
   140021277:	add    rcx,rsi
   14002127a:	cmp    rcx,r14
   14002127d:	jl     0x140021271
   14002127f:	jmp    0x1400212f3
   140021281:	mov    eax,DWORD PTR [rbp-0x38]
   140021284:	mov    ecx,r12d
   140021287:	cdq    
   140021288:	and    edx,r12d
   14002128b:	add    eax,edx
   14002128d:	mov    r8d,eax
   140021290:	and    eax,r12d
   140021293:	sub    eax,edx
   140021295:	sar    r8d,0x5
   140021299:	mov    edx,esi
   14002129b:	sub    ecx,eax
   14002129d:	movsxd r11,r8d
   1400212a0:	mov    eax,DWORD PTR [rbp+r11*4-0x18]
   1400212a5:	shl    edx,cl
   1400212a7:	lea    ecx,[rax+rdx*1]
   1400212aa:	cmp    ecx,eax
   1400212ac:	jb     0x1400212b2
   1400212ae:	cmp    ecx,edx
   1400212b0:	jae    0x1400212b5
   1400212b2:	mov    r13d,esi
   1400212b5:	lea    eax,[r8-0x1]
   1400212b9:	mov    DWORD PTR [rbp+r11*4-0x18],ecx
   1400212be:	movsxd rdx,eax
   1400212c1:	test   eax,eax
   1400212c3:	js     0x1400212ec
   1400212c5:	test   r13d,r13d
   1400212c8:	je     0x1400212ec
   1400212ca:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   1400212ce:	mov    r13d,ebx
   1400212d1:	lea    r8d,[rax+0x1]
   1400212d5:	cmp    r8d,eax
   1400212d8:	jb     0x1400212df
   1400212da:	cmp    r8d,esi
   1400212dd:	jae    0x1400212e2
   1400212df:	mov    r13d,esi
   1400212e2:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   1400212e7:	sub    rdx,rsi
   1400212ea:	jns    0x1400212c5
   1400212ec:	mov    r8d,DWORD PTR [rbp-0x24]
   1400212f0:	movsxd r11,r10d
   1400212f3:	mov    ecx,r8d
   1400212f6:	mov    eax,r15d
   1400212f9:	shl    eax,cl
   1400212fb:	and    DWORD PTR [rbp+r11*4-0x18],eax
   140021300:	lea    eax,[r10+0x1]
   140021304:	movsxd rdx,eax
   140021307:	cmp    rdx,r14
   14002130a:	jge    0x140021329
   14002130c:	lea    rcx,[rbp-0x18]
   140021310:	mov    r8,r14
   140021313:	sub    r8,rdx
   140021316:	lea    rcx,[rcx+rdx*4]
   14002131a:	xor    edx,edx
   14002131c:	shl    r8,0x2
   140021320:	call   0x140014d80
   140021325:	mov    r9d,DWORD PTR [rbp-0x28]
   140021329:	test   r13d,r13d
   14002132c:	je     0x140021330
   14002132e:	add    edi,esi
   140021330:	mov    ecx,DWORD PTR [rip+0x171b6]        # 0x1400384ec
   140021336:	mov    eax,ecx
   140021338:	sub    eax,DWORD PTR [rip+0x171b2]        # 0x1400384f0
   14002133e:	cmp    edi,eax
   140021340:	jge    0x140021356
   140021342:	mov    QWORD PTR [rbp-0x18],rbx
   140021346:	mov    DWORD PTR [rbp-0x10],ebx
   140021349:	mov    r8d,ebx
   14002134c:	mov    ebx,0x2
   140021351:	jmp    0x1400216aa
   140021356:	cmp    edi,ecx
   140021358:	jg     0x14002158f
   14002135e:	sub    ecx,DWORD PTR [rbp-0x40]
   140021361:	mov    rax,QWORD PTR [rbp-0x20]
   140021365:	mov    r10d,r15d
   140021368:	mov    QWORD PTR [rbp-0x18],rax
   14002136c:	mov    eax,ecx
   14002136e:	mov    DWORD PTR [rbp-0x10],r9d
   140021372:	cdq    
   140021373:	mov    r11,r14
   140021376:	mov    r9d,ebx
   140021379:	and    edx,r12d
   14002137c:	lea    r8,[rbp-0x18]
   140021380:	add    eax,edx
   140021382:	mov    r13d,eax
   140021385:	and    eax,r12d
   140021388:	sub    eax,edx
   14002138a:	sar    r13d,0x5
   14002138e:	mov    ecx,eax
   140021390:	mov    edi,eax
   140021392:	mov    eax,0x20
   140021397:	shl    r10d,cl
   14002139a:	sub    eax,ecx
   14002139c:	mov    r14d,eax
   14002139f:	not    r10d
   1400213a2:	mov    eax,DWORD PTR [r8]
   1400213a5:	mov    ecx,edi
   1400213a7:	mov    edx,eax
   1400213a9:	shr    eax,cl
   1400213ab:	mov    ecx,r14d
   1400213ae:	or     eax,r9d
   1400213b1:	and    edx,r10d
   1400213b4:	mov    r9d,edx
   1400213b7:	mov    DWORD PTR [r8],eax
   1400213ba:	lea    r8,[r8+0x4]
   1400213be:	shl    r9d,cl
   1400213c1:	sub    r11,rsi
   1400213c4:	jne    0x1400213a2
   1400213c6:	movsxd r10,r13d
   1400213c9:	lea    edi,[r11+0x2]
   1400213cd:	lea    r14d,[r11+0x3]
   1400213d1:	mov    r9,r10
   1400213d4:	mov    r8d,edi
   1400213d7:	neg    r9
   1400213da:	cmp    r8,r10
   1400213dd:	jl     0x1400213f4
   1400213df:	mov    rdx,r8
   1400213e2:	shl    rdx,0x2
   1400213e6:	lea    rax,[rdx+r9*4]
   1400213ea:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   1400213ee:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   1400213f2:	jmp    0x1400213f9
   1400213f4:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   1400213f9:	sub    r8,rsi
   1400213fc:	jns    0x1400213da
   1400213fe:	mov    r8d,DWORD PTR [rbp-0x38]
   140021402:	mov    r11d,r12d
   140021405:	lea    eax,[r8+0x1]
   140021409:	cdq    
   14002140a:	and    edx,r12d
   14002140d:	add    eax,edx
   14002140f:	mov    r9d,eax
   140021412:	and    eax,r12d
   140021415:	sub    eax,edx
   140021417:	sar    r9d,0x5
   14002141b:	sub    r11d,eax
   14002141e:	movsxd rax,r9d
   140021421:	mov    ecx,DWORD PTR [rbp+rax*4-0x18]
   140021425:	bt     ecx,r11d
   140021429:	jae    0x1400214c7
   14002142f:	mov    ecx,r11d
   140021432:	mov    eax,r15d
   140021435:	movsxd rdx,r9d
   140021438:	shl    eax,cl
   14002143a:	not    eax
   14002143c:	test   DWORD PTR [rbp+rdx*4-0x18],eax
   140021440:	jne    0x14002145b
   140021442:	lea    eax,[r9+0x1]
   140021446:	movsxd rcx,eax
   140021449:	jmp    0x140021454
   14002144b:	cmp    DWORD PTR [rbp+rcx*4-0x18],ebx
   14002144f:	jne    0x14002145b
   140021451:	add    rcx,rsi
   140021454:	cmp    rcx,r14
   140021457:	jl     0x14002144b
   140021459:	jmp    0x1400214c7
   14002145b:	mov    eax,r8d
   14002145e:	mov    ecx,r12d
   140021461:	cdq    
   140021462:	and    edx,r12d
   140021465:	add    eax,edx
   140021467:	mov    r10d,eax
   14002146a:	and    eax,r12d
   14002146d:	sub    eax,edx
   14002146f:	sar    r10d,0x5
   140021473:	mov    edx,esi
   140021475:	sub    ecx,eax
   140021477:	movsxd r13,r10d
   14002147a:	mov    eax,DWORD PTR [rbp+r13*4-0x18]
   14002147f:	shl    edx,cl
   140021481:	mov    ecx,ebx
   140021483:	lea    r8d,[rax+rdx*1]
   140021487:	cmp    r8d,eax
   14002148a:	jb     0x140021491
   14002148c:	cmp    r8d,edx
   14002148f:	jae    0x140021493
   140021491:	mov    ecx,esi
   140021493:	lea    eax,[r10-0x1]
   140021497:	mov    DWORD PTR [rbp+r13*4-0x18],r8d
   14002149c:	movsxd rdx,eax
   14002149f:	test   eax,eax
   1400214a1:	js     0x1400214c7
   1400214a3:	test   ecx,ecx
   1400214a5:	je     0x1400214c7
   1400214a7:	mov    eax,DWORD PTR [rbp+rdx*4-0x18]
   1400214ab:	mov    ecx,ebx
   1400214ad:	lea    r8d,[rax+0x1]
   1400214b1:	cmp    r8d,eax
   1400214b4:	jb     0x1400214bb
   1400214b6:	cmp    r8d,esi
   1400214b9:	jae    0x1400214bd
   1400214bb:	mov    ecx,esi
   1400214bd:	mov    DWORD PTR [rbp+rdx*4-0x18],r8d
   1400214c2:	sub    rdx,rsi
   1400214c5:	jns    0x1400214a3
   1400214c7:	mov    ecx,r11d
   1400214ca:	mov    eax,r15d
   1400214cd:	shl    eax,cl
   1400214cf:	movsxd rcx,r9d
   1400214d2:	and    DWORD PTR [rbp+rcx*4-0x18],eax
   1400214d6:	lea    eax,[r9+0x1]
   1400214da:	movsxd rdx,eax
   1400214dd:	cmp    rdx,r14
   1400214e0:	jge    0x1400214fb
   1400214e2:	lea    rcx,[rbp-0x18]
   1400214e6:	mov    r8,r14
   1400214e9:	sub    r8,rdx
   1400214ec:	lea    rcx,[rcx+rdx*4]
   1400214f0:	xor    edx,edx
   1400214f2:	shl    r8,0x2
   1400214f6:	call   0x140014d80
   1400214fb:	mov    eax,DWORD PTR [rip+0x16ff3]        # 0x1400384f4
   140021501:	mov    r13d,0x20
   140021507:	mov    r9d,ebx
   14002150a:	inc    eax
   14002150c:	lea    r8,[rbp-0x18]
   140021510:	cdq    
   140021511:	and    edx,r12d
   140021514:	add    eax,edx
   140021516:	mov    r10d,eax
   140021519:	and    eax,r12d
   14002151c:	sub    eax,edx
   14002151e:	sar    r10d,0x5
   140021522:	mov    ecx,eax
   140021524:	mov    r11d,eax
   140021527:	shl    r15d,cl
   14002152a:	sub    r13d,eax
   14002152d:	not    r15d
   140021530:	mov    eax,DWORD PTR [r8]
   140021533:	mov    ecx,r11d
   140021536:	mov    edx,eax
   140021538:	shr    eax,cl
   14002153a:	mov    ecx,r13d
   14002153d:	or     eax,r9d
   140021540:	and    edx,r15d
   140021543:	mov    r9d,edx
   140021546:	mov    DWORD PTR [r8],eax
   140021549:	lea    r8,[r8+0x4]
   14002154d:	shl    r9d,cl
   140021550:	sub    r14,rsi
   140021553:	jne    0x140021530
   140021555:	movsxd r10,r10d
   140021558:	mov    r8,rdi
   14002155b:	mov    r9,r10
   14002155e:	neg    r9
   140021561:	cmp    r8,r10
   140021564:	jl     0x14002157b
   140021566:	mov    rdx,r8
   140021569:	shl    rdx,0x2
   14002156d:	lea    rax,[rdx+r9*4]
   140021571:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   140021575:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140021579:	jmp    0x140021580
   14002157b:	mov    DWORD PTR [rbp+r8*4-0x18],ebx
   140021580:	sub    r8,rsi
   140021583:	jns    0x140021561
   140021585:	mov    r8d,ebx
   140021588:	mov    ebx,edi
   14002158a:	jmp    0x1400216aa
   14002158f:	mov    eax,DWORD PTR [rip+0x16f5f]        # 0x1400384f4
   140021595:	mov    r10d,DWORD PTR [rip+0x16f4c]        # 0x1400384e8
   14002159c:	mov    r13d,0x20
   1400215a2:	cdq    
   1400215a3:	and    edx,r12d
   1400215a6:	add    eax,edx
   1400215a8:	mov    r11d,eax
   1400215ab:	and    eax,r12d
   1400215ae:	sub    eax,edx
   1400215b0:	sar    r11d,0x5
   1400215b4:	mov    ecx,eax
   1400215b6:	shl    r15d,cl
   1400215b9:	not    r15d
   1400215bc:	cmp    edi,r10d
   1400215bf:	jl     0x14002163b
   1400215c1:	mov    QWORD PTR [rbp-0x18],rbx
   1400215c5:	bts    DWORD PTR [rbp-0x18],0x1f
   1400215ca:	mov    DWORD PTR [rbp-0x10],ebx
   1400215cd:	sub    r13d,eax
   1400215d0:	mov    edi,eax
   1400215d2:	mov    r9d,ebx
   1400215d5:	lea    r8,[rbp-0x18]
   1400215d9:	mov    eax,DWORD PTR [r8]
   1400215dc:	mov    ecx,edi
   1400215de:	mov    edx,r15d
   1400215e1:	and    edx,eax
   1400215e3:	shr    eax,cl
   1400215e5:	mov    ecx,r13d
   1400215e8:	or     eax,r9d
   1400215eb:	mov    r9d,edx
   1400215ee:	shl    r9d,cl
   1400215f1:	mov    DWORD PTR [r8],eax
   1400215f4:	lea    r8,[r8+0x4]
   1400215f8:	sub    r14,rsi
   1400215fb:	jne    0x1400215d9
   1400215fd:	movsxd r9,r11d
   140021600:	lea    edi,[r14+0x2]
   140021604:	mov    r8,r9
   140021607:	neg    r8
   14002160a:	cmp    rdi,r9
   14002160d:	jl     0x140021624
   14002160f:	mov    rdx,rdi
   140021612:	shl    rdx,0x2
   140021616:	lea    rax,[rdx+r8*4]
   14002161a:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002161e:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   140021622:	jmp    0x140021628
   140021624:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   140021628:	sub    rdi,rsi
   14002162b:	jns    0x14002160a
   14002162d:	mov    r8d,DWORD PTR [rip+0x16ec8]        # 0x1400384fc
   140021634:	mov    ebx,esi
   140021636:	add    r8d,r10d
   140021639:	jmp    0x1400216aa
   14002163b:	mov    r8d,DWORD PTR [rip+0x16eba]        # 0x1400384fc
   140021642:	btr    DWORD PTR [rbp-0x18],0x1f
   140021647:	mov    r10d,ebx
   14002164a:	add    r8d,edi
   14002164d:	mov    edi,eax
   14002164f:	sub    r13d,eax
   140021652:	lea    r9,[rbp-0x18]
   140021656:	mov    eax,DWORD PTR [r9]
   140021659:	mov    ecx,edi
   14002165b:	mov    edx,eax
   14002165d:	shr    eax,cl
   14002165f:	mov    ecx,r13d
   140021662:	or     eax,r10d
   140021665:	and    edx,r15d
   140021668:	mov    r10d,edx
   14002166b:	mov    DWORD PTR [r9],eax
   14002166e:	lea    r9,[r9+0x4]
   140021672:	shl    r10d,cl
   140021675:	sub    r14,rsi
   140021678:	jne    0x140021656
   14002167a:	movsxd r10,r11d
   14002167d:	lea    edi,[r14+0x2]
   140021681:	mov    r9,r10
   140021684:	neg    r9
   140021687:	cmp    rdi,r10
   14002168a:	jl     0x1400216a1
   14002168c:	mov    rdx,rdi
   14002168f:	shl    rdx,0x2
   140021693:	lea    rax,[rdx+r9*4]
   140021697:	mov    ecx,DWORD PTR [rbp+rax*1-0x18]
   14002169b:	mov    DWORD PTR [rbp+rdx*1-0x18],ecx
   14002169f:	jmp    0x1400216a5
   1400216a1:	mov    DWORD PTR [rbp+rdi*4-0x18],ebx
   1400216a5:	sub    rdi,rsi
   1400216a8:	jns    0x140021687
   1400216aa:	mov    rdx,QWORD PTR [rbp-0x30]
   1400216ae:	sub    r12d,DWORD PTR [rip+0x16e3f]        # 0x1400384f4
   1400216b5:	mov    cl,r12b
   1400216b8:	shl    r8d,cl
   1400216bb:	neg    DWORD PTR [rbp-0x3c]
   1400216be:	sbb    eax,eax
   1400216c0:	and    eax,0x80000000
   1400216c5:	or     r8d,eax
   1400216c8:	mov    eax,DWORD PTR [rip+0x16e2a]        # 0x1400384f8
   1400216ce:	or     r8d,DWORD PTR [rbp-0x18]
   1400216d2:	cmp    eax,0x40
   1400216d5:	jne    0x1400216e2
   1400216d7:	mov    eax,DWORD PTR [rbp-0x14]
   1400216da:	mov    DWORD PTR [rdx+0x4],r8d
   1400216de:	mov    DWORD PTR [rdx],eax
   1400216e0:	jmp    0x1400216ea
   1400216e2:	cmp    eax,0x20
   1400216e5:	jne    0x1400216ea
   1400216e7:	mov    DWORD PTR [rdx],r8d
   1400216ea:	mov    eax,ebx
   1400216ec:	mov    rcx,QWORD PTR [rbp-0x8]
   1400216f0:	xor    rcx,rsp
   1400216f3:	call   0x1400130a0
   1400216f8:	lea    r11,[rsp+0x60]
   1400216fd:	mov    rbx,QWORD PTR [r11+0x30]
   140021701:	mov    rsi,QWORD PTR [r11+0x40]
   140021705:	mov    rdi,QWORD PTR [r11+0x48]
   140021709:	mov    rsp,r11
   14002170c:	pop    r15
   14002170e:	pop    r14
   140021710:	pop    r13
   140021712:	pop    r12
   140021714:	pop    rbp
   140021715:	ret    
   140021716:	int3   
   140021717:	int3   
   140021718:	mov    QWORD PTR [rsp+0x18],rbx
   14002171d:	push   rbp
   14002171e:	push   rsi
   14002171f:	push   rdi
   140021720:	push   r12
   140021722:	push   r13
   140021724:	push   r14
   140021726:	push   r15
   140021728:	lea    rbp,[rsp-0x7]
   14002172d:	sub    rsp,0xa0
   140021734:	mov    rax,QWORD PTR [rip+0x158d5]        # 0x140037010
   14002173b:	xor    rax,rsp
   14002173e:	mov    QWORD PTR [rbp-0x1],rax
   140021742:	mov    r14,QWORD PTR [rbp+0x7f]
   140021746:	xor    ebx,ebx
   140021748:	mov    DWORD PTR [rbp-0x6d],r9d
   14002174c:	lea    r9d,[rbx+0x1]
   140021750:	mov    QWORD PTR [rbp-0x59],rcx
   140021754:	mov    QWORD PTR [rbp-0x69],rdx
   140021758:	lea    r10,[rbp-0x21]
   14002175c:	mov    WORD PTR [rbp-0x71],bx
   140021760:	mov    r11d,ebx
   140021763:	mov    DWORD PTR [rbp-0x75],r9d
   140021767:	mov    r15d,ebx
   14002176a:	mov    DWORD PTR [rbp-0x79],ebx
   14002176d:	mov    r12d,ebx
   140021770:	mov    r13d,ebx
   140021773:	mov    esi,ebx
   140021775:	mov    ecx,ebx
   140021777:	test   r14,r14
   14002177a:	jne    0x140021793
   14002177c:	call   0x1400161e8
   140021781:	mov    DWORD PTR [rax],0x16
   140021787:	call   0x140013f54
   14002178c:	xor    eax,eax
   14002178e:	jmp    0x140021f52
   140021793:	mov    rdi,r8
   140021796:	cmp    BYTE PTR [r8],0x20
   14002179a:	ja     0x1400217b5
   14002179c:	movsx  rax,BYTE PTR [r8]
   1400217a0:	movabs rdx,0x100002600
   1400217aa:	bt     rdx,rax
   1400217ae:	jae    0x1400217b5
   1400217b0:	add    r8,r9
   1400217b3:	jmp    0x140021796
   1400217b5:	mov    dl,BYTE PTR [r8]
   1400217b8:	add    r8,r9
   1400217bb:	cmp    ecx,0x5
   1400217be:	jg     0x1400219ce
   1400217c4:	je     0x1400219b4
   1400217ca:	mov    r9d,ecx
   1400217cd:	test   ecx,ecx
   1400217cf:	je     0x140021958
   1400217d5:	dec    r9d
   1400217d8:	je     0x140021918
   1400217de:	dec    r9d
   1400217e1:	je     0x1400218c6
   1400217e7:	dec    r9d
   1400217ea:	je     0x140021879
   1400217f0:	dec    r9d
   1400217f3:	jne    0x140021a93
   1400217f9:	mov    r9d,0x1
   1400217ff:	mov    al,0x30
   140021801:	mov    r15d,r9d
   140021804:	mov    DWORD PTR [rbp-0x79],r9d
   140021808:	test   r11d,r11d
   14002180b:	jne    0x14002183d
   14002180d:	jmp    0x140021818
   14002180f:	mov    dl,BYTE PTR [r8]
   140021812:	sub    esi,r9d
   140021815:	add    r8,r9
   140021818:	cmp    dl,al
   14002181a:	je     0x14002180f
   14002181c:	jmp    0x14002183d
   14002181e:	cmp    dl,0x39
   140021821:	jg     0x140021841
   140021823:	cmp    r11d,0x19
   140021827:	jae    0x140021837
   140021829:	sub    dl,al
   14002182b:	add    r11d,r9d
   14002182e:	mov    BYTE PTR [r10],dl
   140021831:	add    r10,r9
   140021834:	sub    esi,r9d
   140021837:	mov    dl,BYTE PTR [r8]
   14002183a:	add    r8,r9
   14002183d:	cmp    dl,al
   14002183f:	jge    0x14002181e
   140021841:	lea    eax,[rdx-0x2b]
   140021844:	test   al,0xfd
   140021846:	je     0x14002186c
   140021848:	cmp    dl,0x43
   14002184b:	jle    0x14002198d
   140021851:	cmp    dl,0x45
   140021854:	jle    0x140021862
   140021856:	sub    dl,0x64
   140021859:	cmp    dl,r9b
   14002185c:	ja     0x14002198d
   140021862:	mov    ecx,0x6
   140021867:	jmp    0x1400217b5
   14002186c:	sub    r8,r9
   14002186f:	mov    ecx,0xb
   140021874:	jmp    0x1400217b5
   140021879:	mov    r9d,0x1
   14002187f:	mov    al,0x30
   140021881:	mov    r15d,r9d
   140021884:	jmp    0x1400218a7
   140021886:	cmp    dl,0x39
   140021889:	jg     0x1400218ab
   14002188b:	cmp    r11d,0x19
   14002188f:	jae    0x14002189e
   140021891:	sub    dl,al
   140021893:	add    r11d,r9d
   140021896:	mov    BYTE PTR [r10],dl
   140021899:	add    r10,r9
   14002189c:	jmp    0x1400218a1
   14002189e:	add    esi,r9d
   1400218a1:	mov    dl,BYTE PTR [r8]
   1400218a4:	add    r8,r9
   1400218a7:	cmp    dl,al
   1400218a9:	jge    0x140021886
   1400218ab:	mov    rax,QWORD PTR [r14]
   1400218ae:	mov    rcx,QWORD PTR [rax+0xf0]
   1400218b5:	mov    rax,QWORD PTR [rcx]
   1400218b8:	cmp    dl,BYTE PTR [rax]
   1400218ba:	jne    0x140021841
   1400218bc:	mov    ecx,0x4
   1400218c1:	jmp    0x1400217b5
   1400218c6:	lea    eax,[rdx-0x31]
   1400218c9:	cmp    al,0x8
   1400218cb:	ja     0x1400218e0
   1400218cd:	mov    ecx,0x3
   1400218d2:	mov    r9d,0x1
   1400218d8:	sub    r8,r9
   1400218db:	jmp    0x1400217b5
   1400218e0:	mov    rax,QWORD PTR [r14]
   1400218e3:	mov    rcx,QWORD PTR [rax+0xf0]
   1400218ea:	mov    rax,QWORD PTR [rcx]
   1400218ed:	cmp    dl,BYTE PTR [rax]
   1400218ef:	jne    0x140021901
   1400218f1:	mov    ecx,0x5
   1400218f6:	mov    r9d,0x1
   1400218fc:	jmp    0x1400217b5
   140021901:	cmp    dl,0x30
   140021904:	jne    0x140021afc
   14002190a:	mov    r9d,0x1
   140021910:	mov    ecx,r9d
   140021913:	jmp    0x1400217b5
   140021918:	lea    eax,[rdx-0x31]
   14002191b:	mov    r9d,0x1
   140021921:	mov    r15d,r9d
   140021924:	cmp    al,0x8
   140021926:	ja     0x14002192e
   140021928:	lea    ecx,[r9+0x2]
   14002192c:	jmp    0x1400218d8
   14002192e:	mov    rax,QWORD PTR [r14]
   140021931:	mov    rcx,QWORD PTR [rax+0xf0]
   140021938:	mov    rax,QWORD PTR [rcx]
   14002193b:	cmp    dl,BYTE PTR [rax]
   14002193d:	je     0x1400218bc
   140021943:	lea    eax,[rdx-0x2b]
   140021946:	test   al,0xfd
   140021948:	je     0x14002186c
   14002194e:	cmp    dl,0x30
   140021951:	je     0x140021910
   140021953:	jmp    0x140021848
   140021958:	lea    eax,[rdx-0x31]
   14002195b:	cmp    al,0x8
   14002195d:	jbe    0x1400218cd
   140021963:	mov    rax,QWORD PTR [r14]
   140021966:	mov    rcx,QWORD PTR [rax+0xf0]
   14002196d:	mov    rax,QWORD PTR [rcx]
   140021970:	cmp    dl,BYTE PTR [rax]
   140021972:	je     0x1400218f1
   140021978:	cmp    dl,0x2b
   14002197b:	je     0x1400219a6
   14002197d:	cmp    dl,0x2d
   140021980:	je     0x140021995
   140021982:	cmp    dl,0x30
   140021985:	je     0x14002190a
   140021987:	mov    r9d,0x1
   14002198d:	sub    r8,r9
   140021990:	jmp    0x140021b05
   140021995:	mov    ecx,0x2
   14002199a:	mov    DWORD PTR [rbp-0x71],0x8000
   1400219a1:	jmp    0x1400218f6
   1400219a6:	mov    ecx,0x2
   1400219ab:	mov    WORD PTR [rbp-0x71],bx
   1400219af:	jmp    0x1400218f6
   1400219b4:	sub    dl,0x30
   1400219b7:	mov    DWORD PTR [rbp-0x79],r9d
   1400219bb:	cmp    dl,0x9
   1400219be:	ja     0x140021a9d
   1400219c4:	mov    ecx,0x4
   1400219c9:	jmp    0x1400218d8
   1400219ce:	mov    r9d,ecx
   1400219d1:	sub    r9d,0x6
   1400219d5:	je     0x140021a77
   1400219db:	dec    r9d
   1400219de:	je     0x140021a53
   1400219e0:	dec    r9d
   1400219e3:	je     0x140021a27
   1400219e5:	dec    r9d
   1400219e8:	je     0x140021aa2
   1400219ee:	cmp    r9d,0x2
   1400219f2:	jne    0x140021a93
   1400219f8:	cmp    DWORD PTR [rbp+0x77],ebx
   1400219fb:	je     0x140021987
   1400219fd:	lea    rdi,[r8-0x1]
   140021a01:	cmp    dl,0x2b
   140021a04:	je     0x140021a1d
   140021a06:	cmp    dl,0x2d
   140021a09:	jne    0x140021afc
   140021a0f:	or     DWORD PTR [rbp-0x75],0xffffffff
   140021a13:	mov    ecx,0x7
   140021a18:	jmp    0x1400218f6
   140021a1d:	mov    ecx,0x7
   140021a22:	jmp    0x1400218f6
   140021a27:	mov    r9d,0x1
   140021a2d:	mov    r12d,r9d
   140021a30:	jmp    0x140021a38
   140021a32:	mov    dl,BYTE PTR [r8]
   140021a35:	add    r8,r9
   140021a38:	cmp    dl,0x30
   140021a3b:	je     0x140021a32
   140021a3d:	sub    dl,0x31
   140021a40:	cmp    dl,0x8
   140021a43:	ja     0x14002198d
   140021a49:	mov    ecx,0x9
   140021a4e:	jmp    0x1400218d8
   140021a53:	lea    eax,[rdx-0x31]
   140021a56:	cmp    al,0x8
   140021a58:	ja     0x140021a64
   140021a5a:	mov    ecx,0x9
   140021a5f:	jmp    0x1400218d2
   140021a64:	cmp    dl,0x30
   140021a67:	jne    0x140021afc
   140021a6d:	mov    ecx,0x8
   140021a72:	jmp    0x1400218f6
   140021a77:	lea    eax,[rdx-0x31]
   140021a7a:	lea    rdi,[r8-0x2]
   140021a7e:	cmp    al,0x8
   140021a80:	jbe    0x140021a5a
   140021a82:	cmp    dl,0x2b
   140021a85:	je     0x140021a8e
   140021a87:	cmp    dl,0x2d
   140021a8a:	je     0x140021a0f
   140021a8c:	jmp    0x140021a64
   140021a8e:	mov    ecx,0x7
   140021a93:	cmp    ecx,0xa
   140021a96:	je     0x140021aff
   140021a98:	jmp    0x1400218f6
   140021a9d:	mov    r8,rdi
   140021aa0:	jmp    0x140021b05
   140021aa2:	mov    r9d,0x1
   140021aa8:	mov    dil,0x30
   140021aab:	mov    r12d,r9d
   140021aae:	jmp    0x140021ad4
   140021ab0:	cmp    dl,0x39
   140021ab3:	jg     0x140021af2
   140021ab5:	lea    r13d,[r13+r13*4+0x0]
   140021aba:	movsx  eax,dl
   140021abd:	lea    r13d,[r13-0x18]
   140021ac1:	lea    r13d,[rax+r13*2]
   140021ac5:	cmp    r13d,0x1450
   140021acc:	jg     0x140021adb
   140021ace:	mov    dl,BYTE PTR [r8]
   140021ad1:	add    r8,r9
   140021ad4:	cmp    dl,dil
   140021ad7:	jge    0x140021ab0
   140021ad9:	jmp    0x140021af2
   140021adb:	mov    r13d,0x1451
   140021ae1:	jmp    0x140021af2
   140021ae3:	cmp    dl,0x39
   140021ae6:	jg     0x14002198d
   140021aec:	mov    dl,BYTE PTR [r8]
   140021aef:	add    r8,r9
   140021af2:	cmp    dl,dil
   140021af5:	jge    0x140021ae3
   140021af7:	jmp    0x14002198d
   140021afc:	mov    r8,rdi
   140021aff:	mov    r9d,0x1
   140021b05:	mov    rax,QWORD PTR [rbp-0x69]
   140021b09:	mov    QWORD PTR [rax],r8
   140021b0c:	test   r15d,r15d
   140021b0f:	je     0x140021f28
   140021b15:	cmp    r11d,0x18
   140021b19:	jbe    0x140021b34
   140021b1b:	mov    al,BYTE PTR [rbp-0xa]
   140021b1e:	cmp    al,0x5
   140021b20:	jl     0x140021b28
   140021b22:	add    al,r9b
   140021b25:	mov    BYTE PTR [rbp-0xa],al
   140021b28:	sub    r10,r9
   140021b2b:	mov    r11d,0x18
   140021b31:	add    esi,r9d
   140021b34:	test   r11d,r11d
   140021b37:	jne    0x140021b4e
   140021b39:	movzx  edx,bx
   140021b3c:	movzx  eax,bx
   140021b3f:	mov    edi,ebx
   140021b41:	mov    ecx,ebx
   140021b43:	jmp    0x140021f37
   140021b48:	dec    r11d
   140021b4b:	add    esi,r9d
   140021b4e:	sub    r10,r9
   140021b51:	cmp    BYTE PTR [r10],bl
   140021b54:	je     0x140021b48
   140021b56:	lea    r8,[rbp-0x41]
   140021b5a:	lea    rcx,[rbp-0x21]
   140021b5e:	mov    edx,r11d
   140021b61:	call   0x140023420
   140021b66:	cmp    DWORD PTR [rbp-0x75],ebx
   140021b69:	jge    0x140021b6e
   140021b6b:	neg    r13d
   140021b6e:	add    r13d,esi
   140021b71:	test   r12d,r12d
   140021b74:	jne    0x140021b7a
   140021b76:	add    r13d,DWORD PTR [rbp+0x67]
   140021b7a:	cmp    DWORD PTR [rbp-0x79],ebx
   140021b7d:	jne    0x140021b83
   140021b7f:	sub    r13d,DWORD PTR [rbp+0x6f]
   140021b83:	cmp    r13d,0x1450
   140021b8a:	jg     0x140021f12
   140021b90:	cmp    r13d,0xffffebb0
   140021b97:	jl     0x140021f02
   140021b9d:	lea    rsi,[rip+0x1695c]        # 0x140038500
   140021ba4:	sub    rsi,0x60
   140021ba8:	test   r13d,r13d
   140021bab:	je     0x140021ef0
   140021bb1:	jns    0x140021bc1
   140021bb3:	lea    rsi,[rip+0x16aa6]        # 0x140038660
   140021bba:	neg    r13d
   140021bbd:	sub    rsi,0x60
   140021bc1:	cmp    DWORD PTR [rbp-0x6d],ebx
   140021bc4:	jne    0x140021bca
   140021bc6:	mov    WORD PTR [rbp-0x41],bx
   140021bca:	test   r13d,r13d
   140021bcd:	je     0x140021ef0
   140021bd3:	mov    edi,0x80000000
   140021bd8:	mov    r9d,0x7fff
   140021bde:	mov    eax,r13d
   140021be1:	add    rsi,0x54
   140021be5:	sar    r13d,0x3
   140021be9:	mov    QWORD PTR [rbp-0x61],rsi
   140021bed:	and    eax,0x7
   140021bf0:	je     0x140021ee7
   140021bf6:	cdqe   
   140021bf8:	mov    r11d,0x8000
   140021bfe:	mov    r14d,0x1
   140021c04:	lea    rcx,[rax+rax*2]
   140021c08:	lea    rdx,[rsi+rcx*4]
   140021c0c:	mov    QWORD PTR [rbp-0x69],rdx
   140021c10:	cmp    WORD PTR [rdx],r11w
   140021c14:	jb     0x140021c3b
   140021c16:	mov    eax,DWORD PTR [rdx+0x8]
   140021c19:	movsd  xmm0,QWORD PTR [rdx]
   140021c1d:	lea    rdx,[rbp-0x31]
   140021c21:	mov    DWORD PTR [rbp-0x29],eax
   140021c24:	movsd  QWORD PTR [rbp-0x31],xmm0
   140021c29:	mov    rax,QWORD PTR [rbp-0x31]
   140021c2d:	shr    rax,0x10
   140021c31:	mov    QWORD PTR [rbp-0x69],rdx
   140021c35:	sub    eax,r14d
   140021c38:	mov    DWORD PTR [rbp-0x2f],eax
   140021c3b:	movzx  eax,WORD PTR [rdx+0xa]
   140021c3f:	movzx  ecx,WORD PTR [rbp-0x37]
   140021c43:	mov    QWORD PTR [rbp-0x51],rbx
   140021c47:	movzx  r12d,ax
   140021c4b:	and    ax,r9w
   140021c4f:	mov    DWORD PTR [rbp-0x49],ebx
   140021c52:	xor    r12w,cx
   140021c56:	and    cx,r9w
   140021c5a:	and    r12w,r11w
   140021c5e:	lea    r8d,[rcx+rax*1]
   140021c62:	cmp    cx,r9w
   140021c66:	jae    0x140021ed3
   140021c6c:	cmp    ax,r9w
   140021c70:	jae    0x140021ed3
   140021c76:	mov    r10d,0xbffd
   140021c7c:	cmp    r8w,r10w
   140021c80:	ja     0x140021ed3
   140021c86:	mov    r10d,0x3fbf
   140021c8c:	cmp    r8w,r10w
   140021c90:	ja     0x140021c9e
   140021c92:	mov    QWORD PTR [rbp-0x3d],rbx
   140021c96:	mov    DWORD PTR [rbp-0x41],ebx
   140021c99:	jmp    0x140021ee7
   140021c9e:	test   cx,cx
   140021ca1:	jne    0x140021cc3
   140021ca3:	add    r8w,r14w
   140021ca7:	test   DWORD PTR [rbp-0x39],0x7fffffff
   140021cae:	jne    0x140021cc3
   140021cb0:	cmp    DWORD PTR [rbp-0x3d],ebx
   140021cb3:	jne    0x140021cc3
   140021cb5:	cmp    DWORD PTR [rbp-0x41],ebx
   140021cb8:	jne    0x140021cc3
   140021cba:	mov    WORD PTR [rbp-0x37],bx
   140021cbe:	jmp    0x140021ee7
   140021cc3:	test   ax,ax
   140021cc6:	jne    0x140021cde
   140021cc8:	add    r8w,r14w
   140021ccc:	test   DWORD PTR [rdx+0x8],0x7fffffff
   140021cd3:	jne    0x140021cde
   140021cd5:	cmp    DWORD PTR [rdx+0x4],ebx
   140021cd8:	jne    0x140021cde
   140021cda:	cmp    DWORD PTR [rdx],ebx
   140021cdc:	je     0x140021c92
   140021cde:	mov    r15d,ebx
   140021ce1:	lea    r9,[rbp-0x51]
   140021ce5:	mov    r10d,0x5
   140021ceb:	mov    DWORD PTR [rbp-0x79],r10d
   140021cef:	test   r10d,r10d
   140021cf2:	jle    0x140021d60
   140021cf4:	lea    eax,[r15+r15*1]
   140021cf8:	lea    rdi,[rbp-0x41]
   140021cfc:	lea    rsi,[rdx+0x8]
   140021d00:	movsxd rcx,eax
   140021d03:	mov    eax,r15d
   140021d06:	and    eax,r14d
   140021d09:	add    rdi,rcx
   140021d0c:	mov    edx,eax
   140021d0e:	movzx  eax,WORD PTR [rdi]
   140021d11:	movzx  ecx,WORD PTR [rsi]
   140021d14:	mov    r11d,ebx
   140021d17:	imul   ecx,eax
   140021d1a:	mov    eax,DWORD PTR [r9]
   140021d1d:	lea    r14d,[rax+rcx*1]
   140021d21:	cmp    r14d,eax
   140021d24:	jb     0x140021d2b
   140021d26:	cmp    r14d,ecx
   140021d29:	jae    0x140021d31
   140021d2b:	mov    r11d,0x1
   140021d31:	mov    DWORD PTR [r9],r14d
   140021d34:	mov    r14d,0x1
   140021d3a:	test   r11d,r11d
   140021d3d:	je     0x140021d44
   140021d3f:	add    WORD PTR [r9+0x4],r14w
   140021d44:	mov    r11d,DWORD PTR [rbp-0x79]
   140021d48:	add    rdi,0x2
   140021d4c:	sub    rsi,0x2
   140021d50:	sub    r11d,r14d
   140021d53:	mov    DWORD PTR [rbp-0x79],r11d
   140021d57:	test   r11d,r11d
   140021d5a:	jg     0x140021d0e
   140021d5c:	mov    rdx,QWORD PTR [rbp-0x69]
   140021d60:	sub    r10d,r14d
   140021d63:	add    r9,0x2
   140021d67:	add    r15d,r14d
   140021d6a:	test   r10d,r10d
   140021d6d:	jg     0x140021ceb
   140021d73:	mov    r10d,DWORD PTR [rbp-0x49]
   140021d77:	mov    r9d,DWORD PTR [rbp-0x51]
   140021d7b:	mov    eax,0xc002
   140021d80:	add    r8w,ax
   140021d84:	mov    edi,0x80000000
   140021d89:	mov    r15d,0xffff
   140021d8f:	test   r8w,r8w
   140021d93:	jle    0x140021dd4
   140021d95:	test   edi,r10d
   140021d98:	jne    0x140021dce
   140021d9a:	mov    r11d,DWORD PTR [rbp-0x4d]
   140021d9e:	mov    edx,r9d
   140021da1:	add    r10d,r10d
   140021da4:	shr    edx,0x1f
   140021da7:	add    r9d,r9d
   140021daa:	mov    ecx,r11d
   140021dad:	shr    ecx,0x1f
   140021db0:	lea    eax,[r11+r11*1]
   140021db4:	add    r8w,r15w
   140021db8:	or     eax,edx
   140021dba:	or     r10d,ecx
   140021dbd:	mov    DWORD PTR [rbp-0x51],r9d
   140021dc1:	mov    DWORD PTR [rbp-0x4d],eax
   140021dc4:	mov    DWORD PTR [rbp-0x49],r10d
   140021dc8:	test   r8w,r8w
   140021dcc:	jg     0x140021d95
   140021dce:	test   r8w,r8w
   140021dd2:	jg     0x140021e3e
   140021dd4:	add    r8w,r15w
   140021dd8:	jns    0x140021e3e
   140021dda:	movzx  eax,r8w
   140021dde:	mov    edi,ebx
   140021de0:	neg    ax
   140021de3:	movzx  edx,ax
   140021de6:	add    r8w,dx
   140021dea:	test   BYTE PTR [rbp-0x51],r14b
   140021dee:	je     0x140021df3
   140021df0:	add    edi,r14d
   140021df3:	mov    r11d,DWORD PTR [rbp-0x4d]
   140021df7:	mov    eax,r10d
   140021dfa:	shr    r9d,1
   140021dfd:	mov    ecx,r11d
   140021e00:	shl    eax,0x1f
   140021e03:	shr    r11d,1
   140021e06:	shl    ecx,0x1f
   140021e09:	or     r11d,eax
   140021e0c:	shr    r10d,1
   140021e0f:	or     r9d,ecx
   140021e12:	mov    DWORD PTR [rbp-0x4d],r11d
   140021e16:	mov    DWORD PTR [rbp-0x51],r9d
   140021e1a:	sub    rdx,r14
   140021e1d:	jne    0x140021dea
   140021e1f:	test   edi,edi
   140021e21:	mov    DWORD PTR [rbp-0x49],r10d
   140021e25:	mov    edi,0x80000000
   140021e2a:	je     0x140021e3e
   140021e2c:	movzx  eax,r9w
   140021e30:	or     ax,r14w
   140021e34:	mov    WORD PTR [rbp-0x51],ax
   140021e38:	mov    r9d,DWORD PTR [rbp-0x51]
   140021e3c:	jmp    0x140021e42
   140021e3e:	movzx  eax,WORD PTR [rbp-0x51]
   140021e42:	mov    rsi,QWORD PTR [rbp-0x61]
   140021e46:	mov    r11d,0x8000
   140021e4c:	cmp    ax,r11w
   140021e50:	ja     0x140021e62
   140021e52:	and    r9d,0x1ffff
   140021e59:	cmp    r9d,0x18000
   140021e60:	jne    0x140021eaa
   140021e62:	mov    eax,DWORD PTR [rbp-0x4f]
   140021e65:	or     ecx,0xffffffff
   140021e68:	cmp    eax,ecx
   140021e6a:	jne    0x140021ea4
   140021e6c:	mov    eax,DWORD PTR [rbp-0x4b]
   140021e6f:	mov    DWORD PTR [rbp-0x4f],ebx
   140021e72:	cmp    eax,ecx
   140021e74:	jne    0x140021e98
   140021e76:	movzx  eax,WORD PTR [rbp-0x47]
   140021e7a:	mov    DWORD PTR [rbp-0x4b],ebx
   140021e7d:	cmp    ax,r15w
   140021e81:	jne    0x140021e8e
   140021e83:	mov    WORD PTR [rbp-0x47],r11w
   140021e88:	add    r8w,r14w
   140021e8c:	jmp    0x140021e9e
   140021e8e:	add    ax,r14w
   140021e92:	mov    WORD PTR [rbp-0x47],ax
   140021e96:	jmp    0x140021e9e
   140021e98:	add    eax,r14d
   140021e9b:	mov    DWORD PTR [rbp-0x4b],eax
   140021e9e:	mov    r10d,DWORD PTR [rbp-0x49]
   140021ea2:	jmp    0x140021eaa
   140021ea4:	add    eax,r14d
   140021ea7:	mov    DWORD PTR [rbp-0x4f],eax
   140021eaa:	mov    r9d,0x7fff
   140021eb0:	cmp    r8w,r9w
   140021eb4:	jae    0x140021ed3
   140021eb6:	movzx  eax,WORD PTR [rbp-0x4f]
   140021eba:	or     r8w,r12w
   140021ebe:	mov    DWORD PTR [rbp-0x3b],r10d
   140021ec2:	mov    WORD PTR [rbp-0x41],ax
   140021ec6:	mov    eax,DWORD PTR [rbp-0x4d]
   140021ec9:	mov    WORD PTR [rbp-0x37],r8w
   140021ece:	mov    DWORD PTR [rbp-0x3f],eax
   140021ed1:	jmp    0x140021ee7
   140021ed3:	neg    r12w
   140021ed7:	mov    QWORD PTR [rbp-0x41],rbx
   140021edb:	sbb    eax,eax
   140021edd:	and    eax,edi
   140021edf:	add    eax,0x7fff8000
   140021ee4:	mov    DWORD PTR [rbp-0x39],eax
   140021ee7:	test   r13d,r13d
   140021eea:	jne    0x140021bde
   140021ef0:	mov    eax,DWORD PTR [rbp-0x39]
   140021ef3:	movzx  edx,WORD PTR [rbp-0x41]
   140021ef7:	mov    ecx,DWORD PTR [rbp-0x3f]
   140021efa:	mov    edi,DWORD PTR [rbp-0x3b]
   140021efd:	shr    eax,0x10
   140021f00:	jmp    0x140021f37
   140021f02:	mov    edx,ebx
   140021f04:	movzx  eax,bx
   140021f07:	mov    edi,ebx
   140021f09:	mov    ecx,ebx
   140021f0b:	mov    ebx,0x1
   140021f10:	jmp    0x140021f37
   140021f12:	mov    ecx,ebx
   140021f14:	movzx  edx,bx
   140021f17:	mov    eax,0x7fff
   140021f1c:	mov    ebx,0x2
   140021f21:	mov    edi,0x80000000
   140021f26:	jmp    0x140021f37
   140021f28:	movzx  edx,bx
   140021f2b:	movzx  eax,bx
   140021f2e:	mov    edi,ebx
   140021f30:	mov    ecx,ebx
   140021f32:	mov    ebx,0x4
   140021f37:	mov    r8,QWORD PTR [rbp-0x59]
   140021f3b:	or     ax,WORD PTR [rbp-0x71]
   140021f3f:	mov    WORD PTR [r8+0xa],ax
   140021f44:	mov    eax,ebx
   140021f46:	mov    WORD PTR [r8],dx
   140021f4a:	mov    DWORD PTR [r8+0x2],ecx
   140021f4e:	mov    DWORD PTR [r8+0x6],edi
   140021f52:	mov    rcx,QWORD PTR [rbp-0x1]
   140021f56:	xor    rcx,rsp
   140021f59:	call   0x1400130a0
   140021f5e:	mov    rbx,QWORD PTR [rsp+0xf0]
   140021f66:	add    rsp,0xa0
   140021f6d:	pop    r15
   140021f6f:	pop    r14
   140021f71:	pop    r13
   140021f73:	pop    r12
   140021f75:	pop    rdi
   140021f76:	pop    rsi
   140021f77:	pop    rbp
   140021f78:	ret    
   140021f79:	int3   
   140021f7a:	int3   
   140021f7b:	int3   
   140021f7c:	mov    QWORD PTR [rsp+0x10],rbx
   140021f81:	push   rbp
   140021f82:	push   rsi
   140021f83:	push   rdi
   140021f84:	push   r12
   140021f86:	push   r13
   140021f88:	push   r14
   140021f8a:	push   r15
   140021f8c:	lea    rbp,[rsp-0x27]
   140021f91:	sub    rsp,0xc0
   140021f98:	mov    rax,QWORD PTR [rip+0x15071]        # 0x140037010
   140021f9f:	xor    rax,rsp
   140021fa2:	mov    QWORD PTR [rbp+0x17],rax
   140021fa6:	movzx  r10d,WORD PTR [rcx+0x8]
   140021fab:	mov    rbx,r9
   140021fae:	mov    r9d,DWORD PTR [rcx]
   140021fb1:	mov    DWORD PTR [rbp-0x4d],edx
   140021fb4:	mov    edx,0x8000
   140021fb9:	mov    r11d,0x1
   140021fbf:	mov    DWORD PTR [rbp-0x39],r8d
   140021fc3:	mov    r8d,DWORD PTR [rcx+0x4]
   140021fc7:	movzx  ecx,r10w
   140021fcb:	and    cx,dx
   140021fce:	lea    r13d,[rdx-0x1]
   140021fd2:	lea    eax,[r11+0x1f]
   140021fd6:	xor    r12d,r12d
   140021fd9:	and    r10w,r13w
   140021fdd:	mov    QWORD PTR [rbp-0x41],rbx
   140021fe1:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   140021fe8:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   140021fef:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   140021ff6:	mov    WORD PTR [rbp-0x67],cx
   140021ffa:	lea    edi,[rax+0xd]
   140021ffd:	test   cx,cx
   140022000:	je     0x140022008
   140022002:	mov    BYTE PTR [rbx+0x2],dil
   140022006:	jmp    0x14002200b
   140022008:	mov    BYTE PTR [rbx+0x2],al
   14002200b:	test   r10w,r10w
   14002200f:	jne    0x14002203f
   140022011:	test   r8d,r8d
   140022014:	jne    0x14002210e
   14002201a:	test   r9d,r9d
   14002201d:	jne    0x14002210e
   140022023:	cmp    cx,dx
   140022026:	cmove  eax,edi
   140022029:	mov    WORD PTR [rbx],r12w
   14002202d:	mov    BYTE PTR [rbx+0x2],al
   140022030:	mov    WORD PTR [rbx+0x3],0x3001
   140022036:	mov    BYTE PTR [rbx+0x5],r12b
   14002203a:	jmp    0x14002299a
   14002203f:	cmp    r10w,r13w
   140022043:	jne    0x14002210e
   140022049:	mov    esi,0x80000000
   14002204e:	mov    WORD PTR [rbx],r11w
   140022052:	cmp    r8d,esi
   140022055:	jne    0x14002205c
   140022057:	test   r9d,r9d
   14002205a:	je     0x140022085
   14002205c:	bt     r8d,0x1e
   140022061:	jb     0x140022085
   140022063:	lea    rcx,[rbx+0x4]
   140022067:	lea    r8,[rip+0xca5e]        # 0x14002eacc
   14002206e:	mov    edx,0x16
   140022073:	call   0x14001cd84
   140022078:	test   eax,eax
   14002207a:	je     0x140022102
   140022080:	jmp    0x140022a00
   140022085:	test   cx,cx
   140022088:	je     0x1400220b5
   14002208a:	cmp    r8d,0xc0000000
   140022091:	jne    0x1400220b5
   140022093:	test   r9d,r9d
   140022096:	jne    0x1400220e5
   140022098:	lea    rcx,[rbx+0x4]
   14002209c:	lea    r8,[rip+0xca31]        # 0x14002ead4
   1400220a3:	lea    edx,[r9+0x16]
   1400220a7:	call   0x14001cd84
   1400220ac:	test   eax,eax
   1400220ae:	je     0x1400220db
   1400220b0:	jmp    0x140022a15
   1400220b5:	cmp    r8d,esi
   1400220b8:	jne    0x1400220e5
   1400220ba:	test   r9d,r9d
   1400220bd:	jne    0x1400220e5
   1400220bf:	lea    rcx,[rbx+0x4]
   1400220c3:	lea    r8,[rip+0xca12]        # 0x14002eadc
   1400220ca:	lea    edx,[r9+0x16]
   1400220ce:	call   0x14001cd84
   1400220d3:	test   eax,eax
   1400220d5:	jne    0x140022a2a
   1400220db:	mov    eax,0x5
   1400220e0:	mov    BYTE PTR [rbx+0x3],al
   1400220e3:	jmp    0x140022106
   1400220e5:	lea    rcx,[rbx+0x4]
   1400220e9:	lea    r8,[rip+0xc9f4]        # 0x14002eae4
   1400220f0:	mov    edx,0x16
   1400220f5:	call   0x14001cd84
   1400220fa:	test   eax,eax
   1400220fc:	jne    0x140022a3f
   140022102:	mov    BYTE PTR [rbx+0x3],0x6
   140022106:	mov    r11d,r12d
   140022109:	jmp    0x14002299a
   14002210e:	movzx  edx,r10w
   140022112:	mov    DWORD PTR [rbp-0x17],r9d
   140022116:	mov    WORD PTR [rbp-0xf],r10w
   14002211b:	mov    ecx,r8d
   14002211e:	mov    eax,edx
   140022120:	lea    r9,[rip+0x163d9]        # 0x140038500
   140022127:	shr    ecx,0x18
   14002212a:	shr    eax,0x8
   14002212d:	mov    r15d,0x80000000
   140022133:	lea    eax,[rax+rcx*2]
   140022136:	mov    r14d,0x5
   14002213c:	sub    r9,0x60
   140022140:	mov    DWORD PTR [rbp-0x13],r8d
   140022144:	mov    WORD PTR [rbp-0x19],r12w
   140022149:	mov    esi,0xbffd
   14002214e:	imul   ecx,eax,0x4d
   140022151:	imul   eax,edx,0x4d10
   140022157:	add    eax,0xecbced0c
   14002215c:	mov    DWORD PTR [rbp-0x49],r14d
   140022160:	lea    edi,[r15-0x1]
   140022164:	add    ecx,eax
   140022166:	sar    ecx,0x10
   140022169:	movsx  r10d,cx
   14002216d:	mov    DWORD PTR [rbp-0x61],ecx
   140022170:	neg    r10d
   140022173:	je     0x1400224e8
   140022179:	test   r10d,r10d
   14002217c:	jns    0x14002218f
   14002217e:	lea    r9,[rip+0x164db]        # 0x140038660
   140022185:	neg    r10d
   140022188:	sub    r9,0x60
   14002218c:	test   r10d,r10d
   14002218f:	je     0x1400224e8
   140022195:	mov    r8d,DWORD PTR [rbp-0x15]
   140022199:	mov    edx,DWORD PTR [rbp-0x19]
   14002219c:	mov    eax,r10d
   14002219f:	add    r9,0x54
   1400221a3:	sar    r10d,0x3
   1400221a7:	mov    DWORD PTR [rbp-0x51],r10d
   1400221ab:	mov    QWORD PTR [rbp-0x59],r9
   1400221af:	and    eax,0x7
   1400221b2:	je     0x1400224d1
   1400221b8:	cdqe   
   1400221ba:	lea    rcx,[rax+rax*2]
   1400221be:	lea    rsi,[r9+rcx*4]
   1400221c2:	mov    r9d,0x8000
   1400221c8:	mov    QWORD PTR [rbp-0x31],rsi
   1400221cc:	cmp    WORD PTR [rsi],r9w
   1400221d0:	jb     0x1400221f7
   1400221d2:	mov    eax,DWORD PTR [rsi+0x8]
   1400221d5:	movsd  xmm0,QWORD PTR [rsi]
   1400221d9:	lea    rsi,[rbp+0x7]
   1400221dd:	mov    DWORD PTR [rbp+0xf],eax
   1400221e0:	movsd  QWORD PTR [rbp+0x7],xmm0
   1400221e5:	mov    rax,QWORD PTR [rbp+0x7]
   1400221e9:	shr    rax,0x10
   1400221ed:	mov    QWORD PTR [rbp-0x31],rsi
   1400221f1:	sub    eax,r11d
   1400221f4:	mov    DWORD PTR [rbp+0x9],eax
   1400221f7:	movzx  ecx,WORD PTR [rsi+0xa]
   1400221fb:	movzx  eax,WORD PTR [rbp-0xf]
   1400221ff:	mov    DWORD PTR [rbp-0x65],r12d
   140022203:	movzx  ebx,cx
   140022206:	and    cx,r13w
   14002220a:	mov    QWORD PTR [rbp-0x29],0x0
   140022212:	xor    bx,ax
   140022215:	and    ax,r13w
   140022219:	mov    DWORD PTR [rbp-0x21],r12d
   14002221d:	and    bx,r9w
   140022221:	lea    r9d,[rax+rcx*1]
   140022225:	mov    WORD PTR [rbp-0x69],bx
   140022229:	cmp    ax,r13w
   14002222d:	jae    0x1400224b0
   140022233:	cmp    cx,r13w
   140022237:	jae    0x1400224b0
   14002223d:	mov    r13d,0xbffd
   140022243:	cmp    r9w,r13w
   140022247:	ja     0x1400224aa
   14002224d:	mov    ebx,0x3fbf
   140022252:	cmp    r9w,bx
   140022256:	ja     0x14002226b
   140022258:	mov    QWORD PTR [rbp-0x15],0x0
   140022260:	mov    r13d,0x7fff
   140022266:	jmp    0x1400224c4
   14002226b:	test   ax,ax
   14002226e:	jne    0x140022292
   140022270:	add    r9w,r11w
   140022274:	test   DWORD PTR [rbp-0x11],edi
   140022277:	jne    0x140022292
   140022279:	test   r8d,r8d
   14002227c:	jne    0x140022292
   14002227e:	test   edx,edx
   140022280:	jne    0x140022292
   140022282:	mov    WORD PTR [rbp-0xf],r12w
   140022287:	mov    r13d,0x7fff
   14002228d:	jmp    0x1400224cd
   140022292:	test   cx,cx
   140022295:	jne    0x1400222ab
   140022297:	add    r9w,r11w
   14002229b:	test   DWORD PTR [rsi+0x8],edi
   14002229e:	jne    0x1400222ab
   1400222a0:	cmp    DWORD PTR [rsi+0x4],r12d
   1400222a4:	jne    0x1400222ab
   1400222a6:	cmp    DWORD PTR [rsi],r12d
   1400222a9:	je     0x140022258
   1400222ab:	mov    edi,r14d
   1400222ae:	lea    rdx,[rbp-0x29]
   1400222b2:	xor    r14d,r14d
   1400222b5:	mov    r13d,edi
   1400222b8:	test   edi,edi
   1400222ba:	jle    0x14002231b
   1400222bc:	lea    eax,[r12+r12*1]
   1400222c0:	lea    r14,[rbp-0x19]
   1400222c4:	mov    ebx,r12d
   1400222c7:	movsxd rcx,eax
   1400222ca:	and    ebx,r11d
   1400222cd:	lea    r15,[rsi+0x8]
   1400222d1:	add    r14,rcx
   1400222d4:	xor    esi,esi
   1400222d6:	movzx  eax,WORD PTR [r15]
   1400222da:	movzx  ecx,WORD PTR [r14]
   1400222de:	mov    r10d,esi
   1400222e1:	imul   ecx,eax
   1400222e4:	mov    eax,DWORD PTR [rdx]
   1400222e6:	lea    r8d,[rax+rcx*1]
   1400222ea:	cmp    r8d,eax
   1400222ed:	jb     0x1400222f4
   1400222ef:	cmp    r8d,ecx
   1400222f2:	jae    0x1400222f7
   1400222f4:	mov    r10d,r11d
   1400222f7:	mov    DWORD PTR [rdx],r8d
   1400222fa:	test   r10d,r10d
   1400222fd:	je     0x140022304
   1400222ff:	add    WORD PTR [rdx+0x4],r11w
   140022304:	sub    r13d,r11d
   140022307:	add    r14,0x2
   14002230b:	sub    r15,0x2
   14002230f:	test   r13d,r13d
   140022312:	jg     0x1400222d6
   140022314:	mov    rsi,QWORD PTR [rbp-0x31]
   140022318:	xor    r14d,r14d
   14002231b:	sub    edi,r11d
   14002231e:	add    rdx,0x2
   140022322:	add    r12d,r11d
   140022325:	test   edi,edi
   140022327:	jg     0x1400222b5
   140022329:	mov    r10d,DWORD PTR [rbp-0x21]
   14002232d:	mov    r8d,DWORD PTR [rbp-0x29]
   140022331:	mov    eax,0xc002
   140022336:	add    r9w,ax
   14002233a:	xor    r12d,r12d
   14002233d:	mov    ebx,0xffff
   140022342:	mov    r15d,0x80000000
   140022348:	test   r9w,r9w
   14002234c:	jle    0x14002238a
   14002234e:	test   r15d,r10d
   140022351:	jne    0x140022384
   140022353:	mov    edi,DWORD PTR [rbp-0x25]
   140022356:	mov    edx,r8d
   140022359:	add    r10d,r10d
   14002235c:	shr    edx,0x1f
   14002235f:	add    r8d,r8d
   140022362:	mov    ecx,edi
   140022364:	shr    ecx,0x1f
   140022367:	lea    eax,[rdi+rdi*1]
   14002236a:	add    r9w,bx
   14002236e:	or     eax,edx
   140022370:	or     r10d,ecx
   140022373:	mov    DWORD PTR [rbp-0x29],r8d
   140022377:	mov    DWORD PTR [rbp-0x25],eax
   14002237a:	mov    DWORD PTR [rbp-0x21],r10d
   14002237e:	test   r9w,r9w
   140022382:	jg     0x14002234e
   140022384:	test   r9w,r9w
   140022388:	jg     0x1400223f7
   14002238a:	add    r9w,bx
   14002238e:	jns    0x1400223f7
   140022390:	movzx  eax,r9w
   140022394:	neg    ax
   140022397:	movzx  edx,ax
   14002239a:	add    r9w,dx
   14002239e:	mov    WORD PTR [rbp-0x5d],r9w
   1400223a3:	mov    r9d,DWORD PTR [rbp-0x65]
   1400223a7:	test   BYTE PTR [rbp-0x29],r11b
   1400223ab:	je     0x1400223b0
   1400223ad:	add    r9d,r11d
   1400223b0:	mov    edi,DWORD PTR [rbp-0x25]
   1400223b3:	mov    eax,r10d
   1400223b6:	shr    r8d,1
   1400223b9:	mov    ecx,edi
   1400223bb:	shl    eax,0x1f
   1400223be:	shr    edi,1
   1400223c0:	shl    ecx,0x1f
   1400223c3:	or     edi,eax
   1400223c5:	shr    r10d,1
   1400223c8:	or     r8d,ecx
   1400223cb:	mov    DWORD PTR [rbp-0x25],edi
   1400223ce:	mov    DWORD PTR [rbp-0x29],r8d
   1400223d2:	sub    rdx,r11
   1400223d5:	jne    0x1400223a7
   1400223d7:	test   r9d,r9d
   1400223da:	movzx  r9d,WORD PTR [rbp-0x5d]
   1400223df:	mov    DWORD PTR [rbp-0x21],r10d
   1400223e3:	je     0x1400223f7
   1400223e5:	movzx  eax,r8w
   1400223e9:	or     ax,r11w
   1400223ed:	mov    WORD PTR [rbp-0x29],ax
   1400223f1:	mov    r8d,DWORD PTR [rbp-0x29]
   1400223f5:	jmp    0x1400223fb
   1400223f7:	movzx  eax,WORD PTR [rbp-0x29]
   1400223fb:	mov    ecx,0x8000
   140022400:	cmp    ax,cx
   140022403:	ja     0x140022415
   140022405:	and    r8d,0x1ffff
   14002240c:	cmp    r8d,0x18000
   140022413:	jne    0x14002245d
   140022415:	mov    eax,DWORD PTR [rbp-0x27]
   140022418:	or     edx,0xffffffff
   14002241b:	cmp    eax,edx
   14002241d:	jne    0x140022457
   14002241f:	mov    eax,DWORD PTR [rbp-0x23]
   140022422:	mov    DWORD PTR [rbp-0x27],r12d
   140022426:	cmp    eax,edx
   140022428:	jne    0x14002244b
   14002242a:	movzx  eax,WORD PTR [rbp-0x1f]
   14002242e:	mov    DWORD PTR [rbp-0x23],r12d
   140022432:	cmp    ax,bx
   140022435:	jne    0x140022441
   140022437:	mov    WORD PTR [rbp-0x1f],cx
   14002243b:	add    r9w,r11w
   14002243f:	jmp    0x140022451
   140022441:	add    ax,r11w
   140022445:	mov    WORD PTR [rbp-0x1f],ax
   140022449:	jmp    0x140022451
   14002244b:	add    eax,r11d
   14002244e:	mov    DWORD PTR [rbp-0x23],eax
   140022451:	mov    r10d,DWORD PTR [rbp-0x21]
   140022455:	jmp    0x14002245d
   140022457:	add    eax,r11d
   14002245a:	mov    DWORD PTR [rbp-0x27],eax
   14002245d:	mov    r13d,0x7fff
   140022463:	mov    r14d,0x5
   140022469:	mov    edi,0x7fffffff
   14002246e:	cmp    r9w,r13w
   140022472:	jb     0x140022481
   140022474:	movzx  eax,WORD PTR [rbp-0x69]
   140022478:	mov    r10d,DWORD PTR [rbp-0x51]
   14002247c:	neg    ax
   14002247f:	jmp    0x1400224b3
   140022481:	movzx  eax,WORD PTR [rbp-0x27]
   140022485:	or     r9w,WORD PTR [rbp-0x69]
   14002248a:	mov    DWORD PTR [rbp-0x13],r10d
   14002248e:	mov    r10d,DWORD PTR [rbp-0x51]
   140022492:	mov    WORD PTR [rbp-0x19],ax
   140022496:	mov    eax,DWORD PTR [rbp-0x25]
   140022499:	mov    DWORD PTR [rbp-0x17],eax
   14002249c:	mov    r8d,DWORD PTR [rbp-0x15]
   1400224a0:	mov    edx,DWORD PTR [rbp-0x19]
   1400224a3:	mov    WORD PTR [rbp-0xf],r9w
   1400224a8:	jmp    0x1400224cd
   1400224aa:	mov    r13d,0x7fff
   1400224b0:	neg    bx
   1400224b3:	sbb    eax,eax
   1400224b5:	mov    DWORD PTR [rbp-0x15],r12d
   1400224b9:	and    eax,r15d
   1400224bc:	add    eax,0x7fff8000
   1400224c1:	mov    DWORD PTR [rbp-0x11],eax
   1400224c4:	mov    edx,r12d
   1400224c7:	mov    r8d,r12d
   1400224ca:	mov    DWORD PTR [rbp-0x19],edx
   1400224cd:	mov    r9,QWORD PTR [rbp-0x59]
   1400224d1:	test   r10d,r10d
   1400224d4:	jne    0x14002219c
   1400224da:	mov    rbx,QWORD PTR [rbp-0x41]
   1400224de:	mov    ecx,DWORD PTR [rbp-0x61]
   1400224e1:	mov    esi,0xbffd
   1400224e6:	jmp    0x1400224ef
   1400224e8:	mov    r8d,DWORD PTR [rbp-0x15]
   1400224ec:	mov    edx,DWORD PTR [rbp-0x19]
   1400224ef:	mov    eax,DWORD PTR [rbp-0x11]
   1400224f2:	mov    r9d,0x3fff
   1400224f8:	shr    eax,0x10
   1400224fb:	cmp    ax,r9w
   1400224ff:	jb     0x1400227bb
   140022505:	add    cx,r11w
   140022509:	mov    r9d,0x8000
   14002250f:	mov    DWORD PTR [rbp-0x65],r12d
   140022513:	lea    r10d,[r9-0x1]
   140022517:	mov    DWORD PTR [rbp-0x61],ecx
   14002251a:	movzx  ecx,WORD PTR [rbp+0x1]
   14002251e:	movzx  r13d,cx
   140022522:	and    cx,r10w
   140022526:	mov    QWORD PTR [rbp-0x29],0x0
   14002252e:	xor    r13w,ax
   140022532:	and    ax,r10w
   140022536:	mov    DWORD PTR [rbp-0x21],r12d
   14002253a:	and    r13w,r9w
   14002253e:	lea    r9d,[rax+rcx*1]
   140022542:	cmp    ax,r10w
   140022546:	jae    0x1400227a4
   14002254c:	cmp    cx,r10w
   140022550:	jae    0x1400227a4
   140022556:	cmp    r9w,si
   14002255a:	ja     0x1400227a4
   140022560:	mov    r10d,0x3fbf
   140022566:	cmp    r9w,r10w
   14002256a:	ja     0x140022575
   14002256c:	mov    DWORD PTR [rbp-0x11],r12d
   140022570:	jmp    0x1400227b5
   140022575:	test   ax,ax
   140022578:	jne    0x140022596
   14002257a:	add    r9w,r11w
   14002257e:	test   DWORD PTR [rbp-0x11],edi
   140022581:	jne    0x140022596
   140022583:	test   r8d,r8d
   140022586:	jne    0x140022596
   140022588:	test   edx,edx
   14002258a:	jne    0x140022596
   14002258c:	mov    WORD PTR [rbp-0xf],r12w
   140022591:	jmp    0x1400227bb
   140022596:	test   cx,cx
   140022599:	jne    0x1400225b0
   14002259b:	add    r9w,r11w
   14002259f:	test   DWORD PTR [rbp-0x1],edi
   1400225a2:	jne    0x1400225b0
   1400225a4:	cmp    DWORD PTR [rbp-0x5],r12d
   1400225a8:	jne    0x1400225b0
   1400225aa:	cmp    DWORD PTR [rbp-0x9],r12d
   1400225ae:	je     0x14002256c
   1400225b0:	mov    edi,r12d
   1400225b3:	lea    rdx,[rbp-0x29]
   1400225b7:	mov    esi,r14d
   1400225ba:	test   r14d,r14d
   1400225bd:	jle    0x14002261c
   1400225bf:	lea    eax,[rdi+rdi*1]
   1400225c2:	lea    r15,[rbp-0x19]
   1400225c6:	mov    r12d,edi
   1400225c9:	movsxd rcx,eax
   1400225cc:	and    r12d,r11d
   1400225cf:	lea    r14,[rbp-0x1]
   1400225d3:	add    r15,rcx
   1400225d6:	xor    ebx,ebx
   1400225d8:	movzx  eax,WORD PTR [r15]
   1400225dc:	movzx  ecx,WORD PTR [r14]
   1400225e0:	mov    r8d,ebx
   1400225e3:	imul   ecx,eax
   1400225e6:	mov    eax,DWORD PTR [rdx]
   1400225e8:	lea    r10d,[rax+rcx*1]
   1400225ec:	cmp    r10d,eax
   1400225ef:	jb     0x1400225f6
   1400225f1:	cmp    r10d,ecx
   1400225f4:	jae    0x1400225f9
   1400225f6:	mov    r8d,r11d
   1400225f9:	mov    DWORD PTR [rdx],r10d
   1400225fc:	test   r8d,r8d
   1400225ff:	je     0x140022606
   140022601:	add    WORD PTR [rdx+0x4],r11w
   140022606:	sub    esi,r11d
   140022609:	add    r15,0x2
   14002260d:	sub    r14,0x2
   140022611:	test   esi,esi
   140022613:	jg     0x1400225d8
   140022615:	mov    r14d,DWORD PTR [rbp-0x49]
   140022619:	xor    r12d,r12d
   14002261c:	sub    r14d,r11d
   14002261f:	add    rdx,0x2
   140022623:	add    edi,r11d
   140022626:	mov    DWORD PTR [rbp-0x49],r14d
   14002262a:	test   r14d,r14d
   14002262d:	jg     0x1400225b7
   14002262f:	mov    rbx,QWORD PTR [rbp-0x41]
   140022633:	mov    r8d,DWORD PTR [rbp-0x21]
   140022637:	mov    r10d,DWORD PTR [rbp-0x29]
   14002263b:	mov    eax,0xc002
   140022640:	mov    esi,0x80000000
   140022645:	mov    r14d,0xffff
   14002264b:	add    r9w,ax
   14002264f:	test   r9w,r9w
   140022653:	jle    0x140022691
   140022655:	test   esi,r8d
   140022658:	jne    0x14002268b
   14002265a:	mov    edi,DWORD PTR [rbp-0x25]
   14002265d:	mov    edx,r10d
   140022660:	add    r8d,r8d
   140022663:	shr    edx,0x1f
   140022666:	add    r10d,r10d
   140022669:	mov    ecx,edi
   14002266b:	shr    ecx,0x1f
   14002266e:	lea    eax,[rdi+rdi*1]
   140022671:	add    r9w,r14w
   140022675:	or     eax,edx
   140022677:	or     r8d,ecx
   14002267a:	mov    DWORD PTR [rbp-0x29],r10d
   14002267e:	mov    DWORD PTR [rbp-0x25],eax
   140022681:	mov    DWORD PTR [rbp-0x21],r8d
   140022685:	test   r9w,r9w
   140022689:	jg     0x140022655
   14002268b:	test   r9w,r9w
   14002268f:	jg     0x1400226f6
   140022691:	add    r9w,r14w
   140022695:	jns    0x1400226f6
   140022697:	mov    ebx,DWORD PTR [rbp-0x65]
   14002269a:	movzx  eax,r9w
   14002269e:	neg    ax
   1400226a1:	movzx  edx,ax
   1400226a4:	add    r9w,dx
   1400226a8:	test   BYTE PTR [rbp-0x29],r11b
   1400226ac:	je     0x1400226b1
   1400226ae:	add    ebx,r11d
   1400226b1:	mov    edi,DWORD PTR [rbp-0x25]
   1400226b4:	mov    eax,r8d
   1400226b7:	shr    r10d,1
   1400226ba:	mov    ecx,edi
   1400226bc:	shl    eax,0x1f
   1400226bf:	shr    edi,1
   1400226c1:	shl    ecx,0x1f
   1400226c4:	or     edi,eax
   1400226c6:	shr    r8d,1
   1400226c9:	or     r10d,ecx
   1400226cc:	mov    DWORD PTR [rbp-0x25],edi
   1400226cf:	mov    DWORD PTR [rbp-0x29],r10d
   1400226d3:	sub    rdx,r11
   1400226d6:	jne    0x1400226a8
   1400226d8:	test   ebx,ebx
   1400226da:	mov    rbx,QWORD PTR [rbp-0x41]
   1400226de:	mov    DWORD PTR [rbp-0x21],r8d
   1400226e2:	je     0x1400226f6
   1400226e4:	movzx  eax,r10w
   1400226e8:	or     ax,r11w
   1400226ec:	mov    WORD PTR [rbp-0x29],ax
   1400226f0:	mov    r10d,DWORD PTR [rbp-0x29]
   1400226f4:	jmp    0x1400226fa
   1400226f6:	movzx  eax,WORD PTR [rbp-0x29]
   1400226fa:	mov    ecx,0x8000
   1400226ff:	cmp    ax,cx
   140022702:	ja     0x140022714
   140022704:	and    r10d,0x1ffff
   14002270b:	cmp    r10d,0x18000
   140022712:	jne    0x14002275d
   140022714:	mov    eax,DWORD PTR [rbp-0x27]
   140022717:	or     edx,0xffffffff
   14002271a:	cmp    eax,edx
   14002271c:	jne    0x140022757
   14002271e:	mov    eax,DWORD PTR [rbp-0x23]
   140022721:	mov    DWORD PTR [rbp-0x27],r12d
   140022725:	cmp    eax,edx
   140022727:	jne    0x14002274b
   140022729:	movzx  eax,WORD PTR [rbp-0x1f]
   14002272d:	mov    DWORD PTR [rbp-0x23],r12d
   140022731:	cmp    ax,r14w
   140022735:	jne    0x140022741
   140022737:	mov    WORD PTR [rbp-0x1f],cx
   14002273b:	add    r9w,r11w
   14002273f:	jmp    0x140022751
   140022741:	add    ax,r11w
   140022745:	mov    WORD PTR [rbp-0x1f],ax
   140022749:	jmp    0x140022751
   14002274b:	add    eax,r11d
   14002274e:	mov    DWORD PTR [rbp-0x23],eax
   140022751:	mov    r8d,DWORD PTR [rbp-0x21]
   140022755:	jmp    0x14002275d
   140022757:	add    eax,r11d
   14002275a:	mov    DWORD PTR [rbp-0x27],eax
   14002275d:	mov    eax,0x7fff
   140022762:	cmp    r9w,ax
   140022766:	jb     0x140022780
   140022768:	neg    r13w
   14002276c:	mov    r8d,r12d
   14002276f:	mov    edx,r12d
   140022772:	sbb    eax,eax
   140022774:	and    eax,esi
   140022776:	add    eax,0x7fff8000
   14002277b:	mov    DWORD PTR [rbp-0x11],eax
   14002277e:	jmp    0x1400227c0
   140022780:	movzx  eax,WORD PTR [rbp-0x27]
   140022784:	or     r9w,r13w
   140022788:	mov    DWORD PTR [rbp-0x13],r8d
   14002278c:	mov    WORD PTR [rbp-0x19],ax
   140022790:	mov    eax,DWORD PTR [rbp-0x25]
   140022793:	mov    WORD PTR [rbp-0xf],r9w
   140022798:	mov    DWORD PTR [rbp-0x17],eax
   14002279b:	mov    r8d,DWORD PTR [rbp-0x15]
   14002279f:	mov    edx,DWORD PTR [rbp-0x19]
   1400227a2:	jmp    0x1400227c0
   1400227a4:	neg    r13w
   1400227a8:	sbb    eax,eax
   1400227aa:	and    eax,r15d
   1400227ad:	add    eax,0x7fff8000
   1400227b2:	mov    DWORD PTR [rbp-0x11],eax
   1400227b5:	mov    edx,r12d
   1400227b8:	mov    r8d,r12d
   1400227bb:	mov    ecx,0x8000
   1400227c0:	mov    eax,DWORD PTR [rbp-0x61]
   1400227c3:	mov    r14d,DWORD PTR [rbp-0x4d]
   1400227c7:	mov    WORD PTR [rbx],ax
   1400227ca:	test   BYTE PTR [rbp-0x39],r11b
   1400227ce:	je     0x1400227ed
   1400227d0:	cwde   
   1400227d1:	add    r14d,eax
   1400227d4:	test   r14d,r14d
   1400227d7:	jg     0x1400227ed
   1400227d9:	cmp    WORD PTR [rbp-0x67],cx
   1400227dd:	mov    eax,0x20
   1400227e2:	lea    ecx,[rax+0xd]
   1400227e5:	cmove  eax,ecx
   1400227e8:	jmp    0x140022029
   1400227ed:	mov    r9d,DWORD PTR [rbp-0x11]
   1400227f1:	mov    eax,0x15
   1400227f6:	mov    WORD PTR [rbp-0xf],r12w
   1400227fb:	mov    esi,DWORD PTR [rbp-0x11]
   1400227fe:	cmp    r14d,eax
   140022801:	lea    r10d,[rax-0xd]
   140022805:	cmovg  r14d,eax
   140022809:	shr    r9d,0x10
   14002280d:	sub    r9d,0x3ffe
   140022814:	mov    ecx,r8d
   140022817:	mov    eax,edx
   140022819:	add    esi,esi
   14002281b:	add    r8d,r8d
   14002281e:	shr    eax,0x1f
   140022821:	shr    ecx,0x1f
   140022824:	or     r8d,eax
   140022827:	or     esi,ecx
   140022829:	add    edx,edx
   14002282b:	sub    r10,r11
   14002282e:	jne    0x140022814
   140022830:	mov    DWORD PTR [rbp-0x15],r8d
   140022834:	mov    DWORD PTR [rbp-0x19],edx
   140022837:	test   r9d,r9d
   14002283a:	jns    0x14002286e
   14002283c:	neg    r9d
   14002283f:	movzx  r10d,r9b
   140022843:	test   r10d,r10d
   140022846:	jle    0x14002286e
   140022848:	mov    ecx,r8d
   14002284b:	mov    eax,esi
   14002284d:	shr    edx,1
   14002284f:	shr    r8d,1
   140022852:	shl    eax,0x1f
   140022855:	shl    ecx,0x1f
   140022858:	sub    r10d,r11d
   14002285b:	shr    esi,1
   14002285d:	or     r8d,eax
   140022860:	or     edx,ecx
   140022862:	test   r10d,r10d
   140022865:	jg     0x140022848
   140022867:	mov    DWORD PTR [rbp-0x15],r8d
   14002286b:	mov    DWORD PTR [rbp-0x19],edx
   14002286e:	lea    r15d,[r14+0x1]
   140022872:	lea    rdi,[rbx+0x4]
   140022876:	mov    r10,rdi
   140022879:	test   r15d,r15d
   14002287c:	jle    0x140022956
   140022882:	movsd  xmm0,QWORD PTR [rbp-0x19]
   140022887:	mov    ecx,r8d
   14002288a:	add    r8d,r8d
   14002288d:	shr    ecx,0x1f
   140022890:	mov    eax,edx
   140022892:	add    edx,edx
   140022894:	shr    eax,0x1f
   140022897:	lea    r9d,[rsi+rsi*1]
   14002289b:	movsd  QWORD PTR [rbp+0x7],xmm0
   1400228a0:	or     r8d,eax
   1400228a3:	or     r9d,ecx
   1400228a6:	mov    eax,edx
   1400228a8:	mov    ecx,r8d
   1400228ab:	shr    eax,0x1f
   1400228ae:	add    r8d,r8d
   1400228b1:	or     r8d,eax
   1400228b4:	mov    eax,DWORD PTR [rbp+0x7]
   1400228b7:	add    edx,edx
   1400228b9:	shr    ecx,0x1f
   1400228bc:	add    r9d,r9d
   1400228bf:	lea    r12d,[rax+rdx*1]
   1400228c3:	or     r9d,ecx
   1400228c6:	cmp    r12d,edx
   1400228c9:	jb     0x1400228d0
   1400228cb:	cmp    r12d,eax
   1400228ce:	jae    0x1400228f1
   1400228d0:	xor    r14d,r14d
   1400228d3:	lea    eax,[r8+0x1]
   1400228d7:	mov    ecx,r14d
   1400228da:	cmp    eax,r8d
   1400228dd:	jb     0x1400228e4
   1400228df:	cmp    eax,r11d
   1400228e2:	jae    0x1400228e7
   1400228e4:	mov    ecx,r11d
   1400228e7:	mov    r8d,eax
   1400228ea:	test   ecx,ecx
   1400228ec:	je     0x1400228f1
   1400228ee:	add    r9d,r11d
   1400228f1:	mov    rax,QWORD PTR [rbp+0x7]
   1400228f5:	shr    rax,0x20
   1400228f9:	lea    r14d,[r8+rax*1]
   1400228fd:	cmp    r14d,r8d
   140022900:	jb     0x140022907
   140022902:	cmp    r14d,eax
   140022905:	jae    0x14002290a
   140022907:	add    r9d,r11d
   14002290a:	mov    eax,r12d
   14002290d:	add    r9d,esi
   140022910:	lea    edx,[r12+r12*1]
   140022914:	shr    eax,0x1f
   140022917:	xor    r12d,r12d
   14002291a:	lea    r8d,[r14+r14*1]
   14002291e:	or     r8d,eax
   140022921:	mov    ecx,r14d
   140022924:	lea    eax,[r9+r9*1]
   140022928:	shr    ecx,0x1f
   14002292b:	sub    r15d,r11d
   14002292e:	mov    DWORD PTR [rbp-0x19],edx
   140022931:	or     eax,ecx
   140022933:	mov    DWORD PTR [rbp-0x15],r8d
   140022937:	mov    DWORD PTR [rbp-0x11],eax
   14002293a:	shr    eax,0x18
   14002293d:	mov    BYTE PTR [rbp-0xe],r12b
   140022941:	add    al,0x30
   140022943:	mov    BYTE PTR [r10],al
   140022946:	add    r10,r11
   140022949:	test   r15d,r15d
   14002294c:	jle    0x140022956
   14002294e:	mov    esi,DWORD PTR [rbp-0x11]
   140022951:	jmp    0x140022882
   140022956:	sub    r10,r11
   140022959:	mov    al,BYTE PTR [r10]
   14002295c:	sub    r10,r11
   14002295f:	cmp    al,0x35
   140022961:	jl     0x1400229cd
   140022963:	jmp    0x140022972
   140022965:	cmp    BYTE PTR [r10],0x39
   140022969:	jne    0x140022977
   14002296b:	mov    BYTE PTR [r10],0x30
   14002296f:	sub    r10,r11
   140022972:	cmp    r10,rdi
   140022975:	jae    0x140022965
   140022977:	cmp    r10,rdi
   14002297a:	jae    0x140022983
   14002297c:	add    r10,r11
   14002297f:	add    WORD PTR [rbx],r11w
   140022983:	add    BYTE PTR [r10],r11b
   140022986:	sub    r10b,bl
   140022989:	sub    r10b,0x3
   14002298d:	movsx  rax,r10b
   140022991:	mov    BYTE PTR [rbx+0x3],r10b
   140022995:	mov    BYTE PTR [rax+rbx*1+0x4],r12b
   14002299a:	mov    eax,r11d
   14002299d:	mov    rcx,QWORD PTR [rbp+0x17]
   1400229a1:	xor    rcx,rsp
   1400229a4:	call   0x1400130a0
   1400229a9:	mov    rbx,QWORD PTR [rsp+0x108]
   1400229b1:	add    rsp,0xc0
   1400229b8:	pop    r15
   1400229ba:	pop    r14
   1400229bc:	pop    r13
   1400229be:	pop    r12
   1400229c0:	pop    rdi
   1400229c1:	pop    rsi
   1400229c2:	pop    rbp
   1400229c3:	ret    
   1400229c4:	cmp    BYTE PTR [r10],0x30
   1400229c8:	jne    0x1400229d2
   1400229ca:	sub    r10,r11
   1400229cd:	cmp    r10,rdi
   1400229d0:	jae    0x1400229c4
   1400229d2:	cmp    r10,rdi
   1400229d5:	jae    0x140022986
   1400229d7:	mov    eax,0x20
   1400229dc:	mov    r9d,0x8000
   1400229e2:	mov    WORD PTR [rbx],r12w
   1400229e6:	cmp    WORD PTR [rbp-0x67],r9w
   1400229eb:	lea    ecx,[rax+0xd]
   1400229ee:	mov    BYTE PTR [rbx+0x3],r11b
   1400229f2:	cmove  eax,ecx
   1400229f5:	mov    BYTE PTR [rbx+0x2],al
   1400229f8:	mov    BYTE PTR [rdi],0x30
   1400229fb:	jmp    0x140022036
   140022a00:	xor    r9d,r9d
   140022a03:	xor    r8d,r8d
   140022a06:	xor    edx,edx
   140022a08:	xor    ecx,ecx
   140022a0a:	mov    QWORD PTR [rsp+0x20],r12
   140022a0f:	call   0x140013f74
   140022a14:	int3   
   140022a15:	xor    r9d,r9d
   140022a18:	xor    r8d,r8d
   140022a1b:	xor    edx,edx
   140022a1d:	xor    ecx,ecx
   140022a1f:	mov    QWORD PTR [rsp+0x20],r12
   140022a24:	call   0x140013f74
   140022a29:	int3   
   140022a2a:	xor    r9d,r9d
   140022a2d:	xor    r8d,r8d
   140022a30:	xor    edx,edx
   140022a32:	xor    ecx,ecx
   140022a34:	mov    QWORD PTR [rsp+0x20],r12
   140022a39:	call   0x140013f74
   140022a3e:	int3   
   140022a3f:	xor    r9d,r9d
   140022a42:	xor    r8d,r8d
   140022a45:	xor    edx,edx
   140022a47:	xor    ecx,ecx
   140022a49:	mov    QWORD PTR [rsp+0x20],r12
   140022a4e:	call   0x140013f74
   140022a53:	int3   
   140022a54:	mov    QWORD PTR [rsp+0x8],rbx
   140022a59:	mov    QWORD PTR [rsp+0x10],rsi
   140022a5e:	mov    QWORD PTR [rsp+0x18],rdi
   140022a63:	push   r15
   140022a65:	sub    rsp,0x20
   140022a69:	movsxd rax,ecx
   140022a6c:	mov    rsi,rax
   140022a6f:	sar    rsi,0x5
   140022a73:	lea    r15,[rip+0x17056]        # 0x140039ad0
   140022a7a:	and    eax,0x1f
   140022a7d:	imul   rbx,rax,0x58
   140022a81:	mov    rdi,QWORD PTR [r15+rsi*8]
   140022a85:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   140022a8a:	jne    0x140022ac0
   140022a8c:	mov    ecx,0xa
   140022a91:	call   0x14001cde8
   140022a96:	nop
   140022a97:	cmp    DWORD PTR [rbx+rdi*1+0xc],0x0
   140022a9c:	jne    0x140022ab6
   140022a9e:	lea    rcx,[rbx+0x10]
   140022aa2:	add    rcx,rdi
   140022aa5:	xor    r8d,r8d
   140022aa8:	mov    edx,0xfa0
   140022aad:	call   0x140016954
   140022ab2:	inc    DWORD PTR [rbx+rdi*1+0xc]
   140022ab6:	mov    ecx,0xa
   140022abb:	call   0x14001cfd8
   140022ac0:	mov    rcx,QWORD PTR [r15+rsi*8]
   140022ac4:	add    rcx,0x10
   140022ac8:	add    rcx,rbx
   140022acb:	call   QWORD PTR [rip+0x45a7]        # 0x140027078
   140022ad1:	mov    eax,0x1
   140022ad6:	mov    rbx,QWORD PTR [rsp+0x30]
   140022adb:	mov    rsi,QWORD PTR [rsp+0x38]
   140022ae0:	mov    rdi,QWORD PTR [rsp+0x40]
   140022ae5:	add    rsp,0x20
   140022ae9:	pop    r15
   140022aeb:	ret    
   140022aec:	mov    QWORD PTR [rsp+0x8],rbx
   140022af1:	mov    QWORD PTR [rsp+0x10],rdi
   140022af6:	push   r14
   140022af8:	sub    rsp,0x20
   140022afc:	test   ecx,ecx
   140022afe:	js     0x140022b6f
   140022b00:	cmp    ecx,DWORD PTR [rip+0x1891a]        # 0x14003b420
   140022b06:	jae    0x140022b6f
   140022b08:	movsxd rax,ecx
   140022b0b:	lea    r14,[rip+0x16fbe]        # 0x140039ad0
   140022b12:	mov    rdi,rax
   140022b15:	and    eax,0x1f
   140022b18:	sar    rdi,0x5
   140022b1c:	imul   rbx,rax,0x58
   140022b20:	mov    rax,QWORD PTR [r14+rdi*8]
   140022b24:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140022b29:	je     0x140022b6f
   140022b2b:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   140022b30:	je     0x140022b6f
   140022b32:	cmp    DWORD PTR [rip+0x16957],0x1        # 0x140039490
   140022b39:	jne    0x140022b62
   140022b3b:	test   ecx,ecx
   140022b3d:	je     0x140022b55
   140022b3f:	dec    ecx
   140022b41:	je     0x140022b4e
   140022b43:	dec    ecx
   140022b45:	jne    0x140022b62
   140022b47:	mov    ecx,0xfffffff4
   140022b4c:	jmp    0x140022b5a
   140022b4e:	mov    ecx,0xfffffff5
   140022b53:	jmp    0x140022b5a
   140022b55:	mov    ecx,0xfffffff6
   140022b5a:	xor    edx,edx
   140022b5c:	call   QWORD PTR [rip+0x4626]        # 0x140027188
   140022b62:	mov    rax,QWORD PTR [r14+rdi*8]
   140022b66:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   140022b6b:	xor    eax,eax
   140022b6d:	jmp    0x140022b85
   140022b6f:	call   0x1400161e8
   140022b74:	mov    DWORD PTR [rax],0x9
   140022b7a:	call   0x140016178
   140022b7f:	and    DWORD PTR [rax],0x0
   140022b82:	or     eax,0xffffffff
   140022b85:	mov    rbx,QWORD PTR [rsp+0x30]
   140022b8a:	mov    rdi,QWORD PTR [rsp+0x38]
   140022b8f:	add    rsp,0x20
   140022b93:	pop    r14
   140022b95:	ret    
   140022b96:	int3   
   140022b97:	int3   
   140022b98:	sub    rsp,0x28
   140022b9c:	cmp    ecx,0xfffffffe
   140022b9f:	jne    0x140022bb6
   140022ba1:	call   0x140016178
   140022ba6:	and    DWORD PTR [rax],0x0
   140022ba9:	call   0x1400161e8
   140022bae:	mov    DWORD PTR [rax],0x9
   140022bb4:	jmp    0x140022c03
   140022bb6:	test   ecx,ecx
   140022bb8:	js     0x140022beb
   140022bba:	cmp    ecx,DWORD PTR [rip+0x18860]        # 0x14003b420
   140022bc0:	jae    0x140022beb
   140022bc2:	movsxd rcx,ecx
   140022bc5:	lea    r8,[rip+0x16f04]        # 0x140039ad0
   140022bcc:	mov    rax,rcx
   140022bcf:	and    ecx,0x1f
   140022bd2:	sar    rax,0x5
   140022bd6:	imul   rdx,rcx,0x58
   140022bda:	mov    rax,QWORD PTR [r8+rax*8]
   140022bde:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   140022be3:	je     0x140022beb
   140022be5:	mov    rax,QWORD PTR [rax+rdx*1]
   140022be9:	jmp    0x140022c07
   140022beb:	call   0x140016178
   140022bf0:	and    DWORD PTR [rax],0x0
   140022bf3:	call   0x1400161e8
   140022bf8:	mov    DWORD PTR [rax],0x9
   140022bfe:	call   0x140013f54
   140022c03:	or     rax,0xffffffffffffffff
   140022c07:	add    rsp,0x28
   140022c0b:	ret    
   140022c0c:	movsxd rdx,ecx
   140022c0f:	lea    r8,[rip+0x16eba]        # 0x140039ad0
   140022c16:	mov    rax,rdx
   140022c19:	and    edx,0x1f
   140022c1c:	sar    rax,0x5
   140022c20:	imul   rcx,rdx,0x58
   140022c24:	mov    rax,QWORD PTR [r8+rax*8]
   140022c28:	add    rcx,0x10
   140022c2c:	add    rcx,rax
   140022c2f:	rex.W jmp QWORD PTR [rip+0x4402]        # 0x140027038
   140022c36:	int3   
   140022c37:	int3   
   140022c38:	mov    WORD PTR [rsp+0x8],cx
   140022c3d:	sub    rsp,0x38
   140022c41:	mov    rcx,QWORD PTR [rip+0x15b78]        # 0x1400387c0
   140022c48:	cmp    rcx,0xfffffffffffffffe
   140022c4c:	jne    0x140022c5a
   140022c4e:	call   0x140023664
   140022c53:	mov    rcx,QWORD PTR [rip+0x15b66]        # 0x1400387c0
   140022c5a:	cmp    rcx,0xffffffffffffffff
   140022c5e:	jne    0x140022c67
   140022c60:	mov    eax,0xffff
   140022c65:	jmp    0x140022c8c
   140022c67:	and    QWORD PTR [rsp+0x20],0x0
   140022c6d:	lea    r9,[rsp+0x48]
   140022c72:	lea    rdx,[rsp+0x40]
   140022c77:	mov    r8d,0x1
   140022c7d:	call   QWORD PTR [rip+0x44fd]        # 0x140027180
   140022c83:	test   eax,eax
   140022c85:	je     0x140022c60
   140022c87:	movzx  eax,WORD PTR [rsp+0x40]
   140022c8c:	add    rsp,0x38
   140022c90:	ret    
   140022c91:	int3   
   140022c92:	int3   
   140022c93:	int3   
   140022c94:	mov    QWORD PTR [rsp+0x8],rbx
   140022c99:	mov    QWORD PTR [rsp+0x18],rbp
   140022c9e:	push   rsi
   140022c9f:	push   rdi
   140022ca0:	push   r14
   140022ca2:	sub    rsp,0x20
   140022ca6:	mov    r14d,ecx
   140022ca9:	mov    rcx,rdx
   140022cac:	mov    rbx,rdx
   140022caf:	call   0x14001ef08
   140022cb4:	mov    edx,DWORD PTR [rbx+0x18]
   140022cb7:	movsxd rsi,eax
   140022cba:	test   dl,0x82
   140022cbd:	jne    0x140022cd8
   140022cbf:	call   0x1400161e8
   140022cc4:	mov    DWORD PTR [rax],0x9
   140022cca:	or     DWORD PTR [rbx+0x18],0x20
   140022cce:	mov    eax,0xffff
   140022cd3:	jmp    0x140022e0e
   140022cd8:	test   dl,0x40
   140022cdb:	je     0x140022cea
   140022cdd:	call   0x1400161e8
   140022ce2:	mov    DWORD PTR [rax],0x22
   140022ce8:	jmp    0x140022cca
   140022cea:	xor    edi,edi
   140022cec:	test   dl,0x1
   140022cef:	je     0x140022d0a
   140022cf1:	mov    DWORD PTR [rbx+0x8],edi
   140022cf4:	test   dl,0x10
   140022cf7:	je     0x140022d87
   140022cfd:	mov    rax,QWORD PTR [rbx+0x10]
   140022d01:	and    edx,0xfffffffe
   140022d04:	mov    QWORD PTR [rbx],rax
   140022d07:	mov    DWORD PTR [rbx+0x18],edx
   140022d0a:	mov    eax,DWORD PTR [rbx+0x18]
   140022d0d:	mov    DWORD PTR [rbx+0x8],edi
   140022d10:	and    eax,0xffffffef
   140022d13:	or     eax,0x2
   140022d16:	mov    DWORD PTR [rbx+0x18],eax
   140022d19:	test   eax,0x10c
   140022d1e:	jne    0x140022d4f
   140022d20:	call   0x14001daec
   140022d25:	add    rax,0x30
   140022d29:	cmp    rbx,rax
   140022d2c:	je     0x140022d3c
   140022d2e:	call   0x14001daec
   140022d33:	add    rax,0x60
   140022d37:	cmp    rbx,rax
   140022d3a:	jne    0x140022d47
   140022d3c:	mov    ecx,esi
   140022d3e:	call   0x14001ef30
   140022d43:	test   eax,eax
   140022d45:	jne    0x140022d4f
   140022d47:	mov    rcx,rbx
   140022d4a:	call   0x14001f9e4
   140022d4f:	test   DWORD PTR [rbx+0x18],0x108
   140022d56:	je     0x140022de6
   140022d5c:	mov    ebp,DWORD PTR [rbx]
   140022d5e:	mov    rdx,QWORD PTR [rbx+0x10]
   140022d62:	sub    ebp,DWORD PTR [rbx+0x10]
   140022d65:	lea    rax,[rdx+0x2]
   140022d69:	mov    QWORD PTR [rbx],rax
   140022d6c:	mov    eax,DWORD PTR [rbx+0x24]
   140022d6f:	sub    eax,0x2
   140022d72:	mov    DWORD PTR [rbx+0x8],eax
   140022d75:	test   ebp,ebp
   140022d77:	jle    0x140022d92
   140022d79:	mov    r8d,ebp
   140022d7c:	mov    ecx,esi
   140022d7e:	call   0x14001ef90
   140022d83:	mov    edi,eax
   140022d85:	jmp    0x140022ddc
   140022d87:	or     edx,0x20
   140022d8a:	mov    DWORD PTR [rbx+0x18],edx
   140022d8d:	jmp    0x140022cce
   140022d92:	lea    eax,[rsi+0x2]
   140022d95:	cmp    eax,0x1
   140022d98:	jbe    0x140022db8
   140022d9a:	mov    rcx,rsi
   140022d9d:	mov    rax,rsi
   140022da0:	lea    r8,[rip+0x16d29]        # 0x140039ad0
   140022da7:	and    ecx,0x1f
   140022daa:	sar    rax,0x5
   140022dae:	imul   rdx,rcx,0x58
   140022db2:	add    rdx,QWORD PTR [r8+rax*8]
   140022db6:	jmp    0x140022dbf
   140022db8:	lea    rdx,[rip+0x14401]        # 0x1400371c0
   140022dbf:	test   BYTE PTR [rdx+0x8],0x20
   140022dc3:	je     0x140022ddc
   140022dc5:	xor    edx,edx
   140022dc7:	mov    ecx,esi
   140022dc9:	lea    r8d,[rdx+0x2]
   140022dcd:	call   0x14001f868
   140022dd2:	cmp    rax,0xffffffffffffffff
   140022dd6:	je     0x140022cca
   140022ddc:	mov    rax,QWORD PTR [rbx+0x10]
   140022de0:	mov    WORD PTR [rax],r14w
   140022de4:	jmp    0x140022e02
   140022de6:	mov    ebp,0x2
   140022deb:	lea    rdx,[rsp+0x48]
   140022df0:	mov    ecx,esi
   140022df2:	mov    r8d,ebp
   140022df5:	mov    WORD PTR [rsp+0x48],r14w
   140022dfb:	call   0x14001ef90
   140022e00:	mov    edi,eax
   140022e02:	cmp    edi,ebp
   140022e04:	jne    0x140022cca
   140022e0a:	movzx  eax,r14w
   140022e0e:	mov    rbx,QWORD PTR [rsp+0x40]
   140022e13:	mov    rbp,QWORD PTR [rsp+0x50]
   140022e18:	add    rsp,0x20
   140022e1c:	pop    r14
   140022e1e:	pop    rdi
   140022e1f:	pop    rsi
   140022e20:	ret    
   140022e21:	int3   
   140022e22:	int3   
   140022e23:	int3   
   140022e24:	mov    QWORD PTR [rsp+0x8],rbx
   140022e29:	mov    QWORD PTR [rsp+0x10],rsi
   140022e2e:	push   rdi
   140022e2f:	sub    rsp,0x20
   140022e33:	mov    rdi,rcx
   140022e36:	test   rcx,rcx
   140022e39:	jne    0x140022e50
   140022e3b:	call   0x1400161e8
   140022e40:	mov    DWORD PTR [rax],0x16
   140022e46:	call   0x140013f54
   140022e4b:	jmp    0x140022f54
   140022e50:	mov    eax,DWORD PTR [rcx+0x18]
   140022e53:	test   al,0x83
   140022e55:	je     0x140022f54
   140022e5b:	test   al,0x40
   140022e5d:	jne    0x140022f54
   140022e63:	test   al,0x2
   140022e65:	je     0x140022e72
   140022e67:	or     eax,0x20
   140022e6a:	mov    DWORD PTR [rcx+0x18],eax
   140022e6d:	jmp    0x140022f54
   140022e72:	or     eax,0x1
   140022e75:	mov    DWORD PTR [rcx+0x18],eax
   140022e78:	test   eax,0x10c
   140022e7d:	jne    0x140022e86
   140022e7f:	call   0x14001f9e4
   140022e84:	jmp    0x140022e8d
   140022e86:	mov    rax,QWORD PTR [rcx+0x10]
   140022e8a:	mov    QWORD PTR [rcx],rax
   140022e8d:	mov    rcx,rdi
   140022e90:	call   0x14001ef08
   140022e95:	mov    r8d,DWORD PTR [rdi+0x24]
   140022e99:	mov    rdx,QWORD PTR [rdi+0x10]
   140022e9d:	mov    ecx,eax
   140022e9f:	call   0x1400236a0
   140022ea4:	mov    DWORD PTR [rdi+0x8],eax
   140022ea7:	lea    ecx,[rax+0x1]
   140022eaa:	cmp    ecx,0x1
   140022ead:	jbe    0x140022f43
   140022eb3:	test   BYTE PTR [rdi+0x18],0x82
   140022eb7:	jne    0x140022f13
   140022eb9:	mov    rcx,rdi
   140022ebc:	call   0x14001ef08
   140022ec1:	cmp    eax,0xffffffff
   140022ec4:	je     0x140022efe
   140022ec6:	mov    rcx,rdi
   140022ec9:	call   0x14001ef08
   140022ece:	cmp    eax,0xfffffffe
   140022ed1:	je     0x140022efe
   140022ed3:	mov    rcx,rdi
   140022ed6:	call   0x14001ef08
   140022edb:	mov    rcx,rdi
   140022ede:	lea    rsi,[rip+0x16beb]        # 0x140039ad0
   140022ee5:	movsxd rbx,eax
   140022ee8:	sar    rbx,0x5
   140022eec:	call   0x14001ef08
   140022ef1:	and    eax,0x1f
   140022ef4:	imul   rcx,rax,0x58
   140022ef8:	add    rcx,QWORD PTR [rsi+rbx*8]
   140022efc:	jmp    0x140022f05
   140022efe:	lea    rcx,[rip+0x142bb]        # 0x1400371c0
   140022f05:	mov    al,BYTE PTR [rcx+0x8]
   140022f08:	and    al,0x82
   140022f0a:	cmp    al,0x82
   140022f0c:	jne    0x140022f13
   140022f0e:	bts    DWORD PTR [rdi+0x18],0xd
   140022f13:	cmp    DWORD PTR [rdi+0x24],0x200
   140022f1a:	jne    0x140022f32
   140022f1c:	test   BYTE PTR [rdi+0x18],0x8
   140022f20:	je     0x140022f32
   140022f22:	test   DWORD PTR [rdi+0x18],0x400
   140022f29:	jne    0x140022f32
   140022f2b:	mov    DWORD PTR [rdi+0x24],0x1000
   140022f32:	mov    rcx,QWORD PTR [rdi]
   140022f35:	dec    DWORD PTR [rdi+0x8]
   140022f38:	movzx  eax,BYTE PTR [rcx]
   140022f3b:	inc    rcx
   140022f3e:	mov    QWORD PTR [rdi],rcx
   140022f41:	jmp    0x140022f57
   140022f43:	neg    eax
   140022f45:	sbb    eax,eax
   140022f47:	and    eax,0x10
   140022f4a:	add    eax,0x10
   140022f4d:	or     DWORD PTR [rdi+0x18],eax
   140022f50:	and    DWORD PTR [rdi+0x8],0x0
   140022f54:	or     eax,0xffffffff
   140022f57:	mov    rbx,QWORD PTR [rsp+0x30]
   140022f5c:	mov    rsi,QWORD PTR [rsp+0x38]
   140022f61:	add    rsp,0x20
   140022f65:	pop    rdi
   140022f66:	ret    
   140022f67:	int3   
   140022f68:	mov    QWORD PTR [rsp+0x8],rbx
   140022f6d:	push   rdi
   140022f6e:	sub    rsp,0x20
   140022f72:	test   BYTE PTR [rdx+0x18],0x40
   140022f76:	mov    rbx,rdx
   140022f79:	mov    edi,ecx
   140022f7b:	jne    0x140023007
   140022f81:	mov    rcx,rdx
   140022f84:	call   0x14001ef08
   140022f89:	lea    r9,[rip+0x14230]        # 0x1400371c0
   140022f90:	lea    r11,[rip+0x16b39]        # 0x140039ad0
   140022f97:	movsxd r10,eax
   140022f9a:	lea    r8d,[r10+0x2]
   140022f9e:	cmp    r8d,0x1
   140022fa2:	jbe    0x140022fbb
   140022fa4:	mov    rdx,r10
   140022fa7:	mov    rcx,r10
   140022faa:	and    edx,0x1f
   140022fad:	sar    rcx,0x5
   140022fb1:	imul   rax,rdx,0x58
   140022fb5:	add    rax,QWORD PTR [r11+rcx*8]
   140022fb9:	jmp    0x140022fbe
   140022fbb:	mov    rax,r9
   140022fbe:	test   BYTE PTR [rax+0x38],0x7f
   140022fc2:	jne    0x140022fe9
   140022fc4:	lea    eax,[r10+0x2]
   140022fc8:	cmp    eax,0x1
   140022fcb:	jbe    0x140022fe2
   140022fcd:	mov    rcx,r10
   140022fd0:	mov    rax,r10
   140022fd3:	and    ecx,0x1f
   140022fd6:	sar    rax,0x5
   140022fda:	imul   r9,rcx,0x58
   140022fde:	add    r9,QWORD PTR [r11+rax*8]
   140022fe2:	test   BYTE PTR [r9+0x38],0x80
   140022fe7:	je     0x140023007
   140022fe9:	call   0x1400161e8
   140022fee:	mov    DWORD PTR [rax],0x16
   140022ff4:	call   0x140013f54
   140022ff9:	or     eax,0xffffffff
   140022ffc:	mov    rbx,QWORD PTR [rsp+0x30]
   140023001:	add    rsp,0x20
   140023005:	pop    rdi
   140023006:	ret    
   140023007:	cmp    edi,0xffffffff
   14002300a:	je     0x140022ff9
   14002300c:	test   BYTE PTR [rbx+0x18],0x1
   140023010:	jne    0x14002301e
   140023012:	test   BYTE PTR [rbx+0x18],0x80
   140023016:	je     0x140022ff9
   140023018:	test   BYTE PTR [rbx+0x18],0x2
   14002301c:	jne    0x140022ff9
   14002301e:	cmp    QWORD PTR [rbx+0x10],0x0
   140023023:	jne    0x14002302d
   140023025:	mov    rcx,rbx
   140023028:	call   0x14001f9e4
   14002302d:	mov    rax,QWORD PTR [rbx]
   140023030:	cmp    rax,QWORD PTR [rbx+0x10]
   140023034:	jne    0x140023042
   140023036:	cmp    DWORD PTR [rbx+0x8],0x0
   14002303a:	jne    0x140022ff9
   14002303c:	inc    rax
   14002303f:	mov    QWORD PTR [rbx],rax
   140023042:	dec    QWORD PTR [rbx]
   140023045:	test   BYTE PTR [rbx+0x18],0x40
   140023049:	mov    rax,QWORD PTR [rbx]
   14002304c:	je     0x14002305b
   14002304e:	cmp    BYTE PTR [rax],dil
   140023051:	je     0x14002305e
   140023053:	inc    rax
   140023056:	mov    QWORD PTR [rbx],rax
   140023059:	jmp    0x140022ff9
   14002305b:	mov    BYTE PTR [rax],dil
   14002305e:	inc    DWORD PTR [rbx+0x8]
   140023061:	and    DWORD PTR [rbx+0x18],0xffffffef
   140023065:	or     DWORD PTR [rbx+0x18],0x1
   140023069:	movzx  eax,dil
   14002306d:	jmp    0x140022ffc
   14002306f:	int3   
   140023070:	mov    QWORD PTR [rsp+0x8],rbx
   140023075:	mov    QWORD PTR [rsp+0x10],rdx
   14002307a:	push   rdi
   14002307b:	sub    rsp,0x20
   14002307f:	mov    rbx,rdx
   140023082:	mov    edi,ecx
   140023084:	xor    eax,eax
   140023086:	test   rdx,rdx
   140023089:	setne  al
   14002308c:	test   eax,eax
   14002308e:	jne    0x1400230a5
   140023090:	call   0x1400161e8
   140023095:	mov    DWORD PTR [rax],0x16
   14002309b:	call   0x140013f54
   1400230a0:	or     eax,0xffffffff
   1400230a3:	jmp    0x1400230c4
   1400230a5:	mov    rcx,rdx
   1400230a8:	call   0x14001daf4
   1400230ad:	nop
   1400230ae:	mov    rdx,rbx
   1400230b1:	mov    ecx,edi
   1400230b3:	call   0x140022f68
   1400230b8:	mov    edi,eax
   1400230ba:	mov    rcx,rbx
   1400230bd:	call   0x14001db90
   1400230c2:	mov    eax,edi
   1400230c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400230c9:	add    rsp,0x20
   1400230cd:	pop    rdi
   1400230ce:	ret    
   1400230cf:	int3   
   1400230d0:	mov    rax,rsp
   1400230d3:	mov    QWORD PTR [rax+0x8],rbx
   1400230d7:	mov    QWORD PTR [rax+0x10],rbp
   1400230db:	mov    QWORD PTR [rax+0x18],rsi
   1400230df:	mov    QWORD PTR [rax+0x20],rdi
   1400230e3:	push   r14
   1400230e5:	sub    rsp,0x20
   1400230e9:	xor    esi,esi
   1400230eb:	xor    bpl,bpl
   1400230ee:	mov    rdi,rcx
   1400230f1:	test   rcx,rcx
   1400230f4:	jne    0x14002310b
   1400230f6:	call   0x1400161e8
   1400230fb:	mov    DWORD PTR [rax],0x16
   140023101:	call   0x140013f54
   140023106:	jmp    0x140023243
   14002310b:	mov    eax,DWORD PTR [rcx+0x18]
   14002310e:	test   al,0x83
   140023110:	je     0x140023243
   140023116:	test   al,0x40
   140023118:	jne    0x140023243
   14002311e:	test   al,0x2
   140023120:	je     0x14002312d
   140023122:	or     eax,0x20
   140023125:	mov    DWORD PTR [rcx+0x18],eax
   140023128:	jmp    0x140023243
   14002312d:	or     eax,0x1
   140023130:	mov    DWORD PTR [rcx+0x18],eax
   140023133:	test   eax,0x10c
   140023138:	jne    0x140023141
   14002313a:	call   0x14001f9e4
   14002313f:	jmp    0x140023159
   140023141:	cmp    DWORD PTR [rcx+0x8],0x1
   140023145:	jne    0x140023152
   140023147:	mov    rax,QWORD PTR [rcx]
   14002314a:	mov    esi,0x1
   14002314f:	mov    bpl,BYTE PTR [rax]
   140023152:	mov    rax,QWORD PTR [rcx+0x10]
   140023156:	mov    QWORD PTR [rcx],rax
   140023159:	mov    rcx,rdi
   14002315c:	call   0x14001ef08
   140023161:	mov    r8d,DWORD PTR [rdi+0x24]
   140023165:	mov    rdx,QWORD PTR [rdi+0x10]
   140023169:	mov    ecx,eax
   14002316b:	call   0x1400236a0
   140023170:	mov    DWORD PTR [rdi+0x8],eax
   140023173:	lea    ecx,[rax+0x1]
   140023176:	cmp    ecx,0x2
   140023179:	jbe    0x140023232
   14002317f:	test   BYTE PTR [rdi+0x18],0x82
   140023183:	jne    0x1400231df
   140023185:	mov    rcx,rdi
   140023188:	call   0x14001ef08
   14002318d:	cmp    eax,0xffffffff
   140023190:	je     0x1400231ca
   140023192:	mov    rcx,rdi
   140023195:	call   0x14001ef08
   14002319a:	cmp    eax,0xfffffffe
   14002319d:	je     0x1400231ca
   14002319f:	mov    rcx,rdi
   1400231a2:	call   0x14001ef08
   1400231a7:	mov    rcx,rdi
   1400231aa:	lea    r14,[rip+0x1691f]        # 0x140039ad0
   1400231b1:	movsxd rbx,eax
   1400231b4:	sar    rbx,0x5
   1400231b8:	call   0x14001ef08
   1400231bd:	and    eax,0x1f
   1400231c0:	imul   rcx,rax,0x58
   1400231c4:	add    rcx,QWORD PTR [r14+rbx*8]
   1400231c8:	jmp    0x1400231d1
   1400231ca:	lea    rcx,[rip+0x13fef]        # 0x1400371c0
   1400231d1:	mov    al,BYTE PTR [rcx+0x8]
   1400231d4:	and    al,0x82
   1400231d6:	cmp    al,0x82
   1400231d8:	jne    0x1400231df
   1400231da:	bts    DWORD PTR [rdi+0x18],0xd
   1400231df:	cmp    DWORD PTR [rdi+0x24],0x200
   1400231e6:	jne    0x1400231fe
   1400231e8:	test   BYTE PTR [rdi+0x18],0x8
   1400231ec:	je     0x1400231fe
   1400231ee:	test   DWORD PTR [rdi+0x18],0x400
   1400231f5:	jne    0x1400231fe
   1400231f7:	mov    DWORD PTR [rdi+0x24],0x1000
   1400231fe:	mov    rcx,QWORD PTR [rdi]
   140023201:	test   esi,esi
   140023203:	je     0x140023222
   140023205:	movzx  edx,BYTE PTR [rcx]
   140023208:	movzx  eax,bpl
   14002320c:	shl    dx,0x8
   140023210:	or     dx,ax
   140023213:	dec    DWORD PTR [rdi+0x8]
   140023216:	lea    rax,[rcx+0x1]
   14002321a:	mov    QWORD PTR [rdi],rax
   14002321d:	movzx  eax,dx
   140023220:	jmp    0x140023248
   140023222:	add    DWORD PTR [rdi+0x8],0xfffffffe
   140023226:	movzx  eax,WORD PTR [rcx]
   140023229:	add    rcx,0x2
   14002322d:	mov    QWORD PTR [rdi],rcx
   140023230:	jmp    0x140023248
   140023232:	neg    eax
   140023234:	sbb    eax,eax
   140023236:	and    eax,0x10
   140023239:	add    eax,0x10
   14002323c:	or     DWORD PTR [rdi+0x18],eax
   14002323f:	and    DWORD PTR [rdi+0x8],0x0
   140023243:	mov    eax,0xffff
   140023248:	mov    rbx,QWORD PTR [rsp+0x30]
   14002324d:	mov    rbp,QWORD PTR [rsp+0x38]
   140023252:	mov    rsi,QWORD PTR [rsp+0x40]
   140023257:	mov    rdi,QWORD PTR [rsp+0x48]
   14002325c:	add    rsp,0x20
   140023260:	pop    r14
   140023262:	ret    
   140023263:	int3   
   140023264:	mov    QWORD PTR [rsp+0x18],rbx
   140023269:	mov    DWORD PTR [rsp+0x8],ecx
   14002326d:	push   rsi
   14002326e:	push   rdi
   14002326f:	push   r14
   140023271:	sub    rsp,0x20
   140023275:	movsxd rdi,ecx
   140023278:	cmp    edi,0xfffffffe
   14002327b:	jne    0x14002328d
   14002327d:	call   0x1400161e8
   140023282:	mov    DWORD PTR [rax],0x9
   140023288:	jmp    0x14002332a
   14002328d:	test   ecx,ecx
   14002328f:	js     0x14002331a
   140023295:	cmp    edi,DWORD PTR [rip+0x18185]        # 0x14003b420
   14002329b:	jae    0x14002331a
   14002329d:	mov    rax,rdi
   1400232a0:	mov    rbx,rdi
   1400232a3:	sar    rbx,0x5
   1400232a7:	lea    r14,[rip+0x16822]        # 0x140039ad0
   1400232ae:	and    eax,0x1f
   1400232b1:	imul   rsi,rax,0x58
   1400232b5:	mov    rax,QWORD PTR [r14+rbx*8]
   1400232b9:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   1400232be:	and    ecx,0x1
   1400232c1:	je     0x14002331a
   1400232c3:	mov    ecx,edi
   1400232c5:	call   0x140022a54
   1400232ca:	nop
   1400232cb:	mov    rax,QWORD PTR [r14+rbx*8]
   1400232cf:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   1400232d4:	je     0x140023301
   1400232d6:	mov    ecx,edi
   1400232d8:	call   0x140022b98
   1400232dd:	mov    rcx,rax
   1400232e0:	call   QWORD PTR [rip+0x3e2a]        # 0x140027110
   1400232e6:	test   eax,eax
   1400232e8:	jne    0x1400232f4
   1400232ea:	call   QWORD PTR [rip+0x3d70]        # 0x140027060
   1400232f0:	mov    ebx,eax
   1400232f2:	jmp    0x1400232f6
   1400232f4:	xor    ebx,ebx
   1400232f6:	test   ebx,ebx
   1400232f8:	je     0x14002330f
   1400232fa:	call   0x140016178
   1400232ff:	mov    DWORD PTR [rax],ebx
   140023301:	call   0x1400161e8
   140023306:	mov    DWORD PTR [rax],0x9
   14002330c:	or     ebx,0xffffffff
   14002330f:	mov    ecx,edi
   140023311:	call   0x140022c0c
   140023316:	mov    eax,ebx
   140023318:	jmp    0x14002332d
   14002331a:	call   0x1400161e8
   14002331f:	mov    DWORD PTR [rax],0x9
   140023325:	call   0x140013f54
   14002332a:	or     eax,0xffffffff
   14002332d:	mov    rbx,QWORD PTR [rsp+0x50]
   140023332:	add    rsp,0x20
   140023336:	pop    r14
   140023338:	pop    rdi
   140023339:	pop    rsi
   14002333a:	ret    
   14002333b:	int3   
   14002333c:	mov    QWORD PTR [rsp+0x8],rbx
   140023341:	push   rdi
   140023342:	sub    rsp,0x20
   140023346:	or     edi,0xffffffff
   140023349:	mov    rbx,rcx
   14002334c:	test   rcx,rcx
   14002334f:	jne    0x140023365
   140023351:	call   0x1400161e8
   140023356:	mov    DWORD PTR [rax],0x16
   14002335c:	call   0x140013f54
   140023361:	or     eax,edi
   140023363:	jmp    0x1400233ab
   140023365:	test   BYTE PTR [rcx+0x18],0x83
   140023369:	je     0x1400233a5
   14002336b:	call   0x1400208b4
   140023370:	mov    rcx,rbx
   140023373:	mov    edi,eax
   140023375:	call   0x1400241ac
   14002337a:	mov    rcx,rbx
   14002337d:	call   0x14001ef08
   140023382:	mov    ecx,eax
   140023384:	call   0x14002402c
   140023389:	test   eax,eax
   14002338b:	jns    0x140023392
   14002338d:	or     edi,0xffffffff
   140023390:	jmp    0x1400233a5
   140023392:	mov    rcx,QWORD PTR [rbx+0x28]
   140023396:	test   rcx,rcx
   140023399:	je     0x1400233a5
   14002339b:	call   0x14001392c
   1400233a0:	and    QWORD PTR [rbx+0x28],0x0
   1400233a5:	and    DWORD PTR [rbx+0x18],0x0
   1400233a9:	mov    eax,edi
   1400233ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400233b0:	add    rsp,0x20
   1400233b4:	pop    rdi
   1400233b5:	ret    
   1400233b6:	int3   
   1400233b7:	int3   
   1400233b8:	mov    QWORD PTR [rsp+0x10],rbx
   1400233bd:	mov    QWORD PTR [rsp+0x8],rcx
   1400233c2:	push   rdi
   1400233c3:	sub    rsp,0x20
   1400233c7:	mov    rbx,rcx
   1400233ca:	or     edi,0xffffffff
   1400233cd:	xor    eax,eax
   1400233cf:	test   rcx,rcx
   1400233d2:	setne  al
   1400233d5:	test   eax,eax
   1400233d7:	jne    0x1400233ed
   1400233d9:	call   0x1400161e8
   1400233de:	mov    DWORD PTR [rax],0x16
   1400233e4:	call   0x140013f54
   1400233e9:	mov    eax,edi
   1400233eb:	jmp    0x140023413
   1400233ed:	test   BYTE PTR [rcx+0x18],0x40
   1400233f1:	je     0x1400233f9
   1400233f3:	and    DWORD PTR [rcx+0x18],0x0
   1400233f7:	jmp    0x1400233e9
   1400233f9:	call   0x14001daf4
   1400233fe:	nop
   1400233ff:	mov    rcx,rbx
   140023402:	call   0x14002333c
   140023407:	mov    edi,eax
   140023409:	mov    rcx,rbx
   14002340c:	call   0x14001db90
   140023411:	jmp    0x1400233e9
   140023413:	mov    rbx,QWORD PTR [rsp+0x38]
   140023418:	add    rsp,0x20
   14002341c:	pop    rdi
   14002341d:	ret    
   14002341e:	int3   
   14002341f:	int3   
   140023420:	mov    QWORD PTR [rsp+0x8],rbx
   140023425:	mov    QWORD PTR [rsp+0x10],rbp
   14002342a:	mov    QWORD PTR [rsp+0x18],rsi
   14002342f:	push   rdi
   140023430:	push   r12
   140023432:	push   r14
   140023434:	sub    rsp,0x10
   140023438:	and    DWORD PTR [r8],0x0
   14002343c:	and    DWORD PTR [r8+0x4],0x0
   140023441:	and    DWORD PTR [r8+0x8],0x0
   140023446:	mov    r10,r8
   140023449:	mov    edi,edx
   14002344b:	mov    rbp,rcx
   14002344e:	mov    ebx,0x404e
   140023453:	test   edx,edx
   140023455:	je     0x14002359c
   14002345b:	xor    r11d,r11d
   14002345e:	xor    r8d,r8d
   140023461:	xor    r9d,r9d
   140023464:	lea    r12d,[r11+0x1]
   140023468:	movsd  xmm0,QWORD PTR [r10]
   14002346d:	mov    r14d,DWORD PTR [r10+0x8]
   140023471:	mov    ecx,r8d
   140023474:	shr    ecx,0x1f
   140023477:	add    r8d,r8d
   14002347a:	add    r9d,r9d
   14002347d:	movsd  QWORD PTR [rsp],xmm0
   140023482:	or     r9d,ecx
   140023485:	lea    edx,[r11+r11*1]
   140023489:	mov    eax,r11d
   14002348c:	shr    eax,0x1f
   14002348f:	add    r9d,r9d
   140023492:	or     r8d,eax
   140023495:	mov    eax,edx
   140023497:	add    edx,edx
   140023499:	mov    ecx,r8d
   14002349c:	shr    eax,0x1f
   14002349f:	add    r8d,r8d
   1400234a2:	shr    ecx,0x1f
   1400234a5:	or     r8d,eax
   1400234a8:	xor    eax,eax
   1400234aa:	or     r9d,ecx
   1400234ad:	mov    ecx,DWORD PTR [rsp]
   1400234b0:	mov    DWORD PTR [r10],edx
   1400234b3:	lea    esi,[rdx+rcx*1]
   1400234b6:	mov    DWORD PTR [r10+0x4],r8d
   1400234ba:	mov    DWORD PTR [r10+0x8],r9d
   1400234be:	cmp    esi,edx
   1400234c0:	jb     0x1400234c6
   1400234c2:	cmp    esi,ecx
   1400234c4:	jae    0x1400234c9
   1400234c6:	mov    eax,r12d
   1400234c9:	mov    DWORD PTR [r10],esi
   1400234cc:	test   eax,eax
   1400234ce:	je     0x1400234f4
   1400234d0:	mov    eax,r8d
   1400234d3:	inc    r8d
   1400234d6:	xor    ecx,ecx
   1400234d8:	cmp    r8d,eax
   1400234db:	jb     0x1400234e2
   1400234dd:	cmp    r8d,r12d
   1400234e0:	jae    0x1400234e5
   1400234e2:	mov    ecx,r12d
   1400234e5:	mov    DWORD PTR [r10+0x4],r8d
   1400234e9:	test   ecx,ecx
   1400234eb:	je     0x1400234f4
   1400234ed:	inc    r9d
   1400234f0:	mov    DWORD PTR [r10+0x8],r9d
   1400234f4:	mov    rax,QWORD PTR [rsp]
   1400234f8:	xor    ecx,ecx
   1400234fa:	shr    rax,0x20
   1400234fe:	lea    r11d,[r8+rax*1]
   140023502:	cmp    r11d,r8d
   140023505:	jb     0x14002350c
   140023507:	cmp    r11d,eax
   14002350a:	jae    0x14002350f
   14002350c:	mov    ecx,r12d
   14002350f:	mov    DWORD PTR [r10+0x4],r11d
   140023513:	test   ecx,ecx
   140023515:	je     0x14002351e
   140023517:	add    r9d,r12d
   14002351a:	mov    DWORD PTR [r10+0x8],r9d
   14002351e:	add    r9d,r14d
   140023521:	lea    edx,[rsi+rsi*1]
   140023524:	mov    ecx,r11d
   140023527:	shr    ecx,0x1f
   14002352a:	lea    r8d,[r11+r11*1]
   14002352e:	add    r9d,r9d
   140023531:	or     r9d,ecx
   140023534:	mov    eax,esi
   140023536:	mov    DWORD PTR [r10],edx
   140023539:	shr    eax,0x1f
   14002353c:	mov    DWORD PTR [r10+0x8],r9d
   140023540:	or     r8d,eax
   140023543:	xor    eax,eax
   140023545:	mov    DWORD PTR [r10+0x4],r8d
   140023549:	movsx  ecx,BYTE PTR [rbp+0x0]
   14002354d:	lea    r11d,[rdx+rcx*1]
   140023551:	cmp    r11d,edx
   140023554:	jb     0x14002355b
   140023556:	cmp    r11d,ecx
   140023559:	jae    0x14002355e
   14002355b:	mov    eax,r12d
   14002355e:	mov    DWORD PTR [r10],r11d
   140023561:	test   eax,eax
   140023563:	je     0x140023589
   140023565:	mov    eax,r8d
   140023568:	inc    r8d
   14002356b:	xor    ecx,ecx
   14002356d:	cmp    r8d,eax
   140023570:	jb     0x140023577
   140023572:	cmp    r8d,r12d
   140023575:	jae    0x14002357a
   140023577:	mov    ecx,r12d
   14002357a:	mov    DWORD PTR [r10+0x4],r8d
   14002357e:	test   ecx,ecx
   140023580:	je     0x140023589
   140023582:	inc    r9d
   140023585:	mov    DWORD PTR [r10+0x8],r9d
   140023589:	add    rbp,r12
   14002358c:	mov    DWORD PTR [r10+0x4],r8d
   140023590:	mov    DWORD PTR [r10+0x8],r9d
   140023594:	dec    edi
   140023596:	jne    0x140023468
   14002359c:	cmp    DWORD PTR [r10+0x8],0x0
   1400235a1:	jne    0x1400235dd
   1400235a3:	mov    r8d,DWORD PTR [r10+0x4]
   1400235a7:	mov    edx,DWORD PTR [r10]
   1400235aa:	mov    eax,r8d
   1400235ad:	mov    r9d,r8d
   1400235b0:	shl    eax,0x10
   1400235b3:	mov    ecx,edx
   1400235b5:	shl    edx,0x10
   1400235b8:	shr    ecx,0x10
   1400235bb:	shr    r9d,0x10
   1400235bf:	mov    DWORD PTR [r10],edx
   1400235c2:	mov    r8d,ecx
   1400235c5:	or     r8d,eax
   1400235c8:	mov    eax,0xfff0
   1400235cd:	add    bx,ax
   1400235d0:	test   r9d,r9d
   1400235d3:	je     0x1400235a7
   1400235d5:	mov    DWORD PTR [r10+0x4],r8d
   1400235d9:	mov    DWORD PTR [r10+0x8],r9d
   1400235dd:	mov    edx,DWORD PTR [r10+0x8]
   1400235e1:	mov    r11d,0x8000
   1400235e7:	test   r11d,edx
   1400235ea:	jne    0x140023624
   1400235ec:	mov    r9d,DWORD PTR [r10]
   1400235ef:	mov    r8d,DWORD PTR [r10+0x4]
   1400235f3:	mov    ecx,r8d
   1400235f6:	mov    eax,r9d
   1400235f9:	add    r8d,r8d
   1400235fc:	shr    eax,0x1f
   1400235ff:	add    edx,edx
   140023601:	shr    ecx,0x1f
   140023604:	or     r8d,eax
   140023607:	mov    eax,0xffff
   14002360c:	or     edx,ecx
   14002360e:	add    bx,ax
   140023611:	add    r9d,r9d
   140023614:	test   r11d,edx
   140023617:	je     0x1400235f3
   140023619:	mov    DWORD PTR [r10],r9d
   14002361c:	mov    DWORD PTR [r10+0x4],r8d
   140023620:	mov    DWORD PTR [r10+0x8],edx
   140023624:	mov    rbp,QWORD PTR [rsp+0x38]
   140023629:	mov    rsi,QWORD PTR [rsp+0x40]
   14002362e:	mov    WORD PTR [r10+0xa],bx
   140023633:	mov    rbx,QWORD PTR [rsp+0x30]
   140023638:	add    rsp,0x10
   14002363c:	pop    r14
   14002363e:	pop    r12
   140023640:	pop    rdi
   140023641:	ret    
   140023642:	int3   
   140023643:	int3   
   140023644:	sub    rsp,0x28
   140023648:	mov    rcx,QWORD PTR [rip+0x15171]        # 0x1400387c0
   14002364f:	lea    rax,[rcx+0x2]
   140023653:	cmp    rax,0x1
   140023657:	jbe    0x14002365f
   140023659:	call   QWORD PTR [rip+0x3a41]        # 0x1400270a0
   14002365f:	add    rsp,0x28
   140023663:	ret    
   140023664:	sub    rsp,0x48
   140023668:	and    QWORD PTR [rsp+0x30],0x0
   14002366e:	and    DWORD PTR [rsp+0x28],0x0
   140023673:	mov    r8d,0x3
   140023679:	lea    rcx,[rip+0xb470]        # 0x14002eaf0
   140023680:	xor    r9d,r9d
   140023683:	mov    edx,0x40000000
   140023688:	mov    DWORD PTR [rsp+0x20],r8d
   14002368d:	call   QWORD PTR [rip+0x39bd]        # 0x140027050
   140023693:	mov    QWORD PTR [rip+0x15126],rax        # 0x1400387c0
   14002369a:	add    rsp,0x48
   14002369e:	ret    
   14002369f:	int3   
   1400236a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400236a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400236aa:	mov    DWORD PTR [rsp+0x8],ecx
   1400236ae:	push   rdi
   1400236af:	push   r12
   1400236b1:	push   r13
   1400236b3:	push   r14
   1400236b5:	push   r15
   1400236b7:	sub    rsp,0x20
   1400236bb:	mov    esi,r8d
   1400236be:	mov    r15,rdx
   1400236c1:	movsxd rdi,ecx
   1400236c4:	cmp    edi,0xfffffffe
   1400236c7:	jne    0x1400236e2
   1400236c9:	call   0x140016178
   1400236ce:	xor    ebx,ebx
   1400236d0:	mov    DWORD PTR [rax],ebx
   1400236d2:	call   0x1400161e8
   1400236d7:	mov    DWORD PTR [rax],0x9
   1400236dd:	jmp    0x1400237a1
   1400236e2:	xor    ebx,ebx
   1400236e4:	test   ecx,ecx
   1400236e6:	js     0x14002378a
   1400236ec:	cmp    edi,DWORD PTR [rip+0x17d2e]        # 0x14003b420
   1400236f2:	jae    0x14002378a
   1400236f8:	mov    rax,rdi
   1400236fb:	mov    r14,rdi
   1400236fe:	sar    r14,0x5
   140023702:	lea    r13,[rip+0x163c7]        # 0x140039ad0
   140023709:	and    eax,0x1f
   14002370c:	imul   r12,rax,0x58
   140023710:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   140023715:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14002371b:	and    ecx,0x1
   14002371e:	je     0x14002378a
   140023720:	mov    eax,ebx
   140023722:	cmp    r8d,0x7fffffff
   140023729:	setbe  al
   14002372c:	test   eax,eax
   14002372e:	jne    0x140023744
   140023730:	call   0x140016178
   140023735:	mov    DWORD PTR [rax],ebx
   140023737:	call   0x1400161e8
   14002373c:	mov    DWORD PTR [rax],0x16
   140023742:	jmp    0x14002379c
   140023744:	mov    ecx,edi
   140023746:	call   0x140022a54
   14002374b:	nop
   14002374c:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   140023751:	test   BYTE PTR [rax+r12*1+0x8],0x1
   140023757:	je     0x14002376a
   140023759:	mov    r8d,esi
   14002375c:	mov    rdx,r15
   14002375f:	mov    ecx,edi
   140023761:	call   0x1400237bc
   140023766:	mov    ebx,eax
   140023768:	jmp    0x14002377f
   14002376a:	call   0x1400161e8
   14002376f:	mov    DWORD PTR [rax],0x9
   140023775:	call   0x140016178
   14002377a:	mov    DWORD PTR [rax],ebx
   14002377c:	or     ebx,0xffffffff
   14002377f:	mov    ecx,edi
   140023781:	call   0x140022c0c
   140023786:	mov    eax,ebx
   140023788:	jmp    0x1400237a4
   14002378a:	call   0x140016178
   14002378f:	mov    DWORD PTR [rax],ebx
   140023791:	call   0x1400161e8
   140023796:	mov    DWORD PTR [rax],0x9
   14002379c:	call   0x140013f54
   1400237a1:	or     eax,0xffffffff
   1400237a4:	mov    rbx,QWORD PTR [rsp+0x58]
   1400237a9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400237ae:	add    rsp,0x20
   1400237b2:	pop    r15
   1400237b4:	pop    r14
   1400237b6:	pop    r13
   1400237b8:	pop    r12
   1400237ba:	pop    rdi
   1400237bb:	ret    
   1400237bc:	mov    QWORD PTR [rsp+0x10],rdx
   1400237c1:	mov    DWORD PTR [rsp+0x8],ecx
   1400237c5:	push   rbp
   1400237c6:	push   rbx
   1400237c7:	push   rsi
   1400237c8:	push   rdi
   1400237c9:	push   r12
   1400237cb:	push   r13
   1400237cd:	push   r14
   1400237cf:	push   r15
   1400237d1:	mov    rbp,rsp
   1400237d4:	sub    rsp,0x58
   1400237d8:	mov    ebx,r8d
   1400237db:	xor    edi,edi
   1400237dd:	movsxd r8,ecx
   1400237e0:	mov    r9,rdx
   1400237e3:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   1400237ea:	mov    DWORD PTR [rbp-0x18],edi
   1400237ed:	mov    DWORD PTR [rbp-0x10],ebx
   1400237f0:	cmp    r8d,0xfffffffe
   1400237f4:	jne    0x14002380d
   1400237f6:	call   0x140016178
   1400237fb:	mov    DWORD PTR [rax],edi
   1400237fd:	call   0x1400161e8
   140023802:	mov    DWORD PTR [rax],0x9
   140023808:	jmp    0x140024018
   14002380d:	test   ecx,ecx
   14002380f:	js     0x140024001
   140023815:	cmp    r8d,DWORD PTR [rip+0x17c04]        # 0x14003b420
   14002381c:	jae    0x140024001
   140023822:	mov    rax,r8
   140023825:	mov    r13,r8
   140023828:	lea    r10,[rip+0xfffffffffffdc7d1]        # 0x140000000
   14002382f:	and    eax,0x1f
   140023832:	sar    r13,0x5
   140023836:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   14002383e:	imul   r14,rax,0x58
   140023842:	mov    al,BYTE PTR [rcx+r14*1+0x8]
   140023847:	test   al,0x1
   140023849:	je     0x140024001
   14002384f:	cmp    ebx,0x7fffffff
   140023855:	jbe    0x14002386e
   140023857:	call   0x140016178
   14002385c:	mov    DWORD PTR [rax],edi
   14002385e:	call   0x1400161e8
   140023863:	mov    DWORD PTR [rax],0x16
   140023869:	jmp    0x140024013
   14002386e:	mov    esi,edi
   140023870:	test   ebx,ebx
   140023872:	je     0x140023ffd
   140023878:	test   al,0x2
   14002387a:	jne    0x140023ffd
   140023880:	test   rdx,rdx
   140023883:	je     0x140023857
   140023885:	mov    dl,BYTE PTR [rcx+r14*1+0x38]
   14002388a:	mov    r11d,0x4
   140023890:	add    dl,dl
   140023892:	sar    dl,1
   140023894:	movsx  ecx,dl
   140023897:	mov    BYTE PTR [rbp+0x60],dl
   14002389a:	dec    ecx
   14002389c:	je     0x1400238b2
   14002389e:	dec    ecx
   1400238a0:	jne    0x1400238ad
   1400238a2:	mov    eax,ebx
   1400238a4:	not    eax
   1400238a6:	test   al,0x1
   1400238a8:	je     0x140023857
   1400238aa:	and    ebx,0xfffffffe
   1400238ad:	mov    r15,r9
   1400238b0:	jmp    0x140023916
   1400238b2:	mov    eax,ebx
   1400238b4:	not    eax
   1400238b6:	test   al,0x1
   1400238b8:	je     0x140023857
   1400238ba:	shr    ebx,1
   1400238bc:	cmp    ebx,r11d
   1400238bf:	cmovb  ebx,r11d
   1400238c3:	mov    ecx,ebx
   1400238c5:	call   0x140015d94
   1400238ca:	mov    r15,rax
   1400238cd:	test   rax,rax
   1400238d0:	jne    0x1400238ed
   1400238d2:	call   0x1400161e8
   1400238d7:	mov    DWORD PTR [rax],0xc
   1400238dd:	call   0x140016178
   1400238e2:	mov    DWORD PTR [rax],0x8
   1400238e8:	jmp    0x140024018
   1400238ed:	mov    ecx,DWORD PTR [rbp+0x48]
   1400238f0:	xor    edx,edx
   1400238f2:	lea    r8d,[rdx+0x1]
   1400238f6:	call   0x14001f950
   1400238fb:	mov    dl,BYTE PTR [rbp+0x60]
   1400238fe:	mov    r8d,DWORD PTR [rbp+0x48]
   140023902:	lea    r10,[rip+0xfffffffffffdc6f7]        # 0x140000000
   140023909:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023911:	mov    QWORD PTR [rcx+r14*1+0x40],rax
   140023916:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   14002391e:	mov    r12,r15
   140023921:	mov    r9d,0xa
   140023927:	test   BYTE PTR [rax+r14*1+0x8],0x48
   14002392d:	je     0x1400239d3
   140023933:	mov    cl,BYTE PTR [rax+r14*1+0x9]
   140023938:	cmp    cl,r9b
   14002393b:	je     0x1400239d3
   140023941:	test   ebx,ebx
   140023943:	je     0x1400239d3
   140023949:	mov    BYTE PTR [r15],cl
   14002394c:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   140023954:	or     r11d,0xffffffff
   140023958:	add    ebx,r11d
   14002395b:	lea    r12,[r15+0x1]
   14002395f:	lea    esi,[r9-0x9]
   140023963:	mov    BYTE PTR [rax+r14*1+0x9],r9b
   140023968:	test   dl,dl
   14002396a:	je     0x1400239d3
   14002396c:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   140023974:	mov    cl,BYTE PTR [rax+r14*1+0x39]
   140023979:	cmp    cl,r9b
   14002397c:	je     0x1400239d3
   14002397e:	test   ebx,ebx
   140023980:	je     0x1400239d3
   140023982:	mov    BYTE PTR [r12],cl
   140023986:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   14002398e:	add    ebx,r11d
   140023991:	inc    r12
   140023994:	lea    esi,[r9-0x8]
   140023998:	mov    BYTE PTR [rax+r14*1+0x39],r9b
   14002399d:	cmp    dl,0x1
   1400239a0:	jne    0x1400239d3
   1400239a2:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   1400239aa:	mov    cl,BYTE PTR [rax+r14*1+0x3a]
   1400239af:	cmp    cl,r9b
   1400239b2:	je     0x1400239d3
   1400239b4:	test   ebx,ebx
   1400239b6:	je     0x1400239d3
   1400239b8:	mov    BYTE PTR [r12],cl
   1400239bc:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   1400239c4:	inc    r12
   1400239c7:	lea    esi,[r9-0x7]
   1400239cb:	add    ebx,r11d
   1400239ce:	mov    BYTE PTR [rax+r14*1+0x3a],r9b
   1400239d3:	mov    ecx,r8d
   1400239d6:	call   0x14001ef30
   1400239db:	test   eax,eax
   1400239dd:	je     0x140023a63
   1400239e3:	lea    rcx,[rip+0xfffffffffffdc616]        # 0x140000000
   1400239ea:	mov    rcx,QWORD PTR [rcx+r13*8+0x39ad0]
   1400239f2:	test   BYTE PTR [rcx+r14*1+0x8],0x80
   1400239f8:	je     0x140023a63
   1400239fa:	mov    rcx,QWORD PTR [rcx+r14*1]
   1400239fe:	lea    rdx,[rbp-0x18]
   140023a02:	call   QWORD PTR [rip+0x37c8]        # 0x1400271d0
   140023a08:	mov    DWORD PTR [rbp-0x18],eax
   140023a0b:	test   eax,eax
   140023a0d:	je     0x140023a63
   140023a0f:	cmp    BYTE PTR [rbp+0x60],0x2
   140023a13:	jne    0x140023a63
   140023a15:	lea    rax,[rip+0xfffffffffffdc5e4]        # 0x140000000
   140023a1c:	shr    ebx,1
   140023a1e:	lea    r9,[rbp-0x24]
   140023a22:	mov    rcx,QWORD PTR [rax+r13*8+0x39ad0]
   140023a2a:	mov    rdx,r12
   140023a2d:	mov    r8d,ebx
   140023a30:	mov    rcx,QWORD PTR [rcx+r14*1]
   140023a34:	mov    QWORD PTR [rsp+0x20],rdi
   140023a39:	call   QWORD PTR [rip+0x3739]        # 0x140027178
   140023a3f:	test   eax,eax
   140023a41:	jne    0x140023a58
   140023a43:	call   QWORD PTR [rip+0x3617]        # 0x140027060
   140023a49:	mov    ecx,eax
   140023a4b:	call   0x140016198
   140023a50:	or     ebx,0xffffffff
   140023a53:	jmp    0x140023e02
   140023a58:	mov    eax,DWORD PTR [rbp-0x24]
   140023a5b:	lea    edx,[rax+rax*1]
   140023a5e:	mov    DWORD PTR [rbp-0x24],edx
   140023a61:	jmp    0x140023aaa
   140023a63:	lea    rcx,[rip+0xfffffffffffdc596]        # 0x140000000
   140023a6a:	lea    r9,[rbp-0x24]
   140023a6e:	mov    r8d,ebx
   140023a71:	mov    rcx,QWORD PTR [rcx+r13*8+0x39ad0]
   140023a79:	mov    rdx,r12
   140023a7c:	mov    QWORD PTR [rsp+0x20],rdi
   140023a81:	mov    rcx,QWORD PTR [rcx+r14*1]
   140023a85:	call   QWORD PTR [rip+0x35bd]        # 0x140027048
   140023a8b:	test   eax,eax
   140023a8d:	je     0x140023fc7
   140023a93:	movsxd rdx,DWORD PTR [rbp-0x24]
   140023a97:	test   edx,edx
   140023a99:	js     0x140023fc7
   140023a9f:	mov    eax,ebx
   140023aa1:	cmp    rdx,rax
   140023aa4:	ja     0x140023fc7
   140023aaa:	lea    r10,[rip+0xfffffffffffdc54f]        # 0x140000000
   140023ab1:	add    esi,edx
   140023ab3:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023abb:	mov    al,BYTE PTR [rcx+r14*1+0x8]
   140023ac0:	test   al,al
   140023ac2:	jns    0x140023dff
   140023ac8:	cmp    BYTE PTR [rbp+0x60],0x2
   140023acc:	je     0x140023d77
   140023ad2:	test   edx,edx
   140023ad4:	mov    edx,0xa
   140023ad9:	je     0x140023ae4
   140023adb:	cmp    BYTE PTR [r15],dl
   140023ade:	jne    0x140023ae4
   140023ae0:	or     al,0x4
   140023ae2:	jmp    0x140023ae6
   140023ae4:	and    al,0xfb
   140023ae6:	mov    BYTE PTR [rcx+r14*1+0x8],al
   140023aeb:	movsxd rax,esi
   140023aee:	mov    rbx,r15
   140023af1:	add    rax,r15
   140023af4:	mov    r12,r15
   140023af7:	mov    QWORD PTR [rbp-0x18],rax
   140023afb:	cmp    r15,rax
   140023afe:	jae    0x140023c37
   140023b04:	mov    esi,0xd
   140023b09:	mov    al,BYTE PTR [r12]
   140023b0d:	cmp    al,0x1a
   140023b0f:	je     0x140023c14
   140023b15:	cmp    al,sil
   140023b18:	je     0x140023b27
   140023b1a:	mov    BYTE PTR [rbx],al
   140023b1c:	inc    rbx
   140023b1f:	inc    r12
   140023b22:	jmp    0x140023c08
   140023b27:	mov    rax,QWORD PTR [rbp-0x18]
   140023b2b:	dec    rax
   140023b2e:	cmp    r12,rax
   140023b31:	jae    0x140023b4d
   140023b33:	lea    rax,[r12+0x1]
   140023b38:	cmp    BYTE PTR [rax],dl
   140023b3a:	jne    0x140023b45
   140023b3c:	add    r12,0x2
   140023b40:	jmp    0x140023bcd
   140023b45:	mov    r12,rax
   140023b48:	jmp    0x140023c02
   140023b4d:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023b55:	lea    r9,[rbp-0x24]
   140023b59:	lea    rdx,[rbp+0x58]
   140023b5d:	mov    rcx,QWORD PTR [rcx+r14*1]
   140023b61:	mov    r8d,0x1
   140023b67:	inc    r12
   140023b6a:	mov    QWORD PTR [rsp+0x20],rdi
   140023b6f:	call   QWORD PTR [rip+0x34d3]        # 0x140027048
   140023b75:	test   eax,eax
   140023b77:	jne    0x140023b83
   140023b79:	call   QWORD PTR [rip+0x34e1]        # 0x140027060
   140023b7f:	test   eax,eax
   140023b81:	jne    0x140023bf6
   140023b83:	cmp    DWORD PTR [rbp-0x24],edi
   140023b86:	je     0x140023bf6
   140023b88:	lea    r10,[rip+0xfffffffffffdc471]        # 0x140000000
   140023b8f:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   140023b97:	test   BYTE PTR [rax+r14*1+0x8],0x48
   140023b9d:	je     0x140023bbe
   140023b9f:	mov    edx,0xa
   140023ba4:	cmp    BYTE PTR [rbp+0x58],dl
   140023ba7:	je     0x140023bcd
   140023ba9:	mov    BYTE PTR [rbx],sil
   140023bac:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023bb4:	mov    al,BYTE PTR [rbp+0x58]
   140023bb7:	mov    BYTE PTR [rcx+r14*1+0x9],al
   140023bbc:	jmp    0x140023c05
   140023bbe:	cmp    rbx,r15
   140023bc1:	jne    0x140023bd1
   140023bc3:	mov    edx,0xa
   140023bc8:	cmp    BYTE PTR [rbp+0x58],dl
   140023bcb:	jne    0x140023bd1
   140023bcd:	mov    BYTE PTR [rbx],dl
   140023bcf:	jmp    0x140023c05
   140023bd1:	mov    ecx,DWORD PTR [rbp+0x48]
   140023bd4:	mov    r8d,0x1
   140023bda:	or     rdx,0xffffffffffffffff
   140023bde:	call   0x14001f950
   140023be3:	mov    edx,0xa
   140023be8:	lea    r10,[rip+0xfffffffffffdc411]        # 0x140000000
   140023bef:	cmp    BYTE PTR [rbp+0x58],dl
   140023bf2:	je     0x140023c08
   140023bf4:	jmp    0x140023c02
   140023bf6:	mov    edx,0xa
   140023bfb:	lea    r10,[rip+0xfffffffffffdc3fe]        # 0x140000000
   140023c02:	mov    BYTE PTR [rbx],sil
   140023c05:	inc    rbx
   140023c08:	cmp    r12,QWORD PTR [rbp-0x18]
   140023c0c:	jb     0x140023b09
   140023c12:	jmp    0x140023c37
   140023c14:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023c1c:	mov    al,BYTE PTR [rcx+r14*1+0x8]
   140023c21:	test   al,0x40
   140023c23:	jne    0x140023c2e
   140023c25:	or     al,0x2
   140023c27:	mov    BYTE PTR [rcx+r14*1+0x8],al
   140023c2c:	jmp    0x140023c37
   140023c2e:	mov    al,BYTE PTR [r12]
   140023c32:	mov    BYTE PTR [rbx],al
   140023c34:	inc    rbx
   140023c37:	mov    esi,ebx
   140023c39:	sub    esi,r15d
   140023c3c:	cmp    BYTE PTR [rbp+0x60],0x1
   140023c40:	jne    0x140023dff
   140023c46:	test   esi,esi
   140023c48:	je     0x140023dff
   140023c4e:	dec    rbx
   140023c51:	test   BYTE PTR [rbx],0x80
   140023c54:	jne    0x140023c5e
   140023c56:	inc    rbx
   140023c59:	jmp    0x140023d10
   140023c5e:	mov    edx,0x1
   140023c63:	jmp    0x140023c74
   140023c65:	cmp    edx,0x4
   140023c68:	jg     0x140023c81
   140023c6a:	cmp    rbx,r15
   140023c6d:	jb     0x140023c81
   140023c6f:	dec    rbx
   140023c72:	inc    edx
   140023c74:	movzx  eax,BYTE PTR [rbx]
   140023c77:	cmp    BYTE PTR [rax+r10*1+0x387d0],dil
   140023c7f:	je     0x140023c65
   140023c81:	movzx  ecx,BYTE PTR [rbx]
   140023c84:	movsx  eax,BYTE PTR [rcx+r10*1+0x387d0]
   140023c8d:	test   eax,eax
   140023c8f:	jne    0x140023ca1
   140023c91:	call   0x1400161e8
   140023c96:	mov    DWORD PTR [rax],0x2a
   140023c9c:	jmp    0x140023a50
   140023ca1:	inc    eax
   140023ca3:	cmp    eax,edx
   140023ca5:	jne    0x140023caf
   140023ca7:	movsxd rax,edx
   140023caa:	add    rbx,rax
   140023cad:	jmp    0x140023d10
   140023caf:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   140023cb7:	test   BYTE PTR [rax+r14*1+0x8],0x48
   140023cbd:	je     0x140023cfd
   140023cbf:	inc    rbx
   140023cc2:	mov    BYTE PTR [rax+r14*1+0x9],cl
   140023cc7:	cmp    edx,0x2
   140023cca:	jl     0x140023cde
   140023ccc:	mov    al,BYTE PTR [rbx]
   140023cce:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023cd6:	inc    rbx
   140023cd9:	mov    BYTE PTR [rcx+r14*1+0x39],al
   140023cde:	cmp    edx,0x3
   140023ce1:	jne    0x140023cf5
   140023ce3:	mov    al,BYTE PTR [rbx]
   140023ce5:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023ced:	inc    rbx
   140023cf0:	mov    BYTE PTR [rcx+r14*1+0x3a],al
   140023cf5:	movsxd rax,edx
   140023cf8:	sub    rbx,rax
   140023cfb:	jmp    0x140023d10
   140023cfd:	mov    ecx,DWORD PTR [rbp+0x48]
   140023d00:	neg    edx
   140023d02:	mov    r8d,0x1
   140023d08:	movsxd rdx,edx
   140023d0b:	call   0x14001f950
   140023d10:	mov    eax,DWORD PTR [rbp-0x10]
   140023d13:	mov    r12,QWORD PTR [rbp+0x50]
   140023d17:	sub    ebx,r15d
   140023d1a:	shr    eax,1
   140023d1c:	mov    r9d,ebx
   140023d1f:	mov    r8,r15
   140023d22:	mov    DWORD PTR [rsp+0x28],eax
   140023d26:	xor    edx,edx
   140023d28:	mov    ecx,0xfde9
   140023d2d:	mov    QWORD PTR [rsp+0x20],r12
   140023d32:	call   QWORD PTR [rip+0x34a0]        # 0x1400271d8
   140023d38:	mov    esi,eax
   140023d3a:	test   eax,eax
   140023d3c:	jne    0x140023d53
   140023d3e:	call   QWORD PTR [rip+0x331c]        # 0x140027060
   140023d44:	mov    ecx,eax
   140023d46:	call   0x140016198
   140023d4b:	or     ebx,0xffffffff
   140023d4e:	jmp    0x140023e06
   140023d53:	cmp    eax,ebx
   140023d55:	mov    ebx,DWORD PTR [rbp-0x20]
   140023d58:	lea    rax,[rip+0xfffffffffffdc2a1]        # 0x140000000
   140023d5f:	mov    rax,QWORD PTR [rax+r13*8+0x39ad0]
   140023d67:	setne  dil
   140023d6b:	add    esi,esi
   140023d6d:	mov    DWORD PTR [rax+r14*1+0x48],edi
   140023d72:	jmp    0x140023e06
   140023d77:	cmp    DWORD PTR [rbp-0x18],edi
   140023d7a:	je     0x140023e20
   140023d80:	mov    eax,esi
   140023d82:	mov    r8,r15
   140023d85:	mov    r9,r15
   140023d88:	cdq    
   140023d89:	sub    eax,edx
   140023d8b:	sar    eax,1
   140023d8d:	movsxd rcx,eax
   140023d90:	lea    rdx,[r15+rcx*2]
   140023d94:	cmp    r15,rdx
   140023d97:	jae    0x140023df4
   140023d99:	mov    esi,0xd
   140023d9e:	lea    ecx,[rsi-0x3]
   140023da1:	movzx  eax,WORD PTR [r9]
   140023da5:	cmp    ax,0x1a
   140023da9:	je     0x140023de6
   140023dab:	cmp    ax,si
   140023dae:	je     0x140023dbe
   140023db0:	mov    WORD PTR [r8],ax
   140023db4:	add    r8,0x2
   140023db8:	add    r9,0x2
   140023dbc:	jmp    0x140023ddf
   140023dbe:	lea    rax,[rdx-0x2]
   140023dc2:	cmp    r9,rax
   140023dc5:	jae    0x140023ddf
   140023dc7:	add    r9,0x2
   140023dcb:	cmp    WORD PTR [r9],cx
   140023dcf:	jne    0x140023dd7
   140023dd1:	mov    WORD PTR [r8],cx
   140023dd5:	jmp    0x140023ddb
   140023dd7:	mov    WORD PTR [r8],si
   140023ddb:	add    r8,0x2
   140023ddf:	cmp    r9,rdx
   140023de2:	jb     0x140023da1
   140023de4:	jmp    0x140023df4
   140023de6:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   140023dee:	or     BYTE PTR [rax+r14*1+0x8],0x2
   140023df4:	sub    r8,r15
   140023df7:	mov    rsi,r8
   140023dfa:	sar    rsi,1
   140023dfd:	add    esi,esi
   140023dff:	mov    ebx,DWORD PTR [rbp-0x20]
   140023e02:	mov    r12,QWORD PTR [rbp+0x50]
   140023e06:	cmp    r15,r12
   140023e09:	je     0x140023e13
   140023e0b:	mov    rcx,r15
   140023e0e:	call   0x14001392c
   140023e13:	cmp    ebx,0xfffffffe
   140023e16:	cmove  ebx,esi
   140023e19:	mov    eax,ebx
   140023e1b:	jmp    0x14002401b
   140023e20:	test   edx,edx
   140023e22:	mov    edx,0xa
   140023e27:	je     0x140023e33
   140023e29:	cmp    WORD PTR [r15],dx
   140023e2d:	jne    0x140023e33
   140023e2f:	or     al,0x4
   140023e31:	jmp    0x140023e35
   140023e33:	and    al,0xfb
   140023e35:	mov    BYTE PTR [rcx+r14*1+0x8],al
   140023e3a:	movsxd rax,esi
   140023e3d:	mov    rbx,r15
   140023e40:	add    rax,r15
   140023e43:	mov    r12,r15
   140023e46:	mov    QWORD PTR [rbp+0x60],rax
   140023e4a:	cmp    r15,rax
   140023e4d:	jae    0x140023fbd
   140023e53:	mov    esi,0xd
   140023e58:	movzx  eax,WORD PTR [r12]
   140023e5d:	cmp    ax,0x1a
   140023e61:	je     0x140023f97
   140023e67:	cmp    ax,si
   140023e6a:	je     0x140023e7c
   140023e6c:	mov    WORD PTR [rbx],ax
   140023e6f:	add    rbx,0x2
   140023e73:	add    r12,0x2
   140023e77:	jmp    0x140023f8b
   140023e7c:	mov    rax,QWORD PTR [rbp+0x60]
   140023e80:	add    rax,0xfffffffffffffffe
   140023e84:	cmp    r12,rax
   140023e87:	jae    0x140023ea4
   140023e89:	lea    rax,[r12+0x2]
   140023e8e:	cmp    WORD PTR [rax],dx
   140023e91:	jne    0x140023e9c
   140023e93:	add    r12,0x4
   140023e97:	jmp    0x140023f4c
   140023e9c:	mov    r12,rax
   140023e9f:	jmp    0x140023f84
   140023ea4:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023eac:	lea    r9,[rbp-0x24]
   140023eb0:	lea    rdx,[rbp-0x28]
   140023eb4:	mov    rcx,QWORD PTR [rcx+r14*1]
   140023eb8:	mov    r8d,0x2
   140023ebe:	add    r12,0x2
   140023ec2:	mov    QWORD PTR [rsp+0x20],rdi
   140023ec7:	call   QWORD PTR [rip+0x317b]        # 0x140027048
   140023ecd:	test   eax,eax
   140023ecf:	jne    0x140023edf
   140023ed1:	call   QWORD PTR [rip+0x3189]        # 0x140027060
   140023ed7:	test   eax,eax
   140023ed9:	jne    0x140023f78
   140023edf:	cmp    DWORD PTR [rbp-0x24],edi
   140023ee2:	je     0x140023f78
   140023ee8:	lea    r10,[rip+0xfffffffffffdc111]        # 0x140000000
   140023eef:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   140023ef7:	test   BYTE PTR [rax+r14*1+0x8],0x48
   140023efd:	je     0x140023f3c
   140023eff:	mov    edx,0xa
   140023f04:	cmp    WORD PTR [rbp-0x28],dx
   140023f08:	je     0x140023f4c
   140023f0a:	mov    WORD PTR [rbx],si
   140023f0d:	mov    al,BYTE PTR [rbp-0x28]
   140023f10:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023f18:	mov    BYTE PTR [rcx+r14*1+0x9],al
   140023f1d:	mov    al,BYTE PTR [rbp-0x27]
   140023f20:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023f28:	mov    BYTE PTR [rcx+r14*1+0x39],al
   140023f2d:	mov    rax,QWORD PTR [r10+r13*8+0x39ad0]
   140023f35:	mov    BYTE PTR [rax+r14*1+0x3a],dl
   140023f3a:	jmp    0x140023f87
   140023f3c:	cmp    rbx,r15
   140023f3f:	jne    0x140023f51
   140023f41:	mov    edx,0xa
   140023f46:	cmp    WORD PTR [rbp-0x28],dx
   140023f4a:	jne    0x140023f51
   140023f4c:	mov    WORD PTR [rbx],dx
   140023f4f:	jmp    0x140023f87
   140023f51:	mov    ecx,DWORD PTR [rbp+0x48]
   140023f54:	mov    rdx,0xfffffffffffffffe
   140023f5b:	lea    r8d,[rdx+0x3]
   140023f5f:	call   0x14001f950
   140023f64:	mov    edx,0xa
   140023f69:	lea    r10,[rip+0xfffffffffffdc090]        # 0x140000000
   140023f70:	cmp    WORD PTR [rbp-0x28],dx
   140023f74:	je     0x140023f8b
   140023f76:	jmp    0x140023f84
   140023f78:	mov    edx,0xa
   140023f7d:	lea    r10,[rip+0xfffffffffffdc07c]        # 0x140000000
   140023f84:	mov    WORD PTR [rbx],si
   140023f87:	add    rbx,0x2
   140023f8b:	cmp    r12,QWORD PTR [rbp+0x60]
   140023f8f:	jb     0x140023e58
   140023f95:	jmp    0x140023fbd
   140023f97:	mov    rcx,QWORD PTR [r10+r13*8+0x39ad0]
   140023f9f:	mov    al,BYTE PTR [rcx+r14*1+0x8]
   140023fa4:	test   al,0x40
   140023fa6:	jne    0x140023fb1
   140023fa8:	or     al,0x2
   140023faa:	mov    BYTE PTR [rcx+r14*1+0x8],al
   140023faf:	jmp    0x140023fbd
   140023fb1:	movzx  eax,WORD PTR [r12]
   140023fb6:	mov    WORD PTR [rbx],ax
   140023fb9:	add    rbx,0x2
   140023fbd:	sub    ebx,r15d
   140023fc0:	mov    esi,ebx
   140023fc2:	jmp    0x140023dff
   140023fc7:	call   QWORD PTR [rip+0x3093]        # 0x140027060
   140023fcd:	cmp    eax,0x5
   140023fd0:	jne    0x140023fed
   140023fd2:	call   0x1400161e8
   140023fd7:	mov    DWORD PTR [rax],0x9
   140023fdd:	call   0x140016178
   140023fe2:	mov    DWORD PTR [rax],0x5
   140023fe8:	jmp    0x140023a50
   140023fed:	cmp    eax,0x6d
   140023ff0:	jne    0x140023a49
   140023ff6:	mov    ebx,edi
   140023ff8:	jmp    0x140023e02
   140023ffd:	xor    eax,eax
   140023fff:	jmp    0x14002401b
   140024001:	call   0x140016178
   140024006:	mov    DWORD PTR [rax],edi
   140024008:	call   0x1400161e8
   14002400d:	mov    DWORD PTR [rax],0x9
   140024013:	call   0x140013f54
   140024018:	or     eax,0xffffffff
   14002401b:	add    rsp,0x58
   14002401f:	pop    r15
   140024021:	pop    r14
   140024023:	pop    r13
   140024025:	pop    r12
   140024027:	pop    rdi
   140024028:	pop    rsi
   140024029:	pop    rbx
   14002402a:	pop    rbp
   14002402b:	ret    
   14002402c:	mov    QWORD PTR [rsp+0x18],rbx
   140024031:	mov    DWORD PTR [rsp+0x8],ecx
   140024035:	push   rsi
   140024036:	push   rdi
   140024037:	push   r14
   140024039:	sub    rsp,0x20
   14002403d:	movsxd rbx,ecx
   140024040:	cmp    ebx,0xfffffffe
   140024043:	jne    0x14002405d
   140024045:	call   0x140016178
   14002404a:	and    DWORD PTR [rax],0x0
   14002404d:	call   0x1400161e8
   140024052:	mov    DWORD PTR [rax],0x9
   140024058:	jmp    0x1400240de
   14002405d:	test   ecx,ecx
   14002405f:	js     0x1400240c6
   140024061:	cmp    ebx,DWORD PTR [rip+0x173b9]        # 0x14003b420
   140024067:	jae    0x1400240c6
   140024069:	mov    rax,rbx
   14002406c:	mov    rdi,rbx
   14002406f:	sar    rdi,0x5
   140024073:	lea    r14,[rip+0x15a56]        # 0x140039ad0
   14002407a:	and    eax,0x1f
   14002407d:	imul   rsi,rax,0x58
   140024081:	mov    rax,QWORD PTR [r14+rdi*8]
   140024085:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14002408a:	and    ecx,0x1
   14002408d:	je     0x1400240c6
   14002408f:	mov    ecx,ebx
   140024091:	call   0x140022a54
   140024096:	nop
   140024097:	mov    rax,QWORD PTR [r14+rdi*8]
   14002409b:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   1400240a0:	je     0x1400240ad
   1400240a2:	mov    ecx,ebx
   1400240a4:	call   0x1400240f0
   1400240a9:	mov    edi,eax
   1400240ab:	jmp    0x1400240bb
   1400240ad:	call   0x1400161e8
   1400240b2:	mov    DWORD PTR [rax],0x9
   1400240b8:	or     edi,0xffffffff
   1400240bb:	mov    ecx,ebx
   1400240bd:	call   0x140022c0c
   1400240c2:	mov    eax,edi
   1400240c4:	jmp    0x1400240e1
   1400240c6:	call   0x140016178
   1400240cb:	and    DWORD PTR [rax],0x0
   1400240ce:	call   0x1400161e8
   1400240d3:	mov    DWORD PTR [rax],0x9
   1400240d9:	call   0x140013f54
   1400240de:	or     eax,0xffffffff
   1400240e1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400240e6:	add    rsp,0x20
   1400240ea:	pop    r14
   1400240ec:	pop    rdi
   1400240ed:	pop    rsi
   1400240ee:	ret    
   1400240ef:	int3   
   1400240f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400240f5:	push   rdi
   1400240f6:	sub    rsp,0x20
   1400240fa:	movsxd rdi,ecx
   1400240fd:	mov    ecx,edi
   1400240ff:	call   0x140022b98
   140024104:	cmp    rax,0xffffffffffffffff
   140024108:	je     0x140024163
   14002410a:	mov    rax,QWORD PTR [rip+0x159bf]        # 0x140039ad0
   140024111:	mov    ecx,0x2
   140024116:	cmp    edi,0x1
   140024119:	jne    0x140024124
   14002411b:	test   BYTE PTR [rax+0xb8],dil
   140024122:	jne    0x14002412e
   140024124:	cmp    edi,ecx
   140024126:	jne    0x140024145
   140024128:	test   BYTE PTR [rax+0x60],0x1
   14002412c:	je     0x140024145
   14002412e:	call   0x140022b98
   140024133:	mov    ecx,0x1
   140024138:	mov    rbx,rax
   14002413b:	call   0x140022b98
   140024140:	cmp    rax,rbx
   140024143:	je     0x140024163
   140024145:	mov    ecx,edi
   140024147:	call   0x140022b98
   14002414c:	mov    rcx,rax
   14002414f:	call   QWORD PTR [rip+0x2f4b]        # 0x1400270a0
   140024155:	test   eax,eax
   140024157:	jne    0x140024163
   140024159:	call   QWORD PTR [rip+0x2f01]        # 0x140027060
   14002415f:	mov    ebx,eax
   140024161:	jmp    0x140024165
   140024163:	xor    ebx,ebx
   140024165:	mov    ecx,edi
   140024167:	call   0x140022aec
   14002416c:	mov    rdx,rdi
   14002416f:	mov    rcx,rdi
   140024172:	sar    rcx,0x5
   140024176:	and    edx,0x1f
   140024179:	lea    r8,[rip+0x15950]        # 0x140039ad0
   140024180:	mov    rcx,QWORD PTR [r8+rcx*8]
   140024184:	imul   rdx,rdx,0x58
   140024188:	mov    BYTE PTR [rcx+rdx*1+0x8],0x0
   14002418d:	test   ebx,ebx
   14002418f:	je     0x14002419d
   140024191:	mov    ecx,ebx
   140024193:	call   0x140016198
   140024198:	or     eax,0xffffffff
   14002419b:	jmp    0x14002419f
   14002419d:	xor    eax,eax
   14002419f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400241a4:	add    rsp,0x20
   1400241a8:	pop    rdi
   1400241a9:	ret    
   1400241aa:	int3   
   1400241ab:	int3   
   1400241ac:	rex push rbx
   1400241ae:	sub    rsp,0x20
   1400241b2:	test   BYTE PTR [rcx+0x18],0x83
   1400241b6:	mov    rbx,rcx
   1400241b9:	je     0x1400241dd
   1400241bb:	test   BYTE PTR [rcx+0x18],0x8
   1400241bf:	je     0x1400241dd
   1400241c1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400241c5:	call   0x14001392c
   1400241ca:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   1400241d1:	xor    eax,eax
   1400241d3:	mov    QWORD PTR [rbx],rax
   1400241d6:	mov    QWORD PTR [rbx+0x10],rax
   1400241da:	mov    DWORD PTR [rbx+0x8],eax
   1400241dd:	add    rsp,0x20
   1400241e1:	pop    rbx
   1400241e2:	ret    
   1400241e3:	int3   
   1400241e4:	int3   
   1400241e5:	int3   
   1400241e6:	int3   
   1400241e7:	int3   
   1400241e8:	int3   
   1400241e9:	int3   
   1400241ea:	int3   
   1400241eb:	int3   
   1400241ec:	int3   
   1400241ed:	int3   
   1400241ee:	int3   
   1400241ef:	int3   
   1400241f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400241f5:	push   rdi
   1400241f6:	sub    rsp,0x20
   1400241fa:	xor    edx,edx
   1400241fc:	mov    rdi,rcx
   1400241ff:	lea    r8d,[rdx+0x28]
   140024203:	add    rcx,r8
   140024206:	call   0x140014d80
   14002420b:	and    QWORD PTR [rdi+0x50],0x0
   140024210:	and    DWORD PTR [rdi+0x58],0x0
   140024214:	and    DWORD PTR [rdi+0x5c],0x0
   140024218:	lea    rax,[rip+0xfffffffffffdbde1]        # 0x140000000
   14002421f:	lea    rcx,[rdi+0x28]
   140024223:	mov    QWORD PTR [rdi+0x10],rax
   140024227:	mov    QWORD PTR [rdi+0x8],rax
   14002422b:	lea    rax,[rip+0xa8ce]        # 0x14002eb00
   140024232:	xor    r8d,r8d
   140024235:	xor    edx,edx
   140024237:	mov    DWORD PTR [rdi],0x60
   14002423d:	mov    QWORD PTR [rdi+0x20],rax
   140024241:	mov    DWORD PTR [rdi+0x18],0xc00
   140024248:	call   0x140005f00
   14002424d:	test   eax,eax
   14002424f:	jne    0x140024287
   140024251:	call   QWORD PTR [rip+0x2e09]        # 0x140027060
   140024257:	movzx  ecx,ax
   14002425a:	or     ecx,0x80070000
   140024260:	test   eax,eax
   140024262:	cmovle ecx,eax
   140024265:	test   ecx,ecx
   140024267:	jns    0x140024287
   140024269:	call   QWORD PTR [rip+0x2fb9]        # 0x140027228
   14002426f:	test   eax,eax
   140024271:	je     0x140024280
   140024273:	lea    rcx,[rip+0xa896]        # 0x14002eb10
   14002427a:	call   QWORD PTR [rip+0x30a0]        # 0x140027320
   140024280:	mov    BYTE PTR [rip+0x16031],0x1        # 0x14003a2b8
   140024287:	mov    rax,rdi
   14002428a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002428f:	add    rsp,0x20
   140024293:	pop    rdi
   140024294:	ret    
   140024295:	int3   
   140024296:	int3   
   140024297:	int3   
   140024298:	rex push rbx
   14002429a:	sub    rsp,0x20
   14002429e:	mov    rbx,rcx
   1400242a1:	add    rcx,0x28
   1400242a5:	call   QWORD PTR [rip+0x2ded]        # 0x140027098
   1400242ab:	mov    rcx,QWORD PTR [rbx+0x50]
   1400242af:	test   rcx,rcx
   1400242b2:	je     0x1400242be
   1400242b4:	call   0x14001392c
   1400242b9:	and    QWORD PTR [rbx+0x50],0x0
   1400242be:	and    DWORD PTR [rbx+0x58],0x0
   1400242c2:	and    DWORD PTR [rbx+0x5c],0x0
   1400242c6:	add    rsp,0x20
   1400242ca:	pop    rbx
   1400242cb:	ret    
   1400242cc:	jmp    QWORD PTR [rip+0x2f5e]        # 0x140027230
   1400242d2:	jmp    QWORD PTR [rip+0x2f78]        # 0x140027250
   1400242d8:	jmp    QWORD PTR [rip+0x2d42]        # 0x140027020
   1400242de:	jmp    QWORD PTR [rip+0x2d1c]        # 0x140027000
   1400242e4:	int3   
   1400242e5:	int3   
   1400242e6:	int3   
   1400242e7:	int3   
   1400242e8:	int3   
   1400242e9:	int3   
   1400242ea:	int3   
   1400242eb:	int3   
   1400242ec:	int3   
   1400242ed:	int3   
   1400242ee:	int3   
   1400242ef:	int3   
   1400242f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400242f5:	push   rbp
   1400242f6:	sub    rsp,0x30
   1400242fa:	mov    rbp,rdx
   1400242fd:	mov    rax,QWORD PTR [rbp+0x48]
   140024301:	cmp    BYTE PTR [rax+0xd0],0x0
   140024308:	je     0x140024314
   14002430a:	xor    edx,edx
   14002430c:	xor    ecx,ecx
   14002430e:	call   0x14001436c
   140024313:	int3   
   140024314:	mov    eax,DWORD PTR [rbp+0x70]
   140024317:	mov    DWORD PTR [rbp+0x480],eax
   14002431d:	mov    DWORD PTR [rbp+0x484],0xfffffffd
   140024327:	lea    rax,[rip+0xfffffffffffdd1c4]        # 0x1400014f2
   14002432e:	add    rsp,0x30
   140024332:	pop    rbp
   140024333:	ret    
   140024334:	int3   
   140024335:	int3   
   140024336:	int3   
   140024337:	int3   
   140024338:	int3   
   140024339:	int3   
   14002433a:	int3   
   14002433b:	int3   
   14002433c:	int3   
   14002433d:	int3   
   14002433e:	int3   
   14002433f:	int3   
   140024340:	mov    rcx,QWORD PTR [rdx+0x40]
   140024347:	add    rcx,0x60
   14002434b:	jmp    0x140001730
   140024350:	mov    rcx,QWORD PTR [rdx+0x40]
   140024357:	add    rcx,0x70
   14002435b:	jmp    0x140002040
   140024360:	mov    rcx,QWORD PTR [rdx+0x40]
   140024367:	add    rcx,0x90
   14002436e:	jmp    0x140002040
   140024373:	mov    rcx,QWORD PTR [rdx+0x40]
   14002437a:	add    rcx,0xb0
   140024381:	jmp    0x140002040
   140024386:	int3   
   140024387:	int3   
   140024388:	int3   
   140024389:	int3   
   14002438a:	int3   
   14002438b:	int3   
   14002438c:	int3   
   14002438d:	int3   
   14002438e:	int3   
   14002438f:	int3   
   140024390:	lea    rcx,[rdx+0x60]
   140024397:	jmp    0x140002040
   14002439c:	lea    rcx,[rdx+0x60]
   1400243a3:	jmp    0x140002040
   1400243a8:	int3   
   1400243a9:	int3   
   1400243aa:	int3   
   1400243ab:	int3   
   1400243ac:	int3   
   1400243ad:	int3   
   1400243ae:	int3   
   1400243af:	int3   
   1400243b0:	rex push rbp
   1400243b2:	sub    rsp,0x20
   1400243b6:	mov    rbp,rdx
   1400243b9:	mov    eax,DWORD PTR [rbp+0x20]
   1400243bc:	and    eax,0x1
   1400243bf:	test   eax,eax
   1400243c1:	je     0x1400243d0
   1400243c3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400243c7:	mov    rcx,QWORD PTR [rbp+0x40]
   1400243cb:	call   0x140002040
   1400243d0:	add    rsp,0x20
   1400243d4:	pop    rbp
   1400243d5:	ret    
   1400243d6:	int3   
   1400243d7:	int3   
   1400243d8:	int3   
   1400243d9:	int3   
   1400243da:	int3   
   1400243db:	int3   
   1400243dc:	int3   
   1400243dd:	int3   
   1400243de:	int3   
   1400243df:	int3   
   1400243e0:	lea    rcx,[rdx+0x60]
   1400243e7:	jmp    0x1400012d0
   1400243ec:	lea    rcx,[rdx+0x68]
   1400243f3:	jmp    0x140002040
   1400243f8:	int3   
   1400243f9:	int3   
   1400243fa:	int3   
   1400243fb:	int3   
   1400243fc:	int3   
   1400243fd:	int3   
   1400243fe:	int3   
   1400243ff:	int3   
   140024400:	mov    QWORD PTR [rsp+0x10],rdx
   140024405:	push   rbp
   140024406:	sub    rsp,0x20
   14002440a:	mov    rbp,rdx
   14002440d:	mov    rcx,QWORD PTR [rbp+0x68]
   140024411:	mov    QWORD PTR [rbp+0x68],rcx
   140024415:	xor    eax,eax
   140024417:	inc    rcx
   14002441a:	je     0x140024431
   14002441c:	cmp    rcx,0xffffffffffffffff
   140024420:	ja     0x14002442c
   140024422:	call   0x1400138b8
   140024427:	test   rax,rax
   14002442a:	jne    0x140024431
   14002442c:	call   0x140012fc8
   140024431:	mov    QWORD PTR [rbp+0x78],rax
   140024435:	lea    rax,[rip+0xfffffffffffde409]        # 0x140002845
   14002443c:	add    rsp,0x20
   140024440:	pop    rbp
   140024441:	ret    
   140024442:	int3   
   140024443:	mov    QWORD PTR [rsp+0x10],rdx
   140024448:	push   rbx
   140024449:	push   rbp
   14002444a:	sub    rsp,0x28
   14002444e:	mov    rbp,rdx
   140024451:	mov    rbx,QWORD PTR [rbp+0x60]
   140024455:	cmp    QWORD PTR [rbx+0x18],0x10
   14002445a:	jb     0x140024464
   14002445c:	mov    rcx,QWORD PTR [rbx]
   14002445f:	call   0x1400137cc
   140024464:	mov    QWORD PTR [rbx+0x18],0xf
   14002446c:	mov    QWORD PTR [rbx+0x10],0x0
   140024474:	mov    BYTE PTR [rbx],0x0
   140024477:	xor    edx,edx
   140024479:	xor    ecx,ecx
   14002447b:	call   0x14001436c
   140024480:	nop
   140024481:	int3   
   140024482:	int3   
   140024483:	int3   
   140024484:	int3   
   140024485:	int3   
   140024486:	int3   
   140024487:	int3   
   140024488:	int3   
   140024489:	int3   
   14002448a:	int3   
   14002448b:	int3   
   14002448c:	int3   
   14002448d:	int3   
   14002448e:	int3   
   14002448f:	int3   
   140024490:	mov    QWORD PTR [rsp+0x10],rdx
   140024495:	push   rbp
   140024496:	sub    rsp,0x20
   14002449a:	mov    rbp,rdx
   14002449d:	mov    rcx,QWORD PTR [rbp+0x68]
   1400244a1:	mov    QWORD PTR [rbp+0x68],rcx
   1400244a5:	xor    eax,eax
   1400244a7:	inc    rcx
   1400244aa:	je     0x1400244cd
   1400244ac:	movabs rax,0x7fffffffffffffff
   1400244b6:	cmp    rcx,rax
   1400244b9:	ja     0x1400244c8
   1400244bb:	add    rcx,rcx
   1400244be:	call   0x1400138b8
   1400244c3:	test   rax,rax
   1400244c6:	jne    0x1400244cd
   1400244c8:	call   0x140012fc8
   1400244cd:	mov    QWORD PTR [rbp+0x78],rax
   1400244d1:	lea    rax,[rip+0xfffffffffffde9f3]        # 0x140002ecb
   1400244d8:	add    rsp,0x20
   1400244dc:	pop    rbp
   1400244dd:	ret    
   1400244de:	int3   
   1400244df:	mov    QWORD PTR [rsp+0x10],rdx
   1400244e4:	push   rbx
   1400244e5:	push   rbp
   1400244e6:	sub    rsp,0x28
   1400244ea:	mov    rbp,rdx
   1400244ed:	mov    rbx,QWORD PTR [rbp+0x60]
   1400244f1:	cmp    QWORD PTR [rbx+0x18],0x8
   1400244f6:	jb     0x140024500
   1400244f8:	mov    rcx,QWORD PTR [rbx]
   1400244fb:	call   0x1400137cc
   140024500:	mov    QWORD PTR [rbx+0x18],0x7
   140024508:	mov    QWORD PTR [rbx+0x10],0x0
   140024510:	xor    eax,eax
   140024512:	mov    WORD PTR [rbx],ax
   140024515:	xor    edx,edx
   140024517:	xor    ecx,ecx
   140024519:	call   0x14001436c
   14002451e:	nop
   14002451f:	int3   
   140024520:	mov    QWORD PTR [rsp+0x10],rdx
   140024525:	push   rbp
   140024526:	sub    rsp,0x30
   14002452a:	mov    rbp,rdx
   14002452d:	mov    rcx,QWORD PTR [rbp+0x70]
   140024531:	call   0x1400137cc
   140024536:	xor    edx,edx
   140024538:	xor    ecx,ecx
   14002453a:	call   0x14001436c
   14002453f:	nop
   140024540:	mov    QWORD PTR [rsp+0x10],rdx
   140024545:	push   rbp
   140024546:	sub    rsp,0x30
   14002454a:	mov    rbp,rdx
   14002454d:	mov    rcx,QWORD PTR [rbp+0x80]
   140024554:	call   0x1400137cc
   140024559:	xor    edx,edx
   14002455b:	xor    ecx,ecx
   14002455d:	call   0x14001436c
   140024562:	nop
   140024563:	int3   
   140024564:	int3   
   140024565:	int3   
   140024566:	int3   
   140024567:	int3   
   140024568:	int3   
   140024569:	int3   
   14002456a:	int3   
   14002456b:	int3   
   14002456c:	int3   
   14002456d:	int3   
   14002456e:	int3   
   14002456f:	int3   
   140024570:	lea    rcx,[rdx+0x30]
   140024577:	add    rcx,0x10
   14002457b:	jmp    0x140004790
   140024580:	lea    rcx,[rdx+0x30]
   140024587:	add    rcx,0x20
   14002458b:	jmp    0x140004790
   140024590:	lea    rcx,[rdx+0x30]
   140024597:	jmp    0x140003750
   14002459c:	mov    rcx,QWORD PTR [rdx+0x70]
   1400245a3:	add    rcx,0x10
   1400245a7:	jmp    0x140004790
   1400245ac:	mov    rcx,QWORD PTR [rdx+0x70]
   1400245b3:	add    rcx,0x20
   1400245b7:	jmp    0x140004790
   1400245bc:	int3   
   1400245bd:	int3   
   1400245be:	int3   
   1400245bf:	int3   
   1400245c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400245c7:	add    rcx,0x10
   1400245cb:	jmp    0x140004790
   1400245d0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400245d7:	add    rcx,0x20
   1400245db:	jmp    0x140004790
   1400245e0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400245e7:	add    rcx,0x10
   1400245eb:	jmp    0x140004790
   1400245f0:	mov    rcx,QWORD PTR [rdx+0x48]
   1400245f7:	add    rcx,0x20
   1400245fb:	jmp    0x140004790
   140024600:	rex push rbp
   140024602:	sub    rsp,0x20
   140024606:	mov    rbp,rdx
   140024609:	mov    eax,DWORD PTR [rbp+0x20]
   14002460c:	and    eax,0x1
   14002460f:	test   eax,eax
   140024611:	je     0x140024620
   140024613:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140024617:	mov    rcx,QWORD PTR [rbp+0x48]
   14002461b:	call   0x140003750
   140024620:	add    rsp,0x20
   140024624:	pop    rbp
   140024625:	ret    
   140024626:	int3   
   140024627:	int3   
   140024628:	int3   
   140024629:	int3   
   14002462a:	int3   
   14002462b:	int3   
   14002462c:	int3   
   14002462d:	int3   
   14002462e:	int3   
   14002462f:	int3   
   140024630:	lea    rcx,[rdx+0x28]
   140024637:	add    rcx,0x10
   14002463b:	jmp    0x140004790
   140024640:	lea    rcx,[rdx+0x28]
   140024647:	add    rcx,0x20
   14002464b:	jmp    0x140004790
   140024650:	lea    rcx,[rdx+0x28]
   140024657:	jmp    0x140003750
   14002465c:	lea    rcx,[rdx+0x28]
   140024663:	jmp    0x140003750
   140024668:	lea    rcx,[rdx+0x28]
   14002466f:	jmp    0x140003750
   140024674:	lea    rcx,[rdx+0x28]
   14002467b:	jmp    0x140003750
   140024680:	lea    rcx,[rdx+0x28]
   140024687:	add    rcx,0x10
   14002468b:	jmp    0x140004790
   140024690:	lea    rcx,[rdx+0x28]
   140024697:	add    rcx,0x20
   14002469b:	jmp    0x140004790
   1400246a0:	lea    rcx,[rdx+0x28]
   1400246a7:	jmp    0x140003750
   1400246ac:	lea    rcx,[rdx+0x28]
   1400246b3:	jmp    0x140003750
   1400246b8:	int3   
   1400246b9:	int3   
   1400246ba:	int3   
   1400246bb:	int3   
   1400246bc:	int3   
   1400246bd:	int3   
   1400246be:	int3   
   1400246bf:	int3   
   1400246c0:	lea    rcx,[rdx+0x80]
   1400246c7:	jmp    0x140003750
   1400246cc:	lea    rcx,[rdx+0x50]
   1400246d3:	jmp    0x140003750
   1400246d8:	lea    rcx,[rdx+0x20]
   1400246df:	jmp    0x140003750
   1400246e4:	lea    rcx,[rdx+0x20]
   1400246eb:	add    rcx,0x10
   1400246ef:	jmp    0x140004790
   1400246f4:	lea    rcx,[rdx+0x20]
   1400246fb:	add    rcx,0x20
   1400246ff:	jmp    0x140004790
   140024704:	lea    rcx,[rdx+0x20]
   14002470b:	jmp    0x140003750
   140024710:	lea    rcx,[rdx+0x20]
   140024717:	jmp    0x140003750
   14002471c:	lea    rcx,[rdx+0x20]
   140024723:	add    rcx,0x10
   140024727:	jmp    0x140004790
   14002472c:	lea    rcx,[rdx+0x20]
   140024733:	add    rcx,0x20
   140024737:	jmp    0x140004790
   14002473c:	lea    rcx,[rdx+0x20]
   140024743:	jmp    0x140003750
   140024748:	lea    rcx,[rdx+0x20]
   14002474f:	jmp    0x140003750
   140024754:	int3   
   140024755:	int3   
   140024756:	int3   
   140024757:	int3   
   140024758:	int3   
   140024759:	int3   
   14002475a:	int3   
   14002475b:	int3   
   14002475c:	int3   
   14002475d:	int3   
   14002475e:	int3   
   14002475f:	int3   
   140024760:	lea    rcx,[rdx+0x20]
   140024767:	add    rcx,0x10
   14002476b:	jmp    0x140004790
   140024770:	lea    rcx,[rdx+0x20]
   140024777:	add    rcx,0x20
   14002477b:	jmp    0x140004790
   140024780:	lea    rcx,[rdx+0x20]
   140024787:	jmp    0x140003750
   14002478c:	lea    rcx,[rdx+0x20]
   140024793:	jmp    0x140003750
   140024798:	lea    rcx,[rdx+0x50]
   14002479f:	jmp    0x140003750
   1400247a4:	int3   
   1400247a5:	int3   
   1400247a6:	int3   
   1400247a7:	int3   
   1400247a8:	int3   
   1400247a9:	int3   
   1400247aa:	int3   
   1400247ab:	int3   
   1400247ac:	int3   
   1400247ad:	int3   
   1400247ae:	int3   
   1400247af:	int3   
   1400247b0:	lea    rcx,[rdx+0x90]
   1400247b7:	jmp    0x140002000
   1400247bc:	lea    rcx,[rdx+0x20]
   1400247c3:	jmp    0x140003750
   1400247c8:	lea    rcx,[rdx+0x58]
   1400247cf:	jmp    0x140003750
   1400247d4:	lea    rcx,[rdx+0x58]
   1400247db:	jmp    0x140003750
   1400247e0:	lea    rcx,[rdx+0x60]
   1400247e7:	jmp    0x140003750
   1400247ec:	lea    rcx,[rdx+0x90]
   1400247f3:	jmp    0x140003750
   1400247f8:	mov    rcx,QWORD PTR [rdx+0xd8]
   1400247ff:	add    rcx,0x10
   140024803:	jmp    0x140004790
   140024808:	mov    rcx,QWORD PTR [rdx+0xd8]
   14002480f:	add    rcx,0x20
   140024813:	jmp    0x140004790
   140024818:	int3   
   140024819:	int3   
   14002481a:	int3   
   14002481b:	int3   
   14002481c:	int3   
   14002481d:	int3   
   14002481e:	int3   
   14002481f:	int3   
   140024820:	rex push rbp
   140024822:	sub    rsp,0x20
   140024826:	mov    rbp,rdx
   140024829:	mov    rdx,QWORD PTR [rbp+0x58]
   14002482d:	mov    rcx,QWORD PTR [rbp+0x28]
   140024831:	call   0x140001080
   140024836:	add    rsp,0x20
   14002483a:	pop    rbp
   14002483b:	ret    
   14002483c:	mov    rcx,QWORD PTR [rdx+0x30]
   140024843:	add    rcx,0x10
   140024847:	jmp    0x140004790
   14002484c:	mov    rcx,QWORD PTR [rdx+0x30]
   140024853:	add    rcx,0x20
   140024857:	jmp    0x140004790
   14002485c:	mov    QWORD PTR [rsp+0x10],rdx
   140024861:	push   rbp
   140024862:	sub    rsp,0x20
   140024866:	mov    rbp,rdx
   140024869:	mov    rcx,QWORD PTR [rbp+0x68]
   14002486d:	call   0x1400137cc
   140024872:	xor    edx,edx
   140024874:	xor    ecx,ecx
   140024876:	call   0x14001436c
   14002487b:	nop
   14002487c:	int3   
   14002487d:	int3   
   14002487e:	int3   
   14002487f:	int3   
   140024880:	mov    QWORD PTR [rsp+0x10],rdx
   140024885:	push   rbx
   140024886:	push   rbp
   140024887:	sub    rsp,0x38
   14002488b:	mov    rbp,rdx
   14002488e:	mov    rbx,QWORD PTR [rbp+0x80]
   140024895:	lea    rcx,[rbx+0x20]
   140024899:	call   0x140005a20
   14002489e:	mov    rcx,rbx
   1400248a1:	call   0x1400137cc
   1400248a6:	xor    edx,edx
   1400248a8:	xor    ecx,ecx
   1400248aa:	call   0x14001436c
   1400248af:	nop
   1400248b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400248b5:	push   rbp
   1400248b6:	sub    rsp,0x20
   1400248ba:	mov    rbp,rdx
   1400248bd:	mov    rdx,QWORD PTR [rbp+0x20]
   1400248c1:	mov    rcx,QWORD PTR [rbp+0x50]
   1400248c5:	call   0x140004f50
   1400248ca:	xor    edx,edx
   1400248cc:	xor    ecx,ecx
   1400248ce:	call   0x14001436c
   1400248d3:	nop
   1400248d4:	int3   
   1400248d5:	int3   
   1400248d6:	int3   
   1400248d7:	int3   
   1400248d8:	int3   
   1400248d9:	int3   
   1400248da:	int3   
   1400248db:	int3   
   1400248dc:	int3   
   1400248dd:	int3   
   1400248de:	int3   
   1400248df:	int3   
   1400248e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400248e5:	push   rbx
   1400248e6:	push   rbp
   1400248e7:	sub    rsp,0x38
   1400248eb:	mov    rbp,rdx
   1400248ee:	mov    rbx,QWORD PTR [rbp+0x90]
   1400248f5:	lea    rcx,[rbx+0x20]
   1400248f9:	call   0x140005a20
   1400248fe:	mov    rcx,rbx
   140024901:	call   0x1400137cc
   140024906:	xor    edx,edx
   140024908:	xor    ecx,ecx
   14002490a:	call   0x14001436c
   14002490f:	nop
   140024910:	rex push rbp
   140024912:	sub    rsp,0x20
   140024916:	mov    rbp,rdx
   140024919:	mov    rdx,QWORD PTR [rbp+0x58]
   14002491d:	mov    rcx,QWORD PTR [rbp+0x28]
   140024921:	call   0x140001080
   140024926:	add    rsp,0x20
   14002492a:	pop    rbp
   14002492b:	ret    
   14002492c:	mov    QWORD PTR [rsp+0x10],rdx
   140024931:	push   rbp
   140024932:	sub    rsp,0x20
   140024936:	mov    rbp,rdx
   140024939:	mov    rcx,QWORD PTR [rbp+0x50]
   14002493d:	call   0x1400137cc
   140024942:	xor    edx,edx
   140024944:	xor    ecx,ecx
   140024946:	call   0x14001436c
   14002494b:	nop
   14002494c:	int3   
   14002494d:	int3   
   14002494e:	int3   
   14002494f:	int3   
   140024950:	mov    rcx,QWORD PTR [rdx+0x48]
   140024957:	add    rcx,0x10
   14002495b:	jmp    0x140004790
   140024960:	mov    rcx,QWORD PTR [rdx+0x48]
   140024967:	add    rcx,0x20
   14002496b:	jmp    0x140004790
   140024970:	mov    rcx,QWORD PTR [rdx+0x40]
   140024977:	jmp    0x140003750
   14002497c:	mov    rcx,QWORD PTR [rdx+0x48]
   140024983:	add    rcx,0x10
   140024987:	jmp    0x140004790
   14002498c:	mov    rcx,QWORD PTR [rdx+0x48]
   140024993:	add    rcx,0x20
   140024997:	jmp    0x140004790
   14002499c:	int3   
   14002499d:	int3   
   14002499e:	int3   
   14002499f:	int3   
   1400249a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400249a7:	add    rcx,0x18
   1400249ab:	jmp    0x140003750
   1400249b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400249b7:	add    rcx,0x48
   1400249bb:	jmp    0x140012580
   1400249c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400249c7:	jmp    0x140005ef0
   1400249cc:	mov    rcx,QWORD PTR [rdx+0x40]
   1400249d3:	add    rcx,0x58
   1400249d7:	jmp    0x1400123e0
   1400249dc:	mov    rcx,QWORD PTR [rdx+0x60]
   1400249e3:	jmp    0x140003750
   1400249e8:	int3   
   1400249e9:	int3   
   1400249ea:	int3   
   1400249eb:	int3   
   1400249ec:	int3   
   1400249ed:	int3   
   1400249ee:	int3   
   1400249ef:	int3   
   1400249f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400249f5:	push   rbp
   1400249f6:	sub    rsp,0x20
   1400249fa:	mov    rbp,rdx
   1400249fd:	lea    rax,[rip+0xfffffffffffe15e3]        # 0x140005fe7
   140024a04:	add    rsp,0x20
   140024a08:	pop    rbp
   140024a09:	ret    
   140024a0a:	int3   
   140024a0b:	int3   
   140024a0c:	int3   
   140024a0d:	int3   
   140024a0e:	int3   
   140024a0f:	int3   
   140024a10:	mov    rcx,QWORD PTR [rdx+0x40]
   140024a17:	jmp    0x140005ef0
   140024a1c:	int3   
   140024a1d:	int3   
   140024a1e:	int3   
   140024a1f:	int3   
   140024a20:	mov    rcx,QWORD PTR [rdx+0x40]
   140024a27:	jmp    0x140008dd0
   140024a2c:	mov    rcx,QWORD PTR [rdx+0x40]
   140024a33:	add    rcx,0x88
   140024a3a:	jmp    0x140001730
   140024a3f:	int3   
   140024a40:	lea    rcx,[rdx+0x48]
   140024a47:	add    rcx,0x10
   140024a4b:	jmp    0x140004790
   140024a50:	lea    rcx,[rdx+0x48]
   140024a57:	add    rcx,0x20
   140024a5b:	jmp    0x140004790
   140024a60:	lea    rcx,[rdx+0x48]
   140024a67:	jmp    0x140003750
   140024a6c:	lea    rcx,[rdx+0x48]
   140024a73:	jmp    0x140003750
   140024a78:	mov    rcx,QWORD PTR [rdx+0xa0]
   140024a7f:	jmp    0x1400137cc
   140024a84:	int3   
   140024a85:	int3   
   140024a86:	int3   
   140024a87:	int3   
   140024a88:	int3   
   140024a89:	int3   
   140024a8a:	int3   
   140024a8b:	int3   
   140024a8c:	int3   
   140024a8d:	int3   
   140024a8e:	int3   
   140024a8f:	int3   
   140024a90:	lea    rcx,[rdx+0x48]
   140024a97:	jmp    0x140005de0
   140024a9c:	lea    rcx,[rdx+0x38]
   140024aa3:	jmp    0x140001730
   140024aa8:	int3   
   140024aa9:	int3   
   140024aaa:	int3   
   140024aab:	int3   
   140024aac:	int3   
   140024aad:	int3   
   140024aae:	int3   
   140024aaf:	int3   
   140024ab0:	lea    rcx,[rdx+0x28]
   140024ab7:	jmp    0x140005de0
   140024abc:	rex push rbp
   140024abe:	mov    rbp,rdx
   140024ac1:	mov    eax,DWORD PTR [rip+0x15939]        # 0x14003a400
   140024ac7:	and    eax,0xfffffffe
   140024aca:	mov    DWORD PTR [rip+0x15930],eax        # 0x14003a400
   140024ad0:	pop    rbp
   140024ad1:	ret    
   140024ad2:	int3   
   140024ad3:	int3   
   140024ad4:	int3   
   140024ad5:	int3   
   140024ad6:	int3   
   140024ad7:	int3   
   140024ad8:	int3   
   140024ad9:	int3   
   140024ada:	int3   
   140024adb:	int3   
   140024adc:	int3   
   140024add:	int3   
   140024ade:	int3   
   140024adf:	int3   
   140024ae0:	lea    rcx,[rdx+0x30]
   140024ae7:	jmp    0x140003750
   140024aec:	lea    rcx,[rdx+0xe0]
   140024af3:	jmp    0x140003750
   140024af8:	lea    rcx,[rdx+0xe0]
   140024aff:	add    rcx,0x30
   140024b03:	jmp    0x1400039c0
   140024b08:	lea    rcx,[rdx+0xe0]
   140024b0f:	jmp    0x140006d90
   140024b14:	lea    rcx,[rdx+0x140]
   140024b1b:	jmp    0x140003750
   140024b20:	lea    rcx,[rdx+0x60]
   140024b27:	jmp    0x140003750
   140024b2c:	lea    rcx,[rdx+0x60]
   140024b33:	jmp    0x140006d90
   140024b38:	lea    rcx,[rdx+0x30]
   140024b3f:	jmp    0x140003750
   140024b44:	lea    rcx,[rdx+0x20]
   140024b4b:	jmp    0x1400039c0
   140024b50:	rex push rbp
   140024b52:	mov    rbp,rdx
   140024b55:	mov    eax,DWORD PTR [rip+0x158a5]        # 0x14003a400
   140024b5b:	and    eax,0xfffffffe
   140024b5e:	mov    DWORD PTR [rip+0x1589c],eax        # 0x14003a400
   140024b64:	pop    rbp
   140024b65:	ret    
   140024b66:	rex push rbp
   140024b68:	mov    rbp,rdx
   140024b6b:	mov    eax,DWORD PTR [rip+0x1588f]        # 0x14003a400
   140024b71:	and    eax,0xfffffffe
   140024b74:	mov    DWORD PTR [rip+0x15886],eax        # 0x14003a400
   140024b7a:	pop    rbp
   140024b7b:	ret    
   140024b7c:	rex push rbp
   140024b7e:	mov    rbp,rdx
   140024b81:	mov    eax,DWORD PTR [rip+0x15879]        # 0x14003a400
   140024b87:	and    eax,0xfffffffe
   140024b8a:	mov    DWORD PTR [rip+0x15870],eax        # 0x14003a400
   140024b90:	pop    rbp
   140024b91:	ret    
   140024b92:	mov    rcx,QWORD PTR [rdx+0x1e0]
   140024b99:	jmp    0x1400039c0
   140024b9e:	mov    rcx,QWORD PTR [rdx+0x1e8]
   140024ba5:	add    rcx,0x10
   140024ba9:	jmp    0x140004790
   140024bae:	mov    rcx,QWORD PTR [rdx+0x1e8]
   140024bb5:	add    rcx,0x20
   140024bb9:	jmp    0x140004790
   140024bbe:	mov    rcx,QWORD PTR [rdx+0x1e8]
   140024bc5:	jmp    0x140003750
   140024bca:	rex push rbp
   140024bcc:	mov    rbp,rdx
   140024bcf:	mov    eax,DWORD PTR [rip+0x1582b]        # 0x14003a400
   140024bd5:	and    eax,0xfffffffe
   140024bd8:	mov    DWORD PTR [rip+0x15822],eax        # 0x14003a400
   140024bde:	pop    rbp
   140024bdf:	ret    
   140024be0:	rex push rbp
   140024be2:	mov    rbp,rdx
   140024be5:	mov    eax,DWORD PTR [rip+0x15815]        # 0x14003a400
   140024beb:	and    eax,0xfffffffe
   140024bee:	mov    DWORD PTR [rip+0x1580c],eax        # 0x14003a400
   140024bf4:	pop    rbp
   140024bf5:	ret    
   140024bf6:	rex push rbp
   140024bf8:	mov    rbp,rdx
   140024bfb:	mov    eax,DWORD PTR [rip+0x157ff]        # 0x14003a400
   140024c01:	and    eax,0xfffffffe
   140024c04:	mov    DWORD PTR [rip+0x157f6],eax        # 0x14003a400
   140024c0a:	pop    rbp
   140024c0b:	ret    
   140024c0c:	rex push rbp
   140024c0e:	mov    rbp,rdx
   140024c11:	mov    eax,DWORD PTR [rip+0x157e9]        # 0x14003a400
   140024c17:	and    eax,0xfffffffe
   140024c1a:	mov    DWORD PTR [rip+0x157e0],eax        # 0x14003a400
   140024c20:	pop    rbp
   140024c21:	ret    
   140024c22:	rex push rbp
   140024c24:	mov    rbp,rdx
   140024c27:	mov    eax,DWORD PTR [rip+0x157d3]        # 0x14003a400
   140024c2d:	and    eax,0xfffffffe
   140024c30:	mov    DWORD PTR [rip+0x157ca],eax        # 0x14003a400
   140024c36:	pop    rbp
   140024c37:	ret    
   140024c38:	rex push rbp
   140024c3a:	mov    rbp,rdx
   140024c3d:	mov    eax,DWORD PTR [rip+0x157bd]        # 0x14003a400
   140024c43:	and    eax,0xfffffffe
   140024c46:	mov    DWORD PTR [rip+0x157b4],eax        # 0x14003a400
   140024c4c:	pop    rbp
   140024c4d:	ret    
   140024c4e:	rex push rbp
   140024c50:	mov    rbp,rdx
   140024c53:	mov    eax,DWORD PTR [rip+0x157a7]        # 0x14003a400
   140024c59:	and    eax,0xfffffffe
   140024c5c:	mov    DWORD PTR [rip+0x1579e],eax        # 0x14003a400
   140024c62:	pop    rbp
   140024c63:	ret    
   140024c64:	lea    rcx,[rdx+0x30]
   140024c6b:	jmp    0x140003750
   140024c70:	lea    rcx,[rdx+0xb0]
   140024c77:	add    rcx,0x10
   140024c7b:	jmp    0x140004790
   140024c80:	lea    rcx,[rdx+0xb0]
   140024c87:	add    rcx,0x20
   140024c8b:	jmp    0x140004790
   140024c90:	lea    rcx,[rdx+0xb0]
   140024c97:	jmp    0x140003750
   140024c9c:	lea    rcx,[rdx+0xb0]
   140024ca3:	jmp    0x140003750
   140024ca8:	int3   
   140024ca9:	int3   
   140024caa:	int3   
   140024cab:	int3   
   140024cac:	int3   
   140024cad:	int3   
   140024cae:	int3   
   140024caf:	int3   
   140024cb0:	mov    rcx,QWORD PTR [rdx+0x40]
   140024cb7:	jmp    0x140004890
   140024cbc:	mov    QWORD PTR [rsp+0x10],rdx
   140024cc1:	push   rbp
   140024cc2:	sub    rsp,0x20
   140024cc6:	mov    rbp,rdx
   140024cc9:	mov    rcx,QWORD PTR [rbp+0x40]
   140024ccd:	mov    r8,QWORD PTR [rcx]
   140024cd0:	mov    r9,r8
   140024cd3:	mov    r8,QWORD PTR [r8]
   140024cd6:	lea    rdx,[rbp+0x50]
   140024cda:	call   0x140004990
   140024cdf:	xor    edx,edx
   140024ce1:	xor    ecx,ecx
   140024ce3:	call   0x14001436c
   140024ce8:	nop
   140024ce9:	int3   
   140024cea:	int3   
   140024ceb:	int3   
   140024cec:	int3   
   140024ced:	int3   
   140024cee:	int3   
   140024cef:	int3   
   140024cf0:	mov    rcx,QWORD PTR [rdx+0x40]
   140024cf7:	jmp    0x140004890
   140024cfc:	mov    QWORD PTR [rsp+0x10],rdx
   140024d01:	push   rbp
   140024d02:	sub    rsp,0x20
   140024d06:	mov    rbp,rdx
   140024d09:	mov    rcx,QWORD PTR [rbp+0x40]
   140024d0d:	mov    r8,QWORD PTR [rcx]
   140024d10:	mov    r9,r8
   140024d13:	mov    r8,QWORD PTR [r8]
   140024d16:	lea    rdx,[rbp+0x50]
   140024d1a:	call   0x140002680
   140024d1f:	xor    edx,edx
   140024d21:	xor    ecx,ecx
   140024d23:	call   0x14001436c
   140024d28:	nop
   140024d29:	int3   
   140024d2a:	int3   
   140024d2b:	int3   
   140024d2c:	int3   
   140024d2d:	int3   
   140024d2e:	int3   
   140024d2f:	int3   
   140024d30:	mov    QWORD PTR [rsp+0x10],rdx
   140024d35:	push   rbp
   140024d36:	sub    rsp,0x30
   140024d3a:	mov    rbp,rdx
   140024d3d:	xor    edx,edx
   140024d3f:	xor    ecx,ecx
   140024d41:	call   0x14001436c
   140024d46:	nop
   140024d47:	int3   
   140024d48:	int3   
   140024d49:	int3   
   140024d4a:	int3   
   140024d4b:	int3   
   140024d4c:	int3   
   140024d4d:	int3   
   140024d4e:	int3   
   140024d4f:	int3   
   140024d50:	mov    QWORD PTR [rsp+0x10],rdx
   140024d55:	push   rbx
   140024d56:	push   rbp
   140024d57:	push   rsi
   140024d58:	push   rdi
   140024d59:	sub    rsp,0x28
   140024d5d:	mov    rbp,rdx
   140024d60:	mov    rdi,QWORD PTR [rbp+0x20]
   140024d64:	mov    rbx,rdi
   140024d67:	cmp    BYTE PTR [rdi+0x19],0x0
   140024d6b:	jne    0x140024d91
   140024d6d:	mov    rsi,QWORD PTR [rbp+0x50]
   140024d71:	mov    rdx,QWORD PTR [rbx+0x10]
   140024d75:	mov    rcx,rsi
   140024d78:	call   0x140002f40
   140024d7d:	mov    rbx,QWORD PTR [rbx]
   140024d80:	mov    rcx,rdi
   140024d83:	call   0x1400137cc
   140024d88:	mov    rdi,rbx
   140024d8b:	cmp    BYTE PTR [rbx+0x19],0x0
   140024d8f:	je     0x140024d71
   140024d91:	xor    edx,edx
   140024d93:	xor    ecx,ecx
   140024d95:	call   0x14001436c
   140024d9a:	nop
   140024d9b:	int3   
   140024d9c:	int3   
   140024d9d:	int3   
   140024d9e:	int3   
   140024d9f:	int3   
   140024da0:	lea    rcx,[rdx+0x28]
   140024da7:	jmp    0x140003750
   140024dac:	mov    rcx,QWORD PTR [rdx+0x70]
   140024db3:	add    rcx,0x10
   140024db7:	jmp    0x140004790
   140024dbc:	mov    rcx,QWORD PTR [rdx+0x70]
   140024dc3:	add    rcx,0x20
   140024dc7:	jmp    0x140004790
   140024dcc:	int3   
   140024dcd:	int3   
   140024dce:	int3   
   140024dcf:	int3   
   140024dd0:	mov    rcx,QWORD PTR [rdx+0x70]
   140024dd7:	add    rcx,0x18
   140024ddb:	jmp    0x140003750
   140024de0:	mov    rcx,QWORD PTR [rdx+0x70]
   140024de7:	add    rcx,0x48
   140024deb:	jmp    0x140012580
   140024df0:	lea    rcx,[rdx+0x28]
   140024df7:	jmp    0x140003750
   140024dfc:	int3   
   140024dfd:	int3   
   140024dfe:	int3   
   140024dff:	int3   
   140024e00:	lea    rcx,[rdx+0x198]
   140024e07:	jmp    0x1400078e0
   140024e0c:	lea    rcx,[rdx+0xa0]
   140024e13:	jmp    0x140003750
   140024e18:	mov    rcx,QWORD PTR [rdx+0x68]
   140024e1f:	add    rcx,0x10
   140024e23:	jmp    0x140004790
   140024e28:	mov    rcx,QWORD PTR [rdx+0x68]
   140024e2f:	add    rcx,0x20
   140024e33:	jmp    0x140004790
   140024e38:	lea    rcx,[rdx+0xa0]
   140024e3f:	jmp    0x140003750
   140024e44:	mov    rcx,QWORD PTR [rdx+0x68]
   140024e4b:	add    rcx,0x10
   140024e4f:	jmp    0x140004790
   140024e54:	mov    rcx,QWORD PTR [rdx+0x68]
   140024e5b:	add    rcx,0x20
   140024e5f:	jmp    0x140004790
   140024e64:	lea    rcx,[rdx+0xa0]
   140024e6b:	jmp    0x140003750
   140024e70:	mov    rcx,QWORD PTR [rdx+0x68]
   140024e77:	add    rcx,0x10
   140024e7b:	jmp    0x140004790
   140024e80:	mov    rcx,QWORD PTR [rdx+0x68]
   140024e87:	add    rcx,0x20
   140024e8b:	jmp    0x140004790
   140024e90:	lea    rcx,[rdx+0x198]
   140024e97:	jmp    0x1400078e0
   140024e9c:	lea    rcx,[rdx+0xa8]
   140024ea3:	jmp    0x140003750
   140024ea8:	mov    rcx,QWORD PTR [rdx+0x68]
   140024eaf:	add    rcx,0x10
   140024eb3:	jmp    0x140004790
   140024eb8:	mov    rcx,QWORD PTR [rdx+0x68]
   140024ebf:	add    rcx,0x20
   140024ec3:	jmp    0x140004790
   140024ec8:	lea    rcx,[rdx+0xa8]
   140024ecf:	jmp    0x140003750
   140024ed4:	mov    rcx,QWORD PTR [rdx+0x68]
   140024edb:	add    rcx,0x10
   140024edf:	jmp    0x140004790
   140024ee4:	mov    rcx,QWORD PTR [rdx+0x68]
   140024eeb:	add    rcx,0x20
   140024eef:	jmp    0x140004790
   140024ef4:	lea    rcx,[rdx+0xa8]
   140024efb:	jmp    0x140003750
   140024f00:	mov    rcx,QWORD PTR [rdx+0x68]
   140024f07:	add    rcx,0x10
   140024f0b:	jmp    0x140004790
   140024f10:	mov    rcx,QWORD PTR [rdx+0x68]
   140024f17:	add    rcx,0x20
   140024f1b:	jmp    0x140004790
   140024f20:	lea    rcx,[rdx+0x128]
   140024f27:	jmp    0x1400078e0
   140024f2c:	lea    rcx,[rdx+0xa8]
   140024f33:	jmp    0x140003750
   140024f38:	mov    rcx,QWORD PTR [rdx+0x68]
   140024f3f:	add    rcx,0x10
   140024f43:	jmp    0x140004790
   140024f48:	mov    rcx,QWORD PTR [rdx+0x68]
   140024f4f:	add    rcx,0x20
   140024f53:	jmp    0x140004790
   140024f58:	lea    rcx,[rdx+0xa8]
   140024f5f:	jmp    0x140003750
   140024f64:	mov    rcx,QWORD PTR [rdx+0x68]
   140024f6b:	add    rcx,0x10
   140024f6f:	jmp    0x140004790
   140024f74:	mov    rcx,QWORD PTR [rdx+0x68]
   140024f7b:	add    rcx,0x20
   140024f7f:	jmp    0x140004790
   140024f84:	int3   
   140024f85:	int3   
   140024f86:	int3   
   140024f87:	int3   
   140024f88:	int3   
   140024f89:	int3   
   140024f8a:	int3   
   140024f8b:	int3   
   140024f8c:	int3   
   140024f8d:	int3   
   140024f8e:	int3   
   140024f8f:	int3   
   140024f90:	lea    rcx,[rdx+0x80]
   140024f97:	jmp    0x140003750
   140024f9c:	mov    rcx,QWORD PTR [rdx+0xf0]
   140024fa3:	add    rcx,0x10
   140024fa7:	jmp    0x140004790
   140024fac:	mov    rcx,QWORD PTR [rdx+0xf0]
   140024fb3:	add    rcx,0x20
   140024fb7:	jmp    0x140004790
   140024fbc:	lea    rcx,[rdx+0x80]
   140024fc3:	jmp    0x140003750
   140024fc8:	mov    rcx,QWORD PTR [rdx+0xf0]
   140024fcf:	add    rcx,0x10
   140024fd3:	jmp    0x140004790
   140024fd8:	mov    rcx,QWORD PTR [rdx+0xf0]
   140024fdf:	add    rcx,0x20
   140024fe3:	jmp    0x140004790
   140024fe8:	lea    rcx,[rdx+0xf0]
   140024fef:	jmp    0x140008e90
   140024ff4:	int3   
   140024ff5:	int3   
   140024ff6:	int3   
   140024ff7:	int3   
   140024ff8:	int3   
   140024ff9:	int3   
   140024ffa:	int3   
   140024ffb:	int3   
   140024ffc:	int3   
   140024ffd:	int3   
   140024ffe:	int3   
   140024fff:	int3   
   140025000:	lea    rcx,[rdx+0x40]
   140025007:	jmp    0x140007650
   14002500c:	lea    rcx,[rdx+0x20]
   140025013:	jmp    0x140007650
   140025018:	mov    QWORD PTR [rsp+0x10],rdx
   14002501d:	push   rbp
   14002501e:	sub    rsp,0x20
   140025022:	mov    rbp,rdx
   140025025:	mov    rcx,QWORD PTR [rbp+0xc0]
   14002502c:	call   0x140008140
   140025031:	nop
   140025032:	lea    rax,[rip+0xfffffffffffe39a0]        # 0x1400089d9
   140025039:	add    rsp,0x20
   14002503d:	pop    rbp
   14002503e:	ret    
   14002503f:	int3   
   140025040:	mov    QWORD PTR [rsp+0x10],rdx
   140025045:	push   rbp
   140025046:	sub    rsp,0x20
   14002504a:	mov    rbp,rdx
   14002504d:	mov    rcx,QWORD PTR [rbp+0xc0]
   140025054:	call   0x140008140
   140025059:	lea    rax,[rip+0x2530]        # 0x140027590
   140025060:	mov    QWORD PTR [rbp+0x60],rax
   140025064:	lea    rax,[rbp+0x68]
   140025068:	mov    QWORD PTR [rbp+0xc0],rax
   14002506f:	mov    DWORD PTR [rbp+0x68],0x0
   140025076:	mov    QWORD PTR [rbp+0x70],0x0
   14002507e:	mov    QWORD PTR [rbp+0x78],0x0
   140025086:	mov    QWORD PTR [rbp+0x80],0x0
   140025091:	mov    QWORD PTR [rbp+0x88],0x0
   14002509c:	mov    QWORD PTR [rbp+0x90],0x0
   1400250a7:	mov    rdx,QWORD PTR [rbp+0xa0]
   1400250ae:	add    rdx,0x8
   1400250b2:	or     r8,0xffffffffffffffff
   1400250b6:	lea    rcx,[rbp+0x68]
   1400250ba:	call   0x140010560
   1400250bf:	nop
   1400250c0:	lea    rax,[rip+0x9ec1]        # 0x14002ef88
   1400250c7:	mov    QWORD PTR [rbp+0x60],rax
   1400250cb:	lea    rdx,[rip+0x10516]        # 0x1400355e8
   1400250d2:	lea    rcx,[rbp+0x60]
   1400250d6:	call   0x14001436c
   1400250db:	nop
   1400250dc:	mov    rcx,QWORD PTR [rdx+0xc0]
   1400250e3:	add    rcx,0x10
   1400250e7:	jmp    0x140004790
   1400250ec:	mov    rcx,QWORD PTR [rdx+0xc0]
   1400250f3:	add    rcx,0x20
   1400250f7:	jmp    0x140004790
   1400250fc:	int3   
   1400250fd:	int3   
   1400250fe:	int3   
   1400250ff:	int3   
   140025100:	lea    rcx,[rdx+0x160]
   140025107:	jmp    0x1400078e0
   14002510c:	lea    rcx,[rdx+0x78]
   140025113:	jmp    0x140003750
   140025118:	mov    rcx,QWORD PTR [rdx+0x158]
   14002511f:	add    rcx,0x10
   140025123:	jmp    0x140004790
   140025128:	mov    rcx,QWORD PTR [rdx+0x158]
   14002512f:	add    rcx,0x20
   140025133:	jmp    0x140004790
   140025138:	lea    rcx,[rdx+0xd8]
   14002513f:	jmp    0x140007870
   140025144:	lea    rcx,[rdx+0x78]
   14002514b:	add    rcx,0x10
   14002514f:	jmp    0x140004790
   140025154:	lea    rcx,[rdx+0x78]
   14002515b:	add    rcx,0x20
   14002515f:	jmp    0x140004790
   140025164:	lea    rcx,[rdx+0x78]
   14002516b:	jmp    0x140003750
   140025170:	lea    rcx,[rdx+0x78]
   140025177:	jmp    0x140003750
   14002517c:	lea    rcx,[rdx+0x78]
   140025183:	jmp    0x140003750
   140025188:	mov    rcx,QWORD PTR [rdx+0x168]
   14002518f:	add    rcx,0x10
   140025193:	jmp    0x140004790
   140025198:	mov    rcx,QWORD PTR [rdx+0x168]
   14002519f:	add    rcx,0x20
   1400251a3:	jmp    0x140004790
   1400251a8:	lea    rcx,[rdx+0x78]
   1400251af:	jmp    0x140003750
   1400251b4:	mov    rcx,QWORD PTR [rdx+0x168]
   1400251bb:	add    rcx,0x10
   1400251bf:	jmp    0x140004790
   1400251c4:	mov    rcx,QWORD PTR [rdx+0x168]
   1400251cb:	add    rcx,0x20
   1400251cf:	jmp    0x140004790
   1400251d4:	int3   
   1400251d5:	int3   
   1400251d6:	int3   
   1400251d7:	int3   
   1400251d8:	int3   
   1400251d9:	int3   
   1400251da:	int3   
   1400251db:	int3   
   1400251dc:	int3   
   1400251dd:	int3   
   1400251de:	int3   
   1400251df:	int3   
   1400251e0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400251e7:	jmp    0x140003750
   1400251ec:	mov    rcx,QWORD PTR [rdx+0x40]
   1400251f3:	add    rcx,0x30
   1400251f7:	jmp    0x1400039c0
   1400251fc:	mov    rcx,QWORD PTR [rdx+0x40]
   140025203:	add    rcx,0x40
   140025207:	jmp    0x1400039c0
   14002520c:	int3   
   14002520d:	int3   
   14002520e:	int3   
   14002520f:	int3   
   140025210:	mov    rcx,QWORD PTR [rdx+0x40]
   140025217:	jmp    0x1400123e0
   14002521c:	int3   
   14002521d:	int3   
   14002521e:	int3   
   14002521f:	int3   
   140025220:	lea    rcx,[rdx+0x60]
   140025227:	jmp    0x140003750
   14002522c:	lea    rcx,[rdx+0x30]
   140025233:	jmp    0x1400039c0
   140025238:	rex push rbp
   14002523a:	mov    rbp,rdx
   14002523d:	mov    eax,DWORD PTR [rip+0x151bd]        # 0x14003a400
   140025243:	and    eax,0xfffffffe
   140025246:	mov    DWORD PTR [rip+0x151b4],eax        # 0x14003a400
   14002524c:	pop    rbp
   14002524d:	ret    
   14002524e:	rex push rbp
   140025250:	mov    rbp,rdx
   140025253:	mov    eax,DWORD PTR [rip+0x151a7]        # 0x14003a400
   140025259:	and    eax,0xfffffffe
   14002525c:	mov    DWORD PTR [rip+0x1519e],eax        # 0x14003a400
   140025262:	pop    rbp
   140025263:	ret    
   140025264:	rex push rbp
   140025266:	mov    rbp,rdx
   140025269:	mov    eax,DWORD PTR [rip+0x15191]        # 0x14003a400
   14002526f:	and    eax,0xfffffffe
   140025272:	mov    DWORD PTR [rip+0x15188],eax        # 0x14003a400
   140025278:	pop    rbp
   140025279:	ret    
   14002527a:	rex push rbp
   14002527c:	mov    rbp,rdx
   14002527f:	mov    eax,DWORD PTR [rip+0x1517b]        # 0x14003a400
   140025285:	and    eax,0xfffffffe
   140025288:	mov    DWORD PTR [rip+0x15172],eax        # 0x14003a400
   14002528e:	pop    rbp
   14002528f:	ret    
   140025290:	rex push rbp
   140025292:	mov    rbp,rdx
   140025295:	mov    eax,DWORD PTR [rip+0x15165]        # 0x14003a400
   14002529b:	and    eax,0xfffffffe
   14002529e:	mov    DWORD PTR [rip+0x1515c],eax        # 0x14003a400
   1400252a4:	pop    rbp
   1400252a5:	ret    
   1400252a6:	mov    rcx,QWORD PTR [rdx+0x158]
   1400252ad:	add    rcx,0x10
   1400252b1:	jmp    0x140004790
   1400252b6:	mov    rcx,QWORD PTR [rdx+0x158]
   1400252bd:	add    rcx,0x20
   1400252c1:	jmp    0x140004790
   1400252c6:	lea    rcx,[rdx+0x40]
   1400252cd:	jmp    0x1400039c0
   1400252d2:	mov    QWORD PTR [rsp+0x10],rdx
   1400252d7:	push   rbp
   1400252d8:	sub    rsp,0x30
   1400252dc:	mov    rbp,rdx
   1400252df:	mov    rcx,QWORD PTR [rbp+0x150]
   1400252e6:	call   0x140009f50
   1400252eb:	nop
   1400252ec:	lea    rax,[rip+0xfffffffffffe4652]        # 0x140009945
   1400252f3:	add    rsp,0x30
   1400252f7:	pop    rbp
   1400252f8:	ret    
   1400252f9:	int3   
   1400252fa:	lea    rcx,[rdx+0xc0]
   140025301:	jmp    0x140003750
   140025306:	lea    rcx,[rdx+0x90]
   14002530d:	jmp    0x140003750
   140025312:	rex push rbp
   140025314:	mov    rbp,rdx
   140025317:	mov    eax,DWORD PTR [rip+0x150e3]        # 0x14003a400
   14002531d:	and    eax,0xfffffffe
   140025320:	mov    DWORD PTR [rip+0x150da],eax        # 0x14003a400
   140025326:	pop    rbp
   140025327:	ret    
   140025328:	rex push rbp
   14002532a:	mov    rbp,rdx
   14002532d:	mov    eax,DWORD PTR [rip+0x150cd]        # 0x14003a400
   140025333:	and    eax,0xfffffffe
   140025336:	mov    DWORD PTR [rip+0x150c4],eax        # 0x14003a400
   14002533c:	pop    rbp
   14002533d:	ret    
   14002533e:	rex push rbp
   140025340:	mov    rbp,rdx
   140025343:	mov    eax,DWORD PTR [rip+0x150b7]        # 0x14003a400
   140025349:	and    eax,0xfffffffe
   14002534c:	mov    DWORD PTR [rip+0x150ae],eax        # 0x14003a400
   140025352:	pop    rbp
   140025353:	ret    
   140025354:	mov    rcx,QWORD PTR [rdx+0x158]
   14002535b:	jmp    0x1400039c0
   140025360:	rex push rbp
   140025362:	mov    rbp,rdx
   140025365:	mov    eax,DWORD PTR [rip+0x15095]        # 0x14003a400
   14002536b:	and    eax,0xfffffffe
   14002536e:	mov    DWORD PTR [rip+0x1508c],eax        # 0x14003a400
   140025374:	pop    rbp
   140025375:	ret    
   140025376:	mov    rcx,QWORD PTR [rdx+0xf0]
   14002537d:	jmp    0x1400039c0
   140025382:	rex push rbp
   140025384:	mov    rbp,rdx
   140025387:	mov    eax,DWORD PTR [rip+0x15073]        # 0x14003a400
   14002538d:	and    eax,0xfffffffe
   140025390:	mov    DWORD PTR [rip+0x1506a],eax        # 0x14003a400
   140025396:	pop    rbp
   140025397:	ret    
   140025398:	rex push rbp
   14002539a:	mov    rbp,rdx
   14002539d:	mov    eax,DWORD PTR [rip+0x1505d]        # 0x14003a400
   1400253a3:	and    eax,0xfffffffe
   1400253a6:	mov    DWORD PTR [rip+0x15054],eax        # 0x14003a400
   1400253ac:	pop    rbp
   1400253ad:	ret    
   1400253ae:	int3   
   1400253af:	int3   
   1400253b0:	lea    rcx,[rdx+0x38]
   1400253b7:	jmp    0x140003750
   1400253bc:	int3   
   1400253bd:	int3   
   1400253be:	int3   
   1400253bf:	int3   
   1400253c0:	mov    rcx,QWORD PTR [rdx+0xe0]
   1400253c7:	jmp    0x140003750
   1400253cc:	lea    rcx,[rdx+0x30]
   1400253d3:	jmp    0x140003750
   1400253d8:	lea    rcx,[rdx+0x30]
   1400253df:	jmp    0x140003750
   1400253e4:	lea    rcx,[rdx+0x30]
   1400253eb:	jmp    0x140003750
   1400253f0:	lea    rcx,[rdx+0x20]
   1400253f7:	jmp    0x1400039c0
   1400253fc:	lea    rcx,[rdx+0x68]
   140025403:	jmp    0x140003750
   140025408:	lea    rcx,[rdx+0x30]
   14002540f:	jmp    0x140003750
   140025414:	int3   
   140025415:	int3   
   140025416:	int3   
   140025417:	int3   
   140025418:	int3   
   140025419:	int3   
   14002541a:	int3   
   14002541b:	int3   
   14002541c:	int3   
   14002541d:	int3   
   14002541e:	int3   
   14002541f:	int3   
   140025420:	rex push rbp
   140025422:	sub    rsp,0x20
   140025426:	mov    rbp,rdx
   140025429:	mov    eax,DWORD PTR [rbp+0xd8]
   14002542f:	and    eax,0x1
   140025432:	test   eax,eax
   140025434:	je     0x140025449
   140025436:	and    DWORD PTR [rbp+0xd8],0xfffffffe
   14002543d:	mov    rcx,QWORD PTR [rbp+0x268]
   140025444:	call   0x1400039c0
   140025449:	add    rsp,0x20
   14002544d:	pop    rbp
   14002544e:	ret    
   14002544f:	lea    rcx,[rdx+0x2e0]
   140025456:	jmp    0x140003750
   14002545b:	lea    rcx,[rdx+0x370]
   140025462:	jmp    0x140003750
   140025467:	lea    rcx,[rdx+0x3a0]
   14002546e:	jmp    0x140003750
   140025473:	lea    rcx,[rdx+0x400]
   14002547a:	jmp    0x140003750
   14002547f:	lea    rcx,[rdx+0x1a8]
   140025486:	add    rcx,0x10
   14002548a:	jmp    0x140004790
   14002548f:	lea    rcx,[rdx+0x1a8]
   140025496:	add    rcx,0x20
   14002549a:	jmp    0x140004790
   14002549f:	lea    rcx,[rdx+0x1a8]
   1400254a6:	jmp    0x140003750
   1400254ab:	lea    rcx,[rdx+0x148]
   1400254b2:	add    rcx,0x10
   1400254b6:	jmp    0x140004790
   1400254bb:	lea    rcx,[rdx+0x148]
   1400254c2:	add    rcx,0x20
   1400254c6:	jmp    0x140004790
   1400254cb:	lea    rcx,[rdx+0x148]
   1400254d2:	jmp    0x140003750
   1400254d7:	lea    rcx,[rdx+0x148]
   1400254de:	jmp    0x140003750
   1400254e3:	lea    rcx,[rdx+0x3d0]
   1400254ea:	jmp    0x140003750
   1400254ef:	lea    rcx,[rdx+0x1d8]
   1400254f6:	add    rcx,0x10
   1400254fa:	jmp    0x140004790
   1400254ff:	lea    rcx,[rdx+0x1d8]
   140025506:	add    rcx,0x20
   14002550a:	jmp    0x140004790
   14002550f:	lea    rcx,[rdx+0x1d8]
   140025516:	jmp    0x140003750
   14002551b:	lea    rcx,[rdx+0x178]
   140025522:	add    rcx,0x10
   140025526:	jmp    0x140004790
   14002552b:	lea    rcx,[rdx+0x178]
   140025532:	add    rcx,0x20
   140025536:	jmp    0x140004790
   14002553b:	lea    rcx,[rdx+0x178]
   140025542:	jmp    0x140003750
   140025547:	lea    rcx,[rdx+0x178]
   14002554e:	jmp    0x140003750
   140025553:	lea    rcx,[rdx+0x208]
   14002555a:	jmp    0x140003750
   14002555f:	lea    rcx,[rdx+0x310]
   140025566:	jmp    0x140003750
   14002556b:	mov    QWORD PTR [rsp+0x10],rdx
   140025570:	push   rbp
   140025571:	sub    rsp,0x60
   140025575:	mov    rbp,rdx
   140025578:	lea    rax,[rip+0xfffffffffffe6473]        # 0x14000b9f2
   14002557f:	add    rsp,0x60
   140025583:	pop    rbp
   140025584:	ret    
   140025585:	int3   
   140025586:	lea    rcx,[rdx+0x238]
   14002558d:	jmp    0x140003750
   140025592:	lea    rcx,[rdx+0x340]
   140025599:	jmp    0x140003750
   14002559e:	int3   
   14002559f:	int3   
   1400255a0:	lea    rcx,[rdx+0x70]
   1400255a7:	jmp    0x140003750
   1400255ac:	lea    rcx,[rdx+0x70]
   1400255b3:	jmp    0x140003750
   1400255b8:	rex push rbp
   1400255ba:	sub    rsp,0x20
   1400255be:	mov    rbp,rdx
   1400255c1:	mov    eax,DWORD PTR [rbp+0x38]
   1400255c4:	and    eax,0x1
   1400255c7:	test   eax,eax
   1400255c9:	je     0x1400255db
   1400255cb:	and    DWORD PTR [rbp+0x38],0xfffffffe
   1400255cf:	mov    rcx,QWORD PTR [rbp+0xd0]
   1400255d6:	call   0x1400039c0
   1400255db:	add    rsp,0x20
   1400255df:	pop    rbp
   1400255e0:	ret    
   1400255e1:	lea    rcx,[rdx+0x40]
   1400255e8:	jmp    0x140003750
   1400255ed:	lea    rcx,[rdx+0xf8]
   1400255f4:	add    rcx,0x10
   1400255f8:	jmp    0x140004790
   1400255fd:	lea    rcx,[rdx+0xf8]
   140025604:	add    rcx,0x20
   140025608:	jmp    0x140004790
   14002560d:	lea    rcx,[rdx+0xf8]
   140025614:	jmp    0x140003750
   140025619:	lea    rcx,[rdx+0xf8]
   140025620:	jmp    0x140003750
   140025625:	lea    rcx,[rdx+0x40]
   14002562c:	jmp    0x140003750
   140025631:	lea    rcx,[rdx+0x40]
   140025638:	jmp    0x140003750
   14002563d:	mov    QWORD PTR [rsp+0x10],rdx
   140025642:	push   rbp
   140025643:	sub    rsp,0x20
   140025647:	mov    rbp,rdx
   14002564a:	lea    rax,[rip+0xfffffffffffe6b9b]        # 0x14000c1ec
   140025651:	add    rsp,0x20
   140025655:	pop    rbp
   140025656:	ret    
   140025657:	int3   
   140025658:	lea    rcx,[rdx+0xa0]
   14002565f:	add    rcx,0x10
   140025663:	jmp    0x140004790
   140025668:	lea    rcx,[rdx+0xa0]
   14002566f:	add    rcx,0x20
   140025673:	jmp    0x140004790
   140025678:	lea    rcx,[rdx+0xa0]
   14002567f:	jmp    0x140003750
   140025684:	lea    rcx,[rdx+0x40]
   14002568b:	jmp    0x140003750
   140025690:	lea    rcx,[rdx+0x78]
   140025697:	jmp    0x1400039c0
   14002569c:	lea    rcx,[rdx+0x48]
   1400256a3:	jmp    0x140003750
   1400256a8:	lea    rcx,[rdx+0x48]
   1400256af:	jmp    0x140003750
   1400256b4:	lea    rcx,[rdx+0xd0]
   1400256bb:	add    rcx,0x10
   1400256bf:	jmp    0x140004790
   1400256c4:	lea    rcx,[rdx+0xd0]
   1400256cb:	add    rcx,0x20
   1400256cf:	jmp    0x140004790
   1400256d4:	lea    rcx,[rdx+0xd0]
   1400256db:	jmp    0x140003750
   1400256e0:	lea    rcx,[rdx+0xd0]
   1400256e7:	jmp    0x140003750
   1400256ec:	lea    rcx,[rdx+0x88]
   1400256f3:	jmp    0x140003750
   1400256f8:	lea    rcx,[rdx+0x48]
   1400256ff:	add    rcx,0x10
   140025703:	jmp    0x140004790
   140025708:	lea    rcx,[rdx+0x48]
   14002570f:	add    rcx,0x20
   140025713:	jmp    0x140004790
   140025718:	lea    rcx,[rdx+0x48]
   14002571f:	jmp    0x140003750
   140025724:	lea    rcx,[rdx+0x48]
   14002572b:	jmp    0x140003750
   140025730:	lea    rcx,[rdx+0x88]
   140025737:	jmp    0x140003750
   14002573c:	lea    rcx,[rdx+0x48]
   140025743:	add    rcx,0x10
   140025747:	jmp    0x140004790
   14002574c:	lea    rcx,[rdx+0x48]
   140025753:	add    rcx,0x20
   140025757:	jmp    0x140004790
   14002575c:	lea    rcx,[rdx+0x48]
   140025763:	jmp    0x140003750
   140025768:	lea    rcx,[rdx+0x48]
   14002576f:	jmp    0x140003750
   140025774:	lea    rcx,[rdx+0x88]
   14002577b:	jmp    0x140003750
   140025780:	lea    rcx,[rdx+0x48]
   140025787:	add    rcx,0x10
   14002578b:	jmp    0x140004790
   140025790:	lea    rcx,[rdx+0x48]
   140025797:	add    rcx,0x20
   14002579b:	jmp    0x140004790
   1400257a0:	lea    rcx,[rdx+0x48]
   1400257a7:	jmp    0x140003750
   1400257ac:	lea    rcx,[rdx+0x48]
   1400257b3:	jmp    0x140003750
   1400257b8:	lea    rcx,[rdx+0x88]
   1400257bf:	jmp    0x140003750
   1400257c4:	lea    rcx,[rdx+0x48]
   1400257cb:	jmp    0x140003750
   1400257d0:	lea    rcx,[rdx+0x88]
   1400257d7:	jmp    0x140003750
   1400257dc:	lea    rcx,[rdx+0x48]
   1400257e3:	jmp    0x140003750
   1400257e8:	lea    rcx,[rdx+0x88]
   1400257ef:	jmp    0x140003750
   1400257f4:	lea    rcx,[rdx+0x48]
   1400257fb:	jmp    0x140003750
   140025800:	lea    rcx,[rdx+0x88]
   140025807:	jmp    0x140003750
   14002580c:	int3   
   14002580d:	int3   
   14002580e:	int3   
   14002580f:	int3   
   140025810:	mov    rcx,QWORD PTR [rdx+0x140]
   140025817:	jmp    0x1400039c0
   14002581c:	lea    rcx,[rdx+0x48]
   140025823:	jmp    0x140003750
   140025828:	lea    rcx,[rdx+0x98]
   14002582f:	jmp    0x140003750
   140025834:	lea    rcx,[rdx+0x48]
   14002583b:	add    rcx,0x10
   14002583f:	jmp    0x140004790
   140025844:	lea    rcx,[rdx+0x48]
   14002584b:	add    rcx,0x20
   14002584f:	jmp    0x140004790
   140025854:	lea    rcx,[rdx+0x48]
   14002585b:	jmp    0x140003750
   140025860:	lea    rcx,[rdx+0x48]
   140025867:	jmp    0x140003750
   14002586c:	lea    rcx,[rdx+0x98]
   140025873:	jmp    0x140003750
   140025878:	lea    rcx,[rdx+0x48]
   14002587f:	add    rcx,0x10
   140025883:	jmp    0x140004790
   140025888:	lea    rcx,[rdx+0x48]
   14002588f:	add    rcx,0x20
   140025893:	jmp    0x140004790
   140025898:	lea    rcx,[rdx+0x48]
   14002589f:	jmp    0x140003750
   1400258a4:	lea    rcx,[rdx+0x48]
   1400258ab:	jmp    0x140003750
   1400258b0:	lea    rcx,[rdx+0x98]
   1400258b7:	jmp    0x140003750
   1400258bc:	lea    rcx,[rdx+0x48]
   1400258c3:	add    rcx,0x10
   1400258c7:	jmp    0x140004790
   1400258cc:	lea    rcx,[rdx+0x48]
   1400258d3:	add    rcx,0x20
   1400258d7:	jmp    0x140004790
   1400258dc:	lea    rcx,[rdx+0x48]
   1400258e3:	jmp    0x140003750
   1400258e8:	lea    rcx,[rdx+0x48]
   1400258ef:	jmp    0x140003750
   1400258f4:	int3   
   1400258f5:	int3   
   1400258f6:	int3   
   1400258f7:	int3   
   1400258f8:	int3   
   1400258f9:	int3   
   1400258fa:	int3   
   1400258fb:	int3   
   1400258fc:	int3   
   1400258fd:	int3   
   1400258fe:	int3   
   1400258ff:	int3   
   140025900:	lea    rcx,[rdx+0x80]
   140025907:	jmp    0x140003750
   14002590c:	lea    rcx,[rdx+0x80]
   140025913:	jmp    0x140003750
   140025918:	lea    rcx,[rdx+0x20]
   14002591f:	jmp    0x140003750
   140025924:	lea    rcx,[rdx+0x20]
   14002592b:	jmp    0x140003750
   140025930:	lea    rcx,[rdx+0xe0]
   140025937:	jmp    0x140003750
   14002593c:	lea    rcx,[rdx+0xe0]
   140025943:	jmp    0x140003750
   140025948:	lea    rcx,[rdx+0xb0]
   14002594f:	jmp    0x140003750
   140025954:	lea    rcx,[rdx+0xb0]
   14002595b:	jmp    0x140003750
   140025960:	lea    rcx,[rdx+0x50]
   140025967:	jmp    0x140003750
   14002596c:	lea    rcx,[rdx+0x50]
   140025973:	jmp    0x140003750
   140025978:	lea    rcx,[rdx+0x50]
   14002597f:	jmp    0x140003750
   140025984:	int3   
   140025985:	int3   
   140025986:	int3   
   140025987:	int3   
   140025988:	int3   
   140025989:	int3   
   14002598a:	int3   
   14002598b:	int3   
   14002598c:	int3   
   14002598d:	int3   
   14002598e:	int3   
   14002598f:	int3   
   140025990:	lea    rcx,[rdx+0x60]
   140025997:	jmp    0x140003750
   14002599c:	lea    rcx,[rdx+0x60]
   1400259a3:	jmp    0x140003750
   1400259a8:	lea    rcx,[rdx+0x30]
   1400259af:	jmp    0x140003750
   1400259b4:	lea    rcx,[rdx+0x30]
   1400259bb:	jmp    0x140003750
   1400259c0:	lea    rcx,[rdx+0x30]
   1400259c7:	jmp    0x140003750
   1400259cc:	lea    rcx,[rdx+0x30]
   1400259d3:	jmp    0x140003750
   1400259d8:	int3   
   1400259d9:	int3   
   1400259da:	int3   
   1400259db:	int3   
   1400259dc:	int3   
   1400259dd:	int3   
   1400259de:	int3   
   1400259df:	int3   
   1400259e0:	lea    rcx,[rdx+0x90]
   1400259e7:	jmp    0x140003750
   1400259ec:	int3   
   1400259ed:	int3   
   1400259ee:	int3   
   1400259ef:	int3   
   1400259f0:	mov    rcx,QWORD PTR [rdx+0x60]
   1400259f7:	jmp    0x1400039c0
   1400259fc:	mov    rcx,QWORD PTR [rdx+0x58]
   140025a03:	jmp    0x140003750
   140025a08:	int3   
   140025a09:	int3   
   140025a0a:	int3   
   140025a0b:	int3   
   140025a0c:	int3   
   140025a0d:	int3   
   140025a0e:	int3   
   140025a0f:	int3   
   140025a10:	mov    rcx,QWORD PTR [rdx+0x40]
   140025a17:	jmp    0x1400137cc
   140025a1c:	int3   
   140025a1d:	int3   
   140025a1e:	int3   
   140025a1f:	int3   
   140025a20:	mov    rcx,QWORD PTR [rdx+0x70]
   140025a27:	add    rcx,0x10
   140025a2b:	jmp    0x140004790
   140025a30:	mov    rcx,QWORD PTR [rdx+0x70]
   140025a37:	add    rcx,0x20
   140025a3b:	jmp    0x140004790
   140025a40:	mov    QWORD PTR [rsp+0x10],rdx
   140025a45:	push   rbp
   140025a46:	sub    rsp,0x20
   140025a4a:	mov    rbp,rdx
   140025a4d:	mov    rcx,QWORD PTR [rbp+0x68]
   140025a51:	mov    QWORD PTR [rbp+0x68],rcx
   140025a55:	xor    eax,eax
   140025a57:	inc    rcx
   140025a5a:	je     0x140025a7d
   140025a5c:	movabs rax,0x7fffffffffffffff
   140025a66:	cmp    rcx,rax
   140025a69:	ja     0x140025a78
   140025a6b:	add    rcx,rcx
   140025a6e:	call   0x1400138b8
   140025a73:	test   rax,rax
   140025a76:	jne    0x140025a7d
   140025a78:	call   0x140012fc8
   140025a7d:	mov    QWORD PTR [rbp+0x78],rax
   140025a81:	lea    rax,[rip+0xfffffffffffea2b3]        # 0x14000fd3b
   140025a88:	add    rsp,0x20
   140025a8c:	pop    rbp
   140025a8d:	ret    
   140025a8e:	int3   
   140025a8f:	mov    QWORD PTR [rsp+0x10],rdx
   140025a94:	push   rbx
   140025a95:	push   rbp
   140025a96:	sub    rsp,0x28
   140025a9a:	mov    rbp,rdx
   140025a9d:	mov    rbx,QWORD PTR [rbp+0x60]
   140025aa1:	cmp    QWORD PTR [rbx+0x18],0x8
   140025aa6:	jb     0x140025ab0
   140025aa8:	mov    rcx,QWORD PTR [rbx]
   140025aab:	call   0x1400137cc
   140025ab0:	mov    QWORD PTR [rbx+0x18],0x7
   140025ab8:	mov    QWORD PTR [rbx+0x10],0x0
   140025ac0:	xor    eax,eax
   140025ac2:	mov    WORD PTR [rbx],ax
   140025ac5:	xor    edx,edx
   140025ac7:	xor    ecx,ecx
   140025ac9:	call   0x14001436c
   140025ace:	nop
   140025acf:	int3   
   140025ad0:	lea    rcx,[rdx+0x28]
   140025ad7:	add    rcx,0x10
   140025adb:	jmp    0x140004790
   140025ae0:	lea    rcx,[rdx+0x28]
   140025ae7:	add    rcx,0x20
   140025aeb:	jmp    0x140004790
   140025af0:	lea    rcx,[rdx+0x28]
   140025af7:	jmp    0x140003750
   140025afc:	lea    rcx,[rdx+0x28]
   140025b03:	jmp    0x140003750
   140025b08:	int3   
   140025b09:	int3   
   140025b0a:	int3   
   140025b0b:	int3   
   140025b0c:	int3   
   140025b0d:	int3   
   140025b0e:	int3   
   140025b0f:	int3   
   140025b10:	mov    rcx,QWORD PTR [rdx+0x140]
   140025b17:	add    rcx,0x10
   140025b1b:	jmp    0x140004790
   140025b20:	mov    rcx,QWORD PTR [rdx+0x140]
   140025b27:	add    rcx,0x20
   140025b2b:	jmp    0x140004790
   140025b30:	lea    rcx,[rdx+0x20]
   140025b37:	add    rcx,0x10
   140025b3b:	jmp    0x140004790
   140025b40:	lea    rcx,[rdx+0x20]
   140025b47:	add    rcx,0x20
   140025b4b:	jmp    0x140004790
   140025b50:	lea    rcx,[rdx+0x20]
   140025b57:	jmp    0x140003750
   140025b5c:	mov    rcx,QWORD PTR [rdx+0x140]
   140025b63:	add    rcx,0x10
   140025b67:	jmp    0x140004790
   140025b6c:	mov    rcx,QWORD PTR [rdx+0x140]
   140025b73:	add    rcx,0x20
   140025b77:	jmp    0x140004790
   140025b7c:	mov    rcx,QWORD PTR [rdx+0x140]
   140025b83:	add    rcx,0x10
   140025b87:	jmp    0x140004790
   140025b8c:	mov    rcx,QWORD PTR [rdx+0x140]
   140025b93:	add    rcx,0x20
   140025b97:	jmp    0x140004790
   140025b9c:	mov    rcx,QWORD PTR [rdx+0x140]
   140025ba3:	add    rcx,0x10
   140025ba7:	jmp    0x140004790
   140025bac:	mov    rcx,QWORD PTR [rdx+0x140]
   140025bb3:	add    rcx,0x20
   140025bb7:	jmp    0x140004790
   140025bbc:	mov    rcx,QWORD PTR [rdx+0x140]
   140025bc3:	add    rcx,0x10
   140025bc7:	jmp    0x140004790
   140025bcc:	mov    rcx,QWORD PTR [rdx+0x140]
   140025bd3:	add    rcx,0x20
   140025bd7:	jmp    0x140004790
   140025bdc:	int3   
   140025bdd:	int3   
   140025bde:	int3   
   140025bdf:	int3   
   140025be0:	lea    rcx,[rdx+0x58]
   140025be7:	jmp    0x140002000
   140025bec:	lea    rcx,[rdx+0x20]
   140025bf3:	add    rcx,0x10
   140025bf7:	jmp    0x140004790
   140025bfc:	lea    rcx,[rdx+0x20]
   140025c03:	add    rcx,0x20
   140025c07:	jmp    0x140004790
   140025c0c:	lea    rcx,[rdx+0x20]
   140025c13:	jmp    0x140003750
   140025c18:	int3   
   140025c19:	int3   
   140025c1a:	int3   
   140025c1b:	int3   
   140025c1c:	int3   
   140025c1d:	int3   
   140025c1e:	int3   
   140025c1f:	int3   
   140025c20:	rex push rbp
   140025c22:	sub    rsp,0x20
   140025c26:	mov    rbp,rdx
   140025c29:	mov    eax,DWORD PTR [rbp+0x20]
   140025c2c:	and    eax,0x1
   140025c2f:	test   eax,eax
   140025c31:	je     0x140025c40
   140025c33:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140025c37:	mov    rcx,QWORD PTR [rbp+0x68]
   140025c3b:	call   0x140003750
   140025c40:	add    rsp,0x20
   140025c44:	pop    rbp
   140025c45:	ret    
   140025c46:	int3   
   140025c47:	int3   
   140025c48:	int3   
   140025c49:	int3   
   140025c4a:	int3   
   140025c4b:	int3   
   140025c4c:	int3   
   140025c4d:	int3   
   140025c4e:	int3   
   140025c4f:	int3   
   140025c50:	mov    rcx,QWORD PTR [rdx+0x58]
   140025c57:	jmp    0x140003750
   140025c5c:	int3   
   140025c5d:	int3   
   140025c5e:	int3   
   140025c5f:	int3   
   140025c60:	mov    rcx,QWORD PTR [rdx+0x48]
   140025c67:	jmp    0x140003750
   140025c6c:	int3   
   140025c6d:	int3   
   140025c6e:	int3   
   140025c6f:	int3   
   140025c70:	mov    rcx,QWORD PTR [rdx+0x40]
   140025c77:	jmp    0x1400123d0
   140025c7c:	int3   
   140025c7d:	int3   
   140025c7e:	int3   
   140025c7f:	int3   
   140025c80:	lea    rcx,[rdx+0x1b8]
   140025c87:	jmp    0x1400078e0
   140025c8c:	lea    rcx,[rdx+0xf0]
   140025c93:	jmp    0x140004890
   140025c98:	lea    rcx,[rdx+0x80]
   140025c9f:	jmp    0x140003750
   140025ca4:	lea    rcx,[rdx+0x50]
   140025cab:	jmp    0x140003750
   140025cb0:	lea    rcx,[rdx+0x50]
   140025cb7:	jmp    0x140003750
   140025cbc:	lea    rcx,[rdx+0x20]
   140025cc3:	jmp    0x140003750
   140025cc8:	lea    rcx,[rdx+0x20]
   140025ccf:	jmp    0x140003750
   140025cd4:	lea    rcx,[rdx+0x20]
   140025cdb:	jmp    0x140003750
   140025ce0:	lea    rcx,[rdx+0x20]
   140025ce7:	jmp    0x140003750
   140025cec:	lea    rcx,[rdx+0x138]
   140025cf3:	jmp    0x140003750
   140025cf8:	mov    rcx,QWORD PTR [rdx+0xe8]
   140025cff:	add    rcx,0x10
   140025d03:	jmp    0x140004790
   140025d08:	mov    rcx,QWORD PTR [rdx+0xe8]
   140025d0f:	add    rcx,0x20
   140025d13:	jmp    0x140004790
   140025d18:	mov    QWORD PTR [rsp+0x10],rdx
   140025d1d:	push   rbp
   140025d1e:	sub    rsp,0x20
   140025d22:	mov    rbp,rdx
   140025d25:	lea    rax,[rip+0xfffffffffffecf88]        # 0x140012cb4
   140025d2c:	add    rsp,0x20
   140025d30:	pop    rbp
   140025d31:	ret    
   140025d32:	int3   
   140025d33:	rex push rbp
   140025d35:	sub    rsp,0x20
   140025d39:	mov    rbp,rdx
   140025d3c:	add    rsp,0x20
   140025d40:	pop    rbp
   140025d41:	jmp    0x140015b28
   140025d46:	int3   
   140025d47:	rex push rbp
   140025d49:	sub    rsp,0x20
   140025d4d:	mov    rbp,rdx
   140025d50:	mov    rax,QWORD PTR [rcx]
   140025d53:	mov    rdx,rcx
   140025d56:	mov    ecx,DWORD PTR [rax]
   140025d58:	call   0x140016e70
   140025d5d:	nop
   140025d5e:	add    rsp,0x20
   140025d62:	pop    rbp
   140025d63:	ret    
   140025d64:	int3   
   140025d65:	rex push rbp
   140025d67:	sub    rsp,0x40
   140025d6b:	mov    rbp,rdx
   140025d6e:	lea    rax,[rbp+0x40]
   140025d72:	mov    QWORD PTR [rsp+0x30],rax
   140025d77:	mov    rax,QWORD PTR [rbp+0x90]
   140025d7e:	mov    QWORD PTR [rsp+0x28],rax
   140025d83:	mov    rax,QWORD PTR [rbp+0x88]
   140025d8a:	mov    QWORD PTR [rsp+0x20],rax
   140025d8f:	mov    r9,QWORD PTR [rbp+0x80]
   140025d96:	mov    r8,QWORD PTR [rbp+0x78]
   140025d9a:	mov    rdx,QWORD PTR [rbp+0x70]
   140025d9e:	call   0x1400146c0
   140025da3:	nop
   140025da4:	add    rsp,0x40
   140025da8:	pop    rbp
   140025da9:	ret    
   140025daa:	int3   
   140025dab:	rex push rbp
   140025dad:	sub    rsp,0x20
   140025db1:	mov    rbp,rdx
   140025db4:	cmp    DWORD PTR [rbp+0x80],0x0
   140025dbb:	je     0x140025dc8
   140025dbd:	mov    ecx,0x8
   140025dc2:	call   0x14001cfd8
   140025dc7:	nop
   140025dc8:	add    rsp,0x20
   140025dcc:	pop    rbp
   140025dcd:	ret    
   140025dce:	int3   
   140025dcf:	rex push rbp
   140025dd1:	sub    rsp,0x20
   140025dd5:	mov    rbp,rdx
   140025dd8:	mov    ecx,0xe
   140025ddd:	add    rsp,0x20
   140025de1:	pop    rbp
   140025de2:	jmp    0x14001cfd8
   140025de7:	int3   
   140025de8:	rex push rbp
   140025dea:	sub    rsp,0x20
   140025dee:	mov    rbp,rdx
   140025df1:	mov    ecx,0xd
   140025df6:	add    rsp,0x20
   140025dfa:	pop    rbp
   140025dfb:	jmp    0x14001cfd8
   140025e00:	int3   
   140025e01:	rex push rbp
   140025e03:	sub    rsp,0x20
   140025e07:	mov    rbp,rdx
   140025e0a:	mov    ecx,0xc
   140025e0f:	add    rsp,0x20
   140025e13:	pop    rbp
   140025e14:	jmp    0x14001cfd8
   140025e19:	int3   
   140025e1a:	rex push rbp
   140025e1c:	sub    rsp,0x20
   140025e20:	mov    rbp,rdx
   140025e23:	mov    ecx,0xb
   140025e28:	call   0x14001cfd8
   140025e2d:	nop
   140025e2e:	add    rsp,0x20
   140025e32:	pop    rbp
   140025e33:	ret    
   140025e34:	int3   
   140025e35:	rex push rbp
   140025e37:	sub    rsp,0x20
   140025e3b:	mov    rbp,rdx
   140025e3e:	mov    QWORD PTR [rbp+0x70],rcx
   140025e42:	mov    QWORD PTR [rbp+0x68],rcx
   140025e46:	mov    rax,QWORD PTR [rbp+0x68]
   140025e4a:	mov    rcx,QWORD PTR [rax]
   140025e4d:	mov    QWORD PTR [rbp+0x28],rcx
   140025e51:	mov    DWORD PTR [rbp+0x20],0x0
   140025e58:	mov    rax,QWORD PTR [rbp+0x28]
   140025e5c:	cmp    DWORD PTR [rax],0xe06d7363
   140025e62:	jne    0x140025eb1
   140025e64:	mov    rax,QWORD PTR [rbp+0x28]
   140025e68:	cmp    DWORD PTR [rax+0x18],0x4
   140025e6c:	jne    0x140025eb1
   140025e6e:	mov    rax,QWORD PTR [rbp+0x28]
   140025e72:	cmp    DWORD PTR [rax+0x20],0x19930520
   140025e79:	je     0x140025e95
   140025e7b:	mov    rax,QWORD PTR [rbp+0x28]
   140025e7f:	cmp    DWORD PTR [rax+0x20],0x19930521
   140025e86:	je     0x140025e95
   140025e88:	mov    rax,QWORD PTR [rbp+0x28]
   140025e8c:	cmp    DWORD PTR [rax+0x20],0x19930522
   140025e93:	jne    0x140025eb1
   140025e95:	mov    rdx,QWORD PTR [rbp+0x28]
   140025e99:	mov    rax,QWORD PTR [rbp+0xd8]
   140025ea0:	mov    rcx,QWORD PTR [rax+0x28]
   140025ea4:	cmp    QWORD PTR [rdx+0x28],rcx
   140025ea8:	jne    0x140025eb1
   140025eaa:	mov    DWORD PTR [rbp+0x20],0x1
   140025eb1:	mov    rax,QWORD PTR [rbp+0x28]
   140025eb5:	cmp    DWORD PTR [rax],0xe06d7363
   140025ebb:	jne    0x140025f18
   140025ebd:	mov    rax,QWORD PTR [rbp+0x28]
   140025ec1:	cmp    DWORD PTR [rax+0x18],0x4
   140025ec5:	jne    0x140025f18
   140025ec7:	mov    rax,QWORD PTR [rbp+0x28]
   140025ecb:	cmp    DWORD PTR [rax+0x20],0x19930520
   140025ed2:	je     0x140025eee
   140025ed4:	mov    rax,QWORD PTR [rbp+0x28]
   140025ed8:	cmp    DWORD PTR [rax+0x20],0x19930521
   140025edf:	je     0x140025eee
   140025ee1:	mov    rax,QWORD PTR [rbp+0x28]
   140025ee5:	cmp    DWORD PTR [rax+0x20],0x19930522
   140025eec:	jne    0x140025f18
   140025eee:	mov    rax,QWORD PTR [rbp+0x28]
   140025ef2:	cmp    QWORD PTR [rax+0x30],0x0
   140025ef7:	jne    0x140025f18
   140025ef9:	call   0x140017170
   140025efe:	mov    DWORD PTR [rax+0x460],0x1
   140025f08:	mov    DWORD PTR [rbp+0x20],0x1
   140025f0f:	mov    DWORD PTR [rbp+0x30],0x1
   140025f16:	jmp    0x140025f1f
   140025f18:	mov    DWORD PTR [rbp+0x30],0x0
   140025f1f:	mov    eax,DWORD PTR [rbp+0x30]
   140025f22:	add    rsp,0x20
   140025f26:	pop    rbp
   140025f27:	ret    
   140025f28:	int3   
   140025f29:	rex push rbx
   140025f2b:	push   rbp
   140025f2c:	sub    rsp,0x28
   140025f30:	mov    rbp,rdx
   140025f33:	mov    rcx,QWORD PTR [rbp+0x38]
   140025f37:	call   0x1400147fc
   140025f3c:	cmp    DWORD PTR [rbp+0x20],0x0
   140025f40:	jne    0x140025f7c
   140025f42:	mov    rbx,QWORD PTR [rbp+0xd8]
   140025f49:	cmp    DWORD PTR [rbx],0xe06d7363
   140025f4f:	jne    0x140025f7c
   140025f51:	cmp    DWORD PTR [rbx+0x18],0x4
   140025f55:	jne    0x140025f7c
   140025f57:	mov    eax,DWORD PTR [rbx+0x20]
   140025f5a:	sub    eax,0x19930520
   140025f5f:	cmp    eax,0x2
   140025f62:	ja     0x140025f7c
   140025f64:	mov    rcx,QWORD PTR [rbx+0x28]
   140025f68:	call   0x14001488c
   140025f6d:	test   eax,eax
   140025f6f:	je     0x140025f7c
   140025f71:	mov    dl,0x1
   140025f73:	mov    rcx,rbx
   140025f76:	call   0x140017cb0
   140025f7b:	nop
   140025f7c:	call   0x140017170
   140025f81:	mov    rcx,QWORD PTR [rbp+0xe0]
   140025f88:	mov    QWORD PTR [rax+0xf0],rcx
   140025f8f:	call   0x140017170
   140025f94:	mov    rcx,QWORD PTR [rbp+0x50]
   140025f98:	mov    QWORD PTR [rax+0xf8],rcx
   140025f9f:	add    rsp,0x28
   140025fa3:	pop    rbp
   140025fa4:	pop    rbx
   140025fa5:	ret    
   140025fa6:	int3   
   140025fa7:	rex push rbp
   140025fa9:	sub    rsp,0x20
   140025fad:	mov    rbp,rdx
   140025fb0:	xor    eax,eax
   140025fb2:	cmp    BYTE PTR [rbp+0x38],al
   140025fb5:	setne  al
   140025fb8:	add    rsp,0x20
   140025fbc:	pop    rbp
   140025fbd:	ret    
   140025fbe:	int3   
   140025fbf:	rex push rbp
   140025fc1:	sub    rsp,0x20
   140025fc5:	mov    rbp,rdx
   140025fc8:	call   0x140018b78
   140025fcd:	nop
   140025fce:	add    rsp,0x20
   140025fd2:	pop    rbp
   140025fd3:	ret    
   140025fd4:	int3   
   140025fd5:	rex push rbp
   140025fd7:	sub    rsp,0x20
   140025fdb:	mov    rbp,rdx
   140025fde:	call   0x140017170
   140025fe3:	cmp    DWORD PTR [rax+0x100],0x0
   140025fea:	jle    0x140025ff7
   140025fec:	call   0x140017170
   140025ff1:	dec    DWORD PTR [rax+0x100]
   140025ff7:	add    rsp,0x20
   140025ffb:	pop    rbp
   140025ffc:	ret    
   140025ffd:	int3   
   140025ffe:	rex push rbp
   140026000:	sub    rsp,0x20
   140026004:	mov    rbp,rdx
   140026007:	mov    ecx,0xc
   14002600c:	add    rsp,0x20
   140026010:	pop    rbp
   140026011:	jmp    0x14001cfd8
   140026016:	int3   
   140026017:	rex push rbp
   140026019:	sub    rsp,0x20
   14002601d:	mov    rbp,rdx
   140026020:	mov    ecx,0xd
   140026025:	add    rsp,0x20
   140026029:	pop    rbp
   14002602a:	jmp    0x14001cfd8
   14002602f:	int3   
   140026030:	rex push rbp
   140026032:	sub    rsp,0x20
   140026036:	mov    rbp,rdx
   140026039:	mov    rcx,QWORD PTR [rip+0x11c60]        # 0x140037ca0
   140026040:	add    rsp,0x20
   140026044:	pop    rbp
   140026045:	rex.W jmp QWORD PTR [rip+0xfec]        # 0x140027038
   14002604c:	int3   
   14002604d:	int3   
   14002604e:	int3   
   14002604f:	int3   
   140026050:	rex push rbp
   140026052:	sub    rsp,0x20
   140026056:	mov    rbp,rdx
   140026059:	mov    rax,QWORD PTR [rcx]
   14002605c:	xor    ecx,ecx
   14002605e:	cmp    DWORD PTR [rax],0xc0000005
   140026064:	sete   cl
   140026067:	mov    eax,ecx
   140026069:	add    rsp,0x20
   14002606d:	pop    rbp
   14002606e:	ret    
   14002606f:	int3   
   140026070:	rex push rbp
   140026072:	sub    rsp,0x20
   140026076:	mov    rbp,rdx
   140026079:	cmp    DWORD PTR [rbp+0x60],0x0
   14002607d:	je     0x140026087
   14002607f:	xor    ecx,ecx
   140026081:	call   0x14001cfd8
   140026086:	nop
   140026087:	add    rsp,0x20
   14002608b:	pop    rbp
   14002608c:	ret    
   14002608d:	int3   
   14002608e:	rex push rbp
   140026090:	sub    rsp,0x20
   140026094:	mov    rbp,rdx
   140026097:	mov    ecx,DWORD PTR [rbp+0x50]
   14002609a:	add    rsp,0x20
   14002609e:	pop    rbp
   14002609f:	jmp    0x140022c0c
   1400260a4:	int3   
   1400260a5:	rex push rbp
   1400260a7:	sub    rsp,0x20
   1400260ab:	mov    rbp,rdx
   1400260ae:	movsxd rcx,DWORD PTR [rbp+0x20]
   1400260b2:	mov    rax,rcx
   1400260b5:	mov    rdx,QWORD PTR [rip+0x1434c]        # 0x14003a408
   1400260bc:	mov    rdx,QWORD PTR [rdx+rcx*8]
   1400260c0:	call   0x14001dbe0
   1400260c5:	nop
   1400260c6:	add    rsp,0x20
   1400260ca:	pop    rbp
   1400260cb:	ret    
   1400260cc:	int3   
   1400260cd:	rex push rbp
   1400260cf:	sub    rsp,0x20
   1400260d3:	mov    rbp,rdx
   1400260d6:	mov    ecx,0x1
   1400260db:	add    rsp,0x20
   1400260df:	pop    rbp
   1400260e0:	jmp    0x14001cfd8
   1400260e5:	int3   
   1400260e6:	rex push rbp
   1400260e8:	sub    rsp,0x20
   1400260ec:	mov    rbp,rdx
   1400260ef:	mov    ecx,0x1
   1400260f4:	add    rsp,0x20
   1400260f8:	pop    rbp
   1400260f9:	jmp    0x14001cfd8
   1400260fe:	int3   
   1400260ff:	rex push rbp
   140026101:	sub    rsp,0x20
   140026105:	mov    rbp,rdx
   140026108:	mov    ecx,0xa
   14002610d:	add    rsp,0x20
   140026111:	pop    rbp
   140026112:	jmp    0x14001cfd8
   140026117:	int3   
   140026118:	rex push rbp
   14002611a:	sub    rsp,0x20
   14002611e:	mov    rbp,rdx
   140026121:	mov    rcx,QWORD PTR [rbp+0x38]
   140026125:	add    rsp,0x20
   140026129:	pop    rbp
   14002612a:	jmp    0x14001db90
   14002612f:	int3   
   140026130:	rex push rbp
   140026132:	sub    rsp,0x20
   140026136:	mov    rbp,rdx
   140026139:	mov    rcx,QWORD PTR [rbp+0x30]
   14002613d:	add    rsp,0x20
   140026141:	pop    rbp
   140026142:	jmp    0x14001db90
   140026147:	int3   
   140026148:	rex push rbp
   14002614a:	sub    rsp,0x20
   14002614e:	mov    rbp,rdx
   140026151:	mov    ecx,DWORD PTR [rbp+0x40]
   140026154:	add    rsp,0x20
   140026158:	pop    rbp
   140026159:	jmp    0x140022c0c
   14002615e:	int3   
   14002615f:	int3   
   140026160:	lea    rax,[rip+0x1309]        # 0x140027470
   140026167:	mov    QWORD PTR [rip+0x1276a],rax        # 0x1400388d8
   14002616e:	ret    
   14002616f:	int3   
   140026170:	lea    rax,[rip+0x12f9]        # 0x140027470
   140026177:	mov    QWORD PTR [rip+0x12762],rax        # 0x1400388e0
   14002617e:	ret    
   14002617f:	int3   
   140026180:	lea    rax,[rip+0x12e9]        # 0x140027470
   140026187:	mov    QWORD PTR [rip+0x1275a],rax        # 0x1400388e8
   14002618e:	ret    
   14002618f:	int3   
   140026190:	rex push rbx
   140026192:	sub    rsp,0x20
   140026196:	mov    rax,QWORD PTR [rip+0x1416b]        # 0x14003a308
   14002619d:	xor    ebx,ebx
   14002619f:	mov    ecx,ebx
   1400261a1:	mov    QWORD PTR [rip+0x14160],rbx        # 0x14003a308
   1400261a8:	test   rax,rax
   1400261ab:	je     0x1400261bc
   1400261ad:	mov    rcx,rax
   1400261b0:	call   0x140013924
   1400261b5:	mov    rcx,QWORD PTR [rip+0x1414c]        # 0x14003a308
   1400261bc:	call   0x1400137cc
   1400261c1:	mov    rcx,QWORD PTR [rip+0x14130]        # 0x14003a2f8
   1400261c8:	mov    QWORD PTR [rip+0x14129],rbx        # 0x14003a2f8
   1400261cf:	test   rcx,rcx
   1400261d2:	je     0x1400261e0
   1400261d4:	call   0x140013924
   1400261d9:	mov    rbx,QWORD PTR [rip+0x14118]        # 0x14003a2f8
   1400261e0:	mov    rcx,rbx
   1400261e3:	add    rsp,0x20
   1400261e7:	pop    rbx
   1400261e8:	jmp    0x1400137cc
   1400261ed:	int3   
   1400261ee:	int3   
   1400261ef:	int3   
   1400261f0:	jmp    0x14000efe0
   1400261f5:	int3   
   1400261f6:	int3   
   1400261f7:	int3   
   1400261f8:	lea    rcx,[rip+0x14051]        # 0x14003a250
   1400261ff:	jmp    0x140024298
