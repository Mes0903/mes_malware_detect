
856c9490f1798ed054943aa9aa8f0c28268b9c3ba2bd0e8d1d140d483aaf7be8.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rbx
   140001005:	push   rdi
   140001006:	sub    rsp,0x40
   14000100a:	mov    rbx,rcx
   14000100d:	lea    rcx,[rsp+0x30]
   140001012:	call   QWORD PTR [rip+0x13520]        # 0x140014538
   140001018:	or     rcx,0xffffffffffffffff
   14000101c:	lea    rdx,[rip+0x1474d]        # 0x140015770
   140001023:	mov    QWORD PTR [rsp+0x28],rdx
   140001028:	mov    rdi,rdx
   14000102b:	xor    eax,eax
   14000102d:	repnz scas al,BYTE PTR es:[rdi]
   14000102f:	lea    rdx,[rsp+0x20]
   140001034:	not    rcx
   140001037:	dec    rcx
   14000103a:	mov    DWORD PTR [rsp+0x20],ecx
   14000103e:	lea    rcx,[rsp+0x60]
   140001043:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140001048:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000104e:	call   QWORD PTR [rip+0x134ec]        # 0x140014540
   140001054:	lea    r8,[rsp+0x30]
   140001059:	lea    rdx,[rsp+0x60]
   14000105e:	mov    rcx,rbx
   140001061:	call   QWORD PTR [rip+0x14641]        # 0x1400156a8
   140001067:	lea    rcx,[rsp+0x60]
   14000106c:	call   QWORD PTR [rip+0x134d6]        # 0x140014548
   140001072:	lea    rcx,[rsp+0x30]
   140001077:	call   QWORD PTR [rip+0x134d3]        # 0x140014550
   14000107d:	mov    rbx,QWORD PTR [rsp+0x50]
   140001082:	add    rsp,0x40
   140001086:	pop    rdi
   140001087:	ret    
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	mov    r11,rsp
   140001093:	mov    QWORD PTR [r11+0x8],rbx
   140001097:	push   rdi
   140001098:	sub    rsp,0xf0
   14000109f:	mov    rbx,rcx
   1400010a2:	cmp    edx,0x4
   1400010a5:	je     0x1400013a7
   1400010ab:	cmp    edx,0x6
   1400010ae:	jne    0x140001480
   1400010b4:	or     rcx,0xffffffffffffffff
   1400010b8:	lea    rdx,[rip+0x146b1]        # 0x140015770
   1400010bf:	xor    eax,eax
   1400010c1:	mov    rdi,rdx
   1400010c4:	mov    QWORD PTR [r11-0x70],rdx
   1400010c8:	lea    rdx,[rsp+0x20]
   1400010cd:	repnz scas al,BYTE PTR es:[rdi]
   1400010cf:	not    rcx
   1400010d2:	dec    rcx
   1400010d5:	mov    DWORD PTR [r11-0x78],ecx
   1400010d9:	lea    rcx,[rsp+0x50]
   1400010de:	movaps xmm0,XMMWORD PTR [r11-0x78]
   1400010e3:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400010e9:	call   QWORD PTR [rip+0x13451]        # 0x140014540
   1400010ef:	lea    r8,[rsp+0x50]
   1400010f4:	lea    rdx,[rsp+0xc8]
   1400010fc:	mov    rcx,rbx
   1400010ff:	call   QWORD PTR [rip+0x14593]        # 0x140015698
   140001105:	lea    rdx,[rsp+0x98]
   14000110d:	mov    rcx,rax
   140001110:	call   QWORD PTR [rip+0x133fa]        # 0x140014510
   140001116:	lea    rcx,[rsp+0x110]
   14000111e:	mov    rdx,rax
   140001121:	call   QWORD PTR [rip+0x133f1]        # 0x140014518
   140001127:	lea    rcx,[rsp+0x98]
   14000112f:	call   QWORD PTR [rip+0x13413]        # 0x140014548
   140001135:	lea    rcx,[rsp+0xc8]
   14000113d:	call   QWORD PTR [rip+0x1340d]        # 0x140014550
   140001143:	lea    rcx,[rsp+0x50]
   140001148:	call   QWORD PTR [rip+0x133fa]        # 0x140014548
   14000114e:	lea    rdx,[rsp+0x90]
   140001156:	lea    rcx,[rsp+0x110]
   14000115e:	call   QWORD PTR [rip+0x133bc]        # 0x140014520
   140001164:	mov    rcx,QWORD PTR [rbx+0x88]
   14000116b:	mov    rdx,rax
   14000116e:	call   0x14000aeb0
   140001173:	lea    rcx,[rsp+0x90]
   14000117b:	call   QWORD PTR [rip+0x133c7]        # 0x140014548
   140001181:	or     rcx,0xffffffffffffffff
   140001185:	lea    rdx,[rip+0x14624]        # 0x1400157b0
   14000118c:	mov    QWORD PTR [rsp+0x28],rdx
   140001191:	mov    rdi,rdx
   140001194:	xor    eax,eax
   140001196:	repnz scas al,BYTE PTR es:[rdi]
   140001198:	lea    rdx,[rsp+0x20]
   14000119d:	not    rcx
   1400011a0:	dec    rcx
   1400011a3:	mov    DWORD PTR [rsp+0x20],ecx
   1400011a7:	lea    rcx,[rsp+0x48]
   1400011ac:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400011b1:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400011b7:	call   QWORD PTR [rip+0x13383]        # 0x140014540
   1400011bd:	lea    rdx,[rsp+0xa0]
   1400011c5:	lea    rcx,[rsp+0x110]
   1400011cd:	call   QWORD PTR [rip+0x13355]        # 0x140014528
   1400011d3:	lea    rcx,[rsp+0x118]
   1400011db:	mov    rdx,rax
   1400011de:	call   QWORD PTR [rip+0x13384]        # 0x140014568
   1400011e4:	lea    rdx,[rsp+0x48]
   1400011e9:	lea    rcx,[rsp+0x118]
   1400011f1:	call   QWORD PTR [rip+0x13379]        # 0x140014570
   1400011f7:	lea    rdx,[rsp+0x118]
   1400011ff:	lea    rcx,[rsp+0xb8]
   140001207:	call   QWORD PTR [rip+0x1332b]        # 0x140014538
   14000120d:	or     rcx,0xffffffffffffffff
   140001211:	lea    rdx,[rip+0x14588]        # 0x1400157a0
   140001218:	mov    QWORD PTR [rsp+0x28],rdx
   14000121d:	mov    rdi,rdx
   140001220:	xor    eax,eax
   140001222:	repnz scas al,BYTE PTR es:[rdi]
   140001224:	lea    rdx,[rsp+0x20]
   140001229:	not    rcx
   14000122c:	dec    rcx
   14000122f:	mov    DWORD PTR [rsp+0x20],ecx
   140001233:	lea    rcx,[rsp+0x60]
   140001238:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000123d:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140001243:	call   QWORD PTR [rip+0x132f7]        # 0x140014540
   140001249:	lea    r8,[rsp+0xb8]
   140001251:	lea    rdx,[rsp+0x60]
   140001256:	mov    rcx,rbx
   140001259:	call   QWORD PTR [rip+0x14449]        # 0x1400156a8
   14000125f:	lea    rcx,[rsp+0x60]
   140001264:	call   QWORD PTR [rip+0x132de]        # 0x140014548
   14000126a:	lea    rcx,[rsp+0xb8]
   140001272:	call   QWORD PTR [rip+0x132d8]        # 0x140014550
   140001278:	lea    rcx,[rsp+0x118]
   140001280:	call   QWORD PTR [rip+0x132c2]        # 0x140014548
   140001286:	lea    rcx,[rsp+0xa0]
   14000128e:	call   QWORD PTR [rip+0x132b4]        # 0x140014548
   140001294:	lea    rcx,[rsp+0x48]
   140001299:	call   QWORD PTR [rip+0x132a9]        # 0x140014548
   14000129f:	or     rcx,0xffffffffffffffff
   1400012a3:	lea    rdx,[rip+0x144ea]        # 0x140015794
   1400012aa:	mov    QWORD PTR [rsp+0x28],rdx
   1400012af:	mov    rdi,rdx
   1400012b2:	xor    eax,eax
   1400012b4:	repnz scas al,BYTE PTR es:[rdi]
   1400012b6:	lea    rdx,[rsp+0x20]
   1400012bb:	not    rcx
   1400012be:	dec    rcx
   1400012c1:	mov    DWORD PTR [rsp+0x20],ecx
   1400012c5:	lea    rcx,[rsp+0x58]
   1400012ca:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   1400012cf:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400012d5:	call   QWORD PTR [rip+0x13265]        # 0x140014540
   1400012db:	lea    rdx,[rsp+0xa8]
   1400012e3:	lea    rcx,[rsp+0x110]
   1400012eb:	call   QWORD PTR [rip+0x13237]        # 0x140014528
   1400012f1:	lea    rcx,[rsp+0x30]
   1400012f6:	mov    rdx,rax
   1400012f9:	call   QWORD PTR [rip+0x13269]        # 0x140014568
   1400012ff:	lea    rdx,[rsp+0x58]
   140001304:	lea    rcx,[rsp+0x30]
   140001309:	call   QWORD PTR [rip+0x13261]        # 0x140014570
   14000130f:	lea    rdx,[rsp+0x30]
   140001314:	lea    rcx,[rsp+0x70]
   140001319:	call   QWORD PTR [rip+0x13219]        # 0x140014538
   14000131f:	or     rcx,0xffffffffffffffff
   140001323:	lea    rdx,[rip+0x14456]        # 0x140015780
   14000132a:	mov    QWORD PTR [rsp+0x28],rdx
   14000132f:	mov    rdi,rdx
   140001332:	xor    eax,eax
   140001334:	repnz scas al,BYTE PTR es:[rdi]
   140001336:	lea    rdx,[rsp+0x20]
   14000133b:	not    rcx
   14000133e:	dec    rcx
   140001341:	mov    DWORD PTR [rsp+0x20],ecx
   140001345:	lea    rcx,[rsp+0x38]
   14000134a:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000134f:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140001355:	call   QWORD PTR [rip+0x131e5]        # 0x140014540
   14000135b:	lea    r8,[rsp+0x70]
   140001360:	lea    rdx,[rsp+0x38]
   140001365:	mov    rcx,rbx
   140001368:	call   QWORD PTR [rip+0x1433a]        # 0x1400156a8
   14000136e:	lea    rcx,[rsp+0x38]
   140001373:	call   QWORD PTR [rip+0x131cf]        # 0x140014548
   140001379:	lea    rcx,[rsp+0x70]
   14000137e:	call   QWORD PTR [rip+0x131cc]        # 0x140014550
   140001384:	lea    rcx,[rsp+0x30]
   140001389:	call   QWORD PTR [rip+0x131b9]        # 0x140014548
   14000138f:	lea    rcx,[rsp+0xa8]
   140001397:	call   QWORD PTR [rip+0x131ab]        # 0x140014548
   14000139d:	lea    rcx,[rsp+0x58]
   1400013a2:	jmp    0x14000146c
   1400013a7:	or     rcx,0xffffffffffffffff
   1400013ab:	lea    rdx,[rip+0x143be]        # 0x140015770
   1400013b2:	xor    eax,eax
   1400013b4:	mov    rdi,rdx
   1400013b7:	mov    QWORD PTR [rsp+0x78],rdx
   1400013bc:	lea    rdx,[rsp+0x20]
   1400013c1:	repnz scas al,BYTE PTR es:[rdi]
   1400013c3:	not    rcx
   1400013c6:	dec    rcx
   1400013c9:	mov    DWORD PTR [rsp+0x70],ecx
   1400013cd:	lea    rcx,[rsp+0x40]
   1400013d2:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   1400013d7:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400013dd:	call   QWORD PTR [rip+0x1315d]        # 0x140014540
   1400013e3:	lea    r8,[rsp+0x40]
   1400013e8:	lea    rdx,[rsp+0xd8]
   1400013f0:	mov    rcx,rbx
   1400013f3:	call   QWORD PTR [rip+0x1429f]        # 0x140015698
   1400013f9:	lea    rdx,[rsp+0xb0]
   140001401:	mov    rcx,rax
   140001404:	call   QWORD PTR [rip+0x13106]        # 0x140014510
   14000140a:	lea    rcx,[rsp+0x110]
   140001412:	mov    rdx,rax
   140001415:	call   QWORD PTR [rip+0x130fd]        # 0x140014518
   14000141b:	lea    rcx,[rsp+0xb0]
   140001423:	call   QWORD PTR [rip+0x1311f]        # 0x140014548
   140001429:	lea    rcx,[rsp+0xd8]
   140001431:	call   QWORD PTR [rip+0x13119]        # 0x140014550
   140001437:	lea    rcx,[rsp+0x40]
   14000143c:	call   QWORD PTR [rip+0x13106]        # 0x140014548
   140001442:	lea    rdx,[rsp+0x80]
   14000144a:	lea    rcx,[rsp+0x110]
   140001452:	call   QWORD PTR [rip+0x130c8]        # 0x140014520
   140001458:	mov    rcx,QWORD PTR [rbx+0x78]
   14000145c:	mov    rdx,rax
   14000145f:	call   0x1400090c0
   140001464:	lea    rcx,[rsp+0x80]
   14000146c:	call   QWORD PTR [rip+0x130d6]        # 0x140014548
   140001472:	lea    rcx,[rsp+0x110]
   14000147a:	call   QWORD PTR [rip+0x130b0]        # 0x140014530
   140001480:	mov    rbx,QWORD PTR [rsp+0x100]
   140001488:	add    rsp,0xf0
   14000148f:	pop    rdi
   140001490:	ret    
   140001491:	int3   
   140001492:	int3   
   140001493:	int3   
   140001494:	int3   
   140001495:	int3   
   140001496:	int3   
   140001497:	int3   
   140001498:	int3   
   140001499:	int3   
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	mov    QWORD PTR [rsp+0x20],rbx
   1400014a5:	push   rdi
   1400014a6:	sub    rsp,0x20
   1400014aa:	cmp    QWORD PTR [rcx+0xa0],0x0
   1400014b2:	movzx  edi,dl
   1400014b5:	mov    rbx,rcx
   1400014b8:	jne    0x140001511
   1400014ba:	mov    ecx,0x38
   1400014bf:	call   0x140012892
   1400014c4:	test   rax,rax
   1400014c7:	je     0x1400014d6
   1400014c9:	mov    rdx,rbx
   1400014cc:	mov    rcx,rax
   1400014cf:	call   0x140010cc0
   1400014d4:	jmp    0x1400014d8
   1400014d6:	xor    eax,eax
   1400014d8:	mov    edx,0xb4
   1400014dd:	mov    rcx,rax
   1400014e0:	mov    QWORD PTR [rbx+0xa0],rax
   1400014e7:	call   QWORD PTR [rip+0x14163]        # 0x140015650
   1400014ed:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400014f4:	mov    edx,0xb4
   1400014f9:	call   QWORD PTR [rip+0x14159]        # 0x140015658
   1400014ff:	mov    rcx,QWORD PTR [rbx+0xa0]
   140001506:	mov    edx,0xb4
   14000150b:	call   QWORD PTR [rip+0x1414f]        # 0x140015660
   140001511:	test   dil,dil
   140001514:	je     0x1400015de
   14000151a:	mov    rcx,rbx
   14000151d:	mov    QWORD PTR [rsp+0x38],rsi
   140001522:	call   QWORD PTR [rip+0x14140]        # 0x140015668
   140001528:	lea    rdx,[rsp+0x40]
   14000152d:	mov    rcx,rax
   140001530:	call   QWORD PTR [rip+0x12fd2]        # 0x140014508
   140001536:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000153d:	mov    rdx,rax
   140001540:	call   0x140010fe0
   140001545:	lea    rcx,[rsp+0x40]
   14000154a:	call   QWORD PTR [rip+0x12ff8]        # 0x140014548
   140001550:	mov    edx,0x5
   140001555:	mov    rcx,rbx
   140001558:	call   QWORD PTR [rip+0x14112]        # 0x140015670
   14000155e:	lea    rdx,[rsp+0x30]
   140001563:	mov    rcx,rax
   140001566:	mov    rsi,rax
   140001569:	call   QWORD PTR [rip+0x14109]        # 0x140015678
   14000156f:	mov    edi,DWORD PTR [rsp+0x30]
   140001573:	lea    rdx,[rsp+0x40]
   140001578:	mov    rcx,rsi
   14000157b:	call   QWORD PTR [rip+0x140f7]        # 0x140015678
   140001581:	cmp    DWORD PTR [rax],0xb4
   140001587:	jle    0x14000159e
   140001589:	mov    rax,QWORD PTR [rsi+0x28]
   14000158d:	mov    ecx,DWORD PTR [rax+0x1c]
   140001590:	sub    ecx,DWORD PTR [rax+0x14]
   140001593:	mov    eax,DWORD PTR [rsp+0x30]
   140001597:	lea    edi,[rcx+rax*1-0xb3]
   14000159e:	mov    eax,DWORD PTR [rsp+0x34]
   1400015a2:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400015a9:	lea    rdx,[rsp+0x40]
   1400015ae:	add    eax,0xffffff4c
   1400015b3:	mov    DWORD PTR [rsp+0x40],edi
   1400015b7:	mov    DWORD PTR [rsp+0x44],eax
   1400015bb:	call   QWORD PTR [rip+0x140bf]        # 0x140015680
   1400015c1:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400015c8:	call   QWORD PTR [rip+0x140ba]        # 0x140015688
   1400015ce:	mov    rsi,QWORD PTR [rsp+0x38]
   1400015d3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400015d8:	add    rsp,0x20
   1400015dc:	pop    rdi
   1400015dd:	ret    
   1400015de:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400015e5:	mov    rbx,QWORD PTR [rsp+0x48]
   1400015ea:	add    rsp,0x20
   1400015ee:	pop    rdi
   1400015ef:	rex.W jmp QWORD PTR [rip+0x1409a]        # 0x140015690
   1400015f6:	int3   
   1400015f7:	int3   
   1400015f8:	int3   
   1400015f9:	int3   
   1400015fa:	int3   
   1400015fb:	int3   
   1400015fc:	int3   
   1400015fd:	int3   
   1400015fe:	int3   
   1400015ff:	int3   
   140001600:	rex push rbp
   140001602:	push   rsi
   140001603:	push   rdi
   140001604:	sub    rsp,0x20
   140001608:	mov    rax,QWORD PTR [rcx+0xa0]
   14000160f:	mov    rsi,r8
   140001612:	mov    rbp,rdx
   140001615:	mov    rdi,rcx
   140001618:	test   rax,rax
   14000161b:	je     0x1400016c3
   140001621:	mov    rax,QWORD PTR [rax+0x28]
   140001625:	mov    r9d,DWORD PTR [rax+0x8]
   140001629:	shr    r9d,0xf
   14000162d:	test   r9b,0x1
   140001631:	je     0x1400016c3
   140001637:	mov    edx,0x5
   14000163c:	call   QWORD PTR [rip+0x1402e]        # 0x140015670
   140001642:	cmp    rbp,rax
   140001645:	je     0x140001696
   140001647:	cmp    WORD PTR [rsi+0x10],0x3
   14000164c:	jne    0x140001696
   14000164e:	mov    rax,QWORD PTR [rdi+0xa0]
   140001655:	lea    rdx,[rsp+0x40]
   14000165a:	mov    rcx,rsi
   14000165d:	mov    QWORD PTR [rsp+0x48],rbx
   140001662:	mov    rbx,QWORD PTR [rax+0x28]
   140001666:	call   QWORD PTR [rip+0x12f84]        # 0x1400145f0
   14000166c:	lea    rdx,[rsp+0x58]
   140001671:	mov    r8,rax
   140001674:	mov    rcx,rdi
   140001677:	call   QWORD PTR [rip+0x13fbb]        # 0x140015638
   14000167d:	lea    rcx,[rbx+0x14]
   140001681:	xor    r8d,r8d
   140001684:	mov    rdx,rax
   140001687:	call   QWORD PTR [rip+0x12e73]        # 0x140014500
   14000168d:	mov    rbx,QWORD PTR [rsp+0x48]
   140001692:	test   al,al
   140001694:	jmp    0x14000169b
   140001696:	cmp    WORD PTR [rsi+0x10],0x6
   14000169b:	jne    0x1400016c3
   14000169d:	mov    rcx,QWORD PTR [rdi+0xa0]
   1400016a4:	call   QWORD PTR [rip+0x13fe6]        # 0x140015690
   1400016aa:	mov    edx,0x5
   1400016af:	mov    rcx,rdi
   1400016b2:	call   QWORD PTR [rip+0x13fb8]        # 0x140015670
   1400016b8:	xor    edx,edx
   1400016ba:	mov    rcx,rax
   1400016bd:	call   QWORD PTR [rip+0x13f7d]        # 0x140015640
   1400016c3:	mov    r8,rsi
   1400016c6:	mov    rdx,rbp
   1400016c9:	mov    rcx,rdi
   1400016cc:	add    rsp,0x20
   1400016d0:	pop    rdi
   1400016d1:	pop    rsi
   1400016d2:	pop    rbp
   1400016d3:	rex.W jmp QWORD PTR [rip+0x13f6e]        # 0x140015648
   1400016da:	int3   
   1400016db:	int3   
   1400016dc:	int3   
   1400016dd:	int3   
   1400016de:	int3   
   1400016df:	int3   
   1400016e0:	rex push rbp
   1400016e2:	push   rsi
   1400016e3:	sub    rsp,0x28
   1400016e7:	mov    rsi,rdx
   1400016ea:	mov    rbp,rcx
   1400016ed:	test   r8d,r8d
   1400016f0:	jns    0x14000171e
   1400016f2:	mov    rax,QWORD PTR [rcx]
   1400016f5:	lea    rcx,[rsp+0x40]
   1400016fa:	mov    DWORD PTR [rsp+0x50],0x0
   140001702:	mov    r9d,DWORD PTR [rax+0xc]
   140001706:	sub    r9d,DWORD PTR [rax+0x8]
   14000170a:	lea    rax,[rsp+0x50]
   14000170f:	add    r9d,r8d
   140001712:	cmovns rax,rcx
   140001716:	mov    DWORD PTR [rsp+0x40],r9d
   14000171b:	mov    r8d,DWORD PTR [rax]
   14000171e:	mov    rdx,QWORD PTR [rbp+0x0]
   140001722:	mov    QWORD PTR [rsp+0x48],rbx
   140001727:	mov    QWORD PTR [rsp+0x20],rdi
   14000172c:	movsxd rcx,DWORD PTR [rdx+0xc]
   140001730:	movsxd r9,DWORD PTR [rdx+0x8]
   140001734:	mov    eax,ecx
   140001736:	sub    eax,r9d
   140001739:	cmp    r8d,eax
   14000173c:	jge    0x140001779
   14000173e:	lea    rdi,[rdx+rcx*8+0x10]
   140001743:	lea    eax,[r8-0x1]
   140001747:	movsxd rcx,eax
   14000174a:	add    rcx,r9
   14000174d:	lea    rbx,[rdx+rcx*8+0x18]
   140001752:	cmp    rbx,rdi
   140001755:	je     0x140001779
   140001757:	nop    WORD PTR [rax+rax*1+0x0]
   140001760:	mov    rdx,rsi
   140001763:	mov    rcx,rbx
   140001766:	call   QWORD PTR [rip+0x12d74]        # 0x1400144e0
   14000176c:	test   al,al
   14000176e:	jne    0x14000178d
   140001770:	add    rbx,0x8
   140001774:	cmp    rbx,rdi
   140001777:	jne    0x140001760
   140001779:	or     eax,0xffffffff
   14000177c:	mov    rdi,QWORD PTR [rsp+0x20]
   140001781:	mov    rbx,QWORD PTR [rsp+0x48]
   140001786:	add    rsp,0x28
   14000178a:	pop    rsi
   14000178b:	pop    rbp
   14000178c:	ret    
   14000178d:	mov    rdx,QWORD PTR [rbp+0x0]
   140001791:	mov    rdi,QWORD PTR [rsp+0x20]
   140001796:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000179a:	lea    rcx,[rcx*8+0x10]
   1400017a2:	sub    rbx,rcx
   1400017a5:	sub    rbx,rdx
   1400017a8:	sar    rbx,0x3
   1400017ac:	mov    eax,ebx
   1400017ae:	mov    rbx,QWORD PTR [rsp+0x48]
   1400017b3:	add    rsp,0x28
   1400017b7:	pop    rsi
   1400017b8:	pop    rbp
   1400017b9:	ret    
   1400017ba:	int3   
   1400017bb:	int3   
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	mov    QWORD PTR [rsp+0x10],rbp
   1400017c5:	mov    QWORD PTR [rsp+0x18],rsi
   1400017ca:	push   rdi
   1400017cb:	sub    rsp,0x20
   1400017cf:	mov    esi,r8d
   1400017d2:	mov    r8,QWORD PTR [rcx]
   1400017d5:	mov    rdi,rcx
   1400017d8:	mov    ecx,DWORD PTR [r8+0x20]
   1400017dc:	mov    rbp,rdx
   1400017df:	test   ecx,ecx
   1400017e1:	je     0x140001839
   1400017e3:	xor    edx,edx
   1400017e5:	mov    eax,esi
   1400017e7:	mov    QWORD PTR [rsp+0x30],rbx
   1400017ec:	div    ecx
   1400017ee:	mov    rax,QWORD PTR [r8+0x8]
   1400017f2:	lea    rbx,[rax+rdx*8]
   1400017f6:	mov    rax,QWORD PTR [rax+rdx*8]
   1400017fa:	cmp    rax,r8
   1400017fd:	je     0x140001821
   1400017ff:	nop
   140001800:	cmp    esi,DWORD PTR [rax+0x8]
   140001803:	jne    0x140001816
   140001805:	lea    rdx,[rax+0x10]
   140001809:	mov    rcx,rbp
   14000180c:	call   QWORD PTR [rip+0x12cce]        # 0x1400144e0
   140001812:	test   al,al
   140001814:	jne    0x140001821
   140001816:	mov    rbx,QWORD PTR [rbx]
   140001819:	mov    rax,QWORD PTR [rbx]
   14000181c:	cmp    rax,QWORD PTR [rdi]
   14000181f:	jne    0x140001800
   140001821:	mov    rax,rbx
   140001824:	mov    rbx,QWORD PTR [rsp+0x30]
   140001829:	mov    rbp,QWORD PTR [rsp+0x38]
   14000182e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001833:	add    rsp,0x20
   140001837:	pop    rdi
   140001838:	ret    
   140001839:	mov    rbp,QWORD PTR [rsp+0x38]
   14000183e:	mov    rsi,QWORD PTR [rsp+0x40]
   140001843:	mov    rax,rdi
   140001846:	add    rsp,0x20
   14000184a:	pop    rdi
   14000184b:	ret    
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	rex push rbx
   140001852:	sub    rsp,0x20
   140001856:	mov    rbx,rcx
   140001859:	nop    DWORD PTR [rax+0x0]
   140001860:	lea    rcx,[rbx+0x18]
   140001864:	call   QWORD PTR [rip+0x12cde]        # 0x140014548
   14000186a:	lea    rcx,[rbx+0x20]
   14000186e:	call   QWORD PTR [rip+0x12cd4]        # 0x140014548
   140001874:	mov    rcx,QWORD PTR [rbx+0x8]
   140001878:	test   rcx,rcx
   14000187b:	je     0x140001882
   14000187d:	call   0x140001850
   140001882:	mov    rbx,QWORD PTR [rbx+0x10]
   140001886:	test   rbx,rbx
   140001889:	jne    0x140001860
   14000188b:	add    rsp,0x20
   14000188f:	pop    rbx
   140001890:	ret    
   140001891:	int3   
   140001892:	int3   
   140001893:	int3   
   140001894:	int3   
   140001895:	int3   
   140001896:	int3   
   140001897:	int3   
   140001898:	int3   
   140001899:	int3   
   14000189a:	int3   
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018a5:	push   rdi
   1400018a6:	sub    rsp,0x20
   1400018aa:	mov    rdi,QWORD PTR [rcx+0x8]
   1400018ae:	mov    rbx,rcx
   1400018b1:	test   rdi,rdi
   1400018b4:	je     0x1400018d9
   1400018b6:	lea    rcx,[rdi+0x18]
   1400018ba:	call   QWORD PTR [rip+0x12c88]        # 0x140014548
   1400018c0:	lea    rcx,[rdi+0x20]
   1400018c4:	call   QWORD PTR [rip+0x12c7e]        # 0x140014548
   1400018ca:	xor    r11d,r11d
   1400018cd:	mov    rcx,rdi
   1400018d0:	movzx  edx,r11b
   1400018d4:	call   0x1400018a0
   1400018d9:	mov    rbx,QWORD PTR [rbx+0x10]
   1400018dd:	test   rbx,rbx
   1400018e0:	je     0x140001905
   1400018e2:	lea    rcx,[rbx+0x18]
   1400018e6:	call   QWORD PTR [rip+0x12c5c]        # 0x140014548
   1400018ec:	lea    rcx,[rbx+0x20]
   1400018f0:	call   QWORD PTR [rip+0x12c52]        # 0x140014548
   1400018f6:	xor    r11d,r11d
   1400018f9:	mov    rcx,rbx
   1400018fc:	movzx  edx,r11b
   140001900:	call   0x1400018a0
   140001905:	mov    rbx,QWORD PTR [rsp+0x30]
   14000190a:	add    rsp,0x20
   14000190e:	pop    rdi
   14000190f:	ret    
   140001910:	add    rcx,0x10
   140001914:	rex.W jmp QWORD PTR [rip+0x12c2d]        # 0x140014548
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	mov    QWORD PTR [rsp+0x8],rbx
   140001925:	push   rdi
   140001926:	sub    rsp,0x20
   14000192a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000192e:	mov    rbx,rcx
   140001931:	test   rdi,rdi
   140001934:	je     0x14000196c
   140001936:	lea    rcx,[rdi+0x18]
   14000193a:	call   QWORD PTR [rip+0x12c08]        # 0x140014548
   140001940:	lea    rcx,[rdi+0x20]
   140001944:	call   QWORD PTR [rip+0x12bfe]        # 0x140014548
   14000194a:	xor    r11d,r11d
   14000194d:	mov    rcx,rdi
   140001950:	movzx  edx,r11b
   140001954:	call   0x1400018a0
   140001959:	mov    rdx,QWORD PTR [rbx+0x10]
   14000195d:	mov    r8d,0x8
   140001963:	mov    rcx,rbx
   140001966:	call   QWORD PTR [rip+0x12b54]        # 0x1400144c0
   14000196c:	mov    rcx,rbx
   14000196f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001974:	add    rsp,0x20
   140001978:	pop    rdi
   140001979:	rex.W jmp QWORD PTR [rip+0x12b48]        # 0x1400144c8
   140001980:	mov    QWORD PTR [rsp+0x18],rbx
   140001985:	push   rsi
   140001986:	sub    rsp,0x20
   14000198a:	mov    rax,QWORD PTR [rdx]
   14000198d:	mov    rsi,rcx
   140001990:	mov    rbx,rdx
   140001993:	mov    QWORD PTR [rcx],rax
   140001996:	mov    ecx,DWORD PTR [rax]
   140001998:	test   ecx,ecx
   14000199a:	je     0x1400019b3
   14000199c:	cmp    ecx,0xffffffff
   14000199f:	je     0x140001a18
   1400019a1:	lock add DWORD PTR [rax],0x1
   1400019a5:	mov    rax,rsi
   1400019a8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400019ad:	add    rsp,0x20
   1400019b1:	pop    rsi
   1400019b2:	ret    
   1400019b3:	mov    edx,DWORD PTR [rax+0x4]
   1400019b6:	mov    rcx,rsi
   1400019b9:	mov    QWORD PTR [rsp+0x30],rbp
   1400019be:	mov    QWORD PTR [rsp+0x38],rdi
   1400019c3:	call   QWORD PTR [rip+0x12aef]        # 0x1400144b8
   1400019c9:	mov    r11,QWORD PTR [rsi]
   1400019cc:	mov    rcx,QWORD PTR [rbx]
   1400019cf:	movsxd rax,DWORD PTR [r11+0xc]
   1400019d3:	lea    rbp,[r11+rax*8+0x10]
   1400019d8:	movsxd rax,DWORD PTR [rcx+0x8]
   1400019dc:	lea    rdi,[rcx+rax*8+0x10]
   1400019e1:	movsxd rax,DWORD PTR [r11+0x8]
   1400019e5:	lea    rbx,[r11+rax*8+0x10]
   1400019ea:	cmp    rbx,rbp
   1400019ed:	je     0x140001a0e
   1400019ef:	nop
   1400019f0:	test   rbx,rbx
   1400019f3:	je     0x140001a01
   1400019f5:	mov    rdx,rdi
   1400019f8:	mov    rcx,rbx
   1400019fb:	call   QWORD PTR [rip+0x12b67]        # 0x140014568
   140001a01:	add    rbx,0x8
   140001a05:	add    rdi,0x8
   140001a09:	cmp    rbx,rbp
   140001a0c:	jne    0x1400019f0
   140001a0e:	mov    rbp,QWORD PTR [rsp+0x30]
   140001a13:	mov    rdi,QWORD PTR [rsp+0x38]
   140001a18:	mov    rax,rsi
   140001a1b:	mov    rbx,QWORD PTR [rsp+0x40]
   140001a20:	add    rsp,0x20
   140001a24:	pop    rsi
   140001a25:	ret    
   140001a26:	int3   
   140001a27:	int3   
   140001a28:	int3   
   140001a29:	int3   
   140001a2a:	int3   
   140001a2b:	int3   
   140001a2c:	int3   
   140001a2d:	int3   
   140001a2e:	int3   
   140001a2f:	int3   
   140001a30:	sub    rsp,0x28
   140001a34:	mov    rdx,QWORD PTR [rcx]
   140001a37:	mov    eax,DWORD PTR [rdx]
   140001a39:	test   eax,eax
   140001a3b:	je     0x140001a4d
   140001a3d:	cmp    eax,0xffffffff
   140001a40:	je     0x140001aaa
   140001a42:	lock add DWORD PTR [rdx],0xffffffff
   140001a46:	setne  al
   140001a49:	test   al,al
   140001a4b:	jne    0x140001aaa
   140001a4d:	mov    QWORD PTR [rsp+0x30],rbx
   140001a52:	mov    QWORD PTR [rsp+0x38],rsi
   140001a57:	mov    rsi,QWORD PTR [rcx]
   140001a5a:	movsxd rax,DWORD PTR [rsi+0xc]
   140001a5e:	mov    QWORD PTR [rsp+0x20],rdi
   140001a63:	lea    rbx,[rsi+rax*8+0x10]
   140001a68:	movsxd rax,DWORD PTR [rsi+0x8]
   140001a6c:	lea    rdi,[rsi+rax*8+0x10]
   140001a71:	cmp    rdi,rbx
   140001a74:	je     0x140001a92
   140001a76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001a80:	sub    rbx,0x8
   140001a84:	mov    rcx,rbx
   140001a87:	call   QWORD PTR [rip+0x12abb]        # 0x140014548
   140001a8d:	cmp    rbx,rdi
   140001a90:	jne    0x140001a80
   140001a92:	mov    rcx,rsi
   140001a95:	call   QWORD PTR [rip+0x12a3d]        # 0x1400144d8
   140001a9b:	mov    rdi,QWORD PTR [rsp+0x20]
   140001aa0:	mov    rsi,QWORD PTR [rsp+0x38]
   140001aa5:	mov    rbx,QWORD PTR [rsp+0x30]
   140001aaa:	add    rsp,0x28
   140001aae:	ret    
   140001aaf:	int3   
   140001ab0:	rex push rsi
   140001ab2:	sub    rsp,0x20
   140001ab6:	mov    rax,QWORD PTR [rdx]
   140001ab9:	mov    rsi,rcx
   140001abc:	cmp    QWORD PTR [rcx],rax
   140001abf:	je     0x140001b72
   140001ac5:	lea    rcx,[rsp+0x30]
   140001aca:	mov    QWORD PTR [rsp+0x48],rdi
   140001acf:	call   0x140001980
   140001ad4:	lea    r11,[rsp+0x30]
   140001ad9:	cmp    r11,rsi
   140001adc:	je     0x140001af0
   140001ade:	mov    rax,QWORD PTR [rsp+0x30]
   140001ae3:	mov    rdi,QWORD PTR [rsi]
   140001ae6:	mov    QWORD PTR [rsp+0x30],rdi
   140001aeb:	mov    QWORD PTR [rsi],rax
   140001aee:	jmp    0x140001af5
   140001af0:	mov    rdi,QWORD PTR [rsp+0x30]
   140001af5:	mov    eax,DWORD PTR [rdi]
   140001af7:	test   eax,eax
   140001af9:	je     0x140001b10
   140001afb:	cmp    eax,0xffffffff
   140001afe:	je     0x140001b64
   140001b00:	lock add DWORD PTR [rdi],0xffffffff
   140001b04:	setne  al
   140001b07:	test   al,al
   140001b09:	jne    0x140001b64
   140001b0b:	mov    rdi,QWORD PTR [rsp+0x30]
   140001b10:	movsxd rax,DWORD PTR [rdi+0xc]
   140001b14:	mov    QWORD PTR [rsp+0x38],rbx
   140001b19:	mov    QWORD PTR [rsp+0x40],rbp
   140001b1e:	lea    rbx,[rdi+rax*8+0x10]
   140001b23:	movsxd rax,DWORD PTR [rdi+0x8]
   140001b27:	lea    rbp,[rdi+rax*8+0x10]
   140001b2c:	cmp    rbp,rbx
   140001b2f:	je     0x140001b43
   140001b31:	sub    rbx,0x8
   140001b35:	mov    rcx,rbx
   140001b38:	call   QWORD PTR [rip+0x12a0a]        # 0x140014548
   140001b3e:	cmp    rbx,rbp
   140001b41:	jne    0x140001b31
   140001b43:	mov    rcx,rdi
   140001b46:	call   QWORD PTR [rip+0x1298c]        # 0x1400144d8
   140001b4c:	mov    rbp,QWORD PTR [rsp+0x40]
   140001b51:	mov    rbx,QWORD PTR [rsp+0x38]
   140001b56:	mov    rdi,QWORD PTR [rsp+0x48]
   140001b5b:	mov    rax,rsi
   140001b5e:	add    rsp,0x20
   140001b62:	pop    rsi
   140001b63:	ret    
   140001b64:	mov    rax,rsi
   140001b67:	mov    rdi,QWORD PTR [rsp+0x48]
   140001b6c:	add    rsp,0x20
   140001b70:	pop    rsi
   140001b71:	ret    
   140001b72:	mov    rax,rcx
   140001b75:	add    rsp,0x20
   140001b79:	pop    rsi
   140001b7a:	ret    
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	rex push rbx
   140001b82:	sub    rsp,0x20
   140001b86:	mov    rbx,QWORD PTR [rip+0x1296b]        # 0x1400144f8
   140001b8d:	lea    rdx,[rsp+0x38]
   140001b92:	mov    QWORD PTR [rsp+0x38],rbx
   140001b97:	call   0x140001ab0
   140001b9c:	mov    r11d,DWORD PTR [rbx]
   140001b9f:	test   r11d,r11d
   140001ba2:	je     0x140001bba
   140001ba4:	cmp    r11d,0xffffffff
   140001ba8:	je     0x140001c05
   140001baa:	lock add DWORD PTR [rbx],0xffffffff
   140001bae:	setne  al
   140001bb1:	test   al,al
   140001bb3:	jne    0x140001c05
   140001bb5:	mov    rbx,QWORD PTR [rsp+0x38]
   140001bba:	movsxd rax,DWORD PTR [rbx+0xc]
   140001bbe:	mov    QWORD PTR [rsp+0x30],rsi
   140001bc3:	mov    QWORD PTR [rsp+0x40],rdi
   140001bc8:	lea    rdi,[rbx+rax*8+0x10]
   140001bcd:	movsxd rax,DWORD PTR [rbx+0x8]
   140001bd1:	lea    rsi,[rbx+rax*8+0x10]
   140001bd6:	cmp    rsi,rdi
   140001bd9:	je     0x140001bf2
   140001bdb:	nop    DWORD PTR [rax+rax*1+0x0]
   140001be0:	sub    rdi,0x8
   140001be4:	mov    rcx,rdi
   140001be7:	call   QWORD PTR [rip+0x1295b]        # 0x140014548
   140001bed:	cmp    rdi,rsi
   140001bf0:	jne    0x140001be0
   140001bf2:	mov    rcx,rbx
   140001bf5:	call   QWORD PTR [rip+0x128dd]        # 0x1400144d8
   140001bfb:	mov    rdi,QWORD PTR [rsp+0x40]
   140001c00:	mov    rsi,QWORD PTR [rsp+0x30]
   140001c05:	add    rsp,0x20
   140001c09:	pop    rbx
   140001c0a:	ret    
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	mov    QWORD PTR [rsp+0x8],rbx
   140001c15:	mov    QWORD PTR [rsp+0x18],rbp
   140001c1a:	mov    DWORD PTR [rsp+0x10],edx
   140001c1e:	push   rsi
   140001c1f:	push   rdi
   140001c20:	push   r12
   140001c22:	push   r13
   140001c24:	push   r14
   140001c26:	sub    rsp,0x20
   140001c2a:	mov    rdx,QWORD PTR [rcx]
   140001c2d:	movsxd r13,r8d
   140001c30:	mov    r12,rcx
   140001c33:	movsxd rax,DWORD PTR [rdx+0x8]
   140001c37:	mov    r8d,r13d
   140001c3a:	lea    r14,[rdx+rax*8+0x10]
   140001c3f:	lea    rdx,[rsp+0x58]
   140001c44:	call   QWORD PTR [rip+0x1285e]        # 0x1400144a8
   140001c4a:	mov    r10,QWORD PTR [r12]
   140001c4e:	movsxd rdx,DWORD PTR [rsp+0x58]
   140001c53:	movsxd r9,DWORD PTR [r10+0x8]
   140001c57:	mov    rsi,rax
   140001c5a:	mov    rdi,r14
   140001c5d:	add    rdx,r9
   140001c60:	lea    rbx,[r10+r9*8+0x10]
   140001c65:	lea    rbp,[r10+rdx*8+0x10]
   140001c6a:	cmp    rbx,rbp
   140001c6d:	je     0x140001c8e
   140001c6f:	nop
   140001c70:	test   rbx,rbx
   140001c73:	je     0x140001c81
   140001c75:	mov    rdx,rdi
   140001c78:	mov    rcx,rbx
   140001c7b:	call   QWORD PTR [rip+0x128e7]        # 0x140014568
   140001c81:	add    rbx,0x8
   140001c85:	add    rdi,0x8
   140001c89:	cmp    rbx,rbp
   140001c8c:	jne    0x140001c70
   140001c8e:	mov    r8,QWORD PTR [r12]
   140001c92:	movsxd rdx,DWORD PTR [rsp+0x58]
   140001c97:	movsxd rcx,DWORD PTR [r8+0x8]
   140001c9b:	movsxd rax,DWORD PTR [r8+0xc]
   140001c9f:	lea    rdi,[r14+rdx*8]
   140001ca3:	add    rcx,rdx
   140001ca6:	lea    rbp,[r8+rax*8+0x10]
   140001cab:	add    rcx,r13
   140001cae:	lea    rbx,[r8+rcx*8+0x10]
   140001cb3:	cmp    rbx,rbp
   140001cb6:	je     0x140001cd6
   140001cb8:	test   rbx,rbx
   140001cbb:	je     0x140001cc9
   140001cbd:	mov    rdx,rdi
   140001cc0:	mov    rcx,rbx
   140001cc3:	call   QWORD PTR [rip+0x1289f]        # 0x140014568
   140001cc9:	add    rbx,0x8
   140001ccd:	add    rdi,0x8
   140001cd1:	cmp    rbx,rbp
   140001cd4:	jne    0x140001cb8
   140001cd6:	mov    eax,DWORD PTR [rsi]
   140001cd8:	test   eax,eax
   140001cda:	je     0x140001cec
   140001cdc:	cmp    eax,0xffffffff
   140001cdf:	je     0x140001d1e
   140001ce1:	lock add DWORD PTR [rsi],0xffffffff
   140001ce5:	setne  al
   140001ce8:	test   al,al
   140001cea:	jne    0x140001d1e
   140001cec:	movsxd rax,DWORD PTR [rsi+0xc]
   140001cf0:	lea    rbx,[rsi+rax*8+0x10]
   140001cf5:	movsxd rax,DWORD PTR [rsi+0x8]
   140001cf9:	lea    rdi,[rsi+rax*8+0x10]
   140001cfe:	cmp    rdi,rbx
   140001d01:	je     0x140001d15
   140001d03:	sub    rbx,0x8
   140001d07:	mov    rcx,rbx
   140001d0a:	call   QWORD PTR [rip+0x12838]        # 0x140014548
   140001d10:	cmp    rbx,rdi
   140001d13:	jne    0x140001d03
   140001d15:	mov    rcx,rsi
   140001d18:	call   QWORD PTR [rip+0x127ba]        # 0x1400144d8
   140001d1e:	mov    rdx,QWORD PTR [r12]
   140001d22:	movsxd rax,DWORD PTR [rsp+0x58]
   140001d27:	mov    rbx,QWORD PTR [rsp+0x50]
   140001d2c:	movsxd rcx,DWORD PTR [rdx+0x8]
   140001d30:	mov    rbp,QWORD PTR [rsp+0x60]
   140001d35:	add    rcx,rax
   140001d38:	lea    rax,[rdx+rcx*8+0x10]
   140001d3d:	add    rsp,0x20
   140001d41:	pop    r14
   140001d43:	pop    r13
   140001d45:	pop    r12
   140001d47:	pop    rdi
   140001d48:	pop    rsi
   140001d49:	ret    
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	int3   
   140001d4d:	int3   
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	mov    QWORD PTR [rsp+0x10],rbx
   140001d55:	mov    QWORD PTR [rsp+0x18],rbp
   140001d5a:	push   rsi
   140001d5b:	sub    rsp,0x20
   140001d5f:	movsxd rax,DWORD PTR [rdx+0xc]
   140001d63:	mov    rbp,rdx
   140001d66:	lea    rbx,[rdx+rax*8+0x10]
   140001d6b:	movsxd rax,DWORD PTR [rdx+0x8]
   140001d6f:	lea    rsi,[rdx+rax*8+0x10]
   140001d74:	cmp    rsi,rbx
   140001d77:	je     0x140001db2
   140001d79:	mov    QWORD PTR [rsp+0x30],rdi
   140001d7e:	xchg   ax,ax
   140001d80:	mov    rdi,QWORD PTR [rbx-0x8]
   140001d84:	sub    rbx,0x8
   140001d88:	test   rdi,rdi
   140001d8b:	je     0x140001da8
   140001d8d:	lea    rcx,[rdi+0x8]
   140001d91:	call   QWORD PTR [rip+0x127b1]        # 0x140014548
   140001d97:	mov    rcx,rdi
   140001d9a:	call   QWORD PTR [rip+0x127a8]        # 0x140014548
   140001da0:	mov    rcx,rdi
   140001da3:	call   0x140012898
   140001da8:	cmp    rbx,rsi
   140001dab:	jne    0x140001d80
   140001dad:	mov    rdi,QWORD PTR [rsp+0x30]
   140001db2:	mov    rcx,rbp
   140001db5:	mov    rbx,QWORD PTR [rsp+0x38]
   140001dba:	mov    rbp,QWORD PTR [rsp+0x40]
   140001dbf:	add    rsp,0x20
   140001dc3:	pop    rsi
   140001dc4:	rex.W jmp QWORD PTR [rip+0x1270d]        # 0x1400144d8
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140001dd5:	mov    QWORD PTR [rsp+0x10],rbp
   140001dda:	mov    QWORD PTR [rsp+0x18],rsi
   140001ddf:	push   rdi
   140001de0:	sub    rsp,0x20
   140001de4:	mov    r8,QWORD PTR [rcx]
   140001de7:	mov    rbx,rcx
   140001dea:	movsxd rax,DWORD PTR [r8+0x8]
   140001dee:	lea    rdi,[r8+rax*8+0x10]
   140001df3:	call   QWORD PTR [rip+0x126bf]        # 0x1400144b8
   140001df9:	mov    rdx,QWORD PTR [rbx]
   140001dfc:	movsxd rcx,DWORD PTR [rdx+0xc]
   140001e00:	mov    rsi,rax
   140001e03:	lea    rbp,[rdx+rcx*8+0x10]
   140001e08:	movsxd rcx,DWORD PTR [rdx+0x8]
   140001e0c:	lea    rbx,[rdx+rcx*8+0x10]
   140001e11:	cmp    rbx,rbp
   140001e14:	je     0x140001e34
   140001e16:	test   rbx,rbx
   140001e19:	je     0x140001e27
   140001e1b:	mov    rdx,rdi
   140001e1e:	mov    rcx,rbx
   140001e21:	call   QWORD PTR [rip+0x12741]        # 0x140014568
   140001e27:	add    rbx,0x8
   140001e2b:	add    rdi,0x8
   140001e2f:	cmp    rbx,rbp
   140001e32:	jne    0x140001e16
   140001e34:	mov    eax,DWORD PTR [rsi]
   140001e36:	test   eax,eax
   140001e38:	je     0x140001e4a
   140001e3a:	cmp    eax,0xffffffff
   140001e3d:	je     0x140001e7c
   140001e3f:	lock add DWORD PTR [rsi],0xffffffff
   140001e43:	setne  al
   140001e46:	test   al,al
   140001e48:	jne    0x140001e7c
   140001e4a:	movsxd rax,DWORD PTR [rsi+0xc]
   140001e4e:	lea    rbx,[rsi+rax*8+0x10]
   140001e53:	movsxd rax,DWORD PTR [rsi+0x8]
   140001e57:	lea    rdi,[rsi+rax*8+0x10]
   140001e5c:	cmp    rdi,rbx
   140001e5f:	je     0x140001e73
   140001e61:	sub    rbx,0x8
   140001e65:	mov    rcx,rbx
   140001e68:	call   QWORD PTR [rip+0x126da]        # 0x140014548
   140001e6e:	cmp    rbx,rdi
   140001e71:	jne    0x140001e61
   140001e73:	mov    rcx,rsi
   140001e76:	call   QWORD PTR [rip+0x1265c]        # 0x1400144d8
   140001e7c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e81:	mov    rbp,QWORD PTR [rsp+0x38]
   140001e86:	mov    rsi,QWORD PTR [rsp+0x40]
   140001e8b:	add    rsp,0x20
   140001e8f:	pop    rdi
   140001e90:	ret    
   140001e91:	int3   
   140001e92:	int3   
   140001e93:	int3   
   140001e94:	int3   
   140001e95:	int3   
   140001e96:	int3   
   140001e97:	int3   
   140001e98:	int3   
   140001e99:	int3   
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ea5:	push   rdi
   140001ea6:	sub    rsp,0x20
   140001eaa:	mov    rbx,rcx
   140001ead:	mov    rcx,QWORD PTR [rcx+0x20]
   140001eb1:	mov    eax,DWORD PTR [rcx+0x10]
   140001eb4:	test   eax,eax
   140001eb6:	je     0x140001ec9
   140001eb8:	cmp    eax,0xffffffff
   140001ebb:	je     0x140001eda
   140001ebd:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140001ec2:	setne  al
   140001ec5:	test   al,al
   140001ec7:	jne    0x140001eda
   140001ec9:	mov    rcx,QWORD PTR [rbx+0x20]
   140001ecd:	lea    rdx,[rip+0xfffffffffffffa3c]        # 0x140001910
   140001ed4:	call   QWORD PTR [rip+0x125d6]        # 0x1400144b0
   140001eda:	mov    rdx,QWORD PTR [rbx+0x18]
   140001ede:	lea    rcx,[rbx+0x18]
   140001ee2:	mov    eax,DWORD PTR [rdx]
   140001ee4:	test   eax,eax
   140001ee6:	je     0x140001ef8
   140001ee8:	cmp    eax,0xffffffff
   140001eeb:	je     0x140001f00
   140001eed:	lock add DWORD PTR [rdx],0xffffffff
   140001ef1:	setne  al
   140001ef4:	test   al,al
   140001ef6:	jne    0x140001f00
   140001ef8:	mov    rdx,QWORD PTR [rcx]
   140001efb:	call   0x140001d50
   140001f00:	mov    rdx,QWORD PTR [rbx+0x10]
   140001f04:	lea    rcx,[rbx+0x10]
   140001f08:	mov    eax,DWORD PTR [rdx]
   140001f0a:	test   eax,eax
   140001f0c:	je     0x140001f1e
   140001f0e:	cmp    eax,0xffffffff
   140001f11:	je     0x140001f26
   140001f13:	lock add DWORD PTR [rdx],0xffffffff
   140001f17:	setne  al
   140001f1a:	test   al,al
   140001f1c:	jne    0x140001f26
   140001f1e:	mov    rdx,QWORD PTR [rcx]
   140001f21:	call   0x140001d50
   140001f26:	mov    rax,QWORD PTR [rbx+0x8]
   140001f2a:	mov    ecx,DWORD PTR [rax]
   140001f2c:	test   ecx,ecx
   140001f2e:	je     0x140001f40
   140001f30:	cmp    ecx,0xffffffff
   140001f33:	je     0x140001f49
   140001f35:	lock add DWORD PTR [rax],0xffffffff
   140001f39:	setne  al
   140001f3c:	test   al,al
   140001f3e:	jne    0x140001f49
   140001f40:	mov    rcx,QWORD PTR [rbx+0x8]
   140001f44:	call   0x140001920
   140001f49:	mov    rcx,rbx
   140001f4c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001f51:	add    rsp,0x20
   140001f55:	pop    rdi
   140001f56:	rex.W jmp QWORD PTR [rip+0x1252b]        # 0x140014488
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	rex push rsi
   140001f62:	push   r12
   140001f64:	sub    rsp,0x48
   140001f68:	mov    rax,QWORD PTR [rip+0x12589]        # 0x1400144f8
   140001f6f:	mov    r12,rdx
   140001f72:	mov    QWORD PTR [rsp+0x70],rbx
   140001f77:	mov    QWORD PTR [rdx],rax
   140001f7a:	lea    rdx,[rsp+0x60]
   140001f7f:	add    rcx,0x30
   140001f83:	mov    QWORD PTR [rsp+0x40],rdi
   140001f88:	mov    rbx,r8
   140001f8b:	call   0x14000d000
   140001f90:	mov    r11,QWORD PTR [rbx]
   140001f93:	mov    QWORD PTR [rsp+0x20],r11
   140001f98:	mov    eax,DWORD PTR [r11]
   140001f9b:	test   eax,eax
   140001f9d:	je     0x140001fb0
   140001f9f:	cmp    eax,0xffffffff
   140001fa2:	je     0x14000200a
   140001fa4:	lock add DWORD PTR [r11],0x1
   140001fa9:	mov    r11,QWORD PTR [rsp+0x20]
   140001fae:	jmp    0x14000200a
   140001fb0:	mov    edx,DWORD PTR [r11+0x4]
   140001fb4:	lea    rcx,[rsp+0x20]
   140001fb9:	call   QWORD PTR [rip+0x124f9]        # 0x1400144b8
   140001fbf:	mov    r11,QWORD PTR [rbx]
   140001fc2:	movsxd rax,DWORD PTR [r11+0x8]
   140001fc6:	lea    rdi,[r11+rax*8+0x10]
   140001fcb:	mov    r11,QWORD PTR [rsp+0x20]
   140001fd0:	movsxd rax,DWORD PTR [r11+0xc]
   140001fd4:	lea    rsi,[r11+rax*8+0x10]
   140001fd9:	movsxd rax,DWORD PTR [r11+0x8]
   140001fdd:	lea    rbx,[r11+rax*8+0x10]
   140001fe2:	cmp    rbx,rsi
   140001fe5:	je     0x14000200a
   140001fe7:	test   rbx,rbx
   140001fea:	je     0x140001ff8
   140001fec:	mov    rdx,rdi
   140001fef:	mov    rcx,rbx
   140001ff2:	call   QWORD PTR [rip+0x12570]        # 0x140014568
   140001ff8:	add    rbx,0x8
   140001ffc:	add    rdi,0x8
   140002000:	cmp    rbx,rsi
   140002003:	jne    0x140001fe7
   140002005:	mov    r11,QWORD PTR [rsp+0x20]
   14000200a:	mov    rcx,QWORD PTR [rsp+0x60]
   14000200f:	mov    DWORD PTR [rsp+0x28],0x0
   140002017:	movsxd rax,DWORD PTR [r11+0x8]
   14000201b:	lea    rsi,[r11+rax*8+0x10]
   140002020:	mov    QWORD PTR [rsp+0x30],rsi
   140002025:	movsxd rax,DWORD PTR [r11+0xc]
   140002029:	lea    rdx,[r11+rax*8+0x10]
   14000202e:	mov    QWORD PTR [rsp+0x38],rdx
   140002033:	mov    eax,0x1
   140002038:	mov    DWORD PTR [rsp+0x28],eax
   14000203c:	cmp    rsi,rdx
   14000203f:	je     0x14000216c
   140002045:	test   eax,eax
   140002047:	je     0x140002154
   14000204d:	xor    edi,edi
   14000204f:	cmp    DWORD PTR [rcx+0x20],edi
   140002052:	je     0x140002067
   140002054:	mov    edx,DWORD PTR [rcx+0x24]
   140002057:	mov    rcx,rsi
   14000205a:	call   QWORD PTR [rip+0x12470]        # 0x1400144d0
   140002060:	mov    rcx,QWORD PTR [rsp+0x60]
   140002065:	mov    edi,eax
   140002067:	mov    r8d,DWORD PTR [rcx+0x20]
   14000206b:	test   r8d,r8d
   14000206e:	je     0x1400020c6
   140002070:	xor    edx,edx
   140002072:	mov    eax,edi
   140002074:	div    r8d
   140002077:	mov    r8d,edx
   14000207a:	mov    rdx,QWORD PTR [rcx+0x8]
   14000207e:	lea    rbx,[rdx+r8*8]
   140002082:	mov    rdx,QWORD PTR [rdx+r8*8]
   140002086:	cmp    rdx,rcx
   140002089:	je     0x1400020c6
   14000208b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002090:	cmp    edi,DWORD PTR [rdx+0x8]
   140002093:	jne    0x1400020ab
   140002095:	add    rdx,0x10
   140002099:	mov    rcx,rsi
   14000209c:	call   QWORD PTR [rip+0x1243e]        # 0x1400144e0
   1400020a2:	test   al,al
   1400020a4:	jne    0x1400020b8
   1400020a6:	mov    rcx,QWORD PTR [rsp+0x60]
   1400020ab:	mov    rbx,QWORD PTR [rbx]
   1400020ae:	mov    rdx,QWORD PTR [rbx]
   1400020b1:	cmp    rdx,rcx
   1400020b4:	jne    0x140002090
   1400020b6:	jmp    0x1400020c6
   1400020b8:	mov    rcx,QWORD PTR [rsp+0x60]
   1400020bd:	cmp    QWORD PTR [rbx],rcx
   1400020c0:	jne    0x140002145
   1400020c6:	mov    rax,QWORD PTR [r12]
   1400020ca:	mov    ecx,DWORD PTR [rax]
   1400020cc:	cmp    ecx,0x1
   1400020cf:	je     0x140002121
   1400020d1:	test   ecx,ecx
   1400020d3:	je     0x140002121
   1400020d5:	mov    edx,0x7fffffff
   1400020da:	mov    r8d,0x1
   1400020e0:	mov    rcx,r12
   1400020e3:	call   0x140001c10
   1400020e8:	test   rax,rax
   1400020eb:	je     0x14000210d
   1400020ed:	mov    rdx,rsi
   1400020f0:	mov    rcx,rax
   1400020f3:	call   QWORD PTR [rip+0x1246f]        # 0x140014568
   1400020f9:	mov    eax,DWORD PTR [rsp+0x28]
   1400020fd:	mov    rcx,QWORD PTR [rsp+0x60]
   140002102:	dec    eax
   140002104:	mov    DWORD PTR [rsp+0x28],eax
   140002108:	jmp    0x140002045
   14000210d:	mov    eax,DWORD PTR [rsp+0x28]
   140002111:	mov    rcx,QWORD PTR [rsp+0x60]
   140002116:	dec    eax
   140002118:	mov    DWORD PTR [rsp+0x28],eax
   14000211c:	jmp    0x140002045
   140002121:	lea    rcx,[rsp+0x68]
   140002126:	mov    rdx,rsi
   140002129:	call   QWORD PTR [rip+0x12439]        # 0x140014568
   14000212f:	mov    rcx,r12
   140002132:	call   QWORD PTR [rip+0x12368]        # 0x1400144a0
   140002138:	mov    rcx,QWORD PTR [rsp+0x68]
   14000213d:	mov    QWORD PTR [rax],rcx
   140002140:	mov    rcx,QWORD PTR [rsp+0x60]
   140002145:	mov    eax,DWORD PTR [rsp+0x28]
   140002149:	dec    eax
   14000214b:	mov    DWORD PTR [rsp+0x28],eax
   14000214f:	jmp    0x140002045
   140002154:	mov    rsi,QWORD PTR [rsp+0x30]
   140002159:	mov    rdx,QWORD PTR [rsp+0x38]
   14000215e:	add    rsi,0x8
   140002162:	mov    QWORD PTR [rsp+0x30],rsi
   140002167:	jmp    0x140002033
   14000216c:	mov    rdi,QWORD PTR [rsp+0x20]
   140002171:	mov    eax,DWORD PTR [rdi]
   140002173:	test   eax,eax
   140002175:	je     0x140002190
   140002177:	cmp    eax,0xffffffff
   14000217a:	je     0x1400021d5
   14000217c:	lock add DWORD PTR [rdi],0xffffffff
   140002180:	setne  al
   140002183:	test   al,al
   140002185:	jne    0x140002214
   14000218b:	mov    rdi,QWORD PTR [rsp+0x20]
   140002190:	movsxd rax,DWORD PTR [rdi+0xc]
   140002194:	mov    QWORD PTR [rsp+0x78],rbp
   140002199:	lea    rbx,[rdi+rax*8+0x10]
   14000219e:	movsxd rax,DWORD PTR [rdi+0x8]
   1400021a2:	lea    rbp,[rdi+rax*8+0x10]
   1400021a7:	cmp    rbp,rbx
   1400021aa:	je     0x1400021c2
   1400021ac:	nop    DWORD PTR [rax+0x0]
   1400021b0:	sub    rbx,0x8
   1400021b4:	mov    rcx,rbx
   1400021b7:	call   QWORD PTR [rip+0x1238b]        # 0x140014548
   1400021bd:	cmp    rbx,rbp
   1400021c0:	jne    0x1400021b0
   1400021c2:	mov    rcx,rdi
   1400021c5:	call   QWORD PTR [rip+0x1230d]        # 0x1400144d8
   1400021cb:	mov    rcx,QWORD PTR [rsp+0x60]
   1400021d0:	mov    rbp,QWORD PTR [rsp+0x78]
   1400021d5:	mov    eax,DWORD PTR [rcx+0x10]
   1400021d8:	mov    rdi,QWORD PTR [rsp+0x40]
   1400021dd:	mov    rbx,QWORD PTR [rsp+0x70]
   1400021e2:	test   eax,eax
   1400021e4:	je     0x1400021fc
   1400021e6:	cmp    eax,0xffffffff
   1400021e9:	je     0x140002209
   1400021eb:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400021f0:	setne  al
   1400021f3:	test   al,al
   1400021f5:	jne    0x140002209
   1400021f7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400021fc:	lea    rdx,[rip+0xfffffffffffff70d]        # 0x140001910
   140002203:	call   QWORD PTR [rip+0x122a7]        # 0x1400144b0
   140002209:	mov    rax,r12
   14000220c:	add    rsp,0x48
   140002210:	pop    r12
   140002212:	pop    rsi
   140002213:	ret    
   140002214:	mov    rcx,QWORD PTR [rsp+0x60]
   140002219:	jmp    0x1400021d5
   14000221b:	int3   
   14000221c:	int3   
   14000221d:	int3   
   14000221e:	int3   
   14000221f:	int3   
   140002220:	mov    QWORD PTR [rsp+0x10],rbx
   140002225:	mov    QWORD PTR [rsp+0x20],rbp
   14000222a:	push   rdi
   14000222b:	sub    rsp,0x20
   14000222f:	xor    r8d,r8d
   140002232:	mov    rbx,rdx
   140002235:	mov    rbp,rcx
   140002238:	call   0x1400016e0
   14000223d:	movsxd rdi,eax
   140002240:	cmp    edi,0xffffffff
   140002243:	jne    0x140002257
   140002245:	xor    eax,eax
   140002247:	mov    rbx,QWORD PTR [rsp+0x38]
   14000224c:	mov    rbp,QWORD PTR [rsp+0x48]
   140002251:	add    rsp,0x20
   140002255:	pop    rdi
   140002256:	ret    
   140002257:	lea    rcx,[rsp+0x40]
   14000225c:	mov    rdx,rbx
   14000225f:	mov    QWORD PTR [rsp+0x30],rsi
   140002264:	call   QWORD PTR [rip+0x122fe]        # 0x140014568
   14000226a:	mov    r11,QWORD PTR [rbp+0x0]
   14000226e:	mov    eax,DWORD PTR [r11]
   140002271:	cmp    eax,0x1
   140002274:	je     0x140002286
   140002276:	test   eax,eax
   140002278:	je     0x140002286
   14000227a:	mov    edx,DWORD PTR [r11+0x4]
   14000227e:	mov    rcx,rbp
   140002281:	call   0x140001dd0
   140002286:	mov    rdx,QWORD PTR [rbp+0x0]
   14000228a:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000228e:	movsxd rax,DWORD PTR [rdx+0xc]
   140002292:	add    rcx,rdi
   140002295:	lea    rsi,[rdx+rax*8+0x10]
   14000229a:	lea    rbx,[rdx+rcx*8+0x10]
   14000229f:	mov    rcx,rbx
   1400022a2:	mov    rdi,rbx
   1400022a5:	call   QWORD PTR [rip+0x1229d]        # 0x140014548
   1400022ab:	add    rbx,0x8
   1400022af:	cmp    rbx,rsi
   1400022b2:	je     0x1400022f1
   1400022b4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400022c0:	lea    rdx,[rsp+0x40]
   1400022c5:	mov    rcx,rbx
   1400022c8:	call   QWORD PTR [rip+0x12212]        # 0x1400144e0
   1400022ce:	test   al,al
   1400022d0:	je     0x1400022dd
   1400022d2:	mov    rcx,rbx
   1400022d5:	call   QWORD PTR [rip+0x1226d]        # 0x140014548
   1400022db:	jmp    0x1400022e8
   1400022dd:	mov    rax,QWORD PTR [rbx]
   1400022e0:	add    rdi,0x8
   1400022e4:	mov    QWORD PTR [rdi-0x8],rax
   1400022e8:	add    rbx,0x8
   1400022ec:	cmp    rbx,rsi
   1400022ef:	jne    0x1400022c0
   1400022f1:	mov    rcx,QWORD PTR [rbp+0x0]
   1400022f5:	sub    rsi,rdi
   1400022f8:	sar    rsi,0x3
   1400022fc:	sub    DWORD PTR [rcx+0xc],esi
   1400022ff:	lea    rcx,[rsp+0x40]
   140002304:	call   QWORD PTR [rip+0x1223e]        # 0x140014548
   14000230a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000230f:	mov    rbp,QWORD PTR [rsp+0x48]
   140002314:	mov    eax,esi
   140002316:	mov    rsi,QWORD PTR [rsp+0x30]
   14000231b:	add    rsp,0x20
   14000231f:	pop    rdi
   140002320:	ret    
   140002321:	int3   
   140002322:	int3   
   140002323:	int3   
   140002324:	int3   
   140002325:	int3   
   140002326:	int3   
   140002327:	int3   
   140002328:	int3   
   140002329:	int3   
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	mov    QWORD PTR [rsp+0x18],rbx
   140002335:	mov    QWORD PTR [rsp+0x20],rsi
   14000233a:	push   rdi
   14000233b:	sub    rsp,0x60
   14000233f:	xor    r8d,r8d
   140002342:	xor    edx,edx
   140002344:	mov    rbx,rcx
   140002347:	call   QWORD PTR [rip+0x132b3]        # 0x140015600
   14000234d:	lea    rdx,[rip+0x13584]        # 0x1400158d8
   140002354:	lea    rax,[rip+0x1353d]        # 0x140015898
   14000235b:	lea    rcx,[rbx+0x30]
   14000235f:	mov    QWORD PTR [rbx],rdx
   140002362:	mov    QWORD PTR [rbx+0x10],rax
   140002366:	call   QWORD PTR [rip+0x12124]        # 0x140014490
   14000236c:	mov    rdx,QWORD PTR [rip+0x1217d]        # 0x1400144f0
   140002373:	or     rcx,0xffffffffffffffff
   140002377:	mov    QWORD PTR [rbx+0x38],rdx
   14000237b:	mov    rax,QWORD PTR [rip+0x12176]        # 0x1400144f8
   140002382:	lea    rdx,[rip+0x134cf]        # 0x140015858
   140002389:	mov    QWORD PTR [rbx+0x40],rax
   14000238d:	mov    rax,QWORD PTR [rip+0x12164]        # 0x1400144f8
   140002394:	mov    QWORD PTR [rsp+0x38],rdx
   140002399:	mov    QWORD PTR [rbx+0x48],rax
   14000239d:	mov    rax,QWORD PTR [rip+0x12144]        # 0x1400144e8
   1400023a4:	mov    rdi,rdx
   1400023a7:	mov    QWORD PTR [rbx+0x50],rax
   1400023ab:	mov    rax,QWORD PTR [rip+0x12146]        # 0x1400144f8
   1400023b2:	lea    rdx,[rsp+0x30]
   1400023b7:	mov    QWORD PTR [rbx+0x98],rax
   1400023be:	xor    eax,eax
   1400023c0:	repnz scas al,BYTE PTR es:[rdi]
   1400023c2:	not    rcx
   1400023c5:	dec    rcx
   1400023c8:	mov    DWORD PTR [rsp+0x30],ecx
   1400023cc:	lea    rcx,[rsp+0x70]
   1400023d1:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400023d6:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400023dc:	call   QWORD PTR [rip+0x1215e]        # 0x140014540
   1400023e2:	lea    rdx,[rsp+0x70]
   1400023e7:	lea    rcx,[rsp+0x78]
   1400023ec:	call   QWORD PTR [rip+0x121de]        # 0x1400145d0
   1400023f2:	mov    rcx,rbx
   1400023f5:	mov    rdx,rax
   1400023f8:	call   QWORD PTR [rip+0x1320a]        # 0x140015608
   1400023fe:	lea    rcx,[rsp+0x78]
   140002403:	call   QWORD PTR [rip+0x121cf]        # 0x1400145d8
   140002409:	lea    rcx,[rsp+0x70]
   14000240e:	call   QWORD PTR [rip+0x12134]        # 0x140014548
   140002414:	lea    r8,[rip+0x13425]        # 0x140015840
   14000241b:	lea    rdx,[rsp+0x70]
   140002420:	lea    rcx,[rip+0x27219]        # 0x140029640
   140002427:	xor    r9d,r9d
   14000242a:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140002432:	call   QWORD PTR [rip+0x12120]        # 0x140014558
   140002438:	lea    rdx,[rsp+0x70]
   14000243d:	mov    rcx,rbx
   140002440:	call   QWORD PTR [rip+0x131ca]        # 0x140015610
   140002446:	lea    rcx,[rsp+0x70]
   14000244b:	call   QWORD PTR [rip+0x120f7]        # 0x140014548
   140002451:	or     rcx,0xffffffffffffffff
   140002455:	lea    rdx,[rip+0x133ac]        # 0x140015808
   14000245c:	mov    QWORD PTR [rsp+0x38],rdx
   140002461:	mov    rdi,rdx
   140002464:	xor    eax,eax
   140002466:	repnz scas al,BYTE PTR es:[rdi]
   140002468:	lea    rdx,[rsp+0x30]
   14000246d:	not    rcx
   140002470:	dec    rcx
   140002473:	mov    DWORD PTR [rsp+0x30],ecx
   140002477:	lea    rcx,[rsp+0x70]
   14000247c:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140002481:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140002487:	call   QWORD PTR [rip+0x120b3]        # 0x140014540
   14000248d:	lea    rdx,[rsp+0x70]
   140002492:	lea    rcx,[rsp+0x40]
   140002497:	xor    r9d,r9d
   14000249a:	xor    r8d,r8d
   14000249d:	call   QWORD PTR [rip+0x1213d]        # 0x1400145e0
   1400024a3:	xor    edx,edx
   1400024a5:	mov    rcx,rbx
   1400024a8:	mov    r8,rax
   1400024ab:	call   QWORD PTR [rip+0x13167]        # 0x140015618
   1400024b1:	lea    rcx,[rsp+0x40]
   1400024b6:	call   QWORD PTR [rip+0x1212c]        # 0x1400145e8
   1400024bc:	lea    rcx,[rsp+0x70]
   1400024c1:	call   QWORD PTR [rip+0x12081]        # 0x140014548
   1400024c7:	mov    edx,0x821
   1400024cc:	mov    rcx,rbx
   1400024cf:	call   QWORD PTR [rip+0x1314b]        # 0x140015620
   1400024d5:	mov    ecx,0x70
   1400024da:	call   0x140012892
   1400024df:	test   rax,rax
   1400024e2:	je     0x1400024f5
   1400024e4:	lea    rdx,[rbx+0x30]
   1400024e8:	xor    r8d,r8d
   1400024eb:	mov    rcx,rax
   1400024ee:	call   0x140005040
   1400024f3:	jmp    0x1400024f7
   1400024f5:	xor    eax,eax
   1400024f7:	mov    r8,rax
   1400024fa:	xor    edx,edx
   1400024fc:	mov    rcx,rbx
   1400024ff:	mov    QWORD PTR [rbx+0x58],rax
   140002503:	call   QWORD PTR [rip+0x1311f]        # 0x140015628
   140002509:	mov    ecx,0x68
   14000250e:	call   0x140012892
   140002513:	test   rax,rax
   140002516:	je     0x140002524
   140002518:	xor    edx,edx
   14000251a:	mov    rcx,rax
   14000251d:	call   0x140005ab0
   140002522:	jmp    0x140002526
   140002524:	xor    eax,eax
   140002526:	mov    r8,rax
   140002529:	mov    edx,0x1
   14000252e:	mov    rcx,rbx
   140002531:	mov    QWORD PTR [rbx+0x60],rax
   140002535:	call   QWORD PTR [rip+0x130ed]        # 0x140015628
   14000253b:	mov    ecx,0xa0
   140002540:	call   0x140012892
   140002545:	test   rax,rax
   140002548:	je     0x140002556
   14000254a:	xor    edx,edx
   14000254c:	mov    rcx,rax
   14000254f:	call   0x140006f60
   140002554:	jmp    0x140002558
   140002556:	xor    eax,eax
   140002558:	mov    r8,rax
   14000255b:	mov    edx,0x2
   140002560:	mov    rcx,rbx
   140002563:	mov    QWORD PTR [rbx+0x68],rax
   140002567:	call   QWORD PTR [rip+0x130bb]        # 0x140015628
   14000256d:	mov    rcx,QWORD PTR [rbx+0x68]
   140002571:	mov    edx,0xf0
   140002576:	call   QWORD PTR [rip+0x130dc]        # 0x140015658
   14000257c:	mov    ecx,0x78
   140002581:	call   0x140012892
   140002586:	test   rax,rax
   140002589:	je     0x140002597
   14000258b:	xor    edx,edx
   14000258d:	mov    rcx,rax
   140002590:	call   0x140008d10
   140002595:	jmp    0x140002599
   140002597:	xor    eax,eax
   140002599:	mov    r8,rax
   14000259c:	mov    edx,0x3
   1400025a1:	mov    rcx,rbx
   1400025a4:	mov    QWORD PTR [rbx+0x70],rax
   1400025a8:	call   QWORD PTR [rip+0x1307a]        # 0x140015628
   1400025ae:	mov    ecx,0x88
   1400025b3:	call   0x140012892
   1400025b8:	test   rax,rax
   1400025bb:	je     0x1400025c9
   1400025bd:	xor    edx,edx
   1400025bf:	mov    rcx,rax
   1400025c2:	call   0x1400098f0
   1400025c7:	jmp    0x1400025cb
   1400025c9:	xor    eax,eax
   1400025cb:	mov    r8,rax
   1400025ce:	mov    edx,0x4
   1400025d3:	mov    rcx,rbx
   1400025d6:	mov    QWORD PTR [rbx+0x78],rax
   1400025da:	call   QWORD PTR [rip+0x13048]        # 0x140015628
   1400025e0:	mov    rcx,QWORD PTR [rbx+0x78]
   1400025e4:	mov    edx,0xf0
   1400025e9:	call   QWORD PTR [rip+0x13069]        # 0x140015658
   1400025ef:	mov    ecx,0x78
   1400025f4:	call   0x140012892
   1400025f9:	test   rax,rax
   1400025fc:	je     0x14000260a
   1400025fe:	xor    edx,edx
   140002600:	mov    rcx,rax
   140002603:	call   0x14000a760
   140002608:	jmp    0x14000260c
   14000260a:	xor    eax,eax
   14000260c:	mov    r8,rax
   14000260f:	mov    edx,0x5
   140002614:	mov    rcx,rbx
   140002617:	mov    QWORD PTR [rbx+0x80],rax
   14000261e:	call   QWORD PTR [rip+0x13004]        # 0x140015628
   140002624:	mov    rcx,QWORD PTR [rbx+0x80]
   14000262b:	mov    edx,0xf0
   140002630:	call   QWORD PTR [rip+0x13022]        # 0x140015658
   140002636:	mov    ecx,0x70
   14000263b:	call   0x140012892
   140002640:	test   rax,rax
   140002643:	je     0x140002651
   140002645:	xor    edx,edx
   140002647:	mov    rcx,rax
   14000264a:	call   0x14000b7c0
   14000264f:	jmp    0x140002653
   140002651:	xor    eax,eax
   140002653:	mov    r8,rax
   140002656:	mov    edx,0x6
   14000265b:	mov    rcx,rbx
   14000265e:	mov    QWORD PTR [rbx+0x88],rax
   140002665:	call   QWORD PTR [rip+0x12fbd]        # 0x140015628
   14000266b:	mov    rcx,QWORD PTR [rbx+0x88]
   140002672:	mov    edx,0xf0
   140002677:	call   QWORD PTR [rip+0x12fdb]        # 0x140015658
   14000267d:	mov    ecx,0x38
   140002682:	call   0x140012892
   140002687:	test   rax,rax
   14000268a:	je     0x140002698
   14000268c:	xor    edx,edx
   14000268e:	mov    rcx,rax
   140002691:	call   0x14000bb60
   140002696:	jmp    0x14000269a
   140002698:	xor    eax,eax
   14000269a:	mov    r8,rax
   14000269d:	mov    edx,0x7
   1400026a2:	mov    rcx,rbx
   1400026a5:	mov    QWORD PTR [rbx+0x90],rax
   1400026ac:	call   QWORD PTR [rip+0x12f76]        # 0x140015628
   1400026b2:	mov    rcx,QWORD PTR [rbx+0x90]
   1400026b9:	mov    edx,0xf0
   1400026be:	call   QWORD PTR [rip+0x12f94]        # 0x140015658
   1400026c4:	lea    rax,[rip+0x13125]        # 0x1400157f0
   1400026cb:	lea    r8,[rip+0x13106]        # 0x1400157d8
   1400026d2:	lea    rcx,[rsp+0x70]
   1400026d7:	mov    r9,rbx
   1400026da:	mov    rdx,rbx
   1400026dd:	mov    DWORD PTR [rsp+0x28],0x0
   1400026e5:	mov    QWORD PTR [rsp+0x20],rax
   1400026ea:	call   QWORD PTR [rip+0x11d78]        # 0x140014468
   1400026f0:	lea    rcx,[rsp+0x70]
   1400026f5:	call   QWORD PTR [rip+0x11d75]        # 0x140014470
   1400026fb:	mov    QWORD PTR [rbx+0xa0],0x0
   140002706:	mov    rcx,QWORD PTR [rip+0x11d6b]        # 0x140014478
   14000270d:	mov    rcx,QWORD PTR [rcx]
   140002710:	mov    rdx,rbx
   140002713:	call   QWORD PTR [rip+0x11d67]        # 0x140014480
   140002719:	mov    edx,0x5
   14000271e:	mov    rcx,rbx
   140002721:	call   QWORD PTR [rip+0x12f49]        # 0x140015670
   140002727:	mov    dl,0x1
   140002729:	mov    rcx,rax
   14000272c:	mov    rdi,rax
   14000272f:	call   QWORD PTR [rip+0x12efb]        # 0x140015630
   140002735:	lea    rax,[rip+0x1308c]        # 0x1400157c8
   14000273c:	lea    r8,[rip+0x13075]        # 0x1400157b8
   140002743:	lea    rcx,[rsp+0x70]
   140002748:	mov    r9,rbx
   14000274b:	mov    rdx,rdi
   14000274e:	mov    DWORD PTR [rsp+0x28],0x0
   140002756:	mov    QWORD PTR [rsp+0x20],rax
   14000275b:	call   QWORD PTR [rip+0x11d07]        # 0x140014468
   140002761:	lea    rcx,[rsp+0x70]
   140002766:	call   QWORD PTR [rip+0x11d04]        # 0x140014470
   14000276c:	lea    r11,[rsp+0x60]
   140002771:	mov    rax,rbx
   140002774:	mov    rbx,QWORD PTR [r11+0x20]
   140002778:	mov    rsi,QWORD PTR [r11+0x28]
   14000277c:	mov    rsp,r11
   14000277f:	pop    rdi
   140002780:	ret    
   140002781:	int3   
   140002782:	int3   
   140002783:	int3   
   140002784:	int3   
   140002785:	int3   
   140002786:	int3   
   140002787:	int3   
   140002788:	int3   
   140002789:	int3   
   14000278a:	int3   
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	sub    rcx,0x10
   140002794:	jmp    0x1400027a0
   140002799:	int3   
   14000279a:	int3   
   14000279b:	int3   
   14000279c:	int3   
   14000279d:	int3   
   14000279e:	int3   
   14000279f:	int3   
   1400027a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400027a5:	push   rdi
   1400027a6:	sub    rsp,0x20
   1400027aa:	mov    rdi,rcx
   1400027ad:	add    rcx,0x98
   1400027b4:	mov    ebx,edx
   1400027b6:	call   0x140001a30
   1400027bb:	lea    rcx,[rdi+0x30]
   1400027bf:	call   0x140001ea0
   1400027c4:	mov    rcx,rdi
   1400027c7:	call   QWORD PTR [rip+0x12ca3]        # 0x140015470
   1400027cd:	test   bl,0x1
   1400027d0:	je     0x1400027da
   1400027d2:	mov    rcx,rdi
   1400027d5:	call   0x140012898
   1400027da:	mov    rax,rdi
   1400027dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400027e2:	add    rsp,0x20
   1400027e6:	pop    rdi
   1400027e7:	ret    
   1400027e8:	int3   
   1400027e9:	int3   
   1400027ea:	int3   
   1400027eb:	int3   
   1400027ec:	int3   
   1400027ed:	int3   
   1400027ee:	int3   
   1400027ef:	int3   
   1400027f0:	mov    rax,rsp
   1400027f3:	mov    QWORD PTR [rax+0x8],rcx
   1400027f7:	push   rbx
   1400027f8:	push   r12
   1400027fa:	push   r15
   1400027fc:	sub    rsp,0x1d0
   140002803:	xor    ebx,ebx
   140002805:	mov    r15,rcx
   140002808:	mov    DWORD PTR [rsp+0x1f8],ebx
   14000280f:	cmp    edx,0x5
   140002812:	jne    0x140003578
   140002818:	mov    QWORD PTR [rax-0x20],rbp
   14000281c:	mov    QWORD PTR [rax-0x28],rsi
   140002820:	mov    QWORD PTR [rax-0x30],rdi
   140002824:	mov    QWORD PTR [rax-0x38],r13
   140002828:	lea    edx,[rbx+0x3]
   14000282b:	lea    rcx,[rax-0x130]
   140002832:	mov    QWORD PTR [rax-0x40],r14
   140002836:	call   QWORD PTR [rip+0x11d74]        # 0x1400145b0
   14000283c:	lea    rcx,[rsp+0xb8]
   140002844:	call   QWORD PTR [rip+0x11d6e]        # 0x1400145b8
   14000284a:	lea    rcx,[rsp+0xb8]
   140002852:	call   QWORD PTR [rip+0x11d68]        # 0x1400145c0
   140002858:	lea    r14,[r15+0x98]
   14000285f:	mov    rcx,r14
   140002862:	call   0x140001b80
   140002867:	lea    rdx,[rip+0x12f02]        # 0x140015770
   14000286e:	xor    eax,eax
   140002870:	mov    rdi,rdx
   140002873:	mov    QWORD PTR [rsp+0xd8],rdx
   14000287b:	or     r12,0xffffffffffffffff
   14000287f:	mov    rcx,r12
   140002882:	lea    rdx,[rsp+0x180]
   14000288a:	repnz scas al,BYTE PTR es:[rdi]
   14000288c:	not    rcx
   14000288f:	dec    rcx
   140002892:	mov    DWORD PTR [rsp+0xd0],ecx
   140002899:	lea    rcx,[rsp+0xb0]
   1400028a1:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   1400028a9:	movdqa XMMWORD PTR [rsp+0x180],xmm0
   1400028b2:	call   QWORD PTR [rip+0x11c88]        # 0x140014540
   1400028b8:	lea    r8,[rsp+0xb0]
   1400028c0:	lea    rdx,[rsp+0x190]
   1400028c8:	mov    rcx,r15
   1400028cb:	call   QWORD PTR [rip+0x12dc7]        # 0x140015698
   1400028d1:	lea    rdx,[rsp+0xf8]
   1400028d9:	mov    rcx,rax
   1400028dc:	call   QWORD PTR [rip+0x11c2e]        # 0x140014510
   1400028e2:	lea    rcx,[rsp+0x98]
   1400028ea:	mov    rdx,rax
   1400028ed:	call   QWORD PTR [rip+0x11c25]        # 0x140014518
   1400028f3:	lea    rcx,[rsp+0xf8]
   1400028fb:	call   QWORD PTR [rip+0x11c47]        # 0x140014548
   140002901:	lea    rcx,[rsp+0x190]
   140002909:	call   QWORD PTR [rip+0x11c41]        # 0x140014550
   14000290f:	lea    rcx,[rsp+0xb0]
   140002917:	call   QWORD PTR [rip+0x11c2b]        # 0x140014548
   14000291d:	lea    rdx,[rsp+0x140]
   140002925:	lea    rcx,[rsp+0x98]
   14000292d:	call   QWORD PTR [rip+0x11bed]        # 0x140014520
   140002933:	lea    rcx,[rsp+0xc8]
   14000293b:	mov    rdx,rax
   14000293e:	call   QWORD PTR [rip+0x11abc]        # 0x140014400
   140002944:	lea    rcx,[rsp+0x140]
   14000294c:	call   QWORD PTR [rip+0x11bf6]        # 0x140014548
   140002952:	mov    rcx,QWORD PTR [r15+0x78]
   140002956:	lea    rdx,[rsp+0xc0]
   14000295e:	call   0x140009b90
   140002963:	mov    rdi,rax
   140002966:	mov    rdx,QWORD PTR [rax]
   140002969:	mov    QWORD PTR [rsp+0x60],rdx
   14000296e:	mov    ecx,DWORD PTR [rdx]
   140002970:	test   ecx,ecx
   140002972:	je     0x140002984
   140002974:	cmp    ecx,r12d
   140002977:	je     0x1400029e3
   140002979:	lock add DWORD PTR [rdx],0x1
   14000297d:	mov    rdx,QWORD PTR [rsp+0x60]
   140002982:	jmp    0x1400029e3
   140002984:	mov    edx,DWORD PTR [rdx+0x4]
   140002987:	lea    rcx,[rsp+0x60]
   14000298c:	call   QWORD PTR [rip+0x11b26]        # 0x1400144b8
   140002992:	mov    rdx,QWORD PTR [rdi]
   140002995:	movsxd rax,DWORD PTR [rdx+0x8]
   140002999:	lea    rsi,[rdx+rax*8+0x10]
   14000299e:	mov    rdx,QWORD PTR [rsp+0x60]
   1400029a3:	movsxd rax,DWORD PTR [rdx+0xc]
   1400029a7:	lea    rbp,[rdx+rax*8+0x10]
   1400029ac:	movsxd rax,DWORD PTR [rdx+0x8]
   1400029b0:	lea    rdi,[rdx+rax*8+0x10]
   1400029b5:	cmp    rdi,rbp
   1400029b8:	je     0x1400029e3
   1400029ba:	nop    WORD PTR [rax+rax*1+0x0]
   1400029c0:	test   rdi,rdi
   1400029c3:	je     0x1400029d1
   1400029c5:	mov    rdx,rsi
   1400029c8:	mov    rcx,rdi
   1400029cb:	call   QWORD PTR [rip+0x11b97]        # 0x140014568
   1400029d1:	add    rdi,0x8
   1400029d5:	add    rsi,0x8
   1400029d9:	cmp    rdi,rbp
   1400029dc:	jne    0x1400029c0
   1400029de:	mov    rdx,QWORD PTR [rsp+0x60]
   1400029e3:	mov    rsi,QWORD PTR [rsp+0xc0]
   1400029eb:	mov    DWORD PTR [rsp+0x68],ebx
   1400029ef:	movsxd rax,DWORD PTR [rdx+0x8]
   1400029f3:	lea    rcx,[rdx+rax*8+0x10]
   1400029f8:	mov    QWORD PTR [rsp+0x70],rcx
   1400029fd:	movsxd rax,DWORD PTR [rdx+0xc]
   140002a01:	lea    rcx,[rdx+rax*8+0x10]
   140002a06:	mov    QWORD PTR [rsp+0x78],rcx
   140002a0b:	mov    eax,DWORD PTR [rsi]
   140002a0d:	test   eax,eax
   140002a0f:	je     0x140002a2f
   140002a11:	cmp    eax,0xffffffff
   140002a14:	je     0x140002a70
   140002a16:	mov    eax,r12d
   140002a19:	lock xadd DWORD PTR [rsi],eax
   140002a1d:	add    eax,0xffffffff
   140002a20:	setne  al
   140002a23:	test   al,al
   140002a25:	jne    0x140002a70
   140002a27:	mov    rsi,QWORD PTR [rsp+0xc0]
   140002a2f:	movsxd rax,DWORD PTR [rsi+0xc]
   140002a33:	lea    rdi,[rsi+rax*8+0x10]
   140002a38:	movsxd rax,DWORD PTR [rsi+0x8]
   140002a3c:	lea    rbp,[rsi+rax*8+0x10]
   140002a41:	cmp    rbp,rdi
   140002a44:	je     0x140002a62
   140002a46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002a50:	sub    rdi,0x8
   140002a54:	mov    rcx,rdi
   140002a57:	call   QWORD PTR [rip+0x11aeb]        # 0x140014548
   140002a5d:	cmp    rdi,rbp
   140002a60:	jne    0x140002a50
   140002a62:	mov    rcx,rsi
   140002a65:	call   QWORD PTR [rip+0x11a6d]        # 0x1400144d8
   140002a6b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002a70:	mov    eax,DWORD PTR [rsp+0x68]
   140002a74:	inc    DWORD PTR [rsp+0x68]
   140002a78:	test   eax,eax
   140002a7a:	jne    0x140002a8d
   140002a7c:	mov    rax,QWORD PTR [rsp+0x78]
   140002a81:	cmp    QWORD PTR [rsp+0x70],rax
   140002a86:	je     0x140002a8d
   140002a88:	mov    r13b,0x1
   140002a8b:	jmp    0x140002a90
   140002a8d:	xor    r13b,r13b
   140002a90:	test   bl,0x2
   140002a93:	je     0x140002afb
   140002a95:	mov    rsi,QWORD PTR [rsp+0x170]
   140002a9d:	and    ebx,0xfffffffd
   140002aa0:	mov    eax,DWORD PTR [rsi]
   140002aa2:	test   eax,eax
   140002aa4:	je     0x140002ac4
   140002aa6:	cmp    eax,0xffffffff
   140002aa9:	je     0x140002afb
   140002aab:	mov    eax,r12d
   140002aae:	lock xadd DWORD PTR [rsi],eax
   140002ab2:	add    eax,0xffffffff
   140002ab5:	setne  al
   140002ab8:	test   al,al
   140002aba:	jne    0x140002afb
   140002abc:	mov    rsi,QWORD PTR [rsp+0x170]
   140002ac4:	movsxd rax,DWORD PTR [rsi+0xc]
   140002ac8:	lea    rdi,[rsi+rax*8+0x10]
   140002acd:	movsxd rax,DWORD PTR [rsi+0x8]
   140002ad1:	lea    rbp,[rsi+rax*8+0x10]
   140002ad6:	cmp    rbp,rdi
   140002ad9:	je     0x140002af2
   140002adb:	nop    DWORD PTR [rax+rax*1+0x0]
   140002ae0:	sub    rdi,0x8
   140002ae4:	mov    rcx,rdi
   140002ae7:	call   QWORD PTR [rip+0x11a5b]        # 0x140014548
   140002aed:	cmp    rdi,rbp
   140002af0:	jne    0x140002ae0
   140002af2:	mov    rcx,rsi
   140002af5:	call   QWORD PTR [rip+0x119dd]        # 0x1400144d8
   140002afb:	test   r13b,r13b
   140002afe:	je     0x1400034e0
   140002b04:	mov    r15,QWORD PTR [rsp+0x70]
   140002b09:	mov    QWORD PTR [rsp+0x88],r15
   140002b11:	test   bl,0x4
   140002b14:	je     0x140002b80
   140002b16:	mov    rsi,QWORD PTR [rsp+0x158]
   140002b1e:	and    ebx,0xfffffffb
   140002b21:	mov    eax,DWORD PTR [rsi]
   140002b23:	test   eax,eax
   140002b25:	je     0x140002b45
   140002b27:	cmp    eax,0xffffffff
   140002b2a:	je     0x140002b80
   140002b2c:	mov    eax,r12d
   140002b2f:	lock xadd DWORD PTR [rsi],eax
   140002b33:	add    eax,0xffffffff
   140002b36:	setne  al
   140002b39:	test   al,al
   140002b3b:	jne    0x140002b80
   140002b3d:	mov    rsi,QWORD PTR [rsp+0x158]
   140002b45:	movsxd rax,DWORD PTR [rsi+0xc]
   140002b49:	lea    rdi,[rsi+rax*8+0x10]
   140002b4e:	movsxd rax,DWORD PTR [rsi+0x8]
   140002b52:	lea    rbp,[rsi+rax*8+0x10]
   140002b57:	cmp    rbp,rdi
   140002b5a:	je     0x140002b72
   140002b5c:	nop    DWORD PTR [rax+0x0]
   140002b60:	sub    rdi,0x8
   140002b64:	mov    rcx,rdi
   140002b67:	call   QWORD PTR [rip+0x119db]        # 0x140014548
   140002b6d:	cmp    rdi,rbp
   140002b70:	jne    0x140002b60
   140002b72:	mov    rcx,rsi
   140002b75:	call   QWORD PTR [rip+0x1195d]        # 0x1400144d8
   140002b7b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002b80:	mov    r13d,DWORD PTR [rsp+0x68]
   140002b85:	test   bl,0x10
   140002b88:	je     0x140002beb
   140002b8a:	mov    rsi,QWORD PTR [rsp+0x138]
   140002b92:	and    ebx,0xffffffef
   140002b95:	mov    eax,DWORD PTR [rsi]
   140002b97:	test   eax,eax
   140002b99:	je     0x140002bb1
   140002b9b:	cmp    eax,0xffffffff
   140002b9e:	je     0x140002beb
   140002ba0:	mov    eax,r12d
   140002ba3:	lock xadd DWORD PTR [rsi],eax
   140002ba7:	add    eax,0xffffffff
   140002baa:	setne  al
   140002bad:	test   al,al
   140002baf:	jne    0x140002beb
   140002bb1:	mov    rsi,QWORD PTR [rsp+0x138]
   140002bb9:	movsxd rax,DWORD PTR [rsi+0xc]
   140002bbd:	lea    rdi,[rsi+rax*8+0x10]
   140002bc2:	movsxd rax,DWORD PTR [rsi+0x8]
   140002bc6:	lea    rbp,[rsi+rax*8+0x10]
   140002bcb:	cmp    rbp,rdi
   140002bce:	je     0x140002be2
   140002bd0:	sub    rdi,0x8
   140002bd4:	mov    rcx,rdi
   140002bd7:	call   QWORD PTR [rip+0x1196b]        # 0x140014548
   140002bdd:	cmp    rdi,rbp
   140002be0:	jne    0x140002bd0
   140002be2:	mov    rcx,rsi
   140002be5:	call   QWORD PTR [rip+0x118ed]        # 0x1400144d8
   140002beb:	test   r13d,r13d
   140002bee:	je     0x140003458
   140002bf4:	lea    rcx,[rsp+0x80]
   140002bfc:	mov    rdx,r15
   140002bff:	call   QWORD PTR [rip+0x117fb]        # 0x140014400
   140002c05:	lea    rdx,[rsp+0xe0]
   140002c0d:	lea    rcx,[rsp+0x80]
   140002c15:	call   QWORD PTR [rip+0x117ed]        # 0x140014408
   140002c1b:	lea    rdx,[rsp+0x50]
   140002c20:	lea    rcx,[rsp+0xc8]
   140002c28:	mov    r8,rax
   140002c2b:	call   QWORD PTR [rip+0x117df]        # 0x140014410
   140002c31:	lea    rcx,[rsp+0xe0]
   140002c39:	call   QWORD PTR [rip+0x11909]        # 0x140014548
   140002c3f:	mov    rdx,QWORD PTR [rsp+0x50]
   140002c44:	cmp    DWORD PTR [rdx+0x4],0x0
   140002c48:	je     0x140002c68
   140002c4a:	lea    rcx,[rsp+0x1f8]
   140002c52:	mov    dl,0x2f
   140002c54:	call   QWORD PTR [rip+0x117be]        # 0x140014418
   140002c5a:	lea    rcx,[rsp+0x50]
   140002c5f:	movzx  edx,WORD PTR [rax]
   140002c62:	call   QWORD PTR [rip+0x117b8]        # 0x140014420
   140002c68:	mov    rax,QWORD PTR [rsp+0x1f0]
   140002c70:	lea    rdx,[rsp+0xa8]
   140002c78:	mov    DWORD PTR [rsp+0x200],r12d
   140002c80:	mov    rcx,QWORD PTR [rax+0x78]
   140002c84:	mov    DWORD PTR [rsp+0x208],r12d
   140002c8c:	call   0x140009c60
   140002c91:	lea    rdx,[rsp+0x90]
   140002c99:	lea    rcx,[rsp+0x80]
   140002ca1:	mov    r9d,r12d
   140002ca4:	mov    r8,rax
   140002ca7:	mov    DWORD PTR [rsp+0x20],r12d
   140002cac:	call   QWORD PTR [rip+0x11776]        # 0x140014428
   140002cb2:	mov    rdi,rax
   140002cb5:	mov    rdx,QWORD PTR [rax]
   140002cb8:	mov    QWORD PTR [rsp+0x30],rdx
   140002cbd:	mov    ecx,DWORD PTR [rdx]
   140002cbf:	test   ecx,ecx
   140002cc1:	je     0x140002cd3
   140002cc3:	cmp    ecx,0xffffffff
   140002cc6:	je     0x140002d33
   140002cc8:	lock add DWORD PTR [rdx],0x1
   140002ccc:	mov    rdx,QWORD PTR [rsp+0x30]
   140002cd1:	jmp    0x140002d33
   140002cd3:	mov    edx,DWORD PTR [rdx+0x4]
   140002cd6:	lea    rcx,[rsp+0x30]
   140002cdb:	call   QWORD PTR [rip+0x117d7]        # 0x1400144b8
   140002ce1:	mov    rdx,QWORD PTR [rdi]
   140002ce4:	movsxd rax,DWORD PTR [rdx+0x8]
   140002ce8:	lea    rsi,[rdx+rax*8+0x10]
   140002ced:	mov    rdx,QWORD PTR [rsp+0x30]
   140002cf2:	movsxd rax,DWORD PTR [rdx+0xc]
   140002cf6:	lea    rbp,[rdx+rax*8+0x10]
   140002cfb:	movsxd rax,DWORD PTR [rdx+0x8]
   140002cff:	lea    rdi,[rdx+rax*8+0x10]
   140002d04:	cmp    rdi,rbp
   140002d07:	je     0x140002d33
   140002d09:	nop    DWORD PTR [rax+0x0]
   140002d10:	test   rdi,rdi
   140002d13:	je     0x140002d21
   140002d15:	mov    rdx,rsi
   140002d18:	mov    rcx,rdi
   140002d1b:	call   QWORD PTR [rip+0x11847]        # 0x140014568
   140002d21:	add    rdi,0x8
   140002d25:	add    rsi,0x8
   140002d29:	cmp    rdi,rbp
   140002d2c:	jne    0x140002d10
   140002d2e:	mov    rdx,QWORD PTR [rsp+0x30]
   140002d33:	mov    rsi,QWORD PTR [rsp+0x90]
   140002d3b:	mov    DWORD PTR [rsp+0x38],0x0
   140002d43:	movsxd rax,DWORD PTR [rdx+0x8]
   140002d47:	lea    rcx,[rdx+rax*8+0x10]
   140002d4c:	mov    QWORD PTR [rsp+0x40],rcx
   140002d51:	movsxd rax,DWORD PTR [rdx+0xc]
   140002d55:	lea    rcx,[rdx+rax*8+0x10]
   140002d5a:	mov    QWORD PTR [rsp+0x48],rcx
   140002d5f:	mov    eax,DWORD PTR [rsi]
   140002d61:	test   eax,eax
   140002d63:	je     0x140002d83
   140002d65:	cmp    eax,0xffffffff
   140002d68:	je     0x140002dbb
   140002d6a:	mov    eax,r12d
   140002d6d:	lock xadd DWORD PTR [rsi],eax
   140002d71:	add    eax,0xffffffff
   140002d74:	setne  al
   140002d77:	test   al,al
   140002d79:	jne    0x140002dbb
   140002d7b:	mov    rsi,QWORD PTR [rsp+0x90]
   140002d83:	movsxd rax,DWORD PTR [rsi+0xc]
   140002d87:	lea    rdi,[rsi+rax*8+0x10]
   140002d8c:	movsxd rax,DWORD PTR [rsi+0x8]
   140002d90:	lea    rbp,[rsi+rax*8+0x10]
   140002d95:	cmp    rbp,rdi
   140002d98:	je     0x140002db2
   140002d9a:	nop    WORD PTR [rax+rax*1+0x0]
   140002da0:	sub    rdi,0x8
   140002da4:	mov    rcx,rdi
   140002da7:	call   QWORD PTR [rip+0x1179b]        # 0x140014548
   140002dad:	cmp    rdi,rbp
   140002db0:	jne    0x140002da0
   140002db2:	mov    rcx,rsi
   140002db5:	call   QWORD PTR [rip+0x1171d]        # 0x1400144d8
   140002dbb:	mov    rsi,QWORD PTR [rsp+0xa8]
   140002dc3:	mov    eax,DWORD PTR [rsi]
   140002dc5:	test   eax,eax
   140002dc7:	je     0x140002de7
   140002dc9:	cmp    eax,0xffffffff
   140002dcc:	je     0x140002e20
   140002dce:	mov    eax,r12d
   140002dd1:	lock xadd DWORD PTR [rsi],eax
   140002dd5:	add    eax,0xffffffff
   140002dd8:	setne  al
   140002ddb:	test   al,al
   140002ddd:	jne    0x140002e20
   140002ddf:	mov    rsi,QWORD PTR [rsp+0xa8]
   140002de7:	movsxd rax,DWORD PTR [rsi+0xc]
   140002deb:	lea    rdi,[rsi+rax*8+0x10]
   140002df0:	movsxd rax,DWORD PTR [rsi+0x8]
   140002df4:	lea    rbp,[rsi+rax*8+0x10]
   140002df9:	cmp    rbp,rdi
   140002dfc:	je     0x140002e12
   140002dfe:	xchg   ax,ax
   140002e00:	sub    rdi,0x8
   140002e04:	mov    rcx,rdi
   140002e07:	call   QWORD PTR [rip+0x1173b]        # 0x140014548
   140002e0d:	cmp    rdi,rbp
   140002e10:	jne    0x140002e00
   140002e12:	mov    rcx,rsi
   140002e15:	call   QWORD PTR [rip+0x116bd]        # 0x1400144d8
   140002e1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002e20:	mov    eax,DWORD PTR [rsp+0x38]
   140002e24:	inc    DWORD PTR [rsp+0x38]
   140002e28:	test   eax,eax
   140002e2a:	jne    0x140002e3d
   140002e2c:	mov    rax,QWORD PTR [rsp+0x48]
   140002e31:	cmp    QWORD PTR [rsp+0x40],rax
   140002e36:	je     0x140002e3d
   140002e38:	mov    r13b,0x1
   140002e3b:	jmp    0x140002e40
   140002e3d:	xor    r13b,r13b
   140002e40:	bt     ebx,0x8
   140002e44:	jae    0x140002eab
   140002e46:	mov    rsi,QWORD PTR [rsp+0x168]
   140002e4e:	btr    ebx,0x8
   140002e52:	mov    eax,DWORD PTR [rsi]
   140002e54:	test   eax,eax
   140002e56:	je     0x140002e6e
   140002e58:	cmp    eax,0xffffffff
   140002e5b:	je     0x140002eab
   140002e5d:	mov    eax,r12d
   140002e60:	lock xadd DWORD PTR [rsi],eax
   140002e64:	add    eax,0xffffffff
   140002e67:	setne  al
   140002e6a:	test   al,al
   140002e6c:	jne    0x140002eab
   140002e6e:	mov    rsi,QWORD PTR [rsp+0x168]
   140002e76:	movsxd rax,DWORD PTR [rsi+0xc]
   140002e7a:	lea    rdi,[rsi+rax*8+0x10]
   140002e7f:	movsxd rax,DWORD PTR [rsi+0x8]
   140002e83:	lea    rbp,[rsi+rax*8+0x10]
   140002e88:	cmp    rbp,rdi
   140002e8b:	je     0x140002ea2
   140002e8d:	nop    DWORD PTR [rax]
   140002e90:	sub    rdi,0x8
   140002e94:	mov    rcx,rdi
   140002e97:	call   QWORD PTR [rip+0x116ab]        # 0x140014548
   140002e9d:	cmp    rdi,rbp
   140002ea0:	jne    0x140002e90
   140002ea2:	mov    rcx,rsi
   140002ea5:	call   QWORD PTR [rip+0x1162d]        # 0x1400144d8
   140002eab:	test   bl,bl
   140002ead:	jns    0x140002f1b
   140002eaf:	mov    rsi,QWORD PTR [rsp+0x108]
   140002eb7:	btr    ebx,0x7
   140002ebb:	mov    eax,DWORD PTR [rsi]
   140002ebd:	test   eax,eax
   140002ebf:	je     0x140002ed7
   140002ec1:	cmp    eax,0xffffffff
   140002ec4:	je     0x140002f1b
   140002ec6:	mov    eax,r12d
   140002ec9:	lock xadd DWORD PTR [rsi],eax
   140002ecd:	add    eax,0xffffffff
   140002ed0:	setne  al
   140002ed3:	test   al,al
   140002ed5:	jne    0x140002f1b
   140002ed7:	mov    rsi,QWORD PTR [rsp+0x108]
   140002edf:	movsxd rax,DWORD PTR [rsi+0xc]
   140002ee3:	lea    rdi,[rsi+rax*8+0x10]
   140002ee8:	movsxd rax,DWORD PTR [rsi+0x8]
   140002eec:	lea    rbp,[rsi+rax*8+0x10]
   140002ef1:	cmp    rbp,rdi
   140002ef4:	je     0x140002f12
   140002ef6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002f00:	sub    rdi,0x8
   140002f04:	mov    rcx,rdi
   140002f07:	call   QWORD PTR [rip+0x1163b]        # 0x140014548
   140002f0d:	cmp    rdi,rbp
   140002f10:	jne    0x140002f00
   140002f12:	mov    rcx,rsi
   140002f15:	call   QWORD PTR [rip+0x115bd]        # 0x1400144d8
   140002f1b:	test   r13b,r13b
   140002f1e:	je     0x140003353
   140002f24:	bt     ebx,0xa
   140002f28:	mov    r15,QWORD PTR [rsp+0x40]
   140002f2d:	jae    0x140002f9b
   140002f2f:	mov    rsi,QWORD PTR [rsp+0x148]
   140002f37:	btr    ebx,0xa
   140002f3b:	mov    eax,DWORD PTR [rsi]
   140002f3d:	test   eax,eax
   140002f3f:	je     0x140002f5f
   140002f41:	cmp    eax,0xffffffff
   140002f44:	je     0x140002f9b
   140002f46:	mov    eax,r12d
   140002f49:	lock xadd DWORD PTR [rsi],eax
   140002f4d:	add    eax,0xffffffff
   140002f50:	setne  al
   140002f53:	test   al,al
   140002f55:	jne    0x140002f9b
   140002f57:	mov    rsi,QWORD PTR [rsp+0x148]
   140002f5f:	movsxd rax,DWORD PTR [rsi+0xc]
   140002f63:	lea    rdi,[rsi+rax*8+0x10]
   140002f68:	movsxd rax,DWORD PTR [rsi+0x8]
   140002f6c:	lea    rbp,[rsi+rax*8+0x10]
   140002f71:	cmp    rbp,rdi
   140002f74:	je     0x140002f92
   140002f76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002f80:	sub    rdi,0x8
   140002f84:	mov    rcx,rdi
   140002f87:	call   QWORD PTR [rip+0x115bb]        # 0x140014548
   140002f8d:	cmp    rdi,rbp
   140002f90:	jne    0x140002f80
   140002f92:	mov    rcx,rsi
   140002f95:	call   QWORD PTR [rip+0x1153d]        # 0x1400144d8
   140002f9b:	bt     ebx,0x9
   140002f9f:	jae    0x140003010
   140002fa1:	mov    rsi,QWORD PTR [rsp+0x118]
   140002fa9:	btr    ebx,0x9
   140002fad:	mov    eax,DWORD PTR [rsi]
   140002faf:	test   eax,eax
   140002fb1:	je     0x140002fd1
   140002fb3:	cmp    eax,0xffffffff
   140002fb6:	je     0x140003010
   140002fb8:	mov    eax,r12d
   140002fbb:	lock xadd DWORD PTR [rsi],eax
   140002fbf:	add    eax,0xffffffff
   140002fc2:	setne  al
   140002fc5:	test   al,al
   140002fc7:	jne    0x140003010
   140002fc9:	mov    rsi,QWORD PTR [rsp+0x118]
   140002fd1:	movsxd rax,DWORD PTR [rsi+0xc]
   140002fd5:	lea    rdi,[rsi+rax*8+0x10]
   140002fda:	movsxd rax,DWORD PTR [rsi+0x8]
   140002fde:	lea    rbp,[rsi+rax*8+0x10]
   140002fe3:	cmp    rbp,rdi
   140002fe6:	je     0x140003002
   140002fe8:	nop    DWORD PTR [rax+rax*1+0x0]
   140002ff0:	sub    rdi,0x8
   140002ff4:	mov    rcx,rdi
   140002ff7:	call   QWORD PTR [rip+0x1154b]        # 0x140014548
   140002ffd:	cmp    rdi,rbp
   140003000:	jne    0x140002ff0
   140003002:	mov    rcx,rsi
   140003005:	call   QWORD PTR [rip+0x114cd]        # 0x1400144d8
   14000300b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003010:	bt     ebx,0xe
   140003014:	mov    r13d,DWORD PTR [rsp+0x38]
   140003019:	jae    0x14000307d
   14000301b:	mov    rsi,QWORD PTR [rsp+0x150]
   140003023:	btr    ebx,0xe
   140003027:	mov    eax,DWORD PTR [rsi]
   140003029:	test   eax,eax
   14000302b:	je     0x140003043
   14000302d:	cmp    eax,0xffffffff
   140003030:	je     0x14000307d
   140003032:	mov    eax,r12d
   140003035:	lock xadd DWORD PTR [rsi],eax
   140003039:	add    eax,0xffffffff
   14000303c:	setne  al
   14000303f:	test   al,al
   140003041:	jne    0x14000307d
   140003043:	mov    rsi,QWORD PTR [rsp+0x150]
   14000304b:	movsxd rax,DWORD PTR [rsi+0xc]
   14000304f:	lea    rdi,[rsi+rax*8+0x10]
   140003054:	movsxd rax,DWORD PTR [rsi+0x8]
   140003058:	lea    rbp,[rsi+rax*8+0x10]
   14000305d:	cmp    rbp,rdi
   140003060:	je     0x140003074
   140003062:	sub    rdi,0x8
   140003066:	mov    rcx,rdi
   140003069:	call   QWORD PTR [rip+0x114d9]        # 0x140014548
   14000306f:	cmp    rdi,rbp
   140003072:	jne    0x140003062
   140003074:	mov    rcx,rsi
   140003077:	call   QWORD PTR [rip+0x1145b]        # 0x1400144d8
   14000307d:	bt     ebx,0xd
   140003081:	jae    0x1400030eb
   140003083:	mov    rsi,QWORD PTR [rsp+0x128]
   14000308b:	btr    ebx,0xd
   14000308f:	mov    eax,DWORD PTR [rsi]
   140003091:	test   eax,eax
   140003093:	je     0x1400030ab
   140003095:	cmp    eax,0xffffffff
   140003098:	je     0x1400030eb
   14000309a:	mov    eax,r12d
   14000309d:	lock xadd DWORD PTR [rsi],eax
   1400030a1:	add    eax,0xffffffff
   1400030a4:	setne  al
   1400030a7:	test   al,al
   1400030a9:	jne    0x1400030eb
   1400030ab:	mov    rsi,QWORD PTR [rsp+0x128]
   1400030b3:	movsxd rax,DWORD PTR [rsi+0xc]
   1400030b7:	lea    rdi,[rsi+rax*8+0x10]
   1400030bc:	movsxd rax,DWORD PTR [rsi+0x8]
   1400030c0:	lea    rbp,[rsi+rax*8+0x10]
   1400030c5:	cmp    rbp,rdi
   1400030c8:	je     0x1400030e2
   1400030ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400030d0:	sub    rdi,0x8
   1400030d4:	mov    rcx,rdi
   1400030d7:	call   QWORD PTR [rip+0x1146b]        # 0x140014548
   1400030dd:	cmp    rdi,rbp
   1400030e0:	jne    0x1400030d0
   1400030e2:	mov    rcx,rsi
   1400030e5:	call   QWORD PTR [rip+0x113ed]        # 0x1400144d8
   1400030eb:	test   r13d,r13d
   1400030ee:	je     0x140003270
   1400030f4:	lea    rdx,[rsp+0x50]
   1400030f9:	lea    rcx,[rsp+0x58]
   1400030fe:	call   QWORD PTR [rip+0x11464]        # 0x140014568
   140003104:	lea    rcx,[rsp+0x58]
   140003109:	mov    rdx,r15
   14000310c:	call   QWORD PTR [rip+0x1145e]        # 0x140014570
   140003112:	mov    rax,QWORD PTR [r14]
   140003115:	mov    ecx,DWORD PTR [rax]
   140003117:	cmp    ecx,0x1
   14000311a:	je     0x140003148
   14000311c:	test   ecx,ecx
   14000311e:	je     0x140003148
   140003120:	mov    edx,0x7fffffff
   140003125:	mov    r8d,0x1
   14000312b:	mov    rcx,r14
   14000312e:	call   0x140001c10
   140003133:	test   rax,rax
   140003136:	je     0x14000316f
   140003138:	lea    rdx,[rsp+0x58]
   14000313d:	mov    rcx,rax
   140003140:	call   QWORD PTR [rip+0x11422]        # 0x140014568
   140003146:	jmp    0x14000316f
   140003148:	lea    rdx,[rsp+0x58]
   14000314d:	lea    rcx,[rsp+0x160]
   140003155:	call   QWORD PTR [rip+0x1140d]        # 0x140014568
   14000315b:	mov    rcx,r14
   14000315e:	call   QWORD PTR [rip+0x1133c]        # 0x1400144a0
   140003164:	mov    rcx,QWORD PTR [rsp+0x160]
   14000316c:	mov    QWORD PTR [rax],rcx
   14000316f:	lea    rcx,[rsp+0x58]
   140003174:	call   QWORD PTR [rip+0x113ce]        # 0x140014548
   14000317a:	dec    DWORD PTR [rsp+0x38]
   14000317e:	bt     ebx,0xc
   140003182:	jae    0x1400031eb
   140003184:	mov    rsi,QWORD PTR [rsp+0xe8]
   14000318c:	btr    ebx,0xc
   140003190:	mov    eax,DWORD PTR [rsi]
   140003192:	test   eax,eax
   140003194:	je     0x1400031ac
   140003196:	cmp    eax,0xffffffff
   140003199:	je     0x1400031eb
   14000319b:	mov    eax,r12d
   14000319e:	lock xadd DWORD PTR [rsi],eax
   1400031a2:	add    eax,0xffffffff
   1400031a5:	setne  al
   1400031a8:	test   al,al
   1400031aa:	jne    0x1400031eb
   1400031ac:	mov    rsi,QWORD PTR [rsp+0xe8]
   1400031b4:	movsxd rax,DWORD PTR [rsi+0xc]
   1400031b8:	lea    rdi,[rsi+rax*8+0x10]
   1400031bd:	movsxd rax,DWORD PTR [rsi+0x8]
   1400031c1:	lea    rbp,[rsi+rax*8+0x10]
   1400031c6:	cmp    rbp,rdi
   1400031c9:	je     0x1400031e2
   1400031cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400031d0:	sub    rdi,0x8
   1400031d4:	mov    rcx,rdi
   1400031d7:	call   QWORD PTR [rip+0x1136b]        # 0x140014548
   1400031dd:	cmp    rdi,rbp
   1400031e0:	jne    0x1400031d0
   1400031e2:	mov    rcx,rsi
   1400031e5:	call   QWORD PTR [rip+0x112ed]        # 0x1400144d8
   1400031eb:	bt     ebx,0xb
   1400031ef:	jae    0x140003010
   1400031f5:	mov    rsi,QWORD PTR [rsp+0xf0]
   1400031fd:	btr    ebx,0xb
   140003201:	mov    eax,DWORD PTR [rsi]
   140003203:	test   eax,eax
   140003205:	je     0x140003225
   140003207:	cmp    eax,0xffffffff
   14000320a:	je     0x140003010
   140003210:	mov    eax,r12d
   140003213:	lock xadd DWORD PTR [rsi],eax
   140003217:	add    eax,0xffffffff
   14000321a:	setne  al
   14000321d:	test   al,al
   14000321f:	jne    0x140003010
   140003225:	mov    rsi,QWORD PTR [rsp+0xf0]
   14000322d:	movsxd rax,DWORD PTR [rsi+0xc]
   140003231:	lea    rdi,[rsi+rax*8+0x10]
   140003236:	movsxd rax,DWORD PTR [rsi+0x8]
   14000323a:	lea    rbp,[rsi+rax*8+0x10]
   14000323f:	cmp    rbp,rdi
   140003242:	je     0x140003262
   140003244:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003250:	sub    rdi,0x8
   140003254:	mov    rcx,rdi
   140003257:	call   QWORD PTR [rip+0x112eb]        # 0x140014548
   14000325d:	cmp    rdi,rbp
   140003260:	jne    0x140003250
   140003262:	mov    rcx,rsi
   140003265:	call   QWORD PTR [rip+0x1126d]        # 0x1400144d8
   14000326b:	jmp    0x140003010
   140003270:	add    QWORD PTR [rsp+0x40],0x8
   140003276:	test   bl,0x40
   140003279:	je     0x1400032dc
   14000327b:	mov    rsi,QWORD PTR [rsp+0x100]
   140003283:	and    ebx,0xffffffbf
   140003286:	mov    eax,DWORD PTR [rsi]
   140003288:	test   eax,eax
   14000328a:	je     0x1400032aa
   14000328c:	cmp    eax,0xffffffff
   14000328f:	je     0x1400032dc
   140003291:	mov    eax,r12d
   140003294:	lock xadd DWORD PTR [rsi],eax
   140003298:	add    eax,0xffffffff
   14000329b:	setne  al
   14000329e:	test   al,al
   1400032a0:	jne    0x1400032dc
   1400032a2:	mov    rsi,QWORD PTR [rsp+0x100]
   1400032aa:	movsxd rax,DWORD PTR [rsi+0xc]
   1400032ae:	lea    rdi,[rsi+rax*8+0x10]
   1400032b3:	movsxd rax,DWORD PTR [rsi+0x8]
   1400032b7:	lea    rbp,[rsi+rax*8+0x10]
   1400032bc:	cmp    rbp,rdi
   1400032bf:	je     0x1400032d3
   1400032c1:	sub    rdi,0x8
   1400032c5:	mov    rcx,rdi
   1400032c8:	call   QWORD PTR [rip+0x1127a]        # 0x140014548
   1400032ce:	cmp    rdi,rbp
   1400032d1:	jne    0x1400032c1
   1400032d3:	mov    rcx,rsi
   1400032d6:	call   QWORD PTR [rip+0x111fc]        # 0x1400144d8
   1400032dc:	test   bl,0x20
   1400032df:	je     0x140002e20
   1400032e5:	mov    rsi,QWORD PTR [rsp+0x110]
   1400032ed:	and    ebx,0xffffffdf
   1400032f0:	mov    eax,DWORD PTR [rsi]
   1400032f2:	test   eax,eax
   1400032f4:	je     0x14000331c
   1400032f6:	cmp    eax,0xffffffff
   1400032f9:	je     0x140002e20
   1400032ff:	mov    eax,r12d
   140003302:	lock xadd DWORD PTR [rsi],eax
   140003306:	add    eax,0xffffffff
   140003309:	setne  al
   14000330c:	test   al,al
   14000330e:	jne    0x140002e20
   140003314:	mov    rsi,QWORD PTR [rsp+0x110]
   14000331c:	movsxd rax,DWORD PTR [rsi+0xc]
   140003320:	lea    rdi,[rsi+rax*8+0x10]
   140003325:	movsxd rax,DWORD PTR [rsi+0x8]
   140003329:	lea    rbp,[rsi+rax*8+0x10]
   14000332e:	cmp    rbp,rdi
   140003331:	je     0x140003345
   140003333:	sub    rdi,0x8
   140003337:	mov    rcx,rdi
   14000333a:	call   QWORD PTR [rip+0x11208]        # 0x140014548
   140003340:	cmp    rdi,rbp
   140003343:	jne    0x140003333
   140003345:	mov    rcx,rsi
   140003348:	call   QWORD PTR [rip+0x1118a]        # 0x1400144d8
   14000334e:	jmp    0x140002e20
   140003353:	mov    rsi,QWORD PTR [rsp+0x30]
   140003358:	mov    eax,DWORD PTR [rsi]
   14000335a:	test   eax,eax
   14000335c:	je     0x140003379
   14000335e:	cmp    eax,0xffffffff
   140003361:	je     0x1400033ab
   140003363:	mov    eax,r12d
   140003366:	lock xadd DWORD PTR [rsi],eax
   14000336a:	add    eax,0xffffffff
   14000336d:	setne  al
   140003370:	test   al,al
   140003372:	jne    0x1400033ab
   140003374:	mov    rsi,QWORD PTR [rsp+0x30]
   140003379:	movsxd rax,DWORD PTR [rsi+0xc]
   14000337d:	lea    rdi,[rsi+rax*8+0x10]
   140003382:	movsxd rax,DWORD PTR [rsi+0x8]
   140003386:	lea    rbp,[rsi+rax*8+0x10]
   14000338b:	cmp    rbp,rdi
   14000338e:	je     0x1400033a2
   140003390:	sub    rdi,0x8
   140003394:	mov    rcx,rdi
   140003397:	call   QWORD PTR [rip+0x111ab]        # 0x140014548
   14000339d:	cmp    rdi,rbp
   1400033a0:	jne    0x140003390
   1400033a2:	mov    rcx,rsi
   1400033a5:	call   QWORD PTR [rip+0x1112d]        # 0x1400144d8
   1400033ab:	lea    rcx,[rsp+0x50]
   1400033b0:	call   QWORD PTR [rip+0x11192]        # 0x140014548
   1400033b6:	lea    rcx,[rsp+0x80]
   1400033be:	call   QWORD PTR [rip+0x1106c]        # 0x140014430
   1400033c4:	dec    DWORD PTR [rsp+0x68]
   1400033c8:	test   bl,0x8
   1400033cb:	je     0x1400033e3
   1400033cd:	mov    rsi,QWORD PTR [rsp+0x120]
   1400033d5:	and    ebx,0xfffffff7
   1400033d8:	mov    eax,DWORD PTR [rsi]
   1400033da:	test   eax,eax
   1400033dc:	je     0x140003415
   1400033de:	cmp    eax,0xffffffff
   1400033e1:	jne    0x1400033f0
   1400033e3:	mov    r15,QWORD PTR [rsp+0x88]
   1400033eb:	jmp    0x140002b80
   1400033f0:	mov    eax,r12d
   1400033f3:	lock xadd DWORD PTR [rsi],eax
   1400033f7:	mov    r15,QWORD PTR [rsp+0x88]
   1400033ff:	add    eax,0xffffffff
   140003402:	setne  al
   140003405:	test   al,al
   140003407:	jne    0x140002b80
   14000340d:	mov    rsi,QWORD PTR [rsp+0x120]
   140003415:	movsxd rax,DWORD PTR [rsi+0xc]
   140003419:	lea    rdi,[rsi+rax*8+0x10]
   14000341e:	movsxd rax,DWORD PTR [rsi+0x8]
   140003422:	lea    rbp,[rsi+rax*8+0x10]
   140003427:	cmp    rbp,rdi
   14000342a:	je     0x140003442
   14000342c:	nop    DWORD PTR [rax+0x0]
   140003430:	sub    rdi,0x8
   140003434:	mov    rcx,rdi
   140003437:	call   QWORD PTR [rip+0x1110b]        # 0x140014548
   14000343d:	cmp    rdi,rbp
   140003440:	jne    0x140003430
   140003442:	mov    rcx,rsi
   140003445:	call   QWORD PTR [rip+0x1108d]        # 0x1400144d8
   14000344b:	mov    r15,QWORD PTR [rsp+0x88]
   140003453:	jmp    0x140002b80
   140003458:	add    QWORD PTR [rsp+0x70],0x8
   14000345e:	test   bl,0x1
   140003461:	je     0x140002a70
   140003467:	mov    rsi,QWORD PTR [rsp+0x130]
   14000346f:	and    ebx,0xfffffffe
   140003472:	mov    eax,DWORD PTR [rsi]
   140003474:	test   eax,eax
   140003476:	je     0x14000349e
   140003478:	cmp    eax,0xffffffff
   14000347b:	je     0x140002a70
   140003481:	mov    eax,r12d
   140003484:	lock xadd DWORD PTR [rsi],eax
   140003488:	add    eax,0xffffffff
   14000348b:	setne  al
   14000348e:	test   al,al
   140003490:	jne    0x140002a70
   140003496:	mov    rsi,QWORD PTR [rsp+0x130]
   14000349e:	movsxd rax,DWORD PTR [rsi+0xc]
   1400034a2:	lea    rdi,[rsi+rax*8+0x10]
   1400034a7:	movsxd rax,DWORD PTR [rsi+0x8]
   1400034ab:	lea    rbp,[rsi+rax*8+0x10]
   1400034b0:	cmp    rbp,rdi
   1400034b3:	je     0x1400034d2
   1400034b5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400034c0:	sub    rdi,0x8
   1400034c4:	mov    rcx,rdi
   1400034c7:	call   QWORD PTR [rip+0x1107b]        # 0x140014548
   1400034cd:	cmp    rdi,rbp
   1400034d0:	jne    0x1400034c0
   1400034d2:	mov    rcx,rsi
   1400034d5:	call   QWORD PTR [rip+0x10ffd]        # 0x1400144d8
   1400034db:	jmp    0x140002a70
   1400034e0:	lea    rcx,[rsp+0x60]
   1400034e5:	call   0x140001a30
   1400034ea:	mov    rdi,QWORD PTR [rsp+0x1f0]
   1400034f2:	lea    rdx,[rsp+0xd0]
   1400034fa:	mov    rcx,rdi
   1400034fd:	mov    r8,r14
   140003500:	call   0x140001f60
   140003505:	mov    rcx,QWORD PTR [rdi+0x80]
   14000350c:	mov    rdx,rax
   14000350f:	call   0x14000a9b0
   140003514:	lea    rcx,[rsp+0xd0]
   14000351c:	call   0x140001a30
   140003521:	call   QWORD PTR [rip+0x110a1]        # 0x1400145c8
   140003527:	lea    rcx,[rsp+0xc8]
   14000352f:	call   QWORD PTR [rip+0x10efb]        # 0x140014430
   140003535:	lea    rcx,[rsp+0x98]
   14000353d:	call   QWORD PTR [rip+0x10fed]        # 0x140014530
   140003543:	mov    r14,QWORD PTR [rsp+0x1a8]
   14000354b:	mov    r13,QWORD PTR [rsp+0x1b0]
   140003553:	mov    rdi,QWORD PTR [rsp+0x1b8]
   14000355b:	mov    rsi,QWORD PTR [rsp+0x1c0]
   140003563:	mov    rbp,QWORD PTR [rsp+0x1c8]
   14000356b:	add    rsp,0x1d0
   140003572:	pop    r15
   140003574:	pop    r12
   140003576:	pop    rbx
   140003577:	ret    
   140003578:	cmp    edx,0x6
   14000357b:	jne    0x1400035e4
   14000357d:	lea    rdx,[rsp+0xa0]
   140003585:	add    rcx,0x30
   140003589:	call   0x14000cac0
   14000358e:	mov    rcx,QWORD PTR [rax]
   140003591:	cmp    DWORD PTR [rcx+0x4],ebx
   140003594:	mov    rcx,QWORD PTR [r15+0x88]
   14000359b:	setne  dl
   14000359e:	call   0x14000aec0
   1400035a3:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400035ab:	mov    eax,DWORD PTR [rcx]
   1400035ad:	test   eax,eax
   1400035af:	je     0x1400035d2
   1400035b1:	cmp    eax,0xffffffff
   1400035b4:	je     0x1400035fe
   1400035b6:	or     r12,0xffffffffffffffff
   1400035ba:	lock xadd DWORD PTR [rcx],r12d
   1400035bf:	add    r12d,0xffffffff
   1400035c3:	setne  al
   1400035c6:	test   al,al
   1400035c8:	jne    0x1400035fe
   1400035ca:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400035d2:	call   0x140001920
   1400035d7:	add    rsp,0x1d0
   1400035de:	pop    r15
   1400035e0:	pop    r12
   1400035e2:	pop    rbx
   1400035e3:	ret    
   1400035e4:	cmp    edx,0x7
   1400035e7:	jne    0x1400035fe
   1400035e9:	mov    rdx,rcx
   1400035ec:	lea    r8,[rip+0x12495]        # 0x140015a88
   1400035f3:	mov    ecx,0x12c
   1400035f8:	call   QWORD PTR [rip+0x10e3a]        # 0x140014438
   1400035fe:	add    rsp,0x1d0
   140003605:	pop    r15
   140003607:	pop    r12
   140003609:	pop    rbx
   14000360a:	ret    
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	mov    QWORD PTR [rsp+0x10],rbx
   140003615:	mov    QWORD PTR [rsp+0x18],rbp
   14000361a:	push   rsi
   14000361b:	sub    rsp,0x20
   14000361f:	movsxd rax,DWORD PTR [rdx+0xc]
   140003623:	mov    rbp,rdx
   140003626:	lea    rbx,[rdx+rax*8+0x10]
   14000362b:	movsxd rax,DWORD PTR [rdx+0x8]
   14000362f:	lea    rsi,[rdx+rax*8+0x10]
   140003634:	cmp    rsi,rbx
   140003637:	je     0x140003671
   140003639:	mov    QWORD PTR [rsp+0x30],rdi
   14000363e:	xchg   ax,ax
   140003640:	mov    rdi,QWORD PTR [rbx-0x8]
   140003644:	sub    rbx,0x8
   140003648:	test   rdi,rdi
   14000364b:	je     0x140003667
   14000364d:	lea    rcx,[rdi+0x8]
   140003651:	call   0x140001a30
   140003656:	mov    rcx,rdi
   140003659:	call   QWORD PTR [rip+0x10ee9]        # 0x140014548
   14000365f:	mov    rcx,rdi
   140003662:	call   0x140012898
   140003667:	cmp    rbx,rsi
   14000366a:	jne    0x140003640
   14000366c:	mov    rdi,QWORD PTR [rsp+0x30]
   140003671:	mov    rcx,rbp
   140003674:	mov    rbx,QWORD PTR [rsp+0x38]
   140003679:	mov    rbp,QWORD PTR [rsp+0x40]
   14000367e:	add    rsp,0x20
   140003682:	pop    rsi
   140003683:	rex.W jmp QWORD PTR [rip+0x10e4e]        # 0x1400144d8
   14000368a:	int3   
   14000368b:	int3   
   14000368c:	int3   
   14000368d:	int3   
   14000368e:	int3   
   14000368f:	int3   
   140003690:	rex push rbx
   140003692:	push   rbp
   140003693:	push   rsi
   140003694:	push   rdi
   140003695:	push   r12
   140003697:	push   r13
   140003699:	push   r14
   14000369b:	push   r15
   14000369d:	sub    rsp,0x3d8
   1400036a4:	mov    r14,rcx
   1400036a7:	lea    rdx,[rip+0x120c2]        # 0x140015770
   1400036ae:	xor    eax,eax
   1400036b0:	mov    rdi,rdx
   1400036b3:	or     r12,0xffffffffffffffff
   1400036b7:	xor    esi,esi
   1400036b9:	mov    DWORD PTR [rsp+0x420],esi
   1400036c0:	mov    QWORD PTR [rsp+0x48],rdx
   1400036c5:	mov    rcx,r12
   1400036c8:	repnz scas al,BYTE PTR es:[rdi]
   1400036ca:	lea    rdx,[rsp+0x260]
   1400036d2:	not    rcx
   1400036d5:	dec    rcx
   1400036d8:	mov    DWORD PTR [rsp+0x40],ecx
   1400036dc:	lea    rcx,[rsp+0x128]
   1400036e4:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400036e9:	movdqa XMMWORD PTR [rsp+0x260],xmm0
   1400036f2:	call   QWORD PTR [rip+0x10e48]        # 0x140014540
   1400036f8:	lea    r8,[rsp+0x128]
   140003700:	lea    rdx,[rsp+0x320]
   140003708:	mov    rcx,r14
   14000370b:	call   QWORD PTR [rip+0x11f87]        # 0x140015698
   140003711:	lea    rdx,[rsp+0x208]
   140003719:	mov    rcx,rax
   14000371c:	call   QWORD PTR [rip+0x10dee]        # 0x140014510
   140003722:	lea    rcx,[rsp+0x70]
   140003727:	mov    rdx,rax
   14000372a:	call   QWORD PTR [rip+0x10de8]        # 0x140014518
   140003730:	lea    rcx,[rsp+0x208]
   140003738:	call   QWORD PTR [rip+0x10e0a]        # 0x140014548
   14000373e:	lea    rcx,[rsp+0x320]
   140003746:	call   QWORD PTR [rip+0x10e04]        # 0x140014550
   14000374c:	lea    rcx,[rsp+0x128]
   140003754:	call   QWORD PTR [rip+0x10dee]        # 0x140014548
   14000375a:	lea    r8,[rip+0x123c7]        # 0x140015b28
   140003761:	lea    rdx,[rsp+0x138]
   140003769:	lea    rcx,[rip+0x25ed0]        # 0x140029640
   140003770:	xor    r9d,r9d
   140003773:	mov    DWORD PTR [rsp+0x20],r12d
   140003778:	call   QWORD PTR [rip+0x10dda]        # 0x140014558
   14000377e:	lea    rcx,[rsp+0x428]
   140003786:	mov    dl,0x20
   140003788:	call   QWORD PTR [rip+0x10c8a]        # 0x140014418
   14000378e:	lea    rdx,[rsp+0x200]
   140003796:	lea    rcx,[rsp+0x70]
   14000379b:	mov    rdi,rax
   14000379e:	call   QWORD PTR [rip+0x10c34]        # 0x1400143d8
   1400037a4:	lea    rdx,[rsp+0x1f0]
   1400037ac:	mov    r8,rax
   1400037af:	movzx  eax,WORD PTR [rdi]
   1400037b2:	lea    rcx,[rsp+0x138]
   1400037ba:	xor    r9d,r9d
   1400037bd:	mov    WORD PTR [rsp+0x20],ax
   1400037c2:	call   QWORD PTR [rip+0x10c18]        # 0x1400143e0
   1400037c8:	mov    rcx,QWORD PTR [r14+0x90]
   1400037cf:	mov    rdx,rax
   1400037d2:	call   0x14000bdc0
   1400037d7:	lea    rcx,[rsp+0x1f0]
   1400037df:	call   QWORD PTR [rip+0x10d63]        # 0x140014548
   1400037e5:	lea    rcx,[rsp+0x138]
   1400037ed:	call   QWORD PTR [rip+0x10d55]        # 0x140014548
   1400037f3:	lea    rcx,[rsp+0x200]
   1400037fb:	call   QWORD PTR [rip+0x10d47]        # 0x140014548
   140003801:	lea    edx,[rsi+0x3]
   140003804:	lea    rcx,[rsp+0x148]
   14000380c:	call   QWORD PTR [rip+0x10d9e]        # 0x1400145b0
   140003812:	lea    rcx,[rsp+0x148]
   14000381a:	call   QWORD PTR [rip+0x10d98]        # 0x1400145b8
   140003820:	lea    rcx,[rsp+0x148]
   140003828:	call   QWORD PTR [rip+0x10d92]        # 0x1400145c0
   14000382e:	lea    rdx,[rip+0x11f6b]        # 0x1400157a0
   140003835:	xor    eax,eax
   140003837:	mov    rdi,rdx
   14000383a:	mov    rcx,r12
   14000383d:	mov    QWORD PTR [rsp+0x48],rdx
   140003842:	repnz scas al,BYTE PTR es:[rdi]
   140003844:	not    rcx
   140003847:	dec    rcx
   14000384a:	mov    DWORD PTR [rsp+0x40],ecx
   14000384e:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003853:	movdqa XMMWORD PTR [rsp+0x280],xmm0
   14000385c:	lea    rdx,[rsp+0x280]
   140003864:	lea    rcx,[rsp+0xf0]
   14000386c:	call   QWORD PTR [rip+0x10cce]        # 0x140014540
   140003872:	lea    r8,[rsp+0xf0]
   14000387a:	lea    rdx,[rsp+0x380]
   140003882:	mov    rcx,r14
   140003885:	call   QWORD PTR [rip+0x11e0d]        # 0x140015698
   14000388b:	lea    rdx,[rsp+0x80]
   140003893:	mov    rcx,rax
   140003896:	call   QWORD PTR [rip+0x10c74]        # 0x140014510
   14000389c:	lea    rcx,[rsp+0x380]
   1400038a4:	call   QWORD PTR [rip+0x10ca6]        # 0x140014550
   1400038aa:	lea    rcx,[rsp+0xf0]
   1400038b2:	call   QWORD PTR [rip+0x10c90]        # 0x140014548
   1400038b8:	lea    rdx,[rip+0x12259]        # 0x140015b18
   1400038bf:	xor    eax,eax
   1400038c1:	mov    rdi,rdx
   1400038c4:	mov    QWORD PTR [rsp+0x48],rdx
   1400038c9:	mov    rcx,r12
   1400038cc:	repnz scas al,BYTE PTR es:[rdi]
   1400038ce:	lea    rdx,[rsp+0x240]
   1400038d6:	not    rcx
   1400038d9:	dec    rcx
   1400038dc:	mov    DWORD PTR [rsp+0x40],ecx
   1400038e0:	lea    rcx,[rsp+0xd0]
   1400038e8:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400038ed:	movdqa XMMWORD PTR [rsp+0x240],xmm0
   1400038f6:	call   QWORD PTR [rip+0x10c44]        # 0x140014540
   1400038fc:	lea    rdx,[rip+0x12205]        # 0x140015b08
   140003903:	mov    rdi,rdx
   140003906:	mov    QWORD PTR [rsp+0x48],rdx
   14000390b:	xor    eax,eax
   14000390d:	mov    rcx,r12
   140003910:	lea    rdx,[rsp+0x340]
   140003918:	repnz scas al,BYTE PTR es:[rdi]
   14000391a:	not    rcx
   14000391d:	dec    rcx
   140003920:	mov    DWORD PTR [rsp+0x40],ecx
   140003924:	lea    rcx,[rsp+0x110]
   14000392c:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140003931:	movdqa XMMWORD PTR [rsp+0x340],xmm0
   14000393a:	call   QWORD PTR [rip+0x10c00]        # 0x140014540
   140003940:	lea    r8,[rsp+0xd0]
   140003948:	lea    rdx,[rsp+0x3b0]
   140003950:	mov    rcx,r14
   140003953:	call   QWORD PTR [rip+0x11d3f]        # 0x140015698
   140003959:	lea    rdx,[rsp+0x230]
   140003961:	mov    rcx,rax
   140003964:	call   QWORD PTR [rip+0x10ba6]        # 0x140014510
   14000396a:	lea    r8,[rsp+0x110]
   140003972:	lea    rdx,[rsp+0x2c0]
   14000397a:	mov    rcx,r14
   14000397d:	mov    rdi,rax
   140003980:	call   QWORD PTR [rip+0x11d12]        # 0x140015698
   140003986:	lea    rdx,[rsp+0x220]
   14000398e:	mov    rcx,rax
   140003991:	call   QWORD PTR [rip+0x10b79]        # 0x140014510
   140003997:	lea    rcx,[rsp+0x170]
   14000399f:	mov    r8,rdi
   1400039a2:	mov    rdx,rax
   1400039a5:	call   0x14000f0a0
   1400039aa:	lea    rcx,[rsp+0x220]
   1400039b2:	call   QWORD PTR [rip+0x10b90]        # 0x140014548
   1400039b8:	lea    rcx,[rsp+0x2c0]
   1400039c0:	call   QWORD PTR [rip+0x10b8a]        # 0x140014550
   1400039c6:	lea    rcx,[rsp+0x230]
   1400039ce:	call   QWORD PTR [rip+0x10b74]        # 0x140014548
   1400039d4:	lea    rcx,[rsp+0x3b0]
   1400039dc:	call   QWORD PTR [rip+0x10b6e]        # 0x140014550
   1400039e2:	lea    rcx,[rsp+0x110]
   1400039ea:	call   QWORD PTR [rip+0x10b58]        # 0x140014548
   1400039f0:	lea    rcx,[rsp+0xd0]
   1400039f8:	call   QWORD PTR [rip+0x10b4a]        # 0x140014548
   1400039fe:	lea    rdx,[r14+0x30]
   140003a02:	lea    rcx,[rsp+0x170]
   140003a0a:	call   0x14000dfe0
   140003a0f:	mov    rcx,QWORD PTR [r14+0x68]
   140003a13:	lea    rdx,[rsp+0x130]
   140003a1b:	call   0x140006ab0
   140003a20:	lea    rcx,[rsp+0x170]
   140003a28:	mov    rdx,rax
   140003a2b:	call   0x14000e030
   140003a30:	mov    rbx,QWORD PTR [rsp+0x130]
   140003a38:	mov    eax,DWORD PTR [rbx]
   140003a3a:	test   eax,eax
   140003a3c:	je     0x140003a5c
   140003a3e:	cmp    eax,r12d
   140003a41:	je     0x140003a8e
   140003a43:	mov    eax,r12d
   140003a46:	lock xadd DWORD PTR [rbx],eax
   140003a4a:	add    eax,r12d
   140003a4d:	setne  al
   140003a50:	test   al,al
   140003a52:	jne    0x140003a8e
   140003a54:	mov    rbx,QWORD PTR [rsp+0x130]
   140003a5c:	movsxd rax,DWORD PTR [rbx+0xc]
   140003a60:	lea    rdi,[rbx+rax*8+0x10]
   140003a65:	movsxd rax,DWORD PTR [rbx+0x8]
   140003a69:	lea    rbp,[rbx+rax*8+0x10]
   140003a6e:	cmp    rbp,rdi
   140003a71:	je     0x140003a85
   140003a73:	sub    rdi,0x8
   140003a77:	mov    rcx,rdi
   140003a7a:	call   QWORD PTR [rip+0x10ac8]        # 0x140014548
   140003a80:	cmp    rdi,rbp
   140003a83:	jne    0x140003a73
   140003a85:	mov    rcx,rbx
   140003a88:	call   QWORD PTR [rip+0x10a4a]        # 0x1400144d8
   140003a8e:	mov    rcx,QWORD PTR [r14+0x68]
   140003a92:	lea    rdx,[rsp+0x3a8]
   140003a9a:	call   0x140007160
   140003a9f:	lea    rcx,[rsp+0x170]
   140003aa7:	mov    rdx,rax
   140003aaa:	call   0x14000f160
   140003aaf:	mov    rcx,QWORD PTR [r14+0x80]
   140003ab6:	lea    rdx,[rsp+0xb8]
   140003abe:	call   0x14000a910
   140003ac3:	mov    rdi,rax
   140003ac6:	mov    rdx,QWORD PTR [rax]
   140003ac9:	mov    QWORD PTR [rsp+0x50],rdx
   140003ace:	mov    ecx,DWORD PTR [rdx]
   140003ad0:	test   ecx,ecx
   140003ad2:	je     0x140003adf
   140003ad4:	cmp    ecx,0xffffffff
   140003ad7:	je     0x140003b38
   140003ad9:	lock add DWORD PTR [rdx],0x1
   140003add:	jmp    0x140003b33
   140003adf:	mov    edx,DWORD PTR [rdx+0x4]
   140003ae2:	lea    rcx,[rsp+0x50]
   140003ae7:	call   QWORD PTR [rip+0x109cb]        # 0x1400144b8
   140003aed:	mov    rdx,QWORD PTR [rdi]
   140003af0:	movsxd rax,DWORD PTR [rdx+0x8]
   140003af4:	lea    rbx,[rdx+rax*8+0x10]
   140003af9:	mov    rdx,QWORD PTR [rsp+0x50]
   140003afe:	movsxd rax,DWORD PTR [rdx+0xc]
   140003b02:	lea    rbp,[rdx+rax*8+0x10]
   140003b07:	movsxd rax,DWORD PTR [rdx+0x8]
   140003b0b:	lea    rdi,[rdx+rax*8+0x10]
   140003b10:	cmp    rdi,rbp
   140003b13:	je     0x140003b38
   140003b15:	test   rdi,rdi
   140003b18:	je     0x140003b26
   140003b1a:	mov    rdx,rbx
   140003b1d:	mov    rcx,rdi
   140003b20:	call   QWORD PTR [rip+0x10a42]        # 0x140014568
   140003b26:	add    rdi,0x8
   140003b2a:	add    rbx,0x8
   140003b2e:	cmp    rdi,rbp
   140003b31:	jne    0x140003b15
   140003b33:	mov    rdx,QWORD PTR [rsp+0x50]
   140003b38:	mov    rbx,QWORD PTR [rsp+0xb8]
   140003b40:	mov    DWORD PTR [rsp+0x58],esi
   140003b44:	movsxd rax,DWORD PTR [rdx+0x8]
   140003b48:	lea    rcx,[rdx+rax*8+0x10]
   140003b4d:	mov    QWORD PTR [rsp+0x60],rcx
   140003b52:	movsxd rax,DWORD PTR [rdx+0xc]
   140003b56:	lea    rcx,[rdx+rax*8+0x10]
   140003b5b:	mov    QWORD PTR [rsp+0x68],rcx
   140003b60:	mov    eax,DWORD PTR [rbx]
   140003b62:	test   eax,eax
   140003b64:	je     0x140003b84
   140003b66:	cmp    eax,0xffffffff
   140003b69:	je     0x140003bc0
   140003b6b:	mov    eax,r12d
   140003b6e:	lock xadd DWORD PTR [rbx],eax
   140003b72:	add    eax,0xffffffff
   140003b75:	setne  al
   140003b78:	test   al,al
   140003b7a:	jne    0x140003bc0
   140003b7c:	mov    rbx,QWORD PTR [rsp+0xb8]
   140003b84:	movsxd rax,DWORD PTR [rbx+0xc]
   140003b88:	lea    rdi,[rbx+rax*8+0x10]
   140003b8d:	movsxd rax,DWORD PTR [rbx+0x8]
   140003b91:	lea    rbp,[rbx+rax*8+0x10]
   140003b96:	cmp    rbp,rdi
   140003b99:	je     0x140003bb2
   140003b9b:	nop    DWORD PTR [rax+rax*1+0x0]
   140003ba0:	sub    rdi,0x8
   140003ba4:	mov    rcx,rdi
   140003ba7:	call   QWORD PTR [rip+0x1099b]        # 0x140014548
   140003bad:	cmp    rdi,rbp
   140003bb0:	jne    0x140003ba0
   140003bb2:	mov    rcx,rbx
   140003bb5:	call   QWORD PTR [rip+0x1091d]        # 0x1400144d8
   140003bbb:	nop    DWORD PTR [rax+rax*1+0x0]
   140003bc0:	mov    eax,DWORD PTR [rsp+0x58]
   140003bc4:	inc    DWORD PTR [rsp+0x58]
   140003bc8:	test   eax,eax
   140003bca:	jne    0x140003bdd
   140003bcc:	mov    rax,QWORD PTR [rsp+0x68]
   140003bd1:	cmp    QWORD PTR [rsp+0x60],rax
   140003bd6:	je     0x140003bdd
   140003bd8:	mov    r13b,0x1
   140003bdb:	jmp    0x140003be0
   140003bdd:	xor    r13b,r13b
   140003be0:	test   sil,0x2
   140003be4:	je     0x140003c4b
   140003be6:	mov    rbx,QWORD PTR [rsp+0x218]
   140003bee:	and    esi,0xfffffffd
   140003bf1:	mov    eax,DWORD PTR [rbx]
   140003bf3:	test   eax,eax
   140003bf5:	je     0x140003c15
   140003bf7:	cmp    eax,0xffffffff
   140003bfa:	je     0x140003c4b
   140003bfc:	mov    eax,r12d
   140003bff:	lock xadd DWORD PTR [rbx],eax
   140003c03:	add    eax,0xffffffff
   140003c06:	setne  al
   140003c09:	test   al,al
   140003c0b:	jne    0x140003c4b
   140003c0d:	mov    rbx,QWORD PTR [rsp+0x218]
   140003c15:	movsxd rax,DWORD PTR [rbx+0xc]
   140003c19:	lea    rdi,[rbx+rax*8+0x10]
   140003c1e:	movsxd rax,DWORD PTR [rbx+0x8]
   140003c22:	lea    rbp,[rbx+rax*8+0x10]
   140003c27:	cmp    rbp,rdi
   140003c2a:	je     0x140003c42
   140003c2c:	nop    DWORD PTR [rax+0x0]
   140003c30:	sub    rdi,0x8
   140003c34:	mov    rcx,rdi
   140003c37:	call   QWORD PTR [rip+0x1090b]        # 0x140014548
   140003c3d:	cmp    rdi,rbp
   140003c40:	jne    0x140003c30
   140003c42:	mov    rcx,rbx
   140003c45:	call   QWORD PTR [rip+0x1088d]        # 0x1400144d8
   140003c4b:	test   r13b,r13b
   140003c4e:	je     0x140003e57
   140003c54:	mov    r15,QWORD PTR [rsp+0x60]
   140003c59:	test   sil,0x4
   140003c5d:	je     0x140003cd0
   140003c5f:	mov    rbx,QWORD PTR [rsp+0x210]
   140003c67:	and    esi,0xfffffffb
   140003c6a:	mov    eax,DWORD PTR [rbx]
   140003c6c:	test   eax,eax
   140003c6e:	je     0x140003c8e
   140003c70:	cmp    eax,0xffffffff
   140003c73:	je     0x140003cd0
   140003c75:	mov    eax,r12d
   140003c78:	lock xadd DWORD PTR [rbx],eax
   140003c7c:	add    eax,0xffffffff
   140003c7f:	setne  al
   140003c82:	test   al,al
   140003c84:	jne    0x140003cd0
   140003c86:	mov    rbx,QWORD PTR [rsp+0x210]
   140003c8e:	movsxd rax,DWORD PTR [rbx+0xc]
   140003c92:	lea    rdi,[rbx+rax*8+0x10]
   140003c97:	movsxd rax,DWORD PTR [rbx+0x8]
   140003c9b:	lea    rbp,[rbx+rax*8+0x10]
   140003ca0:	cmp    rbp,rdi
   140003ca3:	je     0x140003cc2
   140003ca5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003cb0:	sub    rdi,0x8
   140003cb4:	mov    rcx,rdi
   140003cb7:	call   QWORD PTR [rip+0x1088b]        # 0x140014548
   140003cbd:	cmp    rdi,rbp
   140003cc0:	jne    0x140003cb0
   140003cc2:	mov    rcx,rbx
   140003cc5:	call   QWORD PTR [rip+0x1080d]        # 0x1400144d8
   140003ccb:	nop    DWORD PTR [rax+rax*1+0x0]
   140003cd0:	mov    r13d,DWORD PTR [rsp+0x58]
   140003cd5:	test   sil,0x10
   140003cd9:	je     0x140003d3c
   140003cdb:	mov    rbx,QWORD PTR [rsp+0x1d8]
   140003ce3:	and    esi,0xffffffef
   140003ce6:	mov    eax,DWORD PTR [rbx]
   140003ce8:	test   eax,eax
   140003cea:	je     0x140003d02
   140003cec:	cmp    eax,0xffffffff
   140003cef:	je     0x140003d3c
   140003cf1:	mov    eax,r12d
   140003cf4:	lock xadd DWORD PTR [rbx],eax
   140003cf8:	add    eax,0xffffffff
   140003cfb:	setne  al
   140003cfe:	test   al,al
   140003d00:	jne    0x140003d3c
   140003d02:	mov    rbx,QWORD PTR [rsp+0x1d8]
   140003d0a:	movsxd rax,DWORD PTR [rbx+0xc]
   140003d0e:	lea    rdi,[rbx+rax*8+0x10]
   140003d13:	movsxd rax,DWORD PTR [rbx+0x8]
   140003d17:	lea    rbp,[rbx+rax*8+0x10]
   140003d1c:	cmp    rbp,rdi
   140003d1f:	je     0x140003d33
   140003d21:	sub    rdi,0x8
   140003d25:	mov    rcx,rdi
   140003d28:	call   QWORD PTR [rip+0x1081a]        # 0x140014548
   140003d2e:	cmp    rdi,rbp
   140003d31:	jne    0x140003d21
   140003d33:	mov    rcx,rbx
   140003d36:	call   QWORD PTR [rip+0x1079c]        # 0x1400144d8
   140003d3c:	test   r13d,r13d
   140003d3f:	je     0x140003dd7
   140003d45:	lea    rcx,[r14+0x98]
   140003d4c:	mov    rdx,r15
   140003d4f:	call   0x140002220
   140003d54:	dec    DWORD PTR [rsp+0x58]
   140003d58:	test   sil,0x8
   140003d5c:	je     0x140003cd0
   140003d62:	mov    rbx,QWORD PTR [rsp+0x1c0]
   140003d6a:	and    esi,0xfffffff7
   140003d6d:	mov    eax,DWORD PTR [rbx]
   140003d6f:	test   eax,eax
   140003d71:	je     0x140003d91
   140003d73:	cmp    eax,0xffffffff
   140003d76:	je     0x140003cd0
   140003d7c:	mov    eax,r12d
   140003d7f:	lock xadd DWORD PTR [rbx],eax
   140003d83:	add    eax,0xffffffff
   140003d86:	setne  al
   140003d89:	test   al,al
   140003d8b:	jne    0x140003cd0
   140003d91:	mov    rbx,QWORD PTR [rsp+0x1c0]
   140003d99:	movsxd rax,DWORD PTR [rbx+0xc]
   140003d9d:	lea    rdi,[rbx+rax*8+0x10]
   140003da2:	movsxd rax,DWORD PTR [rbx+0x8]
   140003da6:	lea    rbp,[rbx+rax*8+0x10]
   140003dab:	cmp    rbp,rdi
   140003dae:	je     0x140003cc2
   140003db4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003dc0:	sub    rdi,0x8
   140003dc4:	mov    rcx,rdi
   140003dc7:	call   QWORD PTR [rip+0x1077b]        # 0x140014548
   140003dcd:	cmp    rdi,rbp
   140003dd0:	jne    0x140003dc0
   140003dd2:	jmp    0x140003cc2
   140003dd7:	add    QWORD PTR [rsp+0x60],0x8
   140003ddd:	test   sil,0x1
   140003de1:	je     0x140003bc0
   140003de7:	mov    rbx,QWORD PTR [rsp+0x1e8]
   140003def:	and    esi,0xfffffffe
   140003df2:	mov    eax,DWORD PTR [rbx]
   140003df4:	test   eax,eax
   140003df6:	je     0x140003e1e
   140003df8:	cmp    eax,0xffffffff
   140003dfb:	je     0x140003bc0
   140003e01:	mov    eax,r12d
   140003e04:	lock xadd DWORD PTR [rbx],eax
   140003e08:	add    eax,0xffffffff
   140003e0b:	setne  al
   140003e0e:	test   al,al
   140003e10:	jne    0x140003bc0
   140003e16:	mov    rbx,QWORD PTR [rsp+0x1e8]
   140003e1e:	movsxd rax,DWORD PTR [rbx+0xc]
   140003e22:	lea    rdi,[rbx+rax*8+0x10]
   140003e27:	movsxd rax,DWORD PTR [rbx+0x8]
   140003e2b:	lea    rbp,[rbx+rax*8+0x10]
   140003e30:	cmp    rbp,rdi
   140003e33:	je     0x140003bb2
   140003e39:	nop    DWORD PTR [rax+0x0]
   140003e40:	sub    rdi,0x8
   140003e44:	mov    rcx,rdi
   140003e47:	call   QWORD PTR [rip+0x106fb]        # 0x140014548
   140003e4d:	cmp    rdi,rbp
   140003e50:	jne    0x140003e40
   140003e52:	jmp    0x140003bb2
   140003e57:	mov    rbx,QWORD PTR [rsp+0x50]
   140003e5c:	mov    eax,DWORD PTR [rbx]
   140003e5e:	test   eax,eax
   140003e60:	je     0x140003e7d
   140003e62:	cmp    eax,0xffffffff
   140003e65:	je     0x140003ebb
   140003e67:	mov    eax,r12d
   140003e6a:	lock xadd DWORD PTR [rbx],eax
   140003e6e:	add    eax,0xffffffff
   140003e71:	setne  al
   140003e74:	test   al,al
   140003e76:	jne    0x140003ebb
   140003e78:	mov    rbx,QWORD PTR [rsp+0x50]
   140003e7d:	movsxd rax,DWORD PTR [rbx+0xc]
   140003e81:	lea    rdi,[rbx+rax*8+0x10]
   140003e86:	movsxd rax,DWORD PTR [rbx+0x8]
   140003e8a:	lea    rsi,[rbx+rax*8+0x10]
   140003e8f:	cmp    rsi,rdi
   140003e92:	je     0x140003eb2
   140003e94:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003ea0:	sub    rdi,0x8
   140003ea4:	mov    rcx,rdi
   140003ea7:	call   QWORD PTR [rip+0x1069b]        # 0x140014548
   140003ead:	cmp    rdi,rsi
   140003eb0:	jne    0x140003ea0
   140003eb2:	mov    rcx,rbx
   140003eb5:	call   QWORD PTR [rip+0x1061d]        # 0x1400144d8
   140003ebb:	lea    rdx,[r14+0x98]
   140003ec2:	lea    rcx,[rsp+0x170]
   140003eca:	call   0x14000e020
   140003ecf:	lea    rdx,[rip+0x11c1a]        # 0x140015af0
   140003ed6:	xor    eax,eax
   140003ed8:	mov    rdi,rdx
   140003edb:	mov    QWORD PTR [rsp+0x38],rdx
   140003ee0:	mov    rcx,r12
   140003ee3:	repnz scas al,BYTE PTR es:[rdi]
   140003ee5:	lea    rdx,[rsp+0x2e0]
   140003eed:	not    rcx
   140003ef0:	dec    rcx
   140003ef3:	mov    DWORD PTR [rsp+0x30],ecx
   140003ef7:	lea    rcx,[rsp+0xe0]
   140003eff:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140003f04:	movdqa XMMWORD PTR [rsp+0x2e0],xmm0
   140003f0d:	call   QWORD PTR [rip+0x1062d]        # 0x140014540
   140003f13:	lea    r8,[rsp+0xe0]
   140003f1b:	lea    rdx,[rsp+0x360]
   140003f23:	mov    rcx,r14
   140003f26:	call   QWORD PTR [rip+0x1176c]        # 0x140015698
   140003f2c:	mov    rcx,rax
   140003f2f:	call   QWORD PTR [rip+0x104b3]        # 0x1400143e8
   140003f35:	lea    rcx,[rsp+0x360]
   140003f3d:	movzx  edi,al
   140003f40:	call   QWORD PTR [rip+0x1060a]        # 0x140014550
   140003f46:	lea    rcx,[rsp+0xe0]
   140003f4e:	call   QWORD PTR [rip+0x105f4]        # 0x140014548
   140003f54:	test   dil,dil
   140003f57:	je     0x1400040a0
   140003f5d:	lea    rdx,[rip+0x11b7c]        # 0x140015ae0
   140003f64:	xor    eax,eax
   140003f66:	mov    rcx,r12
   140003f69:	mov    rdi,rdx
   140003f6c:	mov    QWORD PTR [rsp+0x38],rdx
   140003f71:	lea    rdx,[rsp+0x300]
   140003f79:	repnz scas al,BYTE PTR es:[rdi]
   140003f7b:	not    rcx
   140003f7e:	dec    rcx
   140003f81:	mov    DWORD PTR [rsp+0x30],ecx
   140003f85:	lea    rcx,[rsp+0xe8]
   140003f8d:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140003f92:	movdqa XMMWORD PTR [rsp+0x300],xmm0
   140003f9b:	call   QWORD PTR [rip+0x1059f]        # 0x140014540
   140003fa1:	lea    r8,[rsp+0xe8]
   140003fa9:	lea    rdx,[rsp+0x398]
   140003fb1:	mov    rcx,r14
   140003fb4:	call   QWORD PTR [rip+0x116de]        # 0x140015698
   140003fba:	mov    rcx,rax
   140003fbd:	call   QWORD PTR [rip+0x10425]        # 0x1400143e8
   140003fc3:	lea    rcx,[rsp+0x398]
   140003fcb:	movzx  edi,al
   140003fce:	call   QWORD PTR [rip+0x1057c]        # 0x140014550
   140003fd4:	lea    rcx,[rsp+0xe8]
   140003fdc:	call   QWORD PTR [rip+0x10566]        # 0x140014548
   140003fe2:	test   dil,dil
   140003fe5:	je     0x140003fff
   140003fe7:	lea    rcx,[rsp+0x3c0]
   140003fef:	call   QWORD PTR [rip+0x103fb]        # 0x1400143f0
   140003ff5:	mov    edx,0x1
   140003ffa:	jmp    0x1400040b0
   140003fff:	lea    rdx,[rip+0x11aca]        # 0x140015ad0
   140004006:	xor    eax,eax
   140004008:	mov    rcx,r12
   14000400b:	mov    rdi,rdx
   14000400e:	mov    QWORD PTR [rsp+0x38],rdx
   140004013:	lea    rdx,[rsp+0x250]
   14000401b:	repnz scas al,BYTE PTR es:[rdi]
   14000401d:	not    rcx
   140004020:	dec    rcx
   140004023:	mov    DWORD PTR [rsp+0x30],ecx
   140004027:	lea    rcx,[rsp+0x120]
   14000402f:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140004034:	movdqa XMMWORD PTR [rsp+0x250],xmm0
   14000403d:	call   QWORD PTR [rip+0x104fd]        # 0x140014540
   140004043:	lea    r8,[rsp+0x120]
   14000404b:	lea    rdx,[rsp+0x270]
   140004053:	mov    rcx,r14
   140004056:	call   QWORD PTR [rip+0x1163c]        # 0x140015698
   14000405c:	lea    rdx,[rsp+0x2a0]
   140004064:	mov    rcx,rax
   140004067:	call   QWORD PTR [rip+0x104a3]        # 0x140014510
   14000406d:	lea    rcx,[rsp+0x170]
   140004075:	mov    edx,0x2
   14000407a:	mov    r8,rax
   14000407d:	call   0x14000dff0
   140004082:	lea    rcx,[rsp+0x270]
   14000408a:	call   QWORD PTR [rip+0x104c0]        # 0x140014550
   140004090:	lea    rcx,[rsp+0x120]
   140004098:	call   QWORD PTR [rip+0x104aa]        # 0x140014548
   14000409e:	jmp    0x1400040c0
   1400040a0:	lea    rcx,[rsp+0x390]
   1400040a8:	call   QWORD PTR [rip+0x10342]        # 0x1400143f0
   1400040ae:	xor    edx,edx
   1400040b0:	lea    rcx,[rsp+0x170]
   1400040b8:	mov    r8,rax
   1400040bb:	call   0x14000dff0
   1400040c0:	lea    rcx,[rsp+0x430]
   1400040c8:	call   QWORD PTR [rip+0x1032a]        # 0x1400143f8
   1400040ce:	lea    rdx,[rsp+0x228]
   1400040d6:	lea    rcx,[rsp+0x70]
   1400040db:	movzx  edi,WORD PTR [rax]
   1400040de:	call   QWORD PTR [rip+0x1043c]        # 0x140014520
   1400040e4:	lea    rcx,[rsp+0x90]
   1400040ec:	mov    rdx,rax
   1400040ef:	call   QWORD PTR [rip+0x10473]        # 0x140014568
   1400040f5:	lea    rcx,[rsp+0x90]
   1400040fd:	movzx  edx,di
   140004100:	call   QWORD PTR [rip+0x1045a]        # 0x140014560
   140004106:	lea    rdx,[rsp+0x90]
   14000410e:	lea    rcx,[rsp+0x88]
   140004116:	call   QWORD PTR [rip+0x1044c]        # 0x140014568
   14000411c:	lea    rdx,[rsp+0x80]
   140004124:	lea    rcx,[rsp+0x88]
   14000412c:	call   QWORD PTR [rip+0x1043e]        # 0x140014570
   140004132:	lea    rdx,[rsp+0x88]
   14000413a:	lea    rcx,[rsp+0x170]
   140004142:	call   0x14000f680
   140004147:	lea    rcx,[rsp+0x88]
   14000414f:	call   QWORD PTR [rip+0x103f3]        # 0x140014548
   140004155:	lea    rcx,[rsp+0x90]
   14000415d:	call   QWORD PTR [rip+0x103e5]        # 0x140014548
   140004163:	lea    rcx,[rsp+0x228]
   14000416b:	call   QWORD PTR [rip+0x103d7]        # 0x140014548
   140004171:	lea    r8,[rip+0x11938]        # 0x140015ab0
   140004178:	lea    rdx,[rsp+0x100]
   140004180:	lea    rcx,[rip+0x254b9]        # 0x140029640
   140004187:	xor    r9d,r9d
   14000418a:	mov    DWORD PTR [rsp+0x20],r12d
   14000418f:	call   QWORD PTR [rip+0x103c3]        # 0x140014558
   140004195:	mov    rcx,QWORD PTR [r14+0x90]
   14000419c:	lea    rdx,[rsp+0x100]
   1400041a4:	call   0x14000bdc0
   1400041a9:	lea    rcx,[rsp+0x100]
   1400041b1:	call   QWORD PTR [rip+0x10391]        # 0x140014548
   1400041b7:	lea    rdx,[rsp+0x140]
   1400041bf:	lea    rcx,[r14+0x30]
   1400041c3:	call   0x14000cac0
   1400041c8:	mov    rdi,QWORD PTR [rsp+0x140]
   1400041d0:	mov    rcx,QWORD PTR [rax]
   1400041d3:	mov    eax,DWORD PTR [rdi]
   1400041d5:	cmp    DWORD PTR [rcx+0x4],0x0
   1400041d9:	setne  sil
   1400041dd:	test   eax,eax
   1400041df:	je     0x1400041ff
   1400041e1:	cmp    eax,0xffffffff
   1400041e4:	je     0x140004254
   1400041e6:	mov    eax,r12d
   1400041e9:	lock xadd DWORD PTR [rdi],eax
   1400041ed:	add    eax,0xffffffff
   1400041f0:	setne  al
   1400041f3:	test   al,al
   1400041f5:	jne    0x140004254
   1400041f7:	mov    rdi,QWORD PTR [rsp+0x140]
   1400041ff:	mov    rbx,QWORD PTR [rdi+0x10]
   140004203:	test   rbx,rbx
   140004206:	je     0x14000424b
   140004208:	lea    rcx,[rbx+0x18]
   14000420c:	call   QWORD PTR [rip+0x10336]        # 0x140014548
   140004212:	lea    rcx,[rbx+0x20]
   140004216:	call   QWORD PTR [rip+0x1032c]        # 0x140014548
   14000421c:	mov    rcx,QWORD PTR [rbx+0x8]
   140004220:	test   rcx,rcx
   140004223:	je     0x14000422a
   140004225:	call   0x140001850
   14000422a:	mov    rcx,QWORD PTR [rbx+0x10]
   14000422e:	test   rcx,rcx
   140004231:	je     0x140004238
   140004233:	call   0x140001850
   140004238:	mov    rdx,QWORD PTR [rdi+0x10]
   14000423c:	mov    r8d,0x8
   140004242:	mov    rcx,rdi
   140004245:	call   QWORD PTR [rip+0x10275]        # 0x1400144c0
   14000424b:	mov    rcx,rdi
   14000424e:	call   QWORD PTR [rip+0x10274]        # 0x1400144c8
   140004254:	test   sil,sil
   140004257:	je     0x140004711
   14000425d:	lea    rcx,[rsp+0x150]
   140004265:	call   0x140010ab0
   14000426a:	lea    rdx,[rsp+0x80]
   140004272:	lea    rcx,[rsp+0x150]
   14000427a:	call   0x14000f8c0
   14000427f:	lea    rdx,[rsp+0x40]
   140004284:	lea    rcx,[r14+0x30]
   140004288:	call   0x14000cac0
   14000428d:	lea    rcx,[rsp+0x150]
   140004295:	mov    rdx,rax
   140004298:	call   0x140010b00
   14000429d:	lea    rdx,[rip+0x11874]        # 0x140015b18
   1400042a4:	xor    eax,eax
   1400042a6:	mov    rdi,rdx
   1400042a9:	mov    QWORD PTR [rsp+0x38],rdx
   1400042ae:	mov    rcx,r12
   1400042b1:	repnz scas al,BYTE PTR es:[rdi]
   1400042b3:	lea    rdx,[rsp+0x290]
   1400042bb:	not    rcx
   1400042be:	dec    rcx
   1400042c1:	mov    DWORD PTR [rsp+0x30],ecx
   1400042c5:	lea    rcx,[rsp+0xf8]
   1400042cd:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400042d2:	movdqa XMMWORD PTR [rsp+0x290],xmm0
   1400042db:	call   QWORD PTR [rip+0x1025f]        # 0x140014540
   1400042e1:	lea    rdx,[rip+0x117c4]        # 0x140015aac
   1400042e8:	mov    rdi,rdx
   1400042eb:	mov    QWORD PTR [rsp+0x38],rdx
   1400042f0:	xor    eax,eax
   1400042f2:	mov    rcx,r12
   1400042f5:	lea    rdx,[rsp+0x2b0]
   1400042fd:	repnz scas al,BYTE PTR es:[rdi]
   1400042ff:	not    rcx
   140004302:	dec    rcx
   140004305:	mov    DWORD PTR [rsp+0x30],ecx
   140004309:	lea    rcx,[rsp+0xd8]
   140004311:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140004316:	movdqa XMMWORD PTR [rsp+0x2b0],xmm0
   14000431f:	call   QWORD PTR [rip+0x1021b]        # 0x140014540
   140004325:	lea    rdx,[rip+0x117dc]        # 0x140015b08
   14000432c:	mov    rdi,rdx
   14000432f:	mov    QWORD PTR [rsp+0x38],rdx
   140004334:	xor    eax,eax
   140004336:	mov    rcx,r12
   140004339:	lea    rdx,[rsp+0x2d0]
   140004341:	repnz scas al,BYTE PTR es:[rdi]
   140004343:	not    rcx
   140004346:	dec    rcx
   140004349:	mov    DWORD PTR [rsp+0x30],ecx
   14000434d:	lea    rcx,[rsp+0xc8]
   140004355:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000435a:	movdqa XMMWORD PTR [rsp+0x2d0],xmm0
   140004363:	call   QWORD PTR [rip+0x101d7]        # 0x140014540
   140004369:	lea    rdx,[rip+0x11730]        # 0x140015aa0
   140004370:	mov    rdi,rdx
   140004373:	mov    QWORD PTR [rsp+0x38],rdx
   140004378:	xor    eax,eax
   14000437a:	mov    rcx,r12
   14000437d:	lea    rdx,[rsp+0x2f0]
   140004385:	repnz scas al,BYTE PTR es:[rdi]
   140004387:	not    rcx
   14000438a:	dec    rcx
   14000438d:	mov    DWORD PTR [rsp+0x30],ecx
   140004391:	lea    rcx,[rsp+0xc0]
   140004399:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000439e:	movdqa XMMWORD PTR [rsp+0x2f0],xmm0
   1400043a7:	call   QWORD PTR [rip+0x10193]        # 0x140014540
   1400043ad:	lea    r8,[rsp+0xc8]
   1400043b5:	lea    rdx,[rsp+0x310]
   1400043bd:	mov    rcx,r14
   1400043c0:	call   QWORD PTR [rip+0x112d2]        # 0x140015698
   1400043c6:	lea    rdx,[rsp+0x1f8]
   1400043ce:	mov    rcx,rax
   1400043d1:	call   QWORD PTR [rip+0x10139]        # 0x140014510
   1400043d7:	lea    rdx,[rsp+0xc0]
   1400043df:	lea    rcx,[rsp+0x78]
   1400043e4:	mov    rdi,rax
   1400043e7:	call   QWORD PTR [rip+0x1017b]        # 0x140014568
   1400043ed:	lea    rcx,[rsp+0x78]
   1400043f2:	mov    rdx,rdi
   1400043f5:	call   QWORD PTR [rip+0x10175]        # 0x140014570
   1400043fb:	lea    rdx,[rsp+0x78]
   140004400:	lea    rcx,[rsp+0xb0]
   140004408:	call   QWORD PTR [rip+0x1015a]        # 0x140014568
   14000440e:	lea    rdx,[rsp+0xd8]
   140004416:	lea    rcx,[rsp+0xb0]
   14000441e:	call   QWORD PTR [rip+0x1014c]        # 0x140014570
   140004424:	lea    r8,[rsp+0xf8]
   14000442c:	lea    rdx,[rsp+0x330]
   140004434:	mov    rcx,r14
   140004437:	call   QWORD PTR [rip+0x1125b]        # 0x140015698
   14000443d:	lea    rdx,[rsp+0x1c8]
   140004445:	mov    rcx,rax
   140004448:	call   QWORD PTR [rip+0x100c2]        # 0x140014510
   14000444e:	lea    rdx,[rsp+0xb0]
   140004456:	lea    rcx,[rsp+0xa0]
   14000445e:	mov    rdi,rax
   140004461:	call   QWORD PTR [rip+0x10101]        # 0x140014568
   140004467:	lea    rcx,[rsp+0xa0]
   14000446f:	mov    rdx,rdi
   140004472:	call   QWORD PTR [rip+0x100f8]        # 0x140014570
   140004478:	lea    rdx,[rsp+0xa0]
   140004480:	lea    rcx,[rsp+0x150]
   140004488:	call   0x14000f8d0
   14000448d:	lea    rcx,[rsp+0xa0]
   140004495:	call   QWORD PTR [rip+0x100ad]        # 0x140014548
   14000449b:	lea    rcx,[rsp+0xb0]
   1400044a3:	call   QWORD PTR [rip+0x1009f]        # 0x140014548
   1400044a9:	lea    rcx,[rsp+0x78]
   1400044ae:	call   QWORD PTR [rip+0x10094]        # 0x140014548
   1400044b4:	lea    rcx,[rsp+0x1f8]
   1400044bc:	call   QWORD PTR [rip+0x10086]        # 0x140014548
   1400044c2:	lea    rcx,[rsp+0x310]
   1400044ca:	call   QWORD PTR [rip+0x10080]        # 0x140014550
   1400044d0:	lea    rcx,[rsp+0x1c8]
   1400044d8:	call   QWORD PTR [rip+0x1006a]        # 0x140014548
   1400044de:	lea    rcx,[rsp+0x330]
   1400044e6:	call   QWORD PTR [rip+0x10064]        # 0x140014550
   1400044ec:	lea    rcx,[rsp+0xc0]
   1400044f4:	call   QWORD PTR [rip+0x1004e]        # 0x140014548
   1400044fa:	lea    rcx,[rsp+0xc8]
   140004502:	call   QWORD PTR [rip+0x10040]        # 0x140014548
   140004508:	lea    rcx,[rsp+0xd8]
   140004510:	call   QWORD PTR [rip+0x10032]        # 0x140014548
   140004516:	lea    rcx,[rsp+0xf8]
   14000451e:	call   QWORD PTR [rip+0x10024]        # 0x140014548
   140004524:	lea    rdx,[rip+0x11255]        # 0x140015780
   14000452b:	xor    eax,eax
   14000452d:	mov    rdi,rdx
   140004530:	mov    QWORD PTR [rsp+0x38],rdx
   140004535:	mov    rcx,r12
   140004538:	repnz scas al,BYTE PTR es:[rdi]
   14000453a:	lea    rdx,[rsp+0x350]
   140004542:	not    rcx
   140004545:	dec    rcx
   140004548:	mov    DWORD PTR [rsp+0x30],ecx
   14000454c:	lea    rcx,[rsp+0x108]
   140004554:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140004559:	movdqa XMMWORD PTR [rsp+0x350],xmm0
   140004562:	call   QWORD PTR [rip+0xffd8]        # 0x140014540
   140004568:	lea    rcx,[rsp+0x438]
   140004570:	call   QWORD PTR [rip+0xfe82]        # 0x1400143f8
   140004576:	lea    rdx,[rsp+0x1d0]
   14000457e:	lea    rcx,[rsp+0x70]
   140004583:	movzx  edi,WORD PTR [rax]
   140004586:	call   QWORD PTR [rip+0xff94]        # 0x140014520
   14000458c:	lea    rcx,[rsp+0x98]
   140004594:	mov    rdx,rax
   140004597:	call   QWORD PTR [rip+0xffcb]        # 0x140014568
   14000459d:	lea    rcx,[rsp+0x98]
   1400045a5:	movzx  edx,di
   1400045a8:	call   QWORD PTR [rip+0xffb2]        # 0x140014560
   1400045ae:	lea    r8,[rsp+0x108]
   1400045b6:	lea    rdx,[rsp+0x370]
   1400045be:	mov    rcx,r14
   1400045c1:	call   QWORD PTR [rip+0x110d1]        # 0x140015698
   1400045c7:	lea    rdx,[rsp+0x1e0]
   1400045cf:	mov    rcx,rax
   1400045d2:	call   QWORD PTR [rip+0xff38]        # 0x140014510
   1400045d8:	lea    rdx,[rsp+0x98]
   1400045e0:	lea    rcx,[rsp+0xa8]
   1400045e8:	mov    rdi,rax
   1400045eb:	call   QWORD PTR [rip+0xff77]        # 0x140014568
   1400045f1:	lea    rcx,[rsp+0xa8]
   1400045f9:	mov    rdx,rdi
   1400045fc:	call   QWORD PTR [rip+0xff6e]        # 0x140014570
   140004602:	lea    rdx,[rsp+0xa8]
   14000460a:	lea    rcx,[rsp+0x150]
   140004612:	call   0x140010b40
   140004617:	lea    rcx,[rsp+0xa8]
   14000461f:	call   QWORD PTR [rip+0xff23]        # 0x140014548
   140004625:	lea    rcx,[rsp+0x98]
   14000462d:	call   QWORD PTR [rip+0xff15]        # 0x140014548
   140004633:	lea    rcx,[rsp+0x1d0]
   14000463b:	call   QWORD PTR [rip+0xff07]        # 0x140014548
   140004641:	lea    rcx,[rsp+0x1e0]
   140004649:	call   QWORD PTR [rip+0xfef9]        # 0x140014548
   14000464f:	lea    rcx,[rsp+0x370]
   140004657:	call   QWORD PTR [rip+0xfef3]        # 0x140014550
   14000465d:	lea    rcx,[rsp+0x108]
   140004665:	call   QWORD PTR [rip+0xfedd]        # 0x140014548
   14000466b:	lea    rcx,[rsp+0x168]
   140004673:	call   QWORD PTR [rip+0xfecf]        # 0x140014548
   140004679:	mov    rdi,QWORD PTR [rsp+0x160]
   140004681:	mov    eax,DWORD PTR [rdi]
   140004683:	test   eax,eax
   140004685:	je     0x1400046a5
   140004687:	cmp    eax,0xffffffff
   14000468a:	je     0x1400046f5
   14000468c:	mov    eax,r12d
   14000468f:	lock xadd DWORD PTR [rdi],eax
   140004693:	add    eax,0xffffffff
   140004696:	setne  al
   140004699:	test   al,al
   14000469b:	jne    0x1400046f5
   14000469d:	mov    rdi,QWORD PTR [rsp+0x160]
   1400046a5:	mov    rbx,QWORD PTR [rdi+0x10]
   1400046a9:	test   rbx,rbx
   1400046ac:	je     0x1400046ec
   1400046ae:	lea    rcx,[rbx+0x18]
   1400046b2:	call   QWORD PTR [rip+0xfe90]        # 0x140014548
   1400046b8:	lea    rcx,[rbx+0x20]
   1400046bc:	call   QWORD PTR [rip+0xfe86]        # 0x140014548
   1400046c2:	xor    r11d,r11d
   1400046c5:	mov    rcx,rbx
   1400046c8:	movzx  edx,r11b
   1400046cc:	mov    BYTE PTR [rsp+0x420],r11b
   1400046d4:	call   0x1400018a0
   1400046d9:	mov    rdx,QWORD PTR [rdi+0x10]
   1400046dd:	mov    r8d,0x8
   1400046e3:	mov    rcx,rdi
   1400046e6:	call   QWORD PTR [rip+0xfdd4]        # 0x1400144c0
   1400046ec:	mov    rcx,rdi
   1400046ef:	call   QWORD PTR [rip+0xfdd3]        # 0x1400144c8
   1400046f5:	lea    rcx,[rsp+0x158]
   1400046fd:	call   QWORD PTR [rip+0xfe45]        # 0x140014548
   140004703:	lea    rcx,[rsp+0x150]
   14000470b:	call   QWORD PTR [rip+0xfd87]        # 0x140014498
   140004711:	lea    r8,[rip+0x1137c]        # 0x140015a94
   140004718:	lea    rdx,[rsp+0x118]
   140004720:	lea    rcx,[rip+0x24f19]        # 0x140029640
   140004727:	xor    r9d,r9d
   14000472a:	mov    DWORD PTR [rsp+0x20],r12d
   14000472f:	call   QWORD PTR [rip+0xfe23]        # 0x140014558
   140004735:	mov    rcx,QWORD PTR [r14+0x90]
   14000473c:	lea    rdx,[rsp+0x118]
   140004744:	call   0x14000bdc0
   140004749:	lea    rcx,[rsp+0x118]
   140004751:	call   QWORD PTR [rip+0xfdf1]        # 0x140014548
   140004757:	call   QWORD PTR [rip+0xfe6b]        # 0x1400145c8
   14000475d:	lea    rcx,[rsp+0x1b0]
   140004765:	call   QWORD PTR [rip+0xfddd]        # 0x140014548
   14000476b:	mov    rbx,QWORD PTR [rsp+0x1a0]
   140004773:	mov    eax,DWORD PTR [rbx]
   140004775:	test   eax,eax
   140004777:	je     0x140004797
   140004779:	cmp    eax,0xffffffff
   14000477c:	je     0x1400047cb
   14000477e:	mov    eax,r12d
   140004781:	lock xadd DWORD PTR [rbx],eax
   140004785:	add    eax,0xffffffff
   140004788:	setne  al
   14000478b:	test   al,al
   14000478d:	jne    0x1400047cb
   14000478f:	mov    rbx,QWORD PTR [rsp+0x1a0]
   140004797:	movsxd rax,DWORD PTR [rbx+0xc]
   14000479b:	lea    rdi,[rbx+rax*8+0x10]
   1400047a0:	movsxd rax,DWORD PTR [rbx+0x8]
   1400047a4:	lea    rsi,[rbx+rax*8+0x10]
   1400047a9:	cmp    rsi,rdi
   1400047ac:	je     0x1400047c2
   1400047ae:	xchg   ax,ax
   1400047b0:	sub    rdi,0x8
   1400047b4:	mov    rcx,rdi
   1400047b7:	call   QWORD PTR [rip+0xfd8b]        # 0x140014548
   1400047bd:	cmp    rdi,rsi
   1400047c0:	jne    0x1400047b0
   1400047c2:	mov    rcx,rbx
   1400047c5:	call   QWORD PTR [rip+0xfd0d]        # 0x1400144d8
   1400047cb:	mov    r14,QWORD PTR [rsp+0x198]
   1400047d3:	mov    eax,DWORD PTR [r14]
   1400047d6:	test   eax,eax
   1400047d8:	je     0x140004801
   1400047da:	cmp    eax,0xffffffff
   1400047dd:	je     0x1400048ae
   1400047e3:	mov    eax,r12d
   1400047e6:	lock xadd DWORD PTR [r14],eax
   1400047eb:	add    eax,0xffffffff
   1400047ee:	setne  al
   1400047f1:	test   al,al
   1400047f3:	jne    0x1400048ae
   1400047f9:	mov    r14,QWORD PTR [rsp+0x198]
   140004801:	movsxd rax,DWORD PTR [r14+0xc]
   140004805:	lea    r13,[r14+rax*8+0x10]
   14000480a:	movsxd rax,DWORD PTR [r14+0x8]
   14000480e:	lea    r15,[r14+rax*8+0x10]
   140004813:	cmp    r15,r13
   140004816:	je     0x1400048a5
   14000481c:	nop    DWORD PTR [rax+0x0]
   140004820:	mov    rbx,QWORD PTR [r13-0x8]
   140004824:	sub    r13,0x8
   140004828:	test   rbx,rbx
   14000482b:	je     0x14000489c
   14000482d:	mov    rcx,QWORD PTR [rbx+0x8]
   140004831:	mov    eax,DWORD PTR [rcx]
   140004833:	test   eax,eax
   140004835:	je     0x14000484d
   140004837:	cmp    eax,0xffffffff
   14000483a:	je     0x14000488b
   14000483c:	mov    eax,r12d
   14000483f:	lock xadd DWORD PTR [rcx],eax
   140004843:	add    eax,0xffffffff
   140004846:	setne  al
   140004849:	test   al,al
   14000484b:	jne    0x14000488b
   14000484d:	mov    rbp,QWORD PTR [rbx+0x8]
   140004851:	movsxd rax,DWORD PTR [rbp+0xc]
   140004855:	lea    rdi,[rbp+rax*8+0x10]
   14000485a:	movsxd rax,DWORD PTR [rbp+0x8]
   14000485e:	lea    rsi,[rbp+rax*8+0x10]
   140004863:	cmp    rsi,rdi
   140004866:	je     0x140004882
   140004868:	nop    DWORD PTR [rax+rax*1+0x0]
   140004870:	sub    rdi,0x8
   140004874:	mov    rcx,rdi
   140004877:	call   QWORD PTR [rip+0xfccb]        # 0x140014548
   14000487d:	cmp    rdi,rsi
   140004880:	jne    0x140004870
   140004882:	mov    rcx,rbp
   140004885:	call   QWORD PTR [rip+0xfc4d]        # 0x1400144d8
   14000488b:	mov    rcx,rbx
   14000488e:	call   QWORD PTR [rip+0xfcb4]        # 0x140014548
   140004894:	mov    rcx,rbx
   140004897:	call   0x140012898
   14000489c:	cmp    r13,r15
   14000489f:	jne    0x140004820
   1400048a5:	mov    rcx,r14
   1400048a8:	call   QWORD PTR [rip+0xfc2a]        # 0x1400144d8
   1400048ae:	mov    rbx,QWORD PTR [rsp+0x190]
   1400048b6:	mov    eax,DWORD PTR [rbx]
   1400048b8:	test   eax,eax
   1400048ba:	je     0x1400048d9
   1400048bc:	cmp    eax,0xffffffff
   1400048bf:	je     0x14000490b
   1400048c1:	lock xadd DWORD PTR [rbx],r12d
   1400048c6:	add    r12d,0xffffffff
   1400048ca:	setne  al
   1400048cd:	test   al,al
   1400048cf:	jne    0x14000490b
   1400048d1:	mov    rbx,QWORD PTR [rsp+0x190]
   1400048d9:	movsxd rax,DWORD PTR [rbx+0xc]
   1400048dd:	lea    rdi,[rbx+rax*8+0x10]
   1400048e2:	movsxd rax,DWORD PTR [rbx+0x8]
   1400048e6:	lea    rsi,[rbx+rax*8+0x10]
   1400048eb:	cmp    rsi,rdi
   1400048ee:	je     0x140004902
   1400048f0:	sub    rdi,0x8
   1400048f4:	mov    rcx,rdi
   1400048f7:	call   QWORD PTR [rip+0xfc4b]        # 0x140014548
   1400048fd:	cmp    rdi,rsi
   140004900:	jne    0x1400048f0
   140004902:	mov    rcx,rbx
   140004905:	call   QWORD PTR [rip+0xfbcd]        # 0x1400144d8
   14000490b:	lea    rcx,[rsp+0x180]
   140004913:	call   QWORD PTR [rip+0xfc2f]        # 0x140014548
   140004919:	lea    rcx,[rsp+0x178]
   140004921:	call   QWORD PTR [rip+0xfc21]        # 0x140014548
   140004927:	lea    rcx,[rsp+0x170]
   14000492f:	call   QWORD PTR [rip+0xfb63]        # 0x140014498
   140004935:	lea    rcx,[rsp+0x80]
   14000493d:	call   QWORD PTR [rip+0xfc05]        # 0x140014548
   140004943:	lea    rcx,[rsp+0x70]
   140004948:	call   QWORD PTR [rip+0xfbe2]        # 0x140014530
   14000494e:	add    rsp,0x3d8
   140004955:	pop    r15
   140004957:	pop    r14
   140004959:	pop    r13
   14000495b:	pop    r12
   14000495d:	pop    rdi
   14000495e:	pop    rsi
   14000495f:	pop    rbp
   140004960:	pop    rbx
   140004961:	ret    
   140004962:	int3   
   140004963:	int3   
   140004964:	int3   
   140004965:	int3   
   140004966:	int3   
   140004967:	int3   
   140004968:	int3   
   140004969:	int3   
   14000496a:	int3   
   14000496b:	int3   
   14000496c:	int3   
   14000496d:	int3   
   14000496e:	int3   
   14000496f:	int3   
   140004970:	mov    QWORD PTR [rsp+0x10],rbx
   140004975:	push   rdi
   140004976:	sub    rsp,0x30
   14000497a:	mov    rbx,rdx
   14000497d:	mov    rdi,rcx
   140004980:	lea    r8,[rip+0x111d5]        # 0x140015b5c
   140004987:	lea    rdx,[rip+0x111c2]        # 0x140015b50
   14000498e:	lea    rcx,[rsp+0x40]
   140004993:	xor    r9d,r9d
   140004996:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000499e:	call   QWORD PTR [rip+0xfa2c]        # 0x1400143d0
   1400049a4:	mov    rcx,rbx
   1400049a7:	mov    rdx,rax
   1400049aa:	call   QWORD PTR [rip+0x10c60]        # 0x140015610
   1400049b0:	lea    rcx,[rsp+0x40]
   1400049b5:	call   QWORD PTR [rip+0xfb8d]        # 0x140014548
   1400049bb:	lea    r8,[rip+0x1117e]        # 0x140015b40
   1400049c2:	lea    rdx,[rip+0x11187]        # 0x140015b50
   1400049c9:	lea    rcx,[rsp+0x40]
   1400049ce:	xor    r9d,r9d
   1400049d1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400049d9:	call   QWORD PTR [rip+0xf9f1]        # 0x1400143d0
   1400049df:	mov    rcx,QWORD PTR [rdi+0x10]
   1400049e3:	mov    rdx,rax
   1400049e6:	call   QWORD PTR [rip+0x10a74]        # 0x140015460
   1400049ec:	lea    rcx,[rsp+0x40]
   1400049f1:	call   QWORD PTR [rip+0xfb51]        # 0x140014548
   1400049f7:	lea    r8,[rip+0x1113e]        # 0x140015b3c
   1400049fe:	lea    rdx,[rip+0x1114b]        # 0x140015b50
   140004a05:	lea    rcx,[rsp+0x40]
   140004a0a:	xor    r9d,r9d
   140004a0d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140004a15:	call   QWORD PTR [rip+0xf9b5]        # 0x1400143d0
   140004a1b:	mov    rcx,QWORD PTR [rdi+0x28]
   140004a1f:	mov    rdx,rax
   140004a22:	call   QWORD PTR [rip+0x10a40]        # 0x140015468
   140004a28:	lea    rcx,[rsp+0x40]
   140004a2d:	call   QWORD PTR [rip+0xfb15]        # 0x140014548
   140004a33:	mov    rbx,QWORD PTR [rsp+0x48]
   140004a38:	add    rsp,0x30
   140004a3c:	pop    rdi
   140004a3d:	ret    
   140004a3e:	int3   
   140004a3f:	int3   
   140004a40:	mov    QWORD PTR [rsp+0x10],rbx
   140004a45:	mov    QWORD PTR [rsp+0x20],rbp
   140004a4a:	push   rsi
   140004a4b:	push   rdi
   140004a4c:	push   r12
   140004a4e:	sub    rsp,0x40
   140004a52:	mov    rsi,rdx
   140004a55:	mov    rdi,rcx
   140004a58:	lea    rdx,[rsp+0x70]
   140004a5d:	mov    rcx,rsi
   140004a60:	call   QWORD PTR [rip+0xfaa2]        # 0x140014508
   140004a66:	lea    rcx,[rsp+0x70]
   140004a6b:	mov    r8,QWORD PTR [rax]
   140004a6e:	cmp    DWORD PTR [r8+0x4],0x0
   140004a73:	sete   bl
   140004a76:	call   QWORD PTR [rip+0xfacc]        # 0x140014548
   140004a7c:	test   bl,bl
   140004a7e:	je     0x140004aaf
   140004a80:	lea    rdx,[rip+0x110c9]        # 0x140015b50
   140004a87:	lea    rcx,[rsp+0x70]
   140004a8c:	mov    r8d,0x9
   140004a92:	call   QWORD PTR [rip+0xf920]        # 0x1400143b8
   140004a98:	mov    rcx,rsi
   140004a9b:	mov    rdx,rax
   140004a9e:	call   QWORD PTR [rip+0xf91c]        # 0x1400143c0
   140004aa4:	lea    rcx,[rsp+0x70]
   140004aa9:	call   QWORD PTR [rip+0xfa99]        # 0x140014548
   140004aaf:	lea    rdx,[rsp+0x70]
   140004ab4:	mov    rcx,rsi
   140004ab7:	mov    DWORD PTR [rsp+0x70],0x1a1
   140004abf:	mov    DWORD PTR [rsp+0x74],0xf2
   140004ac7:	call   QWORD PTR [rip+0x1090b]        # 0x1400153d8
   140004acd:	mov    ecx,0x20
   140004ad2:	call   0x140012892
   140004ad7:	xor    ebp,ebp
   140004ad9:	mov    rbx,rax
   140004adc:	test   rax,rax
   140004adf:	je     0x140004b04
   140004ae1:	mov    rdx,rsi
   140004ae4:	mov    rcx,rax
   140004ae7:	call   QWORD PTR [rip+0x108f3]        # 0x1400153e0
   140004aed:	lea    r11,[rip+0x11834]        # 0x140016328
   140004af4:	lea    rax,[rip+0x1179d]        # 0x140016298
   140004afb:	mov    QWORD PTR [rbx],r11
   140004afe:	mov    QWORD PTR [rbx+0x10],rax
   140004b02:	jmp    0x140004b07
   140004b04:	mov    rbx,rbp
   140004b07:	lea    rdx,[rip+0x1176a]        # 0x140016278
   140004b0e:	lea    rcx,[rsp+0x70]
   140004b13:	mov    r8d,0xa
   140004b19:	mov    QWORD PTR [rdi],rbx
   140004b1c:	call   QWORD PTR [rip+0xf896]        # 0x1400143b8
   140004b22:	mov    rcx,QWORD PTR [rdi]
   140004b25:	mov    rdx,rax
   140004b28:	call   QWORD PTR [rip+0xf892]        # 0x1400143c0
   140004b2e:	lea    rcx,[rsp+0x70]
   140004b33:	call   QWORD PTR [rip+0xfa0f]        # 0x140014548
   140004b39:	mov    ecx,0x30
   140004b3e:	call   0x140012892
   140004b43:	lea    r12,[rip+0x116ae]        # 0x1400161f8
   140004b4a:	mov    rbx,rax
   140004b4d:	test   rax,rax
   140004b50:	je     0x140004b70
   140004b52:	mov    edx,0x14
   140004b57:	mov    rcx,rax
   140004b5a:	mov    DWORD PTR [rsp+0x20],ebp
   140004b5e:	lea    r9d,[rdx-0x13]
   140004b62:	mov    r8d,edx
   140004b65:	call   QWORD PTR [rip+0x1087d]        # 0x1400153e8
   140004b6b:	mov    QWORD PTR [rbx],r12
   140004b6e:	jmp    0x140004b73
   140004b70:	mov    rbx,rbp
   140004b73:	mov    rcx,QWORD PTR [rdi]
   140004b76:	mov    DWORD PTR [rsp+0x30],ebp
   140004b7a:	mov    r9d,0x2
   140004b80:	xor    r8d,r8d
   140004b83:	mov    rdx,rbx
   140004b86:	mov    DWORD PTR [rsp+0x28],0x1
   140004b8e:	mov    QWORD PTR [rdi+0x8],rbx
   140004b92:	mov    DWORD PTR [rsp+0x20],0x1
   140004b9a:	call   QWORD PTR [rip+0x10850]        # 0x1400153f0
   140004ba0:	mov    ecx,0x30
   140004ba5:	call   0x140012892
   140004baa:	mov    rbx,rax
   140004bad:	test   rax,rax
   140004bb0:	je     0x140004bd8
   140004bb2:	mov    r8d,ebp
   140004bb5:	mov    rdx,rsi
   140004bb8:	mov    rcx,rax
   140004bbb:	call   QWORD PTR [rip+0x10837]        # 0x1400153f8
   140004bc1:	lea    r11,[rip+0x114c0]        # 0x140016088
   140004bc8:	lea    rax,[rip+0x11479]        # 0x140016048
   140004bcf:	mov    QWORD PTR [rbx],r11
   140004bd2:	mov    QWORD PTR [rbx+0x10],rax
   140004bd6:	jmp    0x140004bdb
   140004bd8:	mov    rbx,rbp
   140004bdb:	lea    rdx,[rip+0x11456]        # 0x140016038
   140004be2:	lea    rcx,[rsp+0x70]
   140004be7:	mov    r8d,0x5
   140004bed:	mov    QWORD PTR [rdi+0x10],rbx
   140004bf1:	call   QWORD PTR [rip+0xf7c1]        # 0x1400143b8
   140004bf7:	mov    rcx,QWORD PTR [rdi+0x10]
   140004bfb:	mov    rdx,rax
   140004bfe:	call   QWORD PTR [rip+0xf7bc]        # 0x1400143c0
   140004c04:	lea    rcx,[rsp+0x70]
   140004c09:	call   QWORD PTR [rip+0xf939]        # 0x140014548
   140004c0f:	lea    rcx,[rsp+0x60]
   140004c14:	mov    edx,0x1
   140004c19:	mov    DWORD PTR [rsp+0x60],0x540000
   140004c21:	call   QWORD PTR [rip+0x107d9]        # 0x140015400
   140004c27:	lea    rcx,[rsp+0x60]
   140004c2c:	xor    edx,edx
   140004c2e:	call   QWORD PTR [rip+0x107d4]        # 0x140015408
   140004c34:	lea    rcx,[rsp+0x60]
   140004c39:	xor    edx,edx
   140004c3b:	call   QWORD PTR [rip+0x107cf]        # 0x140015410
   140004c41:	mov    rcx,QWORD PTR [rdi+0x10]
   140004c45:	lea    rdx,[rsp+0x70]
   140004c4a:	call   QWORD PTR [rip+0x107c8]        # 0x140015418
   140004c50:	mov    edx,DWORD PTR [rsp+0x60]
   140004c54:	mov    rcx,QWORD PTR [rdi+0x10]
   140004c58:	mov    r8d,DWORD PTR [rax]
   140004c5b:	and    r8d,0xe0000000
   140004c62:	xor    r8d,edx
   140004c65:	and    r8d,0x20000000
   140004c6c:	xor    edx,r8d
   140004c6f:	mov    DWORD PTR [rsp+0x60],edx
   140004c73:	call   QWORD PTR [rip+0x107a7]        # 0x140015420
   140004c79:	mov    rdx,QWORD PTR [rdi+0x10]
   140004c7d:	mov    rcx,QWORD PTR [rdi]
   140004c80:	xor    r9d,r9d
   140004c83:	mov    DWORD PTR [rsp+0x30],ebp
   140004c87:	lea    r8d,[r9+0x1]
   140004c8b:	mov    DWORD PTR [rsp+0x28],0x1
   140004c93:	mov    DWORD PTR [rsp+0x20],0x1
   140004c9b:	call   QWORD PTR [rip+0x10787]        # 0x140015428
   140004ca1:	mov    ecx,0x20
   140004ca6:	call   0x140012892
   140004cab:	mov    rbx,rax
   140004cae:	test   rax,rax
   140004cb1:	je     0x140004cd3
   140004cb3:	mov    rcx,rax
   140004cb6:	call   QWORD PTR [rip+0x10774]        # 0x140015430
   140004cbc:	lea    r11,[rip+0x112f5]        # 0x140015fb8
   140004cc3:	lea    rax,[rip+0x1125e]        # 0x140015f28
   140004cca:	mov    QWORD PTR [rbx],r11
   140004ccd:	mov    QWORD PTR [rbx+0x10],rax
   140004cd1:	jmp    0x140004cd6
   140004cd3:	mov    rbx,rbp
   140004cd6:	xor    edx,edx
   140004cd8:	mov    rcx,rbx
   140004cdb:	mov    QWORD PTR [rdi+0x18],rbx
   140004cdf:	call   QWORD PTR [rip+0x10753]        # 0x140015438
   140004ce5:	lea    rdx,[rip+0x11224]        # 0x140015f10
   140004cec:	lea    rcx,[rsp+0x70]
   140004cf1:	mov    r8d,0xa
   140004cf7:	call   QWORD PTR [rip+0xf6bb]        # 0x1400143b8
   140004cfd:	mov    rcx,QWORD PTR [rdi+0x18]
   140004d01:	mov    rdx,rax
   140004d04:	call   QWORD PTR [rip+0xf6b6]        # 0x1400143c0
   140004d0a:	lea    rcx,[rsp+0x70]
   140004d0f:	call   QWORD PTR [rip+0xf833]        # 0x140014548
   140004d15:	mov    ecx,0x30
   140004d1a:	call   0x140012892
   140004d1f:	mov    rbx,rax
   140004d22:	test   rax,rax
   140004d25:	je     0x140004d4a
   140004d27:	mov    rdx,rsi
   140004d2a:	mov    rcx,rax
   140004d2d:	call   QWORD PTR [rip+0x1070d]        # 0x140015440
   140004d33:	lea    r11,[rip+0x1106e]        # 0x140015da8
   140004d3a:	lea    rax,[rip+0x11027]        # 0x140015d68
   140004d41:	mov    QWORD PTR [rbx],r11
   140004d44:	mov    QWORD PTR [rbx+0x10],rax
   140004d48:	jmp    0x140004d4d
   140004d4a:	mov    rbx,rbp
   140004d4d:	lea    rdx,[rip+0x10ff4]        # 0x140015d48
   140004d54:	lea    rcx,[rsp+0x70]
   140004d59:	mov    r8d,0xc
   140004d5f:	mov    QWORD PTR [rdi+0x20],rbx
   140004d63:	call   QWORD PTR [rip+0xf64f]        # 0x1400143b8
   140004d69:	mov    rcx,QWORD PTR [rdi+0x20]
   140004d6d:	mov    rdx,rax
   140004d70:	call   QWORD PTR [rip+0xf64a]        # 0x1400143c0
   140004d76:	lea    rcx,[rsp+0x70]
   140004d7b:	call   QWORD PTR [rip+0xf7c7]        # 0x140014548
   140004d81:	mov    rdx,QWORD PTR [rdi+0x20]
   140004d85:	mov    rcx,QWORD PTR [rdi+0x18]
   140004d89:	mov    r9d,ebp
   140004d8c:	xor    r8d,r8d
   140004d8f:	call   QWORD PTR [rip+0x106b3]        # 0x140015448
   140004d95:	mov    ecx,0x30
   140004d9a:	call   0x140012892
   140004d9f:	mov    rbx,rax
   140004da2:	test   rax,rax
   140004da5:	je     0x140004dca
   140004da7:	mov    rdx,rsi
   140004daa:	mov    rcx,rax
   140004dad:	call   QWORD PTR [rip+0x1069d]        # 0x140015450
   140004db3:	lea    r11,[rip+0x10e0e]        # 0x140015bc8
   140004dba:	lea    rax,[rip+0x10dc7]        # 0x140015b88
   140004dc1:	mov    QWORD PTR [rbx],r11
   140004dc4:	mov    QWORD PTR [rbx+0x10],rax
   140004dc8:	jmp    0x140004dcd
   140004dca:	mov    rbx,rbp
   140004dcd:	lea    rdx,[rip+0x10d94]        # 0x140015b68
   140004dd4:	lea    rcx,[rsp+0x70]
   140004dd9:	mov    r8d,0xc
   140004ddf:	mov    QWORD PTR [rdi+0x28],rbx
   140004de3:	call   QWORD PTR [rip+0xf5cf]        # 0x1400143b8
   140004de9:	mov    rcx,QWORD PTR [rdi+0x28]
   140004ded:	mov    rdx,rax
   140004df0:	call   QWORD PTR [rip+0xf5ca]        # 0x1400143c0
   140004df6:	lea    rcx,[rsp+0x70]
   140004dfb:	call   QWORD PTR [rip+0xf747]        # 0x140014548
   140004e01:	mov    rdx,QWORD PTR [rdi+0x28]
   140004e05:	mov    rcx,QWORD PTR [rdi+0x18]
   140004e09:	mov    r9d,ebp
   140004e0c:	xor    r8d,r8d
   140004e0f:	call   QWORD PTR [rip+0x10633]        # 0x140015448
   140004e15:	mov    rdx,QWORD PTR [rdi+0x18]
   140004e19:	mov    rcx,QWORD PTR [rdi]
   140004e1c:	mov    r9d,0x1
   140004e22:	mov    DWORD PTR [rsp+0x30],ebp
   140004e26:	mov    DWORD PTR [rsp+0x28],0x2
   140004e2e:	mov    r8d,r9d
   140004e31:	mov    DWORD PTR [rsp+0x20],0x1
   140004e39:	call   QWORD PTR [rip+0x10619]        # 0x140015458
   140004e3f:	mov    ecx,0x30
   140004e44:	call   0x140012892
   140004e49:	mov    rbx,rax
   140004e4c:	test   rax,rax
   140004e4f:	je     0x140004e74
   140004e51:	mov    edx,0x14
   140004e56:	mov    rcx,rax
   140004e59:	mov    DWORD PTR [rsp+0x20],0x7
   140004e61:	lea    r9d,[rdx-0x13]
   140004e65:	lea    r8d,[rdx+0xb]
   140004e69:	call   QWORD PTR [rip+0x10579]        # 0x1400153e8
   140004e6f:	mov    QWORD PTR [rbx],r12
   140004e72:	jmp    0x140004e77
   140004e74:	mov    rbx,rbp
   140004e77:	mov    rcx,QWORD PTR [rdi]
   140004e7a:	mov    r9d,0x1
   140004e80:	mov    DWORD PTR [rsp+0x30],ebp
   140004e84:	lea    r8d,[r9+0x1]
   140004e88:	mov    rdx,rbx
   140004e8b:	mov    DWORD PTR [rsp+0x28],0x1
   140004e93:	mov    QWORD PTR [rdi+0x30],rbx
   140004e97:	mov    DWORD PTR [rsp+0x20],0x1
   140004e9f:	call   QWORD PTR [rip+0x1054b]        # 0x1400153f0
   140004ea5:	mov    rdx,rsi
   140004ea8:	mov    rcx,rdi
   140004eab:	call   0x140004970
   140004eb0:	mov    rcx,rsi
   140004eb3:	call   QWORD PTR [rip+0xf50f]        # 0x1400143c8
   140004eb9:	mov    rbx,QWORD PTR [rsp+0x68]
   140004ebe:	mov    rbp,QWORD PTR [rsp+0x78]
   140004ec3:	add    rsp,0x40
   140004ec7:	pop    r12
   140004ec9:	pop    rdi
   140004eca:	pop    rsi
   140004ecb:	ret    
   140004ecc:	int3   
   140004ecd:	int3   
   140004ece:	int3   
   140004ecf:	int3   
   140004ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ed5:	push   rdi
   140004ed6:	sub    rsp,0x20
   140004eda:	mov    ebx,edx
   140004edc:	mov    rdi,rcx
   140004edf:	call   QWORD PTR [rip+0xf7b3]        # 0x140014698
   140004ee5:	test   bl,0x1
   140004ee8:	je     0x140004ef2
   140004eea:	mov    rcx,rdi
   140004eed:	call   0x140012898
   140004ef2:	mov    rax,rdi
   140004ef5:	mov    rbx,QWORD PTR [rsp+0x30]
   140004efa:	add    rsp,0x20
   140004efe:	pop    rdi
   140004eff:	ret    
   140004f00:	mov    QWORD PTR [rsp+0x8],rbx
   140004f05:	push   rdi
   140004f06:	sub    rsp,0x20
   140004f0a:	mov    ebx,edx
   140004f0c:	mov    rdi,rcx
   140004f0f:	call   QWORD PTR [rip+0xf78b]        # 0x1400146a0
   140004f15:	test   bl,0x1
   140004f18:	je     0x140004f22
   140004f1a:	mov    rcx,rdi
   140004f1d:	call   0x140012898
   140004f22:	mov    rax,rdi
   140004f25:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f2a:	add    rsp,0x20
   140004f2e:	pop    rdi
   140004f2f:	ret    
   140004f30:	mov    QWORD PTR [rsp+0x8],rbx
   140004f35:	push   rdi
   140004f36:	sub    rsp,0x20
   140004f3a:	mov    ebx,edx
   140004f3c:	mov    rdi,rcx
   140004f3f:	call   QWORD PTR [rip+0xf763]        # 0x1400146a8
   140004f45:	test   bl,0x1
   140004f48:	je     0x140004f52
   140004f4a:	mov    rcx,rdi
   140004f4d:	call   0x140012898
   140004f52:	mov    rax,rdi
   140004f55:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f5a:	add    rsp,0x20
   140004f5e:	pop    rdi
   140004f5f:	ret    
   140004f60:	mov    QWORD PTR [rsp+0x8],rbx
   140004f65:	push   rdi
   140004f66:	sub    rsp,0x20
   140004f6a:	mov    ebx,edx
   140004f6c:	mov    rdi,rcx
   140004f6f:	call   QWORD PTR [rip+0xf73b]        # 0x1400146b0
   140004f75:	test   bl,0x1
   140004f78:	je     0x140004f82
   140004f7a:	mov    rcx,rdi
   140004f7d:	call   0x140012898
   140004f82:	mov    rax,rdi
   140004f85:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f8a:	add    rsp,0x20
   140004f8e:	pop    rdi
   140004f8f:	ret    
   140004f90:	mov    QWORD PTR [rsp+0x8],rbx
   140004f95:	push   rdi
   140004f96:	sub    rsp,0x20
   140004f9a:	mov    ebx,edx
   140004f9c:	mov    rdi,rcx
   140004f9f:	call   QWORD PTR [rip+0xf713]        # 0x1400146b8
   140004fa5:	test   bl,0x1
   140004fa8:	je     0x140004fb2
   140004faa:	mov    rcx,rdi
   140004fad:	call   0x140012898
   140004fb2:	mov    rax,rdi
   140004fb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140004fba:	add    rsp,0x20
   140004fbe:	pop    rdi
   140004fbf:	ret    
   140004fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140004fc5:	push   rdi
   140004fc6:	sub    rsp,0x20
   140004fca:	mov    ebx,edx
   140004fcc:	mov    rdi,rcx
   140004fcf:	call   QWORD PTR [rip+0xf6eb]        # 0x1400146c0
   140004fd5:	test   bl,0x1
   140004fd8:	je     0x140004fe2
   140004fda:	mov    rcx,rdi
   140004fdd:	call   0x140012898
   140004fe2:	mov    rax,rdi
   140004fe5:	mov    rbx,QWORD PTR [rsp+0x30]
   140004fea:	add    rsp,0x20
   140004fee:	pop    rdi
   140004fef:	ret    
   140004ff0:	sub    rcx,0x10
   140004ff4:	jmp    0x140004fc0
   140004ff9:	int3   
   140004ffa:	int3   
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	sub    rcx,0x10
   140005004:	jmp    0x140004f00
   140005009:	int3   
   14000500a:	int3   
   14000500b:	int3   
   14000500c:	int3   
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	sub    rcx,0x10
   140005014:	jmp    0x140004f60
   140005019:	int3   
   14000501a:	int3   
   14000501b:	int3   
   14000501c:	int3   
   14000501d:	int3   
   14000501e:	int3   
   14000501f:	int3   
   140005020:	sub    rcx,0x10
   140005024:	jmp    0x140004f30
   140005029:	int3   
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	sub    rcx,0x10
   140005034:	jmp    0x140004f90
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	int3   
   14000503d:	int3   
   14000503e:	int3   
   14000503f:	int3   
   140005040:	mov    QWORD PTR [rsp+0x10],rbx
   140005045:	push   rdi
   140005046:	sub    rsp,0x40
   14000504a:	mov    rdi,rdx
   14000504d:	mov    rdx,r8
   140005050:	mov    rbx,rcx
   140005053:	call   QWORD PTR [rip+0xf687]        # 0x1400146e0
   140005059:	lea    r11,[rip+0x11438]        # 0x140016498
   140005060:	lea    rax,[rip+0x113f1]        # 0x140016458
   140005067:	lea    r8,[rip+0x113d2]        # 0x140016440
   14000506e:	lea    rdx,[rsp+0x50]
   140005073:	lea    rcx,[rip+0x245fe]        # 0x140029678
   14000507a:	xor    r9d,r9d
   14000507d:	mov    QWORD PTR [rbx],r11
   140005080:	mov    QWORD PTR [rbx+0x10],rax
   140005084:	mov    QWORD PTR [rbx+0x68],rdi
   140005088:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005090:	call   QWORD PTR [rip+0xf4c2]        # 0x140014558
   140005096:	lea    rdx,[rsp+0x50]
   14000509b:	mov    rcx,rbx
   14000509e:	call   QWORD PTR [rip+0xf634]        # 0x1400146d8
   1400050a4:	lea    rcx,[rsp+0x50]
   1400050a9:	call   QWORD PTR [rip+0xf499]        # 0x140014548
   1400050af:	lea    r8,[rip+0x1131a]        # 0x1400163d0
   1400050b6:	lea    rdx,[rsp+0x50]
   1400050bb:	lea    rcx,[rip+0x245b6]        # 0x140029678
   1400050c2:	xor    r9d,r9d
   1400050c5:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400050cd:	call   QWORD PTR [rip+0xf485]        # 0x140014558
   1400050d3:	lea    rdx,[rsp+0x50]
   1400050d8:	mov    rcx,rbx
   1400050db:	call   QWORD PTR [rip+0xf5ef]        # 0x1400146d0
   1400050e1:	lea    rcx,[rsp+0x50]
   1400050e6:	call   QWORD PTR [rip+0xf45c]        # 0x140014548
   1400050ec:	lea    rcx,[rbx+0x30]
   1400050f0:	mov    rdx,rbx
   1400050f3:	call   0x140004a40
   1400050f8:	mov    rdx,QWORD PTR [rbx+0x58]
   1400050fc:	lea    rax,[rip+0x112b5]        # 0x1400163b8
   140005103:	lea    r8,[rip+0x1129e]        # 0x1400163a8
   14000510a:	lea    rcx,[rsp+0x50]
   14000510f:	mov    r9,rbx
   140005112:	mov    DWORD PTR [rsp+0x28],0x0
   14000511a:	mov    QWORD PTR [rsp+0x20],rax
   14000511f:	call   QWORD PTR [rip+0xf343]        # 0x140014468
   140005125:	lea    rcx,[rsp+0x50]
   14000512a:	call   QWORD PTR [rip+0xf340]        # 0x140014470
   140005130:	or     rcx,0xffffffffffffffff
   140005134:	lea    rdx,[rip+0x10635]        # 0x140015770
   14000513b:	mov    QWORD PTR [rsp+0x38],rdx
   140005140:	mov    rdi,rdx
   140005143:	xor    eax,eax
   140005145:	repnz scas al,BYTE PTR es:[rdi]
   140005147:	lea    rdx,[rsp+0x30]
   14000514c:	not    rcx
   14000514f:	dec    rcx
   140005152:	mov    DWORD PTR [rsp+0x30],ecx
   140005156:	lea    rcx,[rsp+0x50]
   14000515b:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140005160:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140005166:	call   QWORD PTR [rip+0xf3d4]        # 0x140014540
   14000516c:	mov    r8,QWORD PTR [rbx+0x50]
   140005170:	lea    rdx,[rsp+0x50]
   140005175:	xor    r9d,r9d
   140005178:	mov    rcx,rbx
   14000517b:	mov    QWORD PTR [rsp+0x20],0x0
   140005184:	call   QWORD PTR [rip+0xf53e]        # 0x1400146c8
   14000518a:	lea    rcx,[rsp+0x50]
   14000518f:	call   QWORD PTR [rip+0xf3b3]        # 0x140014548
   140005195:	mov    rax,rbx
   140005198:	mov    rbx,QWORD PTR [rsp+0x58]
   14000519d:	add    rsp,0x40
   1400051a1:	pop    rdi
   1400051a2:	ret    
   1400051a3:	int3   
   1400051a4:	int3   
   1400051a5:	int3   
   1400051a6:	int3   
   1400051a7:	int3   
   1400051a8:	int3   
   1400051a9:	int3   
   1400051aa:	int3   
   1400051ab:	int3   
   1400051ac:	int3   
   1400051ad:	int3   
   1400051ae:	int3   
   1400051af:	int3   
   1400051b0:	rex push rbx
   1400051b2:	sub    rsp,0x50
   1400051b6:	mov    rbx,rcx
   1400051b9:	lea    r8,[rip+0x11478]        # 0x140016638
   1400051c0:	lea    rdx,[rsp+0x78]
   1400051c5:	lea    rcx,[rip+0x244ac]        # 0x140029678
   1400051cc:	xor    r9d,r9d
   1400051cf:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400051d7:	call   QWORD PTR [rip+0xf37b]        # 0x140014558
   1400051dd:	lea    r8,[rip+0x11444]        # 0x140016628
   1400051e4:	lea    rdx,[rsp+0x70]
   1400051e9:	lea    rcx,[rip+0x24488]        # 0x140029678
   1400051f0:	xor    r9d,r9d
   1400051f3:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400051fb:	call   QWORD PTR [rip+0xf357]        # 0x140014558
   140005201:	lea    rcx,[rsp+0x40]
   140005206:	call   QWORD PTR [rip+0xf1e4]        # 0x1400143f0
   14000520c:	mov    DWORD PTR [rsp+0x30],0x0
   140005214:	lea    r8,[rsp+0x70]
   140005219:	mov    r9,rax
   14000521c:	lea    rax,[rsp+0x78]
   140005221:	lea    rcx,[rsp+0x68]
   140005226:	mov    rdx,rbx
   140005229:	mov    QWORD PTR [rsp+0x28],0x0
   140005232:	mov    QWORD PTR [rsp+0x20],rax
   140005237:	call   QWORD PTR [rip+0xf503]        # 0x140014740
   14000523d:	lea    rcx,[rsp+0x70]
   140005242:	call   QWORD PTR [rip+0xf300]        # 0x140014548
   140005248:	lea    rcx,[rsp+0x40]
   14000524d:	call   QWORD PTR [rip+0xf2f5]        # 0x140014548
   140005253:	lea    rcx,[rsp+0x78]
   140005258:	call   QWORD PTR [rip+0xf2ea]        # 0x140014548
   14000525e:	mov    r11,QWORD PTR [rsp+0x68]
   140005263:	cmp    DWORD PTR [r11+0x4],0x0
   140005268:	je     0x140005279
   14000526a:	mov    rcx,QWORD PTR [rbx+0x50]
   14000526e:	lea    rdx,[rsp+0x68]
   140005273:	call   QWORD PTR [rip+0xf4bf]        # 0x140014738
   140005279:	lea    rcx,[rsp+0x68]
   14000527e:	call   QWORD PTR [rip+0xf2c4]        # 0x140014548
   140005284:	add    rsp,0x50
   140005288:	pop    rbx
   140005289:	ret    
   14000528a:	int3   
   14000528b:	int3   
   14000528c:	int3   
   14000528d:	int3   
   14000528e:	int3   
   14000528f:	int3   
   140005290:	rex push rdi
   140005292:	sub    rsp,0x50
   140005296:	mov    rdi,rcx
   140005299:	mov    rcx,QWORD PTR [rcx+0x50]
   14000529d:	lea    rdx,[rsp+0x68]
   1400052a2:	call   QWORD PTR [rip+0xf4a8]        # 0x140014750
   1400052a8:	lea    rdx,[rsp+0x60]
   1400052ad:	mov    rcx,rax
   1400052b0:	call   QWORD PTR [rip+0xf0a2]        # 0x140014358
   1400052b6:	lea    rcx,[rsp+0x30]
   1400052bb:	mov    rdx,rax
   1400052be:	call   QWORD PTR [rip+0xf09c]        # 0x140014360
   1400052c4:	lea    rcx,[rsp+0x60]
   1400052c9:	call   QWORD PTR [rip+0xf279]        # 0x140014548
   1400052cf:	lea    rcx,[rsp+0x68]
   1400052d4:	call   QWORD PTR [rip+0xf26e]        # 0x140014548
   1400052da:	lea    rcx,[rsp+0x30]
   1400052df:	call   QWORD PTR [rip+0xf083]        # 0x140014368
   1400052e5:	test   al,al
   1400052e7:	je     0x140005460
   1400052ed:	lea    rcx,[rsp+0x30]
   1400052f2:	mov    edx,0x1
   1400052f7:	call   QWORD PTR [rip+0xf073]        # 0x140014370
   1400052fd:	test   al,al
   1400052ff:	je     0x140005460
   140005305:	lea    rcx,[rsp+0x60]
   14000530a:	mov    edx,0x3
   14000530f:	call   QWORD PTR [rip+0xf29b]        # 0x1400145b0
   140005315:	mov    rcx,rax
   140005318:	call   QWORD PTR [rip+0xf29a]        # 0x1400145b8
   14000531e:	lea    rcx,[rsp+0x60]
   140005323:	call   QWORD PTR [rip+0xf297]        # 0x1400145c0
   140005329:	lea    rdx,[rsp+0x60]
   14000532e:	lea    rcx,[rsp+0x30]
   140005333:	call   QWORD PTR [rip+0xf03f]        # 0x140014378
   140005339:	mov    rcx,QWORD PTR [rdi+0x68]
   14000533d:	mov    rdx,rax
   140005340:	call   0x14000da80
   140005345:	lea    rcx,[rsp+0x60]
   14000534a:	call   QWORD PTR [rip+0xf030]        # 0x140014380
   140005350:	call   QWORD PTR [rip+0xf272]        # 0x1400145c8
   140005356:	mov    rcx,QWORD PTR [rdi+0x68]
   14000535a:	call   QWORD PTR [rip+0xf028]        # 0x140014388
   140005360:	test   eax,eax
   140005362:	je     0x14000544d
   140005368:	lea    r8,[rip+0x11339]        # 0x1400166a8
   14000536f:	lea    rdx,[rsp+0x70]
   140005374:	lea    rcx,[rip+0x242fd]        # 0x140029678
   14000537b:	xor    r9d,r9d
   14000537e:	mov    QWORD PTR [rsp+0x48],rbx
   140005383:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000538b:	call   QWORD PTR [rip+0xf1c7]        # 0x140014558
   140005391:	lea    r8,[rip+0x112f8]        # 0x140016690
   140005398:	lea    rdx,[rsp+0x68]
   14000539d:	lea    rcx,[rip+0x242d4]        # 0x140029678
   1400053a4:	xor    r9d,r9d
   1400053a7:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400053af:	call   QWORD PTR [rip+0xf1a3]        # 0x140014558
   1400053b5:	lea    rcx,[rsp+0x60]
   1400053ba:	mov    dl,0x20
   1400053bc:	call   QWORD PTR [rip+0xf056]        # 0x140014418
   1400053c2:	mov    rcx,QWORD PTR [rdi+0x68]
   1400053c6:	mov    rbx,rax
   1400053c9:	call   QWORD PTR [rip+0xefc1]        # 0x140014390
   1400053cf:	lea    rdx,[rsp+0x78]
   1400053d4:	mov    r8,rax
   1400053d7:	movzx  eax,WORD PTR [rbx]
   1400053da:	lea    rcx,[rsp+0x70]
   1400053df:	mov    WORD PTR [rsp+0x28],ax
   1400053e4:	xor    r9d,r9d
   1400053e7:	mov    DWORD PTR [rsp+0x20],0xa
   1400053ef:	call   QWORD PTR [rip+0xefa3]        # 0x140014398
   1400053f5:	lea    rdx,[rsp+0x68]
   1400053fa:	mov    r9d,0x400
   140005400:	mov    rcx,rdi
   140005403:	mov    r8,rax
   140005406:	mov    DWORD PTR [rsp+0x20],0x0
   14000540e:	call   QWORD PTR [rip+0xf334]        # 0x140014748
   140005414:	lea    rcx,[rsp+0x68]
   140005419:	call   QWORD PTR [rip+0xf129]        # 0x140014548
   14000541f:	lea    rcx,[rsp+0x78]
   140005424:	call   QWORD PTR [rip+0xf11e]        # 0x140014548
   14000542a:	lea    rcx,[rsp+0x70]
   14000542f:	call   QWORD PTR [rip+0xf113]        # 0x140014548
   140005435:	lea    rcx,[rsp+0x30]
   14000543a:	call   QWORD PTR [rip+0xef60]        # 0x1400143a0
   140005440:	mov    rbx,QWORD PTR [rsp+0x48]
   140005445:	xor    al,al
   140005447:	add    rsp,0x50
   14000544b:	pop    rdi
   14000544c:	ret    
   14000544d:	lea    rcx,[rsp+0x30]
   140005452:	call   QWORD PTR [rip+0xef48]        # 0x1400143a0
   140005458:	mov    al,0x1
   14000545a:	add    rsp,0x50
   14000545e:	pop    rdi
   14000545f:	ret    
   140005460:	lea    r8,[rip+0x11201]        # 0x140016668
   140005467:	lea    rdx,[rsp+0x68]
   14000546c:	lea    rcx,[rip+0x24205]        # 0x140029678
   140005473:	xor    r9d,r9d
   140005476:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000547e:	call   QWORD PTR [rip+0xf0d4]        # 0x140014558
   140005484:	lea    r8,[rip+0x111cd]        # 0x140016658
   14000548b:	lea    rdx,[rsp+0x60]
   140005490:	lea    rcx,[rip+0x241e1]        # 0x140029678
   140005497:	xor    r9d,r9d
   14000549a:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400054a2:	call   QWORD PTR [rip+0xf0b0]        # 0x140014558
   1400054a8:	lea    r8,[rsp+0x68]
   1400054ad:	lea    rdx,[rsp+0x60]
   1400054b2:	mov    r9d,0x400
   1400054b8:	mov    rcx,rdi
   1400054bb:	mov    DWORD PTR [rsp+0x20],0x0
   1400054c3:	call   QWORD PTR [rip+0xf27f]        # 0x140014748
   1400054c9:	lea    rcx,[rsp+0x60]
   1400054ce:	call   QWORD PTR [rip+0xf074]        # 0x140014548
   1400054d4:	lea    rcx,[rsp+0x68]
   1400054d9:	call   QWORD PTR [rip+0xf069]        # 0x140014548
   1400054df:	lea    rcx,[rsp+0x30]
   1400054e4:	call   QWORD PTR [rip+0xeeb6]        # 0x1400143a0
   1400054ea:	xor    al,al
   1400054ec:	add    rsp,0x50
   1400054f0:	pop    rdi
   1400054f1:	ret    
   1400054f2:	int3   
   1400054f3:	int3   
   1400054f4:	int3   
   1400054f5:	int3   
   1400054f6:	int3   
   1400054f7:	int3   
   1400054f8:	int3   
   1400054f9:	int3   
   1400054fa:	int3   
   1400054fb:	int3   
   1400054fc:	int3   
   1400054fd:	int3   
   1400054fe:	int3   
   1400054ff:	int3   
   140005500:	mov    QWORD PTR [rsp+0x10],rbx
   140005505:	push   rdi
   140005506:	sub    rsp,0x30
   14000550a:	mov    rbx,rdx
   14000550d:	mov    rdi,rcx
   140005510:	lea    r8,[rip+0x10645]        # 0x140015b5c
   140005517:	lea    rdx,[rip+0x111ca]        # 0x1400166e8
   14000551e:	lea    rcx,[rsp+0x40]
   140005523:	xor    r9d,r9d
   140005526:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000552e:	call   QWORD PTR [rip+0xee9c]        # 0x1400143d0
   140005534:	mov    rcx,rbx
   140005537:	mov    rdx,rax
   14000553a:	call   QWORD PTR [rip+0x100d0]        # 0x140015610
   140005540:	lea    rcx,[rsp+0x40]
   140005545:	call   QWORD PTR [rip+0xeffd]        # 0x140014548
   14000554b:	lea    r8,[rip+0x11186]        # 0x1400166d8
   140005552:	lea    rdx,[rip+0x1118f]        # 0x1400166e8
   140005559:	lea    rcx,[rsp+0x40]
   14000555e:	xor    r9d,r9d
   140005561:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005569:	call   QWORD PTR [rip+0xee61]        # 0x1400143d0
   14000556f:	mov    rcx,QWORD PTR [rdi+0x8]
   140005573:	mov    rdx,rax
   140005576:	call   QWORD PTR [rip+0xfee4]        # 0x140015460
   14000557c:	lea    rcx,[rsp+0x40]
   140005581:	call   QWORD PTR [rip+0xefc1]        # 0x140014548
   140005587:	lea    r8,[rip+0x1113a]        # 0x1400166c8
   14000558e:	lea    rdx,[rip+0x11153]        # 0x1400166e8
   140005595:	lea    rcx,[rsp+0x40]
   14000559a:	xor    r9d,r9d
   14000559d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400055a5:	call   QWORD PTR [rip+0xee25]        # 0x1400143d0
   1400055ab:	mov    rcx,QWORD PTR [rdi+0x18]
   1400055af:	mov    rdx,rax
   1400055b2:	call   QWORD PTR [rip+0xfea8]        # 0x140015460
   1400055b8:	lea    rcx,[rsp+0x40]
   1400055bd:	call   QWORD PTR [rip+0xef85]        # 0x140014548
   1400055c3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400055c8:	add    rsp,0x30
   1400055cc:	pop    rdi
   1400055cd:	ret    
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400055d5:	push   rdi
   1400055d6:	sub    rsp,0x20
   1400055da:	mov    rdi,rcx
   1400055dd:	mov    DWORD PTR [rsp+0x30],0x0
   1400055e5:	mov    rcx,QWORD PTR [rcx+0x40]
   1400055e9:	lea    rdx,[rsp+0x38]
   1400055ee:	mov    ebx,0x1
   1400055f3:	call   QWORD PTR [rip+0xf157]        # 0x140014750
   1400055f9:	mov    rdx,QWORD PTR [rax]
   1400055fc:	cmp    DWORD PTR [rdx+0x4],0x0
   140005600:	je     0x140005624
   140005602:	mov    rcx,QWORD PTR [rdi+0x50]
   140005606:	lea    rdx,[rsp+0x30]
   14000560b:	mov    ebx,0x3
   140005610:	call   QWORD PTR [rip+0xf13a]        # 0x140014750
   140005616:	mov    rcx,QWORD PTR [rax]
   140005619:	cmp    DWORD PTR [rcx+0x4],0x0
   14000561d:	je     0x140005624
   14000561f:	xor    dil,dil
   140005622:	jmp    0x140005627
   140005624:	mov    dil,0x1
   140005627:	test   bl,0x2
   14000562a:	je     0x14000563a
   14000562c:	lea    rcx,[rsp+0x30]
   140005631:	and    ebx,0xfffffffd
   140005634:	call   QWORD PTR [rip+0xef0e]        # 0x140014548
   14000563a:	test   bl,0x1
   14000563d:	je     0x14000564a
   14000563f:	lea    rcx,[rsp+0x38]
   140005644:	call   QWORD PTR [rip+0xeefe]        # 0x140014548
   14000564a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000564f:	test   dil,dil
   140005652:	sete   al
   140005655:	add    rsp,0x20
   140005659:	pop    rdi
   14000565a:	ret    
   14000565b:	int3   
   14000565c:	int3   
   14000565d:	int3   
   14000565e:	int3   
   14000565f:	int3   
   140005660:	mov    QWORD PTR [rsp+0x10],rbx
   140005665:	mov    QWORD PTR [rsp+0x18],rbp
   14000566a:	mov    QWORD PTR [rsp+0x20],rsi
   14000566f:	push   rdi
   140005670:	push   r12
   140005672:	push   r13
   140005674:	push   r14
   140005676:	push   r15
   140005678:	sub    rsp,0x40
   14000567c:	mov    rdi,rdx
   14000567f:	mov    rsi,rcx
   140005682:	lea    rdx,[rsp+0x70]
   140005687:	mov    rcx,rdi
   14000568a:	call   QWORD PTR [rip+0xee78]        # 0x140014508
   140005690:	lea    rcx,[rsp+0x70]
   140005695:	mov    r8,QWORD PTR [rax]
   140005698:	cmp    DWORD PTR [r8+0x4],0x0
   14000569d:	sete   bl
   1400056a0:	call   QWORD PTR [rip+0xeea2]        # 0x140014548
   1400056a6:	test   bl,bl
   1400056a8:	je     0x1400056d9
   1400056aa:	lea    rdx,[rip+0x11037]        # 0x1400166e8
   1400056b1:	lea    rcx,[rsp+0x70]
   1400056b6:	mov    r8d,0xb
   1400056bc:	call   QWORD PTR [rip+0xecf6]        # 0x1400143b8
   1400056c2:	mov    rcx,rdi
   1400056c5:	mov    rdx,rax
   1400056c8:	call   QWORD PTR [rip+0xecf2]        # 0x1400143c0
   1400056ce:	lea    rcx,[rsp+0x70]
   1400056d3:	call   QWORD PTR [rip+0xee6f]        # 0x140014548
   1400056d9:	lea    rdx,[rsp+0x70]
   1400056de:	mov    rcx,rdi
   1400056e1:	mov    DWORD PTR [rsp+0x70],0x1a1
   1400056e9:	mov    DWORD PTR [rsp+0x74],0xf3
   1400056f1:	call   QWORD PTR [rip+0xfce1]        # 0x1400153d8
   1400056f7:	mov    ecx,0x20
   1400056fc:	call   0x140012892
   140005701:	xor    ebp,ebp
   140005703:	mov    rbx,rax
   140005706:	test   rax,rax
   140005709:	je     0x14000572e
   14000570b:	mov    rdx,rdi
   14000570e:	mov    rcx,rax
   140005711:	call   QWORD PTR [rip+0xfcc9]        # 0x1400153e0
   140005717:	lea    r11,[rip+0x10c0a]        # 0x140016328
   14000571e:	lea    rax,[rip+0x10b73]        # 0x140016298
   140005725:	mov    QWORD PTR [rbx],r11
   140005728:	mov    QWORD PTR [rbx+0x10],rax
   14000572c:	jmp    0x140005731
   14000572e:	mov    rbx,rbp
   140005731:	lea    rdx,[rip+0x10b40]        # 0x140016278
   140005738:	lea    rcx,[rsp+0x70]
   14000573d:	mov    r8d,0xa
   140005743:	mov    QWORD PTR [rsi],rbx
   140005746:	call   QWORD PTR [rip+0xec6c]        # 0x1400143b8
   14000574c:	mov    rcx,QWORD PTR [rsi]
   14000574f:	mov    rdx,rax
   140005752:	call   QWORD PTR [rip+0xec68]        # 0x1400143c0
   140005758:	lea    rcx,[rsp+0x70]
   14000575d:	call   QWORD PTR [rip+0xede5]        # 0x140014548
   140005763:	mov    ecx,0x30
   140005768:	call   0x140012892
   14000576d:	lea    r12,[rip+0x10914]        # 0x140016088
   140005774:	lea    r13,[rip+0x108cd]        # 0x140016048
   14000577b:	mov    rbx,rax
   14000577e:	test   rax,rax
   140005781:	je     0x14000579b
   140005783:	mov    r8d,ebp
   140005786:	mov    rdx,rdi
   140005789:	mov    rcx,rax
   14000578c:	call   QWORD PTR [rip+0xfc66]        # 0x1400153f8
   140005792:	mov    QWORD PTR [rbx],r12
   140005795:	mov    QWORD PTR [rbx+0x10],r13
   140005799:	jmp    0x14000579e
   14000579b:	mov    rbx,rbp
   14000579e:	lea    rdx,[rip+0x10893]        # 0x140016038
   1400057a5:	lea    rcx,[rsp+0x70]
   1400057aa:	mov    r8d,0x5
   1400057b0:	mov    QWORD PTR [rsi+0x8],rbx
   1400057b4:	call   QWORD PTR [rip+0xebfe]        # 0x1400143b8
   1400057ba:	mov    rcx,QWORD PTR [rsi+0x8]
   1400057be:	mov    rdx,rax
   1400057c1:	call   QWORD PTR [rip+0xebf9]        # 0x1400143c0
   1400057c7:	lea    rcx,[rsp+0x70]
   1400057cc:	call   QWORD PTR [rip+0xed76]        # 0x140014548
   1400057d2:	mov    rdx,QWORD PTR [rsi+0x8]
   1400057d6:	mov    rcx,QWORD PTR [rsi]
   1400057d9:	xor    r9d,r9d
   1400057dc:	mov    DWORD PTR [rsp+0x30],ebp
   1400057e0:	mov    DWORD PTR [rsp+0x28],0x1
   1400057e8:	lea    r8d,[r9+0x1]
   1400057ec:	mov    DWORD PTR [rsp+0x20],0x1
   1400057f4:	call   QWORD PTR [rip+0xfc2e]        # 0x140015428
   1400057fa:	mov    ecx,0x30
   1400057ff:	call   0x140012892
   140005804:	lea    r14,[rip+0x1059d]        # 0x140015da8
   14000580b:	lea    r15,[rip+0x10556]        # 0x140015d68
   140005812:	mov    rbx,rax
   140005815:	test   rax,rax
   140005818:	je     0x14000582f
   14000581a:	mov    rdx,rdi
   14000581d:	mov    rcx,rax
   140005820:	call   QWORD PTR [rip+0xfc1a]        # 0x140015440
   140005826:	mov    QWORD PTR [rbx],r14
   140005829:	mov    QWORD PTR [rbx+0x10],r15
   14000582d:	jmp    0x140005832
   14000582f:	mov    rbx,rbp
   140005832:	lea    rdx,[rip+0x10ed7]        # 0x140016710
   140005839:	lea    rcx,[rsp+0x70]
   14000583e:	mov    r8d,0x11
   140005844:	mov    QWORD PTR [rsi+0x10],rbx
   140005848:	call   QWORD PTR [rip+0xeb6a]        # 0x1400143b8
   14000584e:	mov    rcx,QWORD PTR [rsi+0x10]
   140005852:	mov    rdx,rax
   140005855:	call   QWORD PTR [rip+0xeb65]        # 0x1400143c0
   14000585b:	lea    rcx,[rsp+0x70]
   140005860:	call   QWORD PTR [rip+0xece2]        # 0x140014548
   140005866:	mov    rdx,QWORD PTR [rsi+0x10]
   14000586a:	mov    rcx,QWORD PTR [rsi]
   14000586d:	mov    r9d,0x1
   140005873:	mov    DWORD PTR [rsp+0x30],ebp
   140005877:	mov    DWORD PTR [rsp+0x28],0x1
   14000587f:	mov    r8d,r9d
   140005882:	mov    DWORD PTR [rsp+0x20],0x1
   14000588a:	call   QWORD PTR [rip+0xfb98]        # 0x140015428
   140005890:	mov    ecx,0x30
   140005895:	call   0x140012892
   14000589a:	mov    rbx,rax
   14000589d:	test   rax,rax
   1400058a0:	je     0x1400058ba
   1400058a2:	mov    r8d,ebp
   1400058a5:	mov    rdx,rdi
   1400058a8:	mov    rcx,rax
   1400058ab:	call   QWORD PTR [rip+0xfb47]        # 0x1400153f8
   1400058b1:	mov    QWORD PTR [rbx],r12
   1400058b4:	mov    QWORD PTR [rbx+0x10],r13
   1400058b8:	jmp    0x1400058bd
   1400058ba:	mov    rbx,rbp
   1400058bd:	lea    rdx,[rip+0x10e44]        # 0x140016708
   1400058c4:	lea    rcx,[rsp+0x70]
   1400058c9:	mov    r8d,0x7
   1400058cf:	mov    QWORD PTR [rsi+0x18],rbx
   1400058d3:	call   QWORD PTR [rip+0xeadf]        # 0x1400143b8
   1400058d9:	mov    rcx,QWORD PTR [rsi+0x18]
   1400058dd:	mov    rdx,rax
   1400058e0:	call   QWORD PTR [rip+0xeada]        # 0x1400143c0
   1400058e6:	lea    rcx,[rsp+0x70]
   1400058eb:	call   QWORD PTR [rip+0xec57]        # 0x140014548
   1400058f1:	mov    rdx,QWORD PTR [rsi+0x18]
   1400058f5:	mov    rcx,QWORD PTR [rsi]
   1400058f8:	xor    r9d,r9d
   1400058fb:	mov    DWORD PTR [rsp+0x30],ebp
   1400058ff:	mov    DWORD PTR [rsp+0x28],0x1
   140005907:	lea    r8d,[r9+0x2]
   14000590b:	mov    DWORD PTR [rsp+0x20],0x1
   140005913:	call   QWORD PTR [rip+0xfb0f]        # 0x140015428
   140005919:	mov    ecx,0x30
   14000591e:	call   0x140012892
   140005923:	mov    rbx,rax
   140005926:	test   rax,rax
   140005929:	je     0x140005940
   14000592b:	mov    rdx,rdi
   14000592e:	mov    rcx,rax
   140005931:	call   QWORD PTR [rip+0xfb09]        # 0x140015440
   140005937:	mov    QWORD PTR [rbx],r14
   14000593a:	mov    QWORD PTR [rbx+0x10],r15
   14000593e:	jmp    0x140005943
   140005940:	mov    rbx,rbp
   140005943:	lea    rdx,[rip+0x10dae]        # 0x1400166f8
   14000594a:	lea    rcx,[rsp+0x70]
   14000594f:	mov    r8d,0xe
   140005955:	mov    QWORD PTR [rsi+0x20],rbx
   140005959:	call   QWORD PTR [rip+0xea59]        # 0x1400143b8
   14000595f:	mov    rcx,QWORD PTR [rsi+0x20]
   140005963:	mov    rdx,rax
   140005966:	call   QWORD PTR [rip+0xea54]        # 0x1400143c0
   14000596c:	lea    rcx,[rsp+0x70]
   140005971:	call   QWORD PTR [rip+0xebd1]        # 0x140014548
   140005977:	mov    rdx,QWORD PTR [rsi+0x20]
   14000597b:	mov    rcx,QWORD PTR [rsi]
   14000597e:	mov    r9d,0x1
   140005984:	mov    DWORD PTR [rsp+0x30],ebp
   140005988:	mov    DWORD PTR [rsp+0x28],0x1
   140005990:	lea    r8d,[r9+0x1]
   140005994:	mov    DWORD PTR [rsp+0x20],0x1
   14000599c:	call   QWORD PTR [rip+0xfa86]        # 0x140015428
   1400059a2:	mov    ecx,0x30
   1400059a7:	call   0x140012892
   1400059ac:	lea    r12,[rip+0x10845]        # 0x1400161f8
   1400059b3:	mov    rbx,rax
   1400059b6:	test   rax,rax
   1400059b9:	je     0x1400059d9
   1400059bb:	mov    edx,0x14
   1400059c0:	mov    rcx,rax
   1400059c3:	mov    DWORD PTR [rsp+0x20],ebp
   1400059c7:	lea    r9d,[rdx-0x13]
   1400059cb:	mov    r8d,edx
   1400059ce:	call   QWORD PTR [rip+0xfa14]        # 0x1400153e8
   1400059d4:	mov    QWORD PTR [rbx],r12
   1400059d7:	jmp    0x1400059dc
   1400059d9:	mov    rbx,rbp
   1400059dc:	mov    rcx,QWORD PTR [rsi]
   1400059df:	mov    DWORD PTR [rsp+0x30],ebp
   1400059e3:	mov    r9d,0x1
   1400059e9:	xor    r8d,r8d
   1400059ec:	mov    rdx,rbx
   1400059ef:	mov    DWORD PTR [rsp+0x28],0x1
   1400059f7:	mov    QWORD PTR [rsi+0x28],rbx
   1400059fb:	mov    DWORD PTR [rsp+0x20],0x1
   140005a03:	call   QWORD PTR [rip+0xf9e7]        # 0x1400153f0
   140005a09:	mov    ecx,0x30
   140005a0e:	call   0x140012892
   140005a13:	mov    rbx,rax
   140005a16:	test   rax,rax
   140005a19:	je     0x140005a3e
   140005a1b:	mov    edx,0x14
   140005a20:	mov    rcx,rax
   140005a23:	mov    DWORD PTR [rsp+0x20],0x7
   140005a2b:	lea    r9d,[rdx-0x13]
   140005a2f:	lea    r8d,[rdx+0x14]
   140005a33:	call   QWORD PTR [rip+0xf9af]        # 0x1400153e8
   140005a39:	mov    QWORD PTR [rbx],r12
   140005a3c:	jmp    0x140005a41
   140005a3e:	mov    rbx,rbp
   140005a41:	mov    rcx,QWORD PTR [rsi]
   140005a44:	mov    r9d,0x1
   140005a4a:	mov    DWORD PTR [rsp+0x30],ebp
   140005a4e:	lea    r8d,[r9+0x2]
   140005a52:	mov    rdx,rbx
   140005a55:	mov    DWORD PTR [rsp+0x28],0x1
   140005a5d:	mov    QWORD PTR [rsi+0x30],rbx
   140005a61:	mov    DWORD PTR [rsp+0x20],0x1
   140005a69:	call   QWORD PTR [rip+0xf981]        # 0x1400153f0
   140005a6f:	mov    rdx,rdi
   140005a72:	mov    rcx,rsi
   140005a75:	call   0x140005500
   140005a7a:	mov    rcx,rdi
   140005a7d:	lea    r11,[rsp+0x40]
   140005a82:	mov    rbx,QWORD PTR [r11+0x38]
   140005a86:	mov    rbp,QWORD PTR [r11+0x40]
   140005a8a:	mov    rsi,QWORD PTR [r11+0x48]
   140005a8e:	mov    rsp,r11
   140005a91:	pop    r15
   140005a93:	pop    r14
   140005a95:	pop    r13
   140005a97:	pop    r12
   140005a99:	pop    rdi
   140005a9a:	rex.W jmp QWORD PTR [rip+0xe927]        # 0x1400143c8
   140005aa1:	int3   
   140005aa2:	int3   
   140005aa3:	int3   
   140005aa4:	int3   
   140005aa5:	int3   
   140005aa6:	int3   
   140005aa7:	int3   
   140005aa8:	int3   
   140005aa9:	int3   
   140005aaa:	int3   
   140005aab:	int3   
   140005aac:	int3   
   140005aad:	int3   
   140005aae:	int3   
   140005aaf:	int3   
   140005ab0:	mov    QWORD PTR [rsp+0x10],rbx
   140005ab5:	mov    QWORD PTR [rsp+0x18],rsi
   140005aba:	push   rdi
   140005abb:	sub    rsp,0x40
   140005abf:	mov    rbx,rcx
   140005ac2:	call   QWORD PTR [rip+0xec18]        # 0x1400146e0
   140005ac8:	lea    rdx,[rip+0x10d59]        # 0x140016828
   140005acf:	lea    rax,[rip+0x10d12]        # 0x1400167e8
   140005ad6:	mov    QWORD PTR [rbx],rdx
   140005ad9:	lea    r8,[rip+0x10ce8]        # 0x1400167c8
   140005ae0:	lea    rdx,[rsp+0x50]
   140005ae5:	lea    rcx,[rip+0x23bc4]        # 0x1400296b0
   140005aec:	xor    r9d,r9d
   140005aef:	mov    QWORD PTR [rbx+0x10],rax
   140005af3:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005afb:	call   QWORD PTR [rip+0xea57]        # 0x140014558
   140005b01:	lea    rdx,[rsp+0x50]
   140005b06:	mov    rcx,rbx
   140005b09:	call   QWORD PTR [rip+0xebc9]        # 0x1400146d8
   140005b0f:	lea    rcx,[rsp+0x50]
   140005b14:	call   QWORD PTR [rip+0xea2e]        # 0x140014548
   140005b1a:	lea    r8,[rip+0x10c5f]        # 0x140016780
   140005b21:	lea    rdx,[rsp+0x50]
   140005b26:	lea    rcx,[rip+0x23b83]        # 0x1400296b0
   140005b2d:	xor    r9d,r9d
   140005b30:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005b38:	call   QWORD PTR [rip+0xea1a]        # 0x140014558
   140005b3e:	lea    rdx,[rsp+0x50]
   140005b43:	mov    rcx,rbx
   140005b46:	call   QWORD PTR [rip+0xeb84]        # 0x1400146d0
   140005b4c:	lea    rcx,[rsp+0x50]
   140005b51:	call   QWORD PTR [rip+0xe9f1]        # 0x140014548
   140005b57:	lea    rcx,[rbx+0x30]
   140005b5b:	mov    rdx,rbx
   140005b5e:	call   0x140005660
   140005b63:	mov    rdx,QWORD PTR [rbx+0x40]
   140005b67:	lea    rdi,[rip+0x10bf2]        # 0x140016760
   140005b6e:	xor    esi,esi
   140005b70:	lea    r8,[rip+0x10bd1]        # 0x140016748
   140005b77:	lea    rcx,[rsp+0x50]
   140005b7c:	mov    r9,rbx
   140005b7f:	mov    DWORD PTR [rsp+0x28],esi
   140005b83:	mov    QWORD PTR [rsp+0x20],rdi
   140005b88:	call   QWORD PTR [rip+0xe8da]        # 0x140014468
   140005b8e:	lea    rcx,[rsp+0x50]
   140005b93:	call   QWORD PTR [rip+0xe8d7]        # 0x140014470
   140005b99:	mov    rdx,QWORD PTR [rbx+0x50]
   140005b9d:	lea    r8,[rip+0x10ba4]        # 0x140016748
   140005ba4:	lea    rcx,[rsp+0x50]
   140005ba9:	mov    r9,rbx
   140005bac:	mov    DWORD PTR [rsp+0x28],esi
   140005bb0:	mov    QWORD PTR [rsp+0x20],rdi
   140005bb5:	call   QWORD PTR [rip+0xe8ad]        # 0x140014468
   140005bbb:	lea    rcx,[rsp+0x50]
   140005bc0:	call   QWORD PTR [rip+0xe8aa]        # 0x140014470
   140005bc6:	or     rcx,0xffffffffffffffff
   140005bca:	lea    rdx,[rip+0x10b67]        # 0x140016738
   140005bd1:	mov    QWORD PTR [rsp+0x38],rdx
   140005bd6:	mov    rdi,rdx
   140005bd9:	xor    eax,eax
   140005bdb:	repnz scas al,BYTE PTR es:[rdi]
   140005bdd:	lea    rdx,[rsp+0x30]
   140005be2:	not    rcx
   140005be5:	dec    rcx
   140005be8:	mov    DWORD PTR [rsp+0x30],ecx
   140005bec:	lea    rcx,[rsp+0x50]
   140005bf1:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140005bf6:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140005bfc:	call   QWORD PTR [rip+0xe93e]        # 0x140014540
   140005c02:	mov    rcx,QWORD PTR [rbx+0x40]
   140005c06:	lea    rdx,[rsp+0x50]
   140005c0b:	call   QWORD PTR [rip+0xeb27]        # 0x140014738
   140005c11:	lea    rcx,[rsp+0x50]
   140005c16:	call   QWORD PTR [rip+0xe92c]        # 0x140014548
   140005c1c:	or     rcx,0xffffffffffffffff
   140005c20:	lea    rdx,[rip+0x10b01]        # 0x140016728
   140005c27:	xor    eax,eax
   140005c29:	mov    QWORD PTR [rsp+0x38],rdx
   140005c2e:	mov    rdi,rdx
   140005c31:	repnz scas al,BYTE PTR es:[rdi]
   140005c33:	not    rcx
   140005c36:	dec    rcx
   140005c39:	mov    DWORD PTR [rsp+0x30],ecx
   140005c3d:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140005c42:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140005c48:	lea    rdx,[rsp+0x30]
   140005c4d:	lea    rcx,[rsp+0x50]
   140005c52:	call   QWORD PTR [rip+0xe8e8]        # 0x140014540
   140005c58:	mov    rcx,QWORD PTR [rbx+0x50]
   140005c5c:	lea    rdx,[rsp+0x50]
   140005c61:	call   QWORD PTR [rip+0xead1]        # 0x140014738
   140005c67:	lea    rcx,[rsp+0x50]
   140005c6c:	call   QWORD PTR [rip+0xe8d6]        # 0x140014548
   140005c72:	or     rcx,0xffffffffffffffff
   140005c76:	lea    rdx,[rip+0xfe8b]        # 0x140015b08
   140005c7d:	mov    QWORD PTR [rsp+0x38],rdx
   140005c82:	mov    rdi,rdx
   140005c85:	xor    eax,eax
   140005c87:	repnz scas al,BYTE PTR es:[rdi]
   140005c89:	lea    rdx,[rsp+0x30]
   140005c8e:	not    rcx
   140005c91:	dec    rcx
   140005c94:	mov    DWORD PTR [rsp+0x30],ecx
   140005c98:	lea    rcx,[rsp+0x50]
   140005c9d:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140005ca2:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140005ca8:	call   QWORD PTR [rip+0xe892]        # 0x140014540
   140005cae:	mov    r8,QWORD PTR [rbx+0x40]
   140005cb2:	lea    rdx,[rsp+0x50]
   140005cb7:	xor    r9d,r9d
   140005cba:	mov    rcx,rbx
   140005cbd:	mov    QWORD PTR [rsp+0x20],rsi
   140005cc2:	call   QWORD PTR [rip+0xea00]        # 0x1400146c8
   140005cc8:	lea    rcx,[rsp+0x50]
   140005ccd:	call   QWORD PTR [rip+0xe875]        # 0x140014548
   140005cd3:	or     rcx,0xffffffffffffffff
   140005cd7:	lea    rdx,[rip+0xfe3a]        # 0x140015b18
   140005cde:	mov    QWORD PTR [rsp+0x38],rdx
   140005ce3:	mov    rdi,rdx
   140005ce6:	xor    eax,eax
   140005ce8:	repnz scas al,BYTE PTR es:[rdi]
   140005cea:	lea    rdx,[rsp+0x30]
   140005cef:	not    rcx
   140005cf2:	dec    rcx
   140005cf5:	mov    DWORD PTR [rsp+0x30],ecx
   140005cf9:	lea    rcx,[rsp+0x50]
   140005cfe:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140005d03:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140005d09:	call   QWORD PTR [rip+0xe831]        # 0x140014540
   140005d0f:	mov    r8,QWORD PTR [rbx+0x50]
   140005d13:	lea    rdx,[rsp+0x50]
   140005d18:	xor    r9d,r9d
   140005d1b:	mov    rcx,rbx
   140005d1e:	mov    QWORD PTR [rsp+0x20],rsi
   140005d23:	call   QWORD PTR [rip+0xe99f]        # 0x1400146c8
   140005d29:	lea    rcx,[rsp+0x50]
   140005d2e:	call   QWORD PTR [rip+0xe814]        # 0x140014548
   140005d34:	mov    rsi,QWORD PTR [rsp+0x60]
   140005d39:	mov    rax,rbx
   140005d3c:	mov    rbx,QWORD PTR [rsp+0x58]
   140005d41:	add    rsp,0x40
   140005d45:	pop    rdi
   140005d46:	ret    
   140005d47:	int3   
   140005d48:	int3   
   140005d49:	int3   
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	int3   
   140005d4d:	int3   
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	rex push rbx
   140005d52:	sub    rsp,0x30
   140005d56:	mov    rbx,rcx
   140005d59:	mov    rcx,QWORD PTR [rcx+0x40]
   140005d5d:	lea    rdx,[rsp+0x48]
   140005d62:	call   QWORD PTR [rip+0xe9e8]        # 0x140014750
   140005d68:	lea    rcx,[rsp+0x40]
   140005d6d:	mov    dl,0x2f
   140005d6f:	call   QWORD PTR [rip+0xe6a3]        # 0x140014418
   140005d75:	lea    rcx,[rsp+0x48]
   140005d7a:	mov    r9d,0x1
   140005d80:	movzx  edx,WORD PTR [rax]
   140005d83:	xor    r8d,r8d
   140005d86:	call   QWORD PTR [rip+0xe5bc]        # 0x140014348
   140005d8c:	cmp    eax,0xffffffff
   140005d8f:	jne    0x140005e7c
   140005d95:	lea    rcx,[rsp+0x40]
   140005d9a:	mov    dl,0x5c
   140005d9c:	call   QWORD PTR [rip+0xe676]        # 0x140014418
   140005da2:	lea    rcx,[rsp+0x48]
   140005da7:	mov    r9d,0x1
   140005dad:	movzx  edx,WORD PTR [rax]
   140005db0:	xor    r8d,r8d
   140005db3:	call   QWORD PTR [rip+0xe58f]        # 0x140014348
   140005db9:	cmp    eax,0xffffffff
   140005dbc:	jne    0x140005e7c
   140005dc2:	mov    rcx,QWORD PTR [rbx+0x50]
   140005dc6:	lea    rdx,[rsp+0x40]
   140005dcb:	call   QWORD PTR [rip+0xe97f]        # 0x140014750
   140005dd1:	lea    rcx,[rsp+0x48]
   140005dd6:	mov    rdx,rax
   140005dd9:	call   QWORD PTR [rip+0xe571]        # 0x140014350
   140005ddf:	lea    rcx,[rsp+0x40]
   140005de4:	call   QWORD PTR [rip+0xe75e]        # 0x140014548
   140005dea:	lea    rcx,[rsp+0x40]
   140005def:	mov    dl,0x2f
   140005df1:	call   QWORD PTR [rip+0xe621]        # 0x140014418
   140005df7:	lea    rcx,[rsp+0x48]
   140005dfc:	mov    r9d,0x1
   140005e02:	movzx  edx,WORD PTR [rax]
   140005e05:	xor    r8d,r8d
   140005e08:	call   QWORD PTR [rip+0xe53a]        # 0x140014348
   140005e0e:	cmp    eax,0xffffffff
   140005e11:	jne    0x140005e4f
   140005e13:	lea    rcx,[rsp+0x40]
   140005e18:	mov    dl,0x5c
   140005e1a:	call   QWORD PTR [rip+0xe5f8]        # 0x140014418
   140005e20:	lea    rcx,[rsp+0x48]
   140005e25:	mov    r9d,0x1
   140005e2b:	movzx  edx,WORD PTR [rax]
   140005e2e:	xor    r8d,r8d
   140005e31:	call   QWORD PTR [rip+0xe511]        # 0x140014348
   140005e37:	cmp    eax,0xffffffff
   140005e3a:	jne    0x140005e4f
   140005e3c:	lea    rcx,[rsp+0x48]
   140005e41:	call   QWORD PTR [rip+0xe701]        # 0x140014548
   140005e47:	mov    al,0x1
   140005e49:	add    rsp,0x30
   140005e4d:	pop    rbx
   140005e4e:	ret    
   140005e4f:	lea    r8,[rip+0x10bba]        # 0x140016a10
   140005e56:	lea    rdx,[rsp+0x50]
   140005e5b:	lea    rcx,[rip+0x2384e]        # 0x1400296b0
   140005e62:	xor    r9d,r9d
   140005e65:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005e6d:	call   QWORD PTR [rip+0xe6e5]        # 0x140014558
   140005e73:	lea    r8,[rip+0x10b7e]        # 0x1400169f8
   140005e7a:	jmp    0x140005ea7
   140005e7c:	lea    r8,[rip+0x10b45]        # 0x1400169c8
   140005e83:	lea    rdx,[rsp+0x50]
   140005e88:	lea    rcx,[rip+0x23821]        # 0x1400296b0
   140005e8f:	xor    r9d,r9d
   140005e92:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005e9a:	call   QWORD PTR [rip+0xe6b8]        # 0x140014558
   140005ea0:	lea    r8,[rip+0x10b11]        # 0x1400169b8
   140005ea7:	lea    rdx,[rsp+0x40]
   140005eac:	lea    rcx,[rip+0x237fd]        # 0x1400296b0
   140005eb3:	xor    r9d,r9d
   140005eb6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005ebe:	call   QWORD PTR [rip+0xe694]        # 0x140014558
   140005ec4:	lea    r8,[rsp+0x50]
   140005ec9:	lea    rdx,[rsp+0x40]
   140005ece:	mov    r9d,0x400
   140005ed4:	mov    rcx,rbx
   140005ed7:	mov    DWORD PTR [rsp+0x20],0x0
   140005edf:	call   QWORD PTR [rip+0xe863]        # 0x140014748
   140005ee5:	lea    rcx,[rsp+0x40]
   140005eea:	call   QWORD PTR [rip+0xe658]        # 0x140014548
   140005ef0:	lea    rcx,[rsp+0x50]
   140005ef5:	call   QWORD PTR [rip+0xe64d]        # 0x140014548
   140005efb:	lea    rcx,[rsp+0x48]
   140005f00:	call   QWORD PTR [rip+0xe642]        # 0x140014548
   140005f06:	xor    al,al
   140005f08:	add    rsp,0x30
   140005f0c:	pop    rbx
   140005f0d:	ret    
   140005f0e:	int3   
   140005f0f:	int3   
   140005f10:	mov    QWORD PTR [rsp+0x10],rbx
   140005f15:	push   rdi
   140005f16:	sub    rsp,0x30
   140005f1a:	mov    rbx,rdx
   140005f1d:	mov    rdi,rcx
   140005f20:	lea    r8,[rip+0xfc35]        # 0x140015b5c
   140005f27:	lea    rdx,[rip+0x10b8a]        # 0x140016ab8
   140005f2e:	lea    rcx,[rsp+0x40]
   140005f33:	xor    r9d,r9d
   140005f36:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005f3e:	call   QWORD PTR [rip+0xe48c]        # 0x1400143d0
   140005f44:	mov    rcx,rbx
   140005f47:	mov    rdx,rax
   140005f4a:	call   QWORD PTR [rip+0xf6c0]        # 0x140015610
   140005f50:	lea    rcx,[rsp+0x40]
   140005f55:	call   QWORD PTR [rip+0xe5ed]        # 0x140014548
   140005f5b:	lea    r8,[rip+0x10b0e]        # 0x140016a70
   140005f62:	lea    rdx,[rip+0x10b4f]        # 0x140016ab8
   140005f69:	lea    rcx,[rsp+0x40]
   140005f6e:	xor    r9d,r9d
   140005f71:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005f79:	call   QWORD PTR [rip+0xe451]        # 0x1400143d0
   140005f7f:	mov    rcx,QWORD PTR [rdi+0x8]
   140005f83:	mov    rdx,rax
   140005f86:	call   QWORD PTR [rip+0xf4d4]        # 0x140015460
   140005f8c:	lea    rcx,[rsp+0x40]
   140005f91:	call   QWORD PTR [rip+0xe5b1]        # 0x140014548
   140005f97:	lea    r8,[rip+0x10ac2]        # 0x140016a60
   140005f9e:	lea    rdx,[rip+0x10b13]        # 0x140016ab8
   140005fa5:	lea    rcx,[rsp+0x40]
   140005faa:	xor    r9d,r9d
   140005fad:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005fb5:	call   QWORD PTR [rip+0xe415]        # 0x1400143d0
   140005fbb:	mov    rcx,QWORD PTR [rdi+0x18]
   140005fbf:	mov    rdx,rax
   140005fc2:	call   QWORD PTR [rip+0xe7a0]        # 0x140014768
   140005fc8:	lea    rcx,[rsp+0x40]
   140005fcd:	call   QWORD PTR [rip+0xe575]        # 0x140014548
   140005fd3:	mov    rcx,QWORD PTR [rdi+0x28]
   140005fd7:	call   QWORD PTR [rip+0xe783]        # 0x140014760
   140005fdd:	lea    r8,[rip+0x10a74]        # 0x140016a58
   140005fe4:	lea    rdx,[rip+0x10acd]        # 0x140016ab8
   140005feb:	lea    rcx,[rsp+0x40]
   140005ff0:	xor    r9d,r9d
   140005ff3:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140005ffb:	mov    rbx,rax
   140005ffe:	call   QWORD PTR [rip+0xe3cc]        # 0x1400143d0
   140006004:	mov    edx,0x1
   140006009:	mov    r8,rax
   14000600c:	mov    rcx,rbx
   14000600f:	call   QWORD PTR [rip+0xe743]        # 0x140014758
   140006015:	lea    rcx,[rsp+0x40]
   14000601a:	call   QWORD PTR [rip+0xe528]        # 0x140014548
   140006020:	lea    r8,[rip+0x10a2d]        # 0x140016a54
   140006027:	lea    rdx,[rip+0x10a8a]        # 0x140016ab8
   14000602e:	lea    rcx,[rsp+0x40]
   140006033:	xor    r9d,r9d
   140006036:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000603e:	call   QWORD PTR [rip+0xe38c]        # 0x1400143d0
   140006044:	xor    edx,edx
   140006046:	mov    rcx,rbx
   140006049:	mov    r8,rax
   14000604c:	call   QWORD PTR [rip+0xe706]        # 0x140014758
   140006052:	lea    rcx,[rsp+0x40]
   140006057:	call   QWORD PTR [rip+0xe4eb]        # 0x140014548
   14000605d:	lea    r8,[rip+0x109ec]        # 0x140016a50
   140006064:	lea    rdx,[rip+0x10a4d]        # 0x140016ab8
   14000606b:	lea    rcx,[rsp+0x40]
   140006070:	xor    r9d,r9d
   140006073:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000607b:	call   QWORD PTR [rip+0xe34f]        # 0x1400143d0
   140006081:	mov    rcx,QWORD PTR [rdi+0x30]
   140006085:	mov    rdx,rax
   140006088:	call   QWORD PTR [rip+0xf3da]        # 0x140015468
   14000608e:	lea    rcx,[rsp+0x40]
   140006093:	call   QWORD PTR [rip+0xe4af]        # 0x140014548
   140006099:	lea    r8,[rip+0x109a8]        # 0x140016a48
   1400060a0:	lea    rdx,[rip+0x10a11]        # 0x140016ab8
   1400060a7:	lea    rcx,[rsp+0x40]
   1400060ac:	xor    r9d,r9d
   1400060af:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400060b7:	call   QWORD PTR [rip+0xe313]        # 0x1400143d0
   1400060bd:	mov    rcx,QWORD PTR [rdi+0x38]
   1400060c1:	mov    rdx,rax
   1400060c4:	call   QWORD PTR [rip+0xf39e]        # 0x140015468
   1400060ca:	lea    rcx,[rsp+0x40]
   1400060cf:	call   QWORD PTR [rip+0xe473]        # 0x140014548
   1400060d5:	mov    rbx,QWORD PTR [rsp+0x48]
   1400060da:	add    rsp,0x30
   1400060de:	pop    rdi
   1400060df:	ret    
   1400060e0:	rex push rbx
   1400060e2:	sub    rsp,0x40
   1400060e6:	mov    rbx,rcx
   1400060e9:	mov    rcx,QWORD PTR [rcx+0x58]
   1400060ed:	lea    rdx,[rsp+0x20]
   1400060f2:	call   QWORD PTR [rip+0xe690]        # 0x140014788
   1400060f8:	mov    edx,DWORD PTR [rsp+0x20]
   1400060fc:	test   edx,edx
   1400060fe:	js     0x140006146
   140006100:	cmp    DWORD PTR [rsp+0x24],0x0
   140006105:	jl     0x140006146
   140006107:	cmp    QWORD PTR [rsp+0x30],0x0
   14000610d:	je     0x140006146
   14000610f:	mov    rcx,QWORD PTR [rbx+0x58]
   140006113:	call   QWORD PTR [rip+0xe667]        # 0x140014780
   140006119:	test   rax,rax
   14000611c:	je     0x14000612c
   14000611e:	mov    r8,QWORD PTR [rax]
   140006121:	mov    edx,0x1
   140006126:	mov    rcx,rax
   140006129:	call   QWORD PTR [r8]
   14000612c:	mov    rcx,QWORD PTR [rbx+0x58]
   140006130:	call   QWORD PTR [rip+0xe642]        # 0x140014778
   140006136:	test   eax,eax
   140006138:	jne    0x140006146
   14000613a:	mov    rcx,QWORD PTR [rbx+0x68]
   14000613e:	mov    dl,0x1
   140006140:	call   QWORD PTR [rip+0xe62a]        # 0x140014770
   140006146:	add    rsp,0x40
   14000614a:	pop    rbx
   14000614b:	ret    
   14000614c:	int3   
   14000614d:	int3   
   14000614e:	int3   
   14000614f:	int3   
   140006150:	sub    rsp,0x28
   140006154:	mov    r8,rdx
   140006157:	test   rdx,rdx
   14000615a:	je     0x140006177
   14000615c:	mov    eax,DWORD PTR [rcx+0x8]
   14000615f:	mov    QWORD PTR [rdx],0x0
   140006166:	mov    DWORD PTR [rdx+0x8],eax
   140006169:	lea    rdx,[rcx+0x10]
   14000616d:	lea    rcx,[r8+0x10]
   140006171:	call   QWORD PTR [rip+0xe3f1]        # 0x140014568
   140006177:	add    rsp,0x28
   14000617b:	ret    
   14000617c:	int3   
   14000617d:	int3   
   14000617e:	int3   
   14000617f:	int3   
   140006180:	mov    QWORD PTR [rsp+0x10],rbx
   140006185:	mov    QWORD PTR [rsp+0x18],rbp
   14000618a:	mov    QWORD PTR [rsp+0x20],rsi
   14000618f:	push   rdi
   140006190:	push   r12
   140006192:	push   r13
   140006194:	sub    rsp,0x40
   140006198:	mov    rsi,rdx
   14000619b:	mov    rdi,rcx
   14000619e:	lea    rdx,[rsp+0x60]
   1400061a3:	mov    rcx,rsi
   1400061a6:	call   QWORD PTR [rip+0xe35c]        # 0x140014508
   1400061ac:	lea    rcx,[rsp+0x60]
   1400061b1:	mov    r8,QWORD PTR [rax]
   1400061b4:	cmp    DWORD PTR [r8+0x4],0x0
   1400061b9:	sete   bl
   1400061bc:	call   QWORD PTR [rip+0xe386]        # 0x140014548
   1400061c2:	test   bl,bl
   1400061c4:	je     0x1400061f5
   1400061c6:	lea    rdx,[rip+0x108eb]        # 0x140016ab8
   1400061cd:	lea    rcx,[rsp+0x60]
   1400061d2:	mov    r8d,0xa
   1400061d8:	call   QWORD PTR [rip+0xe1da]        # 0x1400143b8
   1400061de:	mov    rcx,rsi
   1400061e1:	mov    rdx,rax
   1400061e4:	call   QWORD PTR [rip+0xe1d6]        # 0x1400143c0
   1400061ea:	lea    rcx,[rsp+0x60]
   1400061ef:	call   QWORD PTR [rip+0xe353]        # 0x140014548
   1400061f5:	lea    rdx,[rsp+0x60]
   1400061fa:	mov    rcx,rsi
   1400061fd:	mov    DWORD PTR [rsp+0x60],0x1a3
   140006205:	mov    DWORD PTR [rsp+0x64],0xf3
   14000620d:	call   QWORD PTR [rip+0xf1c5]        # 0x1400153d8
   140006213:	mov    ecx,0x20
   140006218:	call   0x140012892
   14000621d:	xor    ebp,ebp
   14000621f:	lea    r12,[rip+0x10102]        # 0x140016328
   140006226:	mov    rbx,rax
   140006229:	lea    r13,[rip+0x10068]        # 0x140016298
   140006230:	test   rax,rax
   140006233:	je     0x14000624a
   140006235:	mov    rdx,rsi
   140006238:	mov    rcx,rax
   14000623b:	call   QWORD PTR [rip+0xf19f]        # 0x1400153e0
   140006241:	mov    QWORD PTR [rbx],r12
   140006244:	mov    QWORD PTR [rbx+0x10],r13
   140006248:	jmp    0x14000624d
   14000624a:	mov    rbx,rbp
   14000624d:	lea    rdx,[rip+0x10024]        # 0x140016278
   140006254:	lea    rcx,[rsp+0x60]
   140006259:	mov    r8d,0xa
   14000625f:	mov    QWORD PTR [rdi],rbx
   140006262:	call   QWORD PTR [rip+0xe150]        # 0x1400143b8
   140006268:	mov    rcx,QWORD PTR [rdi]
   14000626b:	mov    rdx,rax
   14000626e:	call   QWORD PTR [rip+0xe14c]        # 0x1400143c0
   140006274:	lea    rcx,[rsp+0x60]
   140006279:	call   QWORD PTR [rip+0xe2c9]        # 0x140014548
   14000627f:	mov    ecx,0x30
   140006284:	call   0x140012892
   140006289:	mov    rbx,rax
   14000628c:	test   rax,rax
   14000628f:	je     0x1400062b7
   140006291:	mov    r8d,ebp
   140006294:	mov    rdx,rsi
   140006297:	mov    rcx,rax
   14000629a:	call   QWORD PTR [rip+0xf158]        # 0x1400153f8
   1400062a0:	lea    r11,[rip+0xfde1]        # 0x140016088
   1400062a7:	lea    rax,[rip+0xfd9a]        # 0x140016048
   1400062ae:	mov    QWORD PTR [rbx],r11
   1400062b1:	mov    QWORD PTR [rbx+0x10],rax
   1400062b5:	jmp    0x1400062ba
   1400062b7:	mov    rbx,rbp
   1400062ba:	lea    rdx,[rip+0xfd77]        # 0x140016038
   1400062c1:	lea    rcx,[rsp+0x60]
   1400062c6:	mov    r8d,0x5
   1400062cc:	mov    QWORD PTR [rdi+0x8],rbx
   1400062d0:	call   QWORD PTR [rip+0xe0e2]        # 0x1400143b8
   1400062d6:	mov    rcx,QWORD PTR [rdi+0x8]
   1400062da:	mov    rdx,rax
   1400062dd:	call   QWORD PTR [rip+0xe0dd]        # 0x1400143c0
   1400062e3:	lea    rcx,[rsp+0x60]
   1400062e8:	call   QWORD PTR [rip+0xe25a]        # 0x140014548
   1400062ee:	mov    rdx,QWORD PTR [rdi+0x8]
   1400062f2:	mov    rcx,QWORD PTR [rdi]
   1400062f5:	xor    r9d,r9d
   1400062f8:	mov    DWORD PTR [rsp+0x30],ebp
   1400062fc:	mov    DWORD PTR [rsp+0x28],0x1
   140006304:	lea    r8d,[r9+0x1]
   140006308:	mov    DWORD PTR [rsp+0x20],0x1
   140006310:	call   QWORD PTR [rip+0xf112]        # 0x140015428
   140006316:	mov    ecx,0x30
   14000631b:	call   0x140012892
   140006320:	mov    rbx,rax
   140006323:	test   rax,rax
   140006326:	je     0x14000634b
   140006328:	mov    rdx,rsi
   14000632b:	mov    rcx,rax
   14000632e:	call   QWORD PTR [rip+0xf10c]        # 0x140015440
   140006334:	lea    r11,[rip+0xfa6d]        # 0x140015da8
   14000633b:	lea    rax,[rip+0xfa26]        # 0x140015d68
   140006342:	mov    QWORD PTR [rbx],r11
   140006345:	mov    QWORD PTR [rbx+0x10],rax
   140006349:	jmp    0x14000634e
   14000634b:	mov    rbx,rbp
   14000634e:	lea    rdx,[rip+0x10e7b]        # 0x1400171d0
   140006355:	lea    rcx,[rsp+0x60]
   14000635a:	mov    r8d,0xe
   140006360:	mov    QWORD PTR [rdi+0x10],rbx
   140006364:	call   QWORD PTR [rip+0xe04e]        # 0x1400143b8
   14000636a:	mov    rcx,QWORD PTR [rdi+0x10]
   14000636e:	mov    rdx,rax
   140006371:	call   QWORD PTR [rip+0xe049]        # 0x1400143c0
   140006377:	lea    rcx,[rsp+0x60]
   14000637c:	call   QWORD PTR [rip+0xe1c6]        # 0x140014548
   140006382:	mov    rdx,QWORD PTR [rdi+0x10]
   140006386:	mov    rcx,QWORD PTR [rdi]
   140006389:	xor    r9d,r9d
   14000638c:	mov    DWORD PTR [rsp+0x30],ebp
   140006390:	mov    DWORD PTR [rsp+0x28],0x1
   140006398:	lea    r8d,[r9+0x2]
   14000639c:	mov    DWORD PTR [rsp+0x20],0x1
   1400063a4:	call   QWORD PTR [rip+0xf07e]        # 0x140015428
   1400063aa:	mov    ecx,0x30
   1400063af:	call   0x140012892
   1400063b4:	mov    rbx,rax
   1400063b7:	test   rax,rax
   1400063ba:	je     0x1400063df
   1400063bc:	mov    rdx,rsi
   1400063bf:	mov    rcx,rax
   1400063c2:	call   QWORD PTR [rip+0xe3e0]        # 0x1400147a8
   1400063c8:	lea    r11,[rip+0x10c99]        # 0x140017068
   1400063cf:	lea    rax,[rip+0x10c52]        # 0x140017028
   1400063d6:	mov    QWORD PTR [rbx],r11
   1400063d9:	mov    QWORD PTR [rbx+0x10],rax
   1400063dd:	jmp    0x1400063e2
   1400063df:	mov    rbx,rbp
   1400063e2:	lea    rdx,[rip+0x10c27]        # 0x140017010
   1400063e9:	lea    rcx,[rsp+0x60]
   1400063ee:	mov    r8d,0x8
   1400063f4:	mov    QWORD PTR [rdi+0x18],rbx
   1400063f8:	call   QWORD PTR [rip+0xdfba]        # 0x1400143b8
   1400063fe:	mov    rcx,QWORD PTR [rdi+0x18]
   140006402:	mov    rdx,rax
   140006405:	call   QWORD PTR [rip+0xdfb5]        # 0x1400143c0
   14000640b:	lea    rcx,[rsp+0x60]
   140006410:	call   QWORD PTR [rip+0xe132]        # 0x140014548
   140006416:	mov    ecx,0x20
   14000641b:	call   0x140012892
   140006420:	mov    rbx,rax
   140006423:	test   rax,rax
   140006426:	je     0x14000643e
   140006428:	mov    rdx,QWORD PTR [rdi+0x18]
   14000642c:	mov    rcx,rax
   14000642f:	call   QWORD PTR [rip+0xefab]        # 0x1400153e0
   140006435:	mov    QWORD PTR [rbx],r12
   140006438:	mov    QWORD PTR [rbx+0x10],r13
   14000643c:	jmp    0x140006441
   14000643e:	mov    rbx,rbp
   140006441:	lea    rdx,[rip+0x10bb8]        # 0x140017000
   140006448:	lea    rcx,[rsp+0x60]
   14000644d:	mov    r8d,0xb
   140006453:	mov    QWORD PTR [rdi+0x20],rbx
   140006457:	call   QWORD PTR [rip+0xdf5b]        # 0x1400143b8
   14000645d:	mov    rcx,QWORD PTR [rdi+0x20]
   140006461:	mov    rdx,rax
   140006464:	call   QWORD PTR [rip+0xdf56]        # 0x1400143c0
   14000646a:	lea    rcx,[rsp+0x60]
   14000646f:	call   QWORD PTR [rip+0xe0d3]        # 0x140014548
   140006475:	mov    ecx,0x30
   14000647a:	call   0x140012892
   14000647f:	mov    rbx,rax
   140006482:	test   rax,rax
   140006485:	je     0x1400064ab
   140006487:	mov    rdx,QWORD PTR [rdi+0x18]
   14000648b:	mov    rcx,rax
   14000648e:	call   QWORD PTR [rip+0xe30c]        # 0x1400147a0
   140006494:	lea    r11,[rip+0x1087d]        # 0x140016d18
   14000649b:	lea    rax,[rip+0x10836]        # 0x140016cd8
   1400064a2:	mov    QWORD PTR [rbx],r11
   1400064a5:	mov    QWORD PTR [rbx+0x10],rax
   1400064a9:	jmp    0x1400064ae
   1400064ab:	mov    rbx,rbp
   1400064ae:	lea    rdx,[rip+0x10803]        # 0x140016cb8
   1400064b5:	lea    rcx,[rsp+0x60]
   1400064ba:	mov    r8d,0x12
   1400064c0:	mov    QWORD PTR [rdi+0x28],rbx
   1400064c4:	call   QWORD PTR [rip+0xdeee]        # 0x1400143b8
   1400064ca:	mov    rcx,QWORD PTR [rdi+0x28]
   1400064ce:	mov    rdx,rax
   1400064d1:	call   QWORD PTR [rip+0xdee9]        # 0x1400143c0
   1400064d7:	lea    rcx,[rsp+0x60]
   1400064dc:	call   QWORD PTR [rip+0xe066]        # 0x140014548
   1400064e2:	mov    rcx,QWORD PTR [rdi+0x28]
   1400064e6:	mov    edx,0x2
   1400064eb:	call   QWORD PTR [rip+0xe2a7]        # 0x140014798
   1400064f1:	mov    rdx,QWORD PTR [rdi+0x28]
   1400064f5:	mov    rcx,QWORD PTR [rdi+0x20]
   1400064f9:	mov    DWORD PTR [rsp+0x30],ebp
   1400064fd:	xor    r9d,r9d
   140006500:	xor    r8d,r8d
   140006503:	mov    DWORD PTR [rsp+0x28],0x1
   14000650b:	mov    DWORD PTR [rsp+0x20],0x3
   140006513:	call   QWORD PTR [rip+0xef0f]        # 0x140015428
   140006519:	mov    ecx,0x30
   14000651e:	call   0x140012892
   140006523:	lea    r12,[rip+0x1060e]        # 0x140016b38
   14000652a:	lea    r13,[rip+0x105c7]        # 0x140016af8
   140006531:	mov    rbx,rax
   140006534:	test   rax,rax
   140006537:	je     0x14000654f
   140006539:	mov    rdx,QWORD PTR [rdi+0x18]
   14000653d:	mov    rcx,rax
   140006540:	call   QWORD PTR [rip+0xe24a]        # 0x140014790
   140006546:	mov    QWORD PTR [rbx],r12
   140006549:	mov    QWORD PTR [rbx+0x10],r13
   14000654d:	jmp    0x140006552
   14000654f:	mov    rbx,rbp
   140006552:	lea    rdx,[rip+0x1057f]        # 0x140016ad8
   140006559:	lea    rcx,[rsp+0x60]
   14000655e:	mov    r8d,0x9
   140006564:	mov    QWORD PTR [rdi+0x30],rbx
   140006568:	call   QWORD PTR [rip+0xde4a]        # 0x1400143b8
   14000656e:	mov    rcx,QWORD PTR [rdi+0x30]
   140006572:	mov    rdx,rax
   140006575:	call   QWORD PTR [rip+0xde45]        # 0x1400143c0
   14000657b:	lea    rcx,[rsp+0x60]
   140006580:	call   QWORD PTR [rip+0xdfc2]        # 0x140014548
   140006586:	mov    rdx,QWORD PTR [rdi+0x30]
   14000658a:	mov    rcx,QWORD PTR [rdi+0x20]
   14000658e:	mov    DWORD PTR [rsp+0x30],ebp
   140006592:	mov    r9d,0x1
   140006598:	xor    r8d,r8d
   14000659b:	mov    DWORD PTR [rsp+0x28],0x1
   1400065a3:	mov    DWORD PTR [rsp+0x20],0x1
   1400065ab:	call   QWORD PTR [rip+0xee77]        # 0x140015428
   1400065b1:	mov    ecx,0x30
   1400065b6:	call   0x140012892
   1400065bb:	mov    rbx,rax
   1400065be:	test   rax,rax
   1400065c1:	je     0x1400065d9
   1400065c3:	mov    rdx,QWORD PTR [rdi+0x18]
   1400065c7:	mov    rcx,rax
   1400065ca:	call   QWORD PTR [rip+0xe1c0]        # 0x140014790
   1400065d0:	mov    QWORD PTR [rbx],r12
   1400065d3:	mov    QWORD PTR [rbx+0x10],r13
   1400065d7:	jmp    0x1400065dc
   1400065d9:	mov    rbx,rbp
   1400065dc:	lea    rdx,[rip+0x104e5]        # 0x140016ac8
   1400065e3:	lea    rcx,[rsp+0x60]
   1400065e8:	mov    r8d,0xc
   1400065ee:	mov    QWORD PTR [rdi+0x38],rbx
   1400065f2:	call   QWORD PTR [rip+0xddc0]        # 0x1400143b8
   1400065f8:	mov    rcx,QWORD PTR [rdi+0x38]
   1400065fc:	mov    rdx,rax
   1400065ff:	call   QWORD PTR [rip+0xddbb]        # 0x1400143c0
   140006605:	lea    rcx,[rsp+0x60]
   14000660a:	call   QWORD PTR [rip+0xdf38]        # 0x140014548
   140006610:	mov    rdx,QWORD PTR [rdi+0x38]
   140006614:	mov    rcx,QWORD PTR [rdi+0x20]
   140006618:	mov    r9d,0x1
   14000661e:	mov    DWORD PTR [rsp+0x30],ebp
   140006622:	mov    DWORD PTR [rsp+0x28],0x1
   14000662a:	mov    r8d,r9d
   14000662d:	mov    DWORD PTR [rsp+0x20],0x1
   140006635:	call   QWORD PTR [rip+0xeded]        # 0x140015428
   14000663b:	mov    ecx,0x30
   140006640:	call   0x140012892
   140006645:	lea    r12,[rip+0xfbac]        # 0x1400161f8
   14000664c:	mov    rbx,rax
   14000664f:	test   rax,rax
   140006652:	je     0x140006677
   140006654:	mov    edx,0x14
   140006659:	mov    rcx,rax
   14000665c:	mov    DWORD PTR [rsp+0x20],0x7
   140006664:	lea    r9d,[rdx-0x13]
   140006668:	lea    r8d,[rdx+0x14]
   14000666c:	call   QWORD PTR [rip+0xed76]        # 0x1400153e8
   140006672:	mov    QWORD PTR [rbx],r12
   140006675:	jmp    0x14000667a
   140006677:	mov    rbx,rbp
   14000667a:	mov    rcx,QWORD PTR [rdi+0x20]
   14000667e:	mov    r9d,0x1
   140006684:	mov    DWORD PTR [rsp+0x30],ebp
   140006688:	lea    r8d,[r9+0x1]
   14000668c:	mov    rdx,rbx
   14000668f:	mov    DWORD PTR [rsp+0x28],0x1
   140006697:	mov    QWORD PTR [rdi+0x40],rbx
   14000669b:	mov    DWORD PTR [rsp+0x20],0x1
   1400066a3:	call   QWORD PTR [rip+0xed47]        # 0x1400153f0
   1400066a9:	mov    rdx,QWORD PTR [rdi+0x18]
   1400066ad:	mov    rcx,QWORD PTR [rdi]
   1400066b0:	xor    r9d,r9d
   1400066b3:	mov    DWORD PTR [rsp+0x30],ebp
   1400066b7:	lea    r8d,[r9+0x4]
   1400066bb:	mov    DWORD PTR [rsp+0x28],0x1
   1400066c3:	mov    DWORD PTR [rsp+0x20],0x1
   1400066cb:	call   QWORD PTR [rip+0xed57]        # 0x140015428
   1400066d1:	mov    ecx,0x30
   1400066d6:	call   0x140012892
   1400066db:	mov    rbx,rax
   1400066de:	test   rax,rax
   1400066e1:	je     0x140006706
   1400066e3:	mov    edx,0x14
   1400066e8:	mov    rcx,rax
   1400066eb:	mov    DWORD PTR [rsp+0x20],0x7
   1400066f3:	lea    r9d,[rdx-0x13]
   1400066f7:	lea    r8d,[rdx+0x14]
   1400066fb:	call   QWORD PTR [rip+0xece7]        # 0x1400153e8
   140006701:	mov    QWORD PTR [rbx],r12
   140006704:	jmp    0x140006709
   140006706:	mov    rbx,rbp
   140006709:	mov    rcx,QWORD PTR [rdi]
   14000670c:	mov    DWORD PTR [rsp+0x30],ebp
   140006710:	xor    r9d,r9d
   140006713:	xor    r8d,r8d
   140006716:	mov    rdx,rbx
   140006719:	mov    DWORD PTR [rsp+0x28],0x1
   140006721:	mov    QWORD PTR [rdi+0x48],rbx
   140006725:	mov    DWORD PTR [rsp+0x20],0x1
   14000672d:	call   QWORD PTR [rip+0xecbd]        # 0x1400153f0
   140006733:	mov    ecx,0x30
   140006738:	call   0x140012892
   14000673d:	mov    rbx,rax
   140006740:	test   rax,rax
   140006743:	je     0x140006768
   140006745:	mov    edx,0x14
   14000674a:	mov    rcx,rax
   14000674d:	mov    DWORD PTR [rsp+0x20],0x7
   140006755:	lea    r9d,[rdx-0x13]
   140006759:	lea    r8d,[rdx+0x14]
   14000675d:	call   QWORD PTR [rip+0xec85]        # 0x1400153e8
   140006763:	mov    QWORD PTR [rbx],r12
   140006766:	jmp    0x14000676b
   140006768:	mov    rbx,rbp
   14000676b:	mov    rcx,QWORD PTR [rdi]
   14000676e:	xor    r9d,r9d
   140006771:	mov    DWORD PTR [rsp+0x30],ebp
   140006775:	lea    r8d,[r9+0x5]
   140006779:	mov    rdx,rbx
   14000677c:	mov    DWORD PTR [rsp+0x28],0x1
   140006784:	mov    QWORD PTR [rdi+0x50],rbx
   140006788:	mov    DWORD PTR [rsp+0x20],0x1
   140006790:	call   QWORD PTR [rip+0xec5a]        # 0x1400153f0
   140006796:	mov    ecx,0x30
   14000679b:	call   0x140012892
   1400067a0:	mov    rbx,rax
   1400067a3:	test   rax,rax
   1400067a6:	je     0x1400067c7
   1400067a8:	mov    edx,0x14
   1400067ad:	mov    rcx,rax
   1400067b0:	mov    DWORD PTR [rsp+0x20],ebp
   1400067b4:	lea    r9d,[rdx-0x13]
   1400067b8:	lea    r8d,[rdx-0xa]
   1400067bc:	call   QWORD PTR [rip+0xec26]        # 0x1400153e8
   1400067c2:	mov    QWORD PTR [rbx],r12
   1400067c5:	jmp    0x1400067ca
   1400067c7:	mov    rbx,rbp
   1400067ca:	mov    rcx,QWORD PTR [rdi]
   1400067cd:	xor    r9d,r9d
   1400067d0:	mov    DWORD PTR [rsp+0x30],ebp
   1400067d4:	lea    r8d,[r9+0x3]
   1400067d8:	mov    rdx,rbx
   1400067db:	mov    DWORD PTR [rsp+0x28],0x1
   1400067e3:	mov    QWORD PTR [rdi+0x58],rbx
   1400067e7:	mov    DWORD PTR [rsp+0x20],0x1
   1400067ef:	call   QWORD PTR [rip+0xebfb]        # 0x1400153f0
   1400067f5:	mov    rdx,rsi
   1400067f8:	mov    rcx,rdi
   1400067fb:	call   0x140005f10
   140006800:	mov    rcx,rsi
   140006803:	mov    rbx,QWORD PTR [rsp+0x68]
   140006808:	mov    rbp,QWORD PTR [rsp+0x70]
   14000680d:	mov    rsi,QWORD PTR [rsp+0x78]
   140006812:	add    rsp,0x40
   140006816:	pop    r13
   140006818:	pop    r12
   14000681a:	pop    rdi
   14000681b:	rex.W jmp QWORD PTR [rip+0xdba6]        # 0x1400143c8
   140006822:	int3   
   140006823:	int3   
   140006824:	int3   
   140006825:	int3   
   140006826:	int3   
   140006827:	int3   
   140006828:	int3   
   140006829:	int3   
   14000682a:	int3   
   14000682b:	int3   
   14000682c:	int3   
   14000682d:	int3   
   14000682e:	int3   
   14000682f:	int3   
   140006830:	mov    QWORD PTR [rsp+0x8],rbx
   140006835:	push   rdi
   140006836:	sub    rsp,0x20
   14000683a:	mov    ebx,edx
   14000683c:	mov    rdi,rcx
   14000683f:	call   QWORD PTR [rip+0xe2ab]        # 0x140014af0
   140006845:	test   bl,0x1
   140006848:	je     0x140006852
   14000684a:	mov    rcx,rdi
   14000684d:	call   0x140012898
   140006852:	mov    rax,rdi
   140006855:	mov    rbx,QWORD PTR [rsp+0x30]
   14000685a:	add    rsp,0x20
   14000685e:	pop    rdi
   14000685f:	ret    
   140006860:	mov    QWORD PTR [rsp+0x8],rbx
   140006865:	push   rdi
   140006866:	sub    rsp,0x20
   14000686a:	mov    ebx,edx
   14000686c:	mov    rdi,rcx
   14000686f:	call   QWORD PTR [rip+0xe283]        # 0x140014af8
   140006875:	test   bl,0x1
   140006878:	je     0x140006882
   14000687a:	mov    rcx,rdi
   14000687d:	call   0x140012898
   140006882:	mov    rax,rdi
   140006885:	mov    rbx,QWORD PTR [rsp+0x30]
   14000688a:	add    rsp,0x20
   14000688e:	pop    rdi
   14000688f:	ret    
   140006890:	mov    QWORD PTR [rsp+0x8],rbx
   140006895:	push   rdi
   140006896:	sub    rsp,0x20
   14000689a:	mov    ebx,edx
   14000689c:	mov    rdi,rcx
   14000689f:	call   QWORD PTR [rip+0xe25b]        # 0x140014b00
   1400068a5:	test   bl,0x1
   1400068a8:	je     0x1400068b2
   1400068aa:	mov    rcx,rdi
   1400068ad:	call   0x140012898
   1400068b2:	mov    rax,rdi
   1400068b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400068ba:	add    rsp,0x20
   1400068be:	pop    rdi
   1400068bf:	ret    
   1400068c0:	sub    rcx,0x10
   1400068c4:	jmp    0x140006860
   1400068c9:	int3   
   1400068ca:	int3   
   1400068cb:	int3   
   1400068cc:	int3   
   1400068cd:	int3   
   1400068ce:	int3   
   1400068cf:	int3   
   1400068d0:	sub    rcx,0x10
   1400068d4:	jmp    0x140006830
   1400068d9:	int3   
   1400068da:	int3   
   1400068db:	int3   
   1400068dc:	int3   
   1400068dd:	int3   
   1400068de:	int3   
   1400068df:	int3   
   1400068e0:	sub    rcx,0x10
   1400068e4:	jmp    0x140006890
   1400068e9:	int3   
   1400068ea:	int3   
   1400068eb:	int3   
   1400068ec:	int3   
   1400068ed:	int3   
   1400068ee:	int3   
   1400068ef:	int3   
   1400068f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400068f5:	mov    QWORD PTR [rsp+0x18],rsi
   1400068fa:	push   rdi
   1400068fb:	sub    rsp,0x40
   1400068ff:	mov    rsi,rcx
   140006902:	mov    ecx,0x40
   140006907:	call   0x140012892
   14000690c:	mov    rbx,rax
   14000690f:	test   rax,rax
   140006912:	je     0x140006930
   140006914:	mov    rdx,QWORD PTR [rsi+0x58]
   140006918:	xor    r8d,r8d
   14000691b:	mov    rcx,rax
   14000691e:	call   QWORD PTR [rip+0xe1f4]        # 0x140014b18
   140006924:	lea    rdx,[rip+0x108ed]        # 0x140017218
   14000692b:	mov    QWORD PTR [rbx],rdx
   14000692e:	jmp    0x140006932
   140006930:	xor    ebx,ebx
   140006932:	mov    edx,0x23
   140006937:	mov    rcx,rbx
   14000693a:	call   QWORD PTR [rip+0xe1d0]        # 0x140014b10
   140006940:	lea    r9,[rip+0x108a9]        # 0x1400171f0
   140006947:	lea    r8,[rip+0x10892]        # 0x1400171e0
   14000694e:	lea    rdx,[rsp+0x50]
   140006953:	lea    rcx,[rip+0x22d8e]        # 0x1400296e8
   14000695a:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140006962:	call   QWORD PTR [rip+0xdbf0]        # 0x140014558
   140006968:	lea    r8,[rsp+0x50]
   14000696d:	xor    edx,edx
   14000696f:	mov    rcx,rbx
   140006972:	call   QWORD PTR [rip+0xdde0]        # 0x140014758
   140006978:	lea    rcx,[rsp+0x50]
   14000697d:	call   QWORD PTR [rip+0xdbc5]        # 0x140014548
   140006983:	or     rcx,0xffffffffffffffff
   140006987:	lea    rdx,[rip+0x10851]        # 0x1400171df
   14000698e:	mov    QWORD PTR [rsp+0x38],rdx
   140006993:	mov    rdi,rdx
   140006996:	xor    eax,eax
   140006998:	repnz scas al,BYTE PTR es:[rdi]
   14000699a:	lea    rdx,[rsp+0x30]
   14000699f:	not    rcx
   1400069a2:	dec    rcx
   1400069a5:	mov    DWORD PTR [rsp+0x30],ecx
   1400069a9:	lea    rcx,[rsp+0x50]
   1400069ae:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400069b3:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400069b9:	call   QWORD PTR [rip+0xdb81]        # 0x140014540
   1400069bf:	lea    r8,[rsp+0x50]
   1400069c4:	mov    edx,0x1
   1400069c9:	mov    rcx,rbx
   1400069cc:	call   QWORD PTR [rip+0xdd86]        # 0x140014758
   1400069d2:	lea    rcx,[rsp+0x50]
   1400069d7:	call   QWORD PTR [rip+0xdb6b]        # 0x140014548
   1400069dd:	mov    rcx,QWORD PTR [rsi+0x58]
   1400069e1:	xor    r8d,r8d
   1400069e4:	mov    rdx,rbx
   1400069e7:	call   QWORD PTR [rip+0xe11b]        # 0x140014b08
   1400069ed:	mov    rcx,QWORD PTR [rsi+0x68]
   1400069f1:	xor    edx,edx
   1400069f3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400069f8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400069fd:	add    rsp,0x40
   140006a01:	pop    rdi
   140006a02:	rex.W jmp QWORD PTR [rip+0xdd67]        # 0x140014770
   140006a09:	int3   
   140006a0a:	int3   
   140006a0b:	int3   
   140006a0c:	int3   
   140006a0d:	int3   
   140006a0e:	int3   
   140006a0f:	int3   
   140006a10:	mov    QWORD PTR [rsp+0x8],rbx
   140006a15:	push   rdi
   140006a16:	sub    rsp,0x20
   140006a1a:	mov    ebx,edx
   140006a1c:	mov    rdi,rcx
   140006a1f:	call   QWORD PTR [rip+0xe12b]        # 0x140014b50
   140006a25:	test   bl,0x1
   140006a28:	je     0x140006a32
   140006a2a:	mov    rcx,rdi
   140006a2d:	call   0x140012898
   140006a32:	mov    rax,rdi
   140006a35:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a3a:	add    rsp,0x20
   140006a3e:	pop    rdi
   140006a3f:	ret    
   140006a40:	mov    QWORD PTR [rsp+0x8],rbx
   140006a45:	push   rdi
   140006a46:	sub    rsp,0x30
   140006a4a:	mov    rbx,rcx
   140006a4d:	mov    rcx,QWORD PTR [rcx]
   140006a50:	lea    r8,[rip+0xffffffffffffaeb9]        # 0x140001910
   140006a57:	lea    rdx,[rip+0xfffffffffffff6f2]        # 0x140006150
   140006a5e:	mov    r9d,0x18
   140006a64:	mov    DWORD PTR [rsp+0x20],0x8
   140006a6c:	call   QWORD PTR [rip+0xd8be]        # 0x140014330
   140006a72:	mov    rdi,rax
   140006a75:	mov    rax,QWORD PTR [rbx]
   140006a78:	mov    ecx,DWORD PTR [rax+0x10]
   140006a7b:	test   ecx,ecx
   140006a7d:	je     0x140006a90
   140006a7f:	cmp    ecx,0xffffffff
   140006a82:	je     0x140006aa0
   140006a84:	lock add DWORD PTR [rax+0x10],0xffffffff
   140006a89:	setne  al
   140006a8c:	test   al,al
   140006a8e:	jne    0x140006aa0
   140006a90:	mov    rcx,QWORD PTR [rbx]
   140006a93:	lea    rdx,[rip+0xffffffffffffae76]        # 0x140001910
   140006a9a:	call   QWORD PTR [rip+0xda10]        # 0x1400144b0
   140006aa0:	mov    QWORD PTR [rbx],rdi
   140006aa3:	mov    rbx,QWORD PTR [rsp+0x40]
   140006aa8:	add    rsp,0x30
   140006aac:	pop    rdi
   140006aad:	ret    
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	rex push rbx
   140006ab2:	sub    rsp,0x20
   140006ab6:	mov    rbx,rdx
   140006ab9:	lea    rdx,[rcx+0x90]
   140006ac0:	mov    rcx,rbx
   140006ac3:	call   0x140001980
   140006ac8:	mov    rax,rbx
   140006acb:	add    rsp,0x20
   140006acf:	pop    rbx
   140006ad0:	ret    
   140006ad1:	int3   
   140006ad2:	int3   
   140006ad3:	int3   
   140006ad4:	int3   
   140006ad5:	int3   
   140006ad6:	int3   
   140006ad7:	int3   
   140006ad8:	int3   
   140006ad9:	int3   
   140006ada:	int3   
   140006adb:	int3   
   140006adc:	int3   
   140006add:	int3   
   140006ade:	int3   
   140006adf:	int3   
   140006ae0:	cmp    rdx,r8
   140006ae3:	je     0x140006b6d
   140006ae9:	mov    QWORD PTR [rsp+0x18],rbp
   140006aee:	mov    QWORD PTR [rsp+0x20],rdi
   140006af3:	push   r12
   140006af5:	sub    rsp,0x20
   140006af9:	mov    QWORD PTR [rsp+0x30],rbx
   140006afe:	mov    rbp,r9
   140006b01:	mov    r12,r8
   140006b04:	mov    QWORD PTR [rsp+0x38],rsi
   140006b09:	mov    rdi,rdx
   140006b0c:	nop    DWORD PTR [rax+0x0]
   140006b10:	mov    ecx,0x10
   140006b15:	call   0x140012892
   140006b1a:	mov    rsi,rax
   140006b1d:	test   rax,rax
   140006b20:	je     0x140006b41
   140006b22:	mov    rbx,QWORD PTR [rbp+0x0]
   140006b26:	mov    rcx,rax
   140006b29:	mov    rdx,rbx
   140006b2c:	call   QWORD PTR [rip+0xda36]        # 0x140014568
   140006b32:	lea    rdx,[rbx+0x8]
   140006b36:	lea    rcx,[rsi+0x8]
   140006b3a:	call   0x140001980
   140006b3f:	jmp    0x140006b43
   140006b41:	xor    esi,esi
   140006b43:	mov    QWORD PTR [rdi],rsi
   140006b46:	add    rdi,0x8
   140006b4a:	add    rbp,0x8
   140006b4e:	cmp    rdi,r12
   140006b51:	jne    0x140006b10
   140006b53:	mov    rsi,QWORD PTR [rsp+0x38]
   140006b58:	mov    rbx,QWORD PTR [rsp+0x30]
   140006b5d:	mov    rbp,QWORD PTR [rsp+0x40]
   140006b62:	mov    rdi,QWORD PTR [rsp+0x48]
   140006b67:	add    rsp,0x20
   140006b6b:	pop    r12
   140006b6d:	repz ret 
   140006b6f:	int3   
   140006b70:	mov    QWORD PTR [rsp+0x10],rbp
   140006b75:	mov    QWORD PTR [rsp+0x18],rsi
   140006b7a:	push   rdi
   140006b7b:	push   r12
   140006b7d:	push   r13
   140006b7f:	sub    rsp,0x20
   140006b83:	mov    rax,QWORD PTR [rcx]
   140006b86:	mov    rdi,rcx
   140006b89:	mov    r12,r8
   140006b8c:	mov    ecx,DWORD PTR [rax+0x10]
   140006b8f:	mov    rsi,rdx
   140006b92:	cmp    ecx,0x1
   140006b95:	je     0x140006ba3
   140006b97:	test   ecx,ecx
   140006b99:	je     0x140006ba3
   140006b9b:	mov    rcx,rdi
   140006b9e:	call   0x140006a40
   140006ba3:	mov    rax,QWORD PTR [rdi]
   140006ba6:	mov    rcx,r12
   140006ba9:	mov    edx,DWORD PTR [rax+0x24]
   140006bac:	call   QWORD PTR [rip+0xd91e]        # 0x1400144d0
   140006bb2:	mov    rdx,r12
   140006bb5:	mov    rcx,rdi
   140006bb8:	mov    r8d,eax
   140006bbb:	mov    r13d,eax
   140006bbe:	call   0x1400017c0
   140006bc3:	mov    rcx,QWORD PTR [rdi]
   140006bc6:	mov    rdx,QWORD PTR [rax]
   140006bc9:	mov    rbp,rax
   140006bcc:	cmp    rdx,rcx
   140006bcf:	jne    0x140006c58
   140006bd5:	mov    edx,DWORD PTR [rcx+0x20]
   140006bd8:	mov    QWORD PTR [rsp+0x40],rbx
   140006bdd:	cmp    DWORD PTR [rcx+0x14],edx
   140006be0:	jl     0x140006c12
   140006be2:	movsx  edx,WORD PTR [rcx+0x1e]
   140006be6:	inc    edx
   140006be8:	call   QWORD PTR [rip+0xd73a]        # 0x140014328
   140006bee:	mov    r11,QWORD PTR [rdi]
   140006bf1:	mov    rcx,r12
   140006bf4:	mov    edx,DWORD PTR [r11+0x24]
   140006bf8:	call   QWORD PTR [rip+0xd8d2]        # 0x1400144d0
   140006bfe:	mov    rdx,r12
   140006c01:	mov    rcx,rdi
   140006c04:	mov    r8d,eax
   140006c07:	mov    r13d,eax
   140006c0a:	call   0x1400017c0
   140006c0f:	mov    rbp,rax
   140006c12:	mov    rcx,QWORD PTR [rdi]
   140006c15:	mov    edx,0x8
   140006c1a:	call   QWORD PTR [rip+0xd718]        # 0x140014338
   140006c20:	mov    rbx,rax
   140006c23:	test   rax,rax
   140006c26:	je     0x140006c42
   140006c28:	mov    rax,QWORD PTR [rbp+0x0]
   140006c2c:	lea    rcx,[rbx+0x10]
   140006c30:	mov    rdx,r12
   140006c33:	mov    QWORD PTR [rbx],rax
   140006c36:	mov    DWORD PTR [rbx+0x8],r13d
   140006c3a:	call   QWORD PTR [rip+0xd928]        # 0x140014568
   140006c40:	jmp    0x140006c44
   140006c42:	xor    ebx,ebx
   140006c44:	mov    QWORD PTR [rbp+0x0],rbx
   140006c48:	mov    rax,QWORD PTR [rdi]
   140006c4b:	mov    QWORD PTR [rsi],rbx
   140006c4e:	inc    DWORD PTR [rax+0x14]
   140006c51:	mov    rbx,QWORD PTR [rsp+0x40]
   140006c56:	jmp    0x140006c5b
   140006c58:	mov    QWORD PTR [rsi],rdx
   140006c5b:	mov    rbp,QWORD PTR [rsp+0x48]
   140006c60:	mov    rax,rsi
   140006c63:	mov    rsi,QWORD PTR [rsp+0x50]
   140006c68:	add    rsp,0x20
   140006c6c:	pop    r13
   140006c6e:	pop    r12
   140006c70:	pop    rdi
   140006c71:	ret    
   140006c72:	int3   
   140006c73:	int3   
   140006c74:	int3   
   140006c75:	int3   
   140006c76:	int3   
   140006c77:	int3   
   140006c78:	int3   
   140006c79:	int3   
   140006c7a:	int3   
   140006c7b:	int3   
   140006c7c:	int3   
   140006c7d:	int3   
   140006c7e:	int3   
   140006c7f:	int3   
   140006c80:	mov    QWORD PTR [rsp+0x8],rbx
   140006c85:	push   rdi
   140006c86:	sub    rsp,0x20
   140006c8a:	mov    rax,QWORD PTR [rdx]
   140006c8d:	mov    rbx,rcx
   140006c90:	mov    rdi,rdx
   140006c93:	mov    QWORD PTR [rcx],rax
   140006c96:	mov    ecx,DWORD PTR [rax]
   140006c98:	test   ecx,ecx
   140006c9a:	je     0x140006cb3
   140006c9c:	cmp    ecx,0xffffffff
   140006c9f:	je     0x140006ce8
   140006ca1:	lock add DWORD PTR [rax],0x1
   140006ca5:	mov    rax,rbx
   140006ca8:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cad:	add    rsp,0x20
   140006cb1:	pop    rdi
   140006cb2:	ret    
   140006cb3:	mov    edx,DWORD PTR [rax+0x4]
   140006cb6:	mov    rcx,rbx
   140006cb9:	call   QWORD PTR [rip+0xd7f9]        # 0x1400144b8
   140006cbf:	mov    rcx,QWORD PTR [rbx]
   140006cc2:	mov    r11,QWORD PTR [rdi]
   140006cc5:	movsxd rax,DWORD PTR [r11+0x8]
   140006cc9:	lea    r9,[r11+rax*8+0x10]
   140006cce:	movsxd rax,DWORD PTR [rcx+0xc]
   140006cd2:	lea    r8,[rcx+rax*8+0x10]
   140006cd7:	movsxd rax,DWORD PTR [rcx+0x8]
   140006cdb:	lea    rdx,[rcx+rax*8+0x10]
   140006ce0:	mov    rcx,rbx
   140006ce3:	call   0x140006ae0
   140006ce8:	mov    rax,rbx
   140006ceb:	mov    rbx,QWORD PTR [rsp+0x30]
   140006cf0:	add    rsp,0x20
   140006cf4:	pop    rdi
   140006cf5:	ret    
   140006cf6:	int3   
   140006cf7:	int3   
   140006cf8:	int3   
   140006cf9:	int3   
   140006cfa:	int3   
   140006cfb:	int3   
   140006cfc:	int3   
   140006cfd:	int3   
   140006cfe:	int3   
   140006cff:	int3   
   140006d00:	rex push rbx
   140006d02:	push   rbp
   140006d03:	push   rdi
   140006d04:	sub    rsp,0x20
   140006d08:	mov    rbx,QWORD PTR [rdx]
   140006d0b:	mov    rdi,rdx
   140006d0e:	mov    rbp,rcx
   140006d11:	cmp    QWORD PTR [rcx],rbx
   140006d14:	je     0x140006e6a
   140006d1a:	mov    QWORD PTR [rsp+0x40],rbx
   140006d1f:	mov    eax,DWORD PTR [rbx]
   140006d21:	mov    QWORD PTR [rsp+0x48],rsi
   140006d26:	mov    QWORD PTR [rsp+0x50],r12
   140006d2b:	test   eax,eax
   140006d2d:	je     0x140006d46
   140006d2f:	cmp    eax,0xffffffff
   140006d32:	je     0x140006dce
   140006d38:	lock add DWORD PTR [rbx],0x1
   140006d3c:	mov    rbx,QWORD PTR [rsp+0x40]
   140006d41:	jmp    0x140006dce
   140006d46:	mov    edx,DWORD PTR [rbx+0x4]
   140006d49:	lea    rcx,[rsp+0x40]
   140006d4e:	mov    QWORD PTR [rsp+0x58],r13
   140006d53:	call   QWORD PTR [rip+0xd75f]        # 0x1400144b8
   140006d59:	mov    rbx,QWORD PTR [rsp+0x40]
   140006d5e:	mov    rcx,QWORD PTR [rdi]
   140006d61:	movsxd rax,DWORD PTR [rbx+0xc]
   140006d65:	lea    r13,[rbx+rax*8+0x10]
   140006d6a:	movsxd rax,DWORD PTR [rcx+0x8]
   140006d6e:	lea    r12,[rcx+rax*8+0x10]
   140006d73:	movsxd rax,DWORD PTR [rbx+0x8]
   140006d77:	lea    rsi,[rbx+rax*8+0x10]
   140006d7c:	cmp    rsi,r13
   140006d7f:	je     0x140006dc9
   140006d81:	mov    ecx,0x10
   140006d86:	call   0x140012892
   140006d8b:	mov    rdi,rax
   140006d8e:	test   rax,rax
   140006d91:	je     0x140006db2
   140006d93:	mov    rbx,QWORD PTR [r12]
   140006d97:	mov    rcx,rax
   140006d9a:	mov    rdx,rbx
   140006d9d:	call   QWORD PTR [rip+0xd7c5]        # 0x140014568
   140006da3:	lea    rdx,[rbx+0x8]
   140006da7:	lea    rcx,[rdi+0x8]
   140006dab:	call   0x140001980
   140006db0:	jmp    0x140006db4
   140006db2:	xor    edi,edi
   140006db4:	mov    QWORD PTR [rsi],rdi
   140006db7:	add    rsi,0x8
   140006dbb:	add    r12,0x8
   140006dbf:	cmp    rsi,r13
   140006dc2:	jne    0x140006d81
   140006dc4:	mov    rbx,QWORD PTR [rsp+0x40]
   140006dc9:	mov    r13,QWORD PTR [rsp+0x58]
   140006dce:	lea    rax,[rsp+0x40]
   140006dd3:	cmp    rax,rbp
   140006dd6:	je     0x140006de8
   140006dd8:	mov    rax,rbx
   140006ddb:	mov    rbx,QWORD PTR [rbp+0x0]
   140006ddf:	mov    QWORD PTR [rsp+0x40],rbx
   140006de4:	mov    QWORD PTR [rbp+0x0],rax
   140006de8:	mov    eax,DWORD PTR [rbx]
   140006dea:	test   eax,eax
   140006dec:	je     0x140006e03
   140006dee:	cmp    eax,0xffffffff
   140006df1:	je     0x140006e55
   140006df3:	lock add DWORD PTR [rbx],0xffffffff
   140006df7:	setne  al
   140006dfa:	test   al,al
   140006dfc:	jne    0x140006e55
   140006dfe:	mov    rbx,QWORD PTR [rsp+0x40]
   140006e03:	movsxd rax,DWORD PTR [rbx+0xc]
   140006e07:	lea    rdi,[rbx+rax*8+0x10]
   140006e0c:	movsxd rax,DWORD PTR [rbx+0x8]
   140006e10:	lea    r12,[rbx+rax*8+0x10]
   140006e15:	cmp    r12,rdi
   140006e18:	je     0x140006e4c
   140006e1a:	nop    WORD PTR [rax+rax*1+0x0]
   140006e20:	mov    rsi,QWORD PTR [rdi-0x8]
   140006e24:	sub    rdi,0x8
   140006e28:	test   rsi,rsi
   140006e2b:	je     0x140006e47
   140006e2d:	lea    rcx,[rsi+0x8]
   140006e31:	call   0x140001a30
   140006e36:	mov    rcx,rsi
   140006e39:	call   QWORD PTR [rip+0xd709]        # 0x140014548
   140006e3f:	mov    rcx,rsi
   140006e42:	call   0x140012898
   140006e47:	cmp    rdi,r12
   140006e4a:	jne    0x140006e20
   140006e4c:	mov    rcx,rbx
   140006e4f:	call   QWORD PTR [rip+0xd683]        # 0x1400144d8
   140006e55:	mov    rsi,QWORD PTR [rsp+0x48]
   140006e5a:	mov    r12,QWORD PTR [rsp+0x50]
   140006e5f:	mov    rax,rbp
   140006e62:	add    rsp,0x20
   140006e66:	pop    rdi
   140006e67:	pop    rbp
   140006e68:	pop    rbx
   140006e69:	ret    
   140006e6a:	mov    rax,rcx
   140006e6d:	add    rsp,0x20
   140006e71:	pop    rdi
   140006e72:	pop    rbp
   140006e73:	pop    rbx
   140006e74:	ret    
   140006e75:	int3   
   140006e76:	int3   
   140006e77:	int3   
   140006e78:	int3   
   140006e79:	int3   
   140006e7a:	int3   
   140006e7b:	int3   
   140006e7c:	int3   
   140006e7d:	int3   
   140006e7e:	int3   
   140006e7f:	int3   
   140006e80:	mov    QWORD PTR [rsp+0x8],rbx
   140006e85:	mov    QWORD PTR [rsp+0x18],rbp
   140006e8a:	mov    QWORD PTR [rsp+0x20],rsi
   140006e8f:	mov    DWORD PTR [rsp+0x10],edx
   140006e93:	push   rdi
   140006e94:	sub    rsp,0x20
   140006e98:	mov    rdx,QWORD PTR [rcx]
   140006e9b:	movsxd rdi,r8d
   140006e9e:	mov    rbp,rcx
   140006ea1:	movsxd rax,DWORD PTR [rdx+0x8]
   140006ea5:	mov    r8d,edi
   140006ea8:	lea    rbx,[rdx+rax*8+0x10]
   140006ead:	lea    rdx,[rsp+0x38]
   140006eb2:	call   QWORD PTR [rip+0xd5f0]        # 0x1400144a8
   140006eb8:	mov    r10,QWORD PTR [rbp+0x0]
   140006ebc:	movsxd rdx,DWORD PTR [rsp+0x38]
   140006ec1:	movsxd r9,DWORD PTR [r10+0x8]
   140006ec5:	mov    rcx,rbp
   140006ec8:	mov    rsi,rax
   140006ecb:	add    rdx,r9
   140006ece:	lea    r8,[r10+rdx*8+0x10]
   140006ed3:	lea    rdx,[r10+r9*8+0x10]
   140006ed8:	mov    r9,rbx
   140006edb:	call   0x140006ae0
   140006ee0:	mov    rdx,QWORD PTR [rbp+0x0]
   140006ee4:	movsxd r11,DWORD PTR [rsp+0x38]
   140006ee9:	movsxd rcx,DWORD PTR [rdx+0xc]
   140006eed:	lea    r9,[rbx+r11*8]
   140006ef1:	lea    r8,[rdx+rcx*8+0x10]
   140006ef6:	movsxd rcx,DWORD PTR [rdx+0x8]
   140006efa:	add    rcx,r11
   140006efd:	add    rcx,rdi
   140006f00:	lea    rdx,[rdx+rcx*8+0x10]
   140006f05:	mov    rcx,rbp
   140006f08:	call   0x140006ae0
   140006f0d:	mov    r11d,DWORD PTR [rsi]
   140006f10:	test   r11d,r11d
   140006f13:	je     0x140006f26
   140006f15:	cmp    r11d,0xffffffff
   140006f19:	je     0x140006f31
   140006f1b:	lock add DWORD PTR [rsi],0xffffffff
   140006f1f:	setne  al
   140006f22:	test   al,al
   140006f24:	jne    0x140006f31
   140006f26:	mov    rdx,rsi
   140006f29:	mov    rcx,rbp
   140006f2c:	call   0x140003610
   140006f31:	mov    rdx,QWORD PTR [rbp+0x0]
   140006f35:	movsxd rax,DWORD PTR [rsp+0x38]
   140006f3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f3f:	movsxd rcx,DWORD PTR [rdx+0x8]
   140006f43:	mov    rbp,QWORD PTR [rsp+0x40]
   140006f48:	mov    rsi,QWORD PTR [rsp+0x48]
   140006f4d:	add    rcx,rax
   140006f50:	lea    rax,[rdx+rcx*8+0x10]
   140006f55:	add    rsp,0x20
   140006f59:	pop    rdi
   140006f5a:	ret    
   140006f5b:	int3   
   140006f5c:	int3   
   140006f5d:	int3   
   140006f5e:	int3   
   140006f5f:	int3   
   140006f60:	rex push rbx
   140006f62:	sub    rsp,0x30
   140006f66:	mov    rbx,rcx
   140006f69:	call   QWORD PTR [rip+0xd771]        # 0x1400146e0
   140006f6f:	lea    r11,[rip+0x10442]        # 0x1400173b8
   140006f76:	mov    QWORD PTR [rbx],r11
   140006f79:	lea    rax,[rip+0x103f8]        # 0x140017378
   140006f80:	lea    r8,[rip+0x103d1]        # 0x140017358
   140006f87:	mov    QWORD PTR [rbx+0x10],rax
   140006f8b:	mov    rax,QWORD PTR [rip+0xd566]        # 0x1400144f8
   140006f92:	lea    rdx,[rsp+0x40]
   140006f97:	mov    QWORD PTR [rbx+0x90],rax
   140006f9e:	mov    rax,QWORD PTR [rip+0xd553]        # 0x1400144f8
   140006fa5:	lea    rcx,[rip+0x2273c]        # 0x1400296e8
   140006fac:	xor    r9d,r9d
   140006faf:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140006fb7:	mov    QWORD PTR [rbx+0x98],rax
   140006fbe:	call   QWORD PTR [rip+0xd594]        # 0x140014558
   140006fc4:	lea    rdx,[rsp+0x40]
   140006fc9:	mov    rcx,rbx
   140006fcc:	call   QWORD PTR [rip+0xd706]        # 0x1400146d8
   140006fd2:	lea    rcx,[rsp+0x40]
   140006fd7:	call   QWORD PTR [rip+0xd56b]        # 0x140014548
   140006fdd:	lea    r8,[rip+0x102bc]        # 0x1400172a0
   140006fe4:	lea    rdx,[rsp+0x40]
   140006fe9:	lea    rcx,[rip+0x226f8]        # 0x1400296e8
   140006ff0:	xor    r9d,r9d
   140006ff3:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140006ffb:	call   QWORD PTR [rip+0xd557]        # 0x140014558
   140007001:	lea    rdx,[rsp+0x40]
   140007006:	mov    rcx,rbx
   140007009:	call   QWORD PTR [rip+0xd6c1]        # 0x1400146d0
   14000700f:	lea    rcx,[rsp+0x40]
   140007014:	call   QWORD PTR [rip+0xd52e]        # 0x140014548
   14000701a:	lea    rcx,[rbx+0x30]
   14000701e:	mov    rdx,rbx
   140007021:	call   0x140006180
   140007026:	lea    r8,[rip+0x1025b]        # 0x140017288
   14000702d:	lea    rdx,[rsp+0x40]
   140007032:	lea    rcx,[rip+0x226af]        # 0x1400296e8
   140007039:	xor    r9d,r9d
   14000703c:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140007044:	call   QWORD PTR [rip+0xd50e]        # 0x140014558
   14000704a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000704e:	call   QWORD PTR [rip+0xd70c]        # 0x140014760
   140007054:	lea    r8,[rsp+0x40]
   140007059:	xor    edx,edx
   14000705b:	mov    rcx,rax
   14000705e:	call   QWORD PTR [rip+0xd6f4]        # 0x140014758
   140007064:	lea    rcx,[rsp+0x40]
   140007069:	call   QWORD PTR [rip+0xd4d9]        # 0x140014548
   14000706f:	lea    r8,[rip+0x101fa]        # 0x140017270
   140007076:	lea    rdx,[rsp+0x40]
   14000707b:	lea    rcx,[rip+0x22666]        # 0x1400296e8
   140007082:	xor    r9d,r9d
   140007085:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000708d:	call   QWORD PTR [rip+0xd4c5]        # 0x140014558
   140007093:	mov    rcx,QWORD PTR [rbx+0x58]
   140007097:	call   QWORD PTR [rip+0xd6c3]        # 0x140014760
   14000709d:	lea    r8,[rsp+0x40]
   1400070a2:	mov    edx,0x1
   1400070a7:	mov    rcx,rax
   1400070aa:	call   QWORD PTR [rip+0xd6a8]        # 0x140014758
   1400070b0:	lea    rcx,[rsp+0x40]
   1400070b5:	call   QWORD PTR [rip+0xd48d]        # 0x140014548
   1400070bb:	mov    rcx,QWORD PTR [rbx+0x58]
   1400070bf:	xor    edx,edx
   1400070c1:	call   QWORD PTR [rip+0xe5d9]        # 0x1400156a0
   1400070c7:	mov    rcx,QWORD PTR [rbx+0x68]
   1400070cb:	mov    dl,0x1
   1400070cd:	call   QWORD PTR [rip+0xd69d]        # 0x140014770
   1400070d3:	mov    rdx,QWORD PTR [rbx+0x60]
   1400070d7:	lea    rax,[rip+0x10182]        # 0x140017260
   1400070de:	lea    r8,[rip+0xf2c3]        # 0x1400163a8
   1400070e5:	lea    rcx,[rsp+0x40]
   1400070ea:	mov    r9,rbx
   1400070ed:	mov    DWORD PTR [rsp+0x28],0x0
   1400070f5:	mov    QWORD PTR [rsp+0x20],rax
   1400070fa:	call   QWORD PTR [rip+0xd368]        # 0x140014468
   140007100:	lea    rcx,[rsp+0x40]
   140007105:	call   QWORD PTR [rip+0xd365]        # 0x140014470
   14000710b:	mov    DWORD PTR [rsp+0x28],0x0
   140007113:	lea    rax,[rip+0x10136]        # 0x140017250
   14000711a:	mov    rdx,QWORD PTR [rbx+0x68]
   14000711e:	lea    r8,[rip+0xf283]        # 0x1400163a8
   140007125:	lea    rcx,[rsp+0x40]
   14000712a:	mov    r9,rbx
   14000712d:	mov    QWORD PTR [rsp+0x20],rax
   140007132:	call   QWORD PTR [rip+0xd330]        # 0x140014468
   140007138:	lea    rcx,[rsp+0x40]
   14000713d:	call   QWORD PTR [rip+0xd32d]        # 0x140014470
   140007143:	mov    rax,rbx
   140007146:	add    rsp,0x30
   14000714a:	pop    rbx
   14000714b:	ret    
   14000714c:	int3   
   14000714d:	int3   
   14000714e:	int3   
   14000714f:	int3   
   140007150:	sub    rcx,0x10
   140007154:	jmp    0x140007240
   140007159:	int3   
   14000715a:	int3   
   14000715b:	int3   
   14000715c:	int3   
   14000715d:	int3   
   14000715e:	int3   
   14000715f:	int3   
   140007160:	rex push rbx
   140007162:	sub    rsp,0x20
   140007166:	mov    rbx,rdx
   140007169:	lea    rdx,[rcx+0x98]
   140007170:	mov    rcx,rbx
   140007173:	call   0x140006c80
   140007178:	mov    rax,rbx
   14000717b:	add    rsp,0x20
   14000717f:	pop    rbx
   140007180:	ret    
   140007181:	int3   
   140007182:	int3   
   140007183:	int3   
   140007184:	int3   
   140007185:	int3   
   140007186:	int3   
   140007187:	int3   
   140007188:	int3   
   140007189:	int3   
   14000718a:	int3   
   14000718b:	int3   
   14000718c:	int3   
   14000718d:	int3   
   14000718e:	int3   
   14000718f:	int3   
   140007190:	rex push rbx
   140007192:	sub    rsp,0x20
   140007196:	mov    rbx,QWORD PTR [rip+0xd35b]        # 0x1400144f8
   14000719d:	lea    rdx,[rsp+0x38]
   1400071a2:	mov    QWORD PTR [rsp+0x38],rbx
   1400071a7:	call   0x140006d00
   1400071ac:	mov    r11d,DWORD PTR [rbx]
   1400071af:	test   r11d,r11d
   1400071b2:	je     0x1400071ca
   1400071b4:	cmp    r11d,0xffffffff
   1400071b8:	je     0x140007234
   1400071ba:	lock add DWORD PTR [rbx],0xffffffff
   1400071be:	setne  al
   1400071c1:	test   al,al
   1400071c3:	jne    0x140007234
   1400071c5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400071ca:	movsxd rax,DWORD PTR [rbx+0xc]
   1400071ce:	mov    QWORD PTR [rsp+0x30],rbp
   1400071d3:	mov    QWORD PTR [rsp+0x48],rdi
   1400071d8:	lea    rdi,[rbx+rax*8+0x10]
   1400071dd:	movsxd rax,DWORD PTR [rbx+0x8]
   1400071e1:	lea    rbp,[rbx+rax*8+0x10]
   1400071e6:	cmp    rbp,rdi
   1400071e9:	je     0x140007221
   1400071eb:	mov    QWORD PTR [rsp+0x40],rsi
   1400071f0:	mov    rsi,QWORD PTR [rdi-0x8]
   1400071f4:	sub    rdi,0x8
   1400071f8:	test   rsi,rsi
   1400071fb:	je     0x140007217
   1400071fd:	lea    rcx,[rsi+0x8]
   140007201:	call   0x140001a30
   140007206:	mov    rcx,rsi
   140007209:	call   QWORD PTR [rip+0xd339]        # 0x140014548
   14000720f:	mov    rcx,rsi
   140007212:	call   0x140012898
   140007217:	cmp    rdi,rbp
   14000721a:	jne    0x1400071f0
   14000721c:	mov    rsi,QWORD PTR [rsp+0x40]
   140007221:	mov    rcx,rbx
   140007224:	call   QWORD PTR [rip+0xd2ae]        # 0x1400144d8
   14000722a:	mov    rdi,QWORD PTR [rsp+0x48]
   14000722f:	mov    rbp,QWORD PTR [rsp+0x30]
   140007234:	add    rsp,0x20
   140007238:	pop    rbx
   140007239:	ret    
   14000723a:	int3   
   14000723b:	int3   
   14000723c:	int3   
   14000723d:	int3   
   14000723e:	int3   
   14000723f:	int3   
   140007240:	mov    QWORD PTR [rsp+0x8],rbx
   140007245:	push   rdi
   140007246:	sub    rsp,0x20
   14000724a:	mov    rbx,rcx
   14000724d:	add    rcx,0x98
   140007254:	mov    edi,edx
   140007256:	mov    r8,QWORD PTR [rcx]
   140007259:	mov    eax,DWORD PTR [r8]
   14000725c:	test   eax,eax
   14000725e:	je     0x140007271
   140007260:	cmp    eax,0xffffffff
   140007263:	je     0x140007279
   140007265:	lock add DWORD PTR [r8],0xffffffff
   14000726a:	setne  al
   14000726d:	test   al,al
   14000726f:	jne    0x140007279
   140007271:	mov    rdx,QWORD PTR [rcx]
   140007274:	call   0x140003610
   140007279:	lea    rcx,[rbx+0x90]
   140007280:	call   0x140001a30
   140007285:	mov    rcx,rbx
   140007288:	call   QWORD PTR [rip+0xd4a2]        # 0x140014730
   14000728e:	test   dil,0x1
   140007292:	je     0x14000729c
   140007294:	mov    rcx,rbx
   140007297:	call   0x140012898
   14000729c:	mov    rax,rbx
   14000729f:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072a4:	add    rsp,0x20
   1400072a8:	pop    rdi
   1400072a9:	ret    
   1400072aa:	int3   
   1400072ab:	int3   
   1400072ac:	int3   
   1400072ad:	int3   
   1400072ae:	int3   
   1400072af:	int3   
   1400072b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400072b5:	push   rbx
   1400072b6:	push   rbp
   1400072b7:	push   rsi
   1400072b8:	push   rdi
   1400072b9:	push   r12
   1400072bb:	push   r13
   1400072bd:	push   r14
   1400072bf:	push   r15
   1400072c1:	sub    rsp,0x1f8
   1400072c8:	lea    r13,[rcx+0x90]
   1400072cf:	mov    rsi,rcx
   1400072d2:	xor    edi,edi
   1400072d4:	mov    rcx,r13
   1400072d7:	mov    DWORD PTR [rsp+0x248],edi
   1400072de:	call   0x140001b80
   1400072e3:	lea    rcx,[rsp+0x248]
   1400072eb:	mov    dl,0x2c
   1400072ed:	call   QWORD PTR [rip+0xd125]        # 0x140014418
   1400072f3:	mov    rcx,QWORD PTR [rsi+0x40]
   1400072f7:	lea    rdx,[rsp+0x190]
   1400072ff:	mov    rbx,rax
   140007302:	call   QWORD PTR [rip+0xd448]        # 0x140014750
   140007308:	movzx  r8d,WORD PTR [rbx]
   14000730c:	lea    rdx,[rsp+0xd0]
   140007314:	xor    r9d,r9d
   140007317:	mov    rcx,rax
   14000731a:	mov    DWORD PTR [rsp+0x20],0x1
   140007322:	call   QWORD PTR [rip+0xcfe8]        # 0x140014310
   140007328:	mov    rdx,QWORD PTR [rax]
   14000732b:	mov    rbx,rax
   14000732e:	mov    QWORD PTR [rsp+0x88],rdx
   140007336:	mov    ecx,DWORD PTR [rdx]
   140007338:	test   ecx,ecx
   14000733a:	je     0x140007347
   14000733c:	cmp    ecx,0xffffffff
   14000733f:	je     0x1400073a9
   140007341:	lock add DWORD PTR [rdx],0x1
   140007345:	jmp    0x1400073a1
   140007347:	mov    edx,DWORD PTR [rdx+0x4]
   14000734a:	lea    rcx,[rsp+0x88]
   140007352:	call   QWORD PTR [rip+0xd160]        # 0x1400144b8
   140007358:	mov    rdx,QWORD PTR [rsp+0x88]
   140007360:	mov    r11,QWORD PTR [rbx]
   140007363:	movsxd rax,DWORD PTR [r11+0x8]
   140007367:	lea    rsi,[r11+rax*8+0x10]
   14000736c:	movsxd rax,DWORD PTR [rdx+0xc]
   140007370:	lea    rbp,[rdx+rax*8+0x10]
   140007375:	movsxd rax,DWORD PTR [rdx+0x8]
   140007379:	lea    rbx,[rdx+rax*8+0x10]
   14000737e:	cmp    rbx,rbp
   140007381:	je     0x1400073a9
   140007383:	test   rbx,rbx
   140007386:	je     0x140007394
   140007388:	mov    rdx,rsi
   14000738b:	mov    rcx,rbx
   14000738e:	call   QWORD PTR [rip+0xd1d4]        # 0x140014568
   140007394:	add    rbx,0x8
   140007398:	add    rsi,0x8
   14000739c:	cmp    rbx,rbp
   14000739f:	jne    0x140007383
   1400073a1:	mov    rdx,QWORD PTR [rsp+0x88]
   1400073a9:	mov    rsi,QWORD PTR [rsp+0xd0]
   1400073b1:	mov    DWORD PTR [rsp+0x90],edi
   1400073b8:	movsxd rax,DWORD PTR [rdx+0x8]
   1400073bc:	lea    rcx,[rdx+rax*8+0x10]
   1400073c1:	or     r15d,0xffffffff
   1400073c5:	mov    QWORD PTR [rsp+0x98],rcx
   1400073cd:	movsxd rax,DWORD PTR [rdx+0xc]
   1400073d1:	lea    rcx,[rdx+rax*8+0x10]
   1400073d6:	mov    QWORD PTR [rsp+0xa0],rcx
   1400073de:	mov    eax,DWORD PTR [rsi]
   1400073e0:	test   eax,eax
   1400073e2:	je     0x1400073fc
   1400073e4:	cmp    eax,r15d
   1400073e7:	je     0x14000742e
   1400073e9:	lock add DWORD PTR [rsi],r15d
   1400073ed:	setne  al
   1400073f0:	test   al,al
   1400073f2:	jne    0x14000742e
   1400073f4:	mov    rsi,QWORD PTR [rsp+0xd0]
   1400073fc:	movsxd rax,DWORD PTR [rsi+0xc]
   140007400:	lea    rbx,[rsi+rax*8+0x10]
   140007405:	movsxd rax,DWORD PTR [rsi+0x8]
   140007409:	lea    rbp,[rsi+rax*8+0x10]
   14000740e:	cmp    rbp,rbx
   140007411:	je     0x140007425
   140007413:	sub    rbx,0x8
   140007417:	mov    rcx,rbx
   14000741a:	call   QWORD PTR [rip+0xd128]        # 0x140014548
   140007420:	cmp    rbx,rbp
   140007423:	jne    0x140007413
   140007425:	mov    rcx,rsi
   140007428:	call   QWORD PTR [rip+0xd0aa]        # 0x1400144d8
   14000742e:	lea    rcx,[rsp+0x190]
   140007436:	call   QWORD PTR [rip+0xd10c]        # 0x140014548
   14000743c:	nop    DWORD PTR [rax+0x0]
   140007440:	mov    eax,DWORD PTR [rsp+0x90]
   140007447:	inc    DWORD PTR [rsp+0x90]
   14000744e:	test   eax,eax
   140007450:	jne    0x140007469
   140007452:	mov    rax,QWORD PTR [rsp+0xa0]
   14000745a:	cmp    QWORD PTR [rsp+0x98],rax
   140007462:	je     0x140007469
   140007464:	mov    r12b,0x1
   140007467:	jmp    0x14000746c
   140007469:	xor    r12b,r12b
   14000746c:	test   dil,0x8
   140007470:	je     0x1400074cd
   140007472:	mov    rsi,QWORD PTR [rsp+0x158]
   14000747a:	and    edi,0xfffffff7
   14000747d:	mov    eax,DWORD PTR [rsi]
   14000747f:	test   eax,eax
   140007481:	je     0x14000749b
   140007483:	cmp    eax,0xffffffff
   140007486:	je     0x1400074cd
   140007488:	lock add DWORD PTR [rsi],0xffffffff
   14000748c:	setne  al
   14000748f:	test   al,al
   140007491:	jne    0x1400074cd
   140007493:	mov    rsi,QWORD PTR [rsp+0x158]
   14000749b:	movsxd rax,DWORD PTR [rsi+0xc]
   14000749f:	lea    rbx,[rsi+rax*8+0x10]
   1400074a4:	movsxd rax,DWORD PTR [rsi+0x8]
   1400074a8:	lea    rbp,[rsi+rax*8+0x10]
   1400074ad:	cmp    rbp,rbx
   1400074b0:	je     0x1400074c4
   1400074b2:	sub    rbx,0x8
   1400074b6:	mov    rcx,rbx
   1400074b9:	call   QWORD PTR [rip+0xd089]        # 0x140014548
   1400074bf:	cmp    rbx,rbp
   1400074c2:	jne    0x1400074b2
   1400074c4:	mov    rcx,rsi
   1400074c7:	call   QWORD PTR [rip+0xd00b]        # 0x1400144d8
   1400074cd:	test   dil,0x4
   1400074d1:	je     0x1400074e4
   1400074d3:	lea    rcx,[rsp+0x198]
   1400074db:	and    edi,0xfffffffb
   1400074de:	call   QWORD PTR [rip+0xd064]        # 0x140014548
   1400074e4:	test   r12b,r12b
   1400074e7:	je     0x1400077b5
   1400074ed:	mov    r14,QWORD PTR [rsp+0x98]
   1400074f5:	test   dil,0x20
   1400074f9:	je     0x14000755b
   1400074fb:	mov    rsi,QWORD PTR [rsp+0x100]
   140007503:	and    edi,0xffffffdf
   140007506:	mov    eax,DWORD PTR [rsi]
   140007508:	test   eax,eax
   14000750a:	je     0x140007524
   14000750c:	cmp    eax,0xffffffff
   14000750f:	je     0x14000755b
   140007511:	lock add DWORD PTR [rsi],0xffffffff
   140007515:	setne  al
   140007518:	test   al,al
   14000751a:	jne    0x14000755b
   14000751c:	mov    rsi,QWORD PTR [rsp+0x100]
   140007524:	movsxd rax,DWORD PTR [rsi+0xc]
   140007528:	lea    rbx,[rsi+rax*8+0x10]
   14000752d:	movsxd rax,DWORD PTR [rsi+0x8]
   140007531:	lea    rbp,[rsi+rax*8+0x10]
   140007536:	cmp    rbp,rbx
   140007539:	je     0x140007552
   14000753b:	nop    DWORD PTR [rax+rax*1+0x0]
   140007540:	sub    rbx,0x8
   140007544:	mov    rcx,rbx
   140007547:	call   QWORD PTR [rip+0xcffb]        # 0x140014548
   14000754d:	cmp    rbx,rbp
   140007550:	jne    0x140007540
   140007552:	mov    rcx,rsi
   140007555:	call   QWORD PTR [rip+0xcf7d]        # 0x1400144d8
   14000755b:	test   dil,0x10
   14000755f:	je     0x140007572
   140007561:	and    edi,0xffffffef
   140007564:	lea    rcx,[rsp+0x1c8]
   14000756c:	call   QWORD PTR [rip+0xcfd6]        # 0x140014548
   140007572:	bt     edi,0x9
   140007576:	mov    r12d,DWORD PTR [rsp+0x90]
   14000757e:	jae    0x1400075dc
   140007580:	mov    rsi,QWORD PTR [rsp+0x150]
   140007588:	btr    edi,0x9
   14000758c:	mov    eax,DWORD PTR [rsi]
   14000758e:	test   eax,eax
   140007590:	je     0x1400075a2
   140007592:	cmp    eax,0xffffffff
   140007595:	je     0x1400075dc
   140007597:	lock add DWORD PTR [rsi],0xffffffff
   14000759b:	setne  al
   14000759e:	test   al,al
   1400075a0:	jne    0x1400075dc
   1400075a2:	mov    rsi,QWORD PTR [rsp+0x150]
   1400075aa:	movsxd rax,DWORD PTR [rsi+0xc]
   1400075ae:	lea    rbx,[rsi+rax*8+0x10]
   1400075b3:	movsxd rax,DWORD PTR [rsi+0x8]
   1400075b7:	lea    rbp,[rsi+rax*8+0x10]
   1400075bc:	cmp    rbp,rbx
   1400075bf:	je     0x1400075d3
   1400075c1:	sub    rbx,0x8
   1400075c5:	mov    rcx,rbx
   1400075c8:	call   QWORD PTR [rip+0xcf7a]        # 0x140014548
   1400075ce:	cmp    rbx,rbp
   1400075d1:	jne    0x1400075c1
   1400075d3:	mov    rcx,rsi
   1400075d6:	call   QWORD PTR [rip+0xcefc]        # 0x1400144d8
   1400075dc:	bt     edi,0x8
   1400075e0:	jae    0x1400075f4
   1400075e2:	lea    rcx,[rsp+0x1d8]
   1400075ea:	btr    edi,0x8
   1400075ee:	call   QWORD PTR [rip+0xcf54]        # 0x140014548
   1400075f4:	test   r12d,r12d
   1400075f7:	je     0x140007728
   1400075fd:	lea    rdx,[rsp+0x110]
   140007605:	mov    rcx,r14
   140007608:	call   QWORD PTR [rip+0xcd4a]        # 0x140014358
   14000760e:	mov    rcx,QWORD PTR [rax]
   140007611:	cmp    DWORD PTR [rcx+0x4],0x0
   140007615:	lea    rcx,[rsp+0x110]
   14000761d:	setne  bl
   140007620:	call   QWORD PTR [rip+0xcf22]        # 0x140014548
   140007626:	test   bl,bl
   140007628:	je     0x1400076a6
   14000762a:	lea    rdx,[rsp+0x170]
   140007632:	mov    rcx,r14
   140007635:	call   QWORD PTR [rip+0xcd1d]        # 0x140014358
   14000763b:	mov    rcx,QWORD PTR [r13+0x0]
   14000763f:	mov    edx,DWORD PTR [rcx]
   140007641:	mov    rbx,rax
   140007644:	cmp    edx,0x1
   140007647:	je     0x140007673
   140007649:	test   edx,edx
   14000764b:	je     0x140007673
   14000764d:	mov    edx,0x7fffffff
   140007652:	mov    r8d,0x1
   140007658:	mov    rcx,r13
   14000765b:	call   0x140001c10
   140007660:	test   rax,rax
   140007663:	je     0x140007698
   140007665:	mov    rdx,rbx
   140007668:	mov    rcx,rax
   14000766b:	call   QWORD PTR [rip+0xcef7]        # 0x140014568
   140007671:	jmp    0x140007698
   140007673:	lea    rcx,[rsp+0x160]
   14000767b:	mov    rdx,rax
   14000767e:	call   QWORD PTR [rip+0xcee4]        # 0x140014568
   140007684:	mov    rcx,r13
   140007687:	call   QWORD PTR [rip+0xce13]        # 0x1400144a0
   14000768d:	mov    rcx,QWORD PTR [rsp+0x160]
   140007695:	mov    QWORD PTR [rax],rcx
   140007698:	lea    rcx,[rsp+0x170]
   1400076a0:	call   QWORD PTR [rip+0xcea2]        # 0x140014548
   1400076a6:	dec    DWORD PTR [rsp+0x90]
   1400076ad:	test   dil,dil
   1400076b0:	jns    0x14000770e
   1400076b2:	mov    rsi,QWORD PTR [rsp+0xf0]
   1400076ba:	btr    edi,0x7
   1400076be:	mov    eax,DWORD PTR [rsi]
   1400076c0:	test   eax,eax
   1400076c2:	je     0x1400076d4
   1400076c4:	cmp    eax,0xffffffff
   1400076c7:	je     0x14000770e
   1400076c9:	lock add DWORD PTR [rsi],0xffffffff
   1400076cd:	setne  al
   1400076d0:	test   al,al
   1400076d2:	jne    0x14000770e
   1400076d4:	mov    rsi,QWORD PTR [rsp+0xf0]
   1400076dc:	movsxd rax,DWORD PTR [rsi+0xc]
   1400076e0:	lea    rbx,[rsi+rax*8+0x10]
   1400076e5:	movsxd rax,DWORD PTR [rsi+0x8]
   1400076e9:	lea    rbp,[rsi+rax*8+0x10]
   1400076ee:	cmp    rbp,rbx
   1400076f1:	je     0x140007705
   1400076f3:	sub    rbx,0x8
   1400076f7:	mov    rcx,rbx
   1400076fa:	call   QWORD PTR [rip+0xce48]        # 0x140014548
   140007700:	cmp    rbx,rbp
   140007703:	jne    0x1400076f3
   140007705:	mov    rcx,rsi
   140007708:	call   QWORD PTR [rip+0xcdca]        # 0x1400144d8
   14000770e:	test   dil,0x40
   140007712:	je     0x140007572
   140007718:	and    edi,0xffffffbf
   14000771b:	lea    rcx,[rsp+0x1e8]
   140007723:	jmp    0x14000756c
   140007728:	add    QWORD PTR [rsp+0x98],0x8
   140007731:	test   dil,0x2
   140007735:	je     0x14000779b
   140007737:	mov    rsi,QWORD PTR [rsp+0x178]
   14000773f:	and    edi,0xfffffffd
   140007742:	mov    eax,DWORD PTR [rsi]
   140007744:	test   eax,eax
   140007746:	je     0x140007760
   140007748:	cmp    eax,0xffffffff
   14000774b:	je     0x14000779b
   14000774d:	lock add DWORD PTR [rsi],0xffffffff
   140007751:	setne  al
   140007754:	test   al,al
   140007756:	jne    0x14000779b
   140007758:	mov    rsi,QWORD PTR [rsp+0x178]
   140007760:	movsxd rax,DWORD PTR [rsi+0xc]
   140007764:	lea    rbx,[rsi+rax*8+0x10]
   140007769:	movsxd rax,DWORD PTR [rsi+0x8]
   14000776d:	lea    rbp,[rsi+rax*8+0x10]
   140007772:	cmp    rbp,rbx
   140007775:	je     0x140007792
   140007777:	nop    WORD PTR [rax+rax*1+0x0]
   140007780:	sub    rbx,0x8
   140007784:	mov    rcx,rbx
   140007787:	call   QWORD PTR [rip+0xcdbb]        # 0x140014548
   14000778d:	cmp    rbx,rbp
   140007790:	jne    0x140007780
   140007792:	mov    rcx,rsi
   140007795:	call   QWORD PTR [rip+0xcd3d]        # 0x1400144d8
   14000779b:	test   dil,0x1
   14000779f:	je     0x140007440
   1400077a5:	and    edi,0xfffffffe
   1400077a8:	lea    rcx,[rsp+0x1e0]
   1400077b0:	jmp    0x140007436
   1400077b5:	mov    rsi,QWORD PTR [rsp+0x88]
   1400077bd:	mov    eax,DWORD PTR [rsi]
   1400077bf:	test   eax,eax
   1400077c1:	je     0x1400077db
   1400077c3:	cmp    eax,0xffffffff
   1400077c6:	je     0x14000780d
   1400077c8:	lock add DWORD PTR [rsi],0xffffffff
   1400077cc:	setne  al
   1400077cf:	test   al,al
   1400077d1:	jne    0x14000780d
   1400077d3:	mov    rsi,QWORD PTR [rsp+0x88]
   1400077db:	movsxd rax,DWORD PTR [rsi+0xc]
   1400077df:	lea    rbx,[rsi+rax*8+0x10]
   1400077e4:	movsxd rax,DWORD PTR [rsi+0x8]
   1400077e8:	lea    rbp,[rsi+rax*8+0x10]
   1400077ed:	cmp    rbp,rbx
   1400077f0:	je     0x140007804
   1400077f2:	sub    rbx,0x8
   1400077f6:	mov    rcx,rbx
   1400077f9:	call   QWORD PTR [rip+0xcd49]        # 0x140014548
   1400077ff:	cmp    rbx,rbp
   140007802:	jne    0x1400077f2
   140007804:	mov    rcx,rsi
   140007807:	call   QWORD PTR [rip+0xcccb]        # 0x1400144d8
   14000780d:	mov    r12,QWORD PTR [rsp+0x240]
   140007815:	lea    rcx,[r12+0x98]
   14000781d:	call   0x140007190
   140007822:	mov    rbx,QWORD PTR [rip+0xccbf]        # 0x1400144e8
   140007829:	lea    rcx,[rsp+0x30]
   14000782e:	mov    QWORD PTR [rsp+0x38],rbx
   140007833:	mov    QWORD PTR [rsp+0x40],rbx
   140007838:	call   QWORD PTR [rip+0xcbb2]        # 0x1400143f0
   14000783e:	lea    rcx,[rsp+0x50]
   140007843:	call   QWORD PTR [rip+0xcba7]        # 0x1400143f0
   140007849:	mov    r11,QWORD PTR [rip+0xcca8]        # 0x1400144f8
   140007850:	mov    rcx,QWORD PTR [r12+0x58]
   140007855:	mov    QWORD PTR [rsp+0x58],r11
   14000785a:	xor    r14d,r14d
   14000785d:	call   QWORD PTR [rip+0xcf15]        # 0x140014778
   140007863:	test   eax,eax
   140007865:	jle    0x1400081a7
   14000786b:	nop    DWORD PTR [rax+rax*1+0x0]
   140007870:	mov    rcx,QWORD PTR [r12+0x58]
   140007875:	mov    edx,r14d
   140007878:	call   QWORD PTR [rip+0xd2ea]        # 0x140014b68
   14000787e:	lea    rdx,[rsp+0x138]
   140007886:	xor    r8d,r8d
   140007889:	mov    rcx,rax
   14000788c:	mov    r12,rax
   14000788f:	call   QWORD PTR [rip+0xd2cb]        # 0x140014b60
   140007895:	lea    rcx,[rsp+0x30]
   14000789a:	mov    rdx,rax
   14000789d:	call   QWORD PTR [rip+0xcaad]        # 0x140014350
   1400078a3:	lea    rcx,[rsp+0x138]
   1400078ab:	call   QWORD PTR [rip+0xcc97]        # 0x140014548
   1400078b1:	mov    r11,QWORD PTR [rsp+0x30]
   1400078b6:	cmp    DWORD PTR [r11+0x4],0x0
   1400078bb:	je     0x1400083f0
   1400078c1:	xor    ebp,ebp
   1400078c3:	cmp    DWORD PTR [rbx+0x20],ebp
   1400078c6:	je     0x1400078d8
   1400078c8:	mov    edx,DWORD PTR [rbx+0x24]
   1400078cb:	lea    rcx,[rsp+0x30]
   1400078d0:	call   QWORD PTR [rip+0xcbfa]        # 0x1400144d0
   1400078d6:	mov    ebp,eax
   1400078d8:	mov    ecx,DWORD PTR [rbx+0x20]
   1400078db:	test   ecx,ecx
   1400078dd:	je     0x140007922
   1400078df:	xor    edx,edx
   1400078e1:	mov    eax,ebp
   1400078e3:	div    ecx
   1400078e5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400078e9:	lea    rsi,[rcx+rdx*8]
   1400078ed:	mov    rcx,QWORD PTR [rcx+rdx*8]
   1400078f1:	cmp    rcx,rbx
   1400078f4:	je     0x140007919
   1400078f6:	cmp    ebp,DWORD PTR [rcx+0x8]
   1400078f9:	jne    0x14000790e
   1400078fb:	lea    rdx,[rcx+0x10]
   1400078ff:	lea    rcx,[rsp+0x30]
   140007904:	call   QWORD PTR [rip+0xcbd6]        # 0x1400144e0
   14000790a:	test   al,al
   14000790c:	jne    0x140007919
   14000790e:	mov    rsi,QWORD PTR [rsi]
   140007911:	mov    rcx,QWORD PTR [rsi]
   140007914:	cmp    rcx,rbx
   140007917:	jne    0x1400078f6
   140007919:	cmp    QWORD PTR [rsi],rbx
   14000791c:	jne    0x1400083f0
   140007922:	mov    eax,DWORD PTR [rbx+0x10]
   140007925:	cmp    eax,0x1
   140007928:	je     0x14000798b
   14000792a:	test   eax,eax
   14000792c:	je     0x14000798b
   14000792e:	lea    r8,[rip+0xffffffffffff9fdb]        # 0x140001910
   140007935:	lea    rdx,[rip+0xffffffffffffe814]        # 0x140006150
   14000793c:	mov    r9d,0x18
   140007942:	mov    rcx,rbx
   140007945:	mov    DWORD PTR [rsp+0x20],0x8
   14000794d:	call   QWORD PTR [rip+0xc9dd]        # 0x140014330
   140007953:	mov    ecx,DWORD PTR [rbx+0x10]
   140007956:	mov    rsi,rax
   140007959:	test   ecx,ecx
   14000795b:	je     0x140007973
   14000795d:	cmp    ecx,0xffffffff
   140007960:	je     0x140007983
   140007962:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140007967:	setne  cl
   14000796a:	test   cl,cl
   14000796c:	jne    0x140007983
   14000796e:	mov    rbx,QWORD PTR [rsp+0x38]
   140007973:	lea    rdx,[rip+0xffffffffffff9f96]        # 0x140001910
   14000797a:	mov    rcx,rbx
   14000797d:	call   QWORD PTR [rip+0xcb2d]        # 0x1400144b0
   140007983:	mov    rbx,rsi
   140007986:	mov    QWORD PTR [rsp+0x38],rbx
   14000798b:	mov    edx,DWORD PTR [rbx+0x24]
   14000798e:	lea    rcx,[rsp+0x30]
   140007993:	call   QWORD PTR [rip+0xcb37]        # 0x1400144d0
   140007999:	mov    ecx,DWORD PTR [rbx+0x20]
   14000799c:	mov    ebp,eax
   14000799e:	mov    DWORD PTR [rsp+0xb4],eax
   1400079a5:	test   ecx,ecx
   1400079a7:	je     0x1400079e5
   1400079a9:	xor    edx,edx
   1400079ab:	div    ecx
   1400079ad:	mov    rcx,QWORD PTR [rbx+0x8]
   1400079b1:	lea    rsi,[rcx+rdx*8]
   1400079b5:	mov    rcx,QWORD PTR [rcx+rdx*8]
   1400079b9:	cmp    rcx,rbx
   1400079bc:	je     0x1400079ea
   1400079be:	xchg   ax,ax
   1400079c0:	cmp    ebp,DWORD PTR [rcx+0x8]
   1400079c3:	jne    0x1400079d8
   1400079c5:	lea    rdx,[rcx+0x10]
   1400079c9:	lea    rcx,[rsp+0x30]
   1400079ce:	call   QWORD PTR [rip+0xcb0c]        # 0x1400144e0
   1400079d4:	test   al,al
   1400079d6:	jne    0x1400079ea
   1400079d8:	mov    rsi,QWORD PTR [rsi]
   1400079db:	mov    rcx,QWORD PTR [rsi]
   1400079de:	cmp    rcx,rbx
   1400079e1:	jne    0x1400079c0
   1400079e3:	jmp    0x1400079ea
   1400079e5:	lea    rsi,[rsp+0x38]
   1400079ea:	cmp    QWORD PTR [rsi],rbx
   1400079ed:	jne    0x140007a9a
   1400079f3:	mov    rcx,rbx
   1400079f6:	call   QWORD PTR [rip+0xc91c]        # 0x140014318
   1400079fc:	test   al,al
   1400079fe:	je     0x140007a5d
   140007a00:	mov    edx,DWORD PTR [rbx+0x24]
   140007a03:	lea    rcx,[rsp+0x30]
   140007a08:	call   QWORD PTR [rip+0xcac2]        # 0x1400144d0
   140007a0e:	mov    ecx,DWORD PTR [rbx+0x20]
   140007a11:	mov    ebp,eax
   140007a13:	mov    DWORD PTR [rsp+0xb4],eax
   140007a1a:	test   ecx,ecx
   140007a1c:	je     0x140007a58
   140007a1e:	xor    edx,edx
   140007a20:	div    ecx
   140007a22:	mov    rax,QWORD PTR [rbx+0x8]
   140007a26:	lea    rsi,[rax+rdx*8]
   140007a2a:	mov    rax,QWORD PTR [rax+rdx*8]
   140007a2e:	cmp    rax,rbx
   140007a31:	je     0x140007a5d
   140007a33:	cmp    ebp,DWORD PTR [rax+0x8]
   140007a36:	jne    0x140007a4b
   140007a38:	lea    rdx,[rax+0x10]
   140007a3c:	lea    rcx,[rsp+0x30]
   140007a41:	call   QWORD PTR [rip+0xca99]        # 0x1400144e0
   140007a47:	test   al,al
   140007a49:	jne    0x140007a5d
   140007a4b:	mov    rsi,QWORD PTR [rsi]
   140007a4e:	mov    rax,QWORD PTR [rsi]
   140007a51:	cmp    rax,rbx
   140007a54:	jne    0x140007a33
   140007a56:	jmp    0x140007a5d
   140007a58:	lea    rsi,[rsp+0x38]
   140007a5d:	mov    edx,0x8
   140007a62:	mov    rcx,rbx
   140007a65:	call   QWORD PTR [rip+0xc8cd]        # 0x140014338
   140007a6b:	mov    rbx,rax
   140007a6e:	test   rax,rax
   140007a71:	je     0x140007a8d
   140007a73:	mov    rcx,QWORD PTR [rsi]
   140007a76:	lea    rdx,[rsp+0x30]
   140007a7b:	mov    DWORD PTR [rax+0x8],ebp
   140007a7e:	mov    QWORD PTR [rax],rcx
   140007a81:	lea    rcx,[rax+0x10]
   140007a85:	call   QWORD PTR [rip+0xcadd]        # 0x140014568
   140007a8b:	jmp    0x140007a8f
   140007a8d:	xor    ebx,ebx
   140007a8f:	mov    QWORD PTR [rsi],rbx
   140007a92:	mov    rax,QWORD PTR [rsp+0x38]
   140007a97:	inc    DWORD PTR [rax+0x14]
   140007a9a:	lea    rdx,[rsp+0x30]
   140007a9f:	lea    rcx,[rsp+0x50]
   140007aa4:	call   QWORD PTR [rip+0xc8a6]        # 0x140014350
   140007aaa:	lea    rcx,[rsp+0x30]
   140007aaf:	call   QWORD PTR [rip+0xc86b]        # 0x140014320
   140007ab5:	mov    r11,QWORD PTR [rip+0xca3c]        # 0x1400144f8
   140007abc:	lea    rcx,[rsp+0x250]
   140007ac4:	mov    dl,0x2c
   140007ac6:	mov    QWORD PTR [rsp+0x48],r11
   140007acb:	call   QWORD PTR [rip+0xc947]        # 0x140014418
   140007ad1:	lea    rdx,[rsp+0x168]
   140007ad9:	mov    r8d,0x1
   140007adf:	mov    rcx,r12
   140007ae2:	mov    rbx,rax
   140007ae5:	call   QWORD PTR [rip+0xd075]        # 0x140014b60
   140007aeb:	movzx  r8d,WORD PTR [rbx]
   140007aef:	lea    rdx,[rsp+0xc8]
   140007af7:	mov    rcx,rax
   140007afa:	xor    r9d,r9d
   140007afd:	mov    DWORD PTR [rsp+0x20],0x1
   140007b05:	call   QWORD PTR [rip+0xc805]        # 0x140014310
   140007b0b:	mov    rbx,rax
   140007b0e:	mov    rdx,QWORD PTR [rax]
   140007b11:	mov    QWORD PTR [rsp+0x68],rdx
   140007b16:	mov    ecx,DWORD PTR [rdx]
   140007b18:	test   ecx,ecx
   140007b1a:	je     0x140007b27
   140007b1c:	cmp    ecx,0xffffffff
   140007b1f:	je     0x140007b83
   140007b21:	lock add DWORD PTR [rdx],0x1
   140007b25:	jmp    0x140007b7e
   140007b27:	mov    edx,DWORD PTR [rdx+0x4]
   140007b2a:	lea    rcx,[rsp+0x68]
   140007b2f:	call   QWORD PTR [rip+0xc983]        # 0x1400144b8
   140007b35:	mov    rdx,QWORD PTR [rsp+0x68]
   140007b3a:	mov    r11,QWORD PTR [rbx]
   140007b3d:	movsxd rax,DWORD PTR [r11+0x8]
   140007b41:	lea    rsi,[r11+rax*8+0x10]
   140007b46:	movsxd rax,DWORD PTR [rdx+0xc]
   140007b4a:	lea    rbp,[rdx+rax*8+0x10]
   140007b4f:	movsxd rax,DWORD PTR [rdx+0x8]
   140007b53:	lea    rbx,[rdx+rax*8+0x10]
   140007b58:	cmp    rbx,rbp
   140007b5b:	je     0x140007b83
   140007b5d:	nop    DWORD PTR [rax]
   140007b60:	test   rbx,rbx
   140007b63:	je     0x140007b71
   140007b65:	mov    rdx,rsi
   140007b68:	mov    rcx,rbx
   140007b6b:	call   QWORD PTR [rip+0xc9f7]        # 0x140014568
   140007b71:	add    rbx,0x8
   140007b75:	add    rsi,0x8
   140007b79:	cmp    rbx,rbp
   140007b7c:	jne    0x140007b60
   140007b7e:	mov    rdx,QWORD PTR [rsp+0x68]
   140007b83:	mov    rsi,QWORD PTR [rsp+0xc8]
   140007b8b:	mov    DWORD PTR [rsp+0x70],0x0
   140007b93:	movsxd rax,DWORD PTR [rdx+0x8]
   140007b97:	lea    rcx,[rdx+rax*8+0x10]
   140007b9c:	mov    QWORD PTR [rsp+0x78],rcx
   140007ba1:	movsxd rax,DWORD PTR [rdx+0xc]
   140007ba5:	lea    rcx,[rdx+rax*8+0x10]
   140007baa:	mov    QWORD PTR [rsp+0x80],rcx
   140007bb2:	mov    eax,DWORD PTR [rsi]
   140007bb4:	test   eax,eax
   140007bb6:	je     0x140007bd0
   140007bb8:	cmp    eax,0xffffffff
   140007bbb:	je     0x140007c0b
   140007bbd:	lock add DWORD PTR [rsi],0xffffffff
   140007bc1:	setne  al
   140007bc4:	test   al,al
   140007bc6:	jne    0x140007c0b
   140007bc8:	mov    rsi,QWORD PTR [rsp+0xc8]
   140007bd0:	movsxd rax,DWORD PTR [rsi+0xc]
   140007bd4:	lea    rbx,[rsi+rax*8+0x10]
   140007bd9:	movsxd rax,DWORD PTR [rsi+0x8]
   140007bdd:	lea    rbp,[rsi+rax*8+0x10]
   140007be2:	cmp    rbp,rbx
   140007be5:	je     0x140007c02
   140007be7:	nop    WORD PTR [rax+rax*1+0x0]
   140007bf0:	sub    rbx,0x8
   140007bf4:	mov    rcx,rbx
   140007bf7:	call   QWORD PTR [rip+0xc94b]        # 0x140014548
   140007bfd:	cmp    rbx,rbp
   140007c00:	jne    0x140007bf0
   140007c02:	mov    rcx,rsi
   140007c05:	call   QWORD PTR [rip+0xc8cd]        # 0x1400144d8
   140007c0b:	lea    rcx,[rsp+0x168]
   140007c13:	call   QWORD PTR [rip+0xc92f]        # 0x140014548
   140007c19:	nop    DWORD PTR [rax+0x0]
   140007c20:	mov    eax,DWORD PTR [rsp+0x70]
   140007c24:	inc    DWORD PTR [rsp+0x70]
   140007c28:	test   eax,eax
   140007c2a:	jne    0x140007c40
   140007c2c:	mov    rax,QWORD PTR [rsp+0x80]
   140007c34:	cmp    QWORD PTR [rsp+0x78],rax
   140007c39:	je     0x140007c40
   140007c3b:	mov    r12b,0x1
   140007c3e:	jmp    0x140007c43
   140007c40:	xor    r12b,r12b
   140007c43:	bt     edi,0xd
   140007c47:	jae    0x140007cab
   140007c49:	mov    rsi,QWORD PTR [rsp+0x148]
   140007c51:	btr    edi,0xd
   140007c55:	mov    eax,DWORD PTR [rsi]
   140007c57:	test   eax,eax
   140007c59:	je     0x140007c6b
   140007c5b:	cmp    eax,0xffffffff
   140007c5e:	je     0x140007cab
   140007c60:	lock add DWORD PTR [rsi],0xffffffff
   140007c64:	setne  al
   140007c67:	test   al,al
   140007c69:	jne    0x140007cab
   140007c6b:	mov    rsi,QWORD PTR [rsp+0x148]
   140007c73:	movsxd rax,DWORD PTR [rsi+0xc]
   140007c77:	lea    rbx,[rsi+rax*8+0x10]
   140007c7c:	movsxd rax,DWORD PTR [rsi+0x8]
   140007c80:	lea    rbp,[rsi+rax*8+0x10]
   140007c85:	cmp    rbp,rbx
   140007c88:	je     0x140007ca2
   140007c8a:	nop    WORD PTR [rax+rax*1+0x0]
   140007c90:	sub    rbx,0x8
   140007c94:	mov    rcx,rbx
   140007c97:	call   QWORD PTR [rip+0xc8ab]        # 0x140014548
   140007c9d:	cmp    rbx,rbp
   140007ca0:	jne    0x140007c90
   140007ca2:	mov    rcx,rsi
   140007ca5:	call   QWORD PTR [rip+0xc82d]        # 0x1400144d8
   140007cab:	bt     edi,0xc
   140007caf:	jae    0x140007cc3
   140007cb1:	lea    rcx,[rsp+0x1b0]
   140007cb9:	btr    edi,0xc
   140007cbd:	call   QWORD PTR [rip+0xc885]        # 0x140014548
   140007cc3:	test   r12b,r12b
   140007cc6:	je     0x140007fc9
   140007ccc:	bt     edi,0xf
   140007cd0:	mov    r13,QWORD PTR [rsp+0x78]
   140007cd5:	jae    0x140007d3b
   140007cd7:	mov    rsi,QWORD PTR [rsp+0x188]
   140007cdf:	btr    edi,0xf
   140007ce3:	mov    eax,DWORD PTR [rsi]
   140007ce5:	test   eax,eax
   140007ce7:	je     0x140007d01
   140007ce9:	cmp    eax,0xffffffff
   140007cec:	je     0x140007d3b
   140007cee:	lock add DWORD PTR [rsi],0xffffffff
   140007cf2:	setne  al
   140007cf5:	test   al,al
   140007cf7:	jne    0x140007d3b
   140007cf9:	mov    rsi,QWORD PTR [rsp+0x188]
   140007d01:	movsxd rax,DWORD PTR [rsi+0xc]
   140007d05:	lea    rbx,[rsi+rax*8+0x10]
   140007d0a:	movsxd rax,DWORD PTR [rsi+0x8]
   140007d0e:	lea    rbp,[rsi+rax*8+0x10]
   140007d13:	cmp    rbp,rbx
   140007d16:	je     0x140007d32
   140007d18:	nop    DWORD PTR [rax+rax*1+0x0]
   140007d20:	sub    rbx,0x8
   140007d24:	mov    rcx,rbx
   140007d27:	call   QWORD PTR [rip+0xc81b]        # 0x140014548
   140007d2d:	cmp    rbx,rbp
   140007d30:	jne    0x140007d20
   140007d32:	mov    rcx,rsi
   140007d35:	call   QWORD PTR [rip+0xc79d]        # 0x1400144d8
   140007d3b:	bt     edi,0xe
   140007d3f:	jae    0x140007d53
   140007d41:	btr    edi,0xe
   140007d45:	lea    rcx,[rsp+0x1d0]
   140007d4d:	call   QWORD PTR [rip+0xc7f5]        # 0x140014548
   140007d53:	bt     edi,0x13
   140007d57:	mov    r12d,DWORD PTR [rsp+0x70]
   140007d5c:	jae    0x140007dbb
   140007d5e:	mov    rsi,QWORD PTR [rsp+0x118]
   140007d66:	btr    edi,0x13
   140007d6a:	mov    eax,DWORD PTR [rsi]
   140007d6c:	test   eax,eax
   140007d6e:	je     0x140007d80
   140007d70:	cmp    eax,0xffffffff
   140007d73:	je     0x140007dbb
   140007d75:	lock add DWORD PTR [rsi],0xffffffff
   140007d79:	setne  al
   140007d7c:	test   al,al
   140007d7e:	jne    0x140007dbb
   140007d80:	mov    rsi,QWORD PTR [rsp+0x118]
   140007d88:	movsxd rax,DWORD PTR [rsi+0xc]
   140007d8c:	lea    rbx,[rsi+rax*8+0x10]
   140007d91:	movsxd rax,DWORD PTR [rsi+0x8]
   140007d95:	lea    rbp,[rsi+rax*8+0x10]
   140007d9a:	cmp    rbp,rbx
   140007d9d:	je     0x140007db2
   140007d9f:	nop
   140007da0:	sub    rbx,0x8
   140007da4:	mov    rcx,rbx
   140007da7:	call   QWORD PTR [rip+0xc79b]        # 0x140014548
   140007dad:	cmp    rbx,rbp
   140007db0:	jne    0x140007da0
   140007db2:	mov    rcx,rsi
   140007db5:	call   QWORD PTR [rip+0xc71d]        # 0x1400144d8
   140007dbb:	bt     edi,0x12
   140007dbf:	jae    0x140007dd3
   140007dc1:	lea    rcx,[rsp+0x1c0]
   140007dc9:	btr    edi,0x12
   140007dcd:	call   QWORD PTR [rip+0xc775]        # 0x140014548
   140007dd3:	test   r12d,r12d
   140007dd6:	je     0x140007f46
   140007ddc:	lea    rdx,[rsp+0x60]
   140007de1:	mov    rcx,r13
   140007de4:	call   QWORD PTR [rip+0xc56e]        # 0x140014358
   140007dea:	mov    r11,QWORD PTR [rsp+0x60]
   140007def:	cmp    DWORD PTR [r11+0x4],0x0
   140007df4:	je     0x140007eb3
   140007dfa:	lea    rcx,[rsp+0x258]
   140007e02:	mov    dl,0x2c
   140007e04:	call   QWORD PTR [rip+0xc60e]        # 0x140014418
   140007e0a:	lea    rcx,[rsp+0xa8]
   140007e12:	movzx  edx,WORD PTR [rax]
   140007e15:	call   QWORD PTR [rip+0xc525]        # 0x140014340
   140007e1b:	lea    rdx,[rsp+0x60]
   140007e20:	lea    rcx,[rsp+0xa8]
   140007e28:	call   QWORD PTR [rip+0xc742]        # 0x140014570
   140007e2e:	lea    rdx,[rsp+0xa8]
   140007e36:	lea    rcx,[rsp+0x30]
   140007e3b:	call   QWORD PTR [rip+0xc72f]        # 0x140014570
   140007e41:	lea    rcx,[rsp+0xa8]
   140007e49:	call   QWORD PTR [rip+0xc6f9]        # 0x140014548
   140007e4f:	mov    r11,QWORD PTR [rsp+0x48]
   140007e54:	mov    eax,DWORD PTR [r11]
   140007e57:	cmp    eax,0x1
   140007e5a:	je     0x140007e8a
   140007e5c:	test   eax,eax
   140007e5e:	je     0x140007e8a
   140007e60:	lea    rcx,[rsp+0x48]
   140007e65:	mov    edx,0x7fffffff
   140007e6a:	mov    r8d,0x1
   140007e70:	call   0x140001c10
   140007e75:	test   rax,rax
   140007e78:	je     0x140007eb3
   140007e7a:	lea    rdx,[rsp+0x60]
   140007e7f:	mov    rcx,rax
   140007e82:	call   QWORD PTR [rip+0xc6e0]        # 0x140014568
   140007e88:	jmp    0x140007eb3
   140007e8a:	lea    rdx,[rsp+0x60]
   140007e8f:	lea    rcx,[rsp+0x120]
   140007e97:	call   QWORD PTR [rip+0xc6cb]        # 0x140014568
   140007e9d:	lea    rcx,[rsp+0x48]
   140007ea2:	call   QWORD PTR [rip+0xc5f8]        # 0x1400144a0
   140007ea8:	mov    rcx,QWORD PTR [rsp+0x120]
   140007eb0:	mov    QWORD PTR [rax],rcx
   140007eb3:	lea    rcx,[rsp+0x60]
   140007eb8:	call   QWORD PTR [rip+0xc68a]        # 0x140014548
   140007ebe:	dec    DWORD PTR [rsp+0x70]
   140007ec2:	bt     edi,0x11
   140007ec6:	jae    0x140007f2b
   140007ec8:	mov    rsi,QWORD PTR [rsp+0x130]
   140007ed0:	btr    edi,0x11
   140007ed4:	mov    eax,DWORD PTR [rsi]
   140007ed6:	test   eax,eax
   140007ed8:	je     0x140007eea
   140007eda:	cmp    eax,0xffffffff
   140007edd:	je     0x140007f2b
   140007edf:	lock add DWORD PTR [rsi],0xffffffff
   140007ee3:	setne  al
   140007ee6:	test   al,al
   140007ee8:	jne    0x140007f2b
   140007eea:	mov    rsi,QWORD PTR [rsp+0x130]
   140007ef2:	movsxd rax,DWORD PTR [rsi+0xc]
   140007ef6:	lea    rbx,[rsi+rax*8+0x10]
   140007efb:	movsxd rax,DWORD PTR [rsi+0x8]
   140007eff:	lea    rbp,[rsi+rax*8+0x10]
   140007f04:	cmp    rbp,rbx
   140007f07:	je     0x140007f22
   140007f09:	nop    DWORD PTR [rax+0x0]
   140007f10:	sub    rbx,0x8
   140007f14:	mov    rcx,rbx
   140007f17:	call   QWORD PTR [rip+0xc62b]        # 0x140014548
   140007f1d:	cmp    rbx,rbp
   140007f20:	jne    0x140007f10
   140007f22:	mov    rcx,rsi
   140007f25:	call   QWORD PTR [rip+0xc5ad]        # 0x1400144d8
   140007f2b:	bt     edi,0x10
   140007f2f:	jae    0x140007d53
   140007f35:	btr    edi,0x10
   140007f39:	lea    rcx,[rsp+0x1a0]
   140007f41:	jmp    0x140007d4d
   140007f46:	add    QWORD PTR [rsp+0x78],0x8
   140007f4c:	bt     edi,0xb
   140007f50:	jae    0x140007fae
   140007f52:	mov    rsi,QWORD PTR [rsp+0x140]
   140007f5a:	btr    edi,0xb
   140007f5e:	mov    eax,DWORD PTR [rsi]
   140007f60:	test   eax,eax
   140007f62:	je     0x140007f7c
   140007f64:	cmp    eax,0xffffffff
   140007f67:	je     0x140007fae
   140007f69:	lock add DWORD PTR [rsi],0xffffffff
   140007f6d:	setne  al
   140007f70:	test   al,al
   140007f72:	jne    0x140007fae
   140007f74:	mov    rsi,QWORD PTR [rsp+0x140]
   140007f7c:	movsxd rax,DWORD PTR [rsi+0xc]
   140007f80:	lea    rbx,[rsi+rax*8+0x10]
   140007f85:	movsxd rax,DWORD PTR [rsi+0x8]
   140007f89:	lea    rbp,[rsi+rax*8+0x10]
   140007f8e:	cmp    rbp,rbx
   140007f91:	je     0x140007fa5
   140007f93:	sub    rbx,0x8
   140007f97:	mov    rcx,rbx
   140007f9a:	call   QWORD PTR [rip+0xc5a8]        # 0x140014548
   140007fa0:	cmp    rbx,rbp
   140007fa3:	jne    0x140007f93
   140007fa5:	mov    rcx,rsi
   140007fa8:	call   QWORD PTR [rip+0xc52a]        # 0x1400144d8
   140007fae:	bt     edi,0xa
   140007fb2:	jae    0x140007c20
   140007fb8:	btr    edi,0xa
   140007fbc:	lea    rcx,[rsp+0x1a8]
   140007fc4:	jmp    0x140007c13
   140007fc9:	mov    rsi,QWORD PTR [rsp+0x68]
   140007fce:	mov    eax,DWORD PTR [rsi]
   140007fd0:	test   eax,eax
   140007fd2:	je     0x140007fe9
   140007fd4:	cmp    eax,0xffffffff
   140007fd7:	je     0x14000801b
   140007fd9:	lock add DWORD PTR [rsi],0xffffffff
   140007fdd:	setne  al
   140007fe0:	test   al,al
   140007fe2:	jne    0x14000801b
   140007fe4:	mov    rsi,QWORD PTR [rsp+0x68]
   140007fe9:	movsxd rax,DWORD PTR [rsi+0xc]
   140007fed:	lea    rbx,[rsi+rax*8+0x10]
   140007ff2:	movsxd rax,DWORD PTR [rsi+0x8]
   140007ff6:	lea    rbp,[rsi+rax*8+0x10]
   140007ffb:	cmp    rbp,rbx
   140007ffe:	je     0x140008012
   140008000:	sub    rbx,0x8
   140008004:	mov    rcx,rbx
   140008007:	call   QWORD PTR [rip+0xc53b]        # 0x140014548
   14000800d:	cmp    rbx,rbp
   140008010:	jne    0x140008000
   140008012:	mov    rcx,rsi
   140008015:	call   QWORD PTR [rip+0xc4bd]        # 0x1400144d8
   14000801b:	mov    rcx,QWORD PTR [rsp+0x40]
   140008020:	xor    esi,esi
   140008022:	cmp    DWORD PTR [rcx+0x20],esi
   140008025:	je     0x14000803c
   140008027:	mov    edx,DWORD PTR [rcx+0x24]
   14000802a:	lea    rcx,[rsp+0x30]
   14000802f:	call   QWORD PTR [rip+0xc49b]        # 0x1400144d0
   140008035:	mov    rcx,QWORD PTR [rsp+0x40]
   14000803a:	mov    esi,eax
   14000803c:	mov    r8d,DWORD PTR [rcx+0x20]
   140008040:	test   r8d,r8d
   140008043:	je     0x140008098
   140008045:	xor    edx,edx
   140008047:	mov    eax,esi
   140008049:	div    r8d
   14000804c:	mov    r8d,edx
   14000804f:	mov    rdx,QWORD PTR [rcx+0x8]
   140008053:	lea    rbx,[rdx+r8*8]
   140008057:	mov    rdx,QWORD PTR [rdx+r8*8]
   14000805b:	cmp    rdx,rcx
   14000805e:	je     0x140008098
   140008060:	cmp    esi,DWORD PTR [rdx+0x8]
   140008063:	jne    0x14000807d
   140008065:	lea    rcx,[rsp+0x30]
   14000806a:	add    rdx,0x10
   14000806e:	call   QWORD PTR [rip+0xc46c]        # 0x1400144e0
   140008074:	test   al,al
   140008076:	jne    0x14000808a
   140008078:	mov    rcx,QWORD PTR [rsp+0x40]
   14000807d:	mov    rbx,QWORD PTR [rbx]
   140008080:	mov    rdx,QWORD PTR [rbx]
   140008083:	cmp    rdx,rcx
   140008086:	jne    0x140008060
   140008088:	jmp    0x140008098
   14000808a:	mov    rax,QWORD PTR [rsp+0x40]
   14000808f:	cmp    QWORD PTR [rbx],rax
   140008092:	jne    0x14000823e
   140008098:	lea    r8,[rsp+0x30]
   14000809d:	lea    rdx,[rsp+0x1b8]
   1400080a5:	lea    rcx,[rsp+0x40]
   1400080aa:	call   0x140006b70
   1400080af:	lea    rdx,[rsp+0x48]
   1400080b4:	lea    rcx,[rsp+0x58]
   1400080b9:	call   0x140001ab0
   1400080be:	mov    r12,QWORD PTR [rsp+0x240]
   1400080c6:	mov    rax,QWORD PTR [r12+0x98]
   1400080ce:	mov    ecx,DWORD PTR [rax]
   1400080d0:	cmp    ecx,0x1
   1400080d3:	je     0x1400080f3
   1400080d5:	test   ecx,ecx
   1400080d7:	je     0x1400080f3
   1400080d9:	lea    rcx,[r12+0x98]
   1400080e1:	mov    edx,0x7fffffff
   1400080e6:	mov    r8d,0x1
   1400080ec:	call   0x140006e80
   1400080f1:	jmp    0x140008101
   1400080f3:	lea    rcx,[r12+0x98]
   1400080fb:	call   QWORD PTR [rip+0xc39f]        # 0x1400144a0
   140008101:	mov    ecx,0x10
   140008106:	mov    rsi,rax
   140008109:	call   0x140012892
   14000810e:	mov    rbx,rax
   140008111:	test   rax,rax
   140008114:	je     0x140008134
   140008116:	lea    rdx,[rsp+0x50]
   14000811b:	mov    rcx,rax
   14000811e:	call   QWORD PTR [rip+0xc444]        # 0x140014568
   140008124:	lea    rcx,[rbx+0x8]
   140008128:	lea    rdx,[rsp+0x58]
   14000812d:	call   0x140001980
   140008132:	jmp    0x140008136
   140008134:	xor    ebx,ebx
   140008136:	mov    QWORD PTR [rsi],rbx
   140008139:	mov    rsi,QWORD PTR [rsp+0x48]
   14000813e:	mov    eax,DWORD PTR [rsi]
   140008140:	test   eax,eax
   140008142:	je     0x140008159
   140008144:	cmp    eax,0xffffffff
   140008147:	je     0x14000818b
   140008149:	lock add DWORD PTR [rsi],0xffffffff
   14000814d:	setne  al
   140008150:	test   al,al
   140008152:	jne    0x14000818b
   140008154:	mov    rsi,QWORD PTR [rsp+0x48]
   140008159:	movsxd rax,DWORD PTR [rsi+0xc]
   14000815d:	lea    rbx,[rsi+rax*8+0x10]
   140008162:	movsxd rax,DWORD PTR [rsi+0x8]
   140008166:	lea    rbp,[rsi+rax*8+0x10]
   14000816b:	cmp    rbp,rbx
   14000816e:	je     0x140008182
   140008170:	sub    rbx,0x8
   140008174:	mov    rcx,rbx
   140008177:	call   QWORD PTR [rip+0xc3cb]        # 0x140014548
   14000817d:	cmp    rbx,rbp
   140008180:	jne    0x140008170
   140008182:	mov    rcx,rsi
   140008185:	call   QWORD PTR [rip+0xc34d]        # 0x1400144d8
   14000818b:	mov    rcx,QWORD PTR [r12+0x58]
   140008190:	inc    r14d
   140008193:	call   QWORD PTR [rip+0xc5df]        # 0x140014778
   140008199:	mov    rbx,QWORD PTR [rsp+0x38]
   14000819e:	cmp    r14d,eax
   1400081a1:	jl     0x140007870
   1400081a7:	lea    rcx,[rsp+0x58]
   1400081ac:	call   0x140001a30
   1400081b1:	lea    rcx,[rsp+0x50]
   1400081b6:	call   QWORD PTR [rip+0xc38c]        # 0x140014548
   1400081bc:	lea    rcx,[rsp+0x30]
   1400081c1:	call   QWORD PTR [rip+0xc381]        # 0x140014548
   1400081c7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400081cc:	mov    eax,DWORD PTR [rcx+0x10]
   1400081cf:	test   eax,eax
   1400081d1:	je     0x1400081ee
   1400081d3:	cmp    eax,0xffffffff
   1400081d6:	je     0x1400081fb
   1400081d8:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400081dd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400081e2:	setne  al
   1400081e5:	test   al,al
   1400081e7:	jne    0x1400081fb
   1400081e9:	mov    rcx,QWORD PTR [rsp+0x40]
   1400081ee:	lea    rdx,[rip+0xffffffffffff971b]        # 0x140001910
   1400081f5:	call   QWORD PTR [rip+0xc2b5]        # 0x1400144b0
   1400081fb:	mov    eax,DWORD PTR [rbx+0x10]
   1400081fe:	test   eax,eax
   140008200:	je     0x140008218
   140008202:	cmp    eax,0xffffffff
   140008205:	je     0x140008228
   140008207:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000820c:	setne  al
   14000820f:	test   al,al
   140008211:	jne    0x140008228
   140008213:	mov    rbx,QWORD PTR [rsp+0x38]
   140008218:	lea    rdx,[rip+0xffffffffffff96f1]        # 0x140001910
   14000821f:	mov    rcx,rbx
   140008222:	call   QWORD PTR [rip+0xc288]        # 0x1400144b0
   140008228:	mov    al,0x1
   14000822a:	add    rsp,0x1f8
   140008231:	pop    r15
   140008233:	pop    r14
   140008235:	pop    r13
   140008237:	pop    r12
   140008239:	pop    rdi
   14000823a:	pop    rsi
   14000823b:	pop    rbp
   14000823c:	pop    rbx
   14000823d:	ret    
   14000823e:	lea    r8,[rip+0xf33b]        # 0x140017580
   140008245:	lea    rdx,[rsp+0xe8]
   14000824d:	lea    rcx,[rip+0x21494]        # 0x1400296e8
   140008254:	xor    r9d,r9d
   140008257:	mov    DWORD PTR [rsp+0x128],0x400
   140008262:	mov    DWORD PTR [rsp+0x20],r15d
   140008267:	call   QWORD PTR [rip+0xc2eb]        # 0x140014558
   14000826d:	lea    r8,[rip+0xe7ec]        # 0x140016a60
   140008274:	lea    rdx,[rsp+0xd8]
   14000827c:	lea    rcx,[rip+0x21465]        # 0x1400296e8
   140008283:	xor    r9d,r9d
   140008286:	mov    DWORD PTR [rsp+0x20],r15d
   14000828b:	call   QWORD PTR [rip+0xc2c7]        # 0x140014558
   140008291:	lea    rcx,[rsp+0xb0]
   140008299:	mov    dl,0x20
   14000829b:	call   QWORD PTR [rip+0xc177]        # 0x140014418
   1400082a1:	lea    r8,[rsp+0x50]
   1400082a6:	lea    rdx,[rsp+0xf8]
   1400082ae:	movzx  eax,WORD PTR [rax]
   1400082b1:	lea    rcx,[rsp+0xe8]
   1400082b9:	xor    r9d,r9d
   1400082bc:	mov    WORD PTR [rsp+0x20],ax
   1400082c1:	call   QWORD PTR [rip+0xc119]        # 0x1400143e0
   1400082c7:	mov    rcx,QWORD PTR [rsp+0x240]
   1400082cf:	lea    rdx,[rsp+0xd8]
   1400082d7:	mov    r8,rax
   1400082da:	mov    r9d,0x400
   1400082e0:	mov    DWORD PTR [rsp+0x20],0x0
   1400082e8:	call   QWORD PTR [rip+0xc45a]        # 0x140014748
   1400082ee:	lea    rcx,[rsp+0xd8]
   1400082f6:	call   QWORD PTR [rip+0xc24c]        # 0x140014548
   1400082fc:	lea    rcx,[rsp+0xf8]
   140008304:	call   QWORD PTR [rip+0xc23e]        # 0x140014548
   14000830a:	lea    rcx,[rsp+0xe8]
   140008312:	call   QWORD PTR [rip+0xc230]        # 0x140014548
   140008318:	mov    rdi,QWORD PTR [rsp+0x48]
   14000831d:	mov    eax,DWORD PTR [rdi]
   14000831f:	test   eax,eax
   140008321:	je     0x140008338
   140008323:	cmp    eax,0xffffffff
   140008326:	je     0x14000836b
   140008328:	lock add DWORD PTR [rdi],0xffffffff
   14000832c:	setne  al
   14000832f:	test   al,al
   140008331:	jne    0x14000836b
   140008333:	mov    rdi,QWORD PTR [rsp+0x48]
   140008338:	movsxd rax,DWORD PTR [rdi+0xc]
   14000833c:	lea    rbx,[rdi+rax*8+0x10]
   140008341:	movsxd rax,DWORD PTR [rdi+0x8]
   140008345:	lea    rsi,[rdi+rax*8+0x10]
   14000834a:	cmp    rsi,rbx
   14000834d:	je     0x140008362
   14000834f:	nop
   140008350:	sub    rbx,0x8
   140008354:	mov    rcx,rbx
   140008357:	call   QWORD PTR [rip+0xc1eb]        # 0x140014548
   14000835d:	cmp    rbx,rsi
   140008360:	jne    0x140008350
   140008362:	mov    rcx,rdi
   140008365:	call   QWORD PTR [rip+0xc16d]        # 0x1400144d8
   14000836b:	lea    rcx,[rsp+0x58]
   140008370:	call   0x140001a30
   140008375:	lea    rcx,[rsp+0x50]
   14000837a:	call   QWORD PTR [rip+0xc1c8]        # 0x140014548
   140008380:	lea    rcx,[rsp+0x30]
   140008385:	call   QWORD PTR [rip+0xc1bd]        # 0x140014548
   14000838b:	mov    rcx,QWORD PTR [rsp+0x40]
   140008390:	mov    eax,DWORD PTR [rcx+0x10]
   140008393:	test   eax,eax
   140008395:	je     0x1400083ad
   140008397:	cmp    eax,0xffffffff
   14000839a:	je     0x1400083ba
   14000839c:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400083a1:	setne  al
   1400083a4:	test   al,al
   1400083a6:	jne    0x1400083ba
   1400083a8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400083ad:	lea    rdx,[rip+0xffffffffffff955c]        # 0x140001910
   1400083b4:	call   QWORD PTR [rip+0xc0f6]        # 0x1400144b0
   1400083ba:	mov    rcx,QWORD PTR [rsp+0x38]
   1400083bf:	mov    eax,DWORD PTR [rcx+0x10]
   1400083c2:	test   eax,eax
   1400083c4:	je     0x1400083dc
   1400083c6:	cmp    eax,0xffffffff
   1400083c9:	je     0x1400083e9
   1400083cb:	lock add DWORD PTR [rcx+0x10],0xffffffff
   1400083d0:	setne  al
   1400083d3:	test   al,al
   1400083d5:	jne    0x1400083e9
   1400083d7:	mov    rcx,QWORD PTR [rsp+0x38]
   1400083dc:	lea    rdx,[rip+0xffffffffffff952d]        # 0x140001910
   1400083e3:	call   QWORD PTR [rip+0xc0c7]        # 0x1400144b0
   1400083e9:	xor    al,al
   1400083eb:	jmp    0x14000822a
   1400083f0:	lea    r8,[rip+0xf151]        # 0x140017548
   1400083f7:	lea    rdx,[rsp+0xe0]
   1400083ff:	lea    rcx,[rip+0x212e2]        # 0x1400296e8
   140008406:	xor    r9d,r9d
   140008409:	mov    DWORD PTR [rsp+0x180],0x400
   140008414:	mov    DWORD PTR [rsp+0x20],r15d
   140008419:	call   QWORD PTR [rip+0xc139]        # 0x140014558
   14000841f:	lea    r8,[rip+0xe63a]        # 0x140016a60
   140008426:	lea    rdx,[rsp+0xc0]
   14000842e:	lea    rcx,[rip+0x212b3]        # 0x1400296e8
   140008435:	xor    r9d,r9d
   140008438:	mov    DWORD PTR [rsp+0x20],r15d
   14000843d:	call   QWORD PTR [rip+0xc115]        # 0x140014558
   140008443:	lea    rcx,[rsp+0xb8]
   14000844b:	mov    dl,0x20
   14000844d:	call   QWORD PTR [rip+0xbfc5]        # 0x140014418
   140008453:	lea    r8,[rsp+0x30]
   140008458:	lea    rdx,[rsp+0x108]
   140008460:	movzx  eax,WORD PTR [rax]
   140008463:	lea    rcx,[rsp+0xe0]
   14000846b:	xor    r9d,r9d
   14000846e:	mov    WORD PTR [rsp+0x20],ax
   140008473:	call   QWORD PTR [rip+0xbf67]        # 0x1400143e0
   140008479:	mov    rcx,QWORD PTR [rsp+0x240]
   140008481:	lea    rdx,[rsp+0xc0]
   140008489:	mov    r8,rax
   14000848c:	mov    r9d,0x400
   140008492:	mov    DWORD PTR [rsp+0x20],0x0
   14000849a:	call   QWORD PTR [rip+0xc2a8]        # 0x140014748
   1400084a0:	lea    rcx,[rsp+0xc0]
   1400084a8:	call   QWORD PTR [rip+0xc09a]        # 0x140014548
   1400084ae:	lea    rcx,[rsp+0x108]
   1400084b6:	call   QWORD PTR [rip+0xc08c]        # 0x140014548
   1400084bc:	lea    rcx,[rsp+0xe0]
   1400084c4:	call   QWORD PTR [rip+0xc07e]        # 0x140014548
   1400084ca:	mov    rsi,QWORD PTR [rsp+0x58]
   1400084cf:	mov    eax,DWORD PTR [rsi]
   1400084d1:	test   eax,eax
   1400084d3:	je     0x1400084ef
   1400084d5:	cmp    eax,0xffffffff
   1400084d8:	je     0x14000852b
   1400084da:	lock add DWORD PTR [rsi],0xffffffff
   1400084de:	mov    rbx,QWORD PTR [rsp+0x38]
   1400084e3:	setne  al
   1400084e6:	test   al,al
   1400084e8:	jne    0x14000852b
   1400084ea:	mov    rsi,QWORD PTR [rsp+0x58]
   1400084ef:	movsxd rax,DWORD PTR [rsi+0xc]
   1400084f3:	lea    rdi,[rsi+rax*8+0x10]
   1400084f8:	movsxd rax,DWORD PTR [rsi+0x8]
   1400084fc:	lea    rbp,[rsi+rax*8+0x10]
   140008501:	cmp    rbp,rdi
   140008504:	je     0x140008522
   140008506:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008510:	sub    rdi,0x8
   140008514:	mov    rcx,rdi
   140008517:	call   QWORD PTR [rip+0xc02b]        # 0x140014548
   14000851d:	cmp    rdi,rbp
   140008520:	jne    0x140008510
   140008522:	mov    rcx,rsi
   140008525:	call   QWORD PTR [rip+0xbfad]        # 0x1400144d8
   14000852b:	lea    rcx,[rsp+0x50]
   140008530:	call   QWORD PTR [rip+0xc012]        # 0x140014548
   140008536:	lea    rcx,[rsp+0x30]
   14000853b:	call   QWORD PTR [rip+0xc007]        # 0x140014548
   140008541:	mov    rcx,QWORD PTR [rsp+0x40]
   140008546:	mov    eax,DWORD PTR [rcx+0x10]
   140008549:	test   eax,eax
   14000854b:	je     0x140008568
   14000854d:	cmp    eax,0xffffffff
   140008550:	je     0x140008575
   140008552:	lock add DWORD PTR [rcx+0x10],0xffffffff
   140008557:	mov    rbx,QWORD PTR [rsp+0x38]
   14000855c:	setne  al
   14000855f:	test   al,al
   140008561:	jne    0x140008575
   140008563:	mov    rcx,QWORD PTR [rsp+0x40]
   140008568:	lea    rdx,[rip+0xffffffffffff93a1]        # 0x140001910
   14000856f:	call   QWORD PTR [rip+0xbf3b]        # 0x1400144b0
   140008575:	mov    eax,DWORD PTR [rbx+0x10]
   140008578:	test   eax,eax
   14000857a:	je     0x140008592
   14000857c:	cmp    eax,0xffffffff
   14000857f:	je     0x1400085a2
   140008581:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140008586:	setne  al
   140008589:	test   al,al
   14000858b:	jne    0x1400085a2
   14000858d:	mov    rbx,QWORD PTR [rsp+0x38]
   140008592:	lea    rdx,[rip+0xffffffffffff9377]        # 0x140001910
   140008599:	mov    rcx,rbx
   14000859c:	call   QWORD PTR [rip+0xbf0e]        # 0x1400144b0
   1400085a2:	xor    al,al
   1400085a4:	jmp    0x14000822a
   1400085a9:	int3   
   1400085aa:	int3   
   1400085ab:	int3   
   1400085ac:	int3   
   1400085ad:	int3   
   1400085ae:	int3   
   1400085af:	int3   
   1400085b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400085b5:	push   rdi
   1400085b6:	sub    rsp,0x30
   1400085ba:	mov    rbx,rdx
   1400085bd:	mov    rdi,rcx
   1400085c0:	lea    r8,[rip+0xd595]        # 0x140015b5c
   1400085c7:	lea    rdx,[rip+0xf042]        # 0x140017610
   1400085ce:	lea    rcx,[rsp+0x40]
   1400085d3:	xor    r9d,r9d
   1400085d6:	mov    DWORD PTR [rsp+0x20],0xffffffff
   1400085de:	call   QWORD PTR [rip+0xbdec]        # 0x1400143d0
   1400085e4:	mov    rcx,rbx
   1400085e7:	mov    rdx,rax
   1400085ea:	call   QWORD PTR [rip+0xd020]        # 0x140015610
   1400085f0:	lea    rcx,[rsp+0x40]
   1400085f5:	call   QWORD PTR [rip+0xbf4d]        # 0x140014548
   1400085fb:	lea    r8,[rip+0xeff6]        # 0x1400175f8
   140008602:	lea    rdx,[rip+0xf007]        # 0x140017610
   140008609:	lea    rcx,[rsp+0x40]
   14000860e:	xor    r9d,r9d
   140008611:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140008619:	call   QWORD PTR [rip+0xbdb1]        # 0x1400143d0
   14000861f:	mov    rcx,QWORD PTR [rdi+0x10]
   140008623:	mov    rdx,rax
   140008626:	call   QWORD PTR [rip+0xce3c]        # 0x140015468
   14000862c:	lea    rcx,[rsp+0x40]
   140008631:	call   QWORD PTR [rip+0xbf11]        # 0x140014548
   140008637:	lea    r8,[rip+0xefaa]        # 0x1400175e8
   14000863e:	lea    rdx,[rip+0xefcb]        # 0x140017610
   140008645:	lea    rcx,[rsp+0x40]
   14000864a:	xor    r9d,r9d
   14000864d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140008655:	call   QWORD PTR [rip+0xbd75]        # 0x1400143d0
   14000865b:	mov    rcx,QWORD PTR [rdi+0x28]
   14000865f:	mov    rdx,rax
   140008662:	call   QWORD PTR [rip+0xce00]        # 0x140015468
   140008668:	lea    rcx,[rsp+0x40]
   14000866d:	call   QWORD PTR [rip+0xbed5]        # 0x140014548
   140008673:	lea    r8,[rip+0xef4e]        # 0x1400175c8
   14000867a:	lea    rdx,[rip+0xef8f]        # 0x140017610
   140008681:	lea    rcx,[rsp+0x40]
   140008686:	xor    r9d,r9d
   140008689:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140008691:	call   QWORD PTR [rip+0xbd39]        # 0x1400143d0
   140008697:	mov    rcx,QWORD PTR [rdi+0x38]
   14000869b:	mov    rdx,rax
   14000869e:	call   QWORD PTR [rip+0xcdc4]        # 0x140015468
   1400086a4:	lea    rcx,[rsp+0x40]
   1400086a9:	call   QWORD PTR [rip+0xbe99]        # 0x140014548
   1400086af:	mov    rbx,QWORD PTR [rsp+0x48]
   1400086b4:	add    rsp,0x30
   1400086b8:	pop    rdi
   1400086b9:	ret    
   1400086ba:	int3   
   1400086bb:	int3   
   1400086bc:	int3   
   1400086bd:	int3   
   1400086be:	int3   
   1400086bf:	int3   
   1400086c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400086c5:	push   rdi
   1400086c6:	sub    rsp,0x20
   1400086ca:	mov    rdi,rcx
   1400086cd:	mov    rcx,QWORD PTR [rcx+0x58]
   1400086d1:	movzx  ebx,dl
   1400086d4:	call   QWORD PTR [rip+0xc49e]        # 0x140014b78
   1400086da:	mov    rcx,QWORD PTR [rdi+0x68]
   1400086de:	movzx  edx,bl
   1400086e1:	call   QWORD PTR [rip+0xc491]        # 0x140014b78
   1400086e7:	test   bl,bl
   1400086e9:	je     0x1400086fd
   1400086eb:	mov    rcx,QWORD PTR [rdi+0x58]
   1400086ef:	call   QWORD PTR [rip+0xc47b]        # 0x140014b70
   1400086f5:	test   al,al
   1400086f7:	je     0x1400086fd
   1400086f9:	mov    dl,0x1
   1400086fb:	jmp    0x1400086ff
   1400086fd:	xor    edx,edx
   1400086ff:	mov    rcx,QWORD PTR [rdi+0x60]
   140008703:	mov    rbx,QWORD PTR [rsp+0x30]
   140008708:	add    rsp,0x20
   14000870c:	pop    rdi
   14000870d:	rex.W jmp QWORD PTR [rip+0xc464]        # 0x140014b78
   140008714:	int3   
   140008715:	int3   
   140008716:	int3   
   140008717:	int3   
   140008718:	int3   
   140008719:	int3   
   14000871a:	int3   
   14000871b:	int3   
   14000871c:	int3   
   14000871d:	int3   
   14000871e:	int3   
   14000871f:	int3   
   140008720:	mov    QWORD PTR [rsp+0x10],rbx
   140008725:	mov    QWORD PTR [rsp+0x18],rbp
   14000872a:	push   rsi
   14000872b:	push   rdi
   14000872c:	push   r12
   14000872e:	push   r13
   140008730:	push   r14
   140008732:	sub    rsp,0x40
   140008736:	mov    rsi,rdx
   140008739:	mov    rdi,rcx
   14000873c:	lea    rdx,[rsp+0x70]
   140008741:	mov    rcx,rsi
   140008744:	call   QWORD PTR [rip+0xbdbe]        # 0x140014508
   14000874a:	lea    rcx,[rsp+0x70]
   14000874f:	mov    r8,QWORD PTR [rax]
   140008752:	cmp    DWORD PTR [r8+0x4],0x0
   140008757:	sete   bl
   14000875a:	call   QWORD PTR [rip+0xbde8]        # 0x140014548
   140008760:	test   bl,bl
   140008762:	je     0x140008793
   140008764:	lea    rdx,[rip+0xeea5]        # 0x140017610
   14000876b:	lea    rcx,[rsp+0x70]
   140008770:	mov    r8d,0xe
   140008776:	call   QWORD PTR [rip+0xbc3c]        # 0x1400143b8
   14000877c:	mov    rcx,rsi
   14000877f:	mov    rdx,rax
   140008782:	call   QWORD PTR [rip+0xbc38]        # 0x1400143c0
   140008788:	lea    rcx,[rsp+0x70]
   14000878d:	call   QWORD PTR [rip+0xbdb5]        # 0x140014548
   140008793:	lea    rdx,[rsp+0x70]
   140008798:	mov    rcx,rsi
   14000879b:	mov    DWORD PTR [rsp+0x70],0x1a1
   1400087a3:	mov    DWORD PTR [rsp+0x74],0xf2
   1400087ab:	call   QWORD PTR [rip+0xcc27]        # 0x1400153d8
   1400087b1:	mov    ecx,0x20
   1400087b6:	call   0x140012892
   1400087bb:	xor    ebp,ebp
   1400087bd:	mov    rbx,rax
   1400087c0:	test   rax,rax
   1400087c3:	je     0x1400087e8
   1400087c5:	mov    rdx,rsi
   1400087c8:	mov    rcx,rax
   1400087cb:	call   QWORD PTR [rip+0xcc0f]        # 0x1400153e0
   1400087d1:	lea    r11,[rip+0xdb50]        # 0x140016328
   1400087d8:	lea    rax,[rip+0xdab9]        # 0x140016298
   1400087df:	mov    QWORD PTR [rbx],r11
   1400087e2:	mov    QWORD PTR [rbx+0x10],rax
   1400087e6:	jmp    0x1400087eb
   1400087e8:	mov    rbx,rbp
   1400087eb:	lea    rdx,[rip+0xda86]        # 0x140016278
   1400087f2:	lea    rcx,[rsp+0x70]
   1400087f7:	mov    r8d,0xa
   1400087fd:	mov    QWORD PTR [rdi],rbx
   140008800:	call   QWORD PTR [rip+0xbbb2]        # 0x1400143b8
   140008806:	mov    rcx,QWORD PTR [rdi]
   140008809:	mov    rdx,rax
   14000880c:	call   QWORD PTR [rip+0xbbae]        # 0x1400143c0
   140008812:	lea    rcx,[rsp+0x70]
   140008817:	call   QWORD PTR [rip+0xbd2b]        # 0x140014548
   14000881d:	mov    ecx,0x30
   140008822:	call   0x140012892
   140008827:	lea    r12,[rip+0xd9ca]        # 0x1400161f8
   14000882e:	mov    rbx,rax
   140008831:	test   rax,rax
   140008834:	je     0x140008854
   140008836:	mov    edx,0x14
   14000883b:	mov    rcx,rax
   14000883e:	mov    DWORD PTR [rsp+0x20],ebp
   140008842:	lea    r9d,[rdx-0x13]
   140008846:	mov    r8d,edx
   140008849:	call   QWORD PTR [rip+0xcb99]        # 0x1400153e8
   14000884f:	mov    QWORD PTR [rbx],r12
   140008852:	jmp    0x140008857
   140008854:	mov    rbx,rbp
   140008857:	mov    rcx,QWORD PTR [rdi]
   14000885a:	mov    DWORD PTR [rsp+0x30],ebp
   14000885e:	mov    r9d,0x1
   140008864:	xor    r8d,r8d
   140008867:	mov    rdx,rbx
   14000886a:	mov    DWORD PTR [rsp+0x28],0x1
   140008872:	mov    QWORD PTR [rdi+0x8],rbx
   140008876:	mov    DWORD PTR [rsp+0x20],0x1
   14000887e:	call   QWORD PTR [rip+0xcb6c]        # 0x1400153f0
   140008884:	mov    ecx,0x30
   140008889:	call   0x140012892
   14000888e:	mov    rbx,rax
   140008891:	test   rax,rax
   140008894:	je     0x1400088b9
   140008896:	mov    rdx,rsi
   140008899:	mov    rcx,rax
   14000889c:	call   QWORD PTR [rip+0xc2e6]        # 0x140014b88
   1400088a2:	lea    r11,[rip+0xefef]        # 0x140017898
   1400088a9:	lea    rax,[rip+0xefa8]        # 0x140017858
   1400088b0:	mov    QWORD PTR [rbx],r11
   1400088b3:	mov    QWORD PTR [rbx+0x10],rax
   1400088b7:	jmp    0x1400088bc
   1400088b9:	mov    rbx,rbp
   1400088bc:	lea    rdx,[rip+0xef75]        # 0x140017838
   1400088c3:	lea    rcx,[rsp+0x70]
   1400088c8:	mov    r8d,0x12
   1400088ce:	mov    QWORD PTR [rdi+0x10],rbx
   1400088d2:	call   QWORD PTR [rip+0xbae0]        # 0x1400143b8
   1400088d8:	mov    rcx,QWORD PTR [rdi+0x10]
   1400088dc:	mov    rdx,rax
   1400088df:	call   QWORD PTR [rip+0xbadb]        # 0x1400143c0
   1400088e5:	lea    rcx,[rsp+0x70]
   1400088ea:	call   QWORD PTR [rip+0xbc58]        # 0x140014548
   1400088f0:	mov    rdx,QWORD PTR [rdi+0x10]
   1400088f4:	mov    rcx,QWORD PTR [rdi]
   1400088f7:	xor    r9d,r9d
   1400088fa:	mov    DWORD PTR [rsp+0x30],ebp
   1400088fe:	mov    DWORD PTR [rsp+0x28],0x3
   140008906:	lea    r8d,[r9+0x1]
   14000890a:	mov    DWORD PTR [rsp+0x20],0x1
   140008912:	call   QWORD PTR [rip+0xcb10]        # 0x140015428
   140008918:	mov    ecx,0x30
   14000891d:	call   0x140012892
   140008922:	mov    rbx,rax
   140008925:	test   rax,rax
   140008928:	je     0x14000894f
   14000892a:	mov    r9d,0x7
   140008930:	mov    edx,0xa1
   140008935:	mov    rcx,rax
   140008938:	lea    r8d,[r9+0xd]
   14000893c:	mov    DWORD PTR [rsp+0x20],0x1
   140008944:	call   QWORD PTR [rip+0xca9e]        # 0x1400153e8
   14000894a:	mov    QWORD PTR [rbx],r12
   14000894d:	jmp    0x140008952
   14000894f:	mov    rbx,rbp
   140008952:	mov    rcx,QWORD PTR [rdi]
   140008955:	mov    r9d,0x3
   14000895b:	mov    DWORD PTR [rsp+0x30],ebp
   14000895f:	lea    r8d,[r9-0x2]
   140008963:	mov    rdx,rbx
   140008966:	mov    DWORD PTR [rsp+0x28],0x1
   14000896e:	mov    QWORD PTR [rdi+0x18],rbx
   140008972:	mov    DWORD PTR [rsp+0x20],0x1
   14000897a:	call   QWORD PTR [rip+0xca70]        # 0x1400153f0
   140008980:	mov    ecx,0x30
   140008985:	call   0x140012892
   14000898a:	mov    rbx,rax
   14000898d:	test   rax,rax
   140008990:	je     0x1400089b3
   140008992:	xor    r9d,r9d
   140008995:	mov    rcx,rax
   140008998:	mov    DWORD PTR [rsp+0x20],0x1
   1400089a0:	lea    edx,[r9+0x1e]
   1400089a4:	lea    r8d,[r9+0x14]
   1400089a8:	call   QWORD PTR [rip+0xca3a]        # 0x1400153e8
   1400089ae:	mov    QWORD PTR [rbx],r12
   1400089b1:	jmp    0x1400089b6
   1400089b3:	mov    rbx,rbp
   1400089b6:	mov    rcx,QWORD PTR [rdi]
   1400089b9:	xor    r9d,r9d
   1400089bc:	mov    DWORD PTR [rsp+0x30],ebp
   1400089c0:	lea    r8d,[r9+0x2]
   1400089c4:	mov    rdx,rbx
   1400089c7:	mov    DWORD PTR [rsp+0x28],0x1
   1400089cf:	mov    QWORD PTR [rdi+0x20],rbx
   1400089d3:	mov    DWORD PTR [rsp+0x20],0x1
   1400089db:	call   QWORD PTR [rip+0xca0f]        # 0x1400153f0
   1400089e1:	mov    ecx,0x30
   1400089e6:	call   0x140012892
   1400089eb:	lea    r13,[rip+0xecc6]        # 0x1400176b8
   1400089f2:	lea    r14,[rip+0xec7f]        # 0x140017678
   1400089f9:	mov    rbx,rax
   1400089fc:	test   rax,rax
   1400089ff:	je     0x140008a16
   140008a01:	mov    rdx,rsi
   140008a04:	mov    rcx,rax
   140008a07:	call   QWORD PTR [rip+0xc173]        # 0x140014b80
   140008a0d:	mov    QWORD PTR [rbx],r13
   140008a10:	mov    QWORD PTR [rbx+0x10],r14
   140008a14:	jmp    0x140008a19
   140008a16:	mov    rbx,rbp
   140008a19:	lea    rdx,[rip+0xec38]        # 0x140017658
   140008a20:	lea    rcx,[rsp+0x70]
   140008a25:	mov    r8d,0xc
   140008a2b:	mov    QWORD PTR [rdi+0x28],rbx
   140008a2f:	call   QWORD PTR [rip+0xb983]        # 0x1400143b8
   140008a35:	mov    rcx,QWORD PTR [rdi+0x28]
   140008a39:	mov    rdx,rax
   140008a3c:	call   QWORD PTR [rip+0xb97e]        # 0x1400143c0
   140008a42:	lea    rcx,[rsp+0x70]
   140008a47:	call   QWORD PTR [rip+0xbafb]        # 0x140014548
   140008a4d:	mov    rcx,QWORD PTR [rdi+0x28]
   140008a51:	xor    edx,edx
   140008a53:	call   QWORD PTR [rip+0xc11f]        # 0x140014b78
   140008a59:	mov    rcx,QWORD PTR [rdi+0x28]
   140008a5d:	mov    dl,0x1
   140008a5f:	call   QWORD PTR [rip+0xcbdb]        # 0x140015640
   140008a65:	mov    rdx,QWORD PTR [rdi+0x28]
   140008a69:	mov    rcx,QWORD PTR [rdi]
   140008a6c:	mov    r9d,0x1
   140008a72:	mov    DWORD PTR [rsp+0x30],ebp
   140008a76:	mov    DWORD PTR [rsp+0x28],0x1
   140008a7e:	lea    r8d,[r9+0x1]
   140008a82:	mov    DWORD PTR [rsp+0x20],0x1
   140008a8a:	call   QWORD PTR [rip+0xc998]        # 0x140015428
   140008a90:	mov    ecx,0x30
   140008a95:	call   0x140012892
   140008a9a:	mov    rbx,rax
   140008a9d:	test   rax,rax
   140008aa0:	je     0x140008ac5
   140008aa2:	mov    rdx,rsi
   140008aa5:	mov    rcx,rax
   140008aa8:	call   QWORD PTR [rip+0xc992]        # 0x140015440
   140008aae:	lea    r11,[rip+0xd2f3]        # 0x140015da8
   140008ab5:	lea    rax,[rip+0xd2ac]        # 0x140015d68
   140008abc:	mov    QWORD PTR [rbx],r11
   140008abf:	mov    QWORD PTR [rbx+0x10],rax
   140008ac3:	jmp    0x140008ac8
   140008ac5:	mov    rbx,rbp
   140008ac8:	lea    rdx,[rip+0xeb79]        # 0x140017648
   140008acf:	lea    rcx,[rsp+0x70]
   140008ad4:	mov    r8d,0xe
   140008ada:	mov    QWORD PTR [rdi+0x30],rbx
   140008ade:	call   QWORD PTR [rip+0xb8d4]        # 0x1400143b8
   140008ae4:	mov    rcx,QWORD PTR [rdi+0x30]
   140008ae8:	mov    rdx,rax
   140008aeb:	call   QWORD PTR [rip+0xb8cf]        # 0x1400143c0
   140008af1:	lea    rcx,[rsp+0x70]
   140008af6:	call   QWORD PTR [rip+0xba4c]        # 0x140014548
   140008afc:	mov    rcx,QWORD PTR [rdi+0x30]
   140008b00:	xor    edx,edx
   140008b02:	call   QWORD PTR [rip+0xc070]        # 0x140014b78
   140008b08:	mov    rdx,QWORD PTR [rdi+0x30]
   140008b0c:	mov    rcx,QWORD PTR [rdi]
   140008b0f:	mov    r9d,0x2
   140008b15:	mov    DWORD PTR [rsp+0x30],ebp
   140008b19:	mov    DWORD PTR [rsp+0x28],0x1
   140008b21:	mov    r8d,r9d
   140008b24:	mov    DWORD PTR [rsp+0x20],0x1
   140008b2c:	call   QWORD PTR [rip+0xc8f6]        # 0x140015428
   140008b32:	mov    ecx,0x30
   140008b37:	call   0x140012892
   140008b3c:	mov    rbx,rax
   140008b3f:	test   rax,rax
   140008b42:	je     0x140008b59
   140008b44:	mov    rdx,rsi
   140008b47:	mov    rcx,rax
   140008b4a:	call   QWORD PTR [rip+0xc030]        # 0x140014b80
   140008b50:	mov    QWORD PTR [rbx],r13
   140008b53:	mov    QWORD PTR [rbx+0x10],r14
   140008b57:	jmp    0x140008b5c
   140008b59:	mov    rbx,rbp
   140008b5c:	lea    rdx,[rip+0xead5]        # 0x140017638
   140008b63:	lea    rcx,[rsp+0x70]
   140008b68:	mov    r8d,0xe
   140008b6e:	mov    QWORD PTR [rdi+0x38],rbx
   140008b72:	call   QWORD PTR [rip+0xb840]        # 0x1400143b8
   140008b78:	mov    rcx,QWORD PTR [rdi+0x38]
   140008b7c:	mov    rdx,rax
   140008b7f:	call   QWORD PTR [rip+0xb83b]        # 0x1400143c0
   140008b85:	lea    rcx,[rsp+0x70]
   140008b8a:	call   QWORD PTR [rip+0xb9b8]        # 0x140014548
   140008b90:	mov    rcx,QWORD PTR [rdi+0x38]
   140008b94:	xor    edx,edx
   140008b96:	call   QWORD PTR [rip+0xbfdc]        # 0x140014b78
   140008b9c:	mov    rdx,QWORD PTR [rdi+0x38]
   140008ba0:	mov    rcx,QWORD PTR [rdi]
   140008ba3:	mov    r9d,0x1
   140008ba9:	mov    DWORD PTR [rsp+0x30],ebp
   140008bad:	mov    DWORD PTR [rsp+0x28],0x2
   140008bb5:	lea    r8d,[r9+0x2]
   140008bb9:	mov    DWORD PTR [rsp+0x20],0x1
   140008bc1:	call   QWORD PTR [rip+0xc861]        # 0x140015428
   140008bc7:	mov    ecx,0x30
   140008bcc:	call   0x140012892
   140008bd1:	mov    rbx,rax
   140008bd4:	test   rax,rax
   140008bd7:	je     0x140008bfc
   140008bd9:	mov    edx,0x14
   140008bde:	mov    rcx,rax
   140008be1:	mov    DWORD PTR [rsp+0x20],0x7
   140008be9:	lea    r9d,[rdx-0x13]
   140008bed:	lea    r8d,[rdx+0xb]
   140008bf1:	call   QWORD PTR [rip+0xc7f1]        # 0x1400153e8
   140008bf7:	mov    QWORD PTR [rbx],r12
   140008bfa:	jmp    0x140008bff
   140008bfc:	mov    rbx,rbp
   140008bff:	mov    rcx,QWORD PTR [rdi]
   140008c02:	mov    r9d,0x1
   140008c08:	mov    DWORD PTR [rsp+0x30],ebp
   140008c0c:	lea    r8d,[r9+0x3]
   140008c10:	mov    rdx,rbx
   140008c13:	mov    DWORD PTR [rsp+0x28],0x1
   140008c1b:	mov    QWORD PTR [rdi+0x40],rbx
   140008c1f:	mov    DWORD PTR [rsp+0x20],0x1
   140008c27:	call   QWORD PTR [rip+0xc7c3]        # 0x1400153f0
   140008c2d:	mov    rdx,rsi
   140008c30:	mov    rcx,rdi
   140008c33:	call   0x1400085b0
   140008c38:	mov    r9,QWORD PTR [rdi+0x30]
   140008c3c:	mov    rdx,QWORD PTR [rdi+0x28]
   140008c40:	lea    rax,[rip+0xe9d9]        # 0x140017620
   140008c47:	lea    r8,[rip+0xcb6a]        # 0x1400157b8
   140008c4e:	lea    rcx,[rsp+0x70]
   140008c53:	mov    DWORD PTR [rsp+0x28],ebp
   140008c57:	mov    QWORD PTR [rsp+0x20],rax
   140008c5c:	call   QWORD PTR [rip+0xb806]        # 0x140014468
   140008c62:	lea    rcx,[rsp+0x70]
   140008c67:	call   QWORD PTR [rip+0xb803]        # 0x140014470
   140008c6d:	mov    rcx,rsi
   140008c70:	mov    rbx,QWORD PTR [rsp+0x78]
   140008c75:	mov    rbp,QWORD PTR [rsp+0x80]
   140008c7d:	add    rsp,0x40
   140008c81:	pop    r14
   140008c83:	pop    r13
   140008c85:	pop    r12
   140008c87:	pop    rdi
   140008c88:	pop    rsi
   140008c89:	rex.W jmp QWORD PTR [rip+0xb738]        # 0x1400143c8
   140008c90:	mov    QWORD PTR [rsp+0x8],rbx
   140008c95:	push   rdi
   140008c96:	sub    rsp,0x20
   140008c9a:	mov    ebx,edx
   140008c9c:	mov    rdi,rcx
   140008c9f:	call   QWORD PTR [rip+0xbf8b]        # 0x140014c30
   140008ca5:	test   bl,0x1
   140008ca8:	je     0x140008cb2
   140008caa:	mov    rcx,rdi
   140008cad:	call   0x140012898
   140008cb2:	mov    rax,rdi
   140008cb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140008cba:	add    rsp,0x20
   140008cbe:	pop    rdi
   140008cbf:	ret    
   140008cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140008cc5:	push   rdi
   140008cc6:	sub    rsp,0x20
   140008cca:	mov    ebx,edx
   140008ccc:	mov    rdi,rcx
   140008ccf:	call   QWORD PTR [rip+0xbf63]        # 0x140014c38
   140008cd5:	test   bl,0x1
   140008cd8:	je     0x140008ce2
   140008cda:	mov    rcx,rdi
   140008cdd:	call   0x140012898
   140008ce2:	mov    rax,rdi
   140008ce5:	mov    rbx,QWORD PTR [rsp+0x30]
   140008cea:	add    rsp,0x20
   140008cee:	pop    rdi
   140008cef:	ret    
   140008cf0:	sub    rcx,0x10
   140008cf4:	jmp    0x140008cc0
   140008cf9:	int3   
   140008cfa:	int3   
   140008cfb:	int3   
   140008cfc:	int3   
   140008cfd:	int3   
   140008cfe:	int3   
   140008cff:	int3   
   140008d00:	sub    rcx,0x10
   140008d04:	jmp    0x140008c90
   140008d09:	int3   
   140008d0a:	int3   
   140008d0b:	int3   
   140008d0c:	int3   
   140008d0d:	int3   
   140008d0e:	int3   
   140008d0f:	int3   
   140008d10:	mov    QWORD PTR [rsp+0x10],rbx
   140008d15:	mov    QWORD PTR [rsp+0x18],rsi
   140008d1a:	push   rdi
   140008d1b:	sub    rsp,0x40
   140008d1f:	mov    rbx,rcx
   140008d22:	call   QWORD PTR [rip+0xb9b8]        # 0x1400146e0
   140008d28:	lea    rdx,[rip+0xedb9]        # 0x140017ae8
   140008d2f:	lea    rax,[rip+0xed72]        # 0x140017aa8
   140008d36:	mov    QWORD PTR [rbx],rdx
   140008d39:	lea    r8,[rip+0xed50]        # 0x140017a90
   140008d40:	lea    rdx,[rsp+0x50]
   140008d45:	lea    rcx,[rip+0x209d4]        # 0x140029720
   140008d4c:	xor    r9d,r9d
   140008d4f:	mov    QWORD PTR [rbx+0x10],rax
   140008d53:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140008d5b:	call   QWORD PTR [rip+0xb7f7]        # 0x140014558
   140008d61:	lea    rdx,[rsp+0x50]
   140008d66:	mov    rcx,rbx
   140008d69:	call   QWORD PTR [rip+0xb969]        # 0x1400146d8
   140008d6f:	lea    rcx,[rsp+0x50]
   140008d74:	call   QWORD PTR [rip+0xb7ce]        # 0x140014548
   140008d7a:	lea    r8,[rip+0xecaf]        # 0x140017a30
   140008d81:	lea    rdx,[rsp+0x50]
   140008d86:	lea    rcx,[rip+0x20993]        # 0x140029720
   140008d8d:	xor    r9d,r9d
   140008d90:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140008d98:	call   QWORD PTR [rip+0xb7ba]        # 0x140014558
   140008d9e:	lea    rdx,[rsp+0x50]
   140008da3:	mov    rcx,rbx
   140008da6:	call   QWORD PTR [rip+0xb924]        # 0x1400146d0
   140008dac:	lea    rcx,[rsp+0x50]
   140008db1:	call   QWORD PTR [rip+0xb791]        # 0x140014548
   140008db7:	lea    rcx,[rbx+0x30]
   140008dbb:	mov    rdx,rbx
   140008dbe:	call   0x140008720
   140008dc3:	mov    rdx,QWORD PTR [rbx+0x40]
   140008dc7:	lea    rax,[rip+0xec4a]        # 0x140017a18
   140008dce:	xor    esi,esi
   140008dd0:	lea    r8,[rip+0xc9e1]        # 0x1400157b8
   140008dd7:	lea    rcx,[rsp+0x50]
   140008ddc:	mov    r9,rbx
   140008ddf:	mov    DWORD PTR [rsp+0x28],esi
   140008de3:	mov    QWORD PTR [rsp+0x20],rax
   140008de8:	call   QWORD PTR [rip+0xb67a]        # 0x140014468
   140008dee:	lea    rcx,[rsp+0x50]
   140008df3:	call   QWORD PTR [rip+0xb677]        # 0x140014470
   140008df9:	or     rcx,0xffffffffffffffff
   140008dfd:	lea    rdx,[rip+0xccec]        # 0x140015af0
   140008e04:	mov    QWORD PTR [rsp+0x38],rdx
   140008e09:	mov    rdi,rdx
   140008e0c:	xor    eax,eax
   140008e0e:	repnz scas al,BYTE PTR es:[rdi]
   140008e10:	lea    rdx,[rsp+0x30]
   140008e15:	not    rcx
   140008e18:	dec    rcx
   140008e1b:	mov    DWORD PTR [rsp+0x30],ecx
   140008e1f:	lea    rcx,[rsp+0x50]
   140008e24:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140008e29:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140008e2f:	call   QWORD PTR [rip+0xb70b]        # 0x140014540
   140008e35:	mov    r8,QWORD PTR [rbx+0x40]
   140008e39:	lea    rdx,[rsp+0x50]
   140008e3e:	xor    r9d,r9d
   140008e41:	mov    rcx,rbx
   140008e44:	mov    QWORD PTR [rsp+0x20],rsi
   140008e49:	call   QWORD PTR [rip+0xb879]        # 0x1400146c8
   140008e4f:	lea    rcx,[rsp+0x50]
   140008e54:	call   QWORD PTR [rip+0xb6ee]        # 0x140014548
   140008e5a:	or     rcx,0xffffffffffffffff
   140008e5e:	lea    rdx,[rip+0xcc6b]        # 0x140015ad0
   140008e65:	mov    QWORD PTR [rsp+0x38],rdx
   140008e6a:	mov    rdi,rdx
   140008e6d:	xor    eax,eax
   140008e6f:	repnz scas al,BYTE PTR es:[rdi]
   140008e71:	lea    rdx,[rsp+0x30]
   140008e76:	not    rcx
   140008e79:	dec    rcx
   140008e7c:	mov    DWORD PTR [rsp+0x30],ecx
   140008e80:	lea    rcx,[rsp+0x50]
   140008e85:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140008e8a:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140008e90:	call   QWORD PTR [rip+0xb6aa]        # 0x140014540
   140008e96:	mov    r8,QWORD PTR [rbx+0x60]
   140008e9a:	mov    QWORD PTR [rsp+0x20],rsi
   140008e9f:	xor    r9d,r9d
   140008ea2:	lea    rdx,[rsp+0x50]
   140008ea7:	mov    rcx,rbx
   140008eaa:	call   QWORD PTR [rip+0xb818]        # 0x1400146c8
   140008eb0:	lea    rcx,[rsp+0x50]
   140008eb5:	call   QWORD PTR [rip+0xb68d]        # 0x140014548
   140008ebb:	or     rcx,0xffffffffffffffff
   140008ebf:	lea    rdx,[rip+0xcc1a]        # 0x140015ae0
   140008ec6:	mov    QWORD PTR [rsp+0x38],rdx
   140008ecb:	mov    rdi,rdx
   140008ece:	xor    eax,eax
   140008ed0:	repnz scas al,BYTE PTR es:[rdi]
   140008ed2:	lea    rdx,[rsp+0x30]
   140008ed7:	not    rcx
   140008eda:	dec    rcx
   140008edd:	mov    DWORD PTR [rsp+0x30],ecx
   140008ee1:	lea    rcx,[rsp+0x50]
   140008ee6:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140008eeb:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140008ef1:	call   QWORD PTR [rip+0xb649]        # 0x140014540
   140008ef7:	mov    r8,QWORD PTR [rbx+0x68]
   140008efb:	lea    rdx,[rsp+0x50]
   140008f00:	xor    r9d,r9d
   140008f03:	mov    rcx,rbx
   140008f06:	mov    QWORD PTR [rsp+0x20],rsi
   140008f0b:	call   QWORD PTR [rip+0xb7b7]        # 0x1400146c8
   140008f11:	lea    rcx,[rsp+0x50]
   140008f16:	call   QWORD PTR [rip+0xb62c]        # 0x140014548
   140008f1c:	mov    rsi,QWORD PTR [rsp+0x60]
   140008f21:	mov    rax,rbx
   140008f24:	mov    rbx,QWORD PTR [rsp+0x58]
   140008f29:	add    rsp,0x40
   140008f2d:	pop    rdi
   140008f2e:	ret    
   140008f2f:	int3   
   140008f30:	sub    rcx,0x10
   140008f34:	jmp    0x140008f40
   140008f39:	int3   
   140008f3a:	int3   
   140008f3b:	int3   
   140008f3c:	int3   
   140008f3d:	int3   
   140008f3e:	int3   
   140008f3f:	int3   
   140008f40:	mov    QWORD PTR [rsp+0x8],rbx
   140008f45:	push   rdi
   140008f46:	sub    rsp,0x20
   140008f4a:	mov    ebx,edx
   140008f4c:	mov    rdi,rcx
   140008f4f:	call   QWORD PTR [rip+0xb7db]        # 0x140014730
   140008f55:	test   bl,0x1
   140008f58:	je     0x140008f62
   140008f5a:	mov    rcx,rdi
   140008f5d:	call   0x140012898
   140008f62:	mov    rax,rdi
   140008f65:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f6a:	add    rsp,0x20
   140008f6e:	pop    rdi
   140008f6f:	ret    
   140008f70:	mov    QWORD PTR [rsp+0x10],rbx
   140008f75:	push   rdi
   140008f76:	sub    rsp,0x30
   140008f7a:	mov    rbx,rdx
   140008f7d:	mov    rdi,rcx
   140008f80:	lea    r8,[rip+0xcbd5]        # 0x140015b5c
   140008f87:	lea    rdx,[rip+0xed22]        # 0x140017cb0
   140008f8e:	lea    rcx,[rsp+0x40]
   140008f93:	xor    r9d,r9d
   140008f96:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140008f9e:	call   QWORD PTR [rip+0xb42c]        # 0x1400143d0
   140008fa4:	mov    rcx,rbx
   140008fa7:	mov    rdx,rax
   140008faa:	call   QWORD PTR [rip+0xc660]        # 0x140015610
   140008fb0:	lea    rcx,[rsp+0x40]
   140008fb5:	call   QWORD PTR [rip+0xb58d]        # 0x140014548
   140008fbb:	lea    r8,[rip+0xecde]        # 0x140017ca0
   140008fc2:	lea    rdx,[rip+0xece7]        # 0x140017cb0
   140008fc9:	lea    rcx,[rsp+0x40]
   140008fce:	xor    r9d,r9d
   140008fd1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140008fd9:	call   QWORD PTR [rip+0xb3f1]        # 0x1400143d0
   140008fdf:	mov    rcx,QWORD PTR [rdi+0x8]
   140008fe3:	mov    rdx,rax
   140008fe6:	call   QWORD PTR [rip+0xc474]        # 0x140015460
   140008fec:	lea    rcx,[rsp+0x40]
   140008ff1:	call   QWORD PTR [rip+0xb551]        # 0x140014548
   140008ff7:	lea    r8,[rip+0xec7a]        # 0x140017c78
   140008ffe:	lea    rdx,[rip+0xecab]        # 0x140017cb0
   140009005:	lea    rcx,[rsp+0x40]
   14000900a:	xor    r9d,r9d
   14000900d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009015:	call   QWORD PTR [rip+0xb3b5]        # 0x1400143d0
   14000901b:	mov    rcx,QWORD PTR [rdi+0x20]
   14000901f:	mov    rdx,rax
   140009022:	call   QWORD PTR [rip+0xc438]        # 0x140015460
   140009028:	lea    rcx,[rsp+0x40]
   14000902d:	call   QWORD PTR [rip+0xb515]        # 0x140014548
   140009033:	lea    r8,[rip+0xda16]        # 0x140016a50
   14000903a:	lea    rdx,[rip+0xec6f]        # 0x140017cb0
   140009041:	lea    rcx,[rsp+0x40]
   140009046:	xor    r9d,r9d
   140009049:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009051:	call   QWORD PTR [rip+0xb379]        # 0x1400143d0
   140009057:	mov    rcx,QWORD PTR [rdi+0x30]
   14000905b:	mov    rdx,rax
   14000905e:	call   QWORD PTR [rip+0xc404]        # 0x140015468
   140009064:	lea    rcx,[rsp+0x40]
   140009069:	call   QWORD PTR [rip+0xb4d9]        # 0x140014548
   14000906f:	lea    r8,[rip+0xd9d2]        # 0x140016a48
   140009076:	lea    rdx,[rip+0xec33]        # 0x140017cb0
   14000907d:	lea    rcx,[rsp+0x40]
   140009082:	xor    r9d,r9d
   140009085:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000908d:	call   QWORD PTR [rip+0xb33d]        # 0x1400143d0
   140009093:	mov    rcx,QWORD PTR [rdi+0x38]
   140009097:	mov    rdx,rax
   14000909a:	call   QWORD PTR [rip+0xc3c8]        # 0x140015468
   1400090a0:	lea    rcx,[rsp+0x40]
   1400090a5:	call   QWORD PTR [rip+0xb49d]        # 0x140014548
   1400090ab:	mov    rbx,QWORD PTR [rsp+0x48]
   1400090b0:	add    rsp,0x30
   1400090b4:	pop    rdi
   1400090b5:	ret    
   1400090b6:	int3   
   1400090b7:	int3   
   1400090b8:	int3   
   1400090b9:	int3   
   1400090ba:	int3   
   1400090bb:	int3   
   1400090bc:	int3   
   1400090bd:	int3   
   1400090be:	int3   
   1400090bf:	int3   
   1400090c0:	mov    QWORD PTR [rsp+0x10],rsi
   1400090c5:	push   rdi
   1400090c6:	sub    rsp,0x20
   1400090ca:	cmp    BYTE PTR [rcx+0x80],0x0
   1400090d1:	mov    rsi,rdx
   1400090d4:	mov    rdi,rcx
   1400090d7:	je     0x140009111
   1400090d9:	mov    QWORD PTR [rsp+0x30],rbx
   1400090de:	mov    rbx,QWORD PTR [rcx+0x58]
   1400090e2:	mov    rcx,rbx
   1400090e5:	call   QWORD PTR [rip+0xbb6d]        # 0x140014c58
   1400090eb:	mov    r8,rsi
   1400090ee:	mov    rcx,rbx
   1400090f1:	mov    edx,eax
   1400090f3:	call   QWORD PTR [rip+0xbb57]        # 0x140014c50
   1400090f9:	mov    rcx,QWORD PTR [rdi+0x58]
   1400090fd:	xor    edx,edx
   1400090ff:	mov    BYTE PTR [rdi+0x80],0x0
   140009106:	call   QWORD PTR [rip+0xbb3c]        # 0x140014c48
   14000910c:	mov    rbx,QWORD PTR [rsp+0x30]
   140009111:	mov    rsi,QWORD PTR [rsp+0x38]
   140009116:	add    rsp,0x20
   14000911a:	pop    rdi
   14000911b:	ret    
   14000911c:	int3   
   14000911d:	int3   
   14000911e:	int3   
   14000911f:	int3   
   140009120:	rex push rbx
   140009122:	sub    rsp,0x20
   140009126:	mov    rbx,rcx
   140009129:	mov    rcx,QWORD PTR [rcx+0x58]
   14000912d:	call   QWORD PTR [rip+0xbb35]        # 0x140014c68
   140009133:	mov    rcx,QWORD PTR [rbx+0x58]
   140009137:	mov    edx,eax
   140009139:	call   QWORD PTR [rip+0xbb21]        # 0x140014c60
   14000913f:	test   rax,rax
   140009142:	je     0x140009152
   140009144:	mov    r8,QWORD PTR [rax]
   140009147:	mov    edx,0x1
   14000914c:	mov    rcx,rax
   14000914f:	call   QWORD PTR [r8]
   140009152:	mov    rcx,QWORD PTR [rbx+0x58]
   140009156:	call   QWORD PTR [rip+0xbafc]        # 0x140014c58
   14000915c:	test   eax,eax
   14000915e:	jne    0x14000916c
   140009160:	mov    rcx,QWORD PTR [rbx+0x68]
   140009164:	xor    edx,edx
   140009166:	call   QWORD PTR [rip+0xba0c]        # 0x140014b78
   14000916c:	add    rsp,0x20
   140009170:	pop    rbx
   140009171:	ret    
   140009172:	int3   
   140009173:	int3   
   140009174:	int3   
   140009175:	int3   
   140009176:	int3   
   140009177:	int3   
   140009178:	int3   
   140009179:	int3   
   14000917a:	int3   
   14000917b:	int3   
   14000917c:	int3   
   14000917d:	int3   
   14000917e:	int3   
   14000917f:	int3   
   140009180:	rex push rbx
   140009182:	push   rbp
   140009183:	push   rsi
   140009184:	push   rdi
   140009185:	push   r12
   140009187:	push   r13
   140009189:	push   r14
   14000918b:	sub    rsp,0x40
   14000918f:	mov    rsi,rdx
   140009192:	mov    rdi,rcx
   140009195:	lea    rdx,[rsp+0x98]
   14000919d:	mov    rcx,rsi
   1400091a0:	call   QWORD PTR [rip+0xb362]        # 0x140014508
   1400091a6:	lea    rcx,[rsp+0x98]
   1400091ae:	mov    r8,QWORD PTR [rax]
   1400091b1:	cmp    DWORD PTR [r8+0x4],0x0
   1400091b6:	sete   bl
   1400091b9:	call   QWORD PTR [rip+0xb389]        # 0x140014548
   1400091bf:	test   bl,bl
   1400091c1:	je     0x1400091f8
   1400091c3:	lea    rdx,[rip+0xeae6]        # 0x140017cb0
   1400091ca:	lea    rcx,[rsp+0x98]
   1400091d2:	mov    r8d,0x8
   1400091d8:	call   QWORD PTR [rip+0xb1da]        # 0x1400143b8
   1400091de:	mov    rcx,rsi
   1400091e1:	mov    rdx,rax
   1400091e4:	call   QWORD PTR [rip+0xb1d6]        # 0x1400143c0
   1400091ea:	lea    rcx,[rsp+0x98]
   1400091f2:	call   QWORD PTR [rip+0xb350]        # 0x140014548
   1400091f8:	lea    rdx,[rsp+0x98]
   140009200:	mov    rcx,rsi
   140009203:	mov    DWORD PTR [rsp+0x98],0x1a1
   14000920e:	mov    DWORD PTR [rsp+0x9c],0xf3
   140009219:	call   QWORD PTR [rip+0xc1b9]        # 0x1400153d8
   14000921f:	mov    ecx,0x20
   140009224:	call   0x140012892
   140009229:	xor    ebp,ebp
   14000922b:	mov    rbx,rax
   14000922e:	test   rax,rax
   140009231:	je     0x140009256
   140009233:	mov    rdx,rsi
   140009236:	mov    rcx,rax
   140009239:	call   QWORD PTR [rip+0xc1a1]        # 0x1400153e0
   14000923f:	lea    r11,[rip+0xd0e2]        # 0x140016328
   140009246:	lea    rax,[rip+0xd04b]        # 0x140016298
   14000924d:	mov    QWORD PTR [rbx],r11
   140009250:	mov    QWORD PTR [rbx+0x10],rax
   140009254:	jmp    0x140009259
   140009256:	mov    rbx,rbp
   140009259:	lea    rdx,[rip+0xd018]        # 0x140016278
   140009260:	lea    rcx,[rsp+0x98]
   140009268:	mov    r8d,0xa
   14000926e:	mov    QWORD PTR [rdi],rbx
   140009271:	call   QWORD PTR [rip+0xb141]        # 0x1400143b8
   140009277:	mov    rcx,QWORD PTR [rdi]
   14000927a:	mov    rdx,rax
   14000927d:	call   QWORD PTR [rip+0xb13d]        # 0x1400143c0
   140009283:	lea    rcx,[rsp+0x98]
   14000928b:	call   QWORD PTR [rip+0xb2b7]        # 0x140014548
   140009291:	mov    ecx,0x30
   140009296:	call   0x140012892
   14000929b:	lea    r12,[rip+0xcde6]        # 0x140016088
   1400092a2:	lea    r13,[rip+0xcd9f]        # 0x140016048
   1400092a9:	mov    rbx,rax
   1400092ac:	test   rax,rax
   1400092af:	je     0x1400092c9
   1400092b1:	mov    r8d,ebp
   1400092b4:	mov    rdx,rsi
   1400092b7:	mov    rcx,rax
   1400092ba:	call   QWORD PTR [rip+0xc138]        # 0x1400153f8
   1400092c0:	mov    QWORD PTR [rbx],r12
   1400092c3:	mov    QWORD PTR [rbx+0x10],r13
   1400092c7:	jmp    0x1400092cc
   1400092c9:	mov    rbx,rbp
   1400092cc:	lea    rdx,[rip+0xd435]        # 0x140016708
   1400092d3:	lea    rcx,[rsp+0x98]
   1400092db:	mov    r8d,0x7
   1400092e1:	mov    QWORD PTR [rdi+0x8],rbx
   1400092e5:	call   QWORD PTR [rip+0xb0cd]        # 0x1400143b8
   1400092eb:	mov    rcx,QWORD PTR [rdi+0x8]
   1400092ef:	mov    rdx,rax
   1400092f2:	call   QWORD PTR [rip+0xb0c8]        # 0x1400143c0
   1400092f8:	lea    rcx,[rsp+0x98]
   140009300:	call   QWORD PTR [rip+0xb242]        # 0x140014548
   140009306:	lea    rcx,[rsp+0x90]
   14000930e:	mov    edx,0x1
   140009313:	mov    DWORD PTR [rsp+0x90],0x540000
   14000931e:	call   QWORD PTR [rip+0xc0dc]        # 0x140015400
   140009324:	lea    rcx,[rsp+0x90]
   14000932c:	xor    edx,edx
   14000932e:	call   QWORD PTR [rip+0xc0d4]        # 0x140015408
   140009334:	lea    rcx,[rsp+0x90]
   14000933c:	xor    edx,edx
   14000933e:	call   QWORD PTR [rip+0xc0cc]        # 0x140015410
   140009344:	mov    rcx,QWORD PTR [rdi+0x8]
   140009348:	lea    rdx,[rsp+0x98]
   140009350:	call   QWORD PTR [rip+0xc0c2]        # 0x140015418
   140009356:	mov    edx,DWORD PTR [rsp+0x90]
   14000935d:	mov    ecx,DWORD PTR [rax]
   14000935f:	and    ecx,0xe0000000
   140009365:	xor    ecx,edx
   140009367:	and    ecx,0x20000000
   14000936d:	xor    edx,ecx
   14000936f:	mov    rcx,QWORD PTR [rdi+0x8]
   140009373:	mov    DWORD PTR [rsp+0x90],edx
   14000937a:	call   QWORD PTR [rip+0xc0a0]        # 0x140015420
   140009380:	mov    rdx,QWORD PTR [rdi+0x8]
   140009384:	mov    rcx,QWORD PTR [rdi]
   140009387:	mov    DWORD PTR [rsp+0x30],ebp
   14000938b:	xor    r9d,r9d
   14000938e:	xor    r8d,r8d
   140009391:	mov    DWORD PTR [rsp+0x28],0x1
   140009399:	mov    DWORD PTR [rsp+0x20],0x1
   1400093a1:	call   QWORD PTR [rip+0xc081]        # 0x140015428
   1400093a7:	mov    ecx,0x30
   1400093ac:	call   0x140012892
   1400093b1:	mov    rbx,rax
   1400093b4:	test   rax,rax
   1400093b7:	je     0x1400093dc
   1400093b9:	mov    rdx,rsi
   1400093bc:	mov    rcx,rax
   1400093bf:	call   QWORD PTR [rip+0xc07b]        # 0x140015440
   1400093c5:	lea    r11,[rip+0xc9dc]        # 0x140015da8
   1400093cc:	lea    rax,[rip+0xc995]        # 0x140015d68
   1400093d3:	mov    QWORD PTR [rbx],r11
   1400093d6:	mov    QWORD PTR [rbx+0x10],rax
   1400093da:	jmp    0x1400093df
   1400093dc:	mov    rbx,rbp
   1400093df:	lea    rdx,[rip+0xddea]        # 0x1400171d0
   1400093e6:	lea    rcx,[rsp+0x98]
   1400093ee:	mov    r8d,0xe
   1400093f4:	mov    QWORD PTR [rdi+0x10],rbx
   1400093f8:	call   QWORD PTR [rip+0xafba]        # 0x1400143b8
   1400093fe:	mov    rcx,QWORD PTR [rdi+0x10]
   140009402:	mov    rdx,rax
   140009405:	call   QWORD PTR [rip+0xafb5]        # 0x1400143c0
   14000940b:	lea    rcx,[rsp+0x98]
   140009413:	call   QWORD PTR [rip+0xb12f]        # 0x140014548
   140009419:	mov    rdx,QWORD PTR [rdi+0x10]
   14000941d:	mov    rcx,QWORD PTR [rdi]
   140009420:	mov    DWORD PTR [rsp+0x30],ebp
   140009424:	mov    r9d,0x1
   14000942a:	xor    r8d,r8d
   14000942d:	mov    DWORD PTR [rsp+0x28],0x2
   140009435:	mov    DWORD PTR [rsp+0x20],0x1
   14000943d:	call   QWORD PTR [rip+0xbfe5]        # 0x140015428
   140009443:	mov    ecx,0x30
   140009448:	call   0x140012892
   14000944d:	lea    r14,[rip+0xcda4]        # 0x1400161f8
   140009454:	mov    rbx,rax
   140009457:	test   rax,rax
   14000945a:	je     0x14000947b
   14000945c:	mov    edx,0x14
   140009461:	mov    rcx,rax
   140009464:	mov    DWORD PTR [rsp+0x20],ebp
   140009468:	lea    r9d,[rdx-0x13]
   14000946c:	lea    r8d,[rdx-0xa]
   140009470:	call   QWORD PTR [rip+0xbf72]        # 0x1400153e8
   140009476:	mov    QWORD PTR [rbx],r14
   140009479:	jmp    0x14000947e
   14000947b:	mov    rbx,rbp
   14000947e:	mov    rcx,QWORD PTR [rdi]
   140009481:	mov    r9d,0x1
   140009487:	mov    DWORD PTR [rsp+0x30],ebp
   14000948b:	mov    r8d,r9d
   14000948e:	mov    rdx,rbx
   140009491:	mov    DWORD PTR [rsp+0x28],0x1
   140009499:	mov    QWORD PTR [rdi+0x18],rbx
   14000949d:	mov    DWORD PTR [rsp+0x20],0x1
   1400094a5:	call   QWORD PTR [rip+0xbf45]        # 0x1400153f0
   1400094ab:	mov    ecx,0x30
   1400094b0:	call   0x140012892
   1400094b5:	mov    rbx,rax
   1400094b8:	test   rax,rax
   1400094bb:	je     0x1400094d5
   1400094bd:	mov    r8d,ebp
   1400094c0:	mov    rdx,rsi
   1400094c3:	mov    rcx,rax
   1400094c6:	call   QWORD PTR [rip+0xbf2c]        # 0x1400153f8
   1400094cc:	mov    QWORD PTR [rbx],r12
   1400094cf:	mov    QWORD PTR [rbx+0x10],r13
   1400094d3:	jmp    0x1400094d8
   1400094d5:	mov    rbx,rbp
   1400094d8:	lea    rdx,[rip+0xcb59]        # 0x140016038
   1400094df:	lea    rcx,[rsp+0x98]
   1400094e7:	mov    r8d,0x5
   1400094ed:	mov    QWORD PTR [rdi+0x20],rbx
   1400094f1:	call   QWORD PTR [rip+0xaec1]        # 0x1400143b8
   1400094f7:	mov    rcx,QWORD PTR [rdi+0x20]
   1400094fb:	mov    rdx,rax
   1400094fe:	call   QWORD PTR [rip+0xaebc]        # 0x1400143c0
   140009504:	lea    rcx,[rsp+0x98]
   14000950c:	call   QWORD PTR [rip+0xb036]        # 0x140014548
   140009512:	mov    rdx,QWORD PTR [rdi+0x20]
   140009516:	mov    rcx,QWORD PTR [rdi]
   140009519:	xor    r9d,r9d
   14000951c:	mov    DWORD PTR [rsp+0x30],ebp
   140009520:	mov    DWORD PTR [rsp+0x28],0x3
   140009528:	lea    r8d,[r9+0x2]
   14000952c:	mov    DWORD PTR [rsp+0x20],0x1
   140009534:	call   QWORD PTR [rip+0xbeee]        # 0x140015428
   14000953a:	mov    ecx,0x30
   14000953f:	call   0x140012892
   140009544:	mov    rbx,rax
   140009547:	test   rax,rax
   14000954a:	je     0x14000956f
   14000954c:	mov    rdx,rsi
   14000954f:	mov    rcx,rax
   140009552:	call   QWORD PTR [rip+0xb718]        # 0x140014c70
   140009558:	lea    r11,[rip+0xe7b9]        # 0x140017d18
   14000955f:	lea    rax,[rip+0xe772]        # 0x140017cd8
   140009566:	mov    QWORD PTR [rbx],r11
   140009569:	mov    QWORD PTR [rbx+0x10],rax
   14000956d:	jmp    0x140009572
   14000956f:	mov    rbx,rbp
   140009572:	lea    rdx,[rip+0xe747]        # 0x140017cc0
   140009579:	lea    rcx,[rsp+0x98]
   140009581:	mov    r8d,0xe
   140009587:	mov    QWORD PTR [rdi+0x28],rbx
   14000958b:	call   QWORD PTR [rip+0xae27]        # 0x1400143b8
   140009591:	mov    rcx,QWORD PTR [rdi+0x28]
   140009595:	mov    rdx,rax
   140009598:	call   QWORD PTR [rip+0xae22]        # 0x1400143c0
   14000959e:	lea    rcx,[rsp+0x98]
   1400095a6:	call   QWORD PTR [rip+0xaf9c]        # 0x140014548
   1400095ac:	mov    rdx,QWORD PTR [rdi+0x28]
   1400095b0:	mov    rcx,QWORD PTR [rdi]
   1400095b3:	xor    r9d,r9d
   1400095b6:	mov    DWORD PTR [rsp+0x30],ebp
   1400095ba:	mov    DWORD PTR [rsp+0x28],0x3
   1400095c2:	lea    r8d,[r9+0x3]
   1400095c6:	mov    DWORD PTR [rsp+0x20],0x3
   1400095ce:	call   QWORD PTR [rip+0xbe54]        # 0x140015428
   1400095d4:	mov    ecx,0x30
   1400095d9:	call   0x140012892
   1400095de:	lea    r12,[rip+0xd553]        # 0x140016b38
   1400095e5:	lea    r13,[rip+0xd50c]        # 0x140016af8
   1400095ec:	mov    rbx,rax
   1400095ef:	test   rax,rax
   1400095f2:	je     0x140009609
   1400095f4:	mov    rdx,rsi
   1400095f7:	mov    rcx,rax
   1400095fa:	call   QWORD PTR [rip+0xb190]        # 0x140014790
   140009600:	mov    QWORD PTR [rbx],r12
   140009603:	mov    QWORD PTR [rbx+0x10],r13
   140009607:	jmp    0x14000960c
   140009609:	mov    rbx,rbp
   14000960c:	lea    rdx,[rip+0xd4c5]        # 0x140016ad8
   140009613:	lea    rcx,[rsp+0x98]
   14000961b:	mov    r8d,0x9
   140009621:	mov    QWORD PTR [rdi+0x30],rbx
   140009625:	call   QWORD PTR [rip+0xad8d]        # 0x1400143b8
   14000962b:	mov    rcx,QWORD PTR [rdi+0x30]
   14000962f:	mov    rdx,rax
   140009632:	call   QWORD PTR [rip+0xad88]        # 0x1400143c0
   140009638:	lea    rcx,[rsp+0x98]
   140009640:	call   QWORD PTR [rip+0xaf02]        # 0x140014548
   140009646:	lea    rcx,[rsp+0x80]
   14000964e:	mov    edx,0x1
   140009653:	mov    DWORD PTR [rsp+0x80],0x40000
   14000965e:	call   QWORD PTR [rip+0xbd9c]        # 0x140015400
   140009664:	lea    rcx,[rsp+0x80]
   14000966c:	xor    edx,edx
   14000966e:	call   QWORD PTR [rip+0xbd94]        # 0x140015408
   140009674:	lea    rcx,[rsp+0x80]
   14000967c:	xor    edx,edx
   14000967e:	call   QWORD PTR [rip+0xbd8c]        # 0x140015410
   140009684:	mov    rcx,QWORD PTR [rdi+0x30]
   140009688:	lea    rdx,[rsp+0x98]
   140009690:	call   QWORD PTR [rip+0xbd82]        # 0x140015418
   140009696:	mov    edx,DWORD PTR [rsp+0x80]
   14000969d:	mov    ecx,DWORD PTR [rax]
   14000969f:	and    ecx,0xe0000000
   1400096a5:	xor    ecx,edx
   1400096a7:	and    ecx,0x20000000
   1400096ad:	xor    edx,ecx
   1400096af:	mov    rcx,QWORD PTR [rdi+0x30]
   1400096b3:	mov    DWORD PTR [rsp+0x80],edx
   1400096ba:	call   QWORD PTR [rip+0xbd60]        # 0x140015420
   1400096c0:	mov    rdx,QWORD PTR [rdi+0x30]
   1400096c4:	mov    rcx,QWORD PTR [rdi]
   1400096c7:	mov    r9d,0x3
   1400096cd:	mov    DWORD PTR [rsp+0x30],ebp
   1400096d1:	mov    r8d,r9d
   1400096d4:	mov    DWORD PTR [rsp+0x28],0x1
   1400096dc:	mov    DWORD PTR [rsp+0x20],0x1
   1400096e4:	call   QWORD PTR [rip+0xbd3e]        # 0x140015428
   1400096ea:	mov    ecx,0x30
   1400096ef:	call   0x140012892
   1400096f4:	mov    rbx,rax
   1400096f7:	test   rax,rax
   1400096fa:	je     0x140009711
   1400096fc:	mov    rdx,rsi
   1400096ff:	mov    rcx,rax
   140009702:	call   QWORD PTR [rip+0xb088]        # 0x140014790
   140009708:	mov    QWORD PTR [rbx],r12
   14000970b:	mov    QWORD PTR [rbx+0x10],r13
   14000970f:	jmp    0x140009714
   140009711:	mov    rbx,rbp
   140009714:	lea    rdx,[rip+0xd3ad]        # 0x140016ac8
   14000971b:	lea    rcx,[rsp+0x98]
   140009723:	mov    r8d,0xc
   140009729:	mov    QWORD PTR [rdi+0x38],rbx
   14000972d:	call   QWORD PTR [rip+0xac85]        # 0x1400143b8
   140009733:	mov    rcx,QWORD PTR [rdi+0x38]
   140009737:	mov    rdx,rax
   14000973a:	call   QWORD PTR [rip+0xac80]        # 0x1400143c0
   140009740:	lea    rcx,[rsp+0x98]
   140009748:	call   QWORD PTR [rip+0xadfa]        # 0x140014548
   14000974e:	mov    rcx,QWORD PTR [rdi+0x38]
   140009752:	lea    rdx,[rsp+0x98]
   14000975a:	call   QWORD PTR [rip+0xbcb8]        # 0x140015418
   140009760:	mov    edx,DWORD PTR [rsp+0x80]
   140009767:	mov    ecx,DWORD PTR [rax]
   140009769:	and    ecx,0xe0000000
   14000976f:	xor    ecx,edx
   140009771:	and    ecx,0x20000000
   140009777:	xor    edx,ecx
   140009779:	mov    rcx,QWORD PTR [rdi+0x38]
   14000977d:	mov    DWORD PTR [rsp+0x80],edx
   140009784:	call   QWORD PTR [rip+0xbc96]        # 0x140015420
   14000978a:	mov    rdx,QWORD PTR [rdi+0x38]
   14000978e:	mov    rcx,QWORD PTR [rdi]
   140009791:	mov    r9d,0x3
   140009797:	mov    DWORD PTR [rsp+0x30],ebp
   14000979b:	lea    r8d,[r9+0x1]
   14000979f:	mov    DWORD PTR [rsp+0x28],0x1
   1400097a7:	mov    DWORD PTR [rsp+0x20],0x1
   1400097af:	call   QWORD PTR [rip+0xbc73]        # 0x140015428
   1400097b5:	mov    ecx,0x30
   1400097ba:	call   0x140012892
   1400097bf:	mov    rbx,rax
   1400097c2:	test   rax,rax
   1400097c5:	je     0x1400097ea
   1400097c7:	mov    edx,0x14
   1400097cc:	mov    rcx,rax
   1400097cf:	mov    DWORD PTR [rsp+0x20],0x7
   1400097d7:	lea    r9d,[rdx-0x13]
   1400097db:	lea    r8d,[rdx+0x1f]
   1400097df:	call   QWORD PTR [rip+0xbc03]        # 0x1400153e8
   1400097e5:	mov    QWORD PTR [rbx],r14
   1400097e8:	jmp    0x1400097ed
   1400097ea:	mov    rbx,rbp
   1400097ed:	mov    rcx,QWORD PTR [rdi]
   1400097f0:	mov    r9d,0x3
   1400097f6:	mov    DWORD PTR [rsp+0x30],ebp
   1400097fa:	lea    r8d,[r9+0x2]
   1400097fe:	mov    rdx,rbx
   140009801:	mov    DWORD PTR [rsp+0x28],0x1
   140009809:	mov    QWORD PTR [rdi+0x40],rbx
   14000980d:	mov    DWORD PTR [rsp+0x20],0x1
   140009815:	call   QWORD PTR [rip+0xbbd5]        # 0x1400153f0
   14000981b:	mov    ecx,0x30
   140009820:	call   0x140012892
   140009825:	mov    rbx,rax
   140009828:	test   rax,rax
   14000982b:	je     0x140009850
   14000982d:	mov    edx,0x14
   140009832:	mov    rcx,rax
   140009835:	mov    DWORD PTR [rsp+0x20],0x7
   14000983d:	lea    r9d,[rdx-0x13]
   140009841:	lea    r8d,[rdx+0xb]
   140009845:	call   QWORD PTR [rip+0xbb9d]        # 0x1400153e8
   14000984b:	mov    QWORD PTR [rbx],r14
   14000984e:	jmp    0x140009853
   140009850:	mov    rbx,rbp
   140009853:	mov    rcx,QWORD PTR [rdi]
   140009856:	mov    r9d,0x2
   14000985c:	mov    DWORD PTR [rsp+0x30],ebp
   140009860:	lea    r8d,[r9+0x4]
   140009864:	mov    rdx,rbx
   140009867:	mov    DWORD PTR [rsp+0x28],0x1
   14000986f:	mov    QWORD PTR [rdi+0x48],rbx
   140009873:	mov    DWORD PTR [rsp+0x20],0x1
   14000987b:	call   QWORD PTR [rip+0xbb6f]        # 0x1400153f0
   140009881:	mov    rdx,rsi
   140009884:	mov    rcx,rdi
   140009887:	call   0x140008f70
   14000988c:	mov    rcx,rsi
   14000988f:	call   QWORD PTR [rip+0xab33]        # 0x1400143c8
   140009895:	add    rsp,0x40
   140009899:	pop    r14
   14000989b:	pop    r13
   14000989d:	pop    r12
   14000989f:	pop    rdi
   1400098a0:	pop    rsi
   1400098a1:	pop    rbp
   1400098a2:	pop    rbx
   1400098a3:	ret    
   1400098a4:	int3   
   1400098a5:	int3   
   1400098a6:	int3   
   1400098a7:	int3   
   1400098a8:	int3   
   1400098a9:	int3   
   1400098aa:	int3   
   1400098ab:	int3   
   1400098ac:	int3   
   1400098ad:	int3   
   1400098ae:	int3   
   1400098af:	int3   
   1400098b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400098b5:	push   rdi
   1400098b6:	sub    rsp,0x20
   1400098ba:	mov    ebx,edx
   1400098bc:	mov    rdi,rcx
   1400098bf:	call   QWORD PTR [rip+0xb543]        # 0x140014e08
   1400098c5:	test   bl,0x1
   1400098c8:	je     0x1400098d2
   1400098ca:	mov    rcx,rdi
   1400098cd:	call   0x140012898
   1400098d2:	mov    rax,rdi
   1400098d5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098da:	add    rsp,0x20
   1400098de:	pop    rdi
   1400098df:	ret    
   1400098e0:	sub    rcx,0x10
   1400098e4:	jmp    0x1400098b0
   1400098e9:	int3   
   1400098ea:	int3   
   1400098eb:	int3   
   1400098ec:	int3   
   1400098ed:	int3   
   1400098ee:	int3   
   1400098ef:	int3   
   1400098f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400098f5:	push   rdi
   1400098f6:	sub    rsp,0x40
   1400098fa:	mov    rbx,rcx
   1400098fd:	call   QWORD PTR [rip+0xaddd]        # 0x1400146e0
   140009903:	lea    rdx,[rip+0xe83e]        # 0x140018148
   14000990a:	lea    rax,[rip+0xe7f7]        # 0x140018108
   140009911:	mov    QWORD PTR [rbx],rdx
   140009914:	lea    r8,[rip+0xe7c5]        # 0x1400180e0
   14000991b:	lea    rdx,[rsp+0x50]
   140009920:	lea    rcx,[rip+0x1fe31]        # 0x140029758
   140009927:	xor    r9d,r9d
   14000992a:	mov    QWORD PTR [rbx+0x10],rax
   14000992e:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009936:	call   QWORD PTR [rip+0xac1c]        # 0x140014558
   14000993c:	lea    rdx,[rsp+0x50]
   140009941:	mov    rcx,rbx
   140009944:	call   QWORD PTR [rip+0xad8e]        # 0x1400146d8
   14000994a:	lea    rcx,[rsp+0x50]
   14000994f:	call   QWORD PTR [rip+0xabf3]        # 0x140014548
   140009955:	lea    r8,[rip+0xe6f4]        # 0x140018050
   14000995c:	lea    rdx,[rsp+0x50]
   140009961:	lea    rcx,[rip+0x1fdf0]        # 0x140029758
   140009968:	xor    r9d,r9d
   14000996b:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009973:	call   QWORD PTR [rip+0xabdf]        # 0x140014558
   140009979:	lea    rdx,[rsp+0x50]
   14000997e:	mov    rcx,rbx
   140009981:	call   QWORD PTR [rip+0xad49]        # 0x1400146d0
   140009987:	lea    rcx,[rsp+0x50]
   14000998c:	call   QWORD PTR [rip+0xabb6]        # 0x140014548
   140009992:	lea    rcx,[rbx+0x30]
   140009996:	mov    rdx,rbx
   140009999:	call   0x140009180
   14000999e:	mov    rdx,QWORD PTR [rbx+0x60]
   1400099a2:	lea    rax,[rip+0xe68f]        # 0x140018038
   1400099a9:	lea    r8,[rip+0xc9f8]        # 0x1400163a8
   1400099b0:	lea    rcx,[rsp+0x50]
   1400099b5:	mov    r9,rbx
   1400099b8:	mov    DWORD PTR [rsp+0x28],0x0
   1400099c0:	mov    QWORD PTR [rsp+0x20],rax
   1400099c5:	call   QWORD PTR [rip+0xaa9d]        # 0x140014468
   1400099cb:	lea    rcx,[rsp+0x50]
   1400099d0:	call   QWORD PTR [rip+0xaa9a]        # 0x140014470
   1400099d6:	mov    rdx,QWORD PTR [rbx+0x68]
   1400099da:	lea    rax,[rip+0xe647]        # 0x140018028
   1400099e1:	lea    r8,[rip+0xc9c0]        # 0x1400163a8
   1400099e8:	lea    rcx,[rsp+0x50]
   1400099ed:	mov    r9,rbx
   1400099f0:	mov    DWORD PTR [rsp+0x28],0x0
   1400099f8:	mov    QWORD PTR [rsp+0x20],rax
   1400099fd:	call   QWORD PTR [rip+0xaa65]        # 0x140014468
   140009a03:	lea    rcx,[rsp+0x50]
   140009a08:	call   QWORD PTR [rip+0xaa62]        # 0x140014470
   140009a0e:	or     rcx,0xffffffffffffffff
   140009a12:	lea    rdx,[rip+0xe5e7]        # 0x140018000
   140009a19:	mov    QWORD PTR [rsp+0x38],rdx
   140009a1e:	mov    rdi,rdx
   140009a21:	xor    eax,eax
   140009a23:	repnz scas al,BYTE PTR es:[rdi]
   140009a25:	lea    rdx,[rsp+0x30]
   140009a2a:	not    rcx
   140009a2d:	dec    rcx
   140009a30:	mov    DWORD PTR [rsp+0x30],ecx
   140009a34:	lea    rcx,[rsp+0x50]
   140009a39:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140009a3e:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140009a44:	call   QWORD PTR [rip+0xaaf6]        # 0x140014540
   140009a4a:	mov    rcx,QWORD PTR [rbx+0x40]
   140009a4e:	lea    rdx,[rsp+0x50]
   140009a53:	call   QWORD PTR [rip+0xacdf]        # 0x140014738
   140009a59:	lea    rcx,[rsp+0x50]
   140009a5e:	call   QWORD PTR [rip+0xaae4]        # 0x140014548
   140009a64:	or     rcx,0xffffffffffffffff
   140009a68:	lea    rdx,[rip+0xe581]        # 0x140017ff0
   140009a6f:	xor    eax,eax
   140009a71:	mov    QWORD PTR [rsp+0x38],rdx
   140009a76:	mov    rdi,rdx
   140009a79:	repnz scas al,BYTE PTR es:[rdi]
   140009a7b:	not    rcx
   140009a7e:	dec    rcx
   140009a81:	mov    DWORD PTR [rsp+0x30],ecx
   140009a85:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140009a8a:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140009a90:	lea    rdx,[rsp+0x30]
   140009a95:	lea    rcx,[rsp+0x50]
   140009a9a:	call   QWORD PTR [rip+0xaaa0]        # 0x140014540
   140009aa0:	mov    r8,QWORD PTR [rbx+0x58]
   140009aa4:	lea    rdx,[rsp+0x50]
   140009aa9:	xor    r9d,r9d
   140009aac:	mov    rcx,rbx
   140009aaf:	mov    QWORD PTR [rsp+0x20],0x0
   140009ab8:	call   QWORD PTR [rip+0xac0a]        # 0x1400146c8
   140009abe:	lea    rcx,[rsp+0x50]
   140009ac3:	call   QWORD PTR [rip+0xaa7f]        # 0x140014548
   140009ac9:	mov    BYTE PTR [rbx+0x80],0x1
   140009ad0:	mov    rax,rbx
   140009ad3:	mov    rbx,QWORD PTR [rsp+0x58]
   140009ad8:	add    rsp,0x40
   140009adc:	pop    rdi
   140009add:	ret    
   140009ade:	int3   
   140009adf:	int3   
   140009ae0:	rex push rbx
   140009ae2:	sub    rsp,0x30
   140009ae6:	mov    rbx,rcx
   140009ae9:	lea    r8,[rip+0xe7e8]        # 0x1400182d8
   140009af0:	lea    rdx,[rsp+0x50]
   140009af5:	lea    rcx,[rip+0x1fc5c]        # 0x140029758
   140009afc:	xor    r9d,r9d
   140009aff:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140009b07:	call   QWORD PTR [rip+0xaa4b]        # 0x140014558
   140009b0d:	lea    rcx,[rsp+0x58]
   140009b12:	call   QWORD PTR [rip+0xa8d8]        # 0x1400143f0
   140009b18:	lea    r8,[rsp+0x50]
   140009b1d:	lea    rcx,[rsp+0x48]
   140009b22:	mov    rdx,rbx
   140009b25:	mov    r9,rax
   140009b28:	mov    DWORD PTR [rsp+0x20],0x1
   140009b30:	call   QWORD PTR [rip+0xb2da]        # 0x140014e10
   140009b36:	lea    rcx,[rsp+0x50]
   140009b3b:	call   QWORD PTR [rip+0xaa07]        # 0x140014548
   140009b41:	lea    rcx,[rsp+0x58]
   140009b46:	call   QWORD PTR [rip+0xa9fc]        # 0x140014548
   140009b4c:	mov    r11,QWORD PTR [rsp+0x48]
   140009b51:	cmp    DWORD PTR [r11+0x4],0x0
   140009b56:	je     0x140009b75
   140009b58:	mov    rbx,QWORD PTR [rbx+0x58]
   140009b5c:	mov    rcx,rbx
   140009b5f:	call   QWORD PTR [rip+0xb0f3]        # 0x140014c58
   140009b65:	lea    r8,[rsp+0x48]
   140009b6a:	mov    rcx,rbx
   140009b6d:	mov    edx,eax
   140009b6f:	call   QWORD PTR [rip+0xb0db]        # 0x140014c50
   140009b75:	lea    rcx,[rsp+0x48]
   140009b7a:	call   QWORD PTR [rip+0xa9c8]        # 0x140014548
   140009b80:	add    rsp,0x30
   140009b84:	pop    rbx
   140009b85:	ret    
   140009b86:	int3   
   140009b87:	int3   
   140009b88:	int3   
   140009b89:	int3   
   140009b8a:	int3   
   140009b8b:	int3   
   140009b8c:	int3   
   140009b8d:	int3   
   140009b8e:	int3   
   140009b8f:	int3   
   140009b90:	rex push rbx
   140009b92:	push   rbp
   140009b93:	push   rdi
   140009b94:	sub    rsp,0x20
   140009b98:	mov    rax,QWORD PTR [rip+0xa959]        # 0x1400144f8
   140009b9f:	mov    rbp,rcx
   140009ba2:	mov    rdi,rdx
   140009ba5:	mov    QWORD PTR [rdx],rax
   140009ba8:	mov    rcx,QWORD PTR [rcx+0x58]
   140009bac:	xor    ebx,ebx
   140009bae:	call   QWORD PTR [rip+0xb0a4]        # 0x140014c58
   140009bb4:	test   eax,eax
   140009bb6:	jle    0x140009c55
   140009bbc:	mov    QWORD PTR [rsp+0x50],rsi
   140009bc1:	mov    rcx,QWORD PTR [rbp+0x58]
   140009bc5:	mov    edx,ebx
   140009bc7:	call   QWORD PTR [rip+0xb253]        # 0x140014e20
   140009bcd:	lea    rdx,[rsp+0x48]
   140009bd2:	mov    rcx,rax
   140009bd5:	call   QWORD PTR [rip+0xb23d]        # 0x140014e18
   140009bdb:	mov    rcx,QWORD PTR [rdi]
   140009bde:	mov    edx,DWORD PTR [rcx]
   140009be0:	mov    rsi,rax
   140009be3:	cmp    edx,0x1
   140009be6:	je     0x140009c12
   140009be8:	test   edx,edx
   140009bea:	je     0x140009c12
   140009bec:	mov    edx,0x7fffffff
   140009bf1:	mov    r8d,0x1
   140009bf7:	mov    rcx,rdi
   140009bfa:	call   0x140001c10
   140009bff:	test   rax,rax
   140009c02:	je     0x140009c31
   140009c04:	mov    rdx,rsi
   140009c07:	mov    rcx,rax
   140009c0a:	call   QWORD PTR [rip+0xa958]        # 0x140014568
   140009c10:	jmp    0x140009c31
   140009c12:	lea    rcx,[rsp+0x40]
   140009c17:	mov    rdx,rax
   140009c1a:	call   QWORD PTR [rip+0xa948]        # 0x140014568
   140009c20:	mov    rcx,rdi
   140009c23:	call   QWORD PTR [rip+0xa877]        # 0x1400144a0
   140009c29:	mov    rcx,QWORD PTR [rsp+0x40]
   140009c2e:	mov    QWORD PTR [rax],rcx
   140009c31:	lea    rcx,[rsp+0x48]
   140009c36:	call   QWORD PTR [rip+0xa90c]        # 0x140014548
   140009c3c:	mov    rcx,QWORD PTR [rbp+0x58]
   140009c40:	inc    ebx
   140009c42:	call   QWORD PTR [rip+0xb010]        # 0x140014c58
   140009c48:	cmp    ebx,eax
   140009c4a:	jl     0x140009bc1
   140009c50:	mov    rsi,QWORD PTR [rsp+0x50]
   140009c55:	mov    rax,rdi
   140009c58:	add    rsp,0x20
   140009c5c:	pop    rdi
   140009c5d:	pop    rbp
   140009c5e:	pop    rbx
   140009c5f:	ret    
   140009c60:	rex push rbx
   140009c62:	push   rbp
   140009c63:	push   rsi
   140009c64:	push   rdi
   140009c65:	push   r12
   140009c67:	push   r13
   140009c69:	push   r14
   140009c6b:	push   r15
   140009c6d:	sub    rsp,0xb8
   140009c74:	mov    rdi,rcx
   140009c77:	mov    r14,rdx
   140009c7a:	xor    esi,esi
   140009c7c:	mov    DWORD PTR [rsp+0x100],esi
   140009c83:	mov    rax,QWORD PTR [rip+0xa86e]        # 0x1400144f8
   140009c8a:	lea    rcx,[rsp+0x100]
   140009c92:	mov    QWORD PTR [rdx],rax
   140009c95:	mov    dl,0x2c
   140009c97:	call   QWORD PTR [rip+0xa77b]        # 0x140014418
   140009c9d:	mov    rcx,QWORD PTR [rdi+0x40]
   140009ca1:	lea    rdx,[rsp+0x110]
   140009ca9:	mov    rbx,rax
   140009cac:	call   QWORD PTR [rip+0xaa9e]        # 0x140014750
   140009cb2:	movzx  r8d,WORD PTR [rbx]
   140009cb6:	lea    rdx,[rsp+0x108]
   140009cbe:	xor    r9d,r9d
   140009cc1:	mov    rcx,rax
   140009cc4:	mov    DWORD PTR [rsp+0x20],0x1
   140009ccc:	call   QWORD PTR [rip+0xa63e]        # 0x140014310
   140009cd2:	mov    rdx,QWORD PTR [rax]
   140009cd5:	mov    rbx,rax
   140009cd8:	mov    QWORD PTR [rsp+0x30],rdx
   140009cdd:	mov    ecx,DWORD PTR [rdx]
   140009cdf:	test   ecx,ecx
   140009ce1:	je     0x140009cee
   140009ce3:	cmp    ecx,0xffffffff
   140009ce6:	je     0x140009d47
   140009ce8:	lock add DWORD PTR [rdx],0x1
   140009cec:	jmp    0x140009d42
   140009cee:	mov    edx,DWORD PTR [rdx+0x4]
   140009cf1:	lea    rcx,[rsp+0x30]
   140009cf6:	call   QWORD PTR [rip+0xa7bc]        # 0x1400144b8
   140009cfc:	mov    rdx,QWORD PTR [rsp+0x30]
   140009d01:	mov    r11,QWORD PTR [rbx]
   140009d04:	movsxd rax,DWORD PTR [r11+0x8]
   140009d08:	lea    rdi,[r11+rax*8+0x10]
   140009d0d:	movsxd rax,DWORD PTR [rdx+0xc]
   140009d11:	lea    rbp,[rdx+rax*8+0x10]
   140009d16:	movsxd rax,DWORD PTR [rdx+0x8]
   140009d1a:	lea    rbx,[rdx+rax*8+0x10]
   140009d1f:	cmp    rbx,rbp
   140009d22:	je     0x140009d47
   140009d24:	test   rbx,rbx
   140009d27:	je     0x140009d35
   140009d29:	mov    rdx,rdi
   140009d2c:	mov    rcx,rbx
   140009d2f:	call   QWORD PTR [rip+0xa833]        # 0x140014568
   140009d35:	add    rbx,0x8
   140009d39:	add    rdi,0x8
   140009d3d:	cmp    rbx,rbp
   140009d40:	jne    0x140009d24
   140009d42:	mov    rdx,QWORD PTR [rsp+0x30]
   140009d47:	mov    rdi,QWORD PTR [rsp+0x108]
   140009d4f:	mov    DWORD PTR [rsp+0x38],esi
   140009d53:	movsxd rax,DWORD PTR [rdx+0x8]
   140009d57:	lea    rcx,[rdx+rax*8+0x10]
   140009d5c:	mov    QWORD PTR [rsp+0x40],rcx
   140009d61:	movsxd rax,DWORD PTR [rdx+0xc]
   140009d65:	lea    rcx,[rdx+rax*8+0x10]
   140009d6a:	mov    QWORD PTR [rsp+0x48],rcx
   140009d6f:	mov    eax,DWORD PTR [rdi]
   140009d71:	test   eax,eax
   140009d73:	je     0x140009d8d
   140009d75:	cmp    eax,0xffffffff
   140009d78:	je     0x140009dcb
   140009d7a:	lock add DWORD PTR [rdi],0xffffffff
   140009d7e:	setne  al
   140009d81:	test   al,al
   140009d83:	jne    0x140009dcb
   140009d85:	mov    rdi,QWORD PTR [rsp+0x108]
   140009d8d:	movsxd rax,DWORD PTR [rdi+0xc]
   140009d91:	lea    rbx,[rdi+rax*8+0x10]
   140009d96:	movsxd rax,DWORD PTR [rdi+0x8]
   140009d9a:	lea    rbp,[rdi+rax*8+0x10]
   140009d9f:	cmp    rbp,rbx
   140009da2:	je     0x140009dc2
   140009da4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140009db0:	sub    rbx,0x8
   140009db4:	mov    rcx,rbx
   140009db7:	call   QWORD PTR [rip+0xa78b]        # 0x140014548
   140009dbd:	cmp    rbx,rbp
   140009dc0:	jne    0x140009db0
   140009dc2:	mov    rcx,rdi
   140009dc5:	call   QWORD PTR [rip+0xa70d]        # 0x1400144d8
   140009dcb:	lea    rcx,[rsp+0x110]
   140009dd3:	call   QWORD PTR [rip+0xa76f]        # 0x140014548
   140009dd9:	nop    DWORD PTR [rax+0x0]
   140009de0:	mov    eax,DWORD PTR [rsp+0x38]
   140009de4:	inc    DWORD PTR [rsp+0x38]
   140009de8:	test   eax,eax
   140009dea:	jne    0x140009dfd
   140009dec:	mov    rax,QWORD PTR [rsp+0x48]
   140009df1:	cmp    QWORD PTR [rsp+0x40],rax
   140009df6:	je     0x140009dfd
   140009df8:	mov    r12b,0x1
   140009dfb:	jmp    0x140009e00
   140009dfd:	xor    r12b,r12b
   140009e00:	test   sil,0x8
   140009e04:	je     0x140009e6b
   140009e06:	mov    rdi,QWORD PTR [rsp+0x118]
   140009e0e:	and    esi,0xfffffff7
   140009e11:	mov    eax,DWORD PTR [rdi]
   140009e13:	test   eax,eax
   140009e15:	je     0x140009e2f
   140009e17:	cmp    eax,0xffffffff
   140009e1a:	je     0x140009e6b
   140009e1c:	lock add DWORD PTR [rdi],0xffffffff
   140009e20:	setne  al
   140009e23:	test   al,al
   140009e25:	jne    0x140009e6b
   140009e27:	mov    rdi,QWORD PTR [rsp+0x118]
   140009e2f:	movsxd rax,DWORD PTR [rdi+0xc]
   140009e33:	lea    rbx,[rdi+rax*8+0x10]
   140009e38:	movsxd rax,DWORD PTR [rdi+0x8]
   140009e3c:	lea    rbp,[rdi+rax*8+0x10]
   140009e41:	cmp    rbp,rbx
   140009e44:	je     0x140009e62
   140009e46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009e50:	sub    rbx,0x8
   140009e54:	mov    rcx,rbx
   140009e57:	call   QWORD PTR [rip+0xa6eb]        # 0x140014548
   140009e5d:	cmp    rbx,rbp
   140009e60:	jne    0x140009e50
   140009e62:	mov    rcx,rdi
   140009e65:	call   QWORD PTR [rip+0xa66d]        # 0x1400144d8
   140009e6b:	test   sil,0x4
   140009e6f:	je     0x140009e82
   140009e71:	lea    rcx,[rsp+0x80]
   140009e79:	and    esi,0xfffffffb
   140009e7c:	call   QWORD PTR [rip+0xa6c6]        # 0x140014548
   140009e82:	test   r12b,r12b
   140009e85:	je     0x14000a0f5
   140009e8b:	mov    r15,QWORD PTR [rsp+0x40]
   140009e90:	test   sil,0x20
   140009e94:	je     0x140009eeb
   140009e96:	mov    rdi,QWORD PTR [rsp+0x68]
   140009e9b:	and    esi,0xffffffdf
   140009e9e:	mov    eax,DWORD PTR [rdi]
   140009ea0:	test   eax,eax
   140009ea2:	je     0x140009eb9
   140009ea4:	cmp    eax,0xffffffff
   140009ea7:	je     0x140009eeb
   140009ea9:	lock add DWORD PTR [rdi],0xffffffff
   140009ead:	setne  al
   140009eb0:	test   al,al
   140009eb2:	jne    0x140009eeb
   140009eb4:	mov    rdi,QWORD PTR [rsp+0x68]
   140009eb9:	movsxd rax,DWORD PTR [rdi+0xc]
   140009ebd:	lea    rbx,[rdi+rax*8+0x10]
   140009ec2:	movsxd rax,DWORD PTR [rdi+0x8]
   140009ec6:	lea    rbp,[rdi+rax*8+0x10]
   140009ecb:	cmp    rbp,rbx
   140009ece:	je     0x140009ee2
   140009ed0:	sub    rbx,0x8
   140009ed4:	mov    rcx,rbx
   140009ed7:	call   QWORD PTR [rip+0xa66b]        # 0x140014548
   140009edd:	cmp    rbx,rbp
   140009ee0:	jne    0x140009ed0
   140009ee2:	mov    rcx,rdi
   140009ee5:	call   QWORD PTR [rip+0xa5ed]        # 0x1400144d8
   140009eeb:	test   sil,0x10
   140009eef:	je     0x140009f02
   140009ef1:	and    esi,0xffffffef
   140009ef4:	lea    rcx,[rsp+0xa0]
   140009efc:	call   QWORD PTR [rip+0xa646]        # 0x140014548
   140009f02:	bt     esi,0x9
   140009f06:	mov    r12d,DWORD PTR [rsp+0x38]
   140009f0b:	jae    0x140009f6b
   140009f0d:	mov    rdi,QWORD PTR [rsp+0x60]
   140009f12:	btr    esi,0x9
   140009f16:	mov    eax,DWORD PTR [rdi]
   140009f18:	test   eax,eax
   140009f1a:	je     0x140009f2c
   140009f1c:	cmp    eax,0xffffffff
   140009f1f:	je     0x140009f6b
   140009f21:	lock add DWORD PTR [rdi],0xffffffff
   140009f25:	setne  al
   140009f28:	test   al,al
   140009f2a:	jne    0x140009f6b
   140009f2c:	mov    rdi,QWORD PTR [rsp+0x60]
   140009f31:	movsxd rax,DWORD PTR [rdi+0xc]
   140009f35:	lea    rbx,[rdi+rax*8+0x10]
   140009f3a:	movsxd rax,DWORD PTR [rdi+0x8]
   140009f3e:	lea    rbp,[rdi+rax*8+0x10]
   140009f43:	cmp    rbp,rbx
   140009f46:	je     0x140009f62
   140009f48:	nop    DWORD PTR [rax+rax*1+0x0]
   140009f50:	sub    rbx,0x8
   140009f54:	mov    rcx,rbx
   140009f57:	call   QWORD PTR [rip+0xa5eb]        # 0x140014548
   140009f5d:	cmp    rbx,rbp
   140009f60:	jne    0x140009f50
   140009f62:	mov    rcx,rdi
   140009f65:	call   QWORD PTR [rip+0xa56d]        # 0x1400144d8
   140009f6b:	bt     esi,0x8
   140009f6f:	jae    0x140009f83
   140009f71:	lea    rcx,[rsp+0x98]
   140009f79:	btr    esi,0x8
   140009f7d:	call   QWORD PTR [rip+0xa5c5]        # 0x140014548
   140009f83:	test   r12d,r12d
   140009f86:	je     0x14000a075
   140009f8c:	lea    rdx,[rsp+0x70]
   140009f91:	mov    rcx,r15
   140009f94:	call   QWORD PTR [rip+0xa3be]        # 0x140014358
   140009f9a:	mov    rcx,QWORD PTR [r14]
   140009f9d:	mov    edx,DWORD PTR [rcx]
   140009f9f:	mov    rbx,rax
   140009fa2:	cmp    edx,0x1
   140009fa5:	je     0x140009fd1
   140009fa7:	test   edx,edx
   140009fa9:	je     0x140009fd1
   140009fab:	mov    edx,0x7fffffff
   140009fb0:	mov    r8d,0x1
   140009fb6:	mov    rcx,r14
   140009fb9:	call   0x140001c10
   140009fbe:	test   rax,rax
   140009fc1:	je     0x140009ff0
   140009fc3:	mov    rdx,rbx
   140009fc6:	mov    rcx,rax
   140009fc9:	call   QWORD PTR [rip+0xa599]        # 0x140014568
   140009fcf:	jmp    0x140009ff0
   140009fd1:	lea    rcx,[rsp+0x78]
   140009fd6:	mov    rdx,rax
   140009fd9:	call   QWORD PTR [rip+0xa589]        # 0x140014568
   140009fdf:	mov    rcx,r14
   140009fe2:	call   QWORD PTR [rip+0xa4b8]        # 0x1400144a0
   140009fe8:	mov    rcx,QWORD PTR [rsp+0x78]
   140009fed:	mov    QWORD PTR [rax],rcx
   140009ff0:	lea    rcx,[rsp+0x70]
   140009ff5:	call   QWORD PTR [rip+0xa54d]        # 0x140014548
   140009ffb:	dec    DWORD PTR [rsp+0x38]
   140009fff:	test   sil,sil
   14000a002:	jns    0x14000a05b
   14000a004:	mov    rdi,QWORD PTR [rsp+0x58]
   14000a009:	btr    esi,0x7
   14000a00d:	mov    eax,DWORD PTR [rdi]
   14000a00f:	test   eax,eax
   14000a011:	je     0x14000a023
   14000a013:	cmp    eax,0xffffffff
   14000a016:	je     0x14000a05b
   14000a018:	lock add DWORD PTR [rdi],0xffffffff
   14000a01c:	setne  al
   14000a01f:	test   al,al
   14000a021:	jne    0x14000a05b
   14000a023:	mov    rdi,QWORD PTR [rsp+0x58]
   14000a028:	movsxd rax,DWORD PTR [rdi+0xc]
   14000a02c:	lea    rbx,[rdi+rax*8+0x10]
   14000a031:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a035:	lea    rbp,[rdi+rax*8+0x10]
   14000a03a:	cmp    rbp,rbx
   14000a03d:	je     0x14000a052
   14000a03f:	nop
   14000a040:	sub    rbx,0x8
   14000a044:	mov    rcx,rbx
   14000a047:	call   QWORD PTR [rip+0xa4fb]        # 0x140014548
   14000a04d:	cmp    rbx,rbp
   14000a050:	jne    0x14000a040
   14000a052:	mov    rcx,rdi
   14000a055:	call   QWORD PTR [rip+0xa47d]        # 0x1400144d8
   14000a05b:	test   sil,0x40
   14000a05f:	je     0x140009f02
   14000a065:	and    esi,0xffffffbf
   14000a068:	lea    rcx,[rsp+0x88]
   14000a070:	jmp    0x140009efc
   14000a075:	add    QWORD PTR [rsp+0x40],0x8
   14000a07b:	test   sil,0x2
   14000a07f:	je     0x14000a0db
   14000a081:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a086:	and    esi,0xfffffffd
   14000a089:	mov    eax,DWORD PTR [rdi]
   14000a08b:	test   eax,eax
   14000a08d:	je     0x14000a0a4
   14000a08f:	cmp    eax,0xffffffff
   14000a092:	je     0x14000a0db
   14000a094:	lock add DWORD PTR [rdi],0xffffffff
   14000a098:	setne  al
   14000a09b:	test   al,al
   14000a09d:	jne    0x14000a0db
   14000a09f:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a0a4:	movsxd rax,DWORD PTR [rdi+0xc]
   14000a0a8:	lea    rbx,[rdi+rax*8+0x10]
   14000a0ad:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a0b1:	lea    rbp,[rdi+rax*8+0x10]
   14000a0b6:	cmp    rbp,rbx
   14000a0b9:	je     0x14000a0d2
   14000a0bb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a0c0:	sub    rbx,0x8
   14000a0c4:	mov    rcx,rbx
   14000a0c7:	call   QWORD PTR [rip+0xa47b]        # 0x140014548
   14000a0cd:	cmp    rbx,rbp
   14000a0d0:	jne    0x14000a0c0
   14000a0d2:	mov    rcx,rdi
   14000a0d5:	call   QWORD PTR [rip+0xa3fd]        # 0x1400144d8
   14000a0db:	test   sil,0x1
   14000a0df:	je     0x140009de0
   14000a0e5:	and    esi,0xfffffffe
   14000a0e8:	lea    rcx,[rsp+0x90]
   14000a0f0:	jmp    0x140009dd3
   14000a0f5:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a0fa:	mov    eax,DWORD PTR [rdi]
   14000a0fc:	test   eax,eax
   14000a0fe:	je     0x14000a115
   14000a100:	cmp    eax,0xffffffff
   14000a103:	je     0x14000a14b
   14000a105:	lock add DWORD PTR [rdi],0xffffffff
   14000a109:	setne  al
   14000a10c:	test   al,al
   14000a10e:	jne    0x14000a14b
   14000a110:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a115:	movsxd rax,DWORD PTR [rdi+0xc]
   14000a119:	lea    rbx,[rdi+rax*8+0x10]
   14000a11e:	movsxd rax,DWORD PTR [rdi+0x8]
   14000a122:	lea    rsi,[rdi+rax*8+0x10]
   14000a127:	cmp    rsi,rbx
   14000a12a:	je     0x14000a142
   14000a12c:	nop    DWORD PTR [rax+0x0]
   14000a130:	sub    rbx,0x8
   14000a134:	mov    rcx,rbx
   14000a137:	call   QWORD PTR [rip+0xa40b]        # 0x140014548
   14000a13d:	cmp    rbx,rsi
   14000a140:	jne    0x14000a130
   14000a142:	mov    rcx,rdi
   14000a145:	call   QWORD PTR [rip+0xa38d]        # 0x1400144d8
   14000a14b:	mov    rax,r14
   14000a14e:	add    rsp,0xb8
   14000a155:	pop    r15
   14000a157:	pop    r14
   14000a159:	pop    r13
   14000a15b:	pop    r12
   14000a15d:	pop    rdi
   14000a15e:	pop    rsi
   14000a15f:	pop    rbp
   14000a160:	pop    rbx
   14000a161:	ret    
   14000a162:	int3   
   14000a163:	int3   
   14000a164:	int3   
   14000a165:	int3   
   14000a166:	int3   
   14000a167:	int3   
   14000a168:	int3   
   14000a169:	int3   
   14000a16a:	int3   
   14000a16b:	int3   
   14000a16c:	int3   
   14000a16d:	int3   
   14000a16e:	int3   
   14000a16f:	int3   
   14000a170:	mov    QWORD PTR [rsp+0x10],rbx
   14000a175:	push   rdi
   14000a176:	sub    rsp,0x30
   14000a17a:	mov    rbx,rdx
   14000a17d:	mov    rdi,rcx
   14000a180:	lea    r8,[rip+0xb9d5]        # 0x140015b5c
   14000a187:	lea    rdx,[rip+0xe17a]        # 0x140018308
   14000a18e:	lea    rcx,[rsp+0x40]
   14000a193:	xor    r9d,r9d
   14000a196:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a19e:	call   QWORD PTR [rip+0xa22c]        # 0x1400143d0
   14000a1a4:	mov    rcx,rbx
   14000a1a7:	mov    rdx,rax
   14000a1aa:	call   QWORD PTR [rip+0xb460]        # 0x140015610
   14000a1b0:	lea    rcx,[rsp+0x40]
   14000a1b5:	call   QWORD PTR [rip+0xa38d]        # 0x140014548
   14000a1bb:	lea    r8,[rip+0xe13a]        # 0x1400182fc
   14000a1c2:	lea    rdx,[rip+0xe13f]        # 0x140018308
   14000a1c9:	lea    rcx,[rsp+0x40]
   14000a1ce:	xor    r9d,r9d
   14000a1d1:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a1d9:	call   QWORD PTR [rip+0xa1f1]        # 0x1400143d0
   14000a1df:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a1e3:	mov    rdx,rax
   14000a1e6:	call   QWORD PTR [rip+0xb274]        # 0x140015460
   14000a1ec:	lea    rcx,[rsp+0x40]
   14000a1f1:	call   QWORD PTR [rip+0xa351]        # 0x140014548
   14000a1f7:	lea    r8,[rip+0xc84a]        # 0x140016a48
   14000a1fe:	lea    rdx,[rip+0xe103]        # 0x140018308
   14000a205:	lea    rcx,[rsp+0x40]
   14000a20a:	xor    r9d,r9d
   14000a20d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a215:	call   QWORD PTR [rip+0xa1b5]        # 0x1400143d0
   14000a21b:	mov    rcx,QWORD PTR [rdi+0x18]
   14000a21f:	mov    rdx,rax
   14000a222:	call   QWORD PTR [rip+0xb240]        # 0x140015468
   14000a228:	lea    rcx,[rsp+0x40]
   14000a22d:	call   QWORD PTR [rip+0xa315]        # 0x140014548
   14000a233:	lea    r8,[rip+0xe0b6]        # 0x1400182f0
   14000a23a:	lea    rdx,[rip+0xe0c7]        # 0x140018308
   14000a241:	lea    rcx,[rsp+0x40]
   14000a246:	xor    r9d,r9d
   14000a249:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a251:	call   QWORD PTR [rip+0xa179]        # 0x1400143d0
   14000a257:	mov    rcx,QWORD PTR [rdi+0x20]
   14000a25b:	mov    rdx,rax
   14000a25e:	call   QWORD PTR [rip+0xb204]        # 0x140015468
   14000a264:	lea    rcx,[rsp+0x40]
   14000a269:	call   QWORD PTR [rip+0xa2d9]        # 0x140014548
   14000a26f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a274:	add    rsp,0x30
   14000a278:	pop    rdi
   14000a279:	ret    
   14000a27a:	int3   
   14000a27b:	int3   
   14000a27c:	int3   
   14000a27d:	int3   
   14000a27e:	int3   
   14000a27f:	int3   
   14000a280:	mov    QWORD PTR [rsp+0x10],rbx
   14000a285:	push   rbp
   14000a286:	push   rsi
   14000a287:	push   rdi
   14000a288:	push   r12
   14000a28a:	push   r13
   14000a28c:	sub    rsp,0x40
   14000a290:	mov    rsi,rdx
   14000a293:	mov    rdi,rcx
   14000a296:	lea    rdx,[rsp+0x80]
   14000a29e:	mov    rcx,rsi
   14000a2a1:	call   QWORD PTR [rip+0xa261]        # 0x140014508
   14000a2a7:	lea    rcx,[rsp+0x80]
   14000a2af:	mov    r8,QWORD PTR [rax]
   14000a2b2:	cmp    DWORD PTR [r8+0x4],0x0
   14000a2b7:	sete   bl
   14000a2ba:	call   QWORD PTR [rip+0xa288]        # 0x140014548
   14000a2c0:	test   bl,bl
   14000a2c2:	je     0x14000a2f9
   14000a2c4:	lea    rdx,[rip+0xe03d]        # 0x140018308
   14000a2cb:	lea    rcx,[rsp+0x80]
   14000a2d3:	mov    r8d,0x9
   14000a2d9:	call   QWORD PTR [rip+0xa0d9]        # 0x1400143b8
   14000a2df:	mov    rcx,rsi
   14000a2e2:	mov    rdx,rax
   14000a2e5:	call   QWORD PTR [rip+0xa0d5]        # 0x1400143c0
   14000a2eb:	lea    rcx,[rsp+0x80]
   14000a2f3:	call   QWORD PTR [rip+0xa24f]        # 0x140014548
   14000a2f9:	lea    rdx,[rsp+0x80]
   14000a301:	mov    rcx,rsi
   14000a304:	mov    DWORD PTR [rsp+0x80],0x1a1
   14000a30f:	mov    DWORD PTR [rsp+0x84],0xf2
   14000a31a:	call   QWORD PTR [rip+0xb0b8]        # 0x1400153d8
   14000a320:	mov    ecx,0x20
   14000a325:	call   0x140012892
   14000a32a:	xor    ebp,ebp
   14000a32c:	mov    rbx,rax
   14000a32f:	test   rax,rax
   14000a332:	je     0x14000a357
   14000a334:	mov    rdx,rsi
   14000a337:	mov    rcx,rax
   14000a33a:	call   QWORD PTR [rip+0xb0a0]        # 0x1400153e0
   14000a340:	lea    r11,[rip+0xbfe1]        # 0x140016328
   14000a347:	lea    rax,[rip+0xbf4a]        # 0x140016298
   14000a34e:	mov    QWORD PTR [rbx],r11
   14000a351:	mov    QWORD PTR [rbx+0x10],rax
   14000a355:	jmp    0x14000a35a
   14000a357:	mov    rbx,rbp
   14000a35a:	lea    rdx,[rip+0xbf17]        # 0x140016278
   14000a361:	lea    rcx,[rsp+0x80]
   14000a369:	mov    r8d,0xa
   14000a36f:	mov    QWORD PTR [rdi],rbx
   14000a372:	call   QWORD PTR [rip+0xa040]        # 0x1400143b8
   14000a378:	mov    rcx,QWORD PTR [rdi]
   14000a37b:	mov    rdx,rax
   14000a37e:	call   QWORD PTR [rip+0xa03c]        # 0x1400143c0
   14000a384:	lea    rcx,[rsp+0x80]
   14000a38c:	call   QWORD PTR [rip+0xa1b6]        # 0x140014548
   14000a392:	mov    ecx,0x30
   14000a397:	call   0x140012892
   14000a39c:	mov    rbx,rax
   14000a39f:	test   rax,rax
   14000a3a2:	je     0x14000a3ca
   14000a3a4:	mov    r8d,ebp
   14000a3a7:	mov    rdx,rsi
   14000a3aa:	mov    rcx,rax
   14000a3ad:	call   QWORD PTR [rip+0xb045]        # 0x1400153f8
   14000a3b3:	lea    r11,[rip+0xbcce]        # 0x140016088
   14000a3ba:	lea    rax,[rip+0xbc87]        # 0x140016048
   14000a3c1:	mov    QWORD PTR [rbx],r11
   14000a3c4:	mov    QWORD PTR [rbx+0x10],rax
   14000a3c8:	jmp    0x14000a3cd
   14000a3ca:	mov    rbx,rbp
   14000a3cd:	lea    rdx,[rip+0xdf64]        # 0x140018338
   14000a3d4:	lea    rcx,[rsp+0x80]
   14000a3dc:	mov    r8d,0x9
   14000a3e2:	mov    QWORD PTR [rdi+0x8],rbx
   14000a3e6:	call   QWORD PTR [rip+0x9fcc]        # 0x1400143b8
   14000a3ec:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a3f0:	mov    rdx,rax
   14000a3f3:	call   QWORD PTR [rip+0x9fc7]        # 0x1400143c0
   14000a3f9:	lea    rcx,[rsp+0x80]
   14000a401:	call   QWORD PTR [rip+0xa141]        # 0x140014548
   14000a407:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a40b:	mov    dl,0x1
   14000a40d:	call   QWORD PTR [rip+0xaa15]        # 0x140014e28
   14000a413:	mov    rdx,QWORD PTR [rdi+0x8]
   14000a417:	mov    rcx,QWORD PTR [rdi]
   14000a41a:	mov    DWORD PTR [rsp+0x30],ebp
   14000a41e:	xor    r9d,r9d
   14000a421:	xor    r8d,r8d
   14000a424:	mov    DWORD PTR [rsp+0x28],0x2
   14000a42c:	mov    DWORD PTR [rsp+0x20],0x1
   14000a434:	call   QWORD PTR [rip+0xafee]        # 0x140015428
   14000a43a:	mov    ecx,0x30
   14000a43f:	call   0x140012892
   14000a444:	mov    rbx,rax
   14000a447:	test   rax,rax
   14000a44a:	je     0x14000a46f
   14000a44c:	mov    rdx,rsi
   14000a44f:	mov    rcx,rax
   14000a452:	call   QWORD PTR [rip+0xa818]        # 0x140014c70
   14000a458:	lea    r11,[rip+0xd8b9]        # 0x140017d18
   14000a45f:	lea    rax,[rip+0xd872]        # 0x140017cd8
   14000a466:	mov    QWORD PTR [rbx],r11
   14000a469:	mov    QWORD PTR [rbx+0x10],rax
   14000a46d:	jmp    0x14000a472
   14000a46f:	mov    rbx,rbp
   14000a472:	lea    rdx,[rip+0xdeaf]        # 0x140018328
   14000a479:	lea    rcx,[rsp+0x80]
   14000a481:	mov    r8d,0xe
   14000a487:	mov    QWORD PTR [rdi+0x10],rbx
   14000a48b:	call   QWORD PTR [rip+0x9f27]        # 0x1400143b8
   14000a491:	mov    rcx,QWORD PTR [rdi+0x10]
   14000a495:	mov    rdx,rax
   14000a498:	call   QWORD PTR [rip+0x9f22]        # 0x1400143c0
   14000a49e:	lea    rcx,[rsp+0x80]
   14000a4a6:	call   QWORD PTR [rip+0xa09c]        # 0x140014548
   14000a4ac:	mov    rdx,QWORD PTR [rdi+0x10]
   14000a4b0:	mov    rcx,QWORD PTR [rdi]
   14000a4b3:	xor    r9d,r9d
   14000a4b6:	mov    DWORD PTR [rsp+0x30],ebp
   14000a4ba:	mov    DWORD PTR [rsp+0x28],0x1
   14000a4c2:	lea    r8d,[r9+0x1]
   14000a4c6:	mov    DWORD PTR [rsp+0x20],0x3
   14000a4ce:	call   QWORD PTR [rip+0xaf54]        # 0x140015428
   14000a4d4:	mov    ecx,0x30
   14000a4d9:	call   0x140012892
   14000a4de:	lea    r12,[rip+0xc653]        # 0x140016b38
   14000a4e5:	lea    r13,[rip+0xc60c]        # 0x140016af8
   14000a4ec:	mov    rbx,rax
   14000a4ef:	test   rax,rax
   14000a4f2:	je     0x14000a509
   14000a4f4:	mov    rdx,rsi
   14000a4f7:	mov    rcx,rax
   14000a4fa:	call   QWORD PTR [rip+0xa290]        # 0x140014790
   14000a500:	mov    QWORD PTR [rbx],r12
   14000a503:	mov    QWORD PTR [rbx+0x10],r13
   14000a507:	jmp    0x14000a50c
   14000a509:	mov    rbx,rbp
   14000a50c:	lea    rdx,[rip+0xc5b5]        # 0x140016ac8
   14000a513:	lea    rcx,[rsp+0x80]
   14000a51b:	mov    r8d,0xc
   14000a521:	mov    QWORD PTR [rdi+0x18],rbx
   14000a525:	call   QWORD PTR [rip+0x9e8d]        # 0x1400143b8
   14000a52b:	mov    rcx,QWORD PTR [rdi+0x18]
   14000a52f:	mov    rdx,rax
   14000a532:	call   QWORD PTR [rip+0x9e88]        # 0x1400143c0
   14000a538:	lea    rcx,[rsp+0x80]
   14000a540:	call   QWORD PTR [rip+0xa002]        # 0x140014548
   14000a546:	lea    rcx,[rsp+0x70]
   14000a54b:	mov    edx,0x1
   14000a550:	mov    DWORD PTR [rsp+0x70],0x40000
   14000a558:	call   QWORD PTR [rip+0xaea2]        # 0x140015400
   14000a55e:	lea    rcx,[rsp+0x70]
   14000a563:	xor    edx,edx
   14000a565:	call   QWORD PTR [rip+0xae9d]        # 0x140015408
   14000a56b:	lea    rcx,[rsp+0x70]
   14000a570:	xor    edx,edx
   14000a572:	call   QWORD PTR [rip+0xae98]        # 0x140015410
   14000a578:	mov    rcx,QWORD PTR [rdi+0x18]
   14000a57c:	lea    rdx,[rsp+0x80]
   14000a584:	call   QWORD PTR [rip+0xae8e]        # 0x140015418
   14000a58a:	mov    edx,DWORD PTR [rsp+0x70]
   14000a58e:	mov    ecx,DWORD PTR [rax]
   14000a590:	and    ecx,0xe0000000
   14000a596:	xor    ecx,edx
   14000a598:	and    ecx,0x20000000
   14000a59e:	xor    edx,ecx
   14000a5a0:	mov    rcx,QWORD PTR [rdi+0x18]
   14000a5a4:	mov    DWORD PTR [rsp+0x70],edx
   14000a5a8:	call   QWORD PTR [rip+0xae72]        # 0x140015420
   14000a5ae:	mov    rdx,QWORD PTR [rdi+0x18]
   14000a5b2:	mov    rcx,QWORD PTR [rdi]
   14000a5b5:	mov    r9d,0x1
   14000a5bb:	mov    DWORD PTR [rsp+0x30],ebp
   14000a5bf:	mov    r8d,r9d
   14000a5c2:	mov    DWORD PTR [rsp+0x28],0x1
   14000a5ca:	mov    DWORD PTR [rsp+0x20],0x1
   14000a5d2:	call   QWORD PTR [rip+0xae50]        # 0x140015428
   14000a5d8:	mov    ecx,0x30
   14000a5dd:	call   0x140012892
   14000a5e2:	mov    rbx,rax
   14000a5e5:	test   rax,rax
   14000a5e8:	je     0x14000a5ff
   14000a5ea:	mov    rdx,rsi
   14000a5ed:	mov    rcx,rax
   14000a5f0:	call   QWORD PTR [rip+0xa19a]        # 0x140014790
   14000a5f6:	mov    QWORD PTR [rbx],r12
   14000a5f9:	mov    QWORD PTR [rbx+0x10],r13
   14000a5fd:	jmp    0x14000a602
   14000a5ff:	mov    rbx,rbp
   14000a602:	lea    rdx,[rip+0xdd0f]        # 0x140018318
   14000a609:	lea    rcx,[rsp+0x80]
   14000a611:	mov    r8d,0xf
   14000a617:	mov    QWORD PTR [rdi+0x20],rbx
   14000a61b:	call   QWORD PTR [rip+0x9d97]        # 0x1400143b8
   14000a621:	mov    rcx,QWORD PTR [rdi+0x20]
   14000a625:	mov    rdx,rax
   14000a628:	call   QWORD PTR [rip+0x9d92]        # 0x1400143c0
   14000a62e:	lea    rcx,[rsp+0x80]
   14000a636:	call   QWORD PTR [rip+0x9f0c]        # 0x140014548
   14000a63c:	mov    rdx,QWORD PTR [rdi+0x20]
   14000a640:	mov    rcx,QWORD PTR [rdi]
   14000a643:	mov    r9d,0x1
   14000a649:	mov    DWORD PTR [rsp+0x30],ebp
   14000a64d:	mov    DWORD PTR [rsp+0x28],0x1
   14000a655:	lea    r8d,[r9+0x1]
   14000a659:	mov    DWORD PTR [rsp+0x20],0x1
   14000a661:	call   QWORD PTR [rip+0xadc1]        # 0x140015428
   14000a667:	mov    ecx,0x30
   14000a66c:	call   0x140012892
   14000a671:	lea    r12,[rip+0xbb80]        # 0x1400161f8
   14000a678:	mov    rbx,rax
   14000a67b:	test   rax,rax
   14000a67e:	je     0x14000a6a3
   14000a680:	mov    edx,0x4b
   14000a685:	mov    rcx,rax
   14000a688:	mov    DWORD PTR [rsp+0x20],0x7
   14000a690:	lea    r9d,[rdx-0x4a]
   14000a694:	lea    r8d,[rdx-0x3b]
   14000a698:	call   QWORD PTR [rip+0xad4a]        # 0x1400153e8
   14000a69e:	mov    QWORD PTR [rbx],r12
   14000a6a1:	jmp    0x14000a6a6
   14000a6a3:	mov    rbx,rbp
   14000a6a6:	mov    rcx,QWORD PTR [rdi]
   14000a6a9:	mov    r9d,0x1
   14000a6af:	mov    DWORD PTR [rsp+0x30],ebp
   14000a6b3:	lea    r8d,[r9+0x2]
   14000a6b7:	mov    rdx,rbx
   14000a6ba:	mov    DWORD PTR [rsp+0x28],0x1
   14000a6c2:	mov    QWORD PTR [rdi+0x28],rbx
   14000a6c6:	mov    DWORD PTR [rsp+0x20],0x1
   14000a6ce:	call   QWORD PTR [rip+0xad1c]        # 0x1400153f0
   14000a6d4:	mov    ecx,0x30
   14000a6d9:	call   0x140012892
   14000a6de:	mov    rbx,rax
   14000a6e1:	test   rax,rax
   14000a6e4:	je     0x14000a709
   14000a6e6:	mov    edx,0x14
   14000a6eb:	mov    rcx,rax
   14000a6ee:	mov    DWORD PTR [rsp+0x20],0x7
   14000a6f6:	lea    r9d,[rdx-0x13]
   14000a6fa:	lea    r8d,[rdx+0xb]
   14000a6fe:	call   QWORD PTR [rip+0xace4]        # 0x1400153e8
   14000a704:	mov    QWORD PTR [rbx],r12
   14000a707:	jmp    0x14000a70c
   14000a709:	mov    rbx,rbp
   14000a70c:	mov    rcx,QWORD PTR [rdi]
   14000a70f:	xor    r9d,r9d
   14000a712:	mov    DWORD PTR [rsp+0x30],ebp
   14000a716:	lea    r8d,[r9+0x4]
   14000a71a:	mov    rdx,rbx
   14000a71d:	mov    DWORD PTR [rsp+0x28],0x1
   14000a725:	mov    QWORD PTR [rdi+0x30],rbx
   14000a729:	mov    DWORD PTR [rsp+0x20],0x1
   14000a731:	call   QWORD PTR [rip+0xacb9]        # 0x1400153f0
   14000a737:	mov    rdx,rsi
   14000a73a:	mov    rcx,rdi
   14000a73d:	call   0x14000a170
   14000a742:	mov    rcx,rsi
   14000a745:	call   QWORD PTR [rip+0x9c7d]        # 0x1400143c8
   14000a74b:	mov    rbx,QWORD PTR [rsp+0x78]
   14000a750:	add    rsp,0x40
   14000a754:	pop    r13
   14000a756:	pop    r12
   14000a758:	pop    rdi
   14000a759:	pop    rsi
   14000a75a:	pop    rbp
   14000a75b:	ret    
   14000a75c:	int3   
   14000a75d:	int3   
   14000a75e:	int3   
   14000a75f:	int3   
   14000a760:	rex push rbx
   14000a762:	sub    rsp,0x30
   14000a766:	mov    rbx,rcx
   14000a769:	call   QWORD PTR [rip+0x9f71]        # 0x1400146e0
   14000a76f:	lea    r11,[rip+0xdd42]        # 0x1400184b8
   14000a776:	mov    QWORD PTR [rbx],r11
   14000a779:	lea    rax,[rip+0xdcf8]        # 0x140018478
   14000a780:	lea    r8,[rip+0xdcd1]        # 0x140018458
   14000a787:	mov    QWORD PTR [rbx+0x10],rax
   14000a78b:	mov    rax,QWORD PTR [rip+0x9d66]        # 0x1400144f8
   14000a792:	lea    rdx,[rsp+0x40]
   14000a797:	mov    QWORD PTR [rbx+0x68],rax
   14000a79b:	mov    rax,QWORD PTR [rip+0x9d56]        # 0x1400144f8
   14000a7a2:	lea    rcx,[rip+0x1efe7]        # 0x140029790
   14000a7a9:	xor    r9d,r9d
   14000a7ac:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a7b4:	mov    QWORD PTR [rbx+0x70],rax
   14000a7b8:	call   QWORD PTR [rip+0x9d9a]        # 0x140014558
   14000a7be:	lea    rdx,[rsp+0x40]
   14000a7c3:	mov    rcx,rbx
   14000a7c6:	call   QWORD PTR [rip+0x9f0c]        # 0x1400146d8
   14000a7cc:	lea    rcx,[rsp+0x40]
   14000a7d1:	call   QWORD PTR [rip+0x9d71]        # 0x140014548
   14000a7d7:	lea    r8,[rip+0xdc32]        # 0x140018410
   14000a7de:	lea    rdx,[rsp+0x40]
   14000a7e3:	lea    rcx,[rip+0x1efa6]        # 0x140029790
   14000a7ea:	xor    r9d,r9d
   14000a7ed:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a7f5:	call   QWORD PTR [rip+0x9d5d]        # 0x140014558
   14000a7fb:	lea    rdx,[rsp+0x40]
   14000a800:	mov    rcx,rbx
   14000a803:	call   QWORD PTR [rip+0x9ec7]        # 0x1400146d0
   14000a809:	lea    rcx,[rsp+0x40]
   14000a80e:	call   QWORD PTR [rip+0x9d34]        # 0x140014548
   14000a814:	lea    rcx,[rbx+0x30]
   14000a818:	mov    rdx,rbx
   14000a81b:	call   0x14000a280
   14000a820:	mov    rcx,QWORD PTR [rbx+0x40]
   14000a824:	mov    edx,0x3
   14000a829:	call   QWORD PTR [rip+0xa601]        # 0x140014e30
   14000a82f:	mov    rcx,QWORD PTR [rbx+0x40]
   14000a833:	mov    rdx,rbx
   14000a836:	call   QWORD PTR [rip+0x9c44]        # 0x140014480
   14000a83c:	mov    rdx,QWORD PTR [rbx+0x48]
   14000a840:	lea    rax,[rip+0xdbb1]        # 0x1400183f8
   14000a847:	lea    r8,[rip+0xbb5a]        # 0x1400163a8
   14000a84e:	lea    rcx,[rsp+0x40]
   14000a853:	mov    r9,rbx
   14000a856:	mov    DWORD PTR [rsp+0x28],0x0
   14000a85e:	mov    QWORD PTR [rsp+0x20],rax
   14000a863:	call   QWORD PTR [rip+0x9bff]        # 0x140014468
   14000a869:	lea    rcx,[rsp+0x40]
   14000a86e:	call   QWORD PTR [rip+0x9bfc]        # 0x140014470
   14000a874:	mov    rdx,QWORD PTR [rbx+0x50]
   14000a878:	lea    rax,[rip+0xdb61]        # 0x1400183e0
   14000a87f:	lea    r8,[rip+0xbb22]        # 0x1400163a8
   14000a886:	lea    rcx,[rsp+0x40]
   14000a88b:	mov    r9,rbx
   14000a88e:	mov    DWORD PTR [rsp+0x28],0x0
   14000a896:	mov    QWORD PTR [rsp+0x20],rax
   14000a89b:	call   QWORD PTR [rip+0x9bc7]        # 0x140014468
   14000a8a1:	lea    rcx,[rsp+0x40]
   14000a8a6:	call   QWORD PTR [rip+0x9bc4]        # 0x140014470
   14000a8ac:	lea    r8,[rip+0xda9d]        # 0x140018350
   14000a8b3:	lea    rdx,[rsp+0x40]
   14000a8b8:	lea    rcx,[rip+0x1eed1]        # 0x140029790
   14000a8bf:	xor    r9d,r9d
   14000a8c2:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000a8ca:	call   QWORD PTR [rip+0x9c88]        # 0x140014558
   14000a8d0:	mov    rcx,QWORD PTR [rbx+0x38]
   14000a8d4:	lea    rdx,[rsp+0x40]
   14000a8d9:	call   QWORD PTR [rip+0xab81]        # 0x140015460
   14000a8df:	lea    rcx,[rsp+0x40]
   14000a8e4:	call   QWORD PTR [rip+0x9c5e]        # 0x140014548
   14000a8ea:	mov    rax,rbx
   14000a8ed:	add    rsp,0x30
   14000a8f1:	pop    rbx
   14000a8f2:	ret    
   14000a8f3:	int3   
   14000a8f4:	int3   
   14000a8f5:	int3   
   14000a8f6:	int3   
   14000a8f7:	int3   
   14000a8f8:	int3   
   14000a8f9:	int3   
   14000a8fa:	int3   
   14000a8fb:	int3   
   14000a8fc:	int3   
   14000a8fd:	int3   
   14000a8fe:	int3   
   14000a8ff:	int3   
   14000a900:	sub    rcx,0x10
   14000a904:	jmp    0x14000a960
   14000a909:	int3   
   14000a90a:	int3   
   14000a90b:	int3   
   14000a90c:	int3   
   14000a90d:	int3   
   14000a90e:	int3   
   14000a90f:	int3   
   14000a910:	rex push rbx
   14000a912:	sub    rsp,0x20
   14000a916:	mov    rbx,rdx
   14000a919:	lea    rdx,[rcx+0x70]
   14000a91d:	mov    rcx,rbx
   14000a920:	call   0x140001980
   14000a925:	mov    rax,rbx
   14000a928:	add    rsp,0x20
   14000a92c:	pop    rbx
   14000a92d:	ret    
   14000a92e:	int3   
   14000a92f:	int3   
   14000a930:	rex push rbx
   14000a932:	sub    rsp,0x20
   14000a936:	mov    rbx,rcx
   14000a939:	mov    rcx,QWORD PTR [rcx+0x40]
   14000a93d:	call   QWORD PTR [rip+0xa4f5]        # 0x140014e38
   14000a943:	lea    rdx,[rbx+0x68]
   14000a947:	lea    rcx,[rbx+0x70]
   14000a94b:	add    rsp,0x20
   14000a94f:	pop    rbx
   14000a950:	jmp    0x140001ab0
   14000a955:	int3   
   14000a956:	int3   
   14000a957:	int3   
   14000a958:	int3   
   14000a959:	int3   
   14000a95a:	int3   
   14000a95b:	int3   
   14000a95c:	int3   
   14000a95d:	int3   
   14000a95e:	int3   
   14000a95f:	int3   
   14000a960:	mov    QWORD PTR [rsp+0x8],rbx
   14000a965:	push   rdi
   14000a966:	sub    rsp,0x20
   14000a96a:	mov    rdi,rcx
   14000a96d:	add    rcx,0x70
   14000a971:	mov    ebx,edx
   14000a973:	call   0x140001a30
   14000a978:	lea    rcx,[rdi+0x68]
   14000a97c:	call   0x140001a30
   14000a981:	mov    rcx,rdi
   14000a984:	call   QWORD PTR [rip+0x9da6]        # 0x140014730
   14000a98a:	test   bl,0x1
   14000a98d:	je     0x14000a997
   14000a98f:	mov    rcx,rdi
   14000a992:	call   0x140012898
   14000a997:	mov    rax,rdi
   14000a99a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a99f:	add    rsp,0x20
   14000a9a3:	pop    rdi
   14000a9a4:	ret    
   14000a9a5:	int3   
   14000a9a6:	int3   
   14000a9a7:	int3   
   14000a9a8:	int3   
   14000a9a9:	int3   
   14000a9aa:	int3   
   14000a9ab:	int3   
   14000a9ac:	int3   
   14000a9ad:	int3   
   14000a9ae:	int3   
   14000a9af:	int3   
   14000a9b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a9b5:	push   rdi
   14000a9b6:	sub    rsp,0x20
   14000a9ba:	mov    rbx,rcx
   14000a9bd:	add    rcx,0x68
   14000a9c1:	mov    rdi,rdx
   14000a9c4:	call   0x140001ab0
   14000a9c9:	mov    rcx,QWORD PTR [rbx+0x40]
   14000a9cd:	call   QWORD PTR [rip+0xa465]        # 0x140014e38
   14000a9d3:	mov    rbx,QWORD PTR [rbx+0x40]
   14000a9d7:	mov    rcx,rbx
   14000a9da:	call   QWORD PTR [rip+0xa278]        # 0x140014c58
   14000a9e0:	mov    r8,rdi
   14000a9e3:	mov    rcx,rbx
   14000a9e6:	mov    edx,eax
   14000a9e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a9ed:	add    rsp,0x20
   14000a9f1:	pop    rdi
   14000a9f2:	rex.W jmp QWORD PTR [rip+0xa447]        # 0x140014e40
   14000a9f9:	int3   
   14000a9fa:	int3   
   14000a9fb:	int3   
   14000a9fc:	int3   
   14000a9fd:	int3   
   14000a9fe:	int3   
   14000a9ff:	int3   
   14000aa00:	rex push rbx
   14000aa02:	push   rbp
   14000aa03:	push   rsi
   14000aa04:	push   rdi
   14000aa05:	push   r12
   14000aa07:	push   r13
   14000aa09:	push   r14
   14000aa0b:	sub    rsp,0x70
   14000aa0f:	mov    r13,rcx
   14000aa12:	xor    edi,edi
   14000aa14:	lea    rdx,[rsp+0xb0]
   14000aa1c:	mov    DWORD PTR [rsp+0xb0],edi
   14000aa23:	mov    rcx,QWORD PTR [rcx+0x40]
   14000aa27:	call   QWORD PTR [rip+0xa41b]        # 0x140014e48
   14000aa2d:	mov    rcx,QWORD PTR [r13+0x40]
   14000aa31:	mov    rdx,QWORD PTR [rax]
   14000aa34:	mov    ebx,DWORD PTR [rdx+0xc]
   14000aa37:	sub    ebx,DWORD PTR [rdx+0x8]
   14000aa3a:	call   QWORD PTR [rip+0xa228]        # 0x140014c68
   14000aa40:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000aa48:	mov    r14d,eax
   14000aa4b:	mov    eax,0x1
   14000aa50:	sub    eax,ebx
   14000aa52:	add    r14d,eax
   14000aa55:	mov    eax,DWORD PTR [rcx]
   14000aa57:	test   eax,eax
   14000aa59:	je     0x14000aa73
   14000aa5b:	cmp    eax,0xffffffff
   14000aa5e:	je     0x14000aa79
   14000aa60:	lock add DWORD PTR [rcx],0xffffffff
   14000aa64:	setne  al
   14000aa67:	test   al,al
   14000aa69:	jne    0x14000aa79
   14000aa6b:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000aa73:	call   QWORD PTR [rip+0x9a5f]        # 0x1400144d8
   14000aa79:	mov    rcx,QWORD PTR [r13+0x40]
   14000aa7d:	lea    rdx,[rsp+0xb8]
   14000aa85:	call   QWORD PTR [rip+0xa3bd]        # 0x140014e48
   14000aa8b:	mov    rbx,rax
   14000aa8e:	mov    rdx,QWORD PTR [rax]
   14000aa91:	mov    QWORD PTR [rsp+0x48],rdx
   14000aa96:	mov    ecx,DWORD PTR [rdx]
   14000aa98:	test   ecx,ecx
   14000aa9a:	je     0x14000aaa7
   14000aa9c:	cmp    ecx,0xffffffff
   14000aa9f:	je     0x14000aafa
   14000aaa1:	lock add DWORD PTR [rdx],0x1
   14000aaa5:	jmp    0x14000aaf5
   14000aaa7:	mov    edx,DWORD PTR [rdx+0x4]
   14000aaaa:	lea    rcx,[rsp+0x48]
   14000aaaf:	call   QWORD PTR [rip+0x9a03]        # 0x1400144b8
   14000aab5:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aaba:	mov    rcx,QWORD PTR [rbx]
   14000aabd:	movsxd rax,DWORD PTR [rdx+0xc]
   14000aac1:	lea    r8,[rdx+rax*8+0x10]
   14000aac6:	movsxd rax,DWORD PTR [rcx+0x8]
   14000aaca:	lea    r9,[rcx+rax*8+0x10]
   14000aacf:	movsxd rax,DWORD PTR [rdx+0x8]
   14000aad3:	lea    rcx,[rdx+rax*8+0x10]
   14000aad8:	cmp    r9,rcx
   14000aadb:	je     0x14000aafa
   14000aadd:	sub    r8,rcx
   14000aae0:	sar    r8,0x3
   14000aae4:	test   r8,r8
   14000aae7:	jle    0x14000aafa
   14000aae9:	shl    r8,0x3
   14000aaed:	mov    rdx,r9
   14000aaf0:	call   0x14001290a
   14000aaf5:	mov    rdx,QWORD PTR [rsp+0x48]
   14000aafa:	mov    DWORD PTR [rsp+0x50],edi
   14000aafe:	movsxd rax,DWORD PTR [rdx+0x8]
   14000ab02:	lea    rcx,[rdx+rax*8+0x10]
   14000ab07:	mov    QWORD PTR [rsp+0x58],rcx
   14000ab0c:	movsxd rax,DWORD PTR [rdx+0xc]
   14000ab10:	lea    rcx,[rdx+rax*8+0x10]
   14000ab15:	mov    QWORD PTR [rsp+0x60],rcx
   14000ab1a:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000ab22:	mov    eax,DWORD PTR [rcx]
   14000ab24:	test   eax,eax
   14000ab26:	je     0x14000ab40
   14000ab28:	cmp    eax,0xffffffff
   14000ab2b:	je     0x14000ab50
   14000ab2d:	lock add DWORD PTR [rcx],0xffffffff
   14000ab31:	setne  al
   14000ab34:	test   al,al
   14000ab36:	jne    0x14000ab50
   14000ab38:	mov    rcx,QWORD PTR [rsp+0xb8]
   14000ab40:	call   QWORD PTR [rip+0x9992]        # 0x1400144d8
   14000ab46:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ab50:	mov    eax,DWORD PTR [rsp+0x50]
   14000ab54:	inc    DWORD PTR [rsp+0x50]
   14000ab58:	test   eax,eax
   14000ab5a:	jne    0x14000ab6c
   14000ab5c:	mov    rax,QWORD PTR [rsp+0x60]
   14000ab61:	cmp    QWORD PTR [rsp+0x58],rax
   14000ab66:	je     0x14000ab6c
   14000ab68:	mov    bl,0x1
   14000ab6a:	jmp    0x14000ab6e
   14000ab6c:	xor    bl,bl
   14000ab6e:	test   dil,0x2
   14000ab72:	je     0x14000aba3
   14000ab74:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000ab7c:	and    edi,0xfffffffd
   14000ab7f:	mov    eax,DWORD PTR [rcx]
   14000ab81:	test   eax,eax
   14000ab83:	je     0x14000ab9d
   14000ab85:	cmp    eax,0xffffffff
   14000ab88:	je     0x14000aba3
   14000ab8a:	lock add DWORD PTR [rcx],0xffffffff
   14000ab8e:	setne  al
   14000ab91:	test   al,al
   14000ab93:	jne    0x14000aba3
   14000ab95:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000ab9d:	call   QWORD PTR [rip+0x9935]        # 0x1400144d8
   14000aba3:	test   bl,bl
   14000aba5:	je     0x14000ad31
   14000abab:	mov    rax,QWORD PTR [rsp+0x58]
   14000abb0:	mov    rsi,QWORD PTR [rax]
   14000abb3:	test   dil,0x4
   14000abb7:	je     0x14000abf0
   14000abb9:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000abc1:	and    edi,0xfffffffb
   14000abc4:	mov    eax,DWORD PTR [rcx]
   14000abc6:	test   eax,eax
   14000abc8:	je     0x14000abe2
   14000abca:	cmp    eax,0xffffffff
   14000abcd:	je     0x14000abf0
   14000abcf:	lock add DWORD PTR [rcx],0xffffffff
   14000abd3:	setne  al
   14000abd6:	test   al,al
   14000abd8:	jne    0x14000abf0
   14000abda:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000abe2:	call   QWORD PTR [rip+0x98f0]        # 0x1400144d8
   14000abe8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000abf0:	mov    ebx,DWORD PTR [rsp+0x50]
   14000abf4:	test   dil,0x10
   14000abf8:	je     0x14000ac23
   14000abfa:	mov    rax,QWORD PTR [rsp+0x20]
   14000abff:	and    edi,0xffffffef
   14000ac02:	mov    ecx,DWORD PTR [rax]
   14000ac04:	test   ecx,ecx
   14000ac06:	je     0x14000ac18
   14000ac08:	cmp    ecx,0xffffffff
   14000ac0b:	je     0x14000ac23
   14000ac0d:	lock add DWORD PTR [rax],0xffffffff
   14000ac11:	setne  al
   14000ac14:	test   al,al
   14000ac16:	jne    0x14000ac23
   14000ac18:	mov    rcx,QWORD PTR [rsp+0x20]
   14000ac1d:	call   QWORD PTR [rip+0x98b5]        # 0x1400144d8
   14000ac23:	test   ebx,ebx
   14000ac25:	je     0x14000aced
   14000ac2b:	lea    rdx,[rsp+0x30]
   14000ac30:	mov    rcx,rsi
   14000ac33:	call   QWORD PTR [rip+0xa1df]        # 0x140014e18
   14000ac39:	mov    rdx,QWORD PTR [r13+0x70]
   14000ac3d:	mov    ecx,DWORD PTR [rdx]
   14000ac3f:	mov    rbp,rax
   14000ac42:	cmp    ecx,0x1
   14000ac45:	je     0x14000ac72
   14000ac47:	test   ecx,ecx
   14000ac49:	je     0x14000ac72
   14000ac4b:	lea    rcx,[r13+0x70]
   14000ac4f:	mov    edx,0x7fffffff
   14000ac54:	mov    r8d,0x1
   14000ac5a:	call   0x140001c10
   14000ac5f:	test   rax,rax
   14000ac62:	je     0x14000ac92
   14000ac64:	mov    rdx,rbp
   14000ac67:	mov    rcx,rax
   14000ac6a:	call   QWORD PTR [rip+0x98f8]        # 0x140014568
   14000ac70:	jmp    0x14000ac92
   14000ac72:	lea    rcx,[rsp+0x28]
   14000ac77:	mov    rdx,rax
   14000ac7a:	call   QWORD PTR [rip+0x98e8]        # 0x140014568
   14000ac80:	lea    rcx,[r13+0x70]
   14000ac84:	call   QWORD PTR [rip+0x9816]        # 0x1400144a0
   14000ac8a:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ac8f:	mov    QWORD PTR [rax],rcx
   14000ac92:	lea    rcx,[rsp+0x30]
   14000ac97:	call   QWORD PTR [rip+0x98ab]        # 0x140014548
   14000ac9d:	test   rsi,rsi
   14000aca0:	je     0x14000acaf
   14000aca2:	mov    rax,QWORD PTR [rsi]
   14000aca5:	mov    edx,0x1
   14000acaa:	mov    rcx,rsi
   14000acad:	call   QWORD PTR [rax]
   14000acaf:	dec    DWORD PTR [rsp+0x50]
   14000acb3:	test   dil,0x8
   14000acb7:	je     0x14000abf0
   14000acbd:	mov    rax,QWORD PTR [rsp+0x38]
   14000acc2:	and    edi,0xfffffff7
   14000acc5:	mov    ecx,DWORD PTR [rax]
   14000acc7:	test   ecx,ecx
   14000acc9:	je     0x14000ace3
   14000accb:	cmp    ecx,0xffffffff
   14000acce:	je     0x14000abf0
   14000acd4:	lock add DWORD PTR [rax],0xffffffff
   14000acd8:	setne  al
   14000acdb:	test   al,al
   14000acdd:	jne    0x14000abf0
   14000ace3:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ace8:	jmp    0x14000abe2
   14000aced:	add    QWORD PTR [rsp+0x58],0x8
   14000acf3:	test   dil,0x1
   14000acf7:	je     0x14000ab50
   14000acfd:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ad02:	and    edi,0xfffffffe
   14000ad05:	mov    eax,DWORD PTR [rcx]
   14000ad07:	test   eax,eax
   14000ad09:	je     0x14000ab40
   14000ad0f:	cmp    eax,0xffffffff
   14000ad12:	je     0x14000ab50
   14000ad18:	lock add DWORD PTR [rcx],0xffffffff
   14000ad1c:	setne  al
   14000ad1f:	test   al,al
   14000ad21:	jne    0x14000ab50
   14000ad27:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ad2c:	jmp    0x14000ab40
   14000ad31:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ad36:	mov    eax,DWORD PTR [rcx]
   14000ad38:	test   eax,eax
   14000ad3a:	je     0x14000ad51
   14000ad3c:	cmp    eax,0xffffffff
   14000ad3f:	je     0x14000ad57
   14000ad41:	lock add DWORD PTR [rcx],0xffffffff
   14000ad45:	setne  al
   14000ad48:	test   al,al
   14000ad4a:	jne    0x14000ad57
   14000ad4c:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ad51:	call   QWORD PTR [rip+0x9781]        # 0x1400144d8
   14000ad57:	mov    rcx,QWORD PTR [r13+0x40]
   14000ad5b:	call   QWORD PTR [rip+0x9ef7]        # 0x140014c58
   14000ad61:	cmp    eax,r14d
   14000ad64:	jle    0x14000ad70
   14000ad66:	test   r14d,r14d
   14000ad69:	js     0x14000ad70
   14000ad6b:	mov    edx,r14d
   14000ad6e:	jmp    0x14000ad7c
   14000ad70:	mov    rcx,QWORD PTR [r13+0x40]
   14000ad74:	call   QWORD PTR [rip+0x9ede]        # 0x140014c58
   14000ad7a:	mov    edx,eax
   14000ad7c:	mov    rcx,QWORD PTR [r13+0x40]
   14000ad80:	call   QWORD PTR [rip+0x9ec2]        # 0x140014c48
   14000ad86:	add    rsp,0x70
   14000ad8a:	pop    r14
   14000ad8c:	pop    r13
   14000ad8e:	pop    r12
   14000ad90:	pop    rdi
   14000ad91:	pop    rsi
   14000ad92:	pop    rbp
   14000ad93:	pop    rbx
   14000ad94:	ret    
   14000ad95:	int3   
   14000ad96:	int3   
   14000ad97:	int3   
   14000ad98:	int3   
   14000ad99:	int3   
   14000ad9a:	int3   
   14000ad9b:	int3   
   14000ad9c:	int3   
   14000ad9d:	int3   
   14000ad9e:	int3   
   14000ad9f:	int3   
   14000ada0:	sub    rsp,0x28
   14000ada4:	cmp    rdx,QWORD PTR [rcx+0x40]
   14000ada8:	jne    0x14000adc8
   14000adaa:	cmp    WORD PTR [r8+0x10],0x6
   14000adb0:	jne    0x14000adc8
   14000adb2:	cmp    DWORD PTR [r8+0x28],0x1000007
   14000adba:	jne    0x14000adc8
   14000adbc:	call   0x14000aa00
   14000adc1:	mov    al,0x1
   14000adc3:	add    rsp,0x28
   14000adc7:	ret    
   14000adc8:	add    rsp,0x28
   14000adcc:	rex.W jmp QWORD PTR [rip+0x95d5]        # 0x1400143a8
   14000add3:	int3   
   14000add4:	int3   
   14000add5:	int3   
   14000add6:	int3   
   14000add7:	int3   
   14000add8:	int3   
   14000add9:	int3   
   14000adda:	int3   
   14000addb:	int3   
   14000addc:	int3   
   14000addd:	int3   
   14000adde:	int3   
   14000addf:	int3   
   14000ade0:	mov    QWORD PTR [rsp+0x10],rbx
   14000ade5:	push   rdi
   14000ade6:	sub    rsp,0x30
   14000adea:	mov    rbx,rdx
   14000aded:	mov    rdi,rcx
   14000adf0:	lea    r8,[rip+0xad65]        # 0x140015b5c
   14000adf7:	lea    rdx,[rip+0xd87a]        # 0x140018678
   14000adfe:	lea    rcx,[rsp+0x40]
   14000ae03:	xor    r9d,r9d
   14000ae06:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ae0e:	call   QWORD PTR [rip+0x95bc]        # 0x1400143d0
   14000ae14:	mov    rcx,rbx
   14000ae17:	mov    rdx,rax
   14000ae1a:	call   QWORD PTR [rip+0xa7f0]        # 0x140015610
   14000ae20:	lea    rcx,[rsp+0x40]
   14000ae25:	call   QWORD PTR [rip+0x971d]        # 0x140014548
   14000ae2b:	lea    r8,[rip+0xd82e]        # 0x140018660
   14000ae32:	lea    rdx,[rip+0xd83f]        # 0x140018678
   14000ae39:	lea    rcx,[rsp+0x40]
   14000ae3e:	xor    r9d,r9d
   14000ae41:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ae49:	call   QWORD PTR [rip+0x9581]        # 0x1400143d0
   14000ae4f:	mov    rcx,QWORD PTR [rdi+0x10]
   14000ae53:	mov    rdx,rax
   14000ae56:	call   QWORD PTR [rip+0xa604]        # 0x140015460
   14000ae5c:	lea    rcx,[rsp+0x40]
   14000ae61:	call   QWORD PTR [rip+0x96e1]        # 0x140014548
   14000ae67:	lea    r8,[rip+0xd7da]        # 0x140018648
   14000ae6e:	lea    rdx,[rip+0xd803]        # 0x140018678
   14000ae75:	lea    rcx,[rsp+0x40]
   14000ae7a:	xor    r9d,r9d
   14000ae7d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ae85:	call   QWORD PTR [rip+0x9545]        # 0x1400143d0
   14000ae8b:	mov    rcx,QWORD PTR [rdi+0x20]
   14000ae8f:	mov    rdx,rax
   14000ae92:	call   QWORD PTR [rip+0xa5c8]        # 0x140015460
   14000ae98:	lea    rcx,[rsp+0x40]
   14000ae9d:	call   QWORD PTR [rip+0x96a5]        # 0x140014548
   14000aea3:	mov    rbx,QWORD PTR [rsp+0x48]
   14000aea8:	add    rsp,0x30
   14000aeac:	pop    rdi
   14000aead:	ret    
   14000aeae:	int3   
   14000aeaf:	int3   
   14000aeb0:	add    rcx,0x68
   14000aeb4:	rex.W jmp QWORD PTR [rip+0x9495]        # 0x140014350
   14000aebb:	int3   
   14000aebc:	int3   
   14000aebd:	int3   
   14000aebe:	int3   
   14000aebf:	int3   
   14000aec0:	mov    QWORD PTR [rsp+0x8],rbx
   14000aec5:	push   rdi
   14000aec6:	sub    rsp,0x20
   14000aeca:	mov    rdi,rcx
   14000aecd:	mov    rcx,QWORD PTR [rcx+0x58]
   14000aed1:	movzx  ebx,dl
   14000aed4:	call   QWORD PTR [rip+0x9c9e]        # 0x140014b78
   14000aeda:	mov    rcx,QWORD PTR [rdi+0x50]
   14000aede:	movzx  edx,bl
   14000aee1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aee6:	add    rsp,0x20
   14000aeea:	pop    rdi
   14000aeeb:	rex.W jmp QWORD PTR [rip+0x9c86]        # 0x140014b78
   14000aef2:	int3   
   14000aef3:	int3   
   14000aef4:	int3   
   14000aef5:	int3   
   14000aef6:	int3   
   14000aef7:	int3   
   14000aef8:	int3   
   14000aef9:	int3   
   14000aefa:	int3   
   14000aefb:	int3   
   14000aefc:	int3   
   14000aefd:	int3   
   14000aefe:	int3   
   14000aeff:	int3   
   14000af00:	mov    QWORD PTR [rsp+0x18],rbx
   14000af05:	push   rdi
   14000af06:	sub    rsp,0x20
   14000af0a:	mov    rdi,rcx
   14000af0d:	mov    DWORD PTR [rsp+0x30],0x0
   14000af15:	mov    rcx,QWORD PTR [rcx+0x48]
   14000af19:	lea    rdx,[rsp+0x38]
   14000af1e:	mov    ebx,0x1
   14000af23:	call   QWORD PTR [rip+0x9827]        # 0x140014750
   14000af29:	mov    rdx,QWORD PTR [rax]
   14000af2c:	cmp    DWORD PTR [rdx+0x4],0x0
   14000af30:	je     0x14000af54
   14000af32:	mov    rcx,QWORD PTR [rdi+0x58]
   14000af36:	lea    rdx,[rsp+0x30]
   14000af3b:	mov    ebx,0x3
   14000af40:	call   QWORD PTR [rip+0x980a]        # 0x140014750
   14000af46:	mov    rcx,QWORD PTR [rax]
   14000af49:	cmp    DWORD PTR [rcx+0x4],0x0
   14000af4d:	je     0x14000af54
   14000af4f:	xor    dil,dil
   14000af52:	jmp    0x14000af57
   14000af54:	mov    dil,0x1
   14000af57:	test   bl,0x2
   14000af5a:	je     0x14000af6a
   14000af5c:	lea    rcx,[rsp+0x30]
   14000af61:	and    ebx,0xfffffffd
   14000af64:	call   QWORD PTR [rip+0x95de]        # 0x140014548
   14000af6a:	test   bl,0x1
   14000af6d:	je     0x14000af7a
   14000af6f:	lea    rcx,[rsp+0x38]
   14000af74:	call   QWORD PTR [rip+0x95ce]        # 0x140014548
   14000af7a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000af7f:	test   dil,dil
   14000af82:	sete   al
   14000af85:	add    rsp,0x20
   14000af89:	pop    rdi
   14000af8a:	ret    
   14000af8b:	int3   
   14000af8c:	int3   
   14000af8d:	int3   
   14000af8e:	int3   
   14000af8f:	int3   
   14000af90:	mov    QWORD PTR [rsp+0x18],rbx
   14000af95:	push   rbp
   14000af96:	push   rsi
   14000af97:	push   r12
   14000af99:	sub    rsp,0x70
   14000af9d:	mov    rbp,rcx
   14000afa0:	lea    rcx,[rsp+0x90]
   14000afa8:	mov    r12,r8
   14000afab:	mov    rsi,rdx
   14000afae:	call   QWORD PTR [rip+0x9444]        # 0x1400143f8
   14000afb4:	lea    rdx,[rbp+0x68]
   14000afb8:	movzx  ebx,WORD PTR [rax]
   14000afbb:	lea    rcx,[rsp+0x40]
   14000afc0:	call   QWORD PTR [rip+0x95a2]        # 0x140014568
   14000afc6:	lea    rcx,[rsp+0x40]
   14000afcb:	movzx  edx,bx
   14000afce:	call   QWORD PTR [rip+0x958c]        # 0x140014560
   14000afd4:	lea    rdx,[rsp+0x40]
   14000afd9:	lea    rcx,[rsp+0xa8]
   14000afe1:	call   QWORD PTR [rip+0x9581]        # 0x140014568
   14000afe7:	lea    rcx,[rsp+0xa8]
   14000afef:	mov    rdx,rsi
   14000aff2:	call   QWORD PTR [rip+0x9578]        # 0x140014570
   14000aff8:	lea    rdx,[rsp+0xa8]
   14000b000:	lea    rcx,[rsp+0x60]
   14000b005:	call   QWORD PTR [rip+0x9355]        # 0x140014360
   14000b00b:	lea    rcx,[rsp+0xa8]
   14000b013:	call   QWORD PTR [rip+0x952f]        # 0x140014548
   14000b019:	lea    rcx,[rsp+0x40]
   14000b01e:	call   QWORD PTR [rip+0x9524]        # 0x140014548
   14000b024:	lea    rcx,[rsp+0x60]
   14000b029:	call   QWORD PTR [rip+0x9339]        # 0x140014368
   14000b02f:	test   al,al
   14000b031:	jne    0x14000b051
   14000b033:	lea    rcx,[rsp+0x60]
   14000b038:	call   QWORD PTR [rip+0x9362]        # 0x1400143a0
   14000b03e:	mov    al,0x1
   14000b040:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000b048:	add    rsp,0x70
   14000b04c:	pop    r12
   14000b04e:	pop    rsi
   14000b04f:	pop    rbp
   14000b050:	ret    
   14000b051:	lea    r8,[rip+0xd678]        # 0x1400186d0
   14000b058:	lea    rdx,[rsp+0x48]
   14000b05d:	lea    rcx,[rip+0x1e764]        # 0x1400297c8
   14000b064:	xor    r9d,r9d
   14000b067:	mov    QWORD PTR [rsp+0x98],rdi
   14000b06f:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b077:	call   QWORD PTR [rip+0x94db]        # 0x140014558
   14000b07d:	lea    r8,[rip+0xb9c4]        # 0x140016a48
   14000b084:	lea    rdx,[rsp+0x40]
   14000b089:	lea    rcx,[rip+0x1e738]        # 0x1400297c8
   14000b090:	xor    r9d,r9d
   14000b093:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b09b:	call   QWORD PTR [rip+0x94b7]        # 0x140014558
   14000b0a1:	lea    r8,[rip+0xd5e8]        # 0x140018690
   14000b0a8:	lea    rdx,[rsp+0xa8]
   14000b0b0:	lea    rcx,[rip+0x1e711]        # 0x1400297c8
   14000b0b7:	xor    r9d,r9d
   14000b0ba:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b0c2:	call   QWORD PTR [rip+0x9490]        # 0x140014558
   14000b0c8:	lea    rcx,[rsp+0x90]
   14000b0d0:	mov    dl,0x20
   14000b0d2:	call   QWORD PTR [rip+0x9340]        # 0x140014418
   14000b0d8:	lea    rcx,[rsp+0x58]
   14000b0dd:	mov    rbx,rax
   14000b0e0:	call   QWORD PTR [rip+0x930a]        # 0x1400143f0
   14000b0e6:	movzx  ecx,WORD PTR [rbx]
   14000b0e9:	mov    WORD PTR [rsp+0x20],cx
   14000b0ee:	lea    rdx,[rsp+0x50]
   14000b0f3:	lea    rcx,[rsp+0xa8]
   14000b0fb:	xor    r9d,r9d
   14000b0fe:	mov    r8,rsi
   14000b101:	mov    rdi,rax
   14000b104:	call   QWORD PTR [rip+0x92d6]        # 0x1400143e0
   14000b10a:	mov    DWORD PTR [rsp+0x38],0xffffffff
   14000b112:	mov    DWORD PTR [rsp+0x30],0x0
   14000b11a:	mov    r8,rax
   14000b11d:	lea    rax,[rsp+0x48]
   14000b122:	lea    r9,[rsp+0x40]
   14000b127:	mov    rdx,r12
   14000b12a:	mov    rcx,rbp
   14000b12d:	mov    QWORD PTR [rsp+0x28],rdi
   14000b132:	mov    QWORD PTR [rsp+0x20],rax
   14000b137:	call   QWORD PTR [rip+0x9d13]        # 0x140014e50
   14000b13d:	lea    rcx,[rsp+0x50]
   14000b142:	test   eax,eax
   14000b144:	sete   bl
   14000b147:	call   QWORD PTR [rip+0x93fb]        # 0x140014548
   14000b14d:	lea    rcx,[rsp+0xa8]
   14000b155:	call   QWORD PTR [rip+0x93ed]        # 0x140014548
   14000b15b:	lea    rcx,[rsp+0x40]
   14000b160:	call   QWORD PTR [rip+0x93e2]        # 0x140014548
   14000b166:	lea    rcx,[rsp+0x48]
   14000b16b:	call   QWORD PTR [rip+0x93d7]        # 0x140014548
   14000b171:	lea    rcx,[rsp+0x58]
   14000b176:	call   QWORD PTR [rip+0x93cc]        # 0x140014548
   14000b17c:	mov    rdi,QWORD PTR [rsp+0x98]
   14000b184:	test   bl,bl
   14000b186:	je     0x14000b1b4
   14000b188:	lea    rcx,[rsp+0x60]
   14000b18d:	call   QWORD PTR [rip+0x9175]        # 0x140014308
   14000b193:	lea    rcx,[rsp+0x60]
   14000b198:	movzx  ebx,al
   14000b19b:	call   QWORD PTR [rip+0x91ff]        # 0x1400143a0
   14000b1a1:	mov    al,bl
   14000b1a3:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000b1ab:	add    rsp,0x70
   14000b1af:	pop    r12
   14000b1b1:	pop    rsi
   14000b1b2:	pop    rbp
   14000b1b3:	ret    
   14000b1b4:	lea    rcx,[rsp+0x60]
   14000b1b9:	call   QWORD PTR [rip+0x91e1]        # 0x1400143a0
   14000b1bf:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000b1c7:	xor    al,al
   14000b1c9:	add    rsp,0x70
   14000b1cd:	pop    r12
   14000b1cf:	pop    rsi
   14000b1d0:	pop    rbp
   14000b1d1:	ret    
   14000b1d2:	int3   
   14000b1d3:	int3   
   14000b1d4:	int3   
   14000b1d5:	int3   
   14000b1d6:	int3   
   14000b1d7:	int3   
   14000b1d8:	int3   
   14000b1d9:	int3   
   14000b1da:	int3   
   14000b1db:	int3   
   14000b1dc:	int3   
   14000b1dd:	int3   
   14000b1de:	int3   
   14000b1df:	int3   
   14000b1e0:	mov    QWORD PTR [rsp+0x10],rbx
   14000b1e5:	push   rbp
   14000b1e6:	push   rsi
   14000b1e7:	push   rdi
   14000b1e8:	push   r12
   14000b1ea:	push   r13
   14000b1ec:	push   r14
   14000b1ee:	push   r15
   14000b1f0:	sub    rsp,0x40
   14000b1f4:	mov    rsi,rdx
   14000b1f7:	mov    rdi,rcx
   14000b1fa:	lea    rdx,[rsp+0x98]
   14000b202:	mov    rcx,rsi
   14000b205:	call   QWORD PTR [rip+0x92fd]        # 0x140014508
   14000b20b:	lea    rcx,[rsp+0x98]
   14000b213:	mov    r8,QWORD PTR [rax]
   14000b216:	cmp    DWORD PTR [r8+0x4],0x0
   14000b21b:	sete   bl
   14000b21e:	call   QWORD PTR [rip+0x9324]        # 0x140014548
   14000b224:	test   bl,bl
   14000b226:	je     0x14000b25d
   14000b228:	lea    rdx,[rip+0xd449]        # 0x140018678
   14000b22f:	lea    rcx,[rsp+0x98]
   14000b237:	mov    r8d,0xa
   14000b23d:	call   QWORD PTR [rip+0x9175]        # 0x1400143b8
   14000b243:	mov    rcx,rsi
   14000b246:	mov    rdx,rax
   14000b249:	call   QWORD PTR [rip+0x9171]        # 0x1400143c0
   14000b24f:	lea    rcx,[rsp+0x98]
   14000b257:	call   QWORD PTR [rip+0x92eb]        # 0x140014548
   14000b25d:	lea    rdx,[rsp+0x98]
   14000b265:	mov    rcx,rsi
   14000b268:	mov    DWORD PTR [rsp+0x98],0x1a1
   14000b273:	mov    DWORD PTR [rsp+0x9c],0xf2
   14000b27e:	call   QWORD PTR [rip+0xa154]        # 0x1400153d8
   14000b284:	mov    ecx,0x20
   14000b289:	call   0x140012892
   14000b28e:	xor    ebp,ebp
   14000b290:	mov    rbx,rax
   14000b293:	test   rax,rax
   14000b296:	je     0x14000b2bb
   14000b298:	mov    rdx,rsi
   14000b29b:	mov    rcx,rax
   14000b29e:	call   QWORD PTR [rip+0xa13c]        # 0x1400153e0
   14000b2a4:	lea    r11,[rip+0xb07d]        # 0x140016328
   14000b2ab:	lea    rax,[rip+0xafe6]        # 0x140016298
   14000b2b2:	mov    QWORD PTR [rbx],r11
   14000b2b5:	mov    QWORD PTR [rbx+0x10],rax
   14000b2b9:	jmp    0x14000b2be
   14000b2bb:	mov    rbx,rbp
   14000b2be:	lea    rdx,[rip+0xafb3]        # 0x140016278
   14000b2c5:	lea    rcx,[rsp+0x98]
   14000b2cd:	mov    r8d,0xa
   14000b2d3:	mov    QWORD PTR [rdi],rbx
   14000b2d6:	call   QWORD PTR [rip+0x90dc]        # 0x1400143b8
   14000b2dc:	mov    rcx,QWORD PTR [rdi]
   14000b2df:	mov    rdx,rax
   14000b2e2:	call   QWORD PTR [rip+0x90d8]        # 0x1400143c0
   14000b2e8:	lea    rcx,[rsp+0x98]
   14000b2f0:	call   QWORD PTR [rip+0x9252]        # 0x140014548
   14000b2f6:	mov    ecx,0x30
   14000b2fb:	call   0x140012892
   14000b300:	lea    r14,[rip+0xaef1]        # 0x1400161f8
   14000b307:	mov    rbx,rax
   14000b30a:	test   rax,rax
   14000b30d:	je     0x14000b32d
   14000b30f:	mov    edx,0x14
   14000b314:	mov    rcx,rax
   14000b317:	mov    DWORD PTR [rsp+0x20],ebp
   14000b31b:	lea    r9d,[rdx-0x13]
   14000b31f:	mov    r8d,edx
   14000b322:	call   QWORD PTR [rip+0xa0c0]        # 0x1400153e8
   14000b328:	mov    QWORD PTR [rbx],r14
   14000b32b:	jmp    0x14000b330
   14000b32d:	mov    rbx,rbp
   14000b330:	mov    rcx,QWORD PTR [rdi]
   14000b333:	mov    DWORD PTR [rsp+0x30],ebp
   14000b337:	mov    r9d,0x1
   14000b33d:	xor    r8d,r8d
   14000b340:	mov    rdx,rbx
   14000b343:	mov    DWORD PTR [rsp+0x28],0x1
   14000b34b:	mov    QWORD PTR [rdi+0x8],rbx
   14000b34f:	mov    DWORD PTR [rsp+0x20],0x1
   14000b357:	call   QWORD PTR [rip+0xa093]        # 0x1400153f0
   14000b35d:	mov    ecx,0x30
   14000b362:	call   0x140012892
   14000b367:	lea    r12,[rip+0xad1a]        # 0x140016088
   14000b36e:	lea    r13,[rip+0xacd3]        # 0x140016048
   14000b375:	mov    rbx,rax
   14000b378:	test   rax,rax
   14000b37b:	je     0x14000b395
   14000b37d:	mov    r8d,ebp
   14000b380:	mov    rdx,rsi
   14000b383:	mov    rcx,rax
   14000b386:	call   QWORD PTR [rip+0xa06c]        # 0x1400153f8
   14000b38c:	mov    QWORD PTR [rbx],r12
   14000b38f:	mov    QWORD PTR [rbx+0x10],r13
   14000b393:	jmp    0x14000b398
   14000b395:	mov    rbx,rbp
   14000b398:	lea    rdx,[rip+0xac99]        # 0x140016038
   14000b39f:	lea    rcx,[rsp+0x98]
   14000b3a7:	mov    r8d,0x5
   14000b3ad:	mov    QWORD PTR [rdi+0x10],rbx
   14000b3b1:	call   QWORD PTR [rip+0x9001]        # 0x1400143b8
   14000b3b7:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b3bb:	mov    rdx,rax
   14000b3be:	call   QWORD PTR [rip+0x8ffc]        # 0x1400143c0
   14000b3c4:	lea    rcx,[rsp+0x98]
   14000b3cc:	call   QWORD PTR [rip+0x9176]        # 0x140014548
   14000b3d2:	lea    rcx,[rsp+0x80]
   14000b3da:	mov    edx,0x1
   14000b3df:	mov    DWORD PTR [rsp+0x80],0x550000
   14000b3ea:	call   QWORD PTR [rip+0xa010]        # 0x140015400
   14000b3f0:	lea    rcx,[rsp+0x80]
   14000b3f8:	xor    edx,edx
   14000b3fa:	call   QWORD PTR [rip+0xa008]        # 0x140015408
   14000b400:	lea    rcx,[rsp+0x80]
   14000b408:	xor    edx,edx
   14000b40a:	call   QWORD PTR [rip+0xa000]        # 0x140015410
   14000b410:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b414:	lea    rdx,[rsp+0x98]
   14000b41c:	call   QWORD PTR [rip+0x9ff6]        # 0x140015418
   14000b422:	mov    edx,DWORD PTR [rsp+0x80]
   14000b429:	mov    ecx,DWORD PTR [rax]
   14000b42b:	and    ecx,0xe0000000
   14000b431:	xor    ecx,edx
   14000b433:	and    ecx,0x20000000
   14000b439:	xor    edx,ecx
   14000b43b:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b43f:	mov    DWORD PTR [rsp+0x80],edx
   14000b446:	call   QWORD PTR [rip+0x9fd4]        # 0x140015420
   14000b44c:	mov    rdx,QWORD PTR [rdi+0x10]
   14000b450:	mov    rcx,QWORD PTR [rdi]
   14000b453:	xor    r9d,r9d
   14000b456:	mov    DWORD PTR [rsp+0x30],ebp
   14000b45a:	lea    r8d,[r9+0x1]
   14000b45e:	mov    DWORD PTR [rsp+0x28],0x1
   14000b466:	mov    DWORD PTR [rsp+0x20],0x1
   14000b46e:	call   QWORD PTR [rip+0x9fb4]        # 0x140015428
   14000b474:	mov    ecx,0x30
   14000b479:	call   0x140012892
   14000b47e:	lea    r15,[rip+0xa923]        # 0x140015da8
   14000b485:	mov    rbx,rax
   14000b488:	test   rax,rax
   14000b48b:	je     0x14000b4a9
   14000b48d:	mov    rdx,rsi
   14000b490:	mov    rcx,rax
   14000b493:	call   QWORD PTR [rip+0x9fa7]        # 0x140015440
   14000b499:	lea    rax,[rip+0xa8c8]        # 0x140015d68
   14000b4a0:	mov    QWORD PTR [rbx],r15
   14000b4a3:	mov    QWORD PTR [rbx+0x10],rax
   14000b4a7:	jmp    0x14000b4ac
   14000b4a9:	mov    rbx,rbp
   14000b4ac:	lea    rdx,[rip+0xd23d]        # 0x1400186f0
   14000b4b3:	lea    rcx,[rsp+0x98]
   14000b4bb:	mov    r8d,0xf
   14000b4c1:	mov    QWORD PTR [rdi+0x18],rbx
   14000b4c5:	call   QWORD PTR [rip+0x8eed]        # 0x1400143b8
   14000b4cb:	mov    rcx,QWORD PTR [rdi+0x18]
   14000b4cf:	mov    rdx,rax
   14000b4d2:	call   QWORD PTR [rip+0x8ee8]        # 0x1400143c0
   14000b4d8:	lea    rcx,[rsp+0x98]
   14000b4e0:	call   QWORD PTR [rip+0x9062]        # 0x140014548
   14000b4e6:	lea    rcx,[rsp+0x90]
   14000b4ee:	mov    edx,0x1
   14000b4f3:	mov    DWORD PTR [rsp+0x90],0x70000
   14000b4fe:	call   QWORD PTR [rip+0x9efc]        # 0x140015400
   14000b504:	lea    rcx,[rsp+0x90]
   14000b50c:	xor    edx,edx
   14000b50e:	call   QWORD PTR [rip+0x9ef4]        # 0x140015408
   14000b514:	lea    rcx,[rsp+0x90]
   14000b51c:	xor    edx,edx
   14000b51e:	call   QWORD PTR [rip+0x9eec]        # 0x140015410
   14000b524:	mov    rcx,QWORD PTR [rdi+0x18]
   14000b528:	lea    rdx,[rsp+0x98]
   14000b530:	call   QWORD PTR [rip+0x9ee2]        # 0x140015418
   14000b536:	mov    edx,DWORD PTR [rsp+0x90]
   14000b53d:	mov    ecx,DWORD PTR [rax]
   14000b53f:	and    ecx,0xe0000000
   14000b545:	xor    ecx,edx
   14000b547:	and    ecx,0x20000000
   14000b54d:	xor    edx,ecx
   14000b54f:	mov    rcx,QWORD PTR [rdi+0x18]
   14000b553:	mov    DWORD PTR [rsp+0x90],edx
   14000b55a:	call   QWORD PTR [rip+0x9ec0]        # 0x140015420
   14000b560:	mov    rdx,QWORD PTR [rdi+0x18]
   14000b564:	mov    rcx,QWORD PTR [rdi]
   14000b567:	mov    r9d,0x1
   14000b56d:	mov    DWORD PTR [rsp+0x30],ebp
   14000b571:	mov    r8d,r9d
   14000b574:	mov    DWORD PTR [rsp+0x28],0x1
   14000b57c:	mov    DWORD PTR [rsp+0x20],0x1
   14000b584:	call   QWORD PTR [rip+0x9e9e]        # 0x140015428
   14000b58a:	mov    ecx,0x30
   14000b58f:	call   0x140012892
   14000b594:	mov    rbx,rax
   14000b597:	test   rax,rax
   14000b59a:	je     0x14000b5b4
   14000b59c:	mov    r8d,ebp
   14000b59f:	mov    rdx,rsi
   14000b5a2:	mov    rcx,rax
   14000b5a5:	call   QWORD PTR [rip+0x9e4d]        # 0x1400153f8
   14000b5ab:	mov    QWORD PTR [rbx],r12
   14000b5ae:	mov    QWORD PTR [rbx+0x10],r13
   14000b5b2:	jmp    0x14000b5b7
   14000b5b4:	mov    rbx,rbp
   14000b5b7:	lea    rdx,[rip+0xb14a]        # 0x140016708
   14000b5be:	lea    rcx,[rsp+0x98]
   14000b5c6:	mov    r8d,0x7
   14000b5cc:	mov    QWORD PTR [rdi+0x20],rbx
   14000b5d0:	call   QWORD PTR [rip+0x8de2]        # 0x1400143b8
   14000b5d6:	mov    rcx,QWORD PTR [rdi+0x20]
   14000b5da:	mov    rdx,rax
   14000b5dd:	call   QWORD PTR [rip+0x8ddd]        # 0x1400143c0
   14000b5e3:	lea    rcx,[rsp+0x98]
   14000b5eb:	call   QWORD PTR [rip+0x8f57]        # 0x140014548
   14000b5f1:	mov    rcx,QWORD PTR [rdi+0x20]
   14000b5f5:	lea    rdx,[rsp+0x98]
   14000b5fd:	call   QWORD PTR [rip+0x9e15]        # 0x140015418
   14000b603:	mov    edx,DWORD PTR [rsp+0x80]
   14000b60a:	mov    ecx,DWORD PTR [rax]
   14000b60c:	and    ecx,0xe0000000
   14000b612:	xor    ecx,edx
   14000b614:	and    ecx,0x20000000
   14000b61a:	xor    edx,ecx
   14000b61c:	mov    rcx,QWORD PTR [rdi+0x20]
   14000b620:	mov    DWORD PTR [rsp+0x80],edx
   14000b627:	call   QWORD PTR [rip+0x9df3]        # 0x140015420
   14000b62d:	mov    rdx,QWORD PTR [rdi+0x20]
   14000b631:	mov    rcx,QWORD PTR [rdi]
   14000b634:	xor    r9d,r9d
   14000b637:	mov    DWORD PTR [rsp+0x30],ebp
   14000b63b:	lea    r8d,[r9+0x2]
   14000b63f:	mov    DWORD PTR [rsp+0x28],0x1
   14000b647:	mov    DWORD PTR [rsp+0x20],0x1
   14000b64f:	call   QWORD PTR [rip+0x9dd3]        # 0x140015428
   14000b655:	mov    ecx,0x30
   14000b65a:	call   0x140012892
   14000b65f:	mov    rbx,rax
   14000b662:	test   rax,rax
   14000b665:	je     0x14000b683
   14000b667:	mov    rdx,rsi
   14000b66a:	mov    rcx,rax
   14000b66d:	call   QWORD PTR [rip+0x9dcd]        # 0x140015440
   14000b673:	lea    rax,[rip+0xa6ee]        # 0x140015d68
   14000b67a:	mov    QWORD PTR [rbx],r15
   14000b67d:	mov    QWORD PTR [rbx+0x10],rax
   14000b681:	jmp    0x14000b686
   14000b683:	mov    rbx,rbp
   14000b686:	lea    rdx,[rip+0xd04b]        # 0x1400186d8
   14000b68d:	lea    rcx,[rsp+0x98]
   14000b695:	mov    r8d,0x12
   14000b69b:	mov    QWORD PTR [rdi+0x28],rbx
   14000b69f:	call   QWORD PTR [rip+0x8d13]        # 0x1400143b8
   14000b6a5:	mov    rcx,QWORD PTR [rdi+0x28]
   14000b6a9:	mov    rdx,rax
   14000b6ac:	call   QWORD PTR [rip+0x8d0e]        # 0x1400143c0
   14000b6b2:	lea    rcx,[rsp+0x98]
   14000b6ba:	call   QWORD PTR [rip+0x8e88]        # 0x140014548
   14000b6c0:	mov    rcx,QWORD PTR [rdi+0x28]
   14000b6c4:	lea    rdx,[rsp+0x98]
   14000b6cc:	call   QWORD PTR [rip+0x9d46]        # 0x140015418
   14000b6d2:	mov    edx,DWORD PTR [rsp+0x90]
   14000b6d9:	mov    rcx,QWORD PTR [rdi+0x28]
   14000b6dd:	mov    r9d,DWORD PTR [rax]
   14000b6e0:	and    r9d,0xe0000000
   14000b6e7:	xor    r9d,edx
   14000b6ea:	and    r9d,0x20000000
   14000b6f1:	xor    edx,r9d
   14000b6f4:	mov    DWORD PTR [rsp+0x90],edx
   14000b6fb:	call   QWORD PTR [rip+0x9d1f]        # 0x140015420
   14000b701:	mov    rdx,QWORD PTR [rdi+0x28]
   14000b705:	mov    rcx,QWORD PTR [rdi]
   14000b708:	mov    r9d,0x1
   14000b70e:	mov    DWORD PTR [rsp+0x30],ebp
   14000b712:	lea    r8d,[r9+0x1]
   14000b716:	mov    DWORD PTR [rsp+0x28],0x1
   14000b71e:	mov    DWORD PTR [rsp+0x20],0x1
   14000b726:	call   QWORD PTR [rip+0x9cfc]        # 0x140015428
   14000b72c:	mov    ecx,0x30
   14000b731:	call   0x140012892
   14000b736:	mov    rbx,rax
   14000b739:	test   rax,rax
   14000b73c:	je     0x14000b760
   14000b73e:	mov    edx,0x14
   14000b743:	mov    rcx,rax
   14000b746:	mov    DWORD PTR [rsp+0x20],0x7
   14000b74e:	lea    r9d,[rdx-0x13]
   14000b752:	mov    r8d,edx
   14000b755:	call   QWORD PTR [rip+0x9c8d]        # 0x1400153e8
   14000b75b:	mov    QWORD PTR [rbx],r14
   14000b75e:	jmp    0x14000b763
   14000b760:	mov    rbx,rbp
   14000b763:	mov    rcx,QWORD PTR [rdi]
   14000b766:	mov    r9d,0x1
   14000b76c:	mov    DWORD PTR [rsp+0x30],ebp
   14000b770:	lea    r8d,[r9+0x2]
   14000b774:	mov    rdx,rbx
   14000b777:	mov    DWORD PTR [rsp+0x28],0x1
   14000b77f:	mov    QWORD PTR [rdi+0x30],rbx
   14000b783:	mov    DWORD PTR [rsp+0x20],0x1
   14000b78b:	call   QWORD PTR [rip+0x9c5f]        # 0x1400153f0
   14000b791:	mov    rdx,rsi
   14000b794:	mov    rcx,rdi
   14000b797:	call   0x14000ade0
   14000b79c:	mov    rcx,rsi
   14000b79f:	call   QWORD PTR [rip+0x8c23]        # 0x1400143c8
   14000b7a5:	mov    rbx,QWORD PTR [rsp+0x88]
   14000b7ad:	add    rsp,0x40
   14000b7b1:	pop    r15
   14000b7b3:	pop    r14
   14000b7b5:	pop    r13
   14000b7b7:	pop    r12
   14000b7b9:	pop    rdi
   14000b7ba:	pop    rsi
   14000b7bb:	pop    rbp
   14000b7bc:	ret    
   14000b7bd:	int3   
   14000b7be:	int3   
   14000b7bf:	int3   
   14000b7c0:	mov    QWORD PTR [rsp+0x10],rbx
   14000b7c5:	mov    QWORD PTR [rsp+0x18],rsi
   14000b7ca:	push   rdi
   14000b7cb:	sub    rsp,0x40
   14000b7cf:	mov    rbx,rcx
   14000b7d2:	call   QWORD PTR [rip+0x8f08]        # 0x1400146e0
   14000b7d8:	lea    rdx,[rip+0xcfc9]        # 0x1400187a8
   14000b7df:	lea    rax,[rip+0xcf82]        # 0x140018768
   14000b7e6:	lea    rcx,[rbx+0x68]
   14000b7ea:	mov    QWORD PTR [rbx],rdx
   14000b7ed:	mov    QWORD PTR [rbx+0x10],rax
   14000b7f1:	call   QWORD PTR [rip+0x8bf9]        # 0x1400143f0
   14000b7f7:	lea    r8,[rip+0xcf42]        # 0x140018740
   14000b7fe:	lea    rdx,[rsp+0x50]
   14000b803:	lea    rcx,[rip+0x1dfbe]        # 0x1400297c8
   14000b80a:	xor    r9d,r9d
   14000b80d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b815:	call   QWORD PTR [rip+0x8d3d]        # 0x140014558
   14000b81b:	lea    rdx,[rsp+0x50]
   14000b820:	mov    rcx,rbx
   14000b823:	call   QWORD PTR [rip+0x8eaf]        # 0x1400146d8
   14000b829:	lea    rcx,[rsp+0x50]
   14000b82e:	call   QWORD PTR [rip+0x8d14]        # 0x140014548
   14000b834:	lea    r8,[rip+0xced5]        # 0x140018710
   14000b83b:	lea    rdx,[rsp+0x50]
   14000b840:	lea    rcx,[rip+0x1df81]        # 0x1400297c8
   14000b847:	xor    r9d,r9d
   14000b84a:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b852:	call   QWORD PTR [rip+0x8d00]        # 0x140014558
   14000b858:	lea    rdx,[rsp+0x50]
   14000b85d:	mov    rcx,rbx
   14000b860:	call   QWORD PTR [rip+0x8e6a]        # 0x1400146d0
   14000b866:	lea    rcx,[rsp+0x50]
   14000b86b:	call   QWORD PTR [rip+0x8cd7]        # 0x140014548
   14000b871:	lea    r8,[rip+0xce88]        # 0x140018700
   14000b878:	lea    rdx,[rsp+0x50]
   14000b87d:	lea    rcx,[rip+0x1df44]        # 0x1400297c8
   14000b884:	xor    r9d,r9d
   14000b887:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000b88f:	call   QWORD PTR [rip+0x8cc3]        # 0x140014558
   14000b895:	lea    r8,[rsp+0x50]
   14000b89a:	mov    edx,0x1
   14000b89f:	mov    rcx,rbx
   14000b8a2:	call   QWORD PTR [rip+0x95b0]        # 0x140014e58
   14000b8a8:	lea    rcx,[rsp+0x50]
   14000b8ad:	call   QWORD PTR [rip+0x8c95]        # 0x140014548
   14000b8b3:	lea    rcx,[rbx+0x30]
   14000b8b7:	mov    rdx,rbx
   14000b8ba:	call   0x14000b1e0
   14000b8bf:	mov    rdx,QWORD PTR [rbx+0x48]
   14000b8c3:	lea    rdi,[rip+0xae96]        # 0x140016760
   14000b8ca:	xor    esi,esi
   14000b8cc:	lea    r8,[rip+0xae75]        # 0x140016748
   14000b8d3:	lea    rcx,[rsp+0x50]
   14000b8d8:	mov    r9,rbx
   14000b8db:	mov    DWORD PTR [rsp+0x28],esi
   14000b8df:	mov    QWORD PTR [rsp+0x20],rdi
   14000b8e4:	call   QWORD PTR [rip+0x8b7e]        # 0x140014468
   14000b8ea:	lea    rcx,[rsp+0x50]
   14000b8ef:	call   QWORD PTR [rip+0x8b7b]        # 0x140014470
   14000b8f5:	mov    rdx,QWORD PTR [rbx+0x58]
   14000b8f9:	lea    r8,[rip+0xae48]        # 0x140016748
   14000b900:	lea    rcx,[rsp+0x50]
   14000b905:	mov    r9,rbx
   14000b908:	mov    DWORD PTR [rsp+0x28],esi
   14000b90c:	mov    QWORD PTR [rsp+0x20],rdi
   14000b911:	call   QWORD PTR [rip+0x8b51]        # 0x140014468
   14000b917:	lea    rcx,[rsp+0x50]
   14000b91c:	call   QWORD PTR [rip+0x8b4e]        # 0x140014470
   14000b922:	or     rcx,0xffffffffffffffff
   14000b926:	lea    rdx,[rip+0x9e73]        # 0x1400157a0
   14000b92d:	mov    QWORD PTR [rsp+0x38],rdx
   14000b932:	mov    rdi,rdx
   14000b935:	xor    eax,eax
   14000b937:	repnz scas al,BYTE PTR es:[rdi]
   14000b939:	lea    rdx,[rsp+0x30]
   14000b93e:	not    rcx
   14000b941:	dec    rcx
   14000b944:	mov    DWORD PTR [rsp+0x30],ecx
   14000b948:	lea    rcx,[rsp+0x50]
   14000b94d:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b952:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000b958:	call   QWORD PTR [rip+0x8be2]        # 0x140014540
   14000b95e:	mov    QWORD PTR [rsp+0x20],rsi
   14000b963:	xor    r9d,r9d
   14000b966:	mov    r8,QWORD PTR [rbx+0x48]
   14000b96a:	lea    rdx,[rsp+0x50]
   14000b96f:	mov    rcx,rbx
   14000b972:	call   QWORD PTR [rip+0x8d50]        # 0x1400146c8
   14000b978:	lea    rcx,[rsp+0x50]
   14000b97d:	call   QWORD PTR [rip+0x8bc5]        # 0x140014548
   14000b983:	or     rcx,0xffffffffffffffff
   14000b987:	lea    rdx,[rip+0x9df2]        # 0x140015780
   14000b98e:	mov    QWORD PTR [rsp+0x38],rdx
   14000b993:	mov    rdi,rdx
   14000b996:	xor    eax,eax
   14000b998:	repnz scas al,BYTE PTR es:[rdi]
   14000b99a:	lea    rdx,[rsp+0x30]
   14000b99f:	not    rcx
   14000b9a2:	dec    rcx
   14000b9a5:	mov    DWORD PTR [rsp+0x30],ecx
   14000b9a9:	lea    rcx,[rsp+0x50]
   14000b9ae:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000b9b3:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000b9b9:	call   QWORD PTR [rip+0x8b81]        # 0x140014540
   14000b9bf:	mov    r8,QWORD PTR [rbx+0x58]
   14000b9c3:	lea    rdx,[rsp+0x50]
   14000b9c8:	xor    r9d,r9d
   14000b9cb:	mov    rcx,rbx
   14000b9ce:	mov    QWORD PTR [rsp+0x20],rsi
   14000b9d3:	call   QWORD PTR [rip+0x8cef]        # 0x1400146c8
   14000b9d9:	lea    rcx,[rsp+0x50]
   14000b9de:	call   QWORD PTR [rip+0x8b64]        # 0x140014548
   14000b9e4:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b9e9:	mov    rax,rbx
   14000b9ec:	mov    rbx,QWORD PTR [rsp+0x58]
   14000b9f1:	add    rsp,0x40
   14000b9f5:	pop    rdi
   14000b9f6:	ret    
   14000b9f7:	int3   
   14000b9f8:	int3   
   14000b9f9:	int3   
   14000b9fa:	int3   
   14000b9fb:	int3   
   14000b9fc:	int3   
   14000b9fd:	int3   
   14000b9fe:	int3   
   14000b9ff:	int3   
   14000ba00:	sub    rcx,0x10
   14000ba04:	jmp    0x14000ba10
   14000ba09:	int3   
   14000ba0a:	int3   
   14000ba0b:	int3   
   14000ba0c:	int3   
   14000ba0d:	int3   
   14000ba0e:	int3   
   14000ba0f:	int3   
   14000ba10:	mov    QWORD PTR [rsp+0x8],rbx
   14000ba15:	push   rdi
   14000ba16:	sub    rsp,0x20
   14000ba1a:	mov    rdi,rcx
   14000ba1d:	add    rcx,0x68
   14000ba21:	mov    ebx,edx
   14000ba23:	call   QWORD PTR [rip+0x8b1f]        # 0x140014548
   14000ba29:	mov    rcx,rdi
   14000ba2c:	call   QWORD PTR [rip+0x8cfe]        # 0x140014730
   14000ba32:	test   bl,0x1
   14000ba35:	je     0x14000ba3f
   14000ba37:	mov    rcx,rdi
   14000ba3a:	call   0x140012898
   14000ba3f:	mov    rax,rdi
   14000ba42:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ba47:	add    rsp,0x20
   14000ba4b:	pop    rdi
   14000ba4c:	ret    
   14000ba4d:	int3   
   14000ba4e:	int3   
   14000ba4f:	int3   
   14000ba50:	rex push rbx
   14000ba52:	push   rdi
   14000ba53:	sub    rsp,0x38
   14000ba57:	mov    rdi,rcx
   14000ba5a:	lea    r8,[rip+0xcef7]        # 0x140018958
   14000ba61:	lea    rdx,[rsp+0x58]
   14000ba66:	lea    rcx,[rip+0x1dd5b]        # 0x1400297c8
   14000ba6d:	xor    r9d,r9d
   14000ba70:	mov    DWORD PTR [rsp+0x50],0x0
   14000ba78:	mov    ebx,0x3
   14000ba7d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000ba85:	call   QWORD PTR [rip+0x8acd]        # 0x140014558
   14000ba8b:	mov    rcx,QWORD PTR [rdi+0x48]
   14000ba8f:	lea    rdx,[rsp+0x68]
   14000ba94:	call   QWORD PTR [rip+0x8cb6]        # 0x140014750
   14000ba9a:	lea    r8,[rsp+0x58]
   14000ba9f:	mov    rcx,rdi
   14000baa2:	mov    rdx,rax
   14000baa5:	call   0x14000af90
   14000baaa:	test   al,al
   14000baac:	je     0x14000baff
   14000baae:	lea    r8,[rip+0xce83]        # 0x140018938
   14000bab5:	lea    rdx,[rsp+0x50]
   14000baba:	lea    rcx,[rip+0x1dd07]        # 0x1400297c8
   14000bac1:	xor    r9d,r9d
   14000bac4:	mov    ebx,0xf
   14000bac9:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000bad1:	call   QWORD PTR [rip+0x8a81]        # 0x140014558
   14000bad7:	mov    rcx,QWORD PTR [rdi+0x58]
   14000badb:	lea    rdx,[rsp+0x60]
   14000bae0:	call   QWORD PTR [rip+0x8c6a]        # 0x140014750
   14000bae6:	lea    r8,[rsp+0x50]
   14000baeb:	mov    rcx,rdi
   14000baee:	mov    rdx,rax
   14000baf1:	call   0x14000af90
   14000baf6:	test   al,al
   14000baf8:	je     0x14000baff
   14000bafa:	mov    dil,0x1
   14000bafd:	jmp    0x14000bb02
   14000baff:	xor    dil,dil
   14000bb02:	test   bl,0x8
   14000bb05:	je     0x14000bb15
   14000bb07:	lea    rcx,[rsp+0x60]
   14000bb0c:	and    ebx,0xfffffff7
   14000bb0f:	call   QWORD PTR [rip+0x8a33]        # 0x140014548
   14000bb15:	test   bl,0x4
   14000bb18:	je     0x14000bb28
   14000bb1a:	lea    rcx,[rsp+0x50]
   14000bb1f:	and    ebx,0xfffffffb
   14000bb22:	call   QWORD PTR [rip+0x8a20]        # 0x140014548
   14000bb28:	test   bl,0x2
   14000bb2b:	je     0x14000bb3b
   14000bb2d:	lea    rcx,[rsp+0x68]
   14000bb32:	and    ebx,0xfffffffd
   14000bb35:	call   QWORD PTR [rip+0x8a0d]        # 0x140014548
   14000bb3b:	test   bl,0x1
   14000bb3e:	je     0x14000bb4b
   14000bb40:	lea    rcx,[rsp+0x58]
   14000bb45:	call   QWORD PTR [rip+0x89fd]        # 0x140014548
   14000bb4b:	mov    al,dil
   14000bb4e:	add    rsp,0x38
   14000bb52:	pop    rdi
   14000bb53:	pop    rbx
   14000bb54:	ret    
   14000bb55:	int3   
   14000bb56:	int3   
   14000bb57:	int3   
   14000bb58:	int3   
   14000bb59:	int3   
   14000bb5a:	int3   
   14000bb5b:	int3   
   14000bb5c:	int3   
   14000bb5d:	int3   
   14000bb5e:	int3   
   14000bb5f:	int3   
   14000bb60:	mov    QWORD PTR [rsp+0x10],rbx
   14000bb65:	mov    QWORD PTR [rsp+0x18],rbp
   14000bb6a:	mov    QWORD PTR [rsp+0x20],rsi
   14000bb6f:	push   rdi
   14000bb70:	sub    rsp,0x30
   14000bb74:	mov    rsi,rcx
   14000bb77:	call   QWORD PTR [rip+0x8b63]        # 0x1400146e0
   14000bb7d:	lea    r11,[rip+0xd194]        # 0x140018d18
   14000bb84:	lea    rax,[rip+0xd14d]        # 0x140018cd8
   14000bb8b:	lea    r8,[rip+0xd12e]        # 0x140018cc0
   14000bb92:	lea    rdx,[rsp+0x40]
   14000bb97:	lea    rcx,[rip+0x1dc62]        # 0x140029800
   14000bb9e:	xor    r9d,r9d
   14000bba1:	mov    QWORD PTR [rsi],r11
   14000bba4:	mov    QWORD PTR [rsi+0x10],rax
   14000bba8:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000bbb0:	call   QWORD PTR [rip+0x89a2]        # 0x140014558
   14000bbb6:	lea    rdx,[rsp+0x40]
   14000bbbb:	mov    rcx,rsi
   14000bbbe:	call   QWORD PTR [rip+0x8b14]        # 0x1400146d8
   14000bbc4:	lea    rcx,[rsp+0x40]
   14000bbc9:	call   QWORD PTR [rip+0x8979]        # 0x140014548
   14000bbcf:	lea    r8,[rip+0xd0b2]        # 0x140018c88
   14000bbd6:	lea    rdx,[rsp+0x40]
   14000bbdb:	lea    rcx,[rip+0x1dc1e]        # 0x140029800
   14000bbe2:	xor    r9d,r9d
   14000bbe5:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000bbed:	call   QWORD PTR [rip+0x8965]        # 0x140014558
   14000bbf3:	lea    rdx,[rsp+0x40]
   14000bbf8:	mov    rcx,rsi
   14000bbfb:	call   QWORD PTR [rip+0x8acf]        # 0x1400146d0
   14000bc01:	lea    rcx,[rsp+0x40]
   14000bc06:	call   QWORD PTR [rip+0x893c]        # 0x140014548
   14000bc0c:	mov    dl,0x1
   14000bc0e:	mov    rcx,rsi
   14000bc11:	call   QWORD PTR [rip+0x9259]        # 0x140014e70
   14000bc17:	mov    ecx,0x20
   14000bc1c:	call   0x140012892
   14000bc21:	mov    rbx,rax
   14000bc24:	test   rax,rax
   14000bc27:	je     0x14000bc4c
   14000bc29:	mov    rdx,rsi
   14000bc2c:	mov    rcx,rax
   14000bc2f:	call   QWORD PTR [rip+0x9233]        # 0x140014e68
   14000bc35:	lea    r11,[rip+0xcfcc]        # 0x140018c08
   14000bc3c:	lea    rax,[rip+0xcf35]        # 0x140018b78
   14000bc43:	mov    QWORD PTR [rbx],r11
   14000bc46:	mov    QWORD PTR [rbx+0x10],rax
   14000bc4a:	jmp    0x14000bc4e
   14000bc4c:	xor    ebx,ebx
   14000bc4e:	mov    ecx,0x30
   14000bc53:	call   0x140012892
   14000bc58:	lea    rbp,[rip+0xa599]        # 0x1400161f8
   14000bc5f:	mov    rdi,rax
   14000bc62:	test   rax,rax
   14000bc65:	je     0x14000bc89
   14000bc67:	mov    edx,0x14
   14000bc6c:	mov    rcx,rax
   14000bc6f:	mov    DWORD PTR [rsp+0x20],0x0
   14000bc77:	lea    r9d,[rdx-0x13]
   14000bc7b:	mov    r8d,edx
   14000bc7e:	call   QWORD PTR [rip+0x9764]        # 0x1400153e8
   14000bc84:	mov    QWORD PTR [rdi],rbp
   14000bc87:	jmp    0x14000bc8b
   14000bc89:	xor    edi,edi
   14000bc8b:	mov    rax,QWORD PTR [rbx]
   14000bc8e:	mov    rdx,rdi
   14000bc91:	mov    rcx,rbx
   14000bc94:	call   QWORD PTR [rax+0x58]
   14000bc97:	mov    ecx,0x30
   14000bc9c:	call   0x140012892
   14000bca1:	mov    rdi,rax
   14000bca4:	test   rax,rax
   14000bca7:	je     0x14000bccb
   14000bca9:	xor    edx,edx
   14000bcab:	mov    rcx,rax
   14000bcae:	call   QWORD PTR [rip+0x91ac]        # 0x140014e60
   14000bcb4:	lea    r11,[rip+0xccfd]        # 0x1400189b8
   14000bcbb:	lea    rax,[rip+0xccb6]        # 0x140018978
   14000bcc2:	mov    QWORD PTR [rdi],r11
   14000bcc5:	mov    QWORD PTR [rdi+0x10],rax
   14000bcc9:	jmp    0x14000bccd
   14000bccb:	xor    edi,edi
   14000bccd:	xor    r9d,r9d
   14000bcd0:	xor    r8d,r8d
   14000bcd3:	mov    rdx,rdi
   14000bcd6:	mov    rcx,rbx
   14000bcd9:	mov    QWORD PTR [rsi+0x30],rdi
   14000bcdd:	call   QWORD PTR [rip+0x9765]        # 0x140015448
   14000bce3:	mov    ecx,0x30
   14000bce8:	call   0x140012892
   14000bced:	mov    rdi,rax
   14000bcf0:	test   rax,rax
   14000bcf3:	je     0x14000bd18
   14000bcf5:	mov    edx,0x14
   14000bcfa:	mov    rcx,rax
   14000bcfd:	mov    DWORD PTR [rsp+0x20],0x7
   14000bd05:	lea    r9d,[rdx-0x13]
   14000bd09:	lea    r8d,[rdx+0x14]
   14000bd0d:	call   QWORD PTR [rip+0x96d5]        # 0x1400153e8
   14000bd13:	mov    QWORD PTR [rdi],rbp
   14000bd16:	jmp    0x14000bd1a
   14000bd18:	xor    edi,edi
   14000bd1a:	mov    rax,QWORD PTR [rbx]
   14000bd1d:	mov    rdx,rdi
   14000bd20:	mov    rcx,rbx
   14000bd23:	call   QWORD PTR [rax+0x58]
   14000bd26:	mov    rbx,QWORD PTR [rsp+0x48]
   14000bd2b:	mov    rbp,QWORD PTR [rsp+0x50]
   14000bd30:	mov    rax,rsi
   14000bd33:	mov    rsi,QWORD PTR [rsp+0x58]
   14000bd38:	add    rsp,0x30
   14000bd3c:	pop    rdi
   14000bd3d:	ret    
   14000bd3e:	int3   
   14000bd3f:	int3   
   14000bd40:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd45:	push   rdi
   14000bd46:	sub    rsp,0x20
   14000bd4a:	mov    ebx,edx
   14000bd4c:	mov    rdi,rcx
   14000bd4f:	call   QWORD PTR [rip+0x924b]        # 0x140014fa0
   14000bd55:	test   bl,0x1
   14000bd58:	je     0x14000bd62
   14000bd5a:	mov    rcx,rdi
   14000bd5d:	call   0x140012898
   14000bd62:	mov    rax,rdi
   14000bd65:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bd6a:	add    rsp,0x20
   14000bd6e:	pop    rdi
   14000bd6f:	ret    
   14000bd70:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd75:	push   rdi
   14000bd76:	sub    rsp,0x20
   14000bd7a:	mov    ebx,edx
   14000bd7c:	mov    rdi,rcx
   14000bd7f:	call   QWORD PTR [rip+0x9223]        # 0x140014fa8
   14000bd85:	test   bl,0x1
   14000bd88:	je     0x14000bd92
   14000bd8a:	mov    rcx,rdi
   14000bd8d:	call   0x140012898
   14000bd92:	mov    rax,rdi
   14000bd95:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bd9a:	add    rsp,0x20
   14000bd9e:	pop    rdi
   14000bd9f:	ret    
   14000bda0:	sub    rcx,0x10
   14000bda4:	jmp    0x14000bd70
   14000bda9:	int3   
   14000bdaa:	int3   
   14000bdab:	int3   
   14000bdac:	int3   
   14000bdad:	int3   
   14000bdae:	int3   
   14000bdaf:	int3   
   14000bdb0:	sub    rcx,0x10
   14000bdb4:	jmp    0x14000bd40
   14000bdb9:	int3   
   14000bdba:	int3   
   14000bdbb:	int3   
   14000bdbc:	int3   
   14000bdbd:	int3   
   14000bdbe:	int3   
   14000bdbf:	int3   
   14000bdc0:	sub    rsp,0x28
   14000bdc4:	mov    rcx,QWORD PTR [rcx+0x30]
   14000bdc8:	call   QWORD PTR [rip+0x91e2]        # 0x140014fb0
   14000bdce:	xor    ecx,ecx
   14000bdd0:	add    rsp,0x28
   14000bdd4:	rex.W jmp QWORD PTR [rip+0x8525]        # 0x140014300
   14000bddb:	int3   
   14000bddc:	int3   
   14000bddd:	int3   
   14000bdde:	int3   
   14000bddf:	int3   
   14000bde0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bde5:	push   rdi
   14000bde6:	sub    rsp,0x30
   14000bdea:	mov    rbx,rcx
   14000bded:	or     rcx,0xffffffffffffffff
   14000bdf1:	xor    eax,eax
   14000bdf3:	mov    DWORD PTR [rsp+0x48],0x0
   14000bdfb:	lea    rdi,[rip+0xd0a6]        # 0x140018ea8
   14000be02:	repnz scas al,BYTE PTR es:[rdi]
   14000be04:	not    rcx
   14000be07:	lea    rdx,[rcx-0x1]
   14000be0b:	lea    rcx,[rip+0xd096]        # 0x140018ea8
   14000be12:	call   QWORD PTR [rip+0x84c0]        # 0x1400142d8
   14000be18:	xor    r9d,r9d
   14000be1b:	lea    rdx,[rsp+0x20]
   14000be20:	lea    r8d,[r9+0x1]
   14000be24:	lea    rcx,[rsp+0x28]
   14000be29:	mov    QWORD PTR [rsp+0x20],rax
   14000be2e:	call   QWORD PTR [rip+0x84ac]        # 0x1400142e0
   14000be34:	mov    rdx,rbx
   14000be37:	mov    rcx,rax
   14000be3a:	call   QWORD PTR [rip+0x84a8]        # 0x1400142e8
   14000be40:	test   al,al
   14000be42:	je     0x14000be95
   14000be44:	lea    rdx,[rsp+0x48]
   14000be49:	xor    r8d,r8d
   14000be4c:	mov    rcx,rbx
   14000be4f:	call   QWORD PTR [rip+0x849b]        # 0x1400142f0
   14000be55:	mov    ecx,0x33
   14000be5a:	cmp    cx,WORD PTR [rax]
   14000be5d:	jb     0x14000be90
   14000be5f:	lea    rdx,[rsp+0x50]
   14000be64:	xor    r8d,r8d
   14000be67:	mov    rcx,rbx
   14000be6a:	call   QWORD PTR [rip+0x8480]        # 0x1400142f0
   14000be70:	cmp    WORD PTR [rax],0x33
   14000be74:	jne    0x14000be95
   14000be76:	lea    rdx,[rsp+0x58]
   14000be7b:	mov    r8d,0x2
   14000be81:	mov    rcx,rbx
   14000be84:	call   QWORD PTR [rip+0x8466]        # 0x1400142f0
   14000be8a:	cmp    WORD PTR [rax],0x32
   14000be8e:	jb     0x14000be95
   14000be90:	mov    dil,0x1
   14000be93:	jmp    0x14000be98
   14000be95:	xor    dil,dil
   14000be98:	lea    rcx,[rsp+0x28]
   14000be9d:	call   QWORD PTR [rip+0x8455]        # 0x1400142f8
   14000bea3:	lea    rcx,[rsp+0x20]
   14000bea8:	call   QWORD PTR [rip+0x869a]        # 0x140014548
   14000beae:	mov    rbx,QWORD PTR [rsp+0x40]
   14000beb3:	mov    al,dil
   14000beb6:	add    rsp,0x30
   14000beba:	pop    rdi
   14000bebb:	ret    
   14000bebc:	int3   
   14000bebd:	int3   
   14000bebe:	int3   
   14000bebf:	int3   
   14000bec0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bec5:	mov    QWORD PTR [rsp+0x10],rsi
   14000beca:	push   rdi
   14000becb:	sub    rsp,0x30
   14000becf:	xor    r9d,r9d
   14000bed2:	mov    rsi,rdx
   14000bed5:	mov    rdi,rcx
   14000bed8:	lea    edx,[r9+0x28]
   14000bedc:	lea    r8d,[r9+0x8]
   14000bee0:	mov    rcx,rsi
   14000bee3:	mov    BYTE PTR [rsp+0x20],0x0
   14000bee8:	call   QWORD PTR [rip+0x83da]        # 0x1400142c8
   14000beee:	lea    rcx,[rax+0x18]
   14000bef2:	mov    rbx,rax
   14000bef5:	test   rcx,rcx
   14000bef8:	je     0x14000bf04
   14000befa:	lea    rdx,[rdi+0x18]
   14000befe:	call   QWORD PTR [rip+0x8664]        # 0x140014568
   14000bf04:	lea    rcx,[rbx+0x20]
   14000bf08:	test   rcx,rcx
   14000bf0b:	je     0x14000bf17
   14000bf0d:	lea    rdx,[rdi+0x20]
   14000bf11:	call   QWORD PTR [rip+0x8651]        # 0x140014568
   14000bf17:	test   BYTE PTR [rdi],0x1
   14000bf1a:	je     0x14000bf22
   14000bf1c:	or     QWORD PTR [rbx],0x1
   14000bf20:	jmp    0x14000bf26
   14000bf22:	and    QWORD PTR [rbx],0xfffffffffffffffe
   14000bf26:	mov    rcx,QWORD PTR [rdi+0x8]
   14000bf2a:	test   rcx,rcx
   14000bf2d:	je     0x14000bf44
   14000bf2f:	mov    rdx,rsi
   14000bf32:	call   0x14000bec0
   14000bf37:	mov    QWORD PTR [rbx+0x8],rax
   14000bf3b:	and    QWORD PTR [rax],0x3
   14000bf3f:	or     QWORD PTR [rax],rbx
   14000bf42:	jmp    0x14000bf4c
   14000bf44:	mov    QWORD PTR [rbx+0x8],0x0
   14000bf4c:	mov    rcx,QWORD PTR [rdi+0x10]
   14000bf50:	test   rcx,rcx
   14000bf53:	je     0x14000bf7b
   14000bf55:	mov    rdx,rsi
   14000bf58:	call   0x14000bec0
   14000bf5d:	mov    QWORD PTR [rbx+0x10],rax
   14000bf61:	and    QWORD PTR [rax],0x3
   14000bf65:	or     QWORD PTR [rax],rbx
   14000bf68:	mov    rax,rbx
   14000bf6b:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bf70:	mov    rsi,QWORD PTR [rsp+0x48]
   14000bf75:	add    rsp,0x30
   14000bf79:	pop    rdi
   14000bf7a:	ret    
   14000bf7b:	mov    rsi,QWORD PTR [rsp+0x48]
   14000bf80:	mov    QWORD PTR [rbx+0x10],0x0
   14000bf88:	mov    rax,rbx
   14000bf8b:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bf90:	add    rsp,0x30
   14000bf94:	pop    rdi
   14000bf95:	ret    
   14000bf96:	int3   
   14000bf97:	int3   
   14000bf98:	int3   
   14000bf99:	int3   
   14000bf9a:	int3   
   14000bf9b:	int3   
   14000bf9c:	int3   
   14000bf9d:	int3   
   14000bf9e:	int3   
   14000bf9f:	int3   
   14000bfa0:	cmp    rdx,r8
   14000bfa3:	je     0x14000c036
   14000bfa9:	mov    QWORD PTR [rsp+0x18],rbp
   14000bfae:	mov    QWORD PTR [rsp+0x20],rdi
   14000bfb3:	push   r12
   14000bfb5:	sub    rsp,0x20
   14000bfb9:	mov    QWORD PTR [rsp+0x30],rbx
   14000bfbe:	mov    rbp,r9
   14000bfc1:	mov    r12,r8
   14000bfc4:	mov    QWORD PTR [rsp+0x38],rsi
   14000bfc9:	mov    rdi,rdx
   14000bfcc:	nop    DWORD PTR [rax+0x0]
   14000bfd0:	mov    ecx,0x18
   14000bfd5:	call   0x140012892
   14000bfda:	mov    rsi,rax
   14000bfdd:	test   rax,rax
   14000bfe0:	je     0x14000c00a
   14000bfe2:	mov    rbx,QWORD PTR [rbp+0x0]
   14000bfe6:	mov    rcx,rax
   14000bfe9:	mov    rdx,rbx
   14000bfec:	call   QWORD PTR [rip+0x8576]        # 0x140014568
   14000bff2:	lea    rdx,[rbx+0x8]
   14000bff6:	lea    rcx,[rsi+0x8]
   14000bffa:	call   QWORD PTR [rip+0x8568]        # 0x140014568
   14000c000:	mov    r11d,DWORD PTR [rbx+0x10]
   14000c004:	mov    DWORD PTR [rsi+0x10],r11d
   14000c008:	jmp    0x14000c00c
   14000c00a:	xor    esi,esi
   14000c00c:	mov    QWORD PTR [rdi],rsi
   14000c00f:	add    rdi,0x8
   14000c013:	add    rbp,0x8
   14000c017:	cmp    rdi,r12
   14000c01a:	jne    0x14000bfd0
   14000c01c:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c021:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c026:	mov    rbp,QWORD PTR [rsp+0x40]
   14000c02b:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c030:	add    rsp,0x20
   14000c034:	pop    r12
   14000c036:	repz ret 
   14000c038:	int3   
   14000c039:	int3   
   14000c03a:	int3   
   14000c03b:	int3   
   14000c03c:	int3   
   14000c03d:	int3   
   14000c03e:	int3   
   14000c03f:	int3   
   14000c040:	cmp    rdx,r8
   14000c043:	je     0x14000c0ce
   14000c049:	mov    QWORD PTR [rsp+0x18],rbp
   14000c04e:	mov    QWORD PTR [rsp+0x20],rdi
   14000c053:	push   r12
   14000c055:	sub    rsp,0x20
   14000c059:	mov    QWORD PTR [rsp+0x30],rbx
   14000c05e:	mov    rbp,r9
   14000c061:	mov    r12,r8
   14000c064:	mov    QWORD PTR [rsp+0x38],rsi
   14000c069:	mov    rdi,rdx
   14000c06c:	nop    DWORD PTR [rax+0x0]
   14000c070:	mov    ecx,0x10
   14000c075:	call   0x140012892
   14000c07a:	mov    rsi,rax
   14000c07d:	test   rax,rax
   14000c080:	je     0x14000c0a2
   14000c082:	mov    rbx,QWORD PTR [rbp+0x0]
   14000c086:	mov    rcx,rax
   14000c089:	mov    rdx,rbx
   14000c08c:	call   QWORD PTR [rip+0x84d6]        # 0x140014568
   14000c092:	lea    rdx,[rbx+0x8]
   14000c096:	lea    rcx,[rsi+0x8]
   14000c09a:	call   QWORD PTR [rip+0x84c8]        # 0x140014568
   14000c0a0:	jmp    0x14000c0a4
   14000c0a2:	xor    esi,esi
   14000c0a4:	mov    QWORD PTR [rdi],rsi
   14000c0a7:	add    rdi,0x8
   14000c0ab:	add    rbp,0x8
   14000c0af:	cmp    rdi,r12
   14000c0b2:	jne    0x14000c070
   14000c0b4:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c0b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c0be:	mov    rbp,QWORD PTR [rsp+0x40]
   14000c0c3:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c0c8:	add    rsp,0x20
   14000c0cc:	pop    r12
   14000c0ce:	repz ret 
   14000c0d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c0d5:	push   rdi
   14000c0d6:	sub    rsp,0x20
   14000c0da:	mov    rax,QWORD PTR [rdx]
   14000c0dd:	mov    rbx,rcx
   14000c0e0:	mov    rdi,rdx
   14000c0e3:	mov    ecx,DWORD PTR [rax]
   14000c0e5:	test   ecx,ecx
   14000c0e7:	je     0x14000c106
   14000c0e9:	cmp    ecx,0xffffffff
   14000c0ec:	je     0x14000c0f2
   14000c0ee:	lock add DWORD PTR [rax],0x1
   14000c0f2:	mov    rax,QWORD PTR [rdx]
   14000c0f5:	mov    QWORD PTR [rbx],rax
   14000c0f8:	mov    rax,rbx
   14000c0fb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c100:	add    rsp,0x20
   14000c104:	pop    rdi
   14000c105:	ret    
   14000c106:	call   QWORD PTR [rip+0x81c4]        # 0x1400142d0
   14000c10c:	mov    QWORD PTR [rbx],rax
   14000c10f:	mov    rcx,QWORD PTR [rdi]
   14000c112:	mov    rcx,QWORD PTR [rcx+0x10]
   14000c116:	test   rcx,rcx
   14000c119:	je     0x14000c149
   14000c11b:	mov    rdx,rax
   14000c11e:	call   0x14000bec0
   14000c123:	mov    rcx,QWORD PTR [rbx]
   14000c126:	mov    QWORD PTR [rcx+0x10],rax
   14000c12a:	mov    rax,QWORD PTR [rbx]
   14000c12d:	mov    rdx,QWORD PTR [rax+0x10]
   14000c131:	add    rax,0x8
   14000c135:	mov    ecx,DWORD PTR [rdx]
   14000c137:	and    ecx,0x3
   14000c13a:	or     rcx,rax
   14000c13d:	mov    QWORD PTR [rdx],rcx
   14000c140:	mov    rcx,QWORD PTR [rbx]
   14000c143:	call   QWORD PTR [rip+0x816f]        # 0x1400142b8
   14000c149:	mov    rax,rbx
   14000c14c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c151:	add    rsp,0x20
   14000c155:	pop    rdi
   14000c156:	ret    
   14000c157:	int3   
   14000c158:	int3   
   14000c159:	int3   
   14000c15a:	int3   
   14000c15b:	int3   
   14000c15c:	int3   
   14000c15d:	int3   
   14000c15e:	int3   
   14000c15f:	int3   
   14000c160:	mov    QWORD PTR [rsp+0x8],rbx
   14000c165:	push   rdi
   14000c166:	sub    rsp,0x20
   14000c16a:	mov    rax,QWORD PTR [rdx]
   14000c16d:	mov    rbx,rcx
   14000c170:	mov    rdi,rdx
   14000c173:	mov    QWORD PTR [rcx],rax
   14000c176:	mov    ecx,DWORD PTR [rax]
   14000c178:	test   ecx,ecx
   14000c17a:	je     0x14000c193
   14000c17c:	cmp    ecx,0xffffffff
   14000c17f:	je     0x14000c1c8
   14000c181:	lock add DWORD PTR [rax],0x1
   14000c185:	mov    rax,rbx
   14000c188:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c18d:	add    rsp,0x20
   14000c191:	pop    rdi
   14000c192:	ret    
   14000c193:	mov    edx,DWORD PTR [rax+0x4]
   14000c196:	mov    rcx,rbx
   14000c199:	call   QWORD PTR [rip+0x8319]        # 0x1400144b8
   14000c19f:	mov    rcx,QWORD PTR [rbx]
   14000c1a2:	mov    r11,QWORD PTR [rdi]
   14000c1a5:	movsxd rax,DWORD PTR [r11+0x8]
   14000c1a9:	lea    r9,[r11+rax*8+0x10]
   14000c1ae:	movsxd rax,DWORD PTR [rcx+0xc]
   14000c1b2:	lea    r8,[rcx+rax*8+0x10]
   14000c1b7:	movsxd rax,DWORD PTR [rcx+0x8]
   14000c1bb:	lea    rdx,[rcx+rax*8+0x10]
   14000c1c0:	mov    rcx,rbx
   14000c1c3:	call   0x14000bfa0
   14000c1c8:	mov    rax,rbx
   14000c1cb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c1d0:	add    rsp,0x20
   14000c1d4:	pop    rdi
   14000c1d5:	ret    
   14000c1d6:	int3   
   14000c1d7:	int3   
   14000c1d8:	int3   
   14000c1d9:	int3   
   14000c1da:	int3   
   14000c1db:	int3   
   14000c1dc:	int3   
   14000c1dd:	int3   
   14000c1de:	int3   
   14000c1df:	int3   
   14000c1e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c1e5:	push   rdi
   14000c1e6:	sub    rsp,0x20
   14000c1ea:	mov    rax,QWORD PTR [rdx]
   14000c1ed:	mov    rbx,rcx
   14000c1f0:	mov    rdi,rdx
   14000c1f3:	mov    QWORD PTR [rcx],rax
   14000c1f6:	mov    ecx,DWORD PTR [rax]
   14000c1f8:	test   ecx,ecx
   14000c1fa:	je     0x14000c213
   14000c1fc:	cmp    ecx,0xffffffff
   14000c1ff:	je     0x14000c248
   14000c201:	lock add DWORD PTR [rax],0x1
   14000c205:	mov    rax,rbx
   14000c208:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c20d:	add    rsp,0x20
   14000c211:	pop    rdi
   14000c212:	ret    
   14000c213:	mov    edx,DWORD PTR [rax+0x4]
   14000c216:	mov    rcx,rbx
   14000c219:	call   QWORD PTR [rip+0x8299]        # 0x1400144b8
   14000c21f:	mov    rcx,QWORD PTR [rbx]
   14000c222:	mov    r11,QWORD PTR [rdi]
   14000c225:	movsxd rax,DWORD PTR [r11+0x8]
   14000c229:	lea    r9,[r11+rax*8+0x10]
   14000c22e:	movsxd rax,DWORD PTR [rcx+0xc]
   14000c232:	lea    r8,[rcx+rax*8+0x10]
   14000c237:	movsxd rax,DWORD PTR [rcx+0x8]
   14000c23b:	lea    rdx,[rcx+rax*8+0x10]
   14000c240:	mov    rcx,rbx
   14000c243:	call   0x14000c040
   14000c248:	mov    rax,rbx
   14000c24b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c250:	add    rsp,0x20
   14000c254:	pop    rdi
   14000c255:	ret    
   14000c256:	int3   
   14000c257:	int3   
   14000c258:	int3   
   14000c259:	int3   
   14000c25a:	int3   
   14000c25b:	int3   
   14000c25c:	int3   
   14000c25d:	int3   
   14000c25e:	int3   
   14000c25f:	int3   
   14000c260:	mov    QWORD PTR [rsp+0x8],rbx
   14000c265:	push   rdi
   14000c266:	sub    rsp,0x20
   14000c26a:	mov    rbx,rcx
   14000c26d:	call   QWORD PTR [rip+0x805d]        # 0x1400142d0
   14000c273:	mov    rdx,QWORD PTR [rbx]
   14000c276:	mov    rcx,QWORD PTR [rdx+0x10]
   14000c27a:	mov    rdi,rax
   14000c27d:	test   rcx,rcx
   14000c280:	je     0x14000c299
   14000c282:	mov    rdx,rax
   14000c285:	call   0x14000bec0
   14000c28a:	lea    rcx,[rdi+0x8]
   14000c28e:	mov    QWORD PTR [rdi+0x10],rax
   14000c292:	and    QWORD PTR [rax],0x3
   14000c296:	or     QWORD PTR [rax],rcx
   14000c299:	mov    rcx,QWORD PTR [rbx]
   14000c29c:	mov    eax,DWORD PTR [rcx]
   14000c29e:	test   eax,eax
   14000c2a0:	je     0x14000c2b2
   14000c2a2:	cmp    eax,0xffffffff
   14000c2a5:	je     0x14000c2ba
   14000c2a7:	lock add DWORD PTR [rcx],0xffffffff
   14000c2ab:	setne  al
   14000c2ae:	test   al,al
   14000c2b0:	jne    0x14000c2ba
   14000c2b2:	mov    rcx,QWORD PTR [rbx]
   14000c2b5:	call   0x140001920
   14000c2ba:	mov    rcx,rdi
   14000c2bd:	mov    QWORD PTR [rbx],rdi
   14000c2c0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c2c5:	add    rsp,0x20
   14000c2c9:	pop    rdi
   14000c2ca:	rex.W jmp QWORD PTR [rip+0x7fe7]        # 0x1400142b8
   14000c2d1:	int3   
   14000c2d2:	int3   
   14000c2d3:	int3   
   14000c2d4:	int3   
   14000c2d5:	int3   
   14000c2d6:	int3   
   14000c2d7:	int3   
   14000c2d8:	int3   
   14000c2d9:	int3   
   14000c2da:	int3   
   14000c2db:	int3   
   14000c2dc:	int3   
   14000c2dd:	int3   
   14000c2de:	int3   
   14000c2df:	int3   
   14000c2e0:	rex push rbx
   14000c2e2:	push   rbp
   14000c2e3:	push   rdi
   14000c2e4:	sub    rsp,0x20
   14000c2e8:	mov    rbx,QWORD PTR [rdx]
   14000c2eb:	mov    rdi,rdx
   14000c2ee:	mov    rbp,rcx
   14000c2f1:	cmp    QWORD PTR [rcx],rbx
   14000c2f4:	je     0x14000c3f0
   14000c2fa:	mov    QWORD PTR [rsp+0x40],rbx
   14000c2ff:	mov    eax,DWORD PTR [rbx]
   14000c301:	test   eax,eax
   14000c303:	je     0x14000c315
   14000c305:	cmp    eax,0xffffffff
   14000c308:	je     0x14000c355
   14000c30a:	lock add DWORD PTR [rbx],0x1
   14000c30e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c313:	jmp    0x14000c355
   14000c315:	mov    edx,DWORD PTR [rbx+0x4]
   14000c318:	lea    rcx,[rsp+0x40]
   14000c31d:	call   QWORD PTR [rip+0x8195]        # 0x1400144b8
   14000c323:	mov    r11,QWORD PTR [rdi]
   14000c326:	movsxd rax,DWORD PTR [r11+0x8]
   14000c32a:	lea    r9,[r11+rax*8+0x10]
   14000c32f:	mov    rax,QWORD PTR [rsp+0x40]
   14000c334:	movsxd rcx,DWORD PTR [rax+0xc]
   14000c338:	lea    r8,[rax+rcx*8+0x10]
   14000c33d:	movsxd rcx,DWORD PTR [rax+0x8]
   14000c341:	lea    rdx,[rax+rcx*8+0x10]
   14000c346:	lea    rcx,[rsp+0x40]
   14000c34b:	call   0x14000bfa0
   14000c350:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c355:	lea    rax,[rsp+0x40]
   14000c35a:	cmp    rax,rbp
   14000c35d:	je     0x14000c36f
   14000c35f:	mov    rax,rbx
   14000c362:	mov    rbx,QWORD PTR [rbp+0x0]
   14000c366:	mov    QWORD PTR [rsp+0x40],rbx
   14000c36b:	mov    QWORD PTR [rbp+0x0],rax
   14000c36f:	mov    eax,DWORD PTR [rbx]
   14000c371:	test   eax,eax
   14000c373:	je     0x14000c38a
   14000c375:	cmp    eax,0xffffffff
   14000c378:	je     0x14000c3f0
   14000c37a:	lock add DWORD PTR [rbx],0xffffffff
   14000c37e:	setne  al
   14000c381:	test   al,al
   14000c383:	jne    0x14000c3f0
   14000c385:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c38a:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c38e:	mov    QWORD PTR [rsp+0x50],r12
   14000c393:	lea    rdi,[rbx+rax*8+0x10]
   14000c398:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c39c:	lea    r12,[rbx+rax*8+0x10]
   14000c3a1:	cmp    r12,rdi
   14000c3a4:	je     0x14000c3e2
   14000c3a6:	mov    QWORD PTR [rsp+0x48],rsi
   14000c3ab:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c3b0:	mov    rsi,QWORD PTR [rdi-0x8]
   14000c3b4:	sub    rdi,0x8
   14000c3b8:	test   rsi,rsi
   14000c3bb:	je     0x14000c3d8
   14000c3bd:	lea    rcx,[rsi+0x8]
   14000c3c1:	call   QWORD PTR [rip+0x8181]        # 0x140014548
   14000c3c7:	mov    rcx,rsi
   14000c3ca:	call   QWORD PTR [rip+0x8178]        # 0x140014548
   14000c3d0:	mov    rcx,rsi
   14000c3d3:	call   0x140012898
   14000c3d8:	cmp    rdi,r12
   14000c3db:	jne    0x14000c3b0
   14000c3dd:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c3e2:	mov    rcx,rbx
   14000c3e5:	call   QWORD PTR [rip+0x80ed]        # 0x1400144d8
   14000c3eb:	mov    r12,QWORD PTR [rsp+0x50]
   14000c3f0:	mov    rax,rbp
   14000c3f3:	add    rsp,0x20
   14000c3f7:	pop    rdi
   14000c3f8:	pop    rbp
   14000c3f9:	pop    rbx
   14000c3fa:	ret    
   14000c3fb:	int3   
   14000c3fc:	int3   
   14000c3fd:	int3   
   14000c3fe:	int3   
   14000c3ff:	int3   
   14000c400:	mov    QWORD PTR [rsp+0x8],rbx
   14000c405:	mov    QWORD PTR [rsp+0x18],rbp
   14000c40a:	mov    QWORD PTR [rsp+0x20],rsi
   14000c40f:	mov    DWORD PTR [rsp+0x10],edx
   14000c413:	push   rdi
   14000c414:	sub    rsp,0x20
   14000c418:	mov    rdx,QWORD PTR [rcx]
   14000c41b:	movsxd rdi,r8d
   14000c41e:	mov    rbp,rcx
   14000c421:	movsxd rax,DWORD PTR [rdx+0x8]
   14000c425:	mov    r8d,edi
   14000c428:	lea    rbx,[rdx+rax*8+0x10]
   14000c42d:	lea    rdx,[rsp+0x38]
   14000c432:	call   QWORD PTR [rip+0x8070]        # 0x1400144a8
   14000c438:	mov    r10,QWORD PTR [rbp+0x0]
   14000c43c:	movsxd rdx,DWORD PTR [rsp+0x38]
   14000c441:	movsxd r9,DWORD PTR [r10+0x8]
   14000c445:	mov    rcx,rbp
   14000c448:	mov    rsi,rax
   14000c44b:	add    rdx,r9
   14000c44e:	lea    r8,[r10+rdx*8+0x10]
   14000c453:	lea    rdx,[r10+r9*8+0x10]
   14000c458:	mov    r9,rbx
   14000c45b:	call   0x14000bfa0
   14000c460:	mov    rdx,QWORD PTR [rbp+0x0]
   14000c464:	movsxd r11,DWORD PTR [rsp+0x38]
   14000c469:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000c46d:	lea    r9,[rbx+r11*8]
   14000c471:	lea    r8,[rdx+rcx*8+0x10]
   14000c476:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c47a:	add    rcx,r11
   14000c47d:	add    rcx,rdi
   14000c480:	lea    rdx,[rdx+rcx*8+0x10]
   14000c485:	mov    rcx,rbp
   14000c488:	call   0x14000bfa0
   14000c48d:	mov    r11d,DWORD PTR [rsi]
   14000c490:	test   r11d,r11d
   14000c493:	je     0x14000c4a6
   14000c495:	cmp    r11d,0xffffffff
   14000c499:	je     0x14000c4b1
   14000c49b:	lock add DWORD PTR [rsi],0xffffffff
   14000c49f:	setne  al
   14000c4a2:	test   al,al
   14000c4a4:	jne    0x14000c4b1
   14000c4a6:	mov    rdx,rsi
   14000c4a9:	mov    rcx,rbp
   14000c4ac:	call   0x140001d50
   14000c4b1:	mov    rdx,QWORD PTR [rbp+0x0]
   14000c4b5:	movsxd rax,DWORD PTR [rsp+0x38]
   14000c4ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c4bf:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c4c3:	mov    rbp,QWORD PTR [rsp+0x40]
   14000c4c8:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c4cd:	add    rcx,rax
   14000c4d0:	lea    rax,[rdx+rcx*8+0x10]
   14000c4d5:	add    rsp,0x20
   14000c4d9:	pop    rdi
   14000c4da:	ret    
   14000c4db:	int3   
   14000c4dc:	int3   
   14000c4dd:	int3   
   14000c4de:	int3   
   14000c4df:	int3   
   14000c4e0:	rex push rbx
   14000c4e2:	push   rbp
   14000c4e3:	push   rdi
   14000c4e4:	sub    rsp,0x20
   14000c4e8:	mov    rbx,QWORD PTR [rdx]
   14000c4eb:	mov    rdi,rdx
   14000c4ee:	mov    rbp,rcx
   14000c4f1:	cmp    QWORD PTR [rcx],rbx
   14000c4f4:	je     0x14000c64b
   14000c4fa:	mov    QWORD PTR [rsp+0x40],rbx
   14000c4ff:	mov    eax,DWORD PTR [rbx]
   14000c501:	mov    QWORD PTR [rsp+0x48],rsi
   14000c506:	mov    QWORD PTR [rsp+0x50],r12
   14000c50b:	test   eax,eax
   14000c50d:	je     0x14000c526
   14000c50f:	cmp    eax,0xffffffff
   14000c512:	je     0x14000c5af
   14000c518:	lock add DWORD PTR [rbx],0x1
   14000c51c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c521:	jmp    0x14000c5af
   14000c526:	mov    edx,DWORD PTR [rbx+0x4]
   14000c529:	lea    rcx,[rsp+0x40]
   14000c52e:	mov    QWORD PTR [rsp+0x58],r13
   14000c533:	call   QWORD PTR [rip+0x7f7f]        # 0x1400144b8
   14000c539:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c53e:	mov    rcx,QWORD PTR [rdi]
   14000c541:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c545:	lea    r13,[rbx+rax*8+0x10]
   14000c54a:	movsxd rax,DWORD PTR [rcx+0x8]
   14000c54e:	lea    r12,[rcx+rax*8+0x10]
   14000c553:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c557:	lea    rsi,[rbx+rax*8+0x10]
   14000c55c:	cmp    rsi,r13
   14000c55f:	je     0x14000c5aa
   14000c561:	mov    ecx,0x10
   14000c566:	call   0x140012892
   14000c56b:	mov    rdi,rax
   14000c56e:	test   rax,rax
   14000c571:	je     0x14000c593
   14000c573:	mov    rbx,QWORD PTR [r12]
   14000c577:	mov    rcx,rax
   14000c57a:	mov    rdx,rbx
   14000c57d:	call   QWORD PTR [rip+0x7fe5]        # 0x140014568
   14000c583:	lea    rdx,[rbx+0x8]
   14000c587:	lea    rcx,[rdi+0x8]
   14000c58b:	call   QWORD PTR [rip+0x7fd7]        # 0x140014568
   14000c591:	jmp    0x14000c595
   14000c593:	xor    edi,edi
   14000c595:	mov    QWORD PTR [rsi],rdi
   14000c598:	add    rsi,0x8
   14000c59c:	add    r12,0x8
   14000c5a0:	cmp    rsi,r13
   14000c5a3:	jne    0x14000c561
   14000c5a5:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c5aa:	mov    r13,QWORD PTR [rsp+0x58]
   14000c5af:	lea    rax,[rsp+0x40]
   14000c5b4:	cmp    rax,rbp
   14000c5b7:	je     0x14000c5c9
   14000c5b9:	mov    rax,rbx
   14000c5bc:	mov    rbx,QWORD PTR [rbp+0x0]
   14000c5c0:	mov    QWORD PTR [rsp+0x40],rbx
   14000c5c5:	mov    QWORD PTR [rbp+0x0],rax
   14000c5c9:	mov    eax,DWORD PTR [rbx]
   14000c5cb:	test   eax,eax
   14000c5cd:	je     0x14000c5e4
   14000c5cf:	cmp    eax,0xffffffff
   14000c5d2:	je     0x14000c636
   14000c5d4:	lock add DWORD PTR [rbx],0xffffffff
   14000c5d8:	setne  al
   14000c5db:	test   al,al
   14000c5dd:	jne    0x14000c636
   14000c5df:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c5e4:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c5e8:	lea    rdi,[rbx+rax*8+0x10]
   14000c5ed:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c5f1:	lea    r12,[rbx+rax*8+0x10]
   14000c5f6:	cmp    r12,rdi
   14000c5f9:	je     0x14000c62d
   14000c5fb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000c600:	mov    rsi,QWORD PTR [rdi-0x8]
   14000c604:	sub    rdi,0x8
   14000c608:	test   rsi,rsi
   14000c60b:	je     0x14000c628
   14000c60d:	lea    rcx,[rsi+0x8]
   14000c611:	call   QWORD PTR [rip+0x7f31]        # 0x140014548
   14000c617:	mov    rcx,rsi
   14000c61a:	call   QWORD PTR [rip+0x7f28]        # 0x140014548
   14000c620:	mov    rcx,rsi
   14000c623:	call   0x140012898
   14000c628:	cmp    rdi,r12
   14000c62b:	jne    0x14000c600
   14000c62d:	mov    rcx,rbx
   14000c630:	call   QWORD PTR [rip+0x7ea2]        # 0x1400144d8
   14000c636:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c63b:	mov    r12,QWORD PTR [rsp+0x50]
   14000c640:	mov    rax,rbp
   14000c643:	add    rsp,0x20
   14000c647:	pop    rdi
   14000c648:	pop    rbp
   14000c649:	pop    rbx
   14000c64a:	ret    
   14000c64b:	mov    rax,rcx
   14000c64e:	add    rsp,0x20
   14000c652:	pop    rdi
   14000c653:	pop    rbp
   14000c654:	pop    rbx
   14000c655:	ret    
   14000c656:	int3   
   14000c657:	int3   
   14000c658:	int3   
   14000c659:	int3   
   14000c65a:	int3   
   14000c65b:	int3   
   14000c65c:	int3   
   14000c65d:	int3   
   14000c65e:	int3   
   14000c65f:	int3   
   14000c660:	mov    QWORD PTR [rsp+0x8],rbx
   14000c665:	mov    QWORD PTR [rsp+0x18],rbp
   14000c66a:	mov    QWORD PTR [rsp+0x20],rsi
   14000c66f:	mov    DWORD PTR [rsp+0x10],edx
   14000c673:	push   rdi
   14000c674:	sub    rsp,0x20
   14000c678:	mov    rdx,QWORD PTR [rcx]
   14000c67b:	movsxd rdi,r8d
   14000c67e:	mov    rbp,rcx
   14000c681:	movsxd rax,DWORD PTR [rdx+0x8]
   14000c685:	mov    r8d,edi
   14000c688:	lea    rbx,[rdx+rax*8+0x10]
   14000c68d:	lea    rdx,[rsp+0x38]
   14000c692:	call   QWORD PTR [rip+0x7e10]        # 0x1400144a8
   14000c698:	mov    r10,QWORD PTR [rbp+0x0]
   14000c69c:	movsxd rdx,DWORD PTR [rsp+0x38]
   14000c6a1:	movsxd r9,DWORD PTR [r10+0x8]
   14000c6a5:	mov    rcx,rbp
   14000c6a8:	mov    rsi,rax
   14000c6ab:	add    rdx,r9
   14000c6ae:	lea    r8,[r10+rdx*8+0x10]
   14000c6b3:	lea    rdx,[r10+r9*8+0x10]
   14000c6b8:	mov    r9,rbx
   14000c6bb:	call   0x14000c040
   14000c6c0:	mov    rdx,QWORD PTR [rbp+0x0]
   14000c6c4:	movsxd r11,DWORD PTR [rsp+0x38]
   14000c6c9:	movsxd rcx,DWORD PTR [rdx+0xc]
   14000c6cd:	lea    r9,[rbx+r11*8]
   14000c6d1:	lea    r8,[rdx+rcx*8+0x10]
   14000c6d6:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c6da:	add    rcx,r11
   14000c6dd:	add    rcx,rdi
   14000c6e0:	lea    rdx,[rdx+rcx*8+0x10]
   14000c6e5:	mov    rcx,rbp
   14000c6e8:	call   0x14000c040
   14000c6ed:	mov    r11d,DWORD PTR [rsi]
   14000c6f0:	test   r11d,r11d
   14000c6f3:	je     0x14000c706
   14000c6f5:	cmp    r11d,0xffffffff
   14000c6f9:	je     0x14000c711
   14000c6fb:	lock add DWORD PTR [rsi],0xffffffff
   14000c6ff:	setne  al
   14000c702:	test   al,al
   14000c704:	jne    0x14000c711
   14000c706:	mov    rdx,rsi
   14000c709:	mov    rcx,rbp
   14000c70c:	call   0x140001d50
   14000c711:	mov    rdx,QWORD PTR [rbp+0x0]
   14000c715:	movsxd rax,DWORD PTR [rsp+0x38]
   14000c71a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c71f:	movsxd rcx,DWORD PTR [rdx+0x8]
   14000c723:	mov    rbp,QWORD PTR [rsp+0x40]
   14000c728:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c72d:	add    rcx,rax
   14000c730:	lea    rax,[rdx+rcx*8+0x10]
   14000c735:	add    rsp,0x20
   14000c739:	pop    rdi
   14000c73a:	ret    
   14000c73b:	int3   
   14000c73c:	int3   
   14000c73d:	int3   
   14000c73e:	int3   
   14000c73f:	int3   
   14000c740:	rex push rbx
   14000c742:	sub    rsp,0x20
   14000c746:	mov    rbx,rdx
   14000c749:	lea    rdx,[rcx+0x10]
   14000c74d:	mov    rcx,rbx
   14000c750:	call   0x14000c160
   14000c755:	mov    rax,rbx
   14000c758:	add    rsp,0x20
   14000c75c:	pop    rbx
   14000c75d:	ret    
   14000c75e:	int3   
   14000c75f:	int3   
   14000c760:	rex push rbx
   14000c762:	sub    rsp,0x20
   14000c766:	mov    rbx,rdx
   14000c769:	lea    rdx,[rcx+0x18]
   14000c76d:	mov    rcx,rbx
   14000c770:	call   0x14000c1e0
   14000c775:	mov    rax,rbx
   14000c778:	add    rsp,0x20
   14000c77c:	pop    rbx
   14000c77d:	ret    
   14000c77e:	int3   
   14000c77f:	int3   
   14000c780:	rex push rbx
   14000c782:	sub    rsp,0x20
   14000c786:	mov    rbx,QWORD PTR [rip+0x7d6b]        # 0x1400144f8
   14000c78d:	lea    rdx,[rsp+0x38]
   14000c792:	mov    QWORD PTR [rsp+0x38],rbx
   14000c797:	call   0x14000c2e0
   14000c79c:	mov    r11d,DWORD PTR [rbx]
   14000c79f:	test   r11d,r11d
   14000c7a2:	je     0x14000c7ba
   14000c7a4:	cmp    r11d,0xffffffff
   14000c7a8:	je     0x14000c825
   14000c7aa:	lock add DWORD PTR [rbx],0xffffffff
   14000c7ae:	setne  al
   14000c7b1:	test   al,al
   14000c7b3:	jne    0x14000c825
   14000c7b5:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c7ba:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c7be:	mov    QWORD PTR [rsp+0x30],rbp
   14000c7c3:	mov    QWORD PTR [rsp+0x48],rdi
   14000c7c8:	lea    rdi,[rbx+rax*8+0x10]
   14000c7cd:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c7d1:	lea    rbp,[rbx+rax*8+0x10]
   14000c7d6:	cmp    rbp,rdi
   14000c7d9:	je     0x14000c812
   14000c7db:	mov    QWORD PTR [rsp+0x40],rsi
   14000c7e0:	mov    rsi,QWORD PTR [rdi-0x8]
   14000c7e4:	sub    rdi,0x8
   14000c7e8:	test   rsi,rsi
   14000c7eb:	je     0x14000c808
   14000c7ed:	lea    rcx,[rsi+0x8]
   14000c7f1:	call   QWORD PTR [rip+0x7d51]        # 0x140014548
   14000c7f7:	mov    rcx,rsi
   14000c7fa:	call   QWORD PTR [rip+0x7d48]        # 0x140014548
   14000c800:	mov    rcx,rsi
   14000c803:	call   0x140012898
   14000c808:	cmp    rdi,rbp
   14000c80b:	jne    0x14000c7e0
   14000c80d:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c812:	mov    rcx,rbx
   14000c815:	call   QWORD PTR [rip+0x7cbd]        # 0x1400144d8
   14000c81b:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c820:	mov    rbp,QWORD PTR [rsp+0x30]
   14000c825:	add    rsp,0x20
   14000c829:	pop    rbx
   14000c82a:	ret    
   14000c82b:	int3   
   14000c82c:	int3   
   14000c82d:	int3   
   14000c82e:	int3   
   14000c82f:	int3   
   14000c830:	rex push rbx
   14000c832:	sub    rsp,0x20
   14000c836:	mov    rbx,QWORD PTR [rip+0x7cbb]        # 0x1400144f8
   14000c83d:	lea    rdx,[rsp+0x38]
   14000c842:	mov    QWORD PTR [rsp+0x38],rbx
   14000c847:	call   0x14000c4e0
   14000c84c:	mov    r11d,DWORD PTR [rbx]
   14000c84f:	test   r11d,r11d
   14000c852:	je     0x14000c86a
   14000c854:	cmp    r11d,0xffffffff
   14000c858:	je     0x14000c8d5
   14000c85a:	lock add DWORD PTR [rbx],0xffffffff
   14000c85e:	setne  al
   14000c861:	test   al,al
   14000c863:	jne    0x14000c8d5
   14000c865:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c86a:	movsxd rax,DWORD PTR [rbx+0xc]
   14000c86e:	mov    QWORD PTR [rsp+0x30],rbp
   14000c873:	mov    QWORD PTR [rsp+0x48],rdi
   14000c878:	lea    rdi,[rbx+rax*8+0x10]
   14000c87d:	movsxd rax,DWORD PTR [rbx+0x8]
   14000c881:	lea    rbp,[rbx+rax*8+0x10]
   14000c886:	cmp    rbp,rdi
   14000c889:	je     0x14000c8c2
   14000c88b:	mov    QWORD PTR [rsp+0x40],rsi
   14000c890:	mov    rsi,QWORD PTR [rdi-0x8]
   14000c894:	sub    rdi,0x8
   14000c898:	test   rsi,rsi
   14000c89b:	je     0x14000c8b8
   14000c89d:	lea    rcx,[rsi+0x8]
   14000c8a1:	call   QWORD PTR [rip+0x7ca1]        # 0x140014548
   14000c8a7:	mov    rcx,rsi
   14000c8aa:	call   QWORD PTR [rip+0x7c98]        # 0x140014548
   14000c8b0:	mov    rcx,rsi
   14000c8b3:	call   0x140012898
   14000c8b8:	cmp    rdi,rbp
   14000c8bb:	jne    0x14000c890
   14000c8bd:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c8c2:	mov    rcx,rbx
   14000c8c5:	call   QWORD PTR [rip+0x7c0d]        # 0x1400144d8
   14000c8cb:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c8d0:	mov    rbp,QWORD PTR [rsp+0x30]
   14000c8d5:	add    rsp,0x20
   14000c8d9:	pop    rbx
   14000c8da:	ret    
   14000c8db:	int3   
   14000c8dc:	int3   
   14000c8dd:	int3   
   14000c8de:	int3   
   14000c8df:	int3   
   14000c8e0:	mov    QWORD PTR [rsp+0x18],rsi
   14000c8e5:	push   rdi
   14000c8e6:	sub    rsp,0x20
   14000c8ea:	mov    rax,QWORD PTR [rdx]
   14000c8ed:	mov    rsi,rdx
   14000c8f0:	mov    rdi,rcx
   14000c8f3:	cmp    QWORD PTR [rcx],rax
   14000c8f6:	je     0x14000c9a2
   14000c8fc:	mov    ecx,DWORD PTR [rax]
   14000c8fe:	mov    QWORD PTR [rsp+0x38],rbx
   14000c903:	test   ecx,ecx
   14000c905:	je     0x14000c91a
   14000c907:	cmp    ecx,0xffffffff
   14000c90a:	je     0x14000c910
   14000c90c:	lock add DWORD PTR [rax],0x1
   14000c910:	mov    rbx,QWORD PTR [rdx]
   14000c913:	mov    QWORD PTR [rsp+0x30],rbx
   14000c918:	jmp    0x14000c954
   14000c91a:	call   QWORD PTR [rip+0x79b0]        # 0x1400142d0
   14000c920:	mov    rbx,rax
   14000c923:	mov    QWORD PTR [rsp+0x30],rax
   14000c928:	mov    rax,QWORD PTR [rsi]
   14000c92b:	mov    rcx,QWORD PTR [rax+0x10]
   14000c92f:	test   rcx,rcx
   14000c932:	je     0x14000c954
   14000c934:	mov    rdx,rbx
   14000c937:	call   0x14000bec0
   14000c93c:	lea    rcx,[rbx+0x8]
   14000c940:	mov    QWORD PTR [rbx+0x10],rax
   14000c944:	and    QWORD PTR [rax],0x3
   14000c948:	or     QWORD PTR [rax],rcx
   14000c94b:	mov    rcx,rbx
   14000c94e:	call   QWORD PTR [rip+0x7964]        # 0x1400142b8
   14000c954:	lea    rax,[rsp+0x30]
   14000c959:	cmp    rax,rdi
   14000c95c:	je     0x14000c96c
   14000c95e:	mov    rax,rbx
   14000c961:	mov    rbx,QWORD PTR [rdi]
   14000c964:	mov    QWORD PTR [rsp+0x30],rbx
   14000c969:	mov    QWORD PTR [rdi],rax
   14000c96c:	mov    eax,DWORD PTR [rbx]
   14000c96e:	test   eax,eax
   14000c970:	je     0x14000c987
   14000c972:	cmp    eax,0xffffffff
   14000c975:	je     0x14000c98f
   14000c977:	lock add DWORD PTR [rbx],0xffffffff
   14000c97b:	setne  al
   14000c97e:	test   al,al
   14000c980:	jne    0x14000c98f
   14000c982:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c987:	mov    rcx,rbx
   14000c98a:	call   0x140001920
   14000c98f:	mov    rax,rdi
   14000c992:	mov    rbx,QWORD PTR [rsp+0x38]
   14000c997:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c99c:	add    rsp,0x20
   14000c9a0:	pop    rdi
   14000c9a1:	ret    
   14000c9a2:	mov    rax,rcx
   14000c9a5:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c9aa:	add    rsp,0x20
   14000c9ae:	pop    rdi
   14000c9af:	ret    
   14000c9b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c9b5:	mov    QWORD PTR [rsp+0x10],rbp
   14000c9ba:	mov    QWORD PTR [rsp+0x18],rsi
   14000c9bf:	push   rdi
   14000c9c0:	push   r12
   14000c9c2:	push   r13
   14000c9c4:	push   r14
   14000c9c6:	push   r15
   14000c9c8:	sub    rsp,0x30
   14000c9cc:	mov    rax,QWORD PTR [rcx]
   14000c9cf:	mov    rbp,rdx
   14000c9d2:	mov    r15,r9
   14000c9d5:	mov    edx,DWORD PTR [rax]
   14000c9d7:	mov    r12,r8
   14000c9da:	mov    r14,rcx
   14000c9dd:	cmp    edx,0x1
   14000c9e0:	je     0x14000c9eb
   14000c9e2:	test   edx,edx
   14000c9e4:	je     0x14000c9eb
   14000c9e6:	call   0x14000c260
   14000c9eb:	mov    rax,QWORD PTR [r14]
   14000c9ee:	xor    esi,esi
   14000c9f0:	mov    dil,0x1
   14000c9f3:	mov    rbx,QWORD PTR [rax+0x10]
   14000c9f7:	lea    r13,[rax+0x8]
   14000c9fb:	test   rbx,rbx
   14000c9fe:	je     0x14000ca55
   14000ca00:	lea    rcx,[rbx+0x18]
   14000ca04:	mov    rdx,r12
   14000ca07:	mov    r13,rbx
   14000ca0a:	call   QWORD PTR [rip+0x78b0]        # 0x1400142c0
   14000ca10:	test   al,al
   14000ca12:	jne    0x14000ca20
   14000ca14:	mov    rsi,rbx
   14000ca17:	mov    rbx,QWORD PTR [rbx+0x8]
   14000ca1b:	mov    dil,0x1
   14000ca1e:	jmp    0x14000ca27
   14000ca20:	mov    rbx,QWORD PTR [rbx+0x10]
   14000ca24:	xor    dil,dil
   14000ca27:	test   rbx,rbx
   14000ca2a:	jne    0x14000ca00
   14000ca2c:	test   rsi,rsi
   14000ca2f:	je     0x14000ca55
   14000ca31:	lea    rdx,[rsi+0x18]
   14000ca35:	mov    rcx,r12
   14000ca38:	call   QWORD PTR [rip+0x7882]        # 0x1400142c0
   14000ca3e:	test   al,al
   14000ca40:	jne    0x14000ca55
   14000ca42:	lea    rcx,[rsi+0x20]
   14000ca46:	mov    rdx,r15
   14000ca49:	call   QWORD PTR [rip+0x7901]        # 0x140014350
   14000ca4f:	mov    QWORD PTR [rbp+0x0],rsi
   14000ca53:	jmp    0x14000ca9a
   14000ca55:	mov    rcx,QWORD PTR [r14]
   14000ca58:	mov    edx,0x28
   14000ca5d:	mov    r9,r13
   14000ca60:	lea    r8d,[rdx-0x20]
   14000ca64:	mov    BYTE PTR [rsp+0x20],dil
   14000ca69:	call   QWORD PTR [rip+0x7859]        # 0x1400142c8
   14000ca6f:	mov    rbx,rax
   14000ca72:	lea    rcx,[rax+0x18]
   14000ca76:	test   rcx,rcx
   14000ca79:	je     0x14000ca84
   14000ca7b:	mov    rdx,r12
   14000ca7e:	call   QWORD PTR [rip+0x7ae4]        # 0x140014568
   14000ca84:	lea    rcx,[rbx+0x20]
   14000ca88:	test   rcx,rcx
   14000ca8b:	je     0x14000ca96
   14000ca8d:	mov    rdx,r15
   14000ca90:	call   QWORD PTR [rip+0x7ad2]        # 0x140014568
   14000ca96:	mov    QWORD PTR [rbp+0x0],rbx
   14000ca9a:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ca9f:	mov    rsi,QWORD PTR [rsp+0x70]
   14000caa4:	mov    rax,rbp
   14000caa7:	mov    rbp,QWORD PTR [rsp+0x68]
   14000caac:	add    rsp,0x30
   14000cab0:	pop    r15
   14000cab2:	pop    r14
   14000cab4:	pop    r13
   14000cab6:	pop    r12
   14000cab8:	pop    rdi
   14000cab9:	ret    
   14000caba:	int3   
   14000cabb:	int3   
   14000cabc:	int3   
   14000cabd:	int3   
   14000cabe:	int3   
   14000cabf:	int3   
   14000cac0:	rex push rbx
   14000cac2:	sub    rsp,0x20
   14000cac6:	mov    rbx,rdx
   14000cac9:	lea    rdx,[rcx+0x8]
   14000cacd:	mov    rcx,rbx
   14000cad0:	call   0x14000c0d0
   14000cad5:	mov    rax,rbx
   14000cad8:	add    rsp,0x20
   14000cadc:	pop    rbx
   14000cadd:	ret    
   14000cade:	int3   
   14000cadf:	int3   
   14000cae0:	mov    QWORD PTR [rsp+0x8],rbx
   14000cae5:	mov    QWORD PTR [rsp+0x10],rsi
   14000caea:	push   rdi
   14000caeb:	sub    rsp,0x20
   14000caef:	mov    rbx,QWORD PTR [rip+0x79f2]        # 0x1400144e8
   14000caf6:	mov    rdi,rcx
   14000caf9:	cmp    QWORD PTR [rcx],rbx
   14000cafc:	je     0x14000cb4b
   14000cafe:	mov    eax,DWORD PTR [rbx+0x10]
   14000cb01:	test   eax,eax
   14000cb03:	je     0x14000cb0f
   14000cb05:	cmp    eax,0xffffffff
   14000cb08:	je     0x14000cb0f
   14000cb0a:	lock add DWORD PTR [rbx+0x10],0x1
   14000cb0f:	mov    rcx,QWORD PTR [rcx]
   14000cb12:	mov    eax,DWORD PTR [rcx+0x10]
   14000cb15:	test   eax,eax
   14000cb17:	je     0x14000cb2a
   14000cb19:	cmp    eax,0xffffffff
   14000cb1c:	je     0x14000cb3a
   14000cb1e:	lock add DWORD PTR [rcx+0x10],0xffffffff
   14000cb23:	setne  al
   14000cb26:	test   al,al
   14000cb28:	jne    0x14000cb3a
   14000cb2a:	mov    rcx,QWORD PTR [rdi]
   14000cb2d:	lea    rdx,[rip+0xffffffffffff4ddc]        # 0x140001910
   14000cb34:	call   QWORD PTR [rip+0x7976]        # 0x1400144b0
   14000cb3a:	mov    QWORD PTR [rdi],rbx
   14000cb3d:	test   BYTE PTR [rbx+0x28],0x1
   14000cb41:	jne    0x14000cb4b
   14000cb43:	mov    rcx,rdi
   14000cb46:	call   0x140006a40
   14000cb4b:	mov    eax,DWORD PTR [rbx+0x10]
   14000cb4e:	test   eax,eax
   14000cb50:	je     0x14000cb63
   14000cb52:	cmp    eax,0xffffffff
   14000cb55:	je     0x14000cb73
   14000cb57:	lock add DWORD PTR [rbx+0x10],0xffffffff
   14000cb5c:	setne  al
   14000cb5f:	test   al,al
   14000cb61:	jne    0x14000cb73
   14000cb63:	lea    rdx,[rip+0xffffffffffff4da6]        # 0x140001910
   14000cb6a:	mov    rcx,rbx
   14000cb6d:	call   QWORD PTR [rip+0x793d]        # 0x1400144b0
   14000cb73:	mov    rbx,QWORD PTR [rsp+0x30]
   14000cb78:	mov    rsi,QWORD PTR [rsp+0x38]
   14000cb7d:	add    rsp,0x20
   14000cb81:	pop    rdi
   14000cb82:	ret    
   14000cb83:	int3   
   14000cb84:	int3   
   14000cb85:	int3   
   14000cb86:	int3   
   14000cb87:	int3   
   14000cb88:	int3   
   14000cb89:	int3   
   14000cb8a:	int3   
   14000cb8b:	int3   
   14000cb8c:	int3   
   14000cb8d:	int3   
   14000cb8e:	int3   
   14000cb8f:	int3   
   14000cb90:	rex push rsi
   14000cb92:	sub    rsp,0xe0
   14000cb99:	mov    rsi,rcx
   14000cb9c:	call   QWORD PTR [rip+0x76b6]        # 0x140014258
   14000cba2:	test   al,al
   14000cba4:	jne    0x14000ce62
   14000cbaa:	mov    QWORD PTR [rsp+0xf0],rbx
   14000cbb2:	mov    QWORD PTR [rsp+0xd0],rdi
   14000cbba:	mov    QWORD PTR [rsp+0xc8],r12
   14000cbc2:	mov    QWORD PTR [rsp+0xc0],r13
   14000cbca:	lea    r12,[rip+0xc2ef]        # 0x140018ec0
   14000cbd1:	lea    r13,[rip+0xc2dc]        # 0x140018eb4
   14000cbd8:	mov    QWORD PTR [rsp+0xd8],rbp
   14000cbe0:	mov    rcx,rsi
   14000cbe3:	call   QWORD PTR [rip+0x7677]        # 0x140014260
   14000cbe9:	mov    rcx,rsi
   14000cbec:	call   QWORD PTR [rip+0x7676]        # 0x140014268
   14000cbf2:	cmp    eax,0x4
   14000cbf5:	jne    0x14000ce1b
   14000cbfb:	or     rcx,0xffffffffffffffff
   14000cbff:	xor    eax,eax
   14000cc01:	mov    rdi,r12
   14000cc04:	repnz scas al,BYTE PTR es:[rdi]
   14000cc06:	mov    QWORD PTR [rsp+0x68],r12
   14000cc0b:	lea    rdx,[rsp+0xa0]
   14000cc13:	not    rcx
   14000cc16:	dec    rcx
   14000cc19:	mov    DWORD PTR [rsp+0x60],ecx
   14000cc1d:	mov    rcx,rsi
   14000cc20:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   14000cc25:	movdqa XMMWORD PTR [rsp+0x90],xmm0
   14000cc2e:	call   QWORD PTR [rip+0x763c]        # 0x140014270
   14000cc34:	lea    rdx,[rsp+0x108]
   14000cc3c:	mov    rcx,rax
   14000cc3f:	call   QWORD PTR [rip+0x7633]        # 0x140014278
   14000cc45:	lea    rdx,[rsp+0x100]
   14000cc4d:	mov    rcx,rax
   14000cc50:	call   QWORD PTR [rip+0x762a]        # 0x140014280
   14000cc56:	lea    rdx,[rsp+0x90]
   14000cc5e:	mov    rcx,rax
   14000cc61:	call   QWORD PTR [rip+0x7621]        # 0x140014288
   14000cc67:	lea    rcx,[rsp+0x100]
   14000cc6f:	movzx  edi,al
   14000cc72:	call   QWORD PTR [rip+0x78d0]        # 0x140014548
   14000cc78:	lea    rcx,[rsp+0x108]
   14000cc80:	call   QWORD PTR [rip+0x78c2]        # 0x140014548
   14000cc86:	test   dil,dil
   14000cc89:	je     0x14000cdf7
   14000cc8f:	or     rcx,0xffffffffffffffff
   14000cc93:	xor    eax,eax
   14000cc95:	mov    rdi,r13
   14000cc98:	repnz scas al,BYTE PTR es:[rdi]
   14000cc9a:	mov    QWORD PTR [rsp+0x58],r13
   14000cc9f:	lea    rdx,[rsp+0x30]
   14000cca4:	not    rcx
   14000cca7:	dec    rcx
   14000ccaa:	mov    DWORD PTR [rsp+0x50],ecx
   14000ccae:	mov    rcx,rsi
   14000ccb1:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000ccb6:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14000ccbf:	call   QWORD PTR [rip+0x75cb]        # 0x140014290
   14000ccc5:	lea    r8,[rsp+0x80]
   14000cccd:	lea    rdx,[rsp+0xb0]
   14000ccd5:	mov    rcx,rax
   14000ccd8:	call   QWORD PTR [rip+0x75ba]        # 0x140014298
   14000ccde:	lea    rdx,[rsp+0x38]
   14000cce3:	mov    rcx,rax
   14000cce6:	call   QWORD PTR [rip+0x758c]        # 0x140014278
   14000ccec:	lea    rdx,[rsp+0xf8]
   14000ccf4:	mov    rcx,rax
   14000ccf7:	call   QWORD PTR [rip+0x7583]        # 0x140014280
   14000ccfd:	lea    rcx,[rsp+0x38]
   14000cd02:	call   QWORD PTR [rip+0x7840]        # 0x140014548
   14000cd08:	lea    rcx,[rsp+0x30]
   14000cd0d:	call   QWORD PTR [rip+0x758d]        # 0x1400142a0
   14000cd13:	mov    rax,QWORD PTR [rsi+0x8]
   14000cd17:	mov    ecx,DWORD PTR [rax]
   14000cd19:	cmp    ecx,0x1
   14000cd1c:	je     0x14000cd2b
   14000cd1e:	test   ecx,ecx
   14000cd20:	je     0x14000cd2b
   14000cd22:	lea    rcx,[rsi+0x8]
   14000cd26:	call   0x14000c260
   14000cd2b:	mov    rax,QWORD PTR [rsi+0x8]
   14000cd2f:	mov    rdi,QWORD PTR [rax+0x10]
   14000cd33:	test   rdi,rdi
   14000cd36:	je     0x14000cd89
   14000cd38:	xor    ebx,ebx
   14000cd3a:	nop    WORD PTR [rax+rax*1+0x0]
   14000cd40:	lea    rcx,[rdi+0x18]
   14000cd44:	lea    rdx,[rsp+0xf8]
   14000cd4c:	call   QWORD PTR [rip+0x756e]        # 0x1400142c0
   14000cd52:	test   al,al
   14000cd54:	jne    0x14000cd5f
   14000cd56:	mov    rbx,rdi
   14000cd59:	mov    rdi,QWORD PTR [rdi+0x8]
   14000cd5d:	jmp    0x14000cd63
   14000cd5f:	mov    rdi,QWORD PTR [rdi+0x10]
   14000cd63:	test   rdi,rdi
   14000cd66:	jne    0x14000cd40
   14000cd68:	test   rbx,rbx
   14000cd6b:	je     0x14000cd89
   14000cd6d:	lea    rdx,[rbx+0x18]
   14000cd71:	lea    rcx,[rsp+0xf8]
   14000cd79:	call   QWORD PTR [rip+0x7541]        # 0x1400142c0
   14000cd7f:	test   al,al
   14000cd81:	jne    0x14000cd89
   14000cd83:	add    rbx,0x20
   14000cd87:	jmp    0x14000cdbf
   14000cd89:	lea    rcx,[rsp+0x28]
   14000cd8e:	call   QWORD PTR [rip+0x765c]        # 0x1400143f0
   14000cd94:	lea    r8,[rsp+0xf8]
   14000cd9c:	lea    rdx,[rsp+0x70]
   14000cda1:	lea    rcx,[rsi+0x8]
   14000cda5:	mov    r9,rax
   14000cda8:	call   0x14000c9b0
   14000cdad:	lea    rcx,[rsp+0x28]
   14000cdb2:	mov    rbx,QWORD PTR [rax]
   14000cdb5:	add    rbx,0x20
   14000cdb9:	call   QWORD PTR [rip+0x7789]        # 0x140014548
   14000cdbf:	lea    rdx,[rsp+0x20]
   14000cdc4:	xor    r8d,r8d
   14000cdc7:	mov    rcx,rsi
   14000cdca:	call   QWORD PTR [rip+0x74d8]        # 0x1400142a8
   14000cdd0:	mov    rcx,rbx
   14000cdd3:	mov    rdx,rax
   14000cdd6:	call   QWORD PTR [rip+0x7574]        # 0x140014350
   14000cddc:	lea    rcx,[rsp+0x20]
   14000cde1:	call   QWORD PTR [rip+0x7761]        # 0x140014548
   14000cde7:	lea    rcx,[rsp+0xf8]
   14000cdef:	call   QWORD PTR [rip+0x7753]        # 0x140014548
   14000cdf5:	jmp    0x14000ce29
   14000cdf7:	lea    rcx,[rsp+0x40]
   14000cdfc:	call   QWORD PTR [rip+0x75ee]        # 0x1400143f0
   14000ce02:	mov    rcx,rsi
   14000ce05:	mov    rdx,rax
   14000ce08:	call   QWORD PTR [rip+0x74a2]        # 0x1400142b0
   14000ce0e:	lea    rcx,[rsp+0x40]
   14000ce13:	call   QWORD PTR [rip+0x772f]        # 0x140014548
   14000ce19:	jmp    0x14000ce29
   14000ce1b:	mov    rcx,rsi
   14000ce1e:	call   QWORD PTR [rip+0x7444]        # 0x140014268
   14000ce24:	cmp    eax,0x5
   14000ce27:	je     0x14000ce3a
   14000ce29:	mov    rcx,rsi
   14000ce2c:	call   QWORD PTR [rip+0x7426]        # 0x140014258
   14000ce32:	test   al,al
   14000ce34:	je     0x14000cbe0
   14000ce3a:	mov    rbp,QWORD PTR [rsp+0xd8]
   14000ce42:	mov    rdi,QWORD PTR [rsp+0xd0]
   14000ce4a:	mov    r12,QWORD PTR [rsp+0xc8]
   14000ce52:	mov    rbx,QWORD PTR [rsp+0xf0]
   14000ce5a:	mov    r13,QWORD PTR [rsp+0xc0]
   14000ce62:	add    rsp,0xe0
   14000ce69:	pop    rsi
   14000ce6a:	ret    
   14000ce6b:	int3   
   14000ce6c:	int3   
   14000ce6d:	int3   
   14000ce6e:	int3   
   14000ce6f:	int3   
   14000ce70:	mov    QWORD PTR [rsp+0x10],rbx
   14000ce75:	mov    QWORD PTR [rsp+0x20],rsi
   14000ce7a:	push   rdi
   14000ce7b:	sub    rsp,0x30
   14000ce7f:	mov    rbx,rcx
   14000ce82:	lea    rcx,[rsp+0x50]
   14000ce87:	call   QWORD PTR [rip+0x76db]        # 0x140014568
   14000ce8d:	or     rcx,0xffffffffffffffff
   14000ce91:	lea    rdx,[rip+0xc034]        # 0x140018ecc
   14000ce98:	mov    QWORD PTR [rsp+0x28],rdx
   14000ce9d:	mov    rdi,rdx
   14000cea0:	xor    eax,eax
   14000cea2:	repnz scas al,BYTE PTR es:[rdi]
   14000cea4:	lea    r8d,[rax+0x1]
   14000cea8:	lea    rdx,[rsp+0x20]
   14000cead:	not    rcx
   14000ceb0:	dec    rcx
   14000ceb3:	mov    DWORD PTR [rsp+0x20],ecx
   14000ceb7:	lea    rcx,[rsp+0x50]
   14000cebc:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000cec1:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000cec7:	call   QWORD PTR [rip+0x7373]        # 0x140014240
   14000cecd:	test   al,al
   14000cecf:	je     0x14000cf02
   14000ced1:	or     r9d,0xffffffff
   14000ced5:	lea    rdx,[rsp+0x40]
   14000ceda:	lea    rcx,[rsp+0x50]
   14000cedf:	lea    r8d,[r9+0x3]
   14000cee3:	call   QWORD PTR [rip+0x735f]        # 0x140014248
   14000cee9:	lea    rcx,[rsp+0x50]
   14000ceee:	mov    rdx,rax
   14000cef1:	call   QWORD PTR [rip+0x7459]        # 0x140014350
   14000cef7:	lea    rcx,[rsp+0x40]
   14000cefc:	call   QWORD PTR [rip+0x7646]        # 0x140014548
   14000cf02:	lea    rcx,[rsp+0x40]
   14000cf07:	mov    dl,0x23
   14000cf09:	call   QWORD PTR [rip+0x7509]        # 0x140014418
   14000cf0f:	lea    rcx,[rsp+0x50]
   14000cf14:	mov    r9d,0x1
   14000cf1a:	movzx  edx,WORD PTR [rax]
   14000cf1d:	xor    r8d,r8d
   14000cf20:	call   QWORD PTR [rip+0x7422]        # 0x140014348
   14000cf26:	cmp    eax,0xffffffff
   14000cf29:	jle    0x14000cf57
   14000cf2b:	lea    rdx,[rsp+0x40]
   14000cf30:	lea    rcx,[rsp+0x50]
   14000cf35:	mov    r8d,eax
   14000cf38:	call   QWORD PTR [rip+0x7312]        # 0x140014250
   14000cf3e:	lea    rcx,[rsp+0x50]
   14000cf43:	mov    rdx,rax
   14000cf46:	call   QWORD PTR [rip+0x7404]        # 0x140014350
   14000cf4c:	lea    rcx,[rsp+0x40]
   14000cf51:	call   QWORD PTR [rip+0x75f1]        # 0x140014548
   14000cf57:	mov    rax,QWORD PTR [rbx+0x20]
   14000cf5b:	xor    esi,esi
   14000cf5d:	cmp    DWORD PTR [rax+0x20],esi
   14000cf60:	je     0x14000cf72
   14000cf62:	mov    edx,DWORD PTR [rax+0x24]
   14000cf65:	lea    rcx,[rsp+0x50]
   14000cf6a:	call   QWORD PTR [rip+0x7560]        # 0x1400144d0
   14000cf70:	mov    esi,eax
   14000cf72:	mov    r8,QWORD PTR [rbx+0x20]
   14000cf76:	mov    ecx,DWORD PTR [r8+0x20]
   14000cf7a:	test   ecx,ecx
   14000cf7c:	je     0x14000cfbb
   14000cf7e:	xor    edx,edx
   14000cf80:	mov    eax,esi
   14000cf82:	div    ecx
   14000cf84:	mov    rcx,QWORD PTR [r8+0x8]
   14000cf88:	lea    rdi,[rcx+rdx*8]
   14000cf8c:	mov    rcx,QWORD PTR [rcx+rdx*8]
   14000cf90:	cmp    rcx,r8
   14000cf93:	je     0x14000cfbf
   14000cf95:	cmp    esi,DWORD PTR [rcx+0x8]
   14000cf98:	jne    0x14000cfad
   14000cf9a:	lea    rdx,[rcx+0x10]
   14000cf9e:	lea    rcx,[rsp+0x50]
   14000cfa3:	call   QWORD PTR [rip+0x7537]        # 0x1400144e0
   14000cfa9:	test   al,al
   14000cfab:	jne    0x14000cfbf
   14000cfad:	mov    rdi,QWORD PTR [rdi]
   14000cfb0:	mov    rcx,QWORD PTR [rdi]
   14000cfb3:	cmp    rcx,QWORD PTR [rbx+0x20]
   14000cfb7:	jne    0x14000cf95
   14000cfb9:	jmp    0x14000cfbf
   14000cfbb:	lea    rdi,[rbx+0x20]
   14000cfbf:	mov    rax,QWORD PTR [rbx+0x20]
   14000cfc3:	cmp    QWORD PTR [rdi],rax
   14000cfc6:	jne    0x14000cfdb
   14000cfc8:	lea    r8,[rsp+0x50]
   14000cfcd:	lea    rdx,[rsp+0x40]
   14000cfd2:	lea    rcx,[rbx+0x20]
   14000cfd6:	call   0x140006b70
   14000cfdb:	lea    rcx,[rsp+0x50]
   14000cfe0:	call   QWORD PTR [rip+0x7562]        # 0x140014548
   14000cfe6:	mov    rbx,QWORD PTR [rsp+0x48]
   14000cfeb:	mov    rsi,QWORD PTR [rsp+0x58]
   14000cff0:	add    rsp,0x30
   14000cff4:	pop    rdi
   14000cff5:	ret    
   14000cff6:	int3   
   14000cff7:	int3   
   14000cff8:	int3   
   14000cff9:	int3   
   14000cffa:	int3   
   14000cffb:	int3   
   14000cffc:	int3   
   14000cffd:	int3   
   14000cffe:	int3   
   14000cfff:	int3   
   14000d000:	rex push rbx
   14000d002:	sub    rsp,0x20
   14000d006:	mov    rax,QWORD PTR [rcx+0x20]
   14000d00a:	mov    rbx,rdx
   14000d00d:	mov    QWORD PTR [rdx],rax
   14000d010:	mov    ecx,DWORD PTR [rax+0x10]
   14000d013:	test   ecx,ecx
   14000d015:	je     0x14000d021
   14000d017:	cmp    ecx,0xffffffff
   14000d01a:	je     0x14000d021
   14000d01c:	lock add DWORD PTR [rax+0x10],0x1
   14000d021:	mov    rax,QWORD PTR [rdx]
   14000d024:	test   BYTE PTR [rax+0x28],0x1
   14000d028:	jne    0x14000d03e
   14000d02a:	mov    eax,DWORD PTR [rax+0x10]
   14000d02d:	cmp    eax,0x1
   14000d030:	je     0x14000d03e
   14000d032:	test   eax,eax
   14000d034:	je     0x14000d03e
   14000d036:	mov    rcx,rdx
   14000d039:	call   0x140006a40
   14000d03e:	mov    rax,rbx
   14000d041:	add    rsp,0x20
   14000d045:	pop    rbx
   14000d046:	ret    
   14000d047:	int3   
   14000d048:	int3   
   14000d049:	int3   
   14000d04a:	int3   
   14000d04b:	int3   
   14000d04c:	int3   
   14000d04d:	int3   
   14000d04e:	int3   
   14000d04f:	int3   
   14000d050:	rex push rbx
   14000d052:	push   rbp
   14000d053:	sub    rsp,0x1c8
   14000d05a:	mov    rbx,rcx
   14000d05d:	xor    ebp,ebp
   14000d05f:	call   QWORD PTR [rip+0x71f3]        # 0x140014258
   14000d065:	test   al,al
   14000d067:	jne    0x14000d67c
   14000d06d:	mov    QWORD PTR [rsp+0x1e0],rsi
   14000d075:	mov    QWORD PTR [rsp+0x1b8],r12
   14000d07d:	mov    QWORD PTR [rsp+0x1b0],r13
   14000d085:	mov    QWORD PTR [rsp+0x1a8],r14
   14000d08d:	mov    QWORD PTR [rsp+0x1a0],r15
   14000d095:	lea    r12,[rip+0xbe54]        # 0x140018ef0
   14000d09c:	lea    r15,[rip+0xbe45]        # 0x140018ee8
   14000d0a3:	mov    QWORD PTR [rsp+0x1c0],rdi
   14000d0ab:	lea    rsi,[rip+0xbe2e]        # 0x140018ee0
   14000d0b2:	lea    r13,[rip+0xbe1f]        # 0x140018ed8
   14000d0b9:	lea    r14,[rip+0xbe10]        # 0x140018ed0
   14000d0c0:	mov    rcx,rbx
   14000d0c3:	call   QWORD PTR [rip+0x7197]        # 0x140014260
   14000d0c9:	lea    rdx,[rsp+0x160]
   14000d0d1:	mov    rcx,rbx
   14000d0d4:	call   QWORD PTR [rip+0x7196]        # 0x140014270
   14000d0da:	lea    rdx,[rsp+0x78]
   14000d0df:	mov    rcx,rax
   14000d0e2:	call   QWORD PTR [rip+0x7190]        # 0x140014278
   14000d0e8:	lea    rdx,[rsp+0x1e8]
   14000d0f0:	mov    rcx,rax
   14000d0f3:	call   QWORD PTR [rip+0x7187]        # 0x140014280
   14000d0f9:	lea    rcx,[rsp+0x78]
   14000d0fe:	call   QWORD PTR [rip+0x7444]        # 0x140014548
   14000d104:	mov    rcx,rbx
   14000d107:	call   QWORD PTR [rip+0x715b]        # 0x140014268
   14000d10d:	cmp    eax,0x4
   14000d110:	jne    0x14000d571
   14000d116:	or     rcx,0xffffffffffffffff
   14000d11a:	xor    eax,eax
   14000d11c:	mov    rdi,r12
   14000d11f:	repnz scas al,BYTE PTR es:[rdi]
   14000d121:	mov    QWORD PTR [rsp+0xa8],r12
   14000d129:	lea    rdx,[rsp+0x150]
   14000d131:	not    rcx
   14000d134:	dec    rcx
   14000d137:	mov    DWORD PTR [rsp+0xa0],ecx
   14000d13e:	lea    rcx,[rsp+0x1e8]
   14000d146:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   14000d14e:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   14000d157:	call   QWORD PTR [rip+0x712b]        # 0x140014288
   14000d15d:	test   al,al
   14000d15f:	je     0x14000d36a
   14000d165:	or     rcx,0xffffffffffffffff
   14000d169:	xor    eax,eax
   14000d16b:	mov    rdi,r15
   14000d16e:	repnz scas al,BYTE PTR es:[rdi]
   14000d170:	mov    QWORD PTR [rsp+0xd8],r15
   14000d178:	lea    rdx,[rsp+0x60]
   14000d17d:	not    rcx
   14000d180:	dec    rcx
   14000d183:	mov    DWORD PTR [rsp+0xd0],ecx
   14000d18a:	mov    rcx,rbx
   14000d18d:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   14000d195:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   14000d19e:	call   QWORD PTR [rip+0x70ec]        # 0x140014290
   14000d1a4:	lea    r8,[rsp+0x120]
   14000d1ac:	lea    rdx,[rsp+0x190]
   14000d1b4:	mov    rcx,rax
   14000d1b7:	call   QWORD PTR [rip+0x70db]        # 0x140014298
   14000d1bd:	lea    rdx,[rsp+0x1f0]
   14000d1c5:	mov    rcx,rax
   14000d1c8:	call   QWORD PTR [rip+0x70aa]        # 0x140014278
   14000d1ce:	lea    rcx,[rsp+0x60]
   14000d1d3:	call   QWORD PTR [rip+0x70c7]        # 0x1400142a0
   14000d1d9:	lea    rdx,[rsp+0x1f0]
   14000d1e1:	mov    rcx,rbx
   14000d1e4:	call   0x14000ce70
   14000d1e9:	or     rcx,0xffffffffffffffff
   14000d1ed:	xor    eax,eax
   14000d1ef:	mov    rdi,rsi
   14000d1f2:	mov    QWORD PTR [rsp+0xe8],rsi
   14000d1fa:	lea    rdx,[rsp+0x70]
   14000d1ff:	repnz scas al,BYTE PTR es:[rdi]
   14000d201:	inc    ebp
   14000d203:	not    rcx
   14000d206:	dec    rcx
   14000d209:	mov    DWORD PTR [rsp+0xe0],ecx
   14000d210:	mov    rcx,rbx
   14000d213:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   14000d21b:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14000d224:	call   QWORD PTR [rip+0x7066]        # 0x140014290
   14000d22a:	lea    r8,[rsp+0x130]
   14000d232:	lea    rdx,[rsp+0x180]
   14000d23a:	mov    rcx,rax
   14000d23d:	call   QWORD PTR [rip+0x7055]        # 0x140014298
   14000d243:	lea    rdx,[rsp+0x68]
   14000d248:	mov    rcx,rax
   14000d24b:	call   QWORD PTR [rip+0x7027]        # 0x140014278
   14000d251:	lea    rcx,[rsp+0x30]
   14000d256:	mov    rdx,rax
   14000d259:	call   QWORD PTR [rip+0x7309]        # 0x140014568
   14000d25f:	lea    rdx,[rsp+0x1f0]
   14000d267:	lea    rcx,[rsp+0x38]
   14000d26c:	call   QWORD PTR [rip+0x72f6]        # 0x140014568
   14000d272:	mov    rax,QWORD PTR [rbx+0x10]
   14000d276:	lea    rcx,[rbx+0x10]
   14000d27a:	mov    DWORD PTR [rsp+0x40],ebp
   14000d27e:	mov    edx,DWORD PTR [rax]
   14000d280:	cmp    edx,0x1
   14000d283:	je     0x14000d2de
   14000d285:	test   edx,edx
   14000d287:	je     0x14000d2de
   14000d289:	mov    edx,0x7fffffff
   14000d28e:	mov    r8d,0x1
   14000d294:	call   0x14000c400
   14000d299:	mov    ecx,0x18
   14000d29e:	mov    rsi,rax
   14000d2a1:	call   0x140012892
   14000d2a6:	mov    rdi,rax
   14000d2a9:	test   rax,rax
   14000d2ac:	je     0x14000d2d7
   14000d2ae:	lea    rdx,[rsp+0x30]
   14000d2b3:	mov    rcx,rax
   14000d2b6:	call   QWORD PTR [rip+0x72ac]        # 0x140014568
   14000d2bc:	lea    rcx,[rdi+0x8]
   14000d2c0:	lea    rdx,[rsp+0x38]
   14000d2c5:	call   QWORD PTR [rip+0x729d]        # 0x140014568
   14000d2cb:	mov    edx,DWORD PTR [rsp+0x40]
   14000d2cf:	mov    DWORD PTR [rdi+0x10],edx
   14000d2d2:	mov    QWORD PTR [rsi],rdi
   14000d2d5:	jmp    0x14000d324
   14000d2d7:	xor    edi,edi
   14000d2d9:	mov    QWORD PTR [rsi],rdi
   14000d2dc:	jmp    0x14000d324
   14000d2de:	call   QWORD PTR [rip+0x71bc]        # 0x1400144a0
   14000d2e4:	mov    ecx,0x18
   14000d2e9:	mov    rsi,rax
   14000d2ec:	call   0x140012892
   14000d2f1:	mov    rdi,rax
   14000d2f4:	test   rax,rax
   14000d2f7:	je     0x14000d31f
   14000d2f9:	lea    rdx,[rsp+0x30]
   14000d2fe:	mov    rcx,rax
   14000d301:	call   QWORD PTR [rip+0x7261]        # 0x140014568
   14000d307:	lea    rcx,[rdi+0x8]
   14000d30b:	lea    rdx,[rsp+0x38]
   14000d310:	call   QWORD PTR [rip+0x7252]        # 0x140014568
   14000d316:	mov    edx,DWORD PTR [rsp+0x40]
   14000d31a:	mov    DWORD PTR [rdi+0x10],edx
   14000d31d:	jmp    0x14000d321
   14000d31f:	xor    edi,edi
   14000d321:	mov    QWORD PTR [rsi],rdi
   14000d324:	lea    rcx,[rsp+0x38]
   14000d329:	call   QWORD PTR [rip+0x7219]        # 0x140014548
   14000d32f:	lea    rcx,[rsp+0x30]
   14000d334:	call   QWORD PTR [rip+0x720e]        # 0x140014548
   14000d33a:	lea    rcx,[rsp+0x68]
   14000d33f:	call   QWORD PTR [rip+0x7203]        # 0x140014548
   14000d345:	lea    rcx,[rsp+0x70]
   14000d34a:	call   QWORD PTR [rip+0x6f50]        # 0x1400142a0
   14000d350:	lea    rcx,[rsp+0x1f0]
   14000d358:	call   QWORD PTR [rip+0x71ea]        # 0x140014548
   14000d35e:	lea    rsi,[rip+0xbb7b]        # 0x140018ee0
   14000d365:	jmp    0x14000d61d
   14000d36a:	or     rcx,0xffffffffffffffff
   14000d36e:	xor    eax,eax
   14000d370:	mov    rdi,r13
   14000d373:	repnz scas al,BYTE PTR es:[rdi]
   14000d375:	mov    QWORD PTR [rsp+0xb8],r13
   14000d37d:	lea    rdx,[rsp+0xf0]
   14000d385:	not    rcx
   14000d388:	dec    rcx
   14000d38b:	mov    DWORD PTR [rsp+0xb0],ecx
   14000d392:	lea    rcx,[rsp+0x1e8]
   14000d39a:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   14000d3a2:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   14000d3ab:	call   QWORD PTR [rip+0x6ed7]        # 0x140014288
   14000d3b1:	test   al,al
   14000d3b3:	je     0x14000d54a
   14000d3b9:	or     rcx,0xffffffffffffffff
   14000d3bd:	xor    eax,eax
   14000d3bf:	mov    rdi,r15
   14000d3c2:	repnz scas al,BYTE PTR es:[rdi]
   14000d3c4:	mov    QWORD PTR [rsp+0x98],r15
   14000d3cc:	lea    rdx,[rsp+0x48]
   14000d3d1:	not    rcx
   14000d3d4:	dec    rcx
   14000d3d7:	mov    DWORD PTR [rsp+0x90],ecx
   14000d3de:	mov    rcx,rbx
   14000d3e1:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14000d3e9:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   14000d3f2:	call   QWORD PTR [rip+0x6e98]        # 0x140014290
   14000d3f8:	lea    r8,[rsp+0x140]
   14000d400:	lea    rdx,[rsp+0x170]
   14000d408:	mov    rcx,rax
   14000d40b:	call   QWORD PTR [rip+0x6e87]        # 0x140014298
   14000d411:	lea    rdx,[rsp+0x1f8]
   14000d419:	mov    rcx,rax
   14000d41c:	call   QWORD PTR [rip+0x6e56]        # 0x140014278
   14000d422:	lea    rcx,[rsp+0x48]
   14000d427:	call   QWORD PTR [rip+0x6e73]        # 0x1400142a0
   14000d42d:	lea    rdx,[rsp+0x1f8]
   14000d435:	mov    rcx,rbx
   14000d438:	call   0x14000ce70
   14000d43d:	lea    rdx,[rsp+0x50]
   14000d442:	xor    r8d,r8d
   14000d445:	mov    rcx,rbx
   14000d448:	call   QWORD PTR [rip+0x6e5a]        # 0x1400142a8
   14000d44e:	lea    rcx,[rsp+0x20]
   14000d453:	mov    rdx,rax
   14000d456:	call   QWORD PTR [rip+0x710c]        # 0x140014568
   14000d45c:	lea    rdx,[rsp+0x1f8]
   14000d464:	lea    rcx,[rsp+0x28]
   14000d469:	call   QWORD PTR [rip+0x70f9]        # 0x140014568
   14000d46f:	mov    rax,QWORD PTR [rbx+0x18]
   14000d473:	lea    rcx,[rbx+0x18]
   14000d477:	mov    edx,DWORD PTR [rax]
   14000d479:	cmp    edx,0x1
   14000d47c:	je     0x14000d4d0
   14000d47e:	test   edx,edx
   14000d480:	je     0x14000d4d0
   14000d482:	mov    edx,0x7fffffff
   14000d487:	mov    r8d,0x1
   14000d48d:	call   0x14000c660
   14000d492:	mov    ecx,0x10
   14000d497:	mov    rsi,rax
   14000d49a:	call   0x140012892
   14000d49f:	mov    rdi,rax
   14000d4a2:	test   rax,rax
   14000d4a5:	je     0x14000d4c9
   14000d4a7:	lea    rdx,[rsp+0x20]
   14000d4ac:	mov    rcx,rax
   14000d4af:	call   QWORD PTR [rip+0x70b3]        # 0x140014568
   14000d4b5:	lea    rcx,[rdi+0x8]
   14000d4b9:	lea    rdx,[rsp+0x28]
   14000d4be:	call   QWORD PTR [rip+0x70a4]        # 0x140014568
   14000d4c4:	mov    QWORD PTR [rsi],rdi
   14000d4c7:	jmp    0x14000d50f
   14000d4c9:	xor    edi,edi
   14000d4cb:	mov    QWORD PTR [rsi],rdi
   14000d4ce:	jmp    0x14000d50f
   14000d4d0:	call   QWORD PTR [rip+0x6fca]        # 0x1400144a0
   14000d4d6:	mov    ecx,0x10
   14000d4db:	mov    rsi,rax
   14000d4de:	call   0x140012892
   14000d4e3:	mov    rdi,rax
   14000d4e6:	test   rax,rax
   14000d4e9:	je     0x14000d50a
   14000d4eb:	lea    rdx,[rsp+0x20]
   14000d4f0:	mov    rcx,rax
   14000d4f3:	call   QWORD PTR [rip+0x706f]        # 0x140014568
   14000d4f9:	lea    rcx,[rdi+0x8]
   14000d4fd:	lea    rdx,[rsp+0x28]
   14000d502:	call   QWORD PTR [rip+0x7060]        # 0x140014568
   14000d508:	jmp    0x14000d50c
   14000d50a:	xor    edi,edi
   14000d50c:	mov    QWORD PTR [rsi],rdi
   14000d50f:	lea    rcx,[rsp+0x28]
   14000d514:	call   QWORD PTR [rip+0x702e]        # 0x140014548
   14000d51a:	lea    rcx,[rsp+0x20]
   14000d51f:	call   QWORD PTR [rip+0x7023]        # 0x140014548
   14000d525:	lea    rcx,[rsp+0x50]
   14000d52a:	call   QWORD PTR [rip+0x7018]        # 0x140014548
   14000d530:	lea    rcx,[rsp+0x1f8]
   14000d538:	call   QWORD PTR [rip+0x700a]        # 0x140014548
   14000d53e:	lea    rsi,[rip+0xb99b]        # 0x140018ee0
   14000d545:	jmp    0x14000d61d
   14000d54a:	lea    rcx,[rsp+0x58]
   14000d54f:	call   QWORD PTR [rip+0x6e9b]        # 0x1400143f0
   14000d555:	mov    rcx,rbx
   14000d558:	mov    rdx,rax
   14000d55b:	call   QWORD PTR [rip+0x6d4f]        # 0x1400142b0
   14000d561:	lea    rcx,[rsp+0x58]
   14000d566:	call   QWORD PTR [rip+0x6fdc]        # 0x140014548
   14000d56c:	jmp    0x14000d61d
   14000d571:	mov    rcx,rbx
   14000d574:	call   QWORD PTR [rip+0x6cee]        # 0x140014268
   14000d57a:	cmp    eax,0x5
   14000d57d:	jne    0x14000d61d
   14000d583:	or     rcx,0xffffffffffffffff
   14000d587:	xor    eax,eax
   14000d589:	mov    rdi,r12
   14000d58c:	repnz scas al,BYTE PTR es:[rdi]
   14000d58e:	mov    QWORD PTR [rsp+0x88],r12
   14000d596:	lea    rdx,[rsp+0x110]
   14000d59e:	not    rcx
   14000d5a1:	dec    rcx
   14000d5a4:	mov    DWORD PTR [rsp+0x80],ecx
   14000d5ab:	lea    rcx,[rsp+0x1e8]
   14000d5b3:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14000d5bb:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   14000d5c4:	call   QWORD PTR [rip+0x6cbe]        # 0x140014288
   14000d5ca:	test   al,al
   14000d5cc:	je     0x14000d5d2
   14000d5ce:	dec    ebp
   14000d5d0:	jmp    0x14000d61d
   14000d5d2:	or     rcx,0xffffffffffffffff
   14000d5d6:	xor    eax,eax
   14000d5d8:	mov    rdi,r14
   14000d5db:	repnz scas al,BYTE PTR es:[rdi]
   14000d5dd:	mov    QWORD PTR [rsp+0xc8],r14
   14000d5e5:	lea    rdx,[rsp+0x100]
   14000d5ed:	not    rcx
   14000d5f0:	dec    rcx
   14000d5f3:	mov    DWORD PTR [rsp+0xc0],ecx
   14000d5fa:	lea    rcx,[rsp+0x1e8]
   14000d602:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   14000d60a:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   14000d613:	call   QWORD PTR [rip+0x6c6f]        # 0x140014288
   14000d619:	test   al,al
   14000d61b:	jne    0x14000d63e
   14000d61d:	lea    rcx,[rsp+0x1e8]
   14000d625:	call   QWORD PTR [rip+0x6f1d]        # 0x140014548
   14000d62b:	mov    rcx,rbx
   14000d62e:	call   QWORD PTR [rip+0x6c24]        # 0x140014258
   14000d634:	test   al,al
   14000d636:	je     0x14000d0c0
   14000d63c:	jmp    0x14000d64c
   14000d63e:	lea    rcx,[rsp+0x1e8]
   14000d646:	call   QWORD PTR [rip+0x6efc]        # 0x140014548
   14000d64c:	mov    rdi,QWORD PTR [rsp+0x1c0]
   14000d654:	mov    r13,QWORD PTR [rsp+0x1b0]
   14000d65c:	mov    r12,QWORD PTR [rsp+0x1b8]
   14000d664:	mov    r14,QWORD PTR [rsp+0x1a8]
   14000d66c:	mov    rsi,QWORD PTR [rsp+0x1e0]
   14000d674:	mov    r15,QWORD PTR [rsp+0x1a0]
   14000d67c:	add    rsp,0x1c8
   14000d683:	pop    rbp
   14000d684:	pop    rbx
   14000d685:	ret    
   14000d686:	int3   
   14000d687:	int3   
   14000d688:	int3   
   14000d689:	int3   
   14000d68a:	int3   
   14000d68b:	int3   
   14000d68c:	int3   
   14000d68d:	int3   
   14000d68e:	int3   
   14000d68f:	int3   
   14000d690:	rex push rbx
   14000d692:	sub    rsp,0x140
   14000d699:	mov    rbx,rcx
   14000d69c:	call   QWORD PTR [rip+0x6bb6]        # 0x140014258
   14000d6a2:	test   al,al
   14000d6a4:	jne    0x14000da6d
   14000d6aa:	mov    QWORD PTR [rsp+0x150],rbp
   14000d6b2:	mov    QWORD PTR [rsp+0x128],r12
   14000d6ba:	mov    QWORD PTR [rsp+0x120],r13
   14000d6c2:	mov    QWORD PTR [rsp+0x118],r14
   14000d6ca:	mov    QWORD PTR [rsp+0x110],r15
   14000d6d2:	mov    QWORD PTR [rsp+0x138],rsi
   14000d6da:	mov    QWORD PTR [rsp+0x130],rdi
   14000d6e2:	lea    r13,[rip+0xb80f]        # 0x140018ef8
   14000d6e9:	lea    r12,[rip+0xb7e0]        # 0x140018ed0
   14000d6f0:	lea    r14,[rip+0xb7f1]        # 0x140018ee8
   14000d6f7:	lea    r15,[rip+0xb7e2]        # 0x140018ee0
   14000d6fe:	xor    ebp,ebp
   14000d700:	mov    rcx,rbx
   14000d703:	call   QWORD PTR [rip+0x6b57]        # 0x140014260
   14000d709:	mov    rcx,rbx
   14000d70c:	call   QWORD PTR [rip+0x6b56]        # 0x140014268
   14000d712:	cmp    eax,0x4
   14000d715:	jne    0x14000da24
   14000d71b:	lea    rdx,[rsp+0xe0]
   14000d723:	mov    rcx,rbx
   14000d726:	call   QWORD PTR [rip+0x6b44]        # 0x140014270
   14000d72c:	lea    rdx,[rsp+0x168]
   14000d734:	mov    rcx,rax
   14000d737:	call   QWORD PTR [rip+0x6b3b]        # 0x140014278
   14000d73d:	lea    rdx,[rsp+0x160]
   14000d745:	mov    rcx,rax
   14000d748:	call   QWORD PTR [rip+0x6b32]        # 0x140014280
   14000d74e:	lea    rcx,[rsp+0x168]
   14000d756:	call   QWORD PTR [rip+0x6dec]        # 0x140014548
   14000d75c:	or     rcx,0xffffffffffffffff
   14000d760:	xor    eax,eax
   14000d762:	mov    rdi,r13
   14000d765:	mov    QWORD PTR [rsp+0x78],r13
   14000d76a:	lea    rdx,[rsp+0xd0]
   14000d772:	repnz scas al,BYTE PTR es:[rdi]
   14000d774:	not    rcx
   14000d777:	dec    rcx
   14000d77a:	mov    DWORD PTR [rsp+0x70],ecx
   14000d77e:	lea    rcx,[rsp+0x160]
   14000d786:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000d78b:	movdqa XMMWORD PTR [rsp+0xd0],xmm0
   14000d794:	call   QWORD PTR [rip+0x6aee]        # 0x140014288
   14000d79a:	test   al,al
   14000d79c:	je     0x14000d7ab
   14000d79e:	mov    rcx,rbx
   14000d7a1:	call   0x14000cb90
   14000d7a6:	jmp    0x14000da16
   14000d7ab:	or     rcx,0xffffffffffffffff
   14000d7af:	xor    eax,eax
   14000d7b1:	mov    rdi,r12
   14000d7b4:	repnz scas al,BYTE PTR es:[rdi]
   14000d7b6:	mov    QWORD PTR [rsp+0x88],r12
   14000d7be:	lea    rdx,[rsp+0xc0]
   14000d7c6:	not    rcx
   14000d7c9:	dec    rcx
   14000d7cc:	mov    DWORD PTR [rsp+0x80],ecx
   14000d7d3:	lea    rcx,[rsp+0x160]
   14000d7db:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14000d7e3:	movdqa XMMWORD PTR [rsp+0xc0],xmm0
   14000d7ec:	call   QWORD PTR [rip+0x6a96]        # 0x140014288
   14000d7f2:	test   al,al
   14000d7f4:	je     0x14000d9f4
   14000d7fa:	or     rcx,0xffffffffffffffff
   14000d7fe:	xor    eax,eax
   14000d800:	mov    rdi,r14
   14000d803:	repnz scas al,BYTE PTR es:[rdi]
   14000d805:	mov    QWORD PTR [rsp+0x98],r14
   14000d80d:	lea    rdx,[rsp+0x50]
   14000d812:	not    rcx
   14000d815:	dec    rcx
   14000d818:	mov    DWORD PTR [rsp+0x90],ecx
   14000d81f:	mov    rcx,rbx
   14000d822:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14000d82a:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14000d833:	call   QWORD PTR [rip+0x6a57]        # 0x140014290
   14000d839:	lea    r8,[rsp+0xa0]
   14000d841:	lea    rdx,[rsp+0x100]
   14000d849:	mov    rcx,rax
   14000d84c:	call   QWORD PTR [rip+0x6a46]        # 0x140014298
   14000d852:	lea    rdx,[rsp+0x158]
   14000d85a:	mov    rcx,rax
   14000d85d:	call   QWORD PTR [rip+0x6a15]        # 0x140014278
   14000d863:	lea    rcx,[rsp+0x50]
   14000d868:	call   QWORD PTR [rip+0x6a32]        # 0x1400142a0
   14000d86e:	lea    rdx,[rsp+0x158]
   14000d876:	mov    rcx,rbx
   14000d879:	call   0x14000ce70
   14000d87e:	or     rcx,0xffffffffffffffff
   14000d882:	xor    eax,eax
   14000d884:	mov    rdi,r15
   14000d887:	mov    QWORD PTR [rsp+0x68],r15
   14000d88c:	lea    rdx,[rsp+0x38]
   14000d891:	repnz scas al,BYTE PTR es:[rdi]
   14000d893:	not    rcx
   14000d896:	dec    rcx
   14000d899:	mov    DWORD PTR [rsp+0x60],ecx
   14000d89d:	mov    rcx,rbx
   14000d8a0:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   14000d8a5:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   14000d8ae:	call   QWORD PTR [rip+0x69dc]        # 0x140014290
   14000d8b4:	lea    r8,[rsp+0xb0]
   14000d8bc:	lea    rdx,[rsp+0xf0]
   14000d8c4:	mov    rcx,rax
   14000d8c7:	call   QWORD PTR [rip+0x69cb]        # 0x140014298
   14000d8cd:	lea    rdx,[rsp+0x48]
   14000d8d2:	mov    rcx,rax
   14000d8d5:	call   QWORD PTR [rip+0x699d]        # 0x140014278
   14000d8db:	lea    rcx,[rsp+0x20]
   14000d8e0:	mov    rdx,rax
   14000d8e3:	call   QWORD PTR [rip+0x6c7f]        # 0x140014568
   14000d8e9:	lea    rdx,[rsp+0x158]
   14000d8f1:	lea    rcx,[rsp+0x28]
   14000d8f6:	call   QWORD PTR [rip+0x6c6c]        # 0x140014568
   14000d8fc:	mov    rax,QWORD PTR [rbx+0x10]
   14000d900:	lea    rcx,[rbx+0x10]
   14000d904:	mov    DWORD PTR [rsp+0x30],ebp
   14000d908:	mov    edx,DWORD PTR [rax]
   14000d90a:	cmp    edx,0x1
   14000d90d:	je     0x14000d969
   14000d90f:	test   edx,edx
   14000d911:	je     0x14000d969
   14000d913:	mov    edx,0x7fffffff
   14000d918:	mov    r8d,0x1
   14000d91e:	call   0x14000c400
   14000d923:	mov    ecx,0x18
   14000d928:	mov    rsi,rax
   14000d92b:	call   0x140012892
   14000d930:	mov    rdi,rax
   14000d933:	test   rax,rax
   14000d936:	je     0x14000d961
   14000d938:	lea    rdx,[rsp+0x20]
   14000d93d:	mov    rcx,rax
   14000d940:	call   QWORD PTR [rip+0x6c22]        # 0x140014568
   14000d946:	lea    rcx,[rdi+0x8]
   14000d94a:	lea    rdx,[rsp+0x28]
   14000d94f:	call   QWORD PTR [rip+0x6c13]        # 0x140014568
   14000d955:	mov    edx,DWORD PTR [rsp+0x30]
   14000d959:	mov    DWORD PTR [rdi+0x10],edx
   14000d95c:	mov    QWORD PTR [rsi],rdi
   14000d95f:	jmp    0x14000d9b0
   14000d961:	mov    rdi,rbp
   14000d964:	mov    QWORD PTR [rsi],rbp
   14000d967:	jmp    0x14000d9b0
   14000d969:	call   QWORD PTR [rip+0x6b31]        # 0x1400144a0
   14000d96f:	mov    ecx,0x18
   14000d974:	mov    rsi,rax
   14000d977:	call   0x140012892
   14000d97c:	mov    rdi,rax
   14000d97f:	test   rax,rax
   14000d982:	je     0x14000d9aa
   14000d984:	lea    rdx,[rsp+0x20]
   14000d989:	mov    rcx,rax
   14000d98c:	call   QWORD PTR [rip+0x6bd6]        # 0x140014568
   14000d992:	lea    rcx,[rdi+0x8]
   14000d996:	lea    rdx,[rsp+0x28]
   14000d99b:	call   QWORD PTR [rip+0x6bc7]        # 0x140014568
   14000d9a1:	mov    edx,DWORD PTR [rsp+0x30]
   14000d9a5:	mov    DWORD PTR [rdi+0x10],edx
   14000d9a8:	jmp    0x14000d9ad
   14000d9aa:	mov    rdi,rbp
   14000d9ad:	mov    QWORD PTR [rsi],rdi
   14000d9b0:	lea    rcx,[rsp+0x28]
   14000d9b5:	call   QWORD PTR [rip+0x6b8d]        # 0x140014548
   14000d9bb:	lea    rcx,[rsp+0x20]
   14000d9c0:	call   QWORD PTR [rip+0x6b82]        # 0x140014548
   14000d9c6:	lea    rcx,[rsp+0x48]
   14000d9cb:	call   QWORD PTR [rip+0x6b77]        # 0x140014548
   14000d9d1:	lea    rcx,[rsp+0x38]
   14000d9d6:	call   QWORD PTR [rip+0x68c4]        # 0x1400142a0
   14000d9dc:	mov    rcx,rbx
   14000d9df:	call   0x14000d050
   14000d9e4:	lea    rcx,[rsp+0x158]
   14000d9ec:	call   QWORD PTR [rip+0x6b56]        # 0x140014548
   14000d9f2:	jmp    0x14000da16
   14000d9f4:	lea    rcx,[rsp+0x40]
   14000d9f9:	call   QWORD PTR [rip+0x69f1]        # 0x1400143f0
   14000d9ff:	mov    rcx,rbx
   14000da02:	mov    rdx,rax
   14000da05:	call   QWORD PTR [rip+0x68a5]        # 0x1400142b0
   14000da0b:	lea    rcx,[rsp+0x40]
   14000da10:	call   QWORD PTR [rip+0x6b32]        # 0x140014548
   14000da16:	lea    rcx,[rsp+0x160]
   14000da1e:	call   QWORD PTR [rip+0x6b24]        # 0x140014548
   14000da24:	mov    rcx,rbx
   14000da27:	call   QWORD PTR [rip+0x682b]        # 0x140014258
   14000da2d:	test   al,al
   14000da2f:	je     0x14000d700
   14000da35:	mov    r15,QWORD PTR [rsp+0x110]
   14000da3d:	mov    r14,QWORD PTR [rsp+0x118]
   14000da45:	mov    r13,QWORD PTR [rsp+0x120]
   14000da4d:	mov    r12,QWORD PTR [rsp+0x128]
   14000da55:	mov    rdi,QWORD PTR [rsp+0x130]
   14000da5d:	mov    rsi,QWORD PTR [rsp+0x138]
   14000da65:	mov    rbp,QWORD PTR [rsp+0x150]
   14000da6d:	add    rsp,0x140
   14000da74:	pop    rbx
   14000da75:	ret    
   14000da76:	int3   
   14000da77:	int3   
   14000da78:	int3   
   14000da79:	int3   
   14000da7a:	int3   
   14000da7b:	int3   
   14000da7c:	int3   
   14000da7d:	int3   
   14000da7e:	int3   
   14000da7f:	int3   
   14000da80:	rex push rbx
   14000da82:	push   rbp
   14000da83:	push   rsi
   14000da84:	push   rdi
   14000da85:	push   r12
   14000da87:	push   r13
   14000da89:	sub    rsp,0x178
   14000da90:	xor    r13d,r13d
   14000da93:	mov    rbp,rdx
   14000da96:	mov    rsi,rcx
   14000da99:	mov    ebx,r13d
   14000da9c:	mov    DWORD PTR [rsp+0x1b0],ebx
   14000daa3:	call   QWORD PTR [rip+0x6787]        # 0x140014230
   14000daa9:	lea    rcx,[rsi+0x10]
   14000daad:	call   0x14000c780
   14000dab2:	lea    rcx,[rsi+0x18]
   14000dab6:	call   0x14000c830
   14000dabb:	mov    rdi,QWORD PTR [rip+0x6a2e]        # 0x1400144f0
   14000dac2:	lea    rcx,[rsi+0x8]
   14000dac6:	lea    rdx,[rsp+0x1c0]
   14000dace:	mov    QWORD PTR [rsp+0x1c0],rdi
   14000dad6:	call   0x14000c8e0
   14000dadb:	mov    r11d,DWORD PTR [rdi]
   14000dade:	test   r11d,r11d
   14000dae1:	je     0x14000dafc
   14000dae3:	cmp    r11d,0xffffffff
   14000dae7:	je     0x14000db04
   14000dae9:	lock add DWORD PTR [rdi],0xffffffff
   14000daed:	setne  al
   14000daf0:	test   al,al
   14000daf2:	jne    0x14000db04
   14000daf4:	mov    rdi,QWORD PTR [rsp+0x1c0]
   14000dafc:	mov    rcx,rdi
   14000daff:	call   0x140001920
   14000db04:	lea    rcx,[rsi+0x20]
   14000db08:	call   0x14000cae0
   14000db0d:	mov    rdx,rbp
   14000db10:	mov    rcx,rsi
   14000db13:	call   QWORD PTR [rip+0x671f]        # 0x140014238
   14000db19:	mov    rcx,rsi
   14000db1c:	call   QWORD PTR [rip+0x6736]        # 0x140014258
   14000db22:	test   al,al
   14000db24:	jne    0x14000dfc6
   14000db2a:	mov    QWORD PTR [rsp+0x1b8],r14
   14000db32:	mov    QWORD PTR [rsp+0x170],r15
   14000db3a:	lea    rbp,[rip+0xb38f]        # 0x140018ed0
   14000db41:	lea    r15,[rip+0xb3c8]        # 0x140018f10
   14000db48:	lea    r14,[rip+0xb3b1]        # 0x140018f00
   14000db4f:	nop
   14000db50:	mov    rcx,rsi
   14000db53:	call   QWORD PTR [rip+0x6707]        # 0x140014260
   14000db59:	mov    rcx,rsi
   14000db5c:	call   QWORD PTR [rip+0x6706]        # 0x140014268
   14000db62:	cmp    eax,0x4
   14000db65:	jne    0x14000dfa5
   14000db6b:	or     rcx,0xffffffffffffffff
   14000db6f:	xor    eax,eax
   14000db71:	mov    rdi,r14
   14000db74:	repnz scas al,BYTE PTR es:[rdi]
   14000db76:	mov    QWORD PTR [rsp+0x98],r14
   14000db7e:	lea    rdx,[rsp+0x160]
   14000db86:	not    rcx
   14000db89:	or     ebx,0x7
   14000db8c:	dec    rcx
   14000db8f:	mov    DWORD PTR [rsp+0x90],ecx
   14000db96:	mov    rcx,rsi
   14000db99:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14000dba1:	movdqa XMMWORD PTR [rsp+0xe0],xmm0
   14000dbaa:	call   QWORD PTR [rip+0x66c0]        # 0x140014270
   14000dbb0:	lea    rdx,[rsp+0x60]
   14000dbb5:	mov    rcx,rax
   14000dbb8:	call   QWORD PTR [rip+0x66ba]        # 0x140014278
   14000dbbe:	lea    rdx,[rsp+0x70]
   14000dbc3:	mov    rcx,rax
   14000dbc6:	call   QWORD PTR [rip+0x66b4]        # 0x140014280
   14000dbcc:	lea    rdx,[rsp+0xe0]
   14000dbd4:	mov    rcx,rax
   14000dbd7:	call   QWORD PTR [rip+0x66ab]        # 0x140014288
   14000dbdd:	test   al,al
   14000dbdf:	je     0x14000dc5e
   14000dbe1:	or     rcx,0xffffffffffffffff
   14000dbe5:	xor    eax,eax
   14000dbe7:	mov    rdi,r15
   14000dbea:	repnz scas al,BYTE PTR es:[rdi]
   14000dbec:	mov    QWORD PTR [rsp+0xb8],r15
   14000dbf4:	lea    rdx,[rsp+0x78]
   14000dbf9:	not    rcx
   14000dbfc:	or     ebx,0x38
   14000dbff:	dec    rcx
   14000dc02:	mov    DWORD PTR [rsp+0xb0],ecx
   14000dc09:	mov    rcx,rsi
   14000dc0c:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   14000dc14:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   14000dc1d:	call   QWORD PTR [rip+0x666d]        # 0x140014290
   14000dc23:	lea    r8,[rsp+0x100]
   14000dc2b:	lea    rdx,[rsp+0x120]
   14000dc33:	mov    rcx,rax
   14000dc36:	call   QWORD PTR [rip+0x665c]        # 0x140014298
   14000dc3c:	lea    rdx,[rsp+0x1c8]
   14000dc44:	mov    rcx,rax
   14000dc47:	call   QWORD PTR [rip+0x662b]        # 0x140014278
   14000dc4d:	mov    rcx,rax
   14000dc50:	call   0x14000bde0
   14000dc55:	test   al,al
   14000dc57:	je     0x14000dc5e
   14000dc59:	mov    dil,0x1
   14000dc5c:	jmp    0x14000dc61
   14000dc5e:	xor    dil,dil
   14000dc61:	test   bl,0x20
   14000dc64:	je     0x14000dc77
   14000dc66:	lea    rcx,[rsp+0x1c8]
   14000dc6e:	and    ebx,0xffffffdf
   14000dc71:	call   QWORD PTR [rip+0x68d1]        # 0x140014548
   14000dc77:	test   bl,0x10
   14000dc7a:	je     0x14000dc7f
   14000dc7c:	and    ebx,0xffffffef
   14000dc7f:	test   bl,0x8
   14000dc82:	je     0x14000dc92
   14000dc84:	lea    rcx,[rsp+0x78]
   14000dc89:	and    ebx,0xfffffff7
   14000dc8c:	call   QWORD PTR [rip+0x660e]        # 0x1400142a0
   14000dc92:	test   bl,0x4
   14000dc95:	je     0x14000dca5
   14000dc97:	lea    rcx,[rsp+0x70]
   14000dc9c:	and    ebx,0xfffffffb
   14000dc9f:	call   QWORD PTR [rip+0x68a3]        # 0x140014548
   14000dca5:	test   bl,0x2
   14000dca8:	je     0x14000dcb8
   14000dcaa:	lea    rcx,[rsp+0x60]
   14000dcaf:	and    ebx,0xfffffffd
   14000dcb2:	call   QWORD PTR [rip+0x6890]        # 0x140014548
   14000dcb8:	test   bl,0x1
   14000dcbb:	je     0x14000dcc0
   14000dcbd:	and    ebx,0xfffffffe
   14000dcc0:	test   dil,dil
   14000dcc3:	je     0x14000dcd2
   14000dcc5:	mov    rcx,rsi
   14000dcc8:	call   0x14000d690
   14000dccd:	jmp    0x14000dfa5
   14000dcd2:	or     rcx,0xffffffffffffffff
   14000dcd6:	xor    eax,eax
   14000dcd8:	mov    rdi,rbp
   14000dcdb:	repnz scas al,BYTE PTR es:[rdi]
   14000dcdd:	mov    QWORD PTR [rsp+0xc8],rbp
   14000dce5:	lea    rdx,[rsp+0x150]
   14000dced:	not    rcx
   14000dcf0:	dec    rcx
   14000dcf3:	mov    DWORD PTR [rsp+0xc0],ecx
   14000dcfa:	mov    rcx,rsi
   14000dcfd:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   14000dd05:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   14000dd0e:	call   QWORD PTR [rip+0x655c]        # 0x140014270
   14000dd14:	lea    rdx,[rsp+0x38]
   14000dd19:	mov    rcx,rax
   14000dd1c:	call   QWORD PTR [rip+0x6556]        # 0x140014278
   14000dd22:	lea    rdx,[rsp+0x50]
   14000dd27:	mov    rcx,rax
   14000dd2a:	call   QWORD PTR [rip+0x6550]        # 0x140014280
   14000dd30:	lea    rdx,[rsp+0x110]
   14000dd38:	mov    rcx,rax
   14000dd3b:	call   QWORD PTR [rip+0x6547]        # 0x140014288
   14000dd41:	lea    rcx,[rsp+0x50]
   14000dd46:	movzx  edi,al
   14000dd49:	call   QWORD PTR [rip+0x67f9]        # 0x140014548
   14000dd4f:	lea    rcx,[rsp+0x38]
   14000dd54:	call   QWORD PTR [rip+0x67ee]        # 0x140014548
   14000dd5a:	test   dil,dil
   14000dd5d:	je     0x14000df83
   14000dd63:	or     rcx,0xffffffffffffffff
   14000dd67:	lea    rdx,[rip+0xb17a]        # 0x140018ee8
   14000dd6e:	xor    eax,eax
   14000dd70:	mov    rdi,rdx
   14000dd73:	mov    QWORD PTR [rsp+0x88],rdx
   14000dd7b:	lea    rdx,[rsp+0x40]
   14000dd80:	repnz scas al,BYTE PTR es:[rdi]
   14000dd82:	not    rcx
   14000dd85:	dec    rcx
   14000dd88:	mov    DWORD PTR [rsp+0x80],ecx
   14000dd8f:	mov    rcx,rsi
   14000dd92:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14000dd9a:	movdqa XMMWORD PTR [rsp+0xd0],xmm0
   14000dda3:	call   QWORD PTR [rip+0x64e7]        # 0x140014290
   14000dda9:	lea    r8,[rsp+0xd0]
   14000ddb1:	lea    rdx,[rsp+0x130]
   14000ddb9:	mov    rcx,rax
   14000ddbc:	call   QWORD PTR [rip+0x64d6]        # 0x140014298
   14000ddc2:	lea    rdx,[rsp+0x1b0]
   14000ddca:	mov    rcx,rax
   14000ddcd:	call   QWORD PTR [rip+0x64a5]        # 0x140014278
   14000ddd3:	lea    rcx,[rsp+0x40]
   14000ddd8:	call   QWORD PTR [rip+0x64c2]        # 0x1400142a0
   14000ddde:	lea    rdx,[rsp+0x1b0]
   14000dde6:	mov    rcx,rsi
   14000dde9:	call   0x14000ce70
   14000ddee:	or     rcx,0xffffffffffffffff
   14000ddf2:	lea    rdx,[rip+0xb0e7]        # 0x140018ee0
   14000ddf9:	mov    rdi,rdx
   14000ddfc:	mov    QWORD PTR [rsp+0xa8],rdx
   14000de04:	xor    eax,eax
   14000de06:	repnz scas al,BYTE PTR es:[rdi]
   14000de08:	lea    rdx,[rsp+0x58]
   14000de0d:	not    rcx
   14000de10:	dec    rcx
   14000de13:	mov    DWORD PTR [rsp+0xa0],ecx
   14000de1a:	mov    rcx,rsi
   14000de1d:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   14000de25:	movdqa XMMWORD PTR [rsp+0xf0],xmm0
   14000de2e:	call   QWORD PTR [rip+0x645c]        # 0x140014290
   14000de34:	lea    r8,[rsp+0xf0]
   14000de3c:	lea    rdx,[rsp+0x140]
   14000de44:	mov    rcx,rax
   14000de47:	call   QWORD PTR [rip+0x644b]        # 0x140014298
   14000de4d:	lea    rdx,[rsp+0x48]
   14000de52:	mov    rcx,rax
   14000de55:	call   QWORD PTR [rip+0x641d]        # 0x140014278
   14000de5b:	lea    rcx,[rsp+0x20]
   14000de60:	mov    rdx,rax
   14000de63:	call   QWORD PTR [rip+0x66ff]        # 0x140014568
   14000de69:	lea    rdx,[rsp+0x1b0]
   14000de71:	lea    rcx,[rsp+0x28]
   14000de76:	call   QWORD PTR [rip+0x66ec]        # 0x140014568
   14000de7c:	mov    rax,QWORD PTR [rsi+0x10]
   14000de80:	mov    DWORD PTR [rsp+0x30],r13d
   14000de85:	mov    ecx,DWORD PTR [rax]
   14000de87:	cmp    ecx,0x1
   14000de8a:	je     0x14000deec
   14000de8c:	test   ecx,ecx
   14000de8e:	je     0x14000deec
   14000de90:	lea    rcx,[rsi+0x10]
   14000de94:	mov    edx,0x7fffffff
   14000de99:	mov    r8d,0x1
   14000de9f:	call   0x14000c400
   14000dea4:	mov    ecx,0x18
   14000dea9:	mov    rbp,rax
   14000deac:	call   0x140012892
   14000deb1:	mov    rdi,rax
   14000deb4:	test   rax,rax
   14000deb7:	je     0x14000dee3
   14000deb9:	lea    rdx,[rsp+0x20]
   14000debe:	mov    rcx,rax
   14000dec1:	call   QWORD PTR [rip+0x66a1]        # 0x140014568
   14000dec7:	lea    rcx,[rdi+0x8]
   14000decb:	lea    rdx,[rsp+0x28]
   14000ded0:	call   QWORD PTR [rip+0x6692]        # 0x140014568
   14000ded6:	mov    edx,DWORD PTR [rsp+0x30]
   14000deda:	mov    DWORD PTR [rdi+0x10],edx
   14000dedd:	mov    QWORD PTR [rbp+0x0],rdi
   14000dee1:	jmp    0x14000df38
   14000dee3:	mov    rdi,r13
   14000dee6:	mov    QWORD PTR [rbp+0x0],r13
   14000deea:	jmp    0x14000df38
   14000deec:	lea    rcx,[rsi+0x10]
   14000def0:	call   QWORD PTR [rip+0x65aa]        # 0x1400144a0
   14000def6:	mov    ecx,0x18
   14000defb:	mov    rbp,rax
   14000defe:	call   0x140012892
   14000df03:	mov    rdi,rax
   14000df06:	test   rax,rax
   14000df09:	je     0x14000df31
   14000df0b:	lea    rdx,[rsp+0x20]
   14000df10:	mov    rcx,rax
   14000df13:	call   QWORD PTR [rip+0x664f]        # 0x140014568
   14000df19:	lea    rcx,[rdi+0x8]
   14000df1d:	lea    rdx,[rsp+0x28]
   14000df22:	call   QWORD PTR [rip+0x6640]        # 0x140014568
   14000df28:	mov    edx,DWORD PTR [rsp+0x30]
   14000df2c:	mov    DWORD PTR [rdi+0x10],edx
   14000df2f:	jmp    0x14000df34
   14000df31:	mov    rdi,r13
   14000df34:	mov    QWORD PTR [rbp+0x0],rdi
   14000df38:	lea    rcx,[rsp+0x28]
   14000df3d:	call   QWORD PTR [rip+0x6605]        # 0x140014548
   14000df43:	lea    rcx,[rsp+0x20]
   14000df48:	call   QWORD PTR [rip+0x65fa]        # 0x140014548
   14000df4e:	lea    rcx,[rsp+0x48]
   14000df53:	call   QWORD PTR [rip+0x65ef]        # 0x140014548
   14000df59:	lea    rcx,[rsp+0x58]
   14000df5e:	call   QWORD PTR [rip+0x633c]        # 0x1400142a0
   14000df64:	mov    rcx,rsi
   14000df67:	call   0x14000d050
   14000df6c:	lea    rcx,[rsp+0x1b0]
   14000df74:	call   QWORD PTR [rip+0x65ce]        # 0x140014548
   14000df7a:	lea    rbp,[rip+0xaf4f]        # 0x140018ed0
   14000df81:	jmp    0x14000dfa5
   14000df83:	lea    rcx,[rsp+0x68]
   14000df88:	call   QWORD PTR [rip+0x6462]        # 0x1400143f0
   14000df8e:	mov    rcx,rsi
   14000df91:	mov    rdx,rax
   14000df94:	call   QWORD PTR [rip+0x6316]        # 0x1400142b0
   14000df9a:	lea    rcx,[rsp+0x68]
   14000df9f:	call   QWORD PTR [rip+0x65a3]        # 0x140014548
   14000dfa5:	mov    rcx,rsi
   14000dfa8:	call   QWORD PTR [rip+0x62aa]        # 0x140014258
   14000dfae:	test   al,al
   14000dfb0:	je     0x14000db50
   14000dfb6:	mov    r15,QWORD PTR [rsp+0x170]
   14000dfbe:	mov    r14,QWORD PTR [rsp+0x1b8]
   14000dfc6:	add    rsp,0x178
   14000dfcd:	pop    r13
   14000dfcf:	pop    r12
   14000dfd1:	pop    rdi
   14000dfd2:	pop    rsi
   14000dfd3:	pop    rbp
   14000dfd4:	pop    rbx
   14000dfd5:	ret    
   14000dfd6:	int3   
   14000dfd7:	int3   
   14000dfd8:	int3   
   14000dfd9:	int3   
   14000dfda:	int3   
   14000dfdb:	int3   
   14000dfdc:	int3   
   14000dfdd:	int3   
   14000dfde:	int3   
   14000dfdf:	int3   
   14000dfe0:	mov    QWORD PTR [rcx+0x18],rdx
   14000dfe4:	ret    
   14000dfe5:	int3   
   14000dfe6:	int3   
   14000dfe7:	int3   
   14000dfe8:	int3   
   14000dfe9:	int3   
   14000dfea:	int3   
   14000dfeb:	int3   
   14000dfec:	int3   
   14000dfed:	int3   
   14000dfee:	int3   
   14000dfef:	int3   
   14000dff0:	rex push rbx
   14000dff2:	sub    rsp,0x20
   14000dff6:	mov    DWORD PTR [rcx+0x38],edx
   14000dff9:	add    rcx,0x40
   14000dffd:	mov    rdx,r8
   14000e000:	mov    rbx,r8
   14000e003:	call   QWORD PTR [rip+0x6347]        # 0x140014350
   14000e009:	mov    rcx,rbx
   14000e00c:	add    rsp,0x20
   14000e010:	pop    rbx
   14000e011:	rex.W jmp QWORD PTR [rip+0x6530]        # 0x140014548
   14000e018:	int3   
   14000e019:	int3   
   14000e01a:	int3   
   14000e01b:	int3   
   14000e01c:	int3   
   14000e01d:	int3   
   14000e01e:	int3   
   14000e01f:	int3   
   14000e020:	add    rcx,0x30
   14000e024:	jmp    0x140001ab0
   14000e029:	int3   
   14000e02a:	int3   
   14000e02b:	int3   
   14000e02c:	int3   
   14000e02d:	int3   
   14000e02e:	int3   
   14000e02f:	int3   
   14000e030:	add    rcx,0x20
   14000e034:	jmp    0x140001ab0
   14000e039:	int3   
   14000e03a:	int3   
   14000e03b:	int3   
   14000e03c:	int3   
   14000e03d:	int3   
   14000e03e:	int3   
   14000e03f:	int3   
   14000e040:	rex push rbx
   14000e042:	push   rbp
   14000e043:	push   rsi
   14000e044:	push   rdi
   14000e045:	push   r13
   14000e047:	sub    rsp,0xe0
   14000e04e:	mov    rbp,rcx
   14000e051:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e055:	lea    rdx,[rsp+0x110]
   14000e05d:	call   0x14000c740
   14000e062:	mov    rsi,QWORD PTR [rsp+0x110]
   14000e06a:	mov    eax,DWORD PTR [rsi+0x8]
   14000e06d:	cmp    DWORD PTR [rsi+0xc],eax
   14000e070:	jne    0x14000e0f2
   14000e076:	mov    eax,DWORD PTR [rsi]
   14000e078:	test   eax,eax
   14000e07a:	je     0x14000e0a5
   14000e07c:	cmp    eax,0xffffffff
   14000e07f:	je     0x14000e4b7
   14000e085:	or     r13,0xffffffffffffffff
   14000e089:	lock xadd DWORD PTR [rsi],r13d
   14000e08e:	add    r13d,0xffffffff
   14000e092:	setne  al
   14000e095:	test   al,al
   14000e097:	jne    0x14000e4b7
   14000e09d:	mov    rsi,QWORD PTR [rsp+0x110]
   14000e0a5:	movsxd rax,DWORD PTR [rsi+0xc]
   14000e0a9:	lea    rbx,[rsi+rax*8+0x10]
   14000e0ae:	movsxd rax,DWORD PTR [rsi+0x8]
   14000e0b2:	lea    rbp,[rsi+rax*8+0x10]
   14000e0b7:	cmp    rbp,rbx
   14000e0ba:	je     0x14000e4ae
   14000e0c0:	mov    rdi,QWORD PTR [rbx-0x8]
   14000e0c4:	sub    rbx,0x8
   14000e0c8:	test   rdi,rdi
   14000e0cb:	je     0x14000e0e8
   14000e0cd:	lea    rcx,[rdi+0x8]
   14000e0d1:	call   QWORD PTR [rip+0x6471]        # 0x140014548
   14000e0d7:	mov    rcx,rdi
   14000e0da:	call   QWORD PTR [rip+0x6468]        # 0x140014548
   14000e0e0:	mov    rcx,rdi
   14000e0e3:	call   0x140012898
   14000e0e8:	cmp    rbx,rbp
   14000e0eb:	jne    0x14000e0c0
   14000e0ed:	jmp    0x14000e4ae
   14000e0f2:	lea    rdx,[rip+0xae1f]        # 0x140018f18
   14000e0f9:	or     r13,0xffffffffffffffff
   14000e0fd:	xor    eax,eax
   14000e0ff:	mov    rdi,rdx
   14000e102:	mov    QWORD PTR [rsp+0x48],rdx
   14000e107:	mov    QWORD PTR [rsp+0xd8],r12
   14000e10f:	mov    rcx,r13
   14000e112:	lea    rdx,[rsp+0x80]
   14000e11a:	mov    QWORD PTR [rsp+0xd0],r14
   14000e122:	repnz scas al,BYTE PTR es:[rdi]
   14000e124:	mov    QWORD PTR [rsp+0xc8],r15
   14000e12c:	mov    ebx,r13d
   14000e12f:	not    rcx
   14000e132:	dec    rcx
   14000e135:	mov    DWORD PTR [rsp+0x40],ecx
   14000e139:	lea    rcx,[rsp+0x118]
   14000e141:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14000e146:	movdqa XMMWORD PTR [rsp+0x80],xmm0
   14000e14f:	call   QWORD PTR [rip+0x63eb]        # 0x140014540
   14000e155:	lea    rdx,[rsp+0x118]
   14000e15d:	mov    rcx,rbp
   14000e160:	call   QWORD PTR [rip+0x60b2]        # 0x140014218
   14000e166:	lea    rcx,[rsp+0x118]
   14000e16e:	call   QWORD PTR [rip+0x63d4]        # 0x140014548
   14000e174:	mov    rdx,QWORD PTR [rsp+0x110]
   14000e17c:	mov    QWORD PTR [rsp+0x20],rdx
   14000e181:	mov    eax,DWORD PTR [rdx]
   14000e183:	test   eax,eax
   14000e185:	je     0x14000e197
   14000e187:	cmp    eax,r13d
   14000e18a:	je     0x14000e1dc
   14000e18c:	lock add DWORD PTR [rdx],0x1
   14000e190:	mov    rdx,QWORD PTR [rsp+0x20]
   14000e195:	jmp    0x14000e1dc
   14000e197:	mov    edx,DWORD PTR [rdx+0x4]
   14000e19a:	lea    rcx,[rsp+0x20]
   14000e19f:	call   QWORD PTR [rip+0x6313]        # 0x1400144b8
   14000e1a5:	mov    rcx,QWORD PTR [rsp+0x20]
   14000e1aa:	mov    rdx,QWORD PTR [rsp+0x110]
   14000e1b2:	movsxd rax,DWORD PTR [rdx+0x8]
   14000e1b6:	lea    r9,[rdx+rax*8+0x10]
   14000e1bb:	movsxd rax,DWORD PTR [rcx+0xc]
   14000e1bf:	lea    r8,[rcx+rax*8+0x10]
   14000e1c4:	movsxd rax,DWORD PTR [rcx+0x8]
   14000e1c8:	lea    rdx,[rcx+rax*8+0x10]
   14000e1cd:	lea    rcx,[rsp+0x20]
   14000e1d2:	call   0x14000bfa0
   14000e1d7:	mov    rdx,QWORD PTR [rsp+0x20]
   14000e1dc:	mov    DWORD PTR [rsp+0x28],0x0
   14000e1e4:	movsxd rax,DWORD PTR [rdx+0x8]
   14000e1e8:	lea    r12,[rip+0xad01]        # 0x140018ef0
   14000e1ef:	lea    rcx,[rdx+rax*8+0x10]
   14000e1f4:	lea    r14,[rip+0xace5]        # 0x140018ee0
   14000e1fb:	lea    r15,[rip+0xace6]        # 0x140018ee8
   14000e202:	mov    QWORD PTR [rsp+0x30],rcx
   14000e207:	movsxd rax,DWORD PTR [rdx+0xc]
   14000e20b:	lea    rdx,[rdx+rax*8+0x10]
   14000e210:	mov    QWORD PTR [rsp+0x38],rdx
   14000e215:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000e220:	mov    eax,0x1
   14000e225:	mov    DWORD PTR [rsp+0x28],eax
   14000e229:	cmp    rcx,rdx
   14000e22c:	je     0x14000e38e
   14000e232:	mov    rsi,QWORD PTR [rcx]
   14000e235:	test   eax,eax
   14000e237:	je     0x14000e376
   14000e23d:	cmp    ebx,DWORD PTR [rsi+0x10]
   14000e240:	jl     0x14000e252
   14000e242:	mov    rcx,rbp
   14000e245:	dec    ebx
   14000e247:	call   QWORD PTR [rip+0x5fd3]        # 0x140014220
   14000e24d:	cmp    ebx,DWORD PTR [rsi+0x10]
   14000e250:	jge    0x14000e242
   14000e252:	xor    eax,eax
   14000e254:	mov    rcx,r13
   14000e257:	mov    rdi,r12
   14000e25a:	repnz scas al,BYTE PTR es:[rdi]
   14000e25c:	mov    QWORD PTR [rsp+0x78],r12
   14000e261:	lea    rdx,[rsp+0xb0]
   14000e269:	not    rcx
   14000e26c:	dec    rcx
   14000e26f:	mov    DWORD PTR [rsp+0x70],ecx
   14000e273:	lea    rcx,[rsp+0x120]
   14000e27b:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000e280:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   14000e289:	call   QWORD PTR [rip+0x62b1]        # 0x140014540
   14000e28f:	lea    rdx,[rsp+0x120]
   14000e297:	mov    rcx,rbp
   14000e29a:	call   QWORD PTR [rip+0x5f78]        # 0x140014218
   14000e2a0:	lea    rcx,[rsp+0x120]
   14000e2a8:	call   QWORD PTR [rip+0x629a]        # 0x140014548
   14000e2ae:	xor    eax,eax
   14000e2b0:	mov    rcx,r13
   14000e2b3:	mov    rdi,r14
   14000e2b6:	mov    QWORD PTR [rsp+0x58],r14
   14000e2bb:	lea    rdx,[rsp+0xa0]
   14000e2c3:	repnz scas al,BYTE PTR es:[rdi]
   14000e2c5:	not    rcx
   14000e2c8:	dec    rcx
   14000e2cb:	mov    DWORD PTR [rsp+0x50],ecx
   14000e2cf:	lea    rcx,[rsp+0x128]
   14000e2d7:	movaps xmm0,XMMWORD PTR [rsp+0x50]
   14000e2dc:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14000e2e5:	call   QWORD PTR [rip+0x6255]        # 0x140014540
   14000e2eb:	lea    rdx,[rsp+0x128]
   14000e2f3:	mov    r8,rsi
   14000e2f6:	mov    rcx,rbp
   14000e2f9:	call   QWORD PTR [rip+0x5f29]        # 0x140014228
   14000e2ff:	lea    rcx,[rsp+0x128]
   14000e307:	call   QWORD PTR [rip+0x623b]        # 0x140014548
   14000e30d:	xor    eax,eax
   14000e30f:	mov    rcx,r13
   14000e312:	mov    rdi,r15
   14000e315:	mov    QWORD PTR [rsp+0x68],r15
   14000e31a:	lea    rdx,[rsp+0x90]
   14000e322:	repnz scas al,BYTE PTR es:[rdi]
   14000e324:	not    rcx
   14000e327:	dec    rcx
   14000e32a:	mov    DWORD PTR [rsp+0x60],ecx
   14000e32e:	lea    rcx,[rsp+0x40]
   14000e333:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   14000e338:	movdqa XMMWORD PTR [rsp+0x90],xmm0
   14000e341:	call   QWORD PTR [rip+0x61f9]        # 0x140014540
   14000e347:	lea    r8,[rsi+0x8]
   14000e34b:	lea    rdx,[rsp+0x40]
   14000e350:	mov    rcx,rbp
   14000e353:	call   QWORD PTR [rip+0x5ecf]        # 0x140014228
   14000e359:	lea    rcx,[rsp+0x40]
   14000e35e:	call   QWORD PTR [rip+0x61e4]        # 0x140014548
   14000e364:	mov    eax,DWORD PTR [rsp+0x28]
   14000e368:	mov    ebx,DWORD PTR [rsi+0x10]
   14000e36b:	dec    eax
   14000e36d:	mov    DWORD PTR [rsp+0x28],eax
   14000e371:	jmp    0x14000e235
   14000e376:	mov    rcx,QWORD PTR [rsp+0x30]
   14000e37b:	mov    rdx,QWORD PTR [rsp+0x38]
   14000e380:	add    rcx,0x8
   14000e384:	mov    QWORD PTR [rsp+0x30],rcx
   14000e389:	jmp    0x14000e220
   14000e38e:	mov    r12,QWORD PTR [rsp+0x20]
   14000e393:	mov    r15,QWORD PTR [rsp+0xc8]
   14000e39b:	mov    eax,DWORD PTR [r12]
   14000e39f:	test   eax,eax
   14000e3a1:	je     0x14000e3c0
   14000e3a3:	cmp    eax,0xffffffff
   14000e3a6:	je     0x14000e416
   14000e3a8:	mov    eax,r13d
   14000e3ab:	lock xadd DWORD PTR [r12],eax
   14000e3b1:	add    eax,0xffffffff
   14000e3b4:	setne  al
   14000e3b7:	test   al,al
   14000e3b9:	jne    0x14000e416
   14000e3bb:	mov    r12,QWORD PTR [rsp+0x20]
   14000e3c0:	movsxd rax,DWORD PTR [r12+0xc]
   14000e3c5:	lea    rsi,[r12+rax*8+0x10]
   14000e3ca:	movsxd rax,DWORD PTR [r12+0x8]
   14000e3cf:	lea    r14,[r12+rax*8+0x10]
   14000e3d4:	cmp    r14,rsi
   14000e3d7:	je     0x14000e40d
   14000e3d9:	nop    DWORD PTR [rax+0x0]
   14000e3e0:	mov    rdi,QWORD PTR [rsi-0x8]
   14000e3e4:	sub    rsi,0x8
   14000e3e8:	test   rdi,rdi
   14000e3eb:	je     0x14000e408
   14000e3ed:	lea    rcx,[rdi+0x8]
   14000e3f1:	call   QWORD PTR [rip+0x6151]        # 0x140014548
   14000e3f7:	mov    rcx,rdi
   14000e3fa:	call   QWORD PTR [rip+0x6148]        # 0x140014548
   14000e400:	mov    rcx,rdi
   14000e403:	call   0x140012898
   14000e408:	cmp    rsi,r14
   14000e40b:	jne    0x14000e3e0
   14000e40d:	mov    rcx,r12
   14000e410:	call   QWORD PTR [rip+0x60c2]        # 0x1400144d8
   14000e416:	cmp    ebx,0xffffffff
   14000e419:	mov    r14,QWORD PTR [rsp+0xd0]
   14000e421:	mov    r12,QWORD PTR [rsp+0xd8]
   14000e429:	jl     0x14000e43f
   14000e42b:	lea    edi,[rbx+0x2]
   14000e42e:	xchg   ax,ax
   14000e430:	mov    rcx,rbp
   14000e433:	call   QWORD PTR [rip+0x5de7]        # 0x140014220
   14000e439:	sub    rdi,0x1
   14000e43d:	jne    0x14000e430
   14000e43f:	mov    rsi,QWORD PTR [rsp+0x110]
   14000e447:	mov    eax,DWORD PTR [rsi]
   14000e449:	test   eax,eax
   14000e44b:	je     0x14000e46a
   14000e44d:	cmp    eax,0xffffffff
   14000e450:	je     0x14000e4b7
   14000e452:	lock xadd DWORD PTR [rsi],r13d
   14000e457:	add    r13d,0xffffffff
   14000e45b:	setne  al
   14000e45e:	test   al,al
   14000e460:	jne    0x14000e4b7
   14000e462:	mov    rsi,QWORD PTR [rsp+0x110]
   14000e46a:	movsxd rax,DWORD PTR [rsi+0xc]
   14000e46e:	lea    rbx,[rsi+rax*8+0x10]
   14000e473:	movsxd rax,DWORD PTR [rsi+0x8]
   14000e477:	lea    rbp,[rsi+rax*8+0x10]
   14000e47c:	cmp    rbp,rbx
   14000e47f:	je     0x14000e4ae
   14000e481:	mov    rdi,QWORD PTR [rbx-0x8]
   14000e485:	sub    rbx,0x8
   14000e489:	test   rdi,rdi
   14000e48c:	je     0x14000e4a9
   14000e48e:	lea    rcx,[rdi+0x8]
   14000e492:	call   QWORD PTR [rip+0x60b0]        # 0x140014548
   14000e498:	mov    rcx,rdi
   14000e49b:	call   QWORD PTR [rip+0x60a7]        # 0x140014548
   14000e4a1:	mov    rcx,rdi
   14000e4a4:	call   0x140012898
   14000e4a9:	cmp    rbx,rbp
   14000e4ac:	jne    0x14000e481
   14000e4ae:	mov    rcx,rsi
   14000e4b1:	call   QWORD PTR [rip+0x6021]        # 0x1400144d8
   14000e4b7:	add    rsp,0xe0
   14000e4be:	pop    r13
   14000e4c0:	pop    rdi
   14000e4c1:	pop    rsi
   14000e4c2:	pop    rbp
   14000e4c3:	pop    rbx
   14000e4c4:	ret    
   14000e4c5:	int3   
   14000e4c6:	int3   
   14000e4c7:	int3   
   14000e4c8:	int3   
   14000e4c9:	int3   
   14000e4ca:	int3   
   14000e4cb:	int3   
   14000e4cc:	int3   
   14000e4cd:	int3   
   14000e4ce:	int3   
   14000e4cf:	int3   
   14000e4d0:	rex push rbx
   14000e4d2:	push   rbp
   14000e4d3:	push   rsi
   14000e4d4:	push   rdi
   14000e4d5:	sub    rsp,0x198
   14000e4dc:	mov    rbx,rcx
   14000e4df:	mov    rcx,QWORD PTR [rcx+0x18]
   14000e4e3:	lea    rdx,[rsp+0x1d0]
   14000e4eb:	call   0x14000c760
   14000e4f0:	mov    rbp,QWORD PTR [rsp+0x1d0]
   14000e4f8:	mov    eax,DWORD PTR [rbp+0x8]
   14000e4fb:	cmp    DWORD PTR [rbp+0xc],eax
   14000e4fe:	jne    0x14000e582
   14000e504:	mov    eax,DWORD PTR [rbp+0x0]
   14000e507:	test   eax,eax
   14000e509:	je     0x14000e533
   14000e50b:	cmp    eax,0xffffffff
   14000e50e:	je     0x14000ebf7
   14000e514:	or     rsi,0xffffffffffffffff
   14000e518:	lock xadd DWORD PTR [rbp+0x0],esi
   14000e51d:	add    esi,0xffffffff
   14000e520:	setne  al
   14000e523:	test   al,al
   14000e525:	jne    0x14000ebf7
   14000e52b:	mov    rbp,QWORD PTR [rsp+0x1d0]
   14000e533:	movsxd rax,DWORD PTR [rbp+0xc]
   14000e537:	lea    rbx,[rbp+rax*8+0x10]
   14000e53c:	movsxd rax,DWORD PTR [rbp+0x8]
   14000e540:	lea    rsi,[rbp+rax*8+0x10]
   14000e545:	cmp    rsi,rbx
   14000e548:	je     0x14000ebee
   14000e54e:	xchg   ax,ax
   14000e550:	mov    rdi,QWORD PTR [rbx-0x8]
   14000e554:	sub    rbx,0x8
   14000e558:	test   rdi,rdi
   14000e55b:	je     0x14000e578
   14000e55d:	lea    rcx,[rdi+0x8]
   14000e561:	call   QWORD PTR [rip+0x5fe1]        # 0x140014548
   14000e567:	mov    rcx,rdi
   14000e56a:	call   QWORD PTR [rip+0x5fd8]        # 0x140014548
   14000e570:	mov    rcx,rdi
   14000e573:	call   0x140012898
   14000e578:	cmp    rbx,rsi
   14000e57b:	jne    0x14000e550
   14000e57d:	jmp    0x14000ebee
   14000e582:	lea    rdx,[rip+0xa99f]        # 0x140018f28
   14000e589:	mov    QWORD PTR [rsp+0x190],r12
   14000e591:	xor    eax,eax
   14000e593:	mov    rdi,rdx
   14000e596:	mov    QWORD PTR [rsp+0x98],rdx
   14000e59e:	or     rsi,0xffffffffffffffff
   14000e5a2:	mov    QWORD PTR [rsp+0x188],r13
   14000e5aa:	mov    rcx,rsi
   14000e5ad:	lea    rdx,[rsp+0x160]
   14000e5b5:	repnz scas al,BYTE PTR es:[rdi]
   14000e5b7:	mov    QWORD PTR [rsp+0x180],r14
   14000e5bf:	mov    QWORD PTR [rsp+0x178],r15
   14000e5c7:	not    rcx
   14000e5ca:	dec    rcx
   14000e5cd:	mov    DWORD PTR [rsp+0x90],ecx
   14000e5d4:	lea    rcx,[rsp+0x68]
   14000e5d9:	movaps xmm0,XMMWORD PTR [rsp+0x90]
   14000e5e1:	movdqa XMMWORD PTR [rsp+0x160],xmm0
   14000e5ea:	call   QWORD PTR [rip+0x5f50]        # 0x140014540
   14000e5f0:	lea    rdx,[rsp+0x68]
   14000e5f5:	mov    rcx,rbx
   14000e5f8:	call   QWORD PTR [rip+0x5c1a]        # 0x140014218
   14000e5fe:	lea    rcx,[rsp+0x68]
   14000e603:	call   QWORD PTR [rip+0x5f3f]        # 0x140014548
   14000e609:	mov    rdx,QWORD PTR [rsp+0x1d0]
   14000e611:	mov    QWORD PTR [rsp+0x38],rdx
   14000e616:	mov    eax,DWORD PTR [rdx]
   14000e618:	test   eax,eax
   14000e61a:	je     0x14000e632
   14000e61c:	cmp    eax,esi
   14000e61e:	je     0x14000e6ba
   14000e624:	lock add DWORD PTR [rdx],0x1
   14000e628:	mov    rdx,QWORD PTR [rsp+0x38]
   14000e62d:	jmp    0x14000e6ba
   14000e632:	mov    edx,DWORD PTR [rdx+0x4]
   14000e635:	lea    rcx,[rsp+0x38]
   14000e63a:	call   QWORD PTR [rip+0x5e78]        # 0x1400144b8
   14000e640:	mov    rdx,QWORD PTR [rsp+0x1d0]
   14000e648:	movsxd rax,DWORD PTR [rdx+0x8]
   14000e64c:	lea    r13,[rdx+rax*8+0x10]
   14000e651:	mov    rdx,QWORD PTR [rsp+0x38]
   14000e656:	movsxd rax,DWORD PTR [rdx+0xc]
   14000e65a:	lea    r14,[rdx+rax*8+0x10]
   14000e65f:	movsxd rax,DWORD PTR [rdx+0x8]
   14000e663:	lea    r12,[rdx+rax*8+0x10]
   14000e668:	cmp    r12,r14
   14000e66b:	je     0x14000e6ba
   14000e66d:	nop    DWORD PTR [rax]
   14000e670:	mov    ecx,0x10
   14000e675:	call   0x140012892
   14000e67a:	mov    rbp,rax
   14000e67d:	test   rax,rax
   14000e680:	je     0x14000e6a2
   14000e682:	mov    rdi,QWORD PTR [r13+0x0]
   14000e686:	mov    rcx,rax
   14000e689:	mov    rdx,rdi
   14000e68c:	call   QWORD PTR [rip+0x5ed6]        # 0x140014568
   14000e692:	lea    rdx,[rdi+0x8]
   14000e696:	lea    rcx,[rbp+0x8]
   14000e69a:	call   QWORD PTR [rip+0x5ec8]        # 0x140014568
   14000e6a0:	jmp    0x14000e6a4
   14000e6a2:	xor    ebp,ebp
   14000e6a4:	mov    QWORD PTR [r12],rbp
   14000e6a8:	add    r12,0x8
   14000e6ac:	add    r13,0x8
   14000e6b0:	cmp    r12,r14
   14000e6b3:	jne    0x14000e670
   14000e6b5:	mov    rdx,QWORD PTR [rsp+0x38]
   14000e6ba:	mov    DWORD PTR [rsp+0x40],0x0
   14000e6c2:	movsxd rax,DWORD PTR [rdx+0x8]
   14000e6c6:	lea    r13,[rip+0xa80b]        # 0x140018ed8
   14000e6cd:	lea    rcx,[rdx+rax*8+0x10]
   14000e6d2:	lea    r14,[rip+0xa7db]        # 0x140018eb4
   14000e6d9:	lea    r15,[rip+0xa808]        # 0x140018ee8
   14000e6e0:	mov    QWORD PTR [rsp+0x48],rcx
   14000e6e5:	movsxd rax,DWORD PTR [rdx+0xc]
   14000e6e9:	lea    r12,[rip+0xa830]        # 0x140018f20
   14000e6f0:	lea    rdx,[rdx+rax*8+0x10]
   14000e6f5:	mov    QWORD PTR [rsp+0x50],rdx
   14000e6fa:	nop    WORD PTR [rax+rax*1+0x0]
   14000e700:	mov    eax,0x1
   14000e705:	mov    DWORD PTR [rsp+0x40],eax
   14000e709:	cmp    rcx,rdx
   14000e70c:	je     0x14000eada
   14000e712:	mov    rbp,QWORD PTR [rcx]
   14000e715:	test   eax,eax
   14000e717:	je     0x14000eac2
   14000e71d:	xor    eax,eax
   14000e71f:	mov    rcx,rsi
   14000e722:	mov    rdi,r13
   14000e725:	repnz scas al,BYTE PTR es:[rdi]
   14000e727:	mov    QWORD PTR [rsp+0xc8],r13
   14000e72f:	lea    rdx,[rsp+0x100]
   14000e737:	not    rcx
   14000e73a:	dec    rcx
   14000e73d:	mov    DWORD PTR [rsp+0xc0],ecx
   14000e744:	lea    rcx,[rsp+0x80]
   14000e74c:	movaps xmm0,XMMWORD PTR [rsp+0xc0]
   14000e754:	movdqa XMMWORD PTR [rsp+0x100],xmm0
   14000e75d:	call   QWORD PTR [rip+0x5ddd]        # 0x140014540
   14000e763:	lea    rdx,[rsp+0x80]
   14000e76b:	mov    rcx,rbx
   14000e76e:	call   QWORD PTR [rip+0x5a94]        # 0x140014208
   14000e774:	lea    rcx,[rsp+0x80]
   14000e77c:	call   QWORD PTR [rip+0x5dc6]        # 0x140014548
   14000e782:	xor    eax,eax
   14000e784:	mov    rcx,rsi
   14000e787:	mov    rdi,r14
   14000e78a:	mov    QWORD PTR [rsp+0xa8],r14
   14000e792:	lea    rdx,[rsp+0x150]
   14000e79a:	repnz scas al,BYTE PTR es:[rdi]
   14000e79c:	not    rcx
   14000e79f:	dec    rcx
   14000e7a2:	mov    DWORD PTR [rsp+0xa0],ecx
   14000e7a9:	lea    rcx,[rsp+0x58]
   14000e7ae:	movaps xmm0,XMMWORD PTR [rsp+0xa0]
   14000e7b6:	movdqa XMMWORD PTR [rsp+0x150],xmm0
   14000e7bf:	call   QWORD PTR [rip+0x5d7b]        # 0x140014540
   14000e7c5:	lea    rdx,[rsp+0x58]
   14000e7ca:	mov    r8,rbp
   14000e7cd:	mov    rcx,rbx
   14000e7d0:	call   QWORD PTR [rip+0x5a52]        # 0x140014228
   14000e7d6:	lea    rcx,[rsp+0x58]
   14000e7db:	call   QWORD PTR [rip+0x5d67]        # 0x140014548
   14000e7e1:	xor    eax,eax
   14000e7e3:	mov    rcx,rsi
   14000e7e6:	mov    rdi,r15
   14000e7e9:	mov    QWORD PTR [rsp+0xf8],r15
   14000e7f1:	lea    rdx,[rsp+0x130]
   14000e7f9:	repnz scas al,BYTE PTR es:[rdi]
   14000e7fb:	not    rcx
   14000e7fe:	dec    rcx
   14000e801:	mov    DWORD PTR [rsp+0xf0],ecx
   14000e808:	lea    rcx,[rsp+0x88]
   14000e810:	movaps xmm0,XMMWORD PTR [rsp+0xf0]
   14000e818:	movdqa XMMWORD PTR [rsp+0x130],xmm0
   14000e821:	call   QWORD PTR [rip+0x5d19]        # 0x140014540
   14000e827:	lea    r8,[rbp+0x8]
   14000e82b:	lea    rdx,[rsp+0x88]
   14000e833:	mov    rcx,rbx
   14000e836:	call   QWORD PTR [rip+0x59ec]        # 0x140014228
   14000e83c:	lea    rcx,[rsp+0x88]
   14000e844:	call   QWORD PTR [rip+0x5cfe]        # 0x140014548
   14000e84a:	mov    edx,DWORD PTR [rbx+0x38]
   14000e84d:	cmp    edx,0x1
   14000e850:	jne    0x14000ea21
   14000e856:	lea    rcx,[rsp+0x1c0]
   14000e85e:	mov    dl,0x2f
   14000e860:	call   QWORD PTR [rip+0x5bb2]        # 0x140014418
   14000e866:	lea    rcx,[rbp+0x8]
   14000e86a:	mov    r9d,0x1
   14000e870:	movzx  edx,WORD PTR [rax]
   14000e873:	mov    r8d,esi
   14000e876:	call   QWORD PTR [rip+0x5994]        # 0x140014210
   14000e87c:	lea    rdx,[rsp+0x1d8]
   14000e884:	lea    rcx,[rbp+0x8]
   14000e888:	lea    r8d,[rax+0x1]
   14000e88c:	mov    r9d,esi
   14000e88f:	call   QWORD PTR [rip+0x59b3]        # 0x140014248
   14000e895:	lea    rcx,[rsp+0x1c8]
   14000e89d:	mov    dl,0x2e
   14000e89f:	call   QWORD PTR [rip+0x5b73]        # 0x140014418
   14000e8a5:	lea    rcx,[rsp+0x1d8]
   14000e8ad:	mov    r9d,0x1
   14000e8b3:	movzx  edx,WORD PTR [rax]
   14000e8b6:	mov    r8d,esi
   14000e8b9:	call   QWORD PTR [rip+0x5951]        # 0x140014210
   14000e8bf:	lea    rdx,[rsp+0x90]
   14000e8c7:	lea    rcx,[rsp+0x1d8]
   14000e8cf:	mov    r8d,eax
   14000e8d2:	call   QWORD PTR [rip+0x5978]        # 0x140014250
   14000e8d8:	lea    rcx,[rsp+0x1d8]
   14000e8e0:	mov    rdx,rax
   14000e8e3:	call   QWORD PTR [rip+0x5a67]        # 0x140014350
   14000e8e9:	lea    rcx,[rsp+0x90]
   14000e8f1:	call   QWORD PTR [rip+0x5c51]        # 0x140014548
   14000e8f7:	lea    rdx,[rip+0xa61e]        # 0x140018f1c
   14000e8fe:	xor    eax,eax
   14000e900:	mov    rdi,rdx
   14000e903:	mov    QWORD PTR [rsp+0xe8],rdx
   14000e90b:	mov    rcx,rsi
   14000e90e:	repnz scas al,BYTE PTR es:[rdi]
   14000e910:	lea    rdx,[rsp+0x110]
   14000e918:	not    rcx
   14000e91b:	dec    rcx
   14000e91e:	mov    DWORD PTR [rsp+0xe0],ecx
   14000e925:	lea    rcx,[rsp+0x60]
   14000e92a:	movaps xmm0,XMMWORD PTR [rsp+0xe0]
   14000e932:	movdqa XMMWORD PTR [rsp+0x110],xmm0
   14000e93b:	call   QWORD PTR [rip+0x5bff]        # 0x140014540
   14000e941:	xor    eax,eax
   14000e943:	mov    rcx,rsi
   14000e946:	mov    rdi,r12
   14000e949:	mov    QWORD PTR [rsp+0xb8],r12
   14000e951:	repnz scas al,BYTE PTR es:[rdi]
   14000e953:	lea    rdx,[rsp+0x120]
   14000e95b:	not    rcx
   14000e95e:	dec    rcx
   14000e961:	mov    DWORD PTR [rsp+0xb0],ecx
   14000e968:	lea    rcx,[rsp+0x78]
   14000e96d:	movaps xmm0,XMMWORD PTR [rsp+0xb0]
   14000e975:	movdqa XMMWORD PTR [rsp+0x120],xmm0
   14000e97e:	call   QWORD PTR [rip+0x5bbc]        # 0x140014540
   14000e984:	lea    rdx,[rsp+0x1d8]
   14000e98c:	lea    rcx,[rsp+0x20]
   14000e991:	call   QWORD PTR [rip+0x5bd1]        # 0x140014568
   14000e997:	lea    rdx,[rsp+0x60]
   14000e99c:	lea    rcx,[rsp+0x20]
   14000e9a1:	call   QWORD PTR [rip+0x5bc9]        # 0x140014570
   14000e9a7:	lea    rdx,[rsp+0x20]
   14000e9ac:	lea    rcx,[rsp+0x30]
   14000e9b1:	call   QWORD PTR [rip+0x5bb1]        # 0x140014568
   14000e9b7:	lea    rcx,[rsp+0x30]
   14000e9bc:	mov    rdx,rbp
   14000e9bf:	call   QWORD PTR [rip+0x5bab]        # 0x140014570
   14000e9c5:	lea    r8,[rsp+0x30]
   14000e9ca:	lea    rdx,[rsp+0x78]
   14000e9cf:	mov    rcx,rbx
   14000e9d2:	call   QWORD PTR [rip+0x5850]        # 0x140014228
   14000e9d8:	lea    rcx,[rsp+0x30]
   14000e9dd:	call   QWORD PTR [rip+0x5b65]        # 0x140014548
   14000e9e3:	lea    rcx,[rsp+0x20]
   14000e9e8:	call   QWORD PTR [rip+0x5b5a]        # 0x140014548
   14000e9ee:	lea    rcx,[rsp+0x78]
   14000e9f3:	call   QWORD PTR [rip+0x5b4f]        # 0x140014548
   14000e9f9:	lea    rcx,[rsp+0x60]
   14000e9fe:	call   QWORD PTR [rip+0x5b44]        # 0x140014548
   14000ea04:	lea    rcx,[rsp+0x1d8]
   14000ea0c:	call   QWORD PTR [rip+0x5b36]        # 0x140014548
   14000ea12:	mov    eax,DWORD PTR [rsp+0x40]
   14000ea16:	dec    eax
   14000ea18:	mov    DWORD PTR [rsp+0x40],eax
   14000ea1c:	jmp    0x14000e715
   14000ea21:	cmp    edx,0x2
   14000ea24:	jne    0x14000eab3
   14000ea2a:	xor    eax,eax
   14000ea2c:	mov    rcx,rsi
   14000ea2f:	mov    rdi,r12
   14000ea32:	repnz scas al,BYTE PTR es:[rdi]
   14000ea34:	mov    QWORD PTR [rsp+0xd8],r12
   14000ea3c:	lea    rdx,[rsp+0x140]
   14000ea44:	not    rcx
   14000ea47:	dec    rcx
   14000ea4a:	mov    DWORD PTR [rsp+0xd0],ecx
   14000ea51:	lea    rcx,[rsp+0x70]
   14000ea56:	movaps xmm0,XMMWORD PTR [rsp+0xd0]
   14000ea5e:	movdqa XMMWORD PTR [rsp+0x140],xmm0
   14000ea67:	call   QWORD PTR [rip+0x5ad3]        # 0x140014540
   14000ea6d:	lea    rdx,[rbx+0x40]
   14000ea71:	lea    rcx,[rsp+0x28]
   14000ea76:	call   QWORD PTR [rip+0x5aec]        # 0x140014568
   14000ea7c:	lea    rcx,[rsp+0x28]
   14000ea81:	mov    rdx,rbp
   14000ea84:	call   QWORD PTR [rip+0x5ae6]        # 0x140014570
   14000ea8a:	lea    r8,[rsp+0x28]
   14000ea8f:	lea    rdx,[rsp+0x70]
   14000ea94:	mov    rcx,rbx
   14000ea97:	call   QWORD PTR [rip+0x578b]        # 0x140014228
   14000ea9d:	lea    rcx,[rsp+0x28]
   14000eaa2:	call   QWORD PTR [rip+0x5aa0]        # 0x140014548
   14000eaa8:	lea    rcx,[rsp+0x70]
   14000eaad:	call   QWORD PTR [rip+0x5a95]        # 0x140014548
   14000eab3:	mov    eax,DWORD PTR [rsp+0x40]
   14000eab7:	dec    eax
   14000eab9:	mov    DWORD PTR [rsp+0x40],eax
   14000eabd:	jmp    0x14000e715
   14000eac2:	mov    rcx,QWORD PTR [rsp+0x48]
   14000eac7:	mov    rdx,QWORD PTR [rsp+0x50]
   14000eacc:	add    rcx,0x8
   14000ead0:	mov    QWORD PTR [rsp+0x48],rcx
   14000ead5:	jmp    0x14000e700
   14000eada:	mov    r12,QWORD PTR [rsp+0x38]
   14000eadf:	mov    r15,QWORD PTR [rsp+0x178]
   14000eae7:	mov    r14,QWORD PTR [rsp+0x180]
   14000eaef:	mov    eax,DWORD PTR [r12]
   14000eaf3:	test   eax,eax
   14000eaf5:	je     0x14000eb13
   14000eaf7:	cmp    eax,0xffffffff
   14000eafa:	je     0x14000eb66
   14000eafc:	mov    eax,esi
   14000eafe:	lock xadd DWORD PTR [r12],eax
   14000eb04:	add    eax,0xffffffff
   14000eb07:	setne  al
   14000eb0a:	test   al,al
   14000eb0c:	jne    0x14000eb66
   14000eb0e:	mov    r12,QWORD PTR [rsp+0x38]
   14000eb13:	movsxd rax,DWORD PTR [r12+0xc]
   14000eb18:	lea    rbp,[r12+rax*8+0x10]
   14000eb1d:	movsxd rax,DWORD PTR [r12+0x8]
   14000eb22:	lea    r13,[r12+rax*8+0x10]
   14000eb27:	cmp    r13,rbp
   14000eb2a:	je     0x14000eb5d
   14000eb2c:	nop    DWORD PTR [rax+0x0]
   14000eb30:	mov    rdi,QWORD PTR [rbp-0x8]
   14000eb34:	sub    rbp,0x8
   14000eb38:	test   rdi,rdi
   14000eb3b:	je     0x14000eb58
   14000eb3d:	lea    rcx,[rdi+0x8]
   14000eb41:	call   QWORD PTR [rip+0x5a01]        # 0x140014548
   14000eb47:	mov    rcx,rdi
   14000eb4a:	call   QWORD PTR [rip+0x59f8]        # 0x140014548
   14000eb50:	mov    rcx,rdi
   14000eb53:	call   0x140012898
   14000eb58:	cmp    rbp,r13
   14000eb5b:	jne    0x14000eb30
   14000eb5d:	mov    rcx,r12
   14000eb60:	call   QWORD PTR [rip+0x5972]        # 0x1400144d8
   14000eb66:	mov    rcx,rbx
   14000eb69:	call   QWORD PTR [rip+0x56b1]        # 0x140014220
   14000eb6f:	mov    rbp,QWORD PTR [rsp+0x1d0]
   14000eb77:	mov    r13,QWORD PTR [rsp+0x188]
   14000eb7f:	mov    eax,DWORD PTR [rbp+0x0]
   14000eb82:	mov    r12,QWORD PTR [rsp+0x190]
   14000eb8a:	test   eax,eax
   14000eb8c:	je     0x14000ebaa
   14000eb8e:	cmp    eax,0xffffffff
   14000eb91:	je     0x14000ebf7
   14000eb93:	lock xadd DWORD PTR [rbp+0x0],esi
   14000eb98:	add    esi,0xffffffff
   14000eb9b:	setne  al
   14000eb9e:	test   al,al
   14000eba0:	jne    0x14000ebf7
   14000eba2:	mov    rbp,QWORD PTR [rsp+0x1d0]
   14000ebaa:	movsxd rax,DWORD PTR [rbp+0xc]
   14000ebae:	lea    rbx,[rbp+rax*8+0x10]
   14000ebb3:	movsxd rax,DWORD PTR [rbp+0x8]
   14000ebb7:	lea    rsi,[rbp+rax*8+0x10]
   14000ebbc:	cmp    rsi,rbx
   14000ebbf:	je     0x14000ebee
   14000ebc1:	mov    rdi,QWORD PTR [rbx-0x8]
   14000ebc5:	sub    rbx,0x8
   14000ebc9:	test   rdi,rdi
   14000ebcc:	je     0x14000ebe9
   14000ebce:	lea    rcx,[rdi+0x8]
   14000ebd2:	call   QWORD PTR [rip+0x5970]        # 0x140014548
   14000ebd8:	mov    rcx,rdi
   14000ebdb:	call   QWORD PTR [rip+0x5967]        # 0x140014548
   14000ebe1:	mov    rcx,rdi
   14000ebe4:	call   0x140012898
   14000ebe9:	cmp    rbx,rsi
   14000ebec:	jne    0x14000ebc1
   14000ebee:	mov    rcx,rbp
   14000ebf1:	call   QWORD PTR [rip+0x58e1]        # 0x1400144d8
   14000ebf7:	add    rsp,0x198
   14000ebfe:	pop    rdi
   14000ebff:	pop    rsi
   14000ec00:	pop    rbp
   14000ec01:	pop    rbx
   14000ec02:	ret    
   14000ec03:	int3   
   14000ec04:	int3   
   14000ec05:	int3   
   14000ec06:	int3   
   14000ec07:	int3   
   14000ec08:	int3   
   14000ec09:	int3   
   14000ec0a:	int3   
   14000ec0b:	int3   
   14000ec0c:	int3   
   14000ec0d:	int3   
   14000ec0e:	int3   
   14000ec0f:	int3   
   14000ec10:	mov    r11,rsp
   14000ec13:	push   r12
   14000ec15:	sub    rsp,0x80
   14000ec1c:	mov    rdx,QWORD PTR [rcx+0x30]
   14000ec20:	mov    r12,rcx
   14000ec23:	mov    eax,DWORD PTR [rdx+0x8]
   14000ec26:	cmp    DWORD PTR [rdx+0xc],eax
   14000ec29:	je     0x14000ee4e
   14000ec2f:	mov    QWORD PTR [r11+0x18],rbx
   14000ec33:	mov    QWORD PTR [r11+0x20],rbp
   14000ec37:	lea    rdx,[rip+0xa2fe]        # 0x140018f3c
   14000ec3e:	mov    QWORD PTR [r11-0x10],rsi
   14000ec42:	mov    QWORD PTR [r11-0x18],rdi
   14000ec46:	mov    rdi,rdx
   14000ec49:	xor    eax,eax
   14000ec4b:	or     rbp,0xffffffffffffffff
   14000ec4f:	mov    rcx,rbp
   14000ec52:	repnz scas al,BYTE PTR es:[rdi]
   14000ec54:	not    rcx
   14000ec57:	dec    rcx
   14000ec5a:	mov    DWORD PTR [rsp+0x20],ecx
   14000ec5e:	mov    QWORD PTR [r11-0x60],rdx
   14000ec62:	lea    rdx,[r11-0x58]
   14000ec66:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000ec6b:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000ec71:	lea    rcx,[r11+0x8]
   14000ec75:	call   QWORD PTR [rip+0x58c5]        # 0x140014540
   14000ec7b:	lea    rdx,[rsp+0x90]
   14000ec83:	mov    rcx,r12
   14000ec86:	call   QWORD PTR [rip+0x558c]        # 0x140014218
   14000ec8c:	lea    rcx,[rsp+0x90]
   14000ec94:	call   QWORD PTR [rip+0x58ae]        # 0x140014548
   14000ec9a:	mov    rdx,QWORD PTR [r12+0x30]
   14000ec9f:	mov    QWORD PTR [rsp+0x50],rdx
   14000eca4:	mov    eax,DWORD PTR [rdx]
   14000eca6:	test   eax,eax
   14000eca8:	je     0x14000ecb9
   14000ecaa:	cmp    eax,ebp
   14000ecac:	je     0x14000ed14
   14000ecae:	lock add DWORD PTR [rdx],0x1
   14000ecb2:	mov    rdx,QWORD PTR [rsp+0x50]
   14000ecb7:	jmp    0x14000ed14
   14000ecb9:	mov    edx,DWORD PTR [rdx+0x4]
   14000ecbc:	lea    rcx,[rsp+0x50]
   14000ecc1:	call   QWORD PTR [rip+0x57f1]        # 0x1400144b8
   14000ecc7:	mov    rdx,QWORD PTR [rsp+0x50]
   14000eccc:	mov    rcx,QWORD PTR [r12+0x30]
   14000ecd1:	movsxd rax,DWORD PTR [rdx+0xc]
   14000ecd5:	lea    rsi,[rdx+rax*8+0x10]
   14000ecda:	movsxd rax,DWORD PTR [rcx+0x8]
   14000ecde:	lea    rbx,[rcx+rax*8+0x10]
   14000ece3:	movsxd rax,DWORD PTR [rdx+0x8]
   14000ece7:	lea    rdi,[rdx+rax*8+0x10]
   14000ecec:	cmp    rdi,rsi
   14000ecef:	je     0x14000ed14
   14000ecf1:	test   rdi,rdi
   14000ecf4:	je     0x14000ed02
   14000ecf6:	mov    rdx,rbx
   14000ecf9:	mov    rcx,rdi
   14000ecfc:	call   QWORD PTR [rip+0x5866]        # 0x140014568
   14000ed02:	add    rdi,0x8
   14000ed06:	add    rbx,0x8
   14000ed0a:	cmp    rdi,rsi
   14000ed0d:	jne    0x14000ecf1
   14000ed0f:	mov    rdx,QWORD PTR [rsp+0x50]
   14000ed14:	mov    DWORD PTR [rsp+0x58],0x0
   14000ed1c:	movsxd rax,DWORD PTR [rdx+0x8]
   14000ed20:	lea    rsi,[rip+0xa20d]        # 0x140018f34
   14000ed27:	lea    rbx,[rdx+rax*8+0x10]
   14000ed2c:	mov    QWORD PTR [rsp+0x60],rbx
   14000ed31:	movsxd rax,DWORD PTR [rdx+0xc]
   14000ed35:	lea    rcx,[rdx+rax*8+0x10]
   14000ed3a:	mov    QWORD PTR [rsp+0x68],rcx
   14000ed3f:	nop
   14000ed40:	mov    eax,0x1
   14000ed45:	mov    DWORD PTR [rsp+0x58],eax
   14000ed49:	cmp    rbx,rcx
   14000ed4c:	je     0x14000edd3
   14000ed52:	test   eax,eax
   14000ed54:	je     0x14000edbb
   14000ed56:	xor    eax,eax
   14000ed58:	mov    rcx,rbp
   14000ed5b:	mov    rdi,rsi
   14000ed5e:	repnz scas al,BYTE PTR es:[rdi]
   14000ed60:	mov    QWORD PTR [rsp+0x28],rsi
   14000ed65:	lea    rdx,[rsp+0x40]
   14000ed6a:	not    rcx
   14000ed6d:	dec    rcx
   14000ed70:	mov    DWORD PTR [rsp+0x20],ecx
   14000ed74:	lea    rcx,[rsp+0x98]
   14000ed7c:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000ed81:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000ed87:	call   QWORD PTR [rip+0x57b3]        # 0x140014540
   14000ed8d:	lea    rdx,[rsp+0x98]
   14000ed95:	mov    r8,rbx
   14000ed98:	mov    rcx,r12
   14000ed9b:	call   QWORD PTR [rip+0x545f]        # 0x140014200
   14000eda1:	lea    rcx,[rsp+0x98]
   14000eda9:	call   QWORD PTR [rip+0x5799]        # 0x140014548
   14000edaf:	mov    eax,DWORD PTR [rsp+0x58]
   14000edb3:	dec    eax
   14000edb5:	mov    DWORD PTR [rsp+0x58],eax
   14000edb9:	jmp    0x14000ed52
   14000edbb:	mov    rbx,QWORD PTR [rsp+0x60]
   14000edc0:	mov    rcx,QWORD PTR [rsp+0x68]
   14000edc5:	add    rbx,0x8
   14000edc9:	mov    QWORD PTR [rsp+0x60],rbx
   14000edce:	jmp    0x14000ed40
   14000edd3:	mov    rbx,QWORD PTR [rsp+0x50]
   14000edd8:	mov    eax,DWORD PTR [rbx]
   14000edda:	test   eax,eax
   14000eddc:	je     0x14000edf6
   14000edde:	cmp    eax,0xffffffff
   14000ede1:	je     0x14000ee2b
   14000ede3:	lock xadd DWORD PTR [rbx],ebp
   14000ede7:	add    ebp,0xffffffff
   14000edea:	setne  al
   14000eded:	test   al,al
   14000edef:	jne    0x14000ee2b
   14000edf1:	mov    rbx,QWORD PTR [rsp+0x50]
   14000edf6:	movsxd rax,DWORD PTR [rbx+0xc]
   14000edfa:	lea    rdi,[rbx+rax*8+0x10]
   14000edff:	movsxd rax,DWORD PTR [rbx+0x8]
   14000ee03:	lea    rsi,[rbx+rax*8+0x10]
   14000ee08:	cmp    rsi,rdi
   14000ee0b:	je     0x14000ee22
   14000ee0d:	nop    DWORD PTR [rax]
   14000ee10:	sub    rdi,0x8
   14000ee14:	mov    rcx,rdi
   14000ee17:	call   QWORD PTR [rip+0x572b]        # 0x140014548
   14000ee1d:	cmp    rdi,rsi
   14000ee20:	jne    0x14000ee10
   14000ee22:	mov    rcx,rbx
   14000ee25:	call   QWORD PTR [rip+0x56ad]        # 0x1400144d8
   14000ee2b:	mov    rcx,r12
   14000ee2e:	call   QWORD PTR [rip+0x53ec]        # 0x140014220
   14000ee34:	mov    rdi,QWORD PTR [rsp+0x70]
   14000ee39:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ee3e:	mov    rbp,QWORD PTR [rsp+0xa8]
   14000ee46:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000ee4e:	add    rsp,0x80
   14000ee55:	pop    r12
   14000ee57:	ret    
   14000ee58:	int3   
   14000ee59:	int3   
   14000ee5a:	int3   
   14000ee5b:	int3   
   14000ee5c:	int3   
   14000ee5d:	int3   
   14000ee5e:	int3   
   14000ee5f:	int3   
   14000ee60:	mov    r11,rsp
   14000ee63:	mov    QWORD PTR [r11+0x18],rbx
   14000ee67:	mov    QWORD PTR [r11+0x20],rbp
   14000ee6b:	push   rsi
   14000ee6c:	push   rdi
   14000ee6d:	push   r12
   14000ee6f:	sub    rsp,0x70
   14000ee73:	mov    rbp,rcx
   14000ee76:	lea    rdx,[rip+0xa0db]        # 0x140018f58
   14000ee7d:	xor    eax,eax
   14000ee7f:	mov    rdi,rdx
   14000ee82:	or     r12,0xffffffffffffffff
   14000ee86:	mov    rcx,r12
   14000ee89:	repnz scas al,BYTE PTR es:[rdi]
   14000ee8b:	not    rcx
   14000ee8e:	dec    rcx
   14000ee91:	mov    DWORD PTR [rsp+0x20],ecx
   14000ee95:	mov    QWORD PTR [r11-0x60],rdx
   14000ee99:	lea    rdx,[r11-0x58]
   14000ee9d:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000eea2:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000eea8:	lea    rcx,[r11+0x8]
   14000eeac:	call   QWORD PTR [rip+0x568e]        # 0x140014540
   14000eeb2:	lea    rdx,[rsp+0x90]
   14000eeba:	mov    rcx,rbp
   14000eebd:	call   QWORD PTR [rip+0x5355]        # 0x140014218
   14000eec3:	lea    rcx,[rsp+0x90]
   14000eecb:	call   QWORD PTR [rip+0x5677]        # 0x140014548
   14000eed1:	mov    rdx,QWORD PTR [rbp+0x20]
   14000eed5:	mov    QWORD PTR [rsp+0x50],rdx
   14000eeda:	mov    eax,DWORD PTR [rdx]
   14000eedc:	test   eax,eax
   14000eede:	je     0x14000eeeb
   14000eee0:	cmp    eax,r12d
   14000eee3:	je     0x14000ef45
   14000eee5:	lock add DWORD PTR [rdx],0x1
   14000eee9:	jmp    0x14000ef40
   14000eeeb:	mov    edx,DWORD PTR [rdx+0x4]
   14000eeee:	lea    rcx,[rsp+0x50]
   14000eef3:	call   QWORD PTR [rip+0x55bf]        # 0x1400144b8
   14000eef9:	mov    rdx,QWORD PTR [rsp+0x50]
   14000eefe:	mov    rcx,QWORD PTR [rbp+0x20]
   14000ef02:	movsxd rax,DWORD PTR [rdx+0xc]
   14000ef06:	lea    rsi,[rdx+rax*8+0x10]
   14000ef0b:	movsxd rax,DWORD PTR [rcx+0x8]
   14000ef0f:	lea    rbx,[rcx+rax*8+0x10]
   14000ef14:	movsxd rax,DWORD PTR [rdx+0x8]
   14000ef18:	lea    rdi,[rdx+rax*8+0x10]
   14000ef1d:	cmp    rdi,rsi
   14000ef20:	je     0x14000ef45
   14000ef22:	test   rdi,rdi
   14000ef25:	je     0x14000ef33
   14000ef27:	mov    rdx,rbx
   14000ef2a:	mov    rcx,rdi
   14000ef2d:	call   QWORD PTR [rip+0x5635]        # 0x140014568
   14000ef33:	add    rdi,0x8
   14000ef37:	add    rbx,0x8
   14000ef3b:	cmp    rdi,rsi
   14000ef3e:	jne    0x14000ef22
   14000ef40:	mov    rdx,QWORD PTR [rsp+0x50]
   14000ef45:	mov    DWORD PTR [rsp+0x58],0x0
   14000ef4d:	movsxd rax,DWORD PTR [rdx+0x8]
   14000ef51:	lea    rsi,[rip+0x9ff0]        # 0x140018f48
   14000ef58:	lea    rbx,[rdx+rax*8+0x10]
   14000ef5d:	mov    QWORD PTR [rsp+0x60],rbx
   14000ef62:	movsxd rax,DWORD PTR [rdx+0xc]
   14000ef66:	lea    rcx,[rdx+rax*8+0x10]
   14000ef6b:	mov    QWORD PTR [rsp+0x68],rcx
   14000ef70:	mov    eax,0x1
   14000ef75:	mov    DWORD PTR [rsp+0x58],eax
   14000ef79:	cmp    rbx,rcx
   14000ef7c:	je     0x14000f003
   14000ef82:	test   eax,eax
   14000ef84:	je     0x14000efeb
   14000ef86:	xor    eax,eax
   14000ef88:	mov    rcx,r12
   14000ef8b:	mov    rdi,rsi
   14000ef8e:	repnz scas al,BYTE PTR es:[rdi]
   14000ef90:	mov    QWORD PTR [rsp+0x28],rsi
   14000ef95:	lea    rdx,[rsp+0x40]
   14000ef9a:	not    rcx
   14000ef9d:	dec    rcx
   14000efa0:	mov    DWORD PTR [rsp+0x20],ecx
   14000efa4:	lea    rcx,[rsp+0x98]
   14000efac:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000efb1:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000efb7:	call   QWORD PTR [rip+0x5583]        # 0x140014540
   14000efbd:	lea    rdx,[rsp+0x98]
   14000efc5:	mov    r8,rbx
   14000efc8:	mov    rcx,rbp
   14000efcb:	call   QWORD PTR [rip+0x522f]        # 0x140014200
   14000efd1:	lea    rcx,[rsp+0x98]
   14000efd9:	call   QWORD PTR [rip+0x5569]        # 0x140014548
   14000efdf:	mov    eax,DWORD PTR [rsp+0x58]
   14000efe3:	dec    eax
   14000efe5:	mov    DWORD PTR [rsp+0x58],eax
   14000efe9:	jmp    0x14000ef82
   14000efeb:	mov    rbx,QWORD PTR [rsp+0x60]
   14000eff0:	mov    rcx,QWORD PTR [rsp+0x68]
   14000eff5:	add    rbx,0x8
   14000eff9:	mov    QWORD PTR [rsp+0x60],rbx
   14000effe:	jmp    0x14000ef70
   14000f003:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f008:	mov    eax,DWORD PTR [rbx]
   14000f00a:	test   eax,eax
   14000f00c:	je     0x14000f028
   14000f00e:	cmp    eax,0xffffffff
   14000f011:	je     0x14000f05b
   14000f013:	lock xadd DWORD PTR [rbx],r12d
   14000f018:	add    r12d,0xffffffff
   14000f01c:	setne  al
   14000f01f:	test   al,al
   14000f021:	jne    0x14000f05b
   14000f023:	mov    rbx,QWORD PTR [rsp+0x50]
   14000f028:	movsxd rax,DWORD PTR [rbx+0xc]
   14000f02c:	lea    rdi,[rbx+rax*8+0x10]
   14000f031:	movsxd rax,DWORD PTR [rbx+0x8]
   14000f035:	lea    rsi,[rbx+rax*8+0x10]
   14000f03a:	cmp    rsi,rdi
   14000f03d:	je     0x14000f052
   14000f03f:	nop
   14000f040:	sub    rdi,0x8
   14000f044:	mov    rcx,rdi
   14000f047:	call   QWORD PTR [rip+0x54fb]        # 0x140014548
   14000f04d:	cmp    rdi,rsi
   14000f050:	jne    0x14000f040
   14000f052:	mov    rcx,rbx
   14000f055:	call   QWORD PTR [rip+0x547d]        # 0x1400144d8
   14000f05b:	mov    rcx,rbp
   14000f05e:	call   0x14000e040
   14000f063:	mov    rcx,rbp
   14000f066:	call   0x14000e4d0
   14000f06b:	mov    rcx,rbp
   14000f06e:	call   0x14000ec10
   14000f073:	mov    rcx,rbp
   14000f076:	call   QWORD PTR [rip+0x51a4]        # 0x140014220
   14000f07c:	lea    r11,[rsp+0x70]
   14000f081:	mov    rbx,QWORD PTR [r11+0x30]
   14000f085:	mov    rbp,QWORD PTR [r11+0x38]
   14000f089:	mov    rsp,r11
   14000f08c:	pop    r12
   14000f08e:	pop    rdi
   14000f08f:	pop    rsi
   14000f090:	ret    
   14000f091:	int3   
   14000f092:	int3   
   14000f093:	int3   
   14000f094:	int3   
   14000f095:	int3   
   14000f096:	int3   
   14000f097:	int3   
   14000f098:	int3   
   14000f099:	int3   
   14000f09a:	int3   
   14000f09b:	int3   
   14000f09c:	int3   
   14000f09d:	int3   
   14000f09e:	int3   
   14000f09f:	int3   
   14000f0a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f0a5:	mov    QWORD PTR [rsp+0x10],rbp
   14000f0aa:	mov    QWORD PTR [rsp+0x18],rsi
   14000f0af:	mov    QWORD PTR [rsp+0x20],rdi
   14000f0b4:	push   r12
   14000f0b6:	sub    rsp,0x20
   14000f0ba:	mov    rbp,r8
   14000f0bd:	mov    rsi,rdx
   14000f0c0:	mov    r12,rcx
   14000f0c3:	call   QWORD PTR [rip+0x5127]        # 0x1400141f0
   14000f0c9:	lea    rcx,[r12+0x8]
   14000f0ce:	call   QWORD PTR [rip+0x531c]        # 0x1400143f0
   14000f0d4:	lea    rcx,[r12+0x10]
   14000f0d9:	call   QWORD PTR [rip+0x5311]        # 0x1400143f0
   14000f0df:	mov    r11,QWORD PTR [rip+0x5412]        # 0x1400144f8
   14000f0e6:	lea    rcx,[r12+0x40]
   14000f0eb:	mov    QWORD PTR [r12+0x20],r11
   14000f0f0:	mov    rax,QWORD PTR [rip+0x5401]        # 0x1400144f8
   14000f0f7:	mov    QWORD PTR [r12+0x28],rax
   14000f0fc:	mov    rax,QWORD PTR [rip+0x53f5]        # 0x1400144f8
   14000f103:	mov    QWORD PTR [r12+0x30],rax
   14000f108:	call   QWORD PTR [rip+0x52e2]        # 0x1400143f0
   14000f10e:	lea    rcx,[r12+0x8]
   14000f113:	mov    rdx,rsi
   14000f116:	call   QWORD PTR [rip+0x5234]        # 0x140014350
   14000f11c:	lea    rcx,[r12+0x10]
   14000f121:	mov    rdx,rbp
   14000f124:	call   QWORD PTR [rip+0x5226]        # 0x140014350
   14000f12a:	mov    dl,0x1
   14000f12c:	mov    rcx,r12
   14000f12f:	call   QWORD PTR [rip+0x50c3]        # 0x1400141f8
   14000f135:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f13a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f13f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f144:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f149:	mov    rax,r12
   14000f14c:	add    rsp,0x20
   14000f150:	pop    r12
   14000f152:	ret    
   14000f153:	int3   
   14000f154:	int3   
   14000f155:	int3   
   14000f156:	int3   
   14000f157:	int3   
   14000f158:	int3   
   14000f159:	int3   
   14000f15a:	int3   
   14000f15b:	int3   
   14000f15c:	int3   
   14000f15d:	int3   
   14000f15e:	int3   
   14000f15f:	int3   
   14000f160:	rex push rbx
   14000f162:	sub    rsp,0x20
   14000f166:	add    rcx,0x28
   14000f16a:	mov    rbx,rdx
   14000f16d:	call   0x140006d00
   14000f172:	mov    r11,QWORD PTR [rbx]
   14000f175:	mov    eax,DWORD PTR [r11]
   14000f178:	test   eax,eax
   14000f17a:	je     0x14000f18d
   14000f17c:	cmp    eax,0xffffffff
   14000f17f:	je     0x14000f198
   14000f181:	lock add DWORD PTR [r11],0xffffffff
   14000f186:	setne  al
   14000f189:	test   al,al
   14000f18b:	jne    0x14000f198
   14000f18d:	mov    rdx,QWORD PTR [rbx]
   14000f190:	mov    rcx,rbx
   14000f193:	call   0x140003610
   14000f198:	add    rsp,0x20
   14000f19c:	pop    rbx
   14000f19d:	ret    
   14000f19e:	int3   
   14000f19f:	int3   
   14000f1a0:	mov    r11,rsp
   14000f1a3:	push   rsi
   14000f1a4:	sub    rsp,0xf0
   14000f1ab:	mov    rax,QWORD PTR [rcx+0x28]
   14000f1af:	mov    rsi,rcx
   14000f1b2:	mov    edx,DWORD PTR [rax+0x8]
   14000f1b5:	mov    eax,DWORD PTR [rax+0xc]
   14000f1b8:	cmp    eax,edx
   14000f1ba:	je     0x14000f66d
   14000f1c0:	mov    rdx,QWORD PTR [rcx+0x28]
   14000f1c4:	mov    QWORD PTR [r11+0x20],rbx
   14000f1c8:	mov    QWORD PTR [r11-0x10],rbp
   14000f1cc:	mov    QWORD PTR [r11-0x18],rdi
   14000f1d0:	mov    QWORD PTR [r11-0x20],r12
   14000f1d4:	mov    QWORD PTR [r11-0x28],r13
   14000f1d8:	mov    QWORD PTR [r11-0x30],r14
   14000f1dc:	mov    QWORD PTR [rsp+0x40],rdx
   14000f1e1:	mov    eax,DWORD PTR [rdx]
   14000f1e3:	xor    r14d,r14d
   14000f1e6:	mov    QWORD PTR [r11-0x38],r15
   14000f1ea:	test   eax,eax
   14000f1ec:	je     0x14000f205
   14000f1ee:	cmp    eax,0xffffffff
   14000f1f1:	je     0x14000f28a
   14000f1f7:	lock add DWORD PTR [rdx],0x1
   14000f1fb:	mov    rdx,QWORD PTR [rsp+0x40]
   14000f200:	jmp    0x14000f28a
   14000f205:	mov    edx,DWORD PTR [rdx+0x4]
   14000f208:	lea    rcx,[rsp+0x40]
   14000f20d:	call   QWORD PTR [rip+0x52a5]        # 0x1400144b8
   14000f213:	mov    rdx,QWORD PTR [rsp+0x40]
   14000f218:	mov    rcx,QWORD PTR [rsi+0x28]
   14000f21c:	movsxd rax,DWORD PTR [rdx+0xc]
   14000f220:	lea    r13,[rdx+rax*8+0x10]
   14000f225:	movsxd rax,DWORD PTR [rcx+0x8]
   14000f229:	lea    r12,[rcx+rax*8+0x10]
   14000f22e:	movsxd rax,DWORD PTR [rdx+0x8]
   14000f232:	lea    rbp,[rdx+rax*8+0x10]
   14000f237:	cmp    rbp,r13
   14000f23a:	je     0x14000f28a
   14000f23c:	nop    DWORD PTR [rax+0x0]
   14000f240:	mov    ecx,0x10
   14000f245:	call   0x140012892
   14000f24a:	mov    rbx,rax
   14000f24d:	test   rax,rax
   14000f250:	je     0x14000f271
   14000f252:	mov    rdi,QWORD PTR [r12]
   14000f256:	mov    rcx,rax
   14000f259:	mov    rdx,rdi
   14000f25c:	call   QWORD PTR [rip+0x5306]        # 0x140014568
   14000f262:	lea    rdx,[rdi+0x8]
   14000f266:	lea    rcx,[rbx+0x8]
   14000f26a:	call   0x140001980
   14000f26f:	jmp    0x14000f274
   14000f271:	mov    rbx,r14
   14000f274:	mov    QWORD PTR [rbp+0x0],rbx
   14000f278:	add    rbp,0x8
   14000f27c:	add    r12,0x8
   14000f280:	cmp    rbp,r13
   14000f283:	jne    0x14000f240
   14000f285:	mov    rdx,QWORD PTR [rsp+0x40]
   14000f28a:	mov    DWORD PTR [rsp+0x48],r14d
   14000f28f:	movsxd rax,DWORD PTR [rdx+0x8]
   14000f293:	lea    r15,[rip+0x9cce]        # 0x140018f68
   14000f29a:	lea    rcx,[rdx+rax*8+0x10]
   14000f29f:	lea    rbx,[rip+0x9c0e]        # 0x140018eb4
   14000f2a6:	lea    r13,[rip+0x9c9b]        # 0x140018f48
   14000f2ad:	mov    QWORD PTR [rsp+0x50],rcx
   14000f2b2:	movsxd rax,DWORD PTR [rdx+0xc]
   14000f2b6:	lea    rdx,[rdx+rax*8+0x10]
   14000f2bb:	mov    QWORD PTR [rsp+0x58],rdx
   14000f2c0:	mov    eax,0x1
   14000f2c5:	mov    DWORD PTR [rsp+0x48],eax
   14000f2c9:	cmp    rcx,rdx
   14000f2cc:	je     0x14000f572
   14000f2d2:	mov    r12,QWORD PTR [rcx]
   14000f2d5:	test   eax,eax
   14000f2d7:	je     0x14000f55a
   14000f2dd:	or     rcx,0xffffffffffffffff
   14000f2e1:	xor    eax,eax
   14000f2e3:	mov    rdi,r15
   14000f2e6:	repnz scas al,BYTE PTR es:[rdi]
   14000f2e8:	mov    QWORD PTR [rsp+0x78],r15
   14000f2ed:	lea    rdx,[rsp+0x90]
   14000f2f5:	not    rcx
   14000f2f8:	dec    rcx
   14000f2fb:	mov    DWORD PTR [rsp+0x70],ecx
   14000f2ff:	lea    rcx,[rsp+0x100]
   14000f307:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   14000f30c:	movdqa XMMWORD PTR [rsp+0x90],xmm0
   14000f315:	call   QWORD PTR [rip+0x5225]        # 0x140014540
   14000f31b:	lea    rdx,[rsp+0x100]
   14000f323:	mov    rcx,rsi
   14000f326:	call   QWORD PTR [rip+0x4eec]        # 0x140014218
   14000f32c:	lea    rcx,[rsp+0x100]
   14000f334:	call   QWORD PTR [rip+0x520e]        # 0x140014548
   14000f33a:	or     rcx,0xffffffffffffffff
   14000f33e:	xor    eax,eax
   14000f340:	mov    rdi,rbx
   14000f343:	mov    QWORD PTR [rsp+0x88],rbx
   14000f34b:	lea    rdx,[rsp+0xa0]
   14000f353:	repnz scas al,BYTE PTR es:[rdi]
   14000f355:	not    rcx
   14000f358:	dec    rcx
   14000f35b:	mov    DWORD PTR [rsp+0x80],ecx
   14000f362:	lea    rcx,[rsp+0x108]
   14000f36a:	movaps xmm0,XMMWORD PTR [rsp+0x80]
   14000f372:	movdqa XMMWORD PTR [rsp+0xa0],xmm0
   14000f37b:	call   QWORD PTR [rip+0x51bf]        # 0x140014540
   14000f381:	lea    rdx,[rsp+0x108]
   14000f389:	mov    r8,r12
   14000f38c:	mov    rcx,rsi
   14000f38f:	call   QWORD PTR [rip+0x4e93]        # 0x140014228
   14000f395:	lea    rcx,[rsp+0x108]
   14000f39d:	call   QWORD PTR [rip+0x51a5]        # 0x140014548
   14000f3a3:	mov    rdx,QWORD PTR [r12+0x8]
   14000f3a8:	mov    QWORD PTR [rsp+0x20],rdx
   14000f3ad:	mov    eax,DWORD PTR [rdx]
   14000f3af:	test   eax,eax
   14000f3b1:	je     0x14000f3c3
   14000f3b3:	cmp    eax,0xffffffff
   14000f3b6:	je     0x14000f423
   14000f3b8:	lock add DWORD PTR [rdx],0x1
   14000f3bc:	mov    rdx,QWORD PTR [rsp+0x20]
   14000f3c1:	jmp    0x14000f423
   14000f3c3:	mov    edx,DWORD PTR [rdx+0x4]
   14000f3c6:	lea    rcx,[rsp+0x20]
   14000f3cb:	call   QWORD PTR [rip+0x50e7]        # 0x1400144b8
   14000f3d1:	mov    rdx,QWORD PTR [rsp+0x20]
   14000f3d6:	mov    rcx,QWORD PTR [r12+0x8]
   14000f3db:	movsxd rax,DWORD PTR [rdx+0xc]
   14000f3df:	lea    rbp,[rdx+rax*8+0x10]
   14000f3e4:	movsxd rax,DWORD PTR [rcx+0x8]
   14000f3e8:	lea    rbx,[rcx+rax*8+0x10]
   14000f3ed:	movsxd rax,DWORD PTR [rdx+0x8]
   14000f3f1:	lea    rdi,[rdx+rax*8+0x10]
   14000f3f6:	cmp    rdi,rbp
   14000f3f9:	je     0x14000f423
   14000f3fb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f400:	test   rdi,rdi
   14000f403:	je     0x14000f411
   14000f405:	mov    rdx,rbx
   14000f408:	mov    rcx,rdi
   14000f40b:	call   QWORD PTR [rip+0x5157]        # 0x140014568
   14000f411:	add    rdi,0x8
   14000f415:	add    rbx,0x8
   14000f419:	cmp    rdi,rbp
   14000f41c:	jne    0x14000f400
   14000f41e:	mov    rdx,QWORD PTR [rsp+0x20]
   14000f423:	mov    DWORD PTR [rsp+0x28],r14d
   14000f428:	movsxd rax,DWORD PTR [rdx+0x8]
   14000f42c:	lea    rbx,[rdx+rax*8+0x10]
   14000f431:	mov    QWORD PTR [rsp+0x30],rbx
   14000f436:	movsxd rax,DWORD PTR [rdx+0xc]
   14000f43a:	lea    rcx,[rdx+rax*8+0x10]
   14000f43f:	mov    QWORD PTR [rsp+0x38],rcx
   14000f444:	mov    eax,0x1
   14000f449:	mov    DWORD PTR [rsp+0x28],eax
   14000f44d:	cmp    rbx,rcx
   14000f450:	je     0x14000f4de
   14000f456:	test   eax,eax
   14000f458:	je     0x14000f4c6
   14000f45a:	or     rcx,0xffffffffffffffff
   14000f45e:	xor    eax,eax
   14000f460:	mov    rdi,r13
   14000f463:	repnz scas al,BYTE PTR es:[rdi]
   14000f465:	mov    QWORD PTR [rsp+0x68],r13
   14000f46a:	lea    rdx,[rsp+0xb0]
   14000f472:	not    rcx
   14000f475:	dec    rcx
   14000f478:	mov    DWORD PTR [rsp+0x60],ecx
   14000f47c:	lea    rcx,[rsp+0x110]
   14000f484:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   14000f489:	movdqa XMMWORD PTR [rsp+0xb0],xmm0
   14000f492:	call   QWORD PTR [rip+0x50a8]        # 0x140014540
   14000f498:	lea    rdx,[rsp+0x110]
   14000f4a0:	mov    r8,rbx
   14000f4a3:	mov    rcx,rsi
   14000f4a6:	call   QWORD PTR [rip+0x4d54]        # 0x140014200
   14000f4ac:	lea    rcx,[rsp+0x110]
   14000f4b4:	call   QWORD PTR [rip+0x508e]        # 0x140014548
   14000f4ba:	mov    eax,DWORD PTR [rsp+0x28]
   14000f4be:	dec    eax
   14000f4c0:	mov    DWORD PTR [rsp+0x28],eax
   14000f4c4:	jmp    0x14000f456
   14000f4c6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f4cb:	mov    rcx,QWORD PTR [rsp+0x38]
   14000f4d0:	add    rbx,0x8
   14000f4d4:	mov    QWORD PTR [rsp+0x30],rbx
   14000f4d9:	jmp    0x14000f444
   14000f4de:	mov    rbx,QWORD PTR [rsp+0x20]
   14000f4e3:	mov    eax,DWORD PTR [rbx]
   14000f4e5:	test   eax,eax
   14000f4e7:	je     0x14000f4fe
   14000f4e9:	cmp    eax,0xffffffff
   14000f4ec:	je     0x14000f53b
   14000f4ee:	lock add DWORD PTR [rbx],0xffffffff
   14000f4f2:	setne  al
   14000f4f5:	test   al,al
   14000f4f7:	jne    0x14000f53b
   14000f4f9:	mov    rbx,QWORD PTR [rsp+0x20]
   14000f4fe:	movsxd rax,DWORD PTR [rbx+0xc]
   14000f502:	lea    rdi,[rbx+rax*8+0x10]
   14000f507:	movsxd rax,DWORD PTR [rbx+0x8]
   14000f50b:	lea    rbp,[rbx+rax*8+0x10]
   14000f510:	cmp    rbp,rdi
   14000f513:	je     0x14000f532
   14000f515:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000f520:	sub    rdi,0x8
   14000f524:	mov    rcx,rdi
   14000f527:	call   QWORD PTR [rip+0x501b]        # 0x140014548
   14000f52d:	cmp    rdi,rbp
   14000f530:	jne    0x14000f520
   14000f532:	mov    rcx,rbx
   14000f535:	call   QWORD PTR [rip+0x4f9d]        # 0x1400144d8
   14000f53b:	mov    rcx,rsi
   14000f53e:	call   QWORD PTR [rip+0x4cdc]        # 0x140014220
   14000f544:	mov    eax,DWORD PTR [rsp+0x48]
   14000f548:	lea    rbx,[rip+0x9965]        # 0x140018eb4
   14000f54f:	dec    eax
   14000f551:	mov    DWORD PTR [rsp+0x48],eax
   14000f555:	jmp    0x14000f2d5
   14000f55a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000f55f:	mov    rdx,QWORD PTR [rsp+0x58]
   14000f564:	add    rcx,0x8
   14000f568:	mov    QWORD PTR [rsp+0x50],rcx
   14000f56d:	jmp    0x14000f2c0
   14000f572:	mov    r13,QWORD PTR [rsp+0x40]
   14000f577:	mov    r15,QWORD PTR [rsp+0xc0]
   14000f57f:	mov    eax,DWORD PTR [r13+0x0]
   14000f583:	test   eax,eax
   14000f585:	je     0x14000f5a6
   14000f587:	cmp    eax,0xffffffff
   14000f58a:	je     0x14000f63d
   14000f590:	lock add DWORD PTR [r13+0x0],0xffffffff
   14000f596:	setne  al
   14000f599:	test   al,al
   14000f59b:	jne    0x14000f63d
   14000f5a1:	mov    r13,QWORD PTR [rsp+0x40]
   14000f5a6:	movsxd rax,DWORD PTR [r13+0xc]
   14000f5aa:	lea    r12,[r13+rax*8+0x10]
   14000f5af:	movsxd rax,DWORD PTR [r13+0x8]
   14000f5b3:	lea    r14,[r13+rax*8+0x10]
   14000f5b8:	cmp    r14,r12
   14000f5bb:	je     0x14000f634
   14000f5bd:	nop    DWORD PTR [rax]
   14000f5c0:	mov    rbx,QWORD PTR [r12-0x8]
   14000f5c5:	sub    r12,0x8
   14000f5c9:	test   rbx,rbx
   14000f5cc:	je     0x14000f62f
   14000f5ce:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f5d2:	mov    eax,DWORD PTR [rcx]
   14000f5d4:	test   eax,eax
   14000f5d6:	je     0x14000f5e8
   14000f5d8:	cmp    eax,0xffffffff
   14000f5db:	je     0x14000f61e
   14000f5dd:	lock add DWORD PTR [rcx],0xffffffff
   14000f5e1:	setne  al
   14000f5e4:	test   al,al
   14000f5e6:	jne    0x14000f61e
   14000f5e8:	mov    rbp,QWORD PTR [rbx+0x8]
   14000f5ec:	movsxd rax,DWORD PTR [rbp+0xc]
   14000f5f0:	lea    rdi,[rbp+rax*8+0x10]
   14000f5f5:	movsxd rax,DWORD PTR [rbp+0x8]
   14000f5f9:	lea    rsi,[rbp+rax*8+0x10]
   14000f5fe:	cmp    rsi,rdi
   14000f601:	je     0x14000f615
   14000f603:	sub    rdi,0x8
   14000f607:	mov    rcx,rdi
   14000f60a:	call   QWORD PTR [rip+0x4f38]        # 0x140014548
   14000f610:	cmp    rdi,rsi
   14000f613:	jne    0x14000f603
   14000f615:	mov    rcx,rbp
   14000f618:	call   QWORD PTR [rip+0x4eba]        # 0x1400144d8
   14000f61e:	mov    rcx,rbx
   14000f621:	call   QWORD PTR [rip+0x4f21]        # 0x140014548
   14000f627:	mov    rcx,rbx
   14000f62a:	call   0x140012898
   14000f62f:	cmp    r12,r14
   14000f632:	jne    0x14000f5c0
   14000f634:	mov    rcx,r13
   14000f637:	call   QWORD PTR [rip+0x4e9b]        # 0x1400144d8
   14000f63d:	mov    r13,QWORD PTR [rsp+0xd0]
   14000f645:	mov    r12,QWORD PTR [rsp+0xd8]
   14000f64d:	mov    rdi,QWORD PTR [rsp+0xe0]
   14000f655:	mov    rbp,QWORD PTR [rsp+0xe8]
   14000f65d:	mov    rbx,QWORD PTR [rsp+0x118]
   14000f665:	mov    r14,QWORD PTR [rsp+0xc8]
   14000f66d:	add    rsp,0xf0
   14000f674:	pop    rsi
   14000f675:	ret    
   14000f676:	int3   
   14000f677:	int3   
   14000f678:	int3   
   14000f679:	int3   
   14000f67a:	int3   
   14000f67b:	int3   
   14000f67c:	int3   
   14000f67d:	int3   
   14000f67e:	int3   
   14000f67f:	int3   
   14000f680:	rex push rbx
   14000f682:	sub    rsp,0x40
   14000f686:	mov    rbx,rcx
   14000f689:	lea    rcx,[rsp+0x20]
   14000f68e:	call   QWORD PTR [rip+0x4ccc]        # 0x140014360
   14000f694:	lea    rcx,[rsp+0x20]
   14000f699:	mov    edx,0x2
   14000f69e:	call   QWORD PTR [rip+0x4ccc]        # 0x140014370
   14000f6a4:	test   al,al
   14000f6a6:	jne    0x14000f6bb
   14000f6a8:	lea    rcx,[rsp+0x20]
   14000f6ad:	call   QWORD PTR [rip+0x4ced]        # 0x1400143a0
   14000f6b3:	xor    al,al
   14000f6b5:	add    rsp,0x40
   14000f6b9:	pop    rbx
   14000f6ba:	ret    
   14000f6bb:	lea    rdx,[rsp+0x20]
   14000f6c0:	mov    rcx,rbx
   14000f6c3:	mov    QWORD PTR [rsp+0x50],rdi
   14000f6c8:	call   QWORD PTR [rip+0x4b02]        # 0x1400141d0
   14000f6ce:	mov    rcx,rbx
   14000f6d1:	call   QWORD PTR [rip+0x4b01]        # 0x1400141d8
   14000f6d7:	or     rcx,0xffffffffffffffff
   14000f6db:	lea    rdx,[rip+0x98a6]        # 0x140018f88
   14000f6e2:	mov    QWORD PTR [rsp+0x38],rdx
   14000f6e7:	mov    rdi,rdx
   14000f6ea:	xor    eax,eax
   14000f6ec:	repnz scas al,BYTE PTR es:[rdi]
   14000f6ee:	lea    rdx,[rsp+0x30]
   14000f6f3:	not    rcx
   14000f6f6:	dec    rcx
   14000f6f9:	mov    DWORD PTR [rsp+0x30],ecx
   14000f6fd:	lea    rcx,[rsp+0x60]
   14000f702:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000f707:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000f70d:	call   QWORD PTR [rip+0x4e2d]        # 0x140014540
   14000f713:	lea    rdx,[rsp+0x60]
   14000f718:	mov    rcx,rbx
   14000f71b:	call   QWORD PTR [rip+0x4af7]        # 0x140014218
   14000f721:	lea    rcx,[rsp+0x60]
   14000f726:	call   QWORD PTR [rip+0x4e1c]        # 0x140014548
   14000f72c:	or     rcx,0xffffffffffffffff
   14000f730:	lea    rdx,[rip+0x984d]        # 0x140018f84
   14000f737:	mov    QWORD PTR [rsp+0x38],rdx
   14000f73c:	mov    rdi,rdx
   14000f73f:	xor    eax,eax
   14000f741:	repnz scas al,BYTE PTR es:[rdi]
   14000f743:	lea    rdx,[rsp+0x30]
   14000f748:	not    rcx
   14000f74b:	dec    rcx
   14000f74e:	mov    DWORD PTR [rsp+0x30],ecx
   14000f752:	lea    rcx,[rsp+0x68]
   14000f757:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000f75c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000f762:	call   QWORD PTR [rip+0x4dd8]        # 0x140014540
   14000f768:	or     rcx,0xffffffffffffffff
   14000f76c:	lea    rdx,[rip+0x979d]        # 0x140018f10
   14000f773:	xor    eax,eax
   14000f775:	mov    QWORD PTR [rsp+0x38],rdx
   14000f77a:	mov    rdi,rdx
   14000f77d:	lea    rdx,[rsp+0x30]
   14000f782:	repnz scas al,BYTE PTR es:[rdi]
   14000f784:	not    rcx
   14000f787:	dec    rcx
   14000f78a:	mov    DWORD PTR [rsp+0x30],ecx
   14000f78e:	lea    rcx,[rsp+0x60]
   14000f793:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000f798:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000f79e:	call   QWORD PTR [rip+0x4d9c]        # 0x140014540
   14000f7a4:	lea    r8,[rsp+0x68]
   14000f7a9:	lea    rdx,[rsp+0x60]
   14000f7ae:	mov    rcx,rbx
   14000f7b1:	call   QWORD PTR [rip+0x4a71]        # 0x140014228
   14000f7b7:	lea    rcx,[rsp+0x60]
   14000f7bc:	call   QWORD PTR [rip+0x4d86]        # 0x140014548
   14000f7c2:	lea    rcx,[rsp+0x68]
   14000f7c7:	call   QWORD PTR [rip+0x4d7b]        # 0x140014548
   14000f7cd:	or     rcx,0xffffffffffffffff
   14000f7d1:	lea    rdx,[rip+0x97a0]        # 0x140018f78
   14000f7d8:	mov    QWORD PTR [rsp+0x38],rdx
   14000f7dd:	mov    rdi,rdx
   14000f7e0:	xor    eax,eax
   14000f7e2:	repnz scas al,BYTE PTR es:[rdi]
   14000f7e4:	lea    rdx,[rsp+0x30]
   14000f7e9:	not    rcx
   14000f7ec:	dec    rcx
   14000f7ef:	mov    DWORD PTR [rsp+0x30],ecx
   14000f7f3:	lea    rcx,[rsp+0x60]
   14000f7f8:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000f7fd:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000f803:	call   QWORD PTR [rip+0x4d37]        # 0x140014540
   14000f809:	lea    r8,[rbx+0x8]
   14000f80d:	lea    rdx,[rsp+0x60]
   14000f812:	mov    rcx,rbx
   14000f815:	call   QWORD PTR [rip+0x49e5]        # 0x140014200
   14000f81b:	lea    rcx,[rsp+0x60]
   14000f820:	call   QWORD PTR [rip+0x4d22]        # 0x140014548
   14000f826:	or     rcx,0xffffffffffffffff
   14000f82a:	lea    rdx,[rip+0x62e7]        # 0x140015b18
   14000f831:	xor    eax,eax
   14000f833:	mov    QWORD PTR [rsp+0x38],rdx
   14000f838:	mov    rdi,rdx
   14000f83b:	lea    rdx,[rsp+0x30]
   14000f840:	repnz scas al,BYTE PTR es:[rdi]
   14000f842:	not    rcx
   14000f845:	dec    rcx
   14000f848:	mov    DWORD PTR [rsp+0x30],ecx
   14000f84c:	lea    rcx,[rsp+0x60]
   14000f851:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000f856:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000f85c:	call   QWORD PTR [rip+0x4cde]        # 0x140014540
   14000f862:	lea    r8,[rbx+0x10]
   14000f866:	lea    rdx,[rsp+0x60]
   14000f86b:	mov    rcx,rbx
   14000f86e:	call   QWORD PTR [rip+0x498c]        # 0x140014200
   14000f874:	lea    rcx,[rsp+0x60]
   14000f879:	call   QWORD PTR [rip+0x4cc9]        # 0x140014548
   14000f87f:	mov    rcx,rbx
   14000f882:	call   0x14000f1a0
   14000f887:	mov    rcx,rbx
   14000f88a:	call   0x14000ee60
   14000f88f:	mov    rcx,rbx
   14000f892:	call   QWORD PTR [rip+0x4948]        # 0x1400141e0
   14000f898:	lea    rcx,[rsp+0x20]
   14000f89d:	call   QWORD PTR [rip+0x4945]        # 0x1400141e8
   14000f8a3:	lea    rcx,[rsp+0x20]
   14000f8a8:	call   QWORD PTR [rip+0x4af2]        # 0x1400143a0
   14000f8ae:	mov    rdi,QWORD PTR [rsp+0x50]
   14000f8b3:	mov    al,0x1
   14000f8b5:	add    rsp,0x40
   14000f8b9:	pop    rbx
   14000f8ba:	ret    
   14000f8bb:	int3   
   14000f8bc:	int3   
   14000f8bd:	int3   
   14000f8be:	int3   
   14000f8bf:	int3   
   14000f8c0:	add    rcx,0x8
   14000f8c4:	rex.W jmp QWORD PTR [rip+0x4a85]        # 0x140014350
   14000f8cb:	int3   
   14000f8cc:	int3   
   14000f8cd:	int3   
   14000f8ce:	int3   
   14000f8cf:	int3   
   14000f8d0:	add    rcx,0x18
   14000f8d4:	rex.W jmp QWORD PTR [rip+0x4a75]        # 0x140014350
   14000f8db:	int3   
   14000f8dc:	int3   
   14000f8dd:	int3   
   14000f8de:	int3   
   14000f8df:	int3   
   14000f8e0:	rex push rbx
   14000f8e2:	push   rsi
   14000f8e3:	sub    rsp,0x38
   14000f8e7:	mov    rax,QWORD PTR [rcx+0x8]
   14000f8eb:	mov    rsi,rcx
   14000f8ee:	cmp    DWORD PTR [rax+0x4],0x0
   14000f8f2:	je     0x14000fc35
   14000f8f8:	lea    rdx,[rcx+0x8]
   14000f8fc:	lea    rcx,[rsp+0x58]
   14000f901:	mov    QWORD PTR [rsp+0x60],rbp
   14000f906:	mov    QWORD PTR [rsp+0x30],rdi
   14000f90b:	call   QWORD PTR [rip+0x4c57]        # 0x140014568
   14000f911:	lea    rcx,[rsp+0x50]
   14000f916:	mov    dl,0x2e
   14000f918:	call   QWORD PTR [rip+0x4afa]        # 0x140014418
   14000f91e:	lea    rcx,[rsp+0x58]
   14000f923:	mov    r9d,0x1
   14000f929:	movzx  edx,WORD PTR [rax]
   14000f92c:	xor    r8d,r8d
   14000f92f:	call   QWORD PTR [rip+0x4a13]        # 0x140014348
   14000f935:	cmp    eax,0xffffffff
   14000f938:	jle    0x14000f966
   14000f93a:	lea    rdx,[rsp+0x50]
   14000f93f:	lea    rcx,[rsp+0x58]
   14000f944:	mov    r8d,eax
   14000f947:	call   QWORD PTR [rip+0x4903]        # 0x140014250
   14000f94d:	lea    rcx,[rsp+0x58]
   14000f952:	mov    rdx,rax
   14000f955:	call   QWORD PTR [rip+0x49f5]        # 0x140014350
   14000f95b:	lea    rcx,[rsp+0x50]
   14000f960:	call   QWORD PTR [rip+0x4be2]        # 0x140014548
   14000f966:	or     rcx,0xffffffffffffffff
   14000f96a:	lea    rdx,[rip+0x9663]        # 0x140018fd4
   14000f971:	xor    eax,eax
   14000f973:	mov    QWORD PTR [rsp+0x28],rdx
   14000f978:	mov    rdi,rdx
   14000f97b:	lea    rdx,[rsp+0x20]
   14000f980:	repnz scas al,BYTE PTR es:[rdi]
   14000f982:	not    rcx
   14000f985:	dec    rcx
   14000f988:	mov    DWORD PTR [rsp+0x20],ecx
   14000f98c:	lea    rcx,[rsp+0x58]
   14000f991:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000f996:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000f99c:	call   QWORD PTR [rip+0x4826]        # 0x1400141c8
   14000f9a2:	or     rcx,0xffffffffffffffff
   14000f9a6:	lea    rdx,[rip+0x961b]        # 0x140018fc8
   14000f9ad:	xor    eax,eax
   14000f9af:	mov    QWORD PTR [rsp+0x28],rdx
   14000f9b4:	mov    rdi,rdx
   14000f9b7:	lea    rdx,[rsp+0x20]
   14000f9bc:	repnz scas al,BYTE PTR es:[rdi]
   14000f9be:	not    rcx
   14000f9c1:	dec    rcx
   14000f9c4:	mov    DWORD PTR [rsp+0x20],ecx
   14000f9c8:	lea    rcx,[rsp+0x50]
   14000f9cd:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000f9d2:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000f9d8:	call   QWORD PTR [rip+0x4b62]        # 0x140014540
   14000f9de:	lea    rdx,[rsp+0x50]
   14000f9e3:	mov    rcx,rsi
   14000f9e6:	call   QWORD PTR [rip+0x482c]        # 0x140014218
   14000f9ec:	lea    rcx,[rsp+0x50]
   14000f9f1:	call   QWORD PTR [rip+0x4b51]        # 0x140014548
   14000f9f7:	or     rcx,0xffffffffffffffff
   14000f9fb:	lea    rdx,[rip+0x95b6]        # 0x140018fb8
   14000fa02:	mov    QWORD PTR [rsp+0x28],rdx
   14000fa07:	mov    rdi,rdx
   14000fa0a:	xor    eax,eax
   14000fa0c:	repnz scas al,BYTE PTR es:[rdi]
   14000fa0e:	lea    rdx,[rsp+0x20]
   14000fa13:	not    rcx
   14000fa16:	dec    rcx
   14000fa19:	mov    DWORD PTR [rsp+0x20],ecx
   14000fa1d:	lea    rcx,[rsp+0x50]
   14000fa22:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000fa27:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000fa2d:	call   QWORD PTR [rip+0x4b0d]        # 0x140014540
   14000fa33:	lea    rdx,[rsp+0x50]
   14000fa38:	mov    rcx,rsi
   14000fa3b:	call   QWORD PTR [rip+0x47d7]        # 0x140014218
   14000fa41:	lea    rcx,[rsp+0x50]
   14000fa46:	call   QWORD PTR [rip+0x4afc]        # 0x140014548
   14000fa4c:	or     rcx,0xffffffffffffffff
   14000fa50:	lea    rbp,[rip+0x94dd]        # 0x140018f34
   14000fa57:	mov    QWORD PTR [rsp+0x28],rbp
   14000fa5c:	xor    eax,eax
   14000fa5e:	mov    rdi,rbp
   14000fa61:	repnz scas al,BYTE PTR es:[rdi]
   14000fa63:	lea    rdx,[rsp+0x20]
   14000fa68:	not    rcx
   14000fa6b:	dec    rcx
   14000fa6e:	mov    DWORD PTR [rsp+0x20],ecx
   14000fa72:	lea    rcx,[rsp+0x50]
   14000fa77:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000fa7c:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000fa82:	call   QWORD PTR [rip+0x4ab8]        # 0x140014540
   14000fa88:	lea    rdx,[rsp+0x50]
   14000fa8d:	mov    rcx,rsi
   14000fa90:	call   QWORD PTR [rip+0x4782]        # 0x140014218
   14000fa96:	lea    rcx,[rsp+0x50]
   14000fa9b:	call   QWORD PTR [rip+0x4aa7]        # 0x140014548
   14000faa1:	or     rcx,0xffffffffffffffff
   14000faa5:	lea    rdx,[rip+0x9500]        # 0x140018fac
   14000faac:	xor    eax,eax
   14000faae:	mov    rdi,rdx
   14000fab1:	mov    QWORD PTR [rsp+0x28],rdx
   14000fab6:	repnz scas al,BYTE PTR es:[rdi]
   14000fab8:	not    rcx
   14000fabb:	dec    rcx
   14000fabe:	mov    DWORD PTR [rsp+0x20],ecx
   14000fac2:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000fac7:	lea    rdx,[rsp+0x20]
   14000facc:	lea    rcx,[rsp+0x50]
   14000fad1:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000fad7:	call   QWORD PTR [rip+0x4a63]        # 0x140014540
   14000fadd:	lea    r8,[rsi+0x8]
   14000fae1:	lea    rdx,[rsp+0x50]
   14000fae6:	mov    rcx,rsi
   14000fae9:	call   QWORD PTR [rip+0x4711]        # 0x140014200
   14000faef:	lea    rcx,[rsp+0x50]
   14000faf4:	call   QWORD PTR [rip+0x4a4e]        # 0x140014548
   14000fafa:	or     rcx,0xffffffffffffffff
   14000fafe:	lea    rdx,[rip+0x949f]        # 0x140018fa4
   14000fb05:	mov    QWORD PTR [rsp+0x28],rdx
   14000fb0a:	mov    rdi,rdx
   14000fb0d:	xor    eax,eax
   14000fb0f:	repnz scas al,BYTE PTR es:[rdi]
   14000fb11:	lea    rdx,[rsp+0x20]
   14000fb16:	not    rcx
   14000fb19:	dec    rcx
   14000fb1c:	mov    DWORD PTR [rsp+0x20],ecx
   14000fb20:	lea    rcx,[rsp+0x50]
   14000fb25:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000fb2a:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000fb30:	call   QWORD PTR [rip+0x4a0a]        # 0x140014540
   14000fb36:	lea    r8,[rsp+0x58]
   14000fb3b:	lea    rdx,[rsp+0x50]
   14000fb40:	mov    rcx,rsi
   14000fb43:	call   QWORD PTR [rip+0x46b7]        # 0x140014200
   14000fb49:	lea    rcx,[rsp+0x50]
   14000fb4e:	call   QWORD PTR [rip+0x49f4]        # 0x140014548
   14000fb54:	mov    rcx,rsi
   14000fb57:	call   QWORD PTR [rip+0x46c3]        # 0x140014220
   14000fb5d:	mov    rcx,rsi
   14000fb60:	call   QWORD PTR [rip+0x46ba]        # 0x140014220
   14000fb66:	or     rcx,0xffffffffffffffff
   14000fb6a:	lea    rdx,[rip+0x9427]        # 0x140018f98
   14000fb71:	mov    QWORD PTR [rsp+0x28],rdx
   14000fb76:	mov    rdi,rdx
   14000fb79:	xor    eax,eax
   14000fb7b:	repnz scas al,BYTE PTR es:[rdi]
   14000fb7d:	lea    rdx,[rsp+0x20]
   14000fb82:	not    rcx
   14000fb85:	dec    rcx
   14000fb88:	mov    DWORD PTR [rsp+0x20],ecx
   14000fb8c:	lea    rcx,[rsp+0x50]
   14000fb91:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000fb96:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000fb9c:	call   QWORD PTR [rip+0x499e]        # 0x140014540
   14000fba2:	lea    rdx,[rsp+0x50]
   14000fba7:	mov    rcx,rsi
   14000fbaa:	call   QWORD PTR [rip+0x4668]        # 0x140014218
   14000fbb0:	lea    rcx,[rsp+0x50]
   14000fbb5:	call   QWORD PTR [rip+0x498d]        # 0x140014548
   14000fbbb:	or     rcx,0xffffffffffffffff
   14000fbbf:	mov    QWORD PTR [rsp+0x28],rbp
   14000fbc4:	xor    eax,eax
   14000fbc6:	mov    rdi,rbp
   14000fbc9:	lea    rdx,[rsp+0x20]
   14000fbce:	repnz scas al,BYTE PTR es:[rdi]
   14000fbd0:	not    rcx
   14000fbd3:	dec    rcx
   14000fbd6:	mov    DWORD PTR [rsp+0x20],ecx
   14000fbda:	lea    rcx,[rsp+0x50]
   14000fbdf:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   14000fbe4:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000fbea:	call   QWORD PTR [rip+0x4950]        # 0x140014540
   14000fbf0:	lea    r8,[rsp+0x58]
   14000fbf5:	lea    rdx,[rsp+0x50]
   14000fbfa:	mov    rcx,rsi
   14000fbfd:	call   QWORD PTR [rip+0x45fd]        # 0x140014200
   14000fc03:	lea    rcx,[rsp+0x50]
   14000fc08:	call   QWORD PTR [rip+0x493a]        # 0x140014548
   14000fc0e:	mov    rcx,rsi
   14000fc11:	call   QWORD PTR [rip+0x4609]        # 0x140014220
   14000fc17:	mov    rcx,rsi
   14000fc1a:	call   QWORD PTR [rip+0x4600]        # 0x140014220
   14000fc20:	lea    rcx,[rsp+0x58]
   14000fc25:	call   QWORD PTR [rip+0x491d]        # 0x140014548
   14000fc2b:	mov    rdi,QWORD PTR [rsp+0x30]
   14000fc30:	mov    rbp,QWORD PTR [rsp+0x60]
   14000fc35:	add    rsp,0x38
   14000fc39:	pop    rsi
   14000fc3a:	pop    rbx
   14000fc3b:	ret    
   14000fc3c:	int3   
   14000fc3d:	int3   
   14000fc3e:	int3   
   14000fc3f:	int3   
   14000fc40:	mov    r11,rsp
   14000fc43:	push   rbp
   14000fc44:	sub    rsp,0x70
   14000fc48:	mov    rax,QWORD PTR [rcx+0x10]
   14000fc4c:	mov    rbp,rcx
   14000fc4f:	cmp    DWORD PTR [rax+0x4],0x0
   14000fc53:	je     0x140010aa8
   14000fc59:	or     rcx,0xffffffffffffffff
   14000fc5d:	mov    QWORD PTR [r11-0x10],rbx
   14000fc61:	lea    rdx,[rip+0x9418]        # 0x140019080
   14000fc68:	mov    QWORD PTR [r11-0x18],rsi
   14000fc6c:	mov    QWORD PTR [r11-0x20],rdi
   14000fc70:	mov    rdi,rdx
   14000fc73:	xor    eax,eax
   14000fc75:	mov    QWORD PTR [r11-0x28],r12
   14000fc79:	repnz scas al,BYTE PTR es:[rdi]
   14000fc7b:	not    rcx
   14000fc7e:	dec    rcx
   14000fc81:	mov    DWORD PTR [rsp+0x30],ecx
   14000fc85:	mov    QWORD PTR [r11-0x40],rdx
   14000fc89:	lea    rdx,[r11-0x38]
   14000fc8d:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000fc92:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000fc98:	lea    rcx,[r11+0x8]
   14000fc9c:	call   QWORD PTR [rip+0x489e]        # 0x140014540
   14000fca2:	lea    rdx,[rsp+0x80]
   14000fcaa:	mov    rcx,rbp
   14000fcad:	call   QWORD PTR [rip+0x4565]        # 0x140014218
   14000fcb3:	lea    rcx,[rsp+0x80]
   14000fcbb:	call   QWORD PTR [rip+0x4887]        # 0x140014548
   14000fcc1:	or     rcx,0xffffffffffffffff
   14000fcc5:	lea    r12,[rip+0x9214]        # 0x140018ee0
   14000fccc:	xor    eax,eax
   14000fcce:	mov    rdi,r12
   14000fcd1:	mov    QWORD PTR [rsp+0x38],r12
   14000fcd6:	repnz scas al,BYTE PTR es:[rdi]
   14000fcd8:	lea    rdx,[rsp+0x40]
   14000fcdd:	not    rcx
   14000fce0:	dec    rcx
   14000fce3:	mov    DWORD PTR [rsp+0x30],ecx
   14000fce7:	lea    rcx,[rsp+0x80]
   14000fcef:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000fcf4:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000fcfa:	call   QWORD PTR [rip+0x4840]        # 0x140014540
   14000fd00:	mov    rdx,QWORD PTR [rbp+0x10]
   14000fd04:	mov    rdi,QWORD PTR [rdx+0x10]
   14000fd08:	xor    ebx,ebx
   14000fd0a:	test   rdi,rdi
   14000fd0d:	je     0x14000fd55
   14000fd0f:	mov    rsi,rbx
   14000fd12:	lea    rcx,[rdi+0x18]
   14000fd16:	lea    rdx,[rsp+0x80]
   14000fd1e:	call   QWORD PTR [rip+0x459c]        # 0x1400142c0
   14000fd24:	test   al,al
   14000fd26:	jne    0x14000fd31
   14000fd28:	mov    rsi,rdi
   14000fd2b:	mov    rdi,QWORD PTR [rdi+0x8]
   14000fd2f:	jmp    0x14000fd35
   14000fd31:	mov    rdi,QWORD PTR [rdi+0x10]
   14000fd35:	test   rdi,rdi
   14000fd38:	jne    0x14000fd12
   14000fd3a:	test   rsi,rsi
   14000fd3d:	je     0x14000fd55
   14000fd3f:	lea    rdx,[rsi+0x18]
   14000fd43:	lea    rcx,[rsp+0x80]
   14000fd4b:	call   QWORD PTR [rip+0x456f]        # 0x1400142c0
   14000fd51:	test   al,al
   14000fd53:	je     0x14000fd58
   14000fd55:	mov    rsi,rbx
   14000fd58:	lea    rcx,[rsp+0x80]
   14000fd60:	test   rsi,rsi
   14000fd63:	setne  dil
   14000fd67:	call   QWORD PTR [rip+0x47db]        # 0x140014548
   14000fd6d:	test   dil,dil
   14000fd70:	je     0x14000feb9
   14000fd76:	or     rcx,0xffffffffffffffff
   14000fd7a:	xor    eax,eax
   14000fd7c:	mov    rdi,r12
   14000fd7f:	repnz scas al,BYTE PTR es:[rdi]
   14000fd81:	mov    QWORD PTR [rsp+0x38],r12
   14000fd86:	lea    rdx,[rsp+0x40]
   14000fd8b:	not    rcx
   14000fd8e:	dec    rcx
   14000fd91:	mov    DWORD PTR [rsp+0x30],ecx
   14000fd95:	lea    rcx,[rsp+0x80]
   14000fd9d:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000fda2:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000fda8:	call   QWORD PTR [rip+0x4792]        # 0x140014540
   14000fdae:	or     rcx,0xffffffffffffffff
   14000fdb2:	xor    eax,eax
   14000fdb4:	mov    rdi,r12
   14000fdb7:	mov    QWORD PTR [rsp+0x38],r12
   14000fdbc:	repnz scas al,BYTE PTR es:[rdi]
   14000fdbe:	lea    rdx,[rsp+0x40]
   14000fdc3:	not    rcx
   14000fdc6:	dec    rcx
   14000fdc9:	mov    DWORD PTR [rsp+0x30],ecx
   14000fdcd:	lea    rcx,[rsp+0x90]
   14000fdd5:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000fdda:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000fde0:	call   QWORD PTR [rip+0x475a]        # 0x140014540
   14000fde6:	lea    rcx,[rsp+0x98]
   14000fdee:	call   QWORD PTR [rip+0x45fc]        # 0x1400143f0
   14000fdf4:	mov    r12,rax
   14000fdf7:	mov    rax,QWORD PTR [rbp+0x10]
   14000fdfb:	mov    rdi,QWORD PTR [rax+0x10]
   14000fdff:	test   rdi,rdi
   14000fe02:	je     0x14000fe57
   14000fe04:	mov    rsi,rbx
   14000fe07:	nop    WORD PTR [rax+rax*1+0x0]
   14000fe10:	lea    rcx,[rdi+0x18]
   14000fe14:	lea    rdx,[rsp+0x80]
   14000fe1c:	call   QWORD PTR [rip+0x449e]        # 0x1400142c0
   14000fe22:	test   al,al
   14000fe24:	jne    0x14000fe2f
   14000fe26:	mov    rsi,rdi
   14000fe29:	mov    rdi,QWORD PTR [rdi+0x8]
   14000fe2d:	jmp    0x14000fe33
   14000fe2f:	mov    rdi,QWORD PTR [rdi+0x10]
   14000fe33:	test   rdi,rdi
   14000fe36:	jne    0x14000fe10
   14000fe38:	test   rsi,rsi
   14000fe3b:	je     0x14000fe57
   14000fe3d:	lea    rdx,[rsi+0x18]
   14000fe41:	lea    rcx,[rsp+0x80]
   14000fe49:	call   QWORD PTR [rip+0x4471]        # 0x1400142c0
   14000fe4f:	test   al,al
   14000fe51:	jne    0x14000fe57
   14000fe53:	lea    r12,[rsi+0x20]
   14000fe57:	lea    rcx,[rsp+0x88]
   14000fe5f:	mov    rdx,r12
   14000fe62:	call   QWORD PTR [rip+0x4700]        # 0x140014568
   14000fe68:	lea    r8,[rsp+0x88]
   14000fe70:	lea    rdx,[rsp+0x90]
   14000fe78:	mov    rcx,rbp
   14000fe7b:	call   QWORD PTR [rip+0x437f]        # 0x140014200
   14000fe81:	lea    rcx,[rsp+0x88]
   14000fe89:	call   QWORD PTR [rip+0x46b9]        # 0x140014548
   14000fe8f:	lea    rcx,[rsp+0x98]
   14000fe97:	call   QWORD PTR [rip+0x46ab]        # 0x140014548
   14000fe9d:	lea    rcx,[rsp+0x90]
   14000fea5:	call   QWORD PTR [rip+0x469d]        # 0x140014548
   14000feab:	lea    rcx,[rsp+0x80]
   14000feb3:	call   QWORD PTR [rip+0x468f]        # 0x140014548
   14000feb9:	or     rcx,0xffffffffffffffff
   14000febd:	lea    r12,[rip+0x91ac]        # 0x140019070
   14000fec4:	xor    eax,eax
   14000fec6:	mov    rdi,r12
   14000fec9:	mov    QWORD PTR [rsp+0x38],r12
   14000fece:	lea    rdx,[rsp+0x40]
   14000fed3:	repnz scas al,BYTE PTR es:[rdi]
   14000fed5:	not    rcx
   14000fed8:	dec    rcx
   14000fedb:	mov    DWORD PTR [rsp+0x30],ecx
   14000fedf:	lea    rcx,[rsp+0x80]
   14000fee7:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000feec:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000fef2:	call   QWORD PTR [rip+0x4648]        # 0x140014540
   14000fef8:	mov    rdx,QWORD PTR [rbp+0x10]
   14000fefc:	mov    rdi,QWORD PTR [rdx+0x10]
   14000ff00:	test   rdi,rdi
   14000ff03:	je     0x14000ff53
   14000ff05:	mov    rsi,rbx
   14000ff08:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ff10:	lea    rcx,[rdi+0x18]
   14000ff14:	lea    rdx,[rsp+0x80]
   14000ff1c:	call   QWORD PTR [rip+0x439e]        # 0x1400142c0
   14000ff22:	test   al,al
   14000ff24:	jne    0x14000ff2f
   14000ff26:	mov    rsi,rdi
   14000ff29:	mov    rdi,QWORD PTR [rdi+0x8]
   14000ff2d:	jmp    0x14000ff33
   14000ff2f:	mov    rdi,QWORD PTR [rdi+0x10]
   14000ff33:	test   rdi,rdi
   14000ff36:	jne    0x14000ff10
   14000ff38:	test   rsi,rsi
   14000ff3b:	je     0x14000ff53
   14000ff3d:	lea    rdx,[rsi+0x18]
   14000ff41:	lea    rcx,[rsp+0x80]
   14000ff49:	call   QWORD PTR [rip+0x4371]        # 0x1400142c0
   14000ff4f:	test   al,al
   14000ff51:	je     0x14000ff56
   14000ff53:	mov    rsi,rbx
   14000ff56:	lea    rcx,[rsp+0x80]
   14000ff5e:	test   rsi,rsi
   14000ff61:	setne  dil
   14000ff65:	call   QWORD PTR [rip+0x45dd]        # 0x140014548
   14000ff6b:	test   dil,dil
   14000ff6e:	je     0x1400100b9
   14000ff74:	or     rcx,0xffffffffffffffff
   14000ff78:	xor    eax,eax
   14000ff7a:	mov    rdi,r12
   14000ff7d:	repnz scas al,BYTE PTR es:[rdi]
   14000ff7f:	mov    QWORD PTR [rsp+0x38],r12
   14000ff84:	lea    rdx,[rsp+0x40]
   14000ff89:	not    rcx
   14000ff8c:	dec    rcx
   14000ff8f:	mov    DWORD PTR [rsp+0x30],ecx
   14000ff93:	lea    rcx,[rsp+0x80]
   14000ff9b:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000ffa0:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000ffa6:	call   QWORD PTR [rip+0x4594]        # 0x140014540
   14000ffac:	or     rcx,0xffffffffffffffff
   14000ffb0:	lea    rdx,[rip+0x90a9]        # 0x140019060
   14000ffb7:	xor    eax,eax
   14000ffb9:	mov    rdi,rdx
   14000ffbc:	mov    QWORD PTR [rsp+0x38],rdx
   14000ffc1:	lea    rdx,[rsp+0x40]
   14000ffc6:	repnz scas al,BYTE PTR es:[rdi]
   14000ffc8:	not    rcx
   14000ffcb:	dec    rcx
   14000ffce:	mov    DWORD PTR [rsp+0x30],ecx
   14000ffd2:	lea    rcx,[rsp+0x90]
   14000ffda:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   14000ffdf:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000ffe5:	call   QWORD PTR [rip+0x4555]        # 0x140014540
   14000ffeb:	lea    rcx,[rsp+0x98]
   14000fff3:	call   QWORD PTR [rip+0x43f7]        # 0x1400143f0
   14000fff9:	mov    r12,rax
   14000fffc:	mov    rax,QWORD PTR [rbp+0x10]
   140010000:	mov    rdi,QWORD PTR [rax+0x10]
   140010004:	test   rdi,rdi
   140010007:	je     0x140010057
   140010009:	mov    rsi,rbx
   14001000c:	nop    DWORD PTR [rax+0x0]
   140010010:	lea    rcx,[rdi+0x18]
   140010014:	lea    rdx,[rsp+0x80]
   14001001c:	call   QWORD PTR [rip+0x429e]        # 0x1400142c0
   140010022:	test   al,al
   140010024:	jne    0x14001002f
   140010026:	mov    rsi,rdi
   140010029:	mov    rdi,QWORD PTR [rdi+0x8]
   14001002d:	jmp    0x140010033
   14001002f:	mov    rdi,QWORD PTR [rdi+0x10]
   140010033:	test   rdi,rdi
   140010036:	jne    0x140010010
   140010038:	test   rsi,rsi
   14001003b:	je     0x140010057
   14001003d:	lea    rdx,[rsi+0x18]
   140010041:	lea    rcx,[rsp+0x80]
   140010049:	call   QWORD PTR [rip+0x4271]        # 0x1400142c0
   14001004f:	test   al,al
   140010051:	jne    0x140010057
   140010053:	lea    r12,[rsi+0x20]
   140010057:	lea    rcx,[rsp+0x88]
   14001005f:	mov    rdx,r12
   140010062:	call   QWORD PTR [rip+0x4500]        # 0x140014568
   140010068:	lea    r8,[rsp+0x88]
   140010070:	lea    rdx,[rsp+0x90]
   140010078:	mov    rcx,rbp
   14001007b:	call   QWORD PTR [rip+0x417f]        # 0x140014200
   140010081:	lea    rcx,[rsp+0x88]
   140010089:	call   QWORD PTR [rip+0x44b9]        # 0x140014548
   14001008f:	lea    rcx,[rsp+0x98]
   140010097:	call   QWORD PTR [rip+0x44ab]        # 0x140014548
   14001009d:	lea    rcx,[rsp+0x90]
   1400100a5:	call   QWORD PTR [rip+0x449d]        # 0x140014548
   1400100ab:	lea    rcx,[rsp+0x80]
   1400100b3:	call   QWORD PTR [rip+0x448f]        # 0x140014548
   1400100b9:	or     rcx,0xffffffffffffffff
   1400100bd:	lea    r12,[rip+0x8f8c]        # 0x140019050
   1400100c4:	xor    eax,eax
   1400100c6:	mov    rdi,r12
   1400100c9:	mov    QWORD PTR [rsp+0x38],r12
   1400100ce:	lea    rdx,[rsp+0x40]
   1400100d3:	repnz scas al,BYTE PTR es:[rdi]
   1400100d5:	not    rcx
   1400100d8:	dec    rcx
   1400100db:	mov    DWORD PTR [rsp+0x30],ecx
   1400100df:	lea    rcx,[rsp+0x80]
   1400100e7:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400100ec:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400100f2:	call   QWORD PTR [rip+0x4448]        # 0x140014540
   1400100f8:	mov    rdx,QWORD PTR [rbp+0x10]
   1400100fc:	mov    rdi,QWORD PTR [rdx+0x10]
   140010100:	test   rdi,rdi
   140010103:	je     0x140010153
   140010105:	mov    rsi,rbx
   140010108:	nop    DWORD PTR [rax+rax*1+0x0]
   140010110:	lea    rcx,[rdi+0x18]
   140010114:	lea    rdx,[rsp+0x80]
   14001011c:	call   QWORD PTR [rip+0x419e]        # 0x1400142c0
   140010122:	test   al,al
   140010124:	jne    0x14001012f
   140010126:	mov    rsi,rdi
   140010129:	mov    rdi,QWORD PTR [rdi+0x8]
   14001012d:	jmp    0x140010133
   14001012f:	mov    rdi,QWORD PTR [rdi+0x10]
   140010133:	test   rdi,rdi
   140010136:	jne    0x140010110
   140010138:	test   rsi,rsi
   14001013b:	je     0x140010153
   14001013d:	lea    rdx,[rsi+0x18]
   140010141:	lea    rcx,[rsp+0x80]
   140010149:	call   QWORD PTR [rip+0x4171]        # 0x1400142c0
   14001014f:	test   al,al
   140010151:	je     0x140010156
   140010153:	mov    rsi,rbx
   140010156:	lea    rcx,[rsp+0x80]
   14001015e:	test   rsi,rsi
   140010161:	setne  dil
   140010165:	call   QWORD PTR [rip+0x43dd]        # 0x140014548
   14001016b:	test   dil,dil
   14001016e:	je     0x14001035a
   140010174:	or     rcx,0xffffffffffffffff
   140010178:	xor    eax,eax
   14001017a:	mov    QWORD PTR [rsp+0x38],r12
   14001017f:	mov    rdi,r12
   140010182:	lea    rdx,[rsp+0x40]
   140010187:	repnz scas al,BYTE PTR es:[rdi]
   140010189:	not    rcx
   14001018c:	dec    rcx
   14001018f:	mov    DWORD PTR [rsp+0x30],ecx
   140010193:	lea    rcx,[rsp+0x90]
   14001019b:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   1400101a0:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400101a6:	call   QWORD PTR [rip+0x4394]        # 0x140014540
   1400101ac:	or     rcx,0xffffffffffffffff
   1400101b0:	lea    rdx,[rip+0x58f5]        # 0x140015aac
   1400101b7:	xor    eax,eax
   1400101b9:	mov    QWORD PTR [rsp+0x48],rdx
   1400101be:	mov    rdi,rdx
   1400101c1:	lea    rdx,[rsp+0x40]
   1400101c6:	repnz scas al,BYTE PTR es:[rdi]
   1400101c8:	not    rcx
   1400101cb:	dec    rcx
   1400101ce:	mov    DWORD PTR [rsp+0x40],ecx
   1400101d2:	lea    rcx,[rsp+0x28]
   1400101d7:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400101dc:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400101e2:	call   QWORD PTR [rip+0x4358]        # 0x140014540
   1400101e8:	or     rcx,0xffffffffffffffff
   1400101ec:	lea    rdx,[rip+0x8e4d]        # 0x140019040
   1400101f3:	xor    eax,eax
   1400101f5:	mov    QWORD PTR [rsp+0x48],rdx
   1400101fa:	mov    rdi,rdx
   1400101fd:	lea    rdx,[rsp+0x40]
   140010202:	repnz scas al,BYTE PTR es:[rdi]
   140010204:	not    rcx
   140010207:	dec    rcx
   14001020a:	mov    DWORD PTR [rsp+0x40],ecx
   14001020e:	lea    rcx,[rsp+0x20]
   140010213:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140010218:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14001021e:	call   QWORD PTR [rip+0x431c]        # 0x140014540
   140010224:	lea    rcx,[rsp+0x30]
   140010229:	call   QWORD PTR [rip+0x41c1]        # 0x1400143f0
   14001022f:	mov    r12,rax
   140010232:	mov    rax,QWORD PTR [rbp+0x10]
   140010236:	mov    rdi,QWORD PTR [rax+0x10]
   14001023a:	test   rdi,rdi
   14001023d:	je     0x140010289
   14001023f:	mov    rsi,rbx
   140010242:	lea    rcx,[rdi+0x18]
   140010246:	lea    rdx,[rsp+0x90]
   14001024e:	call   QWORD PTR [rip+0x406c]        # 0x1400142c0
   140010254:	test   al,al
   140010256:	jne    0x140010261
   140010258:	mov    rsi,rdi
   14001025b:	mov    rdi,QWORD PTR [rdi+0x8]
   14001025f:	jmp    0x140010265
   140010261:	mov    rdi,QWORD PTR [rdi+0x10]
   140010265:	test   rdi,rdi
   140010268:	jne    0x140010242
   14001026a:	test   rsi,rsi
   14001026d:	je     0x140010289
   14001026f:	lea    rdx,[rsi+0x18]
   140010273:	lea    rcx,[rsp+0x90]
   14001027b:	call   QWORD PTR [rip+0x403f]        # 0x1400142c0
   140010281:	test   al,al
   140010283:	jne    0x140010289
   140010285:	lea    r12,[rsi+0x20]
   140010289:	lea    rcx,[rsp+0x98]
   140010291:	mov    rdx,r12
   140010294:	call   QWORD PTR [rip+0x42ce]        # 0x140014568
   14001029a:	lea    rdx,[rbp+0x18]
   14001029e:	lea    rcx,[rsp+0x88]
   1400102a6:	call   QWORD PTR [rip+0x42bc]        # 0x140014568
   1400102ac:	lea    rdx,[rsp+0x28]
   1400102b1:	lea    rcx,[rsp+0x88]
   1400102b9:	call   QWORD PTR [rip+0x42b1]        # 0x140014570
   1400102bf:	lea    rdx,[rsp+0x88]
   1400102c7:	lea    rcx,[rsp+0x80]
   1400102cf:	call   QWORD PTR [rip+0x4293]        # 0x140014568
   1400102d5:	lea    rdx,[rsp+0x98]
   1400102dd:	lea    rcx,[rsp+0x80]
   1400102e5:	call   QWORD PTR [rip+0x4285]        # 0x140014570
   1400102eb:	lea    r8,[rsp+0x80]
   1400102f3:	lea    rdx,[rsp+0x20]
   1400102f8:	mov    rcx,rbp
   1400102fb:	call   QWORD PTR [rip+0x3eff]        # 0x140014200
   140010301:	lea    rcx,[rsp+0x80]
   140010309:	call   QWORD PTR [rip+0x4239]        # 0x140014548
   14001030f:	lea    rcx,[rsp+0x88]
   140010317:	call   QWORD PTR [rip+0x422b]        # 0x140014548
   14001031d:	lea    rcx,[rsp+0x98]
   140010325:	call   QWORD PTR [rip+0x421d]        # 0x140014548
   14001032b:	lea    rcx,[rsp+0x30]
   140010330:	call   QWORD PTR [rip+0x4212]        # 0x140014548
   140010336:	lea    rcx,[rsp+0x20]
   14001033b:	call   QWORD PTR [rip+0x4207]        # 0x140014548
   140010341:	lea    rcx,[rsp+0x28]
   140010346:	call   QWORD PTR [rip+0x41fc]        # 0x140014548
   14001034c:	lea    rcx,[rsp+0x90]
   140010354:	call   QWORD PTR [rip+0x41ee]        # 0x140014548
   14001035a:	or     rcx,0xffffffffffffffff
   14001035e:	lea    r12,[rip+0x8ccb]        # 0x140019030
   140010365:	xor    eax,eax
   140010367:	mov    QWORD PTR [rsp+0x48],r12
   14001036c:	mov    rdi,r12
   14001036f:	lea    rdx,[rsp+0x40]
   140010374:	repnz scas al,BYTE PTR es:[rdi]
   140010376:	not    rcx
   140010379:	dec    rcx
   14001037c:	mov    DWORD PTR [rsp+0x40],ecx
   140010380:	lea    rcx,[rsp+0x80]
   140010388:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001038d:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140010393:	call   QWORD PTR [rip+0x41a7]        # 0x140014540
   140010399:	mov    rdx,QWORD PTR [rbp+0x10]
   14001039d:	mov    rdi,QWORD PTR [rdx+0x10]
   1400103a1:	test   rdi,rdi
   1400103a4:	je     0x1400103f3
   1400103a6:	mov    rsi,rbx
   1400103a9:	nop    DWORD PTR [rax+0x0]
   1400103b0:	lea    rcx,[rdi+0x18]
   1400103b4:	lea    rdx,[rsp+0x80]
   1400103bc:	call   QWORD PTR [rip+0x3efe]        # 0x1400142c0
   1400103c2:	test   al,al
   1400103c4:	jne    0x1400103cf
   1400103c6:	mov    rsi,rdi
   1400103c9:	mov    rdi,QWORD PTR [rdi+0x8]
   1400103cd:	jmp    0x1400103d3
   1400103cf:	mov    rdi,QWORD PTR [rdi+0x10]
   1400103d3:	test   rdi,rdi
   1400103d6:	jne    0x1400103b0
   1400103d8:	test   rsi,rsi
   1400103db:	je     0x1400103f3
   1400103dd:	lea    rdx,[rsi+0x18]
   1400103e1:	lea    rcx,[rsp+0x80]
   1400103e9:	call   QWORD PTR [rip+0x3ed1]        # 0x1400142c0
   1400103ef:	test   al,al
   1400103f1:	je     0x1400103f6
   1400103f3:	mov    rsi,rbx
   1400103f6:	lea    rcx,[rsp+0x80]
   1400103fe:	test   rsi,rsi
   140010401:	setne  dil
   140010405:	call   QWORD PTR [rip+0x413d]        # 0x140014548
   14001040b:	test   dil,dil
   14001040e:	je     0x1400105c2
   140010414:	or     rcx,0xffffffffffffffff
   140010418:	lea    rdx,[rip+0x8c01]        # 0x140019020
   14001041f:	xor    eax,eax
   140010421:	mov    QWORD PTR [rsp+0x48],rdx
   140010426:	mov    rdi,rdx
   140010429:	lea    rdx,[rsp+0x40]
   14001042e:	repnz scas al,BYTE PTR es:[rdi]
   140010430:	not    rcx
   140010433:	dec    rcx
   140010436:	mov    DWORD PTR [rsp+0x40],ecx
   14001043a:	lea    rcx,[rsp+0x80]
   140010442:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140010447:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14001044d:	call   QWORD PTR [rip+0x40ed]        # 0x140014540
   140010453:	lea    rdx,[rsp+0x80]
   14001045b:	mov    rcx,rbp
   14001045e:	call   QWORD PTR [rip+0x3db4]        # 0x140014218
   140010464:	lea    rcx,[rsp+0x80]
   14001046c:	call   QWORD PTR [rip+0x40d6]        # 0x140014548
   140010472:	or     rcx,0xffffffffffffffff
   140010476:	mov    QWORD PTR [rsp+0x48],r12
   14001047b:	xor    eax,eax
   14001047d:	mov    rdi,r12
   140010480:	lea    rdx,[rsp+0x40]
   140010485:	repnz scas al,BYTE PTR es:[rdi]
   140010487:	not    rcx
   14001048a:	dec    rcx
   14001048d:	mov    DWORD PTR [rsp+0x40],ecx
   140010491:	lea    rcx,[rsp+0x80]
   140010499:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001049e:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400104a4:	call   QWORD PTR [rip+0x4096]        # 0x140014540
   1400104aa:	or     rcx,0xffffffffffffffff
   1400104ae:	lea    rdx,[rip+0x8b5f]        # 0x140019014
   1400104b5:	xor    eax,eax
   1400104b7:	mov    QWORD PTR [rsp+0x48],rdx
   1400104bc:	mov    rdi,rdx
   1400104bf:	lea    rdx,[rsp+0x40]
   1400104c4:	repnz scas al,BYTE PTR es:[rdi]
   1400104c6:	not    rcx
   1400104c9:	dec    rcx
   1400104cc:	mov    DWORD PTR [rsp+0x40],ecx
   1400104d0:	lea    rcx,[rsp+0x90]
   1400104d8:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400104dd:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400104e3:	call   QWORD PTR [rip+0x4057]        # 0x140014540
   1400104e9:	lea    rcx,[rsp+0x98]
   1400104f1:	call   QWORD PTR [rip+0x3ef9]        # 0x1400143f0
   1400104f7:	mov    r12,rax
   1400104fa:	mov    rax,QWORD PTR [rbp+0x10]
   1400104fe:	mov    rdi,QWORD PTR [rax+0x10]
   140010502:	test   rdi,rdi
   140010505:	je     0x140010557
   140010507:	mov    rsi,rbx
   14001050a:	nop    WORD PTR [rax+rax*1+0x0]
   140010510:	lea    rcx,[rdi+0x18]
   140010514:	lea    rdx,[rsp+0x80]
   14001051c:	call   QWORD PTR [rip+0x3d9e]        # 0x1400142c0
   140010522:	test   al,al
   140010524:	jne    0x14001052f
   140010526:	mov    rsi,rdi
   140010529:	mov    rdi,QWORD PTR [rdi+0x8]
   14001052d:	jmp    0x140010533
   14001052f:	mov    rdi,QWORD PTR [rdi+0x10]
   140010533:	test   rdi,rdi
   140010536:	jne    0x140010510
   140010538:	test   rsi,rsi
   14001053b:	je     0x140010557
   14001053d:	lea    rdx,[rsi+0x18]
   140010541:	lea    rcx,[rsp+0x80]
   140010549:	call   QWORD PTR [rip+0x3d71]        # 0x1400142c0
   14001054f:	test   al,al
   140010551:	jne    0x140010557
   140010553:	lea    r12,[rsi+0x20]
   140010557:	lea    rcx,[rsp+0x88]
   14001055f:	mov    rdx,r12
   140010562:	call   QWORD PTR [rip+0x4000]        # 0x140014568
   140010568:	lea    r8,[rsp+0x88]
   140010570:	lea    rdx,[rsp+0x90]
   140010578:	mov    rcx,rbp
   14001057b:	call   QWORD PTR [rip+0x3c7f]        # 0x140014200
   140010581:	lea    rcx,[rsp+0x88]
   140010589:	call   QWORD PTR [rip+0x3fb9]        # 0x140014548
   14001058f:	lea    rcx,[rsp+0x98]
   140010597:	call   QWORD PTR [rip+0x3fab]        # 0x140014548
   14001059d:	lea    rcx,[rsp+0x90]
   1400105a5:	call   QWORD PTR [rip+0x3f9d]        # 0x140014548
   1400105ab:	lea    rcx,[rsp+0x80]
   1400105b3:	call   QWORD PTR [rip+0x3f8f]        # 0x140014548
   1400105b9:	mov    rcx,rbp
   1400105bc:	call   QWORD PTR [rip+0x3c5e]        # 0x140014220
   1400105c2:	or     rcx,0xffffffffffffffff
   1400105c6:	lea    r12,[rip+0x8a3b]        # 0x140019008
   1400105cd:	xor    eax,eax
   1400105cf:	mov    QWORD PTR [rsp+0x48],r12
   1400105d4:	mov    rdi,r12
   1400105d7:	lea    rdx,[rsp+0x40]
   1400105dc:	repnz scas al,BYTE PTR es:[rdi]
   1400105de:	not    rcx
   1400105e1:	dec    rcx
   1400105e4:	mov    DWORD PTR [rsp+0x40],ecx
   1400105e8:	lea    rcx,[rsp+0x80]
   1400105f0:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400105f5:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400105fb:	call   QWORD PTR [rip+0x3f3f]        # 0x140014540
   140010601:	mov    rdx,QWORD PTR [rbp+0x10]
   140010605:	mov    rdi,QWORD PTR [rdx+0x10]
   140010609:	test   rdi,rdi
   14001060c:	je     0x140010654
   14001060e:	mov    rsi,rbx
   140010611:	lea    rcx,[rdi+0x18]
   140010615:	lea    rdx,[rsp+0x80]
   14001061d:	call   QWORD PTR [rip+0x3c9d]        # 0x1400142c0
   140010623:	test   al,al
   140010625:	jne    0x140010630
   140010627:	mov    rsi,rdi
   14001062a:	mov    rdi,QWORD PTR [rdi+0x8]
   14001062e:	jmp    0x140010634
   140010630:	mov    rdi,QWORD PTR [rdi+0x10]
   140010634:	test   rdi,rdi
   140010637:	jne    0x140010611
   140010639:	test   rsi,rsi
   14001063c:	je     0x140010654
   14001063e:	lea    rdx,[rsi+0x18]
   140010642:	lea    rcx,[rsp+0x80]
   14001064a:	call   QWORD PTR [rip+0x3c70]        # 0x1400142c0
   140010650:	test   al,al
   140010652:	je     0x140010657
   140010654:	mov    rsi,rbx
   140010657:	lea    rcx,[rsp+0x80]
   14001065f:	test   rsi,rsi
   140010662:	setne  dil
   140010666:	call   QWORD PTR [rip+0x3edc]        # 0x140014548
   14001066c:	test   dil,dil
   14001066f:	je     0x140010822
   140010675:	or     rcx,0xffffffffffffffff
   140010679:	lea    rdx,[rip+0x8978]        # 0x140018ff8
   140010680:	xor    eax,eax
   140010682:	mov    QWORD PTR [rsp+0x48],rdx
   140010687:	mov    rdi,rdx
   14001068a:	lea    rdx,[rsp+0x40]
   14001068f:	repnz scas al,BYTE PTR es:[rdi]
   140010691:	not    rcx
   140010694:	dec    rcx
   140010697:	mov    DWORD PTR [rsp+0x40],ecx
   14001069b:	lea    rcx,[rsp+0x80]
   1400106a3:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400106a8:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400106ae:	call   QWORD PTR [rip+0x3e8c]        # 0x140014540
   1400106b4:	lea    rdx,[rsp+0x80]
   1400106bc:	mov    rcx,rbp
   1400106bf:	call   QWORD PTR [rip+0x3b53]        # 0x140014218
   1400106c5:	lea    rcx,[rsp+0x80]
   1400106cd:	call   QWORD PTR [rip+0x3e75]        # 0x140014548
   1400106d3:	or     rcx,0xffffffffffffffff
   1400106d7:	mov    QWORD PTR [rsp+0x48],r12
   1400106dc:	xor    eax,eax
   1400106de:	mov    rdi,r12
   1400106e1:	lea    rdx,[rsp+0x40]
   1400106e6:	repnz scas al,BYTE PTR es:[rdi]
   1400106e8:	not    rcx
   1400106eb:	dec    rcx
   1400106ee:	mov    DWORD PTR [rsp+0x40],ecx
   1400106f2:	lea    rcx,[rsp+0x80]
   1400106fa:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400106ff:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140010705:	call   QWORD PTR [rip+0x3e35]        # 0x140014540
   14001070b:	or     rcx,0xffffffffffffffff
   14001070f:	lea    rdx,[rip+0x881e]        # 0x140018f34
   140010716:	xor    eax,eax
   140010718:	mov    QWORD PTR [rsp+0x48],rdx
   14001071d:	mov    rdi,rdx
   140010720:	lea    rdx,[rsp+0x40]
   140010725:	repnz scas al,BYTE PTR es:[rdi]
   140010727:	not    rcx
   14001072a:	dec    rcx
   14001072d:	mov    DWORD PTR [rsp+0x40],ecx
   140010731:	lea    rcx,[rsp+0x90]
   140010739:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001073e:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140010744:	call   QWORD PTR [rip+0x3df6]        # 0x140014540
   14001074a:	lea    rcx,[rsp+0x98]
   140010752:	call   QWORD PTR [rip+0x3c98]        # 0x1400143f0
   140010758:	mov    r12,rax
   14001075b:	mov    rax,QWORD PTR [rbp+0x10]
   14001075f:	mov    rdi,QWORD PTR [rax+0x10]
   140010763:	test   rdi,rdi
   140010766:	je     0x1400107b7
   140010768:	mov    rsi,rbx
   14001076b:	nop    DWORD PTR [rax+rax*1+0x0]
   140010770:	lea    rcx,[rdi+0x18]
   140010774:	lea    rdx,[rsp+0x80]
   14001077c:	call   QWORD PTR [rip+0x3b3e]        # 0x1400142c0
   140010782:	test   al,al
   140010784:	jne    0x14001078f
   140010786:	mov    rsi,rdi
   140010789:	mov    rdi,QWORD PTR [rdi+0x8]
   14001078d:	jmp    0x140010793
   14001078f:	mov    rdi,QWORD PTR [rdi+0x10]
   140010793:	test   rdi,rdi
   140010796:	jne    0x140010770
   140010798:	test   rsi,rsi
   14001079b:	je     0x1400107b7
   14001079d:	lea    rdx,[rsi+0x18]
   1400107a1:	lea    rcx,[rsp+0x80]
   1400107a9:	call   QWORD PTR [rip+0x3b11]        # 0x1400142c0
   1400107af:	test   al,al
   1400107b1:	jne    0x1400107b7
   1400107b3:	lea    r12,[rsi+0x20]
   1400107b7:	lea    rcx,[rsp+0x88]
   1400107bf:	mov    rdx,r12
   1400107c2:	call   QWORD PTR [rip+0x3da0]        # 0x140014568
   1400107c8:	lea    r8,[rsp+0x88]
   1400107d0:	lea    rdx,[rsp+0x90]
   1400107d8:	mov    rcx,rbp
   1400107db:	call   QWORD PTR [rip+0x3a1f]        # 0x140014200
   1400107e1:	lea    rcx,[rsp+0x88]
   1400107e9:	call   QWORD PTR [rip+0x3d59]        # 0x140014548
   1400107ef:	lea    rcx,[rsp+0x98]
   1400107f7:	call   QWORD PTR [rip+0x3d4b]        # 0x140014548
   1400107fd:	lea    rcx,[rsp+0x90]
   140010805:	call   QWORD PTR [rip+0x3d3d]        # 0x140014548
   14001080b:	lea    rcx,[rsp+0x80]
   140010813:	call   QWORD PTR [rip+0x3d2f]        # 0x140014548
   140010819:	mov    rcx,rbp
   14001081c:	call   QWORD PTR [rip+0x39fe]        # 0x140014220
   140010822:	or     rcx,0xffffffffffffffff
   140010826:	lea    r12,[rip+0x8687]        # 0x140018eb4
   14001082d:	xor    eax,eax
   14001082f:	mov    QWORD PTR [rsp+0x48],r12
   140010834:	mov    rdi,r12
   140010837:	lea    rdx,[rsp+0x40]
   14001083c:	repnz scas al,BYTE PTR es:[rdi]
   14001083e:	not    rcx
   140010841:	dec    rcx
   140010844:	mov    DWORD PTR [rsp+0x40],ecx
   140010848:	lea    rcx,[rsp+0x80]
   140010850:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140010855:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14001085b:	call   QWORD PTR [rip+0x3cdf]        # 0x140014540
   140010861:	mov    rdx,QWORD PTR [rbp+0x10]
   140010865:	mov    rdi,QWORD PTR [rdx+0x10]
   140010869:	test   rdi,rdi
   14001086c:	je     0x1400108b4
   14001086e:	mov    rsi,rbx
   140010871:	lea    rcx,[rdi+0x18]
   140010875:	lea    rdx,[rsp+0x80]
   14001087d:	call   QWORD PTR [rip+0x3a3d]        # 0x1400142c0
   140010883:	test   al,al
   140010885:	jne    0x140010890
   140010887:	mov    rsi,rdi
   14001088a:	mov    rdi,QWORD PTR [rdi+0x8]
   14001088e:	jmp    0x140010894
   140010890:	mov    rdi,QWORD PTR [rdi+0x10]
   140010894:	test   rdi,rdi
   140010897:	jne    0x140010871
   140010899:	test   rsi,rsi
   14001089c:	je     0x1400108b4
   14001089e:	lea    rdx,[rsi+0x18]
   1400108a2:	lea    rcx,[rsp+0x80]
   1400108aa:	call   QWORD PTR [rip+0x3a10]        # 0x1400142c0
   1400108b0:	test   al,al
   1400108b2:	je     0x1400108b7
   1400108b4:	mov    rsi,rbx
   1400108b7:	lea    rcx,[rsp+0x80]
   1400108bf:	test   rsi,rsi
   1400108c2:	setne  dil
   1400108c6:	call   QWORD PTR [rip+0x3c7c]        # 0x140014548
   1400108cc:	test   dil,dil
   1400108cf:	je     0x140010a8b
   1400108d5:	or     rcx,0xffffffffffffffff
   1400108d9:	mov    QWORD PTR [rsp+0x48],r12
   1400108de:	xor    eax,eax
   1400108e0:	mov    rdi,r12
   1400108e3:	lea    rdx,[rsp+0x40]
   1400108e8:	repnz scas al,BYTE PTR es:[rdi]
   1400108ea:	not    rcx
   1400108ed:	dec    rcx
   1400108f0:	mov    DWORD PTR [rsp+0x40],ecx
   1400108f4:	lea    rcx,[rsp+0x88]
   1400108fc:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140010901:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140010907:	call   QWORD PTR [rip+0x3c33]        # 0x140014540
   14001090d:	or     rcx,0xffffffffffffffff
   140010911:	lea    rdx,[rip+0x86d8]        # 0x140018ff0
   140010918:	xor    eax,eax
   14001091a:	mov    QWORD PTR [rsp+0x48],rdx
   14001091f:	mov    rdi,rdx
   140010922:	lea    rdx,[rsp+0x40]
   140010927:	repnz scas al,BYTE PTR es:[rdi]
   140010929:	not    rcx
   14001092c:	dec    rcx
   14001092f:	mov    DWORD PTR [rsp+0x40],ecx
   140010933:	lea    rcx,[rsp+0x28]
   140010938:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001093d:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140010943:	call   QWORD PTR [rip+0x3bf7]        # 0x140014540
   140010949:	or     rcx,0xffffffffffffffff
   14001094d:	lea    rdx,[rip+0x868c]        # 0x140018fe0
   140010954:	xor    eax,eax
   140010956:	mov    QWORD PTR [rsp+0x48],rdx
   14001095b:	mov    rdi,rdx
   14001095e:	lea    rdx,[rsp+0x40]
   140010963:	repnz scas al,BYTE PTR es:[rdi]
   140010965:	not    rcx
   140010968:	dec    rcx
   14001096b:	mov    DWORD PTR [rsp+0x40],ecx
   14001096f:	lea    rcx,[rsp+0x98]
   140010977:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   14001097c:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140010982:	call   QWORD PTR [rip+0x3bb8]        # 0x140014540
   140010988:	lea    rcx,[rsp+0x30]
   14001098d:	call   QWORD PTR [rip+0x3a5d]        # 0x1400143f0
   140010993:	mov    rsi,rax
   140010996:	mov    rax,QWORD PTR [rbp+0x10]
   14001099a:	mov    rdi,QWORD PTR [rax+0x10]
   14001099e:	test   rdi,rdi
   1400109a1:	je     0x1400109ea
   1400109a3:	lea    rcx,[rdi+0x18]
   1400109a7:	lea    rdx,[rsp+0x88]
   1400109af:	call   QWORD PTR [rip+0x390b]        # 0x1400142c0
   1400109b5:	test   al,al
   1400109b7:	jne    0x1400109c2
   1400109b9:	mov    rbx,rdi
   1400109bc:	mov    rdi,QWORD PTR [rdi+0x8]
   1400109c0:	jmp    0x1400109c6
   1400109c2:	mov    rdi,QWORD PTR [rdi+0x10]
   1400109c6:	test   rdi,rdi
   1400109c9:	jne    0x1400109a3
   1400109cb:	test   rbx,rbx
   1400109ce:	je     0x1400109ea
   1400109d0:	lea    rdx,[rbx+0x18]
   1400109d4:	lea    rcx,[rsp+0x88]
   1400109dc:	call   QWORD PTR [rip+0x38de]        # 0x1400142c0
   1400109e2:	test   al,al
   1400109e4:	jne    0x1400109ea
   1400109e6:	lea    rsi,[rbx+0x20]
   1400109ea:	lea    rcx,[rsp+0x90]
   1400109f2:	mov    rdx,rsi
   1400109f5:	call   QWORD PTR [rip+0x3b6d]        # 0x140014568
   1400109fb:	lea    rdx,[rsp+0x28]
   140010a00:	lea    rcx,[rsp+0x80]
   140010a08:	call   QWORD PTR [rip+0x3b5a]        # 0x140014568
   140010a0e:	lea    rdx,[rsp+0x90]
   140010a16:	lea    rcx,[rsp+0x80]
   140010a1e:	call   QWORD PTR [rip+0x3b4c]        # 0x140014570
   140010a24:	lea    r8,[rsp+0x80]
   140010a2c:	lea    rdx,[rsp+0x98]
   140010a34:	mov    rcx,rbp
   140010a37:	call   QWORD PTR [rip+0x37c3]        # 0x140014200
   140010a3d:	lea    rcx,[rsp+0x80]
   140010a45:	call   QWORD PTR [rip+0x3afd]        # 0x140014548
   140010a4b:	lea    rcx,[rsp+0x90]
   140010a53:	call   QWORD PTR [rip+0x3aef]        # 0x140014548
   140010a59:	lea    rcx,[rsp+0x30]
   140010a5e:	call   QWORD PTR [rip+0x3ae4]        # 0x140014548
   140010a64:	lea    rcx,[rsp+0x98]
   140010a6c:	call   QWORD PTR [rip+0x3ad6]        # 0x140014548
   140010a72:	lea    rcx,[rsp+0x28]
   140010a77:	call   QWORD PTR [rip+0x3acb]        # 0x140014548
   140010a7d:	lea    rcx,[rsp+0x88]
   140010a85:	call   QWORD PTR [rip+0x3abd]        # 0x140014548
   140010a8b:	mov    rcx,rbp
   140010a8e:	call   QWORD PTR [rip+0x378c]        # 0x140014220
   140010a94:	mov    r12,QWORD PTR [rsp+0x50]
   140010a99:	mov    rdi,QWORD PTR [rsp+0x58]
   140010a9e:	mov    rsi,QWORD PTR [rsp+0x60]
   140010aa3:	mov    rbx,QWORD PTR [rsp+0x68]
   140010aa8:	add    rsp,0x70
   140010aac:	pop    rbp
   140010aad:	ret    
   140010aae:	int3   
   140010aaf:	int3   
   140010ab0:	rex push rbx
   140010ab2:	sub    rsp,0x20
   140010ab6:	mov    rbx,rcx
   140010ab9:	call   QWORD PTR [rip+0x3731]        # 0x1400141f0
   140010abf:	lea    rcx,[rbx+0x8]
   140010ac3:	call   QWORD PTR [rip+0x3927]        # 0x1400143f0
   140010ac9:	mov    r11,QWORD PTR [rip+0x3a20]        # 0x1400144f0
   140010ad0:	lea    rcx,[rbx+0x18]
   140010ad4:	mov    QWORD PTR [rbx+0x10],r11
   140010ad8:	call   QWORD PTR [rip+0x3912]        # 0x1400143f0
   140010ade:	mov    dl,0x1
   140010ae0:	mov    rcx,rbx
   140010ae3:	call   QWORD PTR [rip+0x370f]        # 0x1400141f8
   140010ae9:	mov    rax,rbx
   140010aec:	add    rsp,0x20
   140010af0:	pop    rbx
   140010af1:	ret    
   140010af2:	int3   
   140010af3:	int3   
   140010af4:	int3   
   140010af5:	int3   
   140010af6:	int3   
   140010af7:	int3   
   140010af8:	int3   
   140010af9:	int3   
   140010afa:	int3   
   140010afb:	int3   
   140010afc:	int3   
   140010afd:	int3   
   140010afe:	int3   
   140010aff:	int3   
   140010b00:	rex push rbx
   140010b02:	sub    rsp,0x20
   140010b06:	add    rcx,0x10
   140010b0a:	mov    rbx,rdx
   140010b0d:	call   0x14000c8e0
   140010b12:	mov    r11,QWORD PTR [rbx]
   140010b15:	mov    eax,DWORD PTR [r11]
   140010b18:	test   eax,eax
   140010b1a:	je     0x140010b2d
   140010b1c:	cmp    eax,0xffffffff
   140010b1f:	je     0x140010b35
   140010b21:	lock add DWORD PTR [r11],0xffffffff
   140010b26:	setne  al
   140010b29:	test   al,al
   140010b2b:	jne    0x140010b35
   140010b2d:	mov    rcx,QWORD PTR [rbx]
   140010b30:	call   0x140001920
   140010b35:	add    rsp,0x20
   140010b39:	pop    rbx
   140010b3a:	ret    
   140010b3b:	int3   
   140010b3c:	int3   
   140010b3d:	int3   
   140010b3e:	int3   
   140010b3f:	int3   
   140010b40:	rex push rbx
   140010b42:	sub    rsp,0x40
   140010b46:	mov    rbx,rcx
   140010b49:	lea    rcx,[rsp+0x20]
   140010b4e:	call   QWORD PTR [rip+0x380c]        # 0x140014360
   140010b54:	lea    rcx,[rsp+0x20]
   140010b59:	mov    edx,0x2
   140010b5e:	call   QWORD PTR [rip+0x380c]        # 0x140014370
   140010b64:	test   al,al
   140010b66:	jne    0x140010b7b
   140010b68:	lea    rcx,[rsp+0x20]
   140010b6d:	call   QWORD PTR [rip+0x382d]        # 0x1400143a0
   140010b73:	xor    al,al
   140010b75:	add    rsp,0x40
   140010b79:	pop    rbx
   140010b7a:	ret    
   140010b7b:	lea    rdx,[rsp+0x20]
   140010b80:	mov    rcx,rbx
   140010b83:	mov    QWORD PTR [rsp+0x50],rdi
   140010b88:	call   QWORD PTR [rip+0x3642]        # 0x1400141d0
   140010b8e:	mov    rcx,rbx
   140010b91:	call   QWORD PTR [rip+0x3641]        # 0x1400141d8
   140010b97:	or     rcx,0xffffffffffffffff
   140010b9b:	lea    rdx,[rip+0x84ee]        # 0x140019090
   140010ba2:	mov    QWORD PTR [rsp+0x38],rdx
   140010ba7:	mov    rdi,rdx
   140010baa:	xor    eax,eax
   140010bac:	repnz scas al,BYTE PTR es:[rdi]
   140010bae:	lea    rdx,[rsp+0x30]
   140010bb3:	not    rcx
   140010bb6:	dec    rcx
   140010bb9:	mov    DWORD PTR [rsp+0x30],ecx
   140010bbd:	lea    rcx,[rsp+0x60]
   140010bc2:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140010bc7:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140010bcd:	call   QWORD PTR [rip+0x396d]        # 0x140014540
   140010bd3:	lea    rdx,[rsp+0x60]
   140010bd8:	mov    rcx,rbx
   140010bdb:	call   QWORD PTR [rip+0x3637]        # 0x140014218
   140010be1:	lea    rcx,[rsp+0x60]
   140010be6:	call   QWORD PTR [rip+0x395c]        # 0x140014548
   140010bec:	or     rcx,0xffffffffffffffff
   140010bf0:	lea    rdx,[rip+0x838d]        # 0x140018f84
   140010bf7:	mov    QWORD PTR [rsp+0x38],rdx
   140010bfc:	mov    rdi,rdx
   140010bff:	xor    eax,eax
   140010c01:	repnz scas al,BYTE PTR es:[rdi]
   140010c03:	lea    rdx,[rsp+0x30]
   140010c08:	not    rcx
   140010c0b:	dec    rcx
   140010c0e:	mov    DWORD PTR [rsp+0x30],ecx
   140010c12:	lea    rcx,[rsp+0x68]
   140010c17:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140010c1c:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140010c22:	call   QWORD PTR [rip+0x3918]        # 0x140014540
   140010c28:	or     rcx,0xffffffffffffffff
   140010c2c:	lea    rdx,[rip+0x82dd]        # 0x140018f10
   140010c33:	xor    eax,eax
   140010c35:	mov    QWORD PTR [rsp+0x38],rdx
   140010c3a:	mov    rdi,rdx
   140010c3d:	lea    rdx,[rsp+0x30]
   140010c42:	repnz scas al,BYTE PTR es:[rdi]
   140010c44:	not    rcx
   140010c47:	dec    rcx
   140010c4a:	mov    DWORD PTR [rsp+0x30],ecx
   140010c4e:	lea    rcx,[rsp+0x60]
   140010c53:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140010c58:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140010c5e:	call   QWORD PTR [rip+0x38dc]        # 0x140014540
   140010c64:	lea    r8,[rsp+0x68]
   140010c69:	lea    rdx,[rsp+0x60]
   140010c6e:	mov    rcx,rbx
   140010c71:	call   QWORD PTR [rip+0x35b1]        # 0x140014228
   140010c77:	lea    rcx,[rsp+0x60]
   140010c7c:	call   QWORD PTR [rip+0x38c6]        # 0x140014548
   140010c82:	lea    rcx,[rsp+0x68]
   140010c87:	call   QWORD PTR [rip+0x38bb]        # 0x140014548
   140010c8d:	mov    rcx,rbx
   140010c90:	call   0x14000fc40
   140010c95:	mov    rcx,rbx
   140010c98:	call   0x14000f8e0
   140010c9d:	mov    rcx,rbx
   140010ca0:	call   QWORD PTR [rip+0x353a]        # 0x1400141e0
   140010ca6:	lea    rcx,[rsp+0x20]
   140010cab:	call   QWORD PTR [rip+0x36ef]        # 0x1400143a0
   140010cb1:	mov    rdi,QWORD PTR [rsp+0x50]
   140010cb6:	mov    al,0x1
   140010cb8:	add    rsp,0x40
   140010cbc:	pop    rbx
   140010cbd:	ret    
   140010cbe:	int3   
   140010cbf:	int3   
   140010cc0:	mov    QWORD PTR [rsp+0x10],rbx
   140010cc5:	mov    QWORD PTR [rsp+0x18],rbp
   140010cca:	mov    QWORD PTR [rsp+0x20],rsi
   140010ccf:	push   rdi
   140010cd0:	push   r12
   140010cd2:	push   r13
   140010cd4:	sub    rsp,0x50
   140010cd8:	xor    ebp,ebp
   140010cda:	xor    r8d,r8d
   140010cdd:	mov    rdi,rcx
   140010ce0:	mov    DWORD PTR [rsp+0x70],ebp
   140010ce4:	call   QWORD PTR [rip+0x430e]        # 0x140014ff8
   140010cea:	lea    r11,[rip+0x85e7]        # 0x1400192d8
   140010cf1:	lea    rax,[rip+0x85a0]        # 0x140019298
   140010cf8:	mov    dl,0x1
   140010cfa:	mov    rcx,rdi
   140010cfd:	mov    QWORD PTR [rdi],r11
   140010d00:	mov    QWORD PTR [rdi+0x10],rax
   140010d04:	call   QWORD PTR [rip+0x42e6]        # 0x140014ff0
   140010d0a:	lea    ecx,[rbp+0x20]
   140010d0d:	call   0x140012892
   140010d12:	lea    r12,[rip+0x7eef]        # 0x140018c08
   140010d19:	lea    r13,[rip+0x7e58]        # 0x140018b78
   140010d20:	mov    rsi,rax
   140010d23:	test   rax,rax
   140010d26:	je     0x140010d3d
   140010d28:	mov    rdx,rdi
   140010d2b:	mov    rcx,rax
   140010d2e:	call   QWORD PTR [rip+0x4134]        # 0x140014e68
   140010d34:	mov    QWORD PTR [rsi],r12
   140010d37:	mov    QWORD PTR [rsi+0x10],r13
   140010d3b:	jmp    0x140010d3f
   140010d3d:	xor    esi,esi
   140010d3f:	xor    edx,edx
   140010d41:	mov    rcx,rsi
   140010d44:	call   QWORD PTR [rip+0x429e]        # 0x140014fe8
   140010d4a:	mov    ecx,0x30
   140010d4f:	call   0x140012892
   140010d54:	mov    rbx,rax
   140010d57:	test   rax,rax
   140010d5a:	je     0x140010d82
   140010d5c:	xor    r8d,r8d
   140010d5f:	mov    rdx,rdi
   140010d62:	mov    rcx,rax
   140010d65:	call   QWORD PTR [rip+0x4275]        # 0x140014fe0
   140010d6b:	lea    r11,[rip+0x83b6]        # 0x140019128
   140010d72:	lea    rax,[rip+0x836f]        # 0x1400190e8
   140010d79:	mov    QWORD PTR [rbx],r11
   140010d7c:	mov    QWORD PTR [rbx+0x10],rax
   140010d80:	jmp    0x140010d84
   140010d82:	xor    ebx,ebx
   140010d84:	mov    rcx,rdi
   140010d87:	call   QWORD PTR [rip+0x424b]        # 0x140014fd8
   140010d8d:	lea    rcx,[rsp+0x30]
   140010d92:	mov    rdx,rax
   140010d95:	call   QWORD PTR [rip+0x385d]        # 0x1400145f8
   140010d9b:	lea    rcx,[rsp+0x40]
   140010da0:	mov    edx,0x3
   140010da5:	call   QWORD PTR [rip+0x37dd]        # 0x140014588
   140010dab:	lea    rdx,[rsp+0x40]
   140010db0:	lea    rcx,[rsp+0x70]
   140010db5:	mov    r8d,0x1
   140010dbb:	call   QWORD PTR [rip+0x37cf]        # 0x140014590
   140010dc1:	mov    edx,0x5
   140010dc6:	lea    rcx,[rsp+0x30]
   140010dcb:	lea    r8d,[rdx+0x5]
   140010dcf:	mov    r9,rax
   140010dd2:	call   QWORD PTR [rip+0x37c0]        # 0x140014598
   140010dd8:	lea    rcx,[rsp+0x70]
   140010ddd:	call   QWORD PTR [rip+0x37bd]        # 0x1400145a0
   140010de3:	lea    rdx,[rsp+0x30]
   140010de8:	mov    rcx,rdi
   140010deb:	call   QWORD PTR [rip+0x41df]        # 0x140014fd0
   140010df1:	mov    edx,0x11
   140010df6:	mov    rcx,rbx
   140010df9:	call   QWORD PTR [rip+0x41c9]        # 0x140014fc8
   140010dff:	xor    r9d,r9d
   140010e02:	xor    r8d,r8d
   140010e05:	mov    rdx,rbx
   140010e08:	mov    rcx,rsi
   140010e0b:	call   QWORD PTR [rip+0x4637]        # 0x140015448
   140010e11:	mov    ecx,0x20
   140010e16:	call   0x140012892
   140010e1b:	mov    rsi,rax
   140010e1e:	test   rax,rax
   140010e21:	je     0x140010e38
   140010e23:	mov    rdx,rbx
   140010e26:	mov    rcx,rax
   140010e29:	call   QWORD PTR [rip+0x4039]        # 0x140014e68
   140010e2f:	mov    QWORD PTR [rsi],r12
   140010e32:	mov    QWORD PTR [rsi+0x10],r13
   140010e36:	jmp    0x140010e3a
   140010e38:	xor    esi,esi
   140010e3a:	mov    edx,0x2
   140010e3f:	mov    rcx,rsi
   140010e42:	call   QWORD PTR [rip+0x41a0]        # 0x140014fe8
   140010e48:	mov    ecx,0x30
   140010e4d:	call   0x140012892
   140010e52:	mov    rbx,rax
   140010e55:	test   rax,rax
   140010e58:	je     0x140010eae
   140010e5a:	lea    r8,[rip+0x8247]        # 0x1400190a8
   140010e61:	lea    rdx,[rsp+0x70]
   140010e66:	lea    rcx,[rip+0x189cb]        # 0x140029838
   140010e6d:	xor    r9d,r9d
   140010e70:	mov    ebp,0x1
   140010e75:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140010e7d:	call   QWORD PTR [rip+0x36d5]        # 0x140014558
   140010e83:	lea    rdx,[rsp+0x70]
   140010e88:	xor    r9d,r9d
   140010e8b:	xor    r8d,r8d
   140010e8e:	mov    rcx,rbx
   140010e91:	call   QWORD PTR [rip+0x4129]        # 0x140014fc0
   140010e97:	lea    r11,[rip+0x51ea]        # 0x140016088
   140010e9e:	lea    rax,[rip+0x51a3]        # 0x140016048
   140010ea5:	mov    QWORD PTR [rbx],r11
   140010ea8:	mov    QWORD PTR [rbx+0x10],rax
   140010eac:	jmp    0x140010eb0
   140010eae:	xor    ebx,ebx
   140010eb0:	test   bpl,0x1
   140010eb4:	je     0x140010ec1
   140010eb6:	lea    rcx,[rsp+0x70]
   140010ebb:	call   QWORD PTR [rip+0x3687]        # 0x140014548
   140010ec1:	xor    r9d,r9d
   140010ec4:	xor    r8d,r8d
   140010ec7:	mov    rdx,rbx
   140010eca:	mov    rcx,rsi
   140010ecd:	call   QWORD PTR [rip+0x4575]        # 0x140015448
   140010ed3:	mov    ecx,0x30
   140010ed8:	call   0x140012892
   140010edd:	mov    rbx,rax
   140010ee0:	test   rax,rax
   140010ee3:	je     0x140010f07
   140010ee5:	xor    edx,edx
   140010ee7:	mov    rcx,rax
   140010eea:	call   QWORD PTR [rip+0x3f70]        # 0x140014e60
   140010ef0:	lea    r11,[rip+0x7ac1]        # 0x1400189b8
   140010ef7:	lea    rax,[rip+0x7a7a]        # 0x140018978
   140010efe:	mov    QWORD PTR [rbx],r11
   140010f01:	mov    QWORD PTR [rbx+0x10],rax
   140010f05:	jmp    0x140010f09
   140010f07:	xor    ebx,ebx
   140010f09:	xor    edx,edx
   140010f0b:	mov    rcx,rbx
   140010f0e:	mov    QWORD PTR [rdi+0x30],rbx
   140010f12:	call   QWORD PTR [rip+0x40b0]        # 0x140014fc8
   140010f18:	mov    rcx,QWORD PTR [rdi+0x30]
   140010f1c:	mov    dl,0x1
   140010f1e:	call   QWORD PTR [rip+0x4094]        # 0x140014fb8
   140010f24:	mov    rdx,QWORD PTR [rdi+0x30]
   140010f28:	xor    r9d,r9d
   140010f2b:	xor    r8d,r8d
   140010f2e:	mov    rcx,rsi
   140010f31:	call   QWORD PTR [rip+0x4511]        # 0x140015448
   140010f37:	lea    rcx,[rsp+0x30]
   140010f3c:	call   QWORD PTR [rip+0x3666]        # 0x1400145a8
   140010f42:	lea    r11,[rsp+0x50]
   140010f47:	mov    rax,rdi
   140010f4a:	mov    rbx,QWORD PTR [r11+0x28]
   140010f4e:	mov    rbp,QWORD PTR [r11+0x30]
   140010f52:	mov    rsi,QWORD PTR [r11+0x38]
   140010f56:	mov    rsp,r11
   140010f59:	pop    r13
   140010f5b:	pop    r12
   140010f5d:	pop    rdi
   140010f5e:	ret    
   140010f5f:	int3   
   140010f60:	mov    QWORD PTR [rsp+0x8],rbx
   140010f65:	push   rdi
   140010f66:	sub    rsp,0x20
   140010f6a:	mov    ebx,edx
   140010f6c:	mov    rdi,rcx
   140010f6f:	call   QWORD PTR [rip+0x40bb]        # 0x140015030
   140010f75:	test   bl,0x1
   140010f78:	je     0x140010f82
   140010f7a:	mov    rcx,rdi
   140010f7d:	call   0x140012898
   140010f82:	mov    rax,rdi
   140010f85:	mov    rbx,QWORD PTR [rsp+0x30]
   140010f8a:	add    rsp,0x20
   140010f8e:	pop    rdi
   140010f8f:	ret    
   140010f90:	sub    rcx,0x10
   140010f94:	jmp    0x140010fb0
   140010f99:	int3   
   140010f9a:	int3   
   140010f9b:	int3   
   140010f9c:	int3   
   140010f9d:	int3   
   140010f9e:	int3   
   140010f9f:	int3   
   140010fa0:	sub    rcx,0x10
   140010fa4:	jmp    0x140010f60
   140010fa9:	int3   
   140010faa:	int3   
   140010fab:	int3   
   140010fac:	int3   
   140010fad:	int3   
   140010fae:	int3   
   140010faf:	int3   
   140010fb0:	mov    QWORD PTR [rsp+0x8],rbx
   140010fb5:	push   rdi
   140010fb6:	sub    rsp,0x20
   140010fba:	mov    ebx,edx
   140010fbc:	mov    rdi,rcx
   140010fbf:	call   QWORD PTR [rip+0x4073]        # 0x140015038
   140010fc5:	test   bl,0x1
   140010fc8:	je     0x140010fd2
   140010fca:	mov    rcx,rdi
   140010fcd:	call   0x140012898
   140010fd2:	mov    rax,rdi
   140010fd5:	mov    rbx,QWORD PTR [rsp+0x30]
   140010fda:	add    rsp,0x20
   140010fde:	pop    rdi
   140010fdf:	ret    
   140010fe0:	mov    QWORD PTR [rsp+0x10],rbx
   140010fe5:	push   rbp
   140010fe6:	push   rsi
   140010fe7:	push   rdi
   140010fe8:	sub    rsp,0x70
   140010fec:	mov    rbp,rcx
   140010fef:	or     rcx,0xffffffffffffffff
   140010ff3:	mov    rsi,rdx
   140010ff6:	lea    rdx,[rip+0x8443]        # 0x140019440
   140010ffd:	xor    eax,eax
   140010fff:	mov    rdi,rdx
   140011002:	mov    QWORD PTR [rsp+0x48],rdx
   140011007:	mov    dl,0x20
   140011009:	repnz scas al,BYTE PTR es:[rdi]
   14001100b:	not    rcx
   14001100e:	dec    rcx
   140011011:	mov    DWORD PTR [rsp+0x40],ecx
   140011015:	lea    rcx,[rsp+0x90]
   14001101d:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140011022:	movdqa XMMWORD PTR [rsp+0x60],xmm0
   140011028:	call   QWORD PTR [rip+0x33ea]        # 0x140014418
   14001102e:	lea    rdx,[rsp+0x30]
   140011033:	mov    rcx,rsi
   140011036:	mov    rbx,rax
   140011039:	call   QWORD PTR [rip+0x3241]        # 0x140014280
   14001103f:	lea    rdx,[rsp+0x60]
   140011044:	lea    rcx,[rsp+0xa8]
   14001104c:	mov    rdi,rax
   14001104f:	call   QWORD PTR [rip+0x34eb]        # 0x140014540
   140011055:	movzx  edx,WORD PTR [rbx]
   140011058:	mov    WORD PTR [rsp+0x20],dx
   14001105d:	lea    rdx,[rsp+0xa0]
   140011065:	xor    r9d,r9d
   140011068:	mov    rcx,rax
   14001106b:	mov    r8,rdi
   14001106e:	call   QWORD PTR [rip+0x336c]        # 0x1400143e0
   140011074:	lea    rcx,[rsp+0x40]
   140011079:	mov    rdx,rax
   14001107c:	call   QWORD PTR [rip+0x32de]        # 0x140014360
   140011082:	lea    rcx,[rsp+0xa0]
   14001108a:	call   QWORD PTR [rip+0x34b8]        # 0x140014548
   140011090:	lea    rcx,[rsp+0xa8]
   140011098:	call   QWORD PTR [rip+0x34aa]        # 0x140014548
   14001109e:	lea    rcx,[rsp+0x30]
   1400110a3:	call   QWORD PTR [rip+0x349f]        # 0x140014548
   1400110a9:	lea    rcx,[rsp+0x40]
   1400110ae:	mov    edx,0x1
   1400110b3:	call   QWORD PTR [rip+0x32b7]        # 0x140014370
   1400110b9:	lea    rdx,[rsp+0x40]
   1400110be:	lea    rcx,[rsp+0x50]
   1400110c3:	call   QWORD PTR [rip+0x30e7]        # 0x1400141b0
   1400110c9:	lea    rdx,[rsp+0x90]
   1400110d1:	lea    rcx,[rsp+0x50]
   1400110d6:	call   QWORD PTR [rip+0x30dc]        # 0x1400141b8
   1400110dc:	mov    rcx,QWORD PTR [rbp+0x30]
   1400110e0:	mov    rdx,rax
   1400110e3:	call   QWORD PTR [rip+0x3f57]        # 0x140015040
   1400110e9:	lea    rcx,[rsp+0x90]
   1400110f1:	call   QWORD PTR [rip+0x3451]        # 0x140014548
   1400110f7:	lea    rcx,[rsp+0x50]
   1400110fc:	call   QWORD PTR [rip+0x30be]        # 0x1400141c0
   140011102:	lea    rcx,[rsp+0x40]
   140011107:	call   QWORD PTR [rip+0x3293]        # 0x1400143a0
   14001110d:	mov    rbx,QWORD PTR [rsp+0x98]
   140011115:	add    rsp,0x70
   140011119:	pop    rdi
   14001111a:	pop    rsi
   14001111b:	pop    rbp
   14001111c:	ret    
   14001111d:	int3   
   14001111e:	int3   
   14001111f:	int3   
   140011120:	mov    DWORD PTR [rsp+0x8],ecx
   140011124:	push   rbx
   140011125:	push   rsi
   140011126:	push   rdi
   140011127:	sub    rsp,0x1b0
   14001112e:	mov    rsi,rdx
   140011131:	mov    r8,rdx
   140011134:	lea    rcx,[rsp+0xe8]
   14001113c:	lea    rdx,[rsp+0x1d0]
   140011144:	mov    r9d,0x50602
   14001114a:	mov    DWORD PTR [rsp+0x1e0],0x0
   140011155:	call   QWORD PTR [rip+0x3efd]        # 0x140015058
   14001115b:	lea    rcx,[rsp+0xb0]
   140011163:	xor    edx,edx
   140011165:	call   QWORD PTR [rip+0x2fed]        # 0x140014158
   14001116b:	lea    rcx,[rsp+0x98]
   140011173:	xor    edx,edx
   140011175:	call   QWORD PTR [rip+0x2fdd]        # 0x140014158
   14001117b:	lea    rcx,[rsp+0xd8]
   140011183:	xor    edx,edx
   140011185:	call   QWORD PTR [rip+0x2fcd]        # 0x140014158
   14001118b:	lea    rcx,[rsp+0x50]
   140011190:	call   QWORD PTR [rip+0x2fca]        # 0x140014160
   140011196:	lea    rdx,[rsp+0x1e8]
   14001119e:	mov    rcx,rax
   1400111a1:	call   QWORD PTR [rip+0x2fc1]        # 0x140014168
   1400111a7:	lea    rcx,[rsp+0x50]
   1400111ac:	call   QWORD PTR [rip+0x2fbe]        # 0x140014170
   1400111b2:	lea    rcx,[rsp+0x1e0]
   1400111ba:	mov    edx,0xb
   1400111bf:	call   QWORD PTR [rip+0x2fb3]        # 0x140014178
   1400111c5:	or     rcx,0xffffffffffffffff
   1400111c9:	lea    rdx,[rip+0x82b0]        # 0x140019480
   1400111d0:	mov    rdi,rdx
   1400111d3:	mov    QWORD PTR [rsp+0x68],rdx
   1400111d8:	xor    eax,eax
   1400111da:	repnz scas al,BYTE PTR es:[rdi]
   1400111dc:	lea    rdx,[rsp+0x40]
   1400111e1:	not    rcx
   1400111e4:	dec    rcx
   1400111e7:	mov    DWORD PTR [rsp+0x60],ecx
   1400111eb:	lea    rcx,[rsp+0x50]
   1400111f0:	movaps xmm0,XMMWORD PTR [rsp+0x60]
   1400111f5:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400111fb:	call   QWORD PTR [rip+0x333f]        # 0x140014540
   140011201:	lea    rdx,[rsp+0x50]
   140011206:	lea    rcx,[rsp+0x30]
   14001120b:	mov    ebx,0xf
   140011210:	call   QWORD PTR [rip+0x3352]        # 0x140014568
   140011216:	lea    rdx,[rsp+0x1e8]
   14001121e:	lea    rcx,[rsp+0x30]
   140011223:	call   QWORD PTR [rip+0x3347]        # 0x140014570
   140011229:	lea    rcx,[rsp+0x60]
   14001122e:	call   QWORD PTR [rip+0x31bc]        # 0x1400143f0
   140011234:	lea    rcx,[rsp+0xd0]
   14001123c:	mov    rdi,rax
   14001123f:	call   QWORD PTR [rip+0x31ab]        # 0x1400143f0
   140011245:	lea    r8,[rsp+0x1e0]
   14001124d:	lea    rdx,[rsp+0x30]
   140011252:	lea    rcx,[rsp+0xb0]
   14001125a:	mov    r9,rax
   14001125d:	mov    QWORD PTR [rsp+0x20],rdi
   140011262:	call   QWORD PTR [rip+0x2f18]        # 0x140014180
   140011268:	test   al,al
   14001126a:	je     0x1400113d9
   140011270:	or     rcx,0xffffffffffffffff
   140011274:	lea    rdx,[rip+0x8201]        # 0x14001947c
   14001127b:	xor    eax,eax
   14001127d:	mov    QWORD PTR [rsp+0x48],rdx
   140011282:	mov    rdi,rdx
   140011285:	lea    rdx,[rsp+0x40]
   14001128a:	repnz scas al,BYTE PTR es:[rdi]
   14001128c:	not    rcx
   14001128f:	dec    rcx
   140011292:	mov    DWORD PTR [rsp+0x40],ecx
   140011296:	lea    rcx,[rsp+0x88]
   14001129e:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   1400112a3:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400112a9:	call   QWORD PTR [rip+0x3291]        # 0x140014540
   1400112af:	lea    rdx,[rsp+0x88]
   1400112b7:	lea    rcx,[rsp+0x70]
   1400112bc:	mov    ebx,0xff
   1400112c1:	call   QWORD PTR [rip+0x32a1]        # 0x140014568
   1400112c7:	lea    rdx,[rsp+0x1e8]
   1400112cf:	lea    rcx,[rsp+0x70]
   1400112d4:	call   QWORD PTR [rip+0x3296]        # 0x140014570
   1400112da:	lea    rcx,[rsp+0xa8]
   1400112e2:	call   QWORD PTR [rip+0x3108]        # 0x1400143f0
   1400112e8:	lea    rcx,[rsp+0x90]
   1400112f0:	mov    rdi,rax
   1400112f3:	call   QWORD PTR [rip+0x30f7]        # 0x1400143f0
   1400112f9:	lea    r8,[rsp+0x1e0]
   140011301:	lea    rdx,[rsp+0x70]
   140011306:	lea    rcx,[rsp+0x98]
   14001130e:	mov    r9,rax
   140011311:	mov    QWORD PTR [rsp+0x20],rdi
   140011316:	call   QWORD PTR [rip+0x2e64]        # 0x140014180
   14001131c:	test   al,al
   14001131e:	je     0x1400113d9
   140011324:	or     rcx,0xffffffffffffffff
   140011328:	lea    rdx,[rip+0x8141]        # 0x140019470
   14001132f:	xor    eax,eax
   140011331:	mov    QWORD PTR [rsp+0x48],rdx
   140011336:	mov    rdi,rdx
   140011339:	lea    rdx,[rsp+0x40]
   14001133e:	repnz scas al,BYTE PTR es:[rdi]
   140011340:	not    rcx
   140011343:	dec    rcx
   140011346:	mov    DWORD PTR [rsp+0x40],ecx
   14001134a:	lea    rcx,[rsp+0x80]
   140011352:	movaps xmm0,XMMWORD PTR [rsp+0x40]
   140011357:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14001135d:	call   QWORD PTR [rip+0x31dd]        # 0x140014540
   140011363:	lea    rdx,[rsp+0x80]
   14001136b:	lea    rcx,[rsp+0x78]
   140011370:	mov    ebx,0xfff
   140011375:	call   QWORD PTR [rip+0x31ed]        # 0x140014568
   14001137b:	lea    rdx,[rsp+0x1e8]
   140011383:	lea    rcx,[rsp+0x78]
   140011388:	call   QWORD PTR [rip+0x31e2]        # 0x140014570
   14001138e:	lea    rcx,[rsp+0xc0]
   140011396:	call   QWORD PTR [rip+0x3054]        # 0x1400143f0
   14001139c:	lea    rcx,[rsp+0xc8]
   1400113a4:	mov    rdi,rax
   1400113a7:	call   QWORD PTR [rip+0x3043]        # 0x1400143f0
   1400113ad:	lea    r8,[rsp+0x1e0]
   1400113b5:	lea    rdx,[rsp+0x78]
   1400113ba:	lea    rcx,[rsp+0xd8]
   1400113c2:	mov    r9,rax
   1400113c5:	mov    QWORD PTR [rsp+0x20],rdi
   1400113ca:	call   QWORD PTR [rip+0x2db0]        # 0x140014180
   1400113d0:	test   al,al
   1400113d2:	je     0x1400113d9
   1400113d4:	mov    dil,0x1
   1400113d7:	jmp    0x1400113dc
   1400113d9:	xor    dil,dil
   1400113dc:	bt     ebx,0xb
   1400113e0:	jae    0x1400113f1
   1400113e2:	lea    rcx,[rsp+0x78]
   1400113e7:	btr    ebx,0xb
   1400113eb:	call   QWORD PTR [rip+0x3157]        # 0x140014548
   1400113f1:	bt     ebx,0xa
   1400113f5:	jae    0x140011409
   1400113f7:	lea    rcx,[rsp+0xc8]
   1400113ff:	btr    ebx,0xa
   140011403:	call   QWORD PTR [rip+0x313f]        # 0x140014548
   140011409:	bt     ebx,0x9
   14001140d:	jae    0x140011421
   14001140f:	lea    rcx,[rsp+0xc0]
   140011417:	btr    ebx,0x9
   14001141b:	call   QWORD PTR [rip+0x3127]        # 0x140014548
   140011421:	bt     ebx,0x8
   140011425:	jae    0x140011439
   140011427:	lea    rcx,[rsp+0x80]
   14001142f:	btr    ebx,0x8
   140011433:	call   QWORD PTR [rip+0x310f]        # 0x140014548
   140011439:	test   bl,bl
   14001143b:	jns    0x14001144c
   14001143d:	lea    rcx,[rsp+0x70]
   140011442:	btr    ebx,0x7
   140011446:	call   QWORD PTR [rip+0x30fc]        # 0x140014548
   14001144c:	test   bl,0x40
   14001144f:	je     0x140011462
   140011451:	lea    rcx,[rsp+0x90]
   140011459:	and    ebx,0xffffffbf
   14001145c:	call   QWORD PTR [rip+0x30e6]        # 0x140014548
   140011462:	test   bl,0x20
   140011465:	je     0x140011478
   140011467:	lea    rcx,[rsp+0xa8]
   14001146f:	and    ebx,0xffffffdf
   140011472:	call   QWORD PTR [rip+0x30d0]        # 0x140014548
   140011478:	test   bl,0x10
   14001147b:	je     0x14001148e
   14001147d:	lea    rcx,[rsp+0x88]
   140011485:	and    ebx,0xffffffef
   140011488:	call   QWORD PTR [rip+0x30ba]        # 0x140014548
   14001148e:	test   bl,0x8
   140011491:	je     0x1400114a1
   140011493:	lea    rcx,[rsp+0x30]
   140011498:	and    ebx,0xfffffff7
   14001149b:	call   QWORD PTR [rip+0x30a7]        # 0x140014548
   1400114a1:	test   bl,0x4
   1400114a4:	je     0x1400114b7
   1400114a6:	lea    rcx,[rsp+0xd0]
   1400114ae:	and    ebx,0xfffffffb
   1400114b1:	call   QWORD PTR [rip+0x3091]        # 0x140014548
   1400114b7:	test   bl,0x2
   1400114ba:	je     0x1400114ca
   1400114bc:	lea    rcx,[rsp+0x60]
   1400114c1:	and    ebx,0xfffffffd
   1400114c4:	call   QWORD PTR [rip+0x307e]        # 0x140014548
   1400114ca:	test   bl,0x1
   1400114cd:	je     0x1400114da
   1400114cf:	lea    rcx,[rsp+0x50]
   1400114d4:	call   QWORD PTR [rip+0x306e]        # 0x140014548
   1400114da:	test   dil,dil
   1400114dd:	je     0x140011509
   1400114df:	lea    rcx,[rsp+0xb0]
   1400114e7:	call   QWORD PTR [rip+0x2c9b]        # 0x140014188
   1400114ed:	lea    rcx,[rsp+0x98]
   1400114f5:	call   QWORD PTR [rip+0x2c8d]        # 0x140014188
   1400114fb:	lea    rcx,[rsp+0xd8]
   140011503:	call   QWORD PTR [rip+0x2c7f]        # 0x140014188
   140011509:	lea    rcx,[rsp+0x100]
   140011511:	call   0x140002330
   140011516:	cmp    DWORD PTR [rsp+0x1d0],0x2
   14001151e:	jne    0x140011591
   140011520:	mov    rdx,QWORD PTR [rsi+0x8]
   140011524:	lea    rcx,[rsp+0x60]
   140011529:	or     r8d,0xffffffff
   14001152d:	call   QWORD PTR [rip+0x2c5d]        # 0x140014190
   140011533:	lea    rcx,[rsp+0x30]
   140011538:	mov    rdx,rax
   14001153b:	call   QWORD PTR [rip+0x2fd7]        # 0x140014518
   140011541:	lea    rcx,[rsp+0x60]
   140011546:	call   QWORD PTR [rip+0x2ffc]        # 0x140014548
   14001154c:	lea    rcx,[rsp+0x30]
   140011551:	call   QWORD PTR [rip+0x2c41]        # 0x140014198
   140011557:	test   al,al
   140011559:	je     0x140011586
   14001155b:	lea    rdx,[rsp+0x60]
   140011560:	lea    rcx,[rsp+0x30]
   140011565:	call   QWORD PTR [rip+0x2c35]        # 0x1400141a0
   14001156b:	lea    rcx,[rsp+0x100]
   140011573:	mov    rdx,rax
   140011576:	call   0x140001000
   14001157b:	lea    rcx,[rsp+0x60]
   140011580:	call   QWORD PTR [rip+0x2fc2]        # 0x140014548
   140011586:	lea    rcx,[rsp+0x30]
   14001158b:	call   QWORD PTR [rip+0x2f9f]        # 0x140014530
   140011591:	lea    rcx,[rsp+0x100]
   140011599:	call   QWORD PTR [rip+0x40e9]        # 0x140015688
   14001159f:	call   QWORD PTR [rip+0x3aab]        # 0x140015050
   1400115a5:	lea    rcx,[rsp+0x198]
   1400115ad:	mov    edi,eax
   1400115af:	call   0x140001a30
   1400115b4:	lea    rcx,[rsp+0x130]
   1400115bc:	call   0x140001ea0
   1400115c1:	lea    rcx,[rsp+0x100]
   1400115c9:	call   QWORD PTR [rip+0x3ea1]        # 0x140015470
   1400115cf:	lea    rcx,[rsp+0x1e0]
   1400115d7:	call   QWORD PTR [rip+0x2f6b]        # 0x140014548
   1400115dd:	lea    rcx,[rsp+0x1e8]
   1400115e5:	call   QWORD PTR [rip+0x2f5d]        # 0x140014548
   1400115eb:	lea    rcx,[rsp+0xd8]
   1400115f3:	call   QWORD PTR [rip+0x2baf]        # 0x1400141a8
   1400115f9:	lea    rcx,[rsp+0x98]
   140011601:	call   QWORD PTR [rip+0x2ba1]        # 0x1400141a8
   140011607:	lea    rcx,[rsp+0xb0]
   14001160f:	call   QWORD PTR [rip+0x2b93]        # 0x1400141a8
   140011615:	lea    rcx,[rsp+0xe8]
   14001161d:	call   QWORD PTR [rip+0x3a25]        # 0x140015048
   140011623:	mov    eax,edi
   140011625:	add    rsp,0x1b0
   14001162c:	pop    rdi
   14001162d:	pop    rsi
   14001162e:	pop    rbx
   14001162f:	ret    
   140011630:	sub    rsp,0x28
   140011634:	test   edx,edx
   140011636:	jne    0x14001166d
   140011638:	test   r8d,r8d
   14001163b:	je     0x140011662
   14001163d:	sub    r8d,0x1
   140011641:	je     0x140011652
   140011643:	cmp    r8d,0x1
   140011647:	jne    0x14001166d
   140011649:	add    rsp,0x28
   14001164d:	jmp    0x140003690
   140011652:	mov    rax,QWORD PTR [r9+0x8]
   140011656:	movzx  edx,BYTE PTR [rax]
   140011659:	add    rsp,0x28
   14001165d:	jmp    0x1400014a0
   140011662:	mov    rax,QWORD PTR [r9+0x8]
   140011666:	mov    edx,DWORD PTR [rax]
   140011668:	call   0x1400027f0
   14001166d:	add    rsp,0x28
   140011671:	ret    
   140011672:	int3   
   140011673:	int3   
   140011674:	int3   
   140011675:	int3   
   140011676:	int3   
   140011677:	int3   
   140011678:	int3   
   140011679:	int3   
   14001167a:	int3   
   14001167b:	int3   
   14001167c:	int3   
   14001167d:	int3   
   14001167e:	int3   
   14001167f:	int3   
   140011680:	mov    r10,rdx
   140011683:	mov    r9,rcx
   140011686:	test   rdx,rdx
   140011689:	jne    0x14001168e
   14001168b:	xor    eax,eax
   14001168d:	ret    
   14001168e:	lea    r8,[rip+0xaa73]        # 0x14001c108
   140011695:	mov    rax,rdx
   140011698:	sub    r8,rdx
   14001169b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400116a0:	movzx  edx,BYTE PTR [rax]
   1400116a3:	movzx  ecx,BYTE PTR [rax+r8*1]
   1400116a8:	sub    edx,ecx
   1400116aa:	jne    0x1400116b3
   1400116ac:	inc    rax
   1400116af:	test   ecx,ecx
   1400116b1:	jne    0x1400116a0
   1400116b3:	test   edx,edx
   1400116b5:	jne    0x1400116bb
   1400116b7:	mov    rax,r9
   1400116ba:	ret    
   1400116bb:	mov    rdx,r10
   1400116be:	mov    rcx,r9
   1400116c1:	rex.W jmp QWORD PTR [rip+0x3998]        # 0x140015060
   1400116c8:	int3   
   1400116c9:	int3   
   1400116ca:	int3   
   1400116cb:	int3   
   1400116cc:	int3   
   1400116cd:	int3   
   1400116ce:	int3   
   1400116cf:	int3   
   1400116d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400116d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400116da:	mov    QWORD PTR [rsp+0x18],rsi
   1400116df:	push   rdi
   1400116e0:	sub    rsp,0x20
   1400116e4:	mov    rsi,r9
   1400116e7:	mov    ebp,edx
   1400116e9:	mov    rdi,rcx
   1400116ec:	call   QWORD PTR [rip+0x3976]        # 0x140015068
   1400116f2:	mov    ebx,eax
   1400116f4:	test   eax,eax
   1400116f6:	js     0x140011754
   1400116f8:	test   ebp,ebp
   1400116fa:	jne    0x14001173c
   1400116fc:	cmp    eax,0x3
   1400116ff:	jge    0x14001174f
   140011701:	mov    ecx,eax
   140011703:	test   eax,eax
   140011705:	je     0x14001172c
   140011707:	sub    ecx,0x1
   14001170a:	je     0x14001171b
   14001170c:	cmp    ecx,0x1
   14001170f:	jne    0x14001174f
   140011711:	mov    rcx,rdi
   140011714:	call   0x140003690
   140011719:	jmp    0x14001174f
   14001171b:	mov    rax,QWORD PTR [rsi+0x8]
   14001171f:	mov    rcx,rdi
   140011722:	movzx  edx,BYTE PTR [rax]
   140011725:	call   0x1400014a0
   14001172a:	jmp    0x14001174f
   14001172c:	mov    rax,QWORD PTR [rsi+0x8]
   140011730:	mov    rcx,rdi
   140011733:	mov    edx,DWORD PTR [rax]
   140011735:	call   0x1400027f0
   14001173a:	jmp    0x14001174f
   14001173c:	cmp    ebp,0xc
   14001173f:	jne    0x140011752
   140011741:	cmp    eax,0x3
   140011744:	jge    0x14001174f
   140011746:	mov    rax,QWORD PTR [rsi]
   140011749:	mov    DWORD PTR [rax],0xffffffff
   14001174f:	sub    ebx,0x3
   140011752:	mov    eax,ebx
   140011754:	mov    rbx,QWORD PTR [rsp+0x30]
   140011759:	mov    rbp,QWORD PTR [rsp+0x38]
   14001175e:	mov    rsi,QWORD PTR [rsp+0x40]
   140011763:	add    rsp,0x20
   140011767:	pop    rdi
   140011768:	ret    
   140011769:	int3   
   14001176a:	int3   
   14001176b:	int3   
   14001176c:	int3   
   14001176d:	int3   
   14001176e:	int3   
   14001176f:	int3   
   140011770:	mov    rcx,QWORD PTR [rcx+0x8]
   140011774:	cmp    QWORD PTR [rcx+0x28],0x0
   140011779:	je     0x140011782
   14001177b:	rex.W jmp QWORD PTR [rip+0x2df6]        # 0x140014578
   140011782:	lea    rax,[rip+0x17eb7]        # 0x140029640
   140011789:	ret    
   14001178a:	int3   
   14001178b:	int3   
   14001178c:	int3   
   14001178d:	int3   
   14001178e:	int3   
   14001178f:	int3   
   140011790:	sub    rsp,0x28
   140011794:	test   edx,edx
   140011796:	jne    0x1400117a2
   140011798:	test   r8d,r8d
   14001179b:	jne    0x1400117a2
   14001179d:	call   0x1400051b0
   1400117a2:	add    rsp,0x28
   1400117a6:	ret    
   1400117a7:	int3   
   1400117a8:	int3   
   1400117a9:	int3   
   1400117aa:	int3   
   1400117ab:	int3   
   1400117ac:	int3   
   1400117ad:	int3   
   1400117ae:	int3   
   1400117af:	int3   
   1400117b0:	mov    r10,rdx
   1400117b3:	mov    r9,rcx
   1400117b6:	test   rdx,rdx
   1400117b9:	jne    0x1400117be
   1400117bb:	xor    eax,eax
   1400117bd:	ret    
   1400117be:	lea    r8,[rip+0xaa73]        # 0x14001c238
   1400117c5:	mov    rax,rdx
   1400117c8:	sub    r8,rdx
   1400117cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400117d0:	movzx  edx,BYTE PTR [rax]
   1400117d3:	movzx  ecx,BYTE PTR [rax+r8*1]
   1400117d8:	sub    edx,ecx
   1400117da:	jne    0x1400117e3
   1400117dc:	inc    rax
   1400117df:	test   ecx,ecx
   1400117e1:	jne    0x1400117d0
   1400117e3:	test   edx,edx
   1400117e5:	jne    0x1400117eb
   1400117e7:	mov    rax,r9
   1400117ea:	ret    
   1400117eb:	mov    rdx,r10
   1400117ee:	mov    rcx,r9
   1400117f1:	rex.W jmp QWORD PTR [rip+0x3880]        # 0x140015078
   1400117f8:	int3   
   1400117f9:	int3   
   1400117fa:	int3   
   1400117fb:	int3   
   1400117fc:	int3   
   1400117fd:	int3   
   1400117fe:	int3   
   1400117ff:	int3   
   140011800:	mov    QWORD PTR [rsp+0x8],rbx
   140011805:	mov    QWORD PTR [rsp+0x10],rbp
   14001180a:	mov    QWORD PTR [rsp+0x18],rsi
   14001180f:	push   rdi
   140011810:	sub    rsp,0x20
   140011814:	mov    rbp,r9
   140011817:	mov    edi,edx
   140011819:	mov    rsi,rcx
   14001181c:	call   QWORD PTR [rip+0x385e]        # 0x140015080
   140011822:	mov    ebx,eax
   140011824:	test   eax,eax
   140011826:	js     0x140011857
   140011828:	test   edi,edi
   14001182a:	jne    0x14001183f
   14001182c:	cmp    eax,0x1
   14001182f:	jge    0x140011853
   140011831:	test   eax,eax
   140011833:	jne    0x140011853
   140011835:	mov    rcx,rsi
   140011838:	call   0x1400051b0
   14001183d:	jmp    0x140011853
   14001183f:	cmp    edi,0xc
   140011842:	jne    0x140011855
   140011844:	cmp    eax,0x1
   140011847:	jge    0x140011853
   140011849:	mov    rax,QWORD PTR [rbp+0x0]
   14001184d:	mov    DWORD PTR [rax],0xffffffff
   140011853:	dec    ebx
   140011855:	mov    eax,ebx
   140011857:	mov    rbx,QWORD PTR [rsp+0x30]
   14001185c:	mov    rbp,QWORD PTR [rsp+0x38]
   140011861:	mov    rsi,QWORD PTR [rsp+0x40]
   140011866:	add    rsp,0x20
   14001186a:	pop    rdi
   14001186b:	ret    
   14001186c:	int3   
   14001186d:	int3   
   14001186e:	int3   
   14001186f:	int3   
   140011870:	mov    rcx,QWORD PTR [rcx+0x8]
   140011874:	cmp    QWORD PTR [rcx+0x28],0x0
   140011879:	je     0x140011882
   14001187b:	rex.W jmp QWORD PTR [rip+0x2cf6]        # 0x140014578
   140011882:	lea    rax,[rip+0x17def]        # 0x140029678
   140011889:	ret    
   14001188a:	int3   
   14001188b:	int3   
   14001188c:	int3   
   14001188d:	int3   
   14001188e:	int3   
   14001188f:	int3   
   140011890:	ret    0x0
   140011893:	int3   
   140011894:	int3   
   140011895:	int3   
   140011896:	int3   
   140011897:	int3   
   140011898:	int3   
   140011899:	int3   
   14001189a:	int3   
   14001189b:	int3   
   14001189c:	int3   
   14001189d:	int3   
   14001189e:	int3   
   14001189f:	int3   
   1400118a0:	mov    r10,rdx
   1400118a3:	mov    r9,rcx
   1400118a6:	test   rdx,rdx
   1400118a9:	jne    0x1400118ae
   1400118ab:	xor    eax,eax
   1400118ad:	ret    
   1400118ae:	lea    r8,[rip+0xaa0b]        # 0x14001c2c0
   1400118b5:	mov    rax,rdx
   1400118b8:	sub    r8,rdx
   1400118bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400118c0:	movzx  edx,BYTE PTR [rax]
   1400118c3:	movzx  ecx,BYTE PTR [rax+r8*1]
   1400118c8:	sub    edx,ecx
   1400118ca:	jne    0x1400118d3
   1400118cc:	inc    rax
   1400118cf:	test   ecx,ecx
   1400118d1:	jne    0x1400118c0
   1400118d3:	test   edx,edx
   1400118d5:	jne    0x1400118db
   1400118d7:	mov    rax,r9
   1400118da:	ret    
   1400118db:	mov    rdx,r10
   1400118de:	mov    rcx,r9
   1400118e1:	rex.W jmp QWORD PTR [rip+0x3790]        # 0x140015078
   1400118e8:	int3   
   1400118e9:	int3   
   1400118ea:	int3   
   1400118eb:	int3   
   1400118ec:	int3   
   1400118ed:	int3   
   1400118ee:	int3   
   1400118ef:	int3   
   1400118f0:	rex.W jmp QWORD PTR [rip+0x3789]        # 0x140015080
   1400118f7:	int3   
   1400118f8:	int3   
   1400118f9:	int3   
   1400118fa:	int3   
   1400118fb:	int3   
   1400118fc:	int3   
   1400118fd:	int3   
   1400118fe:	int3   
   1400118ff:	int3   
   140011900:	mov    rcx,QWORD PTR [rcx+0x8]
   140011904:	cmp    QWORD PTR [rcx+0x28],0x0
   140011909:	je     0x140011912
   14001190b:	rex.W jmp QWORD PTR [rip+0x2c66]        # 0x140014578
   140011912:	lea    rax,[rip+0x17d97]        # 0x1400296b0
   140011919:	ret    
   14001191a:	int3   
   14001191b:	int3   
   14001191c:	int3   
   14001191d:	int3   
   14001191e:	int3   
   14001191f:	int3   
   140011920:	sub    rsp,0x28
   140011924:	test   edx,edx
   140011926:	jne    0x140011941
   140011928:	test   r8d,r8d
   14001192b:	je     0x14001193c
   14001192d:	cmp    r8d,0x1
   140011931:	jne    0x140011941
   140011933:	add    rsp,0x28
   140011937:	jmp    0x1400060e0
   14001193c:	call   0x1400068f0
   140011941:	add    rsp,0x28
   140011945:	ret    
   140011946:	int3   
   140011947:	int3   
   140011948:	int3   
   140011949:	int3   
   14001194a:	int3   
   14001194b:	int3   
   14001194c:	int3   
   14001194d:	int3   
   14001194e:	int3   
   14001194f:	int3   
   140011950:	mov    r10,rdx
   140011953:	mov    r9,rcx
   140011956:	test   rdx,rdx
   140011959:	jne    0x14001195e
   14001195b:	xor    eax,eax
   14001195d:	ret    
   14001195e:	lea    r8,[rip+0xaa0b]        # 0x14001c370
   140011965:	mov    rax,rdx
   140011968:	sub    r8,rdx
   14001196b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011970:	movzx  edx,BYTE PTR [rax]
   140011973:	movzx  ecx,BYTE PTR [rax+r8*1]
   140011978:	sub    edx,ecx
   14001197a:	jne    0x140011983
   14001197c:	inc    rax
   14001197f:	test   ecx,ecx
   140011981:	jne    0x140011970
   140011983:	test   edx,edx
   140011985:	jne    0x14001198b
   140011987:	mov    rax,r9
   14001198a:	ret    
   14001198b:	mov    rdx,r10
   14001198e:	mov    rcx,r9
   140011991:	rex.W jmp QWORD PTR [rip+0x36e0]        # 0x140015078
   140011998:	int3   
   140011999:	int3   
   14001199a:	int3   
   14001199b:	int3   
   14001199c:	int3   
   14001199d:	int3   
   14001199e:	int3   
   14001199f:	int3   
   1400119a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400119a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400119aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400119af:	push   rdi
   1400119b0:	sub    rsp,0x20
   1400119b4:	mov    rbp,r9
   1400119b7:	mov    edi,edx
   1400119b9:	mov    rsi,rcx
   1400119bc:	call   QWORD PTR [rip+0x36be]        # 0x140015080
   1400119c2:	mov    ebx,eax
   1400119c4:	test   eax,eax
   1400119c6:	js     0x140011a07
   1400119c8:	test   edi,edi
   1400119ca:	jne    0x1400119ee
   1400119cc:	cmp    eax,0x2
   1400119cf:	jge    0x140011a02
   1400119d1:	test   eax,eax
   1400119d3:	je     0x1400119e4
   1400119d5:	cmp    eax,0x1
   1400119d8:	jne    0x140011a02
   1400119da:	mov    rcx,rsi
   1400119dd:	call   0x1400060e0
   1400119e2:	jmp    0x140011a02
   1400119e4:	mov    rcx,rsi
   1400119e7:	call   0x1400068f0
   1400119ec:	jmp    0x140011a02
   1400119ee:	cmp    edi,0xc
   1400119f1:	jne    0x140011a05
   1400119f3:	cmp    eax,0x2
   1400119f6:	jge    0x140011a02
   1400119f8:	mov    rax,QWORD PTR [rbp+0x0]
   1400119fc:	mov    DWORD PTR [rax],0xffffffff
   140011a02:	sub    ebx,0x2
   140011a05:	mov    eax,ebx
   140011a07:	mov    rbx,QWORD PTR [rsp+0x30]
   140011a0c:	mov    rbp,QWORD PTR [rsp+0x38]
   140011a11:	mov    rsi,QWORD PTR [rsp+0x40]
   140011a16:	add    rsp,0x20
   140011a1a:	pop    rdi
   140011a1b:	ret    
   140011a1c:	int3   
   140011a1d:	int3   
   140011a1e:	int3   
   140011a1f:	int3   
   140011a20:	mov    rcx,QWORD PTR [rcx+0x8]
   140011a24:	cmp    QWORD PTR [rcx+0x28],0x0
   140011a29:	je     0x140011a32
   140011a2b:	rex.W jmp QWORD PTR [rip+0x2b46]        # 0x140014578
   140011a32:	lea    rax,[rip+0x17caf]        # 0x1400296e8
   140011a39:	ret    
   140011a3a:	int3   
   140011a3b:	int3   
   140011a3c:	int3   
   140011a3d:	int3   
   140011a3e:	int3   
   140011a3f:	int3   
   140011a40:	sub    rsp,0x28
   140011a44:	test   edx,edx
   140011a46:	jne    0x140011a59
   140011a48:	test   r8d,r8d
   140011a4b:	jne    0x140011a59
   140011a4d:	mov    rax,QWORD PTR [r9+0x8]
   140011a51:	movzx  edx,BYTE PTR [rax]
   140011a54:	call   0x1400086c0
   140011a59:	add    rsp,0x28
   140011a5d:	ret    
   140011a5e:	int3   
   140011a5f:	int3   
   140011a60:	mov    r10,rdx
   140011a63:	mov    r9,rcx
   140011a66:	test   rdx,rdx
   140011a69:	jne    0x140011a6e
   140011a6b:	xor    eax,eax
   140011a6d:	ret    
   140011a6e:	lea    r8,[rip+0xa9fb]        # 0x14001c470
   140011a75:	mov    rax,rdx
   140011a78:	sub    r8,rdx
   140011a7b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011a80:	movzx  edx,BYTE PTR [rax]
   140011a83:	movzx  ecx,BYTE PTR [rax+r8*1]
   140011a88:	sub    edx,ecx
   140011a8a:	jne    0x140011a93
   140011a8c:	inc    rax
   140011a8f:	test   ecx,ecx
   140011a91:	jne    0x140011a80
   140011a93:	test   edx,edx
   140011a95:	jne    0x140011a9b
   140011a97:	mov    rax,r9
   140011a9a:	ret    
   140011a9b:	mov    rdx,r10
   140011a9e:	mov    rcx,r9
   140011aa1:	rex.W jmp QWORD PTR [rip+0x35d0]        # 0x140015078
   140011aa8:	int3   
   140011aa9:	int3   
   140011aaa:	int3   
   140011aab:	int3   
   140011aac:	int3   
   140011aad:	int3   
   140011aae:	int3   
   140011aaf:	int3   
   140011ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140011ab5:	mov    QWORD PTR [rsp+0x10],rbp
   140011aba:	mov    QWORD PTR [rsp+0x18],rsi
   140011abf:	push   rdi
   140011ac0:	sub    rsp,0x20
   140011ac4:	mov    rsi,r9
   140011ac7:	mov    edi,edx
   140011ac9:	mov    rbp,rcx
   140011acc:	call   QWORD PTR [rip+0x35ae]        # 0x140015080
   140011ad2:	mov    ebx,eax
   140011ad4:	test   eax,eax
   140011ad6:	js     0x140011b0d
   140011ad8:	test   edi,edi
   140011ada:	jne    0x140011af6
   140011adc:	cmp    eax,0x1
   140011adf:	jge    0x140011b09
   140011ae1:	test   eax,eax
   140011ae3:	jne    0x140011b09
   140011ae5:	mov    rax,QWORD PTR [rsi+0x8]
   140011ae9:	mov    rcx,rbp
   140011aec:	movzx  edx,BYTE PTR [rax]
   140011aef:	call   0x1400086c0
   140011af4:	jmp    0x140011b09
   140011af6:	cmp    edi,0xc
   140011af9:	jne    0x140011b0b
   140011afb:	cmp    eax,0x1
   140011afe:	jge    0x140011b09
   140011b00:	mov    rax,QWORD PTR [rsi]
   140011b03:	mov    DWORD PTR [rax],0xffffffff
   140011b09:	dec    ebx
   140011b0b:	mov    eax,ebx
   140011b0d:	mov    rbx,QWORD PTR [rsp+0x30]
   140011b12:	mov    rbp,QWORD PTR [rsp+0x38]
   140011b17:	mov    rsi,QWORD PTR [rsp+0x40]
   140011b1c:	add    rsp,0x20
   140011b20:	pop    rdi
   140011b21:	ret    
   140011b22:	int3   
   140011b23:	int3   
   140011b24:	int3   
   140011b25:	int3   
   140011b26:	int3   
   140011b27:	int3   
   140011b28:	int3   
   140011b29:	int3   
   140011b2a:	int3   
   140011b2b:	int3   
   140011b2c:	int3   
   140011b2d:	int3   
   140011b2e:	int3   
   140011b2f:	int3   
   140011b30:	mov    rcx,QWORD PTR [rcx+0x8]
   140011b34:	cmp    QWORD PTR [rcx+0x28],0x0
   140011b39:	je     0x140011b42
   140011b3b:	rex.W jmp QWORD PTR [rip+0x2a36]        # 0x140014578
   140011b42:	lea    rax,[rip+0x17bd7]        # 0x140029720
   140011b49:	ret    
   140011b4a:	int3   
   140011b4b:	int3   
   140011b4c:	int3   
   140011b4d:	int3   
   140011b4e:	int3   
   140011b4f:	int3   
   140011b50:	sub    rsp,0x28
   140011b54:	test   edx,edx
   140011b56:	jne    0x140011b71
   140011b58:	test   r8d,r8d
   140011b5b:	je     0x140011b6c
   140011b5d:	cmp    r8d,0x1
   140011b61:	jne    0x140011b71
   140011b63:	add    rsp,0x28
   140011b67:	jmp    0x140009120
   140011b6c:	call   0x140009ae0
   140011b71:	add    rsp,0x28
   140011b75:	ret    
   140011b76:	int3   
   140011b77:	int3   
   140011b78:	int3   
   140011b79:	int3   
   140011b7a:	int3   
   140011b7b:	int3   
   140011b7c:	int3   
   140011b7d:	int3   
   140011b7e:	int3   
   140011b7f:	int3   
   140011b80:	mov    r10,rdx
   140011b83:	mov    r9,rcx
   140011b86:	test   rdx,rdx
   140011b89:	jne    0x140011b8e
   140011b8b:	xor    eax,eax
   140011b8d:	ret    
   140011b8e:	lea    r8,[rip+0xa9cb]        # 0x14001c560
   140011b95:	mov    rax,rdx
   140011b98:	sub    r8,rdx
   140011b9b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011ba0:	movzx  edx,BYTE PTR [rax]
   140011ba3:	movzx  ecx,BYTE PTR [rax+r8*1]
   140011ba8:	sub    edx,ecx
   140011baa:	jne    0x140011bb3
   140011bac:	inc    rax
   140011baf:	test   ecx,ecx
   140011bb1:	jne    0x140011ba0
   140011bb3:	test   edx,edx
   140011bb5:	jne    0x140011bbb
   140011bb7:	mov    rax,r9
   140011bba:	ret    
   140011bbb:	mov    rdx,r10
   140011bbe:	mov    rcx,r9
   140011bc1:	rex.W jmp QWORD PTR [rip+0x34b0]        # 0x140015078
   140011bc8:	int3   
   140011bc9:	int3   
   140011bca:	int3   
   140011bcb:	int3   
   140011bcc:	int3   
   140011bcd:	int3   
   140011bce:	int3   
   140011bcf:	int3   
   140011bd0:	mov    QWORD PTR [rsp+0x8],rbx
   140011bd5:	mov    QWORD PTR [rsp+0x10],rbp
   140011bda:	mov    QWORD PTR [rsp+0x18],rsi
   140011bdf:	push   rdi
   140011be0:	sub    rsp,0x20
   140011be4:	mov    rbp,r9
   140011be7:	mov    edi,edx
   140011be9:	mov    rsi,rcx
   140011bec:	call   QWORD PTR [rip+0x348e]        # 0x140015080
   140011bf2:	mov    ebx,eax
   140011bf4:	test   eax,eax
   140011bf6:	js     0x140011c37
   140011bf8:	test   edi,edi
   140011bfa:	jne    0x140011c1e
   140011bfc:	cmp    eax,0x2
   140011bff:	jge    0x140011c32
   140011c01:	test   eax,eax
   140011c03:	je     0x140011c14
   140011c05:	cmp    eax,0x1
   140011c08:	jne    0x140011c32
   140011c0a:	mov    rcx,rsi
   140011c0d:	call   0x140009120
   140011c12:	jmp    0x140011c32
   140011c14:	mov    rcx,rsi
   140011c17:	call   0x140009ae0
   140011c1c:	jmp    0x140011c32
   140011c1e:	cmp    edi,0xc
   140011c21:	jne    0x140011c35
   140011c23:	cmp    eax,0x2
   140011c26:	jge    0x140011c32
   140011c28:	mov    rax,QWORD PTR [rbp+0x0]
   140011c2c:	mov    DWORD PTR [rax],0xffffffff
   140011c32:	sub    ebx,0x2
   140011c35:	mov    eax,ebx
   140011c37:	mov    rbx,QWORD PTR [rsp+0x30]
   140011c3c:	mov    rbp,QWORD PTR [rsp+0x38]
   140011c41:	mov    rsi,QWORD PTR [rsp+0x40]
   140011c46:	add    rsp,0x20
   140011c4a:	pop    rdi
   140011c4b:	ret    
   140011c4c:	int3   
   140011c4d:	int3   
   140011c4e:	int3   
   140011c4f:	int3   
   140011c50:	mov    rcx,QWORD PTR [rcx+0x8]
   140011c54:	cmp    QWORD PTR [rcx+0x28],0x0
   140011c59:	je     0x140011c62
   140011c5b:	rex.W jmp QWORD PTR [rip+0x2916]        # 0x140014578
   140011c62:	lea    rax,[rip+0x17aef]        # 0x140029758
   140011c69:	ret    
   140011c6a:	int3   
   140011c6b:	int3   
   140011c6c:	int3   
   140011c6d:	int3   
   140011c6e:	int3   
   140011c6f:	int3   
   140011c70:	sub    rsp,0x28
   140011c74:	test   edx,edx
   140011c76:	jne    0x140011c91
   140011c78:	test   r8d,r8d
   140011c7b:	je     0x140011c8c
   140011c7d:	cmp    r8d,0x1
   140011c81:	jne    0x140011c91
   140011c83:	add    rsp,0x28
   140011c87:	jmp    0x14000a930
   140011c8c:	call   0x14000aa00
   140011c91:	add    rsp,0x28
   140011c95:	ret    
   140011c96:	int3   
   140011c97:	int3   
   140011c98:	int3   
   140011c99:	int3   
   140011c9a:	int3   
   140011c9b:	int3   
   140011c9c:	int3   
   140011c9d:	int3   
   140011c9e:	int3   
   140011c9f:	int3   
   140011ca0:	mov    r10,rdx
   140011ca3:	mov    r9,rcx
   140011ca6:	test   rdx,rdx
   140011ca9:	jne    0x140011cae
   140011cab:	xor    eax,eax
   140011cad:	ret    
   140011cae:	lea    r8,[rip+0xa99b]        # 0x14001c650
   140011cb5:	mov    rax,rdx
   140011cb8:	sub    r8,rdx
   140011cbb:	nop    DWORD PTR [rax+rax*1+0x0]
   140011cc0:	movzx  edx,BYTE PTR [rax]
   140011cc3:	movzx  ecx,BYTE PTR [rax+r8*1]
   140011cc8:	sub    edx,ecx
   140011cca:	jne    0x140011cd3
   140011ccc:	inc    rax
   140011ccf:	test   ecx,ecx
   140011cd1:	jne    0x140011cc0
   140011cd3:	test   edx,edx
   140011cd5:	jne    0x140011cdb
   140011cd7:	mov    rax,r9
   140011cda:	ret    
   140011cdb:	mov    rdx,r10
   140011cde:	mov    rcx,r9
   140011ce1:	rex.W jmp QWORD PTR [rip+0x3390]        # 0x140015078
   140011ce8:	int3   
   140011ce9:	int3   
   140011cea:	int3   
   140011ceb:	int3   
   140011cec:	int3   
   140011ced:	int3   
   140011cee:	int3   
   140011cef:	int3   
   140011cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140011cf5:	mov    QWORD PTR [rsp+0x10],rbp
   140011cfa:	mov    QWORD PTR [rsp+0x18],rsi
   140011cff:	push   rdi
   140011d00:	sub    rsp,0x20
   140011d04:	mov    rbp,r9
   140011d07:	mov    edi,edx
   140011d09:	mov    rsi,rcx
   140011d0c:	call   QWORD PTR [rip+0x336e]        # 0x140015080
   140011d12:	mov    ebx,eax
   140011d14:	test   eax,eax
   140011d16:	js     0x140011d57
   140011d18:	test   edi,edi
   140011d1a:	jne    0x140011d3e
   140011d1c:	cmp    eax,0x2
   140011d1f:	jge    0x140011d52
   140011d21:	test   eax,eax
   140011d23:	je     0x140011d34
   140011d25:	cmp    eax,0x1
   140011d28:	jne    0x140011d52
   140011d2a:	mov    rcx,rsi
   140011d2d:	call   0x14000a930
   140011d32:	jmp    0x140011d52
   140011d34:	mov    rcx,rsi
   140011d37:	call   0x14000aa00
   140011d3c:	jmp    0x140011d52
   140011d3e:	cmp    edi,0xc
   140011d41:	jne    0x140011d55
   140011d43:	cmp    eax,0x2
   140011d46:	jge    0x140011d52
   140011d48:	mov    rax,QWORD PTR [rbp+0x0]
   140011d4c:	mov    DWORD PTR [rax],0xffffffff
   140011d52:	sub    ebx,0x2
   140011d55:	mov    eax,ebx
   140011d57:	mov    rbx,QWORD PTR [rsp+0x30]
   140011d5c:	mov    rbp,QWORD PTR [rsp+0x38]
   140011d61:	mov    rsi,QWORD PTR [rsp+0x40]
   140011d66:	add    rsp,0x20
   140011d6a:	pop    rdi
   140011d6b:	ret    
   140011d6c:	int3   
   140011d6d:	int3   
   140011d6e:	int3   
   140011d6f:	int3   
   140011d70:	mov    rcx,QWORD PTR [rcx+0x8]
   140011d74:	cmp    QWORD PTR [rcx+0x28],0x0
   140011d79:	je     0x140011d82
   140011d7b:	rex.W jmp QWORD PTR [rip+0x27f6]        # 0x140014578
   140011d82:	lea    rax,[rip+0x17a07]        # 0x140029790
   140011d89:	ret    
   140011d8a:	int3   
   140011d8b:	int3   
   140011d8c:	int3   
   140011d8d:	int3   
   140011d8e:	int3   
   140011d8f:	int3   
   140011d90:	mov    r10,rdx
   140011d93:	mov    r9,rcx
   140011d96:	test   rdx,rdx
   140011d99:	jne    0x140011d9e
   140011d9b:	xor    eax,eax
   140011d9d:	ret    
   140011d9e:	lea    r8,[rip+0xa963]        # 0x14001c708
   140011da5:	mov    rax,rdx
   140011da8:	sub    r8,rdx
   140011dab:	nop    DWORD PTR [rax+rax*1+0x0]
   140011db0:	movzx  edx,BYTE PTR [rax]
   140011db3:	movzx  ecx,BYTE PTR [rax+r8*1]
   140011db8:	sub    edx,ecx
   140011dba:	jne    0x140011dc3
   140011dbc:	inc    rax
   140011dbf:	test   ecx,ecx
   140011dc1:	jne    0x140011db0
   140011dc3:	test   edx,edx
   140011dc5:	jne    0x140011dcb
   140011dc7:	mov    rax,r9
   140011dca:	ret    
   140011dcb:	mov    rdx,r10
   140011dce:	mov    rcx,r9
   140011dd1:	rex.W jmp QWORD PTR [rip+0x32a0]        # 0x140015078
   140011dd8:	int3   
   140011dd9:	int3   
   140011dda:	int3   
   140011ddb:	int3   
   140011ddc:	int3   
   140011ddd:	int3   
   140011dde:	int3   
   140011ddf:	int3   
   140011de0:	mov    rcx,QWORD PTR [rcx+0x8]
   140011de4:	cmp    QWORD PTR [rcx+0x28],0x0
   140011de9:	je     0x140011df2
   140011deb:	rex.W jmp QWORD PTR [rip+0x2786]        # 0x140014578
   140011df2:	lea    rax,[rip+0x179cf]        # 0x1400297c8
   140011df9:	ret    
   140011dfa:	int3   
   140011dfb:	int3   
   140011dfc:	int3   
   140011dfd:	int3   
   140011dfe:	int3   
   140011dff:	int3   
   140011e00:	mov    r10,rdx
   140011e03:	mov    r9,rcx
   140011e06:	test   rdx,rdx
   140011e09:	jne    0x140011e0e
   140011e0b:	xor    eax,eax
   140011e0d:	ret    
   140011e0e:	lea    r8,[rip+0xa95b]        # 0x14001c770
   140011e15:	mov    rax,rdx
   140011e18:	sub    r8,rdx
   140011e1b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011e20:	movzx  edx,BYTE PTR [rax]
   140011e23:	movzx  ecx,BYTE PTR [rax+r8*1]
   140011e28:	sub    edx,ecx
   140011e2a:	jne    0x140011e33
   140011e2c:	inc    rax
   140011e2f:	test   ecx,ecx
   140011e31:	jne    0x140011e20
   140011e33:	test   edx,edx
   140011e35:	jne    0x140011e3b
   140011e37:	mov    rax,r9
   140011e3a:	ret    
   140011e3b:	mov    rdx,r10
   140011e3e:	mov    rcx,r9
   140011e41:	rex.W jmp QWORD PTR [rip+0x3230]        # 0x140015078
   140011e48:	int3   
   140011e49:	int3   
   140011e4a:	int3   
   140011e4b:	int3   
   140011e4c:	int3   
   140011e4d:	int3   
   140011e4e:	int3   
   140011e4f:	int3   
   140011e50:	mov    rcx,QWORD PTR [rcx+0x8]
   140011e54:	cmp    QWORD PTR [rcx+0x28],0x0
   140011e59:	je     0x140011e62
   140011e5b:	rex.W jmp QWORD PTR [rip+0x2716]        # 0x140014578
   140011e62:	lea    rax,[rip+0x17997]        # 0x140029800
   140011e69:	ret    
   140011e6a:	int3   
   140011e6b:	int3   
   140011e6c:	int3   
   140011e6d:	int3   
   140011e6e:	int3   
   140011e6f:	int3   
   140011e70:	mov    r10,rdx
   140011e73:	mov    r9,rcx
   140011e76:	test   rdx,rdx
   140011e79:	jne    0x140011e7e
   140011e7b:	xor    eax,eax
   140011e7d:	ret    
   140011e7e:	lea    r8,[rip+0xa953]        # 0x14001c7d8
   140011e85:	mov    rax,rdx
   140011e88:	sub    r8,rdx
   140011e8b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011e90:	movzx  edx,BYTE PTR [rax]
   140011e93:	movzx  ecx,BYTE PTR [rax+r8*1]
   140011e98:	sub    edx,ecx
   140011e9a:	jne    0x140011ea3
   140011e9c:	inc    rax
   140011e9f:	test   ecx,ecx
   140011ea1:	jne    0x140011e90
   140011ea3:	test   edx,edx
   140011ea5:	jne    0x140011eab
   140011ea7:	mov    rax,r9
   140011eaa:	ret    
   140011eab:	mov    rdx,r10
   140011eae:	mov    rcx,r9
   140011eb1:	rex.W jmp QWORD PTR [rip+0x31d8]        # 0x140015090
   140011eb8:	int3   
   140011eb9:	int3   
   140011eba:	int3   
   140011ebb:	int3   
   140011ebc:	int3   
   140011ebd:	int3   
   140011ebe:	int3   
   140011ebf:	int3   
   140011ec0:	rex.W jmp QWORD PTR [rip+0x31d1]        # 0x140015098
   140011ec7:	int3   
   140011ec8:	int3   
   140011ec9:	int3   
   140011eca:	int3   
   140011ecb:	int3   
   140011ecc:	int3   
   140011ecd:	int3   
   140011ece:	int3   
   140011ecf:	int3   
   140011ed0:	mov    rcx,QWORD PTR [rcx+0x8]
   140011ed4:	cmp    QWORD PTR [rcx+0x28],0x0
   140011ed9:	je     0x140011ee2
   140011edb:	rex.W jmp QWORD PTR [rip+0x2696]        # 0x140014578
   140011ee2:	lea    rax,[rip+0x1794f]        # 0x140029838
   140011ee9:	ret    
   140011eea:	jmp    QWORD PTR [rip+0x3708]        # 0x1400155f8
   140011ef0:	jmp    QWORD PTR [rip+0x36fa]        # 0x1400155f0
   140011ef6:	jmp    QWORD PTR [rip+0x36ec]        # 0x1400155e8
   140011efc:	jmp    QWORD PTR [rip+0x36de]        # 0x1400155e0
   140011f02:	jmp    QWORD PTR [rip+0x36d0]        # 0x1400155d8
   140011f08:	jmp    QWORD PTR [rip+0x36c2]        # 0x1400155d0
   140011f0e:	jmp    QWORD PTR [rip+0x36b4]        # 0x1400155c8
   140011f14:	jmp    QWORD PTR [rip+0x36a6]        # 0x1400155c0
   140011f1a:	jmp    QWORD PTR [rip+0x3698]        # 0x1400155b8
   140011f20:	jmp    QWORD PTR [rip+0x368a]        # 0x1400155b0
   140011f26:	jmp    QWORD PTR [rip+0x367c]        # 0x1400155a8
   140011f2c:	jmp    QWORD PTR [rip+0x366e]        # 0x1400155a0
   140011f32:	jmp    QWORD PTR [rip+0x3660]        # 0x140015598
   140011f38:	jmp    QWORD PTR [rip+0x3652]        # 0x140015590
   140011f3e:	jmp    QWORD PTR [rip+0x3644]        # 0x140015588
   140011f44:	jmp    QWORD PTR [rip+0x3636]        # 0x140015580
   140011f4a:	jmp    QWORD PTR [rip+0x3628]        # 0x140015578
   140011f50:	jmp    QWORD PTR [rip+0x361a]        # 0x140015570
   140011f56:	jmp    QWORD PTR [rip+0x360c]        # 0x140015568
   140011f5c:	jmp    QWORD PTR [rip+0x35f6]        # 0x140015558
   140011f62:	jmp    QWORD PTR [rip+0x35f8]        # 0x140015560
   140011f68:	jmp    QWORD PTR [rip+0x35e2]        # 0x140015550
   140011f6e:	jmp    QWORD PTR [rip+0x35d4]        # 0x140015548
   140011f74:	jmp    QWORD PTR [rip+0x35c6]        # 0x140015540
   140011f7a:	jmp    QWORD PTR [rip+0x35b8]        # 0x140015538
   140011f80:	jmp    QWORD PTR [rip+0x35aa]        # 0x140015530
   140011f86:	jmp    QWORD PTR [rip+0x359c]        # 0x140015528
   140011f8c:	jmp    QWORD PTR [rip+0x358e]        # 0x140015520
   140011f92:	jmp    QWORD PTR [rip+0x3580]        # 0x140015518
   140011f98:	jmp    QWORD PTR [rip+0x3572]        # 0x140015510
   140011f9e:	jmp    QWORD PTR [rip+0x3564]        # 0x140015508
   140011fa4:	jmp    QWORD PTR [rip+0x3556]        # 0x140015500
   140011faa:	jmp    QWORD PTR [rip+0x3548]        # 0x1400154f8
   140011fb0:	jmp    QWORD PTR [rip+0x353a]        # 0x1400154f0
   140011fb6:	jmp    QWORD PTR [rip+0x352c]        # 0x1400154e8
   140011fbc:	jmp    QWORD PTR [rip+0x351e]        # 0x1400154e0
   140011fc2:	jmp    QWORD PTR [rip+0x3510]        # 0x1400154d8
   140011fc8:	jmp    QWORD PTR [rip+0x3502]        # 0x1400154d0
   140011fce:	jmp    QWORD PTR [rip+0x34f4]        # 0x1400154c8
   140011fd4:	jmp    QWORD PTR [rip+0x34e6]        # 0x1400154c0
   140011fda:	jmp    QWORD PTR [rip+0x34d8]        # 0x1400154b8
   140011fe0:	jmp    QWORD PTR [rip+0x34ca]        # 0x1400154b0
   140011fe6:	jmp    QWORD PTR [rip+0x34bc]        # 0x1400154a8
   140011fec:	jmp    QWORD PTR [rip+0x34ae]        # 0x1400154a0
   140011ff2:	jmp    QWORD PTR [rip+0x34a0]        # 0x140015498
   140011ff8:	jmp    QWORD PTR [rip+0x3492]        # 0x140015490
   140011ffe:	jmp    QWORD PTR [rip+0x3484]        # 0x140015488
   140012004:	jmp    QWORD PTR [rip+0x3476]        # 0x140015480
   14001200a:	jmp    QWORD PTR [rip+0x3468]        # 0x140015478
   140012010:	jmp    QWORD PTR [rip+0x33ba]        # 0x1400153d0
   140012016:	jmp    QWORD PTR [rip+0x33ac]        # 0x1400153c8
   14001201c:	jmp    QWORD PTR [rip+0x339e]        # 0x1400153c0
   140012022:	jmp    QWORD PTR [rip+0x3390]        # 0x1400153b8
   140012028:	jmp    QWORD PTR [rip+0x3382]        # 0x1400153b0
   14001202e:	jmp    QWORD PTR [rip+0x3374]        # 0x1400153a8
   140012034:	jmp    QWORD PTR [rip+0x3366]        # 0x1400153a0
   14001203a:	jmp    QWORD PTR [rip+0x3358]        # 0x140015398
   140012040:	jmp    QWORD PTR [rip+0x334a]        # 0x140015390
   140012046:	jmp    QWORD PTR [rip+0x333c]        # 0x140015388
   14001204c:	jmp    QWORD PTR [rip+0x332e]        # 0x140015380
   140012052:	jmp    QWORD PTR [rip+0x3320]        # 0x140015378
   140012058:	jmp    QWORD PTR [rip+0x3312]        # 0x140015370
   14001205e:	jmp    QWORD PTR [rip+0x3304]        # 0x140015368
   140012064:	jmp    QWORD PTR [rip+0x32f6]        # 0x140015360
   14001206a:	jmp    QWORD PTR [rip+0x32e8]        # 0x140015358
   140012070:	jmp    QWORD PTR [rip+0x32da]        # 0x140015350
   140012076:	jmp    QWORD PTR [rip+0x32cc]        # 0x140015348
   14001207c:	jmp    QWORD PTR [rip+0x32be]        # 0x140015340
   140012082:	jmp    QWORD PTR [rip+0x32b0]        # 0x140015338
   140012088:	jmp    QWORD PTR [rip+0x32a2]        # 0x140015330
   14001208e:	jmp    QWORD PTR [rip+0x3294]        # 0x140015328
   140012094:	jmp    QWORD PTR [rip+0x3286]        # 0x140015320
   14001209a:	jmp    QWORD PTR [rip+0x3278]        # 0x140015318
   1400120a0:	jmp    QWORD PTR [rip+0x326a]        # 0x140015310
   1400120a6:	jmp    QWORD PTR [rip+0x325c]        # 0x140015308
   1400120ac:	jmp    QWORD PTR [rip+0x324e]        # 0x140015300
   1400120b2:	jmp    QWORD PTR [rip+0x3240]        # 0x1400152f8
   1400120b8:	jmp    QWORD PTR [rip+0x3232]        # 0x1400152f0
   1400120be:	jmp    QWORD PTR [rip+0x3224]        # 0x1400152e8
   1400120c4:	jmp    QWORD PTR [rip+0x3216]        # 0x1400152e0
   1400120ca:	jmp    QWORD PTR [rip+0x3208]        # 0x1400152d8
   1400120d0:	jmp    QWORD PTR [rip+0x31fa]        # 0x1400152d0
   1400120d6:	jmp    QWORD PTR [rip+0x31ec]        # 0x1400152c8
   1400120dc:	jmp    QWORD PTR [rip+0x31de]        # 0x1400152c0
   1400120e2:	jmp    QWORD PTR [rip+0x31d0]        # 0x1400152b8
   1400120e8:	jmp    QWORD PTR [rip+0x31c2]        # 0x1400152b0
   1400120ee:	jmp    QWORD PTR [rip+0x31b4]        # 0x1400152a8
   1400120f4:	jmp    QWORD PTR [rip+0x31a6]        # 0x1400152a0
   1400120fa:	jmp    QWORD PTR [rip+0x3198]        # 0x140015298
   140012100:	jmp    QWORD PTR [rip+0x318a]        # 0x140015290
   140012106:	jmp    QWORD PTR [rip+0x317c]        # 0x140015288
   14001210c:	jmp    QWORD PTR [rip+0x316e]        # 0x140015280
   140012112:	jmp    QWORD PTR [rip+0x3160]        # 0x140015278
   140012118:	jmp    QWORD PTR [rip+0x3152]        # 0x140015270
   14001211e:	jmp    QWORD PTR [rip+0x3144]        # 0x140015268
   140012124:	jmp    QWORD PTR [rip+0x3136]        # 0x140015260
   14001212a:	jmp    QWORD PTR [rip+0x3128]        # 0x140015258
   140012130:	jmp    QWORD PTR [rip+0x311a]        # 0x140015250
   140012136:	jmp    QWORD PTR [rip+0x310c]        # 0x140015248
   14001213c:	jmp    QWORD PTR [rip+0x30fe]        # 0x140015240
   140012142:	jmp    QWORD PTR [rip+0x30f0]        # 0x140015238
   140012148:	jmp    QWORD PTR [rip+0x30e2]        # 0x140015230
   14001214e:	jmp    QWORD PTR [rip+0x30d4]        # 0x140015228
   140012154:	jmp    QWORD PTR [rip+0x30c6]        # 0x140015220
   14001215a:	jmp    QWORD PTR [rip+0x30b8]        # 0x140015218
   140012160:	jmp    QWORD PTR [rip+0x30aa]        # 0x140015210
   140012166:	jmp    QWORD PTR [rip+0x309c]        # 0x140015208
   14001216c:	jmp    QWORD PTR [rip+0x308e]        # 0x140015200
   140012172:	jmp    QWORD PTR [rip+0x3080]        # 0x1400151f8
   140012178:	jmp    QWORD PTR [rip+0x3072]        # 0x1400151f0
   14001217e:	jmp    QWORD PTR [rip+0x3064]        # 0x1400151e8
   140012184:	jmp    QWORD PTR [rip+0x3056]        # 0x1400151e0
   14001218a:	jmp    QWORD PTR [rip+0x3048]        # 0x1400151d8
   140012190:	jmp    QWORD PTR [rip+0x303a]        # 0x1400151d0
   140012196:	jmp    QWORD PTR [rip+0x302c]        # 0x1400151c8
   14001219c:	jmp    QWORD PTR [rip+0x301e]        # 0x1400151c0
   1400121a2:	jmp    QWORD PTR [rip+0x3010]        # 0x1400151b8
   1400121a8:	jmp    QWORD PTR [rip+0x3002]        # 0x1400151b0
   1400121ae:	jmp    QWORD PTR [rip+0x2ff4]        # 0x1400151a8
   1400121b4:	jmp    QWORD PTR [rip+0x2fe6]        # 0x1400151a0
   1400121ba:	jmp    QWORD PTR [rip+0x2fd8]        # 0x140015198
   1400121c0:	jmp    QWORD PTR [rip+0x2fca]        # 0x140015190
   1400121c6:	jmp    QWORD PTR [rip+0x2fbc]        # 0x140015188
   1400121cc:	jmp    QWORD PTR [rip+0x2fae]        # 0x140015180
   1400121d2:	jmp    QWORD PTR [rip+0x2fa0]        # 0x140015178
   1400121d8:	jmp    QWORD PTR [rip+0x2f92]        # 0x140015170
   1400121de:	jmp    QWORD PTR [rip+0x2f84]        # 0x140015168
   1400121e4:	jmp    QWORD PTR [rip+0x2f76]        # 0x140015160
   1400121ea:	jmp    QWORD PTR [rip+0x2f68]        # 0x140015158
   1400121f0:	jmp    QWORD PTR [rip+0x2f5a]        # 0x140015150
   1400121f6:	jmp    QWORD PTR [rip+0x2f4c]        # 0x140015148
   1400121fc:	jmp    QWORD PTR [rip+0x2f3e]        # 0x140015140
   140012202:	jmp    QWORD PTR [rip+0x2f30]        # 0x140015138
   140012208:	jmp    QWORD PTR [rip+0x2f22]        # 0x140015130
   14001220e:	jmp    QWORD PTR [rip+0x2f14]        # 0x140015128
   140012214:	jmp    QWORD PTR [rip+0x2efe]        # 0x140015118
   14001221a:	jmp    QWORD PTR [rip+0x2f00]        # 0x140015120
   140012220:	jmp    QWORD PTR [rip+0x2eea]        # 0x140015110
   140012226:	jmp    QWORD PTR [rip+0x2edc]        # 0x140015108
   14001222c:	jmp    QWORD PTR [rip+0x2ece]        # 0x140015100
   140012232:	jmp    QWORD PTR [rip+0x2ec0]        # 0x1400150f8
   140012238:	jmp    QWORD PTR [rip+0x2eb2]        # 0x1400150f0
   14001223e:	jmp    QWORD PTR [rip+0x2ea4]        # 0x1400150e8
   140012244:	jmp    QWORD PTR [rip+0x2e96]        # 0x1400150e0
   14001224a:	jmp    QWORD PTR [rip+0x2e88]        # 0x1400150d8
   140012250:	jmp    QWORD PTR [rip+0x2e7a]        # 0x1400150d0
   140012256:	jmp    QWORD PTR [rip+0x2e6c]        # 0x1400150c8
   14001225c:	jmp    QWORD PTR [rip+0x2e5e]        # 0x1400150c0
   140012262:	jmp    QWORD PTR [rip+0x2e50]        # 0x1400150b8
   140012268:	jmp    QWORD PTR [rip+0x2e42]        # 0x1400150b0
   14001226e:	jmp    QWORD PTR [rip+0x2e34]        # 0x1400150a8
   140012274:	jmp    QWORD PTR [rip+0x28de]        # 0x140014b58
   14001227a:	jmp    QWORD PTR [rip+0x2388]        # 0x140014608
   140012280:	jmp    QWORD PTR [rip+0x238a]        # 0x140014610
   140012286:	jmp    QWORD PTR [rip+0x238c]        # 0x140014618
   14001228c:	jmp    QWORD PTR [rip+0x238e]        # 0x140014620
   140012292:	jmp    QWORD PTR [rip+0x2390]        # 0x140014628
   140012298:	jmp    QWORD PTR [rip+0x2392]        # 0x140014630
   14001229e:	jmp    QWORD PTR [rip+0x2394]        # 0x140014638
   1400122a4:	jmp    QWORD PTR [rip+0x2396]        # 0x140014640
   1400122aa:	jmp    QWORD PTR [rip+0x2398]        # 0x140014648
   1400122b0:	jmp    QWORD PTR [rip+0x239a]        # 0x140014650
   1400122b6:	jmp    QWORD PTR [rip+0x239c]        # 0x140014658
   1400122bc:	jmp    QWORD PTR [rip+0x239e]        # 0x140014660
   1400122c2:	jmp    QWORD PTR [rip+0x23a0]        # 0x140014668
   1400122c8:	jmp    QWORD PTR [rip+0x23a2]        # 0x140014670
   1400122ce:	jmp    QWORD PTR [rip+0x23a4]        # 0x140014678
   1400122d4:	jmp    QWORD PTR [rip+0x23a6]        # 0x140014680
   1400122da:	jmp    QWORD PTR [rip+0x23a8]        # 0x140014688
   1400122e0:	jmp    QWORD PTR [rip+0x23aa]        # 0x140014690
   1400122e6:	jmp    QWORD PTR [rip+0x23fc]        # 0x1400146e8
   1400122ec:	jmp    QWORD PTR [rip+0x23fe]        # 0x1400146f0
   1400122f2:	jmp    QWORD PTR [rip+0x2400]        # 0x1400146f8
   1400122f8:	jmp    QWORD PTR [rip+0x2402]        # 0x140014700
   1400122fe:	jmp    QWORD PTR [rip+0x2404]        # 0x140014708
   140012304:	jmp    QWORD PTR [rip+0x2406]        # 0x140014710
   14001230a:	jmp    QWORD PTR [rip+0x2408]        # 0x140014718
   140012310:	jmp    QWORD PTR [rip+0x240a]        # 0x140014720
   140012316:	jmp    QWORD PTR [rip+0x240c]        # 0x140014728
   14001231c:	jmp    QWORD PTR [rip+0x248e]        # 0x1400147b0
   140012322:	jmp    QWORD PTR [rip+0x2490]        # 0x1400147b8
   140012328:	jmp    QWORD PTR [rip+0x2492]        # 0x1400147c0
   14001232e:	jmp    QWORD PTR [rip+0x2494]        # 0x1400147c8
   140012334:	jmp    QWORD PTR [rip+0x2496]        # 0x1400147d0
   14001233a:	jmp    QWORD PTR [rip+0x2498]        # 0x1400147d8
   140012340:	jmp    QWORD PTR [rip+0x249a]        # 0x1400147e0
   140012346:	jmp    QWORD PTR [rip+0x249c]        # 0x1400147e8
   14001234c:	jmp    QWORD PTR [rip+0x249e]        # 0x1400147f0
   140012352:	jmp    QWORD PTR [rip+0x24a0]        # 0x1400147f8
   140012358:	jmp    QWORD PTR [rip+0x24a2]        # 0x140014800
   14001235e:	jmp    QWORD PTR [rip+0x24a4]        # 0x140014808
   140012364:	jmp    QWORD PTR [rip+0x24a6]        # 0x140014810
   14001236a:	jmp    QWORD PTR [rip+0x24a8]        # 0x140014818
   140012370:	jmp    QWORD PTR [rip+0x24aa]        # 0x140014820
   140012376:	jmp    QWORD PTR [rip+0x24ac]        # 0x140014828
   14001237c:	jmp    QWORD PTR [rip+0x24ae]        # 0x140014830
   140012382:	jmp    QWORD PTR [rip+0x24b0]        # 0x140014838
   140012388:	jmp    QWORD PTR [rip+0x24b2]        # 0x140014840
   14001238e:	jmp    QWORD PTR [rip+0x24b4]        # 0x140014848
   140012394:	jmp    QWORD PTR [rip+0x24b6]        # 0x140014850
   14001239a:	jmp    QWORD PTR [rip+0x24b8]        # 0x140014858
   1400123a0:	jmp    QWORD PTR [rip+0x24ba]        # 0x140014860
   1400123a6:	jmp    QWORD PTR [rip+0x24bc]        # 0x140014868
   1400123ac:	jmp    QWORD PTR [rip+0x24be]        # 0x140014870
   1400123b2:	jmp    QWORD PTR [rip+0x24c0]        # 0x140014878
   1400123b8:	jmp    QWORD PTR [rip+0x24c2]        # 0x140014880
   1400123be:	jmp    QWORD PTR [rip+0x24c4]        # 0x140014888
   1400123c4:	jmp    QWORD PTR [rip+0x24c6]        # 0x140014890
   1400123ca:	jmp    QWORD PTR [rip+0x24c8]        # 0x140014898
   1400123d0:	jmp    QWORD PTR [rip+0x24ca]        # 0x1400148a0
   1400123d6:	jmp    QWORD PTR [rip+0x24cc]        # 0x1400148a8
   1400123dc:	jmp    QWORD PTR [rip+0x24ce]        # 0x1400148b0
   1400123e2:	jmp    QWORD PTR [rip+0x24d0]        # 0x1400148b8
   1400123e8:	jmp    QWORD PTR [rip+0x24d2]        # 0x1400148c0
   1400123ee:	jmp    QWORD PTR [rip+0x24d4]        # 0x1400148c8
   1400123f4:	jmp    QWORD PTR [rip+0x24d6]        # 0x1400148d0
   1400123fa:	jmp    QWORD PTR [rip+0x24d8]        # 0x1400148d8
   140012400:	jmp    QWORD PTR [rip+0x24da]        # 0x1400148e0
   140012406:	jmp    QWORD PTR [rip+0x24dc]        # 0x1400148e8
   14001240c:	jmp    QWORD PTR [rip+0x24de]        # 0x1400148f0
   140012412:	jmp    QWORD PTR [rip+0x24e0]        # 0x1400148f8
   140012418:	jmp    QWORD PTR [rip+0x24e2]        # 0x140014900
   14001241e:	jmp    QWORD PTR [rip+0x24e4]        # 0x140014908
   140012424:	jmp    QWORD PTR [rip+0x24e6]        # 0x140014910
   14001242a:	jmp    QWORD PTR [rip+0x24e8]        # 0x140014918
   140012430:	jmp    QWORD PTR [rip+0x24ea]        # 0x140014920
   140012436:	jmp    QWORD PTR [rip+0x24ec]        # 0x140014928
   14001243c:	jmp    QWORD PTR [rip+0x24ee]        # 0x140014930
   140012442:	jmp    QWORD PTR [rip+0x24f0]        # 0x140014938
   140012448:	jmp    QWORD PTR [rip+0x24f2]        # 0x140014940
   14001244e:	jmp    QWORD PTR [rip+0x24f4]        # 0x140014948
   140012454:	jmp    QWORD PTR [rip+0x24f6]        # 0x140014950
   14001245a:	jmp    QWORD PTR [rip+0x24f8]        # 0x140014958
   140012460:	jmp    QWORD PTR [rip+0x24fa]        # 0x140014960
   140012466:	jmp    QWORD PTR [rip+0x24fc]        # 0x140014968
   14001246c:	jmp    QWORD PTR [rip+0x24fe]        # 0x140014970
   140012472:	jmp    QWORD PTR [rip+0x2500]        # 0x140014978
   140012478:	jmp    QWORD PTR [rip+0x2502]        # 0x140014980
   14001247e:	jmp    QWORD PTR [rip+0x2504]        # 0x140014988
   140012484:	jmp    QWORD PTR [rip+0x2506]        # 0x140014990
   14001248a:	jmp    QWORD PTR [rip+0x2508]        # 0x140014998
   140012490:	jmp    QWORD PTR [rip+0x250a]        # 0x1400149a0
   140012496:	jmp    QWORD PTR [rip+0x250c]        # 0x1400149a8
   14001249c:	jmp    QWORD PTR [rip+0x250e]        # 0x1400149b0
   1400124a2:	jmp    QWORD PTR [rip+0x2510]        # 0x1400149b8
   1400124a8:	jmp    QWORD PTR [rip+0x2512]        # 0x1400149c0
   1400124ae:	jmp    QWORD PTR [rip+0x2514]        # 0x1400149c8
   1400124b4:	jmp    QWORD PTR [rip+0x2516]        # 0x1400149d0
   1400124ba:	jmp    QWORD PTR [rip+0x2518]        # 0x1400149d8
   1400124c0:	jmp    QWORD PTR [rip+0x251a]        # 0x1400149e0
   1400124c6:	jmp    QWORD PTR [rip+0x251c]        # 0x1400149e8
   1400124cc:	jmp    QWORD PTR [rip+0x251e]        # 0x1400149f0
   1400124d2:	jmp    QWORD PTR [rip+0x2520]        # 0x1400149f8
   1400124d8:	jmp    QWORD PTR [rip+0x2522]        # 0x140014a00
   1400124de:	jmp    QWORD PTR [rip+0x2524]        # 0x140014a08
   1400124e4:	jmp    QWORD PTR [rip+0x2526]        # 0x140014a10
   1400124ea:	jmp    QWORD PTR [rip+0x2528]        # 0x140014a18
   1400124f0:	jmp    QWORD PTR [rip+0x252a]        # 0x140014a20
   1400124f6:	jmp    QWORD PTR [rip+0x252c]        # 0x140014a28
   1400124fc:	jmp    QWORD PTR [rip+0x252e]        # 0x140014a30
   140012502:	jmp    QWORD PTR [rip+0x2530]        # 0x140014a38
   140012508:	jmp    QWORD PTR [rip+0x2532]        # 0x140014a40
   14001250e:	jmp    QWORD PTR [rip+0x2534]        # 0x140014a48
   140012514:	jmp    QWORD PTR [rip+0x2536]        # 0x140014a50
   14001251a:	jmp    QWORD PTR [rip+0x2538]        # 0x140014a58
   140012520:	jmp    QWORD PTR [rip+0x253a]        # 0x140014a60
   140012526:	jmp    QWORD PTR [rip+0x253c]        # 0x140014a68
   14001252c:	jmp    QWORD PTR [rip+0x253e]        # 0x140014a70
   140012532:	jmp    QWORD PTR [rip+0x2540]        # 0x140014a78
   140012538:	jmp    QWORD PTR [rip+0x2542]        # 0x140014a80
   14001253e:	jmp    QWORD PTR [rip+0x2544]        # 0x140014a88
   140012544:	jmp    QWORD PTR [rip+0x2546]        # 0x140014a90
   14001254a:	jmp    QWORD PTR [rip+0x2548]        # 0x140014a98
   140012550:	jmp    QWORD PTR [rip+0x254a]        # 0x140014aa0
   140012556:	jmp    QWORD PTR [rip+0x254c]        # 0x140014aa8
   14001255c:	jmp    QWORD PTR [rip+0x254e]        # 0x140014ab0
   140012562:	jmp    QWORD PTR [rip+0x2550]        # 0x140014ab8
   140012568:	jmp    QWORD PTR [rip+0x2552]        # 0x140014ac0
   14001256e:	jmp    QWORD PTR [rip+0x2554]        # 0x140014ac8
   140012574:	jmp    QWORD PTR [rip+0x2556]        # 0x140014ad0
   14001257a:	jmp    QWORD PTR [rip+0x2558]        # 0x140014ad8
   140012580:	jmp    QWORD PTR [rip+0x255a]        # 0x140014ae0
   140012586:	jmp    QWORD PTR [rip+0x255c]        # 0x140014ae8
   14001258c:	jmp    QWORD PTR [rip+0x258e]        # 0x140014b20
   140012592:	jmp    QWORD PTR [rip+0x2590]        # 0x140014b28
   140012598:	jmp    QWORD PTR [rip+0x2592]        # 0x140014b30
   14001259e:	jmp    QWORD PTR [rip+0x2594]        # 0x140014b38
   1400125a4:	jmp    QWORD PTR [rip+0x2596]        # 0x140014b40
   1400125aa:	jmp    QWORD PTR [rip+0x2598]        # 0x140014b48
   1400125b0:	jmp    QWORD PTR [rip+0x25da]        # 0x140014b90
   1400125b6:	jmp    QWORD PTR [rip+0x25dc]        # 0x140014b98
   1400125bc:	jmp    QWORD PTR [rip+0x25de]        # 0x140014ba0
   1400125c2:	jmp    QWORD PTR [rip+0x25e0]        # 0x140014ba8
   1400125c8:	jmp    QWORD PTR [rip+0x25e2]        # 0x140014bb0
   1400125ce:	jmp    QWORD PTR [rip+0x25e4]        # 0x140014bb8
   1400125d4:	jmp    QWORD PTR [rip+0x25e6]        # 0x140014bc0
   1400125da:	jmp    QWORD PTR [rip+0x25e8]        # 0x140014bc8
   1400125e0:	jmp    QWORD PTR [rip+0x25ea]        # 0x140014bd0
   1400125e6:	jmp    QWORD PTR [rip+0x25ec]        # 0x140014bd8
   1400125ec:	jmp    QWORD PTR [rip+0x25ee]        # 0x140014be0
   1400125f2:	jmp    QWORD PTR [rip+0x25f0]        # 0x140014be8
   1400125f8:	jmp    QWORD PTR [rip+0x25f2]        # 0x140014bf0
   1400125fe:	jmp    QWORD PTR [rip+0x25f4]        # 0x140014bf8
   140012604:	jmp    QWORD PTR [rip+0x25f6]        # 0x140014c00
   14001260a:	jmp    QWORD PTR [rip+0x25f8]        # 0x140014c08
   140012610:	jmp    QWORD PTR [rip+0x25fa]        # 0x140014c10
   140012616:	jmp    QWORD PTR [rip+0x25fc]        # 0x140014c18
   14001261c:	jmp    QWORD PTR [rip+0x25fe]        # 0x140014c20
   140012622:	jmp    QWORD PTR [rip+0x2600]        # 0x140014c28
   140012628:	jmp    QWORD PTR [rip+0x2612]        # 0x140014c40
   14001262e:	jmp    QWORD PTR [rip+0x2644]        # 0x140014c78
   140012634:	jmp    QWORD PTR [rip+0x2646]        # 0x140014c80
   14001263a:	jmp    QWORD PTR [rip+0x2648]        # 0x140014c88
   140012640:	jmp    QWORD PTR [rip+0x264a]        # 0x140014c90
   140012646:	jmp    QWORD PTR [rip+0x264c]        # 0x140014c98
   14001264c:	jmp    QWORD PTR [rip+0x264e]        # 0x140014ca0
   140012652:	jmp    QWORD PTR [rip+0x2650]        # 0x140014ca8
   140012658:	jmp    QWORD PTR [rip+0x2652]        # 0x140014cb0
   14001265e:	jmp    QWORD PTR [rip+0x2654]        # 0x140014cb8
   140012664:	jmp    QWORD PTR [rip+0x2656]        # 0x140014cc0
   14001266a:	jmp    QWORD PTR [rip+0x2658]        # 0x140014cc8
   140012670:	jmp    QWORD PTR [rip+0x265a]        # 0x140014cd0
   140012676:	jmp    QWORD PTR [rip+0x265c]        # 0x140014cd8
   14001267c:	jmp    QWORD PTR [rip+0x265e]        # 0x140014ce0
   140012682:	jmp    QWORD PTR [rip+0x2660]        # 0x140014ce8
   140012688:	jmp    QWORD PTR [rip+0x2662]        # 0x140014cf0
   14001268e:	jmp    QWORD PTR [rip+0x2664]        # 0x140014cf8
   140012694:	jmp    QWORD PTR [rip+0x2666]        # 0x140014d00
   14001269a:	jmp    QWORD PTR [rip+0x2668]        # 0x140014d08
   1400126a0:	jmp    QWORD PTR [rip+0x266a]        # 0x140014d10
   1400126a6:	jmp    QWORD PTR [rip+0x266c]        # 0x140014d18
   1400126ac:	jmp    QWORD PTR [rip+0x266e]        # 0x140014d20
   1400126b2:	jmp    QWORD PTR [rip+0x2670]        # 0x140014d28
   1400126b8:	jmp    QWORD PTR [rip+0x2672]        # 0x140014d30
   1400126be:	jmp    QWORD PTR [rip+0x2674]        # 0x140014d38
   1400126c4:	jmp    QWORD PTR [rip+0x2676]        # 0x140014d40
   1400126ca:	jmp    QWORD PTR [rip+0x2678]        # 0x140014d48
   1400126d0:	jmp    QWORD PTR [rip+0x267a]        # 0x140014d50
   1400126d6:	jmp    QWORD PTR [rip+0x267c]        # 0x140014d58
   1400126dc:	jmp    QWORD PTR [rip+0x267e]        # 0x140014d60
   1400126e2:	jmp    QWORD PTR [rip+0x2680]        # 0x140014d68
   1400126e8:	jmp    QWORD PTR [rip+0x2682]        # 0x140014d70
   1400126ee:	jmp    QWORD PTR [rip+0x2684]        # 0x140014d78
   1400126f4:	jmp    QWORD PTR [rip+0x2686]        # 0x140014d80
   1400126fa:	jmp    QWORD PTR [rip+0x2688]        # 0x140014d88
   140012700:	jmp    QWORD PTR [rip+0x268a]        # 0x140014d90
   140012706:	jmp    QWORD PTR [rip+0x268c]        # 0x140014d98
   14001270c:	jmp    QWORD PTR [rip+0x268e]        # 0x140014da0
   140012712:	jmp    QWORD PTR [rip+0x2690]        # 0x140014da8
   140012718:	jmp    QWORD PTR [rip+0x2692]        # 0x140014db0
   14001271e:	jmp    QWORD PTR [rip+0x2694]        # 0x140014db8
   140012724:	jmp    QWORD PTR [rip+0x2696]        # 0x140014dc0
   14001272a:	jmp    QWORD PTR [rip+0x2698]        # 0x140014dc8
   140012730:	jmp    QWORD PTR [rip+0x269a]        # 0x140014dd0
   140012736:	jmp    QWORD PTR [rip+0x269c]        # 0x140014dd8
   14001273c:	jmp    QWORD PTR [rip+0x269e]        # 0x140014de0
   140012742:	jmp    QWORD PTR [rip+0x26a0]        # 0x140014de8
   140012748:	jmp    QWORD PTR [rip+0x26a2]        # 0x140014df0
   14001274e:	jmp    QWORD PTR [rip+0x26a4]        # 0x140014df8
   140012754:	jmp    QWORD PTR [rip+0x26a6]        # 0x140014e00
   14001275a:	jmp    QWORD PTR [rip+0x2718]        # 0x140014e78
   140012760:	jmp    QWORD PTR [rip+0x271a]        # 0x140014e80
   140012766:	jmp    QWORD PTR [rip+0x271c]        # 0x140014e88
   14001276c:	jmp    QWORD PTR [rip+0x271e]        # 0x140014e90
   140012772:	jmp    QWORD PTR [rip+0x2720]        # 0x140014e98
   140012778:	jmp    QWORD PTR [rip+0x2722]        # 0x140014ea0
   14001277e:	jmp    QWORD PTR [rip+0x2724]        # 0x140014ea8
   140012784:	jmp    QWORD PTR [rip+0x2726]        # 0x140014eb0
   14001278a:	jmp    QWORD PTR [rip+0x2728]        # 0x140014eb8
   140012790:	jmp    QWORD PTR [rip+0x272a]        # 0x140014ec0
   140012796:	jmp    QWORD PTR [rip+0x272c]        # 0x140014ec8
   14001279c:	jmp    QWORD PTR [rip+0x272e]        # 0x140014ed0
   1400127a2:	jmp    QWORD PTR [rip+0x2730]        # 0x140014ed8
   1400127a8:	jmp    QWORD PTR [rip+0x2732]        # 0x140014ee0
   1400127ae:	jmp    QWORD PTR [rip+0x2734]        # 0x140014ee8
   1400127b4:	jmp    QWORD PTR [rip+0x2736]        # 0x140014ef0
   1400127ba:	jmp    QWORD PTR [rip+0x2738]        # 0x140014ef8
   1400127c0:	jmp    QWORD PTR [rip+0x273a]        # 0x140014f00
   1400127c6:	jmp    QWORD PTR [rip+0x273c]        # 0x140014f08
   1400127cc:	jmp    QWORD PTR [rip+0x273e]        # 0x140014f10
   1400127d2:	jmp    QWORD PTR [rip+0x2740]        # 0x140014f18
   1400127d8:	jmp    QWORD PTR [rip+0x2742]        # 0x140014f20
   1400127de:	jmp    QWORD PTR [rip+0x2744]        # 0x140014f28
   1400127e4:	jmp    QWORD PTR [rip+0x2746]        # 0x140014f30
   1400127ea:	jmp    QWORD PTR [rip+0x2748]        # 0x140014f38
   1400127f0:	jmp    QWORD PTR [rip+0x274a]        # 0x140014f40
   1400127f6:	jmp    QWORD PTR [rip+0x274c]        # 0x140014f48
   1400127fc:	jmp    QWORD PTR [rip+0x274e]        # 0x140014f50
   140012802:	jmp    QWORD PTR [rip+0x2750]        # 0x140014f58
   140012808:	jmp    QWORD PTR [rip+0x2752]        # 0x140014f60
   14001280e:	jmp    QWORD PTR [rip+0x2754]        # 0x140014f68
   140012814:	jmp    QWORD PTR [rip+0x2756]        # 0x140014f70
   14001281a:	jmp    QWORD PTR [rip+0x2758]        # 0x140014f78
   140012820:	jmp    QWORD PTR [rip+0x275a]        # 0x140014f80
   140012826:	jmp    QWORD PTR [rip+0x275c]        # 0x140014f88
   14001282c:	jmp    QWORD PTR [rip+0x275e]        # 0x140014f90
   140012832:	jmp    QWORD PTR [rip+0x2760]        # 0x140014f98
   140012838:	jmp    QWORD PTR [rip+0x27c2]        # 0x140015000
   14001283e:	jmp    QWORD PTR [rip+0x27c4]        # 0x140015008
   140012844:	jmp    QWORD PTR [rip+0x27c6]        # 0x140015010
   14001284a:	jmp    QWORD PTR [rip+0x27c8]        # 0x140015018
   140012850:	jmp    QWORD PTR [rip+0x27ca]        # 0x140015020
   140012856:	jmp    QWORD PTR [rip+0x27cc]        # 0x140015028
   14001285c:	jmp    QWORD PTR [rip+0x1bfe]        # 0x140014460
   140012862:	jmp    QWORD PTR [rip+0x1bf0]        # 0x140014458
   140012868:	jmp    QWORD PTR [rip+0x1be2]        # 0x140014450
   14001286e:	jmp    QWORD PTR [rip+0x1bd4]        # 0x140014448
   140012874:	jmp    QWORD PTR [rip+0x1bc6]        # 0x140014440
   14001287a:	jmp    QWORD PTR [rip+0x1b30]        # 0x1400143b0
   140012880:	jmp    QWORD PTR [rip+0x1b22]        # 0x1400143a8
   140012886:	jmp    QWORD PTR [rip+0x18c4]        # 0x140014150
   14001288c:	jmp    QWORD PTR [rip+0x18b6]        # 0x140014148
   140012892:	jmp    QWORD PTR [rip+0x1898]        # 0x140014130
   140012898:	jmp    QWORD PTR [rip+0x188a]        # 0x140014128
   14001289e:	int3   
   14001289f:	int3   
   1400128a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400128a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400128aa:	push   rdi
   1400128ab:	sub    rsp,0x20
   1400128af:	mov    esi,edx
   1400128b1:	mov    rbx,rcx
   1400128b4:	test   dl,0x2
   1400128b7:	je     0x1400128e3
   1400128b9:	mov    r8d,DWORD PTR [rcx-0x8]
   1400128bd:	lea    r9,[rip+0x7ba]        # 0x14001307e
   1400128c4:	mov    edx,0x18
   1400128c9:	call   0x140012d90
   1400128ce:	test   sil,0x1
   1400128d2:	je     0x1400128dd
   1400128d4:	lea    rcx,[rbx-0x8]
   1400128d8:	call   0x140012898
   1400128dd:	lea    rax,[rbx-0x8]
   1400128e1:	jmp    0x1400128f9
   1400128e3:	call   0x14001307e
   1400128e8:	test   sil,0x1
   1400128ec:	je     0x1400128f6
   1400128ee:	mov    rcx,rbx
   1400128f1:	call   0x140012898
   1400128f6:	mov    rax,rbx
   1400128f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400128fe:	mov    rsi,QWORD PTR [rsp+0x38]
   140012903:	add    rsp,0x20
   140012907:	pop    rdi
   140012908:	ret    
   140012909:	int3   
   14001290a:	jmp    QWORD PTR [rip+0x1810]        # 0x140014120
   140012910:	rex push rbx
   140012912:	sub    rsp,0x20
   140012916:	mov    rbx,rcx
   140012919:	mov    rcx,QWORD PTR [rip+0x16ff8]        # 0x140029918
   140012920:	call   QWORD PTR [rip+0x17c2]        # 0x1400140e8
   140012926:	mov    QWORD PTR [rsp+0x38],rax
   14001292b:	cmp    rax,0xffffffffffffffff
   14001292f:	jne    0x14001293c
   140012931:	mov    rcx,rbx
   140012934:	call   QWORD PTR [rip+0x17b6]        # 0x1400140f0
   14001293a:	jmp    0x1400129ba
   14001293c:	mov    ecx,0x8
   140012941:	call   0x140012e00
   140012946:	nop
   140012947:	mov    rcx,QWORD PTR [rip+0x16fca]        # 0x140029918
   14001294e:	call   QWORD PTR [rip+0x1794]        # 0x1400140e8
   140012954:	mov    QWORD PTR [rsp+0x38],rax
   140012959:	mov    rcx,QWORD PTR [rip+0x16fb0]        # 0x140029910
   140012960:	call   QWORD PTR [rip+0x1782]        # 0x1400140e8
   140012966:	mov    QWORD PTR [rsp+0x40],rax
   14001296b:	mov    rcx,rbx
   14001296e:	call   QWORD PTR [rip+0x178c]        # 0x140014100
   140012974:	mov    rcx,rax
   140012977:	lea    r8,[rsp+0x40]
   14001297c:	lea    rdx,[rsp+0x38]
   140012981:	call   0x140012dfa
   140012986:	mov    rbx,rax
   140012989:	mov    rcx,QWORD PTR [rsp+0x38]
   14001298e:	call   QWORD PTR [rip+0x176c]        # 0x140014100
   140012994:	mov    QWORD PTR [rip+0x16f7d],rax        # 0x140029918
   14001299b:	mov    rcx,QWORD PTR [rsp+0x40]
   1400129a0:	call   QWORD PTR [rip+0x175a]        # 0x140014100
   1400129a6:	mov    QWORD PTR [rip+0x16f63],rax        # 0x140029910
   1400129ad:	mov    ecx,0x8
   1400129b2:	call   0x140012df4
   1400129b7:	mov    rax,rbx
   1400129ba:	add    rsp,0x20
   1400129be:	pop    rbx
   1400129bf:	ret    
   1400129c0:	sub    rsp,0x28
   1400129c4:	call   0x140012910
   1400129c9:	neg    rax
   1400129cc:	sbb    eax,eax
   1400129ce:	neg    eax
   1400129d0:	dec    eax
   1400129d2:	add    rsp,0x28
   1400129d6:	ret    
   1400129d7:	int3   
   1400129d8:	sub    rsp,0x38
   1400129dc:	lea    rcx,[rip+0x4c1]        # 0x140012ea4
   1400129e3:	call   0x1400129c0
   1400129e8:	mov    r11d,DWORD PTR [rip+0x16f01]        # 0x1400298f0
   1400129ef:	mov    r9d,DWORD PTR [rip+0x16ef6]        # 0x1400298ec
   1400129f6:	lea    rax,[rip+0x16edf]        # 0x1400298dc
   1400129fd:	lea    r8,[rip+0x16ec4]        # 0x1400298c8
   140012a04:	lea    rdx,[rip+0x16ec5]        # 0x1400298d0
   140012a0b:	lea    rcx,[rip+0x16eae]        # 0x1400298c0
   140012a12:	mov    DWORD PTR [rip+0x16ec3],r11d        # 0x1400298dc
   140012a19:	mov    QWORD PTR [rsp+0x20],rax
   140012a1e:	call   QWORD PTR [rip+0x16b4]        # 0x1400140d8
   140012a24:	mov    DWORD PTR [rip+0x16eae],eax        # 0x1400298d8
   140012a2a:	test   eax,eax
   140012a2c:	jns    0x140012a38
   140012a2e:	mov    ecx,0x8
   140012a33:	call   0x140012e64
   140012a38:	add    rsp,0x38
   140012a3c:	ret    
   140012a3d:	int3   
   140012a3e:	int3   
   140012a3f:	int3   
   140012a40:	mov    QWORD PTR [rsp+0x8],rsi
   140012a45:	push   rdi
   140012a46:	sub    rsp,0xa0
   140012a4d:	and    DWORD PTR [rsp+0x20],0x0
   140012a52:	lea    rcx,[rsp+0x30]
   140012a57:	call   QWORD PTR [rip+0x15eb]        # 0x140014048
   140012a5d:	nop
   140012a5e:	mov    rax,QWORD PTR gs:0x30
   140012a67:	mov    rdi,QWORD PTR [rax+0x8]
   140012a6b:	xor    esi,esi
   140012a6d:	xor    eax,eax
   140012a6f:	lock cmpxchg QWORD PTR [rip+0x16e88],rdi        # 0x140029900
   140012a78:	je     0x140012a93
   140012a7a:	cmp    rax,rdi
   140012a7d:	jne    0x140012a86
   140012a7f:	mov    esi,0x1
   140012a84:	jmp    0x140012a93
   140012a86:	mov    ecx,0x3e8
   140012a8b:	call   QWORD PTR [rip+0x15bf]        # 0x140014050
   140012a91:	jmp    0x140012a6d
   140012a93:	mov    eax,DWORD PTR [rip+0x16e63]        # 0x1400298fc
   140012a99:	cmp    eax,0x1
   140012a9c:	jne    0x140012aa8
   140012a9e:	lea    ecx,[rax+0x1e]
   140012aa1:	call   0x140012e64
   140012aa6:	jmp    0x140012ae7
   140012aa8:	mov    eax,DWORD PTR [rip+0x16e4e]        # 0x1400298fc
   140012aae:	test   eax,eax
   140012ab0:	jne    0x140012add
   140012ab2:	mov    DWORD PTR [rip+0x16e40],0x1        # 0x1400298fc
   140012abc:	lea    rdx,[rip+0x2c8d]        # 0x140015750
   140012ac3:	lea    rcx,[rip+0x2c6e]        # 0x140015738
   140012aca:	call   0x140012fb8
   140012acf:	test   eax,eax
   140012ad1:	je     0x140012ae7
   140012ad3:	mov    eax,0xff
   140012ad8:	jmp    0x140012c35
   140012add:	mov    DWORD PTR [rip+0x16dfd],0x1        # 0x1400298e4
   140012ae7:	mov    eax,DWORD PTR [rip+0x16e0f]        # 0x1400298fc
   140012aed:	cmp    eax,0x1
   140012af0:	jne    0x140012b0f
   140012af2:	lea    rdx,[rip+0x2c37]        # 0x140015730
   140012af9:	lea    rcx,[rip+0x2bc8]        # 0x1400156c8
   140012b00:	call   0x140012fb2
   140012b05:	mov    DWORD PTR [rip+0x16ded],0x2        # 0x1400298fc
   140012b0f:	test   esi,esi
   140012b11:	jne    0x140012b1c
   140012b13:	xor    eax,eax
   140012b15:	xchg   QWORD PTR [rip+0x16de4],rax        # 0x140029900
   140012b1c:	cmp    QWORD PTR [rip+0x16de4],0x0        # 0x140029908
   140012b24:	je     0x140012b45
   140012b26:	lea    rcx,[rip+0x16ddb]        # 0x140029908
   140012b2d:	call   0x140012f70
   140012b32:	test   eax,eax
   140012b34:	je     0x140012b45
   140012b36:	xor    r8d,r8d
   140012b39:	lea    edx,[r8+0x2]
   140012b3d:	xor    ecx,ecx
   140012b3f:	call   QWORD PTR [rip+0x16dc3]        # 0x140029908
   140012b45:	mov    rax,QWORD PTR [rip+0x155c]        # 0x1400140a8
   140012b4c:	mov    rdi,QWORD PTR [rax]
   140012b4f:	mov    QWORD PTR [rsp+0x28],rdi
   140012b54:	mov    esi,DWORD PTR [rsp+0x20]
   140012b58:	cmp    BYTE PTR [rdi],0x20
   140012b5b:	ja     0x140012bcd
   140012b5d:	cmp    BYTE PTR [rdi],0x0
   140012b60:	je     0x140012b66
   140012b62:	test   esi,esi
   140012b64:	jne    0x140012bcd
   140012b66:	cmp    BYTE PTR [rdi],0x0
   140012b69:	je     0x140012b7a
   140012b6b:	cmp    BYTE PTR [rdi],0x20
   140012b6e:	ja     0x140012b7a
   140012b70:	inc    rdi
   140012b73:	mov    QWORD PTR [rsp+0x28],rdi
   140012b78:	jmp    0x140012b66
   140012b7a:	test   BYTE PTR [rsp+0x6c],0x1
   140012b7f:	movzx  eax,WORD PTR [rsp+0x70]
   140012b84:	mov    r9d,0xa
   140012b8a:	cmovne r9d,eax
   140012b8e:	mov    r8,rdi
   140012b91:	xor    edx,edx
   140012b93:	lea    rcx,[rip+0xfffffffffffed466]        # 0x140000000
   140012b9a:	call   0x140013120
   140012b9f:	mov    DWORD PTR [rip+0x16d3b],eax        # 0x1400298e0
   140012ba5:	cmp    DWORD PTR [rip+0x16d18],0x0        # 0x1400298c4
   140012bac:	jne    0x140012bb6
   140012bae:	mov    ecx,eax
   140012bb0:	call   QWORD PTR [rip+0x14fa]        # 0x1400140b0
   140012bb6:	cmp    DWORD PTR [rip+0x16d27],0x0        # 0x1400298e4
   140012bbd:	jne    0x140012bcb
   140012bbf:	call   QWORD PTR [rip+0x14f3]        # 0x1400140b8
   140012bc5:	mov    eax,DWORD PTR [rip+0x16d15]        # 0x1400298e0
   140012bcb:	jmp    0x140012c2e
   140012bcd:	cmp    BYTE PTR [rdi],0x22
   140012bd0:	jne    0x140012bdf
   140012bd2:	xor    eax,eax
   140012bd4:	test   esi,esi
   140012bd6:	sete   al
   140012bd9:	mov    esi,eax
   140012bdb:	mov    DWORD PTR [rsp+0x20],eax
   140012bdf:	movzx  ecx,BYTE PTR [rdi]
   140012be2:	call   QWORD PTR [rip+0x14d8]        # 0x1400140c0
   140012be8:	test   eax,eax
   140012bea:	je     0x140012bf4
   140012bec:	inc    rdi
   140012bef:	mov    QWORD PTR [rsp+0x28],rdi
   140012bf4:	inc    rdi
   140012bf7:	mov    QWORD PTR [rsp+0x28],rdi
   140012bfc:	jmp    0x140012b58
   140012c01:	mov    DWORD PTR [rip+0x16cd9],eax        # 0x1400298e0
   140012c07:	cmp    DWORD PTR [rip+0x16cb6],0x0        # 0x1400298c4
   140012c0e:	jne    0x140012c19
   140012c10:	mov    ecx,eax
   140012c12:	call   QWORD PTR [rip+0x14b0]        # 0x1400140c8
   140012c18:	int3   
   140012c19:	cmp    DWORD PTR [rip+0x16cc4],0x0        # 0x1400298e4
   140012c20:	jne    0x140012c2e
   140012c22:	call   QWORD PTR [rip+0x1490]        # 0x1400140b8
   140012c28:	mov    eax,DWORD PTR [rip+0x16cb2]        # 0x1400298e0
   140012c2e:	jmp    0x140012c35
   140012c30:	mov    eax,0xff
   140012c35:	mov    rsi,QWORD PTR [rsp+0xb0]
   140012c3d:	add    rsp,0xa0
   140012c44:	pop    rdi
   140012c45:	ret    
   140012c46:	int3   
   140012c47:	int3   
   140012c48:	sub    rsp,0x28
   140012c4c:	mov    eax,0x5a4d
   140012c51:	cmp    WORD PTR [rip+0xfffffffffffed3a8],ax        # 0x140000000
   140012c58:	je     0x140012c5e
   140012c5a:	xor    eax,eax
   140012c5c:	jmp    0x140012cad
   140012c5e:	movsxd rcx,DWORD PTR [rip+0xfffffffffffed3d7]        # 0x14000003c
   140012c65:	lea    rax,[rip+0xfffffffffffed394]        # 0x140000000
   140012c6c:	add    rcx,rax
   140012c6f:	cmp    DWORD PTR [rcx],0x4550
   140012c75:	jne    0x140012c5a
   140012c77:	movzx  eax,WORD PTR [rcx+0x18]
   140012c7b:	cmp    eax,0x10b
   140012c80:	je     0x140012c9c
   140012c82:	cmp    eax,0x20b
   140012c87:	jne    0x140012c5a
   140012c89:	xor    eax,eax
   140012c8b:	cmp    DWORD PTR [rcx+0x84],0xe
   140012c92:	jbe    0x140012cad
   140012c94:	cmp    DWORD PTR [rcx+0xf8],eax
   140012c9a:	jmp    0x140012caa
   140012c9c:	xor    eax,eax
   140012c9e:	cmp    DWORD PTR [rcx+0x74],0xe
   140012ca2:	jbe    0x140012cad
   140012ca4:	cmp    DWORD PTR [rcx+0xe8],eax
   140012caa:	setne  al
   140012cad:	mov    ecx,0x2
   140012cb2:	mov    DWORD PTR [rip+0x16c0c],eax        # 0x1400298c4
   140012cb8:	call   QWORD PTR [rip+0x13b2]        # 0x140014070
   140012cbe:	or     rcx,0xffffffffffffffff
   140012cc2:	call   QWORD PTR [rip+0x1438]        # 0x140014100
   140012cc8:	mov    rcx,QWORD PTR [rip+0x13a9]        # 0x140014078
   140012ccf:	mov    QWORD PTR [rip+0x16c3a],rax        # 0x140029910
   140012cd6:	mov    QWORD PTR [rip+0x16c3b],rax        # 0x140029918
   140012cdd:	mov    eax,DWORD PTR [rip+0x16c15]        # 0x1400298f8
   140012ce3:	mov    DWORD PTR [rcx],eax
   140012ce5:	mov    rdx,QWORD PTR [rip+0x1394]        # 0x140014080
   140012cec:	mov    eax,DWORD PTR [rip+0x16c02]        # 0x1400298f4
   140012cf2:	mov    DWORD PTR [rdx],eax
   140012cf4:	call   0x140012e6c
   140012cf9:	call   0x140012fc0
   140012cfe:	cmp    DWORD PTR [rip+0x16b8f],0x0        # 0x140029894
   140012d05:	jne    0x140012d14
   140012d07:	lea    rcx,[rip+0x2b2]        # 0x140012fc0
   140012d0e:	call   QWORD PTR [rip+0x1374]        # 0x140014088
   140012d14:	cmp    DWORD PTR [rip+0x16b75],0xffffffff        # 0x140029890
   140012d1b:	jne    0x140012d26
   140012d1d:	or     ecx,0xffffffff
   140012d20:	call   QWORD PTR [rip+0x136a]        # 0x140014090
   140012d26:	xor    eax,eax
   140012d28:	add    rsp,0x28
   140012d2c:	ret    
   140012d2d:	int3   
   140012d2e:	int3   
   140012d2f:	int3   
   140012d30:	sub    rsp,0x28
   140012d34:	call   0x140012fc4
   140012d39:	add    rsp,0x28
   140012d3d:	jmp    0x140012a40
   140012d42:	int3   
   140012d43:	int3   
   140012d44:	mov    QWORD PTR [rsp+0x10],rbx
   140012d49:	mov    DWORD PTR [rsp+0x18],r8d
   140012d4e:	mov    QWORD PTR [rsp+0x8],rcx
   140012d53:	push   rsi
   140012d54:	push   rdi
   140012d55:	push   r12
   140012d57:	sub    rsp,0x40
   140012d5b:	mov    rsi,r9
   140012d5e:	mov    edi,r8d
   140012d61:	mov    r12,rdx
   140012d64:	mov    rbx,rcx
   140012d67:	sub    edi,0x1
   140012d6a:	mov    DWORD PTR [rsp+0x70],edi
   140012d6e:	js     0x140012d7f
   140012d70:	sub    rbx,r12
   140012d73:	mov    QWORD PTR [rsp+0x60],rbx
   140012d78:	mov    rcx,rbx
   140012d7b:	call   rsi
   140012d7d:	jmp    0x140012d67
   140012d7f:	jmp    0x140012d81
   140012d81:	mov    rbx,QWORD PTR [rsp+0x68]
   140012d86:	add    rsp,0x40
   140012d8a:	pop    r12
   140012d8c:	pop    rdi
   140012d8d:	pop    rsi
   140012d8e:	ret    
   140012d8f:	int3   
   140012d90:	mov    rax,rsp
   140012d93:	mov    QWORD PTR [rax+0x20],r9
   140012d97:	mov    DWORD PTR [rax+0x18],r8d
   140012d9b:	mov    QWORD PTR [rax+0x10],rdx
   140012d9f:	push   rbx
   140012da0:	push   rsi
   140012da1:	push   rdi
   140012da2:	push   r12
   140012da4:	sub    rsp,0x38
   140012da8:	mov    r12,r9
   140012dab:	movsxd rdi,r8d
   140012dae:	mov    rsi,rdx
   140012db1:	and    DWORD PTR [rax-0x38],0x0
   140012db5:	mov    rbx,rdi
   140012db8:	imul   rbx,rdx
   140012dbc:	add    rbx,rcx
   140012dbf:	mov    QWORD PTR [rax+0x8],rbx
   140012dc3:	sub    edi,0x1
   140012dc6:	mov    DWORD PTR [rsp+0x70],edi
   140012dca:	js     0x140012ddc
   140012dcc:	sub    rbx,rsi
   140012dcf:	mov    QWORD PTR [rsp+0x60],rbx
   140012dd4:	mov    rcx,rbx
   140012dd7:	call   r12
   140012dda:	jmp    0x140012dc3
   140012ddc:	mov    DWORD PTR [rsp+0x20],0x1
   140012de4:	add    rsp,0x38
   140012de8:	pop    r12
   140012dea:	pop    rdi
   140012deb:	pop    rsi
   140012dec:	pop    rbx
   140012ded:	ret    
   140012dee:	jmp    QWORD PTR [rip+0x1324]        # 0x140014118
   140012df4:	jmp    QWORD PTR [rip+0x1316]        # 0x140014110
   140012dfa:	jmp    QWORD PTR [rip+0x1308]        # 0x140014108
   140012e00:	jmp    QWORD PTR [rip+0x12f2]        # 0x1400140f8
   140012e06:	int3   
   140012e07:	int3   
   140012e08:	sub    rsp,0x28
   140012e0c:	mov    rax,QWORD PTR [rcx]
   140012e0f:	cmp    DWORD PTR [rax],0xe06d7363
   140012e15:	jne    0x140012e42
   140012e17:	cmp    DWORD PTR [rax+0x18],0x4
   140012e1b:	jne    0x140012e42
   140012e1d:	mov    eax,DWORD PTR [rax+0x20]
   140012e20:	cmp    eax,0x19930520
   140012e25:	je     0x140012e3c
   140012e27:	cmp    eax,0x19930521
   140012e2c:	je     0x140012e3c
   140012e2e:	cmp    eax,0x19930522
   140012e33:	je     0x140012e3c
   140012e35:	cmp    eax,0x1994000
   140012e3a:	jne    0x140012e42
   140012e3c:	call   0x140013078
   140012e41:	int3   
   140012e42:	xor    eax,eax
   140012e44:	add    rsp,0x28
   140012e48:	ret    
   140012e49:	int3   
   140012e4a:	int3   
   140012e4b:	int3   
   140012e4c:	sub    rsp,0x28
   140012e50:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x140012e08
   140012e57:	call   QWORD PTR [rip+0x11e3]        # 0x140014040
   140012e5d:	xor    eax,eax
   140012e5f:	add    rsp,0x28
   140012e63:	ret    
   140012e64:	jmp    QWORD PTR [rip+0x1276]        # 0x1400140e0
   140012e6a:	int3   
   140012e6b:	int3   
   140012e6c:	mov    QWORD PTR [rsp+0x8],rbx
   140012e71:	push   rdi
   140012e72:	sub    rsp,0x20
   140012e76:	lea    rbx,[rip+0xb35b]        # 0x14001e1d8
   140012e7d:	lea    rdi,[rip+0xb354]        # 0x14001e1d8
   140012e84:	jmp    0x140012e94
   140012e86:	mov    rax,QWORD PTR [rbx]
   140012e89:	test   rax,rax
   140012e8c:	je     0x140012e90
   140012e8e:	call   rax
   140012e90:	add    rbx,0x8
   140012e94:	cmp    rbx,rdi
   140012e97:	jb     0x140012e86
   140012e99:	mov    rbx,QWORD PTR [rsp+0x30]
   140012e9e:	add    rsp,0x20
   140012ea2:	pop    rdi
   140012ea3:	ret    
   140012ea4:	mov    QWORD PTR [rsp+0x8],rbx
   140012ea9:	push   rdi
   140012eaa:	sub    rsp,0x20
   140012eae:	lea    rbx,[rip+0xb333]        # 0x14001e1e8
   140012eb5:	lea    rdi,[rip+0xb32c]        # 0x14001e1e8
   140012ebc:	jmp    0x140012ecc
   140012ebe:	mov    rax,QWORD PTR [rbx]
   140012ec1:	test   rax,rax
   140012ec4:	je     0x140012ec8
   140012ec6:	call   rax
   140012ec8:	add    rbx,0x8
   140012ecc:	cmp    rbx,rdi
   140012ecf:	jb     0x140012ebe
   140012ed1:	mov    rbx,QWORD PTR [rsp+0x30]
   140012ed6:	add    rsp,0x20
   140012eda:	pop    rdi
   140012edb:	ret    
   140012edc:	jmp    QWORD PTR [rip+0x11ee]        # 0x1400140d0
   140012ee2:	int3   
   140012ee3:	int3   
   140012ee4:	int3   
   140012ee5:	int3   
   140012ee6:	int3   
   140012ee7:	int3   
   140012ee8:	int3   
   140012ee9:	int3   
   140012eea:	int3   
   140012eeb:	int3   
   140012eec:	int3   
   140012eed:	int3   
   140012eee:	int3   
   140012eef:	int3   
   140012ef0:	mov    rax,rcx
   140012ef3:	mov    ecx,0x5a4d
   140012ef8:	cmp    WORD PTR [rax],cx
   140012efb:	je     0x140012f00
   140012efd:	xor    eax,eax
   140012eff:	ret    
   140012f00:	movsxd rcx,DWORD PTR [rax+0x3c]
   140012f04:	add    rcx,rax
   140012f07:	xor    eax,eax
   140012f09:	cmp    DWORD PTR [rcx],0x4550
   140012f0f:	jne    0x140012f1d
   140012f11:	mov    edx,0x20b
   140012f16:	cmp    WORD PTR [rcx+0x18],dx
   140012f1a:	sete   al
   140012f1d:	repz ret 
   140012f1f:	int3   
   140012f20:	movsxd r8,DWORD PTR [rcx+0x3c]
   140012f24:	xor    r9d,r9d
   140012f27:	mov    r10,rdx
   140012f2a:	add    r8,rcx
   140012f2d:	movzx  eax,WORD PTR [r8+0x14]
   140012f32:	movzx  r11d,WORD PTR [r8+0x6]
   140012f37:	lea    rcx,[rax+r8*1+0x18]
   140012f3c:	test   r11d,r11d
   140012f3f:	je     0x140012f5f
   140012f41:	mov    edx,DWORD PTR [rcx+0xc]
   140012f44:	cmp    r10,rdx
   140012f47:	jb     0x140012f53
   140012f49:	mov    eax,DWORD PTR [rcx+0x8]
   140012f4c:	add    eax,edx
   140012f4e:	cmp    r10,rax
   140012f51:	jb     0x140012f62
   140012f53:	inc    r9d
   140012f56:	add    rcx,0x28
   140012f5a:	cmp    r9d,r11d
   140012f5d:	jb     0x140012f41
   140012f5f:	xor    eax,eax
   140012f61:	ret    
   140012f62:	mov    rax,rcx
   140012f65:	ret    
   140012f66:	int3   
   140012f67:	int3   
   140012f68:	int3   
   140012f69:	int3   
   140012f6a:	int3   
   140012f6b:	int3   
   140012f6c:	int3   
   140012f6d:	int3   
   140012f6e:	int3   
   140012f6f:	int3   
   140012f70:	sub    rsp,0x28
   140012f74:	mov    r8,rcx
   140012f77:	lea    r9,[rip+0xfffffffffffed082]        # 0x140000000
   140012f7e:	mov    rcx,r9
   140012f81:	call   0x140012ef0
   140012f86:	test   eax,eax
   140012f88:	je     0x140012fac
   140012f8a:	sub    r8,r9
   140012f8d:	mov    rdx,r8
   140012f90:	mov    rcx,r9
   140012f93:	call   0x140012f20
   140012f98:	test   rax,rax
   140012f9b:	je     0x140012fac
   140012f9d:	mov    eax,DWORD PTR [rax+0x24]
   140012fa0:	shr    eax,0x1f
   140012fa3:	not    eax
   140012fa5:	and    eax,0x1
   140012fa8:	jmp    0x140012fac
   140012faa:	xor    eax,eax
   140012fac:	add    rsp,0x28
   140012fb0:	ret    
   140012fb1:	int3   
   140012fb2:	jmp    QWORD PTR [rip+0x10e8]        # 0x1400140a0
   140012fb8:	jmp    QWORD PTR [rip+0x10da]        # 0x140014098
   140012fbe:	int3   
   140012fbf:	int3   
   140012fc0:	xor    eax,eax
   140012fc2:	ret    
   140012fc3:	int3   
   140012fc4:	mov    QWORD PTR [rsp+0x18],rbx
   140012fc9:	push   rdi
   140012fca:	sub    rsp,0x20
   140012fce:	mov    rax,QWORD PTR [rip+0x168c3]        # 0x140029898
   140012fd5:	and    QWORD PTR [rsp+0x30],0x0
   140012fdb:	movabs rdi,0x2b992ddfa232
   140012fe5:	cmp    rax,rdi
   140012fe8:	je     0x140012ff6
   140012fea:	not    rax
   140012fed:	mov    QWORD PTR [rip+0x168ac],rax        # 0x1400298a0
   140012ff4:	jmp    0x14001306c
   140012ff6:	lea    rcx,[rsp+0x30]
   140012ffb:	call   QWORD PTR [rip+0x1017]        # 0x140014018
   140013001:	mov    rbx,QWORD PTR [rsp+0x30]
   140013006:	call   QWORD PTR [rip+0x1014]        # 0x140014020
   14001300c:	mov    r11d,eax
   14001300f:	xor    rbx,r11
   140013012:	call   QWORD PTR [rip+0x1010]        # 0x140014028
   140013018:	mov    r11d,eax
   14001301b:	xor    rbx,r11
   14001301e:	call   QWORD PTR [rip+0x100c]        # 0x140014030
   140013024:	lea    rcx,[rsp+0x38]
   140013029:	mov    r11d,eax
   14001302c:	xor    rbx,r11
   14001302f:	call   QWORD PTR [rip+0x1003]        # 0x140014038
   140013035:	mov    r11,QWORD PTR [rsp+0x38]
   14001303a:	xor    r11,rbx
   14001303d:	movabs rax,0xffffffffffff
   140013047:	and    r11,rax
   14001304a:	movabs rax,0x2b992ddfa233
   140013054:	cmp    r11,rdi
   140013057:	cmove  r11,rax
   14001305b:	mov    QWORD PTR [rip+0x16836],r11        # 0x140029898
   140013062:	not    r11
   140013065:	mov    QWORD PTR [rip+0x16834],r11        # 0x1400298a0
   14001306c:	mov    rbx,QWORD PTR [rsp+0x40]
   140013071:	add    rsp,0x20
   140013075:	pop    rdi
   140013076:	ret    
   140013077:	int3   
   140013078:	jmp    QWORD PTR [rip+0xfea]        # 0x140014068
   14001307e:	jmp    QWORD PTR [rip+0xfdc]        # 0x140014060
   140013084:	int3   
   140013085:	int3   
   140013086:	int3   
   140013087:	int3   
   140013088:	int3   
   140013089:	int3   
   14001308a:	int3   
   14001308b:	int3   
   14001308c:	int3   
   14001308d:	int3   
   14001308e:	int3   
   14001308f:	int3   
   140013090:	mov    rax,rsp
   140013093:	mov    QWORD PTR [rax+0x8],rbx
   140013097:	mov    QWORD PTR [rax+0x10],rbp
   14001309b:	mov    QWORD PTR [rax+0x18],rsi
   14001309f:	mov    QWORD PTR [rax+0x20],rdi
   1400130a3:	push   r12
   1400130a5:	sub    rsp,0x40
   1400130a9:	xor    r12d,r12d
   1400130ac:	mov    rsi,rdx
   1400130af:	mov    r8,rdx
   1400130b2:	mov    QWORD PTR [rax-0x10],r12
   1400130b6:	mov    QWORD PTR [rax-0x18],r12
   1400130ba:	mov    DWORD PTR [rax-0x20],r12d
   1400130be:	or     r9d,0xffffffff
   1400130c2:	xor    edx,edx
   1400130c4:	mov    QWORD PTR [rax-0x28],r12
   1400130c8:	mov    ebp,ecx
   1400130ca:	call   QWORD PTR [rip+0xf38]        # 0x140014008
   1400130d0:	movsxd rbx,eax
   1400130d3:	mov    rcx,rbx
   1400130d6:	call   0x140013230
   1400130db:	mov    QWORD PTR [rsp+0x38],r12
   1400130e0:	mov    QWORD PTR [rsp+0x30],r12
   1400130e5:	or     r9d,0xffffffff
   1400130e9:	mov    r8,rsi
   1400130ec:	xor    edx,edx
   1400130ee:	mov    ecx,ebp
   1400130f0:	mov    DWORD PTR [rsp+0x28],ebx
   1400130f4:	mov    rdi,rax
   1400130f7:	mov    QWORD PTR [rsp+0x20],rax
   1400130fc:	call   QWORD PTR [rip+0xf06]        # 0x140014008
   140013102:	mov    rbx,QWORD PTR [rsp+0x50]
   140013107:	mov    rbp,QWORD PTR [rsp+0x58]
   14001310c:	mov    rsi,QWORD PTR [rsp+0x60]
   140013111:	mov    rax,rdi
   140013114:	mov    rdi,QWORD PTR [rsp+0x68]
   140013119:	add    rsp,0x40
   14001311d:	pop    r12
   14001311f:	ret    
   140013120:	push   r13
   140013122:	sub    rsp,0x40
   140013126:	call   QWORD PTR [rip+0xed4]        # 0x140014000
   14001312c:	lea    rdx,[rsp+0x20]
   140013131:	mov    rcx,rax
   140013134:	call   QWORD PTR [rip+0x257e]        # 0x1400156b8
   14001313a:	mov    r13,rax
   14001313d:	test   rax,rax
   140013140:	jne    0x14001314c
   140013142:	or     eax,0xffffffff
   140013145:	add    rsp,0x40
   140013149:	pop    r13
   14001314b:	ret    
   14001314c:	mov    eax,DWORD PTR [rsp+0x20]
   140013150:	mov    QWORD PTR [rsp+0x50],rbx
   140013155:	mov    QWORD PTR [rsp+0x60],rsi
   14001315a:	inc    eax
   14001315c:	mov    QWORD PTR [rsp+0x38],rdi
   140013161:	mov    QWORD PTR [rsp+0x30],r12
   140013166:	movsxd rcx,eax
   140013169:	mov    eax,0x8
   14001316e:	mul    rcx
   140013171:	mov    rcx,0xffffffffffffffff
   140013178:	cmovo  rax,rcx
   14001317c:	mov    rcx,rax
   14001317f:	call   0x140013230
   140013184:	mov    ecx,DWORD PTR [rsp+0x20]
   140013188:	xor    edi,edi
   14001318a:	mov    r12,rax
   14001318d:	mov    esi,edi
   14001318f:	test   ecx,ecx
   140013191:	jle    0x1400131c3
   140013193:	mov    QWORD PTR [rsp+0x58],rbp
   140013198:	mov    rbp,r13
   14001319b:	mov    rbx,rax
   14001319e:	sub    rbp,rax
   1400131a1:	mov    rdx,QWORD PTR [rbx+rbp*1]
   1400131a5:	xor    ecx,ecx
   1400131a7:	call   0x140013090
   1400131ac:	inc    esi
   1400131ae:	add    rbx,0x8
   1400131b2:	mov    QWORD PTR [rbx-0x8],rax
   1400131b6:	mov    ecx,DWORD PTR [rsp+0x20]
   1400131ba:	cmp    esi,ecx
   1400131bc:	jl     0x1400131a1
   1400131be:	mov    rbp,QWORD PTR [rsp+0x58]
   1400131c3:	movsxd rax,ecx
   1400131c6:	mov    rcx,r13
   1400131c9:	mov    QWORD PTR [r12+rax*8],rdi
   1400131cd:	call   QWORD PTR [rip+0xe3d]        # 0x140014010
   1400131d3:	mov    ecx,DWORD PTR [rsp+0x20]
   1400131d7:	mov    rdx,r12
   1400131da:	call   0x140011120
   1400131df:	cmp    DWORD PTR [rsp+0x20],edi
   1400131e3:	mov    esi,eax
   1400131e5:	jle    0x140013209
   1400131e7:	mov    rbx,r12
   1400131ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400131f0:	mov    rcx,QWORD PTR [rbx]
   1400131f3:	test   rcx,rcx
   1400131f6:	je     0x140013209
   1400131f8:	call   0x140013236
   1400131fd:	inc    edi
   1400131ff:	add    rbx,0x8
   140013203:	cmp    edi,DWORD PTR [rsp+0x20]
   140013207:	jl     0x1400131f0
   140013209:	mov    rcx,r12
   14001320c:	call   0x140013236
   140013211:	mov    r12,QWORD PTR [rsp+0x30]
   140013216:	mov    rdi,QWORD PTR [rsp+0x38]
   14001321b:	mov    rbx,QWORD PTR [rsp+0x50]
   140013220:	mov    eax,esi
   140013222:	mov    rsi,QWORD PTR [rsp+0x60]
   140013227:	add    rsp,0x40
   14001322b:	pop    r13
   14001322d:	ret    
   14001322e:	int3   
   14001322f:	int3   
   140013230:	jmp    0x140012892
   140013235:	int3   
   140013236:	jmp    QWORD PTR [rip+0xefc]        # 0x140014138
   14001323c:	int3   
   14001323d:	int3   
   14001323e:	int3   
   14001323f:	int3   
   140013240:	rex push rbp
   140013242:	sub    rsp,0x20
   140013246:	mov    rbp,rdx
   140013249:	mov    ecx,0x8
   14001324e:	call   0x140012df4
   140013253:	add    rsp,0x20
   140013257:	pop    rbp
   140013258:	ret    
   140013259:	rex push rbp
   14001325b:	sub    rsp,0x20
   14001325f:	mov    rbp,rdx
   140013262:	mov    rax,QWORD PTR [rcx]
   140013265:	mov    rdx,rcx
   140013268:	mov    ecx,DWORD PTR [rax]
   14001326a:	call   0x140012edc
   14001326f:	add    rsp,0x20
   140013273:	pop    rbp
   140013274:	ret    
   140013275:	rex push rbp
   140013277:	sub    rsp,0x20
   14001327b:	mov    rbp,rdx
   14001327e:	mov    QWORD PTR [rbp+0x38],rcx
   140013282:	mov    QWORD PTR [rbp+0x28],rcx
   140013286:	mov    rax,QWORD PTR [rbp+0x28]
   14001328a:	mov    rcx,QWORD PTR [rax]
   14001328d:	mov    QWORD PTR [rbp+0x30],rcx
   140013291:	mov    rax,QWORD PTR [rbp+0x30]
   140013295:	cmp    DWORD PTR [rax],0xe06d7363
   14001329b:	je     0x1400132a9
   14001329d:	mov    DWORD PTR [rbp+0x20],0x0
   1400132a4:	mov    eax,DWORD PTR [rbp+0x20]
   1400132a7:	jmp    0x1400132ae
   1400132a9:	call   0x140013078
   1400132ae:	add    rsp,0x20
   1400132b2:	pop    rbp
   1400132b3:	ret    
   1400132b4:	rex push rbp
   1400132b6:	sub    rsp,0x20
   1400132ba:	mov    rbp,rdx
   1400132bd:	cmp    DWORD PTR [rbp+0x20],0x0
   1400132c1:	jne    0x1400132d8
   1400132c3:	mov    r9,QWORD PTR [rbp+0x78]
   1400132c7:	mov    r8d,DWORD PTR [rbp+0x70]
   1400132cb:	mov    rdx,QWORD PTR [rbp+0x68]
   1400132cf:	mov    rcx,QWORD PTR [rbp+0x60]
   1400132d3:	call   0x140012d44
   1400132d8:	add    rsp,0x20
   1400132dc:	pop    rbp
   1400132dd:	ret    
   1400132de:	int3   
   1400132df:	int3   
   1400132e0:	rex push rbp
   1400132e2:	sub    rsp,0x20
   1400132e6:	mov    rbp,rdx
   1400132e9:	mov    rax,QWORD PTR [rcx]
   1400132ec:	xor    ecx,ecx
   1400132ee:	cmp    DWORD PTR [rax],0xc0000005
   1400132f4:	sete   cl
   1400132f7:	mov    eax,ecx
   1400132f9:	mov    eax,ecx
   1400132fb:	add    rsp,0x20
   1400132ff:	pop    rbp
   140013300:	ret    
   140013301:	int3   
   140013302:	int3   
   140013303:	int3   
   140013304:	int3   
   140013305:	int3   
   140013306:	int3   
   140013307:	int3   
   140013308:	int3   
   140013309:	int3   
   14001330a:	int3   
   14001330b:	int3   
   14001330c:	int3   
   14001330d:	int3   
   14001330e:	int3   
   14001330f:	int3   
   140013310:	sub    rsp,0x28
   140013314:	lea    r9,[rip+0x6175]        # 0x140019490
   14001331b:	lea    r8,[rip+0x8ade]        # 0x14001be00
   140013322:	lea    rdx,[rip+0x8c77]        # 0x14001bfa0
   140013329:	mov    ecx,0x1
   14001332e:	call   0x140012886
   140013333:	lea    rcx,[rip+0xb6]        # 0x1400133f0
   14001333a:	add    rsp,0x28
   14001333e:	jmp    0x1400129c0
   140013343:	int3   
   140013344:	int3   
   140013345:	int3   
   140013346:	int3   
   140013347:	int3   
   140013348:	int3   
   140013349:	int3   
   14001334a:	int3   
   14001334b:	int3   
   14001334c:	int3   
   14001334d:	int3   
   14001334e:	int3   
   14001334f:	int3   
   140013350:	mov    rax,QWORD PTR [rip+0x1d19]        # 0x140015070
   140013357:	mov    QWORD PTR [rip+0x162e2],rax        # 0x140029640
   14001335e:	ret    
   14001335f:	int3   
   140013360:	mov    rax,QWORD PTR [rip+0x1d21]        # 0x140015088
   140013367:	mov    QWORD PTR [rip+0x1630a],rax        # 0x140029678
   14001336e:	ret    
   14001336f:	int3   
   140013370:	mov    rax,QWORD PTR [rip+0x1d11]        # 0x140015088
   140013377:	mov    QWORD PTR [rip+0x16332],rax        # 0x1400296b0
   14001337e:	ret    
   14001337f:	int3   
   140013380:	mov    rax,QWORD PTR [rip+0x1d01]        # 0x140015088
   140013387:	mov    QWORD PTR [rip+0x1635a],rax        # 0x1400296e8
   14001338e:	ret    
   14001338f:	int3   
   140013390:	mov    rax,QWORD PTR [rip+0x1cf1]        # 0x140015088
   140013397:	mov    QWORD PTR [rip+0x16382],rax        # 0x140029720
   14001339e:	ret    
   14001339f:	int3   
   1400133a0:	mov    rax,QWORD PTR [rip+0x1ce1]        # 0x140015088
   1400133a7:	mov    QWORD PTR [rip+0x163aa],rax        # 0x140029758
   1400133ae:	ret    
   1400133af:	int3   
   1400133b0:	mov    rax,QWORD PTR [rip+0x1cd1]        # 0x140015088
   1400133b7:	mov    QWORD PTR [rip+0x163d2],rax        # 0x140029790
   1400133be:	ret    
   1400133bf:	int3   
   1400133c0:	mov    rax,QWORD PTR [rip+0x1cc1]        # 0x140015088
   1400133c7:	mov    QWORD PTR [rip+0x163fa],rax        # 0x1400297c8
   1400133ce:	ret    
   1400133cf:	int3   
   1400133d0:	mov    rax,QWORD PTR [rip+0x1cb1]        # 0x140015088
   1400133d7:	mov    QWORD PTR [rip+0x16422],rax        # 0x140029800
   1400133de:	ret    
   1400133df:	int3   
   1400133e0:	mov    rax,QWORD PTR [rip+0x1cb9]        # 0x1400150a0
   1400133e7:	mov    QWORD PTR [rip+0x1644a],rax        # 0x140029838
   1400133ee:	ret    
   1400133ef:	int3   
   1400133f0:	lea    r9,[rip+0x6099]        # 0x140019490
   1400133f7:	lea    r8,[rip+0x8a02]        # 0x14001be00
   1400133fe:	lea    rdx,[rip+0x8b9b]        # 0x14001bfa0
   140013405:	mov    ecx,0x1
   14001340a:	jmp    0x14001288c

Disassembly of section .rdata:

0000000140014000 <.rdata>:
   140014000:	sub    BYTE PTR [rdx+rax*1+0x0],cl
   140014007:	add    BYTE PTR [rsi],al
   140014009:	mov    WORD PTR [rdx],es
   14001400b:	add    BYTE PTR [rax],al
   14001400d:	add    BYTE PTR [rax],al
   14001400f:	add    BYTE PTR [rsp+rcx*4],bl
   140014012:	add    al,BYTE PTR [rax]
   140014014:	add    BYTE PTR [rax],al
   140014016:	add    BYTE PTR [rax],al
   140014018:	stos   BYTE PTR es:[rdi],al
   140014019:	mov    eax,DWORD PTR [rdx]
   14001401b:	add    BYTE PTR [rax],al
   14001401d:	add    BYTE PTR [rax],al
   14001401f:	add    BYTE PTR [rbx+rcx*4+0x2],dl
   140014026:	add    BYTE PTR [rax],al
   140014028:	jle    0x140013fb5
   14001402a:	add    al,BYTE PTR [rax]
   14001402c:	add    BYTE PTR [rax],al
   14001402e:	add    BYTE PTR [rax],al
   140014030:	outs   dx,BYTE PTR ds:[rsi]
   140014031:	mov    eax,DWORD PTR [rdx]
   140014033:	add    BYTE PTR [rax],al
   140014035:	add    BYTE PTR [rax],al
   140014037:	add    BYTE PTR [rbx+rcx*4+0x2],dl
   14001403b:	add    BYTE PTR [rax],al
   14001403d:	add    BYTE PTR [rax],al
   14001403f:	add    BYTE PTR [rsi],dh
   140014041:	mov    eax,DWORD PTR [rdx]
   140014043:	add    BYTE PTR [rax],al
   140014045:	add    BYTE PTR [rax],al
   140014047:	add    BYTE PTR [rbx+rcx*4],ah
   14001404a:	add    al,BYTE PTR [rax]
   14001404c:	add    BYTE PTR [rax],al
   14001404e:	add    BYTE PTR [rax],al
   140014050:	sbb    al,0x8b
   140014052:	add    al,BYTE PTR [rax]
	...
   140014060:	out    0x8a,al
   140014062:	add    al,BYTE PTR [rax]
   140014064:	add    BYTE PTR [rax],al
   140014066:	add    BYTE PTR [rax],al
   140014068:	ror    BYTE PTR [rdx+0x2],cl
   14001406e:	add    BYTE PTR [rax],al
   140014070:	ror    BYTE PTR [rdx+0x2],0x0
   140014077:	add    BYTE PTR [rsi+0x28a],dh
   14001407d:	add    BYTE PTR [rax],al
   14001407f:	add    BYTE PTR [rdx+0x28a],ch
   140014085:	add    BYTE PTR [rax],al
   140014087:	add    BYTE PTR [rsi+0x28a],dl
   14001408d:	add    BYTE PTR [rax],al
   14001408f:	add    BYTE PTR [rax+0x28a],al
   140014095:	add    BYTE PTR [rax],al
   140014097:	add    BYTE PTR [rdx-0x76],dh
   14001409a:	add    al,BYTE PTR [rax]
   14001409c:	add    BYTE PTR [rax],al
   14001409e:	add    BYTE PTR [rax],al
   1400140a0:	data16 mov al,BYTE PTR [rdx]
   1400140a3:	add    BYTE PTR [rax],al
   1400140a5:	add    BYTE PTR [rax],al
   1400140a7:	add    BYTE PTR [rdx+rcx*4+0x2],bl
   1400140ab:	add    BYTE PTR [rax],al
   1400140ad:	add    BYTE PTR [rax],al
   1400140af:	add    BYTE PTR [rdx+rcx*4+0x2],dl
   1400140b3:	add    BYTE PTR [rax],al
   1400140b5:	add    BYTE PTR [rax],al
   1400140b7:	add    BYTE PTR [rdx-0x76],cl
   1400140ba:	add    al,BYTE PTR [rax]
   1400140bc:	add    BYTE PTR [rax],al
   1400140be:	add    BYTE PTR [rax],al
   1400140c0:	cmp    al,0x8a
   1400140c2:	add    al,BYTE PTR [rax]
   1400140c4:	add    BYTE PTR [rax],al
   1400140c6:	add    BYTE PTR [rax],al
   1400140c8:	xor    al,0x8a
   1400140ca:	add    al,BYTE PTR [rax]
   1400140cc:	add    BYTE PTR [rax],al
   1400140ce:	add    BYTE PTR [rax],al
   1400140d0:	mov    al,BYTE PTR es:[rdx]
   1400140d3:	add    BYTE PTR [rax],al
   1400140d5:	add    BYTE PTR [rax],al
   1400140d7:	add    BYTE PTR [rsi],dl
   1400140d9:	mov    al,BYTE PTR [rdx]
   1400140db:	add    BYTE PTR [rax],al
   1400140dd:	add    BYTE PTR [rax],al
   1400140df:	add    BYTE PTR [rax],cl
   1400140e1:	mov    al,BYTE PTR [rdx]
   1400140e3:	add    BYTE PTR [rax],al
   1400140e5:	add    BYTE PTR [rax],al
   1400140e7:	add    dh,dh
   1400140e9:	mov    DWORD PTR [rdx],eax
   1400140eb:	add    BYTE PTR [rax],al
   1400140ed:	add    BYTE PTR [rax],al
   1400140ef:	add    ah,ch
   1400140f1:	mov    DWORD PTR [rdx],eax
   1400140f3:	add    BYTE PTR [rax],al
   1400140f5:	add    BYTE PTR [rax],al
   1400140f7:	add    ah,ah
   1400140f9:	mov    DWORD PTR [rdx],eax
   1400140fb:	add    BYTE PTR [rax],al
   1400140fd:	add    BYTE PTR [rax],al
   1400140ff:	add    dl,dl
   140014101:	mov    DWORD PTR [rdx],eax
   140014103:	add    BYTE PTR [rax],al
   140014105:	add    BYTE PTR [rax],al
   140014107:	add    ah,al
   140014109:	mov    DWORD PTR [rdx],eax
   14001410b:	add    BYTE PTR [rax],al
   14001410d:	add    BYTE PTR [rax],al
   14001410f:	add    BYTE PTR [rdx+0x289],bh
   140014115:	add    BYTE PTR [rax],al
   140014117:	add    BYTE PTR [rdx+0x289],ah
   14001411d:	add    BYTE PTR [rax],al
   14001411f:	add    BYTE PTR [rcx+rcx*4+0x2],cl
   140014126:	add    BYTE PTR [rax],al
   140014128:	jl     0x1400140b3
   14001412a:	add    al,BYTE PTR [rax]
   14001412c:	add    BYTE PTR [rax],al
   14001412e:	add    BYTE PTR [rax],al
   140014130:	push   0xffffffffffffff89
   140014132:	add    al,BYTE PTR [rax]
   140014134:	add    BYTE PTR [rax],al
   140014136:	add    BYTE PTR [rax],al
   140014138:	hlt    
   140014139:	mov    eax,DWORD PTR [rdx]
	...
   140014147:	add    dl,bh
   140014149:	mov    BYTE PTR [rdx],al
   14001414b:	add    BYTE PTR [rax],al
   14001414d:	add    BYTE PTR [rax],al
   14001414f:	add    dl,dl
   140014151:	mov    BYTE PTR [rdx],al
   140014153:	add    BYTE PTR [rax],al
   140014155:	add    BYTE PTR [rax],al
   140014157:	add    BYTE PTR [rdx+0x288],ch
   14001415d:	add    BYTE PTR [rax],al
   14001415f:	add    BYTE PTR [rax+rcx*4+0x2],cl
   140014166:	add    BYTE PTR [rax],al
   140014168:	push   0x288
   14001416d:	add    BYTE PTR [rax],al
   14001416f:	add    BYTE PTR [rdx-0x78],dl
   140014172:	add    al,BYTE PTR [rax]
   140014174:	add    BYTE PTR [rax],al
   140014176:	add    BYTE PTR [rax],al
   140014178:	adc    cl,BYTE PTR [rax+0x2]
   14001417e:	add    BYTE PTR [rax],al
   140014180:	in     al,0x87
   140014182:	add    al,BYTE PTR [rax]
   140014184:	add    BYTE PTR [rax],al
   140014186:	add    BYTE PTR [rax],al
   140014188:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014189:	xchg   DWORD PTR [rdx],eax
   14001418b:	add    BYTE PTR [rax],al
   14001418d:	add    BYTE PTR [rax],al
   14001418f:	add    BYTE PTR [rdx-0x79],bh
   140014192:	add    al,BYTE PTR [rax]
   140014194:	add    BYTE PTR [rax],al
   140014196:	add    BYTE PTR [rax],al
   140014198:	pop    rsp
   140014199:	xchg   DWORD PTR [rdx],eax
   14001419b:	add    BYTE PTR [rax],al
   14001419d:	add    BYTE PTR [rax],al
   14001419f:	add    BYTE PTR [rdx],ch
   1400141a1:	xchg   DWORD PTR [rdx],eax
   1400141a3:	add    BYTE PTR [rax],al
   1400141a5:	add    BYTE PTR [rax],al
   1400141a7:	add    BYTE PTR [rax],dl
   1400141a9:	xchg   DWORD PTR [rdx],eax
   1400141ab:	add    BYTE PTR [rax],al
   1400141ad:	add    BYTE PTR [rax],al
   1400141af:	add    dh,ah
   1400141b1:	xchg   BYTE PTR [rdx],al
   1400141b3:	add    BYTE PTR [rax],al
   1400141b5:	add    BYTE PTR [rax],al
   1400141b7:	add    BYTE PTR [rdx+0x286],bh
   1400141bd:	add    BYTE PTR [rax],al
   1400141bf:	add    BYTE PTR [rax+0x286],ah
   1400141c5:	add    BYTE PTR [rax],al
   1400141c7:	add    BYTE PTR [rax-0x7a],dh
   1400141ca:	add    al,BYTE PTR [rax]
   1400141cc:	add    BYTE PTR [rax],al
   1400141ce:	add    BYTE PTR [rax],al
   1400141d0:	cmp    al,BYTE PTR [rsi+0x2]
   1400141d6:	add    BYTE PTR [rax],al
   1400141d8:	or     al,BYTE PTR [rsi+0x2]
   1400141de:	add    BYTE PTR [rax],al
   1400141e0:	fadd   QWORD PTR [rbp+0x2]
   1400141e6:	add    BYTE PTR [rax],al
   1400141e8:	mov    esi,0x285
   1400141ed:	add    BYTE PTR [rax],al
   1400141ef:	add    BYTE PTR [rsi+0x285],bl
   1400141f5:	add    BYTE PTR [rax],al
   1400141f7:	add    BYTE PTR [rbp+rax*4+0x2],ch
   1400141fb:	add    BYTE PTR [rax],al
   1400141fd:	add    BYTE PTR [rax],al
   1400141ff:	add    BYTE PTR [rax],dh
   140014201:	test   DWORD PTR [rdx],eax
   140014203:	add    BYTE PTR [rax],al
   140014205:	add    BYTE PTR [rax],al
   140014207:	add    ah,dh
   140014209:	test   BYTE PTR [rdx],al
   14001420b:	add    BYTE PTR [rax],al
   14001420d:	add    BYTE PTR [rax],al
   14001420f:	add    BYTE PTR [rsp+rax*4+0x2],dh
   140014216:	add    BYTE PTR [rax],al
   140014218:	js     0x14001419e
   14001421a:	add    al,BYTE PTR [rax]
   14001421c:	add    BYTE PTR [rax],al
   14001421e:	add    BYTE PTR [rax],al
   140014220:	rex.WX test BYTE PTR [rdx],al
   140014223:	add    BYTE PTR [rax],al
   140014225:	add    BYTE PTR [rax],al
   140014227:	add    BYTE PTR [rax],dl
   140014229:	test   BYTE PTR [rdx],al
   14001422b:	add    BYTE PTR [rax],al
   14001422d:	add    BYTE PTR [rax],al
   14001422f:	add    ah,ch
   140014231:	add    DWORD PTR [rdx],0x0
   140014234:	add    BYTE PTR [rax],al
   140014236:	add    BYTE PTR [rax],al
   140014238:	mov    dh,0x83
   14001423a:	add    al,BYTE PTR [rax]
   14001423c:	add    BYTE PTR [rax],al
   14001423e:	add    BYTE PTR [rax],al
   140014240:	jo     0x1400141c5
   140014242:	add    al,BYTE PTR [rax]
   140014244:	add    BYTE PTR [rax],al
   140014246:	add    BYTE PTR [rax],al
   140014248:	push   rdx
   140014249:	add    DWORD PTR [rdx],0x0
   14001424c:	add    BYTE PTR [rax],al
   14001424e:	add    BYTE PTR [rax],al
   140014250:	xor    al,0x83
   140014252:	add    al,BYTE PTR [rax]
   140014254:	add    BYTE PTR [rax],al
   140014256:	add    BYTE PTR [rax],al
   140014258:	adc    BYTE PTR [rbx+0x2],al
   14001425e:	add    BYTE PTR [rax],al
   140014260:	fiadd  DWORD PTR [rdx+0x2]
   140014266:	add    BYTE PTR [rax],al
   140014268:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014269:	(bad)  
   14001426a:	add    al,BYTE PTR [rax]
   14001426c:	add    BYTE PTR [rax],al
   14001426e:	add    BYTE PTR [rax],al
   140014270:	je     0x1400141f4
   140014272:	add    al,BYTE PTR [rax]
   140014274:	add    BYTE PTR [rax],al
   140014276:	add    BYTE PTR [rax],al
   140014278:	rex.W (bad) 
   14001427a:	add    al,BYTE PTR [rax]
   14001427c:	add    BYTE PTR [rax],al
   14001427e:	add    BYTE PTR [rax],al
   140014280:	sub    BYTE PTR [rdx+0x2],al
   140014286:	add    BYTE PTR [rax],al
   140014288:	add    BYTE PTR [rdx+0x2],al
   14001428e:	add    BYTE PTR [rax],al
   140014290:	rol    BYTE PTR [rcx+0x2],0x0
   140014297:	add    BYTE PTR [rdx-0x7f],bh
   14001429a:	add    al,BYTE PTR [rax]
   14001429c:	add    BYTE PTR [rax],al
   14001429e:	add    BYTE PTR [rax],al
   1400142a0:	push   rsi
   1400142a1:	add    DWORD PTR [rdx],0x0
   1400142a7:	add    BYTE PTR [rax],al
   1400142a9:	add    DWORD PTR [rdx],0x0
   1400142af:	add    dl,cl
   1400142b1:	add    BYTE PTR [rdx],0x0
   1400142b4:	add    BYTE PTR [rax],al
   1400142b6:	add    BYTE PTR [rax],al
   1400142b8:	sahf   
   1400142b9:	add    BYTE PTR [rdx],0x0
   1400142bc:	add    BYTE PTR [rax],al
   1400142be:	add    BYTE PTR [rax],al
   1400142c0:	(bad)  
   1400142c1:	add    BYTE PTR [rdx],0x0
   1400142c4:	add    BYTE PTR [rax],al
   1400142c6:	add    BYTE PTR [rax],al
   1400142c8:	rex.X add BYTE PTR [rdx],0x0
   1400142cc:	add    BYTE PTR [rax],al
   1400142ce:	add    BYTE PTR [rax],al
   1400142d0:	sbb    al,BYTE PTR [rax+0x2]
   1400142d6:	add    BYTE PTR [rax],al
   1400142d8:	fidivr DWORD PTR [rdi+0x2]
   1400142db:	add    BYTE PTR [rax],al
   1400142dd:	add    BYTE PTR [rax],al
   1400142df:	add    BYTE PTR [rsi+0x27f],cl
   1400142e5:	add    BYTE PTR [rax],al
   1400142e7:	add    BYTE PTR [rax+0x7f],ah
   1400142ea:	add    al,BYTE PTR [rax]
   1400142ec:	add    BYTE PTR [rax],al
   1400142ee:	add    BYTE PTR [rax],al
   1400142f0:	rex jg 0x1400142f5
   1400142f3:	add    BYTE PTR [rax],al
   1400142f5:	add    BYTE PTR [rax],al
   1400142f7:	add    BYTE PTR [rdx],ch
   1400142f9:	jg     0x1400142fd
   1400142fb:	add    BYTE PTR [rax],al
   1400142fd:	add    BYTE PTR [rax],al
   1400142ff:	add    ah,dl
   140014301:	jle    0x140014305
   140014303:	add    BYTE PTR [rax],al
   140014305:	add    BYTE PTR [rax],al
   140014307:	add    BYTE PTR [rdx+0x27e],bh
   14001430d:	add    BYTE PTR [rax],al
   14001430f:	add    BYTE PTR [rax+0x7e],ah
   140014312:	add    al,BYTE PTR [rax]
   140014314:	add    BYTE PTR [rax],al
   140014316:	add    BYTE PTR [rax],al
   140014318:	rex jle 0x14001431d
   14001431b:	add    BYTE PTR [rax],al
   14001431d:	add    BYTE PTR [rax],al
   14001431f:	add    BYTE PTR [rsi],ah
   140014321:	jle    0x140014325
   140014323:	add    BYTE PTR [rax],al
   140014325:	add    BYTE PTR [rax],al
   140014327:	add    BYTE PTR [rax],cl
   140014329:	jle    0x14001432d
   14001432b:	add    BYTE PTR [rax],al
   14001432d:	add    BYTE PTR [rax],al
   14001432f:	add    al,al
   140014331:	jge    0x140014335
   140014333:	add    BYTE PTR [rax],al
   140014335:	add    BYTE PTR [rax],al
   140014337:	add    BYTE PTR [rax+0x27d],bl
   14001433d:	add    BYTE PTR [rax],al
   14001433f:	add    BYTE PTR [rdx+0x7d],bh
   140014342:	add    al,BYTE PTR [rax]
   140014344:	add    BYTE PTR [rax],al
   140014346:	add    BYTE PTR [rax],al
   140014348:	ds jge 0x14001434d
   14001434b:	add    BYTE PTR [rax],al
   14001434d:	add    BYTE PTR [rax],al
   14001434f:	add    BYTE PTR [rdi*2+0x2],bl
   140014356:	add    BYTE PTR [rax],al
   140014358:	cld    
   140014359:	jl     0x14001435d
   14001435b:	add    BYTE PTR [rax],al
   14001435d:	add    BYTE PTR [rax],al
   14001435f:	add    dl,bl
   140014361:	jl     0x140014365
   140014363:	add    BYTE PTR [rax],al
   140014365:	add    BYTE PTR [rax],al
   140014367:	add    al,al
   140014369:	jl     0x14001436d
   14001436b:	add    BYTE PTR [rax],al
   14001436d:	add    BYTE PTR [rax],al
   14001436f:	add    BYTE PTR [rdx+0x27c],al
   140014375:	add    BYTE PTR [rax],al
   140014377:	add    BYTE PTR [rsi+0x7c],dl
   14001437a:	add    al,BYTE PTR [rax]
   14001437c:	add    BYTE PTR [rax],al
   14001437e:	add    BYTE PTR [rax],al
   140014380:	cmp    al,0x7c
   140014382:	add    al,BYTE PTR [rax]
   140014384:	add    BYTE PTR [rax],al
   140014386:	add    BYTE PTR [rax],al
   140014388:	(bad)  
   140014389:	jl     0x14001438d
   14001438b:	add    BYTE PTR [rax],al
   14001438d:	add    BYTE PTR [rax],al
   14001438f:	add    ah,ah
   140014391:	jnp    0x140014395
   140014393:	add    BYTE PTR [rax],al
   140014395:	add    BYTE PTR [rax],al
   140014397:	add    BYTE PTR [rbx+rdi*2+0x2],bh
   14001439e:	add    BYTE PTR [rax],al
   1400143a0:	test   al,0x7b
   1400143a2:	add    al,BYTE PTR [rax]
   1400143a4:	add    BYTE PTR [rax],al
   1400143a6:	add    BYTE PTR [rax],al
   1400143a8:	je     0x140014425
   1400143aa:	add    al,BYTE PTR [rax]
   1400143ac:	add    BYTE PTR [rax],al
   1400143ae:	add    BYTE PTR [rax],al
   1400143b0:	rex.WR jnp 0x1400143b5
   1400143b3:	add    BYTE PTR [rax],al
   1400143b5:	add    BYTE PTR [rax],al
   1400143b7:	add    BYTE PTR [rax],ch
   1400143b9:	jnp    0x1400143bd
   1400143bb:	add    BYTE PTR [rax],al
   1400143bd:	add    BYTE PTR [rax],al
   1400143bf:	add    al,bh
   1400143c1:	jp     0x1400143c5
   1400143c3:	add    BYTE PTR [rax],al
   1400143c5:	add    BYTE PTR [rax],al
   1400143c7:	add    dl,al
   1400143c9:	jp     0x1400143cd
   1400143cb:	add    BYTE PTR [rax],al
   1400143cd:	add    BYTE PTR [rax],al
   1400143cf:	add    BYTE PTR [rdx+0x27a],cl
   1400143d5:	add    BYTE PTR [rax],al
   1400143d7:	add    BYTE PTR [rax+0x7a],ah
   1400143da:	add    al,BYTE PTR [rax]
   1400143dc:	add    BYTE PTR [rax],al
   1400143de:	add    BYTE PTR [rax],al
   1400143e0:	xor    al,0x7a
   1400143e2:	add    al,BYTE PTR [rax]
   1400143e4:	add    BYTE PTR [rax],al
   1400143e6:	add    BYTE PTR [rax],al
   1400143e8:	(bad)  
   1400143e9:	jp     0x1400143ed
   1400143eb:	add    BYTE PTR [rax],al
   1400143ed:	add    BYTE PTR [rax],al
   1400143ef:	add    BYTE PTR [rax],al
   1400143f1:	jp     0x1400143f5
   1400143f3:	add    BYTE PTR [rax],al
   1400143f5:	add    BYTE PTR [rax],al
   1400143f7:	add    dh,bl
   1400143f9:	jns    0x1400143fd
   1400143fb:	add    BYTE PTR [rax],al
   1400143fd:	add    BYTE PTR [rax],al
   1400143ff:	add    BYTE PTR [rsi+0x279],bh
   140014405:	add    BYTE PTR [rax],al
   140014407:	add    BYTE PTR [rcx+rdi*2+0x2],dl
   14001440e:	add    BYTE PTR [rax],al
   140014410:	(bad)  
   140014411:	jns    0x140014415
   140014413:	add    BYTE PTR [rax],al
   140014415:	add    BYTE PTR [rax],al
   140014417:	add    BYTE PTR [rsi],bh
   140014419:	jns    0x14001441d
   14001441b:	add    BYTE PTR [rax],al
   14001441d:	add    BYTE PTR [rax],al
   14001441f:	add    BYTE PTR [rsi],dl
   140014421:	jns    0x140014425
   140014423:	add    BYTE PTR [rax],al
   140014425:	add    BYTE PTR [rax],al
   140014427:	add    BYTE PTR [rsi+0x278],ch
   14001442d:	add    BYTE PTR [rax],al
   14001442f:	add    BYTE PTR [rdx+0x278],bl
   140014435:	add    BYTE PTR [rax],al
   140014437:	add    BYTE PTR [rax+rdi*2+0x2],ch
   14001443b:	add    BYTE PTR [rax],al
   14001443d:	add    BYTE PTR [rax],al
   14001443f:	add    BYTE PTR [rsi],dh
   140014441:	js     0x140014445
   140014443:	add    BYTE PTR [rax],al
   140014445:	add    BYTE PTR [rax],al
   140014447:	add    BYTE PTR [rdx],al
   140014449:	js     0x14001444d
   14001444b:	add    BYTE PTR [rax],al
   14001444d:	add    BYTE PTR [rax],al
   14001444f:	add    dh,dl
   140014451:	ja     0x140014455
   140014453:	add    BYTE PTR [rax],al
   140014455:	add    BYTE PTR [rax],al
   140014457:	add    BYTE PTR [rsi+0x277],ah
   14001445d:	add    BYTE PTR [rax],al
   14001445f:	add    BYTE PTR [rsi+0x77],dh
   140014462:	add    al,BYTE PTR [rax]
   140014464:	add    BYTE PTR [rax],al
   140014466:	add    BYTE PTR [rax],al
   140014468:	and    BYTE PTR [rdi+0x2],dh
   14001446b:	add    BYTE PTR [rax],al
   14001446d:	add    BYTE PTR [rax],al
   14001446f:	add    dl,bh
   140014471:	jbe    0x140014475
   140014473:	add    BYTE PTR [rax],al
   140014475:	add    BYTE PTR [rax],al
   140014477:	add    dh,dl
   140014479:	jbe    0x14001447d
   14001447b:	add    BYTE PTR [rax],al
   14001447d:	add    BYTE PTR [rax],al
   14001447f:	add    BYTE PTR [rax+0x276],ch
   140014485:	add    BYTE PTR [rax],al
   140014487:	add    BYTE PTR [rax+0x276],cl
   14001448d:	add    BYTE PTR [rax],al
   14001448f:	add    BYTE PTR [rax+0x76],ch
   140014492:	add    al,BYTE PTR [rax]
   140014494:	add    BYTE PTR [rax],al
   140014496:	add    BYTE PTR [rax],al
   140014498:	rex.W jbe 0x14001449d
   14001449b:	add    BYTE PTR [rax],al
   14001449d:	add    BYTE PTR [rax],al
   14001449f:	add    BYTE PTR [rsi+rsi*2],ah
   1400144a2:	add    al,BYTE PTR [rax]
   1400144a4:	add    BYTE PTR [rax],al
   1400144a6:	add    BYTE PTR [rax],al
   1400144a8:	bnd jne 0x1400144ad
   1400144ab:	add    BYTE PTR [rax],al
   1400144ad:	add    BYTE PTR [rax],al
   1400144af:	add    BYTE PTR [rsi+0x275],bh
   1400144b5:	add    BYTE PTR [rax],al
   1400144b7:	add    BYTE PTR [rsi+0x275],dl
   1400144bd:	add    BYTE PTR [rax],al
   1400144bf:	add    BYTE PTR [rax+0x75],ah
   1400144c2:	add    al,BYTE PTR [rax]
   1400144c4:	add    BYTE PTR [rax],al
   1400144c6:	add    BYTE PTR [rax],al
   1400144c8:	cmp    dh,BYTE PTR [rbp+0x2]
   1400144cb:	add    BYTE PTR [rax],al
   1400144cd:	add    BYTE PTR [rax],al
   1400144cf:	add    BYTE PTR [rsi*2+0x2],bl
   1400144d6:	add    BYTE PTR [rax],al
   1400144d8:	hlt    
   1400144d9:	je     0x1400144dd
   1400144db:	add    BYTE PTR [rax],al
   1400144dd:	add    BYTE PTR [rax],al
   1400144df:	add    al,bl
   1400144e1:	je     0x1400144e5
   1400144e3:	add    BYTE PTR [rax],al
   1400144e5:	add    BYTE PTR [rax],al
   1400144e7:	add    BYTE PTR [rax+0x274],bh
   1400144ed:	add    BYTE PTR [rax],al
   1400144ef:	add    BYTE PTR [rsp+rsi*2+0x2],dl
   1400144f6:	add    BYTE PTR [rax],al
   1400144f8:	outs   dx,BYTE PTR ds:[rsi]
   1400144f9:	je     0x1400144fd
   1400144fb:	add    BYTE PTR [rax],al
   1400144fd:	add    BYTE PTR [rax],al
   1400144ff:	add    BYTE PTR [rsp+rsi*2+0x2],al
   140014503:	add    BYTE PTR [rax],al
   140014505:	add    BYTE PTR [rax],al
   140014507:	add    BYTE PTR [rdx],bl
   140014509:	je     0x14001450d
   14001450b:	add    BYTE PTR [rax],al
   14001450d:	add    BYTE PTR [rax],al
   14001450f:	add    al,dh
   140014511:	jae    0x140014515
   140014513:	add    BYTE PTR [rax],al
   140014515:	add    BYTE PTR [rax],al
   140014517:	add    dl,cl
   140014519:	jae    0x14001451d
   14001451b:	add    BYTE PTR [rax],al
   14001451d:	add    BYTE PTR [rax],al
   14001451f:	add    BYTE PTR [rbx+rsi*2+0x2],bl
   140014526:	add    BYTE PTR [rax],al
   140014528:	jb     0x14001459d
   14001452a:	add    al,BYTE PTR [rax]
   14001452c:	add    BYTE PTR [rax],al
   14001452e:	add    BYTE PTR [rax],al
   140014530:	pop    rdx
   140014531:	jae    0x140014535
   140014533:	add    BYTE PTR [rax],al
   140014535:	add    BYTE PTR [rax],al
   140014537:	add    BYTE PTR [rsi],dh
   140014539:	jae    0x14001453d
   14001453b:	add    BYTE PTR [rax],al
   14001453d:	add    BYTE PTR [rax],al
   14001453f:	add    BYTE PTR [rax],dl
   140014541:	jae    0x140014545
   140014543:	add    BYTE PTR [rax],al
   140014545:	add    BYTE PTR [rax],al
   140014547:	add    dl,bh
   140014549:	jb     0x14001454d
   14001454b:	add    BYTE PTR [rax],al
   14001454d:	add    BYTE PTR [rax],al
   14001454f:	add    dl,ah
   140014551:	jb     0x140014555
   140014553:	add    BYTE PTR [rax],al
   140014555:	add    BYTE PTR [rax],al
   140014557:	add    BYTE PTR [rsi+0x272],dh
   14001455d:	add    BYTE PTR [rax],al
   14001455f:	add    BYTE PTR [rdx+0x272],dl
   140014565:	add    BYTE PTR [rax],al
   140014567:	add    BYTE PTR [rsi+0x72],dh
   14001456a:	add    al,BYTE PTR [rax]
   14001456c:	add    BYTE PTR [rax],al
   14001456e:	add    BYTE PTR [rax],al
   140014570:	push   rax
   140014571:	jb     0x140014575
   140014573:	add    BYTE PTR [rax],al
   140014575:	add    BYTE PTR [rax],al
   140014577:	add    BYTE PTR [rcx+rcx*4],ah
   14001457a:	add    al,BYTE PTR [rax]
	...
   140014588:	(bad)  
   140014589:	jno    0x14001458d
   14001458b:	add    BYTE PTR [rax],al
   14001458d:	add    BYTE PTR [rax],al
   14001458f:	add    ah,cl
   140014591:	jno    0x140014595
   140014593:	add    BYTE PTR [rax],al
   140014595:	add    BYTE PTR [rax],al
   140014597:	add    BYTE PTR [rcx+rsi*2+0x2],al
   14001459e:	add    BYTE PTR [rax],al
   1400145a0:	outs   dx,BYTE PTR ds:[rsi]
   1400145a1:	jno    0x1400145a5
   1400145a3:	add    BYTE PTR [rax],al
   1400145a5:	add    BYTE PTR [rax],al
   1400145a7:	add    BYTE PTR [rsi+0x71],dl
   1400145aa:	add    al,BYTE PTR [rax]
   1400145ac:	add    BYTE PTR [rax],al
   1400145ae:	add    BYTE PTR [rax],al
   1400145b0:	cs jno 0x1400145b5
   1400145b3:	add    BYTE PTR [rax],al
   1400145b5:	add    BYTE PTR [rax],al
   1400145b7:	add    ah,dh
   1400145b9:	jo     0x1400145bd
   1400145bb:	add    BYTE PTR [rax],al
   1400145bd:	add    BYTE PTR [rax],al
   1400145bf:	add    dh,bl
   1400145c1:	jo     0x1400145c5
   1400145c3:	add    BYTE PTR [rax],al
   1400145c5:	add    BYTE PTR [rax],al
   1400145c7:	add    BYTE PTR [rsi+0x270],ch
   1400145cd:	add    BYTE PTR [rax],al
   1400145cf:	add    BYTE PTR [rax+rsi*2+0x2],cl
   1400145d6:	add    BYTE PTR [rax],al
   1400145d8:	js     0x14001464a
   1400145da:	add    al,BYTE PTR [rax]
   1400145dc:	add    BYTE PTR [rax],al
   1400145de:	add    BYTE PTR [rax],al
   1400145e0:	sub    dh,BYTE PTR [rax+0x2]
   1400145e3:	add    BYTE PTR [rax],al
   1400145e5:	add    BYTE PTR [rax],al
   1400145e7:	add    BYTE PTR [rax+rsi*2],dl
   1400145ea:	add    al,BYTE PTR [rax]
   1400145ec:	add    BYTE PTR [rax],al
   1400145ee:	add    BYTE PTR [rax],al
   1400145f0:	call   0x140014864
   1400145f5:	add    BYTE PTR [rax],al
   1400145f7:	add    BYTE PTR [rsi],ah
   1400145f9:	jb     0x1400145fd
	...
   140014607:	add    BYTE PTR [rdx+0x2a],al
   14001460a:	add    al,BYTE PTR [rax]
   14001460c:	add    BYTE PTR [rax],al
   14001460e:	add    BYTE PTR [rax],al
   140014610:	ins    BYTE PTR es:[rdi],dx
   140014611:	sub    al,BYTE PTR [rdx]
   140014613:	add    BYTE PTR [rax],al
   140014615:	add    BYTE PTR [rax],al
   140014617:	add    BYTE PTR [rsi+0x22a],bl
   14001461d:	add    BYTE PTR [rax],al
   14001461f:	add    al,bl
   140014621:	sub    al,BYTE PTR [rdx]
   140014623:	add    BYTE PTR [rax],al
   140014625:	add    BYTE PTR [rax],al
   140014627:	add    BYTE PTR [rbx+rbp*1],dl
   14001462a:	add    al,BYTE PTR [rax]
   14001462c:	add    BYTE PTR [rax],al
   14001462e:	add    BYTE PTR [rax],al
   140014630:	push   rax
   140014631:	sub    eax,DWORD PTR [rdx]
   140014633:	add    BYTE PTR [rax],al
   140014635:	add    BYTE PTR [rax],al
   140014637:	add    BYTE PTR [rdx+0x22b],cl
   14001463d:	add    BYTE PTR [rax],al
   14001463f:	add    dh,al
   140014641:	sub    eax,DWORD PTR [rdx]
   140014643:	add    BYTE PTR [rax],al
   140014645:	add    BYTE PTR [rax],al
   140014647:	add    BYTE PTR [rax],al
   140014649:	sub    al,0x2
   14001464b:	add    BYTE PTR [rax],al
   14001464d:	add    BYTE PTR [rax],al
   14001464f:	add    BYTE PTR [rsp+rbp*1],bh
   140014652:	add    al,BYTE PTR [rax]
   140014654:	add    BYTE PTR [rax],al
   140014656:	add    BYTE PTR [rax],al
   140014658:	ins    BYTE PTR es:[rdi],dx
   140014659:	sub    al,0x2
   14001465b:	add    BYTE PTR [rax],al
   14001465d:	add    BYTE PTR [rax],al
   14001465f:	add    BYTE PTR [rsp+rbp*1+0x2],bl
   140014666:	add    BYTE PTR [rax],al
   140014668:	shr    BYTE PTR [rdx+rax*1],1
   14001466b:	add    BYTE PTR [rax],al
   14001466d:	add    BYTE PTR [rax],al
   14001466f:	add    BYTE PTR [rbp*1+0x2],cl
   140014676:	add    BYTE PTR [rax],al
   140014678:	rex.X sub eax,0x2
   14001467e:	add    BYTE PTR [rax],al
   140014680:	jb     0x1400146af
   140014682:	add    al,BYTE PTR [rax]
   140014684:	add    BYTE PTR [rax],al
   140014686:	add    BYTE PTR [rax],al
   140014688:	movabs ds:0xcc0000000000022d,al
   140014691:	sub    eax,0x2
   140014696:	add    BYTE PTR [rax],al
   140014698:	hlt    
   140014699:	sub    eax,0x2
   14001469e:	add    BYTE PTR [rax],al
   1400146a0:	(bad)  
   1400146a1:	add    al,BYTE PTR cs:[rax]
   1400146a4:	add    BYTE PTR [rax],al
   1400146a6:	add    BYTE PTR [rax],al
   1400146a8:	sub    BYTE PTR [rsi],ch
   1400146aa:	add    al,BYTE PTR [rax]
   1400146ac:	add    BYTE PTR [rax],al
   1400146ae:	add    BYTE PTR [rax],al
   1400146b0:	ds add al,BYTE PTR cs:[rax]
   1400146b4:	add    BYTE PTR [rax],al
   1400146b6:	add    BYTE PTR [rax],al
   1400146b8:	pop    rax
   1400146b9:	add    al,BYTE PTR cs:[rax]
   1400146bc:	add    BYTE PTR [rax],al
   1400146be:	add    BYTE PTR [rax],al
   1400146c0:	jo     0x1400146f0
   1400146c2:	add    al,BYTE PTR [rax]
   1400146c4:	add    BYTE PTR [rax],al
   1400146c6:	add    BYTE PTR [rax],al
   1400146c8:	mov    ch,BYTE PTR [rsi]
   1400146ca:	add    al,BYTE PTR [rax]
   1400146cc:	add    BYTE PTR [rax],al
   1400146ce:	add    BYTE PTR [rax],al
   1400146d0:	shr    BYTE PTR [rsi],1
   1400146d2:	add    al,BYTE PTR [rax]
   1400146d4:	add    BYTE PTR [rax],al
   1400146d6:	add    BYTE PTR [rax],al
   1400146d8:	add    ch,BYTE PTR [rdi]
   1400146da:	add    al,BYTE PTR [rax]
   1400146dc:	add    BYTE PTR [rax],al
   1400146de:	add    BYTE PTR [rax],al
   1400146e0:	xor    BYTE PTR [rdi],ch
   1400146e2:	add    al,BYTE PTR [rax]
   1400146e4:	add    BYTE PTR [rax],al
   1400146e6:	add    BYTE PTR [rax],al
   1400146e8:	pop    rax
   1400146e9:	(bad)  
   1400146ea:	add    al,BYTE PTR [rax]
   1400146ec:	add    BYTE PTR [rax],al
   1400146ee:	add    BYTE PTR [rax],al
   1400146f0:	sub    BYTE PTR [rdi],0x2
   1400146f3:	add    BYTE PTR [rax],al
   1400146f5:	add    BYTE PTR [rax],al
   1400146f7:	add    BYTE PTR [rsi+0x22f],ah
   1400146fd:	add    BYTE PTR [rax],al
   1400146ff:	add    ah,dl
   140014701:	(bad)  
   140014702:	add    al,BYTE PTR [rax]
   140014704:	add    BYTE PTR [rax],al
   140014706:	add    BYTE PTR [rax],al
   140014708:	(bad)  
   140014709:	xor    BYTE PTR [rdx],al
   14001470b:	add    BYTE PTR [rax],al
   14001470d:	add    BYTE PTR [rax],al
   14001470f:	add    BYTE PTR [rsi],dh
   140014711:	xor    BYTE PTR [rdx],al
   140014713:	add    BYTE PTR [rax],al
   140014715:	add    BYTE PTR [rax],al
   140014717:	add    BYTE PTR [rsi+0x30],bl
   14001471a:	add    al,BYTE PTR [rax]
   14001471c:	add    BYTE PTR [rax],al
   14001471e:	add    BYTE PTR [rax],al
   140014720:	(bad)  
   140014721:	xor    BYTE PTR [rdx],al
   140014723:	add    BYTE PTR [rax],al
   140014725:	add    BYTE PTR [rax],al
   140014727:	add    BYTE PTR [rsi+0x230],ah
   14001472d:	add    BYTE PTR [rax],al
   14001472f:	add    dh,al
   140014731:	xor    BYTE PTR [rdx],al
   140014733:	add    BYTE PTR [rax],al
   140014735:	add    BYTE PTR [rax],al
   140014737:	add    al,ah
   140014739:	xor    BYTE PTR [rdx],al
   14001473b:	add    BYTE PTR [rax],al
   14001473d:	add    BYTE PTR [rax],al
   14001473f:	add    BYTE PTR [rcx+rsi*1],cl
   140014742:	add    al,BYTE PTR [rax]
   140014744:	add    BYTE PTR [rax],al
   140014746:	add    BYTE PTR [rax],al
   140014748:	jp     0x14001477b
   14001474a:	add    al,BYTE PTR [rax]
   14001474c:	add    BYTE PTR [rax],al
   14001474e:	add    BYTE PTR [rax],al
   140014750:	clc    
   140014751:	xor    DWORD PTR [rdx],eax
   140014753:	add    BYTE PTR [rax],al
   140014755:	add    BYTE PTR [rax],al
   140014757:	add    BYTE PTR [rsi],bl
   140014759:	xor    al,BYTE PTR [rdx]
   14001475b:	add    BYTE PTR [rax],al
   14001475d:	add    BYTE PTR [rax],al
   14001475f:	add    BYTE PTR [rax+0x32],dl
   140014762:	add    al,BYTE PTR [rax]
   140014764:	add    BYTE PTR [rax],al
   140014766:	add    BYTE PTR [rax],al
   140014768:	mov    BYTE PTR [rdx],dh
   14001476a:	add    al,BYTE PTR [rax]
   14001476c:	add    BYTE PTR [rax],al
   14001476e:	add    BYTE PTR [rax],al
   140014770:	mov    ah,0x32
   140014772:	add    al,BYTE PTR [rax]
   140014774:	add    BYTE PTR [rax],al
   140014776:	add    BYTE PTR [rax],al
   140014778:	(bad)  
   140014779:	xor    al,BYTE PTR [rdx]
   14001477b:	add    BYTE PTR [rax],al
   14001477d:	add    BYTE PTR [rax],al
   14001477f:	add    BYTE PTR [rax],al
   140014781:	xor    eax,DWORD PTR [rdx]
   140014783:	add    BYTE PTR [rax],al
   140014785:	add    BYTE PTR [rax],al
   140014787:	add    BYTE PTR [rsi],bh
   140014789:	xor    eax,DWORD PTR [rdx]
   14001478b:	add    BYTE PTR [rax],al
   14001478d:	add    BYTE PTR [rax],al
   14001478f:	add    BYTE PTR [rax+0x33],bh
   140014792:	add    al,BYTE PTR [rax]
   140014794:	add    BYTE PTR [rax],al
   140014796:	add    BYTE PTR [rax],al
   140014798:	movabs al,ds:0xc800000000000233
   1400147a1:	xor    eax,DWORD PTR [rdx]
   1400147a3:	add    BYTE PTR [rax],al
   1400147a5:	add    BYTE PTR [rax],al
   1400147a7:	add    al,dh
   1400147a9:	xor    eax,DWORD PTR [rdx]
   1400147ab:	add    BYTE PTR [rax],al
   1400147ad:	add    BYTE PTR [rax],al
   1400147af:	add    BYTE PTR [rsi],dl
   1400147b1:	xor    al,0x2
   1400147b3:	add    BYTE PTR [rax],al
   1400147b5:	add    BYTE PTR [rax],al
   1400147b7:	add    BYTE PTR [rax+0x34],cl
   1400147ba:	add    al,BYTE PTR [rax]
   1400147bc:	add    BYTE PTR [rax],al
   1400147be:	add    BYTE PTR [rax],al
   1400147c0:	jb     0x1400147f6
   1400147c2:	add    al,BYTE PTR [rax]
   1400147c4:	add    BYTE PTR [rax],al
   1400147c6:	add    BYTE PTR [rax],al
   1400147c8:	mov    al,0x34
   1400147ca:	add    al,BYTE PTR [rax]
   1400147cc:	add    BYTE PTR [rax],al
   1400147ce:	add    BYTE PTR [rax],al
   1400147d0:	fidiv  DWORD PTR [rdx+rax*1]
   1400147d3:	add    BYTE PTR [rax],al
   1400147d5:	add    BYTE PTR [rax],al
   1400147d7:	add    BYTE PTR [rsi*1+0x2],cl
   1400147de:	add    BYTE PTR [rax],al
   1400147e0:	cmp    al,0x35
   1400147e2:	add    al,BYTE PTR [rax]
   1400147e4:	add    BYTE PTR [rax],al
   1400147e6:	add    BYTE PTR [rax],al
   1400147e8:	je     0x14001481f
   1400147ea:	add    al,BYTE PTR [rax]
   1400147ec:	add    BYTE PTR [rax],al
   1400147ee:	add    BYTE PTR [rax],al
   1400147f0:	scas   al,BYTE PTR es:[rdi]
   1400147f1:	xor    eax,0x2
   1400147f6:	add    BYTE PTR [rax],al
   1400147f8:	in     al,0x35
   1400147fa:	add    al,BYTE PTR [rax]
   1400147fc:	add    BYTE PTR [rax],al
   1400147fe:	add    BYTE PTR [rax],al
   140014800:	sbb    BYTE PTR [rsi],dh
   140014802:	add    al,BYTE PTR [rax]
   140014804:	add    BYTE PTR [rax],al
   140014806:	add    BYTE PTR [rax],al
   140014808:	rex.WX
   140014809:	add    al,BYTE PTR ss:[rax]
   14001480c:	add    BYTE PTR [rax],al
   14001480e:	add    BYTE PTR [rax],al
   140014810:	jle    0x140014848
   140014812:	add    al,BYTE PTR [rax]
   140014814:	add    BYTE PTR [rax],al
   140014816:	add    BYTE PTR [rax],al
   140014818:	lods   al,BYTE PTR ds:[rsi]
   140014819:	add    al,BYTE PTR ss:[rax]
   14001481c:	add    BYTE PTR [rax],al
   14001481e:	add    BYTE PTR [rax],al
   140014820:	loopne 0x140014858
   140014822:	add    al,BYTE PTR [rax]
   140014824:	add    BYTE PTR [rax],al
   140014826:	add    BYTE PTR [rax],al
   140014828:	or     al,0x37
   14001482a:	add    al,BYTE PTR [rax]
   14001482c:	add    BYTE PTR [rax],al
   14001482e:	add    BYTE PTR [rax],al
   140014830:	rex.WR (bad) 
   140014832:	add    al,BYTE PTR [rax]
   140014834:	add    BYTE PTR [rax],al
   140014836:	add    BYTE PTR [rax],al
   140014838:	js     0x140014871
   14001483a:	add    al,BYTE PTR [rax]
   14001483c:	add    BYTE PTR [rax],al
   14001483e:	add    BYTE PTR [rax],al
   140014840:	mov    esi,0x237
   140014845:	add    BYTE PTR [rax],al
   140014847:	add    al,dh
   140014849:	(bad)  
   14001484a:	add    al,BYTE PTR [rax]
   14001484c:	add    BYTE PTR [rax],al
   14001484e:	add    BYTE PTR [rax],al
   140014850:	and    bh,BYTE PTR [rax]
   140014852:	add    al,BYTE PTR [rax]
   140014854:	add    BYTE PTR [rax],al
   140014856:	add    BYTE PTR [rax],al
   140014858:	pop    rsp
   140014859:	cmp    BYTE PTR [rdx],al
   14001485b:	add    BYTE PTR [rax],al
   14001485d:	add    BYTE PTR [rax],al
   14001485f:	add    BYTE PTR [rax+rdi*1+0x2],dl
   140014866:	add    BYTE PTR [rax],al
   140014868:	(bad)  
   140014869:	cmp    BYTE PTR [rdx],al
   14001486b:	add    BYTE PTR [rax],al
   14001486d:	add    BYTE PTR [rax],al
   14001486f:	add    BYTE PTR [rcx+rdi*1],cl
   140014872:	add    al,BYTE PTR [rax]
   140014874:	add    BYTE PTR [rax],al
   140014876:	add    BYTE PTR [rax],al
   140014878:	rex.X cmp DWORD PTR [rdx],eax
   14001487b:	add    BYTE PTR [rax],al
   14001487d:	add    BYTE PTR [rax],al
   14001487f:	add    BYTE PTR [rsi+0x39],bh
   140014882:	add    al,BYTE PTR [rax]
   140014884:	add    BYTE PTR [rax],al
   140014886:	add    BYTE PTR [rax],al
   140014888:	mov    dl,0x39
   14001488a:	add    al,BYTE PTR [rax]
   14001488c:	add    BYTE PTR [rax],al
   14001488e:	add    BYTE PTR [rax],al
   140014890:	out    dx,al
   140014891:	cmp    DWORD PTR [rdx],eax
   140014893:	add    BYTE PTR [rax],al
   140014895:	add    BYTE PTR [rax],al
   140014897:	add    BYTE PTR [rdx+rdi*1],ch
   14001489a:	add    al,BYTE PTR [rax]
   14001489c:	add    BYTE PTR [rax],al
   14001489e:	add    BYTE PTR [rax],al
   1400148a0:	pop    rsi
   1400148a1:	cmp    al,BYTE PTR [rdx]
   1400148a3:	add    BYTE PTR [rax],al
   1400148a5:	add    BYTE PTR [rax],al
   1400148a7:	add    BYTE PTR [rdx+0x23a],bl
   1400148ad:	add    BYTE PTR [rax],al
   1400148af:	add    dl,ah
   1400148b1:	cmp    al,BYTE PTR [rdx]
   1400148b3:	add    BYTE PTR [rax],al
   1400148b5:	add    BYTE PTR [rax],al
   1400148b7:	add    BYTE PTR [rbx+rdi*1],ah
   1400148ba:	add    al,BYTE PTR [rax]
   1400148bc:	add    BYTE PTR [rax],al
   1400148be:	add    BYTE PTR [rax],al
   1400148c0:	pop    rsp
   1400148c1:	cmp    eax,DWORD PTR [rdx]
   1400148c3:	add    BYTE PTR [rax],al
   1400148c5:	add    BYTE PTR [rax],al
   1400148c7:	add    BYTE PTR [rsi+0x23b],bl
   1400148cd:	add    BYTE PTR [rax],al
   1400148cf:	add    al,dl
   1400148d1:	cmp    eax,DWORD PTR [rdx]
   1400148d3:	add    BYTE PTR [rax],al
   1400148d5:	add    BYTE PTR [rax],al
   1400148d7:	add    ah,bh
   1400148d9:	cmp    eax,DWORD PTR [rdx]
   1400148db:	add    BYTE PTR [rax],al
   1400148dd:	add    BYTE PTR [rax],al
   1400148df:	add    BYTE PTR [rdx+0x3c],al
   1400148e2:	add    al,BYTE PTR [rax]
   1400148e4:	add    BYTE PTR [rax],al
   1400148e6:	add    BYTE PTR [rax],al
   1400148e8:	xchg   esp,eax
   1400148e9:	cmp    al,0x2
   1400148eb:	add    BYTE PTR [rax],al
   1400148ed:	add    BYTE PTR [rax],al
   1400148ef:	add    al,cl
   1400148f1:	cmp    al,0x2
   1400148f3:	add    BYTE PTR [rax],al
   1400148f5:	add    BYTE PTR [rax],al
   1400148f7:	add    BYTE PTR [rdi*1+0x2],al
   1400148fe:	add    BYTE PTR [rax],al
   140014900:	ss cmp eax,0x2
   140014906:	add    BYTE PTR [rax],al
   140014908:	(bad)  
   140014909:	cmp    eax,0x2
   14001490e:	add    BYTE PTR [rax],al
   140014910:	nop
   140014911:	cmp    eax,0x2
   140014916:	add    BYTE PTR [rax],al
   140014918:	retf   0x23d
   14001491b:	add    BYTE PTR [rax],al
   14001491d:	add    BYTE PTR [rax],al
   14001491f:	add    BYTE PTR [rsi],cl
   140014921:	add    al,BYTE PTR ds:[rax]
   140014924:	add    BYTE PTR [rax],al
   140014926:	add    BYTE PTR [rax],al
   140014928:	rex
   140014929:	add    al,BYTE PTR ds:[rax]
   14001492c:	add    BYTE PTR [rax],al
   14001492e:	add    BYTE PTR [rax],al
   140014930:	jl     0x140014970
   140014932:	add    al,BYTE PTR [rax]
   140014934:	add    BYTE PTR [rax],al
   140014936:	add    BYTE PTR [rax],al
   140014938:	int3   
   140014939:	add    al,BYTE PTR ds:[rax]
   14001493c:	add    BYTE PTR [rax],al
   14001493e:	add    BYTE PTR [rax],al
   140014940:	(bad)  
   140014941:	(bad)  
   140014942:	add    al,BYTE PTR [rax]
   140014944:	add    BYTE PTR [rax],al
   140014946:	add    BYTE PTR [rax],al
   140014948:	xor    al,0x3f
   14001494a:	add    al,BYTE PTR [rax]
   14001494c:	add    BYTE PTR [rax],al
   14001494e:	add    BYTE PTR [rax],al
   140014950:	pop    rsi
   140014951:	(bad)  
   140014952:	add    al,BYTE PTR [rax]
   140014954:	add    BYTE PTR [rax],al
   140014956:	add    BYTE PTR [rax],al
   140014958:	jp     0x140014999
   14001495a:	add    al,BYTE PTR [rax]
   14001495c:	add    BYTE PTR [rax],al
   14001495e:	add    BYTE PTR [rax],al
   140014960:	scas   al,BYTE PTR es:[rdi]
   140014961:	(bad)  
   140014962:	add    al,BYTE PTR [rax]
   140014964:	add    BYTE PTR [rax],al
   140014966:	add    BYTE PTR [rax],al
   140014968:	sar    BYTE PTR [rdi],cl
   14001496a:	add    al,BYTE PTR [rax]
   14001496c:	add    BYTE PTR [rax],al
   14001496e:	add    BYTE PTR [rax],al
   140014970:	repnz (bad) 
   140014972:	add    al,BYTE PTR [rax]
   140014974:	add    BYTE PTR [rax],al
   140014976:	add    BYTE PTR [rax],al
   140014978:	rex.R
   140014979:	add    al,BYTE PTR [rax]
   14001497c:	add    BYTE PTR [rax],al
   14001497e:	add    BYTE PTR [rax],al
   140014980:	mov    al,BYTE PTR [rax+0x2]
   140014983:	add    BYTE PTR [rax],al
   140014985:	add    BYTE PTR [rax],al
   140014987:	add    al,al
   140014989:	add    al,BYTE PTR [rax]
   14001498c:	add    BYTE PTR [rax],al
   14001498e:	add    BYTE PTR [rax],al
   140014990:	inc    BYTE PTR [rax+0x2]
   140014993:	add    BYTE PTR [rax],al
   140014995:	add    BYTE PTR [rax],al
   140014997:	add    BYTE PTR [rdx],bh
   140014999:	add    al,BYTE PTR [r8]
   14001499c:	add    BYTE PTR [rax],al
   14001499e:	add    BYTE PTR [rax],al
   1400149a0:	jb     0x1400149e3
   1400149a2:	add    al,BYTE PTR [rax]
   1400149a4:	add    BYTE PTR [rax],al
   1400149a6:	add    BYTE PTR [rax],al
   1400149a8:	movabs ds:0xd800000000000241,al
   1400149b1:	add    al,BYTE PTR [r8]
   1400149b4:	add    BYTE PTR [rax],al
   1400149b6:	add    BYTE PTR [rax],al
   1400149b8:	add    BYTE PTR [rdx+0x2],al
   1400149bb:	add    BYTE PTR [rax],al
   1400149bd:	add    BYTE PTR [rax],al
   1400149bf:	add    BYTE PTR [rax],bh
   1400149c1:	rex.X add al,BYTE PTR [rax]
   1400149c4:	add    BYTE PTR [rax],al
   1400149c6:	add    BYTE PTR [rax],al
   1400149c8:	push   0x42
   1400149ca:	add    al,BYTE PTR [rax]
   1400149cc:	add    BYTE PTR [rax],al
   1400149ce:	add    BYTE PTR [rax],al
   1400149d0:	test   al,0x42
   1400149d2:	add    al,BYTE PTR [rax]
   1400149d4:	add    BYTE PTR [rax],al
   1400149d6:	add    BYTE PTR [rax],al
   1400149d8:	call   0x140014c1f
   1400149dd:	add    BYTE PTR [rax],al
   1400149df:	add    BYTE PTR [rbx+rax*2+0x2],al
   1400149e3:	add    BYTE PTR [rax],al
   1400149e5:	add    BYTE PTR [rax],al
   1400149e7:	add    BYTE PTR [rdx+0x43],bh
   1400149ea:	add    al,BYTE PTR [rax]
   1400149ec:	add    BYTE PTR [rax],al
   1400149ee:	add    BYTE PTR [rax],al
   1400149f0:	mov    dh,0x43
   1400149f2:	add    al,BYTE PTR [rax]
   1400149f4:	add    BYTE PTR [rax],al
   1400149f6:	add    BYTE PTR [rax],al
   1400149f8:	sub    al,0x44
   1400149fa:	add    al,BYTE PTR [rax]
   1400149fc:	add    BYTE PTR [rax],al
   1400149fe:	add    BYTE PTR [rax],al
   140014a00:	push   rsp
   140014a01:	add    r8b,BYTE PTR [rax]
   140014a04:	add    BYTE PTR [rax],al
   140014a06:	add    BYTE PTR [rax],al
   140014a08:	jp     0x140014a4e
   140014a0a:	add    al,BYTE PTR [rax]
   140014a0c:	add    BYTE PTR [rax],al
   140014a0e:	add    BYTE PTR [rax],al
   140014a10:	mov    al,0x44
   140014a12:	add    al,BYTE PTR [rax]
   140014a14:	add    BYTE PTR [rax],al
   140014a16:	add    BYTE PTR [rax],al
   140014a18:	adc    BYTE PTR [rbp+0x2],al
   140014a1b:	add    BYTE PTR [rax],al
   140014a1d:	add    BYTE PTR [rax],al
   140014a1f:	add    BYTE PTR [rsi+0x45],bl
   140014a22:	add    al,BYTE PTR [rax]
   140014a24:	add    BYTE PTR [rax],al
   140014a26:	add    BYTE PTR [rax],al
   140014a28:	sahf   
   140014a29:	add    r8b,BYTE PTR [r8]
   140014a2c:	add    BYTE PTR [rax],al
   140014a2e:	add    BYTE PTR [rax],al
   140014a30:	sbb    al,0x46
   140014a32:	add    al,BYTE PTR [rax]
   140014a34:	add    BYTE PTR [rax],al
   140014a36:	add    BYTE PTR [rax],al
   140014a38:	(bad)  
   140014a39:	rex.RX add r8b,BYTE PTR [rax]
   140014a3c:	add    BYTE PTR [rax],al
   140014a3e:	add    BYTE PTR [rax],al
   140014a40:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014a41:	rex.RX add r8b,BYTE PTR [rax]
   140014a44:	add    BYTE PTR [rax],al
   140014a46:	add    BYTE PTR [rax],al
   140014a48:	cld    
   140014a49:	rex.RX add r8b,BYTE PTR [rax]
   140014a4c:	add    BYTE PTR [rax],al
   140014a4e:	add    BYTE PTR [rax],al
   140014a50:	rex.WX
   140014a51:	rex.RXB add r8b,BYTE PTR [r8]
   140014a54:	add    BYTE PTR [rax],al
   140014a56:	add    BYTE PTR [rax],al
   140014a58:	jl     0x140014aa1
   140014a5a:	add    al,BYTE PTR [rax]
   140014a5c:	add    BYTE PTR [rax],al
   140014a5e:	add    BYTE PTR [rax],al
   140014a60:	int3   
   140014a61:	rex.RXB add r8b,BYTE PTR [r8]
   140014a64:	add    BYTE PTR [rax],al
   140014a66:	add    BYTE PTR [rax],al
   140014a68:	sub    BYTE PTR [rax+0x2],cl
   140014a6b:	add    BYTE PTR [rax],al
   140014a6d:	add    BYTE PTR [rax],al
   140014a6f:	add    BYTE PTR [rax+rcx*2+0x2],dh
   140014a73:	add    BYTE PTR [rax],al
   140014a75:	add    BYTE PTR [rax],al
   140014a77:	add    BYTE PTR [rax+0x248],ch
   140014a7d:	add    BYTE PTR [rax],al
   140014a7f:	add    ah,dl
   140014a81:	rex.W add al,BYTE PTR [rax]
   140014a84:	add    BYTE PTR [rax],al
   140014a86:	add    BYTE PTR [rax],al
   140014a88:	adc    al,0x49
   140014a8a:	add    al,BYTE PTR [rax]
   140014a8c:	add    BYTE PTR [rax],al
   140014a8e:	add    BYTE PTR [rax],al
   140014a90:	rex
   140014a91:	rex.WB add al,BYTE PTR [r8]
   140014a94:	add    BYTE PTR [rax],al
   140014a96:	add    BYTE PTR [rax],al
   140014a98:	js     0x140014ae3
   140014a9a:	add    al,BYTE PTR [rax]
   140014a9c:	add    BYTE PTR [rax],al
   140014a9e:	add    BYTE PTR [rax],al
   140014aa0:	movabs ds:0xd400000000000249,al
   140014aa9:	rex.WB add al,BYTE PTR [r8]
   140014aac:	add    BYTE PTR [rax],al
   140014aae:	add    BYTE PTR [rax],al
   140014ab0:	adc    cl,BYTE PTR [rdx+0x2]
   140014ab3:	add    BYTE PTR [rax],al
   140014ab5:	add    BYTE PTR [rax],al
   140014ab7:	add    BYTE PTR [rdx+0x4a],dl
   140014aba:	add    al,BYTE PTR [rax]
   140014abc:	add    BYTE PTR [rax],al
   140014abe:	add    BYTE PTR [rax],al
   140014ac0:	mov    BYTE PTR [rdx+0x2],cl
   140014ac3:	add    BYTE PTR [rax],al
   140014ac5:	add    BYTE PTR [rax],al
   140014ac7:	add    BYTE PTR [rsi+0x24a],bh
   140014acd:	add    BYTE PTR [rax],al
   140014acf:	add    dh,dh
   140014ad1:	rex.WX add al,BYTE PTR [rax]
   140014ad4:	add    BYTE PTR [rax],al
   140014ad6:	add    BYTE PTR [rax],al
   140014ad8:	sub    cl,BYTE PTR [rbx+0x2]
   140014adb:	add    BYTE PTR [rax],al
   140014add:	add    BYTE PTR [rax],al
   140014adf:	add    BYTE PTR [rsi+0x4b],bl
   140014ae2:	add    al,BYTE PTR [rax]
   140014ae4:	add    BYTE PTR [rax],al
   140014ae6:	add    BYTE PTR [rax],al
   140014ae8:	xchg   edx,eax
   140014ae9:	rex.WXB add al,BYTE PTR [r8]
   140014aec:	add    BYTE PTR [rax],al
   140014aee:	add    BYTE PTR [rax],al
   140014af0:	mov    esi,0x24b
   140014af5:	add    BYTE PTR [rax],al
   140014af7:	add    dh,dl
   140014af9:	rex.WXB add al,BYTE PTR [r8]
   140014afc:	add    BYTE PTR [rax],al
   140014afe:	add    BYTE PTR [rax],al
   140014b00:	lock rex.WXB add al,BYTE PTR [r8]
   140014b04:	add    BYTE PTR [rax],al
   140014b06:	add    BYTE PTR [rax],al
   140014b08:	or     cl,BYTE PTR [rdx+rax*1+0x0]
   140014b0c:	add    BYTE PTR [rax],al
   140014b0e:	add    BYTE PTR [rax],al
   140014b10:	rex.X
   140014b11:	rex.WR add r8b,BYTE PTR [rax]
   140014b14:	add    BYTE PTR [rax],al
   140014b16:	add    BYTE PTR [rax],al
   140014b18:	(bad)  
   140014b19:	rex.WR add r8b,BYTE PTR [rax]
   140014b1c:	add    BYTE PTR [rax],al
   140014b1e:	add    BYTE PTR [rax],al
   140014b20:	mov    dl,0x4c
   140014b22:	add    al,BYTE PTR [rax]
   140014b24:	add    BYTE PTR [rax],al
   140014b26:	add    BYTE PTR [rax],al
   140014b28:	fimul  DWORD PTR [rdx+rax*1+0x0]
   140014b2c:	add    BYTE PTR [rax],al
   140014b2e:	add    BYTE PTR [rax],al
   140014b30:	or     cl,BYTE PTR [rbp+0x2]
   140014b33:	add    BYTE PTR [rax],al
   140014b35:	add    BYTE PTR [rax],al
   140014b37:	add    BYTE PTR [rsi],bh
   140014b39:	rex.WRB add r8b,BYTE PTR [r8]
   140014b3c:	add    BYTE PTR [rax],al
   140014b3e:	add    BYTE PTR [rax],al
   140014b40:	rex.WRB add r8b,BYTE PTR fs:[r8]
   140014b44:	add    BYTE PTR [rax],al
   140014b46:	add    BYTE PTR [rax],al
   140014b48:	xchg   esi,eax
   140014b49:	rex.WRB add r8b,BYTE PTR [r8]
   140014b4c:	add    BYTE PTR [rax],al
   140014b4e:	add    BYTE PTR [rax],al
   140014b50:	retf   0x24d
   140014b53:	add    BYTE PTR [rax],al
   140014b55:	add    BYTE PTR [rax],al
   140014b57:	add    BYTE PTR [rsi],cl
   140014b59:	sub    al,BYTE PTR [rdx]
   140014b5b:	add    BYTE PTR [rax],al
   140014b5d:	add    BYTE PTR [rax],al
   140014b5f:	add    BYTE PTR [rsi+rcx*2],dl
   140014b62:	add    al,BYTE PTR [rax]
   140014b64:	add    BYTE PTR [rax],al
   140014b66:	add    BYTE PTR [rax],al
   140014b68:	rex.X
   140014b69:	rex.WRX add r8b,BYTE PTR [rax]
   140014b6c:	add    BYTE PTR [rax],al
   140014b6e:	add    BYTE PTR [rax],al
   140014b70:	jl     0x140014bc0
   140014b72:	add    al,BYTE PTR [rax]
   140014b74:	add    BYTE PTR [rax],al
   140014b76:	add    BYTE PTR [rax],al
   140014b78:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014b79:	rex.WRX add r8b,BYTE PTR [rax]
   140014b7c:	add    BYTE PTR [rax],al
   140014b7e:	add    BYTE PTR [rax],al
   140014b80:	(bad)  
   140014b81:	rex.WRX add r8b,BYTE PTR [rax]
   140014b84:	add    BYTE PTR [rax],al
   140014b86:	add    BYTE PTR [rax],al
   140014b88:	out    dx,al
   140014b89:	rex.WRX add r8b,BYTE PTR [rax]
   140014b8c:	add    BYTE PTR [rax],al
   140014b8e:	add    BYTE PTR [rax],al
   140014b90:	adc    al,0x4f
   140014b92:	add    al,BYTE PTR [rax]
   140014b94:	add    BYTE PTR [rax],al
   140014b96:	add    BYTE PTR [rax],al
   140014b98:	rex.RX
   140014b99:	rex.WRXB add r8b,BYTE PTR [r8]
   140014b9c:	add    BYTE PTR [rax],al
   140014b9e:	add    BYTE PTR [rax],al
   140014ba0:	jo     0x140014bf1
   140014ba2:	add    al,BYTE PTR [rax]
   140014ba4:	add    BYTE PTR [rax],al
   140014ba6:	add    BYTE PTR [rax],al
   140014ba8:	scas   al,BYTE PTR es:[rdi]
   140014ba9:	rex.WRXB add r8b,BYTE PTR [r8]
   140014bac:	add    BYTE PTR [rax],al
   140014bae:	add    BYTE PTR [rax],al
   140014bb0:	fmul   DWORD PTR [rdi+0x2]
   140014bb3:	add    BYTE PTR [rax],al
   140014bb5:	add    BYTE PTR [rax],al
   140014bb7:	add    BYTE PTR [rax],al
   140014bb9:	push   rax
   140014bba:	add    al,BYTE PTR [rax]
   140014bbc:	add    BYTE PTR [rax],al
   140014bbe:	add    BYTE PTR [rax],al
   140014bc0:	xor    BYTE PTR [rax+0x2],dl
   140014bc3:	add    BYTE PTR [rax],al
   140014bc5:	add    BYTE PTR [rax],al
   140014bc7:	add    BYTE PTR [rsi+0x50],ah
   140014bca:	add    al,BYTE PTR [rax]
   140014bcc:	add    BYTE PTR [rax],al
   140014bce:	add    BYTE PTR [rax],al
   140014bd0:	cwde   
   140014bd1:	push   rax
   140014bd2:	add    al,BYTE PTR [rax]
   140014bd4:	add    BYTE PTR [rax],al
   140014bd6:	add    BYTE PTR [rax],al
   140014bd8:	(bad)  
   140014bd9:	push   rax
   140014bda:	add    al,BYTE PTR [rax]
   140014bdc:	add    BYTE PTR [rax],al
   140014bde:	add    BYTE PTR [rax],al
   140014be0:	(bad)  
   140014be1:	push   rax
   140014be2:	add    al,BYTE PTR [rax]
   140014be4:	add    BYTE PTR [rax],al
   140014be6:	add    BYTE PTR [rax],al
   140014be8:	adc    BYTE PTR [rcx+0x2],dl
   140014beb:	add    BYTE PTR [rax],al
   140014bed:	add    BYTE PTR [rax],al
   140014bef:	add    BYTE PTR [rcx+rdx*2+0x2],al
   140014bf3:	add    BYTE PTR [rax],al
   140014bf5:	add    BYTE PTR [rax],al
   140014bf7:	add    BYTE PTR [rax+0x51],dh
   140014bfa:	add    al,BYTE PTR [rax]
   140014bfc:	add    BYTE PTR [rax],al
   140014bfe:	add    BYTE PTR [rax],al
   140014c00:	mov    dl,0x51
   140014c02:	add    al,BYTE PTR [rax]
   140014c04:	add    BYTE PTR [rax],al
   140014c06:	add    BYTE PTR [rax],al
   140014c08:	ficom  WORD PTR [rcx+0x2]
   140014c0b:	add    BYTE PTR [rax],al
   140014c0d:	add    BYTE PTR [rax],al
   140014c0f:	add    BYTE PTR [rdx],cl
   140014c11:	push   rdx
   140014c12:	add    al,BYTE PTR [rax]
   140014c14:	add    BYTE PTR [rax],al
   140014c16:	add    BYTE PTR [rax],al
   140014c18:	cmp    al,0x52
   140014c1a:	add    al,BYTE PTR [rax]
   140014c1c:	add    BYTE PTR [rax],al
   140014c1e:	add    BYTE PTR [rax],al
   140014c20:	jbe    0x140014c74
   140014c22:	add    al,BYTE PTR [rax]
   140014c24:	add    BYTE PTR [rax],al
   140014c26:	add    BYTE PTR [rax],al
   140014c28:	lods   al,BYTE PTR ds:[rsi]
   140014c29:	push   rdx
   140014c2a:	add    al,BYTE PTR [rax]
   140014c2c:	add    BYTE PTR [rax],al
   140014c2e:	add    BYTE PTR [rax],al
   140014c30:	fcom   QWORD PTR [rdx+0x2]
   140014c33:	add    BYTE PTR [rax],al
   140014c35:	add    BYTE PTR [rax],al
   140014c37:	add    ah,dh
   140014c39:	push   rdx
   140014c3a:	add    al,BYTE PTR [rax]
   140014c3c:	add    BYTE PTR [rax],al
   140014c3e:	add    BYTE PTR [rax],al
   140014c40:	adc    BYTE PTR [rbx+0x2],dl
   140014c43:	add    BYTE PTR [rax],al
   140014c45:	add    BYTE PTR [rax],al
   140014c47:	add    BYTE PTR [rsi],dh
   140014c49:	push   rbx
   140014c4a:	add    al,BYTE PTR [rax]
   140014c4c:	add    BYTE PTR [rax],al
   140014c4e:	add    BYTE PTR [rax],al
   140014c50:	pop    rsi
   140014c51:	push   rbx
   140014c52:	add    al,BYTE PTR [rax]
   140014c54:	add    BYTE PTR [rax],al
   140014c56:	add    BYTE PTR [rax],al
   140014c58:	nop
   140014c59:	push   rbx
   140014c5a:	add    al,BYTE PTR [rax]
   140014c5c:	add    BYTE PTR [rax],al
   140014c5e:	add    BYTE PTR [rax],al
   140014c60:	scas   al,BYTE PTR es:[rdi]
   140014c61:	push   rbx
   140014c62:	add    al,BYTE PTR [rax]
   140014c64:	add    BYTE PTR [rax],al
   140014c66:	add    BYTE PTR [rax],al
   140014c68:	in     al,0x53
   140014c6a:	add    al,BYTE PTR [rax]
   140014c6c:	add    BYTE PTR [rax],al
   140014c6e:	add    BYTE PTR [rax],al
   140014c70:	or     BYTE PTR [rdx+rax*1+0x0],dl
   140014c74:	add    BYTE PTR [rax],al
   140014c76:	add    BYTE PTR [rax],al
   140014c78:	xor    BYTE PTR [rdx+rax*1+0x0],dl
   140014c7c:	add    BYTE PTR [rax],al
   140014c7e:	add    BYTE PTR [rax],al
   140014c80:	fs push rsp
   140014c82:	add    al,BYTE PTR [rax]
   140014c84:	add    BYTE PTR [rax],al
   140014c86:	add    BYTE PTR [rax],al
   140014c88:	nop
   140014c89:	push   rsp
   140014c8a:	add    al,BYTE PTR [rax]
   140014c8c:	add    BYTE PTR [rax],al
   140014c8e:	add    BYTE PTR [rax],al
   140014c90:	rcl    BYTE PTR [rdx+rax*1+0x0],1
   140014c94:	add    BYTE PTR [rax],al
   140014c96:	add    BYTE PTR [rax],al
   140014c98:	cld    
   140014c99:	push   rsp
   140014c9a:	add    al,BYTE PTR [rax]
   140014c9c:	add    BYTE PTR [rax],al
   140014c9e:	add    BYTE PTR [rax],al
   140014ca0:	cs push rbp
   140014ca2:	add    al,BYTE PTR [rax]
   140014ca4:	add    BYTE PTR [rax],al
   140014ca6:	add    BYTE PTR [rax],al
   140014ca8:	outs   dx,BYTE PTR ds:[rsi]
   140014ca9:	push   rbp
   140014caa:	add    al,BYTE PTR [rax]
   140014cac:	add    BYTE PTR [rax],al
   140014cae:	add    BYTE PTR [rax],al
   140014cb0:	test   al,0x55
   140014cb2:	add    al,BYTE PTR [rax]
   140014cb4:	add    BYTE PTR [rax],al
   140014cb6:	add    BYTE PTR [rax],al
   140014cb8:	out    dx,al
   140014cb9:	push   rbp
   140014cba:	add    al,BYTE PTR [rax]
   140014cbc:	add    BYTE PTR [rax],al
   140014cbe:	add    BYTE PTR [rax],al
   140014cc0:	and    al,0x56
   140014cc2:	add    al,BYTE PTR [rax]
   140014cc4:	add    BYTE PTR [rax],al
   140014cc6:	add    BYTE PTR [rax],al
   140014cc8:	push   rsi
   140014cc9:	push   rsi
   140014cca:	add    al,BYTE PTR [rax]
   140014ccc:	add    BYTE PTR [rax],al
   140014cce:	add    BYTE PTR [rax],al
   140014cd0:	xchg   edx,eax
   140014cd1:	push   rsi
   140014cd2:	add    al,BYTE PTR [rax]
   140014cd4:	add    BYTE PTR [rax],al
   140014cd6:	add    BYTE PTR [rax],al
   140014cd8:	(bad)  
   140014cd9:	push   rsi
   140014cda:	add    al,BYTE PTR [rax]
   140014cdc:	add    BYTE PTR [rax],al
   140014cde:	add    BYTE PTR [rax],al
   140014ce0:	clc    
   140014ce1:	push   rsi
   140014ce2:	add    al,BYTE PTR [rax]
   140014ce4:	add    BYTE PTR [rax],al
   140014ce6:	add    BYTE PTR [rax],al
   140014ce8:	xor    BYTE PTR [rdi+0x2],dl
   140014ceb:	add    BYTE PTR [rax],al
   140014ced:	add    BYTE PTR [rax],al
   140014cef:	add    BYTE PTR [rdx+0x57],ch
   140014cf2:	add    al,BYTE PTR [rax]
   140014cf4:	add    BYTE PTR [rax],al
   140014cf6:	add    BYTE PTR [rax],al
   140014cf8:	pushf  
   140014cf9:	push   rdi
   140014cfa:	add    al,BYTE PTR [rax]
   140014cfc:	add    BYTE PTR [rax],al
   140014cfe:	add    BYTE PTR [rax],al
   140014d00:	(bad)  
   140014d01:	push   rdi
   140014d02:	add    al,BYTE PTR [rax]
   140014d04:	add    BYTE PTR [rax],al
   140014d06:	add    BYTE PTR [rax],al
   140014d08:	add    BYTE PTR [rax+0x2],bl
   140014d0b:	add    BYTE PTR [rax],al
   140014d0d:	add    BYTE PTR [rax],al
   140014d0f:	add    BYTE PTR [rax],dh
   140014d11:	pop    rax
   140014d12:	add    al,BYTE PTR [rax]
   140014d14:	add    BYTE PTR [rax],al
   140014d16:	add    BYTE PTR [rax],al
   140014d18:	push   0x58
   140014d1a:	add    al,BYTE PTR [rax]
   140014d1c:	add    BYTE PTR [rax],al
   140014d1e:	add    BYTE PTR [rax],al
   140014d20:	mov    ah,0x58
   140014d22:	add    al,BYTE PTR [rax]
   140014d24:	add    BYTE PTR [rax],al
   140014d26:	add    BYTE PTR [rax],al
   140014d28:	out    dx,al
   140014d29:	pop    rax
   140014d2a:	add    al,BYTE PTR [rax]
   140014d2c:	add    BYTE PTR [rax],al
   140014d2e:	add    BYTE PTR [rax],al
   140014d30:	sub    bl,BYTE PTR [rcx+0x2]
   140014d33:	add    BYTE PTR [rax],al
   140014d35:	add    BYTE PTR [rax],al
   140014d37:	add    BYTE PTR [rdx+0x59],bh
   140014d3a:	add    al,BYTE PTR [rax]
   140014d3c:	add    BYTE PTR [rax],al
   140014d3e:	add    BYTE PTR [rax],al
   140014d40:	mov    ah,0x59
   140014d42:	add    al,BYTE PTR [rax]
   140014d44:	add    BYTE PTR [rax],al
   140014d46:	add    BYTE PTR [rax],al
   140014d48:	out    0x59,al
   140014d4a:	add    al,BYTE PTR [rax]
   140014d4c:	add    BYTE PTR [rax],al
   140014d4e:	add    BYTE PTR [rax],al
   140014d50:	add    bl,BYTE PTR [rdx+0x2]
   140014d53:	add    BYTE PTR [rax],al
   140014d55:	add    BYTE PTR [rax],al
   140014d57:	add    BYTE PTR [rsi],dh
   140014d59:	pop    rdx
   140014d5a:	add    al,BYTE PTR [rax]
   140014d5c:	add    BYTE PTR [rax],al
   140014d5e:	add    BYTE PTR [rax],al
   140014d60:	pop    rdx
   140014d61:	pop    rdx
   140014d62:	add    al,BYTE PTR [rax]
   140014d64:	add    BYTE PTR [rax],al
   140014d66:	add    BYTE PTR [rax],al
   140014d68:	(bad)  
   140014d69:	pop    rdx
   140014d6a:	add    al,BYTE PTR [rax]
   140014d6c:	add    BYTE PTR [rax],al
   140014d6e:	add    BYTE PTR [rax],al
   140014d70:	enter  0x25a,0x0
   140014d74:	add    BYTE PTR [rax],al
   140014d76:	add    BYTE PTR [rax],al
   140014d78:	(bad)  
   140014d79:	pop    rdx
   140014d7a:	add    al,BYTE PTR [rax]
   140014d7c:	add    BYTE PTR [rax],al
   140014d7e:	add    BYTE PTR [rax],al
   140014d80:	cmp    al,0x5b
   140014d82:	add    al,BYTE PTR [rax]
   140014d84:	add    BYTE PTR [rax],al
   140014d86:	add    BYTE PTR [rax],al
   140014d88:	js     0x140014de5
   140014d8a:	add    al,BYTE PTR [rax]
   140014d8c:	add    BYTE PTR [rax],al
   140014d8e:	add    BYTE PTR [rax],al
   140014d90:	mov    al,0x5b
   140014d92:	add    al,BYTE PTR [rax]
   140014d94:	add    BYTE PTR [rax],al
   140014d96:	add    BYTE PTR [rax],al
   140014d98:	fcomp  DWORD PTR [rbx+0x2]
   140014d9b:	add    BYTE PTR [rax],al
   140014d9d:	add    BYTE PTR [rax],al
   140014d9f:	add    BYTE PTR [rdx],dl
   140014da1:	pop    rsp
   140014da2:	add    al,BYTE PTR [rax]
   140014da4:	add    BYTE PTR [rax],al
   140014da6:	add    BYTE PTR [rax],al
   140014da8:	mov    BYTE PTR [rdx+rax*1+0x0],bl
   140014dac:	add    BYTE PTR [rax],al
   140014dae:	add    BYTE PTR [rax],al
   140014db0:	mov    al,0x5c
   140014db2:	add    al,BYTE PTR [rax]
   140014db4:	add    BYTE PTR [rax],al
   140014db6:	add    BYTE PTR [rax],al
   140014db8:	(bad)  
   140014db9:	pop    rsp
   140014dba:	add    al,BYTE PTR [rax]
   140014dbc:	add    BYTE PTR [rax],al
   140014dbe:	add    BYTE PTR [rax],al
   140014dc0:	or     al,0x5d
   140014dc2:	add    al,BYTE PTR [rax]
   140014dc4:	add    BYTE PTR [rax],al
   140014dc6:	add    BYTE PTR [rax],al
   140014dc8:	ins    BYTE PTR es:[rdi],dx
   140014dc9:	pop    rbp
   140014dca:	add    al,BYTE PTR [rax]
   140014dcc:	add    BYTE PTR [rax],al
   140014dce:	add    BYTE PTR [rax],al
   140014dd0:	mov    edx,0x25d
   140014dd5:	add    BYTE PTR [rax],al
   140014dd7:	add    dl,bh
   140014dd9:	pop    rbp
   140014dda:	add    al,BYTE PTR [rax]
   140014ddc:	add    BYTE PTR [rax],al
   140014dde:	add    BYTE PTR [rax],al
   140014de0:	cmp    BYTE PTR [rsi+0x2],bl
   140014de3:	add    BYTE PTR [rax],al
   140014de5:	add    BYTE PTR [rax],al
   140014de7:	add    BYTE PTR [rdx+0x5e],dh
   140014dea:	add    al,BYTE PTR [rax]
   140014dec:	add    BYTE PTR [rax],al
   140014dee:	add    BYTE PTR [rax],al
   140014df0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014df1:	pop    rsi
   140014df2:	add    al,BYTE PTR [rax]
   140014df4:	add    BYTE PTR [rax],al
   140014df6:	add    BYTE PTR [rax],al
   140014df8:	hlt    
   140014df9:	pop    rsi
   140014dfa:	add    al,BYTE PTR [rax]
   140014dfc:	add    BYTE PTR [rax],al
   140014dfe:	add    BYTE PTR [rax],al
   140014e00:	cmp    al,0x5f
   140014e02:	add    al,BYTE PTR [rax]
   140014e04:	add    BYTE PTR [rax],al
   140014e06:	add    BYTE PTR [rax],al
   140014e08:	mov    BYTE PTR [rdi+0x2],bl
   140014e0b:	add    BYTE PTR [rax],al
   140014e0d:	add    BYTE PTR [rax],al
   140014e0f:	add    BYTE PTR [rdx+0x25f],ah
   140014e15:	add    BYTE PTR [rax],al
   140014e17:	add    BYTE PTR [rsi],cl
   140014e19:	(bad)  
   140014e1a:	add    al,BYTE PTR [rax]
   140014e1c:	add    BYTE PTR [rax],al
   140014e1e:	add    BYTE PTR [rax],al
   140014e20:	cmp    ah,BYTE PTR [rax+0x2]
   140014e23:	add    BYTE PTR [rax],al
   140014e25:	add    BYTE PTR [rax],al
   140014e27:	add    BYTE PTR [rax+riz*2+0x2],ch
   140014e2b:	add    BYTE PTR [rax],al
   140014e2d:	add    BYTE PTR [rax],al
   140014e2f:	add    BYTE PTR [rsi+0x260],cl
   140014e35:	add    BYTE PTR [rax],al
   140014e37:	add    al,dl
   140014e39:	(bad)  
   140014e3a:	add    al,BYTE PTR [rax]
   140014e3c:	add    BYTE PTR [rax],al
   140014e3e:	add    BYTE PTR [rax],al
   140014e40:	out    dx,al
   140014e41:	(bad)  
   140014e42:	add    al,BYTE PTR [rax]
   140014e44:	add    BYTE PTR [rax],al
   140014e46:	add    BYTE PTR [rax],al
   140014e48:	and    al,0x61
   140014e4a:	add    al,BYTE PTR [rax]
   140014e4c:	add    BYTE PTR [rax],al
   140014e4e:	add    BYTE PTR [rax],al
   140014e50:	ins    BYTE PTR es:[rdi],dx
   140014e51:	(bad)  
   140014e52:	add    al,BYTE PTR [rax]
   140014e54:	add    BYTE PTR [rax],al
   140014e56:	add    BYTE PTR [rax],al
   140014e58:	stos   BYTE PTR es:[rdi],al
   140014e59:	(bad)  
   140014e5a:	add    al,BYTE PTR [rax]
   140014e5c:	add    BYTE PTR [rax],al
   140014e5e:	add    BYTE PTR [rax],al
   140014e60:	mul    BYTE PTR [rcx+0x2]
   140014e63:	add    BYTE PTR [rax],al
   140014e65:	add    BYTE PTR [rax],al
   140014e67:	add    BYTE PTR [rdx+riz*2],bl
   140014e6a:	add    al,BYTE PTR [rax]
   140014e6c:	add    BYTE PTR [rax],al
   140014e6e:	add    BYTE PTR [rax],al
   140014e70:	rex.R (bad) 
   140014e73:	add    BYTE PTR [rax],al
   140014e75:	add    BYTE PTR [rax],al
   140014e77:	add    BYTE PTR [rdx+riz*2+0x2],ch
   140014e7b:	add    BYTE PTR [rax],al
   140014e7d:	add    BYTE PTR [rax],al
   140014e7f:	add    BYTE PTR [rax+0x262],ah
   140014e85:	add    BYTE PTR [rax],al
   140014e87:	add    ah,cl
   140014e89:	(bad)  
   140014e8b:	add    BYTE PTR [rax],al
   140014e8d:	add    BYTE PTR [rax],al
   140014e8f:	add    BYTE PTR [rbx+riz*2],cl
   140014e92:	add    al,BYTE PTR [rax]
   140014e94:	add    BYTE PTR [rax],al
   140014e96:	add    BYTE PTR [rax],al
   140014e98:	movsxd eax,DWORD PTR ds:[rdx]
   140014e9b:	add    BYTE PTR [rax],al
   140014e9d:	add    BYTE PTR [rax],al
   140014e9f:	add    BYTE PTR [rax+0x63],ch
   140014ea2:	add    al,BYTE PTR [rax]
   140014ea4:	add    BYTE PTR [rax],al
   140014ea6:	add    BYTE PTR [rax],al
   140014ea8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014ea9:	movsxd eax,DWORD PTR [rdx]
   140014eab:	add    BYTE PTR [rax],al
   140014ead:	add    BYTE PTR [rax],al
   140014eaf:	add    al,dl
   140014eb1:	movsxd eax,DWORD PTR [rdx]
   140014eb3:	add    BYTE PTR [rax],al
   140014eb5:	add    BYTE PTR [rax],al
   140014eb7:	add    BYTE PTR [rdx],al
   140014eb9:	add    al,BYTE PTR fs:[rax]
   140014ebc:	add    BYTE PTR [rax],al
   140014ebe:	add    BYTE PTR [rax],al
   140014ec0:	cmp    ah,BYTE PTR [rdx+rax*1+0x0]
   140014ec4:	add    BYTE PTR [rax],al
   140014ec6:	add    BYTE PTR [rax],al
   140014ec8:	je     0x140014f2e
   140014eca:	add    al,BYTE PTR [rax]
   140014ecc:	add    BYTE PTR [rax],al
   140014ece:	add    BYTE PTR [rax],al
   140014ed0:	mov    dl,0x64
   140014ed2:	add    al,BYTE PTR [rax]
   140014ed4:	add    BYTE PTR [rax],al
   140014ed6:	add    BYTE PTR [rax],al
   140014ed8:	call   0x140015141
   140014edd:	add    BYTE PTR [rax],al
   140014edf:	add    BYTE PTR [rdx],bl
   140014ee1:	add    al,BYTE PTR gs:[rax]
   140014ee4:	add    BYTE PTR [rax],al
   140014ee6:	add    BYTE PTR [rax],al
   140014ee8:	rex.WRX
   140014ee9:	add    al,BYTE PTR gs:[rax]
   140014eec:	add    BYTE PTR [rax],al
   140014eee:	add    BYTE PTR [rax],al
   140014ef0:	test   BYTE PTR [rbp+0x2],ah
   140014ef3:	add    BYTE PTR [rax],al
   140014ef5:	add    BYTE PTR [rax],al
   140014ef7:	add    BYTE PTR [rax+0x265],bh
   140014efd:	add    BYTE PTR [rax],al
   140014eff:	add    dh,ch
   140014f01:	add    al,BYTE PTR gs:[rax]
   140014f04:	add    BYTE PTR [rax],al
   140014f06:	add    BYTE PTR [rax],al
   140014f08:	and    BYTE PTR [rsi+0x2],ah
   140014f0b:	add    BYTE PTR [rax],al
   140014f0d:	add    BYTE PTR [rax],al
   140014f0f:	add    BYTE PTR [rsi+riz*2+0x2],dl
   140014f13:	add    BYTE PTR [rax],al
   140014f15:	add    BYTE PTR [rax],al
   140014f17:	add    BYTE PTR [rdx+0x266],dl
   140014f1d:	add    BYTE PTR [rax],al
   140014f1f:	add    ah,cl
   140014f21:	data16 add al,BYTE PTR [rax]
   140014f24:	add    BYTE PTR [rax],al
   140014f26:	add    BYTE PTR [rax],al
   140014f28:	add    al,0x67
   140014f2a:	add    al,BYTE PTR [rax]
   140014f2c:	add    BYTE PTR [rax],al
   140014f2e:	add    BYTE PTR [rax],al
   140014f30:	add    al,BYTE PTR ds:[eax]
   140014f34:	add    BYTE PTR [rax],al
   140014f36:	add    BYTE PTR [rax],al
   140014f38:	outs   dx,BYTE PTR ds:[rsi]
   140014f39:	add    al,BYTE PTR [eax]
   140014f3c:	add    BYTE PTR [rax],al
   140014f3e:	add    BYTE PTR [rax],al
   140014f40:	sahf   
   140014f41:	add    al,BYTE PTR [eax]
   140014f44:	add    BYTE PTR [rax],al
   140014f46:	add    BYTE PTR [rax],al
   140014f48:	int3   
   140014f49:	add    al,BYTE PTR [eax]
   140014f4c:	add    BYTE PTR [rax],al
   140014f4e:	add    BYTE PTR [rax],al
   140014f50:	or     ch,BYTE PTR [rax+0x2]
   140014f53:	add    BYTE PTR [rax],al
   140014f55:	add    BYTE PTR [rax],al
   140014f57:	add    BYTE PTR [rax+rbp*2+0x2],dl
   140014f5b:	add    BYTE PTR [rax],al
   140014f5d:	add    BYTE PTR [rax],al
   140014f5f:	add    BYTE PTR [rax+0x268],al
   140014f65:	add    BYTE PTR [rax],al
   140014f67:	add    BYTE PTR [rax+rbp*2+0x2],bh
   140014f6e:	add    BYTE PTR [rax],al
   140014f70:	out    0x68,al
   140014f72:	add    al,BYTE PTR [rax]
   140014f74:	add    BYTE PTR [rax],al
   140014f76:	add    BYTE PTR [rax],al
   140014f78:	and    BYTE PTR [rcx+0x2],ch
   140014f7b:	add    BYTE PTR [rax],al
   140014f7d:	add    BYTE PTR [rax],al
   140014f7f:	add    BYTE PTR [rdx+0x69],bl
   140014f82:	add    al,BYTE PTR [rax]
   140014f84:	add    BYTE PTR [rax],al
   140014f86:	add    BYTE PTR [rax],al
   140014f88:	(bad)  
   140014f89:	imul   eax,DWORD PTR [rdx],0x0
   140014f8f:	add    dh,dl
   140014f91:	imul   eax,DWORD PTR [rdx],0x0
   140014f97:	add    BYTE PTR [rsi],cl
   140014f99:	push   0x2
   140014f9b:	add    BYTE PTR [rax],al
   140014f9d:	add    BYTE PTR [rax],al
   140014f9f:	add    BYTE PTR [rsi+0x6a],al
   140014fa2:	add    al,BYTE PTR [rax]
   140014fa4:	add    BYTE PTR [rax],al
   140014fa6:	add    BYTE PTR [rax],al
   140014fa8:	(bad)  
   140014fa9:	push   0x2
   140014fab:	add    BYTE PTR [rax],al
   140014fad:	add    BYTE PTR [rax],al
   140014faf:	add    BYTE PTR [rax+0x6a],bh
   140014fb2:	add    al,BYTE PTR [rax]
   140014fb4:	add    BYTE PTR [rax],al
   140014fb6:	add    BYTE PTR [rax],al
   140014fb8:	movabs ds:0xc60000000000026a,al
   140014fc1:	push   0x2
   140014fc3:	add    BYTE PTR [rax],al
   140014fc5:	add    BYTE PTR [rax],al
   140014fc7:	add    BYTE PTR [rdx],dl
   140014fc9:	imul   eax,DWORD PTR [rdx],0x0
   140014fcc:	add    BYTE PTR [rax],al
   140014fce:	add    BYTE PTR [rax],al
   140014fd0:	xor    al,0x6b
   140014fd2:	add    al,BYTE PTR [rax]
   140014fd4:	add    BYTE PTR [rax],al
   140014fd6:	add    BYTE PTR [rax],al
   140014fd8:	(bad)  
   140014fd9:	imul   eax,DWORD PTR [rdx],0x0
   140014fdc:	add    BYTE PTR [rax],al
   140014fde:	add    BYTE PTR [rax],al
   140014fe0:	mov    WORD PTR [rbx+0x2],gs
   140014fe3:	add    BYTE PTR [rax],al
   140014fe5:	add    BYTE PTR [rax],al
   140014fe7:	add    ah,cl
   140014fe9:	imul   eax,DWORD PTR [rdx],0x0
   140014fec:	add    BYTE PTR [rax],al
   140014fee:	add    BYTE PTR [rax],al
   140014ff0:	in     al,dx
   140014ff1:	imul   eax,DWORD PTR [rdx],0x0
   140014ff4:	add    BYTE PTR [rax],al
   140014ff6:	add    BYTE PTR [rax],al
   140014ff8:	sbb    BYTE PTR [rdx+rax*1+0x0],ch
   140014ffc:	add    BYTE PTR [rax],al
   140014ffe:	add    BYTE PTR [rax],al
   140015000:	push   rdx
   140015001:	ins    BYTE PTR es:[rdi],dx
   140015002:	add    al,BYTE PTR [rax]
   140015004:	add    BYTE PTR [rax],al
   140015006:	add    BYTE PTR [rax],al
   140015008:	sub    BYTE PTR [rdx+rax*1+0x0],0x0
   14001500d:	add    BYTE PTR [rax],al
   14001500f:	add    BYTE PTR [rsi+0x26c],ah
   140015015:	add    BYTE PTR [rax],al
   140015017:	add    dl,ah
   140015019:	ins    BYTE PTR es:[rdi],dx
   14001501a:	add    al,BYTE PTR [rax]
   14001501c:	add    BYTE PTR [rax],al
   14001501e:	add    BYTE PTR [rax],al
   140015020:	or     BYTE PTR [rbp+0x2],ch
   140015023:	add    BYTE PTR [rax],al
   140015025:	add    BYTE PTR [rax],al
   140015027:	add    BYTE PTR [rsi],ch
   140015029:	ins    DWORD PTR es:[rdi],dx
   14001502a:	add    al,BYTE PTR [rax]
   14001502c:	add    BYTE PTR [rax],al
   14001502e:	add    BYTE PTR [rax],al
   140015030:	pop    rsi
   140015031:	ins    DWORD PTR es:[rdi],dx
   140015032:	add    al,BYTE PTR [rax]
   140015034:	add    BYTE PTR [rax],al
   140015036:	add    BYTE PTR [rax],al
   140015038:	je     0x1400150a7
   14001503a:	add    al,BYTE PTR [rax]
   14001503c:	add    BYTE PTR [rax],al
   14001503e:	add    BYTE PTR [rax],al
   140015040:	mov    ch,BYTE PTR [rbp+0x2]
   140015043:	add    BYTE PTR [rax],al
   140015045:	add    BYTE PTR [rax],al
   140015047:	add    BYTE PTR [rsi+0x26d],dh
   14001504d:	add    BYTE PTR [rax],al
   14001504f:	add    dl,dl
   140015051:	ins    DWORD PTR es:[rdi],dx
   140015052:	add    al,BYTE PTR [rax]
   140015054:	add    BYTE PTR [rax],al
   140015056:	add    BYTE PTR [rax],al
   140015058:	out    dx,al
   140015059:	ins    DWORD PTR es:[rdi],dx
   14001505a:	add    al,BYTE PTR [rax]
   14001505c:	add    BYTE PTR [rax],al
   14001505e:	add    BYTE PTR [rax],al
   140015060:	(bad)  
   140015061:	outs   dx,BYTE PTR ds:[rsi]
   140015062:	add    al,BYTE PTR [rax]
   140015064:	add    BYTE PTR [rax],al
   140015066:	add    BYTE PTR [rax],al
   140015068:	outs   dx,BYTE PTR ds:[rsi]
   14001506a:	add    al,BYTE PTR [rax]
   14001506c:	add    BYTE PTR [rax],al
   14001506e:	add    BYTE PTR [rax],al
   140015070:	jp     0x1400150e0
   140015072:	add    al,BYTE PTR [rax]
   140015074:	add    BYTE PTR [rax],al
   140015076:	add    BYTE PTR [rax],al
   140015078:	test   al,0x6e
   14001507a:	add    al,BYTE PTR [rax]
   14001507c:	add    BYTE PTR [rax],al
   14001507e:	add    BYTE PTR [rax],al
   140015080:	(bad)  
   140015081:	outs   dx,BYTE PTR ds:[rsi]
   140015082:	add    al,BYTE PTR [rax]
   140015084:	add    BYTE PTR [rax],al
   140015086:	add    BYTE PTR [rax],al
   140015088:	adc    al,0x6f
   14001508a:	add    al,BYTE PTR [rax]
   14001508c:	add    BYTE PTR [rax],al
   14001508e:	add    BYTE PTR [rax],al
   140015090:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140015092:	add    al,BYTE PTR [rax]
   140015094:	add    BYTE PTR [rax],al
   140015096:	add    BYTE PTR [rax],al
   140015098:	outs   dx,BYTE PTR ds:[rsi]
   140015099:	outs   dx,DWORD PTR ds:[rsi]
   14001509a:	add    al,BYTE PTR [rax]
   14001509c:	add    BYTE PTR [rax],al
   14001509e:	add    BYTE PTR [rax],al
   1400150a0:	stos   BYTE PTR es:[rdi],al
   1400150a1:	outs   dx,DWORD PTR ds:[rsi]
   1400150a2:	add    al,BYTE PTR [rax]
   1400150a4:	add    BYTE PTR [rax],al
   1400150a6:	add    BYTE PTR [rax],al
   1400150a8:	loop   0x1400150d3
   1400150aa:	add    al,BYTE PTR [rax]
   1400150ac:	add    BYTE PTR [rax],al
   1400150ae:	add    BYTE PTR [rax],al
   1400150b0:	movabs ds:0x7600000000000229,al
   1400150b9:	sub    DWORD PTR [rdx],eax
   1400150bb:	add    BYTE PTR [rax],al
   1400150bd:	add    BYTE PTR [rax],al
   1400150bf:	add    BYTE PTR [rdx+0x29],al
   1400150c2:	add    al,BYTE PTR [rax]
   1400150c4:	add    BYTE PTR [rax],al
   1400150c6:	add    BYTE PTR [rax],al
   1400150c8:	clc    
   1400150c9:	sub    BYTE PTR [rdx],al
   1400150cb:	add    BYTE PTR [rax],al
   1400150cd:	add    BYTE PTR [rax],al
   1400150cf:	add    BYTE PTR [rdx+0x228],bh
   1400150d5:	add    BYTE PTR [rax],al
   1400150d7:	add    BYTE PTR [rax+rbp*1+0x2],cl
   1400150de:	add    BYTE PTR [rax],al
   1400150e0:	pop    rsp
   1400150e1:	sub    BYTE PTR [rdx],al
   1400150e3:	add    BYTE PTR [rax],al
   1400150e5:	add    BYTE PTR [rax],al
   1400150e7:	add    BYTE PTR [rdx],ah
   1400150e9:	sub    BYTE PTR [rdx],al
   1400150eb:	add    BYTE PTR [rax],al
   1400150ed:	add    BYTE PTR [rax],al
   1400150ef:	add    dl,ch
   1400150f1:	(bad)  
   1400150f2:	add    al,BYTE PTR [rax]
   1400150f4:	add    BYTE PTR [rax],al
   1400150f6:	add    BYTE PTR [rax],al
   1400150f8:	mov    al,0x27
   1400150fa:	add    al,BYTE PTR [rax]
   1400150fc:	add    BYTE PTR [rax],al
   1400150fe:	add    BYTE PTR [rax],al
   140015100:	jb     0x140015129
   140015102:	add    al,BYTE PTR [rax]
   140015104:	add    BYTE PTR [rax],al
   140015106:	add    BYTE PTR [rax],al
   140015108:	rex (bad) 
   14001510a:	add    al,BYTE PTR [rax]
   14001510c:	add    BYTE PTR [rax],al
   14001510e:	add    BYTE PTR [rax],al
   140015110:	or     ah,BYTE PTR [rdi]
   140015112:	add    al,BYTE PTR [rax]
   140015114:	add    BYTE PTR [rax],al
   140015116:	add    BYTE PTR [rax],al
   140015118:	movabs ds:0xd600000000000226,al
   140015121:	add    al,BYTE PTR es:[rax]
   140015124:	add    BYTE PTR [rax],al
   140015126:	add    BYTE PTR [rax],al
   140015128:	ins    BYTE PTR es:[rdi],dx
   140015129:	add    al,BYTE PTR es:[rax]
   14001512c:	add    BYTE PTR [rax],al
   14001512e:	add    BYTE PTR [rax],al
   140015130:	cs add al,BYTE PTR es:[rax]
   140015134:	add    BYTE PTR [rax],al
   140015136:	add    BYTE PTR [rax],al
   140015138:	hlt    
   140015139:	and    eax,0x2
   14001513e:	add    BYTE PTR [rax],al
   140015140:	mov    esp,0x225
   140015145:	add    BYTE PTR [rax],al
   140015147:	add    BYTE PTR [rbp+riz*1+0x2],cl
   14001514e:	add    BYTE PTR [rax],al
   140015150:	fs and eax,0x2
   140015156:	add    BYTE PTR [rax],al
   140015158:	cmp    ah,BYTE PTR [rip+0x2]        # 0x140015160
   14001515e:	add    BYTE PTR [rax],al
   140015160:	cld    
   140015161:	and    al,0x2
   140015163:	add    BYTE PTR [rax],al
   140015165:	add    BYTE PTR [rax],al
   140015167:	add    dl,dl
   140015169:	and    al,0x2
   14001516b:	add    BYTE PTR [rax],al
   14001516d:	add    BYTE PTR [rax],al
   14001516f:	add    BYTE PTR [rax+0x224],ah
   140015175:	add    BYTE PTR [rax],al
   140015177:	add    BYTE PTR [rsi+0x24],bh
   14001517a:	add    al,BYTE PTR [rax]
   14001517c:	add    BYTE PTR [rax],al
   14001517e:	add    BYTE PTR [rax],al
   140015180:	push   rax
   140015181:	and    al,0x2
   140015183:	add    BYTE PTR [rax],al
   140015185:	add    BYTE PTR [rax],al
   140015187:	add    BYTE PTR [rax],ch
   140015189:	and    al,0x2
   14001518b:	add    BYTE PTR [rax],al
   14001518d:	add    BYTE PTR [rax],al
   14001518f:	add    dh,bh
   140015191:	and    eax,DWORD PTR [rdx]
   140015193:	add    BYTE PTR [rax],al
   140015195:	add    BYTE PTR [rax],al
   140015197:	add    al,dl
   140015199:	and    eax,DWORD PTR [rdx]
   14001519b:	add    BYTE PTR [rax],al
   14001519d:	add    BYTE PTR [rax],al
   14001519f:	add    BYTE PTR [rsi+0x223],al
   1400151a5:	add    BYTE PTR [rax],al
   1400151a7:	add    BYTE PTR [rdx+0x23],bl
   1400151aa:	add    al,BYTE PTR [rax]
   1400151ac:	add    BYTE PTR [rax],al
   1400151ae:	add    BYTE PTR [rax],al
   1400151b0:	and    eax,DWORD PTR cs:[rdx]
   1400151b3:	add    BYTE PTR [rax],al
   1400151b5:	add    BYTE PTR [rax],al
   1400151b7:	add    BYTE PTR [rbx+riz*1],al
   1400151ba:	add    al,BYTE PTR [rax]
   1400151bc:	add    BYTE PTR [rax],al
   1400151be:	add    BYTE PTR [rax],al
   1400151c0:	out    0x22,al
   1400151c2:	add    al,BYTE PTR [rax]
   1400151c4:	add    BYTE PTR [rax],al
   1400151c6:	add    BYTE PTR [rax],al
   1400151c8:	mov    dh,0x22
   1400151ca:	add    al,BYTE PTR [rax]
   1400151cc:	add    BYTE PTR [rax],al
   1400151ce:	add    BYTE PTR [rax],al
   1400151d0:	xchg   BYTE PTR [rdx],ah
   1400151d2:	add    al,BYTE PTR [rax]
   1400151d4:	add    BYTE PTR [rax],al
   1400151d6:	add    BYTE PTR [rax],al
   1400151d8:	push   rsi
   1400151d9:	and    al,BYTE PTR [rdx]
   1400151db:	add    BYTE PTR [rax],al
   1400151dd:	add    BYTE PTR [rax],al
   1400151df:	add    BYTE PTR [rsi],dl
   1400151e1:	and    al,BYTE PTR [rdx]
   1400151e3:	add    BYTE PTR [rax],al
   1400151e5:	add    BYTE PTR [rax],al
   1400151e7:	add    dl,ch
   1400151e9:	and    DWORD PTR [rdx],eax
   1400151eb:	add    BYTE PTR [rax],al
   1400151ed:	add    BYTE PTR [rax],al
   1400151ef:	add    BYTE PTR [rsi+0x221],dh
   1400151f5:	add    BYTE PTR [rax],al
   1400151f7:	add    BYTE PTR [rcx+riz*1+0x2],cl
   1400151fe:	add    BYTE PTR [rax],al
   140015200:	(bad)  
   140015201:	and    DWORD PTR [rdx],eax
   140015203:	add    BYTE PTR [rax],al
   140015205:	add    BYTE PTR [rax],al
   140015207:	add    BYTE PTR [rsi],ah
   140015209:	and    DWORD PTR [rdx],eax
   14001520b:	add    BYTE PTR [rax],al
   14001520d:	add    BYTE PTR [rax],al
   14001520f:	add    al,bh
   140015211:	and    BYTE PTR [rdx],al
   140015213:	add    BYTE PTR [rax],al
   140015215:	add    BYTE PTR [rax],al
   140015217:	add    BYTE PTR [rax+riz*1+0x2],bh
   14001521e:	add    BYTE PTR [rax],al
   140015220:	mov    WORD PTR [rax],fs
   140015222:	add    al,BYTE PTR [rax]
   140015224:	add    BYTE PTR [rax],al
   140015226:	add    BYTE PTR [rax],al
   140015228:	pop    rdx
   140015229:	and    BYTE PTR [rdx],al
   14001522b:	add    BYTE PTR [rax],al
   14001522d:	add    BYTE PTR [rax],al
   14001522f:	add    BYTE PTR [rdx],ch
   140015231:	and    BYTE PTR [rdx],al
   140015233:	add    BYTE PTR [rax],al
   140015235:	add    BYTE PTR [rax],al
   140015237:	add    al,bh
   140015239:	(bad)  
   14001523a:	add    al,BYTE PTR [rax]
   14001523c:	add    BYTE PTR [rax],al
   14001523e:	add    BYTE PTR [rax],al
   140015240:	(bad)  
   140015241:	(bad)  
   140015242:	add    al,BYTE PTR [rax]
   140015244:	add    BYTE PTR [rax],al
   140015246:	add    BYTE PTR [rax],al
   140015248:	xchg   esi,eax
   140015249:	(bad)  
   14001524a:	add    al,BYTE PTR [rax]
   14001524c:	add    BYTE PTR [rax],al
   14001524e:	add    BYTE PTR [rax],al
   140015250:	(bad)  
   140015251:	(bad)  
   140015252:	add    al,BYTE PTR [rax]
   140015254:	add    BYTE PTR [rax],al
   140015256:	add    BYTE PTR [rax],al
   140015258:	sub    al,0x1f
   14001525a:	add    al,BYTE PTR [rax]
   14001525c:	add    BYTE PTR [rax],al
   14001525e:	add    BYTE PTR [rax],al
   140015260:	clc    
   140015261:	(bad)  
   140015262:	add    al,BYTE PTR [rax]
   140015264:	add    BYTE PTR [rax],al
   140015266:	add    BYTE PTR [rax],al
   140015268:	(bad)  
   140015269:	(bad)  
   14001526a:	add    al,BYTE PTR [rax]
   14001526c:	add    BYTE PTR [rax],al
   14001526e:	add    BYTE PTR [rax],al
   140015270:	test   al,0x1e
   140015272:	add    al,BYTE PTR [rax]
   140015274:	add    BYTE PTR [rax],al
   140015276:	add    BYTE PTR [rax],al
   140015278:	(bad)  
   140015279:	(bad)  
   14001527a:	add    al,BYTE PTR [rax]
   14001527c:	add    BYTE PTR [rax],al
   14001527e:	add    BYTE PTR [rax],al
   140015280:	(bad)  
   140015281:	(bad)  
   140015282:	add    al,BYTE PTR [rax]
   140015284:	add    BYTE PTR [rax],al
   140015286:	add    BYTE PTR [rax],al
   140015288:	cmp    bl,BYTE PTR [rsi]
   14001528a:	add    al,BYTE PTR [rax]
   14001528c:	add    BYTE PTR [rax],al
   14001528e:	add    BYTE PTR [rax],al
   140015290:	(bad)  
   140015291:	sbb    eax,0x2
   140015296:	add    BYTE PTR [rax],al
   140015298:	fcomp  DWORD PTR [rip+0x2]        # 0x1400152a0
   14001529e:	add    BYTE PTR [rax],al
   1400152a0:	stos   BYTE PTR es:[rdi],al
   1400152a1:	sbb    eax,0x2
   1400152a6:	add    BYTE PTR [rax],al
   1400152a8:	pop    rsp
   1400152a9:	sbb    eax,0x2
   1400152ae:	add    BYTE PTR [rax],al
   1400152b0:	xor    al,0x1d
   1400152b2:	add    al,BYTE PTR [rax]
   1400152b4:	add    BYTE PTR [rax],al
   1400152b6:	add    BYTE PTR [rax],al
   1400152b8:	or     BYTE PTR [rip+0x2],bl        # 0x1400152c0
   1400152be:	add    BYTE PTR [rax],al
   1400152c0:	in     al,0x1c
   1400152c2:	add    al,BYTE PTR [rax]
   1400152c4:	add    BYTE PTR [rax],al
   1400152c6:	add    BYTE PTR [rax],al
   1400152c8:	mov    ah,0x1c
   1400152ca:	add    al,BYTE PTR [rax]
   1400152cc:	add    BYTE PTR [rax],al
   1400152ce:	add    BYTE PTR [rax],al
   1400152d0:	mov    WORD PTR [rdx+rax*1],ds
   1400152d3:	add    BYTE PTR [rax],al
   1400152d5:	add    BYTE PTR [rax],al
   1400152d7:	add    BYTE PTR [rax+0x1c],ah
   1400152da:	add    al,BYTE PTR [rax]
   1400152dc:	add    BYTE PTR [rax],al
   1400152de:	add    BYTE PTR [rax],al
   1400152e0:	ds sbb al,0x2
   1400152e3:	add    BYTE PTR [rax],al
   1400152e5:	add    BYTE PTR [rax],al
   1400152e7:	add    BYTE PTR [rsp+rbx*1],dl
   1400152ea:	add    al,BYTE PTR [rax]
   1400152ec:	add    BYTE PTR [rax],al
   1400152ee:	add    BYTE PTR [rax],al
   1400152f0:	in     al,0x1b
   1400152f2:	add    al,BYTE PTR [rax]
   1400152f4:	add    BYTE PTR [rax],al
   1400152f6:	add    BYTE PTR [rax],al
   1400152f8:	cwde   
   1400152f9:	sbb    eax,DWORD PTR [rdx]
   1400152fb:	add    BYTE PTR [rax],al
   1400152fd:	add    BYTE PTR [rax],al
   1400152ff:	add    BYTE PTR [rdx+0x1b],ch
   140015302:	add    al,BYTE PTR [rax]
   140015304:	add    BYTE PTR [rax],al
   140015306:	add    BYTE PTR [rax],al
   140015308:	cmp    al,0x1b
   14001530a:	add    al,BYTE PTR [rax]
   14001530c:	add    BYTE PTR [rax],al
   14001530e:	add    BYTE PTR [rax],al
   140015310:	adc    bl,BYTE PTR [rbx]
   140015312:	add    al,BYTE PTR [rax]
   140015314:	add    BYTE PTR [rax],al
   140015316:	add    BYTE PTR [rax],al
   140015318:	enter  0x21a,0x0
   14001531c:	add    BYTE PTR [rax],al
   14001531e:	add    BYTE PTR [rax],al
   140015320:	xchg   esp,eax
   140015321:	sbb    al,BYTE PTR [rdx]
   140015323:	add    BYTE PTR [rax],al
   140015325:	add    BYTE PTR [rax],al
   140015327:	add    BYTE PTR [rdx+rbx*1+0x2],dh
   14001532b:	add    BYTE PTR [rax],al
   14001532d:	add    BYTE PTR [rax],al
   14001532f:	add    BYTE PTR [rax+0x1a],cl
   140015332:	add    al,BYTE PTR [rax]
   140015334:	add    BYTE PTR [rax],al
   140015336:	add    BYTE PTR [rax],al
   140015338:	and    al,0x1a
   14001533a:	add    al,BYTE PTR [rax]
   14001533c:	add    BYTE PTR [rax],al
   14001533e:	add    BYTE PTR [rax],al
   140015340:	hlt    
   140015341:	sbb    DWORD PTR [rdx],eax
   140015343:	add    BYTE PTR [rax],al
   140015345:	add    BYTE PTR [rax],al
   140015347:	add    ah,cl
   140015349:	sbb    DWORD PTR [rdx],eax
   14001534b:	add    BYTE PTR [rax],al
   14001534d:	add    BYTE PTR [rax],al
   14001534f:	add    BYTE PTR [rax+0x219],ah
   140015355:	add    BYTE PTR [rax],al
   140015357:	add    BYTE PTR [rdx+0x219],al
   14001535d:	add    BYTE PTR [rax],al
   14001535f:	add    BYTE PTR [rcx+rbx*1+0x2],bl
   140015363:	add    BYTE PTR [rax],al
   140015365:	add    BYTE PTR [rax],al
   140015367:	add    BYTE PTR [rcx+rbx*1],ch
   14001536a:	add    al,BYTE PTR [rax]
   14001536c:	add    BYTE PTR [rax],al
   14001536e:	add    BYTE PTR [rax],al
   140015370:	loopne 0x14001538a
   140015372:	add    al,BYTE PTR [rax]
   140015374:	add    BYTE PTR [rax],al
   140015376:	add    BYTE PTR [rax],al
   140015378:	mov    dl,0x18
   14001537a:	add    al,BYTE PTR [rax]
   14001537c:	add    BYTE PTR [rax],al
   14001537e:	add    BYTE PTR [rax],al
   140015380:	test   BYTE PTR [rax],bl
   140015382:	add    al,BYTE PTR [rax]
   140015384:	add    BYTE PTR [rax],al
   140015386:	add    BYTE PTR [rax],al
   140015388:	pop    rdx
   140015389:	sbb    BYTE PTR [rdx],al
   14001538b:	add    BYTE PTR [rax],al
   14001538d:	add    BYTE PTR [rax],al
   14001538f:	add    BYTE PTR [rax+rbx*1],bh
   140015392:	add    al,BYTE PTR [rax]
   140015394:	add    BYTE PTR [rax],al
   140015396:	add    BYTE PTR [rax],al
   140015398:	adc    bl,BYTE PTR [rax]
   14001539a:	add    al,BYTE PTR [rax]
   14001539c:	add    BYTE PTR [rax],al
   14001539e:	add    BYTE PTR [rax],al
   1400153a0:	loop   0x1400153b9
   1400153a2:	add    al,BYTE PTR [rax]
   1400153a4:	add    BYTE PTR [rax],al
   1400153a6:	add    BYTE PTR [rax],al
   1400153a8:	mov    dl,0x17
   1400153aa:	add    al,BYTE PTR [rax]
   1400153ac:	add    BYTE PTR [rax],al
   1400153ae:	add    BYTE PTR [rax],al
   1400153b0:	adc    BYTE PTR [rdi],0x2
   1400153b3:	add    BYTE PTR [rax],al
   1400153b5:	add    BYTE PTR [rax],al
   1400153b7:	add    BYTE PTR [rax+0x17],dl
   1400153ba:	add    al,BYTE PTR [rax]
   1400153bc:	add    BYTE PTR [rax],al
   1400153be:	add    BYTE PTR [rax],al
   1400153c0:	adc    BYTE PTR [rdi],dl
   1400153c2:	add    al,BYTE PTR [rax]
   1400153c4:	add    BYTE PTR [rax],al
   1400153c6:	add    BYTE PTR [rax],al
   1400153c8:	in     al,0x16
   1400153ca:	add    al,BYTE PTR [rax]
   1400153cc:	add    BYTE PTR [rax],al
   1400153ce:	add    BYTE PTR [rax],al
   1400153d0:	mov    al,0x16
   1400153d2:	add    al,BYTE PTR [rax]
   1400153d4:	add    BYTE PTR [rax],al
   1400153d6:	add    BYTE PTR [rax],al
   1400153d8:	mov    dl,BYTE PTR [rsi]
   1400153da:	add    al,BYTE PTR [rax]
   1400153dc:	add    BYTE PTR [rax],al
   1400153de:	add    BYTE PTR [rax],al
   1400153e0:	(bad)  
   1400153e1:	(bad)  
   1400153e2:	add    al,BYTE PTR [rax]
   1400153e4:	add    BYTE PTR [rax],al
   1400153e6:	add    BYTE PTR [rax],al
   1400153e8:	cs (bad) 
   1400153ea:	add    al,BYTE PTR [rax]
   1400153ec:	add    BYTE PTR [rax],al
   1400153ee:	add    BYTE PTR [rax],al
   1400153f0:	fcom   DWORD PTR [rip+0x2]        # 0x1400153f8
   1400153f6:	add    BYTE PTR [rax],al
   1400153f8:	cwde   
   1400153f9:	adc    eax,0x2
   1400153fe:	add    BYTE PTR [rax],al
   140015400:	(bad)  
   140015401:	adc    eax,0x2
   140015406:	add    BYTE PTR [rax],al
   140015408:	xor    dl,BYTE PTR [rip+0x2]        # 0x140015410
   14001540e:	add    BYTE PTR [rax],al
   140015410:	(bad)  
   140015411:	adc    eax,0x2
   140015416:	add    BYTE PTR [rax],al
   140015418:	fcom   DWORD PTR [rdx+rax*1]
   14001541b:	add    BYTE PTR [rax],al
   14001541d:	add    BYTE PTR [rax],al
   14001541f:	add    BYTE PTR [rax+0x214],ch
   140015425:	add    BYTE PTR [rax],al
   140015427:	add    BYTE PTR [rsp+rdx*1+0x2],dl
   14001542b:	add    BYTE PTR [rax],al
   14001542d:	add    BYTE PTR [rax],al
   14001542f:	add    BYTE PTR [rdx],bh
   140015431:	adc    al,0x2
   140015433:	add    BYTE PTR [rax],al
   140015435:	add    BYTE PTR [rax],al
   140015437:	add    BYTE PTR [rsi],dl
   140015439:	adc    al,0x2
   14001543b:	add    BYTE PTR [rax],al
   14001543d:	add    BYTE PTR [rax],al
   14001543f:	add    al,dh
   140015441:	adc    eax,DWORD PTR [rdx]
   140015443:	add    BYTE PTR [rax],al
   140015445:	add    BYTE PTR [rax],al
   140015447:	add    BYTE PTR [rax+0x213],ah
   14001544d:	add    BYTE PTR [rax],al
   14001544f:	add    BYTE PTR [rax+0x13],bh
   140015452:	add    al,BYTE PTR [rax]
   140015454:	add    BYTE PTR [rax],al
   140015456:	add    BYTE PTR [rax],al
   140015458:	and    al,0x13
   14001545a:	add    al,BYTE PTR [rax]
   14001545c:	add    BYTE PTR [rax],al
   14001545e:	add    BYTE PTR [rax],al
   140015460:	cld    
   140015461:	adc    al,BYTE PTR [rdx]
   140015463:	add    BYTE PTR [rax],al
   140015465:	add    BYTE PTR [rax],al
   140015467:	add    dl,cl
   140015469:	adc    al,BYTE PTR [rdx]
   14001546b:	add    BYTE PTR [rax],al
   14001546d:	add    BYTE PTR [rax],al
   14001546f:	add    BYTE PTR [rdx+rdx*1+0x2],dh
   140015476:	add    BYTE PTR [rax],al
   140015478:	test   BYTE PTR [rdx],dl
   14001547a:	add    al,BYTE PTR [rax]
   14001547c:	add    BYTE PTR [rax],al
   14001547e:	add    BYTE PTR [rax],al
   140015480:	rex.W adc al,BYTE PTR [rdx]
   140015483:	add    BYTE PTR [rax],al
   140015485:	add    BYTE PTR [rax],al
   140015487:	add    BYTE PTR [rdx],bl
   140015489:	adc    al,BYTE PTR [rdx]
   14001548b:	add    BYTE PTR [rax],al
   14001548d:	add    BYTE PTR [rax],al
   14001548f:	add    ah,bl
   140015491:	adc    DWORD PTR [rdx],eax
   140015493:	add    BYTE PTR [rax],al
   140015495:	add    BYTE PTR [rax],al
   140015497:	add    BYTE PTR [rdx+0x211],ch
   14001549d:	add    BYTE PTR [rax],al
   14001549f:	add    BYTE PTR [rsi+0x211],cl
   1400154a5:	add    BYTE PTR [rax],al
   1400154a7:	add    BYTE PTR [rcx+rdx*1+0x2],ch
   1400154ab:	add    BYTE PTR [rax],al
   1400154ad:	add    BYTE PTR [rax],al
   1400154af:	add    BYTE PTR [rax+0x11],dl
   1400154b2:	add    al,BYTE PTR [rax]
   1400154b4:	add    BYTE PTR [rax],al
   1400154b6:	add    BYTE PTR [rax],al
   1400154b8:	adc    DWORD PTR es:[rdx],eax
   1400154bb:	add    BYTE PTR [rax],al
   1400154bd:	add    BYTE PTR [rax],al
   1400154bf:	add    BYTE PTR [rdx],cl
   1400154c1:	adc    DWORD PTR [rdx],eax
   1400154c3:	add    BYTE PTR [rax],al
   1400154c5:	add    BYTE PTR [rax],al
   1400154c7:	add    dh,ch
   1400154c9:	adc    BYTE PTR [rdx],al
   1400154cb:	add    BYTE PTR [rax],al
   1400154cd:	add    BYTE PTR [rax],al
   1400154cf:	add    ah,dl
   1400154d1:	adc    BYTE PTR [rdx],al
   1400154d3:	add    BYTE PTR [rax],al
   1400154d5:	add    BYTE PTR [rax],al
   1400154d7:	add    BYTE PTR [rdx+0x210],bh
   1400154dd:	add    BYTE PTR [rax],al
   1400154df:	add    BYTE PTR [rax+0x210],ah
   1400154e5:	add    BYTE PTR [rax],al
   1400154e7:	add    BYTE PTR [rsi+0x10],dh
   1400154ea:	add    al,BYTE PTR [rax]
   1400154ec:	add    BYTE PTR [rax],al
   1400154ee:	add    BYTE PTR [rax],al
   1400154f0:	adc    BYTE PTR cs:[rdx],al
   1400154f3:	add    BYTE PTR [rax],al
   1400154f5:	add    BYTE PTR [rax],al
   1400154f7:	add    dl,dh
   1400154f9:	lar    eax,WORD PTR [rax]
   1400154fc:	add    BYTE PTR [rax],al
   1400154fe:	add    BYTE PTR [rax],al
   140015500:	(bad)  
   140015501:	lar    eax,WORD PTR [rax]
   140015504:	add    BYTE PTR [rax],al
   140015506:	add    BYTE PTR [rax],al
   140015508:	mov    WORD PTR [rdi],cs
   14001550a:	add    al,BYTE PTR [rax]
   14001550c:	add    BYTE PTR [rax],al
   14001550e:	add    BYTE PTR [rax],al
   140015510:	pop    rsi
   140015511:	lar    eax,WORD PTR [rax]
   140015514:	add    BYTE PTR [rax],al
   140015516:	add    BYTE PTR [rax],al
   140015518:	xor    BYTE PTR [rdi],cl
   14001551a:	add    al,BYTE PTR [rax]
   14001551c:	add    BYTE PTR [rax],al
   14001551e:	add    BYTE PTR [rax],al
   140015520:	add    cl,BYTE PTR [rdi]
   140015522:	add    al,BYTE PTR [rax]
   140015524:	add    BYTE PTR [rax],al
   140015526:	add    BYTE PTR [rax],al
   140015528:	retf   0x20e
   14001552b:	add    BYTE PTR [rax],al
   14001552d:	add    BYTE PTR [rax],al
   14001552f:	add    BYTE PTR [rsi+rcx*1+0x2],dl
   140015536:	add    BYTE PTR [rax],al
   140015538:	pop    rsp
   140015539:	(bad)  
   14001553a:	add    al,BYTE PTR [rax]
   14001553c:	add    BYTE PTR [rax],al
   14001553e:	add    BYTE PTR [rax],al
   140015540:	sub    cl,BYTE PTR [rsi]
   140015542:	add    al,BYTE PTR [rax]
   140015544:	add    BYTE PTR [rax],al
   140015546:	add    BYTE PTR [rax],al
   140015548:	clc    
   140015549:	or     eax,0x2
   14001554e:	add    BYTE PTR [rax],al
   140015550:	mov    esp,0x20d
   140015555:	add    BYTE PTR [rax],al
   140015557:	add    BYTE PTR [rdx+0xd],bl
   14001555a:	add    al,BYTE PTR [rax]
   14001555c:	add    BYTE PTR [rax],al
   14001555e:	add    BYTE PTR [rax],al
   140015560:	mov    WORD PTR [rip+0x2],cs        # 0x140015568
   140015566:	add    BYTE PTR [rax],al
   140015568:	sub    al,0xd
   14001556a:	add    al,BYTE PTR [rax]
   14001556c:	add    BYTE PTR [rax],al
   14001556e:	add    BYTE PTR [rax],al
   140015570:	cld    
   140015571:	or     al,0x2
   140015573:	add    BYTE PTR [rax],al
   140015575:	add    BYTE PTR [rax],al
   140015577:	add    al,dl
   140015579:	or     al,0x2
   14001557b:	add    BYTE PTR [rax],al
   14001557d:	add    BYTE PTR [rax],al
   14001557f:	add    BYTE PTR [rsp+rcx*1+0x2],ah
   140015586:	add    BYTE PTR [rax],al
   140015588:	jo     0x140015596
   14001558a:	add    al,BYTE PTR [rax]
   14001558c:	add    BYTE PTR [rax],al
   14001558e:	add    BYTE PTR [rax],al
   140015590:	ds or  al,0x2
   140015593:	add    BYTE PTR [rax],al
   140015595:	add    BYTE PTR [rax],al
   140015597:	add    BYTE PTR [rdx],cl
   140015599:	or     al,0x2
   14001559b:	add    BYTE PTR [rax],al
   14001559d:	add    BYTE PTR [rax],al
   14001559f:	add    al,bl
   1400155a1:	or     eax,DWORD PTR [rdx]
   1400155a3:	add    BYTE PTR [rax],al
   1400155a5:	add    BYTE PTR [rax],al
   1400155a7:	add    BYTE PTR [rax+0x20b],ch
   1400155ad:	add    BYTE PTR [rax],al
   1400155af:	add    BYTE PTR [rbx+rcx*1+0x2],dh
   1400155b3:	add    BYTE PTR [rax],al
   1400155b5:	add    BYTE PTR [rax],al
   1400155b7:	add    BYTE PTR [rax],bh
   1400155b9:	or     eax,DWORD PTR [rdx]
   1400155bb:	add    BYTE PTR [rax],al
   1400155bd:	add    BYTE PTR [rax],al
   1400155bf:	add    BYTE PTR [rax],al
   1400155c1:	or     eax,DWORD PTR [rdx]
   1400155c3:	add    BYTE PTR [rax],al
   1400155c5:	add    BYTE PTR [rax],al
   1400155c7:	add    dl,cl
   1400155c9:	or     al,BYTE PTR [rdx]
   1400155cb:	add    BYTE PTR [rax],al
   1400155cd:	add    BYTE PTR [rax],al
   1400155cf:	add    BYTE PTR [rdx+0x20a],ah
   1400155d5:	add    BYTE PTR [rax],al
   1400155d7:	add    BYTE PTR [rsi+0xa],bh
   1400155da:	add    al,BYTE PTR [rax]
   1400155dc:	add    BYTE PTR [rax],al
   1400155de:	add    BYTE PTR [rax],al
   1400155e0:	push   rax
   1400155e1:	or     al,BYTE PTR [rdx]
   1400155e3:	add    BYTE PTR [rax],al
   1400155e5:	add    BYTE PTR [rax],al
   1400155e7:	add    BYTE PTR [rdx],ch
   1400155e9:	or     al,BYTE PTR [rdx]
   1400155eb:	add    BYTE PTR [rax],al
   1400155ed:	add    BYTE PTR [rax],al
   1400155ef:	add    BYTE PTR [rax],cl
   1400155f1:	or     al,BYTE PTR [rdx]
   1400155f3:	add    BYTE PTR [rax],al
   1400155f5:	add    BYTE PTR [rax],al
   1400155f7:	add    al,ah
   1400155f9:	or     DWORD PTR [rdx],eax
   1400155fb:	add    BYTE PTR [rax],al
   1400155fd:	add    BYTE PTR [rax],al
   1400155ff:	add    BYTE PTR [rax+0x209],ah
   140015605:	add    BYTE PTR [rax],al
   140015607:	add    BYTE PTR [rdx+0x9],dh
   14001560a:	add    al,BYTE PTR [rax]
   14001560c:	add    BYTE PTR [rax],al
   14001560e:	add    BYTE PTR [rax],al
   140015610:	rex.X or DWORD PTR [rdx],eax
   140015613:	add    BYTE PTR [rax],al
   140015615:	add    BYTE PTR [rax],al
   140015617:	add    BYTE PTR [rsi],al
   140015619:	or     DWORD PTR [rdx],eax
   14001561b:	add    BYTE PTR [rax],al
   14001561d:	add    BYTE PTR [rax],al
   14001561f:	add    dl,al
   140015621:	or     BYTE PTR [rdx],al
   140015623:	add    BYTE PTR [rax],al
   140015625:	add    BYTE PTR [rax],al
   140015627:	add    BYTE PTR [rax+rcx*1+0x2],dl
   14001562e:	add    BYTE PTR [rax],al
   140015630:	push   0x208
   140015635:	add    BYTE PTR [rax],al
   140015637:	add    BYTE PTR [rsi],dh
   140015639:	or     BYTE PTR [rdx],al
   14001563b:	add    BYTE PTR [rax],al
   14001563d:	add    BYTE PTR [rax],al
   14001563f:	add    BYTE PTR [rax+rcx*1],cl
   140015642:	add    al,BYTE PTR [rax]
   140015644:	add    BYTE PTR [rax],al
   140015646:	add    BYTE PTR [rax],al
   140015648:	rol    BYTE PTR [rdi],cl
   14001564a:	add    al,BYTE PTR [rax]
   14001564c:	add    BYTE PTR [rax],al
   14001564e:	add    BYTE PTR [rax],al
   140015650:	lods   al,BYTE PTR ds:[rsi]
   140015651:	(bad)  
   140015652:	add    al,BYTE PTR [rax]
   140015654:	add    BYTE PTR [rax],al
   140015656:	add    BYTE PTR [rax],al
   140015658:	xchg   BYTE PTR [rdi],al
   14001565a:	add    al,BYTE PTR [rax]
   14001565c:	add    BYTE PTR [rax],al
   14001565e:	add    BYTE PTR [rax],al
   140015660:	(bad)  
   140015661:	(bad)  
   140015662:	add    al,BYTE PTR [rax]
   140015664:	add    BYTE PTR [rax],al
   140015666:	add    BYTE PTR [rax],al
   140015668:	xor    BYTE PTR [rdi],al
   14001566a:	add    al,BYTE PTR [rax]
   14001566c:	add    BYTE PTR [rax],al
   14001566e:	add    BYTE PTR [rax],al
   140015670:	lock (bad) 
   140015672:	add    al,BYTE PTR [rax]
   140015674:	add    BYTE PTR [rax],al
   140015676:	add    BYTE PTR [rax],al
   140015678:	(bad)  
   140015679:	(bad)  
   14001567a:	add    al,BYTE PTR [rax]
   14001567c:	add    BYTE PTR [rax],al
   14001567e:	add    BYTE PTR [rax],al
   140015680:	test   al,0x6
   140015682:	add    al,BYTE PTR [rax]
   140015684:	add    BYTE PTR [rax],al
   140015686:	add    BYTE PTR [rax],al
   140015688:	mov    es,WORD PTR [rsi]
   14001568a:	add    al,BYTE PTR [rax]
   14001568c:	add    BYTE PTR [rax],al
   14001568e:	add    BYTE PTR [rax],al
   140015690:	je     0x140015698
   140015692:	add    al,BYTE PTR [rax]
   140015694:	add    BYTE PTR [rax],al
   140015696:	add    BYTE PTR [rax],al
   140015698:	rex (bad) 
   14001569a:	add    al,BYTE PTR [rax]
   14001569c:	add    BYTE PTR [rax],al
   14001569e:	add    BYTE PTR [rax],al
   1400156a0:	call   0x1400158f2
   1400156a5:	add    BYTE PTR [rax],al
   1400156a7:	add    BYTE PTR [rax],cl
   1400156a9:	(bad)  
   1400156aa:	add    al,BYTE PTR [rax]
	...
   1400156b8:	ror    BYTE PTR [rbx+0x2],cl
	...
   1400156ce:	add    BYTE PTR [rax],al
   1400156d0:	fsubr  DWORD PTR [rcx]
   1400156d2:	add    DWORD PTR [rax+0x1],eax
   1400156d5:	add    BYTE PTR [rax],al
   1400156d7:	add    BYTE PTR [rax],dl
   1400156d9:	xor    eax,DWORD PTR [rcx]
   1400156db:	rex add DWORD PTR [rax],eax
   1400156de:	add    BYTE PTR [rax],al
   1400156e0:	push   rax
   1400156e1:	xor    eax,DWORD PTR [rcx]
   1400156e3:	rex add DWORD PTR [rax],eax
   1400156e6:	add    BYTE PTR [rax],al
   1400156e8:	(bad)  
   1400156e9:	xor    eax,DWORD PTR [rcx]
   1400156eb:	rex add DWORD PTR [rax],eax
   1400156ee:	add    BYTE PTR [rax],al
   1400156f0:	jo     0x140015725
   1400156f2:	add    DWORD PTR [rax+0x1],eax
   1400156f5:	add    BYTE PTR [rax],al
   1400156f7:	add    BYTE PTR [rax+0x1400133],al
   1400156fd:	add    BYTE PTR [rax],al
   1400156ff:	add    BYTE PTR [rax+0x1400133],dl
   140015705:	add    BYTE PTR [rax],al
   140015707:	add    BYTE PTR [rax+0x1400133],ah
   14001570d:	add    BYTE PTR [rax],al
   14001570f:	add    BYTE PTR [rax+0x1400133],dh
   140015715:	add    BYTE PTR [rax],al
   140015717:	add    al,al
   140015719:	xor    eax,DWORD PTR [rcx]
   14001571b:	rex add DWORD PTR [rax],eax
   14001571e:	add    BYTE PTR [rax],al
   140015720:	shl    BYTE PTR [rbx],1
   140015722:	add    DWORD PTR [rax+0x1],eax
   140015725:	add    BYTE PTR [rax],al
   140015727:	add    al,ah
   140015729:	xor    eax,DWORD PTR [rcx]
   14001572b:	rex add DWORD PTR [rax],eax
	...
   14001573e:	add    BYTE PTR [rax],al
   140015740:	rex.W sub al,0x1
   140015743:	rex add DWORD PTR [rax],eax
   140015746:	add    BYTE PTR [rax],al
   140015748:	rex.WR
   140015749:	add    DWORD PTR cs:[rax+0x1],eax
	...
   14001575d:	add    BYTE PTR [rax],al
   14001575f:	add    BYTE PTR [rdx+0x61],ah
   140015762:	and    BYTE PTR fs:[rcx+0x6c],ah
   140015766:	ins    BYTE PTR es:[rdi],dx
   140015767:	outs   dx,DWORD PTR ds:[rsi]
   140015768:	movsxd esp,DWORD PTR [rcx+0x74]
   14001576b:	imul   ebp,DWORD PTR [rdi+0x6e],0x64610000
   140015772:	jo     0x1400157ba
   140015774:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x656d61
   14001577c:	add    BYTE PTR [rax],al
   14001577e:	add    BYTE PTR [rax],al
   140015780:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140015782:	ins    BYTE PTR es:[rdi],dx
   140015783:	ins    BYTE PTR es:[rdi],dx
   140015784:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140015789:	outs   dx,BYTE PTR ds:[rsi]
   14001578a:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x656d61
   140015793:	add    BYTE PTR [rsi],ch
   140015795:	jno    0x1400157ff
   140015797:	movsxd esi,DWORD PTR [rax+0x0]
   14001579a:	add    BYTE PTR [rax],al
   14001579c:	add    BYTE PTR [rax],al
   14001579e:	add    BYTE PTR [rax],al
   1400157a0:	push   rax
   1400157a1:	jb     0x140015812
   1400157a3:	push   0x65
   1400157a5:	movsxd esi,DWORD PTR [rsi+rax*2+0x69]
   1400157a9:	ins    BYTE PTR es:[rdi],dx
   1400157aa:	gs rex.WRX (bad) 
   1400157ad:	ins    DWORD PTR es:[rdi],dx
   1400157ae:	add    BYTE PTR gs:[rsi],ch
   1400157b1:	jno    0x14001581b
   1400157b3:	jo     0x1400157b5
   1400157b5:	add    BYTE PTR [rax],al
   1400157b7:	add    BYTE PTR [rdx],dh
   1400157b9:	je     0x14001582a
   1400157bb:	addr32 ins BYTE PTR es:[edi],dx
   1400157be:	gs sub BYTE PTR fs:[rdx+0x6f],ah
   1400157c3:	outs   dx,DWORD PTR ds:[rsi]
   1400157c4:	ins    BYTE PTR es:[rdi],dx
   1400157c5:	sub    DWORD PTR [rax],eax
   1400157c7:	add    BYTE PTR [rcx],dh
   1400157c9:	jae    0x140015833
   1400157cb:	outs   dx,DWORD PTR ds:[rsi]
   1400157cc:	ja     0x140015816
   1400157ce:	gs ins BYTE PTR es:[rdi],dx
   1400157d0:	jo     0x1400157fa
   1400157d2:	(bad)  
   1400157d3:	outs   dx,DWORD PTR ds:[rsi]
   1400157d4:	outs   dx,DWORD PTR ds:[rsi]
   1400157d5:	ins    BYTE PTR es:[rdi],dx
   1400157d6:	sub    DWORD PTR [rax],eax
   1400157d8:	xor    ah,BYTE PTR [rbx+0x75]
   1400157db:	jb     0x14001584f
   1400157dd:	outs   dx,BYTE PTR gs:[rsi]
   1400157df:	je     0x14001582a
   1400157e1:	fs rex.XB push 0x65676e61
   1400157e8:	sub    BYTE PTR fs:[rcx+0x6e],ch
   1400157ec:	je     0x140015817
   1400157ee:	add    BYTE PTR [rax],al
   1400157f0:	xor    DWORD PTR [rax+0x61],esi
   1400157f3:	addr32 gs rex.XB push 0x65676e61
   1400157fb:	sub    BYTE PTR fs:[rcx+0x6e],ch
   1400157ff:	je     0x14001582a
   140015801:	add    BYTE PTR [rax],al
   140015803:	add    BYTE PTR [rax],al
   140015805:	add    BYTE PTR [rax],al
   140015807:	add    BYTE PTR [rdx],bh
   140015809:	(bad)  
   14001580a:	jno    0x140015880
   14001580c:	sub    eax,0x6a6f7270
   140015811:	movsxd esi,DWORD PTR gs:[rsi+rbp*1+0x6f]
   140015816:	jb     0x14001587f
   140015818:	(bad)  
   140015819:	jno    0x140015883
   14001581b:	gs ins BYTE PTR es:[rdi],dx
   14001581d:	jo     0x140015882
   14001581f:	outs   dx,DWORD PTR ds:[rsi]
   140015820:	outs   dx,BYTE PTR ds:[rsi]
   140015821:	jbe    0x140015888
   140015823:	jb     0x140015899
   140015825:	gs jb  0x140015857
   140015828:	(bad)  
   140015829:	jae    0x14001589e
   14001582b:	imul   esi,DWORD PTR [rbx+0x74],0x2d746e61
   140015832:	xor    DWORD PTR [rdx],esi
   140015834:	cmp    BYTE PTR [rsi],ch
   140015836:	jo     0x1400158a6
   140015838:	add    BYTE PTR [eax],al
   14001583b:	add    BYTE PTR [rax],al
   14001583d:	add    BYTE PTR [rax],al
   14001583f:	add    BYTE PTR [rax+0x65],cl
   140015842:	ins    BYTE PTR es:[rdi],dx
   140015843:	jo     0x140015865
   140015845:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140015847:	outs   dx,BYTE PTR ds:[rsi]
   140015848:	jbe    0x1400158af
   14001584a:	jb     0x1400158bf
   14001584c:	imul   ebp,DWORD PTR [rdi+0x6e],0x7a695720
   140015853:	(bad)  
   140015854:	jb     0x1400158ba
   140015856:	add    BYTE PTR [rax],al
   140015858:	cmp    ch,BYTE PTR [rdi]
   14001585a:	jno    0x1400158d0
   14001585c:	sub    eax,0x6a6f7270
   140015861:	movsxd esi,DWORD PTR gs:[rsi+rbp*1+0x6f]
   140015866:	jb     0x1400158cf
   140015868:	(bad)  
   140015869:	jno    0x1400158d3
   14001586b:	gs ins BYTE PTR es:[rdi],dx
   14001586d:	jo     0x1400158d2
   14001586f:	outs   dx,DWORD PTR ds:[rsi]
   140015870:	outs   dx,BYTE PTR ds:[rsi]
   140015871:	jbe    0x1400158d8
   140015873:	jb     0x1400158e9
   140015875:	gs jb  0x1400158a7
   140015878:	(bad)  
   140015879:	jae    0x1400158ee
   14001587b:	imul   esi,DWORD PTR [rbx+0x74],0x2e746e61
   140015882:	jo     0x1400158f2
   140015884:	add    BYTE PTR [eax],al
	...
   14001588f:	add    al,ah
   140015891:	retf   0x4001
   140015894:	add    DWORD PTR [rax],eax
   140015896:	add    BYTE PTR [rax],al
   140015898:	nop
   140015899:	(bad)  
   14001589a:	add    BYTE PTR [rax+0x1],al
   14001589d:	add    BYTE PTR [rax],al
   14001589f:	add    ah,ch
   1400158a1:	(bad)  
   1400158a2:	add    DWORD PTR [rax+0x1],eax
   1400158a5:	add    BYTE PTR [rax],al
   1400158a7:	add    dl,dh
   1400158a9:	(bad)  
   1400158aa:	add    DWORD PTR [rax+0x1],eax
   1400158ad:	add    BYTE PTR [rax],al
   1400158af:	add    al,bh
   1400158b1:	(bad)  
   1400158b2:	add    DWORD PTR [rax+0x1],eax
   1400158b5:	add    BYTE PTR [rax],al
   1400158b7:	add    dh,bh
   1400158b9:	(bad)  
   1400158ba:	add    DWORD PTR [rax+0x1],eax
   1400158bd:	add    BYTE PTR [rax],al
   1400158bf:	add    BYTE PTR [rax+riz*1],al
   1400158c2:	add    DWORD PTR [rax+0x1],eax
   1400158c5:	add    BYTE PTR [rax],al
   1400158c7:	add    BYTE PTR [rdx],cl
   1400158c9:	and    BYTE PTR [rcx],al
   1400158cb:	rex add DWORD PTR [rax],eax
   1400158ce:	add    BYTE PTR [rax],al
   1400158d0:	rex enter 0x4001,0x1
   1400158d5:	add    BYTE PTR [rax],al
   1400158d7:	add    BYTE PTR [rax+0x17],dh
   1400158da:	add    DWORD PTR [rax+0x1],eax
   1400158dd:	add    BYTE PTR [rax],al
   1400158df:	add    BYTE PTR [rax+0x1400116],al
   1400158e5:	add    BYTE PTR [rax],al
   1400158e7:	add    al,dl
   1400158e9:	(bad)  
   1400158ea:	add    DWORD PTR [rax+0x1],eax
   1400158ed:	add    BYTE PTR [rax],al
   1400158ef:	add    BYTE PTR [rax+0x1400027],ah
   1400158f5:	add    BYTE PTR [rax],al
   1400158f7:	add    dl,ch
   1400158f9:	(bad)  
   1400158fa:	add    DWORD PTR [rax+0x1],eax
   1400158fd:	add    BYTE PTR [rax],al
   1400158ff:	add    BYTE PTR [rax],al
   140015901:	(bad)  
   140015902:	add    BYTE PTR [rax+0x1],al
   140015905:	add    BYTE PTR [rax],al
   140015907:	add    BYTE PTR [rax+rbp*1+0x1],bl
   14001590b:	rex add DWORD PTR [rax],eax
   14001590e:	add    BYTE PTR [rax],al
   140015910:	(bad)  
   140015911:	sub    BYTE PTR [rcx],al
   140015913:	rex add DWORD PTR [rax],eax
   140015916:	add    BYTE PTR [rax],al
   140015918:	push   0x1400128
   14001591d:	add    BYTE PTR [rax],al
   14001591f:	add    BYTE PTR [rsi+0x28],ch
   140015922:	add    DWORD PTR [rax+0x1],eax
   140015925:	add    BYTE PTR [rax],al
   140015927:	add    BYTE PTR [rax+rbp*1+0x1],dh
   14001592b:	rex add DWORD PTR [rax],eax
   14001592e:	add    BYTE PTR [rax],al
   140015930:	lock (bad) 
   140015932:	add    DWORD PTR [rax+0x1],eax
   140015935:	add    BYTE PTR [rax],al
   140015937:	add    dh,dh
   140015939:	(bad)  
   14001593a:	add    DWORD PTR [rax+0x1],eax
   14001593d:	add    BYTE PTR [rax],al
   14001593f:	add    ah,bh
   140015941:	(bad)  
   140015942:	add    DWORD PTR [rax+0x1],eax
   140015945:	add    BYTE PTR [rax],al
   140015947:	add    BYTE PTR [rdx],al
   140015949:	(bad)  
   14001594a:	add    DWORD PTR [rax+0x1],eax
   14001594d:	add    BYTE PTR [rax],al
   14001594f:	add    BYTE PTR [rax],cl
   140015951:	(bad)  
   140015952:	add    DWORD PTR [rax+0x1],eax
   140015955:	add    BYTE PTR [rax],al
   140015957:	add    BYTE PTR [rsi],cl
   140015959:	(bad)  
   14001595a:	add    DWORD PTR [rax+0x1],eax
   14001595d:	add    BYTE PTR [rax],al
   14001595f:	add    BYTE PTR [rdi+rbx*1],dl
   140015962:	add    DWORD PTR [rax+0x1],eax
   140015965:	add    BYTE PTR [rax],al
   140015967:	add    BYTE PTR [rdx],bl
   140015969:	(bad)  
   14001596a:	add    DWORD PTR [rax+0x1],eax
   14001596d:	add    BYTE PTR [rax],al
   14001596f:	add    BYTE PTR [rax],ah
   140015971:	(bad)  
   140015972:	add    DWORD PTR [rax+0x1],eax
   140015975:	add    BYTE PTR [rax],al
   140015977:	add    BYTE PTR [rsi],ah
   140015979:	(bad)  
   14001597a:	add    DWORD PTR [rax+0x1],eax
   14001597d:	add    BYTE PTR [rax],al
   14001597f:	add    BYTE PTR [rdi+rbx*1],ch
   140015982:	add    DWORD PTR [rax+0x1],eax
   140015985:	add    BYTE PTR [rax],al
   140015987:	add    BYTE PTR [rdx],dh
   140015989:	(bad)  
   14001598a:	add    DWORD PTR [rax+0x1],eax
   14001598d:	add    BYTE PTR [rax],al
   14001598f:	add    BYTE PTR [rax],bh
   140015991:	(bad)  
   140015992:	add    DWORD PTR [rax+0x1],eax
   140015995:	add    BYTE PTR [rax],al
   140015997:	add    BYTE PTR [rsi],bh
   140015999:	(bad)  
   14001599a:	add    DWORD PTR [rax+0x1],eax
   14001599d:	add    BYTE PTR [rax],al
   14001599f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   1400159a3:	rex add DWORD PTR [rax],eax
   1400159a6:	add    BYTE PTR [rax],al
   1400159a8:	rex.WX (bad) 
   1400159aa:	add    DWORD PTR [rax+0x1],eax
   1400159ad:	add    BYTE PTR [rax],al
   1400159af:	add    BYTE PTR [rax+0x1f],dl
   1400159b2:	add    DWORD PTR [rax+0x1],eax
   1400159b5:	add    BYTE PTR [rax],al
   1400159b7:	add    BYTE PTR [rsi+0x1f],dl
   1400159ba:	add    DWORD PTR [rax+0x1],eax
   1400159bd:	add    BYTE PTR [rax],al
   1400159bf:	add    BYTE PTR [rdi+rbx*1+0x1],bl
   1400159c3:	rex add DWORD PTR [rax],eax
   1400159c6:	add    BYTE PTR [rax],al
   1400159c8:	(bad)  
   1400159c9:	(bad)  
   1400159ca:	add    DWORD PTR [rax+0x1],eax
   1400159cd:	add    BYTE PTR [rax],al
   1400159cf:	add    BYTE PTR [rax+0x1f],ch
   1400159d2:	add    DWORD PTR [rax+0x1],eax
   1400159d5:	add    BYTE PTR [rax],al
   1400159d7:	add    BYTE PTR [rsi+0x1f],ch
   1400159da:	add    DWORD PTR [rax+0x1],eax
   1400159dd:	add    BYTE PTR [rax],al
   1400159df:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   1400159e3:	rex add DWORD PTR [rax],eax
   1400159e6:	add    BYTE PTR [rax],al
   1400159e8:	jp     0x140015a09
   1400159ea:	add    DWORD PTR [rax+0x1],eax
   1400159ed:	add    BYTE PTR [rax],al
   1400159ef:	add    BYTE PTR [rax+0x140011f],al
   1400159f5:	add    BYTE PTR [rax],al
   1400159f7:	add    BYTE PTR [rsi+0x140011f],al
   1400159fd:	add    BYTE PTR [rax],al
   1400159ff:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   140015a06:	add    BYTE PTR [rax],al
   140015a08:	xchg   edx,eax
   140015a09:	(bad)  
   140015a0a:	add    DWORD PTR [rax+0x1],eax
   140015a0d:	add    BYTE PTR [rax],al
   140015a0f:	add    BYTE PTR [rax+0x140011f],bl
   140015a15:	add    BYTE PTR [rax],al
   140015a17:	add    BYTE PTR [rsi+0x140011f],bl
   140015a1d:	add    BYTE PTR [rax],al
   140015a1f:	add    BYTE PTR [rdi+rbx*1+0x14001],ah
   140015a26:	add    BYTE PTR [rax],al
   140015a28:	stos   BYTE PTR es:[rdi],al
   140015a29:	(bad)  
   140015a2a:	add    DWORD PTR [rax+0x1],eax
   140015a2d:	add    BYTE PTR [rax],al
   140015a2f:	add    BYTE PTR [rax+0x140011f],dh
   140015a35:	add    BYTE PTR [rax],al
   140015a37:	add    BYTE PTR [rsi+0x140011f],dh
   140015a3d:	add    BYTE PTR [rax],al
   140015a3f:	add    BYTE PTR [rdi+rbx*1+0x14001],bh
   140015a46:	add    BYTE PTR [rax],al
   140015a48:	ret    0x11f
   140015a4b:	rex add DWORD PTR [rax],eax
   140015a4e:	add    BYTE PTR [rax],al
   140015a50:	enter  0x11f,0x40
   140015a54:	add    DWORD PTR [rax],eax
   140015a56:	add    BYTE PTR [rax],al
   140015a58:	(bad)  
   140015a59:	(bad)  
   140015a5a:	add    DWORD PTR [rax+0x1],eax
   140015a5d:	add    BYTE PTR [rax],al
   140015a5f:	add    ah,dl
   140015a61:	(bad)  
   140015a62:	add    DWORD PTR [rax+0x1],eax
   140015a65:	add    BYTE PTR [rax],al
   140015a67:	add    dl,bl
   140015a69:	(bad)  
   140015a6a:	add    DWORD PTR [rax+0x1],eax
   140015a6d:	add    BYTE PTR [rax],al
   140015a6f:	add    al,ah
   140015a71:	(bad)  
   140015a72:	add    DWORD PTR [rax+0x1],eax
   140015a75:	add    BYTE PTR [rax],al
   140015a77:	add    BYTE PTR [rax+0x1400010],dl
   140015a7d:	add    BYTE PTR [rax],al
   140015a7f:	add    dh,ah
   140015a81:	(bad)  
   140015a82:	add    DWORD PTR [rax+0x1],eax
   140015a85:	add    BYTE PTR [rax],al
   140015a87:	add    BYTE PTR [rcx],dh
   140015a89:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140015a8c:	jbe    0x140015af3
   140015a8e:	jb     0x140015b04
   140015a90:	sub    BYTE PTR [rcx],ch
   140015a92:	add    BYTE PTR [rax],al
   140015a94:	rex.R outs dx,DWORD PTR ds:[rsi]
   140015a96:	outs   dx,BYTE PTR ds:[rsi]
   140015a97:	gs add BYTE PTR cs:[rax],al
   140015a9b:	add    BYTE PTR [rax],al
   140015a9d:	add    BYTE PTR [rax],al
   140015a9f:	add    BYTE PTR [rcx+0x74],dh
   140015aa2:	push   0x3a706c65
   140015aa7:	(bad)  
   140015aa8:	(bad)  
   140015aa9:	add    BYTE PTR [rax],al
   140015aab:	add    BYTE PTR [rdi],ch
   140015aad:	add    BYTE PTR [rax],al
   140015aaf:	add    BYTE PTR [rdi+0x72],dl
   140015ab2:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x65682067
   140015aba:	ins    BYTE PTR es:[rdi],dx
   140015abb:	jo     0x140015add
   140015abd:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140015ac0:	ins    BYTE PTR es:[rdi],dx
   140015ac1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140015ac6:	outs   dx,BYTE PTR ds:[rsi]
   140015ac7:	and    BYTE PTR [rsi+0x69],ah
   140015aca:	ins    BYTE PTR es:[rdi],dx
   140015acb:	gs cs cs add BYTE PTR cs:[rdi+0x6c],ah
   140015ad2:	outs   dx,DWORD PTR ds:[rsi]
   140015ad3:	(bad)
   140015ad8:	imul   di,WORD PTR gs:[rax+0x0],0x0
   140015adf:	add    BYTE PTR [rsi+0x69],ah
   140015ae2:	ins    BYTE PTR es:[rdi],dx
   140015ae3:	gs rex.WRX (bad) 
   140015ae6:	ins    DWORD PTR es:[rdi],dx
   140015ae7:	gs push rax
   140015ae9:	jb     0x140015b50
   140015aeb:	imul   di,WORD PTR [rax+0x0],0x6300
   140015af1:	jb     0x140015b58
   140015af3:	(bad)  
   140015af4:	je     0x140015b5b
   140015af6:	rex.WB
   140015af7:	fs outs dx,BYTE PTR gs:[rsi]
   140015afa:	je     0x140015b65
   140015afc:	imul   sp,WORD PTR [rbp+0x72],0x0
   140015b02:	add    BYTE PTR [rax],al
   140015b04:	add    BYTE PTR [rax],al
   140015b06:	add    BYTE PTR [rax],al
   140015b08:	outs   dx,BYTE PTR ds:[rsi]
   140015b09:	(bad)  
   140015b0a:	ins    DWORD PTR es:[rdi],dx
   140015b0b:	gs jae 0x140015b7e
   140015b0e:	(bad)  
   140015b0f:	movsxd esp,DWORD PTR [rbp+0x4e]
   140015b12:	(bad)  
   140015b13:	ins    DWORD PTR es:[rdi],dx
   140015b14:	add    BYTE PTR gs:[rax],al
   140015b17:	add    BYTE PTR [rsi+0x69],dh
   140015b1a:	jb     0x140015b90
   140015b1c:	jne    0x140015b7f
   140015b1e:	ins    BYTE PTR es:[rdi],dx
   140015b1f:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140015b21:	ins    BYTE PTR es:[rdi],dx
   140015b22:	fs gs jb 0x140015b26
   140015b26:	add    BYTE PTR [rax],al
   140015b28:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140015b2a:	outs   dx,BYTE PTR ds:[rsi]
   140015b2b:	jbe    0x140015b92
   140015b2d:	jb     0x140015ba3
   140015b2f:	imul   ebp,DWORD PTR [rsi+0x67],0x2e312520
   140015b36:	cs add BYTE PTR cs:[rax],al
   140015b3a:	add    BYTE PTR [rax],al
   140015b3c:	cs cs add BYTE PTR cs:[rsi+0x69],al
   140015b42:	ins    BYTE PTR es:[rdi],dx
   140015b43:	and    BYTE PTR gs:[rsi+0x61],ch
   140015b47:	ins    DWORD PTR es:[rdi],dx
   140015b48:	cmp    al,BYTE PTR gs:[rax]
   140015b4b:	add    BYTE PTR [rax],al
   140015b4d:	add    BYTE PTR [rax],al
   140015b4f:	add    BYTE PTR [rcx+0x6e],cl
   140015b52:	jo     0x140015bc9
   140015b54:	je     0x140015ba6
   140015b56:	(bad)  
   140015b57:	add    BYTE PTR gs:[eax],al
   140015b5b:	add    BYTE PTR [rsi+0x6f],al
   140015b5e:	jb     0x140015bcd
	...
   140015b68:	(bad)
   140015b6d:	gs rex.X jne 0x140015be5
   140015b71:	je     0x140015be2
   140015b73:	outs   dx,BYTE PTR ds:[rsi]
	...
   140015b80:	and    cl,dl
   140015b82:	add    DWORD PTR [rax+0x1],eax
   140015b85:	add    BYTE PTR [rax],al
   140015b87:	add    al,dh
   140015b89:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140015b8d:	add    BYTE PTR [rax],al
   140015b8f:	add    ah,ch
   140015b91:	(bad)  
   140015b92:	add    DWORD PTR [rax+0x1],eax
   140015b95:	add    BYTE PTR [rax],al
   140015b97:	add    dl,dh
   140015b99:	(bad)  
   140015b9a:	add    DWORD PTR [rax+0x1],eax
   140015b9d:	add    BYTE PTR [rax],al
   140015b9f:	add    al,bh
   140015ba1:	(bad)  
   140015ba2:	add    DWORD PTR [rax+0x1],eax
   140015ba5:	add    BYTE PTR [rax],al
   140015ba7:	add    dh,bh
   140015ba9:	(bad)  
   140015baa:	add    DWORD PTR [rax+0x1],eax
   140015bad:	add    BYTE PTR [rax],al
   140015baf:	add    BYTE PTR [rax+riz*1],al
   140015bb2:	add    DWORD PTR [rax+0x1],eax
   140015bb5:	add    BYTE PTR [rax],al
   140015bb7:	add    BYTE PTR [rdx],cl
   140015bb9:	and    BYTE PTR [rcx],al
   140015bbb:	rex add DWORD PTR [rax],eax
   140015bbe:	add    BYTE PTR [rax],al
   140015bc0:	and    al,dl
   140015bc2:	add    DWORD PTR [rax+0x1],eax
   140015bc5:	add    BYTE PTR [rax],al
   140015bc7:	add    BYTE PTR [rdx+riz*1+0x1],bl
   140015bcb:	rex add DWORD PTR [rax],eax
   140015bce:	add    BYTE PTR [rax],al
   140015bd0:	(bad)  
   140015bd2:	add    DWORD PTR [rax+0x1],eax
   140015bd5:	add    BYTE PTR [rax],al
   140015bd7:	add    BYTE PTR [rax+0x22],ch
   140015bda:	add    DWORD PTR [rax+0x1],eax
   140015bdd:	add    BYTE PTR [rax],al
   140015bdf:	add    al,al
   140015be1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140015be5:	add    BYTE PTR [rax],al
   140015be7:	add    BYTE PTR [rsi+0x22],ch
   140015bea:	add    DWORD PTR [rax+0x1],eax
   140015bed:	add    BYTE PTR [rax],al
   140015bef:	add    BYTE PTR [rax+0x1400128],al
   140015bf5:	add    BYTE PTR [rax],al
   140015bf7:	add    BYTE PTR [rdx+riz*1+0x1],dh
   140015bfb:	rex add DWORD PTR [rax],eax
   140015bfe:	add    BYTE PTR [rax],al
   140015c00:	(bad)  
   140015c01:	sub    BYTE PTR [rcx],al
   140015c03:	rex add DWORD PTR [rax],eax
   140015c06:	add    BYTE PTR [rax],al
   140015c08:	push   0x1400128
   140015c0d:	add    BYTE PTR [rax],al
   140015c0f:	add    BYTE PTR [rsi+0x28],ch
   140015c12:	add    DWORD PTR [rax+0x1],eax
   140015c15:	add    BYTE PTR [rax],al
   140015c17:	add    BYTE PTR [rax+rbp*1+0x1],dh
   140015c1b:	rex add DWORD PTR [rax],eax
   140015c1e:	add    BYTE PTR [rax],al
   140015c20:	or     al,0x21
   140015c22:	add    DWORD PTR [rax+0x1],eax
   140015c25:	add    BYTE PTR [rax],al
   140015c27:	add    BYTE PTR [rdx+0x22],bh
   140015c2a:	add    DWORD PTR [rax+0x1],eax
   140015c2d:	add    BYTE PTR [rax],al
   140015c2f:	add    BYTE PTR [rax+0x1400122],al
   140015c35:	add    BYTE PTR [rax],al
   140015c37:	add    BYTE PTR [rdx],al
   140015c39:	(bad)  
   140015c3a:	add    DWORD PTR [rax+0x1],eax
   140015c3d:	add    BYTE PTR [rax],al
   140015c3f:	add    BYTE PTR [rax],cl
   140015c41:	(bad)  
   140015c42:	add    DWORD PTR [rax+0x1],eax
   140015c45:	add    BYTE PTR [rax],al
   140015c47:	add    BYTE PTR [rsi+0x1400122],al
   140015c4d:	add    BYTE PTR [rax],al
   140015c4f:	add    BYTE PTR [rdx+riz*1+0x14001],cl
   140015c56:	add    BYTE PTR [rax],al
   140015c58:	sbb    bl,BYTE PTR [rdi]
   140015c5a:	add    DWORD PTR [rax+0x1],eax
   140015c5d:	add    BYTE PTR [rax],al
   140015c5f:	add    BYTE PTR [rdx+0x1400122],dl
   140015c65:	add    BYTE PTR [rax],al
   140015c67:	add    BYTE PTR [rsi],ah
   140015c69:	(bad)  
   140015c6a:	add    DWORD PTR [rax+0x1],eax
   140015c6d:	add    BYTE PTR [rax],al
   140015c6f:	add    BYTE PTR [rax+0x1400122],bl
   140015c75:	add    BYTE PTR [rax],al
   140015c77:	add    BYTE PTR [rsi+0x1400122],bl
   140015c7d:	add    BYTE PTR [rax],al
   140015c7f:	add    BYTE PTR [rdx+riz*1+0x14001],ah
   140015c86:	add    BYTE PTR [rax],al
   140015c88:	stos   BYTE PTR es:[rdi],al
   140015c89:	and    al,BYTE PTR [rcx]
   140015c8b:	rex add DWORD PTR [rax],eax
   140015c8e:	add    BYTE PTR [rax],al
   140015c90:	mov    al,0x22
   140015c92:	add    DWORD PTR [rax+0x1],eax
   140015c95:	add    BYTE PTR [rax],al
   140015c97:	add    BYTE PTR [rsi+0x1400122],dh
   140015c9d:	add    BYTE PTR [rax],al
   140015c9f:	add    BYTE PTR [rdx+riz*1+0x14001],bh
   140015ca6:	add    BYTE PTR [rax],al
   140015ca8:	push   rsi
   140015ca9:	(bad)  
   140015caa:	add    DWORD PTR [rax+0x1],eax
   140015cad:	add    BYTE PTR [rax],al
   140015caf:	add    BYTE PTR [rsi+0x21],cl
   140015cb2:	add    DWORD PTR [rax+0x1],eax
   140015cb5:	add    BYTE PTR [rax],al
   140015cb7:	add    BYTE PTR [rcx+riz*1+0x1],dl
   140015cbb:	rex add DWORD PTR [rax],eax
   140015cbe:	add    BYTE PTR [rax],al
   140015cc0:	ret    0x122
   140015cc3:	rex add DWORD PTR [rax],eax
   140015cc6:	add    BYTE PTR [rax],al
   140015cc8:	outs   dx,BYTE PTR ds:[rsi]
   140015cc9:	(bad)  
   140015cca:	add    DWORD PTR [rax+0x1],eax
   140015ccd:	add    BYTE PTR [rax],al
   140015ccf:	add    al,cl
   140015cd1:	and    al,BYTE PTR [rcx]
   140015cd3:	rex add DWORD PTR [rax],eax
   140015cd6:	add    BYTE PTR [rax],al
   140015cd8:	jp     0x140015cf9
   140015cda:	add    DWORD PTR [rax+0x1],eax
   140015cdd:	add    BYTE PTR [rax],al
   140015cdf:	add    BYTE PTR [rax+0x140011f],al
   140015ce5:	add    BYTE PTR [rax],al
   140015ce7:	add    BYTE PTR [rsi+0x140011f],al
   140015ced:	add    BYTE PTR [rax],al
   140015cef:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   140015cf6:	add    BYTE PTR [rax],al
   140015cf8:	(bad)  
   140015cf9:	and    DWORD PTR [rcx],eax
   140015cfb:	rex add DWORD PTR [rax],eax
   140015cfe:	add    BYTE PTR [rax],al
   140015d00:	cwde   
   140015d01:	(bad)  
   140015d02:	add    DWORD PTR [rax+0x1],eax
   140015d05:	add    BYTE PTR [rax],al
   140015d07:	add    BYTE PTR [rsi+0x21],ah
   140015d0a:	add    DWORD PTR [rax+0x1],eax
   140015d0d:	add    BYTE PTR [rax],al
   140015d0f:	add    dh,cl
   140015d11:	and    al,BYTE PTR [rcx]
   140015d13:	rex add DWORD PTR [rax],eax
   140015d16:	add    BYTE PTR [rax],al
   140015d18:	stos   BYTE PTR es:[rdi],al
   140015d19:	(bad)  
   140015d1a:	add    DWORD PTR [rax+0x1],eax
   140015d1d:	add    BYTE PTR [rax],al
   140015d1f:	add    BYTE PTR [rax+0x140011f],dh
   140015d25:	add    BYTE PTR [rax],al
   140015d27:	add    BYTE PTR [rsi+0x140011f],dh
   140015d2d:	add    BYTE PTR [rax],al
   140015d2f:	add    ah,dl
   140015d31:	and    al,BYTE PTR [rcx]
   140015d33:	rex add DWORD PTR [rax],eax
   140015d36:	add    BYTE PTR [rax],al
   140015d38:	fisub  DWORD PTR [rdx]
   140015d3a:	add    DWORD PTR [rax+0x1],eax
   140015d3d:	add    BYTE PTR [rax],al
   140015d3f:	add    al,ah
   140015d41:	and    al,BYTE PTR [rcx]
   140015d43:	rex add DWORD PTR [rax],eax
   140015d46:	add    BYTE PTR [rax],al
   140015d48:	imul   bp,WORD PTR [rbp+riz*2+0x4c],0x6e69
   140015d4f:	gs rex.RB
   140015d51:	imul   esi,DWORD PTR fs:[rax+rax*1+0x0],0x0
   140015d5a:	add    BYTE PTR [rax],al
   140015d5c:	add    BYTE PTR [rax],al
   140015d5e:	add    BYTE PTR [rax],al
   140015d60:	clc    
   140015d61:	iret   
   140015d62:	add    DWORD PTR [rax+0x1],eax
   140015d65:	add    BYTE PTR [rax],al
   140015d67:	add    BYTE PTR [rax],dh
   140015d69:	push   rax
   140015d6a:	add    BYTE PTR [rax+0x1],al
   140015d6d:	add    BYTE PTR [rax],al
   140015d6f:	add    ah,ch
   140015d71:	(bad)  
   140015d72:	add    DWORD PTR [rax+0x1],eax
   140015d75:	add    BYTE PTR [rax],al
   140015d77:	add    dl,dh
   140015d79:	(bad)  
   140015d7a:	add    DWORD PTR [rax+0x1],eax
   140015d7d:	add    BYTE PTR [rax],al
   140015d7f:	add    al,bh
   140015d81:	(bad)  
   140015d82:	add    DWORD PTR [rax+0x1],eax
   140015d85:	add    BYTE PTR [rax],al
   140015d87:	add    dh,bh
   140015d89:	(bad)  
   140015d8a:	add    DWORD PTR [rax+0x1],eax
   140015d8d:	add    BYTE PTR [rax],al
   140015d8f:	add    BYTE PTR [rax+riz*1],al
   140015d92:	add    DWORD PTR [rax+0x1],eax
   140015d95:	add    BYTE PTR [rax],al
   140015d97:	add    BYTE PTR [rdx],cl
   140015d99:	and    BYTE PTR [rcx],al
   140015d9b:	rex add DWORD PTR [rax],eax
   140015d9e:	add    BYTE PTR [rax],al
   140015da0:	push   0x14001cf
   140015da5:	add    BYTE PTR [rax],al
   140015da7:	add    al,bl
   140015da9:	and    DWORD PTR [rcx],eax
   140015dab:	rex add DWORD PTR [rax],eax
   140015dae:	add    BYTE PTR [rax],al
   140015db0:	fisub  WORD PTR [rcx]
   140015db2:	add    DWORD PTR [rax+0x1],eax
   140015db5:	add    BYTE PTR [rax],al
   140015db7:	add    ah,ah
   140015db9:	and    DWORD PTR [rcx],eax
   140015dbb:	rex add DWORD PTR [rax],eax
   140015dbe:	add    BYTE PTR [rax],al
   140015dc0:	nop
   140015dc1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140015dc5:	add    BYTE PTR [rax],al
   140015dc7:	add    dl,ch
   140015dc9:	and    DWORD PTR [rcx],eax
   140015dcb:	rex add DWORD PTR [rax],eax
   140015dce:	add    BYTE PTR [rax],al
   140015dd0:	sub    BYTE PTR [rax],0x1
   140015dd3:	rex add DWORD PTR [rax],eax
   140015dd6:	add    BYTE PTR [rax],al
   140015dd8:	pop    rsp
   140015dd9:	sub    BYTE PTR [rcx],al
   140015ddb:	rex add DWORD PTR [rax],eax
   140015dde:	add    BYTE PTR [rax],al
   140015de0:	(bad)  
   140015de1:	sub    BYTE PTR [rcx],al
   140015de3:	rex add DWORD PTR [rax],eax
   140015de6:	add    BYTE PTR [rax],al
   140015de8:	push   0x1400128
   140015ded:	add    BYTE PTR [rax],al
   140015def:	add    BYTE PTR [rsi+0x28],ch
   140015df2:	add    DWORD PTR [rax+0x1],eax
   140015df5:	add    BYTE PTR [rax],al
   140015df7:	add    BYTE PTR [rax+rbp*1+0x1],dh
   140015dfb:	rex add DWORD PTR [rax],eax
   140015dfe:	add    BYTE PTR [rax],al
   140015e00:	or     al,0x21
   140015e02:	add    DWORD PTR [rax+0x1],eax
   140015e05:	add    BYTE PTR [rax],al
   140015e07:	add    al,dh
   140015e09:	and    DWORD PTR [rcx],eax
   140015e0b:	rex add DWORD PTR [rax],eax
   140015e0e:	add    BYTE PTR [rax],al
   140015e10:	mul    BYTE PTR [rcx]
   140015e12:	add    DWORD PTR [rax+0x1],eax
   140015e15:	add    BYTE PTR [rax],al
   140015e17:	add    BYTE PTR [rdx],al
   140015e19:	(bad)  
   140015e1a:	add    DWORD PTR [rax+0x1],eax
   140015e1d:	add    BYTE PTR [rax],al
   140015e1f:	add    BYTE PTR [rax],cl
   140015e21:	(bad)  
   140015e22:	add    DWORD PTR [rax+0x1],eax
   140015e25:	add    BYTE PTR [rax],al
   140015e27:	add    ah,bh
   140015e29:	and    DWORD PTR [rcx],eax
   140015e2b:	rex add DWORD PTR [rax],eax
   140015e2e:	add    BYTE PTR [rax],al
   140015e30:	add    ah,BYTE PTR [rdx]
   140015e32:	add    DWORD PTR [rax+0x1],eax
   140015e35:	add    BYTE PTR [rax],al
   140015e37:	add    BYTE PTR [rax],cl
   140015e39:	and    al,BYTE PTR [rcx]
   140015e3b:	rex add DWORD PTR [rax],eax
   140015e3e:	add    BYTE PTR [rax],al
   140015e40:	(bad)  
   140015e41:	and    al,BYTE PTR [rcx]
   140015e43:	rex add DWORD PTR [rax],eax
   140015e46:	add    BYTE PTR [rax],al
   140015e48:	es (bad) 
   140015e4a:	add    DWORD PTR [rax+0x1],eax
   140015e4d:	add    BYTE PTR [rax],al
   140015e4f:	add    BYTE PTR [rdx+riz*1],dl
   140015e52:	add    DWORD PTR [rax+0x1],eax
   140015e55:	add    BYTE PTR [rax],al
   140015e57:	add    BYTE PTR [rdx],dh
   140015e59:	(bad)  
   140015e5a:	add    DWORD PTR [rax+0x1],eax
   140015e5d:	add    BYTE PTR [rax],al
   140015e5f:	add    BYTE PTR [rdx],bl
   140015e61:	and    al,BYTE PTR [rcx]
   140015e63:	rex add DWORD PTR [rax],eax
   140015e66:	add    BYTE PTR [rax],al
   140015e68:	and    BYTE PTR [rdx],ah
   140015e6a:	add    DWORD PTR [rax+0x1],eax
   140015e6d:	add    BYTE PTR [rax],al
   140015e6f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140015e73:	rex add DWORD PTR [rax],eax
   140015e76:	add    BYTE PTR [rax],al
   140015e78:	rex.WX (bad) 
   140015e7a:	add    DWORD PTR [rax+0x1],eax
   140015e7d:	add    BYTE PTR [rax],al
   140015e7f:	add    BYTE PTR [rsi],ah
   140015e81:	and    al,BYTE PTR [rcx]
   140015e83:	rex add DWORD PTR [rax],eax
   140015e86:	add    BYTE PTR [rax],al
   140015e88:	push   rsi
   140015e89:	(bad)  
   140015e8a:	add    DWORD PTR [rax+0x1],eax
   140015e8d:	add    BYTE PTR [rax],al
   140015e8f:	add    BYTE PTR [rsi+0x21],cl
   140015e92:	add    DWORD PTR [rax+0x1],eax
   140015e95:	add    BYTE PTR [rax],al
   140015e97:	add    BYTE PTR [rcx+riz*1+0x1],dl
   140015e9b:	rex add DWORD PTR [rax],eax
   140015e9e:	add    BYTE PTR [rax],al
   140015ea0:	sub    al,0x22
   140015ea2:	add    DWORD PTR [rax+0x1],eax
   140015ea5:	add    BYTE PTR [rax],al
   140015ea7:	add    BYTE PTR [rsi+0x1f],ch
   140015eaa:	add    DWORD PTR [rax+0x1],eax
   140015ead:	add    BYTE PTR [rax],al
   140015eaf:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140015eb3:	rex add DWORD PTR [rax],eax
   140015eb6:	add    BYTE PTR [rax],al
   140015eb8:	xor    ah,BYTE PTR [rdx]
   140015eba:	add    DWORD PTR [rax+0x1],eax
   140015ebd:	add    BYTE PTR [rax],al
   140015ebf:	add    BYTE PTR [rax],bh
   140015ec1:	and    al,BYTE PTR [rcx]
   140015ec3:	rex add DWORD PTR [rax],eax
   140015ec6:	add    BYTE PTR [rax],al
   140015ec8:	and    al,BYTE PTR ds:[rcx]
   140015ecb:	rex add DWORD PTR [rax],eax
   140015ece:	add    BYTE PTR [rax],al
   140015ed0:	and    r8b,BYTE PTR [rcx]
   140015ed3:	rex add DWORD PTR [rax],eax
   140015ed6:	add    BYTE PTR [rax],al
   140015ed8:	(bad)  
   140015ed9:	and    DWORD PTR [rcx],eax
   140015edb:	rex add DWORD PTR [rax],eax
   140015ede:	add    BYTE PTR [rax],al
   140015ee0:	cwde   
   140015ee1:	(bad)  
   140015ee2:	add    DWORD PTR [rax+0x1],eax
   140015ee5:	add    BYTE PTR [rax],al
   140015ee7:	add    BYTE PTR [rsi+0x21],ah
   140015eea:	add    DWORD PTR [rax+0x1],eax
   140015eed:	add    BYTE PTR [rax],al
   140015eef:	add    BYTE PTR [rdx+0x22],cl
   140015ef2:	add    DWORD PTR [rax+0x1],eax
   140015ef5:	add    BYTE PTR [rax],al
   140015ef7:	add    BYTE PTR [rax+0x22],dl
   140015efa:	add    DWORD PTR [rax+0x1],eax
   140015efd:	add    BYTE PTR [rax],al
   140015eff:	add    BYTE PTR [rsi+0x22],dl
   140015f02:	add    DWORD PTR [rax+0x1],eax
   140015f05:	add    BYTE PTR [rax],al
   140015f07:	add    BYTE PTR [rsi+0x140011f],dh
   140015f0d:	add    BYTE PTR [rax],al
   140015f0f:	add    BYTE PTR [rax+0x62],ch
   140015f12:	outs   dx,DWORD PTR ds:[rsi]
   140015f13:	js     0x140015f61
   140015f15:	(bad)  
   140015f16:	jns    0x140015f87
   140015f18:	jne    0x140015f8e
   140015f1a:	add    BYTE PTR [rax],al
   140015f1c:	add    BYTE PTR [rax],al
   140015f1e:	add    BYTE PTR [rax],al
   140015f20:	rex iret 
   140015f22:	add    DWORD PTR [rax+0x1],eax
   140015f25:	add    BYTE PTR [rax],al
   140015f27:	add    BYTE PTR [rax],dl
   140015f29:	push   rax
   140015f2a:	add    BYTE PTR [rax+0x1],al
   140015f2d:	add    BYTE PTR [rax],al
   140015f2f:	add    BYTE PTR [rdx+0x1400121],ah
   140015f35:	add    BYTE PTR [rax],al
   140015f37:	add    BYTE PTR [rax+0x1400121],ch
   140015f3d:	add    BYTE PTR [rax],al
   140015f3f:	add    BYTE PTR [rsi+0x1400121],ch
   140015f45:	add    BYTE PTR [rax],al
   140015f47:	add    BYTE PTR [rcx+riz*1+0x14001],dh
   140015f4e:	add    BYTE PTR [rax],al
   140015f50:	mov    edx,0x1400121
   140015f55:	add    BYTE PTR [rax],al
   140015f57:	add    BYTE PTR [rax+riz*1+0x1],ah
   140015f5b:	rex add DWORD PTR [rax],eax
   140015f5e:	add    BYTE PTR [rax],al
   140015f60:	push   0x20
   140015f62:	add    DWORD PTR [rax+0x1],eax
   140015f65:	add    BYTE PTR [rax],al
   140015f67:	add    al,al
   140015f69:	and    DWORD PTR [rcx],eax
   140015f6b:	rex add DWORD PTR [rax],eax
   140015f6e:	add    BYTE PTR [rax],al
   140015f70:	(bad)  
   140015f71:	and    DWORD PTR [rcx],eax
   140015f73:	rex add DWORD PTR [rax],eax
   140015f76:	add    BYTE PTR [rax],al
   140015f78:	int3   
   140015f79:	and    DWORD PTR [rcx],eax
   140015f7b:	rex add DWORD PTR [rax],eax
   140015f7e:	add    BYTE PTR [rax],al
   140015f80:	shl    BYTE PTR [rcx],cl
   140015f82:	add    DWORD PTR [rax+0x1],eax
   140015f85:	add    BYTE PTR [rax],al
   140015f87:	add    BYTE PTR [rax+0x1400120],cl
   140015f8d:	add    BYTE PTR [rax],al
   140015f8f:	add    BYTE PTR [rsi+0x1400120],cl
   140015f95:	add    BYTE PTR [rax],al
   140015f97:	add    BYTE PTR [rax+riz*1+0x14001],dl
   140015f9e:	add    BYTE PTR [rax],al
   140015fa0:	(bad)  
   140015fa1:	and    BYTE PTR [rcx],al
   140015fa3:	rex add DWORD PTR [rax],eax
	...
   140015fae:	add    BYTE PTR [rax],al
   140015fb0:	rex (bad) 
   140015fb2:	add    DWORD PTR [rax+0x1],eax
   140015fb5:	add    BYTE PTR [rax],al
   140015fb7:	add    BYTE PTR [rax+0x21],bh
   140015fba:	add    DWORD PTR [rax+0x1],eax
   140015fbd:	add    BYTE PTR [rax],al
   140015fbf:	add    BYTE PTR [rsi+0x21],bh
   140015fc2:	add    DWORD PTR [rax+0x1],eax
   140015fc5:	add    BYTE PTR [rax],al
   140015fc7:	add    BYTE PTR [rcx+riz*1+0x14001],al
   140015fce:	add    BYTE PTR [rax],al
   140015fd0:	(bad)  
   140015fd1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140015fd5:	add    BYTE PTR [rax],al
   140015fd7:	add    BYTE PTR [rdx+0x28],bh
   140015fda:	add    DWORD PTR [rax+0x1],eax
   140015fdd:	add    BYTE PTR [rax],al
   140015fdf:	add    BYTE PTR [rax+0x1400128],al
   140015fe5:	add    BYTE PTR [rax],al
   140015fe7:	add    BYTE PTR [rax+rbp*1+0x1],bl
   140015feb:	rex add DWORD PTR [rax],eax
   140015fee:	add    BYTE PTR [rax],al
   140015ff0:	and    ah,BYTE PTR [rax]
   140015ff2:	add    DWORD PTR [rax+0x1],eax
   140015ff5:	add    BYTE PTR [rax],al
   140015ff7:	add    BYTE PTR [rax+0x28],ch
   140015ffa:	add    DWORD PTR [rax+0x1],eax
   140015ffd:	add    BYTE PTR [rax],al
   140015fff:	add    BYTE PTR [rsi+0x28],ch
   140016002:	add    DWORD PTR [rax+0x1],eax
   140016005:	add    BYTE PTR [rax],al
   140016007:	add    BYTE PTR [rax+rbp*1+0x1],dh
   14001600b:	rex add DWORD PTR [rax],eax
   14001600e:	add    BYTE PTR [rax],al
   140016010:	mov    ah,BYTE PTR [rcx]
   140016012:	add    DWORD PTR [rax+0x1],eax
   140016015:	add    BYTE PTR [rax],al
   140016017:	add    BYTE PTR [rax+0x1400121],dl
   14001601d:	add    BYTE PTR [rax],al
   14001601f:	add    BYTE PTR [rsi+0x1400121],dl
   140016025:	add    BYTE PTR [rax],al
   140016027:	add    BYTE PTR [rdx],bh
   140016029:	and    BYTE PTR [rcx],al
   14001602b:	rex add DWORD PTR [rax],eax
   14001602e:	add    BYTE PTR [rax],al
   140016030:	pushf  
   140016031:	and    DWORD PTR [rcx],eax
   140016033:	rex add DWORD PTR [rax],eax
   140016036:	add    BYTE PTR [rax],al
   140016038:	ins    BYTE PTR es:[rdi],dx
   140016039:	(bad)  
   14001603a:	(bad)  
   14001603b:	gs ins BYTE PTR es:[rdi],dx
   14001603d:	add    BYTE PTR [rax],al
   14001603f:	add    BYTE PTR [rax],bl
   140016041:	(bad)  
   140016042:	add    DWORD PTR [rax+0x1],eax
   140016045:	add    BYTE PTR [rax],al
   140016047:	add    BYTE PTR [rax],ah
   140016049:	push   rax
   14001604a:	add    BYTE PTR [rax+0x1],al
   14001604d:	add    BYTE PTR [rax],al
   14001604f:	add    ah,ch
   140016051:	(bad)  
   140016052:	add    DWORD PTR [rax+0x1],eax
   140016055:	add    BYTE PTR [rax],al
   140016057:	add    dl,dh
   140016059:	(bad)  
   14001605a:	add    DWORD PTR [rax+0x1],eax
   14001605d:	add    BYTE PTR [rax],al
   14001605f:	add    al,bh
   140016061:	(bad)  
   140016062:	add    DWORD PTR [rax+0x1],eax
   140016065:	add    BYTE PTR [rax],al
   140016067:	add    dh,bh
   140016069:	(bad)  
   14001606a:	add    DWORD PTR [rax+0x1],eax
   14001606d:	add    BYTE PTR [rax],al
   14001606f:	add    BYTE PTR [rax+riz*1],al
   140016072:	add    DWORD PTR [rax+0x1],eax
   140016075:	add    BYTE PTR [rax],al
   140016077:	add    BYTE PTR [rdx],cl
   140016079:	and    BYTE PTR [rcx],al
   14001607b:	rex add DWORD PTR [rax],eax
   14001607e:	add    BYTE PTR [rax],al
   140016080:	sbb    ch,cl
   140016082:	add    DWORD PTR [rax+0x1],eax
   140016085:	add    BYTE PTR [rax],al
   140016087:	add    ah,dh
   140016089:	and    BYTE PTR [rcx],al
   14001608b:	rex add DWORD PTR [rax],eax
   14001608e:	add    BYTE PTR [rax],al
   140016090:	cli    
   140016091:	and    BYTE PTR [rcx],al
   140016093:	rex add DWORD PTR [rax],eax
   140016096:	add    BYTE PTR [rax],al
   140016098:	add    BYTE PTR [rcx],ah
   14001609a:	add    DWORD PTR [rax+0x1],eax
   14001609d:	add    BYTE PTR [rax],al
   14001609f:	add    BYTE PTR [rax],dh
   1400160a1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400160a5:	add    BYTE PTR [rax],al
   1400160a7:	add    BYTE PTR [rsi],al
   1400160a9:	and    DWORD PTR [rcx],eax
   1400160ab:	rex add DWORD PTR [rax],eax
   1400160ae:	add    BYTE PTR [rax],al
   1400160b0:	sub    BYTE PTR [rax],0x1
   1400160b3:	rex add DWORD PTR [rax],eax
   1400160b6:	add    BYTE PTR [rax],al
   1400160b8:	pop    rsp
   1400160b9:	sub    BYTE PTR [rcx],al
   1400160bb:	rex add DWORD PTR [rax],eax
   1400160be:	add    BYTE PTR [rax],al
   1400160c0:	(bad)  
   1400160c1:	sub    BYTE PTR [rcx],al
   1400160c3:	rex add DWORD PTR [rax],eax
   1400160c6:	add    BYTE PTR [rax],al
   1400160c8:	push   0x1400128
   1400160cd:	add    BYTE PTR [rax],al
   1400160cf:	add    BYTE PTR [rsi+0x28],ch
   1400160d2:	add    DWORD PTR [rax+0x1],eax
   1400160d5:	add    BYTE PTR [rax],al
   1400160d7:	add    BYTE PTR [rax+rbp*1+0x1],dh
   1400160db:	rex add DWORD PTR [rax],eax
   1400160de:	add    BYTE PTR [rax],al
   1400160e0:	or     al,0x21
   1400160e2:	add    DWORD PTR [rax+0x1],eax
   1400160e5:	add    BYTE PTR [rax],al
   1400160e7:	add    BYTE PTR [rdx],dl
   1400160e9:	and    DWORD PTR [rcx],eax
   1400160eb:	rex add DWORD PTR [rax],eax
   1400160ee:	add    BYTE PTR [rax],al
   1400160f0:	sbb    BYTE PTR [rcx],ah
   1400160f2:	add    DWORD PTR [rax+0x1],eax
   1400160f5:	add    BYTE PTR [rax],al
   1400160f7:	add    BYTE PTR [rsi],bl
   1400160f9:	and    DWORD PTR [rcx],eax
   1400160fb:	rex add DWORD PTR [rax],eax
   1400160fe:	add    BYTE PTR [rax],al
   140016100:	or     BYTE PTR [rdi],bl
   140016102:	add    DWORD PTR [rax+0x1],eax
   140016105:	add    BYTE PTR [rax],al
   140016107:	add    BYTE PTR [rcx+riz*1],ah
   14001610a:	add    DWORD PTR [rax+0x1],eax
   14001610d:	add    BYTE PTR [rax],al
   14001610f:	add    BYTE PTR [rdx],ch
   140016111:	and    DWORD PTR [rcx],eax
   140016113:	rex add DWORD PTR [rax],eax
   140016116:	add    BYTE PTR [rax],al
   140016118:	sbb    bl,BYTE PTR [rdi]
   14001611a:	add    DWORD PTR [rax+0x1],eax
   14001611d:	add    BYTE PTR [rax],al
   14001611f:	add    BYTE PTR [rax],dh
   140016121:	and    DWORD PTR [rcx],eax
   140016123:	rex add DWORD PTR [rax],eax
   140016126:	add    BYTE PTR [rax],al
   140016128:	es (bad) 
   14001612a:	add    DWORD PTR [rax+0x1],eax
   14001612d:	add    BYTE PTR [rax],al
   14001612f:	add    BYTE PTR [rsi],dh
   140016131:	and    DWORD PTR [rcx],eax
   140016133:	rex add DWORD PTR [rax],eax
   140016136:	add    BYTE PTR [rax],al
   140016138:	xor    bl,BYTE PTR [rdi]
   14001613a:	add    DWORD PTR [rax+0x1],eax
   14001613d:	add    BYTE PTR [rax],al
   14001613f:	add    BYTE PTR [rcx+riz*1],bh
   140016142:	add    DWORD PTR [rax+0x1],eax
   140016145:	add    BYTE PTR [rax],al
   140016147:	add    BYTE PTR [rdx+0x21],al
   14001614a:	add    DWORD PTR [rax+0x1],eax
   14001614d:	add    BYTE PTR [rax],al
   14001614f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140016153:	rex add DWORD PTR [rax],eax
   140016156:	add    BYTE PTR [rax],al
   140016158:	rex.WX (bad) 
   14001615a:	add    DWORD PTR [rax+0x1],eax
   14001615d:	add    BYTE PTR [rax],al
   14001615f:	add    BYTE PTR [rax+0x21],cl
   140016162:	add    DWORD PTR [rax+0x1],eax
   140016165:	add    BYTE PTR [rax],al
   140016167:	add    BYTE PTR [rsi+0x1f],dl
   14001616a:	add    DWORD PTR [rax+0x1],eax
   14001616d:	add    BYTE PTR [rax],al
   14001616f:	add    BYTE PTR [rsi+0x21],cl
   140016172:	add    DWORD PTR [rax+0x1],eax
   140016175:	add    BYTE PTR [rax],al
   140016177:	add    BYTE PTR [rcx+riz*1+0x1],dl
   14001617b:	rex add DWORD PTR [rax],eax
   14001617e:	add    BYTE PTR [rax],al
   140016180:	pop    rdx
   140016181:	and    DWORD PTR [rcx],eax
   140016183:	rex add DWORD PTR [rax],eax
   140016186:	add    BYTE PTR [rax],al
   140016188:	outs   dx,BYTE PTR ds:[rsi]
   140016189:	(bad)  
   14001618a:	add    DWORD PTR [rax+0x1],eax
   14001618d:	add    BYTE PTR [rax],al
   14001618f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140016193:	rex add DWORD PTR [rax],eax
   140016196:	add    BYTE PTR [rax],al
   140016198:	jp     0x1400161b9
   14001619a:	add    DWORD PTR [rax+0x1],eax
   14001619d:	add    BYTE PTR [rax],al
   14001619f:	add    BYTE PTR [rax+0x140011f],al
   1400161a5:	add    BYTE PTR [rax],al
   1400161a7:	add    BYTE PTR [rsi+0x140011f],al
   1400161ad:	add    BYTE PTR [rax],al
   1400161af:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   1400161b6:	add    BYTE PTR [rax],al
   1400161b8:	(bad)  
   1400161b9:	and    DWORD PTR [rcx],eax
   1400161bb:	rex add DWORD PTR [rax],eax
   1400161be:	add    BYTE PTR [rax],al
   1400161c0:	cwde   
   1400161c1:	(bad)  
   1400161c2:	add    DWORD PTR [rax+0x1],eax
   1400161c5:	add    BYTE PTR [rax],al
   1400161c7:	add    BYTE PTR [rsi+0x21],ah
   1400161ca:	add    DWORD PTR [rax+0x1],eax
   1400161cd:	add    BYTE PTR [rax],al
   1400161cf:	add    BYTE PTR [rcx+riz*1+0x1],ch
   1400161d3:	rex add DWORD PTR [rax],eax
   1400161d6:	add    BYTE PTR [rax],al
   1400161d8:	stos   BYTE PTR es:[rdi],al
   1400161d9:	(bad)  
   1400161da:	add    DWORD PTR [rax+0x1],eax
   1400161dd:	add    BYTE PTR [rax],al
   1400161df:	add    BYTE PTR [rax+0x140011f],dh
   1400161e5:	add    BYTE PTR [rax],al
   1400161e7:	add    BYTE PTR [rdx+0x21],dh
   1400161ea:	add    DWORD PTR [rax+0x1],eax
   1400161ed:	add    BYTE PTR [rax],al
   1400161ef:	add    BYTE PTR [rax+0x14001cc],bl
   1400161f5:	add    BYTE PTR [rax],al
   1400161f7:	add    al,dl
   1400161f9:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400161fd:	add    BYTE PTR [rax],al
   1400161ff:	add    BYTE PTR [rax+0x1400120],ah
   140016205:	add    BYTE PTR [rax],al
   140016207:	add    BYTE PTR [rsi+0x1400120],ah
   14001620d:	add    BYTE PTR [rax],al
   14001620f:	add    BYTE PTR [rax+riz*1+0x14001],ch
   140016216:	add    BYTE PTR [rax],al
   140016218:	mov    dl,0x20
   14001621a:	add    DWORD PTR [rax+0x1],eax
   14001621d:	add    BYTE PTR [rax],al
   14001621f:	add    BYTE PTR [rax+0x1400120],bh
   140016225:	add    BYTE PTR [rax],al
   140016227:	add    BYTE PTR [rsi+0x1400120],bh
   14001622d:	add    BYTE PTR [rax],al
   14001622f:	add    ah,al
   140016231:	and    BYTE PTR [rcx],al
   140016233:	rex add DWORD PTR [rax],eax
   140016236:	add    BYTE PTR [rax],al
   140016238:	retf   0x120
   14001623b:	rex add DWORD PTR [rax],eax
   14001623e:	add    BYTE PTR [rax],al
   140016240:	shl    BYTE PTR [rax],1
   140016242:	add    DWORD PTR [rax+0x1],eax
   140016245:	add    BYTE PTR [rax],al
   140016247:	add    dh,dl
   140016249:	and    BYTE PTR [rcx],al
   14001624b:	rex add DWORD PTR [rax],eax
   14001624e:	add    BYTE PTR [rax],al
   140016250:	fsub   QWORD PTR [rax]
   140016252:	add    DWORD PTR [rax+0x1],eax
   140016255:	add    BYTE PTR [rax],al
   140016257:	add    BYTE PTR [rax+0x1400120],cl
   14001625d:	add    BYTE PTR [rax],al
   14001625f:	add    dl,ah
   140016261:	and    BYTE PTR [rcx],al
   140016263:	rex add DWORD PTR [rax],eax
   140016266:	add    BYTE PTR [rax],al
   140016268:	call   0x14141638d
   14001626d:	add    BYTE PTR [rax],al
   14001626f:	add    dh,ch
   140016271:	and    BYTE PTR [rcx],al
   140016273:	rex add DWORD PTR [rax],eax
   140016276:	add    BYTE PTR [rax],al
   140016278:	addr32 jb 0x1400162e4
   14001627b:	fs rex.WR (bad) 
   14001627e:	jns    0x1400162ef
   140016280:	jne    0x1400162f6
	...
   14001628e:	add    BYTE PTR [rax],al
   140016290:	jo     0x14001625e
   140016292:	add    DWORD PTR [rax+0x1],eax
   140016295:	add    BYTE PTR [rax],al
   140016297:	add    BYTE PTR [rax],al
   140016299:	push   rax
   14001629a:	add    BYTE PTR [rax+0x1],al
   14001629d:	add    BYTE PTR [rax],al
   14001629f:	add    BYTE PTR [rsi+0x20],al
   1400162a2:	add    DWORD PTR [rax+0x1],eax
   1400162a5:	add    BYTE PTR [rax],al
   1400162a7:	add    BYTE PTR [rax+riz*1+0x1],cl
   1400162ab:	rex add DWORD PTR [rax],eax
   1400162ae:	add    BYTE PTR [rax],al
   1400162b0:	push   rdx
   1400162b1:	and    BYTE PTR [rcx],al
   1400162b3:	rex add DWORD PTR [rax],eax
   1400162b6:	add    BYTE PTR [rax],al
   1400162b8:	pop    rax
   1400162b9:	and    BYTE PTR [rcx],al
   1400162bb:	rex add DWORD PTR [rax],eax
   1400162be:	add    BYTE PTR [rax],al
   1400162c0:	pop    rsi
   1400162c1:	and    BYTE PTR [rcx],al
   1400162c3:	rex add DWORD PTR [rax],eax
   1400162c6:	add    BYTE PTR [rax],al
   1400162c8:	and    BYTE PTR fs:[rcx],al
   1400162cb:	rex add DWORD PTR [rax],eax
   1400162ce:	add    BYTE PTR [rax],al
   1400162d0:	push   0x20
   1400162d2:	add    DWORD PTR [rax+0x1],eax
   1400162d5:	add    BYTE PTR [rax],al
   1400162d7:	add    BYTE PTR [rax+0x20],dh
   1400162da:	add    DWORD PTR [rax+0x1],eax
   1400162dd:	add    BYTE PTR [rax],al
   1400162df:	add    BYTE PTR [rsi+0x20],dh
   1400162e2:	add    DWORD PTR [rax+0x1],eax
   1400162e5:	add    BYTE PTR [rax],al
   1400162e7:	add    BYTE PTR [rax+riz*1+0x1],bh
   1400162eb:	rex add DWORD PTR [rax],eax
   1400162ee:	add    BYTE PTR [rax],al
   1400162f0:	(bad)  
   1400162f1:	and    BYTE PTR [rcx],al
   1400162f3:	rex add DWORD PTR [rax],eax
   1400162f6:	add    BYTE PTR [rax],al
   1400162f8:	mov    BYTE PTR [rax],ah
   1400162fa:	add    DWORD PTR [rax+0x1],eax
   1400162fd:	add    BYTE PTR [rax],al
   1400162ff:	add    BYTE PTR [rsi+0x1400120],cl
   140016305:	add    BYTE PTR [rax],al
   140016307:	add    BYTE PTR [rax+riz*1+0x14001],dl
   14001630e:	add    BYTE PTR [rax],al
   140016310:	(bad)  
   140016311:	and    BYTE PTR [rcx],al
   140016313:	rex add DWORD PTR [rax],eax
	...
   14001631e:	add    BYTE PTR [rax],al
   140016320:	or     bl,cl
   140016322:	add    DWORD PTR [rax+0x1],eax
   140016325:	add    BYTE PTR [rax],al
   140016327:	add    BYTE PTR [rax],dl
   140016329:	and    BYTE PTR [rcx],al
   14001632b:	rex add DWORD PTR [rax],eax
   14001632e:	add    BYTE PTR [rax],al
   140016330:	(bad)  
   140016331:	and    BYTE PTR [rcx],al
   140016333:	rex add DWORD PTR [rax],eax
   140016336:	add    BYTE PTR [rax],al
   140016338:	sbb    al,0x20
   14001633a:	add    DWORD PTR [rax+0x1],eax
   14001633d:	add    BYTE PTR [rax],al
   14001633f:	add    BYTE PTR [rax],al
   140016341:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   140016345:	add    BYTE PTR [rax],al
   140016347:	add    BYTE PTR [rdx+0x28],bh
   14001634a:	add    DWORD PTR [rax+0x1],eax
   14001634d:	add    BYTE PTR [rax],al
   14001634f:	add    BYTE PTR [rax+0x1400128],al
   140016355:	add    BYTE PTR [rax],al
   140016357:	add    BYTE PTR [rax+rbp*1+0x1],bl
   14001635b:	rex add DWORD PTR [rax],eax
   14001635e:	add    BYTE PTR [rax],al
   140016360:	and    ah,BYTE PTR [rax]
   140016362:	add    DWORD PTR [rax+0x1],eax
   140016365:	add    BYTE PTR [rax],al
   140016367:	add    BYTE PTR [rax+0x28],ch
   14001636a:	add    DWORD PTR [rax+0x1],eax
   14001636d:	add    BYTE PTR [rax],al
   14001636f:	add    BYTE PTR [rsi+0x28],ch
   140016372:	add    DWORD PTR [rax+0x1],eax
   140016375:	add    BYTE PTR [rax],al
   140016377:	add    BYTE PTR [rax+rbp*1+0x1],dh
   14001637b:	rex add DWORD PTR [rax],eax
   14001637e:	add    BYTE PTR [rax],al
   140016380:	sub    BYTE PTR [rax],ah
   140016382:	add    DWORD PTR [rax+0x1],eax
   140016385:	add    BYTE PTR [rax],al
   140016387:	add    BYTE PTR [rsi],ch
   140016389:	and    BYTE PTR [rcx],al
   14001638b:	rex add DWORD PTR [rax],eax
   14001638e:	add    BYTE PTR [rax],al
   140016390:	xor    al,0x20
   140016392:	add    DWORD PTR [rax+0x1],eax
   140016395:	add    BYTE PTR [rax],al
   140016397:	add    BYTE PTR [rdx],bh
   140016399:	and    BYTE PTR [rcx],al
   14001639b:	rex add DWORD PTR [rax],eax
   14001639e:	add    BYTE PTR [rax],al
   1400163a0:	and    BYTE PTR [rcx],al
   1400163a3:	rex add DWORD PTR [rax],eax
   1400163a6:	add    BYTE PTR [rax],al
   1400163a8:	xor    ah,BYTE PTR [rbx+0x6c]
   1400163ab:	imul   esp,DWORD PTR [rbx+0x6b],0x29286465
   1400163b2:	add    BYTE PTR [rax],al
   1400163b4:	add    BYTE PTR [rax],al
   1400163b6:	add    BYTE PTR [rax],al
   1400163b8:	xor    DWORD PTR [rdi+0x65],esp
   1400163bb:	je     0x140016403
   1400163bd:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x28656d61
   1400163c5:	sub    DWORD PTR [rax],eax
	...
   1400163cf:	add    BYTE PTR [rbx+0x70],dl
   1400163d2:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400163d6:	jns    0x1400163f8
   1400163d8:	je     0x140016442
   1400163da:	and    BYTE PTR gs:[rsi],ch
   1400163dd:	(bad)  
   1400163de:	fs jo  0x140016401
   1400163e1:	outs   dx,DWORD PTR ds:[rsi]
   1400163e2:	jb     0x140016404
   1400163e4:	cs movsxd esp,DWORD PTR fs:[rsi+0x20]
   1400163e9:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f79
   1400163f0:	jne    0x140016412
   1400163f2:	ja     0x140016455
   1400163f4:	outs   dx,BYTE PTR ds:[rsi]
   1400163f5:	je     0x140016417
   1400163f7:	je     0x140016468
   1400163f9:	and    BYTE PTR [rbx+0x6f],ah
   1400163fc:	outs   dx,BYTE PTR ds:[rsi]
   1400163fd:	jbe    0x140016464
   1400163ff:	jb     0x140016475
   140016401:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140016405:	je     0x14001646f
   140016407:	and    BYTE PTR gs:[rsi+0x65],ch
   14001640b:	ja     0x14001642d
   14001640d:	push   rcx
   14001640e:	je     0x140016430
   140016410:	push   0x20706c65
   140016415:	jo     0x140016489
   140016417:	outs   dx,DWORD PTR ds:[rsi]
   140016418:	push   0x65
   14001641a:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   14001641e:	outs   dx,DWORD PTR ds:[rsi]
   14001641f:	jb     0x14001648e
   140016421:	(bad)  
   140016422:	je     0x140016444
   140016424:	(bad)  
   140016425:	outs   dx,BYTE PTR ds:[rsi]
   140016426:	fs (bad) 
   140016428:	outs   dx,DWORD PTR ds:[rsi]
   140016429:	jb     0x14001644b
   14001642b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14001642e:	ins    BYTE PTR es:[rdi],dx
   14001642f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140016434:	outs   dx,BYTE PTR ds:[rsi]
   140016435:	and    BYTE PTR [rsi+0x6f],ah
   140016438:	jb     0x1400164a7
   14001643a:	(bad)  
   14001643b:	je     0x14001646b
   14001643d:	add    BYTE PTR [rax],al
   14001643f:	add    BYTE PTR [rcx+0x6e],cl
   140016442:	jo     0x1400164b9
   140016444:	je     0x140016466
   140016446:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x0
   14001644f:	add    BYTE PTR [rax-0x2e],cl
   140016452:	add    DWORD PTR [rax+0x1],eax
   140016455:	add    BYTE PTR [rax],al
   140016457:	add    BYTE PTR [rax],dh
   140016459:	pop    QWORD PTR [rax]
   14001645b:	rex add DWORD PTR [rax],eax
   14001645e:	add    BYTE PTR [rax],al
   140016460:	in     al,dx
   140016461:	(bad)  
   140016462:	add    DWORD PTR [rax+0x1],eax
   140016465:	add    BYTE PTR [rax],al
   140016467:	add    dl,dh
   140016469:	(bad)  
   14001646a:	add    DWORD PTR [rax+0x1],eax
   14001646d:	add    BYTE PTR [rax],al
   14001646f:	add    al,bh
   140016471:	(bad)  
   140016472:	add    DWORD PTR [rax+0x1],eax
   140016475:	add    BYTE PTR [rax],al
   140016477:	add    dh,bh
   140016479:	(bad)  
   14001647a:	add    DWORD PTR [rax+0x1],eax
   14001647d:	add    BYTE PTR [rax],al
   14001647f:	add    BYTE PTR [rax+riz*1],al
   140016482:	add    DWORD PTR [rax+0x1],eax
   140016485:	add    BYTE PTR [rax],al
   140016487:	add    BYTE PTR [rdx],cl
   140016489:	and    BYTE PTR [rcx],al
   14001648b:	rex add DWORD PTR [rax],eax
   14001648e:	add    BYTE PTR [rax],al
   140016490:	rol    QWORD PTR [rcx],1
   140016493:	rex add DWORD PTR [rax],eax
   140016496:	add    BYTE PTR [rax],al
   140016498:	jo     0x1400164b2
   14001649a:	add    DWORD PTR [rax+0x1],eax
   14001649d:	add    BYTE PTR [rax],al
   14001649f:	add    BYTE PTR [rax+0x1400117],dh
   1400164a5:	add    BYTE PTR [rax],al
   1400164a7:	add    BYTE PTR [rax],al
   1400164a9:	sbb    BYTE PTR [rcx],al
   1400164ab:	rex add DWORD PTR [rax],eax
   1400164ae:	add    BYTE PTR [rax],al
   1400164b0:	rex pop QWORD PTR [rax]
   1400164b3:	rex add DWORD PTR [rax],eax
   1400164b6:	add    BYTE PTR [rax],al
   1400164b8:	out    0x22,al
   1400164ba:	add    DWORD PTR [rax+0x1],eax
   1400164bd:	add    BYTE PTR [rax],al
   1400164bf:	add    BYTE PTR [rax+0x1400128],al
   1400164c5:	add    BYTE PTR [rax],al
   1400164c7:	add    BYTE PTR [rax+rbp*1+0x1],bl
   1400164cb:	rex add DWORD PTR [rax],eax
   1400164ce:	add    BYTE PTR [rax],al
   1400164d0:	(bad)  
   1400164d1:	sub    BYTE PTR [rcx],al
   1400164d3:	rex add DWORD PTR [rax],eax
   1400164d6:	add    BYTE PTR [rax],al
   1400164d8:	push   0x1400128
   1400164dd:	add    BYTE PTR [rax],al
   1400164df:	add    BYTE PTR [rsi+0x28],ch
   1400164e2:	add    DWORD PTR [rax+0x1],eax
   1400164e5:	add    BYTE PTR [rax],al
   1400164e7:	add    BYTE PTR [rax+rbp*1+0x1],dh
   1400164eb:	rex add DWORD PTR [rax],eax
   1400164ee:	add    BYTE PTR [rax],al
   1400164f0:	or     al,0x21
   1400164f2:	add    DWORD PTR [rax+0x1],eax
   1400164f5:	add    BYTE PTR [rax],al
   1400164f7:	add    ah,ch
   1400164f9:	and    al,BYTE PTR [rcx]
   1400164fb:	rex add DWORD PTR [rax],eax
   1400164fe:	add    BYTE PTR [rax],al
   140016500:	repnz and al,BYTE PTR [rcx]
   140016503:	rex add DWORD PTR [rax],eax
   140016506:	add    BYTE PTR [rax],al
   140016508:	add    bl,BYTE PTR [rdi]
   14001650a:	add    DWORD PTR [rax+0x1],eax
   14001650d:	add    BYTE PTR [rax],al
   14001650f:	add    BYTE PTR [rax],cl
   140016511:	(bad)  
   140016512:	add    DWORD PTR [rax+0x1],eax
   140016515:	add    BYTE PTR [rax],al
   140016517:	add    BYTE PTR [rsi],cl
   140016519:	(bad)  
   14001651a:	add    DWORD PTR [rax+0x1],eax
   14001651d:	add    BYTE PTR [rax],al
   14001651f:	add    BYTE PTR [rdi+rbx*1],dl
   140016522:	add    DWORD PTR [rax+0x1],eax
   140016525:	add    BYTE PTR [rax],al
   140016527:	add    BYTE PTR [rdx],bl
   140016529:	(bad)  
   14001652a:	add    DWORD PTR [rax+0x1],eax
   14001652d:	add    BYTE PTR [rax],al
   14001652f:	add    BYTE PTR [rax],ah
   140016531:	(bad)  
   140016532:	add    DWORD PTR [rax+0x1],eax
   140016535:	add    BYTE PTR [rax],al
   140016537:	add    BYTE PTR [rsi],ah
   140016539:	(bad)  
   14001653a:	add    DWORD PTR [rax+0x1],eax
   14001653d:	add    BYTE PTR [rax],al
   14001653f:	add    al,bh
   140016541:	and    al,BYTE PTR [rcx]
   140016543:	rex add DWORD PTR [rax],eax
   140016546:	add    BYTE PTR [rax],al
   140016548:	xor    bl,BYTE PTR [rdi]
   14001654a:	add    DWORD PTR [rax+0x1],eax
   14001654d:	add    BYTE PTR [rax],al
   14001654f:	add    BYTE PTR [rax],bh
   140016551:	(bad)  
   140016552:	add    DWORD PTR [rax+0x1],eax
   140016555:	add    BYTE PTR [rax],al
   140016557:	add    BYTE PTR [rsi],bh
   140016559:	(bad)  
   14001655a:	add    DWORD PTR [rax+0x1],eax
   14001655d:	add    BYTE PTR [rax],al
   14001655f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140016563:	rex add DWORD PTR [rax],eax
   140016566:	add    BYTE PTR [rax],al
   140016568:	rex.WX (bad) 
   14001656a:	add    DWORD PTR [rax+0x1],eax
   14001656d:	add    BYTE PTR [rax],al
   14001656f:	add    dh,bh
   140016571:	and    al,BYTE PTR [rcx]
   140016573:	rex add DWORD PTR [rax],eax
   140016576:	add    BYTE PTR [rax],al
   140016578:	push   rsi
   140016579:	(bad)  
   14001657a:	add    DWORD PTR [rax+0x1],eax
   14001657d:	add    BYTE PTR [rax],al
   14001657f:	add    BYTE PTR [rsi+0x21],cl
   140016582:	add    DWORD PTR [rax+0x1],eax
   140016585:	add    BYTE PTR [rax],al
   140016587:	add    BYTE PTR [rcx+riz*1+0x1],dl
   14001658b:	rex add DWORD PTR [rax],eax
   14001658e:	add    BYTE PTR [rax],al
   140016590:	ret    0x122
   140016593:	rex add DWORD PTR [rax],eax
   140016596:	add    BYTE PTR [rax],al
   140016598:	outs   dx,BYTE PTR ds:[rsi]
   140016599:	(bad)  
   14001659a:	add    DWORD PTR [rax+0x1],eax
   14001659d:	add    BYTE PTR [rax],al
   14001659f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   1400165a3:	rex add DWORD PTR [rax],eax
   1400165a6:	add    BYTE PTR [rax],al
   1400165a8:	jp     0x1400165c9
   1400165aa:	add    DWORD PTR [rax+0x1],eax
   1400165ad:	add    BYTE PTR [rax],al
   1400165af:	add    BYTE PTR [rax+0x140011f],al
   1400165b5:	add    BYTE PTR [rax],al
   1400165b7:	add    BYTE PTR [rsi+0x140011f],al
   1400165bd:	add    BYTE PTR [rax],al
   1400165bf:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   1400165c6:	add    BYTE PTR [rax],al
   1400165c8:	(bad)  
   1400165c9:	and    DWORD PTR [rcx],eax
   1400165cb:	rex add DWORD PTR [rax],eax
   1400165ce:	add    BYTE PTR [rax],al
   1400165d0:	cwde   
   1400165d1:	(bad)  
   1400165d2:	add    DWORD PTR [rax+0x1],eax
   1400165d5:	add    BYTE PTR [rax],al
   1400165d7:	add    BYTE PTR [rsi+0x21],ah
   1400165da:	add    DWORD PTR [rax+0x1],eax
   1400165dd:	add    BYTE PTR [rax],al
   1400165df:	add    BYTE PTR [rdi+rbx*1+0x14001],ah
   1400165e6:	add    BYTE PTR [rax],al
   1400165e8:	stos   BYTE PTR es:[rdi],al
   1400165e9:	(bad)  
   1400165ea:	add    DWORD PTR [rax+0x1],eax
   1400165ed:	add    BYTE PTR [rax],al
   1400165ef:	add    BYTE PTR [rax+0x140011f],dh
   1400165f5:	add    BYTE PTR [rax],al
   1400165f7:	add    BYTE PTR [rsi+0x140011f],dh
   1400165fd:	add    BYTE PTR [rax],al
   1400165ff:	add    BYTE PTR [rbx+riz*1],al
   140016602:	add    DWORD PTR [rax+0x1],eax
   140016605:	add    BYTE PTR [rax],al
   140016607:	add    BYTE PTR [rdx],cl
   140016609:	and    eax,DWORD PTR [rcx]
   14001660b:	rex add DWORD PTR [rax],eax
   14001660e:	add    BYTE PTR [rax],al
   140016610:	nop
   140016611:	push   rdx
   140016612:	add    BYTE PTR [rax+0x1],al
   140016615:	add    BYTE PTR [rax],al
   140016617:	add    BYTE PTR [rax],dl
   140016619:	and    eax,DWORD PTR [rcx]
   14001661b:	rex add DWORD PTR [rax],eax
   14001661e:	add    BYTE PTR [rax],al
   140016620:	(bad)  
   140016621:	and    eax,DWORD PTR [rcx]
   140016623:	rex add DWORD PTR [rax],eax
   140016626:	add    BYTE PTR [rax],al
   140016628:	rex.WRXB jo 0x140016690
   14001662b:	outs   dx,BYTE PTR ds:[rsi]
   14001662c:	and    BYTE PTR [rsi+0x69],ah
   14001662f:	ins    BYTE PTR es:[rdi],dx
   140016630:	add    BYTE PTR gs:[rax],al
   140016633:	add    BYTE PTR [rax],al
   140016635:	add    BYTE PTR [rax],al
   140016637:	add    BYTE PTR [rcx+0x74],dl
   14001663a:	and    BYTE PTR [rax+0x65],cl
   14001663d:	ins    BYTE PTR es:[rdi],dx
   14001663e:	jo     0x140016660
   140016640:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x2e2a2820
   140016649:	(bad)  
   14001664a:	fs jo  0x14001666d
   14001664d:	sub    ch,BYTE PTR [rsi]
   14001664f:	movsxd esp,DWORD PTR fs:[rsi+0x29]
   140016653:	add    BYTE PTR [rax],al
   140016655:	add    BYTE PTR [rax],al
   140016657:	add    BYTE PTR [rsi+0x69],al
   14001665a:	ins    BYTE PTR es:[rdi],dx
   14001665b:	and    BYTE PTR gs:[rdi+0x70],cl
   14001665f:	outs   dx,BYTE PTR gs:[rsi]
   140016661:	and    BYTE PTR [rbp+0x72],al
   140016664:	jb     0x1400166d5
   140016666:	jb     0x140016668
   140016668:	push   rsp
   140016669:	push   0x70732065
   14001666e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140016672:	imul   esp,DWORD PTR [rbp+0x64],0x6c696620
   140016679:	and    BYTE PTR gs:[rbx+0x6f],ah
   14001667d:	jne    0x1400166eb
   14001667f:	and    BYTE PTR fs:[rsi+0x6f],ch
   140016683:	je     0x1400166a5
   140016685:	(bad)  
   140016686:	and    BYTE PTR gs:[rdi+0x70],ch
   14001668a:	outs   dx,BYTE PTR gs:[rsi]
   14001668c:	gs and DWORD PTR fs:[rax],eax
   140016690:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x73726150
   140016699:	imul   ebp,DWORD PTR [rsi+0x67],0x72724520
   1400166a0:	outs   dx,DWORD PTR ds:[rsi]
   1400166a1:	jb     0x1400166a3
   1400166a3:	add    BYTE PTR [rax],al
   1400166a5:	add    BYTE PTR [rax],al
   1400166a7:	add    BYTE PTR [rax+0x61],dl
   1400166aa:	jb     0x14001671f
   1400166ac:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
   1400166b3:	outs   dx,DWORD PTR ds:[rsi]
   1400166b4:	jb     0x1400166d6
   1400166b6:	imul   ebp,DWORD PTR [rsi+0x20],0x656e696c
   1400166bd:	and    BYTE PTR [rip+0x2131],ah        # 0x1400187f4
   1400166c3:	add    BYTE PTR [rax],al
   1400166c5:	add    BYTE PTR [rax],al
   1400166c7:	add    BYTE PTR [rsi+0x69],dl
   1400166ca:	jb     0x140016740
   1400166cc:	jne    0x14001672f
   1400166ce:	ins    BYTE PTR es:[rdi],dx
   1400166cf:	and    BYTE PTR [rsi+0x6f],al
   1400166d2:	ins    BYTE PTR es:[rdi],dx
   1400166d3:	fs gs jb 0x140016711
   1400166d7:	add    BYTE PTR [rsi+0x61],cl
   1400166da:	ins    DWORD PTR es:[rdi],dx
   1400166db:	gs jae 0x14001674e
   1400166de:	(bad)  
   1400166df:	movsxd esp,DWORD PTR [rbp+0x3a]
   1400166e2:	add    BYTE PTR [rax],al
   1400166e4:	add    BYTE PTR [rax],al
   1400166e6:	add    BYTE PTR [rax],al
   1400166e8:	rex.RXB
   1400166e9:	outs   dx,BYTE PTR gs:[rsi]
   1400166eb:	gs jb  0x14001674f
   1400166ee:	ins    BYTE PTR es:[rdi],dx
   1400166ef:	push   rax
   1400166f0:	(bad)  
   1400166f1:	add    BYTE PTR gs:[eax],al
   1400166f5:	add    BYTE PTR [rax],al
   1400166f7:	add    BYTE PTR [rsi+0x6f],ah
   1400166fa:	ins    BYTE PTR es:[rdi],dx
   1400166fb:	fs gs jb 0x14001674b
   1400166ff:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   140016706:	add    BYTE PTR [rax],al
   140016708:	ins    BYTE PTR es:[rdi],dx
   140016709:	(bad)  
   14001670a:	(bad)  
   14001670b:	gs ins BYTE PTR es:[rdi],dx
   14001670d:	pop    rdi
   14001670e:	xor    al,BYTE PTR [rax]
   140016710:	outs   dx,BYTE PTR ds:[rsi]
   140016711:	(bad)  
   140016712:	ins    DWORD PTR es:[rdi],dx
   140016713:	gs jae 0x140016786
   140016716:	(bad)  
   140016717:	movsxd esp,DWORD PTR [rbp+0x4c]
   14001671a:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   140016721:	add    BYTE PTR [rax],al
   140016723:	add    BYTE PTR [rax],al
   140016725:	add    BYTE PTR [rax],al
   140016727:	add    BYTE PTR [rax+0x72],dh
   14001672a:	outs   dx,DWORD PTR ds:[rsi]
   14001672b:	fs jne 0x140016791
   14001672e:	je     0x14001678f
   140016730:	xor    DWORD PTR [rsi],ebp
   140016732:	xor    BYTE PTR [rax],al
   140016734:	add    BYTE PTR [rax],al
   140016736:	add    BYTE PTR [rax],al
   140016738:	ins    DWORD PTR es:[rdi],dx
   140016739:	jns    0x14001679e
   14001673b:	outs   dx,DWORD PTR ds:[rsi]
   14001673c:	ins    DWORD PTR es:[rdi],dx
   14001673d:	jo     0x1400167a0
   14001673f:	outs   dx,BYTE PTR ds:[rsi]
   140016740:	jns    0x140016770
   140016742:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140016745:	add    BYTE PTR [rax],al
   140016747:	add    BYTE PTR [rdx],dh
   140016749:	je     0x1400167b0
   14001674b:	js     0x1400167c1
   14001674d:	rex.XB push 0x65676e61
   140016753:	sub    BYTE PTR fs:[rcx+0x53],dl
   140016757:	je     0x1400167cb
   140016759:	imul   ebp,DWORD PTR [rsi+0x67],0x29
   140016760:	xor    ah,BYTE PTR [rbx+0x6f]
   140016763:	ins    DWORD PTR es:[rdi],dx
   140016764:	jo     0x1400167d2
   140016766:	gs je  0x1400167ce
   140016769:	rex.XB push 0x65676e61
   14001676f:	sub    BYTE PTR fs:[rcx],ch
	...
   14001677e:	add    BYTE PTR [rax],al
   140016780:	push   rbx
   140016781:	jo     0x1400167e8
   140016783:	movsxd ebp,DWORD PTR [rcx+0x66]
   140016786:	jns    0x1400167a8
   140016788:	je     0x1400167f2
   14001678a:	and    BYTE PTR gs:[rsi+0x61],ch
   14001678e:	ins    DWORD PTR es:[rdi],dx
   14001678f:	gs jae 0x140016802
   140016792:	(bad)  
   140016793:	movsxd esp,DWORD PTR [rbp+0x20]
   140016796:	(bad)  
   140016797:	outs   dx,BYTE PTR ds:[rsi]
   140016798:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
   14001679d:	and    BYTE PTR [rsi+0x69],dh
   1400167a0:	jb     0x140016816
   1400167a2:	jne    0x140016805
   1400167a4:	ins    BYTE PTR es:[rdi],dx
   1400167a5:	and    BYTE PTR [rsi+0x6f],ah
   1400167a8:	ins    BYTE PTR es:[rdi],dx
   1400167a9:	fs gs jb 0x1400167cd
   1400167ad:	outs   dx,WORD PTR ds:[rsi]
   1400167af:	jb     0x1400167d1
   1400167b1:	je     0x14001681b
   1400167b3:	and    BYTE PTR gs:[rdi+rbp*2+0x63],ah
   1400167b8:	jne    0x140016827
   1400167ba:	outs   dx,BYTE PTR gs:[rsi]
   1400167bc:	je     0x14001681f
   1400167be:	je     0x140016829
   1400167c0:	outs   dx,DWORD PTR ds:[rsi]
   1400167c1:	outs   dx,BYTE PTR ds:[rsi]
   1400167c2:	add    BYTE PTR cs:[rax],al
   1400167c5:	add    BYTE PTR [rax],al
   1400167c7:	add    BYTE PTR [rdi+0x65],al
   1400167ca:	outs   dx,BYTE PTR ds:[rsi]
   1400167cb:	gs jb  0x14001682f
   1400167ce:	ins    BYTE PTR es:[rdi],dx
   1400167cf:	and    BYTE PTR [rbx+0x65],dl
   1400167d2:	je     0x140016848
   1400167d4:	imul   ebp,DWORD PTR [rsi+0x67],0x73
   1400167db:	add    BYTE PTR [rax],al
   1400167dd:	add    BYTE PTR [rax],al
   1400167df:	add    BYTE PTR [rax],cl
   1400167e1:	rol    DWORD PTR [rcx],cl
   1400167e3:	rex add DWORD PTR [rax],eax
   1400167e6:	add    BYTE PTR [rax],al
   1400167e8:	xor    BYTE PTR [rdi+0x14000],cl
   1400167ee:	add    BYTE PTR [rax],al
   1400167f0:	in     al,dx
   1400167f1:	(bad)  
   1400167f2:	add    DWORD PTR [rax+0x1],eax
   1400167f5:	add    BYTE PTR [rax],al
   1400167f7:	add    dl,dh
   1400167f9:	(bad)  
   1400167fa:	add    DWORD PTR [rax+0x1],eax
   1400167fd:	add    BYTE PTR [rax],al
   1400167ff:	add    al,bh
   140016801:	(bad)  
   140016802:	add    DWORD PTR [rax+0x1],eax
   140016805:	add    BYTE PTR [rax],al
   140016807:	add    dh,bh
   140016809:	(bad)  
   14001680a:	add    DWORD PTR [rax+0x1],eax
   14001680d:	add    BYTE PTR [rax],al
   14001680f:	add    BYTE PTR [rax+riz*1],al
   140016812:	add    DWORD PTR [rax+0x1],eax
   140016815:	add    BYTE PTR [rax],al
   140016817:	add    BYTE PTR [rdx],cl
   140016819:	and    BYTE PTR [rcx],al
   14001681b:	rex add DWORD PTR [rax],eax
   14001681e:	add    BYTE PTR [rax],al
   140016820:	jo     0x1400167f4
   140016822:	add    DWORD PTR [rax+0x1],eax
   140016825:	add    BYTE PTR [rax],al
   140016827:	add    BYTE PTR [rax],al
   140016829:	sbb    DWORD PTR [rcx],eax
   14001682b:	rex add DWORD PTR [rax],eax
   14001682e:	add    BYTE PTR [rax],al
   140016830:	movabs al,ds:0xf000000001400118
   140016839:	sbb    BYTE PTR [rcx],al
   14001683b:	rex add DWORD PTR [rax],eax
   14001683e:	add    BYTE PTR [rax],al
   140016840:	rex pop QWORD PTR [rax]
   140016843:	rex add DWORD PTR [rax],eax
   140016846:	add    BYTE PTR [rax],al
   140016848:	out    0x22,al
   14001684a:	add    DWORD PTR [rax+0x1],eax
   14001684d:	add    BYTE PTR [rax],al
   14001684f:	add    BYTE PTR [rax+0x1400128],al
   140016855:	add    BYTE PTR [rax],al
   140016857:	add    BYTE PTR [rax+rbp*1+0x1],bl
   14001685b:	rex add DWORD PTR [rax],eax
   14001685e:	add    BYTE PTR [rax],al
   140016860:	(bad)  
   140016861:	sub    BYTE PTR [rcx],al
   140016863:	rex add DWORD PTR [rax],eax
   140016866:	add    BYTE PTR [rax],al
   140016868:	push   0x1400128
   14001686d:	add    BYTE PTR [rax],al
   14001686f:	add    BYTE PTR [rsi+0x28],ch
   140016872:	add    DWORD PTR [rax+0x1],eax
   140016875:	add    BYTE PTR [rax],al
   140016877:	add    BYTE PTR [rax+rbp*1+0x1],dh
   14001687b:	rex add DWORD PTR [rax],eax
   14001687e:	add    BYTE PTR [rax],al
   140016880:	or     al,0x21
   140016882:	add    DWORD PTR [rax+0x1],eax
   140016885:	add    BYTE PTR [rax],al
   140016887:	add    ah,ch
   140016889:	and    al,BYTE PTR [rcx]
   14001688b:	rex add DWORD PTR [rax],eax
   14001688e:	add    BYTE PTR [rax],al
   140016890:	repnz and al,BYTE PTR [rcx]
   140016893:	rex add DWORD PTR [rax],eax
   140016896:	add    BYTE PTR [rax],al
   140016898:	add    bl,BYTE PTR [rdi]
   14001689a:	add    DWORD PTR [rax+0x1],eax
   14001689d:	add    BYTE PTR [rax],al
   14001689f:	add    BYTE PTR [rax],cl
   1400168a1:	(bad)  
   1400168a2:	add    DWORD PTR [rax+0x1],eax
   1400168a5:	add    BYTE PTR [rax],al
   1400168a7:	add    BYTE PTR [rsi],cl
   1400168a9:	(bad)  
   1400168aa:	add    DWORD PTR [rax+0x1],eax
   1400168ad:	add    BYTE PTR [rax],al
   1400168af:	add    BYTE PTR [rdi+rbx*1],dl
   1400168b2:	add    DWORD PTR [rax+0x1],eax
   1400168b5:	add    BYTE PTR [rax],al
   1400168b7:	add    BYTE PTR [rdx],bl
   1400168b9:	(bad)  
   1400168ba:	add    DWORD PTR [rax+0x1],eax
   1400168bd:	add    BYTE PTR [rax],al
   1400168bf:	add    BYTE PTR [rax],ah
   1400168c1:	(bad)  
   1400168c2:	add    DWORD PTR [rax+0x1],eax
   1400168c5:	add    BYTE PTR [rax],al
   1400168c7:	add    BYTE PTR [rsi],ah
   1400168c9:	(bad)  
   1400168ca:	add    DWORD PTR [rax+0x1],eax
   1400168cd:	add    BYTE PTR [rax],al
   1400168cf:	add    al,bh
   1400168d1:	and    al,BYTE PTR [rcx]
   1400168d3:	rex add DWORD PTR [rax],eax
   1400168d6:	add    BYTE PTR [rax],al
   1400168d8:	xor    bl,BYTE PTR [rdi]
   1400168da:	add    DWORD PTR [rax+0x1],eax
   1400168dd:	add    BYTE PTR [rax],al
   1400168df:	add    BYTE PTR [rax],bh
   1400168e1:	(bad)  
   1400168e2:	add    DWORD PTR [rax+0x1],eax
   1400168e5:	add    BYTE PTR [rax],al
   1400168e7:	add    BYTE PTR [rsi],bh
   1400168e9:	(bad)  
   1400168ea:	add    DWORD PTR [rax+0x1],eax
   1400168ed:	add    BYTE PTR [rax],al
   1400168ef:	add    BYTE PTR [rdi+rbx*1+0x1],al
   1400168f3:	rex add DWORD PTR [rax],eax
   1400168f6:	add    BYTE PTR [rax],al
   1400168f8:	rex.WX (bad) 
   1400168fa:	add    DWORD PTR [rax+0x1],eax
   1400168fd:	add    BYTE PTR [rax],al
   1400168ff:	add    dh,bh
   140016901:	and    al,BYTE PTR [rcx]
   140016903:	rex add DWORD PTR [rax],eax
   140016906:	add    BYTE PTR [rax],al
   140016908:	push   rsi
   140016909:	(bad)  
   14001690a:	add    DWORD PTR [rax+0x1],eax
   14001690d:	add    BYTE PTR [rax],al
   14001690f:	add    BYTE PTR [rsi+0x21],cl
   140016912:	add    DWORD PTR [rax+0x1],eax
   140016915:	add    BYTE PTR [rax],al
   140016917:	add    BYTE PTR [rcx+riz*1+0x1],dl
   14001691b:	rex add DWORD PTR [rax],eax
   14001691e:	add    BYTE PTR [rax],al
   140016920:	ret    0x122
   140016923:	rex add DWORD PTR [rax],eax
   140016926:	add    BYTE PTR [rax],al
   140016928:	outs   dx,BYTE PTR ds:[rsi]
   140016929:	(bad)  
   14001692a:	add    DWORD PTR [rax+0x1],eax
   14001692d:	add    BYTE PTR [rax],al
   14001692f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140016933:	rex add DWORD PTR [rax],eax
   140016936:	add    BYTE PTR [rax],al
   140016938:	jp     0x140016959
   14001693a:	add    DWORD PTR [rax+0x1],eax
   14001693d:	add    BYTE PTR [rax],al
   14001693f:	add    BYTE PTR [rax+0x140011f],al
   140016945:	add    BYTE PTR [rax],al
   140016947:	add    BYTE PTR [rsi+0x140011f],al
   14001694d:	add    BYTE PTR [rax],al
   14001694f:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   140016956:	add    BYTE PTR [rax],al
   140016958:	(bad)  
   140016959:	and    DWORD PTR [rcx],eax
   14001695b:	rex add DWORD PTR [rax],eax
   14001695e:	add    BYTE PTR [rax],al
   140016960:	cwde   
   140016961:	(bad)  
   140016962:	add    DWORD PTR [rax+0x1],eax
   140016965:	add    BYTE PTR [rax],al
   140016967:	add    BYTE PTR [rsi+0x21],ah
   14001696a:	add    DWORD PTR [rax+0x1],eax
   14001696d:	add    BYTE PTR [rax],al
   14001696f:	add    BYTE PTR [rdi+rbx*1+0x14001],ah
   140016976:	add    BYTE PTR [rax],al
   140016978:	stos   BYTE PTR es:[rdi],al
   140016979:	(bad)  
   14001697a:	add    DWORD PTR [rax+0x1],eax
   14001697d:	add    BYTE PTR [rax],al
   14001697f:	add    BYTE PTR [rax+0x140011f],dh
   140016985:	add    BYTE PTR [rax],al
   140016987:	add    BYTE PTR [rsi+0x140011f],dh
   14001698d:	add    BYTE PTR [rax],al
   14001698f:	add    BYTE PTR [rbx+riz*1],al
   140016992:	add    DWORD PTR [rax+0x1],eax
   140016995:	add    BYTE PTR [rax],al
   140016997:	add    BYTE PTR [rdx],cl
   140016999:	and    eax,DWORD PTR [rcx]
   14001699b:	rex add DWORD PTR [rax],eax
   14001699e:	add    BYTE PTR [rax],al
   1400169a0:	push   rax
   1400169a1:	pop    rbp
   1400169a2:	add    BYTE PTR [rax+0x1],al
   1400169a5:	add    BYTE PTR [rax],al
   1400169a7:	add    al,dl
   1400169a9:	push   rbp
   1400169aa:	add    BYTE PTR [rax+0x1],al
   1400169ad:	add    BYTE PTR [rax],al
   1400169af:	add    BYTE PTR [rsi],dl
   1400169b1:	and    eax,DWORD PTR [rcx]
   1400169b3:	rex add DWORD PTR [rax],eax
   1400169b6:	add    BYTE PTR [rax],al
   1400169b8:	rex.WRX (bad) 
   1400169ba:	ins    DWORD PTR es:[rdi],dx
   1400169bb:	gs jae 0x140016a2e
   1400169be:	(bad)  
   1400169bf:	movsxd esp,DWORD PTR [rbp+0x20]
   1400169c2:	rex.RB jb 0x140016a37
   1400169c5:	outs   dx,DWORD PTR ds:[rsi]
   1400169c6:	jb     0x1400169c8
   1400169c8:	push   rsp
   1400169c9:	push   0x616e2065
   1400169ce:	ins    DWORD PTR es:[rdi],dx
   1400169cf:	gs jae 0x140016a42
   1400169d2:	(bad)  
   1400169d3:	movsxd esp,DWORD PTR [rbp+0x20]
   1400169d6:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400169d9:	je     0x140016a3c
   1400169db:	imul   ebp,DWORD PTR [rsi+0x73],0x6d6f7320
   1400169e2:	and    BYTE PTR gs:[rcx+0x6e],ch
   1400169e6:	jbe    0x140016a49
   1400169e8:	ins    BYTE PTR es:[rdi],dx
   1400169e9:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61726168
   1400169f1:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   1400169f5:	jae    0x140016a25
   1400169f7:	add    BYTE PTR [rsi+0x69],dl
   1400169fa:	jb     0x140016a70
   1400169fc:	jne    0x140016a5f
   1400169fe:	ins    BYTE PTR es:[rdi],dx
   1400169ff:	and    BYTE PTR [rsi+0x6f],al
   140016a02:	ins    BYTE PTR es:[rdi],dx
   140016a03:	fs gs jb 0x140016a27
   140016a07:	rex.RB jb 0x140016a7c
   140016a0a:	outs   dx,DWORD PTR ds:[rsi]
   140016a0b:	jb     0x140016a0d
   140016a0d:	add    BYTE PTR [rax],al
   140016a0f:	add    BYTE PTR [rax+rbp*2+0x65],dl
   140016a13:	and    BYTE PTR [rsi+0x69],dh
   140016a16:	jb     0x140016a8c
   140016a18:	jne    0x140016a7b
   140016a1a:	ins    BYTE PTR es:[rdi],dx
   140016a1b:	and    BYTE PTR [rsi+0x6f],ah
   140016a1e:	ins    BYTE PTR es:[rdi],dx
   140016a1f:	fs gs jb 0x140016a43
   140016a23:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140016a26:	je     0x140016a89
   140016a28:	imul   ebp,DWORD PTR [rsi+0x73],0x6d6f7320
   140016a2f:	and    BYTE PTR gs:[rcx+0x6e],ch
   140016a33:	jbe    0x140016a96
   140016a35:	ins    BYTE PTR es:[rdi],dx
   140016a36:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61726168
   140016a3e:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   140016a42:	jae    0x140016a72
   140016a44:	add    BYTE PTR [rax],al
   140016a46:	add    BYTE PTR [rax],al
   140016a48:	push   rdx
   140016a49:	gs ins DWORD PTR es:[rdi],dx
   140016a4b:	outs   dx,DWORD PTR ds:[rsi]
   140016a4c:	jbe    0x140016ab3
   140016a4e:	add    BYTE PTR [rax],al
   140016a50:	rex.B
   140016a51:	fs add BYTE PTR fs:[rcx],dh
   140016a55:	add    BYTE PTR [rax],al
   140016a57:	add    BYTE PTR [rdx],dh
   140016a59:	add    BYTE PTR [rax],al
   140016a5b:	add    BYTE PTR [rax],al
   140016a5d:	add    BYTE PTR [rax],al
   140016a5f:	add    BYTE PTR [rbx+0x75],al
   140016a62:	jae    0x140016ad8
   140016a64:	outs   dx,DWORD PTR ds:[rsi]
   140016a65:	ins    DWORD PTR es:[rdi],dx
   140016a66:	and    BYTE PTR [rsi+0x69],al
   140016a69:	ins    BYTE PTR es:[rdi],dx
   140016a6a:	je     0x140016ad1
   140016a6c:	jb     0x140016ae1
   140016a6e:	add    BYTE PTR [rax],al
   140016a70:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x74612072
   140016a79:	je     0x140016aed
   140016a7b:	imul   esp,DWORD PTR [rdx+0x75],0x20736574
   140016a82:	outs   dx,WORD PTR ds:[rsi]
   140016a84:	jb     0x140016aa6
   140016a86:	movsxd esi,DWORD PTR [rbp+0x72]
   140016a89:	jb     0x140016af0
   140016a8b:	outs   dx,BYTE PTR ds:[rsi]
   140016a8c:	je     0x140016aae
   140016a8e:	outs   dx,DWORD PTR fs:[rsi]
   140016a90:	movsxd esi,DWORD PTR [rbp+0x6d]
   140016a93:	outs   dx,BYTE PTR gs:[rsi]
   140016a95:	je     0x140016af8
   140016a97:	je     0x140016b02
   140016a99:	outs   dx,DWORD PTR ds:[rsi]
   140016a9a:	outs   dx,BYTE PTR ds:[rsi]
   140016a9b:	and    BYTE PTR [rax],ch
   140016a9d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140016aa0:	ins    DWORD PTR es:[rdi],dx
   140016aa1:	(bad)  
   140016aa2:	and    BYTE PTR [rbx+0x65],dh
   140016aa5:	jo     0x140016b08
   140016aa7:	jb     0x140016b0a
   140016aa9:	je     0x140016b10
   140016aab:	and    BYTE PTR fs:[rcx+rbp*2+0x73],ch
   140016ab0:	je     0x140016adb
   140016ab2:	cmp    al,BYTE PTR [rax]
   140016ab4:	add    BYTE PTR [rax],al
   140016ab6:	add    BYTE PTR [rax],al
   140016ab8:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x67615072
   140016ac1:	add    BYTE PTR gs:[rax],al
   140016ac4:	add    BYTE PTR [rax],al
   140016ac6:	add    BYTE PTR [rax],al
   140016ac8:	jb     0x140016b2f
   140016aca:	ins    DWORD PTR es:[rdi],dx
   140016acb:	outs   dx,DWORD PTR ds:[rsi]
   140016acc:	jbe    0x140016b33
   140016ace:	rex.X jne 0x140016b45
   140016ad1:	je     0x140016b42
   140016ad3:	outs   dx,BYTE PTR ds:[rsi]
   140016ad4:	add    BYTE PTR [rax],al
   140016ad6:	add    BYTE PTR [rax],al
   140016ad8:	(bad)  
   140016ad9:	fs fs rex.X jne 0x140016b52
   140016ade:	je     0x140016b4f
   140016ae0:	outs   dx,BYTE PTR ds:[rsi]
	...
   140016aed:	add    BYTE PTR [rax],al
   140016aef:	add    al,cl
   140016af1:	(bad)  
   140016af2:	add    DWORD PTR [rax+0x1],eax
   140016af5:	add    BYTE PTR [rax],al
   140016af7:	add    al,ah
   140016af9:	push   0x14000
   140016afe:	add    BYTE PTR [rax],al
   140016b00:	in     al,dx
   140016b01:	(bad)  
   140016b02:	add    DWORD PTR [rax+0x1],eax
   140016b05:	add    BYTE PTR [rax],al
   140016b07:	add    dl,dh
   140016b09:	(bad)  
   140016b0a:	add    DWORD PTR [rax+0x1],eax
   140016b0d:	add    BYTE PTR [rax],al
   140016b0f:	add    al,bh
   140016b11:	(bad)  
   140016b12:	add    DWORD PTR [rax+0x1],eax
   140016b15:	add    BYTE PTR [rax],al
   140016b17:	add    dh,bh
   140016b19:	(bad)  
   140016b1a:	add    DWORD PTR [rax+0x1],eax
   140016b1d:	add    BYTE PTR [rax],al
   140016b1f:	add    BYTE PTR [rax+riz*1],al
   140016b22:	add    DWORD PTR [rax+0x1],eax
   140016b25:	add    BYTE PTR [rax],al
   140016b27:	add    BYTE PTR [rdx],cl
   140016b29:	and    BYTE PTR [rcx],al
   140016b2b:	rex add DWORD PTR [rax],eax
   140016b2e:	add    BYTE PTR [rax],al
   140016b30:	xor    dh,dl
   140016b32:	add    DWORD PTR [rax+0x1],eax
   140016b35:	add    BYTE PTR [rax],al
   140016b37:	add    BYTE PTR ds:0x14001,ch
   140016b3e:	add    BYTE PTR [rax],al
   140016b40:	xor    ah,BYTE PTR [rip+0x14001]        # 0x14002ab47
   140016b46:	add    BYTE PTR [rax],al
   140016b48:	cmp    BYTE PTR [rip+0x14001],ah        # 0x14002ab4f
   140016b4e:	add    BYTE PTR [rax],al
   140016b50:	nop
   140016b51:	push   0x14000
   140016b56:	add    BYTE PTR [rax],al
   140016b58:	ds and eax,0x14001
   140016b5e:	add    BYTE PTR [rax],al
   140016b60:	sub    BYTE PTR [rax],0x1
   140016b63:	rex add DWORD PTR [rax],eax
   140016b66:	add    BYTE PTR [rax],al
   140016b68:	rex.R and eax,0x14001
   140016b6e:	add    BYTE PTR [rax],al
   140016b70:	(bad)  
   140016b71:	sub    BYTE PTR [rcx],al
   140016b73:	rex add DWORD PTR [rax],eax
   140016b76:	add    BYTE PTR [rax],al
   140016b78:	push   0x1400128
   140016b7d:	add    BYTE PTR [rax],al
   140016b7f:	add    BYTE PTR [rsi+0x28],ch
   140016b82:	add    DWORD PTR [rax+0x1],eax
   140016b85:	add    BYTE PTR [rax],al
   140016b87:	add    BYTE PTR [rax+rbp*1+0x1],dh
   140016b8b:	rex add DWORD PTR [rax],eax
   140016b8e:	add    BYTE PTR [rax],al
   140016b90:	or     al,0x21
   140016b92:	add    DWORD PTR [rax+0x1],eax
   140016b95:	add    BYTE PTR [rax],al
   140016b97:	add    BYTE PTR [rdx+0x25],cl
   140016b9a:	add    DWORD PTR [rax+0x1],eax
   140016b9d:	add    BYTE PTR [rax],al
   140016b9f:	add    BYTE PTR [rax+0x25],dl
   140016ba2:	add    DWORD PTR [rax+0x1],eax
   140016ba5:	add    BYTE PTR [rax],al
   140016ba7:	add    BYTE PTR [rdx],al
   140016ba9:	(bad)  
   140016baa:	add    DWORD PTR [rax+0x1],eax
   140016bad:	add    BYTE PTR [rax],al
   140016baf:	add    BYTE PTR [rax],cl
   140016bb1:	(bad)  
   140016bb2:	add    DWORD PTR [rax+0x1],eax
   140016bb5:	add    BYTE PTR [rax],al
   140016bb7:	add    BYTE PTR [rsi+0x25],dl
   140016bba:	add    DWORD PTR [rax+0x1],eax
   140016bbd:	add    BYTE PTR [rax],al
   140016bbf:	add    BYTE PTR [rbp+riz*1+0x1],bl
   140016bc3:	rex add DWORD PTR [rax],eax
   140016bc6:	add    BYTE PTR [rax],al
   140016bc8:	sbb    bl,BYTE PTR [rdi]
   140016bca:	add    DWORD PTR [rax+0x1],eax
   140016bcd:	add    BYTE PTR [rax],al
   140016bcf:	add    BYTE PTR [rdx+0x1400122],dl
   140016bd5:	add    BYTE PTR [rax],al
   140016bd7:	add    BYTE PTR [rsi],ah
   140016bd9:	(bad)  
   140016bda:	add    DWORD PTR [rax+0x1],eax
   140016bdd:	add    BYTE PTR [rax],al
   140016bdf:	add    BYTE PTR [rdx+0x25],ah
   140016be2:	add    DWORD PTR [rax+0x1],eax
   140016be5:	add    BYTE PTR [rax],al
   140016be7:	add    BYTE PTR [rsi+0x1400122],bl
   140016bed:	add    BYTE PTR [rax],al
   140016bef:	add    BYTE PTR [rax+0x25],ch
   140016bf2:	add    DWORD PTR [rax+0x1],eax
   140016bf5:	add    BYTE PTR [rax],al
   140016bf7:	add    BYTE PTR [rsi+0x25],ch
   140016bfa:	add    DWORD PTR [rax+0x1],eax
   140016bfd:	add    BYTE PTR [rax],al
   140016bff:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140016c03:	rex add DWORD PTR [rax],eax
   140016c06:	add    BYTE PTR [rax],al
   140016c08:	rex.WX (bad) 
   140016c0a:	add    DWORD PTR [rax+0x1],eax
   140016c0d:	add    BYTE PTR [rax],al
   140016c0f:	add    BYTE PTR [rbp+riz*1+0x1],dh
   140016c13:	rex add DWORD PTR [rax],eax
   140016c16:	add    BYTE PTR [rax],al
   140016c18:	push   rsi
   140016c19:	(bad)  
   140016c1a:	add    DWORD PTR [rax+0x1],eax
   140016c1d:	add    BYTE PTR [rax],al
   140016c1f:	add    BYTE PTR [rsi+0x21],cl
   140016c22:	add    DWORD PTR [rax+0x1],eax
   140016c25:	add    BYTE PTR [rax],al
   140016c27:	add    BYTE PTR [rcx+riz*1+0x1],dl
   140016c2b:	rex add DWORD PTR [rax],eax
   140016c2e:	add    BYTE PTR [rax],al
   140016c30:	ret    0x122
   140016c33:	rex add DWORD PTR [rax],eax
   140016c36:	add    BYTE PTR [rax],al
   140016c38:	outs   dx,BYTE PTR ds:[rsi]
   140016c39:	(bad)  
   140016c3a:	add    DWORD PTR [rax+0x1],eax
   140016c3d:	add    BYTE PTR [rax],al
   140016c3f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140016c43:	rex add DWORD PTR [rax],eax
   140016c46:	add    BYTE PTR [rax],al
   140016c48:	jp     0x140016c69
   140016c4a:	add    DWORD PTR [rax+0x1],eax
   140016c4d:	add    BYTE PTR [rax],al
   140016c4f:	add    BYTE PTR [rax+0x140011f],al
   140016c55:	add    BYTE PTR [rax],al
   140016c57:	add    BYTE PTR [rsi+0x140011f],al
   140016c5d:	add    BYTE PTR [rax],al
   140016c5f:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   140016c66:	add    BYTE PTR [rax],al
   140016c68:	(bad)  
   140016c69:	and    DWORD PTR [rcx],eax
   140016c6b:	rex add DWORD PTR [rax],eax
   140016c6e:	add    BYTE PTR [rax],al
   140016c70:	cwde   
   140016c71:	(bad)  
   140016c72:	add    DWORD PTR [rax+0x1],eax
   140016c75:	add    BYTE PTR [rax],al
   140016c77:	add    BYTE PTR [rsi+0x21],ah
   140016c7a:	add    DWORD PTR [rax+0x1],eax
   140016c7d:	add    BYTE PTR [rax],al
   140016c7f:	add    BYTE PTR [rdx+0x25],bh
   140016c82:	add    DWORD PTR [rax+0x1],eax
   140016c85:	add    BYTE PTR [rax],al
   140016c87:	add    BYTE PTR [rdx+0x140011f],ch
   140016c8d:	add    BYTE PTR [rax],al
   140016c8f:	add    BYTE PTR [rax+0x140011f],dh
   140016c95:	add    BYTE PTR [rax],al
   140016c97:	add    BYTE PTR [rsi+0x140011f],dh
   140016c9d:	add    BYTE PTR [rax],al
   140016c9f:	add    BYTE PTR [rax+0x1400125],al
   140016ca5:	add    BYTE PTR [rax],al
   140016ca7:	add    dl,bl
   140016ca9:	and    al,BYTE PTR [rcx]
   140016cab:	rex add DWORD PTR [rax],eax
   140016cae:	add    BYTE PTR [rax],al
   140016cb0:	xchg   BYTE PTR [rip+0x14001],ah        # 0x14002acb7
   140016cb6:	add    BYTE PTR [rax],al
   140016cb8:	movsxd esi,DWORD PTR [rbp+0x73]
   140016cbb:	je     0x140016d2c
   140016cbd:	ins    DWORD PTR es:[rdi],dx
   140016cbe:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x64695772
   140016cc7:	addr32 gs je 0x140016ccb
   140016ccb:	add    BYTE PTR [rax],al
   140016ccd:	add    BYTE PTR [rax],al
   140016ccf:	add    BYTE PTR [rax],cl
   140016cd1:	(bad)  
   140016cd2:	add    DWORD PTR [rax+0x1],eax
   140016cd5:	add    BYTE PTR [rax],al
   140016cd7:	add    al,al
   140016cd9:	push   0x14000
   140016cde:	add    BYTE PTR [rax],al
   140016ce0:	in     al,dx
   140016ce1:	(bad)  
   140016ce2:	add    DWORD PTR [rax+0x1],eax
   140016ce5:	add    BYTE PTR [rax],al
   140016ce7:	add    dl,dh
   140016ce9:	(bad)  
   140016cea:	add    DWORD PTR [rax+0x1],eax
   140016ced:	add    BYTE PTR [rax],al
   140016cef:	add    al,bh
   140016cf1:	(bad)  
   140016cf2:	add    DWORD PTR [rax+0x1],eax
   140016cf5:	add    BYTE PTR [rax],al
   140016cf7:	add    dh,bh
   140016cf9:	(bad)  
   140016cfa:	add    DWORD PTR [rax+0x1],eax
   140016cfd:	add    BYTE PTR [rax],al
   140016cff:	add    BYTE PTR [rax+riz*1],al
   140016d02:	add    DWORD PTR [rax+0x1],eax
   140016d05:	add    BYTE PTR [rax],al
   140016d07:	add    BYTE PTR [rdx],cl
   140016d09:	and    BYTE PTR [rcx],al
   140016d0b:	rex add DWORD PTR [rax],eax
   140016d0e:	add    BYTE PTR [rax],al
   140016d10:	call   0x141416ee8
   140016d15:	add    BYTE PTR [rax],al
   140016d17:	add    BYTE PTR [rdx+0x23],ch
   140016d1a:	add    DWORD PTR [rax+0x1],eax
   140016d1d:	add    BYTE PTR [rax],al
   140016d1f:	add    BYTE PTR [rax+0x23],dh
   140016d22:	add    DWORD PTR [rax+0x1],eax
   140016d25:	add    BYTE PTR [rax],al
   140016d27:	add    BYTE PTR [rsi+0x23],dh
   140016d2a:	add    DWORD PTR [rax+0x1],eax
   140016d2d:	add    BYTE PTR [rax],al
   140016d2f:	add    BYTE PTR [rax+0x68],ah
   140016d32:	add    BYTE PTR [rax+0x1],al
   140016d35:	add    BYTE PTR [rax],al
   140016d37:	add    BYTE PTR [rbx+riz*1+0x1],bh
   140016d3b:	rex add DWORD PTR [rax],eax
   140016d3e:	add    BYTE PTR [rax],al
   140016d40:	(bad)  
   140016d41:	and    eax,DWORD PTR [rcx]
   140016d43:	rex add DWORD PTR [rax],eax
   140016d46:	add    BYTE PTR [rax],al
   140016d48:	mov    BYTE PTR [rbx],ah
   140016d4a:	add    DWORD PTR [rax+0x1],eax
   140016d4d:	add    BYTE PTR [rax],al
   140016d4f:	add    BYTE PTR [rdx+0x28],ah
   140016d52:	add    DWORD PTR [rax+0x1],eax
   140016d55:	add    BYTE PTR [rax],al
   140016d57:	add    BYTE PTR [rax+0x28],ch
   140016d5a:	add    DWORD PTR [rax+0x1],eax
   140016d5d:	add    BYTE PTR [rax],al
   140016d5f:	add    BYTE PTR [rsi+0x28],ch
   140016d62:	add    DWORD PTR [rax+0x1],eax
   140016d65:	add    BYTE PTR [rax],al
   140016d67:	add    BYTE PTR [rax+rbp*1+0x1],dh
   140016d6b:	rex add DWORD PTR [rax],eax
   140016d6e:	add    BYTE PTR [rax],al
   140016d70:	or     al,0x21
   140016d72:	add    DWORD PTR [rax+0x1],eax
   140016d75:	add    BYTE PTR [rax],al
   140016d77:	add    BYTE PTR [rsi+0x1400123],cl
   140016d7d:	add    BYTE PTR [rax],al
   140016d7f:	add    BYTE PTR [rbx+riz*1+0x14001],dl
   140016d86:	add    BYTE PTR [rax],al
   140016d88:	add    bl,BYTE PTR [rdi]
   140016d8a:	add    DWORD PTR [rax+0x1],eax
   140016d8d:	add    BYTE PTR [rax],al
   140016d8f:	add    BYTE PTR [rax],cl
   140016d91:	(bad)  
   140016d92:	add    DWORD PTR [rax+0x1],eax
   140016d95:	add    BYTE PTR [rax],al
   140016d97:	add    BYTE PTR [rdx+0x1400123],bl
   140016d9d:	add    BYTE PTR [rax],al
   140016d9f:	add    BYTE PTR [rax+0x1400123],ah
   140016da5:	add    BYTE PTR [rax],al
   140016da7:	add    BYTE PTR [rsi+0x1400123],ah
   140016dad:	add    BYTE PTR [rax],al
   140016daf:	add    BYTE PTR [rbx+riz*1+0x14001],ch
   140016db6:	add    BYTE PTR [rax],al
   140016db8:	mov    dl,0x23
   140016dba:	add    DWORD PTR [rax+0x1],eax
   140016dbd:	add    BYTE PTR [rax],al
   140016dbf:	add    BYTE PTR [rax+0x1400123],bh
   140016dc5:	add    BYTE PTR [rax],al
   140016dc7:	add    BYTE PTR [rdx],dh
   140016dc9:	(bad)  
   140016dca:	add    DWORD PTR [rax+0x1],eax
   140016dcd:	add    BYTE PTR [rax],al
   140016dcf:	add    BYTE PTR [rsi+0x1400123],bh
   140016dd5:	add    BYTE PTR [rax],al
   140016dd7:	add    ah,al
   140016dd9:	and    eax,DWORD PTR [rcx]
   140016ddb:	rex add DWORD PTR [rax],eax
   140016dde:	add    BYTE PTR [rax],al
   140016de0:	rex.R (bad) 
   140016de2:	add    DWORD PTR [rax+0x1],eax
   140016de5:	add    BYTE PTR [rax],al
   140016de7:	add    BYTE PTR [rdx+0x1f],cl
   140016dea:	add    DWORD PTR [rax+0x1],eax
   140016ded:	add    BYTE PTR [rax],al
   140016def:	add    dl,cl
   140016df1:	and    eax,DWORD PTR [rcx]
   140016df3:	rex add DWORD PTR [rax],eax
   140016df6:	add    BYTE PTR [rax],al
   140016df8:	push   rsi
   140016df9:	(bad)  
   140016dfa:	add    DWORD PTR [rax+0x1],eax
   140016dfd:	add    BYTE PTR [rax],al
   140016dff:	add    al,dl
   140016e01:	and    eax,DWORD PTR [rcx]
   140016e03:	rex add DWORD PTR [rax],eax
   140016e06:	add    BYTE PTR [rax],al
   140016e08:	push   rsp
   140016e09:	and    DWORD PTR [rcx],eax
   140016e0b:	rex add DWORD PTR [rax],eax
   140016e0e:	add    BYTE PTR [rax],al
   140016e10:	(bad)  
   140016e11:	and    eax,DWORD PTR [rcx]
   140016e13:	rex add DWORD PTR [rax],eax
   140016e16:	add    BYTE PTR [rax],al
   140016e18:	outs   dx,BYTE PTR ds:[rsi]
   140016e19:	(bad)  
   140016e1a:	add    DWORD PTR [rax+0x1],eax
   140016e1d:	add    BYTE PTR [rax],al
   140016e1f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140016e23:	rex add DWORD PTR [rax],eax
   140016e26:	add    BYTE PTR [rax],al
   140016e28:	fsub   QWORD PTR [rbx]
   140016e2a:	add    DWORD PTR [rax+0x1],eax
   140016e2d:	add    BYTE PTR [rax],al
   140016e2f:	add    dl,ah
   140016e31:	and    eax,DWORD PTR [rcx]
   140016e33:	rex add DWORD PTR [rax],eax
   140016e36:	add    BYTE PTR [rax],al
   140016e38:	call   0x141416f60
   140016e3d:	add    BYTE PTR [rax],al
   140016e3f:	add    dh,ch
   140016e41:	and    eax,DWORD PTR [rcx]
   140016e43:	rex add DWORD PTR [rax],eax
   140016e46:	add    BYTE PTR [rax],al
   140016e48:	(bad)  
   140016e49:	and    DWORD PTR [rcx],eax
   140016e4b:	rex add DWORD PTR [rax],eax
   140016e4e:	add    BYTE PTR [rax],al
   140016e50:	cwde   
   140016e51:	(bad)  
   140016e52:	add    DWORD PTR [rax+0x1],eax
   140016e55:	add    BYTE PTR [rax],al
   140016e57:	add    BYTE PTR [rsi+0x21],ah
   140016e5a:	add    DWORD PTR [rax+0x1],eax
   140016e5d:	add    BYTE PTR [rax],al
   140016e5f:	add    ah,dh
   140016e61:	and    eax,DWORD PTR [rcx]
   140016e63:	rex add DWORD PTR [rax],eax
   140016e66:	add    BYTE PTR [rax],al
   140016e68:	cli    
   140016e69:	and    eax,DWORD PTR [rcx]
   140016e6b:	rex add DWORD PTR [rax],eax
   140016e6e:	add    BYTE PTR [rax],al
   140016e70:	add    BYTE PTR [rcx+rax*1],ah
   140016e73:	rex add DWORD PTR [rax],eax
   140016e76:	add    BYTE PTR [rax],al
   140016e78:	(bad)  
   140016e79:	and    al,0x1
   140016e7b:	rex add DWORD PTR [rax],eax
   140016e7e:	add    BYTE PTR [rax],al
   140016e80:	or     al,0x24
   140016e82:	add    DWORD PTR [rax+0x1],eax
   140016e85:	add    BYTE PTR [rax],al
   140016e87:	add    BYTE PTR [rdx],dl
   140016e89:	and    al,0x1
   140016e8b:	rex add DWORD PTR [rax],eax
   140016e8e:	add    BYTE PTR [rax],al
   140016e90:	sbb    BYTE PTR [rcx+rax*1],ah
   140016e93:	rex add DWORD PTR [rax],eax
   140016e96:	add    BYTE PTR [rax],al
   140016e98:	(bad)  
   140016e99:	and    al,0x1
   140016e9b:	rex add DWORD PTR [rax],eax
   140016e9e:	add    BYTE PTR [rax],al
   140016ea0:	and    al,0x24
   140016ea2:	add    DWORD PTR [rax+0x1],eax
   140016ea5:	add    BYTE PTR [rax],al
   140016ea7:	add    BYTE PTR [rdx],ch
   140016ea9:	and    al,0x1
   140016eab:	rex add DWORD PTR [rax],eax
   140016eae:	add    BYTE PTR [rax],al
   140016eb0:	xor    BYTE PTR [rcx+rax*1],ah
   140016eb3:	rex add DWORD PTR [rax],eax
   140016eb6:	add    BYTE PTR [rax],al
   140016eb8:	ss and al,0x1
   140016ebb:	rex add DWORD PTR [rax],eax
   140016ebe:	add    BYTE PTR [rax],al
   140016ec0:	cmp    al,0x24
   140016ec2:	add    DWORD PTR [rax+0x1],eax
   140016ec5:	add    BYTE PTR [rax],al
   140016ec7:	add    BYTE PTR [rdx+0x24],al
   140016eca:	add    DWORD PTR [rax+0x1],eax
   140016ecd:	add    BYTE PTR [rax],al
   140016ecf:	add    BYTE PTR [rax+0x24],cl
   140016ed2:	add    DWORD PTR [rax+0x1],eax
   140016ed5:	add    BYTE PTR [rax],al
   140016ed7:	add    BYTE PTR [rsi+0x24],cl
   140016eda:	add    DWORD PTR [rax+0x1],eax
   140016edd:	add    BYTE PTR [rax],al
   140016edf:	add    BYTE PTR [rsp+0x1],dl
   140016ee3:	rex add DWORD PTR [rax],eax
   140016ee6:	add    BYTE PTR [rax],al
   140016ee8:	pop    rdx
   140016ee9:	and    al,0x1
   140016eeb:	rex add DWORD PTR [rax],eax
   140016eee:	add    BYTE PTR [rax],al
   140016ef0:	(bad)  
   140016ef1:	and    al,0x1
   140016ef3:	rex add DWORD PTR [rax],eax
   140016ef6:	add    BYTE PTR [rax],al
   140016ef8:	data16 and al,0x1
   140016efb:	rex add DWORD PTR [rax],eax
   140016efe:	add    BYTE PTR [rax],al
   140016f00:	ins    BYTE PTR es:[rdi],dx
   140016f01:	and    al,0x1
   140016f03:	rex add DWORD PTR [rax],eax
   140016f06:	add    BYTE PTR [rax],al
   140016f08:	jb     0x140016f2e
   140016f0a:	add    DWORD PTR [rax+0x1],eax
   140016f0d:	add    BYTE PTR [rax],al
   140016f0f:	add    BYTE PTR [rax+0x24],bh
   140016f12:	add    DWORD PTR [rax+0x1],eax
   140016f15:	add    BYTE PTR [rax],al
   140016f17:	add    BYTE PTR [rsi+0x24],bh
   140016f1a:	add    DWORD PTR [rax+0x1],eax
   140016f1d:	add    BYTE PTR [rax],al
   140016f1f:	add    BYTE PTR [rsp+0x14001],al
   140016f26:	add    BYTE PTR [rax],al
   140016f28:	mov    ah,BYTE PTR [rcx+rax*1]
   140016f2b:	rex add DWORD PTR [rax],eax
   140016f2e:	add    BYTE PTR [rax],al
   140016f30:	nop
   140016f31:	and    al,0x1
   140016f33:	rex add DWORD PTR [rax],eax
   140016f36:	add    BYTE PTR [rax],al
   140016f38:	xchg   esi,eax
   140016f39:	and    al,0x1
   140016f3b:	rex add DWORD PTR [rax],eax
   140016f3e:	add    BYTE PTR [rax],al
   140016f40:	pushf  
   140016f41:	and    al,0x1
   140016f43:	rex add DWORD PTR [rax],eax
   140016f46:	add    BYTE PTR [rax],al
   140016f48:	movabs ds:0xa800000001400124,al
   140016f51:	and    al,0x1
   140016f53:	rex add DWORD PTR [rax],eax
   140016f56:	add    BYTE PTR [rax],al
   140016f58:	scas   al,BYTE PTR es:[rdi]
   140016f59:	and    al,0x1
   140016f5b:	rex add DWORD PTR [rax],eax
   140016f5e:	add    BYTE PTR [rax],al
   140016f60:	mov    ah,0x24
   140016f62:	add    DWORD PTR [rax+0x1],eax
   140016f65:	add    BYTE PTR [rax],al
   140016f67:	add    BYTE PTR [rdx+0x1400124],bh
   140016f6d:	add    BYTE PTR [rax],al
   140016f6f:	add    al,al
   140016f71:	and    al,0x1
   140016f73:	rex add DWORD PTR [rax],eax
   140016f76:	add    BYTE PTR [rax],al
   140016f78:	(bad)  
   140016f79:	and    al,0x1
   140016f7b:	rex add DWORD PTR [rax],eax
   140016f7e:	add    BYTE PTR [rax],al
   140016f80:	int3   
   140016f81:	and    al,0x1
   140016f83:	rex add DWORD PTR [rax],eax
   140016f86:	add    BYTE PTR [rax],al
   140016f88:	shl    BYTE PTR [rcx+rax*1],cl
   140016f8b:	rex add DWORD PTR [rax],eax
   140016f8e:	add    BYTE PTR [rax],al
   140016f90:	fsub   DWORD PTR [rcx+rax*1]
   140016f93:	rex add DWORD PTR [rax],eax
   140016f96:	add    BYTE PTR [rax],al
   140016f98:	fisub  WORD PTR [rcx+rax*1]
   140016f9b:	rex add DWORD PTR [rax],eax
   140016f9e:	add    BYTE PTR [rax],al
   140016fa0:	in     al,0x24
   140016fa2:	add    DWORD PTR [rax+0x1],eax
   140016fa5:	add    BYTE PTR [rax],al
   140016fa7:	add    dl,ch
   140016fa9:	and    al,0x1
   140016fab:	rex add DWORD PTR [rax],eax
   140016fae:	add    BYTE PTR [rax],al
   140016fb0:	lock and al,0x1
   140016fb3:	rex add DWORD PTR [rax],eax
   140016fb6:	add    BYTE PTR [rax],al
   140016fb8:	mul    BYTE PTR [rcx+rax*1]
   140016fbb:	rex add DWORD PTR [rax],eax
   140016fbe:	add    BYTE PTR [rax],al
   140016fc0:	cld    
   140016fc1:	and    al,0x1
   140016fc3:	rex add DWORD PTR [rax],eax
   140016fc6:	add    BYTE PTR [rax],al
   140016fc8:	add    ah,BYTE PTR [rip+0x14001]        # 0x14002afcf
   140016fce:	add    BYTE PTR [rax],al
   140016fd0:	or     BYTE PTR [rip+0x14001],ah        # 0x14002afd7
   140016fd6:	add    BYTE PTR [rax],al
   140016fd8:	(bad)  
   140016fd9:	and    eax,0x14001
   140016fde:	add    BYTE PTR [rax],al
   140016fe0:	adc    al,0x25
   140016fe2:	add    DWORD PTR [rax+0x1],eax
   140016fe5:	add    BYTE PTR [rax],al
   140016fe7:	add    BYTE PTR [rdx],bl
   140016fe9:	and    eax,0x14001
   140016fee:	add    BYTE PTR [rax],al
   140016ff0:	and    BYTE PTR [rip+0x14001],ah        # 0x14002aff7
   140016ff6:	add    BYTE PTR [rax],al
   140016ff8:	es and eax,0x14001
   140016ffe:	add    BYTE PTR [rax],al
   140017000:	addr32 jb 0x14001706c
   140017003:	fs rex.WR (bad) 
   140017006:	jns    0x140017077
   140017008:	jne    0x14001707e
   14001700a:	xor    DWORD PTR [rax],eax
   14001700c:	add    BYTE PTR [rax],al
   14001700e:	add    BYTE PTR [rax],al
   140017010:	addr32 jb 0x140017082
   140017013:	jne    0x140017085
   140017015:	rex.X outs dx,DWORD PTR ds:[rsi]
   140017017:	js     0x140017019
   140017019:	add    BYTE PTR [rax],al
   14001701b:	add    BYTE PTR [rax],al
   14001701d:	add    BYTE PTR [rax],al
   14001701f:	add    al,al
   140017021:	rol    DWORD PTR [rcx],cl
   140017023:	rex add DWORD PTR [rax],eax
   140017026:	add    BYTE PTR [rax],al
   140017028:	shr    BYTE PTR [rax+0x0],1
   14001702b:	rex add DWORD PTR [rax],eax
   14001702e:	add    BYTE PTR [rax],al
   140017030:	in     al,dx
   140017031:	(bad)  
   140017032:	add    DWORD PTR [rax+0x1],eax
   140017035:	add    BYTE PTR [rax],al
   140017037:	add    dl,dh
   140017039:	(bad)  
   14001703a:	add    DWORD PTR [rax+0x1],eax
   14001703d:	add    BYTE PTR [rax],al
   14001703f:	add    al,bh
   140017041:	(bad)  
   140017042:	add    DWORD PTR [rax+0x1],eax
   140017045:	add    BYTE PTR [rax],al
   140017047:	add    dh,bh
   140017049:	(bad)  
   14001704a:	add    DWORD PTR [rax+0x1],eax
   14001704d:	add    BYTE PTR [rax],al
   14001704f:	add    BYTE PTR [rax+riz*1],al
   140017052:	add    DWORD PTR [rax+0x1],eax
   140017055:	add    BYTE PTR [rax],al
   140017057:	add    BYTE PTR [rdx],cl
   140017059:	and    BYTE PTR [rcx],al
   14001705b:	rex add DWORD PTR [rax],eax
   14001705e:	add    BYTE PTR [rax],al
   140017060:	xor    bl,dl
   140017062:	add    DWORD PTR [rax+0x1],eax
   140017065:	add    BYTE PTR [rax],al
   140017067:	add    BYTE PTR [rbx+riz*1],bl
   14001706a:	add    DWORD PTR [rax+0x1],eax
   14001706d:	add    BYTE PTR [rax],al
   14001706f:	add    BYTE PTR [rdx],ah
   140017071:	and    eax,DWORD PTR [rcx]
   140017073:	rex add DWORD PTR [rax],eax
   140017076:	add    BYTE PTR [rax],al
   140017078:	sub    BYTE PTR [rbx],ah
   14001707a:	add    DWORD PTR [rax+0x1],eax
   14001707d:	add    BYTE PTR [rax],al
   14001707f:	add    BYTE PTR [rax],dh
   140017081:	push   0x14000
   140017086:	add    BYTE PTR [rax],al
   140017088:	and    eax,DWORD PTR cs:[rcx]
   14001708b:	rex add DWORD PTR [rax],eax
   14001708e:	add    BYTE PTR [rax],al
   140017090:	sub    BYTE PTR [rax],0x1
   140017093:	rex add DWORD PTR [rax],eax
   140017096:	add    BYTE PTR [rax],al
   140017098:	pop    rsp
   140017099:	sub    BYTE PTR [rcx],al
   14001709b:	rex add DWORD PTR [rax],eax
   14001709e:	add    BYTE PTR [rax],al
   1400170a0:	xor    al,0x23
   1400170a2:	add    DWORD PTR [rax+0x1],eax
   1400170a5:	add    BYTE PTR [rax],al
   1400170a7:	add    BYTE PTR [rax+0x28],ch
   1400170aa:	add    DWORD PTR [rax+0x1],eax
   1400170ad:	add    BYTE PTR [rax],al
   1400170af:	add    BYTE PTR [rsi+0x28],ch
   1400170b2:	add    DWORD PTR [rax+0x1],eax
   1400170b5:	add    BYTE PTR [rax],al
   1400170b7:	add    BYTE PTR [rax+rbp*1+0x1],dh
   1400170bb:	rex add DWORD PTR [rax],eax
   1400170be:	add    BYTE PTR [rax],al
   1400170c0:	or     al,0x21
   1400170c2:	add    DWORD PTR [rax+0x1],eax
   1400170c5:	add    BYTE PTR [rax],al
   1400170c7:	add    ah,ch
   1400170c9:	and    al,BYTE PTR [rcx]
   1400170cb:	rex add DWORD PTR [rax],eax
   1400170ce:	add    BYTE PTR [rax],al
   1400170d0:	cmp    ah,BYTE PTR [rbx]
   1400170d2:	add    DWORD PTR [rax+0x1],eax
   1400170d5:	add    BYTE PTR [rax],al
   1400170d7:	add    BYTE PTR [rdx],al
   1400170d9:	(bad)  
   1400170da:	add    DWORD PTR [rax+0x1],eax
   1400170dd:	add    BYTE PTR [rax],al
   1400170df:	add    BYTE PTR [rax],cl
   1400170e1:	(bad)  
   1400170e2:	add    DWORD PTR [rax+0x1],eax
   1400170e5:	add    BYTE PTR [rax],al
   1400170e7:	add    BYTE PTR [rax+0x23],al
   1400170ea:	add    DWORD PTR [rax+0x1],eax
   1400170ed:	add    BYTE PTR [rax],al
   1400170ef:	add    BYTE PTR [rsi+0x23],al
   1400170f2:	add    DWORD PTR [rax+0x1],eax
   1400170f5:	add    BYTE PTR [rax],al
   1400170f7:	add    BYTE PTR [rdx],bl
   1400170f9:	(bad)  
   1400170fa:	add    DWORD PTR [rax+0x1],eax
   1400170fd:	add    BYTE PTR [rax],al
   1400170ff:	add    BYTE PTR [rbx+riz*1+0x1],cl
   140017103:	rex add DWORD PTR [rax],eax
   140017106:	add    BYTE PTR [rax],al
   140017108:	es (bad) 
   14001710a:	add    DWORD PTR [rax+0x1],eax
   14001710d:	add    BYTE PTR [rax],al
   14001710f:	add    al,bh
   140017111:	and    al,BYTE PTR [rcx]
   140017113:	rex add DWORD PTR [rax],eax
   140017116:	add    BYTE PTR [rax],al
   140017118:	xor    bl,BYTE PTR [rdi]
   14001711a:	add    DWORD PTR [rax+0x1],eax
   14001711d:	add    BYTE PTR [rax],al
   14001711f:	add    BYTE PTR [rdx+0x23],dl
   140017122:	add    DWORD PTR [rax+0x1],eax
   140017125:	add    BYTE PTR [rax],al
   140017127:	add    BYTE PTR [rsi],bh
   140017129:	(bad)  
   14001712a:	add    DWORD PTR [rax+0x1],eax
   14001712d:	add    BYTE PTR [rax],al
   14001712f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140017133:	rex add DWORD PTR [rax],eax
   140017136:	add    BYTE PTR [rax],al
   140017138:	rex.WX (bad) 
   14001713a:	add    DWORD PTR [rax+0x1],eax
   14001713d:	add    BYTE PTR [rax],al
   14001713f:	add    BYTE PTR [rax+0x23],bl
   140017142:	add    DWORD PTR [rax+0x1],eax
   140017145:	add    BYTE PTR [rax],al
   140017147:	add    BYTE PTR [rsi+0x1f],dl
   14001714a:	add    DWORD PTR [rax+0x1],eax
   14001714d:	add    BYTE PTR [rax],al
   14001714f:	add    BYTE PTR [rsi+0x23],bl
   140017152:	add    DWORD PTR [rax+0x1],eax
   140017155:	add    BYTE PTR [rax],al
   140017157:	add    BYTE PTR [rcx+riz*1+0x1],dl
   14001715b:	rex add DWORD PTR [rax],eax
   14001715e:	add    BYTE PTR [rax],al
   140017160:	ret    0x122
   140017163:	rex add DWORD PTR [rax],eax
   140017166:	add    BYTE PTR [rax],al
   140017168:	outs   dx,BYTE PTR ds:[rsi]
   140017169:	(bad)  
   14001716a:	add    DWORD PTR [rax+0x1],eax
   14001716d:	add    BYTE PTR [rax],al
   14001716f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140017173:	rex add DWORD PTR [rax],eax
   140017176:	add    BYTE PTR [rax],al
   140017178:	jp     0x140017199
   14001717a:	add    DWORD PTR [rax+0x1],eax
   14001717d:	add    BYTE PTR [rax],al
   14001717f:	add    BYTE PTR [rax+0x140011f],al
   140017185:	add    BYTE PTR [rax],al
   140017187:	add    BYTE PTR [rsi+0x140011f],al
   14001718d:	add    BYTE PTR [rax],al
   14001718f:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   140017196:	add    BYTE PTR [rax],al
   140017198:	(bad)  
   140017199:	and    DWORD PTR [rcx],eax
   14001719b:	rex add DWORD PTR [rax],eax
   14001719e:	add    BYTE PTR [rax],al
   1400171a0:	cwde   
   1400171a1:	(bad)  
   1400171a2:	add    DWORD PTR [rax+0x1],eax
   1400171a5:	add    BYTE PTR [rax],al
   1400171a7:	add    BYTE PTR [rsi+0x21],ah
   1400171aa:	add    DWORD PTR [rax+0x1],eax
   1400171ad:	add    BYTE PTR [rax],al
   1400171af:	add    BYTE PTR [rbx+riz*1+0x1],ah
   1400171b3:	rex add DWORD PTR [rax],eax
   1400171b6:	add    BYTE PTR [rax],al
   1400171b8:	stos   BYTE PTR es:[rdi],al
   1400171b9:	(bad)  
   1400171ba:	add    DWORD PTR [rax+0x1],eax
   1400171bd:	add    BYTE PTR [rax],al
   1400171bf:	add    BYTE PTR [rax+0x140011f],dh
   1400171c5:	add    BYTE PTR [rax],al
   1400171c7:	add    BYTE PTR [rsi+0x140011f],dh
   1400171cd:	add    BYTE PTR [rax],al
   1400171cf:	add    BYTE PTR [rsi+0x69],ah
   1400171d2:	ins    BYTE PTR es:[rdi],dx
   1400171d3:	je     0x14001723a
   1400171d5:	jb     0x140017223
   1400171d7:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   1400171de:	add    BYTE PTR [rax],al
   1400171e0:	jne    0x140017250
   1400171e2:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x6572
   1400171e9:	add    BYTE PTR fs:[rax],al
   1400171ec:	add    BYTE PTR [rax],al
   1400171ee:	add    BYTE PTR [rax],al
   1400171f0:	ins    BYTE PTR es:[rdi],dx
   1400171f1:	imul   esi,DWORD PTR [rbx+0x74],0x20666f20
   1400171f8:	(bad)  
   1400171f9:	jbe    0x14001725c
   1400171fb:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6420656c
   140017203:	outs   dx,DWORD PTR ds:[rsi]
   140017204:	movsxd esi,DWORD PTR [rbp+0x6d]
   140017207:	outs   dx,BYTE PTR gs:[rsi]
   140017209:	je     0x14001726c
   14001720b:	je     0x140017276
   14001720d:	outs   dx,DWORD PTR ds:[rsi]
   14001720e:	outs   dx,BYTE PTR ds:[rsi]
   14001720f:	add    al,dh
   140017211:	(bad)  
   140017212:	add    DWORD PTR [rax+0x1],eax
   140017215:	add    BYTE PTR [rax],al
   140017217:	add    BYTE PTR [rax],dl
   140017219:	push   0x0
   14001721b:	rex add DWORD PTR [rax],eax
   14001721e:	add    BYTE PTR [rax],al
   140017220:	mov    WORD PTR [rip+0x14001],fs        # 0x14002b227
   140017226:	add    BYTE PTR [rax],al
   140017228:	xchg   edx,eax
   140017229:	and    eax,0x14001
   14001722e:	add    BYTE PTR [rax],al
   140017230:	cwde   
   140017231:	and    eax,0x14001
   140017236:	add    BYTE PTR [rax],al
   140017238:	sahf   
   140017239:	and    eax,0x14001
   14001723e:	add    BYTE PTR [rax],al
   140017240:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017241:	and    eax,0x14001
   140017246:	add    BYTE PTR [rax],al
   140017248:	stos   BYTE PTR es:[rdi],al
   140017249:	and    eax,0x14001
   14001724e:	add    BYTE PTR [rax],al
   140017250:	xor    DWORD PTR [rdx+0x65],esi
   140017253:	ins    DWORD PTR es:[rdi],dx
   140017254:	outs   dx,DWORD PTR ds:[rsi]
   140017255:	jbe    0x1400172bc
   140017257:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x292872
   140017260:	xor    DWORD PTR [rcx+0x64],esp
   140017263:	imul   r13d,DWORD PTR fs:[rsp+r14*2+0x65],0x292872
   14001726d:	add    BYTE PTR [rax],al
   14001726f:	add    BYTE PTR [rsi+0x69],al
   140017272:	ins    BYTE PTR es:[rdi],dx
   140017273:	je     0x1400172da
   140017275:	jb     0x140017297
   140017277:	rex.B je 0x1400172ee
   14001727a:	jb     0x1400172e5
   14001727c:	(bad)  
   14001727d:	jne    0x1400172f3
   14001727f:	gs jae 0x140017282
   140017282:	add    BYTE PTR [rax],al
   140017284:	add    BYTE PTR [rax],al
   140017286:	add    BYTE PTR [rax],al
   140017288:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x614e2072
   140017291:	ins    DWORD PTR es:[rdi],dx
   140017292:	add    BYTE PTR gs:[rax],al
	...
   14001729d:	add    BYTE PTR [rax],al
   14001729f:	add    BYTE PTR [rbx+0x70],dl
   1400172a2:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400172a6:	jns    0x1400172c8
   1400172a8:	je     0x140017312
   1400172aa:	and    BYTE PTR gs:[rsi+0x69],ah
   1400172ae:	ins    BYTE PTR es:[rdi],dx
   1400172af:	je     0x140017316
   1400172b1:	jb     0x1400172d3
   1400172b3:	(bad)  
   1400172b4:	je     0x14001732a
   1400172b6:	jb     0x140017321
   1400172b8:	(bad)  
   1400172b9:	jne    0x14001732f
   1400172bb:	gs jae 0x1400172de
   1400172be:	outs   dx,WORD PTR ds:[rsi]
   1400172c0:	jb     0x1400172e2
   1400172c2:	je     0x14001732c
   1400172c4:	and    BYTE PTR gs:[rdi+rbp*2+0x63],ah
   1400172c9:	jne    0x140017338
   1400172cb:	outs   dx,BYTE PTR gs:[rsi]
   1400172cd:	je     0x140017330
   1400172cf:	je     0x14001733a
   1400172d1:	outs   dx,DWORD PTR ds:[rsi]
   1400172d2:	outs   dx,BYTE PTR ds:[rsi]
   1400172d3:	and    BYTE PTR cs:[rcx+0x66],cl
   1400172d7:	and    BYTE PTR [rsi+0x69],ah
   1400172da:	ins    BYTE PTR es:[rdi],dx
   1400172db:	je     0x140017342
   1400172dd:	jb     0x1400172ff
   1400172df:	(bad)  
   1400172e0:	je     0x140017356
   1400172e2:	jb     0x14001734d
   1400172e4:	(bad)  
   1400172e5:	jne    0x14001735b
   1400172e7:	gs jae 0x14001730a
   1400172ea:	(bad)  
   1400172eb:	jb     0x140017352
   1400172ed:	and    BYTE PTR [rbp+0x73],dh
   1400172f0:	gs fs sub al,0x20
   1400172f4:	(bad)  
   1400172f5:	ins    BYTE PTR es:[rdi],dx
   1400172f6:	jae    0x140017367
   1400172f8:	and    BYTE PTR [rbp+riz*2+0x66],ah
   1400172fc:	imul   ebp,DWORD PTR [rsi+0x65],0x63206120
   140017303:	jne    0x140017378
   140017305:	je     0x140017376
   140017307:	ins    DWORD PTR es:[rdi],dx
   140017308:	and    BYTE PTR [rsi+0x69],ah
   14001730b:	ins    BYTE PTR es:[rdi],dx
   14001730c:	je     0x140017373
   14001730e:	jb     0x140017330
   140017310:	outs   dx,WORD PTR ds:[rsi]
   140017312:	jb     0x140017334
   140017314:	imul   esi,DWORD PTR [rsi+rbp*1+0x20],0x68746f42
   14001731c:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140017320:	and    BYTE PTR [rsi+0x69],ah
   140017323:	ins    BYTE PTR es:[rdi],dx
   140017324:	je     0x14001738b
   140017326:	jb     0x140017348
   140017328:	(bad)  
   140017329:	je     0x14001739f
   14001732b:	jb     0x140017396
   14001732d:	(bad)  
   14001732e:	jne    0x1400173a4
   140017330:	gs jae 0x140017353
   140017333:	(bad)  
   140017334:	outs   dx,BYTE PTR ds:[rsi]
   140017335:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
   14001733a:	and    BYTE PTR [rbx+0x75],ah
   14001733d:	jae    0x1400173b3
   14001733f:	outs   dx,DWORD PTR ds:[rsi]
   140017340:	ins    DWORD PTR es:[rdi],dx
   140017341:	and    BYTE PTR [rsi+0x69],ah
   140017344:	ins    BYTE PTR es:[rdi],dx
   140017345:	je     0x1400173ac
   140017347:	jb     0x1400173bc
   140017349:	and    BYTE PTR [rcx+0x72],ah
   14001734c:	and    BYTE PTR gs:[rdi+0x70],ch
   140017350:	je     0x1400173bb
   140017352:	outs   dx,DWORD PTR ds:[rsi]
   140017353:	outs   dx,BYTE PTR ds:[rsi]
   140017354:	(bad)  
   140017355:	ins    BYTE PTR es:[rdi],dx
   140017356:	add    BYTE PTR cs:[rsi+0x69],al
   14001735a:	ins    BYTE PTR es:[rdi],dx
   14001735b:	je     0x1400173c2
   14001735d:	jb     0x14001737f
   14001735f:	push   rbx
   140017360:	gs je  0x1400173d7
   140017363:	imul   ebp,DWORD PTR [rsi+0x67],0x73
   14001736a:	add    BYTE PTR [rax],al
   14001736c:	add    BYTE PTR [rax],al
   14001736e:	add    BYTE PTR [rax],al
   140017370:	add    al,bl
   140017372:	add    DWORD PTR [rax+0x1],eax
   140017375:	add    BYTE PTR [rax],al
   140017377:	add    BYTE PTR [rax+0x71],dl
   14001737a:	add    BYTE PTR [rax+0x1],al
   14001737d:	add    BYTE PTR [rax],al
   14001737f:	add    ah,ch
   140017381:	(bad)  
   140017382:	add    DWORD PTR [rax+0x1],eax
   140017385:	add    BYTE PTR [rax],al
   140017387:	add    dl,dh
   140017389:	(bad)  
   14001738a:	add    DWORD PTR [rax+0x1],eax
   14001738d:	add    BYTE PTR [rax],al
   14001738f:	add    al,bh
   140017391:	(bad)  
   140017392:	add    DWORD PTR [rax+0x1],eax
   140017395:	add    BYTE PTR [rax],al
   140017397:	add    dh,bh
   140017399:	(bad)  
   14001739a:	add    DWORD PTR [rax+0x1],eax
   14001739d:	add    BYTE PTR [rax],al
   14001739f:	add    BYTE PTR [rax+riz*1],al
   1400173a2:	add    DWORD PTR [rax+0x1],eax
   1400173a5:	add    BYTE PTR [rax],al
   1400173a7:	add    BYTE PTR [rdx],cl
   1400173a9:	and    BYTE PTR [rcx],al
   1400173ab:	rex add DWORD PTR [rax],eax
   1400173ae:	add    BYTE PTR [rax],al
   1400173b0:	push   0x14001d7
   1400173b5:	add    BYTE PTR [rax],al
   1400173b7:	add    BYTE PTR [rax],ah
   1400173b9:	sbb    al,BYTE PTR [rcx]
   1400173bb:	rex add DWORD PTR [rax],eax
   1400173be:	add    BYTE PTR [rax],al
   1400173c0:	push   rax
   1400173c1:	sbb    DWORD PTR [rcx],eax
   1400173c3:	rex add DWORD PTR [rax],eax
   1400173c6:	add    BYTE PTR [rax],al
   1400173c8:	movabs al,ds:0x4000000001400119
   1400173d1:	jb     0x1400173d3
   1400173d3:	rex add DWORD PTR [rax],eax
   1400173d6:	add    BYTE PTR [rax],al
   1400173d8:	out    0x22,al
   1400173da:	add    DWORD PTR [rax+0x1],eax
   1400173dd:	add    BYTE PTR [rax],al
   1400173df:	add    BYTE PTR [rax+0x1400128],al
   1400173e5:	add    BYTE PTR [rax],al
   1400173e7:	add    BYTE PTR [rax+rbp*1+0x1],bl
   1400173eb:	rex add DWORD PTR [rax],eax
   1400173ee:	add    BYTE PTR [rax],al
   1400173f0:	(bad)  
   1400173f1:	sub    BYTE PTR [rcx],al
   1400173f3:	rex add DWORD PTR [rax],eax
   1400173f6:	add    BYTE PTR [rax],al
   1400173f8:	push   0x1400128
   1400173fd:	add    BYTE PTR [rax],al
   1400173ff:	add    BYTE PTR [rsi+0x28],ch
   140017402:	add    DWORD PTR [rax+0x1],eax
   140017405:	add    BYTE PTR [rax],al
   140017407:	add    BYTE PTR [rax+rbp*1+0x1],dh
   14001740b:	rex add DWORD PTR [rax],eax
   14001740e:	add    BYTE PTR [rax],al
   140017410:	or     al,0x21
   140017412:	add    DWORD PTR [rax+0x1],eax
   140017415:	add    BYTE PTR [rax],al
   140017417:	add    ah,ch
   140017419:	and    al,BYTE PTR [rcx]
   14001741b:	rex add DWORD PTR [rax],eax
   14001741e:	add    BYTE PTR [rax],al
   140017420:	repnz and al,BYTE PTR [rcx]
   140017423:	rex add DWORD PTR [rax],eax
   140017426:	add    BYTE PTR [rax],al
   140017428:	add    bl,BYTE PTR [rdi]
   14001742a:	add    DWORD PTR [rax+0x1],eax
   14001742d:	add    BYTE PTR [rax],al
   14001742f:	add    BYTE PTR [rax],cl
   140017431:	(bad)  
   140017432:	add    DWORD PTR [rax+0x1],eax
   140017435:	add    BYTE PTR [rax],al
   140017437:	add    BYTE PTR [rsi],cl
   140017439:	(bad)  
   14001743a:	add    DWORD PTR [rax+0x1],eax
   14001743d:	add    BYTE PTR [rax],al
   14001743f:	add    BYTE PTR [rdi+rbx*1],dl
   140017442:	add    DWORD PTR [rax+0x1],eax
   140017445:	add    BYTE PTR [rax],al
   140017447:	add    BYTE PTR [rdx],bl
   140017449:	(bad)  
   14001744a:	add    DWORD PTR [rax+0x1],eax
   14001744d:	add    BYTE PTR [rax],al
   14001744f:	add    BYTE PTR [rax],ah
   140017451:	(bad)  
   140017452:	add    DWORD PTR [rax+0x1],eax
   140017455:	add    BYTE PTR [rax],al
   140017457:	add    BYTE PTR [rsi],ah
   140017459:	(bad)  
   14001745a:	add    DWORD PTR [rax+0x1],eax
   14001745d:	add    BYTE PTR [rax],al
   14001745f:	add    al,bh
   140017461:	and    al,BYTE PTR [rcx]
   140017463:	rex add DWORD PTR [rax],eax
   140017466:	add    BYTE PTR [rax],al
   140017468:	xor    bl,BYTE PTR [rdi]
   14001746a:	add    DWORD PTR [rax+0x1],eax
   14001746d:	add    BYTE PTR [rax],al
   14001746f:	add    BYTE PTR [rax],bh
   140017471:	(bad)  
   140017472:	add    DWORD PTR [rax+0x1],eax
   140017475:	add    BYTE PTR [rax],al
   140017477:	add    BYTE PTR [rsi],bh
   140017479:	(bad)  
   14001747a:	add    DWORD PTR [rax+0x1],eax
   14001747d:	add    BYTE PTR [rax],al
   14001747f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140017483:	rex add DWORD PTR [rax],eax
   140017486:	add    BYTE PTR [rax],al
   140017488:	rex.WX (bad) 
   14001748a:	add    DWORD PTR [rax+0x1],eax
   14001748d:	add    BYTE PTR [rax],al
   14001748f:	add    dh,bh
   140017491:	and    al,BYTE PTR [rcx]
   140017493:	rex add DWORD PTR [rax],eax
   140017496:	add    BYTE PTR [rax],al
   140017498:	push   rsi
   140017499:	(bad)  
   14001749a:	add    DWORD PTR [rax+0x1],eax
   14001749d:	add    BYTE PTR [rax],al
   14001749f:	add    BYTE PTR [rsi+0x21],cl
   1400174a2:	add    DWORD PTR [rax+0x1],eax
   1400174a5:	add    BYTE PTR [rax],al
   1400174a7:	add    BYTE PTR [rcx+riz*1+0x1],dl
   1400174ab:	rex add DWORD PTR [rax],eax
   1400174ae:	add    BYTE PTR [rax],al
   1400174b0:	ret    0x122
   1400174b3:	rex add DWORD PTR [rax],eax
   1400174b6:	add    BYTE PTR [rax],al
   1400174b8:	outs   dx,BYTE PTR ds:[rsi]
   1400174b9:	(bad)  
   1400174ba:	add    DWORD PTR [rax+0x1],eax
   1400174bd:	add    BYTE PTR [rax],al
   1400174bf:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   1400174c3:	rex add DWORD PTR [rax],eax
   1400174c6:	add    BYTE PTR [rax],al
   1400174c8:	jp     0x1400174e9
   1400174ca:	add    DWORD PTR [rax+0x1],eax
   1400174cd:	add    BYTE PTR [rax],al
   1400174cf:	add    BYTE PTR [rax+0x140011f],al
   1400174d5:	add    BYTE PTR [rax],al
   1400174d7:	add    BYTE PTR [rsi+0x140011f],al
   1400174dd:	add    BYTE PTR [rax],al
   1400174df:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   1400174e6:	add    BYTE PTR [rax],al
   1400174e8:	(bad)  
   1400174e9:	and    DWORD PTR [rcx],eax
   1400174eb:	rex add DWORD PTR [rax],eax
   1400174ee:	add    BYTE PTR [rax],al
   1400174f0:	cwde   
   1400174f1:	(bad)  
   1400174f2:	add    DWORD PTR [rax+0x1],eax
   1400174f5:	add    BYTE PTR [rax],al
   1400174f7:	add    BYTE PTR [rsi+0x21],ah
   1400174fa:	add    DWORD PTR [rax+0x1],eax
   1400174fd:	add    BYTE PTR [rax],al
   1400174ff:	add    BYTE PTR [rdi+rbx*1+0x14001],ah
   140017506:	add    BYTE PTR [rax],al
   140017508:	stos   BYTE PTR es:[rdi],al
   140017509:	(bad)  
   14001750a:	add    DWORD PTR [rax+0x1],eax
   14001750d:	add    BYTE PTR [rax],al
   14001750f:	add    BYTE PTR [rax+0x140011f],dh
   140017515:	add    BYTE PTR [rax],al
   140017517:	add    BYTE PTR [rsi+0x140011f],dh
   14001751d:	add    BYTE PTR [rax],al
   14001751f:	add    BYTE PTR [rbx+riz*1],al
   140017522:	add    DWORD PTR [rax+0x1],eax
   140017525:	add    BYTE PTR [rax],al
   140017527:	add    BYTE PTR [rdx],cl
   140017529:	and    eax,DWORD PTR [rcx]
   14001752b:	rex add DWORD PTR [rax],eax
   14001752e:	add    BYTE PTR [rax],al
   140017530:	mov    al,0x72
   140017532:	add    BYTE PTR [rax+0x1],al
   140017535:	add    BYTE PTR [rax],al
   140017537:	add    BYTE PTR [rax],dl
   140017539:	and    eax,DWORD PTR [rcx]
   14001753b:	rex add DWORD PTR [rax],eax
   14001753e:	add    BYTE PTR [rax],al
   140017540:	(bad)  
   140017541:	and    eax,DWORD PTR [rcx]
   140017543:	rex add DWORD PTR [rax],eax
   140017546:	add    BYTE PTR [rax],al
   140017548:	push   rsp
   140017549:	push   0x75632065
   14001754e:	jae    0x1400175c4
   140017550:	outs   dx,DWORD PTR ds:[rsi]
   140017551:	ins    DWORD PTR es:[rdi],dx
   140017552:	and    BYTE PTR [rsi+0x69],ah
   140017555:	ins    BYTE PTR es:[rdi],dx
   140017556:	je     0x1400175bd
   140017558:	jb     0x14001757a
   14001755a:	(bad)  
   14001755b:	and    eax,0x69202731
   140017560:	jae    0x140017582
   140017562:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
   14001756a:	ins    DWORD PTR es:[rdi],dx
   14001756b:	jne    0x1400175d9
   14001756d:	je     0x1400175d8
   14001756f:	jo     0x1400175dd
   140017571:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
   140017576:	gs jae 0x1400175a7
   140017579:	add    BYTE PTR [rax],al
   14001757b:	add    BYTE PTR [rax],al
   14001757d:	add    BYTE PTR [rax],al
   14001757f:	add    BYTE PTR [rax+rbp*2+0x65],dl
   140017583:	and    BYTE PTR [rcx+0x74],ah
   140017586:	je     0x1400175fa
   140017588:	imul   esp,DWORD PTR [rdx+0x75],0x20736574
   14001758f:	outs   dx,WORD PTR ds:[rsi]
   140017591:	jb     0x1400175b3
   140017593:	movsxd esi,DWORD PTR [rbp+0x73]
   140017596:	je     0x140017607
   140017598:	ins    DWORD PTR es:[rdi],dx
   140017599:	and    BYTE PTR [rsi+0x69],ah
   14001759c:	ins    BYTE PTR es:[rdi],dx
   14001759d:	je     0x140017604
   14001759f:	jb     0x1400175c1
   1400175a1:	(bad)  
   1400175a2:	and    eax,0x61202731
   1400175a7:	jb     0x14001760e
   1400175a9:	and    BYTE PTR [rbp+riz*2+0x66],ah
   1400175ad:	imul   ebp,DWORD PTR [rsi+0x65],0x756d2064
   1400175b4:	ins    BYTE PTR es:[rdi],dx
   1400175b5:	je     0x140017620
   1400175b7:	jo     0x140017625
   1400175b9:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
   1400175be:	gs jae 0x1400175ef
   1400175c1:	add    BYTE PTR [rax],al
   1400175c3:	add    BYTE PTR [rax],al
   1400175c5:	add    BYTE PTR [rax],al
   1400175c7:	add    BYTE PTR [rcx+0x6e],cl
   1400175ca:	push   0x74697265
   1400175cf:	and    BYTE PTR [rax+0x72],dh
   1400175d2:	imul   di,WORD PTR gs:[rax+0x20],0x7266
   1400175d9:	outs   dx,DWORD PTR ds:[rsi]
   1400175da:	ins    DWORD PTR es:[rdi],dx
   1400175db:	and    BYTE PTR [rsi+0x69],ah
   1400175de:	ins    BYTE PTR es:[rdi],dx
   1400175df:	and    BYTE PTR gs:[rsi+0x61],ch
   1400175e3:	ins    DWORD PTR es:[rdi],dx
   1400175e4:	gs jae 0x1400175e7
   1400175e7:	add    BYTE PTR [rdi+0x6c],al
   1400175ea:	outs   dx,DWORD PTR ds:[rsi]
   1400175eb:	(bad)
   1400175f0:	jb     0x140017657
   1400175f2:	imul   di,WORD PTR [rax+0x3a],0x0
   1400175f8:	rex.XB jb 0x140017660
   1400175fb:	(bad)  
   1400175fc:	je     0x140017663
   1400175fe:	and    BYTE PTR [rcx+0x64],ch
   140017601:	outs   dx,BYTE PTR gs:[rsi]
   140017603:	je     0x14001766e
   140017605:	imul   sp,WORD PTR [rbp+0x72],0x73
   14001760b:	add    BYTE PTR [rax],al
   14001760d:	add    BYTE PTR [rax],al
   14001760f:	add    BYTE PTR [rcx+0x64],cl
   140017612:	outs   dx,BYTE PTR gs:[rsi]
   140017614:	je     0x14001767f
   140017616:	imul   sp,WORD PTR [rbp+0x72],0x6150
   14001761c:	add    BYTE PTR gs:[eax],al
   140017620:	xor    DWORD PTR [rbx+0x65],esi
   140017623:	je     0x14001766a
   140017625:	outs   dx,BYTE PTR ds:[rsi]
   140017626:	(bad)  
   140017627:	(bad)  
   140017628:	ins    BYTE PTR es:[rdi],dx
   140017629:	gs sub BYTE PTR fs:[rdx+0x6f],ah
   14001762e:	outs   dx,DWORD PTR ds:[rsi]
   14001762f:	ins    BYTE PTR es:[rdi],dx
   140017630:	sub    DWORD PTR [rax],eax
   140017632:	add    BYTE PTR [rax],al
   140017634:	add    BYTE PTR [rax],al
   140017636:	add    BYTE PTR [rax],al
   140017638:	imul   bp,WORD PTR [rbp+riz*2+0x4e],0x6d61
   14001763f:	gs rex.X jne 0x1400176b7
   140017643:	je     0x1400176b4
   140017645:	outs   dx,BYTE PTR ds:[rsi]
   140017646:	add    BYTE PTR [rax],al
   140017648:	jo     0x1400176bc
   14001764a:	imul   di,WORD PTR gs:[rax+0x4c],0x6e69
   140017651:	gs rex.RB
   140017653:	imul   esi,DWORD PTR fs:[rax+rax*1+0x0],0x626f6c67
   14001765c:	(bad)  
   14001765d:	ins    BYTE PTR es:[rdi],dx
   14001765e:	rex.X jne 0x1400176d5
   140017661:	je     0x1400176d2
   140017663:	outs   dx,BYTE PTR ds:[rsi]
	...
   140017670:	sbb    cl,0x1
   140017673:	rex add DWORD PTR [rax],eax
   140017676:	add    BYTE PTR [rax],al
   140017678:	lock mov WORD PTR [rax],es
   14001767b:	rex add DWORD PTR [rax],eax
   14001767e:	add    BYTE PTR [rax],al
   140017680:	in     al,dx
   140017681:	(bad)  
   140017682:	add    DWORD PTR [rax+0x1],eax
   140017685:	add    BYTE PTR [rax],al
   140017687:	add    dl,dh
   140017689:	(bad)  
   14001768a:	add    DWORD PTR [rax+0x1],eax
   14001768d:	add    BYTE PTR [rax],al
   14001768f:	add    al,bh
   140017691:	(bad)  
   140017692:	add    DWORD PTR [rax+0x1],eax
   140017695:	add    BYTE PTR [rax],al
   140017697:	add    dh,bh
   140017699:	(bad)  
   14001769a:	add    DWORD PTR [rax+0x1],eax
   14001769d:	add    BYTE PTR [rax],al
   14001769f:	add    BYTE PTR [rax+riz*1],al
   1400176a2:	add    DWORD PTR [rax+0x1],eax
   1400176a5:	add    BYTE PTR [rax],al
   1400176a7:	add    BYTE PTR [rdx],cl
   1400176a9:	and    BYTE PTR [rcx],al
   1400176ab:	rex add DWORD PTR [rax],eax
   1400176ae:	add    BYTE PTR [rax],al
   1400176b0:	call   0x14141788d
   1400176b5:	add    BYTE PTR [rax],al
   1400176b7:	add    dl,dh
   1400176b9:	and    eax,0x14001
   1400176be:	add    BYTE PTR [rax],al
   1400176c0:	clc    
   1400176c1:	and    eax,0x14001
   1400176c6:	add    BYTE PTR [rax],al
   1400176c8:	(bad)  
   1400176c9:	and    eax,0x14001
   1400176ce:	add    BYTE PTR [rax],al
   1400176d0:	ror    BYTE PTR [rax+rax*1+0x140],0x0
   1400176d8:	add    al,0x26
   1400176da:	add    DWORD PTR [rax+0x1],eax
   1400176dd:	add    BYTE PTR [rax],al
   1400176df:	add    BYTE PTR [rax+0x1400128],al
   1400176e5:	add    BYTE PTR [rax],al
   1400176e7:	add    BYTE PTR [rbp+riz*1+0x1],al
   1400176eb:	rex add DWORD PTR [rax],eax
   1400176ee:	add    BYTE PTR [rax],al
   1400176f0:	(bad)  
   1400176f1:	sub    BYTE PTR [rcx],al
   1400176f3:	rex add DWORD PTR [rax],eax
   1400176f6:	add    BYTE PTR [rax],al
   1400176f8:	push   0x1400128
   1400176fd:	add    BYTE PTR [rax],al
   1400176ff:	add    BYTE PTR [rsi+0x28],ch
   140017702:	add    DWORD PTR [rax+0x1],eax
   140017705:	add    BYTE PTR [rax],al
   140017707:	add    BYTE PTR [rax+rbp*1+0x1],dh
   14001770b:	rex add DWORD PTR [rax],eax
   14001770e:	add    BYTE PTR [rax],al
   140017710:	or     al,0x21
   140017712:	add    DWORD PTR [rax+0x1],eax
   140017715:	add    BYTE PTR [rax],al
   140017717:	add    BYTE PTR [rdx],cl
   140017719:	add    DWORD PTR es:[rax+0x1],eax
   14001771d:	add    BYTE PTR [rax],al
   14001771f:	add    BYTE PTR [rax],dl
   140017721:	add    DWORD PTR es:[rax+0x1],eax
   140017725:	add    BYTE PTR [rax],al
   140017727:	add    BYTE PTR [rdx],al
   140017729:	(bad)  
   14001772a:	add    DWORD PTR [rax+0x1],eax
   14001772d:	add    BYTE PTR [rax],al
   14001772f:	add    BYTE PTR [rax],cl
   140017731:	(bad)  
   140017732:	add    DWORD PTR [rax+0x1],eax
   140017735:	add    BYTE PTR [rax],al
   140017737:	add    BYTE PTR [rsi+0x25],dl
   14001773a:	add    DWORD PTR [rax+0x1],eax
   14001773d:	add    BYTE PTR [rax],al
   14001773f:	add    BYTE PTR [rbp+riz*1+0x1],bl
   140017743:	rex add DWORD PTR [rax],eax
   140017746:	add    BYTE PTR [rax],al
   140017748:	sbb    bl,BYTE PTR [rdi]
   14001774a:	add    DWORD PTR [rax+0x1],eax
   14001774d:	add    BYTE PTR [rax],al
   14001774f:	add    BYTE PTR [rsi],dl
   140017751:	add    DWORD PTR es:[rax+0x1],eax
   140017755:	add    BYTE PTR [rax],al
   140017757:	add    BYTE PTR [rsi],ah
   140017759:	(bad)  
   14001775a:	add    DWORD PTR [rax+0x1],eax
   14001775d:	add    BYTE PTR [rax],al
   14001775f:	add    BYTE PTR [rax+0x1400122],bl
   140017765:	add    BYTE PTR [rax],al
   140017767:	add    BYTE PTR [rsi+0x1400122],bl
   14001776d:	add    BYTE PTR [rax],al
   14001776f:	add    BYTE PTR [rdx+riz*1+0x14001],ah
   140017776:	add    BYTE PTR [rax],al
   140017778:	stos   BYTE PTR es:[rdi],al
   140017779:	and    al,BYTE PTR [rcx]
   14001777b:	rex add DWORD PTR [rax],eax
   14001777e:	add    BYTE PTR [rax],al
   140017780:	rex.R (bad) 
   140017782:	add    DWORD PTR [rax+0x1],eax
   140017785:	add    BYTE PTR [rax],al
   140017787:	add    BYTE PTR [rdx+0x1f],cl
   14001778a:	add    DWORD PTR [rax+0x1],eax
   14001778d:	add    BYTE PTR [rax],al
   14001778f:	add    BYTE PTR [rsi+riz*1],bl
   140017792:	add    DWORD PTR [rax+0x1],eax
   140017795:	add    BYTE PTR [rax],al
   140017797:	add    BYTE PTR [rsi+0x1f],dl
   14001779a:	add    DWORD PTR [rax+0x1],eax
   14001779d:	add    BYTE PTR [rax],al
   14001779f:	add    BYTE PTR [rsi+0x21],cl
   1400177a2:	add    DWORD PTR [rax+0x1],eax
   1400177a5:	add    BYTE PTR [rax],al
   1400177a7:	add    BYTE PTR [rcx+riz*1+0x1],dl
   1400177ab:	rex add DWORD PTR [rax],eax
   1400177ae:	add    BYTE PTR [rax],al
   1400177b0:	ret    0x122
   1400177b3:	rex add DWORD PTR [rax],eax
   1400177b6:	add    BYTE PTR [rax],al
   1400177b8:	outs   dx,BYTE PTR ds:[rsi]
   1400177b9:	(bad)  
   1400177ba:	add    DWORD PTR [rax+0x1],eax
   1400177bd:	add    BYTE PTR [rax],al
   1400177bf:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   1400177c3:	rex add DWORD PTR [rax],eax
   1400177c6:	add    BYTE PTR [rax],al
   1400177c8:	jp     0x1400177e9
   1400177ca:	add    DWORD PTR [rax+0x1],eax
   1400177cd:	add    BYTE PTR [rax],al
   1400177cf:	add    BYTE PTR [rax+0x140011f],al
   1400177d5:	add    BYTE PTR [rax],al
   1400177d7:	add    BYTE PTR [rsi+0x140011f],al
   1400177dd:	add    BYTE PTR [rax],al
   1400177df:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   1400177e6:	add    BYTE PTR [rax],al
   1400177e8:	(bad)  
   1400177e9:	and    DWORD PTR [rcx],eax
   1400177eb:	rex add DWORD PTR [rax],eax
   1400177ee:	add    BYTE PTR [rax],al
   1400177f0:	cwde   
   1400177f1:	(bad)  
   1400177f2:	add    DWORD PTR [rax+0x1],eax
   1400177f5:	add    BYTE PTR [rax],al
   1400177f7:	add    BYTE PTR [rsi+0x21],ah
   1400177fa:	add    DWORD PTR [rax+0x1],eax
   1400177fd:	add    BYTE PTR [rax],al
   1400177ff:	add    BYTE PTR [rdx+0x25],bh
   140017802:	add    DWORD PTR [rax+0x1],eax
   140017805:	add    BYTE PTR [rax],al
   140017807:	add    BYTE PTR [rdx+0x140011f],ch
   14001780d:	add    BYTE PTR [rax],al
   14001780f:	add    BYTE PTR [rax+0x140011f],dh
   140017815:	add    BYTE PTR [rax],al
   140017817:	add    BYTE PTR [rsi+0x140011f],dh
   14001781d:	add    BYTE PTR [rax],al
   14001781f:	add    BYTE PTR [rdx],ah
   140017821:	add    DWORD PTR es:[rax+0x1],eax
   140017825:	add    BYTE PTR [rax],al
   140017827:	add    dl,bl
   140017829:	and    al,BYTE PTR [rcx]
   14001782b:	rex add DWORD PTR [rax],eax
   14001782e:	add    BYTE PTR [rax],al
   140017830:	xchg   BYTE PTR [rip+0x14001],ah        # 0x14002b837
   140017836:	add    BYTE PTR [rax],al
   140017838:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   140017840:	gs jb  0x140017886
   140017843:	push   0x426b6365
   140017848:	outs   dx,DWORD PTR ds:[rsi]
   140017849:	js     0x14001784b
   14001784b:	add    BYTE PTR [rax],al
   14001784d:	add    BYTE PTR [rax],al
   14001784f:	add    al,al
   140017851:	fadd   DWORD PTR [rcx]
   140017853:	rex add DWORD PTR [rax],eax
   140017856:	add    BYTE PTR [rax],al
   140017858:	add    BYTE PTR [rbp+0x14000],cl
   14001785e:	add    BYTE PTR [rax],al
   140017860:	in     al,dx
   140017861:	(bad)  
   140017862:	add    DWORD PTR [rax+0x1],eax
   140017865:	add    BYTE PTR [rax],al
   140017867:	add    dl,dh
   140017869:	(bad)  
   14001786a:	add    DWORD PTR [rax+0x1],eax
   14001786d:	add    BYTE PTR [rax],al
   14001786f:	add    al,bh
   140017871:	(bad)  
   140017872:	add    DWORD PTR [rax+0x1],eax
   140017875:	add    BYTE PTR [rax],al
   140017877:	add    dh,bh
   140017879:	(bad)  
   14001787a:	add    DWORD PTR [rax+0x1],eax
   14001787d:	add    BYTE PTR [rax],al
   14001787f:	add    BYTE PTR [rax+riz*1],al
   140017882:	add    DWORD PTR [rax+0x1],eax
   140017885:	add    BYTE PTR [rax],al
   140017887:	add    BYTE PTR [rdx],cl
   140017889:	and    BYTE PTR [rcx],al
   14001788b:	rex add DWORD PTR [rax],eax
   14001788e:	add    BYTE PTR [rax],al
   140017890:	sub    al,bl
   140017892:	add    DWORD PTR [rax+0x1],eax
   140017895:	add    BYTE PTR [rax],al
   140017897:	add    BYTE PTR [rax+0x1400125],dh
   14001789d:	add    BYTE PTR [rax],al
   14001789f:	add    BYTE PTR [rsi+0x1400125],dh
   1400178a5:	add    BYTE PTR [rax],al
   1400178a7:	add    BYTE PTR [rbp+riz*1+0x14001],bh
   1400178ae:	add    BYTE PTR [rax],al
   1400178b0:	nop
   1400178b1:	mov    WORD PTR [rax],es
   1400178b3:	rex add DWORD PTR [rax],eax
   1400178b6:	add    BYTE PTR [rax],al
   1400178b8:	ret    0x125
   1400178bb:	rex add DWORD PTR [rax],eax
   1400178be:	add    BYTE PTR [rax],al
   1400178c0:	sub    BYTE PTR [rax],0x1
   1400178c3:	rex add DWORD PTR [rax],eax
   1400178c6:	add    BYTE PTR [rax],al
   1400178c8:	rex.R and eax,0x14001
   1400178ce:	add    BYTE PTR [rax],al
   1400178d0:	(bad)  
   1400178d1:	sub    BYTE PTR [rcx],al
   1400178d3:	rex add DWORD PTR [rax],eax
   1400178d6:	add    BYTE PTR [rax],al
   1400178d8:	push   0x1400128
   1400178dd:	add    BYTE PTR [rax],al
   1400178df:	add    BYTE PTR [rsi+0x28],ch
   1400178e2:	add    DWORD PTR [rax+0x1],eax
   1400178e5:	add    BYTE PTR [rax],al
   1400178e7:	add    BYTE PTR [rax+rbp*1+0x1],dh
   1400178eb:	rex add DWORD PTR [rax],eax
   1400178ee:	add    BYTE PTR [rax],al
   1400178f0:	or     al,0x21
   1400178f2:	add    DWORD PTR [rax+0x1],eax
   1400178f5:	add    BYTE PTR [rax],al
   1400178f7:	add    al,cl
   1400178f9:	and    eax,0x14001
   1400178fe:	add    BYTE PTR [rax],al
   140017900:	(bad)  
   140017901:	and    eax,0x14001
   140017906:	add    BYTE PTR [rax],al
   140017908:	add    bl,BYTE PTR [rdi]
   14001790a:	add    DWORD PTR [rax+0x1],eax
   14001790d:	add    BYTE PTR [rax],al
   14001790f:	add    BYTE PTR [rax],cl
   140017911:	(bad)  
   140017912:	add    DWORD PTR [rax+0x1],eax
   140017915:	add    BYTE PTR [rax],al
   140017917:	add    BYTE PTR [rsi+0x25],dl
   14001791a:	add    DWORD PTR [rax+0x1],eax
   14001791d:	add    BYTE PTR [rax],al
   14001791f:	add    BYTE PTR [rbp+riz*1+0x1],bl
   140017923:	rex add DWORD PTR [rax],eax
   140017926:	add    BYTE PTR [rax],al
   140017928:	sbb    bl,BYTE PTR [rdi]
   14001792a:	add    DWORD PTR [rax+0x1],eax
   14001792d:	add    BYTE PTR [rax],al
   14001792f:	add    ah,dl
   140017931:	and    eax,0x14001
   140017936:	add    BYTE PTR [rax],al
   140017938:	es (bad) 
   14001793a:	add    DWORD PTR [rax+0x1],eax
   14001793d:	add    BYTE PTR [rax],al
   14001793f:	add    BYTE PTR [rax+0x1400122],bl
   140017945:	add    BYTE PTR [rax],al
   140017947:	add    BYTE PTR [rsi+0x1400122],bl
   14001794d:	add    BYTE PTR [rax],al
   14001794f:	add    BYTE PTR [rdx+riz*1+0x14001],ah
   140017956:	add    BYTE PTR [rax],al
   140017958:	stos   BYTE PTR es:[rdi],al
   140017959:	and    al,BYTE PTR [rcx]
   14001795b:	rex add DWORD PTR [rax],eax
   14001795e:	add    BYTE PTR [rax],al
   140017960:	rex.R (bad) 
   140017962:	add    DWORD PTR [rax+0x1],eax
   140017965:	add    BYTE PTR [rax],al
   140017967:	add    BYTE PTR [rdx+0x1f],cl
   14001796a:	add    DWORD PTR [rax+0x1],eax
   14001796d:	add    BYTE PTR [rax],al
   14001796f:	add    dl,bl
   140017971:	and    eax,0x14001
   140017976:	add    BYTE PTR [rax],al
   140017978:	push   rsi
   140017979:	(bad)  
   14001797a:	add    DWORD PTR [rax+0x1],eax
   14001797d:	add    BYTE PTR [rax],al
   14001797f:	add    BYTE PTR [rsi+0x21],cl
   140017982:	add    DWORD PTR [rax+0x1],eax
   140017985:	add    BYTE PTR [rax],al
   140017987:	add    BYTE PTR [rcx+riz*1+0x1],dl
   14001798b:	rex add DWORD PTR [rax],eax
   14001798e:	add    BYTE PTR [rax],al
   140017990:	ret    0x122
   140017993:	rex add DWORD PTR [rax],eax
   140017996:	add    BYTE PTR [rax],al
   140017998:	outs   dx,BYTE PTR ds:[rsi]
   140017999:	(bad)  
   14001799a:	add    DWORD PTR [rax+0x1],eax
   14001799d:	add    BYTE PTR [rax],al
   14001799f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   1400179a3:	rex add DWORD PTR [rax],eax
   1400179a6:	add    BYTE PTR [rax],al
   1400179a8:	jp     0x1400179c9
   1400179aa:	add    DWORD PTR [rax+0x1],eax
   1400179ad:	add    BYTE PTR [rax],al
   1400179af:	add    BYTE PTR [rax+0x140011f],al
   1400179b5:	add    BYTE PTR [rax],al
   1400179b7:	add    BYTE PTR [rsi+0x140011f],al
   1400179bd:	add    BYTE PTR [rax],al
   1400179bf:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   1400179c6:	add    BYTE PTR [rax],al
   1400179c8:	(bad)  
   1400179c9:	and    DWORD PTR [rcx],eax
   1400179cb:	rex add DWORD PTR [rax],eax
   1400179ce:	add    BYTE PTR [rax],al
   1400179d0:	cwde   
   1400179d1:	(bad)  
   1400179d2:	add    DWORD PTR [rax+0x1],eax
   1400179d5:	add    BYTE PTR [rax],al
   1400179d7:	add    BYTE PTR [rsi+0x21],ah
   1400179da:	add    DWORD PTR [rax+0x1],eax
   1400179dd:	add    BYTE PTR [rax],al
   1400179df:	add    BYTE PTR [rdx+0x25],bh
   1400179e2:	add    DWORD PTR [rax+0x1],eax
   1400179e5:	add    BYTE PTR [rax],al
   1400179e7:	add    BYTE PTR [rdx+0x140011f],ch
   1400179ed:	add    BYTE PTR [rax],al
   1400179ef:	add    BYTE PTR [rax+0x140011f],dh
   1400179f5:	add    BYTE PTR [rax],al
   1400179f7:	add    BYTE PTR [rsi+0x140011f],dh
   1400179fd:	add    BYTE PTR [rax],al
   1400179ff:	add    al,ah
   140017a01:	and    eax,0x14001
   140017a06:	add    BYTE PTR [rax],al
   140017a08:	out    0x25,al
   140017a0a:	add    DWORD PTR [rax+0x1],eax
   140017a0d:	add    BYTE PTR [rax],al
   140017a0f:	add    ah,ch
   140017a11:	and    eax,0x14001
   140017a16:	add    BYTE PTR [rax],al
   140017a18:	xor    DWORD PTR [rbx+0x65],esi
   140017a1b:	je     0x140017a92
   140017a1d:	jo     0x140017a61
   140017a1f:	jne    0x140017a95
   140017a21:	je     0x140017a92
   140017a23:	outs   dx,BYTE PTR ds:[rsi]
   140017a24:	jae    0x140017a4e
   140017a26:	(bad)  
   140017a27:	outs   dx,DWORD PTR ds:[rsi]
   140017a28:	outs   dx,DWORD PTR ds:[rsi]
   140017a29:	ins    BYTE PTR es:[rdi],dx
   140017a2a:	sub    DWORD PTR [rax],eax
   140017a2c:	add    BYTE PTR [rax],al
   140017a2e:	add    BYTE PTR [rax],al
   140017a30:	push   rsp
   140017a31:	push   0x70207369
   140017a36:	(bad)  
   140017a37:	and    BYTE PTR gs:[ecx+0x6c],ah
   140017a3c:	ins    BYTE PTR es:[rdi],dx
   140017a3d:	outs   dx,DWORD PTR ds:[rsi]
   140017a3e:	ja     0x140017ab3
   140017a40:	and    BYTE PTR [rcx+0x6f],bh
   140017a43:	jne    0x140017a65
   140017a45:	je     0x140017ab6
   140017a47:	and    BYTE PTR [rbx+0x72],ah
   140017a4a:	gs (bad) 
   140017a4c:	je     0x140017ab3
   140017a4e:	and    BYTE PTR [rcx+0x64],ch
   140017a51:	outs   dx,BYTE PTR gs:[rsi]
   140017a53:	je     0x140017abe
   140017a55:	imul   sp,WORD PTR [rbp+0x72],0x2073
   140017a5b:	data16 jb 0x140017acd
   140017a5e:	ins    DWORD PTR es:[rdi],dx
   140017a5f:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140017a63:	and    BYTE PTR [rbx+0x65],ch
   140017a66:	jns    0x140017adf
   140017a68:	outs   dx,DWORD PTR ds:[rsi]
   140017a69:	jb     0x140017acf
   140017a6b:	jae    0x140017a8d
   140017a6d:	outs   dx,WORD PTR ds:[rsi]
   140017a6f:	jne    0x140017adf
   140017a71:	and    BYTE PTR fs:[rcx+0x6e],ch
   140017a75:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140017a79:	and    BYTE PTR [rsi],ch
   140017a7b:	(bad)  
   140017a7c:	fs jo  0x140017a9f
   140017a7f:	outs   dx,DWORD PTR ds:[rsi]
   140017a80:	jb     0x140017aa2
   140017a82:	cs movsxd esp,DWORD PTR fs:[rsi+0x20]
   140017a87:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x0
   140017a8e:	add    BYTE PTR [rax],al
   140017a90:	rex.WB
   140017a91:	fs outs dx,BYTE PTR gs:[rsi]
   140017a94:	je     0x140017aff
   140017a96:	imul   sp,WORD PTR [rbp+0x72],0x73
   140017a9c:	add    BYTE PTR [rax],al
   140017a9e:	add    BYTE PTR [rax],al
   140017aa0:	rex fiadd DWORD PTR [rcx]
   140017aa3:	rex add DWORD PTR [rax],eax
   140017aa6:	add    BYTE PTR [rax],al
   140017aa8:	xor    BYTE PTR [rdi+0x14000],cl
   140017aae:	add    BYTE PTR [rax],al
   140017ab0:	in     al,dx
   140017ab1:	(bad)  
   140017ab2:	add    DWORD PTR [rax+0x1],eax
   140017ab5:	add    BYTE PTR [rax],al
   140017ab7:	add    dl,dh
   140017ab9:	(bad)  
   140017aba:	add    DWORD PTR [rax+0x1],eax
   140017abd:	add    BYTE PTR [rax],al
   140017abf:	add    al,bh
   140017ac1:	(bad)  
   140017ac2:	add    DWORD PTR [rax+0x1],eax
   140017ac5:	add    BYTE PTR [rax],al
   140017ac7:	add    dh,bh
   140017ac9:	(bad)  
   140017aca:	add    DWORD PTR [rax+0x1],eax
   140017acd:	add    BYTE PTR [rax],al
   140017acf:	add    BYTE PTR [rax+riz*1],al
   140017ad2:	add    DWORD PTR [rax+0x1],eax
   140017ad5:	add    BYTE PTR [rax],al
   140017ad7:	add    BYTE PTR [rdx],cl
   140017ad9:	and    BYTE PTR [rcx],al
   140017adb:	rex add DWORD PTR [rax],eax
   140017ade:	add    BYTE PTR [rax],al
   140017ae0:	test   al,0xd9
   140017ae2:	add    DWORD PTR [rax+0x1],eax
   140017ae5:	add    BYTE PTR [rax],al
   140017ae7:	add    BYTE PTR [rax],dh
   140017ae9:	sbb    eax,DWORD PTR [rcx]
   140017aeb:	rex add DWORD PTR [rax],eax
   140017aee:	add    BYTE PTR [rax],al
   140017af0:	(bad)  
   140017af1:	sbb    al,BYTE PTR [rcx]
   140017af3:	rex add DWORD PTR [rax],eax
   140017af6:	add    BYTE PTR [rax],al
   140017af8:	mov    al,0x1a
   140017afa:	add    DWORD PTR [rax+0x1],eax
   140017afd:	add    BYTE PTR [rax],al
   140017aff:	add    BYTE PTR [rax-0x71],al
   140017b02:	add    BYTE PTR [rax+0x1],al
   140017b05:	add    BYTE PTR [rax],al
   140017b07:	add    dh,ah
   140017b09:	and    al,BYTE PTR [rcx]
   140017b0b:	rex add DWORD PTR [rax],eax
   140017b0e:	add    BYTE PTR [rax],al
   140017b10:	sub    BYTE PTR [rax],0x1
   140017b13:	rex add DWORD PTR [rax],eax
   140017b16:	add    BYTE PTR [rax],al
   140017b18:	pop    rsp
   140017b19:	sub    BYTE PTR [rcx],al
   140017b1b:	rex add DWORD PTR [rax],eax
   140017b1e:	add    BYTE PTR [rax],al
   140017b20:	(bad)  
   140017b21:	sub    BYTE PTR [rcx],al
   140017b23:	rex add DWORD PTR [rax],eax
   140017b26:	add    BYTE PTR [rax],al
   140017b28:	push   0x1400128
   140017b2d:	add    BYTE PTR [rax],al
   140017b2f:	add    BYTE PTR [rsi+0x28],ch
   140017b32:	add    DWORD PTR [rax+0x1],eax
   140017b35:	add    BYTE PTR [rax],al
   140017b37:	add    BYTE PTR [rax+rbp*1+0x1],dh
   140017b3b:	rex add DWORD PTR [rax],eax
   140017b3e:	add    BYTE PTR [rax],al
   140017b40:	or     al,0x21
   140017b42:	add    DWORD PTR [rax+0x1],eax
   140017b45:	add    BYTE PTR [rax],al
   140017b47:	add    ah,ch
   140017b49:	and    al,BYTE PTR [rcx]
   140017b4b:	rex add DWORD PTR [rax],eax
   140017b4e:	add    BYTE PTR [rax],al
   140017b50:	repnz and al,BYTE PTR [rcx]
   140017b53:	rex add DWORD PTR [rax],eax
   140017b56:	add    BYTE PTR [rax],al
   140017b58:	add    bl,BYTE PTR [rdi]
   140017b5a:	add    DWORD PTR [rax+0x1],eax
   140017b5d:	add    BYTE PTR [rax],al
   140017b5f:	add    BYTE PTR [rax],cl
   140017b61:	(bad)  
   140017b62:	add    DWORD PTR [rax+0x1],eax
   140017b65:	add    BYTE PTR [rax],al
   140017b67:	add    BYTE PTR [rsi],cl
   140017b69:	(bad)  
   140017b6a:	add    DWORD PTR [rax+0x1],eax
   140017b6d:	add    BYTE PTR [rax],al
   140017b6f:	add    BYTE PTR [rdi+rbx*1],dl
   140017b72:	add    DWORD PTR [rax+0x1],eax
   140017b75:	add    BYTE PTR [rax],al
   140017b77:	add    BYTE PTR [rdx],bl
   140017b79:	(bad)  
   140017b7a:	add    DWORD PTR [rax+0x1],eax
   140017b7d:	add    BYTE PTR [rax],al
   140017b7f:	add    BYTE PTR [rax],ah
   140017b81:	(bad)  
   140017b82:	add    DWORD PTR [rax+0x1],eax
   140017b85:	add    BYTE PTR [rax],al
   140017b87:	add    BYTE PTR [rsi],ah
   140017b89:	(bad)  
   140017b8a:	add    DWORD PTR [rax+0x1],eax
   140017b8d:	add    BYTE PTR [rax],al
   140017b8f:	add    al,bh
   140017b91:	and    al,BYTE PTR [rcx]
   140017b93:	rex add DWORD PTR [rax],eax
   140017b96:	add    BYTE PTR [rax],al
   140017b98:	xor    bl,BYTE PTR [rdi]
   140017b9a:	add    DWORD PTR [rax+0x1],eax
   140017b9d:	add    BYTE PTR [rax],al
   140017b9f:	add    BYTE PTR [rax],bh
   140017ba1:	(bad)  
   140017ba2:	add    DWORD PTR [rax+0x1],eax
   140017ba5:	add    BYTE PTR [rax],al
   140017ba7:	add    BYTE PTR [rsi],bh
   140017ba9:	(bad)  
   140017baa:	add    DWORD PTR [rax+0x1],eax
   140017bad:	add    BYTE PTR [rax],al
   140017baf:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140017bb3:	rex add DWORD PTR [rax],eax
   140017bb6:	add    BYTE PTR [rax],al
   140017bb8:	rex.WX (bad) 
   140017bba:	add    DWORD PTR [rax+0x1],eax
   140017bbd:	add    BYTE PTR [rax],al
   140017bbf:	add    dh,bh
   140017bc1:	and    al,BYTE PTR [rcx]
   140017bc3:	rex add DWORD PTR [rax],eax
   140017bc6:	add    BYTE PTR [rax],al
   140017bc8:	push   rsi
   140017bc9:	(bad)  
   140017bca:	add    DWORD PTR [rax+0x1],eax
   140017bcd:	add    BYTE PTR [rax],al
   140017bcf:	add    BYTE PTR [rsi+0x21],cl
   140017bd2:	add    DWORD PTR [rax+0x1],eax
   140017bd5:	add    BYTE PTR [rax],al
   140017bd7:	add    BYTE PTR [rcx+riz*1+0x1],dl
   140017bdb:	rex add DWORD PTR [rax],eax
   140017bde:	add    BYTE PTR [rax],al
   140017be0:	ret    0x122
   140017be3:	rex add DWORD PTR [rax],eax
   140017be6:	add    BYTE PTR [rax],al
   140017be8:	outs   dx,BYTE PTR ds:[rsi]
   140017be9:	(bad)  
   140017bea:	add    DWORD PTR [rax+0x1],eax
   140017bed:	add    BYTE PTR [rax],al
   140017bef:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140017bf3:	rex add DWORD PTR [rax],eax
   140017bf6:	add    BYTE PTR [rax],al
   140017bf8:	jp     0x140017c19
   140017bfa:	add    DWORD PTR [rax+0x1],eax
   140017bfd:	add    BYTE PTR [rax],al
   140017bff:	add    BYTE PTR [rax+0x140011f],al
   140017c05:	add    BYTE PTR [rax],al
   140017c07:	add    BYTE PTR [rsi+0x140011f],al
   140017c0d:	add    BYTE PTR [rax],al
   140017c0f:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   140017c16:	add    BYTE PTR [rax],al
   140017c18:	(bad)  
   140017c19:	and    DWORD PTR [rcx],eax
   140017c1b:	rex add DWORD PTR [rax],eax
   140017c1e:	add    BYTE PTR [rax],al
   140017c20:	cwde   
   140017c21:	(bad)  
   140017c22:	add    DWORD PTR [rax+0x1],eax
   140017c25:	add    BYTE PTR [rax],al
   140017c27:	add    BYTE PTR [rsi+0x21],ah
   140017c2a:	add    DWORD PTR [rax+0x1],eax
   140017c2d:	add    BYTE PTR [rax],al
   140017c2f:	add    BYTE PTR [rdi+rbx*1+0x14001],ah
   140017c36:	add    BYTE PTR [rax],al
   140017c38:	stos   BYTE PTR es:[rdi],al
   140017c39:	(bad)  
   140017c3a:	add    DWORD PTR [rax+0x1],eax
   140017c3d:	add    BYTE PTR [rax],al
   140017c3f:	add    BYTE PTR [rax+0x140011f],dh
   140017c45:	add    BYTE PTR [rax],al
   140017c47:	add    BYTE PTR [rsi+0x140011f],dh
   140017c4d:	add    BYTE PTR [rax],al
   140017c4f:	add    BYTE PTR [rbx+riz*1],al
   140017c52:	add    DWORD PTR [rax+0x1],eax
   140017c55:	add    BYTE PTR [rax],al
   140017c57:	add    BYTE PTR [rdx],cl
   140017c59:	and    eax,DWORD PTR [rcx]
   140017c5b:	rex add DWORD PTR [rax],eax
   140017c5e:	add    BYTE PTR [rax],al
   140017c60:	sub    BYTE PTR [rsi],ah
   140017c62:	add    DWORD PTR [rax+0x1],eax
   140017c65:	add    BYTE PTR [rax],al
   140017c67:	add    BYTE PTR [rax],dl
   140017c69:	and    eax,DWORD PTR [rcx]
   140017c6b:	rex add DWORD PTR [rax],eax
   140017c6e:	add    BYTE PTR [rax],al
   140017c70:	(bad)  
   140017c71:	and    eax,DWORD PTR [rcx]
   140017c73:	rex add DWORD PTR [rax],eax
   140017c76:	add    BYTE PTR [rax],al
   140017c78:	rex.R outs dx,DWORD PTR ds:[rsi]
   140017c7a:	movsxd esi,DWORD PTR [rbp+0x6d]
   140017c7d:	outs   dx,BYTE PTR gs:[rsi]
   140017c7f:	je     0x140017ce2
   140017c81:	je     0x140017cec
   140017c83:	outs   dx,DWORD PTR ds:[rsi]
   140017c84:	outs   dx,BYTE PTR ds:[rsi]
   140017c85:	and    BYTE PTR [rbx+0x6f],dh
   140017c88:	jne    0x140017cfc
   140017c8a:	movsxd esp,DWORD PTR [rbp+0x20]
   140017c8d:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6170
   140017c94:	je     0x140017cfe
   140017c96:	jae    0x140017cd2
	...
   140017ca0:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x746c6966
   140017ca9:	gs jb  0x140017d1f
   140017cac:	cmp    al,BYTE PTR [rax]
   140017cae:	add    BYTE PTR [rax],al
   140017cb0:	push   rax
   140017cb1:	(bad)  
   140017cb2:	je     0x140017d1c
   140017cb4:	push   rax
   140017cb5:	(bad)  
   140017cb6:	add    BYTE PTR gs:[eax],al
   140017cba:	add    BYTE PTR [rax],al
   140017cbc:	add    BYTE PTR [rax],al
   140017cbe:	add    BYTE PTR [rax],al
   140017cc0:	jo     0x140017d23
   140017cc2:	je     0x140017d2c
   140017cc4:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140017ccc:	gs je  0x140017ccf
   140017ccf:	add    BYTE PTR [rax+0x14001db],ah
   140017cd5:	add    BYTE PTR [rax],al
   140017cd7:	add    al,ah
   140017cd9:	cwde   
   140017cda:	add    BYTE PTR [rax+0x1],al
   140017cdd:	add    BYTE PTR [rax],al
   140017cdf:	add    ah,ch
   140017ce1:	(bad)  
   140017ce2:	add    DWORD PTR [rax+0x1],eax
   140017ce5:	add    BYTE PTR [rax],al
   140017ce7:	add    dl,dh
   140017ce9:	(bad)  
   140017cea:	add    DWORD PTR [rax+0x1],eax
   140017ced:	add    BYTE PTR [rax],al
   140017cef:	add    al,bh
   140017cf1:	(bad)  
   140017cf2:	add    DWORD PTR [rax+0x1],eax
   140017cf5:	add    BYTE PTR [rax],al
   140017cf7:	add    dh,bh
   140017cf9:	(bad)  
   140017cfa:	add    DWORD PTR [rax+0x1],eax
   140017cfd:	add    BYTE PTR [rax],al
   140017cff:	add    BYTE PTR [rax+riz*1],al
   140017d02:	add    DWORD PTR [rax+0x1],eax
   140017d05:	add    BYTE PTR [rax],al
   140017d07:	add    BYTE PTR [rdx],cl
   140017d09:	and    BYTE PTR [rcx],al
   140017d0b:	rex add DWORD PTR [rax],eax
   140017d0e:	add    BYTE PTR [rax],al
   140017d10:	push   0x14001da
   140017d15:	add    BYTE PTR [rax],al
   140017d17:	add    BYTE PTR [rsi],ch
   140017d19:	add    DWORD PTR es:[rax+0x1],eax
   140017d1d:	add    BYTE PTR [rax],al
   140017d1f:	add    BYTE PTR [rsi+riz*1],dh
   140017d22:	add    DWORD PTR [rax+0x1],eax
   140017d25:	add    BYTE PTR [rax],al
   140017d27:	add    BYTE PTR [rdx],bh
   140017d29:	add    DWORD PTR es:[rax+0x1],eax
   140017d2d:	add    BYTE PTR [rax],al
   140017d2f:	add    BYTE PTR [rax+0x1400098],dh
   140017d35:	add    BYTE PTR [rax],al
   140017d37:	add    BYTE PTR [rax+0x26],al
   140017d3a:	add    DWORD PTR [rax+0x1],eax
   140017d3d:	add    BYTE PTR [rax],al
   140017d3f:	add    BYTE PTR [rdx+0x1400123],al
   140017d45:	add    BYTE PTR [rax],al
   140017d47:	add    BYTE PTR [rsi+0x26],al
   140017d4a:	add    DWORD PTR [rax+0x1],eax
   140017d4d:	add    BYTE PTR [rax],al
   140017d4f:	add    BYTE PTR [rdx+0x28],ah
   140017d52:	add    DWORD PTR [rax+0x1],eax
   140017d55:	add    BYTE PTR [rax],al
   140017d57:	add    BYTE PTR [rax+0x28],ch
   140017d5a:	add    DWORD PTR [rax+0x1],eax
   140017d5d:	add    BYTE PTR [rax],al
   140017d5f:	add    BYTE PTR [rsi+0x28],ch
   140017d62:	add    DWORD PTR [rax+0x1],eax
   140017d65:	add    BYTE PTR [rax],al
   140017d67:	add    BYTE PTR [rax+rbp*1+0x1],dh
   140017d6b:	rex add DWORD PTR [rax],eax
   140017d6e:	add    BYTE PTR [rax],al
   140017d70:	or     al,0x21
   140017d72:	add    DWORD PTR [rax+0x1],eax
   140017d75:	add    BYTE PTR [rax],al
   140017d77:	add    BYTE PTR [rsi+0x1400123],cl
   140017d7d:	add    BYTE PTR [rax],al
   140017d7f:	add    BYTE PTR [rbx+riz*1+0x14001],dl
   140017d86:	add    BYTE PTR [rax],al
   140017d88:	add    bl,BYTE PTR [rdi]
   140017d8a:	add    DWORD PTR [rax+0x1],eax
   140017d8d:	add    BYTE PTR [rax],al
   140017d8f:	add    BYTE PTR [rax],cl
   140017d91:	(bad)  
   140017d92:	add    DWORD PTR [rax+0x1],eax
   140017d95:	add    BYTE PTR [rax],al
   140017d97:	add    BYTE PTR [rsi+riz*1+0x1],cl
   140017d9b:	rex add DWORD PTR [rax],eax
   140017d9e:	add    BYTE PTR [rax],al
   140017da0:	push   rdx
   140017da1:	add    DWORD PTR es:[rax+0x1],eax
   140017da5:	add    BYTE PTR [rax],al
   140017da7:	add    BYTE PTR [rax+0x26],bl
   140017daa:	add    DWORD PTR [rax+0x1],eax
   140017dad:	add    BYTE PTR [rax],al
   140017daf:	add    BYTE PTR [rsi+0x26],bl
   140017db2:	add    DWORD PTR [rax+0x1],eax
   140017db5:	add    BYTE PTR [rax],al
   140017db7:	add    BYTE PTR [rsi+riz*1+0x1],ah
   140017dbb:	rex add DWORD PTR [rax],eax
   140017dbe:	add    BYTE PTR [rax],al
   140017dc0:	push   0x26
   140017dc2:	add    DWORD PTR [rax+0x1],eax
   140017dc5:	add    BYTE PTR [rax],al
   140017dc7:	add    BYTE PTR [rdx],dh
   140017dc9:	(bad)  
   140017dca:	add    DWORD PTR [rax+0x1],eax
   140017dcd:	add    BYTE PTR [rax],al
   140017dcf:	add    BYTE PTR [rsi+0x1400123],bh
   140017dd5:	add    BYTE PTR [rax],al
   140017dd7:	add    ah,al
   140017dd9:	and    eax,DWORD PTR [rcx]
   140017ddb:	rex add DWORD PTR [rax],eax
   140017dde:	add    BYTE PTR [rax],al
   140017de0:	rex.R (bad) 
   140017de2:	add    DWORD PTR [rax+0x1],eax
   140017de5:	add    BYTE PTR [rax],al
   140017de7:	add    BYTE PTR [rdx+0x1f],cl
   140017dea:	add    DWORD PTR [rax+0x1],eax
   140017ded:	add    BYTE PTR [rax],al
   140017def:	add    BYTE PTR [rax+0x26],dh
   140017df2:	add    DWORD PTR [rax+0x1],eax
   140017df5:	add    BYTE PTR [rax],al
   140017df7:	add    BYTE PTR [rsi+0x1f],dl
   140017dfa:	add    DWORD PTR [rax+0x1],eax
   140017dfd:	add    BYTE PTR [rax],al
   140017dff:	add    BYTE PTR [rsi+0x26],dh
   140017e02:	add    DWORD PTR [rax+0x1],eax
   140017e05:	add    BYTE PTR [rax],al
   140017e07:	add    BYTE PTR [rcx+riz*1+0x1],dl
   140017e0b:	rex add DWORD PTR [rax],eax
   140017e0e:	add    BYTE PTR [rax],al
   140017e10:	(bad)  
   140017e11:	and    eax,DWORD PTR [rcx]
   140017e13:	rex add DWORD PTR [rax],eax
   140017e16:	add    BYTE PTR [rax],al
   140017e18:	outs   dx,BYTE PTR ds:[rsi]
   140017e19:	(bad)  
   140017e1a:	add    DWORD PTR [rax+0x1],eax
   140017e1d:	add    BYTE PTR [rax],al
   140017e1f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140017e23:	rex add DWORD PTR [rax],eax
   140017e26:	add    BYTE PTR [rax],al
   140017e28:	fsub   QWORD PTR [rbx]
   140017e2a:	add    DWORD PTR [rax+0x1],eax
   140017e2d:	add    BYTE PTR [rax],al
   140017e2f:	add    BYTE PTR [rsi+riz*1+0x1],bh
   140017e33:	rex add DWORD PTR [rax],eax
   140017e36:	add    BYTE PTR [rax],al
   140017e38:	(bad)  
   140017e39:	add    DWORD PTR es:[rax+0x1],eax
   140017e3d:	add    BYTE PTR [rax],al
   140017e3f:	add    BYTE PTR [rax+0x1400126],cl
   140017e45:	add    BYTE PTR [rax],al
   140017e47:	add    BYTE PTR [rax+0x21],ah
   140017e4a:	add    DWORD PTR [rax+0x1],eax
   140017e4d:	add    BYTE PTR [rax],al
   140017e4f:	add    BYTE PTR [rax+0x140011f],bl
   140017e55:	add    BYTE PTR [rax],al
   140017e57:	add    BYTE PTR [rsi+0x21],ah
   140017e5a:	add    DWORD PTR [rax+0x1],eax
   140017e5d:	add    BYTE PTR [rax],al
   140017e5f:	add    ah,dh
   140017e61:	and    eax,DWORD PTR [rcx]
   140017e63:	rex add DWORD PTR [rax],eax
   140017e66:	add    BYTE PTR [rax],al
   140017e68:	cli    
   140017e69:	and    eax,DWORD PTR [rcx]
   140017e6b:	rex add DWORD PTR [rax],eax
   140017e6e:	add    BYTE PTR [rax],al
   140017e70:	add    BYTE PTR [rcx+rax*1],ah
   140017e73:	rex add DWORD PTR [rax],eax
   140017e76:	add    BYTE PTR [rax],al
   140017e78:	(bad)  
   140017e79:	and    al,0x1
   140017e7b:	rex add DWORD PTR [rax],eax
   140017e7e:	add    BYTE PTR [rax],al
   140017e80:	or     al,0x24
   140017e82:	add    DWORD PTR [rax+0x1],eax
   140017e85:	add    BYTE PTR [rax],al
   140017e87:	add    BYTE PTR [rsi+0x1400126],cl
   140017e8d:	add    BYTE PTR [rax],al
   140017e8f:	add    BYTE PTR [rsi+riz*1+0x14001],dl
   140017e96:	add    BYTE PTR [rax],al
   140017e98:	(bad)  
   140017e99:	add    DWORD PTR es:[rax+0x1],eax
   140017e9d:	add    BYTE PTR [rax],al
   140017e9f:	add    BYTE PTR [rax+0x1400126],ah
   140017ea5:	add    BYTE PTR [rax],al
   140017ea7:	add    BYTE PTR [rsi+0x1400126],ah
   140017ead:	add    BYTE PTR [rax],al
   140017eaf:	add    BYTE PTR [rsi+riz*1+0x14001],ch
   140017eb6:	add    BYTE PTR [rax],al
   140017eb8:	mov    dl,0x26
   140017eba:	add    DWORD PTR [rax+0x1],eax
   140017ebd:	add    BYTE PTR [rax],al
   140017ebf:	add    BYTE PTR [rax+0x1400126],bh
   140017ec5:	add    BYTE PTR [rax],al
   140017ec7:	add    BYTE PTR [rsi+0x1400126],bh
   140017ecd:	add    BYTE PTR [rax],al
   140017ecf:	add    BYTE PTR [rax+0x24],cl
   140017ed2:	add    DWORD PTR [rax+0x1],eax
   140017ed5:	add    BYTE PTR [rax],al
   140017ed7:	add    ah,al
   140017ed9:	add    DWORD PTR es:[rax+0x1],eax
   140017edd:	add    BYTE PTR [rax],al
   140017edf:	add    dl,cl
   140017ee1:	add    DWORD PTR es:[rax+0x1],eax
   140017ee5:	add    BYTE PTR [rax],al
   140017ee7:	add    al,dl
   140017ee9:	add    DWORD PTR es:[rax+0x1],eax
   140017eed:	add    BYTE PTR [rax],al
   140017eef:	add    dh,dl
   140017ef1:	add    DWORD PTR es:[rax+0x1],eax
   140017ef5:	add    BYTE PTR [rax],al
   140017ef7:	add    ah,bl
   140017ef9:	add    DWORD PTR es:[rax+0x1],eax
   140017efd:	add    BYTE PTR [rax],al
   140017eff:	add    BYTE PTR [rsp+0x1],ch
   140017f03:	rex add DWORD PTR [rax],eax
   140017f06:	add    BYTE PTR [rax],al
   140017f08:	loop   0x140017f30
   140017f0a:	add    DWORD PTR [rax+0x1],eax
   140017f0d:	add    BYTE PTR [rax],al
   140017f0f:	add    al,ch
   140017f11:	add    DWORD PTR es:[rax+0x1],eax
   140017f15:	add    BYTE PTR [rax],al
   140017f17:	add    dh,ch
   140017f19:	add    DWORD PTR es:[rax+0x1],eax
   140017f1d:	add    BYTE PTR [rax],al
   140017f1f:	add    ah,dh
   140017f21:	add    DWORD PTR es:[rax+0x1],eax
   140017f25:	add    BYTE PTR [rax],al
   140017f27:	add    dl,bh
   140017f29:	add    DWORD PTR es:[rax+0x1],eax
   140017f2d:	add    BYTE PTR [rax],al
   140017f2f:	add    BYTE PTR [rax+0x1400124],dl
   140017f35:	add    BYTE PTR [rax],al
   140017f37:	add    BYTE PTR [rsi+0x1400124],dl
   140017f3d:	add    BYTE PTR [rax],al
   140017f3f:	add    BYTE PTR [rax],al
   140017f41:	(bad)  
   140017f42:	add    DWORD PTR [rax+0x1],eax
   140017f45:	add    BYTE PTR [rax],al
   140017f47:	add    BYTE PTR [rdx+0x1400124],ah
   140017f4d:	add    BYTE PTR [rax],al
   140017f4f:	add    BYTE PTR [rsi],al
   140017f51:	(bad)  
   140017f52:	add    DWORD PTR [rax+0x1],eax
   140017f55:	add    BYTE PTR [rax],al
   140017f57:	add    BYTE PTR [rsi+0x1400124],ch
   140017f5d:	add    BYTE PTR [rax],al
   140017f5f:	add    BYTE PTR [rsp+0x14001],dh
   140017f66:	add    BYTE PTR [rax],al
   140017f68:	mov    edx,0x1400124
   140017f6d:	add    BYTE PTR [rax],al
   140017f6f:	add    al,al
   140017f71:	and    al,0x1
   140017f73:	rex add DWORD PTR [rax],eax
   140017f76:	add    BYTE PTR [rax],al
   140017f78:	(bad)  
   140017f79:	and    al,0x1
   140017f7b:	rex add DWORD PTR [rax],eax
   140017f7e:	add    BYTE PTR [rax],al
   140017f80:	or     al,0x27
   140017f82:	add    DWORD PTR [rax+0x1],eax
   140017f85:	add    BYTE PTR [rax],al
   140017f87:	add    BYTE PTR [rdx],dl
   140017f89:	(bad)  
   140017f8a:	add    DWORD PTR [rax+0x1],eax
   140017f8d:	add    BYTE PTR [rax],al
   140017f8f:	add    BYTE PTR [rax],bl
   140017f91:	(bad)  
   140017f92:	add    DWORD PTR [rax+0x1],eax
   140017f95:	add    BYTE PTR [rax],al
   140017f97:	add    BYTE PTR [rsi],bl
   140017f99:	(bad)  
   140017f9a:	add    DWORD PTR [rax+0x1],eax
   140017f9d:	add    BYTE PTR [rax],al
   140017f9f:	add    BYTE PTR [rdi+riz*1],ah
   140017fa2:	add    DWORD PTR [rax+0x1],eax
   140017fa5:	add    BYTE PTR [rax],al
   140017fa7:	add    BYTE PTR [rdx],ch
   140017fa9:	(bad)  
   140017faa:	add    DWORD PTR [rax+0x1],eax
   140017fad:	add    BYTE PTR [rax],al
   140017faf:	add    BYTE PTR [rax],dh
   140017fb1:	(bad)  
   140017fb2:	add    DWORD PTR [rax+0x1],eax
   140017fb5:	add    BYTE PTR [rax],al
   140017fb7:	add    dh,dh
   140017fb9:	and    al,0x1
   140017fbb:	rex add DWORD PTR [rax],eax
   140017fbe:	add    BYTE PTR [rax],al
   140017fc0:	ss (bad) 
   140017fc2:	add    DWORD PTR [rax+0x1],eax
   140017fc5:	add    BYTE PTR [rax],al
   140017fc7:	add    BYTE PTR [rdi+riz*1],bh
   140017fca:	add    DWORD PTR [rax+0x1],eax
   140017fcd:	add    BYTE PTR [rax],al
   140017fcf:	add    BYTE PTR [rdx+0x27],al
   140017fd2:	add    DWORD PTR [rax+0x1],eax
   140017fd5:	add    BYTE PTR [rax],al
   140017fd7:	add    BYTE PTR [rax+0x27],cl
   140017fda:	add    DWORD PTR [rax+0x1],eax
   140017fdd:	add    BYTE PTR [rax],al
   140017fdf:	add    BYTE PTR [rsi+0x27],cl
   140017fe2:	add    DWORD PTR [rax+0x1],eax
   140017fe5:	add    BYTE PTR [rax],al
   140017fe7:	add    BYTE PTR [rdi+riz*1+0x1],dl
   140017feb:	rex add DWORD PTR [rax],eax
   140017fee:	add    BYTE PTR [rax],al
   140017ff0:	jae    0x140018061
   140017ff2:	jne    0x140018066
   140017ff4:	movsxd esp,DWORD PTR [rbp+0x50]
   140017ff7:	(bad)  
   140017ff8:	je     0x140018062
   140017ffa:	imul   r14,QWORD PTR [rbx+0x74],0x2e2a0000
   140018002:	push   0x2c6c6d74
   140018007:	and    BYTE PTR [rdx],ch
   140018009:	cs push 0x202c6d74
   14001800f:	sub    ch,BYTE PTR [rsi]
   140018011:	jo     0x140018081
   140018013:	addr32 sub al,0x20
   140018016:	sub    ch,BYTE PTR [rsi]
   140018018:	push   0x70
   14001801a:	addr32 sub al,0x20
   14001801d:	sub    ch,BYTE PTR [rsi]
   14001801f:	movsxd esi,DWORD PTR [rbx+0x73]
   140018022:	add    BYTE PTR [rax],al
   140018024:	add    BYTE PTR [rax],al
   140018026:	add    BYTE PTR [rax],al
   140018028:	xor    DWORD PTR [rdx+0x65],esi
   14001802b:	ins    DWORD PTR es:[rdi],dx
   14001802c:	outs   dx,DWORD PTR ds:[rsi]
   14001802d:	jbe    0x140018094
   14001802f:	push   rax
   140018030:	(bad)  
   140018031:	je     0x14001809b
   140018033:	sub    BYTE PTR [rcx],ch
   140018035:	add    BYTE PTR [rax],al
   140018037:	add    BYTE PTR [rcx],dh
   140018039:	(bad)  
   14001803a:	fs fs push rax
   14001803d:	(bad)  
   14001803e:	je     0x1400180a8
   140018040:	sub    BYTE PTR [rcx],ch
	...
   14001804e:	add    BYTE PTR [rax],al
   140018050:	push   rbx
   140018051:	jo     0x1400180b8
   140018053:	movsxd ebp,DWORD PTR [rcx+0x66]
   140018056:	jns    0x140018078
   140018058:	je     0x1400180c2
   14001805a:	and    BYTE PTR gs:[rax+0x61],dh
   14001805e:	je     0x1400180c8
   140018060:	jae    0x140018082
   140018062:	ja     0x1400180cc
   140018064:	gs jb  0x1400180cc
   140018067:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001806b:	and    BYTE PTR [rbx+0x6f],dh
   14001806e:	jne    0x1400180e2
   140018070:	movsxd esp,DWORD PTR [rbp+0x73]
   140018073:	and    BYTE PTR [rsi+0x69],ah
   140018076:	ins    BYTE PTR es:[rdi],dx
   140018077:	gs jae 0x14001809a
   14001807a:	(bad)  
   14001807b:	jb     0x1400180e2
   14001807d:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   140018081:	(bad)  
   140018082:	je     0x1400180e9
   140018084:	fs and BYTE PTR cs:[rdx+0x79],al
   140018089:	and    BYTE PTR [rbp+riz*2+0x66],ah
   14001808d:	(bad)  
   14001808e:	jne    0x1400180fc
   140018090:	je     0x1400180be
   140018092:	and    BYTE PTR [rcx+0x6c],ah
   140018095:	ins    BYTE PTR es:[rdi],dx
   140018096:	and    BYTE PTR [rsi+0x69],ah
   140018099:	ins    BYTE PTR es:[rdi],dx
   14001809a:	gs jae 0x1400180bd
   14001809d:	imul   ebp,DWORD PTR [rsi+0x20],0x736f6874
   1400180a4:	and    BYTE PTR gs:[rcx+rbp*2+0x72],ah
   1400180a9:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400180ae:	imul   esp,DWORD PTR [rbp+0x73],0x74616d20
   1400180b5:	movsxd ebp,DWORD PTR [rax+0x65]
   1400180b8:	and    BYTE PTR fs:[rdx+0x79],ah
   1400180bc:	and    BYTE PTR [rax+rbp*2+0x65],dh
   1400180c0:	and    BYTE PTR [rsi+0x69],ah
   1400180c3:	ins    BYTE PTR es:[rdi],dx
   1400180c4:	and    BYTE PTR gs:[rsi+0x69],ah
   1400180c8:	ins    BYTE PTR es:[rdi],dx
   1400180c9:	je     0x140018130
   1400180cb:	jb     0x1400180ed
   1400180cd:	ja     0x140018138
   1400180cf:	ins    BYTE PTR es:[rdi],dx
   1400180d0:	ins    BYTE PTR es:[rdi],dx
   1400180d1:	and    BYTE PTR [rdx+0x65],ah
   1400180d4:	and    BYTE PTR [rcx+0x6e],ch
   1400180d7:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
   1400180db:	gs fs add BYTE PTR cs:[rax],al
   1400180e0:	push   rbx
   1400180e1:	outs   dx,DWORD PTR ds:[rsi]
   1400180e2:	jne    0x140018156
   1400180e4:	movsxd esp,DWORD PTR [rbp+0x20]
   1400180e7:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x68746150
   1400180f0:	jae    0x1400180f2
	...
   1400180fe:	add    BYTE PTR [rax],al
   140018100:	(bad)  
   140018101:	fadd   QWORD PTR [rcx]
   140018103:	rex add DWORD PTR [rax],eax
   140018106:	add    BYTE PTR [rax],al
   140018108:	xor    BYTE PTR [rdi+0x14000],cl
   14001810e:	add    BYTE PTR [rax],al
   140018110:	in     al,dx
   140018111:	(bad)  
   140018112:	add    DWORD PTR [rax+0x1],eax
   140018115:	add    BYTE PTR [rax],al
   140018117:	add    dl,dh
   140018119:	(bad)  
   14001811a:	add    DWORD PTR [rax+0x1],eax
   14001811d:	add    BYTE PTR [rax],al
   14001811f:	add    al,bh
   140018121:	(bad)  
   140018122:	add    DWORD PTR [rax+0x1],eax
   140018125:	add    BYTE PTR [rax],al
   140018127:	add    dh,bh
   140018129:	(bad)  
   14001812a:	add    DWORD PTR [rax+0x1],eax
   14001812d:	add    BYTE PTR [rax],al
   14001812f:	add    BYTE PTR [rax+riz*1],al
   140018132:	add    DWORD PTR [rax+0x1],eax
   140018135:	add    BYTE PTR [rax],al
   140018137:	add    BYTE PTR [rdx],cl
   140018139:	and    BYTE PTR [rcx],al
   14001813b:	rex add DWORD PTR [rax],eax
   14001813e:	add    BYTE PTR [rax],al
   140018140:	enter  0x1db,0x40
   140018144:	add    DWORD PTR [rax],eax
   140018146:	add    BYTE PTR [rax],al
   140018148:	push   rax
   140018149:	sbb    al,0x1
   14001814b:	rex add DWORD PTR [rax],eax
   14001814e:	add    BYTE PTR [rax],al
   140018150:	sbb    BYTE PTR [rbx],0x1
   140018153:	rex add DWORD PTR [rax],eax
   140018156:	add    BYTE PTR [rax],al
   140018158:	rcr    BYTE PTR [rbx],1
   14001815a:	add    DWORD PTR [rax+0x1],eax
   14001815d:	add    BYTE PTR [rax],al
   14001815f:	add    BYTE PTR [rax-0x71],al
   140018162:	add    BYTE PTR [rax+0x1],al
   140018165:	add    BYTE PTR [rax],al
   140018167:	add    dh,ah
   140018169:	and    al,BYTE PTR [rcx]
   14001816b:	rex add DWORD PTR [rax],eax
   14001816e:	add    BYTE PTR [rax],al
   140018170:	sub    BYTE PTR [rax],0x1
   140018173:	rex add DWORD PTR [rax],eax
   140018176:	add    BYTE PTR [rax],al
   140018178:	pop    rsp
   140018179:	sub    BYTE PTR [rcx],al
   14001817b:	rex add DWORD PTR [rax],eax
   14001817e:	add    BYTE PTR [rax],al
   140018180:	(bad)  
   140018181:	sub    BYTE PTR [rcx],al
   140018183:	rex add DWORD PTR [rax],eax
   140018186:	add    BYTE PTR [rax],al
   140018188:	push   0x1400128
   14001818d:	add    BYTE PTR [rax],al
   14001818f:	add    BYTE PTR [rsi+0x28],ch
   140018192:	add    DWORD PTR [rax+0x1],eax
   140018195:	add    BYTE PTR [rax],al
   140018197:	add    BYTE PTR [rax+rbp*1+0x1],dh
   14001819b:	rex add DWORD PTR [rax],eax
   14001819e:	add    BYTE PTR [rax],al
   1400181a0:	or     al,0x21
   1400181a2:	add    DWORD PTR [rax+0x1],eax
   1400181a5:	add    BYTE PTR [rax],al
   1400181a7:	add    ah,ch
   1400181a9:	and    al,BYTE PTR [rcx]
   1400181ab:	rex add DWORD PTR [rax],eax
   1400181ae:	add    BYTE PTR [rax],al
   1400181b0:	repnz and al,BYTE PTR [rcx]
   1400181b3:	rex add DWORD PTR [rax],eax
   1400181b6:	add    BYTE PTR [rax],al
   1400181b8:	add    bl,BYTE PTR [rdi]
   1400181ba:	add    DWORD PTR [rax+0x1],eax
   1400181bd:	add    BYTE PTR [rax],al
   1400181bf:	add    BYTE PTR [rax],cl
   1400181c1:	(bad)  
   1400181c2:	add    DWORD PTR [rax+0x1],eax
   1400181c5:	add    BYTE PTR [rax],al
   1400181c7:	add    BYTE PTR [rsi],cl
   1400181c9:	(bad)  
   1400181ca:	add    DWORD PTR [rax+0x1],eax
   1400181cd:	add    BYTE PTR [rax],al
   1400181cf:	add    BYTE PTR [rdi+rbx*1],dl
   1400181d2:	add    DWORD PTR [rax+0x1],eax
   1400181d5:	add    BYTE PTR [rax],al
   1400181d7:	add    BYTE PTR [rdx],bl
   1400181d9:	(bad)  
   1400181da:	add    DWORD PTR [rax+0x1],eax
   1400181dd:	add    BYTE PTR [rax],al
   1400181df:	add    BYTE PTR [rax],ah
   1400181e1:	(bad)  
   1400181e2:	add    DWORD PTR [rax+0x1],eax
   1400181e5:	add    BYTE PTR [rax],al
   1400181e7:	add    BYTE PTR [rsi],ah
   1400181e9:	(bad)  
   1400181ea:	add    DWORD PTR [rax+0x1],eax
   1400181ed:	add    BYTE PTR [rax],al
   1400181ef:	add    al,bh
   1400181f1:	and    al,BYTE PTR [rcx]
   1400181f3:	rex add DWORD PTR [rax],eax
   1400181f6:	add    BYTE PTR [rax],al
   1400181f8:	xor    bl,BYTE PTR [rdi]
   1400181fa:	add    DWORD PTR [rax+0x1],eax
   1400181fd:	add    BYTE PTR [rax],al
   1400181ff:	add    BYTE PTR [rax],bh
   140018201:	(bad)  
   140018202:	add    DWORD PTR [rax+0x1],eax
   140018205:	add    BYTE PTR [rax],al
   140018207:	add    BYTE PTR [rsi],bh
   140018209:	(bad)  
   14001820a:	add    DWORD PTR [rax+0x1],eax
   14001820d:	add    BYTE PTR [rax],al
   14001820f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140018213:	rex add DWORD PTR [rax],eax
   140018216:	add    BYTE PTR [rax],al
   140018218:	rex.WX (bad) 
   14001821a:	add    DWORD PTR [rax+0x1],eax
   14001821d:	add    BYTE PTR [rax],al
   14001821f:	add    dh,bh
   140018221:	and    al,BYTE PTR [rcx]
   140018223:	rex add DWORD PTR [rax],eax
   140018226:	add    BYTE PTR [rax],al
   140018228:	push   rsi
   140018229:	(bad)  
   14001822a:	add    DWORD PTR [rax+0x1],eax
   14001822d:	add    BYTE PTR [rax],al
   14001822f:	add    BYTE PTR [rsi+0x21],cl
   140018232:	add    DWORD PTR [rax+0x1],eax
   140018235:	add    BYTE PTR [rax],al
   140018237:	add    BYTE PTR [rcx+riz*1+0x1],dl
   14001823b:	rex add DWORD PTR [rax],eax
   14001823e:	add    BYTE PTR [rax],al
   140018240:	ret    0x122
   140018243:	rex add DWORD PTR [rax],eax
   140018246:	add    BYTE PTR [rax],al
   140018248:	outs   dx,BYTE PTR ds:[rsi]
   140018249:	(bad)  
   14001824a:	add    DWORD PTR [rax+0x1],eax
   14001824d:	add    BYTE PTR [rax],al
   14001824f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140018253:	rex add DWORD PTR [rax],eax
   140018256:	add    BYTE PTR [rax],al
   140018258:	jp     0x140018279
   14001825a:	add    DWORD PTR [rax+0x1],eax
   14001825d:	add    BYTE PTR [rax],al
   14001825f:	add    BYTE PTR [rax+0x140011f],al
   140018265:	add    BYTE PTR [rax],al
   140018267:	add    BYTE PTR [rsi+0x140011f],al
   14001826d:	add    BYTE PTR [rax],al
   14001826f:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   140018276:	add    BYTE PTR [rax],al
   140018278:	(bad)  
   140018279:	and    DWORD PTR [rcx],eax
   14001827b:	rex add DWORD PTR [rax],eax
   14001827e:	add    BYTE PTR [rax],al
   140018280:	cwde   
   140018281:	(bad)  
   140018282:	add    DWORD PTR [rax+0x1],eax
   140018285:	add    BYTE PTR [rax],al
   140018287:	add    BYTE PTR [rsi+0x21],ah
   14001828a:	add    DWORD PTR [rax+0x1],eax
   14001828d:	add    BYTE PTR [rax],al
   14001828f:	add    BYTE PTR [rdi+rbx*1+0x14001],ah
   140018296:	add    BYTE PTR [rax],al
   140018298:	stos   BYTE PTR es:[rdi],al
   140018299:	(bad)  
   14001829a:	add    DWORD PTR [rax+0x1],eax
   14001829d:	add    BYTE PTR [rax],al
   14001829f:	add    BYTE PTR [rax+0x140011f],dh
   1400182a5:	add    BYTE PTR [rax],al
   1400182a7:	add    BYTE PTR [rsi+0x140011f],dh
   1400182ad:	add    BYTE PTR [rax],al
   1400182af:	add    BYTE PTR [rbx+riz*1],al
   1400182b2:	add    DWORD PTR [rax+0x1],eax
   1400182b5:	add    BYTE PTR [rax],al
   1400182b7:	add    BYTE PTR [rdx],cl
   1400182b9:	and    eax,DWORD PTR [rcx]
   1400182bb:	rex add DWORD PTR [rax],eax
   1400182be:	add    BYTE PTR [rax],al
   1400182c0:	sub    BYTE PTR [rsi],ah
   1400182c2:	add    DWORD PTR [rax+0x1],eax
   1400182c5:	add    BYTE PTR [rax],al
   1400182c7:	add    BYTE PTR [rax],dl
   1400182c9:	and    eax,DWORD PTR [rcx]
   1400182cb:	rex add DWORD PTR [rax],eax
   1400182ce:	add    BYTE PTR [rax],al
   1400182d0:	(bad)  
   1400182d1:	and    eax,DWORD PTR [rcx]
   1400182d3:	rex add DWORD PTR [rax],eax
   1400182d6:	add    BYTE PTR [rax],al
   1400182d8:	push   rbx
   1400182d9:	outs   dx,DWORD PTR ds:[rsi]
   1400182da:	jne    0x14001834e
   1400182dc:	movsxd esp,DWORD PTR [rbp+0x20]
   1400182df:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x68746150
	...
   1400182f0:	push   rdx
   1400182f1:	gs ins DWORD PTR es:[rdi],dx
   1400182f3:	outs   dx,DWORD PTR ds:[rsi]
   1400182f4:	jbe    0x14001835b
   1400182f6:	and    BYTE PTR [rcx+0x6c],al
   1400182f9:	ins    BYTE PTR es:[rdi],dx
   1400182fa:	add    BYTE PTR [rax],al
   1400182fc:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x3a
   140018305:	add    BYTE PTR [rax],al
   140018307:	add    BYTE PTR [rsi+0x69],al
   14001830a:	ins    BYTE PTR es:[rdi],dx
   14001830b:	gs jae 0x14001835e
   14001830e:	(bad)  
   14001830f:	add    BYTE PTR gs:[eax],al
   140018313:	add    BYTE PTR [rax],al
   140018315:	add    BYTE PTR [rax],al
   140018317:	add    BYTE PTR [rdx+0x65],dh
   14001831a:	ins    DWORD PTR es:[rdi],dx
   14001831b:	outs   dx,DWORD PTR ds:[rsi]
   14001831c:	jbe    0x140018383
   14001831e:	rex.B ins BYTE PTR es:[rdi],dx
   140018320:	ins    BYTE PTR es:[rdi],dx
   140018321:	rex.X jne 0x140018398
   140018324:	je     0x140018395
   140018326:	outs   dx,BYTE PTR ds:[rsi]
   140018327:	add    BYTE PTR [rsi+0x69],ah
   14001832a:	ins    BYTE PTR es:[rdi],dx
   14001832b:	imul   r14,QWORD PTR gs:[rbx+0x74],0x67646957
   140018334:	gs je  0x140018337
   140018337:	add    BYTE PTR [rsi+0x69],ah
   14001833a:	ins    BYTE PTR es:[rdi],dx
   14001833b:	gs rex.WR (bad) 
   14001833e:	(bad)  
   14001833f:	gs ins BYTE PTR es:[rdi],dx
	...
   14001834d:	add    BYTE PTR [rax],al
   14001834f:	add    BYTE PTR [rax+rsi*2],bh
   140018352:	ds cmp al,0x62
   140018355:	ds push rdi
   140018357:	(bad)  
   140018358:	jb     0x1400183c8
   14001835a:	imul   ebp,DWORD PTR [rsi+0x67],0x622f3c3a
   140018361:	and    BYTE PTR ds:[rdi+0x68],dl
   140018365:	outs   dx,BYTE PTR gs:[rsi]
   140018367:	and    BYTE PTR [rdx+0x65],dh
   14001836a:	ins    DWORD PTR es:[rdi],dx
   14001836b:	outs   dx,DWORD PTR ds:[rsi]
   14001836c:	jbe    0x1400183d7
   14001836e:	outs   dx,BYTE PTR ds:[rsi]
   14001836f:	and    BYTE PTR [ecx+0x6d],ch
   140018373:	(bad)  
   140018374:	addr32 gs jae 0x140018398
   140018378:	outs   dx,DWORD PTR ds:[rsi]
   140018379:	jb     0x14001839b
   14001837b:	jae    0x1400183f1
   14001837d:	jns    0x1400183eb
   14001837f:	gs jae 0x1400183ea
   140018382:	gs gs je 0x1400183f9
   140018386:	sub    al,0x20
   140018388:	(bad)  
   140018389:	and    BYTE PTR gs:[rcx+0x77],ah
   14001838d:	(bad)  
   14001838e:	jb     0x1400183f5
   140018390:	and    BYTE PTR [rax+rbp*2+0x61],dh
   140018394:	je     0x1400183b6
   140018396:	je     0x140018400
   140018398:	outs   dx,DWORD PTR ds:[rsi]
   140018399:	jae    0x140018400
   14001839b:	and    BYTE PTR [rsi+0x69],ah
   14001839e:	ins    BYTE PTR es:[rdi],dx
   14001839f:	gs jae 0x1400183c2
   1400183a2:	(bad)  
   1400183a3:	jb     0x14001840a
   1400183a5:	and    BYTE PTR [rsi+0x6f],ch
   1400183a8:	je     0x1400183ca
   1400183aa:	imul   esi,DWORD PTR fs:[rdx+0x65],0x796c7463
   1400183b2:	and    BYTE PTR [rdx+0x65],dh
   1400183b5:	data16 gs jb 0x14001841e
   1400183b9:	outs   dx,BYTE PTR ds:[rsi]
   1400183ba:	movsxd esp,DWORD PTR [rbp+0x64]
   1400183bd:	and    BYTE PTR [rdx+0x79],ah
   1400183c0:	and    BYTE PTR [rax+rbp*2+0x65],dh
   1400183c4:	and    BYTE PTR [rsi],ch
   1400183c6:	(bad)  
   1400183c7:	fs jo  0x1400183ea
   1400183ca:	outs   dx,DWORD PTR ds:[rsi]
   1400183cb:	jb     0x1400183ed
   1400183cd:	cs movsxd esp,DWORD PTR fs:[rsi+0x20]
   1400183d2:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x2f3c
   1400183d9:	jo     0x140018419
   1400183db:	add    BYTE PTR [rax],al
   1400183dd:	add    BYTE PTR [rax],al
   1400183df:	add    BYTE PTR [rcx],dh
   1400183e1:	jb     0x140018448
   1400183e3:	ins    DWORD PTR es:[rdi],dx
   1400183e4:	outs   dx,DWORD PTR ds:[rsi]
   1400183e5:	jbe    0x14001844c
   1400183e7:	rex.B ins BYTE PTR es:[rdi],dx
   1400183e9:	ins    BYTE PTR es:[rdi],dx
   1400183ea:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x2928
   1400183f3:	add    BYTE PTR [rax],al
   1400183f5:	add    BYTE PTR [rax],al
   1400183f7:	add    BYTE PTR [rcx],dh
   1400183f9:	jb     0x140018460
   1400183fb:	ins    DWORD PTR es:[rdi],dx
   1400183fc:	outs   dx,DWORD PTR ds:[rsi]
   1400183fd:	jbe    0x140018464
   1400183ff:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x29
	...
   140018410:	push   rdx
   140018411:	gs ins DWORD PTR es:[rdi],dx
   140018413:	outs   dx,DWORD PTR ds:[rsi]
   140018414:	jbe    0x14001847b
   140018416:	and    BYTE PTR [rsi+0x69],ah
   140018419:	ins    BYTE PTR es:[rdi],dx
   14001841a:	gs jae 0x14001843d
   14001841d:	ja     0x140018487
   14001841f:	imul   esp,DWORD PTR [rbx+0x68],0x65726120
   140018426:	and    BYTE PTR [rsi+0x65],ch
   140018429:	imul   esi,DWORD PTR [rax+rbp*2+0x65],0x65722072
   140018431:	data16 gs jb 0x14001849a
   140018435:	outs   dx,BYTE PTR ds:[rsi]
   140018436:	movsxd esp,DWORD PTR [rbp+0x64]
   140018439:	and    BYTE PTR [rdx+0x79],ah
   14001843c:	and    BYTE PTR [rcx+0x20],ah
   14001843f:	imul   esp,DWORD PTR [rbp+0x79],0x77
   140018443:	outs   dx,DWORD PTR ds:[rsi]
   140018444:	jb     0x1400184aa
   140018446:	and    BYTE PTR [rsi+0x6f],ch
   140018449:	jb     0x14001846b
   14001844b:	(bad)  
   14001844c:	jns    0x14001846e
   14001844e:	je     0x1400184b8
   140018450:	and    BYTE PTR gs:[rdi+rcx*2+0x43],dl
   140018455:	add    BYTE PTR cs:[rax],al
   140018458:	push   rbp
   140018459:	outs   dx,BYTE PTR ds:[rsi]
   14001845a:	jb     0x1400184c1
   14001845c:	data16 gs jb 0x1400184c5
   140018460:	outs   dx,BYTE PTR ds:[rsi]
   140018461:	movsxd esp,DWORD PTR [rbp+0x64]
   140018464:	and    BYTE PTR [rsi+0x69],al
   140018467:	ins    BYTE PTR es:[rdi],dx
   140018468:	gs jae 0x14001846b
   14001846b:	add    BYTE PTR [rax],al
   14001846d:	add    BYTE PTR [rax],al
   14001846f:	add    BYTE PTR [rax],ah
   140018471:	fld    QWORD PTR [rcx]
   140018473:	rex add DWORD PTR [rax],eax
   140018476:	add    BYTE PTR [rax],al
   140018478:	add    BYTE PTR [rcx+0x14000],ch
   14001847e:	add    BYTE PTR [rax],al
   140018480:	in     al,dx
   140018481:	(bad)  
   140018482:	add    DWORD PTR [rax+0x1],eax
   140018485:	add    BYTE PTR [rax],al
   140018487:	add    dl,dh
   140018489:	(bad)  
   14001848a:	add    DWORD PTR [rax+0x1],eax
   14001848d:	add    BYTE PTR [rax],al
   14001848f:	add    al,bh
   140018491:	(bad)  
   140018492:	add    DWORD PTR [rax+0x1],eax
   140018495:	add    BYTE PTR [rax],al
   140018497:	add    dh,bh
   140018499:	(bad)  
   14001849a:	add    DWORD PTR [rax+0x1],eax
   14001849d:	add    BYTE PTR [rax],al
   14001849f:	add    BYTE PTR [rax+riz*1],al
   1400184a2:	add    DWORD PTR [rax+0x1],eax
   1400184a5:	add    BYTE PTR [rax],al
   1400184a7:	add    BYTE PTR [rdx],cl
   1400184a9:	and    BYTE PTR [rcx],al
   1400184ab:	rex add DWORD PTR [rax],eax
   1400184ae:	add    BYTE PTR [rax],al
   1400184b0:	mov    ah,bl
   1400184b2:	add    DWORD PTR [rax+0x1],eax
   1400184b5:	add    BYTE PTR [rax],al
   1400184b7:	add    BYTE PTR [rax+0x1d],dh
   1400184ba:	add    DWORD PTR [rax+0x1],eax
   1400184bd:	add    BYTE PTR [rax],al
   1400184bf:	add    BYTE PTR [rax+0x140011c],ah
   1400184c5:	add    BYTE PTR [rax],al
   1400184c7:	add    al,dh
   1400184c9:	sbb    al,0x1
   1400184cb:	rex add DWORD PTR [rax],eax
   1400184ce:	add    BYTE PTR [rax],al
   1400184d0:	(bad)  
   1400184d1:	test   eax,0x14000
   1400184d6:	add    BYTE PTR [rax],al
   1400184d8:	out    0x22,al
   1400184da:	add    DWORD PTR [rax+0x1],eax
   1400184dd:	add    BYTE PTR [rax],al
   1400184df:	add    BYTE PTR [rax+0x14000ad],ah
   1400184e5:	add    BYTE PTR [rax],al
   1400184e7:	add    BYTE PTR [rax+rbp*1+0x1],bl
   1400184eb:	rex add DWORD PTR [rax],eax
   1400184ee:	add    BYTE PTR [rax],al
   1400184f0:	(bad)  
   1400184f1:	sub    BYTE PTR [rcx],al
   1400184f3:	rex add DWORD PTR [rax],eax
   1400184f6:	add    BYTE PTR [rax],al
   1400184f8:	push   0x1400128
   1400184fd:	add    BYTE PTR [rax],al
   1400184ff:	add    BYTE PTR [rsi+0x28],ch
   140018502:	add    DWORD PTR [rax+0x1],eax
   140018505:	add    BYTE PTR [rax],al
   140018507:	add    BYTE PTR [rax+rbp*1+0x1],dh
   14001850b:	rex add DWORD PTR [rax],eax
   14001850e:	add    BYTE PTR [rax],al
   140018510:	or     al,0x21
   140018512:	add    DWORD PTR [rax+0x1],eax
   140018515:	add    BYTE PTR [rax],al
   140018517:	add    ah,ch
   140018519:	and    al,BYTE PTR [rcx]
   14001851b:	rex add DWORD PTR [rax],eax
   14001851e:	add    BYTE PTR [rax],al
   140018520:	repnz and al,BYTE PTR [rcx]
   140018523:	rex add DWORD PTR [rax],eax
   140018526:	add    BYTE PTR [rax],al
   140018528:	add    bl,BYTE PTR [rdi]
   14001852a:	add    DWORD PTR [rax+0x1],eax
   14001852d:	add    BYTE PTR [rax],al
   14001852f:	add    BYTE PTR [rax],cl
   140018531:	(bad)  
   140018532:	add    DWORD PTR [rax+0x1],eax
   140018535:	add    BYTE PTR [rax],al
   140018537:	add    BYTE PTR [rsi],cl
   140018539:	(bad)  
   14001853a:	add    DWORD PTR [rax+0x1],eax
   14001853d:	add    BYTE PTR [rax],al
   14001853f:	add    BYTE PTR [rdi+rbx*1],dl
   140018542:	add    DWORD PTR [rax+0x1],eax
   140018545:	add    BYTE PTR [rax],al
   140018547:	add    BYTE PTR [rdx],bl
   140018549:	(bad)  
   14001854a:	add    DWORD PTR [rax+0x1],eax
   14001854d:	add    BYTE PTR [rax],al
   14001854f:	add    BYTE PTR [rax],ah
   140018551:	(bad)  
   140018552:	add    DWORD PTR [rax+0x1],eax
   140018555:	add    BYTE PTR [rax],al
   140018557:	add    BYTE PTR [rsi],ah
   140018559:	(bad)  
   14001855a:	add    DWORD PTR [rax+0x1],eax
   14001855d:	add    BYTE PTR [rax],al
   14001855f:	add    al,bh
   140018561:	and    al,BYTE PTR [rcx]
   140018563:	rex add DWORD PTR [rax],eax
   140018566:	add    BYTE PTR [rax],al
   140018568:	xor    bl,BYTE PTR [rdi]
   14001856a:	add    DWORD PTR [rax+0x1],eax
   14001856d:	add    BYTE PTR [rax],al
   14001856f:	add    BYTE PTR [rax],bh
   140018571:	(bad)  
   140018572:	add    DWORD PTR [rax+0x1],eax
   140018575:	add    BYTE PTR [rax],al
   140018577:	add    BYTE PTR [rsi],bh
   140018579:	(bad)  
   14001857a:	add    DWORD PTR [rax+0x1],eax
   14001857d:	add    BYTE PTR [rax],al
   14001857f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140018583:	rex add DWORD PTR [rax],eax
   140018586:	add    BYTE PTR [rax],al
   140018588:	rex.WX (bad) 
   14001858a:	add    DWORD PTR [rax+0x1],eax
   14001858d:	add    BYTE PTR [rax],al
   14001858f:	add    dh,bh
   140018591:	and    al,BYTE PTR [rcx]
   140018593:	rex add DWORD PTR [rax],eax
   140018596:	add    BYTE PTR [rax],al
   140018598:	push   rsi
   140018599:	(bad)  
   14001859a:	add    DWORD PTR [rax+0x1],eax
   14001859d:	add    BYTE PTR [rax],al
   14001859f:	add    BYTE PTR [rsi+0x21],cl
   1400185a2:	add    DWORD PTR [rax+0x1],eax
   1400185a5:	add    BYTE PTR [rax],al
   1400185a7:	add    BYTE PTR [rcx+riz*1+0x1],dl
   1400185ab:	rex add DWORD PTR [rax],eax
   1400185ae:	add    BYTE PTR [rax],al
   1400185b0:	ret    0x122
   1400185b3:	rex add DWORD PTR [rax],eax
   1400185b6:	add    BYTE PTR [rax],al
   1400185b8:	outs   dx,BYTE PTR ds:[rsi]
   1400185b9:	(bad)  
   1400185ba:	add    DWORD PTR [rax+0x1],eax
   1400185bd:	add    BYTE PTR [rax],al
   1400185bf:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   1400185c3:	rex add DWORD PTR [rax],eax
   1400185c6:	add    BYTE PTR [rax],al
   1400185c8:	jp     0x1400185e9
   1400185ca:	add    DWORD PTR [rax+0x1],eax
   1400185cd:	add    BYTE PTR [rax],al
   1400185cf:	add    BYTE PTR [rax+0x140011f],al
   1400185d5:	add    BYTE PTR [rax],al
   1400185d7:	add    BYTE PTR [rsi+0x140011f],al
   1400185dd:	add    BYTE PTR [rax],al
   1400185df:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   1400185e6:	add    BYTE PTR [rax],al
   1400185e8:	(bad)  
   1400185e9:	and    DWORD PTR [rcx],eax
   1400185eb:	rex add DWORD PTR [rax],eax
   1400185ee:	add    BYTE PTR [rax],al
   1400185f0:	cwde   
   1400185f1:	(bad)  
   1400185f2:	add    DWORD PTR [rax+0x1],eax
   1400185f5:	add    BYTE PTR [rax],al
   1400185f7:	add    BYTE PTR [rsi+0x21],ah
   1400185fa:	add    DWORD PTR [rax+0x1],eax
   1400185fd:	add    BYTE PTR [rax],al
   1400185ff:	add    BYTE PTR [rdi+rbx*1+0x14001],ah
   140018606:	add    BYTE PTR [rax],al
   140018608:	stos   BYTE PTR es:[rdi],al
   140018609:	(bad)  
   14001860a:	add    DWORD PTR [rax+0x1],eax
   14001860d:	add    BYTE PTR [rax],al
   14001860f:	add    BYTE PTR [rax+0x140011f],dh
   140018615:	add    BYTE PTR [rax],al
   140018617:	add    BYTE PTR [rsi+0x140011f],dh
   14001861d:	add    BYTE PTR [rax],al
   14001861f:	add    BYTE PTR [rbx+riz*1],al
   140018622:	add    DWORD PTR [rax+0x1],eax
   140018625:	add    BYTE PTR [rax],al
   140018627:	add    BYTE PTR [rdx],cl
   140018629:	and    eax,DWORD PTR [rcx]
   14001862b:	rex add DWORD PTR [rax],eax
   14001862e:	add    BYTE PTR [rax],al
   140018630:	sub    BYTE PTR [rsi],ah
   140018632:	add    DWORD PTR [rax+0x1],eax
   140018635:	add    BYTE PTR [rax],al
   140018637:	add    BYTE PTR [rax],dl
   140018639:	and    eax,DWORD PTR [rcx]
   14001863b:	rex add DWORD PTR [rax],eax
   14001863e:	add    BYTE PTR [rax],al
   140018640:	(bad)  
   140018641:	and    eax,DWORD PTR [rcx]
   140018643:	rex add DWORD PTR [rax],eax
   140018646:	add    BYTE PTR [rax],al
   140018648:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001864a:	ins    BYTE PTR es:[rdi],dx
   14001864b:	ins    BYTE PTR es:[rdi],dx
   14001864c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140018651:	outs   dx,BYTE PTR ds:[rsi]
   140018652:	and    BYTE PTR [rsi+0x69],ah
   140018655:	ins    BYTE PTR es:[rdi],dx
   140018656:	and    BYTE PTR gs:[rsi+0x61],ch
   14001865a:	ins    DWORD PTR es:[rdi],dx
   14001865b:	cmp    al,BYTE PTR gs:[rax]
   14001865e:	add    BYTE PTR [rax],al
   140018660:	push   rax
   140018661:	jb     0x1400186d2
   140018663:	push   0x65
   140018665:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   140018669:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x656d616e
   140018671:	cmp    al,BYTE PTR [rax]
   140018673:	add    BYTE PTR [rax],al
   140018675:	add    BYTE PTR [rax],al
   140018677:	add    BYTE PTR [rdi+0x75],cl
   14001867a:	je     0x1400186ec
   14001867c:	jne    0x1400186f2
   14001867e:	push   rax
   14001867f:	(bad)  
   140018680:	add    BYTE PTR gs:[eax],al
	...
   140018690:	push   rsp
   140018691:	push   0x70732065
   140018696:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001869a:	imul   esp,DWORD PTR [rbp+0x64],0x6c696620
   1400186a1:	and    BYTE PTR gs:[rip+0x6c612031],ah        # 0x1ac62a6d9
   1400186a8:	jb     0x14001870f
   1400186aa:	(bad)  
   1400186ab:	fs jns 0x1400186ce
   1400186ae:	gs js  0x14001871a
   1400186b1:	jae    0x140018727
   1400186b3:	or     cl,BYTE PTR cs:[rdx]
   1400186b6:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400186b8:	and    BYTE PTR [rcx+0x6f],bh
   1400186bb:	jne    0x1400186dd
   1400186bd:	ja     0x140018720
   1400186bf:	outs   dx,BYTE PTR ds:[rsi]
   1400186c0:	je     0x1400186e2
   1400186c2:	je     0x140018733
   1400186c4:	and    BYTE PTR [rdx+0x65],dh
   1400186c7:	ins    DWORD PTR es:[rdi],dx
   1400186c8:	outs   dx,DWORD PTR ds:[rsi]
   1400186c9:	jbe    0x140018730
   1400186cb:	and    BYTE PTR [rcx+0x74],ch
   1400186ce:	(bad)  
   1400186cf:	add    BYTE PTR [rbx+0x61],al
   1400186d2:	outs   dx,BYTE PTR ds:[rsi]
   1400186d3:	movsxd esp,DWORD PTR [rbp+0x6c]
   1400186d6:	add    BYTE PTR [rax],al
   1400186d8:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400186db:	ins    BYTE PTR es:[rdi],dx
   1400186dc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400186e1:	outs   dx,BYTE PTR ds:[rsi]
   1400186e2:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400186ea:	add    BYTE PTR [rax],al
   1400186ec:	add    BYTE PTR [rax],al
   1400186ee:	add    BYTE PTR [rax],al
   1400186f0:	jo     0x140018764
   1400186f2:	outs   dx,DWORD PTR ds:[rsi]
   1400186f3:	push   0x65
   1400186f5:	movsxd esi,DWORD PTR [rsp+rcx*2+0x69]
   1400186f9:	outs   dx,BYTE PTR ds:[rsi]
   1400186fa:	gs rex.RB
   1400186fc:	imul   esi,DWORD PTR fs:[rax+rax*1+0x43],0x65766e6f
   140018705:	jb     0x14001877b
   140018707:	cs cs add BYTE PTR cs:[rax],al
   14001870c:	add    BYTE PTR [rax],al
   14001870e:	add    BYTE PTR [rax],al
   140018710:	push   rbx
   140018711:	jo     0x140018778
   140018713:	movsxd ebp,DWORD PTR [rcx+0x66]
   140018716:	jns    0x140018738
   140018718:	je     0x140018782
   14001871a:	and    BYTE PTR gs:[rsi+0x69],ah
   14001871e:	ins    BYTE PTR es:[rdi],dx
   14001871f:	and    BYTE PTR gs:[rsi+0x61],ch
   140018723:	ins    DWORD PTR es:[rdi],dx
   140018724:	gs jae 0x140018747
   140018727:	outs   dx,WORD PTR ds:[rsi]
   140018729:	jb     0x14001874b
   14001872b:	je     0x140018795
   14001872d:	and    BYTE PTR gs:[rdi+0x75],ch
   140018731:	je     0x1400187a3
   140018733:	jne    0x1400187a9
   140018735:	and    BYTE PTR [rsi+0x69],ah
   140018738:	ins    BYTE PTR es:[rdi],dx
   140018739:	gs jae 0x14001876a
   14001873c:	add    BYTE PTR [rax],al
   14001873e:	add    BYTE PTR [rax],al
   140018740:	rex.WRXB jne 0x1400187b7
   140018743:	jo     0x1400187ba
   140018745:	je     0x140018767
   140018747:	imul   r13d,DWORD PTR [rbp+r12*2+0x20],0x656d614e
   140018750:	jae    0x140018752
	...
   14001875e:	add    BYTE PTR [rax],al
   140018760:	loopne 0x14001873f
   140018762:	add    DWORD PTR [rax+0x1],eax
   140018765:	add    BYTE PTR [rax],al
   140018767:	add    BYTE PTR [rax],al
   140018769:	mov    edx,0x14000
   14001876e:	add    BYTE PTR [rax],al
   140018770:	in     al,dx
   140018771:	(bad)  
   140018772:	add    DWORD PTR [rax+0x1],eax
   140018775:	add    BYTE PTR [rax],al
   140018777:	add    dl,dh
   140018779:	(bad)  
   14001877a:	add    DWORD PTR [rax+0x1],eax
   14001877d:	add    BYTE PTR [rax],al
   14001877f:	add    al,bh
   140018781:	(bad)  
   140018782:	add    DWORD PTR [rax+0x1],eax
   140018785:	add    BYTE PTR [rax],al
   140018787:	add    dh,bh
   140018789:	(bad)  
   14001878a:	add    DWORD PTR [rax+0x1],eax
   14001878d:	add    BYTE PTR [rax],al
   14001878f:	add    BYTE PTR [rax+riz*1],al
   140018792:	add    DWORD PTR [rax+0x1],eax
   140018795:	add    BYTE PTR [rax],al
   140018797:	add    BYTE PTR [rdx],cl
   140018799:	and    BYTE PTR [rcx],al
   14001879b:	rex add DWORD PTR [rax],eax
   14001879e:	add    BYTE PTR [rax],al
   1400187a0:	rex.W fld QWORD PTR [rcx]
   1400187a3:	rex add DWORD PTR [rax],eax
   1400187a6:	add    BYTE PTR [rax],al
   1400187a8:	loopne 0x1400187c7
   1400187aa:	add    DWORD PTR [rax+0x1],eax
   1400187ad:	add    BYTE PTR [rax],al
   1400187af:	add    BYTE PTR [rax+0x140011d],dl
   1400187b5:	add    BYTE PTR [rax],al
   1400187b7:	add    al,dh
   1400187b9:	sbb    BYTE PTR [rcx],al
   1400187bb:	rex add DWORD PTR [rax],eax
   1400187be:	add    BYTE PTR [rax],al
   1400187c0:	adc    BYTE PTR [rdx+0x14000],bh
   1400187c6:	add    BYTE PTR [rax],al
   1400187c8:	out    0x22,al
   1400187ca:	add    DWORD PTR [rax+0x1],eax
   1400187cd:	add    BYTE PTR [rax],al
   1400187cf:	add    BYTE PTR [rax+0x1400128],al
   1400187d5:	add    BYTE PTR [rax],al
   1400187d7:	add    BYTE PTR [rax+rbp*1+0x1],bl
   1400187db:	rex add DWORD PTR [rax],eax
   1400187de:	add    BYTE PTR [rax],al
   1400187e0:	(bad)  
   1400187e1:	sub    BYTE PTR [rcx],al
   1400187e3:	rex add DWORD PTR [rax],eax
   1400187e6:	add    BYTE PTR [rax],al
   1400187e8:	push   0x1400128
   1400187ed:	add    BYTE PTR [rax],al
   1400187ef:	add    BYTE PTR [rsi+0x28],ch
   1400187f2:	add    DWORD PTR [rax+0x1],eax
   1400187f5:	add    BYTE PTR [rax],al
   1400187f7:	add    BYTE PTR [rax+rbp*1+0x1],dh
   1400187fb:	rex add DWORD PTR [rax],eax
   1400187fe:	add    BYTE PTR [rax],al
   140018800:	or     al,0x21
   140018802:	add    DWORD PTR [rax+0x1],eax
   140018805:	add    BYTE PTR [rax],al
   140018807:	add    ah,ch
   140018809:	and    al,BYTE PTR [rcx]
   14001880b:	rex add DWORD PTR [rax],eax
   14001880e:	add    BYTE PTR [rax],al
   140018810:	repnz and al,BYTE PTR [rcx]
   140018813:	rex add DWORD PTR [rax],eax
   140018816:	add    BYTE PTR [rax],al
   140018818:	add    bl,BYTE PTR [rdi]
   14001881a:	add    DWORD PTR [rax+0x1],eax
   14001881d:	add    BYTE PTR [rax],al
   14001881f:	add    BYTE PTR [rax],cl
   140018821:	(bad)  
   140018822:	add    DWORD PTR [rax+0x1],eax
   140018825:	add    BYTE PTR [rax],al
   140018827:	add    BYTE PTR [rsi],cl
   140018829:	(bad)  
   14001882a:	add    DWORD PTR [rax+0x1],eax
   14001882d:	add    BYTE PTR [rax],al
   14001882f:	add    BYTE PTR [rdi+rbx*1],dl
   140018832:	add    DWORD PTR [rax+0x1],eax
   140018835:	add    BYTE PTR [rax],al
   140018837:	add    BYTE PTR [rdx],bl
   140018839:	(bad)  
   14001883a:	add    DWORD PTR [rax+0x1],eax
   14001883d:	add    BYTE PTR [rax],al
   14001883f:	add    BYTE PTR [rax],ah
   140018841:	(bad)  
   140018842:	add    DWORD PTR [rax+0x1],eax
   140018845:	add    BYTE PTR [rax],al
   140018847:	add    BYTE PTR [rsi],ah
   140018849:	(bad)  
   14001884a:	add    DWORD PTR [rax+0x1],eax
   14001884d:	add    BYTE PTR [rax],al
   14001884f:	add    al,bh
   140018851:	and    al,BYTE PTR [rcx]
   140018853:	rex add DWORD PTR [rax],eax
   140018856:	add    BYTE PTR [rax],al
   140018858:	xor    bl,BYTE PTR [rdi]
   14001885a:	add    DWORD PTR [rax+0x1],eax
   14001885d:	add    BYTE PTR [rax],al
   14001885f:	add    BYTE PTR [rax],bh
   140018861:	(bad)  
   140018862:	add    DWORD PTR [rax+0x1],eax
   140018865:	add    BYTE PTR [rax],al
   140018867:	add    BYTE PTR [rsi],bh
   140018869:	(bad)  
   14001886a:	add    DWORD PTR [rax+0x1],eax
   14001886d:	add    BYTE PTR [rax],al
   14001886f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140018873:	rex add DWORD PTR [rax],eax
   140018876:	add    BYTE PTR [rax],al
   140018878:	rex.WX (bad) 
   14001887a:	add    DWORD PTR [rax+0x1],eax
   14001887d:	add    BYTE PTR [rax],al
   14001887f:	add    dh,bh
   140018881:	and    al,BYTE PTR [rcx]
   140018883:	rex add DWORD PTR [rax],eax
   140018886:	add    BYTE PTR [rax],al
   140018888:	push   rsi
   140018889:	(bad)  
   14001888a:	add    DWORD PTR [rax+0x1],eax
   14001888d:	add    BYTE PTR [rax],al
   14001888f:	add    BYTE PTR [rsi+0x21],cl
   140018892:	add    DWORD PTR [rax+0x1],eax
   140018895:	add    BYTE PTR [rax],al
   140018897:	add    BYTE PTR [rcx+riz*1+0x1],dl
   14001889b:	rex add DWORD PTR [rax],eax
   14001889e:	add    BYTE PTR [rax],al
   1400188a0:	ret    0x122
   1400188a3:	rex add DWORD PTR [rax],eax
   1400188a6:	add    BYTE PTR [rax],al
   1400188a8:	outs   dx,BYTE PTR ds:[rsi]
   1400188a9:	(bad)  
   1400188aa:	add    DWORD PTR [rax+0x1],eax
   1400188ad:	add    BYTE PTR [rax],al
   1400188af:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   1400188b3:	rex add DWORD PTR [rax],eax
   1400188b6:	add    BYTE PTR [rax],al
   1400188b8:	jp     0x1400188d9
   1400188ba:	add    DWORD PTR [rax+0x1],eax
   1400188bd:	add    BYTE PTR [rax],al
   1400188bf:	add    BYTE PTR [rax+0x140011f],al
   1400188c5:	add    BYTE PTR [rax],al
   1400188c7:	add    BYTE PTR [rsi+0x140011f],al
   1400188cd:	add    BYTE PTR [rax],al
   1400188cf:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   1400188d6:	add    BYTE PTR [rax],al
   1400188d8:	(bad)  
   1400188d9:	and    DWORD PTR [rcx],eax
   1400188db:	rex add DWORD PTR [rax],eax
   1400188de:	add    BYTE PTR [rax],al
   1400188e0:	cwde   
   1400188e1:	(bad)  
   1400188e2:	add    DWORD PTR [rax+0x1],eax
   1400188e5:	add    BYTE PTR [rax],al
   1400188e7:	add    BYTE PTR [rsi+0x21],ah
   1400188ea:	add    DWORD PTR [rax+0x1],eax
   1400188ed:	add    BYTE PTR [rax],al
   1400188ef:	add    BYTE PTR [rdi+rbx*1+0x14001],ah
   1400188f6:	add    BYTE PTR [rax],al
   1400188f8:	stos   BYTE PTR es:[rdi],al
   1400188f9:	(bad)  
   1400188fa:	add    DWORD PTR [rax+0x1],eax
   1400188fd:	add    BYTE PTR [rax],al
   1400188ff:	add    BYTE PTR [rax+0x140011f],dh
   140018905:	add    BYTE PTR [rax],al
   140018907:	add    BYTE PTR [rsi+0x140011f],dh
   14001890d:	add    BYTE PTR [rax],al
   14001890f:	add    BYTE PTR [rbx+riz*1],al
   140018912:	add    DWORD PTR [rax+0x1],eax
   140018915:	add    BYTE PTR [rax],al
   140018917:	add    BYTE PTR [rdx],cl
   140018919:	and    eax,DWORD PTR [rcx]
   14001891b:	rex add DWORD PTR [rax],eax
   14001891e:	add    BYTE PTR [rax],al
   140018920:	push   rax
   140018921:	mov    edx,0x14000
   140018926:	add    BYTE PTR [rax],al
   140018928:	add    BYTE PTR [rdi+0x14000],ch
   14001892e:	add    BYTE PTR [rax],al
   140018930:	(bad)  
   140018931:	and    eax,DWORD PTR [rcx]
   140018933:	rex add DWORD PTR [rax],eax
   140018936:	add    BYTE PTR [rax],al
   140018938:	push   rcx
   140018939:	je     0x14001895b
   14001893b:	rex.W
   14001893c:	gs ins BYTE PTR es:[rdi],dx
   14001893e:	jo     0x140018960
   140018940:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140018942:	ins    BYTE PTR es:[rdi],dx
   140018943:	ins    BYTE PTR es:[rdi],dx
   140018944:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140018949:	outs   dx,BYTE PTR ds:[rsi]
   14001894a:	and    BYTE PTR [rax+0x72],dl
   14001894d:	outs   dx,DWORD PTR ds:[rsi]
   14001894e:	push   0x65
   140018950:	movsxd esi,DWORD PTR [rax+riz*1+0x46]
   140018954:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x48207451
   14001895c:	gs ins BYTE PTR es:[rdi],dx
   14001895e:	jo     0x140018980
   140018960:	push   rax
   140018961:	jb     0x1400189d2
   140018963:	push   0x65
   140018965:	movsxd esi,DWORD PTR [rax+riz*1+0x46]
   140018969:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x28000000
   140018971:	loopne 0x140018974
   140018973:	rex add DWORD PTR [rax],eax
   140018976:	add    BYTE PTR [rax],al
   140018978:	movabs al,ds:0xec000000014000bd
   140018981:	(bad)  
   140018982:	add    DWORD PTR [rax+0x1],eax
   140018985:	add    BYTE PTR [rax],al
   140018987:	add    dl,dh
   140018989:	(bad)  
   14001898a:	add    DWORD PTR [rax+0x1],eax
   14001898d:	add    BYTE PTR [rax],al
   14001898f:	add    al,bh
   140018991:	(bad)  
   140018992:	add    DWORD PTR [rax+0x1],eax
   140018995:	add    BYTE PTR [rax],al
   140018997:	add    dh,bh
   140018999:	(bad)  
   14001899a:	add    DWORD PTR [rax+0x1],eax
   14001899d:	add    BYTE PTR [rax],al
   14001899f:	add    BYTE PTR [rax+riz*1],al
   1400189a2:	add    DWORD PTR [rax+0x1],eax
   1400189a5:	add    BYTE PTR [rax],al
   1400189a7:	add    BYTE PTR [rdx],cl
   1400189a9:	and    BYTE PTR [rcx],al
   1400189ab:	rex add DWORD PTR [rax],eax
   1400189ae:	add    BYTE PTR [rax],al
   1400189b0:	mov    bh,bl
   1400189b2:	add    DWORD PTR [rax+0x1],eax
   1400189b5:	add    BYTE PTR [rax],al
   1400189b7:	add    BYTE PTR [rdi+riz*1+0x1],ch
   1400189bb:	rex add DWORD PTR [rax],eax
   1400189be:	add    BYTE PTR [rax],al
   1400189c0:	jb     0x1400189e9
   1400189c2:	add    DWORD PTR [rax+0x1],eax
   1400189c5:	add    BYTE PTR [rax],al
   1400189c7:	add    BYTE PTR [rax+0x27],bh
   1400189ca:	add    DWORD PTR [rax+0x1],eax
   1400189cd:	add    BYTE PTR [rax],al
   1400189cf:	add    BYTE PTR [rax-0x43],dh
   1400189d2:	add    BYTE PTR [rax+0x1],al
   1400189d5:	add    BYTE PTR [rax],al
   1400189d7:	add    BYTE PTR [rsi+0x27],bh
   1400189da:	add    DWORD PTR [rax+0x1],eax
   1400189dd:	add    BYTE PTR [rax],al
   1400189df:	add    BYTE PTR [rdx+0x1400123],al
   1400189e5:	add    BYTE PTR [rax],al
   1400189e7:	add    BYTE PTR [rdi+riz*1+0x14001],al
   1400189ee:	add    BYTE PTR [rax],al
   1400189f0:	(bad)  
   1400189f1:	sub    BYTE PTR [rcx],al
   1400189f3:	rex add DWORD PTR [rax],eax
   1400189f6:	add    BYTE PTR [rax],al
   1400189f8:	push   0x1400128
   1400189fd:	add    BYTE PTR [rax],al
   1400189ff:	add    BYTE PTR [rsi+0x28],ch
   140018a02:	add    DWORD PTR [rax+0x1],eax
   140018a05:	add    BYTE PTR [rax],al
   140018a07:	add    BYTE PTR [rax+rbp*1+0x1],dh
   140018a0b:	rex add DWORD PTR [rax],eax
   140018a0e:	add    BYTE PTR [rax],al
   140018a10:	or     al,0x21
   140018a12:	add    DWORD PTR [rax+0x1],eax
   140018a15:	add    BYTE PTR [rax],al
   140018a17:	add    BYTE PTR [rsi+0x1400123],cl
   140018a1d:	add    BYTE PTR [rax],al
   140018a1f:	add    BYTE PTR [rbx+riz*1+0x14001],dl
   140018a26:	add    BYTE PTR [rax],al
   140018a28:	add    bl,BYTE PTR [rdi]
   140018a2a:	add    DWORD PTR [rax+0x1],eax
   140018a2d:	add    BYTE PTR [rax],al
   140018a2f:	add    BYTE PTR [rax],cl
   140018a31:	(bad)  
   140018a32:	add    DWORD PTR [rax+0x1],eax
   140018a35:	add    BYTE PTR [rax],al
   140018a37:	add    BYTE PTR [rdx+0x1400127],cl
   140018a3d:	add    BYTE PTR [rax],al
   140018a3f:	add    BYTE PTR [rax+0x1400127],dl
   140018a45:	add    BYTE PTR [rax],al
   140018a47:	add    BYTE PTR [rsi+0x1400127],dl
   140018a4d:	add    BYTE PTR [rax],al
   140018a4f:	add    BYTE PTR [rdi+riz*1+0x14001],bl
   140018a56:	add    BYTE PTR [rax],al
   140018a58:	movabs ds:0xa800000001400127,al
   140018a61:	(bad)  
   140018a62:	add    DWORD PTR [rax+0x1],eax
   140018a65:	add    BYTE PTR [rax],al
   140018a67:	add    BYTE PTR [rsi+0x1400127],ch
   140018a6d:	add    BYTE PTR [rax],al
   140018a6f:	add    BYTE PTR [rdi+riz*1+0x14001],dh
   140018a76:	add    BYTE PTR [rax],al
   140018a78:	mov    edx,0x1400127
   140018a7d:	add    BYTE PTR [rax],al
   140018a7f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140018a83:	rex add DWORD PTR [rax],eax
   140018a86:	add    BYTE PTR [rax],al
   140018a88:	rex.WX (bad) 
   140018a8a:	add    DWORD PTR [rax+0x1],eax
   140018a8d:	add    BYTE PTR [rax],al
   140018a8f:	add    al,al
   140018a91:	(bad)  
   140018a92:	add    DWORD PTR [rax+0x1],eax
   140018a95:	add    BYTE PTR [rax],al
   140018a97:	add    BYTE PTR [rsi+0x1f],dl
   140018a9a:	add    DWORD PTR [rax+0x1],eax
   140018a9d:	add    BYTE PTR [rax],al
   140018a9f:	add    dh,al
   140018aa1:	(bad)  
   140018aa2:	add    DWORD PTR [rax+0x1],eax
   140018aa5:	add    BYTE PTR [rax],al
   140018aa7:	add    BYTE PTR [rcx+riz*1+0x1],dl
   140018aab:	rex add DWORD PTR [rax],eax
   140018aae:	add    BYTE PTR [rax],al
   140018ab0:	int3   
   140018ab1:	(bad)  
   140018ab2:	add    DWORD PTR [rax+0x1],eax
   140018ab5:	add    BYTE PTR [rax],al
   140018ab7:	add    BYTE PTR [rsi+0x1f],ch
   140018aba:	add    DWORD PTR [rax+0x1],eax
   140018abd:	add    BYTE PTR [rax],al
   140018abf:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140018ac3:	rex add DWORD PTR [rax],eax
   140018ac6:	add    BYTE PTR [rax],al
   140018ac8:	shl    BYTE PTR [rdi],cl
   140018aca:	add    DWORD PTR [rax+0x1],eax
   140018acd:	add    BYTE PTR [rax],al
   140018acf:	add    al,bl
   140018ad1:	(bad)  
   140018ad2:	add    DWORD PTR [rax+0x1],eax
   140018ad5:	add    BYTE PTR [rax],al
   140018ad7:	add    dh,bl
   140018ad9:	(bad)  
   140018ada:	add    DWORD PTR [rax+0x1],eax
   140018add:	add    BYTE PTR [rax],al
   140018adf:	add    ah,ah
   140018ae1:	(bad)  
   140018ae2:	add    DWORD PTR [rax+0x1],eax
   140018ae5:	add    BYTE PTR [rax],al
   140018ae7:	add    dl,ch
   140018ae9:	(bad)  
   140018aea:	add    DWORD PTR [rax+0x1],eax
   140018aed:	add    BYTE PTR [rax],al
   140018aef:	add    BYTE PTR [rax+0x140011f],bl
   140018af5:	add    BYTE PTR [rax],al
   140018af7:	add    BYTE PTR [rsi+0x21],ah
   140018afa:	add    DWORD PTR [rax+0x1],eax
   140018afd:	add    BYTE PTR [rax],al
   140018aff:	add    al,dh
   140018b01:	(bad)  
   140018b02:	add    DWORD PTR [rax+0x1],eax
   140018b05:	add    BYTE PTR [rax],al
   140018b07:	add    dh,dh
   140018b09:	(bad)  
   140018b0a:	add    DWORD PTR [rax+0x1],eax
   140018b0d:	add    BYTE PTR [rax],al
   140018b0f:	add    ah,bh
   140018b11:	(bad)  
   140018b12:	add    DWORD PTR [rax+0x1],eax
   140018b15:	add    BYTE PTR [rax],al
   140018b17:	add    BYTE PTR [rdx],al
   140018b19:	sub    BYTE PTR [rcx],al
   140018b1b:	rex add DWORD PTR [rax],eax
   140018b1e:	add    BYTE PTR [rax],al
   140018b20:	or     al,0x24
   140018b22:	add    DWORD PTR [rax+0x1],eax
   140018b25:	add    BYTE PTR [rax],al
   140018b27:	add    BYTE PTR [rax],cl
   140018b29:	sub    BYTE PTR [rcx],al
   140018b2b:	rex add DWORD PTR [rax],eax
   140018b2e:	add    BYTE PTR [rax],al
   140018b30:	(bad)  
   140018b31:	sub    BYTE PTR [rcx],al
   140018b33:	rex add DWORD PTR [rax],eax
   140018b36:	add    BYTE PTR [rax],al
   140018b38:	adc    al,0x28
   140018b3a:	add    DWORD PTR [rax+0x1],eax
   140018b3d:	add    BYTE PTR [rax],al
   140018b3f:	add    BYTE PTR [rdx],bl
   140018b41:	sub    BYTE PTR [rcx],al
   140018b43:	rex add DWORD PTR [rax],eax
   140018b46:	add    BYTE PTR [rax],al
   140018b48:	and    BYTE PTR [rax],ch
   140018b4a:	add    DWORD PTR [rax+0x1],eax
   140018b4d:	add    BYTE PTR [rax],al
   140018b4f:	add    BYTE PTR [rsi],ah
   140018b51:	sub    BYTE PTR [rcx],al
   140018b53:	rex add DWORD PTR [rax],eax
   140018b56:	add    BYTE PTR [rax],al
   140018b58:	sub    al,0x28
   140018b5a:	add    DWORD PTR [rax+0x1],eax
   140018b5d:	add    BYTE PTR [rax],al
   140018b5f:	add    BYTE PTR [rdx],dh
   140018b61:	sub    BYTE PTR [rcx],al
   140018b63:	rex add DWORD PTR [rax],eax
	...
   140018b6e:	add    BYTE PTR [rax],al
   140018b70:	(bad)  
   140018b71:	fild   WORD PTR [rcx]
   140018b73:	rex add DWORD PTR [rax],eax
   140018b76:	add    BYTE PTR [rax],al
   140018b78:	mov    al,0xbd
   140018b7a:	add    BYTE PTR [rax+0x1],al
   140018b7d:	add    BYTE PTR [rax],al
   140018b7f:	add    BYTE PTR [rdx+0x1400121],ah
   140018b85:	add    BYTE PTR [rax],al
   140018b87:	add    BYTE PTR [rax+0x1400121],ch
   140018b8d:	add    BYTE PTR [rax],al
   140018b8f:	add    BYTE PTR [rsi+0x1400121],ch
   140018b95:	add    BYTE PTR [rax],al
   140018b97:	add    BYTE PTR [rcx+riz*1+0x14001],dh
   140018b9e:	add    BYTE PTR [rax],al
   140018ba0:	mov    edx,0x1400121
   140018ba5:	add    BYTE PTR [rax],al
   140018ba7:	add    BYTE PTR [rax+riz*1+0x1],ah
   140018bab:	rex add DWORD PTR [rax],eax
   140018bae:	add    BYTE PTR [rax],al
   140018bb0:	push   0x20
   140018bb2:	add    DWORD PTR [rax+0x1],eax
   140018bb5:	add    BYTE PTR [rax],al
   140018bb7:	add    al,al
   140018bb9:	and    DWORD PTR [rcx],eax
   140018bbb:	rex add DWORD PTR [rax],eax
   140018bbe:	add    BYTE PTR [rax],al
   140018bc0:	(bad)  
   140018bc1:	and    DWORD PTR [rcx],eax
   140018bc3:	rex add DWORD PTR [rax],eax
   140018bc6:	add    BYTE PTR [rax],al
   140018bc8:	int3   
   140018bc9:	and    DWORD PTR [rcx],eax
   140018bcb:	rex add DWORD PTR [rax],eax
   140018bce:	add    BYTE PTR [rax],al
   140018bd0:	shl    BYTE PTR [rcx],cl
   140018bd2:	add    DWORD PTR [rax+0x1],eax
   140018bd5:	add    BYTE PTR [rax],al
   140018bd7:	add    BYTE PTR [rax+0x1400120],cl
   140018bdd:	add    BYTE PTR [rax],al
   140018bdf:	add    BYTE PTR [rsi+0x1400120],cl
   140018be5:	add    BYTE PTR [rax],al
   140018be7:	add    BYTE PTR [rax+riz*1+0x14001],dl
   140018bee:	add    BYTE PTR [rax],al
   140018bf0:	(bad)  
   140018bf1:	and    BYTE PTR [rcx],al
   140018bf3:	rex add DWORD PTR [rax],eax
	...
   140018bfe:	add    BYTE PTR [rax],al
   140018c00:	enter  0x1de,0x40
   140018c04:	add    DWORD PTR [rax],eax
   140018c06:	add    BYTE PTR [rax],al
   140018c08:	pop    rdx
   140018c09:	(bad)  
   140018c0a:	add    DWORD PTR [rax+0x1],eax
   140018c0d:	add    BYTE PTR [rax],al
   140018c0f:	add    BYTE PTR [rax+0x27],ah
   140018c12:	add    DWORD PTR [rax+0x1],eax
   140018c15:	add    BYTE PTR [rax],al
   140018c17:	add    BYTE PTR [rsi+0x27],ah
   140018c1a:	add    DWORD PTR [rax+0x1],eax
   140018c1d:	add    BYTE PTR [rax],al
   140018c1f:	add    BYTE PTR [rax-0x43],al
   140018c22:	add    BYTE PTR [rax+0x1],al
   140018c25:	add    BYTE PTR [rax],al
   140018c27:	add    BYTE PTR [rdx+0x28],bh
   140018c2a:	add    DWORD PTR [rax+0x1],eax
   140018c2d:	add    BYTE PTR [rax],al
   140018c2f:	add    BYTE PTR [rax+0x1400128],al
   140018c35:	add    BYTE PTR [rax],al
   140018c37:	add    BYTE PTR [rax+rbp*1+0x1],bl
   140018c3b:	rex add DWORD PTR [rax],eax
   140018c3e:	add    BYTE PTR [rax],al
   140018c40:	and    ah,BYTE PTR [rax]
   140018c42:	add    DWORD PTR [rax+0x1],eax
   140018c45:	add    BYTE PTR [rax],al
   140018c47:	add    BYTE PTR [rax+0x28],ch
   140018c4a:	add    DWORD PTR [rax+0x1],eax
   140018c4d:	add    BYTE PTR [rax],al
   140018c4f:	add    BYTE PTR [rsi+0x28],ch
   140018c52:	add    DWORD PTR [rax+0x1],eax
   140018c55:	add    BYTE PTR [rax],al
   140018c57:	add    BYTE PTR [rax+rbp*1+0x1],dh
   140018c5b:	rex add DWORD PTR [rax],eax
   140018c5e:	add    BYTE PTR [rax],al
   140018c60:	mov    ah,BYTE PTR [rcx]
   140018c62:	add    DWORD PTR [rax+0x1],eax
   140018c65:	add    BYTE PTR [rax],al
   140018c67:	add    BYTE PTR [rax+0x1400121],dl
   140018c6d:	add    BYTE PTR [rax],al
   140018c6f:	add    BYTE PTR [rsi+0x1400121],dl
   140018c75:	add    BYTE PTR [rax],al
   140018c77:	add    BYTE PTR [rdx],bh
   140018c79:	and    BYTE PTR [rcx],al
   140018c7b:	rex add DWORD PTR [rax],eax
   140018c7e:	add    BYTE PTR [rax],al
   140018c80:	pushf  
   140018c81:	and    DWORD PTR [rcx],eax
   140018c83:	rex add DWORD PTR [rax],eax
   140018c86:	add    BYTE PTR [rax],al
   140018c88:	rex.XB jb 0x140018cf0
   140018c8b:	(bad)  
   140018c8c:	je     0x140018cf7
   140018c8e:	outs   dx,BYTE PTR ds:[rsi]
   140018c8f:	and    BYTE PTR [eax+ebp*2+0x65],dh
   140018c94:	and    BYTE PTR [rsi+0x65],ch
   140018c97:	ja     0x140018cb9
   140018c99:	push   rcx
   140018c9a:	je     0x140018cbc
   140018c9c:	push   0x20706c65
   140018ca1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6620
   140018ca8:	jb     0x140018d19
   140018caa:	ins    DWORD PTR es:[rdi],dx
   140018cab:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140018caf:	and    BYTE PTR [rdi+0x6c],ch
   140018cb2:	and    BYTE PTR fs:[rcx+0x44],al
   140018cb6:	push   rax
   140018cb7:	and    BYTE PTR [rsi+0x69],ah
   140018cba:	ins    BYTE PTR es:[rdi],dx
   140018cbb:	gs add BYTE PTR cs:[rax],al
   140018cbf:	add    BYTE PTR [rbx+0x6f],al
   140018cc2:	outs   dx,BYTE PTR ds:[rsi]
   140018cc3:	jbe    0x140018d2a
   140018cc5:	jb     0x140018d3b
   140018cc7:	imul   ebp,DWORD PTR [rsi+0x67],0x6c694620
   140018cce:	add    BYTE PTR gs:[rax+0x14001de],ah
   140018cd5:	add    BYTE PTR [rax],al
   140018cd7:	add    BYTE PTR [rax],dh
   140018cd9:	pop    QWORD PTR [rax]
   140018cdb:	rex add DWORD PTR [rax],eax
   140018cde:	add    BYTE PTR [rax],al
   140018ce0:	in     al,dx
   140018ce1:	(bad)  
   140018ce2:	add    DWORD PTR [rax+0x1],eax
   140018ce5:	add    BYTE PTR [rax],al
   140018ce7:	add    dl,dh
   140018ce9:	(bad)  
   140018cea:	add    DWORD PTR [rax+0x1],eax
   140018ced:	add    BYTE PTR [rax],al
   140018cef:	add    al,bh
   140018cf1:	(bad)  
   140018cf2:	add    DWORD PTR [rax+0x1],eax
   140018cf5:	add    BYTE PTR [rax],al
   140018cf7:	add    dh,bh
   140018cf9:	(bad)  
   140018cfa:	add    DWORD PTR [rax+0x1],eax
   140018cfd:	add    BYTE PTR [rax],al
   140018cff:	add    BYTE PTR [rax+riz*1],al
   140018d02:	add    DWORD PTR [rax+0x1],eax
   140018d05:	add    BYTE PTR [rax],al
   140018d07:	add    BYTE PTR [rdx],cl
   140018d09:	and    BYTE PTR [rcx],al
   140018d0b:	rex add DWORD PTR [rax],eax
   140018d0e:	add    BYTE PTR [rax],al
   140018d10:	or     dh,bl
   140018d12:	add    DWORD PTR [rax+0x1],eax
   140018d15:	add    BYTE PTR [rax],al
   140018d17:	add    BYTE PTR [rax+0x1e],dl
   140018d1a:	add    DWORD PTR [rax+0x1],eax
   140018d1d:	add    BYTE PTR [rax],al
   140018d1f:	add    BYTE PTR [rax],al
   140018d21:	(bad)  
   140018d22:	add    DWORD PTR [rax+0x1],eax
   140018d25:	add    BYTE PTR [rax],al
   140018d27:	add    al,dh
   140018d29:	sbb    BYTE PTR [rcx],al
   140018d2b:	rex add DWORD PTR [rax],eax
   140018d2e:	add    BYTE PTR [rax],al
   140018d30:	rex pop QWORD PTR [rax]
   140018d33:	rex add DWORD PTR [rax],eax
   140018d36:	add    BYTE PTR [rax],al
   140018d38:	out    0x22,al
   140018d3a:	add    DWORD PTR [rax+0x1],eax
   140018d3d:	add    BYTE PTR [rax],al
   140018d3f:	add    BYTE PTR [rax+0x1400128],al
   140018d45:	add    BYTE PTR [rax],al
   140018d47:	add    BYTE PTR [rax+rbp*1+0x1],bl
   140018d4b:	rex add DWORD PTR [rax],eax
   140018d4e:	add    BYTE PTR [rax],al
   140018d50:	(bad)  
   140018d51:	sub    BYTE PTR [rcx],al
   140018d53:	rex add DWORD PTR [rax],eax
   140018d56:	add    BYTE PTR [rax],al
   140018d58:	push   0x1400128
   140018d5d:	add    BYTE PTR [rax],al
   140018d5f:	add    BYTE PTR [rsi+0x28],ch
   140018d62:	add    DWORD PTR [rax+0x1],eax
   140018d65:	add    BYTE PTR [rax],al
   140018d67:	add    BYTE PTR [rax+rbp*1+0x1],dh
   140018d6b:	rex add DWORD PTR [rax],eax
   140018d6e:	add    BYTE PTR [rax],al
   140018d70:	or     al,0x21
   140018d72:	add    DWORD PTR [rax+0x1],eax
   140018d75:	add    BYTE PTR [rax],al
   140018d77:	add    ah,ch
   140018d79:	and    al,BYTE PTR [rcx]
   140018d7b:	rex add DWORD PTR [rax],eax
   140018d7e:	add    BYTE PTR [rax],al
   140018d80:	repnz and al,BYTE PTR [rcx]
   140018d83:	rex add DWORD PTR [rax],eax
   140018d86:	add    BYTE PTR [rax],al
   140018d88:	add    bl,BYTE PTR [rdi]
   140018d8a:	add    DWORD PTR [rax+0x1],eax
   140018d8d:	add    BYTE PTR [rax],al
   140018d8f:	add    BYTE PTR [rax],cl
   140018d91:	(bad)  
   140018d92:	add    DWORD PTR [rax+0x1],eax
   140018d95:	add    BYTE PTR [rax],al
   140018d97:	add    BYTE PTR [rsi],cl
   140018d99:	(bad)  
   140018d9a:	add    DWORD PTR [rax+0x1],eax
   140018d9d:	add    BYTE PTR [rax],al
   140018d9f:	add    BYTE PTR [rdi+rbx*1],dl
   140018da2:	add    DWORD PTR [rax+0x1],eax
   140018da5:	add    BYTE PTR [rax],al
   140018da7:	add    BYTE PTR [rdx],bl
   140018da9:	(bad)  
   140018daa:	add    DWORD PTR [rax+0x1],eax
   140018dad:	add    BYTE PTR [rax],al
   140018daf:	add    BYTE PTR [rax],ah
   140018db1:	(bad)  
   140018db2:	add    DWORD PTR [rax+0x1],eax
   140018db5:	add    BYTE PTR [rax],al
   140018db7:	add    BYTE PTR [rsi],ah
   140018db9:	(bad)  
   140018dba:	add    DWORD PTR [rax+0x1],eax
   140018dbd:	add    BYTE PTR [rax],al
   140018dbf:	add    al,bh
   140018dc1:	and    al,BYTE PTR [rcx]
   140018dc3:	rex add DWORD PTR [rax],eax
   140018dc6:	add    BYTE PTR [rax],al
   140018dc8:	xor    bl,BYTE PTR [rdi]
   140018dca:	add    DWORD PTR [rax+0x1],eax
   140018dcd:	add    BYTE PTR [rax],al
   140018dcf:	add    BYTE PTR [rax],bh
   140018dd1:	(bad)  
   140018dd2:	add    DWORD PTR [rax+0x1],eax
   140018dd5:	add    BYTE PTR [rax],al
   140018dd7:	add    BYTE PTR [rsi],bh
   140018dd9:	(bad)  
   140018dda:	add    DWORD PTR [rax+0x1],eax
   140018ddd:	add    BYTE PTR [rax],al
   140018ddf:	add    BYTE PTR [rdi+rbx*1+0x1],al
   140018de3:	rex add DWORD PTR [rax],eax
   140018de6:	add    BYTE PTR [rax],al
   140018de8:	rex.WX (bad) 
   140018dea:	add    DWORD PTR [rax+0x1],eax
   140018ded:	add    BYTE PTR [rax],al
   140018def:	add    dh,bh
   140018df1:	and    al,BYTE PTR [rcx]
   140018df3:	rex add DWORD PTR [rax],eax
   140018df6:	add    BYTE PTR [rax],al
   140018df8:	push   rsi
   140018df9:	(bad)  
   140018dfa:	add    DWORD PTR [rax+0x1],eax
   140018dfd:	add    BYTE PTR [rax],al
   140018dff:	add    BYTE PTR [rsi+0x21],cl
   140018e02:	add    DWORD PTR [rax+0x1],eax
   140018e05:	add    BYTE PTR [rax],al
   140018e07:	add    BYTE PTR [rcx+riz*1+0x1],dl
   140018e0b:	rex add DWORD PTR [rax],eax
   140018e0e:	add    BYTE PTR [rax],al
   140018e10:	ret    0x122
   140018e13:	rex add DWORD PTR [rax],eax
   140018e16:	add    BYTE PTR [rax],al
   140018e18:	outs   dx,BYTE PTR ds:[rsi]
   140018e19:	(bad)  
   140018e1a:	add    DWORD PTR [rax+0x1],eax
   140018e1d:	add    BYTE PTR [rax],al
   140018e1f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140018e23:	rex add DWORD PTR [rax],eax
   140018e26:	add    BYTE PTR [rax],al
   140018e28:	jp     0x140018e49
   140018e2a:	add    DWORD PTR [rax+0x1],eax
   140018e2d:	add    BYTE PTR [rax],al
   140018e2f:	add    BYTE PTR [rax+0x140011f],al
   140018e35:	add    BYTE PTR [rax],al
   140018e37:	add    BYTE PTR [rsi+0x140011f],al
   140018e3d:	add    BYTE PTR [rax],al
   140018e3f:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   140018e46:	add    BYTE PTR [rax],al
   140018e48:	(bad)  
   140018e49:	and    DWORD PTR [rcx],eax
   140018e4b:	rex add DWORD PTR [rax],eax
   140018e4e:	add    BYTE PTR [rax],al
   140018e50:	cwde   
   140018e51:	(bad)  
   140018e52:	add    DWORD PTR [rax+0x1],eax
   140018e55:	add    BYTE PTR [rax],al
   140018e57:	add    BYTE PTR [rsi+0x21],ah
   140018e5a:	add    DWORD PTR [rax+0x1],eax
   140018e5d:	add    BYTE PTR [rax],al
   140018e5f:	add    BYTE PTR [rdi+rbx*1+0x14001],ah
   140018e66:	add    BYTE PTR [rax],al
   140018e68:	stos   BYTE PTR es:[rdi],al
   140018e69:	(bad)  
   140018e6a:	add    DWORD PTR [rax+0x1],eax
   140018e6d:	add    BYTE PTR [rax],al
   140018e6f:	add    BYTE PTR [rax+0x140011f],dh
   140018e75:	add    BYTE PTR [rax],al
   140018e77:	add    BYTE PTR [rsi+0x140011f],dh
   140018e7d:	add    BYTE PTR [rax],al
   140018e7f:	add    BYTE PTR [rbx+riz*1],al
   140018e82:	add    DWORD PTR [rax+0x1],eax
   140018e85:	add    BYTE PTR [rax],al
   140018e87:	add    BYTE PTR [rdx],cl
   140018e89:	and    eax,DWORD PTR [rcx]
   140018e8b:	rex add DWORD PTR [rax],eax
   140018e8e:	add    BYTE PTR [rax],al
   140018e90:	sub    BYTE PTR [rsi],ah
   140018e92:	add    DWORD PTR [rax+0x1],eax
   140018e95:	add    BYTE PTR [rax],al
   140018e97:	add    BYTE PTR [rax],dl
   140018e99:	and    eax,DWORD PTR [rcx]
   140018e9b:	rex add DWORD PTR [rax],eax
   140018e9e:	add    BYTE PTR [rax],al
   140018ea0:	(bad)  
   140018ea1:	and    eax,DWORD PTR [rcx]
   140018ea3:	rex add DWORD PTR [rax],eax
   140018ea6:	add    BYTE PTR [rax],al
   140018ea8:	pop    rsp
   140018ea9:	fs cs pop rsp
   140018eac:	fs pop rsp
   140018eae:	cs pop rsp
   140018eb0:	add    BYTE PTR fs:[rax],al
   140018eb3:	add    BYTE PTR [rsi+0x61],ch
   140018eb6:	ins    DWORD PTR es:[rdi],dx
   140018eb7:	add    BYTE PTR gs:[rax],al
   140018eba:	add    BYTE PTR [rax],al
   140018ebc:	add    BYTE PTR [rax],al
   140018ebe:	add    BYTE PTR [rax],al
   140018ec0:	jo     0x140018f34
   140018ec2:	outs   dx,DWORD PTR ds:[rsi]
   140018ec3:	jo     0x140018f2a
   140018ec5:	jb     0x140018f3b
   140018ec7:	jns    0x140018ec9
   140018ec9:	add    BYTE PTR [rax],al
   140018ecb:	add    BYTE PTR [rsi],ch
   140018ecd:	(bad)  
   140018ece:	add    BYTE PTR [rax],al
   140018ed0:	movsxd esp,DWORD PTR fs:[rsi+0x0]
   140018ed4:	add    BYTE PTR [rax],al
   140018ed6:	add    BYTE PTR [rax],al
   140018ed8:	imul   esp,DWORD PTR [rbp+0x79],0x77
   140018edc:	outs   dx,DWORD PTR ds:[rsi]
   140018edd:	jb     0x140018f43
   140018edf:	add    BYTE PTR [rcx+rbp*2+0x74],dh
   140018ee3:	ins    BYTE PTR es:[rdi],dx
   140018ee4:	add    BYTE PTR gs:[rax],al
   140018ee7:	add    BYTE PTR [rdx+0x65],dh
   140018eea:	data16 add BYTE PTR [rax],al
   140018eed:	add    BYTE PTR [rax],al
   140018eef:	add    BYTE PTR [rbx+0x65],dh
   140018ef2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140018ef6:	outs   dx,BYTE PTR ds:[rsi]
   140018ef7:	add    BYTE PTR [rax+0x72],dh
   140018efa:	outs   dx,DWORD PTR ds:[rsi]
   140018efb:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x7361
   140018f02:	jae    0x140018f6d
   140018f04:	jae    0x140018f7a
   140018f06:	(bad)  
   140018f07:	outs   dx,BYTE PTR ds:[rsi]
   140018f08:	je     0x140018f6d
   140018f0a:	outs   dx,DWORD PTR ds:[rsi]
   140018f0b:	outs   dx,BYTE PTR ds:[rsi]
   140018f0c:	imul   sp,WORD PTR [rdi+0x0],0x6576
   140018f12:	jb     0x140018f87
   140018f14:	imul   ebp,DWORD PTR [rdi+0x6e],0x636f7400
   140018f1b:	add    BYTE PTR [rdx],bh
   140018f1d:	cmp    al,BYTE PTR [rax]
   140018f1f:	add    BYTE PTR [rcx+0x64],ch
   140018f22:	add    BYTE PTR [rax],al
   140018f24:	add    BYTE PTR [rax],al
   140018f26:	add    BYTE PTR [rax],al
   140018f28:	imul   esp,DWORD PTR [rbp+0x79],0x77
   140018f2c:	outs   dx,DWORD PTR ds:[rsi]
   140018f2d:	jb     0x140018f93
   140018f2f:	jae    0x140018f31
   140018f31:	add    BYTE PTR [rax],al
   140018f33:	add    BYTE PTR [rsi+0x69],ah
   140018f36:	ins    BYTE PTR es:[rdi],dx
   140018f37:	add    BYTE PTR gs:[rax],al
   140018f3a:	add    BYTE PTR [rax],al
   140018f3c:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x0
   140018f43:	add    BYTE PTR [rax],al
   140018f45:	add    BYTE PTR [rax],al
   140018f47:	add    BYTE PTR [rsi+0x69],ah
   140018f4a:	ins    BYTE PTR es:[rdi],dx
   140018f4b:	je     0x140018fb2
   140018f4d:	jb     0x140018f90
   140018f4f:	je     0x140018fc5
   140018f51:	jb     0x140018fbc
   140018f53:	(bad)  
   140018f54:	jne    0x140018fca
   140018f56:	add    BYTE PTR gs:[rsi+0x69],ah
   140018f5a:	ins    BYTE PTR es:[rdi],dx
   140018f5b:	je     0x140018fc2
   140018f5d:	jb     0x140018fb2
   140018f5f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140018f64:	outs   dx,BYTE PTR ds:[rsi]
   140018f65:	add    BYTE PTR [rax],al
   140018f67:	add    BYTE PTR [rbx+0x75],ah
   140018f6a:	jae    0x140018fe0
   140018f6c:	outs   dx,DWORD PTR ds:[rsi]
   140018f6d:	ins    DWORD PTR es:[rdi],dx
   140018f6e:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x72
   140018f77:	add    BYTE PTR [rsi+0x61],ch
   140018f7a:	ins    DWORD PTR es:[rdi],dx
   140018f7b:	gs jae 0x140018fee
   140018f7e:	(bad)  
   140018f7f:	movsxd esp,DWORD PTR [rbp+0x0]
   140018f82:	add    BYTE PTR [rax],al
   140018f84:	xor    DWORD PTR [rsi],ebp
   140018f86:	xor    BYTE PTR [rax],al
   140018f88:	push   rcx
   140018f89:	je     0x140018fd3
   140018f8b:	gs ins BYTE PTR es:[rdi],dx
   140018f8d:	jo     0x140018fdf
   140018f8f:	jb     0x140019000
   140018f91:	push   0x65
   140018f93:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140018f97:	add    BYTE PTR [rdx+0x65],dh
   140018f9a:	imul   esi,DWORD PTR [ebx+0x74],0x7265
   140018fa2:	add    BYTE PTR [rax],al
   140018fa4:	outs   dx,DWORD PTR ds:[rsi]
   140018fa5:	jne    0x14001901b
   140018fa7:	jo     0x14001901e
   140018fa9:	je     0x140018fab
   140018fab:	add    BYTE PTR [rcx+0x6e],ch
   140018fae:	jo     0x140019025
   140018fb0:	je     0x140018fb2
   140018fb2:	add    BYTE PTR [rax],al
   140018fb4:	add    BYTE PTR [rax],al
   140018fb6:	add    BYTE PTR [rax],al
   140018fb8:	outs   dx,BYTE PTR gs:[esi]
   140018fbb:	gs jb  0x14001901f
   140018fbe:	je     0x140019025
	...
   140018fc8:	outs   dx,DWORD PTR fs:[rsi]
   140018fca:	movsxd eax,DWORD PTR [rsi+0x69]
   140018fcd:	ins    BYTE PTR es:[rdi],dx
   140018fce:	gs jae 0x140018fd1
   140018fd1:	add    BYTE PTR [rax],al
   140018fd3:	add    BYTE PTR [rsi],ch
   140018fd5:	jno    0x14001903a
   140018fd7:	push   0x0
   140018fdc:	add    BYTE PTR [rax],al
   140018fde:	add    BYTE PTR [rax],al
   140018fe0:	movsxd esp,DWORD PTR [rcx+0x63]
   140018fe3:	push   0x72694465
   140018fe8:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140018fed:	jns    0x140018fef
   140018fef:	add    BYTE PTR [rsi],ch
   140018ff1:	add    BYTE PTR [rax],al
   140018ff3:	add    BYTE PTR [rax],al
   140018ff5:	add    BYTE PTR [rax],al
   140018ff7:	add    BYTE PTR [rcx+0x62],ah
   140018ffa:	outs   dx,DWORD PTR ds:[rsi]
   140018ffb:	jne    0x140019071
   140018ffd:	imul   r12d,DWORD PTR [rcx+0x6c],0x676f
   140019005:	add    BYTE PTR [rax],al
   140019007:	add    BYTE PTR [rcx+0x62],ah
   14001900a:	outs   dx,DWORD PTR ds:[rsi]
   14001900b:	jne    0x140019081
   14001900d:	jne    0x140019081
   14001900f:	ins    BYTE PTR es:[rdi],dx
   140019010:	add    BYTE PTR [rax],al
   140019012:	add    BYTE PTR [rax],al
   140019014:	je     0x14001907b
   140019016:	js     0x14001908c
	...
   140019020:	(bad)  
   140019021:	(bad)  
   140019022:	outs   dx,DWORD PTR ds:[rsi]
   140019023:	jne    0x140019099
   140019025:	rex.WRB
   140019026:	outs   dx,BYTE PTR gs:[rsi]
   140019028:	jne    0x14001907e
   14001902a:	gs js  0x1400190a1
   14001902d:	add    BYTE PTR [rax],al
   14001902f:	add    BYTE PTR [rcx+0x62],ah
   140019032:	outs   dx,DWORD PTR ds:[rsi]
   140019033:	jne    0x1400190a9
   140019035:	ins    DWORD PTR es:[rdi],dx
   140019036:	outs   dx,BYTE PTR gs:[rsi]
   140019038:	jne    0x1400190ae
   14001903a:	gs js  0x1400190b1
   14001903d:	add    BYTE PTR [rax],al
   14001903f:	add    BYTE PTR [rbx+0x74],dh
   140019042:	(bad)  
   140019043:	jb     0x1400190b9
   140019045:	push   rax
   140019046:	(bad)  
   140019047:	add    BYTE PTR gs:[eax],al
   14001904b:	add    BYTE PTR [rax],al
   14001904d:	add    BYTE PTR [rax],al
   14001904f:	add    BYTE PTR [rbx+0x74],dh
   140019052:	(bad)  
   140019053:	jb     0x1400190c9
   140019055:	jo     0x1400190b8
   140019057:	add    BYTE PTR gs:[eax],al
   14001905b:	add    BYTE PTR [rax],al
   14001905d:	add    BYTE PTR [rax],al
   14001905f:	add    BYTE PTR [rcx+0x70],ah
   140019062:	jo     0x1400190d0
   140019064:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001906b:	movsxd rbp,DWORD PTR [r15+0x6e]
   14001906f:	add    BYTE PTR [rcx+0x70],ah
   140019072:	jo     0x1400190e0
   140019074:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001907b:	imul   esp,DWORD PTR [rbx+0x6f],0x7361006e
   140019082:	jae    0x1400190ed
   140019084:	jae    0x1400190fa
   140019086:	(bad)  
   140019087:	outs   dx,BYTE PTR ds:[rsi]
   140019088:	je     0x14001908a
   14001908a:	add    BYTE PTR [rax],al
   14001908c:	add    BYTE PTR [rax],al
   14001908e:	add    BYTE PTR [rax],al
   140019090:	push   rcx
   140019091:	rex.W
   140019092:	gs ins BYTE PTR es:[rdi],dx
   140019094:	jo     0x1400190d9
   140019096:	outs   dx,DWORD PTR ds:[rsi]
   140019097:	ins    BYTE PTR es:[rdi],dx
   140019098:	ins    BYTE PTR es:[rdi],dx
   140019099:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001909e:	outs   dx,BYTE PTR ds:[rsi]
   14001909f:	push   rax
   1400190a0:	jb     0x140019111
   1400190a2:	push   0x65
   1400190a4:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   1400190a8:	cmp    al,0x63
   1400190aa:	outs   dx,BYTE PTR gs:[rsi]
   1400190ac:	je     0x140019113
   1400190ae:	jb     0x1400190ee
   1400190b0:	cmp    al,0x62
   1400190b2:	ds push rdi
   1400190b4:	imul   edi,DWORD PTR [rdx+0x61],0x41206472
   1400190bb:	jae    0x140019130
   1400190bd:	imul   esi,DWORD PTR [rbx+0x74],0x3c746e61
   1400190c4:	(bad)  
   1400190c5:	(bad)  
   1400190c6:	ds cmp al,0x2f
   1400190c9:	movsxd esp,DWORD PTR [rbp+0x6e]
   1400190cc:	je     0x140019133
   1400190ce:	jb     0x14001910e
	...
   1400190e0:	xor    cl,ah
   1400190e2:	add    DWORD PTR [rax+0x1],eax
   1400190e5:	add    BYTE PTR [rax],al
   1400190e7:	add    BYTE PTR [rax+0x140010f],ah
   1400190ed:	add    BYTE PTR [rax],al
   1400190ef:	add    ah,ch
   1400190f1:	(bad)  
   1400190f2:	add    DWORD PTR [rax+0x1],eax
   1400190f5:	add    BYTE PTR [rax],al
   1400190f7:	add    dl,dh
   1400190f9:	(bad)  
   1400190fa:	add    DWORD PTR [rax+0x1],eax
   1400190fd:	add    BYTE PTR [rax],al
   1400190ff:	add    al,bh
   140019101:	(bad)  
   140019102:	add    DWORD PTR [rax+0x1],eax
   140019105:	add    BYTE PTR [rax],al
   140019107:	add    dh,bh
   140019109:	(bad)  
   14001910a:	add    DWORD PTR [rax+0x1],eax
   14001910d:	add    BYTE PTR [rax],al
   14001910f:	add    BYTE PTR [rax+riz*1],al
   140019112:	add    DWORD PTR [rax+0x1],eax
   140019115:	add    BYTE PTR [rax],al
   140019117:	add    BYTE PTR [rdx],cl
   140019119:	and    BYTE PTR [rcx],al
   14001911b:	rex add DWORD PTR [rax],eax
   14001911e:	add    BYTE PTR [rax],al
   140019120:	or     cl,ah
   140019122:	add    DWORD PTR [rax+0x1],eax
   140019125:	add    BYTE PTR [rax],al
   140019127:	add    BYTE PTR [rax],bh
   140019129:	sub    BYTE PTR [rcx],al
   14001912b:	rex add DWORD PTR [rax],eax
   14001912e:	add    BYTE PTR [rax],al
   140019130:	sub    BYTE PTR ds:[rcx],al
   140019133:	rex add DWORD PTR [rax],eax
   140019136:	add    BYTE PTR [rax],al
   140019138:	sub    BYTE PTR [rcx],r8b
   14001913b:	rex add DWORD PTR [rax],eax
   14001913e:	add    BYTE PTR [rax],al
   140019140:	(bad)  
   140019141:	sgdt   [rax+0x1]
   140019145:	add    BYTE PTR [rax],al
   140019147:	add    BYTE PTR [rdx+0x28],cl
   14001914a:	add    DWORD PTR [rax+0x1],eax
   14001914d:	add    BYTE PTR [rax],al
   14001914f:	add    BYTE PTR [rax+0x1400128],al
   140019155:	add    BYTE PTR [rax],al
   140019157:	add    BYTE PTR [rax+rbp*1+0x1],bl
   14001915b:	rex add DWORD PTR [rax],eax
   14001915e:	add    BYTE PTR [rax],al
   140019160:	(bad)  
   140019161:	sub    BYTE PTR [rcx],al
   140019163:	rex add DWORD PTR [rax],eax
   140019166:	add    BYTE PTR [rax],al
   140019168:	push   0x1400128
   14001916d:	add    BYTE PTR [rax],al
   14001916f:	add    BYTE PTR [rsi+0x28],ch
   140019172:	add    DWORD PTR [rax+0x1],eax
   140019175:	add    BYTE PTR [rax],al
   140019177:	add    BYTE PTR [rax+rbp*1+0x1],dh
   14001917b:	rex add DWORD PTR [rax],eax
   14001917e:	add    BYTE PTR [rax],al
   140019180:	or     al,0x21
   140019182:	add    DWORD PTR [rax+0x1],eax
   140019185:	add    BYTE PTR [rax],al
   140019187:	add    BYTE PTR [rax+0x28],dl
   14001918a:	add    DWORD PTR [rax+0x1],eax
   14001918d:	add    BYTE PTR [rax],al
   14001918f:	add    dl,dh
   140019191:	and    al,BYTE PTR [rcx]
   140019193:	rex add DWORD PTR [rax],eax
   140019196:	add    BYTE PTR [rax],al
   140019198:	add    bl,BYTE PTR [rdi]
   14001919a:	add    DWORD PTR [rax+0x1],eax
   14001919d:	add    BYTE PTR [rax],al
   14001919f:	add    BYTE PTR [rax],cl
   1400191a1:	(bad)  
   1400191a2:	add    DWORD PTR [rax+0x1],eax
   1400191a5:	add    BYTE PTR [rax],al
   1400191a7:	add    BYTE PTR [rsi],cl
   1400191a9:	(bad)  
   1400191aa:	add    DWORD PTR [rax+0x1],eax
   1400191ad:	add    BYTE PTR [rax],al
   1400191af:	add    BYTE PTR [rdi+rbx*1],dl
   1400191b2:	add    DWORD PTR [rax+0x1],eax
   1400191b5:	add    BYTE PTR [rax],al
   1400191b7:	add    BYTE PTR [rdx],bl
   1400191b9:	(bad)  
   1400191ba:	add    DWORD PTR [rax+0x1],eax
   1400191bd:	add    BYTE PTR [rax],al
   1400191bf:	add    BYTE PTR [rax],ah
   1400191c1:	(bad)  
   1400191c2:	add    DWORD PTR [rax+0x1],eax
   1400191c5:	add    BYTE PTR [rax],al
   1400191c7:	add    BYTE PTR [rsi],ah
   1400191c9:	(bad)  
   1400191ca:	add    DWORD PTR [rax+0x1],eax
   1400191cd:	add    BYTE PTR [rax],al
   1400191cf:	add    al,bh
   1400191d1:	and    al,BYTE PTR [rcx]
   1400191d3:	rex add DWORD PTR [rax],eax
   1400191d6:	add    BYTE PTR [rax],al
   1400191d8:	xor    bl,BYTE PTR [rdi]
   1400191da:	add    DWORD PTR [rax+0x1],eax
   1400191dd:	add    BYTE PTR [rax],al
   1400191df:	add    BYTE PTR [rax],bh
   1400191e1:	(bad)  
   1400191e2:	add    DWORD PTR [rax+0x1],eax
   1400191e5:	add    BYTE PTR [rax],al
   1400191e7:	add    BYTE PTR [rsi],bh
   1400191e9:	(bad)  
   1400191ea:	add    DWORD PTR [rax+0x1],eax
   1400191ed:	add    BYTE PTR [rax],al
   1400191ef:	add    BYTE PTR [rdi+rbx*1+0x1],al
   1400191f3:	rex add DWORD PTR [rax],eax
   1400191f6:	add    BYTE PTR [rax],al
   1400191f8:	rex.WX (bad) 
   1400191fa:	add    DWORD PTR [rax+0x1],eax
   1400191fd:	add    BYTE PTR [rax],al
   1400191ff:	add    BYTE PTR [rsi+0x28],dl
   140019202:	add    DWORD PTR [rax+0x1],eax
   140019205:	add    BYTE PTR [rax],al
   140019207:	add    BYTE PTR [rsi+0x1f],dl
   14001920a:	add    DWORD PTR [rax+0x1],eax
   14001920d:	add    BYTE PTR [rax],al
   14001920f:	add    BYTE PTR [rsi+0x21],cl
   140019212:	add    DWORD PTR [rax+0x1],eax
   140019215:	add    BYTE PTR [rax],al
   140019217:	add    BYTE PTR [rcx+riz*1+0x1],dl
   14001921b:	rex add DWORD PTR [rax],eax
   14001921e:	add    BYTE PTR [rax],al
   140019220:	ret    0x122
   140019223:	rex add DWORD PTR [rax],eax
   140019226:	add    BYTE PTR [rax],al
   140019228:	outs   dx,BYTE PTR ds:[rsi]
   140019229:	(bad)  
   14001922a:	add    DWORD PTR [rax+0x1],eax
   14001922d:	add    BYTE PTR [rax],al
   14001922f:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   140019233:	rex add DWORD PTR [rax],eax
   140019236:	add    BYTE PTR [rax],al
   140019238:	jp     0x140019259
   14001923a:	add    DWORD PTR [rax+0x1],eax
   14001923d:	add    BYTE PTR [rax],al
   14001923f:	add    BYTE PTR [rax+0x140011f],al
   140019245:	add    BYTE PTR [rax],al
   140019247:	add    BYTE PTR [rsi+0x140011f],al
   14001924d:	add    BYTE PTR [rax],al
   14001924f:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   140019256:	add    BYTE PTR [rax],al
   140019258:	(bad)  
   140019259:	and    DWORD PTR [rcx],eax
   14001925b:	rex add DWORD PTR [rax],eax
   14001925e:	add    BYTE PTR [rax],al
   140019260:	cwde   
   140019261:	(bad)  
   140019262:	add    DWORD PTR [rax+0x1],eax
   140019265:	add    BYTE PTR [rax],al
   140019267:	add    BYTE PTR [rsi+0x21],ah
   14001926a:	add    DWORD PTR [rax+0x1],eax
   14001926d:	add    BYTE PTR [rax],al
   14001926f:	add    ah,dh
   140019271:	and    eax,DWORD PTR [rcx]
   140019273:	rex add DWORD PTR [rax],eax
   140019276:	add    BYTE PTR [rax],al
   140019278:	stos   BYTE PTR es:[rdi],al
   140019279:	(bad)  
   14001927a:	add    DWORD PTR [rax+0x1],eax
   14001927d:	add    BYTE PTR [rax],al
   14001927f:	add    BYTE PTR [rax+0x140011f],dh
   140019285:	add    BYTE PTR [rax],al
   140019287:	add    BYTE PTR [rsi+0x140011f],dh
   14001928d:	add    BYTE PTR [rax],al
   14001928f:	add    al,ah
   140019291:	loopne 0x140019294
   140019293:	rex add DWORD PTR [rax],eax
   140019296:	add    BYTE PTR [rax],al
   140019298:	nop
   140019299:	sgdt   [rax+0x1]
   14001929d:	add    BYTE PTR [rax],al
   14001929f:	add    ah,ch
   1400192a1:	(bad)  
   1400192a2:	add    DWORD PTR [rax+0x1],eax
   1400192a5:	add    BYTE PTR [rax],al
   1400192a7:	add    dl,dh
   1400192a9:	(bad)  
   1400192aa:	add    DWORD PTR [rax+0x1],eax
   1400192ad:	add    BYTE PTR [rax],al
   1400192af:	add    al,bh
   1400192b1:	(bad)  
   1400192b2:	add    DWORD PTR [rax+0x1],eax
   1400192b5:	add    BYTE PTR [rax],al
   1400192b7:	add    dh,bh
   1400192b9:	(bad)  
   1400192ba:	add    DWORD PTR [rax+0x1],eax
   1400192bd:	add    BYTE PTR [rax],al
   1400192bf:	add    BYTE PTR [rax+riz*1],al
   1400192c2:	add    DWORD PTR [rax+0x1],eax
   1400192c5:	add    BYTE PTR [rax],al
   1400192c7:	add    BYTE PTR [rdx],cl
   1400192c9:	and    BYTE PTR [rcx],al
   1400192cb:	rex add DWORD PTR [rax],eax
   1400192ce:	add    BYTE PTR [rax],al
   1400192d0:	push   rax
   1400192d1:	loopne 0x1400192d4
   1400192d3:	rex add DWORD PTR [rax],eax
   1400192d6:	add    BYTE PTR [rax],al
   1400192d8:	rcr    BYTE PTR [rsi],1
   1400192da:	add    DWORD PTR [rax+0x1],eax
   1400192dd:	add    BYTE PTR [rax],al
   1400192df:	add    BYTE PTR [rax+0x1e],dh
   1400192e2:	add    DWORD PTR [rax+0x1],eax
   1400192e5:	add    BYTE PTR [rax],al
   1400192e7:	add    al,al
   1400192e9:	(bad)  
   1400192ea:	add    DWORD PTR [rax+0x1],eax
   1400192ed:	add    BYTE PTR [rax],al
   1400192ef:	add    BYTE PTR [rax+0x140010f],dh
   1400192f5:	add    BYTE PTR [rax],al
   1400192f7:	add    dh,ah
   1400192f9:	and    al,BYTE PTR [rcx]
   1400192fb:	rex add DWORD PTR [rax],eax
   1400192fe:	add    BYTE PTR [rax],al
   140019300:	sub    BYTE PTR [rax],0x1
   140019303:	rex add DWORD PTR [rax],eax
   140019306:	add    BYTE PTR [rax],al
   140019308:	pop    rsp
   140019309:	sub    BYTE PTR [rcx],al
   14001930b:	rex add DWORD PTR [rax],eax
   14001930e:	add    BYTE PTR [rax],al
   140019310:	(bad)  
   140019311:	sub    BYTE PTR [rcx],al
   140019313:	rex add DWORD PTR [rax],eax
   140019316:	add    BYTE PTR [rax],al
   140019318:	push   0x1400128
   14001931d:	add    BYTE PTR [rax],al
   14001931f:	add    BYTE PTR [rsi+0x28],ch
   140019322:	add    DWORD PTR [rax+0x1],eax
   140019325:	add    BYTE PTR [rax],al
   140019327:	add    BYTE PTR [rax+rbp*1+0x1],dh
   14001932b:	rex add DWORD PTR [rax],eax
   14001932e:	add    BYTE PTR [rax],al
   140019330:	or     al,0x21
   140019332:	add    DWORD PTR [rax+0x1],eax
   140019335:	add    BYTE PTR [rax],al
   140019337:	add    ah,ch
   140019339:	and    al,BYTE PTR [rcx]
   14001933b:	rex add DWORD PTR [rax],eax
   14001933e:	add    BYTE PTR [rax],al
   140019340:	repnz and al,BYTE PTR [rcx]
   140019343:	rex add DWORD PTR [rax],eax
   140019346:	add    BYTE PTR [rax],al
   140019348:	add    bl,BYTE PTR [rdi]
   14001934a:	add    DWORD PTR [rax+0x1],eax
   14001934d:	add    BYTE PTR [rax],al
   14001934f:	add    BYTE PTR [rax],cl
   140019351:	(bad)  
   140019352:	add    DWORD PTR [rax+0x1],eax
   140019355:	add    BYTE PTR [rax],al
   140019357:	add    BYTE PTR [rsi],cl
   140019359:	(bad)  
   14001935a:	add    DWORD PTR [rax+0x1],eax
   14001935d:	add    BYTE PTR [rax],al
   14001935f:	add    BYTE PTR [rdi+rbx*1],dl
   140019362:	add    DWORD PTR [rax+0x1],eax
   140019365:	add    BYTE PTR [rax],al
   140019367:	add    BYTE PTR [rdx],bl
   140019369:	(bad)  
   14001936a:	add    DWORD PTR [rax+0x1],eax
   14001936d:	add    BYTE PTR [rax],al
   14001936f:	add    BYTE PTR [rax],ah
   140019371:	(bad)  
   140019372:	add    DWORD PTR [rax+0x1],eax
   140019375:	add    BYTE PTR [rax],al
   140019377:	add    BYTE PTR [rsi],ah
   140019379:	(bad)  
   14001937a:	add    DWORD PTR [rax+0x1],eax
   14001937d:	add    BYTE PTR [rax],al
   14001937f:	add    al,bh
   140019381:	and    al,BYTE PTR [rcx]
   140019383:	rex add DWORD PTR [rax],eax
   140019386:	add    BYTE PTR [rax],al
   140019388:	xor    bl,BYTE PTR [rdi]
   14001938a:	add    DWORD PTR [rax+0x1],eax
   14001938d:	add    BYTE PTR [rax],al
   14001938f:	add    BYTE PTR [rax],bh
   140019391:	(bad)  
   140019392:	add    DWORD PTR [rax+0x1],eax
   140019395:	add    BYTE PTR [rax],al
   140019397:	add    BYTE PTR [rsi],bh
   140019399:	(bad)  
   14001939a:	add    DWORD PTR [rax+0x1],eax
   14001939d:	add    BYTE PTR [rax],al
   14001939f:	add    BYTE PTR [rdi+rbx*1+0x1],al
   1400193a3:	rex add DWORD PTR [rax],eax
   1400193a6:	add    BYTE PTR [rax],al
   1400193a8:	rex.WX (bad) 
   1400193aa:	add    DWORD PTR [rax+0x1],eax
   1400193ad:	add    BYTE PTR [rax],al
   1400193af:	add    dh,bh
   1400193b1:	and    al,BYTE PTR [rcx]
   1400193b3:	rex add DWORD PTR [rax],eax
   1400193b6:	add    BYTE PTR [rax],al
   1400193b8:	push   rsi
   1400193b9:	(bad)  
   1400193ba:	add    DWORD PTR [rax+0x1],eax
   1400193bd:	add    BYTE PTR [rax],al
   1400193bf:	add    BYTE PTR [rsi+0x21],cl
   1400193c2:	add    DWORD PTR [rax+0x1],eax
   1400193c5:	add    BYTE PTR [rax],al
   1400193c7:	add    BYTE PTR [rcx+riz*1+0x1],dl
   1400193cb:	rex add DWORD PTR [rax],eax
   1400193ce:	add    BYTE PTR [rax],al
   1400193d0:	ret    0x122
   1400193d3:	rex add DWORD PTR [rax],eax
   1400193d6:	add    BYTE PTR [rax],al
   1400193d8:	outs   dx,BYTE PTR ds:[rsi]
   1400193d9:	(bad)  
   1400193da:	add    DWORD PTR [rax+0x1],eax
   1400193dd:	add    BYTE PTR [rax],al
   1400193df:	add    BYTE PTR [rdi+rbx*1+0x1],dh
   1400193e3:	rex add DWORD PTR [rax],eax
   1400193e6:	add    BYTE PTR [rax],al
   1400193e8:	jp     0x140019409
   1400193ea:	add    DWORD PTR [rax+0x1],eax
   1400193ed:	add    BYTE PTR [rax],al
   1400193ef:	add    BYTE PTR [rax+0x140011f],al
   1400193f5:	add    BYTE PTR [rax],al
   1400193f7:	add    BYTE PTR [rsi+0x140011f],al
   1400193fd:	add    BYTE PTR [rax],al
   1400193ff:	add    BYTE PTR [rdi+rbx*1+0x14001],cl
   140019406:	add    BYTE PTR [rax],al
   140019408:	(bad)  
   140019409:	and    DWORD PTR [rcx],eax
   14001940b:	rex add DWORD PTR [rax],eax
   14001940e:	add    BYTE PTR [rax],al
   140019410:	cwde   
   140019411:	(bad)  
   140019412:	add    DWORD PTR [rax+0x1],eax
   140019415:	add    BYTE PTR [rax],al
   140019417:	add    BYTE PTR [rsi+0x21],ah
   14001941a:	add    DWORD PTR [rax+0x1],eax
   14001941d:	add    BYTE PTR [rax],al
   14001941f:	add    BYTE PTR [rdi+rbx*1+0x14001],ah
   140019426:	add    BYTE PTR [rax],al
   140019428:	stos   BYTE PTR es:[rdi],al
   140019429:	(bad)  
   14001942a:	add    DWORD PTR [rax+0x1],eax
   14001942d:	add    BYTE PTR [rax],al
   14001942f:	add    BYTE PTR [rax+0x140011f],dh
   140019435:	add    BYTE PTR [rax],al
   140019437:	add    BYTE PTR [rsi+0x140011f],dh
   14001943d:	add    BYTE PTR [rax],al
   14001943f:	add    BYTE PTR [rdx],bh
   140019441:	(bad)  
   140019442:	jno    0x1400194b8
   140019444:	sub    eax,0x6a6f7270
   140019449:	movsxd esi,DWORD PTR gs:[rsi+rbp*1+0x6f]
   14001944e:	jb     0x1400194b7
   140019450:	(bad)  
   140019451:	jno    0x1400194bb
   140019453:	gs ins BYTE PTR es:[rdi],dx
   140019455:	jo     0x1400194ba
   140019457:	outs   dx,DWORD PTR ds:[rsi]
   140019458:	outs   dx,BYTE PTR ds:[rsi]
   140019459:	jbe    0x1400194c0
   14001945b:	jb     0x1400194d1
   14001945d:	gs jb  0x14001948f
   140019460:	outs   dx,DWORD PTR fs:[rsi]
   140019462:	movsxd ebp,DWORD PTR [rdi]
   140019464:	and    eax,0x74682e31
   140019469:	ins    DWORD PTR es:[rdi],dx
   14001946a:	ins    BYTE PTR es:[rdi],dx
   14001946b:	add    BYTE PTR [rax],al
   14001946d:	add    BYTE PTR [rax],al
   14001946f:	add    BYTE PTR [rcx+0x74],dh
   140019472:	pop    rdi
   140019473:	push   0x5f706c65
   140019478:	add    BYTE PTR [rax],al
   14001947a:	add    BYTE PTR [rax],al
   14001947c:	jno    0x1400194f2
   14001947e:	pop    rdi
   14001947f:	add    BYTE PTR [rcx+0x73],ah
   140019482:	jae    0x1400194ed
   140019484:	jae    0x1400194fa
   140019486:	(bad)  
   140019487:	outs   dx,BYTE PTR ds:[rsi]
   140019488:	je     0x1400194e9
	...
   140019492:	add    eax,0x4e508962
   140019497:	rex.RXB or eax,0xa1a0a
   14001949d:	add    BYTE PTR [rax],al
   14001949f:	or     eax,0x52444849
   1400194a4:	add    BYTE PTR [rax],al
   1400194a6:	add    BYTE PTR [rax],ah
   1400194a8:	add    BYTE PTR [rax],al
   1400194aa:	add    BYTE PTR [rax],ah
   1400194ac:	or     BYTE PTR [rbx],al
   1400194ae:	add    BYTE PTR [rax],al
   1400194b0:	add    BYTE PTR [rsp+riz*4-0x76],al
   1400194b4:	mov    BYTE PTR [rax],0x0
   1400194b7:	add    al,ah
   1400194b9:	push   rax
   1400194ba:	rex.WR push rsp
   1400194bc:	rex.RB (bad) 
   1400194be:	(bad)  
   1400194bf:	call   QWORD PTR [rbp-0x56]
   1400194c2:	push   rbp
   1400194c3:	cmp    BYTE PTR [rdi-0xc0],0x74
   1400194ca:	mov    ecx,0xffffff46
   1400194cf:	jbe    0x140019495
   1400194d1:	cmp    edi,edi
   1400194d3:	(bad)  
   1400194d4:	inc    DWORD PTR [rax-0xb93b]
   1400194da:	push   rsi
   1400194dc:	div    dh
   1400194de:	(bad)  
   1400194df:	(bad)  
   1400194e0:	(bad)  
   1400194e1:	(bad)  
   1400194e2:	(bad)  
   1400194e3:	(bad)  
   1400194e4:	in     al,dx
   1400194e5:	repz repz stc 
   1400194e8:	stc    
   1400194e9:	stc    
   1400194ea:	jl     0x1400194ad
   1400194ec:	rex.RB add r11b,0x43
   1400194f0:	stc    
   1400194f1:	stc    
   1400194f2:	stc    
   1400194f3:	jl     0x1400194b9
   1400194f5:	rex.B cli 
   1400194f7:	cli    
   1400194f8:	cli    
   1400194f9:	idiv   dl
   1400194fb:	cli    
   1400194fc:	jge    0x1400194c1
   1400194fe:	add    r13b,0x40
   140019502:	jge    0x1400194c7
   140019504:	rex.B
   140019505:	lock repz div edi
   140019509:	sti    
   14001950a:	sti    
   14001950b:	jge    0x1400194d0
   14001950d:	rex.B in al,0xeb
   140019510:	out    dx,al
   140019511:	jle    0x1400194d5
   140019513:	add    r10b,0x43
   140019517:	jle    0x1400194dc
   140019519:	rex.X add cl,0x41
   14001951d:	add    dl,0x43
   140019520:	jge    0x1400194e3
   140019522:	rex.B jle 0x1400194e8
   140019525:	rex.X jle 0x1400194eb
   140019528:	rex.X (bad) 
   14001952b:	out    0x7e,eax
   14001952d:	ret    
   14001952e:	rex.X jge 0x1400194f2
   140019531:	rex.X fsub st,st(2)
   140019534:	out    0xd5,al
   140019536:	loopne 0x14001951d
   140019538:	jle    0x1400194fb
   14001953a:	rex.X jg 0x140019500
   14001953d:	rex.X jg 0x140019502
   140019540:	rex.X rcr sil,cl
   140019543:	jrcxz  0x140019514
   140019545:	fndisi(8087 only) 
   140019547:	rcr    dh,cl
   140019549:	jrcxz  0x1400195ca
   14001954b:	ret    0xcf42
   14001954e:	fsubr  st(1),st
   140019550:	(bad)  
   140019551:	(bad)  
   140019553:	iret   
   140019554:	fndisi(8087 only) 
   140019556:	retf   0xded8
   140019559:	jle    0x14001951d
   14001955b:	rex.X leave 
   14001955d:	xlat   BYTE PTR ds:[rbx]
   14001955e:	fnstsw WORD PTR [rdi-0x3e]
   140019561:	rex.X int3 
   140019563:	(bad)  
   140019565:	retf   0xddd7
   140019568:	retf   
   140019569:	(bad)  
   14001956b:	int3   
   14001956c:	(bad)  
   14001956e:	jle    0x140019531
   140019570:	rex.X retf 
   140019572:	fcomp  st(6)
   140019574:	jge    0x140019538
   140019576:	rex.X (bad) 
   140019578:	fndisi(8087 only) 
   14001957a:	jge    0x14001953e
   14001957c:	rex.X scas al,BYTE PTR es:[rdi]
   14001957e:	xlat   BYTE PTR ds:[rbx]
   14001957f:	nop
   140019580:	mov    edi,0xd8cad7d0
   140019585:	faddp  st(2),st
   140019587:	rcr    cl,cl
   140019589:	rcl    al,0xd7
   14001958c:	mov    esi,0xc17ed6cf
   140019591:	rex.XB retf 0xddd7
   140019595:	retf   0xded8
   140019598:	jle    0x14001955c
   14001959a:	rex.X ret 
   14001959c:	rcr    cl,cl
   14001959e:	jle    0x140019562
   1400195a0:	rex.X jle 0x140019565
   1400195a3:	rex.X retf 0xded8
   1400195a7:	jle    0x14001956b
   1400195a9:	rex.X retf 
   1400195ab:	fcomp  st(7)
   1400195ad:	ret    
   1400195ae:	rcr    ecx,cl
   1400195b0:	enter  0xdcd6,0x7e
   1400195b4:	ret    0xc442
   1400195b7:	rcr    ebx,cl
   1400195b9:	leave  
   1400195ba:	xlat   BYTE PTR ds:[rbx]
   1400195bb:	fnstsw WORD PTR [rsi-0x3e]
   1400195be:	rex.X (bad) 
   1400195c0:	(bad)  
   1400195c1:	fcmovne st,st(1)
   1400195c3:	xlat   BYTE PTR ds:[rbx]
   1400195c4:	fnstsw WORD PTR [rsi-0x3e]
   1400195c7:	rex.X
   1400195c8:	fwait
   1400195c9:	shr    BYTE PTR [rbp-0x4c],1
   1400195cc:	enter  0x7ed1,0xc2
   1400195d0:	rex.X jle 0x140019596
   1400195d3:	rex.X mov esp,0xd0bfd6cd
   1400195d9:	fadd   st,st(7)
   1400195db:	(bad)  
   1400195dc:	fdiv   QWORD PTR [rdi+rax*8-0x2b33452f]
   1400195e3:	rcl    al,0xd8
   1400195e6:	test   al,0xbf
   1400195e8:	retf   0xc27e
   1400195eb:	rex.X test al,0xbe
   1400195ee:	retf   0xc27e
   1400195f1:	rex.X jle 0x1400195b6
   1400195f4:	rex.X jle 0x1400195b9
   1400195f7:	rex.X jle 0x1400195bc
   1400195fa:	rex.X (bad) 
   1400195fc:	(bad)  
   1400195fd:	fdivp  st(7),st
   1400195ff:	(bad)  
   140019600:	(bad)  
   140019601:	jle    0x1400195c5
   140019603:	rex.X (bad) 
   140019606:	jmp    0x140019606
   140019608:	(bad)  
   140019609:	(bad)  
   14001960a:	jg     0x1400195ce
   14001960c:	rex.XB fcomip st,st(0)
   14001960f:	ror    BYTE PTR [rdx-0x3446ab38],1
   140019615:	(bad)  
   140019616:	rcl    cl,0xda
   140019619:	(bad)  
   14001961a:	loopne 0x140019603
   14001961c:	mov    ecx,eax
   14001961e:	push   rbp
   14001961f:	rcr    ch,1
   140019621:	in     eax,0x85
   140019623:	(bad)
   140019626:	out    0xb2,al
   140019628:	cld    
   140019629:	(bad)  
   14001962a:	sti    
   14001962b:	shr    cl,1
   14001962d:	mov    ebx,0xd6e8e0d6
   140019632:	in     al,dx
   140019633:	ret    
   140019634:	xlat   BYTE PTR ds:[rbx]
   140019635:	loope  0x140019620
   140019637:	mov    ch,0xc8
   140019639:	(bad)  
   14001963a:	xchg   ecx,eax
   14001963b:	retf   
   14001963c:	pop    rsi
   14001963d:	(bad)  
   14001963e:	cmc    
   14001963f:	loope  0x140019635
   140019641:	cli    
   140019642:	out    dx,eax
   140019643:	idiv   bl
   140019645:	repnz mov dh,0xdd
   140019648:	xchg   esp,eax
   140019649:	mov    bh,0xca
   14001964b:	(bad)  
   14001964c:	mov    eax,0xefdec0d0
   140019651:	iret   
   140019652:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019653:	mov    esp,0xc8bca4c7
   140019658:	in     al,0xf2
   14001965a:	xlat   BYTE PTR ds:[rbx]
   14001965b:	in     al,0xf2
   14001965d:	fmul   st,st(3)
   14001965f:	out    0xb3,al
   140019661:	in     eax,dx
   140019662:	mul    ah
   140019664:	in     eax,dx
   140019665:	mul    ebp
   140019667:	xchg   ebx,eax
   140019668:	int3   
   140019669:	(bad)  
   14001966a:	xchg   ecx,eax
   14001966b:	retf   
   14001966c:	pop    rbp
   14001966d:	mov    edx,0xcdbad6cc
   140019672:	(bad)  
   140019673:	mov    ebx,0xdfbc9bdf
   140019678:	popf   
   140019679:	mov    ebp,0xe0be9ee0
   14001967e:	movabs al,ds:0xce99b3e7cbeaf8f0
   140019687:	push   0xffffffffffffff94
   140019689:	int    0x63
   14001968b:	mov    ecx,cs
   14001968d:	push   rdi
   14001968e:	xchg   dh,al
   140019690:	rex.WRB xchg r10,rax
   140019692:	int3   
   140019693:	(bad)  
   140019694:	lods   eax,DWORD PTR ds:[rsi]
   140019695:	fadd   DWORD PTR [rdi-0x50493552]
   14001969b:	ret    
   14001969c:	iret   
   14001969d:	mov    al,0xc4
   14001969f:	iret   
   1400196a0:	mov    al,0xc4
   1400196a2:	shl    BYTE PTR [rcx-0x374b7226],1
   1400196a8:	shl    DWORD PTR [rbp-0x346f2c38],cl
   1400196ae:	pop    rbp
   1400196af:	mov    dh,0xca
   1400196b1:	(bad)  
   1400196b2:	add    bl,0x45
   1400196b5:	xchg   esi,eax
   1400196b6:	int    0x65
   1400196b8:	xchg   esi,eax
   1400196b9:	int    0x66
   1400196bb:	shl    cl,0xa2
   1400196be:	rcl    ecx,0xdb
   1400196c1:	fsub   st,st(2)
   1400196c3:	(bad)  
   1400196c4:	rcl    edx,0xda
   1400196c7:	cwde   
   1400196c8:	(bad)  
   1400196c9:	push   0xffffffffe1d2f0e0
   1400196ce:	icebp  
   1400196cf:	ror    DWORD PTR [rax-0x3876af39],cl
   1400196d5:	push   rdx
   1400196d6:	mov    cl,al
   1400196d8:	push   rbx
   1400196d9:	(bad)  
   1400196da:	(bad)  
   1400196db:	rex.W ret 0xdcd2
   1400196df:	(bad)  
   1400196e0:	rcr    ebp,cl
   1400196e2:	(bad)
   1400196e6:	jrcxz  0x140019692
   1400196e8:	(bad)  
   1400196e9:	in     al,0xab
   1400196eb:	(bad)  
   1400196ec:	in     al,0xac
   1400196ee:	enter  0xc8dd,0xc9
   1400196f2:	in     eax,0xb0
   1400196f4:	leave  
   1400196f5:	out    0xb0,al
   1400196f7:	add    ebx,0x47c48246
   1400196fd:	(bad)  
   1400196fe:	leave  
   1400196ff:	pop    rax
   140019700:	int    0xd9
   140019702:	loop   0x1400196d1
   140019704:	(bad)  
   140019706:	iret   
   140019707:	fsubr  st(4),st
   140019709:	iret   
   14001970a:	call   0xf9eb66c8
   14001970f:	(bad)
   140019713:	iret   
   140019714:	imul   edx,ecx,0xdfd3bce9
   14001971a:	out    0x99,eax
   14001971c:	iret   
   14001971d:	push   0xffffffffffffffd5
   14001971f:	jmp    0x1400196e2
   140019721:	(bad)  
   140019722:	iret   
   140019723:	ins    BYTE PTR es:[rdi],dx
   140019724:	fwait
   140019725:	mov    ch,0xc2
   140019727:	pushf  
   140019728:	mov    dh,0xc3
   14001972a:	lahf   
   14001972b:	shl    BYTE PTR [rdx-0x60],cl
   14001972e:	shl    BYTE PTR [rax+rbx*8-0x14],cl
   140019732:	(bad)
   140019735:	(bad)  
   140019736:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019737:	mov    ebx,0xede5dcc9
   14001973c:	xlat   BYTE PTR ds:[rbx]
   14001973d:	in     al,dx
   14001973e:	(bad)  
   14001973f:	clc    
   140019740:	cld    
   140019741:	cmc    
   140019742:	loop   0x140019735
   140019744:	(bad)  
   140019745:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019746:	mov    esp,0xc9bda5c8
   14001974b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001974c:	(bad)  
   14001974d:	jnp    0x1400196f4
   14001974f:	(bad)  
   140019750:	jl     0x14001973a
   140019752:	hlt    
   140019753:	fucomp st(1)
   140019755:	cmc    
   140019756:	fucomip st,st(2)
   140019758:	cmc    
   140019759:	loopne 0x140019701
   14001975b:	mov    ebp,0x80d6a8ca
   140019760:	test   eax,0xd1aaccc0
   140019765:	xchg   esp,eax
   140019766:	repnz stc 
   140019768:	in     al,dx
   140019769:	repz stc 
   14001976b:	out    dx,al
   14001976c:	stos   DWORD PTR es:[rdi],eax
   14001976d:	ror    esp,0xab
   140019770:	xlat   BYTE PTR ds:[rbx]
   140019771:	sub    DWORD PTR [rdx+rax*8-0x49375333],0xfffffffd
   140019779:	(bad)  
   14001977a:	cld    
   14001977b:	lods   eax,DWORD PTR ds:[rsi]
   14001977c:	ret    0xadcd
   14001977f:	ret    0xefce
   140019782:	fstp   DWORD PTR [rbx-0x4a]
   140019785:	add    BYTE PTR [rax],al
   140019787:	add    BYTE PTR [rbx+0x74],ch
   14001978a:	push   rdx
   14001978b:	rex.WRX push rbx
   14001978d:	add    BYTE PTR [rbx],al
   14001978f:	or     BYTE PTR [rdx],cl
   140019791:	or     ecx,DWORD PTR [rbx]
   140019793:	or     eax,0x1a16160d
   140019798:	(bad)  
   140019799:	(bad)  
   14001979a:	and    al,0x24
   14001979c:	and    eax,0x2c272626
   1400197a1:	sub    eax,0x3533302f
   1400197a6:	xor    eax,0x504f3c37
   1400197ab:	push   rcx
   1400197ac:	push   rdx
   1400197ad:	push   rsp
   1400197ae:	pop    rdx
   1400197af:	pop    rbp
   1400197b0:	(bad)  
   1400197b1:	movsxd edi,DWORD PTR [rbx+0x7c]
   1400197b4:	jle    0x140019739
   1400197b6:	test   BYTE PTR [rdi-0x65667175],al
   1400197bc:	fwait
   1400197bd:	popf   
   1400197be:	sahf   
   1400197bf:	movabs ds:0xadabaaa7a7a6a6a5,al
   1400197c8:	scas   al,BYTE PTR es:[rdi]
   1400197c9:	mov    al,0xb1
   1400197cb:	mov    dl,0xb5
   1400197cd:	mov    dh,0xb7
   1400197cf:	mov    esp,0xc7c6c0bd
   1400197d4:	(bad)  
   1400197d5:	leave  
   1400197d6:	int    0xce
   1400197d8:	rcl    cl,1
   1400197da:	rcl    edx,1
   1400197dc:	rcl    esp,cl
   1400197de:	(bad)  
   1400197df:	fcomp  st(0)
   1400197e1:	(bad)  
   1400197e3:	fcmovnu st,st(5)
   1400197e5:	(bad)  
   1400197e7:	out    0xe7,al
   1400197e9:	call   0x12aea80d6
   1400197ee:	jmp    0x1400197df
   1400197f0:	icebp  
   1400197f1:	div    dh
   1400197f3:	idiv   eax
   1400197f5:	std    
   1400197f6:	(bad)  
   1400197f7:	(bad)  
   1400197f8:	in     eax,dx
   1400197f9:	push   rdx
   1400197fa:	cmp    ch,BYTE PTR [rdi-0x1dff0000]
   140019800:	rex.WB
   140019801:	rex.R
   140019802:	push   r12
   140019804:	js     0x140019864
   140019806:	(bad)  
   140019807:	shl    bl,cl
   140019809:	jae    0x140019867
   14001980b:	push   rcx
   14001980c:	sbb    dh,al
   14001980e:	icebp  
   14001980f:	(bad)  
   140019810:	jbe    0x140019864
   140019812:	sbb    ebp,DWORD PTR [rcx-0x2db928e3]
   140019818:	sub    DWORD PTR ss:[rbp-0x5c],ebp
   14001981c:	in     eax,dx
   14001981d:	rep lods al,BYTE PTR ds:[rsi]
   14001981f:	movsxd ebx,ebx
   140019821:	test   eax,0x6db6db6d
   140019826:	fcmovnb st,st(6)
   140019828:	(bad)  
   140019829:	shl    DWORD PTR [rbx],1
   14001982b:	jnp    0x14001981c
   14001982d:	cdq    
   14001982e:	in     al,dx
   14001982f:	(bad)  
   140019830:	(bad)  
   140019832:	(bad)  
   140019834:	(bad)  
   140019835:	idiv   ebp
   140019837:	int3   
   140019838:	pushf  
   140019839:	jae    0x140019829
   14001983b:	mov    esp,0x78d4ee1e
   140019840:	enter  0x91e4,0xdd
   140019844:	pop    rdx
   140019845:	(bad)  
   140019846:	test   eax,0xa809dc59
   14001984b:	rex.WRXB mov r13b,0x79
   14001984e:	movsxd edi,DWORD PTR [rdx-0x4c]
   140019851:	imul   ebx,DWORD PTR [rdx-0x55],0x481803a4
   140019858:	mov    ebx,0xd5ef8fe6
   14001985d:	mov    dh,0x59
   14001985f:	fst    st(2)
   140019861:	ss (bad) 
   140019863:	ss mov ch,0xb2
   140019866:	add    DWORD PTR [rdi+rcx*1-0x68],esi
   14001986a:	mov    dh,0xc6
   14001986c:	sub    al,0x4b
   14001986e:	jbe    0x140019871
   140019870:	xchg   edx,eax
   140019871:	push   rdi
   140019872:	rex.X adc al,0x67
   140019875:	and    BYTE PTR [rip+0xffffffff8168766b],cl        # 0xc16a0ee6
   14001987b:	cmp    al,0xe0
   14001987d:	jmp    0xd02fd5ef
   140019882:	jnp    0x140019884
   140019884:	or     eax,0x92300b70
   140019889:	xor    eax,edx
   14001988b:	rex.RXB scas al,BYTE PTR es:[rdi]
   14001988d:	pop    rbx
   14001988e:	scas   al,BYTE PTR es:[rdi]
   14001988f:	or     DWORD PTR [rsi+0x1],edx
   140019892:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019893:	leave  
   140019894:	ja     0x1400198d6
   140019896:	cli    
   140019897:	jne    0x140019899
   140019899:	(bad)  
   14001989a:	(bad)  
   14001989b:	cmp    eax,DWORD PTR [rax+0xf22312c]
   1400198a1:	add    ch,BYTE PTR [rdi]
   1400198a3:	repnz and edx,edi
   1400198a6:	jmp    0x10f81eaab
   1400198ab:	fs and al,0xf0
   1400198ae:	mov    dl,al
   1400198b0:	cmp    al,0x22
   1400198b2:	or     eax,0xfe1a4bb8
   1400198b7:	movabs al,ds:0xd01ff606bfab0150
   1400198c0:	scas   eax,DWORD PTR es:[rdi]
   1400198c1:	rex.XB or eax,0xac0b1809
   1400198c7:	mov    bh,0xba
   1400198c9:	push   rsp
   1400198ca:	add    eax,0xb2f83e64
   1400198cf:	int    0x9c
   1400198d1:	icebp  
   1400198d2:	outs   dx,DWORD PTR ds:[rsi]
   1400198d3:	jp     0x140019900
   1400198d5:	or     DWORD PTR [rsi-0x743770fd],edi
   1400198db:	jp     0x1400198f1
   1400198dd:	sub    BYTE PTR [rax-0x1d],ah
   1400198e0:	ret    
   1400198e1:	sub    eax,0x22a2fb49
   1400198e6:	sub    al,0xb3
   1400198e8:	(bad)  
   1400198e9:	stos   DWORD PTR es:[rdi],eax
   1400198ea:	loopne 0x14001990f
   1400198ec:	mov    al,0x81
   1400198ee:	pop    rsp
   1400198ef:	or     esp,esp
   1400198f1:	sub    ah,al
   1400198f3:	fsub   st(7),st
   1400198f5:	ds mov esi,0xf6e81683
   1400198fb:	outs   dx,DWORD PTR ds:[rsi]
   1400198fc:	(bad)  
   1400198fd:	scas   al,BYTE PTR es:[rdi]
   1400198fe:	add    ah,BYTE PTR [rbx]
   140019900:	mov    al,0xd4
   140019902:	cli    
   140019903:	(bad)  
   140019904:	adc    dl,BYTE PTR [rax+rsi*4]
   140019907:	rex.WXB pop r12
   140019909:	mov    dl,0xd4
   14001990b:	mov    eax,0x864be7f8
   140019910:	stos   BYTE PTR es:[rdi],al
   140019911:	(bad)  
   140019912:	add    eax,0xb7c9e70
   140019917:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019918:	(bad)  
   140019919:	mov    ebp,0x44ccdea2
   14001991e:	pop    rbp
   14001991f:	push   rdx
   140019920:	pop    rdi
   140019921:	adc    eax,0x1bde06ec
   140019926:	js     0x140019932
   140019928:	pop    rax
   140019929:	enter  0xc06f,0x25
   14001992d:	or     dl,BYTE PTR [rax+0x7e]
   140019930:	fadd   DWORD PTR [rcx]
   140019932:	fnsave [rbp-0x3faad2e1]
   140019938:	sub    al,0x20
   14001993a:	loope  0x140019988
   14001993c:	sub    al,0x6e
   14001993e:	nop
   14001993f:	test   DWORD PTR [rax-0x7334db3d],0x677119d8
   140019949:	sti    
   14001994a:	loopne 0x14001995e
   14001994c:	adc    bl,BYTE PTR [rsi+rcx*2-0x7b]
   140019950:	call   0x19173ab25
   140019955:	sbb    al,BYTE PTR [rax-0x4e]
   140019958:	out    0xe6,eax
   14001995a:	test   al,0xf8
   14001995c:	vpmulhw xmm9,xmm3,XMMWORD PTR [rdx+0x2cfa21f6]
   140019964:	adc    BYTE PTR [rdi-0x4b],ah
   140019967:	(bad)  
   140019968:	out    dx,eax
   140019969:	fwait
   14001996a:	enter  0x13a3,0x4f
   14001996e:	and    al,0x9e
   140019970:	sbb    al,0x55
   140019972:	leave  
   140019973:	jbe    0x140019918
   140019975:	mov    es,WORD PTR [rcx]
   140019977:	(bad)  
   140019978:	fwait
   140019979:	xchg   esp,eax
   14001997a:	rex.WRB cdqe 
   14001997c:	movsxd esi,DWORD PTR [rsi-0x40989644]
   140019982:	jb     0x1400199d3
   140019984:	add    BYTE PTR [rax-0x2a],dl
   140019987:	jnp    0x1400199f5
   140019989:	push   0xfffffffff63ae8e8
   14001998e:	and    BYTE PTR [rdx+0x6f],bh
   140019991:	retf   0x94b
   140019994:	es jns 0x1400199ec
   140019997:	push   0xffffffffb3b2b9df
   14001999c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001999d:	popf   
   14001999e:	sbb    ebx,esp
   1400199a0:	mov    cl,0x6c
   1400199a2:	(bad)
   1400199a5:	jg     0x1400199f4
   1400199a7:	cmc    
   1400199a8:	je     0x1400199aa
   1400199aa:	loope  0x14001996d
   1400199ac:	ds sub eax,0x2629541a
   1400199b2:	ds jbe 0x1400199af
   1400199b5:	je     0x14001999c
   1400199b7:	(bad)  
   1400199b8:	imul   edi,DWORD PTR [rdi+0x1b],0x10
   1400199bc:	(bad)  
   1400199bd:	loop   0x1400199a2
   1400199bf:	fnsave [rax+0x75a918aa]
   1400199c5:	leave  
   1400199c6:	adc    DWORD PTR [rax],esp
   1400199c8:	add    rbx,rax
   1400199cb:	std    
   1400199cc:	mov    esp,0x2397551b
   1400199d1:	pop    rcx
   1400199d2:	mov    ch,0x29
   1400199d4:	iret   
   1400199d5:	mov    dl,0x67
   1400199d7:	(bad)  
   1400199d8:	div    BYTE PTR [rax-0x6f]
   1400199db:	xlat   BYTE PTR ds:[ebx]
   1400199dd:	add    BYTE PTR [rcx],bh
   1400199df:	ja     0x1400199be
   1400199e1:	jg     0x140019a2e
   1400199e3:	sub    dh,BYTE PTR [rax]
   1400199e5:	pop    rax
   1400199e6:	sti    
   1400199e7:	xlat   BYTE PTR ds:[rbx]
   1400199e8:	push   rcx
   1400199e9:	jge    0x1400199eb
   1400199eb:	add    BYTE PTR [rax],al
   1400199ed:	add    BYTE PTR [rcx+0x45],cl
   1400199f0:	rex.WRX
   1400199f1:	rex.R scas al,BYTE PTR es:[rdi]
   1400199f3:	rex.X (bad) 
   1400199f5:	(bad)  
   1400199f6:	add    BYTE PTR [rax],al
   1400199f8:	sbb    BYTE PTR [rax],ah
   1400199fa:	mov    DWORD PTR [rax+0x4e],edx
   1400199fd:	rex.RXB or eax,0xa1a0a
   140019a03:	add    BYTE PTR [rax],al
   140019a05:	or     eax,0x52444849
   140019a0a:	add    BYTE PTR [rax],al
   140019a0c:	add    BYTE PTR [rax-0x80000000],al
   140019a12:	or     BYTE PTR [rsi],al
   140019a14:	add    BYTE PTR [rax],al
   140019a16:	add    bl,al
   140019a18:	ds (bad) 
   140019a1a:	retf   
   140019a1b:	add    BYTE PTR [rax],al
   140019a1d:	(bad)  
   140019a1e:	out    0x49,eax
   140019a20:	rex.R
   140019a21:	push   r12
   140019a23:	js     0x1400199ff
   140019a25:	in     eax,dx
   140019a26:	popf   
   140019a27:	or     DWORD PTR [rsp+rbx*2-0x1b],esi
   140019a2b:	jne    0x1400199f4
   140019a2d:	int    0x52
   140019a2f:	rex.X add ebp,DWORD PTR [rcx+0x1b]
   140019a33:	shl    ch,cl
   140019a35:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019a36:	jmp    0x161eac404
   140019a3b:	ins    DWORD PTR es:[rdi],dx
   140019a3c:	jp     0x140019a66
   140019a3e:	imul   ecx,DWORD PTR [rsi],0xe813d027
   140019a44:	sub    DWORD PTR [rsi],ebx
   140019a46:	fnstenv [rsp+riz*4]
   140019a49:	rex
   140019a4a:	rex.WX cmp QWORD PTR [rsi+0x5a],rcx
   140019a4e:	add    ch,BYTE PTR [rcx-0x80]
   140019a51:	add    BYTE PTR [rcx],ch
   140019a53:	xor    DWORD PTR [rcx+rbp*2-0x6d3b1d00],0x36d4c707
   140019a5e:	(bad)  
   140019a5f:	(bad)  
   140019a60:	xor    DWORD PTR [rcx],0x36
   140019a63:	(bad)  
   140019a64:	js     0x140019a2b
   140019a66:	sti    
   140019a67:	and    ch,bh
   140019a69:	pop    rdx
   140019a6a:	ins    BYTE PTR es:[rdi],dx
   140019a6b:	retf   
   140019a6c:	xor    esp,DWORD PTR [rbx-0x36d2a533]
   140019a72:	ficom  DWORD PTR [rdi]
   140019a74:	retf   
   140019a75:	mov    dl,0x56
   140019a77:	(bad)  [rdx-0x1a6e821b]
   140019a7d:	scas   eax,DWORD PTR es:[rdi]
   140019a7e:	div    edi
   140019a80:	imul   ebx,esi,0x4691d064
   140019a86:	out    dx,eax
   140019a87:	int    0xf2
   140019a89:	cmp    al,0x23
   140019a8b:	mov    ebp,0x78cf738f
   140019a90:	rex.RX xor r14d,ebx
   140019a93:	xchg   BYTE PTR [rdi-0x1],dh
   140019a96:	(bad)  
   140019a98:	out    dx,eax
   140019a99:	std    
   140019a9a:	(bad)  
   140019a9b:	sub    BYTE PTR [rbp+0x7a3438c6],ah
   140019aa1:	leave  
   140019aa2:	mov    ecx,0x9c000e09
   140019aa7:	fwait
   140019aa8:	loopne 0x140019aaa
   140019aaa:	shl    BYTE PTR [rcx],0x7
   140019aad:	add    cl,ah
   140019aaf:	xchg   edx,eax
   140019ab0:	pop    rbx
   140019ab1:	mov    ecx,0x5c7b77af
   140019ab6:	(bad)  
   140019ab8:	js     0x140019a4d
   140019aba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019abb:	es sti 
   140019abd:	pop    rsp
   140019abe:	sbb    edx,DWORD PTR [rbx-0x44]
   140019ac1:	scas   al,BYTE PTR es:[rdi]
   140019ac2:	rex.WX (bad) 
   140019ac4:	in     eax,0xa7
   140019ac6:	clc    
   140019ac7:	pop    rsp
   140019ac8:	sbb    DWORD PTR [rbx+0x3c],edx
   140019acb:	or     rdx,QWORD PTR [r11+0x3c]
   140019acf:	rex.WB call FWORD PTR [r13-0x396d04e]
   140019ad6:	outs   dx,DWORD PTR ds:[rsi]
   140019ad7:	jb     0x140019b36
   140019ad9:	pop    rdi
   140019ada:	jno    0x140019b4a
   140019adc:	cli    
   140019add:	or     BYTE PTR [rcx],al
   140019adf:	cmp    BYTE PTR [rbx],0xeb
   140019ae2:	sbb    DWORD PTR [rbx-0x6d],0x53d7ae3d
   140019ae9:	mov    esp,0xd9849b63
   140019aee:	retf   0xf502
   140019af1:	or     BYTE PTR [rax],ah
   140019af3:	repnz add al,0x18
   140019af6:	mov    esp,ebp
   140019af8:	icebp  
   140019af9:	push   rdi
   140019afa:	outs   dx,BYTE PTR ds:[rsi]
   140019afb:	pop    rdi
   140019afc:	shl    BYTE PTR [rdi-0x23],cl
   140019aff:	(bad)  
   140019b01:	mov    esi,0xb98d463a
   140019b06:	(bad)  
   140019b07:	(bad)  
   140019b08:	rex.W (bad) 
   140019b0a:	add    BYTE PTR [rax],ah
   140019b0c:	fnstenv [rdi]
   140019b0e:	neg    BYTE PTR [rsi+0x61]
   140019b11:	fs mov ebp,0x470fc645
   140019b17:	test   BYTE PTR [edx],cl
   140019b1a:	add    al,0x50
   140019b1c:	rex.WXB xchg r11,rax
   140019b1e:	mov    ebp,0x3009af49
   140019b23:	(bad)  
   140019b24:	jbe    0x140019b21
   140019b26:	(bad)  
   140019b27:	jge    0x140019b36
   140019b29:	or     ebx,esp
   140019b2b:	xor    BYTE PTR [rdx],ch
   140019b2d:	mov    es,WORD PTR [rax]
   140019b2f:	and    BYTE PTR [rbx+0x546105f6],bh
   140019b35:	outs   dx,DWORD PTR ds:[rsi]
   140019b36:	xchg   esp,eax
   140019b37:	cdq    
   140019b38:	(bad)  
   140019b39:	mov    cl,dh
   140019b3b:	or     edx,DWORD PTR [rbp+0xa563008]
   140019b41:	rex.WRB adc r15b,r10b
   140019b44:	(bad)  
   140019b45:	fs iret 
   140019b47:	clc    
   140019b48:	cmp    esp,DWORD PTR [rsi]
   140019b4a:	lods   al,BYTE PTR ds:[rsi]
   140019b4b:	fwait
   140019b4c:	jo     0x140019ad1
   140019b4e:	ret    
   140019b4f:	rex
   140019b50:	fwait
   140019b51:	add    DWORD PTR [rax],esp
   140019b53:	cmp    bh,BYTE PTR [rbp-0x7e]
   140019b56:	xor    BYTE PTR [rbx-0x7819b931],ah
   140019b5c:	movabs ds:0x2d5aebc5365428b,al
   140019b65:	mov    ah,BYTE PTR [rcx+riz*4-0x39]
   140019b69:	(bad)  
   140019b6a:	jnp    0x140019b32
   140019b6c:	jge    0x140019bb1
   140019b6e:	push   rsp
   140019b6f:	ror    DWORD PTR [rbp+0x63630e],cl
   140019b75:	add    BYTE PTR [rdi+0x2718bfd8],bh
   140019b7b:	int3   
   140019b7c:	cmovne edx,DWORD PTR [rdi-0x4517b903]
   140019b83:	adc    al,0x8f
   140019b85:	retf   
   140019b86:	popf   
   140019b87:	in     al,dx
   140019b88:	sbb    ebx,edi
   140019b8a:	add    eax,DWORD PTR [rcx]
   140019b8c:	vpmaxsw ymm1,ymm12,ymm2
   140019b90:	or     DWORD PTR [rdi],esi
   140019b92:	cmp    DWORD PTR [rdi+rcx*1],ecx
   140019b95:	adc    eax,DWORD PTR [rax]
   140019b97:	call   0x105a354fd
   140019b9c:	or     eax,eax
   140019b9e:	cld    
   140019b9f:	push   rax
   140019ba0:	test   dl,bl
   140019ba2:	stos   BYTE PTR es:[rdi],al
   140019ba3:	adc    DWORD PTR [rax+0x6c],edx
   140019ba6:	adc    bl,BYTE PTR [rdx-0x3d873fda]
   140019bac:	popf   
   140019bad:	repz rcr bh,0xb
   140019bb1:	cmp    BYTE PTR [rsi+0x76],ch
   140019bb4:	add    BYTE PTR [rax],dh
   140019bb6:	mov    esp,0xc1367fde
   140019bbb:	cdq    
   140019bbc:	(bad)  
   140019bbd:	mov    dl,BYTE PTR [rax+0x69]
   140019bc0:	cmc    
   140019bc1:	leave  
   140019bc2:	pop    rsi
   140019bc3:	xlat   BYTE PTR ds:[rbx]
   140019bc4:	xchg   esi,eax
   140019bc5:	sub    DWORD PTR [rsi],edi
   140019bc7:	xlat   BYTE PTR ds:[rbx]
   140019bc8:	je     0x140019c1b
   140019bca:	jae    0x140019c1b
   140019bcc:	mov    DWORD PTR [rbx+rdi*4+0x7f495fb],esi
   140019bd3:	outs   dx,DWORD PTR ds:[rsi]
   140019bd4:	jno    0x140019bd6
   140019bd6:	(bad)  
   140019bd7:	add    al,al
   140019bd9:	jmp    0x140019c45
   140019bdb:	sbb    al,0xc1
   140019bdd:	add    BYTE PTR [rax],bl
   140019bdf:	mov    ch,BYTE PTR [rsi+0x60121d0a]
   140019be5:	in     al,dx
   140019be6:	adc    BYTE PTR [rbx],bh
   140019be8:	movsxd edx,DWORD PTR [rsi-0x48961d00]
   140019bee:	xlat   BYTE PTR ds:[rbx]
   140019bef:	jne    0x140019bc0
   140019bf1:	imul   ebx,ecx,0xfffffff7
   140019bf4:	jge    0x140019c57
   140019bf6:	push   rsp
   140019bf7:	add    DWORD PTR [rax+0x76],eax
   140019bfa:	ret    
   140019bfb:	(bad)  
   140019bfc:	rex.RXB and r11d,r14d
   140019bff:	xchg   DWORD PTR [rcx-0x7edd24f],esp
   140019c05:	rex.WX xchg rbx,rax
   140019c07:	jg     0x140019bc8
   140019c09:	and    eax,DWORD PTR [rax]
   140019c0b:	stc    
   140019c0c:	test   eax,0x23bec204
   140019c11:	stos   BYTE PTR es:[rdi],al
   140019c12:	in     al,0x8f
   140019c14:	rex.RX and al,0x0
   140019c17:	xor    BYTE PTR [rsp+rbx*1-0x5b5a647a],ah
   140019c1e:	jbe    0x140019c99
   140019c20:	fsubr  QWORD PTR [rip+0xffffffffb8b9ae41]        # 0xf8bb4a67
   140019c26:	retf   
   140019c27:	leave  
   140019c28:	sti    
   140019c29:	xchg   edx,eax
   140019c2a:	(bad)  
   140019c2b:	jno    0x140019bff
   140019c2d:	out    dx,al
   140019c2e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019c2f:	(bad)  
   140019c30:	and    eax,0xbaf004b6
   140019c35:	rcr    BYTE PTR [rip+0x5d4c46c6],cl        # 0x19d4de301
   140019c3b:	leave  
   140019c3c:	fidiv  WORD PTR [rcx+0xf8c0259]
   140019c42:	add    al,0x18
   140019c44:	(bad)  
   140019c45:	xchg   edi,eax
   140019c46:	mov    al,0xf8
   140019c48:	fcomp  DWORD PTR [rdi-0x11]
   140019c4b:	rex.WRX cli 
   140019c4d:	mov    bl,0xc4
   140019c4f:	nop
   140019c50:	add    dl,ah
   140019c52:	imul   edi,DWORD PTR [rbx],0xc
   140019c55:	mov    WORD PTR [rcx],ds
   140019c57:	sbb    eax,0x1c00044f
   140019c5c:	jne    0x140019c76
   140019c5e:	adc    eax,0x44a3b
   140019c63:	pop    rsp
   140019c64:	jne    0x140019c7e
   140019c66:	xor    eax,0x30e001ba
   140019c6b:	retf   0x8001
   140019c6e:	rex.XB (bad) 
   140019c70:	add    BYTE PTR [rdx+rsi*2],bl
   140019c73:	add    al,ah
   140019c75:	nop
   140019c76:	add    eax,DWORD PTR [rax]
   140019c78:	xchg   DWORD PTR [rax+rax*1],ebx
   140019c7b:	cmp    ah,ah
   140019c7d:	add    BYTE PTR [rax],ah
   140019c7f:	(bad)  
   140019c80:	hlt    
   140019c81:	xchg   bh,ch
   140019c83:	rex.B cmc 
   140019c85:	rex.B icebp 
   140019c87:	mov    bl,0x6a
   140019c89:	jns    0x140019c50
   140019c8b:	rex.R xchg ebp,eax
   140019c8d:	pop    rdx
   140019c8e:	cmp    ecx,DWORD PTR [rbx-0x13]
   140019c91:	imul   edi,esi,0x5e6ded44
   140019c97:	stos   BYTE PTR es:[rdi],al
   140019c98:	jbe    0x140019ccf
   140019c9a:	(bad)  
   140019c9b:	push   rdi
   140019c9c:	fwait
   140019c9d:	imul   ebx,edi,0x52
   140019ca0:	or     ecx,DWORD PTR [rdx-0x2]
   140019ca3:	rex.WXB movabs r15,0x37db800208c001c7
   140019cad:	pop    rsi
   140019cae:	xor    edi,DWORD PTR [rsp+riz*4-0x17a2b2cd]
   140019cb5:	cmp    eax,0xbd5b86ab
   140019cba:	jge    0x140019c53
   140019cbc:	push   rsp
   140019cbd:	retf   
   140019cbe:	test   eax,0x75a72a83
   140019cc3:	mov    ebp,0xaaf1565a
   140019cc8:	add    eax,DWORD PTR [rax-0x753ff9bc]
   140019cce:	mov    dl,bh
   140019cd0:	(bad)  
   140019cd1:	test   eax,0x2454c74b
   140019cd6:	stos   DWORD PTR es:[rdi],eax
   140019cd7:	std    
   140019cd8:	rex.WR movabs rbp,0x724de29a86f55b5a
   140019ce2:	add    BYTE PTR [rax-0x6967ffd8],dl
   140019ce8:	repz (bad) 
   140019cea:	stos   BYTE PTR es:[rdi],al
   140019ceb:	test   al,0x63
   140019ced:	mov    ebx,0x763ae68a
   140019cf2:	mov    esi,0x1ca0345
   140019cf7:	rex pushf 
   140019cf9:	add    esp,DWORD PTR [rax+0x66]
   140019cfc:	fidivr WORD PTR [rdi+0x62c56669]
   140019d02:	pop    rbp
   140019d03:	xchg   ebp,eax
   140019d04:	call   rdx
   140019d06:	(bad)  
   140019d07:	ds mov eax,?
   140019d0a:	(bad)  
   140019d0b:	(bad)  
   140019d0c:	retf   0xa09f
   140019d0f:	(bad)  
   140019d10:	pop    rbp
   140019d11:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019d13:	push   rbp
   140019d14:	rex.WRB
   140019d15:	rex.WB out 0x2e,eax
   140019d18:	xchg   ebp,eax
   140019d19:	jns    0x140019d83
   140019d1b:	xchg   ecx,eax
   140019d1c:	pop    rdx
   140019d1d:	pop    rbp
   140019d1e:	cdq    
   140019d1f:	movabs ds:0xa8c8366a3a7a2fde,al
   140019d28:	add    al,0x0
   140019d2a:	cmp    edi,DWORD PTR [rdi-0x7572b313]
   140019d30:	cmc    
   140019d31:	sub    ch,dh
   140019d33:	fcomp  QWORD PTR [rcx]
   140019d35:	adc    DWORD PTR [rbx-0xa03e1aa],esp
   140019d3b:	nop
   140019d3c:	(bad)  
   140019d3e:	ja     0x140019cf5
   140019d40:	iret   
   140019d41:	add    DWORD PTR [rax-0x48],eax
   140019d44:	(bad)  
   140019d45:	jle    0x140019d0a
   140019d47:	mov    DWORD PTR [rdx+0x65],eax
   140019d4a:	xlat   BYTE PTR ds:[rbx]
   140019d4b:	stos   BYTE PTR es:[rdi],al
   140019d4c:	jmp    0x16edcab1f
   140019d51:	shl    bl,0x8
   140019d54:	mov    ch,0x1c
   140019d56:	add    BYTE PTR [rcx+rax*2+0x2b978759],al
   140019d5d:	mov    ebx,0x8fb89a57
   140019d62:	loope  0x140019d60
   140019d64:	(bad)  
   140019d65:	(bad)  
   140019d67:	cmp    al,0x7
   140019d69:	add    cl,dl
   140019d6b:	fs ds cmp dh,ch
   140019d6f:	jb     0x140019d50
   140019d71:	(bad)
   140019d74:	mov    eax,ebp
   140019d76:	mov    ch,0xba
   140019d78:	scas   al,BYTE PTR es:[rdi]
   140019d79:	pop    rsp
   140019d7a:	in     eax,dx
   140019d7b:	(bad)  
   140019d7c:	mov    cl,0x3
   140019d7e:	stos   DWORD PTR es:[rdi],eax
   140019d7f:	mov    edi,0xe3a5f4f7
   140019d84:	(bad)  
   140019d85:	add    BYTE PTR [rdx-0x56f3fff7],ah
   140019d8b:	jo     0x140019d63
   140019d8d:	movabs eax,ds:0xe7a6a6bfebe2039e
   140019d96:	jle    0x140019df7
   140019d98:	mov    esi,ebx
   140019d9a:	add    eax,0x92d33f25
   140019d9f:	test   BYTE PTR [rax-0x80],bl
   140019da2:	(bad)  
   140019da4:	jge    0x140019d47
   140019da6:	rex.WRB movabs r13,0x1cb70eb025b0f399
   140019db0:	add    BYTE PTR [rax-0x60],bl
   140019db3:	jp     0x1b3af4838
   140019db9:	stos   DWORD PTR es:[rdi],eax
   140019dba:	or     edx,eax
   140019dbc:	or     al,0xf5
   140019dbe:	popf   
   140019dbf:	out    dx,eax
   140019dc0:	(bad)  
   140019dc1:	std    
   140019dc2:	xor    r10d,esi
   140019dc5:	in     al,dx
   140019dc6:	retf   0xf43c
   140019dc9:	jno    0x140019e1f
   140019dcb:	or     al,0x40
   140019dcd:	(bad)  
   140019dce:	add    BYTE PTR [rcx+0x50],ah
   140019dd1:	pop    rbp
   140019dd2:	ja     0x140019d92
   140019dd4:	gs out 0x1f,al
   140019dd7:	cmp    eax,0x36fd5877
   140019ddc:	sti    
   140019ddd:	movabs eax,ds:0x67395e2e080bdf90
   140019de6:	(bad)  
   140019de7:	sti    
   140019de8:	(bad)  
   140019de9:	pop    rsp
   140019dea:	(bad)  
   140019deb:	push   rsi
   140019dec:	push   rbx
   140019ded:	mov    bl,0xff
   140019def:	cmp    DWORD PTR [rdx],ebp
   140019df1:	(bad)  
   140019df2:	movabs al,ds:0xcb31ef23340b0003
   140019dfb:	mov    edx,0x9e615b1b
   140019e00:	in     al,0x3
   140019e02:	int3   
   140019e03:	jl     0x140019e04
   140019e05:	xchg   esi,eax
   140019e06:	mov    edx,0x37bfa6d9
   140019e0b:	mov    ch,0x6e
   140019e0d:	push   rsi
   140019e0e:	push   rsp
   140019e0f:	or     al,0x40
   140019e11:	(bad)  
   140019e12:	add    BYTE PTR [rsi],dl
   140019e14:	mov    BYTE PTR [rsi+rcx*4],al
   140019e17:	(bad)  
   140019e18:	in     eax,0x3b
   140019e1a:	mov    dl,0xda
   140019e1c:	xchg   edx,eax
   140019e1d:	imul   edi,DWORD PTR [rcx-0x1e],0x42
   140019e21:	xchg   DWORD PTR [rcx-0x57],ebp
   140019e24:	(bad)  
   140019e25:	(bad)  
   140019e26:	sub    eax,0x7400ce1c
   140019e2b:	add    BYTE PTR [rax-0x7f],ah
   140019e2e:	(bad)
   140019e32:	(bad)  
   140019e36:	jmp    0x14b4f8755
   140019e3b:	rex.WR jg 0x140019e35
   140019e3e:	(bad)  
   140019e3f:	gs mov edi,0x7400d88c
   140019e45:	add    BYTE PTR [rax+0x3a],ah
   140019e48:	(bad)  
   140019e49:	idiv   DWORD PTR [rip+0xffffffff8b3ad64b]        # 0xcb3c749a
   140019e4f:	frstor [rdi+0x35]
   140019e52:	js     0x140019e47
   140019e54:	icebp  
   140019e55:	sbb    DWORD PTR [rdi-0x68],0xcb4f7efe
   140019e5c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019e5d:	add    eax,eax
   140019e5f:	mov    bl,0x50
   140019e61:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019e62:	(bad)  
   140019e63:	rex.WR ins DWORD PTR es:[rdi],dx
   140019e65:	clc    
   140019e66:	add    DWORD PTR [rbp+rbp*1+0x3b6f75],edi
   140019e6d:	mov    BYTE PTR [rsi],dl
   140019e6f:	add    dh,dl
   140019e71:	push   rsp
   140019e72:	mov    ecx,0xf2feef2d
   140019e77:	movabs ds:0x9dacd163075f2d7b,eax
   140019e80:	sar    DWORD PTR [rdx-0x46],1
   140019e83:	data16 and BYTE PTR [rbx],dl
   140019e86:	ret    0x195a
   140019e89:	add    bl,BYTE PTR [rax+rax*8]
   140019e8c:	rex.X jle 0x140019eef
   140019e8f:	jno    0x140019e6a
   140019e91:	jmp    FWORD PTR [rax-0x65]
   140019e94:	add    eax,0x2000e1e9
   140019e99:	mov    BYTE PTR [rdx],cl
   140019e9b:	(bad)  [rdi+0x7bb1be59]
   140019ea1:	fwait
   140019ea2:	xchg   edi,eax
   140019ea3:	test   BYTE PTR [rbp-0x53],dh
   140019ea6:	(bad)  
   140019ea7:	mov    bl,0x4d
   140019ea9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019eaa:	xchg   ebx,eax
   140019eab:	rex.RB (bad) 
   140019ead:	adc    al,0x22
   140019eaf:	add    eax,0xc3243440
   140019eb4:	mov    BYTE PTR [rdi],al
   140019eb6:	rex jae 0x140019f08
   140019eb9:	mov    ecx,0xaeb81be5
   140019ebe:	jp     0x140019f2a
   140019ec0:	pop    rax
   140019ec1:	xlat   BYTE PTR ds:[rbx]
   140019ec2:	and    bh,cl
   140019ec4:	movsxd esi,DWORD PTR [rsi+0x21]
   140019ec7:	cdq    
   140019ec8:	sbb    al,0x0
   140019eca:	fadd   DWORD PTR [rax]
   140019ecc:	xor    BYTE PTR [rbx-0x41a5b069],0x81
   140019ed3:	(bad)  
   140019ed4:	cwde   
   140019ed5:	je     0x140019ed6
   140019ed7:	(bad)  
   140019ed8:	shl    BYTE PTR [rsi+0x5f4d77fa],cl
   140019ede:	movsxd edi,DWORD PTR [rdi+0x5b]
   140019ee1:	stos   BYTE PTR es:[rdi],al
   140019ee2:	add    eax,DWORD PTR [rax+0x31000358]
   140019ee8:	sbb    ecx,esi
   140019eea:	mov    dl,0x12
   140019eec:	mov    dl,0xd
   140019eee:	es loop 0x140019eee
   140019ef1:	push   di
   140019ef3:	jrcxz  0x140019ebe
   140019ef5:	(bad)  
   140019ef6:	(bad)  
   140019ef7:	add    BYTE PTR [rcx+0x3a2c006],dh
   140019efd:	(bad)  
   140019efe:	xchg   DWORD PTR [rbp+0x3],esi
   140019f01:	ret    
   140019f02:	rex.WRB fisttp WORD PTR [r14-0x33]
   140019f06:	(bad)  
   140019f07:	scas   al,BYTE PTR es:[rdi]
   140019f08:	jmp    0x12c5e9378
   140019f0d:	jb     0x140019f0f
   140019f0f:	adc    BYTE PTR [rbx+0x0],ch
   140019f12:	push   rax
   140019f13:	shr    DWORD PTR [rbx+0x75],1
   140019f16:	adc    DWORD PTR [rcx],eax
   140019f18:	mov    esp,fs
   140019f1a:	(bad)  
   140019f1b:	jge    0x140019f74
   140019f1d:	scas   eax,DWORD PTR es:[rdi]
   140019f1e:	cwde   
   140019f1f:	ss add al,0x1
   140019f22:	mov    WORD PTR [rcx],ss
   140019f24:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019f25:	cmp    BYTE PTR [rdx-0x46],dh
   140019f28:	rex.WX (bad) 
   140019f2a:	rex.WB in eax,dx
   140019f2c:	(bad)  
   140019f2d:	add    BYTE PTR [rdx+0x23ec8009],ah
   140019f33:	imul   ebp,DWORD PTR [rdi+rbx*8],0x3c
   140019f37:	ins    BYTE PTR es:[rdi],dx
   140019f38:	xchg   BYTE PTR [rax-0x52],cl
   140019f3b:	imul   esp,DWORD PTR [rsi-0xca7275e],0x8c199e8a
   140019f45:	and    DWORD PTR [rsi-0x711fd1e9],esp
   140019f4b:	xchg   bh,dh
   140019f4d:	vpaddb ymm9,ymm12,YMMWORD PTR [rax-0x4e]
   140019f52:	xchg   ebx,eax
   140019f53:	retf   
   140019f54:	and    al,0x7a
   140019f56:	mov    ecx,0x6db7e546
   140019f5b:	jbe    0x140019f5d
   140019f5d:	(bad)  
   140019f5e:	push   rax
   140019f5f:	pop    rcx
   140019f60:	xlat   BYTE PTR ds:[rbx]
   140019f61:	outs   dx,BYTE PTR ds:[rsi]
   140019f62:	retf   
   140019f63:	add    BYTE PTR [rax],bh
   140019f65:	sub    DWORD PTR [rcx],esp
   140019f67:	fisttp QWORD PTR [rax-0x52]
   140019f6a:	imul   esp,DWORD PTR [rsi],0x55ac6b84
   140019f70:	xchg   ebp,eax
   140019f71:	leave  
   140019f72:	adc    DWORD PTR [rcx],eax
   140019f74:	ror    BYTE PTR [rcx],0x4
   140019f77:	or     eax,0x9e3e0217
   140019f7c:	movsxd ebx,DWORD PTR [rcx]
   140019f7e:	add    BYTE PTR [rbp-0x1e],bl
   140019f81:	retf   
   140019f82:	rex.RXB jb 0x140019f52
   140019f85:	out    dx,al
   140019f86:	rep lods eax,DWORD PTR ds:[rsi]
   140019f88:	adc    DWORD PTR [rbp+0xa],edx
   140019f8b:	cmp    DWORD PTR [rax],eax
   140019f8d:	mov    BYTE PTR [rdx],ah
   140019f8f:	add    BYTE PTR [rdx+0x65a964e],bl
   140019f95:	add    BYTE PTR [rdx+0x766b9238],bh
   140019f9b:	pushf  
   140019f9c:	ins    DWORD PTR es:[rdi],dx
   140019f9d:	xor    BYTE PTR [rbp+0x2d],bh
   140019fa0:	mov    cl,BYTE PTR [rdx-0x1e]
   140019fa3:	adc    BYTE PTR [rax],al
   140019fa5:	mov    bh,0x9
   140019fa7:	frstor [rip+0xffffffffe7a13df4]        # 0x127a2dda1
   140019fad:	test   BYTE PTR [rsi+0x23],bh
   140019fb0:	hlt    
   140019fb1:	xchg   edx,eax
   140019fb2:	ror    BYTE PTR [rdi],1
   140019fb4:	test   dh,bh
   140019fb6:	rex.WB call 0xde0de1d7
   140019fbc:	mov    edx,0x4001ee2e
   140019fc1:	enter  0xead5,0x6a
   140019fc5:	cmp    bl,BYTE PTR [rcx+0x12]
   140019fc8:	ror    DWORD PTR [rip+0xffffffffecdb84a5],1        # 0x12cdd2473
   140019fce:	retf   0xb23e
   140019fd1:	neg    BYTE PTR [rdx-0x1e919fff]
   140019fd7:	(bad)  
   140019fd8:	(bad)  
   140019fd9:	(bad)  
   140019fda:	cli    
   140019fdb:	ja     0x140019fd5
   140019fdd:	sbb    cl,BYTE PTR [rdx]
   140019fdf:	lss    eax,FWORD PTR [rdx+rbp*8-0x47a4317b]
   140019fe7:	jl     0x140019f98
   140019fe9:	adc    BYTE PTR [rsi-0x55],dl
   140019fec:	rex.WRXB push 0xffffffffa178d09a
   140019ff2:	pop    rbx
   140019ff3:	loop   0x140019fff
   140019ff5:	add    BYTE PTR [rsi+rbx*2-0x750ea8d3],ah
   140019ffc:	fimul  DWORD PTR [rax+0x270d9ae4]
   14001a002:	mov    cl,ah
   14001a004:	(bad)  
   14001a005:	sbb    edx,0x53
   14001a008:	ins    DWORD PTR es:[rdi],dx
   14001a009:	add    eax,eax
   14001a00b:	pushf  
   14001a00c:	ret    0x74a7
   14001a00f:	fld    QWORD PTR [rdx]
   14001a011:	jbe    0x14001a064
   14001a013:	sub    BYTE PTR [rbx],bh
   14001a015:	in     eax,0xe2
   14001a017:	in     eax,0x5e
   14001a019:	jne    0x140019fcf
   14001a01b:	out    0x8c,eax
   14001a01d:	push   0xffffffffffffffea
   14001a01f:	cmp    BYTE PTR [rsi-0x5770e536],ah
   14001a025:	fmul   st(2),st
   14001a027:	(bad)  
   14001a028:	push   rbp
   14001a029:	pop    rsp
   14001a02a:	xlat   BYTE PTR ds:[rbx]
   14001a02b:	lods   al,BYTE PTR ds:[rsi]
   14001a02c:	stos   BYTE PTR es:[rdi],al
   14001a02d:	emms   
   14001a02f:	test   al,0x96
   14001a031:	scas   al,BYTE PTR es:[rdi]
   14001a032:	outs   dx,BYTE PTR ds:[rsi]
   14001a033:	jne    0x14001a031
   14001a035:	(bad)  
   14001a036:	pop    rcx
   14001a037:	jne    0x14001a01a
   14001a039:	shl    ch,cl
   14001a03b:	and    DWORD PTR [rbp-0x109dded8],ebx
   14001a041:	jrcxz  0x14001a025
   14001a043:	add    al,BYTE PTR [rax]
   14001a045:	cmp    eax,0x91868f17
   14001a04a:	or     dl,bl
   14001a04c:	adc    edx,DWORD PTR [rcx]
   14001a04e:	add    BYTE PTR [rdx-0x41649871],ch
   14001a054:	push   rsi
   14001a055:	imul   esp,DWORD PTR [rdi-0x46],0xac18002d
   14001a05c:	push   rsi
   14001a05d:	loope  0x14001a053
   14001a05f:	stc    
   14001a060:	or     ebp,DWORD PTR [rdx-0x5aaa565e]
   14001a066:	adc    eax,0xf7eb541c
   14001a06b:	adc    eax,0x3919e5aa
   14001a070:	(bad)  
   14001a071:	movabs ds:0x50b53eeb7f351eed,eax
   14001a07a:	(bad)  
   14001a07b:	(bad)  
   14001a07c:	(bad)  
   14001a07e:	push   rbp
   14001a07f:	mov    esi,DWORD PTR [rsi-0x8]
   14001a082:	(bad)  
   14001a083:	(bad)  
   14001a084:	cmp    edi,ebx
   14001a086:	mov    DWORD PTR [rdi-0xd],edi
   14001a089:	fiadd  DWORD PTR [rdx-0x1]
   14001a08c:	jnp    0x14001a0a4
   14001a08e:	or     BYTE PTR [rbp-0x4e],bh
   14001a091:	retf   
   14001a092:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a093:	ss stc 
   14001a095:	mov    dl,BYTE PTR [rbp+0x7e]
   14001a098:	jne    0x14001a02d
   14001a09a:	push   0x3f
   14001a09c:	jle    0x14001a0f0
   14001a09e:	pop    rsp
   14001a09f:	loopne 0x14001a070
   14001a0a1:	xchg   esp,eax
   14001a0a2:	fcom   QWORD PTR [rbp+0x8]
   14001a0a5:	cmp    eax,0x35c3742b
   14001a0aa:	add    eax,eax
   14001a0ac:	stc    
   14001a0ad:	(bad)  
   14001a0af:	xchg   esi,eax
   14001a0b0:	add    DWORD PTR [rax-0x55],eax
   14001a0b3:	cwde   
   14001a0b4:	pop    rbp
   14001a0b5:	sahf   
   14001a0b6:	mov    ecx,0x16cfb63
   14001a0bc:	rex outs dx,DWORD PTR ds:[rsi]
   14001a0be:	pop    rdi
   14001a0bf:	dec    DWORD PTR [rsi+0x566daa2d]
   14001a0c5:	jmp    0x14001a104
   14001a0c7:	test   edx,ebp
   14001a0c9:	mov    ebp,0x8cd5bb4d
   14001a0ce:	(bad)  
   14001a0cf:	cmp    esi,ebp
   14001a0d1:	jrcxz  0x14001a055
   14001a0d3:	ins    DWORD PTR es:[rdi],dx
   14001a0d4:	(bad)  
   14001a0d5:	mov    ch,0x24
   14001a0d7:	sub    eax,0xccc8ad47
   14001a0dc:	push   rbx
   14001a0dd:	stos   DWORD PTR es:[rdi],eax
   14001a0de:	imul   ah
   14001a0e0:	push   rdi
   14001a0e1:	imul   esi,DWORD PTR [rdx+0x4f3ad50a],0xffffff91
   14001a0e8:	pop    rdx
   14001a0e9:	out    dx,eax
   14001a0ea:	sub    eax,0x25bc1b56
   14001a0ef:	push   0xffffffffffffffa3
   14001a0f1:	out    dx,eax
   14001a0f2:	ja     0x14001a0b8
   14001a0f4:	jae    0x14001a154
   14001a0f6:	pop    rdi
   14001a0f7:	mov    ebx,0xd9ad48af
   14001a0fc:	pop    rbx
   14001a0fd:	movabs al,ds:0x1ab9e9a5abe66656
   14001a106:	sbb    al,0xf3
   14001a108:	mov    bh,0x64
   14001a10a:	test   eax,0x29f6db85
   14001a10f:	rex.WRXB pop r9
   14001a111:	lods   eax,DWORD PTR ds:[rsi]
   14001a112:	cmp    bh,BYTE PTR [rbp-0x12]
   14001a115:	rex.X
   14001a116:	lock iret 
   14001a118:	(bad)  
   14001a119:	adc    bh,bh
   14001a11b:	retf   
   14001a11c:	imul   eax,DWORD PTR [rdx],0x0
   14001a11f:	retf   0xadb1
   14001a122:	scas   al,BYTE PTR es:[rdi]
   14001a123:	(bad)  
   14001a125:	or     eax,0x4ac00111
   14001a12a:	scas   eax,DWORD PTR es:[rdi]
   14001a12b:	and    DWORD PTR [rbp+0x5f],esp
   14001a12e:	jbe    0x14001a132
   14001a130:	loopne 0x14001a107
   14001a132:	add    eax,0xa594d4eb
   14001a137:	test   eax,0xe9b5edea
   14001a13c:	(bad)  
   14001a13d:	(bad)  
   14001a13e:	xor    BYTE PTR [rdi],cl
   14001a140:	rex.RX ret 0x2dd8
   14001a144:	cmp    DWORD PTR [rbp+0x6a],esp
   14001a147:	jnp    0x14001a1c7
   14001a149:	test   edx,ebx
   14001a14b:	mov    ecx,0xa96a0ff
   14001a150:	sbb    DWORD PTR [rbp+0x55],eax
   14001a153:	sub    ah,BYTE PTR [rbx+0x16654ab8]
   14001a159:	push   rbp
   14001a15a:	(bad)  
   14001a15b:	mov    bh,ah
   14001a15d:	push   rax
   14001a15e:	jp     0x14001a1c1
   14001a160:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a161:	fisub  DWORD PTR [rip+0x5bfde1ef]        # 0x19bff8356
   14001a167:	jae    0x14001a134
   14001a169:	xor    al,0x38
   14001a16b:	add    dh,cl
   14001a16d:	mov    dl,0xf4
   14001a16f:	cmp    al,0x2d
   14001a171:	and    eax,0x51eea5e6
   14001a176:	test   eax,0xe7aaa539
   14001a17b:	ins    BYTE PTR es:[rdi],dx
   14001a17c:	movabs al,ds:0x2128fd094f256
   14001a185:	sbb    DWORD PTR [rcx],0x66
   14001a188:	push   rsi
   14001a189:	sub    BYTE PTR [rdi-0x6a7ac93],bh
   14001a18f:	add    BYTE PTR [rbx],bh
   14001a191:	add    BYTE PTR [rax-0x10aadb44],dl
   14001a197:	cld    
   14001a198:	stc    
   14001a199:	test   eax,0xd9f3357b
   14001a19e:	leave  
   14001a19f:	xor    BYTE PTR [rax],dl
   14001a1a1:	retw   0x3de0
   14001a1a5:	and    eax,0x40eb2ab5
   14001a1aa:	popf   
   14001a1ab:	in     al,dx
   14001a1ac:	loop   0x14001a228
   14001a1ae:	in     eax,0x2d
   14001a1b0:	outs   dx,DWORD PTR ds:[rsi]
   14001a1b1:	push   rax
   14001a1b2:	mov    esi,0x5d95068a
   14001a1b7:	shr    DWORD PTR [rax+0x67e0e729],1
   14001a1bd:	mov    edi,edx
   14001a1bf:	js     0x14001a1d0
   14001a1c1:	out    dx,eax
   14001a1c2:	fistp  WORD PTR [rbp+0x5c]
   14001a1c5:	lods   eax,DWORD PTR ds:[rsi]
   14001a1c6:	rex.B ret 
   14001a1c8:	ja     0x14001a1eb
   14001a1ca:	cmp    eax,0x96482690
   14001a1cf:	stc    
   14001a1d0:	pop    rbx
   14001a1d1:	mov    bl,0xc4
   14001a1d3:	jbe    0x14001a1cd
   14001a1d5:	rex.WR je 0x14001a24b
   14001a1d8:	movabs ds:0x4156339512b000ad,al
   14001a1e1:	sti    
   14001a1e2:	(bad)  
   14001a1e3:	(bad)  [rax+rax*1]
   14001a1e6:	test   BYTE PTR [rdx-0x4567ff63],0x7c
   14001a1ed:	stos   DWORD PTR es:[rdi],eax
   14001a1ee:	jp     0x14001a257
   14001a1f0:	rex.XB xchg r14b,dl
   14001a1f3:	jmp    0x12cd69ee4
   14001a1f8:	add    ebx,DWORD PTR [rdx+0x461030f9]
   14001a1fe:	ret    0x8350
   14001a201:	fnstcw WORD PTR [rcx-0x50d5b26b]
   14001a207:	(bad)  
   14001a208:	nop
   14001a209:	retf   0x6aaf
   14001a20c:	push   rsi
   14001a20d:	sti    
   14001a20e:	stos   DWORD PTR es:[rdi],eax
   14001a20f:	fwait
   14001a210:	push   rbp
   14001a211:	rex.B cmc 
   14001a213:	(bad)  
   14001a214:	push   rbp
   14001a215:	pop    rax
   14001a216:	jae    0x14001a270
   14001a218:	(bad)  
   14001a219:	enter  0x5561,0x5c
   14001a21d:	(bad)  [rdx+0x1af37f89]
   14001a223:	out    dx,eax
   14001a224:	loope  0x14001a259
   14001a226:	jl     0x14001a22f
   14001a228:	xchg   edx,eax
   14001a229:	add    esp,DWORD PTR [rax]
   14001a22b:	lods   al,BYTE PTR ds:[rsi]
   14001a22c:	adc    eax,0xaec9f089
   14001a231:	ins    BYTE PTR es:[rdi],dx
   14001a232:	lods   eax,DWORD PTR ds:[rsi]
   14001a233:	data16 ror BYTE PTR [rdx],cl
   14001a236:	sub    ecx,DWORD PTR [rdx+rax*4+0x7bbf3efc]
   14001a23d:	imul   ecx,DWORD PTR [rdi],0xe544ac00
   14001a243:	add    al,BYTE PTR [rsi+0x6dba5759]
   14001a249:	shl    BYTE PTR ss:[rax+0x3d],0x7
   14001a24e:	mov    cl,0x4
   14001a250:	rcr    BYTE PTR [rbx+0x39a9b72b],0x1b
   14001a257:	xor    esi,DWORD PTR [rip+0xffffffff8c106063]        # 0xcc1202c0
   14001a25d:	rex.WX or rax,QWORD PTR [rdx]
   14001a260:	xor    BYTE PTR [rcx+0x10307f3],0x8c
   14001a267:	xchg   cl,ch
   14001a269:	and    eax,0x81d447f5
   14001a26e:	xchg   BYTE PTR [rsi+0x55],dl
   14001a271:	(bad)  
   14001a272:	(bad)  
   14001a273:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a274:	retf   0xda9b
   14001a277:	cmc    
   14001a278:	jrcxz  0x14001a1fb
   14001a27a:	(bad)  
   14001a27b:	ss std 
   14001a27d:	cmp    ch,bh
   14001a27f:	loope  0x14001a2b4
   14001a281:	jnp    0x14001a2ce
   14001a283:	imul   esi,DWORD PTR [rip+0x482d50b0],0xffffff9a        # 0x1882ef33a
   14001a28a:	div    DWORD PTR [rdi]
   14001a28c:	out    dx,eax
   14001a28d:	push   rcx
   14001a28e:	pop    rsi
   14001a28f:	mov    cl,0xd
   14001a291:	mov    WORD PTR [rax+rbx*4],?
   14001a294:	rcr    BYTE PTR [rdi-0x25],1
   14001a297:	add    al,BYTE PTR [rax]
   14001a299:	sub    ecx,DWORD PTR [rbp+0x1b]
   14001a29c:	(bad)  
   14001a29d:	stos   BYTE PTR es:[rdi],al
   14001a29e:	cmp    al,0xe6
   14001a2a0:	mov    DWORD PTR [rax],ecx
   14001a2a2:	add    BYTE PTR [rbp-0x39],dl
   14001a2a5:	jge    0x14001a24d
   14001a2a7:	scas   eax,DWORD PTR es:[rdi]
   14001a2a8:	xchg   ebp,eax
   14001a2a9:	jae    0x14001a30f
   14001a2ab:	popf   
   14001a2ac:	lods   eax,DWORD PTR ds:[rsi]
   14001a2ad:	add    BYTE PTR [rax+0x25fb2b6],bl
   14001a2b3:	(bad)  
   14001a2b4:	mov    ah,0x61
   14001a2b6:	lock movabs eax,ds:0xbf7cebf795e7b7bb
   14001a2c0:	mov    esi,0x2a80c07
   14001a2c5:	cwde   
   14001a2c6:	sbb    BYTE PTR [rdx*1+0x690f2af2],ch
   14001a2cd:	sub    DWORD PTR [rax+0x5c],edx
   14001a2d0:	xlat   BYTE PTR ds:[rbx]
   14001a2d1:	movabs ds:0xea1e5543a8715001,al
   14001a2da:	push   rsp
   14001a2db:	push   rbp
   14001a2dc:	int    0x9d
   14001a2de:	and    ah,dh
   14001a2e0:	mov    ebx,0x288023f4
   14001a2e5:	xchg   ebp,eax
   14001a2e6:	mov    edi,0x873e3ef1
   14001a2eb:	lods   eax,DWORD PTR ds:[rsi]
   14001a2ec:	shl    BYTE PTR [rip+0xffffffffabc00100],0x6c        # 0xebc1a3f3
   14001a2f3:	(bad)  
   14001a2f4:	lock movabs ds:0xad12c99740016d8,eax
   14001a2fe:	pop    rsi
   14001a2ff:	jne    0x14001a328
   14001a301:	test   BYTE PTR [rdi+0x4],0x80
   14001a305:	cli    
   14001a306:	adc    eax,DWORD PTR [rip+0x7bb5afa6]        # 0x1bbb752b2
   14001a30c:	nop
   14001a30d:	rex.WRX movabs rax,ds:0xab99806c45200258
   14001a317:	ja     0x14001a382
   14001a319:	sbb    eax,DWORD PTR [rax]
   14001a31b:	retf   
   14001a31c:	(bad)  
   14001a31d:	adc    BYTE PTR [rax-0x15ed9e4d],ah
   14001a323:	add    BYTE PTR [rbx+0x10],al
   14001a326:	ficom  DWORD PTR [rsi-0x4e7e51a5]
   14001a32c:	and    edi,DWORD PTR [rdi+0x180420df]
   14001a332:	add    BYTE PTR [rdx],al
   14001a334:	and    BYTE PTR [rax],ah
   14001a336:	or     eax,0x1f3b0100
   14001a33b:	add    ah,dl
   14001a33d:	mov    ah,0x1c
   14001a33f:	push   rbp
   14001a340:	jne    0x14001a389
   14001a342:	mov    gs,WORD PTR [rcx-0x559c2946]
   14001a348:	push   rsi
   14001a349:	dec    BYTE PTR [rip+0xffffffffea1bf810]        # 0x12a1d9b5f
   14001a34f:	add    DWORD PTR [rbx],ebx
   14001a351:	(bad)  
   14001a352:	iret   
   14001a353:	jae    0x14001a362
   14001a355:	(bad)  
   14001a356:	(bad)  
   14001a357:	pushf  
   14001a358:	or     eax,0xc21ec199
   14001a35d:	jge    0x14001a395
   14001a35f:	add    r13b,BYTE PTR [rbx-0x465ffcd3]
   14001a366:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a367:	sub    al,0xc2
   14001a369:	adc    dh,BYTE PTR [rdx+rsi*1+0x56dad7d3]
   14001a370:	(bad)  
   14001a371:	(bad)  
   14001a372:	push   rsi
   14001a373:	add    BYTE PTR [rsp+rbx*2-0x4c],cl
   14001a377:	mov    r13d,0x9a8b6cb1
   14001a37d:	mov    ch,0x36
   14001a37f:	rex.WRB pop r11
   14001a381:	(bad)  
   14001a382:	clc    
   14001a383:	hlt    
   14001a384:	mov    eax,DWORD PTR [rbp+0x1d]
   14001a387:	mov    al,0x43
   14001a389:	mov    cl,0xe0
   14001a38b:	movabs eax,ds:0x7774fb88dab919e5
   14001a394:	mov    esi,0xc1002d5a
   14001a399:	push   rax
   14001a39a:	fsubr  st(4),st
   14001a39c:	sub    edx,ebp
   14001a39e:	add    BYTE PTR [rax-0x41],0xef
   14001a3a2:	sub    ebp,DWORD PTR [rbx+0x10016ad3]
   14001a3a8:	mov    al,0xe3
   14001a3aa:	fscale 
   14001a3ac:	xor    BYTE PTR [rdi+0x535bada1],bh
   14001a3b2:	jge    0x14001a39f
   14001a3b4:	jno    0x14001a3c3
   14001a3b6:	or     bh,dh
   14001a3b8:	xchg   BYTE PTR [rdx+0x40],cl
   14001a3bb:	lods   eax,DWORD PTR ds:[rsi]
   14001a3bc:	loopne 0x14001a3eb
   14001a3be:	lock pop rbp
   14001a3c0:	add    bh,cl
   14001a3c2:	push   rdi
   14001a3c3:	pop    rsi
   14001a3c4:	addr32 cld 
   14001a3c6:	cld    
   14001a3c7:	xchg   ebp,eax
   14001a3c8:	xor    DWORD PTR [rdi],eax
   14001a3ca:	add    BYTE PTR [rbp-0x63],cl
   14001a3cd:	push   rsi
   14001a3ce:	push   rdi
   14001a3cf:	fistp  DWORD PTR [rcx+0x600088da]
   14001a3d5:	gs lock (bad) 
   14001a3d8:	(bad)  
   14001a3d9:	mov    ch,0x87
   14001a3db:	mov    cl,0x4
   14001a3dd:	shr    BYTE PTR [rdi],0xde
   14001a3e0:	call   QWORD PTR [rbp+rdi*4+0x22]
   14001a3e4:	scas   al,BYTE PTR es:[rdi]
   14001a3e5:	(bad)  
   14001a3e6:	retf   0xcd92
   14001a3e9:	push   0xffffffffffffffda
   14001a3eb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a3ec:	(bad)  [rbp-0x20]
   14001a3ef:	xchg   DWORD PTR [rax+0x4e],eax
   14001a3f2:	data16 jno 0x14001a39a
   14001a3f5:	mov    al,bh
   14001a3f7:	(bad)  
   14001a3f8:	sbb    eax,0x78022218
   14001a3fd:	hlt    
   14001a3fe:	in     al,0x69
   14001a400:	jne    0x14001a3f0
   14001a402:	loop   0x14001a429
   14001a404:	mov    ebp,0x7bba3b5b
   14001a409:	push   rsp
   14001a40a:	movsxd edi,ebx
   14001a40c:	push   rcx
   14001a40d:	xor    DWORD PTR [rbx+rbx*4],eax
   14001a410:	(bad)  
   14001a411:	mov    ch,0x3b
   14001a413:	movabs al,ds:0x23ef402001a444dd
   14001a41c:	add    eax,0xed8d0090
   14001a421:	(bad)  
   14001a423:	fst    DWORD PTR [rbx]
   14001a425:	(bad)  
   14001a426:	add    BYTE PTR [rdx],al
   14001a428:	and    al,al
   14001a42a:	ss rex (bad) 
   14001a42d:	in     al,dx
   14001a42e:	sub    DWORD PTR [rcx-0x93ddf2f],ebp
   14001a434:	pop    rax
   14001a435:	mov    eax,0x8c0463d5
   14001a43a:	push   0xffffffff98e3fed3
   14001a43f:	add    al,al
   14001a441:	rex.WX push rsp
   14001a443:	(bad)  
   14001a444:	pop    rax
   14001a445:	(bad)  
   14001a446:	and    al,0x7c
   14001a448:	sbb    al,0x59
   14001a44a:	clc    
   14001a44b:	mov    ecx,0x6b5f4d9
   14001a450:	fwait
   14001a451:	cs (bad) 
   14001a453:	rex.WXB add r12b,cl
   14001a456:	rex.WXB (bad) [rip+0xffffffffe6172c0c]        # 0x12618d069
   14001a45d:	je     0x14001a407
   14001a45f:	xrelease rex.XB xchg DWORD PTR [r11-0x79],esi
   14001a464:	pop    rsp
   14001a465:	xchg   edi,eax
   14001a466:	and    al,0x4c
   14001a468:	pop    rsp
   14001a469:	and    eax,0x1aa1d6e
   14001a46e:	sti    
   14001a46f:	add    bh,ch
   14001a471:	add    BYTE PTR [rsi],ah
   14001a473:	ret    
   14001a474:	ins    BYTE PTR es:[rdi],dx
   14001a475:	cwde   
   14001a476:	jle    0x14001a420
   14001a478:	rex.XB test al,0xf3
   14001a47b:	test   BYTE PTR [rsi+0x44],bh
   14001a47e:	adc    ah,BYTE PTR [rax-0x57eb6ff2]
   14001a484:	add    bh,BYTE PTR [rsi]
   14001a486:	or     edx,0x41
   14001a489:	repnz add al,0xb9
   14001a48c:	xchg   BYTE PTR [rdi],ch
   14001a48e:	(bad)  
   14001a48f:	adc    al,0x0
   14001a491:	push   rsi
   14001a492:	jl     0x14001a486
   14001a494:	ror    DWORD PTR [rdx-0x4b],0xc2
   14001a498:	movabs eax,ds:0xdb99b458c45b2693
   14001a4a1:	or     DWORD PTR [rax-0x5a33147f],eax
   14001a4a7:	adc    edi,DWORD PTR [rax+rdx*8]
   14001a4aa:	xor    edi,DWORD PTR [rdi-0x5ef217b8]
   14001a4b0:	(bad)  
   14001a4b1:	test   BYTE PTR [rsi],bl
   14001a4b3:	adc    DWORD PTR [rdx+0x42cbe85b],edi
   14001a4b9:	mov    bh,0xb
   14001a4bb:	(bad)  [rdi]
   14001a4bd:	hlt    
   14001a4be:	or     al,0x21
   14001a4c0:	xchg   edx,eax
   14001a4c1:	add    al,0x53
   14001a4c4:	mov    WORD PTR [rcx],?
   14001a4c6:	lods   al,BYTE PTR ds:[rsi]
   14001a4c7:	jl     0x14001a4d5
   14001a4c9:	cmp    eax,0xcd83833c
   14001a4ce:	sbb    eax,0xf8c00d5a
   14001a4d3:	out    0xae,al
   14001a4d5:	xchg   ebx,eax
   14001a4d6:	(bad)  
   14001a4d7:	nop
   14001a4d8:	add    al,0x48
   14001a4da:	(bad)  
   14001a4db:	in     al,dx
   14001a4dc:	add    DWORD PTR [rbp+rax*1+0xb60476],esp
   14001a4e3:	icebp  
   14001a4e4:	or     DWORD PTR [rdx+riz*4+0x4c4d40ca],0xa0c0014c
   14001a4ef:	es stos DWORD PTR es:[rdi],eax
   14001a4f1:	mov    esp,DWORD PTR [rcx+0x2155764c]
   14001a4f7:	mov    edi,0xdb23f05b
   14001a4fc:	add    BYTE PTR [rax+0x7],al
   14001a4ff:	xor    ebx,DWORD PTR [rcx+0x571e7a4e]
   14001a505:	push   rdi
   14001a506:	rex.WRB push r9
   14001a508:	mov    bl,0xf7
   14001a50a:	push   QWORD PTR [rax]
   14001a50c:	pushf  
   14001a50d:	jp     0x14001a48f
   14001a50f:	xchg   eax,ecx
   14001a511:	add    ah,BYTE PTR [rdx]
   14001a513:	shl    bl,0xab
   14001a516:	(bad)  
   14001a517:	mov    ah,0xc7
   14001a519:	or     BYTE PTR [rax-0x7fe73679],0x30
   14001a520:	sbb    eax,0x42161fe6
   14001a525:	adc    ah,BYTE PTR [rax]
   14001a527:	add    eax,0xb60700
   14001a52c:	push   0x63
   14001a52e:	mov    bl,0xa8
   14001a530:	add    DWORD PTR [rsi+rcx*4+0x4d],ebp
   14001a534:	(bad)  
   14001a535:	je     0x14001a531
   14001a537:	xlat   BYTE PTR ds:[rbx]
   14001a538:	(bad)  
   14001a539:	cwde   
   14001a53a:	add    ah,BYTE PTR [rax]
   14001a53c:	pushf  
   14001a53d:	scas   al,BYTE PTR es:[rdi]
   14001a53e:	and    dl,bl
   14001a540:	enter  0xb922,0xa6
   14001a544:	fst    DWORD PTR [rsi+0x71]
   14001a547:	(bad)  
   14001a548:	jmp    rbp
   14001a54a:	ds push 0xb
   14001a54d:	add    dh,ah
   14001a54f:	rex.WX
   14001a550:	es jo  0x14001a4fb
   14001a553:	rex.X xlat BYTE PTR ds:[rbx]
   14001a555:	xor    BYTE PTR [rdx-0x8],dh
   14001a558:	xchg   ebx,eax
   14001a559:	clc    
   14001a55a:	push   rax
   14001a55b:	retf   
   14001a55c:	rcl    DWORD PTR [rbx],1
   14001a55e:	pop    rdx
   14001a55f:	or     ah,al
   14001a561:	sbb    eax,esp
   14001a563:	cli    
   14001a564:	(bad)  
   14001a565:	or     al,0x62
   14001a567:	(bad)  
   14001a568:	sbb    BYTE PTR [rax],al
   14001a56a:	loopne 0x14001a4fd
   14001a56c:	out    0x86,eax
   14001a56e:	sbb    al,al
   14001a570:	sbb    BYTE PTR [rsi+rbp*8],ah
   14001a573:	add    cl,0xb9
   14001a576:	xor    dh,BYTE PTR [rbx]
   14001a578:	sar    cl,1
   14001a57a:	jl     0x14001a59c
   14001a57c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a57d:	add    BYTE PTR [rax-0x72e259ae],dh
   14001a583:	stos   BYTE PTR es:[rdi],al
   14001a584:	loopne 0x14001a584
   14001a586:	movabs ds:0x760e851461ed7350,al
   14001a58f:	popf   
   14001a590:	add    al,0xa8
   14001a592:	or     BYTE PTR [rdx-0x623168a5],bh
   14001a598:	cmp    DWORD PTR [rdi-0x74e7ba23],esp
   14001a59e:	sbb    al,al
   14001a5a0:	sbb    ah,dl
   14001a5a2:	jbe    0x14001a524
   14001a5a4:	in     al,dx
   14001a5a5:	cld    
   14001a5a6:	(bad)  
   14001a5a7:	add    BYTE PTR [rax+0x1f],ah
   14001a5aa:	(bad)  
   14001a5ab:	sub    al,0x62
   14001a5ad:	(bad)  
   14001a5ae:	loopne 0x14001a5f9
   14001a5b0:	loopne 0x14001a617
   14001a5b2:	jl     0x14001a5dc
   14001a5b4:	and    rdi,r15
   14001a5b7:	(bad)  
   14001a5b8:	mov    gs,WORD PTR [rcx]
   14001a5ba:	add    BYTE PTR [rax+0x7ace1805],bl
   14001a5c0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a5c1:	loopne 0x14001a54c
   14001a5c3:	cwde   
   14001a5c4:	xchg   edi,eax
   14001a5c5:	test   DWORD PTR [rdi],ecx
   14001a5c7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a5c8:	push   0x12
   14001a5ca:	add    BYTE PTR [rax],al
   14001a5cc:	mov    bh,0x82
   14001a5ce:	fild   QWORD PTR [rbx]
   14001a5d0:	jge    0x14001a64f
   14001a5d2:	push   0xffffffffffffffab
   14001a5d4:	(bad)  
   14001a5d5:	or     al,0x10
   14001a5d7:	in     eax,dx
   14001a5d8:	clc    
   14001a5d9:	cld    
   14001a5da:	mov    BYTE PTR [rdx+0x44],bh
   14001a5dd:	jle    0x14001a60f
   14001a5df:	add    BYTE PTR [rax+0x9],dl
   14001a5e2:	add    BYTE PTR [rax],al
   14001a5e4:	or     DWORD PTR [rcx+0x20ee2001],esp
   14001a5ea:	cs out 0xbb,al
   14001a5ed:	adc    cl,BYTE PTR [rdx+rdi*4-0x38e2b016]
   14001a5f4:	mov    esp,0xa19c2833
   14001a5f9:	push   rax
   14001a5fa:	shr    DWORD PTR [rbp+0x5b],0xd6
   14001a5fe:	and    al,0xce
   14001a600:	iret   
   14001a601:	sub    al,0xc4
   14001a603:	sbb    ecx,edx
   14001a605:	adc    edx,DWORD PTR [rip+0x3c355f00]        # 0x17c37050b
   14001a60b:	(bad)  
   14001a60c:	sub    eax,0x23c12
   14001a611:	call   0xc002680e
   14001a616:	add    al,0x40
   14001a618:	xor    eax,0xc400940c
   14001a61d:	(bad)  
   14001a61e:	cld    
   14001a61f:	jmp    0x14001a5c9
   14001a621:	or     eax,0x966581bd
   14001a626:	add    eax,esp
   14001a628:	sbb    eax,0x966dbed0
   14001a62d:	lods   al,BYTE PTR ds:[rsi]
   14001a62e:	rex.WR or r12b,BYTE PTR [rcx-0x38]
   14001a632:	je     0x14001a5b6
   14001a634:	add    ah,al
   14001a636:	cmp    DWORD PTR [rip+0x1d6ecee0],ecx        # 0x15d70751c
   14001a63c:	xor    eax,0x2441dc4
   14001a641:	movabs al,ds:0x30612a23c0018202
   14001a64a:	sbb    eax,DWORD PTR [rax-0x1a806f60]
   14001a650:	(bad)
   14001a653:	hlt    
   14001a654:	loop   0x14001a6b1
   14001a656:	pop    rbp
   14001a657:	or     al,0x92
   14001a659:	mov    WORD PTR [rbp+0x27],?
   14001a65c:	repnz cli 
   14001a65e:	(bad)  
   14001a65f:	fbld   TBYTE PTR [rsi]
   14001a661:	sub    al,BYTE PTR [rax]
   14001a663:	hlt    
   14001a664:	jmp    QWORD PTR [rcx+rax*4]
   14001a667:	and    DWORD PTR [rsi-0x4c],esi
   14001a66a:	jbe    0x14001a671
   14001a66c:	test   ecx,eax
   14001a66e:	xor    dl,bl
   14001a670:	mov    al,0x1
   14001a672:	fdivr  st,st(5)
   14001a674:	rex.RX sub al,0xc0
   14001a677:	lock add cl,al
   14001a67a:	(bad)  
   14001a67b:	ins    BYTE PTR es:[rdi],dx
   14001a67c:	bnd jnp 0x14001a680
   14001a67f:	fcomi  st,st(2)
   14001a681:	add    bl,BYTE PTR [rbx+0x1cc4572]
   14001a687:	mov    al,0xe2
   14001a689:	loopne 0x14001a6af
   14001a68b:	fistp  DWORD PTR [rcx+rax*2+0x2b]
   14001a68f:	push   rcx
   14001a690:	sar    BYTE PTR [rcx],0x5
   14001a693:	rex.WRXB
   14001a694:	and    al,BYTE PTR es:[rax]
   14001a697:	(bad)  
   14001a698:	rcr    DWORD PTR [rsi-0x2eea2e],cl
   14001a69e:	jns    0x14001a69d
   14001a6a0:	cdq    
   14001a6a1:	rex.R mov dl,0x86
   14001a6a4:	and    al,0x87
   14001a6a6:	shl    ch,1
   14001a6a8:	mov    BYTE PTR [rbp+rbx*1+0x8],bh
   14001a6ac:	(bad)  
   14001a6ad:	in     al,dx
   14001a6ae:	(bad)
   14001a6b2:	sbb    dh,BYTE PTR [rcx+0x0]
   14001a6b5:	xchg   edx,eax
   14001a6b6:	rex.WRB test BYTE PTR [r13+0x5fdadc3f],r10b
   14001a6bd:	xor    eax,0x98ee5fe4
   14001a6c2:	add    eax,DWORD PTR [rax]
   14001a6c4:	push   rdi
   14001a6c5:	sub    ebx,DWORD PTR [rcx+rsi*8+0x410d5670]
   14001a6cc:	out    0x4,al
   14001a6ce:	cdq    
   14001a6cf:	sub    eax,0x2d54a140
   14001a6d4:	add    al,0x43
   14001a6d6:	rex.WR (bad) 
   14001a6d8:	mov    bl,0x13
   14001a6da:	(bad)  
   14001a6db:	movabs ds:0x7eec6e3a173f8004,al
   14001a6e4:	jbe    0x14001a719
   14001a6e6:	and    DWORD PTR [rsi-0x5e],ebx
   14001a6e9:	add    esp,0xb0708dfd
   14001a6ef:	adc    DWORD PTR [rcx],ecx
   14001a6f1:	xor    al,0xc4
   14001a6f3:	mov    edi,0x489ffa1
   14001a6f8:	xchg   edx,eax
   14001a6f9:	pop    rdi
   14001a6fa:	and    BYTE PTR [rip+0xffffffffa816d0dc],dh        # 0xe81877dc
   14001a700:	(bad)  
   14001a701:	jl     0x14001a6cd
   14001a703:	xchg   esi,eax
   14001a704:	sbb    DWORD PTR [rcx-0x63],eax
   14001a707:	(bad)  
   14001a708:	fs add eax,0x1f821aad
   14001a70e:	xchg   esi,eax
   14001a70f:	cmp    al,0x1f
   14001a711:	xchg   ebp,eax
   14001a712:	(bad)  
   14001a713:	add    ebp,DWORD PTR [rbx]
   14001a715:	sub    edi,DWORD PTR [rax-0x38]
   14001a718:	rex.R mov WORD PTR [rcx],es
   14001a71b:	lock rex.RB push 0x65
   14001a71f:	je     0x14001a700
   14001a721:	test   al,bh
   14001a723:	(bad)  
   14001a724:	call   0x170041999
   14001a729:	(bad)  
   14001a72a:	jo     0x14001a72d
   14001a72c:	mov    DWORD PTR [rdx+rsi*4],eax
   14001a72f:	jmp    0x14001a792
   14001a731:	ds test al,0xf5
   14001a735:	(bad)  
   14001a736:	test   BYTE PTR [rax],al
   14001a738:	or     BYTE PTR [rax-0x27],al
   14001a73b:	in     al,dx
   14001a73c:	iret   
   14001a73d:	add    eax,0x2ff48590
   14001a742:	stos   BYTE PTR es:[rdi],al
   14001a743:	jne    0x14001a7b3
   14001a745:	mov    bl,0x5
   14001a747:	add    cl,ah
   14001a749:	hlt    
   14001a74a:	or     BYTE PTR [rdx+0x5b],bh
   14001a74d:	push   rsi
   14001a74e:	pop    rcx
   14001a74f:	xor    al,0x0
   14001a751:	fbstp  TBYTE PTR [rsi]
   14001a753:	std    
   14001a754:	(bad)  [rax-0x6dfb975b]
   14001a75a:	xchg   BYTE PTR [rdx+0x23],dl
   14001a75d:	push   rcx
   14001a75e:	(bad)  
   14001a75f:	rcr    BYTE PTR [rdi+0x7da5690a],0xea
   14001a766:	fdivr  QWORD PTR [rcx-0x4b]
   14001a769:	rex.WRX (bad) 
   14001a76b:	cmp    BYTE PTR [rcx+0x144a9863],ch
   14001a771:	xor    BYTE PTR [rax],bh
   14001a773:	(bad)  
   14001a774:	add    BYTE PTR [rax],al
   14001a776:	(bad)  
   14001a777:	ds (bad) 
   14001a779:	add    BYTE PTR [rsi+rax*2],dl
   14001a77c:	(bad)  
   14001a77d:	add    BYTE PTR [rax+0x1d448150],dh
   14001a783:	(bad)  
   14001a784:	imul   edi,DWORD PTR [rbp-0x60],0x653dff54
   14001a78b:	xlat   BYTE PTR ds:[rbx]
   14001a78c:	xchg   esp,eax
   14001a78d:	xor    BYTE PTR [rdx-0x6c5153e0],bl
   14001a793:	(bad)  
   14001a794:	cmp    esi,ebp
   14001a796:	xor    DWORD PTR [rdx],esi
   14001a798:	shr    esi,1
   14001a79a:	(bad)  
   14001a79b:	rex cld 
   14001a79d:	xchg   DWORD PTR [rdx],ebx
   14001a79f:	and    edi,ebx
   14001a7a1:	jb     0x14001a74d
   14001a7a3:	shl    ah,cl
   14001a7a5:	outs   dx,DWORD PTR ds:[rsi]
   14001a7a6:	sbb    al,0x6a
   14001a7a8:	out    0x20,al
   14001a7aa:	icebp  
   14001a7ab:	(bad)
   14001a7af:	sub    edx,DWORD PTR [rsi+rbp*4-0xf]
   14001a7b3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a7b4:	adc    esp,DWORD PTR [rdi+0x59d5aacf]
   14001a7ba:	add    eax,0x42982aba
   14001a7bf:	pcmpeqb mm7,QWORD PTR [rdi+0x70]
   14001a7c3:	adc    BYTE PTR ss:[rax],al
   14001a7c6:	sar    BYTE PTR [rsp+rcx*1+0x3f],0x5c
   14001a7cb:	(bad)  
   14001a7cc:	in     al,dx
   14001a7cd:	add    dh,BYTE PTR [rdi+rdi*1-0x1f]
   14001a7d1:	(bad)  
   14001a7d3:	adc    edi,eax
   14001a7d5:	movabs eax,ds:0xe2be9eee8af7a000
   14001a7de:	iret   
   14001a7df:	xor    ebx,eax
   14001a7e1:	(bad)  
   14001a7e2:	sub    DWORD PTR [rsp+rbx*4],esi
   14001a7e5:	(bad)  
   14001a7e6:	lock push rax
   14001a7e8:	xchg   esi,eax
   14001a7e9:	cli    
   14001a7ea:	(bad)
   14001a7f0:	repz sbb eax,0x6824f351
   14001a7f6:	jl     0x14001a7b9
   14001a7f8:	push   rsi
   14001a7f9:	add    DWORD PTR [rax-0x74],edx
   14001a7fc:	sahf   
   14001a7fd:	ret    
   14001a7fe:	jge    0x14001a86d
   14001a800:	(bad)  
   14001a801:	push   rbx
   14001a802:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a803:	ins    DWORD PTR es:[rdi],dx
   14001a804:	sahf   
   14001a805:	sub    BYTE PTR [rax],al
   14001a807:	adc    BYTE PTR [rdx-0x12],0x46
   14001a80b:	popf   
   14001a80c:	and    ebp,ebp
   14001a80e:	cmp    DWORD PTR [rbp-0x161b9baa],ebp
   14001a814:	xor    dh,BYTE PTR [rdx]
   14001a816:	jbe    0x14001a84b
   14001a818:	cs sbb eax,0x9e223d96
   14001a81e:	fisttp QWORD PTR [rdi]
   14001a820:	rol    DWORD PTR [rcx],cl
   14001a822:	add    BYTE PTR [rbx],bh
   14001a824:	(bad)  
   14001a825:	out    0x63,al
   14001a827:	clc    
   14001a828:	push   rcx
   14001a829:	adc    eax,0xb4488b84
   14001a82e:	nop
   14001a82f:	bnd jno 0x14001a7e4
   14001a832:	add    BYTE PTR [rcx+0x15],0x41
   14001a836:	jmp    0x14001a7cc
   14001a838:	mov    dl,0x79
   14001a83a:	push   rsp
   14001a83b:	in     al,dx
   14001a83c:	xchg   BYTE PTR [rdx+0xd4ac337],bl
   14001a842:	xor    esp,DWORD PTR [rsi+0x6e]
   14001a845:	cmp    bl,ah
   14001a847:	out    dx,eax
   14001a848:	lock test eax,0x5fe1d30a
   14001a84e:	ins    BYTE PTR es:[rdi],dx
   14001a84f:	test   DWORD PTR [rax-0x21],edx
   14001a852:	mov    bh,0xbd
   14001a854:	(bad)  
   14001a855:	scas   al,BYTE PTR es:[rdi]
   14001a856:	in     eax,0xdf
   14001a858:	cmp    DWORD PTR [rax+0x2119f1],ebx
   14001a85e:	mov    esi,0x8fe7ba8e
   14001a863:	sbb    eax,0xdeb4a7dd
   14001a868:	rex.RX test BYTE PTR [rbx],r10b
   14001a86b:	leave  
   14001a86c:	or     ecx,DWORD PTR [rsi+0x3]
   14001a86f:	jmp    0x14001a8d3
   14001a871:	adc    cl,bl
   14001a873:	std    
   14001a874:	add    BYTE PTR [rax],al
   14001a876:	out    0x7,al
   14001a878:	(bad)  
   14001a879:	(bad)  
   14001a87a:	loopne 0x14001a89a
   14001a87c:	push   0xffffffffffffffd1
   14001a87e:	(bad)  
   14001a87f:	movabs al,ds:0xdfe1181cd43f021
   14001a888:	out    dx,al
   14001a889:	adc    esi,DWORD PTR [rax-0x33a7fff3]
   14001a88f:	out    0x2e,eax
   14001a891:	neg    DWORD PTR [rax-0x42]
   14001a894:	mov    ecx,0xdc867914
   14001a899:	mov    cl,0x1d
   14001a89b:	out    0x77,al
   14001a89d:	ins    BYTE PTR es:[rdi],dx
   14001a89e:	(bad)
   14001a8a1:	(bad)  
   14001a8a2:	jg     0x14001a8cb
   14001a8a4:	jrcxz  0x14001a884
   14001a8a6:	movabs ds:0x30c5bf62000022b1,al
   14001a8af:	clc    
   14001a8b0:	(bad)  
   14001a8b1:	rex.WXB sub QWORD PTR [r15],rdx
   14001a8b4:	rex.RX (bad) 
   14001a8b6:	ds (bad) 
   14001a8b8:	push   rcx
   14001a8b9:	(bad)  
   14001a8ba:	lods   eax,DWORD PTR ds:[rsi]
   14001a8bb:	test   DWORD PTR [rbp-0x44],0xc61fa21b
   14001a8c2:	(bad)  
   14001a8c3:	xor    ebx,DWORD PTR [rdi]
   14001a8c5:	movabs ds:0xf7e05d409a8fbd10,eax
   14001a8ce:	scas   eax,DWORD PTR es:[rdi]
   14001a8cf:	ficom  DWORD PTR [rbx-0x14e2f751]
   14001a8d5:	cmp    eax,0x70556760
   14001a8da:	and    al,0x86
   14001a8dc:	fcmovb st,st(0)
   14001a8de:	(bad)  
   14001a8df:	(bad)  
   14001a8e0:	and    edi,DWORD PTR [rbp+0x6a]
   14001a8e3:	adc    BYTE PTR [rcx-0x7f82d4a4],ch
   14001a8e9:	rex.WR (bad) 
   14001a8eb:	and    DWORD PTR [rbx],ebp
   14001a8ed:	addr32 (bad) 
   14001a8ef:	popf   
   14001a8f0:	mov    ah,0x52
   14001a8f2:	push   rsp
   14001a8f3:	adc    ah,BYTE PTR [rbp+0x0]
   14001a8f6:	(bad)  
   14001a8f7:	in     eax,dx
   14001a8f8:	jmp    0x14001a8e8
   14001a8fa:	push   rsi
   14001a8fb:	cli    
   14001a8fc:	add    BYTE PTR [rdi],dl
   14001a8fe:	xchg   r11,rax
   14001a900:	(bad)  
   14001a901:	scas   al,BYTE PTR es:[rdi]
   14001a902:	sbb    esp,DWORD PTR [rdx-0x64]
   14001a905:	rex (bad) 
   14001a907:	cmp    bh,BYTE PTR [rbp-0x5383302c]
   14001a90d:	cld    
   14001a90e:	(bad)  
   14001a90f:	out    0x53,al
   14001a911:	and    al,0xa
   14001a913:	repz leave 
   14001a915:	(bad)  
   14001a916:	push   rdx
   14001a917:	cmp    ah,BYTE PTR [rsi+0x14]
   14001a91a:	sub    DWORD PTR [rsi],0xffffffcf
   14001a91d:	int3   
   14001a91e:	push   rbp
   14001a91f:	addr32 (bad) 
   14001a921:	(bad)  
   14001a922:	(bad)  
   14001a923:	add    BYTE PTR [rdi-0x59728ad6],ah
   14001a929:	test   DWORD PTR [rbx+0x64],eax
   14001a92c:	ffreep st(2)
   14001a92e:	or     DWORD PTR [rip+0xffffffffc8a40c1b],ecx        # 0x108a5b54f
   14001a934:	xchg   esp,eax
   14001a935:	sub    ah,BYTE PTR [rbx+0x2a9b0e70]
   14001a93b:	push   0x77fa6adf
   14001a940:	cs sub edi,edi
   14001a943:	(bad)  
   14001a944:	mov    ch,0x0
   14001a946:	shr    bh,0xab
   14001a949:	dec    BYTE PTR [rsi+0x5f]
   14001a94c:	pop    rbp
   14001a94d:	adc    dh,dh
   14001a94f:	icebp  
   14001a950:	(bad)  
   14001a951:	scas   eax,DWORD PTR es:[rdi]
   14001a952:	(bad)  
   14001a953:	fld    QWORD PTR [rbx+rdi*2+0x6587f8b1]
   14001a95a:	mov    esi,0x8618fc58
   14001a95f:	add    al,0x7c
   14001a961:	xor    dl,bh
   14001a963:	test   al,0x2f
   14001a965:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a966:	add    ch,al
   14001a968:	in     al,dx
   14001a969:	test   DWORD PTR [rax+0x2e],eax
   14001a96c:	xchg   BYTE PTR [rsi+0x29afeb89],al
   14001a972:	add    BYTE PTR [rax+0x7bbc64f7],ah
   14001a978:	cmp    BYTE PTR [rip+0xffffffffe22c9143],bl        # 0x1222e3ac1
   14001a97e:	adc    bl,al
   14001a980:	fst    DWORD PTR [rdx]
   14001a982:	add    ecx,DWORD PTR [rcx]
   14001a984:	jne    0x14001a9e7
   14001a986:	xor    eax,DWORD PTR [rax]
   14001a988:	out    0x1b,al
   14001a98a:	scas   al,BYTE PTR es:[rdi]
   14001a98b:	(bad)  
   14001a98c:	rex.WRB lahf 
   14001a98e:	xor    BYTE PTR [rax],dl
   14001a990:	fistp  WORD PTR [rip+0x70929e2b]        # 0x1b09447c1
   14001a996:	ret    
   14001a997:	loop   0x14001a948
   14001a999:	cmc    
   14001a99a:	sbb    edi,DWORD PTR [rbp+0x10]
   14001a99d:	jmp    QWORD PTR [rsi]
   14001a99f:	(bad)  
   14001a9a0:	retf   
   14001a9a1:	fistp  QWORD PTR [rax+0xf]
   14001a9a4:	out    dx,eax
   14001a9a5:	(bad)
   14001a9a8:	loope  0x14001a95d
   14001a9aa:	push   rsi
   14001a9ab:	cmp    al,0x6
   14001a9ad:	(bad)  
   14001a9ae:	or     bh,ch
   14001a9b0:	imul   eax,DWORD PTR [rdi-0x43ab1830],0xffffff9c
   14001a9b7:	sbb    al,dh
   14001a9b9:	fs (bad) 
   14001a9bb:	mov    ebx,0x385f6e16
   14001a9c0:	(bad)  
   14001a9c1:	cmp    ch,BYTE PTR [rsi-0x299c52e4]
   14001a9c7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a9c8:	push   rsp
   14001a9c9:	lahf   
   14001a9ca:	rex.WXB fistp WORD PTR cs:[r8+0x33]
   14001a9cf:	(bad)  [rdx]
   14001a9d1:	add    BYTE PTR [rsi+0x6965c7c5],bh
   14001a9d7:	out    0xe1,al
   14001a9d9:	mov    dl,0xd1
   14001a9db:	(bad)  
   14001a9dc:	shr    DWORD PTR [rsi+0x36],0xdc
   14001a9e0:	cmp    eax,0x37e5f65d
   14001a9e5:	clc    
   14001a9e6:	mov    ah,0xd1
   14001a9e8:	(bad)  
   14001a9e9:	jmp    QWORD PTR [rsi]
   14001a9eb:	rcl    BYTE PTR [rdi-0x16],cl
   14001a9ee:	ja     0x14001a9e7
   14001a9f0:	nop
   14001a9f1:	adc    cl,BYTE PTR [rax+0xb]
   14001a9f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a9f5:	mov    BYTE PTR [rsi+0x29],0xfd
   14001a9f9:	or     ch,BYTE PTR [rdx+0x21]
   14001a9fc:	(bad)  
   14001a9fd:	movabs rdx,0x95969e81b9dbc549
   14001aa07:	xor    DWORD PTR [rdi+0x3e],esp
   14001aa0a:	xchg   edx,eax
   14001aa0b:	xchg   bl,ah
   14001aa0d:	push   0xc595123
   14001aa12:	lahf   
   14001aa13:	or     al,0xd5
   14001aa15:	in     eax,0x4c
   14001aa17:	or     DWORD PTR [rdx],ebx
   14001aa19:	rex (bad) 
   14001aa1c:	xor    BYTE PTR [rdi-0x43],cl
   14001aa1f:	xchg   ebp,eax
   14001aa20:	(bad)  
   14001aa21:	js     0x14001aa5b
   14001aa23:	and    DWORD PTR [rax],0x18e47d26
   14001aa29:	and    DWORD PTR [rsi+0x62],ebx
   14001aa2c:	cmc    
   14001aa2d:	imul   edi,esp,0xffffffee
   14001aa30:	sahf   
   14001aa31:	adc    ecx,ebp
   14001aa33:	cmp    ecx,0xffffffb5
   14001aa36:	(bad)  
   14001aa37:	(bad)  
   14001aa38:	(bad)  
   14001aa39:	push   rcx
   14001aa3a:	cli    
   14001aa3b:	lods   eax,DWORD PTR ds:[rsi]
   14001aa3c:	jge    0x14001aabb
   14001aa3e:	icebp  
   14001aa3f:	add    al,0xf0
   14001aa41:	or     BYTE PTR [rax],dh
   14001aa43:	(bad)  
   14001aa44:	xor    DWORD PTR [rdx],edx
   14001aa46:	adc    ecx,edi
   14001aa48:	push   rsp
   14001aa49:	(bad)  
   14001aa4a:	xchg   ebx,eax
   14001aa4b:	sub    dh,dh
   14001aa4d:	scas   eax,DWORD PTR es:[rdi]
   14001aa4e:	int    0xa1
   14001aa50:	cwde   
   14001aa51:	jg     0x14001aaa0
   14001aa53:	add    DWORD PTR [rax],eax
   14001aa55:	ror    DWORD PTR [rcx],1
   14001aa57:	sbb    al,0xab
   14001aa59:	rex.RB pop r11
   14001aa5b:	fiadd  DWORD PTR [rdi-0x5b]
   14001aa5e:	(bad)  
   14001aa5f:	rex.RB in eax,dx
   14001aa61:	mov    bh,0xce
   14001aa63:	fdivp  st(7),st
   14001aa65:	out    dx,eax
   14001aa66:	cli    
   14001aa67:	rex.R rcr BYTE PTR [rbp+0x3f74f38d],cl
   14001aa6e:	rcl    edx,0xf2
   14001aa71:	push   rdi
   14001aa72:	ret    0xf862
   14001aa75:	and    BYTE PTR [rax],al
   14001aa77:	js     0x14001aacb
   14001aa79:	(bad)  
   14001aa7a:	mov    BYTE PTR [rdx+0x273346a1],cl
   14001aa80:	movabs ds:0x9f1e5f03d0bf8b7f,al
   14001aa89:	fdivrp st(0),st
   14001aa8b:	cmc    
   14001aa8c:	or     esp,esi
   14001aa8e:	add    BYTE PTR [rax+0x27debf5a],al
   14001aa94:	or     eax,0x38804c4c
   14001aa99:	(bad)  
   14001aa9a:	movabs al,ds:0x1e4c604af977cb21
   14001aaa3:	imul   ebx,eax,0x838a951b
   14001aaa9:	repz add al,BYTE PTR [rsi-0x16e00c65]
   14001aab0:	(bad)
   14001aab6:	stos   DWORD PTR es:[rdi],eax
   14001aab7:	push   rbx
   14001aab8:	mov    ebx,0xb1d1e1af
   14001aabd:	cmp    bh,BYTE PTR [rcx]
   14001aabf:	mov    edi,0x574cbf2d
   14001aac4:	in     al,dx
   14001aac5:	xchg   edx,eax
   14001aac6:	mov    cl,0xb
   14001aac8:	mov    ?,esp
   14001aaca:	and    esi,esp
   14001aacc:	sbb    DWORD PTR [rbx],0x3f
   14001aacf:	adc    ch,bh
   14001aad1:	fadd   DWORD PTR [rdx]
   14001aad3:	cld    
   14001aad4:	(bad)  
   14001aad5:	div    eax
   14001aad7:	pop    rsi
   14001aad8:	stos   BYTE PTR es:[rdi],al
   14001aad9:	jge    0x14001ab12
   14001aadb:	jl     0x14001ab33
   14001aadd:	in     al,dx
   14001aade:	(bad)  
   14001aadf:	sbb    cl,ah
   14001aae1:	loopne 0x14001aa6e
   14001aae3:	rex.WXB add r12b,sil
   14001aae6:	mov    ebx,0x6a584f74
   14001aaeb:	jmp    0x151ee0ffa
   14001aaf0:	jo     0x14001ab64
   14001aaf2:	sti    
   14001aaf3:	(bad)  
   14001aaf4:	and    eax,0xe467f304
   14001aaf9:	std    
   14001aafa:	stos   DWORD PTR es:[rdi],eax
   14001aafb:	ss sbb eax,0x95cecf08
   14001ab01:	fidivr WORD PTR [rip+0x759b3e02]        # 0x1b59ce909
   14001ab07:	xchg   esi,eax
   14001ab08:	scas   eax,DWORD PTR es:[rdi]
   14001ab09:	push   rsi
   14001ab0a:	mov    esi,esi
   14001ab0c:	loopne 0x14001aaeb
   14001ab0e:	(bad)  
   14001ab0f:	sbb    al,0xe9
   14001ab11:	or     ecx,DWORD PTR [rsi]
   14001ab13:	repz repnz (bad) 
   14001ab16:	(bad)  
   14001ab17:	adc    ah,BYTE PTR [rdx+rbp*8]
   14001ab1a:	cmp    DWORD PTR [rbx],ebx
   14001ab1c:	sbb    BYTE PTR [rdi],ch
   14001ab1e:	mov    ah,0x5a
   14001ab20:	pop    rcx
   14001ab21:	sbb    BYTE PTR [rax],ah
   14001ab23:	adc    eax,0x43c7c737
   14001ab28:	call   0x1595eaf18
   14001ab2d:	xchg   esi,eax
   14001ab2e:	adc    dh,BYTE PTR [rdx]
   14001ab30:	rex.RX test dil,r13b
   14001ab33:	ror    edx,cl
   14001ab35:	leave  
   14001ab36:	or     DWORD PTR [rdi+0x72],esi
   14001ab39:	cmp    BYTE PTR [rbp-0x290553b7],bl
   14001ab3f:	cs ffree st(6)
   14001ab42:	rex.WRB movabs r13,0x6bd4232ff69cba1e
   14001ab4c:	rex.R sti 
   14001ab4e:	movabs al,ds:0xeda09c4bde5e6181
   14001ab57:	pop    rax
   14001ab58:	movabs al,ds:0xce2a566e59a39e14
   14001ab61:	mov    cs,WORD PTR [rcx+rcx*1+0x6ad3b8a7]
   14001ab68:	call   0x173139645
   14001ab6d:	icebp  
   14001ab6e:	rex (bad) 
   14001ab70:	cmp    DWORD PTR [rdx+0x207c7614],ecx
   14001ab76:	jge    0x14001abf3
   14001ab78:	sbb    BYTE PTR [rcx-0x7c],dh
   14001ab7b:	jnp    0x14001ab4e
   14001ab7d:	jmp    0x14001abaf
   14001ab7f:	sbb    DWORD PTR [rbx],esp
   14001ab81:	iret   
   14001ab82:	call   0x126139187
   14001ab87:	sbb    esp,DWORD PTR [rcx+0x5e]
   14001ab8a:	rex.WX ret 0xdc9
   14001ab8e:	in     al,dx
   14001ab8f:	sub    cl,BYTE PTR [rax]
   14001ab91:	test   cl,al
   14001ab93:	imul   esi,edi,0xe2a513f9
   14001ab99:	lock int3 
   14001ab9b:	and    BYTE PTR [rbx],bh
   14001ab9d:	(bad)  
   14001ab9e:	or     dh,dh
   14001aba0:	or     eax,0xde2ff332
   14001aba5:	mov    DWORD PTR [rsi],ebp
   14001aba7:	sub    dh,dl
   14001aba9:	cld    
   14001abaa:	sub    eax,0xd800357b
   14001abaf:	int    0x46
   14001abb1:	enter  0x68d7,0x0
   14001abb5:	rex.RB fadd QWORD PTR [r11]
   14001abb8:	add    al,0xa3
   14001abba:	in     eax,dx
   14001abbb:	sbb    ecx,edi
   14001abbd:	ror    BYTE PTR [rax-0x25cd5e0c],0x8e
   14001abc4:	(bad)  
   14001abc5:	jbe    0x14001abc6
   14001abc7:	(bad)  
   14001abc8:	push   rbp
   14001abc9:	cmp    al,0x9e
   14001abcb:	(bad)  
   14001abcc:	(bad)  
   14001abcd:	xlat   BYTE PTR ds:[rbx]
   14001abce:	cmp    ebx,eax
   14001abd0:	or     DWORD PTR [rbx],r10d
   14001abd3:	rex.WRB add rax,0xffffffffa5d3aa88
   14001abd9:	push   rdx
   14001abda:	xor    edx,DWORD PTR [rsi-0x13]
   14001abdd:	rcl    BYTE PTR [rbp+0x800c43a],1
   14001abe3:	in     al,0xe0
   14001abe5:	push   QWORD PTR [rbx-0x49fefe35]
   14001abeb:	add    BYTE PTR [rax+riz*4+0x7],al
   14001abef:	leave  
   14001abf0:	add    bl,dh
   14001abf2:	jns    0x14001ac03
   14001abf4:	(bad)  
   14001abf5:	(bad)
   14001abfa:	rex.B movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001abfc:	shr    BYTE PTR [rip+0x56000e23],1        # 0x19601ba25
   14001ac02:	stos   BYTE PTR es:[rdi],al
   14001ac03:	jl     0x14001ac79
   14001ac05:	lods   al,BYTE PTR ds:[rsi]
   14001ac06:	mov    bl,0x7e
   14001ac08:	outs   dx,BYTE PTR ds:[rsi]
   14001ac09:	rex.X add eax,esp
   14001ac0c:	rcl    BYTE PTR [rbp+0x33433a0b],cl
   14001ac12:	ins    DWORD PTR es:[rdi],dx
   14001ac13:	(bad)
   14001ac16:	cmp    BYTE PTR [rdx-0x4f],ah
   14001ac19:	jg     0x14001ac8d
   14001ac1b:	mov    BYTE PTR [rsi+0x5],ch
   14001ac1e:	(bad)  
   14001ac1f:	adc    BYTE PTR [rax],ah
   14001ac21:	or     DWORD PTR [rax+0x3d022007],esi
   14001ac27:	mov    BYTE PTR [rbp-0x74],bh
   14001ac2a:	ds and al,0x5
   14001ac2d:	icebp  
   14001ac2e:	(bad)  
   14001ac2f:	rol    BYTE PTR [rsi+0xdfc4840],cl
   14001ac35:	adc    eax,0x448627af
   14001ac3a:	rex.WX adc al,0x86
   14001ac3d:	cwde   
   14001ac3e:	pop    rbp
   14001ac3f:	xchg   edi,eax
   14001ac40:	scas   al,BYTE PTR es:[rdi]
   14001ac41:	pushf  
   14001ac42:	xlat   BYTE PTR ds:[rbx]
   14001ac43:	add    esp,DWORD PTR [rax-0x6ff43aed]
   14001ac49:	cmp    BYTE PTR ss:[rip+0x769649b1],bl        # 0x1b697f601
   14001ac50:	icebp  
   14001ac51:	jmp    0x18789a701
   14001ac56:	adc    DWORD PTR [rdi],eax
   14001ac58:	rcl    BYTE PTR [rip+0xffffffff861a9e0c],0x9f        # 0xc61c4a6b
   14001ac5f:	rex.WRXB
   14001ac60:	rex.WB (bad) 
   14001ac62:	fnstcw WORD PTR [rip+0xffffffff93140063]        # 0xd315accb
   14001ac68:	(bad)  
   14001ac69:	sbb    BYTE PTR [rsi],bl
   14001ac6b:	jmp    0x198903bcf
   14001ac70:	add    ah,ah
   14001ac72:	mov    ch,0x6e
   14001ac74:	mov    ah,0xec
   14001ac76:	(bad)  
   14001ac77:	sahf   
   14001ac78:	xchg   edx,eax
   14001ac79:	add    DWORD PTR [rbp-0x4c1d64f4],edx
   14001ac7f:	push   rax
   14001ac80:	mov    esp,0x6aefa002
   14001ac85:	scas   eax,DWORD PTR es:[rdi]
   14001ac86:	jbe    0x14001ac64
   14001ac88:	pop    rdi
   14001ac89:	pop    rbx
   14001ac8a:	sbb    BYTE PTR [rsi+rdi*1],dh
   14001ac8d:	rex.WRX jbe 0x14001acc6
   14001ac90:	pop    rcx
   14001ac91:	cmp    al,0xc
   14001ac93:	ret    0xfeb5
   14001ac96:	cdq    
   14001ac97:	cmp    DWORD PTR [rdx+rsi*8],0xfbf9d79c
   14001ac9e:	in     al,dx
   14001ac9f:	jne    0x14001ac8a
   14001aca1:	retf   0x2cbd
   14001aca4:	push   rbp
   14001aca5:	jp     0x14001acaa
   14001aca7:	add    dh,BYTE PTR [rbx]
   14001aca9:	cwde   
   14001acaa:	out    dx,al
   14001acab:	sbb    eax,0xd2a000b1
   14001acb0:	(bad)  
   14001acb1:	scas   al,BYTE PTR es:[rdi]
   14001acb2:	int3   
   14001acb3:	pushf  
   14001acb4:	fnsave [rbp+rdx*2-0xb]
   14001acb8:	(bad)  
   14001acb9:	test   al,0xc8
   14001acbb:	int3   
   14001acbc:	add    BYTE PTR [rdx],cl
   14001acbe:	ss sub bh,dl
   14001acc1:	data16 xor al,0x6c
   14001acc4:	(bad)  
   14001acc5:	or     eax,0xa961e006
   14001acca:	fild   QWORD PTR [rbx-0x2f]
   14001accd:	(bad)  
   14001acce:	sahf   
   14001accf:	rex.RXB sahf 
   14001acd1:	(bad)  
   14001acd2:	(bad)  
   14001acd3:	xor    al,0xa9
   14001acd5:	fadd   QWORD PTR [rbx-0x4b8205f3]
   14001acdb:	js     0x14001ace4
   14001acdd:	gs cli 
   14001acdf:	outs   dx,BYTE PTR ds:[rsi]
   14001ace0:	(bad)  
   14001ace1:	mov    cl,0x0
   14001ace3:	shl    BYTE PTR [rax+0x3f5b38eb],0x12
   14001acea:	add    DWORD PTR [rax],esp
   14001acec:	(bad)  
   14001aced:	loopne 0x14001acc4
   14001acef:	push   0x3f3f4085
   14001acf4:	(bad)  
   14001acf6:	(bad)  
   14001acf7:	cmc    
   14001acf8:	push   rsp
   14001acf9:	rol    BYTE PTR [rcx+rax*1+0x55b5c780],1
   14001ad00:	jle    0x14001acdc
   14001ad02:	fs (bad) 
   14001ad04:	xor    esp,DWORD PTR [rdx]
   14001ad06:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ad07:	adc    al,0xa5
   14001ad09:	loop   0x14001ad03
   14001ad0b:	fdivr  DWORD PTR [rax+0x7d3a1168]
   14001ad11:	and    al,0x1
   14001ad13:	shr    ch,0x71
   14001ad16:	jge    0x14001ad5f
   14001ad18:	pop    rbp
   14001ad19:	jrcxz  0x14001acde
   14001ad1b:	and    dl,BYTE PTR [rdx]
   14001ad1d:	or     al,BYTE PTR [rax]
   14001ad1f:	pop    rax
   14001ad20:	test   ah,0x10
   14001ad23:	sbb    al,0x11
   14001ad25:	add    al,dh
   14001ad27:	mov    ecx,0xf9ee21bc
   14001ad2c:	pop    rbp
   14001ad2d:	inc    BYTE PTR [rsi]
   14001ad2f:	push   rax
   14001ad30:	rex.WRX ret 
   14001ad32:	cs repnz (bad) 
   14001ad35:	jo     0x14001ad87
   14001ad37:	rex.RX mov bpl,0x58
   14001ad3a:	call   0xcf714e84
   14001ad3f:	rex.WX add BYTE PTR [rax],bl
   14001ad42:	cmc    
   14001ad43:	jp     0x14001ace1
   14001ad45:	xlat   BYTE PTR ds:[rbx]
   14001ad46:	imul   esi,DWORD PTR [rbp+0xa],0x79
   14001ad4a:	pushf  
   14001ad4b:	add    DWORD PTR [rax+0x363bc52f],esp
   14001ad51:	imul   ecx,DWORD PTR [rax-0x6e4ce012],0x97c7d42f
   14001ad5b:	rex.RXB sbb eax,0x60e20c00
   14001ad61:	rex.WB movabs ds:0x82465e550e06d484,al
   14001ad6b:	mov    bl,dh
   14001ad6d:	or     ch,al
   14001ad6f:	rex.RXB mov BYTE PTR [r15+0x1bec9edf],r12b
   14001ad76:	sti    
   14001ad77:	cld    
   14001ad78:	and    bh,dh
   14001ad7a:	stc    
   14001ad7b:	adc    DWORD PTR [rdi+0x2c],edi
   14001ad7e:	pop    rdi
   14001ad7f:	out    0xf3,eax
   14001ad81:	cdq    
   14001ad82:	and    dl,BYTE PTR [rsi-0x4625af8d]
   14001ad88:	repz sub bh,ch
   14001ad8b:	retf   0x93d3
   14001ad8e:	mov    edi,0x84c7ef99
   14001ad93:	mov    al,0x8b
   14001ad95:	mov    edi,0x6132f94b
   14001ad9a:	(bad)  
   14001ad9b:	test   eax,0x81800951
   14001ada0:	pop    rsi
   14001ada1:	add    al,ch
   14001ada3:	sbb    cl,BYTE PTR [rbx-0x36]
   14001ada6:	call   QWORD PTR [rdi-0x71]
   14001ada9:	jge    0x14001ae0e
   14001adab:	sub    al,0xd
   14001adad:	adc    eax,0x7fbaa1c3
   14001adb2:	scas   al,BYTE PTR es:[rdi]
   14001adb3:	sbb    ebx,esi
   14001adb5:	cmp    eax,0xb90657ae
   14001adba:	(bad)  
   14001adbb:	(bad)  
   14001adbc:	sbb    bl,BYTE PTR [rdi*1-0x77b138e]
   14001adc3:	cli    
   14001adc4:	cmp    DWORD PTR [rdx-0x6060e072],edi
   14001adca:	mov    BYTE PTR [rdi],bl
   14001adcc:	(bad)  
   14001adcd:	(bad)  
   14001adce:	(bad)  
   14001adcf:	cmp    al,0xef
   14001add1:	(bad)  
   14001add2:	sub    al,0xe9
   14001add4:	push   rbp
   14001add5:	or     eax,0x88399fed
   14001adda:	movsxd ebp,edx
   14001addc:	test   al,0x6
   14001adde:	rex (bad) 
   14001ade0:	push   rax
   14001ade1:	lahf   
   14001ade2:	call   0x11c84d7e4
   14001ade7:	fistp  QWORD PTR [rbx]
   14001ade9:	call   0x1998d3574
   14001adee:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001adef:	(bad)  
   14001adf0:	push   0xffffffffffffffae
   14001adf2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001adf3:	test   BYTE PTR [rcx],bl
   14001adf5:	jmp    0x1738f8104
   14001adfa:	add    al,0x88
   14001adfc:	add    dl,dh
   14001adfe:	enter  0x5e73,0x27
   14001ae02:	pop    rsp
   14001ae03:	cmp    al,0x77
   14001ae05:	push   rbx
   14001ae06:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001ae07:	ficomp DWORD PTR [rcx+0x5cf46e5f]
   14001ae0d:	push   rbx
   14001ae0e:	add    dh,BYTE PTR [rdi+rcx*4+0x3]
   14001ae12:	cmp    al,0xa4
   14001ae15:	rol    edx,cl
   14001ae17:	clc    
   14001ae18:	cmp    DWORD PTR [rbx+0x357f5c73],edx
   14001ae1e:	enter  0xbdbd,0xde
   14001ae22:	test   al,0x5
   14001ae24:	fs rex.X call 0x183ffa417
   14001ae2b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ae2c:	jmp    0x106e33031
   14001ae31:	adc    al,0x71
   14001ae33:	mov    al,BYTE PTR [rbx+0x78]
   14001ae36:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ae37:	repnz (bad) 
   14001ae39:	xor    BYTE PTR [rax-0x6],dl
   14001ae3c:	add    eax,0xe41dc848
   14001ae41:	push   rbp
   14001ae42:	xor    eax,0xdaa0521a
   14001ae47:	push   0x1d
   14001ae49:	add    BYTE PTR [rbx],0x80
   14001ae4c:	fcom   st(0)
   14001ae4e:	fst    DWORD PTR [rdi+rcx*2]
   14001ae51:	push   rdx
   14001ae52:	movabs eax,ds:0xcee8bfd7454b7918
   14001ae5b:	jg     0x14001ae45
   14001ae5d:	cmovb  ebx,esp
   14001ae60:	pop    rbx
   14001ae61:	sbb    eax,0x2c1c64e2
   14001ae66:	xchg   ebx,eax
   14001ae67:	mov    esp,0x1d0ee49
   14001ae6c:	adc    r9d,DWORD PTR [rax]
   14001ae6f:	or     al,0xd7
   14001ae71:	fld    st(0)
   14001ae73:	retf   0x51fe
   14001ae76:	icebp  
   14001ae77:	cmp    al,0x92
   14001ae79:	(bad)  
   14001ae7a:	out    0x75,al
   14001ae7c:	adc    al,BYTE PTR [rbp-0x80]
   14001ae7f:	add    al,0x75
   14001ae81:	xor    BYTE PTR [rbx+0x5d],bh
   14001ae84:	xchg   ah,dh
   14001ae86:	or     eax,0x3040319e
   14001ae8b:	ret    
   14001ae8c:	add    DWORD PTR [rax-0x57a18b83],eax
   14001ae92:	pop    rax
   14001ae93:	push   0xffffffff89f0ecb9
   14001ae98:	outs   dx,BYTE PTR ds:[rsi]
   14001ae99:	pop    rdi
   14001ae9a:	rol    bl,cl
   14001ae9c:	xchg   ebx,eax
   14001ae9d:	cmp    eax,0x463ede0f
   14001aea2:	lea    esi,[rcx-0x2ae0698e]
   14001aea8:	cmp    edx,DWORD PTR [rdx-0x35]
   14001aeab:	push   rdi
   14001aeac:	test   al,0x1
   14001aeae:	(bad)  
   14001aeaf:	hlt    
   14001aeb0:	add    DWORD PTR [rax],esi
   14001aeb2:	rcl    DWORD PTR [rbx+0x3e0a3f5a],1
   14001aeb8:	rex.WXB sub QWORD PTR [r10+0x1],0x78
   14001aebd:	(bad)  
   14001aebe:	pop    rcx
   14001aebf:	add    BYTE PTR [rax-0x15bef700],al
   14001aec5:	cwde   
   14001aec6:	sub    ah,BYTE PTR [rdx+0x181e965]
   14001aecc:	movabs ds:0x4764174fa2000e4d,al
   14001aed5:	xchg   edi,eax
   14001aed6:	retf   0x5e8e
   14001aed9:	sub    DWORD PTR [rcx+rcx*8],esi
   14001aedc:	in     eax,dx
   14001aedd:	sbb    ebx,edi
   14001aedf:	sub    dl,ah
   14001aee1:	fsubr  QWORD PTR [rbp+0x6847d7dc]
   14001aee7:	jge    0x14001aec8
   14001aee9:	(bad)  
   14001aeea:	call   0x191baf36d
   14001aeef:	or     cl,BYTE PTR [rsi-0x46]
   14001aef2:	xchg   edi,eax
   14001aef3:	popf   
   14001aef4:	(bad)  
   14001aef5:	mov    bl,0x29
   14001aef7:	(bad)  
   14001aef8:	movabs ds:0xfbe8de023fc6a812,eax
   14001af01:	movabs ds:0xe0ac90c640f50bf5,eax
   14001af0a:	mov    WORD PTR [rip+0x6f968d3b],?        # 0x1af983c4b
   14001af10:	(bad)  
   14001af11:	ins    DWORD PTR es:[rdi],dx
   14001af12:	(bad)  
   14001af13:	add    dl,al
   14001af15:	movabs ds:0x62d5aebc53e5424b,eax
   14001af1e:	test   eax,0xfd5d964f
   14001af23:	fsub   DWORD PTR [rdi+rcx*8-0x8]
   14001af27:	cmp    esp,DWORD PTR [rsi]
   14001af29:	lods   al,BYTE PTR ds:[rsi]
   14001af2a:	fwait
   14001af2b:	jo     0x14001af70
   14001af2d:	mov    WORD PTR [rdx],fs
   14001af2f:	jo     0x14001afa8
   14001af31:	sbb    bh,BYTE PTR [rip+0x49ad6fff]        # 0x189af1f36
   14001af37:	sar    DWORD PTR [rdx],cl
   14001af39:	popf   
   14001af3a:	or     bl,BYTE PTR [rdi]
   14001af3c:	fld    QWORD PTR [rip+0xffffffff81204524]        # 0xc121f466
   14001af42:	(bad)  
   14001af43:	pop    rdi
   14001af44:	jg     0x14001af7b
   14001af46:	jo     0x14001afb8
   14001af48:	(bad)  [rdi-0x672402cf]
   14001af4e:	clc    
   14001af4f:	rex.B (bad) 
   14001af51:	icebp  
   14001af52:	jo     0x14001afab
   14001af54:	mov    bh,0x1
   14001af56:	xor    BYTE PTR [rcx+0xe],0x0
   14001af5a:	rex.X shl DWORD PTR [rbp-0x5f],cl
   14001af5e:	adc    DWORD PTR [rbx+0x7c],0xffffffae
   14001af62:	mov    ch,0xc9
   14001af64:	fisub  WORD PTR [rsp+rdx*1-0x44702a27]
   14001af6b:	mov    bl,0x1e
   14001af6d:	clc    
   14001af6e:	sbb    esp,DWORD PTR [rcx-0x3ef192e5]
   14001af74:	(bad)  
   14001af75:	(bad)  
   14001af76:	fsubr  QWORD PTR [rdx]
   14001af78:	outs   dx,DWORD PTR ds:[rsi]
   14001af79:	cmp    ah,BYTE PTR [rdx+0x57694819]
   14001af7f:	stos   BYTE PTR es:[rdi],al
   14001af80:	jg     0x14001af68
   14001af82:	(bad)  
   14001af83:	gs pop rdi
   14001af85:	(bad)  
   14001af86:	cld    
   14001af87:	(bad)  
   14001af88:	pop    QWORD PTR [rax-0x1bc0ac29]
   14001af8e:	cmp    DWORD PTR [rdi+0x41481353],ebp
   14001af94:	test   al,0x31
   14001af96:	repnz or eax,0xa20c91e3
   14001af9c:	jg     0x14001afeb
   14001af9e:	je     0x14001afa0
   14001afa0:	ror    BYTE PTR [rdi-0x43],1
   14001afa3:	rex.X push rbp
   14001afa5:	leave  
   14001afa6:	pop    rsi
   14001afa7:	xlat   BYTE PTR ds:[rbx]
   14001afa8:	jp     0x14001aff3
   14001afaa:	mov    edx,0x4f4765b8
   14001afaf:	jo     0x14001b02c
   14001afb1:	xchg   ebx,eax
   14001afb2:	(bad)  
   14001afb3:	idiv   cl
   14001afb5:	movabs ds:0x4f42efe21e2f7fbb,al
   14001afbe:	sbb    eax,DWORD PTR [rax]
   14001afc0:	and    BYTE PTR [rdi-0x7cacdcf1],dh
   14001afc6:	xchg   BYTE PTR [rsi],bh
   14001afc8:	(bad)  
   14001afc9:	add    eax,eax
   14001afcb:	cwde   
   14001afcc:	stc    
   14001afcd:	ret    
   14001afce:	jae    0x14001b00a
   14001afd0:	test   BYTE PTR [rax+0xf],dl
   14001afd3:	rol    DWORD PTR [rax],0x40
   14001afd6:	test   DWORD PTR [rcx+rax*1],eax
   14001afd9:	(bad)  
   14001afda:	shr    BYTE PTR [rax+0x3],cl
   14001afdd:	rcl    BYTE PTR [rip+0xffffffff9f649aa1],0x6b        # 0xdf664a85
   14001afe4:	movsxd ecx,DWORD PTR [rdx-0x175596c9]
   14001afea:	jmp    0x14001b00b
   14001afec:	retf   0xbe6e
   14001afef:	rcr    DWORD PTR [rbp+0x39],cl
   14001aff2:	loope  0x14001af9a
   14001aff4:	cmp    BYTE PTR [rcx-0xc],ah
   14001aff7:	push   rax
   14001aff8:	hlt    
   14001aff9:	ja     0x14001b075
   14001affb:	push   rdx
   14001affc:	sbb    DWORD PTR [rdi+0x5],0xffffffe0
   14001b000:	fistp  DWORD PTR [rbx]
   14001b002:	sub    al,al
   14001b004:	cwde   
   14001b005:	sti    
   14001b006:	adc    ebp,DWORD PTR [rdx+rax*1+0x5040538c]
   14001b00d:	add    ebp,edi
   14001b00f:	rex.XB lahf 
   14001b011:	push   0x7
   14001b013:	test   al,0x80
   14001b015:	rex (bad) 
   14001b017:	enter  0x91f8,0xa
   14001b01b:	add    BYTE PTR [rcx-0x7a154461],cl
   14001b021:	leave  
   14001b022:	test   eax,0xdf63bc53
   14001b027:	xchg   esp,eax
   14001b028:	sbb    eax,0xa3b21ffd
   14001b02d:	out    dx,eax
   14001b02e:	jp     0x14001b0a9
   14001b030:	out    0x43,eax
   14001b032:	lahf   
   14001b033:	mov    esi,DWORD PTR [rbx+0x46]
   14001b036:	xchg   DWORD PTR [rdx],esi
   14001b038:	add    dh,BYTE PTR [rbp+0x27]
   14001b03b:	(bad)  
   14001b03c:	in     al,dx
   14001b03d:	cmc    
   14001b03e:	jmp    0x1a2423dd9
   14001b043:	add    bl,BYTE PTR [rax]
   14001b045:	cmp    DWORD PTR [rax+0x1ce5d382],0x23bdcbc2
   14001b04f:	(bad)  
   14001b050:	or     BYTE PTR [rcx+rdx*8+0x45cae48d],al
   14001b057:	rex.WRXB
   14001b058:	rex.WRXB (bad) 
   14001b05a:	cmp    eax,0x67b264fd
   14001b05f:	fdiv   QWORD PTR [rdi-0x6320a89c]
   14001b065:	movabs al,ds:0xbf77b35c0dd61e8c
   14001b06e:	jbe    0x14001b073
   14001b070:	adc    edi,esp
   14001b072:	shr    DWORD PTR [rsi+0x20],0xaa
   14001b076:	rex mov ebx,0xdca14281
   14001b07c:	rex
   14001b07d:	rex.X ret 
   14001b07f:	mov    eax,ebp
   14001b081:	(bad)  
   14001b082:	pop    rsi
   14001b083:	adc    eax,0x7a3b243a
   14001b088:	mov    ebx,0x1299e8ec
   14001b08d:	xor    al,0xf9
   14001b08f:	mov    cl,0xd0
   14001b091:	fucomp st(6)
   14001b093:	movabs ds:0xbd143d19023f3e47,al
   14001b09c:	push   0x78
   14001b09e:	add    ch,BYTE PTR [rdi-0x51]
   14001b0a1:	out    dx,eax
   14001b0a2:	scas   eax,DWORD PTR es:[rdi]
   14001b0a3:	add    eax,0x730fe624
   14001b0a8:	test   eax,0x1812a608
   14001b0ad:	and    BYTE PTR [rax],dl
   14001b0af:	add    al,0xe2
   14001b0b1:	xchg   ecx,eax
   14001b0b2:	xchg   edx,eax
   14001b0b3:	jo     0x14001b075
   14001b0b5:	sub    esi,0xd4846027
   14001b0bb:	js     0x14001b128
   14001b0bd:	in     eax,dx
   14001b0be:	cmp    DWORD PTR cs:[rdx+rdi*1],esi
   14001b0c2:	xor    BYTE PTR [rsi+0x67],dh
   14001b0c5:	push   rsi
   14001b0c6:	mov    esp,0xecb0e002
   14001b0cb:	call   0x10d64936d
   14001b0d0:	adc    ah,BYTE PTR [rbx-0x436d814]
   14001b0d6:	xchg   edx,eax
   14001b0d7:	mov    esi,0xd6fa3b2d
   14001b0dc:	push   rcx
   14001b0dd:	(bad)  
   14001b0de:	call   0x19f221b33
   14001b0e3:	rex.WRXB (bad) 
   14001b0e5:	xchg   ecx,eax
   14001b0e6:	mov    dh,0x70
   14001b0e8:	ins    BYTE PTR es:[rdi],dx
   14001b0e9:	add    DWORD PTR [rax-0x7c040456],ebx
   14001b0ef:	iret   
   14001b0f0:	adc    edx,DWORD PTR [rsi+rdi*1+0x39ff3480]
   14001b0f7:	sar    DWORD PTR [rsi+rcx*1-0x1702efb8],0xfe
   14001b0ff:	mov    ebp,0xd95381a5
   14001b104:	push   0xfffffffffffffffd
   14001b106:	adc    eax,DWORD PTR [rsi-0x52]
   14001b109:	and    DWORD PTR [rax],eax
   14001b10b:	cmp    al,0xae
   14001b10d:	push   rsi
   14001b10e:	(bad)  
   14001b10f:	jo     0x14001b0cb
   14001b111:	in     al,dx
   14001b112:	call   0xdf9d63f0
   14001b117:	adc    DWORD PTR [rdx-0x4134a09],edi
   14001b11d:	mov    esi,0x243a30e0
   14001b122:	jge    0x14001b101
   14001b124:	mov    al,0x5
   14001b126:	jbe    0x14001b170
   14001b128:	ja     0x14001b15a
   14001b12a:	addr32 or dl,dl
   14001b12d:	and    DWORD PTR [rcx+rsi*2+0xbb01007],eax
   14001b134:	hlt    
   14001b135:	rex.WB loope 0x14001b12a
   14001b138:	or     bl,ah
   14001b13a:	jns    0x14001b0d9
   14001b13c:	shl    BYTE PTR [rcx-0x40],cl
   14001b13f:	mov    dl,0x5e
   14001b141:	stos   BYTE PTR es:[rdi],al
   14001b142:	test   ebx,edi
   14001b144:	cli    
   14001b145:	(bad)  
   14001b146:	(bad)  
   14001b147:	(bad)  
   14001b148:	add    ah,bh
   14001b14a:	or     DWORD PTR [rbp-0x95b5f37],0x64
   14001b151:	out    dx,eax
   14001b152:	fmul   DWORD PTR [rdx+rdx*4+0x1c]
   14001b156:	repnz cld 
   14001b158:	cmp    DWORD PTR [rdx-0x65],ecx
   14001b15b:	es mov ?,bx
   14001b15f:	rex.XB xchg DWORD PTR [r9-0x39b42c9f],ebx
   14001b166:	ss out 0x78,al
   14001b169:	mov    eax,0xc421d279
   14001b16e:	out    dx,al
   14001b16f:	rex.RX mov edi,0xa913d933
   14001b175:	shl    BYTE PTR [rbx],0x9d
   14001b178:	rex.XB mov r8d,0xcc6eef8c
   14001b17e:	shl    BYTE PTR [rbp+0x1],1
   14001b181:	imul   ebx,DWORD PTR [r10-0x54],0xffffffd3
   14001b186:	shr    edi,0x89
   14001b189:	jnp    0x14001b180
   14001b18b:	(bad)  
   14001b18c:	cmp    edi,DWORD PTR [rbx-0x24]
   14001b18f:	std    
   14001b190:	scas   eax,DWORD PTR es:[rdi]
   14001b191:	sti    
   14001b192:	out    dx,al
   14001b193:	jmp    QWORD PTR [rdx+0x1098b0c3]
   14001b199:	lea    ebx,[rip+0xffffffffe98603ba]        # 0x12987b559
   14001b19f:	(bad)  
   14001b1a0:	and    eax,0x8915ce32
   14001b1a5:	shr    BYTE PTR [rax+riz*4+0x17e7a299],0xed
   14001b1ad:	lock mov dh,ch
   14001b1b0:	(bad)  
   14001b1b1:	movabs al,ds:0xf1e9fdcf050f6b0a
   14001b1ba:	(bad)  
   14001b1bb:	xchg   esp,eax
   14001b1bc:	(bad)  
   14001b1bd:	pop    rbx
   14001b1be:	adc    dl,ah
   14001b1c0:	nop
   14001b1c1:	ins    DWORD PTR es:[rdi],dx
   14001b1c2:	hlt    
   14001b1c3:	and    eax,0x4b26b5a1
   14001b1c8:	ret    0x84d2
   14001b1cb:	inc    dl
   14001b1cd:	xchg   esi,eax
   14001b1ce:	xchg   edx,eax
   14001b1cf:	xor    BYTE PTR [rdi-0x55905894],al
   14001b1d5:	(bad)  
   14001b1d6:	repz add ebp,DWORD PTR [rcx]
   14001b1d9:	add    ch,BYTE PTR [rip+0xffffffffe7f5ea17]        # 0x127f79bf6
   14001b1df:	sti    
   14001b1e0:	xchg   edi,eax
   14001b1e1:	sti    
   14001b1e2:	(bad)  
   14001b1e3:	vpsrlw ymm15,ymm8,XMMWORD PTR [rsi+rbx*4-0x601c3c8d]
   14001b1ec:	scas   al,BYTE PTR es:[rdi]
   14001b1ed:	mov    esp,ebp
   14001b1ef:	idiv   DWORD PTR [rbx]
   14001b1f1:	(bad)  
   14001b1f2:	js     0x14001b188
   14001b1f4:	xchg   ebx,eax
   14001b1f5:	jae    0x14001b20a
   14001b1f7:	sbb    al,0x0
   14001b1f9:	cmp    BYTE PTR [rdi],dh
   14001b1fb:	rol    DWORD PTR [rcx],0x80
   14001b1fe:	rex.XB (bad) 
   14001b200:	add    BYTE PTR [rdx+rbx*1],bl
   14001b203:	popf   
   14001b204:	hlt    
   14001b205:	dec    DWORD PTR [rcx]
   14001b207:	xchg   esp,eax
   14001b208:	repz add eax,0xa965dbb8
   14001b20e:	add    BYTE PTR [rax],al
   14001b210:	add    BYTE PTR [rax],al
   14001b212:	rex.WB
   14001b213:	rex.RB
   14001b214:	rex.WRX
   14001b215:	rex.R scas al,BYTE PTR es:[rdi]
   14001b217:	rex.X (bad) 
   14001b219:	(bad)  
   14001b21a:	add    BYTE PTR [rax],al
   14001b21c:	add    DWORD PTR [rbx],esi
   14001b21e:	cmp    al,0x68
   14001b220:	je     0x14001b28f
   14001b222:	ins    BYTE PTR es:[rdi],dx
   14001b223:	ds or  eax,0x6f623c0a
   14001b229:	fs jns 0x14001b26a
   14001b22c:	or     eax,0x3e703c0a
   14001b231:	push   rbx
   14001b232:	outs   dx,DWORD PTR ds:[rsi]
   14001b233:	ins    DWORD PTR es:[rdi],dx
   14001b234:	gs je  0x14001b2a0
   14001b237:	ins    DWORD PTR es:[rdi],dx
   14001b238:	gs jae 0x14001b25b
   14001b23b:	imul   esi,DWORD PTR [rax+riz*1+0x63],0x68206e61
   14001b243:	(bad)  
   14001b244:	jo     0x14001b2b6
   14001b246:	outs   dx,BYTE PTR gs:[rsi]
   14001b248:	and    BYTE PTR [rax+rbp*2+0x61],dh
   14001b24c:	je     0x14001b26e
   14001b24e:	je     0x14001b2b8
   14001b250:	and    BYTE PTR gs:[rax+0x72],dh
   14001b254:	gs jbe 0x14001b2c0
   14001b257:	outs   dx,DWORD PTR ds:[rsi]
   14001b258:	jne    0x14001b2cd
   14001b25a:	ins    BYTE PTR es:[rdi],dx
   14001b25b:	jns    0x14001b27d
   14001b25d:	jae    0x14001b2cf
   14001b25f:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001b263:	imul   esp,DWORD PTR [rbp+0x64],0x74617020
   14001b26a:	push   0x6f632073
   14001b26f:	outs   dx,BYTE PTR ds:[rsi]
   14001b270:	je     0x14001b2d3
   14001b272:	imul   ebp,DWORD PTR [rsi+0xd],0x726f6d0a
   14001b279:	and    BYTE PTR gs:[rdi+0x72],ch
   14001b27d:	and    BYTE PTR [rdi+0x74],ch
   14001b280:	push   0x66207265
   14001b285:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x61687420
   14001b28d:	outs   dx,BYTE PTR ds:[rsi]
   14001b28e:	and    BYTE PTR [rcx+0x63],ah
   14001b291:	je     0x14001b308
   14001b293:	(bad)  
   14001b294:	ins    BYTE PTR es:[rdi],dx
   14001b295:	ins    BYTE PTR es:[rdi],dx
   14001b296:	jns    0x14001b2b8
   14001b298:	outs   dx,BYTE PTR ds:[rsi]
   14001b299:	gs gs fs gs and BYTE PTR fs:[rsi+0x6f],ah
   14001b2a1:	jb     0x14001b2c3
   14001b2a3:	je     0x14001b30d
   14001b2a5:	and    BYTE PTR gs:[rdi+rbp*2+0x63],ah
   14001b2aa:	jne    0x14001b319
   14001b2ac:	outs   dx,BYTE PTR gs:[rsi]
   14001b2ae:	je     0x14001b311
   14001b2b0:	je     0x14001b31b
   14001b2b2:	outs   dx,DWORD PTR ds:[rsi]
   14001b2b3:	outs   dx,BYTE PTR ds:[rsi]
   14001b2b4:	cs cmp al,0x2f
   14001b2b7:	jo     0x14001b2f7
   14001b2b9:	or     eax,0x3e703c0a
   14001b2be:	push   rsp
   14001b2bf:	push   0x70207369
   14001b2c4:	(bad)  
   14001b2c5:	and    BYTE PTR gs:[ecx+ebp*2+0x73],ch
   14001b2cb:	je     0x14001b340
   14001b2cd:	and    BYTE PTR [rcx+0x6c],ah
   14001b2d0:	ins    BYTE PTR es:[rdi],dx
   14001b2d1:	and    BYTE PTR [rsi+0x69],ah
   14001b2d4:	ins    BYTE PTR es:[rdi],dx
   14001b2d5:	gs jae 0x14001b2f8
   14001b2d8:	ja     0x14001b342
   14001b2da:	imul   esp,DWORD PTR [rbx+0x68],0x65726120
   14001b2e1:	and    BYTE PTR [rcx+rbp*2+0x6b],ch
   14001b2e5:	gs ins BYTE PTR es:[rdi],dx
   14001b2e7:	jns    0x14001b309
   14001b2e9:	je     0x14001b35a
   14001b2eb:	and    BYTE PTR [rdx+0x65],ah
   14001b2ee:	and    BYTE PTR [rbp+0x6e],dh
   14001b2f1:	jne    0x14001b366
   14001b2f3:	gs and BYTE PTR fs:[rdx+0x65],ah
   14001b2f8:	movsxd esp,DWORD PTR [rcx+0x75]
   14001b2fb:	jae    0x14001b362
   14001b2fd:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b301:	jns    0x14001b310
   14001b303:	or     ah,BYTE PTR [rcx+0x72]
   14001b306:	and    BYTE PTR gs:[rsi+0x65],ch
   14001b30a:	imul   esi,DWORD PTR [rax+rbp*2+0x65],0x65722072
   14001b312:	data16 gs jb 0x14001b37b
   14001b316:	outs   dx,BYTE PTR ds:[rsi]
   14001b317:	movsxd esp,DWORD PTR [rbp+0x64]
   14001b31a:	and    BYTE PTR [rdx+0x79],ah
   14001b31d:	and    BYTE PTR [rcx+0x6e],ah
   14001b320:	jns    0x14001b342
   14001b322:	imul   esp,DWORD PTR [rbp+0x79],0x77
   14001b326:	outs   dx,DWORD PTR ds:[rsi]
   14001b327:	jb     0x14001b38d
   14001b329:	and    BYTE PTR [rsi+0x6f],ch
   14001b32c:	jb     0x14001b34e
   14001b32e:	(bad)  
   14001b32f:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
   14001b334:	and    BYTE PTR [rdi+rcx*2+0x43],dl
   14001b338:	cs cmp al,0x2f
   14001b33b:	jo     0x14001b37b
   14001b33d:	or     eax,0x622f3c0a
   14001b342:	outs   dx,DWORD PTR ds:[rsi]
   14001b343:	fs jns 0x14001b384
   14001b346:	or     eax,0x682f3c0a
   14001b34b:	je     0x14001b3ba
   14001b34d:	ins    BYTE PTR es:[rdi],dx
   14001b34e:	ds or  eax,0xa
   14001b354:	retf   0x683c
   14001b357:	je     0x14001b3c6
   14001b359:	ins    BYTE PTR es:[rdi],dx
   14001b35a:	ds or  eax,0x6f623c0a
   14001b360:	fs jns 0x14001b3a1
   14001b363:	or     eax,0x3e703c0a
   14001b368:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001b36a:	je     0x14001b3d4
   14001b36c:	sub    al,0x20
   14001b36e:	(bad)  
   14001b36f:	and    BYTE PTR [rsi],ch
   14001b371:	(bad)  
   14001b372:	fs jo  0x14001b395
   14001b375:	outs   dx,DWORD PTR ds:[rsi]
   14001b376:	jb     0x14001b398
   14001b378:	cs movsxd esp,DWORD PTR fs:[rsi+0x20]
   14001b37d:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6163
   14001b384:	outs   dx,BYTE PTR ds:[rsi]
   14001b385:	and    BYTE PTR [rdx+0x65],ah
   14001b388:	and    BYTE PTR [rbx+0x70],dh
   14001b38b:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001b38f:	imul   esp,DWORD PTR [rbp+0x64],0x6649202e
   14001b396:	and    BYTE PTR [rcx+0x6e],ah
   14001b399:	and    BYTE PTR [rsi],ch
   14001b39b:	(bad)  
   14001b39c:	fs jo  0x14001b3bf
   14001b39f:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7369
   14001b3a6:	and    BYTE PTR [rbp+riz*2+0x74],ah
   14001b3aa:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14001b3af:	sub    al,0xd
   14001b3b1:	or     dh,BYTE PTR [rax+rbp*2+0x65]
   14001b3b5:	and    BYTE PTR [rdi+0x69],dh
   14001b3b8:	jp     0x14001b41b
   14001b3ba:	jb     0x14001b420
   14001b3bc:	and    BYTE PTR [rdi+0x65],ah
   14001b3bf:	outs   dx,BYTE PTR ds:[rsi]
   14001b3c0:	gs jb  0x14001b424
   14001b3c3:	je     0x14001b42a
   14001b3c5:	jae    0x14001b3e7
   14001b3c7:	(bad)  
   14001b3c8:	and    BYTE PTR [rcx+0x74],dl
   14001b3cb:	and    BYTE PTR [rax+0x65],ch
   14001b3ce:	ins    BYTE PTR es:[rdi],dx
   14001b3cf:	jo     0x14001b3f1
   14001b3d1:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14001b3d4:	ins    BYTE PTR es:[rdi],dx
   14001b3d5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001b3da:	outs   dx,BYTE PTR ds:[rsi]
   14001b3db:	and    BYTE PTR [rsi+0x69],ah
   14001b3de:	ins    BYTE PTR es:[rdi],dx
   14001b3df:	and    BYTE PTR gs:[rcx+0x6e],ch
   14001b3e3:	and    BYTE PTR [rcx+0x64],ah
   14001b3e6:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x6f74206e
   14001b3ef:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b3f3:	and    BYTE PTR [rax+0x65],ch
   14001b3f6:	ins    BYTE PTR es:[rdi],dx
   14001b3f7:	jo     0x14001b406
   14001b3f9:	or     dh,BYTE PTR [rax+0x72]
   14001b3fc:	outs   dx,DWORD PTR ds:[rsi]
   14001b3fd:	push   0x65
   14001b3ff:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   14001b403:	imul   ebp,DWORD PTR [rbp+riz*2+0x2e],0x3e702f3c
   14001b40b:	or     eax,0x622f3c0a
   14001b410:	outs   dx,DWORD PTR ds:[rsi]
   14001b411:	fs jns 0x14001b452
   14001b414:	or     eax,0x682f3c0a
   14001b419:	je     0x14001b488
   14001b41b:	ins    BYTE PTR es:[rdi],dx
   14001b41c:	ds or  eax,0x100000a
   14001b422:	ds cmp al,0x68
   14001b425:	je     0x14001b494
   14001b427:	ins    BYTE PTR es:[rdi],dx
   14001b428:	ds or  eax,0x6f623c0a
   14001b42e:	fs jns 0x14001b46f
   14001b431:	or     eax,0x3e703c0a
   14001b436:	push   rsp
   14001b437:	push   0x656e2065
   14001b43c:	ja     0x14001b45e
   14001b43e:	push   0x20706c65
   14001b443:	jae    0x14001b4be
   14001b445:	jae    0x14001b4bb
   14001b447:	gs ins DWORD PTR es:[rdi],dx
   14001b449:	and    BYTE PTR [rbp+0x73],dh
   14001b44c:	gs jae 0x14001b47b
   14001b44f:	and    BYTE PTR [rcx+0x6e],ch
   14001b452:	and    BYTE PTR [rbx+0x6f],ah
   14001b455:	outs   dx,BYTE PTR ds:[rsi]
   14001b456:	je     0x14001b4ca
   14001b458:	(bad)  
   14001b459:	jae    0x14001b4cf
   14001b45b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001b45f:	je     0x14001b4c9
   14001b461:	and    BYTE PTR gs:[rdi+0x6c],ch
   14001b465:	and    BYTE PTR fs:[rcx+0x74],dl
   14001b469:	and    BYTE PTR [rcx+0x73],al
   14001b46c:	jae    0x14001b4d7
   14001b46e:	jae    0x14001b4e4
   14001b470:	(bad)  
   14001b471:	outs   dx,BYTE PTR ds:[rsi]
   14001b472:	je     0x14001b4a0
   14001b474:	and    BYTE PTR [rbx+0x6f],ah
   14001b477:	ins    DWORD PTR es:[rdi],dx
   14001b478:	jo     0x14001b4ec
   14001b47a:	gs jae 0x14001b4f0
   14001b47d:	gs fs or eax,0x6c65680a
   14001b484:	jo     0x14001b4a6
   14001b486:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6320
   14001b48d:	outs   dx,DWORD PTR ds:[rsi]
   14001b48e:	outs   dx,BYTE PTR ds:[rsi]
   14001b48f:	je     0x14001b4f2
   14001b491:	imul   ebp,DWORD PTR [rsi+0x69],0x6120676e
   14001b498:	ins    BYTE PTR es:[rdi],dx
   14001b499:	ins    BYTE PTR es:[rdi],dx
   14001b49a:	and    BYTE PTR [rsi+0x69],ah
   14001b49d:	ins    BYTE PTR es:[rdi],dx
   14001b49e:	gs jae 0x14001b4c1
   14001b4a1:	sub    BYTE PTR [rax+0x74],ch
   14001b4a4:	ins    DWORD PTR es:[rdi],dx
   14001b4a5:	ins    BYTE PTR es:[rdi],dx
   14001b4a6:	and    BYTE PTR [rsi+0x69],ah
   14001b4a9:	ins    BYTE PTR es:[rdi],dx
   14001b4aa:	gs jae 0x14001b4d9
   14001b4ad:	and    BYTE PTR [rcx+0x6d],ch
   14001b4b0:	(bad)  
   14001b4b1:	addr32 gs jae 0x14001b4e1
   14001b4b5:	and    BYTE PTR [rbx+0x74],dh
   14001b4b8:	jns    0x14001b526
   14001b4ba:	gs jae 0x14001b525
   14001b4bd:	gs gs je 0x14001b534
   14001b4c1:	sub    al,0x20
   14001b4c3:	cs cs sub DWORD PTR cs:[rip+0x63656e0a],ecx        # 0x1a36722d6
   14001b4cc:	gs jae 0x14001b542
   14001b4cf:	(bad)  
   14001b4d0:	jb     0x14001b54b
   14001b4d2:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001b4d6:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
   14001b4de:	je     0x14001b548
   14001b4e0:	and    BYTE PTR gs:[rdi+rbp*2+0x63],ah
   14001b4e5:	jne    0x14001b554
   14001b4e7:	outs   dx,BYTE PTR gs:[rsi]
   14001b4e9:	je     0x14001b54c
   14001b4eb:	je     0x14001b556
   14001b4ed:	outs   dx,DWORD PTR ds:[rsi]
   14001b4ee:	outs   dx,BYTE PTR ds:[rsi]
   14001b4ef:	and    BYTE PTR [rbx+0x6f],ah
   14001b4f2:	jb     0x14001b566
   14001b4f4:	movsxd esi,DWORD PTR gs:[rsp+rbp*2+0x79]
   14001b4f9:	cs cmp al,0x2f
   14001b4fc:	jo     0x14001b53c
   14001b4fe:	or     eax,0x3e703c0a
   14001b503:	push   rsp
   14001b504:	outs   dx,DWORD PTR ds:[rsi]
   14001b505:	and    BYTE PTR [rdx+0x65],ah
   14001b508:	and    BYTE PTR [rcx+0x62],ah
   14001b50b:	ins    BYTE PTR es:[rdi],dx
   14001b50c:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001b511:	imul   bp,WORD PTR [rsi+0x64],0x6120
   14001b517:	ins    BYTE PTR es:[rdi],dx
   14001b518:	ins    BYTE PTR es:[rdi],dx
   14001b519:	and    BYTE PTR [rax+rbp*2+0x6f],dh
   14001b51d:	jae    0x14001b584
   14001b51f:	and    BYTE PTR [rsi+0x69],ah
   14001b522:	ins    BYTE PTR es:[rdi],dx
   14001b523:	gs jae 0x14001b552
   14001b526:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b52a:	and    BYTE PTR [rbx+0x6f],dh
   14001b52d:	jne    0x14001b5a1
   14001b52f:	movsxd esp,DWORD PTR [rbp+0x20]
   14001b532:	jo     0x14001b595
   14001b534:	je     0x14001b59e
   14001b536:	jae    0x14001b558
   14001b538:	push   0x20657661
   14001b53d:	je     0x14001b5ae
   14001b53f:	and    BYTE PTR [rdx+0x65],ah
   14001b542:	and    BYTE PTR [rdi+0x69],ah
   14001b545:	jbe    0x14001b5ac
   14001b547:	outs   dx,BYTE PTR ds:[rsi]
   14001b548:	cs cmp al,0x2f
   14001b54b:	jo     0x14001b58b
   14001b54d:	or     eax,0x622f3c0a
   14001b552:	outs   dx,DWORD PTR ds:[rsi]
   14001b553:	fs jns 0x14001b594
   14001b556:	or     eax,0x682f3c0a
   14001b55b:	je     0x14001b5ca
   14001b55d:	ins    BYTE PTR es:[rdi],dx
   14001b55e:	ds or  eax,0x300000a
   14001b564:	jb     0x14001b5a2
   14001b566:	push   0x3e6c6d74
   14001b56b:	or     eax,0x6f623c0a
   14001b570:	fs jns 0x14001b5b1
   14001b573:	or     eax,0x3e703c0a
   14001b578:	cmp    al,0x62
   14001b57a:	ds rex.WB
   14001b57c:	fs outs dx,BYTE PTR gs:[rsi]
   14001b57f:	je     0x14001b5ea
   14001b581:	imul   sp,WORD PTR [rbp+0x72],0x3c73
   14001b587:	(bad)  
   14001b588:	(bad)  
   14001b589:	and    BYTE PTR ds:[rcx+0x72],ah
   14001b58d:	and    BYTE PTR gs:[rbp+0x6f],ch
   14001b591:	jae    0x14001b607
   14001b593:	ins    BYTE PTR es:[rdi],dx
   14001b594:	jns    0x14001b5b6
   14001b596:	jne    0x14001b60b
   14001b598:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14001b59e:	ins    DWORD PTR es:[rdi],dx
   14001b59f:	(bad)  
   14001b5a0:	imul   esp,DWORD PTR [rbp+0x20],0x6b
   14001b5a4:	gs jns 0x14001b61e
   14001b5a7:	outs   dx,DWORD PTR ds:[rsi]
   14001b5a8:	jb     0x14001b60e
   14001b5aa:	jae    0x14001b5cc
   14001b5ac:	jne    0x14001b61c
   14001b5ae:	imul   esi,DWORD PTR [rcx+0x75],0x62202c65
   14001b5b5:	jne    0x14001b62b
   14001b5b7:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b5bb:	jns    0x14001b5dd
   14001b5bd:	movsxd esp,DWORD PTR [rcx+0x6e]
   14001b5c0:	and    BYTE PTR [rcx+0x6c],ah
   14001b5c3:	jae    0x14001b634
   14001b5c5:	or     eax,0x2065620a
   14001b5ca:	jne    0x14001b63f
   14001b5cc:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14001b5d2:	jae    0x14001b644
   14001b5d4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001b5d8:	jns    0x14001b5fa
   14001b5da:	imul   esp,DWORD PTR [rbp+0x79],0x77
   14001b5de:	outs   dx,DWORD PTR ds:[rsi]
   14001b5df:	jb     0x14001b645
   14001b5e1:	jae    0x14001b603
   14001b5e3:	ja     0x14001b64d
   14001b5e5:	imul   esp,DWORD PTR [rbx+0x68],0x6f687320
   14001b5ec:	jne    0x14001b65a
   14001b5ee:	and    BYTE PTR fs:[rsi+0x6f],ch
   14001b5f2:	je     0x14001b614
   14001b5f4:	(bad)  
   14001b5f5:	and    BYTE PTR gs:[rbx+0x68],dh
   14001b5f9:	outs   dx,DWORD PTR ds:[rsi]
   14001b5fa:	ja     0x14001b66a
   14001b5fc:	and    BYTE PTR [rcx+0x6e],ch
   14001b5ff:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b603:	and    BYTE PTR [rcx+0x6e],ch
   14001b606:	fs gs js 0x14001b638
   14001b60a:	and    BYTE PTR [rcx+0x64],cl
   14001b60d:	outs   dx,BYTE PTR gs:[rsi]
   14001b60f:	je     0x14001b67a
   14001b611:	imul   sp,WORD PTR [rbp+0x72],0xd73
   14001b617:	or     ah,BYTE PTR [rcx+0x72]
   14001b61a:	and    BYTE PTR gs:[rbp+0x73],ah
   14001b61e:	jo     0x14001b685
   14001b620:	movsxd ebp,DWORD PTR [rcx+0x61]
   14001b623:	ins    BYTE PTR es:[rdi],dx
   14001b624:	ins    BYTE PTR es:[rdi],dx
   14001b625:	jns    0x14001b647
   14001b627:	push   0x20706c65
   14001b62c:	data16 jne 0x14001b69b
   14001b62f:	ins    BYTE PTR es:[rdi],dx
   14001b630:	and    BYTE PTR [rdi+0x68],dh
   14001b633:	outs   dx,BYTE PTR gs:[rsi]
   14001b635:	and    BYTE PTR [rbp+0x73],dh
   14001b638:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
   14001b63f:	je     0x14001b6a6
   14001b641:	js     0x14001b6b7
   14001b643:	and    BYTE PTR [rbx+0x65],dh
   14001b646:	outs   dx,BYTE PTR ds:[rsi]
   14001b647:	jae    0x14001b6b2
   14001b649:	je     0x14001b6b4
   14001b64b:	jbe    0x14001b6b2
   14001b64d:	and    BYTE PTR [rax+0x65],ch
   14001b650:	ins    BYTE PTR es:[rdi],dx
   14001b651:	jo     0x14001b673
   14001b653:	(bad)  
   14001b654:	outs   dx,BYTE PTR ds:[rsi]
   14001b655:	and    BYTE PTR fs:[rdi+0x6e],ch
   14001b659:	and    BYTE PTR gs:[rbx+0x65],ch
   14001b65d:	jns    0x14001b6d6
   14001b65f:	outs   dx,DWORD PTR ds:[rsi]
   14001b660:	jb     0x14001b6c6
   14001b662:	and    BYTE PTR [rax+0x61],ch
   14001b665:	jae    0x14001b674
   14001b667:	or     ch,BYTE PTR [rbp+0x6f]
   14001b66a:	jb     0x14001b6d1
   14001b66c:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14001b670:	imul   esi,DWORD PTR [rbx+0x20],0x61
   14001b674:	jae    0x14001b6e9
   14001b676:	imul   esp,DWORD PTR [rdi+0x6e],0x74206465
   14001b67d:	outs   dx,DWORD PTR ds:[rsi]
   14001b67e:	and    BYTE PTR [rcx+0x74],ch
   14001b681:	cs cmp al,0x2f
   14001b684:	jo     0x14001b6c4
   14001b686:	or     eax,0x3e703c0a
   14001b68b:	rex.RB
   14001b68c:	cs and BYTE PTR cs:[ebx+0x6f],ah
   14001b692:	outs   dx,BYTE PTR ds:[rsi]
   14001b693:	jae    0x14001b6fe
   14001b695:	fs gs jb 0x14001b6b9
   14001b699:	je     0x14001b703
   14001b69b:	and    BYTE PTR gs:[rbx+0x65],ch
   14001b69f:	jns    0x14001b718
   14001b6a1:	outs   dx,DWORD PTR ds:[rsi]
   14001b6a2:	jb     0x14001b708
   14001b6a4:	and    BYTE PTR [rdx],ah
   14001b6a6:	jb     0x14001b70d
   14001b6a8:	jo     0x14001b716
   14001b6aa:	(bad)  
   14001b6ab:	movsxd esp,DWORD PTR [rbp+0x22]
   14001b6ae:	and    BYTE PTR [rcx+0x6e],ch
   14001b6b1:	and    BYTE PTR [rcx+0x74],dl
   14001b6b4:	and    BYTE PTR cs:[rcx+0x74],cl
   14001b6b8:	and    BYTE PTR [rcx+0x73],ch
   14001b6bb:	or     eax,0x636e690a
   14001b6c0:	ins    BYTE PTR es:[rdi],dx
   14001b6c1:	jne    0x14001b727
   14001b6c3:	gs fs sub al,0x20
   14001b6c7:	(bad)  
   14001b6c8:	ins    DWORD PTR es:[rdi],dx
   14001b6c9:	outs   dx,DWORD PTR ds:[rsi]
   14001b6ca:	outs   dx,BYTE PTR ds:[rsi]
   14001b6cb:	and    BYTE PTR [edi+0x74],ch
   14001b6cf:	push   0x2c737265
   14001b6d4:	and    BYTE PTR [rcx+0x6e],ch
   14001b6d7:	and    BYTE PTR [rcx+0x53],dl
   14001b6da:	je     0x14001b74e
   14001b6dc:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6120
   14001b6e3:	and    BYTE PTR [rcx+0x4c],dl
   14001b6e6:	imul   esi,DWORD PTR [rbx+0x74],0x6f54202e
   14001b6ed:	and    BYTE PTR [rdx+0x65],ah
   14001b6f0:	and    BYTE PTR [rcx+0x62],ah
   14001b6f3:	ins    BYTE PTR es:[rdi],dx
   14001b6f4:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14001b6f9:	jb     0x14001b760
   14001b6fb:	je     0x14001b76f
   14001b6fd:	imul   esp,DWORD PTR [rbp+0x76],0x68742065
   14001b704:	and    BYTE PTR gs:[rax+0x72],dh
   14001b708:	outs   dx,DWORD PTR ds:[rsi]
   14001b709:	jo     0x14001b770
   14001b70b:	jb     0x14001b71a
   14001b70d:	or     ah,BYTE PTR [rdi+rbp*2+0x63]
   14001b711:	jne    0x14001b780
   14001b713:	outs   dx,BYTE PTR gs:[rsi]
   14001b715:	je     0x14001b778
   14001b717:	je     0x14001b782
   14001b719:	outs   dx,DWORD PTR ds:[rsi]
   14001b71a:	outs   dx,BYTE PTR ds:[rsi]
   14001b71b:	sub    al,0x20
   14001b71d:	je     0x14001b787
   14001b71f:	gs jb  0x14001b787
   14001b722:	and    BYTE PTR [rcx+0x73],ch
   14001b725:	and    BYTE PTR [rcx+0x6e],ah
   14001b728:	and    BYTE PTR [rcx+0x64],ch
   14001b72b:	outs   dx,BYTE PTR gs:[rsi]
   14001b72d:	je     0x14001b798
   14001b72f:	imul   sp,WORD PTR [rbp+0x72],0x2220
   14001b735:	push   rcx
   14001b736:	push   rbx
   14001b737:	je     0x14001b7ab
   14001b739:	imul   ebp,DWORD PTR [rsi+0x67],0x65723a3a
   14001b740:	jo     0x14001b7ae
   14001b742:	(bad)  
   14001b743:	movsxd esp,DWORD PTR [rbp+0x22]
   14001b746:	and    BYTE PTR [rcx+0x6e],ah
   14001b749:	and    BYTE PTR fs:[rdi+0x6e],ch
   14001b74d:	gs or  eax,0x4c51220a
   14001b753:	imul   esi,DWORD PTR [rbx+0x74],0x65723a3a
   14001b75a:	jo     0x14001b7c8
   14001b75c:	(bad)  
   14001b75d:	movsxd esp,DWORD PTR [rbp+0x22]
   14001b760:	cs cmp al,0x2f
   14001b763:	jo     0x14001b7a3
   14001b765:	or     eax,0x3e703c0a
   14001b76a:	and    BYTE PTR [r10+riz*2],dil
   14001b76e:	ds ins BYTE PTR es:[edi],dx
   14001b771:	outs   dx,DWORD PTR ds:[rsi]
   14001b772:	(bad)
   14001b777:	jb     0x14001b7de
   14001b779:	imul   di,WORD PTR [rax+0x3c],0x622f
   14001b77f:	ds sub al,0x20
   14001b782:	gs cs and BYTE PTR cs:[edx],ah
   14001b788:	rex.WRB jns 0x14001b7cc
   14001b78b:	jo     0x14001b7fd
   14001b78d:	cmp    bh,BYTE PTR [rdx]
   14001b78f:	and    ah,BYTE PTR [rax]
   14001b791:	imul   esi,DWORD PTR [rbx+0x20],0x20746573
   14001b798:	outs   dx,WORD PTR ds:[rsi]
   14001b79a:	jb     0x14001b7bc
   14001b79c:	(bad)  
   14001b79d:	ins    BYTE PTR es:[rdi],dx
   14001b79e:	ins    BYTE PTR es:[rdi],dx
   14001b79f:	and    BYTE PTR [rbx+0x65],ch
   14001b7a2:	jns    0x14001b81b
   14001b7a4:	outs   dx,DWORD PTR ds:[rsi]
   14001b7a5:	jb     0x14001b80b
   14001b7a7:	jae    0x14001b7c9
   14001b7a9:	imul   ebp,DWORD PTR [rsi+0x64],0x6e657065
   14001b7b0:	fs outs dx,BYTE PTR gs:[rsi]
   14001b7b3:	je     0x14001b7c2
   14001b7b5:	or     dh,BYTE PTR [rdi+0x68]
   14001b7b8:	gs jb  0x14001b820
   14001b7bb:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b7bf:	jns    0x14001b7e1
   14001b7c1:	(bad)  
   14001b7c2:	jb     0x14001b829
   14001b7c4:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   14001b7c8:	(bad)  
   14001b7c9:	je     0x14001b830
   14001b7cb:	fs and BYTE PTR cs:[rdi+0x68],dl
   14001b7d0:	outs   dx,BYTE PTR gs:[rsi]
   14001b7d2:	and    BYTE PTR [rdx+riz*2],bh
   14001b7d5:	imul   ebp,DWORD PTR ds:[rsi+0x68],0x74697265
   14001b7dd:	imul   ebp,DWORD PTR [rsi+0x67],0x3e622f3c
   14001b7e4:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b7e8:	and    BYTE PTR [rax+0x72],dh
   14001b7eb:	imul   di,WORD PTR gs:[rax+0x20],0x7266
   14001b7f2:	outs   dx,DWORD PTR ds:[rsi]
   14001b7f3:	ins    DWORD PTR es:[rdi],dx
   14001b7f4:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b7f8:	and    BYTE PTR [rsi+0x69],ah
   14001b7fb:	ins    BYTE PTR es:[rdi],dx
   14001b7fc:	and    BYTE PTR gs:[rsi+0x61],ch
   14001b800:	ins    DWORD PTR es:[rdi],dx
   14001b801:	gs sub al,0xd
   14001b804:	or     dh,BYTE PTR [rax+rbp*2+0x65]
   14001b808:	and    BYTE PTR [rbx+0x65],ch
   14001b80b:	jns    0x14001b884
   14001b80d:	outs   dx,DWORD PTR ds:[rsi]
   14001b80e:	jb     0x14001b874
   14001b810:	jae    0x14001b832
   14001b812:	addr32 gs je 0x14001b836
   14001b816:	je     0x14001b880
   14001b818:	and    BYTE PTR gs:[rax+0x72],dh
   14001b81c:	imul   di,WORD PTR gs:[rax+0x20],0x5b22
   14001b823:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   14001b82a:	gs pop rbp
   14001b82c:	cmp    bh,BYTE PTR [rdx]
   14001b82e:	and    ah,BYTE PTR [rax]
   14001b830:	ja     0x14001b89a
   14001b832:	gs jb  0x14001b89a
   14001b835:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b839:	and    BYTE PTR [rsi+0x69],ah
   14001b83c:	ins    BYTE PTR es:[rdi],dx
   14001b83d:	and    BYTE PTR gs:[rsi+0x61],ch
   14001b841:	ins    DWORD PTR es:[rdi],dx
   14001b842:	and    BYTE PTR gs:[rcx+0x73],ch
   14001b846:	and    BYTE PTR [rcx+riz*2+0x6b],dh
   14001b84a:	outs   dx,BYTE PTR gs:[rsi]
   14001b84c:	and    BYTE PTR [rsi+0x72],ah
   14001b84f:	outs   dx,DWORD PTR ds:[rsi]
   14001b850:	ins    DWORD PTR es:[rdi],dx
   14001b851:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b855:	or     eax,0x6665720a
   14001b85a:	gs jb  0x14001b8c2
   14001b85d:	outs   dx,BYTE PTR ds:[rsi]
   14001b85e:	movsxd esp,DWORD PTR [rbp+0x20]
   14001b861:	outs   dx,DWORD PTR ds:[rsi]
   14001b862:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
   14001b867:	and    BYTE PTR [rbx+0x65],ch
   14001b86a:	jns    0x14001b8e3
   14001b86c:	outs   dx,DWORD PTR ds:[rsi]
   14001b86d:	jb     0x14001b8d3
   14001b86f:	and    BYTE PTR cs:[rax+rbp*2+0x65],dl
   14001b874:	and    BYTE PTR [rsi+0x69],ah
   14001b877:	ins    BYTE PTR es:[rdi],dx
   14001b878:	and    BYTE PTR gs:[rsi+0x61],ch
   14001b87c:	ins    DWORD PTR es:[rdi],dx
   14001b87d:	and    BYTE PTR gs:[rcx+0x73],ch
   14001b881:	and    BYTE PTR [rdx+0x75],ch
   14001b884:	jae    0x14001b8fa
   14001b886:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b88a:	and    BYTE PTR [rdx+0x61],ah
   14001b88d:	jae    0x14001b8f4
   14001b88f:	and    BYTE PTR [rsi+0x61],ch
   14001b892:	ins    DWORD PTR es:[rdi],dx
   14001b893:	gs sub al,0x20
   14001b896:	imul   ebp,DWORD PTR [rsi],0x77202e65
   14001b89c:	imul   esi,DWORD PTR [rax+rbp*2+0x6f],0x61207475
   14001b8a4:	outs   dx,BYTE PTR ds:[rsi]
   14001b8a5:	jns    0x14001b8b4
   14001b8a7:	or     ah,BYTE PTR [rcx+rbp*2+0x72]
   14001b8ab:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001b8b0:	jns    0x14001b8d2
   14001b8b2:	outs   dx,DWORD PTR ds:[rsi]
   14001b8b3:	jb     0x14001b8d5
   14001b8b5:	gs js  0x14001b92c
   14001b8b8:	outs   dx,BYTE PTR gs:[rsi]
   14001b8ba:	jae    0x14001b925
   14001b8bc:	outs   dx,DWORD PTR ds:[rsi]
   14001b8bd:	outs   dx,BYTE PTR ds:[rsi]
   14001b8be:	cs cmp al,0x2f
   14001b8c1:	jo     0x14001b901
   14001b8c3:	or     eax,0x622f3c0a
   14001b8c8:	outs   dx,DWORD PTR ds:[rsi]
   14001b8c9:	fs jns 0x14001b90a
   14001b8cc:	or     eax,0x682f3c0a
   14001b8d1:	je     0x14001b940
   14001b8d3:	ins    BYTE PTR es:[rdi],dx
   14001b8d4:	ds or  eax,0xa
   14001b8da:	(bad)  
   14001b8db:	cmp    al,0x68
   14001b8dd:	je     0x14001b94c
   14001b8df:	ins    BYTE PTR es:[rdi],dx
   14001b8e0:	ds or  eax,0x6f623c0a
   14001b8e6:	fs jns 0x14001b927
   14001b8e9:	or     eax,0x3e703c0a
   14001b8ee:	push   rsp
   14001b8ef:	push   0x70732065
   14001b8f4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001b8f8:	imul   esp,DWORD PTR [rbp+0x64],0x74756f20
   14001b8ff:	jo     0x14001b976
   14001b901:	je     0x14001b923
   14001b903:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7720
   14001b90a:	imul   ebp,DWORD PTR [rsp+rbp*2+0x20],0x6c206562
   14001b912:	outs   dx,DWORD PTR ds:[rsi]
   14001b913:	movsxd esp,DWORD PTR [rcx+0x74]
   14001b916:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14001b91b:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b91f:	and    BYTE PTR [rbx+0x61],dh
   14001b922:	ins    DWORD PTR es:[rdi],dx
   14001b923:	and    BYTE PTR gs:[rcx+rbp*2+0x72],ah
   14001b928:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14001b92d:	jns    0x14001b94f
   14001b92f:	(bad)  
   14001b930:	jae    0x14001b952
   14001b932:	je     0x14001b99c
   14001b934:	gs or  eax,0x64612e0a
   14001b93a:	jo     0x14001b95c
   14001b93c:	outs   dx,DWORD PTR ds:[rsi]
   14001b93d:	jb     0x14001b95f
   14001b93f:	cs movsxd esp,DWORD PTR fs:[rsi+0x20]
   14001b944:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x5420
   14001b94b:	push   0x6f632065
   14001b950:	ins    BYTE PTR es:[rdi],dx
   14001b951:	ins    BYTE PTR es:[rdi],dx
   14001b952:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001b957:	outs   dx,BYTE PTR ds:[rsi]
   14001b958:	and    BYTE PTR [rsi+0x69],ah
   14001b95b:	ins    BYTE PTR es:[rdi],dx
   14001b95c:	and    BYTE PTR gs:[rdi+0x69],dh
   14001b960:	ins    BYTE PTR es:[rdi],dx
   14001b961:	ins    BYTE PTR es:[rdi],dx
   14001b962:	and    BYTE PTR [rdi+0x6e],ch
   14001b965:	ins    BYTE PTR es:[rdi],dx
   14001b966:	jns    0x14001b988
   14001b968:	(bad)  
   14001b969:	and    BYTE PTR gs:[rdi+0x65],ah
   14001b96d:	outs   dx,BYTE PTR ds:[rsi]
   14001b96e:	gs jb  0x14001b9d2
   14001b971:	je     0x14001b9d8
   14001b973:	and    BYTE PTR fs:[rcx+0x66],ch
   14001b977:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001b97b:	and    BYTE PTR [rcx+0x6e],ch
   14001b97e:	jo     0x14001b9f5
   14001b980:	je     0x14001b98f
   14001b982:	or     ah,BYTE PTR [rsi+0x69]
   14001b985:	ins    BYTE PTR es:[rdi],dx
   14001b986:	and    BYTE PTR gs:[rdi+0x61],dh
   14001b98a:	jae    0x14001b9ac
   14001b98c:	(bad)  
   14001b98d:	outs   dx,BYTE PTR ds:[rsi]
   14001b98e:	and    BYTE PTR [rsi],ch
   14001b990:	(bad)  
   14001b991:	fs jo  0x14001b9b4
   14001b994:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x2f3c
   14001b99b:	jo     0x14001b9db
   14001b99d:	or     eax,0x622f3c0a
   14001b9a2:	outs   dx,DWORD PTR ds:[rsi]
   14001b9a3:	fs jns 0x14001b9e4
   14001b9a6:	or     eax,0x682f3c0a
   14001b9ab:	je     0x14001ba1a
   14001b9ad:	ins    BYTE PTR es:[rdi],dx
   14001b9ae:	ds or  eax,0x100000a
   14001b9b4:	scas   al,BYTE PTR es:[rdi]
   14001b9b5:	cmp    al,0x68
   14001b9b7:	je     0x14001ba26
   14001b9b9:	ins    BYTE PTR es:[rdi],dx
   14001b9ba:	ds or  eax,0x6f623c0a
   14001b9c0:	fs jns 0x14001ba01
   14001b9c3:	or     eax,0x3e703c0a
   14001b9c8:	push   rsp
   14001b9c9:	push   0x623c2065
   14001b9ce:	outs   dx,BYTE PTR ds:[rsi]
   14001b9d0:	(bad)  
   14001b9d1:	ins    DWORD PTR es:[rdi],dx
   14001b9d2:	gs jae 0x14001ba45
   14001b9d5:	(bad)  
   14001b9d6:	movsxd esp,DWORD PTR [rbp+0x3c]
   14001b9d9:	(bad)  
   14001b9da:	(bad)  
   14001b9db:	and    BYTE PTR ds:[rcx+0x73],ch
   14001b9df:	and    BYTE PTR [rsi+0x65],ch
   14001b9e2:	gs fs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14001b9ea:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x79666974
   14001b9f2:	and    BYTE PTR [rax+rbp*2+0x69],dh
   14001b9f6:	jae    0x14001ba18
   14001b9f8:	outs   dx,DWORD PTR fs:[rsi]
   14001b9fa:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001b9fd:	outs   dx,BYTE PTR gs:[rsi]
   14001b9ff:	je     0x14001ba62
   14001ba01:	je     0x14001ba6c
   14001ba03:	outs   dx,DWORD PTR ds:[rsi]
   14001ba04:	outs   dx,BYTE PTR ds:[rsi]
   14001ba05:	and    BYTE PTR [rdi+0x68],dh
   14001ba08:	outs   dx,BYTE PTR gs:[rsi]
   14001ba0a:	and    BYTE PTR [rax+0x61],ch
   14001ba0d:	jbe    0x14001ba78
   14001ba0f:	outs   dx,BYTE PTR ds:[rsi]
   14001ba10:	addr32 or eax,0x7665730a
   14001ba16:	gs jb  0x14001ba7a
   14001ba19:	ins    BYTE PTR es:[rdi],dx
   14001ba1a:	and    BYTE PTR [rdi+rbp*2+0x63],ah
   14001ba1e:	jne    0x14001ba8d
   14001ba20:	outs   dx,BYTE PTR gs:[rsi]
   14001ba22:	je     0x14001ba85
   14001ba24:	je     0x14001ba8f
   14001ba26:	outs   dx,DWORD PTR ds:[rsi]
   14001ba27:	outs   dx,BYTE PTR ds:[rsi]
   14001ba28:	and    BYTE PTR [rbx+0x65],dh
   14001ba2b:	je     0x14001baa0
   14001ba2d:	and    BYTE PTR [rcx+0x6e],ch
   14001ba30:	jae    0x14001baa6
   14001ba32:	(bad)  
   14001ba33:	ins    BYTE PTR es:[rdi],dx
   14001ba34:	ins    BYTE PTR es:[rdi],dx
   14001ba35:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14001ba3a:	and    BYTE PTR [rcx+0x20],ah
   14001ba3d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14001ba40:	ins    BYTE PTR es:[rdi],dx
   14001ba41:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14001ba46:	outs   dx,BYTE PTR ds:[rsi]
   14001ba47:	cs cmp al,0x2f
   14001ba4a:	jo     0x14001ba8a
   14001ba4c:	or     eax,0x3e703c0a
   14001ba51:	cmp    al,0x62
   14001ba53:	ds push rsi
   14001ba55:	imul   esi,DWORD PTR [rdx+0x74],0x3c6c6175
   14001ba5c:	(bad)  
   14001ba5d:	(bad)  
   14001ba5e:	and    BYTE PTR ds:[rsi+0x6f],ah
   14001ba62:	ins    BYTE PTR es:[rdi],dx
   14001ba63:	fs gs jb 0x14001bada
   14001ba67:	and    BYTE PTR [rcx+0x72],ah
   14001ba6a:	and    BYTE PTR gs:[rbp+0x73],dh
   14001ba6e:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14001ba74:	outs   dx,BYTE PTR gs:[rsi]
   14001ba76:	(bad)  
   14001ba77:	(bad)  
   14001ba78:	ins    BYTE PTR es:[rdi],dx
   14001ba79:	and    BYTE PTR gs:[rsi+0x69],ah
   14001ba7d:	ins    BYTE PTR es:[rdi],dx
   14001ba7e:	and    BYTE PTR gs:[rdx+0x65],dh
   14001ba82:	data16 gs jb 0x14001baeb
   14001ba86:	outs   dx,BYTE PTR ds:[rsi]
   14001ba87:	movsxd esp,DWORD PTR [rbp+0x73]
   14001ba8a:	and    BYTE PTR [rdx+0x65],ah
   14001ba8d:	je     0x14001bb06
   14001ba8f:	gs outs dx,BYTE PTR gs:[rsi]
   14001ba92:	and    BYTE PTR [rcx+0x6c],ah
   14001ba95:	ins    BYTE PTR es:[rdi],dx
   14001ba96:	or     eax,0x636f640a
   14001ba9b:	jne    0x14001bb0a
   14001ba9d:	outs   dx,BYTE PTR gs:[rsi]
   14001ba9f:	je     0x14001bb14
   14001baa1:	and    BYTE PTR cs:[rax+rbp*2+0x65],dl
   14001baa6:	jb     0x14001bb0d
   14001baa8:	(bad)  
   14001baa9:	jns    0x14001bad7
   14001baab:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001baaf:	and    BYTE PTR [rsi+0x69],dh
   14001bab2:	jb     0x14001bb28
   14001bab4:	jne    0x14001bb17
   14001bab6:	ins    BYTE PTR es:[rdi],dx
   14001bab7:	and    BYTE PTR [rsi+0x6f],ah
   14001baba:	ins    BYTE PTR es:[rdi],dx
   14001babb:	fs gs jb 0x14001badf
   14001babf:	(bad)  
   14001bac0:	movsxd esi,DWORD PTR [rbx+rsi*2+0x20]
   14001bac4:	(bad)  
   14001bac5:	jae    0x14001bae7
   14001bac7:	je     0x14001bb31
   14001bac9:	and    BYTE PTR gs:[rdx+0x6f],dh
   14001bacd:	outs   dx,DWORD PTR ds:[rsi]
   14001bace:	je     0x14001baf0
   14001bad0:	jo     0x14001bb33
   14001bad2:	je     0x14001bb3c
   14001bad4:	and    BYTE PTR [rdi+0x66],ch
   14001bad7:	and    BYTE PTR [rcx+0x6c],ah
   14001bada:	ins    BYTE PTR es:[rdi],dx
   14001badb:	or     eax,0x636f640a
   14001bae0:	jne    0x14001bb4f
   14001bae2:	outs   dx,BYTE PTR gs:[rsi]
   14001bae4:	je     0x14001bb59
   14001bae6:	sub    al,0x20
   14001bae8:	gs jbe 0x14001bb50
   14001baeb:	outs   dx,BYTE PTR ds:[rsi]
   14001baec:	and    BYTE PTR [rcx+0x66],ch
   14001baef:	and    BYTE PTR [rax+rbp*2+0x6f],dh
   14001baf3:	jae    0x14001bb5a
   14001baf5:	and    BYTE PTR [rcx+0x72],ah
   14001baf8:	and    BYTE PTR gs:[rax+0x61],dh
   14001bafc:	jb     0x14001bb72
   14001bafe:	and    BYTE PTR [rdi+0x66],ch
   14001bb01:	and    BYTE PTR [rcx+rbp*2+0x66],ah
   14001bb05:	data16 gs jb 0x14001bb6e
   14001bb09:	outs   dx,BYTE PTR ds:[rsi]
   14001bb0a:	je     0x14001bb2c
   14001bb0c:	outs   dx,DWORD PTR fs:[rsi]
   14001bb0e:	movsxd esi,DWORD PTR [rbp+0x6d]
   14001bb11:	outs   dx,BYTE PTR gs:[rsi]
   14001bb13:	je     0x14001bb76
   14001bb15:	je     0x14001bb80
   14001bb17:	outs   dx,DWORD PTR ds:[rsi]
   14001bb18:	outs   dx,BYTE PTR ds:[rsi]
   14001bb19:	and    BYTE PTR [rbx+0x65],dh
   14001bb1c:	je     0x14001bb91
   14001bb1e:	sub    al,0xd
   14001bb20:	or     ch,BYTE PTR [rbp+0x65]
   14001bb23:	(bad)  
   14001bb24:	outs   dx,BYTE PTR ds:[rsi]
   14001bb25:	imul   ebp,DWORD PTR [rsi+0x67],0x73696c20
   14001bb2c:	je     0x14001bb93
   14001bb2e:	and    BYTE PTR fs:[rbp+0x6e],dh
   14001bb32:	fs gs jb 0x14001bb56
   14001bb36:	imul   esp,DWORD PTR fs:[rsi+0x66],0x6e657265
   14001bb3e:	je     0x14001bb60
   14001bb40:	outs   dx,BYTE PTR ds:[rsi]
   14001bb41:	(bad)  
   14001bb42:	ins    DWORD PTR es:[rdi],dx
   14001bb43:	gs jae 0x14001bbb6
   14001bb46:	(bad)  
   14001bb47:	movsxd esp,DWORD PTR [rbp+0x73]
   14001bb4a:	cs cmp al,0x2f
   14001bb4d:	jo     0x14001bb8d
   14001bb4f:	or     eax,0x622f3c0a
   14001bb54:	outs   dx,DWORD PTR ds:[rsi]
   14001bb55:	fs jns 0x14001bb96
   14001bb58:	or     eax,0x682f3c0a
   14001bb5d:	je     0x14001bbcc
   14001bb5f:	ins    BYTE PTR es:[rdi],dx
   14001bb60:	ds or  eax,0x200000a
   14001bb66:	xchg   ebx,eax
   14001bb67:	cmp    al,0x68
   14001bb69:	je     0x14001bbd8
   14001bb6b:	ins    BYTE PTR es:[rdi],dx
   14001bb6c:	ds or  eax,0x6f623c0a
   14001bb72:	fs jns 0x14001bbb3
   14001bb75:	or     eax,0x3e703c0a
   14001bb7a:	push   rsp
   14001bb7b:	push   0x65682065
   14001bb80:	ins    BYTE PTR es:[rdi],dx
   14001bb81:	jo     0x14001bba3
   14001bb83:	jae    0x14001bbfe
   14001bb85:	jae    0x14001bbfb
   14001bb87:	gs ins DWORD PTR es:[rdi],dx
   14001bb89:	and    BYTE PTR [rdi+0x66],ch
   14001bb8c:	data16 gs jb 0x14001bc03
   14001bb90:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001bb94:	and    BYTE PTR [rax+0x6f],dh
   14001bb97:	jae    0x14001bc0c
   14001bb99:	imul   esp,DWORD PTR [rdx+0x69],0x7974696c
   14001bba0:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001bba4:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x2072
   14001bbab:	(bad)  
   14001bbac:	ins    BYTE PTR es:[rdi],dx
   14001bbad:	ins    BYTE PTR es:[rdi],dx
   14001bbae:	and    BYTE PTR [rcx+0x6e],ch
   14001bbb1:	jae    0x14001bc27
   14001bbb3:	(bad)  
   14001bbb4:	ins    BYTE PTR es:[rdi],dx
   14001bbb5:	ins    BYTE PTR es:[rdi],dx
   14001bbb6:	gs and BYTE PTR fs:[rdi+rbp*2+0x63],ah
   14001bbbc:	jne    0x14001bc2b
   14001bbbe:	outs   dx,BYTE PTR gs:[rsi]
   14001bbc0:	je     0x14001bc23
   14001bbc2:	je     0x14001bc2d
   14001bbc4:	outs   dx,DWORD PTR ds:[rsi]
   14001bbc5:	outs   dx,BYTE PTR ds:[rsi]
   14001bbc6:	jae    0x14001bbd5
   14001bbc8:	or     ah,BYTE PTR [rsi+0x6f]
   14001bbcb:	jb     0x14001bbed
   14001bbcd:	movsxd esp,DWORD PTR [rbp+0x72]
   14001bbd0:	je     0x14001bc33
   14001bbd2:	imul   ebp,DWORD PTR [rsi+0x20],0x613e623c
   14001bbd9:	je     0x14001bc4f
   14001bbdb:	jb     0x14001bc46
   14001bbdd:	(bad)  
   14001bbde:	jne    0x14001bc54
   14001bbe0:	gs jae 0x14001bc1f
   14001bbe3:	(bad)  
   14001bbe4:	(bad)  
   14001bbe5:	ds and BYTE PTR cs:[rbx+0x6f],al
   14001bbea:	ins    DWORD PTR es:[rdi],dx
   14001bbeb:	ins    DWORD PTR es:[rdi],dx
   14001bbec:	outs   dx,DWORD PTR ds:[rsi]
   14001bbed:	outs   dx,BYTE PTR ds:[rsi]
   14001bbee:	ins    BYTE PTR es:[rdi],dx
   14001bbef:	jns    0x14001bc11
   14001bbf1:	jae    0x14001bc63
   14001bbf3:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14001bbf7:	imul   esp,DWORD PTR [rbp+0x64],0x74746120
   14001bbfe:	jb     0x14001bc69
   14001bc00:	(bad)  
   14001bc01:	jne    0x14001bc77
   14001bc03:	gs jae 0x14001bc26
   14001bc06:	(bad)  
   14001bc07:	jb     0x14001bc6e
   14001bc09:	and    BYTE PTR [rbp+0x2e],ah
   14001bc0c:	and    BYTE PTR cs:[eax+ebp*2+0x65],dh
   14001bc12:	and    BYTE PTR [rbx+0x6f],ah
   14001bc15:	ins    DWORD PTR es:[rdi],dx
   14001bc16:	jo     0x14001bc79
   14001bc18:	outs   dx,BYTE PTR ds:[rsi]
   14001bc19:	jns    0x14001bc28
   14001bc1b:	or     ah,BYTE PTR [rcx+0x6e]
   14001bc1e:	and    BYTE PTR fs:[rax+0x72],dh
   14001bc22:	outs   dx,DWORD PTR ds:[rsi]
   14001bc23:	fs jne 0x14001bc89
   14001bc26:	je     0x14001bc48
   14001bc28:	outs   dx,BYTE PTR ds:[rsi]
   14001bc29:	(bad)  
   14001bc2a:	ins    DWORD PTR es:[rdi],dx
   14001bc2b:	and    BYTE PTR gs:[rcx+0x73],ah
   14001bc2f:	and    BYTE PTR [rdi+0x65],dh
   14001bc32:	ins    BYTE PTR es:[rdi],dx
   14001bc33:	ins    BYTE PTR es:[rdi],dx
   14001bc34:	and    BYTE PTR [rcx+0x73],ah
   14001bc37:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001bc3b:	and    BYTE PTR [rax+0x72],dh
   14001bc3e:	outs   dx,DWORD PTR ds:[rsi]
   14001bc3f:	fs jne 0x14001bca5
   14001bc42:	je     0x14001bc64
   14001bc44:	jbe    0x14001bcab
   14001bc46:	jb     0x14001bcbb
   14001bc48:	imul   ebp,DWORD PTR [rdi+0x6e],0x702f3c2e
   14001bc4f:	ds or  eax,0x3e703c0a
   14001bc55:	push   rsp
   14001bc56:	push   0x65682065
   14001bc5b:	ins    BYTE PTR es:[rdi],dx
   14001bc5c:	jo     0x14001bc7e
   14001bc5e:	outs   dx,BYTE PTR gs:[rsi]
   14001bc60:	imul   ebp,DWORD PTR [esi+0x65],0x646e6120
   14001bc68:	and    BYTE PTR [rcx+0x73],al
   14001bc6b:	jae    0x14001bcd6
   14001bc6d:	jae    0x14001bce3
   14001bc6f:	(bad)  
   14001bc70:	outs   dx,BYTE PTR ds:[rsi]
   14001bc71:	je     0x14001bc93
   14001bc73:	jne    0x14001bce8
   14001bc75:	and    BYTE PTR gs:[rdx+riz*2],bh
   14001bc79:	movsxd esi,DWORD PTR ds:[rbp+0x73]
   14001bc7d:	je     0x14001bcee
   14001bc7f:	ins    DWORD PTR es:[rdi],dx
   14001bc80:	and    BYTE PTR [rsi+0x69],ah
   14001bc83:	ins    BYTE PTR es:[rdi],dx
   14001bc84:	je     0x14001bceb
   14001bc86:	jb     0x14001bcfb
   14001bc88:	cmp    al,0x2f
   14001bc8a:	(bad)  
   14001bc8b:	and    BYTE PTR ds:[rdi+rbp*2+0x20],dh
   14001bc90:	outs   dx,DWORD PTR fs:[rsi]
   14001bc92:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001bc96:	and    BYTE PTR [rcx+0x63],ah
   14001bc99:	je     0x14001bd10
   14001bc9b:	(bad)  
   14001bc9c:	ins    BYTE PTR es:[rdi],dx
   14001bc9d:	or     eax,0x636f640a
   14001bca2:	jne    0x14001bd11
   14001bca4:	outs   dx,BYTE PTR gs:[rsi]
   14001bca6:	je     0x14001bd09
   14001bca8:	je     0x14001bd13
   14001bcaa:	outs   dx,DWORD PTR ds:[rsi]
   14001bcab:	outs   dx,BYTE PTR ds:[rsi]
   14001bcac:	and    BYTE PTR [rsi+0x69],ah
   14001bcaf:	ins    BYTE PTR es:[rdi],dx
   14001bcb0:	je     0x14001bd17
   14001bcb2:	jb     0x14001bd1d
   14001bcb4:	outs   dx,BYTE PTR ds:[rsi]
   14001bcb5:	and    BYTE PTR cs:[ecx+0x20],al
   14001bcba:	movsxd esi,DWORD PTR [rbp+0x73]
   14001bcbd:	je     0x14001bd2e
   14001bcbf:	ins    DWORD PTR es:[rdi],dx
   14001bcc0:	and    BYTE PTR [rsi+0x69],ah
   14001bcc3:	ins    BYTE PTR es:[rdi],dx
   14001bcc4:	je     0x14001bd2b
   14001bcc6:	jb     0x14001bce8
   14001bcc8:	imul   esi,DWORD PTR [rbx+0x20],0x69736162
   14001bccf:	movsxd esp,DWORD PTR [rcx+0x6c]
   14001bcd2:	ins    BYTE PTR es:[rdi],dx
   14001bcd3:	jns    0x14001bcf5
   14001bcd5:	push   0x75
   14001bcd7:	jae    0x14001bd4d
   14001bcd9:	and    BYTE PTR [rcx+0x20],ah
   14001bcdc:	(bad)  
   14001bcdd:	ins    BYTE PTR es:[rdi],dx
   14001bcde:	imul   esp,DWORD PTR [rcx+0x73],0x6d616e20
   14001bce5:	and    BYTE PTR gs:[rsi+0x6f],ah
   14001bce9:	jb     0x14001bd0b
   14001bceb:	(bad)  
   14001bcec:	or     eax,0x73696c0a
   14001bcf1:	je     0x14001bd13
   14001bcf3:	outs   dx,DWORD PTR ds:[rsi]
   14001bcf4:	data16 and BYTE PTR [rsi+0x69],ah
   14001bcf8:	ins    BYTE PTR es:[rdi],dx
   14001bcf9:	je     0x14001bd60
   14001bcfb:	jb     0x14001bd1d
   14001bcfd:	(bad)  
   14001bcfe:	je     0x14001bd74
   14001bd00:	jb     0x14001bd6b
   14001bd02:	(bad)  
   14001bd03:	jne    0x14001bd79
   14001bd05:	gs jae 0x14001bd36
   14001bd08:	and    BYTE PTR [rbx+0x6f],dl
   14001bd0b:	sub    al,0x20
   14001bd0d:	imul   esp,DWORD PTR [rsi+0x20],0x2e672e65
   14001bd14:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001bd18:	and    BYTE PTR [rbx+0x75],ah
   14001bd1b:	jae    0x14001bd91
   14001bd1d:	outs   dx,DWORD PTR ds:[rsi]
   14001bd1e:	ins    DWORD PTR es:[rdi],dx
   14001bd1f:	and    BYTE PTR [rsi+0x69],ah
   14001bd22:	ins    BYTE PTR es:[rdi],dx
   14001bd23:	je     0x14001bd8a
   14001bd25:	jb     0x14001bd47
   14001bd27:	and    cl,BYTE PTR [rbp+0x79]
   14001bd2a:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x6c202272
   14001bd33:	imul   esi,DWORD PTR [rbx+0x74],0x740a0d73
   14001bd3a:	push   0x74612065
   14001bd3f:	je     0x14001bdb3
   14001bd41:	imul   esp,DWORD PTR [rdx+0x75],0x20736574
   14001bd48:	and    ch,BYTE PTR [rbp+0x79]
   14001bd4b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001bd4e:	jo     0x14001bdb1
   14001bd50:	outs   dx,BYTE PTR ds:[rsi]
   14001bd51:	jns    0x14001bd7f
   14001bd53:	and    BYTE PTR [rbp+0x79],ch
   14001bd56:	jo     0x14001bdca
   14001bd58:	outs   dx,DWORD PTR ds:[rsi]
   14001bd59:	fs jne 0x14001bdbf
   14001bd5c:	je     0x14001bd80
   14001bd5e:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14001bd62:	outs   dx,BYTE PTR ds:[rsi]
   14001bd63:	and    BYTE PTR [rdi+0x6e],ch
   14001bd66:	ins    BYTE PTR es:[rdi],dx
   14001bd67:	jns    0x14001bd89
   14001bd69:	je     0x14001bdd3
   14001bd6b:	and    BYTE PTR gs:[rdi+rbp*2+0x63],ah
   14001bd70:	jne    0x14001bddf
   14001bd72:	outs   dx,BYTE PTR gs:[rsi]
   14001bd74:	je     0x14001bdd7
   14001bd76:	je     0x14001bde1
   14001bd78:	outs   dx,DWORD PTR ds:[rsi]
   14001bd79:	outs   dx,BYTE PTR ds:[rsi]
   14001bd7a:	and    BYTE PTR [rdi+0x69],dh
   14001bd7d:	je     0x14001bde7
   14001bd7f:	and    BYTE PTR [rax+rbp*2+0x6f],dh
   14001bd83:	jae    0x14001bdea
   14001bd85:	or     eax,0x7474610a
   14001bd8a:	jb     0x14001bdf5
   14001bd8c:	(bad)  
   14001bd8d:	jne    0x14001be03
   14001bd8f:	gs jae 0x14001bdb2
   14001bd92:	ja     0x14001bdfd
   14001bd94:	ins    BYTE PTR es:[rdi],dx
   14001bd95:	ins    BYTE PTR es:[rdi],dx
   14001bd96:	and    BYTE PTR [rdx+0x65],ah
   14001bd99:	and    BYTE PTR [rbx+0x68],dh
   14001bd9c:	outs   dx,DWORD PTR ds:[rsi]
   14001bd9d:	ja     0x14001be0d
   14001bd9f:	cs cmp al,0x2f
   14001bda2:	jo     0x14001bde2
   14001bda4:	or     eax,0x3e703c0a
   14001bda9:	cmp    al,0x62
   14001bdab:	ds push rdi
   14001bdad:	(bad)  
   14001bdae:	jb     0x14001be1e
   14001bdb0:	imul   ebp,DWORD PTR [rsi+0x67],0x622f3c3a
   14001bdb7:	and    BYTE PTR ds:[rax+rbp*2+0x65],dl
   14001bdbc:	and    BYTE PTR [rsi+0x69],ah
   14001bdbf:	ins    BYTE PTR es:[rdi],dx
   14001bdc0:	je     0x14001be27
   14001bdc2:	jb     0x14001bde4
   14001bdc4:	(bad)  
   14001bdc5:	je     0x14001be3b
   14001bdc7:	jb     0x14001be32
   14001bdc9:	(bad)  
   14001bdca:	jne    0x14001be40
   14001bdcc:	gs jae 0x14001bdef
   14001bdcf:	(bad)  
   14001bdd0:	jb     0x14001be37
   14001bdd2:	and    BYTE PTR [rbx+0x61],ah
   14001bdd5:	jae    0x14001be3c
   14001bdd7:	and    BYTE PTR [rbx+0x65],dh
   14001bdda:	outs   dx,BYTE PTR ds:[rsi]
   14001bddb:	jae    0x14001be46
   14001bddd:	je     0x14001be48
   14001bddf:	jbe    0x14001be46
   14001bde1:	and    DWORD PTR [rdi+rbp*1],edi
   14001bde4:	jo     0x14001be24
   14001bde6:	or     eax,0x622f3c0a
   14001bdeb:	outs   dx,DWORD PTR ds:[rsi]
   14001bdec:	fs jns 0x14001be2d
   14001bdef:	or     eax,0x682f3c0a
   14001bdf4:	je     0x14001be63
   14001bdf6:	ins    BYTE PTR es:[rdi],dx
   14001bdf7:	ds or  eax,0xa
   14001bdfd:	add    BYTE PTR [rax],al
   14001bdff:	add    BYTE PTR [rax],al
   14001be01:	(bad)  
   14001be02:	add    eax,0x876c28
   14001be07:	jno    0x14001be09
   14001be09:	je     0x14001be0b
   14001be0b:	sub    eax,0x72007000
   14001be10:	add    BYTE PTR [rdi+0x0],ch
   14001be13:	push   0x0
   14001be15:	add    BYTE PTR gs:[rbx+0x0],ah
   14001be19:	je     0x14001be1b
   14001be1b:	add    BYTE PTR cs:[rdi+0x0],ch
   14001be1f:	jb     0x14001be21
   14001be21:	add    BYTE PTR [esi],cl
   14001be24:	or     BYTE PTR [rdx+0x4b],cl
   14001be27:	(bad)  
   14001be28:	add    BYTE PTR [rcx+0x0],dh
   14001be2b:	push   0x6c006500
   14001be30:	add    BYTE PTR [rax+0x0],dh
   14001be33:	movsxd eax,DWORD PTR [rax]
   14001be35:	outs   dx,DWORD PTR ds:[rsi]
   14001be36:	add    BYTE PTR [rsi+0x0],ch
   14001be39:	jbe    0x14001be3b
   14001be3b:	add    BYTE PTR gs:[rdx+0x0],dh
   14001be3f:	je     0x14001be41
   14001be41:	add    BYTE PTR gs:[rdx+0x0],dh
   14001be45:	add    eax,DWORD PTR [rax]
   14001be47:	add    BYTE PTR [rbx+0x53],ch
   14001be4a:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14001be4e:	add    BYTE PTR [rbx+0x0],ah
   14001be51:	or     eax,0xa7430309
   14001be56:	add    BYTE PTR [rcx+0x0],ah
   14001be59:	jae    0x14001be5b
   14001be5b:	jae    0x14001be5d
   14001be5d:	imul   eax,DWORD PTR [rax],0x740073
   14001be63:	(bad)  
   14001be64:	add    BYTE PTR [rsi+0x0],ch
   14001be67:	je     0x14001be69
   14001be69:	add    BYTE PTR cs:[rax+0x0],dh
   14001be6d:	outs   dx,BYTE PTR ds:[rsi]
   14001be6e:	add    BYTE PTR [rdi+0x0],ah
   14001be71:	adc    DWORD PTR [rax],eax
   14001be73:	test   eax,0x61006751
   14001be78:	add    BYTE PTR [rbx+0x0],dh
   14001be7b:	jae    0x14001be7d
   14001be7d:	imul   eax,DWORD PTR [rax],0x740073
   14001be83:	(bad)  
   14001be84:	add    BYTE PTR [rsi+0x0],ch
   14001be87:	je     0x14001be89
   14001be89:	sub    eax,0x32003100
   14001be8e:	add    BYTE PTR [rax],bh
   14001be90:	add    BYTE PTR [rsi],ch
   14001be92:	add    BYTE PTR [rax+0x0],dh
   14001be95:	outs   dx,BYTE PTR ds:[rsi]
   14001be96:	add    BYTE PTR [rdi+0x0],ah
   14001be99:	(bad)  
   14001be9a:	or     eax,0x9cac5d
   14001be9f:	data16 add BYTE PTR [rcx+0x0],ch
   14001bea3:	ins    BYTE PTR es:[rdi],dx
   14001bea4:	add    BYTE PTR [rbp+0x0],ah
   14001bea7:	jae    0x14001bea9
   14001bea9:	jo     0x14001beab
   14001beab:	(bad)  
   14001beac:	add    BYTE PTR [rdi+0x0],ah
   14001beaf:	add    BYTE PTR gs:[rsi],ch
   14001beb2:	add    BYTE PTR [rax+0x0],ch
   14001beb5:	je     0x14001beb7
   14001beb7:	ins    DWORD PTR es:[rdi],dx
   14001beb8:	add    BYTE PTR [rax+rax*1+0xe],ch
   14001bebc:	(bad)  
   14001bebd:	mov    ebp,0x6900dc8b
   14001bec2:	add    BYTE PTR [rsi+0x0],ch
   14001bec5:	jo     0x14001bec7
   14001bec7:	jne    0x14001bec9
   14001bec9:	je     0x14001becb
   14001becb:	jo     0x14001becd
   14001becd:	(bad)  
   14001bece:	add    BYTE PTR [rdi+0x0],ah
   14001bed1:	add    BYTE PTR gs:[rsi],ch
   14001bed4:	add    BYTE PTR [rax+0x0],ch
   14001bed7:	je     0x14001bed9
   14001bed9:	ins    DWORD PTR es:[rdi],dx
   14001beda:	add    BYTE PTR [rax+rax*1+0xd],ch
   14001bede:	add    BYTE PTR [rcx+0x70001c16],dl
   14001bee4:	add    BYTE PTR [rcx+0x0],ah
   14001bee7:	je     0x14001bee9
   14001bee9:	push   0x61007000
   14001beee:	add    BYTE PTR [rdi+0x0],ah
   14001bef1:	add    BYTE PTR gs:[rsi],ch
   14001bef4:	add    BYTE PTR [rax+0x0],ch
   14001bef7:	je     0x14001bef9
   14001bef9:	ins    DWORD PTR es:[rdi],dx
   14001befa:	add    BYTE PTR [rax+rax*1+0x13],ch
   14001befe:	or     cl,BYTE PTR [rdi+rdi*4+0x5c]
   14001bf02:	add    BYTE PTR [rcx+0x0],ch
   14001bf05:	add    BYTE PTR fs:[rbp+0x0],ah
   14001bf09:	outs   dx,BYTE PTR ds:[rsi]
   14001bf0a:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001bf0e:	add    BYTE PTR [rsi+0x0],ah
   14001bf11:	imul   eax,DWORD PTR [rax],0x720065
   14001bf17:	jo     0x14001bf19
   14001bf19:	(bad)  
   14001bf1a:	add    BYTE PTR [rdi+0x0],ah
   14001bf1d:	add    BYTE PTR gs:[rsi],ch
   14001bf20:	add    BYTE PTR [rax+0x0],ch
   14001bf23:	je     0x14001bf25
   14001bf25:	ins    DWORD PTR es:[rdi],dx
   14001bf26:	add    BYTE PTR [rax+rax*1+0xf],ch
   14001bf2a:	or     edi,DWORD PTR [rsp+rcx*2+0x6f00fc]
   14001bf31:	jne    0x14001bf33
   14001bf33:	je     0x14001bf35
   14001bf35:	jo     0x14001bf37
   14001bf37:	jne    0x14001bf39
   14001bf39:	je     0x14001bf3b
   14001bf3b:	jo     0x14001bf3d
   14001bf3d:	(bad)  
   14001bf3e:	add    BYTE PTR [rdi+0x0],ah
   14001bf41:	add    BYTE PTR gs:[rsi],ch
   14001bf44:	add    BYTE PTR [rax+0x0],ch
   14001bf47:	je     0x14001bf49
   14001bf49:	ins    DWORD PTR es:[rdi],dx
   14001bf4a:	add    BYTE PTR [rax+rax*1+0x10],ch
   14001bf4e:	add    al,0x9f
   14001bf50:	out    0xfc,al
   14001bf52:	add    BYTE PTR [rdi+0x0],ah
   14001bf55:	add    BYTE PTR gs:[rsi+0x0],ch
   14001bf59:	add    BYTE PTR gs:[rdx+0x0],dh
   14001bf5d:	(bad)  
   14001bf5e:	add    BYTE PTR [rax+rax*1+0x70],ch
   14001bf62:	add    BYTE PTR [rcx+0x0],ah
   14001bf65:	add    BYTE PTR [ebp+0x0],ah
   14001bf69:	add    BYTE PTR cs:[rax+0x0],ch
   14001bf6d:	je     0x14001bf6f
   14001bf6f:	ins    DWORD PTR es:[rdi],dx
   14001bf70:	add    BYTE PTR [rax+rax*1+0xf],ch
   14001bf74:	or     bl,BYTE PTR [rbx+riz*2-0x24]
   14001bf78:	add    BYTE PTR [rsi+0x0],ah
   14001bf7b:	imul   eax,DWORD PTR [rax],0x74006c
   14001bf81:	add    BYTE PTR gs:[rdx+0x0],dh
   14001bf85:	jo     0x14001bf87
   14001bf87:	(bad)  
   14001bf88:	add    BYTE PTR [rdi+0x0],ah
   14001bf8b:	add    BYTE PTR gs:[rsi],ch
   14001bf8e:	add    BYTE PTR [rax+0x0],ch
   14001bf91:	je     0x14001bf93
   14001bf93:	ins    DWORD PTR es:[rdi],dx
   14001bf94:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   14001bfa4:	add    BYTE PTR [rdx],al
   14001bfa6:	add    BYTE PTR [rax],al
   14001bfa8:	add    BYTE PTR [rcx],al
   14001bfaa:	add    BYTE PTR [rax],al
   14001bfac:	add    BYTE PTR [rcx],al
   14001bfae:	add    BYTE PTR [rax],al
   14001bfb0:	add    BYTE PTR [rax],al
   14001bfb2:	add    BYTE PTR [rdx],al
   14001bfb4:	add    BYTE PTR [rax],al
   14001bfb6:	add    BYTE PTR [rcx],al
   14001bfb8:	add    BYTE PTR [rax],al
   14001bfba:	add    BYTE PTR [rdx],al
   14001bfbc:	add    BYTE PTR [rax],al
   14001bfbe:	add    BYTE PTR [rdx],ah
   14001bfc0:	add    BYTE PTR [rdx],al
   14001bfc2:	add    BYTE PTR [rax],al
   14001bfc4:	add    BYTE PTR [rbx],al
   14001bfc6:	add    BYTE PTR [rax],al
   14001bfc8:	add    BYTE PTR [rbx],al
   14001bfca:	add    BYTE PTR [rax],al
   14001bfcc:	add    BYTE PTR [rax+rax*1+0x2],al
   14001bfd0:	add    BYTE PTR [rax],al
   14001bfd2:	add    BYTE PTR [rdi],al
   14001bfd4:	add    BYTE PTR [rax],al
   14001bfd6:	add    BYTE PTR [rsi],al
   14001bfd8:	add    BYTE PTR [rax],al
   14001bfda:	add    BYTE PTR [rax+0x0],dh
   14001bfdd:	add    BYTE PTR [rax],al
   14001bfdf:	add    BYTE PTR [rax],al
   14001bfe1:	add    DWORD PTR [rax],eax
   14001bfe3:	add    BYTE PTR [rip+0x66],al        # 0x14001c04f
   14001bfe9:	push   rax
   14001bfea:	add    BYTE PTR [rax],al
   14001bfec:	add    BYTE PTR [rax],al
   14001bfee:	add    BYTE PTR [rcx],al
   14001bff0:	add    BYTE PTR [rax],al
   14001bff2:	add    BYTE PTR [rax],al
   14001bff4:	add    BYTE PTR [rax],al
   14001bff6:	add    ah,bl
   14001bff8:	add    BYTE PTR [rax],al
   14001bffa:	add    BYTE PTR [rax],al
   14001bffc:	add    BYTE PTR [rcx],al
   14001bffe:	add    BYTE PTR [rax],al
   14001c000:	(bad)  
   14001c001:	pop    QWORD PTR [rax]
   14001c003:	add    BYTE PTR [rcx],al
   14001c005:	rex.WR add BYTE PTR [rax],r8b
   14001c008:	add    BYTE PTR [rax],al
   14001c00a:	add    BYTE PTR [rcx],al
   14001c00c:	add    BYTE PTR [rax],al
   14001c00e:	and    eax,0x21
   14001c013:	mov    edx,0x0
   14001c018:	add    BYTE PTR [rcx],al
   14001c01a:	add    BYTE PTR [rax],al
   14001c01c:	(bad)  
   14001c01d:	rol    DWORD PTR [rax],0x0
   14001c020:	add    ah,bh
   14001c022:	add    BYTE PTR [rax],al
   14001c024:	add    BYTE PTR [rax],al
   14001c026:	add    BYTE PTR [rcx],al
   14001c028:	add    BYTE PTR [rax],al
   14001c02a:	and    cl,dl
   14001c02c:	add    BYTE PTR [rax],al
   14001c02e:	add    DWORD PTR [rdx+0x0],esi
   14001c031:	add    BYTE PTR [rax],al
   14001c033:	add    BYTE PTR [rax],al
   14001c035:	add    DWORD PTR [rax],eax
   14001c037:	add    BYTE PTR [rsi],ah
   14001c039:	rol    DWORD PTR [rax],cl
   14001c03b:	add    BYTE PTR [rcx],al
   14001c03d:	sub    BYTE PTR [rax],al
   14001c03f:	add    BYTE PTR [rax],al
   14001c041:	add    BYTE PTR [rax],al
   14001c043:	add    DWORD PTR [rax],eax
   14001c045:	add    BYTE PTR [rdi+rax*2],ah
   14001c048:	add    BYTE PTR [rax],al
   14001c04a:	add    BYTE PTR [rax+0x0],bl
   14001c050:	add    BYTE PTR [rcx],al
   14001c052:	add    BYTE PTR [rax],al
   14001c054:	sbb    eax,0x8a
   14001c059:	add    BYTE PTR [rax],al
   14001c05b:	add    BYTE PTR [rax],al
   14001c05d:	add    BYTE PTR [rax],al
   14001c05f:	add    bh,bh
   14001c061:	(bad)  
   14001c062:	(bad)  
   14001c063:	call   QWORD PTR [rax]
	...
   14001c06d:	add    BYTE PTR [rax],al
   14001c06f:	add    BYTE PTR [rax+0x0],ch
   14001c075:	add    BYTE PTR [rax],al
   14001c077:	add    bh,bh
   14001c079:	(bad)  
   14001c07a:	(bad)  
   14001c07b:	dec    DWORD PTR [rbx]
	...
   14001c085:	add    BYTE PTR [rax],al
   14001c087:	add    BYTE PTR [rcx+0x0],ah
   14001c08d:	add    BYTE PTR [rax],al
   14001c08f:	add    bh,bh
   14001c091:	(bad)  
   14001c092:	(bad)  
   14001c093:	inc    DWORD PTR [rax]
	...
   14001c09d:	add    BYTE PTR [rax],al
   14001c09f:	add    BYTE PTR [rbp+0x0],dl
   14001c0a5:	add    BYTE PTR [rax],al
   14001c0a7:	add    bh,bh
   14001c0a9:	(bad)  
   14001c0aa:	(bad)  
   14001c0ab:	inc    DWORD PTR [rdx]
	...
   14001c0b5:	add    BYTE PTR [rax],al
   14001c0b7:	add    BYTE PTR [rsi+0x0],bh
   14001c0ba:	add    BYTE PTR [rax],al
   14001c0bc:	add    BYTE PTR [rax],al
   14001c0be:	add    BYTE PTR [rax],al
   14001c0c0:	(bad)  
   14001c0c1:	(bad)  
   14001c0c2:	(bad)  
   14001c0c3:	dec    DWORD PTR [rax]
	...
   14001c0cd:	add    BYTE PTR [rax],al
   14001c0cf:	add    BYTE PTR [rcx+0x0],ch
   14001c0d2:	add    BYTE PTR [rax],al
   14001c0d4:	add    BYTE PTR [rax],al
   14001c0d6:	add    BYTE PTR [rax],al
   14001c0d8:	(bad)  
   14001c0d9:	(bad)  
   14001c0da:	(bad)  
   14001c0db:	inc    DWORD PTR [rsi]
	...
   14001c0e5:	add    BYTE PTR [rax],al
   14001c0e7:	add    BYTE PTR [rdx+0x0],bl
   14001c0ea:	add    BYTE PTR [rax],al
   14001c0ec:	add    BYTE PTR [rax],al
   14001c0ee:	add    BYTE PTR [rax],al
   14001c0f0:	(bad)  
   14001c0f1:	(bad)  
   14001c0f2:	(bad)  
   14001c0f3:	inc    DWORD PTR [rdi]
	...
   14001c0fd:	add    BYTE PTR [rax],al
   14001c0ff:	add    BYTE PTR [rcx+0x0],cl
   14001c102:	add    BYTE PTR [rax],al
   14001c104:	add    BYTE PTR [rax],al
   14001c106:	add    BYTE PTR [rax],al
   14001c108:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001c10a:	outs   dx,BYTE PTR ds:[rsi]
   14001c10b:	jbe    0x14001c172
   14001c10d:	jb     0x14001c182
   14001c10f:	imul   ebp,DWORD PTR [rdi+0x6e],0x617a6957
   14001c116:	jb     0x14001c17c
   14001c118:	add    BYTE PTR [rax+0x61],dh
   14001c11b:	addr32 gs rex.XB push 0x65676e61
   14001c123:	add    BYTE PTR fs:[rax],al
   14001c126:	imul   esp,DWORD PTR [rax+rax*1+0x73],0x48776f68
   14001c12e:	gs ins BYTE PTR es:[rdi],dx
   14001c130:	jo     0x14001c132
   14001c132:	je     0x14001c1a3
   14001c134:	addr32 ins BYTE PTR es:[edi],dx
   14001c137:	add    BYTE PTR gs:[rbx+0x6f],ah
   14001c13b:	outs   dx,BYTE PTR ds:[rsi]
   14001c13c:	jbe    0x14001c1a3
   14001c13e:	jb     0x14001c1b4
	...
   14001c150:	(bad)  
	...
   14001c15d:	add    BYTE PTR [rax],al
   14001c15f:	add    BYTE PTR [rbx],al
   14001c161:	add    BYTE PTR [rax],al
   14001c163:	add    BYTE PTR [rsi],cl
	...
   14001c185:	add    BYTE PTR [rax],al
   14001c187:	add    BYTE PTR [rcx],al
   14001c189:	add    BYTE PTR [rax],al
   14001c18b:	add    BYTE PTR [rcx],al
   14001c18d:	add    BYTE PTR [rax],al
   14001c18f:	add    BYTE PTR [rip+0x2000000],bl        # 0x14201c195
   14001c195:	add    BYTE PTR [rax],al
   14001c197:	add    BYTE PTR [rax],cl
   14001c199:	add    BYTE PTR [rax],al
   14001c19b:	add    BYTE PTR [rax+rax*1],al
   14001c19e:	add    BYTE PTR [rax],al
   14001c1a0:	add    DWORD PTR [rax],eax
   14001c1a2:	add    BYTE PTR [rax],al
   14001c1a4:	and    BYTE PTR [rax],al
   14001c1a6:	add    BYTE PTR [rax],al
   14001c1a8:	add    al,BYTE PTR [rax]
   14001c1aa:	add    BYTE PTR [rax],al
   14001c1ac:	or     BYTE PTR [rax],al
   14001c1ae:	add    BYTE PTR [rax],al
   14001c1b0:	(bad)  
   14001c1b1:	add    BYTE PTR [rax],al
   14001c1b3:	add    BYTE PTR [rax],al
   14001c1b5:	add    BYTE PTR [rax],al
   14001c1b7:	add    BYTE PTR [rbx],ah
   14001c1b9:	add    BYTE PTR [rax],al
   14001c1bb:	add    BYTE PTR [rdx],al
   14001c1bd:	add    BYTE PTR [rax],al
   14001c1bf:	add    BYTE PTR [rax],cl
   14001c1c1:	add    BYTE PTR [rax],al
   14001c1c3:	add    BYTE PTR [rbx],ch
   14001c1c5:	add    BYTE PTR [rax],al
   14001c1c7:	add    BYTE PTR [rdx],al
   14001c1c9:	add    BYTE PTR [rax],al
   14001c1cb:	add    BYTE PTR [rbx],al
   14001c1cd:	add    BYTE PTR [rax],al
   14001c1cf:	add    BYTE PTR [rbx],ch
   14001c1d1:	add    BYTE PTR [rax],al
   14001c1d3:	add    BYTE PTR [rcx],al
   14001c1d5:	add    BYTE PTR [rax],al
   14001c1d7:	add    BYTE PTR [rip+0x2b000000],al        # 0x16b01c1dd
	...
   14001c1ed:	add    BYTE PTR [rax],al
   14001c1ef:	add    bh,bh
   14001c1f1:	(bad)  
   14001c1f2:	(bad)  
   14001c1f3:	dec    DWORD PTR [rcx]
	...
   14001c1fd:	add    BYTE PTR [rax],al
   14001c1ff:	add    BYTE PTR [rax+0x0],cl
   14001c202:	add    BYTE PTR [rax],al
   14001c204:	add    BYTE PTR [rax],al
   14001c206:	add    BYTE PTR [rax],al
   14001c208:	(bad)  
   14001c209:	(bad)  
   14001c20a:	(bad)  
   14001c20b:	dec    DWORD PTR [rbx]
	...
   14001c215:	add    BYTE PTR [rax],al
   14001c217:	add    BYTE PTR [rdx],bh
   14001c219:	add    BYTE PTR [rax],al
   14001c21b:	add    BYTE PTR [rax],al
   14001c21d:	add    BYTE PTR [rax],al
   14001c21f:	add    bh,bh
   14001c221:	(bad)  
   14001c222:	(bad)  
   14001c223:	inc    DWORD PTR [rax]
	...
   14001c22d:	add    BYTE PTR [rax],al
   14001c22f:	add    BYTE PTR [rsi],ch
   14001c231:	add    BYTE PTR [rax],al
   14001c233:	add    BYTE PTR [rax],al
   14001c235:	add    BYTE PTR [rax],al
   14001c237:	add    BYTE PTR [rcx+0x6e],cl
   14001c23a:	jo     0x14001c2b1
   14001c23c:	je     0x14001c28e
   14001c23e:	(bad)  
   14001c23f:	add    BYTE PTR gs:[edi+0x65],ah
   14001c244:	je     0x14001c28c
   14001c246:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x656d61
   14001c24e:	add    BYTE PTR [rax],al
   14001c250:	(bad)  
	...
   14001c25d:	add    BYTE PTR [rax],al
   14001c25f:	add    BYTE PTR [rcx],al
   14001c261:	add    BYTE PTR [rax],al
   14001c263:	add    BYTE PTR [rsi],cl
	...
   14001c285:	add    BYTE PTR [rax],al
   14001c287:	add    BYTE PTR [rcx],al
   14001c289:	add    BYTE PTR [rax],al
   14001c28b:	add    BYTE PTR [rax],al
   14001c28d:	add    BYTE PTR [rax],al
   14001c28f:	add    BYTE PTR [rbx],dl
   14001c291:	add    BYTE PTR [rax],al
   14001c293:	add    BYTE PTR [rdx],al
   14001c295:	add    BYTE PTR [rax],al
   14001c297:	add    BYTE PTR [rax],cl
   14001c299:	add    BYTE PTR [rax],al
   14001c29b:	add    BYTE PTR [rbx],ch
	...
   14001c2a5:	add    BYTE PTR [rax],al
   14001c2a7:	add    bh,bh
   14001c2a9:	(bad)  
   14001c2aa:	(bad)  
   14001c2ab:	dec    DWORD PTR [rbx]
	...
   14001c2b5:	add    BYTE PTR [rax],al
   14001c2b7:	add    BYTE PTR [rax],bl
   14001c2b9:	add    BYTE PTR [rax],al
   14001c2bb:	add    BYTE PTR [rax],al
   14001c2bd:	add    BYTE PTR [rax],al
   14001c2bf:	add    BYTE PTR [rdi+0x65],al
   14001c2c2:	outs   dx,BYTE PTR ds:[rsi]
   14001c2c3:	gs jb  0x14001c327
   14001c2c6:	ins    BYTE PTR es:[rdi],dx
   14001c2c7:	push   rax
   14001c2c8:	(bad)  
   14001c2c9:	add    BYTE PTR gs:[eax],al
   14001c2cd:	add    BYTE PTR [rax],al
   14001c2cf:	add    BYTE PTR [rdi],al
	...
   14001c30d:	add    BYTE PTR [rax],al
   14001c30f:	add    bh,bh
   14001c311:	(bad)  
   14001c312:	(bad)  
   14001c313:	dec    DWORD PTR [rdx]
	...
   14001c31d:	add    BYTE PTR [rax],al
   14001c31f:	add    BYTE PTR [rax+0x0],ah
   14001c322:	add    BYTE PTR [rax],al
   14001c324:	add    BYTE PTR [rax],al
   14001c326:	add    BYTE PTR [rax],al
   14001c328:	(bad)  
   14001c329:	(bad)  
   14001c32a:	(bad)  
   14001c32b:	dec    DWORD PTR [rcx]
	...
   14001c335:	add    BYTE PTR [rax],al
   14001c337:	add    BYTE PTR [rbx+0x0],dl
   14001c33a:	add    BYTE PTR [rax],al
   14001c33c:	add    BYTE PTR [rax],al
   14001c33e:	add    BYTE PTR [rax],al
   14001c340:	(bad)  
   14001c341:	(bad)  
   14001c342:	(bad)  
   14001c343:	inc    DWORD PTR [rax]
	...
   14001c34d:	add    BYTE PTR [rax],al
   14001c34f:	add    BYTE PTR [rbp+0x0],al
   14001c352:	add    BYTE PTR [rax],al
   14001c354:	add    BYTE PTR [rax],al
   14001c356:	add    BYTE PTR [rax],al
   14001c358:	(bad)  
   14001c359:	(bad)  
   14001c35a:	(bad)  
   14001c35b:	dec    DWORD PTR [rax+rax*1]
	...
   14001c366:	add    BYTE PTR [rax],al
   14001c368:	add    BYTE PTR cs:[rax],al
   14001c36b:	add    BYTE PTR [rax],al
   14001c36d:	add    BYTE PTR [rax],al
   14001c36f:	add    BYTE PTR [rsi+0x69],al
   14001c372:	ins    BYTE PTR es:[rdi],dx
   14001c373:	je     0x14001c3da
   14001c375:	jb     0x14001c3c7
   14001c377:	(bad)  
   14001c378:	add    BYTE PTR gs:[ecx+0x64],ah
   14001c37d:	imul   r13d,DWORD PTR fs:[rsp+r14*2+0x65],0x72000072
   14001c387:	gs ins DWORD PTR es:[rdi],dx
   14001c389:	outs   dx,DWORD PTR ds:[rsi]
   14001c38a:	jbe    0x14001c3f1
   14001c38c:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x72
	...
   14001c39d:	add    BYTE PTR [rax],al
   14001c39f:	add    BYTE PTR [rdi],al
	...
   14001c3ad:	add    BYTE PTR [rax],al
   14001c3af:	add    BYTE PTR [rdx],al
   14001c3b1:	add    BYTE PTR [rax],al
   14001c3b3:	add    BYTE PTR [rsi],cl
	...
   14001c3d5:	add    BYTE PTR [rax],al
   14001c3d7:	add    BYTE PTR [rcx],al
   14001c3d9:	add    BYTE PTR [rax],al
   14001c3db:	add    BYTE PTR [rax],al
   14001c3dd:	add    BYTE PTR [rax],al
   14001c3df:	add    BYTE PTR [rax],bl
   14001c3e1:	add    BYTE PTR [rax],al
   14001c3e3:	add    BYTE PTR [rdx],al
   14001c3e5:	add    BYTE PTR [rax],al
   14001c3e7:	add    BYTE PTR [rax],cl
   14001c3e9:	add    BYTE PTR [rax],al
   14001c3eb:	add    BYTE PTR [rbx],al
   14001c3ed:	add    BYTE PTR [rax],al
   14001c3ef:	add    BYTE PTR [rax],al
   14001c3f1:	add    BYTE PTR [rax],al
   14001c3f3:	add    BYTE PTR [rcx],bl
   14001c3f5:	add    BYTE PTR [rax],al
   14001c3f7:	add    BYTE PTR [rdx],al
   14001c3f9:	add    BYTE PTR [rax],al
   14001c3fb:	add    BYTE PTR [rax],cl
   14001c3fd:	add    BYTE PTR [rax],al
   14001c3ff:	add    BYTE PTR [rbx],ch
   14001c401:	add    BYTE PTR [rax],al
   14001c403:	add    BYTE PTR [rbx],ch
	...
   14001c40d:	add    BYTE PTR [rax],al
   14001c40f:	add    bh,bh
   14001c411:	(bad)  
   14001c412:	(bad)  
   14001c413:	dec    DWORD PTR [rsi]
	...
   14001c41d:	add    BYTE PTR [rax],al
   14001c41f:	add    BYTE PTR [rax+0x0],ah
   14001c422:	add    BYTE PTR [rax],al
   14001c424:	add    BYTE PTR [rax],al
   14001c426:	add    BYTE PTR [rax],al
   14001c428:	(bad)  
   14001c429:	(bad)  
   14001c42a:	(bad)  
   14001c42b:	dec    DWORD PTR [rax+rax*1]
	...
   14001c436:	add    BYTE PTR [rax],al
   14001c438:	push   rdi
   14001c439:	add    BYTE PTR [rax],al
   14001c43b:	add    BYTE PTR [rax],al
   14001c43d:	add    BYTE PTR [rax],al
   14001c43f:	add    bh,bh
   14001c441:	(bad)  
   14001c442:	(bad)  
   14001c443:	inc    DWORD PTR [rax]
	...
   14001c44d:	add    BYTE PTR [rax],al
   14001c44f:	add    BYTE PTR [rax+rax*1+0x0],cl
   14001c453:	add    BYTE PTR [rax],al
   14001c455:	add    BYTE PTR [rax],al
   14001c457:	add    bh,bh
   14001c459:	(bad)  
   14001c45a:	(bad)  
   14001c45b:	inc    DWORD PTR [rdi]
	...
   14001c465:	add    BYTE PTR [rax],al
   14001c467:	add    BYTE PTR [rip+0x0],dh        # 0x14001c46d
   14001c46d:	add    BYTE PTR [rax],al
   14001c46f:	add    BYTE PTR [rcx+0x64],cl
   14001c472:	outs   dx,BYTE PTR gs:[rsi]
   14001c474:	je     0x14001c4df
   14001c476:	imul   sp,WORD PTR [rbp+0x72],0x6150
   14001c47c:	add    BYTE PTR gs:[ebx+0x65],dh
   14001c481:	je     0x14001c4f8
   14001c483:	jo     0x14001c4c7
   14001c485:	jne    0x14001c4fb
   14001c487:	je     0x14001c4f8
   14001c489:	outs   dx,BYTE PTR ds:[rsi]
   14001c48a:	jae    0x14001c48c
   14001c48c:	add    BYTE PTR [rbx+0x68],ah
   14001c48f:	movsxd ebp,DWORD PTR gs:[rbx+0x65]
   14001c493:	add    BYTE PTR fs:[rax],al
	...
   14001c49e:	add    BYTE PTR [rax],al
   14001c4a0:	(bad)  
	...
   14001c4ad:	add    BYTE PTR [rax],al
   14001c4af:	add    BYTE PTR [rcx],al
   14001c4b1:	add    BYTE PTR [rax],al
   14001c4b3:	add    BYTE PTR [rsi],cl
	...
   14001c4d5:	add    BYTE PTR [rax],al
   14001c4d7:	add    BYTE PTR [rcx],al
   14001c4d9:	add    BYTE PTR [rax],al
   14001c4db:	add    BYTE PTR [rcx],al
   14001c4dd:	add    BYTE PTR [rax],al
   14001c4df:	add    BYTE PTR [rbx],dl
   14001c4e1:	add    BYTE PTR [rax],al
   14001c4e3:	add    BYTE PTR [rdx],al
   14001c4e5:	add    BYTE PTR [rax],al
   14001c4e7:	add    BYTE PTR [rax],cl
   14001c4e9:	add    BYTE PTR [rax],al
   14001c4eb:	add    BYTE PTR [rbx],ch
   14001c4ed:	add    BYTE PTR [rax],al
   14001c4ef:	add    BYTE PTR [rcx],al
   14001c4f1:	add    BYTE PTR [rax],al
   14001c4f3:	add    BYTE PTR [rbx],al
	...
   14001c4fd:	add    BYTE PTR [rax],al
   14001c4ff:	add    bh,bh
   14001c501:	(bad)  
   14001c502:	(bad)  
   14001c503:	dec    DWORD PTR [rax]
	...
   14001c50d:	add    BYTE PTR [rax],al
   14001c50f:	add    BYTE PTR [rax+0x0],ah
   14001c512:	add    BYTE PTR [rax],al
   14001c514:	add    BYTE PTR [rax],al
   14001c516:	add    BYTE PTR [rax],al
   14001c518:	(bad)  
   14001c519:	(bad)  
   14001c51a:	(bad)  
   14001c51b:	inc    DWORD PTR [rdi]
	...
   14001c525:	add    BYTE PTR [rax],al
   14001c527:	add    BYTE PTR [rcx+0x0],dl
   14001c52a:	add    BYTE PTR [rax],al
   14001c52c:	add    BYTE PTR [rax],al
   14001c52e:	add    BYTE PTR [rax],al
   14001c530:	(bad)  
   14001c531:	(bad)  
   14001c532:	(bad)  
   14001c533:	inc    DWORD PTR [rax]
	...
   14001c53d:	add    BYTE PTR [rax],al
   14001c53f:	add    BYTE PTR [rcx+0x0],al
   14001c542:	add    BYTE PTR [rax],al
   14001c544:	add    BYTE PTR [rax],al
   14001c546:	add    BYTE PTR [rax],al
   14001c548:	(bad)  
   14001c549:	(bad)  
   14001c54a:	(bad)  
   14001c54b:	dec    DWORD PTR [rdx]
	...
   14001c555:	add    BYTE PTR [rax],al
   14001c557:	add    BYTE PTR [rdx],ch
   14001c559:	add    BYTE PTR [rax],al
   14001c55b:	add    BYTE PTR [rax],al
   14001c55d:	add    BYTE PTR [rax],al
   14001c55f:	add    BYTE PTR [rax+0x61],dl
   14001c562:	je     0x14001c5cc
   14001c564:	push   rax
   14001c565:	(bad)  
   14001c566:	add    BYTE PTR gs:[ecx+0x64],ah
   14001c56b:	fs push rax
   14001c56d:	(bad)  
   14001c56e:	je     0x14001c5d8
   14001c570:	add    BYTE PTR [rax],al
   14001c572:	jb     0x14001c5d9
   14001c574:	ins    DWORD PTR es:[rdi],dx
   14001c575:	outs   dx,DWORD PTR ds:[rsi]
   14001c576:	jbe    0x14001c5dd
   14001c578:	push   rax
   14001c579:	(bad)  
   14001c57a:	je     0x14001c5e4
   14001c57c:	add    BYTE PTR [rax],al
   14001c57e:	add    BYTE PTR [rax],al
   14001c580:	(bad)  
	...
   14001c58d:	add    BYTE PTR [rax],al
   14001c58f:	add    BYTE PTR [rdx],al
   14001c591:	add    BYTE PTR [rax],al
   14001c593:	add    BYTE PTR [rsi],cl
	...
   14001c5b5:	add    BYTE PTR [rax],al
   14001c5b7:	add    BYTE PTR [rcx],al
   14001c5b9:	add    BYTE PTR [rax],al
   14001c5bb:	add    BYTE PTR [rax],al
   14001c5bd:	add    BYTE PTR [rax],al
   14001c5bf:	add    BYTE PTR [rax],bl
   14001c5c1:	add    BYTE PTR [rax],al
   14001c5c3:	add    BYTE PTR [rdx],al
   14001c5c5:	add    BYTE PTR [rax],al
   14001c5c7:	add    BYTE PTR [rax],cl
   14001c5c9:	add    BYTE PTR [rax],al
   14001c5cb:	add    BYTE PTR [rbx],al
   14001c5cd:	add    BYTE PTR [rax],al
   14001c5cf:	add    BYTE PTR [rax],al
   14001c5d1:	add    BYTE PTR [rax],al
   14001c5d3:	add    BYTE PTR [rcx],bl
   14001c5d5:	add    BYTE PTR [rax],al
   14001c5d7:	add    BYTE PTR [rdx],al
   14001c5d9:	add    BYTE PTR [rax],al
   14001c5db:	add    BYTE PTR [rax],cl
   14001c5dd:	add    BYTE PTR [rax],al
   14001c5df:	add    BYTE PTR [rbx],ch
   14001c5e1:	add    BYTE PTR [rax],al
   14001c5e3:	add    BYTE PTR [rbx],ch
	...
   14001c5ed:	add    BYTE PTR [rax],al
   14001c5ef:	add    bh,bh
   14001c5f1:	(bad)  
   14001c5f2:	(bad)  
   14001c5f3:	dec    DWORD PTR [rcx]
	...
   14001c5fd:	add    BYTE PTR [rax],al
   14001c5ff:	add    BYTE PTR [rax+0x0],ah
   14001c602:	add    BYTE PTR [rax],al
   14001c604:	add    BYTE PTR [rax],al
   14001c606:	add    BYTE PTR [rax],al
   14001c608:	(bad)  
   14001c609:	(bad)  
   14001c60a:	(bad)  
   14001c60b:	dec    DWORD PTR [rdx]
	...
   14001c615:	add    BYTE PTR [rax],al
   14001c617:	add    BYTE PTR [rdx+0x0],dl
   14001c61a:	add    BYTE PTR [rax],al
   14001c61c:	add    BYTE PTR [rax],al
   14001c61e:	add    BYTE PTR [rax],al
   14001c620:	(bad)  
   14001c621:	(bad)  
   14001c622:	(bad)  
   14001c623:	inc    DWORD PTR [rax]
	...
   14001c62d:	add    BYTE PTR [rax],al
   14001c62f:	add    BYTE PTR [rbp+0x0],al
   14001c632:	add    BYTE PTR [rax],al
   14001c634:	add    BYTE PTR [rax],al
   14001c636:	add    BYTE PTR [rax],al
   14001c638:	(bad)  
   14001c639:	(bad)  
   14001c63a:	(bad)  
   14001c63b:	dec    DWORD PTR [rsi]
	...
   14001c645:	add    BYTE PTR [rax],al
   14001c647:	add    BYTE PTR [rsi],ch
   14001c649:	add    BYTE PTR [rax],al
   14001c64b:	add    BYTE PTR [rax],al
   14001c64d:	add    BYTE PTR [rax],al
   14001c64f:	add    BYTE PTR [rsi+0x69],al
   14001c652:	ins    BYTE PTR es:[rdi],dx
   14001c653:	gs jae 0x14001c6a6
   14001c656:	(bad)  
   14001c657:	add    BYTE PTR gs:[edx+0x65],dh
   14001c65c:	ins    DWORD PTR es:[rdi],dx
   14001c65d:	outs   dx,DWORD PTR ds:[rsi]
   14001c65e:	jbe    0x14001c6c5
   14001c660:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x6d657200
   14001c669:	outs   dx,DWORD PTR ds:[rsi]
   14001c66a:	jbe    0x14001c6d1
   14001c66c:	rex.B ins BYTE PTR es:[rdi],dx
   14001c66e:	ins    BYTE PTR es:[rdi],dx
   14001c66f:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x0
	...
   14001c680:	(bad)  
	...
   14001c68d:	add    BYTE PTR [rax],al
   14001c68f:	add    BYTE PTR [rdx],al
   14001c691:	add    BYTE PTR [rax],al
   14001c693:	add    BYTE PTR [rsi],cl
	...
   14001c6b5:	add    BYTE PTR [rax],al
   14001c6b7:	add    BYTE PTR [rcx],al
   14001c6b9:	add    BYTE PTR [rax],al
   14001c6bb:	add    BYTE PTR [rax],al
   14001c6bd:	add    BYTE PTR [rax],al
   14001c6bf:	add    BYTE PTR [rax],bl
   14001c6c1:	add    BYTE PTR [rax],al
   14001c6c3:	add    BYTE PTR [rdx],al
   14001c6c5:	add    BYTE PTR [rax],al
   14001c6c7:	add    BYTE PTR [rax],cl
   14001c6c9:	add    BYTE PTR [rax],al
   14001c6cb:	add    BYTE PTR [rbx],al
   14001c6cd:	add    BYTE PTR [rax],al
   14001c6cf:	add    BYTE PTR [rax],al
   14001c6d1:	add    BYTE PTR [rax],al
   14001c6d3:	add    BYTE PTR [rcx],bl
   14001c6d5:	add    BYTE PTR [rax],al
   14001c6d7:	add    BYTE PTR [rdx],al
   14001c6d9:	add    BYTE PTR [rax],al
   14001c6db:	add    BYTE PTR [rax],cl
   14001c6dd:	add    BYTE PTR [rax],al
   14001c6df:	add    BYTE PTR [rbx],ch
   14001c6e1:	add    BYTE PTR [rax],al
   14001c6e3:	add    BYTE PTR [rbx],ch
	...
   14001c6ed:	add    BYTE PTR [rax],al
   14001c6ef:	add    bh,bh
   14001c6f1:	(bad)  
   14001c6f2:	(bad)  
   14001c6f3:	dec    DWORD PTR [rdx]
	...
   14001c6fd:	add    BYTE PTR [rax],al
   14001c6ff:	add    BYTE PTR [rax],bl
   14001c701:	add    BYTE PTR [rax],al
   14001c703:	add    BYTE PTR [rax],al
   14001c705:	add    BYTE PTR [rax],al
   14001c707:	add    BYTE PTR [rdi+0x75],cl
   14001c70a:	je     0x14001c77c
   14001c70c:	jne    0x14001c782
   14001c70e:	push   rax
   14001c70f:	(bad)  
   14001c710:	add    BYTE PTR gs:[eax],al
   14001c714:	add    BYTE PTR [rax],al
   14001c716:	add    BYTE PTR [rax],al
   14001c718:	(bad)  
	...
   14001c755:	add    BYTE PTR [rax],al
   14001c757:	add    bh,bh
   14001c759:	(bad)  
   14001c75a:	(bad)  
   14001c75b:	dec    DWORD PTR [rdx]
	...
   14001c765:	add    BYTE PTR [rax],al
   14001c767:	add    BYTE PTR [rax],bl
   14001c769:	add    BYTE PTR [rax],al
   14001c76b:	add    BYTE PTR [rax],al
   14001c76d:	add    BYTE PTR [rax],al
   14001c76f:	add    BYTE PTR [rsi+0x69],al
   14001c772:	outs   dx,BYTE PTR ds:[rsi]
   14001c773:	imul   esi,DWORD PTR [rbx+0x68],0x65676150
   14001c77a:	add    BYTE PTR [rax],al
   14001c77c:	add    BYTE PTR [rax],al
   14001c77e:	add    BYTE PTR [rax],al
   14001c780:	(bad)  
	...
   14001c7bd:	add    BYTE PTR [rax],al
   14001c7bf:	add    bh,bh
   14001c7c1:	(bad)  
   14001c7c2:	(bad)  
   14001c7c3:	dec    DWORD PTR [rdx]
	...
   14001c7cd:	add    BYTE PTR [rax],al
   14001c7cf:	add    BYTE PTR [rax],bl
   14001c7d1:	add    BYTE PTR [rax],al
   14001c7d3:	add    BYTE PTR [rax],al
   14001c7d5:	add    BYTE PTR [rax],al
   14001c7d7:	add    BYTE PTR [rax+0x65],cl
   14001c7da:	ins    BYTE PTR es:[rdi],dx
   14001c7db:	jo     0x14001c834
   14001c7dd:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   14001c7e4:	add    BYTE PTR [rax],al
   14001c7e6:	add    BYTE PTR [rax],al
   14001c7e8:	(bad)  
	...
   14001c825:	add    BYTE PTR [rax],al
   14001c827:	add    BYTE PTR [rax-0x1f],bl
   14001c82a:	add    DWORD PTR [rax+0x1],eax
   14001c82d:	add    BYTE PTR [rax],al
   14001c82f:	add    BYTE PTR [rax+0x1400128],ah
	...
   14001c83d:	add    BYTE PTR [rax],al
   14001c83f:	add    BYTE PTR [rcx],al
	...
   14001c849:	add    BYTE PTR [rax],al
   14001c84b:	add    BYTE PTR [rax],cl
   14001c84d:	nop
   14001c84e:	add    al,BYTE PTR [rax]
   14001c850:	push   0x400001c8
   14001c855:	enter  0x1,0x0
	...
   14001c869:	add    BYTE PTR [rax],al
   14001c86b:	add    BYTE PTR [rcx],al
   14001c86d:	add    BYTE PTR [rax],al
   14001c86f:	add    BYTE PTR [rsi],al
   14001c871:	add    BYTE PTR [rax],al
   14001c873:	add    BYTE PTR [rax+0x1c8],al
   14001c879:	add    BYTE PTR [rax],al
   14001c87b:	add    BYTE PTR [rax],al
   14001c87d:	add    BYTE PTR [rax],al
   14001c87f:	add    BYTE PTR [rax-0x1ffffe38],bh
   14001c885:	enter  0x1,0x50
   14001c889:	leave  
   14001c88a:	add    DWORD PTR [rax],eax
   14001c88c:	mov    eax,0x180001c9
   14001c891:	retf   0x1
   14001c894:	push   0x1ca
	...
   14001c8b5:	add    BYTE PTR [rax],al
   14001c8b7:	add    BYTE PTR [rax],cl
   14001c8b9:	nop
   14001c8ba:	add    al,BYTE PTR [rax]
   14001c8bc:	add    eax,0x0
   14001c8c1:	add    BYTE PTR [rax],al
   14001c8c3:	add    bh,bh
   14001c8c5:	(bad)  
   14001c8c6:	(bad)  
   14001c8c7:	inc    DWORD PTR [rax]
   14001c8c9:	add    BYTE PTR [rax],al
   14001c8cb:	add    BYTE PTR [rax+0x0],al
   14001c8ce:	add    BYTE PTR [rax],al
   14001c8d0:	push   0x1c8
	...
   14001c8dd:	add    BYTE PTR [rax],al
   14001c8df:	add    BYTE PTR [rax],dh
   14001c8e1:	nop
   14001c8e2:	add    al,BYTE PTR [rax]
   14001c8e4:	add    al,0x0
   14001c8e6:	add    BYTE PTR [rax],al
   14001c8e8:	add    BYTE PTR [rax],al
   14001c8ea:	add    BYTE PTR [rax],al
   14001c8ec:	(bad)  
   14001c8ed:	(bad)  
   14001c8ee:	(bad)  
   14001c8ef:	inc    DWORD PTR [rax]
   14001c8f1:	add    BYTE PTR [rax],al
   14001c8f3:	add    BYTE PTR [rax+0x0],al
   14001c8f6:	add    BYTE PTR [rax],al
   14001c8f8:	or     cl,cl
   14001c8fa:	add    DWORD PTR [rax],eax
	...
   14001c90c:	add    DWORD PTR [rax],eax
   14001c90e:	add    BYTE PTR [rax],al
   14001c910:	add    eax,0x20000000
   14001c915:	leave  
   14001c916:	add    DWORD PTR [rax],eax
	...
   14001c920:	loopne 0x14001c8ea
   14001c922:	add    DWORD PTR [rax],eax
   14001c924:	push   rax
   14001c925:	leave  
   14001c926:	add    DWORD PTR [rax],eax
   14001c928:	mov    eax,0x180001c9
   14001c92d:	retf   0x1
   14001c930:	push   0x1ca
	...
   14001c94d:	add    BYTE PTR [rax],al
   14001c94f:	add    BYTE PTR [rax-0x70],dl
   14001c952:	add    al,BYTE PTR [rax]
   14001c954:	add    eax,DWORD PTR [rax]
   14001c956:	add    BYTE PTR [rax],al
   14001c958:	add    BYTE PTR [rax],al
   14001c95a:	add    BYTE PTR [rax],al
   14001c95c:	(bad)  
   14001c95d:	(bad)  
   14001c95e:	(bad)  
   14001c95f:	inc    DWORD PTR [rax]
   14001c961:	add    BYTE PTR [rax],al
   14001c963:	add    BYTE PTR [rax+0x0],al
   14001c966:	add    BYTE PTR [rax],al
   14001c968:	js     0x14001c933
   14001c96a:	add    DWORD PTR [rax],eax
	...
   14001c97c:	add    DWORD PTR [rax],eax
   14001c97e:	add    BYTE PTR [rax],al
   14001c980:	add    al,0x0
   14001c982:	add    BYTE PTR [rax],al
   14001c984:	nop
   14001c985:	leave  
   14001c986:	add    DWORD PTR [rax],eax
	...
   14001c990:	push   rax
   14001c991:	leave  
   14001c992:	add    DWORD PTR [rax],eax
   14001c994:	mov    eax,0x180001c9
   14001c999:	retf   0x1
   14001c99c:	push   0x1ca
	...
   14001c9b5:	add    BYTE PTR [rax],al
   14001c9b7:	add    BYTE PTR [rax-0x70],dh
   14001c9ba:	add    al,BYTE PTR [rax]
   14001c9bc:	add    al,BYTE PTR [rax]
   14001c9be:	add    BYTE PTR [rax],al
   14001c9c0:	add    BYTE PTR [rax],al
   14001c9c2:	add    BYTE PTR [rax],al
   14001c9c4:	(bad)  
   14001c9c5:	(bad)  
   14001c9c6:	(bad)  
   14001c9c7:	inc    DWORD PTR [rax]
   14001c9c9:	add    BYTE PTR [rax],al
   14001c9cb:	add    BYTE PTR [rax+0x0],al
   14001c9ce:	add    BYTE PTR [rax],al
   14001c9d0:	loopne 0x14001c99b
   14001c9d2:	add    DWORD PTR [rax],eax
	...
   14001c9e4:	add    DWORD PTR [rax],eax
   14001c9e6:	add    BYTE PTR [rax],al
   14001c9e8:	add    eax,DWORD PTR [rax]
   14001c9ea:	add    BYTE PTR [rax],al
   14001c9ec:	clc    
   14001c9ed:	leave  
   14001c9ee:	add    DWORD PTR [rax],eax
	...
   14001c9f8:	mov    eax,0x180001c9
   14001c9fd:	retf   0x1
   14001ca00:	push   0x1ca
	...
   14001ca15:	add    BYTE PTR [rax],al
   14001ca17:	add    BYTE PTR [rax+0x290],dl
   14001ca1d:	add    BYTE PTR [rax],al
   14001ca1f:	add    BYTE PTR [rax],al
   14001ca21:	add    BYTE PTR [rax],al
   14001ca23:	add    bh,bh
   14001ca25:	(bad)  
   14001ca26:	(bad)  
   14001ca27:	inc    DWORD PTR [rax]
   14001ca29:	add    BYTE PTR [rax],al
   14001ca2b:	add    BYTE PTR [rax+0x0],al
   14001ca2e:	add    BYTE PTR [rax],al
   14001ca30:	rex retf 0x1
	...
   14001ca48:	add    DWORD PTR [rax],eax
   14001ca4a:	add    BYTE PTR [rax],al
   14001ca4c:	pop    rax
   14001ca4d:	retf   0x1
	...
   14001ca58:	sbb    dl,cl
   14001ca5a:	add    DWORD PTR [rax],eax
	...
   14001ca68:	mov    al,0x90
   14001ca6a:	add    al,BYTE PTR [rax]
   14001ca6c:	add    BYTE PTR [rax],al
   14001ca6e:	add    BYTE PTR [rax],al
   14001ca70:	adc    BYTE PTR [rax],al
   14001ca72:	add    BYTE PTR [rax],al
   14001ca74:	(bad)  
   14001ca75:	(bad)  
   14001ca76:	(bad)  
   14001ca77:	inc    DWORD PTR [rax]
   14001ca79:	add    BYTE PTR [rax],al
   14001ca7b:	add    BYTE PTR [rax+0x0],al
   14001ca7e:	add    BYTE PTR [rax],al
   14001ca80:	nop
   14001ca81:	retf   0x1
	...
   14001ca98:	add    DWORD PTR [rax],eax
   14001ca9a:	add    BYTE PTR [rax],al
   14001ca9c:	test   al,0xca
   14001ca9e:	add    DWORD PTR [rax],eax
	...
   14001caa8:	mov    eax,0x1ca
	...
   14001cab5:	add    BYTE PTR [rax],al
   14001cab7:	add    BYTE PTR [rax+0x290],dh
   14001cabd:	add    BYTE PTR [rax],al
   14001cabf:	add    BYTE PTR [rax],al
   14001cac1:	add    BYTE PTR [rax],al
   14001cac3:	add    bh,bh
   14001cac5:	(bad)  
   14001cac6:	(bad)  
   14001cac7:	inc    DWORD PTR [rax]
   14001cac9:	add    BYTE PTR [rax],al
   14001cacb:	add    BYTE PTR [rax+0x0],al
   14001cace:	add    BYTE PTR [rax],al
   14001cad0:	nop
   14001cad1:	retf   0x1
	...
   14001cae0:	add    DWORD PTR [rax],eax
   14001cae2:	add    BYTE PTR [rax],al
   14001cae4:	adc    BYTE PTR [rax],al
   14001cae6:	add    BYTE PTR [rax],al
   14001cae8:	add    BYTE PTR [rax],al
   14001caea:	add    BYTE PTR [rax],al
   14001caec:	or     BYTE PTR [rax-0x3797fffe],dl
   14001caf2:	add    DWORD PTR [rax],eax
   14001caf4:	loopne 0x14001cac0
   14001caf6:	add    DWORD PTR [rax],eax
	...
   14001cb08:	add    DWORD PTR [rax],eax
	...
   14001cb12:	add    BYTE PTR [rax],al
   14001cb14:	loopne 0x14001caa6
   14001cb16:	add    al,BYTE PTR [rax]
   14001cb18:	xor    bl,cl
   14001cb1a:	add    DWORD PTR [rax],eax
   14001cb1c:	or     bl,cl
   14001cb1e:	add    DWORD PTR [rax],eax
	...
   14001cb34:	add    DWORD PTR [rax],eax
   14001cb36:	add    BYTE PTR [rax],al
   14001cb38:	add    al,0x0
   14001cb3a:	add    BYTE PTR [rax],al
   14001cb3c:	rex.W retf 
   14001cb3e:	add    DWORD PTR [rax],eax
	...
   14001cb48:	jo     0x14001cb15
   14001cb4a:	add    DWORD PTR [rax],eax
   14001cb4c:	cwde   
   14001cb4d:	retf   
   14001cb4e:	add    DWORD PTR [rax],eax
   14001cb50:	sbb    dl,cl
   14001cb52:	add    DWORD PTR [rax],eax
   14001cb54:	clc    
   14001cb55:	retf   
   14001cb56:	add    DWORD PTR [rax],eax
	...
   14001cb70:	loopne 0x14001cb02
   14001cb72:	add    al,BYTE PTR [rax]
   14001cb74:	add    eax,DWORD PTR [rax]
   14001cb76:	add    BYTE PTR [rax],al
   14001cb78:	add    BYTE PTR [rax],al
   14001cb7a:	add    BYTE PTR [rax],al
   14001cb7c:	(bad)  
   14001cb7d:	(bad)  
   14001cb7e:	(bad)  
   14001cb7f:	inc    DWORD PTR [rax]
   14001cb81:	add    BYTE PTR [rax],al
   14001cb83:	add    BYTE PTR [rax+0x0],al
   14001cb86:	add    BYTE PTR [rax],al
   14001cb88:	xor    bl,cl
   14001cb8a:	add    DWORD PTR [rax],eax
	...
   14001cb98:	or     BYTE PTR [rcx+0x20002],dl
   14001cb9e:	add    BYTE PTR [rax],al
   14001cba0:	add    BYTE PTR [rax],al
   14001cba2:	add    BYTE PTR [rax],al
   14001cba4:	(bad)  
   14001cba5:	(bad)  
   14001cba6:	(bad)  
   14001cba7:	inc    DWORD PTR [rax]
   14001cba9:	add    BYTE PTR [rax],al
   14001cbab:	add    BYTE PTR [rax+0x0],al
   14001cbae:	add    BYTE PTR [rax],al
   14001cbb0:	ror    bl,0x1
	...
   14001cbc3:	add    BYTE PTR [rcx],al
   14001cbc5:	add    BYTE PTR [rax],al
   14001cbc7:	add    BYTE PTR [rbx],al
   14001cbc9:	add    BYTE PTR [rax],al
   14001cbcb:	add    al,bl
   14001cbcd:	retf   
   14001cbce:	add    DWORD PTR [rax],eax
	...
   14001cbd8:	cwde   
   14001cbd9:	retf   
   14001cbda:	add    DWORD PTR [rax],eax
   14001cbdc:	sbb    dl,cl
   14001cbde:	add    DWORD PTR [rax],eax
   14001cbe0:	clc    
   14001cbe1:	retf   
   14001cbe2:	add    DWORD PTR [rax],eax
	...
   14001cbf8:	sub    BYTE PTR [rcx+0x2],dl
   14001cbfe:	add    BYTE PTR [rax],al
   14001cc00:	adc    BYTE PTR [rax],al
   14001cc02:	add    BYTE PTR [rax],al
   14001cc04:	(bad)  
   14001cc05:	(bad)  
   14001cc06:	(bad)  
   14001cc07:	inc    DWORD PTR [rax]
   14001cc09:	add    BYTE PTR [rax],al
   14001cc0b:	add    BYTE PTR [rax+0x0],al
   14001cc0e:	add    BYTE PTR [rax],al
   14001cc10:	and    ah,cl
   14001cc12:	add    DWORD PTR [rax],eax
	...
   14001cc28:	add    DWORD PTR [rax],eax
   14001cc2a:	add    BYTE PTR [rax],al
   14001cc2c:	cmp    ah,cl
   14001cc2e:	add    DWORD PTR [rax],eax
	...
   14001cc38:	rex.W int3 
   14001cc3a:	add    DWORD PTR [rax],eax
	...
   14001cc48:	sub    BYTE PTR [rcx+0x2],dl
   14001cc4e:	add    BYTE PTR [rax],al
   14001cc50:	add    BYTE PTR [rax],al
   14001cc52:	add    BYTE PTR [rax],al
   14001cc54:	(bad)  
   14001cc55:	(bad)  
   14001cc56:	(bad)  
   14001cc57:	inc    DWORD PTR [rax]
   14001cc59:	add    BYTE PTR [rax],al
   14001cc5b:	add    BYTE PTR [rax+0x0],al
   14001cc5e:	add    BYTE PTR [rax],al
   14001cc60:	and    ah,cl
   14001cc62:	add    DWORD PTR [rax],eax
	...
   14001cc70:	add    DWORD PTR [rax],eax
   14001cc72:	add    BYTE PTR [rax],al
   14001cc74:	adc    BYTE PTR [rax],al
   14001cc76:	add    BYTE PTR [rax],al
   14001cc78:	add    BYTE PTR [rax],al
   14001cc7a:	add    BYTE PTR [rax],al
   14001cc7c:	loopne 0x14001cc0e
   14001cc7e:	add    al,BYTE PTR [rax]
   14001cc80:	xor    bl,cl
   14001cc82:	add    DWORD PTR [rax],eax
   14001cc84:	jo     0x14001cc52
   14001cc86:	add    DWORD PTR [rax],eax
	...
   14001cc98:	add    DWORD PTR [rax],eax
	...
   14001cca2:	add    BYTE PTR [rax],al
   14001cca4:	push   rax
   14001cca5:	xchg   ecx,eax
   14001cca6:	add    al,BYTE PTR [rax]
   14001cca8:	ror    ah,0x1
   14001ccab:	add    BYTE PTR [rax+0x1cc],bl
	...
   14001ccc5:	add    BYTE PTR [rax],al
   14001ccc7:	add    BYTE PTR [rdx],al
   14001ccc9:	add    BYTE PTR [rax],al
   14001cccb:	add    al,bl
   14001cccd:	int3   
   14001ccce:	add    DWORD PTR [rax],eax
	...
   14001ccd8:	lock int3 
   14001ccda:	add    DWORD PTR [rax],eax
   14001ccdc:	rex.W int3 
   14001ccde:	add    DWORD PTR [rax],eax
	...
   14001ccf0:	push   rax
   14001ccf1:	xchg   ecx,eax
   14001ccf2:	add    al,BYTE PTR [rax]
   14001ccf4:	add    DWORD PTR [rax],eax
   14001ccf6:	add    BYTE PTR [rax],al
   14001ccf8:	add    BYTE PTR [rax],al
   14001ccfa:	add    BYTE PTR [rax],al
   14001ccfc:	(bad)  
   14001ccfd:	(bad)  
   14001ccfe:	(bad)  
   14001ccff:	inc    DWORD PTR [rax]
   14001cd01:	add    BYTE PTR [rax],al
   14001cd03:	add    BYTE PTR [rax+0x0],al
   14001cd06:	add    BYTE PTR [rax],al
   14001cd08:	ror    ah,0x1
	...
   14001cd17:	add    BYTE PTR [rcx],al
	...
   14001cd21:	add    BYTE PTR [rax],al
   14001cd23:	add    BYTE PTR [rax-0x6f],bh
   14001cd26:	add    al,BYTE PTR [rax]
   14001cd28:	rex int 0x1
   14001cd2b:	add    BYTE PTR [rax],bl
   14001cd2d:	int    0x1
	...
   14001cd43:	add    BYTE PTR [rcx],al
   14001cd45:	add    BYTE PTR [rax],al
   14001cd47:	add    BYTE PTR [rip+0x58000000],al        # 0x19801cd4d
   14001cd4d:	int    0x1
	...
   14001cd57:	add    BYTE PTR [rax-0x4ffffe33],cl
   14001cd5d:	int    0x1
   14001cd5f:	add    BYTE PTR [rax+0x180001c9],bh
   14001cd65:	retf   0x1
   14001cd68:	push   0x1ca
	...
   14001cd85:	add    BYTE PTR [rax],al
   14001cd87:	add    BYTE PTR [rax-0x6f],bh
   14001cd8a:	add    al,BYTE PTR [rax]
   14001cd8c:	add    al,0x0
   14001cd8e:	add    BYTE PTR [rax],al
   14001cd90:	add    BYTE PTR [rax],al
   14001cd92:	add    BYTE PTR [rax],al
   14001cd94:	(bad)  
   14001cd95:	(bad)  
   14001cd96:	(bad)  
   14001cd97:	inc    DWORD PTR [rax]
   14001cd99:	add    BYTE PTR [rax],al
   14001cd9b:	add    BYTE PTR [rax+0x0],al
   14001cd9e:	add    BYTE PTR [rax],al
   14001cda0:	rex int 0x1
	...
   14001cdaf:	add    BYTE PTR [rax+0x3000291],bl
   14001cdb5:	add    BYTE PTR [rax],al
   14001cdb7:	add    BYTE PTR [rax],al
   14001cdb9:	add    BYTE PTR [rax],al
   14001cdbb:	add    bh,bh
   14001cdbd:	(bad)  
   14001cdbe:	(bad)  
   14001cdbf:	inc    DWORD PTR [rax]
   14001cdc1:	add    BYTE PTR [rax],al
   14001cdc3:	add    BYTE PTR [rax+0x0],al
   14001cdc6:	add    BYTE PTR [rax],al
   14001cdc8:	fmul   st,st(5)
   14001cdca:	add    DWORD PTR [rax],eax
	...
   14001cddc:	add    DWORD PTR [rax],eax
   14001cdde:	add    BYTE PTR [rax],al
   14001cde0:	add    al,0x0
   14001cde2:	add    BYTE PTR [rax],al
   14001cde4:	lock int 0x1
	...
   14001cdef:	add    BYTE PTR [rax-0x47fffe33],dh
   14001cdf5:	leave  
   14001cdf6:	add    DWORD PTR [rax],eax
   14001cdf8:	sbb    dl,cl
   14001cdfa:	add    DWORD PTR [rax],eax
   14001cdfc:	push   0x1ca
	...
   14001ce15:	add    BYTE PTR [rax],al
   14001ce17:	add    BYTE PTR [rcx],al
   14001ce19:	add    BYTE PTR [rax],al
   14001ce1b:	add    BYTE PTR [rax],dl
   14001ce1d:	add    BYTE PTR [rax],al
   14001ce1f:	add    BYTE PTR [rax],al
   14001ce21:	add    BYTE PTR [rax],al
   14001ce23:	add    BYTE PTR [rax-0x6f],bh
   14001ce26:	add    al,BYTE PTR [rax]
   14001ce28:	rex int 0x1
   14001ce2b:	add    BYTE PTR [rax],bl
   14001ce2d:	(bad)  
   14001ce2e:	add    DWORD PTR [rax],eax
	...
   14001ce40:	add    DWORD PTR [rax],eax
	...
   14001ce4a:	add    BYTE PTR [rax],al
   14001ce4c:	mov    eax,0x68000291
   14001ce51:	(bad)  
   14001ce52:	add    DWORD PTR [rax],eax
   14001ce54:	rex (bad) 
   14001ce56:	add    DWORD PTR [rax],eax
	...
   14001ce6c:	add    DWORD PTR [rax],eax
   14001ce6e:	add    BYTE PTR [rax],al
   14001ce70:	add    eax,0x80000000
   14001ce75:	(bad)  
   14001ce76:	add    DWORD PTR [rax],eax
	...
   14001ce80:	mov    al,0xce
   14001ce82:	add    DWORD PTR [rax],eax
   14001ce84:	fmul   st,st(6)
   14001ce86:	add    DWORD PTR [rax],eax
   14001ce88:	cwde   
   14001ce89:	retf   
   14001ce8a:	add    DWORD PTR [rax],eax
   14001ce8c:	sbb    dl,cl
   14001ce8e:	add    DWORD PTR [rax],eax
   14001ce90:	clc    
   14001ce91:	retf   
   14001ce92:	add    DWORD PTR [rax],eax
	...
   14001ceb0:	mov    eax,0x4000291
   14001ceb5:	add    BYTE PTR [rax],al
   14001ceb7:	add    BYTE PTR [rax],al
   14001ceb9:	add    BYTE PTR [rax],al
   14001cebb:	add    bh,bh
   14001cebd:	(bad)  
   14001cebe:	(bad)  
   14001cebf:	inc    DWORD PTR [rax]
   14001cec1:	add    BYTE PTR [rax],al
   14001cec3:	add    BYTE PTR [rax+0x0],al
   14001cec6:	add    BYTE PTR [rax],al
   14001cec8:	push   0x1ce
	...
   14001ced5:	add    BYTE PTR [rax],al
   14001ced7:	add    al,ah
   14001ced9:	xchg   ecx,eax
   14001ceda:	add    al,BYTE PTR [rax]
   14001cedc:	add    eax,DWORD PTR [rax]
   14001cede:	add    BYTE PTR [rax],al
   14001cee0:	add    BYTE PTR [rax],al
   14001cee2:	add    BYTE PTR [rax],al
   14001cee4:	(bad)  
   14001cee5:	(bad)  
   14001cee6:	(bad)  
   14001cee7:	inc    DWORD PTR [rax]
   14001cee9:	add    BYTE PTR [rax],al
   14001ceeb:	add    BYTE PTR [rax+0x0],al
   14001ceee:	add    BYTE PTR [rax],al
   14001cef0:	add    bh,cl
   14001cef2:	add    DWORD PTR [rax],eax
	...
   14001cf04:	add    DWORD PTR [rax],eax
   14001cf06:	add    BYTE PTR [rax],al
   14001cf08:	add    al,0x0
   14001cf0a:	add    BYTE PTR [rax],al
   14001cf0c:	sbb    bh,cl
   14001cf0e:	add    DWORD PTR [rax],eax
	...
   14001cf18:	fmul   st,st(6)
   14001cf1a:	add    DWORD PTR [rax],eax
   14001cf1c:	cwde   
   14001cf1d:	retf   
   14001cf1e:	add    DWORD PTR [rax],eax
   14001cf20:	sbb    dl,cl
   14001cf22:	add    DWORD PTR [rax],eax
   14001cf24:	clc    
   14001cf25:	retf   
   14001cf26:	add    DWORD PTR [rax],eax
	...
   14001cf40:	add    DWORD PTR [rax],eax
   14001cf42:	add    BYTE PTR [rax],al
   14001cf44:	adc    BYTE PTR [rax],al
   14001cf46:	add    BYTE PTR [rax],al
   14001cf48:	add    BYTE PTR [rax],al
   14001cf4a:	add    BYTE PTR [rax],al
   14001cf4c:	mov    eax,0x68000291
   14001cf51:	(bad)  
   14001cf52:	add    DWORD PTR [rax],eax
   14001cf54:	rex iret 
   14001cf56:	add    DWORD PTR [rax],eax
	...
   14001cf68:	add    DWORD PTR [rax],eax
	...
   14001cf72:	add    BYTE PTR [rax],al
   14001cf74:	or     BYTE PTR [rdx-0x306ffffe],dl
   14001cf7a:	add    DWORD PTR [rax],eax
   14001cf7c:	push   0x1cf
	...
   14001cf91:	add    BYTE PTR [rax],al
   14001cf93:	add    BYTE PTR [rcx],al
   14001cf95:	add    BYTE PTR [rax],al
   14001cf97:	add    BYTE PTR [rax+rax*1],al
   14001cf9a:	add    BYTE PTR [rax],al
   14001cf9c:	test   al,0xcf
   14001cf9e:	add    DWORD PTR [rax],eax
	...
   14001cfa8:	ror    bh,1
   14001cfaa:	add    DWORD PTR [rax],eax
   14001cfac:	mov    eax,0x180001c9
   14001cfb1:	retf   0x1
   14001cfb4:	push   0x1ca
	...
   14001cfcd:	add    BYTE PTR [rax],al
   14001cfcf:	add    BYTE PTR [rax],cl
   14001cfd1:	xchg   edx,eax
   14001cfd2:	add    al,BYTE PTR [rax]
   14001cfd4:	add    eax,DWORD PTR [rax]
   14001cfd6:	add    BYTE PTR [rax],al
   14001cfd8:	add    BYTE PTR [rax],al
   14001cfda:	add    BYTE PTR [rax],al
   14001cfdc:	(bad)  
   14001cfdd:	(bad)  
   14001cfde:	(bad)  
   14001cfdf:	inc    DWORD PTR [rax]
   14001cfe1:	add    BYTE PTR [rax],al
   14001cfe3:	add    BYTE PTR [rax+0x0],al
   14001cfe6:	add    BYTE PTR [rax],al
   14001cfe8:	nop
   14001cfe9:	iret   
   14001cfea:	add    DWORD PTR [rax],eax
	...
   14001cff8:	add    DWORD PTR [rax],eax
   14001cffa:	add    BYTE PTR [rax],al
   14001cffc:	adc    BYTE PTR [rax],al
   14001cffe:	add    BYTE PTR [rax],al
   14001d000:	add    BYTE PTR [rax],al
   14001d002:	add    BYTE PTR [rax],al
   14001d004:	or     BYTE PTR [rdx-0x306ffffe],dl
   14001d00a:	add    DWORD PTR [rax],eax
   14001d00c:	clc    
   14001d00d:	iret   
   14001d00e:	add    DWORD PTR [rax],eax
	...
   14001d020:	add    DWORD PTR [rax],eax
	...
   14001d02a:	add    BYTE PTR [rax],al
   14001d02c:	sub    BYTE PTR [rdx-0x2fb7fffe],dl
   14001d032:	add    DWORD PTR [rax],eax
   14001d034:	and    al,dl
   14001d036:	add    DWORD PTR [rax],eax
	...
   14001d04c:	add    DWORD PTR [rax],eax
   14001d04e:	add    BYTE PTR [rax],al
   14001d050:	add    eax,0x60000000
   14001d055:	rol    BYTE PTR [rcx],1
	...
   14001d05f:	add    BYTE PTR [rax-0x47fffe30],dl
   14001d065:	rol    BYTE PTR [rcx],1
   14001d067:	add    BYTE PTR [rax+0x180001c9],bh
   14001d06d:	retf   0x1
   14001d070:	push   0x1ca
	...
   14001d08d:	add    BYTE PTR [rax],al
   14001d08f:	add    BYTE PTR [rax],ch
   14001d091:	xchg   edx,eax
   14001d092:	add    al,BYTE PTR [rax]
   14001d094:	add    al,0x0
   14001d096:	add    BYTE PTR [rax],al
   14001d098:	add    BYTE PTR [rax],al
   14001d09a:	add    BYTE PTR [rax],al
   14001d09c:	(bad)  
   14001d09d:	(bad)  
   14001d09e:	(bad)  
   14001d09f:	inc    DWORD PTR [rax]
   14001d0a1:	add    BYTE PTR [rax],al
   14001d0a3:	add    BYTE PTR [rax+0x0],al
   14001d0a6:	add    BYTE PTR [rax],al
   14001d0a8:	rex.W rol BYTE PTR [rcx],1
	...
   14001d0b7:	add    BYTE PTR [rax-0x6e],dl
   14001d0ba:	add    al,BYTE PTR [rax]
   14001d0bc:	add    eax,DWORD PTR [rax]
   14001d0be:	add    BYTE PTR [rax],al
   14001d0c0:	add    BYTE PTR [rax],al
   14001d0c2:	add    BYTE PTR [rax],al
   14001d0c4:	(bad)  
   14001d0c5:	(bad)  
   14001d0c6:	(bad)  
   14001d0c7:	inc    DWORD PTR [rax]
   14001d0c9:	add    BYTE PTR [rax],al
   14001d0cb:	add    BYTE PTR [rax+0x0],al
   14001d0ce:	add    BYTE PTR [rax],al
   14001d0d0:	loopne 0x14001d0a2
   14001d0d2:	add    DWORD PTR [rax],eax
	...
   14001d0e4:	add    DWORD PTR [rax],eax
   14001d0e6:	add    BYTE PTR [rax],al
   14001d0e8:	add    al,0x0
   14001d0ea:	add    BYTE PTR [rax],al
   14001d0ec:	clc    
   14001d0ed:	rol    BYTE PTR [rcx],1
	...
   14001d0f7:	add    BYTE PTR [rax-0x47fffe30],bh
   14001d0fd:	leave  
   14001d0fe:	add    DWORD PTR [rax],eax
   14001d100:	sbb    dl,cl
   14001d102:	add    DWORD PTR [rax],eax
   14001d104:	push   0x1ca
	...
   14001d11d:	add    BYTE PTR [rax],al
   14001d11f:	add    BYTE PTR [rcx],al
   14001d121:	add    BYTE PTR [rax],al
   14001d123:	add    BYTE PTR [rax],dl
   14001d125:	add    BYTE PTR [rax],al
   14001d127:	add    BYTE PTR [rax],al
   14001d129:	add    BYTE PTR [rax],al
   14001d12b:	add    BYTE PTR [rax],ch
   14001d12d:	xchg   edx,eax
   14001d12e:	add    al,BYTE PTR [rax]
   14001d130:	rex.W rol BYTE PTR [rcx],1
   14001d133:	add    BYTE PTR [rax],ah
   14001d135:	rol    DWORD PTR [rcx],1
	...
   14001d147:	add    BYTE PTR [rcx],al
	...
   14001d151:	add    BYTE PTR [rax],al
   14001d153:	add    BYTE PTR [rax-0x6e],bh
   14001d156:	add    al,BYTE PTR [rax]
   14001d158:	jo     0x14001d12b
   14001d15a:	add    DWORD PTR [rax],eax
   14001d15c:	rol    QWORD PTR [rcx],1
	...
   14001d173:	add    BYTE PTR [rcx],al
   14001d175:	add    BYTE PTR [rax],al
   14001d177:	add    BYTE PTR [rip+0xffffffff88000000],al        # 0xc801d17d
   14001d17d:	rol    DWORD PTR [rcx],1
	...
   14001d187:	add    BYTE PTR [rax-0x1ffffe2f],bh
   14001d18d:	rol    DWORD PTR [rcx],1
   14001d18f:	add    BYTE PTR [rax+0x180001c9],bh
   14001d195:	retf   0x1
   14001d198:	push   0x1ca
	...
   14001d1b5:	add    BYTE PTR [rax],al
   14001d1b7:	add    BYTE PTR [rax-0x6e],bh
   14001d1ba:	add    al,BYTE PTR [rax]
   14001d1bc:	add    al,0x0
   14001d1be:	add    BYTE PTR [rax],al
   14001d1c0:	add    BYTE PTR [rax],al
   14001d1c2:	add    BYTE PTR [rax],al
   14001d1c4:	(bad)  
   14001d1c5:	(bad)  
   14001d1c6:	(bad)  
   14001d1c7:	inc    DWORD PTR [rax]
   14001d1c9:	add    BYTE PTR [rax],al
   14001d1cb:	add    BYTE PTR [rax+0x0],al
   14001d1ce:	add    BYTE PTR [rax],al
   14001d1d0:	jo     0x14001d1a3
   14001d1d2:	add    DWORD PTR [rax],eax
	...
   14001d1e0:	cwde   
   14001d1e1:	xchg   edx,eax
   14001d1e2:	add    al,BYTE PTR [rax]
   14001d1e4:	add    eax,DWORD PTR [rax]
   14001d1e6:	add    BYTE PTR [rax],al
   14001d1e8:	add    BYTE PTR [rax],al
   14001d1ea:	add    BYTE PTR [rax],al
   14001d1ec:	(bad)  
   14001d1ed:	(bad)  
   14001d1ee:	(bad)  
   14001d1ef:	inc    DWORD PTR [rax]
   14001d1f1:	add    BYTE PTR [rax],al
   14001d1f3:	add    BYTE PTR [rax+0x0],al
   14001d1f6:	add    BYTE PTR [rax],al
   14001d1f8:	or     dl,dl
   14001d1fa:	add    DWORD PTR [rax],eax
	...
   14001d20c:	add    DWORD PTR [rax],eax
   14001d20e:	add    BYTE PTR [rax],al
   14001d210:	add    al,0x0
   14001d212:	add    BYTE PTR [rax],al
   14001d214:	and    dl,dl
   14001d216:	add    DWORD PTR [rax],eax
	...
   14001d220:	loopne 0x14001d1f3
   14001d222:	add    DWORD PTR [rax],eax
   14001d224:	mov    eax,0x180001c9
   14001d229:	retf   0x1
   14001d22c:	push   0x1ca
	...
   14001d245:	add    BYTE PTR [rax],al
   14001d247:	add    BYTE PTR [rcx],al
   14001d249:	add    BYTE PTR [rax],al
   14001d24b:	add    BYTE PTR [rax],dl
   14001d24d:	add    BYTE PTR [rax],al
   14001d24f:	add    BYTE PTR [rax],al
   14001d251:	add    BYTE PTR [rax],al
   14001d253:	add    BYTE PTR [rax-0x6e],bh
   14001d256:	add    al,BYTE PTR [rax]
   14001d258:	jo     0x14001d22b
   14001d25a:	add    DWORD PTR [rax],eax
   14001d25c:	rex.W rol BYTE PTR [rcx],cl
	...
   14001d26f:	add    BYTE PTR [rcx],al
	...
   14001d279:	add    BYTE PTR [rax],al
   14001d27b:	add    al,cl
   14001d27d:	xchg   edx,eax
   14001d27e:	add    al,BYTE PTR [rax]
   14001d280:	cwde   
   14001d281:	rol    BYTE PTR [rcx],cl
   14001d283:	add    BYTE PTR [rax-0x2e],dh
   14001d286:	add    DWORD PTR [rax],eax
	...
   14001d29c:	add    DWORD PTR [rax],eax
   14001d29e:	add    BYTE PTR [rax],al
   14001d2a0:	add    eax,0xb0000000
   14001d2a5:	rol    BYTE PTR [rcx],cl
	...
   14001d2af:	add    al,ah
   14001d2b1:	rol    BYTE PTR [rcx],cl
   14001d2b3:	add    al,ah
   14001d2b5:	rol    DWORD PTR [rcx],1
   14001d2b7:	add    BYTE PTR [rax+0x180001c9],bh
   14001d2bd:	retf   0x1
   14001d2c0:	push   0x1ca
	...
   14001d2dd:	add    BYTE PTR [rax],al
   14001d2df:	add    al,cl
   14001d2e1:	xchg   edx,eax
   14001d2e2:	add    al,BYTE PTR [rax]
   14001d2e4:	add    al,0x0
   14001d2e6:	add    BYTE PTR [rax],al
   14001d2e8:	add    BYTE PTR [rax],al
   14001d2ea:	add    BYTE PTR [rax],al
   14001d2ec:	(bad)  
   14001d2ed:	(bad)  
   14001d2ee:	(bad)  
   14001d2ef:	inc    DWORD PTR [rax]
   14001d2f1:	add    BYTE PTR [rax],al
   14001d2f3:	add    BYTE PTR [rax+0x0],al
   14001d2f6:	add    BYTE PTR [rax],al
   14001d2f8:	cwde   
   14001d2f9:	rol    BYTE PTR [rcx],cl
	...
   14001d307:	add    BYTE PTR [rcx],al
   14001d309:	add    BYTE PTR [rax],al
   14001d30b:	add    BYTE PTR [rax],dl
   14001d30d:	add    BYTE PTR [rax],al
   14001d30f:	add    BYTE PTR [rax],al
   14001d311:	add    BYTE PTR [rax],al
   14001d313:	add    al,cl
   14001d315:	xchg   edx,eax
   14001d316:	add    al,BYTE PTR [rax]
   14001d318:	cwde   
   14001d319:	rol    BYTE PTR [rcx],cl
   14001d31b:	add    BYTE PTR [rax],cl
   14001d31d:	rol    DWORD PTR [rcx],cl
	...
   14001d32f:	add    BYTE PTR [rcx],al
	...
   14001d339:	add    BYTE PTR [rax],al
   14001d33b:	add    al,bh
   14001d33d:	xchg   edx,eax
   14001d33e:	add    al,BYTE PTR [rax]
   14001d340:	pop    rax
   14001d341:	rol    DWORD PTR [rcx],cl
   14001d343:	add    BYTE PTR [rax],dh
   14001d345:	rol    DWORD PTR [rcx],cl
	...
   14001d35b:	add    BYTE PTR [rcx],al
   14001d35d:	add    BYTE PTR [rax],al
   14001d35f:	add    BYTE PTR [rax+rax*1],al
   14001d362:	add    BYTE PTR [rax],al
   14001d364:	jo     0x14001d339
   14001d366:	add    DWORD PTR [rax],eax
	...
   14001d370:	cwde   
   14001d371:	rol    DWORD PTR [rcx],cl
   14001d373:	add    BYTE PTR [rax+0x180001c9],bh
   14001d379:	retf   0x1
   14001d37c:	push   0x1ca
	...
   14001d395:	add    BYTE PTR [rax],al
   14001d397:	add    al,bh
   14001d399:	xchg   edx,eax
   14001d39a:	add    al,BYTE PTR [rax]
   14001d39c:	add    eax,DWORD PTR [rax]
   14001d39e:	add    BYTE PTR [rax],al
   14001d3a0:	add    BYTE PTR [rax],al
   14001d3a2:	add    BYTE PTR [rax],al
   14001d3a4:	(bad)  
   14001d3a5:	(bad)  
   14001d3a6:	(bad)  
   14001d3a7:	inc    DWORD PTR [rax]
   14001d3a9:	add    BYTE PTR [rax],al
   14001d3ab:	add    BYTE PTR [rax+0x0],al
   14001d3ae:	add    BYTE PTR [rax],al
   14001d3b0:	pop    rax
   14001d3b1:	rol    DWORD PTR [rcx],cl
	...
   14001d3bf:	add    BYTE PTR [rcx],al
   14001d3c1:	add    BYTE PTR [rax],al
   14001d3c3:	add    BYTE PTR [rax],dl
   14001d3c5:	add    BYTE PTR [rax],al
   14001d3c7:	add    BYTE PTR [rax],al
   14001d3c9:	add    BYTE PTR [rax],al
   14001d3cb:	add    al,bh
   14001d3cd:	xchg   edx,eax
   14001d3ce:	add    al,BYTE PTR [rax]
   14001d3d0:	pop    rax
   14001d3d1:	rol    DWORD PTR [rcx],cl
   14001d3d3:	add    al,al
   14001d3d5:	rol    DWORD PTR [rcx],cl
	...
   14001d3e7:	add    BYTE PTR [rcx],al
	...
   14001d3f1:	add    BYTE PTR [rax],al
   14001d3f3:	add    BYTE PTR [rax],bl
   14001d3f5:	xchg   ebx,eax
   14001d3f6:	add    al,BYTE PTR [rax]
   14001d3f8:	adc    ah,dl
   14001d3fa:	add    DWORD PTR [rax],eax
   14001d3fc:	call   0x14001d5d4
	...
   14001d411:	add    BYTE PTR [rax],al
   14001d413:	add    BYTE PTR [rcx],al
   14001d415:	add    BYTE PTR [rax],al
   14001d417:	add    BYTE PTR [rax],cl
   14001d419:	add    BYTE PTR [rax],al
   14001d41b:	add    BYTE PTR [rax],dh
   14001d41d:	(bad)  
   14001d41e:	add    DWORD PTR [rax],eax
	...
   14001d430:	js     0x14001d406
   14001d432:	add    DWORD PTR [rax],eax
   14001d434:	movabs al,ds:0x980001d5200001d4
   14001d43d:	(bad)  
   14001d43e:	add    DWORD PTR [rax],eax
   14001d440:	mov    al,0xcd
   14001d442:	add    DWORD PTR [rax],eax
   14001d444:	mov    eax,0x180001c9
   14001d449:	retf   0x1
   14001d44c:	push   0x1ca
	...
   14001d475:	add    BYTE PTR [rax],al
   14001d477:	add    BYTE PTR [rax],bl
   14001d479:	xchg   ebx,eax
   14001d47a:	add    al,BYTE PTR [rax]
   14001d47c:	(bad)  
   14001d47d:	add    BYTE PTR [rax],al
   14001d47f:	add    BYTE PTR [rax],al
   14001d481:	add    BYTE PTR [rax],al
   14001d483:	add    bh,bh
   14001d485:	(bad)  
   14001d486:	(bad)  
   14001d487:	inc    DWORD PTR [rax]
   14001d489:	add    BYTE PTR [rax],al
   14001d48b:	add    BYTE PTR [rax+0x0],al
   14001d48e:	add    BYTE PTR [rax],al
   14001d490:	adc    ah,dl
   14001d492:	add    DWORD PTR [rax],eax
	...
   14001d4a0:	rex xchg ebx,eax
   14001d4a2:	add    al,BYTE PTR [rax]
   14001d4a4:	(bad)  
   14001d4a5:	add    BYTE PTR [rax],al
   14001d4a7:	add    BYTE PTR [rax],al
   14001d4a9:	add    BYTE PTR [rax],al
   14001d4ab:	add    bh,bh
   14001d4ad:	(bad)  
   14001d4ae:	(bad)  
   14001d4af:	inc    DWORD PTR [rax]
   14001d4b1:	add    BYTE PTR [rax],al
   14001d4b3:	add    BYTE PTR [rax+0x0],al
   14001d4b6:	add    BYTE PTR [rax],al
   14001d4b8:	enter  0x1d4,0x0
	...
   14001d4cc:	add    DWORD PTR [rax],eax
   14001d4ce:	add    BYTE PTR [rax],al
   14001d4d0:	(bad)  
   14001d4d1:	add    BYTE PTR [rax],al
   14001d4d3:	add    al,ah
   14001d4d5:	(bad)  
   14001d4d6:	add    DWORD PTR [rax],eax
	...
   14001d4e0:	movabs al,ds:0x980001d5200001d4
   14001d4e9:	(bad)  
   14001d4ea:	add    DWORD PTR [rax],eax
   14001d4ec:	mov    al,0xcd
   14001d4ee:	add    DWORD PTR [rax],eax
   14001d4f0:	mov    eax,0x180001c9
   14001d4f5:	retf   0x1
   14001d4f8:	push   0x1ca
	...
   14001d51d:	add    BYTE PTR [rax],al
   14001d51f:	add    BYTE PTR [rax-0x6d],ah
   14001d522:	add    al,BYTE PTR [rax]
   14001d524:	add    eax,0x0
   14001d529:	add    BYTE PTR [rax],al
   14001d52b:	add    bh,bh
   14001d52d:	(bad)  
   14001d52e:	(bad)  
   14001d52f:	inc    DWORD PTR [rax]
   14001d531:	add    BYTE PTR [rax],al
   14001d533:	add    BYTE PTR [rax+0x0],al
   14001d536:	add    BYTE PTR [rax],al
   14001d538:	rex.W (bad) 
   14001d53a:	add    DWORD PTR [rax],eax
	...
   14001d54c:	add    DWORD PTR [rax],eax
   14001d54e:	add    BYTE PTR [rax],al
   14001d550:	(bad)  
   14001d551:	add    BYTE PTR [rax],al
   14001d553:	add    BYTE PTR [rax-0x2b],ah
   14001d556:	add    DWORD PTR [rax],eax
	...
   14001d560:	and    ch,dl
   14001d562:	add    DWORD PTR [rax],eax
   14001d564:	cwde   
   14001d565:	(bad)  
   14001d566:	add    DWORD PTR [rax],eax
   14001d568:	mov    al,0xcd
   14001d56a:	add    DWORD PTR [rax],eax
   14001d56c:	mov    eax,0x180001c9
   14001d571:	retf   0x1
   14001d574:	push   0x1ca
	...
   14001d595:	add    BYTE PTR [rax],al
   14001d597:	add    BYTE PTR [rax+0x4000293],cl
   14001d59d:	add    BYTE PTR [rax],al
   14001d59f:	add    BYTE PTR [rax],al
   14001d5a1:	add    BYTE PTR [rax],al
   14001d5a3:	add    bh,bh
   14001d5a5:	(bad)  
   14001d5a6:	(bad)  
   14001d5a7:	inc    DWORD PTR [rax]
   14001d5a9:	add    BYTE PTR [rax],al
   14001d5ab:	add    BYTE PTR [rax+0x0],al
   14001d5ae:	add    BYTE PTR [rax],al
   14001d5b0:	rcl    ch,0x1
	...
   14001d5c3:	add    BYTE PTR [rcx],al
   14001d5c5:	add    BYTE PTR [rax],al
   14001d5c7:	add    BYTE PTR [rip+0xffffffffd8000000],al        # 0x11801d5cd
   14001d5cd:	(bad)  
   14001d5ce:	add    DWORD PTR [rax],eax
	...
   14001d5d8:	cwde   
   14001d5d9:	(bad)  
   14001d5da:	add    DWORD PTR [rax],eax
   14001d5dc:	mov    al,0xcd
   14001d5de:	add    DWORD PTR [rax],eax
   14001d5e0:	mov    eax,0x180001c9
   14001d5e5:	retf   0x1
   14001d5e8:	push   0x1ca
	...
   14001d605:	add    BYTE PTR [rax],al
   14001d607:	add    BYTE PTR [rcx],al
   14001d609:	add    BYTE PTR [rax],al
   14001d60b:	add    BYTE PTR [rax],dl
   14001d60d:	add    BYTE PTR [rax],al
   14001d60f:	add    BYTE PTR [rax],al
   14001d611:	add    BYTE PTR [rax],al
   14001d613:	add    BYTE PTR [rax],bl
   14001d615:	xchg   ebx,eax
   14001d616:	add    al,BYTE PTR [rax]
   14001d618:	adc    ah,dl
   14001d61a:	add    DWORD PTR [rax],eax
   14001d61c:	or     dh,dl
   14001d61e:	add    DWORD PTR [rax],eax
	...
   14001d630:	add    DWORD PTR [rax],eax
	...
   14001d63a:	add    BYTE PTR [rax],al
   14001d63c:	mov    eax,0x58000293
   14001d641:	(bad)  
   14001d642:	add    DWORD PTR [rax],eax
   14001d644:	xor    dh,dl
   14001d646:	add    DWORD PTR [rax],eax
	...
   14001d65c:	add    DWORD PTR [rax],eax
   14001d65e:	add    BYTE PTR [rax],al
   14001d660:	add    eax,0x70000000
   14001d665:	(bad)  
   14001d666:	add    DWORD PTR [rax],eax
	...
   14001d670:	movabs al,ds:0xb80001d0b80001d6
   14001d679:	leave  
   14001d67a:	add    DWORD PTR [rax],eax
   14001d67c:	sbb    dl,cl
   14001d67e:	add    DWORD PTR [rax],eax
   14001d680:	push   0x1ca
	...
   14001d69d:	add    BYTE PTR [rax],al
   14001d69f:	add    BYTE PTR [rax+0x4000293],bh
   14001d6a5:	add    BYTE PTR [rax],al
   14001d6a7:	add    BYTE PTR [rax],al
   14001d6a9:	add    BYTE PTR [rax],al
   14001d6ab:	add    bh,bh
   14001d6ad:	(bad)  
   14001d6ae:	(bad)  
   14001d6af:	inc    DWORD PTR [rax]
   14001d6b1:	add    BYTE PTR [rax],al
   14001d6b3:	add    BYTE PTR [rax+0x0],al
   14001d6b6:	add    BYTE PTR [rax],al
   14001d6b8:	pop    rax
   14001d6b9:	(bad)  
   14001d6ba:	add    DWORD PTR [rax],eax
	...
   14001d6c8:	add    DWORD PTR [rax],eax
   14001d6ca:	add    BYTE PTR [rax],al
   14001d6cc:	adc    BYTE PTR [rax],al
   14001d6ce:	add    BYTE PTR [rax],al
   14001d6d0:	add    BYTE PTR [rax],al
   14001d6d2:	add    BYTE PTR [rax],al
   14001d6d4:	mov    eax,0x58000293
   14001d6d9:	(bad)  
   14001d6da:	add    DWORD PTR [rax],eax
   14001d6dc:	enter  0x1d6,0x0
	...
   14001d6f0:	add    DWORD PTR [rax],eax
	...
   14001d6fa:	add    BYTE PTR [rax],al
   14001d6fc:	loopne 0x14001d691
   14001d6fe:	add    al,BYTE PTR [rax]
   14001d700:	sbb    bh,dl
   14001d702:	add    DWORD PTR [rax],eax
   14001d704:	lock (bad) 
   14001d706:	add    DWORD PTR [rax],eax
	...
   14001d720:	add    DWORD PTR [rax],eax
   14001d722:	add    BYTE PTR [rax],al
   14001d724:	xor    bh,dl
   14001d726:	add    DWORD PTR [rax],eax
	...
   14001d730:	rex xlat BYTE PTR ds:[rbx]
   14001d732:	add    DWORD PTR [rax],eax
	...
   14001d740:	loopne 0x14001d6d5
   14001d742:	add    al,BYTE PTR [rax]
	...
   14001d74c:	(bad)  
   14001d74d:	(bad)  
   14001d74e:	(bad)  
   14001d74f:	inc    DWORD PTR [rax]
   14001d751:	add    BYTE PTR [rax],al
   14001d753:	add    BYTE PTR [rax+0x0],al
   14001d756:	add    BYTE PTR [rax],al
   14001d758:	sbb    bh,dl
   14001d75a:	add    DWORD PTR [rax],eax
	...
   14001d768:	add    DWORD PTR [rax],eax
	...
   14001d772:	add    BYTE PTR [rax],al
   14001d774:	or     BYTE PTR [rdx+rax*1+0x1d79000],dl
   14001d77b:	add    BYTE PTR [rax-0x29],ch
   14001d77e:	add    DWORD PTR [rax],eax
	...
   14001d794:	add    DWORD PTR [rax],eax
   14001d796:	add    BYTE PTR [rax],al
   14001d798:	add    eax,0xa8000000
   14001d79d:	xlat   BYTE PTR ds:[rbx]
   14001d79e:	add    DWORD PTR [rax],eax
	...
   14001d7a8:	fcom   st(7)
   14001d7aa:	add    DWORD PTR [rax],eax
   14001d7ac:	loopne 0x14001d77f
   14001d7ae:	add    DWORD PTR [rax],eax
   14001d7b0:	mov    eax,0x180001c9
   14001d7b5:	retf   0x1
   14001d7b8:	push   0x1ca
	...
   14001d7d5:	add    BYTE PTR [rax],al
   14001d7d7:	add    BYTE PTR [rax],cl
   14001d7d9:	xchg   esp,eax
   14001d7da:	add    al,BYTE PTR [rax]
   14001d7dc:	add    al,0x0
   14001d7de:	add    BYTE PTR [rax],al
   14001d7e0:	add    BYTE PTR [rax],al
   14001d7e2:	add    BYTE PTR [rax],al
   14001d7e4:	(bad)  
   14001d7e5:	(bad)  
   14001d7e6:	(bad)  
   14001d7e7:	inc    DWORD PTR [rax]
   14001d7e9:	add    BYTE PTR [rax],al
   14001d7eb:	add    BYTE PTR [rax+0x0],al
   14001d7ee:	add    BYTE PTR [rax],al
   14001d7f0:	nop
   14001d7f1:	xlat   BYTE PTR ds:[rbx]
   14001d7f2:	add    DWORD PTR [rax],eax
	...
   14001d800:	add    DWORD PTR [rax],eax
   14001d802:	add    BYTE PTR [rax],al
   14001d804:	adc    BYTE PTR [rax],al
   14001d806:	add    BYTE PTR [rax],al
   14001d808:	add    BYTE PTR [rax],al
   14001d80a:	add    BYTE PTR [rax],al
   14001d80c:	or     BYTE PTR [rdx+rax*1+0x1d79000],dl
   14001d813:	add    BYTE PTR [rax],al
   14001d815:	fadd   DWORD PTR [rcx]
	...
   14001d827:	add    BYTE PTR [rcx],al
	...
   14001d831:	add    BYTE PTR [rax],al
   14001d833:	add    BYTE PTR [rax],bh
   14001d835:	xchg   esp,eax
   14001d836:	add    al,BYTE PTR [rax]
   14001d838:	push   rax
   14001d839:	fadd   DWORD PTR [rcx]
   14001d83b:	add    BYTE PTR [rax],ch
   14001d83d:	fadd   DWORD PTR [rcx]
	...
   14001d853:	add    BYTE PTR [rcx],al
   14001d855:	add    BYTE PTR [rax],al
   14001d857:	add    BYTE PTR [rip+0x68000000],al        # 0x1a801d85d
   14001d85d:	fadd   DWORD PTR [rcx]
	...
   14001d867:	add    BYTE PTR [rax-0x47fffe28],bl
   14001d86d:	rol    BYTE PTR [rcx],1
   14001d86f:	add    BYTE PTR [rax+0x180001c9],bh
   14001d875:	retf   0x1
   14001d878:	push   0x1ca
	...
   14001d895:	add    BYTE PTR [rax],al
   14001d897:	add    BYTE PTR [rax],bh
   14001d899:	xchg   esp,eax
   14001d89a:	add    al,BYTE PTR [rax]
   14001d89c:	add    al,0x0
   14001d89e:	add    BYTE PTR [rax],al
   14001d8a0:	add    BYTE PTR [rax],al
   14001d8a2:	add    BYTE PTR [rax],al
   14001d8a4:	(bad)  
   14001d8a5:	(bad)  
   14001d8a6:	(bad)  
   14001d8a7:	inc    DWORD PTR [rax]
   14001d8a9:	add    BYTE PTR [rax],al
   14001d8ab:	add    BYTE PTR [rax+0x0],al
   14001d8ae:	add    BYTE PTR [rax],al
   14001d8b0:	push   rax
   14001d8b1:	fadd   DWORD PTR [rcx]
	...
   14001d8bf:	add    BYTE PTR [rcx],al
   14001d8c1:	add    BYTE PTR [rax],al
   14001d8c3:	add    BYTE PTR [rax],dl
   14001d8c5:	add    BYTE PTR [rax],al
   14001d8c7:	add    BYTE PTR [rax],al
   14001d8c9:	add    BYTE PTR [rax],al
   14001d8cb:	add    BYTE PTR [rax],bh
   14001d8cd:	xchg   esp,eax
   14001d8ce:	add    al,BYTE PTR [rax]
   14001d8d0:	push   rax
   14001d8d1:	fadd   DWORD PTR [rcx]
   14001d8d3:	add    al,al
   14001d8d5:	fadd   DWORD PTR [rcx]
	...
   14001d8e7:	add    BYTE PTR [rcx],al
	...
   14001d8f1:	add    BYTE PTR [rax],al
   14001d8f3:	add    BYTE PTR [rax-0x6c],bl
   14001d8f6:	add    al,BYTE PTR [rax]
   14001d8f8:	adc    cl,bl
   14001d8fa:	add    DWORD PTR [rax],eax
   14001d8fc:	call   0x14001dad9
	...
   14001d911:	add    BYTE PTR [rax],al
   14001d913:	add    BYTE PTR [rcx],al
   14001d915:	add    BYTE PTR [rax],al
   14001d917:	add    BYTE PTR [rip+0x28000000],al        # 0x16801d91d
   14001d91d:	fld    DWORD PTR [rcx]
	...
   14001d927:	add    BYTE PTR [rax-0x27],bl
   14001d92a:	add    DWORD PTR [rax],eax
   14001d92c:	mov    eax,0xb80001d0
   14001d931:	leave  
   14001d932:	add    DWORD PTR [rax],eax
   14001d934:	sbb    dl,cl
   14001d936:	add    DWORD PTR [rax],eax
   14001d938:	push   0x1ca
	...
   14001d955:	add    BYTE PTR [rax],al
   14001d957:	add    BYTE PTR [rax-0x6c],bl
   14001d95a:	add    al,BYTE PTR [rax]
   14001d95c:	add    al,0x0
   14001d95e:	add    BYTE PTR [rax],al
   14001d960:	add    BYTE PTR [rax],al
   14001d962:	add    BYTE PTR [rax],al
   14001d964:	(bad)  
   14001d965:	(bad)  
   14001d966:	(bad)  
   14001d967:	inc    DWORD PTR [rax]
   14001d969:	add    BYTE PTR [rax],al
   14001d96b:	add    BYTE PTR [rax+0x0],al
   14001d96e:	add    BYTE PTR [rax],al
   14001d970:	adc    cl,bl
   14001d972:	add    DWORD PTR [rax],eax
	...
   14001d980:	add    DWORD PTR [rax],eax
   14001d982:	add    BYTE PTR [rax],al
   14001d984:	adc    BYTE PTR [rax],al
   14001d986:	add    BYTE PTR [rax],al
   14001d988:	add    BYTE PTR [rax],al
   14001d98a:	add    BYTE PTR [rax],al
   14001d98c:	pop    rax
   14001d98d:	xchg   esp,eax
   14001d98e:	add    al,BYTE PTR [rax]
   14001d990:	adc    cl,bl
   14001d992:	add    DWORD PTR [rax],eax
   14001d994:	sbb    cl,0x1
	...
   14001d9a7:	add    BYTE PTR [rcx],al
	...
   14001d9b1:	add    BYTE PTR [rax],al
   14001d9b3:	add    BYTE PTR [rax-0x2ffffd6c],al
   14001d9b9:	fld    DWORD PTR [rcx]
   14001d9bb:	add    BYTE PTR [rax+0x1d9],ch
	...
   14001d9d1:	add    BYTE PTR [rax],al
   14001d9d3:	add    BYTE PTR [rcx],al
   14001d9d5:	add    BYTE PTR [rax],al
   14001d9d7:	add    BYTE PTR [rip+0xffffffffe8000000],al        # 0x12801d9dd
   14001d9dd:	fld    DWORD PTR [rcx]
	...
   14001d9e7:	add    BYTE PTR [rax],bl
   14001d9e9:	fiadd  DWORD PTR [rcx]
   14001d9eb:	add    al,ah
   14001d9ed:	rol    DWORD PTR [rcx],1
   14001d9ef:	add    BYTE PTR [rax+0x180001c9],bh
   14001d9f5:	retf   0x1
   14001d9f8:	push   0x1ca
	...
   14001da15:	add    BYTE PTR [rax],al
   14001da17:	add    BYTE PTR [rax+0x4000294],al
   14001da1d:	add    BYTE PTR [rax],al
   14001da1f:	add    BYTE PTR [rax],al
   14001da21:	add    BYTE PTR [rax],al
   14001da23:	add    bh,bh
   14001da25:	(bad)  
   14001da26:	(bad)  
   14001da27:	inc    DWORD PTR [rax]
   14001da29:	add    BYTE PTR [rax],al
   14001da2b:	add    BYTE PTR [rax+0x0],al
   14001da2e:	add    BYTE PTR [rax],al
   14001da30:	rcr    cl,1
   14001da32:	add    DWORD PTR [rax],eax
	...
   14001da40:	add    DWORD PTR [rax],eax
   14001da42:	add    BYTE PTR [rax],al
   14001da44:	adc    BYTE PTR [rax],al
   14001da46:	add    BYTE PTR [rax],al
   14001da48:	add    BYTE PTR [rax],al
   14001da4a:	add    BYTE PTR [rax],al
   14001da4c:	adc    BYTE PTR [rdx+rax*1+0x1d9d000],0x0
   14001da54:	rex fiadd DWORD PTR [rcx]
	...
   14001da67:	add    BYTE PTR [rcx],al
	...
   14001da71:	add    BYTE PTR [rax],al
   14001da73:	add    BYTE PTR [rax-0x6ffffd6c],dh
   14001da79:	fiadd  DWORD PTR [rcx]
   14001da7b:	add    BYTE PTR [rax-0x26],ch
   14001da7e:	add    DWORD PTR [rax],eax
	...
   14001da94:	add    DWORD PTR [rax],eax
   14001da96:	add    BYTE PTR [rax],al
   14001da98:	or     BYTE PTR [rax],al
   14001da9a:	add    BYTE PTR [rax],al
   14001da9c:	mov    al,0xda
   14001da9e:	add    DWORD PTR [rax],eax
	...
   14001dab0:	clc    
   14001dab1:	fiadd  DWORD PTR [rcx]
   14001dab3:	add    BYTE PTR [rax],ah
   14001dab5:	fild   DWORD PTR [rcx]
   14001dab7:	add    BYTE PTR [rax],ah
   14001dab9:	(bad)  
   14001daba:	add    DWORD PTR [rax],eax
   14001dabc:	cwde   
   14001dabd:	(bad)  
   14001dabe:	add    DWORD PTR [rax],eax
   14001dac0:	mov    al,0xcd
   14001dac2:	add    DWORD PTR [rax],eax
   14001dac4:	mov    eax,0x180001c9
   14001dac9:	retf   0x1
   14001dacc:	push   0x1ca
	...
   14001daf5:	add    BYTE PTR [rax],al
   14001daf7:	add    BYTE PTR [rax+0x7000294],dh
   14001dafd:	add    BYTE PTR [rax],al
   14001daff:	add    BYTE PTR [rax],al
   14001db01:	add    BYTE PTR [rax],al
   14001db03:	add    bh,bh
   14001db05:	(bad)  
   14001db06:	(bad)  
   14001db07:	inc    DWORD PTR [rax]
   14001db09:	add    BYTE PTR [rax],al
   14001db0b:	add    BYTE PTR [rax+0x0],al
   14001db0e:	add    BYTE PTR [rax],al
   14001db10:	nop
   14001db11:	fiadd  DWORD PTR [rcx]
	...
   14001db1f:	add    al,bl
   14001db21:	xchg   esp,eax
   14001db22:	add    al,BYTE PTR [rax]
   14001db24:	(bad)  
   14001db25:	add    BYTE PTR [rax],al
   14001db27:	add    BYTE PTR [rax],al
   14001db29:	add    BYTE PTR [rax],al
   14001db2b:	add    bh,bh
   14001db2d:	(bad)  
   14001db2e:	(bad)  
   14001db2f:	inc    DWORD PTR [rax]
   14001db31:	add    BYTE PTR [rax],al
   14001db33:	add    BYTE PTR [rax+0x0],al
   14001db36:	add    BYTE PTR [rax],al
   14001db38:	rex.W fild DWORD PTR [rcx]
	...
   14001db4b:	add    BYTE PTR [rcx],al
   14001db4d:	add    BYTE PTR [rax],al
   14001db4f:	add    BYTE PTR [rdi],al
   14001db51:	add    BYTE PTR [rax],al
   14001db53:	add    BYTE PTR [rax-0x25],ah
   14001db56:	add    DWORD PTR [rax],eax
	...
   14001db60:	and    bl,bl
   14001db62:	add    DWORD PTR [rax],eax
   14001db64:	and    ch,dl
   14001db66:	add    DWORD PTR [rax],eax
   14001db68:	cwde   
   14001db69:	(bad)  
   14001db6a:	add    DWORD PTR [rax],eax
   14001db6c:	mov    al,0xcd
   14001db6e:	add    DWORD PTR [rax],eax
   14001db70:	mov    eax,0x180001c9
   14001db75:	retf   0x1
   14001db78:	push   0x1ca
	...
   14001db9d:	add    BYTE PTR [rax],al
   14001db9f:	add    BYTE PTR [rcx],al
   14001dba1:	add    BYTE PTR [rax],al
   14001dba3:	add    BYTE PTR [rax],dl
   14001dba5:	add    BYTE PTR [rax],al
   14001dba7:	add    BYTE PTR [rax],al
   14001dba9:	add    BYTE PTR [rax],al
   14001dbab:	add    BYTE PTR [rax-0x6ffffd6c],dh
   14001dbb1:	fiadd  DWORD PTR [rcx]
   14001dbb3:	add    BYTE PTR [rax+0x1db],ah
	...
   14001dbc5:	add    BYTE PTR [rax],al
   14001dbc7:	add    BYTE PTR [rcx],al
	...
   14001dbd1:	add    BYTE PTR [rax],al
   14001dbd3:	add    al,bh
   14001dbd5:	xchg   esp,eax
   14001dbd6:	add    al,BYTE PTR [rax]
   14001dbd8:	lock fild DWORD PTR [rcx]
   14001dbdb:	add    al,cl
   14001dbdd:	fild   DWORD PTR [rcx]
	...
   14001dbf3:	add    BYTE PTR [rcx],al
   14001dbf5:	add    BYTE PTR [rax],al
   14001dbf7:	add    BYTE PTR [rip+0x8000000],al        # 0x14801dbfd
   14001dbfd:	fadd   QWORD PTR [rcx]
	...
   14001dc07:	add    BYTE PTR [rax],bh
   14001dc09:	fadd   QWORD PTR [rcx]
   14001dc0b:	add    al,ah
   14001dc0d:	rol    DWORD PTR [rcx],1
   14001dc0f:	add    BYTE PTR [rax+0x180001c9],bh
   14001dc15:	retf   0x1
   14001dc18:	push   0x1ca
	...
   14001dc35:	add    BYTE PTR [rax],al
   14001dc37:	add    al,bh
   14001dc39:	xchg   esp,eax
   14001dc3a:	add    al,BYTE PTR [rax]
   14001dc3c:	add    al,0x0
   14001dc3e:	add    BYTE PTR [rax],al
   14001dc40:	add    BYTE PTR [rax],al
   14001dc42:	add    BYTE PTR [rax],al
   14001dc44:	(bad)  
   14001dc45:	(bad)  
   14001dc46:	(bad)  
   14001dc47:	inc    DWORD PTR [rax]
   14001dc49:	add    BYTE PTR [rax],al
   14001dc4b:	add    BYTE PTR [rax+0x0],al
   14001dc4e:	add    BYTE PTR [rax],al
   14001dc50:	lock fild DWORD PTR [rcx]
	...
   14001dc5f:	add    BYTE PTR [rcx],al
   14001dc61:	add    BYTE PTR [rax],al
   14001dc63:	add    BYTE PTR [rax],dl
   14001dc65:	add    BYTE PTR [rax],al
   14001dc67:	add    BYTE PTR [rax],al
   14001dc69:	add    BYTE PTR [rax],al
   14001dc6b:	add    al,bh
   14001dc6d:	xchg   esp,eax
   14001dc6e:	add    al,BYTE PTR [rax]
   14001dc70:	lock fild DWORD PTR [rcx]
   14001dc73:	add    BYTE PTR [rax-0x24],ah
   14001dc76:	add    DWORD PTR [rax],eax
	...
   14001dc88:	add    DWORD PTR [rax],eax
	...
   14001dc92:	add    BYTE PTR [rax],al
   14001dc94:	and    BYTE PTR [rbp-0x234ffffe],dl
   14001dc9a:	add    DWORD PTR [rax],eax
   14001dc9c:	mov    ah,bl
   14001dc9e:	add    DWORD PTR [rax],eax
	...
   14001dcb4:	add    DWORD PTR [rax],eax
   14001dcb6:	add    BYTE PTR [rax],al
   14001dcb8:	add    eax,0xc8000000
   14001dcbd:	fadd   QWORD PTR [rcx]
	...
   14001dcc7:	add    al,bh
   14001dcc9:	fadd   QWORD PTR [rcx]
   14001dccb:	add    al,ah
   14001dccd:	rol    DWORD PTR [rcx],1
   14001dccf:	add    BYTE PTR [rax+0x180001c9],bh
   14001dcd5:	retf   0x1
   14001dcd8:	push   0x1ca
	...
   14001dcf5:	add    BYTE PTR [rax],al
   14001dcf7:	add    BYTE PTR [rax],ah
   14001dcf9:	xchg   ebp,eax
   14001dcfa:	add    al,BYTE PTR [rax]
   14001dcfc:	add    al,0x0
   14001dcfe:	add    BYTE PTR [rax],al
   14001dd00:	add    BYTE PTR [rax],al
   14001dd02:	add    BYTE PTR [rax],al
   14001dd04:	(bad)  
   14001dd05:	(bad)  
   14001dd06:	(bad)  
   14001dd07:	inc    DWORD PTR [rax]
   14001dd09:	add    BYTE PTR [rax],al
   14001dd0b:	add    BYTE PTR [rax+0x0],al
   14001dd0e:	add    BYTE PTR [rax],al
   14001dd10:	mov    al,0xdc
   14001dd12:	add    DWORD PTR [rax],eax
	...
   14001dd20:	add    DWORD PTR [rax],eax
   14001dd22:	add    BYTE PTR [rax],al
   14001dd24:	adc    BYTE PTR [rax],al
   14001dd26:	add    BYTE PTR [rax],al
   14001dd28:	add    BYTE PTR [rax],al
   14001dd2a:	add    BYTE PTR [rax],al
   14001dd2c:	and    BYTE PTR [rbp-0x234ffffe],dl
   14001dd32:	add    DWORD PTR [rax],eax
   14001dd34:	and    ch,bl
   14001dd36:	add    DWORD PTR [rax],eax
	...
   14001dd48:	add    DWORD PTR [rax],eax
	...
   14001dd52:	add    BYTE PTR [rax],al
   14001dd54:	xchg   rbp,rax
   14001dd56:	add    al,BYTE PTR [rax]
   14001dd58:	jo     0x14001dd37
   14001dd5a:	add    DWORD PTR [rax],eax
   14001dd5c:	rex.W fld QWORD PTR [rcx]
	...
   14001dd73:	add    BYTE PTR [rcx],al
   14001dd75:	add    BYTE PTR [rax],al
   14001dd77:	add    BYTE PTR [rip+0xffffffff88000000],al        # 0xc801dd7d
   14001dd7d:	fld    QWORD PTR [rcx]
	...
   14001dd87:	add    BYTE PTR [rax-0x1ffffe23],bh
   14001dd8d:	rol    DWORD PTR [rcx],1
   14001dd8f:	add    BYTE PTR [rax+0x180001c9],bh
   14001dd95:	retf   0x1
   14001dd98:	push   0x1ca
	...
   14001ddb5:	add    BYTE PTR [rax],al
   14001ddb7:	add    BYTE PTR [rax-0x6b],cl
   14001ddba:	add    al,BYTE PTR [rax]
   14001ddbc:	add    al,0x0
   14001ddbe:	add    BYTE PTR [rax],al
   14001ddc0:	add    BYTE PTR [rax],al
   14001ddc2:	add    BYTE PTR [rax],al
   14001ddc4:	(bad)  
   14001ddc5:	(bad)  
   14001ddc6:	(bad)  
   14001ddc7:	inc    DWORD PTR [rax]
   14001ddc9:	add    BYTE PTR [rax],al
   14001ddcb:	add    BYTE PTR [rax+0x0],al
   14001ddce:	add    BYTE PTR [rax],al
   14001ddd0:	jo     0x14001ddaf
   14001ddd2:	add    DWORD PTR [rax],eax
	...
   14001dde0:	add    DWORD PTR [rax],eax
   14001dde2:	add    BYTE PTR [rax],al
   14001dde4:	adc    BYTE PTR [rax],al
   14001dde6:	add    BYTE PTR [rax],al
   14001dde8:	add    BYTE PTR [rax],al
   14001ddea:	add    BYTE PTR [rax],al
   14001ddec:	xchg   rbp,rax
   14001ddee:	add    al,BYTE PTR [rax]
   14001ddf0:	jo     0x14001ddcf
   14001ddf2:	add    DWORD PTR [rax],eax
   14001ddf4:	loopne 0x14001ddd3
   14001ddf6:	add    DWORD PTR [rax],eax
	...
   14001de08:	add    DWORD PTR [rax],eax
	...
   14001de12:	add    BYTE PTR [rax],al
   14001de14:	js     0x14001ddab
   14001de16:	add    al,BYTE PTR [rax]
   14001de18:	xor    dh,bl
   14001de1a:	add    DWORD PTR [rax],eax
   14001de1c:	or     dh,bl
   14001de1e:	add    DWORD PTR [rax],eax
	...
   14001de34:	add    DWORD PTR [rax],eax
   14001de36:	add    BYTE PTR [rax],al
   14001de38:	add    eax,0x48000000
   14001de3d:	fiadd  WORD PTR [rcx]
	...
   14001de47:	add    BYTE PTR [rax-0x22],bh
   14001de4a:	add    DWORD PTR [rax],eax
   14001de4c:	loopne 0x14001de1f
   14001de4e:	add    DWORD PTR [rax],eax
   14001de50:	mov    eax,0x180001c9
   14001de55:	retf   0x1
   14001de58:	push   0x1ca
	...
   14001de75:	add    BYTE PTR [rax],al
   14001de77:	add    BYTE PTR [rax-0x6b],bh
   14001de7a:	add    al,BYTE PTR [rax]
   14001de7c:	add    al,0x0
   14001de7e:	add    BYTE PTR [rax],al
   14001de80:	add    BYTE PTR [rax],al
   14001de82:	add    BYTE PTR [rax],al
   14001de84:	(bad)  
   14001de85:	(bad)  
   14001de86:	(bad)  
   14001de87:	inc    DWORD PTR [rax]
   14001de89:	add    BYTE PTR [rax],al
   14001de8b:	add    BYTE PTR [rax+0x0],al
   14001de8e:	add    BYTE PTR [rax],al
   14001de90:	xor    dh,bl
   14001de92:	add    DWORD PTR [rax],eax
	...
   14001dea0:	add    DWORD PTR [rax],eax
   14001dea2:	add    BYTE PTR [rax],al
   14001dea4:	adc    BYTE PTR [rax],al
   14001dea6:	add    BYTE PTR [rax],al
   14001dea8:	add    BYTE PTR [rax],al
   14001deaa:	add    BYTE PTR [rax],al
   14001deac:	js     0x14001de43
   14001deae:	add    al,BYTE PTR [rax]
   14001deb0:	xor    dh,bl
   14001deb2:	add    DWORD PTR [rax],eax
   14001deb4:	movabs al,ds:0x1de
	...
   14001dec5:	add    BYTE PTR [rax],al
   14001dec7:	add    BYTE PTR [rcx],al
	...
   14001ded1:	add    BYTE PTR [rax],al
   14001ded3:	add    BYTE PTR [rax-0xffffd6b],ah
   14001ded9:	fiadd  WORD PTR [rcx]
   14001dedb:	add    al,cl
   14001dedd:	fiadd  WORD PTR [rcx]
	...
   14001def3:	add    BYTE PTR [rcx],al
   14001def5:	add    BYTE PTR [rax],al
   14001def7:	add    BYTE PTR [rip+0x8000000],al        # 0x14801defd
   14001defd:	fild   WORD PTR [rcx]
	...
   14001df07:	add    BYTE PTR [rax],bh
   14001df09:	fild   WORD PTR [rcx]
   14001df0b:	add    al,bl
   14001df0d:	(bad)  
   14001df0e:	add    DWORD PTR [rax],eax
   14001df10:	cwde   
   14001df11:	retf   
   14001df12:	add    DWORD PTR [rax],eax
   14001df14:	sbb    dl,cl
   14001df16:	add    DWORD PTR [rax],eax
   14001df18:	clc    
   14001df19:	retf   
   14001df1a:	add    DWORD PTR [rax],eax
	...
   14001df38:	movabs al,ds:0x4000295
   14001df41:	add    BYTE PTR [rax],al
   14001df43:	add    bh,bh
   14001df45:	(bad)  
   14001df46:	(bad)  
   14001df47:	inc    DWORD PTR [rax]
   14001df49:	add    BYTE PTR [rax],al
   14001df4b:	add    BYTE PTR [rax+0x0],al
   14001df4e:	add    BYTE PTR [rax],al
   14001df50:	lock fiadd WORD PTR [rcx]
	...
   14001df5f:	add    BYTE PTR [rcx],al
   14001df61:	add    BYTE PTR [rax],al
   14001df63:	add    BYTE PTR [rax],dl
   14001df65:	add    BYTE PTR [rax],al
   14001df67:	add    BYTE PTR [rax],al
   14001df69:	add    BYTE PTR [rax],al
   14001df6b:	add    BYTE PTR [rax-0xffffd6b],ah
   14001df71:	fiadd  WORD PTR [rcx]
   14001df73:	add    BYTE PTR [rax-0x21],ah
   14001df76:	add    DWORD PTR [rax],eax
	...
   14001df88:	add    DWORD PTR [rax],eax
	...
   14001df92:	add    BYTE PTR [rax],al
   14001df94:	enter  0x295,0x0
   14001df98:	mov    al,0xdf
   14001df9a:	add    DWORD PTR [rax],eax
   14001df9c:	mov    bh,bl
   14001df9e:	add    DWORD PTR [rax],eax
	...
   14001dfb4:	add    DWORD PTR [rax],eax
   14001dfb6:	add    BYTE PTR [rax],al
   14001dfb8:	(bad)  
   14001dfb9:	add    BYTE PTR [rax],al
   14001dfbb:	add    al,cl
   14001dfbd:	fild   WORD PTR [rcx]
	...
   14001dfc7:	add    BYTE PTR [rax],al
   14001dfc9:	loopne 0x14001dfcc
   14001dfcb:	add    BYTE PTR [rax-0x4ffffe2b],bl
   14001dfd1:	int    0x1
   14001dfd3:	add    BYTE PTR [rax+0x180001c9],bh
   14001dfd9:	retf   0x1
   14001dfdc:	push   0x1ca
	...
   14001dffd:	add    BYTE PTR [rax],al
   14001dfff:	add    al,cl
   14001e001:	xchg   ebp,eax
   14001e002:	add    al,BYTE PTR [rax]
   14001e004:	add    eax,0x0
   14001e009:	add    BYTE PTR [rax],al
   14001e00b:	add    bh,bh
   14001e00d:	(bad)  
   14001e00e:	(bad)  
   14001e00f:	inc    DWORD PTR [rax]
   14001e011:	add    BYTE PTR [rax],al
   14001e013:	add    BYTE PTR [rax+0x0],al
   14001e016:	add    BYTE PTR [rax],al
   14001e018:	mov    al,0xdf
   14001e01a:	add    DWORD PTR [rax],eax
	...
   14001e028:	add    DWORD PTR [rax],eax
   14001e02a:	add    BYTE PTR [rax],al
   14001e02c:	adc    BYTE PTR [rax],al
   14001e02e:	add    BYTE PTR [rax],al
   14001e030:	add    BYTE PTR [rax],al
   14001e032:	add    BYTE PTR [rax],al
   14001e034:	enter  0x295,0x0
   14001e038:	mov    al,0xdf
   14001e03a:	add    DWORD PTR [rax],eax
   14001e03c:	sub    al,ah
   14001e03e:	add    DWORD PTR [rax],eax
	...
   14001e050:	add    DWORD PTR [rax],eax
	...
   14001e05a:	add    BYTE PTR [rax],al
   14001e05c:	or     BYTE PTR [rsi-0x1f87fffe],dl
   14001e062:	add    DWORD PTR [rax],eax
   14001e064:	push   rax
   14001e065:	loopne 0x14001e068
	...
   14001e07b:	add    BYTE PTR [rcx],al
   14001e07d:	add    BYTE PTR [rax],al
   14001e07f:	add    BYTE PTR [rax+rax*1],al
   14001e082:	add    BYTE PTR [rax],al
   14001e084:	nop
   14001e085:	loopne 0x14001e088
	...
   14001e08f:	add    BYTE PTR [rax-0x47fffe20],bh
   14001e095:	leave  
   14001e096:	add    DWORD PTR [rax],eax
   14001e098:	sbb    dl,cl
   14001e09a:	add    DWORD PTR [rax],eax
   14001e09c:	push   0x1ca
	...
   14001e0b5:	add    BYTE PTR [rax],al
   14001e0b7:	add    BYTE PTR [rax],cl
   14001e0b9:	xchg   esi,eax
   14001e0ba:	add    al,BYTE PTR [rax]
   14001e0bc:	add    eax,DWORD PTR [rax]
   14001e0be:	add    BYTE PTR [rax],al
   14001e0c0:	add    BYTE PTR [rax],al
   14001e0c2:	add    BYTE PTR [rax],al
   14001e0c4:	(bad)  
   14001e0c5:	(bad)  
   14001e0c6:	(bad)  
   14001e0c7:	inc    DWORD PTR [rax]
   14001e0c9:	add    BYTE PTR [rax],al
   14001e0cb:	add    BYTE PTR [rax+0x0],al
   14001e0ce:	add    BYTE PTR [rax],al
   14001e0d0:	js     0x14001e0b2
   14001e0d2:	add    DWORD PTR [rax],eax
	...
   14001e0e0:	add    DWORD PTR [rax],eax
   14001e0e2:	add    BYTE PTR [rax],al
   14001e0e4:	adc    BYTE PTR [rax],al
   14001e0e6:	add    BYTE PTR [rax],al
   14001e0e8:	add    BYTE PTR [rax],al
   14001e0ea:	add    BYTE PTR [rax],al
   14001e0ec:	or     BYTE PTR [rsi-0x1f87fffe],dl
   14001e0f2:	add    DWORD PTR [rax],eax
   14001e0f4:	loopne 0x14001e0d6
   14001e0f6:	add    DWORD PTR [rax],eax
	...
   14001e108:	add    DWORD PTR [rax],eax
	...
   14001e112:	add    BYTE PTR [rax],al
   14001e114:	cwde   
   14001e115:	xchg   ecx,eax
   14001e116:	add    al,BYTE PTR [rax]
   14001e118:	fmul   st,st(5)
   14001e11a:	add    DWORD PTR [rax],eax
   14001e11c:	or     cl,ah
   14001e11e:	add    DWORD PTR [rax],eax
	...
   14001e130:	add    DWORD PTR [rax],eax
   14001e132:	add    BYTE PTR [rax],al
   14001e134:	adc    BYTE PTR [rax],al
   14001e136:	add    BYTE PTR [rax],al
   14001e138:	add    BYTE PTR [rax],al
   14001e13a:	add    BYTE PTR [rax],al
   14001e13c:	cwde   
   14001e13d:	xchg   ecx,eax
   14001e13e:	add    al,BYTE PTR [rax]
   14001e140:	fmul   st,st(5)
   14001e142:	add    DWORD PTR [rax],eax
   14001e144:	xor    cl,ah
   14001e146:	add    DWORD PTR [rax],eax
	...
   14001e158:	add    DWORD PTR [rax],eax
	...
   14001e162:	add    BYTE PTR [rax],al
   14001e164:	push   0xffffffff80000298
   14001e169:	loope  0x14001e16c
   14001e16b:	add    BYTE PTR [rax-0x1f],bl
   14001e16e:	add    DWORD PTR [rax],eax
	...
   14001e188:	add    DWORD PTR [rax],eax
   14001e18a:	add    BYTE PTR [rax],al
   14001e18c:	cwde   
   14001e18d:	loope  0x14001e190
	...
   14001e197:	add    BYTE PTR [rax+0x1e1],ch
	...
   14001e1a5:	add    BYTE PTR [rax],al
   14001e1a7:	add    BYTE PTR [rax-0x68],ch
   14001e1aa:	add    al,BYTE PTR [rax]
	...
   14001e1b4:	(bad)  
   14001e1b5:	(bad)  
   14001e1b6:	(bad)  
   14001e1b7:	inc    DWORD PTR [rax]
   14001e1b9:	add    BYTE PTR [rax],al
   14001e1bb:	add    BYTE PTR [rax+0x0],al
   14001e1be:	add    BYTE PTR [rax],al
   14001e1c0:	and    cl,0x1
	...
   14001e1ef:	add    BYTE PTR [rcx],al
   14001e1f1:	or     al,BYTE PTR [rax+rax*1]
   14001e1f4:	or     dh,BYTE PTR [rdx+rcx*1]
   14001e1f7:	add    BYTE PTR [rdx],cl
   14001e1f9:	jb     0x14001e201
   14001e1fb:	jo     0x14001e1fe
   14001e1fd:	syscall 
   14001e1ff:	add    BYTE PTR [rdi],cl
   14001e201:	xor    al,0x20
   14001e203:	add    BYTE PTR [rdi],cl
   14001e205:	add    DWORD PTR [rsi],ebx
   14001e207:	add    BYTE PTR [rax],cl
   14001e209:	jo     0x14001e20b
   14001e20b:	add    BYTE PTR [rcx],ah
   14001e20d:	add    BYTE PTR [rax],al
   14001e20f:	add    BYTE PTR [rax+0x1d000014],ah
   14001e215:	adc    eax,0xe2300000
   14001e21a:	add    DWORD PTR [rax],eax
   14001e21c:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a406e224
   14001e222:	(bad)  
   14001e223:	add    BYTE PTR [rax+0x1d000014],ah
   14001e229:	adc    eax,0xe2300000
   14001e22e:	add    DWORD PTR [rax],eax
   14001e230:	add    DWORD PTR [rdx],ecx
   14001e232:	add    al,0x0
   14001e234:	or     dh,BYTE PTR [rcx+rcx*1]
   14001e237:	add    BYTE PTR [rdx],cl
   14001e239:	xor    al,BYTE PTR [rsi]
   14001e23b:	jo     0x14001e25e
   14001e23d:	add    BYTE PTR [rax],al
   14001e23f:	add    BYTE PTR [rax],al
   14001e241:	(bad)  
   14001e242:	add    BYTE PTR [rax],al
   14001e244:	pop    rbp
   14001e245:	(bad)  
   14001e246:	add    BYTE PTR [rax],al
   14001e248:	(bad)  
   14001e249:	loop   0x14001e24c
   14001e24b:	add    BYTE PTR [rcx],ah
   14001e24d:	add    eax,0x34050002
   14001e252:	or     DWORD PTR [rax],eax
   14001e254:	add    BYTE PTR [rsi],dl
   14001e256:	add    BYTE PTR [rax],al
   14001e258:	pop    rbp
   14001e259:	(bad)  
   14001e25a:	add    BYTE PTR [rax],al
   14001e25c:	(bad)  
   14001e25d:	loop   0x14001e260
   14001e25f:	add    BYTE PTR [rcx],al
   14001e261:	or     BYTE PTR [rax+rax*1],al
   14001e264:	or     BYTE PTR [rdx],dh
   14001e266:	add    al,0x70
   14001e268:	add    esp,DWORD PTR [rax+0x2]
   14001e26b:	push   rax
   14001e26c:	add    DWORD PTR [rdi+rax*1+0x0],ecx
   14001e270:	rex.WR je 0x14001e277
   14001e273:	add    BYTE PTR [rdi+0x34],al
   14001e276:	or     DWORD PTR [rax],eax
   14001e278:	(bad)  
   14001e279:	rex.X add esp,DWORD PTR [rax+0x2]
   14001e27d:	push   rax
   14001e27e:	add    BYTE PTR [rax],al
   14001e280:	and    DWORD PTR [rax],eax
   14001e282:	add    BYTE PTR [rax],al
   14001e284:	rcl    BYTE PTR [rdi],0x0
   14001e287:	add    bh,ah
   14001e289:	(bad)  
   14001e28a:	add    BYTE PTR [rax],al
   14001e28c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e28d:	loop   0x14001e290
   14001e28f:	add    BYTE PTR [rcx],ah
   14001e291:	add    eax,0x34050002
   14001e296:	(bad)  
   14001e297:	add    al,al
   14001e299:	(bad)  
   14001e29a:	add    BYTE PTR [rax],al
   14001e29c:	out    0x17,eax
   14001e29e:	add    BYTE PTR [rax],al
   14001e2a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e2a1:	loop   0x14001e2a4
   14001e2a3:	add    BYTE PTR [rcx],al
   14001e2a5:	clts   
   14001e2a7:	add    BYTE PTR [rdi],cl
   14001e2a9:	or     BYTE PTR fs:[rax],al
   14001e2ac:	andps  xmm0,XMMWORD PTR [rdi]
   14001e2af:	add    BYTE PTR [rdi],cl
   14001e2b1:	xor    cl,BYTE PTR [rbx]
   14001e2b3:	jo     0x14001e2d6
   14001e2b5:	add    BYTE PTR [rax],al
   14001e2b7:	add    BYTE PTR [rax-0x46ffffe7],al
   14001e2bd:	sbb    DWORD PTR [rax],eax
   14001e2bf:	add    ah,bl
   14001e2c1:	loop   0x14001e2c4
   14001e2c3:	add    BYTE PTR [rcx],ah
   14001e2c5:	or     al,BYTE PTR [rax+rax*1]
   14001e2c8:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   14001e2cc:	add    eax,0x80000654
   14001e2d1:	sbb    DWORD PTR [rax],eax
   14001e2d3:	add    BYTE PTR [rcx-0x23ffffe7],bh
   14001e2d9:	loop   0x14001e2dc
   14001e2db:	add    BYTE PTR [rcx],al
   14001e2dd:	or     al,BYTE PTR [rax+rax*1]
   14001e2e0:	or     dh,BYTE PTR [rax+rcx*1]
   14001e2e3:	add    BYTE PTR [rdx],cl
   14001e2e5:	xor    al,BYTE PTR [rsi]
   14001e2e7:	(bad)  
   14001e2e8:	and    DWORD PTR [rax],eax
   14001e2ea:	add    BYTE PTR [rax],al
   14001e2ec:	xor    BYTE PTR [rdx],bl
   14001e2ee:	add    BYTE PTR [rax],al
   14001e2f0:	rex.WRB sbb r8b,BYTE PTR [r8]
   14001e2f3:	add    BYTE PTR [rax-0x13],dl
   14001e2f6:	add    DWORD PTR [rax],eax
   14001e2f8:	and    DWORD PTR [rsi],edx
   14001e2fa:	(bad)  
   14001e2fb:	add    BYTE PTR [rsi],dl
   14001e2fd:	je     0x14001e303
   14001e2ff:	add    BYTE PTR [rdx],cl
   14001e301:	fs (bad) 
   14001e303:	add    BYTE PTR [rip+0x30000634],al        # 0x17001e93d
   14001e309:	sbb    al,BYTE PTR [rax]
   14001e30b:	add    BYTE PTR [rbp+0x1a],cl
   14001e30e:	add    BYTE PTR [rax],al
   14001e310:	push   rax
   14001e311:	in     eax,dx
   14001e312:	add    DWORD PTR [rax],eax
   14001e314:	and    DWORD PTR [rax],eax
   14001e316:	add    BYTE PTR [rax],al
   14001e318:	mov    al,0x1a
   14001e31a:	add    BYTE PTR [rax],al
   14001e31c:	retf   0x1a
   14001e31f:	add    BYTE PTR [rbx+riz*8+0x1],dl
   14001e323:	add    BYTE PTR [rcx],ah
   14001e325:	add    BYTE PTR [rdx],al
   14001e327:	add    BYTE PTR [rax],al
   14001e329:	je     0x14001e334
   14001e32b:	add    BYTE PTR [rax-0x35ffffe6],dh
   14001e331:	sbb    al,BYTE PTR [rax]
   14001e333:	add    BYTE PTR [rbx+riz*8+0x1],dl
   14001e337:	add    BYTE PTR [rcx],ah
   14001e339:	push   rsp
   14001e33a:	(bad)  
   14001e33b:	add    BYTE PTR [rsp+rdx*2+0x8],dl
   14001e33f:	add    BYTE PTR [rdi+0x34],cl
   14001e342:	(bad)  
   14001e343:	add    BYTE PTR [rip+0xffffffffb0000974],al        # 0xf001ecbd
   14001e349:	sbb    al,BYTE PTR [rax]
   14001e34b:	add    dl,cl
   14001e34d:	sbb    al,BYTE PTR [rax]
   14001e34f:	add    BYTE PTR [rbx+riz*8+0x1],dl
   14001e353:	add    BYTE PTR [rcx],al
   14001e355:	(bad)  
   14001e356:	add    al,BYTE PTR [rax]
   14001e358:	(bad)  
   14001e359:	xor    al,BYTE PTR [rdx]
   14001e35b:	(bad)  
   14001e35c:	and    DWORD PTR [rax],eax
   14001e35e:	add    BYTE PTR [rax],al
   14001e360:	sbb    BYTE PTR [rbx],0x0
   14001e363:	add    BYTE PTR [rsi+0xc00001b],bh
   14001e369:	jmp    0x14001e36c
   14001e36b:	add    BYTE PTR [rcx],ah
   14001e36d:	or     al,BYTE PTR [rax+rax*1]
   14001e370:	or     dh,BYTE PTR [rax+rcx*1+0x0]
   14001e374:	add    eax,0x80000664
   14001e379:	sbb    eax,DWORD PTR [rax]
   14001e37b:	add    BYTE PTR [rsi+0xc00001b],bh
   14001e381:	jmp    0x14001e384
   14001e383:	add    BYTE PTR [rcx],al
   14001e385:	sbb    cl,BYTE PTR [rdx]
   14001e387:	add    BYTE PTR [rdx],bl
   14001e389:	push   rsp
   14001e38a:	or     al,0x0
   14001e38c:	sbb    dh,BYTE PTR [rdx+rcx*1]
   14001e38f:	add    BYTE PTR [rdx],bl
   14001e391:	xor    dl,BYTE PTR [rsi]
   14001e393:	loopne 0x14001e3a9
   14001e395:	rcl    BYTE PTR [rdx],1
   14001e397:	rcl    BYTE PTR [rax],0x70
   14001e39a:	punpcklbw mm4,DWORD PTR [rcx]
   14001e39d:	add    BYTE PTR [rax],al
   14001e39f:	add    BYTE PTR [rax+0x1d],dl
   14001e3a2:	add    BYTE PTR [rax],al
   14001e3a4:	jns    0x14001e3c3
   14001e3a6:	add    BYTE PTR [rax],al
   14001e3a8:	mov    esp,0x210001e4
   14001e3ad:	add    eax,0x74050002
   14001e3b2:	(bad)  
   14001e3b3:	add    BYTE PTR [rax+0x1d],dl
   14001e3b6:	add    BYTE PTR [rax],al
   14001e3b8:	jns    0x14001e3d7
   14001e3ba:	add    BYTE PTR [rax],al
   14001e3bc:	mov    esp,0x210001e4
   14001e3c1:	add    BYTE PTR [rax+rax*1],al
   14001e3c4:	add    BYTE PTR [rax+rcx*1+0x0],dh
   14001e3c8:	add    BYTE PTR [rsi+rcx*1],dh
   14001e3cb:	add    BYTE PTR [rax+0x1f],ah
   14001e3ce:	add    BYTE PTR [rax],al
   14001e3d0:	jb     0x14001e3f1
   14001e3d2:	add    BYTE PTR [rax],al
   14001e3d4:	and    al,0xe4
   14001e3d6:	add    DWORD PTR [rax],eax
   14001e3d8:	and    DWORD PTR [rax],eax
   14001e3da:	add    BYTE PTR [rax],al
   14001e3dc:	(bad)  
   14001e3dd:	(bad)  
   14001e3de:	add    BYTE PTR [rax],al
   14001e3e0:	jb     0x14001e401
   14001e3e2:	add    BYTE PTR [rax],al
   14001e3e4:	and    al,0xe4
   14001e3e6:	add    DWORD PTR [rax],eax
   14001e3e8:	and    DWORD PTR [rax],eax
   14001e3ea:	add    BYTE PTR [rax],al
   14001e3ec:	jb     0x14001e40d
   14001e3ee:	add    BYTE PTR [rax],al
   14001e3f0:	xchg   esp,eax
   14001e3f1:	and    DWORD PTR [rax],eax
   14001e3f3:	add    BYTE PTR [rsp+riz*8],cl
   14001e3f6:	add    DWORD PTR [rax],eax
   14001e3f8:	and    DWORD PTR [rip+0x54050002],eax        # 0x19406e400
   14001e3fe:	(bad)  
   14001e400:	jb     0x14001e421
   14001e402:	add    BYTE PTR [rax],al
   14001e404:	xchg   esp,eax
   14001e405:	and    DWORD PTR [rax],eax
   14001e407:	add    BYTE PTR [rsp+riz*8],cl
   14001e40a:	add    DWORD PTR [rax],eax
   14001e40c:	and    DWORD PTR [rsi],edx
   14001e40e:	add    al,0x0
   14001e410:	(bad)  
   14001e411:	je     0x14001e41b
   14001e413:	add    BYTE PTR [rip+0x60000e34],al        # 0x1a001f24d
   14001e419:	(bad)  
   14001e41a:	add    BYTE PTR [rax],al
   14001e41c:	jb     0x14001e43d
   14001e41e:	add    BYTE PTR [rax],al
   14001e420:	and    al,0xe4
   14001e422:	add    DWORD PTR [rax],eax
   14001e424:	add    DWORD PTR [rax],ecx
   14001e426:	add    eax,DWORD PTR [rax]
   14001e428:	or     BYTE PTR [rdx+0x6002c004],al
   14001e42e:	add    BYTE PTR [rax],al
   14001e430:	add    DWORD PTR [rax+rcx*1+0x0],eax
   14001e434:	rex.R
   14001e435:	fs (bad) 
   14001e437:	add    BYTE PTR [rdi],cl
   14001e439:	push   rsp
   14001e43a:	or     DWORD PTR [rax],eax
   14001e43c:	sysenter 
   14001e43e:	(bad)  
   14001e43f:	add    BYTE PTR [rdi],cl
   14001e441:	xor    cl,BYTE PTR [rbx]
   14001e443:	jo     0x14001e446
   14001e445:	clts   
   14001e447:	add    BYTE PTR [rdi],cl
   14001e449:	adc    DWORD PTR fs:[rax],eax
   14001e44c:	sysenter 
   14001e44e:	adc    BYTE PTR [rax],al
   14001e450:	lss    ecx,FWORD PTR [rbx]
   14001e453:	jo     0x14001e476
   14001e455:	add    BYTE PTR [rax],al
   14001e457:	add    al,dh
   14001e459:	(bad)  
   14001e45a:	add    BYTE PTR [rax],al
   14001e45c:	sbb    BYTE PTR [rax],ch
   14001e45e:	add    BYTE PTR [rax],al
   14001e460:	mov    ah,ah
   14001e462:	add    DWORD PTR [rax],eax
   14001e464:	and    DWORD PTR [rsi],ebx
   14001e466:	or     al,BYTE PTR [rax]
   14001e468:	(bad)  
   14001e469:	in     al,0x35
   14001e46b:	add    BYTE PTR [rax],dl
   14001e46d:	(bad)  
   14001e46e:	add    BYTE PTR ss:[rsp+rsi*2],cl
   14001e472:	(bad)  
   14001e473:	add    BYTE PTR [rax],cl
   14001e475:	cmp    BYTE PTR fs:[rax],al
   14001e478:	add    al,0x54
   14001e47a:	cmp    DWORD PTR [rax],eax
   14001e47c:	lock (bad) 
   14001e47e:	add    BYTE PTR [rax],al
   14001e480:	sbb    BYTE PTR [rax],ch
   14001e482:	add    BYTE PTR [rax],al
   14001e484:	mov    ah,ah
   14001e486:	add    DWORD PTR [rax],eax
   14001e488:	add    DWORD PTR [rbx],edx
   14001e48a:	add    eax,0x3a011300
   14001e48f:	add    BYTE PTR [rax+rsi*8],cl
   14001e492:	or     al,al
   14001e494:	or     BYTE PTR [rax],dh
   14001e496:	add    BYTE PTR [rax],al
   14001e498:	and    DWORD PTR [rax],eax
   14001e49a:	add    BYTE PTR [rax],al
   14001e49c:	adc    BYTE PTR [rsi],dh
   14001e49e:	add    BYTE PTR [rax],al
   14001e4a0:	cmp    DWORD PTR [rsi],esi
   14001e4a2:	add    BYTE PTR [rax],al
   14001e4a4:	mov    esp,0x210001e4
   14001e4a9:	add    eax,0x74050002
   14001e4ae:	(bad)  
   14001e4af:	add    BYTE PTR [rax],dl
   14001e4b1:	add    BYTE PTR ss:[rax],al
   14001e4b4:	cmp    DWORD PTR [rsi],esi
   14001e4b6:	add    BYTE PTR [rax],al
   14001e4b8:	mov    esp,0x10001e4
   14001e4bd:	clts   
   14001e4bf:	add    BYTE PTR [rdi],cl
   14001e4c1:	push   rsp
   14001e4c2:	or     BYTE PTR [rax],al
   14001e4c4:	sysenter 
   14001e4c6:	(bad)  
   14001e4c7:	add    BYTE PTR [rdi],cl
   14001e4c9:	xor    cl,BYTE PTR [rbx]
   14001e4cb:	(bad)  
   14001e4cc:	add    DWORD PTR [rdx+rcx*1],edx
   14001e4cf:	add    BYTE PTR [rcx+rax*1],dl
   14001e4d2:	jnp    0x14001e4d4
   14001e4d4:	or     eax,0x9e00bf0
   14001e4d9:	rol    BYTE PTR [rdi],1
   14001e4db:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14361e952
   14001e4e2:	add    dh,BYTE PTR [rax]
   14001e4e4:	add    DWORD PTR [rdx],edx
   14001e4e6:	or     BYTE PTR [rax],al
   14001e4e8:	adc    dl,BYTE PTR [rdi+rcx*1+0x0]
   14001e4ec:	adc    dh,BYTE PTR [rcx*1+0xe721200]
   14001e4f3:	ror    BYTE PTR [rax+rsi*2],0xb
   14001e4f7:	(bad)  
   14001e4f8:	add    DWORD PTR [rdx],ecx
   14001e4fa:	add    al,0x0
   14001e4fc:	or     dh,BYTE PTR [rbx+rcx*1]
   14001e4ff:	add    BYTE PTR [rdx],cl
   14001e501:	jb     0x14001e509
   14001e503:	jo     0x14001e506
   14001e505:	(bad)  
   14001e506:	add    al,BYTE PTR [rax]
   14001e508:	(bad)  
   14001e509:	xchg   edx,eax
   14001e50a:	add    dh,BYTE PTR [rax]
   14001e50c:	and    DWORD PTR [rax],eax
   14001e50e:	add    BYTE PTR [rax],al
   14001e510:	nop
   14001e511:	push   rdx
   14001e512:	add    BYTE PTR [rax],al
   14001e514:	jle    0x14001e569
   14001e516:	add    BYTE PTR [rax],al
   14001e518:	xor    ch,ah
   14001e51a:	add    DWORD PTR [rax],eax
   14001e51c:	and    DWORD PTR [rip+0x34050002],eax        # 0x17406e524
   14001e522:	or     DWORD PTR [rax],eax
   14001e524:	nop
   14001e525:	push   rdx
   14001e526:	add    BYTE PTR [rax],al
   14001e528:	jle    0x14001e57d
   14001e52a:	add    BYTE PTR [rax],al
   14001e52c:	xor    ch,ah
   14001e52e:	add    DWORD PTR [rax],eax
   14001e530:	add    DWORD PTR [rsi],eax
   14001e532:	add    al,BYTE PTR [rax]
   14001e534:	(bad)  
   14001e535:	xchg   edx,eax
   14001e536:	add    dh,BYTE PTR [rax+0x1]
   14001e539:	sbb    al,0xc
   14001e53b:	add    BYTE PTR [rsp+riz*2],bl
   14001e53e:	adc    DWORD PTR [rax],eax
   14001e540:	sbb    al,0x54
   14001e542:	adc    BYTE PTR [rax],al
   14001e544:	sbb    al,0x34
   14001e546:	ltr    WORD PTR [rdx+rsi*2]
   14001e54a:	sbb    al,dh
   14001e54c:	(bad)  
   14001e54d:	loopne 0x14001e563
   14001e54f:	rcl    BYTE PTR [rdx],1
   14001e551:	rcl    BYTE PTR [rax],0x70
   14001e554:	add    DWORD PTR [rdi],ecx
   14001e556:	(bad)  
   14001e557:	add    BYTE PTR [rdi],cl
   14001e559:	fs or  al,0x0
   14001e55c:	sysenter 
   14001e55e:	or     eax,DWORD PTR [rax]
   14001e560:	(bad)  
   14001e562:	or     esi,DWORD PTR [rax+0x1]
   14001e565:	(bad)  
   14001e566:	add    al,BYTE PTR [rax]
   14001e568:	(bad)  
   14001e569:	jb     0x14001e56d
   14001e56b:	xor    BYTE PTR [rcx],al
   14001e56d:	sbb    BYTE PTR [rdx],cl
   14001e56f:	add    BYTE PTR [rax],bl
   14001e571:	ltr    WORD PTR fs:[rax]
   14001e575:	push   rsp
   14001e576:	(bad)  
   14001e577:	add    BYTE PTR [rax],bl
   14001e579:	xor    al,0xd
   14001e57b:	add    BYTE PTR [rax],bl
   14001e57d:	jb     0x14001e593
   14001e57f:	rcl    BYTE PTR [rdx],1
   14001e581:	rcl    BYTE PTR [rax],0x70
   14001e584:	and    DWORD PTR [rax],eax
   14001e586:	add    BYTE PTR [rax],al
   14001e588:	loopne 0x14001e5f4
   14001e58a:	add    BYTE PTR [rax],al
   14001e58c:	stc    
   14001e58d:	push   0x0
   14001e58f:	add    BYTE PTR [rax-0x18],ah
   14001e592:	add    DWORD PTR [rax],eax
   14001e594:	and    DWORD PTR [rax],edx
   14001e596:	add    al,0x0
   14001e598:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   14001e59c:	add    eax,0xe0000634
   14001e5a1:	push   0x0
   14001e5a3:	add    cl,bh
   14001e5a5:	push   0x0
   14001e5a7:	add    BYTE PTR [rax-0x18],ah
   14001e5aa:	add    DWORD PTR [rax],eax
   14001e5ac:	and    DWORD PTR [rax],eax
   14001e5ae:	add    BYTE PTR [rax],al
   14001e5b0:	jo     0x14001e61d
   14001e5b2:	add    BYTE PTR [rax],al
   14001e5b4:	fsubr  DWORD PTR [rbx+0x0]
   14001e5b7:	add    al,dl
   14001e5b9:	in     eax,0x1
   14001e5bb:	add    BYTE PTR [rcx],ah
   14001e5bd:	add    eax,0x34050002
   14001e5c2:	or     BYTE PTR [rax],al
   14001e5c4:	jo     0x14001e631
   14001e5c6:	add    BYTE PTR [rax],al
   14001e5c8:	fsubr  DWORD PTR [rbx+0x0]
   14001e5cb:	add    al,dl
   14001e5cd:	in     eax,0x1
   14001e5cf:	add    BYTE PTR [rcx],al
   14001e5d1:	adc    ecx,DWORD PTR [rax]
   14001e5d3:	add    BYTE PTR [rbx],dl
   14001e5d5:	or     al,BYTE PTR fs:[rax]
   14001e5d8:	adc    edx,DWORD PTR [rcx+rcx*1+0x0]
   14001e5dc:	adc    esi,DWORD PTR [rdx]
   14001e5de:	(bad)  
   14001e5e0:	or     eax,0x21700bc0
   14001e5e5:	add    BYTE PTR [rax],al
   14001e5e7:	add    BYTE PTR [rax],al
   14001e5e9:	ins    DWORD PTR es:[rdi],dx
   14001e5ea:	add    BYTE PTR [rax],al
   14001e5ec:	and    DWORD PTR [rbp+0x0],ebp
   14001e5ef:	add    BYTE PTR [rax+0x210001e8],bh
   14001e5f5:	add    BYTE PTR [rax],al
   14001e5f7:	add    BYTE PTR [rcx],ah
   14001e5f9:	ins    DWORD PTR es:[rdi],dx
   14001e5fa:	add    BYTE PTR [rax],al
   14001e5fc:	rex.WRX ins DWORD PTR es:[rdi],dx
   14001e5fe:	add    BYTE PTR [rax],al
   14001e600:	sbb    dh,ah
   14001e602:	add    DWORD PTR [rax],eax
   14001e604:	and    DWORD PTR [rip+0xffffffffd4050002],eax        # 0x11406e60c
   14001e60a:	or     eax,DWORD PTR [rax]
   14001e60c:	and    DWORD PTR [rbp+0x0],ebp
   14001e60f:	add    BYTE PTR [rsi+0x6d],cl
   14001e612:	add    BYTE PTR [rax],al
   14001e614:	sbb    dh,ah
   14001e616:	add    DWORD PTR [rax],eax
   14001e618:	and    DWORD PTR [rdx],ecx
   14001e61a:	add    al,0x0
   14001e61c:	or     al,ah
   14001e61e:	or     al,BYTE PTR [rax]
   14001e620:	add    eax,0x964
   14001e625:	ins    DWORD PTR es:[rdi],dx
   14001e626:	add    BYTE PTR [rax],al
   14001e628:	and    DWORD PTR [rbp+0x0],ebp
   14001e62b:	add    BYTE PTR [rax+0x10001e8],bh
   14001e631:	sbb    BYTE PTR [rax],cl
   14001e633:	add    BYTE PTR [rax],bl
   14001e635:	or     DWORD PTR fs:[rax],eax
   14001e638:	sbb    BYTE PTR [rax+rcx*1+0x0],dl
   14001e63c:	sbb    BYTE PTR [rsi+rax*1],dh
   14001e63f:	add    BYTE PTR [rax],bl
   14001e641:	xor    dl,BYTE PTR [rax+rsi*2]
   14001e644:	and    DWORD PTR [rax],eax
   14001e646:	add    BYTE PTR [rax],al
   14001e648:	nop
   14001e649:	jno    0x14001e64b
   14001e64b:	add    dh,cl
   14001e64d:	jno    0x14001e64f
   14001e64f:	add    BYTE PTR [rbx+rbp*8],cl
   14001e652:	add    DWORD PTR [rax],eax
   14001e654:	and    DWORD PTR [rax],eax
   14001e656:	add    BYTE PTR [rax],al
   14001e658:	(bad)  
   14001e659:	jno    0x14001e65b
   14001e65b:	add    bl,ch
   14001e65d:	jno    0x14001e65f
   14001e65f:	add    BYTE PTR [rax-0x1a],bh
   14001e662:	add    DWORD PTR [rax],eax
   14001e664:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a406e66c
   14001e66a:	or     BYTE PTR [rax],al
   14001e66c:	(bad)  
   14001e66d:	jno    0x14001e66f
   14001e66f:	add    bl,ch
   14001e671:	jno    0x14001e673
   14001e673:	add    BYTE PTR [rax-0x1a],bh
   14001e676:	add    DWORD PTR [rax],eax
   14001e678:	and    DWORD PTR [rdx],ecx
   14001e67a:	add    al,0x0
   14001e67c:	or     dh,BYTE PTR [rcx+rcx*1+0x0]
   14001e680:	add    eax,0x90000654
   14001e685:	jno    0x14001e687
   14001e687:	add    dh,cl
   14001e689:	jno    0x14001e68b
   14001e68b:	add    BYTE PTR [rbx+rbp*8],cl
   14001e68e:	add    DWORD PTR [rax],eax
   14001e690:	add    DWORD PTR [rax],ebx
   14001e692:	or     al,BYTE PTR [rax]
   14001e694:	sbb    BYTE PTR [rcx],al
   14001e696:	(bad)  
   14001e697:	add    BYTE PTR [rcx],dl
   14001e699:	lock pavgb mm1,QWORD PTR [rip+0x9c00bd0]        # 0x149c1f271
   14001e6a1:	jo     0x14001e6ab
   14001e6a3:	(bad)  
   14001e6a4:	(bad)  
   14001e6a5:	push   rax
   14001e6a6:	(bad)  
   14001e6a7:	xor    BYTE PTR [rcx],al
   14001e6a9:	(bad)  
   14001e6aa:	or     al,BYTE PTR [rax]
   14001e6ac:	(bad)  
   14001e6ad:	push   rsp
   14001e6ae:	adc    BYTE PTR [rax],al
   14001e6b0:	(bad)  
   14001e6b1:	xor    al,0xf
   14001e6b3:	add    BYTE PTR [rsi],dl
   14001e6b5:	jb     0x14001e6c9
   14001e6b7:	loopne 0x14001e6c9
   14001e6b9:	ror    BYTE PTR [rsi],1
   14001e6bb:	ror    BYTE PTR [rax+rsi*2],0xb
   14001e6bf:	(bad)  
   14001e6c0:	add    DWORD PTR [rdx],ecx
   14001e6c2:	add    al,0x0
   14001e6c4:	or     dh,BYTE PTR [rsi+rax*1]
   14001e6c7:	add    BYTE PTR [rdx],cl
   14001e6c9:	xor    al,BYTE PTR [rsi]
   14001e6cb:	jo     0x14001e6ee
   14001e6cd:	add    BYTE PTR [rax],al
   14001e6cf:	add    al,al
   14001e6d1:	nop
   14001e6d2:	add    BYTE PTR [rax],al
   14001e6d4:	fst    DWORD PTR [rax-0x19100000]
   14001e6da:	add    DWORD PTR [rax],eax
   14001e6dc:	and    DWORD PTR [rip+0x34050002],eax        # 0x17406e6e4
   14001e6e2:	(bad)  
   14001e6e3:	add    al,al
   14001e6e5:	nop
   14001e6e6:	add    BYTE PTR [rax],al
   14001e6e8:	fst    DWORD PTR [rax-0x19100000]
   14001e6ee:	add    DWORD PTR [rax],eax
   14001e6f0:	add    DWORD PTR [rdx],ecx
   14001e6f2:	add    al,0x0
   14001e6f4:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   14001e6f8:	or     dh,BYTE PTR [rdx]
   14001e6fa:	(bad)  
   14001e6fb:	jo     0x14001e6fe
   14001e6fd:	invd   
   14001e6ff:	add    BYTE PTR [rdi],cl
   14001e701:	jb     0x14001e70e
   14001e703:	loopne 0x14001e70e
   14001e705:	rol    BYTE PTR [rdi],1
   14001e707:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14361eb7e
   14001e70e:	add    dh,BYTE PTR [rax]
   14001e710:	add    DWORD PTR [rsi],eax
   14001e712:	add    al,BYTE PTR [rax]
   14001e714:	(bad)  
   14001e715:	push   rdx
   14001e716:	add    dh,BYTE PTR [rax]
   14001e718:	and    DWORD PTR [rax],eax
   14001e71a:	add    BYTE PTR [rax],al
   14001e71c:	nop
   14001e71d:	fwait
   14001e71e:	add    BYTE PTR [rax],al
   14001e720:	mov    esp,0xb800009b
   14001e725:	call   0x14522e72b
   14001e72a:	add    al,BYTE PTR [rax]
   14001e72c:	add    eax,0x90000a64
   14001e731:	fwait
   14001e732:	add    BYTE PTR [rax],al
   14001e734:	mov    esp,0xb800009b
   14001e739:	call   0x15402e73f
   14001e73e:	or     al,BYTE PTR [rax]
   14001e740:	adc    al,0x1
   14001e742:	(bad)  
   14001e743:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e1f339
   14001e749:	rol    BYTE PTR [rdi],1
   14001e74b:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14361ebc2
   14001e752:	add    dh,BYTE PTR [rax]
   14001e754:	add    DWORD PTR [rax],edx
   14001e756:	or     BYTE PTR [rax],al
   14001e758:	adc    BYTE PTR [rdi+rcx*1],dh
   14001e75b:	add    BYTE PTR [rax],dl
   14001e75d:	jb     0x14001e76b
   14001e75f:	ror    BYTE PTR [rdx],1
   14001e761:	ror    BYTE PTR [rax],0x70
   14001e764:	(bad)  
   14001e765:	(bad)  
   14001e766:	(bad)  
   14001e767:	push   rax
   14001e768:	add    DWORD PTR [rdi],ecx
   14001e76a:	or     BYTE PTR [rax],al
   14001e76c:	psrld  mm1,QWORD PTR [rbx]
   14001e76f:	loopne 0x14001e77a
   14001e771:	rol    BYTE PTR [rdi],1
   14001e773:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14361ebea
   14001e77a:	add    dh,BYTE PTR [rax]
   14001e77c:	add    DWORD PTR [rdx],ecx
   14001e77e:	add    al,0x0
   14001e780:	or     dh,BYTE PTR [rcx+rcx*1]
   14001e783:	add    BYTE PTR [rdx],cl
   14001e785:	push   rdx
   14001e786:	(bad)  
   14001e787:	jo     0x14001e7aa
   14001e789:	add    BYTE PTR [rax],al
   14001e78b:	add    BYTE PTR [rax+0x670000af],dl
   14001e791:	mov    al,0x0
   14001e793:	add    BYTE PTR [rdi+riz*8+0x8210001],ch
   14001e79a:	add    al,BYTE PTR [rax]
   14001e79c:	or     BYTE PTR [rbx+rdx*1+0x0],dh
   14001e7a0:	nop
   14001e7a1:	scas   eax,DWORD PTR es:[rdi]
   14001e7a2:	add    BYTE PTR [rax],al
   14001e7a4:	addr32 mov al,0x0
   14001e7a7:	add    BYTE PTR [rdi+riz*8+0xd010001],ch
   14001e7ae:	(bad)  
   14001e7af:	add    BYTE PTR [rip+0xd001434],cl        # 0x14d01fbe9
   14001e7b5:	ror    BYTE PTR [rcx],cl
   14001e7b7:	rol    BYTE PTR [rdi],0x60
   14001e7ba:	(bad)  
   14001e7bb:	push   rax
   14001e7bc:	add    DWORD PTR [rdx+rcx*1],edx
   14001e7bf:	add    BYTE PTR [rsp+rsi*1],dl
   14001e7c2:	adc    DWORD PTR [rax],eax
   14001e7c4:	adc    al,0x72
   14001e7c6:	adc    al,dh
   14001e7c8:	(bad)  
   14001e7c9:	loopne 0x14001e7d7
   14001e7cb:	ror    BYTE PTR [rdx],1
   14001e7cd:	ror    BYTE PTR [rax],0x70
   14001e7d0:	(bad)  
   14001e7d1:	(bad)  
   14001e7d2:	(bad)  
   14001e7d3:	push   rax
   14001e7d4:	add    DWORD PTR [rdi],eax
   14001e7d6:	add    eax,DWORD PTR [rax]
   14001e7d8:	(bad)  
   14001e7d9:	(bad)  
   14001e7db:	jo     0x14001e7df
   14001e7dd:	xor    BYTE PTR [rax],al
   14001e7df:	add    BYTE PTR [rcx],al
   14001e7e1:	adc    al,0x8
   14001e7e3:	add    BYTE PTR [rsp+riz*2],dl
   14001e7e6:	or     eax,DWORD PTR [rax]
   14001e7e8:	adc    al,0x54
   14001e7ea:	or     al,BYTE PTR [rax]
   14001e7ec:	adc    al,0x34
   14001e7ee:	or     DWORD PTR [rax],eax
   14001e7f0:	adc    al,0x52
   14001e7f2:	adc    BYTE PTR [rax+0x1],dh
   14001e7f5:	or     al,BYTE PTR [rax+rax*1]
   14001e7f8:	or     dh,BYTE PTR [rax+rcx*1]
   14001e7fb:	add    BYTE PTR [rdx],cl
   14001e7fd:	push   rdx
   14001e7fe:	(bad)  
   14001e7ff:	jo     0x14001e802
   14001e801:	clts   
   14001e803:	add    BYTE PTR [rdi],cl
   14001e805:	or     DWORD PTR fs:[rax],eax
   14001e808:	sysenter 
   14001e80a:	or     BYTE PTR [rax],al
   14001e80c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14001e80f:	jo     0x14001e832
   14001e811:	add    BYTE PTR [rax],al
   14001e813:	add    BYTE PTR [rax-0x46ffff41],ah
   14001e819:	mov    edi,0xe8600000
   14001e81e:	add    DWORD PTR [rax],eax
   14001e820:	and    DWORD PTR [rax],edx
   14001e822:	add    al,0x0
   14001e824:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   14001e828:	add    eax,0xa0000634
   14001e82d:	mov    edi,0xbfb90000
   14001e832:	add    BYTE PTR [rax],al
   14001e834:	(bad)  
   14001e835:	call   0x14022e83b
   14001e83a:	add    BYTE PTR [rax],al
   14001e83c:	rex rol BYTE PTR [rax],0x0
   14001e840:	pop    rcx
   14001e841:	rol    BYTE PTR [rax],0x0
   14001e844:	(bad)  
   14001e845:	call   0x15022e84b
   14001e84a:	add    al,0x0
   14001e84c:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   14001e850:	add    eax,0x40000634
   14001e855:	rol    BYTE PTR [rax],0x0
   14001e858:	pop    rcx
   14001e859:	rol    BYTE PTR [rax],0x0
   14001e85c:	(bad)  
   14001e85d:	call   0x15902e863
   14001e862:	(bad)  
   14001e863:	add    BYTE PTR [rcx],bl
   14001e865:	je     0x14001e870
   14001e867:	add    BYTE PTR [rcx],bl
   14001e869:	push   rsp
   14001e86a:	or     BYTE PTR [rax],al
   14001e86c:	sbb    DWORD PTR [rdx],esi
   14001e86e:	adc    eax,0x21c0
   14001e873:	add    al,ah
   14001e875:	ret    0x0
   14001e878:	mov    es,ebx
   14001e87a:	add    BYTE PTR [rax],al
   14001e87c:	mov    eax,0x210001e8
   14001e881:	add    BYTE PTR [rax],al
   14001e883:	add    BYTE PTR [rsi-0x59ffff3d],cl
   14001e889:	ret    
   14001e88a:	add    BYTE PTR [rax],al
   14001e88c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e88d:	call   0x14522e893
   14001e892:	add    al,BYTE PTR [rax]
   14001e894:	add    eax,0x8e000964
   14001e899:	ret    
   14001e89a:	add    BYTE PTR [rax],al
   14001e89c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e89d:	ret    
   14001e89e:	add    BYTE PTR [rax],al
   14001e8a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001e8a1:	call   0x14522e8a7
   14001e8a6:	add    al,BYTE PTR [rax]
   14001e8a8:	add    eax,0xe0000ac4
   14001e8ad:	ret    0x0
   14001e8b0:	mov    es,ebx
   14001e8b2:	add    BYTE PTR [rax],al
   14001e8b4:	mov    eax,0x10001e8
   14001e8b9:	or     BYTE PTR [rax+rax*1],al
   14001e8bc:	or     BYTE PTR [rdx],dh
   14001e8be:	add    al,0x70
   14001e8c0:	add    edx,DWORD PTR [rax+0x2]
   14001e8c3:	xor    BYTE PTR [rcx],ah
   14001e8c5:	add    BYTE PTR [rax],al
   14001e8c7:	add    al,ah
   14001e8c9:	(bad)  
   14001e8ca:	add    BYTE PTR [rax],al
   14001e8cc:	add    ebp,eax
   14001e8ce:	add    BYTE PTR [rax],al
   14001e8d0:	mov    eax,0x210001e8
   14001e8d5:	add    BYTE PTR [rax],al
   14001e8d7:	add    BYTE PTR [rcx],al
   14001e8d9:	(bad)
   14001e8dc:	(bad)
   14001e8e0:	clc    
   14001e8e1:	call   0x14522e8e7
   14001e8e6:	add    al,BYTE PTR [rax]
   14001e8e8:	add    eax,0x1000bd4
   14001e8ed:	(bad)
   14001e8f0:	(bad)
   14001e8f4:	clc    
   14001e8f5:	call   0x14a22e8fb
   14001e8fa:	add    al,0x0
   14001e8fc:	or     al,ah
   14001e8fe:	or     al,BYTE PTR [rax]
   14001e900:	add    eax,0xe0000964
   14001e905:	(bad)  
   14001e906:	add    BYTE PTR [rax],al
   14001e908:	add    ebp,eax
   14001e90a:	add    BYTE PTR [rax],al
   14001e90c:	mov    eax,0x210001e8
   14001e911:	add    BYTE PTR [rax],al
   14001e913:	add    BYTE PTR [rax-0x41ffff39],al
   14001e919:	mov    DWORD PTR [rax],0x1eb0c00
   14001e91f:	add    BYTE PTR [rcx],ah
   14001e921:	add    BYTE PTR [rax],al
   14001e923:	add    BYTE PTR [rsi-0x24ffff39],bh
   14001e929:	mov    DWORD PTR [rax],0x1e94400
   14001e92f:	add    BYTE PTR [rcx],ah
   14001e931:	add    eax,0x64050002
   14001e936:	or     BYTE PTR [rax],al
   14001e938:	mov    esi,0xdb0000c7
   14001e93d:	mov    DWORD PTR [rax],0x1e94400
   14001e943:	add    BYTE PTR [rcx],ah
   14001e945:	or     al,BYTE PTR [rax+rax*1]
   14001e948:	or     dh,BYTE PTR [rcx+rcx*1+0x0]
   14001e94c:	add    eax,0x80000654
   14001e951:	mov    DWORD PTR [rax],0xc7be00
   14001e957:	add    BYTE PTR [rbx+rbp*8],cl
   14001e95a:	add    DWORD PTR [rax],eax
   14001e95c:	and    DWORD PTR [rax],eax
   14001e95e:	add    BYTE PTR [rax],al
   14001e960:	xor    al,cl
   14001e962:	add    BYTE PTR [rax],al
   14001e964:	outs   dx,BYTE PTR ds:[rsi]
   14001e965:	enter  0x0,0xc
   14001e969:	jmp    0x14001e96c
   14001e96b:	add    BYTE PTR [rcx],ah
   14001e96d:	add    BYTE PTR [rax],al
   14001e96f:	add    BYTE PTR [rsi-0x38],ch
   14001e972:	add    BYTE PTR [rax],al
   14001e974:	mov    ecx,eax
   14001e976:	add    BYTE PTR [rax],al
   14001e978:	nop
   14001e979:	jmp    0x14522e97f
   14001e97e:	add    al,BYTE PTR [rax]
   14001e980:	add    eax,0x6e000864
   14001e985:	enter  0x0,0x8b
   14001e989:	enter  0x0,0x90
   14001e98d:	jmp    0x14a22e993
   14001e992:	add    al,0x0
   14001e994:	or     dh,BYTE PTR [rcx+rcx*1+0x0]
   14001e998:	add    eax,0x30000654
   14001e99d:	enter  0x0,0x6e
   14001e9a1:	enter  0x0,0xc
   14001e9a5:	jmp    0x14001e9a8
   14001e9a7:	add    BYTE PTR [rcx],ah
   14001e9a9:	add    BYTE PTR [rax],al
   14001e9ab:	add    al,ah
   14001e9ad:	enter  0x0,0xfe
   14001e9b1:	enter  0x0,0xcc
   14001e9b5:	jmp    0x14522e9bb
   14001e9ba:	add    al,BYTE PTR [rax]
   14001e9bc:	add    eax,0xe0000734
   14001e9c1:	enter  0x0,0xfe
   14001e9c5:	enter  0x0,0xcc
   14001e9c9:	jmp    0x14a02e9cf
   14001e9ce:	add    al,0x0
   14001e9d0:	or     ah,BYTE PTR [rax+rcx*1+0x0]
   14001e9d4:	or     dh,BYTE PTR [rdx]
   14001e9d6:	(bad)  
   14001e9d7:	jo     0x14001e9da
   14001e9d9:	sbb    al,0xc
   14001e9db:	add    BYTE PTR [rsp+riz*2],bl
   14001e9de:	(bad)  
   14001e9df:	add    BYTE PTR [rsp+rdx*2],bl
   14001e9e2:	or     eax,0xc341c00
   14001e9e7:	add    BYTE PTR [rdx+rdx*2],bl
   14001e9ea:	sbb    al,dh
   14001e9ec:	(bad)  
   14001e9ed:	loopne 0x14001ea03
   14001e9ef:	rcl    BYTE PTR [rdx],1
   14001e9f1:	rcl    BYTE PTR [rax],0x70
   14001e9f4:	and    DWORD PTR [rax],eax
   14001e9f6:	add    BYTE PTR [rax],al
   14001e9f8:	nop
   14001e9f9:	retf   
   14001e9fa:	add    BYTE PTR [rax],al
   14001e9fc:	stos   BYTE PTR es:[rdi],al
   14001e9fd:	retf   
   14001e9fe:	add    BYTE PTR [rax],al
   14001ea00:	sub    dl,ch
   14001ea02:	add    DWORD PTR [rax],eax
   14001ea04:	and    DWORD PTR [rsi],esi
   14001ea06:	or     al,BYTE PTR [rax]
   14001ea08:	ss push rsp
   14001ea0a:	sbb    eax,DWORD PTR [rax]
   14001ea0c:	and    ah,dl
   14001ea0e:	sbb    BYTE PTR [rax],al
   14001ea10:	sbb    ah,al
   14001ea12:	sbb    DWORD PTR [rax],eax
   14001ea14:	adc    BYTE PTR [rdx+rbx*1+0x0],dh
   14001ea18:	or     BYTE PTR [rsi+rbx*1],dh
   14001ea1b:	add    BYTE PTR [rax-0x55ffff35],dl
   14001ea21:	retf   
   14001ea22:	add    BYTE PTR [rax],al
   14001ea24:	sub    dl,ch
   14001ea26:	add    DWORD PTR [rax],eax
   14001ea28:	add    DWORD PTR [rcx],ecx
   14001ea2a:	add    eax,DWORD PTR [rax]
   14001ea2c:	or     DWORD PTR [rcx],eax
   14001ea2e:	sbb    al,0x0
   14001ea30:	add    ah,BYTE PTR [rax+0x0]
   14001ea33:	add    BYTE PTR [rcx],al
   14001ea35:	clts   
   14001ea37:	add    BYTE PTR [rdi],cl
   14001ea39:	or     eax,DWORD PTR fs:[rax]
   14001ea3c:	sysenter 
   14001ea3e:	or     DWORD PTR [rax],eax
   14001ea40:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14001ea43:	jo     0x14001ea66
   14001ea45:	add    BYTE PTR [rax],al
   14001ea47:	add    BYTE PTR [rax-0x30],dl
   14001ea4a:	add    BYTE PTR [rax],al
   14001ea4c:	ins    DWORD PTR es:[rdi],dx
   14001ea4d:	rol    BYTE PTR [rax],1
   14001ea4f:	add    BYTE PTR [rdx+rbp*8+0x1],bh
   14001ea53:	add    BYTE PTR [rcx],ah
   14001ea55:	ds or  al,0x0
   14001ea58:	ds je  0x14001ea93
   14001ea5b:	add    BYTE PTR [rax],ch
   14001ea5d:	hlt    
   14001ea5e:	xor    al,0x0
   14001ea60:	and    ah,ah
   14001ea62:	xor    eax,0x36d41800
   14001ea67:	add    BYTE PTR [rax],dl
   14001ea69:	(bad)  
   14001ea6a:	(bad)  
   14001ea6b:	add    BYTE PTR [rax],cl
   14001ea6d:	fs cmp al,0x0
   14001ea70:	push   rax
   14001ea71:	rol    BYTE PTR [rax],1
   14001ea73:	add    BYTE PTR [rbp-0x30],ch
   14001ea76:	add    BYTE PTR [rax],al
   14001ea78:	jl     0x14001ea64
   14001ea7a:	add    DWORD PTR [rax],eax
   14001ea7c:	add    DWORD PTR [rdx],ecx
   14001ea7e:	add    al,0x0
   14001ea80:	or     al,BYTE PTR [rcx]
   14001ea82:	cmp    DWORD PTR [rax],eax
   14001ea84:	add    edx,DWORD PTR [rax+0x2]
   14001ea87:	xor    BYTE PTR [rcx],ah
   14001ea89:	add    BYTE PTR [rax],al
   14001ea8b:	add    BYTE PTR [rax-0x55ffff2a],dl
   14001ea91:	(bad)  
   14001ea92:	add    BYTE PTR [rax],al
   14001ea94:	(bad)  
   14001ea95:	(bad)  
   14001ea96:	add    DWORD PTR [rax],eax
   14001ea98:	and    DWORD PTR [rax],edi
   14001ea9a:	(bad)  
   14001ea9b:	add    BYTE PTR [rax],bh
   14001ea9d:	je     0x14001eac5
   14001ea9f:	add    BYTE PTR [rax],dh
   14001eaa1:	fs (bad) 
   14001eaa3:	add    BYTE PTR [rax],ch
   14001eaa5:	hlt    
   14001eaa6:	and    al,BYTE PTR [rax]
   14001eaa8:	and    ah,ah
   14001eaaa:	and    eax,DWORD PTR [rax]
   14001eaac:	sbb    ah,dl
   14001eaae:	and    al,0x0
   14001eab0:	adc    ah,al
   14001eab2:	and    eax,0x2a540800
   14001eab7:	add    BYTE PTR [rax-0x55ffff2a],dl
   14001eabd:	(bad)  
   14001eabe:	add    BYTE PTR [rax],al
   14001eac0:	(bad)  
   14001eac1:	(bad)  
   14001eac2:	add    DWORD PTR [rax],eax
   14001eac4:	add    DWORD PTR [rcx],ecx
   14001eac6:	add    eax,DWORD PTR [rax]
   14001eac8:	or     DWORD PTR [rcx],eax
   14001eaca:	sub    BYTE PTR [rax],al
   14001eacc:	add    dh,BYTE PTR [rax]
   14001eace:	add    BYTE PTR [rax],al
   14001ead0:	and    DWORD PTR [rax],eax
   14001ead2:	add    BYTE PTR [rax],al
   14001ead4:	sbb    dl,0x0
   14001ead7:	add    BYTE PTR [rdx],ch
   14001ead9:	fild   DWORD PTR [rax]
   14001eadb:	add    al,bh
   14001eadd:	(bad)  
   14001eade:	add    DWORD PTR [rax],eax
   14001eae0:	and    DWORD PTR [rax],edx
   14001eae2:	add    al,0x0
   14001eae4:	adc    ah,dh
   14001eae6:	add    BYTE PTR cs:[rax],cl
   14001eae9:	in     al,0x37
   14001eaeb:	add    BYTE PTR [rax+0x2a0000da],al
   14001eaf1:	fild   DWORD PTR [rax]
   14001eaf3:	add    al,bh
   14001eaf5:	(bad)  
   14001eaf6:	add    DWORD PTR [rax],eax
   14001eaf8:	add    DWORD PTR [rax],edx
   14001eafa:	or     BYTE PTR [rax],al
   14001eafc:	adc    BYTE PTR [rcx],al
   14001eafe:	(bad)  
   14001eaff:	add    BYTE PTR [rcx],cl
   14001eb01:	rol    BYTE PTR [rdi],1
   14001eb03:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14361ef7a
   14001eb0a:	add    dh,BYTE PTR [rax]
   14001eb0c:	add    DWORD PTR [rsi],eax
   14001eb0e:	add    al,BYTE PTR [rax]
   14001eb10:	(bad)  
   14001eb11:	xor    al,BYTE PTR [rdx]
   14001eb13:	xor    BYTE PTR [rcx],ah
   14001eb15:	add    BYTE PTR [rax],al
   14001eb17:	add    BYTE PTR [rax-0x20],al
   14001eb1a:	add    BYTE PTR [rax],al
   14001eb1c:	(bad)  
   14001eb1d:	loope  0x14001eb1f
   14001eb1f:	add    BYTE PTR [rax-0x15],ah
   14001eb22:	add    DWORD PTR [rax],eax
   14001eb24:	and    DWORD PTR [rax],eax
   14001eb26:	add    BYTE PTR [rax],al
   14001eb28:	(bad)  
   14001eb29:	loope  0x14001eb2b
   14001eb2b:	add    BYTE PTR [rcx+riz*8],ah
   14001eb2e:	add    BYTE PTR [rax],al
   14001eb30:	rex.W jmp 0x14001eb34
   14001eb33:	add    BYTE PTR [rcx],ah
   14001eb35:	or     BYTE PTR [rdx],al
   14001eb37:	add    BYTE PTR [rax],cl
   14001eb39:	hlt    
   14001eb3a:	sbb    DWORD PTR [rax],eax
   14001eb3c:	(bad)  
   14001eb3d:	loope  0x14001eb3f
   14001eb3f:	add    BYTE PTR [rcx+riz*8],ah
   14001eb42:	add    BYTE PTR [rax],al
   14001eb44:	rex.W jmp 0x14001eb48
   14001eb47:	add    BYTE PTR [rcx],ah
   14001eb49:	sbb    eax,DWORD PTR [rax+rax*1]
   14001eb4c:	sbb    esp,esp
   14001eb4e:	sbb    al,BYTE PTR [rax]
   14001eb50:	or     ah,al
   14001eb52:	sbb    eax,DWORD PTR [rax]
   14001eb54:	rex loopne 0x14001eb57
   14001eb57:	add    BYTE PTR [rdi],al
   14001eb59:	loope  0x14001eb5b
   14001eb5b:	add    BYTE PTR [rax-0x15],ah
   14001eb5e:	add    DWORD PTR [rax],eax
   14001eb60:	add    DWORD PTR [rsi],ecx
   14001eb62:	(bad)  
   14001eb63:	add    BYTE PTR [rsi],cl
   14001eb65:	add    DWORD PTR [rax+rax*1],ebx
   14001eb68:	(bad)  
   14001eb69:	rol    BYTE PTR [rip+0x3600470],1        # 0x14361efdf
   14001eb6f:	push   rax
   14001eb70:	add    dh,BYTE PTR [rax]
   14001eb72:	add    BYTE PTR [rax],al
   14001eb74:	and    DWORD PTR [rax],eax
   14001eb76:	add    BYTE PTR [rax],al
   14001eb78:	shl    ah,1
   14001eb7a:	add    BYTE PTR [rax],al
   14001eb7c:	mov    ebp,esp
   14001eb7e:	add    BYTE PTR [rax],al
   14001eb80:	(bad)  
   14001eb81:	jmp    0x14001eb84
   14001eb83:	add    BYTE PTR [rcx],ah
   14001eb85:	add    BYTE PTR [rax],al
   14001eb87:	add    BYTE PTR [rcx-0x48ffff1b],cl
   14001eb8d:	in     eax,0x0
   14001eb8f:	add    BYTE PTR [rbx+rbp*8+0x10210001],ch
   14001eb96:	add    al,0x0
   14001eb98:	adc    ah,dh
   14001eb9a:	(bad)  
   14001eb9b:	add    BYTE PTR [rax],cl
   14001eb9d:	in     al,0x30
   14001eb9f:	add    BYTE PTR [rcx-0x48ffff1b],cl
   14001eba5:	in     eax,0x0
   14001eba7:	add    BYTE PTR [rbx+rbp*8+0x21210001],ch
   14001ebae:	add    al,0x0
   14001ebb0:	and    esp,edx
   14001ebb2:	xor    DWORD PTR [rax],eax
   14001ebb4:	or     ah,al
   14001ebb6:	xor    al,BYTE PTR [rax]
   14001ebb8:	shl    ah,1
   14001ebba:	add    BYTE PTR [rax],al
   14001ebbc:	mov    ebp,esp
   14001ebbe:	add    BYTE PTR [rax],al
   14001ebc0:	(bad)  
   14001ebc1:	jmp    0x14001ebc4
   14001ebc3:	add    BYTE PTR [rcx],al
   14001ebc5:	or     al,0x6
   14001ebc7:	add    BYTE PTR [rcx+rax*1],cl
   14001ebca:	xor    eax,DWORD PTR [rax]
   14001ebcc:	add    eax,0x3600470
   14001ebd1:	push   rax
   14001ebd2:	add    dh,BYTE PTR [rax]
   14001ebd4:	and    DWORD PTR [rax],eax
   14001ebd6:	add    BYTE PTR [rax],al
   14001ebd8:	adc    ah,ch
   14001ebda:	add    BYTE PTR [rax],al
   14001ebdc:	(bad)  
   14001ebdd:	in     al,dx
   14001ebde:	add    BYTE PTR [rax],al
   14001ebe0:	add    al,0xec
   14001ebe2:	add    DWORD PTR [rax],eax
   14001ebe4:	and    DWORD PTR [rdi],edx
   14001ebe6:	or     BYTE PTR [rax],al
   14001ebe8:	(bad)  
   14001ebe9:	je     0x14001ebf9
   14001ebeb:	add    BYTE PTR [rbx],dl
   14001ebed:	str    WORD PTR fs:[rax]
   14001ebf1:	push   rsp
   14001ebf2:	adc    eax,0x14340400
   14001ebf7:	add    BYTE PTR [rax],dl
   14001ebf9:	in     al,dx
   14001ebfa:	add    BYTE PTR [rax],al
   14001ebfc:	(bad)  
   14001ebfd:	in     al,dx
   14001ebfe:	add    BYTE PTR [rax],al
   14001ec00:	add    al,0xec
   14001ec02:	add    DWORD PTR [rax],eax
   14001ec04:	add    DWORD PTR [rdx+rax*1],ecx
   14001ec07:	add    BYTE PTR [rdx+rsi*8],cl
   14001ec0a:	add    eax,0x81301c0
   14001ec0f:	add    BYTE PTR [rbx],dl
   14001ec11:	push   rsp
   14001ec12:	adc    eax,0x14341300
   14001ec17:	add    BYTE PTR [rbx],dl
   14001ec19:	ror    BYTE PTR [rdi],cl
   14001ec1b:	ror    BYTE PTR [rip+0x1600c70],0x1a        # 0x14161f892
   14001ec22:	or     al,BYTE PTR [rax]
   14001ec24:	sbb    dh,BYTE PTR [rcx+rcx*1+0x0]
   14001ec28:	sbb    ah,BYTE PTR [rax+rcx*1+0x0]
   14001ec2c:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   14001ec30:	sbb    dh,BYTE PTR [rsi+rax*1]
   14001ec33:	add    BYTE PTR [rdx],bl
   14001ec35:	xor    dl,BYTE PTR [rsi]
   14001ec37:	shl    BYTE PTR [rcx],0x0
   14001ec3a:	add    BYTE PTR [rax],al
   14001ec3c:	movabs al,ds:0x940000f1c40000f1
   14001ec45:	in     al,dx
   14001ec46:	add    DWORD PTR [rax],eax
   14001ec48:	and    DWORD PTR [rax],eax
   14001ec4a:	add    BYTE PTR [rax],al
   14001ec4c:	(bad)  
   14001ec4d:	icebp  
   14001ec4e:	add    BYTE PTR [rax],al
   14001ec50:	out    0xf1,al
   14001ec52:	add    BYTE PTR [rax],al
   14001ec54:	ins    BYTE PTR es:[rdi],dx
   14001ec55:	in     al,dx
   14001ec56:	add    DWORD PTR [rax],eax
   14001ec58:	and    DWORD PTR [rdx+rax*1],eax
   14001ec5b:	add    BYTE PTR [rsp+rsi*8],al
   14001ec5e:	sbb    BYTE PTR [rax],al
   14001ec60:	(bad)  
   14001ec61:	icebp  
   14001ec62:	add    BYTE PTR [rax],al
   14001ec64:	out    0xf1,al
   14001ec66:	add    BYTE PTR [rax],al
   14001ec68:	ins    BYTE PTR es:[rdi],dx
   14001ec69:	in     al,dx
   14001ec6a:	add    DWORD PTR [rax],eax
   14001ec6c:	and    DWORD PTR [rax],ebx
   14001ec6e:	or     al,0x0
   14001ec70:	sbb    ah,ah
   14001ec72:	sbb    DWORD PTR [rax],eax
   14001ec74:	adc    al,0xd4
   14001ec76:	sbb    al,BYTE PTR [rax]
   14001ec78:	adc    ah,al
   14001ec7a:	sbb    eax,DWORD PTR [rax]
   14001ec7c:	or     al,0x74
   14001ec7e:	sbb    al,0x0
   14001ec80:	or     BYTE PTR [rbp+rbx*1+0x0],dl
   14001ec84:	add    al,0x34
   14001ec86:	and    eax,DWORD PTR [rax]
   14001ec88:	movabs al,ds:0x940000f1c40000f1
   14001ec91:	in     al,dx
   14001ec92:	add    DWORD PTR [rax],eax
   14001ec94:	add    DWORD PTR [rbx],ecx
   14001ec96:	add    eax,DWORD PTR [rax]
   14001ec98:	or     eax,DWORD PTR [rcx]
   14001ec9a:	(bad)  
   14001ec9b:	add    BYTE PTR [rax+riz*2],al
   14001ec9e:	add    BYTE PTR [rax],al
   14001eca0:	and    DWORD PTR [rax],eax
   14001eca2:	add    BYTE PTR [rax],al
   14001eca4:	loopne 0x14001ec9e
   14001eca6:	add    BYTE PTR [rax],al
   14001eca8:	add    ecx,edi
   14001ecaa:	add    BYTE PTR [rax],al
   14001ecac:	enter  0x1ec,0x0
   14001ecb0:	and    DWORD PTR [rdx],ecx
   14001ecb2:	add    al,0x0
   14001ecb4:	or     dh,BYTE PTR [rsi+rax*1+0x0]
   14001ecb8:	add    eax,0xe0000c54
   14001ecbd:	clc    
   14001ecbe:	add    BYTE PTR [rax],al
   14001ecc0:	add    ecx,edi
   14001ecc2:	add    BYTE PTR [rax],al
   14001ecc4:	enter  0x1ec,0x0
   14001ecc8:	add    DWORD PTR [rdi],eax
   14001ecca:	add    eax,DWORD PTR [rax]
   14001eccc:	(bad)  
   14001eccd:	(bad)  
   14001eccf:	(bad)  
   14001ecd0:	add    dh,BYTE PTR [rax]
   14001ecd2:	add    BYTE PTR [rax],al
   14001ecd4:	and    DWORD PTR [rax],eax
   14001ecd6:	add    BYTE PTR [rax],al
   14001ecd8:	rex cld 
   14001ecda:	add    BYTE PTR [rax],al
   14001ecdc:	pop    rbp
   14001ecdd:	cld    
   14001ecde:	add    BYTE PTR [rax],al
   14001ece0:	add    al,0xed
   14001ece2:	add    DWORD PTR [rax],eax
   14001ece4:	and    DWORD PTR [rax+rcx*1],ebx
   14001ece7:	add    BYTE PTR [rsp+rax*8],bl
   14001ecea:	or     al,BYTE PTR [rax]
   14001ecec:	adc    esi,DWORD PTR [rbx+rcx*1+0x0]
   14001ecf0:	pcmpgtb mm1,QWORD PTR [rax+rax*1]
   14001ecf4:	add    al,0x34
   14001ecf6:	or     eax,0xfc4000
   14001ecfb:	add    BYTE PTR [rbp-0x4],bl
   14001ecfe:	add    BYTE PTR [rax],al
   14001ed00:	add    al,0xed
   14001ed02:	add    DWORD PTR [rax],eax
   14001ed04:	add    DWORD PTR [rax],ecx
   14001ed06:	add    al,BYTE PTR [rax]
   14001ed08:	or     dl,dl
   14001ed0a:	add    al,0x50
   14001ed0c:	add    DWORD PTR [rax+0x4],ecx
   14001ed0f:	add    BYTE PTR [rax+0x74],cl
   14001ed12:	or     al,BYTE PTR [rax]
   14001ed14:	(bad)  
   14001ed15:	jb     0x14001ed19
   14001ed17:	xor    BYTE PTR [rcx],al
   14001ed19:	sbb    BYTE PTR [rdx],cl
   14001ed1b:	add    BYTE PTR [rax],bl
   14001ed1d:	adc    DWORD PTR fs:[rax],eax
   14001ed20:	sbb    BYTE PTR [rax+rdx*1+0x0],dl
   14001ed24:	sbb    BYTE PTR [rdi+rcx*1],dh
   14001ed27:	add    BYTE PTR [rax],bl
   14001ed29:	xchg   edx,eax
   14001ed2a:	adc    al,0xd0
   14001ed2c:	adc    al,al
   14001ed2e:	adc    BYTE PTR [rax+0x1],dh
   14001ed31:	or     al,0x6
   14001ed33:	add    BYTE PTR [rsp+rsi*1],cl
   14001ed36:	adc    eax,DWORD PTR [rax]
   14001ed38:	or     al,0xd2
   14001ed3a:	or     BYTE PTR [rax+0x7],dh
   14001ed3d:	(bad)  
   14001ed3e:	(bad)  
   14001ed3f:	push   rax
   14001ed40:	add    DWORD PTR [rsi],ecx
   14001ed42:	add    eax,0x36010e00
   14001ed47:	add    BYTE PTR [rdi],al
   14001ed49:	jo     0x14001ed51
   14001ed4b:	(bad)  
   14001ed4c:	add    eax,0x1000030
   14001ed51:	add    al,0x1
   14001ed53:	add    BYTE PTR [rdx+rax*2],al
   14001ed56:	add    BYTE PTR [rax],al
   14001ed58:	add    DWORD PTR [rax+rcx*1],edx
   14001ed5b:	add    BYTE PTR [rsp+riz*2],dl
   14001ed5e:	or     BYTE PTR [rax],al
   14001ed60:	adc    al,0x54
   14001ed62:	(bad)  
   14001ed63:	add    BYTE PTR [rsp+rsi*1],dl
   14001ed66:	(bad)  
   14001ed67:	add    BYTE PTR [rdx+rsi*1],dl
   14001ed6a:	adc    BYTE PTR [rax+0x1],dh
   14001ed6d:	clts   
   14001ed6f:	add    BYTE PTR [rdi],cl
   14001ed71:	fs (bad) 
   14001ed73:	add    BYTE PTR [rdi],cl
   14001ed75:	xor    al,0x6
   14001ed77:	add    BYTE PTR [rdi],cl
   14001ed79:	xor    cl,BYTE PTR [rbx]
   14001ed7b:	jo     0x14001ed7e
   14001ed7d:	(bad)  
   14001ed7e:	add    al,BYTE PTR [rax]
   14001ed80:	(bad)  
   14001ed81:	xor    al,BYTE PTR [rdx]
   14001ed83:	push   rax
   14001ed84:	adc    DWORD PTR [rsi],eax
   14001ed86:	add    al,BYTE PTR [rax]
   14001ed88:	(bad)  
   14001ed89:	xor    al,BYTE PTR [rdx]
   14001ed8b:	xor    dh,ch
   14001ed8d:	sub    eax,0x10001
   14001ed92:	add    BYTE PTR [rax],al
   14001ed94:	rex.RXB sub DWORD PTR [r9],r8d
   14001ed97:	add    BYTE PTR [rbp+0x40000129],ch
   14001ed9d:	xor    al,BYTE PTR [rcx]
   14001ed9f:	add    BYTE PTR [rax],al
   14001eda1:	add    BYTE PTR [rax],al
   14001eda3:	add    BYTE PTR [rcx],al
   14001eda5:	add    al,0x1
   14001eda7:	add    BYTE PTR [rdx+riz*2],al
   14001edaa:	add    BYTE PTR [rax],al
   14001edac:	or     DWORD PTR [rip+0x640d0005],ecx        # 0x1a40eedb7
   14001edb2:	(bad)  
   14001edb3:	add    BYTE PTR [rip+0x6001401],cl        # 0x1460201ba
   14001edb9:	jo     0x14001edbb
   14001edbb:	add    dh,ch
   14001edbd:	sub    eax,0x20001
   14001edc2:	add    BYTE PTR [rax],al
   14001edc4:	push   rdx
   14001edc5:	sub    al,BYTE PTR [rcx]
   14001edc7:	add    BYTE PTR [rsi+0x2a],bl
   14001edca:	add    DWORD PTR [rax],eax
   14001edcc:	add    DWORD PTR [rax],eax
   14001edce:	add    BYTE PTR [rax],al
   14001edd0:	xor    BYTE PTR [rcx+rax*1],ch
   14001edd3:	add    BYTE PTR [rsi+0x2a],bl
   14001edd6:	add    DWORD PTR [rax],eax
   14001edd8:	add    DWORD PTR [rcx+rax*1],ebp
   14001eddb:	add    BYTE PTR [rcx+0x32],bl
   14001edde:	add    DWORD PTR [rax],eax
   14001ede0:	add    DWORD PTR [rcx+rax*1],ebp
   14001ede3:	add    BYTE PTR [rcx],cl
   14001ede5:	(bad)  
   14001ede6:	(bad)  
   14001ede7:	add    BYTE PTR [rdi],dl
   14001ede9:	xor    al,0xd
   14001edeb:	add    BYTE PTR [rdi],dl
   14001eded:	jb     0x14001ee02
   14001edef:	rcl    BYTE PTR [rcx],0x70
   14001edf2:	adc    BYTE PTR [rax-0x12],ah
   14001edf5:	sub    eax,0x10001
   14001edfa:	add    BYTE PTR [rax],al
   14001edfc:	addr32 sub eax,0x2d810001
   14001ee02:	add    DWORD PTR [rax],eax
   14001ee04:	jne    0x14001ee38
   14001ee06:	add    DWORD PTR [rax],eax
   14001ee08:	sub    DWORD PTR [rip+0x18110001],0x62180005        # 0x15812ee13
   14001ee12:	adc    al,0xc0
   14001ee14:	adc    dh,BYTE PTR [rax+0x11]
   14001ee17:	(bad)  
   14001ee18:	adc    BYTE PTR [rax],dh
   14001ee1a:	add    BYTE PTR [rax],al
   14001ee1c:	out    dx,al
   14001ee1d:	sub    eax,0x10001
   14001ee22:	add    BYTE PTR [rax],al
   14001ee24:	ret    
   14001ee25:	sub    eax,0x2de40001
   14001ee2a:	add    DWORD PTR [rax],eax
   14001ee2c:	mov    ah,0x32
   14001ee2e:	add    DWORD PTR [rax],eax
   14001ee30:	add    BYTE PTR [rax],al
   14001ee32:	add    BYTE PTR [rax],al
   14001ee34:	or     DWORD PTR [rcx+rax*1],eax
   14001ee37:	add    BYTE PTR [rdx+rax*2],al
   14001ee3a:	add    BYTE PTR [rax],al
   14001ee3c:	out    dx,al
   14001ee3d:	sub    eax,0x10001
   14001ee42:	add    BYTE PTR [rax],al
   14001ee44:	ja     0x14001ee75
   14001ee46:	add    DWORD PTR [rax],eax
   14001ee48:	stos   BYTE PTR es:[rdi],al
   14001ee49:	(bad)  
   14001ee4a:	add    DWORD PTR [rax],eax
   14001ee4c:	loopne 0x14001ee80
   14001ee4e:	add    DWORD PTR [rax],eax
   14001ee50:	stos   BYTE PTR es:[rdi],al
   14001ee51:	(bad)  
   14001ee52:	add    DWORD PTR [rax],eax
   14001ee54:	add    DWORD PTR [rdx],ecx
   14001ee56:	add    al,0x0
   14001ee58:	or     dh,BYTE PTR [rax+rcx*1]
   14001ee5b:	add    BYTE PTR [rdx],cl
   14001ee5d:	xor    al,BYTE PTR [rsi]
   14001ee5f:	jo     0x14001ee62
   14001ee61:	sbb    DWORD PTR [rdx],ecx
   14001ee63:	add    BYTE PTR [rcx],bl
   14001ee65:	je     0x14001ee74
   14001ee67:	add    BYTE PTR [rcx],bl
   14001ee69:	fs or  al,0x0
   14001ee6c:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   14001ee70:	sbb    DWORD PTR [rdx+rcx*1],esi
   14001ee73:	add    BYTE PTR [rcx],bl
   14001ee75:	jb     0x14001ee8c
   14001ee77:	shl    BYTE PTR [rcx],0x0
   14001ee7a:	add    BYTE PTR [rax],al
   14001ee7c:	and    BYTE PTR [rcx],dh
   14001ee7e:	add    DWORD PTR [rax],eax
   14001ee80:	xchg   ebx,eax
   14001ee81:	xor    DWORD PTR [rcx],eax
   14001ee83:	add    BYTE PTR [rsi+rbp*8+0x5210001],bl
   14001ee8a:	add    al,BYTE PTR [rax]
   14001ee8c:	add    eax,0x20000b54
   14001ee91:	xor    DWORD PTR [rcx],eax
   14001ee93:	add    BYTE PTR [rbx-0x63fffecf],dl
   14001ee99:	out    dx,al
   14001ee9a:	add    DWORD PTR [rax],eax
   14001ee9c:	add    DWORD PTR [rsi+0xa],eax
   14001ee9f:	add    BYTE PTR [rsi-0x3c],al
   14001eea2:	(bad)  
   14001eea3:	add    BYTE PTR [rcx+0x74],al
   14001eea6:	(bad)  
   14001eea7:	add    BYTE PTR [rdx],bh
   14001eea9:	fs or  al,0x0
   14001eeac:	xor    eax,0x6000a34
   14001eeb1:	jb     0x14001eeb5
   14001eeb3:	ror    BYTE PTR [rax-0xb],1
   14001eeb6:	add    DWORD PTR [rax],eax
	...
   14001eec0:	fsubr  DWORD PTR [rdi+0x2]
   14001eec3:	add    BYTE PTR [rax],cl
   14001eec5:	rex.RX add DWORD PTR [rax],r8d
   14001eec8:	enter  0x1f4,0x0
	...
   14001eed4:	rex.R jb 0x14001eed9
   14001eed7:	add    BYTE PTR [rax-0x77fffebb],cl
   14001eedd:	lock add DWORD PTR [rax],eax
	...
   14001eee8:	pop    rsi
   14001eee9:	mov    DWORD PTR [rdx],eax
   14001eeeb:	add    BYTE PTR [rax+0x41],cl
   14001eeee:	add    DWORD PTR [rax],eax
   14001eef0:	movabs al,ds:0x1ef
   14001eef9:	add    BYTE PTR [rax],al
   14001eefb:	add    BYTE PTR [rsi+0x60000289],dl
   14001ef01:	rex add DWORD PTR [rax],eax
   14001ef04:	rex out dx,eax
   14001ef06:	add    DWORD PTR [rax],eax
	...
   14001ef10:	(bad)  
   14001ef11:	mov    eax,DWORD PTR [rdx]
   14001ef13:	add    BYTE PTR [rax],al
   14001ef15:	rex add DWORD PTR [rax],eax
   14001ef18:	clc    
   14001ef19:	add    eax,0x2
   14001ef1e:	add    BYTE PTR [rax],al
   14001ef20:	add    BYTE PTR [rax],al
   14001ef22:	add    BYTE PTR [rax],al
   14001ef24:	call   0xf801f1b4
   14001ef29:	push   rsi
   14001ef2a:	add    DWORD PTR [rax],eax
	...
   14001ef40:	sub    BYTE PTR [rdx+rax*1+0x0],cl
   14001ef47:	add    BYTE PTR [rsi],al
   14001ef49:	mov    WORD PTR [rdx],es
   14001ef4b:	add    BYTE PTR [rax],al
   14001ef4d:	add    BYTE PTR [rax],al
   14001ef4f:	add    BYTE PTR [rsp+rcx*4],bl
   14001ef52:	add    al,BYTE PTR [rax]
   14001ef54:	add    BYTE PTR [rax],al
   14001ef56:	add    BYTE PTR [rax],al
   14001ef58:	stos   BYTE PTR es:[rdi],al
   14001ef59:	mov    eax,DWORD PTR [rdx]
   14001ef5b:	add    BYTE PTR [rax],al
   14001ef5d:	add    BYTE PTR [rax],al
   14001ef5f:	add    BYTE PTR [rbx+rcx*4+0x2],dl
   14001ef66:	add    BYTE PTR [rax],al
   14001ef68:	jle    0x14001eef5
   14001ef6a:	add    al,BYTE PTR [rax]
   14001ef6c:	add    BYTE PTR [rax],al
   14001ef6e:	add    BYTE PTR [rax],al
   14001ef70:	outs   dx,BYTE PTR ds:[rsi]
   14001ef71:	mov    eax,DWORD PTR [rdx]
   14001ef73:	add    BYTE PTR [rax],al
   14001ef75:	add    BYTE PTR [rax],al
   14001ef77:	add    BYTE PTR [rbx+rcx*4+0x2],dl
   14001ef7b:	add    BYTE PTR [rax],al
   14001ef7d:	add    BYTE PTR [rax],al
   14001ef7f:	add    BYTE PTR [rsi],dh
   14001ef81:	mov    eax,DWORD PTR [rdx]
   14001ef83:	add    BYTE PTR [rax],al
   14001ef85:	add    BYTE PTR [rax],al
   14001ef87:	add    BYTE PTR [rbx+rcx*4],ah
   14001ef8a:	add    al,BYTE PTR [rax]
   14001ef8c:	add    BYTE PTR [rax],al
   14001ef8e:	add    BYTE PTR [rax],al
   14001ef90:	sbb    al,0x8b
   14001ef92:	add    al,BYTE PTR [rax]
	...
   14001efa0:	out    0x8a,al
   14001efa2:	add    al,BYTE PTR [rax]
   14001efa4:	add    BYTE PTR [rax],al
   14001efa6:	add    BYTE PTR [rax],al
   14001efa8:	ror    BYTE PTR [rdx+0x2],cl
   14001efae:	add    BYTE PTR [rax],al
   14001efb0:	ror    BYTE PTR [rdx+0x2],0x0
   14001efb7:	add    BYTE PTR [rsi+0x28a],dh
   14001efbd:	add    BYTE PTR [rax],al
   14001efbf:	add    BYTE PTR [rdx+0x28a],ch
   14001efc5:	add    BYTE PTR [rax],al
   14001efc7:	add    BYTE PTR [rsi+0x28a],dl
   14001efcd:	add    BYTE PTR [rax],al
   14001efcf:	add    BYTE PTR [rax+0x28a],al
   14001efd5:	add    BYTE PTR [rax],al
   14001efd7:	add    BYTE PTR [rdx-0x76],dh
   14001efda:	add    al,BYTE PTR [rax]
   14001efdc:	add    BYTE PTR [rax],al
   14001efde:	add    BYTE PTR [rax],al
   14001efe0:	data16 mov al,BYTE PTR [rdx]
   14001efe3:	add    BYTE PTR [rax],al
   14001efe5:	add    BYTE PTR [rax],al
   14001efe7:	add    BYTE PTR [rdx+rcx*4+0x2],bl
   14001efeb:	add    BYTE PTR [rax],al
   14001efed:	add    BYTE PTR [rax],al
   14001efef:	add    BYTE PTR [rdx+rcx*4+0x2],dl
   14001eff3:	add    BYTE PTR [rax],al
   14001eff5:	add    BYTE PTR [rax],al
   14001eff7:	add    BYTE PTR [rdx-0x76],cl
   14001effa:	add    al,BYTE PTR [rax]
   14001effc:	add    BYTE PTR [rax],al
   14001effe:	add    BYTE PTR [rax],al
   14001f000:	cmp    al,0x8a
   14001f002:	add    al,BYTE PTR [rax]
   14001f004:	add    BYTE PTR [rax],al
   14001f006:	add    BYTE PTR [rax],al
   14001f008:	xor    al,0x8a
   14001f00a:	add    al,BYTE PTR [rax]
   14001f00c:	add    BYTE PTR [rax],al
   14001f00e:	add    BYTE PTR [rax],al
   14001f010:	mov    al,BYTE PTR es:[rdx]
   14001f013:	add    BYTE PTR [rax],al
   14001f015:	add    BYTE PTR [rax],al
   14001f017:	add    BYTE PTR [rsi],dl
   14001f019:	mov    al,BYTE PTR [rdx]
   14001f01b:	add    BYTE PTR [rax],al
   14001f01d:	add    BYTE PTR [rax],al
   14001f01f:	add    BYTE PTR [rax],cl
   14001f021:	mov    al,BYTE PTR [rdx]
   14001f023:	add    BYTE PTR [rax],al
   14001f025:	add    BYTE PTR [rax],al
   14001f027:	add    dh,dh
   14001f029:	mov    DWORD PTR [rdx],eax
   14001f02b:	add    BYTE PTR [rax],al
   14001f02d:	add    BYTE PTR [rax],al
   14001f02f:	add    ah,ch
   14001f031:	mov    DWORD PTR [rdx],eax
   14001f033:	add    BYTE PTR [rax],al
   14001f035:	add    BYTE PTR [rax],al
   14001f037:	add    ah,ah
   14001f039:	mov    DWORD PTR [rdx],eax
   14001f03b:	add    BYTE PTR [rax],al
   14001f03d:	add    BYTE PTR [rax],al
   14001f03f:	add    dl,dl
   14001f041:	mov    DWORD PTR [rdx],eax
   14001f043:	add    BYTE PTR [rax],al
   14001f045:	add    BYTE PTR [rax],al
   14001f047:	add    ah,al
   14001f049:	mov    DWORD PTR [rdx],eax
   14001f04b:	add    BYTE PTR [rax],al
   14001f04d:	add    BYTE PTR [rax],al
   14001f04f:	add    BYTE PTR [rdx+0x289],bh
   14001f055:	add    BYTE PTR [rax],al
   14001f057:	add    BYTE PTR [rdx+0x289],ah
   14001f05d:	add    BYTE PTR [rax],al
   14001f05f:	add    BYTE PTR [rcx+rcx*4+0x2],cl
   14001f066:	add    BYTE PTR [rax],al
   14001f068:	jl     0x14001eff3
   14001f06a:	add    al,BYTE PTR [rax]
   14001f06c:	add    BYTE PTR [rax],al
   14001f06e:	add    BYTE PTR [rax],al
   14001f070:	push   0xffffffffffffff89
   14001f072:	add    al,BYTE PTR [rax]
   14001f074:	add    BYTE PTR [rax],al
   14001f076:	add    BYTE PTR [rax],al
   14001f078:	hlt    
   14001f079:	mov    eax,DWORD PTR [rdx]
	...
   14001f087:	add    dl,bh
   14001f089:	mov    BYTE PTR [rdx],al
   14001f08b:	add    BYTE PTR [rax],al
   14001f08d:	add    BYTE PTR [rax],al
   14001f08f:	add    dl,dl
   14001f091:	mov    BYTE PTR [rdx],al
   14001f093:	add    BYTE PTR [rax],al
   14001f095:	add    BYTE PTR [rax],al
   14001f097:	add    BYTE PTR [rdx+0x288],ch
   14001f09d:	add    BYTE PTR [rax],al
   14001f09f:	add    BYTE PTR [rax+rcx*4+0x2],cl
   14001f0a6:	add    BYTE PTR [rax],al
   14001f0a8:	push   0x288
   14001f0ad:	add    BYTE PTR [rax],al
   14001f0af:	add    BYTE PTR [rdx-0x78],dl
   14001f0b2:	add    al,BYTE PTR [rax]
   14001f0b4:	add    BYTE PTR [rax],al
   14001f0b6:	add    BYTE PTR [rax],al
   14001f0b8:	adc    cl,BYTE PTR [rax+0x2]
   14001f0be:	add    BYTE PTR [rax],al
   14001f0c0:	in     al,0x87
   14001f0c2:	add    al,BYTE PTR [rax]
   14001f0c4:	add    BYTE PTR [rax],al
   14001f0c6:	add    BYTE PTR [rax],al
   14001f0c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f0c9:	xchg   DWORD PTR [rdx],eax
   14001f0cb:	add    BYTE PTR [rax],al
   14001f0cd:	add    BYTE PTR [rax],al
   14001f0cf:	add    BYTE PTR [rdx-0x79],bh
   14001f0d2:	add    al,BYTE PTR [rax]
   14001f0d4:	add    BYTE PTR [rax],al
   14001f0d6:	add    BYTE PTR [rax],al
   14001f0d8:	pop    rsp
   14001f0d9:	xchg   DWORD PTR [rdx],eax
   14001f0db:	add    BYTE PTR [rax],al
   14001f0dd:	add    BYTE PTR [rax],al
   14001f0df:	add    BYTE PTR [rdx],ch
   14001f0e1:	xchg   DWORD PTR [rdx],eax
   14001f0e3:	add    BYTE PTR [rax],al
   14001f0e5:	add    BYTE PTR [rax],al
   14001f0e7:	add    BYTE PTR [rax],dl
   14001f0e9:	xchg   DWORD PTR [rdx],eax
   14001f0eb:	add    BYTE PTR [rax],al
   14001f0ed:	add    BYTE PTR [rax],al
   14001f0ef:	add    dh,ah
   14001f0f1:	xchg   BYTE PTR [rdx],al
   14001f0f3:	add    BYTE PTR [rax],al
   14001f0f5:	add    BYTE PTR [rax],al
   14001f0f7:	add    BYTE PTR [rdx+0x286],bh
   14001f0fd:	add    BYTE PTR [rax],al
   14001f0ff:	add    BYTE PTR [rax+0x286],ah
   14001f105:	add    BYTE PTR [rax],al
   14001f107:	add    BYTE PTR [rax-0x7a],dh
   14001f10a:	add    al,BYTE PTR [rax]
   14001f10c:	add    BYTE PTR [rax],al
   14001f10e:	add    BYTE PTR [rax],al
   14001f110:	cmp    al,BYTE PTR [rsi+0x2]
   14001f116:	add    BYTE PTR [rax],al
   14001f118:	or     al,BYTE PTR [rsi+0x2]
   14001f11e:	add    BYTE PTR [rax],al
   14001f120:	fadd   QWORD PTR [rbp+0x2]
   14001f126:	add    BYTE PTR [rax],al
   14001f128:	mov    esi,0x285
   14001f12d:	add    BYTE PTR [rax],al
   14001f12f:	add    BYTE PTR [rsi+0x285],bl
   14001f135:	add    BYTE PTR [rax],al
   14001f137:	add    BYTE PTR [rbp+rax*4+0x2],ch
   14001f13b:	add    BYTE PTR [rax],al
   14001f13d:	add    BYTE PTR [rax],al
   14001f13f:	add    BYTE PTR [rax],dh
   14001f141:	test   DWORD PTR [rdx],eax
   14001f143:	add    BYTE PTR [rax],al
   14001f145:	add    BYTE PTR [rax],al
   14001f147:	add    ah,dh
   14001f149:	test   BYTE PTR [rdx],al
   14001f14b:	add    BYTE PTR [rax],al
   14001f14d:	add    BYTE PTR [rax],al
   14001f14f:	add    BYTE PTR [rsp+rax*4+0x2],dh
   14001f156:	add    BYTE PTR [rax],al
   14001f158:	js     0x14001f0de
   14001f15a:	add    al,BYTE PTR [rax]
   14001f15c:	add    BYTE PTR [rax],al
   14001f15e:	add    BYTE PTR [rax],al
   14001f160:	rex.WX test BYTE PTR [rdx],al
   14001f163:	add    BYTE PTR [rax],al
   14001f165:	add    BYTE PTR [rax],al
   14001f167:	add    BYTE PTR [rax],dl
   14001f169:	test   BYTE PTR [rdx],al
   14001f16b:	add    BYTE PTR [rax],al
   14001f16d:	add    BYTE PTR [rax],al
   14001f16f:	add    ah,ch
   14001f171:	add    DWORD PTR [rdx],0x0
   14001f174:	add    BYTE PTR [rax],al
   14001f176:	add    BYTE PTR [rax],al
   14001f178:	mov    dh,0x83
   14001f17a:	add    al,BYTE PTR [rax]
   14001f17c:	add    BYTE PTR [rax],al
   14001f17e:	add    BYTE PTR [rax],al
   14001f180:	jo     0x14001f105
   14001f182:	add    al,BYTE PTR [rax]
   14001f184:	add    BYTE PTR [rax],al
   14001f186:	add    BYTE PTR [rax],al
   14001f188:	push   rdx
   14001f189:	add    DWORD PTR [rdx],0x0
   14001f18c:	add    BYTE PTR [rax],al
   14001f18e:	add    BYTE PTR [rax],al
   14001f190:	xor    al,0x83
   14001f192:	add    al,BYTE PTR [rax]
   14001f194:	add    BYTE PTR [rax],al
   14001f196:	add    BYTE PTR [rax],al
   14001f198:	adc    BYTE PTR [rbx+0x2],al
   14001f19e:	add    BYTE PTR [rax],al
   14001f1a0:	fiadd  DWORD PTR [rdx+0x2]
   14001f1a6:	add    BYTE PTR [rax],al
   14001f1a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f1a9:	(bad)  
   14001f1aa:	add    al,BYTE PTR [rax]
   14001f1ac:	add    BYTE PTR [rax],al
   14001f1ae:	add    BYTE PTR [rax],al
   14001f1b0:	je     0x14001f134
   14001f1b2:	add    al,BYTE PTR [rax]
   14001f1b4:	add    BYTE PTR [rax],al
   14001f1b6:	add    BYTE PTR [rax],al
   14001f1b8:	rex.W (bad) 
   14001f1ba:	add    al,BYTE PTR [rax]
   14001f1bc:	add    BYTE PTR [rax],al
   14001f1be:	add    BYTE PTR [rax],al
   14001f1c0:	sub    BYTE PTR [rdx+0x2],al
   14001f1c6:	add    BYTE PTR [rax],al
   14001f1c8:	add    BYTE PTR [rdx+0x2],al
   14001f1ce:	add    BYTE PTR [rax],al
   14001f1d0:	rol    BYTE PTR [rcx+0x2],0x0
   14001f1d7:	add    BYTE PTR [rdx-0x7f],bh
   14001f1da:	add    al,BYTE PTR [rax]
   14001f1dc:	add    BYTE PTR [rax],al
   14001f1de:	add    BYTE PTR [rax],al
   14001f1e0:	push   rsi
   14001f1e1:	add    DWORD PTR [rdx],0x0
   14001f1e7:	add    BYTE PTR [rax],al
   14001f1e9:	add    DWORD PTR [rdx],0x0
   14001f1ef:	add    dl,cl
   14001f1f1:	add    BYTE PTR [rdx],0x0
   14001f1f4:	add    BYTE PTR [rax],al
   14001f1f6:	add    BYTE PTR [rax],al
   14001f1f8:	sahf   
   14001f1f9:	add    BYTE PTR [rdx],0x0
   14001f1fc:	add    BYTE PTR [rax],al
   14001f1fe:	add    BYTE PTR [rax],al
   14001f200:	(bad)  
   14001f201:	add    BYTE PTR [rdx],0x0
   14001f204:	add    BYTE PTR [rax],al
   14001f206:	add    BYTE PTR [rax],al
   14001f208:	rex.X add BYTE PTR [rdx],0x0
   14001f20c:	add    BYTE PTR [rax],al
   14001f20e:	add    BYTE PTR [rax],al
   14001f210:	sbb    al,BYTE PTR [rax+0x2]
   14001f216:	add    BYTE PTR [rax],al
   14001f218:	fidivr DWORD PTR [rdi+0x2]
   14001f21b:	add    BYTE PTR [rax],al
   14001f21d:	add    BYTE PTR [rax],al
   14001f21f:	add    BYTE PTR [rsi+0x27f],cl
   14001f225:	add    BYTE PTR [rax],al
   14001f227:	add    BYTE PTR [rax+0x7f],ah
   14001f22a:	add    al,BYTE PTR [rax]
   14001f22c:	add    BYTE PTR [rax],al
   14001f22e:	add    BYTE PTR [rax],al
   14001f230:	rex jg 0x14001f235
   14001f233:	add    BYTE PTR [rax],al
   14001f235:	add    BYTE PTR [rax],al
   14001f237:	add    BYTE PTR [rdx],ch
   14001f239:	jg     0x14001f23d
   14001f23b:	add    BYTE PTR [rax],al
   14001f23d:	add    BYTE PTR [rax],al
   14001f23f:	add    ah,dl
   14001f241:	jle    0x14001f245
   14001f243:	add    BYTE PTR [rax],al
   14001f245:	add    BYTE PTR [rax],al
   14001f247:	add    BYTE PTR [rdx+0x27e],bh
   14001f24d:	add    BYTE PTR [rax],al
   14001f24f:	add    BYTE PTR [rax+0x7e],ah
   14001f252:	add    al,BYTE PTR [rax]
   14001f254:	add    BYTE PTR [rax],al
   14001f256:	add    BYTE PTR [rax],al
   14001f258:	rex jle 0x14001f25d
   14001f25b:	add    BYTE PTR [rax],al
   14001f25d:	add    BYTE PTR [rax],al
   14001f25f:	add    BYTE PTR [rsi],ah
   14001f261:	jle    0x14001f265
   14001f263:	add    BYTE PTR [rax],al
   14001f265:	add    BYTE PTR [rax],al
   14001f267:	add    BYTE PTR [rax],cl
   14001f269:	jle    0x14001f26d
   14001f26b:	add    BYTE PTR [rax],al
   14001f26d:	add    BYTE PTR [rax],al
   14001f26f:	add    al,al
   14001f271:	jge    0x14001f275
   14001f273:	add    BYTE PTR [rax],al
   14001f275:	add    BYTE PTR [rax],al
   14001f277:	add    BYTE PTR [rax+0x27d],bl
   14001f27d:	add    BYTE PTR [rax],al
   14001f27f:	add    BYTE PTR [rdx+0x7d],bh
   14001f282:	add    al,BYTE PTR [rax]
   14001f284:	add    BYTE PTR [rax],al
   14001f286:	add    BYTE PTR [rax],al
   14001f288:	ds jge 0x14001f28d
   14001f28b:	add    BYTE PTR [rax],al
   14001f28d:	add    BYTE PTR [rax],al
   14001f28f:	add    BYTE PTR [rdi*2+0x2],bl
   14001f296:	add    BYTE PTR [rax],al
   14001f298:	cld    
   14001f299:	jl     0x14001f29d
   14001f29b:	add    BYTE PTR [rax],al
   14001f29d:	add    BYTE PTR [rax],al
   14001f29f:	add    dl,bl
   14001f2a1:	jl     0x14001f2a5
   14001f2a3:	add    BYTE PTR [rax],al
   14001f2a5:	add    BYTE PTR [rax],al
   14001f2a7:	add    al,al
   14001f2a9:	jl     0x14001f2ad
   14001f2ab:	add    BYTE PTR [rax],al
   14001f2ad:	add    BYTE PTR [rax],al
   14001f2af:	add    BYTE PTR [rdx+0x27c],al
   14001f2b5:	add    BYTE PTR [rax],al
   14001f2b7:	add    BYTE PTR [rsi+0x7c],dl
   14001f2ba:	add    al,BYTE PTR [rax]
   14001f2bc:	add    BYTE PTR [rax],al
   14001f2be:	add    BYTE PTR [rax],al
   14001f2c0:	cmp    al,0x7c
   14001f2c2:	add    al,BYTE PTR [rax]
   14001f2c4:	add    BYTE PTR [rax],al
   14001f2c6:	add    BYTE PTR [rax],al
   14001f2c8:	(bad)  
   14001f2c9:	jl     0x14001f2cd
   14001f2cb:	add    BYTE PTR [rax],al
   14001f2cd:	add    BYTE PTR [rax],al
   14001f2cf:	add    ah,ah
   14001f2d1:	jnp    0x14001f2d5
   14001f2d3:	add    BYTE PTR [rax],al
   14001f2d5:	add    BYTE PTR [rax],al
   14001f2d7:	add    BYTE PTR [rbx+rdi*2+0x2],bh
   14001f2de:	add    BYTE PTR [rax],al
   14001f2e0:	test   al,0x7b
   14001f2e2:	add    al,BYTE PTR [rax]
   14001f2e4:	add    BYTE PTR [rax],al
   14001f2e6:	add    BYTE PTR [rax],al
   14001f2e8:	je     0x14001f365
   14001f2ea:	add    al,BYTE PTR [rax]
   14001f2ec:	add    BYTE PTR [rax],al
   14001f2ee:	add    BYTE PTR [rax],al
   14001f2f0:	rex.WR jnp 0x14001f2f5
   14001f2f3:	add    BYTE PTR [rax],al
   14001f2f5:	add    BYTE PTR [rax],al
   14001f2f7:	add    BYTE PTR [rax],ch
   14001f2f9:	jnp    0x14001f2fd
   14001f2fb:	add    BYTE PTR [rax],al
   14001f2fd:	add    BYTE PTR [rax],al
   14001f2ff:	add    al,bh
   14001f301:	jp     0x14001f305
   14001f303:	add    BYTE PTR [rax],al
   14001f305:	add    BYTE PTR [rax],al
   14001f307:	add    dl,al
   14001f309:	jp     0x14001f30d
   14001f30b:	add    BYTE PTR [rax],al
   14001f30d:	add    BYTE PTR [rax],al
   14001f30f:	add    BYTE PTR [rdx+0x27a],cl
   14001f315:	add    BYTE PTR [rax],al
   14001f317:	add    BYTE PTR [rax+0x7a],ah
   14001f31a:	add    al,BYTE PTR [rax]
   14001f31c:	add    BYTE PTR [rax],al
   14001f31e:	add    BYTE PTR [rax],al
   14001f320:	xor    al,0x7a
   14001f322:	add    al,BYTE PTR [rax]
   14001f324:	add    BYTE PTR [rax],al
   14001f326:	add    BYTE PTR [rax],al
   14001f328:	(bad)  
   14001f329:	jp     0x14001f32d
   14001f32b:	add    BYTE PTR [rax],al
   14001f32d:	add    BYTE PTR [rax],al
   14001f32f:	add    BYTE PTR [rax],al
   14001f331:	jp     0x14001f335
   14001f333:	add    BYTE PTR [rax],al
   14001f335:	add    BYTE PTR [rax],al
   14001f337:	add    dh,bl
   14001f339:	jns    0x14001f33d
   14001f33b:	add    BYTE PTR [rax],al
   14001f33d:	add    BYTE PTR [rax],al
   14001f33f:	add    BYTE PTR [rsi+0x279],bh
   14001f345:	add    BYTE PTR [rax],al
   14001f347:	add    BYTE PTR [rcx+rdi*2+0x2],dl
   14001f34e:	add    BYTE PTR [rax],al
   14001f350:	(bad)  
   14001f351:	jns    0x14001f355
   14001f353:	add    BYTE PTR [rax],al
   14001f355:	add    BYTE PTR [rax],al
   14001f357:	add    BYTE PTR [rsi],bh
   14001f359:	jns    0x14001f35d
   14001f35b:	add    BYTE PTR [rax],al
   14001f35d:	add    BYTE PTR [rax],al
   14001f35f:	add    BYTE PTR [rsi],dl
   14001f361:	jns    0x14001f365
   14001f363:	add    BYTE PTR [rax],al
   14001f365:	add    BYTE PTR [rax],al
   14001f367:	add    BYTE PTR [rsi+0x278],ch
   14001f36d:	add    BYTE PTR [rax],al
   14001f36f:	add    BYTE PTR [rdx+0x278],bl
   14001f375:	add    BYTE PTR [rax],al
   14001f377:	add    BYTE PTR [rax+rdi*2+0x2],ch
   14001f37b:	add    BYTE PTR [rax],al
   14001f37d:	add    BYTE PTR [rax],al
   14001f37f:	add    BYTE PTR [rsi],dh
   14001f381:	js     0x14001f385
   14001f383:	add    BYTE PTR [rax],al
   14001f385:	add    BYTE PTR [rax],al
   14001f387:	add    BYTE PTR [rdx],al
   14001f389:	js     0x14001f38d
   14001f38b:	add    BYTE PTR [rax],al
   14001f38d:	add    BYTE PTR [rax],al
   14001f38f:	add    dh,dl
   14001f391:	ja     0x14001f395
   14001f393:	add    BYTE PTR [rax],al
   14001f395:	add    BYTE PTR [rax],al
   14001f397:	add    BYTE PTR [rsi+0x277],ah
   14001f39d:	add    BYTE PTR [rax],al
   14001f39f:	add    BYTE PTR [rsi+0x77],dh
   14001f3a2:	add    al,BYTE PTR [rax]
   14001f3a4:	add    BYTE PTR [rax],al
   14001f3a6:	add    BYTE PTR [rax],al
   14001f3a8:	and    BYTE PTR [rdi+0x2],dh
   14001f3ab:	add    BYTE PTR [rax],al
   14001f3ad:	add    BYTE PTR [rax],al
   14001f3af:	add    dl,bh
   14001f3b1:	jbe    0x14001f3b5
   14001f3b3:	add    BYTE PTR [rax],al
   14001f3b5:	add    BYTE PTR [rax],al
   14001f3b7:	add    dh,dl
   14001f3b9:	jbe    0x14001f3bd
   14001f3bb:	add    BYTE PTR [rax],al
   14001f3bd:	add    BYTE PTR [rax],al
   14001f3bf:	add    BYTE PTR [rax+0x276],ch
   14001f3c5:	add    BYTE PTR [rax],al
   14001f3c7:	add    BYTE PTR [rax+0x276],cl
   14001f3cd:	add    BYTE PTR [rax],al
   14001f3cf:	add    BYTE PTR [rax+0x76],ch
   14001f3d2:	add    al,BYTE PTR [rax]
   14001f3d4:	add    BYTE PTR [rax],al
   14001f3d6:	add    BYTE PTR [rax],al
   14001f3d8:	rex.W jbe 0x14001f3dd
   14001f3db:	add    BYTE PTR [rax],al
   14001f3dd:	add    BYTE PTR [rax],al
   14001f3df:	add    BYTE PTR [rsi+rsi*2],ah
   14001f3e2:	add    al,BYTE PTR [rax]
   14001f3e4:	add    BYTE PTR [rax],al
   14001f3e6:	add    BYTE PTR [rax],al
   14001f3e8:	bnd jne 0x14001f3ed
   14001f3eb:	add    BYTE PTR [rax],al
   14001f3ed:	add    BYTE PTR [rax],al
   14001f3ef:	add    BYTE PTR [rsi+0x275],bh
   14001f3f5:	add    BYTE PTR [rax],al
   14001f3f7:	add    BYTE PTR [rsi+0x275],dl
   14001f3fd:	add    BYTE PTR [rax],al
   14001f3ff:	add    BYTE PTR [rax+0x75],ah
   14001f402:	add    al,BYTE PTR [rax]
   14001f404:	add    BYTE PTR [rax],al
   14001f406:	add    BYTE PTR [rax],al
   14001f408:	cmp    dh,BYTE PTR [rbp+0x2]
   14001f40b:	add    BYTE PTR [rax],al
   14001f40d:	add    BYTE PTR [rax],al
   14001f40f:	add    BYTE PTR [rsi*2+0x2],bl
   14001f416:	add    BYTE PTR [rax],al
   14001f418:	hlt    
   14001f419:	je     0x14001f41d
   14001f41b:	add    BYTE PTR [rax],al
   14001f41d:	add    BYTE PTR [rax],al
   14001f41f:	add    al,bl
   14001f421:	je     0x14001f425
   14001f423:	add    BYTE PTR [rax],al
   14001f425:	add    BYTE PTR [rax],al
   14001f427:	add    BYTE PTR [rax+0x274],bh
   14001f42d:	add    BYTE PTR [rax],al
   14001f42f:	add    BYTE PTR [rsp+rsi*2+0x2],dl
   14001f436:	add    BYTE PTR [rax],al
   14001f438:	outs   dx,BYTE PTR ds:[rsi]
   14001f439:	je     0x14001f43d
   14001f43b:	add    BYTE PTR [rax],al
   14001f43d:	add    BYTE PTR [rax],al
   14001f43f:	add    BYTE PTR [rsp+rsi*2+0x2],al
   14001f443:	add    BYTE PTR [rax],al
   14001f445:	add    BYTE PTR [rax],al
   14001f447:	add    BYTE PTR [rdx],bl
   14001f449:	je     0x14001f44d
   14001f44b:	add    BYTE PTR [rax],al
   14001f44d:	add    BYTE PTR [rax],al
   14001f44f:	add    al,dh
   14001f451:	jae    0x14001f455
   14001f453:	add    BYTE PTR [rax],al
   14001f455:	add    BYTE PTR [rax],al
   14001f457:	add    dl,cl
   14001f459:	jae    0x14001f45d
   14001f45b:	add    BYTE PTR [rax],al
   14001f45d:	add    BYTE PTR [rax],al
   14001f45f:	add    BYTE PTR [rbx+rsi*2+0x2],bl
   14001f466:	add    BYTE PTR [rax],al
   14001f468:	jb     0x14001f4dd
   14001f46a:	add    al,BYTE PTR [rax]
   14001f46c:	add    BYTE PTR [rax],al
   14001f46e:	add    BYTE PTR [rax],al
   14001f470:	pop    rdx
   14001f471:	jae    0x14001f475
   14001f473:	add    BYTE PTR [rax],al
   14001f475:	add    BYTE PTR [rax],al
   14001f477:	add    BYTE PTR [rsi],dh
   14001f479:	jae    0x14001f47d
   14001f47b:	add    BYTE PTR [rax],al
   14001f47d:	add    BYTE PTR [rax],al
   14001f47f:	add    BYTE PTR [rax],dl
   14001f481:	jae    0x14001f485
   14001f483:	add    BYTE PTR [rax],al
   14001f485:	add    BYTE PTR [rax],al
   14001f487:	add    dl,bh
   14001f489:	jb     0x14001f48d
   14001f48b:	add    BYTE PTR [rax],al
   14001f48d:	add    BYTE PTR [rax],al
   14001f48f:	add    dl,ah
   14001f491:	jb     0x14001f495
   14001f493:	add    BYTE PTR [rax],al
   14001f495:	add    BYTE PTR [rax],al
   14001f497:	add    BYTE PTR [rsi+0x272],dh
   14001f49d:	add    BYTE PTR [rax],al
   14001f49f:	add    BYTE PTR [rdx+0x272],dl
   14001f4a5:	add    BYTE PTR [rax],al
   14001f4a7:	add    BYTE PTR [rsi+0x72],dh
   14001f4aa:	add    al,BYTE PTR [rax]
   14001f4ac:	add    BYTE PTR [rax],al
   14001f4ae:	add    BYTE PTR [rax],al
   14001f4b0:	push   rax
   14001f4b1:	jb     0x14001f4b5
   14001f4b3:	add    BYTE PTR [rax],al
   14001f4b5:	add    BYTE PTR [rax],al
   14001f4b7:	add    BYTE PTR [rcx+rcx*4],ah
   14001f4ba:	add    al,BYTE PTR [rax]
	...
   14001f4c8:	(bad)  
   14001f4c9:	jno    0x14001f4cd
   14001f4cb:	add    BYTE PTR [rax],al
   14001f4cd:	add    BYTE PTR [rax],al
   14001f4cf:	add    ah,cl
   14001f4d1:	jno    0x14001f4d5
   14001f4d3:	add    BYTE PTR [rax],al
   14001f4d5:	add    BYTE PTR [rax],al
   14001f4d7:	add    BYTE PTR [rcx+rsi*2+0x2],al
   14001f4de:	add    BYTE PTR [rax],al
   14001f4e0:	outs   dx,BYTE PTR ds:[rsi]
   14001f4e1:	jno    0x14001f4e5
   14001f4e3:	add    BYTE PTR [rax],al
   14001f4e5:	add    BYTE PTR [rax],al
   14001f4e7:	add    BYTE PTR [rsi+0x71],dl
   14001f4ea:	add    al,BYTE PTR [rax]
   14001f4ec:	add    BYTE PTR [rax],al
   14001f4ee:	add    BYTE PTR [rax],al
   14001f4f0:	cs jno 0x14001f4f5
   14001f4f3:	add    BYTE PTR [rax],al
   14001f4f5:	add    BYTE PTR [rax],al
   14001f4f7:	add    ah,dh
   14001f4f9:	jo     0x14001f4fd
   14001f4fb:	add    BYTE PTR [rax],al
   14001f4fd:	add    BYTE PTR [rax],al
   14001f4ff:	add    dh,bl
   14001f501:	jo     0x14001f505
   14001f503:	add    BYTE PTR [rax],al
   14001f505:	add    BYTE PTR [rax],al
   14001f507:	add    BYTE PTR [rsi+0x270],ch
   14001f50d:	add    BYTE PTR [rax],al
   14001f50f:	add    BYTE PTR [rax+rsi*2+0x2],cl
   14001f516:	add    BYTE PTR [rax],al
   14001f518:	js     0x14001f58a
   14001f51a:	add    al,BYTE PTR [rax]
   14001f51c:	add    BYTE PTR [rax],al
   14001f51e:	add    BYTE PTR [rax],al
   14001f520:	sub    dh,BYTE PTR [rax+0x2]
   14001f523:	add    BYTE PTR [rax],al
   14001f525:	add    BYTE PTR [rax],al
   14001f527:	add    BYTE PTR [rax+rsi*2],dl
   14001f52a:	add    al,BYTE PTR [rax]
   14001f52c:	add    BYTE PTR [rax],al
   14001f52e:	add    BYTE PTR [rax],al
   14001f530:	call   0x14001f7a4
   14001f535:	add    BYTE PTR [rax],al
   14001f537:	add    BYTE PTR [rsi],ah
   14001f539:	jb     0x14001f53d
	...
   14001f547:	add    BYTE PTR [rdx+0x2a],al
   14001f54a:	add    al,BYTE PTR [rax]
   14001f54c:	add    BYTE PTR [rax],al
   14001f54e:	add    BYTE PTR [rax],al
   14001f550:	ins    BYTE PTR es:[rdi],dx
   14001f551:	sub    al,BYTE PTR [rdx]
   14001f553:	add    BYTE PTR [rax],al
   14001f555:	add    BYTE PTR [rax],al
   14001f557:	add    BYTE PTR [rsi+0x22a],bl
   14001f55d:	add    BYTE PTR [rax],al
   14001f55f:	add    al,bl
   14001f561:	sub    al,BYTE PTR [rdx]
   14001f563:	add    BYTE PTR [rax],al
   14001f565:	add    BYTE PTR [rax],al
   14001f567:	add    BYTE PTR [rbx+rbp*1],dl
   14001f56a:	add    al,BYTE PTR [rax]
   14001f56c:	add    BYTE PTR [rax],al
   14001f56e:	add    BYTE PTR [rax],al
   14001f570:	push   rax
   14001f571:	sub    eax,DWORD PTR [rdx]
   14001f573:	add    BYTE PTR [rax],al
   14001f575:	add    BYTE PTR [rax],al
   14001f577:	add    BYTE PTR [rdx+0x22b],cl
   14001f57d:	add    BYTE PTR [rax],al
   14001f57f:	add    dh,al
   14001f581:	sub    eax,DWORD PTR [rdx]
   14001f583:	add    BYTE PTR [rax],al
   14001f585:	add    BYTE PTR [rax],al
   14001f587:	add    BYTE PTR [rax],al
   14001f589:	sub    al,0x2
   14001f58b:	add    BYTE PTR [rax],al
   14001f58d:	add    BYTE PTR [rax],al
   14001f58f:	add    BYTE PTR [rsp+rbp*1],bh
   14001f592:	add    al,BYTE PTR [rax]
   14001f594:	add    BYTE PTR [rax],al
   14001f596:	add    BYTE PTR [rax],al
   14001f598:	ins    BYTE PTR es:[rdi],dx
   14001f599:	sub    al,0x2
   14001f59b:	add    BYTE PTR [rax],al
   14001f59d:	add    BYTE PTR [rax],al
   14001f59f:	add    BYTE PTR [rsp+rbp*1+0x2],bl
   14001f5a6:	add    BYTE PTR [rax],al
   14001f5a8:	shr    BYTE PTR [rdx+rax*1],1
   14001f5ab:	add    BYTE PTR [rax],al
   14001f5ad:	add    BYTE PTR [rax],al
   14001f5af:	add    BYTE PTR [rbp*1+0x2],cl
   14001f5b6:	add    BYTE PTR [rax],al
   14001f5b8:	rex.X sub eax,0x2
   14001f5be:	add    BYTE PTR [rax],al
   14001f5c0:	jb     0x14001f5ef
   14001f5c2:	add    al,BYTE PTR [rax]
   14001f5c4:	add    BYTE PTR [rax],al
   14001f5c6:	add    BYTE PTR [rax],al
   14001f5c8:	movabs ds:0xcc0000000000022d,al
   14001f5d1:	sub    eax,0x2
   14001f5d6:	add    BYTE PTR [rax],al
   14001f5d8:	hlt    
   14001f5d9:	sub    eax,0x2
   14001f5de:	add    BYTE PTR [rax],al
   14001f5e0:	(bad)  
   14001f5e1:	add    al,BYTE PTR cs:[rax]
   14001f5e4:	add    BYTE PTR [rax],al
   14001f5e6:	add    BYTE PTR [rax],al
   14001f5e8:	sub    BYTE PTR [rsi],ch
   14001f5ea:	add    al,BYTE PTR [rax]
   14001f5ec:	add    BYTE PTR [rax],al
   14001f5ee:	add    BYTE PTR [rax],al
   14001f5f0:	ds add al,BYTE PTR cs:[rax]
   14001f5f4:	add    BYTE PTR [rax],al
   14001f5f6:	add    BYTE PTR [rax],al
   14001f5f8:	pop    rax
   14001f5f9:	add    al,BYTE PTR cs:[rax]
   14001f5fc:	add    BYTE PTR [rax],al
   14001f5fe:	add    BYTE PTR [rax],al
   14001f600:	jo     0x14001f630
   14001f602:	add    al,BYTE PTR [rax]
   14001f604:	add    BYTE PTR [rax],al
   14001f606:	add    BYTE PTR [rax],al
   14001f608:	mov    ch,BYTE PTR [rsi]
   14001f60a:	add    al,BYTE PTR [rax]
   14001f60c:	add    BYTE PTR [rax],al
   14001f60e:	add    BYTE PTR [rax],al
   14001f610:	shr    BYTE PTR [rsi],1
   14001f612:	add    al,BYTE PTR [rax]
   14001f614:	add    BYTE PTR [rax],al
   14001f616:	add    BYTE PTR [rax],al
   14001f618:	add    ch,BYTE PTR [rdi]
   14001f61a:	add    al,BYTE PTR [rax]
   14001f61c:	add    BYTE PTR [rax],al
   14001f61e:	add    BYTE PTR [rax],al
   14001f620:	xor    BYTE PTR [rdi],ch
   14001f622:	add    al,BYTE PTR [rax]
   14001f624:	add    BYTE PTR [rax],al
   14001f626:	add    BYTE PTR [rax],al
   14001f628:	pop    rax
   14001f629:	(bad)  
   14001f62a:	add    al,BYTE PTR [rax]
   14001f62c:	add    BYTE PTR [rax],al
   14001f62e:	add    BYTE PTR [rax],al
   14001f630:	sub    BYTE PTR [rdi],0x2
   14001f633:	add    BYTE PTR [rax],al
   14001f635:	add    BYTE PTR [rax],al
   14001f637:	add    BYTE PTR [rsi+0x22f],ah
   14001f63d:	add    BYTE PTR [rax],al
   14001f63f:	add    ah,dl
   14001f641:	(bad)  
   14001f642:	add    al,BYTE PTR [rax]
   14001f644:	add    BYTE PTR [rax],al
   14001f646:	add    BYTE PTR [rax],al
   14001f648:	(bad)  
   14001f649:	xor    BYTE PTR [rdx],al
   14001f64b:	add    BYTE PTR [rax],al
   14001f64d:	add    BYTE PTR [rax],al
   14001f64f:	add    BYTE PTR [rsi],dh
   14001f651:	xor    BYTE PTR [rdx],al
   14001f653:	add    BYTE PTR [rax],al
   14001f655:	add    BYTE PTR [rax],al
   14001f657:	add    BYTE PTR [rsi+0x30],bl
   14001f65a:	add    al,BYTE PTR [rax]
   14001f65c:	add    BYTE PTR [rax],al
   14001f65e:	add    BYTE PTR [rax],al
   14001f660:	(bad)  
   14001f661:	xor    BYTE PTR [rdx],al
   14001f663:	add    BYTE PTR [rax],al
   14001f665:	add    BYTE PTR [rax],al
   14001f667:	add    BYTE PTR [rsi+0x230],ah
   14001f66d:	add    BYTE PTR [rax],al
   14001f66f:	add    dh,al
   14001f671:	xor    BYTE PTR [rdx],al
   14001f673:	add    BYTE PTR [rax],al
   14001f675:	add    BYTE PTR [rax],al
   14001f677:	add    al,ah
   14001f679:	xor    BYTE PTR [rdx],al
   14001f67b:	add    BYTE PTR [rax],al
   14001f67d:	add    BYTE PTR [rax],al
   14001f67f:	add    BYTE PTR [rcx+rsi*1],cl
   14001f682:	add    al,BYTE PTR [rax]
   14001f684:	add    BYTE PTR [rax],al
   14001f686:	add    BYTE PTR [rax],al
   14001f688:	jp     0x14001f6bb
   14001f68a:	add    al,BYTE PTR [rax]
   14001f68c:	add    BYTE PTR [rax],al
   14001f68e:	add    BYTE PTR [rax],al
   14001f690:	clc    
   14001f691:	xor    DWORD PTR [rdx],eax
   14001f693:	add    BYTE PTR [rax],al
   14001f695:	add    BYTE PTR [rax],al
   14001f697:	add    BYTE PTR [rsi],bl
   14001f699:	xor    al,BYTE PTR [rdx]
   14001f69b:	add    BYTE PTR [rax],al
   14001f69d:	add    BYTE PTR [rax],al
   14001f69f:	add    BYTE PTR [rax+0x32],dl
   14001f6a2:	add    al,BYTE PTR [rax]
   14001f6a4:	add    BYTE PTR [rax],al
   14001f6a6:	add    BYTE PTR [rax],al
   14001f6a8:	mov    BYTE PTR [rdx],dh
   14001f6aa:	add    al,BYTE PTR [rax]
   14001f6ac:	add    BYTE PTR [rax],al
   14001f6ae:	add    BYTE PTR [rax],al
   14001f6b0:	mov    ah,0x32
   14001f6b2:	add    al,BYTE PTR [rax]
   14001f6b4:	add    BYTE PTR [rax],al
   14001f6b6:	add    BYTE PTR [rax],al
   14001f6b8:	(bad)  
   14001f6b9:	xor    al,BYTE PTR [rdx]
   14001f6bb:	add    BYTE PTR [rax],al
   14001f6bd:	add    BYTE PTR [rax],al
   14001f6bf:	add    BYTE PTR [rax],al
   14001f6c1:	xor    eax,DWORD PTR [rdx]
   14001f6c3:	add    BYTE PTR [rax],al
   14001f6c5:	add    BYTE PTR [rax],al
   14001f6c7:	add    BYTE PTR [rsi],bh
   14001f6c9:	xor    eax,DWORD PTR [rdx]
   14001f6cb:	add    BYTE PTR [rax],al
   14001f6cd:	add    BYTE PTR [rax],al
   14001f6cf:	add    BYTE PTR [rax+0x33],bh
   14001f6d2:	add    al,BYTE PTR [rax]
   14001f6d4:	add    BYTE PTR [rax],al
   14001f6d6:	add    BYTE PTR [rax],al
   14001f6d8:	movabs al,ds:0xc800000000000233
   14001f6e1:	xor    eax,DWORD PTR [rdx]
   14001f6e3:	add    BYTE PTR [rax],al
   14001f6e5:	add    BYTE PTR [rax],al
   14001f6e7:	add    al,dh
   14001f6e9:	xor    eax,DWORD PTR [rdx]
   14001f6eb:	add    BYTE PTR [rax],al
   14001f6ed:	add    BYTE PTR [rax],al
   14001f6ef:	add    BYTE PTR [rsi],dl
   14001f6f1:	xor    al,0x2
   14001f6f3:	add    BYTE PTR [rax],al
   14001f6f5:	add    BYTE PTR [rax],al
   14001f6f7:	add    BYTE PTR [rax+0x34],cl
   14001f6fa:	add    al,BYTE PTR [rax]
   14001f6fc:	add    BYTE PTR [rax],al
   14001f6fe:	add    BYTE PTR [rax],al
   14001f700:	jb     0x14001f736
   14001f702:	add    al,BYTE PTR [rax]
   14001f704:	add    BYTE PTR [rax],al
   14001f706:	add    BYTE PTR [rax],al
   14001f708:	mov    al,0x34
   14001f70a:	add    al,BYTE PTR [rax]
   14001f70c:	add    BYTE PTR [rax],al
   14001f70e:	add    BYTE PTR [rax],al
   14001f710:	fidiv  DWORD PTR [rdx+rax*1]
   14001f713:	add    BYTE PTR [rax],al
   14001f715:	add    BYTE PTR [rax],al
   14001f717:	add    BYTE PTR [rsi*1+0x2],cl
   14001f71e:	add    BYTE PTR [rax],al
   14001f720:	cmp    al,0x35
   14001f722:	add    al,BYTE PTR [rax]
   14001f724:	add    BYTE PTR [rax],al
   14001f726:	add    BYTE PTR [rax],al
   14001f728:	je     0x14001f75f
   14001f72a:	add    al,BYTE PTR [rax]
   14001f72c:	add    BYTE PTR [rax],al
   14001f72e:	add    BYTE PTR [rax],al
   14001f730:	scas   al,BYTE PTR es:[rdi]
   14001f731:	xor    eax,0x2
   14001f736:	add    BYTE PTR [rax],al
   14001f738:	in     al,0x35
   14001f73a:	add    al,BYTE PTR [rax]
   14001f73c:	add    BYTE PTR [rax],al
   14001f73e:	add    BYTE PTR [rax],al
   14001f740:	sbb    BYTE PTR [rsi],dh
   14001f742:	add    al,BYTE PTR [rax]
   14001f744:	add    BYTE PTR [rax],al
   14001f746:	add    BYTE PTR [rax],al
   14001f748:	rex.WX
   14001f749:	add    al,BYTE PTR ss:[rax]
   14001f74c:	add    BYTE PTR [rax],al
   14001f74e:	add    BYTE PTR [rax],al
   14001f750:	jle    0x14001f788
   14001f752:	add    al,BYTE PTR [rax]
   14001f754:	add    BYTE PTR [rax],al
   14001f756:	add    BYTE PTR [rax],al
   14001f758:	lods   al,BYTE PTR ds:[rsi]
   14001f759:	add    al,BYTE PTR ss:[rax]
   14001f75c:	add    BYTE PTR [rax],al
   14001f75e:	add    BYTE PTR [rax],al
   14001f760:	loopne 0x14001f798
   14001f762:	add    al,BYTE PTR [rax]
   14001f764:	add    BYTE PTR [rax],al
   14001f766:	add    BYTE PTR [rax],al
   14001f768:	or     al,0x37
   14001f76a:	add    al,BYTE PTR [rax]
   14001f76c:	add    BYTE PTR [rax],al
   14001f76e:	add    BYTE PTR [rax],al
   14001f770:	rex.WR (bad) 
   14001f772:	add    al,BYTE PTR [rax]
   14001f774:	add    BYTE PTR [rax],al
   14001f776:	add    BYTE PTR [rax],al
   14001f778:	js     0x14001f7b1
   14001f77a:	add    al,BYTE PTR [rax]
   14001f77c:	add    BYTE PTR [rax],al
   14001f77e:	add    BYTE PTR [rax],al
   14001f780:	mov    esi,0x237
   14001f785:	add    BYTE PTR [rax],al
   14001f787:	add    al,dh
   14001f789:	(bad)  
   14001f78a:	add    al,BYTE PTR [rax]
   14001f78c:	add    BYTE PTR [rax],al
   14001f78e:	add    BYTE PTR [rax],al
   14001f790:	and    bh,BYTE PTR [rax]
   14001f792:	add    al,BYTE PTR [rax]
   14001f794:	add    BYTE PTR [rax],al
   14001f796:	add    BYTE PTR [rax],al
   14001f798:	pop    rsp
   14001f799:	cmp    BYTE PTR [rdx],al
   14001f79b:	add    BYTE PTR [rax],al
   14001f79d:	add    BYTE PTR [rax],al
   14001f79f:	add    BYTE PTR [rax+rdi*1+0x2],dl
   14001f7a6:	add    BYTE PTR [rax],al
   14001f7a8:	(bad)  
   14001f7a9:	cmp    BYTE PTR [rdx],al
   14001f7ab:	add    BYTE PTR [rax],al
   14001f7ad:	add    BYTE PTR [rax],al
   14001f7af:	add    BYTE PTR [rcx+rdi*1],cl
   14001f7b2:	add    al,BYTE PTR [rax]
   14001f7b4:	add    BYTE PTR [rax],al
   14001f7b6:	add    BYTE PTR [rax],al
   14001f7b8:	rex.X cmp DWORD PTR [rdx],eax
   14001f7bb:	add    BYTE PTR [rax],al
   14001f7bd:	add    BYTE PTR [rax],al
   14001f7bf:	add    BYTE PTR [rsi+0x39],bh
   14001f7c2:	add    al,BYTE PTR [rax]
   14001f7c4:	add    BYTE PTR [rax],al
   14001f7c6:	add    BYTE PTR [rax],al
   14001f7c8:	mov    dl,0x39
   14001f7ca:	add    al,BYTE PTR [rax]
   14001f7cc:	add    BYTE PTR [rax],al
   14001f7ce:	add    BYTE PTR [rax],al
   14001f7d0:	out    dx,al
   14001f7d1:	cmp    DWORD PTR [rdx],eax
   14001f7d3:	add    BYTE PTR [rax],al
   14001f7d5:	add    BYTE PTR [rax],al
   14001f7d7:	add    BYTE PTR [rdx+rdi*1],ch
   14001f7da:	add    al,BYTE PTR [rax]
   14001f7dc:	add    BYTE PTR [rax],al
   14001f7de:	add    BYTE PTR [rax],al
   14001f7e0:	pop    rsi
   14001f7e1:	cmp    al,BYTE PTR [rdx]
   14001f7e3:	add    BYTE PTR [rax],al
   14001f7e5:	add    BYTE PTR [rax],al
   14001f7e7:	add    BYTE PTR [rdx+0x23a],bl
   14001f7ed:	add    BYTE PTR [rax],al
   14001f7ef:	add    dl,ah
   14001f7f1:	cmp    al,BYTE PTR [rdx]
   14001f7f3:	add    BYTE PTR [rax],al
   14001f7f5:	add    BYTE PTR [rax],al
   14001f7f7:	add    BYTE PTR [rbx+rdi*1],ah
   14001f7fa:	add    al,BYTE PTR [rax]
   14001f7fc:	add    BYTE PTR [rax],al
   14001f7fe:	add    BYTE PTR [rax],al
   14001f800:	pop    rsp
   14001f801:	cmp    eax,DWORD PTR [rdx]
   14001f803:	add    BYTE PTR [rax],al
   14001f805:	add    BYTE PTR [rax],al
   14001f807:	add    BYTE PTR [rsi+0x23b],bl
   14001f80d:	add    BYTE PTR [rax],al
   14001f80f:	add    al,dl
   14001f811:	cmp    eax,DWORD PTR [rdx]
   14001f813:	add    BYTE PTR [rax],al
   14001f815:	add    BYTE PTR [rax],al
   14001f817:	add    ah,bh
   14001f819:	cmp    eax,DWORD PTR [rdx]
   14001f81b:	add    BYTE PTR [rax],al
   14001f81d:	add    BYTE PTR [rax],al
   14001f81f:	add    BYTE PTR [rdx+0x3c],al
   14001f822:	add    al,BYTE PTR [rax]
   14001f824:	add    BYTE PTR [rax],al
   14001f826:	add    BYTE PTR [rax],al
   14001f828:	xchg   esp,eax
   14001f829:	cmp    al,0x2
   14001f82b:	add    BYTE PTR [rax],al
   14001f82d:	add    BYTE PTR [rax],al
   14001f82f:	add    al,cl
   14001f831:	cmp    al,0x2
   14001f833:	add    BYTE PTR [rax],al
   14001f835:	add    BYTE PTR [rax],al
   14001f837:	add    BYTE PTR [rdi*1+0x2],al
   14001f83e:	add    BYTE PTR [rax],al
   14001f840:	ss cmp eax,0x2
   14001f846:	add    BYTE PTR [rax],al
   14001f848:	(bad)  
   14001f849:	cmp    eax,0x2
   14001f84e:	add    BYTE PTR [rax],al
   14001f850:	nop
   14001f851:	cmp    eax,0x2
   14001f856:	add    BYTE PTR [rax],al
   14001f858:	retf   0x23d
   14001f85b:	add    BYTE PTR [rax],al
   14001f85d:	add    BYTE PTR [rax],al
   14001f85f:	add    BYTE PTR [rsi],cl
   14001f861:	add    al,BYTE PTR ds:[rax]
   14001f864:	add    BYTE PTR [rax],al
   14001f866:	add    BYTE PTR [rax],al
   14001f868:	rex
   14001f869:	add    al,BYTE PTR ds:[rax]
   14001f86c:	add    BYTE PTR [rax],al
   14001f86e:	add    BYTE PTR [rax],al
   14001f870:	jl     0x14001f8b0
   14001f872:	add    al,BYTE PTR [rax]
   14001f874:	add    BYTE PTR [rax],al
   14001f876:	add    BYTE PTR [rax],al
   14001f878:	int3   
   14001f879:	add    al,BYTE PTR ds:[rax]
   14001f87c:	add    BYTE PTR [rax],al
   14001f87e:	add    BYTE PTR [rax],al
   14001f880:	(bad)  
   14001f881:	(bad)  
   14001f882:	add    al,BYTE PTR [rax]
   14001f884:	add    BYTE PTR [rax],al
   14001f886:	add    BYTE PTR [rax],al
   14001f888:	xor    al,0x3f
   14001f88a:	add    al,BYTE PTR [rax]
   14001f88c:	add    BYTE PTR [rax],al
   14001f88e:	add    BYTE PTR [rax],al
   14001f890:	pop    rsi
   14001f891:	(bad)  
   14001f892:	add    al,BYTE PTR [rax]
   14001f894:	add    BYTE PTR [rax],al
   14001f896:	add    BYTE PTR [rax],al
   14001f898:	jp     0x14001f8d9
   14001f89a:	add    al,BYTE PTR [rax]
   14001f89c:	add    BYTE PTR [rax],al
   14001f89e:	add    BYTE PTR [rax],al
   14001f8a0:	scas   al,BYTE PTR es:[rdi]
   14001f8a1:	(bad)  
   14001f8a2:	add    al,BYTE PTR [rax]
   14001f8a4:	add    BYTE PTR [rax],al
   14001f8a6:	add    BYTE PTR [rax],al
   14001f8a8:	sar    BYTE PTR [rdi],cl
   14001f8aa:	add    al,BYTE PTR [rax]
   14001f8ac:	add    BYTE PTR [rax],al
   14001f8ae:	add    BYTE PTR [rax],al
   14001f8b0:	repnz (bad) 
   14001f8b2:	add    al,BYTE PTR [rax]
   14001f8b4:	add    BYTE PTR [rax],al
   14001f8b6:	add    BYTE PTR [rax],al
   14001f8b8:	rex.R
   14001f8b9:	add    al,BYTE PTR [rax]
   14001f8bc:	add    BYTE PTR [rax],al
   14001f8be:	add    BYTE PTR [rax],al
   14001f8c0:	mov    al,BYTE PTR [rax+0x2]
   14001f8c3:	add    BYTE PTR [rax],al
   14001f8c5:	add    BYTE PTR [rax],al
   14001f8c7:	add    al,al
   14001f8c9:	add    al,BYTE PTR [rax]
   14001f8cc:	add    BYTE PTR [rax],al
   14001f8ce:	add    BYTE PTR [rax],al
   14001f8d0:	inc    BYTE PTR [rax+0x2]
   14001f8d3:	add    BYTE PTR [rax],al
   14001f8d5:	add    BYTE PTR [rax],al
   14001f8d7:	add    BYTE PTR [rdx],bh
   14001f8d9:	add    al,BYTE PTR [r8]
   14001f8dc:	add    BYTE PTR [rax],al
   14001f8de:	add    BYTE PTR [rax],al
   14001f8e0:	jb     0x14001f923
   14001f8e2:	add    al,BYTE PTR [rax]
   14001f8e4:	add    BYTE PTR [rax],al
   14001f8e6:	add    BYTE PTR [rax],al
   14001f8e8:	movabs ds:0xd800000000000241,al
   14001f8f1:	add    al,BYTE PTR [r8]
   14001f8f4:	add    BYTE PTR [rax],al
   14001f8f6:	add    BYTE PTR [rax],al
   14001f8f8:	add    BYTE PTR [rdx+0x2],al
   14001f8fb:	add    BYTE PTR [rax],al
   14001f8fd:	add    BYTE PTR [rax],al
   14001f8ff:	add    BYTE PTR [rax],bh
   14001f901:	rex.X add al,BYTE PTR [rax]
   14001f904:	add    BYTE PTR [rax],al
   14001f906:	add    BYTE PTR [rax],al
   14001f908:	push   0x42
   14001f90a:	add    al,BYTE PTR [rax]
   14001f90c:	add    BYTE PTR [rax],al
   14001f90e:	add    BYTE PTR [rax],al
   14001f910:	test   al,0x42
   14001f912:	add    al,BYTE PTR [rax]
   14001f914:	add    BYTE PTR [rax],al
   14001f916:	add    BYTE PTR [rax],al
   14001f918:	call   0x14001fb5f
   14001f91d:	add    BYTE PTR [rax],al
   14001f91f:	add    BYTE PTR [rbx+rax*2+0x2],al
   14001f923:	add    BYTE PTR [rax],al
   14001f925:	add    BYTE PTR [rax],al
   14001f927:	add    BYTE PTR [rdx+0x43],bh
   14001f92a:	add    al,BYTE PTR [rax]
   14001f92c:	add    BYTE PTR [rax],al
   14001f92e:	add    BYTE PTR [rax],al
   14001f930:	mov    dh,0x43
   14001f932:	add    al,BYTE PTR [rax]
   14001f934:	add    BYTE PTR [rax],al
   14001f936:	add    BYTE PTR [rax],al
   14001f938:	sub    al,0x44
   14001f93a:	add    al,BYTE PTR [rax]
   14001f93c:	add    BYTE PTR [rax],al
   14001f93e:	add    BYTE PTR [rax],al
   14001f940:	push   rsp
   14001f941:	add    r8b,BYTE PTR [rax]
   14001f944:	add    BYTE PTR [rax],al
   14001f946:	add    BYTE PTR [rax],al
   14001f948:	jp     0x14001f98e
   14001f94a:	add    al,BYTE PTR [rax]
   14001f94c:	add    BYTE PTR [rax],al
   14001f94e:	add    BYTE PTR [rax],al
   14001f950:	mov    al,0x44
   14001f952:	add    al,BYTE PTR [rax]
   14001f954:	add    BYTE PTR [rax],al
   14001f956:	add    BYTE PTR [rax],al
   14001f958:	adc    BYTE PTR [rbp+0x2],al
   14001f95b:	add    BYTE PTR [rax],al
   14001f95d:	add    BYTE PTR [rax],al
   14001f95f:	add    BYTE PTR [rsi+0x45],bl
   14001f962:	add    al,BYTE PTR [rax]
   14001f964:	add    BYTE PTR [rax],al
   14001f966:	add    BYTE PTR [rax],al
   14001f968:	sahf   
   14001f969:	add    r8b,BYTE PTR [r8]
   14001f96c:	add    BYTE PTR [rax],al
   14001f96e:	add    BYTE PTR [rax],al
   14001f970:	sbb    al,0x46
   14001f972:	add    al,BYTE PTR [rax]
   14001f974:	add    BYTE PTR [rax],al
   14001f976:	add    BYTE PTR [rax],al
   14001f978:	(bad)  
   14001f979:	rex.RX add r8b,BYTE PTR [rax]
   14001f97c:	add    BYTE PTR [rax],al
   14001f97e:	add    BYTE PTR [rax],al
   14001f980:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001f981:	rex.RX add r8b,BYTE PTR [rax]
   14001f984:	add    BYTE PTR [rax],al
   14001f986:	add    BYTE PTR [rax],al
   14001f988:	cld    
   14001f989:	rex.RX add r8b,BYTE PTR [rax]
   14001f98c:	add    BYTE PTR [rax],al
   14001f98e:	add    BYTE PTR [rax],al
   14001f990:	rex.WX
   14001f991:	rex.RXB add r8b,BYTE PTR [r8]
   14001f994:	add    BYTE PTR [rax],al
   14001f996:	add    BYTE PTR [rax],al
   14001f998:	jl     0x14001f9e1
   14001f99a:	add    al,BYTE PTR [rax]
   14001f99c:	add    BYTE PTR [rax],al
   14001f99e:	add    BYTE PTR [rax],al
   14001f9a0:	int3   
   14001f9a1:	rex.RXB add r8b,BYTE PTR [r8]
   14001f9a4:	add    BYTE PTR [rax],al
   14001f9a6:	add    BYTE PTR [rax],al
   14001f9a8:	sub    BYTE PTR [rax+0x2],cl
   14001f9ab:	add    BYTE PTR [rax],al
   14001f9ad:	add    BYTE PTR [rax],al
   14001f9af:	add    BYTE PTR [rax+rcx*2+0x2],dh
   14001f9b3:	add    BYTE PTR [rax],al
   14001f9b5:	add    BYTE PTR [rax],al
   14001f9b7:	add    BYTE PTR [rax+0x248],ch
   14001f9bd:	add    BYTE PTR [rax],al
   14001f9bf:	add    ah,dl
   14001f9c1:	rex.W add al,BYTE PTR [rax]
   14001f9c4:	add    BYTE PTR [rax],al
   14001f9c6:	add    BYTE PTR [rax],al
   14001f9c8:	adc    al,0x49
   14001f9ca:	add    al,BYTE PTR [rax]
   14001f9cc:	add    BYTE PTR [rax],al
   14001f9ce:	add    BYTE PTR [rax],al
   14001f9d0:	rex
   14001f9d1:	rex.WB add al,BYTE PTR [r8]
   14001f9d4:	add    BYTE PTR [rax],al
   14001f9d6:	add    BYTE PTR [rax],al
   14001f9d8:	js     0x14001fa23
   14001f9da:	add    al,BYTE PTR [rax]
   14001f9dc:	add    BYTE PTR [rax],al
   14001f9de:	add    BYTE PTR [rax],al
   14001f9e0:	movabs ds:0xd400000000000249,al
   14001f9e9:	rex.WB add al,BYTE PTR [r8]
   14001f9ec:	add    BYTE PTR [rax],al
   14001f9ee:	add    BYTE PTR [rax],al
   14001f9f0:	adc    cl,BYTE PTR [rdx+0x2]
   14001f9f3:	add    BYTE PTR [rax],al
   14001f9f5:	add    BYTE PTR [rax],al
   14001f9f7:	add    BYTE PTR [rdx+0x4a],dl
   14001f9fa:	add    al,BYTE PTR [rax]
   14001f9fc:	add    BYTE PTR [rax],al
   14001f9fe:	add    BYTE PTR [rax],al
   14001fa00:	mov    BYTE PTR [rdx+0x2],cl
   14001fa03:	add    BYTE PTR [rax],al
   14001fa05:	add    BYTE PTR [rax],al
   14001fa07:	add    BYTE PTR [rsi+0x24a],bh
   14001fa0d:	add    BYTE PTR [rax],al
   14001fa0f:	add    dh,dh
   14001fa11:	rex.WX add al,BYTE PTR [rax]
   14001fa14:	add    BYTE PTR [rax],al
   14001fa16:	add    BYTE PTR [rax],al
   14001fa18:	sub    cl,BYTE PTR [rbx+0x2]
   14001fa1b:	add    BYTE PTR [rax],al
   14001fa1d:	add    BYTE PTR [rax],al
   14001fa1f:	add    BYTE PTR [rsi+0x4b],bl
   14001fa22:	add    al,BYTE PTR [rax]
   14001fa24:	add    BYTE PTR [rax],al
   14001fa26:	add    BYTE PTR [rax],al
   14001fa28:	xchg   edx,eax
   14001fa29:	rex.WXB add al,BYTE PTR [r8]
   14001fa2c:	add    BYTE PTR [rax],al
   14001fa2e:	add    BYTE PTR [rax],al
   14001fa30:	mov    esi,0x24b
   14001fa35:	add    BYTE PTR [rax],al
   14001fa37:	add    dh,dl
   14001fa39:	rex.WXB add al,BYTE PTR [r8]
   14001fa3c:	add    BYTE PTR [rax],al
   14001fa3e:	add    BYTE PTR [rax],al
   14001fa40:	lock rex.WXB add al,BYTE PTR [r8]
   14001fa44:	add    BYTE PTR [rax],al
   14001fa46:	add    BYTE PTR [rax],al
   14001fa48:	or     cl,BYTE PTR [rdx+rax*1+0x0]
   14001fa4c:	add    BYTE PTR [rax],al
   14001fa4e:	add    BYTE PTR [rax],al
   14001fa50:	rex.X
   14001fa51:	rex.WR add r8b,BYTE PTR [rax]
   14001fa54:	add    BYTE PTR [rax],al
   14001fa56:	add    BYTE PTR [rax],al
   14001fa58:	(bad)  
   14001fa59:	rex.WR add r8b,BYTE PTR [rax]
   14001fa5c:	add    BYTE PTR [rax],al
   14001fa5e:	add    BYTE PTR [rax],al
   14001fa60:	mov    dl,0x4c
   14001fa62:	add    al,BYTE PTR [rax]
   14001fa64:	add    BYTE PTR [rax],al
   14001fa66:	add    BYTE PTR [rax],al
   14001fa68:	fimul  DWORD PTR [rdx+rax*1+0x0]
   14001fa6c:	add    BYTE PTR [rax],al
   14001fa6e:	add    BYTE PTR [rax],al
   14001fa70:	or     cl,BYTE PTR [rbp+0x2]
   14001fa73:	add    BYTE PTR [rax],al
   14001fa75:	add    BYTE PTR [rax],al
   14001fa77:	add    BYTE PTR [rsi],bh
   14001fa79:	rex.WRB add r8b,BYTE PTR [r8]
   14001fa7c:	add    BYTE PTR [rax],al
   14001fa7e:	add    BYTE PTR [rax],al
   14001fa80:	rex.WRB add r8b,BYTE PTR fs:[r8]
   14001fa84:	add    BYTE PTR [rax],al
   14001fa86:	add    BYTE PTR [rax],al
   14001fa88:	xchg   esi,eax
   14001fa89:	rex.WRB add r8b,BYTE PTR [r8]
   14001fa8c:	add    BYTE PTR [rax],al
   14001fa8e:	add    BYTE PTR [rax],al
   14001fa90:	retf   0x24d
   14001fa93:	add    BYTE PTR [rax],al
   14001fa95:	add    BYTE PTR [rax],al
   14001fa97:	add    BYTE PTR [rsi],cl
   14001fa99:	sub    al,BYTE PTR [rdx]
   14001fa9b:	add    BYTE PTR [rax],al
   14001fa9d:	add    BYTE PTR [rax],al
   14001fa9f:	add    BYTE PTR [rsi+rcx*2],dl
   14001faa2:	add    al,BYTE PTR [rax]
   14001faa4:	add    BYTE PTR [rax],al
   14001faa6:	add    BYTE PTR [rax],al
   14001faa8:	rex.X
   14001faa9:	rex.WRX add r8b,BYTE PTR [rax]
   14001faac:	add    BYTE PTR [rax],al
   14001faae:	add    BYTE PTR [rax],al
   14001fab0:	jl     0x14001fb00
   14001fab2:	add    al,BYTE PTR [rax]
   14001fab4:	add    BYTE PTR [rax],al
   14001fab6:	add    BYTE PTR [rax],al
   14001fab8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fab9:	rex.WRX add r8b,BYTE PTR [rax]
   14001fabc:	add    BYTE PTR [rax],al
   14001fabe:	add    BYTE PTR [rax],al
   14001fac0:	(bad)  
   14001fac1:	rex.WRX add r8b,BYTE PTR [rax]
   14001fac4:	add    BYTE PTR [rax],al
   14001fac6:	add    BYTE PTR [rax],al
   14001fac8:	out    dx,al
   14001fac9:	rex.WRX add r8b,BYTE PTR [rax]
   14001facc:	add    BYTE PTR [rax],al
   14001face:	add    BYTE PTR [rax],al
   14001fad0:	adc    al,0x4f
   14001fad2:	add    al,BYTE PTR [rax]
   14001fad4:	add    BYTE PTR [rax],al
   14001fad6:	add    BYTE PTR [rax],al
   14001fad8:	rex.RX
   14001fad9:	rex.WRXB add r8b,BYTE PTR [r8]
   14001fadc:	add    BYTE PTR [rax],al
   14001fade:	add    BYTE PTR [rax],al
   14001fae0:	jo     0x14001fb31
   14001fae2:	add    al,BYTE PTR [rax]
   14001fae4:	add    BYTE PTR [rax],al
   14001fae6:	add    BYTE PTR [rax],al
   14001fae8:	scas   al,BYTE PTR es:[rdi]
   14001fae9:	rex.WRXB add r8b,BYTE PTR [r8]
   14001faec:	add    BYTE PTR [rax],al
   14001faee:	add    BYTE PTR [rax],al
   14001faf0:	fmul   DWORD PTR [rdi+0x2]
   14001faf3:	add    BYTE PTR [rax],al
   14001faf5:	add    BYTE PTR [rax],al
   14001faf7:	add    BYTE PTR [rax],al
   14001faf9:	push   rax
   14001fafa:	add    al,BYTE PTR [rax]
   14001fafc:	add    BYTE PTR [rax],al
   14001fafe:	add    BYTE PTR [rax],al
   14001fb00:	xor    BYTE PTR [rax+0x2],dl
   14001fb03:	add    BYTE PTR [rax],al
   14001fb05:	add    BYTE PTR [rax],al
   14001fb07:	add    BYTE PTR [rsi+0x50],ah
   14001fb0a:	add    al,BYTE PTR [rax]
   14001fb0c:	add    BYTE PTR [rax],al
   14001fb0e:	add    BYTE PTR [rax],al
   14001fb10:	cwde   
   14001fb11:	push   rax
   14001fb12:	add    al,BYTE PTR [rax]
   14001fb14:	add    BYTE PTR [rax],al
   14001fb16:	add    BYTE PTR [rax],al
   14001fb18:	(bad)  
   14001fb19:	push   rax
   14001fb1a:	add    al,BYTE PTR [rax]
   14001fb1c:	add    BYTE PTR [rax],al
   14001fb1e:	add    BYTE PTR [rax],al
   14001fb20:	(bad)  
   14001fb21:	push   rax
   14001fb22:	add    al,BYTE PTR [rax]
   14001fb24:	add    BYTE PTR [rax],al
   14001fb26:	add    BYTE PTR [rax],al
   14001fb28:	adc    BYTE PTR [rcx+0x2],dl
   14001fb2b:	add    BYTE PTR [rax],al
   14001fb2d:	add    BYTE PTR [rax],al
   14001fb2f:	add    BYTE PTR [rcx+rdx*2+0x2],al
   14001fb33:	add    BYTE PTR [rax],al
   14001fb35:	add    BYTE PTR [rax],al
   14001fb37:	add    BYTE PTR [rax+0x51],dh
   14001fb3a:	add    al,BYTE PTR [rax]
   14001fb3c:	add    BYTE PTR [rax],al
   14001fb3e:	add    BYTE PTR [rax],al
   14001fb40:	mov    dl,0x51
   14001fb42:	add    al,BYTE PTR [rax]
   14001fb44:	add    BYTE PTR [rax],al
   14001fb46:	add    BYTE PTR [rax],al
   14001fb48:	ficom  WORD PTR [rcx+0x2]
   14001fb4b:	add    BYTE PTR [rax],al
   14001fb4d:	add    BYTE PTR [rax],al
   14001fb4f:	add    BYTE PTR [rdx],cl
   14001fb51:	push   rdx
   14001fb52:	add    al,BYTE PTR [rax]
   14001fb54:	add    BYTE PTR [rax],al
   14001fb56:	add    BYTE PTR [rax],al
   14001fb58:	cmp    al,0x52
   14001fb5a:	add    al,BYTE PTR [rax]
   14001fb5c:	add    BYTE PTR [rax],al
   14001fb5e:	add    BYTE PTR [rax],al
   14001fb60:	jbe    0x14001fbb4
   14001fb62:	add    al,BYTE PTR [rax]
   14001fb64:	add    BYTE PTR [rax],al
   14001fb66:	add    BYTE PTR [rax],al
   14001fb68:	lods   al,BYTE PTR ds:[rsi]
   14001fb69:	push   rdx
   14001fb6a:	add    al,BYTE PTR [rax]
   14001fb6c:	add    BYTE PTR [rax],al
   14001fb6e:	add    BYTE PTR [rax],al
   14001fb70:	fcom   QWORD PTR [rdx+0x2]
   14001fb73:	add    BYTE PTR [rax],al
   14001fb75:	add    BYTE PTR [rax],al
   14001fb77:	add    ah,dh
   14001fb79:	push   rdx
   14001fb7a:	add    al,BYTE PTR [rax]
   14001fb7c:	add    BYTE PTR [rax],al
   14001fb7e:	add    BYTE PTR [rax],al
   14001fb80:	adc    BYTE PTR [rbx+0x2],dl
   14001fb83:	add    BYTE PTR [rax],al
   14001fb85:	add    BYTE PTR [rax],al
   14001fb87:	add    BYTE PTR [rsi],dh
   14001fb89:	push   rbx
   14001fb8a:	add    al,BYTE PTR [rax]
   14001fb8c:	add    BYTE PTR [rax],al
   14001fb8e:	add    BYTE PTR [rax],al
   14001fb90:	pop    rsi
   14001fb91:	push   rbx
   14001fb92:	add    al,BYTE PTR [rax]
   14001fb94:	add    BYTE PTR [rax],al
   14001fb96:	add    BYTE PTR [rax],al
   14001fb98:	nop
   14001fb99:	push   rbx
   14001fb9a:	add    al,BYTE PTR [rax]
   14001fb9c:	add    BYTE PTR [rax],al
   14001fb9e:	add    BYTE PTR [rax],al
   14001fba0:	scas   al,BYTE PTR es:[rdi]
   14001fba1:	push   rbx
   14001fba2:	add    al,BYTE PTR [rax]
   14001fba4:	add    BYTE PTR [rax],al
   14001fba6:	add    BYTE PTR [rax],al
   14001fba8:	in     al,0x53
   14001fbaa:	add    al,BYTE PTR [rax]
   14001fbac:	add    BYTE PTR [rax],al
   14001fbae:	add    BYTE PTR [rax],al
   14001fbb0:	or     BYTE PTR [rdx+rax*1+0x0],dl
   14001fbb4:	add    BYTE PTR [rax],al
   14001fbb6:	add    BYTE PTR [rax],al
   14001fbb8:	xor    BYTE PTR [rdx+rax*1+0x0],dl
   14001fbbc:	add    BYTE PTR [rax],al
   14001fbbe:	add    BYTE PTR [rax],al
   14001fbc0:	fs push rsp
   14001fbc2:	add    al,BYTE PTR [rax]
   14001fbc4:	add    BYTE PTR [rax],al
   14001fbc6:	add    BYTE PTR [rax],al
   14001fbc8:	nop
   14001fbc9:	push   rsp
   14001fbca:	add    al,BYTE PTR [rax]
   14001fbcc:	add    BYTE PTR [rax],al
   14001fbce:	add    BYTE PTR [rax],al
   14001fbd0:	rcl    BYTE PTR [rdx+rax*1+0x0],1
   14001fbd4:	add    BYTE PTR [rax],al
   14001fbd6:	add    BYTE PTR [rax],al
   14001fbd8:	cld    
   14001fbd9:	push   rsp
   14001fbda:	add    al,BYTE PTR [rax]
   14001fbdc:	add    BYTE PTR [rax],al
   14001fbde:	add    BYTE PTR [rax],al
   14001fbe0:	cs push rbp
   14001fbe2:	add    al,BYTE PTR [rax]
   14001fbe4:	add    BYTE PTR [rax],al
   14001fbe6:	add    BYTE PTR [rax],al
   14001fbe8:	outs   dx,BYTE PTR ds:[rsi]
   14001fbe9:	push   rbp
   14001fbea:	add    al,BYTE PTR [rax]
   14001fbec:	add    BYTE PTR [rax],al
   14001fbee:	add    BYTE PTR [rax],al
   14001fbf0:	test   al,0x55
   14001fbf2:	add    al,BYTE PTR [rax]
   14001fbf4:	add    BYTE PTR [rax],al
   14001fbf6:	add    BYTE PTR [rax],al
   14001fbf8:	out    dx,al
   14001fbf9:	push   rbp
   14001fbfa:	add    al,BYTE PTR [rax]
   14001fbfc:	add    BYTE PTR [rax],al
   14001fbfe:	add    BYTE PTR [rax],al
   14001fc00:	and    al,0x56
   14001fc02:	add    al,BYTE PTR [rax]
   14001fc04:	add    BYTE PTR [rax],al
   14001fc06:	add    BYTE PTR [rax],al
   14001fc08:	push   rsi
   14001fc09:	push   rsi
   14001fc0a:	add    al,BYTE PTR [rax]
   14001fc0c:	add    BYTE PTR [rax],al
   14001fc0e:	add    BYTE PTR [rax],al
   14001fc10:	xchg   edx,eax
   14001fc11:	push   rsi
   14001fc12:	add    al,BYTE PTR [rax]
   14001fc14:	add    BYTE PTR [rax],al
   14001fc16:	add    BYTE PTR [rax],al
   14001fc18:	(bad)  
   14001fc19:	push   rsi
   14001fc1a:	add    al,BYTE PTR [rax]
   14001fc1c:	add    BYTE PTR [rax],al
   14001fc1e:	add    BYTE PTR [rax],al
   14001fc20:	clc    
   14001fc21:	push   rsi
   14001fc22:	add    al,BYTE PTR [rax]
   14001fc24:	add    BYTE PTR [rax],al
   14001fc26:	add    BYTE PTR [rax],al
   14001fc28:	xor    BYTE PTR [rdi+0x2],dl
   14001fc2b:	add    BYTE PTR [rax],al
   14001fc2d:	add    BYTE PTR [rax],al
   14001fc2f:	add    BYTE PTR [rdx+0x57],ch
   14001fc32:	add    al,BYTE PTR [rax]
   14001fc34:	add    BYTE PTR [rax],al
   14001fc36:	add    BYTE PTR [rax],al
   14001fc38:	pushf  
   14001fc39:	push   rdi
   14001fc3a:	add    al,BYTE PTR [rax]
   14001fc3c:	add    BYTE PTR [rax],al
   14001fc3e:	add    BYTE PTR [rax],al
   14001fc40:	(bad)  
   14001fc41:	push   rdi
   14001fc42:	add    al,BYTE PTR [rax]
   14001fc44:	add    BYTE PTR [rax],al
   14001fc46:	add    BYTE PTR [rax],al
   14001fc48:	add    BYTE PTR [rax+0x2],bl
   14001fc4b:	add    BYTE PTR [rax],al
   14001fc4d:	add    BYTE PTR [rax],al
   14001fc4f:	add    BYTE PTR [rax],dh
   14001fc51:	pop    rax
   14001fc52:	add    al,BYTE PTR [rax]
   14001fc54:	add    BYTE PTR [rax],al
   14001fc56:	add    BYTE PTR [rax],al
   14001fc58:	push   0x58
   14001fc5a:	add    al,BYTE PTR [rax]
   14001fc5c:	add    BYTE PTR [rax],al
   14001fc5e:	add    BYTE PTR [rax],al
   14001fc60:	mov    ah,0x58
   14001fc62:	add    al,BYTE PTR [rax]
   14001fc64:	add    BYTE PTR [rax],al
   14001fc66:	add    BYTE PTR [rax],al
   14001fc68:	out    dx,al
   14001fc69:	pop    rax
   14001fc6a:	add    al,BYTE PTR [rax]
   14001fc6c:	add    BYTE PTR [rax],al
   14001fc6e:	add    BYTE PTR [rax],al
   14001fc70:	sub    bl,BYTE PTR [rcx+0x2]
   14001fc73:	add    BYTE PTR [rax],al
   14001fc75:	add    BYTE PTR [rax],al
   14001fc77:	add    BYTE PTR [rdx+0x59],bh
   14001fc7a:	add    al,BYTE PTR [rax]
   14001fc7c:	add    BYTE PTR [rax],al
   14001fc7e:	add    BYTE PTR [rax],al
   14001fc80:	mov    ah,0x59
   14001fc82:	add    al,BYTE PTR [rax]
   14001fc84:	add    BYTE PTR [rax],al
   14001fc86:	add    BYTE PTR [rax],al
   14001fc88:	out    0x59,al
   14001fc8a:	add    al,BYTE PTR [rax]
   14001fc8c:	add    BYTE PTR [rax],al
   14001fc8e:	add    BYTE PTR [rax],al
   14001fc90:	add    bl,BYTE PTR [rdx+0x2]
   14001fc93:	add    BYTE PTR [rax],al
   14001fc95:	add    BYTE PTR [rax],al
   14001fc97:	add    BYTE PTR [rsi],dh
   14001fc99:	pop    rdx
   14001fc9a:	add    al,BYTE PTR [rax]
   14001fc9c:	add    BYTE PTR [rax],al
   14001fc9e:	add    BYTE PTR [rax],al
   14001fca0:	pop    rdx
   14001fca1:	pop    rdx
   14001fca2:	add    al,BYTE PTR [rax]
   14001fca4:	add    BYTE PTR [rax],al
   14001fca6:	add    BYTE PTR [rax],al
   14001fca8:	(bad)  
   14001fca9:	pop    rdx
   14001fcaa:	add    al,BYTE PTR [rax]
   14001fcac:	add    BYTE PTR [rax],al
   14001fcae:	add    BYTE PTR [rax],al
   14001fcb0:	enter  0x25a,0x0
   14001fcb4:	add    BYTE PTR [rax],al
   14001fcb6:	add    BYTE PTR [rax],al
   14001fcb8:	(bad)  
   14001fcb9:	pop    rdx
   14001fcba:	add    al,BYTE PTR [rax]
   14001fcbc:	add    BYTE PTR [rax],al
   14001fcbe:	add    BYTE PTR [rax],al
   14001fcc0:	cmp    al,0x5b
   14001fcc2:	add    al,BYTE PTR [rax]
   14001fcc4:	add    BYTE PTR [rax],al
   14001fcc6:	add    BYTE PTR [rax],al
   14001fcc8:	js     0x14001fd25
   14001fcca:	add    al,BYTE PTR [rax]
   14001fccc:	add    BYTE PTR [rax],al
   14001fcce:	add    BYTE PTR [rax],al
   14001fcd0:	mov    al,0x5b
   14001fcd2:	add    al,BYTE PTR [rax]
   14001fcd4:	add    BYTE PTR [rax],al
   14001fcd6:	add    BYTE PTR [rax],al
   14001fcd8:	fcomp  DWORD PTR [rbx+0x2]
   14001fcdb:	add    BYTE PTR [rax],al
   14001fcdd:	add    BYTE PTR [rax],al
   14001fcdf:	add    BYTE PTR [rdx],dl
   14001fce1:	pop    rsp
   14001fce2:	add    al,BYTE PTR [rax]
   14001fce4:	add    BYTE PTR [rax],al
   14001fce6:	add    BYTE PTR [rax],al
   14001fce8:	mov    BYTE PTR [rdx+rax*1+0x0],bl
   14001fcec:	add    BYTE PTR [rax],al
   14001fcee:	add    BYTE PTR [rax],al
   14001fcf0:	mov    al,0x5c
   14001fcf2:	add    al,BYTE PTR [rax]
   14001fcf4:	add    BYTE PTR [rax],al
   14001fcf6:	add    BYTE PTR [rax],al
   14001fcf8:	(bad)  
   14001fcf9:	pop    rsp
   14001fcfa:	add    al,BYTE PTR [rax]
   14001fcfc:	add    BYTE PTR [rax],al
   14001fcfe:	add    BYTE PTR [rax],al
   14001fd00:	or     al,0x5d
   14001fd02:	add    al,BYTE PTR [rax]
   14001fd04:	add    BYTE PTR [rax],al
   14001fd06:	add    BYTE PTR [rax],al
   14001fd08:	ins    BYTE PTR es:[rdi],dx
   14001fd09:	pop    rbp
   14001fd0a:	add    al,BYTE PTR [rax]
   14001fd0c:	add    BYTE PTR [rax],al
   14001fd0e:	add    BYTE PTR [rax],al
   14001fd10:	mov    edx,0x25d
   14001fd15:	add    BYTE PTR [rax],al
   14001fd17:	add    dl,bh
   14001fd19:	pop    rbp
   14001fd1a:	add    al,BYTE PTR [rax]
   14001fd1c:	add    BYTE PTR [rax],al
   14001fd1e:	add    BYTE PTR [rax],al
   14001fd20:	cmp    BYTE PTR [rsi+0x2],bl
   14001fd23:	add    BYTE PTR [rax],al
   14001fd25:	add    BYTE PTR [rax],al
   14001fd27:	add    BYTE PTR [rdx+0x5e],dh
   14001fd2a:	add    al,BYTE PTR [rax]
   14001fd2c:	add    BYTE PTR [rax],al
   14001fd2e:	add    BYTE PTR [rax],al
   14001fd30:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001fd31:	pop    rsi
   14001fd32:	add    al,BYTE PTR [rax]
   14001fd34:	add    BYTE PTR [rax],al
   14001fd36:	add    BYTE PTR [rax],al
   14001fd38:	hlt    
   14001fd39:	pop    rsi
   14001fd3a:	add    al,BYTE PTR [rax]
   14001fd3c:	add    BYTE PTR [rax],al
   14001fd3e:	add    BYTE PTR [rax],al
   14001fd40:	cmp    al,0x5f
   14001fd42:	add    al,BYTE PTR [rax]
   14001fd44:	add    BYTE PTR [rax],al
   14001fd46:	add    BYTE PTR [rax],al
   14001fd48:	mov    BYTE PTR [rdi+0x2],bl
   14001fd4b:	add    BYTE PTR [rax],al
   14001fd4d:	add    BYTE PTR [rax],al
   14001fd4f:	add    BYTE PTR [rdx+0x25f],ah
   14001fd55:	add    BYTE PTR [rax],al
   14001fd57:	add    BYTE PTR [rsi],cl
   14001fd59:	(bad)  
   14001fd5a:	add    al,BYTE PTR [rax]
   14001fd5c:	add    BYTE PTR [rax],al
   14001fd5e:	add    BYTE PTR [rax],al
   14001fd60:	cmp    ah,BYTE PTR [rax+0x2]
   14001fd63:	add    BYTE PTR [rax],al
   14001fd65:	add    BYTE PTR [rax],al
   14001fd67:	add    BYTE PTR [rax+riz*2+0x2],ch
   14001fd6b:	add    BYTE PTR [rax],al
   14001fd6d:	add    BYTE PTR [rax],al
   14001fd6f:	add    BYTE PTR [rsi+0x260],cl
   14001fd75:	add    BYTE PTR [rax],al
   14001fd77:	add    al,dl
   14001fd79:	(bad)  
   14001fd7a:	add    al,BYTE PTR [rax]
   14001fd7c:	add    BYTE PTR [rax],al
   14001fd7e:	add    BYTE PTR [rax],al
   14001fd80:	out    dx,al
   14001fd81:	(bad)  
   14001fd82:	add    al,BYTE PTR [rax]
   14001fd84:	add    BYTE PTR [rax],al
   14001fd86:	add    BYTE PTR [rax],al
   14001fd88:	and    al,0x61
   14001fd8a:	add    al,BYTE PTR [rax]
   14001fd8c:	add    BYTE PTR [rax],al
   14001fd8e:	add    BYTE PTR [rax],al
   14001fd90:	ins    BYTE PTR es:[rdi],dx
   14001fd91:	(bad)  
   14001fd92:	add    al,BYTE PTR [rax]
   14001fd94:	add    BYTE PTR [rax],al
   14001fd96:	add    BYTE PTR [rax],al
   14001fd98:	stos   BYTE PTR es:[rdi],al
   14001fd99:	(bad)  
   14001fd9a:	add    al,BYTE PTR [rax]
   14001fd9c:	add    BYTE PTR [rax],al
   14001fd9e:	add    BYTE PTR [rax],al
   14001fda0:	mul    BYTE PTR [rcx+0x2]
   14001fda3:	add    BYTE PTR [rax],al
   14001fda5:	add    BYTE PTR [rax],al
   14001fda7:	add    BYTE PTR [rdx+riz*2],bl
   14001fdaa:	add    al,BYTE PTR [rax]
   14001fdac:	add    BYTE PTR [rax],al
   14001fdae:	add    BYTE PTR [rax],al
   14001fdb0:	rex.R (bad) 
   14001fdb3:	add    BYTE PTR [rax],al
   14001fdb5:	add    BYTE PTR [rax],al
   14001fdb7:	add    BYTE PTR [rdx+riz*2+0x2],ch
   14001fdbb:	add    BYTE PTR [rax],al
   14001fdbd:	add    BYTE PTR [rax],al
   14001fdbf:	add    BYTE PTR [rax+0x262],ah
   14001fdc5:	add    BYTE PTR [rax],al
   14001fdc7:	add    ah,cl
   14001fdc9:	(bad)  
   14001fdcb:	add    BYTE PTR [rax],al
   14001fdcd:	add    BYTE PTR [rax],al
   14001fdcf:	add    BYTE PTR [rbx+riz*2],cl
   14001fdd2:	add    al,BYTE PTR [rax]
   14001fdd4:	add    BYTE PTR [rax],al
   14001fdd6:	add    BYTE PTR [rax],al
   14001fdd8:	movsxd eax,DWORD PTR ds:[rdx]
   14001fddb:	add    BYTE PTR [rax],al
   14001fddd:	add    BYTE PTR [rax],al
   14001fddf:	add    BYTE PTR [rax+0x63],ch
   14001fde2:	add    al,BYTE PTR [rax]
   14001fde4:	add    BYTE PTR [rax],al
   14001fde6:	add    BYTE PTR [rax],al
   14001fde8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001fde9:	movsxd eax,DWORD PTR [rdx]
   14001fdeb:	add    BYTE PTR [rax],al
   14001fded:	add    BYTE PTR [rax],al
   14001fdef:	add    al,dl
   14001fdf1:	movsxd eax,DWORD PTR [rdx]
   14001fdf3:	add    BYTE PTR [rax],al
   14001fdf5:	add    BYTE PTR [rax],al
   14001fdf7:	add    BYTE PTR [rdx],al
   14001fdf9:	add    al,BYTE PTR fs:[rax]
   14001fdfc:	add    BYTE PTR [rax],al
   14001fdfe:	add    BYTE PTR [rax],al
   14001fe00:	cmp    ah,BYTE PTR [rdx+rax*1+0x0]
   14001fe04:	add    BYTE PTR [rax],al
   14001fe06:	add    BYTE PTR [rax],al
   14001fe08:	je     0x14001fe6e
   14001fe0a:	add    al,BYTE PTR [rax]
   14001fe0c:	add    BYTE PTR [rax],al
   14001fe0e:	add    BYTE PTR [rax],al
   14001fe10:	mov    dl,0x64
   14001fe12:	add    al,BYTE PTR [rax]
   14001fe14:	add    BYTE PTR [rax],al
   14001fe16:	add    BYTE PTR [rax],al
   14001fe18:	call   0x140020081
   14001fe1d:	add    BYTE PTR [rax],al
   14001fe1f:	add    BYTE PTR [rdx],bl
   14001fe21:	add    al,BYTE PTR gs:[rax]
   14001fe24:	add    BYTE PTR [rax],al
   14001fe26:	add    BYTE PTR [rax],al
   14001fe28:	rex.WRX
   14001fe29:	add    al,BYTE PTR gs:[rax]
   14001fe2c:	add    BYTE PTR [rax],al
   14001fe2e:	add    BYTE PTR [rax],al
   14001fe30:	test   BYTE PTR [rbp+0x2],ah
   14001fe33:	add    BYTE PTR [rax],al
   14001fe35:	add    BYTE PTR [rax],al
   14001fe37:	add    BYTE PTR [rax+0x265],bh
   14001fe3d:	add    BYTE PTR [rax],al
   14001fe3f:	add    dh,ch
   14001fe41:	add    al,BYTE PTR gs:[rax]
   14001fe44:	add    BYTE PTR [rax],al
   14001fe46:	add    BYTE PTR [rax],al
   14001fe48:	and    BYTE PTR [rsi+0x2],ah
   14001fe4b:	add    BYTE PTR [rax],al
   14001fe4d:	add    BYTE PTR [rax],al
   14001fe4f:	add    BYTE PTR [rsi+riz*2+0x2],dl
   14001fe53:	add    BYTE PTR [rax],al
   14001fe55:	add    BYTE PTR [rax],al
   14001fe57:	add    BYTE PTR [rdx+0x266],dl
   14001fe5d:	add    BYTE PTR [rax],al
   14001fe5f:	add    ah,cl
   14001fe61:	data16 add al,BYTE PTR [rax]
   14001fe64:	add    BYTE PTR [rax],al
   14001fe66:	add    BYTE PTR [rax],al
   14001fe68:	add    al,0x67
   14001fe6a:	add    al,BYTE PTR [rax]
   14001fe6c:	add    BYTE PTR [rax],al
   14001fe6e:	add    BYTE PTR [rax],al
   14001fe70:	add    al,BYTE PTR ds:[eax]
   14001fe74:	add    BYTE PTR [rax],al
   14001fe76:	add    BYTE PTR [rax],al
   14001fe78:	outs   dx,BYTE PTR ds:[rsi]
   14001fe79:	add    al,BYTE PTR [eax]
   14001fe7c:	add    BYTE PTR [rax],al
   14001fe7e:	add    BYTE PTR [rax],al
   14001fe80:	sahf   
   14001fe81:	add    al,BYTE PTR [eax]
   14001fe84:	add    BYTE PTR [rax],al
   14001fe86:	add    BYTE PTR [rax],al
   14001fe88:	int3   
   14001fe89:	add    al,BYTE PTR [eax]
   14001fe8c:	add    BYTE PTR [rax],al
   14001fe8e:	add    BYTE PTR [rax],al
   14001fe90:	or     ch,BYTE PTR [rax+0x2]
   14001fe93:	add    BYTE PTR [rax],al
   14001fe95:	add    BYTE PTR [rax],al
   14001fe97:	add    BYTE PTR [rax+rbp*2+0x2],dl
   14001fe9b:	add    BYTE PTR [rax],al
   14001fe9d:	add    BYTE PTR [rax],al
   14001fe9f:	add    BYTE PTR [rax+0x268],al
   14001fea5:	add    BYTE PTR [rax],al
   14001fea7:	add    BYTE PTR [rax+rbp*2+0x2],bh
   14001feae:	add    BYTE PTR [rax],al
   14001feb0:	out    0x68,al
   14001feb2:	add    al,BYTE PTR [rax]
   14001feb4:	add    BYTE PTR [rax],al
   14001feb6:	add    BYTE PTR [rax],al
   14001feb8:	and    BYTE PTR [rcx+0x2],ch
   14001febb:	add    BYTE PTR [rax],al
   14001febd:	add    BYTE PTR [rax],al
   14001febf:	add    BYTE PTR [rdx+0x69],bl
   14001fec2:	add    al,BYTE PTR [rax]
   14001fec4:	add    BYTE PTR [rax],al
   14001fec6:	add    BYTE PTR [rax],al
   14001fec8:	(bad)  
   14001fec9:	imul   eax,DWORD PTR [rdx],0x0
   14001fecf:	add    dh,dl
   14001fed1:	imul   eax,DWORD PTR [rdx],0x0
   14001fed7:	add    BYTE PTR [rsi],cl
   14001fed9:	push   0x2
   14001fedb:	add    BYTE PTR [rax],al
   14001fedd:	add    BYTE PTR [rax],al
   14001fedf:	add    BYTE PTR [rsi+0x6a],al
   14001fee2:	add    al,BYTE PTR [rax]
   14001fee4:	add    BYTE PTR [rax],al
   14001fee6:	add    BYTE PTR [rax],al
   14001fee8:	(bad)  
   14001fee9:	push   0x2
   14001feeb:	add    BYTE PTR [rax],al
   14001feed:	add    BYTE PTR [rax],al
   14001feef:	add    BYTE PTR [rax+0x6a],bh
   14001fef2:	add    al,BYTE PTR [rax]
   14001fef4:	add    BYTE PTR [rax],al
   14001fef6:	add    BYTE PTR [rax],al
   14001fef8:	movabs ds:0xc60000000000026a,al
   14001ff01:	push   0x2
   14001ff03:	add    BYTE PTR [rax],al
   14001ff05:	add    BYTE PTR [rax],al
   14001ff07:	add    BYTE PTR [rdx],dl
   14001ff09:	imul   eax,DWORD PTR [rdx],0x0
   14001ff0c:	add    BYTE PTR [rax],al
   14001ff0e:	add    BYTE PTR [rax],al
   14001ff10:	xor    al,0x6b
   14001ff12:	add    al,BYTE PTR [rax]
   14001ff14:	add    BYTE PTR [rax],al
   14001ff16:	add    BYTE PTR [rax],al
   14001ff18:	(bad)  
   14001ff19:	imul   eax,DWORD PTR [rdx],0x0
   14001ff1c:	add    BYTE PTR [rax],al
   14001ff1e:	add    BYTE PTR [rax],al
   14001ff20:	mov    WORD PTR [rbx+0x2],gs
   14001ff23:	add    BYTE PTR [rax],al
   14001ff25:	add    BYTE PTR [rax],al
   14001ff27:	add    ah,cl
   14001ff29:	imul   eax,DWORD PTR [rdx],0x0
   14001ff2c:	add    BYTE PTR [rax],al
   14001ff2e:	add    BYTE PTR [rax],al
   14001ff30:	in     al,dx
   14001ff31:	imul   eax,DWORD PTR [rdx],0x0
   14001ff34:	add    BYTE PTR [rax],al
   14001ff36:	add    BYTE PTR [rax],al
   14001ff38:	sbb    BYTE PTR [rdx+rax*1+0x0],ch
   14001ff3c:	add    BYTE PTR [rax],al
   14001ff3e:	add    BYTE PTR [rax],al
   14001ff40:	push   rdx
   14001ff41:	ins    BYTE PTR es:[rdi],dx
   14001ff42:	add    al,BYTE PTR [rax]
   14001ff44:	add    BYTE PTR [rax],al
   14001ff46:	add    BYTE PTR [rax],al
   14001ff48:	sub    BYTE PTR [rdx+rax*1+0x0],0x0
   14001ff4d:	add    BYTE PTR [rax],al
   14001ff4f:	add    BYTE PTR [rsi+0x26c],ah
   14001ff55:	add    BYTE PTR [rax],al
   14001ff57:	add    dl,ah
   14001ff59:	ins    BYTE PTR es:[rdi],dx
   14001ff5a:	add    al,BYTE PTR [rax]
   14001ff5c:	add    BYTE PTR [rax],al
   14001ff5e:	add    BYTE PTR [rax],al
   14001ff60:	or     BYTE PTR [rbp+0x2],ch
   14001ff63:	add    BYTE PTR [rax],al
   14001ff65:	add    BYTE PTR [rax],al
   14001ff67:	add    BYTE PTR [rsi],ch
   14001ff69:	ins    DWORD PTR es:[rdi],dx
   14001ff6a:	add    al,BYTE PTR [rax]
   14001ff6c:	add    BYTE PTR [rax],al
   14001ff6e:	add    BYTE PTR [rax],al
   14001ff70:	pop    rsi
   14001ff71:	ins    DWORD PTR es:[rdi],dx
   14001ff72:	add    al,BYTE PTR [rax]
   14001ff74:	add    BYTE PTR [rax],al
   14001ff76:	add    BYTE PTR [rax],al
   14001ff78:	je     0x14001ffe7
   14001ff7a:	add    al,BYTE PTR [rax]
   14001ff7c:	add    BYTE PTR [rax],al
   14001ff7e:	add    BYTE PTR [rax],al
   14001ff80:	mov    ch,BYTE PTR [rbp+0x2]
   14001ff83:	add    BYTE PTR [rax],al
   14001ff85:	add    BYTE PTR [rax],al
   14001ff87:	add    BYTE PTR [rsi+0x26d],dh
   14001ff8d:	add    BYTE PTR [rax],al
   14001ff8f:	add    dl,dl
   14001ff91:	ins    DWORD PTR es:[rdi],dx
   14001ff92:	add    al,BYTE PTR [rax]
   14001ff94:	add    BYTE PTR [rax],al
   14001ff96:	add    BYTE PTR [rax],al
   14001ff98:	out    dx,al
   14001ff99:	ins    DWORD PTR es:[rdi],dx
   14001ff9a:	add    al,BYTE PTR [rax]
   14001ff9c:	add    BYTE PTR [rax],al
   14001ff9e:	add    BYTE PTR [rax],al
   14001ffa0:	(bad)  
   14001ffa1:	outs   dx,BYTE PTR ds:[rsi]
   14001ffa2:	add    al,BYTE PTR [rax]
   14001ffa4:	add    BYTE PTR [rax],al
   14001ffa6:	add    BYTE PTR [rax],al
   14001ffa8:	outs   dx,BYTE PTR ds:[rsi]
   14001ffaa:	add    al,BYTE PTR [rax]
   14001ffac:	add    BYTE PTR [rax],al
   14001ffae:	add    BYTE PTR [rax],al
   14001ffb0:	jp     0x140020020
   14001ffb2:	add    al,BYTE PTR [rax]
   14001ffb4:	add    BYTE PTR [rax],al
   14001ffb6:	add    BYTE PTR [rax],al
   14001ffb8:	test   al,0x6e
   14001ffba:	add    al,BYTE PTR [rax]
   14001ffbc:	add    BYTE PTR [rax],al
   14001ffbe:	add    BYTE PTR [rax],al
   14001ffc0:	(bad)  
   14001ffc1:	outs   dx,BYTE PTR ds:[rsi]
   14001ffc2:	add    al,BYTE PTR [rax]
   14001ffc4:	add    BYTE PTR [rax],al
   14001ffc6:	add    BYTE PTR [rax],al
   14001ffc8:	adc    al,0x6f
   14001ffca:	add    al,BYTE PTR [rax]
   14001ffcc:	add    BYTE PTR [rax],al
   14001ffce:	add    BYTE PTR [rax],al
   14001ffd0:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001ffd2:	add    al,BYTE PTR [rax]
   14001ffd4:	add    BYTE PTR [rax],al
   14001ffd6:	add    BYTE PTR [rax],al
   14001ffd8:	outs   dx,BYTE PTR ds:[rsi]
   14001ffd9:	outs   dx,DWORD PTR ds:[rsi]
   14001ffda:	add    al,BYTE PTR [rax]
   14001ffdc:	add    BYTE PTR [rax],al
   14001ffde:	add    BYTE PTR [rax],al
   14001ffe0:	stos   BYTE PTR es:[rdi],al
   14001ffe1:	outs   dx,DWORD PTR ds:[rsi]
   14001ffe2:	add    al,BYTE PTR [rax]
   14001ffe4:	add    BYTE PTR [rax],al
   14001ffe6:	add    BYTE PTR [rax],al
   14001ffe8:	loop   0x140020013
   14001ffea:	add    al,BYTE PTR [rax]
   14001ffec:	add    BYTE PTR [rax],al
   14001ffee:	add    BYTE PTR [rax],al
   14001fff0:	movabs ds:0x7600000000000229,al
   14001fff9:	sub    DWORD PTR [rdx],eax
   14001fffb:	add    BYTE PTR [rax],al
   14001fffd:	add    BYTE PTR [rax],al
   14001ffff:	add    BYTE PTR [rdx+0x29],al
   140020002:	add    al,BYTE PTR [rax]
   140020004:	add    BYTE PTR [rax],al
   140020006:	add    BYTE PTR [rax],al
   140020008:	clc    
   140020009:	sub    BYTE PTR [rdx],al
   14002000b:	add    BYTE PTR [rax],al
   14002000d:	add    BYTE PTR [rax],al
   14002000f:	add    BYTE PTR [rdx+0x228],bh
   140020015:	add    BYTE PTR [rax],al
   140020017:	add    BYTE PTR [rax+rbp*1+0x2],cl
   14002001e:	add    BYTE PTR [rax],al
   140020020:	pop    rsp
   140020021:	sub    BYTE PTR [rdx],al
   140020023:	add    BYTE PTR [rax],al
   140020025:	add    BYTE PTR [rax],al
   140020027:	add    BYTE PTR [rdx],ah
   140020029:	sub    BYTE PTR [rdx],al
   14002002b:	add    BYTE PTR [rax],al
   14002002d:	add    BYTE PTR [rax],al
   14002002f:	add    dl,ch
   140020031:	(bad)  
   140020032:	add    al,BYTE PTR [rax]
   140020034:	add    BYTE PTR [rax],al
   140020036:	add    BYTE PTR [rax],al
   140020038:	mov    al,0x27
   14002003a:	add    al,BYTE PTR [rax]
   14002003c:	add    BYTE PTR [rax],al
   14002003e:	add    BYTE PTR [rax],al
   140020040:	jb     0x140020069
   140020042:	add    al,BYTE PTR [rax]
   140020044:	add    BYTE PTR [rax],al
   140020046:	add    BYTE PTR [rax],al
   140020048:	rex (bad) 
   14002004a:	add    al,BYTE PTR [rax]
   14002004c:	add    BYTE PTR [rax],al
   14002004e:	add    BYTE PTR [rax],al
   140020050:	or     ah,BYTE PTR [rdi]
   140020052:	add    al,BYTE PTR [rax]
   140020054:	add    BYTE PTR [rax],al
   140020056:	add    BYTE PTR [rax],al
   140020058:	movabs ds:0xd600000000000226,al
   140020061:	add    al,BYTE PTR es:[rax]
   140020064:	add    BYTE PTR [rax],al
   140020066:	add    BYTE PTR [rax],al
   140020068:	ins    BYTE PTR es:[rdi],dx
   140020069:	add    al,BYTE PTR es:[rax]
   14002006c:	add    BYTE PTR [rax],al
   14002006e:	add    BYTE PTR [rax],al
   140020070:	cs add al,BYTE PTR es:[rax]
   140020074:	add    BYTE PTR [rax],al
   140020076:	add    BYTE PTR [rax],al
   140020078:	hlt    
   140020079:	and    eax,0x2
   14002007e:	add    BYTE PTR [rax],al
   140020080:	mov    esp,0x225
   140020085:	add    BYTE PTR [rax],al
   140020087:	add    BYTE PTR [rbp+riz*1+0x2],cl
   14002008e:	add    BYTE PTR [rax],al
   140020090:	fs and eax,0x2
   140020096:	add    BYTE PTR [rax],al
   140020098:	cmp    ah,BYTE PTR [rip+0x2]        # 0x1400200a0
   14002009e:	add    BYTE PTR [rax],al
   1400200a0:	cld    
   1400200a1:	and    al,0x2
   1400200a3:	add    BYTE PTR [rax],al
   1400200a5:	add    BYTE PTR [rax],al
   1400200a7:	add    dl,dl
   1400200a9:	and    al,0x2
   1400200ab:	add    BYTE PTR [rax],al
   1400200ad:	add    BYTE PTR [rax],al
   1400200af:	add    BYTE PTR [rax+0x224],ah
   1400200b5:	add    BYTE PTR [rax],al
   1400200b7:	add    BYTE PTR [rsi+0x24],bh
   1400200ba:	add    al,BYTE PTR [rax]
   1400200bc:	add    BYTE PTR [rax],al
   1400200be:	add    BYTE PTR [rax],al
   1400200c0:	push   rax
   1400200c1:	and    al,0x2
   1400200c3:	add    BYTE PTR [rax],al
   1400200c5:	add    BYTE PTR [rax],al
   1400200c7:	add    BYTE PTR [rax],ch
   1400200c9:	and    al,0x2
   1400200cb:	add    BYTE PTR [rax],al
   1400200cd:	add    BYTE PTR [rax],al
   1400200cf:	add    dh,bh
   1400200d1:	and    eax,DWORD PTR [rdx]
   1400200d3:	add    BYTE PTR [rax],al
   1400200d5:	add    BYTE PTR [rax],al
   1400200d7:	add    al,dl
   1400200d9:	and    eax,DWORD PTR [rdx]
   1400200db:	add    BYTE PTR [rax],al
   1400200dd:	add    BYTE PTR [rax],al
   1400200df:	add    BYTE PTR [rsi+0x223],al
   1400200e5:	add    BYTE PTR [rax],al
   1400200e7:	add    BYTE PTR [rdx+0x23],bl
   1400200ea:	add    al,BYTE PTR [rax]
   1400200ec:	add    BYTE PTR [rax],al
   1400200ee:	add    BYTE PTR [rax],al
   1400200f0:	and    eax,DWORD PTR cs:[rdx]
   1400200f3:	add    BYTE PTR [rax],al
   1400200f5:	add    BYTE PTR [rax],al
   1400200f7:	add    BYTE PTR [rbx+riz*1],al
   1400200fa:	add    al,BYTE PTR [rax]
   1400200fc:	add    BYTE PTR [rax],al
   1400200fe:	add    BYTE PTR [rax],al
   140020100:	out    0x22,al
   140020102:	add    al,BYTE PTR [rax]
   140020104:	add    BYTE PTR [rax],al
   140020106:	add    BYTE PTR [rax],al
   140020108:	mov    dh,0x22
   14002010a:	add    al,BYTE PTR [rax]
   14002010c:	add    BYTE PTR [rax],al
   14002010e:	add    BYTE PTR [rax],al
   140020110:	xchg   BYTE PTR [rdx],ah
   140020112:	add    al,BYTE PTR [rax]
   140020114:	add    BYTE PTR [rax],al
   140020116:	add    BYTE PTR [rax],al
   140020118:	push   rsi
   140020119:	and    al,BYTE PTR [rdx]
   14002011b:	add    BYTE PTR [rax],al
   14002011d:	add    BYTE PTR [rax],al
   14002011f:	add    BYTE PTR [rsi],dl
   140020121:	and    al,BYTE PTR [rdx]
   140020123:	add    BYTE PTR [rax],al
   140020125:	add    BYTE PTR [rax],al
   140020127:	add    dl,ch
   140020129:	and    DWORD PTR [rdx],eax
   14002012b:	add    BYTE PTR [rax],al
   14002012d:	add    BYTE PTR [rax],al
   14002012f:	add    BYTE PTR [rsi+0x221],dh
   140020135:	add    BYTE PTR [rax],al
   140020137:	add    BYTE PTR [rcx+riz*1+0x2],cl
   14002013e:	add    BYTE PTR [rax],al
   140020140:	(bad)  
   140020141:	and    DWORD PTR [rdx],eax
   140020143:	add    BYTE PTR [rax],al
   140020145:	add    BYTE PTR [rax],al
   140020147:	add    BYTE PTR [rsi],ah
   140020149:	and    DWORD PTR [rdx],eax
   14002014b:	add    BYTE PTR [rax],al
   14002014d:	add    BYTE PTR [rax],al
   14002014f:	add    al,bh
   140020151:	and    BYTE PTR [rdx],al
   140020153:	add    BYTE PTR [rax],al
   140020155:	add    BYTE PTR [rax],al
   140020157:	add    BYTE PTR [rax+riz*1+0x2],bh
   14002015e:	add    BYTE PTR [rax],al
   140020160:	mov    WORD PTR [rax],fs
   140020162:	add    al,BYTE PTR [rax]
   140020164:	add    BYTE PTR [rax],al
   140020166:	add    BYTE PTR [rax],al
   140020168:	pop    rdx
   140020169:	and    BYTE PTR [rdx],al
   14002016b:	add    BYTE PTR [rax],al
   14002016d:	add    BYTE PTR [rax],al
   14002016f:	add    BYTE PTR [rdx],ch
   140020171:	and    BYTE PTR [rdx],al
   140020173:	add    BYTE PTR [rax],al
   140020175:	add    BYTE PTR [rax],al
   140020177:	add    al,bh
   140020179:	(bad)  
   14002017a:	add    al,BYTE PTR [rax]
   14002017c:	add    BYTE PTR [rax],al
   14002017e:	add    BYTE PTR [rax],al
   140020180:	(bad)  
   140020181:	(bad)  
   140020182:	add    al,BYTE PTR [rax]
   140020184:	add    BYTE PTR [rax],al
   140020186:	add    BYTE PTR [rax],al
   140020188:	xchg   esi,eax
   140020189:	(bad)  
   14002018a:	add    al,BYTE PTR [rax]
   14002018c:	add    BYTE PTR [rax],al
   14002018e:	add    BYTE PTR [rax],al
   140020190:	(bad)  
   140020191:	(bad)  
   140020192:	add    al,BYTE PTR [rax]
   140020194:	add    BYTE PTR [rax],al
   140020196:	add    BYTE PTR [rax],al
   140020198:	sub    al,0x1f
   14002019a:	add    al,BYTE PTR [rax]
   14002019c:	add    BYTE PTR [rax],al
   14002019e:	add    BYTE PTR [rax],al
   1400201a0:	clc    
   1400201a1:	(bad)  
   1400201a2:	add    al,BYTE PTR [rax]
   1400201a4:	add    BYTE PTR [rax],al
   1400201a6:	add    BYTE PTR [rax],al
   1400201a8:	(bad)  
   1400201a9:	(bad)  
   1400201aa:	add    al,BYTE PTR [rax]
   1400201ac:	add    BYTE PTR [rax],al
   1400201ae:	add    BYTE PTR [rax],al
   1400201b0:	test   al,0x1e
   1400201b2:	add    al,BYTE PTR [rax]
   1400201b4:	add    BYTE PTR [rax],al
   1400201b6:	add    BYTE PTR [rax],al
   1400201b8:	(bad)  
   1400201b9:	(bad)  
   1400201ba:	add    al,BYTE PTR [rax]
   1400201bc:	add    BYTE PTR [rax],al
   1400201be:	add    BYTE PTR [rax],al
   1400201c0:	(bad)  
   1400201c1:	(bad)  
   1400201c2:	add    al,BYTE PTR [rax]
   1400201c4:	add    BYTE PTR [rax],al
   1400201c6:	add    BYTE PTR [rax],al
   1400201c8:	cmp    bl,BYTE PTR [rsi]
   1400201ca:	add    al,BYTE PTR [rax]
   1400201cc:	add    BYTE PTR [rax],al
   1400201ce:	add    BYTE PTR [rax],al
   1400201d0:	(bad)  
   1400201d1:	sbb    eax,0x2
   1400201d6:	add    BYTE PTR [rax],al
   1400201d8:	fcomp  DWORD PTR [rip+0x2]        # 0x1400201e0
   1400201de:	add    BYTE PTR [rax],al
   1400201e0:	stos   BYTE PTR es:[rdi],al
   1400201e1:	sbb    eax,0x2
   1400201e6:	add    BYTE PTR [rax],al
   1400201e8:	pop    rsp
   1400201e9:	sbb    eax,0x2
   1400201ee:	add    BYTE PTR [rax],al
   1400201f0:	xor    al,0x1d
   1400201f2:	add    al,BYTE PTR [rax]
   1400201f4:	add    BYTE PTR [rax],al
   1400201f6:	add    BYTE PTR [rax],al
   1400201f8:	or     BYTE PTR [rip+0x2],bl        # 0x140020200
   1400201fe:	add    BYTE PTR [rax],al
   140020200:	in     al,0x1c
   140020202:	add    al,BYTE PTR [rax]
   140020204:	add    BYTE PTR [rax],al
   140020206:	add    BYTE PTR [rax],al
   140020208:	mov    ah,0x1c
   14002020a:	add    al,BYTE PTR [rax]
   14002020c:	add    BYTE PTR [rax],al
   14002020e:	add    BYTE PTR [rax],al
   140020210:	mov    WORD PTR [rdx+rax*1],ds
   140020213:	add    BYTE PTR [rax],al
   140020215:	add    BYTE PTR [rax],al
   140020217:	add    BYTE PTR [rax+0x1c],ah
   14002021a:	add    al,BYTE PTR [rax]
   14002021c:	add    BYTE PTR [rax],al
   14002021e:	add    BYTE PTR [rax],al
   140020220:	ds sbb al,0x2
   140020223:	add    BYTE PTR [rax],al
   140020225:	add    BYTE PTR [rax],al
   140020227:	add    BYTE PTR [rsp+rbx*1],dl
   14002022a:	add    al,BYTE PTR [rax]
   14002022c:	add    BYTE PTR [rax],al
   14002022e:	add    BYTE PTR [rax],al
   140020230:	in     al,0x1b
   140020232:	add    al,BYTE PTR [rax]
   140020234:	add    BYTE PTR [rax],al
   140020236:	add    BYTE PTR [rax],al
   140020238:	cwde   
   140020239:	sbb    eax,DWORD PTR [rdx]
   14002023b:	add    BYTE PTR [rax],al
   14002023d:	add    BYTE PTR [rax],al
   14002023f:	add    BYTE PTR [rdx+0x1b],ch
   140020242:	add    al,BYTE PTR [rax]
   140020244:	add    BYTE PTR [rax],al
   140020246:	add    BYTE PTR [rax],al
   140020248:	cmp    al,0x1b
   14002024a:	add    al,BYTE PTR [rax]
   14002024c:	add    BYTE PTR [rax],al
   14002024e:	add    BYTE PTR [rax],al
   140020250:	adc    bl,BYTE PTR [rbx]
   140020252:	add    al,BYTE PTR [rax]
   140020254:	add    BYTE PTR [rax],al
   140020256:	add    BYTE PTR [rax],al
   140020258:	enter  0x21a,0x0
   14002025c:	add    BYTE PTR [rax],al
   14002025e:	add    BYTE PTR [rax],al
   140020260:	xchg   esp,eax
   140020261:	sbb    al,BYTE PTR [rdx]
   140020263:	add    BYTE PTR [rax],al
   140020265:	add    BYTE PTR [rax],al
   140020267:	add    BYTE PTR [rdx+rbx*1+0x2],dh
   14002026b:	add    BYTE PTR [rax],al
   14002026d:	add    BYTE PTR [rax],al
   14002026f:	add    BYTE PTR [rax+0x1a],cl
   140020272:	add    al,BYTE PTR [rax]
   140020274:	add    BYTE PTR [rax],al
   140020276:	add    BYTE PTR [rax],al
   140020278:	and    al,0x1a
   14002027a:	add    al,BYTE PTR [rax]
   14002027c:	add    BYTE PTR [rax],al
   14002027e:	add    BYTE PTR [rax],al
   140020280:	hlt    
   140020281:	sbb    DWORD PTR [rdx],eax
   140020283:	add    BYTE PTR [rax],al
   140020285:	add    BYTE PTR [rax],al
   140020287:	add    ah,cl
   140020289:	sbb    DWORD PTR [rdx],eax
   14002028b:	add    BYTE PTR [rax],al
   14002028d:	add    BYTE PTR [rax],al
   14002028f:	add    BYTE PTR [rax+0x219],ah
   140020295:	add    BYTE PTR [rax],al
   140020297:	add    BYTE PTR [rdx+0x219],al
   14002029d:	add    BYTE PTR [rax],al
   14002029f:	add    BYTE PTR [rcx+rbx*1+0x2],bl
   1400202a3:	add    BYTE PTR [rax],al
   1400202a5:	add    BYTE PTR [rax],al
   1400202a7:	add    BYTE PTR [rcx+rbx*1],ch
   1400202aa:	add    al,BYTE PTR [rax]
   1400202ac:	add    BYTE PTR [rax],al
   1400202ae:	add    BYTE PTR [rax],al
   1400202b0:	loopne 0x1400202ca
   1400202b2:	add    al,BYTE PTR [rax]
   1400202b4:	add    BYTE PTR [rax],al
   1400202b6:	add    BYTE PTR [rax],al
   1400202b8:	mov    dl,0x18
   1400202ba:	add    al,BYTE PTR [rax]
   1400202bc:	add    BYTE PTR [rax],al
   1400202be:	add    BYTE PTR [rax],al
   1400202c0:	test   BYTE PTR [rax],bl
   1400202c2:	add    al,BYTE PTR [rax]
   1400202c4:	add    BYTE PTR [rax],al
   1400202c6:	add    BYTE PTR [rax],al
   1400202c8:	pop    rdx
   1400202c9:	sbb    BYTE PTR [rdx],al
   1400202cb:	add    BYTE PTR [rax],al
   1400202cd:	add    BYTE PTR [rax],al
   1400202cf:	add    BYTE PTR [rax+rbx*1],bh
   1400202d2:	add    al,BYTE PTR [rax]
   1400202d4:	add    BYTE PTR [rax],al
   1400202d6:	add    BYTE PTR [rax],al
   1400202d8:	adc    bl,BYTE PTR [rax]
   1400202da:	add    al,BYTE PTR [rax]
   1400202dc:	add    BYTE PTR [rax],al
   1400202de:	add    BYTE PTR [rax],al
   1400202e0:	loop   0x1400202f9
   1400202e2:	add    al,BYTE PTR [rax]
   1400202e4:	add    BYTE PTR [rax],al
   1400202e6:	add    BYTE PTR [rax],al
   1400202e8:	mov    dl,0x17
   1400202ea:	add    al,BYTE PTR [rax]
   1400202ec:	add    BYTE PTR [rax],al
   1400202ee:	add    BYTE PTR [rax],al
   1400202f0:	adc    BYTE PTR [rdi],0x2
   1400202f3:	add    BYTE PTR [rax],al
   1400202f5:	add    BYTE PTR [rax],al
   1400202f7:	add    BYTE PTR [rax+0x17],dl
   1400202fa:	add    al,BYTE PTR [rax]
   1400202fc:	add    BYTE PTR [rax],al
   1400202fe:	add    BYTE PTR [rax],al
   140020300:	adc    BYTE PTR [rdi],dl
   140020302:	add    al,BYTE PTR [rax]
   140020304:	add    BYTE PTR [rax],al
   140020306:	add    BYTE PTR [rax],al
   140020308:	in     al,0x16
   14002030a:	add    al,BYTE PTR [rax]
   14002030c:	add    BYTE PTR [rax],al
   14002030e:	add    BYTE PTR [rax],al
   140020310:	mov    al,0x16
   140020312:	add    al,BYTE PTR [rax]
   140020314:	add    BYTE PTR [rax],al
   140020316:	add    BYTE PTR [rax],al
   140020318:	mov    dl,BYTE PTR [rsi]
   14002031a:	add    al,BYTE PTR [rax]
   14002031c:	add    BYTE PTR [rax],al
   14002031e:	add    BYTE PTR [rax],al
   140020320:	(bad)  
   140020321:	(bad)  
   140020322:	add    al,BYTE PTR [rax]
   140020324:	add    BYTE PTR [rax],al
   140020326:	add    BYTE PTR [rax],al
   140020328:	cs (bad) 
   14002032a:	add    al,BYTE PTR [rax]
   14002032c:	add    BYTE PTR [rax],al
   14002032e:	add    BYTE PTR [rax],al
   140020330:	fcom   DWORD PTR [rip+0x2]        # 0x140020338
   140020336:	add    BYTE PTR [rax],al
   140020338:	cwde   
   140020339:	adc    eax,0x2
   14002033e:	add    BYTE PTR [rax],al
   140020340:	(bad)  
   140020341:	adc    eax,0x2
   140020346:	add    BYTE PTR [rax],al
   140020348:	xor    dl,BYTE PTR [rip+0x2]        # 0x140020350
   14002034e:	add    BYTE PTR [rax],al
   140020350:	(bad)  
   140020351:	adc    eax,0x2
   140020356:	add    BYTE PTR [rax],al
   140020358:	fcom   DWORD PTR [rdx+rax*1]
   14002035b:	add    BYTE PTR [rax],al
   14002035d:	add    BYTE PTR [rax],al
   14002035f:	add    BYTE PTR [rax+0x214],ch
   140020365:	add    BYTE PTR [rax],al
   140020367:	add    BYTE PTR [rsp+rdx*1+0x2],dl
   14002036b:	add    BYTE PTR [rax],al
   14002036d:	add    BYTE PTR [rax],al
   14002036f:	add    BYTE PTR [rdx],bh
   140020371:	adc    al,0x2
   140020373:	add    BYTE PTR [rax],al
   140020375:	add    BYTE PTR [rax],al
   140020377:	add    BYTE PTR [rsi],dl
   140020379:	adc    al,0x2
   14002037b:	add    BYTE PTR [rax],al
   14002037d:	add    BYTE PTR [rax],al
   14002037f:	add    al,dh
   140020381:	adc    eax,DWORD PTR [rdx]
   140020383:	add    BYTE PTR [rax],al
   140020385:	add    BYTE PTR [rax],al
   140020387:	add    BYTE PTR [rax+0x213],ah
   14002038d:	add    BYTE PTR [rax],al
   14002038f:	add    BYTE PTR [rax+0x13],bh
   140020392:	add    al,BYTE PTR [rax]
   140020394:	add    BYTE PTR [rax],al
   140020396:	add    BYTE PTR [rax],al
   140020398:	and    al,0x13
   14002039a:	add    al,BYTE PTR [rax]
   14002039c:	add    BYTE PTR [rax],al
   14002039e:	add    BYTE PTR [rax],al
   1400203a0:	cld    
   1400203a1:	adc    al,BYTE PTR [rdx]
   1400203a3:	add    BYTE PTR [rax],al
   1400203a5:	add    BYTE PTR [rax],al
   1400203a7:	add    dl,cl
   1400203a9:	adc    al,BYTE PTR [rdx]
   1400203ab:	add    BYTE PTR [rax],al
   1400203ad:	add    BYTE PTR [rax],al
   1400203af:	add    BYTE PTR [rdx+rdx*1+0x2],dh
   1400203b6:	add    BYTE PTR [rax],al
   1400203b8:	test   BYTE PTR [rdx],dl
   1400203ba:	add    al,BYTE PTR [rax]
   1400203bc:	add    BYTE PTR [rax],al
   1400203be:	add    BYTE PTR [rax],al
   1400203c0:	rex.W adc al,BYTE PTR [rdx]
   1400203c3:	add    BYTE PTR [rax],al
   1400203c5:	add    BYTE PTR [rax],al
   1400203c7:	add    BYTE PTR [rdx],bl
   1400203c9:	adc    al,BYTE PTR [rdx]
   1400203cb:	add    BYTE PTR [rax],al
   1400203cd:	add    BYTE PTR [rax],al
   1400203cf:	add    ah,bl
   1400203d1:	adc    DWORD PTR [rdx],eax
   1400203d3:	add    BYTE PTR [rax],al
   1400203d5:	add    BYTE PTR [rax],al
   1400203d7:	add    BYTE PTR [rdx+0x211],ch
   1400203dd:	add    BYTE PTR [rax],al
   1400203df:	add    BYTE PTR [rsi+0x211],cl
   1400203e5:	add    BYTE PTR [rax],al
   1400203e7:	add    BYTE PTR [rcx+rdx*1+0x2],ch
   1400203eb:	add    BYTE PTR [rax],al
   1400203ed:	add    BYTE PTR [rax],al
   1400203ef:	add    BYTE PTR [rax+0x11],dl
   1400203f2:	add    al,BYTE PTR [rax]
   1400203f4:	add    BYTE PTR [rax],al
   1400203f6:	add    BYTE PTR [rax],al
   1400203f8:	adc    DWORD PTR es:[rdx],eax
   1400203fb:	add    BYTE PTR [rax],al
   1400203fd:	add    BYTE PTR [rax],al
   1400203ff:	add    BYTE PTR [rdx],cl
   140020401:	adc    DWORD PTR [rdx],eax
   140020403:	add    BYTE PTR [rax],al
   140020405:	add    BYTE PTR [rax],al
   140020407:	add    dh,ch
   140020409:	adc    BYTE PTR [rdx],al
   14002040b:	add    BYTE PTR [rax],al
   14002040d:	add    BYTE PTR [rax],al
   14002040f:	add    ah,dl
   140020411:	adc    BYTE PTR [rdx],al
   140020413:	add    BYTE PTR [rax],al
   140020415:	add    BYTE PTR [rax],al
   140020417:	add    BYTE PTR [rdx+0x210],bh
   14002041d:	add    BYTE PTR [rax],al
   14002041f:	add    BYTE PTR [rax+0x210],ah
   140020425:	add    BYTE PTR [rax],al
   140020427:	add    BYTE PTR [rsi+0x10],dh
   14002042a:	add    al,BYTE PTR [rax]
   14002042c:	add    BYTE PTR [rax],al
   14002042e:	add    BYTE PTR [rax],al
   140020430:	adc    BYTE PTR cs:[rdx],al
   140020433:	add    BYTE PTR [rax],al
   140020435:	add    BYTE PTR [rax],al
   140020437:	add    dl,dh
   140020439:	lar    eax,WORD PTR [rax]
   14002043c:	add    BYTE PTR [rax],al
   14002043e:	add    BYTE PTR [rax],al
   140020440:	(bad)  
   140020441:	lar    eax,WORD PTR [rax]
   140020444:	add    BYTE PTR [rax],al
   140020446:	add    BYTE PTR [rax],al
   140020448:	mov    WORD PTR [rdi],cs
   14002044a:	add    al,BYTE PTR [rax]
   14002044c:	add    BYTE PTR [rax],al
   14002044e:	add    BYTE PTR [rax],al
   140020450:	pop    rsi
   140020451:	lar    eax,WORD PTR [rax]
   140020454:	add    BYTE PTR [rax],al
   140020456:	add    BYTE PTR [rax],al
   140020458:	xor    BYTE PTR [rdi],cl
   14002045a:	add    al,BYTE PTR [rax]
   14002045c:	add    BYTE PTR [rax],al
   14002045e:	add    BYTE PTR [rax],al
   140020460:	add    cl,BYTE PTR [rdi]
   140020462:	add    al,BYTE PTR [rax]
   140020464:	add    BYTE PTR [rax],al
   140020466:	add    BYTE PTR [rax],al
   140020468:	retf   0x20e
   14002046b:	add    BYTE PTR [rax],al
   14002046d:	add    BYTE PTR [rax],al
   14002046f:	add    BYTE PTR [rsi+rcx*1+0x2],dl
   140020476:	add    BYTE PTR [rax],al
   140020478:	pop    rsp
   140020479:	(bad)  
   14002047a:	add    al,BYTE PTR [rax]
   14002047c:	add    BYTE PTR [rax],al
   14002047e:	add    BYTE PTR [rax],al
   140020480:	sub    cl,BYTE PTR [rsi]
   140020482:	add    al,BYTE PTR [rax]
   140020484:	add    BYTE PTR [rax],al
   140020486:	add    BYTE PTR [rax],al
   140020488:	clc    
   140020489:	or     eax,0x2
   14002048e:	add    BYTE PTR [rax],al
   140020490:	mov    esp,0x20d
   140020495:	add    BYTE PTR [rax],al
   140020497:	add    BYTE PTR [rdx+0xd],bl
   14002049a:	add    al,BYTE PTR [rax]
   14002049c:	add    BYTE PTR [rax],al
   14002049e:	add    BYTE PTR [rax],al
   1400204a0:	mov    WORD PTR [rip+0x2],cs        # 0x1400204a8
   1400204a6:	add    BYTE PTR [rax],al
   1400204a8:	sub    al,0xd
   1400204aa:	add    al,BYTE PTR [rax]
   1400204ac:	add    BYTE PTR [rax],al
   1400204ae:	add    BYTE PTR [rax],al
   1400204b0:	cld    
   1400204b1:	or     al,0x2
   1400204b3:	add    BYTE PTR [rax],al
   1400204b5:	add    BYTE PTR [rax],al
   1400204b7:	add    al,dl
   1400204b9:	or     al,0x2
   1400204bb:	add    BYTE PTR [rax],al
   1400204bd:	add    BYTE PTR [rax],al
   1400204bf:	add    BYTE PTR [rsp+rcx*1+0x2],ah
   1400204c6:	add    BYTE PTR [rax],al
   1400204c8:	jo     0x1400204d6
   1400204ca:	add    al,BYTE PTR [rax]
   1400204cc:	add    BYTE PTR [rax],al
   1400204ce:	add    BYTE PTR [rax],al
   1400204d0:	ds or  al,0x2
   1400204d3:	add    BYTE PTR [rax],al
   1400204d5:	add    BYTE PTR [rax],al
   1400204d7:	add    BYTE PTR [rdx],cl
   1400204d9:	or     al,0x2
   1400204db:	add    BYTE PTR [rax],al
   1400204dd:	add    BYTE PTR [rax],al
   1400204df:	add    al,bl
   1400204e1:	or     eax,DWORD PTR [rdx]
   1400204e3:	add    BYTE PTR [rax],al
   1400204e5:	add    BYTE PTR [rax],al
   1400204e7:	add    BYTE PTR [rax+0x20b],ch
   1400204ed:	add    BYTE PTR [rax],al
   1400204ef:	add    BYTE PTR [rbx+rcx*1+0x2],dh
   1400204f3:	add    BYTE PTR [rax],al
   1400204f5:	add    BYTE PTR [rax],al
   1400204f7:	add    BYTE PTR [rax],bh
   1400204f9:	or     eax,DWORD PTR [rdx]
   1400204fb:	add    BYTE PTR [rax],al
   1400204fd:	add    BYTE PTR [rax],al
   1400204ff:	add    BYTE PTR [rax],al
   140020501:	or     eax,DWORD PTR [rdx]
   140020503:	add    BYTE PTR [rax],al
   140020505:	add    BYTE PTR [rax],al
   140020507:	add    dl,cl
   140020509:	or     al,BYTE PTR [rdx]
   14002050b:	add    BYTE PTR [rax],al
   14002050d:	add    BYTE PTR [rax],al
   14002050f:	add    BYTE PTR [rdx+0x20a],ah
   140020515:	add    BYTE PTR [rax],al
   140020517:	add    BYTE PTR [rsi+0xa],bh
   14002051a:	add    al,BYTE PTR [rax]
   14002051c:	add    BYTE PTR [rax],al
   14002051e:	add    BYTE PTR [rax],al
   140020520:	push   rax
   140020521:	or     al,BYTE PTR [rdx]
   140020523:	add    BYTE PTR [rax],al
   140020525:	add    BYTE PTR [rax],al
   140020527:	add    BYTE PTR [rdx],ch
   140020529:	or     al,BYTE PTR [rdx]
   14002052b:	add    BYTE PTR [rax],al
   14002052d:	add    BYTE PTR [rax],al
   14002052f:	add    BYTE PTR [rax],cl
   140020531:	or     al,BYTE PTR [rdx]
   140020533:	add    BYTE PTR [rax],al
   140020535:	add    BYTE PTR [rax],al
   140020537:	add    al,ah
   140020539:	or     DWORD PTR [rdx],eax
   14002053b:	add    BYTE PTR [rax],al
   14002053d:	add    BYTE PTR [rax],al
   14002053f:	add    BYTE PTR [rax+0x209],ah
   140020545:	add    BYTE PTR [rax],al
   140020547:	add    BYTE PTR [rdx+0x9],dh
   14002054a:	add    al,BYTE PTR [rax]
   14002054c:	add    BYTE PTR [rax],al
   14002054e:	add    BYTE PTR [rax],al
   140020550:	rex.X or DWORD PTR [rdx],eax
   140020553:	add    BYTE PTR [rax],al
   140020555:	add    BYTE PTR [rax],al
   140020557:	add    BYTE PTR [rsi],al
   140020559:	or     DWORD PTR [rdx],eax
   14002055b:	add    BYTE PTR [rax],al
   14002055d:	add    BYTE PTR [rax],al
   14002055f:	add    dl,al
   140020561:	or     BYTE PTR [rdx],al
   140020563:	add    BYTE PTR [rax],al
   140020565:	add    BYTE PTR [rax],al
   140020567:	add    BYTE PTR [rax+rcx*1+0x2],dl
   14002056e:	add    BYTE PTR [rax],al
   140020570:	push   0x208
   140020575:	add    BYTE PTR [rax],al
   140020577:	add    BYTE PTR [rsi],dh
   140020579:	or     BYTE PTR [rdx],al
   14002057b:	add    BYTE PTR [rax],al
   14002057d:	add    BYTE PTR [rax],al
   14002057f:	add    BYTE PTR [rax+rcx*1],cl
   140020582:	add    al,BYTE PTR [rax]
   140020584:	add    BYTE PTR [rax],al
   140020586:	add    BYTE PTR [rax],al
   140020588:	rol    BYTE PTR [rdi],cl
   14002058a:	add    al,BYTE PTR [rax]
   14002058c:	add    BYTE PTR [rax],al
   14002058e:	add    BYTE PTR [rax],al
   140020590:	lods   al,BYTE PTR ds:[rsi]
   140020591:	(bad)  
   140020592:	add    al,BYTE PTR [rax]
   140020594:	add    BYTE PTR [rax],al
   140020596:	add    BYTE PTR [rax],al
   140020598:	xchg   BYTE PTR [rdi],al
   14002059a:	add    al,BYTE PTR [rax]
   14002059c:	add    BYTE PTR [rax],al
   14002059e:	add    BYTE PTR [rax],al
   1400205a0:	(bad)  
   1400205a1:	(bad)  
   1400205a2:	add    al,BYTE PTR [rax]
   1400205a4:	add    BYTE PTR [rax],al
   1400205a6:	add    BYTE PTR [rax],al
   1400205a8:	xor    BYTE PTR [rdi],al
   1400205aa:	add    al,BYTE PTR [rax]
   1400205ac:	add    BYTE PTR [rax],al
   1400205ae:	add    BYTE PTR [rax],al
   1400205b0:	lock (bad) 
   1400205b2:	add    al,BYTE PTR [rax]
   1400205b4:	add    BYTE PTR [rax],al
   1400205b6:	add    BYTE PTR [rax],al
   1400205b8:	(bad)  
   1400205b9:	(bad)  
   1400205ba:	add    al,BYTE PTR [rax]
   1400205bc:	add    BYTE PTR [rax],al
   1400205be:	add    BYTE PTR [rax],al
   1400205c0:	test   al,0x6
   1400205c2:	add    al,BYTE PTR [rax]
   1400205c4:	add    BYTE PTR [rax],al
   1400205c6:	add    BYTE PTR [rax],al
   1400205c8:	mov    es,WORD PTR [rsi]
   1400205ca:	add    al,BYTE PTR [rax]
   1400205cc:	add    BYTE PTR [rax],al
   1400205ce:	add    BYTE PTR [rax],al
   1400205d0:	je     0x1400205d8
   1400205d2:	add    al,BYTE PTR [rax]
   1400205d4:	add    BYTE PTR [rax],al
   1400205d6:	add    BYTE PTR [rax],al
   1400205d8:	rex (bad) 
   1400205da:	add    al,BYTE PTR [rax]
   1400205dc:	add    BYTE PTR [rax],al
   1400205de:	add    BYTE PTR [rax],al
   1400205e0:	call   0x140020832
   1400205e5:	add    BYTE PTR [rax],al
   1400205e7:	add    BYTE PTR [rax],cl
   1400205e9:	(bad)  
   1400205ea:	add    al,BYTE PTR [rax]
	...
   1400205f8:	ror    BYTE PTR [rbx+0x2],cl
	...
   140020606:	add    BYTE PTR [rax],al
   140020608:	cmp    eax,0x65733f18
   14002060d:	je     0x140020655
   14002060f:	imul   esp,DWORD PTR [rbp+0x6c],0x57514064
   140020616:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   14002061d:	push   rcx
   14002061e:	rex.RB
   14002061f:	rex.B
   140020620:	pop    r8
   140020622:	rex.B
   140020623:	rex.RB
   140020624:	rex.X push rsi
   140020626:	push   rcx
   140020627:	push   rbx
   140020628:	je     0x14002069c
   14002062a:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   140020631:	rex.X push rsi
   140020633:	push   rcx
   140020634:	push   rsi
   140020635:	(bad)  
   140020636:	jb     0x1400206a1
   140020638:	(bad)  
   140020639:	outs   dx,BYTE PTR ds:[rsi]
   14002063a:	je     0x14002067c
   14002063c:	rex
   14002063d:	rex pop rdx
   14002063f:	add    BYTE PTR [rsi],bh
   140020641:	or     edi,DWORD PTR [rdi]
   140020643:	imul   sp,WORD PTR [rbp+0x6c],0x4064
   140020649:	push   rcx
   14002064a:	push   rdi
   14002064b:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140020652:	push   rcx
   140020653:	rex.RB
   140020654:	rex.X
   140020655:	rex.B (bad) 
   140020657:	push   r14
   140020659:	push   rcx
   14002065a:	push   rsi
   14002065b:	(bad)  
   14002065c:	jb     0x1400206c7
   14002065e:	(bad)  
   14002065f:	outs   dx,BYTE PTR ds:[rsi]
   140020660:	je     0x1400206a2
   140020662:	rex
   140020663:	rex.B
   140020664:	rex.RB
   140020665:	rex.X push rsi
   140020667:	push   rcx
   140020668:	push   rbx
   140020669:	je     0x1400206dd
   14002066b:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140020672:	add    BYTE PTR [rax],al
   140020674:	xchg   edi,eax
   140020675:	or     al,0x3f
   140020677:	push   0x40656469
   14002067c:	push   rcx
   14002067d:	push   rdi
   14002067e:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140020686:	rex.RB
   140020687:	rex.B
   140020688:	pop    r8
   14002068a:	pop    rax
   14002068b:	pop    rdx
   14002068c:	add    BYTE PTR [rax],al
   14002068e:	rex.RX sbb al,0x3f
   140020691:	jae    0x1400206fb
   140020693:	outs   dx,DWORD PTR ds:[rsi]
   140020694:	ja     0x1400206d6
   140020696:	push   rcx
   140020697:	push   rdi
   140020698:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400206a0:	rex.RB
   1400206a1:	rex.B
   1400206a2:	pop    r8
   1400206a4:	pop    rax
   1400206a5:	pop    rdx
   1400206a6:	add    BYTE PTR [rax],al
   1400206a8:	test   eax,0x6f6d3f11
   1400206ad:	jbe    0x140020714
   1400206af:	rex push rcx
   1400206b1:	push   rdi
   1400206b2:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400206ba:	rex.RB
   1400206bb:	rex.B
   1400206bc:	pop    r8
   1400206be:	rex.B
   1400206bf:	rex.RB
   1400206c0:	rex.X push rsi
   1400206c2:	push   rcx
   1400206c3:	push   rax
   1400206c4:	outs   dx,DWORD PTR ds:[rsi]
   1400206c5:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   1400206cc:	add    BYTE PTR [rax],al
   1400206ce:	xlat   BYTE PTR ds:[rbx]
   1400206cf:	adc    bh,BYTE PTR [rdi]
   1400206d1:	jo     0x140020742
   1400206d3:	jae    0x140020715
   1400206d5:	push   rcx
   1400206d6:	push   rdi
   1400206d7:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400206df:	rex.RB
   1400206e0:	rex.X
   1400206e1:	rex.B (bad) 
   1400206e3:	push   r14
   1400206e5:	push   rcx
   1400206e6:	push   rax
   1400206e7:	outs   dx,DWORD PTR ds:[rsi]
   1400206e8:	imul   ebp,DWORD PTR [rsi+0x74],0x5a584040
   1400206ef:	add    BYTE PTR [rbx],ah
   1400206f1:	(bad)  
   1400206f2:	(bad)  
   1400206f3:	(bad)  
   1400206f4:	jne    0x14002076a
   1400206f6:	je     0x140020767
   1400206f8:	outs   dx,BYTE PTR ds:[rsi]
   1400206f9:	rex push rcx
   1400206fb:	push   rdi
   1400206fc:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140020703:	push   rcx
   140020704:	rex.RB
   140020705:	rex.X
   140020706:	push   r8
   140020708:	rex.RB
   140020709:	push   r14
   14002070b:	push   rcx
   14002070c:	(bad)
   140020712:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140020716:	je     0x14002078c
   140020718:	outs   dx,DWORD PTR ds:[rsi]
   140020719:	outs   dx,BYTE PTR ds:[rsi]
   14002071a:	rex
   14002071b:	rex push rdi
   14002071d:	xor    al,0x57
   14002071f:	imul   edi,DWORD PTR [rdx+0x61],0x75426472
   140020726:	je     0x14002079c
   140020728:	outs   dx,DWORD PTR ds:[rsi]
   140020729:	outs   dx,BYTE PTR ds:[rsi]
   14002072a:	rex xor DWORD PTR [rax+0x40],eax
   14002072e:	pop    rdx
   14002072f:	add    BYTE PTR [rcx],bl
   140020731:	or     BYTE PTR [rdi],bh
   140020733:	movsxd esi,DWORD PTR [rbp+0x72]
   140020736:	jb     0x14002079d
   140020738:	outs   dx,BYTE PTR ds:[rsi]
   140020739:	je     0x14002078b
   14002073b:	(bad)  
   14002073c:	addr32 gs rex push rcx
   140020740:	push   rdi
   140020741:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140020748:	push   rcx
   140020749:	rex.RB
   14002074a:	rex.X
   14002074b:	push   r8
   14002074d:	rex.RB
   14002074e:	push   r14
   140020750:	push   rcx
   140020751:	push   rdi
   140020752:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   140020759:	addr32 gs rex
   14002075c:	rex pop rax
   14002075e:	pop    rdx
   14002075f:	add    BYTE PTR [rdx+0x65733f19],al
   140020765:	je     0x1400207b4
   140020767:	imul   ebp,DWORD PTR [rsi+0x69],0x486d756d
   14002076e:	imul   esp,DWORD PTR gs:[rdi+0x68],0x57514074
   140020776:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14002077e:	rex.RB
   14002077f:	rex.B
   140020780:	pop    r8
   140020782:	rex.W
   140020783:	rex pop rdx
   140020785:	add    BYTE PTR [rbx+0x19],ah
   140020788:	(bad)  
   140020789:	jae    0x1400207f0
   14002078b:	je     0x1400207da
   14002078d:	(bad)  
   14002078e:	js     0x1400207f9
   140020790:	ins    DWORD PTR es:[rdi],dx
   140020791:	jne    0x140020800
   140020793:	rex.W
   140020794:	imul   esp,DWORD PTR gs:[rdi+0x68],0x57514074
   14002079c:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400207a4:	rex.RB
   1400207a5:	rex.B
   1400207a6:	pop    r8
   1400207a8:	rex.W
   1400207a9:	rex pop rdx
   1400207ab:	add    BYTE PTR [rcx+rbx*1+0x3f],ch
   1400207af:	jae    0x140020816
   1400207b1:	je     0x140020800
   1400207b3:	(bad)  
   1400207b4:	js     0x14002081f
   1400207b6:	ins    DWORD PTR es:[rdi],dx
   1400207b7:	jne    0x140020826
   1400207b9:	push   rdi
   1400207ba:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x69575140
   1400207c2:	fs addr32 gs je 0x140020807
   1400207c7:	rex push rcx
   1400207c9:	rex.RB
   1400207ca:	rex.B
   1400207cb:	pop    r8
   1400207cd:	rex.W
   1400207ce:	rex pop rdx
   1400207d0:	add    BYTE PTR [rax],al
   1400207d2:	add    ecx,DWORD PTR [rbx]
   1400207d4:	(bad)  
   1400207d5:	gs jbe 0x14002083d
   1400207d8:	outs   dx,BYTE PTR ds:[rsi]
   1400207d9:	je     0x140020821
   1400207db:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x44514072
   1400207e3:	imul   esp,DWORD PTR [rcx+0x6c],0x4040676f
   1400207ea:	rex.WRB
   1400207eb:	rex.RB
   1400207ec:	rex.B
   1400207ed:	pop    r15
   1400207ef:	rex.WRX push rax
   1400207f1:	rex.RB
   1400207f2:	push   r14
   1400207f4:	push   rcx
   1400207f5:	rex.WRXB (bad) 
   1400207f7:	push   0x65
   1400207f9:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400207fd:	push   rax
   1400207fe:	rex.RB
   1400207ff:	push   r14
   140020801:	push   rcx
   140020802:	rex.RB jbe 0x14002086a
   140020805:	outs   dx,BYTE PTR ds:[rsi]
   140020806:	je     0x140020848
   140020808:	rex
   140020809:	rex pop rdx
   14002080b:	add    BYTE PTR [rdi+0x17],cl
   14002080e:	(bad)  
   14002080f:	jae    0x140020876
   140020811:	je     0x140020856
   140020813:	push   0x656b6365
   140020818:	fs rex push rcx
   14002081b:	(bad)
   140020821:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140020825:	je     0x14002089b
   140020827:	outs   dx,DWORD PTR ds:[rsi]
   140020828:	outs   dx,BYTE PTR ds:[rsi]
   140020829:	rex
   14002082a:	rex push rcx
   14002082c:	rex.RB
   14002082d:	rex.B
   14002082e:	pop    r8
   140020830:	pop    rdi
   140020831:	rex.WRX
   140020832:	rex pop rdx
   140020834:	add    BYTE PTR [rax],al
   140020836:	leave  
   140020837:	(bad)  
   140020839:	ins    DWORD PTR es:[rdi],dx
   14002083a:	(bad)  
   14002083b:	jo     0x140020883
   14002083d:	jb     0x1400208ae
   14002083f:	ins    DWORD PTR es:[rdi],dx
   140020840:	push   rax
   140020841:	(bad)  
   140020842:	jb     0x1400208a9
   140020844:	outs   dx,BYTE PTR ds:[rsi]
   140020845:	je     0x140020887
   140020847:	push   rcx
   140020848:	push   rdi
   140020849:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140020851:	rex.RB
   140020852:	rex.X
   140020853:	rex.B (bad) 
   140020855:	push   r14
   140020857:	push   rcx
   140020858:	push   rax
   140020859:	outs   dx,DWORD PTR ds:[rsi]
   14002085a:	imul   ebp,DWORD PTR [rsi+0x74],0x45414040
   140020861:	rex.X push rsi
   140020863:	xor    al,BYTE PTR [rax+0x40]
   140020866:	pop    rdx
   140020867:	add    BYTE PTR [rdi+rdx*1+0x3f],cl
   14002086b:	jae    0x1400208d2
   14002086d:	je     0x1400208b2
   14002086f:	push   0x616b6365
   140020874:	(bad)  
   140020875:	ins    BYTE PTR es:[rdi],dx
   140020876:	gs rex push rcx
   140020879:	(bad)
   14002087f:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140020883:	je     0x1400208f9
   140020885:	outs   dx,DWORD PTR ds:[rsi]
   140020886:	outs   dx,BYTE PTR ds:[rsi]
   140020887:	rex
   140020888:	rex push rcx
   14002088a:	rex.RB
   14002088b:	rex.B
   14002088c:	pop    r8
   14002088e:	pop    rdi
   14002088f:	rex.WRX
   140020890:	rex pop rdx
   140020892:	add    BYTE PTR [rax],al
   140020894:	(bad)  
   140020895:	sbb    DWORD PTR [rdi],edi
   140020897:	jae    0x1400208fe
   140020899:	je     0x1400208eb
   14002089b:	(bad)  
   14002089c:	addr32 gs rex push rcx
   1400208a0:	push   rdi
   1400208a1:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   1400208a8:	push   rcx
   1400208a9:	rex.RB
   1400208aa:	rex.B
   1400208ab:	pop    r8
   1400208ad:	rex.W push rax
   1400208af:	rex.RB
   1400208b0:	push   r14
   1400208b2:	push   rcx
   1400208b3:	push   rdi
   1400208b4:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   1400208bb:	addr32 gs rex
   1400208be:	rex
   1400208bf:	rex pop rdx
   1400208c1:	add    ah,ch
   1400208c3:	sbb    DWORD PTR [rdi],edi
   1400208c5:	jae    0x14002092c
   1400208c7:	je     0x140020918
   1400208c9:	jo     0x14002093f
   1400208cb:	imul   ebp,DWORD PTR [rdi+0x6e],0x57514073
   1400208d2:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   1400208d9:	push   rcx
   1400208da:	rex.RB
   1400208db:	rex.B
   1400208dc:	pop    r8
   1400208de:	push   rsi
   1400208df:	(bad)  
   1400208e0:	and    al,0x51
   1400208e2:	rex.RX ins BYTE PTR es:[rdi],dx
   1400208e4:	(bad)  
   1400208e5:	addr32 jae 0x140020928
   1400208e8:	push   rdi
   1400208e9:	xor    al,0x57
   1400208eb:	imul   edi,DWORD PTR [rdx+0x61],0x704f6472
   1400208f2:	je     0x14002095d
   1400208f4:	outs   dx,DWORD PTR ds:[rsi]
   1400208f5:	outs   dx,BYTE PTR ds:[rsi]
   1400208f6:	rex push rcx
   1400208f8:	push   rdi
   1400208f9:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140020900:	rex
   140020901:	rex
   140020902:	rex pop rdx
   140020904:	add    BYTE PTR [rax],al
   140020906:	sbb    DWORD PTR [rdx],ebx
   140020908:	(bad)  
   140020909:	jae    0x140020970
   14002090b:	je     0x14002095d
   14002090d:	imul   edi,DWORD PTR [rax+0x6d],0x51407061
   140020914:	push   rdi
   140020915:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   14002091c:	push   rcx
   14002091d:	rex.RB
   14002091e:	rex.B
   14002091f:	pop    r8
   140020921:	push   rdi
   140020922:	xor    al,0x57
   140020924:	imul   edi,DWORD PTR [rdx+0x61],0x69506472
   14002092b:	js     0x14002099a
   14002092d:	(bad)  
   14002092e:	jo     0x140020970
   140020930:	xor    DWORD PTR [rax+0x41],eax
   140020933:	rex.RB
   140020934:	rex.X push rsi
   140020936:	push   rcx
   140020937:	push   rax
   140020938:	imul   edi,DWORD PTR [rax+0x6d],0x40407061
   14002093f:	rex pop rdx
   140020941:	add    BYTE PTR [rsi],cl
   140020943:	sbb    al,0x3f
   140020945:	jae    0x1400209ac
   140020947:	je     0x1400209a0
   140020949:	imul   ebp,DWORD PTR [rsi+0x64],0x6954776f
   140020950:	je     0x1400209be
   140020952:	gs rex push rcx
   140020955:	push   rdi
   140020956:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14002095e:	rex.RB
   14002095f:	rex.B
   140020960:	pop    r8
   140020962:	rex.B
   140020963:	rex.RB
   140020964:	rex.X push rsi
   140020966:	push   rcx
   140020967:	push   rbx
   140020968:	je     0x1400209dc
   14002096a:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140020971:	add    dh,bh
   140020973:	sbb    edi,DWORD PTR [rdi]
   140020975:	jae    0x1400209dc
   140020977:	je     0x1400209d0
   140020979:	imul   ebp,DWORD PTR [rsi+0x64],0x6349776f
   140020980:	outs   dx,DWORD PTR ds:[rsi]
   140020981:	outs   dx,BYTE PTR ds:[rsi]
   140020982:	rex push rcx
   140020984:	push   rdi
   140020985:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14002098d:	rex.RB
   14002098e:	rex.B
   14002098f:	pop    r8
   140020991:	rex.B
   140020992:	rex.RB
   140020993:	rex.X push rsi
   140020995:	push   rcx
   140020996:	movsxd rbp,DWORD PTR [r15+0x6e]
   14002099a:	rex
   14002099b:	rex
   14002099c:	rex pop rdx
   14002099e:	add    BYTE PTR [rax],al
   1400209a0:	movabs al,ds:0x7a695751303f3f01
   1400209a9:	(bad)  
   1400209aa:	jb     0x140020a10
   1400209ac:	rex
   1400209ad:	rex push rcx
   1400209af:	rex.RB
   1400209b0:	rex.B
   1400209b1:	rex.B
   1400209b2:	rex push rax
   1400209b4:	rex.RB
   1400209b5:	push   r14
   1400209b7:	push   rcx
   1400209b8:	push   rdi
   1400209b9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x56404074
   1400209c1:	(bad)  
   1400209c2:	and    al,0x51
   1400209c4:	rex.RX ins BYTE PTR es:[rdi],dx
   1400209c6:	(bad)  
   1400209c7:	addr32 jae 0x140020a0a
   1400209ca:	push   rdi
   1400209cb:	xor    al,0x57
   1400209cd:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   1400209d4:	jo     0x140020a3b
   1400209d6:	rex push rcx
   1400209d8:	je     0x140020a1a
   1400209da:	rex
   1400209db:	rex
   1400209dc:	rex
   1400209dd:	rex pop rdx
   1400209df:	add    bh,bh
   1400209e1:	or     bh,BYTE PTR [rdi]
   1400209e3:	gs jbe 0x140020a4b
   1400209e6:	outs   dx,BYTE PTR ds:[rsi]
   1400209e7:	je     0x140020a29
   1400209e9:	push   rcx
   1400209ea:	push   rdi
   1400209eb:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   1400209f2:	rex.WRB
   1400209f3:	rex.RB
   1400209f4:	rex.B
   1400209f5:	pop    r15
   1400209f7:	rex.WRX push rax
   1400209f9:	rex.RB
   1400209fa:	push   r14
   1400209fc:	push   rcx
   1400209fd:	rex.RB jbe 0x140020a65
   140020a00:	outs   dx,BYTE PTR ds:[rsi]
   140020a01:	je     0x140020a43
   140020a03:	rex
   140020a04:	rex pop rdx
   140020a06:	add    BYTE PTR [rax],al
   140020a08:	fcomp  QWORD PTR [rbx]
   140020a0a:	(bad)  
   140020a0b:	jae    0x140020a72
   140020a0d:	je     0x140020a65
   140020a0f:	imul   esi,DWORD PTR [rbx+0x69],0x40656c62
   140020a16:	push   rcx
   140020a17:	push   rdi
   140020a18:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140020a1f:	push   rbp
   140020a20:	rex.RB
   140020a21:	rex.B
   140020a22:	pop    r8
   140020a24:	pop    rdi
   140020a25:	rex.WRX
   140020a26:	rex pop rdx
   140020a28:	add    BYTE PTR [rax],al
   140020a2a:	(bad)  
   140020a2b:	sbb    al,0x3f
   140020a2d:	jae    0x140020a98
   140020a2f:	jp     0x140020a96
   140020a31:	imul   rbp,QWORD PTR [rsi+0x74],0x69575140
   140020a39:	jp     0x140020a9c
   140020a3b:	jb     0x140020aa1
   140020a3d:	rex
   140020a3e:	rex push rbp
   140020a40:	rex.RB
   140020a41:	rex.X
   140020a42:	rex.B (bad) 
   140020a44:	push   r14
   140020a46:	push   rcx
   140020a47:	push   rbx
   140020a48:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140020a4f:	add    BYTE PTR [rdx],cl
   140020a51:	adc    DWORD PTR [rdi],edi
   140020a53:	ins    DWORD PTR es:[rdi],dx
   140020a54:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140020a5b:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140020a62:	rex push rcx
   140020a64:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140020a6c:	push   rbp
   140020a6d:	rex.RB
   140020a6e:	rex.X
   140020a6f:	rex.B (bad) 
   140020a71:	push   r14
   140020a73:	push   rcx
   140020a74:	push   rbx
   140020a75:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140020a7c:	add    BYTE PTR [rax],al
   140020a7e:	mov    BYTE PTR [rdi+rdi*1],cl
   140020a81:	push   0x68676965
   140020a86:	je     0x140020ace
   140020a88:	outs   dx,DWORD PTR ds:[rsi]
   140020a89:	jb     0x140020ae2
   140020a8b:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x69575140
   140020a93:	fs addr32 gs je 0x140020ad8
   140020a98:	rex push rbp
   140020a9a:	rex.RB
   140020a9b:	rex.X
   140020a9c:	rex.B
   140020a9d:	rex.W
   140020a9e:	rex.W
   140020a9f:	rex pop rdx
   140020aa1:	add    BYTE PTR [rsi+0xc],ah
   140020aa4:	(bad)  
   140020aa5:	push   0x65487361
   140020aaa:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   140020ab1:	push   rdi
   140020ab2:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x69575140
   140020aba:	fs addr32 gs je 0x140020aff
   140020abf:	rex push rbp
   140020ac1:	rex.RB
   140020ac2:	rex.X
   140020ac3:	pop    r15
   140020ac5:	rex.WRX pop rax
   140020ac7:	pop    rdx
   140020ac8:	add    BYTE PTR [rax],al
   140020aca:	xchg   BYTE PTR [rcx],dl
   140020acc:	(bad)  
   140020acd:	ins    DWORD PTR es:[rdi],dx
   140020ace:	outs   dx,DWORD PTR ds:[rsi]
   140020acf:	jne    0x140020b44
   140020ad1:	gs push rax
   140020ad3:	jb     0x140020b3a
   140020ad5:	jae    0x140020b4a
   140020ad7:	rex.RB jbe 0x140020b3f
   140020ada:	outs   dx,BYTE PTR ds:[rsi]
   140020adb:	je     0x140020b1d
   140020add:	push   rcx
   140020ade:	push   rdi
   140020adf:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020ae7:	rex.RB
   140020ae8:	rex.B
   140020ae9:	pop    r8
   140020aeb:	push   rax
   140020aec:	rex.RB
   140020aed:	push   r14
   140020aef:	push   rcx
   140020af0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140020af2:	jne    0x140020b67
   140020af4:	gs rex.RB jbe 0x140020b5d
   140020af8:	outs   dx,BYTE PTR ds:[rsi]
   140020af9:	je     0x140020b3b
   140020afb:	rex
   140020afc:	rex pop rdx
   140020afe:	add    BYTE PTR [rax],al
   140020b00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140020b01:	adc    DWORD PTR [rdi],edi
   140020b03:	ins    DWORD PTR es:[rdi],dx
   140020b04:	outs   dx,DWORD PTR ds:[rsi]
   140020b05:	jne    0x140020b7a
   140020b07:	gs push rdx
   140020b09:	gs ins BYTE PTR es:[rdi],dx
   140020b0b:	gs (bad) 
   140020b0d:	jae    0x140020b74
   140020b0f:	rex.RB jbe 0x140020b77
   140020b12:	outs   dx,BYTE PTR ds:[rsi]
   140020b13:	je     0x140020b55
   140020b15:	push   rcx
   140020b16:	push   rdi
   140020b17:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020b1f:	rex.RB
   140020b20:	rex.B
   140020b21:	pop    r8
   140020b23:	push   rax
   140020b24:	rex.RB
   140020b25:	push   r14
   140020b27:	push   rcx
   140020b28:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140020b2a:	jne    0x140020b9f
   140020b2c:	gs rex.RB jbe 0x140020b95
   140020b30:	outs   dx,BYTE PTR ds:[rsi]
   140020b31:	je     0x140020b73
   140020b33:	rex
   140020b34:	rex pop rdx
   140020b36:	add    BYTE PTR [rax],al
   140020b38:	adc    DWORD PTR [rdi],r15d
   140020b3b:	ins    DWORD PTR es:[rdi],dx
   140020b3c:	outs   dx,DWORD PTR ds:[rsi]
   140020b3d:	jne    0x140020bb2
   140020b3f:	rex.R outs dx,DWORD PTR gs:[rsi]
   140020b42:	jne    0x140020ba6
   140020b44:	ins    BYTE PTR es:[rdi],dx
   140020b45:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140020b48:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   140020b4f:	je     0x140020b91
   140020b51:	push   rcx
   140020b52:	push   rdi
   140020b53:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020b5b:	rex.RB
   140020b5c:	rex.B
   140020b5d:	pop    r8
   140020b5f:	push   rax
   140020b60:	rex.RB
   140020b61:	push   r14
   140020b63:	push   rcx
   140020b64:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140020b66:	jne    0x140020bdb
   140020b68:	gs rex.RB jbe 0x140020bd1
   140020b6c:	outs   dx,BYTE PTR ds:[rsi]
   140020b6d:	je     0x140020baf
   140020b6f:	rex
   140020b70:	rex pop rdx
   140020b72:	add    BYTE PTR [rax],al
   140020b74:	adc    DWORD PTR fs:[rdi],edi
   140020b77:	ins    DWORD PTR es:[rdi],dx
   140020b78:	outs   dx,DWORD PTR ds:[rsi]
   140020b79:	jne    0x140020bee
   140020b7b:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140020b7e:	jbe    0x140020be5
   140020b80:	rex.RB jbe 0x140020be8
   140020b83:	outs   dx,BYTE PTR ds:[rsi]
   140020b84:	je     0x140020bc6
   140020b86:	push   rcx
   140020b87:	push   rdi
   140020b88:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020b90:	rex.RB
   140020b91:	rex.B
   140020b92:	pop    r8
   140020b94:	push   rax
   140020b95:	rex.RB
   140020b96:	push   r14
   140020b98:	push   rcx
   140020b99:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140020b9b:	jne    0x140020c10
   140020b9d:	gs rex.RB jbe 0x140020c06
   140020ba1:	outs   dx,BYTE PTR ds:[rsi]
   140020ba2:	je     0x140020be4
   140020ba4:	rex
   140020ba5:	rex pop rdx
   140020ba7:	add    BYTE PTR [rcx+riz*1],dh
   140020baa:	(bad)  
   140020bab:	ja     0x140020c15
   140020bad:	gs gs ins BYTE PTR es:[rdi],dx
   140020bb0:	rex.RB jbe 0x140020c18
   140020bb3:	outs   dx,BYTE PTR ds:[rsi]
   140020bb4:	je     0x140020bf6
   140020bb6:	push   rcx
   140020bb7:	push   rdi
   140020bb8:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020bc0:	rex.RB
   140020bc1:	rex.B
   140020bc2:	pop    r8
   140020bc4:	push   rax
   140020bc5:	rex.RB
   140020bc6:	push   r14
   140020bc8:	push   rcx
   140020bc9:	push   rdi
   140020bca:	push   0x456c6565
   140020bcf:	jbe    0x140020c36
   140020bd1:	outs   dx,BYTE PTR ds:[rsi]
   140020bd2:	je     0x140020c14
   140020bd4:	rex
   140020bd5:	rex pop rdx
   140020bd7:	add    BYTE PTR [rbp+0xf],al
   140020bda:	(bad)  
   140020bdb:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140020bdf:	jb     0x140020c46
   140020be1:	jae    0x140020c56
   140020be3:	rex.RB jbe 0x140020c4b
   140020be6:	outs   dx,BYTE PTR ds:[rsi]
   140020be7:	je     0x140020c29
   140020be9:	push   rcx
   140020bea:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140020bf2:	rex.WRB
   140020bf3:	rex.RB
   140020bf4:	rex.B
   140020bf5:	pop    r8
   140020bf7:	push   rax
   140020bf8:	rex.RB
   140020bf9:	push   r14
   140020bfb:	push   rcx
   140020bfc:	rex.WXB
   140020bfd:	gs jns 0x140020c45
   140020c00:	jbe    0x140020c67
   140020c02:	outs   dx,BYTE PTR ds:[rsi]
   140020c03:	je     0x140020c45
   140020c05:	rex
   140020c06:	rex pop rdx
   140020c08:	add    BYTE PTR [rax],al
   140020c0a:	data16 (bad) 
   140020c0d:	imul   esp,DWORD PTR [rbp+0x79],0x52
   140020c11:	gs ins BYTE PTR es:[rdi],dx
   140020c13:	gs (bad) 
   140020c15:	jae    0x140020c7c
   140020c17:	rex.RB jbe 0x140020c7f
   140020c1a:	outs   dx,BYTE PTR ds:[rsi]
   140020c1b:	je     0x140020c5d
   140020c1d:	push   rcx
   140020c1e:	push   rdi
   140020c1f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020c27:	rex.RB
   140020c28:	rex.B
   140020c29:	pop    r8
   140020c2b:	push   rax
   140020c2c:	rex.RB
   140020c2d:	push   r14
   140020c2f:	push   rcx
   140020c30:	rex.WXB
   140020c31:	gs jns 0x140020c79
   140020c34:	jbe    0x140020c9b
   140020c36:	outs   dx,BYTE PTR ds:[rsi]
   140020c37:	je     0x140020c79
   140020c39:	rex
   140020c3a:	rex pop rdx
   140020c3c:	add    BYTE PTR [rax],al
   140020c3e:	xchg   ebx,eax
   140020c3f:	or     edi,DWORD PTR [rdi]
   140020c41:	outs   dx,WORD PTR ds:[rsi]
   140020c43:	movsxd esi,DWORD PTR [rbp+0x73]
   140020c46:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140020c48:	rex.RB jbe 0x140020cb0
   140020c4b:	outs   dx,BYTE PTR ds:[rsi]
   140020c4c:	je     0x140020c8e
   140020c4e:	push   rcx
   140020c4f:	push   rdi
   140020c50:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020c58:	rex.RB
   140020c59:	rex.B
   140020c5a:	pop    r8
   140020c5c:	push   rax
   140020c5d:	rex.RB
   140020c5e:	push   r14
   140020c60:	push   rcx
   140020c61:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140020c63:	movsxd esi,DWORD PTR [rbp+0x73]
   140020c66:	rex.RB jbe 0x140020cce
   140020c69:	outs   dx,BYTE PTR ds:[rsi]
   140020c6a:	je     0x140020cac
   140020c6c:	rex
   140020c6d:	rex pop rdx
   140020c6f:	add    BYTE PTR [rcx+0x6f663f0b],bh
   140020c75:	movsxd esi,DWORD PTR [rbp+0x73]
   140020c78:	rex.WRXB jne 0x140020cef
   140020c7b:	rex.RB jbe 0x140020ce3
   140020c7e:	outs   dx,BYTE PTR ds:[rsi]
   140020c7f:	je     0x140020cc1
   140020c81:	push   rcx
   140020c82:	push   rdi
   140020c83:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020c8b:	rex.RB
   140020c8c:	rex.B
   140020c8d:	pop    r8
   140020c8f:	push   rax
   140020c90:	rex.RB
   140020c91:	push   r14
   140020c93:	push   rcx
   140020c94:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140020c96:	movsxd esi,DWORD PTR [rbp+0x73]
   140020c99:	rex.RB jbe 0x140020d01
   140020c9c:	outs   dx,BYTE PTR ds:[rsi]
   140020c9d:	je     0x140020cdf
   140020c9f:	rex
   140020ca0:	rex pop rdx
   140020ca2:	add    BYTE PTR [rax],al
   140020ca4:	mov    ah,0xa
   140020ca6:	(bad)  
   140020ca7:	outs   dx,BYTE PTR gs:[rsi]
   140020ca9:	je     0x140020d10
   140020cab:	jb     0x140020cf2
   140020cad:	jbe    0x140020d14
   140020caf:	outs   dx,BYTE PTR ds:[rsi]
   140020cb0:	je     0x140020cf2
   140020cb2:	push   rcx
   140020cb3:	push   rdi
   140020cb4:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020cbc:	rex.RB
   140020cbd:	rex.B
   140020cbe:	pop    r8
   140020cc0:	push   rax
   140020cc1:	rex.RB
   140020cc2:	push   r14
   140020cc4:	push   rcx
   140020cc5:	rex.RB jbe 0x140020d2d
   140020cc8:	outs   dx,BYTE PTR ds:[rsi]
   140020cc9:	je     0x140020d0b
   140020ccb:	rex
   140020ccc:	rex pop rdx
   140020cce:	add    BYTE PTR [rax],al
   140020cd0:	cdq    
   140020cd1:	(bad)  
   140020cd3:	ins    BYTE PTR es:[rdi],dx
   140020cd4:	gs (bad) 
   140020cd6:	jbe    0x140020d3d
   140020cd8:	rex.RB jbe 0x140020d40
   140020cdb:	outs   dx,BYTE PTR ds:[rsi]
   140020cdc:	je     0x140020d1e
   140020cde:	push   rcx
   140020cdf:	push   rdi
   140020ce0:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020ce8:	rex.RB
   140020ce9:	rex.B
   140020cea:	pop    r8
   140020cec:	push   rax
   140020ced:	rex.RB
   140020cee:	push   r14
   140020cf0:	push   rcx
   140020cf1:	rex.RB jbe 0x140020d59
   140020cf4:	outs   dx,BYTE PTR ds:[rsi]
   140020cf5:	je     0x140020d37
   140020cf7:	rex
   140020cf8:	rex pop rdx
   140020cfa:	add    BYTE PTR [rax],al
   140020cfc:	jns    0x140020d10
   140020cfe:	(bad)  
   140020cff:	jo     0x140020d62
   140020d01:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140020d08:	je     0x140020d4a
   140020d0a:	push   rcx
   140020d0b:	push   rdi
   140020d0c:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140020d13:	rex.WRB
   140020d14:	rex.RB
   140020d15:	rex.B
   140020d16:	pop    r8
   140020d18:	push   rax
   140020d19:	rex.RB
   140020d1a:	push   r14
   140020d1c:	push   rcx
   140020d1d:	push   rax
   140020d1e:	(bad)  
   140020d1f:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140020d26:	je     0x140020d68
   140020d28:	rex
   140020d29:	rex pop rdx
   140020d2b:	add    BYTE PTR [rcx+0x6f6d3f11],bh
   140020d31:	jbe    0x140020d98
   140020d33:	rex.RB jbe 0x140020d9b
   140020d36:	outs   dx,BYTE PTR ds:[rsi]
   140020d37:	je     0x140020d79
   140020d39:	push   rcx
   140020d3a:	push   rdi
   140020d3b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020d43:	rex.RB
   140020d44:	rex.B
   140020d45:	pop    r8
   140020d47:	push   rax
   140020d48:	rex.RB
   140020d49:	push   r14
   140020d4b:	push   rcx
   140020d4c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140020d4e:	jbe    0x140020db5
   140020d50:	rex.RB jbe 0x140020db8
   140020d53:	outs   dx,BYTE PTR ds:[rsi]
   140020d54:	je     0x140020d96
   140020d56:	rex
   140020d57:	rex pop rdx
   140020d59:	add    BYTE PTR [rcx+0x65723f15],ah
   140020d5f:	jae    0x140020dca
   140020d61:	jp     0x140020dc8
   140020d63:	rex.RB jbe 0x140020dcb
   140020d66:	outs   dx,BYTE PTR ds:[rsi]
   140020d67:	je     0x140020da9
   140020d69:	push   rcx
   140020d6a:	push   rdi
   140020d6b:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140020d72:	rex.WRB
   140020d73:	rex.RB
   140020d74:	rex.B
   140020d75:	pop    r8
   140020d77:	push   rax
   140020d78:	rex.RB
   140020d79:	push   r14
   140020d7b:	push   rcx
   140020d7c:	push   rdx
   140020d7d:	gs jae 0x140020de9
   140020d80:	jp     0x140020de7
   140020d82:	rex.RB jbe 0x140020dea
   140020d85:	outs   dx,BYTE PTR ds:[rsi]
   140020d86:	je     0x140020dc8
   140020d88:	rex
   140020d89:	rex pop rdx
   140020d8b:	add    BYTE PTR [rip+0x6c633f07],cl        # 0x1ac654c98
   140020d91:	outs   dx,DWORD PTR ds:[rsi]
   140020d92:	jae    0x140020df9
   140020d94:	rex.RB jbe 0x140020dfc
   140020d97:	outs   dx,BYTE PTR ds:[rsi]
   140020d98:	je     0x140020dda
   140020d9a:	push   rcx
   140020d9b:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140020da3:	rex.WRB
   140020da4:	rex.RB
   140020da5:	rex.B
   140020da6:	pop    r8
   140020da8:	push   rax
   140020da9:	rex.RB
   140020daa:	push   r14
   140020dac:	push   rcx
   140020dad:	rex.XB ins BYTE PTR es:[rdi],dx
   140020daf:	outs   dx,DWORD PTR ds:[rsi]
   140020db0:	jae    0x140020e17
   140020db2:	rex.RB jbe 0x140020e1a
   140020db5:	outs   dx,BYTE PTR ds:[rsi]
   140020db6:	je     0x140020df8
   140020db8:	rex
   140020db9:	rex pop rdx
   140020dbb:	add    BYTE PTR [rbp+0x6f633f07],al
   140020dc1:	outs   dx,BYTE PTR ds:[rsi]
   140020dc2:	je     0x140020e29
   140020dc4:	js     0x140020e3a
   140020dc6:	rex.WRB
   140020dc7:	outs   dx,BYTE PTR gs:[rsi]
   140020dc9:	jne    0x140020e10
   140020dcb:	jbe    0x140020e32
   140020dcd:	outs   dx,BYTE PTR ds:[rsi]
   140020dce:	je     0x140020e10
   140020dd0:	push   rcx
   140020dd1:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140020dd9:	rex.WRB
   140020dda:	rex.RB
   140020ddb:	rex.B
   140020ddc:	pop    r8
   140020dde:	push   rax
   140020ddf:	rex.RB
   140020de0:	push   r14
   140020de2:	push   rcx
   140020de3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140020de5:	outs   dx,BYTE PTR ds:[rsi]
   140020de6:	je     0x140020e4d
   140020de8:	js     0x140020e5e
   140020dea:	rex.WRB
   140020deb:	outs   dx,BYTE PTR gs:[rsi]
   140020ded:	jne    0x140020e34
   140020def:	jbe    0x140020e56
   140020df1:	outs   dx,BYTE PTR ds:[rsi]
   140020df2:	je     0x140020e34
   140020df4:	rex
   140020df5:	rex pop rdx
   140020df7:	add    BYTE PTR [rax],dh
   140020df9:	(bad)  
   140020dfa:	(bad)  
   140020dfb:	je     0x140020e5e
   140020dfd:	(bad)  
   140020dfe:	ins    BYTE PTR es:[rdi],dx
   140020dff:	gs je  0x140020e47
   140020e02:	jbe    0x140020e69
   140020e04:	outs   dx,BYTE PTR ds:[rsi]
   140020e05:	je     0x140020e47
   140020e07:	push   rcx
   140020e08:	push   rdi
   140020e09:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020e11:	rex.RB
   140020e12:	rex.B
   140020e13:	pop    r8
   140020e15:	push   rax
   140020e16:	rex.RB
   140020e17:	push   r14
   140020e19:	push   rcx
   140020e1a:	push   rsp
   140020e1b:	(bad)  
   140020e1c:	(bad)  
   140020e1d:	ins    BYTE PTR es:[rdi],dx
   140020e1e:	gs je  0x140020e66
   140020e21:	jbe    0x140020e88
   140020e23:	outs   dx,BYTE PTR ds:[rsi]
   140020e24:	je     0x140020e66
   140020e26:	rex
   140020e27:	rex pop rdx
   140020e29:	add    bl,dl
   140020e2b:	add    al,0x3f
   140020e2d:	(bad)  
   140020e2e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140020e32:	outs   dx,BYTE PTR ds:[rsi]
   140020e33:	rex.RB jbe 0x140020e9b
   140020e36:	outs   dx,BYTE PTR ds:[rsi]
   140020e37:	je     0x140020e79
   140020e39:	push   rcx
   140020e3a:	push   rdi
   140020e3b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020e43:	rex.RB
   140020e44:	rex.B
   140020e45:	pop    r8
   140020e47:	push   rax
   140020e48:	rex.RB
   140020e49:	push   r14
   140020e4b:	push   rcx
   140020e4c:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140020e51:	outs   dx,BYTE PTR ds:[rsi]
   140020e52:	rex.RB jbe 0x140020eba
   140020e55:	outs   dx,BYTE PTR ds:[rsi]
   140020e56:	je     0x140020e98
   140020e58:	rex
   140020e59:	rex pop rdx
   140020e5b:	add    BYTE PTR [rax],bl
   140020e5d:	or     bh,BYTE PTR [rdi]
   140020e5f:	fs jb  0x140020ec3
   140020e62:	rex.RB outs dx,BYTE PTR ds:[esi]
   140020e65:	je     0x140020ecc
   140020e67:	jb     0x140020eae
   140020e69:	jbe    0x140020ed0
   140020e6b:	outs   dx,BYTE PTR ds:[rsi]
   140020e6c:	je     0x140020eae
   140020e6e:	push   rcx
   140020e6f:	push   rdi
   140020e70:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020e78:	rex.RB
   140020e79:	rex.B
   140020e7a:	pop    r8
   140020e7c:	push   rax
   140020e7d:	rex.RB
   140020e7e:	push   r14
   140020e80:	push   rcx
   140020e81:	rex.R jb 0x140020ee5
   140020e84:	rex.RB outs dx,BYTE PTR ds:[esi]
   140020e87:	je     0x140020eee
   140020e89:	jb     0x140020ed0
   140020e8b:	jbe    0x140020ef2
   140020e8d:	outs   dx,BYTE PTR ds:[rsi]
   140020e8e:	je     0x140020ed0
   140020e90:	rex
   140020e91:	rex pop rdx
   140020e93:	add    BYTE PTR [rdx],dh
   140020e95:	or     bh,BYTE PTR [rdi]
   140020e97:	fs jb  0x140020efb
   140020e9a:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140020e9d:	jbe    0x140020f04
   140020e9f:	rex.RB jbe 0x140020f07
   140020ea2:	outs   dx,BYTE PTR ds:[rsi]
   140020ea3:	je     0x140020ee5
   140020ea5:	push   rcx
   140020ea6:	push   rdi
   140020ea7:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020eaf:	rex.RB
   140020eb0:	rex.B
   140020eb1:	pop    r8
   140020eb3:	push   rax
   140020eb4:	rex.RB
   140020eb5:	push   r14
   140020eb7:	push   rcx
   140020eb8:	rex.R jb 0x140020f1c
   140020ebb:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140020ebe:	jbe    0x140020f25
   140020ec0:	rex.RB jbe 0x140020f28
   140020ec3:	outs   dx,BYTE PTR ds:[rsi]
   140020ec4:	je     0x140020f06
   140020ec6:	rex
   140020ec7:	rex pop rdx
   140020ec9:	add    BYTE PTR [rdx+rcx*1],ah
   140020ecc:	(bad)  
   140020ecd:	fs jb  0x140020f31
   140020ed0:	addr32 rex.WR
   140020ed2:	gs (bad) 
   140020ed4:	jbe    0x140020f3b
   140020ed6:	rex.RB jbe 0x140020f3e
   140020ed9:	outs   dx,BYTE PTR ds:[rsi]
   140020eda:	je     0x140020f1c
   140020edc:	push   rcx
   140020edd:	push   rdi
   140020ede:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020ee6:	rex.RB
   140020ee7:	rex.B
   140020ee8:	pop    r8
   140020eea:	push   rax
   140020eeb:	rex.RB
   140020eec:	push   r14
   140020eee:	push   rcx
   140020eef:	rex.R jb 0x140020f53
   140020ef2:	addr32 rex.WR
   140020ef4:	gs (bad) 
   140020ef6:	jbe    0x140020f5d
   140020ef8:	rex.RB jbe 0x140020f60
   140020efb:	outs   dx,BYTE PTR ds:[rsi]
   140020efc:	je     0x140020f3e
   140020efe:	rex
   140020eff:	rex pop rdx
   140020f01:	add    BYTE PTR [rbp+0xa],ch
   140020f04:	(bad)  
   140020f05:	fs jb  0x140020f77
   140020f08:	jo     0x140020f4f
   140020f0a:	jbe    0x140020f71
   140020f0c:	outs   dx,BYTE PTR ds:[rsi]
   140020f0d:	je     0x140020f4f
   140020f0f:	push   rcx
   140020f10:	push   rdi
   140020f11:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020f19:	rex.RB
   140020f1a:	rex.B
   140020f1b:	pop    r8
   140020f1d:	push   rax
   140020f1e:	rex.RB
   140020f1f:	push   r14
   140020f21:	push   rcx
   140020f22:	rex.R jb 0x140020f94
   140020f25:	jo     0x140020f6c
   140020f27:	jbe    0x140020f8e
   140020f29:	outs   dx,BYTE PTR ds:[rsi]
   140020f2a:	je     0x140020f6c
   140020f2c:	rex
   140020f2d:	rex pop rdx
   140020f2f:	add    BYTE PTR [rbp+0x1c],cl
   140020f32:	(bad)  
   140020f33:	jae    0x140020f9d
   140020f35:	outs   dx,DWORD PTR ds:[rsi]
   140020f36:	ja     0x140020f7d
   140020f38:	jbe    0x140020f9f
   140020f3a:	outs   dx,BYTE PTR ds:[rsi]
   140020f3b:	je     0x140020f7d
   140020f3d:	push   rcx
   140020f3e:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140020f46:	rex.WRB
   140020f47:	rex.RB
   140020f48:	rex.B
   140020f49:	pop    r8
   140020f4b:	push   rax
   140020f4c:	rex.RB
   140020f4d:	push   r14
   140020f4f:	push   rcx
   140020f50:	push   rbx
   140020f51:	push   0x7645776f
   140020f56:	outs   dx,BYTE PTR gs:[rsi]
   140020f58:	je     0x140020f9a
   140020f5a:	rex
   140020f5b:	rex pop rdx
   140020f5d:	add    BYTE PTR [rbp+0x69683f0c],ah
   140020f63:	fs gs rex.RB jbe 0x140020fcd
   140020f68:	outs   dx,BYTE PTR ds:[rsi]
   140020f69:	je     0x140020fab
   140020f6b:	push   rcx
   140020f6c:	push   rdi
   140020f6d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020f75:	rex.RB
   140020f76:	rex.B
   140020f77:	pop    r8
   140020f79:	push   rax
   140020f7a:	rex.RB
   140020f7b:	push   r14
   140020f7d:	push   rcx
   140020f7e:	imul   rsp,QWORD PTR [rbp+riz*2+0x45],0x746e6576
   140020f87:	rex
   140020f88:	rex
   140020f89:	rex pop rdx
   140020f8b:	add    al,cl
   140020f8d:	adc    DWORD PTR [rdi],edi
   140020f8f:	outs   dx,BYTE PTR ds:[rsi]
   140020f90:	(bad)  
   140020f91:	je     0x140020ffc
   140020f93:	jbe    0x140020ffa
   140020f95:	rex.RB jbe 0x140020ffd
   140020f98:	outs   dx,BYTE PTR ds:[rsi]
   140020f99:	je     0x140020fdb
   140020f9b:	push   rcx
   140020f9c:	push   rdi
   140020f9d:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140020fa4:	rex.WRB
   140020fa5:	rex.RB
   140020fa6:	rex.B
   140020fa7:	pop    r15
   140020fa9:	rex.WRX
   140020faa:	rex.B
   140020fab:	rex.RB
   140020fac:	rex.X push rsi
   140020fae:	push   rcx
   140020faf:	rex.X jns 0x140021026
   140020fb2:	gs rex.B jb 0x140021028
   140020fb6:	(bad)  
   140020fb7:	jns    0x140020ff9
   140020fb9:	rex push rax
   140020fbb:	rex.RB
   140020fbc:	pop    r8
   140020fbe:	push   rax
   140020fbf:	rex.RB
   140020fc0:	rex.B
   140020fc1:	rex.WX
   140020fc2:	rex pop rdx
   140020fc4:	add    BYTE PTR [rax],al
   140020fc6:	mov    WORD PTR [rsi],es
   140020fc8:	(bad)  
   140020fc9:	movsxd ebp,DWORD PTR [rax+0x61]
   140020fcc:	outs   dx,BYTE PTR ds:[rsi]
   140020fcd:	addr32 gs rex.RB jbe 0x140021037
   140020fd2:	outs   dx,BYTE PTR ds:[rsi]
   140020fd3:	je     0x140021015
   140020fd5:	push   rcx
   140020fd6:	push   rdi
   140020fd7:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140020fdf:	rex.RB
   140020fe0:	rex.B
   140020fe1:	pop    r8
   140020fe3:	push   rax
   140020fe4:	rex.RB
   140020fe5:	push   r14
   140020fe7:	push   rcx
   140020fe8:	rex.RB jbe 0x140021050
   140020feb:	outs   dx,BYTE PTR ds:[rsi]
   140020fec:	je     0x14002102e
   140020fee:	rex
   140020fef:	rex pop rdx
   140020ff1:	add    BYTE PTR [rcx+0xd],bh
   140020ff4:	(bad)  
   140020ff5:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   140020ffc:	je     0x140021066
   140020ffe:	outs   dx,DWORD PTR ds:[rsi]
   140020fff:	fs rex.RB jbe 0x140021068
   140021003:	outs   dx,BYTE PTR ds:[rsi]
   140021004:	je     0x140021046
   140021006:	push   rcx
   140021007:	push   rdi
   140021008:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140021010:	rex.RB
   140021011:	rex.B
   140021012:	pop    r8
   140021014:	push   rax
   140021015:	rex.RB
   140021016:	push   r14
   140021018:	push   rcx
   140021019:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002101b:	jo     0x140021092
   14002101d:	je     0x14002106c
   14002101f:	gs je  0x14002108a
   140021022:	outs   dx,DWORD PTR ds:[rsi]
   140021023:	fs rex.RB jbe 0x14002108c
   140021027:	outs   dx,BYTE PTR ds:[rsi]
   140021028:	je     0x14002106a
   14002102a:	rex
   14002102b:	rex pop rdx
   14002102d:	add    BYTE PTR [rcx+0x6e693f0d],cl
   140021033:	jo     0x1400210aa
   140021035:	je     0x140021084
   140021037:	gs je  0x1400210a2
   14002103a:	outs   dx,DWORD PTR ds:[rsi]
   14002103b:	fs push rcx
   14002103d:	jne    0x1400210a4
   14002103f:	jb     0x1400210ba
   140021041:	rex push rcx
   140021043:	push   rdi
   140021044:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   14002104c:	rex.RB
   14002104d:	rex.X
   14002104e:	rex.B (bad) 
   140021050:	push   r14
   140021052:	push   rcx
   140021053:	push   rsi
   140021054:	(bad)  
   140021055:	jb     0x1400210c0
   140021057:	(bad)  
   140021058:	outs   dx,BYTE PTR ds:[rsi]
   140021059:	je     0x14002109b
   14002105b:	rex push rdi
   14002105d:	xor    al,0x49
   14002105f:	outs   dx,BYTE PTR ds:[rsi]
   140021060:	jo     0x1400210d7
   140021062:	je     0x1400210b1
   140021064:	gs je  0x1400210cf
   140021067:	outs   dx,DWORD PTR ds:[rsi]
   140021068:	fs push rcx
   14002106a:	jne    0x1400210d1
   14002106c:	jb     0x1400210e7
   14002106e:	rex push rcx
   140021070:	je     0x1400210b2
   140021072:	rex
   140021073:	rex pop rdx
   140021075:	add    BYTE PTR [rbx+rcx*1+0x636f663f],ah
   14002107c:	jne    0x1400210f1
   14002107e:	rex.WRX
   14002107f:	gs js  0x1400210f6
   140021082:	push   rax
   140021083:	jb     0x1400210ea
   140021085:	jbe    0x1400210ca
   140021087:	push   0x40646c69
   14002108c:	push   rcx
   14002108d:	push   rdi
   14002108e:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140021096:	rex.RB
   140021097:	rex.B
   140021098:	pop    r15
   14002109a:	rex.WRX pop rdi
   14002109c:	rex.WRX
   14002109d:	rex pop rdx
   14002109f:	add    BYTE PTR [rsi],al
   1400210a1:	adc    bh,BYTE PTR [rdi]
   1400210a3:	outs   dx,DWORD PTR ds:[rsi]
   1400210a4:	jo     0x14002110b
   1400210a6:	outs   dx,BYTE PTR ds:[rsi]
   1400210a7:	rex push rcx
   1400210a9:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   1400210b1:	push   rbp
   1400210b2:	rex.RB
   1400210b3:	rex.B
   1400210b4:	pop    r8
   1400210b6:	pop    rax
   1400210b7:	pop    rdx
   1400210b8:	add    BYTE PTR [rax],al
   1400210ba:	adc    eax,0x78653f0b
   1400210bf:	movsxd eax,DWORD PTR gs:[rax+0x51]
   1400210c3:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   1400210cb:	push   rbp
   1400210cc:	rex.RB
   1400210cd:	rex.B
   1400210ce:	rex.B
   1400210cf:	rex.W pop rax
   1400210d1:	pop    rdx
   1400210d2:	add    BYTE PTR [rax],al
   1400210d4:	add    BYTE PTR [rdx],cl
   1400210d6:	(bad)  
   1400210d7:	outs   dx,DWORD PTR fs:[rsi]
   1400210d9:	outs   dx,BYTE PTR ds:[rsi]
   1400210da:	gs rex push rcx
   1400210dd:	push   rdi
   1400210de:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   1400210e5:	rex.WRB
   1400210e6:	rex.RB
   1400210e7:	rex.B
   1400210e8:	pop    r8
   1400210ea:	rex.W
   1400210eb:	rex pop rdx
   1400210ed:	add    BYTE PTR [rbp+0x63613f04],dh
   1400210f3:	movsxd esp,DWORD PTR [rbp+0x70]
   1400210f6:	je     0x140021138
   1400210f8:	push   rcx
   1400210f9:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   140021101:	push   rbp
   140021102:	rex.RB
   140021103:	rex.B
   140021104:	pop    r8
   140021106:	pop    rax
   140021107:	pop    rdx
   140021108:	add    BYTE PTR [rax],al
   14002110a:	or     al,0x15
   14002110c:	(bad)  
   14002110d:	jb     0x140021174
   14002110f:	push   0x65
   140021111:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140021115:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14002111d:	push   rbp
   14002111e:	rex.RB
   14002111f:	rex.B
   140021120:	pop    r8
   140021122:	pop    rax
   140021123:	pop    rdx
   140021124:	add    BYTE PTR [rax],al
   140021126:	mov    bl,0x20
   140021128:	(bad)  
   140021129:	jbe    0x14002118c
   14002112b:	ins    BYTE PTR es:[rdi],dx
   14002112c:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x72754365
   140021134:	jb     0x14002119b
   140021136:	outs   dx,BYTE PTR ds:[rsi]
   140021137:	je     0x140021189
   140021139:	(bad)  
   14002113a:	addr32 gs rex push rcx
   14002113e:	push   rdi
   14002113f:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140021146:	push   rbp
   140021147:	rex.RB
   140021148:	rex.B
   140021149:	pop    r15
   14002114b:	rex.WRX pop rax
   14002114d:	pop    rdx
   14002114e:	add    BYTE PTR [rax],al
   140021150:	xlat   BYTE PTR ds:[rbx]
   140021151:	adc    DWORD PTR [rdi],edi
   140021153:	outs   dx,BYTE PTR ds:[rsi]
   140021154:	gs js  0x1400211cb
   140021157:	rex.WB
   140021158:	fs rex push rcx
   14002115b:	push   rdi
   14002115c:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140021163:	push   rbp
   140021164:	rex.RB
   140021165:	rex.X
   140021166:	rex.B
   140021167:	rex.W pop rax
   140021169:	pop    rdx
   14002116a:	add    BYTE PTR [rax],al
   14002116c:	enter  0x3f06,0x63
   140021170:	ins    BYTE PTR es:[rdi],dx
   140021171:	gs (bad) 
   140021173:	outs   dx,BYTE PTR ds:[rsi]
   140021174:	jne    0x1400211e6
   140021176:	push   rax
   140021177:	(bad)  
   140021178:	addr32 gs rex push rcx
   14002117c:	push   rdi
   14002117d:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140021184:	rex.WRB
   140021185:	rex.RB
   140021186:	rex.B
   140021187:	pop    r8
   140021189:	rex.W
   14002118a:	rex pop rdx
   14002118c:	add    BYTE PTR [rax],al
   14002118e:	(bad)  
   14002118f:	or     DWORD PTR [rdi],edi
   140021191:	fs gs jbe 0x1400211e9
   140021195:	jns    0x140021207
   140021197:	gs rex push rcx
   14002119a:	push   rdi
   14002119b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   1400211a3:	rex.RB
   1400211a4:	rex.X
   1400211a5:	rex.B
   1400211a6:	rex.W pop rax
   1400211a8:	pop    rdx
   1400211a9:	add    BYTE PTR [rdi+0x12],cl
   1400211ac:	(bad)  
   1400211ad:	jo     0x140021210
   1400211af:	imul   ebp,DWORD PTR [rsi+0x74],0x69676e45
   1400211b6:	outs   dx,BYTE PTR ds:[rsi]
   1400211b7:	gs rex push rcx
   1400211ba:	push   rdi
   1400211bb:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   1400211c3:	rex.RB
   1400211c4:	rex.X
   1400211c5:	push   r8
   1400211c7:	rex.RB
   1400211c8:	push   r14
   1400211ca:	push   rcx
   1400211cb:	push   rax
   1400211cc:	(bad)  
   1400211cd:	imul   ebp,DWORD PTR [rsi+0x74],0x69676e45
   1400211d4:	outs   dx,BYTE PTR ds:[rsi]
   1400211d5:	gs rex
   1400211d7:	rex pop rax
   1400211d9:	pop    rdx
   1400211da:	add    BYTE PTR [rax],al
   1400211dc:	fcom   DWORD PTR [rax]
   1400211de:	(bad)  
   1400211df:	ins    DWORD PTR es:[rdi],dx
   1400211e0:	gs je  0x140021255
   1400211e3:	imul   esp,DWORD PTR [rbx+0x40],0x64695751
   1400211ea:	addr32 gs je 0x14002122e
   1400211ee:	rex
   1400211ef:	rex.WRB
   1400211f0:	rex.RB
   1400211f1:	rex.X
   1400211f2:	rex.B
   1400211f3:	rex.W push rdi
   1400211f5:	xor    al,0x50
   1400211f7:	(bad)  
   1400211f8:	imul   ebp,DWORD PTR [rsi+0x74],0x69766544
   1400211ff:	movsxd esp,DWORD PTR [rbp+0x4d]
   140021202:	gs je  0x140021277
   140021205:	imul   esp,DWORD PTR [rbx+0x40],0x69615051
   14002120c:	outs   dx,BYTE PTR ds:[rsi]
   14002120d:	je     0x140021253
   14002120f:	gs jbe 0x14002127b
   140021212:	movsxd esp,DWORD PTR [rbp+0x40]
   140021215:	rex
   140021216:	rex pop rdx
   140021218:	add    BYTE PTR [rax],al
   14002121a:	rex.X or eax,0x696e693f
   140021220:	je     0x140021272
   140021222:	(bad)  
   140021223:	imul   ebp,DWORD PTR [rsi+0x74],0x51407265
   14002122a:	push   rdi
   14002122b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140021233:	rex.RB
   140021234:	rex.X
   140021235:	pop    r8
   140021237:	push   rax
   140021238:	rex.RB
   140021239:	push   r14
   14002123b:	push   rcx
   14002123c:	push   rax
   14002123d:	(bad)  
   14002123e:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   140021245:	rex pop rdx
   140021247:	add    al,dh
   140021249:	adc    al,0x3f
   14002124b:	jb     0x1400212b2
   14002124d:	imul   esi,DWORD PTR fs:[rdx+0x65],0x64657463
   140021255:	rex push rcx
   140021257:	push   rdi
   140021258:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140021260:	rex.RB
   140021261:	rex.X
   140021262:	push   r8
   140021264:	rex.RB
   140021265:	push   r14
   140021267:	push   rcx
   140021268:	push   rax
   140021269:	(bad)  
   14002126a:	imul   ebp,DWORD PTR [rsi+0x74],0x69766544
   140021271:	movsxd esp,DWORD PTR [rbp+0x40]
   140021274:	rex push rax
   140021276:	rex.RB
   140021277:	push   r14
   140021279:	push   rcx
   14002127a:	push   rax
   14002127b:	outs   dx,DWORD PTR ds:[rsi]
   14002127c:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   140021283:	add    BYTE PTR [rcx],bh
   140021285:	sbb    al,0x3f
   140021287:	jae    0x1400212f1
   140021289:	(bad)  
   14002128a:	jb     0x1400212f1
   14002128c:	fs push rax
   14002128e:	(bad)  
   14002128f:	imul   ebp,DWORD PTR [rsi+0x74],0x51407265
   140021296:	push   rdi
   140021297:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14002129f:	rex.RB
   1400212a0:	rex.X
   1400212a1:	push   r8
   1400212a3:	rex.RB
   1400212a4:	push   r14
   1400212a6:	push   rcx
   1400212a7:	push   rax
   1400212a8:	(bad)  
   1400212a9:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   1400212b0:	pop    rax
   1400212b1:	pop    rdx
   1400212b2:	add    BYTE PTR [rax],al
   1400212b4:	jge    0x1400212b8
   1400212b6:	(bad)  
   1400212b7:	(bad)  
   1400212b8:	xor    DWORD PTR [rcx+0x57],edx
   1400212bb:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   1400212c2:	push   rbp
   1400212c3:	rex.RB
   1400212c4:	rex.B
   1400212c5:	rex.B
   1400212c6:	rex pop rax
   1400212c8:	pop    rdx
   1400212c9:	add    BYTE PTR [rcx+0x1b],dl
   1400212cc:	(bad)  
   1400212cd:	jae    0x140021334
   1400212cf:	je     0x140021325
   1400212d1:	gs js  0x140021348
   1400212d4:	rex push rcx
   1400212d6:	(bad)
   1400212dc:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   1400212e0:	je     0x140021356
   1400212e2:	outs   dx,DWORD PTR ds:[rsi]
   1400212e3:	outs   dx,BYTE PTR ds:[rsi]
   1400212e4:	rex
   1400212e5:	rex push rcx
   1400212e7:	rex.RB
   1400212e8:	rex.B
   1400212e9:	pop    r8
   1400212eb:	rex.B
   1400212ec:	rex.RB
   1400212ed:	rex.X push rsi
   1400212ef:	push   rcx
   1400212f0:	push   rbx
   1400212f1:	je     0x140021365
   1400212f3:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400212fa:	add    BYTE PTR [rax],al
   1400212fc:	push   rsp
   1400212fd:	sbb    edi,DWORD PTR [rdi]
   1400212ff:	jae    0x140021366
   140021301:	je     0x140021357
   140021303:	gs js  0x14002137a
   140021306:	rex push rcx
   140021308:	rex.WR (bad) 
   14002130a:	(bad)  
   14002130b:	gs ins BYTE PTR es:[rdi],dx
   14002130d:	rex
   14002130e:	rex push rcx
   140021310:	rex.RB
   140021311:	rex.B
   140021312:	pop    r8
   140021314:	rex.B
   140021315:	rex.RB
   140021316:	rex.X push rsi
   140021318:	push   rcx
   140021319:	push   rbx
   14002131a:	je     0x14002138e
   14002131c:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140021323:	add    BYTE PTR [rsi],bh
   140021325:	add    eax,0x6464613f
   14002132a:	rex.WR (bad) 
   14002132c:	jns    0x14002139d
   14002132e:	jne    0x1400213a4
   140021330:	rex push rcx
   140021332:	rex.RXB jb 0x14002139e
   140021335:	fs rex.WR (bad) 
   140021338:	jns    0x1400213a9
   14002133a:	jne    0x1400213b0
   14002133c:	rex
   14002133d:	rex push rcx
   14002133f:	rex.RB
   140021340:	rex.B
   140021341:	pop    r8
   140021343:	push   rax
   140021344:	rex.RB
   140021345:	push   r14
   140021347:	push   rcx
   140021348:	rex.WR (bad) 
   14002134a:	jns    0x1400213bb
   14002134c:	jne    0x1400213c2
   14002134e:	rex
   14002134f:	rex
   140021350:	rex.W
   140021351:	rex.W
   140021352:	rex.W
   140021353:	rex.W push rsi
   140021355:	(bad)  
   140021356:	and    al,0x51
   140021358:	rex.RX ins BYTE PTR es:[rdi],dx
   14002135a:	(bad)  
   14002135b:	addr32 jae 0x14002139e
   14002135e:	push   rdi
   14002135f:	xor    al,0x41
   140021361:	ins    BYTE PTR es:[rdi],dx
   140021362:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   140021369:	rex.RX ins BYTE PTR es:[rdi],dx
   14002136b:	(bad)  
   14002136c:	addr32 rex push rcx
   14002136f:	je     0x1400213b1
   140021371:	rex
   140021372:	rex
   140021373:	rex
   140021374:	rex pop rdx
   140021376:	add    BYTE PTR [rax],al
   140021378:	jns    0x14002137b
   14002137a:	(bad)  
   14002137b:	(bad)  
   14002137c:	xor    BYTE PTR [rcx+0x54],dl
   14002137f:	outs   dx,DWORD PTR ds:[rsi]
   140021380:	outs   dx,DWORD PTR ds:[rsi]
   140021381:	ins    BYTE PTR es:[rdi],dx
   140021382:	rex.X jne 0x1400213f9
   140021385:	je     0x1400213f6
   140021387:	outs   dx,BYTE PTR ds:[rsi]
   140021388:	rex
   140021389:	rex push rcx
   14002138b:	rex.RB
   14002138c:	rex.B
   14002138d:	rex.B
   14002138e:	rex push rax
   140021390:	rex.RB
   140021391:	push   r14
   140021393:	push   rcx
   140021394:	push   rdi
   140021395:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14002139d:	pop    rdx
   14002139e:	add    BYTE PTR [rax],al
   1400213a0:	jb     0x1400213a7
   1400213a2:	(bad)  
   1400213a3:	(bad)  
   1400213a4:	fs fs push rdi
   1400213a7:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x42514074
   1400213af:	outs   dx,DWORD PTR ds:[rsi]
   1400213b0:	js     0x1400213fe
   1400213b2:	(bad)  
   1400213b3:	jns    0x140021424
   1400213b5:	jne    0x14002142b
   1400213b7:	rex
   1400213b8:	rex push rcx
   1400213ba:	rex.RB
   1400213bb:	rex.B
   1400213bc:	pop    r8
   1400213be:	push   rax
   1400213bf:	rex.RB
   1400213c0:	push   r14
   1400213c2:	push   rcx
   1400213c3:	push   rdi
   1400213c4:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x48404074
   1400213cc:	push   rsi
   1400213cd:	(bad)  
   1400213ce:	and    al,0x51
   1400213d0:	rex.RX ins BYTE PTR es:[rdi],dx
   1400213d2:	(bad)  
   1400213d3:	addr32 jae 0x140021416
   1400213d6:	push   rdi
   1400213d7:	xor    al,0x41
   1400213d9:	ins    BYTE PTR es:[rdi],dx
   1400213da:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   1400213e1:	rex.RX ins BYTE PTR es:[rdi],dx
   1400213e3:	(bad)  
   1400213e4:	addr32 rex push rcx
   1400213e7:	je     0x140021429
   1400213e9:	rex
   1400213ea:	rex
   1400213eb:	rex
   1400213ec:	rex pop rdx
   1400213ee:	add    BYTE PTR [rax],al
   1400213f0:	mov    BYTE PTR [rax],0x3f
   1400213f3:	(bad)  
   1400213f4:	xor    BYTE PTR [rcx+0x4c],dl
   1400213f7:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   1400213fe:	rex
   1400213ff:	rex push rcx
   140021401:	rex.RB
   140021402:	rex.B
   140021403:	rex.B
   140021404:	rex push rax
   140021406:	rex.RB
   140021407:	push   r14
   140021409:	push   rcx
   14002140a:	push   rdi
   14002140b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140021413:	pop    rdx
   140021414:	add    BYTE PTR [rax],al
   140021416:	hlt    
   140021417:	sbb    bh,BYTE PTR [rdi]
   140021419:	jae    0x140021480
   14002141b:	je     0x140021470
   14002141d:	jo     0x140021480
   14002141f:	movsxd ebp,DWORD PTR [rcx+0x6e]
   140021422:	addr32 rex push rcx
   140021425:	rex.X outs dx,DWORD PTR ds:[rsi]
   140021427:	js     0x140021475
   140021429:	(bad)  
   14002142a:	jns    0x14002149b
   14002142c:	jne    0x1400214a2
   14002142e:	rex
   14002142f:	rex push rcx
   140021431:	rex.RB
   140021432:	rex.B
   140021433:	pop    r8
   140021435:	rex.W
   140021436:	rex pop rdx
   140021438:	add    BYTE PTR [rax],al
   14002143a:	lods   al,BYTE PTR ds:[rsi]
   14002143b:	add    BYTE PTR [rdi],bh
   14002143d:	(bad)  
   14002143e:	xor    BYTE PTR [rcx+0x48],dl
   140021441:	rex.X outs dx,DWORD PTR ds:[rsi]
   140021443:	js     0x140021491
   140021445:	(bad)  
   140021446:	jns    0x1400214b7
   140021448:	jne    0x1400214be
   14002144a:	rex
   14002144b:	rex push rcx
   14002144d:	rex.RB
   14002144e:	rex.B
   14002144f:	rex.B
   140021450:	rex pop rax
   140021452:	pop    rdx
   140021453:	add    BYTE PTR [rbp+0x5],dh
   140021456:	(bad)  
   140021457:	(bad)  
   140021458:	fs fs push rdi
   14002145b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x47514074
   140021463:	jb     0x1400214ce
   140021465:	fs rex.WR (bad) 
   140021468:	jns    0x1400214d9
   14002146a:	jne    0x1400214e0
   14002146c:	rex
   14002146d:	rex push rcx
   14002146f:	rex.RB
   140021470:	rex.B
   140021471:	pop    r8
   140021473:	push   rax
   140021474:	rex.RB
   140021475:	push   r14
   140021477:	push   rcx
   140021478:	push   rdi
   140021479:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x48404074
   140021481:	rex.W
   140021482:	rex.W
   140021483:	rex.W push rsi
   140021485:	(bad)  
   140021486:	and    al,0x51
   140021488:	rex.RX ins BYTE PTR es:[rdi],dx
   14002148a:	(bad)  
   14002148b:	addr32 jae 0x1400214ce
   14002148e:	push   rdi
   14002148f:	xor    al,0x41
   140021491:	ins    BYTE PTR es:[rdi],dx
   140021492:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   140021499:	rex.RX ins BYTE PTR es:[rdi],dx
   14002149b:	(bad)  
   14002149c:	addr32 rex push rcx
   14002149f:	je     0x1400214e1
   1400214a1:	rex
   1400214a2:	rex
   1400214a3:	rex
   1400214a4:	rex pop rdx
   1400214a6:	add    BYTE PTR [rax],al
   1400214a8:	ficomp WORD PTR [rdx]
   1400214aa:	(bad)  
   1400214ab:	jae    0x140021512
   1400214ad:	je     0x140021502
   1400214af:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   1400214b6:	movsxd edi,DWORD PTR [rcx+0x40]
   1400214b9:	push   rcx
   1400214ba:	push   rdi
   1400214bb:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400214c3:	rex.RB
   1400214c4:	rex.B
   1400214c5:	pop    r8
   1400214c7:	push   rsi
   1400214c8:	push   rcx
   1400214c9:	push   rbx
   1400214ca:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   1400214d1:	movsxd edi,DWORD PTR [rcx+0x40]
   1400214d4:	rex
   1400214d5:	rex pop rdx
   1400214d7:	add    dl,dl
   1400214d9:	sbb    al,0x3f
   1400214db:	jae    0x140021546
   1400214dd:	jp     0x140021544
   1400214df:	push   rax
   1400214e0:	outs   dx,DWORD PTR ds:[rsi]
   1400214e1:	ins    BYTE PTR es:[rdi],dx
   1400214e2:	imul   esp,DWORD PTR [rbx+0x79],0x69575140
   1400214e9:	fs addr32 gs je 0x14002152e
   1400214ee:	rex push rcx
   1400214f0:	rex.RB
   1400214f1:	rex.X
   1400214f2:	rex.B (bad) 
   1400214f4:	push   r14
   1400214f6:	push   rcx
   1400214f7:	push   rbx
   1400214f8:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   1400214ff:	movsxd edi,DWORD PTR [rcx+0x40]
   140021502:	rex pop rax
   140021504:	pop    rdx
   140021505:	add    ch,al
   140021507:	sbb    edi,DWORD PTR [rdi]
   140021509:	jae    0x140021570
   14002150b:	je     0x140021563
   14002150d:	gs jb  0x140021584
   140021510:	imul   esp,DWORD PTR [rbx+0x61],0x7274536c
   140021517:	gs je  0x14002157d
   14002151a:	push   0x69535140
   14002151f:	jp     0x140021586
   140021521:	push   rax
   140021522:	outs   dx,DWORD PTR ds:[rsi]
   140021523:	ins    BYTE PTR es:[rdi],dx
   140021524:	imul   esp,DWORD PTR [rbx+0x79],0x45514040
   14002152b:	rex.B
   14002152c:	pop    r8
   14002152e:	rex.W
   14002152f:	rex pop rdx
   140021531:	add    dh,cl
   140021533:	sbb    BYTE PTR [rdi],bh
   140021535:	jae    0x14002159c
   140021537:	je     0x140021581
   140021539:	outs   dx,DWORD PTR ds:[rsi]
   14002153a:	jb     0x1400215a5
   14002153c:	jp     0x1400215ad
   14002153e:	outs   dx,BYTE PTR ds:[rsi]
   14002153f:	je     0x1400215a2
   140021541:	ins    BYTE PTR es:[rdi],dx
   140021542:	push   rbx
   140021543:	je     0x1400215b7
   140021545:	gs je  0x1400215ab
   140021548:	push   0x69535140
   14002154d:	jp     0x1400215b4
   14002154f:	push   rax
   140021550:	outs   dx,DWORD PTR ds:[rsi]
   140021551:	ins    BYTE PTR es:[rdi],dx
   140021552:	imul   esp,DWORD PTR [rbx+0x79],0x45514040
   140021559:	rex.B
   14002155a:	pop    r8
   14002155c:	rex.W
   14002155d:	rex pop rdx
   14002155f:	add    BYTE PTR [rdi+rdx*1+0x7465733f],al
   140021566:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140021568:	outs   dx,BYTE PTR ds:[rsi]
   140021569:	je     0x1400215dd
   14002156b:	outs   dx,DWORD PTR ds:[rsi]
   14002156c:	ins    BYTE PTR es:[rdi],dx
   14002156d:	push   rsp
   14002156e:	jns    0x1400215e0
   140021570:	gs rex push rcx
   140021573:	push   rbx
   140021574:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   14002157b:	movsxd edi,DWORD PTR [rcx+0x40]
   14002157e:	rex push rcx
   140021580:	rex.RB
   140021581:	rex.B
   140021582:	pop    r8
   140021584:	push   rdi
   140021585:	xor    al,0x43
   140021587:	outs   dx,DWORD PTR ds:[rsi]
   140021588:	outs   dx,BYTE PTR ds:[rsi]
   140021589:	je     0x1400215fd
   14002158b:	outs   dx,DWORD PTR ds:[rsi]
   14002158c:	ins    BYTE PTR es:[rdi],dx
   14002158d:	push   rsp
   14002158e:	jns    0x140021600
   140021590:	rex xor DWORD PTR gs:[rax+0x40],eax
   140021595:	pop    rdx
   140021596:	add    BYTE PTR [rax],al
   140021598:	mov    ebp,0x303f3f00
   14002159d:	push   rcx
   14002159e:	rex.WR (bad) 
   1400215a0:	(bad)  
   1400215a1:	gs ins BYTE PTR es:[rdi],dx
   1400215a3:	rex
   1400215a4:	rex push rcx
   1400215a6:	rex.RB
   1400215a7:	rex.B
   1400215a8:	rex.B
   1400215a9:	rex push rax
   1400215ab:	rex.RB
   1400215ac:	push   r14
   1400215ae:	push   rcx
   1400215af:	push   rdi
   1400215b0:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x56404074
   1400215b8:	(bad)  
   1400215b9:	and    al,0x51
   1400215bb:	rex.RX ins BYTE PTR es:[rdi],dx
   1400215bd:	(bad)  
   1400215be:	addr32 jae 0x140021601
   1400215c1:	push   rdi
   1400215c2:	xor    al,0x57
   1400215c4:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   1400215cb:	jo     0x140021632
   1400215cd:	rex push rcx
   1400215cf:	je     0x140021611
   1400215d1:	rex
   1400215d2:	rex
   1400215d3:	rex
   1400215d4:	rex pop rdx
   1400215d6:	add    BYTE PTR [rax],al
   1400215d8:	xor    eax,0x64613f05
   1400215dd:	fs rex.WB je 0x140021646
   1400215e1:	ins    DWORD PTR es:[rdi],dx
   1400215e2:	rex push rcx
   1400215e4:	rex.RXB jb 0x140021650
   1400215e7:	fs rex.WR (bad) 
   1400215ea:	jns    0x14002165b
   1400215ec:	jne    0x140021662
   1400215ee:	rex
   1400215ef:	rex push rcx
   1400215f1:	rex.RB
   1400215f2:	rex.B
   1400215f3:	pop    r8
   1400215f5:	push   rax
   1400215f6:	rex.RB
   1400215f7:	push   r14
   1400215f9:	push   rcx
   1400215fa:	rex.WR (bad) 
   1400215fc:	jns    0x14002166d
   1400215fe:	jne    0x140021674
   140021600:	rex.WB je 0x140021668
   140021603:	ins    DWORD PTR es:[rdi],dx
   140021604:	rex
   140021605:	rex
   140021606:	rex.W
   140021607:	rex.W
   140021608:	rex.W
   140021609:	rex.W push rsi
   14002160b:	(bad)  
   14002160c:	and    al,0x51
   14002160e:	rex.RX ins BYTE PTR es:[rdi],dx
   140021610:	(bad)  
   140021611:	addr32 jae 0x140021654
   140021614:	push   rdi
   140021615:	xor    al,0x41
   140021617:	ins    BYTE PTR es:[rdi],dx
   140021618:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   14002161f:	rex.RX ins BYTE PTR es:[rdi],dx
   140021621:	(bad)  
   140021622:	addr32 rex push rcx
   140021625:	je     0x140021667
   140021627:	rex
   140021628:	rex
   140021629:	rex
   14002162a:	rex pop rdx
   14002162c:	add    BYTE PTR [rax],al
   14002162e:	add    eax,DWORD PTR [rcx]
   140021630:	(bad)  
   140021631:	(bad)  
   140021632:	xor    BYTE PTR [rcx+0x53],dl
   140021635:	jo     0x140021698
   140021637:	movsxd esp,DWORD PTR [rbp+0x72]
   14002163a:	rex.WB je 0x1400216a2
   14002163d:	ins    DWORD PTR es:[rdi],dx
   14002163e:	rex
   14002163f:	rex push rcx
   140021641:	rex.RB
   140021642:	rex.B
   140021643:	rex.B
   140021644:	rex
   140021645:	rex.W
   140021646:	rex.W push rdi
   140021648:	xor    al,0x50
   14002164a:	outs   dx,DWORD PTR ds:[rsi]
   14002164b:	ins    BYTE PTR es:[rdi],dx
   14002164c:	imul   esp,DWORD PTR [rbx+0x79],0x69535140
   140021653:	jp     0x1400216ba
   140021655:	push   rax
   140021656:	outs   dx,DWORD PTR ds:[rsi]
   140021657:	ins    BYTE PTR es:[rdi],dx
   140021658:	imul   esp,DWORD PTR [rbx+0x79],0x40304040
   14002165f:	pop    rdx
   140021660:	add    BYTE PTR [rax],al
   140021662:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140021663:	add    BYTE PTR [rdi],bh
   140021665:	(bad)  
   140021666:	xor    BYTE PTR [rcx+0x47],dl
   140021669:	jb     0x1400216d4
   14002166b:	fs rex.WR (bad) 
   14002166e:	jns    0x1400216df
   140021670:	jne    0x1400216e6
   140021672:	rex
   140021673:	rex push rcx
   140021675:	rex.RB
   140021676:	rex.B
   140021677:	rex.B
   140021678:	rex push rax
   14002167a:	rex.RB
   14002167b:	push   r14
   14002167d:	push   rcx
   14002167e:	push   rdi
   14002167f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140021687:	pop    rdx
   140021688:	add    BYTE PTR [rax],al
   14002168a:	jp     0x1400216a1
   14002168c:	(bad)  
   14002168d:	jb     0x1400216f4
   14002168f:	jae    0x1400216fa
   140021691:	jp     0x1400216f8
   140021693:	rex push rcx
   140021695:	push   rdi
   140021696:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14002169e:	rex.RB
   14002169f:	rex.B
   1400216a0:	pop    r8
   1400216a2:	rex.B
   1400216a3:	rex.RB
   1400216a4:	rex.X push rsi
   1400216a6:	push   rcx
   1400216a7:	push   rbx
   1400216a8:	imul   edi,DWORD PTR [rdx+0x65],0x5a404040
   1400216af:	add    BYTE PTR [rsi+0x656d3f10],al
   1400216b5:	je     0x140021718
   1400216b7:	rex.WRXB (bad) 
   1400216b9:	push   0x65
   1400216bb:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   1400216bf:	rex.RXB jb 0x14002172b
   1400216c2:	fs rex.WR (bad) 
   1400216c5:	jns    0x140021736
   1400216c7:	jne    0x14002173d
   1400216c9:	rex
   1400216ca:	rex push rbp
   1400216cc:	rex.RB
   1400216cd:	rex.X
   1400216ce:	push   r8
   1400216d0:	rex.RB
   1400216d1:	rex.X push rbp
   1400216d3:	push   rcx
   1400216d4:	rex.WRB
   1400216d5:	gs je  0x140021739
   1400216d8:	rex.WRXB (bad) 
   1400216da:	push   0x65
   1400216dc:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400216e0:	pop    rax
   1400216e1:	pop    rdx
   1400216e2:	add    BYTE PTR [rax],al
   1400216e4:	stc    
   1400216e5:	adc    edi,DWORD PTR [rdi]
   1400216e7:	jno    0x14002175d
   1400216e9:	pop    rdi
   1400216ea:	ins    DWORD PTR es:[rdi],dx
   1400216eb:	gs je  0x14002174f
   1400216ee:	movsxd esp,DWORD PTR [rcx+0x73]
   1400216f1:	je     0x140021733
   1400216f3:	push   rcx
   1400216f4:	rex.RXB jb 0x140021760
   1400216f7:	fs rex.WR (bad) 
   1400216fa:	jns    0x14002176b
   1400216fc:	jne    0x140021772
   1400216fe:	rex
   1400216ff:	rex push rbp
   140021701:	rex.RB
   140021702:	rex.B
   140021703:	push   r8
   140021705:	rex.RB
   140021706:	pop    r8
   140021708:	push   rax
   140021709:	rex.RB
   14002170a:	rex.X
   14002170b:	rex.R
   14002170c:	rex pop rdx
   14002170e:	add    BYTE PTR [rax],al
   140021710:	outs   dx,DWORD PTR ds:[rsi]
   140021711:	adc    edi,DWORD PTR [rdi]
   140021713:	jno    0x140021789
   140021715:	pop    rdi
   140021716:	ins    DWORD PTR es:[rdi],dx
   140021717:	gs je  0x14002177b
   14002171a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002171d:	ins    BYTE PTR es:[rdi],dx
   14002171e:	rex push rcx
   140021720:	rex.RXB jb 0x14002178c
   140021723:	fs rex.WR (bad) 
   140021726:	jns    0x140021797
   140021728:	jne    0x14002179e
   14002172a:	rex
   14002172b:	rex push rbp
   14002172d:	rex.RB
   14002172e:	rex.B
   14002172f:	rex.B
   140021730:	rex.W push rdi
   140021732:	xor    al,0x43
   140021734:	(bad)  
   140021735:	ins    BYTE PTR es:[rdi],dx
   140021736:	ins    BYTE PTR es:[rdi],dx
   140021737:	rex push rcx
   140021739:	rex.WRB
   14002173a:	gs je  0x14002179e
   14002173d:	rex.WRXB (bad) 
   14002173f:	push   0x65
   140021741:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140021745:	rex.W push rax
   140021747:	rex.RB
   140021748:	push   r8
   14002174a:	rex.RB
   14002174b:	pop    r8
   14002174d:	rex pop rdx
   14002174f:	add    BYTE PTR [rdx+0x68633f06],ch
   140021755:	imul   ebp,DWORD PTR [rsp+riz*2+0x45],0x746e6576
   14002175d:	rex push rcx
   14002175f:	rex.WR (bad) 
   140021761:	jns    0x1400217d2
   140021763:	jne    0x1400217d9
   140021765:	rex
   140021766:	rex
   140021767:	rex.WRB
   140021768:	rex.RB
   140021769:	rex.B
   14002176a:	pop    r8
   14002176c:	push   rax
   14002176d:	rex.RB
   14002176e:	push   r14
   140021770:	push   rcx
   140021771:	rex.XB push 0x45646c69
   140021777:	jbe    0x1400217de
   140021779:	outs   dx,BYTE PTR ds:[rsi]
   14002177a:	je     0x1400217bc
   14002177c:	rex
   14002177d:	rex pop rdx
   14002177f:	add    BYTE PTR [rax*1+0x6464613f],dh
   140021786:	rex.WB je 0x1400217ee
   140021789:	ins    DWORD PTR es:[rdi],dx
   14002178a:	rex push rcx
   14002178c:	rex.RXB jb 0x1400217f8
   14002178f:	fs rex.WR (bad) 
   140021792:	jns    0x140021803
   140021794:	jne    0x14002180a
   140021796:	rex
   140021797:	rex
   140021798:	rex.WRB
   140021799:	rex.RB
   14002179a:	rex.B
   14002179b:	pop    r8
   14002179d:	push   rax
   14002179e:	rex.RB
   14002179f:	push   r14
   1400217a1:	push   rcx
   1400217a2:	rex.WR (bad) 
   1400217a4:	jns    0x140021815
   1400217a6:	jne    0x14002181c
   1400217a8:	rex.WB je 0x140021810
   1400217ab:	ins    DWORD PTR es:[rdi],dx
   1400217ac:	rex
   1400217ad:	rex
   1400217ae:	rex pop rdx
   1400217b0:	add    BYTE PTR [rax],al
   1400217b2:	loopne 0x1400217c2
   1400217b4:	(bad)  
   1400217b5:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x51407441
   1400217bd:	rex.RXB jb 0x140021829
   1400217c0:	fs rex.WR (bad) 
   1400217c3:	jns    0x140021834
   1400217c5:	jne    0x14002183b
   1400217c7:	rex
   1400217c8:	rex push rbp
   1400217ca:	rex.RB
   1400217cb:	rex.X
   1400217cc:	push   r8
   1400217ce:	rex.RB
   1400217cf:	push   r14
   1400217d1:	push   rcx
   1400217d2:	rex.WR (bad) 
   1400217d4:	jns    0x140021845
   1400217d6:	jne    0x14002184c
   1400217d8:	rex.WB je 0x140021840
   1400217db:	ins    DWORD PTR es:[rdi],dx
   1400217dc:	rex
   1400217dd:	rex
   1400217de:	rex.W
   1400217df:	rex pop rdx
   1400217e1:	add    BYTE PTR [rax],bh
   1400217e3:	(bad)  
   1400217e4:	(bad)  
   1400217e5:	je     0x140021848
   1400217e7:	imul   esp,DWORD PTR [rbp+0x41],0x74
   1400217eb:	rex push rcx
   1400217ed:	rex.RXB jb 0x140021859
   1400217f0:	fs rex.WR (bad) 
   1400217f3:	jns    0x140021864
   1400217f5:	jne    0x14002186b
   1400217f7:	rex
   1400217f8:	rex push rbp
   1400217fa:	rex.RB
   1400217fb:	rex.B
   1400217fc:	push   r8
   1400217fe:	rex.RB
   1400217ff:	push   r14
   140021801:	push   rcx
   140021802:	rex.WR (bad) 
   140021804:	jns    0x140021875
   140021806:	jne    0x14002187c
   140021808:	rex.WB je 0x140021870
   14002180b:	ins    DWORD PTR es:[rdi],dx
   14002180c:	rex
   14002180d:	rex
   14002180e:	rex.W
   14002180f:	rex pop rdx
   140021811:	add    BYTE PTR [rdi],ah
   140021813:	or     eax,0x646e693f
   140021818:	gs js  0x14002186a
   14002181b:	rex push cx
   14002181e:	rex.WR (bad) 
   140021820:	jns    0x140021891
   140021822:	jne    0x140021898
   140021824:	rex
   140021825:	rex push rbp
   140021827:	rex.RB
   140021828:	rex.X
   140021829:	rex.B
   14002182a:	rex.W push rax
   14002182c:	rex.RB
   14002182d:	push   r14
   14002182f:	push   rcx
   140021830:	push   rdi
   140021831:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140021839:	pop    rdx
   14002183a:	add    BYTE PTR [rax],al
   14002183c:	scas   al,BYTE PTR es:[rdi]
   14002183d:	(bad)  
   14002183e:	(bad)  
   14002183f:	movsxd ebp,DWORD PTR [rdi+0x75]
   140021842:	outs   dx,BYTE PTR ds:[rsi]
   140021843:	je     0x140021885
   140021845:	push   rcx
   140021846:	rex.RXB jb 0x1400218b2
   140021849:	fs rex.WR (bad) 
   14002184c:	jns    0x1400218bd
   14002184e:	jne    0x1400218c4
   140021850:	rex
   140021851:	rex push rbp
   140021853:	rex.RB
   140021854:	rex.X
   140021855:	rex.B
   140021856:	rex.W pop rax
   140021858:	pop    rdx
   140021859:	add    BYTE PTR [rbp+0x69733f1c],ah
   14002185f:	jp     0x1400218c6
   140021861:	imul   rbp,QWORD PTR [rsi+0x74],0x72475140
   140021869:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   140021871:	rex
   140021872:	rex push rbp
   140021874:	rex.RB
   140021875:	rex.X
   140021876:	rex.B (bad) 
   140021878:	push   r14
   14002187a:	push   rcx
   14002187b:	push   rbx
   14002187c:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140021883:	add    ah,bh
   140021885:	adc    BYTE PTR [rdi],bh
   140021887:	ins    DWORD PTR es:[rdi],dx
   140021888:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14002188f:	imul   edi,DWORD PTR [rdx+0x65],0x72475140
   140021896:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   14002189e:	rex
   14002189f:	rex push rbp
   1400218a1:	rex.RB
   1400218a2:	rex.X
   1400218a3:	rex.B (bad) 
   1400218a5:	push   r14
   1400218a7:	push   rcx
   1400218a8:	push   rbx
   1400218a9:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400218b0:	add    BYTE PTR [rax],al
   1400218b2:	(bad)  
   1400218b3:	adc    BYTE PTR [rdi],bh
   1400218b5:	ins    DWORD PTR es:[rdi],dx
   1400218b6:	(bad)  
   1400218b7:	js     0x140021922
   1400218b9:	ins    DWORD PTR es:[rdi],dx
   1400218ba:	jne    0x140021929
   1400218bc:	push   rbx
   1400218bd:	imul   edi,DWORD PTR [rdx+0x65],0x72475140
   1400218c4:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   1400218cc:	rex
   1400218cd:	rex push rbp
   1400218cf:	rex.RB
   1400218d0:	rex.X
   1400218d1:	rex.B (bad) 
   1400218d3:	push   r14
   1400218d5:	push   rcx
   1400218d6:	push   rbx
   1400218d7:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400218de:	add    BYTE PTR [rax],al
   1400218e0:	and    eax,0x78653f0b
   1400218e5:	jo     0x140021948
   1400218e7:	outs   dx,BYTE PTR ds:[rsi]
   1400218e8:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65726944
   1400218f0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400218f4:	outs   dx,BYTE PTR ds:[rsi]
   1400218f5:	jae    0x140021937
   1400218f7:	push   rcx
   1400218f8:	rex.RXB jb 0x140021964
   1400218fb:	fs rex.WR (bad) 
   1400218fe:	jns    0x14002196f
   140021900:	jne    0x140021976
   140021902:	rex
   140021903:	rex push rbp
   140021905:	rex.RB
   140021906:	rex.X
   140021907:	rex.B (bad) 
   140021909:	push   r14
   14002190b:	(bad)  
   14002190c:	and    al,0x51
   14002190e:	rex.RX ins BYTE PTR es:[rdi],dx
   140021910:	(bad)  
   140021911:	addr32 jae 0x140021954
   140021914:	push   rdi
   140021915:	xor    al,0x4f
   140021917:	jb     0x140021982
   140021919:	outs   dx,BYTE PTR gs:[rsi]
   14002191b:	je     0x14002197e
   14002191d:	je     0x140021988
   14002191f:	outs   dx,DWORD PTR ds:[rsi]
   140021920:	outs   dx,BYTE PTR ds:[rsi]
   140021921:	rex push rcx
   140021923:	je     0x140021965
   140021925:	rex
   140021926:	rex
   140021927:	rex pop rax
   140021929:	pop    rdx
   14002192a:	add    BYTE PTR [rax],al
   14002192c:	cdq    
   14002192d:	sbb    BYTE PTR [rdi],bh
   14002192f:	jae    0x140021996
   140021931:	je     0x14002197a
   140021933:	outs   dx,DWORD PTR gs:[rsi]
   140021935:	ins    DWORD PTR es:[rdi],dx
   140021936:	gs je  0x1400219ab
   140021939:	jns    0x14002197b
   14002193b:	push   rcx
   14002193c:	rex.RXB jb 0x1400219a8
   14002193f:	fs rex.WR (bad) 
   140021942:	jns    0x1400219b3
   140021944:	jne    0x1400219ba
   140021946:	rex
   140021947:	rex push rbp
   140021949:	rex.RB
   14002194a:	rex.B
   14002194b:	pop    r8
   14002194d:	rex.B
   14002194e:	rex.RB
   14002194f:	rex.X push rsi
   140021951:	push   rcx
   140021952:	push   rdx
   140021953:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140021958:	rex pop rdx
   14002195a:	add    BYTE PTR [rax],al
   14002195c:	sti    
   14002195d:	or     edi,DWORD PTR [rdi]
   14002195f:	outs   dx,DWORD PTR gs:[esi]
   140021962:	ins    DWORD PTR es:[rdi],dx
   140021963:	gs je  0x1400219d8
   140021966:	jns    0x1400219a8
   140021968:	push   rcx
   140021969:	rex.WR (bad) 
   14002196b:	jns    0x1400219dc
   14002196d:	jne    0x1400219e3
   14002196f:	rex
   140021970:	rex push rbp
   140021972:	rex.RB
   140021973:	rex.X
   140021974:	rex.B (bad) 
   140021976:	push   r14
   140021978:	push   rcx
   140021979:	push   rdx
   14002197a:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   14002197f:	pop    rax
   140021980:	pop    rdx
   140021981:	add    BYTE PTR [rcx],dh
   140021983:	(bad)  
   140021984:	(bad)  
   140021985:	imul   esi,DWORD PTR [rbx+0x45],0x7974706d
   14002198c:	rex push rcx
   14002198e:	rex.WR (bad) 
   140021990:	jns    0x140021a01
   140021992:	jne    0x140021a08
   140021994:	rex
   140021995:	rex push rbp
   140021997:	rex.RB
   140021998:	rex.X
   140021999:	pop    r15
   14002199b:	rex.WRX pop rax
   14002199d:	pop    rdx
   14002199e:	add    BYTE PTR [rax],al
   1400219a0:	(bad)  
   1400219a1:	or     al,0x3f
   1400219a3:	push   0x65487361
   1400219a8:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   1400219af:	push   rdi
   1400219b0:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x72475140
   1400219b8:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   1400219c0:	rex
   1400219c1:	rex push rbp
   1400219c3:	rex.RB
   1400219c4:	rex.X
   1400219c5:	pop    r15
   1400219c7:	rex.WRX pop rax
   1400219c9:	pop    rdx
   1400219ca:	add    BYTE PTR [rax],al
   1400219cc:	(bad)  
   1400219cd:	or     al,0x3f
   1400219cf:	push   0x68676965
   1400219d4:	je     0x140021a1c
   1400219d6:	outs   dx,DWORD PTR ds:[rsi]
   1400219d7:	jb     0x140021a30
   1400219d9:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x72475140
   1400219e1:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   1400219e9:	rex
   1400219ea:	rex push rbp
   1400219ec:	rex.RB
   1400219ed:	rex.X
   1400219ee:	rex.B
   1400219ef:	rex.W
   1400219f0:	rex.W
   1400219f1:	rex pop rdx
   1400219f3:	add    ah,dh
   1400219f5:	adc    BYTE PTR [rdi],bh
   1400219f7:	ins    DWORD PTR es:[rdi],dx
   1400219f8:	imul   ebp,DWORD PTR [rsi+0x69],0x486d756d
   1400219ff:	imul   esp,DWORD PTR gs:[rdi+0x68],0x726f4674
   140021a07:	push   rdi
   140021a08:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x72475140
   140021a10:	imul   esp,DWORD PTR [rsp+rcx*2+0x61],0x74756f79
   140021a18:	rex
   140021a19:	rex push rbp
   140021a1b:	rex.RB
   140021a1c:	rex.X
   140021a1d:	rex.B
   140021a1e:	rex.W
   140021a1f:	rex.W
   140021a20:	rex pop rdx
   140021a22:	add    BYTE PTR [rax],al
   140021a24:	jmp    0x140021a33
   140021a26:	(bad)  
   140021a27:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140021a2e:	(bad)  
   140021a2f:	je     0x140021a96
   140021a31:	rex push rcx
   140021a33:	rex.RXB jb 0x140021a9f
   140021a36:	fs rex.WR (bad) 
   140021a39:	jns    0x140021aaa
   140021a3b:	jne    0x140021ab1
   140021a3d:	rex
   140021a3e:	rex push rbp
   140021a40:	rex.RB
   140021a41:	rex.B
   140021a42:	pop    r8
   140021a44:	pop    rax
   140021a45:	pop    rdx
   140021a46:	add    BYTE PTR [rax],al
   140021a48:	rex and DWORD PTR [rdi],edi
   140021a4b:	ja     0x140021ab6
   140021a4d:	fs addr32 gs je 0x140021a92
   140021a52:	push   rcx
   140021a53:	rex.WR (bad) 
   140021a55:	jns    0x140021ac6
   140021a57:	jne    0x140021acd
   140021a59:	rex.WB je 0x140021ac1
   140021a5c:	ins    DWORD PTR es:[rdi],dx
   140021a5d:	rex
   140021a5e:	rex push rbp
   140021a60:	rex.RB
   140021a61:	rex.B
   140021a62:	push   r8
   140021a64:	rex.RB
   140021a65:	push   r14
   140021a67:	push   rcx
   140021a68:	push   rdi
   140021a69:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x58404074
   140021a71:	pop    rdx
   140021a72:	add    BYTE PTR [rax],al
   140021a74:	xchg   BYTE PTR [rdi],cl
   140021a76:	(bad)  
   140021a77:	ins    BYTE PTR es:[rdi],dx
   140021a78:	(bad)  
   140021a79:	jns    0x140021aea
   140021a7b:	jne    0x140021af1
   140021a7d:	rex push rcx
   140021a7f:	rex.WR (bad) 
   140021a81:	jns    0x140021af2
   140021a83:	jne    0x140021af9
   140021a85:	rex
   140021a86:	rex push rbp
   140021a88:	rex.RB
   140021a89:	rex.B
   140021a8a:	push   r8
   140021a8c:	rex.RB
   140021a8d:	push   r14
   140021a8f:	xor    DWORD PTR [rax+0x58],eax
   140021a92:	pop    rdx
   140021a93:	add    al,bh
   140021a95:	sbb    al,0x3f
   140021a97:	jae    0x140021b09
   140021a99:	(bad)  
   140021a9a:	movsxd esp,DWORD PTR [rbp+0x72]
   140021a9d:	rex.WB je 0x140021b05
   140021aa0:	ins    DWORD PTR es:[rdi],dx
   140021aa1:	rex push rcx
   140021aa3:	rex.WR (bad) 
   140021aa5:	jns    0x140021b16
   140021aa7:	jne    0x140021b1d
   140021aa9:	rex.WB je 0x140021b11
   140021aac:	ins    DWORD PTR es:[rdi],dx
   140021aad:	rex
   140021aae:	rex push rbp
   140021ab0:	rex.RB
   140021ab1:	rex.B
   140021ab2:	push   r8
   140021ab4:	rex.RB
   140021ab5:	push   r14
   140021ab7:	push   rcx
   140021ab8:	push   rbx
   140021ab9:	jo     0x140021b1c
   140021abb:	movsxd esp,DWORD PTR [rbp+0x72]
   140021abe:	rex.WB je 0x140021b26
   140021ac1:	ins    DWORD PTR es:[rdi],dx
   140021ac2:	rex
   140021ac3:	rex pop rax
   140021ac5:	pop    rdx
   140021ac6:	add    BYTE PTR [rax],al
   140021ac8:	xchg   ebp,eax
   140021ac9:	(bad)  
   140021aca:	(bad)  
   140021acb:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140021ace:	je     0x140021b42
   140021ad0:	outs   dx,DWORD PTR ds:[rsi]
   140021ad1:	ins    BYTE PTR es:[rdi],dx
   140021ad2:	push   rsp
   140021ad3:	jns    0x140021b45
   140021ad5:	gs jae 0x140021b18
   140021ad8:	push   rcx
   140021ad9:	rex.WR (bad) 
   140021adb:	jns    0x140021b4c
   140021add:	jne    0x140021b53
   140021adf:	rex
   140021ae0:	rex push rbp
   140021ae2:	rex.RB
   140021ae3:	rex.X
   140021ae4:	rex.B (bad) 
   140021ae6:	push   r14
   140021ae8:	(bad)  
   140021ae9:	and    al,0x51
   140021aeb:	rex.RX ins BYTE PTR es:[rdi],dx
   140021aed:	(bad)  
   140021aee:	addr32 jae 0x140021b31
   140021af1:	push   rdi
   140021af2:	xor    al,0x43
   140021af4:	outs   dx,DWORD PTR ds:[rsi]
   140021af5:	outs   dx,BYTE PTR ds:[rsi]
   140021af6:	je     0x140021b6a
   140021af8:	outs   dx,DWORD PTR ds:[rsi]
   140021af9:	ins    BYTE PTR es:[rdi],dx
   140021afa:	push   rsp
   140021afb:	jns    0x140021b6d
   140021afd:	gs rex push rcx
   140021b00:	push   rbx
   140021b01:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   140021b08:	movsxd edi,DWORD PTR [rcx+0x40]
   140021b0b:	rex
   140021b0c:	rex
   140021b0d:	rex pop rax
   140021b0f:	pop    rdx
   140021b10:	add    BYTE PTR [rax],al
   140021b12:	mov    ecx,0x69733f1c
   140021b17:	jp     0x140021b7e
   140021b19:	imul   rbp,QWORD PTR [rsi+0x74],0x70535140
   140021b21:	(bad)  
   140021b22:	movsxd esp,DWORD PTR [rbp+0x72]
   140021b25:	rex.WB je 0x140021b8d
   140021b28:	ins    DWORD PTR es:[rdi],dx
   140021b29:	rex
   140021b2a:	rex push rbp
   140021b2c:	rex.RB
   140021b2d:	rex.X
   140021b2e:	rex.B (bad) 
   140021b30:	push   r14
   140021b32:	push   rcx
   140021b33:	push   rbx
   140021b34:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140021b3b:	add    dh,bh
   140021b3d:	adc    BYTE PTR [rdi],bh
   140021b3f:	ins    DWORD PTR es:[rdi],dx
   140021b40:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140021b47:	imul   edi,DWORD PTR [rdx+0x65],0x70535140
   140021b4e:	(bad)  
   140021b4f:	movsxd esp,DWORD PTR [rbp+0x72]
   140021b52:	rex.WB je 0x140021bba
   140021b55:	ins    DWORD PTR es:[rdi],dx
   140021b56:	rex
   140021b57:	rex push rbp
   140021b59:	rex.RB
   140021b5a:	rex.X
   140021b5b:	rex.B (bad) 
   140021b5d:	push   r14
   140021b5f:	push   rcx
   140021b60:	push   rbx
   140021b61:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140021b68:	add    BYTE PTR [rax],al
   140021b6a:	xor    DWORD PTR [rax],edx
   140021b6c:	(bad)  
   140021b6d:	ins    DWORD PTR es:[rdi],dx
   140021b6e:	(bad)  
   140021b6f:	js     0x140021bda
   140021b71:	ins    DWORD PTR es:[rdi],dx
   140021b72:	jne    0x140021be1
   140021b74:	push   rbx
   140021b75:	imul   edi,DWORD PTR [rdx+0x65],0x70535140
   140021b7c:	(bad)  
   140021b7d:	movsxd esp,DWORD PTR [rbp+0x72]
   140021b80:	rex.WB je 0x140021be8
   140021b83:	ins    DWORD PTR es:[rdi],dx
   140021b84:	rex
   140021b85:	rex push rbp
   140021b87:	rex.RB
   140021b88:	rex.X
   140021b89:	rex.B (bad) 
   140021b8b:	push   r14
   140021b8d:	push   rcx
   140021b8e:	push   rbx
   140021b8f:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140021b96:	add    BYTE PTR [rax],al
   140021b98:	sub    BYTE PTR [rbx],cl
   140021b9a:	(bad)  
   140021b9b:	gs js  0x140021c0e
   140021b9e:	(bad)  
   140021b9f:	outs   dx,BYTE PTR ds:[rsi]
   140021ba0:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65726944
   140021ba8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140021bac:	outs   dx,BYTE PTR ds:[rsi]
   140021bad:	jae    0x140021bef
   140021baf:	push   rcx
   140021bb0:	push   rbx
   140021bb1:	jo     0x140021c14
   140021bb3:	movsxd esp,DWORD PTR [rbp+0x72]
   140021bb6:	rex.WB je 0x140021c1e
   140021bb9:	ins    DWORD PTR es:[rdi],dx
   140021bba:	rex
   140021bbb:	rex push rbp
   140021bbd:	rex.RB
   140021bbe:	rex.X
   140021bbf:	rex.B (bad) 
   140021bc1:	push   r14
   140021bc3:	(bad)  
   140021bc4:	and    al,0x51
   140021bc6:	rex.RX ins BYTE PTR es:[rdi],dx
   140021bc8:	(bad)  
   140021bc9:	addr32 jae 0x140021c0c
   140021bcc:	push   rdi
   140021bcd:	xor    al,0x4f
   140021bcf:	jb     0x140021c3a
   140021bd1:	outs   dx,BYTE PTR gs:[rsi]
   140021bd3:	je     0x140021c36
   140021bd5:	je     0x140021c40
   140021bd7:	outs   dx,DWORD PTR ds:[rsi]
   140021bd8:	outs   dx,BYTE PTR ds:[rsi]
   140021bd9:	rex push rcx
   140021bdb:	je     0x140021c1d
   140021bdd:	rex
   140021bde:	rex
   140021bdf:	rex pop rax
   140021be1:	pop    rdx
   140021be2:	add    BYTE PTR [rax],al
   140021be4:	popf   
   140021be5:	sbb    BYTE PTR [rdi],bh
   140021be7:	jae    0x140021c4e
   140021be9:	je     0x140021c32
   140021beb:	outs   dx,DWORD PTR gs:[rsi]
   140021bed:	ins    DWORD PTR es:[rdi],dx
   140021bee:	gs je  0x140021c63
   140021bf1:	jns    0x140021c33
   140021bf3:	push   rcx
   140021bf4:	push   rbx
   140021bf5:	jo     0x140021c58
   140021bf7:	movsxd esp,DWORD PTR [rbp+0x72]
   140021bfa:	rex.WB je 0x140021c62
   140021bfd:	ins    DWORD PTR es:[rdi],dx
   140021bfe:	rex
   140021bff:	rex push rbp
   140021c01:	rex.RB
   140021c02:	rex.B
   140021c03:	pop    r8
   140021c05:	rex.B
   140021c06:	rex.RB
   140021c07:	rex.X push rsi
   140021c09:	push   rcx
   140021c0a:	push   rdx
   140021c0b:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140021c10:	rex pop rdx
   140021c12:	add    BYTE PTR [rax],al
   140021c14:	cld    
   140021c15:	or     edi,DWORD PTR [rdi]
   140021c17:	outs   dx,DWORD PTR gs:[esi]
   140021c1a:	ins    DWORD PTR es:[rdi],dx
   140021c1b:	gs je  0x140021c90
   140021c1e:	jns    0x140021c60
   140021c20:	push   rcx
   140021c21:	push   rbx
   140021c22:	jo     0x140021c85
   140021c24:	movsxd esp,DWORD PTR [rbp+0x72]
   140021c27:	rex.WB je 0x140021c8f
   140021c2a:	ins    DWORD PTR es:[rdi],dx
   140021c2b:	rex
   140021c2c:	rex push rbp
   140021c2e:	rex.RB
   140021c2f:	rex.X
   140021c30:	rex.B (bad) 
   140021c32:	push   r14
   140021c34:	push   rcx
   140021c35:	push   rdx
   140021c36:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140021c3b:	pop    rax
   140021c3c:	pop    rdx
   140021c3d:	add    BYTE PTR [rbx],dh
   140021c3f:	(bad)  
   140021c40:	(bad)  
   140021c41:	imul   esi,DWORD PTR [rbx+0x45],0x7974706d
   140021c48:	rex push rcx
   140021c4a:	push   rbx
   140021c4b:	jo     0x140021cae
   140021c4d:	movsxd esp,DWORD PTR [rbp+0x72]
   140021c50:	rex.WB je 0x140021cb8
   140021c53:	ins    DWORD PTR es:[rdi],dx
   140021c54:	rex
   140021c55:	rex push rbp
   140021c57:	rex.RB
   140021c58:	rex.X
   140021c59:	pop    r15
   140021c5b:	rex.WRX pop rax
   140021c5d:	pop    rdx
   140021c5e:	add    BYTE PTR [rax],al
   140021c60:	(bad)  
   140021c61:	or     al,0x3f
   140021c63:	push   0x65487361
   140021c68:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   140021c6f:	push   rdi
   140021c70:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x614c5140
   140021c78:	jns    0x140021ce9
   140021c7a:	jne    0x140021cf0
   140021c7c:	rex.WB je 0x140021ce4
   140021c7f:	ins    DWORD PTR es:[rdi],dx
   140021c80:	rex
   140021c81:	rex push rbp
   140021c83:	rex.RB
   140021c84:	rex.X
   140021c85:	pop    r15
   140021c87:	rex.WRX pop rax
   140021c89:	pop    rdx
   140021c8a:	add    BYTE PTR [rax],al
   140021c8c:	test   BYTE PTR [rdi+rdi*1],cl
   140021c8f:	push   0x68676965
   140021c94:	je     0x140021cdc
   140021c96:	outs   dx,DWORD PTR ds:[rsi]
   140021c97:	jb     0x140021cf0
   140021c99:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x614c5140
   140021ca1:	jns    0x140021d12
   140021ca3:	jne    0x140021d19
   140021ca5:	rex.WB je 0x140021d0d
   140021ca8:	ins    DWORD PTR es:[rdi],dx
   140021ca9:	rex
   140021caa:	rex push rbp
   140021cac:	rex.RB
   140021cad:	rex.X
   140021cae:	rex.B
   140021caf:	rex.W
   140021cb0:	rex.W
   140021cb1:	rex pop rdx
   140021cb3:	add    ch,dh
   140021cb5:	adc    BYTE PTR [rdi],bh
   140021cb7:	ins    DWORD PTR es:[rdi],dx
   140021cb8:	imul   ebp,DWORD PTR [rsi+0x69],0x486d756d
   140021cbf:	imul   esp,DWORD PTR gs:[rdi+0x68],0x726f4674
   140021cc7:	push   rdi
   140021cc8:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x614c5140
   140021cd0:	jns    0x140021d41
   140021cd2:	jne    0x140021d48
   140021cd4:	rex.WB je 0x140021d3c
   140021cd7:	ins    DWORD PTR es:[rdi],dx
   140021cd8:	rex
   140021cd9:	rex push rbp
   140021cdb:	rex.RB
   140021cdc:	rex.X
   140021cdd:	rex.B
   140021cde:	rex.W
   140021cdf:	rex.W
   140021ce0:	rex pop rdx
   140021ce2:	add    BYTE PTR [rax],al
   140021ce4:	in     eax,dx
   140021ce5:	or     eax,0x766e693f
   140021cea:	(bad)  
   140021ceb:	ins    BYTE PTR es:[rdi],dx
   140021cec:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x4c514065
   140021cf4:	(bad)  
   140021cf5:	jns    0x140021d66
   140021cf7:	jne    0x140021d6d
   140021cf9:	rex.WB je 0x140021d61
   140021cfc:	ins    DWORD PTR es:[rdi],dx
   140021cfd:	rex
   140021cfe:	rex push rbp
   140021d00:	rex.RB
   140021d01:	rex.B
   140021d02:	pop    r8
   140021d04:	pop    rax
   140021d05:	pop    rdx
   140021d06:	add    BYTE PTR [rax],al
   140021d08:	xchg   DWORD PTR [rdi],ecx
   140021d0a:	(bad)  
   140021d0b:	ins    BYTE PTR es:[rdi],dx
   140021d0c:	(bad)  
   140021d0d:	jns    0x140021d7e
   140021d0f:	jne    0x140021d85
   140021d11:	rex push rcx
   140021d13:	rex.WR (bad) 
   140021d15:	jns    0x140021d86
   140021d17:	jne    0x140021d8d
   140021d19:	rex.WB je 0x140021d81
   140021d1c:	ins    DWORD PTR es:[rdi],dx
   140021d1d:	rex
   140021d1e:	rex push rbp
   140021d20:	rex.RB
   140021d21:	rex.B
   140021d22:	push   r8
   140021d24:	rex.RB
   140021d25:	push   r14
   140021d27:	push   rcx
   140021d28:	rex.WR (bad) 
   140021d2a:	jns    0x140021d9b
   140021d2c:	jne    0x140021da2
   140021d2e:	rex
   140021d2f:	rex pop rax
   140021d31:	pop    rdx
   140021d32:	add    BYTE PTR [rax],al
   140021d34:	stc    
   140021d35:	sbb    al,0x3f
   140021d37:	jae    0x140021da9
   140021d39:	(bad)  
   140021d3a:	movsxd esp,DWORD PTR [rbp+0x72]
   140021d3d:	rex.WB je 0x140021da5
   140021d40:	ins    DWORD PTR es:[rdi],dx
   140021d41:	rex push rcx
   140021d43:	push   rbx
   140021d44:	jo     0x140021da7
   140021d46:	movsxd esp,DWORD PTR [rbp+0x72]
   140021d49:	rex.WB je 0x140021db1
   140021d4c:	ins    DWORD PTR es:[rdi],dx
   140021d4d:	rex
   140021d4e:	rex push rbp
   140021d50:	rex.RB
   140021d51:	rex.B
   140021d52:	push   r8
   140021d54:	rex.RB
   140021d55:	push   r14
   140021d57:	xor    DWORD PTR [rax+0x58],eax
   140021d5a:	pop    rdx
   140021d5b:	add    BYTE PTR [rsi+0x6f633f07],dl
   140021d61:	outs   dx,BYTE PTR ds:[rsi]
   140021d62:	je     0x140021dd6
   140021d64:	outs   dx,DWORD PTR ds:[rsi]
   140021d65:	ins    BYTE PTR es:[rdi],dx
   140021d66:	push   rsp
   140021d67:	jns    0x140021dd9
   140021d69:	gs jae 0x140021dac
   140021d6c:	push   rcx
   140021d6d:	rex.WR (bad) 
   140021d6f:	jns    0x140021de0
   140021d71:	jne    0x140021de7
   140021d73:	rex.WB je 0x140021ddb
   140021d76:	ins    DWORD PTR es:[rdi],dx
   140021d77:	rex
   140021d78:	rex push rbp
   140021d7a:	rex.RB
   140021d7b:	rex.X
   140021d7c:	rex.B (bad) 
   140021d7e:	push   r14
   140021d80:	(bad)  
   140021d81:	and    al,0x51
   140021d83:	rex.RX ins BYTE PTR es:[rdi],dx
   140021d85:	(bad)  
   140021d86:	addr32 jae 0x140021dc9
   140021d89:	push   rdi
   140021d8a:	xor    al,0x43
   140021d8c:	outs   dx,DWORD PTR ds:[rsi]
   140021d8d:	outs   dx,BYTE PTR ds:[rsi]
   140021d8e:	je     0x140021e02
   140021d90:	outs   dx,DWORD PTR ds:[rsi]
   140021d91:	ins    BYTE PTR es:[rdi],dx
   140021d92:	push   rsp
   140021d93:	jns    0x140021e05
   140021d95:	gs rex push rcx
   140021d98:	push   rbx
   140021d99:	imul   edi,DWORD PTR [rdx+0x65],0x696c6f50
   140021da0:	movsxd edi,DWORD PTR [rcx+0x40]
   140021da3:	rex
   140021da4:	rex
   140021da5:	rex pop rax
   140021da7:	pop    rdx
   140021da8:	add    BYTE PTR [rax],al
   140021daa:	(bad)  
   140021dab:	adc    BYTE PTR [rdi],bh
   140021dad:	ins    DWORD PTR es:[rdi],dx
   140021dae:	gs je  0x140021e12
   140021db1:	rex.WRXB (bad) 
   140021db3:	push   0x65
   140021db5:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140021db9:	rex.WR (bad) 
   140021dbb:	(bad)  
   140021dbc:	gs ins BYTE PTR es:[rdi],dx
   140021dbe:	rex
   140021dbf:	rex push rbp
   140021dc1:	rex.RB
   140021dc2:	rex.X
   140021dc3:	push   r8
   140021dc5:	rex.RB
   140021dc6:	rex.X push rbp
   140021dc8:	push   rcx
   140021dc9:	rex.WRB
   140021dca:	gs je  0x140021e2e
   140021dcd:	rex.WRXB (bad) 
   140021dcf:	push   0x65
   140021dd1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140021dd5:	pop    rax
   140021dd6:	pop    rdx
   140021dd7:	add    BYTE PTR [rdx],al
   140021dd9:	adc    al,0x3f
   140021ddb:	jno    0x140021e51
   140021ddd:	pop    rdi
   140021dde:	ins    DWORD PTR es:[rdi],dx
   140021ddf:	gs je  0x140021e43
   140021de2:	movsxd esp,DWORD PTR [rcx+0x73]
   140021de5:	je     0x140021e27
   140021de7:	push   rcx
   140021de8:	rex.WR (bad) 
   140021dea:	(bad)  
   140021deb:	gs ins BYTE PTR es:[rdi],dx
   140021ded:	rex
   140021dee:	rex push rbp
   140021df0:	rex.RB
   140021df1:	rex.B
   140021df2:	push   r8
   140021df4:	rex.RB
   140021df5:	pop    r8
   140021df7:	push   rax
   140021df8:	rex.RB
   140021df9:	rex.X
   140021dfa:	rex.R
   140021dfb:	rex pop rdx
   140021dfd:	add    BYTE PTR [rax+0x13],bh
   140021e00:	(bad)  
   140021e01:	jno    0x140021e77
   140021e03:	pop    rdi
   140021e04:	ins    DWORD PTR es:[rdi],dx
   140021e05:	gs je  0x140021e69
   140021e08:	movsxd esp,DWORD PTR [rcx+0x6c]
   140021e0b:	ins    BYTE PTR es:[rdi],dx
   140021e0c:	rex push rcx
   140021e0e:	rex.WR (bad) 
   140021e10:	(bad)  
   140021e11:	gs ins BYTE PTR es:[rdi],dx
   140021e13:	rex
   140021e14:	rex push rbp
   140021e16:	rex.RB
   140021e17:	rex.B
   140021e18:	rex.B
   140021e19:	rex.W push rdi
   140021e1b:	xor    al,0x43
   140021e1d:	(bad)  
   140021e1e:	ins    BYTE PTR es:[rdi],dx
   140021e1f:	ins    BYTE PTR es:[rdi],dx
   140021e20:	rex push rcx
   140021e22:	rex.WRB
   140021e23:	gs je  0x140021e87
   140021e26:	rex.WRXB (bad) 
   140021e28:	push   0x65
   140021e2a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140021e2e:	rex.W push rax
   140021e30:	rex.RB
   140021e31:	push   r8
   140021e33:	rex.RB
   140021e34:	pop    r8
   140021e36:	rex pop rdx
   140021e38:	add    BYTE PTR [rax],al
   140021e3a:	(bad)  
   140021e3b:	or     bh,BYTE PTR [rdi]
   140021e3d:	gs jbe 0x140021ea5
   140021e40:	outs   dx,BYTE PTR ds:[rsi]
   140021e41:	je     0x140021e83
   140021e43:	push   rcx
   140021e44:	rex.WR (bad) 
   140021e46:	(bad)  
   140021e47:	gs ins BYTE PTR es:[rdi],dx
   140021e49:	rex
   140021e4a:	rex
   140021e4b:	rex.WRB
   140021e4c:	rex.RB
   140021e4d:	rex.B
   140021e4e:	pop    r15
   140021e50:	rex.WRX push rax
   140021e52:	rex.RB
   140021e53:	push   r14
   140021e55:	push   rcx
   140021e56:	rex.RB jbe 0x140021ebe
   140021e59:	outs   dx,BYTE PTR ds:[rsi]
   140021e5a:	je     0x140021e9c
   140021e5c:	rex
   140021e5d:	rex pop rdx
   140021e5f:	add    bl,bl
   140021e61:	sbb    edi,DWORD PTR [rdi]
   140021e63:	jae    0x140021eca
   140021e65:	je     0x140021ebd
   140021e67:	imul   esi,DWORD PTR [rbx+0x69],0x40656c62
   140021e6e:	push   rcx
   140021e6f:	push   rdi
   140021e70:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140021e78:	rex.RB
   140021e79:	rex.B
   140021e7a:	pop    r8
   140021e7c:	pop    rdi
   140021e7d:	rex.WRX
   140021e7e:	rex pop rdx
   140021e80:	add    BYTE PTR [rax],al
   140021e82:	stos   BYTE PTR es:[rdi],al
   140021e83:	sbb    al,0x3f
   140021e85:	jae    0x140021ef0
   140021e87:	jp     0x140021eee
   140021e89:	imul   rbp,QWORD PTR [rsi+0x74],0x614c5140
   140021e91:	(bad)  
   140021e92:	gs ins BYTE PTR es:[rdi],dx
   140021e94:	rex
   140021e95:	rex push rbp
   140021e97:	rex.RB
   140021e98:	rex.X
   140021e99:	rex.B (bad) 
   140021e9b:	push   r14
   140021e9d:	push   rcx
   140021e9e:	push   rbx
   140021e9f:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140021ea6:	add    BYTE PTR [rax],al
   140021ea8:	or     eax,0x696d3f11
   140021ead:	outs   dx,BYTE PTR ds:[rsi]
   140021eae:	imul   ebp,DWORD PTR [rbp+0x75],0x7a69536d
   140021eb5:	imul   rbp,QWORD PTR gs:[rsi+0x74],0x614c5140
   140021ebe:	(bad)  
   140021ebf:	gs ins BYTE PTR es:[rdi],dx
   140021ec1:	rex
   140021ec2:	rex push rbp
   140021ec4:	rex.RB
   140021ec5:	rex.X
   140021ec6:	rex.B (bad) 
   140021ec8:	push   r14
   140021eca:	push   rcx
   140021ecb:	push   rbx
   140021ecc:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140021ed3:	add    BYTE PTR [rbx+0x65683f0c],al
   140021ed9:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   140021ee0:	push   rdi
   140021ee1:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x614c5140
   140021ee9:	(bad)  
   140021eea:	gs ins BYTE PTR es:[rdi],dx
   140021eec:	rex
   140021eed:	rex push rbp
   140021eef:	rex.RB
   140021ef0:	rex.X
   140021ef1:	rex.B
   140021ef2:	rex.W
   140021ef3:	rex.W
   140021ef4:	rex pop rdx
   140021ef6:	add    BYTE PTR [rax],al
   140021ef8:	jbe    0x140021f0b
   140021efa:	(bad)  
   140021efb:	ins    DWORD PTR es:[rdi],dx
   140021efc:	outs   dx,DWORD PTR ds:[rsi]
   140021efd:	jne    0x140021f72
   140021eff:	gs push rax
   140021f01:	jb     0x140021f68
   140021f03:	jae    0x140021f78
   140021f05:	rex.RB jbe 0x140021f6d
   140021f08:	outs   dx,BYTE PTR ds:[rsi]
   140021f09:	je     0x140021f4b
   140021f0b:	push   rcx
   140021f0c:	rex.WR (bad) 
   140021f0e:	(bad)  
   140021f0f:	gs ins BYTE PTR es:[rdi],dx
   140021f11:	rex
   140021f12:	rex
   140021f13:	rex.WRB
   140021f14:	rex.RB
   140021f15:	rex.B
   140021f16:	pop    r8
   140021f18:	push   rax
   140021f19:	rex.RB
   140021f1a:	push   r14
   140021f1c:	push   rcx
   140021f1d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140021f1f:	jne    0x140021f94
   140021f21:	gs rex.RB jbe 0x140021f8a
   140021f25:	outs   dx,BYTE PTR ds:[rsi]
   140021f26:	je     0x140021f68
   140021f28:	rex
   140021f29:	rex pop rdx
   140021f2b:	add    BYTE PTR [rcx+rdx*1+0x756f6d3f],dl
   140021f32:	jae    0x140021f99
   140021f34:	push   rdx
   140021f35:	gs ins BYTE PTR es:[rdi],dx
   140021f37:	gs (bad) 
   140021f39:	jae    0x140021fa0
   140021f3b:	rex.RB jbe 0x140021fa3
   140021f3e:	outs   dx,BYTE PTR ds:[rsi]
   140021f3f:	je     0x140021f81
   140021f41:	push   rcx
   140021f42:	rex.WR (bad) 
   140021f44:	(bad)  
   140021f45:	gs ins BYTE PTR es:[rdi],dx
   140021f47:	rex
   140021f48:	rex
   140021f49:	rex.WRB
   140021f4a:	rex.RB
   140021f4b:	rex.B
   140021f4c:	pop    r8
   140021f4e:	push   rax
   140021f4f:	rex.RB
   140021f50:	push   r14
   140021f52:	push   rcx
   140021f53:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140021f55:	jne    0x140021fca
   140021f57:	gs rex.RB jbe 0x140021fc0
   140021f5b:	outs   dx,BYTE PTR ds:[rsi]
   140021f5c:	je     0x140021f9e
   140021f5e:	rex
   140021f5f:	rex pop rdx
   140021f61:	add    BYTE PTR [rcx+rdx*1+0x3f],dl
   140021f65:	ins    DWORD PTR es:[rdi],dx
   140021f66:	outs   dx,DWORD PTR ds:[rsi]
   140021f67:	jne    0x140021fdc
   140021f69:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140021f6c:	jbe    0x140021fd3
   140021f6e:	rex.RB jbe 0x140021fd6
   140021f71:	outs   dx,BYTE PTR ds:[rsi]
   140021f72:	je     0x140021fb4
   140021f74:	push   rcx
   140021f75:	rex.WR (bad) 
   140021f77:	(bad)  
   140021f78:	gs ins BYTE PTR es:[rdi],dx
   140021f7a:	rex
   140021f7b:	rex
   140021f7c:	rex.WRB
   140021f7d:	rex.RB
   140021f7e:	rex.B
   140021f7f:	pop    r8
   140021f81:	push   rax
   140021f82:	rex.RB
   140021f83:	push   r14
   140021f85:	push   rcx
   140021f86:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140021f88:	jne    0x140021ffd
   140021f8a:	gs rex.RB jbe 0x140021ff3
   140021f8e:	outs   dx,BYTE PTR ds:[rsi]
   140021f8f:	je     0x140021fd1
   140021f91:	rex
   140021f92:	rex pop rdx
   140021f94:	add    BYTE PTR [rax],al
   140021f96:	rex.WR (bad) 
   140021f99:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140021f9d:	jb     0x140022004
   140021f9f:	jae    0x140022014
   140021fa1:	rex.RB jbe 0x140022009
   140021fa4:	outs   dx,BYTE PTR ds:[rsi]
   140021fa5:	je     0x140021fe7
   140021fa7:	push   rcx
   140021fa8:	rex.WR (bad) 
   140021faa:	(bad)  
   140021fab:	gs ins BYTE PTR es:[rdi],dx
   140021fad:	rex
   140021fae:	rex
   140021faf:	rex.WRB
   140021fb0:	rex.RB
   140021fb1:	rex.B
   140021fb2:	pop    r8
   140021fb4:	push   rax
   140021fb5:	rex.RB
   140021fb6:	push   r14
   140021fb8:	push   rcx
   140021fb9:	rex.WXB
   140021fba:	gs jns 0x140022002
   140021fbd:	jbe    0x140022024
   140021fbf:	outs   dx,BYTE PTR ds:[rsi]
   140021fc0:	je     0x140022002
   140021fc2:	rex
   140021fc3:	rex pop rdx
   140021fc5:	add    BYTE PTR [rbx+rcx*1+0x636f663f],cl
   140021fcc:	jne    0x140022041
   140021fce:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140021fd0:	rex.RB jbe 0x140022038
   140021fd3:	outs   dx,BYTE PTR ds:[rsi]
   140021fd4:	je     0x140022016
   140021fd6:	push   rcx
   140021fd7:	rex.WR (bad) 
   140021fd9:	(bad)  
   140021fda:	gs ins BYTE PTR es:[rdi],dx
   140021fdc:	rex
   140021fdd:	rex
   140021fde:	rex.WRB
   140021fdf:	rex.RB
   140021fe0:	rex.B
   140021fe1:	pop    r8
   140021fe3:	push   rax
   140021fe4:	rex.RB
   140021fe5:	push   r14
   140021fe7:	push   rcx
   140021fe8:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140021fea:	movsxd esi,DWORD PTR [rbp+0x73]
   140021fed:	rex.RB jbe 0x140022055
   140021ff0:	outs   dx,BYTE PTR ds:[rsi]
   140021ff1:	je     0x140022033
   140021ff3:	rex
   140021ff4:	rex pop rdx
   140021ff6:	add    BYTE PTR [rax],al
   140021ff8:	mov    cl,0xb
   140021ffa:	(bad)  
   140021ffb:	outs   dx,WORD PTR ds:[rsi]
   140021ffd:	movsxd esi,DWORD PTR [rbp+0x73]
   140022000:	rex.WRXB jne 0x140022077
   140022003:	rex.RB jbe 0x14002206b
   140022006:	outs   dx,BYTE PTR ds:[rsi]
   140022007:	je     0x140022049
   140022009:	push   rcx
   14002200a:	rex.WR (bad) 
   14002200c:	(bad)  
   14002200d:	gs ins BYTE PTR es:[rdi],dx
   14002200f:	rex
   140022010:	rex
   140022011:	rex.WRB
   140022012:	rex.RB
   140022013:	rex.B
   140022014:	pop    r8
   140022016:	push   rax
   140022017:	rex.RB
   140022018:	push   r14
   14002201a:	push   rcx
   14002201b:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14002201d:	movsxd esi,DWORD PTR [rbp+0x73]
   140022020:	rex.RB jbe 0x140022088
   140022023:	outs   dx,BYTE PTR ds:[rsi]
   140022024:	je     0x140022066
   140022026:	rex
   140022027:	rex pop rdx
   140022029:	add    BYTE PTR [rsi+0x12],bl
   14002202c:	(bad)  
   14002202d:	jo     0x140022090
   14002202f:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140022036:	je     0x140022078
   140022038:	push   rcx
   140022039:	rex.WR (bad) 
   14002203b:	(bad)  
   14002203c:	gs ins BYTE PTR es:[rdi],dx
   14002203e:	rex
   14002203f:	rex
   140022040:	rex.WRB
   140022041:	rex.RB
   140022042:	rex.B
   140022043:	pop    r8
   140022045:	push   rax
   140022046:	rex.RB
   140022047:	push   r14
   140022049:	push   rcx
   14002204a:	push   rax
   14002204b:	(bad)  
   14002204c:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140022053:	je     0x140022095
   140022055:	rex
   140022056:	rex pop rdx
   140022058:	add    BYTE PTR [rax],al
   14002205a:	movabs al,ds:0x657a697365723f15
   140022063:	rex.RB jbe 0x1400220cb
   140022066:	outs   dx,BYTE PTR ds:[rsi]
   140022067:	je     0x1400220a9
   140022069:	push   rcx
   14002206a:	push   rdi
   14002206b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140022073:	rex.RB
   140022074:	rex.B
   140022075:	pop    r8
   140022077:	push   rax
   140022078:	rex.RB
   140022079:	push   r14
   14002207b:	push   rcx
   14002207c:	push   rdx
   14002207d:	gs jae 0x1400220e9
   140022080:	jp     0x1400220e7
   140022082:	rex.RB jbe 0x1400220ea
   140022085:	outs   dx,BYTE PTR ds:[rsi]
   140022086:	je     0x1400220c8
   140022088:	rex
   140022089:	rex pop rdx
   14002208b:	add    BYTE PTR [rbx],dl
   14002208d:	(bad)  
   14002208e:	(bad)  
   14002208f:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140022093:	gs rex.RB jbe 0x1400220fc
   140022097:	outs   dx,BYTE PTR ds:[rsi]
   140022098:	je     0x1400220da
   14002209a:	push   rcx
   14002209b:	push   rdi
   14002209c:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400220a4:	rex.RB
   1400220a5:	rex.B
   1400220a6:	pop    r8
   1400220a8:	push   rax
   1400220a9:	rex.RB
   1400220aa:	push   r14
   1400220ac:	push   rcx
   1400220ad:	rex.XB ins BYTE PTR es:[rdi],dx
   1400220af:	outs   dx,DWORD PTR ds:[rsi]
   1400220b0:	jae    0x140022117
   1400220b2:	rex.RB jbe 0x14002211a
   1400220b5:	outs   dx,BYTE PTR ds:[rsi]
   1400220b6:	je     0x1400220f8
   1400220b8:	rex
   1400220b9:	rex pop rdx
   1400220bb:	add    BYTE PTR [rbx+0x6f633f07],cl
   1400220c1:	outs   dx,BYTE PTR ds:[rsi]
   1400220c2:	je     0x140022129
   1400220c4:	js     0x14002213a
   1400220c6:	rex.WRB
   1400220c7:	outs   dx,BYTE PTR gs:[rsi]
   1400220c9:	jne    0x140022110
   1400220cb:	jbe    0x140022132
   1400220cd:	outs   dx,BYTE PTR ds:[rsi]
   1400220ce:	je     0x140022110
   1400220d0:	push   rcx
   1400220d1:	rex.WR (bad) 
   1400220d3:	(bad)  
   1400220d4:	gs ins BYTE PTR es:[rdi],dx
   1400220d6:	rex
   1400220d7:	rex
   1400220d8:	rex.WRB
   1400220d9:	rex.RB
   1400220da:	rex.B
   1400220db:	pop    r8
   1400220dd:	push   rax
   1400220de:	rex.RB
   1400220df:	push   r14
   1400220e1:	push   rcx
   1400220e2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400220e4:	outs   dx,BYTE PTR ds:[rsi]
   1400220e5:	je     0x14002214c
   1400220e7:	js     0x14002215d
   1400220e9:	rex.WRB
   1400220ea:	outs   dx,BYTE PTR gs:[rsi]
   1400220ec:	jne    0x140022133
   1400220ee:	jbe    0x140022155
   1400220f0:	outs   dx,BYTE PTR ds:[rsi]
   1400220f1:	je     0x140022133
   1400220f3:	rex
   1400220f4:	rex pop rdx
   1400220f6:	add    BYTE PTR [rax],al
   1400220f8:	pop    rbp
   1400220f9:	sbb    al,0x3f
   1400220fb:	jae    0x140022165
   1400220fd:	outs   dx,DWORD PTR ds:[rsi]
   1400220fe:	ja     0x140022145
   140022100:	jbe    0x140022167
   140022102:	outs   dx,BYTE PTR ds:[rsi]
   140022103:	je     0x140022145
   140022105:	push   rcx
   140022106:	push   rdi
   140022107:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14002210f:	rex.RB
   140022110:	rex.B
   140022111:	pop    r8
   140022113:	push   rax
   140022114:	rex.RB
   140022115:	push   r14
   140022117:	push   rcx
   140022118:	push   rbx
   140022119:	push   0x7645776f
   14002211e:	outs   dx,BYTE PTR gs:[rsi]
   140022120:	je     0x140022162
   140022122:	rex
   140022123:	rex pop rdx
   140022125:	add    bh,al
   140022127:	adc    DWORD PTR [rdi],edi
   140022129:	outs   dx,BYTE PTR ds:[rsi]
   14002212a:	(bad)  
   14002212b:	je     0x140022196
   14002212d:	jbe    0x140022194
   14002212f:	rex.RB jbe 0x140022197
   140022132:	outs   dx,BYTE PTR ds:[rsi]
   140022133:	je     0x140022175
   140022135:	push   rcx
   140022136:	push   rdi
   140022137:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14002213f:	rex.RB
   140022140:	rex.B
   140022141:	pop    r15
   140022143:	rex.WRX
   140022144:	rex.B
   140022145:	rex.RB
   140022146:	rex.X push rsi
   140022148:	push   rcx
   140022149:	rex.X jns 0x1400221c0
   14002214c:	gs rex.B jb 0x1400221c2
   140022150:	(bad)  
   140022151:	jns    0x140022193
   140022153:	rex push rax
   140022155:	rex.RB
   140022156:	pop    r8
   140022158:	push   rax
   140022159:	rex.RB
   14002215a:	rex.B
   14002215b:	rex.WX
   14002215c:	rex pop rdx
   14002215e:	add    BYTE PTR [rax],al
   140022160:	jl     0x140022168
   140022162:	(bad)  
   140022163:	movsxd ebp,DWORD PTR [rax+0x61]
   140022166:	outs   dx,BYTE PTR ds:[rsi]
   140022167:	addr32 gs rex.RB jbe 0x1400221d1
   14002216c:	outs   dx,BYTE PTR ds:[rsi]
   14002216d:	je     0x1400221af
   14002216f:	push   rcx
   140022170:	rex.WR (bad) 
   140022172:	(bad)  
   140022173:	gs ins BYTE PTR es:[rdi],dx
   140022175:	rex
   140022176:	rex
   140022177:	rex.WRB
   140022178:	rex.RB
   140022179:	rex.B
   14002217a:	pop    r8
   14002217c:	push   rax
   14002217d:	rex.RB
   14002217e:	push   r14
   140022180:	push   rcx
   140022181:	rex.RB jbe 0x1400221e9
   140022184:	outs   dx,BYTE PTR ds:[rsi]
   140022185:	je     0x1400221c7
   140022187:	rex
   140022188:	rex pop rdx
   14002218a:	add    BYTE PTR [rax],al
   14002218c:	sahf   
   14002218d:	or     edi,DWORD PTR [rdi]
   14002218f:	outs   dx,WORD PTR ds:[rsi]
   140022191:	movsxd esi,DWORD PTR [rbp+0x73]
   140022194:	rex.WRX
   140022195:	gs js  0x14002220c
   140022198:	push   rax
   140022199:	jb     0x140022200
   14002219b:	jbe    0x1400221e0
   14002219d:	push   0x40646c69
   1400221a2:	push   rcx
   1400221a3:	rex.WR (bad) 
   1400221a5:	(bad)  
   1400221a6:	gs ins BYTE PTR es:[rdi],dx
   1400221a8:	rex
   1400221a9:	rex
   1400221aa:	rex.WRB
   1400221ab:	rex.RB
   1400221ac:	rex.B
   1400221ad:	pop    r15
   1400221af:	rex.WRX pop rdi
   1400221b1:	rex.WRX
   1400221b2:	rex pop rdx
   1400221b4:	add    BYTE PTR [rax],al
   1400221b6:	mov    BYTE PTR [rax],dl
   1400221b8:	(bad)  
   1400221b9:	ins    DWORD PTR es:[rdi],dx
   1400221ba:	gs je  0x14002221e
   1400221bd:	rex.WRXB (bad) 
   1400221bf:	push   0x65
   1400221c1:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   1400221c5:	rex.W
   1400221c6:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400221c8:	js     0x140022216
   1400221ca:	(bad)  
   1400221cb:	jns    0x14002223c
   1400221cd:	jne    0x140022243
   1400221cf:	rex
   1400221d0:	rex push rbp
   1400221d2:	rex.RB
   1400221d3:	rex.X
   1400221d4:	push   r8
   1400221d6:	rex.RB
   1400221d7:	rex.X push rbp
   1400221d9:	push   rcx
   1400221da:	rex.WRB
   1400221db:	gs je  0x14002223f
   1400221de:	rex.WRXB (bad) 
   1400221e0:	push   0x65
   1400221e2:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400221e6:	pop    rax
   1400221e7:	pop    rdx
   1400221e8:	add    BYTE PTR [rax],al
   1400221ea:	sti    
   1400221eb:	adc    edi,DWORD PTR [rdi]
   1400221ed:	jno    0x140022263
   1400221ef:	pop    rdi
   1400221f0:	ins    DWORD PTR es:[rdi],dx
   1400221f1:	gs je  0x140022255
   1400221f4:	movsxd esp,DWORD PTR [rcx+0x73]
   1400221f7:	je     0x140022239
   1400221f9:	push   rcx
   1400221fa:	rex.W
   1400221fb:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400221fd:	js     0x14002224b
   1400221ff:	(bad)  
   140022200:	jns    0x140022271
   140022202:	jne    0x140022278
   140022204:	rex
   140022205:	rex push rbp
   140022207:	rex.RB
   140022208:	rex.B
   140022209:	push   r8
   14002220b:	rex.RB
   14002220c:	pop    r8
   14002220e:	push   rax
   14002220f:	rex.RB
   140022210:	rex.X
   140022211:	rex.R
   140022212:	rex pop rdx
   140022214:	add    BYTE PTR [rax],al
   140022216:	jno    0x14002222b
   140022218:	(bad)  
   140022219:	jno    0x14002228f
   14002221b:	pop    rdi
   14002221c:	ins    DWORD PTR es:[rdi],dx
   14002221d:	gs je  0x140022281
   140022220:	movsxd esp,DWORD PTR [rcx+0x6c]
   140022223:	ins    BYTE PTR es:[rdi],dx
   140022224:	rex push rcx
   140022226:	rex.W
   140022227:	rex.X outs dx,DWORD PTR ds:[rsi]
   140022229:	js     0x140022277
   14002222b:	(bad)  
   14002222c:	jns    0x14002229d
   14002222e:	jne    0x1400222a4
   140022230:	rex
   140022231:	rex push rbp
   140022233:	rex.RB
   140022234:	rex.B
   140022235:	rex.B
   140022236:	rex.W push rdi
   140022238:	xor    al,0x43
   14002223a:	(bad)  
   14002223b:	ins    BYTE PTR es:[rdi],dx
   14002223c:	ins    BYTE PTR es:[rdi],dx
   14002223d:	rex push rcx
   14002223f:	rex.WRB
   140022240:	gs je  0x1400222a4
   140022243:	rex.WRXB (bad) 
   140022245:	push   0x65
   140022247:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14002224b:	rex.W push rax
   14002224d:	rex.RB
   14002224e:	push   r8
   140022250:	rex.RB
   140022251:	pop    r8
   140022253:	rex pop rdx
   140022255:	add    BYTE PTR [rbx],ch
   140022257:	add    eax,0x6464613f
   14002225c:	rex.WB je 0x1400222c4
   14002225f:	ins    DWORD PTR es:[rdi],dx
   140022260:	rex push rcx
   140022262:	rex.X outs dx,DWORD PTR ds:[rsi]
   140022264:	js     0x1400222b2
   140022266:	(bad)  
   140022267:	jns    0x1400222d8
   140022269:	jne    0x1400222df
   14002226b:	rex
   14002226c:	rex push rbp
   14002226e:	rex.RB
   14002226f:	rex.B
   140022270:	pop    r8
   140022272:	push   rax
   140022273:	rex.RB
   140022274:	push   r14
   140022276:	push   rcx
   140022277:	rex.WR (bad) 
   140022279:	jns    0x1400222ea
   14002227b:	jne    0x1400222f1
   14002227d:	rex.WB je 0x1400222e5
   140022280:	ins    DWORD PTR es:[rdi],dx
   140022281:	rex
   140022282:	rex
   140022283:	rex pop rdx
   140022285:	add    dl,dl
   140022287:	(bad)  
   140022288:	(bad)  
   140022289:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x51407441
   140022291:	rex.X outs dx,DWORD PTR ds:[rsi]
   140022293:	js     0x1400222e1
   140022295:	(bad)  
   140022296:	jns    0x140022307
   140022298:	jne    0x14002230e
   14002229a:	rex
   14002229b:	rex push rbp
   14002229d:	rex.RB
   14002229e:	rex.X
   14002229f:	push   r8
   1400222a1:	rex.RB
   1400222a2:	push   r14
   1400222a4:	push   rcx
   1400222a5:	rex.WR (bad) 
   1400222a7:	jns    0x140022318
   1400222a9:	jne    0x14002231f
   1400222ab:	rex.WB je 0x140022313
   1400222ae:	ins    DWORD PTR es:[rdi],dx
   1400222af:	rex
   1400222b0:	rex
   1400222b1:	rex.W
   1400222b2:	rex pop rdx
   1400222b4:	add    BYTE PTR [rax],al
   1400222b6:	xor    eax,0x61743f1e
   1400222bb:	imul   esp,DWORD PTR [rbp+0x41],0x74
   1400222bf:	rex push rcx
   1400222c1:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400222c3:	js     0x140022311
   1400222c5:	(bad)  
   1400222c6:	jns    0x140022337
   1400222c8:	jne    0x14002233e
   1400222ca:	rex
   1400222cb:	rex push rbp
   1400222cd:	rex.RB
   1400222ce:	rex.B
   1400222cf:	push   r8
   1400222d1:	rex.RB
   1400222d2:	push   r14
   1400222d4:	push   rcx
   1400222d5:	rex.WR (bad) 
   1400222d7:	jns    0x140022348
   1400222d9:	jne    0x14002234f
   1400222db:	rex.WB je 0x140022343
   1400222de:	ins    DWORD PTR es:[rdi],dx
   1400222df:	rex
   1400222e0:	rex
   1400222e1:	rex.W
   1400222e2:	rex pop rdx
   1400222e4:	add    BYTE PTR [rax],al
   1400222e6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400222e7:	(bad)  
   1400222e8:	(bad)  
   1400222e9:	movsxd ebp,DWORD PTR [rdi+0x75]
   1400222ec:	outs   dx,BYTE PTR ds:[rsi]
   1400222ed:	je     0x14002232f
   1400222ef:	push   rcx
   1400222f0:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400222f2:	js     0x140022340
   1400222f4:	(bad)  
   1400222f5:	jns    0x140022366
   1400222f7:	jne    0x14002236d
   1400222f9:	rex
   1400222fa:	rex push rbp
   1400222fc:	rex.RB
   1400222fd:	rex.X
   1400222fe:	rex.B
   1400222ff:	rex.W pop rax
   140022301:	pop    rdx
   140022302:	add    BYTE PTR [rax],al
   140022304:	xchg   edx,eax
   140022305:	sbb    al,0x3f
   140022307:	jae    0x140022372
   140022309:	jp     0x140022370
   14002230b:	imul   rbp,QWORD PTR [rsi+0x74],0x6f425140
   140022313:	js     0x140022361
   140022315:	(bad)  
   140022316:	jns    0x140022387
   140022318:	jne    0x14002238e
   14002231a:	rex
   14002231b:	rex push rbp
   14002231d:	rex.RB
   14002231e:	rex.X
   14002231f:	rex.B (bad) 
   140022321:	push   r14
   140022323:	push   rcx
   140022324:	push   rbx
   140022325:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14002232c:	add    BYTE PTR [rax],al
   14002232e:	clc    
   14002232f:	adc    BYTE PTR [rdi],bh
   140022331:	ins    DWORD PTR es:[rdi],dx
   140022332:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140022339:	imul   edi,DWORD PTR [rdx+0x65],0x6f425140
   140022340:	js     0x14002238e
   140022342:	(bad)  
   140022343:	jns    0x1400223b4
   140022345:	jne    0x1400223bb
   140022347:	rex
   140022348:	rex push rbp
   14002234a:	rex.RB
   14002234b:	rex.X
   14002234c:	rex.B (bad) 
   14002234e:	push   r14
   140022350:	push   rcx
   140022351:	push   rbx
   140022352:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140022359:	add    BYTE PTR [rax+rdx*1],ch
   14002235c:	(bad)  
   14002235d:	ins    DWORD PTR es:[rdi],dx
   14002235e:	(bad)  
   14002235f:	js     0x1400223ca
   140022361:	ins    DWORD PTR es:[rdi],dx
   140022362:	jne    0x1400223d1
   140022364:	push   rbx
   140022365:	imul   edi,DWORD PTR [rdx+0x65],0x6f425140
   14002236c:	js     0x1400223ba
   14002236e:	(bad)  
   14002236f:	jns    0x1400223e0
   140022371:	jne    0x1400223e7
   140022373:	rex
   140022374:	rex push rbp
   140022376:	rex.RB
   140022377:	rex.X
   140022378:	rex.B (bad) 
   14002237a:	push   r14
   14002237c:	push   rcx
   14002237d:	push   rbx
   14002237e:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140022385:	add    BYTE PTR [rbx],ah
   140022387:	or     edi,DWORD PTR [rdi]
   140022389:	gs js  0x1400223fc
   14002238c:	(bad)  
   14002238d:	outs   dx,BYTE PTR ds:[rsi]
   14002238e:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65726944
   140022396:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14002239a:	outs   dx,BYTE PTR ds:[rsi]
   14002239b:	jae    0x1400223dd
   14002239d:	push   rcx
   14002239e:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400223a0:	js     0x1400223ee
   1400223a2:	(bad)  
   1400223a3:	jns    0x140022414
   1400223a5:	jne    0x14002241b
   1400223a7:	rex
   1400223a8:	rex push rbp
   1400223aa:	rex.RB
   1400223ab:	rex.X
   1400223ac:	rex.B (bad) 
   1400223ae:	push   r14
   1400223b0:	(bad)  
   1400223b1:	and    al,0x51
   1400223b3:	rex.RX ins BYTE PTR es:[rdi],dx
   1400223b5:	(bad)  
   1400223b6:	addr32 jae 0x1400223f9
   1400223b9:	push   rdi
   1400223ba:	xor    al,0x4f
   1400223bc:	jb     0x140022427
   1400223be:	outs   dx,BYTE PTR gs:[rsi]
   1400223c0:	je     0x140022423
   1400223c2:	je     0x14002242d
   1400223c4:	outs   dx,DWORD PTR ds:[rsi]
   1400223c5:	outs   dx,BYTE PTR ds:[rsi]
   1400223c6:	rex push rcx
   1400223c8:	je     0x14002240a
   1400223ca:	rex
   1400223cb:	rex
   1400223cc:	rex pop rax
   1400223ce:	pop    rdx
   1400223cf:	add    BYTE PTR [rdi+0x65733f18],cl
   1400223d5:	je     0x14002241e
   1400223d7:	outs   dx,DWORD PTR gs:[rsi]
   1400223d9:	ins    DWORD PTR es:[rdi],dx
   1400223da:	gs je  0x14002244f
   1400223dd:	jns    0x14002241f
   1400223df:	push   rcx
   1400223e0:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400223e2:	js     0x140022430
   1400223e4:	(bad)  
   1400223e5:	jns    0x140022456
   1400223e7:	jne    0x14002245d
   1400223e9:	rex
   1400223ea:	rex push rbp
   1400223ec:	rex.RB
   1400223ed:	rex.B
   1400223ee:	pop    r8
   1400223f0:	rex.B
   1400223f1:	rex.RB
   1400223f2:	rex.X push rsi
   1400223f4:	push   rcx
   1400223f5:	push   rdx
   1400223f6:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   1400223fb:	rex pop rdx
   1400223fd:	add    BYTE PTR [rdi+0xc],bl
   140022400:	(bad)  
   140022401:	push   0x65487361
   140022406:	imul   esp,DWORD PTR [rdi+0x68],0x726f4674
   14002240d:	push   rdi
   14002240e:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f425140
   140022416:	js     0x140022464
   140022418:	(bad)  
   140022419:	jns    0x14002248a
   14002241b:	jne    0x140022491
   14002241d:	rex
   14002241e:	rex push rbp
   140022420:	rex.RB
   140022421:	rex.X
   140022422:	pop    r15
   140022424:	rex.WRX pop rax
   140022426:	pop    rdx
   140022427:	add    BYTE PTR [rdi+0xc],bh
   14002242a:	(bad)  
   14002242b:	push   0x68676965
   140022430:	je     0x140022478
   140022432:	outs   dx,DWORD PTR ds:[rsi]
   140022433:	jb     0x14002248c
   140022435:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f425140
   14002243d:	js     0x14002248b
   14002243f:	(bad)  
   140022440:	jns    0x1400224b1
   140022442:	jne    0x1400224b8
   140022444:	rex
   140022445:	rex push rbp
   140022447:	rex.RB
   140022448:	rex.X
   140022449:	rex.B
   14002244a:	rex.W
   14002244b:	rex.W
   14002244c:	rex pop rdx
   14002244e:	add    BYTE PTR [rax],al
   140022450:	repz adc BYTE PTR [rdi],bh
   140022453:	ins    DWORD PTR es:[rdi],dx
   140022454:	imul   ebp,DWORD PTR [rsi+0x69],0x486d756d
   14002245b:	imul   esp,DWORD PTR gs:[rdi+0x68],0x726f4674
   140022463:	push   rdi
   140022464:	imul   esp,DWORD PTR [rsp+rsi*2+0x68],0x6f425140
   14002246c:	js     0x1400224ba
   14002246e:	(bad)  
   14002246f:	jns    0x1400224e0
   140022471:	jne    0x1400224e7
   140022473:	rex
   140022474:	rex push rbp
   140022476:	rex.RB
   140022477:	rex.X
   140022478:	rex.B
   140022479:	rex.W
   14002247a:	rex.W
   14002247b:	rex pop rdx
   14002247d:	add    bl,ah
   14002247f:	or     eax,0x766e693f
   140022484:	(bad)  
   140022485:	ins    BYTE PTR es:[rdi],dx
   140022486:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x42514065
   14002248e:	outs   dx,DWORD PTR ds:[rsi]
   14002248f:	js     0x1400224dd
   140022491:	(bad)  
   140022492:	jns    0x140022503
   140022494:	jne    0x14002250a
   140022496:	rex
   140022497:	rex push rbp
   140022499:	rex.RB
   14002249a:	rex.B
   14002249b:	pop    r8
   14002249d:	pop    rax
   14002249e:	pop    rdx
   14002249f:	add    BYTE PTR [rcx+0x656d3f10],dl
   1400224a5:	je     0x140022508
   1400224a7:	rex.WRXB (bad) 
   1400224a9:	push   0x65
   1400224ab:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   1400224af:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400224b7:	rex
   1400224b8:	rex push rbp
   1400224ba:	rex.RB
   1400224bb:	rex.X
   1400224bc:	push   r8
   1400224be:	rex.RB
   1400224bf:	rex.X push rbp
   1400224c1:	push   rcx
   1400224c2:	rex.WRB
   1400224c3:	gs je  0x140022527
   1400224c6:	rex.WRXB (bad) 
   1400224c8:	push   0x65
   1400224ca:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400224ce:	pop    rax
   1400224cf:	pop    rdx
   1400224d0:	add    BYTE PTR [rax],al
   1400224d2:	add    al,0x14
   1400224d4:	(bad)  
   1400224d5:	jno    0x14002254b
   1400224d7:	pop    rdi
   1400224d8:	ins    DWORD PTR es:[rdi],dx
   1400224d9:	gs je  0x14002253d
   1400224dc:	movsxd esp,DWORD PTR [rcx+0x73]
   1400224df:	je     0x140022521
   1400224e1:	push   rcx
   1400224e2:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400224ea:	rex
   1400224eb:	rex push rbp
   1400224ed:	rex.RB
   1400224ee:	rex.B
   1400224ef:	push   r8
   1400224f1:	rex.RB
   1400224f2:	pop    r8
   1400224f4:	push   rax
   1400224f5:	rex.RB
   1400224f6:	rex.X
   1400224f7:	rex.R
   1400224f8:	rex pop rdx
   1400224fa:	add    BYTE PTR [rax],al
   1400224fc:	jp     0x140022511
   1400224fe:	(bad)  
   1400224ff:	jno    0x140022575
   140022501:	pop    rdi
   140022502:	ins    DWORD PTR es:[rdi],dx
   140022503:	gs je  0x140022567
   140022506:	movsxd esp,DWORD PTR [rcx+0x6c]
   140022509:	ins    BYTE PTR es:[rdi],dx
   14002250a:	rex push rcx
   14002250c:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140022514:	rex
   140022515:	rex push rbp
   140022517:	rex.RB
   140022518:	rex.B
   140022519:	rex.B
   14002251a:	rex.W push rdi
   14002251c:	xor    al,0x43
   14002251e:	(bad)  
   14002251f:	ins    BYTE PTR es:[rdi],dx
   140022520:	ins    BYTE PTR es:[rdi],dx
   140022521:	rex push rcx
   140022523:	rex.WRB
   140022524:	gs je  0x140022588
   140022527:	rex.WRXB (bad) 
   140022529:	push   0x65
   14002252b:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14002252f:	rex.W push rax
   140022531:	rex.RB
   140022532:	push   r8
   140022534:	rex.RB
   140022535:	pop    r8
   140022537:	rex pop rdx
   140022539:	add    dh,dl
   14002253b:	or     bh,BYTE PTR [rdi]
   14002253d:	gs jbe 0x1400225a5
   140022540:	outs   dx,BYTE PTR ds:[rsi]
   140022541:	je     0x140022583
   140022543:	push   rcx
   140022544:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14002254c:	rex
   14002254d:	rex push rbp
   14002254f:	rex.RB
   140022550:	rex.B
   140022551:	pop    r15
   140022553:	rex.WRX push rax
   140022555:	rex.RB
   140022556:	push   r14
   140022558:	push   rcx
   140022559:	rex.RB jbe 0x1400225c1
   14002255c:	outs   dx,BYTE PTR ds:[rsi]
   14002255d:	je     0x14002259f
   14002255f:	rex
   140022560:	rex pop rdx
   140022562:	add    BYTE PTR [rax],al
   140022564:	stos   DWORD PTR es:[rdi],eax
   140022565:	sbb    al,0x3f
   140022567:	jae    0x1400225d2
   140022569:	jp     0x1400225d0
   14002256b:	imul   rbp,QWORD PTR [rsi+0x74],0x694c5140
   140022573:	outs   dx,BYTE PTR ds:[rsi]
   140022574:	gs rex.RB
   140022576:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41424555
   14002257f:	(bad)  
   140022580:	push   r14
   140022582:	push   rcx
   140022583:	push   rbx
   140022584:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14002258b:	add    BYTE PTR [rsi],cl
   14002258d:	adc    DWORD PTR [rdi],edi
   14002258f:	ins    DWORD PTR es:[rdi],dx
   140022590:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140022597:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14002259e:	rex push rcx
   1400225a0:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400225a8:	rex
   1400225a9:	rex push rbp
   1400225ab:	rex.RB
   1400225ac:	rex.X
   1400225ad:	rex.B (bad) 
   1400225af:	push   r14
   1400225b1:	push   rcx
   1400225b2:	push   rbx
   1400225b3:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400225ba:	add    BYTE PTR [rax],al
   1400225bc:	ja     0x1400225cf
   1400225be:	(bad)  
   1400225bf:	ins    DWORD PTR es:[rdi],dx
   1400225c0:	outs   dx,DWORD PTR ds:[rsi]
   1400225c1:	jne    0x140022636
   1400225c3:	gs push rax
   1400225c5:	jb     0x14002262c
   1400225c7:	jae    0x14002263c
   1400225c9:	rex.RB jbe 0x140022631
   1400225cc:	outs   dx,BYTE PTR ds:[rsi]
   1400225cd:	je     0x14002260f
   1400225cf:	push   rcx
   1400225d0:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400225d8:	rex
   1400225d9:	rex
   1400225da:	rex.WRB
   1400225db:	rex.RB
   1400225dc:	rex.B
   1400225dd:	pop    r8
   1400225df:	push   rax
   1400225e0:	rex.RB
   1400225e1:	push   r14
   1400225e3:	push   rcx
   1400225e4:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400225e6:	jne    0x14002265b
   1400225e8:	gs rex.RB jbe 0x140022651
   1400225ec:	outs   dx,BYTE PTR ds:[rsi]
   1400225ed:	je     0x14002262f
   1400225ef:	rex
   1400225f0:	rex pop rdx
   1400225f2:	add    BYTE PTR [rax],al
   1400225f4:	xchg   ebp,eax
   1400225f5:	adc    DWORD PTR [rdi],edi
   1400225f7:	ins    DWORD PTR es:[rdi],dx
   1400225f8:	outs   dx,DWORD PTR ds:[rsi]
   1400225f9:	jne    0x14002266e
   1400225fb:	gs push rdx
   1400225fd:	gs ins BYTE PTR es:[rdi],dx
   1400225ff:	gs (bad) 
   140022601:	jae    0x140022668
   140022603:	rex.RB jbe 0x14002266b
   140022606:	outs   dx,BYTE PTR ds:[rsi]
   140022607:	je     0x140022649
   140022609:	push   rcx
   14002260a:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140022612:	rex
   140022613:	rex
   140022614:	rex.WRB
   140022615:	rex.RB
   140022616:	rex.B
   140022617:	pop    r8
   140022619:	push   rax
   14002261a:	rex.RB
   14002261b:	push   r14
   14002261d:	push   rcx
   14002261e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140022620:	jne    0x140022695
   140022622:	gs rex.RB jbe 0x14002268b
   140022626:	outs   dx,BYTE PTR ds:[rsi]
   140022627:	je     0x140022669
   140022629:	rex
   14002262a:	rex pop rdx
   14002262c:	add    BYTE PTR [rax],al
   14002262e:	(bad)  
   14002262f:	adc    DWORD PTR [rdi],edi
   140022631:	ins    DWORD PTR es:[rdi],dx
   140022632:	outs   dx,DWORD PTR ds:[rsi]
   140022633:	jne    0x1400226a8
   140022635:	rex.R outs dx,DWORD PTR gs:[rsi]
   140022638:	jne    0x14002269c
   14002263a:	ins    BYTE PTR es:[rdi],dx
   14002263b:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14002263e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   140022645:	je     0x140022687
   140022647:	push   rcx
   140022648:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140022650:	rex
   140022651:	rex
   140022652:	rex.WRB
   140022653:	rex.RB
   140022654:	rex.B
   140022655:	pop    r8
   140022657:	push   rax
   140022658:	rex.RB
   140022659:	push   r14
   14002265b:	push   rcx
   14002265c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002265e:	jne    0x1400226d3
   140022660:	gs rex.RB jbe 0x1400226c9
   140022664:	outs   dx,BYTE PTR ds:[rsi]
   140022665:	je     0x1400226a7
   140022667:	rex
   140022668:	rex pop rdx
   14002266a:	add    BYTE PTR [rax],al
   14002266c:	push   rbp
   14002266d:	adc    DWORD PTR [rdi],edi
   14002266f:	ins    DWORD PTR es:[rdi],dx
   140022670:	outs   dx,DWORD PTR ds:[rsi]
   140022671:	jne    0x1400226e6
   140022673:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140022676:	jbe    0x1400226dd
   140022678:	rex.RB jbe 0x1400226e0
   14002267b:	outs   dx,BYTE PTR ds:[rsi]
   14002267c:	je     0x1400226be
   14002267e:	push   rcx
   14002267f:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140022687:	rex
   140022688:	rex
   140022689:	rex.WRB
   14002268a:	rex.RB
   14002268b:	rex.B
   14002268c:	pop    r8
   14002268e:	push   rax
   14002268f:	rex.RB
   140022690:	push   r14
   140022692:	push   rcx
   140022693:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140022695:	jne    0x14002270a
   140022697:	gs rex.RB jbe 0x140022700
   14002269b:	outs   dx,BYTE PTR ds:[rsi]
   14002269c:	je     0x1400226de
   14002269e:	rex
   14002269f:	rex pop rdx
   1400226a1:	add    BYTE PTR [rbp+0xf],cl
   1400226a4:	(bad)  
   1400226a5:	imul   esp,DWORD PTR [rbp+0x79],0x50
   1400226a9:	jb     0x140022710
   1400226ab:	jae    0x140022720
   1400226ad:	rex.RB jbe 0x140022715
   1400226b0:	outs   dx,BYTE PTR ds:[rsi]
   1400226b1:	je     0x1400226f3
   1400226b3:	push   rcx
   1400226b4:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400226bc:	rex
   1400226bd:	rex
   1400226be:	rex.WRB
   1400226bf:	rex.RB
   1400226c0:	rex.B
   1400226c1:	pop    r8
   1400226c3:	push   rax
   1400226c4:	rex.RB
   1400226c5:	push   r14
   1400226c7:	push   rcx
   1400226c8:	rex.WXB
   1400226c9:	gs jns 0x140022711
   1400226cc:	jbe    0x140022733
   1400226ce:	outs   dx,BYTE PTR ds:[rsi]
   1400226cf:	je     0x140022711
   1400226d1:	rex
   1400226d2:	rex pop rdx
   1400226d4:	add    BYTE PTR [rax],al
   1400226d6:	lea    ecx,[rbx]
   1400226d8:	(bad)  
   1400226d9:	outs   dx,WORD PTR ds:[rsi]
   1400226db:	movsxd esi,DWORD PTR [rbp+0x73]
   1400226de:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400226e0:	rex.RB jbe 0x140022748
   1400226e3:	outs   dx,BYTE PTR ds:[rsi]
   1400226e4:	je     0x140022726
   1400226e6:	push   rcx
   1400226e7:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400226ef:	rex
   1400226f0:	rex
   1400226f1:	rex.WRB
   1400226f2:	rex.RB
   1400226f3:	rex.B
   1400226f4:	pop    r8
   1400226f6:	push   rax
   1400226f7:	rex.RB
   1400226f8:	push   r14
   1400226fa:	push   rcx
   1400226fb:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400226fd:	movsxd esi,DWORD PTR [rbp+0x73]
   140022700:	rex.RB jbe 0x140022768
   140022703:	outs   dx,BYTE PTR ds:[rsi]
   140022704:	je     0x140022746
   140022706:	rex
   140022707:	rex pop rdx
   140022709:	add    BYTE PTR [rdx+0x6f663f0b],dh
   14002270f:	movsxd esi,DWORD PTR [rbp+0x73]
   140022712:	rex.WRXB jne 0x140022789
   140022715:	rex.RB jbe 0x14002277d
   140022718:	outs   dx,BYTE PTR ds:[rsi]
   140022719:	je     0x14002275b
   14002271b:	push   rcx
   14002271c:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140022724:	rex
   140022725:	rex
   140022726:	rex.WRB
   140022727:	rex.RB
   140022728:	rex.B
   140022729:	pop    r8
   14002272b:	push   rax
   14002272c:	rex.RB
   14002272d:	push   r14
   14002272f:	push   rcx
   140022730:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140022732:	movsxd esi,DWORD PTR [rbp+0x73]
   140022735:	rex.RB jbe 0x14002279d
   140022738:	outs   dx,BYTE PTR ds:[rsi]
   140022739:	je     0x14002277b
   14002273b:	rex
   14002273c:	rex pop rdx
   14002273e:	add    BYTE PTR [rax],al
   140022740:	pop    rdi
   140022741:	adc    bh,BYTE PTR [rdi]
   140022743:	jo     0x1400227a6
   140022745:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14002274c:	je     0x14002278e
   14002274e:	push   rcx
   14002274f:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140022757:	rex
   140022758:	rex
   140022759:	rex.WRB
   14002275a:	rex.RB
   14002275b:	rex.B
   14002275c:	pop    r8
   14002275e:	push   rax
   14002275f:	rex.RB
   140022760:	push   r14
   140022762:	push   rcx
   140022763:	push   rax
   140022764:	(bad)  
   140022765:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14002276c:	je     0x1400227ae
   14002276e:	rex
   14002276f:	rex pop rdx
   140022771:	add    BYTE PTR [rdi+rax*1+0x6e6f633f],cl
   140022778:	je     0x1400227df
   14002277a:	js     0x1400227f0
   14002277c:	rex.WRB
   14002277d:	outs   dx,BYTE PTR gs:[rsi]
   14002277f:	jne    0x1400227c6
   140022781:	jbe    0x1400227e8
   140022783:	outs   dx,BYTE PTR ds:[rsi]
   140022784:	je     0x1400227c6
   140022786:	push   rcx
   140022787:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14002278f:	rex
   140022790:	rex
   140022791:	rex.WRB
   140022792:	rex.RB
   140022793:	rex.B
   140022794:	pop    r8
   140022796:	push   rax
   140022797:	rex.RB
   140022798:	push   r14
   14002279a:	push   rcx
   14002279b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002279d:	outs   dx,BYTE PTR ds:[rsi]
   14002279e:	je     0x140022805
   1400227a0:	js     0x140022816
   1400227a2:	rex.WRB
   1400227a3:	outs   dx,BYTE PTR gs:[rsi]
   1400227a5:	jne    0x1400227ec
   1400227a7:	jbe    0x14002280e
   1400227a9:	outs   dx,BYTE PTR ds:[rsi]
   1400227aa:	je     0x1400227ec
   1400227ac:	rex
   1400227ad:	rex pop rdx
   1400227af:	add    BYTE PTR [rip+0x72643f0a],dl        # 0x1b26666bf
   1400227b5:	(bad)  
   1400227b6:	rex.RB outs dx,BYTE PTR ds:[esi]
   1400227b9:	je     0x140022820
   1400227bb:	jb     0x140022802
   1400227bd:	jbe    0x140022824
   1400227bf:	outs   dx,BYTE PTR ds:[rsi]
   1400227c0:	je     0x140022802
   1400227c2:	push   rcx
   1400227c3:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400227cb:	rex
   1400227cc:	rex
   1400227cd:	rex.WRB
   1400227ce:	rex.RB
   1400227cf:	rex.B
   1400227d0:	pop    r8
   1400227d2:	push   rax
   1400227d3:	rex.RB
   1400227d4:	push   r14
   1400227d6:	push   rcx
   1400227d7:	rex.R jb 0x14002283b
   1400227da:	rex.RB outs dx,BYTE PTR ds:[esi]
   1400227dd:	je     0x140022844
   1400227df:	jb     0x140022826
   1400227e1:	jbe    0x140022848
   1400227e3:	outs   dx,BYTE PTR ds:[rsi]
   1400227e4:	je     0x140022826
   1400227e6:	rex
   1400227e7:	rex pop rdx
   1400227e9:	add    BYTE PTR [rip+0x72643f0a],ch        # 0x1b26666f9
   1400227ef:	(bad)  
   1400227f0:	rex.WRB outs dx,DWORD PTR ds:[esi]
   1400227f3:	jbe    0x14002285a
   1400227f5:	rex.RB jbe 0x14002285d
   1400227f8:	outs   dx,BYTE PTR ds:[rsi]
   1400227f9:	je     0x14002283b
   1400227fb:	push   rcx
   1400227fc:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140022804:	rex
   140022805:	rex
   140022806:	rex.WRB
   140022807:	rex.RB
   140022808:	rex.B
   140022809:	pop    r8
   14002280b:	push   rax
   14002280c:	rex.RB
   14002280d:	push   r14
   14002280f:	push   rcx
   140022810:	rex.R jb 0x140022874
   140022813:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140022816:	jbe    0x14002287d
   140022818:	rex.RB jbe 0x140022880
   14002281b:	outs   dx,BYTE PTR ds:[rsi]
   14002281c:	je     0x14002285e
   14002281e:	rex
   14002281f:	rex pop rdx
   140022821:	add    BYTE PTR [rax],ah
   140022823:	or     bh,BYTE PTR [rdi]
   140022825:	fs jb  0x140022889
   140022828:	addr32 rex.WR
   14002282a:	gs (bad) 
   14002282c:	jbe    0x140022893
   14002282e:	rex.RB jbe 0x140022896
   140022831:	outs   dx,BYTE PTR ds:[rsi]
   140022832:	je     0x140022874
   140022834:	push   rcx
   140022835:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   14002283d:	rex
   14002283e:	rex
   14002283f:	rex.WRB
   140022840:	rex.RB
   140022841:	rex.B
   140022842:	pop    r8
   140022844:	push   rax
   140022845:	rex.RB
   140022846:	push   r14
   140022848:	push   rcx
   140022849:	rex.R jb 0x1400228ad
   14002284c:	addr32 rex.WR
   14002284e:	gs (bad) 
   140022850:	jbe    0x1400228b7
   140022852:	rex.RB jbe 0x1400228ba
   140022855:	outs   dx,BYTE PTR ds:[rsi]
   140022856:	je     0x140022898
   140022858:	rex
   140022859:	rex pop rdx
   14002285b:	add    BYTE PTR [rsi+0xa],ah
   14002285e:	(bad)  
   14002285f:	fs jb  0x1400228d1
   140022862:	jo     0x1400228a9
   140022864:	jbe    0x1400228cb
   140022866:	outs   dx,BYTE PTR ds:[rsi]
   140022867:	je     0x1400228a9
   140022869:	push   rcx
   14002286a:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140022872:	rex
   140022873:	rex
   140022874:	rex.WRB
   140022875:	rex.RB
   140022876:	rex.B
   140022877:	pop    r8
   140022879:	push   rax
   14002287a:	rex.RB
   14002287b:	push   r14
   14002287d:	push   rcx
   14002287e:	rex.R jb 0x1400228f0
   140022881:	jo     0x1400228c8
   140022883:	jbe    0x1400228ea
   140022885:	outs   dx,BYTE PTR ds:[rsi]
   140022886:	je     0x1400228c8
   140022888:	rex
   140022889:	rex pop rdx
   14002288b:	add    BYTE PTR [rbp+0x6],bh
   14002288e:	(bad)  
   14002288f:	movsxd ebp,DWORD PTR [rax+0x61]
   140022892:	outs   dx,BYTE PTR ds:[rsi]
   140022893:	addr32 gs rex.RB jbe 0x1400228fd
   140022898:	outs   dx,BYTE PTR ds:[rsi]
   140022899:	je     0x1400228db
   14002289b:	push   rcx
   14002289c:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400228a4:	rex
   1400228a5:	rex
   1400228a6:	rex.WRB
   1400228a7:	rex.RB
   1400228a8:	rex.B
   1400228a9:	pop    r8
   1400228ab:	push   rax
   1400228ac:	rex.RB
   1400228ad:	push   r14
   1400228af:	push   rcx
   1400228b0:	rex.RB jbe 0x140022918
   1400228b3:	outs   dx,BYTE PTR ds:[rsi]
   1400228b4:	je     0x1400228f6
   1400228b6:	rex
   1400228b7:	rex pop rdx
   1400228b9:	add    BYTE PTR [rsi+0xd],dh
   1400228bc:	(bad)  
   1400228bd:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   1400228c4:	je     0x14002292e
   1400228c6:	outs   dx,DWORD PTR ds:[rsi]
   1400228c7:	fs rex.RB jbe 0x140022930
   1400228cb:	outs   dx,BYTE PTR ds:[rsi]
   1400228cc:	je     0x14002290e
   1400228ce:	push   rcx
   1400228cf:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400228d7:	rex
   1400228d8:	rex
   1400228d9:	rex.WRB
   1400228da:	rex.RB
   1400228db:	rex.B
   1400228dc:	pop    r8
   1400228de:	push   rax
   1400228df:	rex.RB
   1400228e0:	push   r14
   1400228e2:	push   rcx
   1400228e3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400228e5:	jo     0x14002295c
   1400228e7:	je     0x140022936
   1400228e9:	gs je  0x140022954
   1400228ec:	outs   dx,DWORD PTR ds:[rsi]
   1400228ed:	fs rex.RB jbe 0x140022956
   1400228f1:	outs   dx,BYTE PTR ds:[rsi]
   1400228f2:	je     0x140022934
   1400228f4:	rex
   1400228f5:	rex pop rdx
   1400228f7:	add    BYTE PTR [rbp+rcx*1+0x706e693f],al
   1400228fe:	jne    0x140022974
   140022900:	rex.WRB
   140022901:	gs je  0x14002296c
   140022904:	outs   dx,DWORD PTR ds:[rsi]
   140022905:	fs push rcx
   140022907:	jne    0x14002296e
   140022909:	jb     0x140022984
   14002290b:	rex push rcx
   14002290d:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140022915:	rex
   140022916:	rex push rbp
   140022918:	rex.RB
   140022919:	rex.X
   14002291a:	rex.B (bad) 
   14002291c:	push   r14
   14002291e:	push   rcx
   14002291f:	push   rsi
   140022920:	(bad)  
   140022921:	jb     0x14002298c
   140022923:	(bad)  
   140022924:	outs   dx,BYTE PTR ds:[rsi]
   140022925:	je     0x140022967
   140022927:	rex push rdi
   140022929:	xor    al,0x49
   14002292b:	outs   dx,BYTE PTR ds:[rsi]
   14002292c:	jo     0x1400229a3
   14002292e:	je     0x14002297d
   140022930:	gs je  0x14002299b
   140022933:	outs   dx,DWORD PTR ds:[rsi]
   140022934:	fs push rcx
   140022936:	jne    0x14002299d
   140022938:	jb     0x1400229b3
   14002293a:	rex push rcx
   14002293c:	je     0x14002297e
   14002293e:	rex
   14002293f:	rex pop rdx
   140022941:	add    al,cl
   140022943:	adc    BYTE PTR [rdi],bh
   140022945:	ins    DWORD PTR es:[rdi],dx
   140022946:	gs je  0x1400229aa
   140022949:	rex.WRXB (bad) 
   14002294b:	push   0x65
   14002294d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140022951:	push   rsp
   140022952:	outs   dx,DWORD PTR ds:[rsi]
   140022953:	outs   dx,DWORD PTR ds:[rsi]
   140022954:	ins    BYTE PTR es:[rdi],dx
   140022955:	rex.X jne 0x1400229cc
   140022958:	je     0x1400229c9
   14002295a:	outs   dx,BYTE PTR ds:[rsi]
   14002295b:	rex
   14002295c:	rex push rbp
   14002295e:	rex.RB
   14002295f:	rex.X
   140022960:	push   r8
   140022962:	rex.RB
   140022963:	rex.X push rbp
   140022965:	push   rcx
   140022966:	rex.WRB
   140022967:	gs je  0x1400229cb
   14002296a:	rex.WRXB (bad) 
   14002296c:	push   0x65
   14002296e:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140022972:	pop    rax
   140022973:	pop    rdx
   140022974:	add    BYTE PTR [rax],al
   140022976:	cmp    edx,DWORD PTR [rdi+rdi*1]
   140022979:	jno    0x1400229ef
   14002297b:	pop    rdi
   14002297c:	ins    DWORD PTR es:[rdi],dx
   14002297d:	gs je  0x1400229e1
   140022980:	movsxd esp,DWORD PTR [rcx+0x73]
   140022983:	je     0x1400229c5
   140022985:	push   rcx
   140022986:	push   rsp
   140022987:	outs   dx,DWORD PTR ds:[rsi]
   140022988:	outs   dx,DWORD PTR ds:[rsi]
   140022989:	ins    BYTE PTR es:[rdi],dx
   14002298a:	rex.X jne 0x140022a01
   14002298d:	je     0x1400229fe
   14002298f:	outs   dx,BYTE PTR ds:[rsi]
   140022990:	rex
   140022991:	rex push rbp
   140022993:	rex.RB
   140022994:	rex.B
   140022995:	push   r8
   140022997:	rex.RB
   140022998:	pop    r8
   14002299a:	push   rax
   14002299b:	rex.RB
   14002299c:	rex.X
   14002299d:	rex.R
   14002299e:	rex pop rdx
   1400229a0:	add    BYTE PTR [rax],al
   1400229a2:	mov    cl,0x13
   1400229a4:	(bad)  
   1400229a5:	jno    0x140022a1b
   1400229a7:	pop    rdi
   1400229a8:	ins    DWORD PTR es:[rdi],dx
   1400229a9:	gs je  0x140022a0d
   1400229ac:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400229af:	ins    BYTE PTR es:[rdi],dx
   1400229b0:	rex push rcx
   1400229b2:	push   rsp
   1400229b3:	outs   dx,DWORD PTR ds:[rsi]
   1400229b4:	outs   dx,DWORD PTR ds:[rsi]
   1400229b5:	ins    BYTE PTR es:[rdi],dx
   1400229b6:	rex.X jne 0x140022a2d
   1400229b9:	je     0x140022a2a
   1400229bb:	outs   dx,BYTE PTR ds:[rsi]
   1400229bc:	rex
   1400229bd:	rex push rbp
   1400229bf:	rex.RB
   1400229c0:	rex.B
   1400229c1:	rex.B
   1400229c2:	rex.W push rdi
   1400229c4:	xor    al,0x43
   1400229c6:	(bad)  
   1400229c7:	ins    BYTE PTR es:[rdi],dx
   1400229c8:	ins    BYTE PTR es:[rdi],dx
   1400229c9:	rex push rcx
   1400229cb:	rex.WRB
   1400229cc:	gs je  0x140022a30
   1400229cf:	rex.WRXB (bad) 
   1400229d1:	push   0x65
   1400229d3:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400229d7:	rex.W push rax
   1400229d9:	rex.RB
   1400229da:	push   r8
   1400229dc:	rex.RB
   1400229dd:	pop    r8
   1400229df:	rex pop rdx
   1400229e1:	add    cl,bh
   1400229e3:	or     bh,BYTE PTR [rdi]
   1400229e5:	gs jbe 0x140022a4d
   1400229e8:	outs   dx,BYTE PTR ds:[rsi]
   1400229e9:	je     0x140022a2b
   1400229eb:	push   rcx
   1400229ec:	push   rsp
   1400229ed:	outs   dx,DWORD PTR ds:[rsi]
   1400229ee:	outs   dx,DWORD PTR ds:[rsi]
   1400229ef:	ins    BYTE PTR es:[rdi],dx
   1400229f0:	rex.X jne 0x140022a67
   1400229f3:	je     0x140022a64
   1400229f5:	outs   dx,BYTE PTR ds:[rsi]
   1400229f6:	rex
   1400229f7:	rex
   1400229f8:	rex.WRB
   1400229f9:	rex.RB
   1400229fa:	rex.B
   1400229fb:	pop    r15
   1400229fd:	rex.WRX push rax
   1400229ff:	rex.RB
   140022a00:	push   r14
   140022a02:	push   rcx
   140022a03:	rex.RB jbe 0x140022a6b
   140022a06:	outs   dx,BYTE PTR ds:[rsi]
   140022a07:	je     0x140022a49
   140022a09:	rex
   140022a0a:	rex pop rdx
   140022a0c:	add    BYTE PTR [rax],al
   140022a0e:	movabs ds:0x4572656d69743f1e,eax
   140022a17:	jbe    0x140022a7e
   140022a19:	outs   dx,BYTE PTR ds:[rsi]
   140022a1a:	je     0x140022a5c
   140022a1c:	push   rcx
   140022a1d:	push   rsp
   140022a1e:	outs   dx,DWORD PTR ds:[rsi]
   140022a1f:	outs   dx,DWORD PTR ds:[rsi]
   140022a20:	ins    BYTE PTR es:[rdi],dx
   140022a21:	rex.X jne 0x140022a98
   140022a24:	je     0x140022a95
   140022a26:	outs   dx,BYTE PTR ds:[rsi]
   140022a27:	rex
   140022a28:	rex
   140022a29:	rex.WRB
   140022a2a:	rex.RB
   140022a2b:	rex.B
   140022a2c:	pop    r8
   140022a2e:	push   rax
   140022a2f:	rex.RB
   140022a30:	push   r14
   140022a32:	push   rcx
   140022a33:	push   rsp
   140022a34:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   140022a3b:	outs   dx,BYTE PTR ds:[rsi]
   140022a3c:	je     0x140022a7e
   140022a3e:	rex
   140022a3f:	rex pop rdx
   140022a41:	add    cl,al
   140022a43:	sbb    al,0x3f
   140022a45:	jae    0x140022ab0
   140022a47:	jp     0x140022aae
   140022a49:	imul   rbp,QWORD PTR [rsi+0x74],0x6f545140
   140022a51:	outs   dx,DWORD PTR ds:[rsi]
   140022a52:	ins    BYTE PTR es:[rdi],dx
   140022a53:	rex.X jne 0x140022aca
   140022a56:	je     0x140022ac7
   140022a58:	outs   dx,BYTE PTR ds:[rsi]
   140022a59:	rex
   140022a5a:	rex push rbp
   140022a5c:	rex.RB
   140022a5d:	rex.X
   140022a5e:	rex.B (bad) 
   140022a60:	push   r14
   140022a62:	push   rcx
   140022a63:	push   rbx
   140022a64:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140022a6b:	add    BYTE PTR [rcx],bl
   140022a6d:	adc    DWORD PTR [rdi],edi
   140022a6f:	ins    DWORD PTR es:[rdi],dx
   140022a70:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140022a77:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140022a7e:	rex push rcx
   140022a80:	push   rsp
   140022a81:	outs   dx,DWORD PTR ds:[rsi]
   140022a82:	outs   dx,DWORD PTR ds:[rsi]
   140022a83:	ins    BYTE PTR es:[rdi],dx
   140022a84:	rex.X jne 0x140022afb
   140022a87:	je     0x140022af8
   140022a89:	outs   dx,BYTE PTR ds:[rsi]
   140022a8a:	rex
   140022a8b:	rex push rbp
   140022a8d:	rex.RB
   140022a8e:	rex.X
   140022a8f:	rex.B (bad) 
   140022a91:	push   r14
   140022a93:	push   rcx
   140022a94:	push   rbx
   140022a95:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140022a9c:	add    BYTE PTR [rax],al
   140022a9e:	test   BYTE PTR [rcx],dl
   140022aa0:	(bad)  
   140022aa1:	ins    DWORD PTR es:[rdi],dx
   140022aa2:	outs   dx,DWORD PTR ds:[rsi]
   140022aa3:	jne    0x140022b18
   140022aa5:	gs push rax
   140022aa7:	jb     0x140022b0e
   140022aa9:	jae    0x140022b1e
   140022aab:	rex.RB jbe 0x140022b13
   140022aae:	outs   dx,BYTE PTR ds:[rsi]
   140022aaf:	je     0x140022af1
   140022ab1:	push   rcx
   140022ab2:	push   rsp
   140022ab3:	outs   dx,DWORD PTR ds:[rsi]
   140022ab4:	outs   dx,DWORD PTR ds:[rsi]
   140022ab5:	ins    BYTE PTR es:[rdi],dx
   140022ab6:	rex.X jne 0x140022b2d
   140022ab9:	je     0x140022b2a
   140022abb:	outs   dx,BYTE PTR ds:[rsi]
   140022abc:	rex
   140022abd:	rex
   140022abe:	rex.WRB
   140022abf:	rex.RB
   140022ac0:	rex.B
   140022ac1:	pop    r8
   140022ac3:	push   rax
   140022ac4:	rex.RB
   140022ac5:	push   r14
   140022ac7:	push   rcx
   140022ac8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140022aca:	jne    0x140022b3f
   140022acc:	gs rex.RB jbe 0x140022b35
   140022ad0:	outs   dx,BYTE PTR ds:[rsi]
   140022ad1:	je     0x140022b13
   140022ad3:	rex
   140022ad4:	rex pop rdx
   140022ad6:	add    BYTE PTR [rax],al
   140022ad8:	movabs ds:0x526573756f6d3f11,al
   140022ae1:	gs ins BYTE PTR es:[rdi],dx
   140022ae3:	gs (bad) 
   140022ae5:	jae    0x140022b4c
   140022ae7:	rex.RB jbe 0x140022b4f
   140022aea:	outs   dx,BYTE PTR ds:[rsi]
   140022aeb:	je     0x140022b2d
   140022aed:	push   rcx
   140022aee:	push   rsp
   140022aef:	outs   dx,DWORD PTR ds:[rsi]
   140022af0:	outs   dx,DWORD PTR ds:[rsi]
   140022af1:	ins    BYTE PTR es:[rdi],dx
   140022af2:	rex.X jne 0x140022b69
   140022af5:	je     0x140022b66
   140022af7:	outs   dx,BYTE PTR ds:[rsi]
   140022af8:	rex
   140022af9:	rex
   140022afa:	rex.WRB
   140022afb:	rex.RB
   140022afc:	rex.B
   140022afd:	pop    r8
   140022aff:	push   rax
   140022b00:	rex.RB
   140022b01:	push   r14
   140022b03:	push   rcx
   140022b04:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140022b06:	jne    0x140022b7b
   140022b08:	gs rex.RB jbe 0x140022b71
   140022b0c:	outs   dx,BYTE PTR ds:[rsi]
   140022b0d:	je     0x140022b4f
   140022b0f:	rex
   140022b10:	rex pop rdx
   140022b12:	add    BYTE PTR [rax],al
   140022b14:	rex.RXB adc DWORD PTR [r15],r15d
   140022b17:	ins    DWORD PTR es:[rdi],dx
   140022b18:	outs   dx,DWORD PTR ds:[rsi]
   140022b19:	jne    0x140022b8e
   140022b1b:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140022b1e:	jbe    0x140022b85
   140022b20:	rex.RB jbe 0x140022b88
   140022b23:	outs   dx,BYTE PTR ds:[rsi]
   140022b24:	je     0x140022b66
   140022b26:	push   rcx
   140022b27:	(bad)
   140022b2d:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140022b31:	je     0x140022ba7
   140022b33:	outs   dx,DWORD PTR ds:[rsi]
   140022b34:	outs   dx,BYTE PTR ds:[rsi]
   140022b35:	rex
   140022b36:	rex
   140022b37:	rex.WRB
   140022b38:	rex.RB
   140022b39:	rex.B
   140022b3a:	pop    r8
   140022b3c:	push   rax
   140022b3d:	rex.RB
   140022b3e:	push   r14
   140022b40:	push   rcx
   140022b41:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140022b43:	jne    0x140022bb8
   140022b45:	gs rex.RB jbe 0x140022bae
   140022b49:	outs   dx,BYTE PTR ds:[rsi]
   140022b4a:	je     0x140022b8c
   140022b4c:	rex
   140022b4d:	rex pop rdx
   140022b4f:	add    BYTE PTR [rip+0x656b3f0f],bh        # 0x1a56d6a64
   140022b55:	jns    0x140022ba7
   140022b57:	jb     0x140022bbe
   140022b59:	jae    0x140022bce
   140022b5b:	rex.RB jbe 0x140022bc3
   140022b5e:	outs   dx,BYTE PTR ds:[rsi]
   140022b5f:	je     0x140022ba1
   140022b61:	push   rcx
   140022b62:	(bad)
   140022b68:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140022b6c:	je     0x140022be2
   140022b6e:	outs   dx,DWORD PTR ds:[rsi]
   140022b6f:	outs   dx,BYTE PTR ds:[rsi]
   140022b70:	rex
   140022b71:	rex
   140022b72:	rex.WRB
   140022b73:	rex.RB
   140022b74:	rex.B
   140022b75:	pop    r8
   140022b77:	push   rax
   140022b78:	rex.RB
   140022b79:	push   r14
   140022b7b:	push   rcx
   140022b7c:	rex.WXB
   140022b7d:	gs jns 0x140022bc5
   140022b80:	jbe    0x140022be7
   140022b82:	outs   dx,BYTE PTR ds:[rsi]
   140022b83:	je     0x140022bc5
   140022b85:	rex
   140022b86:	rex pop rdx
   140022b88:	add    BYTE PTR [rax],al
   140022b8a:	pop    rbx
   140022b8b:	(bad)  
   140022b8d:	imul   esp,DWORD PTR [rbp+0x79],0x52
   140022b91:	gs ins BYTE PTR es:[rdi],dx
   140022b93:	gs (bad) 
   140022b95:	jae    0x140022bfc
   140022b97:	rex.RB jbe 0x140022bff
   140022b9a:	outs   dx,BYTE PTR ds:[rsi]
   140022b9b:	je     0x140022bdd
   140022b9d:	push   rcx
   140022b9e:	(bad)
   140022ba4:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140022ba8:	je     0x140022c1e
   140022baa:	outs   dx,DWORD PTR ds:[rsi]
   140022bab:	outs   dx,BYTE PTR ds:[rsi]
   140022bac:	rex
   140022bad:	rex
   140022bae:	rex.WRB
   140022baf:	rex.RB
   140022bb0:	rex.B
   140022bb1:	pop    r8
   140022bb3:	push   rax
   140022bb4:	rex.RB
   140022bb5:	push   r14
   140022bb7:	push   rcx
   140022bb8:	rex.WXB
   140022bb9:	gs jns 0x140022c01
   140022bbc:	jbe    0x140022c23
   140022bbe:	outs   dx,BYTE PTR ds:[rsi]
   140022bbf:	je     0x140022c01
   140022bc1:	rex
   140022bc2:	rex pop rdx
   140022bc4:	add    BYTE PTR [rax],al
   140022bc6:	or     BYTE PTR [rbx],0x3f
   140022bc9:	outs   dx,WORD PTR ds:[rsi]
   140022bcb:	movsxd esi,DWORD PTR [rbp+0x73]
   140022bce:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140022bd0:	rex.RB jbe 0x140022c38
   140022bd3:	outs   dx,BYTE PTR ds:[rsi]
   140022bd4:	je     0x140022c16
   140022bd6:	push   rcx
   140022bd7:	(bad)
   140022bdd:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140022be1:	je     0x140022c57
   140022be3:	outs   dx,DWORD PTR ds:[rsi]
   140022be4:	outs   dx,BYTE PTR ds:[rsi]
   140022be5:	rex
   140022be6:	rex
   140022be7:	rex.WRB
   140022be8:	rex.RB
   140022be9:	rex.B
   140022bea:	pop    r8
   140022bec:	push   rax
   140022bed:	rex.RB
   140022bee:	push   r14
   140022bf0:	push   rcx
   140022bf1:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140022bf3:	movsxd esi,DWORD PTR [rbp+0x73]
   140022bf6:	rex.RB jbe 0x140022c5e
   140022bf9:	outs   dx,BYTE PTR ds:[rsi]
   140022bfa:	je     0x140022c3c
   140022bfc:	rex
   140022bfd:	rex pop rdx
   140022bff:	add    BYTE PTR [rdi+0x6f663f0b],ah
   140022c05:	movsxd esi,DWORD PTR [rbp+0x73]
   140022c08:	rex.WRXB jne 0x140022c7f
   140022c0b:	rex.RB jbe 0x140022c73
   140022c0e:	outs   dx,BYTE PTR ds:[rsi]
   140022c0f:	je     0x140022c51
   140022c11:	push   rcx
   140022c12:	(bad)
   140022c18:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140022c1c:	je     0x140022c92
   140022c1e:	outs   dx,DWORD PTR ds:[rsi]
   140022c1f:	outs   dx,BYTE PTR ds:[rsi]
   140022c20:	rex
   140022c21:	rex
   140022c22:	rex.WRB
   140022c23:	rex.RB
   140022c24:	rex.B
   140022c25:	pop    r8
   140022c27:	push   rax
   140022c28:	rex.RB
   140022c29:	push   r14
   140022c2b:	push   rcx
   140022c2c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140022c2e:	movsxd esi,DWORD PTR [rbp+0x73]
   140022c31:	rex.RB jbe 0x140022c99
   140022c34:	outs   dx,BYTE PTR ds:[rsi]
   140022c35:	je     0x140022c77
   140022c37:	rex
   140022c38:	rex pop rdx
   140022c3a:	add    BYTE PTR [rax],al
   140022c3c:	mov    bl,0xa
   140022c3e:	(bad)  
   140022c3f:	outs   dx,BYTE PTR gs:[rsi]
   140022c41:	je     0x140022ca8
   140022c43:	jb     0x140022c8a
   140022c45:	jbe    0x140022cac
   140022c47:	outs   dx,BYTE PTR ds:[rsi]
   140022c48:	je     0x140022c8a
   140022c4a:	push   rcx
   140022c4b:	push   rsp
   140022c4c:	outs   dx,DWORD PTR ds:[rsi]
   140022c4d:	outs   dx,DWORD PTR ds:[rsi]
   140022c4e:	ins    BYTE PTR es:[rdi],dx
   140022c4f:	rex.X jne 0x140022cc6
   140022c52:	je     0x140022cc3
   140022c54:	outs   dx,BYTE PTR ds:[rsi]
   140022c55:	rex
   140022c56:	rex
   140022c57:	rex.WRB
   140022c58:	rex.RB
   140022c59:	rex.B
   140022c5a:	pop    r8
   140022c5c:	push   rax
   140022c5d:	rex.RB
   140022c5e:	push   r14
   140022c60:	push   rcx
   140022c61:	rex.RB jbe 0x140022cc9
   140022c64:	outs   dx,BYTE PTR ds:[rsi]
   140022c65:	je     0x140022ca7
   140022c67:	rex
   140022c68:	rex pop rdx
   140022c6a:	add    BYTE PTR [rax],al
   140022c6c:	cwde   
   140022c6d:	(bad)  
   140022c6f:	ins    BYTE PTR es:[rdi],dx
   140022c70:	gs (bad) 
   140022c72:	jbe    0x140022cd9
   140022c74:	rex.RB jbe 0x140022cdc
   140022c77:	outs   dx,BYTE PTR ds:[rsi]
   140022c78:	je     0x140022cba
   140022c7a:	push   rcx
   140022c7b:	push   rsp
   140022c7c:	outs   dx,DWORD PTR ds:[rsi]
   140022c7d:	outs   dx,DWORD PTR ds:[rsi]
   140022c7e:	ins    BYTE PTR es:[rdi],dx
   140022c7f:	rex.X jne 0x140022cf6
   140022c82:	je     0x140022cf3
   140022c84:	outs   dx,BYTE PTR ds:[rsi]
   140022c85:	rex
   140022c86:	rex
   140022c87:	rex.WRB
   140022c88:	rex.RB
   140022c89:	rex.B
   140022c8a:	pop    r8
   140022c8c:	push   rax
   140022c8d:	rex.RB
   140022c8e:	push   r14
   140022c90:	push   rcx
   140022c91:	rex.RB jbe 0x140022cf9
   140022c94:	outs   dx,BYTE PTR ds:[rsi]
   140022c95:	je     0x140022cd7
   140022c97:	rex
   140022c98:	rex pop rdx
   140022c9a:	add    BYTE PTR [rax],al
   140022c9c:	jbe    0x140022cb0
   140022c9e:	(bad)  
   140022c9f:	jo     0x140022d02
   140022ca1:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140022ca8:	je     0x140022cea
   140022caa:	push   rcx
   140022cab:	push   rsp
   140022cac:	outs   dx,DWORD PTR ds:[rsi]
   140022cad:	outs   dx,DWORD PTR ds:[rsi]
   140022cae:	ins    BYTE PTR es:[rdi],dx
   140022caf:	rex.X jne 0x140022d26
   140022cb2:	je     0x140022d23
   140022cb4:	outs   dx,BYTE PTR ds:[rsi]
   140022cb5:	rex
   140022cb6:	rex
   140022cb7:	rex.WRB
   140022cb8:	rex.RB
   140022cb9:	rex.B
   140022cba:	pop    r8
   140022cbc:	push   rax
   140022cbd:	rex.RB
   140022cbe:	push   r14
   140022cc0:	push   rcx
   140022cc1:	push   rax
   140022cc2:	(bad)  
   140022cc3:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140022cca:	je     0x140022d0c
   140022ccc:	rex
   140022ccd:	rex pop rdx
   140022ccf:	add    BYTE PTR [rdx+0x6f633f07],dl
   140022cd5:	outs   dx,BYTE PTR ds:[rsi]
   140022cd6:	je     0x140022d3d
   140022cd8:	js     0x140022d4e
   140022cda:	rex.WRB
   140022cdb:	outs   dx,BYTE PTR gs:[rsi]
   140022cdd:	jne    0x140022d24
   140022cdf:	jbe    0x140022d46
   140022ce1:	outs   dx,BYTE PTR ds:[rsi]
   140022ce2:	je     0x140022d24
   140022ce4:	push   rcx
   140022ce5:	push   rdi
   140022ce6:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140022cee:	rex.RB
   140022cef:	rex.B
   140022cf0:	pop    r8
   140022cf2:	push   rax
   140022cf3:	rex.RB
   140022cf4:	push   r14
   140022cf6:	push   rcx
   140022cf7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140022cf9:	outs   dx,BYTE PTR ds:[rsi]
   140022cfa:	je     0x140022d61
   140022cfc:	js     0x140022d72
   140022cfe:	rex.WRB
   140022cff:	outs   dx,BYTE PTR gs:[rsi]
   140022d01:	jne    0x140022d48
   140022d03:	jbe    0x140022d6a
   140022d05:	outs   dx,BYTE PTR ds:[rsi]
   140022d06:	je     0x140022d48
   140022d08:	rex
   140022d09:	rex pop rdx
   140022d0b:	add    dl,dl
   140022d0d:	add    al,0x3f
   140022d0f:	(bad)  
   140022d10:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140022d14:	outs   dx,BYTE PTR ds:[rsi]
   140022d15:	rex.RB jbe 0x140022d7d
   140022d18:	outs   dx,BYTE PTR ds:[rsi]
   140022d19:	je     0x140022d5b
   140022d1b:	push   rcx
   140022d1c:	push   rsp
   140022d1d:	outs   dx,DWORD PTR ds:[rsi]
   140022d1e:	outs   dx,DWORD PTR ds:[rsi]
   140022d1f:	ins    BYTE PTR es:[rdi],dx
   140022d20:	rex.X jne 0x140022d97
   140022d23:	je     0x140022d94
   140022d25:	outs   dx,BYTE PTR ds:[rsi]
   140022d26:	rex
   140022d27:	rex
   140022d28:	rex.WRB
   140022d29:	rex.RB
   140022d2a:	rex.B
   140022d2b:	pop    r8
   140022d2d:	push   rax
   140022d2e:	rex.RB
   140022d2f:	push   r14
   140022d31:	push   rcx
   140022d32:	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
   140022d37:	outs   dx,BYTE PTR ds:[rsi]
   140022d38:	rex.RB jbe 0x140022da0
   140022d3b:	outs   dx,BYTE PTR ds:[rsi]
   140022d3c:	je     0x140022d7e
   140022d3e:	rex
   140022d3f:	rex pop rdx
   140022d41:	add    BYTE PTR [rbx+0x68633f06],cl
   140022d47:	(bad)  
   140022d48:	outs   dx,BYTE PTR ds:[rsi]
   140022d49:	addr32 gs rex.RB jbe 0x140022db3
   140022d4e:	outs   dx,BYTE PTR ds:[rsi]
   140022d4f:	je     0x140022d91
   140022d51:	push   rcx
   140022d52:	push   rsp
   140022d53:	outs   dx,DWORD PTR ds:[rsi]
   140022d54:	outs   dx,DWORD PTR ds:[rsi]
   140022d55:	ins    BYTE PTR es:[rdi],dx
   140022d56:	rex.X jne 0x140022dcd
   140022d59:	je     0x140022dca
   140022d5b:	outs   dx,BYTE PTR ds:[rsi]
   140022d5c:	rex
   140022d5d:	rex
   140022d5e:	rex.WRB
   140022d5f:	rex.RB
   140022d60:	rex.B
   140022d61:	pop    r8
   140022d63:	push   rax
   140022d64:	rex.RB
   140022d65:	push   r14
   140022d67:	push   rcx
   140022d68:	rex.RB jbe 0x140022dd0
   140022d6b:	outs   dx,BYTE PTR ds:[rsi]
   140022d6c:	je     0x140022dae
   140022d6e:	rex
   140022d6f:	rex pop rdx
   140022d71:	add    BYTE PTR [rbp+0x69683f0c],bh
   140022d77:	je     0x140022dbb
   140022d79:	jne    0x140022def
   140022d7b:	je     0x140022dec
   140022d7d:	outs   dx,BYTE PTR ds:[rsi]
   140022d7e:	rex push rcx
   140022d80:	push   rsp
   140022d81:	outs   dx,DWORD PTR ds:[rsi]
   140022d82:	outs   dx,DWORD PTR ds:[rsi]
   140022d83:	ins    BYTE PTR es:[rdi],dx
   140022d84:	rex.X jne 0x140022dfb
   140022d87:	je     0x140022df8
   140022d89:	outs   dx,BYTE PTR ds:[rsi]
   140022d8a:	rex
   140022d8b:	rex
   140022d8c:	rex.WRB
   140022d8d:	rex.RB
   140022d8e:	rex.X
   140022d8f:	pop    r15
   140022d91:	rex.WRX
   140022d92:	rex.B
   140022d93:	rex.RB
   140022d94:	rex.X push rsi
   140022d96:	push   rcx
   140022d97:	push   rax
   140022d98:	outs   dx,DWORD PTR ds:[rsi]
   140022d99:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   140022da0:	add    BYTE PTR [rax],al
   140022da2:	cdq    
   140022da3:	(bad)  
   140022da4:	(bad)  
   140022da5:	movsxd ebp,DWORD PTR [rax+0x65]
   140022da8:	movsxd ebp,DWORD PTR [rbx+0x53]
   140022dab:	je     0x140022e0e
   140022dad:	je     0x140022e14
   140022daf:	push   rbx
   140022db0:	gs je  0x140022df3
   140022db3:	push   rcx
   140022db4:	(bad)
   140022dba:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140022dbe:	je     0x140022e34
   140022dc0:	outs   dx,DWORD PTR ds:[rsi]
   140022dc1:	outs   dx,BYTE PTR ds:[rsi]
   140022dc2:	rex
   140022dc3:	rex
   140022dc4:	rex.WRB
   140022dc5:	rex.RB
   140022dc6:	rex.B
   140022dc7:	pop    r8
   140022dc9:	pop    rax
   140022dca:	pop    rdx
   140022dcb:	add    dh,dl
   140022dcd:	adc    DWORD PTR [rdi],edi
   140022dcf:	outs   dx,BYTE PTR ds:[rsi]
   140022dd0:	gs js  0x140022e47
   140022dd3:	rex.XB push 0x536b6365
   140022dd9:	je     0x140022e3c
   140022ddb:	je     0x140022e42
   140022ddd:	rex push rcx
   140022ddf:	push   rsp
   140022de0:	outs   dx,DWORD PTR ds:[rsi]
   140022de1:	outs   dx,DWORD PTR ds:[rsi]
   140022de2:	ins    BYTE PTR es:[rdi],dx
   140022de3:	rex.X jne 0x140022e5a
   140022de6:	je     0x140022e57
   140022de8:	outs   dx,BYTE PTR ds:[rsi]
   140022de9:	rex
   140022dea:	rex
   140022deb:	rex.WRB
   140022dec:	rex.RB
   140022ded:	rex.B
   140022dee:	pop    r8
   140022df0:	pop    rax
   140022df1:	pop    rdx
   140022df2:	add    BYTE PTR [rax],al
   140022df4:	xor    al,0x2
   140022df6:	(bad)  
   140022df7:	(bad)  
   140022df8:	xor    DWORD PTR [rcx+0x53],edx
   140022dfb:	jo     0x140022e5e
   140022dfd:	movsxd esp,DWORD PTR [rbp+0x72]
   140022e00:	rex.WB je 0x140022e68
   140022e03:	ins    DWORD PTR es:[rdi],dx
   140022e04:	rex
   140022e05:	rex push rbp
   140022e07:	rex.RB
   140022e08:	rex.B
   140022e09:	rex.B
   140022e0a:	rex pop rax
   140022e0c:	pop    rdx
   140022e0d:	add    BYTE PTR [rbx],al
   140022e0f:	add    bh,BYTE PTR [rdi]
   140022e11:	(bad)  
   140022e12:	xor    DWORD PTR [rcx+0x47],edx
   140022e15:	jb     0x140022e80
   140022e17:	fs rex.WR (bad) 
   140022e1a:	jns    0x140022e8b
   140022e1c:	jne    0x140022e92
   140022e1e:	rex
   140022e1f:	rex push rbp
   140022e21:	rex.RB
   140022e22:	rex.B
   140022e23:	rex.B
   140022e24:	rex pop rax
   140022e26:	pop    rdx
   140022e27:	add    BYTE PTR [rsi],cl
   140022e29:	add    bh,BYTE PTR [rdi]
   140022e2b:	(bad)  
   140022e2c:	xor    DWORD PTR [rcx+0x4c],edx
   140022e2f:	(bad)  
   140022e30:	(bad)  
   140022e31:	gs ins BYTE PTR es:[rdi],dx
   140022e33:	rex
   140022e34:	rex push rbp
   140022e36:	rex.RB
   140022e37:	rex.B
   140022e38:	rex.B
   140022e39:	rex pop rax
   140022e3b:	pop    rdx
   140022e3c:	add    BYTE PTR [rax],al
   140022e3e:	add    eax,0x313f3f02
   140022e43:	push   rcx
   140022e44:	rex.W
   140022e45:	rex.X outs dx,DWORD PTR ds:[rsi]
   140022e47:	js     0x140022e95
   140022e49:	(bad)  
   140022e4a:	jns    0x140022ebb
   140022e4c:	jne    0x140022ec2
   140022e4e:	rex
   140022e4f:	rex push rbp
   140022e51:	rex.RB
   140022e52:	rex.B
   140022e53:	rex.B
   140022e54:	rex pop rax
   140022e56:	pop    rdx
   140022e57:	add    BYTE PTR [rdx],dl
   140022e59:	add    bh,BYTE PTR [rdi]
   140022e5b:	(bad)  
   140022e5c:	xor    DWORD PTR [rcx+0x4c],edx
   140022e5f:	imul   ebp,DWORD PTR [rsi+0x65],0x74696445
   140022e66:	rex
   140022e67:	rex push rbp
   140022e69:	rex.RB
   140022e6a:	rex.B
   140022e6b:	rex.B
   140022e6c:	rex pop rax
   140022e6e:	pop    rdx
   140022e6f:	add    BYTE PTR [rcx+0x2],ch
   140022e72:	(bad)  
   140022e73:	(bad)  
   140022e74:	xor    DWORD PTR [rcx+0x54],edx
   140022e77:	outs   dx,DWORD PTR ds:[rsi]
   140022e78:	outs   dx,DWORD PTR ds:[rsi]
   140022e79:	ins    BYTE PTR es:[rdi],dx
   140022e7a:	rex.X jne 0x140022ef1
   140022e7d:	je     0x140022eee
   140022e7f:	outs   dx,BYTE PTR ds:[rsi]
   140022e80:	rex
   140022e81:	rex push rbp
   140022e83:	rex.RB
   140022e84:	rex.B
   140022e85:	rex.B
   140022e86:	rex pop rax
   140022e88:	pop    rdx
   140022e89:	add    BYTE PTR [rdx],cl
   140022e8b:	adc    eax,0x6765723f
   140022e90:	imul   esi,DWORD PTR [rbx+0x74],0x69467265
   140022e97:	gs ins BYTE PTR es:[rdi],dx
   140022e99:	fs rex push rcx
   140022e9c:	push   rdi
   140022e9d:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   140022ea4:	addr32 gs rex
   140022ea7:	rex
   140022ea8:	rex.WB
   140022ea9:	rex.RB
   140022eaa:	rex.B
   140022eab:	pop    r8
   140022ead:	rex.B
   140022eae:	rex.RB
   140022eaf:	rex.X push rsi
   140022eb1:	push   rcx
   140022eb2:	push   rbx
   140022eb3:	je     0x140022f27
   140022eb5:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   140022ebc:	push   r14
   140022ebe:	push   rcx
   140022ebf:	push   rdi
   140022ec0:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x50404074
   140022ec8:	rex.RB
   140022ec9:	rex.X
   140022eca:	xor    r8b,BYTE PTR [rax+0x5a]
   140022ece:	add    BYTE PTR [rax],al
   140022ed0:	and    al,0x1b
   140022ed2:	(bad)  
   140022ed3:	jae    0x140022f3a
   140022ed5:	je     0x140022f2a
   140022ed7:	jne    0x140022f3b
   140022ed9:	push   rsp
   140022eda:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x69575140
   140022ee2:	jp     0x140022f45
   140022ee4:	jb     0x140022f4a
   140022ee6:	push   rax
   140022ee7:	(bad)  
   140022ee8:	addr32 gs rex
   140022eeb:	rex push rcx
   140022eed:	rex.RB
   140022eee:	rex.B
   140022eef:	pop    r8
   140022ef1:	rex.B
   140022ef2:	rex.RB
   140022ef3:	rex.X push rsi
   140022ef5:	push   rcx
   140022ef6:	push   rbx
   140022ef7:	je     0x140022f6b
   140022ef9:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140022f00:	add    BYTE PTR [rax],al
   140022f02:	test   DWORD PTR [rbx],ebx
   140022f04:	(bad)  
   140022f05:	jae    0x140022f6c
   140022f07:	je     0x140022f5d
   140022f09:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x69575140
   140022f11:	jp     0x140022f74
   140022f13:	jb     0x140022f79
   140022f15:	push   rax
   140022f16:	(bad)  
   140022f17:	addr32 gs rex
   140022f1a:	rex push rcx
   140022f1c:	rex.RB
   140022f1d:	rex.B
   140022f1e:	pop    r8
   140022f20:	rex.B
   140022f21:	rex.RB
   140022f22:	rex.X push rsi
   140022f24:	push   rcx
   140022f25:	push   rbx
   140022f26:	je     0x140022f9a
   140022f28:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140022f2f:	add    BYTE PTR [rcx+0x303f3f01],ah
   140022f35:	push   rcx
   140022f36:	push   rdi
   140022f37:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   140022f3e:	addr32 gs rex
   140022f41:	rex push rcx
   140022f43:	rex.RB
   140022f44:	rex.B
   140022f45:	rex.B
   140022f46:	rex push rax
   140022f48:	rex.RB
   140022f49:	push   r14
   140022f4b:	push   rcx
   140022f4c:	push   rdi
   140022f4d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140022f55:	pop    rdx
   140022f56:	add    BYTE PTR [rax],al
   140022f58:	sti    
   140022f59:	or     bh,BYTE PTR [rdi]
   140022f5b:	gs jbe 0x140022fc3
   140022f5e:	outs   dx,BYTE PTR ds:[rsi]
   140022f5f:	je     0x140022fa1
   140022f61:	push   rcx
   140022f62:	push   rdi
   140022f63:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140022f6b:	rex.RB
   140022f6c:	rex.B
   140022f6d:	pop    r15
   140022f6f:	rex.WRX push rax
   140022f71:	rex.RB
   140022f72:	push   r14
   140022f74:	push   rcx
   140022f75:	rex.RB jbe 0x140022fdd
   140022f78:	outs   dx,BYTE PTR ds:[rsi]
   140022f79:	je     0x140022fbb
   140022f7b:	rex
   140022f7c:	rex pop rdx
   140022f7e:	add    BYTE PTR [rax],al
   140022f80:	ret    
   140022f81:	sbb    al,0x3f
   140022f83:	jae    0x140022fee
   140022f85:	jp     0x140022fec
   140022f87:	imul   rbp,QWORD PTR [rsi+0x74],0x69575140
   140022f8f:	fs addr32 gs je 0x140022fd4
   140022f94:	rex push rbp
   140022f96:	rex.RB
   140022f97:	rex.X
   140022f98:	rex.B (bad) 
   140022f9a:	push   r14
   140022f9c:	push   rcx
   140022f9d:	push   rbx
   140022f9e:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140022fa5:	add    BYTE PTR [rdx],bl
   140022fa7:	adc    DWORD PTR [rdi],edi
   140022fa9:	ins    DWORD PTR es:[rdi],dx
   140022faa:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140022fb1:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140022fb8:	rex push rcx
   140022fba:	push   rdi
   140022fbb:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140022fc3:	rex.RB
   140022fc4:	rex.X
   140022fc5:	rex.B (bad) 
   140022fc7:	push   r14
   140022fc9:	push   rcx
   140022fca:	push   rbx
   140022fcb:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140022fd2:	add    BYTE PTR [rax],al
   140022fd4:	pop    rcx
   140022fd5:	(bad)  
   140022fd7:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140022fdb:	jb     0x140023042
   140022fdd:	jae    0x140023052
   140022fdf:	rex.RB jbe 0x140023047
   140022fe2:	outs   dx,BYTE PTR ds:[rsi]
   140022fe3:	je     0x140023025
   140022fe5:	push   rcx
   140022fe6:	push   rdi
   140022fe7:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140022fef:	rex.RB
   140022ff0:	rex.B
   140022ff1:	pop    r8
   140022ff3:	push   rax
   140022ff4:	rex.RB
   140022ff5:	push   r14
   140022ff7:	push   rcx
   140022ff8:	rex.WXB
   140022ff9:	gs jns 0x140023041
   140022ffc:	jbe    0x140023063
   140022ffe:	outs   dx,BYTE PTR ds:[rsi]
   140022fff:	je     0x140023041
   140023001:	rex
   140023002:	rex pop rdx
   140023004:	add    BYTE PTR [rax],al
   140023006:	js     0x14002301a
   140023008:	(bad)  
   140023009:	jo     0x14002306c
   14002300b:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140023012:	je     0x140023054
   140023014:	push   rcx
   140023015:	push   rdi
   140023016:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14002301e:	rex.RB
   14002301f:	rex.B
   140023020:	pop    r8
   140023022:	push   rax
   140023023:	rex.RB
   140023024:	push   r14
   140023026:	push   rcx
   140023027:	push   rax
   140023028:	(bad)  
   140023029:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140023030:	je     0x140023072
   140023032:	rex
   140023033:	rex pop rdx
   140023035:	add    BYTE PTR [rdi+0xd],ah
   140023038:	(bad)  
   140023039:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140023040:	imul   edi,DWORD PTR [rdx+0x65],0x65676150
   140023047:	rex push rcx
   140023049:	push   rdi
   14002304a:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   140023051:	addr32 gs rex
   140023054:	rex push rbp
   140023056:	rex.RB
   140023057:	rex.B
   140023058:	pop    r8
   14002305a:	pop    rax
   14002305b:	pop    rdx
   14002305c:	add    BYTE PTR [rax],al
   14002305e:	leave  
   14002305f:	(bad)  
   140023060:	(bad)  
   140023061:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   140023065:	outs   dx,BYTE PTR ds:[rsi]
   140023066:	jne    0x1400230d8
   140023068:	push   rax
   140023069:	(bad)  
   14002306a:	addr32 gs rex push rcx
   14002306e:	push   rdi
   14002306f:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   140023076:	addr32 gs rex
   140023079:	rex push rbp
   14002307b:	rex.RB
   14002307c:	rex.B
   14002307d:	pop    r8
   14002307f:	pop    rax
   140023080:	pop    rdx
   140023081:	add    BYTE PTR [rsi+rcx*1],ah
   140023084:	(bad)  
   140023085:	imul   esi,DWORD PTR [rbx+0x43],0x6c706d6f
   14002308c:	gs je  0x1400230f4
   14002308f:	rex push rcx
   140023091:	push   rdi
   140023092:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   140023099:	addr32 gs rex
   14002309c:	rex push rbp
   14002309e:	rex.RB
   14002309f:	rex.X
   1400230a0:	pop    r15
   1400230a2:	rex.WRX pop rax
   1400230a4:	pop    rdx
   1400230a5:	add    al,bl
   1400230a7:	adc    DWORD PTR [rdi],edi
   1400230a9:	outs   dx,BYTE PTR ds:[rsi]
   1400230aa:	gs js  0x140023121
   1400230ad:	rex.WB
   1400230ae:	fs rex push rcx
   1400230b1:	push   rdi
   1400230b2:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   1400230b9:	addr32 gs rex
   1400230bc:	rex push rbp
   1400230be:	rex.RB
   1400230bf:	rex.X
   1400230c0:	rex.B
   1400230c1:	rex.W pop rax
   1400230c3:	pop    rdx
   1400230c4:	add    BYTE PTR [rax],al
   1400230c6:	jle    0x1400230ca
   1400230c8:	(bad)  
   1400230c9:	(bad)  
   1400230ca:	xor    DWORD PTR [rcx+0x57],edx
   1400230cd:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   1400230d4:	addr32 gs rex
   1400230d7:	rex push rbp
   1400230d9:	rex.RB
   1400230da:	rex.B
   1400230db:	rex.B
   1400230dc:	rex pop rax
   1400230de:	pop    rdx
   1400230df:	add    BYTE PTR [rbp+0x1b],dl
   1400230e2:	(bad)  
   1400230e3:	jae    0x14002314a
   1400230e5:	je     0x14002313b
   1400230e7:	gs js  0x14002315e
   1400230ea:	rex push rcx
   1400230ec:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   1400230f4:	rex
   1400230f5:	rex push rcx
   1400230f7:	rex.RB
   1400230f8:	rex.B
   1400230f9:	pop    r8
   1400230fb:	rex.B
   1400230fc:	rex.RB
   1400230fd:	rex.X push rsi
   1400230ff:	push   rcx
   140023100:	push   rbx
   140023101:	je     0x140023175
   140023103:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14002310a:	add    BYTE PTR [rax],al
   14002310c:	and    BYTE PTR [rdi+rdi*1],cl
   14002310f:	addr32 gs je 0x140023162
   140023113:	jo     0x14002317a
   140023115:	outs   dx,BYTE PTR ds:[rsi]
   140023116:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x40656d61
   14002311f:	push   rcx
   140023120:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x6f6c6169
   140023129:	addr32 rex
   14002312b:	rex push rbx
   14002312d:	rex.B (bad) 
   14002312f:	push   r14
   140023131:	push   rcx
   140023132:	push   rbx
   140023133:	je     0x1400231a7
   140023135:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14002313c:	push   r14
   14002313e:	push   rcx
   14002313f:	push   rdi
   140023140:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x41404074
   140023148:	rex.RB
   140023149:	rex.X push rsi
   14002314b:	xor    al,BYTE PTR [rax+0x31]
   14002314e:	xor    DWORD PTR [rax+0x45],edx
   140023151:	push   r14
   140023153:	xor    al,BYTE PTR [rax+0x56]
   140023156:	(bad)  
   140023157:	and    al,0x51
   140023159:	rex.RX ins BYTE PTR es:[rdi],dx
   14002315b:	(bad)  
   14002315c:	addr32 jae 0x14002319f
   14002315f:	push   rdi
   140023160:	xor    al,0x4f
   140023162:	jo     0x1400231d8
   140023164:	imul   ebp,DWORD PTR [rdi+0x6e],0x69465140
   14002316b:	ins    BYTE PTR es:[rdi],dx
   14002316c:	imul   r12d,DWORD PTR gs:[rcx+0x6c],0x4040676f
   140023175:	rex
   140023176:	rex
   140023177:	rex pop rdx
   140023179:	add    bl,ah
   14002317b:	(bad)  
   14002317c:	(bad)  
   14002317d:	movsxd esi,DWORD PTR [rdx+0x69]
   140023180:	je     0x1400231eb
   140023182:	movsxd esp,DWORD PTR [rcx+0x6c]
   140023185:	rex push rcx
   140023187:	rex.WRB
   140023188:	gs jae 0x1400231fe
   14002318b:	(bad)  
   14002318c:	rex.X outs dx,DWORD PTR gs:[esi]
   140023190:	js     0x1400231d2
   140023192:	rex push rbx
   140023194:	rex.B (bad) 
   140023196:	push   r15
   140023198:	xor    al,0x53
   14002319a:	je     0x1400231fd
   14002319c:	outs   dx,BYTE PTR ds:[rsi]
   14002319d:	fs (bad) 
   14002319f:	jb     0x140023205
   1400231a1:	rex.X jne 0x140023218
   1400231a4:	je     0x140023215
   1400231a6:	outs   dx,BYTE PTR ds:[rsi]
   1400231a7:	rex xor DWORD PTR [rax+0x50],eax
   1400231ab:	rex.RB
   1400231ac:	push   r14
   1400231ae:	push   rcx
   1400231af:	push   rdi
   1400231b0:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x41404074
   1400231b8:	rex.RB
   1400231b9:	rex.X push rsi
   1400231bb:	push   rcx
   1400231bc:	push   rbx
   1400231bd:	je     0x140023231
   1400231bf:	imul   ebp,DWORD PTR [rsi+0x67],0x56314040
   1400231c6:	(bad)  
   1400231c7:	and    al,0x51
   1400231c9:	rex.RX ins BYTE PTR es:[rdi],dx
   1400231cb:	(bad)  
   1400231cc:	addr32 jae 0x14002320f
   1400231cf:	push   rdi
   1400231d0:	xor    al,0x53
   1400231d2:	je     0x140023235
   1400231d4:	outs   dx,BYTE PTR ds:[rsi]
   1400231d5:	fs (bad) 
   1400231d7:	jb     0x14002323d
   1400231d9:	rex.X jne 0x140023250
   1400231dc:	je     0x14002324d
   1400231de:	outs   dx,BYTE PTR ds:[rsi]
   1400231df:	rex push rcx
   1400231e1:	rex.WRB
   1400231e2:	gs jae 0x140023258
   1400231e5:	(bad)  
   1400231e6:	rex.X outs dx,DWORD PTR gs:[esi]
   1400231ea:	js     0x14002322c
   1400231ec:	rex
   1400231ed:	rex
   1400231ee:	rex push rdi
   1400231f0:	xor    al,0x32
   1400231f2:	xor    DWORD PTR [rax+0x40],eax
   1400231f5:	pop    rdx
   1400231f6:	add    BYTE PTR [rax],al
   1400231f8:	push   rbp
   1400231f9:	(bad)  
   1400231fa:	(bad)  
   1400231fb:	je     0x140023262
   1400231fd:	js     0x140023273
   1400231ff:	rex push rcx
   140023201:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140023209:	rex
   14002320a:	rex push rcx
   14002320c:	rex.RB
   14002320d:	rex.X
   14002320e:	rex.B (bad) 
   140023210:	push   r14
   140023212:	push   rcx
   140023213:	push   rbx
   140023214:	je     0x140023288
   140023216:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002321d:	add    BYTE PTR [rdx+0x1b],bl
   140023220:	(bad)  
   140023221:	jae    0x140023288
   140023223:	je     0x140023279
   140023225:	gs js  0x14002329c
   140023228:	rex push rcx
   14002322a:	push   rsp
   14002322b:	jb     0x140023292
   14002322d:	gs push rdi
   14002322f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140023237:	ins    DWORD PTR es:[rdi],dx
   140023238:	rex
   140023239:	rex push rcx
   14002323b:	rex.RB
   14002323c:	rex.B
   14002323d:	pop    r8
   14002323f:	rex.W
   140023240:	rex.B
   140023241:	rex.RB
   140023242:	rex.X push rsi
   140023244:	push   rcx
   140023245:	push   rbx
   140023246:	je     0x1400232ba
   140023248:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14002324f:	add    BYTE PTR [rax+0xc],bh
   140023252:	(bad)  
   140023253:	push   0x65646165
   140023258:	jb     0x1400232a3
   14002325a:	je     0x1400232c1
   14002325c:	ins    DWORD PTR es:[rdi],dx
   14002325d:	rex push rcx
   14002325f:	push   rsp
   140023260:	jb     0x1400232c7
   140023262:	gs push rdi
   140023264:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   14002326c:	rex.RB
   14002326d:	rex.X
   14002326e:	push   r8
   140023270:	rex.RB
   140023271:	push   r14
   140023273:	push   rcx
   140023274:	push   rsp
   140023275:	jb     0x1400232dc
   140023277:	gs push rdi
   140023279:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140023281:	ins    DWORD PTR es:[rdi],dx
   140023282:	rex
   140023283:	rex pop rax
   140023285:	pop    rdx
   140023286:	add    BYTE PTR [rax],al
   140023288:	sbb    DWORD PTR [rbx],0x3f
   14002328b:	jae    0x1400232f2
   14002328d:	je     0x1400232e3
   14002328f:	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x72475140
   140023297:	outs   dx,DWORD PTR ds:[rsi]
   140023298:	jne    0x14002330a
   14002329a:	rex.X outs dx,DWORD PTR ds:[rsi]
   14002329c:	js     0x1400232de
   14002329e:	rex push rcx
   1400232a0:	rex.RB
   1400232a1:	rex.B
   1400232a2:	pop    r8
   1400232a4:	rex.B
   1400232a5:	rex.RB
   1400232a6:	rex.X push rsi
   1400232a8:	push   rcx
   1400232a9:	push   rbx
   1400232aa:	je     0x14002331e
   1400232ac:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400232b3:	add    al,dh
   1400232b5:	(bad)  
   1400232b6:	(bad)  
   1400232b7:	jae    0x14002331e
   1400232b9:	je     0x1400232ff
   1400232bb:	imul   esi,DWORD PTR [rbx+0x61],0x64656c62
   1400232c2:	rex push rcx
   1400232c4:	push   rdi
   1400232c5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400232cd:	rex.RB
   1400232ce:	rex.B
   1400232cf:	pop    r8
   1400232d1:	pop    rdi
   1400232d2:	rex.WRX
   1400232d3:	rex pop rdx
   1400232d5:	add    dl,bl
   1400232d7:	(bad)  
   1400232d8:	(bad)  
   1400232d9:	je     0x14002334a
   1400232db:	jo     0x140023329
   1400232dd:	gs jbe 0x140023345
   1400232e0:	ins    BYTE PTR es:[rdi],dx
   1400232e1:	rex.WB je 0x140023349
   1400232e4:	ins    DWORD PTR es:[rdi],dx
   1400232e5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400232e7:	jne    0x140023357
   1400232e9:	je     0x14002332b
   1400232eb:	push   rcx
   1400232ec:	push   rsp
   1400232ed:	jb     0x140023354
   1400232ef:	gs push rdi
   1400232f1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400232f9:	rex.RB
   1400232fa:	rex.X
   1400232fb:	rex.B
   1400232fc:	rex.W pop rax
   1400232fe:	pop    rdx
   1400232ff:	add    BYTE PTR [rcx+0x1e],al
   140023302:	(bad)  
   140023303:	je     0x140023366
   140023305:	imul   esp,DWORD PTR [rbp+0x54],0x6f
   140023309:	jo     0x140023357
   14002330b:	gs jbe 0x140023373
   14002330e:	ins    BYTE PTR es:[rdi],dx
   14002330f:	rex.WB je 0x140023377
   140023312:	ins    DWORD PTR es:[rdi],dx
   140023313:	rex push rcx
   140023315:	push   rsp
   140023316:	jb     0x14002337d
   140023318:	gs push rdi
   14002331a:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140023322:	rex.RB
   140023323:	rex.B
   140023324:	push   r8
   140023326:	rex.RB
   140023327:	push   r14
   140023329:	push   rcx
   14002332a:	push   rsp
   14002332b:	jb     0x140023392
   14002332d:	gs push rdi
   14002332f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140023337:	ins    DWORD PTR es:[rdi],dx
   140023338:	rex
   140023339:	rex
   14002333a:	rex.W
   14002333b:	rex pop rdx
   14002333d:	add    BYTE PTR [rsi],al
   14002333f:	or     BYTE PTR [rdi],bh
   140023341:	movsxd esi,DWORD PTR [rbp+0x72]
   140023344:	jb     0x1400233ab
   140023346:	outs   dx,BYTE PTR ds:[rsi]
   140023347:	je     0x140023392
   140023349:	outs   dx,BYTE PTR ds:[rsi]
   14002334a:	fs gs js 0x14002338e
   14002334e:	push   rcx
   14002334f:	(bad)
   140023355:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023359:	gs ins DWORD PTR es:[rdi],dx
   14002335b:	push   rsi
   14002335c:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   140023363:	rex.X
   140023364:	rex.B (bad) 
   140023366:	push   r14
   140023368:	push   rcx
   140023369:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002336b:	fs gs ins BYTE PTR es:[rdi],dx
   14002336e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140023370:	fs gs js 0x1400233b4
   140023374:	rex pop rax
   140023376:	pop    rdx
   140023377:	add    bh,ch
   140023379:	add    BYTE PTR [rdi],bh
   14002337b:	(bad)  
   14002337c:	xor    BYTE PTR [rcx+0x50],dl
   14002337f:	jne    0x1400233f4
   140023381:	push   0x74747542
   140023386:	outs   dx,DWORD PTR ds:[rsi]
   140023387:	outs   dx,BYTE PTR ds:[rsi]
   140023388:	rex
   140023389:	rex push rcx
   14002338b:	rex.RB
   14002338c:	rex.B
   14002338d:	rex.B
   14002338e:	rex push rax
   140023390:	rex.RB
   140023391:	push   r14
   140023393:	push   rcx
   140023394:	push   rdi
   140023395:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14002339d:	pop    rdx
   14002339e:	add    BYTE PTR [rax],al
   1400233a0:	(bad)  
   1400233a1:	(bad)  
   1400233a2:	(bad)  
   1400233a3:	jae    0x14002340a
   1400233a5:	je     0x1400233ea
   1400233a7:	outs   dx,DWORD PTR ds:[rsi]
   1400233a8:	ins    BYTE PTR es:[rdi],dx
   1400233a9:	jne    0x140023418
   1400233ab:	outs   dx,BYTE PTR ds:[rsi]
   1400233ac:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400233ae:	jne    0x14002341e
   1400233b0:	je     0x1400233f2
   1400233b2:	push   rcx
   1400233b3:	push   rsp
   1400233b4:	jb     0x14002341b
   1400233b6:	gs push rdi
   1400233b8:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400233c0:	rex.RB
   1400233c1:	rex.B
   1400233c2:	pop    r8
   1400233c4:	rex.W
   1400233c5:	rex pop rdx
   1400233c7:	add    BYTE PTR [rbp+0x1],bh
   1400233ca:	(bad)  
   1400233cb:	(bad)  
   1400233cc:	xor    BYTE PTR [rcx+0x54],dl
   1400233cf:	jb     0x140023436
   1400233d1:	gs push rdi
   1400233d3:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   1400233db:	rex.RB
   1400233dc:	rex.B
   1400233dd:	rex.B
   1400233de:	rex push rax
   1400233e0:	rex.RB
   1400233e1:	push   r14
   1400233e3:	push   rcx
   1400233e4:	push   rdi
   1400233e5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   1400233ed:	pop    rdx
   1400233ee:	add    BYTE PTR [rax],al
   1400233f0:	stos   BYTE PTR es:[rdi],al
   1400233f1:	add    BYTE PTR [rdi],bh
   1400233f3:	(bad)  
   1400233f4:	xor    BYTE PTR [rcx+0x47],dl
   1400233f7:	jb     0x140023468
   1400233f9:	jne    0x14002346b
   1400233fb:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400233fd:	js     0x14002343f
   1400233ff:	rex push rcx
   140023401:	rex.RB
   140023402:	rex.B
   140023403:	rex.B
   140023404:	rex push rax
   140023406:	rex.RB
   140023407:	push   r14
   140023409:	push   rcx
   14002340a:	push   rdi
   14002340b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140023413:	pop    rdx
   140023414:	add    BYTE PTR [rax],al
   140023416:	xchg   DWORD PTR [rax],edx
   140023418:	(bad)  
   140023419:	ins    DWORD PTR es:[rdi],dx
   14002341a:	gs je  0x14002347e
   14002341d:	rex.WRXB (bad) 
   14002341f:	push   0x65
   140023421:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140023425:	rex.RXB jb 0x140023497
   140023428:	jne    0x14002349a
   14002342a:	rex.X outs dx,DWORD PTR ds:[rsi]
   14002342c:	js     0x14002346e
   14002342e:	rex push rbp
   140023430:	rex.RB
   140023431:	rex.X
   140023432:	push   r8
   140023434:	rex.RB
   140023435:	rex.X push rbp
   140023437:	push   rcx
   140023438:	rex.WRB
   140023439:	gs je  0x14002349d
   14002343c:	rex.WRXB (bad) 
   14002343e:	push   0x65
   140023440:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140023444:	pop    rax
   140023445:	pop    rdx
   140023446:	add    BYTE PTR [rax],al
   140023448:	cli    
   140023449:	adc    edi,DWORD PTR [rdi]
   14002344b:	jno    0x1400234c1
   14002344d:	pop    rdi
   14002344e:	ins    DWORD PTR es:[rdi],dx
   14002344f:	gs je  0x1400234b3
   140023452:	movsxd esp,DWORD PTR [rcx+0x73]
   140023455:	je     0x140023497
   140023457:	push   rcx
   140023458:	rex.RXB jb 0x1400234ca
   14002345b:	jne    0x1400234cd
   14002345d:	rex.X outs dx,DWORD PTR ds:[rsi]
   14002345f:	js     0x1400234a1
   140023461:	rex push rbp
   140023463:	rex.RB
   140023464:	rex.B
   140023465:	push   r8
   140023467:	rex.RB
   140023468:	pop    r8
   14002346a:	push   rax
   14002346b:	rex.RB
   14002346c:	rex.X
   14002346d:	rex.R
   14002346e:	rex pop rdx
   140023470:	add    BYTE PTR [rax],al
   140023472:	jo     0x140023487
   140023474:	(bad)  
   140023475:	jno    0x1400234eb
   140023477:	pop    rdi
   140023478:	ins    DWORD PTR es:[rdi],dx
   140023479:	gs je  0x1400234dd
   14002347c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002347f:	ins    BYTE PTR es:[rdi],dx
   140023480:	rex push rcx
   140023482:	rex.RXB jb 0x1400234f4
   140023485:	jne    0x1400234f7
   140023487:	rex.X outs dx,DWORD PTR ds:[rsi]
   140023489:	js     0x1400234cb
   14002348b:	rex push rbp
   14002348d:	rex.RB
   14002348e:	rex.B
   14002348f:	rex.B
   140023490:	rex.W push rdi
   140023492:	xor    al,0x43
   140023494:	(bad)  
   140023495:	ins    BYTE PTR es:[rdi],dx
   140023496:	ins    BYTE PTR es:[rdi],dx
   140023497:	rex push rcx
   140023499:	rex.WRB
   14002349a:	gs je  0x1400234fe
   14002349d:	rex.WRXB (bad) 
   14002349f:	push   0x65
   1400234a1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400234a5:	rex.W push rax
   1400234a7:	rex.RB
   1400234a8:	push   r8
   1400234aa:	rex.RB
   1400234ab:	pop    r8
   1400234ad:	rex pop rdx
   1400234af:	add    cl,dl
   1400234b1:	or     bh,BYTE PTR [rdi]
   1400234b3:	gs jbe 0x14002351b
   1400234b6:	outs   dx,BYTE PTR ds:[rsi]
   1400234b7:	je     0x1400234f9
   1400234b9:	push   rcx
   1400234ba:	rex.RXB jb 0x14002352c
   1400234bd:	jne    0x14002352f
   1400234bf:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400234c1:	js     0x140023503
   1400234c3:	rex
   1400234c4:	rex.WRB
   1400234c5:	rex.RB
   1400234c6:	rex.B
   1400234c7:	pop    r15
   1400234c9:	rex.WRX push rax
   1400234cb:	rex.RB
   1400234cc:	push   r14
   1400234ce:	push   rcx
   1400234cf:	rex.RB jbe 0x140023537
   1400234d2:	outs   dx,BYTE PTR ds:[rsi]
   1400234d3:	je     0x140023515
   1400234d5:	rex
   1400234d6:	rex pop rdx
   1400234d8:	add    BYTE PTR [rax],al
   1400234da:	test   eax,0x68633f06
   1400234df:	imul   ebp,DWORD PTR [rsp+riz*2+0x45],0x746e6576
   1400234e7:	rex push rcx
   1400234e9:	rex.RXB jb 0x14002355b
   1400234ec:	jne    0x14002355e
   1400234ee:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400234f0:	js     0x140023532
   1400234f2:	rex
   1400234f3:	rex.WRB
   1400234f4:	rex.RB
   1400234f5:	rex.B
   1400234f6:	pop    r8
   1400234f8:	push   rax
   1400234f9:	rex.RB
   1400234fa:	push   r14
   1400234fc:	push   rcx
   1400234fd:	rex.XB push 0x45646c69
   140023503:	jbe    0x14002356a
   140023505:	outs   dx,BYTE PTR ds:[rsi]
   140023506:	je     0x140023548
   140023508:	rex
   140023509:	rex pop rdx
   14002350b:	add    BYTE PTR [rbx],cl
   14002350d:	adc    DWORD PTR [rdi],edi
   14002350f:	ins    DWORD PTR es:[rdi],dx
   140023510:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140023517:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14002351e:	rex push rcx
   140023520:	rex.RXB jb 0x140023592
   140023523:	jne    0x140023595
   140023525:	rex.X outs dx,DWORD PTR ds:[rsi]
   140023527:	js     0x140023569
   140023529:	rex push rbp
   14002352b:	rex.RB
   14002352c:	rex.X
   14002352d:	rex.B (bad) 
   14002352f:	push   r14
   140023531:	push   rcx
   140023532:	push   rbx
   140023533:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14002353a:	add    BYTE PTR [rax],al
   14002353c:	je     0x14002354f
   14002353e:	(bad)  
   14002353f:	ins    DWORD PTR es:[rdi],dx
   140023540:	outs   dx,DWORD PTR ds:[rsi]
   140023541:	jne    0x1400235b6
   140023543:	gs push rax
   140023545:	jb     0x1400235ac
   140023547:	jae    0x1400235bc
   140023549:	rex.RB jbe 0x1400235b1
   14002354c:	outs   dx,BYTE PTR ds:[rsi]
   14002354d:	je     0x14002358f
   14002354f:	push   rcx
   140023550:	rex.RXB jb 0x1400235c2
   140023553:	jne    0x1400235c5
   140023555:	rex.X outs dx,DWORD PTR ds:[rsi]
   140023557:	js     0x140023599
   140023559:	rex
   14002355a:	rex.WRB
   14002355b:	rex.RB
   14002355c:	rex.B
   14002355d:	pop    r8
   14002355f:	push   rax
   140023560:	rex.RB
   140023561:	push   r14
   140023563:	push   rcx
   140023564:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140023566:	jne    0x1400235db
   140023568:	gs rex.RB jbe 0x1400235d1
   14002356c:	outs   dx,BYTE PTR ds:[rsi]
   14002356d:	je     0x1400235af
   14002356f:	rex
   140023570:	rex pop rdx
   140023572:	add    BYTE PTR [rax],al
   140023574:	xchg   edx,eax
   140023575:	adc    DWORD PTR [rdi],edi
   140023577:	ins    DWORD PTR es:[rdi],dx
   140023578:	outs   dx,DWORD PTR ds:[rsi]
   140023579:	jne    0x1400235ee
   14002357b:	gs push rdx
   14002357d:	gs ins BYTE PTR es:[rdi],dx
   14002357f:	gs (bad) 
   140023581:	jae    0x1400235e8
   140023583:	rex.RB jbe 0x1400235eb
   140023586:	outs   dx,BYTE PTR ds:[rsi]
   140023587:	je     0x1400235c9
   140023589:	push   rcx
   14002358a:	rex.RXB jb 0x1400235fc
   14002358d:	jne    0x1400235ff
   14002358f:	rex.X outs dx,DWORD PTR ds:[rsi]
   140023591:	js     0x1400235d3
   140023593:	rex
   140023594:	rex.WRB
   140023595:	rex.RB
   140023596:	rex.B
   140023597:	pop    r8
   140023599:	push   rax
   14002359a:	rex.RB
   14002359b:	push   r14
   14002359d:	push   rcx
   14002359e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400235a0:	jne    0x140023615
   1400235a2:	gs rex.RB jbe 0x14002360b
   1400235a6:	outs   dx,BYTE PTR ds:[rsi]
   1400235a7:	je     0x1400235e9
   1400235a9:	rex
   1400235aa:	rex pop rdx
   1400235ac:	add    BYTE PTR [rax],al
   1400235ae:	push   rdx
   1400235af:	adc    DWORD PTR [rdi],edi
   1400235b1:	ins    DWORD PTR es:[rdi],dx
   1400235b2:	outs   dx,DWORD PTR ds:[rsi]
   1400235b3:	jne    0x140023628
   1400235b5:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   1400235b8:	jbe    0x14002361f
   1400235ba:	rex.RB jbe 0x140023622
   1400235bd:	outs   dx,BYTE PTR ds:[rsi]
   1400235be:	je     0x140023600
   1400235c0:	push   rcx
   1400235c1:	rex.RXB jb 0x140023633
   1400235c4:	jne    0x140023636
   1400235c6:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400235c8:	js     0x14002360a
   1400235ca:	rex
   1400235cb:	rex.WRB
   1400235cc:	rex.RB
   1400235cd:	rex.B
   1400235ce:	pop    r8
   1400235d0:	push   rax
   1400235d1:	rex.RB
   1400235d2:	push   r14
   1400235d4:	push   rcx
   1400235d5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400235d7:	jne    0x14002364c
   1400235d9:	gs rex.RB jbe 0x140023642
   1400235dd:	outs   dx,BYTE PTR ds:[rsi]
   1400235de:	je     0x140023620
   1400235e0:	rex
   1400235e1:	rex pop rdx
   1400235e3:	add    BYTE PTR [rbx+0x6f663f0b],cl
   1400235e9:	movsxd esi,DWORD PTR [rbp+0x73]
   1400235ec:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400235ee:	rex.RB jbe 0x140023656
   1400235f1:	outs   dx,BYTE PTR ds:[rsi]
   1400235f2:	je     0x140023634
   1400235f4:	push   rcx
   1400235f5:	rex.RXB jb 0x140023667
   1400235f8:	jne    0x14002366a
   1400235fa:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400235fc:	js     0x14002363e
   1400235fe:	rex
   1400235ff:	rex.WRB
   140023600:	rex.RB
   140023601:	rex.B
   140023602:	pop    r8
   140023604:	push   rax
   140023605:	rex.RB
   140023606:	push   r14
   140023608:	push   rcx
   140023609:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14002360b:	movsxd esi,DWORD PTR [rbp+0x73]
   14002360e:	rex.RB jbe 0x140023676
   140023611:	outs   dx,BYTE PTR ds:[rsi]
   140023612:	je     0x140023654
   140023614:	rex
   140023615:	rex pop rdx
   140023617:	add    BYTE PTR [rbx+0x12],bl
   14002361a:	(bad)  
   14002361b:	jo     0x14002367e
   14002361d:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140023624:	je     0x140023666
   140023626:	push   rcx
   140023627:	rex.RXB jb 0x140023699
   14002362a:	jne    0x14002369c
   14002362c:	rex.X outs dx,DWORD PTR ds:[rsi]
   14002362e:	js     0x140023670
   140023630:	rex
   140023631:	rex.WRB
   140023632:	rex.RB
   140023633:	rex.B
   140023634:	pop    r8
   140023636:	push   rax
   140023637:	rex.RB
   140023638:	push   r14
   14002363a:	push   rcx
   14002363b:	push   rax
   14002363c:	(bad)  
   14002363d:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140023644:	je     0x140023686
   140023646:	rex
   140023647:	rex pop rdx
   140023649:	add    BYTE PTR [rdi+0x65723f15],cl
   14002364f:	jae    0x1400236ba
   140023651:	jp     0x1400236b8
   140023653:	rex.RB jbe 0x1400236bb
   140023656:	outs   dx,BYTE PTR ds:[rsi]
   140023657:	je     0x140023699
   140023659:	push   rcx
   14002365a:	rex.RXB jb 0x1400236cc
   14002365d:	jne    0x1400236cf
   14002365f:	rex.X outs dx,DWORD PTR ds:[rsi]
   140023661:	js     0x1400236a3
   140023663:	rex
   140023664:	rex.WRB
   140023665:	rex.RB
   140023666:	rex.B
   140023667:	pop    r8
   140023669:	push   rax
   14002366a:	rex.RB
   14002366b:	push   r14
   14002366d:	push   rcx
   14002366e:	push   rdx
   14002366f:	gs jae 0x1400236db
   140023672:	jp     0x1400236d9
   140023674:	rex.RB jbe 0x1400236dc
   140023677:	outs   dx,BYTE PTR ds:[rsi]
   140023678:	je     0x1400236ba
   14002367a:	rex
   14002367b:	rex pop rdx
   14002367d:	add    BYTE PTR [rbx+0x6],bh
   140023680:	(bad)  
   140023681:	movsxd ebp,DWORD PTR [rax+0x61]
   140023684:	outs   dx,BYTE PTR ds:[rsi]
   140023685:	addr32 gs rex.RB jbe 0x1400236ef
   14002368a:	outs   dx,BYTE PTR ds:[rsi]
   14002368b:	je     0x1400236cd
   14002368d:	push   rcx
   14002368e:	rex.RXB jb 0x140023700
   140023691:	jne    0x140023703
   140023693:	rex.X outs dx,DWORD PTR ds:[rsi]
   140023695:	js     0x1400236d7
   140023697:	rex
   140023698:	rex.WRB
   140023699:	rex.RB
   14002369a:	rex.B
   14002369b:	pop    r8
   14002369d:	push   rax
   14002369e:	rex.RB
   14002369f:	push   r14
   1400236a1:	push   rcx
   1400236a2:	rex.RB jbe 0x14002370a
   1400236a5:	outs   dx,BYTE PTR ds:[rsi]
   1400236a6:	je     0x1400236e8
   1400236a8:	rex
   1400236a9:	rex pop rdx
   1400236ab:	add    dl,cl
   1400236ad:	adc    BYTE PTR [rdi],bh
   1400236af:	ins    DWORD PTR es:[rdi],dx
   1400236b0:	gs je  0x140023714
   1400236b3:	rex.WRXB (bad) 
   1400236b5:	push   0x65
   1400236b7:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   1400236bb:	push   rsp
   1400236bc:	jb     0x140023723
   1400236be:	gs push rdi
   1400236c0:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   1400236c8:	rex.RB
   1400236c9:	rex.X
   1400236ca:	push   r8
   1400236cc:	rex.RB
   1400236cd:	rex.X push rbp
   1400236cf:	push   rcx
   1400236d0:	rex.WRB
   1400236d1:	gs je  0x140023735
   1400236d4:	rex.WRXB (bad) 
   1400236d6:	push   0x65
   1400236d8:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400236dc:	pop    rax
   1400236dd:	pop    rdx
   1400236de:	add    BYTE PTR [rax],al
   1400236e0:	cmp    eax,0x74713f14
   1400236e5:	pop    rdi
   1400236e6:	ins    DWORD PTR es:[rdi],dx
   1400236e7:	gs je  0x14002374b
   1400236ea:	movsxd esp,DWORD PTR [rcx+0x73]
   1400236ed:	je     0x14002372f
   1400236ef:	push   rcx
   1400236f0:	push   rsp
   1400236f1:	jb     0x140023758
   1400236f3:	gs push rdi
   1400236f5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   1400236fd:	rex.RB
   1400236fe:	rex.B
   1400236ff:	push   r8
   140023701:	rex.RB
   140023702:	pop    r8
   140023704:	push   rax
   140023705:	rex.RB
   140023706:	rex.X
   140023707:	rex.R
   140023708:	rex pop rdx
   14002370a:	add    BYTE PTR [rax],al
   14002370c:	mov    bl,0x13
   14002370e:	(bad)  
   14002370f:	jno    0x140023785
   140023711:	pop    rdi
   140023712:	ins    DWORD PTR es:[rdi],dx
   140023713:	gs je  0x140023777
   140023716:	movsxd esp,DWORD PTR [rcx+0x6c]
   140023719:	ins    BYTE PTR es:[rdi],dx
   14002371a:	rex push rcx
   14002371c:	push   rsp
   14002371d:	jb     0x140023784
   14002371f:	gs push rdi
   140023721:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140023729:	rex.RB
   14002372a:	rex.B
   14002372b:	rex.B
   14002372c:	rex.W push rdi
   14002372e:	xor    al,0x43
   140023730:	(bad)  
   140023731:	ins    BYTE PTR es:[rdi],dx
   140023732:	ins    BYTE PTR es:[rdi],dx
   140023733:	rex push rcx
   140023735:	rex.WRB
   140023736:	gs je  0x14002379a
   140023739:	rex.WRXB (bad) 
   14002373b:	push   0x65
   14002373d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140023741:	rex.W push rax
   140023743:	rex.RB
   140023744:	push   r8
   140023746:	rex.RB
   140023747:	pop    r8
   140023749:	rex pop rdx
   14002374b:	add    dl,bh
   14002374d:	or     bh,BYTE PTR [rdi]
   14002374f:	gs jbe 0x1400237b7
   140023752:	outs   dx,BYTE PTR ds:[rsi]
   140023753:	je     0x140023795
   140023755:	push   rcx
   140023756:	push   rsp
   140023757:	jb     0x1400237be
   140023759:	gs push rdi
   14002375b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140023763:	rex.RB
   140023764:	rex.B
   140023765:	pop    r15
   140023767:	rex.WRX push rax
   140023769:	rex.RB
   14002376a:	push   r14
   14002376c:	push   rcx
   14002376d:	rex.RB jbe 0x1400237d5
   140023770:	outs   dx,BYTE PTR ds:[rsi]
   140023771:	je     0x1400237b3
   140023773:	rex
   140023774:	rex pop rdx
   140023776:	add    BYTE PTR [rax],al
   140023778:	add    BYTE PTR [rbx],cl
   14002377a:	(bad)  
   14002377b:	gs jbe 0x1400237e3
   14002377e:	outs   dx,BYTE PTR ds:[rsi]
   14002377f:	je     0x1400237c7
   140023781:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x41514072
   140023789:	(bad)
   14002378e:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140023792:	jb     0x140023803
   140023794:	ins    BYTE PTR es:[rdi],dx
   140023795:	ins    BYTE PTR es:[rdi],dx
   140023796:	rex.B jb 0x1400237fe
   140023799:	(bad)  
   14002379a:	rex
   14002379b:	rex
   14002379c:	rex.WRB
   14002379d:	rex.RB
   14002379e:	rex.B
   14002379f:	pop    r15
   1400237a1:	rex.WRX push rax
   1400237a3:	rex.RB
   1400237a4:	push   r14
   1400237a6:	push   rcx
   1400237a7:	rex.WRXB (bad) 
   1400237a9:	push   0x65
   1400237ab:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400237af:	push   rax
   1400237b0:	rex.RB
   1400237b1:	push   r14
   1400237b3:	push   rcx
   1400237b4:	rex.RB jbe 0x14002381c
   1400237b7:	outs   dx,BYTE PTR ds:[rsi]
   1400237b8:	je     0x1400237fa
   1400237ba:	rex
   1400237bb:	rex pop rdx
   1400237bd:	add    BYTE PTR [rsi+rbx*1+0x6d69743f],ah
   1400237c4:	gs jb  0x14002380c
   1400237c7:	jbe    0x14002382e
   1400237c9:	outs   dx,BYTE PTR ds:[rsi]
   1400237ca:	je     0x14002380c
   1400237cc:	push   rcx
   1400237cd:	push   rsp
   1400237ce:	jb     0x140023835
   1400237d0:	gs push rsi
   1400237d2:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400237d9:	rex.B
   1400237da:	pop    r8
   1400237dc:	push   rax
   1400237dd:	rex.RB
   1400237de:	push   r14
   1400237e0:	push   rcx
   1400237e1:	push   rsp
   1400237e2:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   1400237e9:	outs   dx,BYTE PTR ds:[rsi]
   1400237ea:	je     0x14002382c
   1400237ec:	rex
   1400237ed:	rex pop rdx
   1400237ef:	add    BYTE PTR [rax+0x69733f1c],dl
   1400237f5:	jp     0x14002385c
   1400237f7:	imul   rbp,QWORD PTR [rsi+0x74],0x62415140
   1400237ff:	jae    0x140023875
   140023801:	jb     0x140023864
   140023803:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140023807:	jb     0x140023878
   140023809:	ins    BYTE PTR es:[rdi],dx
   14002380a:	ins    BYTE PTR es:[rdi],dx
   14002380b:	rex.B jb 0x140023873
   14002380e:	(bad)  
   14002380f:	rex
   140023810:	rex push rbp
   140023812:	rex.RB
   140023813:	rex.X
   140023814:	rex.B (bad) 
   140023816:	push   r14
   140023818:	push   rcx
   140023819:	push   rbx
   14002381a:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140023821:	add    BYTE PTR [rbx],al
   140023823:	adc    DWORD PTR [rdi],edi
   140023825:	ins    DWORD PTR es:[rdi],dx
   140023826:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14002382d:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140023834:	rex push rcx
   140023836:	(bad)
   14002383c:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140023840:	jb     0x1400238b1
   140023842:	ins    BYTE PTR es:[rdi],dx
   140023843:	ins    BYTE PTR es:[rdi],dx
   140023844:	rex.B jb 0x1400238ac
   140023847:	(bad)  
   140023848:	rex
   140023849:	rex push rbp
   14002384b:	rex.RB
   14002384c:	rex.X
   14002384d:	rex.B (bad) 
   14002384f:	push   r14
   140023851:	push   rcx
   140023852:	push   rbx
   140023853:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14002385a:	add    BYTE PTR [rax],al
   14002385c:	test   DWORD PTR [rcx],edx
   14002385e:	(bad)  
   14002385f:	ins    DWORD PTR es:[rdi],dx
   140023860:	outs   dx,DWORD PTR ds:[rsi]
   140023861:	jne    0x1400238d6
   140023863:	gs push rax
   140023865:	jb     0x1400238cc
   140023867:	jae    0x1400238dc
   140023869:	rex.RB jbe 0x1400238d1
   14002386c:	outs   dx,BYTE PTR ds:[rsi]
   14002386d:	je     0x1400238af
   14002386f:	push   rcx
   140023870:	push   rsp
   140023871:	jb     0x1400238d8
   140023873:	gs push rsi
   140023875:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002387c:	rex.B
   14002387d:	pop    r8
   14002387f:	push   rax
   140023880:	rex.RB
   140023881:	push   r14
   140023883:	push   rcx
   140023884:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140023886:	jne    0x1400238fb
   140023888:	gs rex.RB jbe 0x1400238f1
   14002388c:	outs   dx,BYTE PTR ds:[rsi]
   14002388d:	je     0x1400238cf
   14002388f:	rex
   140023890:	rex pop rdx
   140023892:	add    BYTE PTR [rax],al
   140023894:	movabs ds:0x526573756f6d3f11,eax
   14002389d:	gs ins BYTE PTR es:[rdi],dx
   14002389f:	gs (bad) 
   1400238a1:	jae    0x140023908
   1400238a3:	rex.RB jbe 0x14002390b
   1400238a6:	outs   dx,BYTE PTR ds:[rsi]
   1400238a7:	je     0x1400238e9
   1400238a9:	push   rcx
   1400238aa:	push   rsp
   1400238ab:	jb     0x140023912
   1400238ad:	gs push rsi
   1400238af:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400238b6:	rex.B
   1400238b7:	pop    r8
   1400238b9:	push   rax
   1400238ba:	rex.RB
   1400238bb:	push   r14
   1400238bd:	push   rcx
   1400238be:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400238c0:	jne    0x140023935
   1400238c2:	gs rex.RB jbe 0x14002392b
   1400238c6:	outs   dx,BYTE PTR ds:[rsi]
   1400238c7:	je     0x140023909
   1400238c9:	rex
   1400238ca:	rex pop rdx
   1400238cc:	add    BYTE PTR [rax],al
   1400238ce:	rex.XB adc DWORD PTR [r15],edi
   1400238d1:	ins    DWORD PTR es:[rdi],dx
   1400238d2:	outs   dx,DWORD PTR ds:[rsi]
   1400238d3:	jne    0x140023948
   1400238d5:	rex.R outs dx,DWORD PTR gs:[rsi]
   1400238d8:	jne    0x14002393c
   1400238da:	ins    BYTE PTR es:[rdi],dx
   1400238db:	gs rex.XB ins BYTE PTR es:[rdi],dx
   1400238de:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   1400238e5:	je     0x140023927
   1400238e7:	push   rcx
   1400238e8:	push   rsp
   1400238e9:	jb     0x140023950
   1400238eb:	gs push rsi
   1400238ed:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400238f4:	rex.B
   1400238f5:	pop    r8
   1400238f7:	push   rax
   1400238f8:	rex.RB
   1400238f9:	push   r14
   1400238fb:	push   rcx
   1400238fc:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400238fe:	jne    0x140023973
   140023900:	gs rex.RB jbe 0x140023969
   140023904:	outs   dx,BYTE PTR ds:[rsi]
   140023905:	je     0x140023947
   140023907:	rex
   140023908:	rex pop rdx
   14002390a:	add    BYTE PTR [rax],al
   14002390c:	movsxd edx,DWORD PTR [rcx]
   14002390e:	(bad)  
   14002390f:	ins    DWORD PTR es:[rdi],dx
   140023910:	outs   dx,DWORD PTR ds:[rsi]
   140023911:	jne    0x140023986
   140023913:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140023916:	jbe    0x14002397d
   140023918:	rex.RB jbe 0x140023980
   14002391b:	outs   dx,BYTE PTR ds:[rsi]
   14002391c:	je     0x14002395e
   14002391e:	push   rcx
   14002391f:	push   rsp
   140023920:	jb     0x140023987
   140023922:	gs push rsi
   140023924:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002392b:	rex.B
   14002392c:	pop    r8
   14002392e:	push   rax
   14002392f:	rex.RB
   140023930:	push   r14
   140023932:	push   rcx
   140023933:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140023935:	jne    0x1400239aa
   140023937:	gs rex.RB jbe 0x1400239a0
   14002393b:	outs   dx,BYTE PTR ds:[rsi]
   14002393c:	je     0x14002397e
   14002393e:	rex
   14002393f:	rex pop rdx
   140023941:	add    BYTE PTR [rip+0x68773f21],ah        # 0x1a8797868
   140023947:	gs gs ins BYTE PTR es:[rdi],dx
   14002394a:	rex.RB jbe 0x1400239b2
   14002394d:	outs   dx,BYTE PTR ds:[rsi]
   14002394e:	je     0x140023990
   140023950:	push   rcx
   140023951:	(bad)
   140023957:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   14002395b:	jb     0x1400239cc
   14002395d:	ins    BYTE PTR es:[rdi],dx
   14002395e:	ins    BYTE PTR es:[rdi],dx
   14002395f:	rex.B jb 0x1400239c7
   140023962:	(bad)  
   140023963:	rex
   140023964:	rex
   140023965:	rex.WRB
   140023966:	rex.RB
   140023967:	rex.B
   140023968:	pop    r8
   14002396a:	push   rax
   14002396b:	rex.RB
   14002396c:	push   r14
   14002396e:	push   rcx
   14002396f:	push   rdi
   140023970:	push   0x456c6565
   140023975:	jbe    0x1400239dc
   140023977:	outs   dx,BYTE PTR ds:[rsi]
   140023978:	je     0x1400239ba
   14002397a:	rex
   14002397b:	rex pop rdx
   14002397d:	add    BYTE PTR [rax+0xf],bl
   140023980:	(bad)  
   140023981:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140023985:	jb     0x1400239ec
   140023987:	jae    0x1400239fc
   140023989:	rex.RB jbe 0x1400239f1
   14002398c:	outs   dx,BYTE PTR ds:[rsi]
   14002398d:	je     0x1400239cf
   14002398f:	push   rcx
   140023990:	push   rsp
   140023991:	jb     0x1400239f8
   140023993:	gs push rsi
   140023995:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002399c:	rex.B
   14002399d:	pop    r8
   14002399f:	push   rax
   1400239a0:	rex.RB
   1400239a1:	push   r14
   1400239a3:	push   rcx
   1400239a4:	rex.WXB
   1400239a5:	gs jns 0x1400239ed
   1400239a8:	jbe    0x140023a0f
   1400239aa:	outs   dx,BYTE PTR ds:[rsi]
   1400239ab:	je     0x1400239ed
   1400239ad:	rex
   1400239ae:	rex pop rdx
   1400239b0:	add    BYTE PTR [rax],al
   1400239b2:	or     DWORD PTR [rbx],0x636f663f
   1400239b8:	jne    0x140023a2d
   1400239ba:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400239bc:	rex.RB jbe 0x140023a24
   1400239bf:	outs   dx,BYTE PTR ds:[rsi]
   1400239c0:	je     0x140023a02
   1400239c2:	push   rcx
   1400239c3:	(bad)
   1400239c9:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400239cd:	gs ins DWORD PTR es:[rdi],dx
   1400239cf:	push   rsi
   1400239d0:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400239d7:	rex.B
   1400239d8:	pop    r8
   1400239da:	push   rax
   1400239db:	rex.RB
   1400239dc:	push   r14
   1400239de:	push   rcx
   1400239df:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400239e1:	movsxd esi,DWORD PTR [rbp+0x73]
   1400239e4:	rex.RB jbe 0x140023a4c
   1400239e7:	outs   dx,BYTE PTR ds:[rsi]
   1400239e8:	je     0x140023a2a
   1400239ea:	rex
   1400239eb:	rex pop rdx
   1400239ed:	add    BYTE PTR [rax+0x6f663f0b],ch
   1400239f3:	movsxd esi,DWORD PTR [rbp+0x73]
   1400239f6:	rex.WRXB jne 0x140023a6d
   1400239f9:	rex.RB jbe 0x140023a61
   1400239fc:	outs   dx,BYTE PTR ds:[rsi]
   1400239fd:	je     0x140023a3f
   1400239ff:	push   rcx
   140023a00:	(bad)
   140023a06:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023a0a:	gs ins DWORD PTR es:[rdi],dx
   140023a0c:	push   rsi
   140023a0d:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023a14:	rex.B
   140023a15:	pop    r8
   140023a17:	push   rax
   140023a18:	rex.RB
   140023a19:	push   r14
   140023a1b:	push   rcx
   140023a1c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140023a1e:	movsxd esi,DWORD PTR [rbp+0x73]
   140023a21:	rex.RB jbe 0x140023a89
   140023a24:	outs   dx,BYTE PTR ds:[rsi]
   140023a25:	je     0x140023a67
   140023a27:	rex
   140023a28:	rex pop rdx
   140023a2a:	add    BYTE PTR [rax],al
   140023a2c:	ja     0x140023a40
   140023a2e:	(bad)  
   140023a2f:	jo     0x140023a92
   140023a31:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140023a38:	je     0x140023a7a
   140023a3a:	push   rcx
   140023a3b:	push   rsp
   140023a3c:	jb     0x140023aa3
   140023a3e:	gs push rsi
   140023a40:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023a47:	rex.B
   140023a48:	pop    r8
   140023a4a:	push   rax
   140023a4b:	rex.RB
   140023a4c:	push   r14
   140023a4e:	push   rcx
   140023a4f:	push   rax
   140023a50:	(bad)  
   140023a51:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140023a58:	je     0x140023a9a
   140023a5a:	rex
   140023a5b:	rex pop rdx
   140023a5d:	add    BYTE PTR [rbx+0x65723f15],al
   140023a63:	jae    0x140023ace
   140023a65:	jp     0x140023acc
   140023a67:	rex.RB jbe 0x140023acf
   140023a6a:	outs   dx,BYTE PTR ds:[rsi]
   140023a6b:	je     0x140023aad
   140023a6d:	push   rcx
   140023a6e:	(bad)
   140023a74:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023a78:	gs ins DWORD PTR es:[rdi],dx
   140023a7a:	push   rsi
   140023a7b:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023a82:	rex.B
   140023a83:	pop    r8
   140023a85:	push   rax
   140023a86:	rex.RB
   140023a87:	push   r14
   140023a89:	push   rcx
   140023a8a:	push   rdx
   140023a8b:	gs jae 0x140023af7
   140023a8e:	jp     0x140023af5
   140023a90:	rex.RB jbe 0x140023af8
   140023a93:	outs   dx,BYTE PTR ds:[rsi]
   140023a94:	je     0x140023ad6
   140023a96:	rex
   140023a97:	rex pop rdx
   140023a99:	add    BYTE PTR [rdx+0x6f633f07],al
   140023a9f:	outs   dx,BYTE PTR ds:[rsi]
   140023aa0:	je     0x140023b07
   140023aa2:	js     0x140023b18
   140023aa4:	rex.WRB
   140023aa5:	outs   dx,BYTE PTR gs:[rsi]
   140023aa7:	jne    0x140023aee
   140023aa9:	jbe    0x140023b10
   140023aab:	outs   dx,BYTE PTR ds:[rsi]
   140023aac:	je     0x140023aee
   140023aae:	push   rcx
   140023aaf:	(bad)
   140023ab5:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140023ab9:	jb     0x140023b2a
   140023abb:	ins    BYTE PTR es:[rdi],dx
   140023abc:	ins    BYTE PTR es:[rdi],dx
   140023abd:	rex.B jb 0x140023b25
   140023ac0:	(bad)  
   140023ac1:	rex
   140023ac2:	rex
   140023ac3:	rex.WRB
   140023ac4:	rex.RB
   140023ac5:	rex.B
   140023ac6:	pop    r8
   140023ac8:	push   rax
   140023ac9:	rex.RB
   140023aca:	push   r14
   140023acc:	push   rcx
   140023acd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140023acf:	outs   dx,BYTE PTR ds:[rsi]
   140023ad0:	je     0x140023b37
   140023ad2:	js     0x140023b48
   140023ad4:	rex.WRB
   140023ad5:	outs   dx,BYTE PTR gs:[rsi]
   140023ad7:	jne    0x140023b1e
   140023ad9:	jbe    0x140023b40
   140023adb:	outs   dx,BYTE PTR ds:[rsi]
   140023adc:	je     0x140023b1e
   140023ade:	rex
   140023adf:	rex pop rdx
   140023ae1:	add    BYTE PTR [rsi],cl
   140023ae3:	or     bh,BYTE PTR [rdi]
   140023ae5:	fs jb  0x140023b49
   140023ae8:	rex.RB outs dx,BYTE PTR ds:[esi]
   140023aeb:	je     0x140023b52
   140023aed:	jb     0x140023b34
   140023aef:	jbe    0x140023b56
   140023af1:	outs   dx,BYTE PTR ds:[rsi]
   140023af2:	je     0x140023b34
   140023af4:	push   rcx
   140023af5:	(bad)
   140023afb:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023aff:	gs ins DWORD PTR es:[rdi],dx
   140023b01:	push   rsi
   140023b02:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023b09:	rex.B
   140023b0a:	pop    r8
   140023b0c:	push   rax
   140023b0d:	rex.RB
   140023b0e:	push   r14
   140023b10:	push   rcx
   140023b11:	rex.R jb 0x140023b75
   140023b14:	rex.RB outs dx,BYTE PTR ds:[esi]
   140023b17:	je     0x140023b7e
   140023b19:	jb     0x140023b60
   140023b1b:	jbe    0x140023b82
   140023b1d:	outs   dx,BYTE PTR ds:[rsi]
   140023b1e:	je     0x140023b60
   140023b20:	rex
   140023b21:	rex pop rdx
   140023b23:	add    BYTE PTR [rcx],dh
   140023b25:	or     bh,BYTE PTR [rdi]
   140023b27:	fs jb  0x140023b8b
   140023b2a:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140023b2d:	jbe    0x140023b94
   140023b2f:	rex.RB jbe 0x140023b97
   140023b32:	outs   dx,BYTE PTR ds:[rsi]
   140023b33:	je     0x140023b75
   140023b35:	push   rcx
   140023b36:	push   rsp
   140023b37:	jb     0x140023b9e
   140023b39:	gs push rsi
   140023b3b:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023b42:	rex.B
   140023b43:	pop    r8
   140023b45:	push   rax
   140023b46:	rex.RB
   140023b47:	push   r14
   140023b49:	push   rcx
   140023b4a:	rex.R jb 0x140023bae
   140023b4d:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140023b50:	jbe    0x140023bb7
   140023b52:	rex.RB jbe 0x140023bba
   140023b55:	outs   dx,BYTE PTR ds:[rsi]
   140023b56:	je     0x140023b98
   140023b58:	rex
   140023b59:	rex pop rdx
   140023b5b:	add    BYTE PTR [rcx],bl
   140023b5d:	or     bh,BYTE PTR [rdi]
   140023b5f:	fs jb  0x140023bc3
   140023b62:	addr32 rex.WR
   140023b64:	gs (bad) 
   140023b66:	jbe    0x140023bcd
   140023b68:	rex.RB jbe 0x140023bd0
   140023b6b:	outs   dx,BYTE PTR ds:[rsi]
   140023b6c:	je     0x140023bae
   140023b6e:	push   rcx
   140023b6f:	(bad)
   140023b75:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023b79:	gs ins DWORD PTR es:[rdi],dx
   140023b7b:	push   rsi
   140023b7c:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023b83:	rex.B
   140023b84:	pop    r8
   140023b86:	push   rax
   140023b87:	rex.RB
   140023b88:	push   r14
   140023b8a:	push   rcx
   140023b8b:	rex.R jb 0x140023bef
   140023b8e:	addr32 rex.WR
   140023b90:	gs (bad) 
   140023b92:	jbe    0x140023bf9
   140023b94:	rex.RB jbe 0x140023bfc
   140023b97:	outs   dx,BYTE PTR ds:[rsi]
   140023b98:	je     0x140023bda
   140023b9a:	rex
   140023b9b:	rex pop rdx
   140023b9d:	add    BYTE PTR [rdx+rcx*1+0x3f],ch
   140023ba1:	fs jb  0x140023c13
   140023ba4:	jo     0x140023beb
   140023ba6:	jbe    0x140023c0d
   140023ba8:	outs   dx,BYTE PTR ds:[rsi]
   140023ba9:	je     0x140023beb
   140023bab:	push   rcx
   140023bac:	push   rsp
   140023bad:	jb     0x140023c14
   140023baf:	gs push rdi
   140023bb1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140023bb9:	rex.RB
   140023bba:	rex.B
   140023bbb:	pop    r8
   140023bbd:	push   rax
   140023bbe:	rex.RB
   140023bbf:	push   r14
   140023bc1:	push   rcx
   140023bc2:	rex.R jb 0x140023c34
   140023bc5:	jo     0x140023c0c
   140023bc7:	jbe    0x140023c2e
   140023bc9:	outs   dx,BYTE PTR ds:[rsi]
   140023bca:	je     0x140023c0c
   140023bcc:	rex
   140023bcd:	rex pop rdx
   140023bcf:	add    BYTE PTR [rcx+0x6],bh
   140023bd2:	(bad)  
   140023bd3:	movsxd ebp,DWORD PTR [rax+0x61]
   140023bd6:	outs   dx,BYTE PTR ds:[rsi]
   140023bd7:	addr32 gs rex.RB jbe 0x140023c41
   140023bdc:	outs   dx,BYTE PTR ds:[rsi]
   140023bdd:	je     0x140023c1f
   140023bdf:	push   rcx
   140023be0:	rex.RX jb 0x140023c44
   140023be3:	ins    DWORD PTR es:[rdi],dx
   140023be4:	gs rex
   140023be6:	rex
   140023be7:	rex.WRB
   140023be8:	rex.RB
   140023be9:	rex.B
   140023bea:	pop    r8
   140023bec:	push   rax
   140023bed:	rex.RB
   140023bee:	push   r14
   140023bf0:	push   rcx
   140023bf1:	rex.RB jbe 0x140023c59
   140023bf4:	outs   dx,BYTE PTR ds:[rsi]
   140023bf5:	je     0x140023c37
   140023bf7:	rex
   140023bf8:	rex pop rdx
   140023bfa:	add    BYTE PTR [rax],al
   140023bfc:	outs   dx,DWORD PTR ds:[rsi]
   140023bfd:	or     eax,0x706e693f
   140023c02:	jne    0x140023c78
   140023c04:	rex.WRB
   140023c05:	gs je  0x140023c70
   140023c08:	outs   dx,DWORD PTR ds:[rsi]
   140023c09:	fs rex.RB jbe 0x140023c72
   140023c0d:	outs   dx,BYTE PTR ds:[rsi]
   140023c0e:	je     0x140023c50
   140023c10:	push   rcx
   140023c11:	(bad)
   140023c17:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023c1b:	gs ins DWORD PTR es:[rdi],dx
   140023c1d:	push   rsi
   140023c1e:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023c25:	rex.B
   140023c26:	pop    r8
   140023c28:	push   rax
   140023c29:	rex.RB
   140023c2a:	push   r14
   140023c2c:	push   rcx
   140023c2d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140023c2f:	jo     0x140023ca6
   140023c31:	je     0x140023c80
   140023c33:	gs je  0x140023c9e
   140023c36:	outs   dx,DWORD PTR ds:[rsi]
   140023c37:	fs rex.RB jbe 0x140023ca0
   140023c3b:	outs   dx,BYTE PTR ds:[rsi]
   140023c3c:	je     0x140023c7e
   140023c3e:	rex
   140023c3f:	rex pop rdx
   140023c41:	add    BYTE PTR [rbp+rcx*1+0x3f],bh
   140023c45:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   140023c4c:	je     0x140023cb6
   140023c4e:	outs   dx,DWORD PTR ds:[rsi]
   140023c4f:	fs push rcx
   140023c51:	jne    0x140023cb8
   140023c53:	jb     0x140023cce
   140023c55:	rex push rcx
   140023c57:	(bad)
   140023c5d:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023c61:	gs ins DWORD PTR es:[rdi],dx
   140023c63:	push   rsi
   140023c64:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140023c6b:	rex.X
   140023c6c:	rex.B (bad) 
   140023c6e:	push   r14
   140023c70:	push   rcx
   140023c71:	push   rsi
   140023c72:	(bad)  
   140023c73:	jb     0x140023cde
   140023c75:	(bad)  
   140023c76:	outs   dx,BYTE PTR ds:[rsi]
   140023c77:	je     0x140023cb9
   140023c79:	rex push rdi
   140023c7b:	xor    al,0x49
   140023c7d:	outs   dx,BYTE PTR ds:[rsi]
   140023c7e:	jo     0x140023cf5
   140023c80:	je     0x140023ccf
   140023c82:	gs je  0x140023ced
   140023c85:	outs   dx,DWORD PTR ds:[rsi]
   140023c86:	fs push rcx
   140023c88:	jne    0x140023cef
   140023c8a:	jb     0x140023d05
   140023c8c:	rex push rcx
   140023c8e:	je     0x140023cd0
   140023c90:	rex
   140023c91:	rex pop rdx
   140023c93:	add    BYTE PTR [rax+0x6f663f0b],bl
   140023c99:	movsxd esi,DWORD PTR [rbp+0x73]
   140023c9c:	rex.WRX
   140023c9d:	gs js  0x140023d14
   140023ca0:	push   rax
   140023ca1:	jb     0x140023d08
   140023ca3:	jbe    0x140023ce8
   140023ca5:	push   0x40646c69
   140023caa:	push   rcx
   140023cab:	(bad)
   140023cb1:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023cb5:	gs ins DWORD PTR es:[rdi],dx
   140023cb7:	push   rsi
   140023cb8:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023cbf:	rex.B
   140023cc0:	pop    r15
   140023cc2:	rex.WRX pop rdi
   140023cc4:	rex.WRX
   140023cc5:	rex pop rdx
   140023cc7:	add    BYTE PTR [rax],ch
   140023cc9:	sbb    al,0x3f
   140023ccb:	jae    0x140023d32
   140023ccd:	je     0x140023d44
   140023ccf:	jo     0x140023d27
   140023cd1:	imul   esp,DWORD PTR [rbp+0x77],0x74726f70
   140023cd8:	rex push rcx
   140023cda:	(bad)
   140023ce0:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140023ce4:	jb     0x140023d55
   140023ce6:	ins    BYTE PTR es:[rdi],dx
   140023ce7:	ins    BYTE PTR es:[rdi],dx
   140023ce8:	rex.B jb 0x140023d50
   140023ceb:	(bad)  
   140023cec:	rex
   140023ced:	rex push rbp
   140023cef:	rex.RB
   140023cf0:	rex.B
   140023cf1:	pop    r8
   140023cf3:	push   rax
   140023cf4:	rex.RB
   140023cf5:	push   r14
   140023cf7:	push   rcx
   140023cf8:	push   rdi
   140023cf9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140023d01:	pop    rdx
   140023d02:	add    BYTE PTR [rax],al
   140023d04:	icebp  
   140023d05:	and    BYTE PTR [rdi],bh
   140023d07:	jbe    0x140023d72
   140023d09:	gs ja  0x140023d7c
   140023d0c:	outs   dx,DWORD PTR ds:[rsi]
   140023d0d:	jb     0x140023d83
   140023d0f:	rex.RB jbe 0x140023d77
   140023d12:	outs   dx,BYTE PTR ds:[rsi]
   140023d13:	je     0x140023d55
   140023d15:	push   rcx
   140023d16:	push   rsp
   140023d17:	jb     0x140023d7e
   140023d19:	gs push rsi
   140023d1b:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023d22:	rex.B
   140023d23:	pop    r15
   140023d25:	rex.WRX push rax
   140023d27:	rex.RB
   140023d28:	push   r14
   140023d2a:	push   rcx
   140023d2b:	rex.RB jbe 0x140023d93
   140023d2e:	outs   dx,BYTE PTR ds:[rsi]
   140023d2f:	je     0x140023d71
   140023d31:	rex
   140023d32:	rex pop rdx
   140023d34:	add    BYTE PTR [rax],al
   140023d36:	rex.RXB (bad) 
   140023d38:	(bad)  
   140023d39:	jae    0x140023d9e
   140023d3b:	jb     0x140023dac
   140023d3d:	ins    BYTE PTR es:[rdi],dx
   140023d3e:	ins    BYTE PTR es:[rdi],dx
   140023d3f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140023d41:	outs   dx,BYTE PTR ds:[rsi]
   140023d42:	je     0x140023da9
   140023d44:	outs   dx,BYTE PTR ds:[rsi]
   140023d45:	je     0x140023dba
   140023d47:	rex.X jns 0x140023d8a
   140023d4a:	push   rcx
   140023d4b:	push   rsp
   140023d4c:	jb     0x140023db3
   140023d4e:	gs push rsi
   140023d50:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023d57:	rex.B
   140023d58:	pop    r8
   140023d5a:	rex.W
   140023d5b:	rex.W
   140023d5c:	rex pop rdx
   140023d5e:	add    BYTE PTR [rax],al
   140023d60:	clc    
   140023d61:	and    BYTE PTR [rdi],bh
   140023d63:	jbe    0x140023dce
   140023d65:	gs ja  0x140023dd8
   140023d68:	outs   dx,DWORD PTR ds:[rsi]
   140023d69:	jb     0x140023ddf
   140023d6b:	push   rbx
   140023d6c:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140023d73:	rex push rcx
   140023d75:	push   rsp
   140023d76:	jb     0x140023ddd
   140023d78:	gs push rsi
   140023d7a:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023d81:	rex.X
   140023d82:	rex.B (bad) 
   140023d84:	push   r14
   140023d86:	push   rcx
   140023d87:	push   rbx
   140023d88:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140023d8f:	add    BYTE PTR [rdx+0x65733f19],bl
   140023d95:	je     0x140023de4
   140023d97:	outs   dx,DWORD PTR ds:[rsi]
   140023d98:	fs gs ins BYTE PTR es:[rdi],dx
   140023d9b:	rex push rcx
   140023d9d:	push   rsp
   140023d9e:	jb     0x140023e05
   140023da0:	gs push rdi
   140023da2:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x45404074
   140023daa:	rex.RB
   140023dab:	rex.B
   140023dac:	pop    r8
   140023dae:	push   rax
   140023daf:	rex.RB
   140023db0:	push   r14
   140023db2:	push   rcx
   140023db3:	(bad)
   140023db9:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023dbd:	gs ins DWORD PTR es:[rdi],dx
   140023dbf:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140023dc1:	fs gs ins BYTE PTR es:[rdi],dx
   140023dc4:	rex
   140023dc5:	rex
   140023dc6:	rex pop rdx
   140023dc8:	add    BYTE PTR [rax],al
   140023dca:	mov    ecx,0x65733f1a
   140023dcf:	je     0x140023e24
   140023dd1:	gs ins BYTE PTR es:[rdi],dx
   140023dd3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140023dd8:	outs   dx,BYTE PTR ds:[rsi]
   140023dd9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140023ddb:	fs gs ins BYTE PTR es:[rdi],dx
   140023dde:	rex push rcx
   140023de0:	push   rsp
   140023de1:	jb     0x140023e48
   140023de3:	gs push rdi
   140023de5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140023ded:	rex.RB
   140023dee:	rex.B
   140023def:	pop    r8
   140023df1:	push   rax
   140023df2:	rex.RB
   140023df3:	push   r14
   140023df5:	push   rcx
   140023df6:	rex.WB je 0x140023e5e
   140023df9:	ins    DWORD PTR es:[rdi],dx
   140023dfa:	push   rbx
   140023dfb:	gs ins BYTE PTR es:[rdi],dx
   140023dfd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140023e02:	outs   dx,BYTE PTR ds:[rsi]
   140023e03:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140023e05:	fs gs ins BYTE PTR es:[rdi],dx
   140023e08:	rex
   140023e09:	rex
   140023e0a:	rex pop rdx
   140023e0c:	add    BYTE PTR [rax],al
   140023e0e:	outs   dx,DWORD PTR ds:[rsi]
   140023e0f:	(bad)  
   140023e11:	imul   esp,DWORD PTR [rbp+0x79],0x62
   140023e15:	outs   dx,DWORD PTR ds:[rsi]
   140023e16:	(bad)  
   140023e17:	jb     0x140023e7d
   140023e19:	push   rbx
   140023e1a:	gs (bad) 
   140023e1c:	jb     0x140023e81
   140023e1e:	push   0x72545140
   140023e23:	gs gs push rsi
   140023e26:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140023e2d:	rex.B
   140023e2e:	pop    r8
   140023e30:	rex.B
   140023e31:	rex.RB
   140023e32:	rex.X push rsi
   140023e34:	push   rcx
   140023e35:	push   rbx
   140023e36:	je     0x140023eaa
   140023e38:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140023e3f:	add    BYTE PTR [rdx],dl
   140023e41:	and    DWORD PTR [rdi],edi
   140023e43:	jbe    0x140023eae
   140023e45:	jae    0x140023ebc
   140023e47:	(bad)  
   140023e48:	ins    BYTE PTR es:[rdi],dx
   140023e49:	push   rdx
   140023e4a:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   140023e4f:	push   rsp
   140023e50:	jb     0x140023eb7
   140023e52:	gs push rsi
   140023e54:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140023e5b:	rex.X
   140023e5c:	rex.B (bad) 
   140023e5e:	push   r14
   140023e60:	push   rcx
   140023e61:	push   rdx
   140023e62:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140023e67:	rex.B
   140023e68:	rex.RB
   140023e69:	rex.X push rsi
   140023e6b:	push   rcx
   140023e6c:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140023e6e:	fs gs ins BYTE PTR es:[rdi],dx
   140023e71:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140023e73:	fs gs js 0x140023eb7
   140023e77:	rex
   140023e78:	rex pop rdx
   140023e7a:	add    BYTE PTR [rax],al
   140023e7c:	push   rcx
   140023e7d:	(bad)  
   140023e7e:	(bad)  
   140023e7f:	jae    0x140023ee4
   140023e81:	jb     0x140023ef2
   140023e83:	ins    BYTE PTR es:[rdi],dx
   140023e84:	ins    BYTE PTR es:[rdi],dx
   140023e85:	push   rsp
   140023e86:	outs   dx,DWORD PTR ds:[rsi]
   140023e87:	rex push rcx
   140023e89:	push   rsp
   140023e8a:	jb     0x140023ef1
   140023e8c:	gs push rsi
   140023e8e:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140023e95:	rex.B
   140023e96:	pop    r8
   140023e98:	rex.B
   140023e99:	rex.RB
   140023e9a:	rex.X push rsi
   140023e9c:	push   rcx
   140023e9d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140023e9f:	fs gs ins BYTE PTR es:[rdi],dx
   140023ea2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140023ea4:	fs gs js 0x140023ee8
   140023ea8:	rex push rdi
   140023eaa:	xor    al,0x53
   140023eac:	movsxd esi,DWORD PTR [rdx+0x6f]
   140023eaf:	ins    BYTE PTR es:[rdi],dx
   140023eb0:	ins    BYTE PTR es:[rdi],dx
   140023eb1:	imul   rbp,QWORD PTR [rsi+0x74],0x62415140
   140023eb9:	jae    0x140023f2f
   140023ebb:	jb     0x140023f1e
   140023ebd:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023ec1:	gs ins DWORD PTR es:[rdi],dx
   140023ec3:	push   rsi
   140023ec4:	imul   esp,DWORD PTR [rbp+0x77],0x5a404040
   140023ecb:	add    BYTE PTR [rax],ah
   140023ecd:	or     eax,0x646e693f
   140023ed2:	gs js  0x140023f16
   140023ed5:	je     0x140023f17
   140023ed7:	push   rcx
   140023ed8:	push   rsp
   140023ed9:	jb     0x140023f40
   140023edb:	gs push rsi
   140023edd:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140023ee4:	rex.X
   140023ee5:	rex.B (bad) 
   140023ee7:	push   r14
   140023ee9:	push   rcx
   140023eea:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140023eec:	fs gs ins BYTE PTR es:[rdi],dx
   140023eef:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140023ef1:	fs gs js 0x140023f35
   140023ef5:	rex
   140023ef6:	rex.B
   140023ef7:	rex.RB
   140023ef8:	rex.X push rsi
   140023efa:	push   rcx
   140023efb:	push   rax
   140023efc:	outs   dx,DWORD PTR ds:[rsi]
   140023efd:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   140023f04:	add    BYTE PTR [rax],al
   140023f06:	int3   
   140023f07:	sbb    al,0x3f
   140023f09:	jae    0x140023f74
   140023f0b:	jp     0x140023f72
   140023f0d:	imul   rbp,QWORD PTR [rsi+0x74],0x52726f46
   140023f15:	outs   dx,DWORD PTR ds:[rsi]
   140023f16:	ja     0x140023f58
   140023f18:	push   rcx
   140023f19:	(bad)
   140023f1f:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140023f23:	gs ins DWORD PTR es:[rdi],dx
   140023f25:	push   rsi
   140023f26:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140023f2d:	rex.X
   140023f2e:	rex.B
   140023f2f:	rex.W
   140023f30:	rex.W
   140023f31:	rex pop rdx
   140023f33:	add    dl,cl
   140023f35:	sbb    al,0x3f
   140023f37:	jae    0x140023fa2
   140023f39:	jp     0x140023fa0
   140023f3b:	imul   rbp,QWORD PTR [rsi+0x74],0x43726f46
   140023f43:	outs   dx,DWORD PTR ds:[rsi]
   140023f44:	ins    BYTE PTR es:[rdi],dx
   140023f45:	jne    0x140023fb4
   140023f47:	outs   dx,BYTE PTR ds:[rsi]
   140023f48:	rex push rcx
   140023f4a:	push   rsp
   140023f4b:	jb     0x140023fb2
   140023f4d:	gs push rsi
   140023f4f:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140023f56:	rex.X
   140023f57:	rex.B
   140023f58:	rex.W
   140023f59:	rex.W
   140023f5a:	rex pop rdx
   140023f5c:	add    BYTE PTR [rax],al
   140023f5e:	movsxd edx,DWORD PTR [rip+0x7365723f]        # 0x1b367b1a3
   140023f64:	gs je  0x140023fa7
   140023f67:	push   rcx
   140023f68:	push   rsp
   140023f69:	jb     0x140023fd0
   140023f6b:	gs push rsi
   140023f6d:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140023f74:	rex.B
   140023f75:	pop    r8
   140023f77:	pop    rax
   140023f78:	pop    rdx
   140023f79:	add    BYTE PTR [rcx+0x1a],ch
   140023f7c:	(bad)  
   140023f7d:	jae    0x140023fe4
   140023f7f:	je     0x140023fd3
   140023f81:	outs   dx,DWORD PTR ds:[rsi]
   140023f82:	outs   dx,DWORD PTR ds:[rsi]
   140023f83:	je     0x140023fce
   140023f85:	outs   dx,BYTE PTR ds:[rsi]
   140023f86:	fs gs js 0x140023fca
   140023f8a:	push   rcx
   140023f8b:	push   rsp
   140023f8c:	jb     0x140023ff3
   140023f8e:	gs push rsi
   140023f90:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140023f97:	rex.B
   140023f98:	pop    r8
   140023f9a:	rex.B
   140023f9b:	rex.RB
   140023f9c:	rex.X push rsi
   140023f9e:	push   rcx
   140023f9f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140023fa1:	fs gs ins BYTE PTR es:[rdi],dx
   140023fa4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140023fa6:	fs gs js 0x140023fea
   140023faa:	rex
   140023fab:	rex pop rdx
   140023fad:	add    bl,ah
   140023faf:	or     DWORD PTR [rdi],edi
   140023fb1:	outs   dx,DWORD PTR fs:[rsi]
   140023fb3:	rex.WB je 0x14002401b
   140023fb6:	ins    DWORD PTR es:[rdi],dx
   140023fb7:	jae    0x140024005
   140023fb9:	(bad)  
   140023fba:	jns    0x14002402b
   140023fbc:	jne    0x140024032
   140023fbe:	rex push rcx
   140023fc0:	push   rsp
   140023fc1:	jb     0x140024028
   140023fc3:	gs push rsi
   140023fc5:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140023fcc:	rex.B
   140023fcd:	pop    r8
   140023fcf:	pop    rax
   140023fd0:	pop    rdx
   140023fd1:	add    BYTE PTR [rdi+0x16],bh
   140023fd4:	(bad)  
   140023fd5:	jae    0x14002403c
   140023fd7:	ins    BYTE PTR es:[rdi],dx
   140023fd8:	movsxd esi,DWORD PTR gs:[rcx+rax*2+0x6c]
   140023fdd:	ins    BYTE PTR es:[rdi],dx
   140023fde:	rex push rcx
   140023fe0:	push   rsp
   140023fe1:	jb     0x140024048
   140023fe3:	gs push rsi
   140023fe5:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140023fec:	rex.B
   140023fed:	pop    r8
   140023fef:	pop    rax
   140023ff0:	pop    rdx
   140023ff1:	add    BYTE PTR [rax+0xa],bh
   140023ff4:	(bad)  
   140023ff5:	gs imul esi,DWORD PTR fs:[rax+rax*2+0x51],0x74736241
   140023fff:	jb     0x140024062
   140024001:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140024005:	gs ins DWORD PTR es:[rdi],dx
   140024007:	push   rsi
   140024008:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002400f:	rex.B
   140024010:	pop    r15
   140024012:	rex.WRX
   140024013:	rex.B
   140024014:	rex.RB
   140024015:	rex.X push rsi
   140024017:	push   rcx
   140024018:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002401a:	fs gs ins BYTE PTR es:[rdi],dx
   14002401d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002401f:	fs gs js 0x140024063
   140024023:	rex push rdi
   140024025:	xor    al,0x45
   140024027:	imul   esi,DWORD PTR fs:[rsp+rdx*2+0x72],0x65676769
   140024030:	jb     0x140024072
   140024032:	xor    DWORD PTR [rax+0x50],eax
   140024035:	rex.RB
   140024036:	push   r14
   140024038:	push   rcx
   140024039:	rex.RB jbe 0x1400240a1
   14002403c:	outs   dx,BYTE PTR ds:[rsi]
   14002403d:	je     0x14002407f
   14002403f:	rex
   140024040:	rex pop rdx
   140024042:	add    BYTE PTR [rax],al
   140024044:	cdq    
   140024045:	or     DWORD PTR [rdi],edi
   140024047:	fs (bad) 
   140024049:	je     0x1400240ac
   14002404b:	rex.XB push 0x65676e61
   140024051:	fs rex push rcx
   140024054:	push   rsp
   140024055:	jb     0x1400240bc
   140024057:	gs push rsi
   140024059:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140024060:	rex.B
   140024061:	pop    r8
   140024063:	rex.B
   140024064:	rex.RB
   140024065:	rex.X push rsi
   140024067:	push   rcx
   140024068:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002406a:	fs gs ins BYTE PTR es:[rdi],dx
   14002406d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002406f:	fs gs js 0x1400240b3
   140024073:	xor    BYTE PTR [rcx+0x45],al
   140024077:	rex.X push rsi
   140024079:	(bad)  
   14002407a:	and    al,0x51
   14002407c:	push   rsi
   14002407d:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140024082:	rex
   140024083:	rex.W
   140024084:	rex
   140024085:	rex
   140024086:	rex pop rdx
   140024088:	add    BYTE PTR [rax],al
   14002408a:	add    BYTE PTR [rsi],dl
   14002408c:	(bad)  
   14002408d:	jb     0x1400240fe
   14002408f:	ja     0x140024104
   140024091:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140024093:	jae    0x1400240fa
   140024095:	jb     0x14002410b
   140024097:	gs fs rex push rcx
   14002409b:	push   rsp
   14002409c:	jb     0x140024103
   14002409e:	gs push rsi
   1400240a0:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400240a7:	rex.B
   1400240a8:	pop    r8
   1400240aa:	rex.B
   1400240ab:	rex.RB
   1400240ac:	rex.X push rsi
   1400240ae:	push   rcx
   1400240af:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400240b1:	fs gs ins BYTE PTR es:[rdi],dx
   1400240b4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400240b6:	fs gs js 0x1400240fa
   1400240ba:	rex
   1400240bb:	rex.W
   1400240bc:	rex.W
   1400240bd:	rex pop rdx
   1400240bf:	add    bl,bh
   1400240c1:	adc    eax,0x776f723f
   1400240c6:	jae    0x140024109
   1400240c8:	(bad)  
   1400240c9:	outs   dx,DWORD PTR ds:[rsi]
   1400240ca:	jne    0x140024140
   1400240cc:	push   rsp
   1400240cd:	outs   dx,DWORD PTR ds:[rsi]
   1400240ce:	rex.X
   1400240cf:	gs push rdx
   1400240d1:	gs ins DWORD PTR es:[rdi],dx
   1400240d3:	outs   dx,DWORD PTR ds:[rsi]
   1400240d4:	jbe    0x14002413b
   1400240d6:	fs rex push rcx
   1400240d9:	push   rsp
   1400240da:	jb     0x140024141
   1400240dc:	gs push rsi
   1400240de:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400240e5:	rex.B
   1400240e6:	pop    r8
   1400240e8:	rex.B
   1400240e9:	rex.RB
   1400240ea:	rex.X push rsi
   1400240ec:	push   rcx
   1400240ed:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400240ef:	fs gs ins BYTE PTR es:[rdi],dx
   1400240f2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400240f4:	fs gs js 0x140024138
   1400240f8:	rex
   1400240f9:	rex.W
   1400240fa:	rex.W
   1400240fb:	rex pop rdx
   1400240fd:	add    BYTE PTR [rbx+0x65733f16],ch
   140024103:	ins    BYTE PTR es:[rdi],dx
   140024104:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140024109:	outs   dx,BYTE PTR ds:[rsi]
   14002410a:	rex.XB push 0x65676e61
   140024110:	fs rex push rcx
   140024113:	push   rsp
   140024114:	jb     0x14002417b
   140024116:	gs push rsi
   140024118:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002411f:	rex.B
   140024120:	pop    r8
   140024122:	rex.B
   140024123:	rex.RB
   140024124:	rex.X push rsi
   140024126:	push   rcx
   140024127:	rex.WB je 0x14002418f
   14002412a:	ins    DWORD PTR es:[rdi],dx
   14002412b:	push   rbx
   14002412c:	gs ins BYTE PTR es:[rdi],dx
   14002412e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140024133:	outs   dx,BYTE PTR ds:[rsi]
   140024134:	rex
   140024135:	xor    BYTE PTR [rax+0x5a],al
   140024139:	add    bl,dh
   14002413b:	(bad)  
   14002413c:	(bad)  
   14002413d:	movsxd esi,DWORD PTR [rbp+0x72]
   140024140:	jb     0x1400241a7
   140024142:	outs   dx,BYTE PTR ds:[rsi]
   140024143:	je     0x140024188
   140024145:	push   0x65676e61
   14002414a:	fs rex push rcx
   14002414d:	push   rsp
   14002414e:	jb     0x1400241b5
   140024150:	gs push rsi
   140024152:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140024159:	rex.B
   14002415a:	pop    r8
   14002415c:	rex.B
   14002415d:	rex.RB
   14002415e:	rex.X push rsi
   140024160:	push   rcx
   140024161:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140024163:	fs gs ins BYTE PTR es:[rdi],dx
   140024166:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140024168:	fs gs js 0x1400241ac
   14002416c:	xor    BYTE PTR [rax+0x5a],al
   140024170:	add    BYTE PTR [rax],al
   140024172:	outs   dx,DWORD PTR ds:[rsi]
   140024173:	and    BYTE PTR [rdi],bh
   140024175:	jne    0x1400241e7
   140024177:	fs (bad) 
   140024179:	je     0x1400241e0
   14002417b:	rex.RB
   14002417c:	imul   esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x61746144
   140024185:	rex push rcx
   140024187:	(bad)
   14002418d:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140024191:	gs ins DWORD PTR es:[rdi],dx
   140024193:	push   rsi
   140024194:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002419b:	rex.B
   14002419c:	pop    r8
   14002419e:	pop    rax
   14002419f:	pop    rdx
   1400241a0:	add    BYTE PTR [rax],al
   1400241a2:	jo     0x1400241c4
   1400241a4:	(bad)  
   1400241a5:	jne    0x140024217
   1400241a7:	fs (bad) 
   1400241a9:	je     0x140024210
   1400241ab:	rex.RB
   1400241ac:	imul   esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x6d6f6547
   1400241b5:	gs je  0x14002422a
   1400241b8:	imul   esp,DWORD PTR [rbp+0x73],0x62415140
   1400241bf:	jae    0x140024235
   1400241c1:	jb     0x140024224
   1400241c3:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400241c7:	gs ins DWORD PTR es:[rdi],dx
   1400241c9:	push   rsi
   1400241ca:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400241d1:	rex.B
   1400241d2:	pop    r8
   1400241d4:	pop    rax
   1400241d5:	pop    rdx
   1400241d6:	add    BYTE PTR [rax],al
   1400241d8:	jle    0x1400241fa
   1400241da:	(bad)  
   1400241db:	jne    0x14002424d
   1400241dd:	fs (bad) 
   1400241df:	je     0x140024246
   1400241e1:	rex.RXB
   1400241e2:	outs   dx,DWORD PTR gs:[rsi]
   1400241e4:	ins    DWORD PTR es:[rdi],dx
   1400241e5:	gs je  0x14002425a
   1400241e8:	imul   esp,DWORD PTR [rbp+0x73],0x72545140
   1400241ef:	gs gs push rsi
   1400241f2:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400241f9:	rex.B
   1400241fa:	pop    r8
   1400241fc:	pop    rax
   1400241fd:	pop    rdx
   1400241fe:	add    BYTE PTR [rax],al
   140024200:	xlat   BYTE PTR ds:[rbx]
   140024201:	and    BYTE PTR [rdi],bh
   140024203:	jbe    0x14002426a
   140024205:	jb     0x14002427b
   140024207:	imul   esp,DWORD PTR [rbx+0x61],0x7263536c
   14002420e:	outs   dx,DWORD PTR ds:[rsi]
   14002420f:	ins    BYTE PTR es:[rdi],dx
   140024210:	ins    BYTE PTR es:[rdi],dx
   140024211:	(bad)  
   140024213:	jb     0x140024256
   140024215:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140024219:	outs   dx,BYTE PTR ds:[rsi]
   14002421a:	rex push rcx
   14002421c:	(bad)
   140024222:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140024226:	gs ins DWORD PTR es:[rdi],dx
   140024228:	push   rsi
   140024229:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140024230:	rex.B
   140024231:	pop    r8
   140024233:	rex.W
   140024234:	rex pop rdx
   140024236:	add    BYTE PTR [rax],al
   140024238:	xlat   BYTE PTR ds:[rbx]
   140024239:	or     al,0x3f
   14002423b:	push   0x7a69726f
   140024240:	outs   dx,DWORD PTR ds:[rsi]
   140024241:	outs   dx,BYTE PTR ds:[rsi]
   140024242:	je     0x1400242a5
   140024244:	ins    BYTE PTR es:[rdi],dx
   140024245:	push   rbx
   140024246:	movsxd esi,DWORD PTR [rdx+0x6f]
   140024249:	ins    BYTE PTR es:[rdi],dx
   14002424a:	ins    BYTE PTR es:[rdi],dx
   14002424b:	(bad)  
   14002424d:	jb     0x140024290
   14002424f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140024253:	outs   dx,BYTE PTR ds:[rsi]
   140024254:	rex push rcx
   140024256:	push   rsp
   140024257:	jb     0x1400242be
   140024259:	gs push rsi
   14002425b:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140024262:	rex.B
   140024263:	pop    r8
   140024265:	rex.W
   140024266:	rex pop rdx
   140024268:	add    BYTE PTR [rax],al
   14002426a:	fldenv [rax]
   14002426c:	(bad)  
   14002426d:	jbe    0x1400242d4
   14002426f:	jb     0x1400242e5
   140024271:	imul   esp,DWORD PTR [rbx+0x61],0x7263536c
   140024278:	outs   dx,DWORD PTR ds:[rsi]
   140024279:	ins    BYTE PTR es:[rdi],dx
   14002427a:	ins    BYTE PTR es:[rdi],dx
   14002427b:	(bad)  
   14002427d:	jb     0x1400242d5
   14002427f:	(bad)  
   140024280:	ins    BYTE PTR es:[rdi],dx
   140024281:	jne    0x1400242e8
   140024283:	rex.XB push 0x65676e61
   140024289:	fs rex push rcx
   14002428c:	(bad)
   140024292:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140024296:	gs ins DWORD PTR es:[rdi],dx
   140024298:	push   rsi
   140024299:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400242a0:	rex.B
   1400242a1:	pop    r8
   1400242a3:	rex.W
   1400242a4:	rex pop rdx
   1400242a6:	add    BYTE PTR [rax],al
   1400242a8:	fmul   DWORD PTR [rdi+rdi*1]
   1400242ab:	push   0x7a69726f
   1400242b0:	outs   dx,DWORD PTR ds:[rsi]
   1400242b1:	outs   dx,BYTE PTR ds:[rsi]
   1400242b2:	je     0x140024315
   1400242b4:	ins    BYTE PTR es:[rdi],dx
   1400242b5:	push   rbx
   1400242b6:	movsxd esi,DWORD PTR [rdx+0x6f]
   1400242b9:	ins    BYTE PTR es:[rdi],dx
   1400242ba:	ins    BYTE PTR es:[rdi],dx
   1400242bb:	(bad)  
   1400242bd:	jb     0x140024315
   1400242bf:	(bad)  
   1400242c0:	ins    BYTE PTR es:[rdi],dx
   1400242c1:	jne    0x140024328
   1400242c3:	rex.XB push 0x65676e61
   1400242c9:	fs rex push rcx
   1400242cc:	(bad)
   1400242d2:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400242d6:	gs ins DWORD PTR es:[rdi],dx
   1400242d8:	push   rsi
   1400242d9:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400242e0:	rex.B
   1400242e1:	pop    r8
   1400242e3:	rex.W
   1400242e4:	rex pop rdx
   1400242e6:	add    BYTE PTR [rax],al
   1400242e8:	or     eax,DWORD PTR [rdi]
   1400242ea:	(bad)  
   1400242eb:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   1400242ef:	gs rex.RB
   1400242f1:	imul   esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x62415140
   1400242fa:	jae    0x140024370
   1400242fc:	jb     0x14002435f
   1400242fe:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140024302:	gs ins DWORD PTR es:[rdi],dx
   140024304:	push   rsi
   140024305:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002430c:	rex.B
   14002430d:	pop    r8
   14002430f:	push   rax
   140024310:	rex.RB
   140024311:	push   r14
   140024313:	push   rcx
   140024314:	push   rdi
   140024315:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x57404074
   14002431d:	xor    al,0x45
   14002431f:	outs   dx,BYTE PTR ds:[rsi]
   140024320:	fs rex.RB
   140024322:	imul   esi,DWORD PTR fs:[rax+rcx*2+0x69],0x5140746e
   14002432b:	(bad)
   140024331:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140024335:	gs ins DWORD PTR es:[rdi],dx
   140024337:	rex.R
   140024338:	gs ins BYTE PTR es:[rdi],dx
   14002433a:	gs addr32 (bad) 
   14002433d:	je     0x1400243a4
   14002433f:	rex
   140024340:	rex
   140024341:	rex pop rdx
   140024343:	add    BYTE PTR [rbx+0x7],bl
   140024346:	(bad)  
   140024347:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002434a:	ins    DWORD PTR es:[rdi],dx
   14002434b:	imul   esi,DWORD PTR [rsp+rax*2+0x61],0x51406174
   140024353:	(bad)
   140024359:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14002435d:	gs ins DWORD PTR es:[rdi],dx
   14002435f:	push   rsi
   140024360:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140024367:	rex.B
   140024368:	pop    r8
   14002436a:	push   rax
   14002436b:	rex.RB
   14002436c:	push   r14
   14002436e:	push   rcx
   14002436f:	push   rdi
   140024370:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140024378:	pop    rdx
   140024379:	add    BYTE PTR [rbx+0x64653f0a],al
   14002437f:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x74736544
   140024387:	jb     0x1400243f8
   140024389:	jns    0x1400243f0
   14002438b:	fs rex push rcx
   14002438e:	(bad)
   140024394:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140024398:	gs ins DWORD PTR es:[rdi],dx
   14002439a:	push   rsi
   14002439b:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400243a2:	rex.B
   1400243a3:	pop    r8
   1400243a5:	push   rax
   1400243a6:	rex.RB
   1400243a7:	push   r14
   1400243a9:	push   rcx
   1400243aa:	rex.WRXB (bad) 
   1400243ac:	push   0x65
   1400243ae:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400243b2:	rex pop rdx
   1400243b4:	add    BYTE PTR [rax],al
   1400243b6:	mov    dl,0x11
   1400243b8:	(bad)  
   1400243b9:	ins    DWORD PTR es:[rdi],dx
   1400243ba:	outs   dx,DWORD PTR ds:[rsi]
   1400243bb:	jbe    0x140024422
   1400243bd:	rex.XB jne 0x140024432
   1400243c0:	jae    0x140024431
   1400243c2:	jb     0x140024404
   1400243c4:	push   rcx
   1400243c5:	push   rsp
   1400243c6:	jb     0x14002442d
   1400243c8:	gs push rsi
   1400243ca:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400243d1:	rex.B
   1400243d2:	rex.B (bad) 
   1400243d4:	push   r14
   1400243d6:	push   rcx
   1400243d7:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400243d9:	fs gs ins BYTE PTR es:[rdi],dx
   1400243dc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400243de:	fs gs js 0x140024422
   1400243e2:	rex push rdi
   1400243e4:	xor    al,0x43
   1400243e6:	jne    0x14002445a
   1400243e8:	jae    0x140024459
   1400243ea:	jb     0x14002442d
   1400243ec:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400243f0:	outs   dx,BYTE PTR ds:[rsi]
   1400243f1:	rex push rcx
   1400243f3:	(bad)
   1400243f9:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400243fd:	gs ins DWORD PTR es:[rdi],dx
   1400243ff:	push   rsi
   140024400:	imul   esp,DWORD PTR [rbp+0x77],0x3f564040
   140024407:	and    al,0x51
   140024409:	rex.RX ins BYTE PTR es:[rdi],dx
   14002440b:	(bad)  
   14002440c:	addr32 jae 0x14002444f
   14002440f:	push   rdi
   140024410:	xor    al,0x4b
   140024412:	gs jns 0x140024477
   140024415:	outs   dx,DWORD PTR ds:[rsi]
   140024416:	(bad)  
   140024417:	jb     0x14002447d
   140024419:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002441b:	imul   esp,DWORD PTR fs:[rsi+0x69],0x51407265
   140024423:	je     0x140024465
   140024425:	rex
   140024426:	rex
   140024427:	rex
   140024428:	rex pop rdx
   14002442a:	add    BYTE PTR [rax],al
   14002442c:	(bad)  
   14002442d:	or     al,0x3f
   14002442f:	push   0x7a69726f
   140024434:	outs   dx,DWORD PTR ds:[rsi]
   140024435:	outs   dx,BYTE PTR ds:[rsi]
   140024436:	je     0x140024499
   140024438:	ins    BYTE PTR es:[rdi],dx
   140024439:	rex.WRXB
   14002443a:	data16 data16 jae 0x1400244a3
   14002443e:	je     0x140024480
   140024440:	push   rcx
   140024441:	push   rsp
   140024442:	jb     0x1400244a9
   140024444:	gs push rsi
   140024446:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002444d:	rex.X
   14002444e:	rex.B
   14002444f:	rex.W pop rax
   140024451:	pop    rdx
   140024452:	add    BYTE PTR [rax],al
   140024454:	shl    BYTE PTR [rax],1
   140024456:	(bad)  
   140024457:	jbe    0x1400244be
   140024459:	jb     0x1400244cf
   14002445b:	imul   esp,DWORD PTR [rbx+0x61],0x66664f6c
   140024462:	jae    0x1400244c9
   140024464:	je     0x1400244a6
   140024466:	push   rcx
   140024467:	push   rsp
   140024468:	jb     0x1400244cf
   14002446a:	gs push rsi
   14002446c:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140024473:	rex.X
   140024474:	rex.B
   140024475:	rex.W pop rax
   140024477:	pop    rdx
   140024478:	add    BYTE PTR [rax],al
   14002447a:	pop    rcx
   14002447b:	(bad)  
   14002447c:	(bad)  
   14002447d:	imul   esi,DWORD PTR [rbx+0x49],0x7865646e
   140024484:	imul   rsp,QWORD PTR [rsp+riz*2+0x65],0x5451406e
   14002448d:	jb     0x1400244f4
   14002448f:	gs push rsi
   140024491:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140024498:	rex.X
   140024499:	pop    r15
   14002449b:	rex.WRX
   14002449c:	rex.B
   14002449d:	rex.RB
   14002449e:	rex.X push rsi
   1400244a0:	push   rcx
   1400244a1:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400244a3:	fs gs ins BYTE PTR es:[rdi],dx
   1400244a6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400244a8:	fs gs js 0x1400244ec
   1400244ac:	rex
   1400244ad:	rex pop rdx
   1400244af:	add    BYTE PTR [rdx+rbx*1+0x7465733f],ch
   1400244b6:	push   rbx
   1400244b7:	gs ins BYTE PTR es:[rdi],dx
   1400244b9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400244be:	outs   dx,BYTE PTR ds:[rsi]
   1400244bf:	rex push rcx
   1400244c1:	push   rsp
   1400244c2:	jb     0x140024529
   1400244c4:	gs push rsi
   1400244c6:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400244cd:	rex.B
   1400244ce:	pop    r8
   1400244d0:	rex.B
   1400244d1:	rex.RB
   1400244d2:	rex.X push rsi
   1400244d4:	push   rcx
   1400244d5:	push   rdx
   1400244d6:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   1400244db:	push   rsi
   1400244dc:	(bad)  
   1400244dd:	and    al,0x51
   1400244df:	rex.RX ins BYTE PTR es:[rdi],dx
   1400244e1:	(bad)  
   1400244e2:	addr32 jae 0x140024525
   1400244e5:	push   rdi
   1400244e6:	xor    al,0x53
   1400244e8:	gs ins BYTE PTR es:[rdi],dx
   1400244ea:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400244ef:	outs   dx,BYTE PTR ds:[rsi]
   1400244f0:	rex.RX ins BYTE PTR es:[rdi],dx
   1400244f2:	(bad)  
   1400244f3:	addr32 rex push rcx
   1400244f6:	rex.WB je 0x14002455e
   1400244f9:	ins    DWORD PTR es:[rdi],dx
   1400244fa:	push   rbx
   1400244fb:	gs ins BYTE PTR es:[rdi],dx
   1400244fd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140024502:	outs   dx,BYTE PTR ds:[rsi]
   140024503:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140024505:	fs gs ins BYTE PTR es:[rdi],dx
   140024508:	rex
   140024509:	rex
   14002450a:	rex
   14002450b:	rex
   14002450c:	rex pop rdx
   14002450e:	add    BYTE PTR [rax],al
   140024510:	(bad)  
   140024511:	and    DWORD PTR [rdi],edi
   140024513:	jbe    0x14002457e
   140024515:	jae    0x14002458c
   140024517:	(bad)  
   140024518:	ins    BYTE PTR es:[rdi],dx
   140024519:	push   rdx
   14002451a:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x53726f46
   140024523:	gs ins BYTE PTR es:[rdi],dx
   140024525:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002452a:	outs   dx,BYTE PTR ds:[rsi]
   14002452b:	rex push rcx
   14002452d:	push   rsp
   14002452e:	jb     0x140024595
   140024530:	gs push rsi
   140024532:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140024539:	rex.X
   14002453a:	rex.B (bad) 
   14002453c:	push   r14
   14002453e:	push   rcx
   14002453f:	push   rdx
   140024540:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x45414040
   140024549:	rex.X push rsi
   14002454b:	push   rcx
   14002454c:	rex.WB je 0x1400245b4
   14002454f:	ins    DWORD PTR es:[rdi],dx
   140024550:	push   rbx
   140024551:	gs ins BYTE PTR es:[rdi],dx
   140024553:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140024558:	outs   dx,BYTE PTR ds:[rsi]
   140024559:	rex
   14002455a:	rex
   14002455b:	rex pop rdx
   14002455d:	add    BYTE PTR [rsi+rdx*1+0x6c65733f],dl
   140024564:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140024569:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002456b:	fs gs js 0x1400245d4
   14002456f:	jae    0x1400245b1
   140024571:	push   rcx
   140024572:	push   rsp
   140024573:	jb     0x1400245da
   140024575:	gs push rsi
   140024577:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002457e:	rex.X
   14002457f:	rex.B (bad) 
   140024581:	push   r14
   140024583:	(bad)  
   140024584:	and    al,0x51
   140024586:	imul   r14,QWORD PTR [rbx+0x74],0x4d515640
   14002458e:	outs   dx,DWORD PTR ds:[rsi]
   14002458f:	fs gs ins BYTE PTR es:[rdi],dx
   140024592:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140024594:	fs gs js 0x1400245d8
   140024598:	rex
   140024599:	rex
   14002459a:	rex pop rax
   14002459c:	pop    rdx
   14002459d:	add    BYTE PTR [rsi+0x65733f16],ch
   1400245a3:	ins    BYTE PTR es:[rdi],dx
   1400245a4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400245a9:	outs   dx,BYTE PTR ds:[rsi]
   1400245aa:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400245ac:	ins    DWORD PTR es:[rdi],dx
   1400245ad:	ins    DWORD PTR es:[rdi],dx
   1400245ae:	(bad)  
   1400245af:	outs   dx,BYTE PTR ds:[rsi]
   1400245b0:	fs rex push rcx
   1400245b3:	(bad)
   1400245b9:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400245bd:	gs ins DWORD PTR es:[rdi],dx
   1400245bf:	push   rsi
   1400245c0:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400245c7:	rex.X
   1400245c8:	rex.B (bad) 
   1400245ca:	push   r14
   1400245cc:	(bad)  
   1400245cd:	and    al,0x51
   1400245cf:	rex.RX ins BYTE PTR es:[rdi],dx
   1400245d1:	(bad)  
   1400245d2:	addr32 jae 0x140024615
   1400245d5:	push   rdi
   1400245d6:	xor    al,0x53
   1400245d8:	gs ins BYTE PTR es:[rdi],dx
   1400245da:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400245df:	outs   dx,BYTE PTR ds:[rsi]
   1400245e0:	rex.RX ins BYTE PTR es:[rdi],dx
   1400245e2:	(bad)  
   1400245e3:	addr32 rex push rcx
   1400245e6:	rex.WB je 0x14002464e
   1400245e9:	ins    DWORD PTR es:[rdi],dx
   1400245ea:	push   rbx
   1400245eb:	gs ins BYTE PTR es:[rdi],dx
   1400245ed:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400245f2:	outs   dx,BYTE PTR ds:[rsi]
   1400245f3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400245f5:	fs gs ins BYTE PTR es:[rdi],dx
   1400245f8:	rex
   1400245f9:	rex
   1400245fa:	rex
   1400245fb:	rex
   1400245fc:	rex.B
   1400245fd:	rex.RB
   1400245fe:	rex.X push rsi
   140024600:	push   rcx
   140024601:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140024603:	fs gs ins BYTE PTR es:[rdi],dx
   140024606:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140024608:	fs gs js 0x14002464c
   14002460c:	rex push rax
   14002460e:	rex.RB
   14002460f:	rex.X push rsi
   140024611:	push   rcx
   140024612:	rex.RB jbe 0x14002467a
   140024615:	outs   dx,BYTE PTR ds:[rsi]
   140024616:	je     0x140024658
   140024618:	rex
   140024619:	rex pop rdx
   14002461b:	add    BYTE PTR [rax],ah
   14002461d:	sbb    eax,0x6174733f
   140024622:	jb     0x140024698
   140024624:	rex.R jb 0x140024688
   140024627:	addr32 rex push rcx
   14002462a:	(bad)
   140024630:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140024634:	gs ins DWORD PTR es:[rdi],dx
   140024636:	push   rsi
   140024637:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002463e:	rex.B
   14002463f:	pop    r8
   140024641:	push   rsi
   140024642:	(bad)  
   140024643:	and    al,0x51
   140024645:	rex.RX ins BYTE PTR es:[rdi],dx
   140024647:	(bad)  
   140024648:	addr32 jae 0x14002468b
   14002464b:	push   rdi
   14002464c:	xor    al,0x44
   14002464e:	jb     0x1400246bf
   140024650:	jo     0x140024693
   140024652:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140024656:	outs   dx,BYTE PTR ds:[rsi]
   140024657:	rex push rcx
   140024659:	je     0x14002469b
   14002465b:	rex
   14002465c:	rex
   14002465d:	rex
   14002465e:	rex pop rdx
   140024660:	add    BYTE PTR [rax],al
   140024662:	out    0x20,al
   140024664:	(bad)  
   140024665:	jbe    0x1400246d0
   140024667:	gs ja  0x1400246b9
   14002466a:	jo     0x1400246e0
   14002466c:	imul   ebp,DWORD PTR [rdi+0x6e],0x41514073
   140024673:	(bad)
   140024678:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14002467c:	gs ins DWORD PTR es:[rdi],dx
   14002467e:	push   rsi
   14002467f:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140024686:	rex.X
   140024687:	rex.B (bad) 
   140024689:	push   r14
   14002468b:	push   rcx
   14002468c:	push   rbx
   14002468d:	je     0x140024708
   14002468f:	ins    BYTE PTR es:[rdi],dx
   140024690:	gs rex.WRXB jo 0x140024708
   140024694:	imul   ebp,DWORD PTR [rdi+0x6e],0x77656956
   14002469b:	rex.WB je 0x140024703
   14002469e:	ins    DWORD PTR es:[rdi],dx
   14002469f:	rex
   1400246a0:	rex pop rax
   1400246a2:	pop    rdx
   1400246a3:	add    BYTE PTR [rdx+0xa],bl
   1400246a6:	(bad)  
   1400246a7:	fs jb  0x14002470b
   1400246aa:	ja     0x1400246fe
   1400246ac:	outs   dx,DWORD PTR ds:[rsi]
   1400246ad:	ja     0x1400246ef
   1400246af:	push   rcx
   1400246b0:	push   rsp
   1400246b1:	jb     0x140024718
   1400246b3:	gs push rsi
   1400246b5:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400246bc:	rex.X
   1400246bd:	pop    r8
   1400246bf:	push   rax
   1400246c0:	rex.RB
   1400246c1:	push   r14
   1400246c3:	push   rcx
   1400246c4:	push   rax
   1400246c5:	(bad)  
   1400246c6:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   1400246cd:	rex.B
   1400246ce:	rex.RB
   1400246cf:	rex.X push rsi
   1400246d1:	push   rcx
   1400246d2:	push   rbx
   1400246d3:	je     0x14002474e
   1400246d5:	ins    BYTE PTR es:[rdi],dx
   1400246d6:	gs rex.WRXB jo 0x14002474e
   1400246da:	imul   ebp,DWORD PTR [rdi+0x6e],0x77656956
   1400246e1:	rex.WB je 0x140024749
   1400246e4:	ins    DWORD PTR es:[rdi],dx
   1400246e5:	rex
   1400246e6:	rex
   1400246e7:	rex.B
   1400246e8:	rex.RB
   1400246e9:	rex.X push rsi
   1400246eb:	push   rcx
   1400246ec:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400246ee:	fs gs ins BYTE PTR es:[rdi],dx
   1400246f1:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400246f3:	fs gs js 0x140024737
   1400246f7:	rex
   1400246f8:	rex pop rdx
   1400246fa:	add    BYTE PTR [rax],al
   1400246fc:	or     r15b,BYTE PTR [rdi]
   1400246ff:	fs jb  0x140024763
   140024702:	ja     0x140024746
   140024704:	jb     0x140024767
   140024706:	outs   dx,BYTE PTR ds:[rsi]
   140024707:	movsxd ebp,DWORD PTR [rax+0x65]
   14002470a:	jae    0x14002474c
   14002470c:	push   rcx
   14002470d:	push   rsp
   14002470e:	jb     0x140024775
   140024710:	gs push rsi
   140024712:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140024719:	rex.X
   14002471a:	pop    r8
   14002471c:	push   rax
   14002471d:	rex.RB
   14002471e:	push   r14
   140024720:	push   rcx
   140024721:	push   rax
   140024722:	(bad)  
   140024723:	imul   ebp,DWORD PTR [rsi+0x74],0x40407265
   14002472a:	rex.B
   14002472b:	rex.RB
   14002472c:	rex.X push rsi
   14002472e:	push   rcx
   14002472f:	push   rdx
   140024730:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140024735:	rex.B
   140024736:	rex.RB
   140024737:	rex.X push rsi
   140024739:	push   rcx
   14002473a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002473c:	fs gs ins BYTE PTR es:[rdi],dx
   14002473f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140024741:	fs gs js 0x140024785
   140024745:	rex
   140024746:	rex pop rdx
   140024748:	add    BYTE PTR [rax],al
   14002474a:	out    0x10,al
   14002474c:	(bad)  
   14002474d:	ins    DWORD PTR es:[rdi],dx
   14002474e:	imul   ebp,DWORD PTR [rbp+0x65],0x65707954
   140024755:	jae    0x140024797
   140024757:	push   rcx
   140024758:	push   rsp
   140024759:	jb     0x1400247c0
   14002475b:	gs push rdi
   14002475d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140024765:	rex.RB
   140024766:	rex.X
   140024767:	rex.B (bad) 
   140024769:	push   r14
   14002476b:	push   rcx
   14002476c:	push   rbx
   14002476d:	je     0x1400247e1
   14002476f:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140024776:	rex
   140024777:	rex pop rax
   140024779:	pop    rdx
   14002477a:	add    BYTE PTR [rax],al
   14002477c:	loopne 0x14002478e
   14002477e:	(bad)  
   14002477f:	ins    DWORD PTR es:[rdi],dx
   140024780:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   140024787:	rex push rcx
   140024789:	push   rsp
   14002478a:	jb     0x1400247f1
   14002478c:	gs push rdi
   14002478e:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   140024796:	rex.RB
   140024797:	rex.X
   140024798:	push   r8
   14002479a:	rex.RB
   14002479b:	push   r14
   14002479d:	push   rcx
   14002479e:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   1400247a6:	rex
   1400247a7:	rex push rsi
   1400247a9:	(bad)  
   1400247aa:	and    al,0x51
   1400247ac:	imul   r14,QWORD PTR [rbx+0x74],0x41455040
   1400247b4:	push   rsi
   1400247b5:	push   rcx
   1400247b6:	push   rsp
   1400247b7:	jb     0x14002481e
   1400247b9:	gs push rdi
   1400247bb:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   1400247c3:	ins    DWORD PTR es:[rdi],dx
   1400247c4:	rex
   1400247c5:	rex
   1400247c6:	rex
   1400247c7:	rex
   1400247c8:	rex pop rdx
   1400247ca:	add    BYTE PTR [rax],al
   1400247cc:	jae    0x1400247d8
   1400247ce:	(bad)  
   1400247cf:	fs jb  0x140024841
   1400247d2:	jo     0x140024821
   1400247d4:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   1400247db:	rex push rcx
   1400247dd:	push   rsp
   1400247de:	jb     0x140024845
   1400247e0:	gs push rdi
   1400247e2:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   1400247ea:	rex.RB
   1400247eb:	rex.B
   1400247ec:	pop    r15
   1400247ee:	rex.WRX push rax
   1400247f0:	rex.RB
   1400247f1:	push   r14
   1400247f3:	push   rcx
   1400247f4:	push   rsp
   1400247f5:	jb     0x14002485c
   1400247f7:	gs push rdi
   1400247f9:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024801:	ins    DWORD PTR es:[rdi],dx
   140024802:	rex
   140024803:	rex
   140024804:	rex.W push rax
   140024806:	rex.RB
   140024807:	rex.X push rsi
   140024809:	push   rcx
   14002480a:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   140024812:	rex
   140024813:	rex push rdi
   140024815:	xor    al,0x44
   140024817:	jb     0x140024888
   140024819:	jo     0x14002485c
   14002481b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14002481f:	outs   dx,BYTE PTR ds:[rsi]
   140024820:	rex push rcx
   140024822:	je     0x140024864
   140024824:	rex
   140024825:	rex pop rdx
   140024827:	add    cl,dh
   140024829:	sbb    eax,0x7075733f
   14002482e:	jo     0x14002489f
   140024830:	jb     0x1400248a6
   140024832:	gs fs rex.R jb 0x1400248a6
   140024837:	jo     0x14002487a
   140024839:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14002483d:	outs   dx,BYTE PTR ds:[rsi]
   14002483e:	jae    0x140024880
   140024840:	push   rcx
   140024841:	push   rsp
   140024842:	jb     0x1400248a9
   140024844:	gs push rdi
   140024846:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x4d404074
   14002484e:	rex.RB
   14002484f:	rex.X
   140024850:	rex.B (bad) 
   140024852:	push   r14
   140024854:	(bad)  
   140024855:	and    al,0x51
   140024857:	rex.RX ins BYTE PTR es:[rdi],dx
   140024859:	(bad)  
   14002485a:	addr32 jae 0x14002489d
   14002485d:	push   rdi
   14002485e:	xor    al,0x44
   140024860:	jb     0x1400248d1
   140024862:	jo     0x1400248a5
   140024864:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140024868:	outs   dx,BYTE PTR ds:[rsi]
   140024869:	rex push rcx
   14002486b:	je     0x1400248ad
   14002486d:	rex
   14002486e:	rex
   14002486f:	rex pop rax
   140024871:	pop    rdx
   140024872:	add    BYTE PTR [rax],al
   140024874:	test   al,0x10
   140024876:	(bad)  
   140024877:	ins    DWORD PTR es:[rdi],dx
   140024878:	gs je  0x1400248dc
   14002487b:	rex.WRXB (bad) 
   14002487d:	push   0x65
   14002487f:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140024883:	push   rax
   140024884:	jne    0x1400248f9
   140024886:	push   0x74747542
   14002488b:	outs   dx,DWORD PTR ds:[rsi]
   14002488c:	outs   dx,BYTE PTR ds:[rsi]
   14002488d:	rex
   14002488e:	rex push rbp
   140024890:	rex.RB
   140024891:	rex.X
   140024892:	push   r8
   140024894:	rex.RB
   140024895:	rex.X push rbp
   140024897:	push   rcx
   140024898:	rex.WRB
   140024899:	gs je  0x1400248fd
   14002489c:	rex.WRXB (bad) 
   14002489e:	push   0x65
   1400248a0:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400248a4:	pop    rax
   1400248a5:	pop    rdx
   1400248a6:	add    BYTE PTR [rax],al
   1400248a8:	sbb    edx,DWORD PTR [rdi+rdi*1]
   1400248ab:	jno    0x140024921
   1400248ad:	pop    rdi
   1400248ae:	ins    DWORD PTR es:[rdi],dx
   1400248af:	gs je  0x140024913
   1400248b2:	movsxd esp,DWORD PTR [rcx+0x73]
   1400248b5:	je     0x1400248f7
   1400248b7:	push   rcx
   1400248b8:	push   rax
   1400248b9:	jne    0x14002492e
   1400248bb:	push   0x74747542
   1400248c0:	outs   dx,DWORD PTR ds:[rsi]
   1400248c1:	outs   dx,BYTE PTR ds:[rsi]
   1400248c2:	rex
   1400248c3:	rex push rbp
   1400248c5:	rex.RB
   1400248c6:	rex.B
   1400248c7:	push   r8
   1400248c9:	rex.RB
   1400248ca:	pop    r8
   1400248cc:	push   rax
   1400248cd:	rex.RB
   1400248ce:	rex.X
   1400248cf:	rex.R
   1400248d0:	rex pop rdx
   1400248d2:	add    BYTE PTR [rax],al
   1400248d4:	xchg   ecx,eax
   1400248d5:	adc    edi,DWORD PTR [rdi]
   1400248d7:	jno    0x14002494d
   1400248d9:	pop    rdi
   1400248da:	ins    DWORD PTR es:[rdi],dx
   1400248db:	gs je  0x14002493f
   1400248de:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400248e1:	ins    BYTE PTR es:[rdi],dx
   1400248e2:	rex push rcx
   1400248e4:	push   rax
   1400248e5:	jne    0x14002495a
   1400248e7:	push   0x74747542
   1400248ec:	outs   dx,DWORD PTR ds:[rsi]
   1400248ed:	outs   dx,BYTE PTR ds:[rsi]
   1400248ee:	rex
   1400248ef:	rex push rbp
   1400248f1:	rex.RB
   1400248f2:	rex.B
   1400248f3:	rex.B
   1400248f4:	rex.W push rdi
   1400248f6:	xor    al,0x43
   1400248f8:	(bad)  
   1400248f9:	ins    BYTE PTR es:[rdi],dx
   1400248fa:	ins    BYTE PTR es:[rdi],dx
   1400248fb:	rex push rcx
   1400248fd:	rex.WRB
   1400248fe:	gs je  0x140024962
   140024901:	rex.WRXB (bad) 
   140024903:	push   0x65
   140024905:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140024909:	rex.W push rax
   14002490b:	rex.RB
   14002490c:	push   r8
   14002490e:	rex.RB
   14002490f:	pop    r8
   140024911:	rex pop rdx
   140024913:	add    bl,ah
   140024915:	or     bh,BYTE PTR [rdi]
   140024917:	gs jbe 0x14002497f
   14002491a:	outs   dx,BYTE PTR ds:[rsi]
   14002491b:	je     0x14002495d
   14002491d:	push   rcx
   14002491e:	push   rax
   14002491f:	jne    0x140024994
   140024921:	push   0x74747542
   140024926:	outs   dx,DWORD PTR ds:[rsi]
   140024927:	outs   dx,BYTE PTR ds:[rsi]
   140024928:	rex
   140024929:	rex
   14002492a:	rex.WRB
   14002492b:	rex.RB
   14002492c:	rex.B
   14002492d:	pop    r15
   14002492f:	rex.WRX push rax
   140024931:	rex.RB
   140024932:	push   r14
   140024934:	push   rcx
   140024935:	rex.RB jbe 0x14002499d
   140024938:	outs   dx,BYTE PTR ds:[rsi]
   140024939:	je     0x14002497b
   14002493b:	rex
   14002493c:	rex pop rdx
   14002493e:	add    BYTE PTR [rax],al
   140024940:	xchg   esp,eax
   140024941:	(bad)  
   140024942:	(bad)  
   140024943:	je     0x1400249ae
   140024945:	ins    DWORD PTR es:[rdi],dx
   140024946:	gs jb  0x14002498e
   140024949:	jbe    0x1400249b0
   14002494b:	outs   dx,BYTE PTR ds:[rsi]
   14002494c:	je     0x14002498e
   14002494e:	push   rcx
   14002494f:	(bad)
   140024955:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140024959:	je     0x1400249cf
   14002495b:	outs   dx,DWORD PTR ds:[rsi]
   14002495c:	outs   dx,BYTE PTR ds:[rsi]
   14002495d:	rex
   14002495e:	rex
   14002495f:	rex.WRB
   140024960:	rex.RB
   140024961:	rex.B
   140024962:	pop    r8
   140024964:	push   rax
   140024965:	rex.RB
   140024966:	push   r14
   140024968:	push   rcx
   140024969:	push   rsp
   14002496a:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   140024971:	outs   dx,BYTE PTR ds:[rsi]
   140024972:	je     0x1400249b4
   140024974:	rex
   140024975:	rex pop rdx
   140024977:	add    BYTE PTR [rbx+0x69733f1c],dh
   14002497d:	jp     0x1400249e4
   14002497f:	imul   rbp,QWORD PTR [rsi+0x74],0x75505140
   140024987:	jae    0x1400249f1
   140024989:	rex.X jne 0x140024a00
   14002498c:	je     0x1400249fd
   14002498e:	outs   dx,BYTE PTR ds:[rsi]
   14002498f:	rex
   140024990:	rex push rbp
   140024992:	rex.RB
   140024993:	rex.X
   140024994:	rex.B (bad) 
   140024996:	push   r14
   140024998:	push   rcx
   140024999:	push   rbx
   14002499a:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400249a1:	add    BYTE PTR [rbx],dl
   1400249a3:	adc    DWORD PTR [rdi],edi
   1400249a5:	ins    DWORD PTR es:[rdi],dx
   1400249a6:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   1400249ad:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   1400249b4:	rex push rcx
   1400249b6:	push   rax
   1400249b7:	jne    0x140024a2c
   1400249b9:	push   0x74747542
   1400249be:	outs   dx,DWORD PTR ds:[rsi]
   1400249bf:	outs   dx,BYTE PTR ds:[rsi]
   1400249c0:	rex
   1400249c1:	rex push rbp
   1400249c3:	rex.RB
   1400249c4:	rex.X
   1400249c5:	rex.B (bad) 
   1400249c7:	push   r14
   1400249c9:	push   rcx
   1400249ca:	push   rbx
   1400249cb:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   1400249d2:	add    BYTE PTR [rax],al
   1400249d4:	adc    DWORD PTR [edi],edi
   1400249d7:	ins    DWORD PTR es:[rdi],dx
   1400249d8:	outs   dx,DWORD PTR ds:[rsi]
   1400249d9:	jne    0x140024a4e
   1400249db:	gs push rax
   1400249dd:	jb     0x140024a44
   1400249df:	jae    0x140024a54
   1400249e1:	rex.RB jbe 0x140024a49
   1400249e4:	outs   dx,BYTE PTR ds:[rsi]
   1400249e5:	je     0x140024a27
   1400249e7:	push   rcx
   1400249e8:	(bad)
   1400249ee:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   1400249f2:	je     0x140024a68
   1400249f4:	outs   dx,DWORD PTR ds:[rsi]
   1400249f5:	outs   dx,BYTE PTR ds:[rsi]
   1400249f6:	rex
   1400249f7:	rex
   1400249f8:	rex.WRB
   1400249f9:	rex.RB
   1400249fa:	rex.B
   1400249fb:	pop    r8
   1400249fd:	push   rax
   1400249fe:	rex.RB
   1400249ff:	push   r14
   140024a01:	push   rcx
   140024a02:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140024a04:	jne    0x140024a79
   140024a06:	gs rex.RB jbe 0x140024a6f
   140024a0a:	outs   dx,BYTE PTR ds:[rsi]
   140024a0b:	je     0x140024a4d
   140024a0d:	rex
   140024a0e:	rex pop rdx
   140024a10:	add    BYTE PTR [rax],al
   140024a12:	xchg   DWORD PTR [rcx],edx
   140024a14:	(bad)  
   140024a15:	ins    DWORD PTR es:[rdi],dx
   140024a16:	outs   dx,DWORD PTR ds:[rsi]
   140024a17:	jne    0x140024a8c
   140024a19:	gs push rdx
   140024a1b:	gs ins BYTE PTR es:[rdi],dx
   140024a1d:	gs (bad) 
   140024a1f:	jae    0x140024a86
   140024a21:	rex.RB jbe 0x140024a89
   140024a24:	outs   dx,BYTE PTR ds:[rsi]
   140024a25:	je     0x140024a67
   140024a27:	push   rcx
   140024a28:	(bad)
   140024a2e:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140024a32:	je     0x140024aa8
   140024a34:	outs   dx,DWORD PTR ds:[rsi]
   140024a35:	outs   dx,BYTE PTR ds:[rsi]
   140024a36:	rex
   140024a37:	rex
   140024a38:	rex.WRB
   140024a39:	rex.RB
   140024a3a:	rex.B
   140024a3b:	pop    r8
   140024a3d:	push   rax
   140024a3e:	rex.RB
   140024a3f:	push   r14
   140024a41:	push   rcx
   140024a42:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140024a44:	jne    0x140024ab9
   140024a46:	gs rex.RB jbe 0x140024aaf
   140024a4a:	outs   dx,BYTE PTR ds:[rsi]
   140024a4b:	je     0x140024a8d
   140024a4d:	rex
   140024a4e:	rex pop rdx
   140024a50:	add    BYTE PTR [rax],al
   140024a52:	push   rbx
   140024a53:	(bad)  
   140024a55:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140024a59:	jb     0x140024ac0
   140024a5b:	jae    0x140024ad0
   140024a5d:	rex.RB jbe 0x140024ac5
   140024a60:	outs   dx,BYTE PTR ds:[rsi]
   140024a61:	je     0x140024aa3
   140024a63:	push   rcx
   140024a64:	push   rax
   140024a65:	jne    0x140024ada
   140024a67:	push   0x74747542
   140024a6c:	outs   dx,DWORD PTR ds:[rsi]
   140024a6d:	outs   dx,BYTE PTR ds:[rsi]
   140024a6e:	rex
   140024a6f:	rex
   140024a70:	rex.WRB
   140024a71:	rex.RB
   140024a72:	rex.B
   140024a73:	pop    r8
   140024a75:	push   rax
   140024a76:	rex.RB
   140024a77:	push   r14
   140024a79:	push   rcx
   140024a7a:	rex.WXB
   140024a7b:	gs jns 0x140024ac3
   140024a7e:	jbe    0x140024ae5
   140024a80:	outs   dx,BYTE PTR ds:[rsi]
   140024a81:	je     0x140024ac3
   140024a83:	rex
   140024a84:	rex pop rdx
   140024a86:	add    BYTE PTR [rax],al
   140024a88:	xchg   ecx,eax
   140024a89:	or     edi,DWORD PTR [rdi]
   140024a8b:	outs   dx,WORD PTR ds:[rsi]
   140024a8d:	movsxd esi,DWORD PTR [rbp+0x73]
   140024a90:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140024a92:	rex.RB jbe 0x140024afa
   140024a95:	outs   dx,BYTE PTR ds:[rsi]
   140024a96:	je     0x140024ad8
   140024a98:	push   rcx
   140024a99:	push   rax
   140024a9a:	jne    0x140024b0f
   140024a9c:	push   0x74747542
   140024aa1:	outs   dx,DWORD PTR ds:[rsi]
   140024aa2:	outs   dx,BYTE PTR ds:[rsi]
   140024aa3:	rex
   140024aa4:	rex
   140024aa5:	rex.WRB
   140024aa6:	rex.RB
   140024aa7:	rex.B
   140024aa8:	pop    r8
   140024aaa:	push   rax
   140024aab:	rex.RB
   140024aac:	push   r14
   140024aae:	push   rcx
   140024aaf:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140024ab1:	movsxd esi,DWORD PTR [rbp+0x73]
   140024ab4:	rex.RB jbe 0x140024b1c
   140024ab7:	outs   dx,BYTE PTR ds:[rsi]
   140024ab8:	je     0x140024afa
   140024aba:	rex
   140024abb:	rex pop rdx
   140024abd:	add    BYTE PTR [rsi+0x6f663f0b],dh
   140024ac3:	movsxd esi,DWORD PTR [rbp+0x73]
   140024ac6:	rex.WRXB jne 0x140024b3d
   140024ac9:	rex.RB jbe 0x140024b31
   140024acc:	outs   dx,BYTE PTR ds:[rsi]
   140024acd:	je     0x140024b0f
   140024acf:	push   rcx
   140024ad0:	push   rax
   140024ad1:	jne    0x140024b46
   140024ad3:	push   0x74747542
   140024ad8:	outs   dx,DWORD PTR ds:[rsi]
   140024ad9:	outs   dx,BYTE PTR ds:[rsi]
   140024ada:	rex
   140024adb:	rex
   140024adc:	rex.WRB
   140024add:	rex.RB
   140024ade:	rex.B
   140024adf:	pop    r8
   140024ae1:	push   rax
   140024ae2:	rex.RB
   140024ae3:	push   r14
   140024ae5:	push   rcx
   140024ae6:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140024ae8:	movsxd esi,DWORD PTR [rbp+0x73]
   140024aeb:	rex.RB jbe 0x140024b53
   140024aee:	outs   dx,BYTE PTR ds:[rsi]
   140024aef:	je     0x140024b31
   140024af1:	rex
   140024af2:	rex pop rdx
   140024af4:	add    BYTE PTR [rax],al
   140024af6:	push   0x61703f12
   140024afb:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140024b02:	je     0x140024b44
   140024b04:	push   rcx
   140024b05:	push   rax
   140024b06:	jne    0x140024b7b
   140024b08:	push   0x74747542
   140024b0d:	outs   dx,DWORD PTR ds:[rsi]
   140024b0e:	outs   dx,BYTE PTR ds:[rsi]
   140024b0f:	rex
   140024b10:	rex
   140024b11:	rex.WRB
   140024b12:	rex.RB
   140024b13:	rex.B
   140024b14:	pop    r8
   140024b16:	push   rax
   140024b17:	rex.RB
   140024b18:	push   r14
   140024b1a:	push   rcx
   140024b1b:	push   rax
   140024b1c:	(bad)  
   140024b1d:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140024b24:	je     0x140024b66
   140024b26:	rex
   140024b27:	rex pop rdx
   140024b29:	add    BYTE PTR [rdi+0x6],ch
   140024b2c:	(bad)  
   140024b2d:	movsxd ebp,DWORD PTR [rax+0x61]
   140024b30:	outs   dx,BYTE PTR ds:[rsi]
   140024b31:	addr32 gs rex.RB jbe 0x140024b9b
   140024b36:	outs   dx,BYTE PTR ds:[rsi]
   140024b37:	je     0x140024b79
   140024b39:	push   rcx
   140024b3a:	(bad)
   140024b40:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140024b44:	je     0x140024bba
   140024b46:	outs   dx,DWORD PTR ds:[rsi]
   140024b47:	outs   dx,BYTE PTR ds:[rsi]
   140024b48:	rex
   140024b49:	rex
   140024b4a:	rex.WRB
   140024b4b:	rex.RB
   140024b4c:	rex.B
   140024b4d:	pop    r8
   140024b4f:	push   rax
   140024b50:	rex.RB
   140024b51:	push   r14
   140024b53:	push   rcx
   140024b54:	rex.RB jbe 0x140024bbc
   140024b57:	outs   dx,BYTE PTR ds:[rsi]
   140024b58:	je     0x140024b9a
   140024b5a:	rex
   140024b5b:	rex pop rdx
   140024b5d:	add    BYTE PTR [rdx+0x69683f0c],bh
   140024b63:	je     0x140024ba7
   140024b65:	jne    0x140024bdb
   140024b67:	je     0x140024bd8
   140024b69:	outs   dx,BYTE PTR ds:[rsi]
   140024b6a:	rex push rcx
   140024b6c:	(bad)
   140024b72:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140024b76:	je     0x140024bec
   140024b78:	outs   dx,DWORD PTR ds:[rsi]
   140024b79:	outs   dx,BYTE PTR ds:[rsi]
   140024b7a:	rex
   140024b7b:	rex
   140024b7c:	rex.WRB
   140024b7d:	rex.RB
   140024b7e:	rex.X
   140024b7f:	pop    r15
   140024b81:	rex.WRX
   140024b82:	rex.B
   140024b83:	rex.RB
   140024b84:	rex.X push rsi
   140024b86:	push   rcx
   140024b87:	push   rax
   140024b88:	outs   dx,DWORD PTR ds:[rsi]
   140024b89:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   140024b90:	add    BYTE PTR [rax],al
   140024b92:	(bad)  
   140024b93:	adc    DWORD PTR [rdi],edi
   140024b95:	outs   dx,BYTE PTR ds:[rsi]
   140024b96:	gs js  0x140024c0d
   140024b99:	rex.XB push 0x536b6365
   140024b9f:	je     0x140024c02
   140024ba1:	je     0x140024c08
   140024ba3:	rex push rcx
   140024ba5:	(bad)
   140024bab:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140024baf:	je     0x140024c25
   140024bb1:	outs   dx,DWORD PTR ds:[rsi]
   140024bb2:	outs   dx,BYTE PTR ds:[rsi]
   140024bb3:	rex
   140024bb4:	rex
   140024bb5:	rex.WRB
   140024bb6:	rex.RB
   140024bb7:	rex.B
   140024bb8:	pop    r8
   140024bba:	pop    rax
   140024bbb:	pop    rdx
   140024bbc:	add    BYTE PTR [rax],al
   140024bbe:	add    al,0x2
   140024bc0:	(bad)  
   140024bc1:	(bad)  
   140024bc2:	xor    DWORD PTR [rcx+0x47],edx
   140024bc5:	jb     0x140024c36
   140024bc7:	jne    0x140024c39
   140024bc9:	rex.X outs dx,DWORD PTR ds:[rsi]
   140024bcb:	js     0x140024c0d
   140024bcd:	rex push rbp
   140024bcf:	rex.RB
   140024bd0:	rex.B
   140024bd1:	rex.B
   140024bd2:	rex pop rax
   140024bd4:	pop    rdx
   140024bd5:	add    BYTE PTR [rdx+rax*1+0x3f],ch
   140024bd9:	(bad)  
   140024bda:	xor    DWORD PTR [rcx+0x54],edx
   140024bdd:	jb     0x140024c44
   140024bdf:	gs push rdi
   140024be1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140024be9:	rex.RB
   140024bea:	rex.B
   140024beb:	rex.B
   140024bec:	rex pop rax
   140024bee:	pop    rdx
   140024bef:	add    BYTE PTR [rdx],ch
   140024bf1:	add    bh,BYTE PTR [rdi]
   140024bf3:	(bad)  
   140024bf4:	xor    DWORD PTR [rcx+0x50],edx
   140024bf7:	jne    0x140024c6c
   140024bf9:	push   0x74747542
   140024bfe:	outs   dx,DWORD PTR ds:[rsi]
   140024bff:	outs   dx,BYTE PTR ds:[rsi]
   140024c00:	rex
   140024c01:	rex push rbp
   140024c03:	rex.RB
   140024c04:	rex.B
   140024c05:	rex.B
   140024c06:	rex pop rax
   140024c08:	pop    rdx
   140024c09:	add    BYTE PTR [rdx+rcx*1+0x3f],bh
   140024c0d:	gs imul esi,DWORD PTR fs:[rcx+rcx*2+0x74],0x51406d65
   140024c17:	push   rsp
   140024c18:	jb     0x140024c7f
   140024c1a:	gs push rdi
   140024c1c:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140024c24:	rex.RB
   140024c25:	rex.B
   140024c26:	pop    r8
   140024c28:	push   rax
   140024c29:	rex.RB
   140024c2a:	push   r14
   140024c2c:	push   rcx
   140024c2d:	push   rsp
   140024c2e:	jb     0x140024c95
   140024c30:	gs push rdi
   140024c32:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024c3a:	ins    DWORD PTR es:[rdi],dx
   140024c3b:	rex
   140024c3c:	rex
   140024c3d:	rex.W
   140024c3e:	rex pop rdx
   140024c40:	add    BYTE PTR [rax],al
   140024c42:	push   rsi
   140024c43:	sbb    BYTE PTR [rdi],bh
   140024c45:	jae    0x140024cac
   140024c47:	je     0x140024c8f
   140024c49:	ins    BYTE PTR es:[rdi],dx
   140024c4a:	(bad)  
   140024c4b:	addr32 jae 0x140024c8e
   140024c4e:	push   rcx
   140024c4f:	push   rsp
   140024c50:	jb     0x140024cb7
   140024c52:	gs push rdi
   140024c54:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024c5c:	ins    DWORD PTR es:[rdi],dx
   140024c5d:	rex
   140024c5e:	rex push rcx
   140024c60:	rex.RB
   140024c61:	rex.B
   140024c62:	pop    r8
   140024c64:	push   rsi
   140024c65:	(bad)  
   140024c66:	and    al,0x51
   140024c68:	rex.RX ins BYTE PTR es:[rdi],dx
   140024c6a:	(bad)  
   140024c6b:	addr32 jae 0x140024cae
   140024c6e:	push   rdi
   140024c6f:	xor    al,0x49
   140024c71:	je     0x140024cd8
   140024c73:	ins    DWORD PTR es:[rdi],dx
   140024c74:	rex.RX ins BYTE PTR es:[rdi],dx
   140024c76:	(bad)  
   140024c77:	addr32 rex push rcx
   140024c7a:	je     0x140024cbc
   140024c7c:	rex
   140024c7d:	rex
   140024c7e:	rex
   140024c7f:	rex pop rdx
   140024c81:	add    BYTE PTR [rbp+0x303f3f01],al
   140024c87:	push   rcx
   140024c88:	push   rsp
   140024c89:	jb     0x140024cf0
   140024c8b:	gs push rdi
   140024c8d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024c95:	ins    DWORD PTR es:[rdi],dx
   140024c96:	rex
   140024c97:	rex push rcx
   140024c99:	rex.RB
   140024c9a:	rex.B
   140024c9b:	rex.B
   140024c9c:	rex push rax
   140024c9e:	rex.RB
   140024c9f:	push   r14
   140024ca1:	push   rcx
   140024ca2:	push   rsp
   140024ca3:	jb     0x140024d0a
   140024ca5:	gs push rdi
   140024ca7:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x48404074
   140024caf:	rex pop rdx
   140024cb1:	add    BYTE PTR [rdi+rax*1],al
   140024cb4:	(bad)  
   140024cb5:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x6e]
   140024cb9:	gs rex push rcx
   140024cbc:	push   rsp
   140024cbd:	jb     0x140024d24
   140024cbf:	gs push rdi
   140024cc1:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024cc9:	ins    DWORD PTR es:[rdi],dx
   140024cca:	rex
   140024ccb:	rex push rbp
   140024ccd:	rex.RB
   140024cce:	rex.X
   140024ccf:	push   r8
   140024cd1:	rex.RB
   140024cd2:	push   r14
   140024cd4:	xor    DWORD PTR [rax+0x58],eax
   140024cd7:	pop    rdx
   140024cd8:	add    BYTE PTR [rax],al
   140024cda:	xchg   ebp,eax
   140024cdb:	or     DWORD PTR [rdi],edi
   140024cdd:	fs (bad) 
   140024cdf:	je     0x140024d42
   140024ce1:	rex push rcx
   140024ce3:	push   rsp
   140024ce4:	jb     0x140024d4b
   140024ce6:	gs push rdi
   140024ce8:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024cf0:	ins    DWORD PTR es:[rdi],dx
   140024cf1:	rex
   140024cf2:	rex push rbp
   140024cf4:	rex.RB
   140024cf5:	rex.X
   140024cf6:	rex.B (bad) 
   140024cf8:	push   r14
   140024cfa:	push   rcx
   140024cfb:	push   rsi
   140024cfc:	(bad)  
   140024cfd:	jb     0x140024d68
   140024cff:	(bad)  
   140024d00:	outs   dx,BYTE PTR ds:[rsi]
   140024d01:	je     0x140024d43
   140024d03:	rex
   140024d04:	rex.W
   140024d05:	rex.W
   140024d06:	rex pop rdx
   140024d08:	add    BYTE PTR [rax],al
   140024d0a:	(bad)  
   140024d0b:	(bad)  
   140024d0c:	(bad)  
   140024d0d:	jae    0x140024d74
   140024d0f:	je     0x140024d55
   140024d11:	(bad)  
   140024d12:	je     0x140024d75
   140024d14:	rex push rcx
   140024d16:	push   rsp
   140024d17:	jb     0x140024d7e
   140024d19:	gs push rdi
   140024d1b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024d23:	ins    DWORD PTR es:[rdi],dx
   140024d24:	rex
   140024d25:	rex push rbp
   140024d27:	rex.RB
   140024d28:	rex.B
   140024d29:	pop    r8
   140024d2b:	rex.W
   140024d2c:	rex.W
   140024d2d:	rex.B
   140024d2e:	rex.RB
   140024d2f:	rex.X push rsi
   140024d31:	push   rcx
   140024d32:	push   rsi
   140024d33:	(bad)  
   140024d34:	jb     0x140024d9f
   140024d36:	(bad)  
   140024d37:	outs   dx,BYTE PTR ds:[rsi]
   140024d38:	je     0x140024d7a
   140024d3a:	rex
   140024d3b:	rex pop rdx
   140024d3d:	add    bh,dl
   140024d3f:	add    bh,BYTE PTR [rdi]
   140024d41:	(bad)  
   140024d42:	rex.WRB push r9
   140024d44:	push   rsp
   140024d45:	jb     0x140024dac
   140024d47:	gs push rdi
   140024d49:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024d51:	ins    DWORD PTR es:[rdi],dx
   140024d52:	rex
   140024d53:	rex push rbp
   140024d55:	rex.RB
   140024d56:	rex.X
   140024d57:	pop    r15
   140024d59:	rex.WRX
   140024d5a:	rex.B
   140024d5b:	rex.RB
   140024d5c:	rex.X push rsi
   140024d5e:	xor    BYTE PTR [rax+0x40],al
   140024d61:	pop    rdx
   140024d62:	add    BYTE PTR [rax],al
   140024d64:	in     eax,0x14
   140024d66:	(bad)  
   140024d67:	jb     0x140024dce
   140024d69:	(bad)  
   140024d6a:	fs rex push rcx
   140024d6d:	push   rsp
   140024d6e:	jb     0x140024dd5
   140024d70:	gs push rdi
   140024d72:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024d7a:	ins    DWORD PTR es:[rdi],dx
   140024d7b:	rex
   140024d7c:	rex push rbp
   140024d7e:	rex.RB
   140024d7f:	rex.B
   140024d80:	pop    r8
   140024d82:	rex.B
   140024d83:	rex.RB
   140024d84:	push   r14
   140024d86:	push   rcx
   140024d87:	rex.R (bad) 
   140024d89:	je     0x140024dec
   140024d8b:	push   rbx
   140024d8c:	je     0x140024e00
   140024d8e:	gs (bad) 
   140024d90:	ins    DWORD PTR es:[rdi],dx
   140024d91:	rex
   140024d92:	rex
   140024d93:	rex pop rdx
   140024d95:	add    BYTE PTR [rsi+0x72773f21],al
   140024d9b:	imul   esi,DWORD PTR [rbp+riz*2+0x40],0x65725451
   140024da3:	gs push rdi
   140024da5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024dad:	ins    DWORD PTR es:[rdi],dx
   140024dae:	rex
   140024daf:	rex push rbp
   140024db1:	rex.RB
   140024db2:	rex.X
   140024db3:	pop    r8
   140024db5:	rex.B
   140024db6:	rex.RB
   140024db7:	push   r14
   140024db9:	push   rcx
   140024dba:	rex.R (bad) 
   140024dbc:	je     0x140024e1f
   140024dbe:	push   rbx
   140024dbf:	je     0x140024e33
   140024dc1:	gs (bad) 
   140024dc3:	ins    DWORD PTR es:[rdi],dx
   140024dc4:	rex
   140024dc5:	rex
   140024dc6:	rex pop rdx
   140024dc8:	add    BYTE PTR [rax],al
   140024dca:	ins    DWORD PTR es:[rdi],dx
   140024dcb:	add    bh,BYTE PTR [rdi]
   140024dcd:	(bad)  
   140024dce:	xor    DWORD PTR [rcx+0x54],edx
   140024dd1:	jb     0x140024e38
   140024dd3:	gs push rdi
   140024dd5:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024ddd:	ins    DWORD PTR es:[rdi],dx
   140024dde:	rex
   140024ddf:	rex push rbp
   140024de1:	rex.RB
   140024de2:	rex.B
   140024de3:	rex.B
   140024de4:	rex pop rax
   140024de6:	pop    rdx
   140024de7:	add    BYTE PTR [rdx+0x1a],ch
   140024dea:	(bad)  
   140024deb:	jae    0x140024e52
   140024ded:	je     0x140024e41
   140024def:	outs   dx,DWORD PTR ds:[rsi]
   140024df0:	outs   dx,DWORD PTR ds:[rsi]
   140024df1:	je     0x140024e3c
   140024df3:	jae    0x140024e39
   140024df5:	movsxd ebp,DWORD PTR gs:[rdi+0x72]
   140024df9:	(bad)  
   140024dfa:	je     0x140024e61
   140024dfc:	fs rex push rcx
   140024dff:	push   rsp
   140024e00:	jb     0x140024e67
   140024e02:	gs push rsi
   140024e04:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   140024e0b:	rex.B
   140024e0c:	pop    r8
   140024e0e:	pop    rdi
   140024e0f:	rex.WRX
   140024e10:	rex pop rdx
   140024e12:	add    BYTE PTR [rax],al
   140024e14:	pop    rbx
   140024e15:	(bad)  
   140024e16:	(bad)  
   140024e17:	je     0x140024e7e
   140024e19:	js     0x140024e8f
   140024e1b:	rex push rcx
   140024e1d:	push   rsp
   140024e1e:	jb     0x140024e85
   140024e20:	gs push rdi
   140024e22:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024e2a:	ins    DWORD PTR es:[rdi],dx
   140024e2b:	rex
   140024e2c:	rex push rcx
   140024e2e:	rex.RB
   140024e2f:	rex.X
   140024e30:	rex.B (bad) 
   140024e32:	push   r14
   140024e34:	push   rcx
   140024e35:	push   rbx
   140024e36:	je     0x140024eaa
   140024e38:	imul   ebp,DWORD PTR [rsi+0x67],0x40484040
   140024e3f:	pop    rdx
   140024e40:	add    BYTE PTR [rax],al
   140024e42:	fstp   DWORD PTR [rsi]
   140024e44:	(bad)  
   140024e45:	je     0x140024eb6
   140024e47:	jo     0x140024e95
   140024e49:	gs jbe 0x140024eb1
   140024e4c:	ins    BYTE PTR es:[rdi],dx
   140024e4d:	rex.WB je 0x140024eb5
   140024e50:	ins    DWORD PTR es:[rdi],dx
   140024e51:	rex push rcx
   140024e53:	push   rsp
   140024e54:	jb     0x140024ebb
   140024e56:	gs push rdi
   140024e58:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140024e60:	rex.RB
   140024e61:	rex.X
   140024e62:	push   r8
   140024e64:	rex.RB
   140024e65:	push   r14
   140024e67:	push   rcx
   140024e68:	push   rsp
   140024e69:	jb     0x140024ed0
   140024e6b:	gs push rdi
   140024e6d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140024e75:	ins    DWORD PTR es:[rdi],dx
   140024e76:	rex
   140024e77:	rex
   140024e78:	rex.W
   140024e79:	rex pop rdx
   140024e7b:	add    BYTE PTR [rdi],dl
   140024e7d:	(bad)  
   140024e7e:	(bad)  
   140024e7f:	imul   esi,DWORD PTR [rbx+0x43],0x6b636568
   140024e86:	gs fs rex push rcx
   140024e8a:	(bad)
   140024e90:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   140024e94:	je     0x140024f0a
   140024e96:	outs   dx,DWORD PTR ds:[rsi]
   140024e97:	outs   dx,BYTE PTR ds:[rsi]
   140024e98:	rex
   140024e99:	rex push rcx
   140024e9b:	rex.RB
   140024e9c:	rex.X
   140024e9d:	pop    r15
   140024e9f:	rex.WRX pop rax
   140024ea1:	pop    rdx
   140024ea2:	add    BYTE PTR [rax],al
   140024ea4:	and    bl,BYTE PTR [rax]
   140024ea6:	(bad)  
   140024ea7:	jae    0x140024f0e
   140024ea9:	je     0x140024ef0
   140024eab:	outs   dx,BYTE PTR ds:[rsi]
   140024eac:	(bad)  
   140024ead:	(bad)  
   140024eae:	ins    BYTE PTR es:[rdi],dx
   140024eaf:	gs fs rex push rcx
   140024eb3:	push   rdi
   140024eb4:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140024ebc:	rex.RB
   140024ebd:	rex.B
   140024ebe:	pop    r8
   140024ec0:	pop    rdi
   140024ec1:	rex.WRX
   140024ec2:	rex pop rdx
   140024ec4:	add    BYTE PTR [rax],al
   140024ec6:	icebp  
   140024ec7:	add    BYTE PTR [rdi],bh
   140024ec9:	(bad)  
   140024eca:	xor    BYTE PTR [rcx+0x52],dl
   140024ecd:	(bad)  
   140024ece:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   140024ed6:	outs   dx,BYTE PTR ds:[rsi]
   140024ed7:	rex
   140024ed8:	rex push rcx
   140024eda:	rex.RB
   140024edb:	rex.B
   140024edc:	rex.B
   140024edd:	rex push rax
   140024edf:	rex.RB
   140024ee0:	push   r14
   140024ee2:	push   rcx
   140024ee3:	push   rdi
   140024ee4:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140024eec:	pop    rdx
   140024eed:	add    BYTE PTR [rip+0x303f3f00],bl        # 0x170418df3
   140024ef3:	push   rcx
   140024ef4:	rex.XB push 0x426b6365
   140024efa:	outs   dx,DWORD PTR ds:[rsi]
   140024efb:	js     0x140024f3d
   140024efd:	rex push rcx
   140024eff:	rex.RB
   140024f00:	rex.B
   140024f01:	rex.B
   140024f02:	rex push rax
   140024f04:	rex.RB
   140024f05:	push   r14
   140024f07:	push   rcx
   140024f08:	push   rdi
   140024f09:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140024f11:	pop    rdx
   140024f12:	add    BYTE PTR [rax],al
   140024f14:	pop    rcx
   140024f15:	adc    BYTE PTR [rdi],bh
   140024f17:	ins    DWORD PTR es:[rdi],dx
   140024f18:	gs je  0x140024f7c
   140024f1b:	rex.WRXB (bad) 
   140024f1d:	push   0x65
   140024f1f:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140024f23:	rex.XB push 0x426b6365
   140024f29:	outs   dx,DWORD PTR ds:[rsi]
   140024f2a:	js     0x140024f6c
   140024f2c:	rex push rbp
   140024f2e:	rex.RB
   140024f2f:	rex.X
   140024f30:	push   r8
   140024f32:	rex.RB
   140024f33:	rex.X push rbp
   140024f35:	push   rcx
   140024f36:	rex.WRB
   140024f37:	gs je  0x140024f9b
   140024f3a:	rex.WRXB (bad) 
   140024f3c:	push   0x65
   140024f3e:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140024f42:	pop    rax
   140024f43:	pop    rdx
   140024f44:	add    BYTE PTR [rax],al
   140024f46:	int3   
   140024f47:	adc    edi,DWORD PTR [rdi]
   140024f49:	jno    0x140024fbf
   140024f4b:	pop    rdi
   140024f4c:	ins    DWORD PTR es:[rdi],dx
   140024f4d:	gs je  0x140024fb1
   140024f50:	movsxd esp,DWORD PTR [rcx+0x73]
   140024f53:	je     0x140024f95
   140024f55:	push   rcx
   140024f56:	rex.XB push 0x426b6365
   140024f5c:	outs   dx,DWORD PTR ds:[rsi]
   140024f5d:	js     0x140024f9f
   140024f5f:	rex push rbp
   140024f61:	rex.RB
   140024f62:	rex.B
   140024f63:	push   r8
   140024f65:	rex.RB
   140024f66:	pop    r8
   140024f68:	push   rax
   140024f69:	rex.RB
   140024f6a:	rex.X
   140024f6b:	rex.R
   140024f6c:	rex pop rdx
   140024f6e:	add    BYTE PTR [rax],al
   140024f70:	rex.X adc edi,DWORD PTR [rdi]
   140024f73:	jno    0x140024fe9
   140024f75:	pop    rdi
   140024f76:	ins    DWORD PTR es:[rdi],dx
   140024f77:	gs je  0x140024fdb
   140024f7a:	movsxd esp,DWORD PTR [rcx+0x6c]
   140024f7d:	ins    BYTE PTR es:[rdi],dx
   140024f7e:	rex push rcx
   140024f80:	rex.XB push 0x426b6365
   140024f86:	outs   dx,DWORD PTR ds:[rsi]
   140024f87:	js     0x140024fc9
   140024f89:	rex push rbp
   140024f8b:	rex.RB
   140024f8c:	rex.B
   140024f8d:	rex.B
   140024f8e:	rex.W push rdi
   140024f90:	xor    al,0x43
   140024f92:	(bad)  
   140024f93:	ins    BYTE PTR es:[rdi],dx
   140024f94:	ins    BYTE PTR es:[rdi],dx
   140024f95:	rex push rcx
   140024f97:	rex.WRB
   140024f98:	gs je  0x140024ffc
   140024f9b:	rex.WRXB (bad) 
   140024f9d:	push   0x65
   140024f9f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140024fa3:	rex.W push rax
   140024fa5:	rex.RB
   140024fa6:	push   r8
   140024fa8:	rex.RB
   140024fa9:	pop    r8
   140024fab:	rex pop rdx
   140024fad:	add    al,al
   140024faf:	or     bh,BYTE PTR [rdi]
   140024fb1:	gs jbe 0x140025019
   140024fb4:	outs   dx,BYTE PTR ds:[rsi]
   140024fb5:	je     0x140024ff7
   140024fb7:	push   rcx
   140024fb8:	rex.XB push 0x426b6365
   140024fbe:	outs   dx,DWORD PTR ds:[rsi]
   140024fbf:	js     0x140025001
   140024fc1:	rex
   140024fc2:	rex.WRB
   140024fc3:	rex.RB
   140024fc4:	rex.B
   140024fc5:	pop    r15
   140024fc7:	rex.WRX push rax
   140024fc9:	rex.RB
   140024fca:	push   r14
   140024fcc:	push   rcx
   140024fcd:	rex.RB jbe 0x140025035
   140024fd0:	outs   dx,BYTE PTR ds:[rsi]
   140024fd1:	je     0x140025013
   140024fd3:	rex
   140024fd4:	rex pop rdx
   140024fd6:	add    BYTE PTR [rax],al
   140024fd8:	xchg   esp,eax
   140024fd9:	sbb    al,0x3f
   140024fdb:	jae    0x140025046
   140024fdd:	jp     0x140025044
   140024fdf:	imul   rbp,QWORD PTR [rsi+0x74],0x68435140
   140024fe7:	movsxd ebp,DWORD PTR gs:[rbx+0x42]
   140024feb:	outs   dx,DWORD PTR ds:[rsi]
   140024fec:	js     0x14002502e
   140024fee:	rex push rbp
   140024ff0:	rex.RB
   140024ff1:	rex.X
   140024ff2:	rex.B (bad) 
   140024ff4:	push   r14
   140024ff6:	push   rcx
   140024ff7:	push   rbx
   140024ff8:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140024fff:	add    BYTE PTR [rsi],al
   140025001:	adc    DWORD PTR [rdi],edi
   140025003:	ins    DWORD PTR es:[rdi],dx
   140025004:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   14002500b:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140025012:	rex push rcx
   140025014:	rex.XB push 0x426b6365
   14002501a:	outs   dx,DWORD PTR ds:[rsi]
   14002501b:	js     0x14002505d
   14002501d:	rex push rbp
   14002501f:	rex.RB
   140025020:	rex.X
   140025021:	rex.B (bad) 
   140025023:	push   r14
   140025025:	push   rcx
   140025026:	push   rbx
   140025027:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14002502e:	add    BYTE PTR [rax],al
   140025030:	rex.WXB adc QWORD PTR [r15],rdi
   140025033:	ins    DWORD PTR es:[rdi],dx
   140025034:	outs   dx,DWORD PTR ds:[rsi]
   140025035:	jne    0x1400250aa
   140025037:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14002503a:	jbe    0x1400250a1
   14002503c:	rex.RB jbe 0x1400250a4
   14002503f:	outs   dx,BYTE PTR ds:[rsi]
   140025040:	je     0x140025082
   140025042:	push   rcx
   140025043:	rex.XB push 0x426b6365
   140025049:	outs   dx,DWORD PTR ds:[rsi]
   14002504a:	js     0x14002508c
   14002504c:	rex
   14002504d:	rex.WRB
   14002504e:	rex.RB
   14002504f:	rex.B
   140025050:	pop    r8
   140025052:	push   rax
   140025053:	rex.RB
   140025054:	push   r14
   140025056:	push   rcx
   140025057:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025059:	jne    0x1400250ce
   14002505b:	gs rex.RB jbe 0x1400250c4
   14002505f:	outs   dx,BYTE PTR ds:[rsi]
   140025060:	je     0x1400250a2
   140025062:	rex
   140025063:	rex pop rdx
   140025065:	add    BYTE PTR [rdx+0x12],dl
   140025068:	(bad)  
   140025069:	jo     0x1400250cc
   14002506b:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140025072:	je     0x1400250b4
   140025074:	push   rcx
   140025075:	rex.XB push 0x426b6365
   14002507b:	outs   dx,DWORD PTR ds:[rsi]
   14002507c:	js     0x1400250be
   14002507e:	rex
   14002507f:	rex.WRB
   140025080:	rex.RB
   140025081:	rex.B
   140025082:	pop    r8
   140025084:	push   rax
   140025085:	rex.RB
   140025086:	push   r14
   140025088:	push   rcx
   140025089:	push   rax
   14002508a:	(bad)  
   14002508b:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140025092:	je     0x1400250d4
   140025094:	rex
   140025095:	rex pop rdx
   140025097:	add    BYTE PTR [rbx+0x69683f0c],bh
   14002509d:	je     0x1400250e1
   14002509f:	jne    0x140025115
   1400250a1:	je     0x140025112
   1400250a3:	outs   dx,BYTE PTR ds:[rsi]
   1400250a4:	rex push rcx
   1400250a6:	rex.XB push 0x426b6365
   1400250ac:	outs   dx,DWORD PTR ds:[rsi]
   1400250ad:	js     0x1400250ef
   1400250af:	rex
   1400250b0:	rex.WRB
   1400250b1:	rex.RB
   1400250b2:	rex.X
   1400250b3:	pop    r15
   1400250b5:	rex.WRX
   1400250b6:	rex.B
   1400250b7:	rex.RB
   1400250b8:	rex.X push rsi
   1400250ba:	push   rcx
   1400250bb:	push   rax
   1400250bc:	outs   dx,DWORD PTR ds:[rsi]
   1400250bd:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   1400250c4:	add    BYTE PTR [rax],al
   1400250c6:	(bad)  
   1400250c7:	(bad)  
   1400250c8:	(bad)  
   1400250c9:	movsxd ebp,DWORD PTR [rax+0x65]
   1400250cc:	movsxd ebp,DWORD PTR [rbx+0x53]
   1400250cf:	je     0x140025132
   1400250d1:	je     0x140025138
   1400250d3:	push   rbx
   1400250d4:	gs je  0x140025117
   1400250d7:	push   rcx
   1400250d8:	rex.XB push 0x426b6365
   1400250de:	outs   dx,DWORD PTR ds:[rsi]
   1400250df:	js     0x140025121
   1400250e1:	rex
   1400250e2:	rex.WRB
   1400250e3:	rex.RB
   1400250e4:	rex.B
   1400250e5:	pop    r8
   1400250e7:	pop    rax
   1400250e8:	pop    rdx
   1400250e9:	add    ch,dl
   1400250eb:	adc    DWORD PTR [rdi],edi
   1400250ed:	outs   dx,BYTE PTR ds:[rsi]
   1400250ee:	gs js  0x140025165
   1400250f1:	rex.XB push 0x536b6365
   1400250f7:	je     0x14002515a
   1400250f9:	je     0x140025160
   1400250fb:	rex push rcx
   1400250fd:	rex.XB push 0x426b6365
   140025103:	outs   dx,DWORD PTR ds:[rsi]
   140025104:	js     0x140025146
   140025106:	rex
   140025107:	rex.WRB
   140025108:	rex.RB
   140025109:	rex.B
   14002510a:	pop    r8
   14002510c:	pop    rax
   14002510d:	pop    rdx
   14002510e:	add    BYTE PTR [rax],al
   140025110:	test   eax,0x656d3f10
   140025115:	je     0x140025178
   140025117:	rex.WRXB (bad) 
   140025119:	push   0x65
   14002511b:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14002511f:	push   rdx
   140025120:	(bad)  
   140025121:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   140025129:	outs   dx,BYTE PTR ds:[rsi]
   14002512a:	rex
   14002512b:	rex push rbp
   14002512d:	rex.RB
   14002512e:	rex.X
   14002512f:	push   r8
   140025131:	rex.RB
   140025132:	rex.X push rbp
   140025134:	push   rcx
   140025135:	rex.WRB
   140025136:	gs je  0x14002519a
   140025139:	rex.WRXB (bad) 
   14002513b:	push   0x65
   14002513d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140025141:	pop    rax
   140025142:	pop    rdx
   140025143:	add    BYTE PTR [rsp+rdx*1],bl
   140025146:	(bad)  
   140025147:	jno    0x1400251bd
   140025149:	pop    rdi
   14002514a:	ins    DWORD PTR es:[rdi],dx
   14002514b:	gs je  0x1400251af
   14002514e:	movsxd esp,DWORD PTR [rcx+0x73]
   140025151:	je     0x140025193
   140025153:	push   rcx
   140025154:	push   rdx
   140025155:	(bad)  
   140025156:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   14002515e:	outs   dx,BYTE PTR ds:[rsi]
   14002515f:	rex
   140025160:	rex push rbp
   140025162:	rex.RB
   140025163:	rex.B
   140025164:	push   r8
   140025166:	rex.RB
   140025167:	pop    r8
   140025169:	push   rax
   14002516a:	rex.RB
   14002516b:	rex.X
   14002516c:	rex.R
   14002516d:	rex pop rdx
   14002516f:	add    BYTE PTR [rdx+0x74713f13],dl
   140025175:	pop    rdi
   140025176:	ins    DWORD PTR es:[rdi],dx
   140025177:	gs je  0x1400251db
   14002517a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002517d:	ins    BYTE PTR es:[rdi],dx
   14002517e:	rex push rcx
   140025180:	push   rdx
   140025181:	(bad)  
   140025182:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   14002518a:	outs   dx,BYTE PTR ds:[rsi]
   14002518b:	rex
   14002518c:	rex push rbp
   14002518e:	rex.RB
   14002518f:	rex.B
   140025190:	rex.B
   140025191:	rex.W push rdi
   140025193:	xor    al,0x43
   140025195:	(bad)  
   140025196:	ins    BYTE PTR es:[rdi],dx
   140025197:	ins    BYTE PTR es:[rdi],dx
   140025198:	rex push rcx
   14002519a:	rex.WRB
   14002519b:	gs je  0x1400251ff
   14002519e:	rex.WRXB (bad) 
   1400251a0:	push   0x65
   1400251a2:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400251a6:	rex.W push rax
   1400251a8:	rex.RB
   1400251a9:	push   r8
   1400251ab:	rex.RB
   1400251ac:	pop    r8
   1400251ae:	rex pop rdx
   1400251b0:	add    BYTE PTR [rax],al
   1400251b2:	in     al,0xa
   1400251b4:	(bad)  
   1400251b5:	gs jbe 0x14002521d
   1400251b8:	outs   dx,BYTE PTR ds:[rsi]
   1400251b9:	je     0x1400251fb
   1400251bb:	push   rcx
   1400251bc:	push   rdx
   1400251bd:	(bad)  
   1400251be:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   1400251c6:	outs   dx,BYTE PTR ds:[rsi]
   1400251c7:	rex
   1400251c8:	rex
   1400251c9:	rex.WRB
   1400251ca:	rex.RB
   1400251cb:	rex.B
   1400251cc:	pop    r15
   1400251ce:	rex.WRX push rax
   1400251d0:	rex.RB
   1400251d1:	push   r14
   1400251d3:	push   rcx
   1400251d4:	rex.RB jbe 0x14002523c
   1400251d7:	outs   dx,BYTE PTR ds:[rsi]
   1400251d8:	je     0x14002521a
   1400251da:	rex
   1400251db:	rex pop rdx
   1400251dd:	add    BYTE PTR [rsp+rbx*1+0x7a69733f],dh
   1400251e4:	imul   rbp,QWORD PTR gs:[rsi+0x74],0x61525140
   1400251ed:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   1400251f5:	outs   dx,BYTE PTR ds:[rsi]
   1400251f6:	rex
   1400251f7:	rex push rbp
   1400251f9:	rex.RB
   1400251fa:	rex.X
   1400251fb:	rex.B (bad) 
   1400251fd:	push   r14
   1400251ff:	push   rcx
   140025200:	push   rbx
   140025201:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140025208:	add    BYTE PTR [rax],al
   14002520a:	adc    al,0x11
   14002520c:	(bad)  
   14002520d:	ins    DWORD PTR es:[rdi],dx
   14002520e:	imul   ebp,DWORD PTR [rsi+0x69],0x536d756d
   140025215:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   14002521c:	rex push rcx
   14002521e:	push   rdx
   14002521f:	(bad)  
   140025220:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   140025228:	outs   dx,BYTE PTR ds:[rsi]
   140025229:	rex
   14002522a:	rex push rbp
   14002522c:	rex.RB
   14002522d:	rex.X
   14002522e:	rex.B (bad) 
   140025230:	push   r14
   140025232:	push   rcx
   140025233:	push   rbx
   140025234:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14002523b:	add    BYTE PTR [rbx+0x11],bl
   14002523e:	(bad)  
   14002523f:	ins    DWORD PTR es:[rdi],dx
   140025240:	outs   dx,DWORD PTR ds:[rsi]
   140025241:	jne    0x1400252b6
   140025243:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140025246:	jbe    0x1400252ad
   140025248:	rex.RB jbe 0x1400252b0
   14002524b:	outs   dx,BYTE PTR ds:[rsi]
   14002524c:	je     0x14002528e
   14002524e:	push   rcx
   14002524f:	push   rdx
   140025250:	(bad)  
   140025251:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   140025259:	outs   dx,BYTE PTR ds:[rsi]
   14002525a:	rex
   14002525b:	rex
   14002525c:	rex.WRB
   14002525d:	rex.RB
   14002525e:	rex.B
   14002525f:	pop    r8
   140025261:	push   rax
   140025262:	rex.RB
   140025263:	push   r14
   140025265:	push   rcx
   140025266:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025268:	jne    0x1400252dd
   14002526a:	gs rex.RB jbe 0x1400252d3
   14002526e:	outs   dx,BYTE PTR ds:[rsi]
   14002526f:	je     0x1400252b1
   140025271:	rex
   140025272:	rex pop rdx
   140025274:	add    BYTE PTR [rax],al
   140025276:	imul   edx,DWORD PTR [rdx],0x6961703f
   14002527c:	outs   dx,BYTE PTR ds:[rsi]
   14002527d:	je     0x1400252c4
   14002527f:	jbe    0x1400252e6
   140025281:	outs   dx,BYTE PTR ds:[rsi]
   140025282:	je     0x1400252c4
   140025284:	push   rcx
   140025285:	push   rdx
   140025286:	(bad)  
   140025287:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   14002528f:	outs   dx,BYTE PTR ds:[rsi]
   140025290:	rex
   140025291:	rex
   140025292:	rex.WRB
   140025293:	rex.RB
   140025294:	rex.B
   140025295:	pop    r8
   140025297:	push   rax
   140025298:	rex.RB
   140025299:	push   r14
   14002529b:	push   rcx
   14002529c:	push   rax
   14002529d:	(bad)  
   14002529e:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400252a5:	je     0x1400252e7
   1400252a7:	rex
   1400252a8:	rex pop rdx
   1400252aa:	add    BYTE PTR [rax],al
   1400252ac:	mov    esp,0x69683f0c
   1400252b1:	je     0x1400252f5
   1400252b3:	jne    0x140025329
   1400252b5:	je     0x140025326
   1400252b7:	outs   dx,BYTE PTR ds:[rsi]
   1400252b8:	rex push rcx
   1400252ba:	push   rdx
   1400252bb:	(bad)  
   1400252bc:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   1400252c4:	outs   dx,BYTE PTR ds:[rsi]
   1400252c5:	rex
   1400252c6:	rex
   1400252c7:	rex.WRB
   1400252c8:	rex.RB
   1400252c9:	rex.X
   1400252ca:	pop    r15
   1400252cc:	rex.WRX
   1400252cd:	rex.B
   1400252ce:	rex.RB
   1400252cf:	rex.X push rsi
   1400252d1:	push   rcx
   1400252d2:	push   rax
   1400252d3:	outs   dx,DWORD PTR ds:[rsi]
   1400252d4:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   1400252db:	add    BYTE PTR [rbx+0x313f3f01],dh
   1400252e1:	push   rcx
   1400252e2:	rex.XB push 0x426b6365
   1400252e8:	outs   dx,DWORD PTR ds:[rsi]
   1400252e9:	js     0x14002532b
   1400252eb:	rex push rbp
   1400252ed:	rex.RB
   1400252ee:	rex.B
   1400252ef:	rex.B
   1400252f0:	rex pop rax
   1400252f2:	pop    rdx
   1400252f3:	add    BYTE PTR [rbx],ch
   1400252f5:	add    bh,BYTE PTR [rdi]
   1400252f7:	(bad)  
   1400252f8:	xor    DWORD PTR [rcx+0x52],edx
   1400252fb:	(bad)  
   1400252fc:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   140025304:	outs   dx,BYTE PTR ds:[rsi]
   140025305:	rex
   140025306:	rex push rbp
   140025308:	rex.RB
   140025309:	rex.B
   14002530a:	rex.B
   14002530b:	rex pop rax
   14002530d:	pop    rdx
   14002530e:	add    BYTE PTR [rax],al
   140025310:	mov    ah,0x20
   140025312:	(bad)  
   140025313:	jbe    0x140025376
   140025315:	ins    BYTE PTR es:[rdi],dx
   140025316:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x67615065
   14002531e:	gs rex push rcx
   140025321:	push   rdi
   140025322:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   140025329:	addr32 gs rex
   14002532c:	rex push rbp
   14002532e:	rex.RB
   14002532f:	rex.B
   140025330:	pop    r15
   140025332:	rex.WRX pop rax
   140025334:	pop    rdx
   140025335:	add    BYTE PTR [rdi+0x65733f17],ah
   14002533b:	je     0x140025380
   14002533d:	jne    0x1400253b1
   14002533f:	jb     0x1400253a6
   140025341:	outs   dx,BYTE PTR ds:[rsi]
   140025342:	je     0x140025396
   140025344:	outs   dx,DWORD PTR ds:[rsi]
   140025345:	ja     0x140025387
   140025347:	push   rcx
   140025348:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140025350:	gs je  0x140025393
   140025353:	rex push rcx
   140025355:	rex.RB
   140025356:	rex.B
   140025357:	pop    r8
   140025359:	rex.W
   14002535a:	rex pop rdx
   14002535c:	add    BYTE PTR [rax],al
   14002535e:	sahf   
   14002535f:	or     eax,0x736e693f
   140025364:	gs jb  0x1400253db
   140025367:	rex.WB je 0x1400253cf
   14002536a:	ins    DWORD PTR es:[rdi],dx
   14002536b:	rex push rcx
   14002536d:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140025375:	gs je  0x1400253b8
   140025378:	rex push rcx
   14002537a:	rex.RB
   14002537b:	rex.B
   14002537c:	pop    r8
   14002537e:	rex.W
   14002537f:	rex.B
   140025380:	rex.RB
   140025381:	rex.X push rsi
   140025383:	push   rcx
   140025384:	push   rbx
   140025385:	je     0x1400253f9
   140025387:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14002538e:	add    BYTE PTR [rax],al
   140025390:	mov    al,0x7
   140025392:	(bad)  
   140025393:	movsxd ebp,DWORD PTR [rdi+0x75]
   140025396:	outs   dx,BYTE PTR ds:[rsi]
   140025397:	je     0x1400253d9
   140025399:	push   rcx
   14002539a:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   1400253a2:	gs je  0x1400253e5
   1400253a5:	rex push rcx
   1400253a7:	rex.RB
   1400253a8:	rex.X
   1400253a9:	rex.B
   1400253aa:	rex.W pop rax
   1400253ac:	pop    rdx
   1400253ad:	add    BYTE PTR [rsi],bh
   1400253af:	(bad)  
   1400253b0:	(bad)  
   1400253b1:	je     0x140025414
   1400253b3:	imul   esp,DWORD PTR [rbp+0x49],0x74
   1400253b7:	gs ins DWORD PTR es:[rdi],dx
   1400253b9:	rex push rcx
   1400253bb:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   1400253c3:	gs je  0x140025406
   1400253c6:	rex push rcx
   1400253c8:	rex.RB
   1400253c9:	rex.B
   1400253ca:	push   r8
   1400253cc:	rex.RB
   1400253cd:	push   r14
   1400253cf:	push   rcx
   1400253d0:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   1400253d8:	gs je  0x140025424
   1400253db:	je     0x140025442
   1400253dd:	ins    DWORD PTR es:[rdi],dx
   1400253de:	rex
   1400253df:	rex
   1400253e0:	rex.W
   1400253e1:	rex pop rdx
   1400253e3:	add    BYTE PTR [rax+rcx*1],bl
   1400253e6:	(bad)  
   1400253e7:	movsxd esi,DWORD PTR [rbp+0x72]
   1400253ea:	jb     0x140025451
   1400253ec:	outs   dx,BYTE PTR ds:[rsi]
   1400253ed:	je     0x140025441
   1400253ef:	outs   dx,DWORD PTR ds:[rsi]
   1400253f0:	ja     0x140025432
   1400253f2:	push   rcx
   1400253f3:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   1400253fb:	gs je  0x14002543e
   1400253fe:	rex push rcx
   140025400:	rex.RB
   140025401:	rex.X
   140025402:	rex.B
   140025403:	rex.W pop rax
   140025405:	pop    rdx
   140025406:	add    BYTE PTR [rax],al
   140025408:	leave  
   140025409:	add    BYTE PTR [rdi],bh
   14002540b:	(bad)  
   14002540c:	xor    BYTE PTR [rcx+0x4c],dl
   14002540f:	imul   esi,DWORD PTR [rbx+0x74],0x67646957
   140025416:	gs je  0x140025459
   140025419:	rex push rcx
   14002541b:	rex.RB
   14002541c:	rex.B
   14002541d:	rex.B
   14002541e:	rex push rax
   140025420:	rex.RB
   140025421:	push   r14
   140025423:	push   rcx
   140025424:	push   rdi
   140025425:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   14002542d:	pop    rdx
   14002542e:	add    BYTE PTR [rax],al
   140025430:	xchg   ebx,eax
   140025431:	adc    BYTE PTR [rdi],bh
   140025433:	ins    DWORD PTR es:[rdi],dx
   140025434:	gs je  0x140025498
   140025437:	rex.WRXB (bad) 
   140025439:	push   0x65
   14002543b:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14002543f:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140025447:	gs je  0x14002548a
   14002544a:	rex push rbp
   14002544c:	rex.RB
   14002544d:	rex.X
   14002544e:	push   r8
   140025450:	rex.RB
   140025451:	rex.X push rbp
   140025453:	push   rcx
   140025454:	rex.WRB
   140025455:	gs je  0x1400254b9
   140025458:	rex.WRXB (bad) 
   14002545a:	push   0x65
   14002545c:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140025460:	pop    rax
   140025461:	pop    rdx
   140025462:	add    BYTE PTR [rax],al
   140025464:	(bad)  
   140025465:	adc    al,0x3f
   140025467:	jno    0x1400254dd
   140025469:	pop    rdi
   14002546a:	ins    DWORD PTR es:[rdi],dx
   14002546b:	gs je  0x1400254cf
   14002546e:	movsxd esp,DWORD PTR [rcx+0x73]
   140025471:	je     0x1400254b3
   140025473:	push   rcx
   140025474:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   14002547c:	gs je  0x1400254bf
   14002547f:	rex push rbp
   140025481:	rex.RB
   140025482:	rex.B
   140025483:	push   r8
   140025485:	rex.RB
   140025486:	pop    r8
   140025488:	push   rax
   140025489:	rex.RB
   14002548a:	rex.X
   14002548b:	rex.R
   14002548c:	rex pop rdx
   14002548e:	add    BYTE PTR [rax],al
   140025490:	jl     0x1400254a5
   140025492:	(bad)  
   140025493:	jno    0x140025509
   140025495:	pop    rdi
   140025496:	ins    DWORD PTR es:[rdi],dx
   140025497:	gs je  0x1400254fb
   14002549a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002549d:	ins    BYTE PTR es:[rdi],dx
   14002549e:	rex push rcx
   1400254a0:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   1400254a8:	gs je  0x1400254eb
   1400254ab:	rex push rbp
   1400254ad:	rex.RB
   1400254ae:	rex.B
   1400254af:	rex.B
   1400254b0:	rex.W push rdi
   1400254b2:	xor    al,0x43
   1400254b4:	(bad)  
   1400254b5:	ins    BYTE PTR es:[rdi],dx
   1400254b6:	ins    BYTE PTR es:[rdi],dx
   1400254b7:	rex push rcx
   1400254b9:	rex.WRB
   1400254ba:	gs je  0x14002551e
   1400254bd:	rex.WRXB (bad) 
   1400254bf:	push   0x65
   1400254c1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400254c5:	rex.W push rax
   1400254c7:	rex.RB
   1400254c8:	push   r8
   1400254ca:	rex.RB
   1400254cb:	pop    r8
   1400254cd:	rex pop rdx
   1400254cf:	add    al,bl
   1400254d1:	or     bh,BYTE PTR [rdi]
   1400254d3:	gs jbe 0x14002553b
   1400254d6:	outs   dx,BYTE PTR ds:[rsi]
   1400254d7:	je     0x140025519
   1400254d9:	push   rcx
   1400254da:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   1400254e2:	gs je  0x140025525
   1400254e5:	rex
   1400254e6:	rex.WRB
   1400254e7:	rex.RB
   1400254e8:	rex.B
   1400254e9:	pop    r15
   1400254eb:	rex.WRX push rax
   1400254ed:	rex.RB
   1400254ee:	push   r14
   1400254f0:	push   rcx
   1400254f1:	rex.RB jbe 0x140025559
   1400254f4:	outs   dx,BYTE PTR ds:[rsi]
   1400254f5:	je     0x140025537
   1400254f7:	rex
   1400254f8:	rex pop rdx
   1400254fa:	add    BYTE PTR [rax],al
   1400254fc:	(bad)  
   1400254fd:	(bad)  
   1400254fe:	(bad)  
   1400254ff:	je     0x14002556a
   140025501:	ins    DWORD PTR es:[rdi],dx
   140025502:	gs jb  0x14002554a
   140025505:	jbe    0x14002556c
   140025507:	outs   dx,BYTE PTR ds:[rsi]
   140025508:	je     0x14002554a
   14002550a:	push   rcx
   14002550b:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025513:	rex
   140025514:	rex
   140025515:	rex.WRB
   140025516:	rex.RB
   140025517:	rex.B
   140025518:	pop    r8
   14002551a:	push   rax
   14002551b:	rex.RB
   14002551c:	push   r14
   14002551e:	push   rcx
   14002551f:	push   rsp
   140025520:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   140025527:	outs   dx,BYTE PTR ds:[rsi]
   140025528:	je     0x14002556a
   14002552a:	rex
   14002552b:	rex pop rdx
   14002552d:	add    BYTE PTR [rax+0x11],ch
   140025530:	(bad)  
   140025531:	ins    DWORD PTR es:[rdi],dx
   140025532:	outs   dx,DWORD PTR ds:[rsi]
   140025533:	jne    0x1400255a8
   140025535:	gs push rax
   140025537:	jb     0x14002559e
   140025539:	jae    0x1400255ae
   14002553b:	rex.RB jbe 0x1400255a3
   14002553e:	outs   dx,BYTE PTR ds:[rsi]
   14002553f:	je     0x140025581
   140025541:	push   rcx
   140025542:	(bad)
   140025548:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14002554c:	gs ins DWORD PTR es:[rdi],dx
   14002554e:	push   rsi
   14002554f:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140025556:	rex.B
   140025557:	pop    r8
   140025559:	push   rax
   14002555a:	rex.RB
   14002555b:	push   r14
   14002555d:	push   rcx
   14002555e:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025560:	jne    0x1400255d5
   140025562:	gs rex.RB jbe 0x1400255cb
   140025566:	outs   dx,BYTE PTR ds:[rsi]
   140025567:	je     0x1400255a9
   140025569:	rex
   14002556a:	rex pop rdx
   14002556c:	add    BYTE PTR [rax],al
   14002556e:	xchg   esi,eax
   14002556f:	adc    DWORD PTR [rdi],edi
   140025571:	ins    DWORD PTR es:[rdi],dx
   140025572:	outs   dx,DWORD PTR ds:[rsi]
   140025573:	jne    0x1400255e8
   140025575:	gs push rdx
   140025577:	gs ins BYTE PTR es:[rdi],dx
   140025579:	gs (bad) 
   14002557b:	jae    0x1400255e2
   14002557d:	rex.RB jbe 0x1400255e5
   140025580:	outs   dx,BYTE PTR ds:[rsi]
   140025581:	je     0x1400255c3
   140025583:	push   rcx
   140025584:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   14002558c:	rex
   14002558d:	rex
   14002558e:	rex.WRB
   14002558f:	rex.RB
   140025590:	rex.B
   140025591:	pop    r8
   140025593:	push   rax
   140025594:	rex.RB
   140025595:	push   r14
   140025597:	push   rcx
   140025598:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002559a:	jne    0x14002560f
   14002559c:	gs rex.RB jbe 0x140025605
   1400255a0:	outs   dx,BYTE PTR ds:[rsi]
   1400255a1:	je     0x1400255e3
   1400255a3:	rex
   1400255a4:	rex pop rdx
   1400255a6:	add    BYTE PTR [rax],al
   1400255a8:	(bad)  
   1400255a9:	adc    DWORD PTR [rdi],edi
   1400255ab:	ins    DWORD PTR es:[rdi],dx
   1400255ac:	outs   dx,DWORD PTR ds:[rsi]
   1400255ad:	jne    0x140025622
   1400255af:	rex.R outs dx,DWORD PTR gs:[rsi]
   1400255b2:	jne    0x140025616
   1400255b4:	ins    BYTE PTR es:[rdi],dx
   1400255b5:	gs rex.XB ins BYTE PTR es:[rdi],dx
   1400255b8:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   1400255bf:	je     0x140025601
   1400255c1:	push   rcx
   1400255c2:	(bad)
   1400255c8:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400255cc:	gs ins DWORD PTR es:[rdi],dx
   1400255ce:	push   rsi
   1400255cf:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400255d6:	rex.B
   1400255d7:	pop    r8
   1400255d9:	push   rax
   1400255da:	rex.RB
   1400255db:	push   r14
   1400255dd:	push   rcx
   1400255de:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400255e0:	jne    0x140025655
   1400255e2:	gs rex.RB jbe 0x14002564b
   1400255e6:	outs   dx,BYTE PTR ds:[rsi]
   1400255e7:	je     0x140025629
   1400255e9:	rex
   1400255ea:	rex pop rdx
   1400255ec:	add    BYTE PTR [rax],al
   1400255ee:	push   rsi
   1400255ef:	adc    DWORD PTR [rdi],edi
   1400255f1:	ins    DWORD PTR es:[rdi],dx
   1400255f2:	outs   dx,DWORD PTR ds:[rsi]
   1400255f3:	jne    0x140025668
   1400255f5:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   1400255f8:	jbe    0x14002565f
   1400255fa:	rex.RB jbe 0x140025662
   1400255fd:	outs   dx,BYTE PTR ds:[rsi]
   1400255fe:	je     0x140025640
   140025600:	push   rcx
   140025601:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025609:	rex
   14002560a:	rex
   14002560b:	rex.WRB
   14002560c:	rex.RB
   14002560d:	rex.B
   14002560e:	pop    r8
   140025610:	push   rax
   140025611:	rex.RB
   140025612:	push   r14
   140025614:	push   rcx
   140025615:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025617:	jne    0x14002568c
   140025619:	gs rex.RB jbe 0x140025682
   14002561d:	outs   dx,BYTE PTR ds:[rsi]
   14002561e:	je     0x140025660
   140025620:	rex
   140025621:	rex pop rdx
   140025623:	add    BYTE PTR [rsi],ch
   140025625:	and    DWORD PTR [rdi],edi
   140025627:	ja     0x140025691
   140025629:	gs gs ins BYTE PTR es:[rdi],dx
   14002562c:	rex.RB jbe 0x140025694
   14002562f:	outs   dx,BYTE PTR ds:[rsi]
   140025630:	je     0x140025672
   140025632:	push   rcx
   140025633:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   14002563b:	rex
   14002563c:	rex
   14002563d:	rex.WRB
   14002563e:	rex.RB
   14002563f:	rex.B
   140025640:	pop    r8
   140025642:	push   rax
   140025643:	rex.RB
   140025644:	push   r14
   140025646:	push   rcx
   140025647:	push   rdi
   140025648:	push   0x456c6565
   14002564d:	jbe    0x1400256b4
   14002564f:	outs   dx,BYTE PTR ds:[rsi]
   140025650:	je     0x140025692
   140025652:	rex
   140025653:	rex pop rdx
   140025655:	add    BYTE PTR [rsi],bh
   140025657:	(bad)  
   140025659:	imul   esp,DWORD PTR [rbp+0x79],0x50
   14002565d:	jb     0x1400256c4
   14002565f:	jae    0x1400256d4
   140025661:	rex.RB jbe 0x1400256c9
   140025664:	outs   dx,BYTE PTR ds:[rsi]
   140025665:	je     0x1400256a7
   140025667:	push   rcx
   140025668:	(bad)
   14002566e:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140025672:	gs ins DWORD PTR es:[rdi],dx
   140025674:	push   rsi
   140025675:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   14002567c:	rex.B
   14002567d:	pop    r8
   14002567f:	push   rax
   140025680:	rex.RB
   140025681:	push   r14
   140025683:	push   rcx
   140025684:	rex.WXB
   140025685:	gs jns 0x1400256cd
   140025688:	jbe    0x1400256ef
   14002568a:	outs   dx,BYTE PTR ds:[rsi]
   14002568b:	je     0x1400256cd
   14002568d:	rex
   14002568e:	rex pop rdx
   140025690:	add    BYTE PTR [rax],al
   140025692:	(bad)  
   140025693:	adc    bh,BYTE PTR [rdi]
   140025695:	jo     0x1400256f8
   140025697:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14002569e:	je     0x1400256e0
   1400256a0:	push   rcx
   1400256a1:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   1400256a9:	rex
   1400256aa:	rex
   1400256ab:	rex.WRB
   1400256ac:	rex.RB
   1400256ad:	rex.B
   1400256ae:	pop    r8
   1400256b0:	push   rax
   1400256b1:	rex.RB
   1400256b2:	push   r14
   1400256b4:	push   rcx
   1400256b5:	push   rax
   1400256b6:	(bad)  
   1400256b7:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400256be:	je     0x140025700
   1400256c0:	rex
   1400256c1:	rex pop rdx
   1400256c3:	add    BYTE PTR [rax+0x65723f15],dl
   1400256c9:	jae    0x140025734
   1400256cb:	jp     0x140025732
   1400256cd:	rex.RB jbe 0x140025735
   1400256d0:	outs   dx,BYTE PTR ds:[rsi]
   1400256d1:	je     0x140025713
   1400256d3:	push   rcx
   1400256d4:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   1400256dc:	rex
   1400256dd:	rex
   1400256de:	rex.WRB
   1400256df:	rex.RB
   1400256e0:	rex.B
   1400256e1:	pop    r8
   1400256e3:	push   rax
   1400256e4:	rex.RB
   1400256e5:	push   r14
   1400256e7:	push   rcx
   1400256e8:	push   rdx
   1400256e9:	gs jae 0x140025755
   1400256ec:	jp     0x140025753
   1400256ee:	rex.RB jbe 0x140025756
   1400256f1:	outs   dx,BYTE PTR ds:[rsi]
   1400256f2:	je     0x140025734
   1400256f4:	rex
   1400256f5:	rex pop rdx
   1400256f7:	add    BYTE PTR [rsi],ch
   1400256f9:	or     bh,BYTE PTR [rdi]
   1400256fb:	fs jb  0x14002575f
   1400256fe:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140025701:	jbe    0x140025768
   140025703:	rex.RB jbe 0x14002576b
   140025706:	outs   dx,BYTE PTR ds:[rsi]
   140025707:	je     0x140025749
   140025709:	push   rcx
   14002570a:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025712:	rex
   140025713:	rex
   140025714:	rex.WRB
   140025715:	rex.RB
   140025716:	rex.B
   140025717:	pop    r8
   140025719:	push   rax
   14002571a:	rex.RB
   14002571b:	push   r14
   14002571d:	push   rcx
   14002571e:	rex.R jb 0x140025782
   140025721:	rex.WRB outs dx,DWORD PTR ds:[esi]
   140025724:	jbe    0x14002578b
   140025726:	rex.RB jbe 0x14002578e
   140025729:	outs   dx,BYTE PTR ds:[rsi]
   14002572a:	je     0x14002576c
   14002572c:	rex
   14002572d:	rex pop rdx
   14002572f:	add    BYTE PTR [rcx],ah
   140025731:	or     bh,BYTE PTR [rdi]
   140025733:	fs jb  0x140025797
   140025736:	addr32 rex.WR
   140025738:	gs (bad) 
   14002573a:	jbe    0x1400257a1
   14002573c:	rex.RB jbe 0x1400257a4
   14002573f:	outs   dx,BYTE PTR ds:[rsi]
   140025740:	je     0x140025782
   140025742:	push   rcx
   140025743:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   14002574b:	rex
   14002574c:	rex
   14002574d:	rex.WRB
   14002574e:	rex.RB
   14002574f:	rex.B
   140025750:	pop    r8
   140025752:	push   rax
   140025753:	rex.RB
   140025754:	push   r14
   140025756:	push   rcx
   140025757:	rex.R jb 0x1400257bb
   14002575a:	addr32 rex.WR
   14002575c:	gs (bad) 
   14002575e:	jbe    0x1400257c5
   140025760:	rex.RB jbe 0x1400257c8
   140025763:	outs   dx,BYTE PTR ds:[rsi]
   140025764:	je     0x1400257a6
   140025766:	rex
   140025767:	rex pop rdx
   140025769:	add    BYTE PTR [rax+0xa],ch
   14002576c:	(bad)  
   14002576d:	fs jb  0x1400257df
   140025770:	jo     0x1400257b7
   140025772:	jbe    0x1400257d9
   140025774:	outs   dx,BYTE PTR ds:[rsi]
   140025775:	je     0x1400257b7
   140025777:	push   rcx
   140025778:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140025780:	gs je  0x1400257c3
   140025783:	rex push rbp
   140025785:	rex.RB
   140025786:	rex.B
   140025787:	pop    r8
   140025789:	push   rax
   14002578a:	rex.RB
   14002578b:	push   r14
   14002578d:	push   rcx
   14002578e:	rex.R jb 0x140025800
   140025791:	jo     0x1400257d8
   140025793:	jbe    0x1400257fa
   140025795:	outs   dx,BYTE PTR ds:[rsi]
   140025796:	je     0x1400257d8
   140025798:	rex
   140025799:	rex pop rdx
   14002579b:	add    bl,ch
   14002579d:	and    BYTE PTR [rdi],bh
   14002579f:	jbe    0x14002580a
   1400257a1:	gs ja  0x140025814
   1400257a4:	outs   dx,DWORD PTR ds:[rsi]
   1400257a5:	jb     0x14002581b
   1400257a7:	rex.RB jbe 0x14002580f
   1400257aa:	outs   dx,BYTE PTR ds:[rsi]
   1400257ab:	je     0x1400257ed
   1400257ad:	push   rcx
   1400257ae:	(bad)
   1400257b4:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400257b8:	gs ins DWORD PTR es:[rdi],dx
   1400257ba:	push   rsi
   1400257bb:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   1400257c2:	rex.B
   1400257c3:	pop    r15
   1400257c5:	rex.WRX push rax
   1400257c7:	rex.RB
   1400257c8:	push   r14
   1400257ca:	push   rcx
   1400257cb:	rex.RB jbe 0x140025833
   1400257ce:	outs   dx,BYTE PTR ds:[rsi]
   1400257cf:	je     0x140025811
   1400257d1:	rex
   1400257d2:	rex pop rdx
   1400257d4:	add    BYTE PTR [rax],al
   1400257d6:	rex.B (bad) 
   1400257d8:	(bad)  
   1400257d9:	jae    0x14002583e
   1400257db:	jb     0x14002584c
   1400257dd:	ins    BYTE PTR es:[rdi],dx
   1400257de:	ins    BYTE PTR es:[rdi],dx
   1400257df:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400257e1:	outs   dx,BYTE PTR ds:[rsi]
   1400257e2:	je     0x140025849
   1400257e4:	outs   dx,BYTE PTR ds:[rsi]
   1400257e5:	je     0x14002585a
   1400257e7:	rex.X jns 0x14002582a
   1400257ea:	push   rcx
   1400257eb:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   1400257f3:	rex
   1400257f4:	rex
   1400257f5:	rex.WRB
   1400257f6:	rex.RB
   1400257f7:	rex.B
   1400257f8:	pop    r8
   1400257fa:	rex.W
   1400257fb:	rex.W
   1400257fc:	rex pop rdx
   1400257fe:	add    BYTE PTR [rax],al
   140025800:	cmc    
   140025801:	and    BYTE PTR [rdi],bh
   140025803:	jbe    0x14002586e
   140025805:	gs ja  0x140025878
   140025808:	outs   dx,DWORD PTR ds:[rsi]
   140025809:	jb     0x14002587f
   14002580b:	push   rbx
   14002580c:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   140025813:	rex push rcx
   140025815:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   14002581d:	rex
   14002581e:	rex
   14002581f:	rex.WRB
   140025820:	rex.RB
   140025821:	rex.X
   140025822:	rex.B (bad) 
   140025824:	push   r14
   140025826:	push   rcx
   140025827:	push   rbx
   140025828:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14002582f:	add    BYTE PTR [rsi+0x65733f19],dl
   140025835:	je     0x140025884
   140025837:	outs   dx,DWORD PTR ds:[rsi]
   140025838:	fs gs ins BYTE PTR es:[rdi],dx
   14002583b:	rex push rcx
   14002583d:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140025845:	gs je  0x140025888
   140025848:	rex
   140025849:	rex.RB
   14002584a:	rex.RB
   14002584b:	rex.B
   14002584c:	pop    r8
   14002584e:	push   rax
   14002584f:	rex.RB
   140025850:	push   r14
   140025852:	push   rcx
   140025853:	(bad)
   140025859:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14002585d:	gs ins DWORD PTR es:[rdi],dx
   14002585f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025861:	fs gs ins BYTE PTR es:[rdi],dx
   140025864:	rex
   140025865:	rex
   140025866:	rex pop rdx
   140025868:	add    BYTE PTR [rax],al
   14002586a:	mov    ch,0x1a
   14002586c:	(bad)  
   14002586d:	jae    0x1400258d4
   14002586f:	je     0x1400258c4
   140025871:	gs ins BYTE PTR es:[rdi],dx
   140025873:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140025878:	outs   dx,BYTE PTR ds:[rsi]
   140025879:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002587b:	fs gs ins BYTE PTR es:[rdi],dx
   14002587e:	rex push rcx
   140025880:	(bad)
   140025886:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14002588a:	gs ins DWORD PTR es:[rdi],dx
   14002588c:	push   rsi
   14002588d:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140025894:	rex.B
   140025895:	pop    r8
   140025897:	push   rax
   140025898:	rex.RB
   140025899:	push   r14
   14002589b:	push   rcx
   14002589c:	rex.WB je 0x140025904
   14002589f:	ins    DWORD PTR es:[rdi],dx
   1400258a0:	push   rbx
   1400258a1:	gs ins BYTE PTR es:[rdi],dx
   1400258a3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400258a8:	outs   dx,BYTE PTR ds:[rsi]
   1400258a9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400258ab:	fs gs ins BYTE PTR es:[rdi],dx
   1400258ae:	rex
   1400258af:	rex
   1400258b0:	rex pop rdx
   1400258b2:	add    BYTE PTR [rax],al
   1400258b4:	outs   dx,BYTE PTR ds:[rsi]
   1400258b5:	(bad)  
   1400258b7:	imul   esp,DWORD PTR [rbp+0x79],0x62
   1400258bb:	outs   dx,DWORD PTR ds:[rsi]
   1400258bc:	(bad)  
   1400258bd:	jb     0x140025923
   1400258bf:	push   rbx
   1400258c0:	gs (bad) 
   1400258c2:	jb     0x140025927
   1400258c4:	push   0x62415140
   1400258c9:	jae    0x14002593f
   1400258cb:	jb     0x14002592e
   1400258cd:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400258d1:	gs ins DWORD PTR es:[rdi],dx
   1400258d3:	push   rsi
   1400258d4:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400258db:	rex.B
   1400258dc:	pop    r8
   1400258de:	rex.B
   1400258df:	rex.RB
   1400258e0:	rex.X push rsi
   1400258e2:	push   rcx
   1400258e3:	push   rbx
   1400258e4:	je     0x140025958
   1400258e6:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400258ed:	add    BYTE PTR [rdi],cl
   1400258ef:	and    DWORD PTR [rdi],edi
   1400258f1:	jbe    0x14002595c
   1400258f3:	jae    0x14002596a
   1400258f5:	(bad)  
   1400258f6:	ins    BYTE PTR es:[rdi],dx
   1400258f7:	push   rdx
   1400258f8:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   1400258fd:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025905:	rex
   140025906:	rex push rbp
   140025908:	rex.RB
   140025909:	rex.X
   14002590a:	rex.B (bad) 
   14002590c:	push   r14
   14002590e:	push   rcx
   14002590f:	push   rdx
   140025910:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140025915:	rex.B
   140025916:	rex.RB
   140025917:	rex.X push rsi
   140025919:	push   rcx
   14002591a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002591c:	fs gs ins BYTE PTR es:[rdi],dx
   14002591f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025921:	fs gs js 0x140025965
   140025925:	rex
   140025926:	rex pop rdx
   140025928:	add    BYTE PTR [rax],al
   14002592a:	rex.WRB (bad) 
   14002592c:	(bad)  
   14002592d:	jae    0x140025992
   14002592f:	jb     0x1400259a0
   140025931:	ins    BYTE PTR es:[rdi],dx
   140025932:	ins    BYTE PTR es:[rdi],dx
   140025933:	push   rsp
   140025934:	outs   dx,DWORD PTR ds:[rsi]
   140025935:	rex push rcx
   140025937:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   14002593f:	rex
   140025940:	rex push rbp
   140025942:	rex.RB
   140025943:	rex.B
   140025944:	pop    r8
   140025946:	rex.B
   140025947:	rex.RB
   140025948:	rex.X push rsi
   14002594a:	push   rcx
   14002594b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002594d:	fs gs ins BYTE PTR es:[rdi],dx
   140025950:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025952:	fs gs js 0x140025996
   140025956:	rex push rdi
   140025958:	xor    al,0x53
   14002595a:	movsxd esi,DWORD PTR [rdx+0x6f]
   14002595d:	ins    BYTE PTR es:[rdi],dx
   14002595e:	ins    BYTE PTR es:[rdi],dx
   14002595f:	imul   rbp,QWORD PTR [rsi+0x74],0x62415140
   140025967:	jae    0x1400259dd
   140025969:	jb     0x1400259cc
   14002596b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14002596f:	gs ins DWORD PTR es:[rdi],dx
   140025971:	push   rsi
   140025972:	imul   esp,DWORD PTR [rbp+0x77],0x5a404040
   140025979:	add    BYTE PTR [rsi],bl
   14002597b:	or     eax,0x646e693f
   140025980:	gs js  0x1400259c4
   140025983:	je     0x1400259c5
   140025985:	push   rcx
   140025986:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   14002598e:	rex
   14002598f:	rex push rbp
   140025991:	rex.RB
   140025992:	rex.X
   140025993:	rex.B (bad) 
   140025995:	push   r14
   140025997:	push   rcx
   140025998:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002599a:	fs gs ins BYTE PTR es:[rdi],dx
   14002599d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002599f:	fs gs js 0x1400259e3
   1400259a3:	rex
   1400259a4:	rex.B
   1400259a5:	rex.RB
   1400259a6:	rex.X push rsi
   1400259a8:	push   rcx
   1400259a9:	push   rax
   1400259aa:	outs   dx,DWORD PTR ds:[rsi]
   1400259ab:	imul   ebp,DWORD PTR [rsi+0x74],0x5a404040
   1400259b2:	add    BYTE PTR [rax],al
   1400259b4:	enter  0x3f1c,0x73
   1400259b8:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   1400259bf:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400259c1:	jb     0x140025a06
   1400259c3:	outs   dx,DWORD PTR ds:[rsi]
   1400259c4:	ins    BYTE PTR es:[rdi],dx
   1400259c5:	jne    0x140025a34
   1400259c7:	outs   dx,BYTE PTR ds:[rsi]
   1400259c8:	rex push rcx
   1400259ca:	(bad)
   1400259d0:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400259d4:	gs ins DWORD PTR es:[rdi],dx
   1400259d6:	push   rsi
   1400259d7:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   1400259de:	rex.X
   1400259df:	rex.B
   1400259e0:	rex.W
   1400259e1:	rex.W
   1400259e2:	rex pop rdx
   1400259e4:	add    BYTE PTR [rax],al
   1400259e6:	(bad)  
   1400259e7:	adc    eax,0x7365723f
   1400259ec:	gs je  0x140025a2f
   1400259ef:	push   rcx
   1400259f0:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   1400259f8:	rex
   1400259f9:	rex push rbp
   1400259fb:	rex.RB
   1400259fc:	rex.B
   1400259fd:	pop    r8
   1400259ff:	pop    rax
   140025a00:	pop    rdx
   140025a01:	add    BYTE PTR [rdi+0x1a],ah
   140025a04:	(bad)  
   140025a05:	jae    0x140025a6c
   140025a07:	je     0x140025a5b
   140025a09:	outs   dx,DWORD PTR ds:[rsi]
   140025a0a:	outs   dx,DWORD PTR ds:[rsi]
   140025a0b:	je     0x140025a56
   140025a0d:	outs   dx,BYTE PTR ds:[rsi]
   140025a0e:	fs gs js 0x140025a52
   140025a12:	push   rcx
   140025a13:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025a1b:	rex
   140025a1c:	rex push rbp
   140025a1e:	rex.RB
   140025a1f:	rex.B
   140025a20:	pop    r8
   140025a22:	rex.B
   140025a23:	rex.RB
   140025a24:	rex.X push rsi
   140025a26:	push   rcx
   140025a27:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025a29:	fs gs ins BYTE PTR es:[rdi],dx
   140025a2c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025a2e:	fs gs js 0x140025a72
   140025a32:	rex
   140025a33:	rex pop rdx
   140025a35:	add    cl,ah
   140025a37:	or     DWORD PTR [rdi],edi
   140025a39:	outs   dx,DWORD PTR fs:[rsi]
   140025a3b:	rex.WB je 0x140025aa3
   140025a3e:	ins    DWORD PTR es:[rdi],dx
   140025a3f:	jae    0x140025a8d
   140025a41:	(bad)  
   140025a42:	jns    0x140025ab3
   140025a44:	jne    0x140025aba
   140025a46:	rex push rcx
   140025a48:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025a50:	rex
   140025a51:	rex push rbp
   140025a53:	rex.RB
   140025a54:	rex.B
   140025a55:	pop    r8
   140025a57:	pop    rax
   140025a58:	pop    rdx
   140025a59:	add    BYTE PTR [rcx+0x16],bh
   140025a5c:	(bad)  
   140025a5d:	jae    0x140025ac4
   140025a5f:	ins    BYTE PTR es:[rdi],dx
   140025a60:	movsxd esi,DWORD PTR gs:[rcx+rax*2+0x6c]
   140025a65:	ins    BYTE PTR es:[rdi],dx
   140025a66:	rex push rcx
   140025a68:	(bad)
   140025a6e:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140025a72:	gs ins DWORD PTR es:[rdi],dx
   140025a74:	push   rsi
   140025a75:	imul   esp,DWORD PTR [rbp+0x77],0x45554040
   140025a7c:	rex.B
   140025a7d:	pop    r8
   140025a7f:	pop    rax
   140025a80:	pop    rdx
   140025a81:	add    BYTE PTR [rax+0x61643f09],bl
   140025a87:	je     0x140025aea
   140025a89:	rex.XB push 0x65676e61
   140025a8f:	fs rex push rcx
   140025a92:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025a9a:	rex
   140025a9b:	rex
   140025a9c:	rex.WRB
   140025a9d:	rex.RB
   140025a9e:	rex.B
   140025a9f:	pop    r8
   140025aa1:	rex.B
   140025aa2:	rex.RB
   140025aa3:	rex.X push rsi
   140025aa5:	push   rcx
   140025aa6:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025aa8:	fs gs ins BYTE PTR es:[rdi],dx
   140025aab:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025aad:	fs gs js 0x140025af1
   140025ab1:	xor    BYTE PTR [rcx+0x45],al
   140025ab5:	rex.X push rsi
   140025ab7:	(bad)  
   140025ab8:	and    al,0x51
   140025aba:	push   rsi
   140025abb:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140025ac0:	rex
   140025ac1:	rex.W
   140025ac2:	rex
   140025ac3:	rex
   140025ac4:	rex pop rdx
   140025ac6:	add    BYTE PTR [rax],al
   140025ac8:	call   QWORD PTR [rip+0x776f723f]        # 0x1b771cd0d
   140025ace:	jae    0x140025b19
   140025ad0:	outs   dx,BYTE PTR ds:[rsi]
   140025ad1:	jae    0x140025b38
   140025ad3:	jb     0x140025b49
   140025ad5:	gs fs rex push rcx
   140025ad9:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025ae1:	rex
   140025ae2:	rex
   140025ae3:	rex.WRB
   140025ae4:	rex.RB
   140025ae5:	rex.B
   140025ae6:	pop    r8
   140025ae8:	rex.B
   140025ae9:	rex.RB
   140025aea:	rex.X push rsi
   140025aec:	push   rcx
   140025aed:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025aef:	fs gs ins BYTE PTR es:[rdi],dx
   140025af2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025af4:	fs gs js 0x140025b38
   140025af8:	rex
   140025af9:	rex.W
   140025afa:	rex.W
   140025afb:	rex pop rdx
   140025afd:	add    dl,bh
   140025aff:	adc    eax,0x776f723f
   140025b04:	jae    0x140025b47
   140025b06:	(bad)  
   140025b07:	outs   dx,DWORD PTR ds:[rsi]
   140025b08:	jne    0x140025b7e
   140025b0a:	push   rsp
   140025b0b:	outs   dx,DWORD PTR ds:[rsi]
   140025b0c:	rex.X
   140025b0d:	gs push rdx
   140025b0f:	gs ins DWORD PTR es:[rdi],dx
   140025b11:	outs   dx,DWORD PTR ds:[rsi]
   140025b12:	jbe    0x140025b79
   140025b14:	fs rex push rcx
   140025b17:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025b1f:	rex
   140025b20:	rex
   140025b21:	rex.WRB
   140025b22:	rex.RB
   140025b23:	rex.B
   140025b24:	pop    r8
   140025b26:	rex.B
   140025b27:	rex.RB
   140025b28:	rex.X push rsi
   140025b2a:	push   rcx
   140025b2b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025b2d:	fs gs ins BYTE PTR es:[rdi],dx
   140025b30:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025b32:	fs gs js 0x140025b76
   140025b36:	rex
   140025b37:	rex.W
   140025b38:	rex.W
   140025b39:	rex pop rdx
   140025b3b:	add    BYTE PTR [rdi+0x65733f16],ah
   140025b41:	ins    BYTE PTR es:[rdi],dx
   140025b42:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140025b47:	outs   dx,BYTE PTR ds:[rsi]
   140025b48:	rex.XB push 0x65676e61
   140025b4e:	fs rex push rcx
   140025b51:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025b59:	rex
   140025b5a:	rex
   140025b5b:	rex.WRB
   140025b5c:	rex.RB
   140025b5d:	rex.B
   140025b5e:	pop    r8
   140025b60:	rex.B
   140025b61:	rex.RB
   140025b62:	rex.X push rsi
   140025b64:	push   rcx
   140025b65:	rex.WB je 0x140025bcd
   140025b68:	ins    DWORD PTR es:[rdi],dx
   140025b69:	push   rbx
   140025b6a:	gs ins BYTE PTR es:[rdi],dx
   140025b6c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140025b71:	outs   dx,BYTE PTR ds:[rsi]
   140025b72:	rex
   140025b73:	xor    BYTE PTR [rax+0x5a],al
   140025b77:	add    ah,ch
   140025b79:	(bad)  
   140025b7a:	(bad)  
   140025b7b:	movsxd esi,DWORD PTR [rbp+0x72]
   140025b7e:	jb     0x140025be5
   140025b80:	outs   dx,BYTE PTR ds:[rsi]
   140025b81:	je     0x140025bc6
   140025b83:	push   0x65676e61
   140025b88:	fs rex push rcx
   140025b8b:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025b93:	rex
   140025b94:	rex
   140025b95:	rex.WRB
   140025b96:	rex.RB
   140025b97:	rex.B
   140025b98:	pop    r8
   140025b9a:	rex.B
   140025b9b:	rex.RB
   140025b9c:	rex.X push rsi
   140025b9e:	push   rcx
   140025b9f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025ba1:	fs gs ins BYTE PTR es:[rdi],dx
   140025ba4:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025ba6:	fs gs js 0x140025bea
   140025baa:	xor    BYTE PTR [rax+0x5a],al
   140025bae:	add    BYTE PTR [rax],al
   140025bb0:	jl     0x140025bd2
   140025bb2:	(bad)  
   140025bb3:	jne    0x140025c25
   140025bb5:	fs (bad) 
   140025bb7:	je     0x140025c1e
   140025bb9:	rex.RXB
   140025bba:	outs   dx,DWORD PTR gs:[rsi]
   140025bbc:	ins    DWORD PTR es:[rdi],dx
   140025bbd:	gs je  0x140025c32
   140025bc0:	imul   esp,DWORD PTR [rbp+0x73],0x694c5140
   140025bc7:	jae    0x140025c3d
   140025bc9:	push   rsi
   140025bca:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140025bd1:	rex.B
   140025bd2:	pop    r8
   140025bd4:	pop    rax
   140025bd5:	pop    rdx
   140025bd6:	add    BYTE PTR [rax],al
   140025bd8:	(bad)  
   140025bd9:	or     al,0x3f
   140025bdb:	push   0x7a69726f
   140025be0:	outs   dx,DWORD PTR ds:[rsi]
   140025be1:	outs   dx,BYTE PTR ds:[rsi]
   140025be2:	je     0x140025c45
   140025be4:	ins    BYTE PTR es:[rdi],dx
   140025be5:	push   rbx
   140025be6:	movsxd esi,DWORD PTR [rdx+0x6f]
   140025be9:	ins    BYTE PTR es:[rdi],dx
   140025bea:	ins    BYTE PTR es:[rdi],dx
   140025beb:	(bad)  
   140025bed:	jb     0x140025c30
   140025bef:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140025bf3:	outs   dx,BYTE PTR ds:[rsi]
   140025bf4:	rex push rcx
   140025bf6:	(bad)
   140025bfc:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140025c00:	gs ins DWORD PTR es:[rdi],dx
   140025c02:	push   rsi
   140025c03:	imul   esp,DWORD PTR [rbp+0x77],0x454d4040
   140025c0a:	rex.B
   140025c0b:	pop    r8
   140025c0d:	rex.W
   140025c0e:	rex pop rdx
   140025c10:	add    BYTE PTR [rax],al
   140025c12:	scas   al,BYTE PTR es:[rdi]
   140025c13:	adc    DWORD PTR [rdi],edi
   140025c15:	ins    DWORD PTR es:[rdi],dx
   140025c16:	outs   dx,DWORD PTR ds:[rsi]
   140025c17:	jbe    0x140025c7e
   140025c19:	rex.XB jne 0x140025c8e
   140025c1c:	jae    0x140025c8d
   140025c1e:	jb     0x140025c60
   140025c20:	push   rcx
   140025c21:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025c29:	rex
   140025c2a:	rex
   140025c2b:	rex.WRB
   140025c2c:	rex.RB
   140025c2d:	rex.B
   140025c2e:	rex.B (bad) 
   140025c30:	push   r14
   140025c32:	push   rcx
   140025c33:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025c35:	fs gs ins BYTE PTR es:[rdi],dx
   140025c38:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025c3a:	fs gs js 0x140025c7e
   140025c3e:	rex push rdi
   140025c40:	xor    al,0x43
   140025c42:	jne    0x140025cb6
   140025c44:	jae    0x140025cb5
   140025c46:	jb     0x140025c89
   140025c48:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140025c4c:	outs   dx,BYTE PTR ds:[rsi]
   140025c4d:	rex push rcx
   140025c4f:	(bad)
   140025c55:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   140025c59:	gs ins DWORD PTR es:[rdi],dx
   140025c5b:	push   rsi
   140025c5c:	imul   esp,DWORD PTR [rbp+0x77],0x3f564040
   140025c63:	and    al,0x51
   140025c65:	rex.RX ins BYTE PTR es:[rdi],dx
   140025c67:	(bad)  
   140025c68:	addr32 jae 0x140025cab
   140025c6b:	push   rdi
   140025c6c:	xor    al,0x4b
   140025c6e:	gs jns 0x140025cd3
   140025c71:	outs   dx,DWORD PTR ds:[rsi]
   140025c72:	(bad)  
   140025c73:	jb     0x140025cd9
   140025c75:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025c77:	imul   esp,DWORD PTR fs:[rsi+0x69],0x51407265
   140025c7f:	je     0x140025cc1
   140025c81:	rex
   140025c82:	rex
   140025c83:	rex
   140025c84:	rex pop rdx
   140025c86:	add    BYTE PTR [rax],al
   140025c88:	int3   
   140025c89:	or     al,0x3f
   140025c8b:	push   0x7a69726f
   140025c90:	outs   dx,DWORD PTR ds:[rsi]
   140025c91:	outs   dx,BYTE PTR ds:[rsi]
   140025c92:	je     0x140025cf5
   140025c94:	ins    BYTE PTR es:[rdi],dx
   140025c95:	rex.WRXB
   140025c96:	data16 data16 jae 0x140025cff
   140025c9a:	je     0x140025cdc
   140025c9c:	push   rcx
   140025c9d:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025ca5:	rex
   140025ca6:	rex
   140025ca7:	rex.WRB
   140025ca8:	rex.RB
   140025ca9:	rex.X
   140025caa:	rex.B
   140025cab:	rex.W pop rax
   140025cad:	pop    rdx
   140025cae:	add    BYTE PTR [rax],al
   140025cb0:	(bad)  
   140025cb1:	and    BYTE PTR [rdi],bh
   140025cb3:	jbe    0x140025d1a
   140025cb5:	jb     0x140025d2b
   140025cb7:	imul   esp,DWORD PTR [rbx+0x61],0x66664f6c
   140025cbe:	jae    0x140025d25
   140025cc0:	je     0x140025d02
   140025cc2:	push   rcx
   140025cc3:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025ccb:	rex
   140025ccc:	rex
   140025ccd:	rex.WRB
   140025cce:	rex.RB
   140025ccf:	rex.X
   140025cd0:	rex.B
   140025cd1:	rex.W pop rax
   140025cd3:	pop    rdx
   140025cd4:	add    BYTE PTR [rax],al
   140025cd6:	push   rdi
   140025cd7:	(bad)  
   140025cd8:	(bad)  
   140025cd9:	imul   esi,DWORD PTR [rbx+0x49],0x7865646e
   140025ce0:	imul   rsp,QWORD PTR [rsp+riz*2+0x65],0x4c51406e
   140025ce9:	imul   esi,DWORD PTR [rbx+0x74],0x77656956
   140025cf0:	rex
   140025cf1:	rex
   140025cf2:	rex.WRB
   140025cf3:	rex.RB
   140025cf4:	rex.X
   140025cf5:	pop    r15
   140025cf7:	rex.WRX
   140025cf8:	rex.B
   140025cf9:	rex.RB
   140025cfa:	rex.X push rsi
   140025cfc:	push   rcx
   140025cfd:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025cff:	fs gs ins BYTE PTR es:[rdi],dx
   140025d02:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025d04:	fs gs js 0x140025d48
   140025d08:	rex
   140025d09:	rex pop rdx
   140025d0b:	add    BYTE PTR [rdx+0x65733f1a],ch
   140025d11:	je     0x140025d66
   140025d13:	gs ins BYTE PTR es:[rdi],dx
   140025d15:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140025d1a:	outs   dx,BYTE PTR ds:[rsi]
   140025d1b:	rex push rcx
   140025d1d:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025d25:	rex
   140025d26:	rex
   140025d27:	rex.WRB
   140025d28:	rex.RB
   140025d29:	rex.B
   140025d2a:	pop    r8
   140025d2c:	rex.B
   140025d2d:	rex.RB
   140025d2e:	rex.X push rsi
   140025d30:	push   rcx
   140025d31:	push   rdx
   140025d32:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x40]
   140025d37:	push   rsi
   140025d38:	(bad)  
   140025d39:	and    al,0x51
   140025d3b:	rex.RX ins BYTE PTR es:[rdi],dx
   140025d3d:	(bad)  
   140025d3e:	addr32 jae 0x140025d81
   140025d41:	push   rdi
   140025d42:	xor    al,0x53
   140025d44:	gs ins BYTE PTR es:[rdi],dx
   140025d46:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140025d4b:	outs   dx,BYTE PTR ds:[rsi]
   140025d4c:	rex.RX ins BYTE PTR es:[rdi],dx
   140025d4e:	(bad)  
   140025d4f:	addr32 rex push rcx
   140025d52:	rex.WB je 0x140025dba
   140025d55:	ins    DWORD PTR es:[rdi],dx
   140025d56:	push   rbx
   140025d57:	gs ins BYTE PTR es:[rdi],dx
   140025d59:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140025d5e:	outs   dx,BYTE PTR ds:[rsi]
   140025d5f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140025d61:	fs gs ins BYTE PTR es:[rdi],dx
   140025d64:	rex
   140025d65:	rex
   140025d66:	rex
   140025d67:	rex
   140025d68:	rex pop rdx
   140025d6a:	add    BYTE PTR [rax],al
   140025d6c:	adc    eax,0x69763f21
   140025d71:	jae    0x140025de8
   140025d73:	(bad)  
   140025d74:	ins    BYTE PTR es:[rdi],dx
   140025d75:	push   rdx
   140025d76:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x53726f46
   140025d7f:	gs ins BYTE PTR es:[rdi],dx
   140025d81:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140025d86:	outs   dx,BYTE PTR ds:[rsi]
   140025d87:	rex push rcx
   140025d89:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025d91:	rex
   140025d92:	rex
   140025d93:	rex.WRB
   140025d94:	rex.RB
   140025d95:	rex.X
   140025d96:	rex.B (bad) 
   140025d98:	push   r14
   140025d9a:	push   rcx
   140025d9b:	push   rdx
   140025d9c:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x45414040
   140025da5:	rex.X push rsi
   140025da7:	push   rcx
   140025da8:	rex.WB je 0x140025e10
   140025dab:	ins    DWORD PTR es:[rdi],dx
   140025dac:	push   rbx
   140025dad:	gs ins BYTE PTR es:[rdi],dx
   140025daf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140025db4:	outs   dx,BYTE PTR ds:[rsi]
   140025db5:	rex
   140025db6:	rex
   140025db7:	rex pop rdx
   140025db9:	add    BYTE PTR [rdx+0x65733f16],dl
   140025dbf:	ins    BYTE PTR es:[rdi],dx
   140025dc0:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140025dc5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025dc7:	fs gs js 0x140025e30
   140025dcb:	jae    0x140025e0d
   140025dcd:	push   rcx
   140025dce:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025dd6:	rex
   140025dd7:	rex
   140025dd8:	rex.WRB
   140025dd9:	rex.RB
   140025dda:	rex.X
   140025ddb:	rex.B (bad) 
   140025ddd:	push   r14
   140025ddf:	(bad)  
   140025de0:	and    al,0x51
   140025de2:	imul   r14,QWORD PTR [rbx+0x74],0x4d515640
   140025dea:	outs   dx,DWORD PTR ds:[rsi]
   140025deb:	fs gs ins BYTE PTR es:[rdi],dx
   140025dee:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140025df0:	fs gs js 0x140025e34
   140025df4:	rex
   140025df5:	rex
   140025df6:	rex pop rax
   140025df8:	pop    rdx
   140025df9:	add    BYTE PTR [rcx],ah
   140025dfb:	sbb    eax,0x6174733f
   140025e00:	jb     0x140025e76
   140025e02:	rex.R jb 0x140025e66
   140025e05:	addr32 rex push rcx
   140025e08:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   140025e10:	rex
   140025e11:	rex
   140025e12:	rex.WRB
   140025e13:	rex.RB
   140025e14:	rex.B
   140025e15:	pop    r8
   140025e17:	push   rsi
   140025e18:	(bad)  
   140025e19:	and    al,0x51
   140025e1b:	rex.RX ins BYTE PTR es:[rdi],dx
   140025e1d:	(bad)  
   140025e1e:	addr32 jae 0x140025e61
   140025e21:	push   rdi
   140025e22:	xor    al,0x44
   140025e24:	jb     0x140025e95
   140025e26:	jo     0x140025e69
   140025e28:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140025e2c:	outs   dx,BYTE PTR ds:[rsi]
   140025e2d:	rex push rcx
   140025e2f:	je     0x140025e71
   140025e31:	rex
   140025e32:	rex
   140025e33:	rex
   140025e34:	rex pop rdx
   140025e36:	add    BYTE PTR [rax],al
   140025e38:	out    0x20,eax
   140025e3a:	(bad)  
   140025e3b:	jbe    0x140025ea6
   140025e3d:	gs ja  0x140025e8f
   140025e40:	jo     0x140025eb6
   140025e42:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c514073
   140025e49:	imul   esi,DWORD PTR [rbx+0x74],0x77656956
   140025e50:	rex
   140025e51:	rex
   140025e52:	rex.WRB
   140025e53:	rex.RB
   140025e54:	rex.X
   140025e55:	rex.B (bad) 
   140025e57:	push   r14
   140025e59:	push   rcx
   140025e5a:	push   rbx
   140025e5b:	je     0x140025ed6
   140025e5d:	ins    BYTE PTR es:[rdi],dx
   140025e5e:	gs rex.WRXB jo 0x140025ed6
   140025e62:	imul   ebp,DWORD PTR [rdi+0x6e],0x77656956
   140025e69:	rex.WB je 0x140025ed1
   140025e6c:	ins    DWORD PTR es:[rdi],dx
   140025e6d:	rex
   140025e6e:	rex pop rax
   140025e70:	pop    rdx
   140025e71:	add    ah,ah
   140025e73:	adc    BYTE PTR [rdi],bh
   140025e75:	ins    DWORD PTR es:[rdi],dx
   140025e76:	imul   ebp,DWORD PTR [rbp+0x65],0x65707954
   140025e7d:	jae    0x140025ebf
   140025e7f:	push   rcx
   140025e80:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140025e88:	gs je  0x140025ecb
   140025e8b:	rex
   140025e8c:	rex.WRB
   140025e8d:	rex.RB
   140025e8e:	rex.X
   140025e8f:	rex.B (bad) 
   140025e91:	push   r14
   140025e93:	push   rcx
   140025e94:	push   rbx
   140025e95:	je     0x140025f09
   140025e97:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140025e9e:	rex
   140025e9f:	rex pop rax
   140025ea1:	pop    rdx
   140025ea2:	add    BYTE PTR [rax],al
   140025ea4:	ficom  WORD PTR [rax]
   140025ea6:	(bad)  
   140025ea7:	ins    DWORD PTR es:[rdi],dx
   140025ea8:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   140025eaf:	rex push rcx
   140025eb1:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140025eb9:	gs je  0x140025efc
   140025ebc:	rex
   140025ebd:	rex.WRB
   140025ebe:	rex.RB
   140025ebf:	rex.X
   140025ec0:	push   r8
   140025ec2:	rex.RB
   140025ec3:	push   r14
   140025ec5:	push   rcx
   140025ec6:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   140025ece:	rex
   140025ecf:	rex push rsi
   140025ed1:	(bad)  
   140025ed2:	and    al,0x51
   140025ed4:	imul   r14,QWORD PTR [rbx+0x74],0x41455040
   140025edc:	push   rsi
   140025edd:	push   rcx
   140025ede:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140025ee6:	gs je  0x140025f32
   140025ee9:	je     0x140025f50
   140025eeb:	ins    DWORD PTR es:[rdi],dx
   140025eec:	rex
   140025eed:	rex
   140025eee:	rex
   140025eef:	rex
   140025ef0:	rex pop rdx
   140025ef2:	add    BYTE PTR [rax],al
   140025ef4:	jno    0x140025f00
   140025ef6:	(bad)  
   140025ef7:	fs jb  0x140025f69
   140025efa:	jo     0x140025f49
   140025efc:	imul   ebp,DWORD PTR [rbp+0x65],0x61746144
   140025f03:	rex push rcx
   140025f05:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140025f0d:	gs je  0x140025f50
   140025f10:	rex
   140025f11:	rex.WRB
   140025f12:	rex.RB
   140025f13:	rex.B
   140025f14:	pop    r15
   140025f16:	rex.WRX
   140025f17:	rex.W push rax
   140025f19:	rex.RB
   140025f1a:	rex.X push rsi
   140025f1c:	push   rcx
   140025f1d:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   140025f25:	rex
   140025f26:	rex push rdi
   140025f28:	xor    al,0x44
   140025f2a:	jb     0x140025f9b
   140025f2c:	jo     0x140025f6f
   140025f2e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140025f32:	outs   dx,BYTE PTR ds:[rsi]
   140025f33:	rex push rcx
   140025f35:	je     0x140025f77
   140025f37:	rex
   140025f38:	rex pop rdx
   140025f3a:	add    BYTE PTR [rax],al
   140025f3c:	out    dx,eax
   140025f3d:	sbb    eax,0x7075733f
   140025f42:	jo     0x140025fb3
   140025f44:	jb     0x140025fba
   140025f46:	gs fs rex.R jb 0x140025fba
   140025f4b:	jo     0x140025f8e
   140025f4d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140025f51:	outs   dx,BYTE PTR ds:[rsi]
   140025f52:	jae    0x140025f94
   140025f54:	push   rcx
   140025f55:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140025f5d:	gs je  0x140025fa0
   140025f60:	rex
   140025f61:	rex.WRB
   140025f62:	rex.RB
   140025f63:	rex.X
   140025f64:	rex.B (bad) 
   140025f66:	push   r14
   140025f68:	(bad)  
   140025f69:	and    al,0x51
   140025f6b:	rex.RX ins BYTE PTR es:[rdi],dx
   140025f6d:	(bad)  
   140025f6e:	addr32 jae 0x140025fb1
   140025f71:	push   rdi
   140025f72:	xor    al,0x44
   140025f74:	jb     0x140025fe5
   140025f76:	jo     0x140025fb9
   140025f78:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140025f7c:	outs   dx,BYTE PTR ds:[rsi]
   140025f7d:	rex push rcx
   140025f7f:	je     0x140025fc1
   140025f81:	rex
   140025f82:	rex
   140025f83:	rex pop rax
   140025f85:	pop    rdx
   140025f86:	add    BYTE PTR [rax],al
   140025f88:	adc    al,0x2
   140025f8a:	(bad)  
   140025f8b:	(bad)  
   140025f8c:	xor    DWORD PTR [rcx+0x4c],edx
   140025f8f:	imul   esi,DWORD PTR [rbx+0x74],0x67646957
   140025f96:	gs je  0x140025fd9
   140025f99:	rex push rbp
   140025f9b:	rex.RB
   140025f9c:	rex.B
   140025f9d:	rex.B
   140025f9e:	rex pop rax
   140025fa0:	pop    rdx
   140025fa1:	add    BYTE PTR [rcx],dl
   140025fa3:	or     al,0x3f
   140025fa5:	addr32 gs je 0x140025fee
   140025fa9:	js     0x140026014
   140025fab:	jae    0x140026021
   140025fad:	imul   ebp,DWORD PTR [rsi+0x67],0x65726944
   140025fb4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140025fb8:	jns    0x140025ffa
   140025fba:	push   rcx
   140025fbb:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x6f6c6169
   140025fc4:	addr32 rex
   140025fc6:	rex push rbx
   140025fc8:	rex.B (bad) 
   140025fca:	push   r14
   140025fcc:	push   rcx
   140025fcd:	push   rbx
   140025fce:	je     0x140026042
   140025fd0:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   140025fd7:	push   r14
   140025fd9:	push   rcx
   140025fda:	push   rdi
   140025fdb:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x41404074
   140025fe3:	rex.RB
   140025fe4:	rex.X push rsi
   140025fe6:	xor    al,BYTE PTR [rax+0x31]
   140025fe9:	push   rsi
   140025fea:	(bad)  
   140025feb:	and    al,0x51
   140025fed:	rex.RX ins BYTE PTR es:[rdi],dx
   140025fef:	(bad)  
   140025ff0:	addr32 jae 0x140026033
   140025ff3:	push   rdi
   140025ff4:	xor    al,0x4f
   140025ff6:	jo     0x14002606c
   140025ff8:	imul   ebp,DWORD PTR [rdi+0x6e],0x69465140
   140025fff:	ins    BYTE PTR es:[rdi],dx
   140026000:	imul   r12d,DWORD PTR gs:[rcx+0x6c],0x4040676f
   140026009:	rex
   14002600a:	rex
   14002600b:	rex pop rdx
   14002600d:	add    BYTE PTR [rsi+0x1e],dl
   140026010:	(bad)  
   140026011:	je     0x140026078
   140026013:	js     0x140026089
   140026015:	rex push rcx
   140026017:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   14002601f:	gs je  0x14002606b
   140026022:	je     0x140026089
   140026024:	ins    DWORD PTR es:[rdi],dx
   140026025:	rex
   140026026:	rex push rcx
   140026028:	rex.RB
   140026029:	rex.X
   14002602a:	rex.B (bad) 
   14002602c:	push   r14
   14002602e:	push   rcx
   14002602f:	push   rbx
   140026030:	je     0x1400260a4
   140026032:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140026039:	add    ah,cl
   14002603b:	(bad)  
   14002603c:	(bad)  
   14002603d:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x694c5140
   140026045:	jae    0x1400260bb
   140026047:	push   rdi
   140026048:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140026050:	rex.RB
   140026051:	rex.X
   140026052:	push   r8
   140026054:	rex.RB
   140026055:	push   r14
   140026057:	push   rcx
   140026058:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140026060:	gs je  0x1400260ac
   140026063:	je     0x1400260ca
   140026065:	ins    DWORD PTR es:[rdi],dx
   140026066:	rex
   140026067:	rex
   140026068:	rex.W
   140026069:	rex pop rdx
   14002606b:	add    BYTE PTR [rbx],dl
   14002606d:	sbb    al,0x3f
   14002606f:	jae    0x1400260d6
   140026071:	je     0x1400260ca
   140026073:	outs   dx,DWORD PTR ds:[rsi]
   140026074:	jb     0x1400260da
   140026076:	push   rdi
   140026077:	jb     0x1400260da
   140026079:	jo     0x1400260bb
   14002607b:	push   rcx
   14002607c:	rex.WR (bad) 
   14002607e:	(bad)  
   14002607f:	gs ins BYTE PTR es:[rdi],dx
   140026081:	rex
   140026082:	rex push rcx
   140026084:	rex.RB
   140026085:	rex.B
   140026086:	pop    r8
   140026088:	pop    rdi
   140026089:	rex.WRX
   14002608a:	rex pop rdx
   14002608c:	add    BYTE PTR [rax],al
   14002608e:	mov    bl,0x1a
   140026090:	(bad)  
   140026091:	jae    0x1400260f8
   140026093:	je     0x1400260e8
   140026095:	gs ins BYTE PTR es:[rdi],dx
   140026097:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14002609c:	outs   dx,BYTE PTR ds:[rsi]
   14002609d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002609f:	fs gs rex push rcx
   1400260a3:	(bad)
   1400260a9:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   1400260ad:	gs ins DWORD PTR es:[rdi],dx
   1400260af:	push   rsi
   1400260b0:	imul   esp,DWORD PTR [rbp+0x77],0x45514040
   1400260b7:	rex.B
   1400260b8:	pop    r8
   1400260ba:	push   rdi
   1400260bb:	xor    al,0x53
   1400260bd:	gs ins BYTE PTR es:[rdi],dx
   1400260bf:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400260c4:	outs   dx,BYTE PTR ds:[rsi]
   1400260c5:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400260c7:	fs rex xor DWORD PTR gs:[rax+0x40],eax
   1400260cd:	pop    rdx
   1400260ce:	add    BYTE PTR [rax],al
   1400260d0:	rol    DWORD PTR [rsi],cl
   1400260d2:	(bad)  
   1400260d3:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   1400260d7:	jb     0x140026119
   1400260d9:	push   rcx
   1400260da:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   1400260e2:	gs je  0x140026125
   1400260e5:	rex push rcx
   1400260e7:	rex.RB
   1400260e8:	rex.B
   1400260e9:	pop    r8
   1400260eb:	pop    rax
   1400260ec:	pop    rdx
   1400260ed:	add    BYTE PTR [rbx+0x6e693f0d],ah
   1400260f3:	jae    0x14002615a
   1400260f5:	jb     0x14002616b
   1400260f7:	rex.WB je 0x14002615f
   1400260fa:	ins    DWORD PTR es:[rdi],dx
   1400260fb:	jae    0x14002613d
   1400260fd:	push   rcx
   1400260fe:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   140026106:	gs je  0x140026149
   140026109:	rex push rcx
   14002610b:	rex.RB
   14002610c:	rex.B
   14002610d:	pop    r8
   14002610f:	rex.W
   140026110:	rex.B
   140026111:	rex.RB
   140026112:	rex.X push rsi
   140026114:	push   rcx
   140026115:	push   rbx
   140026116:	je     0x14002618a
   140026118:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   14002611f:	rex
   140026120:	rex
   140026121:	rex pop rdx
   140026123:	add    BYTE PTR [rsi+0x65733f16],dl
   140026129:	ins    BYTE PTR es:[rdi],dx
   14002612a:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14002612f:	rex.WB je 0x140026197
   140026132:	ins    DWORD PTR es:[rdi],dx
   140026133:	jae    0x140026175
   140026135:	push   rcx
   140026136:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   14002613e:	gs je  0x140026181
   140026141:	rex push rcx
   140026143:	rex.RB
   140026144:	rex.X
   140026145:	rex.B (bad) 
   140026147:	push   r14
   140026149:	(bad)  
   14002614a:	and    al,0x51
   14002614c:	imul   r14,QWORD PTR [rbx+0x74],0x41455040
   140026154:	push   rsi
   140026155:	push   rcx
   140026156:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   14002615e:	gs je  0x1400261aa
   140026161:	je     0x1400261c8
   140026163:	ins    DWORD PTR es:[rdi],dx
   140026164:	rex
   140026165:	rex
   140026166:	rex
   140026167:	rex pop rax
   140026169:	pop    rdx
   14002616a:	add    BYTE PTR [rax],al
   14002616c:	sbb    ah,BYTE PTR [rcx]
   14002616e:	(bad)  
   14002616f:	ja     0x1400261d2
   140026171:	jb     0x1400261e1
   140026173:	imul   ebp,DWORD PTR [rsi+0x67],0x654d5140
   14002617a:	jae    0x1400261ef
   14002617c:	(bad)  
   14002617d:	rex.X outs dx,DWORD PTR gs:[esi]
   140026181:	js     0x1400261c3
   140026183:	rex push rbx
   140026185:	rex.B
   140026186:	rex.W push rax
   140026188:	rex.RB
   140026189:	push   r14
   14002618b:	push   rcx
   14002618c:	push   rdi
   14002618d:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x41404074
   140026195:	rex.RB
   140026196:	rex.X push rsi
   140026198:	push   rcx
   140026199:	push   rbx
   14002619a:	je     0x14002620e
   14002619c:	imul   ebp,DWORD PTR [rsi+0x67],0x31314040
   1400261a3:	xor    DWORD PTR [rcx],esi
   1400261a5:	rex.W
   1400261a6:	rex.W
   1400261a7:	rex pop rdx
   1400261a9:	add    BYTE PTR [rdx],dh
   1400261ab:	(bad)  
   1400261ac:	(bad)  
   1400261ad:	jae    0x140026214
   1400261af:	je     0x1400261f3
   1400261b1:	jne    0x140026227
   1400261b3:	je     0x140026224
   1400261b5:	outs   dx,BYTE PTR ds:[rsi]
   1400261b6:	push   rsp
   1400261b7:	gs js  0x14002622e
   1400261ba:	rex push rcx
   1400261bc:	push   rdi
   1400261bd:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   1400261c4:	addr32 gs rex
   1400261c7:	rex push rcx
   1400261c9:	rex.RB
   1400261ca:	rex.B
   1400261cb:	pop    r8
   1400261cd:	push   rdi
   1400261ce:	xor    al,0x57
   1400261d0:	imul   edi,DWORD PTR [rdx+0x61],0x75426472
   1400261d7:	je     0x14002624d
   1400261d9:	outs   dx,DWORD PTR ds:[rsi]
   1400261da:	outs   dx,BYTE PTR ds:[rsi]
   1400261db:	rex push rcx
   1400261dd:	push   rdi
   1400261de:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   1400261e5:	rex.B
   1400261e6:	rex.RB
   1400261e7:	rex.X push rsi
   1400261e9:	push   rcx
   1400261ea:	push   rbx
   1400261eb:	je     0x14002625f
   1400261ed:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400261f4:	add    BYTE PTR [rax],al
   1400261f6:	jae    0x1400261f9
   1400261f8:	(bad)  
   1400261f9:	(bad)  
   1400261fa:	xor    BYTE PTR [rcx+0x54],dl
   1400261fd:	gs js  0x140026274
   140026200:	rex.RB
   140026201:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414551
   14002620a:	rex push rax
   14002620c:	rex.RB
   14002620d:	push   r14
   14002620f:	push   rcx
   140026210:	push   rdi
   140026211:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140026219:	pop    rdx
   14002621a:	add    BYTE PTR [rax],al
   14002621c:	xchg   ecx,eax
   14002621d:	add    DWORD PTR [rdi],edi
   14002621f:	(bad)  
   140026220:	xor    BYTE PTR [rcx+0x56],dl
   140026223:	rex.X outs dx,DWORD PTR ds:[rsi]
   140026225:	js     0x140026273
   140026227:	(bad)  
   140026228:	jns    0x140026299
   14002622a:	jne    0x1400262a0
   14002622c:	rex
   14002622d:	rex push rcx
   14002622f:	rex.RB
   140026230:	rex.B
   140026231:	rex.B
   140026232:	rex push rax
   140026234:	rex.RB
   140026235:	push   r14
   140026237:	push   rcx
   140026238:	push   rdi
   140026239:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x40404074
   140026241:	pop    rdx
   140026242:	add    BYTE PTR [rax],al
   140026244:	rex.W sbb BYTE PTR [rdi],dil
   140026247:	jae    0x1400262ae
   140026249:	je     0x140026291
   14002624b:	imul   ebp,DWORD PTR [rsi+0x61],0x6761506c
   140026252:	gs rex push rcx
   140026255:	push   rdi
   140026256:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   14002625d:	addr32 gs rex
   140026260:	rex push rcx
   140026262:	rex.RB
   140026263:	rex.B
   140026264:	pop    r8
   140026266:	pop    rdi
   140026267:	rex.WRX
   140026268:	rex pop rdx
   14002626a:	add    BYTE PTR [rax],al
   14002626c:	(bad)  
   14002626d:	adc    BYTE PTR [rdi],bh
   14002626f:	ins    DWORD PTR es:[rdi],dx
   140026270:	gs je  0x1400262d4
   140026273:	rex.WRXB (bad) 
   140026275:	push   0x65
   140026277:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14002627b:	push   rsi
   14002627c:	rex.X outs dx,DWORD PTR ds:[rsi]
   14002627e:	js     0x1400262cc
   140026280:	(bad)  
   140026281:	jns    0x1400262f2
   140026283:	jne    0x1400262f9
   140026285:	rex
   140026286:	rex push rbp
   140026288:	rex.RB
   140026289:	rex.X
   14002628a:	push   r8
   14002628c:	rex.RB
   14002628d:	rex.X push rbp
   14002628f:	push   rcx
   140026290:	rex.WRB
   140026291:	gs je  0x1400262f5
   140026294:	rex.WRXB (bad) 
   140026296:	push   0x65
   140026298:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14002629c:	pop    rax
   14002629d:	pop    rdx
   14002629e:	add    BYTE PTR [rax],al
   1400262a0:	rex.B adc al,0x3f
   1400262a3:	jno    0x140026319
   1400262a5:	pop    rdi
   1400262a6:	ins    DWORD PTR es:[rdi],dx
   1400262a7:	gs je  0x14002630b
   1400262aa:	movsxd esp,DWORD PTR [rcx+0x73]
   1400262ad:	je     0x1400262ef
   1400262af:	push   rcx
   1400262b0:	push   rsi
   1400262b1:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400262b3:	js     0x140026301
   1400262b5:	(bad)  
   1400262b6:	jns    0x140026327
   1400262b8:	jne    0x14002632e
   1400262ba:	rex
   1400262bb:	rex push rbp
   1400262bd:	rex.RB
   1400262be:	rex.B
   1400262bf:	push   r8
   1400262c1:	rex.RB
   1400262c2:	pop    r8
   1400262c4:	push   rax
   1400262c5:	rex.RB
   1400262c6:	rex.X
   1400262c7:	rex.R
   1400262c8:	rex pop rdx
   1400262ca:	add    BYTE PTR [rax],al
   1400262cc:	mov    bh,0x13
   1400262ce:	(bad)  
   1400262cf:	jno    0x140026345
   1400262d1:	pop    rdi
   1400262d2:	ins    DWORD PTR es:[rdi],dx
   1400262d3:	gs je  0x140026337
   1400262d6:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400262d9:	ins    BYTE PTR es:[rdi],dx
   1400262da:	rex push rcx
   1400262dc:	push   rsi
   1400262dd:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400262df:	js     0x14002632d
   1400262e1:	(bad)  
   1400262e2:	jns    0x140026353
   1400262e4:	jne    0x14002635a
   1400262e6:	rex
   1400262e7:	rex push rbp
   1400262e9:	rex.RB
   1400262ea:	rex.B
   1400262eb:	rex.B
   1400262ec:	rex.W push rdi
   1400262ee:	xor    al,0x43
   1400262f0:	(bad)  
   1400262f1:	ins    BYTE PTR es:[rdi],dx
   1400262f2:	ins    BYTE PTR es:[rdi],dx
   1400262f3:	rex push rcx
   1400262f5:	rex.WRB
   1400262f6:	gs je  0x14002635a
   1400262f9:	rex.WRXB (bad) 
   1400262fb:	push   0x65
   1400262fd:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140026301:	rex.W push rax
   140026303:	rex.RB
   140026304:	push   r8
   140026306:	rex.RB
   140026307:	pop    r8
   140026309:	rex pop rdx
   14002630b:	add    ah,al
   14002630d:	adc    BYTE PTR [rdi],bh
   14002630f:	ins    DWORD PTR es:[rdi],dx
   140026310:	gs je  0x140026374
   140026313:	rex.WRXB (bad) 
   140026315:	push   0x65
   140026317:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14002631b:	push   rsp
   14002631c:	gs js  0x140026393
   14002631f:	rex.RB
   140026320:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41424555
   140026329:	push   rax
   14002632a:	rex.RB
   14002632b:	rex.X push rbp
   14002632d:	push   rcx
   14002632e:	rex.WRB
   14002632f:	gs je  0x140026393
   140026332:	rex.WRXB (bad) 
   140026334:	push   0x65
   140026336:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14002633a:	pop    rax
   14002633b:	pop    rdx
   14002633c:	add    BYTE PTR [rax],al
   14002633e:	(bad)  
   14002633f:	adc    al,0x3f
   140026341:	jno    0x1400263b7
   140026343:	pop    rdi
   140026344:	ins    DWORD PTR es:[rdi],dx
   140026345:	gs je  0x1400263a9
   140026348:	movsxd esp,DWORD PTR [rcx+0x73]
   14002634b:	je     0x14002638d
   14002634d:	push   rcx
   14002634e:	push   rsp
   14002634f:	gs js  0x1400263c6
   140026352:	rex.RB
   140026353:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414555
   14002635c:	push   rax
   14002635d:	rex.RB
   14002635e:	pop    r8
   140026360:	push   rax
   140026361:	rex.RB
   140026362:	rex.X
   140026363:	rex.R
   140026364:	rex pop rdx
   140026366:	add    BYTE PTR [rax],al
   140026368:	lods   eax,DWORD PTR ds:[rsi]
   140026369:	adc    edi,DWORD PTR [rdi]
   14002636b:	jno    0x1400263e1
   14002636d:	pop    rdi
   14002636e:	ins    DWORD PTR es:[rdi],dx
   14002636f:	gs je  0x1400263d3
   140026372:	movsxd esp,DWORD PTR [rcx+0x6c]
   140026375:	ins    BYTE PTR es:[rdi],dx
   140026376:	rex push rcx
   140026378:	push   rsp
   140026379:	gs js  0x1400263f0
   14002637c:	rex.RB
   14002637d:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414555
   140026386:	rex.W push rdi
   140026388:	xor    al,0x43
   14002638a:	(bad)  
   14002638b:	ins    BYTE PTR es:[rdi],dx
   14002638c:	ins    BYTE PTR es:[rdi],dx
   14002638d:	rex push rcx
   14002638f:	rex.WRB
   140026390:	gs je  0x1400263f4
   140026393:	rex.WRXB (bad) 
   140026395:	push   0x65
   140026397:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14002639b:	rex.W push rax
   14002639d:	rex.RB
   14002639e:	push   r8
   1400263a0:	rex.RB
   1400263a1:	pop    r8
   1400263a3:	rex pop rdx
   1400263a5:	add    dh,dh
   1400263a7:	or     bh,BYTE PTR [rdi]
   1400263a9:	gs jbe 0x140026411
   1400263ac:	outs   dx,BYTE PTR ds:[rsi]
   1400263ad:	je     0x1400263ef
   1400263af:	push   rcx
   1400263b0:	push   rsp
   1400263b1:	gs js  0x140026428
   1400263b4:	rex.RB
   1400263b5:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400263be:	pop    rdi
   1400263bf:	rex.WRX push rax
   1400263c1:	rex.RB
   1400263c2:	push   r14
   1400263c4:	push   rcx
   1400263c5:	rex.RB jbe 0x14002642d
   1400263c8:	outs   dx,BYTE PTR ds:[rsi]
   1400263c9:	je     0x14002640b
   1400263cb:	rex
   1400263cc:	rex pop rdx
   1400263ce:	add    BYTE PTR [rax],al
   1400263d0:	movabs ds:0x4572656d69743f1e,al
   1400263d9:	jbe    0x140026440
   1400263db:	outs   dx,BYTE PTR ds:[rsi]
   1400263dc:	je     0x14002641e
   1400263de:	push   rcx
   1400263df:	push   rsp
   1400263e0:	gs js  0x140026457
   1400263e3:	rex.RB
   1400263e4:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400263ed:	pop    rax
   1400263ee:	push   rax
   1400263ef:	rex.RB
   1400263f0:	push   r14
   1400263f2:	push   rcx
   1400263f3:	push   rsp
   1400263f4:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   1400263fb:	outs   dx,BYTE PTR ds:[rsi]
   1400263fc:	je     0x14002643e
   1400263fe:	rex
   1400263ff:	rex pop rdx
   140026401:	add    BYTE PTR [rbx+0x6f6d3f11],al
   140026407:	jne    0x14002647c
   140026409:	gs push rax
   14002640b:	jb     0x140026472
   14002640d:	jae    0x140026482
   14002640f:	rex.RB jbe 0x140026477
   140026412:	outs   dx,BYTE PTR ds:[rsi]
   140026413:	je     0x140026455
   140026415:	push   rcx
   140026416:	push   rsp
   140026417:	gs js  0x14002648e
   14002641a:	rex.RB
   14002641b:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140026424:	pop    rax
   140026425:	push   rax
   140026426:	rex.RB
   140026427:	push   r14
   140026429:	push   rcx
   14002642a:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14002642c:	jne    0x1400264a1
   14002642e:	gs rex.RB jbe 0x140026497
   140026432:	outs   dx,BYTE PTR ds:[rsi]
   140026433:	je     0x140026475
   140026435:	rex
   140026436:	rex pop rdx
   140026438:	add    BYTE PTR [rax],al
   14002643a:	movabs eax,ds:0x526573756f6d3f11
   140026443:	gs ins BYTE PTR es:[rdi],dx
   140026445:	gs (bad) 
   140026447:	jae    0x1400264ae
   140026449:	rex.RB jbe 0x1400264b1
   14002644c:	outs   dx,BYTE PTR ds:[rsi]
   14002644d:	je     0x14002648f
   14002644f:	push   rcx
   140026450:	push   rsp
   140026451:	gs js  0x1400264c8
   140026454:	rex.RB
   140026455:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14002645e:	pop    rax
   14002645f:	push   rax
   140026460:	rex.RB
   140026461:	push   r14
   140026463:	push   rcx
   140026464:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140026466:	jne    0x1400264db
   140026468:	gs rex.RB jbe 0x1400264d1
   14002646c:	outs   dx,BYTE PTR ds:[rsi]
   14002646d:	je     0x1400264af
   14002646f:	rex
   140026470:	rex pop rdx
   140026472:	add    BYTE PTR [rax],al
   140026474:	rex.X adc DWORD PTR [rdi],edi
   140026477:	ins    DWORD PTR es:[rdi],dx
   140026478:	outs   dx,DWORD PTR ds:[rsi]
   140026479:	jne    0x1400264ee
   14002647b:	rex.R outs dx,DWORD PTR gs:[rsi]
   14002647e:	jne    0x1400264e2
   140026480:	ins    BYTE PTR es:[rdi],dx
   140026481:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140026484:	imul   esp,DWORD PTR [rbx+0x6b],0x6e657645
   14002648b:	je     0x1400264cd
   14002648d:	push   rcx
   14002648e:	push   rsp
   14002648f:	gs js  0x140026506
   140026492:	rex.RB
   140026493:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14002649c:	pop    rax
   14002649d:	push   rax
   14002649e:	rex.RB
   14002649f:	push   r14
   1400264a1:	push   rcx
   1400264a2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400264a4:	jne    0x140026519
   1400264a6:	gs rex.RB jbe 0x14002650f
   1400264aa:	outs   dx,BYTE PTR ds:[rsi]
   1400264ab:	je     0x1400264ed
   1400264ad:	rex
   1400264ae:	rex pop rdx
   1400264b0:	add    BYTE PTR [rax],al
   1400264b2:	(bad)
   1400264b7:	jne    0x14002652c
   1400264b9:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   1400264bc:	jbe    0x140026523
   1400264be:	rex.RB jbe 0x140026526
   1400264c1:	outs   dx,BYTE PTR ds:[rsi]
   1400264c2:	je     0x140026504
   1400264c4:	push   rcx
   1400264c5:	push   rsp
   1400264c6:	gs js  0x14002653d
   1400264c9:	rex.RB
   1400264ca:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400264d3:	pop    rax
   1400264d4:	push   rax
   1400264d5:	rex.RB
   1400264d6:	push   r14
   1400264d8:	push   rcx
   1400264d9:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400264db:	jne    0x140026550
   1400264dd:	gs rex.RB jbe 0x140026546
   1400264e1:	outs   dx,BYTE PTR ds:[rsi]
   1400264e2:	je     0x140026524
   1400264e4:	rex
   1400264e5:	rex pop rdx
   1400264e7:	add    BYTE PTR [rbx],dh
   1400264e9:	and    DWORD PTR [rdi],edi
   1400264eb:	ja     0x140026555
   1400264ed:	gs gs ins BYTE PTR es:[rdi],dx
   1400264f0:	rex.RB jbe 0x140026558
   1400264f3:	outs   dx,BYTE PTR ds:[rsi]
   1400264f4:	je     0x140026536
   1400264f6:	push   rcx
   1400264f7:	push   rsp
   1400264f8:	gs js  0x14002656f
   1400264fb:	rex.RB
   1400264fc:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140026505:	pop    rax
   140026506:	push   rax
   140026507:	rex.RB
   140026508:	push   r14
   14002650a:	push   rcx
   14002650b:	push   rdi
   14002650c:	push   0x456c6565
   140026511:	jbe    0x140026578
   140026513:	outs   dx,BYTE PTR ds:[rsi]
   140026514:	je     0x140026556
   140026516:	rex
   140026517:	rex pop rdx
   140026519:	add    BYTE PTR [rdi+0xf],dl
   14002651c:	(bad)  
   14002651d:	imul   esp,DWORD PTR [rbp+0x79],0x50
   140026521:	jb     0x140026588
   140026523:	jae    0x140026598
   140026525:	rex.RB jbe 0x14002658d
   140026528:	outs   dx,BYTE PTR ds:[rsi]
   140026529:	je     0x14002656b
   14002652b:	push   rcx
   14002652c:	push   rsp
   14002652d:	gs js  0x1400265a4
   140026530:	rex.RB
   140026531:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14002653a:	pop    rax
   14002653b:	push   rax
   14002653c:	rex.RB
   14002653d:	push   r14
   14002653f:	push   rcx
   140026540:	rex.WXB
   140026541:	gs jns 0x140026589
   140026544:	jbe    0x1400265ab
   140026546:	outs   dx,BYTE PTR ds:[rsi]
   140026547:	je     0x140026589
   140026549:	rex
   14002654a:	rex pop rdx
   14002654c:	add    BYTE PTR [rax],al
   14002654e:	gs (bad) 
   140026551:	imul   esp,DWORD PTR [rbp+0x79],0x52
   140026555:	gs ins BYTE PTR es:[rdi],dx
   140026557:	gs (bad) 
   140026559:	jae    0x1400265c0
   14002655b:	rex.RB jbe 0x1400265c3
   14002655e:	outs   dx,BYTE PTR ds:[rsi]
   14002655f:	je     0x1400265a1
   140026561:	push   rcx
   140026562:	push   rsp
   140026563:	gs js  0x1400265da
   140026566:	rex.RB
   140026567:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140026570:	pop    rax
   140026571:	push   rax
   140026572:	rex.RB
   140026573:	push   r14
   140026575:	push   rcx
   140026576:	rex.WXB
   140026577:	gs jns 0x1400265bf
   14002657a:	jbe    0x1400265e1
   14002657c:	outs   dx,BYTE PTR ds:[rsi]
   14002657d:	je     0x1400265bf
   14002657f:	rex
   140026580:	rex pop rdx
   140026582:	add    BYTE PTR [rax],al
   140026584:	xchg   edx,eax
   140026585:	or     edi,DWORD PTR [rdi]
   140026587:	outs   dx,WORD PTR ds:[rsi]
   140026589:	movsxd esi,DWORD PTR [rbp+0x73]
   14002658c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002658e:	rex.RB jbe 0x1400265f6
   140026591:	outs   dx,BYTE PTR ds:[rsi]
   140026592:	je     0x1400265d4
   140026594:	push   rcx
   140026595:	push   rsp
   140026596:	gs js  0x14002660d
   140026599:	rex.RB
   14002659a:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400265a3:	pop    rax
   1400265a4:	push   rax
   1400265a5:	rex.RB
   1400265a6:	push   r14
   1400265a8:	push   rcx
   1400265a9:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400265ab:	movsxd esi,DWORD PTR [rbp+0x73]
   1400265ae:	rex.RB jbe 0x140026616
   1400265b1:	outs   dx,BYTE PTR ds:[rsi]
   1400265b2:	je     0x1400265f4
   1400265b4:	rex
   1400265b5:	rex pop rdx
   1400265b7:	add    BYTE PTR [rax+0x6f663f0b],bh
   1400265bd:	movsxd esi,DWORD PTR [rbp+0x73]
   1400265c0:	rex.WRXB jne 0x140026637
   1400265c3:	rex.RB jbe 0x14002662b
   1400265c6:	outs   dx,BYTE PTR ds:[rsi]
   1400265c7:	je     0x140026609
   1400265c9:	push   rcx
   1400265ca:	push   rsp
   1400265cb:	gs js  0x140026642
   1400265ce:	rex.RB
   1400265cf:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400265d8:	pop    rax
   1400265d9:	push   rax
   1400265da:	rex.RB
   1400265db:	push   r14
   1400265dd:	push   rcx
   1400265de:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400265e0:	movsxd esi,DWORD PTR [rbp+0x73]
   1400265e3:	rex.RB jbe 0x14002664b
   1400265e6:	outs   dx,BYTE PTR ds:[rsi]
   1400265e7:	je     0x140026629
   1400265e9:	rex
   1400265ea:	rex pop rdx
   1400265ec:	add    BYTE PTR [rax],al
   1400265ee:	je     0x140026602
   1400265f0:	(bad)  
   1400265f1:	jo     0x140026654
   1400265f3:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   1400265fa:	je     0x14002663c
   1400265fc:	push   rcx
   1400265fd:	push   rsp
   1400265fe:	gs js  0x140026675
   140026601:	rex.RB
   140026602:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14002660b:	pop    rax
   14002660c:	push   rax
   14002660d:	rex.RB
   14002660e:	push   r14
   140026610:	push   rcx
   140026611:	push   rax
   140026612:	(bad)  
   140026613:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   14002661a:	je     0x14002665c
   14002661c:	rex
   14002661d:	rex pop rdx
   14002661f:	add    BYTE PTR [rdi+0x65723f15],bl
   140026625:	jae    0x140026690
   140026627:	jp     0x14002668e
   140026629:	rex.RB jbe 0x140026691
   14002662c:	outs   dx,BYTE PTR ds:[rsi]
   14002662d:	je     0x14002666f
   14002662f:	push   rcx
   140026630:	push   rsp
   140026631:	gs js  0x1400266a8
   140026634:	rex.RB
   140026635:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14002663e:	pop    rax
   14002663f:	push   rax
   140026640:	rex.RB
   140026641:	push   r14
   140026643:	push   rcx
   140026644:	push   rdx
   140026645:	gs jae 0x1400266b1
   140026648:	jp     0x1400266af
   14002664a:	rex.RB jbe 0x1400266b2
   14002664d:	outs   dx,BYTE PTR ds:[rsi]
   14002664e:	je     0x140026690
   140026650:	rex
   140026651:	rex pop rdx
   140026653:	add    BYTE PTR [rcx+0x6f633f07],dl
   140026659:	outs   dx,BYTE PTR ds:[rsi]
   14002665a:	je     0x1400266c1
   14002665c:	js     0x1400266d2
   14002665e:	rex.WRB
   14002665f:	outs   dx,BYTE PTR gs:[rsi]
   140026661:	jne    0x1400266a8
   140026663:	jbe    0x1400266ca
   140026665:	outs   dx,BYTE PTR ds:[rsi]
   140026666:	je     0x1400266a8
   140026668:	push   rcx
   140026669:	push   rsp
   14002666a:	gs js  0x1400266e1
   14002666d:	rex.RB
   14002666e:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140026677:	pop    rax
   140026678:	push   rax
   140026679:	rex.RB
   14002667a:	push   r14
   14002667c:	push   rcx
   14002667d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002667f:	outs   dx,BYTE PTR ds:[rsi]
   140026680:	je     0x1400266e7
   140026682:	js     0x1400266f8
   140026684:	rex.WRB
   140026685:	outs   dx,BYTE PTR gs:[rsi]
   140026687:	jne    0x1400266ce
   140026689:	jbe    0x1400266f0
   14002668b:	outs   dx,BYTE PTR ds:[rsi]
   14002668c:	je     0x1400266ce
   14002668e:	rex
   14002668f:	rex pop rdx
   140026691:	add    BYTE PTR [rdi],dl
   140026693:	or     bh,BYTE PTR [rdi]
   140026695:	fs jb  0x1400266f9
   140026698:	rex.RB outs dx,BYTE PTR ds:[esi]
   14002669b:	je     0x140026702
   14002669d:	jb     0x1400266e4
   14002669f:	jbe    0x140026706
   1400266a1:	outs   dx,BYTE PTR ds:[rsi]
   1400266a2:	je     0x1400266e4
   1400266a4:	push   rcx
   1400266a5:	push   rsp
   1400266a6:	gs js  0x14002671d
   1400266a9:	rex.RB
   1400266aa:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400266b3:	pop    rax
   1400266b4:	push   rax
   1400266b5:	rex.RB
   1400266b6:	push   r14
   1400266b8:	push   rcx
   1400266b9:	rex.R jb 0x14002671d
   1400266bc:	rex.RB outs dx,BYTE PTR ds:[esi]
   1400266bf:	je     0x140026726
   1400266c1:	jb     0x140026708
   1400266c3:	jbe    0x14002672a
   1400266c5:	outs   dx,BYTE PTR ds:[rsi]
   1400266c6:	je     0x140026708
   1400266c8:	rex
   1400266c9:	rex pop rdx
   1400266cb:	add    BYTE PTR [rax],dh
   1400266cd:	or     bh,BYTE PTR [rdi]
   1400266cf:	fs jb  0x140026733
   1400266d2:	rex.WRB outs dx,DWORD PTR ds:[esi]
   1400266d5:	jbe    0x14002673c
   1400266d7:	rex.RB jbe 0x14002673f
   1400266da:	outs   dx,BYTE PTR ds:[rsi]
   1400266db:	je     0x14002671d
   1400266dd:	push   rcx
   1400266de:	push   rsp
   1400266df:	gs js  0x140026756
   1400266e2:	rex.RB
   1400266e3:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400266ec:	pop    rax
   1400266ed:	push   rax
   1400266ee:	rex.RB
   1400266ef:	push   r14
   1400266f1:	push   rcx
   1400266f2:	rex.R jb 0x140026756
   1400266f5:	rex.WRB outs dx,DWORD PTR ds:[esi]
   1400266f8:	jbe    0x14002675f
   1400266fa:	rex.RB jbe 0x140026762
   1400266fd:	outs   dx,BYTE PTR ds:[rsi]
   1400266fe:	je     0x140026740
   140026700:	rex
   140026701:	rex pop rdx
   140026703:	add    BYTE PTR [rbx],ah
   140026705:	or     bh,BYTE PTR [rdi]
   140026707:	fs jb  0x14002676b
   14002670a:	addr32 rex.WR
   14002670c:	gs (bad) 
   14002670e:	jbe    0x140026775
   140026710:	rex.RB jbe 0x140026778
   140026713:	outs   dx,BYTE PTR ds:[rsi]
   140026714:	je     0x140026756
   140026716:	push   rcx
   140026717:	push   rsp
   140026718:	gs js  0x14002678f
   14002671b:	rex.RB
   14002671c:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140026725:	pop    rax
   140026726:	push   rax
   140026727:	rex.RB
   140026728:	push   r14
   14002672a:	push   rcx
   14002672b:	rex.R jb 0x14002678f
   14002672e:	addr32 rex.WR
   140026730:	gs (bad) 
   140026732:	jbe    0x140026799
   140026734:	rex.RB jbe 0x14002679c
   140026737:	outs   dx,BYTE PTR ds:[rsi]
   140026738:	je     0x14002677a
   14002673a:	rex
   14002673b:	rex pop rdx
   14002673d:	add    BYTE PTR [rbx+0xa],ch
   140026740:	(bad)  
   140026741:	fs jb  0x1400267b3
   140026744:	jo     0x14002678b
   140026746:	jbe    0x1400267ad
   140026748:	outs   dx,BYTE PTR ds:[rsi]
   140026749:	je     0x14002678b
   14002674b:	push   rcx
   14002674c:	push   rsp
   14002674d:	gs js  0x1400267c4
   140026750:	rex.RB
   140026751:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14002675a:	pop    rax
   14002675b:	push   rax
   14002675c:	rex.RB
   14002675d:	push   r14
   14002675f:	push   rcx
   140026760:	rex.R jb 0x1400267d2
   140026763:	jo     0x1400267aa
   140026765:	jbe    0x1400267cc
   140026767:	outs   dx,BYTE PTR ds:[rsi]
   140026768:	je     0x1400267aa
   14002676a:	rex
   14002676b:	rex pop rdx
   14002676d:	add    BYTE PTR [rbx+0x1c],bl
   140026770:	(bad)  
   140026771:	jae    0x1400267db
   140026773:	outs   dx,DWORD PTR ds:[rsi]
   140026774:	ja     0x1400267bb
   140026776:	jbe    0x1400267dd
   140026778:	outs   dx,BYTE PTR ds:[rsi]
   140026779:	je     0x1400267bb
   14002677b:	push   rcx
   14002677c:	push   rsp
   14002677d:	gs js  0x1400267f4
   140026780:	rex.RB
   140026781:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   14002678a:	pop    rax
   14002678b:	push   rax
   14002678c:	rex.RB
   14002678d:	push   r14
   14002678f:	push   rcx
   140026790:	push   rbx
   140026791:	push   0x7645776f
   140026796:	outs   dx,BYTE PTR gs:[rsi]
   140026798:	je     0x1400267da
   14002679a:	rex
   14002679b:	rex pop rdx
   14002679d:	add    BYTE PTR [rax+0x68633f06],cl
   1400267a3:	(bad)  
   1400267a4:	outs   dx,BYTE PTR ds:[rsi]
   1400267a5:	addr32 gs rex.RB jbe 0x14002680f
   1400267aa:	outs   dx,BYTE PTR ds:[rsi]
   1400267ab:	je     0x1400267ed
   1400267ad:	push   rcx
   1400267ae:	push   rsp
   1400267af:	gs js  0x140026826
   1400267b2:	rex.RB
   1400267b3:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400267bc:	pop    rax
   1400267bd:	push   rax
   1400267be:	rex.RB
   1400267bf:	push   r14
   1400267c1:	push   rcx
   1400267c2:	rex.RB jbe 0x14002682a
   1400267c5:	outs   dx,BYTE PTR ds:[rsi]
   1400267c6:	je     0x140026808
   1400267c8:	rex
   1400267c9:	rex pop rdx
   1400267cb:	add    BYTE PTR [rax+0xd],bh
   1400267ce:	(bad)  
   1400267cf:	imul   ebp,DWORD PTR [rsi+0x70],0x654d7475
   1400267d6:	je     0x140026840
   1400267d8:	outs   dx,DWORD PTR ds:[rsi]
   1400267d9:	fs rex.RB jbe 0x140026842
   1400267dd:	outs   dx,BYTE PTR ds:[rsi]
   1400267de:	je     0x140026820
   1400267e0:	push   rcx
   1400267e1:	push   rsp
   1400267e2:	gs js  0x140026859
   1400267e5:	rex.RB
   1400267e6:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400267ef:	pop    rax
   1400267f0:	push   rax
   1400267f1:	rex.RB
   1400267f2:	push   r14
   1400267f4:	push   rcx
   1400267f5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400267f7:	jo     0x14002686e
   1400267f9:	je     0x140026848
   1400267fb:	gs je  0x140026866
   1400267fe:	outs   dx,DWORD PTR ds:[rsi]
   1400267ff:	fs rex.RB jbe 0x140026868
   140026803:	outs   dx,BYTE PTR ds:[rsi]
   140026804:	je     0x140026846
   140026806:	rex
   140026807:	rex pop rdx
   140026809:	add    BYTE PTR [rax+0x6e693f0d],cl
   14002680f:	jo     0x140026886
   140026811:	je     0x140026860
   140026813:	gs je  0x14002687e
   140026816:	outs   dx,DWORD PTR ds:[rsi]
   140026817:	fs push rcx
   140026819:	jne    0x140026880
   14002681b:	jb     0x140026896
   14002681d:	rex push rcx
   14002681f:	push   rsp
   140026820:	gs js  0x140026897
   140026823:	rex.RB
   140026824:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41424555
   14002682d:	(bad)  
   14002682e:	push   r14
   140026830:	push   rcx
   140026831:	push   rsi
   140026832:	(bad)  
   140026833:	jb     0x14002689e
   140026835:	(bad)  
   140026836:	outs   dx,BYTE PTR ds:[rsi]
   140026837:	je     0x140026879
   140026839:	rex push rdi
   14002683b:	xor    al,0x49
   14002683d:	outs   dx,BYTE PTR ds:[rsi]
   14002683e:	jo     0x1400268b5
   140026840:	je     0x14002688f
   140026842:	gs je  0x1400268ad
   140026845:	outs   dx,DWORD PTR ds:[rsi]
   140026846:	fs push rcx
   140026848:	jne    0x1400268af
   14002684a:	jb     0x1400268c5
   14002684c:	rex push rcx
   14002684e:	je     0x140026890
   140026850:	rex
   140026851:	rex pop rdx
   140026853:	add    BYTE PTR [rbx+0x6f663f0b],ah
   140026859:	movsxd esi,DWORD PTR [rbp+0x73]
   14002685c:	rex.WRX
   14002685d:	gs js  0x1400268d4
   140026860:	push   rax
   140026861:	jb     0x1400268c8
   140026863:	jbe    0x1400268a8
   140026865:	push   0x40646c69
   14002686a:	push   rcx
   14002686b:	push   rsp
   14002686c:	gs js  0x1400268e3
   14002686f:	rex.RB
   140026870:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140026879:	pop    rdi
   14002687a:	rex.WRX pop rdi
   14002687c:	rex.WRX
   14002687d:	rex pop rdx
   14002687f:	add    ah,ch
   140026881:	and    BYTE PTR [rdi],bh
   140026883:	jbe    0x1400268ee
   140026885:	gs ja  0x1400268f8
   140026888:	outs   dx,DWORD PTR ds:[rsi]
   140026889:	jb     0x1400268ff
   14002688b:	rex.RB jbe 0x1400268f3
   14002688e:	outs   dx,BYTE PTR ds:[rsi]
   14002688f:	je     0x1400268d1
   140026891:	push   rcx
   140026892:	(bad)
   140026898:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   14002689c:	jb     0x14002690d
   14002689e:	ins    BYTE PTR es:[rdi],dx
   14002689f:	ins    BYTE PTR es:[rdi],dx
   1400268a0:	rex.B jb 0x140026908
   1400268a3:	(bad)  
   1400268a4:	rex
   1400268a5:	rex
   1400268a6:	rex.WRB
   1400268a7:	rex.RB
   1400268a8:	rex.B
   1400268a9:	pop    r15
   1400268ab:	rex.WRX push rax
   1400268ad:	rex.RB
   1400268ae:	push   r14
   1400268b0:	push   rcx
   1400268b1:	rex.RB jbe 0x140026919
   1400268b4:	outs   dx,BYTE PTR ds:[rsi]
   1400268b5:	je     0x1400268f7
   1400268b7:	rex
   1400268b8:	rex pop rdx
   1400268ba:	add    BYTE PTR [rax],al
   1400268bc:	rex.RX (bad) 
   1400268be:	(bad)  
   1400268bf:	jae    0x140026924
   1400268c1:	jb     0x140026932
   1400268c3:	ins    BYTE PTR es:[rdi],dx
   1400268c4:	ins    BYTE PTR es:[rdi],dx
   1400268c5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400268c7:	outs   dx,BYTE PTR ds:[rsi]
   1400268c8:	je     0x14002692f
   1400268ca:	outs   dx,BYTE PTR ds:[rsi]
   1400268cb:	je     0x140026940
   1400268cd:	rex.X jns 0x140026910
   1400268d0:	push   rcx
   1400268d1:	push   rsp
   1400268d2:	gs js  0x140026949
   1400268d5:	rex.RB
   1400268d6:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400268df:	pop    rax
   1400268e0:	rex.W
   1400268e1:	rex.W
   1400268e2:	rex pop rdx
   1400268e4:	add    BYTE PTR [rax],al
   1400268e6:	hlt    
   1400268e7:	and    BYTE PTR [rdi],bh
   1400268e9:	jbe    0x140026954
   1400268eb:	gs ja  0x14002695e
   1400268ee:	outs   dx,DWORD PTR ds:[rsi]
   1400268ef:	jb     0x140026965
   1400268f1:	push   rbx
   1400268f2:	imul   edi,DWORD PTR [rdx+0x65],0x746e6948
   1400268f9:	rex push rcx
   1400268fb:	(bad)
   140026901:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   140026905:	jb     0x140026976
   140026907:	ins    BYTE PTR es:[rdi],dx
   140026908:	ins    BYTE PTR es:[rdi],dx
   140026909:	rex.B jb 0x140026971
   14002690c:	(bad)  
   14002690d:	rex
   14002690e:	rex
   14002690f:	rex.WRB
   140026910:	rex.RB
   140026911:	rex.X
   140026912:	rex.B (bad) 
   140026914:	push   r14
   140026916:	push   rcx
   140026917:	push   rbx
   140026918:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   14002691f:	add    BYTE PTR [rdi+0x6f6c3f0f],ch
   140026925:	(bad)  
   140026926:	fs push rdx
   140026928:	gs jae 0x14002699a
   14002692b:	jne    0x14002699f
   14002692d:	movsxd esp,DWORD PTR [rbp+0x40]
   140026930:	push   rcx
   140026931:	push   rsp
   140026932:	gs js  0x1400269a9
   140026935:	rex.RB
   140026936:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414555
   14002693f:	(bad)  
   140026940:	push   r14
   140026942:	push   rcx
   140026943:	push   rsi
   140026944:	(bad)  
   140026945:	jb     0x1400269b0
   140026947:	(bad)  
   140026948:	outs   dx,BYTE PTR ds:[rsi]
   140026949:	je     0x14002698b
   14002694b:	rex
   14002694c:	rex.W
   14002694d:	rex.B
   14002694e:	rex.RB
   14002694f:	rex.X push rsi
   140026951:	push   rcx
   140026952:	push   rbp
   140026953:	jb     0x1400269c1
   140026955:	rex
   140026956:	rex
   140026957:	rex pop rdx
   140026959:	add    bh,al
   14002695b:	(bad)  
   14002695c:	(bad)  
   14002695d:	movsxd esi,DWORD PTR [rdx+0x65]
   140026960:	(bad)  
   140026961:	je     0x1400269c8
   140026963:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   14002696b:	rex.RX jb 0x1400269dd
   14002696e:	ins    DWORD PTR es:[rdi],dx
   14002696f:	push   rbx
   140026970:	gs ins BYTE PTR es:[rdi],dx
   140026972:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140026977:	outs   dx,BYTE PTR ds:[rsi]
   140026978:	rex push rcx
   14002697a:	push   rsp
   14002697b:	gs js  0x1400269f2
   14002697e:	rex.RB
   14002697f:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4142454d
   140026988:	push   rax
   140026989:	rex.RB
   14002698a:	push   r14
   14002698c:	push   rcx
   14002698d:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   140026995:	rex
   140026996:	rex pop rax
   140026998:	pop    rdx
   140026999:	add    BYTE PTR [rsi+0x6],al
   14002699c:	(bad)  
   14002699d:	movsxd esp,DWORD PTR [rcx+0x6e]
   1400269a0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400269a2:	jae    0x140026a09
   1400269a4:	jb     0x140026a1a
   1400269a6:	rex.RX jb 0x140026a18
   1400269a9:	ins    DWORD PTR es:[rdi],dx
   1400269aa:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   1400269b2:	rex push rcx
   1400269b4:	push   rsp
   1400269b5:	gs js  0x140026a2c
   1400269b8:	rex.RB
   1400269b9:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4142454d
   1400269c2:	pop    rdi
   1400269c3:	rex.WRX push rax
   1400269c5:	rex.RB
   1400269c6:	rex.X push rsi
   1400269c8:	push   rcx
   1400269c9:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   1400269d1:	rex
   1400269d2:	rex
   1400269d3:	rex pop rdx
   1400269d5:	add    BYTE PTR [rsi+0x6e693f0d],dl
   1400269db:	jae    0x140026a42
   1400269dd:	jb     0x140026a53
   1400269df:	rex.RX jb 0x140026a51
   1400269e2:	ins    DWORD PTR es:[rdi],dx
   1400269e3:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   1400269eb:	rex push rcx
   1400269ed:	push   rsp
   1400269ee:	gs js  0x140026a65
   1400269f1:	rex.RB
   1400269f2:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   1400269fb:	pop    rax
   1400269fc:	push   rax
   1400269fd:	rex.RB
   1400269fe:	rex.X push rsi
   140026a00:	push   rcx
   140026a01:	imul   r13,QWORD PTR [r13+0x65],0x61746144
   140026a09:	rex
   140026a0a:	rex
   140026a0b:	rex pop rdx
   140026a0d:	add    cl,ch
   140026a0f:	or     DWORD PTR [rdi],edi
   140026a11:	outs   dx,DWORD PTR fs:[rsi]
   140026a13:	push   rbx
   140026a14:	gs je  0x140026a6b
   140026a17:	gs js  0x140026a8e
   140026a1a:	rex.XB jne 0x140026a8f
   140026a1d:	jae    0x140026a8e
   140026a1f:	jb     0x140026a61
   140026a21:	push   rcx
   140026a22:	push   rsp
   140026a23:	gs js  0x140026a9a
   140026a26:	rex.RB
   140026a27:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x4141454d
   140026a30:	pop    rax
   140026a31:	rex.B
   140026a32:	rex.RB
   140026a33:	rex.X push rsi
   140026a35:	push   rcx
   140026a36:	push   rsp
   140026a37:	gs js  0x140026aae
   140026a3a:	rex.XB jne 0x140026aaf
   140026a3d:	jae    0x140026aae
   140026a3f:	jb     0x140026a81
   140026a41:	rex
   140026a42:	rex pop rdx
   140026a44:	add    BYTE PTR [rax],al
   140026a46:	jae    0x140026a4a
   140026a48:	(bad)  
   140026a49:	(bad)  
   140026a4a:	xor    DWORD PTR [rcx+0x56],edx
   140026a4d:	rex.X outs dx,DWORD PTR ds:[rsi]
   140026a4f:	js     0x140026a9d
   140026a51:	(bad)  
   140026a52:	jns    0x140026ac3
   140026a54:	jne    0x140026aca
   140026a56:	rex
   140026a57:	rex push rbp
   140026a59:	rex.RB
   140026a5a:	rex.B
   140026a5b:	rex.B
   140026a5c:	rex pop rax
   140026a5e:	pop    rdx
   140026a5f:	add    BYTE PTR [rbp+0x2],ah
   140026a62:	(bad)  
   140026a63:	(bad)  
   140026a64:	xor    DWORD PTR [rcx+0x54],edx
   140026a67:	gs js  0x140026ade
   140026a6a:	rex.RB
   140026a6b:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414555
   140026a74:	rex pop rax
   140026a76:	pop    rdx
   140026a77:	add    BYTE PTR [rax+0x70613f05],dh
   140026a7d:	jo     0x140026ae4
   140026a7f:	outs   dx,BYTE PTR ds:[rsi]
   140026a80:	fs rex push rcx
   140026a83:	push   rsp
   140026a84:	gs js  0x140026afb
   140026a87:	rex.RB
   140026a88:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414551
   140026a91:	pop    rax
   140026a92:	rex.B
   140026a93:	rex.RB
   140026a94:	rex.X push rsi
   140026a96:	push   rcx
   140026a97:	push   rbx
   140026a98:	je     0x140026b0c
   140026a9a:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140026aa1:	add    BYTE PTR [rdx+rbx*1+0x3f],cl
   140026aa5:	jae    0x140026b0c
   140026aa7:	je     0x140026afb
   140026aa9:	gs (bad) 
   140026aab:	rex.WRXB outs dx,BYTE PTR fs:[rsi]
   140026aae:	ins    BYTE PTR es:[rdi],dx
   140026aaf:	jns    0x140026af1
   140026ab1:	push   rcx
   140026ab2:	push   rsp
   140026ab3:	gs js  0x140026b2a
   140026ab6:	rex.RB
   140026ab7:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414551
   140026ac0:	pop    rax
   140026ac1:	pop    rdi
   140026ac2:	rex.WRX
   140026ac3:	rex pop rdx
   140026ac5:	add    BYTE PTR [rax+rax*1+0x51303f3f],bh
   140026acc:	rex.WR (bad) 
   140026ace:	(bad)  
   140026acf:	gs ins BYTE PTR es:[rdi],dx
   140026ad1:	rex
   140026ad2:	rex push rcx
   140026ad4:	rex.RB
   140026ad5:	rex.B
   140026ad6:	rex.B
   140026ad7:	rex
   140026ad8:	rex.B
   140026ad9:	rex.RB
   140026ada:	rex.X push rsi
   140026adc:	push   rcx
   140026add:	push   rbx
   140026ade:	je     0x140026b52
   140026ae0:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   140026ae7:	push   r14
   140026ae9:	push   rcx
   140026aea:	push   rdi
   140026aeb:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x56404074
   140026af3:	(bad)  
   140026af4:	and    al,0x51
   140026af6:	rex.RX ins BYTE PTR es:[rdi],dx
   140026af8:	(bad)  
   140026af9:	addr32 jae 0x140026b3c
   140026afc:	push   rdi
   140026afd:	xor    al,0x57
   140026aff:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   140026b06:	jo     0x140026b6d
   140026b08:	rex push rcx
   140026b0a:	je     0x140026b4c
   140026b0c:	rex
   140026b0d:	rex
   140026b0e:	rex
   140026b0f:	rex pop rdx
   140026b11:	add    BYTE PTR [rbp+0x65733f18],cl
   140026b17:	je     0x140026b5f
   140026b19:	jb     0x140026b7c
   140026b1b:	ins    DWORD PTR es:[rdi],dx
   140026b1c:	gs push rbx
   140026b1e:	je     0x140026b99
   140026b20:	ins    BYTE PTR es:[rdi],dx
   140026b21:	gs rex push rcx
   140026b24:	rex.RX jb 0x140026b88
   140026b27:	ins    DWORD PTR es:[rdi],dx
   140026b28:	gs rex
   140026b2a:	rex push rcx
   140026b2c:	rex.RB
   140026b2d:	rex.B
   140026b2e:	pop    r8
   140026b30:	rex.W
   140026b31:	rex pop rdx
   140026b33:	add    BYTE PTR [rdx+rbx*1],al
   140026b36:	(bad)  
   140026b37:	jae    0x140026b9e
   140026b39:	je     0x140026b8b
   140026b3b:	(bad)  
   140026b3c:	ins    BYTE PTR es:[rdi],dx
   140026b3d:	gs je  0x140026bb4
   140026b40:	gs rex push rcx
   140026b43:	push   rdi
   140026b44:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140026b4c:	rex.RB
   140026b4d:	rex.B
   140026b4e:	pop    r8
   140026b50:	rex.B
   140026b51:	rex.RB
   140026b52:	rex.X push rsi
   140026b54:	push   rcx
   140026b55:	push   rax
   140026b56:	(bad)  
   140026b57:	ins    BYTE PTR es:[rdi],dx
   140026b58:	gs je  0x140026bcf
   140026b5b:	gs rex
   140026b5d:	rex
   140026b5e:	rex pop rdx
   140026b60:	add    BYTE PTR [rax],al
   140026b62:	test   DWORD PTR [rdx],edx
   140026b64:	(bad)  
   140026b65:	jo     0x140026bc8
   140026b67:	ins    BYTE PTR es:[rdi],dx
   140026b68:	gs je  0x140026bdf
   140026b6b:	gs rex push rcx
   140026b6e:	push   rdi
   140026b6f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140026b77:	rex.RB
   140026b78:	rex.X
   140026b79:	rex.B
   140026b7a:	rex.B
   140026b7b:	rex.RB
   140026b7c:	rex.X push rsi
   140026b7e:	push   rcx
   140026b7f:	push   rax
   140026b80:	(bad)  
   140026b81:	ins    BYTE PTR es:[rdi],dx
   140026b82:	gs je  0x140026bf9
   140026b85:	gs rex
   140026b87:	rex pop rax
   140026b89:	pop    rdx
   140026b8a:	add    BYTE PTR [rax],al
   140026b8c:	push   rdi
   140026b8d:	add    BYTE PTR [rdi],bh
   140026b8f:	(bad)  
   140026b90:	xor    BYTE PTR [rcx+0x46],dl
   140026b93:	jb     0x140026bf6
   140026b95:	ins    DWORD PTR es:[rdi],dx
   140026b96:	gs rex
   140026b98:	rex push rcx
   140026b9a:	rex.RB
   140026b9b:	rex.B
   140026b9c:	rex.B
   140026b9d:	rex push rax
   140026b9f:	rex.RB
   140026ba0:	push   r14
   140026ba2:	push   rcx
   140026ba3:	push   rdi
   140026ba4:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x56404074
   140026bac:	(bad)  
   140026bad:	and    al,0x51
   140026baf:	rex.RX ins BYTE PTR es:[rdi],dx
   140026bb1:	(bad)  
   140026bb2:	addr32 jae 0x140026bf5
   140026bb5:	push   rdi
   140026bb6:	xor    al,0x57
   140026bb8:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   140026bbf:	jo     0x140026c26
   140026bc1:	rex push rcx
   140026bc3:	je     0x140026c05
   140026bc5:	rex
   140026bc6:	rex
   140026bc7:	rex
   140026bc8:	rex pop rdx
   140026bca:	add    BYTE PTR [rax],al
   140026bcc:	rex.WRX sbb QWORD PTR [rdi],r15
   140026bcf:	jae    0x140026c36
   140026bd1:	je     0x140026c20
   140026bd3:	(bad)  
   140026bd4:	jb     0x140026c3d
   140026bd6:	imul   ebp,DWORD PTR [rsi+0x40],0x79614c51
   140026bdd:	outs   dx,DWORD PTR ds:[rsi]
   140026bde:	jne    0x140026c54
   140026be0:	rex
   140026be1:	rex push rcx
   140026be3:	rex.RB
   140026be4:	rex.B
   140026be5:	pop    r8
   140026be7:	rex.W
   140026be8:	rex pop rdx
   140026bea:	add    BYTE PTR [rax],al
   140026bec:	(bad)  
   140026bed:	(bad)  
   140026bee:	(bad)  
   140026bef:	jae    0x140026c56
   140026bf1:	je     0x140026c34
   140026bf3:	jne    0x140026c69
   140026bf5:	outs   dx,DWORD PTR ds:[rsi]
   140026bf6:	imul   r13d,DWORD PTR [rsp+r13*2+0x42],0x676b6361
   140026bff:	jb     0x140026c70
   140026c01:	jne    0x140026c71
   140026c03:	fs rex push rcx
   140026c06:	push   rdi
   140026c07:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140026c0f:	rex.RB
   140026c10:	rex.B
   140026c11:	pop    r8
   140026c13:	pop    rdi
   140026c14:	rex.WRX
   140026c15:	rex pop rdx
   140026c17:	add    BYTE PTR [rcx+rax*1+0x51303f3f],dl
   140026c1e:	push   rdi
   140026c1f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x51404074
   140026c27:	rex.RB
   140026c28:	rex.B
   140026c29:	rex.B
   140026c2a:	rex push rax
   140026c2c:	rex.RB
   140026c2d:	push   r14
   140026c2f:	xor    BYTE PTR [rax+0x56],al
   140026c32:	(bad)  
   140026c33:	and    al,0x51
   140026c35:	rex.RX ins BYTE PTR es:[rdi],dx
   140026c37:	(bad)  
   140026c38:	addr32 jae 0x140026c7b
   140026c3b:	push   rdi
   140026c3c:	xor    al,0x57
   140026c3e:	imul   ebp,DWORD PTR [rsi+0x64],0x7954776f
   140026c45:	jo     0x140026cac
   140026c47:	rex push rcx
   140026c49:	je     0x140026c8b
   140026c4b:	rex
   140026c4c:	rex
   140026c4d:	rex
   140026c4e:	rex pop rdx
   140026c50:	add    BYTE PTR [rax],al
   140026c52:	jae    0x140026c64
   140026c54:	(bad)  
   140026c55:	ins    DWORD PTR es:[rdi],dx
   140026c56:	gs je  0x140026cba
   140026c59:	rex.WRXB (bad) 
   140026c5b:	push   0x65
   140026c5d:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140026c61:	rex.RX jb 0x140026cc5
   140026c64:	ins    DWORD PTR es:[rdi],dx
   140026c65:	gs rex
   140026c67:	rex push rbp
   140026c69:	rex.RB
   140026c6a:	rex.X
   140026c6b:	push   r8
   140026c6d:	rex.RB
   140026c6e:	rex.X push rbp
   140026c70:	push   rcx
   140026c71:	rex.WRB
   140026c72:	gs je  0x140026cd6
   140026c75:	rex.WRXB (bad) 
   140026c77:	push   0x65
   140026c79:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140026c7d:	pop    rax
   140026c7e:	pop    rdx
   140026c7f:	add    dh,ah
   140026c81:	adc    edi,DWORD PTR [rdi]
   140026c83:	jno    0x140026cf9
   140026c85:	pop    rdi
   140026c86:	ins    DWORD PTR es:[rdi],dx
   140026c87:	gs je  0x140026ceb
   140026c8a:	movsxd esp,DWORD PTR [rcx+0x73]
   140026c8d:	je     0x140026ccf
   140026c8f:	push   rcx
   140026c90:	rex.RX jb 0x140026cf4
   140026c93:	ins    DWORD PTR es:[rdi],dx
   140026c94:	gs rex
   140026c96:	rex push rbp
   140026c98:	rex.RB
   140026c99:	rex.B
   140026c9a:	push   r8
   140026c9c:	rex.RB
   140026c9d:	pop    r8
   140026c9f:	push   rax
   140026ca0:	rex.RB
   140026ca1:	rex.X
   140026ca2:	rex.R
   140026ca3:	rex pop rdx
   140026ca5:	add    BYTE PTR [rbx+rdx*1+0x3f],bl
   140026ca9:	jno    0x140026d1f
   140026cab:	pop    rdi
   140026cac:	ins    DWORD PTR es:[rdi],dx
   140026cad:	gs je  0x140026d11
   140026cb0:	movsxd esp,DWORD PTR [rcx+0x6c]
   140026cb3:	ins    BYTE PTR es:[rdi],dx
   140026cb4:	rex push rcx
   140026cb6:	rex.RX jb 0x140026d1a
   140026cb9:	ins    DWORD PTR es:[rdi],dx
   140026cba:	gs rex
   140026cbc:	rex push rbp
   140026cbe:	rex.RB
   140026cbf:	rex.B
   140026cc0:	rex.B
   140026cc1:	rex.W push rdi
   140026cc3:	xor    al,0x43
   140026cc5:	(bad)  
   140026cc6:	ins    BYTE PTR es:[rdi],dx
   140026cc7:	ins    BYTE PTR es:[rdi],dx
   140026cc8:	rex push rcx
   140026cca:	rex.WRB
   140026ccb:	gs je  0x140026d2f
   140026cce:	rex.WRXB (bad) 
   140026cd0:	push   0x65
   140026cd2:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140026cd6:	rex.W push rax
   140026cd8:	rex.RB
   140026cd9:	push   r8
   140026cdb:	rex.RB
   140026cdc:	pop    r8
   140026cde:	rex pop rdx
   140026ce0:	add    BYTE PTR [rax],al
   140026ce2:	retf   
   140026ce3:	or     bh,BYTE PTR [rdi]
   140026ce5:	gs jbe 0x140026d4d
   140026ce8:	outs   dx,BYTE PTR ds:[rsi]
   140026ce9:	je     0x140026d2b
   140026ceb:	push   rcx
   140026cec:	rex.RX jb 0x140026d50
   140026cef:	ins    DWORD PTR es:[rdi],dx
   140026cf0:	gs rex
   140026cf2:	rex
   140026cf3:	rex.WRB
   140026cf4:	rex.RB
   140026cf5:	rex.B
   140026cf6:	pop    r15
   140026cf8:	rex.WRX push rax
   140026cfa:	rex.RB
   140026cfb:	push   r14
   140026cfd:	push   rcx
   140026cfe:	rex.RB jbe 0x140026d66
   140026d01:	outs   dx,BYTE PTR ds:[rsi]
   140026d02:	je     0x140026d44
   140026d04:	rex
   140026d05:	rex pop rdx
   140026d07:	add    BYTE PTR [rsi+0x69733f1c],bl
   140026d0d:	jp     0x140026d74
   140026d0f:	imul   rbp,QWORD PTR [rsi+0x74],0x72465140
   140026d17:	(bad)  
   140026d18:	ins    DWORD PTR es:[rdi],dx
   140026d19:	gs rex
   140026d1b:	rex push rbp
   140026d1d:	rex.RB
   140026d1e:	rex.X
   140026d1f:	rex.B (bad) 
   140026d21:	push   r14
   140026d23:	push   rcx
   140026d24:	push   rbx
   140026d25:	imul   edi,DWORD PTR [rdx+0x65],0x5a584040
   140026d2c:	add    BYTE PTR [rax],al
   140026d2e:	pop    rcx
   140026d2f:	adc    bh,BYTE PTR [rdi]
   140026d31:	jo     0x140026d94
   140026d33:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140026d3a:	je     0x140026d7c
   140026d3c:	push   rcx
   140026d3d:	rex.RX jb 0x140026da1
   140026d40:	ins    DWORD PTR es:[rdi],dx
   140026d41:	gs rex
   140026d43:	rex
   140026d44:	rex.WRB
   140026d45:	rex.RB
   140026d46:	rex.B
   140026d47:	pop    r8
   140026d49:	push   rax
   140026d4a:	rex.RB
   140026d4b:	push   r14
   140026d4d:	push   rcx
   140026d4e:	push   rax
   140026d4f:	(bad)  
   140026d50:	imul   ebp,DWORD PTR [rsi+0x74],0x6e657645
   140026d57:	je     0x140026d99
   140026d59:	rex
   140026d5a:	rex pop rdx
   140026d5c:	add    BYTE PTR [rax],al
   140026d5e:	rol    BYTE PTR [rcx],cl
   140026d60:	(bad)  
   140026d61:	(bad)  
   140026d62:	xor    DWORD PTR [rcx+0x46],edx
   140026d65:	jb     0x140026dc8
   140026d67:	ins    DWORD PTR es:[rdi],dx
   140026d68:	gs rex
   140026d6a:	rex push rbp
   140026d6c:	rex.RB
   140026d6d:	rex.B
   140026d6e:	rex.B
   140026d6f:	rex pop rax
   140026d71:	pop    rdx
   140026d72:	add    BYTE PTR [rax],al
   140026d74:	je     0x140026d78
   140026d76:	(bad)  
   140026d77:	(bad)  
   140026d78:	xor    DWORD PTR [rcx+0x57],edx
   140026d7b:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140026d83:	rex.RB
   140026d84:	rex.B
   140026d85:	rex.B
   140026d86:	rex pop rax
   140026d88:	pop    rdx
   140026d89:	add    BYTE PTR [rcx+0x1b],bl
   140026d8c:	(bad)  
   140026d8d:	jae    0x140026df4
   140026d8f:	je     0x140026de5
   140026d91:	gs js  0x140026e08
   140026d94:	rex push rcx
   140026d96:	push   rsp
   140026d97:	gs js  0x140026e0e
   140026d9a:	rex.RB
   140026d9b:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x41414551
   140026da4:	pop    rax
   140026da5:	rex.B
   140026da6:	rex.RB
   140026da7:	rex.X push rsi
   140026da9:	push   rcx
   140026daa:	push   rbx
   140026dab:	je     0x140026e1f
   140026dad:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140026db4:	add    BYTE PTR [rax],al
   140026db6:	scas   al,BYTE PTR es:[rdi]
   140026db7:	add    DWORD PTR [rdi],edi
   140026db9:	(bad)  
   140026dba:	xor    DWORD PTR [rcx+0x41],edx
   140026dbd:	jo     0x140026e2f
   140026dbf:	ins    BYTE PTR es:[rdi],dx
   140026dc0:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140026dc7:	rex
   140026dc8:	rex push rbp
   140026dca:	rex.RB
   140026dcb:	rex.B
   140026dcc:	rex.B
   140026dcd:	rex pop rax
   140026dcf:	pop    rdx
   140026dd0:	add    BYTE PTR [rax],al
   140026dd2:	adc    al,0xb
   140026dd4:	(bad)  
   140026dd5:	gs js  0x140026e3d
   140026dd8:	movsxd eax,DWORD PTR [rax+0x51]
   140026ddb:	rex.B jo 0x140026e4e
   140026dde:	ins    BYTE PTR es:[rdi],dx
   140026ddf:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140026de6:	rex
   140026de7:	rex push rbx
   140026de9:	rex.B
   140026dea:	rex.W pop rax
   140026dec:	pop    rdx
   140026ded:	add    BYTE PTR [rdi],dl
   140026def:	add    BYTE PTR [rdi],bh
   140026df1:	(bad)  
   140026df2:	xor    BYTE PTR [rcx+0x41],dl
   140026df5:	jo     0x140026e67
   140026df7:	ins    BYTE PTR es:[rdi],dx
   140026df8:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140026dff:	rex
   140026e00:	rex push rcx
   140026e02:	rex.RB
   140026e03:	rex.B
   140026e04:	rex.B
   140026e05:	rex
   140026e06:	rex.B
   140026e07:	rex.RB
   140026e08:	rex.B
   140026e09:	rex.W push rax
   140026e0b:	rex.RB
   140026e0c:	push   r8
   140026e0e:	rex.RB
   140026e0f:	rex.B
   140026e10:	rex.R
   140026e11:	rex.W
   140026e12:	rex pop rdx
   140026e14:	add    BYTE PTR [rax],al
   140026e16:	rex.W adc al,0x3f
   140026e19:	jno    0x140026e8f
   140026e1b:	pop    rdi
   140026e1c:	ins    DWORD PTR es:[rdi],dx
   140026e1d:	gs je  0x140026e81
   140026e20:	movsxd esp,DWORD PTR [rcx+0x73]
   140026e23:	je     0x140026e65
   140026e25:	push   rcx
   140026e26:	push   rdi
   140026e27:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140026e2e:	push   rbp
   140026e2f:	rex.RB
   140026e30:	rex.B
   140026e31:	push   r8
   140026e33:	rex.RB
   140026e34:	pop    r8
   140026e36:	push   rax
   140026e37:	rex.RB
   140026e38:	rex.X
   140026e39:	rex.R
   140026e3a:	rex pop rdx
   140026e3c:	add    BYTE PTR [rax],al
   140026e3e:	mov    esi,0x74713f13
   140026e43:	pop    rdi
   140026e44:	ins    DWORD PTR es:[rdi],dx
   140026e45:	gs je  0x140026ea9
   140026e48:	movsxd esp,DWORD PTR [rcx+0x6c]
   140026e4b:	ins    BYTE PTR es:[rdi],dx
   140026e4c:	rex push rcx
   140026e4e:	push   rdi
   140026e4f:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140026e56:	push   rbp
   140026e57:	rex.RB
   140026e58:	rex.B
   140026e59:	rex.B
   140026e5a:	rex.W push rdi
   140026e5c:	xor    al,0x43
   140026e5e:	(bad)  
   140026e5f:	ins    BYTE PTR es:[rdi],dx
   140026e60:	ins    BYTE PTR es:[rdi],dx
   140026e61:	rex push rcx
   140026e63:	rex.WRB
   140026e64:	gs je  0x140026ec8
   140026e67:	rex.WRXB (bad) 
   140026e69:	push   0x65
   140026e6b:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140026e6f:	rex.W push rax
   140026e71:	rex.RB
   140026e72:	push   r8
   140026e74:	rex.RB
   140026e75:	pop    r8
   140026e77:	rex pop rdx
   140026e79:	add    BYTE PTR [rbp+rbx*1+0x6174733f],dh
   140026e80:	je     0x140026eeb
   140026e82:	movsxd ecx,DWORD PTR [rbp+0x65]
   140026e85:	je     0x140026ee8
   140026e87:	rex.WRXB (bad) 
   140026e89:	push   0x65
   140026e8b:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140026e8f:	push   rdi
   140026e90:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   140026e97:	xor    dl,BYTE PTR [rbp+0x51]
   140026e9a:	rex.WRB
   140026e9b:	gs je  0x140026eff
   140026e9e:	rex.WRXB (bad) 
   140026ea0:	push   0x65
   140026ea2:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140026ea6:	rex.X add BYTE PTR [rcx+0x14],cl
   140026eaa:	(bad)  
   140026eab:	jno    0x140026f21
   140026ead:	pop    rdi
   140026eae:	ins    DWORD PTR es:[rdi],dx
   140026eaf:	gs je  0x140026f13
   140026eb2:	movsxd esp,DWORD PTR [rcx+0x73]
   140026eb5:	je     0x140026ef7
   140026eb7:	push   rcx
   140026eb8:	push   rdi
   140026eb9:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   140026ec0:	addr32 gs rex
   140026ec3:	rex push rbp
   140026ec5:	rex.RB
   140026ec6:	rex.B
   140026ec7:	push   r8
   140026ec9:	rex.RB
   140026eca:	pop    r8
   140026ecc:	push   rax
   140026ecd:	rex.RB
   140026ece:	rex.X
   140026ecf:	rex.R
   140026ed0:	rex pop rdx
   140026ed2:	add    BYTE PTR [rax],al
   140026ed4:	mov    edi,0x74713f13
   140026ed9:	pop    rdi
   140026eda:	ins    DWORD PTR es:[rdi],dx
   140026edb:	gs je  0x140026f3f
   140026ede:	movsxd esp,DWORD PTR [rcx+0x6c]
   140026ee1:	ins    BYTE PTR es:[rdi],dx
   140026ee2:	rex push rcx
   140026ee4:	push   rdi
   140026ee5:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   140026eec:	addr32 gs rex
   140026eef:	rex push rbp
   140026ef1:	rex.RB
   140026ef2:	rex.B
   140026ef3:	rex.B
   140026ef4:	rex.W push rdi
   140026ef6:	xor    al,0x43
   140026ef8:	(bad)  
   140026ef9:	ins    BYTE PTR es:[rdi],dx
   140026efa:	ins    BYTE PTR es:[rdi],dx
   140026efb:	rex push rcx
   140026efd:	rex.WRB
   140026efe:	gs je  0x140026f62
   140026f01:	rex.WRXB (bad) 
   140026f03:	push   0x65
   140026f05:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140026f09:	rex.W push rax
   140026f0b:	rex.RB
   140026f0c:	push   r8
   140026f0e:	rex.RB
   140026f0f:	pop    r8
   140026f11:	rex pop rdx
   140026f13:	add    BYTE PTR [rbp+0x74733f1d],dh
   140026f19:	(bad)  
   140026f1a:	je     0x140026f85
   140026f1c:	movsxd ecx,DWORD PTR [rbp+0x65]
   140026f1f:	je     0x140026f82
   140026f21:	rex.WRXB (bad) 
   140026f23:	push   0x65
   140026f25:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140026f29:	push   rdi
   140026f2a:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   140026f31:	addr32 gs rex
   140026f34:	xor    dl,BYTE PTR [rbp+0x51]
   140026f38:	rex.WRB
   140026f39:	gs je  0x140026f9d
   140026f3c:	rex.WRXB (bad) 
   140026f3e:	push   0x65
   140026f40:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140026f44:	rex.X add BYTE PTR [rdx+0x14],al
   140026f48:	(bad)  
   140026f49:	jno    0x140026fbf
   140026f4b:	pop    rdi
   140026f4c:	ins    DWORD PTR es:[rdi],dx
   140026f4d:	gs je  0x140026fb1
   140026f50:	movsxd esp,DWORD PTR [rcx+0x73]
   140026f53:	je     0x140026f95
   140026f55:	push   rcx
   140026f56:	push   rdi
   140026f57:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140026f5f:	rex.RB
   140026f60:	rex.B
   140026f61:	push   r8
   140026f63:	rex.RB
   140026f64:	pop    r8
   140026f66:	push   rax
   140026f67:	rex.RB
   140026f68:	rex.X
   140026f69:	rex.R
   140026f6a:	rex pop rdx
   140026f6c:	add    BYTE PTR [rax],al
   140026f6e:	mov    eax,0x74713f13
   140026f73:	pop    rdi
   140026f74:	ins    DWORD PTR es:[rdi],dx
   140026f75:	gs je  0x140026fd9
   140026f78:	movsxd esp,DWORD PTR [rcx+0x6c]
   140026f7b:	ins    BYTE PTR es:[rdi],dx
   140026f7c:	rex push rcx
   140026f7e:	push   rdi
   140026f7f:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x55404074
   140026f87:	rex.RB
   140026f88:	rex.B
   140026f89:	rex.B
   140026f8a:	rex.W push rdi
   140026f8c:	xor    al,0x43
   140026f8e:	(bad)  
   140026f8f:	ins    BYTE PTR es:[rdi],dx
   140026f90:	ins    BYTE PTR es:[rdi],dx
   140026f91:	rex push rcx
   140026f93:	rex.WRB
   140026f94:	gs je  0x140026ff8
   140026f97:	rex.WRXB (bad) 
   140026f99:	push   0x65
   140026f9b:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140026f9f:	rex.W push rax
   140026fa1:	rex.RB
   140026fa2:	push   r8
   140026fa4:	rex.RB
   140026fa5:	pop    r8
   140026fa7:	rex pop rdx
   140026fa9:	add    BYTE PTR [rsi+0x74733f1d],ch
   140026faf:	(bad)  
   140026fb0:	je     0x14002701b
   140026fb2:	movsxd ecx,DWORD PTR [rbp+0x65]
   140026fb5:	je     0x140027018
   140026fb7:	rex.WRXB (bad) 
   140026fb9:	push   0x65
   140026fbb:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   140026fbf:	push   rdi
   140026fc0:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x32404074
   140026fc8:	push   rbp
   140026fc9:	push   rcx
   140026fca:	rex.WRB
   140026fcb:	gs je  0x14002702f
   140026fce:	rex.WRXB (bad) 
   140026fd0:	push   0x65
   140026fd2:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140026fd6:	rex.X add BYTE PTR [rcx+0x74],dl
   140026fda:	xor    eax,0x67646957
   140026fdf:	gs je  0x140027055
   140026fe2:	cs fs ins BYTE PTR es:[rdi],dx
   140026fe5:	ins    BYTE PTR es:[rdi],dx
   140026fe6:	add    BYTE PTR [rax],al
   140026fe8:	mov    bl,0x4a
   140026fea:	(bad)  
   140026feb:	ins    BYTE PTR es:[edi],dx
   140026fed:	outs   dx,DWORD PTR ds:[rsi]
   140026fee:	(bad)
   140026ff3:	jae    0x140027035
   140026ff5:	push   rcx
   140026ff6:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140026ff8:	jne    0x14002706d
   140026ffa:	gs rex.RB jbe 0x140027063
   140026ffe:	outs   dx,BYTE PTR ds:[rsi]
   140026fff:	je     0x140027041
   140027001:	rex push rcx
   140027003:	rex.RB
   140027004:	rex.X
   140027005:	rex.B (bad) 
   140027007:	push   r14
   140027009:	push   rcx
   14002700a:	push   rax
   14002700b:	outs   dx,DWORD PTR ds:[rsi]
   14002700c:	imul   ebp,DWORD PTR [rsi+0x74],0x5a584040
   140027013:	add    bh,ch
   140027015:	add    edi,DWORD PTR [rdi]
   140027017:	(bad)  
   140027018:	xor    DWORD PTR [rcx+0x50],edx
   14002701b:	imul   edi,DWORD PTR [rax+0x6d],0x40407061
   140027022:	push   rbp
   140027023:	rex.RB
   140027024:	rex.B
   140027025:	rex.B
   140027026:	rex pop rax
   140027028:	pop    rdx
   140027029:	add    bl,bl
   14002702b:	add    DWORD PTR [rdi],edi
   14002702d:	(bad)  
   14002702e:	xor    BYTE PTR [rcx+0x50],dl
   140027031:	imul   edi,DWORD PTR [rax+0x6d],0x40407061
   140027038:	push   rcx
   140027039:	rex.RB
   14002703a:	rex.B
   14002703b:	rex.B
   14002703c:	rex
   14002703d:	rex.B
   14002703e:	rex.RB
   14002703f:	rex.X push rsi
   140027041:	push   rcx
   140027042:	push   rbx
   140027043:	je     0x1400270b7
   140027045:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   14002704c:	rex.X
   14002704d:	rex.R push rsi
   14002704f:	(bad)  
   140027050:	and    al,0x51
   140027052:	rex.RX ins BYTE PTR es:[rdi],dx
   140027054:	(bad)  
   140027055:	addr32 jae 0x140027098
   140027058:	push   rdi
   140027059:	xor    al,0x49
   14002705b:	ins    DWORD PTR es:[rdi],dx
   14002705c:	(bad)  
   14002705d:	rex.XB outs dx,DWORD PTR gs:[esi]
   140027061:	outs   dx,BYTE PTR ds:[rsi]
   140027062:	jbe    0x1400270c9
   140027064:	jb     0x1400270d9
   140027066:	imul   ebp,DWORD PTR [rdi+0x6e],0x67616c46
   14002706d:	rex push rcx
   14002706f:	je     0x1400270b1
   140027071:	rex
   140027072:	rex
   140027073:	rex
   140027074:	rex pop rdx
   140027076:	add    BYTE PTR [rax],al
   140027078:	jp     0x14002707d
   14002707a:	(bad)  
   14002707b:	(bad)  
   14002707c:	xor    DWORD PTR [rcx+0x49],edx
   14002707f:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140027082:	rex
   140027083:	rex push rcx
   140027085:	rex.RB
   140027086:	rex.B
   140027087:	rex.B
   140027088:	rex pop rax
   14002708a:	pop    rdx
   14002708b:	add    al,cl
   14002708d:	add    BYTE PTR [rdi],bh
   14002708f:	(bad)  
   140027090:	xor    BYTE PTR [rcx+0x49],dl
   140027093:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140027096:	rex
   140027097:	rex push rcx
   140027099:	rex.RB
   14002709a:	rex.B
   14002709b:	rex.B
   14002709c:	rex
   14002709d:	rex.B
   14002709e:	rex.RB
   14002709f:	rex.X push rsi
   1400270a1:	push   rcx
   1400270a2:	push   rbx
   1400270a3:	je     0x140027117
   1400270a5:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400270ac:	add    BYTE PTR [rax],al
   1400270ae:	sbb    DWORD PTR [rbx+0x3f],edx
   1400270b1:	jb     0x140027118
   1400270b3:	jae    0x140027129
   1400270b5:	outs   dx,DWORD PTR ds:[rsi]
   1400270b6:	jb     0x14002711d
   1400270b8:	rex.WRXB jbe 0x140027120
   1400270bb:	jb     0x14002712f
   1400270bd:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x6f737275
   1400270c5:	jb     0x140027107
   1400270c7:	push   rcx
   1400270c8:	rex.RXB jne 0x140027134
   1400270cb:	rex.B jo 0x14002713e
   1400270ce:	ins    BYTE PTR es:[rdi],dx
   1400270cf:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400270d6:	rex
   1400270d7:	rex push rbx
   1400270d9:	pop    r8
   1400270db:	pop    rax
   1400270dc:	pop    rdx
   1400270dd:	add    BYTE PTR [rbp+0x3],dl
   1400270e0:	(bad)  
   1400270e1:	(bad)  
   1400270e2:	xor    DWORD PTR [rcx+0x43],edx
   1400270e5:	jne    0x140027159
   1400270e7:	jae    0x140027158
   1400270e9:	jb     0x14002712b
   1400270eb:	rex push rcx
   1400270ed:	rex.RB
   1400270ee:	rex.B
   1400270ef:	rex.B
   1400270f0:	rex pop rax
   1400270f2:	pop    rdx
   1400270f3:	add    al,dh
   1400270f5:	push   rbp
   1400270f6:	(bad)  
   1400270f7:	jae    0x14002715e
   1400270f9:	je     0x14002714a
   1400270fb:	jbe    0x140027162
   1400270fd:	jb     0x140027171
   1400270ff:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x6f737275
   140027107:	jb     0x140027149
   140027109:	push   rcx
   14002710a:	rex.RXB jne 0x140027176
   14002710d:	rex.B jo 0x140027180
   140027110:	ins    BYTE PTR es:[rdi],dx
   140027111:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140027118:	rex
   140027119:	rex push rbx
   14002711b:	pop    r8
   14002711d:	rex.B
   14002711e:	rex.RB
   14002711f:	rex.X push rsi
   140027121:	push   rcx
   140027122:	rex.XB jne 0x140027197
   140027125:	jae    0x140027196
   140027127:	jb     0x140027169
   140027129:	rex
   14002712a:	rex pop rdx
   14002712c:	add    BYTE PTR [rax],al
   14002712e:	je     0x140027130
   140027130:	(bad)  
   140027131:	(bad)  
   140027132:	xor    BYTE PTR [rcx+0x43],dl
   140027135:	jne    0x1400271a9
   140027137:	jae    0x1400271a8
   140027139:	jb     0x14002717b
   14002713b:	rex push rcx
   14002713d:	rex.RB
   14002713e:	rex.B
   14002713f:	rex.B
   140027140:	rex push rdi
   140027142:	xor    al,0x43
   140027144:	jne    0x1400271b8
   140027146:	jae    0x1400271b7
   140027148:	jb     0x14002719d
   14002714a:	push   0x40657061
   14002714f:	push   rcx
   140027150:	je     0x140027192
   140027152:	rex
   140027153:	rex pop rdx
   140027155:	add    dh,ah
   140027157:	add    edi,DWORD PTR [rdi]
   140027159:	(bad)  
   14002715a:	xor    DWORD PTR [rcx+0x50],edx
   14002715d:	(bad)  
   14002715e:	ins    BYTE PTR es:[rdi],dx
   14002715f:	gs je  0x1400271d6
   140027162:	gs rex
   140027164:	rex push rcx
   140027166:	rex.RB
   140027167:	rex.B
   140027168:	rex.B
   140027169:	rex pop rax
   14002716b:	pop    rdx
   14002716c:	add    BYTE PTR [rax],al
   14002716e:	rex.WRXB add r15,QWORD PTR [r15]
   140027171:	(bad)  
   140027172:	xor    DWORD PTR [rcx+0x42],edx
   140027175:	jb     0x1400271ec
   140027177:	jae    0x1400271e1
   140027179:	rex
   14002717a:	rex push rcx
   14002717c:	rex.RB
   14002717d:	rex.B
   14002717e:	rex.B
   14002717f:	rex pop rax
   140027181:	pop    rdx
   140027182:	add    BYTE PTR [rax],al
   140027184:	sbb    al,0x54
   140027186:	(bad)  
   140027187:	jae    0x1400271ee
   140027189:	je     0x1400271cd
   14002718b:	jb     0x140027202
   14002718d:	jae    0x1400271f7
   14002718f:	rex push rcx
   140027191:	push   rax
   140027192:	(bad)  
   140027193:	ins    BYTE PTR es:[rdi],dx
   140027194:	gs je  0x14002720b
   140027197:	gs rex
   140027199:	rex push rcx
   14002719b:	rex.RB
   14002719c:	rex.B
   14002719d:	pop    r8
   14002719f:	push   rdi
   1400271a0:	xor    al,0x43
   1400271a2:	outs   dx,DWORD PTR ds:[rsi]
   1400271a3:	ins    BYTE PTR es:[rdi],dx
   1400271a4:	outs   dx,DWORD PTR ds:[rsi]
   1400271a5:	jb     0x1400271ee
   1400271a7:	jb     0x140027218
   1400271a9:	jne    0x14002721b
   1400271ab:	rex xor DWORD PTR [rax+0x57],eax
   1400271af:	xor    al,0x43
   1400271b1:	outs   dx,DWORD PTR ds:[rsi]
   1400271b2:	ins    BYTE PTR es:[rdi],dx
   1400271b3:	outs   dx,DWORD PTR ds:[rsi]
   1400271b4:	jb     0x140027208
   1400271b6:	outs   dx,DWORD PTR ds:[rsi]
   1400271b7:	ins    BYTE PTR es:[rdi],dx
   1400271b8:	rex xor DWORD PTR gs:[rax+0x41],eax
   1400271bd:	rex.RB
   1400271be:	rex.X push rsi
   1400271c0:	push   rcx
   1400271c1:	rex.X jb 0x140027239
   1400271c4:	jae    0x14002722e
   1400271c6:	rex
   1400271c7:	rex
   1400271c8:	rex pop rdx
   1400271ca:	add    BYTE PTR [rax],al
   1400271cc:	push   rbx
   1400271cd:	add    BYTE PTR [rdi],bh
   1400271cf:	(bad)  
   1400271d0:	xor    BYTE PTR [rcx+0x42],dl
   1400271d3:	jb     0x14002724a
   1400271d5:	jae    0x14002723f
   1400271d7:	rex
   1400271d8:	rex push rcx
   1400271da:	rex.RB
   1400271db:	rex.B
   1400271dc:	rex.B
   1400271dd:	rex
   1400271de:	rex.B
   1400271df:	rex.RB
   1400271e0:	rex.X push rsi
   1400271e2:	push   rcx
   1400271e3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400271e5:	ins    BYTE PTR es:[rdi],dx
   1400271e6:	outs   dx,DWORD PTR ds:[rsi]
   1400271e7:	jb     0x140027229
   1400271e9:	rex push rdi
   1400271eb:	xor    al,0x42
   1400271ed:	jb     0x140027264
   1400271ef:	jae    0x140027259
   1400271f1:	push   rbx
   1400271f2:	je     0x14002726d
   1400271f4:	ins    BYTE PTR es:[rdi],dx
   1400271f5:	gs rex push rcx
   1400271f8:	je     0x14002723a
   1400271fa:	rex
   1400271fb:	rex pop rdx
   1400271fd:	add    BYTE PTR [rax+rax*1+0x3f],ah
   140027201:	(bad)  
   140027202:	xor    BYTE PTR [rcx+0x43],dl
   140027205:	outs   dx,DWORD PTR ds:[rsi]
   140027206:	ins    BYTE PTR es:[rdi],dx
   140027207:	outs   dx,DWORD PTR ds:[rsi]
   140027208:	jb     0x14002724a
   14002720a:	rex push rcx
   14002720c:	rex.RB
   14002720d:	rex.B
   14002720e:	rex.B
   14002720f:	rex push rdi
   140027211:	xor    al,0x47
   140027213:	ins    BYTE PTR es:[rdi],dx
   140027214:	outs   dx,DWORD PTR ds:[rsi]
   140027215:	(bad)
   14002721a:	ins    BYTE PTR es:[rdi],dx
   14002721b:	outs   dx,DWORD PTR ds:[rsi]
   14002721c:	jb     0x14002725e
   14002721e:	push   rcx
   14002721f:	je     0x140027261
   140027221:	rex
   140027222:	rex pop rdx
   140027224:	add    BYTE PTR [rax],al
   140027226:	mov    edi,0x303f3f01
   14002722b:	push   rcx
   14002722c:	push   rax
   14002722d:	(bad)  
   14002722e:	ins    BYTE PTR es:[rdi],dx
   14002722f:	gs je  0x1400272a6
   140027232:	gs rex
   140027234:	rex push rcx
   140027236:	rex.RB
   140027237:	rex.B
   140027238:	rex.B
   140027239:	rex
   14002723a:	rex.B
   14002723b:	rex.RB
   14002723c:	rex.X push rsi
   14002723e:	xor    BYTE PTR [rax+0x40],al
   140027241:	pop    rdx
   140027242:	add    BYTE PTR [rax],al
   140027244:	push   rcx
   140027245:	je     0x14002727c
   140027247:	rex.RXB jne 0x1400272b3
   14002724a:	cs fs ins BYTE PTR es:[rdi],dx
   14002724d:	ins    BYTE PTR es:[rdi],dx
   14002724e:	add    BYTE PTR [rax],al
   140027250:	enter  0x3f06,0x61
   140027254:	jo     0x1400272c6
   140027256:	outs   dx,BYTE PTR gs:[rsi]
   140027258:	fs rex push rcx
   14002725b:	push   rbx
   14002725c:	je     0x1400272d0
   14002725e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027265:	rex.B
   140027266:	rex.B
   140027267:	rex.B
   140027268:	rex.RB
   140027269:	push   r14
   14002726b:	xor    DWORD PTR [rax+0x41],eax
   14002726e:	rex.RB
   14002726f:	rex.X push rsi
   140027271:	xor    DWORD PTR [rax+0x40],eax
   140027274:	pop    rdx
   140027275:	add    BYTE PTR [rsi+0x303f3f01],cl
   14002727b:	push   rcx
   14002727c:	push   rbx
   14002727d:	je     0x1400272f1
   14002727f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027286:	rex.B
   140027287:	rex.B
   140027288:	rex
   140027289:	rex.B
   14002728a:	rex.RB
   14002728b:	rex.X push rsi
   14002728d:	xor    BYTE PTR [rax+0x40],al
   140027290:	pop    rdx
   140027291:	add    BYTE PTR [rbp+0x5],dl
   140027294:	(bad)  
   140027295:	(bad)  
   140027296:	pop    rcx
   140027297:	push   rcx
   140027298:	push   rbx
   140027299:	je     0x14002730d
   14002729b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400272a2:	rex.B
   1400272a3:	rex.B
   1400272a4:	rex.B
   1400272a5:	rex.RB
   1400272a6:	push   r14
   1400272a8:	xor    BYTE PTR [rax+0x56],al
   1400272ab:	push   rcx
   1400272ac:	rex.XB push 0x40407261
   1400272b2:	rex pop rdx
   1400272b4:	add    BYTE PTR [rax],al
   1400272b6:	mov    ebx,DWORD PTR [rcx]
   1400272b8:	(bad)  
   1400272b9:	je     0x14002732d
   1400272bb:	rex push rcx
   1400272bd:	rex.WRB
   1400272be:	gs je  0x140027322
   1400272c1:	rex.WRXB (bad) 
   1400272c3:	push   0x65
   1400272c5:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400272c9:	push   rcx
   1400272ca:	rex.RB
   1400272cb:	rex.X
   1400272cc:	rex.B (bad) 
   1400272ce:	push   r14
   1400272d0:	push   rcx
   1400272d1:	push   rbx
   1400272d2:	je     0x140027346
   1400272d4:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   1400272db:	rex.X
   1400272dc:	xor    BYTE PTR [rax+0x40],r9b
   1400272e0:	pop    rdx
   1400272e1:	add    bl,ch
   1400272e3:	add    bh,BYTE PTR [rdi]
   1400272e5:	(bad)  
   1400272e6:	xor    DWORD PTR [rcx+0x56],edx
   1400272e9:	(bad)  
   1400272ea:	jb     0x140027355
   1400272ec:	(bad)  
   1400272ed:	outs   dx,BYTE PTR ds:[rsi]
   1400272ee:	je     0x140027330
   1400272f0:	rex push rcx
   1400272f2:	rex.RB
   1400272f3:	rex.B
   1400272f4:	rex.B
   1400272f5:	rex pop rax
   1400272f7:	pop    rdx
   1400272f8:	add    BYTE PTR [rax],al
   1400272fa:	rol    BYTE PTR [rdx],1
   1400272fc:	(bad)  
   1400272fd:	(bad)  
   1400272fe:	xor    DWORD PTR [rcx+0x53],edx
   140027301:	je     0x140027375
   140027303:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002730a:	rex.B
   14002730b:	rex.B
   14002730c:	rex pop rax
   14002730e:	pop    rdx
   14002730f:	add    BYTE PTR [rsi+0x303f3f01],dl
   140027315:	push   rcx
   140027316:	push   rbx
   140027317:	je     0x14002738b
   140027319:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027320:	rex.B
   140027321:	rex.B
   140027322:	rex push rsi
   140027324:	push   rcx
   140027325:	rex.WR (bad) 
   140027327:	je     0x140027392
   140027329:	outs   dx,BYTE PTR ds:[rsi]
   14002732a:	xor    DWORD PTR [rbx+0x74],edx
   14002732d:	jb     0x140027398
   14002732f:	outs   dx,BYTE PTR ds:[rsi]
   140027330:	addr32 rex
   140027332:	rex
   140027333:	rex pop rdx
   140027335:	add    bh,bh
   140027337:	add    DWORD PTR [rdi],edi
   140027339:	(bad)  
   14002733a:	xor    BYTE PTR [rcx+0x56],dl
   14002733d:	(bad)  
   14002733e:	jb     0x1400273a9
   140027340:	(bad)  
   140027341:	outs   dx,BYTE PTR ds:[rsi]
   140027342:	je     0x140027384
   140027344:	rex push rcx
   140027346:	rex.RB
   140027347:	rex.B
   140027348:	rex.B
   140027349:	rex
   14002734a:	rex.B
   14002734b:	rex.RB
   14002734c:	rex.X push rsi
   14002734e:	push   rcx
   14002734f:	push   rbx
   140027350:	je     0x1400273c4
   140027352:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140027359:	add    BYTE PTR [rbx+0x313f3f02],cl
   14002735f:	push   rcx
   140027360:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   140027369:	rex push rcx
   14002736b:	rex.RB
   14002736c:	rex.B
   14002736d:	rex.B
   14002736e:	rex pop rax
   140027370:	pop    rdx
   140027371:	add    BYTE PTR [rdx],ch
   140027373:	(bad)  
   140027374:	(bad)  
   140027375:	(bad)  
   140027377:	jae    0x1400273de
   140027379:	rex.WRX (bad) 
   14002737b:	ins    DWORD PTR es:[rdi],dx
   14002737c:	gs rex push rcx
   14002737f:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   140027388:	rex push rcx
   14002738a:	rex.RB
   14002738b:	rex.X
   14002738c:	rex.B (bad) 
   14002738e:	push   r14
   140027390:	push   rcx
   140027391:	push   rbx
   140027392:	je     0x140027406
   140027394:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002739b:	add    BYTE PTR [rax+0x6],al
   14002739e:	(bad)  
   14002739f:	(bad)  
   1400273a0:	(bad)
   1400273a5:	je     0x14002740c
   1400273a7:	push   rax
   1400273a8:	(bad)  
   1400273a9:	je     0x140027413
   1400273ab:	rex push rcx
   1400273ad:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   1400273b6:	rex push rcx
   1400273b8:	rex.RB
   1400273b9:	rex.X
   1400273ba:	rex.B (bad) 
   1400273bc:	push   r14
   1400273be:	push   rcx
   1400273bf:	push   rbx
   1400273c0:	je     0x140027434
   1400273c2:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   1400273c9:	add    BYTE PTR [rdi+0x303f3f00],dh
   1400273cf:	push   rcx
   1400273d0:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   1400273d9:	rex push rcx
   1400273db:	rex.RB
   1400273dc:	rex.B
   1400273dd:	rex.B
   1400273de:	rex
   1400273df:	rex.B
   1400273e0:	rex.RB
   1400273e1:	rex.X push rsi
   1400273e3:	push   rcx
   1400273e4:	push   rbx
   1400273e5:	je     0x140027459
   1400273e7:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400273ee:	add    BYTE PTR [rax],al
   1400273f0:	sbb    BYTE PTR [rcx],bl
   1400273f2:	(bad)  
   1400273f3:	je     0x140027464
   1400273f5:	push   rbx
   1400273f6:	je     0x14002746a
   1400273f8:	imul   ebp,DWORD PTR [rsi+0x67],0x61565140
   1400273ff:	jb     0x14002746a
   140027401:	(bad)  
   140027402:	outs   dx,BYTE PTR ds:[rsi]
   140027403:	je     0x140027445
   140027405:	rex push rcx
   140027407:	rex.RB
   140027408:	rex.X
   140027409:	rex.B (bad) 
   14002740b:	push   r14
   14002740d:	push   rcx
   14002740e:	push   rbx
   14002740f:	je     0x140027483
   140027411:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140027418:	add    BYTE PTR [rax],al
   14002741a:	(bad)  
   14002741b:	adc    BYTE PTR [rdi],bh
   14002741d:	outs   dx,DWORD PTR ds:[rsi]
   14002741e:	(bad)  
   14002741f:	push   0x65
   140027421:	movsxd esi,DWORD PTR [rsi+rcx*2+0x61]
   140027425:	ins    DWORD PTR es:[rdi],dx
   140027426:	gs rex push rcx
   140027429:	rex.WRXB (bad) 
   14002742b:	push   0x65
   14002742d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027431:	push   rcx
   140027432:	rex.RB
   140027433:	rex.X
   140027434:	rex.B (bad) 
   140027436:	push   r14
   140027438:	push   rcx
   140027439:	push   rbx
   14002743a:	je     0x1400274ae
   14002743c:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140027443:	add    ah,al
   140027445:	or     BYTE PTR [rdi],bh
   140027447:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14002744a:	je     0x1400274ad
   14002744c:	imul   ebp,DWORD PTR [rsi+0x73],0x65525140
   140027453:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027457:	push   rcx
   140027458:	rex.RB
   140027459:	rex.X
   14002745a:	pop    r15
   14002745c:	rex.WRX
   14002745d:	rex.B
   14002745e:	rex.RB
   14002745f:	rex.X push rsi
   140027461:	push   rcx
   140027462:	push   rax
   140027463:	outs   dx,DWORD PTR ds:[rsi]
   140027464:	imul   ebp,DWORD PTR [rsi+0x74],0x4e5f4040
   14002746b:	rex pop rdx
   14002746d:	add    cl,dl
   14002746f:	(bad)  
   140027470:	(bad)  
   140027471:	jae    0x1400274db
   140027473:	(bad)  
   140027474:	jb     0x1400274db
   140027476:	fs pop rdi
   140027478:	outs   dx,BYTE PTR ds:[rsi]
   140027479:	jne    0x1400274e7
   14002747b:	ins    BYTE PTR es:[rdi],dx
   14002747c:	rex push rcx
   14002747e:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140027486:	rex
   140027487:	xor    dl,BYTE PTR [rbp+0x44]
   14002748b:	(bad)  
   14002748c:	je     0x1400274ef
   14002748e:	rex xor DWORD PTR [rax+0x42],eax
   140027492:	add    BYTE PTR [rax],al
   140027494:	rcl    BYTE PTR [rsi],cl
   140027496:	(bad)  
   140027497:	jae    0x140027501
   140027499:	(bad)  
   14002749a:	jb     0x140027501
   14002749c:	fs pop rdi
   14002749e:	outs   dx,BYTE PTR ds:[rsi]
   14002749f:	jne    0x14002750d
   1400274a1:	ins    BYTE PTR es:[rdi],dx
   1400274a2:	rex push rcx
   1400274a4:	rex.WRB (bad) 
   1400274a6:	jo     0x1400274ec
   1400274a8:	(bad)  
   1400274a9:	je     0x14002750c
   1400274ab:	rex.X (bad) 
   1400274ad:	jae    0x140027514
   1400274af:	rex
   1400274b0:	xor    dl,BYTE PTR [rbp+0x31]
   1400274b4:	rex
   1400274b5:	rex.X add BYTE PTR [rax],al
   1400274b8:	iret   
   1400274b9:	(bad)  
   1400274ba:	(bad)  
   1400274bb:	jae    0x140027525
   1400274bd:	(bad)  
   1400274be:	jb     0x140027525
   1400274c0:	fs pop rdi
   1400274c2:	outs   dx,BYTE PTR ds:[rsi]
   1400274c3:	jne    0x140027531
   1400274c5:	ins    BYTE PTR es:[rdi],dx
   1400274c6:	rex push rcx
   1400274c8:	rex.W (bad) 
   1400274ca:	jae    0x140027534
   1400274cc:	rex.R (bad) 
   1400274ce:	je     0x140027531
   1400274d0:	rex
   1400274d1:	xor    dl,BYTE PTR [rbp+0x31]
   1400274d5:	rex
   1400274d6:	rex.X add BYTE PTR [rdx+0x4],spl
   1400274da:	(bad)  
   1400274db:	(bad)  
   1400274dc:	cmp    BYTE PTR [rax+0x59],al
   1400274df:	pop    r15
   1400274e1:	rex.WRX
   1400274e2:	rex.B
   1400274e3:	rex.RB
   1400274e4:	rex.X push rsi
   1400274e6:	push   rcx
   1400274e7:	push   rbx
   1400274e8:	je     0x14002755c
   1400274ea:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   1400274f1:	pop    rdx
   1400274f2:	add    BYTE PTR [rax],al
   1400274f4:	mov    DWORD PTR [rdx],ecx
   1400274f6:	(bad)  
   1400274f7:	imul   esi,DWORD PTR fs:[rbx+0x70],0x4065736f
   1400274ff:	push   rcx
   140027500:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140027508:	rex
   140027509:	rex push rbx
   14002750b:	pop    r8
   14002750d:	push   rax
   14002750e:	rex.RB
   14002750f:	push   r13
   140027511:	rex.R (bad) 
   140027513:	je     0x140027576
   140027515:	rex xor DWORD PTR [rax+0x40],eax
   140027519:	pop    rdx
   14002751a:	add    BYTE PTR [rax],al
   14002751c:	jmp    0x14002752f
   14002751e:	(bad)  
   14002751f:	jno    0x140027569
   140027521:	(bad)  
   140027522:	jae    0x14002758c
   140027524:	rex
   140027525:	rex pop rcx
   140027527:	rex.B
   140027528:	rex.WB
   140027529:	rex.B
   14002752a:	rex.RB
   14002752b:	rex.X push rsi
   14002752d:	push   rcx
   14002752e:	push   rbx
   14002752f:	je     0x1400275a3
   140027531:	imul   ebp,DWORD PTR [rsi+0x67],0x40494040
   140027538:	pop    rdx
   140027539:	add    BYTE PTR [rsi],cl
   14002753b:	or     al,0x3f
   14002753d:	data16 jb 0x1400275a5
   140027540:	gs rex.R (bad) 
   140027543:	je     0x1400275a6
   140027545:	rex push rcx
   140027547:	rex.WRB (bad) 
   140027549:	jo     0x14002758f
   14002754b:	(bad)  
   14002754c:	je     0x1400275af
   14002754e:	rex.X (bad) 
   140027550:	jae    0x1400275b7
   140027552:	rex
   140027553:	rex push rbx
   140027555:	pop    r8
   140027557:	push   rax
   140027558:	rex.RB
   140027559:	push   r13
   14002755b:	xor    DWORD PTR [rax+0x40],eax
   14002755e:	pop    rdx
   14002755f:	add    BYTE PTR [rcx],dl
   140027561:	or     al,0x3f
   140027563:	data16 jb 0x1400275cb
   140027566:	gs push rsp
   140027568:	jb     0x1400275cf
   14002756a:	gs rex push rcx
   14002756d:	rex.WRB (bad) 
   14002756f:	jo     0x1400275b5
   140027571:	(bad)  
   140027572:	je     0x1400275d5
   140027574:	rex.X (bad) 
   140027576:	jae    0x1400275dd
   140027578:	rex
   140027579:	rex push rcx
   14002757b:	rex.RB
   14002757c:	rex.B
   14002757d:	pop    r8
   14002757f:	push   rax
   140027580:	rex.RB
   140027581:	push   r13
   140027583:	push   rcx
   140027584:	rex.WRB (bad) 
   140027586:	jo     0x1400275d6
   140027588:	outs   dx,DWORD PTR ds:[rsi]
   140027589:	fs gs rex.X (bad) 
   14002758d:	jae    0x1400275f4
   14002758f:	rex
   140027590:	rex
   140027591:	rex.W
   140027592:	rex pop rdx
   140027594:	add    BYTE PTR [rax],al
   140027596:	push   rbx
   140027597:	or     bh,BYTE PTR [rdi]
   140027599:	fs gs je 0x1400275fe
   14002759d:	movsxd ebp,DWORD PTR [rax+0x40]
   1400275a0:	push   rcx
   1400275a1:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   1400275a9:	rex
   1400275aa:	rex push rcx
   1400275ac:	rex.RB
   1400275ad:	rex.B
   1400275ae:	push   r8
   1400275b0:	rex.RB
   1400275b1:	push   r13
   1400275b3:	rex.R (bad) 
   1400275b5:	je     0x140027618
   1400275b7:	rex xor DWORD PTR [rax+0x48],eax
   1400275bb:	rex pop rdx
   1400275bd:	add    BYTE PTR [rdx],dl
   1400275bf:	or     al,0x3f
   1400275c1:	data16 jb 0x140027629
   1400275c4:	gs pop rdi
   1400275c6:	push   0x65706c65
   1400275cb:	jb     0x14002760d
   1400275cd:	push   rcx
   1400275ce:	rex.W (bad) 
   1400275d0:	jae    0x14002763a
   1400275d2:	rex.R (bad) 
   1400275d4:	je     0x140027637
   1400275d6:	rex
   1400275d7:	rex push rcx
   1400275d9:	rex.RB
   1400275da:	rex.B
   1400275db:	pop    r8
   1400275dd:	push   rax
   1400275de:	ss pop r8
   1400275e1:	push   rax
   1400275e2:	rex.RB
   1400275e3:	push   r13
   1400275e5:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400275e7:	fs rex xor DWORD PTR gs:[rax+0x40],eax
   1400275ed:	pop    rdx
   1400275ee:	rex pop rdx
   1400275f0:	add    BYTE PTR [rax],al
   1400275f2:	pop    rbx
   1400275f3:	or     bh,BYTE PTR [rdi]
   1400275f5:	fs gs je 0x14002765a
   1400275f9:	movsxd ebp,DWORD PTR [rax+0x5f]
   1400275fc:	addr32 jb 0x14002766e
   1400275ff:	ja     0x140027641
   140027601:	push   rcx
   140027602:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   14002760a:	rex
   14002760b:	rex push rcx
   14002760d:	rex.RB
   14002760e:	rex.B
   14002760f:	push   r8
   140027611:	rex.RB
   140027612:	push   r13
   140027614:	rex.R (bad) 
   140027616:	je     0x140027679
   140027618:	rex xor DWORD PTR [rax+0x50],eax
   14002761c:	rex.RB
   14002761d:	rex.B
   14002761e:	rex.W
   14002761f:	rex.W
   140027620:	rex pop rdx
   140027622:	add    BYTE PTR [rax],al
   140027624:	mov    BYTE PTR [rsi],0x3f
   140027627:	(bad)  
   140027628:	jo     0x14002769a
   14002762a:	outs   dx,BYTE PTR gs:[rsi]
   14002762c:	fs rex push rcx
   14002762f:	imul   r14,QWORD PTR [rbx+0x74],0x61746144
   140027637:	rex
   140027638:	rex push rcx
   14002763a:	rex.RB
   14002763b:	rex.B
   14002763c:	push   r8
   14002763e:	rex.RB
   14002763f:	push   r8
   140027641:	rex.RB
   140027642:	pop    r8
   140027644:	pop    rax
   140027645:	pop    rdx
   140027646:	add    BYTE PTR [rax],al
   140027648:	sti    
   140027649:	add    bh,BYTE PTR [rdi]
   14002764b:	(bad)  
   14002764c:	xor    DWORD PTR [rcx+0x58],edx
   14002764f:	ins    DWORD PTR es:[rdi],dx
   140027650:	ins    BYTE PTR es:[rdi],dx
   140027651:	push   rbx
   140027652:	je     0x1400276c6
   140027654:	gs (bad) 
   140027656:	ins    DWORD PTR es:[rdi],dx
   140027657:	push   rdi
   140027658:	jb     0x1400276c3
   14002765a:	je     0x1400276c1
   14002765c:	jb     0x14002769e
   14002765e:	rex push rcx
   140027660:	rex.RB
   140027661:	rex.B
   140027662:	rex.B
   140027663:	rex pop rax
   140027665:	pop    rdx
   140027666:	add    BYTE PTR [rax],al
   140027668:	add    bh,BYTE PTR cs:[rdi]
   14002766b:	(bad)  
   14002766c:	xor    BYTE PTR [rcx+0x58],dl
   14002766f:	ins    DWORD PTR es:[rdi],dx
   140027670:	ins    BYTE PTR es:[rdi],dx
   140027671:	push   rbx
   140027672:	je     0x1400276e6
   140027674:	gs (bad) 
   140027676:	ins    DWORD PTR es:[rdi],dx
   140027677:	push   rdx
   140027678:	gs (bad) 
   14002767a:	fs gs jb 0x1400276be
   14002767e:	rex push rcx
   140027680:	rex.RB
   140027681:	rex.B
   140027682:	rex.B
   140027683:	rex pop rax
   140027685:	pop    rdx
   140027686:	add    BYTE PTR [rax],al
   140027688:	stc    
   140027689:	add    bh,BYTE PTR [rdi]
   14002768b:	(bad)  
   14002768c:	xor    DWORD PTR [rcx+0x58],edx
   14002768f:	ins    DWORD PTR es:[rdi],dx
   140027690:	ins    BYTE PTR es:[rdi],dx
   140027691:	push   rbx
   140027692:	je     0x140027706
   140027694:	gs (bad) 
   140027696:	ins    DWORD PTR es:[rdi],dx
   140027697:	push   rdx
   140027698:	gs (bad) 
   14002769a:	fs gs jb 0x1400276de
   14002769e:	rex push rcx
   1400276a0:	rex.RB
   1400276a1:	rex.B
   1400276a2:	rex.B
   1400276a3:	rex pop rax
   1400276a5:	pop    rdx
   1400276a6:	add    BYTE PTR [rax],al
   1400276a8:	ins    BYTE PTR es:[rdi],dx
   1400276a9:	or     eax,0x736e693f
   1400276ae:	je     0x140027711
   1400276b0:	ins    BYTE PTR es:[rdi],dx
   1400276b1:	ins    BYTE PTR es:[rdi],dx
   1400276b2:	rex.RB jbe 0x14002771a
   1400276b5:	outs   dx,BYTE PTR ds:[rsi]
   1400276b6:	je     0x1400276fe
   1400276b8:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x4f514072
   1400276c0:	(bad)  
   1400276c1:	push   0x65
   1400276c3:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400276c7:	push   rcx
   1400276c8:	rex.RB
   1400276c9:	rex.B
   1400276ca:	pop    r8
   1400276cc:	push   rax
   1400276cd:	rex.RB
   1400276ce:	push   r14
   1400276d0:	xor    DWORD PTR [rax+0x40],eax
   1400276d3:	pop    rdx
   1400276d4:	add    BYTE PTR [rax],al
   1400276d6:	(bad)  
   1400276d7:	adc    eax,0x6c65733f
   1400276dc:	rex push cx
   1400276df:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400276e1:	jb     0x140027748
   1400276e3:	rex.B jo 0x140027756
   1400276e6:	ins    BYTE PTR es:[rdi],dx
   1400276e7:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400276ee:	rex
   1400276ef:	xor    BYTE PTR [rax+0x45],dl
   1400276f3:	push   r14
   1400276f5:	xor    DWORD PTR [rax+0x45],eax
   1400276f8:	add    BYTE PTR [r10+0x2],cl
   1400276fc:	(bad)  
   1400276fd:	(bad)  
   1400276fe:	xor    DWORD PTR [rbx+0x6f],eax
   140027701:	outs   dx,BYTE PTR ds:[rsi]
   140027702:	outs   dx,BYTE PTR ds:[rsi]
   140027703:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140027708:	outs   dx,BYTE PTR ds:[rsi]
   140027709:	rex push rcx
   14002770b:	rex.WRB
   14002770c:	gs je  0x140027770
   14002770f:	rex.WRXB (bad) 
   140027711:	push   0x65
   140027713:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027717:	push   rcx
   140027718:	rex.RB
   140027719:	rex.B
   14002771a:	rex.B
   14002771b:	rex pop rax
   14002771d:	pop    rdx
   14002771e:	add    BYTE PTR [rax],al
   140027720:	jg     0x14002772a
   140027722:	(bad)  
   140027723:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140027726:	outs   dx,BYTE PTR ds:[rsi]
   140027727:	movsxd esi,DWORD PTR gs:[rax+rax*2+0x51]
   14002772c:	rex.WRXB (bad) 
   14002772e:	push   0x65
   140027730:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027734:	push   rbx
   140027735:	rex.B (bad) 
   140027737:	push   r14
   140027739:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002773b:	outs   dx,BYTE PTR ds:[rsi]
   14002773c:	outs   dx,BYTE PTR ds:[rsi]
   14002773d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140027742:	outs   dx,BYTE PTR ds:[rsi]
   140027743:	rex push rcx
   140027745:	rex.WRB
   140027746:	gs je  0x1400277aa
   140027749:	rex.WRXB (bad) 
   14002774b:	push   0x65
   14002774d:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027751:	push   rax
   140027752:	rex.RB
   140027753:	rex.X push rsi
   140027755:	xor    DWORD PTR [rax+0x50],eax
   140027758:	rex.RB
   140027759:	rex.X
   14002775a:	xor    BYTE PTR [rcx],r14b
   14002775d:	push   rdi
   14002775e:	xor    al,0x43
   140027760:	outs   dx,DWORD PTR ds:[rsi]
   140027761:	outs   dx,BYTE PTR ds:[rsi]
   140027762:	outs   dx,BYTE PTR ds:[rsi]
   140027763:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140027768:	outs   dx,BYTE PTR ds:[rsi]
   140027769:	push   rsp
   14002776a:	jns    0x1400277dc
   14002776c:	gs rex push rcx
   14002776f:	je     0x1400277b1
   140027771:	rex
   140027772:	rex pop rdx
   140027774:	add    BYTE PTR [rax],al
   140027776:	rex.WB sbb BYTE PTR [r15],dil
   140027779:	je     0x1400277e4
   14002777b:	ins    DWORD PTR es:[rdi],dx
   14002777c:	gs jb  0x1400277c4
   14002777f:	jbe    0x1400277e6
   140027781:	outs   dx,BYTE PTR ds:[rsi]
   140027782:	je     0x1400277c4
   140027784:	push   rcx
   140027785:	rex.WRXB (bad) 
   140027787:	push   0x65
   140027789:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14002778d:	rex.WRB
   14002778e:	rex.RB
   14002778f:	rex.B
   140027790:	pop    r8
   140027792:	push   rax
   140027793:	rex.RB
   140027794:	push   r14
   140027796:	push   rcx
   140027797:	push   rsp
   140027798:	imul   ebp,DWORD PTR [rbp+0x65],0x65764572
   14002779f:	outs   dx,BYTE PTR ds:[rsi]
   1400277a0:	je     0x1400277e2
   1400277a2:	rex
   1400277a3:	rex pop rdx
   1400277a5:	add    bh,ah
   1400277a7:	(bad)  
   1400277a8:	(bad)  
   1400277a9:	movsxd ebp,DWORD PTR [rax+0x69]
   1400277ac:	ins    BYTE PTR es:[rdi],dx
   1400277ad:	fs rex.RB jbe 0x140027816
   1400277b1:	outs   dx,BYTE PTR ds:[rsi]
   1400277b2:	je     0x1400277f4
   1400277b4:	push   rcx
   1400277b5:	rex.WRXB (bad) 
   1400277b7:	push   0x65
   1400277b9:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400277bd:	rex.WRB
   1400277be:	rex.RB
   1400277bf:	rex.B
   1400277c0:	pop    r8
   1400277c2:	push   rax
   1400277c3:	rex.RB
   1400277c4:	push   r14
   1400277c6:	push   rcx
   1400277c7:	rex.XB push 0x45646c69
   1400277cd:	jbe    0x140027834
   1400277cf:	outs   dx,BYTE PTR ds:[rsi]
   1400277d0:	je     0x140027812
   1400277d2:	rex
   1400277d3:	rex pop rdx
   1400277d5:	add    BYTE PTR [rsi+0x9],ah
   1400277d8:	(bad)  
   1400277d9:	movsxd esi,DWORD PTR [rbp+0x73]
   1400277dc:	je     0x14002784d
   1400277de:	ins    DWORD PTR es:[rdi],dx
   1400277df:	rex.RB jbe 0x140027847
   1400277e2:	outs   dx,BYTE PTR ds:[rsi]
   1400277e3:	je     0x140027825
   1400277e5:	push   rcx
   1400277e6:	rex.WRXB (bad) 
   1400277e8:	push   0x65
   1400277ea:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400277ee:	rex.WRB
   1400277ef:	rex.RB
   1400277f0:	rex.B
   1400277f1:	pop    r8
   1400277f3:	push   rax
   1400277f4:	rex.RB
   1400277f5:	push   r14
   1400277f7:	push   rcx
   1400277f8:	rex.RB jbe 0x140027860
   1400277fb:	outs   dx,BYTE PTR ds:[rsi]
   1400277fc:	je     0x14002783e
   1400277fe:	rex
   1400277ff:	rex pop rdx
   140027801:	add    BYTE PTR [rbp+0x6f633f08],al
   140027807:	outs   dx,BYTE PTR ds:[rsi]
   140027808:	outs   dx,BYTE PTR ds:[rsi]
   140027809:	movsxd esi,DWORD PTR gs:[rsi+rcx*2+0x6f]
   14002780e:	je     0x140027879
   140027810:	data16 jns 0x140027853
   140027813:	push   rcx
   140027814:	rex.WRXB (bad) 
   140027816:	push   0x65
   140027818:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14002781c:	rex.WRB
   14002781d:	rex.RB
   14002781e:	rex.B
   14002781f:	pop    r8
   140027821:	rex.B
   140027822:	rex.RB
   140027823:	rex.X push rsi
   140027825:	push   rcx
   140027826:	rex.WRB
   140027827:	gs je  0x14002788b
   14002782a:	rex.WRB
   14002782b:	gs je  0x140027896
   14002782e:	outs   dx,DWORD PTR ds:[rsi]
   14002782f:	fs rex
   140027831:	rex
   140027832:	rex pop rdx
   140027834:	add    BYTE PTR [rax],al
   140027836:	jge    0x140027842
   140027838:	(bad)  
   140027839:	imul   esi,DWORD PTR fs:[rbx+0x63],0x656e6e6f
   140027841:	movsxd esi,DWORD PTR [rsi+rcx*2+0x6f]
   140027845:	je     0x1400278b0
   140027847:	data16 jns 0x14002788a
   14002784a:	push   rcx
   14002784b:	rex.WRXB (bad) 
   14002784d:	push   0x65
   14002784f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027853:	rex.WRB
   140027854:	rex.RB
   140027855:	rex.B
   140027856:	pop    r8
   140027858:	rex.B
   140027859:	rex.RB
   14002785a:	rex.X push rsi
   14002785c:	push   rcx
   14002785d:	rex.WRB
   14002785e:	gs je  0x1400278c2
   140027861:	rex.WRB
   140027862:	gs je  0x1400278cd
   140027865:	outs   dx,DWORD PTR ds:[rsi]
   140027866:	fs rex
   140027868:	rex
   140027869:	rex pop rdx
   14002786b:	add    bl,dh
   14002786d:	(bad)  
   14002786e:	(bad)  
   14002786f:	jae    0x1400278da
   140027871:	outs   dx,BYTE PTR ds:[rsi]
   140027872:	ins    BYTE PTR es:[edi],dx
   140027874:	gs push rbx
   140027876:	push   0x5140746f
   14002787b:	push   rsp
   14002787c:	imul   ebp,DWORD PTR [rbp+0x65],0x53404072
   140027883:	pop    r8
   140027885:	rex.W push rax
   140027887:	rex.RB
   140027888:	rex.X push rsi
   14002788a:	push   rcx
   14002788b:	rex.WRXB (bad) 
   14002788d:	push   0x65
   14002788f:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027893:	push   rax
   140027894:	rex.RB
   140027895:	rex.X
   140027896:	rex.R
   140027897:	rex pop rdx
   140027899:	add    BYTE PTR [rcx+0x2],bh
   14002789c:	(bad)  
   14002789d:	(bad)  
   14002789e:	xor    DWORD PTR [rcx+0x44],edx
   1400278a1:	imul   esi,DWORD PTR [rdx+0x40],0x41455140
   1400278a8:	rex.B
   1400278a9:	rex pop rax
   1400278ab:	pop    rdx
   1400278ac:	add    BYTE PTR [rax],al
   1400278ae:	adc    eax,0x6e653f0b
   1400278b3:	je     0x140027927
   1400278b5:	jns    0x140027903
   1400278b7:	imul   esi,DWORD PTR [rbx+0x74],0x69445140
   1400278be:	jb     0x140027900
   1400278c0:	rex push rcx
   1400278c2:	rex.RB
   1400278c3:	rex.X
   1400278c4:	rex.B (bad) 
   1400278c6:	push   r14
   1400278c8:	push   rcx
   1400278c9:	push   rbx
   1400278ca:	je     0x14002793e
   1400278cc:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   1400278d3:	rex
   1400278d4:	rex
   1400278d5:	rex.B
   1400278d6:	rex.RB
   1400278d7:	rex.X push rsi
   1400278d9:	xor    al,BYTE PTR [rax+0x56]
   1400278dc:	(bad)  
   1400278dd:	and    al,0x51
   1400278df:	rex.RX ins BYTE PTR es:[rdi],dx
   1400278e1:	(bad)  
   1400278e2:	addr32 jae 0x140027925
   1400278e5:	push   rdi
   1400278e6:	xor    al,0x46
   1400278e8:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x44514072
   1400278f0:	imul   esi,DWORD PTR [rdx+0x40],0x56404040
   1400278f7:	(bad)  
   1400278f8:	and    al,0x51
   1400278fa:	rex.RX ins BYTE PTR es:[rdi],dx
   1400278fc:	(bad)  
   1400278fd:	addr32 jae 0x140027940
   140027900:	push   rdi
   140027901:	xor    al,0x53
   140027903:	outs   dx,DWORD PTR ds:[rsi]
   140027904:	jb     0x14002797a
   140027906:	rex.RX ins BYTE PTR es:[rdi],dx
   140027908:	(bad)  
   140027909:	addr32 rex push rcx
   14002790c:	imul   r14d,DWORD PTR [rdx+0x40],0x40404040
   140027914:	pop    rdx
   140027915:	add    ch,cl
   140027917:	(bad)  
   140027918:	(bad)  
   140027919:	(bad)  
   14002791a:	jo     0x14002798c
   14002791c:	outs   dx,BYTE PTR gs:[rsi]
   14002791e:	fs rex push rcx
   140027921:	push   rbx
   140027922:	je     0x140027996
   140027924:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002792b:	rex.B
   14002792c:	rex.B
   14002792d:	rex.B
   14002792e:	rex.RB
   14002792f:	push   r14
   140027931:	xor    DWORD PTR [rax+0x56],eax
   140027934:	push   rcx
   140027935:	rex.XB push 0x40407261
   14002793b:	rex pop rdx
   14002793d:	add    BYTE PTR [rdi+0x0],dl
   140027940:	(bad)  
   140027941:	(bad)  
   140027942:	xor    BYTE PTR [rcx+0x43],dl
   140027945:	push   0x40407261
   14002794a:	push   rcx
   14002794b:	rex.RB
   14002794c:	rex.B
   14002794d:	rex.B
   14002794e:	rex push rbp
   140027950:	push   rcx
   140027951:	rex.WR (bad) 
   140027953:	je     0x1400279be
   140027955:	outs   dx,BYTE PTR ds:[rsi]
   140027956:	xor    DWORD PTR [rbx+0x68],eax
   140027959:	(bad)  
   14002795a:	jb     0x14002799c
   14002795c:	rex
   14002795d:	rex pop rdx
   14002795f:	add    BYTE PTR [rcx+0x65723f13],dh
   140027965:	ins    BYTE PTR es:[rdi],dx
   140027966:	(bad)  
   140027967:	je     0x1400279d2
   140027969:	jbe    0x1400279d0
   14002796b:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x40687461
   140027974:	push   rcx
   140027975:	imul   r14d,DWORD PTR [rdx+0x40],0x42455140
   14002797d:	rex.B (bad) 
   14002797f:	push   r14
   140027981:	push   rcx
   140027982:	push   rbx
   140027983:	je     0x1400279f7
   140027985:	imul   ebp,DWORD PTR [rsi+0x67],0x45414040
   14002798c:	rex.X push rsi
   14002798e:	xor    al,BYTE PTR [rax+0x40]
   140027991:	pop    rdx
   140027992:	add    BYTE PTR [rax],al
   140027994:	(bad)  
   140027995:	(bad)  
   140027996:	(bad)  
   140027997:	(bad)  
   140027998:	(bad)
   14002799d:	je     0x140027a04
   14002799f:	push   rax
   1400279a0:	(bad)  
   1400279a1:	je     0x140027a0b
   1400279a3:	rex push rcx
   1400279a5:	imul   r14d,DWORD PTR [rdx+0x40],0x42455140
   1400279ad:	rex.B (bad) 
   1400279af:	push   r14
   1400279b1:	push   rcx
   1400279b2:	push   rbx
   1400279b3:	je     0x140027a27
   1400279b5:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   1400279bc:	add    BYTE PTR [rax],al
   1400279be:	mov    BYTE PTR [rax],al
   1400279c0:	(bad)  
   1400279c1:	(bad)  
   1400279c2:	xor    BYTE PTR [rcx+0x44],dl
   1400279c5:	imul   esi,DWORD PTR [rdx+0x40],0x41455140
   1400279cc:	rex.B
   1400279cd:	rex
   1400279ce:	rex.B
   1400279cf:	rex.RB
   1400279d0:	rex.X push rsi
   1400279d2:	push   rcx
   1400279d3:	push   rbx
   1400279d4:	je     0x140027a48
   1400279d6:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400279dd:	add    BYTE PTR [rdi],bl
   1400279df:	adc    eax,0x7065733f
   1400279e4:	(bad)  
   1400279e5:	jb     0x140027a48
   1400279e7:	je     0x140027a58
   1400279e9:	jb     0x140027a2b
   1400279eb:	push   rcx
   1400279ec:	imul   r14d,DWORD PTR [rdx+0x40],0x3f415340
   1400279f4:	push   r14
   1400279f6:	push   rcx
   1400279f7:	rex.XB push 0x40407261
   1400279fd:	pop    rax
   1400279fe:	pop    rdx
   1400279ff:	add    BYTE PTR [rdi+0x303f3f01],dl
   140027a05:	push   rcx
   140027a06:	push   rbx
   140027a07:	je     0x140027a7b
   140027a09:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027a10:	rex.B
   140027a11:	rex.B
   140027a12:	rex pop rax
   140027a14:	pop    rdx
   140027a15:	add    BYTE PTR [rcx+0x18],ah
   140027a18:	(bad)  
   140027a19:	je     0x140027a8a
   140027a1b:	rex.X outs dx,DWORD PTR ds:[rsi]
   140027a1d:	outs   dx,DWORD PTR ds:[rsi]
   140027a1e:	ins    BYTE PTR es:[rdi],dx
   140027a1f:	rex push rcx
   140027a21:	push   rsi
   140027a22:	(bad)  
   140027a23:	jb     0x140027a8e
   140027a25:	(bad)  
   140027a26:	outs   dx,BYTE PTR ds:[rsi]
   140027a27:	je     0x140027a69
   140027a29:	rex push rcx
   140027a2b:	rex.RB
   140027a2c:	rex.X
   140027a2d:	pop    r15
   140027a2f:	rex.WRX pop rax
   140027a31:	pop    rdx
   140027a32:	add    BYTE PTR [rax],al
   140027a34:	in     eax,0x6
   140027a36:	(bad)  
   140027a37:	(bad)  
   140027a38:	jb     0x140027aa1
   140027a3a:	rex push rcx
   140027a3c:	push   rbx
   140027a3d:	je     0x140027ab1
   140027a3f:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027a46:	rex.X
   140027a47:	rex.B (bad) 
   140027a49:	push   r14
   140027a4b:	xor    DWORD PTR [rax+0x41],eax
   140027a4e:	rex.RB
   140027a4f:	rex.X push rsi
   140027a51:	xor    DWORD PTR [rax+0x48],eax
   140027a54:	push   rsi
   140027a55:	push   rcx
   140027a56:	rex.XB push 0x40407261
   140027a5c:	rex pop rdx
   140027a5e:	add    BYTE PTR [rax],al
   140027a60:	stos   DWORD PTR es:[rdi],eax
   140027a61:	or     edi,DWORD PTR [rdi]
   140027a63:	imul   bp,WORD PTR [rbp+riz*2+0x4e],0x6d61
   140027a6a:	gs rex push rcx
   140027a6d:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   140027a76:	rex push rcx
   140027a78:	rex.RB
   140027a79:	rex.X
   140027a7a:	rex.B (bad) 
   140027a7c:	push   r14
   140027a7e:	push   rcx
   140027a7f:	push   rbx
   140027a80:	je     0x140027af4
   140027a82:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140027a89:	add    al,dh
   140027a8b:	sbb    DWORD PTR [rdi],edi
   140027a8d:	je     0x140027b01
   140027a8f:	(bad)  
   140027a90:	outs   dx,BYTE PTR ds:[rsi]
   140027a91:	jae    0x140027aff
   140027a93:	(bad)  
   140027a94:	je     0x140027afb
   140027a96:	rex push rcx
   140027a98:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140027a9a:	jb     0x140027b01
   140027a9c:	rex.B jo 0x140027b0f
   140027a9f:	ins    BYTE PTR es:[rdi],dx
   140027aa0:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140027aa7:	rex
   140027aa8:	rex push rbx
   140027aaa:	rex.B (bad) 
   140027aac:	push   r14
   140027aae:	push   rcx
   140027aaf:	push   rbx
   140027ab0:	je     0x140027b24
   140027ab2:	imul   ebp,DWORD PTR [rsi+0x67],0x45504040
   140027ab9:	rex.X
   140027aba:	xor    BYTE PTR [rax],r14b
   140027abd:	rex.W
   140027abe:	rex pop rdx
   140027ac0:	add    BYTE PTR [rax],al
   140027ac2:	mov    BYTE PTR [rax],cl
   140027ac4:	(bad)  
   140027ac5:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140027ac8:	outs   dx,BYTE PTR ds:[rsi]
   140027ac9:	movsxd esi,DWORD PTR gs:[rbx+rdx*2+0x6c]
   140027ace:	outs   dx,DWORD PTR ds:[rsi]
   140027acf:	je     0x140027b44
   140027ad1:	rex.X jns 0x140027b22
   140027ad4:	(bad)  
   140027ad5:	ins    DWORD PTR es:[rdi],dx
   140027ad6:	gs rex push rcx
   140027ad9:	rex.WRB
   140027ada:	gs je  0x140027b3e
   140027add:	rex.WRXB (bad) 
   140027adf:	push   0x65
   140027ae1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027ae5:	push   rbx
   140027ae6:	pop    r8
   140027ae8:	push   rax
   140027ae9:	rex.RB
   140027aea:	push   r14
   140027aec:	push   rcx
   140027aed:	rex.WRXB (bad) 
   140027aef:	push   0x65
   140027af1:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027af5:	rex pop rdx
   140027af7:	add    BYTE PTR [rdx],dl
   140027af9:	(bad)  
   140027afa:	(bad)  
   140027afb:	jae    0x140027b62
   140027afd:	je     0x140027b4e
   140027aff:	(bad)  
   140027b00:	push   0x65
   140027b02:	movsxd esi,DWORD PTR [rsi+rcx*2+0x61]
   140027b06:	ins    DWORD PTR es:[rdi],dx
   140027b07:	gs rex push rcx
   140027b0a:	rex.WRXB (bad) 
   140027b0c:	push   0x65
   140027b0e:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027b12:	push   rcx
   140027b13:	rex.RB
   140027b14:	rex.B
   140027b15:	pop    r8
   140027b17:	rex.B
   140027b18:	rex.RB
   140027b19:	rex.X push rsi
   140027b1b:	push   rcx
   140027b1c:	push   rbx
   140027b1d:	je     0x140027b91
   140027b1f:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140027b26:	add    BYTE PTR [rax],al
   140027b28:	pop    rax
   140027b29:	or     al,0x3f
   140027b2b:	data16 jb 0x140027b9d
   140027b2e:	ins    DWORD PTR es:[rdi],dx
   140027b2f:	push   rbp
   140027b30:	je     0x140027b98
   140027b32:	cmp    BYTE PTR [rax+0x51],al
   140027b35:	push   rbx
   140027b36:	je     0x140027baa
   140027b38:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   140027b3f:	(bad)  
   140027b40:	push   r14
   140027b42:	xor    DWORD PTR [rax+0x50],eax
   140027b45:	rex.RB
   140027b46:	rex.X
   140027b47:	rex.R
   140027b48:	rex.W
   140027b49:	rex pop rdx
   140027b4b:	add    BYTE PTR [rax+0xb],bl
   140027b4e:	(bad)  
   140027b4f:	gs jbe 0x140027bb7
   140027b52:	outs   dx,BYTE PTR ds:[rsi]
   140027b53:	je     0x140027b95
   140027b55:	push   rcx
   140027b56:	rex.WRXB (bad) 
   140027b58:	push   0x65
   140027b5a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027b5e:	push   rbp
   140027b5f:	rex.RB
   140027b60:	rex.B
   140027b61:	pop    r15
   140027b63:	rex.WRX push rax
   140027b65:	rex.RB
   140027b66:	push   r14
   140027b68:	push   rcx
   140027b69:	rex.RB jbe 0x140027bd1
   140027b6c:	outs   dx,BYTE PTR ds:[rsi]
   140027b6d:	je     0x140027baf
   140027b6f:	rex
   140027b70:	rex pop rdx
   140027b72:	add    BYTE PTR [rax],al
   140027b74:	push   0xb
   140027b76:	(bad)  
   140027b77:	gs jbe 0x140027bdf
   140027b7a:	outs   dx,BYTE PTR ds:[rsi]
   140027b7b:	je     0x140027bc3
   140027b7d:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x4f514072
   140027b85:	(bad)  
   140027b86:	push   0x65
   140027b88:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140027b8c:	push   rbp
   140027b8d:	rex.RB
   140027b8e:	rex.B
   140027b8f:	pop    r15
   140027b91:	rex.WRX push rax
   140027b93:	rex.RB
   140027b94:	push   r14
   140027b96:	xor    DWORD PTR [rax+0x50],eax
   140027b99:	rex.RB
   140027b9a:	push   r14
   140027b9c:	push   rcx
   140027b9d:	rex.RB jbe 0x140027c05
   140027ba0:	outs   dx,BYTE PTR ds:[rsi]
   140027ba1:	je     0x140027be3
   140027ba3:	rex
   140027ba4:	rex pop rdx
   140027ba6:	add    BYTE PTR [rax],al
   140027ba8:	mov    DWORD PTR [rdx],eax
   140027baa:	(bad)  
   140027bab:	(bad)  
   140027bac:	xor    DWORD PTR [rcx+0x46],edx
   140027baf:	imul   ebp,DWORD PTR [rbp+riz*2+0x40],0x41455540
   140027bb7:	rex.B
   140027bb8:	rex pop rax
   140027bba:	pop    rdx
   140027bbb:	add    bh,ch
   140027bbd:	(bad)  
   140027bbe:	(bad)  
   140027bbf:	(bad)  
   140027bc0:	jb     0x140027c29
   140027bc2:	rex push rcx
   140027bc4:	push   rbx
   140027bc5:	je     0x140027c39
   140027bc7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027bce:	rex.X
   140027bcf:	rex.B (bad) 
   140027bd1:	push   r14
   140027bd3:	xor    DWORD PTR [rax+0x5f],eax
   140027bd6:	rex.WX
   140027bd7:	rex.W
   140027bd8:	rex.W push rsi
   140027bda:	push   rcx
   140027bdb:	rex.XB push 0x40407261
   140027be1:	rex pop rdx
   140027be3:	add    BYTE PTR [rsi+0xf],cl
   140027be6:	(bad)  
   140027be7:	ins    BYTE PTR es:[rdi],dx
   140027be8:	imul   ebp,DWORD PTR [rsi+0x65],0x626d754e
   140027bef:	gs jb  0x140027c32
   140027bf2:	push   rcx
   140027bf3:	pop    rax
   140027bf4:	ins    DWORD PTR es:[rdi],dx
   140027bf5:	ins    BYTE PTR es:[rdi],dx
   140027bf6:	push   rbx
   140027bf7:	je     0x140027c6b
   140027bf9:	gs (bad) 
   140027bfb:	ins    DWORD PTR es:[rdi],dx
   140027bfc:	push   rdx
   140027bfd:	gs (bad) 
   140027bff:	fs gs jb 0x140027c43
   140027c03:	rex push rcx
   140027c05:	rex.RB
   140027c06:	rex.X
   140027c07:	pop    r15
   140027c09:	rex.WX pop rax
   140027c0b:	pop    rdx
   140027c0c:	add    BYTE PTR [rax],al
   140027c0e:	cmp    BYTE PTR [rbx],cl
   140027c10:	(bad)  
   140027c11:	gs jb  0x140027c86
   140027c14:	outs   dx,DWORD PTR ds:[rsi]
   140027c15:	jb     0x140027c57
   140027c17:	push   rcx
   140027c18:	pop    rax
   140027c19:	ins    DWORD PTR es:[rdi],dx
   140027c1a:	ins    BYTE PTR es:[rdi],dx
   140027c1b:	push   rbx
   140027c1c:	je     0x140027c90
   140027c1e:	gs (bad) 
   140027c20:	ins    DWORD PTR es:[rdi],dx
   140027c21:	push   rdx
   140027c22:	gs (bad) 
   140027c24:	fs gs jb 0x140027c68
   140027c28:	rex push rcx
   140027c2a:	rex.RB
   140027c2b:	rex.X
   140027c2c:	rex.B (bad) 
   140027c2e:	push   r15
   140027c30:	xor    al,0x45
   140027c32:	jb     0x140027ca6
   140027c34:	outs   dx,DWORD PTR ds:[rsi]
   140027c35:	jb     0x140027c77
   140027c37:	xor    DWORD PTR [rax+0x58],eax
   140027c3a:	pop    rdx
   140027c3b:	add    BYTE PTR [rsi+0x2],ah
   140027c3e:	(bad)  
   140027c3f:	(bad)  
   140027c40:	xor    DWORD PTR [rcx+0x42],edx
   140027c43:	jns    0x140027cb9
   140027c45:	gs rex.B jb 0x140027cbb
   140027c49:	(bad)  
   140027c4a:	jns    0x140027c8c
   140027c4c:	rex push rcx
   140027c4e:	rex.RB
   140027c4f:	rex.B
   140027c50:	rex.B
   140027c51:	rex pop rax
   140027c53:	pop    rdx
   140027c54:	add    BYTE PTR [rax],al
   140027c56:	adc    r15,QWORD PTR [rdi]
   140027c59:	jb     0x140027cc0
   140027c5b:	(bad)  
   140027c5c:	fs rex.B ins BYTE PTR es:[rdi],dx
   140027c5f:	ins    BYTE PTR es:[rdi],dx
   140027c60:	rex push rcx
   140027c62:	rex.WB
   140027c63:	rex.WRXB
   140027c64:	rex.R
   140027c65:	gs jbe 0x140027cd1
   140027c68:	movsxd esp,DWORD PTR [rbp+0x40]
   140027c6b:	rex push rcx
   140027c6d:	rex.RB
   140027c6e:	rex.B
   140027c6f:	rex.B (bad) 
   140027c71:	push   r14
   140027c73:	push   rcx
   140027c74:	rex.X jns 0x140027ceb
   140027c77:	gs rex.B jb 0x140027ced
   140027c7b:	(bad)  
   140027c7c:	jns    0x140027cbe
   140027c7e:	rex pop rax
   140027c80:	pop    rdx
   140027c81:	add    dl,ch
   140027c83:	adc    BYTE PTR [rdi],bh
   140027c85:	outs   dx,DWORD PTR ds:[rsi]
   140027c86:	jo     0x140027ced
   140027c88:	outs   dx,BYTE PTR ds:[rsi]
   140027c89:	rex push rcx
   140027c8b:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455540
   140027c94:	pop    r15
   140027c96:	rex.WRX push rsi
   140027c98:	(bad)  
   140027c99:	and    al,0x51
   140027c9b:	rex.RX ins BYTE PTR es:[rdi],dx
   140027c9d:	(bad)  
   140027c9e:	addr32 jae 0x140027ce1
   140027ca1:	push   rdi
   140027ca2:	xor    al,0x4f
   140027ca4:	jo     0x140027d0b
   140027ca6:	outs   dx,BYTE PTR ds:[rsi]
   140027ca7:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140027ca9:	fs gs rex.RX ins BYTE PTR es:[rdi],dx
   140027cad:	(bad)  
   140027cae:	addr32 rex push rcx
   140027cb1:	rex.WB
   140027cb2:	rex.WRXB
   140027cb3:	rex.R
   140027cb4:	gs jbe 0x140027d20
   140027cb7:	movsxd esp,DWORD PTR [rbp+0x40]
   140027cba:	rex
   140027cbb:	rex
   140027cbc:	rex
   140027cbd:	rex pop rdx
   140027cbf:	add    BYTE PTR [rbp+0xb],bh
   140027cc2:	(bad)  
   140027cc3:	gs js  0x140027d2f
   140027cc6:	jae    0x140027d3c
   140027cc8:	jae    0x140027d0a
   140027cca:	push   rcx
   140027ccb:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x42455140
   140027cd4:	pop    r15
   140027cd6:	rex.WRX pop rax
   140027cd8:	pop    rdx
   140027cd9:	add    BYTE PTR [rbp+0x303f3f00],ch
   140027cdf:	push   rcx
   140027ce0:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   140027ce9:	rex.B
   140027cea:	rex
   140027ceb:	rex.B
   140027cec:	rex.RB
   140027ced:	rex.X push rsi
   140027cef:	push   rcx
   140027cf0:	push   rbx
   140027cf1:	je     0x140027d65
   140027cf3:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140027cfa:	add    BYTE PTR [rax],al
   140027cfc:	or     DWORD PTR [rdx],ebx
   140027cfe:	(bad)  
   140027cff:	je     0x140027d73
   140027d01:	imul   ebp,DWORD PTR [rbp+0x6d],0x51406465
   140027d08:	push   rbx
   140027d09:	je     0x140027d7d
   140027d0b:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027d12:	rex.X
   140027d13:	rex.B (bad) 
   140027d15:	push   r14
   140027d17:	xor    DWORD PTR [rax+0x58],eax
   140027d1a:	pop    rdx
   140027d1b:	add    BYTE PTR [rsi+0x3],bh
   140027d1e:	(bad)  
   140027d1f:	(bad)  
   140027d20:	xor    al,0x51
   140027d22:	push   rbx
   140027d23:	je     0x140027d97
   140027d25:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027d2c:	rex.B
   140027d2d:	rex.B
   140027d2e:	rex.B
   140027d2f:	rex.RB
   140027d30:	push   r14
   140027d32:	xor    BYTE PTR [rax+0x41],al
   140027d35:	rex.RB
   140027d36:	rex.X push rsi
   140027d38:	xor    BYTE PTR [rax+0x40],al
   140027d3b:	pop    rdx
   140027d3c:	add    BYTE PTR [rax],al
   140027d3e:	or     ecx,DWORD PTR [rip+0x646e693f]        # 0x1a470e683
   140027d44:	gs js  0x140027d96
   140027d47:	rex push cx
   140027d4a:	push   rbx
   140027d4b:	je     0x140027dbf
   140027d4d:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027d54:	rex.X
   140027d55:	rex.B
   140027d56:	rex.W push rsi
   140027d58:	push   rcx
   140027d59:	rex.XB push 0x40407261
   140027d5f:	rex.W push rdi
   140027d61:	xor    al,0x43
   140027d63:	(bad)  
   140027d64:	jae    0x140027dcb
   140027d66:	push   rbx
   140027d67:	outs   dx,BYTE PTR gs:[rsi]
   140027d69:	jae    0x140027dd4
   140027d6b:	je     0x140027dd6
   140027d6d:	jbe    0x140027dd8
   140027d6f:	je     0x140027dea
   140027d71:	rex push rcx
   140027d73:	je     0x140027db5
   140027d75:	rex
   140027d76:	rex pop rdx
   140027d78:	add    BYTE PTR [rax],al
   140027d7a:	xchg   ebp,eax
   140027d7b:	add    DWORD PTR [rdi],edi
   140027d7d:	(bad)  
   140027d7e:	xor    BYTE PTR [rcx+0x53],dl
   140027d81:	je     0x140027df5
   140027d83:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027d8a:	rex.B
   140027d8b:	rex.B
   140027d8c:	rex push rsi
   140027d8e:	push   rcx
   140027d8f:	rex.XB push 0x40407261
   140027d95:	rex pop rdx
   140027d97:	add    BYTE PTR [rcx+0x6c613f06],ch
   140027d9d:	ins    BYTE PTR es:[rdi],dx
   140027d9e:	outs   dx,DWORD PTR ds:[rsi]
   140027d9f:	movsxd esp,DWORD PTR [rcx+0x74]
   140027da2:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   140027da5:	fs gs rex push rcx
   140027da9:	rex.W (bad) 
   140027dab:	jae    0x140027e15
   140027dad:	rex.R (bad) 
   140027daf:	je     0x140027e12
   140027db1:	rex
   140027db2:	rex push rcx
   140027db4:	rex.RB
   140027db5:	rex.B
   140027db6:	push   r8
   140027db8:	rex.RB
   140027db9:	pop    r8
   140027dbb:	rex.W
   140027dbc:	rex pop rdx
   140027dbe:	add    BYTE PTR [rax],al
   140027dc0:	pop    rsi
   140027dc1:	or     bh,BYTE PTR [rdi]
   140027dc3:	fs gs je 0x140027e28
   140027dc7:	movsxd ebp,DWORD PTR [rax+0x5f]
   140027dca:	push   0x65706c65
   140027dcf:	jb     0x140027e11
   140027dd1:	push   rcx
   140027dd2:	rex.W (bad) 
   140027dd4:	jae    0x140027e3e
   140027dd6:	rex.R (bad) 
   140027dd8:	je     0x140027e3b
   140027dda:	rex
   140027ddb:	rex push rcx
   140027ddd:	rex.RB
   140027dde:	rex.B
   140027ddf:	push   r8
   140027de1:	rex.RB
   140027de2:	push   r13
   140027de4:	xor    DWORD PTR [rax+0x50],eax
   140027de7:	ss pop r8
   140027dea:	push   rax
   140027deb:	rex.RB
   140027dec:	push   r13
   140027dee:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140027df0:	fs rex xor DWORD PTR gs:[rax+0x50],eax
   140027df6:	rex.RB
   140027df7:	pop    r8
   140027df9:	rex pop rdx
   140027dfb:	push   rax
   140027dfc:	ss pop r8
   140027dff:	xor    BYTE PTR [rax+0x5a],al
   140027e02:	rex.W
   140027e03:	rex.W
   140027e04:	rex pop rdx
   140027e06:	add    BYTE PTR [rax],al
   140027e08:	scas   al,BYTE PTR es:[rdi]
   140027e09:	adc    edi,DWORD PTR [rdi]
   140027e0b:	jb     0x140027e72
   140027e0d:	push   0x40687361
   140027e12:	push   rcx
   140027e13:	rex.W (bad) 
   140027e15:	jae    0x140027e7f
   140027e17:	rex.R (bad) 
   140027e19:	je     0x140027e7c
   140027e1b:	rex
   140027e1c:	rex push rcx
   140027e1e:	rex.RB
   140027e1f:	rex.B
   140027e20:	pop    r8
   140027e22:	rex.W
   140027e23:	rex pop rdx
   140027e25:	add    BYTE PTR [rip+0x6c633f08],cl        # 0x1ac65bd33
   140027e2b:	gs (bad) 
   140027e2d:	jb     0x140027e6f
   140027e2f:	push   rcx
   140027e30:	push   rbx
   140027e31:	je     0x140027ea5
   140027e33:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027e3a:	rex.B
   140027e3b:	pop    r8
   140027e3d:	pop    rax
   140027e3e:	pop    rdx
   140027e3f:	add    dh,bl
   140027e41:	sbb    bh,BYTE PTR [rdi]
   140027e43:	ja     0x140027eae
   140027e45:	ins    BYTE PTR es:[rdi],dx
   140027e46:	ins    BYTE PTR es:[rdi],dx
   140027e47:	rex.RXB jb 0x140027eb9
   140027e4a:	ja     0x140027e8c
   140027e4c:	push   rcx
   140027e4d:	rex.W (bad) 
   140027e4f:	jae    0x140027eb9
   140027e51:	rex.R (bad) 
   140027e53:	je     0x140027eb6
   140027e55:	rex
   140027e56:	rex push rcx
   140027e58:	rex.RB
   140027e59:	rex.B
   140027e5a:	pop    r15
   140027e5c:	rex.WRX pop rax
   140027e5e:	pop    rdx
   140027e5f:	add    BYTE PTR [rdi],ch
   140027e61:	(bad)  
   140027e62:	(bad)  
   140027e63:	jae    0x140027ed5
   140027e65:	ins    BYTE PTR es:[rdi],dx
   140027e66:	imul   esi,DWORD PTR [rax+rax*2+0x51],0x69727453
   140027e6e:	outs   dx,BYTE PTR ds:[rsi]
   140027e6f:	addr32 rex
   140027e71:	rex push rcx
   140027e73:	rex.RB
   140027e74:	rex.X
   140027e75:	rex.B (bad) 
   140027e77:	push   r14
   140027e79:	push   rcx
   140027e7a:	push   rbx
   140027e7b:	je     0x140027eef
   140027e7d:	imul   ebp,DWORD PTR [rsi+0x67],0x7473694c
   140027e84:	rex
   140027e85:	rex push rsi
   140027e87:	push   rcx
   140027e88:	rex.XB push 0x40407261
   140027e8e:	push   rdi
   140027e8f:	xor    al,0x53
   140027e91:	jo     0x140027eff
   140027e93:	imul   esi,DWORD PTR [rdx+rax*2+0x65],0x69766168
   140027e9b:	outs   dx,DWORD PTR ds:[rsi]
   140027e9c:	jb     0x140027ede
   140027e9e:	xor    DWORD PTR [rax+0x57],eax
   140027ea1:	xor    al,0x43
   140027ea3:	(bad)  
   140027ea4:	jae    0x140027f0b
   140027ea6:	push   rbx
   140027ea7:	outs   dx,BYTE PTR gs:[rsi]
   140027ea9:	jae    0x140027f14
   140027eab:	je     0x140027f16
   140027ead:	jbe    0x140027f18
   140027eaf:	je     0x140027f2a
   140027eb1:	rex push rcx
   140027eb3:	je     0x140027ef5
   140027eb5:	rex
   140027eb6:	rex pop rdx
   140027eb8:	add    BYTE PTR [rax],al
   140027eba:	(bad)
   140027ebd:	jb     0x140027f24
   140027ebf:	ins    DWORD PTR es:[rdi],dx
   140027ec0:	outs   dx,DWORD PTR ds:[rsi]
   140027ec1:	jbe    0x140027f28
   140027ec3:	rex push rcx
   140027ec5:	imul   r13d,DWORD PTR [rbp+r12*2+0x40],0x41455140
   140027ece:	pop    r15
   140027ed0:	rex.WRX pop rax
   140027ed2:	pop    rdx
   140027ed3:	add    BYTE PTR [rax+0x72703f11],cl
   140027ed9:	outs   dx,DWORD PTR ds:[rsi]
   140027eda:	movsxd esp,DWORD PTR [rbp+0x73]
   140027edd:	jae    0x140027f24
   140027edf:	jbe    0x140027f46
   140027ee1:	outs   dx,BYTE PTR ds:[rsi]
   140027ee2:	je     0x140027f57
   140027ee4:	rex push rcx
   140027ee6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140027ee8:	jb     0x140027f4f
   140027eea:	rex.B jo 0x140027f5d
   140027eed:	ins    BYTE PTR es:[rdi],dx
   140027eee:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140027ef5:	rex
   140027ef6:	rex push rbx
   140027ef8:	pop    r8
   140027efa:	push   rsi
   140027efb:	(bad)  
   140027efc:	and    al,0x51
   140027efe:	rex.RX ins BYTE PTR es:[rdi],dx
   140027f00:	(bad)  
   140027f01:	addr32 jae 0x140027f44
   140027f04:	push   rdi
   140027f05:	xor    al,0x50
   140027f07:	jb     0x140027f78
   140027f09:	movsxd esp,DWORD PTR [rbp+0x73]
   140027f0c:	jae    0x140027f53
   140027f0e:	jbe    0x140027f75
   140027f10:	outs   dx,BYTE PTR ds:[rsi]
   140027f11:	je     0x140027f86
   140027f13:	rex.RX ins BYTE PTR es:[rdi],dx
   140027f15:	(bad)  
   140027f16:	addr32 rex push rcx
   140027f19:	rex.RB jbe 0x140027f81
   140027f1c:	outs   dx,BYTE PTR ds:[rsi]
   140027f1d:	je     0x140027f6b
   140027f1f:	outs   dx,DWORD PTR ds:[rsi]
   140027f20:	outs   dx,DWORD PTR ds:[rsi]
   140027f21:	jo     0x140027f63
   140027f23:	rex
   140027f24:	rex
   140027f25:	rex
   140027f26:	rex pop rdx
   140027f28:	add    BYTE PTR [rax],al
   140027f2a:	mov    esp,0x313f3f02
   140027f2f:	push   rcx
   140027f30:	push   rdx
   140027f31:	gs addr32 rex.RB js 0x140027fa6
   140027f36:	rex
   140027f37:	rex push rcx
   140027f39:	rex.RB
   140027f3a:	rex.B
   140027f3b:	rex.B
   140027f3c:	rex pop rax
   140027f3e:	pop    rdx
   140027f3f:	add    bl,bl
   140027f41:	add    al,0x3f
   140027f43:	(bad)  
   140027f44:	push   r9
   140027f46:	push   rbx
   140027f47:	je     0x140027fbb
   140027f49:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140027f50:	rex.X
   140027f51:	rex.B (bad) 
   140027f53:	rex.X push rsi
   140027f55:	push   rcx
   140027f56:	rex.XB push 0x40407261
   140027f5c:	rex.W
   140027f5d:	rex pop rdx
   140027f5f:	add    BYTE PTR [rax+0xb],dh
   140027f62:	(bad)  
   140027f63:	gs js  0x140027fc7
   140027f66:	movsxd esi,DWORD PTR [rbp+rcx*2+0x61]
   140027f6a:	je     0x140027fcf
   140027f6c:	push   0x65525140
   140027f71:	addr32 rex.RB js 0x140027fe5
   140027f75:	rex
   140027f76:	rex push rcx
   140027f78:	rex.RB
   140027f79:	rex.X
   140027f7a:	pop    r15
   140027f7c:	rex.WRX
   140027f7d:	rex.B
   140027f7e:	rex.RB
   140027f7f:	rex.X push rsi
   140027f81:	push   rcx
   140027f82:	push   rbx
   140027f83:	je     0x140027ff7
   140027f85:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   140027f8c:	add    BYTE PTR [rax],al
   140027f8e:	push   rdi
   140027f8f:	add    DWORD PTR [rdi],edi
   140027f91:	(bad)  
   140027f92:	xor    BYTE PTR [rcx+0x52],dl
   140027f95:	gs addr32 rex.RB js 0x14002800a
   140027f9a:	rex
   140027f9b:	rex push rcx
   140027f9d:	rex.RB
   140027f9e:	rex.B
   140027f9f:	rex.B
   140027fa0:	rex
   140027fa1:	rex.B
   140027fa2:	rex.RB
   140027fa3:	rex.X push rsi
   140027fa5:	push   rcx
   140027fa6:	push   rbx
   140027fa7:	je     0x14002801b
   140027fa9:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   140027fb0:	rex.XB (bad) 
   140027fb2:	jae    0x140028019
   140027fb4:	push   rbx
   140027fb5:	outs   dx,BYTE PTR gs:[rsi]
   140027fb7:	jae    0x140028022
   140027fb9:	je     0x140028024
   140027fbb:	jbe    0x140028026
   140027fbd:	je     0x140028038
   140027fbf:	rex push rcx
   140027fc1:	je     0x140028003
   140027fc3:	rex push rdi
   140027fc5:	xor    al,0x50
   140027fc7:	(bad)  
   140027fc8:	je     0x14002803e
   140027fca:	gs jb  0x14002803b
   140027fcd:	push   rbx
   140027fce:	jns    0x14002803e
   140027fd0:	je     0x140028033
   140027fd2:	js     0x140028014
   140027fd4:	xor    BYTE PTR [rax+0x40],al
   140027fd7:	pop    rdx
   140027fd8:	add    BYTE PTR [rax],al
   140027fda:	(bad)  
   140027fdb:	or     al,0x3f
   140027fdd:	data16 jb 0x14002804f
   140027fe0:	ins    DWORD PTR es:[rdi],dx
   140027fe1:	rex.B jae 0x140028047
   140027fe4:	imul   ebp,DWORD PTR [rcx+0x5f],0x706c6568
   140027feb:	gs jb  0x14002802e
   140027fee:	push   rcx
   140027fef:	push   rbx
   140027ff0:	je     0x140028064
   140027ff2:	imul   ebp,DWORD PTR [rsi+0x67],0x41434040
   140027ff9:	push   rax
   140027ffa:	rex.RB
   140027ffb:	push   r13
   140027ffd:	(bad)  
   140027ffe:	and    al,0x51
   140028000:	push   rsp
   140028001:	jns    0x140028073
   140028003:	gs fs rex.B jb 0x14002807a
   140028008:	(bad)  
   140028009:	jns    0x14002804f
   14002800b:	(bad)  
   14002800c:	je     0x14002806f
   14002800e:	rex
   14002800f:	rex.RXB
   140028010:	rex
   140028011:	rex push rax
   140028013:	rex.RB
   140028014:	rex.X
   140028015:	rex.R
   140028016:	rex.W
   140028017:	rex pop rdx
   140028019:	add    BYTE PTR [rip+0x72633f09],bl        # 0x1b265bf28
   14002801f:	gs (bad) 
   140028021:	je     0x140028088
   140028023:	rex.R (bad) 
   140028025:	je     0x140028088
   140028027:	rex push rcx
   140028029:	rex.WRB (bad) 
   14002802b:	jo     0x140028071
   14002802d:	(bad)  
   14002802e:	je     0x140028091
   140028030:	rex.X (bad) 
   140028032:	jae    0x140028099
   140028034:	rex
   140028035:	rex push rbx
   140028037:	push   r8
   140028039:	rex.RB
   14002803a:	push   r13
   14002803c:	xor    DWORD PTR [rax+0x58],eax
   14002803f:	pop    rdx
   140028040:	add    BYTE PTR [rax],al
   140028042:	sub    ecx,DWORD PTR [rcx]
   140028044:	(bad)  
   140028045:	movsxd esi,DWORD PTR [rdx+0x65]
   140028048:	(bad)  
   140028049:	je     0x1400280b0
   14002804b:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14002804d:	fs gs rex push rcx
   140028051:	rex.WRB (bad) 
   140028053:	jo     0x140028099
   140028055:	(bad)  
   140028056:	je     0x1400280b9
   140028058:	rex.X (bad) 
   14002805a:	jae    0x1400280c1
   14002805c:	rex
   14002805d:	rex push rcx
   14002805f:	rex.RB
   140028060:	rex.B
   140028061:	push   r8
   140028063:	rex.RB
   140028064:	push   r13
   140028066:	push   rcx
   140028067:	rex.WRB (bad) 
   140028069:	jo     0x1400280b9
   14002806b:	outs   dx,DWORD PTR ds:[rsi]
   14002806c:	fs gs rex.X (bad) 
   140028070:	jae    0x1400280d7
   140028072:	rex
   140028073:	rex
   140028074:	rex.W
   140028075:	rex.W push rax
   140028077:	rex.RB
   140028078:	push   r13
   14002807a:	xor    al,BYTE PTR [rax+0x5f]
   14002807d:	rex.WRX
   14002807e:	rex pop rdx
   140028080:	add    BYTE PTR [rax],al
   140028082:	inc    DWORD PTR [rdi+rdi*1]
   140028085:	(bad)  
   140028086:	rex.WRB
   140028087:	rex pop rcx
   140028089:	pop    r15
   14002808b:	rex.WRX
   14002808c:	rex.B
   14002808d:	rex.RB
   14002808e:	rex.X push rsi
   140028090:	push   rcx
   140028091:	push   rbx
   140028092:	je     0x140028106
   140028094:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   14002809b:	pop    rdx
   14002809c:	add    BYTE PTR [rax],al
   14002809e:	jg     0x1400280b3
   1400280a0:	(bad)  
   1400280a1:	jb     0x140028108
   1400280a3:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400280a6:	movsxd ecx,DWORD PTR [rbp+0x6f]
   1400280a9:	jae    0x14002811f
   1400280ab:	rex.WR
   1400280ac:	gs data16 je 0x1400280fe
   1400280b0:	outs   dx,DWORD PTR ds:[rsi]
   1400280b1:	fs gs rex push rcx
   1400280b5:	rex.WRB (bad) 
   1400280b7:	jo     0x1400280fd
   1400280b9:	(bad)  
   1400280ba:	je     0x14002811d
   1400280bc:	rex.X (bad) 
   1400280be:	jae    0x140028125
   1400280c0:	rex
   1400280c1:	rex push rcx
   1400280c3:	rex.RB
   1400280c4:	rex.B
   1400280c5:	pop    r8
   1400280c7:	pop    rax
   1400280c8:	pop    rdx
   1400280c9:	add    BYTE PTR [rax],dh
   1400280cb:	adc    edi,DWORD PTR [rdi]
   1400280cd:	jb     0x140028130
   1400280cf:	imul   esi,DWORD PTR [rbx+0x65],0x6f727245
   1400280d6:	jb     0x140028118
   1400280d8:	push   rcx
   1400280d9:	pop    rax
   1400280da:	ins    DWORD PTR es:[rdi],dx
   1400280db:	ins    BYTE PTR es:[rdi],dx
   1400280dc:	push   rbx
   1400280dd:	je     0x140028151
   1400280df:	gs (bad) 
   1400280e1:	ins    DWORD PTR es:[rdi],dx
   1400280e2:	push   rdx
   1400280e3:	gs (bad) 
   1400280e5:	fs gs jb 0x140028129
   1400280e9:	rex push rcx
   1400280eb:	rex.RB
   1400280ec:	rex.B
   1400280ed:	pop    r8
   1400280ef:	rex.B
   1400280f0:	rex.RB
   1400280f1:	rex.X push rsi
   1400280f3:	push   rcx
   1400280f4:	push   rbx
   1400280f5:	je     0x140028169
   1400280f7:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400280fe:	add    BYTE PTR [rax],al
   140028100:	push   rdi
   140028101:	adc    edi,DWORD PTR [rdi]
   140028103:	jb     0x14002816a
   140028105:	(bad)  
   140028106:	fs rex.RB ins BYTE PTR es:[rdi],dx
   140028109:	gs ins DWORD PTR es:[rdi],dx
   14002810b:	outs   dx,BYTE PTR gs:[rsi]
   14002810d:	je     0x140028163
   14002810f:	gs js  0x140028186
   140028112:	rex push rcx
   140028114:	pop    rax
   140028115:	ins    DWORD PTR es:[rdi],dx
   140028116:	ins    BYTE PTR es:[rdi],dx
   140028117:	push   rbx
   140028118:	je     0x14002818c
   14002811a:	gs (bad) 
   14002811c:	ins    DWORD PTR es:[rdi],dx
   14002811d:	push   rdx
   14002811e:	gs (bad) 
   140028120:	fs gs jb 0x140028164
   140028124:	rex push rcx
   140028126:	rex.RB
   140028127:	rex.B
   140028128:	rex.B (bad) 
   14002812a:	push   r14
   14002812c:	push   rcx
   14002812d:	push   rbx
   14002812e:	je     0x1400281a2
   140028130:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   140028137:	push   rdx
   140028138:	gs (bad) 
   14002813a:	fs rex.RB ins BYTE PTR es:[rdi],dx
   14002813d:	gs ins DWORD PTR es:[rdi],dx
   14002813f:	outs   dx,BYTE PTR gs:[rsi]
   140028141:	je     0x140028197
   140028143:	gs js  0x1400281ba
   140028146:	rex.X
   140028147:	gs push 0x6f697661
   14002814d:	jne    0x1400281c1
   14002814f:	rex xor DWORD PTR [rax+0x40],eax
   140028153:	pop    rdx
   140028154:	add    BYTE PTR [rax],al
   140028156:	hlt    
   140028157:	add    bh,BYTE PTR [rdi]
   140028159:	(bad)  
   14002815a:	xor    DWORD PTR [rcx+0x58],edx
   14002815d:	ins    DWORD PTR es:[rdi],dx
   14002815e:	ins    BYTE PTR es:[rdi],dx
   14002815f:	push   rbx
   140028160:	je     0x1400281d4
   140028162:	gs (bad) 
   140028164:	ins    DWORD PTR es:[rdi],dx
   140028165:	rex.B je 0x1400281dc
   140028168:	jb     0x1400281d3
   14002816a:	(bad)  
   14002816b:	jne    0x1400281e1
   14002816d:	gs jae 0x1400281b0
   140028170:	rex push rcx
   140028172:	rex.RB
   140028173:	rex.B
   140028174:	rex.B
   140028175:	rex pop rax
   140028177:	pop    rdx
   140028178:	add    BYTE PTR [rax],al
   14002817a:	movabs al,ds:0x4065756c61763f1a
   140028183:	push   rcx
   140028184:	pop    rax
   140028185:	ins    DWORD PTR es:[rdi],dx
   140028186:	ins    BYTE PTR es:[rdi],dx
   140028187:	push   rbx
   140028188:	je     0x1400281fc
   14002818a:	gs (bad) 
   14002818c:	ins    DWORD PTR es:[rdi],dx
   14002818d:	rex.B je 0x140028204
   140028190:	jb     0x1400281fb
   140028192:	(bad)  
   140028193:	jne    0x140028209
   140028195:	gs jae 0x1400281d8
   140028198:	rex push rcx
   14002819a:	rex.RB
   14002819b:	rex.X
   14002819c:	rex.B (bad) 
   14002819e:	push   r14
   1400281a0:	push   rcx
   1400281a1:	push   rbx
   1400281a2:	je     0x140028216
   1400281a4:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   1400281ab:	rex push rsi
   1400281ad:	push   rcx
   1400281ae:	rex.WR (bad) 
   1400281b0:	je     0x14002821b
   1400281b2:	outs   dx,BYTE PTR ds:[rsi]
   1400281b3:	xor    DWORD PTR [rbx+0x74],edx
   1400281b6:	jb     0x140028221
   1400281b8:	outs   dx,BYTE PTR ds:[rsi]
   1400281b9:	addr32 rex
   1400281bb:	rex
   1400281bc:	rex pop rdx
   1400281be:	add    BYTE PTR [rax],al
   1400281c0:	sysret 
   1400281c2:	(bad)  
   1400281c3:	(bad)  
   1400281c4:	je     0x14002823a
   1400281c6:	jb     0x140028231
   1400281c8:	(bad)  
   1400281c9:	jne    0x14002823f
   1400281cb:	gs jae 0x14002820e
   1400281ce:	push   rcx
   1400281cf:	pop    rax
   1400281d0:	ins    DWORD PTR es:[rdi],dx
   1400281d1:	ins    BYTE PTR es:[rdi],dx
   1400281d2:	push   rbx
   1400281d3:	je     0x140028247
   1400281d5:	gs (bad) 
   1400281d7:	ins    DWORD PTR es:[rdi],dx
   1400281d8:	push   rdx
   1400281d9:	gs (bad) 
   1400281db:	fs gs jb 0x14002821f
   1400281df:	rex push rcx
   1400281e1:	rex.RB
   1400281e2:	rex.X
   1400281e3:	rex.B (bad) 
   1400281e5:	push   r14
   1400281e7:	push   rcx
   1400281e8:	pop    rax
   1400281e9:	ins    DWORD PTR es:[rdi],dx
   1400281ea:	ins    BYTE PTR es:[rdi],dx
   1400281eb:	push   rbx
   1400281ec:	je     0x140028260
   1400281ee:	gs (bad) 
   1400281f0:	ins    DWORD PTR es:[rdi],dx
   1400281f1:	rex.B je 0x140028268
   1400281f4:	jb     0x14002825f
   1400281f6:	(bad)  
   1400281f7:	jne    0x14002826d
   1400281f9:	gs jae 0x14002823c
   1400281fc:	rex pop rax
   1400281fe:	pop    rdx
   1400281ff:	add    BYTE PTR [rdx+0x383f3f04],al
   140028205:	push   rcx
   140028206:	push   rbx
   140028207:	je     0x14002827b
   140028209:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028210:	rex.X
   140028211:	pop    r15
   140028213:	rex.WRX push rsi
   140028215:	push   rcx
   140028216:	rex.WR (bad) 
   140028218:	je     0x140028283
   14002821a:	outs   dx,BYTE PTR ds:[rsi]
   14002821b:	xor    DWORD PTR [rbx+0x74],edx
   14002821e:	jb     0x140028289
   140028220:	outs   dx,BYTE PTR ds:[rsi]
   140028221:	addr32 rex
   140028223:	rex
   140028224:	rex pop rdx
   140028226:	add    BYTE PTR [rax],al
   140028228:	(bad)  
   140028229:	sbb    BYTE PTR [rdi],bh
   14002822b:	je     0x14002829c
   14002822d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14002822f:	ja     0x140028296
   140028231:	jb     0x140028273
   140028233:	push   rcx
   140028234:	push   rbx
   140028235:	je     0x1400282a9
   140028237:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   14002823e:	rex.X
   14002823f:	rex.B (bad) 
   140028241:	push   r14
   140028243:	xor    DWORD PTR [rax+0x58],eax
   140028246:	pop    rdx
   140028247:	add    BYTE PTR [rcx],dl
   140028249:	sbb    DWORD PTR [rdi],edi
   14002824b:	je     0x1400282bc
   14002824d:	push   rbx
   14002824e:	je     0x1400282c2
   140028250:	imul   ebp,DWORD PTR [rsi+0x67],0x74535140
   140028257:	jb     0x1400282c2
   140028259:	outs   dx,BYTE PTR ds:[rsi]
   14002825a:	addr32 push rdx
   14002825c:	gs data16 rex
   14002825f:	rex push rcx
   140028261:	rex.RB
   140028262:	rex.X
   140028263:	rex.B (bad) 
   140028265:	push   r14
   140028267:	push   rcx
   140028268:	push   rbx
   140028269:	je     0x1400282dd
   14002826b:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   140028272:	add    BYTE PTR [rax],al
   140028274:	jl     0x140028286
   140028276:	(bad)  
   140028277:	outs   dx,BYTE PTR ds:[rsi]
   140028278:	(bad)  
   140028279:	ins    DWORD PTR es:[rdi],dx
   14002827a:	gs rex push rcx
   14002827d:	pop    rax
   14002827e:	ins    DWORD PTR es:[rdi],dx
   14002827f:	ins    BYTE PTR es:[rdi],dx
   140028280:	push   rbx
   140028281:	je     0x1400282f5
   140028283:	gs (bad) 
   140028285:	ins    DWORD PTR es:[rdi],dx
   140028286:	push   rdx
   140028287:	gs (bad) 
   140028289:	fs gs jb 0x1400282cd
   14002828d:	rex push rcx
   14002828f:	rex.RB
   140028290:	rex.X
   140028291:	rex.B (bad) 
   140028293:	push   r14
   140028295:	push   rcx
   140028296:	push   rbx
   140028297:	je     0x14002830b
   140028299:	imul   ebp,DWORD PTR [rsi+0x67],0x40666552
   1400282a0:	rex pop rax
   1400282a2:	pop    rdx
   1400282a3:	add    BYTE PTR [rcx+0x19],ah
   1400282a6:	(bad)  
   1400282a7:	je     0x140028318
   1400282a9:	imul   esp,DWORD PTR [rbp+0x6e],0x54
   1400282ad:	jns    0x14002831f
   1400282af:	gs rex push rcx
   1400282b2:	pop    rax
   1400282b3:	ins    DWORD PTR es:[rdi],dx
   1400282b4:	ins    BYTE PTR es:[rdi],dx
   1400282b5:	push   rbx
   1400282b6:	je     0x14002832a
   1400282b8:	gs (bad) 
   1400282ba:	ins    DWORD PTR es:[rdi],dx
   1400282bb:	push   rdx
   1400282bc:	gs (bad) 
   1400282be:	fs gs jb 0x140028302
   1400282c2:	rex push rcx
   1400282c4:	rex.RB
   1400282c5:	rex.X
   1400282c6:	rex.B (bad) 
   1400282c8:	push   r15
   1400282ca:	xor    al,0x54
   1400282cc:	outs   dx,DWORD PTR ds:[rsi]
   1400282cd:	imul   esp,DWORD PTR [rbp+0x6e],0x54
   1400282d1:	jns    0x140028343
   1400282d3:	rex xor DWORD PTR gs:[rax+0x58],eax
   1400282d8:	pop    rdx
   1400282d9:	add    BYTE PTR [rbp+0x13],ah
   1400282dc:	(bad)  
   1400282dd:	jb     0x140028344
   1400282df:	(bad)  
   1400282e0:	fs rex.WRX
   1400282e2:	gs js  0x140028359
   1400282e5:	rex push rcx
   1400282e7:	pop    rax
   1400282e8:	ins    DWORD PTR es:[rdi],dx
   1400282e9:	ins    BYTE PTR es:[rdi],dx
   1400282ea:	push   rbx
   1400282eb:	je     0x14002835f
   1400282ed:	gs (bad) 
   1400282ef:	ins    DWORD PTR es:[rdi],dx
   1400282f0:	push   rdx
   1400282f1:	gs (bad) 
   1400282f3:	fs gs jb 0x140028337
   1400282f7:	rex push rcx
   1400282f9:	rex.RB
   1400282fa:	rex.B
   1400282fb:	rex.B (bad) 
   1400282fd:	push   r15
   1400282ff:	xor    al,0x54
   140028301:	outs   dx,DWORD PTR ds:[rsi]
   140028302:	imul   esp,DWORD PTR [rbp+0x6e],0x54
   140028306:	jns    0x140028378
   140028308:	rex xor DWORD PTR gs:[rax+0x58],eax
   14002830d:	pop    rdx
   14002830e:	add    BYTE PTR [rax],al
   140028310:	or     al,BYTE PTR [rdi]
   140028312:	(bad)  
   140028313:	(bad)  
   140028314:	je     0x14002835b
   140028316:	outs   dx,BYTE PTR ds:[rsi]
   140028317:	fs rex push rcx
   14002831a:	pop    rax
   14002831b:	ins    DWORD PTR es:[rdi],dx
   14002831c:	ins    BYTE PTR es:[rdi],dx
   14002831d:	push   rbx
   14002831e:	je     0x140028392
   140028320:	gs (bad) 
   140028322:	ins    DWORD PTR es:[rdi],dx
   140028323:	push   rdx
   140028324:	gs (bad) 
   140028326:	fs gs jb 0x14002836a
   14002832a:	rex push rcx
   14002832c:	rex.RB
   14002832d:	rex.X
   14002832e:	pop    r15
   140028330:	rex.WRX pop rax
   140028332:	pop    rdx
   140028333:	add    BYTE PTR [rbx],bh
   140028335:	(bad)  
   140028337:	ins    BYTE PTR es:[rdi],dx
   140028338:	gs data16 je 0x14002837c
   14002833c:	push   rcx
   14002833d:	push   rbx
   14002833e:	je     0x1400283b2
   140028340:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028347:	rex.X
   140028348:	rex.B (bad) 
   14002834a:	push   r14
   14002834c:	xor    DWORD PTR [rax+0x48],eax
   14002834f:	rex pop rdx
   140028351:	add    BYTE PTR [rbx],bl
   140028353:	adc    BYTE PTR [rdi],bh
   140028355:	ins    DWORD PTR es:[rdi],dx
   140028356:	imul   esp,DWORD PTR [rax+rax*2+0x51],0x69727453
   14002835e:	outs   dx,BYTE PTR ds:[rsi]
   14002835f:	addr32 rex
   140028361:	rex push rcx
   140028363:	rex.RB
   140028364:	rex.X
   140028365:	rex.B (bad) 
   140028367:	push   r14
   140028369:	xor    DWORD PTR [rax+0x48],eax
   14002836c:	rex.W
   14002836d:	rex pop rdx
   14002836f:	add    BYTE PTR [rdx+0x17],dh
   140028372:	(bad)  
   140028373:	jae    0x1400283e9
   140028375:	(bad)  
   140028376:	jb     0x1400283ec
   140028378:	jae    0x1400283d1
   14002837a:	imul   esi,DWORD PTR [rax+rbp*2+0x40],0x72745351
   140028382:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028389:	rex.X
   14002838a:	pop    r15
   14002838c:	rex.WRX push rsi
   14002838e:	push   rcx
   14002838f:	rex.WR (bad) 
   140028391:	je     0x1400283fc
   140028393:	outs   dx,BYTE PTR ds:[rsi]
   140028394:	xor    DWORD PTR [rbx+0x74],edx
   140028397:	jb     0x140028402
   140028399:	outs   dx,BYTE PTR ds:[rsi]
   14002839a:	addr32 rex
   14002839c:	rex push rdi
   14002839e:	xor    al,0x43
   1400283a0:	(bad)  
   1400283a1:	jae    0x140028408
   1400283a3:	push   rbx
   1400283a4:	outs   dx,BYTE PTR gs:[rsi]
   1400283a6:	jae    0x140028411
   1400283a8:	je     0x140028413
   1400283aa:	jbe    0x140028415
   1400283ac:	je     0x140028427
   1400283ae:	rex push rcx
   1400283b0:	je     0x1400283f2
   1400283b2:	rex
   1400283b3:	rex pop rdx
   1400283b5:	add    BYTE PTR [rdx+0x6],ah
   1400283b8:	(bad)  
   1400283b9:	(bad)  
   1400283ba:	fs fs rex.R (bad) 
   1400283be:	je     0x140028421
   1400283c0:	rex push rcx
   1400283c2:	pop    rax
   1400283c3:	ins    DWORD PTR es:[rdi],dx
   1400283c4:	ins    BYTE PTR es:[rdi],dx
   1400283c5:	push   rbx
   1400283c6:	je     0x14002843a
   1400283c8:	gs (bad) 
   1400283ca:	ins    DWORD PTR es:[rdi],dx
   1400283cb:	push   rdx
   1400283cc:	gs (bad) 
   1400283ce:	fs gs jb 0x140028412
   1400283d2:	rex push rcx
   1400283d4:	rex.RB
   1400283d5:	rex.B
   1400283d6:	pop    r8
   1400283d8:	rex.B
   1400283d9:	rex.RB
   1400283da:	rex.X push rsi
   1400283dc:	push   rcx
   1400283dd:	rex.X jns 0x140028454
   1400283e0:	gs rex.B jb 0x140028456
   1400283e4:	(bad)  
   1400283e5:	jns    0x140028427
   1400283e7:	rex
   1400283e8:	rex pop rdx
   1400283ea:	add    BYTE PTR [rax],al
   1400283ec:	adc    al,0x8
   1400283ee:	(bad)  
   1400283ef:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
   1400283f3:	jb     0x140028435
   1400283f5:	push   rcx
   1400283f6:	pop    rax
   1400283f7:	ins    DWORD PTR es:[rdi],dx
   1400283f8:	ins    BYTE PTR es:[rdi],dx
   1400283f9:	push   rbx
   1400283fa:	je     0x14002846e
   1400283fc:	gs (bad) 
   1400283fe:	ins    DWORD PTR es:[rdi],dx
   1400283ff:	push   rdx
   140028400:	gs (bad) 
   140028402:	fs gs jb 0x140028446
   140028406:	rex push rcx
   140028408:	rex.RB
   140028409:	rex.B
   14002840a:	pop    r8
   14002840c:	pop    rax
   14002840d:	pop    rdx
   14002840e:	add    BYTE PTR [rax],al
   140028410:	cmc    
   140028411:	sbb    bh,BYTE PTR [rdi]
   140028413:	ja     0x140028487
   140028415:	imul   esi,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14002841d:	(bad)  
   14002841e:	jne    0x140028494
   140028420:	gs rex push rcx
   140028423:	pop    rax
   140028424:	ins    DWORD PTR es:[rdi],dx
   140028425:	ins    BYTE PTR es:[rdi],dx
   140028426:	push   rbx
   140028427:	je     0x14002849b
   140028429:	gs (bad) 
   14002842b:	ins    DWORD PTR es:[rdi],dx
   14002842c:	push   rdi
   14002842d:	jb     0x140028498
   14002842f:	je     0x140028496
   140028431:	jb     0x140028473
   140028433:	rex push rcx
   140028435:	rex.RB
   140028436:	rex.B
   140028437:	pop    r8
   140028439:	rex.B
   14002843a:	rex.RB
   14002843b:	rex.X push rsi
   14002843d:	push   rcx
   14002843e:	push   rbx
   14002843f:	je     0x1400284b3
   140028441:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   140028448:	pop    rdx
   140028449:	add    BYTE PTR [rdi],al
   14002844b:	sbb    edi,DWORD PTR [rdi]
   14002844d:	ja     0x1400284c1
   14002844f:	imul   esi,DWORD PTR [rbp+riz*2+0x45],0x6c45646e
   140028457:	gs ins DWORD PTR es:[rdi],dx
   140028459:	outs   dx,BYTE PTR gs:[rsi]
   14002845b:	je     0x14002849d
   14002845d:	push   rcx
   14002845e:	pop    rax
   14002845f:	ins    DWORD PTR es:[rdi],dx
   140028460:	ins    BYTE PTR es:[rdi],dx
   140028461:	push   rbx
   140028462:	je     0x1400284d6
   140028464:	gs (bad) 
   140028466:	ins    DWORD PTR es:[rdi],dx
   140028467:	push   rdi
   140028468:	jb     0x1400284d3
   14002846a:	je     0x1400284d1
   14002846c:	jb     0x1400284ae
   14002846e:	rex push rcx
   140028470:	rex.RB
   140028471:	rex.B
   140028472:	pop    r8
   140028474:	pop    rax
   140028475:	pop    rdx
   140028476:	add    BYTE PTR [rax],al
   140028478:	adc    bl,BYTE PTR [rbx]
   14002847a:	(bad)  
   14002847b:	ja     0x1400284ef
   14002847d:	imul   esi,DWORD PTR [rbp+riz*2+0x53],0x74726174
   140028485:	rex.RB ins BYTE PTR es:[rdi],dx
   140028487:	gs ins DWORD PTR es:[rdi],dx
   140028489:	outs   dx,BYTE PTR gs:[rsi]
   14002848b:	je     0x1400284cd
   14002848d:	push   rcx
   14002848e:	pop    rax
   14002848f:	ins    DWORD PTR es:[rdi],dx
   140028490:	ins    BYTE PTR es:[rdi],dx
   140028491:	push   rbx
   140028492:	je     0x140028506
   140028494:	gs (bad) 
   140028496:	ins    DWORD PTR es:[rdi],dx
   140028497:	push   rdi
   140028498:	jb     0x140028503
   14002849a:	je     0x140028501
   14002849c:	jb     0x1400284de
   14002849e:	rex push rcx
   1400284a0:	rex.RB
   1400284a1:	rex.B
   1400284a2:	pop    r8
   1400284a4:	rex.B
   1400284a5:	rex.RB
   1400284a6:	rex.X push rsi
   1400284a8:	push   rcx
   1400284a9:	push   rbx
   1400284aa:	je     0x14002851e
   1400284ac:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   1400284b3:	add    BYTE PTR [rdi+rcx*1],ch
   1400284b6:	(bad)  
   1400284b7:	ins    BYTE PTR es:[rdi],dx
   1400284b8:	(bad)  
   1400284b9:	jae    0x14002852f
   1400284bb:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400284bd:	fs gs js 0x140028510
   1400284c1:	rex push cx
   1400284c4:	push   rbx
   1400284c5:	je     0x140028539
   1400284c7:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   1400284ce:	rex.X
   1400284cf:	rex.B
   1400284d0:	rex.W push rsi
   1400284d2:	push   rcx
   1400284d3:	rex.XB push 0x40407261
   1400284d9:	rex.W push rdi
   1400284db:	xor    al,0x43
   1400284dd:	(bad)  
   1400284de:	jae    0x140028545
   1400284e0:	push   rbx
   1400284e1:	outs   dx,BYTE PTR gs:[rsi]
   1400284e3:	jae    0x14002854e
   1400284e5:	je     0x140028550
   1400284e7:	jbe    0x140028552
   1400284e9:	je     0x140028564
   1400284eb:	rex push rcx
   1400284ed:	je     0x14002852f
   1400284ef:	rex
   1400284f0:	rex pop rdx
   1400284f2:	add    BYTE PTR [rax],al
   1400284f4:	add    eax,0x72773f1b
   1400284f9:	imul   esi,DWORD PTR [rbp+riz*2+0x45],0x7974706d
   140028501:	rex.RB ins BYTE PTR es:[rdi],dx
   140028503:	gs ins DWORD PTR es:[rdi],dx
   140028505:	outs   dx,BYTE PTR gs:[rsi]
   140028507:	je     0x140028549
   140028509:	push   rcx
   14002850a:	pop    rax
   14002850b:	ins    DWORD PTR es:[rdi],dx
   14002850c:	ins    BYTE PTR es:[rdi],dx
   14002850d:	push   rbx
   14002850e:	je     0x140028582
   140028510:	gs (bad) 
   140028512:	ins    DWORD PTR es:[rdi],dx
   140028513:	push   rdi
   140028514:	jb     0x14002857f
   140028516:	je     0x14002857d
   140028518:	jb     0x14002855a
   14002851a:	rex push rcx
   14002851c:	rex.RB
   14002851d:	rex.B
   14002851e:	pop    r8
   140028520:	rex.B
   140028521:	rex.RB
   140028522:	rex.X push rsi
   140028524:	push   rcx
   140028525:	push   rbx
   140028526:	je     0x14002859a
   140028528:	imul   ebp,DWORD PTR [rsi+0x67],0x5a404040
   14002852f:	add    BYTE PTR [rbx+rbx*1],dl
   140028532:	(bad)  
   140028533:	ja     0x1400285a7
   140028535:	imul   esi,DWORD PTR [rbp+riz*2+0x54],0x45747865
   14002853d:	ins    BYTE PTR es:[rdi],dx
   14002853e:	gs ins DWORD PTR es:[rdi],dx
   140028540:	outs   dx,BYTE PTR gs:[rsi]
   140028542:	je     0x140028584
   140028544:	push   rcx
   140028545:	pop    rax
   140028546:	ins    DWORD PTR es:[rdi],dx
   140028547:	ins    BYTE PTR es:[rdi],dx
   140028548:	push   rbx
   140028549:	je     0x1400285bd
   14002854b:	gs (bad) 
   14002854d:	ins    DWORD PTR es:[rdi],dx
   14002854e:	push   rdi
   14002854f:	jb     0x1400285ba
   140028551:	je     0x1400285b8
   140028553:	jb     0x140028595
   140028555:	rex push rcx
   140028557:	rex.RB
   140028558:	rex.B
   140028559:	pop    r8
   14002855b:	rex.B
   14002855c:	rex.RB
   14002855d:	rex.X push rsi
   14002855f:	push   rcx
   140028560:	push   rbx
   140028561:	je     0x1400285d5
   140028563:	imul   ebp,DWORD PTR [rsi+0x67],0x40304040
   14002856a:	pop    rdx
   14002856b:	add    BYTE PTR [rdx*1+0x7465733f],dh
   140028572:	rex.B jne 0x1400285e9
   140028575:	outs   dx,DWORD PTR ds:[rsi]
   140028576:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140028578:	jb     0x1400285e7
   14002857a:	(bad)  
   14002857b:	je     0x1400285f1
   14002857d:	imul   ebp,DWORD PTR [rsi+0x67],0x6d585140
   140028584:	ins    BYTE PTR es:[rdi],dx
   140028585:	push   rbx
   140028586:	je     0x1400285fa
   140028588:	gs (bad) 
   14002858a:	ins    DWORD PTR es:[rdi],dx
   14002858b:	push   rdi
   14002858c:	jb     0x1400285f7
   14002858e:	je     0x1400285f5
   140028590:	jb     0x1400285d2
   140028592:	rex push rcx
   140028594:	rex.RB
   140028595:	rex.B
   140028596:	pop    r8
   140028598:	pop    rdi
   140028599:	rex.WRX
   14002859a:	rex pop rdx
   14002859c:	add    BYTE PTR [rax],al
   14002859e:	add    bh,BYTE PTR ss:[rdi]
   1400285a1:	(bad)  
   1400285a2:	xor    BYTE PTR [rcx+0x58],dl
   1400285a5:	ins    DWORD PTR es:[rdi],dx
   1400285a6:	ins    BYTE PTR es:[rdi],dx
   1400285a7:	push   rbx
   1400285a8:	je     0x14002861c
   1400285aa:	gs (bad) 
   1400285ac:	ins    DWORD PTR es:[rdi],dx
   1400285ad:	push   rdi
   1400285ae:	jb     0x140028619
   1400285b0:	je     0x140028617
   1400285b2:	jb     0x1400285f4
   1400285b4:	rex push rcx
   1400285b6:	rex.RB
   1400285b7:	rex.B
   1400285b8:	rex.B
   1400285b9:	rex pop rax
   1400285bb:	pop    rdx
   1400285bc:	add    BYTE PTR [rax],al
   1400285be:	and    eax,0x6c633f08
   1400285c3:	outs   dx,DWORD PTR ds:[rsi]
   1400285c4:	jae    0x14002862b
   1400285c6:	rex push rcx
   1400285c8:	imul   r13d,DWORD PTR [rbp+r12*2+0x44],0x63697665
   1400285d1:	gs rex
   1400285d3:	rex push rbp
   1400285d5:	rex.RB
   1400285d6:	rex.B
   1400285d7:	pop    r8
   1400285d9:	pop    rax
   1400285da:	pop    rdx
   1400285db:	add    BYTE PTR [rsi],al
   1400285dd:	sbb    edi,DWORD PTR [rdi]
   1400285df:	ja     0x140028653
   1400285e1:	imul   esi,DWORD PTR [rbp+riz*2+0x45],0x6f44646e
   1400285e9:	movsxd esi,DWORD PTR [rbp+0x6d]
   1400285ec:	outs   dx,BYTE PTR gs:[rsi]
   1400285ee:	je     0x140028630
   1400285f0:	push   rcx
   1400285f1:	pop    rax
   1400285f2:	ins    DWORD PTR es:[rdi],dx
   1400285f3:	ins    BYTE PTR es:[rdi],dx
   1400285f4:	push   rbx
   1400285f5:	je     0x140028669
   1400285f7:	gs (bad) 
   1400285f9:	ins    DWORD PTR es:[rdi],dx
   1400285fa:	push   rdi
   1400285fb:	jb     0x140028666
   1400285fd:	je     0x140028664
   1400285ff:	jb     0x140028641
   140028601:	rex push rcx
   140028603:	rex.RB
   140028604:	rex.B
   140028605:	pop    r8
   140028607:	pop    rax
   140028608:	pop    rdx
   140028609:	add    BYTE PTR [rax],dl
   14002860b:	sbb    edi,DWORD PTR [rdi]
   14002860d:	ja     0x140028681
   14002860f:	imul   esi,DWORD PTR [rbp+riz*2+0x53],0x74726174
   140028617:	rex.R outs dx,DWORD PTR ds:[rsi]
   140028619:	movsxd esi,DWORD PTR [rbp+0x6d]
   14002861c:	outs   dx,BYTE PTR gs:[rsi]
   14002861e:	je     0x140028660
   140028620:	push   rcx
   140028621:	pop    rax
   140028622:	ins    DWORD PTR es:[rdi],dx
   140028623:	ins    BYTE PTR es:[rdi],dx
   140028624:	push   rbx
   140028625:	je     0x140028699
   140028627:	gs (bad) 
   140028629:	ins    DWORD PTR es:[rdi],dx
   14002862a:	push   rdi
   14002862b:	jb     0x140028696
   14002862d:	je     0x140028694
   14002862f:	jb     0x140028671
   140028631:	rex push rcx
   140028633:	rex.RB
   140028634:	rex.B
   140028635:	pop    r8
   140028637:	pop    rax
   140028638:	pop    rdx
   140028639:	add    BYTE PTR [rbp+rdx*1+0x3f],dh
   14002863d:	jae    0x1400286a4
   14002863f:	je     0x140028685
   140028641:	gs jbe 0x1400286ad
   140028644:	movsxd esp,DWORD PTR [rbp+0x40]
   140028647:	push   rcx
   140028648:	pop    rax
   140028649:	ins    DWORD PTR es:[rdi],dx
   14002864a:	ins    BYTE PTR es:[rdi],dx
   14002864b:	push   rbx
   14002864c:	je     0x1400286c0
   14002864e:	gs (bad) 
   140028650:	ins    DWORD PTR es:[rdi],dx
   140028651:	push   rdi
   140028652:	jb     0x1400286bd
   140028654:	je     0x1400286bb
   140028656:	jb     0x140028698
   140028658:	rex push rcx
   14002865a:	rex.RB
   14002865b:	rex.B
   14002865c:	pop    r8
   14002865e:	push   rax
   14002865f:	rex.RB
   140028660:	push   r14
   140028662:	push   rcx
   140028663:	rex.WB
   140028664:	rex.WRXB
   140028665:	rex.R
   140028666:	gs jbe 0x1400286d2
   140028669:	movsxd esp,DWORD PTR [rbp+0x40]
   14002866c:	rex
   14002866d:	rex pop rdx
   14002866f:	add    dh,cl
   140028671:	(bad)  
   140028672:	(bad)  
   140028673:	(bad)  
   140028674:	jo     0x1400286e6
   140028676:	outs   dx,BYTE PTR gs:[rsi]
   140028678:	fs rex push rcx
   14002867b:	push   rbx
   14002867c:	je     0x1400286f0
   14002867e:	imul   ebp,DWORD PTR [rsi+0x67],0x45514040
   140028685:	rex.B
   140028686:	rex.B
   140028687:	rex.B
   140028688:	rex.RB
   140028689:	push   r14
   14002868b:	xor    DWORD PTR [rax+0x56],eax
   14002868e:	push   rcx
   14002868f:	rex.WR (bad) 
   140028691:	je     0x1400286fc
   140028693:	outs   dx,BYTE PTR ds:[rsi]
   140028694:	xor    DWORD PTR [rbx+0x74],edx
   140028697:	jb     0x140028702
   140028699:	outs   dx,BYTE PTR ds:[rsi]
   14002869a:	addr32 rex
   14002869c:	rex
   14002869d:	rex pop rdx
   14002869f:	add    ah,bl
   1400286a1:	add    bh,BYTE PTR [rdi]
   1400286a3:	(bad)  
   1400286a4:	xor    DWORD PTR [rcx+0x54],edx
   1400286a7:	gs js  0x14002871e
   1400286aa:	push   rbx
   1400286ab:	je     0x14002871f
   1400286ad:	gs (bad) 
   1400286af:	ins    DWORD PTR es:[rdi],dx
   1400286b0:	rex
   1400286b1:	rex push rbp
   1400286b3:	rex.RB
   1400286b4:	rex.B
   1400286b5:	rex.B
   1400286b6:	rex pop rax
   1400286b8:	pop    rdx
   1400286b9:	add    BYTE PTR [rbp+0x13],cl
   1400286bc:	(bad)  
   1400286bd:	jb     0x140028724
   1400286bf:	(bad)  
   1400286c0:	fs rex.B ins BYTE PTR es:[rdi],dx
   1400286c3:	ins    BYTE PTR es:[rdi],dx
   1400286c4:	rex push rcx
   1400286c6:	push   rsp
   1400286c7:	gs js  0x14002873e
   1400286ca:	push   rbx
   1400286cb:	je     0x14002873f
   1400286cd:	gs (bad) 
   1400286cf:	ins    DWORD PTR es:[rdi],dx
   1400286d0:	rex
   1400286d1:	rex push rcx
   1400286d3:	rex.RB
   1400286d4:	rex.B
   1400286d5:	rex.B (bad) 
   1400286d7:	push   r14
   1400286d9:	push   rcx
   1400286da:	push   rbx
   1400286db:	je     0x14002874f
   1400286dd:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   1400286e4:	add    BYTE PTR [rax],al
   1400286e6:	mov    edx,0x303f3f01
   1400286eb:	push   rcx
   1400286ec:	push   rsp
   1400286ed:	gs js  0x140028764
   1400286f0:	push   rbx
   1400286f1:	je     0x140028765
   1400286f3:	gs (bad) 
   1400286f5:	ins    DWORD PTR es:[rdi],dx
   1400286f6:	rex
   1400286f7:	rex push rcx
   1400286f9:	rex.RB
   1400286fa:	rex.B
   1400286fb:	rex.B
   1400286fc:	rex push rax
   1400286fe:	rex.RB
   1400286ff:	push   r14
   140028701:	push   rcx
   140028702:	rex.WB
   140028703:	rex.WRXB
   140028704:	rex.R
   140028705:	gs jbe 0x140028771
   140028708:	movsxd esp,DWORD PTR [rbp+0x40]
   14002870b:	rex
   14002870c:	rex pop rdx
   14002870e:	add    BYTE PTR [rax],al
   140028710:	out    0x2,al
   140028712:	(bad)  
   140028713:	(bad)  
   140028714:	xor    DWORD PTR [rcx+0x54],edx
   140028717:	jb     0x14002877a
   140028719:	outs   dx,BYTE PTR ds:[rsi]
   14002871a:	jae    0x140028788
   14002871c:	(bad)  
   14002871d:	je     0x14002878e
   14002871f:	jb     0x140028761
   140028721:	rex push rbp
   140028723:	rex.RB
   140028724:	rex.B
   140028725:	rex.B
   140028726:	rex pop rax
   140028728:	pop    rdx
   140028729:	add    BYTE PTR [rbx],bh
   14002872b:	(bad)  
   14002872c:	(bad)  
   14002872d:	(bad)  
   14002872e:	(bad)
   140028733:	je     0x14002879a
   140028735:	imul   r13d,DWORD PTR [rbp+r12*2+0x50],0x40687461
   14002873e:	push   rcx
   14002873f:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   140028748:	rex push rcx
   14002874a:	rex.RB
   14002874b:	rex.X
   14002874c:	rex.B (bad) 
   14002874e:	push   r14
   140028750:	push   rcx
   140028751:	push   rbx
   140028752:	je     0x1400287c6
   140028754:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002875b:	add    BYTE PTR [rdi+0xb],bh
   14002875e:	(bad)  
   14002875f:	gs js  0x1400287cb
   140028762:	jae    0x1400287d8
   140028764:	jae    0x1400287a6
   140028766:	push   rcx
   140028767:	imul   r13d,DWORD PTR [rbp+r12*2+0x49],0x406f666e
   140028770:	rex push rcx
   140028772:	rex.RB
   140028773:	rex.X
   140028774:	pop    r15
   140028776:	rex.WRX pop rax
   140028778:	pop    rdx
   140028779:	add    BYTE PTR [rax],ch
   14002877b:	or     al,0x3f
   14002877d:	data16 jb 0x1400287ef
   140028780:	ins    DWORD PTR es:[rdi],dx
   140028781:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140028783:	movsxd esp,DWORD PTR [rcx+0x6c]
   140028786:	cmp    BYTE PTR [rdx+0x69],al
   140028789:	je     0x1400287cb
   14002878b:	push   rcx
   14002878c:	push   rbx
   14002878d:	je     0x140028801
   14002878f:	imul   ebp,DWORD PTR [rsi+0x67],0x41534040
   140028796:	(bad)  
   140028797:	push   r14
   140028799:	xor    DWORD PTR [rax+0x50],eax
   14002879c:	rex.RB
   14002879d:	rex.X
   14002879e:	rex.R
   14002879f:	rex.W
   1400287a0:	rex pop rdx
   1400287a2:	add    BYTE PTR [rax],al
   1400287a4:	jno    0x1400287b3
   1400287a6:	(bad)  
   1400287a7:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   1400287ae:	push   rsp
   1400287af:	jb     0x140028812
   1400287b1:	outs   dx,BYTE PTR ds:[rsi]
   1400287b2:	jae    0x140028820
   1400287b4:	(bad)  
   1400287b5:	je     0x140028826
   1400287b7:	jb     0x1400287f9
   1400287b9:	push   rcx
   1400287ba:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400287bc:	jb     0x140028823
   1400287be:	rex.B jo 0x140028831
   1400287c1:	ins    BYTE PTR es:[rdi],dx
   1400287c2:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400287c9:	rex
   1400287ca:	rex push rbx
   1400287cc:	pop    r15
   1400287ce:	rex.WRX push rax
   1400287d0:	rex.RB
   1400287d1:	push   r14
   1400287d3:	push   rcx
   1400287d4:	push   rsp
   1400287d5:	jb     0x140028838
   1400287d7:	outs   dx,BYTE PTR ds:[rsi]
   1400287d8:	jae    0x140028846
   1400287da:	(bad)  
   1400287db:	je     0x14002884c
   1400287dd:	jb     0x14002881f
   1400287df:	rex
   1400287e0:	rex pop rdx
   1400287e2:	add    BYTE PTR [rax],al
   1400287e4:	pop    rdx
   1400287e5:	(bad)  
   1400287e7:	ins    BYTE PTR es:[rdi],dx
   1400287e8:	outs   dx,DWORD PTR ds:[rsi]
   1400287e9:	(bad)  
   1400287ea:	fs rex push rcx
   1400287ed:	push   rsp
   1400287ee:	jb     0x140028851
   1400287f0:	outs   dx,BYTE PTR ds:[rsi]
   1400287f1:	jae    0x14002885f
   1400287f3:	(bad)  
   1400287f4:	je     0x140028865
   1400287f6:	jb     0x140028838
   1400287f8:	rex push rcx
   1400287fa:	rex.RB
   1400287fb:	rex.B
   1400287fc:	pop    r15
   1400287fe:	rex.WRX
   1400287ff:	rex.B
   140028800:	rex.RB
   140028801:	rex.X push rsi
   140028803:	push   rcx
   140028804:	push   rbx
   140028805:	je     0x140028879
   140028807:	imul   ebp,DWORD PTR [rsi+0x67],0x30304040
   14002880e:	xor    BYTE PTR [rax+0x5a],al
   140028811:	add    BYTE PTR [rdi+0xf],ch
   140028814:	(bad)  
   140028815:	ins    BYTE PTR es:[rdi],dx
   140028816:	outs   dx,DWORD PTR ds:[rsi]
   140028817:	movsxd esp,DWORD PTR [rcx+0x74]
   14002881a:	imul   ebp,DWORD PTR [rdi+0x6e],0x694c5140
   140028821:	(bad)  
   140028823:	(bad)  
   140028824:	jb     0x14002889f
   140028826:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140028828:	outs   dx,WORD PTR ds:[rsi]
   14002882a:	rex
   14002882b:	rex push rbx
   14002882d:	rex.B (bad) 
   14002882f:	push   r14
   140028831:	push   rcx
   140028832:	push   rbx
   140028833:	je     0x1400288a7
   140028835:	imul   ebp,DWORD PTR [rsi+0x67],0x34574040
   14002883c:	imul   r12,QWORD PTR [rdx+0x72],0x4c797261
   140028844:	outs   dx,DWORD PTR ds:[rsi]
   140028845:	movsxd esp,DWORD PTR [rcx+0x74]
   140028848:	imul   ebp,DWORD PTR [rdi+0x6e],0x40403140
   14002884f:	pop    rdx
   140028850:	add    BYTE PTR [rax],al
   140028852:	lahf   
   140028853:	add    bh,BYTE PTR [rdi]
   140028855:	(bad)  
   140028856:	xor    DWORD PTR [rcx+0x4c],edx
   140028859:	outs   dx,DWORD PTR ds:[rsi]
   14002885a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002885d:	gs rex
   14002885f:	rex push rcx
   140028861:	rex.RB
   140028862:	rex.B
   140028863:	rex.B
   140028864:	rex pop rax
   140028866:	pop    rdx
   140028867:	add    BYTE PTR [rax+0x10],dh
   14002886a:	(bad)  
   14002886b:	outs   dx,BYTE PTR ds:[rsi]
   14002886c:	(bad)  
   14002886d:	ins    DWORD PTR es:[rdi],dx
   14002886e:	gs rex push rcx
   140028871:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140028873:	movsxd esp,DWORD PTR [rcx+0x6c]
   140028876:	gs rex
   140028878:	rex push rcx
   14002887a:	rex.RB
   14002887b:	rex.X
   14002887c:	rex.B (bad) 
   14002887e:	push   r14
   140028880:	push   rcx
   140028881:	push   rbx
   140028882:	je     0x1400288f6
   140028884:	imul   ebp,DWORD PTR [rsi+0x67],0x5a584040
   14002888b:	add    BYTE PTR [rip+0x79733f18],dl        # 0x1b975c7a9
   140028891:	jae    0x140028907
   140028893:	gs ins DWORD PTR es:[rdi],dx
   140028895:	rex push rcx
   140028897:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140028899:	movsxd esp,DWORD PTR [rcx+0x6c]
   14002889c:	gs rex
   14002889e:	rex push rbx
   1400288a0:	rex.B (bad) 
   1400288a2:	push   r14
   1400288a4:	xor    DWORD PTR [rax+0x58],eax
   1400288a7:	pop    rdx
   1400288a8:	add    BYTE PTR [rax],al
   1400288aa:	rol    DWORD PTR [rcx],cl
   1400288ac:	(bad)  
   1400288ad:	(bad)  
   1400288ae:	xor    BYTE PTR [rcx+0x54],dl
   1400288b1:	jb     0x140028914
   1400288b3:	outs   dx,BYTE PTR ds:[rsi]
   1400288b4:	jae    0x140028922
   1400288b6:	(bad)  
   1400288b7:	je     0x140028928
   1400288b9:	jb     0x1400288fb
   1400288bb:	rex push rcx
   1400288bd:	rex.RB
   1400288be:	rex.B
   1400288bf:	rex.B
   1400288c0:	rex push rax
   1400288c2:	rex.RB
   1400288c3:	push   r14
   1400288c5:	push   rcx
   1400288c6:	rex.WRXB (bad) 
   1400288c8:	push   0x65
   1400288ca:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400288ce:	rex pop rdx
   1400288d0:	add    BYTE PTR [rax],al
   1400288d2:	or     edx,DWORD PTR [rdx]
   1400288d4:	(bad)  
   1400288d5:	jno    0x140028929
   1400288d7:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65527265
   1400288e0:	jae    0x140028951
   1400288e2:	jne    0x140028956
   1400288e4:	movsxd esp,DWORD PTR [rbp+0x44]
   1400288e7:	(bad)  
   1400288e8:	je     0x14002894b
   1400288ea:	rex
   1400288eb:	rex pop rcx
   1400288ed:	pop    r15
   1400288ef:	rex.WRX
   1400288f0:	rex.W push rax
   1400288f2:	rex.RB
   1400288f3:	rex.X
   1400288f4:	xor    BYTE PTR [r8],r14b
   1400288f7:	rex pop rdx
   1400288f9:	add    BYTE PTR [rsi],dl
   1400288fb:	adc    bh,BYTE PTR [rdi]
   1400288fd:	jno    0x140028954
   1400288ff:	outs   dx,BYTE PTR ds:[rsi]
   140028900:	jb     0x140028967
   140028902:	imul   esi,DWORD PTR [ebx+0x74],0x65527265
   14002890a:	jae    0x14002897b
   14002890c:	jne    0x140028980
   14002890e:	movsxd esp,DWORD PTR [rbp+0x44]
   140028911:	(bad)  
   140028912:	je     0x140028975
   140028914:	rex
   140028915:	rex pop rcx
   140028917:	pop    r15
   140028919:	rex.WRX
   14002891a:	rex.W push rax
   14002891c:	rex.RB
   14002891d:	rex.X
   14002891e:	xor    BYTE PTR [r8],r14b
   140028921:	rex pop rdx
   140028923:	add    BYTE PTR [rbx+0x79643f0a],ch
   140028929:	outs   dx,BYTE PTR ds:[rsi]
   14002892a:	(bad)  
   14002892b:	ins    DWORD PTR es:[rdi],dx
   14002892c:	imul   esp,DWORD PTR [rbx+0x4d],0x4f617465
   140028933:	(bad)  
   140028934:	push   0x65
   140028936:	movsxd esi,DWORD PTR [rax+rax*2+0x51]
   14002893a:	rex.WRXB (bad) 
   14002893c:	push   0x65
   14002893e:	movsxd esi,DWORD PTR [rsp+rax*2+0x61]
   140028942:	je     0x1400289a5
   140028944:	rex
   140028945:	rex push rcx
   140028947:	rex.RB
   140028948:	rex.X
   140028949:	push   r8
   14002894b:	rex.RB
   14002894c:	push   r13
   14002894e:	push   rcx
   14002894f:	rex.WRB
   140028950:	gs je  0x1400289b4
   140028953:	rex.WRXB (bad) 
   140028955:	push   0x65
   140028957:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14002895b:	pop    rax
   14002895c:	pop    rdx
   14002895d:	add    BYTE PTR [rcx+0x74],dl
   140028960:	xor    eax,0x65726f43
   140028965:	cs fs ins BYTE PTR es:[rdi],dx
   140028968:	ins    BYTE PTR es:[rdi],dx
   140028969:	add    BYTE PTR [rcx],dl
   14002896b:	add    BYTE PTR [rdi],bh
   14002896d:	(bad)  
   14002896e:	xor    al,BYTE PTR [rax+0x59]
   140028971:	push   r8
   140028973:	rex.RB
   140028974:	pop    r8
   140028976:	pop    rdi
   140028977:	rex.WXB
   140028978:	rex pop rdx
   14002897a:	add    BYTE PTR [rax],al
   14002897c:	adc    eax,DWORD PTR [rax]
   14002897e:	(bad)  
   14002897f:	(bad)  
   140028980:	xor    eax,DWORD PTR [rax+0x59]
   140028983:	pop    r8
   140028985:	push   rax
   140028986:	rex.RB
   140028987:	pop    r8
   140028989:	rex pop rdx
   14002898b:	add    al,dh
   14002898d:	add    al,0x6d
   14002898f:	gs ins DWORD PTR es:[rdi],dx
   140028991:	movsxd esi,DWORD PTR [rax+0x79]
   140028994:	add    BYTE PTR [rax],al
   140028996:	rex.WRB push r11
   140028998:	push   rsi
   140028999:	rex.XB push r10
   14002899b:	cmp    DWORD PTR [rax],esi
   14002899d:	cs fs ins BYTE PTR es:[rdi],dx
   1400289a0:	ins    BYTE PTR es:[rdi],dx
   1400289a1:	add    BYTE PTR [rcx+0x0],bl
   1400289a4:	pop    rdi
   1400289a5:	pop    rdi
   1400289a6:	rex.XB pop r15
   1400289a8:	jae    0x140028a1a
   1400289aa:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400289ae:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400289b5:	ins    BYTE PTR es:[rdi],dx
   1400289b6:	gs jb  0x1400289b9
   1400289b9:	add    BYTE PTR [rbx+rax*1+0x6c6e755f],ah
   1400289c0:	outs   dx,DWORD PTR ds:[rsi]
   1400289c1:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400289c4:	test   DWORD PTR [rax],eax
   1400289c6:	pop    rdi
   1400289c7:	pop    rdi
   1400289c8:	fs ins BYTE PTR es:[rdi],dx
   1400289ca:	ins    BYTE PTR es:[rdi],dx
   1400289cb:	outs   dx,DWORD PTR ds:[rsi]
   1400289cc:	outs   dx,BYTE PTR ds:[rsi]
   1400289cd:	gs js  0x140028a39
   1400289d0:	je     0x1400289d2
   1400289d2:	(bad)  
   1400289d3:	add    DWORD PTR [rdi+0x65],ebx
   1400289d6:	outs   dx,BYTE PTR ds:[rsi]
   1400289d7:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400289da:	gs pop rdi
   1400289dc:	jo     0x140028a4d
   1400289de:	imul   ebp,DWORD PTR [rsi+0x74],0x3d007265
   1400289e5:	add    bl,BYTE PTR [rdi+0x6c]
   1400289e8:	outs   dx,DWORD PTR ds:[rsi]
   1400289e9:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400289ec:	in     al,0x2
   1400289ee:	pop    rdi
   1400289ef:	outs   dx,DWORD PTR ds:[rsi]
   1400289f0:	outs   dx,BYTE PTR ds:[rsi]
   1400289f1:	gs js  0x140028a5d
   1400289f4:	je     0x1400289f6
   1400289f6:	sub    eax,0x65645f01
   1400289fb:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400289fe:	gs pop rdi
   140028a00:	jo     0x140028a71
   140028a02:	imul   ebp,DWORD PTR [rsi+0x74],0xe2007265
   140028a09:	add    BYTE PTR [rdi+0x61],bl
   140028a0c:	ins    DWORD PTR es:[rdi],dx
   140028a0d:	jae    0x140028a76
   140028a0f:	pop    rdi
   140028a10:	gs js  0x140028a7c
   140028a13:	je     0x140028a15
   140028a15:	add    BYTE PTR [rax+0x675f5f00],dl
   140028a1b:	gs je  0x140028a8b
   140028a1e:	(bad)  
   140028a1f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140028a26:	push   rbp
   140028a27:	add    BYTE PTR [rdi+0x58],bl
   140028a2a:	movsxd esi,DWORD PTR [rax+0x74]
   140028a2d:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1460072
   140028a36:	pop    rdi
   140028a37:	gs js  0x140028aa3
   140028a3a:	je     0x140028a3c
   140028a3c:	in     al,dx
   140028a3d:	add    DWORD PTR [rdi+0x69],ebx
   140028a40:	jae    0x140028aaf
   140028a42:	(bad)
   140028a47:	add    BYTE PTR fs:[rax],al
   140028a4a:	stc    
   140028a4b:	add    BYTE PTR [rdi+0x63],bl
   140028a4e:	gs js  0x140028aba
   140028a51:	je     0x140028a53
   140028a53:	add    BYTE PTR [rcx+0x69786504],dl
   140028a59:	je     0x140028a5b
   140028a5b:	add    al,bl
   140028a5d:	add    BYTE PTR [rdi+0x61],bl
   140028a60:	movsxd ebp,DWORD PTR [rbp+0x64]
   140028a63:	ins    BYTE PTR es:[rdi],dx
   140028a64:	outs   dx,BYTE PTR ds:[rsi]
   140028a65:	add    dh,cl
   140028a67:	add    DWORD PTR [rdi+0x69],ebx
   140028a6a:	outs   dx,BYTE PTR ds:[rsi]
   140028a6b:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xcf006d72
   140028a73:	add    DWORD PTR [rdi+0x69],ebx
   140028a76:	outs   dx,BYTE PTR ds:[rsi]
   140028a77:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x655f6d72
   140028a7f:	add    BYTE PTR [rcx],cl
   140028a81:	add    DWORD PTR [rdi+0x63],ebx
   140028a84:	outs   dx,DWORD PTR ds:[rsi]
   140028a85:	outs   dx,BYTE PTR ds:[rsi]
   140028a86:	imul   sp,WORD PTR [rdi+0x74],0x7268
   140028a8c:	gs (bad) 
   140028a8e:	fs ins BYTE PTR es:[rdi],dx
   140028a90:	outs   dx,DWORD PTR ds:[rsi]
   140028a91:	movsxd esp,DWORD PTR [rcx+0x6c]
   140028a94:	add    BYTE PTR gs:[rdi+0x735f5f00],bh
   140028a9b:	gs je  0x140028b13
   140028a9e:	jae    0x140028b05
   140028aa0:	jb     0x140028b0f
   140028aa2:	(bad)  
   140028aa3:	je     0x140028b0d
   140028aa5:	gs jb  0x140028b1a
   140028aa8:	add    BYTE PTR [rax],al
   140028aaa:	or     BYTE PTR [rcx],al
   140028aac:	pop    rdi
   140028aad:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140028ab0:	ins    DWORD PTR es:[rdi],dx
   140028ab1:	outs   dx,DWORD PTR ds:[rsi]
   140028ab2:	fs add BYTE PTR gs:[rax],al
   140028ab6:	(bad)
   140028abb:	outs   dx,DWORD PTR ds:[rsi]
   140028abc:	fs add BYTE PTR gs:[rax],al
   140028ac0:	mov    esp,0x735f5f00
   140028ac5:	gs je  0x140028b27
   140028ac8:	(bad)  
   140028ac9:	jo     0x140028b3b
   140028acb:	pop    rdi
   140028acc:	je     0x140028b47
   140028ace:	jo     0x140028b35
   140028ad0:	add    BYTE PTR [rax],al
   140028ad2:	rex.XB add BYTE PTR [r15],dil
   140028ad5:	je     0x140028b3c
   140028ad7:	jb     0x140028b46
   140028ad9:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140028ae0:	pop    rcx
   140028ae1:	pop    r8
   140028ae3:	pop    rax
   140028ae4:	pop    rdx
   140028ae5:	add    BYTE PTR [rax],bh
   140028ae7:	add    BYTE PTR [rdi],bh
   140028ae9:	pop    rdi
   140028aea:	je     0x140028b65
   140028aec:	jo     0x140028b53
   140028aee:	pop    rdi
   140028aef:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   140028af6:	outs   dx,DWORD PTR ds:[rsi]
   140028af7:	jb     0x140028b58
   140028af9:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   140028b00:	ins    BYTE PTR es:[rdi],dx
   140028b01:	pop    rdi
   140028b02:	ins    DWORD PTR es:[rdi],dx
   140028b03:	gs je  0x140028b6e
   140028b06:	outs   dx,DWORD PTR ds:[rsi]
   140028b07:	fs rex je 0x140028b84
   140028b0b:	jo     0x140028b72
   140028b0d:	pop    rdi
   140028b0e:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   140028b15:	rex.RB
   140028b16:	rex.B
   140028b17:	pop    r8
   140028b19:	pop    rax
   140028b1a:	pop    rdx
   140028b1b:	add    al,al
   140028b1d:	add    al,0x53
   140028b1f:	ins    BYTE PTR es:[rdi],dx
   140028b20:	gs gs jo 0x140028b24
   140028b24:	imul   eax,DWORD PTR [rdx],0x53746547
   140028b2a:	je     0x140028b8d
   140028b2c:	jb     0x140028ba2
   140028b2e:	jne    0x140028ba0
   140028b30:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140028b32:	outs   dx,WORD PTR ds:[rsi]
   140028b34:	add    BYTE PTR [r11+0x74655304],sil
   140028b3b:	push   rbp
   140028b3c:	outs   dx,BYTE PTR ds:[rsi]
   140028b3d:	push   0x6c646e61
   140028b42:	gs fs rex.RB js 0x140028baa
   140028b47:	gs jo  0x140028bbe
   140028b4a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140028b51:	gs jb  0x140028b54
   140028b54:	test   eax,0x65755103
   140028b59:	jb     0x140028bd4
   140028b5b:	push   rax
   140028b5c:	gs jb  0x140028bc5
   140028b5f:	outs   dx,DWORD PTR ds:[rsi]
   140028b60:	jb     0x140028bcf
   140028b62:	(bad)  
   140028b63:	outs   dx,BYTE PTR ds:[rsi]
   140028b64:	movsxd esp,DWORD PTR [rbp+0x43]
   140028b67:	outs   dx,DWORD PTR ds:[rsi]
   140028b68:	jne    0x140028bd8
   140028b6a:	je     0x140028bd1
   140028b6c:	jb     0x140028b6e
   140028b6e:	(bad)  
   140028b6f:	add    al,BYTE PTR [rdi+0x65]
   140028b72:	je     0x140028bc8
   140028b74:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140028b7b:	je     0x140028b7d
   140028b7d:	add    bl,cl
   140028b7f:	add    DWORD PTR [rdi+0x65],eax
   140028b82:	je     0x140028bc7
   140028b84:	jne    0x140028bf8
   140028b86:	jb     0x140028bed
   140028b88:	outs   dx,BYTE PTR ds:[rsi]
   140028b89:	je     0x140028bdf
   140028b8b:	push   0x64616572
   140028b90:	rex.WB
   140028b91:	add    BYTE PTR fs:[rax],al
   140028b94:	mov    DWORD PTR [rcx],0x43746547
   140028b9a:	jne    0x140028c0e
   140028b9c:	jb     0x140028c03
   140028b9e:	outs   dx,BYTE PTR ds:[rsi]
   140028b9f:	je     0x140028bf1
   140028ba1:	jb     0x140028c12
   140028ba3:	movsxd esp,DWORD PTR [rbp+0x73]
   140028ba6:	jae    0x140028bf1
   140028ba8:	add    BYTE PTR fs:[rax+0x74654702],al
   140028baf:	push   rbx
   140028bb0:	jns    0x140028c25
   140028bb2:	je     0x140028c19
   140028bb4:	ins    DWORD PTR es:[rdi],dx
   140028bb5:	push   rsp
   140028bb6:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140028bbd:	ins    BYTE PTR es:[rdi],dx
   140028bbe:	gs push rsp
   140028bc0:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   140028bc7:	rex.WRX
   140028bc8:	rex.RB
   140028bc9:	xor    r14,QWORD PTR [rdx]
   140028bcc:	cs fs ins BYTE PTR es:[rdi],dx
   140028bcf:	ins    BYTE PTR es:[rdi],dx
   140028bd0:	add    BYTE PTR [rax],al
   140028bd2:	(bad)  
   140028bd3:	add    BYTE PTR [rbx+0x6f],al
   140028bd6:	ins    DWORD PTR es:[rdi],dx
   140028bd7:	ins    DWORD PTR es:[rdi],dx
   140028bd8:	(bad)  
   140028bd9:	outs   dx,BYTE PTR ds:[rsi]
   140028bda:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   140028be3:	addr32 jbe 0x140028c3d
   140028be6:	add    BYTE PTR [rax],al
   140028be8:	push   rbx
   140028be9:	rex.W
   140028bea:	rex.RB
   140028beb:	rex.WR
   140028bec:	xor    r14,QWORD PTR [rdx]
   140028bef:	cs fs ins BYTE PTR es:[rdi],dx
   140028bf2:	ins    BYTE PTR es:[rdi],dx
   140028bf3:	add    BYTE PTR [rbx],ah
   140028bf5:	add    BYTE PTR [rdi],bh
   140028bf7:	(bad)  
   140028bf8:	pop    rdi
   140028bf9:	push   rsi
   140028bfa:	rex pop rcx
   140028bfc:	pop    r8
   140028bfe:	push   rax
   140028bff:	rex.RB
   140028c00:	pop    r8
   140028c02:	rex pop rdx
   140028c04:	add    BYTE PTR [rax],al
   140028c06:	and    BYTE PTR [rip+0x65646957],al        # 0x1a566f563
   140028c0c:	rex.XB push 0x6f547261
   140028c12:	rex.WRB jne 0x140028c81
   140028c15:	je     0x140028c80
   140028c17:	rex.X jns 0x140028c8e
   140028c1a:	add    BYTE PTR gs:[rdx+0x3],cl
   140028c1e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140028c20:	movsxd esp,DWORD PTR [rcx+0x6c]
   140028c23:	rex.RX jb 0x140028c8b
   140028c26:	add    BYTE PTR gs:[rbp+0x74654701],cl
   140028c2d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140028c2f:	ins    DWORD PTR es:[rdi],dx
   140028c30:	ins    DWORD PTR es:[rdi],dx
   140028c31:	(bad)  
   140028c32:	outs   dx,BYTE PTR ds:[rsi]
   140028c33:	fs
   140028c34:	rex.WR
   140028c35:	.byte 0x69
   140028c36:	outs   dx,BYTE PTR ds:[rsi]
   140028c37:	gs push rdi
	...

Disassembly of section .data:

0000000140029000 <.data>:
   140029000:	(bad)  
   140029001:	push   rdi
   140029002:	add    DWORD PTR [rax+0x1],eax
   140029005:	add    BYTE PTR [rax],al
   140029007:	add    BYTE PTR [rax],dh
   140029009:	enter  0x4001,0x1
	...
   140029015:	add    BYTE PTR [rax],al
   140029017:	add    BYTE PTR [rsi],ch
   140029019:	(bad)  
   14002901a:	push   r14
   14002901c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002901e:	outs   dx,BYTE PTR ds:[rsi]
   14002901f:	jbe    0x140029086
   140029021:	jb     0x140029096
   140029023:	imul   ebp,DWORD PTR [rdi+0x6e],0x617a6957
   14002902a:	jb     0x140029090
   14002902c:	rex
   14002902d:	add    BYTE PTR [rax],al
   140029030:	xor    al,cl
   140029032:	add    DWORD PTR [rax+0x1],eax
	...
   14002903d:	add    BYTE PTR [rax],al
   14002903f:	add    BYTE PTR [rsi],ch
   140029041:	(bad)  
   140029042:	push   r14
   140029044:	push   rcx
   140029045:	push   rdi
   140029046:	imul   edi,DWORD PTR [rdx+0x61],0x40406472
   14002904d:	add    BYTE PTR [rax],al
   14002904f:	add    BYTE PTR [rax],dh
   140029051:	enter  0x4001,0x1
	...
   14002905d:	add    BYTE PTR [rax],al
   14002905f:	add    BYTE PTR [rsi],ch
   140029061:	(bad)  
   140029062:	push   r14
   140029064:	push   rcx
   140029065:	imul   r12d,DWORD PTR [rcx+0x6c],0x4040676f
   14002906d:	add    BYTE PTR [rax],al
   14002906f:	add    BYTE PTR [rax],dh
   140029071:	enter  0x4001,0x1
	...
   14002907d:	add    BYTE PTR [rax],al
   14002907f:	add    BYTE PTR [rsi],ch
   140029081:	(bad)  
   140029082:	push   r14
   140029084:	push   rcx
   140029085:	push   rdi
   140029086:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x404074
   14002908e:	add    BYTE PTR [rax],al
   140029090:	xor    al,cl
   140029092:	add    DWORD PTR [rax+0x1],eax
	...
   14002909d:	add    BYTE PTR [rax],al
   14002909f:	add    BYTE PTR [rsi],ch
   1400290a1:	(bad)  
   1400290a2:	push   r14
   1400290a4:	push   rcx
   1400290a5:	rex.WRXB (bad) 
   1400290a7:	push   0x65
   1400290a9:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   1400290ad:	add    BYTE PTR [rax],al
   1400290af:	add    BYTE PTR [rax],dh
   1400290b1:	enter  0x4001,0x1
	...
   1400290bd:	add    BYTE PTR [rax],al
   1400290bf:	add    BYTE PTR [rsi],ch
   1400290c1:	(bad)  
   1400290c2:	push   r14
   1400290c4:	push   rcx
   1400290c5:	push   rax
   1400290c6:	(bad)  
   1400290c7:	imul   ebp,DWORD PTR [rsi+0x74],0x69766544
   1400290ce:	movsxd esp,DWORD PTR [rbp+0x40]
   1400290d1:	add    BYTE PTR [rax],al
   1400290d4:	add    BYTE PTR [rax],al
   1400290d6:	add    BYTE PTR [rax],al
   1400290d8:	(bad)  
   1400290d9:	push   rdi
   1400290da:	add    DWORD PTR [rax+0x1],eax
   1400290dd:	add    BYTE PTR [rax],al
   1400290df:	add    BYTE PTR [rax],dh
   1400290e1:	enter  0x4001,0x1
	...
   1400290ed:	add    BYTE PTR [rax],al
   1400290ef:	add    BYTE PTR [rsi],ch
   1400290f1:	(bad)  
   1400290f2:	push   r14
   1400290f4:	push   rcx
   1400290f5:	rex.RXB jb 0x140029161
   1400290f8:	fs rex.WR (bad) 
   1400290fb:	jns    0x14002916c
   1400290fd:	jne    0x140029173
   1400290ff:	rex
   140029100:	add    BYTE PTR [rax],al
   140029103:	add    BYTE PTR [rax],al
   140029105:	add    BYTE PTR [rax],al
   140029107:	add    BYTE PTR [rax],dh
   140029109:	enter  0x4001,0x1
	...
   140029115:	add    BYTE PTR [rax],al
   140029117:	add    BYTE PTR [rsi],ch
   140029119:	(bad)  
   14002911a:	push   r14
   14002911c:	push   rcx
   14002911d:	rex.WR (bad) 
   14002911f:	jns    0x140029190
   140029121:	jne    0x140029197
   140029123:	rex
   140029124:	add    BYTE PTR [rax],al
   140029127:	add    BYTE PTR [rax],dh
   140029129:	enter  0x4001,0x1
	...
   140029135:	add    BYTE PTR [rax],al
   140029137:	add    BYTE PTR [rsi],ch
   140029139:	(bad)  
   14002913a:	push   r14
   14002913c:	push   rcx
   14002913d:	rex.WR (bad) 
   14002913f:	jns    0x1400291b0
   140029141:	jne    0x1400291b7
   140029143:	rex.WB je 0x1400291ab
   140029146:	ins    DWORD PTR es:[rdi],dx
   140029147:	rex
   140029148:	add    BYTE PTR [rax],al
   14002914b:	add    BYTE PTR [rax],al
   14002914d:	add    BYTE PTR [rax],al
   14002914f:	add    BYTE PTR [rax],dh
   140029151:	enter  0x4001,0x1
	...
   14002915d:	add    BYTE PTR [rax],al
   14002915f:	add    BYTE PTR [rsi],ch
   140029161:	(bad)  
   140029162:	push   r14
   140029164:	push   rcx
   140029165:	push   rbx
   140029166:	jo     0x1400291c9
   140029168:	movsxd esp,DWORD PTR [rbp+0x72]
   14002916b:	rex.WB je 0x1400291d3
   14002916e:	ins    DWORD PTR es:[rdi],dx
   14002916f:	rex
   140029170:	add    BYTE PTR [rax],al
   140029173:	add    BYTE PTR [rax],al
   140029175:	add    BYTE PTR [rax],al
   140029177:	add    BYTE PTR [rax],dh
   140029179:	enter  0x4001,0x1
	...
   140029185:	add    BYTE PTR [rax],al
   140029187:	add    BYTE PTR [rsi],ch
   140029189:	(bad)  
   14002918a:	push   r14
   14002918c:	push   rcx
   14002918d:	rex.WR (bad) 
   14002918f:	(bad)  
   140029190:	gs ins BYTE PTR es:[rdi],dx
   140029192:	rex
   140029193:	add    BYTE PTR [rax],al
   140029196:	add    BYTE PTR [rax],al
   140029198:	xor    al,cl
   14002919a:	add    DWORD PTR [rax+0x1],eax
	...
   1400291a5:	add    BYTE PTR [rax],al
   1400291a7:	add    BYTE PTR [rsi],ch
   1400291a9:	(bad)  
   1400291aa:	push   r14
   1400291ac:	push   rcx
   1400291ad:	rex.RX jb 0x140029211
   1400291b0:	ins    DWORD PTR es:[rdi],dx
   1400291b1:	gs rex
   1400291b3:	add    BYTE PTR [rax],al
   1400291b6:	add    BYTE PTR [rax],al
   1400291b8:	xor    al,cl
   1400291ba:	add    DWORD PTR [rax+0x1],eax
	...
   1400291c5:	add    BYTE PTR [rax],al
   1400291c7:	add    BYTE PTR [rsi],ch
   1400291c9:	(bad)  
   1400291ca:	push   r14
   1400291cc:	push   rcx
   1400291cd:	rex.W
   1400291ce:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400291d0:	js     0x14002921e
   1400291d2:	(bad)  
   1400291d3:	jns    0x140029244
   1400291d5:	jne    0x14002924b
   1400291d7:	rex
   1400291d8:	add    BYTE PTR [rax],al
   1400291db:	add    BYTE PTR [rax],al
   1400291dd:	add    BYTE PTR [rax],al
   1400291df:	add    BYTE PTR [rax],dh
   1400291e1:	enter  0x4001,0x1
	...
   1400291ed:	add    BYTE PTR [rax],al
   1400291ef:	add    BYTE PTR [rsi],ch
   1400291f1:	(bad)  
   1400291f2:	push   r14
   1400291f4:	push   rcx
   1400291f5:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400291f7:	js     0x140029245
   1400291f9:	(bad)  
   1400291fa:	jns    0x14002926b
   1400291fc:	jne    0x140029272
   1400291fe:	rex
   1400291ff:	add    BYTE PTR [rax],al
   140029202:	add    BYTE PTR [rax],al
   140029204:	add    BYTE PTR [rax],al
   140029206:	add    BYTE PTR [rax],al
   140029208:	xor    al,cl
   14002920a:	add    DWORD PTR [rax+0x1],eax
	...
   140029215:	add    BYTE PTR [rax],al
   140029217:	add    BYTE PTR [rsi],ch
   140029219:	(bad)  
   14002921a:	push   r14
   14002921c:	push   rcx
   14002921d:	imul   r13,QWORD PTR [rsi+0x65],0x74696445
   140029225:	rex
   140029226:	add    BYTE PTR [rax],sil
   140029229:	enter  0x4001,0x1
	...
   140029235:	add    BYTE PTR [rax],al
   140029237:	add    BYTE PTR [rsi],ch
   140029239:	(bad)  
   14002923a:	push   r14
   14002923c:	push   rcx
   14002923d:	push   rsp
   14002923e:	outs   dx,DWORD PTR ds:[rsi]
   14002923f:	outs   dx,DWORD PTR ds:[rsi]
   140029240:	ins    BYTE PTR es:[rdi],dx
   140029241:	rex.X jne 0x1400292b8
   140029244:	je     0x1400292b5
   140029246:	outs   dx,BYTE PTR ds:[rsi]
   140029247:	rex
   140029248:	add    BYTE PTR [rax],al
   14002924b:	add    BYTE PTR [rax],al
   14002924d:	add    BYTE PTR [rax],al
   14002924f:	add    BYTE PTR [rax],dh
   140029251:	enter  0x4001,0x1
	...
   14002925d:	add    BYTE PTR [rax],al
   14002925f:	add    BYTE PTR [rsi],ch
   140029261:	(bad)  
   140029262:	push   r14
   140029264:	push   rcx
   140029265:	(bad)
   14002926b:	movsxd esi,DWORD PTR [rdx+rax*2+0x75]
   14002926f:	je     0x1400292e5
   140029271:	outs   dx,DWORD PTR ds:[rsi]
   140029272:	outs   dx,BYTE PTR ds:[rsi]
   140029273:	rex
   140029274:	add    BYTE PTR [rax],al
   140029277:	add    BYTE PTR [rax],dh
   140029279:	enter  0x4001,0x1
	...
   140029285:	add    BYTE PTR [rax],al
   140029287:	add    BYTE PTR [rsi],ch
   140029289:	(bad)  
   14002928a:	push   r14
   14002928c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14002928e:	jo     0x140029305
   140029290:	je     0x1400292e2
   140029292:	(bad)  
   140029293:	addr32 gs rex
   140029296:	add    BYTE PTR [rax],sil
   140029299:	enter  0x4001,0x1
	...
   1400292a5:	add    BYTE PTR [rax],al
   1400292a7:	add    BYTE PTR [rsi],ch
   1400292a9:	(bad)  
   1400292aa:	push   r14
   1400292ac:	push   rcx
   1400292ad:	push   rdi
   1400292ae:	imul   edi,DWORD PTR [rdx+0x61],0x61506472
   1400292b5:	addr32 gs rex
   1400292b8:	add    BYTE PTR [rax],al
   1400292bb:	add    BYTE PTR [rax],al
   1400292bd:	add    BYTE PTR [rax],al
   1400292bf:	add    BYTE PTR [rax+0x57],ah
   1400292c2:	add    DWORD PTR [rax+0x1],eax
   1400292c5:	add    BYTE PTR [rax],al
   1400292c7:	add    BYTE PTR [rax],dh
   1400292c9:	enter  0x4001,0x1
	...
   1400292d5:	add    BYTE PTR [rax],al
   1400292d7:	add    BYTE PTR [rsi],ch
   1400292d9:	(bad)  
   1400292da:	push   r14
   1400292dc:	rex.RXB
   1400292dd:	outs   dx,BYTE PTR gs:[rsi]
   1400292df:	gs jb  0x140029343
   1400292e2:	ins    BYTE PTR es:[rdi],dx
   1400292e3:	push   rax
   1400292e4:	(bad)  
   1400292e5:	addr32 gs rex
   1400292e8:	add    BYTE PTR [rax],al
   1400292eb:	add    BYTE PTR [rax],al
   1400292ed:	add    BYTE PTR [rax],al
   1400292ef:	add    BYTE PTR [rax+0x57],ah
   1400292f2:	add    DWORD PTR [rax+0x1],eax
   1400292f5:	add    BYTE PTR [rax],al
   1400292f7:	add    BYTE PTR [rax],dh
   1400292f9:	enter  0x4001,0x1
	...
   140029305:	add    BYTE PTR [rax],al
   140029307:	add    BYTE PTR [rsi],ch
   140029309:	(bad)  
   14002930a:	push   r14
   14002930c:	push   rcx
   14002930d:	rex.RXB jb 0x14002937f
   140029310:	jne    0x140029382
   140029312:	rex.X outs dx,DWORD PTR ds:[rsi]
   140029314:	js     0x140029356
   140029316:	add    BYTE PTR [rax],sil
   140029319:	enter  0x4001,0x1
	...
   140029325:	add    BYTE PTR [rax],al
   140029327:	add    BYTE PTR [rsi],ch
   140029329:	(bad)  
   14002932a:	push   r14
   14002932c:	push   rcx
   14002932d:	push   rsp
   14002932e:	jb     0x140029395
   140029330:	gs push rdi
   140029332:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x404074
   14002933a:	add    BYTE PTR [rax],al
   14002933c:	add    BYTE PTR [rax],al
   14002933e:	add    BYTE PTR [rax],al
   140029340:	xor    al,cl
   140029342:	add    DWORD PTR [rax+0x1],eax
	...
   14002934d:	add    BYTE PTR [rax],al
   14002934f:	add    BYTE PTR [rsi],ch
   140029351:	(bad)  
   140029352:	push   r14
   140029354:	push   rcx
   140029355:	push   rsp
   140029356:	jb     0x1400293bd
   140029358:	gs push rsi
   14002935a:	imul   esp,DWORD PTR [rbp+0x77],0x30004040
   140029361:	enter  0x4001,0x1
	...
   14002936d:	add    BYTE PTR [rax],al
   14002936f:	add    BYTE PTR [rsi],ch
   140029371:	(bad)  
   140029372:	push   r14
   140029374:	push   rcx
   140029375:	(bad)
   14002937b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x74]
   14002937f:	gs ins DWORD PTR es:[rdi],dx
   140029381:	push   rsi
   140029382:	imul   esp,DWORD PTR [rbp+0x77],0x30004040
   140029389:	enter  0x4001,0x1
	...
   140029395:	add    BYTE PTR [rax],al
   140029397:	add    BYTE PTR [rsi],ch
   140029399:	(bad)  
   14002939a:	push   r14
   14002939c:	push   rcx
   14002939d:	(bad)
   1400293a3:	movsxd esi,DWORD PTR [rbx+rdx*2+0x63]
   1400293a7:	jb     0x140029418
   1400293a9:	ins    BYTE PTR es:[rdi],dx
   1400293aa:	ins    BYTE PTR es:[rdi],dx
   1400293ab:	rex.B jb 0x140029413
   1400293ae:	(bad)  
   1400293af:	rex
   1400293b0:	add    BYTE PTR [rax],al
   1400293b3:	add    BYTE PTR [rax],al
   1400293b5:	add    BYTE PTR [rax],al
   1400293b7:	add    BYTE PTR [rax],dh
   1400293b9:	enter  0x4001,0x1
	...
   1400293c5:	add    BYTE PTR [rax],al
   1400293c7:	add    BYTE PTR [rsi],ch
   1400293c9:	(bad)  
   1400293ca:	push   r14
   1400293cc:	push   rcx
   1400293cd:	push   rax
   1400293ce:	jne    0x140029443
   1400293d0:	push   0x74747542
   1400293d5:	outs   dx,DWORD PTR ds:[rsi]
   1400293d6:	outs   dx,BYTE PTR ds:[rsi]
   1400293d7:	rex
   1400293d8:	add    BYTE PTR [rax],al
   1400293db:	add    BYTE PTR [rax],al
   1400293dd:	add    BYTE PTR [rax],al
   1400293df:	add    BYTE PTR [rax],dh
   1400293e1:	enter  0x4001,0x1
	...
   1400293ed:	add    BYTE PTR [rax],al
   1400293ef:	add    BYTE PTR [rsi],ch
   1400293f1:	(bad)  
   1400293f2:	push   r14
   1400293f4:	push   rcx
   1400293f5:	push   rsp
   1400293f6:	jb     0x14002945d
   1400293f8:	gs push rdi
   1400293fa:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x65744974
   140029402:	ins    DWORD PTR es:[rdi],dx
   140029403:	rex
   140029404:	add    BYTE PTR [rax],al
   140029407:	add    BYTE PTR [rax],dh
   140029409:	enter  0x4001,0x1
	...
   140029415:	add    BYTE PTR [rax],al
   140029417:	add    BYTE PTR [rsi],ch
   140029419:	(bad)  
   14002941a:	push   r14
   14002941c:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x67615072
   140029425:	gs rex
   140029427:	add    BYTE PTR [rax],al
   14002942a:	add    BYTE PTR [rax],al
   14002942c:	add    BYTE PTR [rax],al
   14002942e:	add    BYTE PTR [rax],al
   140029430:	(bad)  
   140029431:	push   rdi
   140029432:	add    DWORD PTR [rax+0x1],eax
   140029435:	add    BYTE PTR [rax],al
   140029437:	add    BYTE PTR [rax],dh
   140029439:	enter  0x4001,0x1
	...
   140029445:	add    BYTE PTR [rax],al
   140029447:	add    BYTE PTR [rsi],ch
   140029449:	(bad)  
   14002944a:	push   r14
   14002944c:	push   rcx
   14002944d:	rex.XB push 0x426b6365
   140029453:	outs   dx,DWORD PTR ds:[rsi]
   140029454:	js     0x140029496
   140029456:	add    BYTE PTR [rax],sil
   140029459:	enter  0x4001,0x1
	...
   140029465:	add    BYTE PTR [rax],al
   140029467:	add    BYTE PTR [rsi],ch
   140029469:	(bad)  
   14002946a:	push   r14
   14002946c:	push   rcx
   14002946d:	push   rdx
   14002946e:	(bad)  
   14002946f:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   140029477:	outs   dx,BYTE PTR ds:[rsi]
   140029478:	rex
   140029479:	add    BYTE PTR [rax],al
   14002947c:	add    BYTE PTR [rax],al
   14002947e:	add    BYTE PTR [rax],al
   140029480:	xor    al,cl
   140029482:	add    DWORD PTR [rax+0x1],eax
	...
   14002948d:	add    BYTE PTR [rax],al
   14002948f:	add    BYTE PTR [rsi],ch
   140029491:	(bad)  
   140029492:	push   r14
   140029494:	rex.WB
   140029495:	fs outs dx,BYTE PTR gs:[rsi]
   140029498:	je     0x140029503
   14002949a:	imul   sp,WORD PTR [rbp+0x72],0x6150
   1400294a0:	addr32 gs rex
   1400294a3:	add    BYTE PTR [rax],al
   1400294a6:	add    BYTE PTR [rax],al
   1400294a8:	(bad)  
   1400294a9:	push   rdi
   1400294aa:	add    DWORD PTR [rax+0x1],eax
   1400294ad:	add    BYTE PTR [rax],al
   1400294af:	add    BYTE PTR [rax],dh
   1400294b1:	enter  0x4001,0x1
	...
   1400294bd:	add    BYTE PTR [rax],al
   1400294bf:	add    BYTE PTR [rsi],ch
   1400294c1:	(bad)  
   1400294c2:	push   r14
   1400294c4:	push   rcx
   1400294c5:	imul   r14,QWORD PTR [rbx+0x74],0x67646957
   1400294cd:	gs je  0x140029510
   1400294d0:	add    BYTE PTR [rax],al
   1400294d3:	add    BYTE PTR [rax],al
   1400294d5:	add    BYTE PTR [rax],al
   1400294d7:	add    BYTE PTR [rax],dh
   1400294d9:	enter  0x4001,0x1
	...
   1400294e5:	add    BYTE PTR [rax],al
   1400294e7:	add    BYTE PTR [rsi],ch
   1400294e9:	(bad)  
   1400294ea:	push   r14
   1400294ec:	push   rcx
   1400294ed:	imul   r14,QWORD PTR [rbx+0x74],0x77656956
   1400294f5:	rex
   1400294f6:	add    BYTE PTR [rax],sil
   1400294f9:	enter  0x4001,0x1
	...
   140029505:	add    BYTE PTR [rax],al
   140029507:	add    BYTE PTR [rsi],ch
   140029509:	(bad)  
   14002950a:	push   r14
   14002950c:	push   rax
   14002950d:	(bad)  
   14002950e:	je     0x140029578
   140029510:	push   rax
   140029511:	(bad)  
   140029512:	addr32 gs rex
   140029515:	add    BYTE PTR [rax],al
   140029518:	(bad)  
   140029519:	push   rdi
   14002951a:	add    DWORD PTR [rax+0x1],eax
   14002951d:	add    BYTE PTR [rax],al
   14002951f:	add    BYTE PTR [rax],dh
   140029521:	enter  0x4001,0x1
	...
   14002952d:	add    BYTE PTR [rax],al
   14002952f:	add    BYTE PTR [rsi],ch
   140029531:	(bad)  
   140029532:	push   r14
   140029534:	imul   r13d,DWORD PTR [rbp+r12*2+0x73],0x65676150
   14002953d:	rex
   14002953e:	add    BYTE PTR [rax+0x57],spl
   140029542:	add    DWORD PTR [rax+0x1],eax
   140029545:	add    BYTE PTR [rax],al
   140029547:	add    BYTE PTR [rax],dh
   140029549:	enter  0x4001,0x1
	...
   140029555:	add    BYTE PTR [rax],al
   140029557:	add    BYTE PTR [rsi],ch
   140029559:	(bad)  
   14002955a:	push   r14
   14002955c:	rex.WRXB jne 0x1400295d3
   14002955f:	jo     0x1400295d6
   140029561:	je     0x1400295b3
   140029563:	(bad)  
   140029564:	addr32 gs rex
   140029567:	add    BYTE PTR [rax],al
   14002956a:	add    BYTE PTR [rax],al
   14002956c:	add    BYTE PTR [rax],al
   14002956e:	add    BYTE PTR [rax],al
   140029570:	(bad)  
   140029571:	push   rdi
   140029572:	add    DWORD PTR [rax+0x1],eax
   140029575:	add    BYTE PTR [rax],al
   140029577:	add    BYTE PTR [rax],dh
   140029579:	enter  0x4001,0x1
	...
   140029585:	add    BYTE PTR [rax],al
   140029587:	add    BYTE PTR [rsi],ch
   140029589:	(bad)  
   14002958a:	push   r14
   14002958c:	rex.RX imul r13d,DWORD PTR [rsi+0x69],0x61506873
   140029594:	addr32 gs rex
   140029597:	add    BYTE PTR [rax],al
   14002959a:	add    BYTE PTR [rax],al
   14002959c:	add    BYTE PTR [rax],al
   14002959e:	add    BYTE PTR [rax],al
   1400295a0:	xor    al,cl
   1400295a2:	add    DWORD PTR [rax+0x1],eax
	...
   1400295ad:	add    BYTE PTR [rax],al
   1400295af:	add    BYTE PTR [rsi],ch
   1400295b1:	(bad)  
   1400295b2:	push   r14
   1400295b4:	push   rcx
   1400295b5:	push   rsi
   1400295b6:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400295b8:	js     0x140029606
   1400295ba:	(bad)  
   1400295bb:	jns    0x14002962c
   1400295bd:	jne    0x140029633
   1400295bf:	rex
   1400295c0:	add    BYTE PTR [rax],al
   1400295c3:	add    BYTE PTR [rax],al
   1400295c5:	add    BYTE PTR [rax],al
   1400295c7:	add    BYTE PTR [rax],dh
   1400295c9:	enter  0x4001,0x1
	...
   1400295d5:	add    BYTE PTR [rax],al
   1400295d7:	add    BYTE PTR [rsi],ch
   1400295d9:	(bad)  
   1400295da:	push   r14
   1400295dc:	push   rcx
   1400295dd:	push   rsp
   1400295de:	gs js  0x140029655
   1400295e1:	rex.RB
   1400295e2:	imul   esi,DWORD PTR fs:[rax+rax*2+0x40],0x1576000
   1400295eb:	rex add DWORD PTR [rax],eax
   1400295ee:	add    BYTE PTR [rax],al
   1400295f0:	(bad)  
   1400295f1:	push   rdi
   1400295f2:	add    DWORD PTR [rax+0x1],eax
   1400295f5:	add    BYTE PTR [rax],al
   1400295f7:	add    BYTE PTR [rax+0x57],ah
   1400295fa:	add    DWORD PTR [rax+0x1],eax
   1400295fd:	add    BYTE PTR [rax],al
   1400295ff:	add    BYTE PTR [rax+0x57],ah
   140029602:	add    DWORD PTR [rax+0x1],eax
   140029605:	add    BYTE PTR [rax],al
   140029607:	add    BYTE PTR [rax],dh
   140029609:	enter  0x4001,0x1
	...
   140029615:	add    BYTE PTR [rax],al
   140029617:	add    BYTE PTR [rsi],ch
   140029619:	(bad)  
   14002961a:	push   r14
   14002961c:	rex.W
   14002961d:	gs ins BYTE PTR es:[rdi],dx
   14002961f:	jo     0x140029678
   140029621:	imul   ebp,DWORD PTR [rsi+0x64],0x4040776f
	...
   140029630:	(bad)  
   140029631:	push   rdi
   140029632:	add    DWORD PTR [rax+0x1],eax
   140029635:	add    BYTE PTR [rax],al
   140029637:	add    BYTE PTR [rax+0x57],ah
   14002963a:	add    DWORD PTR [rax+0x1],eax
	...
   140029645:	add    BYTE PTR [rax],al
   140029647:	add    BYTE PTR [rax-0x40],ah
   14002964a:	add    DWORD PTR [rax+0x1],eax
   14002964d:	add    BYTE PTR [rax],al
   14002964f:	add    BYTE PTR [rax-0x3f],dl
   140029652:	add    DWORD PTR [rax+0x1],eax
   140029655:	add    BYTE PTR [rax],al
   140029657:	add    BYTE PTR [rax],dh
   140029659:	(bad)  
   14002965a:	add    DWORD PTR [rax+0x1],eax
	...
   14002966d:	add    BYTE PTR [rax],al
   14002966f:	add    BYTE PTR [rax+0x57],ah
   140029672:	add    DWORD PTR [rax+0x1],eax
	...
   14002967d:	add    BYTE PTR [rax],al
   14002967f:	add    al,dh
   140029681:	rol    DWORD PTR [rcx],0x40
   140029684:	add    DWORD PTR [rax],eax
   140029686:	add    BYTE PTR [rax],al
   140029688:	push   rax
   140029689:	ret    0x4001
   14002968c:	add    DWORD PTR [rax],eax
   14002968e:	add    BYTE PTR [rax],al
   140029690:	nop
   140029691:	(bad)  
   140029692:	add    DWORD PTR [rax+0x1],eax
	...
   1400296a5:	add    BYTE PTR [rax],al
   1400296a7:	add    BYTE PTR [rax+0x57],ah
   1400296aa:	add    DWORD PTR [rax+0x1],eax
	...
   1400296b5:	add    BYTE PTR [rax],al
   1400296b7:	add    BYTE PTR [rax+0x14001c2],ch
   1400296bd:	add    BYTE PTR [rax],al
   1400296bf:	add    al,dl
   1400296c1:	ret    0x4001
   1400296c4:	add    DWORD PTR [rax],eax
   1400296c6:	add    BYTE PTR [rax],al
   1400296c8:	nop
   1400296c9:	sbb    BYTE PTR [rcx],al
   1400296cb:	rex add DWORD PTR [rax],eax
	...
   1400296de:	add    BYTE PTR [rax],al
   1400296e0:	(bad)  
   1400296e1:	push   rdi
   1400296e2:	add    DWORD PTR [rax+0x1],eax
	...
   1400296ed:	add    BYTE PTR [rax],al
   1400296ef:	add    BYTE PTR [rax],dl
   1400296f1:	ret    
   1400296f2:	add    DWORD PTR [rax+0x1],eax
   1400296f5:	add    BYTE PTR [rax],al
   1400296f7:	add    BYTE PTR [rax+0x14001c3],ah
   1400296fd:	add    BYTE PTR [rax],al
   1400296ff:	add    BYTE PTR [rax],ah
   140029701:	sbb    DWORD PTR [rcx],eax
   140029703:	rex add DWORD PTR [rax],eax
	...
   140029716:	add    BYTE PTR [rax],al
   140029718:	(bad)  
   140029719:	push   rdi
   14002971a:	add    DWORD PTR [rax+0x1],eax
	...
   140029725:	add    BYTE PTR [rax],al
   140029727:	add    BYTE PTR [rax],dl
   140029729:	(bad)
   14002972d:	add    BYTE PTR [rax],al
   14002972f:	add    BYTE PTR [rax+0x14001c4],ah
   140029735:	add    BYTE PTR [rax],al
   140029737:	add    BYTE PTR [rax+0x1a],al
   14002973a:	add    DWORD PTR [rax+0x1],eax
	...
   14002974d:	add    BYTE PTR [rax],al
   14002974f:	add    BYTE PTR [rax+0x57],ah
   140029752:	add    DWORD PTR [rax+0x1],eax
	...
   140029761:	(bad)
   140029764:	add    DWORD PTR [rax],eax
   140029766:	add    BYTE PTR [rax],al
   140029768:	add    ch,0x1
   14002976b:	rex add DWORD PTR [rax],eax
   14002976e:	add    BYTE PTR [rax],al
   140029770:	push   rax
   140029771:	sbb    eax,DWORD PTR [rcx]
   140029773:	rex add DWORD PTR [rax],eax
	...
   140029786:	add    BYTE PTR [rax],al
   140029788:	(bad)  
   140029789:	push   rdi
   14002978a:	add    DWORD PTR [rax+0x1],eax
	...
   140029795:	add    BYTE PTR [rax],al
   140029797:	add    al,dh
   140029799:	(bad)
   14002979c:	add    DWORD PTR [rax],eax
   14002979e:	add    BYTE PTR [rax],al
   1400297a0:	add    dh,0x1
   1400297a3:	rex add DWORD PTR [rax],eax
   1400297a6:	add    BYTE PTR [rax],al
   1400297a8:	jo     0x1400297c6
   1400297aa:	add    DWORD PTR [rax+0x1],eax
	...
   1400297bd:	add    BYTE PTR [rax],al
   1400297bf:	add    BYTE PTR [rax+0x57],ah
   1400297c2:	add    DWORD PTR [rax+0x1],eax
	...
   1400297cd:	add    BYTE PTR [rax],al
   1400297cf:	add    al,dh
   1400297d1:	mov    BYTE PTR [rcx],0x40
   1400297d4:	add    DWORD PTR [rax],eax
   1400297d6:	add    BYTE PTR [rax],al
   1400297d8:	sbb    bh,al
   1400297da:	add    DWORD PTR [rax+0x1],eax
   1400297dd:	add    BYTE PTR [rax],al
   1400297df:	add    BYTE PTR [rax+0x1400118],dl
	...
   1400297f5:	add    BYTE PTR [rax],al
   1400297f7:	add    BYTE PTR [rax+0x57],ah
   1400297fa:	add    DWORD PTR [rax+0x1],eax
	...
   140029805:	add    BYTE PTR [rax],al
   140029807:	add    BYTE PTR [rax-0x39],bl
   14002980a:	add    DWORD PTR [rax+0x1],eax
   14002980d:	add    BYTE PTR [rax],al
   14002980f:	add    BYTE PTR [rax+0x14001c7],al
   140029815:	add    BYTE PTR [rax],al
   140029817:	add    BYTE PTR [rax+0x1400118],dl
	...
   14002982d:	add    BYTE PTR [rax],al
   14002982f:	add    BYTE PTR [rax+0x57],ah
   140029832:	add    DWORD PTR [rax+0x1],eax
	...
   14002983d:	add    BYTE PTR [rax],al
   14002983f:	add    al,al
   140029841:	mov    DWORD PTR [rcx],0x140
   140029847:	add    al,ch
   140029849:	mov    DWORD PTR [rcx],0x140
   14002984f:	add    BYTE PTR [rax+0x1400118],dl
	...
   140029865:	add    BYTE PTR [rax],al
   140029867:	add    BYTE PTR [rax],dh
   140029869:	enter  0x4001,0x1
	...
   140029875:	add    BYTE PTR [rax],al
   140029877:	add    BYTE PTR [rsi],ch
   140029879:	(bad)  
   14002987a:	push   r14
   14002987c:	je     0x1400298f7
   14002987e:	jo     0x1400298e5
   140029880:	pop    rdi
   140029881:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140029888:	(bad)  
   140029889:	(bad)  
   14002988a:	(bad)  
   14002988b:	(bad)  
   14002988c:	(bad)  
   14002988d:	(bad)  
   14002988e:	(bad)  
   14002988f:	(bad)  
   140029890:	(bad)  
   140029891:	(bad)  
   140029892:	(bad)  
   140029893:	inc    DWORD PTR [rcx]
   140029895:	add    BYTE PTR [rax],al
   140029897:	add    BYTE PTR [rdx],dh
   140029899:	movabs ds:0x5dcd00002b992ddf,al
   1400298a2:	and    dl,dl
   1400298a4:	data16 (bad) 
   1400298a6:	(bad)  
   1400298a7:	jmp    QWORD PTR [rax+0x57]
   1400298aa:	add    DWORD PTR [rax+0x1],eax
   1400298ad:	add    BYTE PTR [rax],al
   1400298af:	add    BYTE PTR [rax+0x57],ah
   1400298b2:	add    DWORD PTR [rax+0x1],eax
	...

Disassembly of section .pdata:

000000014002a000 <.pdata>:
   14002a000:	add    BYTE PTR [rax],dl
   14002a002:	add    BYTE PTR [rax],al
   14002a004:	mov    BYTE PTR [rax],dl
   14002a006:	add    BYTE PTR [rax],al
   14002a008:	lock loope 0x14002a00c
   14002a00b:	add    BYTE PTR [rax-0x6efffff0],dl
   14002a011:	adc    al,0x0
   14002a013:	add    ah,bh
   14002a015:	loope  0x14002a018
   14002a017:	add    BYTE PTR [rax+0x1d000014],ah
   14002a01d:	adc    eax,0xe2300000
   14002a022:	add    DWORD PTR [rax],eax
   14002a024:	sbb    eax,0xde000015
   14002a029:	adc    eax,0xe21c0000
   14002a02e:	add    DWORD PTR [rax],eax
   14002a030:	ficom  WORD PTR [rip+0x15f60000]        # 0x155f8a036
   14002a036:	add    BYTE PTR [rax],al
   14002a038:	or     al,0xe2
   14002a03a:	add    DWORD PTR [rax],eax
   14002a03c:	add    BYTE PTR [rsi],dl
   14002a03e:	add    BYTE PTR [rax],al
   14002a040:	pop    rbp
   14002a041:	(bad)  
   14002a042:	add    BYTE PTR [rax],al
   14002a044:	(bad)  
   14002a045:	loop   0x14002a048
   14002a047:	add    BYTE PTR [rbp+0x16],bl
   14002a04a:	add    BYTE PTR [rax],al
   14002a04c:	xchg   esi,eax
   14002a04d:	(bad)  
   14002a04e:	add    BYTE PTR [rax],al
   14002a050:	rex.WR loop 0x14002a054
   14002a053:	add    BYTE PTR [rsi-0x25ffffea],dl
   14002a059:	(bad)  
   14002a05a:	add    BYTE PTR [rax],al
   14002a05c:	cmp    al,0xe2
   14002a05e:	add    DWORD PTR [rax],eax
   14002a060:	loopne 0x14002a078
   14002a062:	add    BYTE PTR [rax],al
   14002a064:	mov    edx,0x6c000017
   14002a069:	loop   0x14002a06c
   14002a06b:	add    al,al
   14002a06d:	(bad)  
   14002a06e:	add    BYTE PTR [rax],al
   14002a070:	out    0x17,eax
   14002a072:	add    BYTE PTR [rax],al
   14002a074:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a075:	loop   0x14002a078
   14002a077:	add    bh,ah
   14002a079:	(bad)  
   14002a07a:	add    BYTE PTR [rax],al
   14002a07c:	cmp    DWORD PTR [rax],ebx
   14002a07e:	add    BYTE PTR [rax],al
   14002a080:	nop
   14002a081:	loop   0x14002a084
   14002a083:	add    BYTE PTR [rcx],bh
   14002a085:	sbb    BYTE PTR [rax],al
   14002a087:	add    BYTE PTR [rax+rbx*1+0x0],cl
   14002a08b:	add    BYTE PTR [rax+0x500001e2],al
   14002a091:	sbb    BYTE PTR [rax],al
   14002a093:	add    BYTE PTR [rcx+0xc000018],dl
   14002a099:	jmp    0x14002a09c
   14002a09b:	add    BYTE PTR [rax+0x10000018],ah
   14002a0a1:	sbb    DWORD PTR [rax],eax
   14002a0a3:	add    al,al
   14002a0a5:	out    0x1,al
   14002a0a7:	add    BYTE PTR [rax],ah
   14002a0a9:	sbb    DWORD PTR [rax],eax
   14002a0ab:	add    BYTE PTR [rax-0x3fffffe7],al
   14002a0b1:	out    0x1,al
   14002a0b3:	add    BYTE PTR [rax-0x46ffffe7],al
   14002a0b9:	sbb    DWORD PTR [rax],eax
   14002a0bb:	add    ah,bl
   14002a0bd:	loop   0x14002a0c0
   14002a0bf:	add    BYTE PTR [rcx+0x18000019],bh
   14002a0c5:	sbb    al,BYTE PTR [rax]
   14002a0c7:	add    ah,al
   14002a0c9:	loop   0x14002a0cc
   14002a0cb:	add    BYTE PTR [rax],bl
   14002a0cd:	sbb    al,BYTE PTR [rax]
   14002a0cf:	add    BYTE PTR [rsi],ah
   14002a0d1:	sbb    al,BYTE PTR [rax]
   14002a0d3:	add    BYTE PTR [rdx+riz*8+0x1a300001],dh
   14002a0da:	add    BYTE PTR [rax],al
   14002a0dc:	rex.WRB sbb r8b,BYTE PTR [r8]
   14002a0df:	add    BYTE PTR [rax-0x13],dl
   14002a0e2:	add    DWORD PTR [rax],eax
   14002a0e4:	rex.WRB sbb r8b,BYTE PTR [r8]
   14002a0e7:	add    BYTE PTR [rdx-0x7ffffe6],ch
   14002a0ed:	loop   0x14002a0f0
   14002a0ef:	add    BYTE PTR [rdx-0x50ffffe6],ch
   14002a0f5:	sbb    al,BYTE PTR [rax]
   14002a0f7:	add    al,ch
   14002a0f9:	loop   0x14002a0fc
   14002a0fb:	add    BYTE PTR [rax-0x35ffffe6],dh
   14002a101:	sbb    al,BYTE PTR [rax]
   14002a103:	add    BYTE PTR [rbx+riz*8+0x1],dl
   14002a107:	add    dl,cl
   14002a109:	sbb    al,BYTE PTR [rax]
   14002a10b:	add    BYTE PTR [rbx+rbx*1+0x0],ah
   14002a10f:	add    BYTE PTR [rax],bh
   14002a111:	jrcxz  0x14002a114
   14002a113:	add    BYTE PTR [rbx+rbx*1+0x0],ah
   14002a117:	add    BYTE PTR [rdx+0x1b],dh
   14002a11a:	add    BYTE PTR [rax],al
   14002a11c:	and    al,0xe3
   14002a11e:	add    DWORD PTR [rax],eax
   14002a120:	jb     0x14002a13d
   14002a122:	add    BYTE PTR [rax],al
   14002a124:	jnp    0x14002a141
   14002a126:	add    BYTE PTR [rax],al
   14002a128:	adc    al,0xe3
   14002a12a:	add    DWORD PTR [rax],eax
   14002a12c:	sbb    BYTE PTR [rbx],0x0
   14002a12f:	add    BYTE PTR [rsi+0xc00001b],bh
   14002a135:	jmp    0x14002a138
   14002a137:	add    BYTE PTR [rsi+0x500001b],bh
   14002a13d:	sbb    al,0x0
   14002a13f:	add    BYTE PTR [rbx+riz*8+0x1],ch
   14002a143:	add    BYTE PTR [rip+0xb00001c],al        # 0x14b02a165
   14002a149:	sbb    al,0x0
   14002a14b:	add    BYTE PTR [rbx+riz*8+0x1],bl
   14002a14f:	add    BYTE PTR [rax],dl
   14002a151:	sbb    al,0x0
   14002a153:	add    BYTE PTR [rdx+0x1d],cl
   14002a156:	add    BYTE PTR [rax],al
   14002a158:	test   bl,ah
   14002a15a:	add    DWORD PTR [rax],eax
   14002a15c:	push   rax
   14002a15d:	sbb    eax,0x1d790000
   14002a162:	add    BYTE PTR [rax],al
   14002a164:	mov    esp,0x790001e4
   14002a169:	sbb    eax,0x1db20000
   14002a16e:	add    BYTE PTR [rax],al
   14002a170:	lods   al,BYTE PTR ds:[rsi]
   14002a171:	jrcxz  0x14002a174
   14002a173:	add    BYTE PTR [rdx-0x34ffffe3],dh
   14002a179:	sbb    eax,0xe39c0000
   14002a17e:	add    DWORD PTR [rax],eax
   14002a180:	rcr    BYTE PTR [rip+0x1e910000],1        # 0x15e93a186
   14002a186:	add    BYTE PTR [rax],al
   14002a188:	pop    rax
   14002a189:	in     eax,dx
   14002a18a:	add    DWORD PTR [rax],eax
   14002a18c:	movabs al,ds:0xc000001f5d00001e
   14002a195:	out    0x1,al
   14002a197:	add    BYTE PTR [rax+0x1f],ah
   14002a19a:	add    BYTE PTR [rax],al
   14002a19c:	jb     0x14002a1bd
   14002a19e:	add    BYTE PTR [rax],al
   14002a1a0:	and    al,0xe4
   14002a1a2:	add    DWORD PTR [rax],eax
   14002a1a4:	jb     0x14002a1c5
   14002a1a6:	add    BYTE PTR [rax],al
   14002a1a8:	xchg   esp,eax
   14002a1a9:	and    DWORD PTR [rax],eax
   14002a1ab:	add    BYTE PTR [rsp+riz*8],cl
   14002a1ae:	add    DWORD PTR [rax],eax
   14002a1b0:	xchg   esp,eax
   14002a1b1:	and    DWORD PTR [rax],eax
   14002a1b3:	add    ch,dl
   14002a1b5:	and    DWORD PTR [rax],eax
   14002a1b7:	add    al,bh
   14002a1b9:	jrcxz  0x14002a1bc
   14002a1bb:	add    ch,dl
   14002a1bd:	and    DWORD PTR [rax],eax
   14002a1bf:	add    dh,ah
   14002a1c1:	and    DWORD PTR [rax],eax
   14002a1c3:	add    al,ch
   14002a1c5:	jrcxz  0x14002a1c8
   14002a1c7:	add    dh,ah
   14002a1c9:	and    DWORD PTR [rax],eax
   14002a1cb:	add    BYTE PTR [rdx+riz*1],dl
   14002a1ce:	add    BYTE PTR [rax],al
   14002a1d0:	fsub   st,st(3)
   14002a1d2:	add    DWORD PTR [rax],eax
   14002a1d4:	adc    al,0x22
   14002a1d6:	add    BYTE PTR [rax],al
   14002a1d8:	sbb    esp,DWORD PTR [rdx]
   14002a1da:	add    BYTE PTR [rax],al
   14002a1dc:	shl    bl,0x1
   14002a1df:	add    BYTE PTR [rax],ah
   14002a1e1:	and    al,BYTE PTR [rax]
   14002a1e3:	add    BYTE PTR [rcx],ah
   14002a1e5:	and    eax,DWORD PTR [rax]
   14002a1e7:	add    BYTE PTR [rax],dh
   14002a1e9:	in     al,0x1
   14002a1eb:	add    BYTE PTR [rax],dh
   14002a1ed:	and    eax,DWORD PTR [rax]
   14002a1ef:	add    BYTE PTR [rcx+0x44000027],al
   14002a1f5:	in     al,0x1
   14002a1f7:	add    BYTE PTR [rax-0x17ffffd9],ah
   14002a1fd:	(bad)  
   14002a1fe:	add    BYTE PTR [rax],al
   14002a200:	shl    dh,0x1
   14002a203:	add    al,dh
   14002a205:	(bad)  
   14002a206:	add    BYTE PTR [rax],al
   14002a208:	sbb    BYTE PTR [rax],ch
   14002a20a:	add    BYTE PTR [rax],al
   14002a20c:	mov    ah,ah
   14002a20e:	add    DWORD PTR [rax],eax
   14002a210:	sbb    BYTE PTR [rax],ch
   14002a212:	add    BYTE PTR [rax],al
   14002a214:	js     0x14002a24b
   14002a216:	add    BYTE PTR [rax],al
   14002a218:	fs in  al,0x1
   14002a21b:	add    BYTE PTR [rax+0x35],bh
   14002a21e:	add    BYTE PTR [rax],al
   14002a220:	or     esi,DWORD PTR [rsi]
   14002a222:	add    BYTE PTR [rax],al
   14002a224:	push   rsp
   14002a225:	in     al,0x1
   14002a227:	add    BYTE PTR [rax],dl
   14002a229:	add    BYTE PTR ss:[rax],al
   14002a22c:	cmp    DWORD PTR [rsi],esi
   14002a22e:	add    BYTE PTR [rax],al
   14002a230:	mov    esp,0x390001e4
   14002a235:	add    BYTE PTR ss:[rax],al
   14002a238:	jno    0x14002a270
   14002a23a:	add    BYTE PTR [rax],al
   14002a23c:	test   al,0xe4
   14002a23e:	add    DWORD PTR [rax],eax
   14002a240:	jno    0x14002a278
   14002a242:	add    BYTE PTR [rax],al
   14002a244:	mov    dh,BYTE PTR [rsi]
   14002a246:	add    BYTE PTR [rax],al
   14002a248:	cwde   
   14002a249:	in     al,0x1
   14002a24b:	add    BYTE PTR [rax+0x62000036],dl
   14002a251:	rex.WB add BYTE PTR [r8],al
   14002a254:	int3   
   14002a255:	in     al,0x1
   14002a257:	add    BYTE PTR [rax+0x49],dh
   14002a25a:	add    BYTE PTR [rax],al
   14002a25c:	rex.WX add BYTE PTR ds:[rax],al
   14002a260:	jl     0x14002a249
   14002a262:	add    DWORD PTR [rax],eax
   14002a264:	rex
   14002a265:	rex.WX add BYTE PTR [rax],al
   14002a268:	int3   
   14002a269:	rex.WRX add BYTE PTR [rax],r8b
   14002a26c:	in     al,0xe4
   14002a26e:	add    DWORD PTR [rax],eax
   14002a270:	ror    BYTE PTR [rsi+0x0],1
   14002a273:	add    BYTE PTR [rax],al
   14002a275:	rex.WRXB add BYTE PTR [r8],r8b
   14002a278:	shl    dh,0x1
   14002a27b:	add    BYTE PTR [rax],al
   14002a27d:	rex.WRXB add BYTE PTR [r8],r8b
   14002a280:	xor    BYTE PTR [rdi+0x0],cl
   14002a283:	add    al,al
   14002a285:	out    0x1,al
   14002a287:	add    BYTE PTR [rax],dh
   14002a289:	rex.WRXB add BYTE PTR [r8],r8b
   14002a28c:	(bad)  
   14002a28d:	rex.WRXB add BYTE PTR [r8],r8b
   14002a290:	shl    dh,0x1
   14002a293:	add    BYTE PTR [rax+0x4f],ah
   14002a296:	add    BYTE PTR [rax],al
   14002a298:	nop
   14002a299:	rex.WRXB add BYTE PTR [r8],r8b
   14002a29c:	shl    dh,0x1
   14002a29f:	add    BYTE PTR [rax-0x3fffffb1],dl
   14002a2a5:	rex.WRXB add BYTE PTR [r8],r8b
   14002a2a8:	shl    dh,0x1
   14002a2ab:	add    al,al
   14002a2ad:	rex.WRXB add BYTE PTR [r8],r8b
   14002a2b0:	lock rex.WRXB add BYTE PTR [r8],r8b
   14002a2b4:	shl    dh,0x1
   14002a2b7:	add    BYTE PTR [rax+0x50],al
   14002a2ba:	add    BYTE PTR [rax],al
   14002a2bc:	movabs ds:0xb00001e4f8000051,eax
   14002a2c5:	push   rcx
   14002a2c6:	add    BYTE PTR [rax],al
   14002a2c8:	mov    dl,BYTE PTR [rdx+0x0]
   14002a2cb:	add    BYTE PTR [riz*8+0x52900001],al
   14002a2d2:	add    BYTE PTR [rax],al
   14002a2d4:	jle    0x14002a329
   14002a2d6:	add    BYTE PTR [rax],al
   14002a2d8:	xor    ch,ah
   14002a2da:	add    DWORD PTR [rax],eax
   14002a2dc:	jle    0x14002a331
   14002a2de:	add    BYTE PTR [rax],al
   14002a2e0:	rex.WRB push r12
   14002a2e2:	add    BYTE PTR [rax],al
   14002a2e4:	sbb    al,0xe5
   14002a2e6:	add    DWORD PTR [rax],eax
   14002a2e8:	rex.WRB push r12
   14002a2ea:	add    BYTE PTR [rax],al
   14002a2ec:	repnz push rsp
   14002a2ee:	add    BYTE PTR [rax],al
   14002a2f0:	or     al,0xe5
   14002a2f2:	add    DWORD PTR [rax],eax
   14002a2f4:	add    BYTE PTR [rbp+0x0],dl
   14002a2f7:	add    dh,cl
   14002a2f9:	push   rbp
   14002a2fa:	add    BYTE PTR [rax],al
   14002a2fc:	jl     0x14002a2e5
   14002a2fe:	add    DWORD PTR [rax],eax
   14002a300:	rcl    BYTE PTR [rbp+0x0],1
   14002a303:	add    BYTE PTR [rbx+0x56],bl
   14002a306:	add    BYTE PTR [rax],al
   14002a308:	push   rsp
   14002a309:	out    dx,al
   14002a30a:	add    DWORD PTR [rax],eax
   14002a30c:	(bad)  
   14002a30d:	push   rsi
   14002a30e:	add    BYTE PTR [rax],al
   14002a310:	movabs eax,ds:0xb00001e53800005a
   14002a319:	pop    rdx
   14002a31a:	add    BYTE PTR [rax],al
   14002a31c:	rex.RXB pop r13
   14002a31e:	add    BYTE PTR [rax],al
   14002a320:	push   rsp
   14002a321:	in     eax,0x1
   14002a323:	add    BYTE PTR [rax+0x5d],dl
   14002a326:	add    BYTE PTR [rax],al
   14002a328:	(bad)  
   14002a329:	pop    rdi
   14002a32a:	add    BYTE PTR [rax],al
   14002a32c:	adc    bh,ah
   14002a32e:	add    DWORD PTR [rax],eax
   14002a330:	adc    BYTE PTR [rdi+0x0],bl
   14002a333:	add    al,ah
   14002a335:	(bad)  
   14002a336:	add    BYTE PTR [rax],al
   14002a338:	jl     0x14002a321
   14002a33a:	add    DWORD PTR [rax],eax
   14002a33c:	loopne 0x14002a39e
   14002a33e:	add    BYTE PTR [rax],al
   14002a340:	rex.WR (bad) 
   14002a342:	add    BYTE PTR [rax],al
   14002a344:	fs in  eax,0x1
   14002a347:	add    BYTE PTR [rax+0x61],dl
   14002a34a:	add    BYTE PTR [rax],al
   14002a34c:	jl     0x14002a3af
   14002a34e:	add    BYTE PTR [rax],al
   14002a350:	push   rax
   14002a351:	in     eax,dx
   14002a352:	add    DWORD PTR [rax],eax
   14002a354:	and    BYTE PTR [rcx+0x0],0x0
   14002a358:	and    ch,BYTE PTR [rax+0x0]
   14002a35b:	add    BYTE PTR [rbp+riz*8+0x1],ch
   14002a35f:	add    BYTE PTR [rax],dh
   14002a361:	push   0x68600000
   14002a366:	add    BYTE PTR [rax],al
   14002a368:	shl    dh,0x1
   14002a36b:	add    BYTE PTR [rax+0x68],ah
   14002a36e:	add    BYTE PTR [rax],al
   14002a370:	nop
   14002a371:	push   0xffffffffe6c00000
   14002a376:	add    DWORD PTR [rax],eax
   14002a378:	nop
   14002a379:	push   0x68c00000
   14002a37e:	add    BYTE PTR [rax],al
   14002a380:	shl    dh,0x1
   14002a383:	add    al,dh
   14002a385:	push   0x6a090000
   14002a38a:	add    BYTE PTR [rax],al
   14002a38c:	push   rsp
   14002a38d:	in     eax,0x1
   14002a38f:	add    BYTE PTR [rax],dl
   14002a391:	push   0x0
   14002a393:	add    BYTE PTR [rax+0x6a],al
   14002a396:	add    BYTE PTR [rax],al
   14002a398:	shl    dh,0x1
   14002a39b:	add    BYTE PTR [rax+0x6a],al
   14002a39e:	add    BYTE PTR [rax],al
   14002a3a0:	scas   al,BYTE PTR es:[rdi]
   14002a3a1:	push   0x0
   14002a3a3:	add    ah,dh
   14002a3a5:	out    0x1,eax
   14002a3a7:	add    BYTE PTR [rax-0x2effff96],dh
   14002a3ad:	push   0x0
   14002a3af:	add    BYTE PTR [rbx+rbp*8],cl
   14002a3b2:	add    DWORD PTR [rax],eax
   14002a3b4:	loopne 0x14002a420
   14002a3b6:	add    BYTE PTR [rax],al
   14002a3b8:	stc    
   14002a3b9:	push   0x0
   14002a3bb:	add    BYTE PTR [rax-0x18],ah
   14002a3be:	add    DWORD PTR [rax],eax
   14002a3c0:	stc    
   14002a3c1:	push   0x0
   14002a3c3:	add    BYTE PTR [rbp+0x6b],ch
   14002a3c6:	add    BYTE PTR [rax],al
   14002a3c8:	xchg   esp,eax
   14002a3c9:	in     eax,0x1
   14002a3cb:	add    BYTE PTR [rbp+0x6b],ch
   14002a3ce:	add    BYTE PTR [rax],al
   14002a3d0:	outs   dx,DWORD PTR ds:[rsi]
   14002a3d1:	imul   eax,DWORD PTR [rax],0x0
   14002a3d4:	test   ch,ah
   14002a3d6:	add    DWORD PTR [rax],eax
   14002a3d8:	jo     0x14002a445
   14002a3da:	add    BYTE PTR [rax],al
   14002a3dc:	fsubr  DWORD PTR [rbx+0x0]
   14002a3df:	add    al,dl
   14002a3e1:	in     eax,0x1
   14002a3e3:	add    al,bl
   14002a3e5:	imul   eax,DWORD PTR [rax],0x0
   14002a3e8:	pop    rax
   14002a3e9:	ins    BYTE PTR es:[rdi],dx
   14002a3ea:	add    BYTE PTR [rax],al
   14002a3ec:	mov    esp,0x580001e5
   14002a3f1:	ins    BYTE PTR es:[rdi],dx
   14002a3f2:	add    BYTE PTR [rax],al
   14002a3f4:	jb     0x14002a462
   14002a3f6:	add    BYTE PTR [rax],al
   14002a3f8:	lods   al,BYTE PTR ds:[rsi]
   14002a3f9:	in     eax,0x1
   14002a3fb:	add    BYTE PTR [rax-0x9ffff94],al
   14002a401:	ins    BYTE PTR es:[rdi],dx
   14002a402:	add    BYTE PTR [rax],al
   14002a404:	shl    dh,0x1
   14002a407:	add    BYTE PTR [rax],al
   14002a409:	ins    DWORD PTR es:[rdi],dx
   14002a40a:	add    BYTE PTR [rax],al
   14002a40c:	and    DWORD PTR [rbp+0x0],ebp
   14002a40f:	add    BYTE PTR [rax+0x210001e8],bh
   14002a415:	ins    DWORD PTR es:[rdi],dx
   14002a416:	add    BYTE PTR [rax],al
   14002a418:	rex.WRX ins DWORD PTR es:[rdi],dx
   14002a41a:	add    BYTE PTR [rax],al
   14002a41c:	sbb    dh,ah
   14002a41e:	add    DWORD PTR [rax],eax
   14002a420:	rex.WRX ins DWORD PTR es:[rdi],dx
   14002a422:	add    BYTE PTR [rax],al
   14002a424:	(bad)  
   14002a425:	ins    DWORD PTR es:[rdi],dx
   14002a426:	add    BYTE PTR [rax],al
   14002a428:	add    al,0xe6
   14002a42a:	add    DWORD PTR [rax],eax
   14002a42c:	(bad)  
   14002a42d:	ins    DWORD PTR es:[rdi],dx
   14002a42e:	add    BYTE PTR [rax],al
   14002a430:	push   0x6e
   14002a432:	add    BYTE PTR [rax],al
   14002a434:	hlt    
   14002a435:	in     eax,0x1
   14002a437:	add    BYTE PTR [rdx+0x6e],ch
   14002a43a:	add    BYTE PTR [rax],al
   14002a43c:	jne    0x14002a4ac
   14002a43e:	add    BYTE PTR [rax],al
   14002a440:	in     al,0xe5
   14002a442:	add    DWORD PTR [rax],eax
   14002a444:	sub    BYTE PTR [rsi+0x0],0x0
   14002a448:	pop    rbx
   14002a449:	outs   dx,DWORD PTR ds:[rsi]
   14002a44a:	add    BYTE PTR [rax],al
   14002a44c:	xor    dh,ah
   14002a44e:	add    DWORD PTR [rax],eax
   14002a450:	(bad)  
   14002a451:	outs   dx,DWORD PTR ds:[rsi]
   14002a452:	add    BYTE PTR [rax],al
   14002a454:	rex.WR jno 0x14002a457
   14002a457:	add    BYTE PTR [rax],dl
   14002a459:	out    0x1,eax
   14002a45b:	add    BYTE PTR [rax+0x71],ah
   14002a45e:	add    BYTE PTR [rax],al
   14002a460:	xor    DWORD PTR [rcx+0x0],0x1eb0c00
   14002a467:	add    BYTE PTR [rax-0x31ffff8f],dl
   14002a46d:	jno    0x14002a46f
   14002a46f:	add    BYTE PTR [rbx+rbp*8],cl
   14002a472:	add    DWORD PTR [rax],eax
   14002a474:	(bad)  
   14002a475:	jno    0x14002a477
   14002a477:	add    bl,ch
   14002a479:	jno    0x14002a47b
   14002a47b:	add    BYTE PTR [rax-0x1a],bh
   14002a47e:	add    DWORD PTR [rax],eax
   14002a480:	jmp    0x14002a4f3
   14002a482:	add    BYTE PTR [rax],al
   14002a484:	and    DWORD PTR [rdx+0x0],esi
   14002a487:	add    BYTE PTR [rsi+riz*8+0x1],ah
   14002a48b:	add    BYTE PTR [rcx],ah
   14002a48d:	jb     0x14002a48f
   14002a48f:	add    BYTE PTR [rdx+rsi*2],dh
   14002a492:	add    BYTE PTR [rax],al
   14002a494:	push   rsp
   14002a495:	out    0x1,al
   14002a497:	add    BYTE PTR [rdx+rsi*2],dh
   14002a49a:	add    BYTE PTR [rax],al
   14002a49c:	cmp    dh,BYTE PTR [rdx+0x0]
   14002a49f:	add    BYTE PTR [rsi+riz*8+0x1],al
   14002a4a3:	add    BYTE PTR [rax+0x72],al
   14002a4a6:	add    BYTE PTR [rax],al
   14002a4a8:	stos   BYTE PTR es:[rdi],al
   14002a4a9:	jb     0x14002a4ab
   14002a4ab:	add    al,al
   14002a4ad:	out    0x1,al
   14002a4af:	add    BYTE PTR [rax-0x56ffff8e],dh
   14002a4b5:	test   DWORD PTR [rax],eax
   14002a4b7:	add    BYTE PTR [rax-0x4ffffe1a],dl
   14002a4bd:	test   DWORD PTR [rax],eax
   14002a4bf:	add    BYTE PTR [rdx+0x7c000086],bh
   14002a4c5:	out    0x1,eax
   14002a4c7:	add    al,al
   14002a4c9:	xchg   BYTE PTR [rax],al
   14002a4cb:	add    BYTE PTR [rdi+rax*4],dl
   14002a4ce:	add    BYTE PTR [rax],al
   14002a4d0:	shl    dh,0x1
   14002a4d3:	add    BYTE PTR [rax],ah
   14002a4d5:	xchg   DWORD PTR [rax],eax
   14002a4d7:	add    BYTE PTR [rax-0x57ffff74],dl
   14002a4dd:	out    0x1,al
   14002a4df:	add    BYTE PTR [rax-0x3fffff74],dl
   14002a4e5:	mov    WORD PTR [rax],es
   14002a4e7:	add    al,al
   14002a4e9:	out    0x1,al
   14002a4eb:	add    al,al
   14002a4ed:	mov    WORD PTR [rax],es
   14002a4ef:	add    al,dh
   14002a4f1:	mov    WORD PTR [rax],es
   14002a4f3:	add    al,al
   14002a4f5:	out    0x1,al
   14002a4f7:	add    BYTE PTR [rax],dl
   14002a4f9:	lea    eax,[rax]
   14002a4fb:	add    BYTE PTR [rdi],ch
   14002a4fd:	pop    QWORD PTR [rax]
   14002a4ff:	add    BYTE PTR [rbp+riz*8+0x1],dl
   14002a503:	add    BYTE PTR [rax-0x71],al
   14002a506:	add    BYTE PTR [rax],al
   14002a508:	jo     0x14002a499
   14002a50a:	add    BYTE PTR [rax],al
   14002a50c:	shl    dh,0x1
   14002a50f:	add    BYTE PTR [rax-0x71],dh
   14002a512:	add    BYTE PTR [rax],al
   14002a514:	mov    dh,0x90
   14002a516:	add    BYTE PTR [rax],al
   14002a518:	jl     0x14002a501
   14002a51a:	add    DWORD PTR [rax],eax
   14002a51c:	rcl    BYTE PTR [rax-0x6f270000],0x0
   14002a523:	add    al,dh
   14002a525:	out    0x1,al
   14002a527:	add    cl,bl
   14002a529:	nop
   14002a52a:	add    BYTE PTR [rax],al
   14002a52c:	adc    DWORD PTR [rcx-0x19240000],edx
   14002a532:	add    DWORD PTR [rax],eax
   14002a534:	adc    DWORD PTR [rcx-0x6ee40000],edx
   14002a53a:	add    BYTE PTR [rax],al
   14002a53c:	int3   
   14002a53d:	out    0x1,al
   14002a53f:	add    BYTE PTR [rax],ah
   14002a541:	xchg   ecx,eax
   14002a542:	add    BYTE PTR [rax],al
   14002a544:	jb     0x14002a4d7
   14002a546:	add    BYTE PTR [rax],al
   14002a548:	or     al,0xeb
   14002a54a:	add    DWORD PTR [rax],eax
   14002a54c:	adc    BYTE PTR [rcx-0x675c0000],0x0
   14002a553:	add    ah,bh
   14002a555:	out    0x1,al
   14002a557:	add    BYTE PTR [rax-0x1fffff68],dh
   14002a55d:	cwde   
   14002a55e:	add    BYTE PTR [rax],al
   14002a560:	shl    dh,0x1
   14002a563:	add    al,dh
   14002a565:	cwde   
   14002a566:	add    BYTE PTR [rax],al
   14002a568:	ficomp WORD PTR [rdx-0x1b080000]
   14002a56e:	add    DWORD PTR [rax],eax
   14002a570:	loopne 0x14002a50c
   14002a572:	add    BYTE PTR [rax],al
   14002a574:	xchg   BYTE PTR [rbx-0x18f00000],bl
   14002a57a:	add    DWORD PTR [rax],eax
   14002a57c:	nop
   14002a57d:	fwait
   14002a57e:	add    BYTE PTR [rax],al
   14002a580:	mov    esp,0xb800009b
   14002a585:	call   0xdbbea58b
   14002a58a:	add    BYTE PTR [rax],al
   14002a58c:	push   rbp
   14002a58d:	pushf  
   14002a58e:	add    BYTE PTR [rax],al
   14002a590:	sub    bh,ah
   14002a592:	add    DWORD PTR [rax],eax
   14002a594:	push   rbp
   14002a595:	pushf  
   14002a596:	add    BYTE PTR [rax],al
   14002a598:	(bad)  
   14002a599:	pushf  
   14002a59a:	add    BYTE PTR [rax],al
   14002a59c:	sbb    bh,ah
   14002a59e:	add    DWORD PTR [rax],eax
   14002a5a0:	(bad)  
   14002a5a1:	pushf  
   14002a5a2:	add    BYTE PTR [rax],al
   14002a5a4:	(bad)  
   14002a5a6:	add    BYTE PTR [rax],al
   14002a5a8:	cmp    al,0xe7
   14002a5aa:	add    DWORD PTR [rax],eax
   14002a5ac:	jo     0x14002a54f
   14002a5ae:	add    BYTE PTR [rax],al
   14002a5b0:	jp     0x14002a554
   14002a5b2:	add    BYTE PTR [rax],al
   14002a5b4:	jl     0x14002a59d
   14002a5b6:	add    DWORD PTR [rax],eax
   14002a5b8:	and    BYTE PTR [rdx-0x58a40000],0x0
   14002a5bf:	add    BYTE PTR [rdi+riz*8+0x1],dl
   14002a5c3:	add    BYTE PTR [rax-0x59],ah
   14002a5c6:	add    BYTE PTR [rax],al
   14002a5c8:	repz test al,0x0
   14002a5cb:	add    BYTE PTR [rax],dl
   14002a5cd:	out    0x1,eax
   14002a5cf:	add    BYTE PTR [rax],dl
   14002a5d1:	test   eax,0xa92e0000
   14002a5d6:	add    BYTE PTR [rax],al
   14002a5d8:	or     al,0xeb
   14002a5da:	add    DWORD PTR [rax],eax
   14002a5dc:	xor    BYTE PTR [rcx-0x56ab0000],ch
   14002a5e2:	add    BYTE PTR [rax],al
   14002a5e4:	or     al,0xeb
   14002a5e6:	add    DWORD PTR [rax],eax
   14002a5e8:	(bad)  
   14002a5e9:	test   eax,0xa9a50000
   14002a5ee:	add    BYTE PTR [rax],al
   14002a5f0:	shl    dh,0x1
   14002a5f3:	add    BYTE PTR [rax-0x6ffff57],dh
   14002a5f9:	test   eax,0xe6c00000
   14002a5fe:	add    DWORD PTR [rax],eax
   14002a600:	add    BYTE PTR [rdx-0x526b0000],ch
   14002a606:	add    BYTE PTR [rax],al
   14002a608:	push   0xffffffffa00001e7
   14002a60d:	lods   eax,DWORD PTR ds:[rsi]
   14002a60e:	add    BYTE PTR [rax],al
   14002a610:	shr    DWORD PTR [rbp-0x12b00000],cl
   14002a616:	add    DWORD PTR [rax],eax
   14002a618:	loopne 0x14002a5c7
   14002a61a:	add    BYTE PTR [rax],al
   14002a61c:	scas   al,BYTE PTR es:[rdi]
   14002a61d:	scas   al,BYTE PTR es:[rdi]
   14002a61e:	add    BYTE PTR [rax],al
   14002a620:	jl     0x14002a609
   14002a622:	add    DWORD PTR [rax],eax
   14002a624:	shr    BYTE PTR [rsi-0x510e0000],0x0
   14002a62b:	add    al,al
   14002a62d:	out    0x1,al
   14002a62f:	add    BYTE PTR [rax],al
   14002a631:	scas   eax,DWORD PTR es:[rdi]
   14002a632:	add    BYTE PTR [rax],al
   14002a634:	mov    ebp,DWORD PTR [rdi-0x11ac0000]
   14002a63a:	add    DWORD PTR [rax],eax
   14002a63c:	nop
   14002a63d:	scas   eax,DWORD PTR es:[rdi]
   14002a63e:	add    BYTE PTR [rax],al
   14002a640:	addr32 mov al,0x0
   14002a643:	add    BYTE PTR [rdi+riz*8-0x4f98ffff],ch
   14002a64a:	add    BYTE PTR [rax],al
   14002a64c:	mov    BYTE PTR [rcx-0x18680000],dh
   14002a652:	add    DWORD PTR [rax],eax
   14002a654:	mov    BYTE PTR [rcx-0x4e2e0000],dh
   14002a65a:	add    BYTE PTR [rax],al
   14002a65c:	mov    bh,ah
   14002a65e:	add    DWORD PTR [rax],eax
   14002a660:	loopne 0x14002a613
   14002a662:	add    BYTE PTR [rax],al
   14002a664:	mov    ebp,0xbc0000b7
   14002a669:	out    0x1,eax
   14002a66b:	add    al,al
   14002a66d:	mov    bh,0x0
   14002a66f:	add    bh,dh
   14002a671:	mov    ecx,0xe5540000
   14002a676:	add    DWORD PTR [rax],eax
   14002a678:	adc    BYTE PTR [rdx-0x45b30000],bh
   14002a67e:	add    BYTE PTR [rax],al
   14002a680:	shl    dh,0x1
   14002a683:	add    BYTE PTR [rax-0x46],dl
   14002a686:	add    BYTE PTR [rax],al
   14002a688:	push   rbp
   14002a689:	mov    ebx,0xe7d40000
   14002a68e:	add    DWORD PTR [rax],eax
   14002a690:	(bad)  
   14002a691:	mov    ebx,0xbd3e0000
   14002a696:	add    BYTE PTR [rax],al
   14002a698:	loopne 0x14002a681
   14002a69a:	add    DWORD PTR [rax],eax
   14002a69c:	rex mov ebp,0xbd700000
   14002a6a2:	add    BYTE PTR [rax],al
   14002a6a4:	shl    dh,0x1
   14002a6a7:	add    BYTE PTR [rax-0x43],dh
   14002a6aa:	add    BYTE PTR [rax],al
   14002a6ac:	movabs al,ds:0xc00001e6c00000bd
   14002a6b5:	mov    ebp,0xbddb0000
   14002a6ba:	add    BYTE PTR [rax],al
   14002a6bc:	push   rax
   14002a6bd:	in     eax,dx
   14002a6be:	add    DWORD PTR [rax],eax
   14002a6c0:	loopne 0x14002a67f
   14002a6c2:	add    BYTE PTR [rax],al
   14002a6c4:	mov    esp,0xf40000be
   14002a6c9:	out    0x1,eax
   14002a6cb:	add    al,al
   14002a6cd:	mov    esi,0xbf960000
   14002a6d2:	add    BYTE PTR [rax],al
   14002a6d4:	add    al,ch
   14002a6d6:	add    DWORD PTR [rax],eax
   14002a6d8:	movabs al,ds:0x600000bfb90000bf
   14002a6e1:	call   0xffbba6e7
   14002a6e6:	add    BYTE PTR [rax],al
   14002a6e8:	rol    BYTE PTR ss:[rax],0x0
   14002a6ec:	and    al,ch
   14002a6ee:	add    DWORD PTR [rax],eax
   14002a6f0:	rol    BYTE PTR ss:[rax],0x0
   14002a6f4:	cmp    al,al
   14002a6f6:	add    BYTE PTR [rax],al
   14002a6f8:	adc    al,ch
   14002a6fa:	add    DWORD PTR [rax],eax
   14002a6fc:	rex rol BYTE PTR [rax],0x0
   14002a700:	pop    rcx
   14002a701:	rol    BYTE PTR [rax],0x0
   14002a704:	(bad)  
   14002a705:	call   0x1005ba70b
   14002a70a:	add    BYTE PTR [rax],al
   14002a70c:	(bad)  
   14002a70d:	rol    BYTE PTR [rax],0x0
   14002a710:	call   0x100d0a717
   14002a716:	add    BYTE PTR [rax],al
   14002a718:	rol    al,1
   14002a71a:	add    BYTE PTR [rax],al
   14002a71c:	cmp    al,ch
   14002a71e:	add    DWORD PTR [rax],eax
   14002a720:	rol    al,1
   14002a722:	add    BYTE PTR [rax],al
   14002a724:	push   rdi
   14002a725:	rol    DWORD PTR [rax],0x0
   14002a728:	shl    dh,0x1
   14002a72b:	add    BYTE PTR [rax-0x3f],ah
   14002a72e:	add    BYTE PTR [rax],al
   14002a730:	(bad)  
   14002a731:	rol    DWORD PTR [rax],0x0
   14002a734:	shl    dh,0x1
   14002a737:	add    al,ah
   14002a739:	rol    DWORD PTR [rax],0x0
   14002a73c:	push   rsi
   14002a73d:	ret    0x0
   14002a740:	shl    dh,0x1
   14002a743:	add    BYTE PTR [rax-0x3e],ah
   14002a746:	add    BYTE PTR [rax],al
   14002a748:	rol    edx,1
   14002a74a:	add    BYTE PTR [rax],al
   14002a74c:	shl    dh,0x1
   14002a74f:	add    al,ah
   14002a751:	ret    0x0
   14002a754:	mov    es,ebx
   14002a756:	add    BYTE PTR [rax],al
   14002a758:	mov    eax,0x8e0001e8
   14002a75d:	ret    
   14002a75e:	add    BYTE PTR [rax],al
   14002a760:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002a761:	ret    
   14002a762:	add    BYTE PTR [rax],al
   14002a764:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002a765:	call   0x103a8a76b
   14002a76a:	add    BYTE PTR [rax],al
   14002a76c:	loop   0x14002a731
   14002a76e:	add    BYTE PTR [rax],al
   14002a770:	nop
   14002a771:	call   0x103e4a777
   14002a776:	add    BYTE PTR [rax],al
   14002a778:	lock ret 
   14002a77a:	add    BYTE PTR [rax],al
   14002a77c:	sub    al,0x1
   14002a77f:	add    al,dh
   14002a781:	ret    
   14002a782:	add    BYTE PTR [rax],al
   14002a784:	sti    
   14002a785:	ret    
   14002a786:	add    BYTE PTR [rax],al
   14002a788:	jo     0x14002a772
   14002a78a:	add    DWORD PTR [rax],eax
   14002a78c:	add    ah,al
   14002a78e:	add    BYTE PTR [rax],al
   14002a790:	fcmovnb st,st(4)
   14002a792:	add    BYTE PTR [rax],al
   14002a794:	xor    dh,ah
   14002a796:	add    DWORD PTR [rax],eax
   14002a798:	loopne 0x14002a75e
   14002a79a:	add    BYTE PTR [rax],al
   14002a79c:	add    ebp,eax
   14002a79e:	add    BYTE PTR [rax],al
   14002a7a0:	mov    eax,0x10001e8
   14002a7a5:	(bad)
   14002a7a8:	(bad)
   14002a7ac:	clc    
   14002a7ad:	call   0x10530a7b3
   14002a7b2:	add    BYTE PTR [rax],al
   14002a7b4:	scas   eax,DWORD PTR es:[rdi]
   14002a7b5:	(bad)
   14002a7b8:	in     al,0xe8
   14002a7ba:	add    DWORD PTR [rax],eax
   14002a7bc:	scas   eax,DWORD PTR es:[rdi]
   14002a7bd:	(bad)
   14002a7c0:	rex.WXB mov BYTE PTR [r8],0x0
   14002a7c4:	(bad)  
   14002a7c5:	call   0x1064da7cb
   14002a7ca:	add    BYTE PTR [rax],al
   14002a7cc:	push   rsi
   14002a7cd:	mov    BYTE PTR [rax],0x0
   14002a7d0:	(bad)  
   14002a7d1:	call   0x10662a7d7
   14002a7d6:	add    BYTE PTR [rax],al
   14002a7d8:	cmp    eax,edi
   14002a7da:	add    BYTE PTR [rax],al
   14002a7dc:	xor    dh,ah
   14002a7de:	add    DWORD PTR [rax],eax
   14002a7e0:	rex mov DWORD PTR [rax],0xc75e00
   14002a7e7:	add    BYTE PTR [rbx+rbp*8],cl
   14002a7ea:	add    DWORD PTR [rax],eax
   14002a7ec:	(bad)  
   14002a7ed:	mov    DWORD PTR [rax],0xc77e00
   14002a7f3:	add    BYTE PTR [rbx+rbp*8],cl
   14002a7f6:	add    DWORD PTR [rax],eax
   14002a7f8:	add    bh,0x0
   14002a7fb:	add    BYTE PTR [rsi+0xc0000c7],bh
   14002a801:	jmp    0x14002a804
   14002a803:	add    BYTE PTR [rsi-0x24ffff39],bh
   14002a809:	mov    DWORD PTR [rax],0x1e94400
   14002a80f:	add    bl,bl
   14002a811:	mov    DWORD PTR [rax],0xc81200
   14002a817:	add    BYTE PTR [rax],dh
   14002a819:	jmp    0x10814a81f
   14002a81e:	add    BYTE PTR [rax],al
   14002a820:	and    eax,0x200000c8
   14002a825:	jmp    0x10827a82b
   14002a82a:	add    BYTE PTR [rax],al
   14002a82c:	sub    ecx,eax
   14002a82e:	add    BYTE PTR [rax],al
   14002a830:	adc    cl,ch
   14002a832:	add    DWORD PTR [rax],eax
   14002a834:	xor    al,cl
   14002a836:	add    BYTE PTR [rax],al
   14002a838:	outs   dx,BYTE PTR ds:[rsi]
   14002a839:	enter  0x0,0xc
   14002a83d:	jmp    0x14002a840
   14002a83f:	add    BYTE PTR [rsi-0x38],ch
   14002a842:	add    BYTE PTR [rax],al
   14002a844:	mov    ecx,eax
   14002a846:	add    BYTE PTR [rax],al
   14002a848:	nop
   14002a849:	jmp    0x1088da84f
   14002a84e:	add    BYTE PTR [rax],al
   14002a850:	ret    0xc8
   14002a853:	add    BYTE PTR [rcx+rbp*8+0x1],bh
   14002a857:	add    dl,al
   14002a859:	enter  0x0,0xd5
   14002a85d:	enter  0x0,0x6c
   14002a861:	jmp    0x108d7a867
   14002a866:	add    BYTE PTR [rax],al
   14002a868:	fcmovne st,st(0)
   14002a86a:	add    BYTE PTR [rax],al
   14002a86c:	pop    rsp
   14002a86d:	jmp    0x108e2a873
   14002a872:	add    BYTE PTR [rax],al
   14002a874:	dec    al
   14002a876:	add    BYTE PTR [rax],al
   14002a878:	int3   
   14002a879:	jmp    0x10900a87f
   14002a87e:	add    BYTE PTR [rax],al
   14002a880:	movabs ds:0xa20001e9b80000c9,al
   14002a889:	leave  
   14002a88a:	add    BYTE PTR [rax],al
   14002a88c:	mov    al,0xc9
   14002a88e:	add    BYTE PTR [rax],al
   14002a890:	test   al,0xe9
   14002a892:	add    DWORD PTR [rax],eax
   14002a894:	mov    al,0xc9
   14002a896:	add    BYTE PTR [rax],al
   14002a898:	mov    edx,0xd80000ca
   14002a89d:	jmp    0x10ac2a8a3
   14002a8a2:	add    BYTE PTR [rax],al
   14002a8a4:	fmulp  st(2),st
   14002a8a6:	add    BYTE PTR [rax],al
   14002a8a8:	or     al,0xeb
   14002a8aa:	add    DWORD PTR [rax],eax
   14002a8ac:	loopne 0x14002a878
   14002a8ae:	add    BYTE PTR [rax],al
   14002a8b0:	or     ebx,0x0
   14002a8b3:	add    BYTE PTR [rbp+rbp*8+0x1],ch
   14002a8b7:	add    BYTE PTR [rax-0x55ffff35],dl
   14002a8bd:	retf   
   14002a8be:	add    BYTE PTR [rax],al
   14002a8c0:	sub    dl,ch
   14002a8c2:	add    DWORD PTR [rax],eax
   14002a8c4:	stos   BYTE PTR es:[rdi],al
   14002a8c5:	retf   
   14002a8c6:	add    BYTE PTR [rax],al
   14002a8c8:	(bad)  
   14002a8c9:	(bad)  
   14002a8ca:	add    BYTE PTR [rax],al
   14002a8cc:	add    al,0xea
   14002a8ce:	add    DWORD PTR [rax],eax
   14002a8d0:	(bad)  
   14002a8d1:	(bad)  
   14002a8d2:	add    BYTE PTR [rax],al
   14002a8d4:	imul   ecx,esi,0x0
   14002a8d7:	add    ah,dh
   14002a8d9:	jmp    0x10e72a8df
   14002a8de:	add    BYTE PTR [rax],al
   14002a8e0:	test   bh,0x0
   14002a8e3:	add    BYTE PTR [rdx+rbp*8],dh
   14002a8e6:	add    DWORD PTR [rax],eax
   14002a8e8:	add    al,dl
   14002a8ea:	add    BYTE PTR [rax],al
   14002a8ec:	rex.RXB rol BYTE PTR [r8],1
   14002a8ef:	add    BYTE PTR [rbx+rbp*8],cl
   14002a8f2:	add    DWORD PTR [rax],eax
   14002a8f4:	push   rax
   14002a8f5:	rol    BYTE PTR [rax],1
   14002a8f7:	add    BYTE PTR [rbp-0x30],ch
   14002a8fa:	add    BYTE PTR [rax],al
   14002a8fc:	jl     0x14002a8e8
   14002a8fe:	add    DWORD PTR [rax],eax
   14002a900:	ins    DWORD PTR es:[rdi],dx
   14002a901:	rol    BYTE PTR [rax],1
   14002a903:	add    BYTE PTR [rsi+rdx*8+0x0],bh
   14002a907:	add    BYTE PTR [rdx+rbp*8+0x1],dl
   14002a90b:	add    BYTE PTR [rsi+rdx*8+0x0],bh
   14002a90f:	add    BYTE PTR [rsi+0x440000d6],al
   14002a915:	(bad)  
   14002a916:	add    DWORD PTR [rax],eax
   14002a918:	nop
   14002a919:	(bad)  
   14002a91a:	add    BYTE PTR [rax],al
   14002a91c:	stos   BYTE PTR es:[rdi],al
   14002a91d:	(bad)  
   14002a91e:	add    BYTE PTR [rax],al
   14002a920:	(bad)  
   14002a921:	(bad)  
   14002a922:	add    DWORD PTR [rax],eax
   14002a924:	stos   BYTE PTR es:[rdi],al
   14002a925:	(bad)  
   14002a926:	add    BYTE PTR [rax],al
   14002a928:	ins    DWORD PTR es:[rdi],dx
   14002a929:	fiadd  DWORD PTR [rax]
   14002a92b:	add    BYTE PTR [rax+0x6d0001ea],bl
   14002a931:	fiadd  DWORD PTR [rax]
   14002a933:	add    BYTE PTR [rsi-0x26],dh
   14002a936:	add    BYTE PTR [rax],al
   14002a938:	mov    dl,ch
   14002a93a:	add    DWORD PTR [rax],eax
   14002a93c:	sbb    dl,0x0
   14002a93f:	add    BYTE PTR [rdx],ch
   14002a941:	fild   DWORD PTR [rax]
   14002a943:	add    al,bh
   14002a945:	(bad)  
   14002a946:	add    DWORD PTR [rax],eax
   14002a948:	sub    bl,bl
   14002a94a:	add    BYTE PTR [rax],al
   14002a94c:	(bad)  
   14002a94d:	fild   WORD PTR [rax]
   14002a94f:	add    al,ah
   14002a951:	(bad)  
   14002a952:	add    DWORD PTR [rax],eax
   14002a954:	(bad)  
   14002a955:	fild   WORD PTR [rax]
   14002a957:	add    dh,dl
   14002a959:	fild   WORD PTR [rax]
   14002a95b:	add    al,dl
   14002a95d:	(bad)  
   14002a95e:	add    DWORD PTR [rax],eax
   14002a960:	lock fild WORD PTR [rax]
   14002a963:	add    BYTE PTR [rax],bl
   14002a965:	loopne 0x14002a967
   14002a967:	add    BYTE PTR [rbx+rbp*8],cl
   14002a96a:	add    DWORD PTR [rax],eax
   14002a96c:	rex loopne 0x14002a96f
   14002a96f:	add    BYTE PTR [rdi],al
   14002a971:	loope  0x14002a973
   14002a973:	add    BYTE PTR [rax-0x15],ah
   14002a976:	add    DWORD PTR [rax],eax
   14002a978:	(bad)  
   14002a979:	loope  0x14002a97b
   14002a97b:	add    BYTE PTR [rcx+riz*8],ah
   14002a97e:	add    BYTE PTR [rax],al
   14002a980:	rex.W jmp 0x14002a984
   14002a983:	add    BYTE PTR [rcx+riz*8],ah
   14002a986:	add    BYTE PTR [rax],al
   14002a988:	movabs ds:0xa30001eb340000e3,eax
   14002a991:	jrcxz  0x14002a993
   14002a993:	add    BYTE PTR [rbx],ch
   14002a995:	in     al,0x0
   14002a997:	add    BYTE PTR [rbx+rbp*8],ah
   14002a99a:	add    DWORD PTR [rax],eax
   14002a99c:	sub    esp,esp
   14002a99e:	add    BYTE PTR [rax],al
   14002a9a0:	(bad)
   14002a9a3:	add    BYTE PTR [rbx+rbp*8],dl
   14002a9a6:	add    DWORD PTR [rax],eax
   14002a9a8:	shl    ah,1
   14002a9aa:	add    BYTE PTR [rax],al
   14002a9ac:	mov    ebp,esp
   14002a9ae:	add    BYTE PTR [rax],al
   14002a9b0:	(bad)  
   14002a9b1:	jmp    0x14002a9b4
   14002a9b3:	add    BYTE PTR [rcx-0x48ffff1b],cl
   14002a9b9:	in     eax,0x0
   14002a9bb:	add    BYTE PTR [rbx+rbp*8-0x1a48ffff],ch
   14002a9c2:	add    BYTE PTR [rax],al
   14002a9c4:	imul   edx
   14002a9c6:	add    BYTE PTR [rax],al
   14002a9c8:	xchg   esp,eax
   14002a9c9:	jmp    0x14002a9cc
   14002a9cb:	add    bh,dh
   14002a9cd:	(bad)  
   14002a9ce:	add    BYTE PTR [rax],al
   14002a9d0:	mov    gs,ebx
   14002a9d2:	add    BYTE PTR [rax],al
   14002a9d4:	test   bl,ch
   14002a9d6:	add    DWORD PTR [rax],eax
   14002a9d8:	mov    gs,ebx
   14002a9da:	add    BYTE PTR [rax],al
   14002a9dc:	add    ebp,esp
   14002a9de:	add    BYTE PTR [rax],al
   14002a9e0:	je     0x14002a9cd
   14002a9e2:	add    DWORD PTR [rax],eax
   14002a9e4:	adc    ah,ch
   14002a9e6:	add    BYTE PTR [rax],al
   14002a9e8:	(bad)  
   14002a9e9:	in     al,dx
   14002a9ea:	add    BYTE PTR [rax],al
   14002a9ec:	add    al,0xec
   14002a9ee:	add    DWORD PTR [rax],eax
   14002a9f0:	(bad)  
   14002a9f1:	in     al,dx
   14002a9f2:	add    BYTE PTR [rax],al
   14002a9f4:	rex.WRX out dx,al
   14002a9f6:	add    BYTE PTR [rax],al
   14002a9f8:	in     al,0xeb
   14002a9fa:	add    DWORD PTR [rax],eax
   14002a9fc:	rex.WRX out dx,al
   14002a9fe:	add    BYTE PTR [rax],al
   14002aa00:	pop    rax
   14002aa01:	out    dx,al
   14002aa02:	add    BYTE PTR [rax],al
   14002aa04:	(bad)  
   14002aa05:	jmp    0x14002aa08
   14002aa07:	add    BYTE PTR [rax-0x12],ah
   14002aa0a:	add    BYTE PTR [rax],al
   14002aa0c:	xchg   ecx,eax
   14002aa0d:	lock add BYTE PTR [rax],al
   14002aa10:	or     al,0xec
   14002aa12:	add    DWORD PTR [rax],eax
   14002aa14:	movabs al,ds:0x200000f1530000f0
   14002aa1d:	in     al,dx
   14002aa1e:	add    DWORD PTR [rax],eax
   14002aa20:	(bad)  
   14002aa21:	icebp  
   14002aa22:	add    BYTE PTR [rax],al
   14002aa24:	sahf   
   14002aa25:	icebp  
   14002aa26:	add    BYTE PTR [rax],al
   14002aa28:	or     al,0xeb
   14002aa2a:	add    DWORD PTR [rax],eax
   14002aa2c:	movabs al,ds:0x940000f1c40000f1
   14002aa35:	in     al,dx
   14002aa36:	add    DWORD PTR [rax],eax
   14002aa38:	(bad)  
   14002aa39:	icebp  
   14002aa3a:	add    BYTE PTR [rax],al
   14002aa3c:	out    0xf1,al
   14002aa3e:	add    BYTE PTR [rax],al
   14002aa40:	ins    BYTE PTR es:[rdi],dx
   14002aa41:	in     al,dx
   14002aa42:	add    DWORD PTR [rax],eax
   14002aa44:	out    0xf1,al
   14002aa46:	add    BYTE PTR [rax],al
   14002aa48:	xchg   ebp,esi
   14002aa4a:	add    BYTE PTR [rax],al
   14002aa4c:	pop    rax
   14002aa4d:	in     al,dx
   14002aa4e:	add    DWORD PTR [rax],eax
   14002aa50:	xchg   ebp,esi
   14002aa52:	add    BYTE PTR [rax],al
   14002aa54:	ins    DWORD PTR es:[rdi],dx
   14002aa55:	test   BYTE PTR [rax],0x0
   14002aa58:	rex.W in al,dx
   14002aa5a:	add    DWORD PTR [rax],eax
   14002aa5c:	ins    DWORD PTR es:[rdi],dx
   14002aa5d:	test   BYTE PTR [rax],0x0
   14002aa60:	jbe    0x14002aa58
   14002aa62:	add    BYTE PTR [rax],al
   14002aa64:	cmp    ah,ch
   14002aa66:	add    DWORD PTR [rax],eax
   14002aa68:	xor    dh,0x0
   14002aa6b:	add    BYTE PTR [rbx+0xc0000f8],bh
   14002aa71:	in     eax,dx
   14002aa72:	add    DWORD PTR [rax],eax
   14002aa74:	loopne 0x14002aa6e
   14002aa76:	add    BYTE PTR [rax],al
   14002aa78:	add    ecx,edi
   14002aa7a:	add    BYTE PTR [rax],al
   14002aa7c:	enter  0x1ec,0x0
   14002aa80:	add    ecx,edi
   14002aa82:	add    BYTE PTR [rax],al
   14002aa84:	xor    eax,0xb00000fc
   14002aa89:	in     al,dx
   14002aa8a:	add    DWORD PTR [rax],eax
   14002aa8c:	xor    eax,0x3c0000fc
   14002aa91:	cld    
   14002aa92:	add    BYTE PTR [rax],al
   14002aa94:	movabs al,ds:0x5d0000fc400001ec
   14002aa9d:	cld    
   14002aa9e:	add    BYTE PTR [rax],al
   14002aaa0:	add    al,0xed
   14002aaa2:	add    DWORD PTR [rax],eax
   14002aaa4:	pop    rbp
   14002aaa5:	cld    
   14002aaa6:	add    BYTE PTR [rax],al
   14002aaa8:	test   al,0xa
   14002aaaa:	add    DWORD PTR [rax],eax
   14002aaac:	in     al,0xec
   14002aaae:	add    DWORD PTR [rax],eax
   14002aab0:	test   al,0xa
   14002aab2:	add    DWORD PTR [rax],eax
   14002aab4:	scas   al,BYTE PTR es:[rdi]
   14002aab5:	or     al,BYTE PTR [rcx]
   14002aab7:	add    ah,dl
   14002aab9:	in     al,dx
   14002aaba:	add    DWORD PTR [rax],eax
   14002aabc:	mov    al,0xa
   14002aabe:	add    DWORD PTR [rax],eax
   14002aac0:	repnz or al,BYTE PTR [rcx]
   14002aac3:	add    BYTE PTR [rbx+rbp*8],cl
   14002aac6:	add    DWORD PTR [rax],eax
   14002aac8:	add    BYTE PTR [rbx],cl
   14002aaca:	add    DWORD PTR [rax],eax
   14002aacc:	cmp    ecx,DWORD PTR [rbx]
   14002aace:	add    DWORD PTR [rax],eax
   14002aad0:	or     al,0xeb
   14002aad2:	add    DWORD PTR [rax],eax
   14002aad4:	rex or eax,DWORD PTR [rcx]
   14002aad7:	add    BYTE PTR [rsi+0xc00010c],bh
   14002aadd:	in     eax,dx
   14002aade:	add    DWORD PTR [rax],eax
   14002aae0:	ror    BYTE PTR [rcx+rax*1],0x0
   14002aae4:	pop    rdi
   14002aae5:	sgdt   [rax]
   14002aae8:	sbb    ch,ch
   14002aaea:	add    DWORD PTR [rax],eax
   14002aaec:	(bad)  
   14002aaed:	sgdt   [rax]
   14002aaf0:	nop
   14002aaf1:	sgdt   [rax]
   14002aaf4:	shl    dh,0x1
   14002aaf7:	add    BYTE PTR [rax-0x1ffffef1],dh
   14002aafd:	sgdt   [rax]
   14002ab00:	shl    dh,0x1
   14002ab03:	add    al,ah
   14002ab05:	sgdt   [rax]
   14002ab08:	sbb    eax,0x30000111
   14002ab0d:	in     eax,dx
   14002ab0e:	add    DWORD PTR [rax],eax
   14002ab10:	and    BYTE PTR [rcx],dl
   14002ab12:	add    DWORD PTR [rax],eax
   14002ab14:	xor    BYTE PTR [rsi],dl
   14002ab16:	add    DWORD PTR [rax],eax
   14002ab18:	rex in eax,dx
   14002ab1a:	add    DWORD PTR [rax],eax
   14002ab1c:	xor    BYTE PTR [rsi],dl
   14002ab1e:	add    DWORD PTR [rax],eax
   14002ab20:	jb     0x14002ab38
   14002ab22:	add    DWORD PTR [rax],eax
   14002ab24:	push   rax
   14002ab25:	in     eax,dx
   14002ab26:	add    DWORD PTR [rax],eax
   14002ab28:	rcl    BYTE PTR [rsi],1
   14002ab2a:	add    DWORD PTR [rax],eax
   14002ab2c:	imul   edx,DWORD PTR [rdi],0xed580001
   14002ab32:	add    DWORD PTR [rax],eax
   14002ab34:	nop
   14002ab35:	(bad)  
   14002ab36:	add    DWORD PTR [rax],eax
   14002ab38:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002ab39:	(bad)  
   14002ab3a:	add    DWORD PTR [rax],eax
   14002ab3c:	push   rax
   14002ab3d:	in     eax,dx
   14002ab3e:	add    DWORD PTR [rax],eax
   14002ab40:	add    BYTE PTR [rax],bl
   14002ab42:	add    DWORD PTR [rax],eax
   14002ab44:	ins    BYTE PTR es:[rdi],dx
   14002ab45:	sbb    BYTE PTR [rcx],al
   14002ab47:	add    BYTE PTR [rax-0x13],bl
   14002ab4a:	add    DWORD PTR [rax],eax
   14002ab4c:	and    BYTE PTR [rcx],bl
   14002ab4e:	add    DWORD PTR [rax],eax
   14002ab50:	rex.RX sbb DWORD PTR [rcx],r8d
   14002ab53:	add    BYTE PTR [rax-0x13],dl
   14002ab56:	add    DWORD PTR [rax],eax
   14002ab58:	movabs al,ds:0x5800011a1c000119
   14002ab61:	in     eax,dx
   14002ab62:	add    DWORD PTR [rax],eax
   14002ab64:	sbb    al,BYTE PTR [rcx]
   14002ab67:	add    BYTE PTR [rsi+0x1a],bl
   14002ab6a:	add    DWORD PTR [rax],eax
   14002ab6c:	push   rax
   14002ab6d:	in     eax,dx
   14002ab6e:	add    DWORD PTR [rax],eax
   14002ab70:	mov    al,0x1a
   14002ab72:	add    DWORD PTR [rax],eax
   14002ab74:	and    bl,BYTE PTR [rbx]
   14002ab76:	add    DWORD PTR [rax],eax
   14002ab78:	pop    rax
   14002ab79:	in     eax,dx
   14002ab7a:	add    DWORD PTR [rax],eax
   14002ab7c:	push   rax
   14002ab7d:	sbb    eax,DWORD PTR [rcx]
   14002ab7f:	add    BYTE PTR [rsi+0x1b],dh
   14002ab82:	add    DWORD PTR [rax],eax
   14002ab84:	push   rax
   14002ab85:	in     eax,dx
   14002ab86:	add    DWORD PTR [rax],eax
   14002ab88:	rcr    BYTE PTR [rbx],1
   14002ab8a:	add    DWORD PTR [rax],eax
   14002ab8c:	rex.WR sbb al,0x1
   14002ab8f:	add    BYTE PTR [rax-0x13],bl
   14002ab92:	add    DWORD PTR [rax],eax
   14002ab94:	jo     0x14002abb2
   14002ab96:	add    DWORD PTR [rax],eax
   14002ab98:	xchg   esi,eax
   14002ab99:	sbb    al,0x1
   14002ab9b:	add    BYTE PTR [rax-0x13],dl
   14002ab9e:	add    DWORD PTR [rax],eax
   14002aba0:	lock sbb al,0x1
   14002aba3:	add    BYTE PTR [rbp+rbx*1+0x1],ch
   14002aba7:	add    BYTE PTR [rax-0x13],bl
   14002abaa:	add    DWORD PTR [rax],eax
   14002abac:	movabs al,ds:0x6c00012909000128
   14002abb5:	in     eax,dx
   14002abb6:	add    DWORD PTR [rax],eax
   14002abb8:	adc    BYTE PTR [rcx],ch
   14002abba:	add    DWORD PTR [rax],eax
   14002abbc:	shr    BYTE PTR [rcx],0x1
   14002abbf:	add    BYTE PTR [rbp+rbp*8+0x29c00001],al
   14002abc6:	add    DWORD PTR [rax],eax
   14002abc8:	xlat   BYTE PTR ds:[rbx]
   14002abc9:	sub    DWORD PTR [rcx],eax
   14002abcb:	add    BYTE PTR [rax-0x13],dl
   14002abce:	add    DWORD PTR [rax],eax
   14002abd0:	fsubr  DWORD PTR [rcx]
   14002abd2:	add    DWORD PTR [rax],eax
   14002abd4:	cmp    eax,0xa400012a
   14002abd9:	in     eax,dx
   14002abda:	add    DWORD PTR [rax],eax
   14002abdc:	sub    al,BYTE PTR [rcx]
   14002abdf:	add    BYTE PTR [rsi+0x2c],al
   14002abe2:	add    DWORD PTR [rax],eax
   14002abe4:	lods   al,BYTE PTR ds:[rsi]
   14002abe5:	in     eax,dx
   14002abe6:	add    DWORD PTR [rax],eax
   14002abe8:	rex.W sub al,0x1
   14002abeb:	add    BYTE PTR [rip+0x5000012d],ch        # 0x19002ad1e
   14002abf1:	in     eax,dx
   14002abf2:	add    DWORD PTR [rax],eax
   14002abf4:	xor    BYTE PTR [rip+0x2d420001],ch        # 0x16d44abfb
   14002abfa:	add    DWORD PTR [rax],eax
   14002abfc:	push   rax
   14002abfd:	in     eax,dx
   14002abfe:	add    DWORD PTR [rax],eax
   14002ac00:	rex.R sub eax,0x2d8f0001
   14002ac06:	add    DWORD PTR [rax],eax
   14002ac08:	in     al,0xed
   14002ac0a:	add    DWORD PTR [rax],eax
   14002ac0c:	nop
   14002ac0d:	sub    eax,0x2dee0001
   14002ac12:	add    DWORD PTR [rax],eax
   14002ac14:	or     al,0xee
   14002ac16:	add    DWORD PTR [rax],eax
   14002ac18:	or     BYTE PTR [rsi],ch
   14002ac1a:	add    DWORD PTR [rax],eax
   14002ac1c:	rex.WB
   14002ac1d:	add    DWORD PTR cs:[rax],eax
   14002ac20:	push   rax
   14002ac21:	in     eax,dx
   14002ac22:	add    DWORD PTR [rax],eax
   14002ac24:	rex.WR
   14002ac25:	add    DWORD PTR cs:[rax],eax
   14002ac28:	fs add DWORD PTR cs:[rax],eax
   14002ac2c:	push   rax
   14002ac2d:	in     eax,dx
   14002ac2e:	add    DWORD PTR [rax],eax
   14002ac30:	ins    BYTE PTR es:[rdi],dx
   14002ac31:	add    DWORD PTR cs:[rax],eax
   14002ac34:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002ac35:	add    DWORD PTR cs:[rax],eax
   14002ac38:	shl    dh,0x1
   14002ac3b:	add    BYTE PTR [rsi+rbp*1+0x2edc0001],ah
   14002ac42:	add    DWORD PTR [rax],eax
   14002ac44:	shl    dh,0x1
   14002ac47:	add    BYTE PTR [rax+0x2f],dh
   14002ac4a:	add    DWORD PTR [rax],eax
   14002ac4c:	mov    cl,0x2f
   14002ac4e:	add    DWORD PTR [rax],eax
   14002ac50:	xor    al,0xee
   14002ac52:	add    DWORD PTR [rax],eax
   14002ac54:	(bad)  
   14002ac55:	(bad)  
   14002ac56:	add    DWORD PTR [rax],eax
   14002ac58:	ja     0x14002ac8a
   14002ac5a:	add    DWORD PTR [rax],eax
   14002ac5c:	push   rsp
   14002ac5d:	out    dx,al
   14002ac5e:	add    DWORD PTR [rax],eax
   14002ac60:	nop
   14002ac61:	xor    BYTE PTR [rcx],al
   14002ac63:	add    BYTE PTR [rax],ah
   14002ac65:	xor    DWORD PTR [rcx],eax
   14002ac67:	add    BYTE PTR [rax-0x12],ah
   14002ac6a:	add    DWORD PTR [rax],eax
   14002ac6c:	and    BYTE PTR [rcx],dh
   14002ac6e:	add    DWORD PTR [rax],eax
   14002ac70:	xchg   ebx,eax
   14002ac71:	xor    DWORD PTR [rcx],eax
   14002ac73:	add    BYTE PTR [rsi+rbp*8+0x31930001],bl
   14002ac7a:	add    DWORD PTR [rax],eax
   14002ac7c:	ret    
   14002ac7d:	xor    DWORD PTR [rcx],eax
   14002ac7f:	add    BYTE PTR [rax-0x3cfffe12],cl
   14002ac85:	xor    DWORD PTR [rcx],eax
   14002ac87:	add    BYTE PTR [rsi],ch
   14002ac89:	xor    al,BYTE PTR [rcx]
   14002ac8b:	add    BYTE PTR [rax-0x12],bh
   14002ac8e:	add    DWORD PTR [rax],eax
   14002ac90:	xor    al,BYTE PTR [rcx]
   14002ac93:	add    BYTE PTR [rcx+0x32],bl
   14002ac96:	add    DWORD PTR [rax],eax
   14002ac98:	jl     0x14002ac87
   14002ac9a:	add    DWORD PTR [rax],eax
   14002ac9c:	pop    rcx
   14002ac9d:	xor    al,BYTE PTR [rcx]
   14002ac9f:	add    BYTE PTR [rbp+0x32],dh
   14002aca2:	add    DWORD PTR [rax],eax
   14002aca4:	jl     0x14002ac93
   14002aca6:	add    DWORD PTR [rax],eax
   14002aca8:	jne    0x14002acdc
   14002acaa:	add    DWORD PTR [rax],eax
   14002acac:	mov    ah,0x32
   14002acae:	add    DWORD PTR [rax],eax
   14002acb0:	jl     0x14002ac9f
   14002acb2:	add    DWORD PTR [rax],eax
   14002acb4:	mov    ah,0x32
   14002acb6:	add    DWORD PTR [rax],eax
   14002acb8:	fidiv  WORD PTR [rdx]
   14002acba:	add    DWORD PTR [rax],eax
   14002acbc:	jl     0x14002acab
   14002acbe:	add    DWORD PTR [rax],eax
   14002acc0:	loopne 0x14002acf4
   14002acc2:	add    DWORD PTR [rax],eax
   14002acc4:	add    DWORD PTR [rbx],esi
   14002acc6:	add    DWORD PTR [rax],eax
   14002acc8:	jl     0x14002acb7
   14002acca:	add    DWORD PTR [rax],eax
   14002accc:	adc    BYTE PTR [rbx],dh
   14002acce:	add    DWORD PTR [rax],eax
   14002acd0:	rex.XB xor eax,DWORD PTR [r9]
   14002acd3:	add    BYTE PTR [rax-0x13],dl
   14002acd6:	add    DWORD PTR [rax],eax

Disassembly of section .rsrc:

000000014002b000 <.rsrc>:
	...
   14002b008:	add    al,0x0
   14002b00a:	add    BYTE PTR [rax],al
   14002b00c:	add    BYTE PTR [rax],al
   14002b00e:	add    DWORD PTR [rax],eax
   14002b010:	sbb    BYTE PTR [rax],al
   14002b012:	add    BYTE PTR [rax],al
   14002b014:	sbb    BYTE PTR [rax],al
   14002b016:	add    BYTE PTR [rax+0x0],al
   14002b01c:	add    BYTE PTR [rax],al
   14002b01e:	add    BYTE PTR [rax],al
   14002b020:	add    al,0x0
   14002b022:	add    BYTE PTR [rax],al
   14002b024:	add    BYTE PTR [rax],al
   14002b026:	add    DWORD PTR [rax],eax
   14002b028:	add    DWORD PTR [rax],eax
   14002b02a:	add    BYTE PTR [rax],al
   14002b02c:	xor    BYTE PTR [rax],al
   14002b02e:	add    BYTE PTR [rax+0x0],al
   14002b034:	add    BYTE PTR [rax],al
   14002b036:	add    BYTE PTR [rax],al
   14002b038:	add    al,0x0
   14002b03a:	add    BYTE PTR [rax],al
   14002b03c:	add    BYTE PTR [rax],al
   14002b03e:	add    DWORD PTR [rax],eax
   14002b040:	or     DWORD PTR [rax+rax*1],eax
   14002b043:	add    BYTE PTR [rax+0x0],cl
   14002b046:	add    BYTE PTR [rax],al
   14002b048:	pop    rax
   14002b049:	mov    al,0x2
   14002b04b:	add    BYTE PTR [rdx+0x3],ch
   14002b04e:	add    BYTE PTR [rax],al
   14002b050:	in     al,0x4
   14002b052:	add    BYTE PTR [rax],al
   14002b054:	add    BYTE PTR [rax],al
   14002b056:	add    BYTE PTR [rax],al
   14002b058:	cmp    al,0x61
   14002b05a:	jae    0x14002b0cf
   14002b05c:	gs ins DWORD PTR es:[rdi],dx
   14002b05e:	(bad)  
   14002b05f:	ins    BYTE PTR es:[rdi],dx
   14002b060:	jns    0x14002b082
   14002b062:	js     0x14002b0d1
   14002b064:	ins    BYTE PTR es:[rdi],dx
   14002b065:	outs   dx,BYTE PTR ds:[rsi]
   14002b066:	jae    0x14002b0a5
   14002b068:	and    dh,BYTE PTR [rbp+0x72]
   14002b06b:	outs   dx,BYTE PTR ds:[rsi]
   14002b06c:	cmp    dh,BYTE PTR [rbx+0x63]
   14002b06f:	push   0x73616d65
   14002b074:	sub    eax,0x7263696d
   14002b079:	outs   dx,DWORD PTR ds:[rsi]
   14002b07a:	jae    0x14002b0eb
   14002b07c:	data16 je 0x14002b0ac
   14002b07f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002b082:	cmp    ah,BYTE PTR [rcx+0x73]
   14002b085:	ins    DWORD PTR es:[rdi],dx
   14002b086:	cs jbe 0x14002b0ba
   14002b089:	and    ah,BYTE PTR [rax]
   14002b08b:	ins    DWORD PTR es:[rdi],dx
   14002b08c:	(bad)  
   14002b08d:	outs   dx,BYTE PTR ds:[rsi]
   14002b08e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14002b095:	jb     0x14002b10a
   14002b097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14002b09e:	xor    BYTE PTR [rdx],ah
   14002b0a0:	ds or  eax,0x3c20200a
   14002b0a6:	je     0x14002b11a
   14002b0a8:	jne    0x14002b11d
   14002b0aa:	je     0x14002b0f5
   14002b0ac:	outs   dx,BYTE PTR ds:[rsi]
   14002b0ad:	outs   dx,WORD PTR ds:[rsi]
   14002b0af:	and    BYTE PTR [rax+0x6d],bh
   14002b0b2:	ins    BYTE PTR es:[rdi],dx
   14002b0b3:	outs   dx,BYTE PTR ds:[rsi]
   14002b0b4:	jae    0x14002b0f3
   14002b0b6:	and    dh,BYTE PTR [rbp+0x72]
   14002b0b9:	outs   dx,BYTE PTR ds:[rsi]
   14002b0ba:	cmp    dh,BYTE PTR [rbx+0x63]
   14002b0bd:	push   0x73616d65
   14002b0c2:	sub    eax,0x7263696d
   14002b0c7:	outs   dx,DWORD PTR ds:[rsi]
   14002b0c8:	jae    0x14002b139
   14002b0ca:	data16 je 0x14002b0fa
   14002b0cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14002b0d0:	cmp    ah,BYTE PTR [rcx+0x73]
   14002b0d3:	ins    DWORD PTR es:[rdi],dx
   14002b0d4:	cs jbe 0x14002b10a
   14002b0d7:	and    bh,BYTE PTR [rsi]
   14002b0d9:	or     eax,0x2020200a
   14002b0de:	and    BYTE PTR [rbx+rsi*2],bh
   14002b0e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14002b0e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14002b0ed:	and    BYTE PTR [rax],ah
   14002b0ef:	and    BYTE PTR [rax],ah
   14002b0f1:	cmp    al,0x72
   14002b0f3:	gs jno 0x14002b16b
   14002b0f6:	gs jae 0x14002b16d
   14002b0f9:	gs fs push rax
   14002b0fc:	jb     0x14002b167
   14002b0fe:	jbe    0x14002b169
   14002b100:	ins    BYTE PTR es:[rdi],dx
   14002b101:	gs addr32 gs jae 0x14002b144
   14002b106:	or     eax,0x2020200a
   14002b10b:	and    BYTE PTR [rax],ah
   14002b10d:	and    BYTE PTR [rax],ah
   14002b10f:	and    BYTE PTR [rdx+rsi*2],bh
   14002b112:	gs jno 0x14002b18a
   14002b115:	gs jae 0x14002b18c
   14002b118:	gs fs rex.RB js 0x14002b182
   14002b11d:	movsxd esi,DWORD PTR [rbp+0x74]
   14002b120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14002b127:	ins    BYTE PTR es:[rdi],dx
   14002b128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14002b12c:	gs ins BYTE PTR es:[rdi],dx
   14002b12e:	cmp    eax,0x49736122
   14002b133:	outs   dx,BYTE PTR ds:[rsi]
   14002b134:	jbe    0x14002b1a5
   14002b136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14002b13a:	and    BYTE PTR [rbp+0x69],dh
   14002b13d:	movsxd esp,DWORD PTR [r11+0x65]
   14002b141:	jae    0x14002b1b6
   14002b143:	cmp    eax,0x6c616622
   14002b148:	jae    0x14002b1af
   14002b14a:	and    bh,BYTE PTR [rsi]
   14002b14c:	cmp    al,0x2f
   14002b14e:	jb     0x14002b1b5
   14002b150:	jno    0x14002b1c7
   14002b152:	gs jae 0x14002b1c9
   14002b155:	gs fs rex.RB js 0x14002b1bf
   14002b15a:	movsxd esi,DWORD PTR [rbp+0x74]
   14002b15d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14002b164:	ins    BYTE PTR es:[rdi],dx
   14002b165:	ds or  eax,0x2020200a
   14002b16b:	and    BYTE PTR [rax],ah
   14002b16d:	and    BYTE PTR [rdi+rbp*1],bh
   14002b170:	jb     0x14002b1d7
   14002b172:	jno    0x14002b1e9
   14002b174:	gs jae 0x14002b1eb
   14002b177:	gs fs push rax
   14002b17a:	jb     0x14002b1e5
   14002b17c:	jbe    0x14002b1e7
   14002b17e:	ins    BYTE PTR es:[rdi],dx
   14002b17f:	gs addr32 gs jae 0x14002b1c2
   14002b184:	or     eax,0x2020200a
   14002b189:	and    BYTE PTR [rdi+rbp*1],bh
   14002b18c:	jae    0x14002b1f3
   14002b18e:	movsxd esi,DWORD PTR [rbp+0x72]
   14002b191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14002b199:	cmp    al,0x2f
   14002b19b:	je     0x14002b20f
   14002b19d:	jne    0x14002b212
   14002b19f:	je     0x14002b1ea
   14002b1a1:	outs   dx,BYTE PTR ds:[rsi]
   14002b1a2:	outs   dx,WORD PTR ds:[rsi]
   14002b1a4:	ds or  eax,0x3c20200a
   14002b1aa:	fs gs jo 0x14002b213
   14002b1ae:	outs   dx,BYTE PTR ds:[rsi]
   14002b1af:	fs outs dx,BYTE PTR gs:[rsi]
   14002b1b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   14002b1b5:	or     eax,0x2020200a
   14002b1ba:	and    BYTE PTR [rsp+riz*2],bh
   14002b1bd:	gs jo  0x14002b225
   14002b1c0:	outs   dx,BYTE PTR ds:[rsi]
   14002b1c1:	fs outs dx,BYTE PTR gs:[rsi]
   14002b1c4:	je     0x14002b207
   14002b1c6:	jae    0x14002b23b
   14002b1c8:	gs ins DWORD PTR es:[rdi],dx
   14002b1ca:	(bad)  
   14002b1cb:	ins    BYTE PTR es:[rdi],dx
   14002b1cc:	jns    0x14002b20c
   14002b1ce:	or     eax,0x2020200a
   14002b1d3:	and    BYTE PTR [rax],ah
   14002b1d5:	and    BYTE PTR [rcx+riz*2],bh
   14002b1d8:	jae    0x14002b24d
   14002b1da:	gs ins DWORD PTR es:[rdi],dx
   14002b1dc:	(bad)  
   14002b1dd:	ins    BYTE PTR es:[rdi],dx
   14002b1de:	jns    0x14002b229
   14002b1e0:	fs outs dx,BYTE PTR gs:[rsi]
   14002b1e3:	je     0x14002b24e
   14002b1e5:	je     0x14002b260
   14002b1e7:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14002b1eb:	gs cmp eax,0x6e697722
   14002b1f1:	xor    esi,DWORD PTR [rdx]
   14002b1f3:	and    ah,BYTE PTR [rax]
   14002b1f5:	outs   dx,BYTE PTR ds:[rsi]
   14002b1f6:	(bad)  
   14002b1f7:	ins    DWORD PTR es:[rdi],dx
   14002b1f8:	gs cmp eax,0x63694d22
   14002b1fe:	jb     0x14002b26f
   14002b200:	jae    0x14002b271
   14002b202:	data16 je 0x14002b233
   14002b205:	push   rdi
   14002b206:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14002b20d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14002b20f:	ins    DWORD PTR es:[rdi],dx
   14002b210:	ins    DWORD PTR es:[rdi],dx
   14002b211:	outs   dx,DWORD PTR ds:[rsi]
   14002b212:	outs   dx,BYTE PTR ds:[rsi]
   14002b213:	sub    eax,0x746e6f43
   14002b218:	jb     0x14002b289
   14002b21a:	ins    BYTE PTR es:[rdi],dx
   14002b21b:	jae    0x14002b23f
   14002b21d:	and    BYTE PTR [rsi+0x65],dh
   14002b220:	jb     0x14002b295
   14002b222:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14002b229:	xor    BYTE PTR [rsi],ch
   14002b22b:	xor    BYTE PTR [rsi],ch
   14002b22d:	xor    BYTE PTR [rdx],ah
   14002b22f:	and    BYTE PTR [rax+0x75],dh
   14002b232:	(bad)  
   14002b233:	ins    BYTE PTR es:[rdi],dx
   14002b234:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14002b23b:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14002b23f:	and    dh,BYTE PTR [rsi]
   14002b241:	xor    eax,0x36623539
   14002b246:	xor    al,0x31
   14002b248:	xor    al,0x34
   14002b24a:	movsxd esp,DWORD PTR [rbx+0x66]
   14002b24d:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14002b251:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14002b255:	addr32 jne 0x14002b2b9
   14002b258:	addr32 gs cmp eax,0x20222a22
   14002b25f:	jo     0x14002b2d3
   14002b261:	outs   dx,DWORD PTR ds:[rsi]
   14002b262:	movsxd esp,DWORD PTR [rbp+0x73]
   14002b265:	jae    0x14002b2d6
   14002b267:	jb     0x14002b2aa
   14002b269:	jb     0x14002b2ce
   14002b26b:	push   0x63657469
   14002b270:	je     0x14002b2e7
   14002b272:	jb     0x14002b2d9
   14002b274:	cmp    eax,0x3e222a22
   14002b279:	cmp    al,0x2f
   14002b27b:	(bad)  
   14002b27c:	jae    0x14002b2f1
   14002b27e:	gs ins DWORD PTR es:[rdi],dx
   14002b280:	(bad)  
   14002b281:	ins    BYTE PTR es:[rdi],dx
   14002b282:	jns    0x14002b2cd
   14002b284:	fs outs dx,BYTE PTR gs:[rsi]
   14002b287:	je     0x14002b2f2
   14002b289:	je     0x14002b304
   14002b28b:	ds or  eax,0x2020200a
   14002b291:	and    BYTE PTR [rdi+rbp*1],bh
   14002b294:	fs gs jo 0x14002b2fd
   14002b298:	outs   dx,BYTE PTR ds:[rsi]
   14002b299:	fs outs dx,BYTE PTR gs:[rsi]
   14002b29c:	je     0x14002b2df
   14002b29e:	jae    0x14002b313
   14002b2a0:	gs ins DWORD PTR es:[rdi],dx
   14002b2a2:	(bad)  
   14002b2a3:	ins    BYTE PTR es:[rdi],dx
   14002b2a4:	jns    0x14002b2e4
   14002b2a6:	or     eax,0x3c20200a
   14002b2ab:	(bad)  
   14002b2ac:	fs gs jo 0x14002b315
   14002b2b0:	outs   dx,BYTE PTR ds:[rsi]
   14002b2b1:	fs outs dx,BYTE PTR gs:[rsi]
   14002b2b4:	movsxd edi,DWORD PTR [rcx+0x3e]
   14002b2b7:	or     eax,0x3c20200a
   14002b2bc:	fs gs jo 0x14002b325
   14002b2c0:	outs   dx,BYTE PTR ds:[rsi]
   14002b2c1:	fs outs dx,BYTE PTR gs:[rsi]
   14002b2c4:	movsxd edi,DWORD PTR [rcx+0x3e]
   14002b2c7:	or     eax,0x2020200a
   14002b2cc:	and    BYTE PTR [rsp+riz*2],bh
   14002b2cf:	gs jo  0x14002b337
   14002b2d2:	outs   dx,BYTE PTR ds:[rsi]
   14002b2d3:	fs outs dx,BYTE PTR gs:[rsi]
   14002b2d6:	je     0x14002b319
   14002b2d8:	jae    0x14002b34d
   14002b2da:	gs ins DWORD PTR es:[rdi],dx
   14002b2dc:	(bad)  
   14002b2dd:	ins    BYTE PTR es:[rdi],dx
   14002b2de:	jns    0x14002b31e
   14002b2e0:	or     eax,0x2020200a
   14002b2e5:	and    BYTE PTR [rax],ah
   14002b2e7:	and    BYTE PTR [rcx+riz*2],bh
   14002b2ea:	jae    0x14002b35f
   14002b2ec:	gs ins DWORD PTR es:[rdi],dx
   14002b2ee:	(bad)  
   14002b2ef:	ins    BYTE PTR es:[rdi],dx
   14002b2f0:	jns    0x14002b33b
   14002b2f2:	fs outs dx,BYTE PTR gs:[rsi]
   14002b2f5:	je     0x14002b360
   14002b2f7:	je     0x14002b372
   14002b2f9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14002b2fd:	gs cmp eax,0x6e697722
   14002b303:	xor    esi,DWORD PTR [rdx]
   14002b305:	and    ah,BYTE PTR [rax]
   14002b307:	outs   dx,BYTE PTR ds:[rsi]
   14002b308:	(bad)  
   14002b309:	ins    DWORD PTR es:[rdi],dx
   14002b30a:	gs cmp eax,0x63694d22
   14002b310:	jb     0x14002b381
   14002b312:	jae    0x14002b383
   14002b314:	data16 je 0x14002b345
   14002b317:	push   rsi
   14002b318:	rex.XB cmp DWORD PTR [r8],esi
   14002b31b:	cs rex.XB push r10
   14002b31e:	push   rsp
   14002b31f:	and    ah,BYTE PTR [rax]
   14002b321:	jbe    0x14002b388
   14002b323:	jb     0x14002b398
   14002b325:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e39223d
   14002b32c:	xor    BYTE PTR [rsi],ch
   14002b32e:	xor    dh,BYTE PTR [rcx]
   14002b330:	xor    BYTE PTR [rdx],dh
   14002b332:	xor    ch,BYTE PTR [rsi]
   14002b334:	cmp    BYTE PTR [rdx],ah
   14002b336:	and    BYTE PTR [rax+0x72],dh
   14002b339:	outs   dx,DWORD PTR ds:[rsi]
   14002b33a:	movsxd esp,DWORD PTR [rbp+0x73]
   14002b33d:	jae    0x14002b3ae
   14002b33f:	jb     0x14002b382
   14002b341:	jb     0x14002b3a6
   14002b343:	push   0x63657469
   14002b348:	je     0x14002b3bf
   14002b34a:	jb     0x14002b3b1
   14002b34c:	cmp    eax,0x646d6122
   14002b351:	ss xor al,0x22
   14002b354:	and    BYTE PTR [rax+0x75],dh
   14002b357:	(bad)  
   14002b358:	ins    BYTE PTR es:[rdi],dx
   14002b359:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14002b360:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14002b364:	and    dh,BYTE PTR [rcx]
   14002b366:	movsxd di,DWORD PTR [rax]
   14002b369:	(bad)  
   14002b36b:	(bad)  
   14002b36c:	cmp    DWORD PTR [rcx+0x31],esp
   14002b36f:	xor    DWORD PTR gs:[rax],edi
   14002b372:	xor    esp,DWORD PTR gs:[rdx+0x22]
   14002b376:	ds cmp al,0x2f
   14002b379:	(bad)  
   14002b37a:	jae    0x14002b3ef
   14002b37c:	gs ins DWORD PTR es:[rdi],dx
   14002b37e:	(bad)  
   14002b37f:	ins    BYTE PTR es:[rdi],dx
   14002b380:	jns    0x14002b3cb
   14002b382:	fs outs dx,BYTE PTR gs:[rsi]
   14002b385:	je     0x14002b3f0
   14002b387:	je     0x14002b402
   14002b389:	ds or  eax,0x2020200a
   14002b38f:	and    BYTE PTR [rdi+rbp*1],bh
   14002b392:	fs gs jo 0x14002b3fb
   14002b396:	outs   dx,BYTE PTR ds:[rsi]
   14002b397:	fs outs dx,BYTE PTR gs:[rsi]
   14002b39a:	je     0x14002b3dd
   14002b39c:	jae    0x14002b411
   14002b39e:	gs ins DWORD PTR es:[rdi],dx
   14002b3a0:	(bad)  
   14002b3a1:	ins    BYTE PTR es:[rdi],dx
   14002b3a2:	jns    0x14002b3e2
   14002b3a4:	or     eax,0x3c20200a
   14002b3a9:	(bad)  
   14002b3aa:	fs gs jo 0x14002b413
   14002b3ae:	outs   dx,BYTE PTR ds:[rsi]
   14002b3af:	fs outs dx,BYTE PTR gs:[rsi]
   14002b3b2:	movsxd edi,DWORD PTR [rcx+0x3e]
   14002b3b5:	or     eax,0x612f3c0a
   14002b3ba:	jae    0x14002b42f
   14002b3bc:	gs ins DWORD PTR es:[rdi],dx
   14002b3be:	(bad)  
   14002b3bf:	ins    BYTE PTR es:[rdi],dx
   14002b3c0:	jns    0x14002b400
   14002b3c2:	push   rax
   14002b3c3:	rex.B

Disassembly of section .reloc:

000000014002c000 <.reloc>:
   14002c000:	add    BYTE PTR [rax+0x1],dl
   14002c003:	add    BYTE PTR [rax-0x2fffffff],bh
   14002c009:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c00a:	fsub   DWORD PTR [rsi-0x59175920]
   14002c010:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c012:	clc    
   14002c013:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c014:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14002c01a:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14002c020:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c022:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14002c024:	nop
   14002c025:	test   al,0x98
   14002c027:	test   al,0xa0
   14002c029:	test   al,0xa8
   14002c02b:	test   al,0xb0
   14002c02d:	test   al,0xb8
   14002c02f:	test   al,0xc0
   14002c031:	test   al,0xc8
   14002c033:	test   al,0xd0
   14002c035:	test   al,0xd8
   14002c037:	test   al,0xe0
   14002c039:	test   al,0xe8
   14002c03b:	test   al,0xf0
   14002c03d:	test   al,0xf8
   14002c03f:	test   al,0x0
   14002c041:	test   eax,0xa910a908
   14002c046:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14002c04c:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14002c052:	test   rax,0xffffffffa958a950
   14002c058:	(bad)  
   14002c059:	test   eax,0xa970a968
   14002c05e:	js     0x14002c009
   14002c060:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14002c067:	test   eax,0xa9a8a9a0
   14002c06c:	mov    al,0xa9
   14002c06e:	mov    eax,0xc8a9c0a9
   14002c073:	test   eax,0xa9d8a9d0
   14002c078:	loopne 0x14002c023
   14002c07a:	call   0x138acb128
   14002c07f:	test   eax,0xaa08aa00
   14002c084:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14002c08a:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14002c090:	stos   BYTE PTR es:[rdi],al
   14002c092:	rex.W stos BYTE PTR es:[rdi],al
   14002c094:	push   rax
   14002c095:	stos   BYTE PTR es:[rdi],al
   14002c096:	pop    rax
   14002c097:	stos   BYTE PTR es:[rdi],al
   14002c098:	(bad)  
   14002c099:	stos   BYTE PTR es:[rdi],al
   14002c09a:	push   0x78aa70aa
   14002c09f:	stos   BYTE PTR es:[rdi],al
   14002c0a0:	sub    BYTE PTR [rdx-0x54775480],0x90
   14002c0a7:	stos   DWORD PTR es:[rdi],eax
   14002c0a8:	cwde   
   14002c0a9:	stos   DWORD PTR es:[rdi],eax
   14002c0aa:	movabs al,ds:0xc0abb8abb0aba8ab
   14002c0b3:	stos   DWORD PTR es:[rdi],eax
   14002c0b4:	enter  0xd0ab,0xab
   14002c0b8:	fsubr  DWORD PTR [rbx-0x54175420]
   14002c0be:	lock stos DWORD PTR es:[rdi],eax
   14002c0c0:	clc    
   14002c0c1:	stos   DWORD PTR es:[rdi],eax
   14002c0c2:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14002c0c9:	lods   al,BYTE PTR ds:[rsi]
   14002c0ca:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14002c0d1:	lods   al,BYTE PTR ds:[rsi]
   14002c0d2:	lods   al,BYTE PTR ds:[rsi]
   14002c0d4:	rex.W lods al,BYTE PTR ds:[rsi]
   14002c0d6:	push   rax
   14002c0d7:	lods   al,BYTE PTR ds:[rsi]
   14002c0d8:	pop    rax
   14002c0d9:	lods   al,BYTE PTR ds:[rsi]
   14002c0da:	(bad)  
   14002c0db:	lods   al,BYTE PTR ds:[rsi]
   14002c0dc:	push   0x78ac70ac
   14002c0e1:	lods   al,BYTE PTR ds:[rsi]
   14002c0e2:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   14002c0ea:	movabs al,ds:0xc0acb8acb0aca8ac
   14002c0f3:	lods   al,BYTE PTR ds:[rsi]
   14002c0f4:	enter  0xd0ac,0xac
   14002c0f8:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   14002c0ff:	lods   al,BYTE PTR ds:[rsi]
   14002c100:	clc    
   14002c101:	lods   al,BYTE PTR ds:[rsi]
   14002c102:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14002c108:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14002c10e:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14002c114:	(bad)  
   14002c115:	lods   eax,DWORD PTR ds:[rsi]
   14002c116:	push   0x78ad70ad
   14002c11b:	lods   eax,DWORD PTR ds:[rsi]
   14002c11c:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14002c123:	lods   eax,DWORD PTR ds:[rsi]
   14002c124:	movabs al,ds:0xc0adb8adb0ada8ad
   14002c12d:	lods   eax,DWORD PTR ds:[rsi]
   14002c12e:	enter  0xd0ad,0xad
   14002c132:	fsubr  DWORD PTR [rbp-0x52175220]
   14002c138:	lock lods eax,DWORD PTR ds:[rsi]
   14002c13a:	clc    
   14002c13b:	lods   eax,DWORD PTR ds:[rsi]
   14002c13c:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14002c142:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   14002c148:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14002c14e:	rex.W scas al,BYTE PTR es:[rdi]
   14002c150:	push   rax
   14002c151:	scas   al,BYTE PTR es:[rdi]
   14002c152:	pop    rax
   14002c153:	scas   al,BYTE PTR es:[rdi]
   14002c154:	(bad)  
   14002c155:	scas   al,BYTE PTR es:[rdi]
   14002c156:	push   0x78ae70ae
   14002c15b:	scas   al,BYTE PTR es:[rdi]
   14002c15c:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14002c163:	scas   al,BYTE PTR es:[rdi]
   14002c164:	movabs al,ds:0xc0aeb8aeb0aea8ae
   14002c16d:	scas   al,BYTE PTR es:[rdi]
   14002c16e:	enter  0xd0ae,0xae
   14002c172:	fsubr  DWORD PTR [rsi-0x51175120]
   14002c178:	lock scas al,BYTE PTR es:[rdi]
   14002c17a:	clc    
   14002c17b:	scas   al,BYTE PTR es:[rdi]
   14002c17c:	add    BYTE PTR [rdi-0x50df50f8],ch
   14002c182:	sub    BYTE PTR [rdi-0x50c750d0],ch
   14002c188:	rex scas eax,DWORD PTR es:[rdi]
   14002c18a:	scas   rax,QWORD PTR es:[rdi]
   14002c18c:	push   rax
   14002c18d:	scas   eax,DWORD PTR es:[rdi]
   14002c18e:	pop    rax
   14002c18f:	scas   eax,DWORD PTR es:[rdi]
   14002c190:	(bad)  
   14002c191:	scas   eax,DWORD PTR es:[rdi]
   14002c192:	push   0x78af70af
   14002c197:	scas   eax,DWORD PTR es:[rdi]
   14002c198:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14002c19f:	scas   eax,DWORD PTR es:[rdi]
   14002c1a0:	movabs al,ds:0xc8afc0afb8afb0af
   14002c1a9:	scas   eax,DWORD PTR es:[rdi]
   14002c1aa:	shr    BYTE PTR [rdi-0x501f5028],1
   14002c1b0:	call   0x138b2b264
   14002c1b5:	scas   eax,DWORD PTR es:[rdi]
   14002c1b6:	add    BYTE PTR [rax],al
   14002c1b8:	add    BYTE PTR [rax+0x1],ah
   14002c1bb:	add    BYTE PTR [rbx+rax*1],dl
   14002c1be:	add    BYTE PTR [rax],al
   14002c1c0:	add    BYTE PTR [rax-0x5fef5ff8],ah
   14002c1c6:	sbb    BYTE PTR [rax-0x5fd75fe0],ah
   14002c1cc:	xor    BYTE PTR [rax-0x5fb75fc0],ah
   14002c1d2:	push   rax
   14002c1d3:	movabs al,ds:0xa070a068a060a058
   14002c1dc:	js     0x14002c17e
   14002c1de:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14002c1e5:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   14002c1ee:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   14002c1f5:	movabs al,ds:0xa0f8a0f0a0e8a0e0
   14002c1fe:	add    BYTE PTR [rcx-0x5eef5ef8],ah
   14002c204:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   14002c20a:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   14002c210:	movabs rax,ds:0xa168a160a158a150
   14002c21a:	jo     0x14002c1bd
   14002c21c:	js     0x14002c1bf
   14002c21e:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14002c225:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   14002c22e:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   14002c235:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   14002c23e:	add    BYTE PTR [rdx-0x5def5df8],ah
   14002c244:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   14002c24a:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   14002c250:	rex.W movabs ds:0xa268a260a258a250,al
   14002c25a:	jo     0x14002c1fe
   14002c25c:	nop
   14002c25d:	movabs ds:0xa2b0a2a8a2a0a298,al
   14002c266:	mov    eax,0xc8a2c0a2
   14002c26b:	movabs ds:0xa2e8a2e0a2d8a2d0,al
   14002c274:	lock movabs ds:0xa310a308a300a2f8,al
   14002c27e:	and    BYTE PTR [rbx-0x5ccf5cd8],ah
   14002c284:	cmp    BYTE PTR [rbx-0x5cb75cc0],ah
   14002c28a:	push   rax
   14002c28b:	movabs ds:0xa370a368a360a358,eax
   14002c294:	js     0x14002c239
   14002c296:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   14002c29d:	movabs ds:0xa460a458a450a3a0,eax
   14002c2a6:	push   0x78a470a4
   14002c2ab:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c2ac:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   14002c2b4:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14002c2bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c2be:	enter  0xd0a4,0xa4
   14002c2c2:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   14002c2c9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c2ca:	clc    
   14002c2cb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c2cc:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14002c2d2:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14002c2d8:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14002c2de:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14002c2e0:	push   rax
   14002c2e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c2e2:	pop    rax
   14002c2e3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c2e4:	(bad)  
   14002c2e5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c2e6:	push   0x78a570a5
   14002c2eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c2ec:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   14002c2f3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c2f4:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   14002c2fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c2fe:	enter  0xd0a5,0xa5
   14002c302:	fsub   DWORD PTR [rbp-0x5a175a20]
   14002c308:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c30a:	clc    
   14002c30b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c30c:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14002c312:	sbb    BYTE PTR [rsi-0x581f59e0],ah
   14002c318:	call   0x138aab3c4
   14002c31d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c31e:	add    BYTE PTR [rax-0x57ef57f8],ch
   14002c324:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14002c32a:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14002c330:	rex.W test al,0x50
   14002c333:	test   al,0x58
   14002c335:	test   al,0x60
   14002c337:	test   al,0x68
   14002c339:	test   al,0x70
   14002c33b:	test   al,0x78
   14002c33d:	test   al,0x80
   14002c33f:	test   al,0x88
   14002c341:	test   al,0x90
   14002c343:	test   al,0x98
   14002c345:	test   al,0xa0
   14002c347:	test   al,0xa8
   14002c349:	test   al,0xb0
   14002c34b:	test   al,0xb8
   14002c34d:	test   al,0xc0
   14002c34f:	test   al,0xc8
   14002c351:	test   al,0xd0
   14002c353:	test   al,0xd8
   14002c355:	test   al,0xe0
   14002c357:	test   al,0xe8
   14002c359:	test   al,0xf0
   14002c35b:	test   al,0xf8
   14002c35d:	test   al,0x0
   14002c35f:	test   eax,0xa910a908
   14002c364:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14002c36a:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14002c370:	test   rax,0xffffffffa958a950
   14002c376:	(bad)  
   14002c377:	test   eax,0xa970a968
   14002c37c:	js     0x14002c327
   14002c37e:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14002c385:	test   eax,0xa9a8a9a0
   14002c38a:	mov    al,0xa9
   14002c38c:	lock stos BYTE PTR es:[rdi],al
   14002c38e:	clc    
   14002c38f:	stos   BYTE PTR es:[rdi],al
   14002c390:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14002c396:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14002c39c:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14002c3a2:	stos   QWORD PTR es:[rdi],rax
   14002c3a4:	push   rax
   14002c3a5:	stos   DWORD PTR es:[rdi],eax
   14002c3a6:	pop    rax
   14002c3a7:	stos   DWORD PTR es:[rdi],eax
   14002c3a8:	(bad)  
   14002c3a9:	stos   DWORD PTR es:[rdi],eax
   14002c3aa:	push   0x78ab70ab
   14002c3af:	stos   DWORD PTR es:[rdi],eax
   14002c3b0:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14002c3b7:	stos   DWORD PTR es:[rdi],eax
   14002c3b8:	movabs al,ds:0xc0abb8abb0aba8ab
   14002c3c1:	stos   DWORD PTR es:[rdi],eax
   14002c3c2:	enter  0xd0ab,0xab
   14002c3c6:	fsubr  DWORD PTR [rbx-0x54175420]
   14002c3cc:	lock stos DWORD PTR es:[rdi],eax
   14002c3ce:	clc    
   14002c3cf:	stos   DWORD PTR es:[rdi],eax
   14002c3d0:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14002c3d7:	lods   al,BYTE PTR ds:[rsi]
   14002c3d8:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14002c3df:	lods   al,BYTE PTR ds:[rsi]
   14002c3e0:	lods   al,BYTE PTR ds:[rsi]
   14002c3e2:	rex.W lods al,BYTE PTR ds:[rsi]
   14002c3e4:	push   rax
   14002c3e5:	lods   al,BYTE PTR ds:[rsi]
   14002c3e6:	pop    rax
   14002c3e7:	lods   al,BYTE PTR ds:[rsi]
   14002c3e8:	(bad)  
   14002c3e9:	lods   al,BYTE PTR ds:[rsi]
   14002c3ea:	push   0x78ac70ac
   14002c3ef:	lods   al,BYTE PTR ds:[rsi]
   14002c3f0:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   14002c3f8:	movabs al,ds:0xd8acd0acb0aca8ac
   14002c401:	lods   al,BYTE PTR ds:[rsi]
   14002c402:	loopne 0x14002c3b0
   14002c404:	call   0x138afb4b5
   14002c409:	lods   al,BYTE PTR ds:[rsi]
   14002c40a:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14002c410:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14002c416:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14002c41c:	lods   rax,QWORD PTR ds:[rsi]
   14002c41e:	push   rax
   14002c41f:	lods   eax,DWORD PTR ds:[rsi]
   14002c420:	pop    rax
   14002c421:	lods   eax,DWORD PTR ds:[rsi]
   14002c422:	(bad)  
   14002c423:	lods   eax,DWORD PTR ds:[rsi]
   14002c424:	push   0x78ad70ad
   14002c429:	lods   eax,DWORD PTR ds:[rsi]
   14002c42a:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14002c431:	lods   eax,DWORD PTR ds:[rsi]
   14002c432:	movabs al,ds:0xc0adb8adb0ada8ad
   14002c43b:	lods   eax,DWORD PTR ds:[rsi]
   14002c43c:	enter  0xd0ad,0xad
   14002c440:	fsubr  DWORD PTR [rbp-0x52175220]
   14002c446:	lock lods eax,DWORD PTR ds:[rsi]
   14002c448:	clc    
   14002c449:	lods   eax,DWORD PTR ds:[rsi]
   14002c44a:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14002c450:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   14002c456:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14002c45c:	rex.W scas al,BYTE PTR es:[rdi]
   14002c45e:	push   rax
   14002c45f:	scas   al,BYTE PTR es:[rdi]
   14002c460:	pop    rax
   14002c461:	scas   al,BYTE PTR es:[rdi]
   14002c462:	(bad)  
   14002c463:	scas   al,BYTE PTR es:[rdi]
   14002c464:	push   0x78ae70ae
   14002c469:	scas   al,BYTE PTR es:[rdi]
   14002c46a:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14002c471:	scas   al,BYTE PTR es:[rdi]
   14002c472:	movabs al,ds:0xc0aeb8aeb0aea8ae
   14002c47b:	scas   al,BYTE PTR es:[rdi]
   14002c47c:	enter  0xd0ae,0xae
   14002c480:	fsubr  DWORD PTR [rsi-0x51175120]
   14002c486:	lock scas al,BYTE PTR es:[rdi]
   14002c488:	clc    
   14002c489:	scas   al,BYTE PTR es:[rdi]
   14002c48a:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14002c490:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14002c496:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   14002c49c:	scas   rax,QWORD PTR es:[rdi]
   14002c49e:	push   rax
   14002c49f:	scas   eax,DWORD PTR es:[rdi]
   14002c4a0:	pop    rax
   14002c4a1:	scas   eax,DWORD PTR es:[rdi]
   14002c4a2:	(bad)  
   14002c4a3:	scas   eax,DWORD PTR es:[rdi]
   14002c4a4:	push   0x78af70af
   14002c4a9:	scas   eax,DWORD PTR es:[rdi]
   14002c4aa:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14002c4b1:	scas   eax,DWORD PTR es:[rdi]
   14002c4b2:	movabs al,ds:0xc0afb8afb0afa8af
   14002c4bb:	scas   eax,DWORD PTR es:[rdi]
   14002c4bc:	enter  0xd0af,0xaf
   14002c4c0:	fsubr  DWORD PTR [rdi-0x50175020]
   14002c4c6:	lock scas eax,DWORD PTR es:[rdi]
   14002c4c8:	clc    
   14002c4c9:	scas   eax,DWORD PTR es:[rdi]
   14002c4ca:	add    BYTE PTR [rax],al
   14002c4cc:	add    BYTE PTR [rax+0x1],dh
   14002c4cf:	add    BYTE PTR [rbx+rax*1],bl
   14002c4d2:	add    BYTE PTR [rax],al
   14002c4d4:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   14002c4da:	cmp    BYTE PTR [rax-0x5fb75fc0],ah
   14002c4e0:	push   rax
   14002c4e1:	movabs al,ds:0xa070a068a060a058
   14002c4ea:	js     0x14002c48c
   14002c4ec:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14002c4f3:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   14002c4fc:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   14002c503:	movabs al,ds:0xa0f8a0f0a0e8a0e0
   14002c50c:	add    BYTE PTR [rcx-0x5eef5ef8],ah
   14002c512:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   14002c518:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   14002c51e:	movabs rax,ds:0xa168a160a158a150
   14002c528:	jo     0x14002c4cb
   14002c52a:	js     0x14002c4cd
   14002c52c:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14002c533:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   14002c53c:	shl    BYTE PTR [rcx-0x5def5e38],0x18
   14002c543:	movabs ds:0xa238a230a228a220,al
   14002c54c:	movabs ds:0xa380a378a370a248,al
   14002c556:	mov    BYTE PTR [rbx-0x5c675c70],ah
   14002c55c:	movabs al,ds:0xc0a3b8a3b0a3a8a3
   14002c565:	movabs ds:0xa3e0a3d8a3d0a3c8,eax
   14002c56e:	call   0x138a6b616
   14002c573:	movabs ds:0xa418a410a408a400,eax
   14002c57c:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   14002c583:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c584:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c586:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c588:	push   rax
   14002c589:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c58a:	pop    rax
   14002c58b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c58c:	(bad)  
   14002c58d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c58e:	push   0x78a470a4
   14002c593:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c594:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   14002c59c:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14002c5a5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c5a6:	enter  0xd0a4,0xa4
   14002c5aa:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   14002c5b1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c5b2:	clc    
   14002c5b3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c5b4:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14002c5ba:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14002c5c0:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14002c5c6:	jo     0x14002c56e
   14002c5c8:	js     0x14002c570
   14002c5ca:	and    BYTE PTR [rsi-0x596f5978],0x98
   14002c5d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c5d2:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14002c5db:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c5dc:	enter  0xd0a6,0xa6
   14002c5e0:	fsub   DWORD PTR [rsi-0x59175920]
   14002c5e6:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c5e8:	clc    
   14002c5e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002c5ea:	add    BYTE PTR [rdi-0x58ef58f8],ah
   14002c5f0:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14002c5f6:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   14002c5fc:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14002c5fe:	push   rax
   14002c5ff:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c600:	pop    rax
   14002c601:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c602:	(bad)  
   14002c603:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c604:	push   0x78a770a7
   14002c609:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c60a:	and    BYTE PTR [rdi-0x586f5878],0x98
   14002c611:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c612:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14002c61b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c61c:	enter  0xd0a7,0xa7
   14002c620:	fsub   DWORD PTR [rdi-0x58175820]
   14002c626:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c628:	clc    
   14002c629:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c62a:	add    BYTE PTR [rax-0x57ef57f8],ch
   14002c630:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14002c636:	xor    BYTE PTR [rax-0x57a757b0],ch
   14002c63c:	(bad)  
   14002c63d:	test   al,0x68
   14002c63f:	test   al,0x70
   14002c641:	test   al,0x78
   14002c643:	test   al,0x80
   14002c645:	test   al,0x88
   14002c647:	test   al,0x90
   14002c649:	test   al,0x98
   14002c64b:	test   al,0xa0
   14002c64d:	test   al,0xa8
   14002c64f:	test   al,0xb0
   14002c651:	test   al,0xb8
   14002c653:	test   al,0xc0
   14002c655:	test   al,0xc8
   14002c657:	test   al,0xd0
   14002c659:	test   al,0xd8
   14002c65b:	test   al,0xe0
   14002c65d:	test   al,0xe8
   14002c65f:	test   al,0xf0
   14002c661:	test   al,0xf8
   14002c663:	test   al,0x0
   14002c665:	test   eax,0xa910a908
   14002c66a:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14002c670:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14002c676:	test   rax,0xffffffffa958a950
   14002c67c:	(bad)  
   14002c67d:	test   eax,0xa970a968
   14002c682:	js     0x14002c62d
   14002c684:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14002c68b:	test   eax,0xa9a8a9a0
   14002c690:	mov    al,0xa9
   14002c692:	mov    eax,0xc8a9c0a9
   14002c697:	test   eax,0xa9d8a9d0
   14002c69c:	loopne 0x14002c647
   14002c69e:	call   0x138acb74c
   14002c6a3:	test   eax,0xaa08aa00
   14002c6a8:	adc    BYTE PTR [rdx-0x55575560],ch
   14002c6ae:	mov    al,0xaa
   14002c6b0:	mov    eax,0xc8aac0aa
   14002c6b5:	stos   BYTE PTR es:[rdi],al
   14002c6b6:	shr    BYTE PTR [rdx-0x551f5528],1
   14002c6bc:	call   0x138adb76b
   14002c6c1:	stos   BYTE PTR es:[rdi],al
   14002c6c2:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14002c6c8:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14002c6ce:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14002c6d4:	stos   QWORD PTR es:[rdi],rax
   14002c6d6:	push   rax
   14002c6d7:	stos   DWORD PTR es:[rdi],eax
   14002c6d8:	pop    rax
   14002c6d9:	stos   DWORD PTR es:[rdi],eax
   14002c6da:	(bad)  
   14002c6db:	stos   DWORD PTR es:[rdi],eax
   14002c6dc:	push   0x78ab70ab
   14002c6e1:	stos   DWORD PTR es:[rdi],eax
   14002c6e2:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14002c6e9:	stos   DWORD PTR es:[rdi],eax
   14002c6ea:	movabs al,ds:0xc0abb8abb0aba8ab
   14002c6f3:	stos   DWORD PTR es:[rdi],eax
   14002c6f4:	enter  0xd0ab,0xab
   14002c6f8:	fsubr  DWORD PTR [rbx-0x54175420]
   14002c6fe:	lock stos DWORD PTR es:[rdi],eax
   14002c700:	clc    
   14002c701:	stos   DWORD PTR es:[rdi],eax
   14002c702:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14002c709:	lods   al,BYTE PTR ds:[rsi]
   14002c70a:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14002c711:	lods   al,BYTE PTR ds:[rsi]
   14002c712:	lods   al,BYTE PTR ds:[rsi]
   14002c714:	rex.W lods al,BYTE PTR ds:[rsi]
   14002c716:	push   rax
   14002c717:	lods   al,BYTE PTR ds:[rsi]
   14002c718:	pop    rax
   14002c719:	lods   al,BYTE PTR ds:[rsi]
   14002c71a:	(bad)  
   14002c71b:	lods   al,BYTE PTR ds:[rsi]
   14002c71c:	push   0xffffffffd0ac70ac
   14002c721:	lods   al,BYTE PTR ds:[rsi]
   14002c722:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   14002c729:	lods   al,BYTE PTR ds:[rsi]
   14002c72a:	clc    
   14002c72b:	lods   al,BYTE PTR ds:[rsi]
   14002c72c:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14002c732:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14002c738:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14002c73e:	lods   rax,QWORD PTR ds:[rsi]
   14002c740:	push   rax
   14002c741:	lods   eax,DWORD PTR ds:[rsi]
   14002c742:	pop    rax
   14002c743:	lods   eax,DWORD PTR ds:[rsi]
   14002c744:	(bad)  
   14002c745:	lods   eax,DWORD PTR ds:[rsi]
   14002c746:	push   0x78ad70ad
   14002c74b:	lods   eax,DWORD PTR ds:[rsi]
   14002c74c:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14002c753:	lods   eax,DWORD PTR ds:[rsi]
   14002c754:	movabs al,ds:0xc0adb8adb0ada8ad
   14002c75d:	lods   eax,DWORD PTR ds:[rsi]
   14002c75e:	enter  0xd0ad,0xad
   14002c762:	fsubr  DWORD PTR [rbp-0x52175220]
   14002c768:	lock lods eax,DWORD PTR ds:[rsi]
   14002c76a:	clc    
   14002c76b:	lods   eax,DWORD PTR ds:[rsi]
   14002c76c:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14002c772:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   14002c778:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14002c77e:	rex.W scas al,BYTE PTR es:[rdi]
   14002c780:	push   rax
   14002c781:	scas   al,BYTE PTR es:[rdi]
   14002c782:	pop    rax
   14002c783:	scas   al,BYTE PTR es:[rdi]
   14002c784:	(bad)  
   14002c785:	scas   al,BYTE PTR es:[rdi]
   14002c786:	push   0x78ae70ae
   14002c78b:	scas   al,BYTE PTR es:[rdi]
   14002c78c:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14002c793:	scas   al,BYTE PTR es:[rdi]
   14002c794:	movabs al,ds:0xc0aeb8aeb0aea8ae
   14002c79d:	scas   al,BYTE PTR es:[rdi]
   14002c79e:	enter  0xd0ae,0xae
   14002c7a2:	fsubr  DWORD PTR [rsi-0x51175120]
   14002c7a8:	lock scas al,BYTE PTR es:[rdi]
   14002c7aa:	clc    
   14002c7ab:	scas   al,BYTE PTR es:[rdi]
   14002c7ac:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14002c7b2:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14002c7b8:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   14002c7be:	scas   rax,QWORD PTR es:[rdi]
   14002c7c0:	push   rax
   14002c7c1:	scas   eax,DWORD PTR es:[rdi]
   14002c7c2:	pop    rax
   14002c7c3:	scas   eax,DWORD PTR es:[rdi]
   14002c7c4:	(bad)  
   14002c7c5:	scas   eax,DWORD PTR es:[rdi]
   14002c7c6:	push   0x78af70af
   14002c7cb:	scas   eax,DWORD PTR es:[rdi]
   14002c7cc:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14002c7d3:	scas   eax,DWORD PTR es:[rdi]
   14002c7d4:	movabs al,ds:0xc0afb8afb0afa8af
   14002c7dd:	scas   eax,DWORD PTR es:[rdi]
   14002c7de:	enter  0xd0af,0xaf
   14002c7e2:	fsubr  DWORD PTR [rdi-0x50175020]
   14002c7e8:	add    BYTE PTR [rax+0x2a40001],al
   14002c7ee:	add    BYTE PTR [rax],al
   14002c7f0:	add    BYTE PTR [rcx-0x5eef5ef8],ah
   14002c7f6:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   14002c7fc:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   14002c802:	movabs rax,ds:0xa168a160a158a150
   14002c80c:	jo     0x14002c7af
   14002c80e:	js     0x14002c7b1
   14002c810:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14002c817:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   14002c820:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   14002c827:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   14002c830:	add    BYTE PTR [rdx-0x5def5df8],ah
   14002c836:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   14002c83c:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   14002c842:	rex.W movabs ds:0xa268a260a258a250,al
   14002c84c:	jo     0x14002c7f0
   14002c84e:	js     0x14002c7f2
   14002c850:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   14002c857:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   14002c860:	shl    BYTE PTR [rdx-0x5d2f5d38],0x70
   14002c867:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c868:	js     0x14002c80e
   14002c86a:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   14002c872:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14002c87b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c87c:	enter  0xd0a4,0xa4
   14002c880:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   14002c887:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c888:	clc    
   14002c889:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002c88a:	add    BYTE PTR [rbp-0x5aef5af8],ah
   14002c890:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   14002c896:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   14002c89c:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14002c89e:	push   rax
   14002c89f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8a0:	pop    rax
   14002c8a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8a2:	(bad)  
   14002c8a3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8a4:	push   0x78a570a5
   14002c8a9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8aa:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   14002c8b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8b2:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   14002c8bb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8bc:	enter  0xd0a5,0xa5
   14002c8c0:	fsub   DWORD PTR [rbp-0x5a175a20]
   14002c8c6:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8c8:	clc    
   14002c8c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002c8ca:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14002c8d0:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   14002c8d6:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14002c8dc:	(bad)  
   14002c8dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c8de:	push   0x78a770a7
   14002c8e3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c8e4:	and    BYTE PTR [rdi-0x586f5878],0x98
   14002c8eb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c8ec:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14002c8f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c8f6:	enter  0xd0a7,0xa7
   14002c8fa:	fsub   DWORD PTR [rdi-0x58175820]
   14002c900:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c902:	clc    
   14002c903:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002c904:	add    BYTE PTR [rax-0x57ef57f8],ch
   14002c90a:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14002c910:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14002c916:	rex.W test al,0x50
   14002c919:	test   al,0x58
   14002c91b:	test   al,0x60
   14002c91d:	test   al,0x68
   14002c91f:	test   al,0x70
   14002c921:	test   al,0x78
   14002c923:	test   al,0x80
   14002c925:	test   al,0x88
   14002c927:	test   al,0x90
   14002c929:	test   al,0x98
   14002c92b:	test   al,0xa0
   14002c92d:	test   al,0xa8
   14002c92f:	test   al,0xb0
   14002c931:	test   al,0xb8
   14002c933:	test   al,0xc0
   14002c935:	test   al,0xc8
   14002c937:	test   al,0xd0
   14002c939:	test   al,0xd8
   14002c93b:	test   al,0xe0
   14002c93d:	test   al,0xe8
   14002c93f:	test   al,0xf0
   14002c941:	test   al,0xf8
   14002c943:	test   al,0x0
   14002c945:	test   eax,0xa910a908
   14002c94a:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14002c950:	xor    BYTE PTR [rcx-0x56875690],ch
   14002c956:	sub    BYTE PTR [rcx-0x566f5678],0x98
   14002c95d:	test   eax,0xa9a8a9a0
   14002c962:	mov    al,0xa9
   14002c964:	mov    eax,0xc8a9c0a9
   14002c969:	test   eax,0xa9d8a9d0
   14002c96e:	loopne 0x14002c919
   14002c970:	call   0x138acba1e
   14002c975:	test   eax,0xaa08aa00
   14002c97a:	adc    BYTE PTR [rdx-0x55df55e8],ch
   14002c980:	sub    BYTE PTR [rdx-0x55c755d0],ch
   14002c986:	stos   BYTE PTR es:[rdi],al
   14002c988:	rex.W stos BYTE PTR es:[rdi],al
   14002c98a:	push   rax
   14002c98b:	stos   BYTE PTR es:[rdi],al
   14002c98c:	pop    rax
   14002c98d:	stos   BYTE PTR es:[rdi],al
   14002c98e:	(bad)  
   14002c98f:	stos   BYTE PTR es:[rdi],al
   14002c990:	push   0x78aa70aa
   14002c995:	stos   BYTE PTR es:[rdi],al
   14002c996:	sub    BYTE PTR [rdx-0x556f5578],0x98
   14002c99d:	stos   BYTE PTR es:[rdi],al
   14002c99e:	movabs al,ds:0xc0aab8aab0aaa8aa
   14002c9a7:	stos   BYTE PTR es:[rdi],al
   14002c9a8:	enter  0xd0aa,0xaa
   14002c9ac:	fsubr  DWORD PTR [rdx-0x55175520]
   14002c9b2:	lock stos BYTE PTR es:[rdi],al
   14002c9b4:	clc    
   14002c9b5:	stos   BYTE PTR es:[rdi],al
   14002c9b6:	add    BYTE PTR [rbx-0x54ef54f8],ch
   14002c9bc:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14002c9c2:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   14002c9c8:	stos   QWORD PTR es:[rdi],rax
   14002c9ca:	push   rax
   14002c9cb:	stos   DWORD PTR es:[rdi],eax
   14002c9cc:	pop    rax
   14002c9cd:	stos   DWORD PTR es:[rdi],eax
   14002c9ce:	(bad)  
   14002c9cf:	stos   DWORD PTR es:[rdi],eax
   14002c9d0:	jo     0x14002c97d
   14002c9d2:	js     0x14002c97f
   14002c9d4:	sub    BYTE PTR [rbx-0x546f5478],0x98
   14002c9db:	stos   DWORD PTR es:[rdi],eax
   14002c9dc:	movabs al,ds:0xc0abb8abb0aba8ab
   14002c9e5:	stos   DWORD PTR es:[rdi],eax
   14002c9e6:	enter  0xd0ab,0xab
   14002c9ea:	fsubr  DWORD PTR [rbx-0x54175420]
   14002c9f0:	lock stos DWORD PTR es:[rdi],eax
   14002c9f2:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14002c9f9:	lods   al,BYTE PTR ds:[rsi]
   14002c9fa:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   14002ca01:	lods   al,BYTE PTR ds:[rsi]
   14002ca02:	lods   al,BYTE PTR ds:[rsi]
   14002ca04:	rex.W lods al,BYTE PTR ds:[rsi]
   14002ca06:	push   rax
   14002ca07:	lods   al,BYTE PTR ds:[rsi]
   14002ca08:	pop    rax
   14002ca09:	lods   al,BYTE PTR ds:[rsi]
   14002ca0a:	(bad)  
   14002ca0b:	lods   al,BYTE PTR ds:[rsi]
   14002ca0c:	push   0x78ac70ac
   14002ca11:	lods   al,BYTE PTR ds:[rsi]
   14002ca12:	sub    BYTE PTR [rax+rdx*8-0x1f532754],0xac
   14002ca1a:	call   0x138afbacb
   14002ca1f:	lods   al,BYTE PTR ds:[rsi]
   14002ca20:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14002ca26:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14002ca2c:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14002ca32:	lods   rax,QWORD PTR ds:[rsi]
   14002ca34:	push   rax
   14002ca35:	lods   eax,DWORD PTR ds:[rsi]
   14002ca36:	pop    rax
   14002ca37:	lods   eax,DWORD PTR ds:[rsi]
   14002ca38:	(bad)  
   14002ca39:	lods   eax,DWORD PTR ds:[rsi]
   14002ca3a:	push   0x78ad70ad
   14002ca3f:	lods   eax,DWORD PTR ds:[rsi]
   14002ca40:	sub    BYTE PTR [rbp-0x526f5278],0x98
   14002ca47:	lods   eax,DWORD PTR ds:[rsi]
   14002ca48:	movabs al,ds:0xc0adb8adb0ada8ad
   14002ca51:	lods   eax,DWORD PTR ds:[rsi]
   14002ca52:	enter  0xd0ad,0xad
   14002ca56:	fsubr  DWORD PTR [rbp-0x52175220]
   14002ca5c:	lock lods eax,DWORD PTR ds:[rsi]
   14002ca5e:	clc    
   14002ca5f:	lods   eax,DWORD PTR ds:[rsi]
   14002ca60:	add    BYTE PTR [rsi-0x51ef51f8],ch
   14002ca66:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   14002ca6c:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14002ca72:	rex.W scas al,BYTE PTR es:[rdi]
   14002ca74:	push   rax
   14002ca75:	scas   al,BYTE PTR es:[rdi]
   14002ca76:	pop    rax
   14002ca77:	scas   al,BYTE PTR es:[rdi]
   14002ca78:	(bad)  
   14002ca79:	scas   al,BYTE PTR es:[rdi]
   14002ca7a:	push   0x78ae70ae
   14002ca7f:	scas   al,BYTE PTR es:[rdi]
   14002ca80:	sub    BYTE PTR [rsi-0x516f5178],0x98
   14002ca87:	scas   al,BYTE PTR es:[rdi]
   14002ca88:	movabs al,ds:0xe0000190000000ae
   14002ca91:	add    BYTE PTR [rax],al
   14002ca93:	add    al,ah
   14002ca95:	movabs al,ds:0xa100a0f8a0f0a0e8
   14002ca9e:	or     BYTE PTR [rcx-0x5ee75ef0],ah
   14002caa4:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   14002caaa:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   14002cab0:	push   rax
   14002cab1:	movabs eax,ds:0xa170a168a160a158
   14002caba:	js     0x14002ca5d
   14002cabc:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   14002cac3:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   14002cacc:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   14002cad3:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   14002cadc:	add    BYTE PTR [rdx-0x5def5df8],ah
   14002cae2:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   14002cae8:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   14002caee:	rex.W movabs ds:0xa268a260a258a250,al
   14002caf8:	jo     0x14002ca9c
   14002cafa:	js     0x14002ca9e
   14002cafc:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   14002cb03:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   14002cb0c:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   14002cb13:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   14002cb1c:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   14002cb22:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   14002cb28:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   14002cb2e:	movabs ds:0xa368a360a358a350,rax
   14002cb38:	jo     0x14002cadd
   14002cb3a:	js     0x14002cadf
   14002cb3c:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   14002cb43:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   14002cb4c:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   14002cb53:	movabs ds:0xa3f8a3f0a3e8a3e0,eax
   14002cb5c:	add    BYTE PTR [rax+rcx*1+0x18a410a4],ah
   14002cb63:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002cb64:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   14002cb6b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002cb6c:	add    al,al
   14002cb6e:	add    DWORD PTR [rax],eax
   14002cb70:	or     al,0x0
   14002cb72:	add    BYTE PTR [rax],al
   14002cb74:	sub    BYTE PTR [rax-0x6fff57d0],ch
   14002cb7a:	add    al,BYTE PTR [rax]
   14002cb7c:	int3   
   14002cb7d:	add    BYTE PTR [rax],al
   14002cb7f:	add    BYTE PTR [rax],al
   14002cb81:	movabs al,ds:0xa070a050a030a008
   14002cb8a:	nop
   14002cb8b:	movabs al,ds:0xa108a0e0a0d8a0b0
   14002cb94:	sub    BYTE PTR [rcx-0x5e875eb0],ah
   14002cb9a:	cwde   
   14002cb9b:	movabs eax,ds:0xa228a208a1e0a1b8
   14002cba4:	push   rax
   14002cba5:	movabs ds:0xa2c8a2c0a298a278,al
   14002cbae:	lock movabs ds:0xa360a340a318a2f8,al
   14002cbb8:	mov    BYTE PTR [rbx-0x5c1f5c48],ah
   14002cbbe:	or     BYTE PTR [rax+rsi*1+0x58a438a4],ah
   14002cbc5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002cbc6:	and    BYTE PTR [rax+rbp*4-0x275b4f5c],0xa4
   14002cbce:	clc    
   14002cbcf:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14002cbd0:	sbb    BYTE PTR [rbp-0x5abf5ae0],ah
   14002cbd6:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14002cbd8:	jo     0x14002cb7f
   14002cbda:	js     0x14002cb81
   14002cbdc:	movabs al,ds:0xf8a5f0a5e8a5c8a5
   14002cbe5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14002cbe6:	add    BYTE PTR [rsi-0x59cf59f8],ah
   14002cbec:	cmp    BYTE PTR [rsi-0x59af59b8],ah
   14002cbf2:	pop    rax
   14002cbf3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002cbf4:	jo     0x14002cb9c
   14002cbf6:	and    BYTE PTR [rsi-0x596f5978],0xa8
   14002cbfd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002cbfe:	mov    eax,0xc8a6c0a6
   14002cc03:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002cc04:	loopne 0x14002cbac
   14002cc06:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002cc08:	clc    
   14002cc09:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14002cc0a:	add    BYTE PTR [rdi-0x58d758e8],ah
   14002cc10:	xor    BYTE PTR [rdi-0x58af58c8],ah
   14002cc16:	(bad)  
   14002cc17:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002cc18:	push   0xffffffff88a770a7
   14002cc1d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002cc1e:	cwde   
   14002cc1f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002cc20:	movabs al,ds:0xd8a7d0a7c0a7a8a7
   14002cc29:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002cc2a:	loopne 0x14002cbd3
   14002cc2c:	clc    
   14002cc2d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14002cc2e:	or     BYTE PTR [rax-0x57e757f0],ch
   14002cc34:	xor    BYTE PTR [rax-0x57b757c0],ch
   14002cc3a:	push   rax
   14002cc3b:	test   al,0x68
   14002cc3d:	test   al,0xa8
   14002cc3f:	test   al,0xb0
   14002cc41:	test   al,0x0
	...
