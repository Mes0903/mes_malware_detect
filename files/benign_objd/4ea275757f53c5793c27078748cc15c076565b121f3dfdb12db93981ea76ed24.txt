
4ea275757f53c5793c27078748cc15c076565b121f3dfdb12db93981ea76ed24.exe:     file format pei-i386


Disassembly of section .rdata:

10001000 <.rdata>:
10001000:	add    BYTE PTR [eax],al
10001002:	add    BYTE PTR [eax],al
10001004:	or     eax,0x59b219
10001009:	add    BYTE PTR [eax],al
1000100b:	add    BYTE PTR ds:0x54000000,cl
10001011:	add    BYTE PTR [eax],al
10001013:	add    BYTE PTR [eax+edx*1],bl
10001016:	add    BYTE PTR [eax],al
10001018:	sbb    al,0x2
1000101a:	add    BYTE PTR [eax],al
1000101c:	add    BYTE PTR [eax],al
1000101e:	add    BYTE PTR [eax],al
10001020:	add    BYTE PTR [eax],dl
10001022:	add    BYTE PTR [eax],al
10001024:	sbb    al,0x0
10001026:	add    BYTE PTR [eax],al
10001028:	cs jb  0x1000108f
1000102b:	popa   
1000102c:	je     0x1000108f
1000102e:	add    BYTE PTR [eax],al
10001030:	sbb    al,0x10
10001032:	add    BYTE PTR [eax],al
10001034:	push   esp
10001035:	add    BYTE PTR [eax],al
10001037:	add    BYTE PTR [esi],ch
10001039:	jb     0x1000109f
1000103b:	popa   
1000103c:	je     0x1000109f
1000103e:	and    al,0x7a
10001040:	jp     0x100010bc
10001042:	bound  esp,QWORD PTR fs:[edi+0x0]
10001046:	add    BYTE PTR [eax],al
10001048:	add    BYTE PTR [eax],ah
1000104a:	add    BYTE PTR [eax],al
1000104c:	rol    BYTE PTR [ecx],0x0
1000104f:	add    BYTE PTR [esi],ch
10001051:	jb     0x100010c6
10001053:	jb     0x100010b8
10001055:	and    al,0x30
10001057:	xor    DWORD PTR [eax],eax
10001059:	add    BYTE PTR [eax],al
1000105b:	add    al,al
1000105d:	and    DWORD PTR [eax],eax
1000105f:	add    BYTE PTR [eax-0x76],dh
10001062:	add    BYTE PTR [eax],al
10001064:	cs jb  0x100010da
10001067:	jb     0x100010cc
10001069:	and    al,0x30
1000106b:	xor    al,BYTE PTR [eax]
1000106d:	add    BYTE PTR [eax],al
	...

Disassembly of section .rsrc:

10002000 <.rsrc>:
	...
1000200c:	add    BYTE PTR [eax],al
1000200e:	add    al,0x0
10002010:	add    eax,DWORD PTR [eax]
10002012:	add    BYTE PTR [eax],al
10002014:	xor    BYTE PTR [eax],al
10002016:	add    BYTE PTR [eax+0xe],al
1000201c:	pusha  
1000201d:	add    BYTE PTR [eax],al
1000201f:	adc    BYTE PTR [eax],0x0
10002022:	add    BYTE PTR [eax],al
10002024:	js     0x10002026
10002026:	add    BYTE PTR [eax+0x18],al
1000202c:	nop
1000202d:	add    BYTE PTR [eax],al
1000202f:	add    BYTE PTR [eax],0x0
	...
1000203e:	add    al,0x0
10002040:	add    DWORD PTR [eax],eax
10002042:	add    BYTE PTR [eax],al
10002044:	test   al,0x0
10002046:	add    BYTE PTR [eax+0x2],al
1000204c:	rol    BYTE PTR [eax],0x0
1000204f:	add    BYTE PTR [ebx],0x0
10002052:	add    BYTE PTR [eax],al
10002054:	fadd   DWORD PTR [eax]
10002056:	add    BYTE PTR [eax+0x4],al
1000205c:	lock add BYTE PTR [eax],al
1000205f:	add    BYTE PTR [eax],0x0
	...
1000206e:	add    DWORD PTR [eax],eax
10002070:	add    DWORD PTR [eax],eax
10002072:	add    BYTE PTR [eax],al
10002074:	or     BYTE PTR [ecx],al
10002076:	add    BYTE PTR [eax+0x0],al
	...
10002084:	add    BYTE PTR [eax],al
10002086:	add    DWORD PTR [eax],eax
10002088:	add    DWORD PTR [eax],eax
1000208a:	add    BYTE PTR [eax],al
1000208c:	and    BYTE PTR [ecx],al
1000208e:	add    BYTE PTR [eax+0x0],al
	...
1000209c:	add    BYTE PTR [eax],al
1000209e:	add    DWORD PTR [eax],eax
100020a0:	add    DWORD PTR [eax],eax
100020a2:	add    BYTE PTR [eax],al
100020a4:	cmp    BYTE PTR [ecx],al
100020a6:	add    BYTE PTR [eax+0x0],al
	...
100020b4:	add    BYTE PTR [eax],al
100020b6:	add    DWORD PTR [eax],eax
100020b8:	or     DWORD PTR [eax+eax*1],eax
100020bb:	add    BYTE PTR [eax+0x1],dl
	...
100020ce:	add    DWORD PTR [eax],eax
100020d0:	or     DWORD PTR [eax+eax*1],eax
100020d3:	add    BYTE PTR [eax+0x1],ah
	...
100020e6:	add    DWORD PTR [eax],eax
100020e8:	or     DWORD PTR [eax+eax*1],eax
100020eb:	add    BYTE PTR [eax+0x1],dh
	...
100020fe:	add    DWORD PTR [eax],eax
10002100:	or     DWORD PTR [eax+eax*1],eax
10002103:	add    BYTE PTR [eax+0x1],al
	...
10002115:	add    BYTE PTR [ecx],al
10002117:	add    BYTE PTR [ecx],cl
10002119:	add    al,0x0
1000211b:	add    BYTE PTR [eax+0x1],dl
	...
1000212d:	add    BYTE PTR [ecx],al
1000212f:	add    BYTE PTR [ecx],cl
10002131:	add    al,0x0
10002133:	add    BYTE PTR [eax+0x1],ah
	...
10002145:	add    BYTE PTR [ecx],al
10002147:	add    BYTE PTR [ecx],cl
10002149:	add    al,0x0
1000214b:	add    BYTE PTR [eax+0x8000001],dh
10002151:	sub    BYTE PTR [eax],al
10002153:	add    BYTE PTR [ebx],ch
10002155:	dec    ecx
	...
1000215e:	add    BYTE PTR [eax],al
10002160:	cmp    BYTE PTR [ecx+0x0],dh
10002163:	add    BYTE PTR [eax+0x25],ch
10002169:	add    BYTE PTR [eax],al
1000216b:	add    BYTE PTR [eax],al
1000216d:	add    BYTE PTR [eax],al
1000216f:	add    al,ah
10002171:	xchg   esi,eax
10002172:	add    BYTE PTR [eax],al
10002174:	test   al,0x10
	...
1000217e:	add    BYTE PTR [eax],al
10002180:	mov    BYTE PTR [edi+0x4680000],ah
	...
1000218e:	add    BYTE PTR [eax],al
10002190:	lock stos DWORD PTR es:[edi],eax
10002192:	add    BYTE PTR [eax],al
10002194:	add    BYTE PTR ds:[eax],al
	...
1000219f:	add    al,al
100021a1:	and    DWORD PTR [eax],eax
100021a3:	add    BYTE PTR [eax+0x4],cl
	...
100021ae:	add    BYTE PTR [eax],al
100021b0:	or     BYTE PTR [esi],ah
100021b2:	add    BYTE PTR [eax],al
100021b4:	std    
100021b5:	add    DWORD PTR [eax],eax
	...
100021bf:	add    BYTE PTR [eax+0x4],cl
100021c2:	xor    al,0x0
100021c4:	add    BYTE PTR [eax],al
100021c6:	push   esi
100021c7:	add    BYTE PTR [ebx+0x0],dl
100021ca:	pop    edi
100021cb:	add    BYTE PTR [esi+0x0],dl
100021ce:	inc    ebp
100021cf:	add    BYTE PTR [edx+0x0],dl
100021d2:	push   ebx
100021d3:	add    BYTE PTR [ecx+0x0],cl
100021d6:	dec    edi
100021d7:	add    BYTE PTR [esi+0x0],cl
100021da:	pop    edi
100021db:	add    BYTE PTR [ecx+0x0],cl
100021de:	dec    esi
100021df:	add    BYTE PTR [esi+0x0],al
100021e2:	dec    edi
100021e3:	add    BYTE PTR [eax],al
100021e5:	add    BYTE PTR [eax],al
100021e7:	add    BYTE PTR [ebp+0xfeef04],bh
100021ed:	add    BYTE PTR [ecx],al
100021ef:	add    BYTE PTR [eax],al
100021f1:	add    BYTE PTR [eax],dl
100021f3:	add    BYTE PTR [ebx],bh
100021f5:	or     BYTE PTR [esi+0x10000020],al
100021fb:	add    BYTE PTR [eax],al
100021fd:	add    BYTE PTR [esi+0x3f20],al
10002203:	add    BYTE PTR [edx],ah
10002205:	add    BYTE PTR [eax],al
10002207:	add    BYTE PTR [eax+eax*1],al
1000220a:	add    al,0x0
	...
1000221c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000221d:	add    eax,DWORD PTR [eax]
1000221f:	add    BYTE PTR [ecx],al
10002221:	add    BYTE PTR [ebx+0x0],dl
10002224:	je     0x10002226
10002226:	jb     0x10002228
10002228:	imul   eax,DWORD PTR [eax],0x67006e
1000222e:	inc    esi
1000222f:	add    BYTE PTR [ecx+0x0],ch
10002232:	ins    BYTE PTR es:[edi],dx
10002233:	add    BYTE PTR [ebp+0x0],ah
10002236:	dec    ecx
10002237:	add    BYTE PTR [esi+0x0],ch
1000223a:	data16 add BYTE PTR [edi+0x0],ch
1000223e:	add    BYTE PTR [eax],al
10002240:	add    BYTE PTR [ebx],0x0
10002243:	add    BYTE PTR [ecx],al
10002245:	add    BYTE PTR [eax],dh
10002247:	add    BYTE PTR [eax+eax*1],dh
1000224a:	xor    BYTE PTR [eax],al
1000224c:	cmp    DWORD PTR [eax],eax
1000224e:	xor    BYTE PTR [eax],al
10002250:	xor    al,0x0
10002252:	inc    ebp
10002253:	add    BYTE PTR [eax+eax*1],dh
10002256:	add    BYTE PTR [eax],al
10002258:	dec    esp
10002259:	add    BYTE PTR [esi],dl
1000225b:	add    BYTE PTR [ecx],al
1000225d:	add    BYTE PTR [ebx+0x0],al
10002260:	outs   dx,DWORD PTR ds:[esi]
10002261:	add    BYTE PTR [ebp+0x0],ch
10002264:	jo     0x10002266
10002266:	popa   
10002267:	add    BYTE PTR [esi+0x0],ch
1000226a:	jns    0x1000226c
1000226c:	dec    esi
1000226d:	add    BYTE PTR [ecx+0x0],ah
10002270:	ins    DWORD PTR es:[edi],dx
10002271:	add    BYTE PTR [ebp+0x0],ah
10002274:	add    BYTE PTR [eax],al
10002276:	add    BYTE PTR [eax],al
10002278:	dec    ebp
10002279:	add    BYTE PTR [ecx+0x0],ch
1000227c:	arpl   WORD PTR [eax],ax
1000227e:	jb     0x10002280
10002280:	outs   dx,DWORD PTR ds:[esi]
10002281:	add    BYTE PTR [ebx+0x0],dh
10002284:	outs   dx,DWORD PTR ds:[esi]
10002285:	add    BYTE PTR [esi+0x0],ah
10002288:	je     0x1000228a
1000228a:	and    BYTE PTR [eax],al
1000228c:	inc    ebx
1000228d:	add    BYTE PTR [edi+0x0],ch
10002290:	jb     0x10002292
10002292:	jo     0x10002294
10002294:	outs   dx,DWORD PTR ds:[esi]
10002295:	add    BYTE PTR [edx+0x0],dh
10002298:	popa   
10002299:	add    BYTE PTR [eax+eax*1+0x69],dh
1000229d:	add    BYTE PTR [edi+0x0],ch
100022a0:	outs   dx,BYTE PTR ds:[esi]
100022a1:	add    BYTE PTR [eax],al
100022a3:	add    BYTE PTR [eax+0x0],ch
100022a6:	and    BYTE PTR [eax],al
100022a8:	add    DWORD PTR [eax],eax
100022aa:	inc    esi
100022ab:	add    BYTE PTR [ecx+0x0],ch
100022ae:	ins    BYTE PTR es:[edi],dx
100022af:	add    BYTE PTR [ebp+0x0],ah
100022b2:	inc    esp
100022b3:	add    BYTE PTR [ebp+0x0],ah
100022b6:	jae    0x100022b8
100022b8:	arpl   WORD PTR [eax],ax
100022ba:	jb     0x100022bc
100022bc:	imul   eax,DWORD PTR [eax],0x740070
100022c2:	imul   eax,DWORD PTR [eax],0x6e006f
100022c8:	add    BYTE PTR [eax],al
100022ca:	add    BYTE PTR [eax],al
100022cc:	dec    ebp
100022cd:	add    BYTE PTR [ecx+0x0],ch
100022d0:	arpl   WORD PTR [eax],ax
100022d2:	jb     0x100022d4
100022d4:	outs   dx,DWORD PTR ds:[esi]
100022d5:	add    BYTE PTR [ebx+0x0],dh
100022d8:	outs   dx,DWORD PTR ds:[esi]
100022d9:	add    BYTE PTR [esi+0x0],ah
100022dc:	je     0x100022de
100022de:	and    BYTE PTR [eax],al
100022e0:	dec    edi
100022e1:	add    BYTE PTR [esi+0x0],ah
100022e4:	data16 add BYTE PTR [ecx+0x0],ch
100022e8:	arpl   WORD PTR [eax],ax
100022ea:	add    BYTE PTR gs:[eax],ah
100022ed:	add    BYTE PTR [edx],dh
100022ef:	add    BYTE PTR [eax],dh
100022f1:	add    BYTE PTR [ecx],dh
100022f3:	add    BYTE PTR [esi],dh
100022f5:	add    BYTE PTR [eax],ah
100022f7:	add    BYTE PTR [ebx+0x0],ah
100022fa:	outs   dx,DWORD PTR ds:[esi]
100022fb:	add    BYTE PTR [ebp+0x0],ch
100022fe:	jo     0x10002300
10002300:	outs   dx,DWORD PTR ds:[esi]
10002301:	add    BYTE PTR [esi+0x0],ch
10002304:	add    BYTE PTR gs:[esi+0x0],ch
10002308:	je     0x1000230a
1000230a:	add    BYTE PTR [eax],al
1000230c:	add    BYTE PTR ds:[edi],cl
1000230f:	add    BYTE PTR [ecx],al
10002311:	add    BYTE PTR [esi+0x0],al
10002314:	imul   eax,DWORD PTR [eax],0x65006c
1000231a:	push   esi
1000231b:	add    BYTE PTR [ebp+0x0],ah
1000231e:	jb     0x10002320
10002320:	jae    0x10002322
10002322:	imul   eax,DWORD PTR [eax],0x6e006f
10002328:	add    BYTE PTR [eax],al
1000232a:	add    BYTE PTR [eax],al
1000232c:	xor    DWORD PTR [eax],eax
1000232e:	add    BYTE PTR ss:[esi],ch
10002331:	add    BYTE PTR [eax],dh
10002333:	add    BYTE PTR [esi],ch
10002335:	add    BYTE PTR [eax],bh
10002337:	add    BYTE PTR [ebx],dh
10002339:	add    BYTE PTR [edx],dh
1000233b:	add    BYTE PTR [esi],dh
1000233d:	add    BYTE PTR [esi],ch
1000233f:	add    BYTE PTR [edx],dh
10002341:	add    BYTE PTR [ecx],dh
10002343:	add    BYTE PTR [eax],dh
10002345:	add    BYTE PTR [edi],dh
10002347:	add    BYTE PTR [eax],al
10002349:	add    BYTE PTR [eax],al
1000234b:	add    BYTE PTR [eax+eax*1],dh
1000234e:	or     al,BYTE PTR [eax]
10002350:	add    DWORD PTR [eax],eax
10002352:	dec    ecx
10002353:	add    BYTE PTR [esi+0x0],ch
10002356:	je     0x10002358
10002358:	add    BYTE PTR gs:[edx+0x0],dh
1000235c:	outs   dx,BYTE PTR ds:[esi]
1000235d:	add    BYTE PTR [ecx+0x0],ah
10002360:	ins    BYTE PTR es:[edi],dx
10002361:	add    BYTE PTR [esi+0x0],cl
10002364:	popa   
10002365:	add    BYTE PTR [ebp+0x0],ch
10002368:	add    BYTE PTR gs:[eax],al
1000236b:	add    BYTE PTR [ecx+0x0],ch
1000236e:	arpl   WORD PTR [eax],ax
10002370:	outs   dx,DWORD PTR ds:[esi]
10002371:	add    BYTE PTR [esi+0x0],ch
10002374:	jae    0x10002376
10002376:	add    BYTE PTR cs:[ebp+0x0],ah
1000237a:	js     0x1000237c
1000237c:	add    BYTE PTR gs:[eax],al
1000237f:	add    BYTE PTR [esi+0x1003f00],ah
10002385:	add    BYTE PTR [eax+eax*1+0x65],cl
10002389:	add    BYTE PTR [edi+0x0],ah
1000238c:	popa   
1000238d:	add    BYTE PTR [eax+eax*1+0x54],ch
10002391:	add    BYTE PTR [edx+0x0],dh
10002394:	popa   
10002395:	add    BYTE PTR [eax+eax*1+0x65],ah
10002399:	add    BYTE PTR [ebp+0x0],ch
1000239c:	popa   
1000239d:	add    BYTE PTR [edx+0x0],dh
100023a0:	imul   eax,DWORD PTR [eax],0x73
100023a3:	add    BYTE PTR [ecx],dh
100023a5:	add    BYTE PTR [eax],al
100023a7:	add    BYTE PTR [ebp+0x0],cl
100023aa:	imul   eax,DWORD PTR [eax],0x720063
100023b0:	outs   dx,DWORD PTR ds:[esi]
100023b1:	add    BYTE PTR [ebx+0x0],dh
100023b4:	outs   dx,DWORD PTR ds:[esi]
100023b5:	add    BYTE PTR [esi+0x0],ah
100023b8:	je     0x100023ba
100023ba:	scas   al,BYTE PTR es:[edi]
100023bb:	add    BYTE PTR [eax],ah
100023bd:	add    BYTE PTR [ecx+0x0],ch
100023c0:	jae    0x100023c2
100023c2:	and    BYTE PTR [eax],al
100023c4:	popa   
100023c5:	add    BYTE PTR [eax],ah
100023c7:	add    BYTE PTR [edx+0x0],dh
100023ca:	add    BYTE PTR gs:[edi+0x0],ah
100023ce:	imul   eax,DWORD PTR [eax],0x740073
100023d4:	add    BYTE PTR gs:[edx+0x0],dh
100023d8:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
100023dd:	add    BYTE PTR [eax+eax*1+0x72],dh
100023e1:	add    BYTE PTR [ecx+0x0],ah
100023e4:	add    BYTE PTR fs:[ebp+0x0],ah
100023e8:	ins    DWORD PTR es:[edi],dx
100023e9:	add    BYTE PTR [ecx+0x0],ah
100023ec:	jb     0x100023ee
100023ee:	imul   eax,DWORD PTR [eax],0x20
100023f1:	add    BYTE PTR [edi+0x0],ch
100023f4:	data16 add BYTE PTR [eax],ah
100023f7:	add    BYTE PTR [ebp+0x0],cl
100023fa:	imul   eax,DWORD PTR [eax],0x720063
10002400:	outs   dx,DWORD PTR ds:[esi]
10002401:	add    BYTE PTR [ebx+0x0],dh
10002404:	outs   dx,DWORD PTR ds:[esi]
10002405:	add    BYTE PTR [esi+0x0],ah
10002408:	je     0x1000240a
1000240a:	and    BYTE PTR [eax],al
1000240c:	inc    ebx
1000240d:	add    BYTE PTR [edi+0x0],ch
10002410:	jb     0x10002412
10002412:	jo     0x10002414
10002414:	outs   dx,DWORD PTR ds:[esi]
10002415:	add    BYTE PTR [edx+0x0],dh
10002418:	popa   
10002419:	add    BYTE PTR [eax+eax*1+0x69],dh
1000241d:	add    BYTE PTR [edi+0x0],ch
10002420:	outs   dx,BYTE PTR ds:[esi]
10002421:	add    BYTE PTR [esi],ch
10002423:	add    BYTE PTR [eax],al
10002425:	add    BYTE PTR [eax],al
10002427:	add    BYTE PTR [edx+0x1003d00],ah
1000242d:	add    BYTE PTR [eax+eax*1+0x65],cl
10002431:	add    BYTE PTR [edi+0x0],ah
10002434:	popa   
10002435:	add    BYTE PTR [eax+eax*1+0x54],ch
10002439:	add    BYTE PTR [edx+0x0],dh
1000243c:	popa   
1000243d:	add    BYTE PTR [eax+eax*1+0x65],ah
10002441:	add    BYTE PTR [ebp+0x0],ch
10002444:	popa   
10002445:	add    BYTE PTR [edx+0x0],dh
10002448:	imul   eax,DWORD PTR [eax],0x73
1000244b:	add    BYTE PTR [edx],dh
1000244d:	add    BYTE PTR [eax],al
1000244f:	add    BYTE PTR [edi+0x0],dl
10002452:	imul   eax,DWORD PTR [eax],0x64006e
10002458:	outs   dx,DWORD PTR ds:[esi]
10002459:	add    BYTE PTR [edi+0x0],dh
1000245c:	jae    0x1000245e
1000245e:	scas   al,BYTE PTR es:[edi]
1000245f:	add    BYTE PTR [eax],ah
10002461:	add    BYTE PTR [ecx+0x0],ch
10002464:	jae    0x10002466
10002466:	and    BYTE PTR [eax],al
10002468:	popa   
10002469:	add    BYTE PTR [eax],ah
1000246b:	add    BYTE PTR [edx+0x0],dh
1000246e:	add    BYTE PTR gs:[edi+0x0],ah
10002472:	imul   eax,DWORD PTR [eax],0x740073
10002478:	add    BYTE PTR gs:[edx+0x0],dh
1000247c:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
10002481:	add    BYTE PTR [eax+eax*1+0x72],dh
10002485:	add    BYTE PTR [ecx+0x0],ah
10002488:	add    BYTE PTR fs:[ebp+0x0],ah
1000248c:	ins    DWORD PTR es:[edi],dx
1000248d:	add    BYTE PTR [ecx+0x0],ah
10002490:	jb     0x10002492
10002492:	imul   eax,DWORD PTR [eax],0x20
10002495:	add    BYTE PTR [edi+0x0],ch
10002498:	data16 add BYTE PTR [eax],ah
1000249b:	add    BYTE PTR [ebp+0x0],cl
1000249e:	imul   eax,DWORD PTR [eax],0x720063
100024a4:	outs   dx,DWORD PTR ds:[esi]
100024a5:	add    BYTE PTR [ebx+0x0],dh
100024a8:	outs   dx,DWORD PTR ds:[esi]
100024a9:	add    BYTE PTR [esi+0x0],ah
100024ac:	je     0x100024ae
100024ae:	and    BYTE PTR [eax],al
100024b0:	inc    ebx
100024b1:	add    BYTE PTR [edi+0x0],ch
100024b4:	jb     0x100024b6
100024b6:	jo     0x100024b8
100024b8:	outs   dx,DWORD PTR ds:[esi]
100024b9:	add    BYTE PTR [edx+0x0],dh
100024bc:	popa   
100024bd:	add    BYTE PTR [eax+eax*1+0x69],dh
100024c1:	add    BYTE PTR [edi+0x0],ch
100024c4:	outs   dx,BYTE PTR ds:[esi]
100024c5:	add    BYTE PTR [esi],ch
100024c7:	add    BYTE PTR [eax],al
100024c9:	add    BYTE PTR [eax],al
100024cb:	add    BYTE PTR [eax+eax*1],bh
100024ce:	or     al,BYTE PTR [eax]
100024d0:	add    DWORD PTR [eax],eax
100024d2:	dec    edi
100024d3:	add    BYTE PTR [edx+0x0],dh
100024d6:	imul   eax,DWORD PTR [eax],0x690067
100024dc:	outs   dx,BYTE PTR ds:[esi]
100024dd:	add    BYTE PTR [ecx+0x0],ah
100024e0:	ins    BYTE PTR es:[edi],dx
100024e1:	add    BYTE PTR [esi+0x0],al
100024e4:	imul   eax,DWORD PTR [eax],0x65006c
100024ea:	outs   dx,BYTE PTR ds:[esi]
100024eb:	add    BYTE PTR [ecx+0x0],ah
100024ee:	ins    DWORD PTR es:[edi],dx
100024ef:	add    BYTE PTR [ebp+0x0],ah
100024f2:	add    BYTE PTR [eax],al
100024f4:	imul   eax,DWORD PTR [eax],0x6f0063
100024fa:	outs   dx,BYTE PTR ds:[esi]
100024fb:	add    BYTE PTR [ebx+0x0],dh
100024fe:	add    BYTE PTR cs:[ebp+0x0],ah
10002502:	js     0x10002504
10002504:	add    BYTE PTR gs:[eax],al
10002507:	add    BYTE PTR [eax+eax*1+0x16],cl
1000250b:	add    BYTE PTR [ecx],al
1000250d:	add    BYTE PTR [eax+0x0],dl
10002510:	jb     0x10002512
10002512:	outs   dx,DWORD PTR ds:[esi]
10002513:	add    BYTE PTR [eax+eax*1+0x75],ah
10002517:	add    BYTE PTR [ebx+0x0],ah
1000251a:	je     0x1000251c
1000251c:	dec    esi
1000251d:	add    BYTE PTR [ecx+0x0],ah
10002520:	ins    DWORD PTR es:[edi],dx
10002521:	add    BYTE PTR [ebp+0x0],ah
10002524:	add    BYTE PTR [eax],al
10002526:	add    BYTE PTR [eax],al
10002528:	dec    ebp
10002529:	add    BYTE PTR [ecx+0x0],ch
1000252c:	arpl   WORD PTR [eax],ax
1000252e:	jb     0x10002530
10002530:	outs   dx,DWORD PTR ds:[esi]
10002531:	add    BYTE PTR [ebx+0x0],dh
10002534:	outs   dx,DWORD PTR ds:[esi]
10002535:	add    BYTE PTR [esi+0x0],ah
10002538:	je     0x1000253a
1000253a:	and    BYTE PTR [eax],al
1000253c:	dec    edi
1000253d:	add    BYTE PTR [esi+0x0],ah
10002540:	data16 add BYTE PTR [ecx+0x0],ch
10002544:	arpl   WORD PTR [eax],ax
10002546:	add    BYTE PTR gs:[eax],ah
10002549:	add    BYTE PTR [edx],dh
1000254b:	add    BYTE PTR [eax],dh
1000254d:	add    BYTE PTR [ecx],dh
1000254f:	add    BYTE PTR [esi],dh
10002551:	add    BYTE PTR [eax],al
10002553:	add    BYTE PTR [edx+0x0],al
10002556:	sldt   WORD PTR [ecx]
10002559:	add    BYTE PTR [eax+0x0],dl
1000255c:	jb     0x1000255e
1000255e:	outs   dx,DWORD PTR ds:[esi]
1000255f:	add    BYTE PTR [eax+eax*1+0x75],ah
10002563:	add    BYTE PTR [ebx+0x0],ah
10002566:	je     0x10002568
10002568:	push   esi
10002569:	add    BYTE PTR [ebp+0x0],ah
1000256c:	jb     0x1000256e
1000256e:	jae    0x10002570
10002570:	imul   eax,DWORD PTR [eax],0x6e006f
10002576:	add    BYTE PTR [eax],al
10002578:	xor    DWORD PTR [eax],eax
1000257a:	add    BYTE PTR ss:[esi],ch
1000257d:	add    BYTE PTR [eax],dh
1000257f:	add    BYTE PTR [esi],ch
10002581:	add    BYTE PTR [eax],bh
10002583:	add    BYTE PTR [ebx],dh
10002585:	add    BYTE PTR [edx],dh
10002587:	add    BYTE PTR [esi],dh
10002589:	add    BYTE PTR [esi],ch
1000258b:	add    BYTE PTR [edx],dh
1000258d:	add    BYTE PTR [ecx],dh
1000258f:	add    BYTE PTR [eax],dh
10002591:	add    BYTE PTR [edi],dh
10002593:	add    BYTE PTR [eax],al
10002595:	add    BYTE PTR [eax],al
10002597:	add    BYTE PTR [edx],ch
10002599:	add    BYTE PTR ds:0x4d000100,al
1000259f:	add    BYTE PTR [edi+0x0],cl
100025a2:	push   ebx
100025a3:	add    BYTE PTR [ebp+0x0],al
100025a6:	push   esi
100025a7:	add    BYTE PTR [ebp+0x0],ah
100025aa:	jb     0x100025ac
100025ac:	jae    0x100025ae
100025ae:	imul   eax,DWORD PTR [eax],0x6e006f
100025b4:	add    BYTE PTR [eax],al
100025b6:	add    BYTE PTR [eax],al
100025b8:	inc    edx
100025b9:	add    BYTE PTR [ebp+0x0],al
100025bc:	push   esp
100025bd:	add    BYTE PTR [ecx+0x0],al
100025c0:	add    BYTE PTR [eax],al
100025c2:	add    BYTE PTR [eax],al
100025c4:	inc    esp
100025c5:	add    BYTE PTR [eax],al
100025c7:	add    BYTE PTR [ecx],al
100025c9:	add    BYTE PTR [esi+0x0],dl
100025cc:	popa   
100025cd:	add    BYTE PTR [edx+0x0],dh
100025d0:	inc    esi
100025d1:	add    BYTE PTR [ecx+0x0],ch
100025d4:	ins    BYTE PTR es:[edi],dx
100025d5:	add    BYTE PTR [ebp+0x0],ah
100025d8:	dec    ecx
100025d9:	add    BYTE PTR [esi+0x0],ch
100025dc:	data16 add BYTE PTR [edi+0x0],ch
100025e0:	add    BYTE PTR [eax],al
100025e2:	add    BYTE PTR [eax],al
100025e4:	and    al,0x0
100025e6:	add    al,0x0
100025e8:	add    BYTE PTR [eax],al
100025ea:	push   esp
100025eb:	add    BYTE PTR [edx+0x0],dh
100025ee:	popa   
100025ef:	add    BYTE PTR [esi+0x0],ch
100025f2:	jae    0x100025f4
100025f4:	ins    BYTE PTR es:[edi],dx
100025f5:	add    BYTE PTR [ecx+0x0],ah
100025f8:	je     0x100025fa
100025fa:	imul   eax,DWORD PTR [eax],0x6e006f
10002600:	add    BYTE PTR [eax],al
10002602:	add    BYTE PTR [eax],al
10002604:	add    BYTE PTR [eax],al
10002606:	in     al,0x4
10002608:	cmp    al,0x3f
1000260a:	js     0x10002679
1000260c:	ins    BYTE PTR es:[edi],dx
1000260d:	and    BYTE PTR [esi+0x65],dh
10002610:	jb     0x10002685
10002612:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
10002619:	xor    BYTE PTR [edx],ah
1000261b:	and    BYTE PTR [ebp+0x6e],ah
1000261e:	arpl   WORD PTR [edi+0x64],bp
10002621:	imul   ebp,DWORD PTR [esi+0x67],0x5455223d
10002628:	inc    esi
10002629:	sub    eax,0x73202238
1000262e:	je     0x10002691
10002630:	outs   dx,BYTE PTR ds:[esi]
10002631:	fs popa 
10002633:	ins    BYTE PTR es:[edi],dx
10002634:	outs   dx,DWORD PTR ds:[esi]
10002635:	outs   dx,BYTE PTR ds:[esi]
10002636:	gs cmp eax,0x73657922
1000263c:	and    ah,BYTE PTR [eax]
1000263e:	aas    
1000263f:	ds or  eax,0x73613c0a
10002645:	jae    0x100026ac
10002647:	ins    DWORD PTR es:[edi],dx
10002648:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
1000264c:	js     0x100026bb
1000264e:	ins    BYTE PTR es:[edi],dx
1000264f:	outs   dx,BYTE PTR ds:[esi]
10002650:	jae    0x1000268f
10002652:	and    dh,BYTE PTR [ebp+0x72]
10002655:	outs   dx,BYTE PTR ds:[esi]
10002656:	cmp    dh,BYTE PTR [ebx+0x63]
10002659:	push   0x73616d65
1000265e:	sub    eax,0x7263696d
10002663:	outs   dx,DWORD PTR ds:[esi]
10002664:	jae    0x100026d5
10002666:	data16 je 0x10002696
10002669:	arpl   WORD PTR [edi+0x6d],bp
1000266c:	cmp    ah,BYTE PTR [ecx+0x73]
1000266f:	ins    DWORD PTR es:[edi],dx
10002670:	cs jbe 0x100026a4
10002673:	and    ah,BYTE PTR [eax]
10002675:	ins    DWORD PTR es:[edi],dx
10002676:	popa   
10002677:	outs   dx,BYTE PTR ds:[esi]
10002678:	imul   esp,DWORD PTR [esi+0x65],0x65567473
1000267f:	jb     0x100026f4
10002681:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
10002688:	xor    BYTE PTR [edx],ah
1000268a:	ds or  eax,0x6e3c090a
10002690:	outs   dx,DWORD PTR ds:[esi]
10002691:	dec    ecx
10002692:	outs   dx,BYTE PTR ds:[esi]
10002693:	push   0x74697265
10002698:	and    BYTE PTR [edi],ch
1000269a:	ds or  eax,0x613c090a
100026a0:	jae    0x10002715
100026a2:	gs ins DWORD PTR es:[edi],dx
100026a4:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
100026a8:	fs outs dx,BYTE PTR gs:[esi]
100026ab:	je     0x10002716
100026ad:	je     0x10002728
100026af:	and    BYTE PTR [eax+0x72],dh
100026b2:	outs   dx,DWORD PTR ds:[esi]
100026b3:	arpl   WORD PTR [ebp+0x73],sp
100026b6:	jae    0x10002727
100026b8:	jb     0x100026fb
100026ba:	jb     0x1000271f
100026bc:	push   0x63657469
100026c1:	je     0x10002738
100026c3:	jb     0x1000272a
100026c5:	cmp    eax,0x36387822
100026ca:	and    ah,BYTE PTR [eax]
100026cc:	je     0x10002747
100026ce:	jo     0x10002735
100026d0:	cmp    eax,0x6e697722
100026d5:	xor    esi,DWORD PTR [edx]
100026d7:	and    ah,BYTE PTR [eax]
100026d9:	outs   dx,BYTE PTR ds:[esi]
100026da:	popa   
100026db:	ins    DWORD PTR es:[edi],dx
100026dc:	gs cmp eax,0x6f636922
100026e2:	outs   dx,BYTE PTR ds:[esi]
100026e3:	and    ah,BYTE PTR [eax]
100026e5:	jbe    0x1000274c
100026e7:	jb     0x1000275c
100026e9:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
100026f0:	xor    BYTE PTR [esi],ch
100026f2:	xor    BYTE PTR [esi],ch
100026f4:	xor    BYTE PTR [edx],ah
100026f6:	and    BYTE PTR [edi],ch
100026f8:	ds or  eax,0x643c090a
100026fe:	gs jae 0x10002764
10002701:	jb     0x1000276c
10002703:	jo     0x10002779
10002705:	imul   ebp,DWORD PTR [edi+0x6e],0x6f63693e
1000270c:	outs   dx,BYTE PTR ds:[esi]
1000270d:	cmp    al,0x2f
1000270f:	fs gs jae 0x10002776
10002713:	jb     0x1000277e
10002715:	jo     0x1000278b
10002717:	imul   ebp,DWORD PTR [edi+0x6e],0x90a0d3e
1000271e:	cmp    al,0x74
10002720:	jb     0x10002797
10002722:	jae    0x10002798
10002724:	dec    ecx
10002725:	outs   dx,BYTE PTR ds:[esi]
10002726:	outs   dx,WORD PTR ds:[esi]
10002728:	and    BYTE PTR [eax+0x6d],bh
1000272b:	ins    BYTE PTR es:[edi],dx
1000272c:	outs   dx,BYTE PTR ds:[esi]
1000272d:	jae    0x1000276c
1000272f:	and    dh,BYTE PTR [ebp+0x72]
10002732:	outs   dx,BYTE PTR ds:[esi]
10002733:	cmp    dh,BYTE PTR [ebx+0x63]
10002736:	push   0x73616d65
1000273b:	sub    eax,0x7263696d
10002740:	outs   dx,DWORD PTR ds:[esi]
10002741:	jae    0x100027b2
10002743:	data16 je 0x10002773
10002746:	arpl   WORD PTR [edi+0x6d],bp
10002749:	cmp    ah,BYTE PTR [ecx+0x73]
1000274c:	ins    DWORD PTR es:[edi],dx
1000274d:	cs jbe 0x10002783
10002750:	and    bh,BYTE PTR [esi]
10002752:	or     eax,0x3c09090a
10002757:	jae    0x100027be
10002759:	arpl   WORD PTR [ebp+0x72],si
1000275c:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x9090a0d
10002764:	or     DWORD PTR [edx+esi*2],edi
10002767:	gs jno 0x100027df
1000276a:	gs jae 0x100027e1
1000276d:	gs fs push eax
10002770:	jb     0x100027db
10002772:	jbe    0x100027dd
10002774:	ins    BYTE PTR es:[edi],dx
10002775:	gs addr16 gs jae 0x100027b8
1000277a:	or     eax,0x909090a
1000277f:	or     DWORD PTR [edx+esi*2],edi
10002782:	gs jno 0x100027fa
10002785:	gs jae 0x100027fc
10002788:	gs fs inc ebp
1000278b:	js     0x100027f2
1000278d:	arpl   WORD PTR [ebp+0x74],si
10002790:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
10002797:	ins    BYTE PTR es:[edi],dx
10002798:	and    BYTE PTR [ebp+eiz*2+0x76],ch
1000279c:	gs ins BYTE PTR es:[edi],dx
1000279e:	cmp    eax,0x49736122
100027a3:	outs   dx,BYTE PTR ds:[esi]
100027a4:	jbe    0x10002815
100027a6:	imul   esp,DWORD PTR [ebp+0x72],0x22
100027aa:	and    BYTE PTR [ebp+0x69],dh
100027ad:	inc    ecx
100027ae:	arpl   WORD PTR [ebx+0x65],sp
100027b1:	jae    0x10002826
100027b3:	cmp    eax,0x6c616622
100027b8:	jae    0x1000281f
100027ba:	and    ch,BYTE PTR [edi]
100027bc:	ds or  eax,0x909090a
100027c2:	cmp    al,0x2f
100027c4:	jb     0x1000282b
100027c6:	jno    0x1000283d
100027c8:	gs jae 0x1000283f
100027cb:	gs fs push eax
100027ce:	jb     0x10002839
100027d0:	jbe    0x1000283b
100027d2:	ins    BYTE PTR es:[edi],dx
100027d3:	gs addr16 gs jae 0x10002816
100027d8:	or     eax,0x3c09090a
100027dd:	das    
100027de:	jae    0x10002845
100027e0:	arpl   WORD PTR [ebp+0x72],si
100027e3:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x3c090a0d
100027eb:	das    
100027ec:	je     0x10002860
100027ee:	jne    0x10002863
100027f0:	je     0x1000283b
100027f2:	outs   dx,BYTE PTR ds:[esi]
100027f3:	outs   dx,WORD PTR ds:[esi]
100027f5:	ds or  eax,0x612f3c0a
100027fb:	jae    0x10002870
100027fd:	gs ins DWORD PTR es:[edi],dx
100027ff:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
10002803:	or     eax,0xa
10002808:	mov    DWORD PTR [eax+0x4e],edx
1000280b:	inc    edi
1000280c:	or     eax,0xa1a0a
10002811:	add    BYTE PTR [eax],al
10002813:	or     eax,0x52444849
10002818:	add    BYTE PTR [eax],al
1000281a:	add    DWORD PTR [eax],eax
1000281c:	add    BYTE PTR [eax],al
1000281e:	add    DWORD PTR [eax],eax
10002820:	or     BYTE PTR [esi],al
10002822:	add    BYTE PTR [eax],al
10002824:	add    BYTE PTR [edx+esi*2-0x58],bl
10002828:	data16 add BYTE PTR [eax],al
1000282b:	and    BYTE PTR [eax],al
1000282d:	dec    ecx
1000282e:	inc    esp
1000282f:	inc    ecx
10002830:	push   esp
10002831:	js     0x100027cf
10002833:	in     eax,dx
10002834:	jge    0x100028ad
10002836:	mov    esp,0xe77d4724
1000283b:	mov    bh,0xaa
1000283d:	jnp    0x10002811
1000283f:	dec    ebx
10002840:	mov    ebx,0x6936b36f
10002845:	mov    ch,0x4a
10002847:	sub    BYTE PTR [edx+0x7324202],al
1000284d:	pushf  
1000284e:	or     DWORD PTR [edx],esp
10002850:	sbb    eax,0x242c2406
10002855:	adc    BYTE PTR [eax],ah
10002857:	mov    WORD PTR [eax+0x1a267103],es
1000285d:	or     ecx,ecx
1000285f:	and    cl,cl
10002861:	push   ss
10002862:	rcl    DWORD PTR [esi],0xe1
10002865:	or     al,0x77
10002867:	pusha  
10002868:	inc    eax
10002869:	xor    BYTE PTR fs:[esi-0x7f24fe50],dl
10002870:	inc    eax
10002871:	add    al,0x9b
10002873:	ins    BYTE PTR es:[edi],dx
10002874:	dec    esp
10002875:	ss inc ecx
10002877:	cmp    cl,BYTE PTR [ecx]
10002879:	jns    0x100028f2
1000287b:	adc    eax,0xf69ef0d8
10002880:	in     eax,dx
10002881:	mov    esi,0xeebba13c
10002886:	(bad)  
10002887:	cdq    
10002888:	sahf   
10002889:	jmp    0xf856273c
1000288e:	sahf   
1000288f:	sahf   
10002890:	lock jbe 0x1000288e
10002893:	mov    ebx,0xaeeed99f
10002898:	(bad)  
1000289a:	cmc    
1000289b:	std    
1000289c:	(bad)  
1000289d:	jle    0x100028f4
1000289f:	aad    0x33
100028a1:	bswap  eax
100028a3:	xchg   ecx,eax
100028a4:	and    eax,DWORD PTR [edi-0x72]
100028a7:	sbb    al,0x39
100028a9:	jb     0x1000288f
100028ab:	enter  0x2391,0x47
100028af:	mov    ds,WORD PTR [ecx+edi*1]
100028b2:	jb     0x10002898
100028b4:	enter  0x2391,0x47
100028b8:	mov    ds,WORD PTR [ecx+edi*1]
100028bb:	jb     0x100028a1
100028bd:	enter  0x2391,0x47
100028c1:	mov    ds,WORD PTR [ecx+edi*1]
100028c4:	jb     0x100028aa
100028c6:	enter  0x2391,0x47
100028ca:	mov    ds,WORD PTR [ecx+edi*1]
100028cd:	jb     0x100028b3
100028cf:	enter  0x2391,0x47
100028d3:	mov    ds,WORD PTR [ecx+edi*1]
100028d6:	jb     0x100028bc
100028d8:	enter  0x2391,0x47
100028dc:	mov    ds,WORD PTR [ecx+edi*1]
100028df:	jb     0x100028c5
100028e1:	enter  0x2391,0x47
100028e5:	mov    ds,WORD PTR [ecx+edi*1]
100028e8:	jb     0x100028ce
100028ea:	enter  0x2391,0x47
100028ee:	mov    ds,WORD PTR [ecx+edi*1]
100028f1:	jb     0x100028d7
100028f3:	enter  0x2391,0x47
100028f7:	mov    ds,WORD PTR [ecx+edi*1]
100028fa:	jb     0x100028e0
100028fc:	enter  0x2391,0x47
10002900:	pop    edi
10002901:	rol    DWORD PTR [esi],0xdd
10002904:	sbb    BYTE PTR [ebx+eax*1],0x85
10002908:	in     eax,dx
10002909:	repz pop ss
1000290b:	cmp    eax,0x818e456d
10002910:	and    DWORD PTR [edi],edx
10002912:	and    BYTE PTR [ebx],0xf
10002915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002916:	addr16 (bad) 
10002919:	xor    edx,edi
1000291b:	mov    DWORD PTR [ecx+0x2e],eax
1000291e:	adc    al,0x2b
10002920:	or     al,0xb9
10002922:	add    BYTE PTR [esp+ebx*2+0xe4ecf50],ch
10002929:	mov    bl,0x49
1000292b:	xchg   ebx,eax
1000292c:	adc    al,0x14
1000292e:	leave  
1000292f:	inc    ebp
10002930:	cmp    al,0x1c
10002933:	inc    ebx
10002934:	test   BYTE PTR [eax+eax*1+0x56],bl
10002938:	push   cs
10002939:	je     0x1000291f
1000293b:	call   0xf9ec:0x7c30
10002941:	sbb    eax,esi
10002943:	push   ds
10002944:	mov    esi,0x5c1134b9
10002949:	outs   dx,DWORD PTR ds:[esi]
1000294a:	sbb    al,0x77
1000294c:	dec    esi
1000294d:	out    0xc,al
1000294f:	arpl   cx,ax
10002951:	jne    0x100028fc
10002953:	ror    BYTE PTR [esi-0xf],0x5
10002957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002958:	jmp    0x5e1d:0x841d310d
1000295f:	div    BYTE PTR [edi+0x1f]
10002962:	pop    edx
10002963:	repnz clts 
10002966:	xlat   BYTE PTR ds:[ebx]
10002967:	out    0xbf,eax
10002969:	sti    
1000296a:	sbb    edi,0xd2126d13
10002970:	shl    esi,1
10002972:	pushf  
10002973:	mov    edx,0xe40031ce
10002978:	add    dh,BYTE PTR [eax]
1000297a:	mov    esp,0x3c9e1150
1000297f:	fidivr WORD PTR [ecx-0x13]
10002982:	mul    bl
10002984:	xlat   BYTE PTR ds:[ebx]
10002985:	mov    edx,?
10002987:	push   ebx
10002988:	or     cl,BYTE PTR [esi]
1000298a:	cmp    esp,DWORD PTR [ebx+0x3933b2e0]
10002990:	(bad)  
10002991:	or     DWORD PTR [eax+eiz*2+0x47],ecx
10002995:	sub    ecx,ebp
10002997:	sub    BYTE PTR [eax],bl
10002999:	push   0xffffffed
1000299b:	xchg   edx,eax
1000299c:	pop    esp
1000299d:	push   esi
1000299e:	addr16 cmp al,0x54
100029a1:	jo     0x1000292c
100029a3:	lea    ecx,[edx+0x44f0aa06]
100029a9:	and    ecx,DWORD PTR [eax]
100029ab:	adc    esi,DWORD PTR [ebp+0x70]
100029ae:	or     cl,ah
100029b0:	mov    ah,0x13
100029b2:	stc    
100029b3:	sub    BYTE PTR [edx+0x75005161],al
100029b9:	add    esp,ebx
100029bb:	push   ebp
100029bc:	outs   dx,DWORD PTR ds:[esi]
100029bd:	mov    BYTE PTR [edi-0x1de42a],bl
100029c3:	sub    eax,0xdfeec5d7
100029c8:	iret   
100029c9:	jp     0x1000298a
100029cb:	cmp    eax,0xec0fddff
100029d0:	or     eax,0x423c26b2
100029d5:	jno    0x10002974
100029d7:	mov    ds:0x6005c80f,eax
100029dc:	mov    eax,0xceab3a0
100029e1:	add    BYTE PTR [esi+0x5f],dh
100029e4:	jg     0x100029d2
100029e6:	sub    DWORD PTR [ebx+0x65],esp
100029e9:	jle    0x1000296c
100029eb:	retf   
100029ec:	jno    0x10002980
100029ee:	jmp    0x100029a2
100029f0:	repz cmp DWORD PTR [eax+0x12],esi
100029f4:	add    al,0xd6
100029f6:	ret    
100029f7:	sar    DWORD PTR [ebx+ebp*1],0x72
100029fb:	(bad)  
100029fc:	xchg   ebp,eax
100029fd:	fcomp  DWORD PTR [eax]
100029ff:	sub    esi,DWORD PTR [edx]
10002a01:	xchg   DWORD PTR [ecx-0x5352f600],edi
10002a07:	dec    esi
10002a08:	test   al,0x58
10002a0a:	and    DWORD PTR [ebp-0x59e79768],ebx
10002a10:	stos   DWORD PTR es:[edi],eax
10002a11:	das    
10002a12:	and    BYTE PTR [eax+eax*1+0x75],bh
10002a16:	add    DWORD PTR [ecx+0x7],edx
10002a19:	inc    esp
10002a1a:	pop    ebp
10002a1b:	sub    al,0x8a
10002a1d:	mov    edx,0x513c3a8
10002a22:	or     BYTE PTR [eax],cl
10002a24:	add    DWORD PTR [eax+ebp*8],edi
10002a27:	stc    
10002a28:	mov    eax,0x5f89e1a7
10002a2d:	sub    al,0xd6
10002a2f:	cld    
10002a30:	lahf   
10002a31:	jl     0x10002a21
10002a33:	out    0xb,eax
10002a35:	fistp  QWORD PTR [ebp-0x13]
10002a38:	pop    ss
10002a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002a3a:	out    0xa5,eax
10002a3c:	push   edx
10002a3d:	ins    BYTE PTR es:[edi],dx
10002a3e:	add    al,0x21
10002a40:	pop    ss
10002a41:	cmp    DWORD PTR [esi],0x21
10002a44:	pop    ss
10002a45:	add    cl,0x82
10002a48:	mov    dl,0xf2
10002a4a:	adc    edx,eax
10002a4c:	fcomip st,st(3)
10002a4e:	out    0xed,al
10002a50:	cmp    esp,DWORD PTR [esi]
10002a52:	inc    edi
10002a53:	pushf  
10002a54:	(bad)  
10002a55:	xchg   edi,eax
10002a56:	mov    ch,ah
10002a58:	inc    edx
10002a59:	pop    es
10002a5a:	clc    
10002a5b:	out    dx,eax
10002a5c:	jo     0x10002ab6
10002a5e:	xchg   ecx,eax
10002a5f:	push   ebp
10002a60:	sbb    bh,ah
10002a62:	inc    ebp
10002a63:	mov    ah,BYTE PTR ss:[edx]
10002a66:	add    ebp,DWORD PTR [ebx]
10002a68:	xor    dh,BYTE PTR [eax+0x44704502]
10002a6e:	ret    0x7484
10002a71:	sbb    eax,0xace248bb
10002a76:	push   ebx
10002a77:	xlat   BYTE PTR ds:[ebx]
10002a78:	and    BYTE PTR ds:[edx],bl
10002a7b:	dec    ebp
10002a7c:	inc    DWORD PTR [eax+0x34]
10002a7f:	add    al,0xfc
10002a81:	stos   BYTE PTR es:[edi],al
10002a82:	cmp    BYTE PTR [edx+ebx*4-0x9e60ae8],cl
10002a89:	aam    0x1b
10002a8b:	loop   0x10002a1b
10002a8d:	cdq    
10002a8e:	add    eax,0xfc6f9fff
10002a93:	jmp    0xe63f:0xe27fefc1
10002a9a:	push   0x50
10002a9c:	or     eax,DWORD PTR [edx+0x2e]
10002a9f:	push   es
10002aa0:	jge    0x10002ae8
10002aa2:	add    BYTE PTR cs:[ebx-0x2416937f],al
10002aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10002aaa:	(bad)  
10002aab:	(bad)  
10002aac:	imul   esi,DWORD PTR [esi+0x43693fac],0xfffffff1
10002ab3:	leave  
10002ab4:	in     eax,0x22
10002ab6:	jnp    0x10002ac2
10002ab8:	out    0x78,eax
10002aba:	or     al,0x63
10002abc:	pop    eax
10002abd:	lds    eax,FWORD PTR [esi+0x38]
10002ac0:	clc    
10002ac1:	or     BYTE PTR [edi],bl
10002ac3:	and    ecx,DWORD PTR gs:[esp+ecx*8]
10002ac7:	push   ebp
10002ac8:	cmp    al,0x32
10002aca:	fwait
10002acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002acc:	aaa    
10002acd:	xchg   ebx,eax
10002ace:	adc    BYTE PTR [ecx+eiz*1],ah
10002ad1:	mov    esi,0xa8809c55
10002ad6:	or     DWORD PTR [eax+0x24bf80aa],ecx
10002adc:	push   cs
10002add:	mov    ds:0x867dc62e,eax
10002ae2:	mov    ebx,0xfb71756b
10002ae7:	int3   
10002ae8:	mov    ds:0x7ff1fb7f,al
10002aed:	mov    cl,0xe7
10002aef:	mov    ebx,0x173f10e8
10002af4:	add    DWORD PTR [ecx],0x20
10002af7:	pop    ss
10002af8:	cmp    dh,0x41
10002afb:	dec    ecx
10002afc:	cli    
10002afd:	fst    st(7)
10002aff:	pop    ds
10002b00:	jnp    0x10002acc
10002b02:	in     al,0x28
10002b04:	jg     0x10002a97
10002b06:	jmp    0x10002aba
10002b08:	mov    ebx,DWORD PTR [eax]
10002b0a:	jo     0x10002b18
10002b0c:	sbb    esp,ecx
10002b0e:	or     eax,0x58c7c63e
10002b13:	inc    ebp
10002b14:	mov    dl,0xee
10002b16:	xor    ch,BYTE PTR [edi+edx*8-0x25]
10002b1a:	lods   eax,DWORD PTR ds:[esi]
10002b1b:	test   DWORD PTR [eax],esp
10002b1d:	mov    eax,ds:0x2296037
10002b22:	xchg   ecx,eax
10002b23:	inc    ebx
10002b24:	dec    ebp
10002b25:	inc    eax
10002b26:	sub    al,0xb
10002b28:	iret   
10002b29:	pop    edi
10002b2a:	push   ss
10002b2b:	repz push 0xf01e5588
10002b31:	(bad)  
10002b33:	and    eax,0xfb4fe3ff
10002b38:	loopne 0x10002b18
10002b3a:	mov    edi,0x5503f9ff
10002b3f:	(bad)  
10002b41:	adc    eax,edx
10002b43:	dec    ebp
10002b44:	sbb    esi,DWORD PTR [edx+0x74]
10002b47:	mov    DWORD PTR [eax+eax*1+0x7a],ebx
10002b4b:	jp     0xfbaf1849
10002b51:	mov    dh,0x6f
10002b53:	cmp    esp,DWORD PTR [esi-0x6b]
10002b56:	jae    0x10002aed
10002b58:	jmp    0x10002b0c
10002b5a:	mov    ebx,DWORD PTR [eax]
10002b5c:	addr16 jmp 0x10002b57
10002b5f:	cmp    BYTE PTR [edi],ch
10002b61:	icebp  
10002b62:	push   ebp
10002b63:	dec    esi
10002b64:	xchg   ecx,eax
10002b65:	xchg   ebp,eax
10002b66:	push   esp
10002b67:	pop    DWORD PTR [ecx+esi*1+0x67]
10002b6b:	out    dx,eax
10002b6c:	es dec esp
10002b6e:	daa    
10002b6f:	add    al,0x5d
10002b71:	adc    ebx,DWORD PTR [edi]
10002b73:	push   esi
10002b74:	ret    0x9622
10002b77:	add    eax,0x5e7f25fc
10002b7c:	sub    al,0x8b
10002b7e:	mov    cl,0x6
10002b80:	lock (bad) 
10002b82:	fld    DWORD PTR [ebp-0x11]
10002b85:	xor    ebx,DWORD PTR [ebx-0x21]
10002b88:	mov    dl,0xe7
10002b8a:	push   esi
10002b8b:	add    BYTE PTR [esi],bh
10002b8d:	int3   
10002b8e:	fiadd  WORD PTR [ecx]
10002b90:	aad    0x9a
10002b92:	sbb    al,0x9
10002b94:	nop
10002b95:	or     eax,DWORD PTR [eax-0x11]
10002b98:	inc    eax
10002b99:	sub    eax,0xde87b1e2
10002b9e:	jle    0x10002b7c
10002ba0:	pop    ds
10002ba1:	xchg   edi,eax
10002ba2:	dec    ebx
10002ba3:	in     al,dx
10002ba4:	mov    ch,0x8c
10002ba6:	loope  0x10002bfc
10002ba8:	ds loope 0x10002bbf
10002bab:	clc    
10002bac:	sub    ah,BYTE PTR [edi-0x52f63538]
10002bb2:	jl     0x10002bc6
10002bb4:	xor    DWORD PTR [eax-0x23304a28],esi
10002bba:	sbb    esp,DWORD PTR [eax]
10002bbc:	rcr    DWORD PTR [ecx+0x24b13cb],cl
10002bc2:	(bad)  
10002bc3:	xchg   edx,eax
10002bc4:	aas    
10002bc5:	daa    
10002bc6:	stos   BYTE PTR es:[edi],al
10002bc7:	mov    ds:0xe7c5f352,al
10002bcc:	out    dx,al
10002bcd:	cmp    ebx,eax
10002bcf:	clc    
10002bd0:	fwait
10002bd1:	xor    ebx,edi
10002bd3:	jno    0x10002bd4
10002bd5:	das    
10002bd6:	adc    DWORD PTR [edi],edx
10002bd8:	add    bl,BYTE PTR [ecx+0x14]
10002bdb:	test   al,0x5a
10002bdd:	jae    0x10002c37
10002bdf:	and    BYTE PTR [edi],dl
10002be1:	sub    ah,0x11
10002be4:	and    DWORD PTR [eax+eax*1],edi
10002be7:	cld    
10002be8:	repnz jmp 0xb85f:0x5b8e9b6d
10002bf0:	shl    DWORD PTR [ebp+0x78],1
10002bf3:	push   ds
10002bf4:	sbb    esp,ebp
10002bf6:	jne    0x10002c5f
10002bf8:	lea    esi,[ebx]
10002bfa:	rol    DWORD PTR [esi-0x47],0xba
10002bfe:	add    al,0xdd
10002c00:	push   eax
10002c01:	mov    es,ebp
10002c03:	adc    esi,edx
10002c05:	call   0xde5:0x6d71674a
10002c0c:	hlt    
10002c0d:	pop    eax
10002c0e:	add    al,0x2
10002c10:	pop    edx
10002c11:	sti    
10002c12:	dec    ebx
10002c13:	ds cld 
10002c15:	add    eax,0xb0f7d67f
10002c1a:	out    dx,eax
10002c1b:	lock mov ds:0xde5bd7ff,al
10002c21:	mov    dl,0xfb
10002c23:	out    dx,eax
10002c24:	pop    edx
10002c25:	mov    cl,0x3a
10002c27:	iret   
10002c28:	sub    BYTE PTR [edx],0x31
10002c2b:	xchg   DWORD PTR [esi],eax
10002c2d:	mov    ecx,0x99076400
10002c32:	clc    
10002c33:	in     al,dx
10002c34:	mov    esi,0x7d3d8e1b
10002c39:	int    0x84
10002c3b:	repz xchg edi,eax
10002c3d:	sbb    al,0x78
10002c3f:	add    bl,BYTE PTR [edi+0x3ace0a74]
10002c45:	xlat   BYTE PTR ds:[ebx]
10002c46:	test   DWORD PTR [ebx],edx
10002c48:	retf   0x3b61
10002c4b:	push   esp
10002c4c:	push   ebp
10002c4d:	jmp    0x30a6f27a
10002c52:	jle    0x10002c38
10002c54:	push   edx
10002c55:	in     eax,0xc2
10002c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10002c58:	and    DWORD PTR [esi+0x37],edi
10002c5b:	and    dl,al
10002c5d:	sbb    BYTE PTR [edi+0x13],0xf0
10002c61:	pop    ss
10002c62:	cld    
10002c63:	jns    0x10002cb6
10002c65:	adc    eax,0xc7c436a8
10002c6a:	cs std 
10002c6c:	clc    
10002c6d:	(bad)  
10002c6e:	aas    
10002c6f:	mov    edi,0x60c5aee3
10002c74:	daa    
10002c75:	inc    ecx
10002c76:	push   ss
10002c77:	add    edx,DWORD PTR [eax]
10002c79:	(bad)  
10002c7a:	sbb    al,0x1a
10002c7c:	in     al,0x2
10002c7e:	sar    BYTE PTR ds:0x77dfc462,1
10002c84:	ror    DWORD PTR [esi-0xf7071d9],cl
10002c8a:	mov    edi,0xd93b0e60
10002c8f:	fchs   
10002c91:	dec    esp
10002c92:	lock push ebp
10002c94:	mov    fs,WORD PTR [esi]
10002c96:	cmp    eax,DWORD PTR [ecx+0x15001e44]
10002c9c:	data16 and BYTE PTR [esp+edi*2+0x6c06f3ad],ch
10002ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10002ca5:	add    al,0x89
10002ca7:	into   
10002ca8:	adc    edx,DWORD PTR [ebp+eax*4-0x7f06d76a]
10002caf:	aas    
10002cb0:	out    dx,eax
10002cb1:	push   edi
10002cb2:	lds    edx,FWORD PTR [edx-0x1d8555a1]
10002cb8:	push   ebx
10002cb9:	pop    edi
10002cba:	mov    edi,0x4bbaf16b
10002cbf:	ds mov dh,0x7f
10002cc2:	or     bl,BYTE PTR ds:0xc587f2
10002cc8:	les    esi,FWORD PTR [ecx]
10002cca:	pop    es
10002ccb:	sbb    DWORD PTR [eax+eax*1-0x2e],0xefeae623
10002cd3:	mov    ebx,0xc6e3c769
10002cd8:	inc    edi
10002cd9:	clc    
10002cda:	int    0xac
10002cdc:	les    ecx,FWORD PTR [edi-0x54c7c889]
10002ce2:	fcomp  DWORD PTR [eax+0x600fcdc6]
10002ce8:	xor    edi,DWORD PTR [ebp*4+0x2c2a003c]
10002cef:	and    ebp,0xee2e226
10002cf5:	(bad)  
10002cf6:	pusha  
10002cf7:	inc    esp
10002cf8:	inc    eax
10002cf9:	dec    eax
10002cfa:	xlat   BYTE PTR ds:[ebx]
10002cfb:	(bad)  
10002cfc:	pushf  
10002cfd:	fist   WORD PTR [eax]
10002cff:	dec    ebx
10002d00:	jle    0x10002ca5
10002d02:	ficom  DWORD PTR [eax]
10002d04:	lahf   
10002d05:	jnp    0x10002cf6
10002d07:	mov    bh,0xf
10002d09:	mov    edi,0x1caffafe
10002d0e:	pushf  
10002d0f:	inc    edi
10002d10:	inc    edi
10002d11:	add    BYTE PTR [eax],ch
10002d13:	scas   eax,DWORD PTR es:[edi]
10002d14:	inc    eax
10002d15:	cs cmp eax,0xb90b47
10002d1b:	and    al,0x47
10002d1d:	ins    BYTE PTR es:[edi],dx
10002d1e:	push   ebp
10002d1f:	jg     0x10002d00
10002d21:	dec    ebp
10002d22:	cmp    ecx,esi
10002d24:	push   ds
10002d25:	pop    ds
10002d26:	loope  0x10002d17
10002d28:	gs inc ebp
10002d2a:	jbe    0x10002cb6
10002d2c:	mov    ebx,0x9da55dc9
10002d31:	(bad)  
10002d33:	and    dh,BYTE PTR ds:0x94b0a9e9
10002d39:	repz js 0x10002d75
10002d3c:	stos   DWORD PTR es:[edi],eax
10002d3d:	int    0xba
10002d3f:	inc    eax
10002d40:	push   edx
10002d41:	adc    DWORD PTR [eax+0x22c8b6c],esi
10002d47:	adc    BYTE PTR [eax-0x3a2818c1],al
10002d4d:	xchg   edx,eax
10002d4e:	iret   
10002d4f:	stos   BYTE PTR es:[edi],al
10002d50:	sahf   
10002d51:	clc    
10002d52:	aam    0x3b
10002d54:	mov    edi,0x6f8de879
10002d59:	mov    ebp,0xeb782663
10002d5e:	shl    BYTE PTR [esi+ecx*2+0x5c85a390],1
10002d65:	add    BYTE PTR [edx-0x400a9ddf],dl
10002d6b:	jno    0x10002d42
10002d6d:	out    0x89,al
10002d6f:	repz (bad) 
10002d71:	das    
10002d72:	jg     0x10002d06
10002d74:	mov    ebx,0x31ee31ec
10002d79:	out    dx,al
10002d7a:	sub    dh,BYTE PTR [esi]
10002d7c:	sahf   
10002d7d:	xchg   edx,eax
10002d7e:	clc    
10002d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002d80:	popa   
10002d81:	(bad)  [ebp-0x38665be8]
10002d87:	adc    esi,DWORD PTR [ecx+0x43]
10002d8a:	and    DWORD PTR [edx],eax
10002d8c:	mov    dh,BYTE PTR [ebp+ebp*1+0x21]
10002d90:	jo     0x10002da8
10002d92:	jmp    0x10002d76
10002d94:	mov    ebp,0xebb4deeb
10002d99:	cmp    dh,BYTE PTR [eax*1+0x5c811280]
10002da0:	or     BYTE PTR [esp+eiz*8],ah
10002da3:	add    ah,BYTE PTR [eax-0x79]
10002da6:	fdivr  DWORD PTR [edi+edi*2]
10002da9:	mul    dh
10002dab:	popf   
10002dac:	aaa    
10002dad:	mov    ebx,0xebe1af0c
10002db2:	pushf  
10002db3:	xchg   BYTE PTR [ebx-0x56dc8a37],dh
10002db9:	sub    BYTE PTR [ebx*1+0x7a5972],ah
10002dc0:	imul   esp,DWORD PTR [edi+0x1117d05],0xba4054c3
10002dca:	push   esi
10002dcb:	mov    DWORD PTR [eax],eax
10002dcd:	add    al,0xe0
10002dcf:	sbb    eax,0x9afde6f6
10002dd4:	js     0x10002db6
10002dd6:	aas    
10002dd7:	pop    ds
10002dd8:	lods   al,BYTE PTR ds:[esi]
10002dd9:	pop    esi
10002dda:	inc    BYTE PTR [edi]
10002ddc:	out    dx,eax
10002ddd:	jns    0x10002dcf
10002ddf:	dec    esi
10002de0:	je     0x10002d66
10002de2:	inc    eax
10002de3:	mov    bh,0x58
10002de5:	js     0x10002e3b
10002de7:	and    edx,DWORD PTR [edi]
10002de9:	add    BYTE PTR [ebx],dh
10002deb:	and    ah,ah
10002ded:	(bad)  
10002def:	xchg   edi,eax
10002df0:	cmp    ecx,DWORD PTR [esi-0x61]
10002df3:	sbb    bl,ah
10002df5:	mov    bh,0x3a
10002df7:	mov    ds:0x5b7716ce,eax
10002dfc:	popa   
10002dfd:	or     al,0x5d
10002dff:	js     0x10002dfc
10002e01:	and    dh,ah
10002e03:	mov    edi,0x8ada3876
10002e08:	inc    ecx
10002e09:	mov    ds:0x1de474eb,al
10002e0e:	mov    BYTE PTR [eax],cl
10002e10:	sbb    BYTE PTR [esi-0x65779efe],ah
10002e16:	cmp    BYTE PTR [edi],0xeb
10002e19:	int    0x55
10002e1b:	jmp    0x10002dff
10002e1d:	imul   ebp,DWORD PTR [edi-0x5],0xffffffda
10002e21:	int3   
10002e22:	sub    ebp,DWORD PTR [edi-0x2]
10002e25:	(bad)  
10002e26:	mov    eax,ds:0x9f207d60
10002e2b:	push   ss
10002e2c:	adc    al,cl
10002e2e:	add    eax,0xf1088d40
10002e33:	mov    edi,0xd1a6e578
10002e38:	daa    
10002e39:	sahf   
10002e3a:	cmp    dh,dl
10002e3c:	adc    esi,ebp
10002e3e:	mov    al,0xb
10002e40:	or     ebx,ebx
10002e42:	or     edx,DWORD PTR [ebx]
10002e44:	ins    BYTE PTR es:[edi],dx
10002e45:	test   bh,al
10002e47:	push   ebx
10002e48:	fcmovb st,st(0)
10002e4a:	xor    ah,bl
10002e4c:	fisub  DWORD PTR [edx+0x6fdb8990]
10002e52:	mov    edx,0x6022a15e
10002e57:	jno    0x10002ed8
10002e59:	(bad)  
10002e5a:	mov    esp,0xbe4b175f
10002e5f:	aas    
10002e60:	pop    edi
10002e61:	repz fbstp TBYTE PTR [edi-0x2822251f]
10002e68:	and    ebp,DWORD PTR [edx]
10002e6a:	add    dh,dl
10002e6c:	mov    es,WORD PTR [ecx]
10002e6e:	push   ebp
10002e6f:	retf   0x8151
10002e72:	pop    esp
10002e73:	add    BYTE PTR [eax+0x44],ch
10002e76:	enter  0x7b3f,0xf3
10002e7a:	into   
10002e7b:	ja     0x10002e35
10002e7d:	sbb    al,0xaf
10002e7f:	jbe    0x10002e57
10002e81:	mov    edx,0x85bb3670
10002e86:	sahf   
10002e87:	aad    0x4a
10002e89:	or     al,0x41
10002e8b:	lods   eax,DWORD PTR ds:[esi]
10002e8c:	and    BYTE PTR [ebx+eiz*8+0x1],dh
10002e90:	inc    esp
10002e91:	into   
10002e92:	xor    ebp,DWORD PTR gs:[edx+0x38]
10002e96:	iret   
10002e97:	pop    edx
10002e98:	add    al,0x54
10002e9a:	gs push 0x88daf2
10002ea0:	jl     0x10002ea3
10002ea2:	outs   dx,DWORD PTR ds:[esi]
10002ea3:	(bad)  
10002ea4:	lahf   
10002ea5:	cmc    
10002ea6:	jmp    0xe2ed:0xf8eebfe2
10002ead:	and    eax,0xdf747f17
10002eb2:	or     eax,0xffffffa7
10002eb5:	add    eax,0x1002e411
10002eba:	inc    ebp
10002ebb:	test   al,bh
10002ebd:	fistp  QWORD PTR [edi-0x33]
10002ec0:	xchg   esi,eax
10002ec1:	leave  
10002ec2:	inc    edi
10002ec3:	sbb    al,0x5b
10002ec5:	cli    
10002ec6:	pop    ss
10002ec7:	ds ret 0x2d4f
10002ecb:	ins    BYTE PTR es:[edi],dx
10002ecc:	das    
10002ecd:	dec    esp
10002ece:	inc    esp
10002ecf:	mov    esi,0x48e72f57
10002ed4:	add    bl,bl
10002ed6:	popa   
10002ed7:	inc    esi
10002ed8:	repnz rol BYTE PTR [eax+0x12],cl
10002edc:	shl    DWORD PTR [ebp+0x56],cl
10002edf:	fiadd  WORD PTR [eax+0x5a]
10002ee2:	adc    DWORD PTR [eax],esi
10002ee4:	(bad)  
10002ee5:	popa   
10002ee6:	xlat   BYTE PTR ds:[ebx]
10002ee7:	push   cs
10002ee8:	rcl    DWORD PTR [eax+eiz*1+0x5c],cl
10002eec:	pop    esi
10002eed:	jae    0x10002f49
10002eef:	loopne 0x10002f20
10002ef1:	sub    eax,0xd627c5d5
10002ef6:	pop    esi
10002ef7:	mov    bl,0xeb
10002ef9:	or     eax,0xea808a88
10002efe:	std    
10002eff:	and    DWORD PTR [ebx+0x7400b902],0xbeff2110
10002f09:	fwait
10002f0a:	jbe    0x10002f48
10002f0c:	jle    0x10002eb0
10002f0e:	int3   
10002f0f:	mov    edi,0x8577acea
10002f14:	jae    0x10002ea2
10002f16:	jmp    0x10002f0c
10002f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10002f1a:	je     0x10002f5f
10002f1c:	das    
10002f1d:	es push es
10002f1f:	sbb    DWORD PTR [edx],ecx
10002f21:	rcl    DWORD PTR [eax-0x77],0x40
10002f25:	mov    dh,0x53
10002f27:	xor    DWORD PTR [eax+0x79],0xd0bfacde
10002f2e:	test   al,0x8a
10002f30:	(bad)  
10002f32:	div    BYTE PTR [ebx-0xd41c007]
10002f38:	mov    bl,0x7
10002f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002f3b:	xchg   ecx,eax
10002f3c:	jnp    0x10002f41
10002f3e:	mov    ecx,0x26d0b400
10002f43:	jmp    FWORD PTR ds:0x5ca86d97
10002f49:	cli    
10002f4a:	enter  0x5bb1,0x9c
10002f4e:	adc    bh,BYTE PTR [edi-0x56]
10002f51:	mov    ebx,0xf94ab0b3
10002f56:	std    
10002f57:	sti    
10002f58:	jo     0x10002f08
10002f5a:	xor    al,0xb0
10002f5c:	sbb    DWORD PTR [esi-0x56],ebx
10002f5f:	xor    al,0x11
10002f61:	dec    ebx
10002f62:	cwde   
10002f63:	push   eax
10002f64:	or     BYTE PTR [esi],al
10002f66:	sub    DWORD PTR [edx],eax
10002f68:	(bad)  
10002f69:	in     eax,0x66
10002f6b:	and    al,0x2
10002f6d:	icebp  
10002f6e:	xchg   cl,al
10002f70:	pop    edi
10002f71:	lock test DWORD PTR [eax+0x14],ebx
10002f75:	bound  edi,QWORD PTR [esi-0x3c84401a]
10002f7b:	mov    ch,0xbb
10002f7d:	outs   dx,DWORD PTR ds:[esi]
10002f7e:	add    al,ah
10002f80:	loope  0x10002faa
10002f82:	push   ss
10002f83:	and    DWORD PTR [ebx+0x5622005d],0x6f5717ff
10002f8d:	fstp   TBYTE PTR [eax-0x1e]
10002f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002f91:	ret    0xddb7
10002f94:	dec    ecx
10002f95:	addr16 fwait
10002f97:	mov    bl,0xa5
10002f99:	push   eax
10002f9a:	mov    ah,BYTE PTR [ebp+0x482c07ea]
10002fa0:	dec    edi
10002fa1:	test   DWORD PTR [ecx],ebx
10002fa3:	test   eax,eax
10002fa5:	retf   0xe5d
10002fa8:	popf   
10002fa9:	or     esp,DWORD PTR [ecx+0x35a48f8f]
10002faf:	mov    BYTE PTR [eax+0x42],al
10002fb2:	inc    ecx
10002fb3:	mov    DWORD PTR [edi],edx
10002fb5:	stos   BYTE PTR es:[edi],al
10002fb6:	into   
10002fb7:	xchg   edi,eax
10002fb8:	fs sub dl,al
10002fbb:	or     BYTE PTR ds:[eax+0x5c3bc871],ah
10002fc2:	lods   eax,DWORD PTR ds:[esi]
10002fc3:	mov    bl,bl
10002fc5:	xlat   BYTE PTR ds:[ebx]
10002fc6:	pop    esp
10002fc7:	mov    bl,0xeb
10002fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10002fca:	mov    BYTE PTR [edx+0x253551c0],cl
10002fd0:	cmp    BYTE PTR [edx-0x1bddffb],bl
10002fd6:	mov    ecx,0xa5fe779b
10002fdb:	ret    
10002fdc:	icebp  
10002fdd:	mov    dl,0x9
10002fe0:	inc    ebp
10002fe1:	xchg   DWORD PTR [ebp-0x45002110],ecx
10002fe7:	ds pusha 
10002fe9:	push   ds
10002fea:	pop    edx
10002feb:	mov    dh,0x62
10002fed:	mov    al,ds:0xbcac8213
10002ff2:	add    esp,0xf1622022
10002ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10002ff9:	cld    
10002ffa:	shl    DWORD PTR [eax-0x3efe8622],1
10003000:	test   eax,0x792fe737
10003005:	retf   
10003006:	loop   0x1000307f
10003008:	pop    ds
10003009:	cli    
1000300a:	(bad)  
1000300b:	loope  0x10002fb4
1000300d:	mov    ebp,0x1d0f8bfe
10003012:	inc    esp
10003013:	pop    esp
10003014:	add    al,0x7c
10003016:	mov    ds:0x470a23c4,al
1000301b:	stos   DWORD PTR es:[edi],eax
1000301c:	add    BYTE PTR [ecx+ecx*8-0x1],al
10003020:	into   
10003021:	popf   
10003022:	pop    ds
10003023:	je     0x1000306f
10003025:	in     al,dx
10003026:	cmp    ebp,eax
10003028:	adc    ecx,DWORD PTR [ebx-0x346bf55]
1000302e:	sub    eax,eax
10003030:	add    edx,DWORD PTR [eax-0x2fbd4a51]
10003036:	dec    edi
10003037:	adc    DWORD PTR [eax+0x4c],ecx
1000303a:	jl     0x10003065
1000303c:	mov    edi,0xbca9bd45
10003041:	adc    BYTE PTR [esi],0xfc
10003044:	add    eax,0x4497f3df
10003049:	cmc    
1000304a:	or     edi,DWORD PTR [edi-0xd04c7a4]
10003050:	dec    edi
10003051:	in     eax,dx
10003052:	jg     0x10003054
10003054:	jmp    0x4702:0x2911c129
1000305b:	mov    ds:0x7fc9b400,eax
10003060:	fld    QWORD PTR [ebp-0x60943a6d]
10003066:	xor    bh,BYTE PTR [ecx-0x65]
10003069:	xor    ebp,esi
1000306b:	cld    
1000306c:	mov    eax,ds:0x4630a3bb
10003071:	jmp    FWORD PTR [edx+0x2c84a6be]
10003077:	mov    al,ds:0x3c29561b
1000307c:	xor    al,0x75
1000307f:	xchg   ebx,eax
10003080:	sbb    BYTE PTR [ecx],cl
10003082:	pop    esp
10003083:	jns    0x1000306a
10003085:	mov    ecx,0x30a40441
1000308a:	sub    edx,DWORD PTR [ecx]
1000308c:	enter  0x2a7a,0x90
10003090:	ror    BYTE PTR [ebx],cl
10003092:	add    BYTE PTR [eax],al
10003094:	clc    
10003095:	inc    eax
10003096:	arpl   si,ax
10003098:	pop    ebx
10003099:	pop    edx
1000309a:	pop    eax
1000309b:	idiv   bh
1000309d:	out    dx,eax
1000309e:	xchg   bl,ch
100030a0:	jbe    0x10003081
100030a2:	ror    BYTE PTR [ecx+ebp*2],1
100030a5:	or     eax,DWORD PTR [ecx-0x6bb8ffd4]
100030ab:	adc    BYTE PTR [ebp*2-0xe01effe],bl
100030b2:	int    0x35
100030b4:	(bad)  
100030b5:	cmp    BYTE PTR [esi-0x4a98f20c],dh
100030bb:	repz xor BYTE PTR [edi+0x5b],dh
100030bf:	imul   edi,DWORD PTR [esi+0x248deaaf],0xffffffbd
100030c6:	(bad)
100030ca:	add    eax,0xf232133
100030cf:	and    BYTE PTR [ecx+0x110bd037],dh
100030d5:	dec    eax
100030d6:	jmp    0x62c37520
100030db:	dec    esi
100030dc:	add    eax,0xc1017812
100030e1:	jne    0x10003146
100030e3:	(bad)  
100030e4:	fwait
100030e5:	pop    ebp
100030e6:	pop    esp
100030e7:	push   ss
100030e8:	lahf   
100030e9:	pop    edx
100030ea:	jg     0x100030d9
100030ec:	scas   al,BYTE PTR es:[edi]
100030ed:	imul   esi,DWORD PTR [eax-0x6c],0xffffffac
100030f1:	or     ebx,DWORD PTR [ecx*2+0x2bdc1002]
100030f8:	inc    ebp
100030fa:	aad    0xdb
100030fc:	ss sahf 
100030fe:	mov    ah,0xa9
10003100:	lock arpl WORD PTR [edi-0x53],sp
10003104:	mov    ebx,0xc6e2d9d1
10003109:	mov    edi,0xfeb46fac
1000310e:	sbb    DWORD PTR [ebx+0xbd4900],edi
10003114:	dec    ebx
10003115:	loop   0x1000309e
10003117:	scas   eax,DWORD PTR es:[edi]
10003118:	adc    ecx,DWORD PTR [edi+0x9]
1000311b:	mov    edx,0xb110114
10003120:	dec    ebx
10003121:	es and cl,dl
10003124:	repz ds js 0x10003129
10003128:	inc    eax
10003129:	rcl    DWORD PTR [ebx],cl
1000312b:	cmp    ah,ch
1000312d:	sbb    eax,0xff165a5e
10003132:	mov    al,0xee
10003134:	dec    ebp
10003135:	mov    ebx,0x8a68b5e
1000313a:	push   eax
1000313b:	push   ebx
1000313c:	add    ch,BYTE PTR [edx]
1000313e:	test   DWORD PTR [edx+0x22d1c4],0xfcf12fed
10003148:	loop   0x10003134
1000314a:	ins    DWORD PTR es:[edi],dx
1000314b:	sbb    ecx,DWORD PTR [edi-0x26]
1000314e:	push   eax
1000314f:	fcomp  DWORD PTR [ebp+0x78]
10003152:	pop    eax
10003153:	test   eax,0x3e2dfb10
10003158:	stos   BYTE PTR es:[edi],al
10003159:	aaa    
1000315a:	cwde   
1000315b:	gs pop ss
1000315d:	fldenv [ebx+esi*4]
10003160:	sbb    eax,0xac91b132
10003165:	enter  0x2b6b,0x4
10003169:	imul   esp,DWORD PTR [edi-0x6ee79bfc],0xbb37915f
10003173:	test   eax,0xbc9f40
10003178:	mov    al,ds:0xfe730229
1000317d:	pop    esp
1000317e:	jne    0x10003149
10003180:	push   edx
10003182:	call   0xb847:0xcbd766b
10003189:	or     BYTE PTR [ecx*1-0xdaeffe],bl
10003190:	cli    
10003191:	ret    0x85fd
10003194:	xor    ecx,DWORD PTR [edx-0x44]
10003197:	mov    ebp,0xf4949fbf
1000319c:	mov    ebp,0x7ad31e8
100031a1:	pusha  
100031a2:	and    DWORD PTR [esi],eax
100031a4:	ss xchg esi,eax
100031a6:	cmp    eax,0x6f11d74
100031ab:	push   es
100031ac:	and    eax,0x54edd02
100031b1:	jp     0x10003198
100031b3:	add    eax,0x39bdaeb4
100031b8:	jg     0x1000315b
100031ba:	mov    edx,0xe7677fe4
100031bf:	lea    edi,[ebx+0x2e]
100031c2:	popf   
100031c3:	pop    ecx
100031c4:	hlt    
100031c5:	sbb    esp,DWORD PTR [eax+0x12a805d7]
100031cb:	push   esi
100031cc:	adc    al,0x12
100031ce:	(bad)  
100031cf:	push   esi
100031d0:	aad    0x8a
100031d2:	inc    ebx
100031d3:	clc    
100031d4:	addr16 mov eax,0x5f5cefb7
100031da:	mov    eax,0xa97a70bb
100031df:	rcr    BYTE PTR [esi+edx*1-0x3],0x65
100031e4:	(bad)  
100031e5:	jbe    0x10003251
100031e7:	push   ss
100031e8:	daa    
100031e9:	aas    
100031ea:	xchg   ebx,eax
100031eb:	ficomp DWORD PTR ds:[edx+0x2c]
100031ef:	ds ss stc 
100031f2:	ins    DWORD PTR es:[edi],dx
100031f3:	fist   DWORD PTR [esi+edi*4]
100031f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100031f7:	loop   0x1000320d
100031f9:	jmp    0x9d348a16
100031fe:	stos   BYTE PTR es:[edi],al
100031ff:	pushf  
10003200:	mov    ah,0x61
10003202:	push   esp
10003203:	jns    0x10003246
10003205:	sub    BYTE PTR [ecx-0x2aa1a2a2],0x65
1000320c:	call   0xe9b11d6d
10003211:	mov    BYTE PTR [edi+0x2b],dh
10003214:	or     eax,0x1722b12f
10003219:	fdiv   st,st(6)
1000321b:	jmp    0xb2ec:0xf27eacc7
10003222:	(bad)  
10003223:	stc    
10003224:	pop    ds
10003225:	fist   WORD PTR [edi-0x53]
10003228:	ret    
10003229:	mov    esi,0x47062bf5
1000322e:	mov    dl,0x0
10003230:	mov    ah,0xe7
10003232:	cld    
10003233:	ja     0x10003292
10003235:	mov    bh,0x7d
10003237:	sti    
10003238:	div    BYTE PTR [ebp-0x7b]
1000323b:	pop    edi
1000323c:	adc    eax,0xb48d2b4e
10003241:	leave  
10003242:	pop    ds
10003243:	dec    ecx
10003244:	sub    DWORD PTR [ecx+0x5b58474c],edx
1000324a:	push   edx
1000324b:	jmp    0x100032a7
1000324d:	gs retf 0xc54f
10003251:	test   eax,0xa3ce4084
10003256:	mov    dl,BYTE PTR [ebx+0x3c1819ce]
1000325c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000325d:	add    ch,0xd1
10003260:	xchg   ebx,eax
10003261:	push   ecx
10003262:	lods   al,BYTE PTR ds:[esi]
10003263:	dec    edi
10003264:	jmp    0x98c2f85c
10003269:	ds push esp
1000326b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000326c:	addr16 push esp
1000326e:	sbb    DWORD PTR [ebp+ebx*2-0x4a],edx
10003272:	popa   
10003273:	imul   edi,edx,0x6302edb
10003279:	pop    esi
1000327a:	fs cs pop ss
1000327d:	fdiv   st,st(0)
1000327f:	clc    
10003280:	jecxz  0x100032ad
10003282:	iret   
10003283:	loopne 0x10003291
10003285:	lahf   
10003286:	sti    
10003287:	out    dx,al
10003288:	mov    ebp,0x581fc1cb
1000328d:	adc    eax,0x686ab65d
10003292:	mov    al,0x62
10003294:	sbb    ebp,DWORD PTR [esi+0x40]
10003297:	fwait
10003298:	cld    
10003299:	mov    edi,0xa6db7abc
1000329e:	adc    esi,DWORD PTR [edi]
100032a0:	push   ss
100032a1:	out    dx,al
100032a2:	sub    DWORD PTR [esi+edx*2-0x35013b56],ebx
100032a9:	mov    cs,WORD PTR [esi+0x34b0ba50]
100032af:	imul   eax,DWORD PTR [edx],0x568c38d8
100032b5:	repz jge 0x10003259
100032b8:	mov    ?,WORD PTR [edi+0x558f738]
100032be:	pop    es
100032bf:	mov    ?,WORD PTR [ecx+0x2e]
100032c2:	cld    
100032c3:	xchg   ecx,eax
100032c4:	dec    ebp
100032c5:	pop    eax
100032c6:	xor    eax,0x3d18affd
100032cb:	clc    
100032cc:	out    dx,eax
100032cd:	or     DWORD PTR [esi+0x3900a100],esp
100032d3:	sub    al,0x8b
100032d5:	test   eax,0xaa9d6d80
100032da:	mov    ah,0xb0
100032dc:	pop    ecx
100032dd:	or     edx,eax
100032df:	dec    esp
100032e0:	add    esp,DWORD PTR [eax+esi*1-0x2b903e81]
100032e7:	xchg   edi,eax
100032e8:	(bad)  
100032e9:	iret   
100032ea:	mov    dh,0xbf
100032ec:	test   DWORD PTR gs:[ebp+0x6fc9687],0x2b02eba2
100032f7:	jp     0x10003333
100032f9:	jo     0x1000331f
100032fb:	or     al,BYTE PTR [eax-0x65]
100032fe:	cld    
100032ff:	lods   eax,DWORD PTR ds:[esi]
10003300:	add    eax,0x33853dbf
10003305:	dec    edx
10003306:	outs   dx,BYTE PTR ds:[esi]
10003307:	in     al,0x9d
10003309:	jle    0x1000331e
1000330b:	icebp  
1000330c:	jne    0x100032bc
1000330e:	jp     0x100032bf
10003310:	mov    al,ds:0x39ba3a1a
10003315:	sub    eax,0x3c084a90
1000331a:	sub    BYTE PTR ss:[ecx-0x73f4619d],0x6d
10003322:	inc    ecx
10003323:	mov    cl,0xe0
10003325:	xor    BYTE PTR [ebx-0x7a],0xd2
10003329:	add    esi,DWORD PTR [edi+0x429d3ca3]
1000332f:	add    al,0x74
10003331:	jmp    0x10003334
10003333:	adc    al,0x21
10003335:	push   ebx
10003336:	mov    BYTE PTR [edi+0x34],al
10003339:	lods   al,BYTE PTR ds:[esi]
1000333a:	pop    es
1000333b:	imul   eax,DWORD PTR [ecx],0x16
1000333e:	sub    bl,0xcd
10003341:	sti    
10003342:	retf   
10003343:	mov    ch,0x25
10003345:	inc    DWORD PTR [edi]
10003347:	stos   DWORD PTR es:[edi],eax
10003348:	fistp  QWORD PTR [eax+0x8e8d9eb]
1000334e:	ror    BYTE PTR [edx+0x7e0c8117],0xbd
10003355:	jb     0x100032ff
10003357:	shl    BYTE PTR [esi+0x38],1
1000335a:	jg     0x1000334e
1000335c:	xchg   BYTE PTR [ebp+0x58da4eeb],ch
10003362:	clc    
10003363:	jne    0x10003346
10003365:	mov    ah,0x10
10003367:	stc    
10003368:	push   ebp
10003369:	scas   al,BYTE PTR es:[edi]
1000336a:	mov    esi,0x961c3aea
1000336f:	(bad)  
10003372:	mov    dh,0x1c
10003374:	sub    bl,BYTE PTR [ecx+edi*2+0x4d]
10003378:	fcom   QWORD PTR [ebx+0x65e7dce6]
1000337e:	dec    esp
1000337f:	ins    DWORD PTR es:[edi],dx
10003380:	mov    esi,0x1b7c6c14
10003385:	sub    ah,ch
10003387:	and    al,BYTE PTR [esi+0x46]
1000338a:	sub    ch,BYTE PTR [eax-0x700fb5ac]
10003390:	jnp    0x10003398
10003392:	xchg   esi,eax
10003393:	xlat   BYTE PTR ds:[ebx]
10003394:	pop    ebp
10003395:	nop
10003396:	jl     0x10003366
10003398:	dec    edi
10003399:	aad    0x4d
1000339b:	dec    ebp
1000339c:	add    eax,0xeae936a8
100033a1:	push   ecx
100033a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100033a3:	out    dx,eax
100033a4:	rcr    DWORD PTR [edx-0x80],0x85
100033a8:	mov    al,0x3b
100033aa:	arpl   WORD PTR [esp+ebx*2+0xff3f0ac],di
100033b1:	mov    esi,0xa08fb8e3
100033b6:	cmp    DWORD PTR [ebp-0x1a],esi
100033b9:	mov    eax,ds:0xe0c99a63
100033be:	push   eax
100033bf:	loopne 0x10003409
100033c1:	adc    al,BYTE PTR [eax-0x3905cf0a]
100033c7:	push   ebp
100033c8:	fwait
100033c9:	push   edi
100033ca:	popf   
100033cb:	mov    edx,0x6743f8a5
100033d0:	cmp    DWORD PTR [ebx-0x1bbcea66],0xf
100033d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100033d8:	xor    al,0xcd
100033da:	lahf   
100033db:	dec    ebp
100033dc:	(bad)  
100033dd:	ror    ch,1
100033df:	and    esi,DWORD PTR [edi]
100033e1:	xchg   ebp,eax
100033e2:	inc    ebx
100033e3:	scas   al,BYTE PTR es:[edi]
100033e4:	add    DWORD PTR [eax-0x1fdd3252],ebx
100033ea:	cmp    esp,DWORD PTR [ebp+0x1c]
100033ed:	cmp    dh,ah
100033ef:	stc    
100033f0:	pusha  
100033f1:	arpl   WORD PTR [ebx+0x51],bx
100033f4:	cs pop ss
100033f6:	push   ecx
100033f7:	cs xchg edi,eax
100033f9:	push   eax
100033fa:	sub    al,0x16
100033fc:	push   eax
100033fd:	sub    al,0x16
100033ff:	push   ecx
10003400:	sub    dl,BYTE PTR ds:0x8a5a7620
10003406:	or     BYTE PTR [ebp+0x1c],0x91
1000340a:	xchg   cl,cl
1000340c:	adc    DWORD PTR [ecx+0x48],ecx
1000340f:	sub    al,BYTE PTR [edi+0x4d374265]
10003415:	and    DWORD PTR [esp+edx*4+0x33],eax
10003419:	mov    BYTE PTR [edi+0x4a],0x15
1000341d:	(bad)  
1000341e:	in     al,0xa9
10003420:	mov    bh,0x1f
10003422:	idiv   DWORD PTR [esi]
10003424:	add    BYTE PTR [esi],ch
10003426:	call   0x8a8e:0xdd3e09fc
1000342d:	and    eax,0xf6801148
10003433:	xor    BYTE PTR [ebx-0x6af24d1b],bh
10003439:	or     ecx,DWORD PTR [esi+0x28]
1000343c:	jg     0x1000340b
1000343e:	pop    ecx
1000343f:	out    0x6e,eax
10003441:	jae    0x10003479
10003443:	mov    ebx,0x532168cc
10003448:	jp     0x1000344a
1000344a:	in     eax,dx
1000344b:	pusha  
1000344c:	xchg   esi,eax
1000344d:	loop   0x10003492
1000344f:	push   esp
10003450:	xchg   ebx,eax
10003451:	fiadd  WORD PTR [ebx]
10003453:	or     BYTE PTR [edi-0x63ca1179],bl
10003459:	mov    ?,WORD PTR ds:0x4d81ff2d
1000345f:	xchg   edi,eax
10003460:	or     DWORD PTR [ebp+0x5cb9436d],0x42
10003467:	mov    ecx,0x58a1445c
1000346c:	add    BYTE PTR [edi+0x18],dh
1000346f:	cmp    bh,ah
10003471:	jo     0x100034d0
10003473:	pop    ss
10003474:	lds    esp,FWORD PTR [edx+0x478112db]
1000347a:	and    eax,0xc78b3c24
1000347f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10003480:	mov    ch,0xf4
10003482:	sbb    DWORD PTR [edx+0x1],edi
10003485:	(bad)  [ebx]
10003487:	push   es
10003488:	loopne 0x100034d8
1000348a:	lock icebp 
1000348c:	ror    DWORD PTR [edx],1
1000348e:	jnp    0x10003466
10003490:	(bad)  
10003491:	mov    bh,0xee
10003493:	js     0x100034d0
10003495:	call   0x48ac:0x5e0401e
1000349c:	adc    DWORD PTR [eax],edi
1000349e:	push   edx
1000349f:	add    al,0x0
100034a1:	push   0xe765fc75
100034a6:	(bad)  
100034a7:	std    
100034a8:	mov    bl,0xbb
100034aa:	(bad)  
100034ab:	cmp    ebx,edx
100034ad:	(bad)  
100034af:	mov    edx,0x8aafab46
100034b4:	and    eax,edx
100034b6:	fs mov dl,0x67
100034b9:	loope  0x100034bc
100034bb:	enter  0x90a2,0xa4
100034bf:	cmp    eax,0x9f01bc49
100034c4:	push   edi
100034c5:	jo     0x10003527
100034c7:	shl    ebx,cl
100034c9:	pop    ebx
100034ca:	in     al,0x6f
100034cc:	pop    edx
100034cd:	inc    BYTE PTR [edx-0x5f]
100034d0:	add    dh,cl
100034d2:	cmp    DWORD PTR [eax],ebx
100034d4:	jecxz  0x10003483
100034d6:	mov    dh,0x4
100034d8:	and    dl,BYTE PTR [eax-0x80]
100034db:	fdivr  st,st(1)
100034dd:	int3   
100034de:	test   al,0x8
100034e0:	pop    eax
100034e1:	adc    DWORD PTR [esi-0x301bbbb8],edx
100034e7:	aam    0xb
100034e9:	xor    BYTE PTR [eax-0x65],al
100034ec:	xchg   esp,eax
100034ed:	jmp    0xc4ce:0x13384b5f
100034f4:	pop    eax
100034f5:	test   DWORD PTR [edi-0x42],ebx
100034f8:	mul    DWORD PTR [esi+0x2a20371d]
100034fe:	add    dl,BYTE PTR [edx-0x71c0f114]
10003504:	test   BYTE PTR [ebp-0x40],ch
10003507:	ss sbb eax,0xf3bddfe7
1000350d:	shr    esi,cl
1000350f:	push   0xffffffe7
10003511:	or     esi,ebp
10003513:	mov    cl,0x85
10003515:	dec    edx
10003516:	and    ch,BYTE PTR [ebx-0x63e96ab1]
1000351c:	xchg   BYTE PTR [ecx],cl
1000351e:	dec    edi
1000351f:	push   ebp
10003520:	popf   
10003521:	mov    BYTE PTR ds:0x26259050,0x6
10003528:	sub    ah,BYTE PTR [ecx]
1000352a:	mov    al,0xb9
1000352c:	xchg   edi,eax
1000352d:	(bad)  
1000352e:	std    
1000352f:	sti    
10003530:	mov    esp,0x978da982
10003535:	or     DWORD PTR [edi-0x1a71093],0x42
1000353c:	add    DWORD PTR [ebx+esi*1+0x185b70b0],ebx
10003543:	add    eax,DWORD PTR [ebx]
10003545:	imul   eax,DWORD PTR [edi-0x3dd8ec85],0xffffffab
1000354c:	into   
1000354d:	ret    
1000354e:	pop    ebp
1000354f:	jp     0x10003581
10003551:	pop    edx
10003552:	mov    dh,0x8d
10003554:	sbb    BYTE PTR [ebp+edx*4-0x7a],ah
10003558:	mov    cl,BYTE PTR [ebx]
1000355a:	pop    es
1000355b:	and    al,0xb5
1000355d:	lock stos BYTE PTR es:[edi],al
1000355f:	addr16 cwde 
10003561:	sub    BYTE PTR [ebp+0x33],bh
10003564:	pushf  
10003565:	xchg   edi,eax
10003566:	js     0x10003511
10003568:	loopne 0x1000354b
1000356a:	int3   
1000356b:	repz mov dh,0x97
1000356e:	(bad)  
1000356f:	jmp    0x8f36b563
10003574:	or     cl,dl
10003576:	lds    edi,FWORD PTR [edi]
10003578:	xchg   al,bh
1000357a:	push   esi
1000357b:	loope  0x100035cd
1000357d:	bound  esp,QWORD PTR [ebp-0x3e2fbff5]
10003583:	jl     0x1000357b
10003585:	out    0x9d,al
10003587:	out    dx,eax
10003588:	jo     0x10003551
1000358a:	stc    
1000358b:	jae    0x10003598
1000358d:	(bad)  
1000358e:	pop    ss
1000358f:	(bad)  
10003590:	lods   eax,DWORD PTR ds:[esi]
10003591:	pop    ss
10003592:	lds    edx,FWORD PTR [edi+edx*8]
10003595:	add    ecx,esi
10003597:	jmp    0xeb32dcdd
1000359c:	or     DWORD PTR [ebx-0x53],ebx
1000359f:	adc    eax,DWORD PTR [ebx+edx*4]
100035a2:	adc    BYTE PTR [eax+0x7c1681bc],bl
100035a8:	addr16 add al,0x53
100035ab:	sbb    ebx,DWORD PTR [esi+0x0]
100035ae:	(bad)  
100035af:	and    bh,BYTE PTR [edi-0x5b]
100035b2:	pop    esp
100035b3:	inc    esp
100035b4:	mov    cl,0x4d
100035b6:	jle    0x100035d6
100035b8:	iret   
100035b9:	inc    eax
100035ba:	mov    eax,eax
100035bc:	repnz sbb al,0xdc
100035bf:	inc    ebp
100035c0:	test   DWORD PTR [eax],ecx
100035c2:	push   eax
100035c3:	std    
100035c4:	and    ebx,DWORD PTR [edi-0x197ce396]
100035ca:	dec    ecx
100035cb:	bsf    eax,DWORD PTR [eax+0x2b252de8]
100035d2:	cmp    eax,DWORD PTR [ecx]
100035d4:	js     0x1000355f
100035d6:	pop    ss
100035d7:	ja     0x10003567
100035d9:	mov    ecx,0x7672e27f
100035de:	retf   
100035df:	mov    bh,0x7f
100035e1:	mov    bh,0xb4
100035e3:	fcomp  QWORD PTR [ebx-0x6a7485a6]
100035e9:	cmp    al,0x5
100035eb:	push   0x5797ff93
100035f0:	outs   dx,DWORD PTR ds:[esi]
100035f1:	fnsetpm(287 only) 
100035f3:	cmp    bh,BYTE PTR [eax-0x4f4c4f56]
100035f9:	dec    edx
100035fa:	xor    eax,0x211b607
100035ff:	call   0x1f14:0xb3c206f8
10003606:	mov    dl,0xc
10003608:	inc    edx
10003609:	or     al,0x6c
1000360b:	test   BYTE PTR [eax-0x307f9c76],al
10003611:	dec    ebx
10003612:	cwde   
10003613:	pop    edx
10003614:	inc    DWORD PTR [edx]
10003616:	mov    al,0xb1
10003618:	arpl   WORD PTR [ebx-0x6a],bx
1000361b:	mov    edi,0x4673f6e3
10003620:	jns    0x100035cd
10003622:	and    DWORD PTR [edi-0x80],ecx
10003625:	jno    0x100035df
10003627:	scas   al,BYTE PTR es:[edi]
10003628:	rcr    DWORD PTR [esi+ecx*1+0x2c2cff1c],cl
1000362f:	scas   eax,DWORD PTR es:[edi]
10003630:	cmp    ecx,DWORD PTR [edi+0x48eeb36e]
10003636:	mov    eax,ds:0xc46934db
1000363b:	and    BYTE PTR [ecx],cl
1000363d:	xchg   edx,eax
1000363e:	xchg   esp,eax
1000363f:	lds    eax,FWORD PTR [eax]
10003641:	jo     0x100035c3
10003643:	xchg   ebp,eax
10003644:	cdq    
10003645:	repz mov edx,0x1cfeafc7
1000364b:	mov    ds:0x662b016b,al
10003650:	addr16 pusha 
10003652:	and    eax,0xb000000b
10003657:	pop    ebx
10003658:	fist   DWORD PTR cs:[eax+0x3e]
1000365c:	jno    0x100036b1
1000365e:	loope  0x1000369f
10003660:	or     cl,BYTE PTR [edi]
10003662:	sub    edx,DWORD PTR [ebp-0x20]
10003665:	mov    dh,0x6e
10003667:	(bad)  
10003668:	xchg   edx,eax
10003669:	and    al,0x5a
1000366b:	loop   0x10003618
1000366d:	dec    eax
1000366e:	outs   dx,DWORD PTR ds:[esi]
1000366f:	and    dh,BYTE PTR [ebx+0x6535ab55]
10003675:	inc    esp
10003676:	les    esp,FWORD PTR [eax+0x214a613]
1000367c:	inc    edx
1000367d:	adc    al,0x7c
1000367f:	push   esi
10003680:	ret    0xfad4
10003683:	pop    ss
10003684:	xchg   ecx,eax
10003685:	in     al,0xf
10003687:	fdivr  QWORD PTR [esi-0x5a]
1000368a:	sub    ecx,DWORD PTR [eax+0x27]
1000368d:	add    al,dh
1000368f:	jnp    0x100036f7
10003691:	shl    DWORD PTR [edx],1
10003693:	adc    eax,0x2f1b279
10003698:	cwde   
10003699:	cmp    bl,BYTE PTR [ebp-0x2fc14633]
1000369f:	sbb    BYTE PTR ds:0xf3847c00,al
100036a5:	inc    edx
100036a6:	cdq    
100036a7:	popf   
100036a8:	ss cmc 
100036aa:	mov    dh,0xe3
100036ac:	fimul  WORD PTR [ebx-0x47d747eb]
100036b2:	push   edx
100036b3:	add    eax,0x97b1dda0
100036b8:	cmp    eax,0xceb3ec72
100036bd:	sbb    ah,BYTE PTR [edi+0x2d]
100036c0:	stos   DWORD PTR es:[edi],eax
100036c1:	pop    eax
100036c2:	nop
100036c3:	lahf   
100036c4:	cmp    BYTE PTR [edi+0x12],dl
100036c7:	lahf   
100036c8:	lods   al,BYTE PTR ds:[esi]
100036c9:	int    0xd4
100036cb:	sbb    cl,BYTE PTR [ebx+0x247f298f]
100036d1:	pushf  
100036d2:	push   ss
100036d3:	add    bl,ch
100036d5:	cmp    eax,0xa984acf9
100036da:	or     eax,0xef8d8057
100036df:	and    dh,ah
100036e1:	cld    
100036e2:	shl    DWORD PTR [ecx],1
100036e4:	cdq    
100036e5:	push   esp
100036e6:	add    al,0xaa
100036e8:	imul   ecx,edi,0xffffff8d
100036eb:	(bad)  
100036ec:	stos   DWORD PTR es:[edi],eax
100036ed:	and    al,0xba
100036ef:	add    eax,0x91286ca1
100036f4:	adc    DWORD PTR [ebp-0x4c],ebp
100036f7:	lds    esp,FWORD PTR [eax+edx*2-0x79]
100036fb:	xor    eax,esi
100036fd:	inc    edi
100036fe:	inc    esi
100036ff:	retf   0x59ec
10003702:	push   esi
10003704:	mov    edi,0x5a0d9cb6
10003709:	add    BYTE PTR [edx],dh
1000370b:	stos   BYTE PTR es:[edi],al
1000370c:	sub    DWORD PTR [ebx-0x54],edi
1000370f:	les    esi,FWORD PTR ds:0x8323a080
10003715:	jns    0x10003716
10003717:	inc    ebp
10003718:	out    dx,al
10003719:	into   
1000371a:	shr    BYTE PTR [eax+0x24],cl
1000371d:	(bad)  
1000371e:	loop   0x100036dc
10003720:	ins    DWORD PTR es:[edi],dx
10003721:	cmc    
10003722:	ret    
10003723:	adc    DWORD PTR [esi-0x3c7b22d1],esp
10003729:	shr    BYTE PTR [edx-0x45],cl
1000372c:	sub    DWORD PTR [edi-0x7ebdf7b6],edi
10003732:	xor    DWORD PTR [edi-0x60],ebp
10003735:	add    eax,0xb530979f
1000373a:	out    dx,al
1000373b:	inc    ebp
1000373c:	pusha  
1000373d:	jecxz  0x10003706
1000373f:	xor    eax,0xa1295fc9
10003744:	push   eax
10003745:	jo     0x1000378a
10003747:	xchg   esi,eax
10003748:	aas    
10003749:	pushf  
1000374a:	and    DWORD PTR [edi+edi*2-0x4b],ecx
1000374e:	cmp    dh,BYTE PTR [esi-0x2a]
10003751:	add    al,0x80
10003753:	(bad)  
10003754:	stos   BYTE PTR es:[edi],al
10003755:	xchg   ebx,eax
10003756:	loope  0x10003787
10003758:	pop    ds
10003759:	xchg   BYTE PTR [ebx-0x202840c],bh
1000375f:	jmp    0x304dabf2
10003764:	cmp    eax,0x54b95d07
10003769:	ds push ebp
1000376b:	fisub  WORD PTR [eax+ecx*2]
1000376e:	xchg   edx,eax
1000376f:	aas    
10003770:	xchg   esp,eax
10003771:	xchg   esi,eax
10003772:	pop    ss
10003773:	jns    0x100037de
10003775:	jae    0x10003710
10003777:	pop    edi
10003778:	push   es
10003779:	loopne 0x1000379e
1000377b:	fistp  QWORD PTR [ebp-0xbe68689]
10003781:	sbb    eax,DWORD PTR [ecx+0x2b022743]
10003787:	int    0x3
10003789:	push   0x5717ff93
1000378e:	outs   dx,DWORD PTR ds:[esi]
1000378f:	fucomi st,st(0)
10003791:	cmp    bh,BYTE PTR [eax+0x55]
10003794:	loope  0x1000378e
10003796:	loop   0x10003742
10003798:	dec    eax
10003799:	mov    ebp,es
1000379b:	jns    0x10003769
1000379d:	jnp    0x10003733
1000379f:	pop    ebp
100037a0:	jge    0x100037fd
100037a2:	(bad)  
100037a3:	retf   0xdd71
100037a6:	jp     0x100037a8
100037a8:	mov    edx,0x24b15930
100037ad:	adc    eax,esi
100037af:	pop    ecx
100037b0:	sbb    DWORD PTR [ebx+0x6b],edx
100037b3:	scas   eax,DWORD PTR es:[edi]
100037b4:	add    BYTE PTR [ebx],bl
100037b6:	fistp  WORD PTR [ecx]
100037b8:	jb     0x100037b5
100037ba:	pop    ebp
100037bb:	jo     0x10003744
100037bd:	xor    DWORD PTR [ecx+0x55],0x43
100037c1:	cmp    ah,bh
100037c3:	int3   
100037c4:	call   0x23df6bd2
100037c9:	lock dec edi
100037cb:	mov    eax,0x1809e9a8
100037d0:	or     DWORD PTR [esi-0x2e2ff440],ebx
100037d6:	and    ch,BYTE PTR [ebp-0x64]
100037d9:	sbb    al,0x6f
100037db:	adc    al,0x9
100037dd:	mov    esi,esi
100037df:	jmp    0xf1bc:0x280f5cd0
100037e6:	mov    DWORD PTR [ebx+0x153d41b7],edx
100037ec:	sbb    BYTE PTR [edx],bh
100037ee:	lods   al,BYTE PTR ds:[esi]
100037ef:	xor    al,0x1
100037f1:	add    al,dl
100037f3:	pushf  
100037f4:	neg    DWORD PTR [edi-0x1c0f564c]
100037fa:	ret    0xe529
100037fd:	jb     0x100037eb
100037ff:	scas   eax,DWORD PTR es:[edi]
10003800:	cmc    
10003801:	push   eax
10003802:	(bad)  
10003805:	sahf   
10003806:	mov    ds:0x4379b1cc,eax
1000380b:	shl    ah,1
1000380d:	add    eax,0x65bd6a24
10003812:	mov    ecx,0x6f8536ca
10003817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10003818:	jns    0x10003803
1000381a:	mov    bl,0x32
1000381c:	push   cs
1000381d:	lods   al,BYTE PTR ds:[esi]
1000381e:	mov    ebx,0xe3b1802
10003823:	in     eax,0x72
10003825:	cmp    DWORD PTR [esi+0x4fbedfcf],edi
1000382b:	mov    ds:0x44ac43,al
10003830:	pusha  
10003831:	mov    ebx,es
10003833:	jno    0x10003837
10003835:	adc    DWORD PTR [eax+0x36],edi
10003838:	stos   BYTE PTR es:[edi],al
10003839:	imul   ecx,esi,0xffffffa1
1000383c:	out    dx,eax
1000383d:	int    0xe6
1000383f:	dec    eax
10003840:	mov    DWORD PTR fs:[ebp+0x25],ebx
10003844:	and    eax,0xf439e1be
10003849:	cmp    DWORD PTR [ebp+0x7c],0xffffff84
1000384d:	repz inc edx
1000384f:	mov    DWORD PTR [ebp-0x1c490ac6],ebx
10003855:	inc    BYTE PTR [esi]
10003857:	sub    esp,DWORD PTR [ebp+edi*1+0x60]
1000385b:	and    eax,0x3bb4009
10003860:	das    
10003861:	jge    0x10003847
10003863:	fsub   DWORD PTR [edi-0x25114a63]
10003869:	imul   BYTE PTR [edi]
1000386b:	cli    
1000386c:	push   eax
1000386d:	add    ecx,DWORD PTR [eax+ecx*1+0x99fce8b]
10003874:	stos   DWORD PTR es:[edi],eax
10003875:	das    
10003876:	xlat   BYTE PTR ds:[ebx]
10003877:	inc    esp
10003878:	(bad)  
10003879:	outs   dx,BYTE PTR ds:[esi]
1000387a:	push   0xffffff9d
1000387c:	out    0x63,al
1000387e:	retf   0x8547
10003881:	sub    ebx,ebx
10003883:	xlat   BYTE PTR ds:[ebx]
10003884:	or     al,0x68
10003886:	pop    edx
10003887:	(bad)  
10003888:	pop    ss
10003889:	or     DWORD PTR [ebp-0x5ab578e2],0x43f9cc4c
10003893:	cdq    
10003894:	sub    eax,0x6f3e8044
10003899:	not    BYTE PTR ds:0x140881e7
1000389f:	loopne 0x10003840
100038a1:	js     0x100038b4
100038a3:	stos   BYTE PTR es:[edi],al
100038a4:	imul   ecx,edi,0xffffff8e
100038a7:	mov    bh,0x2d
100038a9:	jbe    0x100038be
100038ab:	push   es
100038ac:	fs loop 0x100038bc
100038af:	push   0xa80d808c
100038b4:	mov    esi,0x9c67094f
100038b9:	(bad)  
100038ba:	mov    dh,0xd6
100038bc:	add    ecx,esi
100038be:	ret    0x580a
100038c1:	addps  xmm5,XMMWORD PTR [ecx]
100038c4:	add    dl,al
100038c6:	out    dx,al
100038c7:	mov    eax,0x71dd6ffd
100038cc:	ds das 
100038ce:	mov    dl,0x3f
100038d0:	je     0x100038b6
100038d2:	pop    ds
100038d3:	repnz dec esp
100038d5:	dec    edx
100038d6:	(bad)  
100038d7:	jo     0x10003933
100038d9:	adc    eax,0x3978a8d1
100038de:	cmp    al,0x89
100038e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100038e1:	fwait
100038e2:	repnz test al,0x84
100038e5:	inc    eax
100038e6:	adc    edi,ebp
100038e8:	repz or cl,BYTE PTR [esi]
100038eb:	lods   al,BYTE PTR ds:[esi]
100038ec:	mov    ecx,0xbe3d1802
100038f1:	inc    ebp
100038f2:	(bad)  
100038f3:	jb     0x100038d1
100038f5:	repnz retf 
100038f7:	adc    eax,0xc580441a
100038fc:	ret    0xd7a3
100038ff:	pushf  
10003900:	mov    bl,0x90
10003902:	or     BYTE PTR [esp+ecx*4-0x16],bl
10003906:	call   0x6f0:0x26f6e8b3
1000390d:	mov    ebp,ds
1000390f:	xchg   edi,eax
10003910:	dec    edx
10003911:	adc    al,0xc
10003913:	icebp  
10003914:	fs js  0x10003921
10003917:	pop    esi
10003918:	adc    bl,BYTE PTR [ecx-0x24]
1000391b:	jno    0x10003984
1000391d:	loop   0x100038fb
1000391f:	arpl   WORD PTR [ebx-0x49],cx
10003922:	ds jl  0x10003970
10003925:	test   eax,0xa9f2184
1000392a:	lods   al,BYTE PTR ds:[esi]
1000392b:	adc    al,0x1
1000392d:	add    BYTE PTR [edx-0x63],bl
10003930:	aaa    
10003931:	pop    esi
10003932:	loope  0x10003933
10003934:	pop    eax
10003935:	cmp    BYTE PTR [esi-0x780860ec],bh
1000393b:	push   ebx
1000393c:	leave  
1000393d:	inc    ecx
1000393e:	cmp    dh,dl
10003940:	inc    edi
10003941:	dec    edx
10003942:	xlat   BYTE PTR ds:[ebx]
10003943:	pop    esp
10003944:	xchg   ebx,eax
10003946:	dec    esp
10003947:	add    edx,edx
10003949:	push   esi
1000394a:	sbb    al,0x92
1000394c:	pop    eax
1000394d:	jg     0x10003938
1000394f:	fisub  DWORD PTR [edi+0x45]
10003952:	sbb    al,0x98
10003954:	mov    esp,0x213d1802
10003959:	inc    esp
1000395a:	jle    0x10003993
1000395c:	mov    dl,0xd5
1000395e:	xlat   BYTE PTR ds:[ebx]
1000395f:	leave  
10003960:	sub    al,0x15
10003962:	adc    bl,cl
10003964:	pop    ebp
10003965:	xor    BYTE PTR [ecx-0x535d5380],cl
1000396b:	and    eax,0x458a0e02
10003970:	pop    ss
10003971:	pop    esi
10003972:	and    BYTE PTR [edx],al
10003974:	cdq    
10003975:	or     eax,0x1bde966b
1000397a:	dec    eax
1000397b:	sub    eax,DWORD PTR [esi]
1000397d:	ss dec eax
1000397f:	xchg   edx,eax
10003980:	xlat   BYTE PTR ds:[ebx]
10003981:	add    DWORD PTR [eax-0x77],edi
10003984:	lods   eax,DWORD PTR ds:[esi]
10003985:	cli    
10003986:	(bad)  
10003987:	push   ebp
10003988:	fisttp WORD PTR [ecx]
1000398b:	cmc    
1000398c:	pop    ss
1000398d:	xchg   BYTE PTR [esi-0x3da9f7be],al
10003993:	cs inc eax
10003995:	mov    ebx,0xb9df66c3
1000399a:	rep outs dx,DWORD PTR ds:[esi]
1000399c:	fmul   QWORD PTR [ecx-0x19]
1000399f:	push   ecx
100039a0:	into   
100039a1:	cli    
100039a2:	(bad)  
100039a3:	lahf   
100039a4:	call   0x718ff37f
100039a9:	adc    edi,0xe
100039ac:	rcl    DWORD PTR [eax+0x6a91ae5f],cl
100039b2:	xor    DWORD PTR [edx-0x49cb659b],0x3fd64ce9
100039bc:	je     0x1000399b
100039be:	and    al,0xff
100039c0:	lahf   
100039c1:	mov    ah,0xc8
100039c3:	pop    edi
100039c4:	or     bl,BYTE PTR [ecx+0x7e]
100039c7:	lds    ebx,FWORD PTR [ebx]
100039c9:	jle    0x10003a25
100039cb:	aaa    
100039cc:	mov    DWORD PTR [esi],edi
100039ce:	addr16 fs pop esp
100039d1:	jo     0x100039ac
100039d3:	jl     0x10003a28
100039d5:	nop
100039d6:	mov    cl,0xa6
100039d8:	sbb    ah,dl
100039da:	push   edi
100039db:	popf   
100039dc:	add    al,0x7f
100039de:	jmp    0x8da615f3
100039e3:	mov    bl,BYTE PTR [ebx]
100039e5:	push   ebx
100039e6:	add    al,0xe9
100039e8:	sahf   
100039e9:	lahf   
100039ea:	or     bl,BYTE PTR [ebp-0x30]
100039ed:	inc    esi
100039ee:	fwait
100039ef:	xor    eax,0x22f23a63
100039f4:	jae    0x10003993
100039f6:	mov    edx,0xdb51fe38
100039fb:	dec    ebx
100039fc:	pop    edi
100039fd:	cli    
100039fe:	sti    
100039ff:	lahf   
10003a00:	int    0x1f
10003a02:	add    al,0xfd
10003a04:	jmp    0x10003a0d
10003a06:	add    edx,DWORD PTR [edi]
10003a08:	adc    DWORD PTR ds:0xe4fc01e3,0xb9d75b0d
10003a12:	or     al,0x2f
10003a14:	ja     0x100039a5
10003a16:	sub    eax,0xfd0008e
10003a1b:	call   0xa00b:0xcaefe4b4
10003a22:	pop    eax
10003a23:	scas   al,BYTE PTR es:[edi]
10003a24:	popa   
10003a25:	jge    0x10003a71
10003a27:	jmp    0x10003a18
10003a29:	repz and cl,BYTE PTR [esi]
10003a2c:	lods   al,BYTE PTR ds:[esi]
10003a2d:	jle    0x10003a38
10003a2f:	xor    BYTE PTR [edx-0x5e],bh
10003a32:	in     al,0xf6
10003a34:	push   ebx
10003a35:	in     al,0xa7
10003a37:	jmp    0x75bc:0x2a013c97
10003a3e:	sbb    eax,0xa68c1edf
10003a43:	or     DWORD PTR [esi+0x1152a503],esp
10003a49:	fimul  WORD PTR [ecx-0x9455ee9]
10003a4f:	loope  0x10003a42
10003a51:	jmp    0x8c13:0x230123a9
10003a58:	fiadd  WORD PTR [eax]
10003a5a:	and    eax,0x3205d54
10003a5f:	push   0x3a
10003a61:	jecxz  0x10003adf
10003a63:	in     al,dx
10003a64:	icebp  
10003a65:	daa    
10003a66:	(bad)  
10003a67:	cld    
10003a68:	sbb    eax,0x60577886
10003a6d:	fadd   DWORD PTR ds:0x4eea3da0
10003a73:	fst    DWORD PTR [edx-0x44]
10003a76:	aad    0xd9
10003a78:	in     al,0x3a
10003a7a:	in     eax,dx
10003a7b:	out    dx,al
10003a7c:	mov    ds:0x918e8652,eax
10003a81:	and    al,0x9
10003a83:	jle    0x10003ab5
10003a85:	and    edx,DWORD PTR [edx+0x2b]
10003a88:	aad    0x12
10003a8a:	cmp    DWORD PTR [eax-0x2],eax
10003a8d:	mov    gs,WORD PTR [edi-0x5bbd3c0a]
10003a93:	arpl   WORD PTR [edx-0x29cf764e],bx
10003a99:	mov    dl,0xfc
10003a9b:	stos   DWORD PTR es:[edi],eax
10003a9c:	scas   al,BYTE PTR es:[edi]
10003a9d:	add    al,0xc6
10003a9f:	dec    esi
10003aa0:	inc    esp
10003aa1:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
10003aa3:	(bad)  
10003aa5:	out    0xa7,eax
10003aa7:	pop    esi
10003aa8:	repnz and edx,0x45011268
10003aaf:	lds    esi,FWORD PTR [ecx]
10003ab1:	jb     0x10003b28
10003ab3:	out    dx,al
10003ab4:	and    DWORD PTR [eax+0x54a940e],ebx
10003aba:	js     0x10003ae3
10003abc:	ds pop es
10003abe:	aad    0x35
10003ac0:	cmova  ebx,DWORD PTR [ecx+ecx*2]
10003ac4:	(bad)  
10003ac5:	cmp    dh,BYTE PTR [ebx-0x7493f50d]
10003acb:	mov    ch,0x79
10003acd:	out    0x3d,al
10003acf:	add    BYTE PTR [ebx+0x19],dh
10003ad2:	pushf  
10003ad3:	and    bl,bl
10003ad5:	mov    ah,0xf7
10003ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10003ad8:	sbb    eax,0x9afd4237
10003add:	lock inc eax
10003adf:	test   DWORD PTR [eax-0x68],esp
10003ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10003ae3:	add    BYTE PTR [ecx-0x39],al
10003ae6:	lock jge 0x10003b20
10003ae9:	in     eax,dx
10003aea:	js     0x10003b3e
10003aec:	fdivr  QWORD PTR gs:[ecx-0x6b]
10003af0:	mov    ebx,0xc48e58b3
10003af5:	sub    BYTE PTR [esi-0x796f7cef],cl
10003afb:	cld    
10003afc:	jb     0x10003b29
10003afe:	cwde   
10003aff:	je     0x10003aa2
10003b01:	cld    
10003b02:	push   edx
10003b03:	mov    edi,0x1082c225
10003b08:	and    DWORD PTR [ebx-0x1bfb815e],esp
10003b0e:	jg     0x10003b19
10003b10:	xor    BYTE PTR [esi+0x52],dh
10003b13:	retf   
10003b14:	repnz mov bh,0xc8
10003b17:	pop    ds
10003b18:	(bad)  
10003b1a:	pop    es
10003b1b:	jno    0x10003b51
10003b1d:	test   DWORD PTR [ecx],esp
10003b1f:	fiadd  DWORD PTR [edi+0x52]
10003b22:	sbb    al,0x75
10003b24:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
10003b26:	lea    ecx,[edi+eax*1+0x56]
10003b2a:	aas    
10003b2b:	or     al,0xfe
10003b2d:	loop   0x10003b70
10003b2f:	mov    eax,0xaae9fbcb
10003b34:	ins    DWORD PTR es:[edi],dx
10003b35:	(bad)  
10003b36:	cmp    dh,BYTE PTR [ecx+eiz*1+0xa]
10003b3a:	out    0xe2,al
10003b3c:	push   ebx
10003b3d:	mov    eax,0xbc2c9a29
10003b42:	enter  0xc58a,0x6
10003b46:	into   
10003b47:	fnstsw WORD PTR [ebp-0x50]
10003b4a:	icebp  
10003b4b:	(bad)  
10003b4c:	pop    edi
10003b4d:	std    
10003b4e:	mov    esi,0xfd90c756
10003b53:	je     0x10003b2d
10003b55:	sar    BYTE PTR [ebx+0x0],1
10003b58:	xlat   BYTE PTR ds:[ebx]
10003b59:	pop    ebp
10003b5a:	cmp    BYTE PTR [ecx-0x68],bl
10003b5d:	sbb    cl,ah
10003b5f:	lahf   
10003b60:	jbe    0x10003b47
10003b62:	pop    ss
10003b63:	jle    0x10003b11
10003b65:	push   es
10003b66:	inc    ecx
10003b67:	pop    ss
10003b68:	in     al,0x27
10003b6a:	mov    DWORD PTR [edi+0x3c6d7a9],ebp
10003b70:	shl    ch,1
10003b72:	ror    DWORD PTR [eax],cl
10003b74:	or     edi,0x7130388b
10003b7a:	and    eax,0x94727630
10003b7f:	cld    
10003b80:	loope  0x10003b87
10003b82:	mov    edi,0x3711eaa8
10003b87:	popa   
10003b88:	repnz add al,0x88
10003b8b:	mov    bl,BYTE PTR [ebx+0x11]
10003b8e:	mov    WORD PTR [eax],cs
10003b90:	xchg   ebx,eax
10003b91:	cmp    eax,0x70278887
10003b96:	xchg   edx,eax
10003b97:	retf   0xd013
10003b9a:	ret    
10003b9b:	dec    eax
10003b9c:	into   
10003b9d:	out    dx,al
10003b9e:	adc    esi,esp
10003ba0:	pop    ds
10003ba1:	or     al,0x60
10003ba3:	and    eax,0x8befffe6
10003ba8:	xlat   BYTE PTR ds:[ebx]
10003ba9:	mov    ebp,0xc0c5ea1b
10003bae:	xor    DWORD PTR ds:0x803d587c,0xcafff5b6
10003bb8:	sub    esi,DWORD PTR [edi]
10003bba:	jg     0x10003b7c
10003bbc:	pop    ebp
10003bbd:	jmp    0x10003b5b
10003bbf:	jmp    0x10003b6d
10003bc1:	jne    0x10003ba0
10003bc3:	dec    eax
10003bc4:	mov    edx,cs
10003bc6:	cli    
10003bc7:	inc    edi
10003bc8:	dec    eax
10003bc9:	int3   
10003bca:	mov    ds:0xab9cd269,al
10003bcf:	mov    BYTE PTR [edi-0xd160e1a],bl
10003bd5:	inc    esp
10003bd6:	test   BYTE PTR [eax+0x1582613],ah
10003bdc:	pop    es
10003bdd:	es pop esi
10003bdf:	(bad)  
10003be0:	es jg  0x10003b8c
10003be3:	aam    0xfc
10003be5:	sbb    DWORD PTR [edi-0x17809518],ebp
10003beb:	out    0x63,al
10003bed:	loop   0x10003b86
10003bef:	clc    
10003bf0:	xchg   BYTE PTR ds:0x49844437,dl
10003bf6:	jne    0x10003c6d
10003bf8:	cmp    al,0x1
10003bfa:	mov    al,ds:0xa6c4eabe
10003bff:	daa    
10003c00:	mov    al,0xb4
10003c02:	pop    edi
10003c03:	push   ebx
10003c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10003c05:	push   cs
10003c06:	or     dh,cl
10003c08:	mov    dh,0x48
10003c0a:	sahf   
10003c0b:	sub    BYTE PTR [edi+0x37],bl
10003c0e:	jmp    0x422dc780
10003c13:	(bad)  
10003c14:	test   eax,0x8dd7e389
10003c19:	cmp    bl,BYTE PTR [edi-0x74a22507]
10003c1f:	xrelease mov BYTE PTR [edx+0x1],bh
10003c23:	add    esi,ebp
10003c25:	add    al,0x86
10003c27:	fld    DWORD PTR [ebx]
10003c29:	pusha  
10003c2a:	aas    
10003c2b:	jl     0x10003c1a
10003c2d:	xchg   esi,eax
10003c2e:	xor    eax,0xeee5c30e
10003c33:	mul    BYTE PTR [edx]
10003c35:	mov    ebp,0xb03d2fe7
10003c3a:	sub    BYTE PTR [edi+0x75],ch
10003c3d:	add    edx,esi
10003c3f:	out    0x9c,al
10003c41:	dec    ecx
10003c42:	test   BYTE PTR [edx],cl
10003c44:	lds    ebx,FWORD PTR [ebx+0x30ad8a06]
10003c4a:	sub    BYTE PTR [ebp+0x502119a0],al
10003c50:	sar    dh,0x89
10003c53:	xchg   edi,eax
10003c54:	add    esp,DWORD PTR [ebx-0x281beed9]
10003c5a:	int3   
10003c5b:	stc    
10003c5c:	arpl   bx,bp
10003c5e:	or     al,0x36
10003c60:	out    0x40,eax
10003c62:	jl     0x10003ca1
10003c64:	mov    al,ds:0x2b7e2693
10003c69:	hlt    
10003c6a:	dec    ebp
10003c6b:	mov    dh,0x3d
10003c6d:	xor    DWORD PTR [edx+0x9],0xa11749de
10003c74:	mov    edx,0x68a34ce6
10003c79:	sbb    ecx,DWORD PTR [edi-0x20eedbc6]
10003c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10003c80:	enter  0x1050,0x78
10003c84:	test   DWORD PTR [ebp-0x380c752],edx
10003c8a:	std    
10003c8b:	sbb    BYTE PTR [edx+0x51870437],dh
10003c91:	add    dl,bl
10003c93:	sbb    eax,0xd2b6fa72
10003c98:	sti    
10003c99:	pushf  
10003c9a:	cmc    
10003c9b:	scas   al,BYTE PTR es:[edi]
10003c9c:	arpl   WORD PTR [ebp-0x5c],ax
10003c9f:	lock xchg ecx,eax
10003ca1:	mov    dl,0x1e
10003ca3:	mov    ecx,ecx
10003ca5:	scas   eax,DWORD PTR es:[edi]
10003ca6:	push   0x8ab5b295
10003cab:	xor    al,0x36
10003cad:	into   
10003cae:	push   ds
10003caf:	adc    DWORD PTR [esi],ebp
10003cb1:	pop    eax
10003cb2:	cwde   
10003cb3:	cld    
10003cb4:	adc    eax,0xcdd4fc82
10003cb9:	test   DWORD PTR [ebp+0x40],eax
10003cbc:	cs pop eax
10003cbe:	inc    ebx
10003cbf:	cld    
10003cc0:	mov    BYTE PTR [edi],dl
10003cc2:	and    DWORD PTR [edi],esi
10003cc4:	pop    edx
10003cc5:	jne    0x10003cfa
10003cc7:	push   edx
10003cc8:	xchg   ebp,eax
10003cc9:	mov    eax,ds:0x831be6b8
10003cce:	push   cs
10003ccf:	dec    edx
10003cd0:	in     eax,0x22
10003cd2:	mov    esp,0xea8d9e93
10003cd7:	call   0xba12:0xee9b89d3
10003cde:	xor    DWORD PTR [ecx+0x3b],esp
10003ce1:	pop    esi
10003ce2:	xchg   esp,eax
10003ce3:	imul   esi,DWORD PTR [ebx+0x70af22e7],0xb9d97256
10003ced:	pop    edi
10003cee:	jp     0x10003ce9
10003cf0:	xor    DWORD PTR [edi+0xfc84861],esp
10003cf6:	or     al,0xa7
10003cf8:	add    BYTE PTR [eax],al
10003cfa:	add    BYTE PTR [esi-0x6],bh
10003cfd:	addr16 pop ebx
10003cff:	xlat   BYTE PTR ds:[ebx]
10003d00:	cmp    eax,eax
10003d02:	xor    ebx,DWORD PTR [ebp-0x1442fa53]
10003d08:	dec    edi
10003d09:	pop    ebp
10003d0a:	jmp    0xd7cb:0xf25a482c
10003d11:	fnstsw WORD PTR [esi+esi*1]
10003d14:	sbb    eax,0x140800bf
10003d19:	jo     0x10003d7b
10003d1b:	cld    
10003d1c:	dec    edx
10003d1d:	pusha  
10003d1e:	hlt    
10003d1f:	in     al,0x74
10003d21:	in     al,0x8f
10003d23:	fld    QWORD PTR [edi-0x288a5912]
10003d29:	rol    esi,1
10003d2b:	fidivr DWORD PTR [edx+0x1]
10003d2e:	add    ch,ah
10003d30:	or     DWORD PTR [esi+ecx*2-0x13b55c5a],ebx
10003d37:	sbb    DWORD PTR cs:[ecx],0x459b613d
10003d3e:	mov    eax,ds:0x7f1f28ce
10003d43:	hlt    
10003d44:	into   
10003d45:	repnz cmp edx,DWORD PTR [eax]
10003d48:	fst    QWORD PTR [ecx]
10003d4a:	or     BYTE PTR [edi],bh
10003d4c:	sar    BYTE PTR [esi+0x9b0c10b],1
10003d52:	inc    eax
10003d53:	jnp    0x10003d99
10003d55:	popf   
10003d56:	jl     0x10003da4
10003d58:	icebp  
10003d59:	jge    0x10003d48
10003d5b:	pop    ss
10003d5c:	jle    0x10003daa
10003d5e:	cmp    DWORD PTR [edx],esp
10003d60:	inc    edi
10003d61:	mov    ds:0x8085ad0f,al
10003d66:	fyl2x  
10003d68:	inc    ecx
10003d69:	aad    0xe
10003d6b:	rol    DWORD PTR [edi-0x6b],cl
10003d6e:	das    
10003d6f:	add    al,0xc1
10003d71:	or     bh,BYTE PTR [eax]
10003d73:	xor    dh,bh
10003d75:	push   edx
10003d76:	mov    cl,dl
10003d78:	push   ebx
10003d79:	pop    ebx
10003d7a:	in     al,0x2f
10003d7c:	sbb    cl,al
10003d7e:	dec    edi
10003d7f:	push   ebp
10003d80:	adc    dl,BYTE PTR [esi]
10003d82:	add    DWORD PTR [esi+ebx*1-0x7244c4c0],0xec82a3cb
10003d8d:	or     DWORD PTR [ecx+eiz*8+0xa517c9d],edx
10003d94:	dec    edi
10003d95:	xor    dl,0x34
10003d98:	dec    esp
10003d99:	leave  
10003d9a:	jne    0x10003d32
10003d9c:	and    DWORD PTR [ebx],eax
10003d9e:	je     0x10003df1
10003da0:	push   ds
10003da1:	sub    esi,DWORD PTR [edx]
10003da3:	adc    al,0xb
10003da5:	in     al,dx
10003da6:	mov    WORD PTR [ebx],?
10003da8:	pop    esi
10003da9:	mov    ecx,0xbd442cf9
10003dae:	add    ch,dl
10003db0:	out    0x76,al
10003db2:	iret   
10003db3:	xor    DWORD PTR [edx+eax*1+0x0],ebp
10003db7:	add    al,bh
10003db9:	int    0x9b
10003dbb:	mov    dh,0x6d
10003dbd:	loope  0x10003dcb
10003dbf:	dec    edi
10003dc0:	jae    0x10003d78
10003dc2:	push   ss
10003dc3:	call   0x1cbf:0xac49948b
10003dca:	dec    eax
10003dcb:	adc    ebp,ebx
10003dcd:	xchg   esi,eax
10003dce:	cld    
10003dcf:	jb     0x10003e4a
10003dd1:	mov    dh,BYTE PTR [eax-0x17fe50dc]
10003dd7:	retf   0x2811
10003dda:	loopne 0x10003d9c
10003ddc:	fmul   st,st(3)
10003dde:	adc    cl,0x53
10003de1:	push   ecx
10003de2:	sub    DWORD PTR [edi+0x51152e51],edx
10003de8:	and    cl,cl
10003dea:	scas   eax,DWORD PTR es:[edi]
10003deb:	and    DWORD PTR [ecx+esi*1+0x4803c6cc],edi
10003df2:	loop   0x10003df9
10003df4:	enter  0x1637,0x4d
10003df8:	shl    esp,1
10003dfa:	add    al,0x78
10003dfc:	rcl    DWORD PTR [ebx],cl
10003dfe:	cmp    cl,bh
10003e00:	and    dl,ah
10003e02:	(bad)  
10003e03:	sahf   
10003e04:	push   ss
10003e05:	outs   dx,DWORD PTR ds:[esi]
10003e06:	sahf   
10003e07:	int    0xb1
10003e09:	pop    edi
10003e0a:	call   0x38cebb80
10003e0f:	lahf   
10003e10:	cmp    BYTE PTR [edi+0x47],ch
10003e13:	dec    ecx
10003e14:	test   BYTE PTR [edx],0x54
10003e17:	push   gs
10003e19:	out    0x18,eax
10003e1b:	add    DWORD PTR es:[eax-0x71],ebp
10003e1f:	mov    al,ds:0x6f0aebed
10003e24:	jae    0x10003dfc
10003e26:	mov    ecx,0x911cab45
10003e2b:	mov    ds:0x5eb4efa6,eax
10003e30:	add    BYTE PTR ds:0xa69689f9,0x79
10003e37:	pop    edx
10003e38:	in     eax,dx
10003e39:	cmp    al,0x52
10003e3b:	add    WORD PTR [edx],0xc6a6
10003e40:	pop    edi
10003e41:	or     cl,BYTE PTR [esi+ebx*4+0x6f4afada]
10003e48:	pusha  
10003e49:	stc    
10003e4a:	sbb    eax,0x495bc670
10003e4f:	push   ebp
10003e50:	add    al,0x97
10003e52:	(bad)  
10003e53:	push   edx
10003e54:	pop    eax
10003e55:	int3   
10003e56:	xor    bl,BYTE PTR [edx+0x48d14084]
10003e5c:	repnz dec esi
10003e5e:	int3   
10003e5f:	cmp    eax,0x3804f4d0
10003e64:	dec    edx
10003e65:	in     eax,0x22
10003e67:	sbb    ah,BYTE PTR [edi]
10003e69:	pop    ebp
10003e6a:	mov    edx,ds
10003e6c:	call   0xf6c1:0x12798d53
10003e73:	and    DWORD PTR [esp+eax*8],ecx
10003e76:	(bad)  
10003e77:	dec    edx
10003e78:	dec    ebp
10003e79:	sub    BYTE PTR [edx],dh
10003e7b:	adc    al,0x1c
10003e7d:	jbe    0x10003e49
10003e7f:	out    0x5f,eax
10003e81:	mov    dl,0xe9
10003e83:	adc    al,0xc
10003e85:	adc    DWORD PTR [edi],0x24c30
10003e8b:	add    al,bh
10003e8d:	stos   DWORD PTR es:[edi],eax
10003e8e:	aas    
10003e8f:	pop    edx
10003e90:	pop    ebx
10003e91:	je     0x10003e97
10003e93:	cs jae 0x10003e4c
10003e96:	mov    ah,0xb6
10003e98:	std    
10003e99:	or     al,0xb0
10003e9b:	mov    dh,0xfe
10003e9d:	mov    edx,0x4fc9090c
10003ea2:	push   cs
10003ea3:	jnp    0x10003ec0
10003ea5:	pop    ss
10003ea6:	or     BYTE PTR [eax+0x1e],0x58
10003eaa:	(bad)  
10003eab:	test   eax,0x8c4197b1
10003eb0:	sahf   
10003eb1:	mov    ?,WORD PTR [edx-0x5b]
10003eb4:	mov    WORD PTR [edx-0x5b],?
10003eb7:	mov    BYTE PTR [edx-0x57],ah
10003eba:	or     dh,ch
10003ebc:	cmp    BYTE PTR [ecx],dl
10003ebe:	retf   
10003ebf:	iret   
10003ec0:	bound  esi,QWORD PTR [edi]
10003ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10003ec3:	xor    edx,DWORD PTR [edi+0x39302092]
10003ec9:	pop    esp
10003eca:	ja     0x10003e79
10003ecc:	and    dh,BYTE PTR [esi-0x20]
10003ecf:	add    eax,0x9e2c7110
10003ed4:	cs pop esp
10003ed6:	dec    esi
10003ed7:	xor    BYTE PTR ds:0x680a9628,bl
10003edd:	pushf  
10003ede:	jl     0x10003f11
10003ee0:	push   0xffffff93
10003ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10003ee3:	adc    ch,ah
10003ee5:	shr    DWORD PTR ds:0x17613eea,cl
10003eeb:	in     eax,0x64
10003eed:	dec    ebp
10003eee:	dec    ecx
10003eef:	add    eax,esi
10003ef1:	xor    bl,BYTE PTR [ebx]
10003ef3:	jge    0x10003ee1
10003ef5:	mov    DWORD PTR [ebp+0x5e0431ab],edx
10003efb:	shl    BYTE PTR [eax-0x23eff844],0x30
10003f02:	(bad)  
10003f03:	cld    
10003f04:	xchg   ebp,eax
10003f05:	(bad)  
10003f06:	cld    
10003f07:	xchg   ebp,eax
10003f08:	mov    ebx,0x4f8b39ce
10003f0d:	es (bad) 
10003f10:	addr16 (bad) 
10003f12:	mov    ah,0x74
10003f14:	cwde   
10003f15:	(bad)  
10003f16:	cli    
10003f17:	adc    eax,DWORD PTR [esi+0x52]
10003f1a:	cmp    esi,ecx
10003f1c:	ins    DWORD PTR es:[edi],dx
10003f1d:	inc    eax
10003f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10003f1f:	bswap  eax
10003f21:	jg     0x10003f7d
10003f23:	sti    
10003f24:	aaa    
10003f25:	cld    
10003f26:	mov    al,ch
10003f28:	and    bh,BYTE PTR [eax]
10003f2a:	outs   dx,DWORD PTR ds:[esi]
10003f2b:	xchg   ecx,eax
10003f2c:	lahf   
10003f2d:	add    ecx,esp
10003f2f:	in     eax,dx
10003f30:	mov    ecx,0xdc92fd0e
10003f35:	lods   al,BYTE PTR ds:[esi]
10003f36:	jl     0x10003fa6
10003f38:	jae    0x10003f57
10003f3a:	add    al,0xd9
10003f3c:	fcomp  QWORD PTR [ebp+ebx*2-0x4ff9cff9]
10003f43:	(bad)  
10003f44:	iret   
10003f45:	mov    edx,ebp
10003f47:	daa    
10003f48:	dec    edi
10003f49:	xchg   BYTE PTR [eax-0x68],bl
10003f4c:	xor    BYTE PTR [ebx+0x37956d34],0x31
10003f53:	dec    esp
10003f54:	dec    ebp
10003f55:	sbb    ah,BYTE PTR [eax-0x73753fc9]
10003f5b:	cmp    DWORD PTR [ebp-0x4f],edx
10003f5e:	mov    ds:0xfe4fb2e4,eax
10003f63:	fstp   TBYTE PTR ds:0xbce88b4b
10003f69:	(bad)  
10003f6b:	div    edi
10003f6d:	add    al,BYTE PTR [esi+0x6003c9]
10003f73:	cwde   
10003f74:	retf   
10003f75:	icebp  
10003f76:	push   edx
10003f77:	ja     0x10003f04
10003f79:	pop    ebx
10003f7a:	dec    esi
10003f7b:	xchg   ebp,eax
10003f7c:	cmp    edi,DWORD PTR [esp+edx*8-0x5b]
10003f80:	or     DWORD PTR [edi],eax
10003f82:	pop    eax
10003f83:	xchg   edx,eax
10003f84:	aas    
10003f85:	(bad)  
10003f86:	fld    TBYTE PTR [esi+0x7]
10003f89:	push   eax
10003f8a:	retf   
10003f8b:	repnz pop ds
10003f8d:	sbb    BYTE PTR [ebp+0x69],bh
10003f90:	shl    edx,cl
10003f92:	mov    bh,0x7e
10003f94:	leave  
10003f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10003f96:	inc    ebx
10003f97:	jle    0x10003f63
10003f99:	xor    BYTE PTR [edi-0x3e],0xf4
10003f9d:	and    ah,BYTE PTR [eax+0x41976f38]
10003fa3:	sub    BYTE PTR [ebx],bl
10003fa5:	aad    0x40
10003fa7:	arpl   WORD PTR [edi+0x26],sp
10003faa:	aaa    
10003fab:	push   esi
10003fac:	pushf  
10003fad:	mov    bl,0xe6
10003faf:	iret   
10003fb0:	mov    edx,DWORD PTR [ebp-0x13c397f6]
10003fb6:	and    dl,ah
10003fb8:	es pop ds
10003fba:	enterw 0xf261,0x36
10003fbf:	jp     0x10003f46
10003fc1:	ficom  WORD PTR [esi-0x3e]
10003fc4:	retf   
10003fc5:	mov    WORD PTR [edi+0x6f13d1fc],?
10003fcb:	inc    edx
10003fcc:	jl     0x10004015
10003fce:	shl    BYTE PTR [esi+0x24],0x67
10003fd2:	xlat   BYTE PTR ds:[ebx]
10003fd3:	mov    ?,WORD PTR [esi+0x54]
10003fd6:	bound  ecx,QWORD PTR [ecx]
10003fd8:	jbe    0x10003fca
10003fda:	sbb    eax,0x27ca5dc7
10003fdf:	mov    eax,0xdeeed70f
10003fe4:	mov    ch,0xa9
10003fe6:	je     0x10003fc5
10003fe8:	push   0x1fc8230a
10003fed:	mov    ebx,edx
10003fef:	icebp  
10003ff0:	inc    ebp
10003ff1:	test   DWORD PTR [ecx],0x33fe43a1
10003ff7:	inc    ebx
10003ff8:	mov    edi,0xdfa457e1
10003ffd:	lock mov esi,DWORD PTR [esp+eax*8]
10004001:	and    al,0x2
10004003:	jb     0x1000405d
10004005:	adc    ch,BYTE PTR [edi]
10004007:	or     al,0xa3
1000400a:	jo     0x10004085
1000400c:	in     al,dx
1000400d:	inc    edi
1000400e:	addr16 mov esp,0x70222213
10004014:	retf   0xa845
10004017:	lods   eax,DWORD PTR ds:[esi]
10004018:	xor    DWORD PTR [eax+0x584a1240],ecx
1000401e:	jp     0x1000404d
10004020:	add    esi,DWORD PTR [eax+eax*1+0x0]
10004024:	add    BYTE PTR [esp+eax*4+0x17],bh
10004028:	(bad)  
10004029:	dec    ebx
1000402a:	cld    
1000402b:	push   edx
1000402c:	or     al,0xf8
1000402e:	mov    bh,0x2
10004030:	xchg   BYTE PTR [ecx+0x0],al
10004033:	fidiv  DWORD PTR [edi]
10004035:	pop    ebp
10004036:	sub    dh,BYTE PTR [ecx-0x11f20d29]
1000403c:	mov    eax,0xb4752536
10004041:	jmp    0xc7f5d375
10004046:	xor    DWORD PTR [ebp-0x38c3ab5f],0x1409056
10004050:	pop    es
10004051:	inc    esi
10004052:	add    dh,dl
10004054:	ja     0x10004054
10004056:	push   esi
10004057:	lahf   
10004058:	jecxz  0x10004002
1000405a:	fdivrp st(0),st
1000405c:	or     ebx,DWORD PTR [ebp-0x4a43dfcd]
10004062:	pop    ss
10004063:	pop    ss
10004064:	add    DWORD PTR [ebp+0xbce820],edx
1000406a:	in     eax,0x8d
1000406c:	pop    eax
1000406d:	les    ecx,FWORD PTR [ecx-0x37]
10004070:	mov    ebx,fs
10004072:	cwde   
10004073:	adc    al,BYTE PTR [ecx+0x7936a367]
10004079:	xchg   edx,eax
1000407a:	fisub  WORD PTR [ecx-0x5d02f917]
10004080:	push   ebx
10004081:	xchg   edx,eax
10004082:	jp     0x1000409c
10004084:	add    BYTE PTR [edx],0x6b
10004087:	cld    
10004088:	cli    
10004089:	dec    ebp
1000408a:	fistp  DWORD PTR [esi+0x18be0183]
10004090:	xor    al,0xc
10004092:	add    al,BYTE PTR [eax]
10004094:	add    ah,ch
10004096:	sahf   
10004097:	aaa    
10004098:	outs   dx,DWORD PTR ds:[esi]
10004099:	ffreep st(1)
1000409b:	sbb    BYTE PTR [ebx],bh
1000409d:	cdq    
1000409e:	(bad)  
1000409f:	repz in al,0x3
100040a2:	and    DWORD PTR [ecx-0x6],ecx
100040a5:	mov    ah,0xd6
100040a7:	(bad)  
100040a9:	pop    ss
100040aa:	aad    0xb3
100040ac:	mov    eax,DWORD PTR [esi+0x3530140b]
100040b2:	jb     0x100040d9
100040b4:	(bad)  
100040b5:	call   0xcf969c7d
100040ba:	mov    WORD PTR [edx-0x5f],es
100040bd:	or     BYTE PTR [edi+0x20a7e0bd],ah
100040c3:	scas   al,BYTE PTR es:[edi]
100040c4:	cmc    
100040c5:	push   ecx
100040c6:	ja     0x10004136
100040c8:	jne    0x100040ed
100040ca:	xchg   esi,eax
100040cb:	jno    0x1000413f
100040cd:	call   0x7022:0x1196e304
100040d4:	jmp    0xc809:0x58114d45
100040db:	mov    BYTE PTR [esi-0x24e4f732],bl
100040e1:	ss pop ecx
100040e3:	js     0x1000412a
100040e5:	stos   DWORD PTR es:[edi],eax
100040e6:	les    eax,FWORD PTR [ecx+0x16830278]
100040ec:	xor    dh,0x4d
100040ef:	outs   dx,BYTE PTR ds:[esi]
100040f0:	pop    esp
100040f1:	in     eax,0xbe
100040f3:	rcr    DWORD PTR [ecx-0x15],0x94
100040f7:	cmp    al,cl
100040f9:	sbb    DWORD PTR [ebp+0x454e249e],edx
100040ff:	jle    0x1000416e
10004101:	pop    esi
10004102:	leave  
10004103:	mov    edx,0x4003eaa
10004108:	mov    bl,BYTE PTR [eax-0x1eb4356]
1000410e:	call   0x37e45536
10004113:	retf   0x548c
10004116:	sub    BYTE PTR [ecx+0x2],bh
10004119:	ins    DWORD PTR es:[edi],dx
1000411a:	sti    
1000411b:	lahf   
1000411c:	nop
1000411d:	cld    
1000411e:	inc    esi
1000411f:	iret   
10004120:	sub    DWORD PTR [ecx],ecx
10004122:	icebp  
10004123:	mov    ebx,0x9e045443
10004128:	(bad)  
10004129:	(bad)  
1000412b:	mov    ecx,ebp
1000412d:	or     ch,dl
1000412f:	fwait
10004130:	int    0xcc
10004132:	push   cs
10004133:	lods   al,BYTE PTR ds:[esi]
10004134:	shl    al,0x3a
10004137:	cmp    cl,ah
10004139:	adc    edx,DWORD PTR [edi-0xee9c791]
1000413f:	in     eax,dx
10004140:	sar    BYTE PTR [esi+0x5a0d1dc],0x20
10004147:	add    BYTE PTR [ebx+0x19],dh
1000414a:	sahf   
1000414b:	(bad)  
1000414c:	aaa    
1000414d:	cmp    BYTE PTR [esi+0x5b],dl
10004150:	jg     0x10004192
10004152:	ret    0x21de
10004155:	pop    ebp
10004156:	hlt    
10004157:	add    al,0x5
10004159:	sub    DWORD PTR [ecx],edi
1000415b:	and    eax,0xc1035f11
10004160:	sbb    al,0x4c
10004162:	lea    ebx,[ecx+ecx*1-0x41]
10004166:	ins    DWORD PTR es:[edi],dx
10004167:	stc    
10004168:	ret    
10004169:	outs   dx,BYTE PTR ds:[esi]
1000416a:	mov    edi,0x5cebc2ec
1000416f:	jp     0x10004106
10004171:	or     al,ch
10004173:	sbb    ch,BYTE PTR [edx+0x28644cf2]
10004179:	outs   dx,BYTE PTR ds:[esi]
1000417a:	test   cl,cl
1000417c:	icebp  
1000417d:	icebp  
1000417e:	ficom  DWORD PTR [edx+0x29bb93a3]
10004184:	add    ch,BYTE PTR [ebp-0x612c3dd3]
1000418a:	mov    edx,ebp
1000418c:	in     al,0x89
1000418e:	and    ebp,0x73
10004191:	pop    ds
10004192:	sub    esp,edi
10004194:	gs pop esi
10004196:	jp     0x1000418a
10004198:	sub    DWORD PTR [ebx],esp
1000419a:	jg     0x100041a6
1000419c:	cmc    
1000419d:	scas   eax,DWORD PTR es:[edi]
1000419e:	add    eax,0xc335b4f5
100041a3:	and    BYTE PTR [eax],al
100041a5:	ins    BYTE PTR es:[edi],dx
100041a6:	fisttp WORD PTR [ebp+0x3b]
100041a9:	sahf   
100041aa:	enter  0xdc2a,0x67
100041ae:	test   DWORD PTR [edi+esi*8],esi
100041b1:	call   0xeb9d:0x526d8f20
100041b8:	das    
100041b9:	pop    ss
100041ba:	push   cx
100041bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100041bd:	add    BYTE PTR [ebx-0x1f343557],0x8f
100041c4:	cmp    al,0x3c
100041c6:	mov    dl,0xe0
100041c8:	pop    ss
100041c9:	jne    0x100041c6
100041cb:	jne    0x100041d1
100041cd:	xor    eax,0x3d2a8089
100041d2:	aad    0x40
100041d4:	xchg   ebp,eax
100041d5:	pop    edx
100041d6:	cdq    
100041d7:	fsub   QWORD PTR ds:0x955ef75b
100041dd:	xchg   edi,eax
100041de:	repnz push 0xffffffc3
100041e1:	and    dl,al
100041e3:	cli    
100041e4:	xor    esp,DWORD PTR [ebp+eiz*4+0x12]
100041e8:	sbb    ah,BYTE PTR [edi-0x6c55ee03]
100041ee:	daa    
100041ef:	fcom   st(5)
100041f1:	xchg   edi,eax
100041f2:	adc    al,0x43
100041f4:	out    0x29,al
100041f6:	lock or dh,BYTE PTR [ebx-0x39]
100041fa:	dec    edx
100041fb:	cld    
100041fc:	imul   ecx,DWORD PTR [eax+0x7e23ff5b],0xc9bed00a
10004206:	mov    cl,0x11
10004208:	(bad)  
10004209:	adc    bh,BYTE PTR [esi]
1000420b:	shl    DWORD PTR [edi],0xac
1000420e:	jae    0x100041f9
10004210:	mov    cs,WORD PTR [ecx-0x36]
10004213:	xor    BYTE PTR [ebp-0x37972cd7],al
10004219:	das    
1000421a:	cmp    eax,0xe4c2c13e
1000421f:	das    
10004220:	xchg   esp,ebx
10004222:	(bad)  
10004223:	mov    al,0xe5
10004225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10004226:	xor    cl,bl
10004228:	adc    eax,0xc6d46ee8
1000422d:	or     edx,DWORD PTR [eax-0x62a99c52]
10004233:	inc    edx
10004234:	fidiv  DWORD PTR [ecx]
10004236:	cwde   
10004237:	outs   dx,BYTE PTR ds:[esi]
10004238:	cld    
10004239:	jbe    0x10004277
1000423b:	and    DWORD PTR [esi-0x70d92bf8],0x256aabb7
10004245:	ret    
10004246:	popa   
10004247:	pusha  
10004248:	sbb    al,0xe5
1000424a:	cmp    ebx,DWORD PTR [esi-0x47]
1000424d:	stc    
1000424e:	sbb    al,0xd0
10004250:	and    dl,al
10004252:	push   ebx
10004253:	or     al,0x83
10004255:	pop    es
10004256:	add    BYTE PTR [esi],ch
10004258:	lock or al,0x67
1000425b:	and    DWORD PTR [edx-0x11],0x2f
1000425f:	sub    ecx,eax
10004261:	ror    DWORD PTR [eax],cl
10004263:	and    BYTE PTR [edx-0x5b763b78],0x30
1000426a:	add    DWORD PTR [edi],eax
1000426c:	push   ebx
1000426d:	in     eax,0x2b
1000426f:	inc    ebx
10004270:	in     al,0xf
10004272:	fdivr  QWORD PTR [esi-0x27]
10004275:	bnd jmp 0x10004224
10004278:	mov    ds:0xa3ad9c8e,eax
1000427d:	ror    DWORD PTR [ebx],1
1000427f:	mov    al,0x6c
10004281:	mov    al,0x75
10004283:	pushf  
10004284:	sub    bh,BYTE PTR [ebp+0x7b5598ed]
1000428a:	sub    edx,DWORD PTR [ecx+0x11]
1000428d:	js     0x10004215
1000428f:	popf   
10004290:	or     al,bl
10004292:	push   esp
10004293:	xor    eax,esp
10004295:	loopne 0x100042fc
10004297:	ds jbe 0x10004280
1000429a:	xchg   esi,eax
1000429b:	loop   0x100042a8
1000429d:	inc    eax
1000429e:	xchg   ebx,eax
1000429f:	mov    edi,0x683042a7
100042a4:	add    DWORD PTR [eax-0x5],esp
100042a7:	outs   dx,BYTE PTR ds:[esi]
100042a8:	(bad)  
100042aa:	fs ss ret 0x6397
100042af:	out    dx,eax
100042b0:	and    al,0x66
100042b2:	jne    0x1000427f
100042b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100042b5:	dec    ebx
100042b6:	stos   BYTE PTR es:[edi],al
100042b7:	test   eax,0x2b49e8c3
100042bc:	sbb    ah,BYTE PTR [esi+0x459ff24]
100042c2:	stc    
100042c3:	ins    DWORD PTR es:[edi],dx
100042c4:	mov    DWORD PTR [edi+0x5363bb85],edx
100042ca:	pop    DWORD PTR [ebp-0x64]
100042cd:	jbe    0x100042f9
100042cf:	xchg   esp,eax
100042d0:	in     eax,dx
100042d1:	clc    
100042d2:	mov    WORD PTR [eax-0x7c001640],cs
100042d8:	push   ss
100042d9:	adc    DWORD PTR ds:0xf01b6e42,0x69ade30a
100042e3:	sub    dl,0x87
100042e6:	inc    ebx
100042e7:	jnp    0x10004340
100042e9:	ja     0x1000429a
100042eb:	sub    edx,DWORD PTR [eax+0x20]
100042ee:	in     al,dx
100042ef:	(bad)  
100042f0:	pop    edi
100042f1:	loope  0x1000429f
100042f3:	jne    0x1000434b
100042f5:	or     eax,0x60e91da8
100042fa:	xor    BYTE PTR [esi-0x64481b8a],ch
10004300:	sbb    ebx,ebx
10004302:	mov    eax,0xf8f3e1fe
10004307:	xor    al,0xc0
10004309:	out    0xda,al
1000430b:	ss dec esi
1000430d:	dec    esi
1000430e:	xlat   BYTE PTR ds:[ebx]
1000430f:	lea    ebx,[ebx+0x3a6cf7a5]
10004315:	mov    ebx,0xec088103
1000431a:	dec    esp
1000431b:	pop    edi
1000431c:	xchg   edi,eax
1000431d:	mov    dl,0xd
1000431f:	mov    dh,BYTE PTR [ebx+0x5d]
10004322:	mov    edx,0x6061c05e
10004327:	push   cs
10004328:	fdivr  QWORD PTR [ebx]
1000432a:	pop    esi
1000432b:	mov    ecx,0x79f46cf9
10004330:	sbb    eax,0x1ed060
10004335:	mov    eax,0xaad993c0
1000433a:	push   eax
1000433b:	xor    edi,DWORD PTR [edx+0x75]
1000433e:	mov    ebx,0x4a372a7d
10004343:	(bad)  
10004344:	xchg   edx,eax
10004345:	xchg   ah,bh
10004347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10004348:	ret    0xd26c
1000434b:	cwde   
1000434c:	rcr    BYTE PTR [edx-0x32592d1e],cl
10004352:	mov    edx,0x15791933
10004357:	icebp  
10004358:	add    al,0xce
1000435a:	clc    
1000435b:	pop    ds
1000435c:	test   al,0x4d
1000435e:	push   ds
1000435f:	xchg   edi,eax
10004360:	jno    0x1000431f
10004362:	ret    
10004363:	add    ebx,DWORD PTR [esi-0x1e]
10004366:	and    esp,DWORD PTR [edi+0x367c531f]
1000436c:	push   0x84cf7f2
10004371:	push   es
10004372:	mov    edx,0xddf7808
10004377:	(bad)  
10004378:	sahf   
10004379:	push   cs
1000437a:	xchg   edi,eax
1000437b:	or     DWORD PTR [esi-0x7],esp
1000437e:	jmp    0xc24d:0x925aef6f
10004385:	es stc 
10004387:	jmp    DWORD PTR [ecx+eax*1]
1000438a:	stc    
1000438b:	ins    DWORD PTR es:[edi],dx
1000438c:	lods   eax,DWORD PTR ds:[esi]
1000438d:	mov    edi,0x534c5b45
10004392:	adc    al,0x2a
10004394:	pop    ds
10004395:	push   ebx
10004396:	test   BYTE PTR [ebx-0xd],ch
10004399:	shl    BYTE PTR [ebp+ebp*8+0x15],cl
1000439d:	mov    ds:0xd40cf022,al
100043a2:	es ja  0x10004399
100043a5:	mov    eax,0x9780c1c6
100043aa:	cdq    
100043ab:	cmp    edx,DWORD PTR [esi-0x1a]
100043ae:	dec    edi
100043af:	inc    esi
100043b0:	lahf   
100043b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100043b2:	add    DWORD PTR [ebx-0x2a9ffd64],eax
100043b8:	or     BYTE PTR [edi+0x2e],bh
100043bb:	lahf   
100043bc:	loopne 0x100043e3
100043be:	and    ch,BYTE PTR [edx-0x3b]
100043c1:	mov    eax,ds:0xa473fe43
100043c6:	lods   eax,DWORD PTR ds:[esi]
100043c7:	ds jns 0x10004369
100043ca:	pop    ds
100043cb:	les    edi,FWORD PTR [ecx-0x7a65a393]
100043d1:	mov    ecx,0xc2f08e95
100043d6:	pusha  
100043d7:	adc    ebp,esi
100043d9:	xor    ebx,DWORD PTR [esi+0x63eada8e]
100043df:	pop    es
100043e0:	(bad)  [eax+0xc0ac1cc]
100043e6:	push   cs
100043e7:	ret    
100043e8:	(bad)  
100043e9:	xchg   edi,eax
100043ea:	inc    cl
100043ec:	les    eax,FWORD PTR [esp+esi*8]
100043ef:	repz ret 
100043f1:	dec    esp
100043f2:	xor    DWORD PTR [eax],ecx
100043f4:	add    DWORD PTR [eax-0x71],ebp
100043f7:	data16 mov bh,0xc0
100043fa:	cs in  al,0xab
100043fd:	sbb    eax,0xe2860049
10004402:	out    dx,eax
10004403:	and    eax,0x83808224
10004408:	jmp    0x3af059ff
1000440d:	addr16 adc edi,ebp
10004410:	mul    BYTE PTR [edi+0x33ec695a]
10004416:	xchg   edx,eax
10004417:	scas   al,BYTE PTR es:[edi]
10004418:	fdivr  st(7),st
1000441a:	pop    ds
1000441b:	or     DWORD PTR [eax],0xd425ca94
10004421:	iret   
10004422:	jl     0x1000445e
10004424:	push   0xffffffab
10004426:	mov    bh,0xf
10004428:	mov    ah,0x3d
1000442a:	cmp    eax,0xbf2d9141
1000442f:	loop   0x10004402
10004431:	stos   DWORD PTR es:[edi],eax
10004432:	(bad)  
10004433:	adc    BYTE PTR [ebp-0x24],bh
10004436:	or     bl,BYTE PTR [eax+ebx*4]
10004439:	pop    es
1000443a:	jo     0x1000441d
1000443c:	ret    
1000443d:	inc    esi
1000443e:	sbb    al,0xe6
10004440:	loope  0x100044ae
10004442:	ds ds lock mov BYTE PTR gs:[edx+ebx*4],al
10004449:	adc    ecx,DWORD PTR [edi-0x28]
1000444c:	and    al,0xff
1000444e:	mov    edx,eax
10004450:	test   al,0x9c
10004452:	sar    edx,cl
10004454:	inc    ebx
10004455:	popf   
10004456:	es repnz xchg ecx,eax
1000445a:	pop    edx
1000445b:	(bad)  
1000445c:	mov    bh,0x9b
1000445e:	addr16 jl 0x10004485
10004461:	pop    eax
10004462:	jns    0x1000449f
10004464:	inc    esp
10004465:	inc    esp
10004466:	loopne 0x100043f4
10004468:	and    ecx,DWORD PTR [edi+0x4]
1000446b:	pushf  
1000446c:	xor    bl,BYTE PTR [ebx]
1000446e:	fistp  QWORD PTR [edx-0x2bc5823a]
10004474:	imul   eax,DWORD PTR [eax],0xffffff99
10004477:	aas    
10004478:	in     al,dx
10004479:	xor    DWORD PTR [ecx+0x5bcfa3ef],0x8558dfff
10004483:	pop    ds
10004484:	mov    es,WORD PTR [ebp-0xc]
10004487:	retf   0xe801
1000448a:	inc    ecx
1000448b:	mov    ecx,0x4ba60e02
10004490:	imul   ecx,ecx,0xe8946adf
10004496:	mov    dh,0x71
10004498:	sub    ecx,edi
1000449a:	arpl   dx,bp
1000449c:	push   es
1000449d:	push   ecx
1000449e:	dec    edi
1000449f:	loopne 0x1000450a
100044a1:	test   al,0xaf
100044a3:	fidiv  WORD PTR [esi]
100044a5:	call   0x6606a9d0
100044aa:	sbb    BYTE PTR fs:[ecx],ch
100044ad:	mov    al,0xb
100044af:	jo     0x10004435
100044b1:	out    dx,eax
100044b2:	add    dh,BYTE PTR [eax]
100044b4:	add    BYTE PTR [esp+edi*4-0x34],ch
100044b8:	lahf   
100044b9:	enter  0xf9c7,0xe8
100044bd:	add    dl,ch
100044bf:	out    dx,eax
100044c0:	push   ds
100044c1:	and    dh,BYTE PTR [eax+0x63402ffc]
100044c7:	in     al,0xec
100044c9:	enter  0xeb9f,0xb2
100044cd:	and    edi,DWORD PTR [edi+0x27ef38b0]
100044d3:	ins    BYTE PTR es:[edi],dx
100044d4:	jmp    0x408b:0x9a11e1d
100044db:	in     eax,dx
100044dc:	int3   
100044dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100044de:	mov    ds:0xba6b7abe,eax
100044e3:	sub    BYTE PTR [ebx+edi*4-0x42],0x4f
100044e8:	mov    bh,0xce
100044ea:	pop    esp
100044eb:	push   es
100044ec:	(bad)  
100044ed:	mov    al,0xe6
100044ef:	dec    edi
100044f0:	pop    ds
100044f1:	mov    bh,0x6a
100044f3:	or     eax,0xd81db4fa
100044f8:	outs   dx,DWORD PTR ds:[esi]
100044f9:	add    DWORD PTR [eax-0x21],ebp
100044fc:	test   bl,ah
100044fe:	mov    dl,0xc7
10004500:	mov    al,0x31
10004502:	scas   al,BYTE PTR es:[edi]
10004503:	(bad)  
10004504:	repnz dec edi
10004506:	push   esi
10004507:	popf   
10004508:	push   ds
10004509:	sub    eax,DWORD PTR [edi+0x68]
1000450c:	loop   0x1000456e
1000450e:	ror    DWORD PTR [ebp-0x2f],0x22
10004512:	jmp    ebp
10004514:	push   0x22db9c8c
10004519:	jg     0x1000456c
1000451b:	and    bh,BYTE PTR [edi-0x15c01016]
10004521:	inc    esi
10004522:	pushf  
10004523:	dec    ebp
10004524:	pop    esp
10004525:	ror    BYTE PTR [esi+0x19],cl
10004528:	push   ds
10004529:	shl    BYTE PTR [esi+0x1d0f7d07],cl
1000452f:	adc    DWORD PTR [eax],ebp
10004531:	mov    ds:0xd2d3e676,al
10004536:	mov    eax,eax
10004538:	mov    al,0xc1
1000453a:	gs retf 
1000453c:	das    
1000453d:	jl     0x10004523
1000453f:	clc    
10004540:	mov    ds:0x22f0470,eax
10004545:	add    al,BYTE PTR [eax]
10004547:	jecxz  0x1000454b
10004549:	addr16 repz push ecx
1000454c:	mov    edi,ebx
1000454e:	dec    edx
1000454f:	cmp    dh,dh
10004551:	xor    edi,eax
10004553:	fld    TBYTE PTR [ebx+0x22d0637a]
10004559:	jg     0x100045a0
1000455b:	es aas 
1000455d:	rcr    DWORD PTR [eax+0x7e],cl
10004560:	popf   
10004561:	stos   BYTE PTR es:[edi],al
10004562:	enter  0x33f,0x97
10004566:	shr    BYTE PTR [ecx+ecx*1],cl
10004569:	inc    ebp
1000456a:	mov    eax,0x84509f2e
1000456f:	imul   esi,ebx,0xffffff8a
10004572:	pop    eax
10004573:	enter  0xd0a0,0x16
10004577:	or     DWORD PTR [edx+0x11],0x1c9f33b5
1000457e:	pop    ss
1000457f:	adc    DWORD PTR ds:0x894e7fa8,0xed5e6f8d
10004589:	ds push cs
1000458b:	jge    0x100045e7
1000458d:	pop    es
1000458e:	sbb    al,cl
10004590:	adc    al,0x60
10004592:	xlat   BYTE PTR ds:[ebx]
10004593:	cmc    
10004594:	(bad)  
10004595:	sahf   
10004596:	or     BYTE PTR [edi-0x475b1fcb],al
1000459c:	pop    ss
1000459d:	cdq    
1000459e:	loopne 0x10004609
100045a0:	or     BYTE PTR [edi-0x4e],ch
100045a3:	cld    
100045a4:	retf   0xbc7c
100045a7:	gs stc 
100045a9:	iret   
100045aa:	imul   edx,DWORD PTR [ecx-0x247bf41],0x886c82aa
100045b4:	popf   
100045b5:	xor    al,0x8d
100045b7:	sub    DWORD PTR [ebp-0x2592d1d7],ebp
100045bd:	lods   al,BYTE PTR ds:[esi]
100045be:	cdq    
100045bf:	xchg   ebp,eax
100045c0:	pop    esi
100045c1:	push   esp
100045c2:	cmp    BYTE PTR [edi+0x4b],al
100045c5:	add    al,0xca
100045c7:	test   al,0x3d
100045c9:	cld    
100045ca:	inc    edx
100045cb:	aam    0x57
100045cd:	outs   dx,DWORD PTR ds:[esi]
100045ce:	leave  
100045cf:	mov    dh,0x69
100045d1:	jge    0x100045d9
100045d3:	sub    esi,DWORD PTR [edx]
100045d5:	ss push edx
100045d7:	loop   0x10004568
100045d9:	les    edx,FWORD PTR [ecx-0x6a73fe14]
100045df:	clc    
100045e0:	cmp    DWORD PTR [esp+eax*4+0x65],edi
100045e4:	xor    al,0x8e
100045e6:	adc    dl,BYTE PTR [edx+edx*4]
100045e9:	pusha  
100045ea:	jl     0x100045b3
100045ec:	or     eax,0xe554c72a
100045f1:	jb     0x100045c7
100045f3:	dec    ecx
100045f4:	bnd jmp 0x10004621
100045f7:	mov    bl,0xb1
100045f9:	(bad)  
100045fa:	ss pop esi
100045fc:	sbb    ch,0x7c
100045ff:	inc    ebp
10004600:	nop
10004601:	imul   ecx,DWORD PTR [ebp-0x29],0xba7271b6
10004608:	outs   dx,BYTE PTR ds:[esi]
10004609:	fsubr  QWORD PTR [esp+esi*1+0xe986822]
10004610:	add    al,0x22
10004612:	xor    BYTE PTR [ecx-0x8de7eef],ch
10004618:	or     bl,BYTE PTR [eax-0x7f]
1000461b:	mov    eax,ds:0xe81270c0
10004620:	ja     0x10004623
10004622:	push   esi
10004623:	hlt    
10004624:	cs inc eax
10004626:	sti    
10004627:	mov    al,BYTE PTR es:0xf0ab3e76
1000462e:	mov    cl,0x76
10004630:	dec    esp
10004631:	mov    al,BYTE PTR [edi-0x2db4d76e]
10004637:	jne    0x100045b9
10004639:	pop    eax
1000463a:	jb     0x100045d5
1000463c:	cld    
1000463d:	repnz pushf 
1000463f:	pop    edi
10004640:	cs dec esp
10004642:	out    0x9e,eax
10004644:	and    al,0x70
10004646:	shl    DWORD PTR [ebx],1
10004648:	jno    0x100046c1
1000464a:	ins    BYTE PTR es:[edi],dx
1000464b:	jmp    0x52ef:0x265388b1
10004652:	or     BYTE PTR [edx-0x712158be],bh
10004658:	or     BYTE PTR [edx+ebx*2-0x62],dl
1000465c:	shl    dh,0x2c
1000465f:	mov    ch,ch
10004661:	aas    
10004662:	call   0x592e:0x7fe7f4b
10004669:	jg     0x10004697
1000466b:	mov    ss,WORD PTR [edi+ecx*1-0x40]
1000466f:	jno    0x100046e1
10004671:	cmp    ch,BYTE PTR [ebx+0x7ad37610]
10004677:	push   ds
10004678:	imul   ecx,DWORD PTR [ecx-0x1db1795c],0x5e
1000467f:	repz xchg edx,eax
10004681:	arpl   WORD PTR [edx+0x5bd43cf2],bp
10004687:	stos   DWORD PTR es:[edi],eax
10004688:	std    
10004689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000468a:	push   edx
1000468b:	adc    DWORD PTR [ebp+0x3f24db82],eax
10004691:	je     0x1000469e
10004693:	jle    0x10004707
10004695:	mov    eax,ds:0xf2afeb26
1000469a:	add    ch,BYTE PTR [edx+ecx*8]
1000469d:	and    eax,0x7ac6cdfb
100046a2:	xor    ax,0x875
100046a6:	rcr    bl,cl
100046a8:	mov    al,BYTE PTR [ecx+0x6]
100046ab:	imul   ebx,DWORD PTR [esi],0x4
100046ae:	call   0x23c0:0x9e9bc022
100046b5:	cs inc esp
100046b7:	jge    0x100046ae
100046b9:	xor    DWORD PTR [esi],edx
100046bb:	ins    DWORD PTR es:[edi],dx
100046bc:	sbb    DWORD PTR [edx-0x48],eax
100046bf:	lods   al,BYTE PTR ds:[esi]
100046c0:	jno    0x100046b0
100046c2:	mov    dh,0x52
100046c4:	fmul   DWORD PTR [ebx]
100046c6:	add    BYTE PTR [edx+0x24],bh
100046c9:	add    al,BYTE PTR [ebx+0x1c6005d8]
100046cf:	cmp    BYTE PTR [ebp+0x27553455],al
100046d5:	xor    eax,0xdbd24978
100046da:	jns    0x100046ae
100046dc:	lods   eax,DWORD PTR ds:[esi]
100046dd:	repz push ss
100046df:	stc    
100046e0:	inc    edi
100046e1:	iret   
100046e2:	ins    DWORD PTR es:[edi],dx
100046e3:	xchg   ebx,eax
100046e4:	mov    edi,0x63c17458
100046e9:	stos   DWORD PTR es:[edi],eax
100046ea:	std    
100046eb:	mov    edx,0x3a61c8c6
100046f0:	xchg   edx,eax
100046f1:	enter  0xc9f1,0xa6
100046f5:	add    dh,BYTE PTR [ecx-0x9]
100046f8:	pop    edi
100046f9:	and    eax,DWORD PTR [edx]
100046fb:	adc    ecx,edx
100046fd:	xor    BYTE PTR [ebp-0x776dd6d9],dh
10004703:	sub    DWORD PTR [esi+0x6e945d0c],0x2a50c03a
1000470d:	xchg   edi,eax
1000470e:	push   ecx
1000470f:	cmp    ebp,ebx
10004711:	leave  
10004712:	mov    ebp,0x7a5e8111
10004717:	or     BYTE PTR [eax+eiz*8],cl
1000471a:	inc    ebp
1000471b:	push   esi
1000471c:	pop    ecx
1000471d:	xor    ebp,edx
1000471f:	pushf  
10004720:	or     al,0x7a
10004722:	add    DWORD PTR [eax+0x65],esi
10004725:	das    
10004726:	add    bl,BYTE PTR [esi+0x77]
10004729:	loope  0x1000478f
1000472b:	add    DWORD PTR [esi],edi
1000472d:	(bad)  
1000472e:	mov    dl,0x62
10004730:	xchg   BYTE PTR [ebx],cl
10004732:	xor    BYTE PTR [esi],0x4f
10004735:	test   BYTE PTR [edx+0x71b36806],bl
1000473b:	dec    esp
1000473c:	(bad)  
1000473d:	pop    esp
1000473e:	xchg   dl,bh
10004740:	push   0x809f25f3
10004745:	cld    
10004746:	mov    cl,0xad
10004748:	mov    esi,0xe24c60c8
1000474d:	cli    
1000474e:	jmp    0x100046fc
10004750:	mov    edi,0x34712f2a
10004755:	pop    edx
10004756:	jg     0x100047ad
10004758:	mov    ebp,0x69aa4c32
1000475d:	cmp    edx,ebp
1000475f:	leave  
10004760:	jmp    0xa1cc10fb
10004765:	into   
10004766:	leave  
10004767:	xor    dh,BYTE PTR [ebp+edx*4+0x7b6aea44]
1000476e:	add    ah,ch
10004770:	adc    ch,BYTE PTR [edx+0x67]
10004773:	pop    ebp
10004774:	mov    dl,bh
10004776:	stos   BYTE PTR es:[edi],al
10004777:	dec    ebp
10004778:	push   esi
10004779:	dec    ebp
1000477a:	out    dx,eax
1000477b:	sbb    bl,BYTE PTR [ecx]
1000477d:	or     DWORD PTR [ebx],eax
1000477f:	sub    esi,DWORD PTR [eax-0x607a873e]
10004785:	add    DWORD PTR ds:0x811333e9,esi
1000478b:	mov    esi,0x8f15c00b
10004790:	sbb    bh,BYTE PTR [edi]
10004792:	add    DWORD PTR ds:0x674590b6,eax
10004798:	imul   ecx,DWORD PTR [ebx+0x754c1b30],0x1e98e098
100047a2:	mov    ecx,0x73d1f504
100047a7:	push   eax
100047a8:	cs pop ss
100047aa:	dec    ecx
100047ab:	repnz mov esi,DWORD PTR [eax+0x46]
100047af:	mov    ds:0x1e37408,eax
100047b4:	cwde   
100047b5:	enter  0x636f,0xfd
100047b9:	dec    ebp
100047ba:	add    ah,BYTE PTR [ebx-0x75f1e8b5]
100047c0:	mov    dh,0xaf
100047c2:	mov    ebx,0xa6eb6847
100047c7:	and    eax,0x61077f21
100047cc:	adc    DWORD PTR [eax-0x15de8262],ebp
100047d2:	stos   DWORD PTR es:[edi],eax
100047d3:	aaa    
100047d4:	imul   edx,DWORD PTR [edx+0xf],0x330a1a00
100047db:	xchg   edi,eax
100047dc:	mov    eax,ds:0xa6a32e4
100047e1:	mov    al,0xa2
100047e3:	pop    ss
100047e4:	add    DWORD PTR [ecx],eax
100047e6:	add    BYTE PTR [ebx],dl
100047e8:	gs jle 0x10004827
100047eb:	sub    esi,DWORD PTR [edx]
100047ed:	mov    edi,0x7dc4901d
100047f2:	xlat   BYTE PTR ds:[ebx]
100047f3:	shl    DWORD PTR [esi],0xbf
100047f6:	leave  
100047f7:	or     edx,DWORD PTR [eax]
100047f9:	inc    eax
100047fa:	shl    edx,cl
100047fc:	push   DWORD PTR [ecx]
100047fe:	jmp    0x87b1:0x7f6c8fa3
10004805:	mov    ah,0xfc
10004807:	or     bl,cl
10004809:	or     BYTE PTR [ecx+0x4],0x82
1000480d:	jae    0x100047f9
1000480f:	pop    edx
10004810:	sbb    DWORD PTR gs:0xfc84401e,ecx
10004817:	dec    ecx
10004818:	lods   al,BYTE PTR ds:[esi]
10004819:	jg     0x10004853
1000481b:	fsub   DWORD PTR [esp+eax*2]
1000481e:	cmp    ah,BYTE PTR [eax+esi*8]
10004821:	or     cl,BYTE PTR [eax+edx*8-0x196c64b]
10004828:	push   cs
10004829:	mov    ds:0xd424f022,al
1000482e:	push   edi
1000482f:	ins    DWORD PTR es:[edi],dx
10004830:	call   0xb2d793d
10004835:	add    BYTE PTR [eax],al
10004837:	and    BYTE PTR [eax],al
10004839:	dec    ecx
1000483a:	inc    esp
1000483b:	inc    ecx
1000483c:	push   esp
1000483d:	mov    edx,0xf5a29ecc
10004842:	mov    ebp,0xe02e610
10004847:	ret    
10004848:	push   esi
10004849:	cwde   
1000484a:	mov    edi,0xfa35de2f
1000484f:	mov    esi,0xb672e00b
10004854:	popf   
10004855:	xchg   ebp,eax
10004856:	pop    eax
10004857:	leave  
10004858:	cwde   
10004859:	pop    edx
1000485a:	dec    eax
1000485b:	adc    ebp,0x74
1000485e:	aam    0x3d
10004860:	xor    BYTE PTR [ebp+0x72470fc5],ch
10004866:	dec    esp
10004867:	(bad)  
10004868:	pop    esp
10004869:	test   dl,bh
1000486b:	cwde   
1000486c:	cdq    
1000486d:	cld    
1000486e:	test   BYTE PTR ds:0x8dbe21b3,0x10
10004875:	pop    eax
10004876:	ja     0x100047fc
10004878:	out    0x5c,al
1000487a:	jne    0x10004819
1000487c:	test   DWORD PTR [eax],edx
1000487e:	and    al,0x10
10004880:	add    al,0xa1
10004882:	outs   dx,BYTE PTR ds:[esi]
10004883:	imul   esi,DWORD PTR [esp+eax*1-0x72ba50a5],0xffffff88
1000488b:	or     BYTE PTR [ebx+esi*2+0x6044761],bl
10004892:	out    dx,al
10004893:	add    al,BYTE PTR [eax]
10004895:	add    DWORD PTR [edi+0x7307df63],edx
1000489b:	sbb    BYTE PTR [eax],bh
1000489d:	mov    al,0x6a
1000489f:	in     eax,dx
100048a0:	test   al,0xe3
100048a2:	test   BYTE PTR [edx],dl
100048a4:	scas   al,BYTE PTR es:[edi]
100048a5:	call   0xf37708ef
100048aa:	pop    ebp
100048ab:	xchg   DWORD PTR ds:0xf92c4ac7,ebx
100048b1:	pop    ds
100048b2:	call   DWORD PTR [eax+eax*4+0x7c]
100048b6:	mov    ?,WORD PTR [edx]
100048b8:	outs   dx,DWORD PTR ds:[esi]
100048b9:	inc    eax
100048ba:	sbb    esi,edx
100048bc:	and    bh,bh
100048be:	call   0x67e4a366
100048c3:	int3   
100048c4:	stc    
100048c5:	and    eax,0x619c4652
100048ca:	inc    ecx
100048cb:	jns    0x100048cf
100048cd:	bnd jns 0x100048e2
100048d0:	inc    edx
100048d1:	adc    DWORD PTR [ebp+0x8],esp
100048d4:	test   BYTE PTR [eax],cl
100048d6:	and    al,0xd5
100048d8:	dec    edi
100048d9:	or     al,BYTE PTR [esi+0x74e42e14]
100048df:	inc    esp
100048e0:	sbb    ah,BYTE PTR [ebp-0x65]
100048e3:	sub    al,0x9a
100048e5:	outs   dx,BYTE PTR ds:[esi]
100048e6:	adc    al,0x84
100048e8:	outs   dx,BYTE PTR ds:[esi]
100048e9:	test   BYTE PTR [edx+0x57],cl
100048ec:	push   ss
100048ed:	sbb    eax,0xc089202c
100048f2:	mov    ecx,0xbba02784
100048f7:	mov    ch,0xac
100048f9:	test   DWORD PTR [edx+0xcc4e5b2],eax
100048ff:	pop    edi
10004900:	jo     0x1000492e
10004902:	fdivrp st(4),st
10004904:	hlt    
10004905:	xor    eax,0x3239145b
1000490a:	inc    ebx
1000490b:	fbld   TBYTE PTR [edi-0x4e3e2400]
10004911:	sub    al,0x78
10004913:	add    edx,DWORD PTR [eax+0x67]
10004916:	les    ebp,FWORD PTR [eax+edx*1-0x35]
1000491a:	lahf   
1000491b:	(bad)  
1000491c:	or     esp,DWORD PTR [eax+0x2d]
1000491f:	retf   
10004920:	jg     0x10004980
10004922:	call   0x6f87bd76
10004927:	repnz rcr DWORD PTR [ecx+0x59],1
1000492b:	add    BYTE PTR [edx+eax*4+0x5eb6b4a],0x68
10004933:	repnz dec eax
10004935:	loop   0x10004949
10004937:	daa    
10004938:	jg     0x100048f6
1000493a:	ins    DWORD PTR es:[edi],dx
1000493b:	leave  
1000493c:	dec    eax
1000493d:	inc    esi
1000493e:	in     al,0x11
10004940:	push   esp
10004941:	pushf  
10004942:	ins    BYTE PTR es:[edi],dx
10004943:	test   eax,0x9fddd075
10004948:	ins    DWORD PTR es:[edi],dx
10004949:	mov    ebx,0x1124f6e4
1000494e:	shl    BYTE PTR [esi],cl
10004950:	mov    ds:0xd444f022,al
10004955:	daa    
10004956:	(bad)  
10004957:	pop    ecx
10004958:	mov    ah,0xbd
1000495a:	(bad)  
1000495c:	push   ecx
1000495d:	call   0xc70b:0xeb89c6b3
10004964:	loopne 0x100049ae
10004966:	sti    
10004967:	xor    dl,BYTE PTR [eax]
10004969:	arpl   WORD PTR [eax+0x6f],bx
1000496c:	jl     0x10004973
1000496e:	pop    eax
1000496f:	es mov ah,0x41
10004972:	sub    BYTE PTR [ebp+edi*4+0x638c3200],ch
10004979:	jp     0x100049af
1000497b:	in     al,dx
1000497c:	not    BYTE PTR [edi]
1000497e:	push   eax
1000497f:	and    al,0xdf
10004981:	lock rcl DWORD PTR ds:0x130113a4,cl
10004988:	icebp  
10004989:	jne    0x1000496c
1000498b:	mov    eax,ds:0x1bf22b38
10004990:	or     BYTE PTR [esi+0x130c936d],ah
10004996:	leave  
10004997:	je     0x100049ef
10004999:	fiadd  WORD PTR [ecx*1+0x6e2263f9]
100049a0:	and    ebx,DWORD PTR [edx-0x46]
100049a3:	ss jne 0x10004968
100049a6:	and    bh,BYTE PTR [ebx-0x76c218fd]
100049ac:	push   ss
100049ad:	sub    DWORD PTR [ebp+ebp*1+0x6304527e],0x1c9b01ce
100049b8:	loope  0x10004a25
100049ba:	adc    eax,0x2ee45629
100049bf:	inc    eax
100049c0:	xor    ch,dl
100049c2:	pop    ecx
100049c3:	iret   
100049c4:	lods   al,BYTE PTR ds:[esi]
100049c5:	inc    DWORD PTR [eax]
100049c7:	cwde   
100049c8:	add    eax,0xa500bc6c
100049cd:	cmc    
100049ce:	out    0x98,eax
100049d0:	push   ds
100049d1:	jge    0x10004a29
100049d3:	mov    ah,bh
100049d5:	and    ebp,0xcbf20a67
100049db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100049dc:	lea    ebx,[esi]
100049de:	mov    ds:0x3a2051b6,eax
100049e3:	and    eax,0xa8d11d0
100049e8:	or     edx,DWORD PTR [ecx]
100049ea:	pop    edi
100049eb:	je     0x100049df
100049ed:	or     ah,BYTE PTR [ebx]
100049ef:	stc    
100049f0:	test   eax,0x36e1ca36
100049f5:	xlat   BYTE PTR ds:[ebx]
100049f6:	mov    al,0x68
100049f8:	cmp    edx,ecx
100049fa:	pop    esi
100049fb:	adc    eax,DWORD PTR [ebx+0x537ff394]
10004a01:	jnp    0x100049ac
10004a03:	hlt    
10004a04:	mov    edx,0xe6ba74b4
10004a09:	ja     0x10004a12
10004a0b:	add    dl,BYTE PTR [ecx]
10004a0d:	dec    eax
10004a0e:	loope  0x10004a19
10004a10:	hlt    
10004a11:	dec    ecx
10004a12:	and    BYTE PTR [eax+0x5230acb],bl
10004a18:	mov    esi,0x8197ea11
10004a1d:	xor    dl,BYTE PTR [ecx]
10004a1f:	cmp    DWORD PTR [esi+0x3018014f],0xc7e99709
10004a29:	outs   dx,DWORD PTR ds:[esi]
10004a2a:	in     al,0x98
10004a2c:	ret    0x500b
10004a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10004a30:	mov    DWORD PTR [esi+0x3e8f4c31],eax
10004a36:	adc    esi,ebp
10004a38:	icebp  
10004a39:	repz or dl,dh
10004a3c:	xor    ebp,DWORD PTR [ecx-0x10]
10004a3f:	retf   
10004a40:	test   ecx,ebp
10004a42:	sbb    ebp,DWORD PTR ds:0x24227ce4
10004a48:	push   es
10004a49:	ins    DWORD PTR es:[edi],dx
10004a4a:	xor    ch,BYTE PTR [ebx]
10004a4c:	ds loope 0x10004ac3
10004a4f:	and    bl,BYTE PTR [edx-0x72]
10004a52:	xor    ah,dl
10004a54:	stos   DWORD PTR es:[edi],eax
10004a55:	outs   dx,BYTE PTR ds:[esi]
10004a56:	mov    ds:0x58d94508,eax
10004a5b:	pop    eax
10004a5c:	mov    ebp,0x4e4057
10004a61:	bound  ecx,QWORD PTR [edi]
10004a63:	inc    eax
10004a64:	xchg   DWORD PTR cs:[edx],edx
10004a67:	sbb    al,0xb9
10004a69:	pop    esp
10004a6a:	push   ebx
10004a6b:	fwait
10004a6c:	call   0x6b456f67
10004a71:	add    al,0x4a
10004a73:	and    eax,0x84f91ed4
10004a78:	ins    BYTE PTR es:[edi],dx
10004a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10004a7a:	add    ebx,DWORD PTR [ecx+0x8]
10004a7d:	inc    ebx
10004a7e:	mov    dl,dl
10004a80:	int3   
10004a81:	inc    ecx
10004a82:	mov    cl,0xe4
10004a84:	mov    dl,0xd5
10004a86:	push   eax
10004a87:	scas   eax,DWORD PTR es:[edi]
10004a88:	adc    al,0x64
10004a8a:	sub    BYTE PTR [ebp*2+0x4180db1],0xc6
10004a92:	bound  edi,QWORD PTR [edi+0x4]
10004a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10004a96:	pop    ebx
10004a97:	or     BYTE PTR [eax+0xb2e56fd],ah
10004a9d:	pop    es
10004a9e:	push   eax
10004a9f:	jno    0x10004a6e
10004aa1:	repz test eax,0x72c23fb1
10004aa7:	in     eax,0x1c
10004aa9:	xchg   esp,eax
10004aaa:	pop    ebp
10004aab:	pop    es
10004aac:	scas   al,BYTE PTR es:[edi]
10004aad:	jmp    0x10004a2f
10004aaf:	jae    0x10004ab7
10004ab1:	and    DWORD PTR [eax+edi*2+0x5e],edi
10004ab5:	nop
10004ab6:	test   eax,0x7ec45cd9
10004abb:	rcl    BYTE PTR [ebx+0x40b56412],1
10004ac1:	mov    bl,0x58
10004ac3:	mov    eax,0xe7358c1a
10004ac8:	dec    eax
10004ac9:	shl    DWORD PTR [edi],0x68
10004acc:	sub    al,0x4d
10004ace:	mov    WORD PTR [esi+ebx*1],es
10004ad1:	or     BYTE PTR [eax],0xc7
10004ad4:	retf   
10004ad5:	imul   ebp,DWORD PTR [eax-0x6ce18f15],0xbcb3b5d5
10004adf:	xchg   ecx,eax
10004ae0:	sub    esp,ecx
10004ae2:	inc    ebx
10004ae3:	or     cl,dl
10004ae5:	cmp    bh,BYTE PTR [edx-0x13]
10004ae8:	jb     0x10004aee
10004aea:	add    al,0x20
10004aec:	jl     0x10004a97
10004aee:	ins    BYTE PTR es:[edi],dx
10004aef:	inc    edx
10004af0:	and    BYTE PTR [ecx+0x58121349],ah
10004af6:	mov    eax,ds:0xe6884729
10004afb:	dec    esi
10004afc:	mov    ah,0xe3
10004afe:	push   ss
10004aff:	mov    al,0x74
10004b01:	(bad)  
10004b02:	jecxz  0x10004a84
10004b04:	lahf   
10004b05:	jg     0x10004b22
10004b07:	test   ecx,ebx
10004b09:	imul   esi,DWORD PTR [edx+0x62c399bd],0x78ce3038
10004b13:	shl    DWORD PTR [ebp+0x6b],0xec
10004b17:	jae    0x10004abd
10004b19:	inc    ebx
10004b1a:	mov    edi,0xa8100005
10004b1f:	and    al,0x16
10004b21:	add    BYTE PTR [ecx],ah
10004b23:	call   0xb526:0x1cc990ec
10004b2a:	jl     0x10004b45
10004b2c:	in     al,0x89
10004b2e:	(bad)  
10004b2f:	fisttp QWORD PTR [esi-0x50]
10004b32:	jle    0x10004b32
10004b34:	lahf   
10004b35:	add    BYTE PTR [ebp+0x29c4ea7f],0x9d
10004b3c:	sub    eax,DWORD PTR [esi+0x77]
10004b3f:	jg     0x10004b57
10004b41:	pop    DWORD PTR [edx+ebx*1+0x67]
10004b45:	cmc    
10004b46:	lods   eax,DWORD PTR ds:[esi]
10004b47:	scas   eax,DWORD PTR es:[edi]
10004b48:	add    ebx,DWORD PTR [ebx+0x75]
10004b4b:	push   ss
10004b4c:	pop    esp
10004b4d:	xlat   BYTE PTR ds:[ebx]
10004b4e:	imul   edi,DWORD PTR [esi-0x4bd9b2d0],0x30daf6b0
10004b58:	sbb    esp,DWORD PTR [ecx]
10004b5a:	push   eax
10004b5b:	jnp    0x10004b62
10004b5d:	and    al,0x35
10004b5f:	bound  ebx,QWORD PTR [esi-0x73]
10004b62:	add    al,BYTE PTR [ecx]
10004b64:	jmp    0x702a41e8
10004b69:	cli    
10004b6a:	inc    DWORD PTR [ecx-0x48a16f77]
10004b70:	mov    ss,WORD PTR [ecx]
10004b72:	lods   eax,DWORD PTR ds:[esi]
10004b73:	or     cl,BYTE PTR [edi+0x17]
10004b76:	lods   al,BYTE PTR ds:[esi]
10004b77:	popf   
10004b78:	push   ds
10004b79:	inc    ecx
10004b7a:	test   BYTE PTR [ebp-0x2d],al
10004b7d:	test   DWORD PTR [ebx-0x235ffa8b],ecx
10004b83:	xchg   edx,eax
10004b84:	jmp    0x7592:0xe2300ea9
10004b8b:	into   
10004b8c:	cmp    DWORD PTR [eax+0x74],edx
10004b8f:	mov    cl,0x46
10004b91:	lahf   
10004b92:	test   eax,0xa75f47b
10004b97:	lock scas al,BYTE PTR es:[edi]
10004b99:	lods   eax,DWORD PTR ds:[si]
10004b9b:	sub    eax,0x3e33c183
10004ba0:	dec    esp
10004ba1:	jmp    0x5b3b:0x1b20aae1
10004ba8:	scas   al,BYTE PTR es:[edi]
10004ba9:	fcomp  DWORD PTR [esi-0x32b5fcf9]
10004baf:	or     ebx,edi
10004bb1:	and    DWORD PTR [edx+0x6a8023cb],0xbd5a86ad
10004bbb:	add    edi,ecx
10004bbd:	cvttps2pi mm2,QWORD PTR [edx+ecx*4+0x5c9872bc]
10004bc5:	push   0x84295198
10004bca:	inc    eax
10004bcb:	imul   edi,ebp,0x6d
10004bce:	outs   dx,BYTE PTR ds:[esi]
10004bcf:	call   0xb339:0xbcf34f6a
10004bd6:	icebp  
10004bd7:	adc    eax,0xe232e4f9
10004bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10004bdd:	ss leave 
10004bdf:	adc    esp,ebp
10004be1:	jmp    0x10004c09
10004be3:	jge    0x10004c37
10004be5:	adc    BYTE PTR [esi-0x7a],al
10004be8:	imul   edx,DWORD PTR [esi-0x5a9ce70c],0xa64f6c50
10004bf2:	add    al,BYTE PTR [ebx]
10004bf4:	sti    
10004bf5:	push   ecx
10004bf6:	shl    BYTE PTR [ebx+ebx*1],1
10004bf9:	dec    ecx
10004bfa:	int    0xc
10004bfc:	add    ebx,eax
10004bfe:	adc    DWORD PTR ds:0x13c785d2,edi
10004c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10004c05:	adc    DWORD PTR [ecx],eax
10004c07:	and    DWORD PTR [ebp-0x18],ebx
10004c0a:	(bad)  
10004c0b:	cmp    eax,0x911b45c5
10004c10:	push   0xebd409c7
10004c15:	jne    0x10004c4b
10004c17:	sbb    cl,BYTE PTR ds:0x68a7bef8
10004c1d:	mov    BYTE PTR [edx+0x4],cl
10004c20:	adc    al,0x47
10004c22:	stos   BYTE PTR es:[edi],al
10004c23:	pop    ds
10004c24:	lods   al,BYTE PTR ds:[esi]
10004c25:	cmp    al,0x0
10004c27:	cli    
10004c28:	(bad)  
10004c29:	loop   0x10004be2
10004c2b:	pusha  
10004c2c:	sub    eax,DWORD PTR [esi]
10004c2e:	popf   
10004c2f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
10004c31:	fld    TBYTE PTR [edi+0x4e]
10004c34:	fldenv [ebx-0x72fa3cfc]
10004c3a:	addr16 leave 
10004c3c:	call   0x999:0x49aba78e
10004c43:	cli    
10004c44:	sub    al,BYTE PTR [eax]
10004c46:	(bad)  
10004c47:	cmp    DWORD PTR [esi+0x1a860132],edi
10004c4d:	add    BYTE PTR [ebx+eiz*8+0x58],0x9
10004c52:	inc    ebp
10004c53:	pop    edx
10004c54:	adc    DWORD PTR [ecx],ecx
10004c56:	jmp    0x10004c9a
10004c58:	add    al,0x82
10004c5a:	jmp    0x10004bf4
10004c5c:	adc    BYTE PTR [eax],bl
10004c5e:	(bad)  
10004c5f:	rol    BYTE PTR [esi+esi*1-0xdfb5d91],0x3d
10004c67:	mov    edi,0xf5931045
10004c6c:	mov    bh,0x25
10004c6e:	mov    edi,0x75d2194d
10004c73:	and    al,0x9f
10004c75:	pop    edx
10004c76:	or     al,0x22
10004c78:	inc    ecx
10004c79:	mov    cl,0x38
10004c7b:	and    bl,BYTE PTR [edi+0x79a59aec]
10004c81:	fidiv  WORD PTR [ecx+0x59c6133a]
10004c87:	adc    eax,0x13a149af
10004c8c:	icebp  
10004c8d:	sub    al,0x10
10004c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10004c90:	cmp    DWORD PTR [edi],eax
10004c92:	cmp    bh,al
10004c94:	mov    eax,0xd0aeca45
10004c99:	scas   eax,DWORD PTR es:[edi]
10004c9a:	xor    eax,0x11d1d200
10004c9f:	adc    BYTE PTR [ebp+0x201bd4ef],ch
10004ca5:	pop    edx
10004ca6:	mov    ecx,0x3200b5e5
10004cab:	dec    ebp
10004cac:	repz sbb BYTE PTR [ecx+0x12],cl
10004cb0:	pop    esi
10004cb1:	invd   
10004cb3:	inc    edi
10004cb4:	call   0x2d68ce87
10004cb9:	mov    cl,0x30
10004cbb:	adc    DWORD PTR ds:0xb6267ab7,ecx
10004cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10004cc2:	dec    edi
10004cc3:	inc    ebp
10004cc4:	ds stc 
10004cc6:	pop    esp
10004cc7:	adc    DWORD PTR [esi],esp
10004cc9:	sub    BYTE PTR [esi+0x59],dl
10004ccc:	or     BYTE PTR [ecx-0x39642ab0],al
10004cd2:	cli    
10004cd3:	push   ebx
10004cd4:	icebp  
10004cd5:	mov    dh,0xaa
10004cd7:	dec    ecx
10004cd8:	or     BYTE PTR [edx+ebp*4-0x7527e4f6],al
10004cdf:	std    
10004ce0:	and    cl,dl
10004ce2:	shl    edi,cl
10004ce4:	std    
10004ce5:	aam    0xe8
10004ce7:	jmp    0x10004d0b
10004ce9:	loopne 0x10004d53
10004ceb:	xchg   ecx,eax
10004cec:	push   ebp
10004ced:	shl    al,0xcb
10004cf0:	fs xor eax,0xd2e8291e
10004cf6:	add    al,0x22
10004cf8:	adc    dl,ah
10004cfa:	mov    ebp,0x734008b5
10004cff:	sbb    eax,0x93c3930e
10004d04:	mov    fs,WORD PTR [esi]
10004d06:	xor    bh,BYTE PTR [ecx]
10004d08:	fst    QWORD PTR gs:[ebp-0x67]
10004d0c:	je     0x10004d64
10004d0e:	pop    edi
10004d0f:	ds jmp 0x36be:0x134e4304
10004d17:	test   BYTE PTR [ecx-0x667d602a],dl
10004d1d:	clc    
10004d1e:	(bad)  
10004d1f:	fidiv  WORD PTR [ebx]
10004d21:	or     al,BYTE PTR [ecx+0x40bac220]
10004d27:	scas   eax,DWORD PTR es:[edi]
10004d28:	(bad)
10004d2c:	pushf  
10004d2d:	shl    ecx,0x6c
10004d30:	mov    ds:0x54e8ad47,al
10004d35:	shr    ebx,cl
10004d37:	or     al,dl
10004d39:	pop    eax
10004d3a:	test   al,0x89
10004d3c:	and    eax,0xc69d6888
10004d41:	mov    ch,0x80
10004d43:	fdivr  DWORD PTR [eax+0x26]
10004d46:	shr    BYTE PTR [ebx-0x3a],cl
10004d49:	ja     0x10004d1f
10004d4b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10004d4d:	push   es
10004d4e:	das    
10004d4f:	loop   0x10004d60
10004d51:	fwait
10004d52:	xor    BYTE PTR ss:[ebp+edi*4-0xe],0x87
10004d58:	or     BYTE PTR [ebp+0x3a],0x21
10004d5c:	daa    
10004d5d:	aam    0x65
10004d5f:	xchg   esi,eax
10004d60:	shl    DWORD PTR ds:0x3c2bf21,cl
10004d66:	adc    BYTE PTR [edx+0x5c],dh
10004d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10004d6a:	(bad)  
10004d6b:	clc    
10004d6c:	xor    edx,DWORD PTR [edx]
10004d6e:	or     ch,BYTE PTR [edi+0x41]
10004d71:	rcr    DWORD PTR [esi+0x59],1
10004d74:	sub    BYTE PTR [eax+0x3a8f8526],ch
10004d7a:	je     0x10004dbd
10004d7c:	dec    esp
10004d7d:	ins    DWORD PTR es:[edi],dx
10004d7e:	(bad)  
10004d7f:	pop    esi
10004d80:	jnp    0x10004d85
10004d82:	adc    DWORD PTR [ebx],ecx
10004d84:	das    
10004d85:	jge    0x10004d90
10004d87:	dec    eax
10004d88:	fiadd  WORD PTR [ecx]
10004d8a:	push   0xc5f3c7b5
10004d8f:	ins    BYTE PTR es:[edi],dx
10004d90:	(bad)  
10004d91:	pop    ebx
10004d92:	xor    eax,0x6c0ebfc0
10004d97:	sbb    al,BYTE PTR [edx+ebx*2]
10004d9a:	lds    edx,FWORD PTR [edi]
10004d9c:	jmp    0x808a:0xd83e9434
10004da3:	out    dx,al
10004da4:	cmp    bl,BYTE PTR [esi+eiz*2]
10004da7:	mov    dl,0x46
10004da9:	mov    ss:0x414f2ca0,al
10004daf:	jo     0x10004d86
10004db1:	cmp    ecx,esi
10004db3:	ret    0x9d10
10004db6:	pop    edi
10004db7:	push   ebx
10004db8:	mov    ss,WORD PTR [eax-0x2b]
10004dbb:	daa    
10004dbc:	mov    edi,0xa76dd083
10004dc1:	fadd   DWORD PTR [eax-0x6eaaf7f0]
10004dc7:	ss popa 
10004dc9:	dec    ecx
10004dca:	loop   0x10004e47
10004dcc:	xchg   ebp,eax
10004dcd:	xchg   edi,eax
10004dce:	add    dh,BYTE PTR ds:0xf9d7a629
10004dd4:	jnp    0x10004e10
10004dd6:	and    eax,ebp
10004dd8:	stos   DWORD PTR es:[edi],eax
10004dd9:	add    BYTE PTR [edi+esi*8-0x22],bh
10004ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10004dde:	pop    ecx
10004ddf:	or     BYTE PTR [eiz*8+0x498598f0],dl
10004de6:	and    cl,BYTE PTR [edx]
10004de8:	push   esp
10004de9:	sbb    al,0x11
10004deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10004dec:	adc    eax,0x2aaf2a01
10004df1:	pop    esi
10004df2:	push   cs
10004df3:	dec    edi
10004df4:	cmp    BYTE PTR [esi+0xa5479cd],dh
10004dfa:	inc    edx
10004dfb:	adc    DWORD PTR [edi],ebx
10004dfd:	inc    esp
10004dfe:	mov    esp,0xe474f3ae
10004e03:	xchg   edi,eax
10004e04:	jmp    0x10004e5d
10004e06:	pop    ebp
10004e07:	xchg   ebx,esi
10004e09:	call   0xea748ed2
10004e0e:	dec    ecx
10004e0f:	xchg   ebp,eax
10004e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10004e11:	shl    BYTE PTR [ecx+0x12],1
10004e14:	dec    ecx
10004e15:	test   eax,eax
10004e17:	es sahf 
10004e19:	or     al,0x4f
10004e1b:	shl    edx,0xac
10004e1e:	test   BYTE PTR [ecx-0x5a],al
10004e21:	mov    ecx,0x7302f80f
10004e26:	sbb    esi,edx
10004e28:	inc    eax
10004e29:	mov    ds:0x1022fff,al
10004e2e:	int    0x5b
10004e30:	jmp    0xc3e9:0xcd4fce76
10004e37:	stc    
10004e38:	mov    DWORD PTR [eax-0x7bf6528],esi
10004e3e:	and    eax,0x602f391f
10004e43:	cmp    edi,esi
10004e45:	daa    
10004e46:	loop   0x10004ddb
10004e48:	inc    eax
10004e49:	test   al,0x2e
10004e4b:	sub    BYTE PTR [edx-0x7b],dh
10004e4e:	sub    DWORD PTR [ebp-0x6c],0xffffffcf
10004e52:	loopne 0x10004e59
10004e54:	nop
10004e55:	sahf   
10004e56:	inc    ebx
10004e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10004e58:	lods   al,BYTE PTR ds:[esi]
10004e59:	clc    
10004e5a:	jge    0x1c014004
10004e60:	icebp  
10004e61:	and    ch,BYTE PTR ss:[edi]
10004e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10004e65:	xor    eax,0x167d2445
10004e6a:	mov    ch,BYTE PTR [esi-0x4e55e332]
10004e70:	lods   eax,DWORD PTR ds:[esi]
10004e71:	pop    eax
10004e72:	add    BYTE PTR [edx+eax*1],dl
10004e75:	pop    esi
10004e76:	sub    al,0x6d
10004e78:	(bad)  
10004e79:	call   0xaf05629
10004e7e:	das    
10004e7f:	ds mov ah,0xc
10004e82:	inc    ecx
10004e83:	mov    edi,0x6c1ed807
10004e88:	mov    DWORD PTR [esi+edi*1+0x3e2a911],ebp
10004e8f:	imul   esi,eax,0x32a50b24
10004e95:	jle    0x10004ebd
10004e97:	inc    ebx
10004e98:	xchg   edi,eax
10004e99:	add    al,0xba
10004e9b:	mov    esp,0xfb5c572a
10004ea0:	cmp    eax,0x2a50aa02
10004ea5:	pop    esi
10004ea6:	mov    esi,0xa779fd41
10004eab:	imul   edx,DWORD PTR [edx+0x59],0xdd530882
10004eb2:	sbb    al,0x69
10004eb4:	std    
10004eb5:	inc    ebp
10004eb6:	sub    al,0x7
10004eb8:	jns    0x10004e4f
10004eba:	push   esp
10004ebb:	or     BYTE PTR [edi+ecx*8],cl
10004ebe:	mov    eax,ds:0x82b69c57
10004ec3:	cld    
10004ec4:	imul   bp,sp,0x9a52
10004ec9:	push   DWORD PTR [edi+0x621094ac]
10004ecf:	mov    ecx,0x9feb0db7
10004ed4:	add    BYTE PTR [esi+ebx*4+0x3c],dh
10004ed8:	ret    
10004ed9:	adc    bh,BYTE PTR [esp+eax*2]
10004edc:	(bad)  
10004edd:	pop    ebx
10004ede:	jmp    0x10004ef8
10004ee0:	jnp    0x10004f2a
10004ee2:	push   esi
10004ee3:	bound  esp,QWORD PTR [eax]
10004ee5:	pop    ebx
10004ee6:	inc    esi
10004ee7:	repz mov ecx,0x788b8588
10004eed:	cmp    dl,ch
10004eef:	fsub   DWORD PTR [esi-0x72601c60]
10004ef5:	pop    eax
10004ef6:	mov    ah,0xe3
10004ef8:	add    dh,BYTE PTR [edx+0x372f48ab]
10004efe:	les    eax,FWORD PTR [esi+esi*2-0x7]
10004f02:	sbb    BYTE PTR [edx+0x41],dl
10004f05:	int    0x1b
10004f07:	and    BYTE PTR [edx],0x56
10004f0a:	ss cmp bh,cl
10004f0d:	mov    ah,0xa4
10004f0f:	pop    es
10004f10:	xchg   ecx,eax
10004f11:	push   esi
10004f12:	mov    ss,WORD PTR [ebx+0x522884c5]
10004f18:	cs ds dec ebp
10004f1b:	pushf  
10004f1c:	sbb    al,0xaf
10004f1e:	cmp    dh,BYTE PTR [edi-0xab4d3d7]
10004f24:	push   0x6f75fdcd
10004f29:	add    BYTE PTR [edx],al
10004f2b:	add    BYTE PTR [ecx+eax*4+0x5a],bh
10004f2f:	inc    ebx
10004f30:	sbb    al,0xcc
10004f32:	mov    al,0x66
10004f34:	adc    bh,BYTE PTR [ebp+0x5f]
10004f37:	add    al,0x14
10004f39:	or     al,0xf3
10004f3b:	ret    0x793
10004f3e:	dec    ebx
10004f3f:	jo     0x10004f65
10004f41:	enter  0x4b1c,0x83
10004f45:	js     0x10004ee1
10004f47:	xchg   esp,eax
10004f48:	and    dl,BYTE PTR [eax]
10004f4a:	jne    0x10004f6c
10004f4c:	mov    eax,DWORD PTR fs:[ebp-0x78f22708]
10004f53:	cdq    
10004f54:	dec    eax
10004f55:	lods   eax,DWORD PTR ds:[esi]
10004f56:	xor    BYTE PTR [ecx],0xbf
10004f59:	mov    dl,ah
10004f5b:	cmp    dl,BYTE PTR [ecx]
10004f5d:	push   eax
10004f5e:	adc    eax,0x74a5944c
10004f63:	sti    
10004f64:	sub    edx,esi
10004f66:	retf   
10004f67:	ins    DWORD PTR es:[edi],dx
10004f68:	mov    ds:0xbb6aa8da,al
10004f6d:	out    dx,al
10004f6e:	jle    0x10004f12
10004f70:	sub    eax,0x4e95f6f
10004f75:	inc    ecx
10004f76:	sbb    DWORD PTR [edi],esp
10004f78:	loop   0x10004f4f
10004f7a:	jne    0x10004eff
10004f7c:	and    al,0xf9
10004f7e:	mov    bl,0x16
10004f80:	xchg   dh,dl
10004f82:	xchg   ecx,eax
10004f83:	add    DWORD PTR [eax],edx
10004f85:	ds cld 
10004f87:	pop    edx
10004f88:	add    esi,DWORD PTR [ebx]
10004f8a:	sbb    esi,edx
10004f8c:	inc    eax
10004f8d:	bound  edx,QWORD PTR [eax]
10004f8f:	mov    ebx,0xa8683300
10004f94:	mov    DWORD PTR [esi+0x13440a9c],ebp
10004f9a:	(bad)
10004f9d:	mov    BYTE PTR [eax+0x3b],al
10004fa0:	fwait
10004fa1:	pop    esp
10004fa2:	mov    cs,WORD PTR [edx+0x8]
10004fa5:	push   esp
10004fa6:	paddusb mm0,QWORD PTR [esi+0x13f9b67b]
10004fad:	adc    eax,0xe6830946
10004fb2:	push   0x5cfabf20
10004fb7:	adc    BYTE PTR [ebp-0x2d],ch
10004fba:	fdivr  QWORD PTR [ecx+edi*4]
10004fbd:	dec    eax
10004fbe:	fmul   DWORD PTR [ecx]
10004fc0:	imul   edx,DWORD PTR [edi],0x65
10004fc3:	inc    edx
10004fc4:	inc    esi
10004fc5:	add    al,0xd3
10004fc7:	push   ss
10004fc8:	xchg   ebx,eax
10004fc9:	and    eax,0x59d07589
10004fce:	jnp    0x10004fb2
10004fd0:	ins    DWORD PTR es:[edi],dx
10004fd1:	jg     0x10004fa4
10004fd3:	adc    BYTE PTR [ebp+0x204435a],dh
10004fd9:	inc    eax
10004fda:	sub    DWORD PTR [ebp+0x26],ebp
10004fdd:	call   0x5c0057a1
10004fe2:	or     ecx,edi
10004fe4:	push   ebp
10004fe5:	ja     0x10004fd0
10004fe7:	push   0x865015dc
10004fec:	pop    ecx
10004fed:	mov    BYTE PTR [eax],al
10004fef:	xor    esi,ecx
10004ff1:	add    eax,0x9d0216a0
10004ff6:	xchg   ecx,eax
10004ff7:	dec    ebx
10004ff8:	sti    
10004ff9:	sbb    BYTE PTR [ebp+eiz*2+0x416dc8e8],dh
10005000:	push   esp
10005001:	aad    0xc7
10005003:	cmp    ah,0xb1
10005006:	fbstp  TBYTE PTR [ecx]
10005008:	or     BYTE PTR [edi-0x70],dh
1000500b:	xchg   esi,eax
1000500c:	clc    
1000500d:	mov    dh,0xf7
1000500f:	ror    BYTE PTR [edx-0x175488f5],1
10005015:	test   BYTE PTR [ecx],ch
10005017:	mov    eax,ds:0x4e3542aa
1000501c:	ins    BYTE PTR es:[edi],dx
1000501d:	iret   
1000501e:	cmc    
1000501f:	add    esi,0xe6982b28
10005025:	push   DWORD PTR [ecx-0x3294053]
1000502b:	fist   WORD PTR [ebx]
1000502d:	cmc    
1000502e:	stc    
1000502f:	stos   BYTE PTR es:[edi],al
10005030:	jg     0x10005042
10005032:	rol    DWORD PTR [edi],1
10005034:	xchg   edx,eax
10005035:	inc    ebp
10005036:	mov    esp,DWORD PTR [edx]
10005038:	call   0xff807f38
1000503d:	arpl   WORD PTR [edx],bx
1000503f:	pop    esi
10005040:	jmp    0x10004fc3
10005042:	imul   ebx,DWORD PTR [esi-0x19],0x15
10005046:	or     al,0x60
10005048:	loope  0x1000507e
1000504a:	mov    eax,ds:0xe8987d38
1000504f:	mov    esp,0x3c508c2e
10005054:	mov    BYTE PTR [eax+ecx*4-0x3a],bh
10005058:	add    eax,0x2ebc2a63
1000505d:	adc    ebx,DWORD PTR ds:0x736e8c9c
10005063:	mov    bh,0x88
10005065:	adc    DWORD PTR [edi+eax*2+0x2c],ecx
10005069:	fcomi  st,st(3)
1000506b:	cmp    BYTE PTR [edx+ebp*1-0x2b3cb82e],0xe4
10005073:	aaa    
10005074:	or     DWORD PTR [ecx-0x7a359ec],edx
1000507a:	adc    ebp,ebp
1000507c:	pop    edx
1000507d:	mov    ah,0xd0
1000507f:	or     eax,0xb4b0db73
10005084:	dec    eax
10005085:	push   edx
10005086:	push   esi
10005087:	call   0x28b5:0x3ff9c97a
1000508e:	or     BYTE PTR [eax-0x7d0b3bfa],cl
10005094:	ja     0x100050b6
10005096:	sbb    DWORD PTR [edx-0x4b],0xffffffe8
1000509a:	mov    bh,0x0
1000509c:	or     bh,bl
1000509e:	pop    ss
1000509f:	jnp    0x100050f1
100050a1:	xsave  [eax+0x44379d79]
100050a8:	fs xchg ebp,eax
100050aa:	push   eax
100050ab:	test   al,0xc2
100050ad:	mov    edx,0x1697ed7c
100050b2:	adc    BYTE PTR [esi+0x60],0xe4
100050b6:	adc    DWORD PTR [eax],edx
100050b8:	and    BYTE PTR [eax+0x3],0xca
100050bc:	jp     0x10005073
100050be:	and    edx,DWORD PTR [edx-0x3bcbfd0]
100050c4:	jbe    0x10005121
100050c6:	push   ebp
100050c7:	push   es
100050c8:	and    al,0x4c
100050ca:	dec    eax
100050cb:	adc    edi,ecx
100050cd:	test   eax,0xc3af85f6
100050d2:	in     al,0xa7
100050d4:	add    al,0x2
100050d6:	push   edx
100050d7:	call   0xbb7f:0x5ad25370
100050de:	cmp    al,0xba
100050e0:	fisttp WORD PTR [ecx+0x294e9ecd]
100050e6:	and    BYTE PTR [ecx+0x1],bh
100050e9:	in     eax,dx
100050ea:	xor    edi,esp
100050ec:	or     edi,esi
100050ee:	sahf   
100050ef:	test   eax,0x4c56defa
100050f4:	iret   
100050f5:	pop    edx
100050f6:	fidiv  DWORD PTR [edi+0xf]
100050f9:	mov    al,ds:0x72aec0de
100050fe:	dec    ebp
100050ff:	sub    al,0x23
10005101:	clc    
10005102:	sbb    eax,0x42045906
10005107:	and    al,0x6d
10005109:	jg     0x10005164
1000510b:	enter  0xfd64,0x41
1000510f:	lds    ebp,FWORD PTR [ebx+0x44]
10005112:	add    BYTE PTR [eax+0xf8a4145],ah
10005118:	repz daa 
1000511a:	cs push es
1000511c:	lods   eax,DWORD PTR ds:[esi]
1000511d:	enter  0x1eac,0x4d
10005121:	int3   
10005122:	or     eax,DWORD PTR [eax]
10005124:	int3   
10005125:	mov    ds:0x8200215f,eax
1000512a:	or     BYTE PTR [ebx+0x1f],ch
1000512d:	cmp    esp,edi
1000512f:	mul    ah
10005131:	aaa    
10005132:	or     DWORD PTR [ecx+0x107d4e1c],eax
10005138:	lods   eax,DWORD PTR ds:[esi]
10005139:	dec    edi
1000513a:	ja     0x100051a7
1000513c:	push   esi
1000513d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000513e:	pop    ss
1000513f:	icebp  
10005140:	es cdq 
10005142:	inc    eax
10005143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10005144:	shl    DWORD PTR [esp+ecx*8-0x16],1
10005148:	fldenv [esi]
1000514a:	fcos   
1000514c:	pcmpeqd mm0,QWORD PTR [edi*2-0x48f2374]
10005154:	int3   
10005155:	adc    eax,0xfffffff7
10005158:	dec    edx
10005159:	xlat   BYTE PTR ds:[ebx]
1000515a:	call   0x10806c46
1000515f:	sbb    BYTE PTR [edx+0x43],0xdc
10005163:	das    
10005164:	jmp    0x6744:0x356aa2
1000516b:	cwde   
1000516c:	xchg   edx,eax
1000516d:	frstor [eax-0x23bf7fcd]
10005173:	(bad)  
10005175:	repnz sub cl,BYTE PTR [esi+edx*2]
10005179:	in     al,0x52
1000517b:	je     0x100051bb
1000517d:	dec    edx
1000517e:	push   cs
1000517f:	fsub   DWORD PTR [eax]
10005181:	fs or  al,0xe9
10005184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10005185:	push   es
10005186:	mov    bh,BYTE PTR [esp+esi*1-0x57]
1000518a:	bound  edx,QWORD PTR [esi]
1000518c:	pop    eax
1000518d:	fsub   st,st(5)
1000518f:	dec    ecx
10005190:	inc    edi
10005191:	jle    0x100051d6
10005193:	fnsave [ecx+0x223e77f6]
10005199:	xchg   esi,eax
1000519a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000519b:	xchg   ebp,eax
1000519c:	dec    esi
1000519d:	xlat   BYTE PTR ds:[ebx]
1000519e:	xchg   DWORD PTR [esi+0x42],edx
100051a1:	nop
100051a2:	sub    al,0xbb
100051a4:	xor    dh,BYTE PTR [edx]
100051a6:	leave  
100051a7:	mov    bl,0xb4
100051a9:	dec    ebp
100051aa:	fwait
100051ab:	hlt    
100051ac:	std    
100051ad:	jmp    DWORD PTR [eax-0x1]
100051b0:	fist   WORD PTR [ebx]
100051b2:	lock sbb DWORD PTR [esi],ecx
100051b5:	pop    ds
100051b6:	pop    esp
100051b7:	hlt    
100051b8:	adc    ch,0x32
100051bb:	shr    eax,cl
100051bd:	dec    edi
100051be:	lea    edi,[esi+0x2f0e014f]
100051c4:	sti    
100051c5:	mov    edi,0xa689ac9b
100051ca:	lock or BYTE PTR [eax-0x5a],ch
100051ce:	add    BYTE PTR [ebp+0x3c2cc138],bl
100051d4:	add    DWORD PTR [ecx-0x5218fbc4],edi
100051da:	or     ebx,DWORD PTR [ebx+0x6f]
100051dd:	and    BYTE PTR [ebp+ebx*1+0xe],bh
100051e1:	xchg   ebx,eax
100051e2:	ret    0x1505
100051e5:	fisttp WORD PTR ds:0x91898502
100051eb:	mov    WORD PTR [edx+0x358b8a44],gs
100051f1:	inc    esi
100051f2:	jg     0x10005198
100051f4:	jg     0x10005252
100051f6:	aam    0x96
100051f8:	cld    
100051f9:	nop
100051fa:	scas   al,BYTE PTR es:[edi]
100051fb:	gs inc ebp
100051fd:	push   esp
100051fe:	sub    BYTE PTR [ecx+0x38],ch
10005201:	lea    ecx,[esi+0x17a456d8]
10005207:	jmp    0xda81:0x41f39b4b
1000520e:	sti    
1000520f:	les    ebp,FWORD PTR [bx+di+0x43]
10005213:	mov    al,ds:0xd681e3e1
10005218:	xchg   ebp,eax
10005219:	mov    ds:0xdf41b343,al
1000521e:	ja     0x10005221
10005220:	(bad)  
10005221:	idiv   DWORD PTR [edi+0xd17ba1d]
10005227:	xor    DWORD PTR [edx],ebx
10005229:	mov    edx,eax
1000522b:	imul   ebx,DWORD PTR [eax+ecx*1+0x16935a0d],0x3445cf2a
10005236:	pushf  
10005237:	sbb    cl,bl
10005239:	repnz mov ch,0xaa
1000523c:	jmp    0x10005293
1000523e:	icebp  
1000523f:	mov    dh,0x50
10005241:	xchg   esi,eax
10005242:	inc    ebx
10005243:	inc    ebp
10005244:	push   0xf8b4a3e
10005249:	repnz sub dl,bl
1000524c:	jmp    FWORD PTR [ebx]
1000524e:	repnz and al,0xda
10005251:	es push esp
10005253:	xchg   ecx,eax
10005254:	aas    
10005255:	pop    esi
10005256:	outs   dx,BYTE PTR ds:[esi]
10005257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005258:	fwait
10005259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000525a:	jb     0x100052d0
1000525c:	std    
1000525d:	adc    al,BYTE PTR [bp+si+0x284c]
10005262:	mov    al,ds:0x8a2b2429
10005267:	fldcw  WORD PTR [edi+edi*8-0x7b]
1000526b:	iret   
1000526c:	sbb    DWORD PTR [eax],esp
1000526e:	jmp    0x3641:0xee21b540
10005275:	mov    ds:0xbe7e8b4d,eax
1000527a:	or     DWORD PTR [eax],ecx
1000527c:	add    al,bh
1000527e:	ror    BYTE PTR [edi],1
10005280:	data16 jmp 0x10005205
10005283:	jecxz  0x100052a6
10005285:	push   ecx
10005286:	xchg   ebx,eax
10005287:	or     BYTE PTR ds:0x8a5ef3e,bl
1000528d:	and    al,0x11
1000528f:	xor    BYTE PTR [eax-0x68],0xaa
10005293:	sti    
10005294:	adc    esi,DWORD PTR [edx+0x56]
10005297:	pop    ebx
10005298:	mov    ?,WORD PTR [esi]
1000529a:	add    DWORD PTR [eax+0x64],0xffffffbe
1000529e:	nop
1000529f:	lock mov ch,0x60
100052a2:	cli    
100052a3:	pop    ss
100052a4:	jb     0x100052e9
100052a6:	jmp    0xc0fe9526
100052ab:	jmp    0x1000531c
100052ad:	inc    ecx
100052ae:	ss adc ebp,ecx
100052b1:	test   eax,0x4eb3c500
100052b6:	mov    ah,0xf8
100052b8:	xchg   edi,eax
100052b9:	test   BYTE PTR [edx-0x4a],bl
100052bc:	imul   edx,DWORD PTR [ebp-0x12],0x64c2707f
100052c3:	ror    edi,cl
100052c5:	ficomp DWORD PTR [esi]
100052c7:	sub    BYTE PTR [eax+0x5e1fa89],0xef
100052ce:	xlat   BYTE PTR ds:[ebx]
100052cf:	inc    esp
100052d0:	lea    ebx,[ecx-0x2840bf75]
100052d6:	add    BYTE PTR [eax+eax*1],al
100052d9:	loope  0x100052e6
100052db:	fsubr  QWORD PTR [ecx]
100052dd:	stos   BYTE PTR es:[edi],al
100052de:	cmp    BYTE PTR [esi-0x10],0x69
100052e2:	inc    esp
100052e3:	and    cl,cl
100052e5:	cmp    DWORD PTR [eax+0x2f],esp
100052e8:	add    al,0x3a
100052ea:	xor    DWORD PTR [eax-0x55],ecx
100052ed:	retf   
100052ee:	(bad)  
100052ef:	xor    ah,BYTE PTR [edx+eax*4]
100052f2:	xchg   ecx,eax
100052f3:	or     ecx,DWORD PTR [edi]
100052f5:	neg    BYTE PTR [edi+0x5508ffce]
100052fb:	and    al,0x13
100052fd:	cdq    
100052fe:	push   0x18
10005300:	adc    al,0xe7
10005302:	imul   ecx,ecx,0xe8a9d54f
10005308:	aas    
10005309:	push   ebx
1000530a:	pop    eax
1000530b:	call   0x181d:0xec0bb73e
10005312:	loop   0x10005367
10005314:	add    dl,ch
10005316:	cmp    eax,0x55780600
1000531b:	mov    cl,0x3c
1000531d:	mov    ebp,0xf50bdde0
10005322:	or     dh,cl
10005324:	or     al,0x3
10005326:	stc    
10005327:	cmp    eax,0xbf13cf00
1000532c:	push   ss
1000532d:	retf   
1000532e:	jle    0x10005324
10005330:	xchg   BYTE PTR [edi+ebx*1+0x3a],ch
10005334:	and    eax,0x93ce4902
10005339:	or     BYTE PTR [ecx+0x38],al
1000533c:	dec    esp
1000533d:	test   DWORD PTR [eax],0x97527092
10005343:	aas    
10005344:	fsub   QWORD PTR [esi]
10005346:	jb     0x100053a6
10005348:	ins    DWORD PTR es:[edi],dx
10005349:	dec    edi
1000534a:	shl    al,1
1000534c:	dec    edx
1000534e:	xchg   ah,al
10005350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10005351:	adc    BYTE PTR [eax],ah
10005353:	retf   0x7a4b
10005356:	adc    DWORD PTR [esi],0x22
10005359:	xchg   ecx,eax
1000535a:	xchg   ah,dh
1000535c:	push   esp
1000535d:	and    dl,0x39
10005360:	ja     0x100053cf
10005362:	std    
10005363:	mov    bl,0xa2
10005365:	pop    edx
10005366:	add    dh,bh
10005368:	aas    
10005369:	mov    dl,0xcb
1000536b:	push   esp
1000536c:	cmc    
1000536d:	popf   
1000536e:	pop    ds
1000536f:	in     eax,dx
10005370:	scas   al,BYTE PTR es:[edi]
10005371:	fimul  WORD PTR [ecx]
10005373:	jp     0x10005359
10005375:	sub    al,BYTE PTR fs:[ebx+eax*4]
10005379:	adc    BYTE PTR [eax],al
1000537b:	mov    cl,0x5c
1000537d:	adc    edi,DWORD PTR [edi]
1000537f:	adc    cl,bl
10005381:	bound  edi,QWORD PTR [esi]
10005383:	sbb    BYTE PTR ss:[eax],ch
10005386:	stos   DWORD PTR es:[edi],eax
10005387:	nop
10005388:	xchg   ebp,eax
10005389:	or     al,ch
1000538b:	mov    edx,0xaa042550
10005390:	shl    DWORD PTR [ecx+0x43],0x6a
10005394:	adc    eax,0x9253f98c
10005399:	int    0x9a
1000539b:	clc    
1000539c:	sub    dh,BYTE PTR [edx+0x52]
1000539f:	jne    0x100053cc
100053a1:	fisub  DWORD PTR [ebx+0x71]
100053a4:	iret   
100053a5:	icebp  
100053a6:	and    al,0x94
100053a8:	add    BYTE PTR [ecx+0x65],bl
100053ab:	in     al,dx
100053ac:	outs   dx,BYTE PTR ds:[esi]
100053ad:	clc    
100053ae:	xchg   ebx,eax
100053af:	jmp    0x46c8c607
100053b4:	pop    ebx
100053b5:	pop    ss
100053b6:	out    dx,al
100053b7:	aas    
100053b8:	add    al,0x3
100053ba:	add    al,0xf8
100053bc:	imul   edi,DWORD PTR [edi-0x17e082d0],0x7
100053c3:	xchg   ecx,eax
100053c4:	sub    DWORD PTR [esi],eax
100053c6:	bnd jnp 0x100053c9
100053c9:	jnp    0x10005432
100053cb:	mov    ebp,0x3a8c4f9f
100053d0:	or     al,0x2
100053d2:	xchg   esi,eax
100053d3:	outs   dx,DWORD PTR ds:[esi]
100053d4:	not    ecx
100053d6:	icebp  
100053d7:	mov    cl,0xdd
100053d9:	and    DWORD PTR [eax],0xa032a11e
100053df:	sub    DWORD PTR [edi],esp
100053e1:	sbb    al,0x7
100053e3:	je     0x10005429
100053e5:	and    ah,bh
100053e7:	and    ah,0x2e
100053ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100053eb:	push   esp
100053ec:	mov    ebp,0xe422c7db
100053f1:	adc    ebx,DWORD PTR [ebp-0xe282f06]
100053f7:	out    dx,eax
100053f8:	out    dx,al
100053f9:	retf   
100053fa:	jmp    0x81ca2602
100053ff:	repnz sbb BYTE PTR [ebx-0x640d9b3e],ah
10005406:	inc    esp
10005407:	dec    eax
10005408:	and    eax,0xb15b8a30
1000540d:	adc    al,BYTE PTR [edx]
1000540f:	mov    eax,ds:0xb76b0cbe
10005414:	out    dx,al
10005415:	pop    ecx
10005416:	fdivr  DWORD PTR [edi+eiz*4]
10005419:	int3   
1000541a:	sub    DWORD PTR [esi],eax
1000541c:	jnp    0x10005415
1000541e:	pop    ds
1000541f:	sub    BYTE PTR [eax-0x47045706],0x1b
10005426:	jp     0x1000545b
10005428:	xchg   ecx,eax
10005429:	pop    ecx
1000542a:	sub    edi,ebx
1000542c:	in     eax,dx
1000542d:	add    DWORD PTR [eax],ecx
1000542f:	add    dl,ah
10005431:	lods   al,BYTE PTR ds:[esi]
10005432:	mov    edi,0xf86effbe
10005437:	ret    0x7e69
1000543a:	sub    eax,0x9a06b098
1000543f:	icebp  
10005440:	sub    eax,edi
10005442:	or     edx,DWORD PTR [ecx]
10005444:	cli    
10005445:	jb     0x100053d0
10005447:	sub    DWORD PTR [ebp+0x4c2c5d2a],edi
1000544d:	and    dh,ah
1000544f:	adc    eax,0xe335e950
10005454:	fwait
10005455:	test   BYTE PTR [ecx],dh
10005457:	scas   eax,DWORD PTR es:[edi]
10005458:	shl    edx,0x4a
1000545b:	loope  0x1000547a
1000545d:	mov    edx,0xc284f2a9
10005462:	mov    ah,0xeb
10005464:	or     BYTE PTR [esi+0x26fcc6bc],al
1000546a:	repnz imul edi,DWORD PTR [edx],0xffffffcb
1000546e:	dec    edx
1000546f:	or     BYTE PTR [eax+0x53036231],cl
10005475:	cli    
10005476:	and    al,0xe5
10005478:	and    eax,0xfb8d3bad
1000547d:	iret   
1000547e:	add    BYTE PTR [edi-0x37],bh
10005481:	pop    ss
10005482:	jae    0x100054cf
10005484:	dec    BYTE PTR [edi+0x61]
10005487:	jle    0x100054c1
10005489:	cdq    
1000548a:	pusha  
1000548b:	pusha  
1000548c:	mov    edi,0x3f01e809
10005491:	not    DWORD PTR [edi-0x2cef407d]
10005497:	test   DWORD PTR [eax],ecx
10005499:	add    BYTE PTR [eax+0x45409108],al
1000549f:	jbe    0x100054b6
100054a1:	icebp  
100054a2:	popa   
100054a3:	or     dl,BYTE PTR [ebx]
100054a5:	mov    bh,cl
100054a7:	retf   
100054a8:	or     DWORD PTR [eax+0x5500a1b9],ebx
100054ae:	mov    esi,0x7fe15c9a
100054b3:	cli    
100054b4:	mov    ah,BYTE PTR [edx+esi*8]
100054b7:	pop    edx
100054b8:	aaa    
100054b9:	xor    BYTE PTR [ebp+0x7e],bh
100054bc:	cmp    esi,edx
100054be:	or     ecx,DWORD PTR ds:0x537389d1
100054c4:	jl     0x100054ae
100054c6:	fmul   st(6),st
100054c8:	cli    
100054c9:	imul   edx,DWORD PTR [edx],0x65
100054cc:	inc    ecx
100054cd:	sub    eax,0x813fcbd3
100054d2:	ja     0x100054ed
100054d4:	jle    0x100054ef
100054d6:	sub    BYTE PTR [edi+eiz*8],dl
100054d9:	sub    eax,0x67fbf98a
100054de:	jmp    0x4262:0x88b509df
100054e5:	data16 sbb al,cl
100054e8:	add    BYTE PTR cs:[eax],al
100054eb:	push   ecx
100054ec:	scas   eax,DWORD PTR es:[edi]
100054ed:	mov    ebp,edi
100054ef:	mov    DWORD PTR [ebp-0x2f],eax
100054f2:	push   0xc04498c7
100054f7:	inc    edx
100054f8:	adc    BYTE PTR [edx],ah
100054fa:	and    ah,BYTE PTR [eax-0x4a2bcfe5]
10005500:	sub    cl,BYTE PTR [esp+edx*1+0x50fea109]
10005507:	and    al,0xd4
10005509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000550a:	pop    ss
1000550b:	jb     0x100054fe
1000550d:	popa   
1000550e:	jp     0x10005563
10005510:	test   BYTE PTR [edi+0x5a22a81a],ah
10005516:	mov    eax,0x351c304d
1000551b:	gs fs dec ecx
1000551e:	(bad)  
1000551f:	lock jge 0x1000557a
10005522:	adc    DWORD PTR ds:0x6537b8e5,edi
10005528:	jmp    0x10005533
1000552a:	popf   
1000552b:	or     BYTE PTR [eax],bl
1000552d:	pop    esi
1000552e:	dec    BYTE PTR [ecx-0x7fe7fcb4]
10005534:	gs mov edi,0xcd1ff1f4
1000553a:	std    
1000553b:	or     cl,dh
1000553d:	mov    edi,0xc13da80
10005542:	retf   0x1003
10005545:	xor    ecx,DWORD PTR [ebx+0x45fc37fe]
1000554b:	jg     0x1000556e
1000554d:	cmp    dl,BYTE PTR [esi]
1000554f:	xor    eax,0xa73e1022
10005554:	mov    eax,0x4f6f3ad0
10005559:	or     DWORD PTR [eax+0x70ebbabc],ebp
1000555f:	cwde   
10005560:	fsub   QWORD PTR cs:[esi+0x60]
10005564:	mov    ch,0x45
10005566:	and    cl,BYTE PTR [ecx-0x6]
10005569:	inc    eax
1000556a:	rcl    BYTE PTR [edx+0x219ba47e],0xbd
10005571:	xchg   ebp,eax
10005572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005573:	in     eax,0x64
10005575:	dec    ebp
10005576:	jle    0x10005561
10005578:	jle    0x1000559b
1000557a:	add    eax,0xfe81095b
1000557f:	mov    esp,0x83afeb6b
10005584:	ins    DWORD PTR es:[edi],dx
10005585:	mov    dh,0xc8
10005587:	pushf  
10005588:	sahf   
10005589:	cwde   
1000558a:	add    ecx,eax
1000558c:	repz jle 0x100055f8
1000558f:	cmc    
10005590:	pop    edi
10005591:	aam    0x5
10005593:	jl     0x100055f5
10005595:	out    0x43,al
10005597:	aas    
10005598:	cwde   
10005599:	cmp    eax,0xecceab04
1000559e:	push   ds
1000559f:	add    ebx,ecx
100055a1:	add    eax,0x7ce78000
100055a6:	je     0x10005587
100055a8:	not    DWORD PTR [ecx+0x15]
100055ab:	stos   DWORD PTR es:[edi],eax
100055ac:	cmp    ah,BYTE PTR [ecx]
100055ae:	rcl    ecx,0x52
100055b1:	add    al,0xb4
100055b3:	out    0xd2,eax
100055b5:	xchg   esp,eax
100055b6:	rol    BYTE PTR [esi+0x8],0x6c
100055ba:	lds    eax,FWORD PTR [eax-0x72]
100055bd:	jmp    0x100055b5
100055bf:	mov    ds:0x6541382d,eax
100055c4:	cmp    cl,BYTE PTR [edi]
100055c6:	and    al,0xcd
100055c8:	daa    
100055c9:	adc    esi,edx
100055cb:	jmp    0x100055bb
100055cd:	sub    edx,DWORD PTR [eax*2+0x2401d39d]
100055d4:	adc    ah,BYTE PTR [edi+0x33]
100055d7:	or     DWORD PTR [esi+0x16],ecx
100055da:	or     BYTE PTR [eax],cl
100055dc:	push   ds
100055dd:	pop    ecx
100055de:	add    BYTE PTR [esi+ebx*8],ah
100055e1:	std    
100055e2:	ud1    edi,edi
100055e5:	(bad)  
100055e6:	leave  
100055e7:	(bad)  
100055e8:	bound  ecx,QWORD PTR [ebp-0x4]
100055eb:	adc    BYTE PTR [ebp+0x20],bh
100055ee:	jle    0x10005570
100055f0:	cmp    DWORD PTR [ecx+0x0],0xeaa07f3f
100055f7:	stc    
100055f8:	or     al,0x3f
100055fa:	pop    ss
100055fb:	mov    ebp,DWORD PTR [ebp+0x44ac8075]
10005601:	and    BYTE PTR [esi+ecx*4+0x48],dl
10005605:	and    al,BYTE PTR [ecx+eiz*8]
10005608:	xor    BYTE PTR [ebp+0x78],bl
1000560b:	xchg   esi,eax
1000560c:	pop    DWORD PTR [ebx-0x1edeccd4]
10005612:	adc    edi,DWORD PTR [ebp+0x51c50424]
10005618:	cs push edi
1000561a:	idiv   BYTE PTR [esi]
1000561c:	xchg   ebx,eax
1000561d:	xchg   edx,eax
1000561e:	pop    edi
1000561f:	jno    0x10005650
10005621:	inc    ecx
10005622:	pop    edx
10005623:	adc    eax,DWORD PTR [ecx]
10005625:	mov    ebx,0x72ca0319
1000562a:	push   ebx
1000562b:	ds xor al,0xdb
1000562e:	ins    BYTE PTR es:[edi],dx
1000562f:	les    ecx,FWORD PTR [edx-0x6bd966c2]
10005635:	mov    cs,WORD PTR [ecx-0x1f]
10005638:	ficomp WORD PTR [edi+edi*1-0x28b2089]
1000563f:	sub    edx,DWORD PTR [eax+0x3f]
10005642:	mov    eax,0x1060c5cc
10005647:	mov    ebx,0x5af3ed00
1000564c:	pop    ebp
1000564d:	jl     0x1000562c
1000564f:	lahf   
10005650:	rep stos DWORD PTR es:[edi],eax
10005652:	mov    cl,0x58
10005654:	add    DWORD PTR [eax+0x77],ebp
10005657:	pop    es
10005658:	fisubr DWORD PTR [ecx-0x78]
1000565b:	jae    0x1000567f
1000565d:	popf   
1000565e:	xchg   ebp,eax
1000565f:	adc    al,bl
10005661:	mov    al,BYTE PTR [ecx]
10005663:	adc    eax,0xa493f69f
10005668:	loopne 0x10005642
1000566a:	mov    edx,0x2c8ad241
1000566f:	inc    ebp
10005670:	lds    esi,FWORD PTR [edx+0x6df93d4c]
10005676:	retf   0xf456
10005679:	inc    ecx
1000567a:	inc    edx
1000567b:	ret    0x8ac7
1000567e:	xor    cl,dl
10005680:	ret    
10005681:	push   esp
10005682:	addr16 push ss
10005684:	and    BYTE PTR [edi],dl
10005686:	inc    edx
10005688:	icebp  
10005689:	mov    eax,ds:0xc830b063
1000568e:	add    BYTE PTR [edx+edi*8],ch
10005691:	xchg   ebp,eax
10005692:	sbb    edi,DWORD PTR [esi-0x6ea00f86]
10005698:	pusha  
10005699:	mov    ah,0x74
1000569b:	mov    eax,DWORD PTR [ecx+0x4d]
1000569e:	add    DWORD PTR [eax+eax*1],eax
100056a1:	in     al,dx
100056a2:	jp     0x1000564c
100056a4:	(bad)  
100056a5:	idiv   esi
100056a7:	mov    ds:0x741fa9a8,al
100056ac:	xor    BYTE PTR [eax+0x10],bh
100056af:	pop    ds
100056b0:	pop    ebx
100056b1:	fs jp  0x1000565e
100056b4:	xchg   esi,eax
100056b5:	into   
100056b6:	mov    ch,0x56
100056b8:	or     dl,al
100056ba:	popa   
100056bb:	mov    edx,0x91eacf0
100056c0:	pop    ecx
100056c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100056c2:	dec    esp
100056c3:	je     0x10005696
100056c5:	or     DWORD PTR [edi-0x3e5147da],esi
100056cb:	cmp    dh,BYTE PTR [ecx-0x6f]
100056ce:	lods   eax,DWORD PTR ds:[esi]
100056cf:	mov    esi,0x8ee80bda
100056d4:	cld    
100056d5:	mov    eax,ds:0x1d39d464
100056da:	mov    al,ds:0xb0a92e86
100056df:	dec    ecx
100056e0:	xchg   esp,eax
100056e1:	mov    dl,0x6c
100056e3:	or     ch,BYTE PTR [edx+0x2020fe7d]
100056e9:	loop   0x100056ec
100056eb:	inc    esp
100056ec:	ja     0x100056f1
100056ee:	inc    esp
100056ef:	push   ebp
100056f0:	mov    al,ds:0x97ff7021
100056f5:	jg     0x100056aa
100056f7:	mov    eax,0x53e76680
100056fc:	mov    ebx,cr6
100056ff:	or     al,0xee
10005701:	dec    edi
10005702:	add    DWORD PTR [ecx],0xffffffe2
10005705:	pushf  
10005706:	fwait
10005707:	pop    ds
10005708:	mov    eax,0xed609e13
1000570d:	lahf   
1000570e:	or     BYTE PTR [ebx-0x39],ch
10005711:	enter  0x84e7,0xc5
10005715:	dec    eax
10005716:	inc    eax
10005717:	jl     0x10005744
10005719:	and    DWORD PTR [eax],esi
1000571b:	xchg   ecx,eax
1000571c:	sahf   
1000571d:	mov    esp,0x643e2e83
10005722:	jns    0x10005701
10005724:	adc    al,0x98
10005726:	adc    BYTE PTR [eax-0x76059d93],0xeb
1000572d:	dec    esp
1000572e:	mov    esp,0x3adb1fda
10005733:	xchg   ebp,eax
10005734:	outs   dx,BYTE PTR ds:[esi]
10005735:	mov    esi,0xfd4d678b
1000573a:	mov    esp,0xd10a1c40
1000573f:	shl    esi,1
10005741:	dec    ecx
10005742:	or     BYTE PTR [edx-0x15],ah
10005745:	das    
10005746:	push   ss
10005747:	scas   eax,DWORD PTR es:[edi]
10005748:	pop    edx
10005749:	cld    
1000574a:	or     esi,esi
1000574c:	jmp    DWORD PTR [edi-0x43]
1000574f:	(bad)  
10005750:	mov    eax,ds:0xb01bef45
10005755:	pop    ds
10005756:	sub    eax,0x6b606099
1000575b:	add    cl,al
1000575d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000575e:	cs jo  0x100056e8
10005761:	mov    edi,0x15d0f360
10005766:	imul   esp,esp,0x29c54e71
1000576c:	scas   al,BYTE PTR es:[edi]
1000576d:	add    esp,DWORD PTR [ecx]
1000576f:	adc    BYTE PTR [edx+0x1a],dh
10005772:	aad    0x40
10005774:	leave  
10005775:	jmp    0x6d20:0xb2cb28d1
1000577c:	push   esi
1000577d:	pop    ds
1000577e:	xchg   edx,eax
1000577f:	les    edi,FWORD PTR [edx-0x55]
10005782:	das    
10005783:	xchg   edx,eax
10005784:	mov    esi,0x89dca44c
10005789:	or     BYTE PTR ds:0x758f3ca5,al
1000578f:	mov    ebp,0x92920c49
10005794:	mov    edi,0x5c25da1b
10005799:	cld    
1000579a:	imul   ecx,ebp,0xffffffff
1000579d:	xchg   edi,eax
1000579e:	jle    0x1000581e
100057a0:	pop    edi
100057a1:	cmc    
100057a2:	mov    esi,DWORD PTR [eax]
100057a4:	ja     0x10005812
100057a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100057a7:	sbb    al,bl
100057a9:	cs inc eax
100057ab:	jmp    0x100057d5
100057ad:	popw   ss
100057af:	mov    esp,0xbd877b8f
100057b4:	ret    
100057b5:	mov    cl,0x58
100057b7:	jmp    0x974d:0xa02ebc3c
100057be:	hlt    
100057bf:	pop    edx
100057c0:	call   0x6035188a
100057c5:	xchg   edx,eax
100057c6:	jle    0x1000577c
100057c8:	mov    al,0x24
100057ca:	xchg   edi,eax
100057cb:	mov    dh,0x72
100057cd:	dec    ebp
100057ce:	pop    esp
100057cf:	int3   
100057d0:	fst    st(7)
100057d2:	sub    eax,0x92e335f8
100057d7:	out    dx,eax
100057d8:	icebp  
100057d9:	jmp    0x100057a3
100057db:	dec    edi
100057dc:	je     0x1000581e
100057de:	mov    eax,0xb8876dd3
100057e3:	push   ebp
100057e4:	mov    edx,0x8712f9cc
100057e9:	imul   ebp,ebx,0x1796082f
100057ef:	inc    DWORD PTR [edx+0x2]
100057f2:	and    DWORD PTR [edx],ebx
100057f4:	add    ah,BYTE PTR [edx-0x4330e5df]
100057fa:	fild   QWORD PTR gs:[edi]
100057fd:	inc    eax
100057fe:	mov    ebx,0x20c33dff
10005803:	cmp    eax,0xdb100000
10005808:	scas   al,BYTE PTR es:[edi]
10005809:	fcomip st,st(3)
1000580b:	jne    0x100057e1
1000580d:	inc    esp
1000580e:	xor    esi,esi
10005810:	xlat   BYTE PTR ds:[ebx]
10005811:	sub    BYTE PTR [eax-0x4fc5df8d],0xba
10005818:	es ds adc eax,0x930312d6
1000581f:	and    BYTE PTR [ebp+edi*2-0x2d8d25c4],ah
10005826:	test   al,0x9
10005828:	aad    0x59
1000582a:	jle    0x10005828
1000582c:	cwde   
1000582d:	pusha  
1000582e:	jne    0x1000586f
10005830:	cld    
10005831:	mov    cl,0x7f
10005833:	mov    ch,0xd7
10005835:	xchg   esi,eax
10005836:	cld    
10005837:	les    esi,FWORD PTR [ebx-0x301dfc5d]
1000583d:	cmp    BYTE PTR es:[ebp+0x56bd2693],dl
10005844:	test   ecx,ebx
10005846:	(bad)  
10005847:	jmp    0xb9fdc58c
1000584c:	fdivp  st(4),st
1000584e:	add    ebx,edx
10005850:	(bad)  
10005851:	fistp  WORD PTR [edi+0x4bb31af1]
10005857:	(bad)  
10005858:	in     eax,dx
10005859:	shr    BYTE PTR [ebx-0x2fcfb08f],1
1000585f:	xor    eax,0xf753e080
10005864:	jno    0x10005821
10005866:	ja     0x10005810
10005868:	cmc    
10005869:	out    0x82,eax
1000586b:	adc    al,0xf
1000586d:	cmp    eax,0x481a1e7e
10005872:	fisttp QWORD PTR [eax]
10005874:	inc    ecx
10005875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005876:	and    eax,0x82cb854
1000587b:	les    ecx,FWORD PTR [edi+0x5b]
1000587e:	daa    
1000587f:	in     eax,0x69
10005881:	and    al,0x5b
10005883:	enter  0xeebd,0x4a
10005887:	add    BYTE PTR [eax+0x26dda3b1],cl
1000588d:	push   esp
1000588e:	jns    0x10005891
10005890:	sbb    eax,0xfcbb4fab
10005895:	push   es
10005896:	adc    DWORD PTR [ecx-0x326780de],esi
1000589c:	or     BYTE PTR [ebp-0x63bc62b5],al
100058a2:	sbb    esi,DWORD PTR [ebp+0x43]
100058a5:	test   al,0x22
100058a7:	jp     0x10005829
100058a9:	xor    al,0xd6
100058ab:	aas    
100058ac:	mov    dh,0x3
100058ae:	add    BYTE PTR [eax-0x4d],bh
100058b1:	(bad)  
100058b2:	ror    BYTE PTR [edi+0x67f2f77],cl
100058b8:	popf   
100058b9:	push   cs
100058ba:	xchg   esi,eax
100058bb:	mov    ebp,0x90619e80
100058c0:	add    dl,BYTE PTR [eax]
100058c2:	inc    eax
100058c3:	sbb    al,0x9c
100058c5:	idiv   DWORD PTR [esi]
100058c7:	jmp    0x7090:0x9db3fa2f
100058ce:	lods   al,BYTE PTR ds:[esi]
100058cf:	out    0x5c,al
100058d1:	test   BYTE PTR [esi],0x54
100058d4:	imul   edx,DWORD PTR [ebp-0xf],0x1220c449
100058db:	pop    ss
100058dc:	adc    al,BYTE PTR ds:0x7f882052
100058e2:	inc    esp
100058e3:	cli    
100058e4:	clc    
100058e5:	fild   DWORD PTR [edx+0x40808add]
100058eb:	jnp    0x1000594e
100058ed:	dec    edi
100058ee:	adc    BYTE PTR [esi-0x80],bl
100058f1:	or     eax,0xfd5b2181
100058f6:	add    al,0x5e
100058f8:	xor    DWORD PTR [ebp+0x353e10a7],0xffffff90
100058ff:	lahf   
10005900:	jp     0x10005908
10005902:	inc    esi
10005903:	call   0x28b7c1c
10005908:	or     eax,ebp
1000590a:	lods   al,BYTE PTR ds:[esi]
1000590b:	jg     0x1000591d
1000590d:	pop    ds
1000590e:	dec    edx
1000590f:	pop    es
10005910:	fidivr WORD PTR [edx+ecx*4]
10005913:	mov    edx,0xe5886880
10005918:	nop
10005919:	sti    
1000591a:	scas   eax,DWORD PTR es:[edi]
1000591b:	jmp    0x17c0:0xc1089eb4
10005922:	add    DWORD PTR [ecx],eax
10005924:	mov    bl,ah
10005926:	outs   dx,BYTE PTR ds:[esi]
10005927:	fdivr  st(3),st
10005929:	dec    ebp
1000592a:	push   ecx
1000592b:	adc    ecx,DWORD PTR [esp+esi*1+0x14]
1000592f:	cmovle edx,edi
10005932:	adc    eax,0xf9501094
10005937:	ins    BYTE PTR es:[edi],dx
10005938:	ret    0xe174
1000593b:	ss pop eax
1000593e:	xor    al,0xf6
10005940:	dec    ebp
10005941:	stc    
10005942:	mov    WORD PTR [ebp-0x4e5ec07c],es
10005948:	shl    BYTE PTR [esi],cl
1000594a:	jge    0x1000599e
1000594c:	ror    DWORD PTR [eax-0x2a7101a6],0x4f
10005953:	cmp    BYTE PTR [ebp-0x50],dl
10005956:	jp     0x10005963
10005958:	push   ecx
10005959:	mov    edx,0xcf8414d1
1000595e:	(bad)  
1000595f:	cmc    
10005960:	iret   
10005961:	or     cl,BYTE PTR [ecx+0x5e]
10005964:	cld    
10005965:	and    DWORD PTR [edi-0x11a502],esi
1000596b:	and    DWORD PTR [edi-0x115d78f],edi
10005971:	mul    DWORD PTR [ebp-0x5]
10005974:	das    
10005975:	shl    BYTE PTR [eax+0x4df6803d],0xd6
1000597c:	sbb    ah,dl
1000597e:	push   esi
1000597f:	out    dx,eax
10005980:	nop
10005981:	(bad)  
10005983:	adc    bl,al
10005985:	sbb    BYTE PTR [edi],ah
10005987:	aam    0x71
10005989:	ss popa 
1000598b:	mov    edx,0xab3e2a70
10005990:	(bad)  
10005991:	mov    dh,0x2
10005993:	bound  ecx,QWORD PTR [ebp+0x28]
10005996:	dec    esp
10005997:	js     0x10005a0b
10005999:	inc    ecx
1000599a:	dec    edi
1000599b:	xor    eax,0xf370e896
100059a0:	or     bh,BYTE PTR [edi+0x3756fc81]
100059a6:	sbb    dh,cl
100059a8:	adc    edi,DWORD PTR [edx+0x5691d57]
100059ae:	sbb    eax,0x5508064c
100059b3:	test   BYTE PTR [ecx],ah
100059b5:	lahf   
100059b6:	ins    DWORD PTR es:[edi],dx
100059b7:	pushf  
100059b8:	push   cs
100059b9:	sub    eax,0x3fad6b32
100059be:	mov    cl,0xf8
100059c0:	pop    es
100059c1:	push   es
100059c2:	js     0x1000594b
100059c4:	sbb    dh,BYTE PTR [ebp-0x8cd80a5]
100059ca:	add    DWORD PTR [edi+ebx*1+0x76],eax
100059ce:	pop    edi
100059cf:	fdivr  QWORD PTR [edi+0x60]
100059d2:	lock add dl,BYTE PTR [eax]
100059d5:	inc    eax
100059d6:	cld    
100059d7:	repnz sbb edx,0x579cc47b
100059de:	adc    eax,0x91a7440
100059e3:	loop   0x10005a41
100059e5:	sbb    esp,DWORD PTR [edi]
100059e7:	pop    ecx
100059e8:	sbb    DWORD PTR ds:0x5d30a9c1,edx
100059ee:	js     0x1000599f
100059f0:	hlt    
100059f1:	cmp    BYTE PTR [edx-0x4a],dl
100059f4:	dec    esp
100059f5:	repnz xor cl,dl
100059f8:	inc    ebx
100059f9:	popa   
100059fa:	xor    DWORD PTR [edx+0x53],eax
100059fd:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
100059ff:	mov    BYTE PTR [edi],bl
10005a01:	std    
10005a02:	xor    al,0x89
10005a04:	lahf   
10005a05:	cld    
10005a06:	pop    ebp
10005a07:	sub    BYTE PTR [eax],0xf9
10005a0a:	in     eax,0x9b
10005a0c:	xor    BYTE PTR [ebx+ecx*1+0x48],bl
10005a10:	jno    0x10005a64
10005a12:	pop    edi
10005a13:	adc    bh,ah
10005a15:	inc    edx
10005a16:	mov    ss,WORD PTR [ebx+0x42]
10005a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005a1a:	sbb    BYTE PTR [esi+0x573c9232],al
10005a20:	fwait
10005a21:	mov    ecx,0x6d45107f
10005a26:	std    
10005a27:	icebp  
10005a28:	out    0xb9,al
10005a2a:	pop    eax
10005a2b:	lock push ecx
10005a2d:	imul   esp,eax,0xffffffee
10005a30:	xlat   BYTE PTR ds:[ebx]
10005a31:	jg     0x10005a24
10005a33:	mov    eax,ds:0xfd5ea0fb
10005a38:	out    dx,eax
10005a39:	test   eax,0x22c50c10
10005a3e:	and    BYTE PTR [eax],al
10005a40:	icebp  
10005a41:	(bad)  
10005a43:	mul    eax
10005a45:	cs pop edi
10005a47:	loopne 0x10005a37
10005a49:	loopne 0x10005a06
10005a4b:	add    DWORD PTR [ecx+0x14549e87],esi
10005a51:	sub    BYTE PTR [ecx],ah
10005a53:	mov    al,ds:0x6f4898f2
10005a58:	ins    BYTE PTR es:[edi],dx
10005a59:	jns    0x100059f2
10005a5b:	lahf   
10005a5c:	or     BYTE PTR [edx],al
10005a5e:	rcl    BYTE PTR [ebx-0x7c],cl
10005a61:	aad    0xbd
10005a63:	test   eax,0x9202f3a7
10005a68:	adc    BYTE PTR [edi],bh
10005a6a:	retf   
10005a6b:	stc    
10005a6c:	ds xchg ebp,eax
10005a6e:	daa    
10005a6f:	fdivr  QWORD PTR [ecx-0x2e]
10005a72:	std    
10005a73:	stos   DWORD PTR es:[edi],eax
10005a74:	into   
10005a75:	mov    bl,0xb8
10005a77:	out    dx,al
10005a78:	and    eax,0xc37f7354
10005a7d:	mov    edi,DWORD PTR [edi]
10005a7f:	pusha  
10005a80:	inc    eax
10005a81:	jecxz  0x10005aa4
10005a83:	outs   dx,DWORD PTR ds:[esi]
10005a84:	out    dx,al
10005a85:	out    dx,al
10005a86:	mov    ebp,0x4a200fb5
10005a8b:	(bad)  
10005a8c:	mov    esi,0xc302016d
10005a91:	loope  0x10005a94
10005a93:	mov    ah,0x6f
10005a95:	not    al
10005a97:	xor    bh,0x1e
10005a9a:	jg     0x10005a72
10005a9c:	lahf   
10005a9d:	mov    esi,eax
10005a9f:	push   esi
10005aa0:	div    DWORD PTR [eax+0x55]
10005aa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005aa4:	mov    ds,WORD PTR [ebx+ecx*2+0x7d]
10005aa8:	imul   esp,DWORD PTR [edx],0x8675b2bd
10005aae:	je     0x10005b19
10005ab0:	inc    eax
10005ab1:	xchg   esi,eax
10005ab2:	dec    ebx
10005ab3:	xchg   ecx,eax
10005ab4:	xor    ch,BYTE PTR [ecx]
10005ab6:	stc    
10005ab7:	test   eax,0xdf1cc1b4
10005abc:	(bad)  
10005abd:	loop   0x10005aea
10005abf:	retf   0xf54d
10005ac2:	in     eax,0x23
10005ac4:	cmp    DWORD PTR [edi+0x28],ecx
10005ac7:	pop    edx
10005ac8:	ds xchg edi,eax
10005aca:	mov    ebx,0x86ec9ac8
10005acf:	xchg   DWORD PTR [edx+0x3cf24e8b],esp
10005ad5:	xchg   ebx,eax
10005ad6:	lods   al,BYTE PTR ds:[esi]
10005ad7:	cld    
10005ad8:	imul   ebx,DWORD PTR [esi-0x4],0x61
10005adc:	and    BYTE PTR ds:[esi],dl
10005adf:	std    
10005ae0:	ret    0xdea3
10005ae3:	std    
10005ae4:	rcl    BYTE PTR [edi+0x3ff9a031],0x30
10005aeb:	sbb    al,0x2
10005aed:	add    BYTE PTR [esi+ebp*2-0x9a4148a],dh
10005af4:	cld    
10005af5:	cmp    DWORD PTR [edi+0xd5ec7e4],0x26
10005afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005afd:	add    al,0x69
10005aff:	scas   al,BYTE PTR es:[edi]
10005b00:	dec    ebp
10005b01:	pop    esi
10005b02:	sbb    DWORD PTR [esi+ebp*2],0x7edd341a
10005b09:	xchg   esp,eax
10005b0a:	test   DWORD PTR [edx+0x53],edx
10005b0d:	shl    DWORD PTR [esp+eiz*8],0xef
10005b11:	pushf  
10005b12:	inc    edi
10005b13:	mov    dh,0x19
10005b15:	xchg   ebp,eax
10005b16:	les    esi,FWORD PTR [ebp-0x20b6034c]
10005b1c:	pop    es
10005b1d:	mov    ah,ah
10005b1f:	jmp    0x10005ae5
10005b21:	inc    ebp
10005b22:	dec    eax
10005b23:	lods   eax,DWORD PTR ds:[esi]
10005b24:	and    DWORD PTR [eax+0x2a],edi
10005b27:	repnz push ebx
10005b29:	std    
10005b2a:	call   0x649e:0xeb648d35
10005b31:	out    dx,al
10005b32:	fistp  WORD PTR [edx-0x3]
10005b35:	outs   dx,DWORD PTR ds:[esi]
10005b36:	dec    esp
10005b37:	jns    0x10005b2e
10005b39:	cdq    
10005b3a:	and    eax,0x1f4436ff
10005b3f:	ss xor eax,0x8a9eff7
10005b45:	or     al,0x5a
10005b47:	add    BYTE PTR [edx+0x23],ah
10005b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005b4b:	pop    edx
10005b4c:	pop    ss
10005b4d:	pop    ds
10005b4e:	repz mov sp,0xe6e5
10005b53:	shr    cl,0xc4
10005b56:	retf   0x6dfc
10005b59:	pop    es
10005b5a:	stos   BYTE PTR es:[edi],al
10005b5b:	dec    edx
10005b5c:	mov    ds:0x110563ae,eax
10005b61:	bound  esp,QWORD PTR [eax+0x12]
10005b64:	test   BYTE PTR [esp+esi*4+0x474f2c99],ch
10005b6b:	inc    esi
10005b6c:	jns    0x10005bea
10005b6e:	test   al,0xd3
10005b70:	jne    0x10005bba
10005b72:	(bad)  
10005b74:	xchg   esi,eax
10005b75:	pusha  
10005b76:	fwait
10005b77:	ror    BYTE PTR [ecx-0xd8b81a3],0x86
10005b7e:	outs   dx,BYTE PTR ds:[esi]
10005b7f:	cmp    dl,dl
10005b81:	ins    DWORD PTR es:[edi],dx
10005b82:	cmp    dh,dl
10005b84:	push   ebx
10005b85:	std    
10005b86:	gs inc edx
10005b88:	call   0xe0d8:0x4f249267
10005b8f:	push   ebx
10005b90:	out    dx,eax
10005b91:	cld    
10005b92:	pop    es
10005b93:	imul   ecx,DWORD PTR [esi+edx*8-0x61],0x434cde01
10005b9b:	pop    esp
10005b9c:	jmp    ebp
10005b9e:	cmp    DWORD PTR [edi-0x7b],0x38
10005ba2:	stc    
10005ba3:	sti    
10005ba4:	mov    dh,0x0
10005ba6:	or     BYTE PTR [esi+ebx*2],cl
10005ba9:	add    BYTE PTR [edx],al
10005bab:	mov    ah,0x47
10005bad:	out    dx,eax
10005bae:	xchg   ebp,eax
10005baf:	lahf   
10005bb0:	cmp    eax,0xe73166f0
10005bb5:	pop    ss
10005bb6:	cmp    eax,DWORD PTR [eax+eax*2-0x6ea79f84]
10005bbd:	pushf  
10005bbe:	mov    eax,0x4888c326
10005bc3:	pop    ebx
10005bc4:	mov    ds:0xb184e527,al
10005bc9:	dec    esp
10005bca:	sbb    esp,edx
10005bcc:	push   ebx
10005bcd:	les    ecx,FWORD PTR ds:0x6c203e93
10005bd3:	repnz mov bh,0xfe
10005bd6:	bound  esp,QWORD PTR [ebp-0x59]
10005bd9:	fstp   QWORD PTR [ecx]
10005bdb:	push   eax
10005bdc:	in     al,0x8d
10005bde:	cld    
10005bdf:	lods   al,BYTE PTR ds:[esi]
10005be0:	cdq    
10005be1:	mov    esp,edi
10005be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10005be4:	loope  0x10005c15
10005be6:	bound  esp,QWORD PTR [edi]
10005be8:	xchg   BYTE PTR [ecx+ecx*1-0x1d],dh
10005bec:	fs push eax
10005bee:	fstp   TBYTE PTR [esi+0x29]
10005bf1:	lods   eax,DWORD PTR ds:[esi]
10005bf2:	mov    edi,0xf989e537
10005bf7:	call   0x3d9c:0x3f23e3b8
10005bfe:	test   BYTE PTR [eax],ch
10005c00:	icebp  
10005c01:	(bad)
10005c05:	in     al,0x86
10005c07:	aas    
10005c08:	dec    ebx
10005c0a:	test   DWORD PTR [edx-0x33],ebp
10005c0d:	pop    ss
10005c0e:	lahf   
10005c0f:	icebp  
10005c10:	push   cs
10005c11:	jp     0x10005ba0
10005c13:	into   
10005c14:	dec    eax
10005c15:	adc    BYTE PTR [eax+0x5a718ec7],dl
10005c1b:	nop
10005c1c:	es mov esp,ds
10005c1f:	iret   
10005c20:	xchg   esi,eax
10005c21:	pop    ebx
10005c22:	mov    dh,ch
10005c24:	pop    ds
10005c25:	(bad)  
10005c26:	mov    dh,0x2c
10005c28:	sbb    eax,0xa3b225f1
10005c2d:	imul   esp,ebp,0xb5b7a4f5
10005c33:	div    dl
10005c35:	push   esi
10005c36:	mov    ds:0x9f41d10d,eax
10005c3b:	mov    edi,DWORD PTR [eax-0x48]
10005c3e:	mov    BYTE PTR [ecx+eiz*1-0x5583dc06],ah
10005c45:	adc    DWORD PTR [edi-0x2e634a18],eax
10005c4b:	nop
10005c4c:	das    
10005c4d:	sub    ecx,eax
10005c4f:	mov    edi,0xe85c1ff5
10005c54:	lods   al,BYTE PTR ds:[esi]
10005c55:	aas    
10005c56:	out    dx,eax
10005c57:	pop    eax
10005c58:	inc    esi
10005c5a:	mov    WORD PTR [edi+0x5cffa5f0],?
10005c60:	js     0x10005c79
10005c62:	cmp    cl,BYTE PTR [edi]
10005c64:	fld    DWORD PTR [ebx-0x61]
10005c67:	pop    ss
10005c68:	inc    DWORD PTR [edx]
10005c6a:	or     al,0x83
10005c6c:	add    BYTE PTR [eax+ebp*2],al
10005c6f:	(bad)  
10005c71:	mov    bh,0xef
10005c73:	pop    esi
10005c74:	jp     0x10005c01
10005c76:	cwde   
10005c77:	repz jmp 0x10005c0b
10005c7a:	ror    BYTE PTR [eax],1
10005c7c:	sti    
10005c7d:	inc    ebx
10005c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005c7f:	fisttp QWORD PTR [edx]
10005c81:	sub    DWORD PTR [edx-0x20],0x64408290
10005c88:	mov    al,0xe1
10005c8a:	mov    DWORD PTR [esi+0x34],edx
10005c8d:	loop   0x10005cb3
10005c8f:	adc    al,0x32
10005c91:	leave  
10005c92:	adc    DWORD PTR [ebp+edi*1+0x4cbb2618],edi
10005c99:	clc    
10005c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005c9b:	pop    ebx
10005c9c:	or     BYTE PTR [edx],0x61
10005c9f:	call   0x94c8476a
10005ca4:	add    ecx,DWORD PTR [eax-0x4017606d]
10005caa:	push   esp
10005cab:	xlat   BYTE PTR ds:[ebx]
10005cac:	push   es
10005cad:	repnz fwait
10005caf:	nop
10005cb0:	and    al,0x8f
10005cb2:	ret    0x47fa
10005cb5:	or     edi,ecx
10005cb7:	(bad)
10005cbc:	pusha  
10005cbd:	cmp    BYTE PTR [edi],0x2f
10005cc0:	push   eax
10005cc1:	lods   eax,DWORD PTR ds:[esi]
10005cc2:	stc    
10005cc3:	mov    edi,0xf67c97d
10005cc8:	fmul   QWORD PTR ds:0xd51fcab5
10005cce:	add    ah,al
10005cd0:	aas    
10005cd1:	repz xchg esi,eax
10005cd3:	jge    0x10005cd0
10005cd5:	push   0x3e
10005cd7:	mov    esi,0xff6c1fea
10005cdc:	jge    0x10005cd2
10005cde:	mov    eax,0x215b155
10005ce3:	push   ebx
10005ce4:	cwde   
10005ce5:	sbb    al,0xae
10005ce7:	adc    eax,0xda655084
10005cec:	imul   esp
10005cee:	or     eax,0xa47c8904
10005cf3:	sub    BYTE PTR [edx],dh
10005cf5:	dec    ebp
10005cf6:	ficomp DWORD PTR [ebp+0x7adb8480]
10005cfc:	push   esi
10005cfd:	fild   DWORD PTR [edx-0x358b789c]
10005d03:	or     ch,al
10005d05:	inc    edi
10005d06:	mov    edi,0x8fe72139
10005d0b:	div    DWORD PTR [ebp+0x66]
10005d0e:	mov    edi,DWORD PTR [esi-0x46]
10005d11:	jo     0x10005d66
10005d13:	pushf  
10005d14:	or     esp,esp
10005d16:	dec    ebx
10005d17:	aas    
10005d18:	nop
10005d19:	sub    al,0x3f
10005d1b:	ror    BYTE PTR [eax+0x318feb7],0xea
10005d22:	jnp    0x10005d0f
10005d24:	jae    0x10005cdd
10005d26:	(bad)  
10005d27:	jp     0x10005d1a
10005d29:	int    0x88
10005d2b:	das    
10005d2c:	inc    BYTE PTR [ebp-0x52488de1]
10005d32:	mov    ah,0xc6
10005d34:	mov    al,0x8
10005d36:	inc    eax
10005d37:	ins    BYTE PTR es:[edi],dx
10005d38:	fs (bad) 
10005d3b:	fild   DWORD PTR [ebp+0x7e73fb57]
10005d41:	popf   
10005d42:	and    al,0xb0
10005d44:	int3   
10005d45:	(bad)  
10005d46:	jo     0x10005cfc
10005d48:	mov    fs,eax
10005d4a:	push   esp
10005d4b:	cwde   
10005d4c:	adc    eax,0x6f5a2de1
10005d51:	sti    
10005d52:	rcl    DWORD PTR [esi+0x66cf9323],1
10005d58:	daa    
10005d59:	shl    dh,0xa3
10005d5c:	dec    eax
10005d5d:	lahf   
10005d5e:	push   esi
10005d5f:	les    esp,FWORD PTR [edx-0x1b]
10005d62:	enter  0xf6d,0x68
10005d66:	scas   eax,DWORD PTR es:[edi]
10005d67:	adc    cl,BYTE PTR [edi-0x36e7a088]
10005d6d:	dec    edi
10005d6e:	inc    ebp
10005d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10005d70:	and    DWORD PTR [edi+0x52],edi
10005d73:	inc    esp
10005d74:	push   esi
10005d75:	cld    
10005d76:	push   ebp
10005d77:	das    
10005d78:	std    
10005d79:	mov    al,0xb8
10005d7b:	aaa    
10005d7c:	inc    eax
10005d7d:	pop    edx
10005d7e:	jg     0x10005d9f
10005d80:	retf   
10005d81:	push   ebp
10005d82:	call   edi
10005d84:	iret   
10005d85:	jmp    esp
10005d87:	(bad)  
10005d88:	pop    edi
10005d89:	and    ebp,edx
10005d8b:	cli    
10005d8c:	div    DWORD PTR [ebp-0x1f]
10005d8f:	das    
10005d90:	mov    WORD PTR [ecx+0x11],fs
10005d93:	xor    BYTE PTR [eax],0x4
10005d96:	add    BYTE PTR [ecx-0x37],dh
10005d99:	(bad)  
10005d9a:	test   BYTE PTR [edi-0x29],0x3c
10005d9e:	icebp  
10005d9f:	das    
10005da0:	fimul  WORD PTR [ebx+ebp*2+0x2d]
10005da4:	inc    eax
10005da5:	daa    
10005da6:	add    al,0x52
10005da8:	mov    esp,0xe1740851
10005dad:	mov    edx,0xb915d541
10005db2:	ins    DWORD PTR es:[edi],dx
10005db3:	bnd jmp 0x10005df2
10005db6:	inc    edx
10005db7:	mov    eax,ds:0x4ef14f88
10005dbc:	xor    cl,0x5d
10005dbf:	xor    BYTE PTR [edi+ebp*1+0x546f3504],0x20
10005dc7:	push   ds
10005dc8:	push   ss
10005dc9:	adc    ecx,DWORD PTR [eax+esi*2-0x206f2729]
10005dd0:	xchg   esi,eax
10005dd1:	sbb    dh,BYTE PTR [esi]
10005dd3:	iret   
10005dd4:	rcl    DWORD PTR [esi],0xb6
10005dd7:	or     edi,DWORD PTR [edi-0x56]
10005dda:	ins    DWORD PTR es:[edi],dx
10005ddb:	inc    ecx
10005ddc:	fimul  WORD PTR [ecx-0x415e6399]
10005de2:	mov    bh,0x31
10005de4:	jmp    DWORD PTR [ebp+0x59505cff]
10005dea:	jg     0x10005da5
10005dec:	mov    bl,0xfa
10005dee:	and    BYTE PTR [ecx+0x12],0x80
10005df2:	fmul   DWORD PTR [eax-0x1]
10005df5:	clc    
10005df6:	mov    edi,0x98a9fdcf
10005dfb:	or     edi,ebp
10005dfd:	adc    eax,0x65711561
10005e02:	and    DWORD PTR [eax],ecx
10005e04:	sbb    DWORD PTR [ecx],ebx
10005e06:	push   0x4d
10005e08:	das    
10005e09:	push   esi
10005e0a:	fwait
10005e0b:	scas   al,BYTE PTR es:[edi]
10005e0c:	and    eax,0x5a471e49
10005e11:	jno    0x10005dc3
10005e13:	sub    ah,BYTE PTR [ecx+ecx*8]
10005e16:	cmp    eax,DWORD PTR [ecx]
10005e18:	adc    al,0xe9
10005e1a:	inc    ebx
10005e1b:	lahf   
10005e1c:	pop    eax
10005e1d:	sahf   
10005e1e:	test   bl,bl
10005e20:	sub    ch,0xbe
10005e23:	mov    es,WORD PTR [esi+0x2cbf2ed1]
10005e29:	add    al,0xd2
10005e2b:	frstor [esi]
10005e2d:	and    bh,BYTE PTR [edi+0x40a74cb0]
10005e33:	aaa    
10005e34:	mov    ah,0xa
10005e36:	mov    BYTE PTR [ebx+ecx*1],bl
10005e39:	(bad)  
10005e3b:	inc    edx
10005e3c:	jmp    0x17400c63
10005e41:	mov    esp,0xb4b10d03
10005e46:	in     al,dx
10005e47:	push   esp
10005e49:	inc    ebp
10005e4a:	lahf   
10005e4b:	ds jo  0x10005e75
10005e4e:	push   0x81161feb
10005e53:	mov    esi,0x20049861
10005e58:	or     al,0x1
10005e5a:	inc    eax
10005e5b:	mov    esp,0x87d3f3e6
10005e60:	xchg   edi,eax
10005e61:	sbb    esp,edx
10005e63:	xor    ebx,esi
10005e65:	inc    ebx
10005e66:	pop    esi
10005e67:	hlt    
10005e68:	xchg   edi,eax
10005e69:	or     DWORD PTR [ebp+0x42],0xffffffa0
10005e6d:	cmp    BYTE PTR [ebp+0x23d50312],dh
10005e73:	mov    al,0xe4
10005e75:	inc    ebp
10005e76:	push   edi
10005e77:	pop    ds
10005e78:	and    eax,0x34e9381
10005e7d:	sub    dl,dl
10005e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10005e80:	fst    QWORD PTR [esi]
10005e82:	xchg   esp,eax
10005e83:	mov    DWORD PTR [edi],ebp
10005e85:	mov    ecx,DWORD PTR [eax-0x4d]
10005e88:	fld    QWORD PTR [edx-0x4e3af0b4]
10005e8e:	jns    0x10005e2e
10005e90:	sub    ecx,edi
10005e92:	dec    ebp
10005e93:	dec    eax
10005e94:	call   0xedb5:0x1fc6f547
10005e9b:	pop    ss
10005e9c:	pop    esi
10005e9d:	clc    
10005e9e:	xchg   ebx,eax
10005e9f:	shl    eax,cl
10005ea1:	inc    ax
10005ea3:	jecxz  0x10005e46
10005ea5:	inc    esi
10005ea6:	cmc    
10005ea7:	scas   eax,DWORD PTR es:[edi]
10005ea8:	out    dx,eax
10005ea9:	cwde   
10005eaa:	jns    0x10005eb9
10005eac:	xchg   al,cl
10005eae:	cli    
10005eaf:	add    eax,ebx
10005eb1:	daa    
10005eb2:	add    BYTE PTR [ecx-0x3816806f],dh
10005eb8:	idiv   BYTE PTR [edi-0x140fa026]
10005ebe:	push   0x4935da20
10005ec3:	test   eax,eax
10005ec5:	push   esi
10005ec6:	or     al,0xe4
10005ec8:	cmp    al,0x26
10005eca:	popa   
10005ecb:	enter  0x910a,0x81
10005ecf:	scas   al,BYTE PTR es:[edi]
10005ed0:	and    edi,DWORD PTR [esi]
10005ed2:	inc    ebp
10005ed3:	out    0xf0,al
10005ed5:	fidivr WORD PTR [ebp-0x10]
10005ed8:	repnz dec edi
10005eda:	xchg   BYTE PTR [edi+ecx*1-0x74f5a06d],ah
10005ee1:	pop    ebx
10005ee2:	jge    0x10005edd
10005ee4:	dec    eax
10005ee5:	ja     0x10005f4b
10005ee7:	out    0xe4,al
10005ee9:	iret   
10005eea:	repnz stc 
10005eec:	enter  0xbfae,0xec
10005ef0:	(bad)  
10005ef2:	push   ss
10005ef3:	inc    dl
10005ef5:	loop   0x10005eb7
10005ef7:	pop    ebx
10005ef8:	fstp   TBYTE PTR [esi-0x5]
10005efb:	jmp    0x7f0b:0xff4599b5
10005f02:	std    
10005f03:	int    0x43
10005f05:	pop    es
10005f06:	xor    BYTE PTR [esi+edx*8+0x1f],al
10005f0a:	sbb    BYTE PTR [esi],bh
10005f0c:	add    DWORD PTR [eax],ecx
10005f0e:	inc    ebx
10005f0f:	add    BYTE PTR [eax],dl
10005f11:	ja     0x10005eef
10005f13:	mov    ch,0x58
10005f15:	pop    ebx
10005f16:	stos   BYTE PTR es:[edi],al
10005f17:	mov    DWORD PTR [edi],ecx
10005f19:	xor    al,0xa6
10005f1b:	sbb    esi,DWORD PTR [ebx+0x1539509d]
10005f21:	xchg   ebp,eax
10005f22:	adc    esi,DWORD PTR [ecx-0x6a]
10005f25:	imul   eax,esp,0x40
10005f28:	sub    ecx,DWORD PTR [eax]
10005f2a:	mov    cl,0x72
10005f2c:	jnp    0x10005f1e
10005f2e:	imul   edx,DWORD PTR [edi+0x60],0xa2fcbe22
10005f35:	dec    esi
10005f36:	mov    al,dh
10005f38:	mov    edi,ebx
10005f3a:	icebp  
10005f3b:	dec    edi
10005f3c:	inc    eax
10005f3d:	jl     0x10005f44
10005f3f:	stc    
10005f40:	in     eax,dx
10005f41:	outs   dx,BYTE PTR ds:[esi]
10005f42:	sub    al,0x74
10005f44:	push   esp
10005f45:	cmp    eax,0xe5afaa2f
10005f4a:	enter  0xe4b4,0x4f
10005f4e:	inc    edx
10005f4f:	sub    eax,0xb957c7d9
10005f54:	(bad)  
10005f55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10005f56:	test   DWORD PTR [edi+0x7cff160],edi
10005f5c:	cld    
10005f5d:	sbb    DWORD PTR [esi-0x11f0330d],0xfffffffd
10005f64:	jae    0x10005f2a
10005f66:	leave  
10005f67:	pop    ds
10005f68:	jl     0x10005eec
10005f6a:	push   esi
10005f6b:	neg    BYTE PTR [ebp+0x4]
10005f6e:	xchg   BYTE PTR [ecx+0x0],dl
10005f71:	bound  esp,QWORD PTR [ebx+0x769bdd75]
10005f77:	fucom  st(0)
10005f79:	xlat   BYTE PTR ds:[ebx]
10005f7a:	les    edi,FWORD PTR [esi+0x51]
10005f7d:	adc    eax,0x2e5454f1
10005f82:	stos   BYTE PTR es:[edi],al
10005f83:	xor    al,0x25
10005f85:	sti    
10005f86:	mov    DWORD PTR [edx],esp
10005f88:	push   esp
10005f89:	pop    esp
10005f8a:	jmp    0x5013:0x25826225
10005f91:	and    bh,BYTE PTR [edx]
10005f93:	imul   esp,ecx,0x5b063d6d
10005f99:	loop   0x10005fa2
10005f9b:	ins    DWORD PTR es:[edi],dx
10005f9c:	or     bl,BYTE PTR [edx]
10005f9e:	fdivr  DWORD PTR [edx+ecx*4]
10005fa1:	idiv   bh
10005fa3:	shl    DWORD PTR [eax-0x1d],1
10005fa6:	push   ecx
10005fa7:	test   BYTE PTR [edi-0x53cd975b],ch
10005fad:	iret   
10005fae:	in     al,0xf
10005fb0:	inc    ebx
10005fb1:	icebp  
10005fb2:	pop    di
10005fb4:	mov    ds:0x50c63f85,al
10005fb9:	jnp    0x10005f6b
10005fbb:	mov    esi,0x7de0b530
10005fc0:	call   0xa758576c
10005fc5:	adc    BYTE PTR [edi],ah
10005fc7:	jg     0x10005f88
10005fc9:	inc    esi
10005fca:	xchg   edi,eax
10005fcb:	adc    al,bl
10005fcd:	sub    BYTE PTR [eax],al
10005fcf:	add    edx,eax
10005fd1:	mov    ds:0x7cfffd7,eax
10005fd6:	stos   BYTE PTR es:[edi],al
10005fd7:	xchg   edi,eax
10005fd8:	jns    0x10005fad
10005fda:	lea    edi,[ecx+0x49695758]
10005fe0:	dec    edi
10005fe1:	test   BYTE PTR [ecx-0x7bed7f3c],bl
10005fe7:	loopne 0x10005f8c
10005fe9:	ss xchg cl,ch
10005fec:	clc    
10005fed:	adc    eax,0xc63504fe
10005ff2:	fiadd  WORD PTR [ecx]
10005ff4:	dec    eax
10005ff5:	dec    ebx
10005ff6:	loopne 0x10006026
10005ff8:	fdiv   st(7),st
10005ffa:	ss icebp 
10005ffc:	mov    ds:0x9fbb8e9f,eax
10006001:	repnz inc esi
10006003:	xchg   DWORD PTR [ebp-0x154a904],ebx
10006009:	rol    BYTE PTR [edi],cl
1000600b:	push   eax
1000600c:	cs cld 
1000600e:	mov    DWORD PTR [ebp+0x1f],esp
10006011:	cmc    
10006012:	cmp    edi,edi
10006014:	test   edi,0xade7bf5e
1000601a:	mov    BYTE PTR [esi-0x92b80b],bh
10006020:	or     eax,0x55860444
10006025:	add    dl,al
10006027:	out    0x43,al
10006029:	add    al,dh
1000602b:	jmp    eax
1000602d:	cmp    eax,0xad59de0f
10006032:	mov    ebp,DWORD PTR [edi]
10006034:	jnp    0x10006069
10006036:	pop    esi
10006037:	xor    eax,0xe115e91d
1000603c:	mov    cl,0x81
1000603e:	cs (bad) 
10006040:	shl    DWORD PTR [ebp+0x64],cl
10006043:	mov    eax,ds:0x2902f101
10006048:	adc    ah,BYTE PTR [edi+0x2b480758]
1000604e:	adc    BYTE PTR [edx],bl
10006050:	jne    0x10006085
10006052:	adc    ebx,DWORD PTR [edi]
10006054:	hlt    
10006055:	push   ecx
10006056:	enter  0x22e1,0x9a
1000605a:	inc    esp
1000605b:	out    dx,al
1000605c:	add    edi,DWORD PTR [ecx]
1000605e:	jb     0x100060b0
10006060:	in     al,0x57
10006062:	scas   al,BYTE PTR es:[edi]
10006063:	cli    
10006064:	dec    ebx
10006065:	scas   al,BYTE PTR es:[edi]
10006066:	aas    
10006067:	arpl   WORD PTR [ecx-0x7f],dx
1000606a:	or     ah,bl
1000606c:	jg     0x1000609e
1000606e:	aam    0xf6
10006070:	aam    0x16
10006072:	ds icebp 
10006074:	ret    
10006075:	fst    DWORD PTR [edi]
10006077:	and    DWORD PTR [esi],0xfffffffe
1000607a:	shl    dh,0xfd
1000607d:	popa   
1000607e:	or     al,0xab
10006080:	add    BYTE PTR [eax+ecx*4],al
10006083:	mov    eax,ds
10006085:	mov    edi,DWORD PTR [edi]
10006087:	mov    esp,0xbfa7fef
1000608c:	inc    BYTE PTR [edx-0x5]
1000608f:	mov    bh,0x3
10006091:	ins    DWORD PTR es:[edi],dx
10006092:	test   DWORD PTR [eax+0x2e],eax
10006095:	dec    ecx
10006096:	pop    ss
10006097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10006098:	repz std 
1000609a:	mov    bl,0x60
1000609c:	mov    ebp,0xc44c0d51
100060a1:	mov    bh,0x21
100060a3:	jnp    0x1000602f
100060a5:	aaa    
100060a6:	add    BYTE PTR ds:0xf5f7a7c4,dh
100060ac:	in     eax,0x23
100060ae:	push   ebp
100060af:	mov    dh,0x22
100060b1:	ins    DWORD PTR es:[edi],dx
100060b2:	ins    BYTE PTR es:[edi],dx
100060b3:	add    eax,0x307dc30
100060b8:	and    BYTE PTR [edi+0x2feb9d0c],bh
100060be:	test   DWORD PTR [edi-0x10ddc77d],esi
100060c4:	sti    
100060c5:	xlat   BYTE PTR ds:[ebx]
100060c6:	not    esi
100060c8:	stos   DWORD PTR es:[edi],eax
100060c9:	xor    ecx,DWORD PTR [ebx]
100060cb:	(bad)  
100060cc:	aas    
100060cd:	(bad)  
100060ce:	jmp    0x12efaf12
100060d3:	cmp    eax,0x808e57ef
100060d8:	jle    0x1000613c
100060da:	cwde   
100060db:	add    eax,0xfe5d1e40
100060e0:	mov    bh,0xee
100060e2:	pop    ecx
100060e3:	stos   BYTE PTR es:[edi],al
100060e4:	in     eax,dx
100060e5:	call   0xfd0e:0x9bdf3fae
100060ec:	and    DWORD PTR [ecx+0x2c2a0a70],edx
100060f2:	test   eax,0x4af1c818
100060f7:	push   ecx
100060f8:	xor    BYTE PTR [edx],dh
100060fa:	pop    ecx
100060fb:	push   edi
100060fc:	mov    al,ds:0xdc4363e2
10006101:	or     al,0xde
10006103:	or     al,0x54
10006105:	xchg   edx,eax
10006106:	mov    esi,0xfe8d6d9
1000610b:	mov    al,ds:0xdd57c4cb
10006110:	jae    0x100060aa
10006112:	loopne 0x100060f5
10006114:	add    esi,DWORD PTR ds:[ecx+0x24]
10006118:	mov    edx,0x4b4f8e47
1000611d:	(bad)  
1000611e:	xor    al,0xa0
10006120:	mov    dh,0xfc
10006122:	push   esp
10006123:	das    
10006124:	cld    
10006125:	push   eax
10006126:	popa   
10006127:	cmp    al,0x1a
10006129:	das    
1000612a:	jmp    0xe27b:0x3790e340
10006131:	lea    edi,[ebx-0x22]
10006134:	mov    BYTE PTR [eax-0x6827e00b],ch
1000613a:	jle    0x10006190
1000613c:	sbb    BYTE PTR [esi+0x1],ah
1000613f:	add    dl,ah
10006141:	mov    ds:0xedfd3fdc,eax
10006146:	idiv   DWORD PTR [edi-0x59]
10006149:	push   esi
1000614a:	adc    eax,0xbc66f1df
1000614f:	pop    edx
10006150:	lods   al,BYTE PTR ds:[esi]
10006151:	sti    
10006152:	rcl    BYTE PTR [eax],cl
10006154:	ficom  WORD PTR [esi-0x79]
10006157:	lods   eax,DWORD PTR ds:[esi]
10006158:	stc    
10006159:	and    eax,0x5e658f88
1000615e:	arpl   WORD PTR [ebp+0x5d],ax
10006161:	scas   al,BYTE PTR es:[edi]
10006162:	add    eax,0xe8301618
10006167:	cmp    DWORD PTR [esi-0x47776c56],edi
1000616d:	mul    BYTE PTR [edx-0x7a]
10006170:	sbb    al,0x27
10006172:	xchg   DWORD PTR [ecx-0x3],ecx
10006175:	sub    al,BYTE PTR [edi-0x5b01bc89]
1000617b:	xchg   esp,eax
1000617c:	xor    ch,BYTE PTR [ebp-0x7]
1000617f:	test   edx,eax
10006181:	in     al,0x55
10006183:	(bad)  
10006184:	fcomp  st(2)
10006186:	add    BYTE PTR [edi+0x2d],ch
10006189:	cld    
1000618a:	in     eax,dx
1000618b:	scas   al,BYTE PTR es:[edi]
1000618c:	int    0x7d
1000618e:	icebp  
1000618f:	pop    ss
10006190:	or     ebp,DWORD PTR [edi]
10006192:	pop    eax
10006193:	stos   BYTE PTR es:[edi],al
10006194:	or     ecx,edx
10006196:	in     eax,dx
10006197:	xchg   edi,eax
10006198:	pop    edi
10006199:	sti    
1000619a:	sbb    eax,0xbb0c08a8
1000619f:	add    BYTE PTR [eax+ecx*4],al
100061a2:	mov    al,al
100061a4:	push   ebp
100061a5:	mov    bh,0x4d
100061a7:	mov    ebp,0x67f05fd8
100061ac:	inc    ebp
100061ad:	inc    ebx
100061ae:	inc    esp
100061af:	mov    ebx,0x549d4e52
100061b4:	or     al,0xe4
100061b6:	clc    
100061b7:	mov    esi,0xf21a74eb
100061bc:	imul   eax,DWORD PTR [ecx+eax*2-0x5],0xffffffa5
100061c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100061c2:	dec    esi
100061c3:	jge    0x1000618e
100061c5:	mov    DWORD PTR [edi-0x7c],ecx
100061c8:	or     DWORD PTR [eax],edx
100061ca:	jmp    0x52c323
100061cf:	rcl    BYTE PTR [eax+0x4bf7989f],1
100061d5:	pop    esi
100061d6:	add    DWORD PTR [ecx+0x7b3bcfea],edi
100061dc:	(bad)  
100061dd:	cmc    
100061de:	(bad)  
100061e0:	xchg   edi,eax
100061e1:	addr16 out 0xbc,al
100061e4:	das    
100061e5:	mov    ebp,0x7ffb53e0
100061ea:	test   DWORD PTR [eax+0x7bf81fe5],ebp
100061f0:	call   DWORD PTR [esi+edx*2]
100061f3:	add    BYTE PTR [eax],0xc4
100061f6:	inc    esi
100061f7:	cld    
100061f8:	addr16 jle 0x1000622d
100061fb:	mov    bh,0xf8
100061fd:	sar    DWORD PTR ds:0xe36a7d5,cl
10006203:	xor    al,0xe6
10006205:	enter  0xaa54,0xdc
10006209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000620a:	xchg   edx,eax
1000620b:	xchg   ebx,eax
1000620c:	mov    ah,0xa2
1000620e:	pop    ss
1000620f:	lahf   
10006210:	outs   dx,BYTE PTR ds:[esi]
10006211:	sub    ecx,DWORD PTR [edx-0x10]
10006214:	sub    eax,0x6f9ba8c5
10006219:	stos   BYTE PTR es:[edi],al
1000621a:	push   edi
1000621b:	aad    0x59
1000621d:	jb     0x1000627c
1000621f:	and    dl,dh
10006221:	adc    BYTE PTR [ecx-0x4f],ah
10006224:	jnp    0x100061bb
10006226:	xchg   edx,eax
10006227:	retf   
10006228:	call   0xe7dc5b52
1000622d:	xchg   BYTE PTR ds:0x3f0bdd3f,ch
10006233:	sub    ebx,0x3d502cbf
10006239:	in     al,0xdd
1000623b:	mov    edi,0xff77cff5
10006240:	sbb    esp,ecx
10006242:	stos   DWORD PTR es:[edi],eax
10006243:	(bad)  
10006244:	imul   ebx,DWORD PTR [edx-0x63],0x825639
1000624b:	add    al,0x68
1000624d:	or     eax,DWORD PTR [eax]
1000624f:	add    bh,bh
10006251:	mov    cl,0xef
10006253:	jge    0x10006245
10006255:	mov    bh,0xd5
10006257:	call   0x416f:0x21ef47f8
1000625e:	cdq    
1000625f:	push   edx
10006260:	adc    eax,0x4a681bae
10006265:	(bad)  
10006266:	test   BYTE PTR [ebx],0xaa
10006269:	push   es
1000626a:	push   0x8463ec56
1000626f:	push   edi
10006270:	jnp    0x10006276
10006272:	hlt    
10006273:	fcomp  QWORD PTR [esi+0x47]
10006276:	jbe    0x10006222
10006278:	dec    ebp
10006279:	or     ch,dl
1000627b:	cmovae ebx,DWORD PTR [esi+0x3ceebc70]
10006282:	jle    0x100062ed
10006284:	or     al,0x4f
10006286:	call   0x699e:0xe2f08546
1000628d:	retf   
1000628e:	dec    edi
1000628f:	push   ss
10006290:	add    al,0xde
10006292:	stc    
10006293:	xor    BYTE PTR [ecx],al
10006295:	aam    0x76
10006297:	aad    0xea
10006299:	aaa    
1000629a:	jle    0x10006285
1000629c:	loopne 0x100062c3
1000629e:	shr    BYTE PTR [edi+0x64640ffa],1
100062a4:	test   eax,0x400452b0
100062a9:	push   ds
100062aa:	pop    ecx
100062ab:	add    BYTE PTR ds:[edi-0x33],bh
100062af:	xor    eax,0x58d55ebb
100062b4:	repnz out dx,eax
100062b6:	icebp  
100062b7:	(bad)  
100062b9:	pop    esi
100062ba:	(bad)
100062bf:	ss push es
100062c1:	fdiv   st,st(6)
100062c3:	cs mov ah,0x1f
100062c6:	mov    bl,al
100062c8:	les    ecx,FWORD PTR [ebx]
100062ca:	inc    eax
100062cb:	push   ss
100062cc:	fs xchg edi,eax
100062ce:	or     DWORD PTR [edi+0x48deff6a],ebx
100062d4:	jl     0x1000626f
100062d6:	in     al,0x26
100062d8:	adc    DWORD PTR [ecx+0x34be9e94],eax
100062de:	xchg   BYTE PTR [edi],ah
100062e0:	dec    ebp
100062e1:	and    eax,ebx
100062e3:	push   0xffffffd1
100062e5:	pmulhuw mm0,mm2
100062e8:	pop    ds
100062e9:	std    
100062ea:	ret    0x500f
100062ed:	mov    ebx,0x3d373eaf
100062f2:	out    dx,eax
100062f3:	(bad)  
100062f5:	sahf   
100062f6:	jg     0x10006333
100062f8:	je     0x100062fa
100062fa:	sub    eax,eax
100062fc:	cmc    
100062fd:	cmpxchg BYTE PTR [edx+0x4],dl
10006301:	add    BYTE PTR [eax-0x7fe0b771],cl
10006307:	jmp    DWORD PTR [ecx-0x7981e211]
1000630d:	aaa    
1000630e:	out    0xd7,eax
10006310:	loope  0x1000631d
10006312:	jnp    0x100062d6
10006314:	fist   DWORD PTR [esi+ebx*4+0x256531f4]
1000631b:	adc    bl,BYTE PTR [ebp-0x70]
1000631e:	mov    ah,0x43
10006320:	jae    0x1000630b
10006322:	div    edi
10006324:	dec    esp
10006325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10006326:	mov    dh,0x39
10006328:	push   edi
10006329:	adc    bl,BYTE PTR [edi+0x16]
1000632c:	add    ebp,ebx
1000632e:	mov    ecx,0x715556e2
10006333:	es je  0x10006383
10006336:	jle    0x100062fc
10006338:	mov    bh,0xf3
1000633a:	in     al,0x84
1000633c:	adc    edx,esi
1000633e:	xchg   edx,eax
10006340:	cmp    BYTE PTR [ecx+0x3f],0x7
10006344:	jmp    0xdec3:0xb9d51b7b
1000634b:	mov    bh,0x5b
1000634d:	das    
1000634e:	cld    
1000634f:	fcom   DWORD PTR [eax+0x6044687f]
10006355:	and    eax,0x88804009
1000635a:	add    BYTE PTR [esi+edi*8-0x3e2f075],bh
10006361:	into   
10006362:	out    dx,eax
10006363:	xchg   esi,eax
10006364:	into   
10006365:	scas   eax,DWORD PTR es:[edi]
10006366:	out    dx,eax
10006367:	outs   dx,DWORD PTR ds:[esi]
10006368:	sub    al,0x44
1000636a:	out    0xa2,al
1000636c:	mov    dh,0x62
1000636e:	mov    al,ds:0x9199147b
10006373:	fidiv  DWORD PTR [edx-0x131cada4]
10006379:	enter  0x6f6e,0xe1
1000637d:	mov    ch,0xd
1000637f:	mov    BYTE PTR [edi+0x74df115b],bl
10006385:	scas   al,BYTE PTR es:[edi]
10006386:	call   0x5971980e
1000638b:	ror    al,cl
1000638d:	xor    BYTE PTR ds:0x7f2d69fa,ch
10006393:	push   0xe2778fcb
10006398:	mov    ebp,0x67544f29
1000639d:	mov    esp,0x65bc76fb
100063a2:	imul   DWORD PTR [ebx]
100063a4:	popa   
100063a5:	es jg  0x100063df
100063a8:	mov    ds:0x695827a6,eax
100063ad:	add    ah,BYTE PTR [eax]
100063af:	(bad)  
100063b0:	cs pop ds
100063b2:	cmp    bh,0xd4
100063b5:	mov    edi,0xc5bbfbdd
100063ba:	gs icebp 
100063bc:	icebp  
100063bd:	(bad)  
100063be:	mov    ah,0x37
100063c0:	sbb    esp,DWORD PTR [edi]
100063c2:	push   edx
100063c3:	cld    
100063c4:	xchg   edx,eax
100063c5:	sub    al,0x35
100063c7:	in     eax,dx
100063c8:	and    esi,DWORD PTR [edx-0x26ba621b]
100063ce:	jno    0x10006377
100063d0:	pop    ebp
100063d1:	std    
100063d2:	das    
100063d3:	pop    ebp
100063d4:	lds    ecx,FWORD PTR [ecx]
100063d6:	add    al,0x41
100063d8:	icebp  
100063d9:	mov    ch,0x5f
100063db:	cmp    esi,DWORD PTR [edx-0x439ce89]
100063e1:	dec    ecx
100063e2:	(bad)  
100063e3:	jo     0x10006381
100063e5:	mov    bh,ah
100063e7:	nop
100063e8:	ret    0xf342
100063eb:	jle    0x100063e5
100063ed:	inc    eax
100063ee:	arpl   WORD PTR [edx+0xbe6b8d1],bp
100063f4:	rcl    DWORD PTR [edi],cl
100063f6:	das    
100063f7:	aad    0x45
100063f9:	add    esi,DWORD PTR [ecx-0xe]
100063fc:	retf   
100063fd:	and    dh,BYTE PTR [eax]
100063ff:	je     0x10006459
10006401:	imul   eax,DWORD PTR [edx],0xa44dc400
10006407:	xadd   BYTE PTR [ebx+0x7f],bl
1000640b:	in     eax,dx
1000640c:	scas   al,BYTE PTR es:[edi]
1000640d:	imul   ebp,DWORD PTR [edx-0x21e201b5],0xffffff8c
10006414:	mov    bh,0x18
10006416:	sbb    eax,0x46c0f28f
1000641b:	jl     0x10006419
1000641d:	fwait
1000641e:	push   0xffffffe9
10006420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10006421:	jle    0x1000646a
10006423:	retf   0x624e
10006426:	lods   eax,DWORD PTR ds:[esi]
10006427:	xchg   ebx,eax
10006428:	nop
10006429:	(bad)  
1000642b:	mov    edx,0x4502cefd
10006430:	push   0x20afe25b
10006435:	repnz (bad) 
10006437:	out    0xfd,al
10006439:	jno    0x10006406
1000643b:	pop    ds
1000643c:	jns    0x10006413
1000643e:	aaa    
1000643f:	cmp    al,0xef
10006441:	test   DWORD PTR ds:0x1754f76a,0x43adf9df
1000644b:	(bad)  
1000644c:	stc    
1000644d:	fucomi st,st(7)
1000644f:	iret   
10006450:	dec    esi
10006451:	and    ebp,DWORD PTR [esi-0x3]
10006454:	cmp    eax,0x543e9dd0
10006459:	pop    eax
1000645a:	mov    DWORD PTR [edx],eax
1000645c:	adc    BYTE PTR [eax],ah
1000645e:	add    dl,BYTE PTR es:[ebx+0x717aef57]
10006465:	ins    DWORD PTR es:[edi],dx
10006466:	push   ecx
10006467:	cld    
10006468:	fdivr  DWORD PTR [ebx]
1000646a:	in     al,0x57
1000646c:	and    ebp,DWORD PTR [ecx]
1000646e:	add    al,0x95
10006470:	dec    ebp
10006471:	les    ebp,FWORD PTR [edi]
10006473:	ins    DWORD PTR es:[edi],dx
10006474:	pop    ds
10006475:	dec    edi
10006476:	(bad)  
10006477:	push   es
10006478:	mov    eax,0xf36dc2ab
1000647d:	push   eax
1000647e:	sbb    eax,0x8b628812
10006483:	clc    
10006484:	push   esi
10006485:	and    BYTE PTR [ecx],0x9f
10006488:	push   ebx
10006489:	xlat   BYTE PTR ds:[ebx]
1000648a:	or     DWORD PTR [ecx-0x65],esp
1000648d:	mov    ebp,0x3fa7e4a7
10006492:	in     al,0x7e
10006494:	aas    
10006495:	sub    dl,0x7f
10006498:	aad    0xe7
1000649a:	neg    BYTE PTR [edi]
1000649c:	idiv   BYTE PTR [esi]
1000649e:	jp     0x1000649d
100064a0:	push   edi
100064a1:	push   cs
100064a2:	fimul  WORD PTR [edi+0x1ec3d926]
100064a8:	sub    dl,0xc7
100064ab:	xchg   BYTE PTR ds:[esi],cl
100064ae:	out    dx,al
100064af:	mov    al,ds:0x212901b
100064b4:	int    0xe7
100064b6:	adc    BYTE PTR [esi],dl
100064b8:	add    DWORD PTR [esi],eax
100064ba:	cmp    BYTE PTR ds:0x7fbffdf5,0xf6
100064c1:	push   edi
100064c2:	pop    edi
100064c3:	mov    ecx,0x3860abf9
100064c8:	fistp  DWORD PTR [ecx-0x3b]
100064cb:	fisttp QWORD PTR [eax-0x72]
100064ce:	xor    BYTE PTR [eax],bl
100064d0:	adc    eax,0x56c44008
100064d5:	add    DWORD PTR [edx-0x17],0x7b
100064d9:	pandn  mm6,mm7
100064dc:	loope  0x100064d9
100064de:	ds cmp al,0x8f
100064e1:	test   DWORD PTR [esp+edx*2-0x3aae272d],edi
100064e8:	push   ebx
100064e9:	loope  0x1000652d
100064eb:	mov    dl,BYTE PTR [edx-0x293b372d]
100064f1:	xchg   ebp,eax
100064f2:	xchg   edi,eax
100064f3:	jl     0x10006541
100064f5:	sti    
100064f6:	shl    DWORD PTR [edx+0x6d],0xd2
100064fa:	and    bh,BYTE PTR [edx+0x3afb7f21]
10006500:	jmp    0xd78ba48f
10006505:	add    ebp,DWORD PTR [eax+0x4ecdaeee]
1000650b:	sbb    eax,0xf3b6dc6a
10006510:	(bad)  
10006511:	cmp    eax,0xf96d00ef
10006516:	xchg   DWORD PTR [edx-0x22],edi
10006519:	pop    ds
1000651a:	inc    esi
1000651b:	lahf   
1000651c:	xchg   BYTE PTR [ebp-0x31],dh
1000651f:	adc    BYTE PTR [esi+0x64],bh
10006522:	ror    esp,0xcc
10006525:	mov    ecx,0xd5c9c2ee
1000652a:	outs   dx,DWORD PTR ds:[esi]
1000652b:	mov    edx,0xeefbf270
10006530:	sbb    BYTE PTR [edi],bh
10006532:	xchg   esi,eax
10006533:	dec    edi
10006534:	jo     0x100064f1
10006536:	jnp    0x1000656c
10006538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10006539:	jmp    0x46c:0x4f2d577d
10006540:	sub    ah,BYTE PTR [ebx+0x70]
10006543:	sbb    al,0x6
10006545:	(bad)  
10006546:	pop    eax
10006547:	jl     0x100065ae
10006549:	cmp    dl,BYTE PTR ds:0x2e268459
1000654f:	sbb    ch,BYTE PTR [eax-0x59a8a1d3]
10006555:	push   ebp
10006556:	sahf   
10006557:	push   esi
10006558:	nop
10006559:	adc    al,ah
1000655b:	push   ebx
1000655c:	jnp    0x1000651f
1000655e:	xchg   edi,eax
1000655f:	pop    ss
10006560:	jnp    0x100065c9
10006562:	cmc    
10006563:	sub    eax,0xdc080ae3
10006569:	cmp    cl,BYTE PTR [edi+0x5a1be6bf]
1000656f:	loopne 0x100065c4
10006571:	sub    eax,0x5746b5fa
10006576:	std    
10006577:	mov    esi,0xd343dcfa
1000657c:	lea    ebp,[edi]
1000657e:	outs   dx,BYTE PTR ds:[esi]
1000657f:	jnp    0x10006574
10006581:	out    dx,al
10006582:	aaa    
10006583:	mov    eax,ds:0xa01bf563
10006588:	cmp    eax,0xfeb6a180
1000658d:	ror    dl,0x17
10006590:	add    BYTE PTR [eax-0x4208feea],al
10006596:	pop    ss
10006597:	scas   eax,DWORD PTR es:[edi]
10006598:	pop    ebx
10006599:	jmp    DWORD PTR [edi]
1000659b:	pop    ss
1000659c:	dec    esp
1000659d:	cld    
1000659e:	test   al,0xb0
100065a0:	fcompp 
100065a2:	rcr    BYTE PTR [ecx+ebp*2-0x3f],0x27
100065a7:	imul   ebp,ecx,0xe1d246fd
100065ad:	shl    BYTE PTR ds:0xe72fa891,cl
100065b3:	pop    ecx
100065b4:	xchg   ebp,eax
100065b5:	popf   
100065b6:	pop    eax
100065b7:	push   0xa6dbc412
100065bc:	mov    eax,ds:0x11fc8690
100065c1:	add    DWORD PTR [eax-0x77],ebp
100065c4:	outs   dx,DWORD PTR ds:[esi]
100065c5:	jnp    0x10006588
100065c7:	scas   eax,DWORD PTR es:[edi]
100065c8:	sub    DWORD PTR [eax],eax
100065ca:	lea    eax,[edi]
100065cc:	jmp    0x10006559
100065ce:	xchg   DWORD PTR [edi+0x74df5f1b],esp
100065d4:	in     eax,dx
100065d5:	out    dx,al
100065d6:	stos   DWORD PTR es:[edi],eax
100065d7:	adc    BYTE PTR [edi],ah
100065d9:	jle    0x1000664b
100065db:	or     al,0xff
100065dd:	int3   
100065de:	push   edi
100065df:	aaa    
100065e0:	ja     0x100065b3
100065e2:	pop    ss
100065e3:	cmp    BYTE PTR [ebx+0x70af406e],al
100065e9:	sti    
100065ea:	popf   
100065eb:	mov    ecx,DWORD PTR [ebx+0x3b]
100065ee:	(bad)  
100065ef:	mov    eax,0xbab19eb7
100065f4:	jo     0x1000660b
100065f6:	pop    ds
100065f7:	in     eax,0x5c
100065f9:	dec    ecx
100065fa:	in     al,0x2c
100065fc:	or     BYTE PTR [esi-0x79d3735c],bl
10006602:	inc    ebx
10006603:	push   es
10006604:	outs   dx,BYTE PTR ds:[esi]
10006605:	mov    bl,0x30
10006607:	les    ecx,FWORD PTR [edi]
10006609:	xchg   esp,eax
1000660a:	clc    
1000660b:	dec    ecx
1000660c:	ror    cl,cl
1000660e:	xor    BYTE PTR [ecx-0x4771e241],dl
10006614:	fcmovnu st,st(7)
10006616:	pop    edx
10006617:	in     al,0xa3
10006619:	out    0xfd,al
1000661b:	lea    edi,[ebp-0x73]
1000661e:	jmp    0xbe36:0xf7de43dc
10006625:	imul   esi,edi,0xf39f10cb
1000662b:	push   ebx
1000662c:	mov    edi,0x5dcdd7f1
10006631:	hlt    
10006632:	or     eax,0xc8008a47
10006637:	(bad)  
10006638:	sbb    eax,0xbf2ff000
1000663d:	pop    esi
1000663e:	pop    esp
1000663f:	fdiv   QWORD PTR [edx-0x663b0226]
10006645:	stos   DWORD PTR es:[edi],eax
10006646:	or     ebp,DWORD PTR [edi-0x557f752c]
1000664c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000664d:	popa   
1000664e:	inc    ecx
1000664f:	xchg   edx,eax
10006650:	popa   
10006651:	fs dec eax
10006653:	stos   DWORD PTR es:[edi],eax
10006654:	mov    ch,0xf6
10006656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10006657:	cld    
10006658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10006659:	imul   eax,eax,0x33f264a
1000665f:	shr    BYTE PTR [ecx-0xe],0x7b
10006663:	pop    es
10006664:	sbb    dh,ch
10006666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10006667:	or     DWORD PTR [ebp-0xc0492a1],0xffffffdd
1000666e:	iret   
1000666f:	imul   edi,eax,0x11
10006672:	loop   0x1000663f
10006674:	outs   dx,BYTE PTR ds:[esi]
10006675:	mov    edi,0xf43a52bc
1000667a:	pop    eax
1000667b:	leave  
1000667c:	mov    ebx,0x3b846100
10006681:	cmp    eax,0xbdeb02bc
10006686:	repnz mov dh,0xa9
10006689:	mov    ebp,0xc2e5ff9f
1000668e:	jmp    0xb58d6a88
10006693:	test   dh,0x8c
10006696:	test   eax,0xfb15eb24
1000669b:	or     al,0x91
1000669d:	mov    dh,0x5e
1000669f:	mov    esi,DWORD PTR [edx+eax*1-0x64149318]
100066a6:	retf   0x8ab1
100066a9:	and    ebp,DWORD PTR [esi+edi*2-0x4b564d26]
100066b0:	imul   edx,eax,0x9615f92d
100066b6:	fistp  QWORD PTR [ebx]
100066b8:	shr    BYTE PTR [eax-0x221bc2d1],1
100066be:	cmc    
100066bf:	(bad)  
100066c0:	pop    ds
100066c1:	fidiv  WORD PTR [edi-0x27]
100066c4:	push   edx
100066c5:	pop    ebp
100066c6:	aam    0x61
100066c8:	mov    dh,0xfe
100066ca:	inc    ebx
100066cb:	mov    ebp,0x186327e8
100066d0:	in     eax,dx
100066d1:	pop    ebp
100066d2:	aaa    
100066d3:	or     BYTE PTR [edi],bh
100066d5:	jmp    0xd3e7:0x20a2f6
100066dc:	das    
100066dd:	fdivr  DWORD PTR [eax-0x70785d1b]
100066e3:	(bad)  
100066e4:	fcmovu st,st(5)
100066e6:	loopne 0x100066a2
100066e8:	xor    ecx,ebx
100066ea:	pop    ebx
100066eb:	dec    ecx
100066ec:	mov    ebp,0xadfd6490
100066f1:	pop    ebx
100066f2:	mov    ebx,DWORD PTR [ebx+ecx*4]
100066f5:	dec    edi
100066f6:	call   0x59a742e9
100066fb:	xchg   edx,eax
100066fc:	mov    es,WORD PTR [edx]
100066fe:	xchg   ebx,eax
100066ff:	(bad)
10006703:	int3   
10006704:	inc    DWORD PTR [ebx+0x6f]
10006707:	cli    
10006708:	xor    eax,0x179635f6
1000670d:	sbb    bh,BYTE PTR [bx-0x1b48]
10006712:	xchg   esi,eax
10006713:	jge    0x10006744
10006715:	cld    
10006716:	out    0xdd,al
10006718:	dec    ebx
10006719:	repz mov bh,cl
1000671c:	stc    
1000671d:	ret    
1000671e:	das    
1000671f:	sti    
10006720:	lods   al,BYTE PTR ds:[esi]
10006721:	cmp    dl,dh
10006723:	add    ebp,DWORD PTR [ebx]
10006725:	imul   ebp,eax,0xffffffdb
10006728:	and    bh,BYTE PTR [eax+0x7523f0a7]
1000672e:	add    BYTE PTR [eax],bh
10006730:	out    dx,eax
10006731:	mov    edi,0x2ba6fd64
10006736:	into   
10006737:	sbb    edi,DWORD PTR [edi-0x651f2239]
1000673d:	jge    0x100066de
1000673f:	popa   
10006740:	call   0xd9436bde
10006745:	mov    dh,al
10006747:	mov    dh,0xe5
10006749:	call   0xd28c:0x8caa9f88
10006750:	retf   0x82c8
10006753:	cld    
10006754:	loope  0x1000675b
10006756:	rcl    BYTE PTR [esi+0x583fafe5],0x5f
1000675d:	cwde   
1000675e:	cmp    esp,esp
10006760:	jge    0x100067d9
10006762:	jecxz  0x10006799
10006764:	mov    ebx,0x42f88a5e
10006769:	lahf   
1000676a:	push   0xffffffcb
1000676c:	scas   eax,DWORD PTR es:[edi]
1000676d:	fstp   TBYTE PTR [ebx-0x6b71c417]
10006773:	xor    eax,0xcd0c1900
10006778:	pop    es
10006779:	adc    DWORD PTR [ecx-0x4c80680f],esp
1000677f:	mov    eax,0xfbb565b8
10006784:	mov    cl,0x33
10006786:	push   edi
10006787:	pop    ss
10006788:	pop    esi
10006789:	into   
1000678a:	retf   0x65cc
1000678d:	xchg   esi,eax
1000678e:	cmp    eax,DWORD PTR [edx+ebx*8-0x7cdd2da6]
10006795:	popa   
10006796:	xchg   edx,eax
10006797:	sub    ecx,ebp
10006799:	leave  
1000679a:	xor    al,0x29
1000679c:	mov    BYTE PTR [edi-0x65],ch
1000679f:	es dec ebp
100067a1:	pop    edx
100067a2:	sbb    DWORD PTR [ebp-0x6d],ebx
100067a5:	lahf   
100067a6:	fsubr  st,st(6)
100067a8:	add    edx,DWORD PTR [eax-0x45]
100067ab:	mov    edi,0xd33b373e
100067b0:	mov    eax,0xbbb5d363
100067b5:	pop    edi
100067b6:	add    DWORD PTR [edx-0x42],edi
100067b9:	jg     0x100067ff
100067bb:	nop
100067bc:	pop    ds
100067bd:	cmp    BYTE PTR [edx+0x5],dh
100067c0:	add    al,dl
100067c2:	mov    eax,eax
100067c4:	daa    
100067c5:	iret   
100067c6:	cwde   
100067c7:	sub    al,0x5c
100067c9:	or     al,0x1f
100067cb:	and    ebp,DWORD PTR [eax+ecx*8+0x187a9078]
100067d2:	mov    WORD PTR [esi+0x1ec8890a],?
100067d8:	leave  
100067d9:	xchg   esp,eax
100067da:	xor    al,0x9d
100067dc:	and    WORD PTR [ecx],sp
100067df:	stos   DWORD PTR es:[edi],eax
100067e0:	cli    
100067e1:	xchg   edx,eax
100067e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100067e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100067e4:	pusha  
100067e5:	and    bh,BYTE PTR [edi-0x36521a9c]
100067eb:	jg     0x1000684c
100067ed:	ins    DWORD PTR es:[edi],dx
100067ee:	mul    BYTE PTR [ecx-0x2380727d]
100067f4:	cli    
100067f5:	out    0x3d,al
100067f7:	outs   dx,DWORD PTR ds:[esi]
100067f8:	test   BYTE PTR [esi-0x40344d04],bl
100067fe:	loop   0x100067c8
10006800:	nop    ecx
10006803:	add    al,BYTE PTR [eax]
10006805:	sub    BYTE PTR [eax],bh
10006807:	std    
10006808:	in     eax,0xdf
1000680a:	sub    al,0x2e
1000680c:	jp     0x100067cc
1000680e:	clc    
1000680f:	aam    0xa3
10006811:	mov    bh,0x97
10006813:	lahf   
10006814:	enter  0x4c7c,0xf2
10006818:	adc    dl,BYTE PTR [ebx-0x41]
1000681b:	adc    ecx,ecx
1000681d:	and    al,BYTE PTR [edi+0x4ec4429e]
10006823:	mov    edx,0xba692429
10006828:	adc    DWORD PTR ds:[edi],edi
1000682b:	dec    ebp
1000682c:	cli    
1000682d:	xor    BYTE PTR [edx],al
1000682f:	add    al,BYTE PTR [ebx]
10006831:	jp     0x10006825
10006833:	mov    bh,0xd3
10006835:	pop    edx
10006836:	xchg   edx,eax
10006837:	pop    edi
10006838:	or     ah,dl
1000683a:	jbe    0x10006813
1000683c:	out    0x8c,eax
1000683e:	js     0x10006834
10006840:	int    0x0
10006842:	add    BYTE PTR [eax],cl
10006844:	fimul  DWORD PTR [ecx+0x44]
10006847:	inc    ecx
10006848:	push   esp
10006849:	bswap  esp
1000684b:	xor    al,0x3e
1000684d:	mov    bl,0xe3
1000684f:	cli    
10006850:	cmp    eax,0xfc4a2237
10006855:	lock push ds
10006857:	call   DWORD PTR [ecx]
10006859:	popa   
1000685a:	stc    
1000685b:	add    ecx,DWORD PTR [ebx+esi*4]
1000685e:	ror    ebx,1
10006860:	or     dh,BYTE PTR [ecx-0x294be133]
10006866:	add    al,0xce
10006868:	fstp   QWORD PTR [esi+0x2a]
1000686b:	jge    0x1000686a
1000686d:	push   ebp
1000686e:	fwait
1000686f:	aas    
10006870:	push   ebp
10006871:	stos   BYTE PTR es:[edi],al
10006872:	lock (bad) 
10006874:	cmp    BYTE PTR [ebx+0x7baeb19c],ch
1000687a:	inc    ebx
1000687b:	xchg   edi,eax
1000687c:	mov    edi,0x6ba44357
10006881:	repnz lods eax,DWORD PTR ds:[esi]
10006883:	adc    dl,ah
10006885:	add    esi,ecx
10006887:	xchg   ebp,eax
10006888:	jle    0x100068aa
1000688a:	adc    esi,edx
1000688c:	or     ebx,DWORD PTR [edi-0x60]
1000688f:	(bad)  
10006890:	pop    edi
10006891:	mov    ch,0xea
10006893:	inc    bl
10006895:	fiadd  WORD PTR [edi-0x613a0189]
1000689b:	mov    bh,0x23
1000689d:	push   0xffffffe9
1000689f:	push   ebp
100068a0:	outs   dx,DWORD PTR ds:[esi]
100068a1:	clc    
100068a2:	lods   eax,DWORD PTR ds:[esi]
100068a3:	js     0x10006897
100068a5:	add    eax,DWORD PTR [edi-0x79]
100068a8:	add    BYTE PTR [eax],al
100068aa:	hlt    
100068ab:	ret    0x5b60
100068ae:	or     BYTE PTR [esi],cl
100068b0:	mov    esp,0x8cf7b8ed
100068b5:	push   esi
100068b6:	fdiv   DWORD PTR [ebx-0x24]
100068b9:	xor    eax,0x6f50c4ee
100068be:	mov    WORD PTR [esi-0x6da695e3],fs
100068c4:	ds ins DWORD PTR es:[edi],dx
100068c6:	pop    ebx
100068c7:	xor    ah,BYTE PTR [edi]
100068c9:	jg     0x10006853
100068cb:	fcom   QWORD PTR [eax+0x4020fedc]
100068d1:	mov    ch,0xe0
100068d3:	pop    ss
100068d4:	and    bh,BYTE PTR [edi+0x6fc350f7]
100068da:	int3   
100068db:	js     0x100068e8
100068dd:	outs   dx,DWORD PTR ds:[esi]
100068de:	(bad)  
100068df:	xchg   edi,eax
100068e0:	or     DWORD PTR [edi-0x3832816b],0xffffffb4
100068e7:	aad    0x97
100068e9:	lds    ebx,FWORD PTR [ebp+0xd]
100068ec:	sbb    al,0x47
100068ee:	mov    eax,DWORD PTR [eax]
100068f0:	add    BYTE PTR [esi],al
100068f2:	adc    eax,edi
100068f4:	shr    DWORD PTR [ebx-0x49],0x9c
100068f8:	sti    
100068f9:	mov    BYTE PTR ds:0x49f26fa5,ch
100068ff:	pop    es
10006900:	lods   al,BYTE PTR ds:[esi]
10006901:	rol    BYTE PTR [edi-0x41],1
10006904:	pop    edi
10006905:	test   esp,ecx
10006907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10006908:	add    DWORD PTR [edx-0x76678fe],ebx
1000690e:	sbb    dh,0xe5
10006911:	cmpleps xmm4,XMMWORD PTR [ebx]
10006915:	pusha  
10006916:	inc    edi
10006917:	(bad)  
10006918:	cli    
10006919:	mov    esi,0xacf2e2fa
1000691e:	ja     0x10006907
10006920:	imul   ebp,DWORD PTR [esi-0x65],0x7e
10006924:	loope  0x1000694d
10006926:	jg     0x10006964
10006928:	aaa    
10006929:	cmp    DWORD PTR [eax-0x2c41581b],0x7f
10006930:	les    edx,FWORD PTR [eax+0x4ba381f]
10006936:	add    BYTE PTR [eax+0x7d2e250e],cl
1000693c:	pushf  
1000693d:	neg    DWORD PTR [ebp-0x44]
10006940:	outs   dx,BYTE PTR ds:[esi]
10006941:	rcl    DWORD PTR ds:0xc57c4c17,cl
10006947:	test   eax,0x38ce6df0
1000694c:	das    
1000694d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000694e:	cs popf 
10006950:	inc    edx
10006951:	aas    
10006952:	pop    esi
10006953:	and    al,0x4a
10006955:	push   edx
10006956:	imul   ebp,DWORD PTR [edi-0xeda6377],0x95dae7c3
10006960:	(bad)  
10006961:	push   0xdfcfb93c
10006966:	pop    edx
10006967:	sbb    ch,BYTE PTR [esi+0x3d9f503d]
1000696d:	cmp    al,0xe7
1000696f:	jge    0x100069e6
10006971:	repz jne 0x1000692f
10006974:	pop    edi
10006975:	xchg   DWORD PTR [esi],esp
10006977:	mov    ecx,0x47fcab55
1000697c:	sub    al,0xf9
1000697e:	and    DWORD PTR [ebx-0x477fffb1],0x5d64408
10006988:	into   
10006989:	ficomp DWORD PTR [edx+0x2a]
1000698c:	jge    0x10006971
1000698e:	push   ebp
1000698f:	fwait
10006990:	push   DWORD PTR [esi+0x724fe25c]
10006996:	daa    
10006997:	popf   
10006998:	loope  0x10006936
1000699a:	adc    ch,BYTE PTR [eax-0x79]
1000699d:	fild   WORD PTR [eax]
1000699f:	dec    ecx
100069a0:	fild   QWORD PTR [ebp-0x42]
100069a3:	xor    BYTE PTR [edx],dl
100069a5:	xchg   ebx,eax
100069a6:	lahf   
100069a7:	sahf   
100069a8:	out    dx,eax
100069a9:	retf   
100069aa:	jg     0x10006967
100069ac:	iret   
100069ad:	cmp    ebp,eax
100069af:	stc    
100069b0:	dec    BYTE PTR [edi+eax*4-0x16984281]
100069b7:	mov    ecx,0xdee0ff4f
100069bc:	pop    ds
100069bd:	inc    edx
100069be:	cmp    eax,0x5f515fd7
100069c3:	jmp    0x10006a12
100069c5:	mov    esp,DWORD PTR [ebx+0x69000051]
100069cb:	test   eax,0x279208
100069d0:	sar    cl,0xd1
100069d3:	jmp    0x1000698b
100069d5:	ds out 0x8c,al
100069d8:	int    0xc5
100069da:	iret   
100069db:	mov    bl,0x11
100069dd:	out    dx,al
100069de:	lock xor DWORD PTR [esi],edi
100069e1:	cmp    BYTE PTR [ecx],bl
100069e3:	dec    eax
100069e4:	dec    ebx
100069e5:	test   BYTE PTR [ecx+ecx*2],0x32
100069e9:	leave  
100069ea:	ror    DWORD PTR [ebp-0x42],cl
100069ed:	xor    BYTE PTR [eax],ch
100069ef:	loop   0x1000699c
100069f1:	out    0xfb,al
100069f3:	inc    ecx
100069f4:	sbb    bl,BYTE PTR [ebx]
100069f6:	repnz add ebp,DWORD PTR [eax+0x2fcc6bef]
100069fd:	iret   
100069fe:	jnp    0x100069bf
10006a00:	jge    0x100069cf
10006a02:	out    0xa6,eax
10006a04:	pop    edi
10006a05:	cld    
10006a06:	leave  
10006a07:	pop    ds
10006a08:	iret   
10006a09:	sbb    eax,0xfe5dfd02
10006a0e:	adc    eax,0x597e5bf1
10006a13:	loope  0x10006a5d
10006a15:	fild   WORD PTR [esi]
10006a17:	aam    0x41
10006a19:	push   ss
10006a1a:	mov    edi,0xcb777b88
10006a1f:	packuswb mm5,mm7
10006a22:	pop    es
10006a23:	jo     0x100069f0
10006a25:	mov    ds:0x61ce96b6,eax
10006a2a:	jne    0x100069d8
10006a2c:	loope  0x10006a53
10006a2e:	imul   ecx,DWORD PTR [edx-0x70],0x1e267485
10006a35:	push   edx
10006a36:	dec    ecx
10006a37:	fiadd  WORD PTR [ebx]
10006a39:	dec    esi
10006a3a:	add    DWORD PTR [ecx+0x12],0xfd5b501f
10006a41:	pusha  
10006a42:	cmc    
10006a43:	push   ds
10006a44:	mov    al,0xde
10006a46:	jecxz  0x10006a57
10006a48:	xchg   ebx,eax
10006a49:	pop    edi
10006a4a:	push   esp
10006a4b:	jge    0x10006a21
10006a4d:	pop    ds
10006a4e:	test   al,0x2f
10006a50:	dec    ebp
10006a51:	sbb    eax,0x98f67c6c
10006a56:	jmp    0x10006ace
10006a58:	mov    edi,0xafbf97e2
10006a5d:	sub    eax,0x15fc4f42
10006a62:	imul   DWORD PTR [ebp+0x5a38b4be]
10006a68:	cmp    eax,0xa1e43080
10006a6d:	adc    esi,ebx
10006a6f:	push   es
10006a70:	neg    dh
10006a72:	mov    ah,0xe3
10006a74:	das    
10006a75:	push   esi
10006a76:	xchg   ebp,eax
10006a77:	stc    
10006a78:	push   ebp
10006a79:	lods   al,BYTE PTR ds:[esi]
10006a7a:	ret    0x7bd1
10006a7d:	outs   dx,DWORD PTR ds:[esi]
10006a7e:	and    ch,al
10006a80:	pop    eax
10006a81:	jmp    0x10006a4a
10006a83:	jnp    0x10006a88
10006a85:	pop    ecx
10006a86:	out    0x95,eax
10006a88:	xchg   ecx,eax
10006a89:	mov    si,0x2e4f
10006a8d:	mul    BYTE PTR [ecx-0x7fd8324d]
10006a93:	cli    
10006a94:	add    esi,0xbfc16d7c
10006a9a:	out    dx,eax
10006a9b:	pop    ebp
10006a9c:	fistp  WORD PTR [eax+0x7e5fe179]
10006aa2:	ins    DWORD PTR es:[edi],dx
10006aa3:	data16 das 
10006aa5:	call   0x3a3d58c9
10006aaa:	out    0xfb,al
10006aac:	adc    al,0x8e
10006aae:	cmovo  ax,WORD PTR [esi+0x5ce20]
10006ab6:	mov    esp,0xfe875beb
10006abb:	adc    eax,0xdbcf87c0
10006ac0:	pop    edx
10006ac1:	cmp    bl,BYTE PTR [ebp+0x5e7ac5d5]
10006ac7:	bound  esp,QWORD PTR [ebp+0x16674981]
10006acd:	ret    
10006ace:	mov    cl,0xdb
10006ad0:	xor    dh,BYTE PTR [edx-0x60c6c1da]
10006ad6:	mulps  xmm7,XMMWORD PTR [esi-0x7b]
10006ada:	test   edi,edx
10006adc:	xchg   ecx,eax
10006add:	fistp  WORD PTR [ebx+0x5f6f7cf1]
10006ae3:	inc    ebx
10006ae4:	dec    esp
10006ae5:	pop    ds
10006ae6:	push   0x7c
10006ae8:	jb     0x10006acd
10006aea:	mov    ch,0xbb
10006aec:	scas   eax,DWORD PTR es:[edi]
10006aed:	cld    
10006aee:	into   
10006aef:	mov    ebp,0xe648b3cb
10006af4:	bnd addr16 jge 0x10006a9f
10006af8:	inc    ebx
10006af9:	mov    esp,ebx
10006afb:	add    ebp,eax
10006afd:	xor    BYTE PTR [edx-0x7fb09ecf],0x3
10006b04:	jo     0x10006b84
10006b06:	xacquire xchg BYTE PTR [ebp+0x53653f8f],ch
10006b0d:	icebp  
10006b0e:	and    ebp,DWORD PTR [esp+ecx*8-0x50e731b6]
10006b15:	hlt    
10006b16:	lods   al,BYTE PTR ds:[esi]
10006b17:	pop    es
10006b18:	mov    bl,0x1e
10006b1a:	jp     0x10006adf
10006b1c:	and    BYTE PTR [edx+esi*1],bl
10006b1f:	dec    esp
10006b20:	push   esi
10006b21:	aas    
10006b22:	or     BYTE PTR [edi],dh
10006b24:	int    0xf7
10006b26:	pop    ebx
10006b27:	stc    
10006b28:	sbb    BYTE PTR [ebx],al
10006b2a:	inc    esp
10006b2b:	pop    ebp
10006b2c:	mov    al,ds:0x5d98d53e
10006b31:	pop    edx
10006b32:	bnd jg 0x10006b2a
10006b35:	mov    edx,0x997e987f
10006b3a:	xor    al,0xd7
10006b3c:	xchg   edi,eax
10006b3d:	sub    eax,0xef4af07e
10006b42:	push   ecx
10006b43:	dec    ecx
10006b44:	jle    0x10006b66
10006b46:	pop    ss
10006b47:	add    BYTE PTR [ecx],bl
10006b49:	sub    dl,BYTE PTR [ecx]
10006b4b:	pusha  
10006b4c:	or     BYTE PTR [ecx-0x420000],cl
10006b52:	lods   eax,DWORD PTR ds:[esi]
10006b53:	cmp    edi,esi
10006b55:	push   0xffffffbc
10006b57:	les    ebp,FWORD PTR [edi-0xf19eaa0]
10006b5d:	push   ecx
10006b5e:	into   
10006b5f:	and    edi,DWORD PTR [ecx+0x38620c29]
10006b65:	gs push ebp
10006b67:	addr16 aas 
10006b69:	mov    BYTE PTR [edi+0x2d],cl
10006b6c:	hlt    
10006b6d:	add    eax,0x1f9706f1
10006b72:	mov    WORD PTR [ecx-0x2ac15ff7],es
10006b78:	pop    eax
10006b79:	push   0x3f33fa2c
10006b7e:	mov    eax,0x4f0de977
10006b83:	stc    
10006b84:	rcr    dh,0xef
10006b87:	inc    ecx
10006b88:	dec    ebp
10006b89:	cli    
10006b8a:	mov    eax,ds:0xfddd73fd
10006b8f:	inc    esi
10006b90:	add    BYTE PTR cs:[eax+ebp*4],dh
10006b94:	pop    ebp
10006b95:	and    al,0xd8
10006b98:	push   ss
10006b99:	sub    BYTE PTR [ebx-0x62],0x38
10006b9d:	cmp    ecx,edi
10006b9f:	(bad)  
10006ba0:	daa    
10006ba1:	lods   eax,DWORD PTR ds:[esi]
10006ba2:	jle    0x10006c23
10006ba4:	test   eax,0x8ced1ec0
10006ba9:	icebp  
10006baa:	jno    0x10006c02
10006bac:	sbb    al,0x70
10006bae:	ja     0x10006c16
10006bb0:	cmp    DWORD PTR [ebx+edi*2+0x41],esi
10006bb4:	add    edi,DWORD PTR [ecx-0x2a56d85]
10006bba:	jo     0x10006c18
10006bbc:	jnp    0x10006c1f
10006bbe:	nop
10006bbf:	mov    eax,ds:0xfcd5e331
10006bc4:	pop    ecx
10006bc5:	psrlq  mm6,mm3
10006bc8:	fiadd  WORD PTR [edi-0x72]
10006bcb:	mov    ebp,0x115bcf61
10006bd0:	and    eax,0x8ff10dba
10006bd5:	dec    edx
10006bd6:	repnz add edi,DWORD PTR [ecx-0xc5f1800]
10006bdd:	push   es
10006bde:	ret    0xc042
10006be1:	mov    edi,0x4e63f2f4
10006be6:	jmp    FWORD PTR [edi-0x39]
10006be9:	xchg   edi,eax
10006bea:	outs   dx,DWORD PTR ds:[esi]
10006beb:	cs mov eax,0x8c6754ec
10006bf1:	dec    edi
10006bf2:	hlt    
10006bf3:	dec    ebp
10006bf4:	or     BYTE PTR [edx+0x31],bh
10006bf7:	pop    esp
10006bf8:	jnp    0x10006c3f
10006bfa:	add    DWORD PTR [ebx-0x6b41e045],eax
10006c00:	pop    ebp
10006c01:	sti    
10006c02:	mov    eax,0x3cd68fbb
10006c07:	fild   QWORD PTR [edi+0x39cf598b]
10006c0d:	mov    eax,0x59fa7fe4
10006c12:	pop    ds
10006c13:	fidivr WORD PTR [ebx-0x3d]
10006c16:	dec    edi
10006c17:	out    dx,al
10006c18:	stos   DWORD PTR es:[edi],eax
10006c19:	cs inc ebx
10006c1b:	std    
10006c1c:	addr16 mov ecx,0x457f7765
10006c22:	cld    
10006c23:	push   0x6f
10006c25:	scas   eax,DWORD PTR es:[edi]
10006c26:	xchg   ecx,eax
10006c27:	or     eax,DWORD PTR [eax+0x206f3a19]
10006c2d:	mov    dl,0x46
10006c2f:	lock int 0x57
10006c32:	ins    DWORD PTR es:[edi],dx
10006c33:	neg    DWORD PTR ds:[ebp+ebp*8+0xa16b7a5]
10006c3b:	in     al,dx
10006c3c:	fs addr16 xor al,0x43
10006c40:	and    DWORD PTR [eax],ebx
10006c42:	enter  0x845b,0x19
10006c46:	xor    DWORD PTR [edi+esi*8+0x61],0x69a3f561
10006c4e:	ret    0xdef1
10006c51:	and    DWORD PTR [edi+0x363d662e],edi
10006c57:	mov    bl,0xec
10006c59:	fcomip st,st(6)
10006c5b:	ret    0xee4f
10006c5e:	mov    edi,0x3d6bf5a1
10006c63:	xchg   ecx,eax
10006c64:	lahf   
10006c65:	add    BYTE PTR [ebx-0x24],0xea
10006c69:	pop    ds
10006c6a:	aad    0x73
10006c6c:	jge    0x10006c83
10006c6e:	jb     0x10006c71
10006c70:	mov    al,0x83
10006c72:	ret    0x8d01
10006c75:	mov    ebp,0xf001cc4e
10006c7a:	out    dx,eax
10006c7b:	mov    ebp,0xa705cb7a
10006c80:	ins    DWORD PTR es:[edi],dx
10006c81:	sub    DWORD PTR [esi-0x2c4f175b],edi
10006c87:	js     0x10006c0e
10006c89:	(bad)  
10006c8a:	repnz adc ebx,eax
10006c8d:	das    
10006c8e:	(bad)  
10006c8f:	lods   al,BYTE PTR ds:[esi]
10006c90:	in     al,0xf5
10006c92:	add    DWORD PTR ds:0xbe1f882c,edx
10006c98:	push   esp
10006c99:	pop    edx
10006c9a:	std    
10006c9b:	and    dh,cl
10006c9d:	pop    ss
10006c9e:	push   0x98abf61c
10006ca3:	neg    ebp
10006ca5:	cdq    
10006ca6:	gs call esi
10006ca9:	sub    edi,edi
10006cab:	out    dx,al
10006cac:	ror    BYTE PTR ds:0x5176ffb7,0x26
10006cb3:	mov    esi,0xfea7d5ce
10006cb8:	cmp    al,0xf7
10006cba:	push   ecx
10006cbb:	dec    ebp
10006cbc:	jle    0x10006cde
10006cbe:	pop    ss
10006cbf:	and    BYTE PTR [eax+esi*1+0x5e220b4d],0xc1
10006cc7:	ins    DWORD PTR es:[edi],dx
10006cc8:	das    
10006cc9:	fidivr WORD PTR [eax-0x1e]
10006ccc:	jecxz  0x10006d1d
10006cce:	sbb    bh,BYTE PTR [ecx+0x4f6052b6]
10006cd4:	loope  0x10006d3b
10006cd6:	(bad)  
10006cd7:	js     0x10006c5e
10006cd9:	pop    ss
10006cda:	push   es
10006cdb:	cli    
10006cdc:	push   0x71
10006cde:	aas    
10006cdf:	xchg   BYTE PTR [ebx+0xadf9e69],bh
10006ce5:	mov    edx,DWORD PTR [eax]
10006ce7:	aas    
10006ce8:	cmp    BYTE PTR [edx],dl
10006cea:	or     edi,DWORD PTR [ebp-0x5e]
10006ced:	sub    dl,al
10006cef:	cwde   
10006cf0:	cmc    
10006cf1:	out    0xc5,al
10006cf3:	mov    dl,0xf0
10006cf5:	push   ds
10006cf6:	call   0xbd6f:0x61eefef7
10006cfd:	out    dx,eax
10006cfe:	ins    DWORD PTR es:[edi],dx
10006cff:	dec    ebx
10006d00:	jne    0x10006d43
10006d02:	xchg   ecx,eax
10006d03:	pop    esp
10006d04:	cmc    
10006d05:	and    cl,BYTE PTR [edi]
10006d07:	cmc    
10006d08:	fist   WORD PTR ss:[ecx+0x4f]
10006d0c:	cld    
10006d0d:	add    BYTE PTR [ecx+0x6c872400],bh
10006d13:	fisttp DWORD PTR [edx+eax*2-0x40]
10006d17:	fcomip st,st(0)
10006d19:	clc    
10006d1a:	aad    0x6b
10006d1c:	pop    edi
10006d1d:	(bad)  
10006d1e:	clc    
10006d1f:	aad    0x57
10006d21:	dec    edi
10006d22:	xchg   esp,eax
10006d23:	stc    
10006d24:	and    eax,0xa9c1970
10006d29:	pop    ebx
10006d2a:	fldpi  
10006d2c:	add    al,0x14
10006d2e:	push   esp
10006d2f:	les    ebp,FWORD PTR [edi-0x5]
10006d32:	clc    
10006d33:	mov    eax,ds:0x3bad953
10006d38:	push   ecx
10006d39:	stos   DWORD PTR es:[edi],eax
10006d3a:	out    dx,eax
10006d3b:	add    ebx,esi
10006d3d:	pushf  
10006d3e:	out    0xfb,eax
10006d40:	or     edi,esi
10006d42:	push   edx
10006d43:	mov    ebp,0xbddcf621
10006d48:	mov    edi,0x7bce7ffe
10006d4d:	xlat   BYTE PTR ds:[ebx]
10006d4e:	add    edi,edi
10006d50:	mov    WORD PTR [eax],?
10006d52:	jmp    0x99784fca
10006d57:	pop    esp
10006d58:	add    dl,dl
10006d5a:	xor    DWORD PTR [edx+0x5e],0xffffffc3
10006d5e:	fistp  QWORD PTR [ecx]
10006d60:	and    esp,DWORD PTR [edi-0x4c02c0f9]
10006d66:	lods   eax,DWORD PTR ds:[esi]
10006d67:	dec    edi
10006d68:	fnstsw WORD PTR [ecx-0x5d750f52]
10006d6e:	ret    
10006d6f:	into   
10006d70:	popa   
10006d71:	and    eax,0xa5665e06
10006d76:	enter  0x2e5f,0xea
10006d7a:	push   ss
10006d7b:	std    
10006d7c:	push   ds
10006d7d:	loop   0x10006d15
10006d7f:	les    eax,FWORD PTR [edi]
10006d81:	or     al,0xee
10006d83:	add    BYTE PTR ds:[ecx-0x1f4e5c1c],dh
10006d8a:	iret   
10006d8b:	mov    eax,ds:0x96870a2a
10006d90:	std    
10006d91:	iret   
10006d92:	jg     0x10006d7d
10006d94:	push   edi
10006d95:	or     edi,DWORD PTR [edi-0x5]
10006d98:	repnz pop ebx
10006d9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10006d9b:	out    dx,al
10006d9c:	add    eax,0x9b937c4d
10006da1:	lahf   
10006da2:	mov    ebx,0x5c816fb
10006da7:	mov    al,ds:0x7d6a87b
10006dac:	sub    BYTE PTR [ecx],ah
10006dae:	push   0xb4f8df5f
10006db3:	xor    eax,0xfe725eeb
10006db8:	les    ebp,FWORD PTR [ebx]
10006dba:	es sub bh,ah
10006dbd:	cdq    
10006dbe:	push   cs
10006dbf:	mov    DWORD PTR [esi],0x5e056256
10006dc5:	(bad)  
10006dc6:	lds    eax,FWORD PTR [edx+eiz*2+0x30]
10006dca:	enter  0xad21,0x24
10006dce:	ds hlt 
10006dd0:	repz cld 
10006dd2:	loopne 0x10006d9c
10006dd4:	add    BYTE PTR [eax],cl
10006dd6:	push   es
10006dd7:	push   ecx
10006dd8:	cmc    
10006dd9:	rcr    DWORD PTR [eax-0x10],1
10006ddc:	out    0x59,eax
10006dde:	push   ebp
10006ddf:	mov    ebp,cs
10006de1:	xlat   BYTE PTR ds:[ebx]
10006de2:	(bad)
10006de5:	cmp    eax,0x82f5bb50
10006dea:	idiv   DWORD PTR [eax+edi*2]
10006ded:	cmp    edi,DWORD PTR [edx]
10006def:	test   dh,dh
10006df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10006df2:	jae    0x10006dc9
10006df4:	push   esi
10006df5:	sahf   
10006df6:	jmp    0x906b:0xe273b9a7
10006dfd:	or     eax,DWORD PTR [eax+0x76]
10006e00:	mov    al,0x11
10006e02:	xor    BYTE PTR [eax+0x3fcfb420],0x79
10006e09:	stc    
10006e0a:	xchg   BYTE PTR [ebp-0x1b96c7b1],bl
10006e10:	test   DWORD PTR [ebx],edx
10006e12:	adc    eax,0xb0ce0cfe
10006e17:	sbb    DWORD PTR ds:0x6c8a7556,eax
10006e1d:	or     al,0x5
10006e1f:	cmp    BYTE PTR [ecx],0x81
10006e22:	jns    0x10006e10
10006e24:	jmp    0x10006de3
10006e26:	shl    BYTE PTR [eax-0x3a5274ba],1
10006e2c:	outs   dx,DWORD PTR ds:[esi]
10006e2d:	sbb    eax,0x5fc05d45
10006e32:	adc    cl,BYTE PTR ds:0x59162abf
10006e38:	inc    ebx
10006e39:	mov    WORD PTR ds:0xff77c436,gs
10006e3f:	imul   ebp,DWORD PTR [edx-0x10861482],0x7a
10006e46:	loopne 0x10006de7
10006e48:	adc    BYTE PTR ds:0xd4fc8ab3,ah
10006e4e:	push   esi
10006e4f:	push   ds
10006e50:	in     eax,0xe6
10006e52:	cmovae ecx,DWORD PTR [edi+0x1723d0d]
10006e59:	enter  0xa41e,0xa3
10006e5d:	mov    edi,eax
10006e5f:	hlt    
10006e60:	adc    BYTE PTR [eax*4-0x3b3e0169],0xaa
10006e68:	push   ebp
10006e6a:	fcom   DWORD PTR [ebp+0x17]
10006e6d:	outs   dx,BYTE PTR ds:[esi]
10006e6e:	sbb    al,0x77
10006e70:	push   ds
10006e71:	aaa    
10006e72:	push   edx
10006e73:	in     al,0x8f
10006e75:	in     eax,0x1c
10006e77:	xchg   ebx,eax
10006e78:	jo     0x10006e13
10006e7a:	out    dx,eax
10006e7b:	adc    al,0xd9
10006e7d:	sub    BYTE PTR [ebx-0x27],dh
10006e80:	pusha  
10006e81:	mov    esi,0xf6b3a1bd
10006e86:	push   es
10006e87:	loop   0x10006e14
10006e89:	call   0x8b2d:0xe109a880
10006e90:	cmp    esi,edx
10006e92:	adc    BYTE PTR [ebx],dl
10006e94:	xor    eax,0xe666bb81
10006e99:	mov    ebp,0x5f76ffaf
10006e9e:	in     eax,dx
10006e9f:	pop    ebx
10006ea0:	dec    edi
10006ea1:	jmp    eax
10006ea3:	fdivp  st(7),st
10006ea5:	add    BYTE PTR [ebp+0x68],cl
10006ea8:	sbb    eax,0x3f3729d9
10006ead:	mov    bh,0xf8
10006eaf:	sub    DWORD PTR [ecx-0x5f10bff5],edx
10006eb5:	jb     0x10006f33
10006eb7:	push   ebp
10006eb8:	pop    esi
10006eb9:	add    DWORD PTR [ebp+0x64],esi
10006ebc:	aaa    
10006ebd:	aas    
10006ebe:	jae    0x10006ead
10006ec0:	out    0xa7,al
10006ec2:	pushf  
10006ec3:	xor    dh,dl
10006ec5:	cwde   
10006ec6:	lea    edx,[ebx]
10006ec8:	out    dx,al
10006ec9:	adc    eax,DWORD PTR [esi-0x76]
10006ecc:	in     al,dx
10006ecd:	ror    DWORD PTR [ecx+eiz*2+0x4e132e0c],1
10006ed4:	or     DWORD PTR [ebp+0x87969c2],0xb059dabd
10006ede:	jno    0x10006ed3
10006ee0:	ret    
10006ee1:	loope  0x10006e81
10006ee3:	add    BYTE PTR [edx],bl
10006ee5:	xor    al,0xda
10006ee8:	test   BYTE PTR [edi],bl
10006eea:	stos   DWORD PTR es:[edi],eax
10006eeb:	or     edi,esp
10006eed:	out    dx,al
10006eee:	lock mov ds:0xf6bbedf7,al
10006ef4:	xlat   BYTE PTR ds:[ebx]
10006ef5:	mov    edi,0x7ffbe17a
10006efa:	(bad)  
10006efb:	out    dx,eax
10006efc:	mov    BYTE PTR [edx+0x136e4756],dl
10006f02:	loope  0x10006f77
10006f04:	loop   0x10006f6d
10006f06:	sbb    BYTE PTR [eax+eax*1+0x7a],0xf
10006f0b:	aad    0xae
10006f0d:	sub    DWORD PTR [ecx-0x56],0x87c48a40
10006f14:	cs pop ebp
10006f16:	mov    edi,0xe51d82fd
10006f1b:	repz xlat BYTE PTR ds:[ebx]
10006f1d:	mov    WORD PTR [edx],?
10006f1f:	mov    WORD PTR [bp+0x79d8],ss
10006f24:	cs addr16 daa 
10006f27:	xor    al,al
10006f29:	test   DWORD PTR [ebx-0x34678cc6],eax
10006f2f:	sbb    al,0x8c
10006f31:	xor    BYTE PTR [edi-0x2c246a97],ah
10006f37:	xchg   DWORD PTR [edx+eax*1],esp
10006f3a:	mov    eax,ds:0xdf5bf373
10006f3f:	mov    ss,WORD PTR [edi]
10006f41:	push   ds
10006f42:	add    BYTE PTR [edi+0x40],cl
10006f45:	or     al,al
10006f47:	scas   eax,DWORD PTR es:[edi]
10006f48:	mov    DWORD PTR [ecx],edi
10006f4a:	js     0x10006f4e
10006f4c:	int3   
10006f4d:	(bad)  
10006f4e:	test   al,0x7
10006f50:	dec    esp
10006f51:	push   ebp
10006f52:	sbb    esp,edx
10006f54:	scas   al,BYTE PTR es:[edi]
10006f55:	ret    
10006f56:	mov    edi,esi
10006f58:	(bad)  
10006f59:	neg    DWORD PTR [esp+ebp*4]
10006f5c:	push   esp
10006f5e:	stos   BYTE PTR es:[edi],al
10006f5f:	jg     0x10006ef9
10006f61:	inc    cl
10006f63:	popf   
10006f64:	sti    
10006f65:	push   0x75
10006f67:	test   al,0xe7
10006f69:	jmp    0x7ebca928
10006f6e:	and    eax,0x467e273f
10006f73:	enter  0xa005,0x7f
10006f77:	nop
10006f78:	test   DWORD PTR [eax],esp
10006f7a:	cmp    dl,bl
10006f7c:	jle    0x10006fe2
10006f7e:	popa   
10006f7f:	push   0x8cf1de7f
10006f84:	mov    ch,0x9b
10006f86:	pop    ds
10006f87:	ja     0x10006fcb
10006f89:	stc    
10006f8a:	xchg   esp,eax
10006f8b:	mov    DWORD PTR [edx],esi
10006f8d:	aas    
10006f8e:	data16 lods al,BYTE PTR ds:[esi]
10006f90:	les    esi,FWORD PTR [edi+0x23f9968c]
10006f96:	pop    esp
10006f97:	mov    ?,ebp
10006f99:	cs addr16 (bad) 
10006f9c:	mov    ch,0x2a
10006f9e:	imul   edi,esi,0x68e03dd
10006fa4:	mov    BYTE PTR [edi-0x6e],dh
10006fa7:	sbb    BYTE PTR [edi-0xa8065d5],al
10006fad:	ss push cs
10006faf:	dec    edi
10006fb0:	cmp    BYTE PTR [eax],al
10006fb2:	sbb    BYTE PTR [ebx],dl
10006fb4:	sub    dl,bh
10006fb6:	shl    BYTE PTR [edx],0x80
10006fb9:	pop    edx
10006fba:	int    0x13
10006fbc:	not    DWORD PTR [esi-0x15]
10006fbf:	(bad)  
10006fc0:	xlat   BYTE PTR ds:[ebx]
10006fc1:	jb     0x10007020
10006fc3:	cmp    al,0xb8
10006fc5:	ja     0x10006f7d
10006fc7:	icebp  
10006fc8:	stos   DWORD PTR es:[edi],eax
10006fc9:	jge    0x10006f7e
10006fcb:	(bad)  
10006fcd:	jmp    0x10006f8d
10006fcf:	jl     0x10006fc1
10006fd1:	dec    esi
10006fd2:	mov    esp,ebp
10006fd4:	stos   BYTE PTR es:[edi],al
10006fd5:	(bad)
10006fd9:	adc    BYTE PTR [esi],bh
10006fdb:	lahf   
10006fdc:	fbld   TBYTE PTR [edi-0x74]
10006fdf:	pop    esp
10006fe0:	add    BYTE PTR [esi],al
10006fe2:	add    ecx,edx
10006fe4:	sub    ecx,DWORD PTR [eax]
10006fe6:	lahf   
10006fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10006fe8:	adc    DWORD PTR [eax],ecx
10006fea:	stc    
10006feb:	ror    esi,cl
10006fed:	dec    DWORD PTR [esi-0x1b225399]
10006ff3:	or     ecx,eax
10006ff5:	into   
10006ff6:	fcomp  DWORD PTR [edx+ebx*2-0x41]
10006ffa:	imul   ebx,esp,0xcc6e4639
10007000:	pop    eax
10007001:	mov    DWORD PTR [edi+0x58],ebp
10007004:	test   al,0xfa
10007006:	jns    0x147b0ef2
1000700c:	fistp  QWORD PTR [ecx-0x2ac81689]
10007012:	xchg   al,dh
10007014:	mov    esi,0xa1d2e776
10007019:	out    dx,eax
1000701a:	fdivr  QWORD PTR [ebx+0x528a1cb4]
10007020:	adc    DWORD PTR [ebx+ebx*8+0x5ca6550f],esi
10007027:	mov    cs,WORD PTR [si+0xb90]
1000702c:	shl    al,0xa1
1000702f:	adc    eax,DWORD PTR [ebx+0x14499870]
10007035:	je     0x100070a0
10007037:	in     eax,0xf2
10007039:	je     0x100070a8
1000703b:	or     BYTE PTR [ebx+0x26],al
1000703e:	pushf  
1000703f:	retf   0xeb12
10007042:	inc    esp
10007043:	or     BYTE PTR [edx],0xa3
10007046:	ret    0x72a9
10007049:	test   eax,0x10c8e436
1000704e:	mov    ecx,0x54170c00
10007053:	rol    DWORD PTR [ecx+edi*8],cl
10007056:	test   al,0x23
10007058:	mov    ecx,0x4f551f2e
1000705d:	adc    ch,BYTE PTR [eax+0x8236a08]
10007063:	mov    edx,0x399954b4
10007068:	cli    
10007069:	sbb    BYTE PTR [eax+eax*1-0x7a],0x17
1000706e:	stos   BYTE PTR es:[edi],al
1000706f:	xor    eax,0x5d47b4f8
10007074:	cdq    
10007075:	es cwde 
10007077:	cmp    al,0x1
10007079:	sub    cl,ah
1000707b:	imul   BYTE PTR [eax+0x1f4723aa]
10007081:	nop
10007082:	or     eax,eax
10007084:	retf   0x4981
10007087:	adc    BYTE PTR [edi+ecx*8-0x57],ch
1000708b:	imul   ebx,DWORD PTR [ebx-0x18],0x48
1000708f:	imul   esi,DWORD PTR [edx-0x781ec61c],0x10
10007096:	mov    ecx,0xd85cac00
1000709b:	int3   
1000709c:	in     eax,0xb3
1000709e:	and    bh,BYTE PTR [esi+0x18]
100070a1:	adc    al,0x71
100070a3:	dec    ebp
100070a4:	in     al,0xce
100070a6:	leave  
100070a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100070a9:	enter  0xe005,0xc8
100070ad:	sub    esi,0xffffff99
100070b0:	test   BYTE PTR [edx+0x0],0x92
100070b4:	(bad)  
100070b5:	out    0x18,eax
100070b7:	and    ah,ah
100070b9:	add    dh,BYTE PTR [eax-0xc]
100070bc:	and    ch,cl
100070be:	mov    bl,0xcf
100070c0:	mov    DWORD PTR [ebp+0x1c8e4723],ebx
100070c6:	cmp    DWORD PTR [edx-0x1c],esi
100070c9:	enter  0x2391,0x47
100070cd:	mov    ds,WORD PTR [ecx+edi*1]
100070d0:	jb     0x100070b6
100070d2:	enter  0x2391,0x47
100070d6:	mov    ds,WORD PTR [ecx+edi*1]
100070d9:	jb     0x100070bf
100070db:	enter  0x2391,0x47
100070df:	mov    ds,WORD PTR [ecx+edi*1]
100070e2:	jb     0x100070c8
100070e4:	enter  0x2391,0x47
100070e8:	mov    ds,WORD PTR [ecx+edi*1]
100070eb:	jb     0x100070d1
100070ed:	enter  0x2391,0x47
100070f1:	mov    ds,WORD PTR [ecx+edi*1]
100070f4:	jb     0x100070da
100070f6:	enter  0x2391,0x47
100070fa:	mov    ds,WORD PTR [ecx+edi*1]
100070fd:	jb     0x100070e3
100070ff:	enter  0x2391,0x47
10007103:	mov    ds,WORD PTR [ecx+edi*1]
10007106:	jb     0x100070ec
10007108:	enter  0x2391,0x47
1000710c:	mov    ds,WORD PTR [ecx+edi*1]
1000710f:	jb     0x100070f5
10007111:	enter  0x2391,0x47
10007115:	mov    ds,WORD PTR [ecx+edi*1]
10007118:	jb     0x100070fe
1000711a:	enter  0x1191,0xfe
1000711e:	aas    
1000711f:	sbb    bh,ah
10007121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007122:	mov    eax,ds:0x60e2315b
10007127:	add    BYTE PTR [eax],al
10007129:	add    BYTE PTR [eax],al
1000712b:	dec    ecx
1000712c:	inc    ebp
1000712d:	dec    esi
1000712e:	inc    esp
1000712f:	scas   al,BYTE PTR es:[edi]
10007130:	inc    edx
10007131:	pusha  
10007132:	add    BYTE PTR [eax],0x0
10007135:	add    BYTE PTR [eax],al
10007137:	add    BYTE PTR [eax],ch
10007139:	add    BYTE PTR [eax],al
1000713b:	add    BYTE PTR [eax],dh
1000713d:	add    BYTE PTR [eax],al
1000713f:	add    BYTE PTR [eax+0x0],ah
10007142:	add    BYTE PTR [eax],al
10007144:	add    DWORD PTR [eax],eax
10007146:	and    BYTE PTR [eax],al
10007148:	add    BYTE PTR [eax],al
1000714a:	add    BYTE PTR [eax],al
1000714c:	and    BYTE PTR ds:0x0,0x0
	...
1000732f:	add    DWORD PTR [eax],eax
10007331:	add    BYTE PTR [eax],al
10007333:	add    al,BYTE PTR [eax]
10007335:	add    BYTE PTR [eax],al
10007337:	add    eax,DWORD PTR [eax]
10007339:	add    BYTE PTR [eax],al
1000733b:	add    al,0x0
1000733d:	add    BYTE PTR [eax],al
1000733f:	add    al,0x0
10007341:	add    BYTE PTR [eax],al
10007343:	add    al,0x0
10007345:	add    BYTE PTR [eax],al
10007347:	add    eax,DWORD PTR [eax]
10007349:	add    BYTE PTR [eax],al
1000734b:	add    eax,DWORD PTR [eax]
1000734d:	add    BYTE PTR [eax],al
1000734f:	add    DWORD PTR [eax],eax
10007351:	add    BYTE PTR [eax],al
10007353:	add    DWORD PTR [eax],eax
	...
100073e1:	add    BYTE PTR [eax],al
100073e3:	add    al,BYTE PTR [eax]
100073e5:	add    BYTE PTR [eax],al
100073e7:	add    eax,0x8000000
100073ec:	add    BYTE PTR [eax],al
100073ee:	add    BYTE PTR [ebx],cl
100073f0:	add    BYTE PTR [eax],al
100073f2:	add    BYTE PTR ds:0xf000000,cl
100073f8:	add    BYTE PTR [eax],al
100073fa:	add    BYTE PTR [ecx],dl
100073fc:	add    BYTE PTR [eax],al
100073fe:	add    BYTE PTR [edx],dl
10007400:	add    BYTE PTR [eax],al
10007402:	add    BYTE PTR [edx],dl
10007404:	add    BYTE PTR [eax],al
10007406:	add    BYTE PTR [eax],dl
10007408:	add    BYTE PTR [eax],al
1000740a:	add    BYTE PTR [esi],cl
1000740c:	add    BYTE PTR [eax],al
1000740e:	add    BYTE PTR ds:0xa000000,cl
10007414:	add    BYTE PTR [eax],al
10007416:	add    BYTE PTR [edi],al
10007418:	add    BYTE PTR [eax],al
1000741a:	add    BYTE PTR [eax+eax*1],al
1000741d:	add    BYTE PTR [eax],al
1000741f:	add    DWORD PTR [eax],eax
	...
10007495:	add    BYTE PTR [eax],al
10007497:	add    DWORD PTR [eax],eax
10007499:	add    BYTE PTR [eax],al
1000749b:	add    eax,DWORD PTR [eax]
1000749d:	add    BYTE PTR [eax],al
1000749f:	or     BYTE PTR [edx],dl
100074a1:	dec    eax
100074a2:	jg     0x100074bf
100074a4:	push   ds
100074a5:	jp     0x1000747e
100074a7:	data16 and BYTE PTR [esi-0x76de5417],al
100074ae:	out    dx,al
100074af:	leave  
100074b0:	and    cl,BYTE PTR [ebx-0x73dd200f]
100074b6:	hlt    
100074b7:	repnz and cl,BYTE PTR [esi+esi*8-0xa73dd01]
100074bf:	cmc    
100074c0:	and    cl,BYTE PTR [esp+esi*8-0x1176de0e]
100074c7:	shl    BYTE PTR [ecx],1
100074c9:	mov    ch,ch
100074cb:	retf   0x7f1f
100074ce:	fist   WORD PTR [edi+0x51b36619]
100074d4:	add    BYTE PTR [eax],al
100074d6:	add    BYTE PTR [edi],dl
100074d8:	add    BYTE PTR [eax],al
100074da:	add    BYTE PTR [edx],dl
100074dc:	add    BYTE PTR [eax],al
100074de:	add    BYTE PTR [ebx],cl
100074e0:	add    BYTE PTR [eax],al
100074e2:	add    BYTE PTR [esi],al
100074e4:	add    BYTE PTR [eax],al
100074e6:	add    BYTE PTR [edx],al
	...
10007550:	add    BYTE PTR [eax],al
10007552:	add    BYTE PTR [ebx],al
10007554:	add    BYTE PTR [eax],al
10007556:	add    BYTE PTR [eax],cl
10007558:	push   ds
10007559:	jge    0x10007536
1000755b:	pop    edx
1000755c:	and    DWORD PTR [edx-0x73dd3711],ecx
10007562:	cmc    
10007563:	cli    
10007564:	and    edx,DWORD PTR [edx-0x66db0c0b]
1000756a:	clc    
1000756b:	jmp    DWORD PTR ds:0x25fff89b
10007571:	popf   
10007572:	clc    
10007573:	jmp    DWORD PTR [esi]
10007575:	mov    al,ds:0xa126fff9
1000757a:	stc    
1000757b:	jmp    DWORD PTR [esi]
1000757d:	lahf   
1000757e:	stc    
1000757f:	jmp    DWORD PTR [esi]
10007581:	sahf   
10007582:	stc    
10007583:	jmp    DWORD PTR [edx+ebx*4]
10007586:	clc    
10007587:	jmp    DWORD PTR [edx+ebx*4]
1000758a:	clc    
1000758b:	jmp    DWORD PTR [ebx]
1000758d:	xchg   esp,eax
1000758e:	idiv   ebp
10007590:	and    cl,BYTE PTR [esi-0x73dd0d0c]
10007596:	cmc    
10007597:	stc    
10007598:	and    BYTE PTR [ebx+0x4b12aae5],al
1000759e:	test   BYTE PTR [esi],dh
100075a0:	add    BYTE PTR [eax],al
100075a2:	add    BYTE PTR ds:0xc000000,dl
100075a8:	add    BYTE PTR [eax],al
100075aa:	add    BYTE PTR [esi],al
100075ac:	add    BYTE PTR [eax],al
100075ae:	add    BYTE PTR [edx],al
	...
10007608:	add    BYTE PTR [eax],al
1000760a:	add    BYTE PTR [ecx],al
1000760c:	add    BYTE PTR [eax],al
1000760e:	add    BYTE PTR [esi],al
10007610:	sbb    eax,0x2249d177
10007615:	mov    esi,edx
10007617:	fldenv [ebx]
10007619:	xchg   ecx,eax
1000761a:	cmc    
1000761b:	repnz and eax,0x26fff99d
10007621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007622:	cli    
10007623:	jmp    DWORD PTR [esi]
10007625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007626:	cli    
10007627:	jmp    DWORD PTR [esi]
10007629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000762a:	cli    
1000762b:	jmp    DWORD PTR [esi]
1000762d:	mov    ds:0xa326fffa,eax
10007632:	cli    
10007633:	jmp    DWORD PTR [esi]
10007635:	mov    ds:0xa226fffa,eax
1000763a:	cli    
1000763b:	jmp    DWORD PTR [esi]
1000763d:	mov    ds:0xa126fff9,al
10007642:	stc    
10007643:	jmp    DWORD PTR [esi]
10007645:	mov    eax,ds:0xa126fff9
1000764a:	stc    
1000764b:	jmp    DWORD PTR ds:0x25fff9a0
10007651:	mov    al,ds:0x9e25fff9
10007656:	stc    
10007657:	jmp    DWORD PTR [edi+edx*4]
1000765a:	clc    
1000765b:	jmp    DWORD PTR [edx]
1000765d:	mov    ebp,?
1000765f:	mul    BYTE PTR [eax]
10007661:	test   bh,ah
10007663:	mov    ch,0xc
10007665:	xor    DWORD PTR [esi+0x28],edx
10007668:	add    BYTE PTR [eax],al
1000766a:	add    BYTE PTR [eax+eax*1],dl
1000766d:	add    BYTE PTR [eax],al
1000766f:	or     al,BYTE PTR [eax]
10007671:	add    BYTE PTR [eax],al
10007673:	add    al,0x0
10007675:	add    BYTE PTR [eax],al
10007677:	add    DWORD PTR [eax],eax
	...
100076c5:	add    BYTE PTR [eax],al
100076c7:	add    bl,BYTE PTR [edx]
100076c9:	push   0xffffffba
100076cb:	sbb    eax,0xc4f08b22
100076d0:	and    edx,DWORD PTR [eax-0x5fd90e0b]
100076d6:	stc    
100076d7:	jmp    DWORD PTR [edi]
100076d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100076da:	cli    
100076db:	jmp    DWORD PTR [edi]
100076dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100076de:	cli    
100076df:	jmp    DWORD PTR [edi]
100076e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100076e2:	cli    
100076e3:	jmp    DWORD PTR [edi]
100076e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100076e6:	cli    
100076e7:	jmp    DWORD PTR [esi]
100076e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100076ea:	cli    
100076eb:	jmp    DWORD PTR [esi]
100076ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100076ee:	cli    
100076ef:	jmp    DWORD PTR [esi]
100076f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100076f2:	cli    
100076f3:	jmp    DWORD PTR [esi]
100076f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100076f6:	cli    
100076f7:	jmp    DWORD PTR [esi]
100076f9:	mov    ds:0xa326fffa,eax
100076fe:	cli    
100076ff:	jmp    DWORD PTR [esi]
10007701:	mov    ds:0xa226fffa,al
10007706:	stc    
10007707:	jmp    DWORD PTR [esi]
10007709:	mov    eax,ds:0xa126fff9
1000770e:	stc    
1000770f:	jmp    DWORD PTR [esi]
10007711:	mov    al,ds:0xa025fff9
10007716:	stc    
10007717:	jmp    DWORD PTR ds:0x25fff99f
1000771d:	lahf   
1000771e:	stc    
1000771f:	jmp    DWORD PTR [ebx]
10007721:	xchg   esp,eax
10007722:	idiv   ebx
10007724:	and    cl,BYTE PTR [ebp+esi*8-0x1d7ee006]
1000772b:	mov    ds:0x19000000,eax
10007730:	add    BYTE PTR [eax],al
10007732:	add    BYTE PTR [edi],cl
10007734:	add    BYTE PTR [eax],al
10007736:	add    BYTE PTR ds:0x1000000,al
	...
10007780:	add    BYTE PTR [eax],al
10007782:	add    BYTE PTR [ebx],al
10007784:	sbb    eax,0x2234d077
10007789:	mov    esi,?
1000778b:	jmp    DWORD PTR ds:0x27fff99f
10007791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10007792:	cli    
10007793:	jmp    DWORD PTR [edi]
10007795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10007796:	cli    
10007797:	jmp    DWORD PTR [edi]
10007799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000779a:	cli    
1000779b:	jmp    DWORD PTR [edi]
1000779d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000779e:	cli    
1000779f:	jmp    DWORD PTR [edi]
100077a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100077a2:	cli    
100077a3:	jmp    DWORD PTR [edi]
100077a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100077a6:	cli    
100077a7:	jmp    DWORD PTR [edi]
100077a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100077aa:	cli    
100077ab:	jmp    DWORD PTR [edi]
100077ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100077ae:	cli    
100077af:	jmp    DWORD PTR [edi]
100077b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100077b2:	cli    
100077b3:	jmp    DWORD PTR [edi]
100077b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100077b6:	cli    
100077b7:	jmp    DWORD PTR [esi]
100077b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100077ba:	cli    
100077bb:	jmp    DWORD PTR [esi]
100077bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100077be:	cli    
100077bf:	jmp    DWORD PTR [esi]
100077c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100077c2:	cli    
100077c3:	jmp    DWORD PTR [esi]
100077c5:	mov    ds:0xa226fffa,eax
100077ca:	cli    
100077cb:	jmp    DWORD PTR [esi]
100077cd:	mov    ds:0xa126fff9,al
100077d2:	stc    
100077d3:	jmp    DWORD PTR [esi]
100077d5:	mov    eax,ds:0xa025fff9
100077da:	stc    
100077db:	jmp    DWORD PTR ds:0x25fff9a0
100077e1:	lahf   
100077e2:	stc    
100077e3:	jmp    DWORD PTR ds:0x23fff99e
100077e9:	xchg   edx,eax
100077ea:	div    bh
100077ec:	and    DWORD PTR [eax+0x340dd3ee],ecx
100077f2:	pop    esp
100077f3:	sub    eax,DWORD PTR [eax]
100077f5:	add    BYTE PTR [eax],al
100077f7:	adc    DWORD PTR [eax],eax
100077f9:	add    BYTE PTR [eax],al
100077fb:	pop    es
100077fc:	add    BYTE PTR [eax],al
100077fe:	add    BYTE PTR [ecx],al
	...
1000783c:	add    BYTE PTR [eax],al
1000783e:	add    BYTE PTR [ebx],al
10007840:	and    DWORD PTR [eax-0x70dd6d12],ecx
10007846:	cmc    
10007847:	repnz daa 
10007849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000784a:	cli    
1000784b:	jmp    DWORD PTR [edi]
1000784d:	test   al,0xfa
1000784f:	jmp    DWORD PTR [edi]
10007851:	test   al,0xfa
10007853:	jmp    DWORD PTR [edi]
10007855:	test   al,0xfa
10007857:	jmp    DWORD PTR [edi]
10007859:	test   al,0xfa
1000785b:	jmp    DWORD PTR [edi]
1000785d:	test   al,0xfa
1000785f:	jmp    DWORD PTR [edi]
10007861:	test   al,0xfa
10007863:	jmp    DWORD PTR [edi]
10007865:	test   al,0xfa
10007867:	jmp    DWORD PTR [edi]
10007869:	test   al,0xfa
1000786b:	jmp    DWORD PTR [edi]
1000786d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000786e:	cli    
1000786f:	jmp    DWORD PTR [edi]
10007871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10007872:	cli    
10007873:	jmp    DWORD PTR [edi]
10007875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10007876:	cli    
10007877:	jmp    DWORD PTR [edi]
10007879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000787a:	cli    
1000787b:	jmp    DWORD PTR [edi]
1000787d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000787e:	cli    
1000787f:	jmp    DWORD PTR [esi]
10007881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007882:	cli    
10007883:	jmp    DWORD PTR [esi]
10007885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007886:	cli    
10007887:	jmp    DWORD PTR [esi]
10007889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000788a:	cli    
1000788b:	jmp    DWORD PTR [esi]
1000788d:	mov    ds:0xa226fffa,eax
10007892:	cli    
10007893:	jmp    DWORD PTR [esi]
10007895:	mov    ds:0xa126fff9,al
1000789a:	stc    
1000789b:	jmp    DWORD PTR ds:0x25fff9a0
100078a1:	mov    al,ds:0x9f25fff9
100078a6:	stc    
100078a7:	jmp    DWORD PTR ds:0x23fff99f
100078ad:	xchg   esp,eax
100078ae:	idiv   ebp
100078b0:	and    cl,BYTE PTR [ebx+0x3d0feef3]
100078b6:	ins    BYTE PTR es:[edi],dx
100078b7:	xor    al,BYTE PTR [eax]
100078b9:	add    BYTE PTR [eax],al
100078bb:	adc    eax,DWORD PTR [eax]
100078bd:	add    BYTE PTR [eax],al
100078bf:	pop    es
100078c0:	add    BYTE PTR [eax],al
100078c2:	add    BYTE PTR [ecx],al
	...
100078f8:	add    BYTE PTR [eax],al
100078fa:	add    BYTE PTR [edx],al
100078fc:	and    DWORD PTR [edx-0x6ddc5e0f],ecx
10007902:	cmc    
10007903:	icebp  
10007904:	daa    
10007905:	test   al,0xfa
10007907:	jmp    FWORD PTR [eax]
10007909:	stos   BYTE PTR es:[edi],al
1000790a:	cli    
1000790b:	jmp    FWORD PTR [eax]
1000790d:	stos   BYTE PTR es:[edi],al
1000790e:	cli    
1000790f:	jmp    FWORD PTR [eax]
10007911:	stos   BYTE PTR es:[edi],al
10007912:	cli    
10007913:	jmp    FWORD PTR [eax]
10007915:	stos   BYTE PTR es:[edi],al
10007916:	cli    
10007917:	jmp    FWORD PTR [eax]
10007919:	stos   BYTE PTR es:[edi],al
1000791a:	cli    
1000791b:	jmp    FWORD PTR [eax]
1000791d:	stos   BYTE PTR es:[edi],al
1000791e:	cli    
1000791f:	jmp    FWORD PTR [eax]
10007921:	stos   BYTE PTR es:[edi],al
10007922:	cli    
10007923:	jmp    DWORD PTR [edi]
10007925:	test   eax,0xa927fffa
1000792a:	cli    
1000792b:	jmp    DWORD PTR [edi]
1000792d:	test   eax,0xa827fffa
10007932:	cli    
10007933:	jmp    DWORD PTR [edi]
10007935:	test   al,0xfa
10007937:	jmp    DWORD PTR [edi]
10007939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000793a:	cli    
1000793b:	jmp    DWORD PTR [edi]
1000793d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000793e:	cli    
1000793f:	jmp    DWORD PTR [edi]
10007941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10007942:	cli    
10007943:	jmp    DWORD PTR [edi]
10007945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007946:	cli    
10007947:	jmp    DWORD PTR [esi]
10007949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000794a:	cli    
1000794b:	jmp    DWORD PTR [esi]
1000794d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000794e:	cli    
1000794f:	jmp    DWORD PTR [esi]
10007951:	mov    ds:0xa226fffa,eax
10007956:	cli    
10007957:	jmp    DWORD PTR [esi]
10007959:	mov    ds:0xa126fff9,al
1000795e:	stc    
1000795f:	jmp    DWORD PTR [esi]
10007961:	mov    al,ds:0xa025fff9
10007966:	stc    
10007967:	jmp    DWORD PTR ds:0x25fff99f
1000796d:	lahf   
1000796e:	stc    
1000796f:	jmp    DWORD PTR ds:0x22fff99c
10007975:	mov    ebp,?
10007977:	cli    
10007978:	(bad)  
1000797a:	ins    BYTE PTR es:[edi],dx
1000797b:	xor    al,BYTE PTR [eax]
1000797d:	add    BYTE PTR [eax],al
1000797f:	adc    eax,DWORD PTR [eax]
10007981:	add    BYTE PTR [eax],al
10007983:	pop    es
10007984:	add    BYTE PTR [eax],al
10007986:	add    BYTE PTR [ecx],al
	...
100079b4:	add    BYTE PTR [eax],al
100079b6:	add    BYTE PTR [ecx],al
100079b8:	and    DWORD PTR [edx-0x6bdc6610],ecx
100079be:	div    dl
100079c0:	sub    BYTE PTR [ebx-0x54d70005],ch
100079c6:	sti    
100079c7:	jmp    FWORD PTR [eax]
100079c9:	stos   DWORD PTR es:[edi],eax
100079ca:	sti    
100079cb:	jmp    FWORD PTR [eax]
100079cd:	stos   DWORD PTR es:[edi],eax
100079ce:	sti    
100079cf:	jmp    FWORD PTR [eax]
100079d1:	lods   al,BYTE PTR ds:[esi]
100079d2:	sti    
100079d3:	jmp    FWORD PTR [eax]
100079d5:	lods   al,BYTE PTR ds:[esi]
100079d6:	sti    
100079d7:	jmp    FWORD PTR [eax]
100079d9:	lods   al,BYTE PTR ds:[esi]
100079da:	sti    
100079db:	jmp    FWORD PTR [eax]
100079dd:	stos   DWORD PTR es:[edi],eax
100079de:	sti    
100079df:	jmp    FWORD PTR [eax]
100079e1:	stos   DWORD PTR es:[edi],eax
100079e2:	sti    
100079e3:	jmp    FWORD PTR [eax]
100079e5:	stos   DWORD PTR es:[edi],eax
100079e6:	sti    
100079e7:	jmp    FWORD PTR [eax]
100079e9:	stos   DWORD PTR es:[edi],eax
100079ea:	sti    
100079eb:	jmp    FWORD PTR [eax]
100079ed:	stos   BYTE PTR es:[edi],al
100079ee:	cli    
100079ef:	jmp    FWORD PTR [eax]
100079f1:	stos   BYTE PTR es:[edi],al
100079f2:	cli    
100079f3:	jmp    DWORD PTR [edi]
100079f5:	test   eax,0xa927fffa
100079fa:	cli    
100079fb:	jmp    DWORD PTR [edi]
100079fd:	test   al,0xfa
100079ff:	jmp    DWORD PTR [edi]
10007a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10007a02:	cli    
10007a03:	jmp    DWORD PTR [edi]
10007a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10007a06:	cli    
10007a07:	jmp    DWORD PTR [edi]
10007a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10007a0a:	cli    
10007a0b:	jmp    DWORD PTR [edi]
10007a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007a0e:	cli    
10007a0f:	jmp    DWORD PTR [esi]
10007a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007a12:	cli    
10007a13:	jmp    DWORD PTR [esi]
10007a15:	mov    ds:0xa326fffa,eax
10007a1a:	cli    
10007a1b:	jmp    DWORD PTR [esi]
10007a1d:	mov    ds:0xa126fff9,al
10007a22:	stc    
10007a23:	jmp    DWORD PTR [esi]
10007a25:	mov    al,ds:0xa025fff9
10007a2a:	stc    
10007a2b:	jmp    DWORD PTR ds:0x25fff99f
10007a31:	sahf   
10007a32:	stc    
10007a33:	jmp    DWORD PTR ds:0x22fff99c
10007a39:	mov    esi,?
10007a3b:	cld    
10007a3c:	(bad)  
10007a3e:	outs   dx,BYTE PTR ds:[esi]
10007a3f:	xor    DWORD PTR [eax],eax
10007a41:	add    BYTE PTR [eax],al
10007a43:	adc    DWORD PTR [eax],eax
10007a45:	add    BYTE PTR [eax],al
10007a47:	add    eax,0x0
	...
10007a74:	and    BYTE PTR [ebx-0x6fdcc31a],al
10007a7a:	div    cl
10007a7c:	sub    BYTE PTR [ebx-0x53d70005],ch
10007a82:	sti    
10007a83:	jmp    FWORD PTR [eax]
10007a85:	lods   eax,DWORD PTR ds:[esi]
10007a86:	sti    
10007a87:	jmp    FWORD PTR [eax]
10007a89:	lods   eax,DWORD PTR ds:[esi]
10007a8a:	sti    
10007a8b:	jmp    FWORD PTR [eax]
10007a8d:	lods   eax,DWORD PTR ds:[esi]
10007a8e:	sti    
10007a8f:	jmp    FWORD PTR [eax]
10007a91:	lods   eax,DWORD PTR ds:[esi]
10007a92:	sti    
10007a93:	jmp    FWORD PTR [eax]
10007a95:	lods   eax,DWORD PTR ds:[esi]
10007a96:	sti    
10007a97:	jmp    FWORD PTR [eax]
10007a99:	lods   eax,DWORD PTR ds:[esi]
10007a9a:	sti    
10007a9b:	jmp    FWORD PTR [eax]
10007a9d:	lods   eax,DWORD PTR ds:[esi]
10007a9e:	sti    
10007a9f:	jmp    FWORD PTR [eax]
10007aa1:	lods   eax,DWORD PTR ds:[esi]
10007aa2:	sti    
10007aa3:	jmp    FWORD PTR [eax]
10007aa5:	lods   eax,DWORD PTR ds:[esi]
10007aa6:	sti    
10007aa7:	jmp    FWORD PTR [eax]
10007aa9:	lods   al,BYTE PTR ds:[esi]
10007aaa:	sti    
10007aab:	jmp    FWORD PTR [eax]
10007aad:	lods   al,BYTE PTR ds:[esi]
10007aae:	sti    
10007aaf:	jmp    FWORD PTR [eax]
10007ab1:	stos   DWORD PTR es:[edi],eax
10007ab2:	sti    
10007ab3:	jmp    FWORD PTR [eax]
10007ab5:	stos   DWORD PTR es:[edi],eax
10007ab6:	sti    
10007ab7:	jmp    FWORD PTR [eax]
10007ab9:	stos   BYTE PTR es:[edi],al
10007aba:	cli    
10007abb:	jmp    DWORD PTR [edi]
10007abd:	test   eax,0xa927fffa
10007ac2:	cli    
10007ac3:	jmp    DWORD PTR [edi]
10007ac5:	test   al,0xfa
10007ac7:	jmp    DWORD PTR [edi]
10007ac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10007aca:	cli    
10007acb:	jmp    DWORD PTR [edi]
10007acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10007ace:	cli    
10007acf:	jmp    DWORD PTR [edi]
10007ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007ad2:	cli    
10007ad3:	jmp    DWORD PTR [esi]
10007ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007ad6:	cli    
10007ad7:	jmp    DWORD PTR [esi]
10007ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007ada:	cli    
10007adb:	jmp    DWORD PTR [esi]
10007add:	mov    ds:0xa226fffa,eax
10007ae2:	stc    
10007ae3:	jmp    DWORD PTR [esi]
10007ae5:	mov    eax,ds:0xa026fff9
10007aea:	stc    
10007aeb:	jmp    DWORD PTR ds:0x25fff9a0
10007af1:	lahf   
10007af2:	stc    
10007af3:	jmp    DWORD PTR ds:0x25fff99e
10007af9:	pushf  
10007afa:	stc    
10007afb:	jmp    DWORD PTR [edx]
10007afd:	mov    esi,ebx
10007aff:	in     al,dx
10007b00:	or     DWORD PTR [esi],esp
10007b02:	inc    ebx
10007b03:	and    eax,0xd000000
10007b08:	add    BYTE PTR [eax],al
10007b0a:	add    BYTE PTR [ebx],al
	...
10007b30:	sbb    al,0x75
10007b32:	int    0xc
10007b34:	and    cl,BYTE PTR [ebp-0x55d8070a]
10007b3a:	sti    
10007b3b:	jmp    FWORD PTR [eax]
10007b3d:	lods   eax,DWORD PTR ds:[esi]
10007b3e:	sti    
10007b3f:	jmp    FWORD PTR [eax]
10007b41:	scas   al,BYTE PTR es:[edi]
10007b42:	sti    
10007b43:	jmp    FWORD PTR [eax]
10007b45:	scas   al,BYTE PTR es:[edi]
10007b46:	sti    
10007b47:	jmp    FWORD PTR [ecx]
10007b49:	scas   al,BYTE PTR es:[edi]
10007b4a:	sti    
10007b4b:	jmp    FWORD PTR [ecx]
10007b4d:	scas   eax,DWORD PTR es:[edi]
10007b4e:	sti    
10007b4f:	jmp    FWORD PTR [ecx]
10007b51:	scas   eax,DWORD PTR es:[edi]
10007b52:	sti    
10007b53:	jmp    FWORD PTR [ecx]
10007b55:	scas   eax,DWORD PTR es:[edi]
10007b56:	sti    
10007b57:	jmp    FWORD PTR [ecx]
10007b59:	scas   eax,DWORD PTR es:[edi]
10007b5a:	sti    
10007b5b:	jmp    FWORD PTR [ecx]
10007b5d:	scas   eax,DWORD PTR es:[edi]
10007b5e:	sti    
10007b5f:	jmp    FWORD PTR [ecx]
10007b61:	scas   al,BYTE PTR es:[edi]
10007b62:	sti    
10007b63:	jmp    FWORD PTR [eax]
10007b65:	scas   al,BYTE PTR es:[edi]
10007b66:	sti    
10007b67:	inc    DWORD PTR [edi-0x7900040c]
10007b6d:	hlt    
10007b6e:	sti    
10007b6f:	inc    DWORD PTR [esi-0x7a00040c]
10007b75:	hlt    
10007b76:	sti    
10007b77:	inc    DWORD PTR [esp+esi*8-0xb7c0005]
10007b7e:	sti    
10007b7f:	inc    DWORD PTR [ebx-0x7c00040c]
10007b85:	hlt    
10007b86:	sti    
10007b87:	inc    DWORD PTR [ebx-0x7c00040c]
10007b8d:	hlt    
10007b8e:	sti    
10007b8f:	jmp    DWORD PTR [edi]
10007b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10007b92:	cli    
10007b93:	jmp    DWORD PTR [edi]
10007b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007b96:	cli    
10007b97:	jmp    DWORD PTR [esi]
10007b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007b9a:	cli    
10007b9b:	jmp    DWORD PTR [esi]
10007b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007b9e:	cli    
10007b9f:	jmp    DWORD PTR [esi]
10007ba1:	mov    ds:0xa226fffa,eax
10007ba6:	stc    
10007ba7:	jmp    DWORD PTR [esi]
10007ba9:	mov    eax,ds:0xa025fff9
10007bae:	stc    
10007baf:	jmp    DWORD PTR ds:0x25fff9a0
10007bb5:	lahf   
10007bb6:	stc    
10007bb7:	jmp    DWORD PTR ds:0x23fff99e
10007bbd:	xchg   ebx,eax
10007bbe:	idiv   dl
10007bc0:	and    DWORD PTR [edi+0xc1eb],eax
10007bc6:	add    BYTE PTR [esi],dl
10007bc8:	add    BYTE PTR [eax],al
10007bca:	add    BYTE PTR [edi],al
10007bcc:	add    BYTE PTR [eax],al
10007bce:	add    BYTE PTR [ecx],al
	...
10007bf0:	and    cl,BYTE PTR [ebx+esi*8-0x765da58]
10007bf7:	cli    
10007bf8:	sub    BYTE PTR [esi-0x50d60005],ch
10007bfe:	sti    
10007bff:	jmp    FWORD PTR [ecx]
10007c01:	scas   eax,DWORD PTR es:[edi]
10007c02:	sti    
10007c03:	jmp    FWORD PTR [ecx]
10007c05:	mov    al,0xfb
10007c07:	jmp    FWORD PTR [ecx]
10007c09:	mov    al,0xfb
10007c0b:	jmp    FWORD PTR [ecx]
10007c0d:	mov    al,0xfb
10007c0f:	jmp    FWORD PTR [ecx]
10007c11:	mov    cl,0xfb
10007c13:	jmp    FWORD PTR [ecx]
10007c15:	mov    cl,0xfb
10007c17:	jmp    FWORD PTR [ecx]
10007c19:	mov    cl,0xfb
10007c1b:	jmp    FWORD PTR [ecx]
10007c1d:	mov    al,0xfb
10007c1f:	jmp    FWORD PTR [ecx]
10007c21:	mov    al,0xfb
10007c23:	jmp    FWORD PTR [ecx]
10007c25:	mov    al,0xfb
10007c27:	dec    DWORD PTR [ebx-0x7400040b]
10007c2d:	cmc    
10007c2e:	sti    
10007c2f:	dec    DWORD PTR [edx-0x7600040b]
10007c35:	cmc    
10007c36:	sti    
10007c37:	dec    DWORD PTR [eax-0x7900040c]
10007c3d:	hlt    
10007c3e:	sti    
10007c3f:	inc    DWORD PTR [ebp-0x7c00040c]
10007c45:	hlt    
10007c46:	sti    
10007c47:	inc    DWORD PTR [ebx-0x7f00040c]
10007c4d:	icebp  
10007c4e:	sti    
10007c4f:	jmp    DWORD PTR [edi]
10007c51:	test   al,0xfa
10007c53:	jmp    DWORD PTR [edi]
10007c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10007c56:	cli    
10007c57:	jmp    DWORD PTR [edi]
10007c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10007c5a:	cli    
10007c5b:	jmp    DWORD PTR [esi]
10007c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007c5e:	cli    
10007c5f:	jmp    DWORD PTR [esi]
10007c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007c62:	cli    
10007c63:	jmp    DWORD PTR [esi]
10007c65:	mov    ds:0xa226fffa,eax
10007c6a:	stc    
10007c6b:	jmp    DWORD PTR [esi]
10007c6d:	mov    eax,ds:0xa025fff9
10007c72:	stc    
10007c73:	jmp    DWORD PTR ds:0x25fff99f
10007c79:	lahf   
10007c7a:	stc    
10007c7b:	jmp    DWORD PTR ds:0x22fff99e
10007c81:	(bad)  
10007c82:	hlt    
10007c83:	repnz pop ss
10007c85:	popa   
10007c86:	stos   BYTE PTR es:[edi],al
10007c87:	dec    ebp
10007c88:	add    BYTE PTR [eax],al
10007c8a:	add    BYTE PTR [edi],cl
10007c8c:	add    BYTE PTR [eax],al
10007c8e:	add    BYTE PTR [ebx],al
	...
10007cac:	pop    ds
10007cad:	and    ebx,0xf68d2219
10007cb3:	imul   BYTE PTR [ecx]
10007cb5:	scas   eax,DWORD PTR es:[edi]
10007cb6:	sti    
10007cb7:	jmp    FWORD PTR [ecx]
10007cb9:	mov    al,0xfb
10007cbb:	jmp    FWORD PTR [ecx]
10007cbd:	mov    al,0xfb
10007cbf:	jmp    FWORD PTR [ecx]
10007cc1:	mov    cl,0xfb
10007cc3:	jmp    FWORD PTR [ecx]
10007cc5:	mov    cl,0xfb
10007cc7:	jmp    FWORD PTR [ecx]
10007cc9:	mov    dl,0xfb
10007ccb:	jmp    FWORD PTR [ecx]
10007ccd:	mov    dl,0xfb
10007ccf:	jmp    FWORD PTR [ecx]
10007cd1:	mov    dl,0xfb
10007cd3:	jmp    FWORD PTR [ecx]
10007cd5:	mov    dl,0xfb
10007cd7:	jmp    FWORD PTR [ecx]
10007cd9:	mov    dl,0xfb
10007cdb:	jmp    FWORD PTR [ecx]
10007cdd:	mov    dl,0xfb
10007cdf:	jmp    FWORD PTR [ecx]
10007ce1:	mov    dl,0xfb
10007ce3:	jmp    FWORD PTR [ecx]
10007ce5:	mov    cl,0xfb
10007ce7:	call   DWORD PTR [ecx-0x6f00030b]
10007ced:	cmc    
10007cee:	cld    
10007cef:	dec    DWORD PTR [edi-0x7100030b]
10007cf5:	cmc    
10007cf6:	sti    
10007cf7:	dec    DWORD PTR [ebp+esi*8-0xa740005]
10007cfe:	sti    
10007cff:	dec    DWORD PTR [ecx-0x7800040b]
10007d05:	hlt    
10007d06:	sti    
10007d07:	inc    DWORD PTR [ebp-0x7c00040c]
10007d0d:	hlt    
10007d0e:	sti    
10007d0f:	jmp    DWORD PTR [edi]
10007d11:	test   eax,0xa827fffa
10007d16:	cli    
10007d17:	jmp    DWORD PTR [edi]
10007d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10007d1a:	cli    
10007d1b:	jmp    DWORD PTR [edi]
10007d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007d1e:	cli    
10007d1f:	jmp    DWORD PTR [esi]
10007d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007d22:	cli    
10007d23:	jmp    DWORD PTR [esi]
10007d25:	mov    ds:0xa226fffa,eax
10007d2a:	cli    
10007d2b:	jmp    DWORD PTR [esi]
10007d2d:	mov    ds:0xa126fff9,al
10007d32:	stc    
10007d33:	jmp    DWORD PTR ds:0x25fff9a0
10007d39:	lahf   
10007d3a:	stc    
10007d3b:	jmp    DWORD PTR ds:0x24fff99e
10007d41:	cdq    
10007d42:	clc    
10007d43:	jmp    DWORD PTR [ecx]
10007d45:	mov    edi,ebp
10007d47:	aad    0x0
10007d49:	add    BYTE PTR [eax],al
10007d4b:	sbb    BYTE PTR [eax],al
10007d4d:	add    BYTE PTR [eax],al
10007d4f:	or     BYTE PTR [eax],al
10007d51:	add    BYTE PTR [eax],al
10007d53:	add    DWORD PTR [eax],eax
	...
10007d69:	add    BYTE PTR [eax],al
10007d6b:	add    BYTE PTR [edx],ah
10007d6d:	(bad)  
10007d6e:	hlt    
10007d6f:	mov    dh,0x25
10007d71:	popf   
10007d72:	clc    
10007d73:	(bad)  
10007d74:	sub    DWORD PTR [ecx-0x4ed60005],esi
10007d7a:	sti    
10007d7b:	jmp    FWORD PTR [ecx]
10007d7d:	mov    dl,0xfb
10007d7f:	jmp    FWORD PTR [ecx]
10007d81:	mov    bl,0xfb
10007d83:	jmp    FWORD PTR [edx]
10007d85:	mov    bl,0xfc
10007d87:	jmp    FWORD PTR [edx]
10007d89:	mov    bl,0xfc
10007d8b:	jmp    FWORD PTR [edx]
10007d8d:	mov    ah,0xfc
10007d8f:	jmp    FWORD PTR [edx]
10007d91:	mov    ah,0xfc
10007d93:	jmp    FWORD PTR [edx]
10007d95:	mov    ah,0xfc
10007d97:	jmp    FWORD PTR [edx]
10007d99:	mov    ah,0xfc
10007d9b:	jmp    FWORD PTR [edx]
10007d9d:	mov    ah,0xfc
10007d9f:	jmp    FWORD PTR [edx]
10007da1:	mov    bl,0xfc
10007da3:	jmp    FWORD PTR [edx]
10007da5:	mov    bl,0xfc
10007da7:	call   DWORD PTR [edi-0x6800030a]
10007dad:	idiv   ah
10007daf:	call   DWORD PTR [ebp-0x6b00030a]
10007db5:	idiv   ah
10007db7:	call   DWORD PTR [edx-0x6f00030a]
10007dbd:	cmc    
10007dbe:	cld    
10007dbf:	dec    DWORD PTR [ebp-0x7400040b]
10007dc5:	cmc    
10007dc6:	sti    
10007dc7:	dec    DWORD PTR [eax-0x7c00040b]
10007dcd:	icebp  
10007dce:	sti    
10007dcf:	jmp    FWORD PTR [eax]
10007dd1:	stos   BYTE PTR es:[edi],al
10007dd2:	cli    
10007dd3:	jmp    DWORD PTR [edi]
10007dd5:	test   eax,0xa827fffa
10007dda:	cli    
10007ddb:	jmp    DWORD PTR [edi]
10007ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10007dde:	cli    
10007ddf:	jmp    DWORD PTR [edi]
10007de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007de2:	cli    
10007de3:	jmp    DWORD PTR [esi]
10007de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007de6:	cli    
10007de7:	jmp    DWORD PTR [esi]
10007de9:	mov    ds:0xa226fffa,eax
10007dee:	cli    
10007def:	jmp    DWORD PTR [esi]
10007df1:	mov    eax,ds:0xa026fff9
10007df6:	stc    
10007df7:	jmp    DWORD PTR ds:0x25fff9a0
10007dfd:	lahf   
10007dfe:	stc    
10007dff:	jmp    DWORD PTR ds:0x23fff99e
10007e05:	(bad)  
10007e06:	hlt    
10007e07:	repnz sbb ch,BYTE PTR [ebp-0x41]
10007e0b:	arpl   WORD PTR [eax],ax
10007e0d:	add    BYTE PTR [eax],al
10007e0f:	sldt   WORD PTR [eax]
10007e12:	add    BYTE PTR [ebx],al
	...
10007e28:	and    DWORD PTR [eax-0x70dcd811],ecx
10007e2e:	div    bl
10007e30:	sub    DWORD PTR [ecx-0x4dd60005],esi
10007e36:	sti    
10007e37:	jmp    FWORD PTR [ecx]
10007e39:	mov    bl,0xfb
10007e3b:	jmp    FWORD PTR [edx]
10007e3d:	mov    ah,0xfc
10007e3f:	jmp    FWORD PTR [edx]
10007e41:	mov    ah,0xfc
10007e43:	jmp    FWORD PTR [edx]
10007e45:	mov    ch,0xfc
10007e47:	jmp    FWORD PTR [edx]
10007e49:	mov    ch,0xfc
10007e4b:	jmp    FWORD PTR [edx]
10007e4d:	mov    ch,0xfc
10007e4f:	jmp    FWORD PTR [edx]
10007e51:	mov    dh,0xfc
10007e53:	jmp    FWORD PTR [edx]
10007e55:	mov    dh,0xfc
10007e57:	jmp    FWORD PTR [edx]
10007e59:	mov    dh,0xfc
10007e5b:	jmp    FWORD PTR [edx]
10007e5d:	mov    ch,0xfc
10007e5f:	jmp    FWORD PTR [edx]
10007e61:	mov    ch,0xfc
10007e63:	jmp    FWORD PTR [edx]
10007e65:	mov    ch,0xfc
10007e67:	call   FWORD PTR [esi-0x62000309]
10007e6d:	idiv   esp
10007e6f:	call   FWORD PTR [edi+esi*8-0x9650004]
10007e76:	cld    
10007e77:	call   FWORD PTR [eax-0x6a00030a]
10007e7d:	idiv   ah
10007e7f:	call   DWORD PTR [ebx-0x6f00030a]
10007e85:	cmc    
10007e86:	cld    
10007e87:	dec    DWORD PTR [ebp+esi*8-0xd790005]
10007e8e:	sti    
10007e8f:	jmp    FWORD PTR [eax]
10007e91:	stos   DWORD PTR es:[edi],eax
10007e92:	sti    
10007e93:	jmp    DWORD PTR [edi]
10007e95:	stos   BYTE PTR es:[edi],al
10007e96:	cli    
10007e97:	jmp    DWORD PTR [edi]
10007e99:	test   al,0xfa
10007e9b:	jmp    DWORD PTR [edi]
10007e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10007e9e:	cli    
10007e9f:	jmp    DWORD PTR [edi]
10007ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10007ea2:	cli    
10007ea3:	jmp    DWORD PTR [edi]
10007ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007ea6:	cli    
10007ea7:	jmp    DWORD PTR [esi]
10007ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007eaa:	cli    
10007eab:	jmp    DWORD PTR [esi]
10007ead:	mov    ds:0xa226fffa,eax
10007eb2:	stc    
10007eb3:	jmp    DWORD PTR [esi]
10007eb5:	mov    eax,ds:0xa025fff9
10007eba:	stc    
10007ebb:	jmp    DWORD PTR ds:0x25fff99f
10007ec1:	lahf   
10007ec2:	stc    
10007ec3:	jmp    DWORD PTR [edx+ebx*4]
10007ec6:	clc    
10007ec7:	jmp    DWORD PTR [ecx]
10007ec9:	mov    dh,cl
10007ecb:	loop   0x10007ecd
10007ecd:	add    BYTE PTR [eax],al
10007ecf:	push   ss
10007ed0:	add    BYTE PTR [eax],al
10007ed2:	add    BYTE PTR [esi],al
	...
10007ee8:	and    cl,BYTE PTR [esp+esi*8-0x762da69]
10007eef:	sti    
10007ef0:	sub    DWORD PTR [ebx-0x4cd50005],esi
10007ef6:	cld    
10007ef7:	jmp    FWORD PTR [edx]
10007ef9:	mov    ah,0xfc
10007efb:	jmp    FWORD PTR [edx]
10007efd:	mov    ch,0xfc
10007eff:	jmp    FWORD PTR [edx]
10007f01:	mov    dh,0xfc
10007f03:	jmp    FWORD PTR [edx]
10007f05:	mov    dh,0xfc
10007f07:	jmp    FWORD PTR [edx]
10007f09:	mov    bh,0xfc
10007f0b:	jmp    FWORD PTR [edx]
10007f0d:	mov    bh,0xfc
10007f0f:	jmp    FWORD PTR [edx]
10007f11:	mov    bh,0xfc
10007f13:	jmp    FWORD PTR [edx]
10007f15:	mov    bh,0xfc
10007f17:	jmp    FWORD PTR [edx]
10007f19:	mov    bh,0xfc
10007f1b:	jmp    FWORD PTR [edx]
10007f1d:	mov    bh,0xfc
10007f1f:	jmp    FWORD PTR [edx]
10007f21:	mov    bh,0xfc
10007f23:	jmp    FWORD PTR [edx]
10007f25:	mov    dh,0xfc
10007f27:	jmp    DWORD PTR [esi-0x5a000308]
10007f2d:	idiv   esp
10007f2f:	jmp    DWORD PTR [ebx-0x5e000309]
10007f35:	idiv   esp
10007f37:	call   FWORD PTR [edi-0x63000309]
10007f3d:	idiv   ah
10007f3f:	call   FWORD PTR [eax-0x6a00030a]
10007f45:	idiv   ah
10007f47:	call   DWORD PTR [ecx-0x7500030b]
10007f4d:	repnz sti 
10007f4f:	jmp    FWORD PTR [eax]
10007f51:	lods   al,BYTE PTR ds:[esi]
10007f52:	sti    
10007f53:	jmp    FWORD PTR [eax]
10007f55:	stos   DWORD PTR es:[edi],eax
10007f56:	sti    
10007f57:	jmp    DWORD PTR [edi]
10007f59:	test   eax,0xa827fffa
10007f5e:	cli    
10007f5f:	jmp    DWORD PTR [edi]
10007f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10007f62:	cli    
10007f63:	jmp    DWORD PTR [edi]
10007f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10007f66:	cli    
10007f67:	jmp    DWORD PTR [esi]
10007f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007f6a:	cli    
10007f6b:	jmp    DWORD PTR [esi]
10007f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10007f6e:	cli    
10007f6f:	jmp    DWORD PTR [esi]
10007f71:	mov    ds:0xa126fffa,al
10007f76:	stc    
10007f77:	jmp    DWORD PTR [esi]
10007f79:	mov    eax,ds:0xa025fff9
10007f7e:	stc    
10007f7f:	jmp    DWORD PTR ds:0x25fff99f
10007f85:	sahf   
10007f86:	stc    
10007f87:	jmp    DWORD PTR [edx]
10007f89:	(bad)  
10007f8a:	hlt    
10007f8b:	repz pop ss
10007f8d:	pop    esi
10007f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10007f8f:	inc    esi
10007f90:	add    BYTE PTR [eax],al
10007f92:	add    BYTE PTR [edx],cl
10007f94:	add    BYTE PTR [eax],al
10007f96:	add    BYTE PTR [ecx],al
	...
10007fa8:	and    cl,BYTE PTR [esi-0x52d7170a]
10007fae:	cli    
10007faf:	jmp    FWORD PTR [edx]
10007fb1:	mov    ah,0xfc
10007fb3:	jmp    FWORD PTR [edx]
10007fb5:	mov    ch,0xfc
10007fb7:	jmp    FWORD PTR [edx]
10007fb9:	mov    dh,0xfc
10007fbb:	jmp    FWORD PTR [edx]
10007fbd:	mov    bh,0xfc
10007fbf:	jmp    FWORD PTR [edx]
10007fc1:	mov    bh,0xfc
10007fc3:	jmp    FWORD PTR [ebx]
10007fc5:	mov    eax,0xb82bfffc
10007fca:	cld    
10007fcb:	jmp    FWORD PTR [ebx]
10007fcd:	mov    ecx,0xb92bfffc
10007fd2:	cld    
10007fd3:	jmp    FWORD PTR [ebx]
10007fd5:	mov    ecx,0xb92bfffc
10007fda:	cld    
10007fdb:	jmp    FWORD PTR [ebx]
10007fdd:	mov    ecx,0xb82bfffc
10007fe2:	cld    
10007fe3:	jmp    FWORD PTR [ebx]
10007fe5:	mov    eax,0xf8adfffc
10007fea:	std    
10007feb:	jmp    FWORD PTR [eax+edi*8-0x7540003]
10007ff2:	std    
10007ff3:	jmp    FWORD PTR [eax-0x5a000208]
10007ff9:	idiv   esp
10007ffb:	jmp    DWORD PTR [edx-0x61000309]
10008001:	idiv   esp
10008003:	call   FWORD PTR [edx-0x6900030a]
10008009:	idiv   ah
1000800b:	dec    DWORD PTR [esi+0x28fffcf3]
10008011:	lods   eax,DWORD PTR ds:[esi]
10008012:	sti    
10008013:	jmp    FWORD PTR [eax]
10008015:	lods   al,BYTE PTR ds:[esi]
10008016:	sti    
10008017:	jmp    FWORD PTR [eax]
10008019:	stos   BYTE PTR es:[edi],al
1000801a:	cli    
1000801b:	jmp    DWORD PTR [edi]
1000801d:	test   eax,0xa827fffa
10008022:	cli    
10008023:	jmp    DWORD PTR [edi]
10008025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10008026:	cli    
10008027:	jmp    DWORD PTR [edi]
10008029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000802a:	cli    
1000802b:	jmp    DWORD PTR [esi]
1000802d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000802e:	cli    
1000802f:	jmp    DWORD PTR [esi]
10008031:	mov    ds:0xa226fffa,eax
10008036:	stc    
10008037:	jmp    DWORD PTR [esi]
10008039:	mov    eax,ds:0xa025fff9
1000803e:	stc    
1000803f:	jmp    DWORD PTR ds:0x25fff99f
10008045:	sahf   
10008046:	stc    
10008047:	jmp    DWORD PTR [ebx]
10008049:	xchg   esp,eax
1000804a:	idiv   ebx
1000804c:	pop    ds
1000804d:	and    al,0x9b
10008050:	add    BYTE PTR [eax],al
10008052:	add    BYTE PTR [edi],cl
10008054:	add    BYTE PTR [eax],al
10008056:	add    BYTE PTR [ebx],al
	...
10008064:	and    cl,BYTE PTR [esi+esi*8-0x970dce0]
1000806b:	hlt    
1000806c:	sub    dh,BYTE PTR [esp+edi*8-0x34ad501]
10008073:	jmp    FWORD PTR [edx]
10008075:	mov    dh,0xfc
10008077:	jmp    FWORD PTR [edx]
10008079:	mov    bh,0xfc
1000807b:	jmp    FWORD PTR [ebx]
1000807d:	mov    eax,0xb92bfffc
10008082:	cld    
10008083:	jmp    FWORD PTR [ebx]
10008085:	mov    ecx,0xba2bfffc
1000808a:	cld    
1000808b:	jmp    FWORD PTR [ebx]
1000808d:	mov    edx,0xba2bfffc
10008092:	cld    
10008093:	jmp    FWORD PTR [ebx]
10008095:	mov    ebx,0xba2bfffc
1000809a:	cld    
1000809b:	jmp    FWORD PTR [ebx]
1000809d:	mov    edx,0xba2bfffc
100080a2:	cld    
100080a3:	jmp    FWORD PTR [ebx]
100080a5:	mov    ecx,0xf9b4fffc
100080aa:	std    
100080ab:	push   DWORD PTR [ebx-0x4d000207]
100080b1:	stc    
100080b2:	std    
100080b3:	jmp    FWORD PTR [edi-0x53000207]
100080b9:	clc    
100080ba:	std    
100080bb:	jmp    FWORD PTR [ecx-0x5b000208]
100080c1:	idiv   esp
100080c3:	jmp    DWORD PTR [eax-0x64000309]
100080c9:	idiv   ah
100080cb:	call   DWORD PTR [ebx+0x28fffcf3]
100080d1:	scas   al,BYTE PTR es:[edi]
100080d2:	sti    
100080d3:	jmp    FWORD PTR [eax]
100080d5:	lods   eax,DWORD PTR ds:[esi]
100080d6:	sti    
100080d7:	jmp    FWORD PTR [eax]
100080d9:	stos   DWORD PTR es:[edi],eax
100080da:	sti    
100080db:	jmp    FWORD PTR [eax]
100080dd:	stos   BYTE PTR es:[edi],al
100080de:	cli    
100080df:	jmp    DWORD PTR [edi]
100080e1:	test   eax,0xa727fffa
100080e6:	cli    
100080e7:	jmp    DWORD PTR [edi]
100080e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100080ea:	cli    
100080eb:	jmp    DWORD PTR [esi]
100080ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100080ee:	cli    
100080ef:	jmp    DWORD PTR [esi]
100080f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100080f2:	cli    
100080f3:	jmp    DWORD PTR [esi]
100080f5:	mov    ds:0xa126fffa,al
100080fa:	stc    
100080fb:	jmp    DWORD PTR [esi]
100080fd:	mov    al,ds:0xa025fff9
10008102:	stc    
10008103:	jmp    DWORD PTR ds:0x24fff99f
10008109:	call   0xddf0:0x8a21fff8
10008110:	add    BYTE PTR [eax],al
10008112:	add    BYTE PTR [ebx],dl
10008114:	add    BYTE PTR [eax],al
10008116:	add    BYTE PTR ds:0x0,al
	...
10008124:	and    cl,BYTE PTR [esi+esi*8-0x766daa4]
1000812b:	repz sub dh,BYTE PTR [ebp-0x48d50004]
10008132:	cld    
10008133:	jmp    FWORD PTR [edx]
10008135:	mov    eax,0xb92bfffc
1000813a:	cld    
1000813b:	jmp    FWORD PTR [ebx]
1000813d:	mov    ecx,0xba2bfffc
10008142:	cld    
10008143:	jmp    FWORD PTR [ebx]
10008145:	mov    ebx,0xbb2bfffc
1000814a:	std    
1000814b:	jmp    FWORD PTR [ebx]
1000814d:	mov    esp,0xbc2bfffd
10008152:	std    
10008153:	jmp    FWORD PTR [ebx]
10008155:	mov    esp,0xbc2bfffd
1000815a:	std    
1000815b:	jmp    FWORD PTR [ebx]
1000815d:	mov    esp,0xbb2bfffd
10008162:	std    
10008163:	jmp    FWORD PTR [ebx]
10008165:	mov    ebx,0xfabafffc
1000816a:	std    
1000816b:	(bad)  
1000816c:	mov    ecx,0xb7fffdf9
10008171:	stc    
10008172:	std    
10008173:	push   DWORD PTR [ebp-0x4c000207]
10008179:	stc    
1000817a:	std    
1000817b:	jmp    FWORD PTR [edi-0x54000208]
10008181:	clc    
10008182:	std    
10008183:	jmp    DWORD PTR [esi-0x5e000308]
10008189:	idiv   esp
1000818b:	call   DWORD PTR [edi+0x29fffcf4]
10008191:	scas   eax,DWORD PTR es:[edi]
10008192:	sti    
10008193:	jmp    FWORD PTR [eax]
10008195:	lods   eax,DWORD PTR ds:[esi]
10008196:	sti    
10008197:	jmp    FWORD PTR [eax]
10008199:	lods   al,BYTE PTR ds:[esi]
1000819a:	sti    
1000819b:	jmp    FWORD PTR [eax]
1000819d:	stos   DWORD PTR es:[edi],eax
1000819e:	sti    
1000819f:	jmp    DWORD PTR [edi]
100081a1:	test   eax,0xa827fffa
100081a6:	cli    
100081a7:	jmp    DWORD PTR [edi]
100081a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100081aa:	cli    
100081ab:	jmp    DWORD PTR [edi]
100081ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100081ae:	cli    
100081af:	jmp    DWORD PTR [esi]
100081b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100081b2:	cli    
100081b3:	jmp    DWORD PTR [esi]
100081b5:	mov    ds:0xa226fffa,eax
100081ba:	stc    
100081bb:	jmp    DWORD PTR [esi]
100081bd:	mov    eax,ds:0xa025fff9
100081c2:	stc    
100081c3:	jmp    DWORD PTR ds:0x25fff99f
100081c9:	sahf   
100081ca:	stc    
100081cb:	jmp    DWORD PTR [edx]
100081cd:	mov    esi,?
100081cf:	inc    DWORD PTR [ebx]
100081d1:	or     al,0x14
100081d3:	sbb    BYTE PTR [eax],al
100081d5:	add    BYTE PTR [eax],al
100081d7:	push   es
	...
100081e4:	and    cl,BYTE PTR [ebp+esi*8-0x65fd977]
100081eb:	(bad)  
100081ec:	sub    dh,BYTE PTR [edi-0x47d40004]
100081f2:	cld    
100081f3:	jmp    FWORD PTR [ebx]
100081f5:	mov    ecx,0xba2bfffc
100081fa:	cld    
100081fb:	jmp    FWORD PTR [ebx]
100081fd:	mov    ebx,0xbc2bfffc
10008202:	std    
10008203:	jmp    FWORD PTR [esp+edi*4]
10008206:	std    
10008207:	jmp    FWORD PTR [edi*4-0x42d30003]
1000820e:	std    
1000820f:	jmp    FWORD PTR [esi+edi*4]
10008212:	std    
10008213:	jmp    FWORD PTR [esi+edi*4]
10008216:	std    
10008217:	jmp    FWORD PTR [esi+edi*4]
1000821a:	std    
1000821b:	jmp    FWORD PTR [edi*4-0x42d30003]
10008222:	std    
10008223:	jmp    FWORD PTR [esp+edi*4]
10008226:	std    
10008227:	(bad)  
10008228:	mov    edi,0xbefffefa
1000822d:	cli    
1000822e:	(bad)  
1000822f:	(bad)  
10008230:	mov    ebp,0xbafffdfa
10008235:	cli    
10008236:	std    
10008237:	(bad)  
10008238:	mov    eax,0xb4fffdf9
1000823d:	stc    
1000823e:	std    
1000823f:	push   DWORD PTR [ecx-0x54000207]
10008245:	clc    
10008246:	std    
10008247:	jmp    DWORD PTR [esi-0x63000308]
1000824d:	cmc    
1000824e:	cld    
1000824f:	jmp    FWORD PTR [ecx]
10008251:	mov    al,0xfb
10008253:	jmp    FWORD PTR [eax]
10008255:	scas   al,BYTE PTR es:[edi]
10008256:	sti    
10008257:	jmp    FWORD PTR [eax]
10008259:	lods   eax,DWORD PTR ds:[esi]
1000825a:	sti    
1000825b:	jmp    FWORD PTR [eax]
1000825d:	stos   DWORD PTR es:[edi],eax
1000825e:	sti    
1000825f:	jmp    FWORD PTR [eax]
10008261:	stos   BYTE PTR es:[edi],al
10008262:	cli    
10008263:	jmp    DWORD PTR [edi]
10008265:	test   eax,0xa727fffa
1000826a:	cli    
1000826b:	jmp    DWORD PTR [edi]
1000826d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000826e:	cli    
1000826f:	jmp    DWORD PTR [esi]
10008271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008272:	cli    
10008273:	jmp    DWORD PTR [esi]
10008275:	mov    ds:0xa226fffa,eax
1000827a:	cli    
1000827b:	jmp    DWORD PTR [esi]
1000827d:	mov    eax,ds:0xa025fff9
10008282:	stc    
10008283:	jmp    DWORD PTR ds:0x25fff99f
10008289:	lahf   
1000828a:	stc    
1000828b:	jmp    DWORD PTR [edx]
1000828d:	(bad)  
1000828e:	hlt    
1000828f:	repz pop ss
10008291:	pop    esi
10008292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008293:	cmp    eax,0x7000000
	...
100082a4:	and    cl,BYTE PTR [edi-0x58d84a0a]
100082aa:	cli    
100082ab:	jmp    FWORD PTR [edx]
100082ad:	mov    eax,0xb92bfffc
100082b2:	cld    
100082b3:	jmp    FWORD PTR [ebx]
100082b5:	mov    edx,0xbb2bfffc
100082ba:	cld    
100082bb:	jmp    FWORD PTR [ebx]
100082bd:	mov    esp,0xbd2cfffd
100082c2:	std    
100082c3:	jmp    FWORD PTR [esi+edi*4]
100082c6:	std    
100082c7:	jmp    FWORD PTR [esi+edi*4]
100082ca:	std    
100082cb:	jmp    FWORD PTR [edi+edi*4]
100082ce:	std    
100082cf:	jmp    FWORD PTR [edi+edi*4]
100082d2:	std    
100082d3:	jmp    FWORD PTR [edi+edi*4]
100082d6:	std    
100082d7:	jmp    FWORD PTR [edi+edi*4]
100082da:	std    
100082db:	jmp    FWORD PTR [edi+edi*4]
100082de:	std    
100082df:	jmp    FWORD PTR [esi+edi*4]
100082e2:	std    
100082e3:	jmp    FWORD PTR [esi+edi*4]
100082e6:	std    
100082e7:	inc    ebp
100082e9:	sti    
100082ea:	(bad)  
100082eb:	inc    ebx
100082ed:	sti    
100082ee:	(bad)  
100082ef:	inc    edx
100082f1:	cli    
100082f2:	(bad)  
100082f3:	(bad)  
100082f4:	mov    edi,0xbcfffefa
100082f9:	cli    
100082fa:	std    
100082fb:	(bad)  
100082fc:	mov    ecx,0xb5fffdf9
10008301:	stc    
10008302:	std    
10008303:	push   DWORD PTR [ecx-0x54000207]
10008309:	clc    
1000830a:	std    
1000830b:	jmp    DWORD PTR [eax+0x29fffcf5]
10008311:	mov    cl,0xfb
10008313:	jmp    FWORD PTR [ecx]
10008315:	scas   eax,DWORD PTR es:[edi]
10008316:	sti    
10008317:	jmp    FWORD PTR [eax]
10008319:	scas   al,BYTE PTR es:[edi]
1000831a:	sti    
1000831b:	jmp    FWORD PTR [eax]
1000831d:	lods   al,BYTE PTR ds:[esi]
1000831e:	sti    
1000831f:	jmp    FWORD PTR [eax]
10008321:	stos   DWORD PTR es:[edi],eax
10008322:	sti    
10008323:	jmp    DWORD PTR [edi]
10008325:	test   eax,0xa827fffa
1000832a:	cli    
1000832b:	jmp    DWORD PTR [edi]
1000832d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000832e:	cli    
1000832f:	jmp    DWORD PTR [edi]
10008331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008332:	cli    
10008333:	jmp    DWORD PTR [esi]
10008335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008336:	cli    
10008337:	jmp    DWORD PTR [esi]
10008339:	mov    ds:0xa226fffa,eax
1000833e:	stc    
1000833f:	jmp    DWORD PTR [esi]
10008341:	mov    eax,ds:0xa025fff9
10008346:	stc    
10008347:	jmp    DWORD PTR ds:0x23fff99f
1000834d:	(bad)  
1000834e:	cmc    
1000834f:	repnz sbb al,0x72
10008352:	enter  0x5f,0x0
10008356:	add    BYTE PTR [eax],cl
	...
10008364:	and    cl,BYTE PTR [edi-0x55d73c0a]
1000836a:	cli    
1000836b:	jmp    FWORD PTR [ebx]
1000836d:	mov    ecx,0xba2bfffc
10008372:	cld    
10008373:	jmp    FWORD PTR [ebx]
10008375:	mov    ebx,0xbc2bfffc
1000837a:	std    
1000837b:	jmp    FWORD PTR [edi*4-0x41d30003]
10008382:	std    
10008383:	jmp    FWORD PTR [edi+edi*4]
10008386:	std    
10008387:	jmp    FWORD PTR [eax+eax*8]
1000838a:	std    
1000838b:	jmp    FWORD PTR [eax+eax*8]
1000838e:	std    
1000838f:	jmp    FWORD PTR [eax+eax*8]
10008392:	std    
10008393:	jmp    FWORD PTR [ecx+eax*8]
10008396:	std    
10008397:	jmp    FWORD PTR [eax+eax*8]
1000839a:	std    
1000839b:	jmp    FWORD PTR [eax+eax*8]
1000839e:	std    
1000839f:	jmp    FWORD PTR [eax+eax*8]
100083a2:	std    
100083a3:	jmp    FWORD PTR [edi+edi*4]
100083a6:	std    
100083a7:	dec    edx
100083a9:	sti    
100083aa:	(bad)  
100083ab:	dec    eax
100083ad:	sti    
100083ae:	(bad)  
100083af:	inc    esi
100083b1:	sti    
100083b2:	(bad)  
100083b3:	inc    esp
100083b5:	sti    
100083b6:	(bad)  
100083b7:	inc    ecx
100083b9:	cli    
100083ba:	(bad)  
100083bb:	(bad)  
100083bc:	mov    ebp,0xb9fffdfa
100083c1:	stc    
100083c2:	std    
100083c3:	push   DWORD PTR [ecx+edi*8-0x7500003]
100083ca:	std    
100083cb:	jmp    DWORD PTR [ebp+esi*8-0x4ed60003]
100083d2:	sti    
100083d3:	jmp    FWORD PTR [ecx]
100083d5:	mov    al,0xfb
100083d7:	jmp    FWORD PTR [eax]
100083d9:	scas   al,BYTE PTR es:[edi]
100083da:	sti    
100083db:	jmp    FWORD PTR [eax]
100083dd:	lods   eax,DWORD PTR ds:[esi]
100083de:	sti    
100083df:	jmp    FWORD PTR [eax]
100083e1:	stos   DWORD PTR es:[edi],eax
100083e2:	sti    
100083e3:	jmp    FWORD PTR [eax]
100083e5:	stos   BYTE PTR es:[edi],al
100083e6:	cli    
100083e7:	jmp    DWORD PTR [edi]
100083e9:	test   al,0xfa
100083eb:	jmp    DWORD PTR [edi]
100083ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100083ee:	cli    
100083ef:	jmp    DWORD PTR [edi]
100083f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100083f2:	cli    
100083f3:	jmp    DWORD PTR [esi]
100083f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100083f6:	cli    
100083f7:	jmp    DWORD PTR [esi]
100083f9:	mov    ds:0xa226fffa,eax
100083fe:	stc    
100083ff:	jmp    DWORD PTR [esi]
10008401:	mov    eax,ds:0xa025fff9
10008406:	stc    
10008407:	jmp    DWORD PTR ds:0x23fff99f
1000840d:	xchg   ecx,eax
1000840e:	cmc    
1000840f:	hlt    
10008410:	sbb    eax,0x6dcf76
10008415:	add    BYTE PTR [eax],al
10008417:	or     BYTE PTR [eax],al
	...
10008421:	add    BYTE PTR [eax],al
10008423:	add    BYTE PTR [ebx],ah
10008425:	(bad)  
10008426:	test   ah,0x29
10008429:	lods   al,BYTE PTR ds:[esi]
1000842a:	cli    
1000842b:	jmp    FWORD PTR [ebx]
1000842d:	mov    ecx,0xbb2bfffc
10008432:	cld    
10008433:	jmp    FWORD PTR [ebx]
10008435:	mov    esp,0xbd2cfffd
1000843a:	std    
1000843b:	jmp    FWORD PTR [esi+edi*4]
1000843e:	std    
1000843f:	jmp    FWORD PTR [edi+edi*4]
10008442:	std    
10008443:	jmp    FWORD PTR [eax+eax*8]
10008446:	std    
10008447:	jmp    FWORD PTR [ecx+eax*8]
1000844a:	std    
1000844b:	jmp    FWORD PTR [esi]
1000844d:	sar    ebp,0xff
10008450:	cs ret 0xfffd
10008454:	cs ret 0xfffd
10008458:	cs ret 0xfffd
1000845c:	cs sar ebp,0xff
10008460:	sub    eax,0x2cfffdc1
10008465:	sar    ch,0xff
10008468:	into   
10008469:	cld    
1000846a:	(bad)  
1000846b:	dec    ebp
1000846d:	cld    
1000846e:	(bad)  
1000846f:	dec    ebx
10008471:	sti    
10008472:	(bad)  
10008473:	dec    eax
10008475:	sti    
10008476:	(bad)  
10008477:	inc    ebp
10008479:	sti    
1000847a:	(bad)  
1000847b:	inc    ecx
1000847d:	cli    
1000847e:	(bad)  
1000847f:	(bad)  
10008480:	mov    esp,0xb8fffdfa
10008485:	stc    
10008486:	std    
10008487:	push   DWORD PTR [ebx-0x58000207]
1000848d:	idiv   ch
1000848f:	jmp    FWORD PTR [ecx]
10008491:	mov    dl,0xfb
10008493:	jmp    FWORD PTR [edx]
10008495:	mov    cl,0xfb
10008497:	jmp    FWORD PTR [edx]
10008499:	mov    al,0xfb
1000849b:	jmp    FWORD PTR [ecx]
1000849d:	scas   al,BYTE PTR es:[edi]
1000849e:	sti    
1000849f:	jmp    FWORD PTR [ecx]
100084a1:	lods   eax,DWORD PTR ds:[esi]
100084a2:	sti    
100084a3:	jmp    FWORD PTR [ecx]
100084a5:	stos   DWORD PTR es:[edi],eax
100084a6:	cli    
100084a7:	jmp    DWORD PTR [edi]
100084a9:	test   eax,0xa727fffa
100084ae:	cli    
100084af:	jmp    DWORD PTR [edi]
100084b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100084b2:	cli    
100084b3:	jmp    DWORD PTR [esi]
100084b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100084b6:	cli    
100084b7:	jmp    DWORD PTR [esi]
100084b9:	mov    ds:0xa226fffa,eax
100084be:	stc    
100084bf:	jmp    DWORD PTR [esi]
100084c1:	mov    eax,ds:0xa025fff9
100084c6:	stc    
100084c7:	jmp    DWORD PTR ds:0x23fff99f
100084cd:	xchg   edx,eax
100084ce:	div    ch
100084d0:	sbb    eax,0x72d378
100084d5:	add    BYTE PTR [eax],al
100084d7:	or     BYTE PTR [eax],al
	...
100084e1:	add    BYTE PTR [eax],al
100084e3:	add    BYTE PTR [ebx],ah
100084e5:	(bad)  
100084e6:	test   dl,0x28
100084e9:	stos   DWORD PTR es:[edi],eax
100084ea:	cli    
100084eb:	jmp    FWORD PTR [ebx]
100084ed:	mov    edx,0xbc2bfffc
100084f2:	std    
100084f3:	jmp    FWORD PTR [edi*4-0x41d30003]
100084fa:	std    
100084fb:	jmp    FWORD PTR [edi+edi*4]
100084fe:	std    
100084ff:	jmp    FWORD PTR [eax+eax*8]
10008502:	std    
10008503:	jmp    FWORD PTR ds:0xbffffdc1
10008509:	cli    
1000850a:	(bad)  
1000850b:	inc    esp
1000850d:	sti    
1000850e:	(bad)  
1000850f:	dec    eax
10008511:	sti    
10008512:	(bad)  
10008513:	dec    esp
10008515:	sti    
10008516:	(bad)  
10008517:	dec    edi
10008519:	cld    
1000851a:	(bad)  
1000851b:	call   ecx
1000851d:	cld    
1000851e:	(bad)  
1000851f:	call   ebx
10008521:	cld    
10008522:	(bad)  
10008523:	call   ebx
10008525:	cld    
10008526:	(bad)  
10008527:	call   ebx
10008529:	cld    
1000852a:	(bad)  
1000852b:	call   ecx
1000852d:	cld    
1000852e:	(bad)  
1000852f:	dec    edi
10008531:	cld    
10008532:	(bad)  
10008533:	dec    esp
10008535:	sti    
10008536:	(bad)  
10008537:	dec    eax
10008539:	sti    
1000853a:	(bad)  
1000853b:	inc    esp
1000853d:	sti    
1000853e:	(bad)  
1000853f:	(bad)  
10008540:	mov    edi,0xbafffefa
10008545:	cli    
10008546:	std    
10008547:	push   DWORD PTR [ebp-0x52000207]
1000854d:	clc    
1000854e:	std    
1000854f:	jmp    FWORD PTR [eax-0x5e000208]
10008555:	idiv   esp
10008557:	call   FWORD PTR [edx-0x6b00030a]
1000855d:	idiv   ah
1000855f:	dec    DWORD PTR [esi-0x7600040b]
10008565:	cmc    
10008566:	sti    
10008567:	inc    DWORD PTR [ebp+0x27fffbf4]
1000856d:	test   al,0xfa
1000856f:	jmp    DWORD PTR [edi]
10008571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10008572:	cli    
10008573:	jmp    DWORD PTR [esi]
10008575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008576:	cli    
10008577:	jmp    DWORD PTR [esi]
10008579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000857a:	cli    
1000857b:	jmp    DWORD PTR [esi]
1000857d:	mov    ds:0xa126fffa,al
10008582:	stc    
10008583:	jmp    DWORD PTR ds:0x25fff9a0
10008589:	lahf   
1000858a:	stc    
1000858b:	jmp    DWORD PTR [ebx]
1000858d:	xchg   ecx,eax
1000858e:	cmc    
1000858f:	hlt    
10008590:	sbb    eax,0x6bd378
10008595:	add    BYTE PTR [eax],al
10008597:	pop    es
	...
100085a4:	and    ecx,DWORD PTR [edi-0x56d74b0a]
100085aa:	cli    
100085ab:	jmp    FWORD PTR [ebx]
100085ad:	mov    ebx,0xbc2cfffc
100085b2:	std    
100085b3:	jmp    FWORD PTR [esi+edi*4]
100085b6:	std    
100085b7:	jmp    FWORD PTR [edi+edi*4]
100085ba:	std    
100085bb:	jmp    FWORD PTR [eax+eax*8]
100085be:	std    
100085bf:	jmp    FWORD PTR ds:0x2dfffdc1
100085c5:	ret    0xfffd
100085c8:	dec    edx
100085c9:	into   
100085ca:	std    
100085cb:	inc    esi
100085cd:	sti    
100085ce:	(bad)  
100085cf:	dec    ebx
100085d1:	sti    
100085d2:	(bad)  
100085d3:	dec    edi
100085d5:	cld    
100085d6:	(bad)  
100085d7:	call   edx
100085d9:	cld    
100085da:	(bad)  
100085db:	call   ebp
100085dd:	cld    
100085de:	(bad)  
100085df:	call   edi
100085e1:	std    
100085e2:	(bad)  
100085e3:	(bad)  
100085e4:	fdivr  st,st(5)
100085e6:	(bad)  
100085e7:	call   edi
100085e9:	std    
100085ea:	(bad)  
100085eb:	call   ebp
100085ed:	cld    
100085ee:	(bad)  
100085ef:	call   edx
100085f1:	cld    
100085f2:	(bad)  
100085f3:	dec    edi
100085f5:	cld    
100085f6:	(bad)  
100085f7:	dec    ebx
100085f9:	sti    
100085fa:	(bad)  
100085fb:	inc    esi
100085fd:	sti    
100085fe:	(bad)  
100085ff:	inc    edx
10008601:	cli    
10008602:	(bad)  
10008603:	(bad)  
10008604:	mov    ebp,0xb7fffdfa
10008609:	stc    
1000860a:	std    
1000860b:	push   DWORD PTR [edx-0x54000207]
10008611:	clc    
10008612:	std    
10008613:	jmp    DWORD PTR [ebx-0x63000309]
10008619:	idiv   esp
1000861b:	call   DWORD PTR [ebp-0x7000030a]
10008621:	cmc    
10008622:	cld    
10008623:	dec    DWORD PTR [edx+0x39fffbf5]
10008629:	mov    bh,0xfa
1000862b:	jmp    DWORD PTR [edi]
1000862d:	test   al,0xfa
1000862f:	jmp    DWORD PTR [edi]
10008631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10008632:	cli    
10008633:	jmp    DWORD PTR [edi]
10008635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008636:	cli    
10008637:	jmp    DWORD PTR [esi]
10008639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000863a:	cli    
1000863b:	jmp    DWORD PTR [esi]
1000863d:	mov    ds:0xa126fffa,eax
10008642:	stc    
10008643:	jmp    DWORD PTR [esi]
10008645:	mov    al,ds:0x9f25fff9
1000864a:	stc    
1000864b:	jmp    DWORD PTR [ebx]
1000864d:	nop
1000864e:	cmc    
1000864f:	repnz sbb eax,0x5fcf76
10008655:	add    BYTE PTR [eax],al
10008657:	push   es
	...
10008664:	and    cl,BYTE PTR [ebp-0x5dd9760a]
1000866a:	stc    
1000866b:	(bad)  
1000866c:	sub    edi,DWORD PTR [ebx-0x42d30003]
10008672:	std    
10008673:	jmp    FWORD PTR [esi+edi*4]
10008676:	std    
10008677:	jmp    FWORD PTR [eax+eax*8]
1000867a:	std    
1000867b:	jmp    FWORD PTR [ecx+eax*8]
1000867e:	std    
1000867f:	jmp    FWORD PTR ds:0x2dfffdc2
10008685:	ret    
10008686:	std    
10008687:	jmp    FWORD PTR ds:0x4bfffec4
1000868d:	iret   
1000868e:	(bad)  
1000868f:	dec    ebp
10008691:	cld    
10008692:	(bad)  
10008693:	call   ecx
10008695:	cld    
10008696:	(bad)  
10008697:	call   ebp
10008699:	cld    
1000869a:	(bad)  
1000869b:	(bad)  
1000869c:	fdivr  st,st(5)
1000869e:	(bad)  
1000869f:	(bad)  
100086a0:	(bad)  
100086a2:	(bad)  
100086a3:	(bad)  
100086a4:	(bad)  
100086a6:	(bad)  
100086a7:	(bad)  
100086a8:	(bad)  
100086aa:	(bad)  
100086ab:	(bad)  
100086ac:	fdivr  st,st(5)
100086ae:	(bad)  
100086af:	call   ebp
100086b1:	cld    
100086b2:	(bad)  
100086b3:	call   ecx
100086b5:	cld    
100086b6:	(bad)  
100086b7:	dec    ebp
100086b9:	cld    
100086ba:	(bad)  
100086bb:	dec    eax
100086bd:	sti    
100086be:	(bad)  
100086bf:	inc    ebx
100086c1:	sti    
100086c2:	(bad)  
100086c3:	(bad)  
100086c4:	mov    esi,0xb9fffefa
100086c9:	stc    
100086ca:	std    
100086cb:	push   DWORD PTR [ebx-0x53000207]
100086d1:	clc    
100086d2:	std    
100086d3:	jmp    DWORD PTR [ebp-0x62000309]
100086d9:	idiv   esp
100086db:	call   DWORD PTR [edi-0x6f00030a]
100086e1:	cmc    
100086e2:	cld    
100086e3:	(bad)  
100086e4:	cmp    edi,DWORD PTR [ecx-0x55d70005]
100086ea:	cli    
100086eb:	jmp    DWORD PTR [edi]
100086ed:	test   al,0xfa
100086ef:	jmp    DWORD PTR [edi]
100086f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100086f2:	cli    
100086f3:	jmp    DWORD PTR [edi]
100086f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100086f6:	cli    
100086f7:	jmp    DWORD PTR [esi]
100086f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100086fa:	cli    
100086fb:	jmp    DWORD PTR [esi]
100086fd:	mov    ds:0xa226fffa,eax
10008702:	stc    
10008703:	jmp    DWORD PTR [esi]
10008705:	mov    eax,ds:0xa025fff9
1000870a:	stc    
1000870b:	jmp    DWORD PTR [edx]
1000870d:	(bad)  
1000870e:	hlt    
1000870f:	repz sbb DWORD PTR [edi-0x4c],esp
10008713:	cmp    al,0x0
10008715:	add    BYTE PTR [eax],al
10008717:	add    eax,0x0
	...
10008724:	and    cl,BYTE PTR [esi+esi*8-0x764daa4]
1000872b:	repz sub edi,DWORD PTR [ebp+edi*8-0x242d301]
10008733:	jmp    FWORD PTR [edi+edi*4]
10008736:	std    
10008737:	jmp    FWORD PTR [eax+eax*8]
1000873a:	std    
1000873b:	jmp    FWORD PTR ds:0x2dfffdc1
10008741:	ret    
10008742:	std    
10008743:	jmp    FWORD PTR ds:0x2dfffdc4
10008749:	(bad)  
1000874c:	sub    eax,0x4dfffec6
10008751:	sar    dh,1
10008753:	call   ebx
10008755:	cld    
10008756:	(bad)  
10008757:	call   esp
10008759:	cld    
1000875a:	(bad)  
1000875b:	(bad)  
1000875c:	(bad)  
1000875e:	(bad)  
1000875f:	(bad)  
10008760:	(bad)  
10008762:	(bad)  
10008763:	(bad)  
10008764:	fdivp  st(5),st
10008766:	(bad)  
10008767:	(bad)  
10008768:	(bad)  
1000876a:	(bad)  
1000876b:	(bad)  
1000876c:	(bad)  
1000876e:	(bad)  
1000876f:	call   edi
10008771:	std    
10008772:	(bad)  
10008773:	call   ebx
10008775:	cld    
10008776:	(bad)  
10008777:	dec    esi
10008779:	cld    
1000877a:	(bad)  
1000877b:	dec    edx
1000877d:	sti    
1000877e:	(bad)  
1000877f:	inc    ebp
10008781:	sti    
10008782:	(bad)  
10008783:	(bad)  
10008784:	mov    edi,0xbafffefa
10008789:	cli    
1000878a:	std    
1000878b:	push   DWORD PTR [ecx+edi*8-0x7520003]
10008792:	std    
10008793:	jmp    DWORD PTR [esi-0x61000308]
10008799:	idiv   esp
1000879b:	call   DWORD PTR [edi+0x3cfffcf6]
100087a1:	mov    ebx,0xab28fffb
100087a6:	sti    
100087a7:	jmp    FWORD PTR [eax]
100087a9:	stos   BYTE PTR es:[edi],al
100087aa:	cli    
100087ab:	jmp    DWORD PTR [edi]
100087ad:	test   al,0xfa
100087af:	jmp    DWORD PTR [edi]
100087b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100087b2:	cli    
100087b3:	jmp    DWORD PTR [edi]
100087b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100087b6:	cli    
100087b7:	jmp    DWORD PTR [esi]
100087b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100087ba:	cli    
100087bb:	jmp    DWORD PTR [esi]
100087bd:	mov    ds:0xa226fffa,eax
100087c2:	stc    
100087c3:	jmp    DWORD PTR [esi]
100087c5:	mov    eax,ds:0xa025fff9
100087ca:	stc    
100087cb:	jmp    DWORD PTR [edx]
100087cd:	mov    esi,?
100087cf:	std    
100087d0:	or     DWORD PTR [ebx],esp
100087d2:	ds adc al,0x0
100087d5:	add    BYTE PTR [eax],al
100087d7:	add    eax,DWORD PTR [eax]
	...
100087e1:	add    BYTE PTR [eax],al
100087e3:	add    BYTE PTR [edx],ah
100087e5:	mov    esi,?
100087e7:	and    edx,DWORD PTR es:[eax-0x43d40d0a]
100087ee:	std    
100087ef:	jmp    FWORD PTR [esi+edi*4]
100087f2:	std    
100087f3:	jmp    FWORD PTR [edi+edi*4]
100087f6:	std    
100087f7:	jmp    FWORD PTR [eax+eax*8]
100087fa:	std    
100087fb:	jmp    FWORD PTR ds:0x2dfffdc2
10008801:	ret    
10008802:	std    
10008803:	jmp    FWORD PTR ds:0x2dfffec4
10008809:	(bad)  
1000880c:	cs (bad) 
1000880e:	(bad)  
1000880f:	jmp    FWORD PTR [esi]
10008811:	(bad)  
10008812:	(bad)  
10008813:	dec    DWORD PTR [esi-0x2f]
10008816:	(bad)  
10008817:	(bad)  
10008818:	fdivr  st,st(5)
1000881a:	(bad)  
1000881b:	call   edx
1000881d:	cli    
1000881e:	(bad)  
1000881f:	(bad)  
10008820:	fdivp  st(5),st
10008822:	(bad)  
10008823:	jmp    ecx
10008825:	(bad)  
10008826:	(bad)  
10008827:	(bad)  
10008828:	fdivp  st(5),st
1000882a:	(bad)  
1000882b:	(bad)  
1000882c:	(bad)  
1000882e:	(bad)  
1000882f:	(bad)  
10008830:	fdivr  st,st(5)
10008832:	(bad)  
10008833:	call   ebx
10008835:	cld    
10008836:	(bad)  
10008837:	dec    edi
10008839:	cld    
1000883a:	(bad)  
1000883b:	dec    edx
1000883d:	sti    
1000883e:	(bad)  
1000883f:	inc    ebp
10008841:	sti    
10008842:	(bad)  
10008843:	inc    eax
10008845:	cli    
10008846:	(bad)  
10008847:	(bad)  
10008848:	mov    edx,0xb4fffdfa
1000884d:	stc    
1000884e:	std    
1000884f:	jmp    FWORD PTR [esi-0x5a000208]
10008855:	idiv   esp
10008857:	call   FWORD PTR [edi+0x3efffcf7]
1000885d:	mov    ebp,0xad28fffb
10008862:	sti    
10008863:	jmp    FWORD PTR [eax]
10008865:	lods   al,BYTE PTR ds:[esi]
10008866:	sti    
10008867:	jmp    FWORD PTR [eax]
10008869:	stos   BYTE PTR es:[edi],al
1000886a:	cli    
1000886b:	jmp    DWORD PTR [edi]
1000886d:	test   al,0xfa
1000886f:	jmp    DWORD PTR [edi]
10008871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10008872:	cli    
10008873:	jmp    DWORD PTR [edi]
10008875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10008876:	cli    
10008877:	jmp    DWORD PTR [esi]
10008879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000887a:	cli    
1000887b:	jmp    DWORD PTR [esi]
1000887d:	mov    ds:0xa226fffa,eax
10008882:	stc    
10008883:	jmp    DWORD PTR [esi]
10008885:	mov    eax,ds:0x9c24fff9
1000888a:	clc    
1000888b:	jmp    DWORD PTR [edx]
1000888d:	mov    esi,edx
1000888f:	fiadd  WORD PTR [eax]
10008891:	add    BYTE PTR [eax],al
10008893:	or     eax,DWORD PTR [eax]
10008895:	add    BYTE PTR [eax],al
10008897:	add    DWORD PTR [eax],eax
	...
100088a5:	add    BYTE PTR [eax],al
100088a7:	add    BYTE PTR [edx],ah
100088a9:	mov    ?,esi
100088ab:	in     al,dx
100088ac:	sub    dh,BYTE PTR [esi-0x41d30004]
100088b2:	std    
100088b3:	jmp    FWORD PTR [edi+edi*4]
100088b6:	std    
100088b7:	jmp    FWORD PTR [ecx+eax*8]
100088ba:	std    
100088bb:	jmp    FWORD PTR ds:0x2dfffdc2
100088c1:	ret    
100088c2:	std    
100088c3:	jmp    FWORD PTR ds:0x2dfffec4
100088c9:	(bad)  
100088cc:	cs (bad) 
100088ce:	(bad)  
100088cf:	jmp    FWORD PTR [edi]
100088d1:	(bad)  
100088d2:	(bad)  
100088d3:	jmp    FWORD PTR [esi]
100088d5:	enter  0xfffe,0x4e
100088d9:	sar    esi,1
100088db:	(bad)  
100088dc:	(bad)  
100088de:	(bad)  
100088df:	(bad)  
100088e0:	(bad)  
100088e2:	(bad)  
100088e3:	(bad)  
100088e4:	fdivp  st(5),st
100088e6:	(bad)  
100088e7:	(bad)  
100088e8:	(bad)  
100088ea:	(bad)  
100088eb:	(bad)  
100088ec:	(bad)  
100088ee:	(bad)  
100088ef:	call   edi
100088f1:	std    
100088f2:	(bad)  
100088f3:	call   ebx
100088f5:	cld    
100088f6:	(bad)  
100088f7:	dec    esi
100088f9:	cld    
100088fa:	(bad)  
100088fb:	dec    edx
100088fd:	sti    
100088fe:	(bad)  
100088ff:	inc    ebp
10008901:	sti    
10008902:	(bad)  
10008903:	(bad)  
10008904:	mov    edi,0xbafffefa
10008909:	cli    
1000890a:	std    
1000890b:	push   DWORD PTR [ecx+edi*8-0x7520003]
10008912:	std    
10008913:	jmp    DWORD PTR [esi+0x3ffffcf8]
10008919:	mov    esi,0xaf29fffb
1000891e:	sti    
1000891f:	jmp    FWORD PTR [eax]
10008921:	lods   eax,DWORD PTR ds:[esi]
10008922:	sti    
10008923:	jmp    FWORD PTR [eax]
10008925:	lods   al,BYTE PTR ds:[esi]
10008926:	sti    
10008927:	jmp    FWORD PTR [eax]
10008929:	stos   BYTE PTR es:[edi],al
1000892a:	cli    
1000892b:	jmp    DWORD PTR [edi]
1000892d:	test   al,0xfa
1000892f:	jmp    DWORD PTR [edi]
10008931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10008932:	cli    
10008933:	jmp    DWORD PTR [edi]
10008935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10008936:	cli    
10008937:	jmp    DWORD PTR [esi]
10008939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000893a:	cli    
1000893b:	jmp    DWORD PTR [esi]
1000893d:	mov    ds:0xa226fffa,eax
10008942:	stc    
10008943:	jmp    DWORD PTR [esi]
10008945:	mov    eax,ds:0x9623fff9
1000894a:	idiv   esi
1000894c:	and    BYTE PTR [edi+eiz*8+0x9b],al
10008953:	pop    es
	...
10008968:	and    cl,BYTE PTR [esi-0x5dd9650a]
1000896e:	stc    
1000896f:	cld    
10008970:	sub    al,0xbe
10008972:	std    
10008973:	jmp    FWORD PTR [edi+edi*4]
10008976:	std    
10008977:	jmp    FWORD PTR [eax+eax*8]
1000897a:	std    
1000897b:	jmp    FWORD PTR ds:0x2dfffdc2
10008981:	ret    
10008982:	std    
10008983:	jmp    FWORD PTR ds:0x2dfffec4
10008989:	(bad)  
1000898c:	cs (bad) 
1000898e:	(bad)  
1000898f:	jmp    FWORD PTR [esi]
10008991:	(bad)  
10008992:	(bad)  
10008993:	jmp    FWORD PTR [esi]
10008995:	(bad)  
10008996:	(bad)  
10008997:	jmp    FWORD PTR [esi]
10008999:	(bad)  
1000899a:	(bad)  
1000899b:	dec    DWORD PTR [edi-0x2f]
1000899e:	(bad)  
1000899f:	(bad)  
100089a0:	(bad)  
100089a2:	(bad)  
100089a3:	call   esi
100089a5:	sti    
100089a6:	(bad)  
100089a7:	(bad)  
100089a8:	(bad)  
100089aa:	(bad)  
100089ab:	(bad)  
100089ac:	fdivr  st,st(5)
100089ae:	(bad)  
100089af:	call   ebp
100089b1:	cld    
100089b2:	(bad)  
100089b3:	call   ecx
100089b5:	cld    
100089b6:	(bad)  
100089b7:	dec    ebp
100089b9:	cld    
100089ba:	(bad)  
100089bb:	dec    eax
100089bd:	sti    
100089be:	(bad)  
100089bf:	inc    ebx
100089c1:	sti    
100089c2:	(bad)  
100089c3:	(bad)  
100089c4:	mov    esi,0xb9fffefa
100089c9:	stc    
100089ca:	std    
100089cb:	push   DWORD PTR [ebx-0x53000207]
100089d1:	clc    
100089d2:	std    
100089d3:	inc    DWORD PTR [ecx-0x41]
100089d6:	sti    
100089d7:	jmp    FWORD PTR [ecx]
100089d9:	mov    cl,0xfb
100089db:	jmp    FWORD PTR [ecx]
100089dd:	scas   eax,DWORD PTR es:[edi]
100089de:	sti    
100089df:	jmp    FWORD PTR [eax]
100089e1:	lods   eax,DWORD PTR ds:[esi]
100089e2:	sti    
100089e3:	jmp    FWORD PTR [eax]
100089e5:	lods   al,BYTE PTR ds:[esi]
100089e6:	sti    
100089e7:	jmp    FWORD PTR [eax]
100089e9:	stos   BYTE PTR es:[edi],al
100089ea:	cli    
100089eb:	jmp    DWORD PTR [edi]
100089ed:	test   al,0xfa
100089ef:	jmp    DWORD PTR [edi]
100089f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100089f2:	cli    
100089f3:	jmp    DWORD PTR [edi]
100089f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
100089f6:	cli    
100089f7:	jmp    DWORD PTR [esi]
100089f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
100089fa:	cli    
100089fb:	jmp    DWORD PTR [esi]
100089fd:	mov    ds:0xa226fffa,eax
10008a02:	stc    
10008a03:	jmp    DWORD PTR [esi]
10008a05:	mov    eax,ds:0x8e22fff9
10008a0a:	cmc    
10008a0b:	repnz sbb ebp,DWORD PTR [edi-0x3d]
10008a0f:	aas    
10008a10:	add    BYTE PTR [eax],al
10008a12:	add    BYTE PTR [ebx],al
	...
10008a28:	and    cl,BYTE PTR [esi+esi*8-0x86ddcd1]
10008a2f:	icebp  
10008a30:	sub    al,0xbd
10008a32:	std    
10008a33:	jmp    FWORD PTR [edi+edi*4]
10008a36:	std    
10008a37:	jmp    FWORD PTR [eax+eax*8]
10008a3a:	std    
10008a3b:	jmp    FWORD PTR ds:0x2dfffdc1
10008a41:	ret    
10008a42:	std    
10008a43:	jmp    FWORD PTR ds:0x2dfffdc4
10008a49:	(bad)  
10008a4c:	sub    eax,0x2efffec6
10008a51:	(bad)  
10008a52:	(bad)  
10008a53:	jmp    FWORD PTR [esi]
10008a55:	(bad)  
10008a56:	(bad)  
10008a57:	jmp    FWORD PTR [esi]
10008a59:	(bad)  
10008a5a:	(bad)  
10008a5b:	jmp    FWORD PTR ds:0x4efffec6
10008a61:	sar    dh,1
10008a63:	(bad)  
10008a64:	fdivr  st,st(5)
10008a66:	(bad)  
10008a67:	call   eax
10008a69:	cli    
10008a6a:	(bad)  
10008a6b:	call   ebp
10008a6d:	cld    
10008a6e:	(bad)  
10008a6f:	call   edx
10008a71:	cld    
10008a72:	(bad)  
10008a73:	dec    edi
10008a75:	cld    
10008a76:	(bad)  
10008a77:	dec    ebx
10008a79:	sti    
10008a7a:	(bad)  
10008a7b:	inc    esi
10008a7d:	sti    
10008a7e:	(bad)  
10008a7f:	inc    edx
10008a81:	cli    
10008a82:	(bad)  
10008a83:	(bad)  
10008a84:	mov    ebp,0xb5fffdfa
10008a89:	clc    
10008a8a:	std    
10008a8b:	push   DWORD PTR [edx+0x43fffdf9]
10008a91:	sar    esp,0xff
10008a94:	sub    DWORD PTR [edx-0x4fd60005],esi
10008a9a:	sti    
10008a9b:	jmp    FWORD PTR [ecx]
10008a9d:	scas   eax,DWORD PTR es:[edi]
10008a9e:	sti    
10008a9f:	jmp    FWORD PTR [eax]
10008aa1:	lods   eax,DWORD PTR ds:[esi]
10008aa2:	sti    
10008aa3:	jmp    FWORD PTR [eax]
10008aa5:	stos   DWORD PTR es:[edi],eax
10008aa6:	sti    
10008aa7:	jmp    FWORD PTR [eax]
10008aa9:	stos   BYTE PTR es:[edi],al
10008aaa:	cli    
10008aab:	jmp    DWORD PTR [edi]
10008aad:	test   al,0xfa
10008aaf:	jmp    DWORD PTR [edi]
10008ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10008ab2:	cli    
10008ab3:	jmp    DWORD PTR [edi]
10008ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008ab6:	cli    
10008ab7:	jmp    DWORD PTR [esi]
10008ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008aba:	cli    
10008abb:	jmp    DWORD PTR [esi]
10008abd:	mov    ds:0xa226fffa,eax
10008ac2:	stc    
10008ac3:	jmp    DWORD PTR ds:0x22fff99e
10008ac9:	mov    ebx,?
10008acb:	out    0x0,eax
10008acd:	add    BYTE PTR [eax],al
10008acf:	or     DWORD PTR [eax],eax
10008ad1:	add    BYTE PTR [eax],al
10008ad3:	add    DWORD PTR [eax],eax
	...
10008ae9:	add    BYTE PTR [eax],al
10008aeb:	add    BYTE PTR [ebx],ah
10008aed:	(bad)  
10008aee:	test   ah,0x29
10008af1:	mov    al,0xfb
10008af3:	jmp    FWORD PTR [esi+edi*4]
10008af6:	std    
10008af7:	jmp    FWORD PTR [eax+eax*8]
10008afa:	std    
10008afb:	jmp    FWORD PTR [ecx+eax*8]
10008afe:	std    
10008aff:	jmp    FWORD PTR ds:0x2dfffdc2
10008b05:	ret    
10008b06:	std    
10008b07:	jmp    FWORD PTR ds:0x2dfffec4
10008b0d:	(bad)  
10008b10:	sub    eax,0x2dfffec5
10008b15:	(bad)  
10008b18:	sub    eax,0x2efffec5
10008b1d:	(bad)  
10008b20:	aaa    
10008b21:	(bad)  
10008b22:	(bad)  
10008b23:	dec    DWORD PTR [ebp-0x32]
10008b26:	std    
10008b27:	call   ebx
10008b29:	cld    
10008b2a:	(bad)  
10008b2b:	call   ecx
10008b2d:	cld    
10008b2e:	(bad)  
10008b2f:	dec    edi
10008b31:	cld    
10008b32:	(bad)  
10008b33:	dec    esp
10008b35:	sti    
10008b36:	(bad)  
10008b37:	dec    eax
10008b39:	sti    
10008b3a:	(bad)  
10008b3b:	inc    esp
10008b3d:	sti    
10008b3e:	(bad)  
10008b3f:	(bad)  
10008b40:	mov    edi,0xbafffefa
10008b45:	cli    
10008b46:	std    
10008b47:	push   DWORD PTR [ebp+0x44fffdf9]
10008b4d:	ret    0xfffc
10008b50:	sub    dh,BYTE PTR [ebx-0x4dd60004]
10008b56:	sti    
10008b57:	jmp    FWORD PTR [ecx]
10008b59:	mov    al,0xfb
10008b5b:	jmp    FWORD PTR [ecx]
10008b5d:	scas   al,BYTE PTR es:[edi]
10008b5e:	sti    
10008b5f:	jmp    FWORD PTR [eax]
10008b61:	lods   eax,DWORD PTR ds:[esi]
10008b62:	sti    
10008b63:	jmp    FWORD PTR [eax]
10008b65:	stos   DWORD PTR es:[edi],eax
10008b66:	sti    
10008b67:	jmp    FWORD PTR [eax]
10008b69:	stos   BYTE PTR es:[edi],al
10008b6a:	cli    
10008b6b:	jmp    DWORD PTR [edi]
10008b6d:	test   al,0xfa
10008b6f:	jmp    DWORD PTR [edi]
10008b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10008b72:	cli    
10008b73:	jmp    DWORD PTR [edi]
10008b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008b76:	cli    
10008b77:	jmp    DWORD PTR [esi]
10008b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008b7a:	cli    
10008b7b:	jmp    DWORD PTR [esi]
10008b7d:	mov    ds:0xa226fffa,eax
10008b82:	stc    
10008b83:	jmp    DWORD PTR [ebx]
10008b85:	xchg   edx,eax
10008b86:	cmc    
10008b87:	hlt    
10008b88:	and    BYTE PTR [edi+eiz*8+0x8d],al
10008b8f:	add    al,0x0
	...
10008ba9:	add    BYTE PTR [eax],al
10008bab:	add    BYTE PTR [edx],ah
10008bad:	mov    esi,?
10008baf:	ds and al,0x95
10008bb2:	imul   edi
10008bb4:	sub    al,0xbe
10008bb6:	std    
10008bb7:	jmp    FWORD PTR [edi+edi*4]
10008bba:	std    
10008bbb:	jmp    FWORD PTR [eax+eax*8]
10008bbe:	std    
10008bbf:	jmp    FWORD PTR ds:0x2dfffdc1
10008bc5:	ret    0xfffd
10008bc8:	sub    eax,0x2dfffdc3
10008bcd:	(bad)  
10008bce:	std    
10008bcf:	jmp    FWORD PTR ds:0x2dfffec4
10008bd5:	(bad)  
10008bd6:	(bad)  
10008bd7:	jmp    FWORD PTR ds:0x2dfffec4
10008bdd:	(bad)  
10008bde:	std    
10008bdf:	jmp    FWORD PTR ds:0x37fffdc3
10008be5:	(bad)  
10008be8:	dec    esp
10008be9:	int3   
10008bea:	std    
10008beb:	dec    ebp
10008bed:	cld    
10008bee:	(bad)  
10008bef:	inc    esp
10008bf1:	clc    
10008bf2:	(bad)  
10008bf3:	dec    eax
10008bf5:	sti    
10008bf6:	(bad)  
10008bf7:	inc    ebp
10008bf9:	sti    
10008bfa:	(bad)  
10008bfb:	inc    ecx
10008bfd:	cli    
10008bfe:	(bad)  
10008bff:	(bad)  
10008c00:	mov    esp,0xb8fffdfa
10008c05:	stc    
10008c06:	std    
10008c07:	inc    DWORD PTR [ebx+eax*8-0x4]
10008c0b:	jmp    FWORD PTR [edx]
10008c0d:	mov    ch,0xfc
10008c0f:	jmp    FWORD PTR [edx]
10008c11:	mov    bl,0xfc
10008c13:	jmp    FWORD PTR [ecx]
10008c15:	mov    cl,0xfb
10008c17:	jmp    FWORD PTR [ecx]
10008c19:	mov    al,0xfb
10008c1b:	jmp    FWORD PTR [eax]
10008c1d:	scas   al,BYTE PTR es:[edi]
10008c1e:	sti    
10008c1f:	jmp    FWORD PTR [eax]
10008c21:	lods   eax,DWORD PTR ds:[esi]
10008c22:	sti    
10008c23:	jmp    FWORD PTR [eax]
10008c25:	stos   DWORD PTR es:[edi],eax
10008c26:	sti    
10008c27:	jmp    DWORD PTR [edi]
10008c29:	test   eax,0xa827fffa
10008c2e:	cli    
10008c2f:	jmp    DWORD PTR [edi]
10008c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10008c32:	cli    
10008c33:	jmp    DWORD PTR [edi]
10008c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008c36:	cli    
10008c37:	jmp    DWORD PTR [esi]
10008c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008c3a:	cli    
10008c3b:	jmp    DWORD PTR [esi]
10008c3d:	mov    ds:0x9f26fffa,eax
10008c42:	stc    
10008c43:	jmp    DWORD PTR [edx]
10008c45:	mov    esp,?
10008c47:	lock add BYTE PTR [eax],al
10008c4a:	add    BYTE PTR [ecx],cl
10008c4c:	add    BYTE PTR [eax],al
10008c4e:	add    BYTE PTR [ecx],al
	...
10008c70:	and    edx,DWORD PTR [eax-0x5cd84709]
10008c76:	stc    
10008c77:	cld    
10008c78:	sub    al,0xbe
10008c7a:	std    
10008c7b:	jmp    FWORD PTR [edi+edi*4]
10008c7e:	std    
10008c7f:	jmp    FWORD PTR [eax+eax*8]
10008c82:	std    
10008c83:	jmp    FWORD PTR ds:0x2dfffdc1
10008c89:	ret    0xfffd
10008c8c:	sub    eax,0x2dfffdc3
10008c91:	ret    
10008c92:	std    
10008c93:	jmp    FWORD PTR ds:0x2dfffdc3
10008c99:	ret    
10008c9a:	std    
10008c9b:	jmp    FWORD PTR ds:0x2dfffdc3
10008ca1:	ret    0xfffd
10008ca4:	sub    eax,0x33fffdc1
10008ca9:	ret    
10008caa:	std    
10008cab:	dec    DWORD PTR [edx-0x35]
10008cae:	std    
10008caf:	inc    esi
10008cb1:	sti    
10008cb2:	(bad)  
10008cb3:	inc    eax
10008cb5:	stc    
10008cb6:	(bad)  
10008cb7:	inc    ecx
10008cb9:	cli    
10008cba:	(bad)  
10008cbb:	(bad)  
10008cbc:	mov    esp,0xb9fffdf9
10008cc1:	stc    
10008cc2:	std    
10008cc3:	inc    DWORD PTR [ebp-0x3c]
10008cc6:	cld    
10008cc7:	jmp    FWORD PTR [edx]
10008cc9:	mov    dh,0xfc
10008ccb:	jmp    FWORD PTR [edx]
10008ccd:	mov    ah,0xfc
10008ccf:	jmp    FWORD PTR [ecx]
10008cd1:	mov    bl,0xfb
10008cd3:	jmp    FWORD PTR [ecx]
10008cd5:	mov    cl,0xfb
10008cd7:	jmp    FWORD PTR [ecx]
10008cd9:	scas   eax,DWORD PTR es:[edi]
10008cda:	sti    
10008cdb:	jmp    FWORD PTR [eax]
10008cdd:	scas   al,BYTE PTR es:[edi]
10008cde:	sti    
10008cdf:	jmp    FWORD PTR [eax]
10008ce1:	lods   al,BYTE PTR ds:[esi]
10008ce2:	sti    
10008ce3:	jmp    FWORD PTR [eax]
10008ce5:	stos   DWORD PTR es:[edi],eax
10008ce6:	sti    
10008ce7:	jmp    DWORD PTR [edi]
10008ce9:	test   eax,0xa827fffa
10008cee:	cli    
10008cef:	jmp    DWORD PTR [edi]
10008cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10008cf2:	cli    
10008cf3:	jmp    DWORD PTR [esi]
10008cf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008cf6:	cli    
10008cf7:	jmp    DWORD PTR [esi]
10008cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008cfa:	cli    
10008cfb:	jmp    DWORD PTR [esi]
10008cfd:	mov    ds:0x9123fffa,al
10008d02:	cmc    
10008d03:	repnz and BYTE PTR [ebp+0x8bea],al
10008d0a:	add    BYTE PTR [ebx],al
	...
10008d30:	and    cl,BYTE PTR [esi+esi*8-0x973ddf0]
10008d37:	jmp    FWORD PTR [ebx]
10008d39:	mov    ecx,0xbe2cfffc
10008d3e:	std    
10008d3f:	jmp    FWORD PTR [edi+edi*4]
10008d42:	std    
10008d43:	jmp    FWORD PTR [eax+eax*8]
10008d46:	std    
10008d47:	jmp    FWORD PTR [ecx+eax*8]
10008d4a:	std    
10008d4b:	jmp    FWORD PTR ds:0x2dfffdc1
10008d51:	ret    0xfffd
10008d54:	sub    eax,0x2dfffdc2
10008d59:	ret    0xfffd
10008d5c:	sub    eax,0x2cfffdc1
10008d61:	sar    ebp,0xff
10008d64:	sub    al,0xc0
10008d66:	std    
10008d67:	jmp    FWORD PTR [edi+edi*4]
10008d6a:	std    
10008d6b:	push   DWORD PTR [esi]
10008d6d:	ret    0xfffd
10008d70:	dec    ecx
10008d71:	leave  
10008d72:	std    
10008d73:	(bad)  
10008d74:	mov    edi,0xbcfffefa
10008d79:	cli    
10008d7a:	std    
10008d7b:	(bad)  
10008d7c:	mov    ecx,0x46fffdf9
10008d81:	(bad)  
10008d82:	cld    
10008d83:	jmp    FWORD PTR [edx]
10008d85:	mov    bh,0xfc
10008d87:	jmp    FWORD PTR [esi]
10008d89:	mov    bh,0xfc
10008d8b:	jmp    FWORD PTR [edx]
10008d8d:	mov    ah,0xfc
10008d8f:	jmp    FWORD PTR [ecx]
10008d91:	mov    dl,0xfb
10008d93:	jmp    FWORD PTR [ecx]
10008d95:	mov    al,0xfb
10008d97:	jmp    FWORD PTR [ecx]
10008d99:	scas   eax,DWORD PTR es:[edi]
10008d9a:	sti    
10008d9b:	jmp    FWORD PTR [eax]
10008d9d:	lods   eax,DWORD PTR ds:[esi]
10008d9e:	sti    
10008d9f:	jmp    FWORD PTR [eax]
10008da1:	lods   al,BYTE PTR ds:[esi]
10008da2:	sti    
10008da3:	jmp    FWORD PTR [eax]
10008da5:	stos   BYTE PTR es:[edi],al
10008da6:	cli    
10008da7:	jmp    DWORD PTR [edi]
10008da9:	test   eax,0xa727fffa
10008dae:	cli    
10008daf:	jmp    DWORD PTR [edi]
10008db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10008db2:	cli    
10008db3:	jmp    DWORD PTR [esi]
10008db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008db6:	cli    
10008db7:	jmp    DWORD PTR [esi]
10008db9:	mov    ds:0x9624fffa,eax
10008dbe:	idiv   ebp
10008dc0:	and    DWORD PTR [edx+0xc0f0],ecx
10008dc6:	add    BYTE PTR ds:0x0,al
	...
10008df4:	and    cl,BYTE PTR [esi+esi*8-0x869db7c]
10008dfb:	out    dx,eax
10008dfc:	sub    al,0xbd
10008dfe:	std    
10008dff:	jmp    FWORD PTR [esi+edi*4]
10008e02:	std    
10008e03:	jmp    FWORD PTR [edi+edi*4]
10008e06:	std    
10008e07:	jmp    FWORD PTR [eax+eax*8]
10008e0a:	std    
10008e0b:	jmp    FWORD PTR [eax+eax*8]
10008e0e:	std    
10008e0f:	jmp    FWORD PTR [eax+eax*8]
10008e12:	std    
10008e13:	jmp    FWORD PTR [ecx+eax*8]
10008e16:	std    
10008e17:	jmp    FWORD PTR [eax+eax*8]
10008e1a:	std    
10008e1b:	jmp    FWORD PTR [eax+eax*8]
10008e1e:	std    
10008e1f:	jmp    FWORD PTR [eax+eax*8]
10008e22:	std    
10008e23:	jmp    FWORD PTR [edi+edi*4]
10008e26:	std    
10008e27:	jmp    FWORD PTR [esi+edi*4]
10008e2a:	std    
10008e2b:	jmp    FWORD PTR [edi*4-0x40cc0003]
10008e32:	std    
10008e33:	inc    DWORD PTR [esi-0x39]
10008e36:	cld    
10008e37:	(bad)  
10008e38:	mov    eax,0x45fffdf9
10008e3d:	(bad)  
10008e40:	sub    dh,BYTE PTR [edi-0x49d50004]
10008e46:	cld    
10008e47:	jmp    FWORD PTR [edx]
10008e49:	mov    ah,0xfc
10008e4b:	jmp    FWORD PTR [ecx]
10008e4d:	mov    bl,0xfb
10008e4f:	jmp    FWORD PTR [ecx]
10008e51:	mov    cl,0xfb
10008e53:	jmp    FWORD PTR [ecx]
10008e55:	mov    al,0xfb
10008e57:	jmp    FWORD PTR [eax]
10008e59:	scas   al,BYTE PTR es:[edi]
10008e5a:	sti    
10008e5b:	jmp    FWORD PTR [eax]
10008e5d:	lods   eax,DWORD PTR ds:[esi]
10008e5e:	sti    
10008e5f:	jmp    FWORD PTR [eax]
10008e61:	stos   DWORD PTR es:[edi],eax
10008e62:	sti    
10008e63:	jmp    FWORD PTR [eax]
10008e65:	stos   BYTE PTR es:[edi],al
10008e66:	cli    
10008e67:	jmp    DWORD PTR [edi]
10008e69:	test   al,0xfa
10008e6b:	jmp    DWORD PTR [edi]
10008e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10008e6e:	cli    
10008e6f:	jmp    DWORD PTR [edi]
10008e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10008e72:	cli    
10008e73:	jmp    DWORD PTR [esi]
10008e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10008e76:	cli    
10008e77:	jmp    DWORD PTR [esi]
10008e79:	mov    eax,ds:0x8c22fffa
10008e7e:	cmc    
10008e7f:	cmc    
10008e80:	sbb    BYTE PTR [ecx-0x55],ah
10008e83:	pop    ss
10008e84:	add    BYTE PTR [eax],al
10008e86:	add    BYTE PTR [ecx],al
	...
10008eb8:	and    ecx,DWORD PTR [edi-0x64da610a]
10008ebe:	clc    
10008ebf:	repnz sub al,0xbd
10008ec2:	std    
10008ec3:	jmp    FWORD PTR [esi+edi*4]
10008ec6:	std    
10008ec7:	jmp    FWORD PTR [esi+edi*4]
10008eca:	std    
10008ecb:	jmp    FWORD PTR [edi+edi*4]
10008ece:	std    
10008ecf:	jmp    FWORD PTR [edi+edi*4]
10008ed2:	std    
10008ed3:	jmp    FWORD PTR [edi+edi*4]
10008ed6:	std    
10008ed7:	jmp    FWORD PTR [edi+edi*4]
10008eda:	std    
10008edb:	jmp    FWORD PTR [edi+edi*4]
10008ede:	std    
10008edf:	jmp    FWORD PTR [esi+edi*4]
10008ee2:	std    
10008ee3:	jmp    FWORD PTR [esi+edi*4]
10008ee6:	std    
10008ee7:	jmp    FWORD PTR [edi*4-0x43d40003]
10008eee:	std    
10008eef:	jmp    FWORD PTR [ebx]
10008ef1:	mov    ebx,0xbf36fffc
10008ef6:	cld    
10008ef7:	inc    DWORD PTR [ebp-0x3b]
10008efa:	cld    
10008efb:	jmp    FWORD PTR [edx]
10008efd:	mov    eax,0xb62afffc
10008f02:	cld    
10008f03:	jmp    FWORD PTR [edx]
10008f05:	mov    ch,0xfc
10008f07:	jmp    FWORD PTR [edx]
10008f09:	mov    bl,0xfc
10008f0b:	jmp    FWORD PTR [ecx]
10008f0d:	mov    dl,0xfb
10008f0f:	jmp    FWORD PTR [ecx]
10008f11:	mov    cl,0xfb
10008f13:	jmp    FWORD PTR [ecx]
10008f15:	scas   eax,DWORD PTR es:[edi]
10008f16:	sti    
10008f17:	jmp    FWORD PTR [eax]
10008f19:	scas   al,BYTE PTR es:[edi]
10008f1a:	sti    
10008f1b:	jmp    FWORD PTR [eax]
10008f1d:	lods   al,BYTE PTR ds:[esi]
10008f1e:	sti    
10008f1f:	jmp    FWORD PTR [eax]
10008f21:	stos   DWORD PTR es:[edi],eax
10008f22:	sti    
10008f23:	jmp    DWORD PTR [edi]
10008f25:	test   eax,0xa827fffa
10008f2a:	cli    
10008f2b:	jmp    DWORD PTR [edi]
10008f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10008f2e:	cli    
10008f2f:	jmp    DWORD PTR [edi]
10008f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008f32:	cli    
10008f33:	jmp    DWORD PTR [esi]
10008f35:	mov    ds:0x8d22fffa,al
10008f3a:	div    bh
10008f3c:	sbb    ch,BYTE PTR [ebp+edi*4+0x1e]
10008f40:	add    BYTE PTR [eax],al
10008f42:	add    BYTE PTR [ecx],al
	...
10008f7c:	and    ecx,DWORD PTR [edi-0x64da520a]
10008f82:	clc    
10008f83:	repnz sub al,0xbb
10008f86:	std    
10008f87:	jmp    FWORD PTR [edi*4-0x42d30003]
10008f8e:	std    
10008f8f:	jmp    FWORD PTR [esi+edi*4]
10008f92:	std    
10008f93:	jmp    FWORD PTR [esi+edi*4]
10008f96:	std    
10008f97:	jmp    FWORD PTR [esi+edi*4]
10008f9a:	std    
10008f9b:	jmp    FWORD PTR [edi*4-0x42d30003]
10008fa2:	std    
10008fa3:	jmp    FWORD PTR [esp+edi*4]
10008fa6:	std    
10008fa7:	jmp    FWORD PTR [ebx]
10008fa9:	mov    esp,0xbb2bfffd
10008fae:	cld    
10008faf:	jmp    FWORD PTR [ebx]
10008fb1:	mov    edx,0xb92bfffc
10008fb6:	cld    
10008fb7:	jmp    FWORD PTR [ebx]
10008fb9:	mov    eax,0xb72afffc
10008fbe:	cld    
10008fbf:	jmp    FWORD PTR [edx]
10008fc1:	mov    ch,0xfc
10008fc3:	jmp    FWORD PTR [edx]
10008fc5:	mov    ah,0xfc
10008fc7:	jmp    FWORD PTR [ecx]
10008fc9:	mov    bl,0xfb
10008fcb:	jmp    FWORD PTR [ecx]
10008fcd:	mov    cl,0xfb
10008fcf:	jmp    FWORD PTR [ecx]
10008fd1:	mov    al,0xfb
10008fd3:	jmp    FWORD PTR [eax]
10008fd5:	scas   al,BYTE PTR es:[edi]
10008fd6:	sti    
10008fd7:	jmp    FWORD PTR [eax]
10008fd9:	lods   eax,DWORD PTR ds:[esi]
10008fda:	sti    
10008fdb:	jmp    FWORD PTR [eax]
10008fdd:	stos   DWORD PTR es:[edi],eax
10008fde:	sti    
10008fdf:	jmp    FWORD PTR [eax]
10008fe1:	stos   BYTE PTR es:[edi],al
10008fe2:	cli    
10008fe3:	jmp    DWORD PTR [edi]
10008fe5:	test   eax,0xa727fffa
10008fea:	cli    
10008feb:	jmp    DWORD PTR [edi]
10008fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10008fee:	cli    
10008fef:	jmp    DWORD PTR [esi]
10008ff1:	mov    ds:0x8d22fffa,eax
10008ff6:	cmc    
10008ff7:	hlt    
10008ff8:	and    DWORD PTR [ecx+0x88f0],ecx
10008ffe:	add    BYTE PTR [ecx],al
	...
10009040:	and    cl,BYTE PTR [esi-0x6bdb650a]
10009046:	div    eax
10009048:	sub    dh,BYTE PTR [edi-0x43d40004]
1000904e:	std    
1000904f:	jmp    FWORD PTR [ebx]
10009051:	mov    esp,0xbc2bfffd
10009056:	std    
10009057:	jmp    FWORD PTR [ebx]
10009059:	mov    esp,0xbc2bfffd
1000905e:	std    
1000905f:	jmp    FWORD PTR [ebx]
10009061:	mov    ebx,0xbb2bfffd
10009066:	cld    
10009067:	jmp    FWORD PTR [ebx]
10009069:	mov    edx,0xb92bfffc
1000906e:	cld    
1000906f:	jmp    FWORD PTR [ebx]
10009071:	mov    ecx,0xb82afffc
10009076:	cld    
10009077:	jmp    FWORD PTR [edx]
10009079:	mov    bh,0xfc
1000907b:	jmp    FWORD PTR [edx]
1000907d:	mov    ch,0xfc
1000907f:	jmp    FWORD PTR [edx]
10009081:	mov    ah,0xfc
10009083:	jmp    FWORD PTR [ecx]
10009085:	mov    bl,0xfb
10009087:	jmp    FWORD PTR [ecx]
10009089:	mov    dl,0xfb
1000908b:	jmp    FWORD PTR [ecx]
1000908d:	mov    al,0xfb
1000908f:	jmp    FWORD PTR [ecx]
10009091:	scas   eax,DWORD PTR es:[edi]
10009092:	sti    
10009093:	jmp    FWORD PTR [eax]
10009095:	lods   eax,DWORD PTR ds:[esi]
10009096:	sti    
10009097:	jmp    FWORD PTR [eax]
10009099:	lods   al,BYTE PTR ds:[esi]
1000909a:	sti    
1000909b:	jmp    FWORD PTR [eax]
1000909d:	stos   DWORD PTR es:[edi],eax
1000909e:	sti    
1000909f:	jmp    DWORD PTR [edi]
100090a1:	test   eax,0xa827fffa
100090a6:	cli    
100090a7:	jmp    DWORD PTR [edi]
100090a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
100090aa:	cli    
100090ab:	jmp    DWORD PTR [eax+ebx*4]
100090ae:	clc    
100090af:	(bad)  
100090b0:	and    cl,BYTE PTR [esi+esi*8-0x2a86e204]
100090b7:	and    eax,0x1000000
	...
10009104:	and    cl,BYTE PTR [esi+esi*8-0x971dd7c]
1000910b:	imul   DWORD PTR [ecx]
1000910d:	mov    al,0xfb
1000910f:	jmp    FWORD PTR [ebx]
10009111:	mov    edx,0xbb2bfffc
10009116:	cld    
10009117:	jmp    FWORD PTR [ebx]
10009119:	mov    edx,0xba2bfffc
1000911e:	cld    
1000911f:	jmp    FWORD PTR [ebx]
10009121:	mov    edx,0xb92bfffc
10009126:	cld    
10009127:	jmp    FWORD PTR [ebx]
10009129:	mov    ecx,0xb82bfffc
1000912e:	cld    
1000912f:	jmp    FWORD PTR [edx]
10009131:	mov    bh,0xfc
10009133:	jmp    FWORD PTR [edx]
10009135:	mov    dh,0xfc
10009137:	jmp    FWORD PTR [edx]
10009139:	mov    ch,0xfc
1000913b:	jmp    FWORD PTR [edx]
1000913d:	mov    ah,0xfc
1000913f:	jmp    FWORD PTR [edx]
10009141:	mov    bl,0xfb
10009143:	jmp    FWORD PTR [ecx]
10009145:	mov    dl,0xfb
10009147:	jmp    FWORD PTR [ecx]
10009149:	mov    cl,0xfb
1000914b:	jmp    FWORD PTR [ecx]
1000914d:	scas   eax,DWORD PTR es:[edi]
1000914e:	sti    
1000914f:	jmp    FWORD PTR [eax]
10009151:	scas   al,BYTE PTR es:[edi]
10009152:	sti    
10009153:	jmp    FWORD PTR [eax]
10009155:	lods   eax,DWORD PTR ds:[esi]
10009156:	sti    
10009157:	jmp    FWORD PTR [eax]
10009159:	stos   DWORD PTR es:[edi],eax
1000915a:	sti    
1000915b:	jmp    FWORD PTR [eax]
1000915d:	stos   BYTE PTR es:[edi],al
1000915e:	cli    
1000915f:	jmp    DWORD PTR [edi]
10009161:	test   eax,0xa727fffa
10009166:	cli    
10009167:	jmp    DWORD PTR [edi+edx*4]
1000916a:	idiv   edx
1000916c:	and    cl,BYTE PTR [ebp+0x741cd9f4]
10009172:	int3   
10009173:	pop    ss
10009174:	add    BYTE PTR [eax],al
10009176:	add    BYTE PTR [ecx],al
	...
100091c8:	and    cl,BYTE PTR [esi+esi*8-0x970dcea]
100091cf:	fisub  DWORD PTR ds:0x2af3f89b
100091d5:	mov    ch,0xfc
100091d7:	jmp    FWORD PTR [ebx]
100091d9:	mov    ecx,0xb92bfffc
100091de:	cld    
100091df:	jmp    FWORD PTR [ebx]
100091e1:	mov    eax,0xb82bfffc
100091e6:	cld    
100091e7:	jmp    FWORD PTR [edx]
100091e9:	mov    bh,0xfc
100091eb:	jmp    FWORD PTR [edx]
100091ed:	mov    bh,0xfc
100091ef:	jmp    FWORD PTR [edx]
100091f1:	mov    dh,0xfc
100091f3:	jmp    FWORD PTR [edx]
100091f5:	mov    ch,0xfc
100091f7:	jmp    FWORD PTR [edx]
100091f9:	mov    ah,0xfc
100091fb:	jmp    FWORD PTR [ecx]
100091fd:	mov    bl,0xfb
100091ff:	jmp    FWORD PTR [ecx]
10009201:	mov    dl,0xfb
10009203:	jmp    FWORD PTR [ecx]
10009205:	mov    cl,0xfb
10009207:	jmp    FWORD PTR [ecx]
10009209:	scas   eax,DWORD PTR es:[edi]
1000920a:	sti    
1000920b:	jmp    FWORD PTR [eax]
1000920d:	scas   al,BYTE PTR es:[edi]
1000920e:	sti    
1000920f:	jmp    FWORD PTR [eax]
10009211:	lods   eax,DWORD PTR ds:[esi]
10009212:	sti    
10009213:	jmp    FWORD PTR [eax]
10009215:	lods   al,BYTE PTR ds:[esi]
10009216:	sti    
10009217:	jmp    FWORD PTR [eax]
10009219:	stos   BYTE PTR es:[edi],al
1000921a:	cli    
1000921b:	jmp    DWORD PTR [edi]
1000921d:	test   eax,0xa126fffa
10009222:	stc    
10009223:	jmp    DWORD PTR [ebx]
10009225:	(bad)  
10009226:	div    cl
10009228:	and    cl,BYTE PTR [ebx+esi*8-0x328ae351]
1000922f:	or     al,0x0
	...
1000928d:	add    BYTE PTR [eax],al
1000928f:	add    BYTE PTR [edx],ah
10009291:	(bad)  
10009292:	test   BYTE PTR [ebp-0xb0972de],0x25
10009299:	pushf  
1000929a:	clc    
1000929b:	hlt    
1000929c:	sub    BYTE PTR [esi-0x48d50005],ch
100092a2:	cld    
100092a3:	jmp    FWORD PTR [edx]
100092a5:	mov    dh,0xfc
100092a7:	jmp    FWORD PTR [edx]
100092a9:	mov    dh,0xfc
100092ab:	jmp    FWORD PTR [edx]
100092ad:	mov    ch,0xfc
100092af:	jmp    FWORD PTR [edx]
100092b1:	mov    ah,0xfc
100092b3:	jmp    FWORD PTR [edx]
100092b5:	mov    bl,0xfc
100092b7:	jmp    FWORD PTR [ecx]
100092b9:	mov    bl,0xfb
100092bb:	jmp    FWORD PTR [ecx]
100092bd:	mov    dl,0xfb
100092bf:	jmp    FWORD PTR [ecx]
100092c1:	mov    cl,0xfb
100092c3:	jmp    FWORD PTR [ecx]
100092c5:	scas   eax,DWORD PTR es:[edi]
100092c6:	sti    
100092c7:	jmp    FWORD PTR [eax]
100092c9:	scas   al,BYTE PTR es:[edi]
100092ca:	sti    
100092cb:	jmp    FWORD PTR [eax]
100092cd:	lods   eax,DWORD PTR ds:[esi]
100092ce:	sti    
100092cf:	jmp    FWORD PTR [eax]
100092d1:	lods   al,BYTE PTR ds:[esi]
100092d2:	sti    
100092d3:	jmp    FWORD PTR [eax]
100092d5:	stos   DWORD PTR es:[edi],eax
100092d6:	sti    
100092d7:	jmp    DWORD PTR ds:0x23fff99f
100092dd:	xchg   ecx,eax
100092de:	div    al
100092e0:	and    cl,BYTE PTR [ebp-0x78de2f0b]
100092e6:	in     al,dx
100092e7:	xor    al,0x0
100092e9:	add    BYTE PTR [eax],al
100092eb:	add    DWORD PTR [eax],eax
	...
10009355:	add    BYTE PTR [eax],al
10009357:	add    BYTE PTR [edx],ah
10009359:	mov    esi,?
1000935b:	and    ecx,DWORD PTR gs:[edi-0x6fdc250a]
10009362:	div    dl
10009364:	and    eax,0x27f6f89b
10009369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000936a:	cli    
1000936b:	jmp    FWORD PTR [eax]
1000936d:	stos   DWORD PTR es:[edi],eax
1000936e:	sti    
1000936f:	jmp    FWORD PTR [eax]
10009371:	scas   eax,DWORD PTR es:[edi]
10009372:	cli    
10009373:	jmp    FWORD PTR [ecx]
10009375:	mov    cl,0xfb
10009377:	jmp    FWORD PTR [ecx]
10009379:	mov    cl,0xfb
1000937b:	jmp    FWORD PTR [ecx]
1000937d:	mov    al,0xfb
1000937f:	jmp    FWORD PTR [ecx]
10009381:	scas   eax,DWORD PTR es:[edi]
10009382:	sti    
10009383:	jmp    DWORD PTR [edi]
10009385:	stos   DWORD PTR es:[edi],eax
10009386:	cli    
10009387:	jmp    DWORD PTR [edi]
10009389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000938a:	cli    
1000938b:	jmp    DWORD PTR ds:0x24fff99f
10009391:	xchg   esp,eax
10009392:	div    ecx
10009394:	and    cl,BYTE PTR [esi+esi*8-0xb72dd01]
1000939b:	mov    dh,0x21
1000939d:	mov    dh,dl
1000939f:	inc    edx
	...
10009420:	and    cl,BYTE PTR [esi+esi*8-0x973ddd7]
10009427:	push   0xb4f68f22
1000942c:	and    cl,BYTE PTR [edi-0x72dd2a0a]
10009432:	div    al
10009434:	and    cl,BYTE PTR [esi+esi*8-0x971dd05]
1000943b:	cmc    
1000943c:	and    cl,BYTE PTR [esi-0x71dd0a0a]
10009442:	div    ch
10009444:	and    cl,BYTE PTR [ebp-0x71dd0f0a]
1000944a:	not    ch
1000944c:	and    cl,BYTE PTR [ebp-0x75dd600b]
10009452:	repz push esp
10009454:	and    cl,BYTE PTR [esi+esi*8+0x2]
	...
100094f7:	add    BYTE PTR [edx],ah
100094f9:	mov    esi,?
100094fb:	sbb    ah,BYTE PTR [edx]
100094fd:	mov    esi,?
100094ff:	sbb    ah,BYTE PTR [edx]
10009501:	mov    esi,?
10009503:	sbb    al,BYTE PTR [eax]
	...
1000955d:	add    BYTE PTR [eax],al
1000955f:	add    bh,bh
10009561:	(bad)  
10009562:	(bad)  
10009563:	(bad)  
10009564:	(bad)  
10009565:	inc    DWORD PTR [eax]
10009567:	add    bh,bh
10009569:	(bad)  
1000956a:	(bad)  
1000956b:	(bad)  
1000956c:	(bad)  
1000956d:	inc    DWORD PTR [eax]
1000956f:	add    bh,bh
10009571:	jmp    eax
10009573:	pop    es
10009574:	(bad)  
10009575:	inc    DWORD PTR [eax]
10009577:	add    bh,bh
10009579:	inc    DWORD PTR [eax]
1000957b:	add    bh,bh
1000957d:	inc    DWORD PTR [eax]
1000957f:	add    bh,bh
10009581:	clc    
10009582:	add    BYTE PTR [eax],al
10009584:	aas    
10009585:	inc    DWORD PTR [eax]
10009587:	add    bh,bh
10009589:	lock add BYTE PTR [eax],al
1000958c:	ud0    eax,DWORD PTR [eax]
1000958f:	add    bh,bh
10009591:	rol    BYTE PTR [eax],0x0
10009594:	add    edi,edi
10009596:	add    BYTE PTR [eax],al
10009598:	inc    DWORD PTR [eax-0xff0000]
1000959e:	add    BYTE PTR [eax],al
100095a0:	inc    DWORD PTR [eax]
100095a2:	add    BYTE PTR [eax],al
100095a4:	add    bh,bh
100095a6:	add    BYTE PTR [eax],al
100095a8:	inc    BYTE PTR [eax]
100095aa:	add    BYTE PTR [eax],al
100095ac:	add    BYTE PTR [edi+0x0],bh
100095af:	add    ah,bh
100095b1:	add    BYTE PTR [eax],al
100095b3:	add    BYTE PTR [eax],al
100095b5:	aas    
100095b6:	add    BYTE PTR [eax],al
100095b8:	clc    
100095b9:	add    BYTE PTR [eax],al
100095bb:	add    BYTE PTR [eax],al
100095bd:	aas    
100095be:	add    BYTE PTR [eax],al
100095c0:	clc    
100095c1:	add    BYTE PTR [eax],al
100095c3:	add    BYTE PTR [eax],al
100095c5:	pop    ds
100095c6:	add    BYTE PTR [eax],al
100095c8:	lock add BYTE PTR [eax],al
100095cb:	add    BYTE PTR [eax],al
100095cd:	sldt   WORD PTR [eax]
100095d0:	lock add BYTE PTR [eax],al
100095d3:	add    BYTE PTR [eax],al
100095d5:	sldt   WORD PTR [eax]
100095d8:	loopne 0x100095da
100095da:	add    BYTE PTR [eax],al
100095dc:	add    BYTE PTR [edi],al
100095de:	add    BYTE PTR [eax],al
100095e0:	loopne 0x100095e2
100095e2:	add    BYTE PTR [eax],al
100095e4:	add    BYTE PTR [edi],al
100095e6:	add    BYTE PTR [eax],al
100095e8:	rol    BYTE PTR [eax],0x0
100095eb:	add    BYTE PTR [eax],al
100095ed:	pop    es
100095ee:	add    BYTE PTR [eax],al
100095f0:	rol    BYTE PTR [eax],0x0
100095f3:	add    BYTE PTR [eax],al
100095f5:	add    eax,DWORD PTR [eax]
100095f7:	add    al,al
100095f9:	add    BYTE PTR [eax],al
100095fb:	add    BYTE PTR [eax],al
100095fd:	add    eax,DWORD PTR [eax]
100095ff:	add    BYTE PTR [eax+0x0],al
10009605:	add    eax,DWORD PTR [eax]
10009607:	add    BYTE PTR [eax+0x0],al
1000960d:	add    eax,DWORD PTR [eax]
1000960f:	add    BYTE PTR [eax+0x0],al
10009615:	add    eax,DWORD PTR [eax]
10009617:	add    BYTE PTR [eax+0x0],al
1000961d:	add    eax,DWORD PTR [eax]
1000961f:	add    BYTE PTR [eax+0x0],al
10009625:	add    eax,DWORD PTR [eax]
10009627:	add    BYTE PTR [eax+0x0],al
1000962d:	add    eax,DWORD PTR [eax]
1000962f:	add    BYTE PTR [eax+0x0],al
10009635:	add    eax,DWORD PTR [eax]
10009637:	add    BYTE PTR [eax+0x0],al
1000963d:	add    eax,DWORD PTR [eax]
1000963f:	add    BYTE PTR [eax+0x0],al
10009645:	add    eax,DWORD PTR [eax]
10009647:	add    BYTE PTR [eax+0x0],al
1000964d:	add    eax,DWORD PTR [eax]
1000964f:	add    BYTE PTR [eax+0x0],al
10009655:	add    eax,DWORD PTR [eax]
10009657:	add    al,al
10009659:	add    BYTE PTR [eax],al
1000965b:	add    BYTE PTR [eax],al
1000965d:	pop    es
1000965e:	add    BYTE PTR [eax],al
10009660:	rol    BYTE PTR [eax],0x0
10009663:	add    BYTE PTR [eax],al
10009665:	pop    es
10009666:	add    BYTE PTR [eax],al
10009668:	rol    BYTE PTR [eax],0x0
1000966b:	add    BYTE PTR [eax],al
1000966d:	pop    es
1000966e:	add    BYTE PTR [eax],al
10009670:	loopne 0x10009672
10009672:	add    BYTE PTR [eax],al
10009674:	add    BYTE PTR [edi],cl
10009676:	add    BYTE PTR [eax],al
10009678:	loopne 0x1000967a
1000967a:	add    BYTE PTR [eax],al
1000967c:	add    BYTE PTR [edi],cl
1000967e:	add    BYTE PTR [eax],al
10009680:	lock add BYTE PTR [eax],al
10009683:	add    BYTE PTR [eax],al
10009685:	pop    ds
10009686:	add    BYTE PTR [eax],al
10009688:	lock add BYTE PTR [eax],al
1000968b:	add    BYTE PTR [eax],al
1000968d:	aas    
1000968e:	add    BYTE PTR [eax],al
10009690:	clc    
10009691:	add    BYTE PTR [eax],al
10009693:	add    BYTE PTR [eax],al
10009695:	aas    
10009696:	add    BYTE PTR [eax],al
10009698:	cld    
10009699:	add    BYTE PTR [eax],al
1000969b:	add    BYTE PTR [eax],al
1000969d:	jg     0x1000969f
1000969f:	add    dh,bh
100096a1:	add    BYTE PTR [eax],al
100096a3:	add    BYTE PTR [eax],al
100096a5:	inc    DWORD PTR [eax]
100096a7:	add    bh,bh
100096a9:	add    BYTE PTR [eax],al
100096ab:	add    BYTE PTR [ecx],al
100096ad:	inc    DWORD PTR [eax]
100096af:	add    bh,bh
100096b1:	add    BYTE PTR [eax],0x0
100096b4:	add    edi,edi
100096b6:	add    BYTE PTR [eax],al
100096b8:	inc    eax
100096ba:	add    BYTE PTR [eax],al
100096bc:	ud0    eax,DWORD PTR [eax]
100096bf:	add    bh,bh
100096c1:	lock add BYTE PTR [eax],al
100096c4:	pop    ds
100096c5:	inc    DWORD PTR [eax]
100096c7:	add    bh,bh
100096c9:	cld    
100096ca:	add    BYTE PTR [eax],al
100096cc:	(bad)  
100096cd:	inc    DWORD PTR [eax]
100096cf:	add    bh,bh
100096d1:	inc    DWORD PTR [eax]
100096d3:	add    edi,edi
100096d5:	inc    DWORD PTR [eax]
100096d7:	add    bh,bh
100096d9:	(bad)  
100096da:	cld    
100096db:	jg     0x100096dc
100096dd:	inc    DWORD PTR [eax]
100096df:	add    BYTE PTR [eax],ch
100096e1:	add    BYTE PTR [eax],al
100096e3:	add    BYTE PTR [eax],ah
100096e5:	add    BYTE PTR [eax],al
100096e7:	add    BYTE PTR [eax+0x0],al
100096ea:	add    BYTE PTR [eax],al
100096ec:	add    DWORD PTR [eax],eax
100096ee:	and    BYTE PTR [eax],al
100096f0:	add    BYTE PTR [eax],al
100096f2:	add    BYTE PTR [eax],al
100096f4:	adc    BYTE PTR [eax],0x0
	...
10009833:	add    DWORD PTR [eax],eax
10009835:	add    BYTE PTR [eax],al
10009837:	add    eax,DWORD PTR [eax]
10009839:	add    BYTE PTR [eax],al
1000983b:	push   es
1000983c:	add    BYTE PTR [eax],al
1000983e:	add    BYTE PTR [eax],cl
10009840:	add    BYTE PTR [eax],al
10009842:	add    BYTE PTR [ecx],cl
10009844:	add    BYTE PTR [eax],al
10009846:	add    BYTE PTR [ecx],cl
10009848:	add    BYTE PTR [eax],al
1000984a:	add    BYTE PTR [ecx],cl
1000984c:	add    BYTE PTR [eax],al
1000984e:	add    BYTE PTR [eax],cl
10009850:	add    BYTE PTR [eax],al
10009852:	add    BYTE PTR [esi],al
10009854:	add    BYTE PTR [eax],al
10009856:	add    BYTE PTR [eax+eax*1],al
10009859:	add    BYTE PTR [eax],al
1000985b:	add    DWORD PTR [eax],eax
	...
100098a9:	add    BYTE PTR [eax],al
100098ab:	add    al,BYTE PTR [eax]
100098ad:	add    BYTE PTR [eax],al
100098af:	push   es
100098b0:	add    BYTE PTR [eax],al
100098b2:	add    BYTE PTR [ebx],cl
100098b4:	sbb    ebp,DWORD PTR [esi-0x3f]
100098b7:	cmp    al,0x1c
100098b9:	jne    0x10009888
100098bb:	pop    esp
100098bc:	push   ds
100098bd:	jge    0x1000989b
100098bf:	sbb    BYTE PTR [edi],0x7f
100098c2:	fisttp WORD PTR [ebp-0x792583e2]
100098c8:	sbb    esi,DWORD PTR [ecx-0x3a]
100098cb:	pusha  
100098cc:	sbb    BYTE PTR [eax+esi*4+0x46],ah
100098d0:	add    BYTE PTR [eax],al
100098d2:	add    BYTE PTR [esi],dl
100098d4:	add    BYTE PTR [eax],al
100098d6:	add    BYTE PTR [ecx],dl
100098d8:	add    BYTE PTR [eax],al
100098da:	add    BYTE PTR [ebx],cl
100098dc:	add    BYTE PTR [eax],al
100098de:	add    BYTE PTR [esi],al
100098e0:	add    BYTE PTR [eax],al
100098e2:	add    BYTE PTR [edx],al
	...
10009920:	add    BYTE PTR [eax],al
10009922:	add    BYTE PTR [ecx],al
10009924:	add    BYTE PTR [eax],al
10009926:	add    BYTE PTR [ecx+ebx*1],al
10009929:	data16 mov dl,0x28
1000992c:	and    BYTE PTR [esi-0x73dd5d17],al
10009932:	repz jmp 0x9023:0xf2f48e22
1000993a:	cmc    
1000993b:	repnz and edx,DWORD PTR [esi+esi*8-0x86adc06]
10009943:	jmp    DWORD PTR [ebx]
10009945:	xchg   esp,eax
10009946:	idiv   ebx
10009948:	and    ecx,DWORD PTR [edi-0x72dd0d0b]
1000994e:	hlt    
1000994f:	repnz and cl,BYTE PTR [ebx-0x7cdf110d]
10009956:	in     eax,0xaa
10009958:	adc    eax,0x3e9656
1000995d:	add    BYTE PTR [eax],al
1000995f:	adc    eax,0xc000000
10009964:	add    BYTE PTR [eax],al
10009966:	add    BYTE PTR ds:0x1000000,al
	...
1000999c:	add    BYTE PTR [eax],al
1000999e:	add    BYTE PTR [ecx],al
100099a0:	adc    al,0x52
100099a2:	xchg   ecx,eax
100099a3:	adc    DWORD PTR [ecx],esp
100099a5:	mov    esi,ebp
100099a7:	stos   DWORD PTR es:[edi],eax
100099a8:	and    cl,BYTE PTR [ebp-0x69db0a0b]
100099ae:	idiv   ebp
100099b0:	and    eax,0x26fff9a0
100099b5:	mov    ds:0xa226fffa,al
100099ba:	stc    
100099bb:	jmp    DWORD PTR [esi]
100099bd:	mov    eax,ds:0xa126fff9
100099c2:	stc    
100099c3:	jmp    DWORD PTR ds:0x25fff9a0
100099c9:	mov    al,ds:0x9f25fff9
100099ce:	stc    
100099cf:	jmp    DWORD PTR ds:0x23fff99c
100099d5:	xchg   ebp,eax
100099d6:	idiv   esi
100099d8:	and    cl,BYTE PTR [ebp-0x79df0b0c]
100099de:	jmp    0x602ea59e
100099e3:	sub    BYTE PTR [eax],al
100099e5:	add    BYTE PTR [eax],al
100099e7:	adc    DWORD PTR [eax],eax
100099e9:	add    BYTE PTR [eax],al
100099eb:	pop    es
100099ec:	add    BYTE PTR [eax],al
100099ee:	add    BYTE PTR [ecx],al
	...
10009a18:	add    BYTE PTR [eax],al
10009a1a:	add    BYTE PTR [ecx],al
10009a1c:	sbb    ebp,DWORD PTR [esi-0x3f]
10009a1f:	sbb    al,0x22
10009a21:	mov    esp,?
10009a23:	jmp    0xaf8314c
10009a28:	daa    
10009a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10009a2a:	cli    
10009a2b:	jmp    DWORD PTR [esi]
10009a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10009a2e:	cli    
10009a2f:	jmp    DWORD PTR [esi]
10009a31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10009a32:	cli    
10009a33:	jmp    DWORD PTR [esi]
10009a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009a36:	cli    
10009a37:	jmp    DWORD PTR [esi]
10009a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009a3a:	cli    
10009a3b:	jmp    DWORD PTR [esi]
10009a3d:	mov    ds:0xa326fffa,eax
10009a42:	cli    
10009a43:	jmp    DWORD PTR [esi]
10009a45:	mov    ds:0xa126fff9,al
10009a4a:	stc    
10009a4b:	jmp    DWORD PTR ds:0x25fff9a0
10009a51:	lahf   
10009a52:	stc    
10009a53:	jmp    DWORD PTR ds:0x25fff99f
10009a59:	sahf   
10009a5a:	stc    
10009a5b:	jmp    DWORD PTR [ebx]
10009a5d:	xchg   esp,eax
10009a5e:	idiv   ebx
10009a60:	and    cl,BYTE PTR [ebp+esi*8+0x6f3f0ff6]
10009a67:	xor    eax,DWORD PTR [eax]
10009a69:	add    BYTE PTR [eax],al
10009a6b:	adc    al,0x0
10009a6d:	add    BYTE PTR [eax],al
10009a6f:	or     BYTE PTR [eax],al
10009a71:	add    BYTE PTR [eax],al
10009a73:	add    al,BYTE PTR [eax]
	...
10009a95:	add    BYTE PTR [eax],al
10009a97:	add    DWORD PTR [ebx],ebx
10009a99:	outs   dx,BYTE PTR ds:[esi]
10009a9a:	rcr    DWORD PTR [edx+eiz*1],0x8c
10009a9e:	idiv   ah
10009aa0:	mov    es:0xa727fff9,eax
10009aa6:	cli    
10009aa7:	jmp    DWORD PTR [edi]
10009aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10009aaa:	cli    
10009aab:	jmp    DWORD PTR [edi]
10009aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10009aae:	cli    
10009aaf:	jmp    DWORD PTR [edi]
10009ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10009ab2:	cli    
10009ab3:	jmp    DWORD PTR [edi]
10009ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10009ab6:	cli    
10009ab7:	jmp    DWORD PTR [edi]
10009ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10009aba:	cli    
10009abb:	jmp    DWORD PTR [edi]
10009abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10009abe:	cli    
10009abf:	jmp    DWORD PTR [esi]
10009ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009ac2:	cli    
10009ac3:	jmp    DWORD PTR [esi]
10009ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009ac6:	cli    
10009ac7:	jmp    DWORD PTR [esi]
10009ac9:	mov    ds:0xa226fffa,eax
10009ace:	stc    
10009acf:	jmp    DWORD PTR [esi]
10009ad1:	mov    eax,ds:0xa025fff9
10009ad6:	stc    
10009ad7:	jmp    DWORD PTR ds:0x25fff99f
10009add:	sahf   
10009ade:	stc    
10009adf:	jmp    DWORD PTR ds:0x22fff99c
10009ae5:	mov    ebp,?
10009ae7:	neg    DWORD PTR [edi]
10009ae9:	jle    0x10009ac9
10009aeb:	cwde   
10009aec:	add    BYTE PTR [eax],al
10009aee:	add    BYTE PTR [eax+eax*1],dl
10009af1:	add    BYTE PTR [eax],al
10009af3:	pop    es
10009af4:	add    BYTE PTR [eax],al
10009af6:	add    BYTE PTR [ecx],al
	...
10009b14:	sbb    eax,0x221ad077
10009b19:	mov    esi,?
10009b1b:	cld    
10009b1c:	daa    
10009b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10009b1e:	cli    
10009b1f:	jmp    DWORD PTR [edi]
10009b21:	test   eax,0xaa28fffa
10009b26:	cli    
10009b27:	jmp    FWORD PTR [eax]
10009b29:	stos   BYTE PTR es:[edi],al
10009b2a:	cli    
10009b2b:	jmp    FWORD PTR [eax]
10009b2d:	stos   BYTE PTR es:[edi],al
10009b2e:	cli    
10009b2f:	jmp    DWORD PTR [edi]
10009b31:	test   eax,0xa927fffa
10009b36:	cli    
10009b37:	jmp    DWORD PTR [edi]
10009b39:	test   al,0xfa
10009b3b:	jmp    DWORD PTR [edi]
10009b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10009b3e:	cli    
10009b3f:	jmp    DWORD PTR [edi]
10009b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10009b42:	cli    
10009b43:	jmp    DWORD PTR [edi]
10009b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10009b46:	cli    
10009b47:	jmp    DWORD PTR [esi]
10009b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009b4a:	cli    
10009b4b:	jmp    DWORD PTR [esi]
10009b4d:	mov    ds:0xa226fffa,eax
10009b52:	stc    
10009b53:	jmp    DWORD PTR [esi]
10009b55:	mov    eax,ds:0xa025fff9
10009b5a:	stc    
10009b5b:	jmp    DWORD PTR ds:0x25fff99f
10009b61:	sahf   
10009b62:	stc    
10009b63:	jmp    DWORD PTR ds:0x22fff99d
10009b69:	mov    ebp,?
10009b6b:	not    BYTE PTR [edx]
10009b6d:	dec    eax
10009b6e:	jg     0x10009ba8
10009b70:	add    BYTE PTR [eax],al
10009b72:	add    BYTE PTR [edx],dl
10009b74:	add    BYTE PTR [eax],al
10009b76:	add    BYTE PTR ds:0x0,al
	...
10009b90:	sbb    ch,BYTE PTR [ebp-0x41]
10009b93:	or     DWORD PTR [edx],esp
10009b95:	(bad)  
10009b96:	cmc    
10009b97:	call   0xffb41c3
10009b9c:	sub    BYTE PTR [ebx-0x53d70005],ch
10009ba2:	sti    
10009ba3:	jmp    FWORD PTR [eax]
10009ba5:	lods   al,BYTE PTR ds:[esi]
10009ba6:	sti    
10009ba7:	jmp    FWORD PTR [eax]
10009ba9:	lods   al,BYTE PTR ds:[esi]
10009baa:	sti    
10009bab:	jmp    FWORD PTR [eax]
10009bad:	lods   al,BYTE PTR ds:[esi]
10009bae:	sti    
10009baf:	jmp    FWORD PTR [eax]
10009bb1:	lods   al,BYTE PTR ds:[esi]
10009bb2:	sti    
10009bb3:	jmp    FWORD PTR [eax]
10009bb5:	stos   DWORD PTR es:[edi],eax
10009bb6:	sti    
10009bb7:	jmp    FWORD PTR [eax]
10009bb9:	stos   DWORD PTR es:[edi],eax
10009bba:	sti    
10009bbb:	jmp    FWORD PTR [eax]
10009bbd:	stos   BYTE PTR es:[edi],al
10009bbe:	cli    
10009bbf:	jmp    DWORD PTR [edi]
10009bc1:	test   eax,0xa827fffa
10009bc6:	cli    
10009bc7:	jmp    DWORD PTR [edi]
10009bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10009bca:	cli    
10009bcb:	jmp    DWORD PTR [edi]
10009bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10009bce:	cli    
10009bcf:	jmp    DWORD PTR [esi]
10009bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009bd2:	cli    
10009bd3:	jmp    DWORD PTR [esi]
10009bd5:	mov    ds:0xa126fffa,al
10009bda:	stc    
10009bdb:	jmp    DWORD PTR ds:0x25fff9a0
10009be1:	lahf   
10009be2:	stc    
10009be3:	jmp    DWORD PTR ds:0x25fff99e
10009be9:	pushf  
10009bea:	stc    
10009beb:	jmp    DWORD PTR [edx]
10009bed:	mov    ebp,?
10009bef:	test   DWORD PTR ds:0x2a5e35,0xc0000
10009bf9:	add    BYTE PTR [eax],al
10009bfb:	add    al,BYTE PTR [eax]
	...
10009c0d:	add    BYTE PTR [eax],al
10009c0f:	add    BYTE PTR [edx],ah
10009c11:	mov    esi,edx
10009c13:	pushf  
10009c14:	and    eax,0x28f9f899
10009c19:	lods   eax,DWORD PTR ds:[esi]
10009c1a:	sti    
10009c1b:	jmp    FWORD PTR [eax]
10009c1d:	scas   al,BYTE PTR es:[edi]
10009c1e:	sti    
10009c1f:	jmp    FWORD PTR [ecx]
10009c21:	scas   eax,DWORD PTR es:[edi]
10009c22:	sti    
10009c23:	jmp    FWORD PTR [ecx]
10009c25:	scas   eax,DWORD PTR es:[edi]
10009c26:	sti    
10009c27:	jmp    FWORD PTR [ecx]
10009c29:	scas   eax,DWORD PTR es:[edi]
10009c2a:	sti    
10009c2b:	jmp    FWORD PTR [ecx]
10009c2d:	scas   eax,DWORD PTR es:[edi]
10009c2e:	sti    
10009c2f:	jmp    FWORD PTR [ecx]
10009c31:	scas   eax,DWORD PTR es:[edi]
10009c32:	sti    
10009c33:	dec    DWORD PTR [edx-0x7600040b]
10009c39:	cmc    
10009c3a:	sti    
10009c3b:	dec    DWORD PTR [eax-0x7900040b]
10009c41:	hlt    
10009c42:	sti    
10009c43:	inc    DWORD PTR [esp+esi*8-0xb7c0005]
10009c4a:	sti    
10009c4b:	inc    DWORD PTR [ebx+0x27fffbf4]
10009c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10009c52:	cli    
10009c53:	jmp    DWORD PTR [esi]
10009c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009c56:	cli    
10009c57:	jmp    DWORD PTR [esi]
10009c59:	mov    ds:0xa126fffa,al
10009c5e:	stc    
10009c5f:	jmp    DWORD PTR ds:0x25fff9a0
10009c65:	lahf   
10009c66:	stc    
10009c67:	jmp    DWORD PTR ds:0x23fff99e
10009c6d:	xchg   esp,eax
10009c6e:	idiv   ebp
10009c70:	and    BYTE PTR [ebp+0xb8e8],al
10009c76:	add    BYTE PTR ds:0x6000000,dl
	...
10009c8c:	and    BYTE PTR [eax+ebp*8-0x972ddee],al
10009c93:	clc    
10009c94:	sub    DWORD PTR [esi-0x4fd60005],ebp
10009c9a:	sti    
10009c9b:	jmp    FWORD PTR [ecx]
10009c9d:	mov    cl,0xfb
10009c9f:	jmp    FWORD PTR [ecx]
10009ca1:	mov    cl,0xfb
10009ca3:	jmp    FWORD PTR [ecx]
10009ca5:	mov    dl,0xfb
10009ca7:	jmp    FWORD PTR [ecx]
10009ca9:	mov    dl,0xfb
10009cab:	jmp    FWORD PTR [ecx]
10009cad:	mov    dl,0xfb
10009caf:	jmp    FWORD PTR [ecx]
10009cb1:	mov    cl,0xfb
10009cb3:	call   DWORD PTR [ebx-0x6d00030a]
10009cb9:	idiv   ah
10009cbb:	call   DWORD PTR [ecx-0x7100030b]
10009cc1:	cmc    
10009cc2:	sti    
10009cc3:	dec    DWORD PTR [ebx-0x7800040b]
10009cc9:	hlt    
10009cca:	sti    
10009ccb:	inc    DWORD PTR [esp+esi*8-0x58d80005]
10009cd2:	cli    
10009cd3:	jmp    DWORD PTR [edi]
10009cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10009cd6:	cli    
10009cd7:	jmp    DWORD PTR [esi]
10009cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009cda:	cli    
10009cdb:	jmp    DWORD PTR [esi]
10009cdd:	mov    ds:0xa126fff9,al
10009ce2:	stc    
10009ce3:	jmp    DWORD PTR ds:0x25fff99f
10009ce9:	sahf   
10009cea:	stc    
10009ceb:	jmp    DWORD PTR ds:0x22fff99e
10009cf1:	(bad)  
10009cf2:	hlt    
10009cf3:	hlt    
10009cf4:	adc    eax,0x3e9656
10009cf9:	add    BYTE PTR [eax],al
10009cfb:	or     al,0x0
10009cfd:	add    BYTE PTR [eax],al
10009cff:	add    al,BYTE PTR [eax]
	...
10009d09:	add    BYTE PTR [eax],al
10009d0b:	add    BYTE PTR [edx],ah
10009d0d:	mov    esp,?
10009d0f:	lahf   
10009d10:	and    eax,0x29fcf89d
10009d15:	mov    cl,0xfb
10009d17:	jmp    FWORD PTR [ecx]
10009d19:	mov    dl,0xfb
10009d1b:	jmp    FWORD PTR [edx]
10009d1d:	mov    bl,0xfc
10009d1f:	jmp    FWORD PTR [edx]
10009d21:	mov    ah,0xfc
10009d23:	jmp    FWORD PTR [edx]
10009d25:	mov    ah,0xfc
10009d27:	jmp    FWORD PTR [edx]
10009d29:	mov    ch,0xfc
10009d2b:	jmp    FWORD PTR [edx]
10009d2d:	mov    ah,0xfc
10009d2f:	jmp    FWORD PTR [edx]
10009d31:	mov    ah,0xfc
10009d33:	call   FWORD PTR [esi-0x62000309]
10009d39:	idiv   esp
10009d3b:	call   FWORD PTR [ebx-0x6700030a]
10009d41:	idiv   ah
10009d43:	call   DWORD PTR [ebx-0x7000030a]
10009d49:	cmc    
10009d4a:	sti    
10009d4b:	dec    DWORD PTR [edx+0x27fffbf5]
10009d51:	test   eax,0xa727fffa
10009d56:	cli    
10009d57:	jmp    DWORD PTR [edi]
10009d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10009d5a:	cli    
10009d5b:	jmp    DWORD PTR [esi]
10009d5d:	mov    ds:0xa226fffa,eax
10009d62:	stc    
10009d63:	jmp    DWORD PTR ds:0x25fff9a0
10009d69:	lahf   
10009d6a:	stc    
10009d6b:	jmp    DWORD PTR ds:0x24fff99e
10009d71:	xchg   edi,eax
10009d72:	clc    
10009d73:	jmp    DWORD PTR [eax]
10009d75:	test   eax,ebp
10009d77:	mov    ah,0x0
10009d79:	add    BYTE PTR [eax],al
10009d7b:	adc    al,BYTE PTR [eax]
10009d7d:	add    BYTE PTR [eax],al
10009d7f:	add    al,0x0
	...
10009d89:	add    BYTE PTR [eax],al
10009d8b:	add    BYTE PTR [edx],ah
10009d8d:	(bad)  
10009d8e:	div    dl
10009d90:	sub    BYTE PTR [edi-0x4cd50005],ch
10009d96:	cld    
10009d97:	jmp    FWORD PTR [edx]
10009d99:	mov    ch,0xfc
10009d9b:	jmp    FWORD PTR [edx]
10009d9d:	mov    dh,0xfc
10009d9f:	jmp    FWORD PTR [edx]
10009da1:	mov    bh,0xfc
10009da3:	jmp    FWORD PTR [edx]
10009da5:	mov    bh,0xfc
10009da7:	jmp    FWORD PTR [edx]
10009da9:	mov    bh,0xfc
10009dab:	jmp    FWORD PTR [edx]
10009dad:	mov    bh,0xfc
10009daf:	jmp    FWORD PTR [edx]
10009db1:	mov    bh,0xfc
10009db3:	jmp    FWORD PTR [edx-0x56000208]
10009db9:	clc    
10009dba:	std    
10009dbb:	jmp    DWORD PTR [edi-0x5c000208]
10009dc1:	idiv   esp
10009dc3:	call   FWORD PTR [ebp-0x68000309]
10009dc9:	idiv   ah
10009dcb:	call   DWORD PTR [ecx+0x28fffcf5]
10009dd1:	stos   BYTE PTR es:[edi],al
10009dd2:	cli    
10009dd3:	jmp    DWORD PTR [edi]
10009dd5:	test   al,0xfa
10009dd7:	jmp    DWORD PTR [edi]
10009dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10009dda:	cli    
10009ddb:	jmp    DWORD PTR [esi]
10009ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009dde:	cli    
10009ddf:	jmp    DWORD PTR [esi]
10009de1:	mov    ds:0xa126fffa,eax
10009de6:	stc    
10009de7:	jmp    DWORD PTR ds:0x25fff9a0
10009ded:	sahf   
10009dee:	stc    
10009def:	jmp    DWORD PTR ds:0x22fff99d
10009df5:	mov    ebp,?
10009df7:	cli    
10009df8:	add    BYTE PTR [eax],al
10009dfa:	add    BYTE PTR [eax],bl
10009dfc:	add    BYTE PTR [eax],al
10009dfe:	add    BYTE PTR [edi],al
	...
10009e08:	and    cl,BYTE PTR [esi+esi*8-0x96edcd1]
10009e0f:	icebp  
10009e10:	sub    dh,BYTE PTR [esp+edi*8-0x349d501]
10009e17:	jmp    FWORD PTR [edx]
10009e19:	mov    bh,0xfc
10009e1b:	jmp    FWORD PTR [ebx]
10009e1d:	mov    eax,0xb92bfffc
10009e22:	cld    
10009e23:	jmp    FWORD PTR [ebx]
10009e25:	mov    edx,0xba2bfffc
10009e2a:	cld    
10009e2b:	jmp    FWORD PTR [ebx]
10009e2d:	mov    edx,0xb92bfffc
10009e32:	cld    
10009e33:	push   DWORD PTR [esi-0x4a000207]
10009e39:	stc    
10009e3a:	std    
10009e3b:	push   DWORD PTR [ebx-0x51000207]
10009e41:	clc    
10009e42:	std    
10009e43:	jmp    FWORD PTR [eax-0x5f000208]
10009e49:	idiv   esp
10009e4b:	call   FWORD PTR [eax+0x28fffcf6]
10009e51:	lods   al,BYTE PTR ds:[esi]
10009e52:	sti    
10009e53:	jmp    FWORD PTR [eax]
10009e55:	stos   BYTE PTR es:[edi],al
10009e56:	cli    
10009e57:	jmp    DWORD PTR [edi]
10009e59:	test   al,0xfa
10009e5b:	jmp    DWORD PTR [edi]
10009e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10009e5e:	cli    
10009e5f:	jmp    DWORD PTR [esi]
10009e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009e62:	cli    
10009e63:	jmp    DWORD PTR [esi]
10009e65:	mov    ds:0xa025fff9,al
10009e6a:	stc    
10009e6b:	jmp    DWORD PTR ds:0x25fff99f
10009e71:	sahf   
10009e72:	stc    
10009e73:	jmp    DWORD PTR [edx]
10009e75:	mov    ?,esp
10009e77:	repnz sbb ch,BYTE PTR [esi+edi*4+0x58]
10009e7c:	add    BYTE PTR [eax],al
10009e7e:	add    BYTE PTR [ecx],cl
	...
10009e88:	and    cl,BYTE PTR [esi+esi*8-0x766daa1]
10009e8f:	repz sub dh,BYTE PTR [esi-0x47d40004]
10009e96:	cld    
10009e97:	jmp    FWORD PTR [ebx]
10009e99:	mov    ecx,0xbb2bfffc
10009e9e:	cld    
10009e9f:	jmp    FWORD PTR [ebx]
10009ea1:	mov    esp,0xbc2bfffd
10009ea6:	std    
10009ea7:	jmp    FWORD PTR [esp+edi*4]
10009eaa:	std    
10009eab:	jmp    FWORD PTR [ebx]
10009ead:	mov    esp,0xbc2bfffd
10009eb2:	std    
10009eb3:	(bad)  
10009eb4:	mov    edi,0xbefffefa
10009eb9:	cli    
10009eba:	std    
10009ebb:	(bad)  
10009ebc:	mov    ebx,0xb7fffdfa
10009ec1:	stc    
10009ec2:	std    
10009ec3:	push   DWORD PTR [edx-0x56000207]
10009ec9:	clc    
10009eca:	std    
10009ecb:	jmp    DWORD PTR [eax+0x28fffcf7]
10009ed1:	lods   eax,DWORD PTR ds:[esi]
10009ed2:	sti    
10009ed3:	jmp    FWORD PTR [eax]
10009ed5:	stos   DWORD PTR es:[edi],eax
10009ed6:	sti    
10009ed7:	jmp    DWORD PTR [edi]
10009ed9:	test   eax,0xa727fffa
10009ede:	cli    
10009edf:	jmp    DWORD PTR [esi]
10009ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009ee2:	cli    
10009ee3:	jmp    DWORD PTR [esi]
10009ee5:	mov    ds:0xa126fffa,eax
10009eea:	stc    
10009eeb:	jmp    DWORD PTR ds:0x25fff99f
10009ef1:	sahf   
10009ef2:	stc    
10009ef3:	jmp    DWORD PTR [ebx]
10009ef5:	xchg   ebx,eax
10009ef6:	idiv   dl
10009ef8:	push   ds
10009ef9:	jnp    0x10009ed3
10009efb:	test   BYTE PTR [eax],al
10009efd:	add    BYTE PTR [eax],al
10009eff:	or     eax,DWORD PTR [eax]
10009f01:	add    BYTE PTR [eax],al
10009f03:	add    DWORD PTR [eax],eax
10009f05:	add    BYTE PTR [eax],al
10009f07:	add    BYTE PTR [edx],ah
10009f09:	mov    esi,?
10009f0b:	jp     0x10009f33
10009f0d:	mov    al,ds:0xb82bfcf9
10009f12:	cld    
10009f13:	jmp    FWORD PTR [ebx]
10009f15:	mov    edx,0xbb2bfffc
10009f1a:	std    
10009f1b:	jmp    FWORD PTR [edi*4-0x41d30003]
10009f22:	std    
10009f23:	jmp    FWORD PTR [edi+edi*4]
10009f26:	std    
10009f27:	jmp    FWORD PTR [edi+edi*4]
10009f2a:	std    
10009f2b:	jmp    FWORD PTR [edi+edi*4]
10009f2e:	std    
10009f2f:	jmp    FWORD PTR [esi+edi*4]
10009f32:	std    
10009f33:	inc    edi
10009f35:	sti    
10009f36:	(bad)  
10009f37:	inc    esi
10009f39:	sti    
10009f3a:	(bad)  
10009f3b:	inc    ebx
10009f3d:	sti    
10009f3e:	(bad)  
10009f3f:	(bad)  
10009f40:	mov    edi,0xb9fffefa
10009f45:	stc    
10009f46:	std    
10009f47:	push   DWORD PTR [edx-0x57000207]
10009f4d:	clc    
10009f4e:	std    
10009f4f:	jmp    FWORD PTR [ecx]
10009f51:	scas   eax,DWORD PTR es:[edi]
10009f52:	sti    
10009f53:	jmp    FWORD PTR [eax]
10009f55:	lods   al,BYTE PTR ds:[esi]
10009f56:	sti    
10009f57:	jmp    FWORD PTR [eax]
10009f59:	stos   BYTE PTR es:[edi],al
10009f5a:	cli    
10009f5b:	jmp    DWORD PTR [edi]
10009f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10009f5e:	cli    
10009f5f:	jmp    DWORD PTR [edi]
10009f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10009f62:	cli    
10009f63:	jmp    DWORD PTR [esi]
10009f65:	mov    ds:0xa126fffa,eax
10009f6a:	stc    
10009f6b:	jmp    DWORD PTR ds:0x25fff9a0
10009f71:	sahf   
10009f72:	stc    
10009f73:	jmp    DWORD PTR [esi+edx*4]
10009f76:	clc    
10009f77:	jmp    DWORD PTR [eax]
10009f79:	and    ebp,0xffffffa5
10009f7c:	add    BYTE PTR [eax],al
10009f7e:	add    BYTE PTR [ebx],cl
10009f80:	add    BYTE PTR [eax],al
10009f82:	add    BYTE PTR [ecx],al
10009f84:	add    BYTE PTR [eax],al
10009f86:	add    BYTE PTR [eax],al
10009f88:	and    cl,BYTE PTR [esi+esi*8-0x65dd97c]
10009f8f:	jmp    FWORD PTR [ebx]
10009f91:	mov    ecx,0xbb2bfffc
10009f96:	std    
10009f97:	jmp    FWORD PTR [edi*4-0x40d30003]
10009f9e:	std    
10009f9f:	jmp    FWORD PTR [eax+eax*8]
10009fa2:	std    
10009fa3:	jmp    FWORD PTR [ecx+eax*8]
10009fa6:	std    
10009fa7:	jmp    FWORD PTR ds:0x2cfffdc1
10009fad:	sar    ebp,0xff
10009fb0:	sub    al,0xc0
10009fb2:	std    
10009fb3:	dec    edi
10009fb5:	cld    
10009fb6:	(bad)  
10009fb7:	dec    esi
10009fb9:	cld    
10009fba:	(bad)  
10009fbb:	dec    ebx
10009fbd:	sti    
10009fbe:	(bad)  
10009fbf:	inc    ebp
10009fc1:	sti    
10009fc2:	(bad)  
10009fc3:	(bad)  
10009fc4:	mov    edi,0xb7fffefa
10009fc9:	stc    
10009fca:	std    
10009fcb:	jmp    FWORD PTR [esi+0x29fffdf8]
10009fd1:	mov    al,0xfb
10009fd3:	jmp    FWORD PTR [eax]
10009fd5:	lods   eax,DWORD PTR ds:[esi]
10009fd6:	sti    
10009fd7:	jmp    FWORD PTR [eax]
10009fd9:	stos   DWORD PTR es:[edi],eax
10009fda:	sti    
10009fdb:	jmp    DWORD PTR [edi]
10009fdd:	test   al,0xfa
10009fdf:	jmp    DWORD PTR [edi]
10009fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
10009fe2:	cli    
10009fe3:	jmp    DWORD PTR [esi]
10009fe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
10009fe6:	cli    
10009fe7:	jmp    DWORD PTR [esi]
10009fe9:	mov    ds:0xa025fff9,al
10009fee:	stc    
10009fef:	jmp    DWORD PTR ds:0x24fff99f
10009ff5:	xchg   edi,eax
10009ff6:	clc    
10009ff7:	jmp    DWORD PTR [eax]
10009ff9:	xchg   cl,ch
10009ffb:	mov    bl,0x0
10009ffd:	add    BYTE PTR [eax],al
10009fff:	or     eax,DWORD PTR [eax]
1000a001:	add    BYTE PTR [eax],al
1000a003:	add    DWORD PTR [eax],eax
1000a005:	add    BYTE PTR [eax],al
1000a007:	add    BYTE PTR [edx],ah
1000a009:	mov    esi,?
1000a00b:	jge    0x1000a033
1000a00d:	mov    eax,ds:0xbb2bfef9
1000a012:	cld    
1000a013:	jmp    FWORD PTR [edi*4-0x40d30003]
1000a01a:	std    
1000a01b:	jmp    FWORD PTR [ecx+eax*8]
1000a01e:	std    
1000a01f:	jmp    FWORD PTR ds:0xc3fffdc2
1000a025:	sti    
1000a026:	(bad)  
1000a027:	dec    ebx
1000a029:	sti    
1000a02a:	(bad)  
1000a02b:	call   ecx
1000a02d:	cld    
1000a02e:	(bad)  
1000a02f:	call   ebp
1000a031:	cld    
1000a032:	(bad)  
1000a033:	call   edi
1000a035:	cld    
1000a036:	(bad)  
1000a037:	call   ebp
1000a039:	cld    
1000a03a:	(bad)  
1000a03b:	call   ecx
1000a03d:	cld    
1000a03e:	(bad)  
1000a03f:	dec    ebx
1000a041:	sti    
1000a042:	(bad)  
1000a043:	inc    ebx
1000a045:	sti    
1000a046:	(bad)  
1000a047:	(bad)  
1000a048:	mov    ebx,0xb3fffdfa
1000a04d:	stc    
1000a04e:	std    
1000a04f:	jmp    DWORD PTR [edi-0x64000208]
1000a055:	idiv   ah
1000a057:	call   DWORD PTR [ecx-0x7700030b]
1000a05d:	cmc    
1000a05e:	sti    
1000a05f:	jmp    DWORD PTR [edi]
1000a061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000a062:	cli    
1000a063:	jmp    DWORD PTR [esi]
1000a065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000a066:	cli    
1000a067:	jmp    DWORD PTR [esi]
1000a069:	mov    ds:0xa126fffa,al
1000a06e:	stc    
1000a06f:	jmp    DWORD PTR ds:0x24fff99f
1000a075:	xchg   esi,eax
1000a076:	clc    
1000a077:	jmp    DWORD PTR [eax]
1000a079:	test   dh,ah
1000a07b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000a07c:	add    BYTE PTR [eax],al
1000a07e:	add    BYTE PTR [ecx],cl
	...
1000a088:	and    cl,BYTE PTR [esi+esi*8-0x764daa1]
1000a08f:	repz sub edi,DWORD PTR [ebp+edi*8-0x241d301]
1000a097:	jmp    FWORD PTR [eax+eax*8]
1000a09a:	std    
1000a09b:	jmp    FWORD PTR ds:0x2dfffdc2
1000a0a1:	(bad)  
1000a0a2:	std    
1000a0a3:	push   DWORD PTR [edx-0x23]
1000a0a6:	(bad)  
1000a0a7:	dec    esi
1000a0a9:	cld    
1000a0aa:	(bad)  
1000a0ab:	call   ebp
1000a0ad:	cld    
1000a0ae:	(bad)  
1000a0af:	(bad)  
1000a0b0:	(bad)  
1000a0b2:	(bad)  
1000a0b3:	(bad)  
1000a0b4:	fdiv   st(5),st
1000a0b6:	(bad)  
1000a0b7:	(bad)  
1000a0b8:	(bad)  
1000a0ba:	(bad)  
1000a0bb:	call   ebp
1000a0bd:	cld    
1000a0be:	(bad)  
1000a0bf:	dec    esi
1000a0c1:	cld    
1000a0c2:	(bad)  
1000a0c3:	inc    esi
1000a0c5:	sti    
1000a0c6:	(bad)  
1000a0c7:	(bad)  
1000a0c8:	mov    esi,0xb5fffdfa
1000a0cd:	stc    
1000a0ce:	std    
1000a0cf:	jmp    FWORD PTR [ecx-0x62000208]
1000a0d5:	idiv   esp
1000a0d7:	call   DWORD PTR [edx+0x53fffcf6]
1000a0dd:	retf   
1000a0de:	cli    
1000a0df:	jmp    DWORD PTR [edi]
1000a0e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000a0e2:	cli    
1000a0e3:	jmp    DWORD PTR [esi]
1000a0e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a0e6:	cli    
1000a0e7:	jmp    DWORD PTR [esi]
1000a0e9:	mov    ds:0xa126fffa,eax
1000a0ee:	stc    
1000a0ef:	jmp    DWORD PTR ds:0x23fff99f
1000a0f5:	xchg   ebx,eax
1000a0f6:	idiv   dl
1000a0f8:	pop    ds
1000a0f9:	jle    0x1000a0d8
1000a0fb:	add    DWORD PTR [eax],0x70000
1000a101:	add    BYTE PTR [eax],al
1000a103:	add    BYTE PTR [eax],al
1000a105:	add    BYTE PTR [eax],al
1000a107:	add    BYTE PTR [edx],ah
1000a109:	mov    esi,?
1000a10b:	das    
1000a10c:	and    edx,DWORD PTR [edx-0x43d40e09]
1000a112:	std    
1000a113:	jmp    FWORD PTR [edi+edi*4]
1000a116:	std    
1000a117:	jmp    FWORD PTR [ecx+eax*8]
1000a11a:	std    
1000a11b:	jmp    FWORD PTR ds:0x2dfffdc3
1000a121:	(bad)  
1000a124:	cs (bad) 
1000a126:	(bad)  
1000a127:	push   DWORD PTR [edi-0x21]
1000a12a:	(bad)  
1000a12b:	call   edi
1000a12d:	cld    
1000a12e:	(bad)  
1000a12f:	(bad)  
1000a130:	fdiv   st(5),st
1000a132:	(bad)  
1000a133:	jmp    ecx
1000a135:	(bad)  
1000a136:	(bad)  
1000a137:	(bad)  
1000a138:	fdiv   st(5),st
1000a13a:	(bad)  
1000a13b:	call   edi
1000a13d:	cld    
1000a13e:	(bad)  
1000a13f:	dec    edi
1000a141:	cld    
1000a142:	(bad)  
1000a143:	inc    edi
1000a145:	sti    
1000a146:	(bad)  
1000a147:	(bad)  
1000a148:	mov    edi,0xb6fffefa
1000a14d:	stc    
1000a14e:	std    
1000a14f:	jmp    FWORD PTR [edx-0x61000208]
1000a155:	idiv   esp
1000a157:	call   FWORD PTR [eax-0x33]
1000a15a:	sti    
1000a15b:	jmp    FWORD PTR [eax]
1000a15d:	stos   BYTE PTR es:[edi],al
1000a15e:	cli    
1000a15f:	jmp    DWORD PTR [edi]
1000a161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000a162:	cli    
1000a163:	jmp    DWORD PTR [esi]
1000a165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a166:	cli    
1000a167:	jmp    DWORD PTR [esi]
1000a169:	mov    ds:0xa126fffa,eax
1000a16e:	stc    
1000a16f:	jmp    DWORD PTR ds:0x22fff99f
1000a175:	(bad)  
1000a176:	hlt    
1000a177:	icebp  
1000a178:	sbb    eax,0x51ce75
1000a17d:	add    BYTE PTR [eax],al
1000a17f:	add    al,0x0
	...
1000a189:	add    BYTE PTR [eax],al
1000a18b:	add    BYTE PTR [edx],ah
1000a18d:	mov    ?,esi
1000a18f:	out    0x2b,eax
1000a191:	mov    ch,0xfc
1000a193:	jmp    FWORD PTR [edi+edi*4]
1000a196:	std    
1000a197:	jmp    FWORD PTR ds:0x2dfffdc1
1000a19d:	ret    
1000a19e:	std    
1000a19f:	jmp    FWORD PTR ds:0x2efffec5
1000a1a5:	(bad)  
1000a1a6:	(bad)  
1000a1a7:	jmp    FWORD PTR [esi]
1000a1a9:	enter  0xfffe,0x79
1000a1ad:	(bad)  
1000a1af:	(bad)  
1000a1b0:	(bad)  
1000a1b2:	(bad)  
1000a1b3:	(bad)  
1000a1b4:	fdiv   st(5),st
1000a1b6:	(bad)  
1000a1b7:	(bad)  
1000a1b8:	(bad)  
1000a1ba:	(bad)  
1000a1bb:	call   ebp
1000a1bd:	cld    
1000a1be:	(bad)  
1000a1bf:	dec    esi
1000a1c1:	cld    
1000a1c2:	(bad)  
1000a1c3:	inc    esi
1000a1c5:	sti    
1000a1c6:	(bad)  
1000a1c7:	(bad)  
1000a1c8:	mov    esi,0xb5fffdfa
1000a1cd:	stc    
1000a1ce:	std    
1000a1cf:	jmp    FWORD PTR [ecx+0x5dfffdf8]
1000a1d5:	iret   
1000a1d6:	sti    
1000a1d7:	jmp    FWORD PTR [eax]
1000a1d9:	lods   al,BYTE PTR ds:[esi]
1000a1da:	sti    
1000a1db:	jmp    FWORD PTR [eax]
1000a1dd:	stos   BYTE PTR es:[edi],al
1000a1de:	cli    
1000a1df:	jmp    DWORD PTR [edi]
1000a1e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000a1e2:	cli    
1000a1e3:	jmp    DWORD PTR [edi]
1000a1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a1e6:	cli    
1000a1e7:	jmp    DWORD PTR [esi]
1000a1e9:	mov    ds:0xa126fffa,eax
1000a1ee:	stc    
1000a1ef:	jmp    DWORD PTR ds:0x22fff99e
1000a1f5:	mov    esi,?
1000a1f7:	cld    
1000a1f8:	add    BYTE PTR [eax],al
1000a1fa:	add    BYTE PTR ds:0x2000000,cl
	...
1000a20c:	and    cl,BYTE PTR [esi-0x5cd9650a]
1000a212:	stc    
1000a213:	(bad)  
1000a214:	sub    al,0xbf
1000a216:	std    
1000a217:	jmp    FWORD PTR [ecx+eax*8]
1000a21a:	std    
1000a21b:	jmp    FWORD PTR ds:0x2dfffdc3
1000a221:	(bad)  
1000a224:	cs (bad) 
1000a226:	(bad)  
1000a227:	jmp    FWORD PTR [esi]
1000a229:	(bad)  
1000a22a:	(bad)  
1000a22b:	jmp    FWORD PTR [esi]
1000a22d:	(bad)  
1000a22e:	(bad)  
1000a22f:	(bad)  
1000a230:	jns    0x1000a210
1000a232:	(bad)  
1000a233:	call   edi
1000a235:	cld    
1000a236:	(bad)  
1000a237:	call   ebp
1000a239:	cld    
1000a23a:	(bad)  
1000a23b:	call   ecx
1000a23d:	cld    
1000a23e:	(bad)  
1000a23f:	dec    ebx
1000a241:	sti    
1000a242:	(bad)  
1000a243:	inc    ebx
1000a245:	sti    
1000a246:	(bad)  
1000a247:	(bad)  
1000a248:	mov    ebx,0xb3fffdfa
1000a24d:	stc    
1000a24e:	std    
1000a24f:	jmp    DWORD PTR [edx-0x2e]
1000a252:	cld    
1000a253:	jmp    FWORD PTR [ecx]
1000a255:	scas   eax,DWORD PTR es:[edi]
1000a256:	sti    
1000a257:	jmp    FWORD PTR [eax]
1000a259:	lods   al,BYTE PTR ds:[esi]
1000a25a:	sti    
1000a25b:	jmp    FWORD PTR [eax]
1000a25d:	stos   BYTE PTR es:[edi],al
1000a25e:	cli    
1000a25f:	jmp    DWORD PTR [edi]
1000a261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000a262:	cli    
1000a263:	jmp    DWORD PTR [esi]
1000a265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a266:	cli    
1000a267:	jmp    DWORD PTR [esi]
1000a269:	mov    ds:0xa126fffa,eax
1000a26e:	stc    
1000a26f:	jmp    DWORD PTR [ecx+ebx*4]
1000a272:	clc    
1000a273:	jmp    DWORD PTR [ecx]
1000a275:	mov    esi,ebp
1000a277:	mov    esi,0x7000000
	...
1000a28c:	and    cl,BYTE PTR [esi+esi*8-0x971dde9]
1000a293:	imul   BYTE PTR [esi+edi*4]
1000a296:	std    
1000a297:	jmp    FWORD PTR [eax+eax*8]
1000a29a:	std    
1000a29b:	jmp    FWORD PTR ds:0x2dfffdc2
1000a2a1:	(bad)  
1000a2a2:	std    
1000a2a3:	jmp    FWORD PTR ds:0x2dfffec5
1000a2a9:	(bad)  
1000a2ac:	sub    eax,0x2dfffec5
1000a2b1:	(bad)  
1000a2b2:	std    
1000a2b3:	push   DWORD PTR [esi-0x24]
1000a2b6:	std    
1000a2b7:	dec    esi
1000a2b9:	cld    
1000a2ba:	(bad)  
1000a2bb:	dec    ebx
1000a2bd:	sti    
1000a2be:	(bad)  
1000a2bf:	inc    ebp
1000a2c1:	sti    
1000a2c2:	(bad)  
1000a2c3:	(bad)  
1000a2c4:	mov    edi,0xb7fffefa
1000a2c9:	stc    
1000a2ca:	std    
1000a2cb:	jmp    DWORD PTR [esi-0x2d]
1000a2ce:	cld    
1000a2cf:	jmp    FWORD PTR [ecx]
1000a2d1:	mov    cl,0xfb
1000a2d3:	jmp    FWORD PTR [ecx]
1000a2d5:	scas   eax,DWORD PTR es:[edi]
1000a2d6:	sti    
1000a2d7:	jmp    FWORD PTR [eax]
1000a2d9:	lods   al,BYTE PTR ds:[esi]
1000a2da:	sti    
1000a2db:	jmp    DWORD PTR [edi]
1000a2dd:	test   eax,0xa727fffa
1000a2e2:	cli    
1000a2e3:	jmp    DWORD PTR [esi]
1000a2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a2e6:	cli    
1000a2e7:	jmp    DWORD PTR [esi]
1000a2e9:	mov    ds:0xa126fffa,eax
1000a2ee:	stc    
1000a2ef:	jmp    DWORD PTR [edx]
1000a2f1:	mov    ?,ebp
1000a2f3:	icebp  
1000a2f4:	sbb    eax,0x45d278
1000a2f9:	add    BYTE PTR [eax],al
1000a2fb:	add    eax,DWORD PTR [eax]
	...
1000a30d:	add    BYTE PTR [eax],al
1000a30f:	add    BYTE PTR [ebx],ah
1000a311:	(bad)  
1000a312:	mul    BYTE PTR [esi-0x5065dda]
1000a318:	sub    al,0xbf
1000a31a:	std    
1000a31b:	jmp    FWORD PTR [ecx+eax*8]
1000a31e:	std    
1000a31f:	jmp    FWORD PTR ds:0x2dfffdc2
1000a325:	ret    
1000a326:	std    
1000a327:	jmp    FWORD PTR ds:0x2dfffdc3
1000a32d:	ret    
1000a32e:	std    
1000a32f:	jmp    FWORD PTR ds:0x2cfffdc2
1000a335:	sar    ebp,0xff
1000a338:	jno    0x1000a314
1000a33a:	std    
1000a33b:	inc    ebx
1000a33d:	sti    
1000a33e:	(bad)  
1000a33f:	(bad)  
1000a340:	mov    edi,0xb9fffefa
1000a345:	stc    
1000a346:	std    
1000a347:	jmp    DWORD PTR [edi-0x2c]
1000a34a:	cld    
1000a34b:	jmp    FWORD PTR [edx]
1000a34d:	mov    bl,0xfc
1000a34f:	jmp    FWORD PTR [ecx]
1000a351:	mov    cl,0xfb
1000a353:	jmp    FWORD PTR [eax]
1000a355:	scas   al,BYTE PTR es:[edi]
1000a356:	sti    
1000a357:	jmp    FWORD PTR [eax]
1000a359:	stos   DWORD PTR es:[edi],eax
1000a35a:	sti    
1000a35b:	jmp    DWORD PTR [edi]
1000a35d:	test   eax,0xa727fffa
1000a362:	cli    
1000a363:	jmp    DWORD PTR [esi]
1000a365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000a366:	cli    
1000a367:	jmp    DWORD PTR [esi]
1000a369:	mov    ds:0x9624fffa,al
1000a36e:	idiv   esi
1000a370:	and    DWORD PTR [edx+0xc4f0],ecx
1000a376:	add    BYTE PTR [esi],al
	...
1000a390:	and    cl,BYTE PTR [esi+esi*8-0x971ddf6]
1000a397:	lock sub edi,DWORD PTR [eax-0x40d30004]
1000a39e:	std    
1000a39f:	jmp    FWORD PTR [eax+eax*8]
1000a3a2:	std    
1000a3a3:	jmp    FWORD PTR [ecx+eax*8]
1000a3a6:	std    
1000a3a7:	jmp    FWORD PTR ds:0x2cfffdc1
1000a3ad:	sar    ebp,0xff
1000a3b0:	sub    al,0xc0
1000a3b2:	std    
1000a3b3:	jmp    FWORD PTR [edi+edi*4]
1000a3b6:	std    
1000a3b7:	jmp    FWORD PTR [edi*4-0x28930003]
1000a3be:	std    
1000a3bf:	push   DWORD PTR [edi+0x67fffdf9]
1000a3c5:	aad    0xfc
1000a3c7:	jmp    FWORD PTR [edx]
1000a3c9:	mov    ch,0xfc
1000a3cb:	jmp    FWORD PTR [ecx]
1000a3cd:	mov    dl,0xfb
1000a3cf:	jmp    FWORD PTR [ecx]
1000a3d1:	mov    al,0xfb
1000a3d3:	jmp    FWORD PTR [eax]
1000a3d5:	lods   eax,DWORD PTR ds:[esi]
1000a3d6:	sti    
1000a3d7:	jmp    FWORD PTR [eax]
1000a3d9:	stos   DWORD PTR es:[edi],eax
1000a3da:	sti    
1000a3db:	jmp    DWORD PTR [edi]
1000a3dd:	test   al,0xfa
1000a3df:	jmp    DWORD PTR [edi]
1000a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
1000a3e2:	cli    
1000a3e3:	jmp    DWORD PTR [esi]
1000a3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1000a3e6:	cli    
1000a3e7:	jmp    DWORD PTR [esi]
1000a3e9:	mov    al,ds:0x8c22fff9
1000a3ee:	idiv   ch
1000a3f0:	sbb    DWORD PTR [esi-0x4d],esp
1000a3f3:	sbb    al,BYTE PTR [eax]
1000a3f5:	add    BYTE PTR [eax],al
1000a3f7:	add    DWORD PTR [eax],eax
	...
1000a411:	add    BYTE PTR [eax],al
1000a413:	add    BYTE PTR [edx],ah
1000a415:	mov    esi,?
1000a417:	push   ss
1000a418:	and    cl,BYTE PTR [esi-0x46d4080a]
1000a41e:	cld    
1000a41f:	jmp    FWORD PTR [esi+edi*4]
1000a422:	std    
1000a423:	jmp    FWORD PTR [edi+edi*4]
1000a426:	std    
1000a427:	jmp    FWORD PTR [edi+edi*4]
1000a42a:	std    
1000a42b:	jmp    FWORD PTR [edi+edi*4]
1000a42e:	std    
1000a42f:	jmp    FWORD PTR [esi+edi*4]
1000a432:	std    
1000a433:	jmp    FWORD PTR [edi*4-0x44d40003]
1000a43a:	std    
1000a43b:	jmp    FWORD PTR [ebx]
1000a43d:	mov    edx,0xd566fffc
1000a442:	cld    
1000a443:	jmp    FWORD PTR [edx]
1000a445:	mov    dh,0xfc
1000a447:	jmp    FWORD PTR [edx]
1000a449:	mov    bl,0xfc
1000a44b:	jmp    FWORD PTR [ecx]
1000a44d:	mov    cl,0xfb
1000a44f:	jmp    FWORD PTR [ecx]
1000a451:	scas   eax,DWORD PTR es:[edi]
1000a452:	sti    
1000a453:	jmp    FWORD PTR [eax]
1000a455:	lods   al,BYTE PTR ds:[esi]
1000a456:	sti    
1000a457:	jmp    FWORD PTR [eax]
1000a459:	stos   BYTE PTR es:[edi],al
1000a45a:	cli    
1000a45b:	jmp    DWORD PTR [edi]
1000a45d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000a45e:	cli    
1000a45f:	jmp    DWORD PTR [edi]
1000a461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000a462:	cli    
1000a463:	jmp    DWORD PTR [esi]
1000a465:	mov    ds:0x8e22fffa,al
1000a46a:	cmc    
1000a46b:	repz sbb al,0x74
1000a46e:	int3   
1000a46f:	add    BYTE PTR cs:[eax],al
1000a472:	add    BYTE PTR [edx],al
	...
1000a498:	and    cl,BYTE PTR [esi+esi*8-0x971dd7c]
1000a49f:	imul   DWORD PTR [edx]
1000a4a1:	mov    eax,0xbc2bfffc
1000a4a6:	std    
1000a4a7:	jmp    FWORD PTR [esp+edi*4]
1000a4aa:	std    
1000a4ab:	jmp    FWORD PTR [ebx]
1000a4ad:	mov    esp,0xbc2bfffd
1000a4b2:	std    
1000a4b3:	jmp    FWORD PTR [ebx]
1000a4b5:	mov    ebx,0xb92bfffc
1000a4ba:	cld    
1000a4bb:	jmp    FWORD PTR [ebx]
1000a4bd:	mov    eax,0xb62afffc
1000a4c2:	cld    
1000a4c3:	jmp    FWORD PTR [edx]
1000a4c5:	mov    ah,0xfc
1000a4c7:	jmp    FWORD PTR [ecx]
1000a4c9:	mov    dl,0xfb
1000a4cb:	jmp    FWORD PTR [ecx]
1000a4cd:	mov    al,0xfb
1000a4cf:	jmp    FWORD PTR [eax]
1000a4d1:	lods   eax,DWORD PTR ds:[esi]
1000a4d2:	sti    
1000a4d3:	jmp    FWORD PTR [eax]
1000a4d5:	stos   DWORD PTR es:[edi],eax
1000a4d6:	sti    
1000a4d7:	jmp    DWORD PTR [edi]
1000a4d9:	test   eax,0xa727fffa
1000a4de:	cli    
1000a4df:	jmp    DWORD PTR [esi]
1000a4e1:	mov    ds:0x8e22fffa,al
1000a4e6:	cmc    
1000a4e7:	repz and DWORD PTR [ecx+0x91f0],ecx
1000a4ee:	add    BYTE PTR [edx],al
	...
1000a51c:	and    cl,BYTE PTR [esi+esi*8-0x972ddea]
1000a523:	hlt    
1000a524:	mov    eax,es:0xba2bfbf9
1000a52a:	cld    
1000a52b:	jmp    FWORD PTR [ebx]
1000a52d:	mov    edx,0xb92bfffc
1000a532:	cld    
1000a533:	jmp    FWORD PTR [ebx]
1000a535:	mov    eax,0xb72afffc
1000a53a:	cld    
1000a53b:	jmp    FWORD PTR [edx]
1000a53d:	mov    dh,0xfc
1000a53f:	jmp    FWORD PTR [edx]
1000a541:	mov    ah,0xfc
1000a543:	jmp    FWORD PTR [ecx]
1000a545:	mov    dl,0xfb
1000a547:	jmp    FWORD PTR [ecx]
1000a549:	mov    al,0xfb
1000a54b:	jmp    FWORD PTR [eax]
1000a54d:	scas   al,BYTE PTR es:[edi]
1000a54e:	sti    
1000a54f:	jmp    FWORD PTR [eax]
1000a551:	lods   al,BYTE PTR ds:[esi]
1000a552:	sti    
1000a553:	jmp    FWORD PTR [eax]
1000a555:	stos   BYTE PTR es:[edi],al
1000a556:	cli    
1000a557:	jmp    DWORD PTR [edi]
1000a559:	test   al,0xfa
1000a55b:	jmp    DWORD PTR [eax+ebx*4]
1000a55e:	clc    
1000a55f:	cld    
1000a560:	and    cl,BYTE PTR [esi+esi*8-0x2080e005]
1000a567:	sub    al,BYTE PTR [eax]
1000a569:	add    BYTE PTR [eax],al
1000a56b:	add    DWORD PTR [eax],eax
	...
1000a59d:	add    BYTE PTR [eax],al
1000a59f:	add    BYTE PTR [edx],ah
1000a5a1:	mov    esi,?
1000a5a3:	or     eax,0xa9f68f23
1000a5a8:	and    ecx,DWORD PTR [edi-0x5ad80b0a]
1000a5ae:	cli    
1000a5af:	jmp    FWORD PTR [ecx]
1000a5b1:	mov    ah,0xfc
1000a5b3:	jmp    FWORD PTR [edx]
1000a5b5:	mov    dh,0xfc
1000a5b7:	jmp    FWORD PTR [edx]
1000a5b9:	mov    ch,0xfc
1000a5bb:	jmp    FWORD PTR [edx]
1000a5bd:	mov    bl,0xfc
1000a5bf:	jmp    FWORD PTR [ecx]
1000a5c1:	mov    dl,0xfb
1000a5c3:	jmp    FWORD PTR [ecx]
1000a5c5:	mov    al,0xfb
1000a5c7:	jmp    FWORD PTR [eax]
1000a5c9:	scas   al,BYTE PTR es:[edi]
1000a5ca:	sti    
1000a5cb:	jmp    FWORD PTR [eax]
1000a5cd:	lods   al,BYTE PTR ds:[esi]
1000a5ce:	sti    
1000a5cf:	jmp    FWORD PTR [eax]
1000a5d1:	test   al,0xfa
1000a5d3:	jmp    DWORD PTR ds:0x22fff89d
1000a5d9:	mov    ?,esi
1000a5db:	repz and cl,BYTE PTR [esp+esi*8-0x2482e14d]
1000a5e3:	adc    al,BYTE PTR [eax]
	...
1000a625:	add    BYTE PTR [eax],al
1000a627:	add    BYTE PTR [edx],ah
1000a629:	mov    esi,?
1000a62b:	sbb    eax,0xa2f68f23
1000a630:	and    cl,BYTE PTR [ebp-0x6ddc0b0a]
1000a636:	div    eax
1000a638:	and    al,0x99
1000a63a:	div    esp
1000a63c:	and    eax,0x25fff89e
1000a641:	sahf   
1000a642:	clc    
1000a643:	jmp    DWORD PTR ds:0x24fff89d
1000a649:	xchg   edi,eax
1000a64a:	div    ebp
1000a64c:	and    edx,DWORD PTR [ecx-0x72dd0f0a]
1000a652:	idiv   al
1000a654:	and    cl,BYTE PTR [ebp-0x7adf540c]
1000a65a:	jmp    0x1000a687
	...
1000a6b3:	add    BYTE PTR [edx],ah
1000a6b5:	mov    esi,?
1000a6b7:	cmp    BYTE PTR [edx],ah
1000a6b9:	mov    esi,?
1000a6bb:	bound  esp,QWORD PTR [edx]
1000a6bd:	mov    esi,?
1000a6bf:	and    BYTE PTR [edx],0x8c
1000a6c2:	test   BYTE PTR [eax-0x7f0973de],0x22
1000a6c9:	mov    esi,?
1000a6cb:	and    cl,BYTE PTR gs:[esi+esi*8+0x3b]
	...
1000a707:	add    bh,bh
1000a709:	(bad)  
1000a70a:	(bad)  
1000a70b:	(bad)  
1000a70c:	(bad)  
1000a70d:	(bad)  
1000a70e:	(bad)  
1000a70f:	(bad)  
1000a710:	inc    eax
1000a712:	pop    es
1000a713:	(bad)  
1000a714:	inc    DWORD PTR [eax]
1000a716:	add    edi,edi
1000a718:	cld    
1000a719:	add    BYTE PTR [eax],al
1000a71b:	jg     0x1000a715
1000a71d:	add    BYTE PTR [eax],al
1000a71f:	aas    
1000a720:	lock add BYTE PTR [eax],al
1000a723:	pop    ds
1000a724:	loopne 0x1000a726
1000a726:	add    BYTE PTR [edi],cl
1000a728:	loopne 0x1000a72a
1000a72a:	add    BYTE PTR [edi],cl
1000a72c:	rol    BYTE PTR [eax],0x0
1000a72f:	pop    es
1000a730:	rol    BYTE PTR [eax],0x0
1000a733:	pop    es
1000a734:	add    BYTE PTR [eax],0x0
1000a737:	add    eax,DWORD PTR [eax-0x7ffd0000]
1000a73d:	add    BYTE PTR [eax],al
1000a73f:	add    eax,DWORD PTR [eax]
1000a741:	add    BYTE PTR [eax],al
1000a743:	add    eax,DWORD PTR [eax]
1000a745:	add    BYTE PTR [eax],al
1000a747:	add    DWORD PTR [eax],eax
1000a749:	add    BYTE PTR [eax],al
1000a74b:	add    DWORD PTR [eax],eax
1000a74d:	add    BYTE PTR [eax],al
1000a74f:	add    DWORD PTR [eax],eax
1000a751:	add    BYTE PTR [eax],al
1000a753:	add    eax,DWORD PTR [eax]
1000a755:	add    BYTE PTR [eax],al
1000a757:	add    eax,DWORD PTR [eax]
1000a759:	add    BYTE PTR [eax],al
1000a75b:	add    eax,DWORD PTR [eax-0x7ffd0000]
1000a761:	add    BYTE PTR [eax],al
1000a763:	pop    es
1000a764:	add    BYTE PTR [eax],0x0
1000a767:	pop    es
1000a768:	rol    BYTE PTR [eax],0x0
1000a76b:	xadd   BYTE PTR [eax],al
1000a76e:	add    BYTE PTR [edi],cl
1000a770:	loopne 0x1000a772
1000a772:	add    BYTE PTR [edi],bl
1000a774:	lock add BYTE PTR [eax],al
1000a777:	aas    
1000a778:	clc    
1000a779:	add    BYTE PTR [eax],al
1000a77b:	jg     0x1000a779
1000a77d:	add    BYTE PTR [ecx],al
1000a77f:	(bad)  
1000a780:	inc    DWORD PTR [eax]
1000a782:	pop    es
1000a783:	(bad)  
1000a784:	jmp    eax
1000a786:	aas    
1000a787:	jmp    FWORD PTR [eax]
1000a789:	add    BYTE PTR [eax],al
1000a78b:	add    BYTE PTR [eax],dl
1000a78d:	add    BYTE PTR [eax],al
1000a78f:	add    BYTE PTR [eax],ah
1000a791:	add    BYTE PTR [eax],al
1000a793:	add    BYTE PTR [ecx],al
1000a795:	add    BYTE PTR [eax],ah
1000a797:	add    BYTE PTR [eax],al
1000a799:	add    BYTE PTR [eax],al
1000a79b:	add    BYTE PTR [eax+0x4],al
	...
1000a7fe:	add    BYTE PTR [eax],al
1000a800:	sbb    BYTE PTR [eax-0x77e7e50a],cl
1000a806:	test   BYTE PTR [ecx-0x3d0976e7],0x19
1000a80d:	mov    esi,esi
1000a80f:	aad    0x19
1000a811:	mov    esi,esi
1000a813:	ret    0x8818
1000a816:	test   BYTE PTR [ecx+0x20f68818],0x0
	...
1000a839:	add    BYTE PTR [eax],al
1000a83b:	add    BYTE PTR [ecx],bl
1000a83d:	mov    esi,esi
1000a83f:	sahf   
1000a840:	sbb    DWORD PTR [ecx-0x71e10a0a],ecx
1000a846:	idiv   eax
1000a848:	and    DWORD PTR [ecx-0x6edd0008],edx
1000a84e:	clc    
1000a84f:	jmp    DWORD PTR [ecx]
1000a851:	nop
1000a852:	clc    
1000a853:	call   FWORD PTR [esi]
1000a855:	(bad)  
1000a856:	idiv   edx
1000a858:	sbb    DWORD PTR [ecx-0x76e60c0a],ecx
1000a85e:	neg    BYTE PTR [esi+0x0]
	...
1000a878:	sbb    DWORD PTR [ecx-0x71e2470a],ecx
1000a87e:	div    esp
1000a880:	es fwait
1000a882:	cli    
1000a883:	jmp    DWORD PTR [esi]
1000a885:	call   0xfff9:0x9926fffa
1000a88c:	es xchg edi,eax
1000a88e:	stc    
1000a88f:	jmp    DWORD PTR ds:0x25fff995
1000a895:	xchg   esp,eax
1000a896:	stc    
1000a897:	jmp    DWORD PTR ds:0x1dfff994
1000a89d:	mov    edi,?
1000a89f:	hlt    
1000a8a0:	sbb    DWORD PTR [ecx+0xbff6],ecx
	...
1000a8b2:	add    BYTE PTR [eax],al
1000a8b4:	sbb    DWORD PTR [ecx-0x6fe2650a],ecx
1000a8ba:	div    ebx
1000a8bc:	daa    
1000a8bd:	mov    al,ds:0xa127fffa
1000a8c2:	cli    
1000a8c3:	jmp    DWORD PTR [edi]
1000a8c5:	mov    al,ds:0x9f27fffa
1000a8ca:	cli    
1000a8cb:	jmp    DWORD PTR [esi]
1000a8cd:	pushf  
1000a8ce:	cli    
1000a8cf:	jmp    DWORD PTR [esi]
1000a8d1:	cdq    
1000a8d2:	cli    
1000a8d3:	jmp    DWORD PTR ds:0x25fff997
1000a8d9:	xchg   esp,eax
1000a8da:	stc    
1000a8db:	jmp    DWORD PTR ds:0x1dfff994
1000a8e1:	mov    edi,?
1000a8e3:	hlt    
1000a8e4:	sbb    DWORD PTR [ecx+0x9af6],ecx
1000a8ea:	add    BYTE PTR [eax],al
1000a8ec:	add    BYTE PTR [eax],al
1000a8ee:	add    BYTE PTR [eax],al
1000a8f0:	sbb    BYTE PTR [eax-0x76e7f40a],cl
1000a8f6:	idiv   dl
1000a8f8:	sub    BYTE PTR [ebp-0x58d70005],ah
1000a8fe:	sti    
1000a8ff:	jmp    FWORD PTR [ecx]
1000a901:	test   al,0xfb
1000a903:	jmp    FWORD PTR [eax]
1000a905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000a906:	sti    
1000a907:	inc    DWORD PTR [ecx+0x7bfffcf5]
1000a90d:	hlt    
1000a90e:	cld    
1000a90f:	push   DWORD PTR [ebp-0xc]
1000a912:	cld    
1000a913:	jmp    DWORD PTR [esi]
1000a915:	call   0xfff9:0x9725fffa
1000a91c:	and    eax,0x25fff994
1000a921:	xchg   esp,eax
1000a922:	stc    
1000a923:	call   FWORD PTR [ecx]
1000a925:	mov    esi,esi
1000a927:	neg    DWORD PTR [eax]
1000a929:	mov    dh,dh
1000a92b:	adc    al,0x0
1000a92d:	add    BYTE PTR [eax],al
1000a92f:	add    BYTE PTR [eax],bl
1000a931:	mov    dh,dh
1000a933:	test   BYTE PTR [edi],bl
1000a935:	xchg   ebp,eax
1000a936:	clc    
1000a937:	imul   DWORD PTR [ecx]
1000a939:	lods   al,BYTE PTR ds:[esi]
1000a93a:	sti    
1000a93b:	jmp    FWORD PTR [edx]
1000a93d:	scas   eax,DWORD PTR es:[edi]
1000a93e:	cld    
1000a93f:	jmp    FWORD PTR [edx]
1000a941:	mov    al,0xfc
1000a943:	jmp    FWORD PTR [edx]
1000a945:	scas   eax,DWORD PTR es:[edi]
1000a946:	cld    
1000a947:	dec    DWORD PTR [eax-0x7d00020a]
1000a94d:	cmc    
1000a94e:	cld    
1000a94f:	(bad)  
1000a950:	jl     0x1000a946
1000a952:	cld    
1000a953:	jmp    DWORD PTR [edi]
1000a955:	sahf   
1000a956:	cli    
1000a957:	jmp    DWORD PTR [esi]
1000a959:	cdq    
1000a95a:	cli    
1000a95b:	jmp    DWORD PTR ds:0x25fff995
1000a961:	xchg   esp,eax
1000a962:	stc    
1000a963:	call   FWORD PTR ds:0x18f7f78d
1000a969:	mov    dh,dh
1000a96b:	test   BYTE PTR [eax],al
1000a96d:	add    BYTE PTR [eax],al
1000a96f:	add    BYTE PTR [ecx],bl
1000a971:	mov    dh,dh
1000a973:	mov    ebx,0xfff9a224
1000a978:	sub    dh,BYTE PTR [ebx-0x49d40004]
1000a97e:	cld    
1000a97f:	jmp    FWORD PTR [ebx]
1000a981:	mov    bh,0xfc
1000a983:	jmp    FWORD PTR [ebx]
1000a985:	mov    dh,0xfc
1000a987:	call   DWORD PTR [eax-0x76000209]
1000a98d:	idiv   ch
1000a98f:	inc    DWORD PTR [ebx+0x27fffcf5]
1000a995:	mov    ds:0x9c26fffa,al
1000a99a:	cli    
1000a99b:	jmp    DWORD PTR [esi]
1000a99d:	xchg   edi,eax
1000a99e:	stc    
1000a99f:	jmp    DWORD PTR ds:0x21fff994
1000a9a5:	nop
1000a9a6:	clc    
1000a9a7:	call   FWORD PTR [ecx]
1000a9a9:	mov    esi,esi
1000a9ab:	mov    ebx,0x0
1000a9b0:	sbb    DWORD PTR [ebx-0x57da330a],ecx
1000a9b6:	cli    
1000a9b7:	jmp    FWORD PTR [ebx]
1000a9b9:	mov    ecx,0xbd2cfffd
1000a9be:	std    
1000a9bf:	jmp    DWORD PTR [ebx-0x61000107]
1000a9c5:	clc    
1000a9c6:	(bad)  
1000a9c7:	call   DWORD PTR [edi-0x6e000108]
1000a9cd:	idiv   ebp
1000a9cf:	dec    DWORD PTR [edx-0x7b00020a]
1000a9d5:	cmc    
1000a9d6:	cld    
1000a9d7:	(bad)  
1000a9d8:	jle    0x1000a9cf
1000a9da:	cld    
1000a9db:	jmp    DWORD PTR [esi]
1000a9dd:	cdq    
1000a9de:	stc    
1000a9df:	jmp    DWORD PTR ds:0x22fff995
1000a9e5:	xchg   ecx,eax
1000a9e6:	clc    
1000a9e7:	call   FWORD PTR [ecx]
1000a9e9:	mov    esi,esi
1000a9eb:	iret   
1000a9ec:	add    BYTE PTR [eax],al
1000a9ee:	add    BYTE PTR [eax],al
1000a9f0:	sbb    DWORD PTR [ebx-0x5adb4e0a],ecx
1000a9f6:	cli    
1000a9f7:	jmp    FWORD PTR [edi*4-0x3dd20003]
1000a9fe:	std    
1000a9ff:	jmp    FWORD PTR ds:0xa4fffec4
1000aa05:	stc    
1000aa06:	(bad)  
1000aa07:	call   FWORD PTR [esi-0x67000108]
1000aa0d:	clc    
1000aa0e:	(bad)  
1000aa0f:	call   DWORD PTR [edx-0x73000209]
1000aa15:	idiv   ch
1000aa17:	jmp    DWORD PTR [edi]
1000aa19:	mov    al,ds:0x9a26fffa
1000aa1e:	cli    
1000aa1f:	jmp    DWORD PTR ds:0x21fff995
1000aa25:	nop
1000aa26:	clc    
1000aa27:	call   FWORD PTR [ecx]
1000aa29:	mov    esi,esi
1000aa2b:	mov    ebx,0x0
1000aa30:	sbb    BYTE PTR [eax-0x66e09d0a],cl
1000aa36:	clc    
1000aa37:	hlt    
1000aa38:	sub    al,0xbe
1000aa3a:	std    
1000aa3b:	jmp    FWORD PTR ds:0x2efffec4
1000aa41:	enter  0xfffe,0x2d
1000aa45:	(bad)  
1000aa46:	(bad)  
1000aa47:	jmp    DWORD PTR [ebp-0x60000107]
1000aa4d:	clc    
1000aa4e:	(bad)  
1000aa4f:	call   FWORD PTR [ecx+0x29fffef8]
1000aa55:	test   al,0xfb
1000aa57:	jmp    DWORD PTR [edi]
1000aa59:	mov    eax,ds:0x9b26fffa
1000aa5e:	cli    
1000aa5f:	jmp    DWORD PTR ds:0x1dfff996
1000aa65:	(bad)  
1000aa66:	div    edi
1000aa68:	sbb    BYTE PTR [eax+0x84f6],cl
1000aa6e:	add    BYTE PTR [eax],al
1000aa70:	add    BYTE PTR [eax],al
1000aa72:	add    BYTE PTR [eax],al
1000aa74:	sbb    BYTE PTR [eax-0x44d4020a],cl
1000aa7a:	std    
1000aa7b:	jmp    FWORD PTR ds:0x2dfffdc2
1000aa81:	(bad)  
1000aa82:	(bad)  
1000aa83:	jmp    FWORD PTR ds:0x2cfffdc2
1000aa89:	mov    ebp,0xf9a6fffd
1000aa8e:	(bad)  
1000aa8f:	jmp    FWORD PTR [edx]
1000aa91:	scas   eax,DWORD PTR es:[edi]
1000aa92:	cld    
1000aa93:	jmp    FWORD PTR [eax]
1000aa95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1000aa96:	sti    
1000aa97:	jmp    DWORD PTR [edi]
1000aa99:	mov    al,ds:0x9a26fffa
1000aa9e:	cli    
1000aa9f:	jmp    DWORD PTR [esp+edx*4]
1000aaa2:	stc    
1000aaa3:	call   FWORD PTR [eax]
1000aaa5:	mov    dh,dh
1000aaa7:	cld    
1000aaa8:	sbb    BYTE PTR [eax+0x8f6],cl
1000aaae:	add    BYTE PTR [eax],al
1000aab0:	add    BYTE PTR [eax],al
1000aab2:	add    BYTE PTR [eax],al
1000aab4:	sbb    DWORD PTR [edx-0x69e26e0a],ecx
1000aaba:	clc    
1000aabb:	icebp  
1000aabc:	sub    al,0xbd
1000aabe:	std    
1000aabf:	jmp    FWORD PTR [esi+edi*4]
1000aac2:	std    
1000aac3:	jmp    FWORD PTR [edi*4-0x46d40003]
1000aaca:	std    
1000aacb:	jmp    FWORD PTR [edx]
1000aacd:	mov    bl,0xfc
1000aacf:	jmp    FWORD PTR [ecx]
1000aad1:	lods   al,BYTE PTR ds:[esi]
1000aad2:	sti    
1000aad3:	jmp    FWORD PTR [eax]
1000aad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000aad6:	sti    
1000aad7:	jmp    DWORD PTR [edi]
1000aad9:	lahf   
1000aada:	cli    
1000aadb:	jmp    DWORD PTR [esi]
1000aadd:	cdq    
1000aade:	stc    
1000aadf:	call   FWORD PTR [esp+ecx*4]
1000aae2:	div    edx
1000aae4:	sbb    BYTE PTR [eax+0x91f6],cl
	...
1000aaf6:	add    BYTE PTR [eax],al
1000aaf8:	sbb    DWORD PTR [ebx-0x6ae2590a],ecx
1000aafe:	clc    
1000aaff:	icebp  
1000ab00:	sub    dh,BYTE PTR [ebp-0x49d40004]
1000ab06:	cld    
1000ab07:	jmp    FWORD PTR [edx]
1000ab09:	mov    bl,0xfc
1000ab0b:	jmp    FWORD PTR [edx]
1000ab0d:	scas   al,BYTE PTR es:[edi]
1000ab0e:	sti    
1000ab0f:	jmp    FWORD PTR [ecx]
1000ab11:	test   al,0xfb
1000ab13:	jmp    DWORD PTR [edi]
1000ab15:	mov    ds:0x9a25fffa,al
1000ab1a:	cli    
1000ab1b:	call   FWORD PTR [ebx]
1000ab1d:	mov    esi,edi
1000ab1f:	out    dx,eax
1000ab20:	sbb    DWORD PTR [ecx+0xa9f6],ecx
	...
1000ab3a:	add    BYTE PTR [eax],al
1000ab3c:	sbb    BYTE PTR [ecx-0x77e7720a],cl
1000ab42:	idiv   bl
1000ab44:	push   ds
1000ab45:	xchg   esi,eax
1000ab46:	clc    
1000ab47:	hlt    
1000ab48:	and    ebx,DWORD PTR [edi-0x61db0007]
1000ab4e:	stc    
1000ab4f:	jmp    DWORD PTR [edx]
1000ab51:	cdq    
1000ab52:	stc    
1000ab53:	call   FWORD PTR ds:0x18f4f790
1000ab59:	mov    dh,dh
1000ab5b:	clc    
1000ab5c:	sbb    BYTE PTR [eax+0x41f6],cl
	...
1000ab82:	add    BYTE PTR [eax],al
1000ab84:	sbb    BYTE PTR [eax-0x75e69d0a],cl
1000ab8a:	imul   BYTE PTR [ebp-0x3d0975e7]
1000ab90:	sbb    DWORD PTR [edx-0x77e74e0a],ecx
1000ab96:	mul    BYTE PTR [ebp+0x0]
	...
1000abad:	add    BYTE PTR [eax],al
1000abaf:	add    bh,bh
1000abb1:	inc    DWORD PTR [eax]
1000abb3:	add    al,dh
1000abb5:	pop    ds
1000abb6:	add    BYTE PTR [eax],al
1000abb8:	loopne 0x1000abc9
1000abba:	add    BYTE PTR [eax],al
1000abbc:	rol    BYTE PTR [edi],0x0
1000abbf:	add    BYTE PTR [eax+0x3],al
1000abc5:	add    DWORD PTR [eax],eax
1000abc7:	add    BYTE PTR [eax],al
1000abc9:	add    DWORD PTR [eax],eax
1000abcb:	add    BYTE PTR [eax],al
1000abcd:	add    DWORD PTR [eax],eax
1000abcf:	add    BYTE PTR [eax],al
1000abd1:	add    DWORD PTR [eax],eax
1000abd3:	add    BYTE PTR [eax],al
1000abd5:	add    DWORD PTR [eax],eax
1000abd7:	add    BYTE PTR [eax],al
1000abd9:	add    DWORD PTR [eax],eax
1000abdb:	add    BYTE PTR [eax-0x7fffffff],al
1000abe1:	add    eax,DWORD PTR [eax]
1000abe3:	add    al,al
1000abe5:	pop    es
1000abe6:	add    BYTE PTR [eax],al
1000abe8:	loopne 0x1000abf9
1000abea:	add    BYTE PTR [eax],al
1000abec:	clc    
1000abed:	aas    
1000abee:	add    BYTE PTR [eax],al
1000abf0:	add    BYTE PTR [eax],al
1000abf2:	add    DWORD PTR [eax],eax
1000abf4:	add    al,0x0
1000abf6:	add    BYTE PTR [eax],al
1000abf8:	add    BYTE PTR [eax],al
1000abfa:	add    DWORD PTR [eax],eax
1000abfc:	and    BYTE PTR [eax],al
1000abfe:	sub    ecx,DWORD PTR [ecx+0x0]
1000ac01:	add    BYTE PTR [ecx],al
1000ac03:	add    BYTE PTR [eax],dh
1000ac05:	xor    BYTE PTR [eax],al
1000ac07:	add    BYTE PTR [ecx],al
1000ac09:	add    BYTE PTR [eax],ah
1000ac0b:	add    BYTE PTR [eax+0x2000025],ch
1000ac11:	add    BYTE PTR [eax],ah
1000ac13:	and    BYTE PTR [eax],al
1000ac15:	add    BYTE PTR [ecx],al
1000ac17:	add    BYTE PTR [eax],ah
1000ac19:	add    BYTE PTR [eax+0x3000010],ch
1000ac1f:	add    BYTE PTR [eax],dl
1000ac21:	adc    BYTE PTR [eax],al
1000ac23:	add    BYTE PTR [ecx],al
1000ac25:	add    BYTE PTR [eax],ah
1000ac27:	add    BYTE PTR [eax+0x4],ch
1000ac2a:	add    BYTE PTR [eax],al
1000ac2c:	add    al,0x0
	...
